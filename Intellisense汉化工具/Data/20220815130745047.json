{"The base implementation of this method.":"该方法的基本实现。","Returns an array of objects representing all the custom attributes of this method.":"返回代表该方法的所有自定义属性的对象数组。","Specifies whether to search this member's inheritance chain to find the custom attributes.":"指定是否搜索此成员的继承链以找到自定义属性。"," objects representing the type parameters, if the method is generic, or ":"代表类型参数的对象，如果该方法是通用的，则","Returns an array of objects representing the attributes of this method that are of type ":"返回代表该方法属性的一系列对象","The hash code for this method.":"此方法的哈希代码。","The current instance of ":"当前实例的"," object for this method.":"此方法的对象。"," if the method is not generic.":"如果该方法不通用。","An argument list. This is an array of arguments with the same number, order, and type as the parameters of the method to be invoked. If there are no parameters this should be ":"一个参数列表。 这是一个参数数组，具有相同的数字，顺序和类型与要调用的方法的参数。 如果没有参数，应该是","An object that enables the binding, coercion of argument types, invocation of members, and retrieval of MemberInfo objects via reflection. If binder is ":"一个可以通过反射来实现绑定，强制性类型的绑定，强制性类型的胁迫和成员对象的检索。 如果是活页夹","The object on which to invoke the specified method. If the method is static, this parameter is ignored.":"调用指定方法的对象。 如果方法是静态的，则将忽略此参数。","Returns the implementation flags for the method.":"返回该方法的实现标志。"," objects that represent the parameters of the method.":"表示该方法参数的对象。","The implementation flags to set.":"要设置的实现标志。"," for the current thread is used. (Note that this is necessary to, for example, convert a ":"用于当前线程。 （请注意，这是例如转换A是必要的"," objects that represent the type arguments for the generic method.":"表示通用方法的类型参数的对象。","The return type of the method.":"该方法的返回类型。"," object that represents the return type of the method.":"代表该方法返回类型的对象。"," objects representing the parameter types.":"代表参数类型的对象。","Returns an object containing the return value of the invoked method.":"返回包含调用方法的返回值的对象。",", for the return type of the method. If the return type has no required custom modifiers, specify ":"，对于该方法的返回类型。 如果返回类型没有必需的自定义修饰符，请指定","An array of types representing the required custom modifiers, such as ":"一系列代表所需的自定义修饰符的类型，例如",", for the return type of the method. If the return type has no optional custom modifiers, specify ":"，对于该方法的返回类型。 如果返回类型没有可选的自定义修饰符，请指定"," representing the generic method constructed from the current generic method definition using the specified generic type arguments.":"代表使用指定的通用类型参数从当前通用方法定义构建的通用方法。","An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding parameter, such as ":"一系列类型数组。 每个类型的每个数组代表相应参数所需的自定义修饰符，例如"," instead of an array of types. If none of the parameters have required custom modifiers, specify ":"而不是一系列类型。 如果所有参数都不需要自定义修饰符，请指定","An array of types representing the optional custom modifiers, such as ":"代表可选自定义修饰符的一系列类型，例如",". If a particular parameter has no optional custom modifiers, specify ":"。 如果特定参数没有可选的自定义修饰符，请指定","The types of the parameters of the method.":"该方法的参数的类型。",". If a particular parameter has no required custom modifiers, specify ":"。 如果特定参数没有必需的自定义修饰符，请指定","An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding parameter, such as ":"一系列类型数组。 每个类型的每个数组代表相应参数的可选自定义修饰符，例如","Returns a string containing the name, attributes, method signature, exceptions, and local signature of this method followed by the current Microsoft intermediate language (MSIL) stream.":"返回包含该方法的名称，属性，方法签名，异常和本地签名的字符串，然后是当前的Microsoft中间语言（MSIL）流。"," for this method.":"对于此方法。"," instead of an array of types. If none of the parameters have optional custom modifiers, specify ":"而不是一系列类型。 如果所有参数都没有可选的自定义修饰符，请指定","Read-only. The type that declares this method.":"只读。 声明此方法的类型。"," if the method is generic; otherwise, ":"如果该方法是通用的； 否则，","Read-only. Retrieves the ":"只读。 检索","Read-only. The calling convention of the method.":"只读。 该方法的呼叫约定。"," if the local variables in this method should be zero initialized; otherwise ":"如果该方法中的局部变量应为零初始化； 否则"," object represents the definition of a generic method; otherwise, ":"对象表示通用方法的定义； 否则，","Read-only. The internal handle for the method. Use this handle to access the underlying metadata handle.":"只读。 该方法的内部手柄。 使用此手柄访问基础元数据手柄。"," is being defined.":"正在定义。","Read-only. The type used to obtain this method.":"只读。 用于获取此方法的类型。","The name of the method. ":"该方法的名称。"," cannot contain embedded nulls.":"不能包含嵌入式零件。"," in which the member represented by the current ":"其中成员由当前代表"," object that contains information about the return type.":"包含有关返回类型的信息的对象。","Read-only. Retrieves a string containing the simple name of this method.":"只读。 检索包含此方法简单名称的字符串。","The types of the method's parameters.":"该方法参数的类型。","The type attributes for the enumeration. The attributes are any bits defined by ":"枚举的类型属性。 属性是由","The attributes of the method. ":"该方法的属性。","Read-only. The custom attributes of the method's return type.":"只读。 该方法返回类型的自定义属性。"," instead of an array of types. If the global method has no arguments, or if none of the arguments have required custom modifiers, specify ":"而不是一系列类型。 如果全局方法没有参数，或者没有参数需要自定义修饰符，请指定"," must include ":"必须包括","The defined global method.":"定义的全局方法。","The underlying type for the enumeration. This must be a built-in integer type.":"枚举的基础类型。 这必须是内置整数类型。","The full path of the enumeration type. ":"枚举类型的完整路径。","An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding parameter. If a particular argument has no optional custom modifiers, specify ":"一系列类型数组。 每个类型的数组代表相应参数的可选自定义修饰符。 如果特定参数没有可选的自定义修饰符，请指定","The calling convention for the method.":"该方法的呼叫约定。"," cannot contain embedded null characters.":"不能包含嵌入式的空字符。","The binary large object (BLOB) of data.":"数据的二进制大对象（BLOB）。","The defined enumeration.":"定义的枚举。"," instead of an array of types. If the global method has no arguments, or if none of the arguments have optional custom modifiers, specify ":"而不是一系列类型。 如果全局方法没有参数，或者没有参数具有可选的自定义修饰符，请指定","The name of the DLL in which the ":"DLL的名称","The attributes for the field. The default is ":"该字段的属性。 默认值为","An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding parameter of the global method. If a particular argument has no required custom modifiers, specify ":"一系列类型数组。 每个类型的数组代表全局方法的相应参数所需的自定义修饰符。 如果特定参数没有必需的自定义修饰符，请指定","The method's return type.":"该方法的返回类型。","The name used to refer to the data. ":"用于参考数据的名称。"," method is defined.":"定义方法。","A field to reference the data.":"引用数据的字段。","The name of the entry point in the DLL.":"DLL中的入口点的名称。","The attributes of the method.":"该方法的属性。","The native calling convention.":"本地呼叫公约。","The attributes of the defined type.":"定义类型的属性。"," method. ":"方法。","The method's calling convention.":"该方法的调用约定。","The full path of the type, including the namespace. ":"该类型的完整路径，包括名称空间。","The total size of the type.":"类型的总尺寸。","The method's native character set.":"该方法的本地字符集。"," created with all of the requested attributes.":"使用所有请求的属性创建。","The size of the data field.":"数据字段的大小。","A private type with the specified name.":"带有指定名称的私人类型。","The defined ":"定义","The attribute to be associated with the type.":"与类型关联的属性。","The full path of the type. ":"类型的完整路径。","The packing size of the type.":"类型的包装大小。","The attributes for the field.":"该字段的属性。","The named method on an array class.":"数组类上的命名方法。","The type that the defined type extends.":"定义类型扩展的类型。","A field that has the specified name and binding attributes, or ":"具有指定名称和绑定属性的字段，或","An array that contains the custom attributes that are derived, at any level, from ":"一个包含从任何级别派生的自定义属性的数组","An array class.":"数组类。","The attributes to be associated with the type.":"与类型关联的属性。","An object that implements ":"实现的对象","The name of a method on the array class.":"数组类中的方法名称。","The list of interfaces that the type implements.":"类型实现的接口列表。","A combination of the ":"结合"," if the field does not exist.":"如果该字段不存在。",", containing properties related to this method.":"，包含与此方法相关的属性。","A method that is defined at the module level, and matches the specified criteria; or ":"在模块级别定义的方法，并匹配指定的标准； 或者"," bit flags used to control the search.":"用于控制搜索的位标志。"," to throw an exception if the type cannot be found; ":"如果找不到类型，请引发异常；","An array of fields that match the specified flags; the array is empty if no such fields exist.":"匹配指定标志的一系列字段； 如果不存在此类字段，则数组为空。","The specified type, if the type is declared in this module; otherwise, ":"指定的类型，如果该模块在此模块中声明了类型； 否则，","The parameter types of the method.":"该方法的参数类型。"," if that type is not generic.":"如果该类型不是通用的。"," if such a method does not exist.":"如果这种方法不存在。","The method name.":"方法名称。"," objects representing the generic type arguments of the method where the token is in scope, or ":"代表令牌范围中的方法的通用类型参数的对象，或","An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.":"用于使绑定的参数修饰符数组与已修改类型的参数签名一起工作。","An array that contains all the module-level methods that match ":"一个包含匹配的所有模块级方法的数组","An array that contains the types defined within the module that is reflected by this instance.":"包含该实例反映的模块中定义的类型的数组。","A metadata token that identifies a signature in the module.":"一个标识模块中签名的元数据令牌。"," if that method is not generic.":"如果该方法不是通用的。","The dynamic assembly that defined the current dynamic module.":"定义当前动态模块的动态组件。","When this method returns, a combination of the ":"当此方法返回时，","The type of custom attribute to test for.":"测试的自定义属性类型。","An array of bytes representing the signature blob.":"代表签名斑点的字节数组。"," object representing the field that is identified by the specified metadata token.":"代表由指定的元数据令牌标识的字段的对象。"," values indicating the nature of the code in the module.":"值表示模块中代码的性质。"," have been applied to this module; otherwise, ":"已应用于此模块； 否则，","A metadata token that identifies a type or member in the module.":"标识模块中类型或成员的元数据令牌。","The fully qualified module name.":"完全合格的模块名称。","A metadata token that identifies a string in the string heap of the module.":"元数据令牌在模块的字符串堆中标识一个字符串。"," if the object is a resource; otherwise, ":"如果对象是资源； 否则，","When this method returns, one of the ":"当此方法返回时，"," object representing the type or member that is identified by the specified metadata token.":"代表指定元数据令牌标识的类型或成员的对象。","A 32-bit integer representing the metadata stream version. The high-order two bytes represent the major version number, and the low-order two bytes represent the minor version number.":"一个代表元数据流版本的32位整数。 高阶两个字节代表主要版本编号，低阶两个字节代表次要版本编号。"," containing a string value from the metadata string heap.":"包含来自元数据字符串堆的字符串值。"," values indicating the platform targeted by the module.":"指示模块针对的平台的值。","A metadata token that identifies a field in the module.":"标识模块中字段的元数据令牌。"," that can be used to distinguish between two versions of a module.":"可以用来区分两个模块版本。","A metadata token that identifies a method or constructor in the module.":"在模块中识别方法或构造函数的元数据令牌。","A metadata token that identifies a type in the module.":"一个标识模块中类型的元数据令牌。"," objects representing the generic type arguments of the type where the token is in scope, or ":"代表令牌范围中的类型的通用类型参数的对象，或","The requested type, if the type is defined in this module; otherwise, ":"请求的类型，如果该模块中定义了类型； 否则，","Text that indicates that this is an in-memory module.":"表明这是一个内存模块的文本。"," object representing the method that is identified by the specified metadata token.":"代表由指定的元数据令牌识别的方法。"," object representing the type that is identified by the specified metadata token.":"代表指定元数据令牌标识的类型。",". Returns ":"。 返回","Indicates whether non-public methods should be returned in the ":"指示是否应在"," containing the matching public or non-public accessors, or an empty array if matching accessors do not exist on this property.":"包含匹配的公共或非公共访问者，或一个空数组，如果该属性上不存在匹配的访问者。","Optional index values for indexed properties. This value should be ":"索引属性的可选索引值。 这个值应该是"," array. ":"大批。",", walks up this property's inheritance chain to find the custom attributes.":"，走上该属性的继承链以找到自定义属性。","A byte BLOB representing the attribute.":"代表属性的字节斑点。"," and the get accessor is non-public, or if ":"get登录器是非公共的，或者如果"," for non-indexed properties.":"对于非索引属性。"," but no get accessors exist.":"但是不存在获取登录器。"," if non-public methods are to be included; otherwise, ":"如果包括非公共方法； 否则，","An array of all the custom attributes.":"所有自定义属性的数组。","An instance of a helper class that specifies the custom attribute to apply.":"指定要应用的自定义属性的帮助人类的实例。","The value of the specified indexed property.":"指定索引属性的值。"," object that represents the method that sets the property value.":"表示设置属性值的方法的对象。"," containing the parameters for the indexes.":"包含索引的参数。","An array of custom attributes identified by type.":"按类型标识的自定义属性数组。"," object that represents the culture for which the resource is to be localized. Note that if the resource is not localized for this culture, the ":"代表要本地资源的文化的对象。 请注意，如果该文化没有本地资源，则","The object whose property value will be set.":"将设置其属性值的对象。","Indicates whether the accessor should be returned if it is non-public. ":"指示如果登录器不公开，则应返回该登录器。",". A suitable invocation attribute must be specified. If a static member is to be invoked, the ":"。 必须指定合适的调用属性。 如果要调用静态成员，","An array of custom attributes defined on this reflected member, or ":"在此反射成员或","The new value for this property.":"该属性的新值。"," method will be called successively in search of a match. If this value is ":"方法将连续调用以搜索匹配。 如果此值为","The property's ":"该物业是"," flag of ":"国旗","Attributes of this property.":"此属性的属性。"," if no attributes are defined on this member.":"如果该成员未定义属性。"," method, or ":"方法或"," is obtained from the ":"从"," if this property can be read; otherwise, ":"如果可以阅读此属性； 否则，"," must be set.":"必须设置。","Indicates whether non-public get accessors should be returned. ":"指示是否应退回非公共Get登录器。","The property value for ":"属性值","The object whose property value will be returned.":"其属性值将返回的对象。"," objects using reflection. If ":"使用反射对象。 如果"," if this property can be written to; otherwise, ":"如果可以写入此属性； 否则，"," object representing the get accessor for this property, if ":"代表此属性的Get登录器的对象，如果",", the default binder is used.":"，使用默认的粘合剂。"," containing the name of this member.":"包含此成员的名称。","Specifies whether to walk up this property's inheritance chain to find the custom attributes.":"指定是否要走上此属性的继承链来查找自定义属性。"," object for the class that declares this member.":"宣布此成员的类的对象。","The type of the event.":"事件的类型。","The attributes of the constructor.":"构造函数的属性。"," is defined on this property; otherwise ":"在此属性上定义； 否则","The type of this property.":"此属性的类型。"," in which the type that declares the current property is defined.":"在其中定义了声明当前属性的类型。","The calling convention of the constructor.":"构造函数的呼叫约定。","The defined event.":"定义的事件。"," objects that can be used to define the constraints of the generic type parameters for the current type.":"可用于定义当前类型的通用类型参数的约束的对象。","The default value of this property.":"此属性的默认值。"," object through which this ":"对象通过","The name of the field. ":"字段的名称。","The parameter types of the constructor.":"构造函数的参数类型。"," object was obtained.":"获得了对象。","The blob of data.":"数据斑点。"," object that represents the method that gets the property value.":"代表获取属性值的方法的对象。","The type of the field.":"字段的类型。","The defined nested type.":"定义的嵌套类型。","The defined constructor.":"定义的构造函数。","The interface that this type implements.":"该类型实现的接口。"," representing the newly defined method.":"代表新定义的方法。","The attributes of the field.":"该领域的属性。"," object representing the attributes to be applied to the constructor.":"代表要应用于构造函数的属性的对象。","The attributes of the type.":"该类型的属性。","Returns the new ":"返回新的","An array of types representing the required custom modifiers for the field, such as ":"代表该字段所需的自定义修饰符的一系列类型，例如"," object representing the newly added method.":"代表新添加的方法的对象。","Returns the constructor.":"返回构造函数。","The type that the nested type extends.":"嵌套类型扩展的类型。"," object for this class.":"此类的对象。","The name of the event. ":"活动的名称。","An array of types representing the optional custom modifiers for the field, such as ":"代表该字段的可选自定义修饰符的一系列类型，例如","The defined method.":"定义的方法。"," cannot contain embedded null values.":"不能包含嵌入式的空值。","An object that represents this type.":"代表这种类型的对象。","The attributes of the event.":"事件的属性。","An array of names for the generic type parameters.":"通用类型参数的名称数组。","The interfaces that the nested type implements.":"嵌套类型实现的接口。","The method body to be used. This should be a ":"要使用的方法主体。 这应该是","The return type of the property.":"属性的返回类型。"," representing the defined ":"代表定义","The name of the event to search for.":"要搜索的事件的名称。","The constructed generic type whose method is returned.":"返回方法的构造通用类型。","The name of the property. ":"属性的名称。","The method whose declaration is to be used.":"要使用声明的方法。","The types of the parameters of the property.":"属性参数的类型。"," values that limits the search.":"限制搜索的值。","A method on the generic type definition of ":"关于通用类型定义的方法","The short name of the type. ":"类型的简短名称。","The attributes of the property.":"属性的属性。","The defined property.":"定义的属性。"," object representing the event declared or inherited by this type with the specified name, or ":"代表该类型所声明或继承的事件的对象，并用指定的名称或","Read-only. Returns ":"只读。 返回",", which specifies which method of ":"，指定哪种方法"," objects representing the events declared or inherited by this type that match the specified binding flags. An empty array is returned if there are no matching events.":"代表该类型声明或继承的事件的对象与指定的绑定标志匹配。 如果没有匹配事件，则返回一个空数组。",", for the return type of the property. If the return type has no required custom modifiers, specify ":"，对于属性的返回类型。 如果返回类型没有必需的自定义修饰符，请指定"," that represents the method that declared the current type, if the current type is a generic type parameter; otherwise, ":"如果当前类型是通用类型参数，则表示声明当前类型的方法； 否则，"," if this type is the same as the type ":"如果这种类型与类型相同"," object that represents the method of ":"代表方法的对象",", for the return type of the property. If the return type has no optional custom modifiers, specify ":"，对于属性的返回类型。 如果返回类型没有可选的自定义修饰符，请指定"," object representing the field declared or inherited by this type with the specified name and public or non-public modifier. If there are no matches then ":"代表该类型声明或继承的字段的对象，并用指定的名称以及公共或非公开修饰符。 如果没有匹配项",", or is a subtype of type ":"，或类型的亚型","Read-only. The type that declared this type.":"只读。 声明此类型的类型。","Returns a type initializer.":"返回类型的初始化器。",", which specifies a method belonging to the generic type definition of ":"，指定属于的方法属于的通用类型定义","The constructed generic type whose field is returned.":"返回字段的构造通用类型。"," object representing a one-dimensional array type whose element type is the current type, with a lower bound of zero.":"代表其元素类型的一维数组类型的对象，其当前类型为零。","Read-only. Retrieves the full path of this type.":"只读。 检索这种类型的完整路径。","The constructed generic type whose constructor is returned.":"返回其构造函数的构造通用类型。","An argument list. This is an array of Objects that contains the number, order, and type of the parameters of the member to be invoked. If there are no parameters this should be null.":"一个参数列表。 这是包含要调用的成员参数的数字，顺序和类型的对象数组。 如果没有参数，则应该为null。","A field on the generic type definition of ":"关于通用类型定义的字段"," object that represents a one-dimensional array of the current type.":"代表当前类型的一维数组的对象。"," values that describes the covariance and special constraints of the current generic type parameter.":"描述当前通用类型参数的协方差和特殊约束的值。"," with elements that represent the attributes associated with the arguments of the member to be invoked. A parameter has attributes associated with it in the metadata. They are used by various interoperability services. See the metadata specs for more details.":"用代表与要调用的成员参数相关的属性的元素。 一个参数具有与其在元数据中关联的属性。 它们由各种互操作服务使用。 有关更多详细信息，请参见元数据规格。","A constructor on the generic type definition of ":"关于通用类型定义的构造函数","If the current ":"如果电流",", which specifies which field of ":"，指定哪个字段"," object that represents the current type when passed as a ":"代表当前类型的对象作为一个",", which specifies which constructor of ":"，指定哪个构造函数"," object represents a generic type parameter, the position of the type parameter in the type parameter list of the generic type that declared the parameter; otherwise, undefined.":"对象表示一个通用类型参数，这是声明参数的通用类型的类型参数列表中类型参数的位置； 否则，未定义。"," object that represents the field of ":"代表字段的对象"," parameter (":"范围 （"," to return.":"返回。",", which specifies a field belonging to the generic type definition of ":"，指定属于属于的通用类型定义的字段"," for the current thread is used. (Note that this is necessary to, for example, convert a String that represents 1000 to a Double value, since 1000 is represented differently by different cultures.)":" 对于当前线程使用。 （请注意，这是必要的，例如，将表示1000的字符串转换为Double值，因为1000由不同的区域性表示不同。)","Read-only. Retrieves the GUID of this type.":"只读。 检索这种类型的GUID。"," objects. The elements of the array represent the type arguments of a generic type or the type parameters of a generic type definition.":"对象。 数组的元素表示通用类型的类型参数或通用类型定义的类型参数。"," object that represents the constructor of ":"代表构造函数的对象","An array of types to be substituted for the type parameters of the current generic type definition.":"一个类型的数组被替换为当前通用类型定义的类型参数。"," object represents a generic type parameter; otherwise, ":"对象表示通用类型参数； 否则，"," parameter and the current type represent the same type, or if the current type is in the inheritance hierarchy of ":"参数和当前类型表示相同的类型，或者当前类型在继承层次结构中"," representing the constructed type formed by substituting the elements of ":"代表通过代替元素形成的构造类型"," if the type represented by the current ":"如果当前表示的类型"," corresponding to ":"对应于"," object representing a generic type definition from which the current type can be obtained.":"代表可以从中获得当前类型的通用类型定义的对象。",", or if the current type is an interface that ":"，或者如果当前类型是一个接口",", which specifies a constructor belonging to the generic type definition of ":"，它指定属于的构造函数"," object is generic; otherwise, ":"对象是通用的； 否则，"," supports. ":"支持。"," of the interface for which the mapping is to be retrieved.":"要检索映射的接口。"," as in ":"如"," object represents a generic type definition; otherwise, ":"对象表示通用类型的定义； 否则，"," if none of these conditions are valid, or if ":"如果这些条件都没有有效，或者","Returns the requested interface mapping.":"返回请求的接口映射。","Returns an array of objects representing all the custom attributes of this type.":"返回代表此类型的所有自定义属性的对象数组。"," if the current type is security-critical or security-safe-critical; ":"如果当前类型是安全至关重要的或关键安全的；"," method has been called; otherwise, ":"方法被称为; 否则，"," for the type parameters of the current generic type.":"对于当前通用类型的类型参数。","The type of the member to return.":"返回成员的类型。","An array of custom attributes defined on the current type.":"当前类型定义的自定义属性数组。",", or an attribute derived from ":"，或从"," if the current type is security-safe-critical; ":"如果当前类型是安全安全至关重要的；"," object that represents the type of an unmanaged pointer to the current type.":"代表非托管指针类型的对象。",", as in ":"，如","Read-only. Retrieves the namespace where this ":"只读。 检索名称空间"," if the type is security-transparent; otherwise, ":"如果类型是安全性透明的； 否则，","The new base type.":"新的基本类型。",", is defined on this type; otherwise, ":"，在这种类型上定义； 否则，"," instance representing the hash value of the file content.":"代表文件内容的哈希值的实例。"," is defined.":"被定义为。"," instance representing the file name with its extension.":"实例代表及其扩展名的文件名。"," that is to be checked.":"那将要检查。","Read-only. Retrieves the dynamic module that contains this type definition.":"只读。 检索包含此类型定义的动态模块。","Read-only. The name of the type excluding the namespace.":"只读。 该类型的名称不包括名称空间。","Read-only. Retrieves the packing size of this type.":"只读。 检索这种类型的包装大小。","Read-only. Retrieves the dynamic assembly that contains this type definition.":"只读。 检索包含此类型定义的动态组件。"," name of this type.":"这种类型的名称。"," to replace them with a U+FFFD character.":"用U+FFFD字符代替它们。"," instance to compare with this one.":"实例与此相比。","Read-only. The type that was used to obtain this type.":"只读。 用于获得此类型的类型。","A pointer to the start of the memory block.":"指向内存块开始的指针。","A sequence of blobs.":"一系列斑点。","Read-only. The full name of this type qualified by the display name of the assembly.":"只读。 此类型的全名符合汇编的显示名称。"," if the data at the current position was not a valid compressed integer.":"如果当前位置的数据不是有效的压缩整数。","Read-only. Retrieves this type's total size.":"只读。 检索此类型的总尺寸。","Length in bytes of the memory block.":"内存块字节的长度。","The number of bytes successfully written from ":"从","Read-only.":"只读。"," to encode the reference as 16-bit integer, ":"为了将参考编码为16位整数，","Read-only. Retrieves the base type of this type.":"只读。 检索这种类型的基本类型。","The byte value to find.":"要查找的字节值。"," to encode as 32-bit integer.":"编码为32位整数。","The number of bytes to write.":"要写字节的数量。","Retrieves the MD5 message-digest algorithm.":"检索MD5消息挖掘算法。","Dimension lower bounds, or default(":"尺寸下限或默认值（","The index relative to the current position, or -1 if the byte is not found in the blob following the current position.":"相对于当前位置的索引，或-1如果在当前位置之后的斑点中未发现字节。","The name of the argument.":"论点的名称。","The number of occurences of ":"出现的数量","The byte array.":"字节阵列。",") to set all ":"）设置全部","The kind of the argument.":"那种论点。","A mask indicating that there is no hash algorithm.":"表示不存在散列算法的掩码。","The destination buffer the bytes read will be written to.":"目标缓冲区字节读取将被写入。"," to write.":" 写。"," lower bounds to 0.\n The array may be shorter than ":"下限为0。 \n  阵列可能比","The value of the argument.":"参数的价值。","Retrieves a revision of the Secure Hash Algorithm that corrects an unpublished flaw in SHA.":"检索对安全哈希算法的修订，该算法纠正了SHA中未出版的缺陷。","The offset in the destination buffer where the bytes read will be written.":"将编写字节读取的目标缓冲区中的偏移。","The byte array to write.":"字节阵列编写。","The argument kind.":"论点类型。","Called first, to encode fixed arguments.":"首先称为编码固定参数。","The array to write.":"编写的数组。","The number of dimensions in the array.":"数组中的尺寸数。","The value of the compressed integer that was read.":"读取的压缩整数的值。","The argument name.":"参数名称。","Called second, to encode named arguments.":"称为第二，用于编码命名参数。","The constant value to write.":"写入的恒定值。","The size of each dimension.":"每个维度的大小。","A boxed constant value. To avoid allocating the object use Read* methods directly.":"盒装的常数值。 为了避免分配对象使用直接读取*方法。","Use first, to encode fixed arguments.":"首先使用，编码固定的参数。","The lower-bound of each dimension.":"每个维度的下限。","An object containing the argument value.":"包含参数值的对象。","Use second, to encode named arguments.":"使用第二，用于编码命名参数。","Heap offset or table row number.":"堆偏移或表行号。"," if the encoding is invalid.":"如果编码无效。","An array of lower-bounds.":"一系列较低的人。","Encoder of the field type.":"字段类型的编码器。"," to encode the reference as a 16-bit integer; ":"将引用编码为16位整数；","The argument value.":"的参数值。","The number of dimensions.":"尺寸的数量。","A string value, or ":"字符串值，或 ","Number of local variables.":"本地变量的数量。"," to encode it as a 32-bit integer.":"将其编码为32位整数。","An array of sizes.":"一系列尺寸。","The fixed arguments.":"固定的参数。","The type code encoded in the serialized custom attribute value if the encoding is valid, or ":"如果编码有效或","Encoder of a sequence of local variables.":"局部变量序列的编码器。","Constant value.":"恒定值。"," if the file contains metadata, ":"如果文件包含元数据，","The handle when the encoding is valid. Otherwise, a handle where the ":"编码有效时的手柄。 否则，一个把手","The named arguments.":"指定的参数。","Calling convention.":"召集惯例。","Number of generic parameters.":"通用参数的数量。","The string.":"字符串。","An immutable array of arguments.":"一系列不变的论点。","Encoder of generic arguments.":"泛型参数的编码器。"," to encode unpaired surrogates as specified; ":" 编码指定的未配对代理; "," to encode an instance method signature, ":"要编码实例方法签名，","Number of arguments in the set.":"集合中的参数数量。","The number of dimensions in the array (shall be 1 or more).":"阵列中的尺寸数（应为1或更多）。","Encoder of subsequent modifiers.":"随后的修饰符编码器。"," if the value was read successfully. ":" 如果成功读取该值。 "," to encode a static method signature.":"编码静态方法签名。","Encoder of the arguments of the set.":"集合的参数编码器。","Clause kind.":"子句类型。","Dimension sizes. The array may be shorter than ":"尺寸。 阵列可能比"," etc.":"等等","Number of attributes in the set.":"集合中的属性数。","An encoder of the rest of the signature including return value and parameters.":"签名其余部分的编码器，包括返回值和参数。"," but not longer.":"但不再。","Try block start offset.":"尝试块开始偏移。","Branch instruction to encode.":"分支指令进行编码。","Permission set encoder.":"权限集编码器。","When this method returns, a custom attribute array type encoder used to encode the type of the vector.":"当此方法返回时，用于编码向量的类型的自定义属性数组类型编码器。","Try block length.":"尝试块长度。","Number of generic arguments.":"泛型参数的数量。","Label of the target location in instruction stream.":"指令流中目标位置的标签。"," to encode an instance property signature, ":"要编码一个实例属性签名，","When this method returns, a vector encoder used to encode the items of the vector.":"当此方法返回时，用来编码向量的项目的向量编码器。","A custom attribute value blob.":"自定义属性值斑点。","Handler start offset.":"处理程序开始偏移。","Label handle.":"标签手柄。","A vector encoder used to encode the items of a vector.":"用于编码向量的项目的向量编码器。"," to encode a static property signature.":" 来编码静态属性签名。","Index of the argument.":"论点的索引。","Handler length.":"处理程序长度。","A handle to the added custom attribute.":"添加自定义属性的句柄。","Handle of an entity in an aggregate metadata.":"总体元数据中实体的手柄。",", or nil if ":"，或nil如果","An encoder of the rest of the signature including return value and parameters, which has the same structure as method signature.":"签名其余部分的编码器，包括返回值和参数，其结构与方法签名相同。","Index of the local variable slot.":"局部变量插槽的索引。","An entity to attach the debug information to: a ":"将调试信息附加到："," is not ":"不是","The generation the entity is defined in.":"该实体被定义的一代。","Type encoder of the structured type represented by the type specification (it shall not encode a primitive type).":"由类型规范表示的结构化类型的类型编码器（不得编码原始类型）。","The information kind. Determines the structure of the ":"信息类型。 确定","Offset of the filter block, or 0 if the ":"过滤器块的抵消，或0","Label to mark.":"标记为标记。","Label marking the first instruction of the try block.":"标记TRY块的第一个指令。","Handle of the entity within the metadata ":"元数据中实体的手柄"," blob.":"斑点。","Encoder for the next clause.":"下一个子句的编码器。","Label marking the instruction immediately following the try block.":"标记在尝试块之后立即标记指令。","The custom debug information blob.":"自定义调试信息斑点。","Creates a new instance of the ":"创建一个新实例","The start offset of the User String heap. The cumulative size of User String heaps of all previous EnC generations should be 0 unless the metadata is EnC delta metadata.":"用户字符串堆的开始偏移。 除非元数据是ENC Delta Metadata，否则所有先前的ENC代的用户字符串堆的累积大小应为0。","Offset of the filter block.":"过滤器块的偏移。","Label marking the first instruction of the handler.":"标记处理程序的第一个指令。","A handle to the added custom debug information.":"添加自定义调试信息的手柄。"," class with the specified blob builder.":"与指定的BLOB构建器类。","The start offset of the String heap. The cumulative size of String heaps of all previous EnC generations should be 0 unless the metadata is EnC delta metadata.":"字符串堆的开始偏移。 除非元数据是ENC Delta Metadata，否则所有前一个ENC的累积大小应为0。","Start offset of the region.":"该地区的开始偏移。","The parent entity handle, which can be one of the following: a ":"父实体句柄，这可以是以下一个：","The encoder of the literal value.":"字面价值的编码器。","The start offset of the Blob heap. The cumulative size of Blob heaps of all previous EnC generations should be 0 unless the metadata is EnC delta metadata.":"斑点堆的开始偏移。 除非元数据是ENC Delta Metadata，否则所有先前ENC代的斑点堆的累积大小应为0。","Length of the region.":"区域的长度。","Label marking the instruction immediately following the handler.":"标签标记紧接在处理程序之后的指令。","The start offset of the Guid heap. The cumulative size of Guid heaps of all previous EnC generations should be 0 unless the metadata is EnC delta metadata.":"GUID堆的开始偏移。 除非元数据是ENC Delta Metadata，否则所有前几代的GUID堆的累积大小应为0。","A declarative security action.":"声明性的安全行动。","Number of exception regions.":"异常区域数。","A delegate used to encode the type of the literal. Called first by this method.":"用于对文字类型进行编码的委托。 通过此方法首先调用。","The type of exception to be caught: ":"要捕获的异常类型: ","The parent entity handle, which can be one of the following: ":"父实体句柄，这可能是以下内容之一：","The permission set blob.":"权限集斑点。","Builder to write encoded instructions to.":"建造者写编码说明。","A handle to the added declarative security attribute.":"添加声明性安全属性的句柄。","A delegate used to encode the value of the literal. Called second by this method.":"用于对文字的值进行编码的委托。 通过这种方法调用第二个。","Label marking the first instruction of the filter block.":"标记过滤块的第一指令的标签。","The constant value.":"的常数值。","Builder tracking labels, branches and exception handlers.\n Must be specified to be able to use some of the control-flow factory methods of ":"建筑商跟踪标签，分支和异常处理程序。 \n  必须指定能够使用一些控制流的工厂方法","The document name blob.":"文档名称blob。","When this method returns, a custom attribute element type encoder used to encode the type of the literal.":"当此方法返回时，用于编码文字类型的自定义属性元素类型编码器。","The event attributes.":"事件属性。","THe GUID of the hash algorithm used to calculate the value of ":"用于计算值的哈希算法的GUID","When this method returns, a scalar encoded used to encode the value of the literal.":"当此方法返回时，用于编码文字值的标量编码。","Is optional modifier.":"是可选的修饰符。","A handle to the added constant.":"加的常量的句柄。","The type of the event: a ":"事件的类型：","A delegate used to encode the type of the vector. Called first by this method.":"用于编码向量的类型的委托。 首先通过此方法称为。","An entity to attach the custom attribute to: a ":"将自定义属性附加到：","The hash of the document content.":"文档内容的哈希。","The handle of the associated import scope.":"关联的导入作用域的句柄。","A handle to the added event definition.":"添加事件定义的句柄。",", or a ":"，或","A delegate used to encode the items of the vector. Called second by this method.":"用于编码向量项目的代表。 通过此方法称为第二。","If the scope declares variables, set this to the handle of the first one. Otherwise, set this to the handle of the first variable declared by the next scope definition. If no scope defines any variables, ":"如果示波器声明变量，请将其设置为第一个的句柄。 否则，将其设置为下一个范围定义声明的第一个变量的句柄。 如果没有范围定义任何变量，","The GUID of the language.":"语言的指导。","The type attributes.":"类型属性。","A custom attribute constructor: a ":"自定义属性构造函数：","The method declaration entity handle, which can be one of the following: ":"方法声明实体句柄，这可以是以下之一：","If the scope declares constants, set this the handle of the first one. Otherwise, set this to the handle of the first constant declared by the next scope definition. If no scope defines any constants, ":"如果示波器声明常数，请设置第一个手柄。 否则，将其设置为下一个范围定义声明的第一个常数的句柄。 如果没有范围定义任何常数，","A handle to the added document.":"添加文档的句柄。","The type namespace.":"类型名称空间。","A handle to the added method implementation.":"添加方法实现的手柄。",". Note that if this directive applies to a value type, then the size will be less than 1 MB.":"。 请注意，如果该指令适用于值类型，则大小将小于1 MB。","The offset of the first instruction covered by the scope.":"范围涵盖的第一个指令的偏移。","The resulting sequence corresponds exactly to entries in EventMap table, i.e. n-th returned ":"结果序列完全对应于事件图表中的条目，即n-th返回","The type name.":"类型名称。","The method definition handle.":"方法定义句柄。","The entity declaring the target type, which can be one of the following: ":"宣布目标类型的实体，这可能是以下内容之一：","The length (in bytes) of the scope.":"范围的长度（以字节）。"," is stored in n-th row of EventMap.":"存储在第n行事件图中。","The method import attributes.":"方法导入属性。","The type reference namespace.":"类型参考名称空间。","The implementation entity handle, which can be one of the following: an ":"实施实体句柄，这可以是以下一个：","The resulting sequence corresponds exactly to entries in the property map table, that is, the n-th returned ":"结果序列完全对应于属性映射表中的条目，即n-th返回","A handle to the added local scope.":"添加的本地范围的手柄。","The unmanaged method name.":"非托管方法名称。","The type reference name.":"类型参考名称。","The type definition ID.":"类型定义ID。"," is stored in n-th row of the property map.":"存储在属性图的第n行中。","The module containing the unmanaged method.":"包含非托管方法的模块。","The local variable attributes.":"局部变量属性。","Builder populated with metadata entities stored in tables and values stored in heaps. The entities and values will be enumerated when serializing the metadata root.":"构建器填充了存储在表中的元数据实体，并存储在堆中的值。 序列化元数据根时，将列举实体和值。","A handle to the added exported type.":"添加导出类型的手柄。","A handle to the added type reference.":"添加类型参考的句柄。","The zero-base index of the local variable in the local signature.":"本地签名中局部变量的零基数索引。","The association entity handle, which can be one of the following: ":"协会实体手柄，这可能是以下内容之一：","The version string written to the metadata header. The default value is \"v4.0.30319\".":"写给元数据标头的版本字符串。 默认值为“ v4.0.30319”。","A handle to the added local variable.":"添加的本地变量的句柄。","The array containing the blob.":"包含斑点的阵列。","The field attributes.":"字段属性。","The manifest resource attributes.":"清单资源属性。","The method semantics attributes.":"方法语义属性。","The field signature. Use ":"场签名。 利用","A handle to the added or existing blob.":"添加或现有斑点的手柄。"," to suppress basic validation of metadata tables during serialization; otherwise, ":"抑制序列化过程中元数据表的基本验证； 否则，","The name of the manifest resource.":"清单资源的名称。"," to construct the blob.":"构造斑点。","The blob builder instance containing the blob.":"包含BLOB的BLOB构建器实例。","Builder to write to.":"建造者写信。","The method definition.":"方法定义。","The implementation entity handle, which can be one of the following: ":"实施实体处理，这可能是以下内容之一：","The string to add.":"添加的字符串。","The generic method entity handle, which can be one of the following: ":"通用方法实体句柄，这可能是以下内容之一：","A handle to the added field definition.":"添加字段定义的句柄。","The relative virtual address of the start of the method body stream. Used to calculate the final value of RVA fields of MethodDef table.":"方法主流的开始的相对虚拟地址。 用于计算MethodDef表RVA字段的最终值。","Specifies the byte offset within the referenced file at which this resource record begins.":"指定本资源记录开始的引用文件中的字节偏移。","The instantiation blob encoding the generic arguments of the method.":"实例化BLOB编码该方法的通用参数。"," to encode the unpaired surrogates as specified; ":"按照指定的编码未配置的替代物；","A handle to the added manifest resource.":"添加清单资源的手柄。","The field definition handle.":"字段定义句柄。","The relative virtual address of the start of the field init data stream. Used to calculate the final value of RVA fields of FieldRVA table.":"字段开始数据流的开始的相对虚拟地址。 用于计算FieldRVA表RVA字段的最终值。","The descriptor blob.":"描述符斑点。","A handle to the added method specification.":"添加方法规范的手柄。"," to replace them with the U+FFFD character.":"用U+FFFD字符代替它们。","A string that represents the metadata version.":"表示元数据版本的字符串。","The byte offset of the field within the declaring type instance.":"声明类型实例中字段的字节偏移。","The nested type definition handle.":"嵌套类型的定义句柄。"," to suppress basic validation of metadata tables; otherwise, ":"抑制元数据表的基本验证； 否则，","The constant value to add.":"要添加的常数值。","The containing entity, which can be one of the following: ":"包含实体，这可能是以下一个：","The offset within the block in the PE image that stores initial values of mapped fields (usually in the .text section).":"PE图像中的块中的偏移量存储映射字段的初始值（通常在.TEXT部分中）。","The enclosing type definition handle.":"封闭类型定义句柄。","The document name to add.":"要添加的文档名称。","Zero based offset, or -1 if ":"基于零的偏移量，或-1如果","The member name.":"会员名称。","A handle to the added or existing document name blob.":"添加或现有文档名称blob的句柄。","The parent entity handle, which can be either a ":"父实体句柄可以是","The parameter attributes.":"参数属性。"," can only be interpreted in a context of a specific ":"只能在特定的背景下进行解释","The member signature.":"会员签名。","The Guid to add.":"添加的GUID。","Optional. The parameter name.":"可选的。 参数名称。","1-based index into the #Guid heap. Unlike other heaps, which are essentially byte arrays, the #Guid heap is an array of 16-byte GUIDs.":"1个基于#Guid堆的索引。 与其他本质上是字节阵列的其他堆不同，#Guid堆是16字节GUIDS的数组。","The generic parameter attributes.":"通用参数属性。","A handle to the added member reference.":"添加成员参考的句柄。","A handle to the added or existing Guid.":"添加或现有GUID的手柄。","The sequence number of the parameter. A value of 0 refers to the owner method's return type; its parameters are then numbered from 1 onward.":"参数的序列编号。 值为0是指所有者方法的返回类型； 然后，其参数从1开始编号。","The zero-based parameter index.":"基于零的参数索引。","An offset in the corresponding heap, or -1 if ":"相应堆中的偏移，或-1如果","A handle to the added or existing string.":"添加或现有字符串的句柄。","A handle to the added parameter.":"添加参数的句柄。","The handle of a single document containing all sequence points of the method, or ":"包含方法的所有序列点的单个文档的句柄，或","A handle to the added generic parameter.":"添加通用参数的手柄。"," if the method doesn't have sequence points or spans multiple documents.":"如果该方法没有序列点或跨越多个文档。"," isn't a metadata heap handle.":"不是元数据堆的手柄。","A handle to the added or existing string. This value may be used in ":"添加或现有字符串的句柄。 该值可以在","The property attributes.":"属性属性。","The table index.":"表索引。","Zero-based offset, or -1 if ":"基于零的偏移量，或-1如果","The generic parameter to constrain.":"约束的通用参数。","The sequence Points blob, or ":"序列点斑点或","The property name.":"属性名称。","The type constraint, which can be one of the following: a ":"类型约束，这可能是以下一项："," if the method doesn't have sequence points.":"如果该方法没有序列点。","Zero-based offset.":"基于零的偏移。","The number of items in the table.":"表中的项目数。","The signature of the property.":"财产的签名。","One based row number, or -1 if ":"一个基号，或-1如果","A handle to the added property definition.":"添加属性定义的句柄。","A handle to the added generic parameter constraint.":"添加的通用参数约束的句柄。","A handle to the added method debug information.":"添加方法调试信息的手柄。","An array of size ":"大小的数组",".\n See ":"。 \n  看",", with each item filled with the current row count of the corresponding table.":"，每个项目都充满了相应表的当前行计数。","One based row number.":"一个基号。","The handle of the ":"手柄","The parent scope handle.":"父范围句柄。","The method attributes.":"方法属性。","The import scope handle.":"导入范围的手柄。","A handle to the reserved Guid and a ":"保留GUID和A的手柄"," method of the state machine (the compiler-generated method).":"状态机的方法（编译器生成的方法）。","Metadata token, or 0 if ":"元数据令牌，或0","The method implementation attributes.":"方法实现属性。"," representing the GUID blob as stored on the heap.":"代表存储在堆上的GUID BLOB。","The handle of the kickoff method (the user defined iterator/async method).":"开球方法的句柄（用户定义的迭代器/异步方法）。","A handle to the added import scope.":"添加导入范围的手柄。","Metadata token.":"元和县。","The method signature.":"方法签名。","The base type entity handle, which can be one of the following: ":"基本类型实体手柄，这可能是以下内容之一：","The number of characters to reserve.":"要保留的字符数。","Offset within the block in the PE image that stores method bodies (the IL stream), or -1 if the method doesn't have a body.":"在PE图像中的块中偏移存储方法物体（IL流）的PE图像中，或者如果该方法没有主体，则偏移-1。","Handle type.":"手柄类型。","The type implementing the interface.":"实现接口的类型。","A handle to the reserved user string and a ":"保留用户字符串的手柄和","If the type declares fields, set this to the handle of the first one. Otherwise, set this to the handle of the first field declared by the next type definition. If no type defines any fields in the module, ":"如果类型声明字段，请将其设置为第一个字段。 否则，将其设置为由下一个类型定义声明的第一个字段的句柄。 如果没有类型在模块中定义任何字段，","The interface being implemented, which can be one of the following: ":"正在实现的界面，这可能是以下内容之一：","If the method declares parameters in the Params table, set this to the handle of the first one. Otherwise, set this to the handle of the first parameter declared by the next method definition. If no parameters are declared in the module, ":"如果该方法在参数表中声明参数，请将其设置为第一个的句柄。 否则，将其设置为由下一个方法定义声明的第一个参数的句柄。 如果在模块中没有声明参数，","If the type declares methods, the handle of the first one. Otherwise, the handle of the first method declared by the next type definition. If no type defines any methods in the module, ":"如果类型声明方法，则第一个方法的句柄。 否则，通过下一个类型定义声明的第一个方法的句柄。 如果没有类型在模块中定义任何方法，","Heap index.":"堆索引。"," representing the entire User String blob (including its length and terminal character). The handle may be used in ":"表示整个用户字符串斑点（包括其长度和终端字符）。 手柄可以使用","A handle to the added interface implementation.":"添加接口实现的句柄。"," if the handle type corresponds to an Ecma335 heap; ":"如果手柄类型对应于ECMA335堆；","A handle to the added type definition.":"添加类型定义的句柄。","A handle to the added method definition.":"添加方法定义的句柄。",".\n Use ":"。 \n  利用","The LocalConstantSig blob.":"LocalConstantantig Blob。","The type definition.":"类型定义。","Table index.":"表索引。","Specifies that fields should be placed within the type instance at byte addresses which are a multiple of ":"指定应该将字段放置在字节地址的类型实例中，这是"," to fill in the blob content.":"填充斑点内容。","The method body entity handle, which can be one of the following: ":"方法身体实体手柄，这可能是以下内容之一：","A handle to the added local constant.":"添加的局部常数的手柄。"," if the handle type corresponds to an Ecma335 or Portable PDB table; ":"如果手柄类型对应于ECMA335或便携式PDB表；","The heap index.":"堆索引。",", or at natural alignment for that field type, whichever is smaller. Its value should be one of the following: 0, 1, 2, 4, 8, 16, 32, 64, or 128. A value of zero indicates that the packing size used should match the default for the current platform.":"，或在该野外类型的自然对齐中，以较小者为准。 它的值应为以下一个：0、1、2、4、8、16、32、64或128。零值表示所使用的包装大小应与当前平台的默认值匹配。","The containing method.":"包含方法。","The number of bytes to be reserved for instructions.":"保留的字节数用于说明。"," if the exception regions should be encoded in small format; ":"如果异常区域应以小格式编码；","Indicates a minimum size of the type instance and is intended to allow for padding. The amount of memory allocated is the maximum of the size calculated from the layout and ":"表示类型实例的最小尺寸，旨在允许填充。 分配的内存量是从布局计算出的最大尺寸和"," (encoded as the underlying integer value).":"（编码为基础整数值）。","The number of bytes.":"字节数。","The maximum stack size.":"最大堆栈尺寸。","The local variables' signature handle.":"本地变量的签名手柄。","The field definition offset, or -1 if it is not available.":"字段定义偏移量，或-1如果不可用。","The name of the type, or ":"类型的名称，或","The number of exception regions.":"异常区域的数量。","The first entity handle to compare.":"比较的第一个实体手柄。","The number of rows in the table.":"表中的行数。","The method body attributes.":"方法主体属性。","The provider used to obtain type symbols as the signature is decoded.":"提供商用于在签名解码时获得类型符号。","The metadata reader that was passed to the signature decoder. It may be ":"传递给签名解码器的元数据读者。 可能是","The size of the metadata blob.":"元数据斑点的大小。","The second entity handle to compare.":"比较的第二个实体手柄。","The offset of the encoded body within the method body stream.":"在方法流中，编码身体的偏移。","The context that was passed to the signature decoder.":"传递给签名解码器的上下文。","The new metadata provider.":"新的元数据提供商。","Zero if the two entity handles are equal, and a non-zero value of they are not.":"零，如果两个实体手柄相等，而它们的非零值则不是零。","The metadata reader from which the signature was obtained. It may be ":"从中获取签名的元数据读取器。 它可能是 "," if the method allocates from the dynamic local memory pool (the ":"如果该方法从动态本地内存池分配（","The type specification handle.":"类型规范句柄。","The first handle to compare.":"比较的第一个手柄。","Metadata image.":"元数据图像。"," if the given provider allows it.":"如果给定的提供商允许。"," instruction); ":"操作说明）;","The kind of the type, as specified in the signature. To interpret this value, use ":"签名中指定的类型。 要解释此值，请使用","The second handle to compare.":"比较的第二个手柄。","The type symbol for the type specification.":"类型规范的类型符号。","The instruction encoder.":"指令编码器。","The new provider.":"新提供商。","Additional context needed to resolve generic parameters.":"解决通用参数所需的其他上下文。","The type symbol for ":"类型符号","Zero if the two handles are equal, and a non-zero value if they are not.":"零，如果两个手柄相等，则如果不是零值，则为零。"," if the method allocates from the dynamic local memory pool (the IL contains the ":"如果该方法从动态本地内存池分配（IL包含","The blob reader positioned at a field signature.":"斑点读取器位于现场签名处。","Options specifying how sections of the image are read from the stream.":"选项指定如何从流中读取图像的各个部分。","The type definition handle.":"类型定义句柄。","The first object of type ":"类型的第一个对象","An exception region encoder instance.":"一个异常区域编码器实例。","The decoded field type.":"解码字段类型。","Size of the metadata blob in the stream. If not specified, the metadata blob is assumed to span to the end of the stream.":"流中元数据斑点的大小。 如果未指定，则假定元数据斑点跨越流的末端。","The kind of the type, as specified in the signature. To interpret this value use ":"签名中指定的类型。 解释此值使用","The second object of type ":"类型的第二个对象","Pointer to the start of the portable PDB blob.":"指向便携式PDB Blob的开始。","A blob reserved for instructions.":"保留指示的斑点。","The kind of the type as specified in the signature. To interpret this value, use ":"签名中指定的类型。 要解释此值，请使用","The blob reader positioned at a local variable signature.":"Blob读取器定位在局部变量签名处。","The constant signature.":"恒定签名。","The type of the elements in the array.":"数组中元素的类型。","The size of the portable PDB blob.":"便携式PDB斑点的大小。","The offset of the encoded method body in the method body stream.":"方法主流中编码方法主体的偏移。","A bitwise combination of the enumeration values that specify the manifest resource attributes.":"指定清单资源属性的枚举值的位组合。","The local variable types.":"局部变量类型。","The number of parameters.":"参数数。","The shape (rank, sizes, and lower bounds) of the array.":"数组的形状（级别，大小和下限）。","The new portable PDB metadata provider.":"新的便携式PDB元数据提供商。","An EntityHandle instance. If the ":"一个实体实例。 如果是","A blob reader positioned at a method signature.":"位于方法签名的斑点读取器。","The serialized type name in so-called \"reflection notation\" format (as understood by the ":"所谓的“反射符号”格式的序列化类型名称（如","The method that is called first to encode the return type.":"首先调用的方法对返回类型进行编码。",", the returned handle will have default values.":"，返回的句柄将具有默认值。","A portable PDB image.":"便携式PDB图像。"," method.)":"方法。）","The method that is called second to encode the parameters.":"称为第二个用于编码参数的方法。","The decoded method signature.":"解码方法签名。","The resource name.":"资源名称。","An enum type.":"枚举类型。","The new portable PDB metadata provider .":"新的便携式PDB元数据提供商。","The method that is called first to encode the return types.":"首先称为返回类型的方法。","A blob reader positioned at a valid method specification signature.":"位于有效方法规范签名的斑点读取器。","The byte offset within the referenced file at which this resource record begins.":"本资源记录开始的引用文件中的字节偏移。","The stream.":"流。","A type code that indicates the underlying type of the enumeration.":"指示枚举类型的类型代码。","A builder for encoding the named argument.":"编码命名参数的构建器。","The types used to instantiate a generic method via the method specification.":"用于通过方法规范实例化通用方法的类型。","The type to verify.":"要验证的类型。","One of the enumeration values that indicates the kind of member reference.":"指示成员参考类型的枚举值之一。","A bitwise combination of the enumeration values that represent the configuration when reading the metadata.":"读取元数据时代表配置的枚举值的位组合。"," to encode a field, ":"要编码一个字段，"," if the given type is a ":"如果给定类型是","The blob reader positioned at the leading ":"斑点读取器位于领先地位","The encoding to use.":"使用的编码。","An entity handle instance. If the ":"实体句柄实例。 如果是"," to encode a property.":"编码属性。","The branch op-code.":"分支OP代码。"," to allow a ":"允许","Reads PDB metadata into memory right away.":"立即将PDB元数据读取到内存中。","A handle to the signature blob.":"签名斑点的手柄。","The method to call first to encode the type of the argument.":"首先调用以编码参数类型的方法。","1 if ":"1如果","Pointer to bytes to decode.":"指向字节进行解码。"," to follow a (CLASS | VALUETYPE) in the signature; ":" 在签名中跟随一个（类|值类型）; ","The method to call second to encode the name of the field or property.":"调用第二个用于编码字段或属性名称的方法。","A pointer to the first byte in a block of metadata.":"指向元数据块中第一个字节的指针。"," is a short branch, or 4 if it is a long branch.":"是一个短的分支，如果是一个长分支，则为4个。","Number of bytes to decode.":"要解码的字节数。","The decoded type.":"解码类型。","The method to call third to encode the literal value of the argument.":"调用第三的方法以编码参数的文字值。","The number of bytes in the block.":"块中的字节数。","The decoded string.":"解码的字符串。","A builder populated with debug metadata entities stored in tables and values stored in heaps. The entities and values are enumerated when serializing the Portable PDB image.":"一个构建器，该构建器填充了存储在表中的调试元数据实体，并存储在堆中的值。 序列化便携式PDB图像时，将列举实体和值。","Called first, to encode the type of the element.":"首先称为编码元素的类型。","The long form of the branch op-code.":"分支操作码的长形式。","The default decoder used by ":"由","The information decoded from #Pdb stream, or ":"从#pdb流解码的信息，或","The row counts of all tables that the associated type system metadata contain. Each slot in the array corresponds to a table (":"关联类型系统元数据包含的所有表的行计数。 数组中的每个插槽都对应于表（","The short form of the branch op-code.":"分支OP代码的简短形式。","Called second, to encode the shape of the array.":"称为第二，用于编码数组的形状。"," if the stream is not present.":"如果流不存在。"," to decode UTF-8.":"解码UTF-8。","). The length of the array must be equal ":"）。 阵列的长度必须相等"," if the metadata represents an assembly; otherwise, ":"如果元数据代表组件； 否则，"," if the specified op-code is a branch to a label, ":"如果指定的OP代码是标签的分支，则","Use first, to encode the type of the element.":"首先使用，编码元素的类型。","An entry point method definition handle.":"入口点方法定义句柄。","The encoding used by this instance.":"此实例使用的编码。","One of the enumeration values that specifies the metadata kind.":"指定元数据种类的枚举值之一。","The type symbol for the function pointer type.":"功能指针类型的类型符号。","A function that calculates the ID of content represented as a sequence of blobs. If not specified, a default function that ignores the content and returns a content ID based on the current time is used (":"计算以表示为斑点序列的内容ID的函数。 如果未指定，则使用忽略内容并根据当前时间返回内容ID的默认函数（使用","The size of the method body.":"方法主体的大小。","Use second, to encode the shape of the array.":"使用第二，以编码数组的形状。","The length of the underlying data.":"基础数据的长度。","The type symbol for the generic method parameter at ":"通用方法参数的类型符号","A collection of sequence points.":"序列点的集合。","Function pointer attributes.":"功能指针属性。","). You must specify a deterministic function to produce a deterministic Portable PDB image.":"）。 您必须指定确定性函数以产生确定性的便携式PDB图像。","The pointer to the underlying data.":"基础数据的指针。","The type symbol for the generic type parameter at the given zero-based ":"在给定的基于零的情况下，通用类型参数的类型符号","The kickoff method of the state machine, if the method is a ":"状态机的开球方法，如果该方法是","The version string read from metadata header.":"从元数据标头读取版本字符串。","Generic parameter count.":"泛型参数计数。","The modifier type applied.":"应用的修饰符类型。"," method of a state machine. Otherwise, it returns a handle whose ":"状态机的方法。 否则，它将返回一个把手","A bitwise combination of the enumeration values that describes the ":"描述枚举价值的位组合","The builder to write to.":"要写信的建造者。","The type symbol of the underlying type without modifiers applied.":"没有修饰符的基础类型的类型符号。"," enum value.":"枚举价值。","Generic argument count.":"通用参数计数。"," if the modifier is required, ":"如果需要修饰符，","The ID of the serialized content.":"序列化内容的ID。","The handle of the single document containing all sequence points of the method, or a handle whose ":"包含方法的所有序列点的单个文档的句柄，或其 ","The comparer used to compare strings stored in metadata.":"用于比较元数据中存储的字符串的比较。"," to mark the type as value type, ":"要将类型标记为值类型，"," if it's optional.":"如果是可选的。","A constant of type ":"类型常数","A local signature handle, or a handle whose ":"本地签名句柄，或其 ","The decoder used by the reader to produce string instances from UTF8-encoded byte sequences.":"读者使用的解码器从UTF8编码的字节序列中产生字符串实例。"," to mark it as a reference type in the signature.":"将其标记为签名中的参考类型。","The type symbol.":"类型符号。"," (encoded as a two-byte Unicode character), ":"（编码为两个字节Unicode字符），"," if the method doesn't define any local variables.":"如果该方法未定义任何局部变量。"," (encoded as SerString), or ":"（编码为serstring）或","Parameter index.":"参数索引。","Pointer to the start of the metadata blob.":"指向元数据斑点的开始。","The type symbol for the local variable type.":"本地变量类型的类型符号。","Any primitive type code except for ":"除了任何原始类型代码外"," attribute is present; otherwise, ":"存在属性； 否则，","The number of required parameters.":"所需参数的数量。","A blob encoding sequence points, or a handle whose ":"一个blob编码序列点，或一个句柄，其 ","A Portable PDB metadata builder.":"便携式PDB元数据构建器。"," is an ":"是一个","The raw value of the header byte.":"标题字节的原始值。","The number of generic type parameters.":"通用类型参数的数量。","The version of Portable PDB format (e.g. 0x0100 for 1.0).":"Portable PDB格式的版本（例如，1.0的0x0100）。","A method definition handle that corresponds to this handle.":"与此句柄相对应的方法定义句柄。","An enumeration value that indicates the signature kind.":"指示签名类型的枚举值。","The parameter types.":"参数类型。","The value to compare with the current instance.":"要与当前实例进行比较的值。","A method debug information handle that corresponds to this handle.":"与此句柄相对应的方法调试信息句柄。","The entry type.":"输入类型。","The enclosing type of the specified nested type, or a handle a handle whose ":"指定的嵌套类型的封闭类型，或一个手柄的手柄","The number of generic type parameters, or 0 for non-generic methods.":"通用类型参数的数量，或对于非类别方法的0。"," struct instance.":"结构实例。","The information in the leading byte of the signature (kind, calling convention, flags).":"签名的领先字节中的信息（类型，召集约定，标志）。","The entry version.":"条目版本。","The header signature.":"标题签名。"," if the type is not nested.":"如果类型未嵌套。","The major version number of the required operating system.":"所需操作系统的主要版本号。"," instance representing the library header.":"代表库标题的实例。","The entry stamp.":"入门邮票。","An immutable array of type definition handles that represent types nested in the specified type.":"一个不可变的类型定义阵列，代表嵌套在指定类型中的类型。","The major version number of the subsystem.":"子系统的主要版本编号。","An immutable collection of parameter types.":"不变的参数类型集合。","The data to pass to ":"数据传递给","An object that describes the dynamic linker library characteristics.":"描述动态链接器库特性的对象。","The minor version number of the image.":"图像的次要版本编号。","The base type of the type definition.":"类型定义的基本类型。","The return type.":"返回类型。","A serializer for serializing data to a ":"用于序列化数据到一个的序列化器","A number representing the preferred address of the first byte of image when loaded into memory.":"将图像第一个字节的首选地址加载到内存中时的数字。","The hash algorithm name (for example, \"SHA256\").":"哈希算法名称（例如，“SHA256”）。","The linker minor version number.":"链接器次要版本号。"," if it is a nested type, ":"如果是嵌套类型，","The name of the type.":"类型的名称。"," handle specifying which generic method this instance refers to.":"处理指定本实例引用哪种通用方法。","The file pointer to the debug data.":"文件指针指向调试数据。","An object representing the image characteristics.":"代表图像特征的对象。","The minor version number of the required operating system.":"所需操作系统的次要版本号。","The full name of the namespace where the type is defined, or a handle whose ":"定义类型的名称空间的全名或","The address of the debug data relative to the image base.":"调试数据相对于图像库的地址。","An immutable array of exported type handles.":"一系列出口类型的手柄。","The minor version number of the subsystem.":"子系统的次要版本编号。","One of the enumeration values representing the different CPU architectures.":"代表不同CPU体系结构的枚举值之一。","The unqualified name of the namespace definition.":"名称空间定义的不合格名称。"," if the type is nested or defined in a root namespace.":"如果类型是在根名称空间中嵌套或定义的。","the size of the debug data (excluding the debug directory).":"调试数据的大小（不包括调试目录）。","A number the size of a ":"一个大小的数字","The number of data-directory entries in the remainder of the ":"其余的数据指导条目的数量","An immutable array of namespace definitions that are direct children of the current namespace definition.":"不可变的名称空间定义是当前名称空间定义的直接儿童。","The definition handle of the namespace where the type is defined, or a handle whose ":"定义类型的名称空间的定义句柄或其句柄"," if the entry is a ":"如果条目是","A number greater than or equal to ":"大于或等于"," representing the the major version number of the image.":"表示图像的主要版本编号。","  if the type is nested or defined in a root namespace.":"如果类型是在根名称空间中嵌套或定义的。","The parent namespace.":"父命名空间。",". The default is the page size for the architecture.":"。 默认值是架构的页面大小。"," entry pointing to a Portable PDB; otherwise, ":"指向便携式PDB的入口； 否则，"," representing the linker major version number.":"代表链接器主要版本号。","An immutable array of type definition handles.":"一个不变的类型定义手柄阵列。","The name of the target type.":"目标类型的名称。","The major version number of the debug data format.":"调试数据格式的主要版本编号。","the size of the code (text) section, or the sum of all code sections if there are multiple sections.":"代码（文本）部分的大小，或所有代码部分的总和（如果有多个部分）。","The full name of the namespace where the target type is defined, or a handle whose the ":"定义目标类型的名称空间的全名，或者句柄","A metadata reader.":"元数据读者。","The minor version number of the debug data format.":"调试数据格式的次要版本编号。"," representing the major version number of the required operating system.":"代表所需操作系统的主要版本号。","The combined size of an MS DOS stub, PE header, and section headers rounded up to a multiple of FileAlignment.":"MS DOS存根，PE标头和截面标题的组合尺寸已舍入到倍数的倍数。","An  enumeration value indicating the metadata reading configuration.":"指示元数据读数配置的枚举值。","The resolution scope in which the target type is uniquely defined.":"目标类型的分辨率范围是唯一定义的。"," representing the major version number of the subsystem.":"表示子系统的主要版本号。","for a non-deterministic PE/COFF file, the time and date that the debug data was created; otherwise, a value based on the hash of the content.":"对于非确定性PE/COFF文件，创建调试数据的时间和日期； 否则，基于内容哈希的值。","the size of the local heap space to commit.":"当地堆积空间的大小。","Used to add a handler for an event. Corresponds to the ":"用于为活动添加处理程序。 对应于","A  metadata reader with the specified metadata reading configuration.":"具有指定元数据读取配置的元数据读取器。"," representing the minor version number of the image.":"表示图像的次要版本号。","The format of the debugging information.":"调试信息的格式。","The size of the local heap space to reserve.":"当地堆积空间的大小可以预订。"," flag in the Ecma 335 CLI specification.":"ECMA 335 CLI规范中的标志。","The entry points to a blob containing Embedded Portable PDB. The Embedded Portable PDB blob has the following format:":"入口指向包含嵌入式便携式PDB的斑点。 嵌入式便携式PDB BLOB具有以下格式："," representing the linker minor version number.":"表示链接器次要版本号。","The size (in bytes) of the image, which is a multiple of ":"图像的大小（字节），这是","An enumeration value indicating the metadata reading configuration.":"指示元数据读数配置的枚举值。","Reads the value of the property.":"读取属性的价值。","A metadata string decoder with the encoding configuration.":"带有编码配置的元数据字符串解码器。","The presence of this entry indicates a deterministic PE/COFF file. See the Remarks section for more information.":"该条目的存在表示确定性的PE/COFF文件。 有关更多信息，请参见备注部分。"," representing the minor version number of the required operating system.":"代表所需操作系统的次要版本号。","The size of the stack to commit.":"堆栈的大小要提交。","Used to indicate that an event has occurred. Corresponds to the ":"用来表明发生了事件。 对应于",">A metadata reader with the specified metadata reading configuration and encoding configuration.":">具有指定元数据读取配置和编码配置的元数据读取器。"," representing the minor version number of the subsystem.":"表示子系统的次要版本号。","Used to remove a handler for an event. Corresponds to the ":"用于删除事件的处理程序。 对应于","A string representing the name of the crypto hash algorithm used to calculate the checksum.":"代表用于计算校验和的加密哈希算法名称的字符串。","The size of the stack to reserve.":"堆栈的大小保留。","A number representing the alignment (in bytes) of sections when they are loaded into memory. It must be greater than or equal to the file alignment. The default is the page size for the architecture.":"一个代表将其加载到内存中时的数字（以字节为单位）的数字。 它必须大于或等于文件对齐。 默认值是架构的页面大小。","The Relative Virtual Address (RVA).":"相对虚拟地址（RVA）。","An immutable array of bytes representing the checksum of the PDB content.":"一个不可变的字节阵列，代表PDB内容的校验和。","Used to modify the value of the property.":"用于修改属性的值。","A number representing the size of the local heap space to commit.":"代表要提交的本地堆空间大小的数字。","The size of the uninitialized data section (BSS) or the sum of all such sections.":"非初始化数据部分（BSS）的大小或所有此类部分的总和。","For program images, this is the starting address. For device drivers, this is the address of the initialization function. An entry point is optional for DLLs. When no entry point is present, this field must be zero.":"对于程序图像，这是起始地址。 对于设备驱动程序，这是初始化函数的地址。 对于DLL，入口点是可选的。 当不存在入口点时，此字段必须为零。","A number representing the size of the local heap space to reserve.":"一个代表当地堆积空间大小的数字。","A method block body instance.":"方法块主体实例。","The flags that indicate the attributes of the file.":"指示文件属性的标志。","the name of the subsystem that is required to run this image.":"运行此图像所需的子系统的名称。","The type of the target machine.":"目标机的类型。","A blob writer to be used to update the content.":"用于更新内容的斑点作家。","A number representing the size of the stack to commit.":"一个代表堆栈大小进行提交的数字。","The target machine's CPU architecture.":"目标机器的CPU体系结构。","A directory entry instance.":"目录条目实例。","The reserved bloc handle.":"保留的集体手柄。","The address of the entry point relative to the image base.":"入口点相对于图像库的地址。","A number representing the size of the stack to reserve.":"一个代表堆栈大小保留的数字。","The number of sections.":"部分的数量。","An instance method.":"实例方法。","The alignment (in bytes) of sections when they are loaded into memory. It must be greater than or equal to ":"将截面的对齐（以字节）加载到内存中时。 它必须大于或等于","A stream containing the PE image starting at the stream's current position and ending at the end of the stream.":"包含PE图像的流从流的当前位置开始，并在流的末端结束。","The byte.":"字节。","The address of the beginning-of-code section relative to the image base.":"相对于图像基库的“开始”部分的地址。","The file pointer to the COFF symbol table, or zero if no COFF symbol table is present. This value should be zero for a PE image.":"文件指针指向COFF符号表，如果没有Coff Symbol表，则零。 对于PE图像，此值应为零。","A stream containing PE image of the given size starting at its current position.":"包含给定尺寸的PE图像的流从其当前位置开始。","The signature kind.":"签名类型。","The alignment factor (in bytes) that is used to align the raw data of sections in the image file. The value should be a power of 2 between 512 and 64K, inclusive. The default is 512. If the ":"对齐因子（在字节中）用于对齐图像文件中的部分的原始数据。 该值应为512至64K之间的2幂。 默认值为512。如果","The address of the beginning-of-data section relative to the image base.":"数据开始相对于图像基库的地址。","The size of the optional header.":"可选标头的大小。","The calling convention.":"呼叫约定。","The image file checksum.":"图像文件校验和。","The size of the PE image.":"PE图像的大小。"," is less than the architecture's page size, then ":"小于架构的页面大小，然后","The low 32 bits of the number of seconds since 00:00 January 1, 1970, which indicates when the file was created.":"自1970年1月1日00:00以来的秒数中的32位低32位，该数字指示何时创建文件。","A power of 2 between 512 and 64K, inclusive. The default is 512.":"512至64K之间的功率为2，包括。 默认值为512。","The signature attributes.":"签名属性。","The stream containing PE image of the given size starting at its current position.":"包含给定尺寸的PE图像的流从其当前位置开始。"," must match ":"必须匹配"," if the objects are equal; otherwise, ":"如果对象相等； 否则，","The path to the PDB. It should not be empty.":"PDB的路径。 它不应该为空。","The preferred address, which is a multiple of 64K.":"首选地址，是64K的倍数。"," if the PE image has been loaded into memory by the OS loader; otherwise, ":"如果PE图像已通过OS加载器加载到内存中； 否则，","The preferred address of the first byte of image when loaded into memory; must be a multiple of 64K.":"加载到内存中时，图像的第一个字节的首选地址； 必须是64K的倍数。","The value to compare.":"比较的价值。","The format of the image file.":"图像文件的格式。","The subsystem required to run the image.":"运行图像所需的子系统。","The relative virtual address to search for.":"搜索的相对虚拟地址。","The unique id of the PDB content.":"PDB内容的唯一ID。"," if the values are equal; otherwise, ":"如果值相等； 否则，","The major version number of the image.":"图像的主要版本编号。","The index of the section that contains ":"包含本节的索引","An object describing the characteristics of the dynamic link library.":"描述动态链接库的特征的对象。","The version of Portable PDB format (e.g. 0x0100 for 1.0), or 0 if the PDB is not portable.":"Portable PDB格式的版本（例如，1.0的0x0100），或者如果PDB不在便携式下，则为0。"," if the values are unequal; otherwise, ":"如果值不平等； 否则，","The linker major version number.":"链接器主要版本号。","An object describing the characteristics of the image.":"描述图像特征的对象。",", or -1 if there the search is unsuccessful.":"，或-1如果搜索不成功。","The size of the stack to reserve. Only ":"堆栈的大小保留。 仅有的","Age (iteration) of the PDB. Shall be 1 for Portable PDBs.":"PDB的年龄（迭代）。 便携式PDB应为1。","The COR header, or ":"COR头，或 ","The PE directory entry.":"PE目录条目。"," is committed; the rest is made available one page at a time until the reserve size is reached.":"承诺; 其余的一次可供一页，直到达到储备尺寸为止。"," if the image does not have one.":"如果图像没有。","The size of the local heap space to reserve. Only ":"当地堆积空间的大小可以预订。 仅有的","When the method returns, contains the offset from the start of the image to the given directory data.":"当方法返回时，包含从图像开始到给定目录数据的偏移。","The byte offset from the start of the image to the COR header, or -1 if the image does not have a COR header.":"从图像开始到COR标头的字节偏移，或-1如果图像没有COR标题。"," if the directory data is found; ":"如果找到目录数据；","The size of the local heap space to commit.":"当地堆积空间的大小。"," if the image is Coff only; otherwise, ":"如果图像仅为库存； 否则，","The COFF header of the image.":"图像的COFF标题。"," instance representing the executable header.":"代表可执行标头的实例。"," if the image is a Windows console applications; otherwise, ":"如果图像是Windows控制台应用程序； 否则，","The byte offset from the start of the PE image to the start of the COFF header.":"字节偏移从PE图像开始到Coff标题的开始。"," if the image is a DLL; otherwise, ":"如果图像是DLL； 否则，"," if the image is an executable; otherwise, ":"如果图像是可执行的； 否则，","the size of the CLI metadata, or 0 if the image does not contain metadata.":"CLI元数据的大小，如果图像不包含元数据，则为0。","The offset (in bytes) from the start of the PE image to the start of the CLI metadata, or -1 if the image does not contain metadata.":"从PE图像开始到CLI元数据的开始，偏移量（以字节为单位），或-1如果图像不包含元数据。","The image's PE header, or ":"图像的PE标头或"," if the image is COFF only.":"如果图像仅为库存。","The byte offset of the header from the start of the image.":"从图像开始时，标题的字节偏移。","An array containing the PE section headers.":"包含PE部分标题的阵列。","An immutable byte array.":"一个不变的字节阵列。","The starting position in the block.":"块中的起始位置。","An immutable array of bytes.":"不变的字节阵列。","A reader for a blob spanning the entire block.":"遍布整个块的斑点的读者。","The number of bytes in the portion of the block.":"块部分中的字节数。","A reader for a blob spanning a portion of the block.":"遍布块的一部分的斑点的读者。","The length of the block.":"块的长度。","A pointer to the first byte of the block.":"指向块的第一个字节的指针。","A pointer to the start of the PE image.":"指向PE图像开始的指针。","An immutable array of bytes representing the PE image.":"代表PE图像的不变字节阵列。","PE image stream.":"PE图像流。","A PE image stream.":"PE图像流。","Options specifying how sections of the PE image are read from the stream.":"选项指定如何从流中读取PE图像的部分。","The PE image size.":"PE图像大小。","A memory block that contains the entire PE image.":"包含整个PE图像的内存块。","A memory block that contains the CLI metadata.":"一个包含CLI元数据的内存块。","The Relative Virtual Address of the data to read.":"要读取的数据的相对虚拟地址。","A memory block that starts at ":"一个开始的内存块"," and ends at the end of the containing section, or an empty block if ":"并在包含部分的末尾结束，或一个空块"," doesn't represent a location in any of the PE sections of this PE image.":"在此PE图像的任何PE部分中都不代表位置。","The name of the section.":"节的名称。","A memory block that spans the section, or an empty block if no section of the given ":"一个跨越该部分的内存块，或者一个空块，如果没有给定的部分 "," exists in this PE image.":"存在于此PE图像中。","A Debug Directory entry instance.":"调试目录条目实例。","A code view debug directory data instance.":"代码查看调试目录数据实例。","An array of Debug Directory table entries.":"调试目录表条目的数组。","The Debug Directory entry whose data is to be read.":"将读取数据的调试目录条目。","The provider of a metadata reader for reading a Portable PDB image.":"用于阅读便携式PDB图像的元数据读取器的提供商。","The PDB Checksum entry.":"的PDB校验和条目。","The path to the PE image. The path is used to locate the PDB file located in the directory containing the PE file.":"PE图像的路径。 该路径用于定位位于包含PE文件的目录中的PDB文件。","If specified, called to open a ":"如果指定，请打开一个"," for a given file path. The provider is expected to either return a readable and seekable ":"对于给定的文件路径。 预计提供商将返回可读和可搜索的"," if the target file doesn't exist or should be ignored for some reason. The provider should throw ":"如果目标文件不存在或由于某种原因应忽略。 提供者应该投掷"," if it fails to open the file due to an unexpected IO error.":"如果由于意外的IO错误而无法打开文件。","If successful, a new instance of ":"如果成功，则是一个新实例"," to be used to read the Portable PDB.":"用于读取便携式PDB。","If successful and the PDB is found in a file, the path to the file, or ":"如果成功并且PDB在文件，文件的路径或"," if the PDB is embedded in the PE image itself.":"如果PDB嵌入PE图像本身。"," if the PE image has a PDB associated with it and the PDB has been successfully opened; otherwise, ":" 果PE镜像有与之关联的PDB且该PDB已成功打开；否则, "," if the PE image contains CLI metadata; otherwise, ":"如果PE图像包含CLI元数据； 否则，"," if the reader can access the entire PE image; otherwise, ":"如果读者可以访问整个PE图像； 否则，","The PE headers for this PE image.":"此PE图像的PE标头。"}