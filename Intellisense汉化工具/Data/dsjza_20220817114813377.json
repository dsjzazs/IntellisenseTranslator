{"android.hardware.SensorManager.GRAVITY_URANUS":"android.hardware.sensormanager.gravity_uranus\r\n","android.media.midi.MidiDeviceInfo.PROPERTY_VERSION":"android.media.midi.midideviceinfo.property_version\r\n","AES-CMAC Authentication/Integrity Algorithm.":"AES-CMAC身份验证/完整性算法。\r\n","android.media.metrics.PlaybackSession.reportPlaybackErrorEvent(android.media.metrics.PlaybackErrorEvent)":"android.media.metrics.playbacksession.reportplaybackerrorevent（android.media.metrics.playbackerrorevent）\r\n","Prepares the recorder to begin capturing and encoding data.":"准备录音机开始捕获和编码数据。\r\n","android.media.ExifInterface.TAG_IMAGE_WIDTH":"android.media.exifinterface.tag_image_width\r\n","android.media.MediaFormat.KEY_COLOR_TRANSFER_REQUEST":"android.media.mediaformat.key_color_transfer_request\r\n","Determine whether or not output surfaces with a particular user-defined format can be passed\n            ":"确定是否可以传递具有特定用户定义格式的输出表面\r\n            \r\n","Indicates if the platform supports a special call screening and call monitoring mode.":"指示该平台是否支持特殊的呼叫筛选和呼叫监视模式。\r\n","android.media.AudioManager.ERROR_DEAD_OBJECT":"android.media.audiomanager.error_dead_object\r\n","android.location.LocationManager.unregisterGnssStatusCallback(android.location.Callback)":"android.location.locationmanager.unregistergnssstatuscallback（android.location.callback）\r\n","Intent#ACTION_MEDIA_BUTTON":"意图＃action_media_button\r\n","Room HF level.":"房间HF级。\r\n","Gets the track type.":"获取轨道类型。\r\n","The maximum number of frames that can occur after a request\n            (different than the previous) has been submitted, and before the\n            result's state becomes synchronized.":"请求后可能发生的最大帧数\r\n            （与以前的不同）已被提交\r\n            结果的状态变得同步。\r\n"," for the device's output ports.":" 对于设备的输出端口。\r\n","Get the current playback state for this session.":"获取本届会议的当前播放状态。\r\n","android.hardware.HardwareBuffer.USAGE_GPU_DATA_BUFFER":"android.hardware.hardwarebuffer.usage_gpu_data_buffer\r\n","android.media.AudioTrack.write(java.nio.ByteBuffer, int, int, long)":"android.media.audiotrack.write（java.nio.Bytebuffer，int，int，long）\r\n","android.media.MediaFormat.MIMETYPE_AUDIO_MPEGH_MHA1":"android.media.mediaformat.mimetype_audio_mpegh_mha1\r\n","android.media.MediaCodec.INFO_OUTPUT_FORMAT_CHANGED":"android.media.mediacodec.info_output_format_changed\r\n","android.media.MediaRecorder.MediaRecorder()":"android.media.mediarecorder.mediarecorder（）\r\n","Structure that groups a position in frame units relative to an assumed audio stream,\n            together with the estimated time when that frame enters or leaves the audio\n            processing pipeline on that device.":"结构将相对于假定的音频流组成的帧单元位置分组\r\n            以及该框架进入或离开音频的估计时间\r\n            在该设备上处理管道。\r\n","android.media.AudioTrack.getStartThresholdInFrames()":"android.media.audiotrack.getstartthresholdinframes（）\r\n","android.hardware.camera2.params.MultiResolutionStreamConfigurationMap#getOutputFormats":"android.hardware.camera2.params.multiresolutionstreamconfigurationmap＃getOutputformats\r\n","Return a value sanitizer that allows all the characters used by\n            encoded URLs and allows spaces, which are not technically legal\n            in encoded URLs, but commonly appear anyway.":"返回一个允许所有字符的价值消毒剂\r\n            编码URL并允许在技术上不合法的空间\r\n            在编码的URL中，但无论如何都会出现。\r\n","Request a network to satisfy a set of ":"请求网络满足一组\r\n","android.location.SettingInjectorService":"android.location.settingInjectionService\r\n","android.view.inputmethod.InputMethod.bindInput(android.view.inputmethod.InputBinding)":"android.view.inputmethod.inputmethod.bindinput（android.view.inputmethod.inputbinding）\r\n","android.hardware.lights.LightsRequest":"android.hardware.lights.lightsrequest\r\n","Sets the next output file descriptor to be used when the maximum filesize is reached\n            on the prior output ":"设置到达最大文件大小时要使用的下一个输出文件描述符\r\n            关于先验的输出\r\n","A key describing the desired profile to be used by an encoder.":"描述所需配置文件的键。\r\n","Effect connection mode is post processing.":"效应连接模式是后处理。\r\n","android.media.session.PlaybackState.ACTION_SET_RATING":"android.media.session.playbackstate.action_set_rating\r\n","The EffectFactory class defines the list of available Effects, and provides functionality to\n            inspect and instantiate them.":"效果效果类定义可用效果列表，并为\r\n            检查并实例化。\r\n","Returns the reference code type for inter-signal bias.":"返回信号间偏置的参考代码类型。\r\n","Returns file descriptor or null if not yet open/already closed":"返回文件描述符或null如果尚未打开/已经关闭\r\n","android.media.midi.MidiDeviceService.getOutputPortReceivers()":"android.media.midi.midideviceservice.getOutputportertreceivers（）\r\n","The request ID to pass ":"请求ID通过\r\n","Called when a client requests deselecting a route from the session.":"当客户要求从会话中取消选择路线时，请致电。\r\n","android.media.MediaExtractor.setDataSource(java.lang.String)":"android.media.mediaextractor.setdatasource（java.lang.string）\r\n","Time associated with the frame in the audio pipeline.":"与音频管道中的框架相关的时间。\r\n","List of focal lengths for ":"焦距清单\r\n","Return number of bytes received by the given UID since device boot.":"自设备引导以来，给定UID收到的字节的返回数量。\r\n","Contains the opaque data an app uses to request a certificate from a provisioning\n server\n":"包含一个应用程序用来从配置中请求证书的不透明数据\r\n 服务器\r\n\r\n","android.net.Uri.buildUpon()":"android.net.uri.buildupon（）\r\n","Instantiate a MediaDrm object":"实例化mediaDRM对象\r\n","The x-axis Euler angle of a face.":"面部的X轴欧拉角。\r\n","android.media.SubtitleData.getStartTimeUs()":"android.media.subtitledata.getstarttime（）\r\n","android.net.TrafficStats.tagDatagramSocket(java.net.DatagramSocket)":"android.net.trafficstats.tagdatagramsocket（java.net.datagramsocket）\r\n","android.media.session.MediaSession.setMediaButtonBroadcastReceiver(android.content.ComponentName)":"android.media.session.mediasession.setMediabuttonbroadcastreceiver（android.content.componentname）\r\n","Get an element of this matrix by its row and column.":"通过其行和列获取此矩阵的元素。\r\n","android.media.ThumbnailUtils":"android.media.thumbnailutils\r\n","android.media.tv.TvContentRating.flattenToString()":"android.media.tv.tvcontentrating.flattentostring（）\r\n","PersistableBundle":"持久性捆\r\n","Add a callback to listen to events about specific kinds of media routes.":"添加回调以收听有关特定类型媒体路线的事件。\r\n","android.inputmethodservice.InputMethodService.isExtractViewShown()":"android.inputmethodservice.inputmethodservice.issxtractViewShown（）\r\n","The target video frame rate in frames per second.":"目标视频帧速率每秒以帧为单位。\r\n"," retrieved from this.":" 从中检索。\r\n","A device type describing a Bluetooth Low Energy (BLE) audio speaker.":"描述蓝牙低能（BLE）音频扬声器的设备类型。\r\n","android.media.MediaFormat.KEY_TRACK_ID":"android.media.mediaformat.key_track_id\r\n","This input method will consume the back key.":"此输入方法将消耗后键。\r\n","CameraMetadata#CONTROL_EXTENDED_SCENE_MODE_BOKEH_STILL_CAPTURE":"camerametadata＃control_extended_scene_mode_bokeh_still_capture\r\n","android.media.audiofx.AudioEffect.EFFECT_TYPE_BASS_BOOST":"android.media.audiofx.audioeffect.effect_type_bass_boost\r\n","Adds an external timed text source file.":"添加了外部定时文本源文件。\r\n","android.hardware.HardwareBuffer.isClosed()":"android.hardware.hardwarebuffer.isclosed（）\r\n",": Live.":"： 居住。\r\n","android.media.MediaCodec.configure(android.media.MediaFormat, android.view.Surface, android.media.MediaCrypto, int)":"android.media.mediacodec.configure（android.media.mediaformat，android.view.surface，android.media.media.mediacrypto，int）\r\n","android.inputmethodservice.InputMethodService.onDisplayCompletions(android.view.inputmethod.CompletionInfo[])":"android.inputmethodservice.inputmethodservice.ondisplaycompletions（android.view.inputmethod.completioninfo []）\r\n","Get the point for a color channel at a specified index.":"在指定索引处获取颜色通道的要点。\r\n","Returns the JPEG compressed thumbnail inside the image file, or ":"返回图像文件中的JPEG压缩缩略图，或\r\n","android.media.audiofx.EnvironmentalReverb.PARAM_DENSITY":"android.media.audiofx.environmentalreverb.param_dense\r\n","android.hardware.camera2.DngCreator":"android.hardware.camera2.dngcreator\r\n","Gets the sub-message identifier, relevant to the ":"获取子消息标识符，与\r\n","android.media.tv.TvTrackInfo.getVideoWidth()":"android.media.tv.tvtrackinfo.getVideOwidth（）\r\n","android.media.MediaDrm.HDCP_V1":"android.media.mediadrm.hdcp_v1\r\n","Returns the manufacturer's name for the MTP device":"返回MTP设备制造商的名称\r\n","Object can not be modified or deleted and its properties can not be modified.":"无法修改或删除对象，无法修改其属性。\r\n","Sets the next output file to be used when the maximum filesize is reached on the prior\n            output ":"设置在先前达到最大文件时要使用的下一个输出文件\r\n            输出\r\n"," is\n            GAMMA_VALUE":" 是\r\n            gamma_value\r\n","Checks whether communications use Bluetooth SCO. -or- Request use of Bluetooth SCO headset for communications.":"检查通信是否使用蓝牙SCO。 - 或 - 请求使用蓝牙SCO耳机进行通信。\r\n","android.net.VpnService.SERVICE_META_DATA_SUPPORTS_ALWAYS_ON":"android.net.vpnservice.service_meta_data_supports_always_on\r\n","Query if the codec is software only.":"查询是否仅编解码是软件。\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_PARSING_MANIFEST_UNSUPPORTED":"android.media.metrics.playbackerrorevent.error_parsing_manifest_unsupported\r\n","android.hardware.SensorManager.GRAVITY_JUPITER":"android.hardware.sensormanager.gravity_jupiter\r\n","High quality bokeh mode is enabled for all non-raw streams (including YUV,\n            JPEG, and IMPLEMENTATION_DEFINED) when capture intent is STILL_CAPTURE.":"所有非RAW流都启用了高质量的散景模式（包括YUV，\r\n            jpeg，and impartation_defined）当捕获意图是still_capture时。\r\n","android.media.RoutingSessionInfo.getSelectableRoutes()":"android.media.routingsessioninfo.getSelectablerOutes（）\r\n","android.media.NotProvisionedException":"android.media.NotProvisionEdexception\r\n","android.location.provider.ProviderProperties.getAccuracy()":"android.location.provider.providerproperties.getAccuracy（）\r\n","android.net.Proxy.PROXY_CHANGE_ACTION":"android.net.proxy.proxy_change_action\r\n","android.media.Rating.getStarRating()":"android.media.rating.getStarrating（）\r\n","Closes this stream and releases any system resources associated\n            with it.":"关闭此流并发布任何关联的系统资源\r\n            用它。\r\n","android.media.tv.TvView.selectTrack(int, java.lang.String)":"android.media.tv.tvview.selecttrack（int，java.lang.string）\r\n","android.media.MediaFormat.KEY_ENCODER_PADDING":"android.media.mediaformat.key_encoder_padding\r\n","android.media.Ringtone.getTitle(android.content.Context)":"android.media.ringtone.getTitle（android.content.context）\r\n","android.media.MediaDrm.releaseAllSecureStops()":"android.media.mediadrm.releaseallsecurestops（）\r\n","android.media.MediaMetadata.getString(java.lang.String)":"android.media.mediametadata.getstring（java.lang.string）\r\n","Operation code for FormatStore":"格式存储的操作代码\r\n","android.media.session.MediaController.getMetadata()":"android.media.session.mediacontroller.getMetadata（）\r\n","android.media.ExifInterface.ExifInterface(java.io.InputStream, int)":"android.media.exifinterface.exifinterface（java.io.inputstream，int）\r\n","SHA256 HMAC Authentication/Integrity Algorithm.":"SHA256 HMAC身份验证/完整性算法。\r\n"," used for this playback.":" 用于此播放。\r\n","Retrieves the user identity.":"检索用户身份。\r\n","android.media.AudioMetadataMap.remove(android.media.Key)":"android.media.audiometadatamap.remove（android.media.key）\r\n","android.media.AudioTrack.getPlayState()":"android.media.audiotrack.getPlaystate（）\r\n","Sets a proximity alert for the location given by the position (latitude, longitude) and the\n            given radius.":"为位置（纬度，经度）和\r\n            给定半径。\r\n","LocationListener":"LocationListener\r\n","android.media.MediaPlayer.setWakeMode(android.content.Context, int)":"android.media.mediaplayer.setwakemode（android.content.context，int）\r\n","Send an event to a CA system.":"将事件发送到CA系统。\r\n","Get the track format at the specified index.":"获取指定索引的轨道格式。\r\n","android.media.tv.TvContract.isChannelUri(android.net.Uri)":"android.media.tv.tvcontract.ischanneluri（android.net.uri）\r\n","CaptureRequest#CONTROL_AE_EXPOSURE_COMPENSATION android.control.aeExposureCompensation":"capturerequest＃control_ae_expuso_compensation android.control.aeexposurecompensation\r\n","Bitmap.Config":"bitmap.config\r\n","State indicating this item is currently stopped.":"指示此项目的状态已停止。\r\n","android.media.MediaSync.getTimestamp()":"android.media.mediasync.getTimestamp（）\r\n",",\n            the recommended stream configuration map for use case ZSL must contain a subset of efficient\n            configurations that include the suggested input and output format mappings.":",\r\n            用例 ZSL 的推荐流配置映射必须包含有效的子集\r\n            包括建议的输入和输出格式映射的配置。\r\n","Obtains objectPropCode event parameter.":"获取ObjectPropcode事件参数。\r\n","Register a callback to be invoked when a timed text is available\n            for display.":"注册一个定时文本时要调用的回调\r\n            用于显示。\r\n","Request that the encoder produce a sync frame \"soon\".":"要求编码器“很快”产生同步框架。\r\n","Mars' gravity in SI units (m/s^2)":"火星在SI单元中的重力（M/S^2）\r\n","android.media.ExifInterface.TAG_SATURATION":"android.media.exifinterface.tag_saturation\r\n","Gets the virtualizer properties.":"获取虚拟器属性。\r\n","if this session is no longer active, either because the session\n                               was explicitly closed, a new session has been created\n                               or the camera device has been closed.":"如果此会话不再活跃，则是因为会话\r\n                               已明确关闭，创建了一个新的会话\r\n                               或相机设备已关闭。\r\n","Standard name of the fused location provider.":"融合位置提供商的标准名称。\r\n"," which can control the routes provided by system.":" 可以控制系统提供的路线。\r\n","android.media.SoundPool.setVolume(int, float, float)":"android.media.soundpool.setVolume（int，float，float）\r\n","android.location.GnssMeasurement.getAccumulatedDeltaRangeUncertaintyMeters()":"android.location.gnssmeasurement.getAccumulationDeltArangeNEDENCENTYTYTYTYMETERS（）\r\n","The callback class associated with the status change of hardware montiors\n in ":"与硬件montiors状态更改相关的回调类\r\n 在\r\n","Gets the width/height limit (in pixels) for the bitmaps when this metadata was created.":"创建此元数据时，获取位图的宽度/高度极限（以像素为单位）。\r\n","android.media.AudioPresentation.getLabels()":"android.media.audiopersentation.getLabels（）\r\n","Interface definition for a callback to be invoked when an error\n occurs while recording.":"错误时要调用回调的接口定义\r\n 录制时发生。\r\n","#TONE_CDMA_HIGH_SS":"#tone_cdma_high_ss\r\n","android.media.ExifInterface.TAG_MAKE":"android.media.exifinterface.tag_make\r\n","android.location.LocationManager.clearTestProviderLocation(java.lang.String)":"android.location.LocationManager.CleartestProviderLocation（java.lang.string）\r\n"," for DNS servers on this link.":" 对于此链接上的DNS服务器。\r\n","android.media.RouteDiscoveryPreference.shouldPerformActiveScan()":"android.media.routediscoverypreference.shouldperformactivescan（）\r\n","Get the effect name.":"获取效果名称。\r\n","Earth's gravity in SI units (m/s^2)":"地球的重力（m/s^2）\r\n","Sets the path of the output file to be produced.":"设置要生产的输出文件的路径。\r\n"," except that host\n resolution is done on this network.":" 除了那个主机\r\n 分辨率是在此网络上完成的。\r\n","Whether a rotation-and-crop operation is applied to processed\n            outputs from the camera.":"是否将旋转操作应用于处理\r\n            从相机输出。\r\n",", and have it be consumed by another component\n            like ":"，并由另一个组成部分消费\r\n            喜欢\r\n","Register a callback to be invoked when the video size is\n            known or updated.":"在视频大小为时注册要调用的回调\r\n            已知或更新。\r\n","android.hardware.SensorAdditionalInfo.TYPE_FRAME_END":"android.hardware.sensoradditionalinfo.type_frame_end\r\n","android.location.LocationProvider.supportsBearing()":"android.location.locationprovider.supportsbearing（）\r\n","android.media.MediaCas.SCRAMBLING_MODE_DVB_IDSA":"android.media.mediacas.scrambling_mode_dvb_idsa\r\n","android.media.session.MediaSession.getCurrentControllerInfo()":"android.media.session.mediasession.getCurrentControllerInfo（）\r\n","android.media.MediaDrm.close()":"android.media.mediadrm.close（）\r\n","Obtains the third event parameter.":"获得第三个事件参数。\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_IMAGE_ROTATION":"android.media.mediametadataretriever.metadata_key_image_rotation\r\n","Returns a new instance of a socket factory with all SSL security checks\n            disabled, using an optional handshake timeout and SSL session cache.":"返回带有所有SSL安全检查的插座工厂的新实例\r\n            禁用，使用可选的握手超时和SSL会话缓存。\r\n","Retrieves the\n            predefined camcorder profile settings for camcorder applications.":"检索\r\n            针对摄录机应用程序的预定范围的摄像机配置文件设置。\r\n","Playback state of a RemoteControlClient which is skipping back to the previous\n    logical chapter (such as a song in a playlist) in the media it is currently playing.":"Remotecontrolclient的播放状态，它正在跳回上一个\r\n    逻辑章节（例如播放列表中的歌曲）目前正在播放。\r\n","Adjusts the brightness of the image.":"调整图像的亮度。\r\n","android.media.RoutingSessionInfo.getVolumeHandling()":"android.media.routingsessioninfo.getVolumeHandling（）\r\n","MediaCodecInfo":"MediaCodeCinfo\r\n","Open a connection to a camera with the given ID.":"打开具有给定ID的相机的连接。\r\n","android.media.MediaDrm.OFFLINE_LICENSE_STATE_RELEASED":"android.media.mediadrm.offline_license_state_realed\r\n","android.graphics.ImageFormat#JPEG":"android.graphics.ImageFormat#JPEG\r\n","android.location.GnssStatus.getCarrierFrequencyHz(int)":"android.location.gnssstatus.getCarrierFrequencyHz（int）\r\n","Unregisters a ":"解注册a\r\n","#newUnratedRating(int)":"#newunratedrating（int）\r\n","android.media.MediaPlayer.setDataSource(android.media.MediaDataSource)":"android.media.mediaplayer.setdatasource（android.media.mediadatasource）\r\n","android.hardware.biometrics.BiometricManager.BIOMETRIC_ERROR_NO_HARDWARE":"机器人。硬件。生物测定学。生物计量管理器。生物计量_ERROR_NO_硬件\r\n","android.media.MediaFormat.KEY_COLOR_RANGE":"android.media.mediaformat.key_color_range\r\n","android.hardware.camera2.CaptureResult.STATISTICS_LENS_SHADING_MAP_MODE":"android.hardware.camera2.captureresult.statistics_lens_shading_map_mode\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_COMPOSER":"android.media.mediametadataretriever.metadata_key_composer\r\n","android.media.audiofx.DynamicsProcessing.getChannelCount()":"android.media.audiofx.dynamicsProcessing.getChannelCount（）\r\n","android.media.midi.MidiDevice.openOutputPort(int)":"android.media.midi.mididevice.openoutputport（int）\r\n","android.hardware.Sensor sensor":"机器人。硬件。传感器传感器\r\n","Set a filter parameter.":"设置过滤器参数。\r\n","Return a Rating instance with no rating.":"返回没有评分的评级实例。\r\n","#getOutputFormat":"#getOutputformat\r\n","Request audio focus.":"请求音频焦点。\r\n","Reports playback metrics.":"报告播放指标。\r\n","Not network connected":"未连接网络\r\n","android.media.MediaSession2.broadcastSessionCommand(android.media.Session2Command, android.os.Bundle)":"android.media.mediasession2.broadcastsessioncommand（android.media.session2Command，android.os.bundle）\r\n","Sets the audio stream type for this MediaPlayer.":"设置此媒体播放器的音频流类型。\r\n","A constant describing a rotation vector sensor type.\n See ":"描述旋转矢量传感器类型的常数。\r\n 见 \r\n","android.hardware.camera2.CaptureRequest.get(android.hardware.camera2.Key)":"android.hardware.camera2.capturerequest.get（android.hardware.camera2.key）\r\n","Create a key with the given top-left coordinate and extract its attributes from\n the XML parser.":"用给定的左上坐标创建一个键，然后从中提取其属性\r\n XML解析器。\r\n","android.hardware.camera2.CameraCharacteristics.SCALER_AVAILABLE_ROTATE_AND_CROP_MODES":"android.hardware.camera2.cameracharacteristics.scaler_available_rotate_and_crop_modes\r\n","Microphone audio source tuned for voice communications such as VoIP. ":"麦克风音频源调整了语音通信，例如VoIP。\r\n","android.media.AudioTrack.flush()":"android.media.audiotrack.flush（）\r\n","List of hot pixel map output modes for ":"热像素地图输出模式的列表\r\n","M:Android.Net.ConnectivityManager.AddDefaultNetworkActiveListener(.IOnNetworkActiveListener)":"m：android.net.connectivityManager.AdddDefaultNetWorkIvelistener（.ionNetWorkAtivelIsteristener）\r\n","android.media.metrics.PlaybackStateEvent.STATE_ABANDONED":"android.media.metrics.playbackstateevent.state_abandoned\r\n","android.media.tv.TvContract.buildPreviewProgramUri(long)":"android.media.tv.tvcontract.buildpreviewprogramuri（long）\r\n","android.media.MediaCodec.BUFFER_FLAG_SYNC_FRAME":"android.media.mediacodec.buffer_flag_sync_frame\r\n","OutputConsumer":"outputconsumer\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_IO_DNS_FAILED":"android.media.metrics.playbackerrorevent.error_io_dns_failed\r\n","Sets the contents of the location to the values from the given location.":"将位置的内容设置为从给定位置的值。\r\n","Create a placeholder object.":"创建一个占位符对象。\r\n","CameraCharacteristics#LENS_POSE_TRANSLATION android.lens.poseTranslation":"摄影学＃lens_pose_translation android.lens.posetranslation\r\n","Get the ":"得到\r\n"," set for this ":" 为此设置\r\n","android.hardware.camera2.params.Face.getId()":"android.hardware.camera2.params.face.getID（）\r\n","Obtains the first event parameter.":"获得第一个事件参数。\r\n"," class provides functions to write raw pixel data as a DNG file.":" 类提供功能，将原始像素数据作为DNG文件写入。\r\n","SurfaceTexture#getTimestamp timestamp":"SurfaceTexture＃getTimestamp Timestamp\r\n","A successful focus change request.":"成功的焦点更改请求。\r\n","android.inputmethodservice.InputMethodService.onCreateInputView()":"android.inputmethodservice.inputmethodservice.oncreateinputview（）\r\n","if prepare fails otherwise.\n":"如果准备失败，则否则。\r\n\r\n","android.hardware.camera2.CaptureResult.SHADING_MODE":"android.hardware.camera2.captureresult.shading_mode\r\n","Returns an immutable list with the names of the parsers that are suitable for container\n            formats with the given ":"返回一个不变的列表，带有适合容器的解析器的名称\r\n            给定格式\r\n","android.media.MicrophoneInfo.getLocation()":"android.media.microphoneinfo.getLocation（）\r\n","android.hardware.biometrics.BiometricManager.BIOMETRIC_ERROR_NONE_ENROLLED":"机器人。硬件。生物测定学。生物计量管理器。生物计量_ERROR_NONE_ENROLLED\r\n","android.hardware.camera2.params.Face.SCORE_MIN":"android.hardware.camera2.params.face.score_min\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_BITS_PER_SAMPLE":"android.media.mediametadataretriever.metadata_key_bits_per_sample\r\n","android.media.MediaCasStateException":"android.media.MediacasStateException\r\n","Construct a new Location with a named provider.":"用名称提供商构建一个新位置。\r\n","android.mtp.MtpConstants.OPERATION_SET_DEVICE_PROP_VALUE":"android.mtp.mtpconstants.operation_set_set_device_prop_value\r\n","Use a specific extended scene mode.":"使用特定的扩展场景模式。\r\n","Returns information about the ":"返回有关\r\n","Indicates whether the device is currently roaming on this network.":"指示该设备当前是否正在该网络上漫游。\r\n","#setOffloadDelayPadding(int, int)":"#SetOffLoadDelayPadding（int，int）\r\n","android.inputmethodservice.InputMethodService.onFinishInputView(boolean)":"android.inputmethodservice.inputmethodservice.onfinishinputview（boolean）\r\n","Intent to signal to the effect control application or service that an audio session\n             is closed and that effects should not be applied anymore.":"意图向音频会话发出效果控制应用程序或服务\r\n             已关闭，不应再应用该效果。\r\n","Query the capabilities of a camera device.":"查询相机设备的功能。\r\n","A constant string describing a magnetic field sensor type.":"描述磁场传感器类型的常数字符串。\r\n","android.media.effect.EffectFactory.EFFECT_DUOTONE":"android.media.effect.effectfactory.effect_duotone\r\n","Get a camera characteristics field value.":"得到一个相机特性字段值。\r\n","Return the supported mode for this capability.":"返回此功能的支持模式。\r\n","android.location.Geocoder":"Android.Location.Geocoder\r\n","android.hardware.SensorManager.GRAVITY_MERCURY":"android.hardware.sensormanager.gravity_mercury\r\n","Registers a callback to be invoked when the first output frame has been decoded\n            and is ready to be rendered on a codec configured for tunnel mode with ":"第一个输出帧被解码后，寄存了一个要调用的回调\r\n            并准备在配置的隧道模式的编解码器上渲染\r\n","Retrieves the user certificate, if any was set.":"检索用户证书，如果设置了。\r\n","Flushes the FIFO of all the sensors registered for this listener.":"为此听众注册的所有传感器中的FIFO冲洗。\r\n","Definition of a category of routes.":"一类路线的定义。\r\n"," identifying the current routing of this MediaPlayer\n            Note: The query is only valid if the MediaPlayer is currently playing.":" 识别此媒体播放器的当前路由\r\n            注意：查询仅在媒体播放器当前正在播放时有效。\r\n","#getPointCount":"#getPointCount\r\n","Sets whether MP4 parsing should ignore edit lists.":"设置MP4解析是否应忽略编辑列表。\r\n","Scene change is detected within the AF region(s).":"在AF区域内检测到场景变化。\r\n","Use this method to get the list of available sensors of a certain type.":"使用此方法获取特定类型的可用传感器列表。\r\n","android.media.AudioTrack.ERROR":"android.media.audiotrack.error\r\n","Copy the ColorChannel offsets into the destination vector.":"将ColorChannel偏移量复制到目标向量。\r\n","Constant used to specify formatting of a latitude or longitude\n in the form \"[+-]DDD:MM.MMMMM\" where D indicates degrees and\n M indicates minutes of arc (1 minute = 1/60th of a degree).":"常数用于指定纬度或经度的格式\r\n 以“ [+ - ] ddd：mm.mmmmm”的形式，在其中d指示度和学位\r\n m表示弧分钟（1分钟= 1个度的1/60）。\r\n","android.hardware.usb.UsbConstants.USB_TYPE_CLASS":"android.hardware.usb.usbconstants.usb_type_class\r\n","This key retrieves the color standard, if available.":"此键检索颜色标准（如果有）。\r\n","android.media.MediaPlayer.setDrmPropertyString(java.lang.String, java.lang.String)":"android.media.mediaplayer.setdrmpropertystring（java.lang.string，java.lang.string）\r\n","if type is null.\n":"如果类型为null。\r\n\r\n","android.media.tv.TvView.tune(java.lang.String, android.net.Uri, android.os.Bundle)":"android.media.tv.tv.tview.tune（java.lang.string，android.net.uri，android.os.bundle）\r\n","android.media.ImageReader.getWidth()":"android.media.imagereader.getWidth（）\r\n","Key for boolean meta-data field indicating whether this VpnService supports always-on mode.":"布尔元数据字段的关键，指示此VPNService是否支持始终模式。\r\n","Interface provided by a device to allow attaching\n            MidiReceivers to a MIDI device.":"设备提供的接口允许附加\r\n            MIDI设备中的Midreceivers。\r\n","android.location.GpsSatellite":"android.location.gpssatellite\r\n","Claims exclusive access to a ":"要求独家访问\r\n","The content is scaled, maintaining its aspect ratio, the whole\n            surface area is used, content may be cropped.":"内容缩放，保持其纵横比，整个\r\n            使用表面积，可能会裁剪内容。\r\n","android.media.audiofx.DynamicsProcessing.DynamicsProcessing(int)":"android.media.audiofx.dynamicsprocessing.dynamicsprocessing（int）\r\n","A token granting applications the ability to capture screen contents and/or\n            record system audio.":"授予应用程序的令牌能够捕获屏幕内容和/或\r\n            记录系统音频。\r\n","android.hardware.GeomagneticField.getInclination()":"android.hardware.geomagneticfield.getinclination（）\r\n","if any latitude is\n less than -90 or greater than 90":"如果有纬度\r\n 小于-90或大于90\r\n","DVB (Digital Video Broadcasting) Common Scrambling Algorithm (CSA) 1.":"DVB（数字视频广播）常见的拼凑算法（CSA）1。\r\n","#PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND":"#property_support_mic_near_ultrasound\r\n","android.media.ExifInterface.TAG_GPS_SPEED_REF":"android.media.exifinterface.tag_gps_speed_ref\r\n","android.media.ExifInterface.TAG_SUBSEC_TIME_ORIGINAL":"android.media.exifinterface.tag_subsec_time_original\r\n","android.media.EncoderProfiles.getRecommendedFileFormat()":"android.media.encoderprofiles.getRecommendedFileformat（）\r\n","android.media.tv.TvContentRating":"android.media.tv.tvcontentrating\r\n","AudioTimestamp#TIMEBASE_MONOTONIC AudioTimestamp.TIMEBASE_MONOTONIC":"audiotimestamp＃timebase_monotonic udiotimestamp.timebase_monotonic\r\n","Current state of the flash\n            unit.":"闪光的当前状态\r\n            单元。\r\n","android.media.MediaPlayer.setDataSource(android.content.Context, android.net.Uri)":"android.media.mediaplayer.setdatasource（android.content.context，android.net.uri）\r\n"," broadcasts, containing the\n            boolean enabled state of the location provider that has changed.":" 广播，包含\r\n            布尔值启用了已更改的位置提供商的状态。\r\n","CameraCharacteristics#SCALER_STREAM_CONFIGURATION_MAP configurations":"cameracharacteristics＃scaler_stream_configuration_map配置\r\n","android.hardware.usb.UsbConstants.USB_SUBCLASS_VENDOR_SPEC":"android.hardware.usb.usbconstants.usb_subclass_vendor_spec\r\n","java.io.Closeable.close()":"java.io.closable.close（）\r\n","Causes all metadata fields to be read-only.":"使所有元数据字段仅阅读。\r\n","luminance at night with full moon in lux":"晚上与满月在勒克斯的亮度\r\n","android.media.tv.TvContentRating.contains(android.media.tv.TvContentRating)":"android.media.tv.tvcontentrating.contains（android.media.tv.tvcontentrating）\r\n","android.media.PlaybackParams.getPitch()":"android.media.playbackparams.getpitch（）\r\n","Return the maximum width, in pixels, available the input method.":"将最大宽度（以像素为单位）返回输入方法。\r\n","Builder#setConfirmationRequired(boolean)":"构建器＃setConfirmationRequired（布尔值）\r\n","OnKeyboardActionListener#onKey":"OnKeyBoardActionListener＃onkey\r\n","Dimensions of the group of pixels which are under the same color filter.":"在同一颜色过滤器下的一组像素的尺寸。\r\n","CameraCharacteristics#SCALER_STREAM_CONFIGURATION_MAP android.scaler.streamConfigurationMap":"cameracharacteristics＃scaler_stream_configuration_map android.scaler.streamconfigurationmap\r\n","android.media.MediaScannerConnection":"android.media.mediascannerconnection\r\n","Finish making changes that will not be reported to the client.":"完成更改，不会报告给客户。\r\n","Playback is buffering in the background for initial playback start":"播放正在后台缓冲以进行初始播放开始\r\n","Resumes playback.":"恢复播放。\r\n",": Video is unavailable because\n            the resource is not enough to meet requirement.":"：视频不可用，因为\r\n            该资源不足以满足要求。\r\n","android.media.MediaController2.getConnectedToken()":"android.media.mediacontroller2.getConnectedToken（）\r\n","Returns true if the Geocoder methods getFromLocation and\n            getFromLocationName are implemented.":"如果GeoCoder方法获取fromLocation和\r\n            实现了getFromlocationName。\r\n","SHA384 HMAC Authentication/Integrity Algorithm.":"SHA3​​84 HMAC身份验证/完整性算法。\r\n","Copy the color curve for a single color channel from this tonemap curve into the destination.":"从此ToneMap曲线复制单个颜色通道的颜色曲线到目的地。\r\n","android.hardware.camera2.CameraCharacteristics.LENS_POSE_ROTATION":"android.hardware.camera2.cameracharacteristics.lens_pose_rotation\r\n","Whether this camera device has a\n            flash unit.":"本摄像装置是否具有\r\n            闪光单元。\r\n","The lookup key for a boolean that indicates whether there is a\n complete lack of connectivity, i.e., no network is available.":"布尔值的查找键，该键指示是否有一个\r\n 完全缺乏连接性，即没有网络可用。\r\n","Return number of packets received by the given UID since device boot.":"自设备引导以来，给定UID收到的数据包的返回数量。\r\n","android.media.ExifInterface.TAG_FOCAL_PLANE_X_RESOLUTION":"android.media.exifinterface.tag_focal_plane_x_resolution\r\n","Retrieves the gateway or next hop ":"检索网关或下一个跳跃\r\n"," from this metering rectangle.":" 从这个计量矩形。\r\n","android.inputmethodservice.InputMethodService.switchToNextInputMethod(boolean)":"android.inputmethodservice.inputmethodservice.switchtonextinputmethod（boolean）\r\n","#setOnSubtitleDataListener(OnSubtitleDataListener)":"#setonSubTitledataListener（onsubtitledataListener）\r\n","android.media.SoundPool.setPriority(int, int)":"android.media.soundpool.setPriority（int，int）\r\n","Information about the properties of a location provider.":"有关位置提供商属性的信息。\r\n","android.media.MediaCas.SCRAMBLING_MODE_TDES_SCTE52":"android.media.mediacas.scrambling_mode_tdes_scte52\r\n","android.media.MediaFormat.MediaFormat(android.media.MediaFormat)":"android.media.mediaformat.mediaformat（android.media.mediaformat）\r\n","The OnParameterChangeListener interface defines a method called by the PresetReverb\n when a parameter value has changed.":"OnParameterChangeListener界面定义了一种由预先架构的方法\r\n 当参数值已更改时。\r\n",": Video is unavailable because\n            the device need be activated.":"：视频不可用，因为\r\n            需要激活设备。\r\n","Error code an operation being disallowed by a license policy":"错误代码通过许可证策略禁止操作\r\n","UUID for Acoustic Echo Canceler (AEC)":"声学回声取消器（AEC）的UUID\r\n","GnssMeasurementsEvent.Callback":"gnssmeasurementsevent.callback\r\n","onDrmInfoListener":"ondrminfolistener\r\n","android.media.audiofx.Visualizer.ERROR":"android.media.audiofx.visualizer.error\r\n","Set the callback to receive updates for the MediaSession.":"设置回调以接收MediaSession的更新。\r\n","Make sure you call this when you're done to free up any resources\n            instead of relying on the garbage collector to do this for you at\n            some point in the future.":"完成后，请确保您打电话给任何资源\r\n            而不是依靠垃圾收集者为您做到这一点\r\n            未来的某个点。\r\n","Returns the audio format at which the client application is recording audio.":"返回客户端应用程序录制音频的音频格式。\r\n","Get the media time of the anchor in microseconds.":"在微秒内获取锚定时间。\r\n","android.hardware.usb.UsbInterface.getId()":"android.hardware.usb.usbinterface.getID（）\r\n","A microphone that locate on main body of the device.":"位于设备主体上的麦克风。\r\n","if the route is invalid.":"如果路线无效。\r\n","CaptureRequest#SENSOR_FRAME_DURATION frame duration":"CaptureReQuest＃Sensor_frame_duration框架持续时间\r\n","Returns whether ExifInterface currently supports reading data from the specified mime type\n            or not.":"返回Exifinterface当前是否支持从指定的MIME类型读取数据\r\n            或不。\r\n","android.hardware.camera2.CameraMetadata.CONTROL_EXTENDED_SCENE_MODE_DISABLED":"android.hardware.camera2.camerametadata.control_extended_scene_mode_disabled\r\n","TrackInfo#MEDIA_TRACK_TYPE_SUBTITLE":"TrackInfo＃Media_track_type_subtitle\r\n","In case the device supports\n            ":"如果设备支持\r\n            \r\n",", the\n            recommended stream configuration map for use case RAW must contain a subset of efficient\n            configurations that include the ":"， 这\r\n            用例 RAW 的推荐流配置映射必须包含有效的子集\r\n            包括的配置\r\n","android.media.CamcorderProfile.get(int)":"android.media.camcorderprofile.get（int）\r\n","Gets time since the corresponding log session is created in millisecond.":"由于相应的日志会话以毫秒为单位创建，因此获得时间。\r\n","Returns a user visible description of the accessory.":"返回用户可见附件的描述。\r\n","android.media.metrics.TrackChangeEvent.getLanguage()":"android.media.metrics.trackchangeevent.getlanguage（）\r\n","Returns whether direct playback of an audio format with the provided attributes is\n            currently supported on the system.":"返回是否直接播放带有提供属性的音频格式为\r\n            目前在系统上支持。\r\n","Location":"地点\r\n","android.hardware.location.GeofenceHardwareRequest.setUnknownTimer(int)":"android.hardware.location.geofencehardwarerequest.setunknowntimer（int）\r\n","android.media.MediaRouter2.unregisterControllerCallback(android.media.ControllerCallback)":"android.media.mediarouter2.unregisterControllerCallback（android.media.controllerCallback）\r\n","android.hardware.camera2.CameraCharacteristics.LENS_DISTORTION":"android.hardware.camera2.cameracharacteristics.lens_distortic\r\n","The artist of the media.":"媒体的艺术家。\r\n","android.net.IpSecAlgorithm.AUTH_AES_CMAC":"android.net.ipsecalgorithm.auth_aes_cmac\r\n","android.media.MediaFormat.COLOR_TRANSFER_LINEAR":"android.media.mediaformat.color_transfer_linear\r\n","android.hardware.Sensor.STRING_TYPE_STEP_COUNTER":"android.hardware.sensor.string_type_step_counter\r\n","The artwork for the album of the media's original source as a Uri\n            formatted String.":"媒体原始资源作为URI的专辑的艺术品\r\n            格式化的字符串。\r\n","MetricsConstants":"MetricsConstants\r\n","If the request references no Surfaces or references Surfaces\n                                  that are not currently configured as outputs; or the request\n                                  is a reprocess capture request; or the capture targets a\n                                  Surface in the middle of being ":"如果请求引用没有表面或参考表面\r\n                                  当前未配置为输出；或请求\r\n                                  是重新处理捕获请求；或捕获目标\r\n                                  表面中间\r\n","android.media.ExifInterface.TAG_SCENE_TYPE":"android.media.exifinterface.tag_scene_type\r\n","android.media.MediaMetadataRetriever.setDataSource(java.lang.String)":"android.media.mediametadataretriever.setdatasource（java.lang.string）\r\n","Audio presentation classifier: Complete main.":"音频演示分类器：完整主体。\r\n","#getBufferCapacityInFrames()":"#getBufferCapacityInframes（）\r\n","android.hardware.camera2.CaptureResult.SENSOR_ROLLING_SHUTTER_SKEW":"android.hardware.camera2.captureresult.sensor_rolling_shutter_skew\r\n","android.media.MediaPlayer.setAudioStreamType(int)":"android.media.mediaplayer.setaudiostreamtype（int）\r\n","Returns an array of supported encapsulation metadata types for the device.":"返回设备的一系列支持的封装元数据类型。\r\n","Class constructor with audio session.":"带有音频会话的类构造函数。\r\n","android.hardware.usb.UsbDeviceConnection.getFileDescriptor()":"android.hardware.usb.usbdeviceconnection.getFiledScriptor（）\r\n","Releases the DRM session":"发布DRM会话\r\n"," for an object.":" 对于对象。\r\n","android.location.Criteria.getAccuracy()":"android.location.criteria.getAccuracy（）\r\n","android.hardware.camera2.CameraExtensionSession.stopRepeating()":"android.hardware.camera2.cameraextensionsessessessesseess.stoprepeating（）\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_PHYSICAL_SIZE":"android.hardware.camera2.cameracharacteristics.sensor_info_physical_size\r\n","Returns the name of the USB device\n            This returns the same value as ":"返回USB设备的名称\r\n            这返回与\r\n","Take care of dispatching incoming generic motion events to the appropriate\n callbacks on the service, and tell the client when this is done.":"照顾向适当的传入通用运动事件派遣\r\n 在服务上回调，并告诉客户何时完成。\r\n","Return whether the data network is currently active.":"返回数据网络当前是否处于活动状态。\r\n","android.media.AudioManager.setBluetoothA2dpOn(boolean)":"android.media.audiomanager.setbluetootha2dpon（布尔值）\r\n","Reverb preset representing a medium room with a length of ten meters or less":"Reverb预设代表一个中型房间，长度不超过10米\r\n","Return the channel index mask.":"返回通道索引蒙版。\r\n","android.media.MediaRoute2ProviderService.notifyRequestFailed(long, int)":"android.media.mediaroute2providerservice.notifyrequestfailed（长，int）\r\n","android.media.MediaFormat.KEY_PIXEL_ASPECT_RATIO_WIDTH":"android.media.mediaformat.key_pixel_aspect_ratio_width\r\n","Usage: The buffer will be written to by the GPU":"用法：缓冲区将由GPU写信\r\n","RemoteControlClient.MetadataEditor":"remotecontrolclient.metadataeditor\r\n","android.media.midi.MidiDeviceStatus":"android.media.midi.mididevicestatus\r\n","android.media.MediaDrm.getPlaybackComponent(byte[])":"android.media.mediadrm.getPlayBackcomponent（byte []）\r\n","Enqueues a set of file descriptors to send to the peer.":"招募一组文件描述符，以发送到对等。\r\n","android.net.Ikev2VpnProfile.getUsername()":"android.net.ikev2vpnprofile.getusername（）\r\n","android.hardware.camera2.CameraMetadata.DISTORTION_CORRECTION_MODE_OFF":"android.hardware.camera2.camerametadata.distortort_correction_mode_off\r\n","android.net.TrafficStats.setThreadStatsUid(int)":"android.net.trafficstats.setthreadstatsuid（int）\r\n","android.media.RemoteControlClient.setPlaybackState(int)":"android.media.remotecontrolclient.setplaybackstate（int）\r\n","to\n indicate the start of video recording.":"至\r\n 指示视频录制的开始。\r\n","The genre of the media.":"媒体的类型。\r\n","Indicates this is a network that has the ability to reach a carrier's\n RCS servers, used for Rich Communication Services.":"表明这是一个能够到达运营商的网络\r\n RCS服务器，用于丰富的通信服务。\r\n","android.media.audiofx.AudioEffect.EFFECT_AUXILIARY":"android.media.audiofx.audioeffect.effect_auxiliary\r\n","Free up all the resources associated with this ImageReader.":"释放与此图像研究员相关的所有资源。\r\n","InlineSuggestionsRequest":"InlineSuggestionsRequest\r\n","android.media.AudioAttributes.areHapticChannelsMuted()":"android.media.audioAttributes.RehapticChannelsMmtuded（）\r\n","android.media.MediaRecorder.getRoutedDevice()":"android.media.mediarecorder.getRoutedDevice（）\r\n","android.hardware.HardwareBuffer HardwareBuffer":"android.hardware.hardwarebuffer HardwareBuffer\r\n","android.hardware.location.GeofenceHardware.GEOFENCE_ERROR_INVALID_TRANSITION":"android.hardware.location.geofencehardware.geofence_error_invalid_transition\r\n","Return the route in this group at the specified index":"在指定索引中返回该组中的路线\r\n","String property name: describes the DRM plugin":"字符串属性名称：描述DRM插件\r\n","android.media.EncoderProfiles.getAudioProfiles()":"android.media.encoderprofiles.getaudioprofiles（）\r\n","android.inputmethodservice.InputMethodService.setCandidatesView(android.view.View)":"android.inputmethodservice.inputmethodservice.setCandidatesView（android.view.view）\r\n","android.media.MediaCommunicationManager.getSession2Tokens()":"android.media.mediacommunicationmanager.getSession2Tokens（）\r\n","android.hardware.camera2.CaptureResult.CONTROL_EFFECT_MODE":"android.hardware.camera2.captureresult.control_effect_mode\r\n","android.inputmethodservice.InputMethodService.onExtractedTextClicked()":"android.inputmethodservice.inputmethodservice.onextractedTextClicked（）\r\n","android.media.ExifInterface.TAG_FLASH":"android.media.exifinterface.tag_flash\r\n"," from a\n            ":" 来自\r\n            \r\n","android.net.TrafficStats.getUidTcpTxSegments(int)":"android.net.trafficstats.getuidtcptxsegments（int）\r\n","android.media.midi.MidiSender.disconnect(android.media.midi.MidiReceiver)":"android.media.midi.midisender.disconnect（android.media.midi.midireceiver）\r\n","getPointCount(colorChannel)":"GetPointCount（ColorChannel）\r\n","Ringtone":"铃声\r\n","android.media.MediaFormat.getLong(java.lang.String)":"android.media.mediaformat.getlong（java.lang.string）\r\n","java.lang.System#nanoTime system time":"java.lang.System＃纳米时间系统时间\r\n","android.location.LocationManager.KEY_LOCATION_CHANGED":"android.location.locationmanager.key_location_changed\r\n","Create a VPN interface using the parameters supplied to this\n builder.":"使用提供给此的参数创建VPN接口\r\n 建筑商。\r\n","android.media.MediaFormat.KEY_MAX_INPUT_SIZE":"android.media.mediaformat.key_max_input_size\r\n","android.media.session.PlaybackState.getPosition()":"android.media.session.playbackstate.getPosition（）\r\n","android.location.GnssMeasurement.getTimeOffsetNanos()":"android.location.gnssmeasurement.getTimeOftSetnanos（）\r\n","Get the camera device that this session is created for.":"获取为此会话创建的相机设备。\r\n","Plays a given recorded TV program.":"播放给定的录制电视节目。\r\n","Returns the ID of the selected track for a given type.":"返回给定类型所选轨道的ID。\r\n","android.media.MediaPlayer.selectTrack(int)":"android.media.mediaplayer.selecttrack（int）\r\n","#PROPERTY_OUTPUT_FRAMES_PER_BUFFER":"#property_output_frames_per_buffer\r\n","android.media.MediaFormat.KEY_MAX_B_FRAMES":"android.media.mediaformat.key_max_b_frames\r\n","Get the image ":"获取图像\r\n","Returns connection status information about a particular\n Network.":"返回有关特定的连接状态信息\r\n 网络。\r\n","android.mtp.MtpObjectInfo.getCompressedSize()":"android.mtp.mtpobjectInfo.getCompressedsize（）\r\n","android.media.SyncParams.setAudioAdjustMode(int)":"android.media.syncparams.setaudioadjustmode（int）\r\n","if the address is invalid.":"如果地址无效。\r\n","Error code for other AudioTrack errors":"其他Adiotrack错误的错误代码\r\n","Android.Locations.LocationProvider.OUT_OF_SERVICE":"android.locations.locationprovider.out_of_service\r\n"," contains its corresponding elevation angle\n          where +90 is directly above the listener, 0 is the horizontal plane, and -90 is\n          directly below the listener.":" 包含其相应的高程角\r\n          其中+90直接在听众上方，0是水平平面，-90为\r\n          直接在听众下方。\r\n","Updates routes of the provider and notifies the system media router service.":"更新提供商的路由，并通知系统媒体路由器服务。\r\n","android.media.ExifInterface.TAG_GPS_DEST_DISTANCE":"android.media.exifinterface.tag_gps_dest_distance\r\n","android.hardware.SensorManager.getDynamicSensorList(int)":"android.hardware.sensormanager.getdynamicsensorlist（int）\r\n","Re-evaluate whether the soft input area should currently be shown, and\n            update its UI if this has changed since the last time it\n            was evaluated.":"重新评估目前是否应显示软输入区域，并且\r\n            自从上次更新以来，请更新其UI\r\n            被评估。\r\n","android.hardware.SensorManager.getDefaultSensor(int)":"android.hardware.sensormanager.getDefaultSensor（int）\r\n","VolumeShaper.Configuration configuration":"体积夹。配置配置\r\n","Find a decoder supporting a given ":"找到支持给定的解码器\r\n","android.location.SettingInjectorService.SettingInjectorService(java.lang.String)":"android.location.setTingInjectionService.SetTingInjectionService（java.lang.string）\r\n","Indicates this network uses an Ethernet transport.":"指示该网络使用以太网传输。\r\n","android.hardware.camera2.params.ColorSpaceTransform.copyElements(android.util.Rational[], int)":"android.hardware.camera2.params.colorspacetransform.copylements（android.util.rational.rational []，int）\r\n","android.hardware.camera2.params.OisSample.getYshift()":"android.hardware.camera2.params.oissample.getyshift（）\r\n","This is called when the user has selected a context menu item from the\n            extracted text view, when running in fullscreen mode.":"当用户选择上下文菜单项时，这就是称为\r\n            以全屏模式运行时提取的文本视图。\r\n","android.hardware.camera2.CaptureResult.FLASH_MODE":"android.hardware.camera2.captureresult.flash_mode\r\n","android.location.Location.getBearing()":"android.location.location.getbearing（）\r\n","Returns information about the audio input device used for this recording.":"返回有关用于此录制的音频输入设备的信息。\r\n","An abstract class for editing and storing metadata that can be published by\n            ":"用于编辑和存储元数据的抽象类，可以由\r\n            \r\n","android.media.RoutingSessionInfo.getControlHints()":"android.media.routingsessioninfo.getControlhints（）\r\n","View MeasureSpec ":"查看MeasituresPec\r\n","A constant describing a gravity sensor type.\n See ":"描述重力传感器类型的常量。\r\n 见 \r\n","android.location.Address.Address(java.util.Locale)":"android.location.Address.Address（Java.util.locale）\r\n","android.media.MediaCas.SESSION_USAGE_LIVE":"android.media.mediacas.session_usage_live\r\n","Android.Locations.LocationProvider.TEMPORARILY_UNAVAILABLE":"android.locations.locationprovider.temporlasy_unavailable\r\n","android.hardware.usb.UsbConstants.USB_TYPE_STANDARD":"android.hardware.usb.usbconstants.usb_type_standard\r\n","android.hardware.usb.UsbConfiguration.getId()":"android.hardware.usb.usbconfiguration.getID（）\r\n","Device-specific extension implementation for enhancing the dynamic range of the\n            final image.":"设备特定的扩展实现，以增强动态范围\r\n            最终图像。\r\n","The track number for the media.":"媒体的曲目号码。\r\n","Retrieves the current disposition mode that indicates the expected back button affordance. -or- Sets the disposition mode that indicates the expected affordance for the back button.":"检索当前的处置模式，该模式指示预期的后纽扣负担能力。 - 或设置表明后面按钮的预期负担能力的处置模式。\r\n","The metadata key to retrieve the number of tracks, such as audio, video,\n            text, in the data source, such as a mp4 or 3gpp file.":"检索轨道数量的元数据键，例如音频，视频，\r\n            文本，在数据源中，例如MP4或3GPP文件。\r\n","android.hardware.camera2.CaptureRequest.LENS_FOCAL_LENGTH":"android.hardware.camera2.capturerequest.lens_focal_length\r\n","Returns the rating system of this ":"返回该评分系统\r\n","android.net.TrafficStats.getUidUdpTxPackets(int)":"android.net.trafficstats.getuidudptxpackets（int）\r\n","android.media.audiofx.AudioEffect.EFFECT_TYPE_LOUDNESS_ENHANCER":"android.media.audiofx.audioeffect.effect_type_loudness_enhancer\r\n","android.media.ExifInterface.ExifInterface(java.io.InputStream)":"android.media.exifinterface.exifinterface（java.io.inputstream）\r\n","Sets the value of a ByteBuffer key.":"设置字节键键的值。\r\n","android.media.AudioRecord.read(short[], int, int, int)":"android.media.audiorecord.Read（简短[]，int，int，int）\r\n","Android.Media.Audiofx.Virtualizer.VIRTUALIZATION_MODE_AUTO":"android.media.audiofx.virtualizer.virtualization_mode_auto\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.getOutputMinFrameDuration(int, android.util.Size)":"android.hardware.camera2.params.RecommendedStreamConfigurationMap.getOutputminframeDuration（int，android.util.util.size）\r\n","Contains the ID of the audio session the effects should be applied to.":"包含音频会话的ID，应应用效果。\r\n","android.media.MediaDrm.setPropertyByteArray(java.lang.String, byte[])":"android.media.mediadrm.setpropertybytearray（java.lang.string，byte []）\r\n","Media server died.":"媒体服务器死亡。\r\n","Returns the device's number of input ports.":"返回设备的输入端口数量。\r\n","android.media.metrics.NetworkEvent.NETWORK_TYPE_4G":"android.media.metrics.networkevent.network_type_4g\r\n","Creates a playback session.":"创建一个播放会话。\r\n","Get the maximum volume this provider allows.":"获取此提供商允许的最大音量。\r\n","Adds a track with the specified format.":"用指定格式添加曲目。\r\n","android.media.RoutingSessionInfo.getDeselectableRoutes()":"android.media.routingsessioninfo.getDeselectableroutes（）\r\n","Called by the framework during initialization, when the InputMethod\n            interface for this service needs to be created.":"在初始化期间由框架调用，当\r\n            需要创建此服务的接口。\r\n","Event sent when the GPS system has received its first fix since starting.\n Call ":"自从GPS系统开始收到其第一个修复时，发送的事件。\r\n 称呼\r\n","android.location.provider.ProviderProperties.hasNetworkRequirement()":"android.location.provider.providerproperties.hasnetworkrequirement（）\r\n","android.media.AudioRecord.getChannelConfiguration()":"android.media.audiorecord.getChannelConfiguration（）\r\n","InputConnection#performEditorAction\n            InputConnection.performEditorAction()":"InputConnection＃performeditorAction\r\n            inputConnection.performeditorAction（）\r\n","Returns the frame rate of the video, in the unit of fps (frames per second).":"在FPS单位（每秒帧）中返回视频的帧速率。\r\n","direction from its address field.":"从其地址字段的方向。\r\n","android.location.LocationManager.requestLocationUpdates(long, float, android.location.Criteria, android.location.LocationListener, android.os.Looper)":"android.location.LocationManager.RequestLocationUpdates（long，float，android.location.Criteria，android.location.Location.LocationListener，android.os.oper）\r\n","android.media.audiofx.AudioEffect.ERROR_NO_INIT":"android.media.audiofx.audioeffect.error_no_init\r\n","android.location.Location.hasVerticalAccuracy()":"android.location.Location.hasverticalAccuracy（）\r\n","android.hardware.SensorManager.getInclination(float[])":"android.hardware.sensormanager.getinclination（float []）\r\n","3*i+1":"3*i+1\r\n","android.hardware.camera2.params.SessionConfiguration.getInputConfiguration()":"android.hardware.camera2.params.sessionconfiguration.getInputConfiguration（）\r\n","A key describing the pixel aspect ratio height.":"描述像素纵横比高度的键。\r\n","Returns the audio format at which audio is recorded on this Android device.":"返回此Android设备上记录音频的音频格式。\r\n","Specifies the zoom factor (i.":"指定变焦因子（i。\r\n","F:Android.Media.MediaDrm+MediaDrmEventArgs..ctor":"f：android.media.mediadrm+mediadrmeventargs..ctor\r\n","Returns true if the provider requires access to a\n            satellite-based positioning system (e.":"如果提供商需要访问一个\r\n            基于卫星的定位系统（e。\r\n","Base class for MediaCas exceptions":"MediaCas例外的基础课\r\n","android.media.AudioDeviceInfo.getEncapsulationMetadataTypes()":"android.media.audiodeviceinfo.getencapsulation metadatatypes（）\r\n","The sample is (at least partially) encrypted, see also the documentation\n            for ":"样本是（至少部分）加密的，另请参见文档\r\n            为了\r\n","android.hardware.Sensor.STRING_TYPE_TEMPERATURE":"android.hardware.sensor.string_type_temperature\r\n","Namespace#ABSTRACT":"名称空间＃摘要\r\n","Returns the self-powered attribute value configuration's attributes field.":"返回自源属性值配置的属性字段。\r\n","android.location.LocationManager.getAllProviders()":"android.location.locationmanager.getAllProviders（）\r\n","Specifies a video scaling mode.":"指定视频缩放模式。\r\n","Jupiter's gravity in SI units (m/s^2)":"木星在SI单元中的重力（M/S^2）\r\n","Applies lomo-camera style effect to image.":"将Lomo-Camera样式效果应用于图像。\r\n","Operation code for PowerDown":"电源代码\r\n","android.media.MediaSession2Service.SERVICE_INTERFACE":"android.media.mediasession2service.service_interface\r\n","A class representing a TV content rating.":"代表电视内容等级的课程。\r\n","android.location.LocationManager.getProviders(boolean)":"android.location.locationmanager.getProviders（boolean）\r\n","android.media.AudioManager.isWiredHeadsetOn()":"android.media.audiomanager.iswiredheadseton（）\r\n","android.media.MediaFormat.KEY_INTRA_REFRESH_PERIOD":"android.media.mediaformat.key_intra_refresh_period\r\n",": The requested operation cannot be\n            completed due to a problem that does not fit under any other error codes, or the error code\n            for the problem is defined on the higher version than application's\n            <code>android:targetSdkVersion</code>.":"：请求的操作不能是\r\n            由于问题在任何其他错误代码或错误代码下都不适合的问题而完成\r\n            因为该问题在比应用程序更高的版本上定义\r\n            <Code> Android：TargetsDkversion </code>。\r\n","android.media.VolumeAutomation.createVolumeShaper(android.media.Configuration)":"android.media.volumeautomation.createvolumeshaper（android.media.configuration）\r\n","Image Images":"图像图像\r\n","android.media.AudioTrack.setStartThresholdInFrames(int)":"android.media.audiotrack.setstartthresholdinframes（int）\r\n","Returns a pre-defined still image capture (jpeg) quality level\n            used for the given quality level in the Camera application for\n            the first back-facing camera on the device.":"返回预定义的静止图像捕获（JPEG）质量水平\r\n            用于相机应用中的给定质量水平的\r\n            设备上的第一个背面摄像头。\r\n","android.hardware.location.GeofenceHardwareRequest.getLatitude()":"android.hardware.location.geofencehardwarerequest.getLatitude（）\r\n","Gets sub error code.":"获取子错误代码。\r\n","android.location.Address.getSubThoroughfare()":"android.location.address.getSubthoroughFare（）\r\n","android.net.Ikev2VpnProfile.getAllowedAlgorithms()":"android.net.ikev2vpnprofile.getallowedal​​goriths（）\r\n","Interface definition of a callback to be invoked when there\n has been an error during an asynchronous operation (other errors\n will throw exceptions at method call time).":"接口的定义是在那里调用的回调的定义\r\n 在异步操作期间一直是错误（其他错误\r\n 将在方法呼叫时间上抛出异常）。\r\n","android.media.MediaRouter.getCategoryCount()":"android.media.mediarouter.getCategoryCount（）\r\n","Remove a route from this group.":"删除该组的路线。\r\n","android.hardware.camera2.params.ExtensionSessionConfiguration.ExtensionSessionConfiguration(int, java.util.List, java.util.concurrent.Executor, android.hardware.camera2.StateCallback)":"android.hardware.camera2.params.extensionsessessessesseessconfiguration.extensionsessessessesseessconfiguration（int，java.util.list，java.util.util.concurrent.executor，android.hardware.camera.camera2.statecallback）\r\n","KeyEvent#KEYCODE_MEDIA_PLAY":"keyevent＃keycode_media_play\r\n","Ask the input target to execute its default action via\n            ":"要求输入目标通过\r\n            \r\n"," timestamp, with the reported measurements in\n            nanoseconds (68% confidence).":" 时间戳，报告的测量\r\n            纳秒（68％的置信度）。\r\n","F:Android.Media.MediaPlayer+IOnErrorListener.OnError":"f：android.media.mediaplayer+ionerrorlistener.onerror\r\n","#setRepeatingBurst":"#setrepeatingburst\r\n","android.hardware.camera2.params.MeteringRectangle.MeteringRectangle(android.graphics.Rect, int)":"android.hardware.camera2.params.meteringRectangle.MeteringRectangle（android.graphics.Rect，int）\r\n","Returns a list of the keys contained in this map.":"返回此地图中包含的键的列表。\r\n","android.media.ExifInterface.TAG_FOCAL_PLANE_RESOLUTION_UNIT":"android.media.exifinterface.tag_focal_plane_resolution_unit\r\n","High-quality distortion correction is applied, at the cost of\n            possibly reduced frame rate relative to sensor output.":"采用高质量的失真校正，以成本为代价\r\n            相对于传感器输出，可能会降低帧速率。\r\n"," refers to a local file, the file may actually be opened by a\n process other than the calling application.  This implies that the pathname\n should be an absolute path (as any other process runs with unspecified current working\n directory), and that the pathname should reference a world-readable file.\n As an alternative, the application could first open the file for reading,\n and then use the file descriptor form ":" 指的是本地文件，该文件实际上可以由\r\n 除了调用应用程序以外的其他过程。这意味着路径名\r\n 应该是绝对路径（因为任何其他过程都在未指定的当前工作\r\n 目录），并且路径名应该引用世界可读文件。\r\n 作为替代方案，该应用程序可以首先打开读取文件，\r\n 然后使用文件描述符表单\r\n","android.media.RemoteControlClient.FLAG_KEY_MEDIA_POSITION_UPDATE":"android.media.remotecontrolclient.flag_key_media_position_update\r\n","List all available CA plugins on the device.":"列出设备上的所有可用CA插件。\r\n","android.media.ExifInterface.TAG_Y_CB_CR_COEFFICIENTS":"android.media.exifinterface.tag_y_cb_cr_coefficients\r\n","android.media.RemoteControlClient.setMetadataUpdateListener(android.media.OnMetadataUpdateListener)":"android.media.remotecontrolclient.setmetadataupdateListener（android.media.onmetadataupdateListener）\r\n","Broadcast intent action indicating that the vibrate setting has\n            changed.":"广播意图行动，表明振动设置具有\r\n            更改。\r\n","android.media.AudioManager.getDevices(int)":"android.media.audiomanager.getDevices（int）\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_DRM_DISALLOWED_OPERATION":"android.media.metrics.playbackerrorevent.Error_drm_dislowered_operation\r\n","Prepares the DRM for the current source":"为当前来源准备DRM\r\n","Listener for virtual keyboard events.":"侦听器虚拟键盘事件。\r\n","Temporarily suspend/resume encoding of input data.":"暂时暂停/简历输入数据编码。\r\n","The request has failed due to a network error.":"由于网络错误，该请求失败了。\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.getOutputSizes(java.lang.Class)":"android.hardware.camera2.params.recommendstreamconfigurationmap.getOutputsizes（java.lang.class）\r\n","android.hardware.location.GeofenceHardwareCallback.onGeofenceRemove(int, int)":"android.hardware.location.geofencehardwarecallback.ongeofenceremove（int，int）\r\n","Type for lights that indicate a monochrome color LED light.":"输入指示单色颜色LED灯的灯。\r\n","android.media.ExifInterface.TAG_OFFSET_TIME_ORIGINAL":"android.media.exifinterface.tag_offset_time_original\r\n","Returns presentation ID used by the framework to select an audio presentation rendered by a\n            decoder.":"框架使用的返回演示ID来选择由A呈现的音频演示文稿\r\n            解码器。\r\n","android.location.GnssMeasurement.ADR_STATE_UNKNOWN":"android.location.gnssmeasurement.adr_state_unknown\r\n","android.inputmethodservice.InputMethodService.shouldOfferSwitchingToNextInputMethod()":"android.inputmethodservice.inputmethodservice.shouldofferswitchingtonextinputmethod（）\r\n","android.media.AudioManager.generateAudioSessionId()":"android.media.audiomanager.generateaudiosessionid（）\r\n","#getCarrierFrequencyHz(int satelliteIndex)":"#getCarrierFrequencyHz（int satelliteIndex）\r\n",", or since\n     ":"，或者从那以后\r\n     \r\n","Gets the virtual display.":"获取虚拟显示。\r\n","Returns whether this AudioRecord is marked as privacy sensitive or not.":"返回该Audiorecord是否被标记为隐私敏感。\r\n","InputMethodManager#RESULT_UNCHANGED_HIDDEN\n                   InputMethodManager.RESULT_UNCHANGED_HIDDEN":"Inputmethodmanager＃result_unchanged_hidden\r\n                   inputmethodmanager.result_unchanged_hidden\r\n","Gets the master volume level of the environmental reverb effect.":"获取环境混响效应的主音量级别。\r\n","android.location.Criteria.getPowerRequirement()":"android.location.criteria.getPowerRequirlement（）\r\n","#getBiasUncertaintyNanos()":"#getBiasuncrestentynanos（）\r\n","android.mtp.MtpConstants.OPERATION_GET_THUMB":"android.mtp.mtpconstants.operation_get_thumb\r\n","Live playback type.":"实时播放类型。\r\n","#create(Context, int)":"#CREATE（上下文，INT）\r\n","android.media.MediaCas.SCRAMBLING_MODE_AES_ECB":"android.media.mediacas.scrambling_mode_aes_ecb\r\n","android.location.GnssMeasurement.getCarrierPhase()":"android.location.gnssmeasurement.getCarrierphase（）\r\n","Sanitize an unencoded value.":"消毒未编码的价值。\r\n","Returns the value of the setting for background data usage.":"返回背景数据使用的设置值。\r\n","Returns the data for an object as a byte array.":"将对象的数据返回为字节数组。\r\n","android.media.AudioTrack.getBufferSizeInFrames()":"android.media.audiotrack.getBuffersizeInframes（）\r\n","android.hardware.camera2.CaptureResult.REPROCESS_EFFECTIVE_EXPOSURE_FACTOR":"android.hardware.camera2.captureresult.reprocess_effective_exposure_factor\r\n","Manages the retrieval of certain types of ":"管理某些类型的检索\r\n","android.mtp.MtpDevice.getStorageId(int)":"android.mtp.mtpdevice.getStorageid（int）\r\n","android.hardware.biometrics.BiometricPrompt.AUTHENTICATION_RESULT_TYPE_BIOMETRIC":"android.hardware.biometrics.biometricprompt.authentication_result_type_biometric\r\n","android.hardware.camera2.CaptureRequest.getTag()":"android.hardware.camera2.capturreequest.getTag（）\r\n","CaptureRequest#COLOR_CORRECTION_ABERRATION_MODE android.colorCorrection.aberrationMode":"captureRequest＃color_correction_aberration_mode android.colorcorrection.aberrationmode\r\n","android.media.AudioPlaybackCaptureConfiguration.getExcludeUids()":"android.media.audioplaybackcaptureconfiguration.getexcludeuids（）\r\n","#getLeapSecond()":"#getLeapSecond（）\r\n","android.media.MediaMetadataEditor.putBitmap(int, android.graphics.Bitmap)":"android.media.mediametadataeditor.putbitmap（int，android.graphics.bitmap）\r\n","ALL_CODECS":"all_codecs\r\n","AudioDeviceCallback defines the mechanism by which applications can receive notifications\n            of audio device connection and disconnection events.":"AudiodeviceCallback定义了应用程序可以接收通知的机制\r\n            音频设备连接和断开事件。\r\n","#TONE_SUP_CONGESTION_ABBREV":"#TONE_SUP_CONGESTION_ABBREV\r\n","#requestAudioFocus(AudioFocusRequest)":"#Requestaudiofocus（AudioFocusRequest）\r\n","Returns the reference constellation type for inter-signal bias.":"返回信号间偏置的参考星座类型。\r\n","Unregister the receiver of MEDIA_BUTTON intents.":"取消介绍媒体的接收器。\r\n","Beidou D2 message contained in the structure.":"结构中包含的Beidou D2消息。\r\n","Defines the audio encoding.":"定义音频编码。\r\n","android.media.MediaPlayer.setOnTimedMetaDataAvailableListener(android.media.OnTimedMetaDataAvailableListener)":"android.media.mediaplayer.setontimedmetadataavailablelistener（android.media.tomia.thimedmetadataavailablelistener）\r\n","A simple object for retrieving the results of a DHCP request.":"一个简单的对象，用于检索DHCP请求的结果。\r\n","Return the estimated playback position of the current media track or a negative value\n            if not available.":"返回当前媒体轨道的估计播放位置或负值\r\n            如果没有。\r\n","A tag used to record the offset from UTC (the time difference from Universal Time\n             Coordinated including daylight saving time) of the time of DateTimeDigitized tag.":"用于记录UTC偏移量的标签（通用时间的时间差\r\n             协调的数据设定标签的时间）。\r\n","android.media.metrics.PlaybackStateEvent.STATE_BUFFERING":"android.media.metrics.playbackstateevent.state_buffering\r\n","Return the current security level of a session.":"返回会话的当前安全级别。\r\n","Event sent periodically to report GPS satellite status.\n Call ":"定期发送活动以报告GPS卫星状态。\r\n 称呼\r\n","Error code for a parsing error associated to a media container format bitstream":"与媒体容器格式相关的解析错误的错误代码\r\n","Used to notify an app that's caching the proxy that either the default\n            connection has changed or any connection's proxy has changed.":"用于通知正在缓存代理的应用程序\r\n            连接已更改或任何连接的代理已更改。\r\n","if the internal player engine has not been\n initialized or has been released.\n":"如果内部播放器引擎没有\r\n 初始化或已发布。\r\n\r\n","android.hardware.camera2.CaptureResult.SENSOR_TIMESTAMP":"android.hardware.camera2.captureresult.sensor_timestamp\r\n","if outputType is not one of\n FORMAT_DEGREES, FORMAT_MINUTES, or FORMAT_SECONDS.\n":"如果outputType不是一个\r\n format_degrees，format_minutes或format_seconds。\r\n\r\n","android.media.tv.TvRecordingClient":"android.media.tv.tvrecordingclient\r\n","Media network event.":"媒体网络事件。\r\n","if it is called before\n setOutputFormat() or after prepare().":"如果以前被调用\r\n setOutputformat（）或prepar prepar（）之后。\r\n","#values values":"#values值\r\n"," is explicitly bound.":" 明确约束。\r\n","Return a Rating instance with a star-based rating.":"返回具有基于星级的评分的评级实例。\r\n","Flush both input and output ports of the component.":"冲洗组件的输入和输出端口。\r\n","android.media.MediaFormat.KEY_LATENCY":"android.media.mediaformat.key_latency\r\n","android.media.effect.EffectFactory.EFFECT_LOMOISH":"android.media.effect.effectfactory.effect_lomoish\r\n","#GROUP_UNKNOWN":"#group_unknown\r\n","Returns the pixel aspect ratio (the ratio of a pixel's width to its height) of the video.":"返回视频的像素纵横比（像素宽度与其高度的比率）。\r\n","#TONE_CDMA_MED_L":"#TONE_CDMA_MED_L\r\n"," with the requested input image ":" 带有请求的输入图像\r\n","OnKeyStatusChangeListener":"Onkeystatuschangelistener\r\n","android.net.IpSecAlgorithm.AUTH_HMAC_MD5":"android.net.ipsecalgorithm.auth_hmac_md5\r\n","luminance at sunrise in lux":"勒克斯日出时亮度\r\n","android.hardware.lights.Light":"android.hardware.lights.light\r\n","Clears the listener previously set with\n            ":"清除以前设置的听众\r\n            \r\n","Builder#setSampleRate(int)":"构建器＃setSamplerate（int）\r\n","Operation failed due to bad parameter value.":"由于参数值不良，操作失败。\r\n","Returns true if the provider requires access to a\n            data network (e.":"如果提供商需要访问一个\r\n            数据网络（e。\r\n","android.hardware.camera2.DngCreator.DngCreator(android.hardware.camera2.CameraCharacteristics, android.hardware.camera2.CaptureResult)":"android.hardware.camera2.dngcreator.dngcreator（android.hardware.camera2.cameracharacteristics，android.hardware.camera.camera2.captureresult）\r\n","android.location.LocationProvider.getPowerRequirement()":"android.location.locationprovider.getPowerRequirlement（）\r\n","Remove network active listener previously registered with\n ":"删除以前已注册的网络活动侦听器\r\n \r\n","Method called when a new frequency capture is available.":"当有新的频率捕获可用时调用。\r\n","if any of input array length is invalid,\n            or if any of the elements in the array are not in the range of\n            [":"如果任何输入阵列长度无效，\r\n            或数组中的任何元素不在\r\n            [[\r\n","Whether the camera device supports ":"相机设备是否支持\r\n","android.media.ExifInterface.TAG_APERTURE_VALUE":"android.media.exifinterface.tag_aperture_value\r\n","Create a new immutable ":"创建一个新的不变的\r\n","Sets whether TS parsing should ignore splice information streams.":"设置TS解析是否应忽略剪接信息流。\r\n","This method is called when the application starts to receive text and it\n            is ready for this input method to process received events and send result\n            text back to the application.":"当应用程序开始接收文本时，该方法被调用\r\n            已经准备好用于处理接收事件并发送结果的输入方法\r\n            发短信回到应用程序。\r\n","A device type for rerouting audio within the Android framework between mixes and\n            system applications.":"用于在混合和之间的Android框架内重新路由音频的设备类型\r\n            系统应用。\r\n","android.media.metrics.TrackChangeEvent.TRACK_STATE_OFF":"android.media.metrics.trackchangeevent.track_state_off\r\n","Determine why the request was dropped, whether due to an error or to a user\n            action.":"确定为什么要删除请求，无论是由于错误还是用户\r\n            行动。\r\n","android.hardware.SensorEventCallback.onFlushCompleted(android.hardware.Sensor)":"android.hardware.sensoreventcallback.onflushcompleted（android.hardware.sensor）\r\n","Stream from device.":"从设备流。\r\n","Get the supported video sizes for an input high speed FPS range.":"获取输入高速FPS范围的支持的视频尺寸。\r\n","Returns the list of IDs for all storage units on this device\n            Information about each storage unit can be accessed via ":"返回此设备上所有存储单元的ID列表\r\n            有关每个存储单元的信息可以通过\r\n","android.media.MediaMetadataRetriever.OPTION_NEXT_SYNC":"android.media.mediametadataretriever.option_next_sync\r\n"," handle of the input image\n            intended for GPU and/or hardware access.":" 输入图像的手柄\r\n            用于GPU和/或硬件访问。\r\n","TvInputService.Session#onTimeShiftGetStartPosition()":"tvinputservice.session＃ontimeshiftgetstartposition（）\r\n","Request number of presets.":"请求预设数量。\r\n","if the response indicates that the\n server rejected the request\n":"如果响应表明\r\n 服务器拒绝了请求\r\n\r\n","android.hardware.camera2.DngCreator.writeByteBuffer(java.io.OutputStream, android.util.Size, java.nio.ByteBuffer, long)":"android.hardware.camera2.dngcreator.writebytebuffer（java.io.outputstream，android.util.size，java.nio.bytebuffer，long）\r\n","Error code for failing to resolve a hostname":"无法解析主机名的错误代码\r\n","android.media.audiofx.NoiseSuppressor.isAvailable()":"android.media.audiofx.noisesuppressor.isavailable（）\r\n","android.mtp.MtpEvent.EVENT_CAPTURE_COMPLETE":"android.mtp.mtpevent.event_capture_complete\r\n","Bind a new application environment in to the input method, so that it\n            can later start and stop input processing.":"将新的应用程序环境绑定到输入方法，以便\r\n            稍后可以开始并停止输入处理。\r\n","Return the proxy host set by the user.":"返回用户设置的代理主机。\r\n"," object with predefined content rating strings.":" 具有预定义内容额定字符串的对象。\r\n","android.media.MediaSession2.getId()":"android.media.mediasession2.getID（）\r\n","android.mtp.MtpDevice":"android.mtp.mtpdevice\r\n","Register a callback to be invoked when an error occurs while\n            recording.":"在发生错误时注册要调用的回调\r\n            记录。\r\n"," that the provider service maintains.":" 提供者服务维持。\r\n","Operation code for CopyObject":"CopyObject的操作代码\r\n","android.media.MediaMetadata.METADATA_KEY_DURATION":"android.media.mediametadata.metadata_key_duration\r\n","The state of the value ":"价值的状态\r\n","The TvInputService class represents a TV input or source such as HDMI or built-in tuner which\n            provides pass-through video or broadcast TV programs.":"TVInputService类代表电视输入或源，例如HDMI或内置调谐器\r\n            提供通行视频或广播电视节目。\r\n","android.media.AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK":"android.media.audiomanager.audiofocus_gain_transient_may_duck\r\n","CDMA MED PBX SS tone: {2600Hz 25ms, 2900Hz 25ms} 8 times\n 200 ms OFF, {2600Hz 25ms 2900Hz 25ms}8 times,\n 2000ms OFF, REPEAT....":"CDMA MED PBX SS音调：{2600Hz 25ms，2900Hz 25ms} 8次\r\n 200毫秒关闭，{2600Hz 25ms 2900Hz 25ms} 8次，\r\n 2000毫秒左右，重复...\r\n","Registers to receive notifications about all networks which satisfy the given\n ":"寄存器以接收有关满足给定网络的所有网络的通知\r\n \r\n","android.inputmethodservice.InputMethodService.setBackDisposition(int)":"android.inputmethodservice.inputmethodservice.setbackdisposition（int）\r\n","Operation code for GetObject":"getObject的操作代码\r\n","This mode disables any Dual Mono presentation effect.":"此模式禁用任何双单声道呈现效果。\r\n","The constant used to indicate that the geofence id is unknown.":"用于表明地理iD的常数未知。\r\n","android.media.Ringtone.stop()":"android.media.rringtone.stop（）\r\n","android.location.Location.setElapsedRealtimeUncertaintyNanos(double)":"android.location.location.SetelapsedRealTimeIncterntytynanos（double）\r\n","UUID for equalizer effect":"均衡效应的UUID\r\n","android.media.AudioPlaybackCaptureConfiguration.getMediaProjection()":"android.media.audioplaybackcaptureconfiguration.getMediaproctive（）\r\n","Popup characters ":"弹出字符\r\n","AudioRouting defines an interface for controlling routing and routing notifications in\n            AudioTrack and AudioRecord objects.":"AudiOring定义了用于控制路由和路由通知的接口\r\n            录音带和Audiorecord对象。\r\n","PlatformVpnProfile represents a configuration for a platform-based VPN implementation.":"PlatformVPNProfile代表了基于平台的VPN实现的配置。\r\n","android.media.MediaActionSound.load(int)":"android.media.mediaactionsound.load（int）\r\n","Returns the estimated minimum buffer size required for an AudioTrack\n            object to be created in the ":"返回录音带所需的估计最小缓冲尺寸\r\n            要在\r\n","Retrieve the subject line from the parsed mailto URL.":"从解析的邮件中检索主题行。\r\n","android.os.Environment#getExternalStorageDirectory":"android.os.Environment＃getExternalStoragedirectory\r\n","Gets the additional session information which was set when the session was created.":"获取创建会话时设置的其他会话信息。\r\n","Audio track.":"音轨。\r\n","android.hardware.camera2.params.MeteringRectangle.getWidth()":"android.hardware.camera2.params.meteringrectangle.getWidth（）\r\n","android.media.audiofx.BassBoost.getStrengthSupported()":"android.media.audiofx.bassboost.getstrengthsupported（）\r\n","MediaFormat#MediaFormat an empty mediaformat":"MediaFormat＃MediaFormat一个空的MediaFormat\r\n","The maximum numbers of different types of output streams\n            that can be configured and used simultaneously by a camera device\n            for any processed (and stalling) formats.":"不同类型的输出流的最大数量\r\n            可以由相机设备同时配置和使用\r\n            对于任何处理（和失速）格式。\r\n","Get the characters in the timed text.":"在定时文本中获取字符。\r\n","android.media.tv.TvInputManager.ACTION_VIEW_RECORDING_SCHEDULES":"android.media.tv.tvinputmanager.action_view_recording_schedules\r\n","android.location.Address.setPremises(java.lang.String)":"android.location.address.setpremises（java.lang.string）\r\n","android.media.AudioRecord.getAudioSessionId()":"android.media.audiorecord.getAudioSessionId（）\r\n","Returns a copy of the IP address bytes in network order (the highest order byte is the zeroth\n element).":"按网络顺序返回IP地址字节的副本（最高顺序字节为Zeroth\r\n 元素）。\r\n","Error code for an unsupported feature in a media manifest":"媒体清单中不支持功能的错误代码\r\n","android.media.ExifInterface.TAG_Y_CB_CR_SUB_SAMPLING":"android.media.exifinterface.tag_y_cb_cr_sub_sampling\r\n","#getAutomaticGainControlLevelDb()":"#getautomaticgaincontrolleveldb（）\r\n","if the given route is ":"如果给定的路线是\r\n","android.media.RingtoneManager":"android.media.RingtoneManager\r\n","Indicates this session supports the set playback speed command.":"指示此会话支持设置的播放速度命令。\r\n","#setCommunicationDevice(AudioDeviceInfo)":"#setCommunicationDevice（AudioDeviceInfo）\r\n","android.location.Address.getUrl()":"android.location.address.geturl（）\r\n","Releases resources associated with this ToneGenerator object.":"释放与此ToneGenerator对象关联的资源。\r\n","#getTimeNanos()":"#getTimenanos（）\r\n","android.media.MediaFormat.KEY_COLOR_FORMAT":"android.media.mediaformat.key_color_format\r\n","android.media.AudioDeviceInfo.TYPE_HDMI_EARC":"android.media.audiodeviceinfo.type_hdmi_earc\r\n","android.media.AudioRecord.getPositionNotificationPeriod()":"android.media.audiorecord.getPositionNotificationPeriod（）\r\n","Intent to signal to the effect control application or service that a new audio session\n             is opened and requires audio effects to be applied.":"意图向新音频会话发出效果控制应用程序或服务\r\n             打开并需要应用音频效果。\r\n","#getScaledFrameAtTime(long, int, int, int, BitmapParams)":"#getScaledFrameAttime（long，int，int，int，bitmapparams）\r\n","android.hardware.display.DisplayManager.getDisplays(java.lang.String)":"android.hardware.display.displaymanager.getDisplays（java.lang.string）\r\n","Returns the serial number of the device.":"返回设备的序列号。\r\n","android.location.LocationManager.requestFlush(java.lang.String, android.location.LocationListener, int)":"android.location.LocationManager.RequestFlush（Java.lang.String，Android.Location.Location.LocationListener，int）\r\n","This key request type species that the keys will be for online use, they will\n not be saved to the device for subsequent use when the device is not connected\n to a network.":"钥匙将用于在线使用的此密钥请求类型的物种，它们将\r\n 当设备未连接时，不保存到设备以供后续使用\r\n 到网络。\r\n","android.hardware.camera2.CameraMetadata.SCALER_ROTATE_AND_CROP_NONE":"android.hardware.camera2.camerametadata.scaler_rotate_and_crop_none\r\n","android.media.AudioTrack.play()":"android.media.audiotrack.play（）\r\n","The sample is a sync sample (or in ":"样本是同步样本（或\r\n","android.media.midi.MidiDeviceInfo.PROPERTY_SERIAL_NUMBER":"android.media.midi.midideviceinfo.property_serial_number\r\n","State indicating this item is currently in an error state.":"表明此项目的状态当前处于错误状态。\r\n","This class gives information about, and interacts with media metrics.":"该课程提供有关媒体指标的信息，并与媒体指标进行交互。\r\n","android.media.audiofx.PresetReverb.PRESET_SMALLROOM":"android.media.audiofx.presetreverb.preset_smallroom\r\n","android.media.audiofx.Visualizer.MEASUREMENT_MODE_NONE":"android.media.audiofx.visualizer.measurement_mode_none\r\n","#create(Context, Uri, SurfaceHolder)":"#CREATE（上下文，URI，表面持有人）\r\n","android.media.AudioManager.getMicrophones()":"android.media.audiomanager.getmicrophones（）\r\n","Return the encoding.":"返回编码。\r\n","android.media.MediaMetadataRetriever.OPTION_CLOSEST_SYNC":"android.media.mediametadataretriever.option_closest_sync\r\n","MtpClient constructor":"mtpclient构造函数\r\n","android.media.MediaParser.getParserName()":"android.media.mediaparser.getParsername（）\r\n","android.hardware.camera2.CameraManager.unregisterTorchCallback(android.hardware.camera2.TorchCallback)":"android.hardware.camera2.cameramanager.unregistertorchcallback（android.hardware.camera2.torchcallback）\r\n","android.media.MediaSession2.sendSessionCommand(android.media.ControllerInfo, android.media.Session2Command, android.os.Bundle)":"android.media.mediasession2.sendsessioncommand（android.media.controllerinfo，android.media.session2Command2Command2Command，android.os.bundle）\r\n","Error code for lack of network connectivity while trying to access a network resource":"试图访问网络资源时缺乏网络连接的错误代码\r\n","Mute or unmute an audio stream.":"静音或取消静音音频流。\r\n","android.media.MediaPlayer.addTimedTextSource(android.content.Context, android.net.Uri, java.lang.String)":"android.media.mediaplayer.addtimedtextsource（android.content.context，android.net.uri，java.lang.string）\r\n","android.media.MediaExtractor.SEEK_TO_PREVIOUS_SYNC":"android.media.mediaextractor.seek_to_previous_sync\r\n","Float.NEGATIVE_INFINITY":"float.negation_infinity\r\n","The sequence ID for this failure that was returned by the\n            ":"该故障的序列ID由\r\n            \r\n","android.media.tv.TvInputInfo.writeToParcel(android.os.Parcel, int)":"android.media.tv.tvinputinfo.writetetoparcel（android.os.os.parcel，int）\r\n","android.media.MediaRecorder.setLogSessionId(android.media.metrics.LogSessionId)":"android.media.mediarecorder.setLogsessionId（android.media.metrics.logsessionid）\r\n","MediaSession.QueueItem#UNKNOWN_ID":"MediaSession.queueItem＃unknown_id\r\n","android.media.AudioFormat.getChannelIndexMask()":"android.media.audioformat.getChannelIndexMask（）\r\n","FaceDetector.Face":"FACEDETECTOR.FACE\r\n","Immutable class to store an\n            ":"不变的班级存储\r\n            \r\n","Applies film grain effect to image.":"将膜晶粒效应应用于图像。\r\n","Return number of packets received since device boot.":"自设备引导以来收到的数据包的返回号码。\r\n","android.media.AudioManager.getStreamMinVolume(int)":"android.media.audiomanager.getStreamminvolume（int）\r\n","android.media.tv.TvRecordingClient.resumeRecording()":"android.media.tv.tvrecordingclient.resumerecording（）\r\n","android.hardware.camera2.CaptureFailure.getSequenceId()":"android.hardware.camera2.capturefailure.getSequenceId（）\r\n","android.media.AudioManager.FX_BACK":"android.media.audiomanager.fx_back\r\n","android.media.ExifInterface.TAG_PHOTOMETRIC_INTERPRETATION":"android.media.exifinterface.tag_photometric_interpretation\r\n","android.hardware.camera2.params.MeteringRectangle":"android.hardware.camera2.params.meteringRectangle\r\n","android.media.AudioFocusRequest.getFocusGain()":"android.media.audiofocusrequest.getFocusgain（）\r\n","#getMinBufferSize(int, int, int)":"#getMinbuffersize（int，int，int）\r\n","android.mtp.MtpObjectInfo.getKeywords()":"android.mtp.mtpobjectInfo.getKeywords（）\r\n","Instruct the video encoder in \"surface-input\" mode to limit the gap of\n            timestamp between any two adjacent frames fed to the encoder to the\n            specified amount (in micro-second).":"在“表面输入”模式中指示视频编码器以限制\r\n            任何两个相邻框架之间的时间戳馈送到编码器\r\n            指定金额（以微秒为单位）。\r\n","Returns whether the service is running in always-on VPN lockdown mode.":"返回该服务是否在始终在VPN锁定模式下运行。\r\n","Three-dimensional (e.":"三维（e。\r\n","#finalizeOutputConfigurations":"#FinalizeOutputConfiguration\r\n","If a surface has been specified in a previous call to ":"如果在先前的呼叫中指定了表面\r\n","AudioFormat#CHANNEL_IN_STEREO":"AudioFormat＃channel_in_stereo\r\n","android.mtp.MtpConstants.OPERATION_GET_OBJECT_INFO":"android.mtp.mtpconstants.operation_get_object_info\r\n","android.location.GnssCapabilities.hasNavigationMessages()":"android.location.gnsscapabilities.hasnavigationmessages（）\r\n","android.media.MediaParser.PARSER_NAME_AC3":"android.media.mediaparser.parser_name_ac3\r\n","Return the number of bytes received on the specified interface since the interface\n            was created.":"返回指定接口上接收到的字节数，因为接口\r\n            被创建了。\r\n","Broadcasts a session command to all the connected controllers":"向所有连接的控制器广播会话命令\r\n","Whether to vibrate if going into the vibrate ringer mode.":"是否进入振动铃声模式，是否要振动。\r\n","9":"9\r\n","android.media.CamcorderProfile.videoCodec":"android.media.camcorderprofile.videocodec\r\n","Application specific USB class.":"特定应用程序的USB类。\r\n","The type of encryption that has been applied,\n see ":"已应用的加密类型\r\n 看\r\n","android.media.AudioRecord.getLogSessionId()":"android.media.audiorecord.getlogsessionid（）\r\n","The area of the image sensor which corresponds to active pixels prior to the\n            application of any geometric distortion correction.":"图像传感器的面积对应于在\r\n            任何几何失真校正的应用。\r\n","The metadata key to retrieve the numberic string that describes which\n part of a set the audio data source comes from.":"检索描述哪个数字字符串的元数据键\r\n 集合的一部分音频数据源来自。\r\n","Releases the native AudioTrack resources.":"释放本地录音机资源。\r\n","if the camera is disabled by device policy,\n has been disconnected, or is being used by a higher-priority camera API client.":"如果摄像机是通过设备策略禁用的，\r\n 已断开连接，或者正在使用高优先摄像机API客户端使用。\r\n","Allow space (' ') characters.":"允许空间（''）字符。\r\n","android.hardware.camera2.CaptureResult.JPEG_THUMBNAIL_QUALITY":"android.hardware.camera2.captureresult.jpeg_thumbnail_quality\r\n","Return a value sanitizer that allows any special characters\n            except angle brackets ('<' and '>') and Nul ('\\0').":"返回允许任何特殊字符的价值消毒剂\r\n            除了角度支架（'<'and'>'）和nul（'\\ 0'）。\r\n","MD5 HMAC Authentication/Integrity Algorithm.":"MD5 HMAC身份验证/完整性算法。\r\n","Get the codec info.":"获取编解码器信息。\r\n","Bundle key for the device's serial number property.":"设备序列号属性的捆绑键。\r\n","android.media.metrics.RecordingSession":"android.media.metrics.Recordingsession\r\n","Unregisters a GPS Measurement callback.":"解开GPS测量回调。\r\n","Type is String.":"类型是字符串。\r\n","android.location.LocationManager.setTestProviderLocation(java.lang.String, android.location.Location)":"android.location.locationManager.setTestProviderLocation（java.lang.string，android.location.location.location）\r\n","android.location.Criteria.setVerticalAccuracy(int)":"Android.Location.Criteria.SetverticalCuracy（INT）\r\n","android.media.MediaFormat.KEY_COLOR_TRANSFER":"android.media.mediaformat.key_color_transfer\r\n","Get the format for this image.":"获取此图像的格式。\r\n","Returns the maximum storage capacity for the storage unit in bytes":"返回字节中存储单元的最大存储容量\r\n","If possible, seek to a sync sample at or before the specified time":"如果可能，请在指定时间或之前寻求同步样品\r\n","android.media.AudioDeviceCallback":"android.media.audiodevicecallback\r\n","Error code for a failure while trying to obtain a license":"试图获得许可证时故障的错误代码\r\n","android.hardware.usb.UsbDeviceConnection.close()":"android.hardware.usb.usbdeviceconnection.close（）\r\n","android.location.Address.hasLatitude()":"android.location.address.haslatitude（）\r\n","Get a controller for this session.":"获取此会话的控制器。\r\n","Returns the height of the MTP object in pixels\n            Will be zero for non-image objects":"返回像素中MTP对象的高度\r\n            非图像对象将为零\r\n","Current lens status.":"当前的镜头状态。\r\n","android.os.Bundle":"android.os.bundle\r\n","Builder#setSubtitle(CharSequence)":"建筑商＃setSubtitle（charsequence）\r\n","Called when the subtype was changed.":"当尺型更改时称呼。\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_WRITER":"android.media.mediametadataretriever.metadata_key_writer\r\n","android.media.audiofx.AudioEffect.EXTRA_CONTENT_TYPE":"android.media.audiofx.audioeffect.extra_content_type\r\n","android.hardware.camera2.CaptureRequest.STATISTICS_FACE_DETECT_MODE":"android.hardware.camera2.capturerequest.statistics_face_detect_mode\r\n","android.media.MediaRecorder.MediaRecorder(android.content.Context)":"android.media.mediarecorder.mediarecorder（android.content.context）\r\n","android.hardware.lights.Light.describeContents()":"android.hardware.lights.light.describecontents（）\r\n","Event code for DEVICE_PROP_CHANGED event":"设备的事件代码_prop_changed事件\r\n","android.location.LocationManager.GPS_PROVIDER":"android.location.locationmanager.gps_provider\r\n","android.media.Image.getHardwareBuffer()":"android.media.image.gethardwarebuffer（）\r\n","android.media.session.MediaController.getPlaybackInfo()":"android.media.session.mediacontroller.getPlaybackinfo（）\r\n","A playback type indicating the presentation of the media is happening on\n a different device (i.e. the remote device) than where it is controlled from.":"播放类型，指示媒体的介绍正在发生\r\n 与从中受控的地方不同的设备（即远程设备）。\r\n","Bitmask used for encoding the request type for a control request on endpoint zero.":"BitMask用于编码端点零上的控制请求的请求类型。\r\n","True if this location has a speed accuracy.":"如果此位置具有速度准确性，则为是。\r\n","android.media.MediaCodec.createDecoderByType(java.lang.String)":"android.media.mediacodec.CreatedeDecoderByType（java.lang.string）\r\n","android.media.Ringtone.getStreamType()":"android.media.ringtone.getStreamType（）\r\n","The height of the image in pixels.":"图像的高度以像素为单位。\r\n","android.hardware.camera2.CaptureRequest.LENS_OPTICAL_STABILIZATION_MODE":"android.hardware.camera2.capturerequest.lens_optical_stabilization_mode\r\n","android.media.RingtoneManager.getDefaultUri(int)":"android.media.ringtonemanager.getDefaulturi（int）\r\n","android.location.Address.setSubThoroughfare(java.lang.String)":"android.location.Address.setsubthoroughfare（java.lang.string）\r\n","Returns the largest index currently in use to specify an address line.":"返回当前使用的最大索引来指定地址行。\r\n","android.hardware.input.InputManager.META_DATA_KEYBOARD_LAYOUTS":"android.hardware.input.inputmanager.meta_data_keyboard_layouts\r\n",", or the default\n            attributes if none were set.":"，或默认\r\n            属性如果没有设置。\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.getHighResolutionOutputSizes(int)":"android.hardware.camera2.params.recommendstreamconfigurationmap.gethighresolutionOutputsizes（int）\r\n"," instance to send transport actions to\n            the associated session.":" 实例将运输措施发送到\r\n            相关会话。\r\n","android.hardware.camera2.CameraCharacteristics.STATISTICS_INFO_AVAILABLE_HOT_PIXEL_MAP_MODES":"android.hardware.camera2.cameracharacteristics.statistics_info_available_hot_pixel_map_modes\r\n","android.hardware.display.DeviceProductInfo.CONNECTION_TO_SINK_UNKNOWN":"android.hardware.display.deviceproductinfo.connection_to_sink_unknown\r\n","Gets the PSK identity to report to the server to help agree on the PSK for the provided\n engine.":"获取PSK身份向服务器报告，以帮助就提供的PSK达成共识\r\n 引擎。\r\n","android.hardware.camera2.CameraAccessException":"android.hardware.camera2.cameraaccessexception\r\n","Return the maximum streaming dimension of this capability.":"返回此功能的最大流尺寸。\r\n","android.media.effect.EffectFactory.EFFECT_NEGATIVE":"android.media.effect.effectfactory.effect_negative\r\n","#getHighSpeedVideoFpsRanges()":"#gethighspeedVideOfpSranges（）\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_PIXEL_ARRAY_SIZE_MAXIMUM_RESOLUTION":"android.hardware.camera2.cameracharacteristics.sensor_info_pixel_arday_array_size_maximum_resolution\r\n","when sensor is null or a trigger sensor\n":"当传感器为空或触发传感器时\r\n\r\n","Gets the media duration in milliseconds.":"将媒体的持续时间限制在毫秒内。\r\n","EULER_Y":"Euler_y\r\n","android.media.MediaExtractor.hasCacheReachedEndOfStream()":"android.media.mediaextractor.hascachereachedendendofstream（）\r\n","Base class for MediaCas runtime exceptions":"MediaCas Runtime异常的基类\r\n","android.media.MediaMuxer.writeSampleData(int, java.nio.ByteBuffer, android.media.BufferInfo)":"android.media.mediamuxer.writesampledata（int，java.nio.bytebuffer，android.media.bufferinfo）\r\n","#getSatelliteInterSignalBiasUncertaintyNanos()":"#getSatelliteIntersignalBiasuncuncterntytynanos（）\r\n","True if the provider is able to provide speed under at least some conditions.":"如果提供商能够至少在某些条件下提供速度，则是真的。\r\n","Adds a listener for being notified of changes to the communication audio device.":"添加了一个听众，以通知通信音频设备的更改。\r\n","android.media.MediaCodec.releaseOutputBuffer(int, boolean)":"android.media.mediacodec.ReleaseOutputbuffer（INT，boolean）\r\n","android.media.tv.TvView.timeShiftPlay(java.lang.String, android.net.Uri)":"android.media.tv.tvvie.timeshiftplay（java.lang.string，android.net.uri）\r\n","ByteBuffer":"ByteBuffer\r\n","android.location.GnssNavigationMessage.getStatus()":"android.location.gnssnavigationMessage.getStatus（）\r\n","if latitude is\n less than -90 or greater than 90":"如果是纬度\r\n 小于-90或大于90\r\n","android.location.GnssClock.hasDriftNanosPerSecond()":"android.location.gnssclock.hasdriftnanospersecond（）\r\n","Returns the sub-locality of the address, or null if it is unknown. -or- Sets the sub-locality of the address to the given String, which may be null.":"返回地址的子本地性，或者如果未知，则返回null。 - 或 - 将地址的子局部性设置为给定的字符串，这可能为null。\r\n","Gets the client package name of the session":"获取会话的客户包名称\r\n","Denotes a successful operation.":"表示成功的操作。\r\n","android.media.audiofx.EnvironmentalReverb.PARAM_REFLECTIONS_DELAY":"android.media.audiofx.environmentalreverb.param_reflections_delay\r\n","android.hardware.camera2.CaptureResult.TONEMAP_CURVE":"android.hardware.camera2.captureresult.tonemap_curve\r\n","android.media.audiofx.EnvironmentalReverb.PARAM_REFLECTIONS_LEVEL":"android.media.audiofx.environmentalreverb.param_reflections_level\r\n","android.media.tv.TvTrackInfo.isSpokenSubtitle()":"android.media.tv.tvtrackinfo.isspokensubtitle（）\r\n","Make sure you call this when you're done to free up any opened\n            component instance instead of relying on the garbage collector\n            to do this for you at some point in the future.":"完成后，请确保您打电话以释放任何打开\r\n            组件实例而不是依靠垃圾收集器\r\n            在将来的某个时候为您做这件事。\r\n","android.hardware.display.DisplayManager.MATCH_CONTENT_FRAMERATE_ALWAYS":"android.hardware.display.displaymanager.match_content_framerate_always\r\n","CDMA LOW PBX L: {1300Hz 25ms,1450Hz 25ms}20 times,\n 2000ms OFF,  REPEAT....":"CDMA低PBX L：{1300Hz 25ms，1450Hz 25ms} 20次，\r\n 2000毫秒左右，重复...\r\n","Noise model coefficients for each CFA mosaic channel.":"每个CFA镶嵌通道的噪声模型系数。\r\n","Return number of bytes transmitted across mobile networks since device\n            boot.":"自设备以来，移动网络传输的字节的返回数量\r\n            引导。\r\n","This class represents a Trigger Event - the event\n            associated with a Trigger Sensor.":"此类表示一个触发器事件-事件\r\n            与触发传感器相关联。\r\n","Releases all system resources related to the device.":"释放与设备相关的所有系统资源。\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_XMP_LENGTH":"android.media.mediametadataretriever.metadata_key_xmp_length\r\n","An optional key describing the low latency decoding mode.":"描述低延迟解码模式的可选密钥。\r\n","android.hardware.camera2.CameraCharacteristics.LENS_INTRINSIC_CALIBRATION":"android.hardware.camera2.cameracharacteristics.lens_intrinsic_calibration\r\n","Set the maximum artwork image dimensions to be received in the metadata.":"设置要在元数据中接收的最大艺术品图像尺寸。\r\n","android.media.ExifInterface.getAttributeInt(java.lang.String, int)":"android.media.exifinterface.getAttributeInt（java.lang.string，int）\r\n","android.media.ExifInterface.TAG_SPATIAL_FREQUENCY_RESPONSE":"android.media.exifinterface.tag_spatial_frequency_response\r\n","Time lapse quality level corresponding to the cif (352 x 288) resolution.":"时间失误质量水平对应于CIF（352 x 288）分辨率。\r\n","List of lens shading modes for ":"镜头阴影模式的列表\r\n","#POSITION_UNKNOWN":"#position_unknown\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_IO_CONNECTION_CLOSED":"android.media.metrics.playbackerrorevent.error_io_connection_closed\r\n","android.hardware.camera2.params.LensShadingMap.getRowCount()":"android.hardware.camera2.params.lensshadingmap.getrowcount（）\r\n","android.media.AudioManager.VIBRATE_SETTING_CHANGED_ACTION":"android.media.audiomanager.vibrate_setting_changed_action\r\n","android.net.Proxy.getPort(android.content.Context)":"android.net.proxy.getport（android.content.context）\r\n","android.hardware.TriggerEvent.sensor":"机器人。硬件。性子。传感器\r\n","This key retrieves the video rotation angle in degrees, if available.\n The video rotation angle may be 0, 90, 180, or 270 degrees.":"该键将以度为单位的视频旋转角度（如果有）。\r\n 视频旋转角可能为0、90、180或270度。\r\n"," if there\n            is no such tag in the image file.":" 如果有\r\n            图像文件中没有这样的标签。\r\n","android.media.metrics.NetworkEvent.NETWORK_TYPE_ETHERNET":"android.media.metrics.networkevent.network_type_ethernet\r\n","android.media.MediaMetadataEditor.BITMAP_KEY_ARTWORK":"android.media.mediametadataeditor.bitmap_key_artwork\r\n","android.media.Rating.RATING_THUMB_UP_DOWN":"android.media.rating.rating_thumb_up_down\r\n","android.hardware.camera2.CaptureRequest.HOT_PIXEL_MODE":"android.hardware.camera2.capturerequest.hot_pixel_mode\r\n","GeofenceHardware#GEOFENCE_EXITED":"geofencehardware＃geofence_exited\r\n","Returns the minimum update interval.":"返回最小更新间隔。\r\n","A constant string describing a linear acceleration sensor type.":"描述线性加速度传感器类型的常数字符串。\r\n","A location object to use when generating image GPS metadata.":"生成图像GPS元数据时要使用的位置对象。\r\n"," object that points at a Direct proxy\n on the specified host and port.":" 指向直接代理的对象\r\n 在指定的主机和端口上。\r\n","android.hardware.lights.Light.LIGHT_TYPE_INPUT":"android.hardware.lights.light.light_type_input\r\n","android.media.MediaRoute2ProviderService.onDeselectRoute(long, java.lang.String, java.lang.String)":"android.media.mediaroute2providerservice.ondeselectroute（long，java.lang.string，java.lang.string）\r\n","Registers a callback to be invoked when an output frame is rendered on the output surface.":"寄存器在输出表面上渲染输出框架时将调用一个回调。\r\n","Retrieves the name that this socket is bound to, if any.":"检索此套接字的名称，如果有的话。\r\n","android.hardware.camera2.CaptureResult.LENS_OPTICAL_STABILIZATION_MODE":"android.hardware.camera2.captureresult.lens_optical_stabilization_mode\r\n","Get the current playback speed as a multiple of normal playback.":"将当前的播放速度作为普通播放的倍数。\r\n","android.media.session.MediaSession.setQueueTitle(java.lang.CharSequence)":"android.media.session.mediasession.setqueuetitle（java.lang.charsequence）\r\n","android.media.ThumbnailUtils.createAudioThumbnail(java.lang.String, int)":"android.media.thumbnailutils.createaudiothumbnail（java.lang.string，int）\r\n","android.media.audiofx.BassBoost.BassBoost(int, int)":"android.media.audiofx.bassboost.bassboost（int，int）\r\n","Content rating systems metadata associated with ":"内容评级系统元数据与\r\n","The Navigation Message was received with words that failed parity check, but the receiver was\n            able to correct those words.":"导航消息收到了均衡检查失败的单词，但接收器是\r\n            能够纠正这些单词。\r\n","Returns the name of the provider that best meets the given criteria.":"返回最符合给定标准的提供商的名称。\r\n","android.location.GnssMeasurement.getReceivedSvTimeNanos()":"android.location.gnssmeasurement.getReceivedSvTimenanos（）\r\n","android.location.GpsSatellite.hasAlmanac()":"android.location.gpssatellite.hasalmanac（）\r\n","android.hardware.camera2.params.Face.getMouthPosition()":"android.hardware.camera2.params.face.getMouthPosition（）\r\n","android.media.MediaDrm.openSession(int)":"android.media.mediadrm.opensession（INT）\r\n","This class represents a transform, which roughly corresponds to an IPsec Security Association.":"该类代表一个转换，该转换大致对应于IPSEC安全关联。\r\n","Obtains transactionID event parameter.":"获得TransActionId事件参数。\r\n","Used to read a NetworkEvent from a Parcel.":"用于从包裹中读取Networkevent。\r\n","Gets the user-visible name of the route.":"获取路线的用户可见名称。\r\n","AudioFormat":"有声型\r\n","This GNSS measurement's tracking state has symbol sync.":"此GNSS测量的跟踪状态具有符号同步。\r\n","Venus' gravity in SI units (m/s^2)":"金星的重力（m/s^2）\r\n","Error code for runtime errors":"运行时错误的错误代码\r\n","android.media.MediaPlayer.setOnBufferingUpdateListener(android.media.OnBufferingUpdateListener)":"android.media.mediaplayer.setonBufferingUpdateListener（android.media.onbufferingupdatelistener）\r\n","android.media.JetPlayer.loadJetFile(android.content.res.AssetFileDescriptor)":"android.media.jetplayer.loadjetfile（android.content.res.res.assetfiledscriptor）\r\n","This is the top part of the UI that is visibly covering the\n application behind it.":"这是明显覆盖的UI的最高部分\r\n 其背后的应用。\r\n","Called to notify the client when the media scanner has finished\n scanning a file.":"媒体扫描仪完成后通知客户的电话\r\n 扫描文件。\r\n"," for all effects currently enabled on\n            the capture stream.":" 对于当前启用的所有效果\r\n            捕获流。\r\n","android.net.VpnService":"android.net.vpnservice\r\n","Sets an ":"设置一个\r\n","Returns true if the Location came from a mock provider.":"如果该位置来自模拟提供商，则返回true。\r\n","AudioFormat#ENCODING_PCM_FLOAT":"AudioFormat＃encoding_pcm_float\r\n","android.mtp.MtpEvent.EVENT_STORAGE_INFO_CHANGED":"android.mtp.mtpevent.event_storage_info_changed\r\n","Called when an aspect of the indicated route has changed.":"当指示路线的一个方面发生变化时，请调用。\r\n","Sets the listener to be called whenever the media current playback position is needed.":"每当需要媒体当前的播放位置时，将侦听器设置为调用。\r\n","Applies posterization effect to image.":"对图像应用后期化效果。\r\n","Checks if this AudioEffect object is controlling the effect engine.":"检查此音频效应对象是否控制着效应引擎。\r\n","destination":"目的地\r\n","Broadcast intent action when the device location enabled state changes.":"当设备位置启用状态更改时，广播意愿动作。\r\n","android.hardware.camera2.CaptureRequest.SENSOR_PIXEL_MODE":"android.hardware.camera2.capturerequest.sensor_pixel_mode\r\n","android.location.GnssStatus.getElevationDegrees(int)":"android.location.gnssstatus.getElevationDegrees（int）\r\n","Returns whether the looping mode was enabled on this player. -or- Sets the player to be looping or non-looping.":"返回该播放器是否启用了循环模式。 - 或 - 设置播放器要循环或不循环。\r\n","#setAudioAttributes(AudioAttributes)":"#SetaudioAttributes（AudioAttributes）\r\n","The mode control selects how the image data is converted from the\n            sensor's native color into linear sRGB color.":"模式控件选择如何从\r\n            传感器的本地颜色为线性SRGB颜色。\r\n","PortInfo":"Portinfo\r\n","android.media.MediaRoute2Info.PLAYBACK_VOLUME_FIXED":"android.media.mediaroute2info.playback_volume_fixed\r\n","AudioTrack":"录音带\r\n","Returns the value of the property with the specified key.":"用指定的密钥返回属性的值。\r\n","InputMethodService provides a standard implementation of an InputMethod,\n            which final implementations can derive from and customize.":"InputMethodService提供了输入method的标准实现，\r\n            哪些最终实现可以衍生和自定义。\r\n","android.media.tv.TvTrackInfo.getId()":"android.media.tv.tvtrackinfo.getID（）\r\n","android.location.Address.getAdminArea()":"android.location.address.getAdminarea（）\r\n","android.media.Image.getCropRect()":"android.media.image.getCrecrect（）\r\n","android.net.IpSecAlgorithm.AUTH_HMAC_SHA1":"android.net.ipsecalgorithm.auth_hmac_sha1\r\n","android.location.Geocoder.getFromLocationName(java.lang.String, int, double, double, double, double)":"android.location.geocoder.getFromlocationname（java.lang.string，int，double，double，double，double，double）\r\n","MIME type for MPEG-H Audio single stream":"MPEG-H音频单流的MIME类型\r\n","android.location.Location.removeSpeed()":"android.location.location.removespeed（）\r\n","android.media.AudioTrack.setPlaybackRate(int)":"android.media.audiotrack.setplaybackrate（int）\r\n","Convenience method to create the upper-left (X,Y) coordinate as a ":"便利方法创建左上（x，y）坐标为一个\r\n","The metadata key to retrieve the year when the data source was created\n            or modified.":"检索创建数据源的年份的元数据密钥\r\n            或修改。\r\n","android.media.MediaRoute2ProviderService":"android.media.mediaroute2providerservice\r\n","The metadata key to retrieve the number of tracks, such as audio, video,\n text, in the data source, such as a mp4 or 3gpp file.":"检索轨道数量的元数据键，例如音频，视频，\r\n 文本，在数据源中，例如MP4或3GPP文件。\r\n","Set active tag to use when accounting ":"设置有效标签以进行计费时使用\r\n","android.media.midi.MidiDeviceInfo.getProperties()":"android.media.midi.midideviceinfo.getProperties（）\r\n","Prepares the player for playback, synchronously.":"同步准备播放器进行播放。\r\n","Return if haptic channels are muted.":"如果触觉通道被静音，返回。\r\n","android.inputmethodservice.InputMethodService.onEvaluateFullscreenMode()":"android.inputmethodservice.inputmethodservice.onevaluatefullscreenmode（）\r\n","android.media.tv.TvInputInfo.getId()":"android.media.tv.tvinputinfo.getID（）\r\n","#ERROR_NO_INIT":"#ERROR_NO_INIT\r\n","android.location.LocationManager.removeNmeaListener(android.location.OnNmeaMessageListener)":"android.location.LocationManager.RemovenMealistener（android.location.onnmeamememessagelistener）\r\n","The OnEnableStatusChangeListener interface defines a method called by the AudioEffect\n when a the enabled state of the effect engine was changed by the controlling application.":"OneNableStatusChangelIstener界面定义了Audioeffect调用的方法\r\n 当启用效应引擎的启用状态通过控制应用程序更改。\r\n","android.hardware.camera2.CaptureRequest.EDGE_MODE":"android.hardware.camera2.capturerequest.edge_mode\r\n","Starts the muxer.":"启动Muxer。\r\n","android.media.MicrophoneInfo.ORIENTATION_UNKNOWN":"android.media.microphoneinfo.orientation_unknown\r\n"," with\n            the same format and different sizes, source camera Id, or camera sensor modes.":" 和\r\n            相同的格式和不同尺寸，源摄像头ID或摄像头传感器模式。\r\n","Indicates this is a network that has the ability to reach a carrier's\n XCAP servers, used for configuration and control.":"表明这是一个能够到达运营商的网络\r\n XCAP服务器，用于配置和控制。\r\n","android.hardware.camera2.CameraCharacteristics.getRecommendedStreamConfigurationMap(int)":"机器人。硬件。相机2。CameraCharacteristics.getRecommendedStreamConfigurationmap（int）\r\n","android.hardware.camera2.params.TonemapCurve.POINT_SIZE":"android.hardware.camera2.params.tonemapcurve.point_size\r\n","android.location.Criteria.setSpeedAccuracy(int)":"Android.Location.Criteria.SetsPeedAccuracy（INT）\r\n"," to stop sending dynamic sensor connection events to that\n            callback.":" 停止向其发送动态传感器连接事件\r\n            回调。\r\n","Returns the volume identifier for the storage unit":"返回存储单元的音量标识符\r\n"," object) to route\n            the output from this AudioTrack.":" 对象）路线\r\n            此Audiotrack的输出。\r\n","Returns a user readable description for the current track.":"返回当前轨道的用户可读描述。\r\n","android.media.MediaCodec.setInputSurface(android.view.Surface)":"android.media.mediacodec.setInputsurface（android.view.surface）\r\n","Get the token for the session this is connected to.":"获取将其连接到的会话的令牌。\r\n","Install a VpnProfile configuration keyed on the calling app's package name.":"在调用应用程序的软件包名称上安装键入的VPNProfile配置。\r\n","Stops playing the audio data.":"停止播放音频数据。\r\n","Playback state of a RemoteControlClient which is stopped.":"停止的RemoteControlclient的播放状态。\r\n","android.media.MediaMetadata.METADATA_KEY_COMPOSER":"android.media.mediametadata.metadata_key_composer\r\n","Returns the association description for the MTP object\n            Will be zero objects that are not of format\n            ":"返回MTP对象的关联描述\r\n            将是非格式的零对象\r\n            \r\n","android.media.midi.MidiDeviceInfo.PROPERTY_PRODUCT":"android.media.midi.midideviceinfo.property_product\r\n","android.mtp.MtpObjectInfo.getImagePixDepth()":"android.mtp.mtpobjectInfo.getImagePixDepth（）\r\n","if the URL protocol is not HTTP or HTTPS.":"如果URL协议不是HTTP或HTTPS。\r\n","android.media.MediaPlayer.getPreferredDevice()":"android.media.mediaplayer.getPreferreddevice（）\r\n","android.hardware.display.DisplayManager.MATCH_CONTENT_FRAMERATE_SEAMLESSS_ONLY":"android.hardware.display.displaymanager.match_content_framerate_seamless_only\r\n","Get estimate of the relative precision of the alignment of the\n            ElapsedRealtimeNanos timestamp, with the reported measurements in\n            nanoseconds (68% confidence). -or- Set estimate of the relative precision of the alignment of the\n            ElapsedRealtimeNanos timestamp, with the reported measurements in\n            nanoseconds (68% confidence).":"估计对齐的相对精度\r\n            Elapsedrealtimenanos时间戳，报告的测量值\r\n            纳秒（68％的置信度）。 - 或设置对对齐的相对精度的估计\r\n            Elapsedrealtimenanos时间戳，报告的测量值\r\n            纳秒（68％的置信度）。\r\n","android.net.TrafficStats.getTxBytes(java.lang.String)":"android.net.trafficstats.gettxbytes（java.lang.string）\r\n","android.hardware.HardwareBuffer.getHeight()":"android.hardware.hardwarebuffer.getheight（）\r\n","Non-standard class for creating an inbound UNIX-domain socket\n            in the Linux abstract namespace.":"非标准类用于创建入站Unix域插座\r\n            在Linux抽象名称空间中。\r\n","android.hardware.camera2.params.SessionConfiguration.setInputConfiguration(android.hardware.camera2.params.InputConfiguration)":"android.hardware.camera2.params.sessionconfiguration.setInputConfiguration（android.hardware.camera2.params.params.params.inputconfiguration）\r\n","This class represents the current state of a GPS satellite.":"该类代表GPS卫星的当前状态。\r\n","android.hardware.camera2.CameraCaptureSession.setRepeatingRequest(android.hardware.camera2.CaptureRequest, android.hardware.camera2.CaptureCallback, android.os.Handler)":"android.hardware.camera2.cameracapturesessionsessession.setRepeatingRequest（android.hardware.camera.camera2.capturerequest，android.hardware.camera.camera2.capturecallback，android.os.handler）\r\n","android.mtp.MtpObjectInfo.getThumbPixWidthLong()":"android.mtp.mtpobjectInfo.getThumbPixwidThlong（）\r\n","The callback called to notify the success or failure of the add call.":"回调通知添加呼叫的成功或失败。\r\n","android.hardware.camera2.CameraDevice.getCameraAudioRestriction()":"android.hardware.camera2.cameradevice.getCameraAudiortriction（）\r\n","android.net.VpnManager.stopProvisionedVpnProfile()":"android.net.vpnmanager.stopprovisionedvpnprofile（）\r\n","MediaRoute2Info routes":"Mediaroute2info路线\r\n","android.net.TrafficStats.getUidRxBytes(int)":"android.net.trafficstats.getuidrxbytes（int）\r\n","Returns the client data for the request. -or- Sets the client data for the request.":"返回请求的客户数据。 - 或 - 设置请求的客户端数据。\r\n","#PROPERTY_OUTPUT_SAMPLE_RATE":"#property_output_sample_rate\r\n","The number of tracks in the media's original source.":"媒体原始来源中的曲目数量。\r\n","Room level.":"房间。\r\n","android.media.effect.EffectFactory.EFFECT_BACKDROPPER":"android.media.effect.effectfactory.effect_backdropper\r\n","LogSessionId":"logsessionId\r\n","#OPTION_CLOSEST_SYNC":"#option_closest_sync\r\n"," when the optional set of fields is unsupported.":" 当不支持可选的字段集时。\r\n","android.net.Ikev2VpnProfile.getPresharedKey()":"android.net.ikev2vpnprofile.getPresharedKey（）\r\n","F:Android.Media.MediaCodec.Configure":"F：android.media.mediacodec.configure\r\n","0 if the altitude is above sea level.":"0如果海拔高于海平面。\r\n","android.hardware.camera2.CaptureResult.CONTROL_AWB_REGIONS":"android.hardware.camera2.captureresult.control_awb_rigions\r\n"," for MediaExtractor. -or- Sets the ":" 用于MediaExtractor。 - 或设置\r\n","android.net.TrafficStats.getUidTcpRxSegments(int)":"android.net.trafficstats.getuidtcprxsegments（int）\r\n","Event code for DEVICE_RESET event":"device_reset事件的事件代码\r\n","android.media.AudioProfile.getChannelIndexMasks()":"android.media.audioprofile.getChannelIndexMasks（）\r\n","An optional key describing whether encoders prepend headers to sync frames (e.":"一个可选的密钥，描述编码器是否同步框架的预端标头（e。\r\n","#createSetupIntent()":"#createsetupintent（）\r\n","android.media.RemoteControlClient.setOnGetPlaybackPositionListener(android.media.OnGetPlaybackPositionListener)":"android.media.remotecontrolclient.setongetplaybackpositionListener（android.media.gongeTplayBackPositionListListener）\r\n","android.location.Address.getLocality()":"android.location.address.getLocality（）\r\n","KeyEvent#KEYCODE_MEDIA_AUDIO_TRACK":"keyevent＃keycode_media_audio_track\r\n","Provides information about an audio device.":"提供有关音频设备的信息。\r\n","android.net.LocalSocket.getOutputStream()":"android.net.localsocket.getOutputstream（）\r\n","Returns the endpoint's type.":"返回端点的类型。\r\n","Route type flag for application-specific usage.":"路由类型标志以特定于应用程序的用法。\r\n","Clockwise angle through which the output image needs to be rotated to be\n            upright on the device screen in its native orientation.":"需要旋转输出图像的顺时针角度\r\n            直立在其本地方向的设备屏幕上。\r\n","android.media.MicrophoneDirection":"android.media.microphondirection\r\n","android.mtp.MtpStorageInfo":"android.mtp.mtpstorageinfo\r\n","Adds numerical information to be displayed.":"添加要显示的数值信息。\r\n","android.media.ExifInterface.hasThumbnail()":"android.media.exifinterface.hasthumbnail（）\r\n","android.media.ExifInterface.TAG_GPS_LONGITUDE_REF":"android.media.exifinterface.tag_gps_longity_ref\r\n","Whether the camera device will trigger autofocus for this request.":"相机设备是否会触发此请求的自动对焦。\r\n","Defines the audio source.":"定义音频源。\r\n","Called to indicate an info or a warning.":"叫表示信息或警告。\r\n","android.media.midi.MidiDeviceInfo.getInputPortCount()":"android.media.midi.midideviceinfo.getInputportcount（）\r\n","android.media.AudioMetadata.createMap()":"android.media.audiometadata.createmap（）\r\n","Type is byte[].":"类型是字节[]。\r\n","Indicates this session supports the skip to queue item command.":"指示此会话支持Skip到队列项目命令。\r\n","android.hardware.lights.Light.writeToParcel(android.os.Parcel, int)":"android.hardware.lights.light.writetoparcel（android.os.os.parcel，int）\r\n","android.view.inputmethod.InputMethod.hideSoftInput(int, android.os.ResultReceiver)":"android.view.inputmethod.inputmethod.hidesoftInput（int，android.os.resultreceiver）\r\n","Close a session on the MediaDrm object that was previously opened\n            with ":"关闭以前打开的MediaDRM对象的会话\r\n            和\r\n","F:Android.Media.ToneGenerator.StartTone":"F：android.media.tonegenerator.starttone\r\n","In call audio mode. ":"在呼叫音频模式下。\r\n","Add a DNS server to the VPN connection.":"将DNS服务器添加到VPN连接中。\r\n","android.media.midi.MidiDeviceInfo.PROPERTY_BLUETOOTH_DEVICE":"android.media.midi.midideviceinfo.property_bluetooth_device\r\n","android.media.Session2CommandGroup.hasCommand(int)":"android.media.session2CommandGroup.Hascommand（int）\r\n","android.media.ExifInterface.TAG_COLOR_SPACE":"android.media.exifinterface.tag_color_space\r\n"," in its current state is suitable to be included\n            in a ":" 目前的状态适合包括在内\r\n            在一个\r\n","A constant string describing a step detector sensor.":"描述步进检测器传感器的常数字符串。\r\n"," for a definition of the coordinate system used).":" 于所使用的坐标系的定义）。\r\n","android.location.Location.removeAccuracy()":"android.location.location.removeaccuracy（）\r\n","A device type describing the Enhanced Audio Return Channel of an HDMI connection.":"描述HDMI连接的增强音频返回通道的设备类型。\r\n","android.view.Surface Surfaces":"android.view.surface表面\r\n","Parcelable Creator":"可穿戴的创造者\r\n","Computes the Altitude in meters from the atmospheric pressure and the\n            pressure at sea level.":"从大气压和\r\n            海平面的压力。\r\n","Vertical gap following this row.":"遵循此行的垂直差距。\r\n","Builds a URI that points to programs on a specific channel whose schedules overlap with the\n            given time frame.":"构建一个URI，该URI指向特定频道上的程序，该频道的时间表与\r\n            给定时间范围。\r\n","if not in the Executing state.":"如果不在执行状态。\r\n","Time lapse quality level corresponding to the VGA (640 x 480) resolution.":"时间失误质量水平对应于VGA（640 x 480）分辨率。\r\n","Indicates if the device implements a fixed volume policy.":"指示该设备是否实现了固定的音量策略。\r\n","Scramble control value indicating that the samples are not scrambled.":"争夺控制值，表明样品未加扰。\r\n","android.media.session.MediaSession.setExtras(android.os.Bundle)":"android.media.session.mediasession.setExtras（android.os.bundle）\r\n",", used for capturing images from the\n            camera or reprocessing images captured from the camera in the same session previously.":"，用于捕获从\r\n            以前在同一会话中从相机捕获的相机或重新处理图像。\r\n","Central system API to the overall TV input framework (TIF) architecture, which arbitrates\n            interaction between applications and the selected TV inputs.":"总体电视输入框架（TIF）体系结构的中央系统API，该体系结构进行仲裁\r\n            应用程序与所选电视输入之间的交互。\r\n","#FLAG_KEY_MEDIA_RATING":"#flag_key_media_rating\r\n","Create a new route category.":"创建一个新的路由类别。\r\n","Free up all audio resources used by this MediaActionSound instance.":"释放此MediaRactionSound实例使用的所有音频资源。\r\n","Set an icon that will be used to represent this group.":"设置将用于表示该组的图标。\r\n","Return text that can be used as a button label for the given\n            ":"可以用作给定的按钮标签的返回文本\r\n            \r\n","android.hardware.camera2.CameraDevice.setCameraAudioRestriction(int)":"android.hardware.camera2.cameradevice.setcamera audiortriction（int）\r\n","android.media.ExifInterface.TAG_FOCAL_PLANE_Y_RESOLUTION":"android.media.exifinterface.tag_focal_plane_y_resolution\r\n","#TONE_CDMA_NETWORK_BUSY":"#tone_cdma_network_busy\r\n","android.location.Address.getPremises()":"android.location.address.getPremises（）\r\n","Called when the user quickly moves the finger from down to up.":"当用户迅速将手指从向上移动时打电话。\r\n","Change stream priority.":"更改流优先级。\r\n","android.media.MediaCrypto":"android.media.mediacrypto\r\n","android.media.AudioManager.PLAYBACK_OFFLOAD_SUPPORTED":"android.media.audiomanager.playback_offload_supported\r\n","android.media.RemoteControlClient.PLAYSTATE_BUFFERING":"android.media.remotecontrolclient.playstate_buffering\r\n","android.media.MediaExtractor.release()":"android.media.mediaextractor.release（）\r\n","Get the frame per second ranges (fpsMin, fpsMax) for input high speed video size.":"获取输入高速视频尺寸的每秒范围（FPSMIN，FPSMAX）。\r\n","android.media.CamcorderProfile.getAll(java.lang.String, int)":"android.media.camcorderprofile.getall（java.lang.string，int）\r\n","android.location.LocationManager.getGnssCapabilities()":"android.location.locationmanager.getgnsscapabilities（）\r\n","MediaMuxer facilitates muxing elementary streams.":"MediaMuxer促进了Muxing基本流。\r\n","GpsStatus.Listener":"gpsstatus.listener\r\n","Create a persistent input surface that can be used with codecs that normally have an input\n            surface, such as video encoders.":"创建一个持续的输入表面，该表面可以与通常具有输入的编解码器一起使用\r\n            表面，例如视频编码器。\r\n","#OPTION_NEXT_SYNC":"#option_next_sync\r\n","This SBAS measurement's tracking state has whole second level sync.":"该SBAS测量的跟踪状态具有整个第二级同步。\r\n","Send a key press to the listener.":"将钥匙按下发送给听众。\r\n","android.media.MediaRecorder.getActiveRecordingConfiguration()":"android.media.mediarecorder.getActiverecordingConfiguration（）\r\n","This key retrieves the color transfer, if available.":"此键可以检索颜色传输（如果有）。\r\n","F:Android.Media.FaceDetector+Face.Pose":"f：android.media.facedetector+face.pose\r\n","F:Android.Media.Audiofx.Visualizer.SetScalingMode":"F：android.media.audiofx.visualizer.setscalingmode\r\n","Crops an upright rectangular area from the image.":"图像从图像中作物直立的矩形区域。\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.isOutputSupportedFor(android.view.Surface)":"android.hardware.camera2.params.RecommendedStreamConfigurationMap.isOutputSupportedFor(android.view.Surface)\r\n","Forces the virtualizer effect to use the given processing mode.":"强迫虚拟器效果使用给定的处理模式。\r\n","android.media.tv.TvInputService.PRIORITY_HINT_USE_CASE_TYPE_PLAYBACK":"android.media.tv.tvinputservice.priority_hint_use_case_type_playback\r\n","android.media.MediaExtractor.getSampleFlags()":"android.media.mediaextractor.getSampleflags（）\r\n","android.media.AudioRecordingConfiguration.getClientAudioSource()":"android.media.audiorecordingConfiguration.getClientAudioSource（）\r\n","Early reflections delay. ":"早期反射延迟。\r\n","CaptureCallback#onCaptureSequenceCompleted":"Capturecallback＃Oncapturesequencected\r\n","android.media.MediaFormat.removeKey(java.lang.String)":"android.media.mediaformat.removekey（java.lang.string）\r\n","android.location.GnssMeasurementsEvent.getClock()":"android.location.gnssmeasurementsevent.getClock（）\r\n","Update ":"更新\r\n","android.media.MediaDrm.setOnEventListener(android.media.OnEventListener)":"android.media.mediadrm.setOneNoneVentListener（android.media.OneventListener）\r\n","Sets the specified left and right output gain values on the AudioTrack.":"设置Adiotrack上指定的左和右输出增益值。\r\n","android.media.MediaRecorder.isPrivacySensitive()":"android.media.mediarecorder.isprivacystive（）\r\n","List of metering areas to use for auto-exposure adjustment.":"用于自动暴露调整的计量区域列表。\r\n","android.media.MediaRecorder#start MediaRecorder.start()":"android.media.mediarecorder＃start Mediarecorder.start（）\r\n","This class provides methods to play DTMF tones (ITU-T Recommendation Q.":"该课程提供了播放DTMF音调的方法（ITU-T推荐Q。\r\n","Get the shift in y direction.":"朝y方向转移。\r\n","android.media.AudioManager.SCO_AUDIO_STATE_DISCONNECTED":"android.media.audiomanager.sco_audio_state_disconnected\r\n","Get the active UID used when accounting ":"会计时使用活动的UID\r\n","Ringing audio mode. ":"铃声音频模式。\r\n","Value used for when the orientation of the microphone is unknown.":"当麦克风的方向未知时使用的值。\r\n","android.media.MediaCodec.VIDEO_SCALING_MODE_SCALE_TO_FIT":"android.media.mediacodec.video_scaling_mode_scale_to_fit\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_DRM_OTHER":"android.media.metrics.playbackerrorevent.error_drm_other\r\n","android.hardware.Sensor.STRING_TYPE_LIGHT":"android.hardware.sensor.string_type_light\r\n","android.media.AudioManager.EXTRA_MAX_CHANNEL_COUNT":"android.media.audiomanager.extra_max_channel_count\r\n","android.media.tv.TvView.getSelectedTrack(int)":"android.media.tv.tview.getSelectedTrack（int）\r\n","Called by the framework to create the layout for showing extacted text.":"由框架调用以创建用于显示扩展文本的布局。\r\n","#requestTriggerSensor(TriggerEventListener, Sensor)":"#requesttriggersensor（triggereventlistener，传感器）\r\n"," class is used to access a number of audio format and\n            channel configuration constants.":" 类用于访问许多音频格式和\r\n            通道配置常数。\r\n","Sets the data source as a content Uri.":"将数据源设置为内容URI。\r\n","android.media.AudioManager.getProperty(java.lang.String)":"android.media.audiomanager.getProperty（java.lang.string）\r\n","android.hardware.SensorManager.remapCoordinateSystem(float[], int, int, float[])":"机器人。硬件。SensorManager。remapCoordinateSystem(float[],int,int,float[])\r\n","Estimate the magnetic field at a given point and time.":"估计给定点和时间的磁场。\r\n","F:Android.Media.MediaRecorder.SetOutputFormat":"F：android.media.mediarecorder.setOutputformat\r\n","Return the global ":"返回全球\r\n","Update the current playback state.":"更新当前的播放状态。\r\n","Gets the environmental reverb properties.":"获取环境混响属性。\r\n","android.media.RingtoneManager.getRingtoneUri(int)":"android.media.ringtonemanager.getringtoneuri（int）\r\n","Get the current playback position in ms.":"在MS中获取当前的播放位置。\r\n","android.net.MailTo.getCc()":"android.net.mailto.getcc（）\r\n","Sets the playback sample rate for this track.":"设置此轨道的播放样品率。\r\n","Returns the audio channel count.":"返回音频频道计数。\r\n","Callback for when JET's currently playing segment's userID is updated.":"何时更新JET的何时播放细分市场的用户ID。\r\n","Called to send MIDI data to the receiver with a specified timestamp.":"使用指定的时间戳将MIDI数据发送给接收器。\r\n","#REQUEST_ID_NONE":"#request_id_none\r\n","if the handler is ":"如果处理程序是\r\n","Load the sound from the specified path.":"从指定路径加载声音。\r\n","android.hardware.Sensor.STRING_TYPE_PRESSURE":"android.hardware.sensor.string_type_pressure\r\n","android.media.AudioTimestamp.framePosition":"android.media.audiotimestamp.FramePosition\r\n","android.hardware.camera2.params.MeteringRectangle.MeteringRectangle(android.graphics.Point, android.util.Size, int)":"android.hardware.camera2.params.meteringRectangle.MeteringRectangle（android.graphics.point，android.util.util.size，int）\r\n","AudioFocusRequest":"AudiofocusRequest\r\n","type from its address field.":"从其地址字段中输入。\r\n","android.location.GnssNavigationMessage.getSubmessageId()":"android.location.gnssnavigationMessage.getSubMessageId（）\r\n","android.hardware.SensorAdditionalInfo.intValues":"android.hardware.sensoradditionalinfo.intvalues\r\n","Called on the implementer of the interface to query the current playback position.":"调用接口的实现者查询当前的播放位置。\r\n","android.hardware.usb.UsbManager.ACTION_USB_ACCESSORY_DETACHED":"android.hardware.usb.usbmanager.action_usb_accessory_detached\r\n","A view that renders a virtual ":"呈现虚拟的视图\r\n","android.inputmethodservice.InputMethodService.onWindowShown()":"android.inputmethodservice.inputmethodservice.onwindowshown（）\r\n","Returns the public URL for the address if known,\n            or null if it is unknown. -or- Sets the public URL associated with this address.":"返回公共URL的地址，如果已知，\r\n            或null如果未知。 - 或设置与此地址关联的公共URL。\r\n","android.media.metrics.NetworkEvent.NETWORK_TYPE_WIFI":"android.media.metrics.networkevent.network_type_wifi\r\n","android.location.GnssClock.getBiasNanos()":"android.location.gnssclock.getBiasnanos（）\r\n","android.media.MediaFormat.KEY_VIDEO_QP_MIN":"android.media.mediaformat.key_video_qp_min\r\n","#TONE_CDMA_CALL_SIGNAL_ISDN_PAT6":"＃tone_cdma_call_signal_isdn_pat6\r\n","Indicates this session supports the prepare from media id command.":"指示此会话支持媒体ID命令的准备。\r\n"," traffic\n            originating from the current thread.":" 交通\r\n            起源于当前线程。\r\n","android.media.MediaFormat.MIMETYPE_AUDIO_MPEGH_MHM1":"android.media.mediaformat.mimetype_audio_mpegh_mhm1\r\n","If specified when configuring a video decoder rendering to a surface,\n            causes the decoder to output \"blank\", i.":"如果在将视频解码器配置为表面时指定，\r\n            使解码器输出“空白”，i。\r\n","android.media.AudioDeviceInfo.getChannelMasks()":"android.media.audiodeviceinfo.getChannelMasks（）\r\n","android.media.tv.TvContract.buildProgramsUriForChannel(android.net.Uri)":"android.media.tv.tvcontract.buildprogramsuriforchannel（android.net.uri）\r\n","Get the immutable list of surfaces associated with this ":"获取与此相关联的无变之处的列表\r\n","android.hardware.camera2.CameraCharacteristics.LENS_INTRINSIC_CALIBRATION_MAXIMUM_RESOLUTION":"android.hardware.camera2.cameracharacteristics.lens_intrinsic_calibration_maximum_resolution\r\n","Value for extra ":"额外的价值\r\n","Determine if biometrics can be used.":"确定是否可以使用生物识别技术。\r\n","android.media.tv.TvInputManager.ACTION_PARENTAL_CONTROLS_ENABLED_CHANGED":"android.media.tv.tvinputmanager.action_parental_controls_enabled_changed\r\n","This class is used for receiving data from a port on a MIDI device":"此类用于从MIDI设备上的端口接收数据\r\n","android.media.MediaFormat.KEY_CHANNEL_COUNT":"android.media.mediaformat.key_channel_count\r\n","android.media.ExifInterface.hasAttribute(java.lang.String)":"android.media.exifinterface.hasattribute（java.lang.string）\r\n","android.hardware.display.DeviceProductInfo.getName()":"android.hardware.display.deviceproductinfo.getName（）\r\n","android.hardware.camera2.CameraExtensionCharacteristics":"android.hardware.camera2.CameraExtensionsensionCharacteristics\r\n","A key describing the raw audio sample encoding/format.":"描述原始音频示例编码/格式的键。\r\n","Returns a frequency capture of currently playing audio content.":"返回当前播放音频内容的频率捕获。\r\n","An array of mandatory stream combinations which are applicable when\n            ":"一系列强制性流组合，适用于\r\n            \r\n","android.media.MediaFormat.KEY_AAC_DRC_OUTPUT_LOUDNESS":"android.media.mediaformat.key_aac_drc_output_loudness\r\n","android.hardware.camera2.CameraCharacteristics.LENS_DISTORTION_MAXIMUM_RESOLUTION":"android.hardware.camera2.cameracharacteristics.lens_distortion_maximum_resolution\r\n","Indicates this network uses a VPN transport.":"指示此网络使用VPN传输。\r\n","F:Android.Media.AudioAttributes+Builder.SetContentType":"F：android.media.audioAttributes+Builder.setContentType\r\n","android.media.midi.MidiDeviceService":"android.media.midi.midideviceservice\r\n","if the application does not have permission to\n access the camera":"如果该申请没有许可\r\n 访问相机\r\n","if any of the parameters are ":"如果有任何参数\r\n","android.media.ExifInterface.TAG_EXPOSURE_PROGRAM":"android.media.exifinterface.tag_expuse_program\r\n","android.media.Image":"android.media.image\r\n","android.media.ToneGenerator.startTone(int)":"android.media.tonegenerator.starttone（int）\r\n","TvTrackInfo#TYPE_SUBTITLE":"TVTRACKINFO＃type_subtitle\r\n","Copies the data for an object from a file descriptor.":"从文件描述符中复制对象的数据。\r\n","Constellation type constant for IRNSS.":"IRNSS的星座类型常数。\r\n","Broadcast Action: sent by the system to tell the target TV input that one of its existing\n            preview programs is added to the watch next programs table by user.":"广播动作：系统发送以告诉目标电视输入其现有的一个\r\n            通过用户将预览程序添加到下一个程序表中。\r\n","Returns the premises of the address, or null if it is unknown. -or- Sets the premises of the address to the given String, which may be null.":"返回地址的场所，如果未知，则返回null。 - 或 - 将地址的内部设置为给定的字符串，这可能为null。\r\n"," if either there is no thumbnail or the thumbnail bytes are stored\n            non-consecutively.":" 如果没有缩略图或存储缩略图字节\r\n            非紧张。\r\n","android.media.AudioManager.ACTION_HDMI_AUDIO_PLUG":"android.media.audiomanager.action_hdmi_audio_plug\r\n","android.media.ExifInterface.TAG_SENSING_METHOD":"android.media.exifinterface.tag_sensing_method\r\n","android.hardware.camera2.params.TonemapCurve.copyColorCurve(int, float[], int)":"android.hardware.camera2.params.tonemapcurve.copycolorcurve（int，float []，int）\r\n","Builds a URI that points to a specific program.":"构建指向特定程序的URI。\r\n","This class represents an MTP or PTP device connected on the USB host bus.":"该类代表连接在USB主机总线上的MTP或PTP设备。\r\n","Register for a single location update using the named provider and a callback.":"使用命名提供商和回调注册单个位置更新。\r\n","A constant string describing a stationary detection sensor.":"描述固定检测传感器的恒定字符串。\r\n","android.media.MediaDrm.SECURITY_LEVEL_SW_SECURE_DECODE":"android.media.mediadrm.security_level_sw_secure_decode\r\n","android.media.session.MediaSessionManager.removeOnActiveSessionsChangedListener(android.media.session.OnActiveSessionsChangedListener)":"android.media.session.MediasessionManager.removeonActiveSessessessessionsChangedListener（android.media.session.onactive.onactiveSessionsChangeDlistener）\r\n","Returns true if proximity correction is enabled. -or- When enabled, calls to ":"如果启用接近性校正，则返回true。 - 或 - 启用时，请致电\r\n","android.hardware.camera2.CaptureRequest.CONTROL_AE_MODE":"android.hardware.camera2.capturerequest.control_ae_mode\r\n","android.media.AudioManager.isSurroundFormatEnabled(int)":"android.media.audiomanager.iserroundformateNabled（int）\r\n","CameraDevice#createCaptureSession":"CameraDevice#createCaptureSession\r\n","android.mtp.MtpObjectInfo.getImagePixDepthLong()":"android.mtp.mtpobjectInfo.getImagePixDepthlong（）\r\n","Weights set to this value will cause the camera device to ignore this rectangle.":"设置为此值的权重将导致相机设备忽略该矩形。\r\n","android.hardware.biometrics.BiometricPrompt.getNegativeButtonText()":"android.hardware.biometrics.biometricprompt.getNegativeButTontext（）\r\n","android.media.session.PlaybackState.ACTION_PLAY_FROM_MEDIA_ID":"android.media.session.playbackstate.action_play_from_media_id\r\n","android.hardware.SensorEventCallback.onAccuracyChanged(android.hardware.Sensor, int)":"android.hardware.sensoreventcallback.onaccuracychanged（android.hardware.sensor，int）\r\n"," when the user authenticated by\n            entering their device PIN, pattern, or password.":" 当用户通过\r\n            输入他们的设备引脚，图案或密码。\r\n","<li>Optionally bypass all SSL certificate checks\n            </ul>\n            \n            The handshake timeout does not apply to actual TCP socket connection.":"<li>可选绕过所有SSL证书检查\r\n            </ul>\r\n            \r\n            握手超时不适用于实际的TCP套接字连接。\r\n",", writable ByteBuffer\n            object for a dequeued input buffer index to contain the input data.":"，可写的字节\r\n            脱水输入缓冲区索引包含输入数据的对象。\r\n","Other playback type.":"其他播放类型。\r\n","Determine if any of the provided authenticators can be used.":"确定是否可以使用任何提供的身份验证者。\r\n","android.hardware.usb.UsbConstants.USB_TYPE_VENDOR":"android.hardware.usb.usbconstants.usb_type_vendor\r\n","EULER_Z":"Euler_z\r\n","#getFrameAtIndex(int, BitmapParams)":"#getFrameAtIndex（int，bitmapparams）\r\n","Determine if the image was captured from the camera.":"确定图像是否是从相机捕获的。\r\n","android.media.MediaRoute2ProviderService.onSetRouteVolume(long, java.lang.String, int)":"android.media.mediaroute2providerservice.onetroutevolume（long，java.lang.string，int）\r\n","android.inputmethodservice.Keyboard.Keyboard(android.content.Context, int, java.lang.CharSequence, int, int)":"android.inputmethodservice.keyboard.keyboard（android.content.context，int，java.lang.charsequence，int，int）\r\n","android.media.RemoteControlClient.PLAYSTATE_SKIPPING_BACKWARDS":"android.media.remotecontrolclient.playstate_skipping_backwards\r\n","The DRM plugin did not report an HDCP level, or an error\n            occurred accessing it":"DRM插件未报告HDCP级别或错误\r\n            发生了访问它\r\n","android.hardware.camera2.CameraDevice.createCaptureRequest(int)":"android.hardware.camera2.cameradevice.createcapturerequest（int）\r\n",") set on this link.":"）设置此链接。\r\n","The y-axis Euler angle of a face.":"面部的Y轴欧拉角。\r\n","Time lapse quality level corresponding to the QVGA (320 x 240) resolution.":"时间失误质量水平对应于QVGA（320 x 240）分辨率。\r\n","android.hardware.usb.UsbRequest.getEndpoint()":"android.hardware.usb.usbrequest.getendpoint（）\r\n","Returns the complete list of TV inputs on the system.":"返回系统上电视输入的完整列表。\r\n","Information about where interesting parts of the input method UI appear.":"有关输入方法的有趣部分UI出现的信息。\r\n","android.media.ApplicationMediaCapabilities.isHdrTypeSupported(java.lang.String)":"android.media.applicationMediacapabilities.ishdrtypesupported（java.lang.string）\r\n","android.media.AudioPlaybackCaptureConfiguration.getMatchingUsages()":"android.media.audioplaybackcaptureconfiguration.getMatchingusages（）\r\n","Is strength parameter supported by virtualizer engine. ":"是虚拟器引擎支持的强度参数。\r\n","android.media.MediaMetadataRetriever.extractMetadata(int)":"android.media.mediametadataretriever.extractmetadata（int）\r\n","#TONE_DTMF_1":"＃tone_dtmf_1\r\n","android.mtp.MtpObjectInfo.getProtectionStatus()":"android.mtp.mtpobjectInfo.getProtectionstatus（）\r\n","Gets the Carrier-to-noise density in dB-Hz.":"获取DB-Hz中的载体之间的密度。\r\n","CaptureRequest#CONTROL_AE_TARGET_FPS_RANGE android.control.aeTargetFpsRange":"capturerequest＃control_ae_target_fps_range android.control.aetargetfpsrange\r\n","M:Android.Media.MediaCodec.Configure(Android.Media.MediaFormat,Android.Views.Surface,Android.Views.Surface,Android.Views.Surface)":"m：android.media.mediacodec.configure（android.media.mediaformat，android.views.surface，android.views.surface，android.views.surface）\r\n","android.media.tv.TvInputInfo.loadCustomLabel(android.content.Context)":"android.media.tv.tvinputinfo.loadcustomlabel（android.content.context）\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_IO_NETWORK_UNAVAILABLE":"android.media.metrics.playbackerrorevent.error_io_network_unavailable\r\n","android.hardware.location.GeofenceHardware.GEOFENCE_ERROR_ID_EXISTS":"android.hardware.location.geofencehardware.geofence_error_id_exists\r\n","Sets the new playback position.":"设置新的播放位置。\r\n","android.media.session.MediaController.getQueueTitle()":"android.media.session.mediacontroller.getqueuetitle（）\r\n","android.hardware.camera2.CaptureFailure.wasImageCaptured()":"android.hardware.camera2.capturefailure.wasimagecaptured（）\r\n","This is called when the user has clicked on the extracted text view,\n            when running in fullscreen mode.":"当用户单击提取的文本视图时，这就是调用\r\n            在全屏模式下运行时。\r\n","android.media.tv.TvContract.isChannelUriForTunerInput(android.net.Uri)":"android.media.tv.tvcontract.ischannelurifortunerinput（android.net.uri）\r\n","android.mtp.MtpObjectInfo.getThumbCompressedSizeLong()":"android.mtp.mtpobjectInfo.getThumbCompressedSizelong（）\r\n","The metadata key to retrieve the information about the composer of\n            the data source.":"检索有关作曲家的信息的元数据键\r\n            数据源。\r\n","Vector calibration parameter.":"矢量校准参数。\r\n","ChaCha20-Poly1305 Authentication/Integrity + Encryption/Ciphering Algorithm.":"CHACHA20-POLY1305身份验证/完整性 +加密/密码算法。\r\n","android.media.MediaCodec.mapHardwareBuffer(android.hardware.HardwareBuffer)":"android.media.mediacodec.maphardwarebuffer（android.hardware.hardwarebuffer）\r\n","android.media.MediaRouter.createRouteCategory(int, boolean)":"android.media.mediarouter.createroutecategory（int，boolean）\r\n","android.media.MediaPlayer.getVideoWidth()":"android.media.mediaplayer.getVideOwidth（）\r\n","Registers an OnDataCaptureListener interface and specifies the rate at which the capture\n            should be updated as well as the type of capture requested.":"注册onDataCaptureListener界面，并指定捕获的速率\r\n            应更新以及请求的捕获类型。\r\n","#WRITE_BLOCKING":"#write_blocking\r\n","android.media.MediaFormat.MIMETYPE_TEXT_SUBRIP":"android.media.mediaformat.mimetype_text_subrip\r\n","Allows clients to query availability and supported resolutions of camera extensions.":"允许客户查询可用性和支持的摄像机扩展的分辨率。\r\n","android.media.audiofx.Visualizer.SCALING_MODE_NORMALIZED":"android.media.audiofx.visualizer.scaling_mode_normalized\r\n","android.hardware.camera2.params.StreamConfigurationMap.getOutputMinFrameDuration(java.lang.Class, android.util.Size)":"android.hardware.camera2.params.streamconfigurationmap.getOutputminframeduration（java.lang.class，android.util.size）\r\n","Shuts down the output side of the socket.":"关闭插座的输出侧。\r\n","A key describing the stride of the video bytebuffer layout.":"描述视频字节布局布局的大步的键。\r\n","Parser for the Matroska container format, as defined in the <a\n            href=\"https://matroska.":"按照<a中定义的Matroska容器格式的解析器\r\n            href =“ https：// matroska。\r\n","android.media.MediaDrm.SECURITY_LEVEL_HW_SECURE_DECODE":"android.media.mediadrm.security_level_hw_secure_decode\r\n","android.media.ExifInterface.TAG_PIXEL_Y_DIMENSION":"android.media.exifinterface.tag_pixel_y_dimension\r\n","Gets the connection state of the route.":"获取路线的连接状态。\r\n","android.hardware.Sensor#TYPE_MAGNETIC_FIELD\n                   TYPE_MAGNETIC_FIELD":"android.hardware.sensor＃type_magnetic_field\r\n                   type_magnetic_field\r\n","android.media.MediaExtractor.setDataSource(android.content.res.AssetFileDescriptor)":"android.media.mediaextractor.setDatasource（android.content.res.res.assetfiledscriptor）\r\n","android.hardware.SensorManager.DynamicSensorCallback\n            DynamicSensorCallback":"android.hardware.sensormanager.dynamicsensorcallback\r\n            DynamicsEnsorCallback\r\n","AudioProfile":"有声属\r\n","Value for extra EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE\n            indicating that the SCO audio channel is being established":"额外的extra_sco_audio_state或extra_sco_audio_previous_state的值\r\n            表示正在建立SCO音频频道\r\n","android.location.GnssStatus.getSvid(int)":"android.location.gnssstatus.getsvid（int）\r\n","Return Metrics data about the current AudioTrack instance.":"返回有关当前Audiotrack实例的指标数据。\r\n","Playback state of a RemoteControlClient which is fast rewinding in the media\n    it is currently playing.":"在媒体中快速倒带的remotecontrolclient的播放状态\r\n    它目前正在播放。\r\n","android.media.audiofx.AudioEffect.EFFECT_PRE_PROCESSING":"android.media.audiofx.audioeffect.effect_pre_processing\r\n","Gets all currently valid logical displays of the specified category.":"获取指定类别的所有当前有效的逻辑显示。\r\n","android.media.MediaCodec.unsubscribeFromVendorParameters(java.util.List)":"android.media.mediacodec.unsubscribe fromvendorParameters（java.util.list）\r\n","An audio virtualizer is a general name for an effect to spatialize audio channels.":"音频虚拟化器是效果的一般名称，可以使音频通道进行空间化。\r\n","android.hardware.camera2.CameraMetadata.LENS_POSE_REFERENCE_PRIMARY_CAMERA":"android.hardware.camera2.camerametadata.lens_pose_reference_primary_camera\r\n","Queues the request to send or receive data on its endpoint.":"排队在其端点上发送或接收数据的请求。\r\n","android.media.tv.TvContract.requestChannelBrowsable(android.content.Context, long)":"android.media.tv.tvcontract.requestchannelbrowsable（android.content.context，long）\r\n","Returns the current audio routing bit vector for a specified mode.":"返回指定模式的当前音频路由位向量。\r\n","android.hardware.display.DeviceProductInfo.getManufactureWeek()":"android.hardware.display.deviceproductinfo.getManufactureWeek（）\r\n","GpsSatellite":"gpssatellite\r\n","android.media.AudioAttributes.getUsage()":"android.media.audioattributes.getusage（）\r\n","android.media.tv.TvView.sendAppPrivateCommand(java.lang.String, android.os.Bundle)":"android.media.tv.tview.sendappprivatecommand（java.lang.string，android.os.bundle）\r\n","Subscribe to vendor parameters, so that these parameters will be present in\n            ":"订阅供应商参数，以便将这些参数存在于\r\n            \r\n","Audio data format: MPEG-H baseline profile, level 4":"音频数据格式：MPEG-H基线概况，级别4\r\n","android.hardware.SensorManager.getRotationMatrix(float[], float[], float[], float[])":"android.hardware.sensormanager.getRotationMatrix（float []，float []，float []，float []），[]）\r\n","android.media.metrics.NetworkEvent.CREATOR":"android.media.metrics.networkevent.creator\r\n","Gets any extras for the media service.":"获取媒体服务的任何其他功能。\r\n","if it is called after prepare() or before\n setAudioSource()/setVideoSource().":"如果在准备后或之前称呼它\r\n setAudioSource（）/setVideOsource（）。\r\n","Releases exclusive access to a ":"发布独家访问\r\n","Get a list of Light as ids.":"获取灯光列表作为ID。\r\n","Intent#EXTRA_KEY_EVENT":"意图＃extra_key_event\r\n","Sets and persists a certain surround format as enabled or not.":"设置并持续一定的环绕格式，以启用或不启用。\r\n","android.mtp.MtpObjectInfo.getAssociationDesc()":"android.mtp.mtpobjectInfo.getAssociationdesc（）\r\n","android.media.MediaDrm.PROPERTY_VENDOR":"android.media.mediadrm.property_vendor\r\n","android.media.AudioManager.AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK":"android.media.audiomanager.audiofocus_loss_transient_can_duck\r\n","Sets the current ":"设置电流\r\n","Effects are high-performance transformations that can be applied to image frames.":"效果是可以应用于图像框架的高性能转换。\r\n","android.media.MediaParser.PARAMETER_FLAC_DISABLE_ID3":"android.media.mediaparser.parameter_flac_disable_id3\r\n"," specifies any mutable\n         ":" 指定任何可变的\r\n         \r\n","Defined in the OpenMAX IL specs, color format values are drawn from\n OMX_COLOR_FORMATTYPE.":"在OpenMax IL规格中定义，颜色格式值是从\r\n OMX_COLOR_FORMATTYPE。\r\n","android.media.MediaParser.createByName(java.lang.String, android.media.OutputConsumer)":"android.media.mediaparser.createbyname（java.lang.string，android.media.outputconsumer）\r\n","android.media.ExifInterface.getAttribute(java.lang.String)":"android.media.exifinterface.getAttribute（java.lang.string）\r\n","android.media.tv.TvInputManager.getTvInputInfo(java.lang.String)":"android.media.tv.tvinputmanager.gettvinputinfo（java.lang.string）\r\n","Connects to the media browser service.":"连接到媒体浏览器服务。\r\n","android.location.GnssClock.getDriftUncertaintyNanosPerSecond()":"android.location.gnssclock.getDriftUncuncterntyNanosperSecond（）\r\n","Remove the specified callback.":"删除指定的回调。\r\n","Whether auto-exposure (AE) is currently locked to its latest\n            calculated values.":"当前是否将自动暴露（AE）锁定为最新\r\n            计算值。\r\n","android.media.MediaCas.SCRAMBLING_MODE_DVB_CSA3_ENHANCE":"android.media.mediacas.scrambling_mode_dvb_csa3_enhance\r\n","android.location.OnNmeaMessageListener.onNmeaMessage(java.lang.String, long)":"android.location.onnmeamessagelistener.onnmeamessage（java.lang.string，long）\r\n","android.location.provider.ProviderProperties.ACCURACY_COARSE":"android.location.provider.providerproperties.accuracy_coarse\r\n","Remove an IPsec transform from a stream socket.":"从流插座上删除IPSEC变换。\r\n","Returns the localized country name of the address, for example \"Iceland\",\n            or null if it is unknown. -or- Sets the country name of the address to the given String, which may\n            be null.":"返回地址的本地国家名称，例如“冰岛”，\r\n            或null如果未知。 - 或 - 将地址的国家名称设置为给定的字符串，可能\r\n            为null。\r\n","Get the queue title for this session.":"获取此会议的队列标题。\r\n","Sets whether the ID3 track should be disabled for FLAC.":"设置是否应禁用FLAC的ID3轨道。\r\n","android.media.audiofx.Equalizer.PARAM_CURRENT_PRESET":"android.media.audiofx.equalizer.param_current_preset\r\n","This class is used to store playback data.":"此类用于存储播放数据。\r\n","Increment count of network operations performed under the given\n            accounting tag.":"根据给定执行的网络操作的增量计数\r\n            会计标签。\r\n"," on an external display when this route is selected.":" 选择此路线时，在外部显示器上。\r\n"," when the type of content played is video or movie":" 当播放的内容类型是视频或电影时\r\n","android.media.MediaRecorder.removeOnRoutingChangedListener(android.media.OnRoutingChangedListener)":"android.media.mediarecorder.removeonRoutingChangedListener（android.media.onroutingchangedlistener）\r\n","MidiReceiver constructor.":"Midreceiver构造函数。\r\n","android.media.metrics.NetworkEvent.NETWORK_TYPE_OTHER":"android.media.metrics.networkevent.network_type_other\r\n","android.media.session.MediaController.getSessionToken()":"android.media.session.mediacontroller.getSessionToken（）\r\n","android.media.MediaSession2.getConnectedControllers()":"android.media.mediasession2.getConnectedControllers（）\r\n","android.media.MediaDrm.EVENT_SESSION_RECLAIMED":"android.media.mediadrm.event_session_remaimed\r\n","android.hardware.HardwareBuffer.USAGE_CPU_WRITE_RARELY":"android.hardware.hardwarebuffer.usage_cpu_write_rarely\r\n","s this configuration contains.":"S此配置包含。\r\n","GPS CNAV-2 message contained in the structure.":"结构中包含的GPS CNAV-2消息。\r\n","#getReferenceCodeTypeForIsb()":"#getReferenceCodeTypeForisb（）\r\n","USB class for video devices.":"视频设备的USB类。\r\n","AudioFormat#SAMPLE_RATE_UNSPECIFIED":"AudioFormat＃sample_rate_unspecified\r\n","Return the current volume for this route.":"返回此路线的当前音量。\r\n","Retrieves a specific ":"检索特定的\r\n","Returns the device's protocol field.":"返回设备的协议字段。\r\n","MediaDrm#PROPERTY_ALGORITHMS":"MediaDRM＃property_algorithms\r\n","android.media.tv.TvView.tune(java.lang.String, android.net.Uri)":"android.media.tv.tview.tune（java.lang.string，android.net.uri）\r\n","android.media.AudioTrack.AudioTrack(int, int, int, int, int, int, int)":"android.media.audiotrack.audiotrack（int，int，int，int，int，int，int，int）\r\n","android.location.Location.convert(java.lang.String)":"android.location.location.convert（java.lang.string）\r\n","android.media.midi.MidiDevice":"android.media.midi.mididevice\r\n","android.location.GnssClock.getDriftNanosPerSecond()":"android.location.gnssclock.getdriftnanospersecond（）\r\n",", and the accuracy of\n            ":"，和准确性\r\n            \r\n","android.net.VpnService.prepare(android.content.Context)":"android.net.vpnservice.prepare（android.content.context）\r\n","android.mtp.MtpEvent.getEventCode()":"android.mtp.mtpevent.getEventCode（）\r\n","Returns additional provider-specific information about the\n            address as a Bundle. -or- Sets the extra information associated with this fix to the\n            given Bundle.":"返回有关提供商的其他针对特定信息的信息\r\n            地址为捆绑。 - 或 - 将与此修复程序关联的额外信息设置为\r\n            给定捆绑包。\r\n","Upper bound tonemap value corresponding to a pure white for a single color channel.":"上界的ToneMap值对应于单个颜色通道的纯白色。\r\n","Called when the candidates view is being hidden from the user.":"当候选人视图被用户隐藏时，请致电。\r\n","android.net.IpSecManager.openUdpEncapsulationSocket()":"android.net.ipsecmanager.openudpencapsastersocket（）\r\n"," that should be used by the application to show\n a ":" 该应用程序应该显示\r\n 一个\r\n","Route feature: Remote video playback.":"路线功能：远程视频播放。\r\n","A constant string describing a pressure sensor type.":"描述压力传感器类型的常数字符串。\r\n","#getMaxSecurityLevel()":"#getMaxSecurityLevel（）\r\n","Exception thrown if MediaCrypto object could not be instantiated or\n            if unable to perform an operation on the MediaCrypto object.":"如果无法实例化或\r\n            如果无法在MediaCrypto对象上执行操作。\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_MAX_ANALOG_SENSITIVITY":"android.hardware.camera2.cameracharacteristics.sensor_max_analog_sensitivity\r\n","Gets the surface to record from when using SURFACE video source.":"从使用表面视频源时获取表面记录。\r\n","#TONE_CDMA_LOW_L":"#TONE_CDMA_LOW_L\r\n","#getFrameAtTime(long, int, BitmapParams)":"#getFrameattime（长，int，bitmapparams）\r\n","android.hardware.display.DisplayManager.VIRTUAL_DISPLAY_FLAG_OWN_CONTENT_ONLY":"android.hardware.display.displaymanager.virtual_display_flag_own_own_content_only\r\n","F:Android.Net.UrlQuerySanitizer+IllegalCharacterValueSanitizer..ctor":"f：android.net.urlquerysanitizer+illegalcharactervaluesanitizer..ctor\r\n","Restore persisted offline keys into a new session.":"将恢复的脱机密钥持续到新的会话中。\r\n","android.net.LocalSocket.getFileDescriptor()":"android.net.localsocket.getFiledScriptor（）\r\n","The MediaSyncEvent class defines events that can be used to synchronize playback or capture\n            actions between different players and recorders.":"MediaSyncevent类定义可用于同步播放或捕获的事件\r\n            不同玩家和录音机之间的动作。\r\n","Adjustment to auto-exposure (AE) target image\n            brightness.":"调整自动暴露（AE）目标图像\r\n            亮度。\r\n","Gets the service component that the media browser is connected to.":"获取媒体浏览器已连接到的服务组件。\r\n","android.media.metrics.PlaybackMetrics.getStreamSource()":"android.media.metrics.playbackmetrics.getstreamsource（）\r\n","android.inputmethodservice.InputMethodService.onCreateExtractTextView()":"android.inputmethodservice.inputmethodservice.oncreateextracttextview（）\r\n","Used for receiving sensor additional information frames.":"用于接收传感器其他信息框架。\r\n","if name is not valid.":"如果名称无效。\r\n","android.location.GnssClock.hasElapsedRealtimeUncertaintyNanos()":"android.location.gnssclock.haselapsedRealTimeNuncterntynanos（）\r\n","#openSession(int)":"#opensession（int）\r\n","Returns operation code supported by the device.":"返回设备支持的操作代码。\r\n","Bitmap#getConfig()":"位图＃getConfig（）\r\n","android.media.metrics.NetworkEvent.getNetworkType()":"android.media.metrics.networkevent.getnetworktype（）\r\n","android.media.AudioManager.EXTRA_SCO_AUDIO_STATE":"android.media.audiomanager.extra_sco_audio_state\r\n","if the feature was neither set to be enabled\n        nor to be disabled.\n":"如果不设置该功能\r\n        也不是被禁用。\r\n\r\n","android.media.MediaSync":"android.media.mediasync\r\n","android.media.metrics.PlaybackMetrics.STREAM_SOURCE_MIXED":"android.media.metrics.playbackmetrics.stream_source_mixed\r\n","Poll for a timestamp on demand.":"对时间戳进行调查。\r\n","Returns whether the browser is connected to the service.":"返回浏览器是否连接到服务。\r\n","android.location.SettingInjectorService.refreshSettings(android.content.Context)":"android.location.setTingInjectorService.RefreshSettings（android.content.context）\r\n","Retrieves the upstream bandwidth for this network in Kbps.":"在KBPS中检索该网络的上游带宽。\r\n","Returns the unique serial number for the accessory.":"返回附件的唯一序列号。\r\n"," changes state.":" 改变状态。\r\n","android.location.Location.reset()":"android.location.location.reset（）\r\n","android.inputmethodservice.InputMethodService.requestShowSelf(int)":"android.inputmethodservice.inputmethodservice.requestshowself（int）\r\n","Type for ":"输入\r\n","A constant indicating low power usage.":"恒定表示低功率使用情况。\r\n","MediaPlayer#getTrackInfo()":"MediaPlayer＃getTrackinfo（）\r\n","android.location.Location.setMock(boolean)":"android.location.location.setMock（布尔值）\r\n","android.media.AudioRecordingMonitor":"android.media.audiorecordingmonitor\r\n","The callback called to notify the success or failure of the pause call.":"回调通知暂停电话的成功或失败。\r\n","android.media.MediaMetadataEditor.clear()":"android.media.mediametadataeditor.clear（）\r\n","5G SA network":"5G SA网络\r\n","A key describing the number of grid columns in the content in a\n            ":"一个键描述内容中内容中的网格列数\r\n            \r\n","Gets the current volume of the route.":"获取路线的当前体积。\r\n","android.inputmethodservice.InputMethodService.onUpdateExtractingViews(android.view.inputmethod.EditorInfo)":"android.inputmethodservice.inputmethodservice.onupdateextractingviews（android.view.inputmethod.editorinfo）\r\n","\n            that applications have published to express their ongoing media playback\n            state.":"\r\n            该应用程序已发布以表达其正在进行的媒体播放\r\n            状态。\r\n","SHA1 HMAC Authentication/Integrity Algorithm.":"SHA1 HMAC身份验证/完整性算法。\r\n","android.hardware.SensorManager.isDynamicSensorDiscoverySupported()":"android.hardware.sensormanager.isdynamicsensordiscoverysupported（）\r\n","Reads Exif tags from the specified image file.":"从指定的图像文件中读取EXIF标签。\r\n"," on it, and calling ":" 在上面打电话\r\n","Returns the association type for the MTP object\n            Will be zero objects that are not of format\n            ":"返回MTP对象的关联类型\r\n            将是非格式的零对象\r\n            \r\n","The metadata key to retrieve the mime type of the data source. ":"检索数据源的MIME类型的元数据键。\r\n","Type for lights that indicate a group of LED lights representing player id.":"输入指示一组代表玩家ID的LED灯的灯。\r\n","The public interface object used to interact with a specific TV input service for TV program\n            recording.":"用于与特定电视输入服务进行电视程序交互的公共接口对象\r\n            记录。\r\n","android.media.Rating.newStarRating(int, float)":"android.media.rating.newstarrating（int，float）\r\n","android.media.Session2Command.COMMAND_CODE_CUSTOM":"android.media.session2command.command_code_custom\r\n","Get the current playback info for this session.":"获取本届会议的当前播放信息。\r\n","android.media.metrics.TrackChangeEvent.getTrackChangeReason()":"android.media.metrics.trackchangeevent.getTrackchangereason（）\r\n","Object is not protected. ":"对象不受保护。\r\n","android.media.tv.TvView.timeShiftSeekTo(long)":"android.media.tv.tvview.timeshiftseekto（long）\r\n","A class representing a USB accessory, which is an external hardware component\n            that communicates with an android application over USB.":"代表USB附件的类，这是外部硬件组件\r\n            这与USB上的Android应用程序通信。\r\n","android.media.audiofx.AudioEffect.ERROR_NO_MEMORY":"android.media.audiofx.audioeffect.error_no_memory\r\n","This indicated that the buffer marked as such contains codec\n initialization / codec specific data instead of media data.":"这表明标记为此类的缓冲区包含编解码器\r\n 初始化 /编解码器特定数据而不是媒体数据。\r\n","This class provides access to the system location services.":"此类提供对系统位置服务的访问。\r\n","Get the session owner's package name.":"获取会话所有者的软件包名称。\r\n","android.media.tv.TvView.setStreamVolume(float)":"android.media.tv.tview.setstreamvolume（float）\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_BITRATE":"android.media.mediametadataretriever.metadata_key_bitrate\r\n","A class that manages a system-provided biometric dialog.":"管理系统提供的生物识别对话框的类。\r\n","Returns whehther the playback is active (i. -or- Sets whether the playback is active (i.":"返回播放活跃的播放（i。或设置播放是否处于活动状态）（i。\r\n","Virtualizer effect strength. ":"虚拟器效应强度。\r\n","android.hardware.ConsumerIrManager.getCarrierFrequencies()":"android.hardware.consumerirmanager.getCarrierFrequencies（）\r\n"," from a given sound URI contains\n            haptic channels or not.":" 从给定的声音uri包含\r\n            是否触觉通道。\r\n","android.location.Criteria":"Android.Location.Criteria\r\n","Set this flag on the session to indicate that it can handle media button\n            events.":"在会话上设置此标志以指示它可以处理媒体按钮\r\n            事件。\r\n","Add a listener to be notified when the list of active sessions\n changes.":"添加一个侦听器，以通知活动会话列表\r\n 变化。\r\n","Builds a URI that points to a specific channel.":"构建指向特定频道的URI。\r\n",">=":"> =\r\n","Returns whether the provider must provide bearing information. -or- Indicates whether the provider must provide bearing information.":"返回提供商是否必须提供轴承信息。 - 或指示提供商是否必须提供轴承信息。\r\n","android.media.MediaCodec.getOutputBuffers()":"android.media.mediacodec.getOutputbuffers（）\r\n","android.media.MediaPlayer.setDisplay(android.view.SurfaceHolder)":"android.media.mediaplayer.setDisplay（android.view.surfaceholder）\r\n","android.media.audiofx.AudioEffect.EXTRA_PACKAGE_NAME":"android.media.audiofx.audioeffect.extra_package_name\r\n","android.media.audiofx.EnvironmentalReverb.PARAM_ROOM_HF_LEVEL":"android.media.audiofx.environmentalreverb.param_room_hf_level\r\n","Playback state of a RemoteControlClient which is playing media.":"播放媒体的RemoteControlclient的播放状态。\r\n","CameraMetadata#CONTROL_EXTENDED_SCENE_MODE_DISABLED":"camerametadata＃control_extended_scene_mode_disabled\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_ALBUM":"android.media.mediametadataretriever.metadata_key_album\r\n","This class is used for sending data to a port on a MIDI device":"此类用于将数据发送到MIDI设备上的端口\r\n","android.mtp.MtpDevice.getDeviceInfo()":"android.mtp.mtpdevice.getDeviceInfo（）\r\n","#TONE_SUP_RADIO_NOTAVAIL":"#TONE_SUP_RADIO_NOTAVAIL\r\n","android.media.midi.MidiSender.connect(android.media.midi.MidiReceiver)":"android.media.midi.midisender.connect（android.media.midi.midireceiver）\r\n"," to determine if the unprocessed audio source is\n            available and supported with the expected frequency range and level response.":" 确定未经处理的音频源是\r\n            可用并支持预期频率范围和级别响应。\r\n","Gets the ids of all input devices in the system.":"获取系统中所有输入设备的ID。\r\n","Obtains devicePropCode event parameter.":"获取设备Propcode事件参数。\r\n","Interface definition for a callback to be invoked when the playback head position of\n an AudioTrack has reached a notification marker or has increased by a certain period.":"接口定义用于回调时要调用的播放头位置\r\n 录音带已达到通知标记或在一定时期内增加。\r\n","Returns the information of the service that implements this TV input.":"返回实现此电视输入的服务信息。\r\n","Gets container MIME type.":"获取容器MIME类型。\r\n","Send a proprietary event to all MediaControllers listening to this\n            Session.":"向所有听取此消息的媒体控制者发送专有活动\r\n            会议。\r\n","A constant indicating that the application does not choose to\n            place requirement on a particular feature.":"一个常数，表明该应用程序不选择\r\n            将要求放在特定功能上。\r\n","Audio data format: MPEG-H low complexity profile, level 3":"音频数据格式：MPEG-H低复杂度概况，级别3\r\n","android.media.ExifInterface.TAG_THUMBNAIL_IMAGE_WIDTH":"android.media.exifinterface.tag_thumbnail_image_width\r\n","Notifies to the client that the request has failed.":"通知客户请求失败。\r\n"," object into ":" 对象进入\r\n","android.media.MediaDrm.provideProvisionResponse(byte[])":"android.media.mediadrm.provideprovisionResponse（byte []）\r\n","Builds a GpsStatus from the given GnssStatus.":"从给定的GNSSTATUS构建GPSSTATUS。\r\n","Reports the current fine-grained state of the network.":"报告当前网络的细粒度状态。\r\n","android.hardware.SensorManager.LIGHT_FULLMOON":"android.hardware.sensormanager.light_fullmoon\r\n","#USE_DEFAULT_STREAM_TYPE":"#use_default_stream_type\r\n","Audio data format: PCM 32 bit per sample.":"音频数据格式：PCM 32位。\r\n","android.media.metrics.PlaybackMetrics.DRM_TYPE_WIDEVINE_L3":"android.media.metrics.playbackmetrics.drm_type_widevine_l3\r\n","Get the active tag used when accounting ":"会计时使用主动标签\r\n","AudioManager#registerMediaButtonEventReceiver(ComponentName)":"听众＃registermediabuttoneventreceiver（componentName）\r\n","android.location.LocationManager.addTestProvider(java.lang.String, boolean, boolean, boolean, boolean, boolean, boolean, boolean, int, int)":"android.location.LocationManager.AddtestProvider（java.lang.string，boolean，boolean，boolean，boolean，boolean，boolean，boolean，boolean，boolean，boolean，boolean，int，int）\r\n","android.hardware.camera2.CameraExtensionSession.getDevice()":"android.hardware.camera2.cameraextensionsessessessesseess.getDevice（）\r\n","android.media.Session2Token.getType()":"android.media.session2token.getType（）\r\n","Dimensions of the full pixel array, possibly\n            including black calibration pixels.":"完整像素阵列的尺寸，可能\r\n            包括黑色校准像素。\r\n","android.net.TrafficStats.getTotalRxPackets()":"android.net.trafficstats.getTotalrxpackets（）\r\n","A helper class that aggregates all supported arguments for capture session initialization.":"一个为捕获会话初始化的所有支持参数的助手类。\r\n","android.net.IpSecTransform.close()":"android.net.ipsectransform.close（）\r\n","The origin for ":"起源\r\n","android.media.MediaRecorder.getLogSessionId()":"android.media.mediarecorder.getlogsessionid（）\r\n","Builds a URI that points to a channel logo.":"构建指向通道徽标的URI。\r\n","android.net.UrlQuerySanitizer.UrlQuerySanitizer(java.lang.String)":"android.net.urlquerysanitizer.urlquerysanitizer（java.lang.string）\r\n","android.hardware.camera2.CaptureRequest.STATISTICS_OIS_DATA_MODE":"android.hardware.camera2.capturerequest.statistics_ois_data_mode\r\n","android.hardware.camera2.CaptureRequest":"android.hardware.camera2.capturreequest\r\n","Returns the USB ID of the USB device.":"返回USB设备的USB ID。\r\n","Returns the state of the shift key of the keyboard, if any.":"返回键盘的移位键状态（如果有）。\r\n"," is present, the client can also\n            optionally use this key to specify the timestamp (in micro-second)\n            at which the suspend/resume operation takes effect.":" 在场，客户也可以\r\n            可选使用此键来指定时间戳（在微型秒中）\r\n            悬浮/简历操作生效的情况。\r\n","Suggests using the default stream type.":"建议使用默认流类型。\r\n","android.media.ExifInterface.TAG_GPS_DEST_LONGITUDE_REF":"android.media.exifinterface.tag_gps_dest_longitive_ref\r\n","This mode indicates metadata encapsulation with an elementary stream payload.":"此模式表示具有基本流有效负载的元数据封装。\r\n","android.net.TrafficStats.clearThreadStatsTag()":"android.net.trafficstats.clearthreadstatstag（）\r\n","android.hardware.usb.UsbConfiguration.getName()":"android.hardware.usb.usbconfiguration.getName（）\r\n","F:Android.Media.MediaRouter.AddCallback":"F：android.media.mediarouter.addcallback\r\n","Android.App.Service.START_FLAG_RETRY":"android.app.service.start_flag_retry\r\n","#selectTrack(int)":"#SelectTrack（int）\r\n","if an unrecoverable error has occured and the codec\n could not be reset.":"如果发生了不可恢复的错误，并且编解码器\r\n 无法重置。\r\n","android.media.MediaMetadata.METADATA_KEY_DATE":"android.media.mediametadata.metadata_key_date\r\n","android.media.tv.TvContract.buildPreviewProgramsUriForChannel(long)":"android.media.tv.tvcontract.buildpreviewprogramsuriforchannel（长）\r\n","Sets the value of a long key.":"设置长键的值。\r\n","android.hardware.camera2.CameraManager.registerTorchCallback(android.hardware.camera2.TorchCallback, android.os.Handler)":"android.hardware.camera2.cameramanager.registertorchcallback（android.hardware.camera2.torchcallback，android.os.handler）\r\n","android.hardware.camera2.CameraManager.getCameraCharacteristics(java.lang.String)":"android.hardware.camera2.cameramanager.getCameracharacteristics（java.lang.string）\r\n","Obtains the second event parameter.":"获得第二个事件参数。\r\n","Use case of priority hint for ":"优先提示的用例\r\n","android.location.LocationProvider.getAccuracy()":"android.location.locationprovider.getAccuracy（）\r\n","android.media.SoundPool.load(java.lang.String, int)":"android.media.soundpool.load（java.lang.string，int）\r\n","android.mtp.MtpDeviceInfo.getSerialNumber()":"android.mtp.mtpdeviceinfo.getSerialNumber（）\r\n","android.media.MediaPlayer.setLooping(boolean)":"android.media.mediaplayer.setlooping（boolean）\r\n","Gets the gain set for the given equalizer band.":"获取给定均衡器带的增益集。\r\n","Obtains objectFormatCode event parameter.":"获取ObjectFormatCode事件参数。\r\n","Returns whether a feature is to be enabled (":"返回是否要启用功能（\r\n","A constant string describing a temperature sensor type":"描述温度传感器类型的常数字符串\r\n","Track change reason for adaptive changes.":"自适应变化的跟踪变化原因。\r\n","android.media.CameraProfile.getJpegEncodingQualityParameter(int, int)":"android.media.cameraprofile.getjpegencodingqualityparameter（int，int）\r\n","android.media.MediaScannerConnection.disconnect()":"android.media.mediascannerconnection.disconnect（）\r\n","Register a callback to be invoked when an informational event occurs while\n            recording.":"在信息事件发生时注册一个要调用的回调\r\n            记录。\r\n","android.media.Rating.RATING_PERCENTAGE":"android.media.rating.rating_percentage\r\n","android.os.Looper looper":"android.os.looper looper\r\n","Returns the storage ID for the storage unit.":"返回存储单元的存储ID。\r\n","android.media.effect.EffectFactory.EFFECT_BITMAPOVERLAY":"android.media.effect.effectfactory.effect_bitmapoverlay\r\n","android.media.ExifInterface.TAG_REFERENCE_BLACK_WHITE":"android.media.exifinterface.tag_reference_black_white\r\n","endTime":"时间结束\r\n","android.media.session.MediaSessionManager.removeOnSession2TokensChangedListener(android.media.session.OnSession2TokensChangedListener)":"android.media.session.mediasessionmanager.removeensessession2tokenschangedlistener（android.media.session.onsession.onsession.session2tokenschangedlistener）\r\n","Create a unmodifiable list of requests that is suitable for constrained high speed capture\n            session streaming.":"创建适用于约束高速捕获的请求列表\r\n            会话流。\r\n","Band frequency range. ":"带频率范围。\r\n","A rating style with 0 to 5 stars.":"具有0到5星的评分样式。\r\n","Returns the device type identifier of the microphone (e.":"返回麦克风的设备类型标识符（e。\r\n","Applies only when configuring a video encoder in \"surface-input\" mode.":"仅在以“表面输入”模式配置视频编码器时适用。\r\n","The time base source for sensor capture start timestamps.":"传感器捕获的时间基源启动时间戳。\r\n","android.hardware.SensorAdditionalInfo.TYPE_UNTRACKED_DELAY":"android.hardware.sensoradditionalinfo.type_untracked_delay\r\n","Time lapse quality level corresponding to the qcif (176 x 144) resolution.":"时间失误质量水平对应于QCIF（176 x 144）分辨率。\r\n","Creates a (non-server) socket in the UNIX-domain namespace.":"在Unix-domain名称空间中创建一个（非服务器）套接字。\r\n","android.hardware.camera2.CameraCharacteristics.STATISTICS_INFO_AVAILABLE_FACE_DETECT_MODES":"android.hardware.camera2.cameracharacteristics.statistics_info_available_face_face_detect_modes\r\n","NetworkCapabilities.NET_CAPABILITY_*":"NetworkCapabilities.NET_CAPIABIES_*\r\n","Operation code for SendObjectInfo":"SendObjectInfo的操作代码\r\n","android.media.AudioTrack.setBufferSizeInFrames(int)":"android.media.audiotrack.setbuffersizeinframes（int）\r\n","android.media.MediaRouter.getCategoryAt(int)":"android.media.mediarouter.getCategoryat（int）\r\n","android.hardware.camera2.params.OutputConfiguration.addSensorPixelModeUsed(int)":"android.hardware.camera2.params.outputconfiguration.addsensorpixelmodeused（int）\r\n","Returns a vendor ID for the device.":"返回设备的供应商ID。\r\n","The camera device is only accessible by Android's system components and privileged\n            applications.":"仅通过Android的系统组件和特权才能访问相机设备\r\n            申请。\r\n","android.media.audiofx.DynamicsProcessing.VARIANT_FAVOR_TIME_RESOLUTION":"android.media.audiofx.dynamicsprocessing.variant_favor_time_resolution\r\n","Register for a single location update using a Criteria and pending intent.":"使用条件和待处理意图注册单个位置更新。\r\n","A constant indicating a medium accuracy requirement\n - currently used only for horizontal accuracy.\n For horizontal position this corresponds roughly to to an accuracy\n of between 100 and 500 meters.":"恒定表明中等精度要求\r\n  - 目前仅用于水平准确性。\r\n 对于水平位置，这大致对应于准确性\r\n 在100至500米之间。\r\n"," currently\n            represented by routes known to this MediaRouter.":" 目前\r\n            以此Mediarouter知道的路线为代表。\r\n","android.net.UrlQuerySanitizer.getAllButWhitespaceLegal()":"android.net.urlquerysanitizer.getAllbutwhitespacelegal（）\r\n",": Actively scan for routes while this callback\n is registered.":"：在此回调时积极扫描路线\r\n 已经注册。\r\n","Configure this session to use remote volume handling.":"配置此会话以使用远程卷处理。\r\n","Returns the quality hint for this location request.":"返回此位置请求的质量提示。\r\n","android.media.Rating.isThumbUp()":"android.media.rating.isthumbup（）\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_VIDEO_WIDTH":"android.media.mediametadataretriever.metadata_key_video_width\r\n","android.media.AudioRecord.addOnRoutingChangedListener(android.media.OnRoutingChangedListener, android.os.Handler)":"android.media.audiorecord.addonroutingchangedlistener（android.media.onroutingchangedlistener，android.os.handler）\r\n","Get the session's tag for debugging purposes.":"获取会话的标签以进行调试目的。\r\n","android.mtp.MtpConstants.OPERATION_GET_STORAGE_I_DS":"android.mtp.mtpconstants.operation_get_storage_i_ds\r\n","android.media.RingtoneManager.EXTRA_RINGTONE_TITLE":"android.media.ringtonemanager.extra_ringtone_title\r\n","Ringer mode that will be silent and will not vibrate. ":"林格模式将保持沉默，不会振动。\r\n","android.location.LocationManager.KEY_PROVIDER_ENABLED":"android.location.locationmanager.key_provider_enabled\r\n","android.media.session.MediaController.sendCommand(java.lang.String, android.os.Bundle, android.os.ResultReceiver)":"android.media.session.mediacontroller.sendcommand（java.lang.string，android.os.bundle，android.os.os.resultreceiver）\r\n","Shuts down the input side of the socket.":"关闭插座的输入侧。\r\n","Control whether we should use the attached SurfaceHolder to keep the\n            screen on while video playback is occurring.":"控制我们是否应该使用附着的表面持有人保持\r\n            在发生视频播放时打开屏幕。\r\n","android.media.MediaFormat.KEY_OPERATING_RATE":"android.media.mediaformat.key_operating_rate\r\n","if the templateType is not supported by\n this device.":"如果不支持TemplateType\r\n 这个设备。\r\n","No rotate and crop is applied.":"没有旋转和作物。\r\n","Cas session is used to descramble recoreded streams.":"CAS会话用于描述遗传流。\r\n","The AudioPlaybackConfiguration class collects the information describing an audio playback\n            session.":"AudioPlayBackConfiguration类收集描述音频播放的信息\r\n            会议。\r\n","USB class for USB hubs.":"USB集线器的USB课程。\r\n","Set the title of the play queue.":"设置戏剧队列的标题。\r\n","android.hardware.lights.Light.LIGHT_CAPABILITY_BRIGHTNESS":"android.hardware.lights.light.light_capibility_brightness\r\n","android.location.GnssMeasurement.getAutomaticGainControlLevelDb()":"android.location.gnssmeasurement.getAutomaticGainControllevelDB（）\r\n","android.media.ExifInterface.TAG_COMPRESSED_BITS_PER_PIXEL":"android.media.exifinterface.tag_compresse_bits_per_pixel\r\n","android.media.midi.MidiDeviceStatus.isInputPortOpen(int)":"android.media.midi.mididevicestatus.isinputportopen（int）\r\n","android.hardware.camera2.params.ExtensionSessionConfiguration.getStateCallback()":"android.hardware.camera2.params.extensionsessessessesseessconfiguration.getstatecallback（）\r\n","android.media.MediaCrypto.requiresSecureDecoderComponent(java.lang.String)":"android.media.mediacrypto.RequiresecuredeCoderComponent（java.lang.string）\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_MIMETYPE":"android.media.mediametadataretriever.metadata_key_mimetype\r\n","Route type flag for live video.":"路由类型标志进行实时视频。\r\n","android.media.ExifInterface.TAG_EXPOSURE_BIAS_VALUE":"android.media.exifinterface.tag_expuso_bias_value\r\n","android.net.TrafficStats.untagDatagramSocket(java.net.DatagramSocket)":"android.net.trafficstats.untagdatagramsocket（java.net.datagramsocket）\r\n","Indicates that the sample is known to contain the last media sample of the stream.":"表明已知样品包含流的最后介质样本。\r\n","android.media.MediaFormat.KEY_HDR_STATIC_INFO":"android.media.mediaformat.key_hdr_static_info\r\n","Indicates this is a network that has the ability to reach the\n carrier's MMSC for sending and receiving MMS messages.":"表明这是一个能够达到该网络的网络\r\n 运营商的MMSC用于发送和接收MMS消息。\r\n","android.media.AudioManager.PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED":"android.media.audiomanager.property_support_audio_source_unprocessed\r\n","Operation code for DeleteObject":"DeleteObject的操作代码\r\n","android.media.MediaDrm.isCryptoSchemeSupported(java.util.UUID, java.lang.String)":"android.media.mediadrm.siscryptoschemesupported（java.util.uuid，java.lang.string）\r\n","Get the algorithm name":"获取算法名称\r\n","Open a session to descramble one or more streams scrambled by the\n            conditional access system.":"打开一个会话，以描述一个或多个流由\r\n            有条件的访问系统。\r\n","Defines a capture mode where amplification is applied based on the content of the captured\n            data.":"定义捕获模式，其中根据捕获的内容应用放大\r\n            数据。\r\n","android.media.ExifInterface.ExifInterface(java.lang.String)":"android.media.exifinterface.exifinterface（java.lang.string）\r\n","Key used for an extra holding a ":"钥匙用于额外的持有\r\n","android.hardware.SensorManager.LIGHT_SUNRISE":"android.hardware.sensormanager.light_sunrise\r\n","Playback is paused but ready to play":"播放被暂停但准备比赛\r\n"," where the key type is\n            KEY_TYPE_RELEASE, followed by ":" 关键类型在哪里\r\n            key_type_release，其次是\r\n","android.location.GnssNavigationMessage.TYPE_BDS_CNAV2":"android.location.gnssnavigationmessage.type_bds_cnav2\r\n","Request a volume change for this route.":"请求此路线的卷更改。\r\n","Used when applying a transform to direct traffic through an ":"应用转换以指导流量通过\r\n","android.media.tv.TvContentRating.createRating(java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"android.media.tv.tv.tvcontentrating.Createration（java.lang.string，java.lang.string，java.lang.string，java.lang.string）\r\n"," for new capture requests,\n            initialized with template for a target use case.":" 对于新的捕获请求，\r\n            用模板初始化目标用例。\r\n","android.hardware.camera2.CameraCharacteristics.CONTROL_MAX_REGIONS_AF":"机器人。硬件。相机2。CameraCharacteristics.控制_MAX_区域_AF\r\n","AudioManager#STREAM_NOTIFICATION":"听众＃stream_notification\r\n","android.media.RemoteControlClient.PLAYSTATE_REWINDING":"android.media.remotecontrolclient.playstate_rewinding\r\n","android.media.VolumeAutomation":"android.media.VolumeAutomation\r\n"," would pause\n            when it is requested to duck.":" 会停下来\r\n            当要求躲避时。\r\n","Returns the value of a ByteBuffer key, or the default value if the key is missing.":"返回字节键键的值，如果丢失了键，则返回默认值。\r\n","CDMA MED PBX L: {2600Hz 25ms, 2900Hz 25ms}20 times,\n 2000ms OFF,  REPEAT....":"CDMA MED PBX L：{2600Hz 25ms，2900Hz 25ms} 20次，\r\n 2000毫秒左右，重复...\r\n","Retrieve camera device recommended stream configuration map\n            ":"检索相机设备推荐流配置图\r\n            \r\n","OutputConfiguration#addSurface":"outputConfiguration＃addSurface\r\n","Remove the horizontal accuracy from this location.":"从该位置删除水平准确性。\r\n","Event code for OBJECT_ADDED event":"object_added事件的事件代码\r\n","android.mtp.MtpEvent.EVENT_OBJECT_INFO_CHANGED":"android.mtp.mtpevent.event_object_info_changed\r\n","android.hardware.camera2.params.StreamConfigurationMap.getHighResolutionOutputSizes(int)":"android.hardware.camera2.params.streamconfigurationmap.gethighresolutionOutputsizes（int）\r\n","android.media.AudioTrack.DUAL_MONO_MODE_LR":"android.media.audiotrack.dual_mono_mode_lr\r\n",": Do not filter route events.":"：不要过滤路由事件。\r\n","Sets an asynchronous callback for actionable MediaSync events.":"为可行的媒体事件设置异步回调。\r\n","Pauses recording.":"暂停记录。\r\n","android.media.ExifInterface.TAG_DNG_VERSION":"android.media.exifinterface.tag_dng_version\r\n","Virtual display flag: Only show this display's own content; do not mirror\n            the content of another display.":"虚拟显示标志：仅显示此显示自己的内容；不要镜子\r\n            另一个显示的内容。\r\n","android.media.RemoteController.POSITION_SYNCHRONIZATION_NONE":"android.media.remotecontroller.position_synchronization_none\r\n","Retrieves the credentials of this socket's peer.":"检索该插座同行的凭据。\r\n","Creates an IpSecAlgorithm of one of the supported types.":"创建一个受支持类型之一的Ipsecalgorithm。\r\n","Returns the storage ID for the MTP object's storage unit":"返回MTP对象存储单元的存储ID\r\n","Callback for when JET pause state is updated.":"何时更新JET暂停状态的回调。\r\n","android.location.GnssMeasurementsEvent":"android.location.gnssmeasurementsevent\r\n","GeofenceHardware#GEOFENCE_SUCCESS":"geofencehardware＃geofence_success\r\n","Sets the format of the output file produced during recording.":"设置记录过程中产生的输出文件的格式。\r\n","android.media.midi.MidiDeviceInfo.PROPERTY_NAME":"android.media.midi.midideviceinfo.property_name\r\n","The CameraProfile class is used to retrieve the pre-defined still image\n            capture (jpeg) quality levels (0-100) used for low, medium, and high\n            quality settings in the Camera application.":"摄影型类用于检索预定义的静止图像\r\n            捕获（JPEG）质量水平（0-100）用于低，中和高\r\n            相机应用程序中的质量设置。\r\n","CameraExtensionSession#capture":"cameraxtensionsessessessessessessessessessessession\r\n","android.media.session.PlaybackState.ACTION_SKIP_TO_NEXT":"android.media.session.playbackstate.action_skip_to_next\r\n","CameraCharacteristics#SENSOR_INFO_ACTIVE_ARRAY_SIZE":"相机特性#SENSOR_INFO_ACTIVE_ARRAY_SIZE\r\n","The Navigation Message was received without any parity error in its navigation words.":"导航消息的导航词没有任何奇偶性错误。\r\n","Return the Y coordinate of the upper side of the rectangle.":"返回矩形上侧的Y坐标。\r\n","android.media.AudioRecord.getMinBufferSize(int, int, int)":"android.media.audiorecord.getminbuffersize（int，int，int）\r\n","The album title for the media.":"媒体的专辑标题。\r\n","CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_YUV_REPROCESSING":"相机元数据#REQUEST_AVAILABLE_CAPABILITIES_YUV_REPROCESSING\r\n","android.media.MediaFormat.KEY_HARDWARE_AV_SYNC_ID":"android.media.mediaformat.key_hardware_av_sync_id\r\n","Instantiate a MediaCrypto object and associate it with a MediaDrm session":"实例化mediaCrypto对象并将其与MediaDRM会话相关联\r\n","Returns the id of the light.":"返回光的ID。\r\n","F:Android.Media.ThumbnailUtils.ExtractThumbnailAsync":"f：android.media.thumbnailutils.extractthumbnailasync\r\n","The indicator is not available or the presence or absence of multipath is unknown.":"该指示器不可用，或者不存在多径的存在或不存在。\r\n","android.hardware.Sensor.STRING_TYPE_PROXIMITY":"android.hardware.sensor.string_type_proximity\r\n","android.media.AudioManager.EXTRA_VIBRATE_TYPE":"android.media.audiomanager.extra_vibrate_type\r\n","A constant describing an orientation sensor type. ":"描述方位传感器类型的常量。 \r\n","State indicating the player is currently skipping to a specific item in\n            the queue.":"状态表明玩家当前正在跳至特定项目\r\n            队列。\r\n","android.hardware.camera2.CaptureResult.JPEG_GPS_LOCATION":"android.hardware.camera2.captureresult.jpeg_gps_location\r\n"," list for the capture session.":" 捕获会话的列表。\r\n","Builder#setAllowedAuthenticators(int)":"构建器＃setallowaledauthenticators（int）\r\n","Flushes all buffers from the sync object.":"冲洗来自同步对象的所有缓冲区。\r\n","android.hardware.TriggerEvent.timestamp":"机器人。硬件。性子。时间戳\r\n","android.media.tv.TvContract.ACTION_INITIALIZE_PROGRAMS":"android.media.tv.tvcontract.action_initialize_programs\r\n",", or if the connection to an\n            opened ":"，或者如果连接到\r\n            打开\r\n","android.media.MediaSession2.cancelSessionCommand(android.media.ControllerInfo, java.lang.Object)":"android.media.mediasession2.CancelsessessessessesseconCommand（android.media.controllerinfo，java.lang.object）\r\n"," to capture the\n contents of the screen.":" 捕获\r\n 屏幕的内容。\r\n","android.media.ExifInterface.TAG_GPS_SATELLITES":"android.media.exifinterface.tag_gps_satellites\r\n","android.media.MediaSession2.setPlaybackActive(boolean)":"android.media.mediasession2.setplaybackactive（boolean）\r\n","USB class for audio devices.":"音频设备的USB类。\r\n","Adds an external timed text file (FileDescriptor).":"添加了一个外部定时文本文件（FileDescriptor）。\r\n",", auxiliary\n  category ":"， 辅助的\r\n  类别\r\n","Vendor specific USB class.":"供应商特定的USB类。\r\n","List of metering areas to use for auto-focus.":"用于自动对焦的计量区域列表。\r\n","#ERROR_DEAD_OBJECT":"#Error_Dead_Object\r\n","android.media.MediaDrm.SECURITY_LEVEL_HW_SECURE_ALL":"android.media.mediadrm.security_level_hw_secure_all\r\n","Return the decoder padding of an offloaded track, expressed in frames, previously set with\n            ":"返回以框架表示的卸载轨道的解码器填充，以前设置为\r\n            \r\n","Index of variant that favors frequency resolution.":"有利于频率分辨率的变体索引。\r\n","Register for location updates using the named provider, and a callback on\n            the specified ":"使用命名提供商注册位置更新，并在\r\n            指定的\r\n","android.media.MediaDrm.SECURITY_LEVEL_SW_SECURE_CRYPTO":"android.media.mediadrm.security_level_sw_secure_crypto\r\n","This method is called when cursor location of the target input field\n            has changed within its window.":"当目标输入字段的光标位置时，该方法调用\r\n            在其窗口内发生了变化。\r\n","android.media.audiofx.NoiseSuppressor":"android.media.audiofx.Noisesupressor\r\n","Gets the reverb delay.":"获取混响延迟。\r\n","Returns an array of Addresses that attempt to describe the area immediately surrounding the\n            given latitude and longitude.":"返回一系列地址，试图描述立即周围的区域\r\n            给定纬度和经度。\r\n","String property name: identifies the maker of the DRM plugin":"字符串属性名称：标识DRM插件的制造商\r\n","The orientation of the camera relative to the sensor\n            coordinate system.":"相机相对于传感器的方向\r\n            坐标系。\r\n","android.location.GnssMeasurement.getSatelliteInterSignalBiasNanos()":"android.location.gnssmeasurement.getSatelliteIntersignalBiasnanos（）\r\n","android.location.Location.getTime()":"android.location.location.getTime（）\r\n","android.hardware.camera2.params.OutputConfiguration.getSurfaceGroupId()":"android.hardware.camera2.params.outputconfiguration.getsurfacegroupid（）\r\n","This event type indicates that the licensed usage duration for keys in a session\n has expired. ":"此事件类型表明会话中密钥的许可使用时间持续时间\r\n 已过期。\r\n","KeyEvent#KEYCODE_MEDIA_FAST_FORWARD":"keyevent＃keycode_media_fast_forward\r\n","android.hardware.camera2.params.LensShadingMap.getColumnCount()":"android.hardware.camera2.params.lensshadingmap.getColumnCount（）\r\n","Retrieves the baseband carrier-to-noise density of the satellite at the specified index in\n            dB-Hz.":"检索卫星在指定索引中的基带载体密度\r\n            db-hz。\r\n","Sends a generic command to the session.":"将通用命令发送到会话。\r\n","#FLAG_KEY_MEDIA_PREVIOUS":"#flag_key_media_previous\r\n","android.media.audiofx.Equalizer":"android.media.audiofx.Equalizer\r\n","Allow single quote characters. ":"允许单个引用字符。\r\n","Releases any acquired resources.":"释放任何获得的资源。\r\n","State indicating the class doing playback is currently connecting to a\n            new destination.":"状态指示当前正在播放的课程正在连接到\r\n            新目的地。\r\n","android.location.Location.setBearingAccuracyDegrees(float)":"android.location.Location.SetBearionAccuracyDegrees（float）\r\n","if any of the parameters were negative":"如果任何参数为负\r\n","android.hardware.usb.UsbRequest#queue":"android.hardware.usb.usbrequest＃队列\r\n","Class that provides network traffic statistics.":"提供网络流量统计信息的类。\r\n","android.net.LocalSocket.setFileDescriptorsForSend(java.io.FileDescriptor[])":"android.net.localsocket.setfiledescriptorsforsend（java.io.filedescriptor []）\r\n","android.media.tv.TvContract.buildProgramsUriForChannel(android.net.Uri, long, long)":"android.media.tv.tvcontract.buildprogramsuriforchannel（android.net.uri，long，long）\r\n"," from VPN\n            connections.":" 来自VPN\r\n            连接。\r\n","android.media.AudioFormat.getSampleRate()":"android.media.audioformat.getSamplerate（）\r\n"," with KEY_TYPE_RELEASE but\n            the key response has not been received.":" 使用key_type_release但是\r\n            尚未收到关键响应。\r\n","android.media.MediaDescription.getIconBitmap()":"android.media.mediadescription.geticonbitmap（）\r\n","Gets the playback rate using ":"使用\r\n","Defines the maximum volume at which the playback associated with this route is performed\n (for user feedback purposes).":"定义执行与此路线关联的播放相关的最大音量\r\n （用于用户反馈目的）。\r\n","Called when an NMEA message is received.":"收到NMEA消息时致电。\r\n","android.hardware.biometrics.BiometricManager.canAuthenticate()":"android.hardware.biometrics.biometricmanager.canauthenticate（）\r\n","The AudioTrack class manages and plays a single audio resource for Java applications.":"Adiotrack类管理和播放Java应用程序的单个音频资源。\r\n","Requests the media scanner to scan a file.":"请求媒体扫描仪扫描文件。\r\n","android.inputmethodservice.InputMethodService.updateFullscreenMode()":"android.inputmethodservice.inputmethodservice.updatefullscreenmode（）\r\n","android.media.AudioDescriptor.STANDARD_NONE":"android.media.audiodescriptor.standard_none\r\n","android.net.UrlQuerySanitizer.getUnregisteredParameterValueSanitizer()":"android.net.urlquerysanitizer.getUnregisteredParametervaluesanitizer（）\r\n","Flushes the audio data currently queued for playback.":"冲洗当前排队进行播放的音频数据。\r\n","android.media.MediaRecorder.getMetrics()":"android.media.mediarecorder.getMetrics（）\r\n","Query the video codec mime types that are not supported by the application.":"查询应用程序不支持的视频编解码器类型。\r\n","Set the id of the physical camera for this OutputConfiguration":"为此输出配置设置物理摄像头的ID\r\n","Deselect a track.":"取消选择轨道。\r\n","android.media.Rating.RATING_HEART":"android.media.rating.rating_heart\r\n","#getOutputBuffers":"#getOutputbuffers\r\n","android.media.ExifInterface.ExifInterface(java.io.File)":"android.media.exifinterface.exifinterface（java.io.file）\r\n","Broadcast intent action when the parental controls enabled state changes.":"当父母控制启用状态更改时，广播意愿行动。\r\n","android.location.LocationManager.removeUpdates(android.location.LocationListener)":"android.location.locationmanager.removeupdates（android.location.locationlistener）\r\n","FileDescriptor":"备案者\r\n","android.media.audiofx.Virtualizer.setParameterListener(android.media.audiofx.OnParameterChangeListener)":"android.media.audiofx.virtualizer.setParameterListener（android.media.audiofx.onparameterchangelistener）\r\n","A key describing the language of the content, using either ISO 639-1\n            or 639-2/T codes.":"使用ISO 639-1来描述内容语言的键\r\n            或639-2/t代码。\r\n","android.media.MediaFormat.KEY_HAPTIC_CHANNEL_COUNT":"android.media.mediaformat.key_haptic_channel_count\r\n","DVB CSA 2.":"DVB CSA 2。\r\n"," was called, with the RemoteControlClient.":" 被称为，带有remotecontrolclient。\r\n","android.media.ImageWriter.queueInputImage(android.media.Image)":"android.media.imagewriter.queueinputimage（android.media.image）\r\n","VpnService is a base class for applications to extend and build their\n            own VPN solutions.":"VPNService是应用程序扩展和构建其应用程序的基类\r\n            自己的VPN解决方案。\r\n","This is the interface name that a service implementing an input\n            method should say that it supports -- that is, this is the action it\n            uses for its intent filter.":"这是实现输入的服务的接口名称\r\n            方法应该说它支持 - 也就是说，这就是动作\r\n            用于其意图过滤器的用途。\r\n","android.media.MediaFormat.KEY_IS_FORCED_SUBTITLE":"android.media.mediaformat.key_is_forced_subtitle\r\n","Broadcast Action: microphone muting state changed.":"广播动作：麦克风突变状态发生了变化。\r\n","android.media.session.MediaController.getFlags()":"android.media.session.mediacontroller.getflags（）\r\n",": Recording cannot proceed because\n            a required recording resource was not able to be allocated.":"：录制无法进行，因为\r\n            所需的录音资源无法分配。\r\n","#TONE_CDMA_MED_PBX_S_X4":"＃tone_cdma_med_pbx_s_x4\r\n","The quality level of the camcorder profile":"摄录机概况的质量水平\r\n","#MODE_CHANGED_ACTION":"#mode_changed_action\r\n","The number of audio channels used for the audio track":"音频轨道使用的音频频道数量\r\n"," whose ID is equal to the given ID.":" 其ID等于给定的ID。\r\n","TvInputService.Session#notifyVideoUnavailable(int)":"tvinputservice.session＃notifyVideVideOunavailable（int）\r\n","#TONE_CDMA_PRESSHOLDKEY_LITE":"#tone_cdma_pressholdKey_lite\r\n"," is paused.":" 被暂停。\r\n","android.mtp.MtpDevice.getParent(int)":"android.mtp.mtpdevice.getparent（int）\r\n","android.inputmethodservice.ExtractEditText.startInternalChanges()":"android.inputmethodservice.extractEdittext.startinternal Changes（）\r\n","Returns true if the key exists in the map.":"如果密钥存在于地图中，则返回true。\r\n","android.hardware.display.DeviceProductInfo.getConnectionToSinkType()":"android.hardware.display.deviceproductinfo.getConnectionTosinkType（）\r\n"," is SOLID_COLOR.":"是solid_color。\r\n","android.media.MediaRoute2ProviderService.notifyRoutes(java.util.Collection)":"android.media.mediaroute2providerservice.notifyRoutes（java.util.collection）\r\n","if an error was encountered in the output stream.":"如果输出流中遇到错误。\r\n","android.location.GnssMeasurement.hasCarrierFrequencyHz()":"android.location.gnssmeasurement.hascarrierfrequencyhz（）\r\n","This class represents the current state of the GNSS engine and is used in conjunction with\n            ":"该类代表GNSS发动机的当前状态，并与\r\n            \r\n","android.media.AudioRecordingMonitor.unregisterAudioRecordingCallback(android.media.AudioRecordingCallback)":"android.media.audiorecordingmonitor.unregisteraudiorecordingcallback（android.media.audiorecordingcallback）\r\n"," objects, which represent the\n            current state of the GPS engine.":" 对象，代表\r\n            GPS发动机的当前状态。\r\n","android.inputmethodservice.Keyboard":"android.inputmethodservice.keyboard\r\n","android.media.MediaSync.MediaSync()":"android.media.mediasync.mediasync（）\r\n","Gets the clock's time Uncertainty (1-Sigma) in nanoseconds.":"在纳秒中获取时钟的时间不确定性（1-Sigma）。\r\n","Cancel any ongoing repeating capture set by either\n            ":"取消任何一个正在进行的重复捕获。\r\n            \r\n","android.media.ExifInterface.TAG_RW2_SENSOR_BOTTOM_BORDER":"android.media.exifinterface.tag_rw2_sensor_bottom_border\r\n","Gets stream type.":"获取流类型。\r\n","Returns the serial number for the device.":"返回设备的序列号。\r\n","Called when the supplied route becomes unselected as the active route\n for the given route type.":"当提供的路线被选为活动路线时，请调用\r\n 对于给定的路线类型。\r\n","android.hardware.SensorManager.getAngleChange(float[], float[], float[])":"android.hardware.sensormanager.getanglechange（float []，float []，float []）\r\n","android.media.effect.Effect.release()":"android.media.effect.effect.Release（）\r\n","0.f":"0.f\r\n","Restarts the MediaRecorder to its idle state.":"将Mediarecorder重新启动到其闲置状态。\r\n"," on demand.":" 一经请求。\r\n","Event code for OBJECT_INFO_CHANGED event":"object_info_changed事件的事件代码\r\n"," containing the new bluetooth SCO connection state.":" 包含新的蓝牙SCO连接状态。\r\n","android.location.LocationProvider.supportsAltitude()":"android.location.locationprovider.supportsaltitude（）\r\n","android.media.AudioManager.isOffloadedPlaybackSupported(android.media.AudioFormat, android.media.AudioAttributes)":"android.media.audiomanager.isoffloadedplaybacksupported（android.media.audioformat，android.media.media.audioattributs）\r\n"," for a given TV input.":" 对于给定的电视输入。\r\n","MediaRoute2Info#PLAYBACK_VOLUME_FIXED":"mediaroute2info＃plopback_volume_fixed\r\n","The desired lens focal length; used for optical zoom.":"所需的晶状体焦距；用于光学变焦。\r\n","android.location.Criteria.isAltitudeRequired()":"android.location.criteria.isaltituderequired（）\r\n","android.media.MediaFormat.getValueTypeForKey(java.lang.String)":"android.media.mediaformat.getValuetypeforkey（java.lang.string）\r\n","Returns the device's subclass field.":"返回设备的子类字段。\r\n","android.location.Location.getAccuracy()":"android.location.location.getAccuracy（）\r\n","The AudioRecordingConfiguration class collects the information describing an audio recording\n            session.":"AudiorecordingConfiguration类收集了描述音频录制的信息\r\n            会议。\r\n","Returns the volume stream type of this AudioTrack.":"返回此Audiotrack的音量流类型。\r\n","android.media.MediaRoute2ProviderService.notifySessionReleased(java.lang.String)":"android.media.mediaroute2providerservice.notifysessessrearseReal（java.lang.string）\r\n","If this codec is to be used with ":"如果要与此编解码器一起使用\r\n","android.location.GnssMeasurement.STATE_SYMBOL_SYNC":"android.location.gnssmeasurement.state_symbol_sync\r\n","Reports whether the flag ":"报告是否标志\r\n","android.media.MediaRoute2ProviderService.onReleaseSession(long, java.lang.String)":"android.media.mediaroute2providerservice.onreleasesession（long，java.lang.string）\r\n","android.hardware.TriggerEvent":"机器人。硬件。性子,性子\r\n","Gets the frequency range of the given frequency band.":"获取给定频段的频率范围。\r\n","android.media.MediaPlayer.setOnSubtitleDataListener(android.media.OnSubtitleDataListener)":"android.media.mediaplayer.setonsubtitledataListener（android.media.onsubtitledataListener）\r\n"," if there is no\n            JPEG compressed thumbnail.":" 如果没有\r\n            JPEG压缩缩略图。\r\n","State indicating this item is currently fast forwarding.":"表明此项目的状态当前是快速转发。\r\n","Time lapse quality level corresponding to the 480p (720 x 480) resolution.":"时间失误质量水平对应于480p（720 x 480）分辨率。\r\n","Track change reason for manual changes.":"跟踪手动更改的原因。\r\n","#provideKeyResponse":"#ProvideKeyResponse\r\n"," will stop playing the\n            previously retrieved ":" 会停止玩\r\n            先前检索\r\n","This event type indicates that the app needs to request a certificate from\n the provisioning server. ":"此事件类型表明该应用需要从\r\n 配置服务器。\r\n","#VIBRATE_SETTING_ON":"#vibrate_setting_on\r\n","Settings class constructor from a key=value; pairs formatted string.":"设置类构造函数来自键=值;对格式的字符串。\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_PARSING_OTHER":"android.media.metrics.playbackerrorevent.error_parsing_other\r\n","android.hardware.camera2.CameraExtensionCharacteristics.getEstimatedCaptureLatencyRangeMillis(int, android.util.Size, int)":"android.hardware.camera2.cameraextensionsensionCharacteristics.getEstimatedCapturelatencyRangemillis（int，android.util.util.size，int）\r\n","Force switch to a new input method, as identified by ":"强制切换到新输入方法，如\r\n","The maximum numbers of different types of output streams\n            that can be configured and used simultaneously by a camera device\n            for any <code>RAW</code> formats.":"不同类型的输出流的最大数量\r\n            可以由相机设备同时配置和使用\r\n            对于任何<code> RAW </code>格式。\r\n","android.media.AudioManager.stopBluetoothSco()":"android.media.audiomanager.stopbluetoothsco（）\r\n","Return the metering weight of the rectangle.":"返回矩形的计量重量。\r\n","A key describing the frame rate of a video format in frames/sec.":"描述视频格式框架/秒的帧速率的键。\r\n","CameraCaptureSession.StateCallback":"摄影\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_ZSL":"android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_ZSL\r\n","Error code for an HTTP server returning an unexpected HTTP response status code":"HTTP服务器的错误代码返回出乎意料的HTTP响应状态代码\r\n","android.hardware.camera2.DngCreator.writeInputStream(java.io.OutputStream, android.util.Size, java.io.InputStream, long)":"android.hardware.camera2.dngcreator.writeinputstream（java.io.outputstream，android.util.size，java.io.io.inputstream，long）\r\n","Whether this input configuration is of multi-resolution.":"该输入配置是否具有多分辨率。\r\n","android.media.session.MediaSession":"android.media.session.mediasession\r\n","android.media.MediaFormat.setFloat(java.lang.String, float)":"android.media.mediaformat.setfloat（java.lang.string，float）\r\n","android.media.MediaPlayer.reset()":"android.media.mediaplayer.reset（）\r\n","android.media.metrics.PlaybackStateEvent.STATE_SUPPRESSED_BUFFERING":"android.media.metrics.playbackstateevent.state_suppressed_buffering\r\n"," from\n            this point on.":" 从\r\n            这一点。\r\n","android.media.AudioDeviceInfo.TYPE_BLE_HEADSET":"android.media.audiodeviceinfo.type_ble_headset\r\n","#TONE_CDMA_CALLDROP_LITE":"#TONE_CDMA_CALLDROP_LITE\r\n","android.media.session.MediaSession.MediaSession(android.content.Context, java.lang.String)":"android.media.session.mediasession.mediasession（android.content.context，java.lang.string）\r\n","android.media.ExifInterface.TAG_FILE_SOURCE":"android.media.exifinterface.tag_file_source\r\n","Returns a constant indicating the desired speed accuracy. -or- Indicates the desired speed accuracy.":"返回一个常数，表示所需的速度准确性。 - 或指示所需的速度准确性。\r\n","android.media.MediaCryptoException":"android.media.mediacryptoexception\r\n","android.media.MediaDescription.BT_FOLDER_TYPE_MIXED":"android.media.mediaDescription.bt_folder_type_mixed\r\n","android.media.ExifInterface.TAG_RESOLUTION_UNIT":"android.media.exifinterface.tag_resolution_unit\r\n","if the address is invalid.\n":"如果地址无效。\r\n\r\n","android.media.tv.TvView.timeShiftPause()":"android.media.tv.tvview.timeshiftpause（）\r\n","android.location.GnssMeasurement.ADR_STATE_HALF_CYCLE_REPORTED":"android.location.gnssmeasurement.adr_state_half_cycle_reported\r\n","\n            when ":"\r\n            什么时候\r\n","android.media.VolumeProvider.VolumeProvider(int, int, int, java.lang.String)":"android.media.volumeprovider.volumeprovider（int，int，int，java.lang.string）\r\n","Gets video frames played.":"播放视频帧。\r\n","android.hardware.SensorManager.createDirectChannel(android.os.MemoryFile)":"android.hardware.sensormanager.createDirectChannel（android.os.memoryfile）\r\n","Retrieves the elevation of the satellite at the specified index.":"检索指定指数的卫星高程。\r\n","android.hardware.camera2.params.OutputConfiguration":"android.hardware.camera2.params.outputconfiguration\r\n","android.media.session.MediaSession.MediaSession(android.content.Context, java.lang.String, android.os.Bundle)":"android.media.session.mediasession.mediasession（android.content.context，java.lang.string，android.os.bundle）\r\n","#SPL_UNKNOWN":"#SPL_UNKNOWN\r\n","android.media.SoundPool":"android.media.soundpool\r\n","android.media.SubtitleData.SubtitleData(int, long, long, byte[])":"android.media.subtitledata.subtitledata（int，long，long，byte []）\r\n","android.media.MediaFormat.setInteger(java.lang.String, int)":"android.media.mediaformat.setinteger（java.lang.string，int）\r\n","TvInputCallback":"TVInputCallback\r\n","android.location.Location.getAltitude()":"android.location.location.getaltitude（）\r\n","#TONE_CDMA_ALERT_CALL_GUARD":"#TONE_CDMA_ALERT_CALL_GUARD\r\n","android.media.MediaRecorder.getSurface()":"android.media.mediarecorder.getsurface（）\r\n","android.media.CamcorderProfile profiles":"android.media.CamcorderProfile 配置文件\r\n","Gets the leap second associated with the clock's time.":"获得与时钟时间相关联的LEAP。\r\n","android.hardware.camera2.CaptureResult.STATISTICS_HOT_PIXEL_MAP_MODE":"android.hardware.camera2.captureresult.statistics_hot_pixel_map_mode\r\n","The metadata key to retrieve the date when the data source was created\n            or modified.":"检索创建数据源的日期的元数据密钥\r\n            或修改。\r\n","MediaFormat":"MediaFormat\r\n","Maximum number of Images that can be dequeued from the ImageWriter\n            simultaneously (for example, with ":"可以从Imagewriter处脱水的最大图像数量\r\n            同时（例如，\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.getOutputMinFrameDuration(java.lang.Class, android.util.Size)":"android.hardware.camera2.params.RecommendedStreamConfigurationMap.getOutputminframeduration（java.lang.class，android.util.size）\r\n","android.hardware.camera2.CameraMetadata.CONTROL_EXTENDED_SCENE_MODE_BOKEH_STILL_CAPTURE":"android.hardware.camera2.camerametadata.control_extended_scene_mode_bokeh_still_capture\r\n"," is one of the default ringtones.":" 是默认铃声之一。\r\n","android.media.MicrophoneDirection.MIC_DIRECTION_AWAY_FROM_USER":"android.media.microphonedirection.mic_direction_away_from_user\r\n","Add a network route to the VPN interface.":"将网络路由添加到VPN接口。\r\n","android.hardware.camera2.CaptureRequest.SHADING_MODE":"android.hardware.camera2.capturerequest.shading_mode\r\n","android.hardware.usb.UsbDevice.getManufacturerName()":"android.hardware.usb.usbdevice.getManufacturername（）\r\n","Override this to intercept key up events before they are processed by the\n            application.":"覆盖此内容以拦截关键事件，然后再处理。\r\n            应用。\r\n","android.media.MediaFormat.setByteBuffer(java.lang.String, java.nio.ByteBuffer)":"android.media.mediaformat.setbytebuffer（java.lang.string，java.nio.bytebuffer）\r\n","#INDEX_IN_THE_GROUP_UNKNOWN":"#index_in_the_group_unknown\r\n","Clock monotonic including suspend time or its equivalent on the system,\n            in the same units and timebase as ":"时钟单调，包括暂停时间或在系统上等效的钟表，\r\n            在同一单元和时间键中\r\n","Reads Exif tags from the specified image input stream based on the stream type.":"根据流类型从指定的图像输入流读取EXIF标签。\r\n","Returns a product ID for the device.":"返回设备的产品ID。\r\n","Operation code for InitiateCapture":"InitiateCapture的操作代码\r\n","android.location.LocationRequest.getQuality()":"android.location.LocationRequest.getQuality（）\r\n","Apply an effect to GL textures.":"对GL纹理应用效果。\r\n","Class for MediaPlayer to return each audio/video/subtitle track's metadata.":"MediaPlayer的课程返回每个音频/视频/字幕轨道的元数据。\r\n","CDMA HIGH SSL tone: {3700Hz 25ms, 4000Hz 25ms} 8 times,\n 200ms OFF, {3700Hz 25ms, 4000Hz 25ms} repeat 8 times,\n 200ms OFF, {3700Hz 25ms, 4000Hz 25ms} repeat 16 times,\n 4000ms OFF, repeat ...":"CDMA高SSL音调：{3700Hz 25ms，4000Hz 25ms} 8次，\r\n 200ms关闭，{3700Hz 25ms，4000Hz 25ms}重复8次，\r\n 200ms关闭，{3700Hz 25ms，4000Hz 25ms}重复16次，\r\n 4000毫米，重复...\r\n","Track change reason for initial state.":"跟踪最初状态的改变原因。\r\n","Route feature: Live audio.":"路线功能：实时音频。\r\n","android.media.MediaSyncEvent.getAudioSessionId()":"android.media.mediasyncevent.getAudioSessionId（）\r\n","Ensure that a network route exists to deliver traffic to the specified\n host via the specified network interface.":"确保存在网络路线以将流量运送到指定\r\n 通过指定的网络接口进行主机。\r\n","Usage: The buffer contains a complete mipmap hierarchy":"用法：缓冲区包含完整的MIPMAP层次结构\r\n","Retrieve the current encoded sample and store it in the byte buffer\n            starting at the given offset.":"检索当前编码的样品并将其存储在字节缓冲区中\r\n            从给定偏移开始。\r\n","Resume TV program recording only in recording pause status in the current recording session.":"恢复电视节目仅在当前录制会话中记录暂停状态时录制。\r\n"," to use for recording.":" 用于录制。\r\n","#SAMPLE_FLAG_ENCRYPTED":"#sample_flag_encrypted\r\n","Registers a GNSS measurements callback which will run on a binder thread.":"注册A将在粘合剂线程上运行的GNSS测量回调。\r\n","CameraDevice#createCaptureSessionByOutputConfigurations":"cameradeVice＃createCapturesEssionByoutputConfigurations\r\n","Float#NEGATIVE_INFINITY":"float＃nater_infinity\r\n","AudioTrack.Builder":"audiotrack.builder\r\n"," to the output port of this device\n            with the specified port number.":" 到该设备的输出端口\r\n            带有指定的端口号。\r\n","android.media.session.PlaybackState.ACTION_PLAY_FROM_URI":"android.media.session.playbackstate.action_play_from_uri\r\n","android.media.ExifInterface.getAttributeRange(java.lang.String)":"android.media.exifinterface.getAttributerange（java.lang.string）\r\n","android.hardware.camera2.CaptureResult.getSequenceId()":"android.hardware.camera2.captureresult.getSequenceId（）\r\n","InputMethod#showSoftInput InputMethod.showSoftInput()":"inputMethod＃spayoftinput inputmethod.showsoftinput（）\r\n","CameraCharacteristics#SENSOR_COLOR_TRANSFORM1 android.sensor.colorTransform1":"cameracharacteristics＃sensor_color_transform1 android.sensor.colortransform1\r\n","Gets the ratio of high frequency decay time (at 5 kHz) relative to low frequencies.":"相对于低频，获得高频衰减时间（5 kHz）的比率。\r\n","android.hardware.SensorManager.unregisterListener(android.hardware.SensorEventListener, android.hardware.Sensor)":"机器人。硬件。SensorManager。unregisterListener（android。硬件。SensorEventListener,android的.硬件。传感器）\r\n","android.media.MediaDescription.BT_FOLDER_TYPE_PLAYLISTS":"android.media.mediaDescription.bt_folder_type_playlists\r\n","android.media.MediaRecorder.setCamera(android.hardware.Camera)":"android.media.mediarecorder.setcamera（android.hardware.camera）\r\n","android.media.MediaPlayer.deselectTrack(int)":"android.media.mediaplayer.deselecttrack（int）\r\n","Sets the loop points and the loop count.":"设置循环点和循环计数。\r\n","android.media.metrics.PlaybackStateEvent.STATE_SUPPRESSED":"android.media.metrics.playbackstateevent.state_suppressed\r\n","InputMethodManager#RESULT_HIDDEN InputMethodManager.RESULT_HIDDEN":"inputmethodmanager＃result_hidden inputmethodmanager.result_hidden\r\n","android.media.AudioManager.ACTION_SCO_AUDIO_STATE_UPDATED":"android.media.audiomanager.action_sco_audio_state_updated\r\n"," with an additional\n            weight component.":" 还有一个\r\n            重量组件。\r\n","Returns whether this is considered as an active playback state.":"返回是否被认为是主动播放状态。\r\n","#getSnrInDb()":"#getSnrindB（）\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_MAX_FRAME_DURATION":"android.hardware.camera2.cameracharacteristics.sensor_info_max_frame_duration\r\n","android.location.Location.hasBearing()":"android.location.location.hasbearing（）\r\n","Converts a coordinate to a String representation.":"将坐标转换为字符串表示。\r\n","android.media.metrics.TrackChangeEvent.getAudioSampleRate()":"android.media.metrics.trackchangeevent.getAudioSamplerate（）\r\n","Gets the synchronization event audio session ID.":"获取同步事件音频会话ID。\r\n","luminance under an overcast sky in lux":"在勒克斯的阴暗天空下的亮度\r\n","Reverb level.":"混响水平。\r\n","#ACTION_USB_DEVICE_ATTACHED":"#action_usb_device_attached\r\n","Removes a session from this service.":"从此服务中删除会话。\r\n","#TAG_DATETIME_ORIGINAL":"#TAG_DATETIME_ORIGINAL\r\n","Playback state of a RemoteControlClient which is fast forwarding in the media\n               it is currently playing.":"在媒体中快速转发的远程控制状态的播放状态\r\n               它目前正在播放。\r\n","Returns the face's pose.":"返回脸的姿势。\r\n","android.hardware.location.GeofenceHardware.getStatusOfMonitoringType(int)":"android.hardware.location.geofencehardware.getStatusofmonitoringtype（int）\r\n","android.hardware.usb.UsbInterface.getName()":"android.hardware.usb.usbinterface.getName（）\r\n","android.media.ThumbnailUtils.extractThumbnail(android.graphics.Bitmap, int, int)":"android.media.thumbnailutils.extractthumbnail（android.graphics.bitmap，int，int）\r\n","A constant indicating high power usage.":"恒定表示高功率使用情况。\r\n","android.media.ExifInterface.TAG_COMPONENTS_CONFIGURATION":"android.media.exifinterface.tag_components_configuration\r\n","android.hardware.camera2.CameraCharacteristics.CONTROL_AVAILABLE_EFFECTS":"android.hardware.camera2.cameracharacteristics.control_available_effects\r\n","Sets the tolerance.":"设置公差。\r\n","android.media.tv.TvInputInfo.getServiceInfo()":"android.media.tv.tvinputinfo.getServiceInfo（）\r\n","android.hardware.camera2.params.OutputConfiguration.OutputConfiguration(android.util.Size, java.lang.Class)":"android.hardware.camera2.params.outputconfiguration.outputconfiguration（android.util.size，java.lang.class）\r\n","android.media.tv.TvInputInfo.getParentId()":"android.media.tv.tvinputinfo.getParentid（）\r\n","#EXTRA_SCO_AUDIO_STATE":"#EXTRA_SCO_AUDIO_STATE\r\n","CaptureRequest#JPEG_THUMBNAIL_SIZE android.jpeg.thumbnailSize":"CaptureRequest#JPEG_THUMBNAIL_SIZE android.jpeg。n.缩略图\r\n","3*i+2":"3*i+2\r\n","android.hardware.camera2.CameraExtensionCharacteristics.EXTENSION_NIGHT":"android.hardware.camera2.CameraExtensionCharacteristics.extension_night\r\n","A key describing the maximum number of channels that can be output by the AAC decoder.":"一个键描述AAC解码器可以输出的最大通道数。\r\n","Flags that specify the anchoring to edges of the keyboard for detecting touch events\n that are just out of the boundary of the key.":"将锚定在键盘边缘的标志以检测触摸事件\r\n 那只是钥匙的边界。\r\n"," of the connected session.":" 连接的会话。\r\n","Route type flag for live audio.":"路由类型标志进行实时音频。\r\n","android.media.MediaCodec.createEncoderByType(java.lang.String)":"android.media.mediacodec.createencoderbytype（java.lang.string）\r\n","A constant string describing a heart beat sensor.":"一个恒定的弦描述心跳传感器。\r\n","TvTrackInfo#TYPE_AUDIO":"TVTRACKINFO＃type_audio\r\n","Video track.":"视频曲目。\r\n","#TONE_CDMA_ALERT_INCALL_LITE":"#TONE_CDMA_ALERT_INCALL_LITE\r\n","android.media.AudioManager.ENCODED_SURROUND_OUTPUT_UNKNOWN":"android.media.audiomanager.encoded_surround_output_unknown\r\n"," if this TV input can pause recording TV programs,\n            ":" 如果此电视输入可以暂停录制电视节目，\r\n            \r\n","Create a new ExtensionSessionConfiguration":"创建新的Extensionsessessefiguration\r\n","android.net.IpSecAlgorithm.AUTH_HMAC_SHA384":"android.net.ipsecalgorithm.auth_hmac_sha384\r\n","android.hardware.location.GeofenceHardware.GEOFENCE_UNCERTAIN":"android.hardware.location.geofencehardware.geofence_uncnerta\r\n","android.inputmethodservice.InputMethodService.onInitializeInterface()":"android.inputmethodservice.inputmethodservice.initializeinterface（）\r\n","Retrieves the proxy information if any was set":"检索代理信息（如果设置）\r\n","android.media.AudioManager.abandonAudioFocus(android.media.OnAudioFocusChangeListener)":"android.media.audiomanager.abandonaudiofocus（android.media.onaudiofocuschangelistener）\r\n","Returns the endpoint for the request, or null if the request is not opened.":"返回请求的端点，如果未打开请求，则返回null。\r\n","android.hardware.camera2.CameraCharacteristics.LENS_INFO_AVAILABLE_OPTICAL_STABILIZATION":"android.hardware.camera2.cameracharacteristics.lens_info_available_optical_stabilization\r\n","Error code for the device having revoked DRM privileges":"已撤销DRM特权的设备的错误代码\r\n","1.0f":"1.0f\r\n","android.media.session.MediaController.setVolumeTo(int, int)":"android.media.session.mediacontroller.setVolumeto（int，int）\r\n","android.media.ExifInterface.TAG_GPS_DOP":"android.media.exifinterface.tag_gps_dop\r\n","android.location.provider.ProviderProperties.POWER_USAGE_HIGH":"android.location.provider.providerproperties.power_usage_high\r\n","Register for location updates using a provider selected through the given Criteria, and a\n            callback on the specified ":"使用通过给定标准选择的提供商注册位置更新，并\r\n            指定的回调\r\n","Returns true iff a key of the given name exists in the format.":"返回true Iff Iff给定名称的键是格式中存在的。\r\n","android.net.UrlQuerySanitizer":"android.net.urlquerysanitizer\r\n","if the count of ":"如果计数\r\n","GpsStatus NmeaListener ":"gpsstatus nmealistener\r\n","TvRecordingClient.RecordingCallback#onError(int)":"TVRecordingClient.RecordingCallback＃oneRror（int）\r\n","Name of extra added to the ":"额外添加的名称\r\n","Returns the current list of GNSS antenna infos, or null if unknown or unsupported.":"返回当前的GNSS天线Infos列表，或者如果未知或不支持的情况，则返回null。\r\n","android.media.MediaExtractor.seekTo(long, int)":"android.media.mediaextractor.seekto（long，int）\r\n","KeyManager":"Keymanager\r\n","RemoteControlClient enables exposing information meant to be consumed by remote controls\n            capable of displaying metadata, artwork and media transport control buttons.":"remotecontrolclient启用曝光信息，远程控制的信息\r\n            能够显示元数据，艺术品和媒体运输控制按钮。\r\n","android.media.tv.TvRecordingClient.sendAppPrivateCommand(java.lang.String, android.os.Bundle)":"android.media.tv.tvrecordingclient.sendappprivatecommand（java.lang.string，android.os.bundle）\r\n","android.hardware.camera2.CaptureResult.LENS_POSE_ROTATION":"android.hardware.camera2.captureresult.lens_pose_rotation\r\n","AudioRouting.OnRoutingChangedListener":"AudiorOuting.onroutingChangedListener\r\n","android.media.AudioTrack.getAudioDescriptionMixLeveldB()":"android.media.audiotrack.getiodescriptionmixleveldb（）\r\n","Returns the raw USB descriptors for the device.":"返回该设备的RAW USB描述符。\r\n","#startTone(int)":"#starttone（int）\r\n","Authenticators#BIOMETRIC_STRONG":"身份验证器＃biometric_strong\r\n","android.media.MediaFormat.KEY_MAX_FPS_TO_ENCODER":"android.media.mediaformat.key_max_fps_to_encoder\r\n","Return Metrics data about the current codec instance.":"返回有关当前编解码器实例的指标数据。\r\n","android.media.tv.TvTrackInfo.isHardOfHearing()":"android.media.tv.tvtrackinfo.ishardofearing（）\r\n","android.view.inputmethod.InputMethod.restartInput(android.view.inputmethod.InputConnection, android.view.inputmethod.EditorInfo)":"android.view.inputmethod.inputmethod.restartinput（android.view.inputmethod.inputConnection，android.view.InputMethod.editorInfo）\r\n","Get the current actions available on this session.":"获取本届会议上的当前操作。\r\n","android.media.session.MediaSession.getController()":"android.media.session.mediasession.getController（）\r\n","This camera device is capable of producing ultra high resolution images in\n            addition to the image sizes described in the\n            ":"该相机设备能够在\r\n            在描述的图像大小\r\n            \r\n","Returns the player ID associated with this LightState for Light with type\n            ":"返回与此LightState关联的播放器ID，以获取类型\r\n            \r\n","android.media.MicrophoneInfo.LOCATION_MAINBODY_MOVABLE":"android.media.microphoneinfo.location_mainbody_movable\r\n","#getReferenceCarrierFrequencyHzForIsb()":"#getReferenceCarrierFrequencyHzForisb（）\r\n","android.media.AudioDescriptor":"android.media.audiodescriptor\r\n","android.media.AudioTrack.DUAL_MONO_MODE_LL":"android.media.audiotrack.dual_mono_mode_ll\r\n","android.media.MediaExtractor.getAudioPresentations(int)":"android.media.mediaextractor.getaudioperentations（int）\r\n","Returns the total height of the keyboard":"返回键盘的总高度\r\n","android.hardware.camera2.CaptureResult.LENS_FOCAL_LENGTH":"android.hardware.camera2.captureresult.lens_focal_length\r\n","android.media.AudioTrack.reloadStaticData()":"android.media.audiotrack.reloadstaticdata（）\r\n","Get the number of columns in this map.":"获取此地图中的列数。\r\n","Return whether the rating is \"heart selected\".":"返回评级是否为“心脏选择”。\r\n","android.media.audiofx.Visualizer.STATE_UNINITIALIZED":"android.media.audiofx.visualizer.state_uninitialized\r\n","android.location.GnssStatus.getSatelliteCount()":"android.location.gnssstatus.getSatelliteCount（）\r\n","android.media.tv.TvRecordingClient.startRecording(android.net.Uri)":"android.media.tv.tvrecordingclient.startrecording（android.net.uri）\r\n","android.media.MediaMetadataRetriever#METADATA_KEY_AUTHOR":"android.media.mediametadataretriever＃metadata_key_author\r\n","CameraCharacteristics#SENSOR_COLOR_TRANSFORM2 android.sensor.colorTransform2":"cameracharacteristics＃sensor_color_transform2 android.sensor.colortransform2\r\n","android.media.tv.TvContract.isChannelUriForPassthroughInput(android.net.Uri)":"android.media.tv.tvcontract.ischanneluriforpassthroughInput（android.net.uri）\r\n","Indicates this is a network that has the ability to reach a carrier's\n Emergency IMS servers or other services, used for network signaling\n during emergency calls.":"表明这是一个能够到达运营商的网络\r\n 紧急IMS服务器或其他服务，用于网络信号\r\n 在紧急电话中。\r\n","Sets whether TS parsing should ignore AVC elementary streams.":"设置TS解析是否应忽略AVC基本流。\r\n","Sets the period for the periodic notification event.":"设置周期性通知事件的期限。\r\n"," traffic originating\n            from the current thread.":" 交通原始\r\n            从当前线程。\r\n","Return the percentage-based rating value.":"返回基于百分比的评分值。\r\n","android.media.metrics.TrackChangeEvent.getSampleMimeType()":"android.media.metrics.trackchangeevent.getSamplemimeType（）\r\n","Returns alphanumeric code that uniquely identifies the device.":"返回唯一标识设备的字母数字代码。\r\n","Unregister the callback that was used with ":"取消使用的回调\r\n","Used to specify that an endpoint zero control request is a standard request.":"用于指定端点零控制请求是标准请求。\r\n","android.hardware.camera2.params.MeteringRectangle.getSize()":"android.hardware.camera2.params.meteringrectangle.getSize（）\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_IMAGE_COUNT":"android.media.mediametadataretriever.metadata_key_image_count\r\n","Transmit an infrared pattern":"传输红外模式\r\n","Sets the position of the notification marker.":"设置通知标记的位置。\r\n","android.media.MediaMetadataRetriever.getEmbeddedPicture()":"android.media.mediametadataretriever.getembeddedpicture（）\r\n","Audio presentation classifier: Unknown.":"音频演示分类器：未知。\r\n","Returns the name of the provider that generated this fix. -or- Sets the name of the provider that generated this fix.":"返回生成此修复程序的提供商的名称。 - 或设置生成此修复程序的提供商的名称。\r\n","android.hardware.camera2.CaptureRequest.SENSOR_SENSITIVITY":"android.hardware.camera2.capturerequest.sensor_sensitivity\r\n","F:Android.Media.MediaPlayer+InfoEventArgs..ctor":"f：android.media.mediaplayer+infoeventargs..ctor\r\n","android.media.AudioRecord.setLogSessionId(android.media.metrics.LogSessionId)":"android.media.audiorecord.setLogsessionId（android.media.metrics.logsessionid）\r\n","android.location.Address.setLatitude(double)":"android.location.Address.setlatitude（double）\r\n","#CHANNEL_GREEN":"#channel_green\r\n","Broadcast Action: speakerphone state changed.":"广播动作：说话者状态更改。\r\n","Gets the zoom ratios of all zoom values.":"获取所有缩放值的缩放比率。\r\n"," bound to this network.":" 绑定到这个网络。\r\n","android.media.tv.TvInputManager.ACTION_BLOCKED_RATINGS_CHANGED":"android.media.tv.tvinputmanager.action_blocked_ratings_changed\r\n","CaptureRequest#CONTROL_AE_LOCK android.control.aeLock":"capturerequest＃control_ae_lock android.control.aelock\r\n","android.hardware.camera2.CaptureRequest.isReprocess()":"android.hardware.camera2.capturreequest.isreprocess（）\r\n","android.hardware.camera2.params.LensShadingMap.getGainFactorVector(int, int)":"android.hardware.camera2.params.lensshadingmap.getGainFactorVector（int，int）\r\n","android.media.MediaCodec.getOutputImage(int)":"android.media.mediacodec.getOutputimage（int）\r\n","Called to notify the client when a connection to the\n MediaScanner service has been established.":"当连接到\r\n 已经建立了MediaScanner服务。\r\n","android.media.MediaPlayer.create(android.content.Context, android.net.Uri, android.view.SurfaceHolder, android.media.AudioAttributes, int)":"android.media.mediaplayer.create（android.content.context，android.net.uri，android.view.surfaceholder，android.media.media.audioattributes，int）\r\n","Playback state of a RemoteControlClient which is paused.":"被暂停的remotecontrolclient的播放状态。\r\n","android.media.MediaDrm.getCryptoSession(byte[], java.lang.String, java.lang.String)":"android.media.mediadrm.getCryptosession（byte []，java.lang.string，java.lang.string）\r\n","android.media.AudioFormat.ENCODING_PCM_24BIT_PACKED":"android.media.audioformat.encoding_pcm_24bit_packed\r\n","Checks if the device implements automatic gain control.":"检查设备是否实现自动增益控制。\r\n","USB class for mass storage devices.":"用于质量存储设备的USB类。\r\n","Notify the CA system to refresh entitlement keys.":"通知CA系统以刷新权利键。\r\n","Returns the language information encoded by either ISO 639-1 or ISO 639-2/T.":"返回由ISO 639-1或ISO 639-2/t编码的语言信息。\r\n","Checks whether any music is active.":"检查是否有任何音乐活跃。\r\n","android.media.MediaDescrambler.SCRAMBLE_CONTROL_EVEN_KEY":"android.media.mediadescrambler.scramble_control_even_key\r\n","#DUAL_MONO_MODE_OFF":"#dual_mono_mode_off\r\n","android.media.tv.TvInputManager.VIDEO_UNAVAILABLE_REASON_CAS_NEED_PAIRING":"android.media.tv.tvinputmanager.video_unavailable_reason_cas_need_pa​​iring\r\n","Gets playback type.":"获取播放类型。\r\n","Key used for an extra holding an integer request code when location flush completion is sent\n            using a PendingIntent.":"发送位置齐平完成时，用于额外持有整数请求代码的键\r\n            使用垂悬。\r\n","android.hardware.camera2.params.SessionConfiguration.getSessionParameters()":"android.hardware.camera2.params.sessionconfiguration.getSessionParameters（）\r\n","android.net.SSLCertificateSocketFactory.getNpnSelectedProtocol(java.net.Socket)":"android.net.sslcertificatesocketFactory.getNpnSelectedProtocol（java.net.socket）\r\n","#TONE_CDMA_CALL_SIGNAL_ISDN_PAT5":"＃tone_cdma_call_signal_isdn_pat5\r\n","Opens the specified ":"打开指定的\r\n","android.hardware.display.DeviceProductInfo.getModelYear()":"android.hardware.display.deviceproductinfo.getmodelyear（）\r\n","Remove any statistics parameters from the given ":"从给定的任何统计参数中删除任何统计参数\r\n","android.media.PlaybackParams.getAudioFallbackMode()":"android.media.playbackparams.getaudiofallbackmode（）\r\n","Socket":"插座\r\n","Sets the output surface for MediaSync.":"为MediaSync设置输出表面。\r\n","android.media.metrics.PlaybackMetrics.DRM_TYPE_CLEARKEY":"android.media.metrics.playbackmetrics.drm_type_clearkey\r\n","Sets the combination of measurement modes to be performed by this audio effect.":"设置该音频效应要执行的测量模式的组合。\r\n","Get the blue component.":"获取蓝色组件。\r\n","Maximum raw value output by sensor for this frame.":"对于此帧，传感器的最大原始值输出。\r\n","Binds the specified ":"绑定指定的\r\n",": Playback.":"： 回放。\r\n","Unspecified media recorder error.":"未指定的媒体录音机错误。\r\n","Displays TV contents.":"显示电视内容。\r\n","#PLAYSTATE_ERROR":"#playstate_error\r\n","MediaBrowserService#getCurrentBrowserInfo()":"MediaBrowserService＃getCurrentBrowserInfo（）\r\n","A constant string describing an orientation sensor type.":"描述方向传感器类型的常数字符串。\r\n","Sets the audio sampling rate for recording.":"设置用于记录的音频采样率。\r\n","android.hardware.usb.UsbRequest.setClientData(java.lang.Object)":"android.hardware.usb.usbrequest.setclientdata（java.lang.object）\r\n","#SENSOR_DELAY_GAME":"#sensor_delay_game\r\n","The device is directly connected to the display sink.":"该设备直接连接到显示器接收器。\r\n","Register a callback to be invoked for configuration of the DRM object before\n            the session is created.":"注册一个回调，以调用以在DRM对象的配置中调用\r\n            会话是创建的。\r\n","An AudioProfile is specific to an audio format and lists supported sampling rates and\n            channel masks for that format.":"AudioProfile是特定于音频格式的，并列出了支持的采样率和\r\n            通道掩盖该格式。\r\n","android.hardware.camera2.params.RggbChannelVector.getGreenOdd()":"android.hardware.camera2.params.rggbchannelvector.getgreenodd（）\r\n","Enables or disables the caption in this TvView.":"启用或禁用此TVView中的标题。\r\n","Helper function to convert a rotation vector to a rotation matrix.":"助手功能将旋转矢量转换为旋转矩阵。\r\n","Returns the Config object used to setup this effect.":"返回用于设置此效果的配置对象。\r\n","android.media.audiofx.Equalizer.PARAM_GET_NUM_OF_PRESETS":"android.media.audiofx.equalizer.param_get_num_of_presets\r\n","Quality of lens shading correction applied\n            to the image data.":"应用镜头阴影校正的质量\r\n            到图像数据。\r\n","Returns the notification marker position expressed in frames.":"返回以帧表示的通知标记位置。\r\n","android.media.AudioPresentation.CONTENT_UNKNOWN":"android.media.audiopersentation.content_unknown\r\n","android.hardware.camera2.CaptureRequest.FLASH_MODE":"android.hardware.camera2.capturerequest.flash_mode\r\n","Adds textual information.":"添加文本信息。\r\n","SensorEvent":"[医]传感器\r\n","android.media.AudioManager.AUDIOFOCUS_GAIN":"android.media.audiomanager.audiofocus_gain\r\n","Describes a face detected in an image.":"描述图像中检测到的面孔。\r\n","Called to notify when our device has been closed by all its clients":"打电话通知我们的所有客户何时关闭我们的设备\r\n","android.hardware.SensorManager.GRAVITY_DEATH_STAR_I":"android.hardware.sensormanager.gravity_death_star_i\r\n","A key describing the MPEG-H stream compatible sets.":"描述MPEG-H流兼容集的键。\r\n","android.media.AudioManager.PLAYBACK_OFFLOAD_NOT_SUPPORTED":"android.media.audiomanager.playback_offload_not_supported\r\n","Returns the output sample rate in Hz for the specified stream type.":"返回指定流类型的Hz输出样本率。\r\n","android.location.LocationListener.onLocationChanged(android.location.Location)":"android.location.LocationListener.OnlocationChanged（Android.Location.Location）\r\n","The current pressed state of this key ":"此键的当前紧迫状态\r\n","A key describing the AAC profile to be used (AAC audio formats only).":"描述要使用的AAC配置文件的密钥（仅AAC音频格式）。\r\n","Gets the vertical angle of view in degrees.":"获得垂直的视角。\r\n","android.hardware.SensorAdditionalInfo":"android.hardware.sensoradditionalinfo\r\n","android.media.MediaPlayer.setAudioSessionId(int)":"android.media.mediaplayer.setaudiosessionid（int）\r\n","android.media.MediaDrmResetException":"android.media.mediadrmresetexception\r\n","VOD (Video on Demand) playback type.":"VOD（视频按需）播放类型。\r\n","Allow characters with character codes 128 to 255.":"允许字符代码128至255。\r\n","Sets a variable number of parameter values to audio hardware.":"将可变数量的参数值设置为音频硬件。\r\n","Create a new user route that may be modified and registered for use by the application.":"创建一个新的用户路由，可以修改并注册以供应用程序使用。\r\n"," containing the device's properties.":" 包含设备的属性。\r\n","Return the maximum number of MediaDrm sessions that may be opened\n            simultaneosly among all MediaDrm instances for the active DRM\n            scheme.":"返回可能打开的MediaDRM会话数量的最大数量\r\n            Active DRM的所有MediaDRM实例中同时合理\r\n            方案。\r\n","android.media.effect.EffectFactory.EFFECT_VIGNETTE":"android.media.effect.effectfactory.effect_vignette\r\n","#TONE_CDMA_LOW_PBX_SSL":"#TONE_CDMA_LOW_PBX_SSL\r\n","#CONFIGURE_FLAG_ENCODE":"#configure_flag_encode\r\n","android.media.ExifInterface.TAG_SOFTWARE":"android.media.exifinterface.tag_software\r\n","Label to display ":"显示标签\r\n","This indicates that the buffer only contains part of a frame,\n            and the decoder should batch the data until a buffer without\n            this flag appears before decoding the frame.":"这表明缓冲区仅包含帧的一部分，\r\n            解码器应将数据批量批量\r\n            该标志在解码框架之前出现。\r\n","android.media.tv.TvContract.EXTRA_PREVIEW_PROGRAM_ID":"android.media.tv.tvcontract.extra_preview_program_id\r\n","RoutingSessionInfo#getId() id":"RoutingSessionInfo＃getID（）ID\r\n","Returns the visibility mode (either ":"返回可见性模式（要么\r\n","android.hardware.camera2.CaptureRequest.CONTROL_CAPTURE_INTENT":"android.hardware.camera2.capturerequest.control_capture_intent\r\n","android.media.AudioTrack.getNativeFrameCount()":"android.media.audiotrack.getnativeframecount（）\r\n","The camera device estimated scene illumination lighting\n            frequency.":"相机设备估计场景照明照明\r\n            频率。\r\n","android.hardware.camera2.CameraMetadata":"android.hardware.camera2.camerametadata\r\n","Default height of a key in this row.":"此行中键的默认高度。\r\n","android.net.TrafficStats.incrementOperationCount(int)":"android.net.trafficstats.incrementoperationcount（int）\r\n","Triple Data Encryption Algorithm (TDES) Electronic Code Book (ECB) mode.":"三数据加密算法（TDES）电子代码簿（ECB）模式。\r\n","android.media.MediaMetadata.METADATA_KEY_WRITER":"android.media.mediametadata.metadata_key_writer\r\n","Applies the ":"适用\r\n","#RINGER_MODE_NORMAL":"#Ringer_Mode_normal\r\n","android.hardware.camera2.CameraCharacteristics.CONTROL_AVAILABLE_VIDEO_STABILIZATION_MODES":"机器人。硬件。相机2。CameraCharacteristics.控制_AVAILABLE_VIDEO_STABILIZATION_MODES\r\n","Stub ConnectivityManager for layoutlib":"layoutlib的存根连接manager\r\n","This is an immutable class that describes the current status of a MIDI device's ports.":"这是一个不变的类，描述了MIDI设备端口的当前状态。\r\n","Destroys this buffer immediately.":"立即破坏此缓冲区。\r\n","CameraCharacteristics#SENSOR_CALIBRATION_TRANSFORM1 android.sensor.calibrationTransform1":"cameracharacteristics＃sensor_calibration_transform1 android.sensor.calibrationTransform1\r\n","android.media.CamcorderProfile.QUALITY_TIME_LAPSE_QHD":"android.media.camcorderprofile.quality_time_lapse_qhd\r\n","The corresponding action is triggered only when the presentation is completed\n            (meaning the media has been presented to the user) on the specified session.":"仅在介绍完成时才触发相应的动作\r\n            （这意味着已向用户介绍了媒体）在指定的会话上。\r\n","Operation code for InitiateOpenCapture":"启动操作代码\r\n","The desired region of the sensor to read out for this capture.":"传感器的所需区域要读取此捕获。\r\n","#PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED":"#property_support_audio_source_unprocessed\r\n","#FLAG_KEY_MEDIA_POSITION_UPDATE":"#flag_key_media_position_update\r\n","Indicates a rating style is not supported.":"表示不支持评级样式。\r\n","Sets the position of the mid-point between the eyes.":"设置眼睛之间的中点位置。\r\n","Error code for a failure while trying to decode media samples":"试图解码媒体样本时故障的错误代码\r\n","android.media.AudioManager.playSoundEffect(int, float)":"android.media.audiomanager.playsoundeffect（int，float）\r\n","Returns the maximum allowed obscuring opacity per UID to propagate touches.":"返回最大允许的遮盖不透明度，以传播触摸。\r\n","The metadata key to retrieve the date when the data source was created\n or modified.":"检索创建数据源的日期的元数据密钥\r\n 或修改。\r\n","SMPTE 170M transfer characteristic curve used by BT.":"BT使用的SMPTE 170m传输特性曲线。\r\n","android.media.ExifInterface.TAG_DIGITAL_ZOOM_RATIO":"android.media.exifinterface.tag_digital_zoom_ratio\r\n","to retrieve the status for each satellite.":"检索每个卫星的状态。\r\n","android.location.Criteria.Criteria()":"android.location.Criteria.Criteria（）\r\n","#SEEK_CLOSEST":"#seek_closest\r\n","Convenience method to create a MediaPlayer for a given Uri.":"为给定URI创建媒体播放器的便利方法。\r\n","android.media.tv.TvInputManager.META_DATA_CONTENT_RATING_SYSTEMS":"android.media.tv.tvinputmanager.meta_data_content_rating_systems\r\n","Write the pixel data to a DNG file with the currently configured metadata.":"用当前配置的元数据将像素数据写入DNG文件。\r\n","#TONE_SUP_PIP":"#TONE_SUP_PIP\r\n"," for the ringtone at the given position in the ":" 对于在给定位置的铃声\r\n","Infers the volume stream type based on what type of ringtones this\n            manager is returning.":"根据哪种类型的铃声来渗透音量流类型\r\n            经理正在返回。\r\n","Galileo F/NAV message contained in the structure.":"结构中包含的伽利略f/nav消息。\r\n","android.location.Location.getLatitude()":"android.location.location.getLatitude（）\r\n","android.media.MediaRecorder.setOutputFile(java.io.FileDescriptor)":"android.media.mediarecorder.setOutputfile（java.io.filedescriptor）\r\n","\n            to the camera device.":"\r\n            到相机设备。\r\n","#SEEK_CLOSEST_SYNC":"#seek_closest_sync\r\n","The constant used to indicate that too many geofences have been registered.":"用来表明已注册过多的地理申请的常数。\r\n","AudioRecordingMonitor defines an interface implemented by ":"AudioreCordingMonitor定义了由\r\n","Returns the value associated with the given key, or null if no mapping of\n            the desired type exists for the given key or a null value is explicitly\n            associated with the key.":"返回与给定键关联的值，如果没有映射\r\n            给定键或无空值的所需类型是明确的\r\n            与密钥相关。\r\n","The base class for camera controls and information.":"相机控件和信息的基类。\r\n","Constructor for the token with type ":"带有类型的令牌的构造函数\r\n","android.media.MediaRoute2ProviderService.notifySessionCreated(long, android.media.RoutingSessionInfo)":"android.media.mediaroute2providerservice.notifysessessed（long，android.media.routingsessioninfo）\r\n","Usage: The buffer must not be used outside of a protected hardware path":"用法：缓冲区不得在受保护的硬件路径之外使用\r\n","name":"姓名\r\n","android.inputmethodservice.InputMethodService.isInputViewShown()":"android.inputmethodservice.inputmethodservice.isinputviewshown（）\r\n","A class implementing a container for data associated with a measurement event.":"实施与测量事件相关的数据的集装箱的类。\r\n","A key response is received from the license server by the app, then it is\n            provided to the MediaDrm instance using provideKeyResponse.":"该应用程序是从许可证服务器收到的关键响应，然后是\r\n            使用supplyKeyResponse提供给MediaDRM实例。\r\n","android.hardware.camera2.params.ExtensionSessionConfiguration":"android.hardware.camera2.params.extensionsessessessefiguration\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_DECODING_FORMAT_UNSUPPORTED":"android.media.metrics.playbackerrorevent.error_decoding_format_unsupported\r\n","The artwork for the media as a Uri formatted String.":"媒体作为URI格式字符串的艺术品。\r\n","android.media.session.PlaybackState.ACTION_SKIP_TO_QUEUE_ITEM":"android.media.session.playbackstate.action_skip_to_queue_item\r\n","android.media.effect.Effect":"android.media.effect.effect\r\n","android.media.RemoteControlClient.FLAG_KEY_MEDIA_STOP":"android.media.remotecontrolclient.flag_key_media_stop\r\n","android.media.AudioRecord.isPrivacySensitive()":"android.media.audiorecord.isprivacystive（）\r\n","#getSampleRate()":"#getSamplerate（）\r\n","android.inputmethodservice.InputMethodService.sendKeyChar(char)":"android.inputmethodservice.inputmethodservice.sendkeychar（char）\r\n","A security vulnerability has been discovered and the sensor is unavailable until a\n            security update has addressed this issue.":"已发现安全漏洞，传感器不可用，直到\r\n            安全更新已解决此问题。\r\n"," broadcasts, containing the boolean\n            enabled state of location.":" 广播，包含布尔值\r\n            启用了位置状态。\r\n","Returns whether the user's vibrate setting for a vibrate type.":"返回用户是否为振动类型的振动设置。\r\n","android.media.effect.Effect.setUpdateListener(android.media.effect.EffectUpdateListener)":"android.media.effect.effect.setupdateListener（android.media.effect.effectupdateListener）\r\n","android.location.GnssMeasurement.STATE_GAL_E1B_PAGE_SYNC":"android.location.gnssmeasurement.state_gal_e1b_page_sync\r\n","F:Android.Locations.GpsStatus+IListener.OnGpsStatusChanged":"f：android.locations.gpsstatus+ilistener.ongpsstatuschanged\r\n","android.net.IpSecAlgorithm.IpSecAlgorithm(java.lang.String, byte[], int)":"android.net.ipsecalgorithm.ipsecalgorithm（java.lang.string，byte []，int）\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_COLOR_TRANSFORM2":"android.hardware.camera2.cameracharacteristics.sensor_color_transform2\r\n","Called to update status in buffering a media stream received through\n progressive HTTP download.":"呼吁更新状态以缓冲通过接收的媒体流\r\n 渐进的HTTP下载。\r\n","The title of the media.":"媒体的标题。\r\n","android.location.GnssNavigationMessage.TYPE_QZS_L1CA":"android.location.gnssnavigationmessage.type_qzs_l1ca\r\n","Encapsulation metadata type for DVB AD descriptor.":"DVB AD描述符的封装元数据类型。\r\n","android.media.session.MediaSessionManager.addOnSession2TokensChangedListener(android.media.session.OnSession2TokensChangedListener)":"android.media.session.mediasessionmanager.addonsession2tokenschangedlistener（android.media.session.onsession.onsession2tokenschangedlistener）\r\n","android.media.effect.EffectFactory.EFFECT_DOCUMENTARY":"android.media.effect.effectfactory.effect_documentary\r\n","android.media.MediaDescription.getTitle()":"android.media.mediadescription.getTitle（）\r\n","android.location.LocationManager.addNmeaListener(android.location.OnNmeaMessageListener)":"android.location.LocationManager.AddnMealistener（android.location.onnmeamememessageListener）\r\n","Indicates that the audio may be captured by any app.":"指示音频可以由任何应用程序捕获。\r\n","android.location.Location.setAccuracy(float)":"android.location.location.setaccuracy（float）\r\n","The file output format of the camcorder profile":"摄像机配置文件的文件输出格式\r\n","Gets the maximum value for audio sources.":"获取音频源的最大值。\r\n","A class that contains information about a GNSS antenna.":"包含有关GNSS天线的信息的类。\r\n","android.media.MediaDescrambler.SCRAMBLE_CONTROL_RESERVED":"android.media.mediadescrambler.scramble_control_reserved\r\n","Registers the remote control client for providing information to display on the remote\n            controls.":"注册遥控器客户端，以提供在遥控器上显示的信息\r\n            控件。\r\n","Returns true if this provider meets the given criteria,\n            false otherwise.":"如果该提供商符合给定标准，则返回真实\r\n            否则为错误。\r\n","android.hardware.camera2.MultiResolutionImageReader.setOnImageAvailableListener(android.media.OnImageAvailableListener, java.util.concurrent.Executor)":"android.hardware.camera2.multirestolutionimagereader.setonimageavailablistener（android.media.onimageavailablelistener，java.util.concurrent.execurrent.execuren）\r\n","android.media.tv.TvContentRating.getMainRating()":"android.media.tv.tvcontentrating.getmainrating（）\r\n","Retrieve the MediaProjection obtained from a succesful screen\n            capture request.":"检索从成功屏幕获得的媒介注射\r\n            捕获请求。\r\n","Get the current play queue for this session if one is set.":"如果设置了一个会话，请获取本次会话的当前播放队列。\r\n","Callback#onOutputBufferAvailable":"回调＃OnOutputBufferavailable\r\n","android.media.effect.EffectFactory.EFFECT_FILLLIGHT":"android.media.effect.effectfactory.effect_filllight\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_RUNTIME":"android.media.metrics.playbackerrorevent.error_runtime\r\n","#SOCKET_STREAM":"#socket_stream\r\n","Indicates this is a network that has the ability to reach a Wi-Fi direct\n peer.":"表示这是一个能够直接达到Wi-Fi的网络\r\n 同行。\r\n","android.hardware.camera2.CameraCharacteristics.getAvailableCaptureRequestKeys()":"android.hardware.camera2.cameracharacteristics.getavailablecapturerequestkeys（）\r\n","Sets whether MP4 parsing should ignore the tfdt box.":"设置MP4解析是否应忽略TFDT框。\r\n","android.media.audiofx.PresetReverb.PARAM_PRESET":"android.media.audiofx.presetreverb.param_preset\r\n","android.media.AudioPresentation.getProgramId()":"android.media.audiopersentation.getProgramid（）\r\n","android.media.MediaMetadataEditor.apply()":"android.media.mediametadataeditor.apply（）\r\n","if the ACCESS_FINE_LOCATION permission is not present\n":"如果不存在access_fine_location许可\r\n\r\n","android.media.AudioTrack.unregisterStreamEventCallback(android.media.StreamEventCallback)":"android.media.audiotrack.unregisterstreameventcallback（android.media.streameventCallback）\r\n","Sets the listener the AudioRecord notifies when a previously set marker is reached or\n for each periodic record head position update.":"设置侦听器在达到先前设置的标记或\r\n 对于每个定期记录头部位置更新。\r\n","android.hardware.usb.UsbConfiguration.isRemoteWakeup()":"android.hardware.usb.usbconfiguration.isremotewakeup（）\r\n","This method is similar to ":"此方法类似于\r\n","Take care of dispatching incoming key events to the appropriate\n callbacks on the service, and tell the client when this is done.":"照顾将传入的关键事件派遣到适当的事件\r\n 在服务上回调，并告诉客户何时完成。\r\n","Exception thrown when an attempt is made to construct a MediaDrm object\n            using a crypto scheme UUID that is not supported by the device":"试图构建MediaDRM对象时会引发异常\r\n            使用该设备不支持的加密方案UUID\r\n","android.media.MediaMuxer.MediaMuxer(java.lang.String, int)":"android.media.mediamuxer.mediamuxer（java.lang.string，int）\r\n","android.media.tv.TvInputManager.VIDEO_UNAVAILABLE_REASON_CAS_LICENSE_EXPIRED":"android.media.tv.tvinputmanager.video_unavailable_reason_cas_license_expired\r\n","Get a user readable error message.":"获取用户可读的错误消息。\r\n","Return whether the input method is <em>currently</em> running in\n            fullscreen mode.":"返回输入方法是否当前运行</em>\r\n            全屏模式。\r\n","android.media.audiofx.Visualizer.SCALING_MODE_AS_PLAYED":"android.media.audiofx.visualizer.scaling_mode_as_played\r\n","Gets the list of IDs of selected routes for the session.":"获取会话选定路由的ID列表。\r\n","android.media.MediaDrm.clearOnKeyStatusChangeListener()":"android.media.mediadrm.clearonkeystatuschangelistener（）\r\n","CameraCharacteristics#LENS_POSE_ROTATION android.lens.poseRotation":"cameracharacteristics＃lens_pose_rotation android.lens.poserotation\r\n","Galileo I/NAV message contained in the structure.":"结构中包含的伽利略I/导航消息。\r\n","Interface definition for a callback to be invoked when the media playback position is\n queried.":"媒体播放位置为时要调用回调的接口定义\r\n 查询。\r\n","Contains the opaque data an app uses to request keys from a license server\n":"包含一个应用程序用来从许可证服务器请求密钥的不透明数据\r\n\r\n","Requests a redraw of the entire keyboard.":"请求对整个键盘进行重新刷新。\r\n","Time lapse quality level corresponding to the 4k-DCI (4096 x 2160) resolution.":"时间失误质量水平对应于4K-DCI（4096 x 2160）分辨率。\r\n","android.media.audiofx.LoudnessEnhancer.LoudnessEnhancer(int)":"android.media.audiofx.loudnessenhancer.loudnessenhancer（int）\r\n"," was out of range\n":" 超出了范围\r\n\r\n","Returns an Intent that <b>must</b> be passed to startActivityForResult()\n            in order to start screen capture.":"返回一个意图，即必须将<b>必须传递给startActivityForresult（）\r\n            为了开始屏幕截图。\r\n"," that can be used to produce ":" 可以用来生产\r\n","android.media.session.MediaSession.setMediaButtonReceiver(android.app.PendingIntent)":"android.media.session.mediasession.setMediabuttonreceiver（android.app.pendendIntent）\r\n"," to receive notifications of routing\n            changes on this AudioTrack/AudioRecord.":" 接收路由通知\r\n            此Audiotrack/Audiorecord的更改。\r\n","android.media.AudioManager.ENCODED_SURROUND_OUTPUT_ALWAYS":"android.media.audiomanager.encoded_surround_output_always\r\n"," that are\n            supported by this camera device.":" 那是\r\n            由此相机设备支持。\r\n","Sets whether constant bitrate seeking should be enabled for MP3.":"设置是否应为MP3启用恒定的比特率寻求。\r\n","if the effect name is not known.\n":"如果效果名称不知道。\r\n\r\n","#getKeys":"#getKeys\r\n","Returns whether the track was built with ":"返回曲目是否与\r\n","#VIBRATE_SETTING_OFF":"#vibrate_setting_off\r\n","android.media.ExifInterface.getGpsDateTime()":"android.media.exifinterface.getGpsDateTime（）\r\n","android.media.AudioRecordingConfiguration.getClientAudioSessionId()":"android.media.audiorecordingConfiguration.getClientAudiosessionId（）\r\n","F:Android.Hardware.Camera2.CameraDevice.CreateCaptureRequest":"F：android.hardware.camera2.cameradevice.CreateCaptureRequest\r\n","Returns true if we have been asked to show our input view.":"如果我们被要求显示我们的输入视图，则返回真实。\r\n","Load Sound effects.":"负载声音效果。\r\n","A class to encapsulate rating information used as content metadata.":"一类用于封装用作内容元数据的评级信息。\r\n","Get currently applied global camera audio restriction mode. -or- Set audio restriction mode when this CameraDevice is being used.":"获得当前应用的全局相机音频限制模式。使用此cameradeVice时 - 或设置音频限制模式。\r\n","A constant describing a relative humidity sensor type.\n See ":"描述相对湿度传感器类型的常数。\r\n 见 \r\n","android.location.GnssMeasurement.getSatelliteInterSignalBiasUncertaintyNanos()":"android.location.gnssmeasurement.getSatelliteIntersignalBiasuncuncterntytynanos（）\r\n","android.mtp.MtpDevice.getDeviceName()":"android.mtp.mtpdevice.getDeviceName（）\r\n","The measurement shows no signs of multi-path.":"该测量没有显示多路径的迹象。\r\n","True if this location has a speed.":"如果此位置有速度，则为是真的。\r\n","android.mtp.MtpDevice.close()":"android.mtp.mtpdevice.close（）\r\n","Create a new reprocessable camera capture session by providing the desired reprocessing\n            input Surface configuration and the target output set of Surfaces to the camera device.":"通过提供所需的后处理来创建一个新的可重新处理的相机捕获会话\r\n            输入表面配置和相机设备表面的目标输出集。\r\n","#DUAL_MONO_MODE_LL":"#dual_mono_mode_ll\r\n","Returns the power requirement for this provider, one of the ProviderProperties.":"返回该提供商的功率要求，这是ProviderProperties之一。\r\n","Whether <code>RAW</code> images requested have their bayer pattern as described by\n            ":"是否<code> RAW </code>要求的图像具有其拜耳模式，如\r\n            \r\n","F:Android.Media.MediaCodecInfo+CodecCapabilities.CreateFromProfileLevel":"f：android.media.mediacodecinfo+codeccapabilities.createeflomprofilelevel\r\n","Current state of the auto-exposure (AE) algorithm.":"自动暴露（AE）算法的当前状态。\r\n","The type of folder that contains folders categorized by playlist as specified in the section\n            6.":"包含按播放列表分类的文件夹的类型\r\n            6。\r\n","Called when the application has reported a new selection region of\n            the text.":"该应用程序报告了一个新的选择区域时调用\r\n            文本。\r\n","Gets the GNSS measurement's code type.":"获取GNSS测量的代码类型。\r\n","This event type indicates that the licensed usage duration for keys in a session\n            has expired.":"此事件类型表明会话中密钥的许可使用时间持续时间\r\n            已过期。\r\n","android.location.LocationRequest.getMaxUpdateDelayMillis()":"android.location.locationrequest.getmaxupdatedelaymillis（）\r\n","android.net.MailTo.getBody()":"android.net.mailto.getbody（）\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_PARSING_CONTAINER_UNSUPPORTED":"android.media.metrics.playbackerrorevent.error_parsing_container_unsupported\r\n","Returns the current active audio recording configurations of the device.":"返回设备的当前活动音频记录配置。\r\n","Flag indicating a RemoteControlClient makes use of the \"next\" media key.":"指示RemoteControlclient的标志使用“下一个”媒体密钥。\r\n","android.media.AsyncPlayer":"android.media.AsynCplayer\r\n","android.media.AudioRecordingMonitor.registerAudioRecordingCallback(java.util.concurrent.Executor, android.media.AudioRecordingCallback)":"android.media.audiorecordingmonitor.registeraudiorecordingcallback（java.util.concurrent.executor，android.media.media.audiorecordingcallback）\r\n","Interface definition of a callback to be invoked indicating buffering\n status of a media resource being streamed over the network.":"接口的定义要调用，指示缓冲\r\n 通过网络流媒体资源的状态。\r\n","android.media.Rating.RATING_4_STARS":"android.media.rating.rating_4_stars\r\n","#TONE_DTMF_B":"#TONE_DTMF_B\r\n","Gets current reverb preset.":"获取当前的混响预设。\r\n","Acquire the next Image from the ImageReader's queue.":"从Imagereader队列中获取下一张图像。\r\n","Get the key for this algorithm":"获取此算法的关键\r\n","android.mtp.MtpDevice.getThumbnail(int)":"android.mtp.mtpdevice.getthumbnail（int）\r\n","Creates a media browser for the specified media browser service.":"为指定的媒体浏览器服务创建媒体浏览器。\r\n","android.media.MediaFormat.KEY_REPEAT_PREVIOUS_FRAME_AFTER":"android.media.mediaformat.key_repeat_previous_frame_after\r\n","android.media.AudioPresentation":"android.media.audiopersentation\r\n","Get any custom extras that were set on this playback state.":"获取在此播放状态下设置的任何自定义额外功能。\r\n","android.media.effect.EffectFactory.EFFECT_FISHEYE":"android.media.effect.effectfactory.effect_fisheye\r\n","Returns supported IPsec algorithms for the current device.":"当前设备的返回支持的IPSEC算法。\r\n","This class represents a single algorithm that can be used by an ":"该类代表一种可以由\r\n","android.location.provider.ProviderProperties.POWER_USAGE_LOW":"android.location.provider.providerproperties.power_usage_low\r\n","android.media.AudioTrack.removeOnRoutingChangedListener(android.media.OnRoutingChangedListener)":"android.media.audiotrack.removeonRoutingChangedListener（android.media.onroutingchangedlistener）\r\n","CameraCharacteristics#SENSOR_FORWARD_MATRIX1 android.sensor.forwardMatrix1":"cameracharacteristics＃sensor_forward_matrix1 android.sensor.forwardmatrix1\r\n","; or the\n                                  handler is null, the listener is not null, and the calling\n                                  thread has no looper.":";或者\r\n                                  处理程序是无效的，听众不是无效的，呼唤\r\n                                  线程没有循环器。\r\n","android.location.SettingInjectorService.META_DATA_NAME":"android.location.setTingInjectorService.META_DATA_NAME\r\n","android.media.AudioManager.registerRemoteControlClient(android.media.RemoteControlClient)":"android.media.audiomanager.RegisterRemoteControlclient（android.media.remotecontrolclient）\r\n","Get the extras for this session.":"获取本次会议的额外功能。\r\n","android.hardware.camera2.CaptureResult.LENS_FOCUS_RANGE":"android.hardware.camera2.captureresult.lens_focus_range\r\n","Gets the constellation type.":"获取星座类型。\r\n","Gets number of network bytes read.":"获取读取网络字节的数量。\r\n","android.mtp.MtpEvent.EVENT_UNDEFINED":"android.mtp.mtpevent.event_undefined\r\n","A key describing the album mode for MPEG-D DRC as defined in ISO/IEC 23003-4.":"ISO/IEC 23003-4中定义的MPEG-D DRC的专辑模式的键。\r\n"," is supported by the camera device.":" 由相机设备支持。\r\n","android.media.browse.MediaBrowser.getRoot()":"android.media.browse.mediabrowser.getRoot（）\r\n","android.media.Rating.isRated()":"android.media.rating.israted（）\r\n","Set the HDR10+ metadata on the next queued input frame.":"将HDR10+元数据设置在下一个排队输入框架上。\r\n","Creates an AutomaticGainControl and attaches it to the AudioRecord on the audio\n            session specified.":"创建一个自动control并将其附加到音频上的Audiorecord\r\n            指定会话。\r\n","android.media.AudioMetadata":"android.media.audiometadata\r\n","android.hardware.camera2.params.InputConfiguration.getHeight()":"android.hardware.camera2.params.inputconfiguration.getheight（）\r\n","android.media.metrics.PlaybackMetrics.DRM_TYPE_WV_L3_FALLBACK":"android.media.metrics.playbackmetrics.drm_type_wv_l3_fallback\r\n","android.media.CamcorderProfile.videoFrameRate":"android.media.camcorderprofile.videoframorate\r\n","An encapsulation of various parameters for requesting location via ":"各种参数的封装，以通过\r\n","Produces an instance of the ":"产生一个实例\r\n","Called to send MIDI data to the receiver without a timestamp.":"无需时间戳即可将MIDI数据发送给接收器。\r\n","Base class for media route provider services.":"媒体路线提供商服务的基类。\r\n","android.media.ExifInterface.TAG_GPS_TRACK":"android.media.exifinterface.tag_gps_track\r\n","android.location.LocationListener.onProviderEnabled(java.lang.String)":"android.location.LocationListener.OnProviderEnabled（java.lang.string）\r\n","CDMA MED PBX SSL tone:{2600Hz 25ms, 2900Hz 25ms} 8 times\n 200ms OFF, {2600Hz 25ms, 2900Hz 25ms} 8 times, 200ms OFF,\n {2600Hz 25ms, 2900Hz 25ms} 16 times, 1000ms OFF, REPEAT....":"CDMA MED PBX SSL音调：{2600Hz 25ms，2900Hz 25ms} 8次\r\n 200ms关闭，{2600Hz 25ms，2900Hz 25ms} 8次，200ms折叠，\r\n {2600Hz 25ms，2900Hz 25ms} 16次，1000毫秒，重复...\r\n"," instance for volume control.":" 实例进行音量控制。\r\n","android.hardware.TriggerEventListener":"机器人。硬件。TriggerEventListener的\r\n","MediaNotification":"中间化\r\n","Get the surface group ID associated with this ":"获取与此相关联的表面组ID\r\n","android.media.session.MediaSession.setCallback(android.media.session.Callback)":"android.media.session.mediasession.setCallback（android.media.session.callback）\r\n","Returns whether offloaded playback of an audio format is supported on the device.":"返回设备上是否支持音频格式的卸载播放。\r\n","android.media.CamcorderProfile.QUALITY_2K":"android.media.camcorderprofile.quality_2k\r\n","This is the default playback state and indicates that no media has been\n            added yet, or the performer has been reset and has no content to play.":"这是默认的播放状态，表明没有媒体\r\n            添加了，或者表演者已经重置，没有乐趣。\r\n","After a provision response is received by the app, it is provided to the\n            MediaDrm instance using this method.":"在应用程序收到规定响应后，将其提供给\r\n            使用此方法的MediaDRM实例。\r\n","Sticky broadcast intent action indicating that the ringer mode has\n            changed.":"粘性广播意图动作，表明林格模式具有\r\n            更改。\r\n","android.media.AudioTrack.setAuxEffectSendLevel(float)":"android.media.audiotrack.setauxeffectsendlevel（float）\r\n","Sets the callback to be invoked when an event is dispatched to this TvView.":"将事件派遣到此TView时设置要调用的回调。\r\n","#PLAYBACK_VOLUME_FIXED":"#playback_volume_fixed\r\n"," to\n            indicate the start of video recording.":" 至\r\n            指示视频录制的开始。\r\n","The available stream configurations that this\n            camera device supports when given a CaptureRequest with ":"可用的流配置\r\n            摄像机设备在给予捕获时支持\r\n","#VIBRATE_TYPE_NOTIFICATION":"#vibrate_type_notification\r\n","Builder#setTitle(CharSequence)":"建筑商＃settitle（charsequence）\r\n","if it is called before\n setOutputFormat() or after prepare()\n":"如果以前被调用\r\n setOutputformat（）或prepar prepar（）之后\r\n\r\n","Obtains object bytes in the specified range and writes it to an array.":"在指定范围内获取对象字节，并将其写入数组。\r\n","android.hardware.camera2.CameraCharacteristics.LENS_INFO_HYPERFOCAL_DISTANCE":"android.hardware.camera2.cameracharacteristics.lens_info_hyperfocal_distance\r\n","android.media.MediaCodec.PARAMETER_KEY_TUNNEL_PEEK":"android.media.mediacodec.parameter_key_tunnel_peek\r\n","android.location.Location.getProvider()":"android.location.location.getProvider（）\r\n","android.media.metrics.PlaybackErrorEvent.getSubErrorCode()":"android.media.metrics.playbackerrorevent.getsuberrorcode（）\r\n","MediaRouter.RouteCategory categories":"Mediarouter.Routecategory类别\r\n","Interface definition for a callback to be invoked when all the\n sounds are loaded.":"当所有的接口定义要调用回调\r\n 声音已加载。\r\n","android.media.audiofx.AudioEffect.ERROR_DEAD_OBJECT":"android.media.audiofx.audioeffect.error_dead_object\r\n","android.hardware.display.DeviceProductInfo":"android.hardware.display.deviceproductinfo\r\n"," (m x n group of pixels with the same\n            color filter) to a remosaiced regular bayer pattern.":" （M x n组相同的像素\r\n            彩色过滤器）到换剂的常规拜耳图案。\r\n","A change in network connectivity has occurred.":"网络连接发生了变化。\r\n","android.media.AudioRecord.read(float[], int, int, int)":"android.media.audiorecord.read（float []，int，int，int）\r\n"," with any statistics parameters active for\n            the current thread.":" 有任何统计参数为活动性\r\n            当前线程。\r\n","CameraOfflineSessionCallback#onSwitchFailed":"CamparofflineSessionCallback＃OnSwitchFailed\r\n","android.media.browse.MediaBrowser.EXTRA_PAGE_SIZE":"android.media.browse.mediabrowser.extra_page_size\r\n","KeyEvent#KEYCODE_MEDIA_CLOSE":"keyevent＃keycode_media_close\r\n","android.media.MediaDrm.getConnectedHdcpLevel()":"android.media.mediadrm.getConnectedHdcplevel（）\r\n","android.media.MediaFormat.KEY_AAC_DRC_TARGET_REFERENCE_LEVEL":"android.media.mediaformat.key_aac_drc_target_reference_level\r\n","Scramble control value indicating that the even key is used.":"争夺控制值表示使用了均匀的键。\r\n","android.media.MediaMetadata.getBitmap(java.lang.String)":"android.media.mediametadata.getBitmap（java.lang.string）\r\n","The maximum ratio between both active area width\n            and crop region width, and active area height and\n            crop region height, for ":"两个活动区域宽度之间的最大比率\r\n            和农作物区域的宽度以及活动区域的高度以及\r\n            作物区域的高度\r\n","Returns the description string for the storage unit.":"返回存储单元的描述字符串。\r\n","android.media.MicrophoneInfo.POSITION_UNKNOWN":"android.media.microphoneinfo.position_unknown\r\n","android.media.DrmInitData.get(java.util.UUID)":"android.media.drminitdata.get（java.util.uuid）\r\n","android.hardware.location.GeofenceHardware.GEOFENCE_EXITED":"android.hardware.location.geofencehardware.geofence_exited\r\n","android.media.MediaCodecList.MediaCodecList(int)":"android.media.mediacodeclist.mediacodeclist（int）\r\n","android.media.AudioTrack.getPositionNotificationPeriod()":"android.media.audiotrack.getPositionNotificationPeriod（）\r\n","path":"小路\r\n","android.inputmethodservice.InputMethodService.isShowInputRequested()":"android.inputmethodservice.inputmethodservice.isshowinputrequested（）\r\n","Adds textual information to be displayed.":"添加要显示的文本信息。\r\n","android.media.MediaPlayer.setOnDrmPreparedListener(android.media.OnDrmPreparedListener)":"android.media.mediaplayer.setondrmpreparedlistener（android.media.ondia.ondrmpreparedListener）\r\n","#registerListener(SensorEventListener, Sensor, int)":"#RegisterListener（SensoreVentListener，传感器，INT）\r\n","android.media.browse.MediaBrowser.connect()":"android.media.browse.mediabrowser.connect（）\r\n","android.media.MediaFormat.getInteger(java.lang.String, int)":"android.media.mediaformat.getinteger（java.lang.string，int）\r\n","android.inputmethodservice.InputMethodService.onUpdateExtractedText(int, android.view.inputmethod.ExtractedText)":"android.inputmethodservice.inputmethodservice.onupdateExtractedText（int，android.view.inputmethod.extractedText）\r\n","android.media.tv.TvInputManager.ACTION_QUERY_CONTENT_RATING_SYSTEMS":"android.media.tv.tvinputmanager.action_query_content_rating_systems\r\n","Gets the features of routes that media router would like to discover.":"获取媒体路由器希望发现的路线的功能。\r\n","android.media.MediaPlayer.setDataSource(java.lang.String)":"android.media.mediaplayer.setdatasource（java.lang.string）\r\n"," to decode media data scrambled by conditional\n            access (CA) systems such as those in the ISO/IEC13818-1.":" 解码有条件的媒体数据\r\n            访问（CA）系统，例如ISO/IEC13818-1中的系统。\r\n","android.media.metrics.PlaybackMetrics.CONTENT_TYPE_OTHER":"android.media.metrics.playbackmetrics.content_type_other\r\n","Create a new reader for images of the desired size and format.":"为所需尺寸和格式的图像创建新的读取器。\r\n","Sets the callback hook for the OnLoadCompleteListener.":"为OnloadCompletElistener设置回调钩。\r\n","#TYPE_SESSION":"#type_session\r\n","InputMethodManager#RESULT_UNCHANGED_SHOWN InputMethodManager.RESULT_UNCHANGED_SHOWN":"inputmethodmanager＃result_unchanged_shown inputmethodmanager.result_unchanged_shown\r\n","android.media.VolumeProvider.getCurrentVolume()":"android.media.volumeprovider.getCurrentVolume（）\r\n","android.media.MediaMetadata.METADATA_KEY_DISC_NUMBER":"android.media.mediametadata.metadata_key_disc_number\r\n","Returns true if a camcorder profile exists for the first back-facing\n            camera at the given quality level.":"如果存在第一个背面的摄录机配置文件，则返回true\r\n            在给定质量水平的相机。\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_PARSING_MANIFEST_MALFORMED":"android.media.metrics.playbackerrorevent.error_parsing_manifest_malformed\r\n","Retrieve the body line from the parsed mailto URL.":"从解析的邮件中检索车身线。\r\n","Advertisement contents.":"广告内容。\r\n","android.media.MediaPlayer.MEDIA_MIMETYPE_TEXT_SUBRIP":"android.media.mediaplayer.media_mimetype_text_subrip\r\n","android.media.MediaFormat.COLOR_STANDARD_BT2020":"android.media.mediaformat.color_standard_bt2020\r\n","TONE_CDMA_HIGH_L tone: {3700Hz 25ms, 4000Hz 25ms} 40 times\n 4000ms OFF, Repeat ....":"tone_cdma_high_l音调：{3700Hz 25ms，4000Hz 25ms} 40次\r\n 4000毫米，重复...\r\n","Network type is not known.":"网络类型尚不清楚。\r\n","Return the altitude in meters.":"以米为单位返回高度。\r\n","The constant used to indicate that the geofence id already exists.":"用于表明Geofence ID已经存在的常数。\r\n"," if the track is a spoken subtitle for people with visual impairment,\n            ":" 如果该曲目是视觉障碍者的口语字幕，则\r\n            \r\n","android.media.tv.TvContentRating.getSubRatings()":"android.media.tv.tvcontentrating.getSubratings（）\r\n","android.media.MediaParser.PARSER_NAME_MP4":"android.media.mediaparser.parser_name_mp4\r\n","Return a value sanitizer that allows everything except Nul ('\\0')\n            characters.":"返回一个允许除nul（'\\ 0'）以外的所有东西的值消毒剂\r\n            人物。\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_DECODING_FAILED":"android.media.metrics.playbackerrorevent.error_decoding_failed\r\n","android.media.DrmInitData":"android.media.drminitdata\r\n","Return Metrics data about the current MediaDrm instance.":"返回有关当前MediaDRM实例的指标数据。\r\n","android.hardware.camera2.CameraCharacteristics.TONEMAP_AVAILABLE_TONE_MAP_MODES":"android.hardware.camera2.cameracharacteristics.tonemap_available_tone_map_modes\r\n","MultiResolutionStreamInfo":"MultiResolutionsTreamInfo\r\n","android.hardware.camera2.CameraCharacteristics.getPhysicalCameraIds()":"android.hardware.camera2.cameracharacteristics.getphysicalcameraids（）\r\n","InputMethodManager#SHOW_IMPLICIT":"Inputmethodmanager＃show_implitic\r\n","android.media.AudioManager.ACTION_MICROPHONE_MUTE_CHANGED":"android.media.audiomanager.action_microphone_mute_changed\r\n","android.net.TrafficStats.tagFileDescriptor(java.io.FileDescriptor)":"android.net.trafficstats.tagfiledescriptor（java.io.filedescriptor）\r\n","OnExpirationUpdateListener":"OnexpirationUpDateListener\r\n","android.media.MediaMetadataRetriever.OPTION_CLOSEST":"android.media.mediametadataretriever.option_closest\r\n","Type is int.":"类型是int。\r\n","Get the default URL to use when sending the provision request\n message to a server, if known.":"发送供应请求时获取要使用的默认URL\r\n 消息给服务器，如果已知。\r\n","android.media.AudioTrack.getSampleRate()":"android.media.audiotrack.getSamplerate（）\r\n","android.media.ExifInterface.TAG_GPS_LATITUDE_REF":"android.media.exifinterface.tag_gps_latitate_ref\r\n","PARAMETER_*":"范围_*\r\n","android.media.metrics.TrackChangeEvent.getContainerMimeType()":"android.media.metrics.trackchangeevent.getContainermeType（）\r\n","#TONE_DTMF_A":"#TONE_DTMF_A\r\n","android.media.RemoteControlClient.FLAG_KEY_MEDIA_NEXT":"android.media.remotecontrolclient.flag_key_media_next\r\n","The player just pushed the very first video frame for rendering.":"玩家刚刚推动了第一个用于渲染的视频框架。\r\n","The metadata key to retrieve the information about the composer of\n the data source.":"检索有关作曲家的信息的元数据键\r\n 数据源。\r\n","This key retrieves the sample rate in Hz, if available.":"该键将以Hz的形式检索样品率。\r\n","android.media.MediaTimestamp.TIMESTAMP_UNKNOWN":"android.media.MediaTimestamp.Timestamp_unknown\r\n","CameraCharacteristics#SENSOR_FORWARD_MATRIX2 android.sensor.forwardMatrix2":"cameracharacteristics＃sensor_forward_matrix2 android.sensor.forwardmatrix2\r\n","Sets the state of the shift key of the keyboard, if any.":"设置键盘的移位键的状态（如果有）。\r\n",": Video is unavailable because\n            Using a license in whhich the keys have expired.":"：视频不可用，因为\r\n            密钥已过期使用许可证。\r\n","SS (HTTP Smooth Streaming) stream type.":"SS（HTTP平滑流）流类型。\r\n","android.media.MediaDrm.HDCP_LEVEL_UNKNOWN":"android.media.mediadrm.hdcp_level_unknown\r\n","android.view.inputmethod.InputMethod.changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)":"android.view.inputmethod.inputmethod.changeinputmethodsubtype（android.view.inputmethod.inputmethod.inputmethodsubtype）\r\n","Returns whether the session's playback is active.":"返回会议的播放是否处于活动状态。\r\n","KeyEvent#KEYCODE_HEADSETHOOK":"keyEvent＃keycode_headsethook\r\n","#getDriftUncertaintyNanosPerSecond()":"#getDriftUncuncrenttyNanosperSecond（）\r\n","Sets the maximum duration (in ms) of the recording session.":"设置记录会话的最大持续时间（以MS为单位）。\r\n","Returns the type of the track.":"返回曲目的类型。\r\n","android.media.MicrophoneInfo.DIRECTIONALITY_UNKNOWN":"android.media.microphoneinfo.Directionality_unknown\r\n","android.media.audiofx.Equalizer.PARAM_GET_BAND":"android.media.audiofx.equalizer.param_get_band\r\n","Take care of killing an existing session by calling its\n ":"通过调用其杀死现有会议的照顾\r\n \r\n","Playback is handling a seek.":"播放正在处理搜索。\r\n","android.media.ExifInterface.TAG_BITS_PER_SAMPLE":"android.media.exifinterface.tag_bits_per_sample\r\n","android.media.RingtoneManager.RingtoneManager(android.content.Context)":"android.media.ringtonemanager.ringtonemanager（android.content.context）\r\n","android.media.AudioManager.AUDIOFOCUS_REQUEST_DELAYED":"android.media.audiomanager.audiofocus_request_delayed\r\n","android.media.AudioTrack.DUAL_MONO_MODE_RR":"android.media.audiotrack.dual_mono_mode_rr\r\n","android.media.MediaDescription.BT_FOLDER_TYPE_YEARS":"android.media.mediaDescription.bt_folder_type_years\r\n","#isOutputSupportedFor(Class)":"#isoutputsupportedfor（类）\r\n","Value used for when the SPL of the microphone is unknown.":"当麦克风的SPL未知时使用的值。\r\n","Playback state event.":"播放状态事件。\r\n","#AUDIOFOCUS_REQUEST_DELAYED":"#audiofocus_request_delayed\r\n","ControllerCallback":"controllerCallback\r\n","android.net.IpSecAlgorithm.getSupportedAlgorithms()":"android.net.ipsecalgorithm.getSuporportedAlgorithms（）\r\n","android.hardware.camera2.CameraCaptureSession.setSingleRepeatingRequest(android.hardware.camera2.CaptureRequest, java.util.concurrent.Executor, android.hardware.camera2.CaptureCallback)":"android.hardware.camera2.cameracapturesession.setsinglerepeatingrequest（android.hardware.camera2.capturerequest，java.util.concurrent.executor，android.hardware.camera.camera.camera2.capturecallecallackalback））\r\n","android.media.AudioFormat.ENCODING_OPUS":"android.media.audioformat.encoding_opus\r\n","android.location.GnssMeasurement.STATE_TOW_DECODED":"android.location.gnssmeasurement.state_tow_decoded\r\n","android.media.ToneGenerator.getAudioSessionId()":"android.media.tonegenerator.getAudiosessionId（）\r\n","LocationManager#requestFlush(String, LocationListener, int)":"LocationManager＃requestFlush（字符串，LocationListener，int）\r\n","android.mtp.MtpConstants#PROTECTION_STATUS_NONE":"android.mtp.mtpconstants＃protection_status_none\r\n","MediaSession2Service":"MediaSession2Service\r\n","android.media.MediaParser.PARAMETER_MP4_TREAT_VIDEO_FRAMES_AS_KEYFRAMES":"android.media.mediaparser.parameter_mp4_treat_video_frames_as_keyframes\r\n","Query if the given scheme identified by its UUID is supported on\n            this device, and whether the DRM plugin is able to handle the\n            media container format specified by mimeType at the requested\n            security level.":"查询如果支持其UUID确定的给定方案\r\n            该设备以及DRM插件是否能够处理\r\n            MIMETYPE在请求下指定的媒体容器格式\r\n            安全级别。\r\n","Returns whether the service is running in always-on VPN mode.":"返回该服务是否在始终在VPN模式下运行。\r\n","\n            for the device's ":"\r\n            对于设备的\r\n"," from an xml.":" 从XML。\r\n","Allows interaction with media controllers, volume keys, media buttons, and\n            transport controls.":"允许与媒体控制器，音量键，媒体按钮和\r\n            运输控制。\r\n","Returns the endpoint's attributes field.":"返回端点的属性字段。\r\n","android.media.MediaPlayer.setSyncParams(android.media.SyncParams)":"android.media.mediaplayer.setsyncparams（android.media.syncparams）\r\n","android.location.provider.ProviderProperties.ACCURACY_FINE":"android.location.provider.providerproperties.accuracy_fine\r\n","\n            to notify when the state of the hardware geofence monitoring system changes.":"\r\n            通知硬件地理仪监视系统的状态何时更改。\r\n","android.inputmethodservice.KeyboardView.setProximityCorrectionEnabled(boolean)":"android.inputmethodservice.keyboardview.setproximitycorrectionenabled（布尔值）\r\n","android.location.Criteria.isCostAllowed()":"android.location.criteria.iscostlowered（）\r\n","#MODE_STREAM":"#mode_stream\r\n","Toggle the soft input window.":"切换软输入窗口。\r\n","Gets the A/V sync mode. -or- Sets A/V sync mode.":"获取A/V同步模式。 - 或设置A/V同步模式。\r\n","The callback called when the state of a monitoring system changes.":"当监视系统的状态更改时，调用回调。\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_IMAGE_PRIMARY":"android.media.mediametadataretriever.metadata_key_image_primary\r\n","#registerAudioRecordingCallback(AudioRecordingCallback, Handler)":"#RegisterAudiorecordingCallback（AudioreCordingCallback，处理程序）\r\n","#setDataSource(FileDescriptor)":"#SetDataSource（FileSeDescriptor）\r\n","Notify that the input method subtype is being changed in the same input method.":"通知输入方法子类型正在使用相同的输入方法更改。\r\n","android.media.MediaSession2Service.onGetSession(android.media.ControllerInfo)":"android.media.mediasession2service.ongetsession（android.media.controllerinfo）\r\n","Pass in the file object to be written.":"传递要编写的文件对象。\r\n","Returns an object representation of the value for the key":"返回密钥值的对象表示\r\n","Describe a parameter with the name.":"描述一个名称的参数。\r\n","True if this location has a elapsed realtime accuracy.":"如果此位置具有经过的实时准确性，则为诚然。\r\n","Defines a measurement mode which computes the peak and RMS value in mB, where 0mB is the\n            maximum sample value, and -9600mB is the minimum value.":"定义一个测量模式，该模式计算MB中的峰值和RMS值，其中0MB为\r\n            最大样本值，-9600MB是最小值。\r\n","#TONE_SUP_CALL_WAITING":"#TONE_SUP_CALL_WAITING\r\n","Adjusts the volume of the most relevant stream.":"调整最相关流的体积。\r\n","Returns a pre-defined still image capture (jpeg) quality level\n            used for the given quality level in the Camera application for\n            the specified camera.":"返回预定义的静止图像捕获（JPEG）质量水平\r\n            用于相机应用中的给定质量水平的\r\n            指定的相机。\r\n","A key describing the mime type of the MediaFormat.":"描述媒体形式的MIME类型的键。\r\n","android.media.AudioRecord.read(byte[], int, int)":"android.media.audiorecord.read（byte []，int，int）\r\n","android.media.MediaFormat.KEY_COLOR_STANDARD":"android.media.mediaformat.key_color_standard\r\n","android.media.session.PlaybackState.STATE_NONE":"android.media.session.playbackstate.state_none\r\n","RggbChannelVector":"RGGBCHANNELVECTOR\r\n","If the media contains video and this key exists, it retrieves the\n            total number of frames in the video sequence.":"如果媒体包含视频，并且该密钥存在，则可以检索\r\n            视频序列中的帧总数。\r\n","If the media contains still images, this key retrieves the number\n            of still images.":"如果媒体包含静止图像，则此键检索数字\r\n            静止图像。\r\n","android.media.Rating.newPercentageRating(float)":"android.media.rating.newpercentagerating（float）\r\n","android.media.RingtoneManager.isDefault(android.net.Uri)":"android.media.ringtonemanager.isdefault（android.net.uri）\r\n","android.location.LocationManager.requestLocationUpdates(java.lang.String, android.location.LocationRequest, java.util.concurrent.Executor, android.location.LocationListener)":"android.location.LocationManager.RequestLocationUpdates（java.lang.string，android.location.location.locationRequest，java.util.concurrent.executor，android.location.location.location.locationlistlistener）\r\n","android.media.tv.TvInputManager.VIDEO_UNAVAILABLE_REASON_CAS_CARD_INVALID":"android.media.tv.tvinputmanager.video_unavailable_reason_cas_card_invalid\r\n","Exception thrown when an operation on a MediaDrm object is attempted\n            and hardware resources are not available, due to being in use.":"尝试在MediaDRM对象上进行操作时会引发异常\r\n            由于正在使用，因此无法使用硬件资源。\r\n","android.net.VpnService.protect(int)":"android.net.vpnservice.protect（int）\r\n","Called on the listener to notify it that the previously set marker has been reached\n by the recording head.":"要求听众通知它已达到先前的标记\r\n 由录音头。\r\n","This Glonass measurement's tracking state has string sync.":"此Glonass测量的跟踪状态具有字符串同步。\r\n","Returns the model name of the accessory.":"返回附件的型号。\r\n","android.location.GnssMeasurement.getBasebandCn0DbHz()":"android.location.gnssmeasurement.getBasebandcn0dbhz（）\r\n","A class representing a configuration on a ":"代表配置的类\r\n","android.media.CamcorderProfile.QUALITY_4KDCI":"android.media.camcorderprofile.quality_4kdci\r\n"," that will download and run the PAC script\n at the specified URL.":" 将下载并运行PAC脚本\r\n 在指定的URL处。\r\n","android.media.MediaRouter2.registerRouteCallback(java.util.concurrent.Executor, android.media.RouteCallback, android.media.RouteDiscoveryPreference)":"android.media.mediarouter2.RegisterRouteCallback（java.util.concurrent.executor，android.media.routecallback，android.media.routia.routediscoverypreference）\r\n","This is called when the user has performed a cursor movement in the\n            extracted text view, when it is running in fullscreen mode.":"当用户执行光标运动时，这就是称为\r\n            提取文本视图，当时它以全屏模式运行。\r\n","Gets the volume level of the early reflections.":"获取早期反射的音量水平。\r\n","android.net.IpSecAlgorithm.writeToParcel(android.os.Parcel, int)":"android.net.ipsecalgorithm.writetoparcel（android.os.os.parcel，int）\r\n","Returns the depth of the MTP object in bits per pixel\n            Will be zero for non-image objects":"返回每个像素的MTP对象的深度\r\n            非图像对象将为零\r\n","android.inputmethodservice.InputMethodService.getMaxWidth()":"android.inputmethodservice.inputmethodservice.getmaxwidth（）\r\n","android.media.MediaFormat.KEY_AAC_PROFILE":"android.media.mediaformat.key_aac_profile\r\n"," action that must be declared as handled by the service.":" 必须宣布该服务所处理的操作。\r\n","Return the properly localized/configuration dependent name of this RouteCategory.":"返回此RuteCategory的适当本地化/配置依赖性名称。\r\n","Indicates that this network should be able to reach the internet.":"表明该网络应该能够到达Internet。\r\n","android.media.MicrophoneInfo.LOCATION_UNKNOWN":"android.media.microphoneinfo.location_unknown\r\n","android.media.MediaRouter2.unregisterTransferCallback(android.media.TransferCallback)":"android.media.mediarouter2.unregistertransfercallback（android.media.transfercallback）\r\n","The keyboard mode for this row ":"此行的键盘模式\r\n","Checks whether a Bluetooth A2DP audio peripheral is connected or not.":"检查是否连接蓝牙A2DP音频外围。\r\n","android.hardware.camera2.CaptureRequest.CONTROL_ENABLE_ZSL":"android.hardware.camera2.capturerequest.control_enable_zsl\r\n"," identifying the current routing of this AudioTrack.":" 识别此Audiotrack的当前路由。\r\n","#AUDIOFOCUS_REQUEST_FAILED":"#Audiofocus_request_failed\r\n","Standard gravity (g) on Earth.":"地球上的标准重力（g）。\r\n","State indicating this item is currently playing.":"指示此项目当前正在播放的状态。\r\n","android.hardware.camera2.CameraCharacteristics.CONTROL_AWB_LOCK_AVAILABLE":"机器人。硬件。相机2。CameraCharacteristics.控制_AWB_LOCK_AVAILABLE\r\n","android.hardware.camera2.CameraManager.getCameraIdList()":"android.hardware.camera2.cameramanager.getCamerAidlist（）\r\n","if the scheme is not a mailto URL\n":"如果该方案不是邮件URL\r\n\r\n","Defines whether playback associated with this route is \"local\"\n    (":"定义与此路线关联的播放是否为“本地”\r\n    （（\r\n"," and used\n to request a network via ":" 并使用\r\n 通过\r\n","Instantiate the preferred encoder supporting output data of the given mime type.":"实例化给定MIME类型的支持输出数据的首选编码器。\r\n","OisSample":"Oissample\r\n","Immutable class for describing a ":"不变的班级描述\r\n","A fixed black level offset for each of the color filter arrangement\n            (CFA) mosaic channels.":"每个颜色过滤器排列的固定黑级偏移\r\n            （CFA）镶嵌通道。\r\n","Plays a sound effect (Key clicks, lid open/close.":"播放声音效果（钥匙点击，盖子打开/关闭。\r\n","android.media.tv.TvTrackInfo.getExtra()":"android.media.tv.tvtrackinfo.getExtra（）\r\n","Return the currently active InputBinding for the input method, or\n            null if there is none.":"返回输入方法的当前活动输入键入或\r\n            null如果没有。\r\n",", or 0 if it was never modified.":"，或0如果从未修改。\r\n","Defines a measurement mode in which no measurements are performed.":"定义一个未执行测量的测量模式。\r\n","android.location.Address.getExtras()":"android.location.address.getExtras（）\r\n","android.media.MediaRecorder.setPrivacySensitive(boolean)":"android.media.mediarecorder.setprivacysentive（boolean）\r\n","android.media.ThumbnailUtils.createVideoThumbnail(java.io.File, android.util.Size, android.os.CancellationSignal)":"android.media.thumbnailutils.createvideothumbnail（java.io.file，android.util.util.size，android.os.os.cancellationsignal）\r\n","#TONE_CDMA_MED_PBX_SSL":"#TONE_CDMA_MED_PBX_SSL\r\n","Called whenever a logical display has been removed from the system.":"每当从系统中删除逻辑显示时，请致电。\r\n","The range of scene distances that are in\n            sharp focus (depth of field).":"场景距离的范围\r\n            尖锐的焦点（景深）。\r\n","This mode indicates that a stereo stream should be presented\n            with the right audio channel replicated into the left audio channel.":"此模式表明应显示立体声流\r\n            右音频频道将其复制到左音频频道中。\r\n","android.media.MediaDrm":"android.media.mediadrm\r\n","android.view.inputmethod.InputMethod.startInput(android.view.inputmethod.InputConnection, android.view.inputmethod.EditorInfo)":"android.view.inputmethod.inputmethod.startinput（android.view.inputmethod.inputConnection，android.view.inputmethod.editorinfo）\r\n","If the media contains EXIF data, this key retrieves the offset (in bytes)\n            of the data.":"如果介质包含EXIF数据，则此键检索偏移量（字节）\r\n            数据。\r\n","android.media.MediaDrm.requiresSecureDecoder(java.lang.String, int)":"android.media.mediadrm.Requireressecuredecoder（java.lang.string，int）\r\n","android.media.MediaRouter.CALLBACK_FLAG_UNFILTERED_EVENTS":"android.media.mediarouter.callback_flag_unfiltered_events\r\n","android.media.audiofx.EnvironmentalReverb.PARAM_DECAY_TIME":"android.media.audiofx.environmentalreverb.param_decay_time\r\n","android.media.metrics.PlaybackStateEvent.STATE_INTERRUPTED_BY_AD":"android.media.metrics.playbackstateevent.state_interrupted_by_ad\r\n","Registers a callback to be invoked when an input event is not handled by the bound TV input.":"当输入事件未通过绑定的电视输入来处理输入事件时，寄存器将被调用。\r\n","android.media.RemoteControlClient.editMetadata(boolean)":"android.media.remotecontrolclient.editmetadata（布尔）\r\n","Pauses the playback of the audio data.":"暂停音频数据的播放。\r\n","Called when the volume for the route should be increased or decreased.":"当应增加或减少路线的体积时调用。\r\n","android.hardware.SensorManager.unregisterDynamicSensorCallback(android.hardware.DynamicSensorCallback)":"机器人。硬件。SensorManager。unregisterDynamicSensorCallback（android的。硬件。DynamicSensorCallback）\r\n","A sound to indicate that focusing has completed. ":"声音表明聚焦已经完成。\r\n","android.media.MediaMetadataRetriever#METADATA_KEY_ALBUMARTIST":"android.media.mediametadataretriever＃metadata_key_albumartist\r\n","android.hardware.lights.LightState":"android.hardware.lights.lightstate\r\n","android.hardware.camera2.CameraCharacteristics.COLOR_CORRECTION_AVAILABLE_ABERRATION_MODES":"android.hardware.camera2.cameracharacteristics.color_correction_available_aberration_modes\r\n","android.inputmethodservice.InputMethodService.getCurrentInputConnection()":"android.inputmethodservice.inputmethodservice.getCurrentInputConnection（）\r\n","Submit a request for an image to be captured by the camera device.":"提交相机设备捕获的图像的请求。\r\n","android.media.tv.TvContentRating.getDomain()":"android.media.tv.tvcontentrating.getDomain（）\r\n"," from VPN connections.":" 从VPN连接。\r\n","Clear the ":"清除\r\n","Message type unknown":"消息类型未知\r\n","android.location.Location.getElapsedRealtimeUncertaintyNanos()":"android.location.location.getElapsedRealTimeInc.urtentytynanos（）\r\n","Clear key DRM type.":"清除键DRM类型。\r\n","android.media.session.PlaybackState.getBufferedPosition()":"android.media.session.playbackstate.getBufferedPosition（）\r\n","#TYPE_ALARM":"#type_alarm\r\n","Returns the value of a float key, or the default value if the key is missing.":"返回float键的值，如果丢失了键，则返回默认值。\r\n","Returns the color and intensity associated with this LightState.":"返回与此LightState相关的颜色和强度。\r\n","Force switch to the last used input method and subtype.":"强制切换到最后使用的输入方法和亚型。\r\n","Returns the height of the MTP object's thumbnail in pixels\n            Will be zero for objects with no thumbnail":"返回以像素为单位的MTP对象的缩略图的高度\r\n            对于没有缩略图的物体将为零\r\n","Returns whether the route is a system route or not.":"返回路线是否是系统路线。\r\n","Request endlessly repeating capture of images by this capture session.":"请求通过此捕获会话无休止地重复对图像的捕获。\r\n","android.media.metrics.PlaybackMetrics.CONTENT_TYPE_MAIN":"android.media.metrics.playbackmetrics.content_type_main\r\n","android.view.VerifiedInputEvent":"android.view.verifiedinputevent\r\n","\n permission is not present\n":"\r\n 没有许可\r\n\r\n","Gets codec name.":"获取编解码器名称。\r\n","android.hardware.SensorManager.registerListener(android.hardware.SensorListener, int, int)":"android.hardware.sensormanager.RegisterListener（android.hardware.sensorlistener，int，int）\r\n","Searching for an available access point.":"搜索可用的访问点。\r\n","android.media.MediaFormat.MediaFormat()":"android.media.mediaformat.mediaformat（）\r\n","android.hardware.camera2.CameraCaptureSession.setRepeatingBurstRequests(java.util.List, java.util.concurrent.Executor, android.hardware.camera2.CaptureCallback)":"android.hardware.camera2.cameracapturesession.setRepeatingBurstrequests（java.util.list，java.util.util.concurrent.executor.executor，android.hardware.camera2.capturecallback）\r\n","android.media.audiofx.AudioEffect.EFFECT_TYPE_AGC":"android.media.audiofx.audioeffect.effect_type_agc\r\n","android.media.AudioTrack.ENCAPSULATION_METADATA_TYPE_FRAMEWORK_TUNER":"android.media.audiotrack.encapsulation_metadata_type_framework_tuner\r\n","android.hardware.camera2.CaptureRequest.CONTROL_AWB_REGIONS":"android.hardware.camera2.capturerequest.control_awb_rigions\r\n","android.hardware.camera2.CaptureResult.REQUEST_PIPELINE_DEPTH":"android.hardware.camera2.captureresult.request_pipeline_depth\r\n","android.location.LocationManager.getGnssYearOfHardware()":"android.location.locationmanager.getgnssyearofhardware（）\r\n","android.hardware.usb.UsbInterface.getInterfaceClass()":"android.hardware.usb.usbinterface.getInterfaceclass（）\r\n","android.media.MediaFormat.KEY_AAC_DRC_ATTENUATION_FACTOR":"android.media.mediaformat.key_aac_drc_attenuation_factor\r\n","#TONE_SUP_INTERCEPT":"#tone_sup_intercept\r\n"," list for channel mapping, which indicating how this\n            microphone is used by each channels or a capture stream.":" 频道映射的列表，这表明了如何\r\n            每个通道或捕获流都使用麦克风。\r\n","Instantiate a CA system of the specified system id.":"实例化指定系统ID的CA系统。\r\n","A key describing the average bitrate in bits/sec.":"描述平均比特率的键/秒。\r\n","android.media.MediaCodec.getParameterDescriptor(java.lang.String)":"android.media.mediacodec.getParameterDescriptor（java.lang.string）\r\n","Sets the width and height of the video to be captured.":"设置要捕获的视频的宽度和高度。\r\n","android.location.GnssCapabilities.hasMeasurements()":"android.location.gnsscapabilities.hasmeasurements（）\r\n","CaptureRequest#SENSOR_SENSITIVITY android.sensor.sensitivity":"captureRequest＃sensor_sensitivity android.sensor.sensitivity\r\n","android.hardware.lights.LightsRequest.getLightsAndStates()":"android.hardware.lights.lightsrequest.getlightsandstates（）\r\n"," broadcasts, containing the name\n            of the location provider that has changed.":" 广播，包含名称\r\n            已更改的位置提供商。\r\n","android.location.GnssStatus.CONSTELLATION_QZSS":"android.location.gnssstatus.constellation_qzss\r\n","Link has poor connectivity.":"链接连接性差。\r\n","android.location.LocationManager.addNmeaListener(java.util.concurrent.Executor, android.location.OnNmeaMessageListener)":"android.location.LocationManager.AddnMealistener（Java.util.concurrent.executor，android.location.location.onnmeamememessagelistener）\r\n","F:Android.Media.AudioManager.PlaySoundEffect":"f：android.media.audiomanager.playsoundeffect\r\n","android.hardware.display.VirtualDisplay.getSurface()":"android.hardware.display.virtualdisplay.getsurface（）\r\n","android.hardware.camera2.params.RggbChannelVector.getGreenEven()":"android.hardware.camera2.params.rggbchannelvector.getgreeneven（）\r\n","android.media.AudioManager.registerRemoteController(android.media.RemoteController)":"android.media.audiomanager.registerRemoteController（android.media.remotecontroller）\r\n","android.net.IpSecManager.removeTransportModeTransforms(java.io.FileDescriptor)":"android.net.ipsecmanager.removetransportmodetransforms（java.io.filedscriptor）\r\n","android.media.metrics.PlaybackMetrics.STREAM_TYPE_SS":"android.media.metrics.playbackmetrics.stream_type_ss\r\n","High speed ( >= 100fps) quality level corresponding to the VGA (640 x 480)":"高速（> = 100fps）质量水平与VGA相对应（640 x 480）\r\n","luminance of sunlight in lux":"lux中的阳光亮度\r\n","android.media.midi.MidiManager.registerDeviceCallback(android.media.midi.DeviceCallback, android.os.Handler)":"android.media.midi.midimanager.registerdevicecallback（android.media.midi.devicecallback，android.os.handler）\r\n","Called on the implementer to notify it that the playback head should be set at the given\n position.":"要求实施者通知它，应在给定的\r\n 位置。\r\n","MediaFeature defines various media features, e.":"MediaFeature定义了各种媒体功能，e。\r\n","android.media.MediaFeature":"android.media.mediafeature\r\n","android.media.ExifInterface.TAG_DATETIME_DIGITIZED":"android.media.exifinterface.tag_datetime_digitized\r\n","Builder#setChannelIndexMask(int)":"构建器＃setChannelIndexMask（int）\r\n","Optimize capture for audio coming from an off-device microphone.":"优化来自脱离麦克风的音频的捕获。\r\n","Sets the data source (FileDescriptor) to use.":"设置数据源（FileDescriptor）进行使用。\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.getValidOutputFormatsForInput(int)":"android.hardware.camera2.params.RecommendedStreamConfigurationMap.getValidOutputputformatsForinput（int）\r\n","PlaybackParams":"播放帕拉姆\r\n","if the coordinate is not\n in one of the valid formats.\n":"如果坐标不是\r\n 以一种有效格式之一。\r\n\r\n","android.media.midi.MidiSender":"android.media.midi.midisender\r\n","Called on the listener to notify it the audio focus for this listener has been changed.":"呼吁听众通知它，该听众的音频焦点已更改。\r\n","Quality level corresponding to the lowest available resolution.":"质量水平对应于最低的分辨率。\r\n","Register a callback to be invoked when the DRM object is prepared.":"在准备DRM对象时注册要调用的回调。\r\n","Minimum and maximum zoom ratios supported by this camera device.":"本摄像装置所支持的最小和最大变焦比。\r\n","The constant used to indicate success of the particular geofence call":"用于指示特定地理呼叫成功的常数\r\n","android.net.SSLCertificateSocketFactory.createSocket(java.net.Socket, java.lang.String, int, boolean)":"android.net.sslcertificateAcceTocketFactory.Createsocket（Java.net.socket，java.lang.string，int，boolean）\r\n","Register a callback to be invoked when an event occurs":"在事件发生时注册要调用的回调\r\n","Flags the given key as being editable.":"标记给定的键是可编辑的。\r\n","if in the Released state.\n":"如果处于释放状态。\r\n\r\n","android.media.MediaMetadata.METADATA_KEY_AUTHOR":"android.media.mediametadata.metadata_key_author\r\n","#TONE_CDMA_CALL_SIGNAL_ISDN_NORMAL":"#tone_cdma_call_signal_isdn_normal\r\n","Virtual display flag: Allows content to be mirrored on private displays when no content is\n            being shown.":"虚拟显示标志：允许在没有内容的情况下在私有显示上镜像内容\r\n            被显示。\r\n","android.mtp.MtpConstants#PROTECTION_STATUS_NON_TRANSFERABLE_DATA":"android.mtp.mtpconstants＃protection_status_non_transferable_data\r\n","Select the specified route to use for output of the given media types.":"选择用于输出的指定路由给定媒体类型的输出。\r\n","Operation code for ResetDevice":"RESETDEVICE的操作代码\r\n"," broadcasts\n            containing the ":" 广播\r\n            包含\r\n","Returns the Active Format Description (AFD) code of the video.":"返回视频的活动格式描述（AFD）代码。\r\n","android.net.SSLCertificateSocketFactory.getDefault(int, android.net.SSLSessionCache)":"android.net.sslcertificatesocketFactory.getDefault（int，android.net.sslsessioncache）\r\n","#PLAYSTATE_REWINDING":"#playstate_rewinding\r\n","A key describing a unique ID for the content of a media track.":"描述媒体曲目内容的唯一ID的键。\r\n","android.media.AudioManager.abandonAudioFocusRequest(android.media.AudioFocusRequest)":"android.media.audiomanager.abandonaudiofocusrequest（android.media.audiofocusrequest）\r\n","Constructs a Geocoder whose responses will be localized for the\n            given Locale.":"构建一个地理编码器，其响应将是本地化的\r\n            给定的地方。\r\n","CaptureRequest#CONTROL_POST_RAW_SENSITIVITY_BOOST android.control.postRawSensitivityBoost":"CaptureRequest＃CONTROL_POST_RAW_SENSITIVITY_BOOST android的。控制。postRawSensitivityBoost\r\n","android.hardware.camera2.CameraCaptureSession":"android.hardware.camera2.cameracapturesession\r\n","android.media.Ringtone.setHapticGeneratorEnabled(boolean)":"android.media.rringtone.sethapticgeneratorEnabled（boolean）\r\n","android.hardware.fingerprint.FingerprintManager.authenticate(android.hardware.fingerprint.CryptoObject, android.os.CancellationSignal, int, android.hardware.fingerprint.AuthenticationCallback, android.os.Handler)":"android.hardware.fingerprint.fingerprintmanager.authenticate（android.hardware.fingerprint.cryptoobject，android.os.os.cancellationsignal，int，android.hardware.hardware.fingerprint.fingerprint.authentication callenticationcallcallcalcationcallback，android.os.handler）android.os.handler）\r\n","android.hardware.camera2.CameraCharacteristics.CONTROL_MAX_REGIONS_AWB":"机器人。硬件。相机2。CameraCharacteristics.控制_MAX_区域_AWB\r\n","android.hardware.camera2.CaptureResult.TONEMAP_PRESET_CURVE":"android.hardware.camera2.captureresult.tonemap_preset_curve\r\n","Playback information indicating the playback volume is fixed, i.e. ":"播放信息，表明播放量已固定，即\r\n","Returns The \"address\" string of the microphone that corresponds to the\n            address returned by ":"返回麦克风的“地址”字符串与\r\n            返回的地址\r\n","Unspecified media player info.":"未指定的媒体播放器信息。\r\n","#advance":"＃进步\r\n","android.location.GnssNavigationMessage.TYPE_GPS_CNAV2":"android.location.gnssnavigationmessage.type_gps_cnav2\r\n","android.media.ImageWriter.newInstance(android.view.Surface, int)":"android.media.imagewriter.newinstance（android.view.surface，int）\r\n","android.media.RemoteController.clearArtworkConfiguration()":"android.media.remotecontroller.clearartworkConfiguration（）\r\n","Returns the current mute state for a particular stream.":"返回特定流的当前静音状态。\r\n","Queries for information about the media items that are contained within\n            the specified id and subscribes to receive updates when they change.":"查询有关其中包含的媒体项目的信息\r\n            指定的ID和订阅将在更改时接收更新。\r\n","android.media.audiofx.AudioEffect.ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSION":"android.media.audiofx.audioeffect.action_close_audio_effect_control_session\r\n","android.media.AudioManager.playSoundEffect(int)":"android.media.audiomanager.playsoundeffect（int）\r\n","Broadcast Action:  A broadcast for USB accessory detached event.":"广播动作：USB附件独立事件的广播。\r\n","android.media.JetPlayer.closeJetFile()":"android.media.jetplayer.closejetfile（）\r\n","MediaDrm#KEY_TYPE_RELEASE":"MediaDRM＃key_type_release\r\n","android.media.ExifInterface.TAG_ROWS_PER_STRIP":"android.media.exifinterface.tag_rows_per_strip\r\n","Construct a new Location object that is copied from an existing one.":"构建一个从现有的对象复制的新位置对象。\r\n","android.hardware.camera2.CaptureResult.STATISTICS_FACE_DETECT_MODE":"android.hardware.camera2.captureresult.statistics_face_detect_mode\r\n","android.hardware.camera2.TotalCaptureResult.getPhysicalCameraTotalResults()":"android.hardware.camera2.totalcaptureresult.getPhysicalCameratotalResults（）\r\n","Rotates the image.":"旋转图像。\r\n"," elements in row-major order from this matrix into the destination.":" 从该矩阵到目的地的行序列中的元素。\r\n","#TONE_CDMA_LOW_S_X4":"＃tone_cdma_low_s_x4\r\n","Returns a string that unambiguously describes the rating information contained in a\n            ":"返回一个明确描述A中包含的评级信息的字符串\r\n            \r\n","android.inputmethodservice.InputMethodService.onKeyMultiple(int, int, android.view.KeyEvent)":"android.inputmethodservice.inputmethodservice.onkeymultiple（int，int，android.view.keyevent）\r\n","Removes a value of a given key if present.":"如果存在，请删除给定键的值。\r\n","android.net.VpnManager.startProvisionedVpnProfile()":"android.net.vpnmanager.startprovisionedvpnprofile（）\r\n","State indicating the player is currently skipping to the next item.":"状态表示玩家当前正在跳到下一个项目。\r\n","android.media.MediaRouter.removeUserRoute(android.media.UserRouteInfo)":"android.media.mediarouter.removeuserroute（android.media.userrouteinfo）\r\n","If the media contains still images, this key retrieves the height\n            of the primary image.":"如果媒体包含静止图像，则此键检索高度\r\n            主要图像。\r\n",": Background.":"： 背景。\r\n","android.media.MediaRecorder.setVideoEncoder(int)":"android.media.mediarecorder.setVideoEncoder（int）\r\n","android.media.MediaPlayer.setOnTimedTextListener(android.media.OnTimedTextListener)":"android.media.mediaplayer.setOntimedTextListener（android.media.thimedtextlistener）\r\n","#getTrackInfo()":"#getTrackinfo（）\r\n","android.media.AudioTrack.getOffloadDelay()":"android.media.audiotrack.getoffloaddelay（）\r\n","AES-XCBC Authentication/Integrity Algorithm.":"AES-XCBC身份验证/完整性算法。\r\n","Constructor for creating a custom command.":"用于创建自定义命令的构造函数。\r\n","android.hardware.SensorManager.LIGHT_OVERCAST":"android.hardware.sensormanager.light_overcast\r\n","The horizontal gap before this key ":"此键之前的水平差距\r\n","Return the target gain.":"返回目标增益。\r\n","Returns whether or not the VPN profile should be always considered metered.":"返回是否应始终考虑计量VPN配置文件。\r\n","Reverb preset representing a synthesis of the traditional plate reverb":"Reverb预设代表传统板混响的合成\r\n","Used for receiving NMEA sentences from the GPS.":"用于从GPS接收NMEA句子。\r\n"," for MediaRecorder. -or- Sets the ":" 对于中国订单。 - 或设置\r\n","android.location.GnssClock":"android.location.gnssclock\r\n","android.media.ExifInterface.TAG_GPS_DEST_BEARING":"android.media.exifinterface.tag_gps_dest_beration\r\n","android.media.MediaCodec.dequeueInputBuffer(long)":"android.media.mediacodec.dequeueInputbuffer（长）\r\n","CDMA_NETWORK_BUSY_ONE_SHOT tone: 425Hz 500ms ON, 500ms OFF.":"CDMA_NETWORK_BUSY_ONE_SHOT音调：425Hz 500ms ON，500ms折扣。\r\n","android.media.metrics.PlaybackStateEvent":"android.media.metrics.playbackstateevent\r\n","android.media.Rating.getPercentRating()":"android.media.rating.getPercentrating（）\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_LENS_SHADING_APPLIED":"android.hardware.camera2.cameracharacteristics.sensor_info_lens_shading_applied\r\n","Request number of presets. ":"请求预设数量。\r\n","android.hardware.camera2.CameraDevice.close()":"android.hardware.camera2.cameradevice.close（）\r\n","Gets the preset reverb properties.":"获取预设混响属性。\r\n","android.mtp.MtpDeviceInfo.getVersion()":"android.mtp.mtpdeviceinfo.getversion（）\r\n","android.hardware.HardwareBuffer.USAGE_GPU_SAMPLED_IMAGE":"android.hardware.hardwarebuffer.usage_gpu_sampled_image\r\n","A class for describing camera output, which contains a ":"一个用于描述相机输出的类，其中包含一个\r\n","Return A lists of ":"返回列表\r\n","A symmetric key algorithm.":"对称键算法。\r\n","Error code for a parsing error associated to a media manifest":"与媒体清单关联的解析错误的错误代码\r\n"," in the regular list.":" 在常规列表中。\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_HAS_AUDIO":"android.media.mediametadataretriever.metadata_key_has_audio\r\n",", such that all traffic will be sent\n on this Network.":"，使所有流量都将发送\r\n 在这个网络上。\r\n","android.location.Location.setBearing(float)":"android.location.location.setbeartin（float）\r\n","Tunes to a given channel.":"调音到给定的频道。\r\n","android.media.MediaCas.provision(java.lang.String)":"android.media.mediacas.provision（java.lang.string）\r\n","android.hardware.camera2.CaptureResult.LENS_DISTORTION":"android.hardware.camera2.captureresult.lens_distortion\r\n","Retrieves the sync source.":"检索同步源。\r\n","android.hardware.camera2.CaptureResult.CONTROL_ZOOM_RATIO":"android.hardware.camera2.captureresult.control_zoom_ratio\r\n","android.hardware.camera2.params.MultiResolutionStreamConfigurationMap.getInputInfo(int)":"android.hardware.camera2.params.multiresolutionstreamconfigurationmap.getInputinfo（int）\r\n","android.media.CamcorderProfile.QUALITY_TIME_LAPSE_VGA":"android.media.camcorderprofile.quality_time_lapse_vga\r\n","Gets the maximum volume of the route.":"获取路线的最大体积。\r\n","android.hardware.camera2.CaptureResult.CONTROL_ENABLE_ZSL":"android.hardware.camera2.captureresult.control_enable_zsl\r\n","android.hardware.Sensor.STRING_TYPE_HEART_RATE":"android.hardware.sensor.string_type_heart_rate\r\n","Called to disconnect a ":"被要求断开连接\r\n","CaptureRequest#STATISTICS_FACE_DETECT_MODE android.statistics.faceDetectMode":"captureRequest＃statistiss_face_detect_mode android.statistics.facedetectmode\r\n","android.media.MediaDrm.getMetrics()":"android.media.mediadrm.getMetrics（）\r\n","A constant indicating a medium power usage.":"常数表示中等功率使用。\r\n","android.media.session.PlaybackState.getState()":"android.media.session.playbackstate.getState（）\r\n","The lookup key for a string that indicates why an attempt to connect\n to a network failed.":"字符串的查找键，该键指示为什么尝试连接\r\n 网络失败。\r\n","android.hardware.camera2.CaptureResult.JPEG_THUMBNAIL_SIZE":"android.hardware.camera2.captureresult.jpeg_thumbnail_size\r\n"," if the compression type is unsupported.":" 如果压缩类型不受支持。\r\n","#OPTION_CLOSEST":"#option_closest\r\n","if the offset is invalid.":"如果偏移无效。\r\n","Indicates if current platform supports use of SCO for off call use cases.":"指示当前平台是否支持使用SCO用于关闭呼叫用例。\r\n","android.media.Ringtone.isLooping()":"android.media.ringtone.islooping（）\r\n","android.hardware.lights.LightsManager.getLightState(android.hardware.lights.Light)":"android.hardware.lights.lightsmanager.getlightstate（android.hardware.lights.light）\r\n","Event code for STORAGE_INFO_CHANGED event":"存储的事件代码_info_changed事件\r\n","android.media.AudioManager.setEncodedSurroundMode(int)":"android.media.audiomanager.setencodedsurroundmode（int）\r\n","android.hardware.camera2.params.LensShadingMap.getGainFactorCount()":"android.hardware.camera2.params.lensshadingmap.getGainFactorCount（）\r\n","Maximum supported length (in bytes) for PSK identity hint (in modified UTF-8 representation).":"PSK身份提示的最大支持长度（以字节为单位）（在修改的UTF-8表示中）。\r\n","High speed ( >= 100fps) quality level corresponding to the CIF (352 x 288)":"高速（> = 100fps）质量水平与CIF相对应（352 x 288）\r\n","android.media.MediaSession2Service.removeSession(android.media.MediaSession2)":"android.media.mediasession2service.removesession（android.media.mediasession2）\r\n","Sets the data source (AssetFileDescriptor) to use.":"将数据源（AssetFiledScriptor）设置为使用。\r\n","Resumes recording.":"简历记录。\r\n","InputMethodManager#HIDE_IMPLICIT_ONLY":"inputmethodmanager＃hide_implitic_only\r\n","android.hardware.camera2.CameraExtensionSession.close()":"android.hardware.camera2.cameraextensionsessessessesseess.close（）\r\n","Android.App.Service.START_STICKY_COMPATIBILITY":"android.app.service.start_sticky_compatibility\r\n","Reports playback state event.":"报告播放状态事件。\r\n","#TONE_CDMA_NETWORK_USA_RINGBACK":"#tone_cdma_network_usa_ringback\r\n","android.media.tv.TvContract.buildProgramsUriForChannel(long)":"android.media.tv.tvcontract.buildprogramsuriforchannel（长）\r\n","android.hardware.camera2.CameraCharacteristics":"android.hardware.camera2.Cameracharacteristics\r\n","Parser name returned by ":"解析器名称由\r\n","Constant to indiciate that the monitoring system is unsupported\n for hardware geofence monitoring.":"不断指示监视系统不受支持\r\n 用于硬件Geofence监视。\r\n","android.inputmethodservice.Keyboard.Keyboard(android.content.Context, int)":"android.inputmethodservice.keyboard.keyboard（android.content.context，int）\r\n","android.hardware.camera2.params.InputConfiguration.InputConfiguration(java.util.Collection, int)":"android.hardware.camera2.params.inputconfiguration.inputconfiguration（java.util.collection，int）\r\n","Replaces the current input view with a new one.":"用新的输入视图替换当前输入视图。\r\n","android.location.LocationRequest.getMaxUpdates()":"android.location.locationrequest.getmaxupdates（）\r\n","Microphone directionality type: omni.":"麦克风方向性类型：Omni。\r\n","RecommendedStreamConfigurationMap":"推荐的streamconfigurationmap\r\n","GeofenceHardware#GEOFENCE_ENTERED":"geofencehardware＃geofence_entered\r\n","android.media.MediaExtractor.SEEK_TO_CLOSEST_SYNC":"android.media.mediaextractor.seek_to_closest_sync\r\n","A provision request/response exchange occurs between the app and a provisioning\n            server to retrieve a device certificate.":"该应用程序和供应之间发生了准备请求/响应交换\r\n            服务器检索设备证书。\r\n","Registers a SensorListener for given sensors.":"为给定传感器注册一个感觉列表。\r\n","android.media.MediaPlayer.addTimedTextSource(java.lang.String, java.lang.String)":"android.media.mediaplayer.addtimedtextsource（java.lang.string，java.lang.string）\r\n","android.location.Location.setLatitude(double)":"android.location.location.setlatitude（double）\r\n","The constant to indicate that the user has exited the geofence.":"表示用户已退出地理林的常数。\r\n","#BUFFER_FLAG_KEY_FRAME":"#buffer_flag_key_frame\r\n","android.inputmethodservice.InputMethodService.onCreateCandidatesView()":"android.inputmethodservice.inputmethodservice.oncreatecandidatesview（）\r\n","android.hardware.camera2.CaptureResult.CONTROL_AE_EXPOSURE_COMPENSATION":"android.hardware.camera2.captureresult.control_ae_exposure_compensation\r\n","Gravity on the island":"岛上的重力\r\n","Android.Media.Audiofx.Virtualizer.VIRTUALIZATION_MODE_BINAURAL":"android.media.audiofx.virtualizer.virtualization_mode_binaural\r\n","#VIBRATE_SETTING_ONLY_SILENT":"#vibrate_setting_only_silent\r\n","android.media.RingtoneManager.getIncludeDrm()":"android.media.ringtonemanager.getincludedrm（）\r\n","Replaces the current ":"替换电流\r\n"," for the given key or null if no bitmap exists\n            for the given key.":"如果没有位图，则给定的键或空\r\n            对于给定的键。\r\n","android.hardware.usb.UsbManager.getDeviceList()":"android.hardware.usb.usbmanager.getDevicelist（）\r\n","s this interface contains.":"S此接口包含。\r\n","PixelFormat":"PixelFormat\r\n","GnssCapabilities":"GNSScapability\r\n","android.inputmethodservice.Keyboard.Keyboard(android.content.Context, int, int)":"android.inputmethodservice.keyboard.keyboard（android.content.context，int，int）\r\n","android.hardware.usb.UsbDeviceConnection.bulkTransfer(android.hardware.usb.UsbEndpoint, byte[], int, int, int)":"android.hardware.usb.usbdeviceconnection.bulktransfer（android.hardware.usb.usbendpoint，byte []，int，int，int，int）\r\n","android.media.metrics.TrackChangeEvent.TRACK_STATE_ON":"android.media.metrics.trackchangeevent.track_state_on\r\n","Error code for an error in the DRM system":"DRM系统中错误的错误代码\r\n","Returns the port number of this port":"返回此端口的端口号\r\n","android.media.midi.MidiDeviceInfo.getOutputPortCount()":"android.media.midi.midideviceinfo.getOutputportCount（）\r\n","Vibrate setting that suggests to only vibrate when in the vibrate ringer\n mode.":"振动设置，建议仅在振动铃声中振动\r\n 模式。\r\n","android.media.ExifInterface.TAG_IMAGE_DESCRIPTION":"android.media.exifinterface.tag_image_description\r\n","The desired setting for the camera device's auto-exposure\n            algorithm's antibanding compensation.":"相机设备自动暴露的所需设置\r\n            算法的抗体补偿。\r\n","android.inputmethodservice.InputMethodService.onBindInput()":"android.inputmethodservice.inputmethodservice.onbindinput（）\r\n","AudioDeviceInfo#getAddress()":"AudioDeviceInfo＃getAddress（）\r\n","android.media.MediaMetadataRetriever#METADATA_KEY_TITLE":"android.media.mediametadataretriever＃metadata_key_title\r\n"," value defined\n               at initialization\n":" 定义值\r\n               初始化\r\n\r\n","This option is used with ":"此选项与\r\n","android.media.MediaCodecList.getCodecCount()":"android.media.mediacodeclist.getCodeccount（）\r\n","#attachAuxEffect(int)":"#attachauxeffect（int）\r\n"," that provides\n all of the standard behavior for an input method session.":" 提供的\r\n 输入方法会话的所有标准行为。\r\n","android.location.Address.getSubLocality()":"android.location.address.getSublocality（）\r\n","CaptureRequest#CONTROL_AE_MODE android.control.aeMode":"capturerequest＃control_ae_mode android.control.aemode\r\n","android.media.MediaRoute2ProviderService.SERVICE_INTERFACE":"android.media.mediaroute2providerservice.service_interface\r\n","A per-device calibration transform matrix that maps from the\n            reference sensor colorspace to the actual device sensor colorspace\n            (this is the colorspace of the raw buffer data).":"每个设备校准变换矩阵，该矩阵从\r\n            参考传感器Colorspace到实际设备传感器Colorspace\r\n            （这是原始缓冲区数据的Colorspace）。\r\n","Default horizontal gap between keys in this row.":"此行中的键之间的默认水平差距。\r\n","USB class for physical devices.":"实体设备的USB类。\r\n","android.mtp.MtpStorageInfo.getDescription()":"android.mtp.mtpstorageinfo.getDescription（）\r\n","android.location.GnssMeasurement.ADR_STATE_CYCLE_SLIP":"android.location.gnssmeasurement.adr_state_cycle_slip\r\n","android.media.ExifInterface.TAG_GPS_DEST_BEARING_REF":"android.media.exifinterface.tag_gps_dest_bearing_ref\r\n","Get the format of this input configuration.":"获取此输入配置的格式。\r\n","Sets the path.":"设置路径。\r\n","Tunes to a given channel for TV program recording.":"调音到给定的频道进行电视节目录制。\r\n","android.media.AudioManager.EXTRA_ENCODINGS":"android.media.audiomanager.extra_encodings\r\n"," object from the string that was previously created from\n            ":" 来自以前从以前创建的字符串的对象\r\n            \r\n","Other stream type.":"其他流类型。\r\n","android.mtp.MtpObjectInfo.getObjectHandle()":"android.mtp.mtpobjectInfo.getObjectHandle（）\r\n","android.mtp.MtpEvent.getTransactionId()":"android.mtp.mtpevent.getTransactionId（）\r\n","Indicates the particular implementation of the effect in that type.":"指示该类型效果的特定实现。\r\n","Given to the ringtone picker as a boolean.":"送给铃声挑选器作为布尔人。\r\n","The artwork for the media as a ":"媒体的艺术品\r\n"," value (allowed to be null or\n            empty).":" 值（允许为null或\r\n            空的）。\r\n","Playback is buffering while paused.":"暂停时播放正在缓冲。\r\n","Register a callback to be invoked when the media source is ready\n            for playback.":"注册媒体源准备就绪时要调用的回调\r\n            用于播放。\r\n","#TONE_CDMA_PIP":"#TONE_CDMA_PIP\r\n","Reports error event.":"报告错误事件。\r\n","android.media.AudioRecord.setPositionNotificationPeriod(int)":"android.media.audiorecord.setPositionNotificationPeriod（int）\r\n","Key used for an extra holding a array of ":"钥匙用于额外持有的阵列\r\n","Returns the interface's subclass field.":"返回接口的子类字段。\r\n","A rating style with a single degree of rating, \"heart\" vs \"no heart\".":"具有单一评分的评分风格，“心”与“无心”。\r\n","android.media.ExifInterface.TAG_GPS_MEASURE_MODE":"android.media.exifinterface.tag_gps_measure_mode\r\n","Return the default proxy host specified by the carrier.":"返回运营商指定的默认代理主机。\r\n","android.media.audiofx.Visualizer.ERROR_INVALID_OPERATION":"android.media.audiofx.Visualizer.Error_invalid_operation\r\n","android.media.session.MediaSession.setQueue(java.util.List)":"android.media.session.mediasession.setqueue（java.util.list）\r\n","IpPrefix":"ipprefix\r\n","android.location.LocationManager.ACTION_GNSS_CAPABILITIES_CHANGED":"android.location.locationmanager.action_gnss_capabilities_changed\r\n","This class encapsulates information about a storage unit on an MTP device.":"此类将有关MTP设备上存储单元的信息封装。\r\n","Returns the object handle for the MTP object":"返回MTP对象的对象句柄\r\n","android.hardware.camera2.CaptureRequest.CONTROL_AE_LOCK":"android.hardware.camera2.capturerequest.control_ae_lock\r\n","android.media.CamcorderProfile":"android.media.camcorderprofile\r\n","android.media.Session2Command.Session2Command(java.lang.String, android.os.Bundle)":"android.media.session2Command.Session2Command（java.lang.string，android.os.bundle）\r\n","CDMA Reorder tone: 480Hz+620Hz 250ms ON, 250ms OFF...":"CDMA重新订购音：480Hz+620Hz 250ms on，250ms关闭...\r\n","android.mtp.MtpConstants.OPERATION_RESET_DEVICE_PROP_VALUE":"android.mtp.mtpconstants.operation_reset_device_prop_value\r\n","Retrieves the interface used for this route if specified, else ":"检索该路由的接口（如果指定），否则\r\n","android.hardware.camera2.CameraMetadata.SCALER_ROTATE_AND_CROP_AUTO":"android.hardware.camera2.camerametadata.scaler_rotate_and_crop_auto\r\n","Whether black-level compensation is locked\n            to its current values, or is free to vary.":"黑色级补偿是否锁定\r\n            达到其当前值，或者可以自由变化。\r\n","Error code for other DRM errors":"其他DRM错误的错误代码\r\n","The request has failed since the requested route is no longer available.":"由于请求的路线不再可用，因此该请求失败了。\r\n","android.media.MediaPlayer.release()":"android.media.mediaplayer.release（）\r\n","A Face contains all the information identifying the location\n of a face in a bitmap.":"脸包含所有识别位置的信息\r\n 脸部图。\r\n","MediaController#getSessionInfo()":"MediaController＃getSessionInfo（）\r\n","#TONE_PROP_NACK":"#TONE_PROP_NACK\r\n","android.hardware.SensorManager.flush(android.hardware.SensorEventListener)":"android.hardware.sensormanager.flush（android.hardware.sensoreventlistener）\r\n","android.media.tv.TvRecordingClient.stopRecording()":"android.media.tv.tvrecordingclient.stoprocording（）\r\n","android.media.AudioTimestamp.nanoTime":"android.media.audiotimestamp.nanotime\r\n","android.hardware.camera2.CameraMetadata.STATISTICS_OIS_DATA_MODE_OFF":"android.hardware.camera2.camerametadata.statistics_ois_data_mode_off\r\n","Parser for the FLAC container format, as defined in the <a\n            href=\"https://xiph.":"FLAC容器格式的解析器，如<a\r\n            href =“ https：// xiph。\r\n","android.media.CamcorderProfile.hasProfile(int, int)":"android.media.camcorderprofile.hasprofile（int，int）\r\n","android.media.ExifInterface.TAG_SUBJECT_DISTANCE":"android.media.exifinterface.tag_subject_distance\r\n",",\n            and callbacks delivered via the provided ":"，，，，\r\n            和通过提供的回调\r\n","android.media.MediaCodec.getQueueRequest(int)":"android.media.mediacodec.getqueuerequest（int）\r\n","android.media.tv.TvInputInfo.isHidden(android.content.Context)":"android.media.tv.tvinputinfo.ishdide（android.content.context）\r\n","android.media.AudioPlaybackCaptureConfiguration.getMatchingUids()":"android.media.audioplaybackcaptureconfiguration.getMatchinguids（）\r\n","android.media.AudioManager.addOnModeChangedListener(java.util.concurrent.Executor, android.media.OnModeChangedListener)":"android.media.audiomanager.addonmodechangedlistener（java.util.concurrent.executor，android.media.onmodechangedlistener）\r\n"," on which\n            media can be played.":" 在哪个\r\n            可以播放媒体。\r\n","Constant to indicate that the monitoring system is currently\n            unavailable for monitoring geofences.":"不断表明监视系统目前是\r\n            无法监视地理福特。\r\n","Returns the model year of the GNSS hardware and software build, or 0 if the model year\n            is before 2016.":"返回GNSS硬件和软件构建的模型年度，或者如果模型年度为0\r\n            在2016年之前。\r\n"," that\n            are supported by this camera device.":" 那\r\n            该相机设备支持。\r\n","Attaches an auxiliary effect to the audio track.":"在音轨上附加辅助效果。\r\n","android.hardware.camera2.params.OutputConfiguration.OutputConfiguration(int, android.view.Surface)":"android.hardware.camera2.params.outputconfiguration.outputconfiguration（int，android.view.surface）\r\n","Object's contents can not be transfered from the device, but the object\n may be moved or deleted and its properties may be modified.":"对象的内容无法从设备传输，而是对象\r\n 可以移动或删除，并可以修改其属性。\r\n","android.hardware.usb.UsbEndpoint.getInterval()":"android.hardware.usb.usbendpoint.getInterval（）\r\n","Flag indicating a RemoteControlClient supports ratings.":"指示RemoteControlclient的标志支持评分。\r\n","android.mtp.MtpConstants":"android.mtp.mtpconstants\r\n","android.media.midi.MidiManager.getDevices()":"android.media.midi.midimanager.getDevices（）\r\n","android.media.MediaMetadata.METADATA_KEY_DISPLAY_SUBTITLE":"android.media.mediametadata.metadata_key_display_subtitle\r\n","#TONE_SUP_RADIO_ACK":"#tone_sup_radio_ack\r\n","Whether retrieving another ":"是否取回另一个\r\n","Binds the current process to ":"将当前过程绑定到\r\n","F:Android.Hardware.Camera2.DngCreator.SetOrientation":"F：android.hardware.camera2.dngcreator.setorientation\r\n","Free up this frame for reuse.":"释放此框架以重复使用。\r\n","android.location.GpsSatellite.getSnr()":"android.location.gpssatellite.getsnr（）\r\n",":\n                    offload playback supported with gapless transitions":"：\r\n                    卸载播放支持无间隙过渡\r\n","A device type describing the speaker system (i.":"描述扬声器系统的设备类型（i。\r\n","android.media.AudioManager.AUDIOFOCUS_NONE":"android.media.audiomanager.audiofocus_none\r\n","The SoundPool class manages and plays audio resources for applications.":"Soundpool类管理和播放应用程序的音频资源。\r\n","android.media.Rating.RATING_5_STARS":"android.media.rating.rating_5_stars\r\n","android.view.inputmethod.InputMethodSession.toggleSoftInput(int, int)":"android.view.inputmethod.inputmethodsession.togglesoftinput（int，int）\r\n","Initiates a connection to the media scanner service.":"启动与媒体扫描仪服务的连接。\r\n","Lower bound tonemap value corresponding to pure black for a single color channel.":"单个颜色通道对应于纯黑色的下限Tonemap值。\r\n","CameraOfflineSessionCallback#onReady":"摄影机访问＃准备\r\n","Get the map between physical camera ids and their capture result metadata":"获取物理摄像头ID及其捕获结果元数据之间的地图\r\n","android.hardware.usb.UsbConfiguration.getInterfaceCount()":"android.hardware.usb.usbconfiguration.getInterfacecount（）\r\n","android.mtp.MtpStorageInfo.getMaxCapacity()":"android.mtp.mtpstorageinfo.getmaxcapacity（）\r\n","Don't do any directionality processing of the activated microphone(s).":"不要对激活的麦克风进行任何方向性处理。\r\n"," or a\n            ":" 或a\r\n            \r\n","Stream socket type":"流套筒类型\r\n","android.media.effect.EffectFactory.EFFECT_STRAIGHTEN":"android.media.effect.effectfactory.effect_straighten\r\n","android.media.metrics.NetworkEvent.NETWORK_TYPE_3G":"android.media.metrics.networkevent.network_type_3g\r\n","Error code for trying to decode content whose format exceeds the capabilities of the device.":"试图解码其格式超过设备功能的内容的错误代码。\r\n","CaptureRequest#LENS_OPTICAL_STABILIZATION_MODE android.lens.opticalStabilizationMode":"captureRequest＃lens_optical_stabilization_mode android.lens.opticalstabilizationmode\r\n","The hardware is unavailable.":"硬件不可用.\r\n","android.location.LocationManager.EXTRA_PROVIDER_NAME":"android.location.locationmanager.extra_provider_name\r\n","Default width of a key in this row.":"此行中的键宽度宽度。\r\n","Called to connect a ":"叫连接一个\r\n","Encodes and sets the given opaque scheme-specific-part.":"编码并设置给定的不透明方案特定部分。\r\n","#getParserName()":"#getParsername（）\r\n","android.media.MediaRoute2ProviderService.onSelectRoute(long, java.lang.String, java.lang.String)":"android.media.mediaroute2providerservice.onelectroute（long，java.lang.string，java.lang.string）\r\n","The track is off.":"赛道已经关闭。\r\n","#dequeueInputImage()":"#dequeueInputiMage（）\r\n","Returns the audio session ID.":"返回音频会话ID。\r\n","Creates a synchronization event of the sepcified type.":"创建SEPCIFIED类型的同步事件。\r\n",") inside GPS receiver and\n            the true GPS time since 0000Z, January 6, 1980, in nanoseconds.":"）内部的GPS接收器和\r\n            自1980年1月6日，自1980年1月6日以来的真正GPS时间。\r\n","Returns true if the use of this provider may result in a\n            monetary charge to the user, false if use is free.":"如果使用此提供商可能会导致\r\n            向用户收取货币费用，如果使用免费，则false。\r\n","android.media.tv.TvContract.buildChannelUri(long)":"android.media.tv.tvcontract.buildchanneluri（long）\r\n","android.location.Location.isMock()":"android.location.location.ismock（）\r\n","Get the green (odd rows) component.":"获取绿色（奇行）组件。\r\n","android.media.MediaCas.SCRAMBLING_MODE_DVB_CSA3_MINIMAL":"android.media.mediacas.scrambling_mode_dvb_csa3_minimal\r\n","AudioFormat#CHANNEL_OUT_MONO":"AudioFormat＃channel_out_mono\r\n","A key describing the capture rate of a video format in frames/sec.":"描述视频格式的捕获率/秒的键。\r\n","android.media.AudioTrack.setStereoVolume(float, float)":"android.media.audiotrack.setstereovolume（浮动，浮动）\r\n","android.hardware.Camera.Parameters#getPreviewFpsRange(int[])":"android.hardware.camera.parameters＃getpreviewfpsrange（int []）\r\n","Returns if the ":"如果是\r\n","android.media.AudioManager.isBluetoothScoAvailableOffCall()":"android.media.audiomanager.isbluetoothscoavailablecall（）\r\n","android.net.Ikev2VpnProfile":"android.net.ikev2vpnprofile\r\n","#getInputFormats":"#getInputformats\r\n","android.media.ToneGenerator.release()":"android.media.toneNerator.Release（）\r\n","F:Android.Media.MediaRecorder.SetVideoEncoder":"F：android.media.mediarecorder.setVideoEncoder\r\n","Return Metrics data about the current Mediarecorder instance.":"返回有关当前Mediarecorder实例的指标数据。\r\n","android.location.provider.ProviderProperties.hasBearingSupport()":"android.location.provider.providerproperties.hasbearingsupport（）\r\n","Gets the surface that backs the virtual display. -or- Sets the surface that backs the virtual display.":"获取返回虚拟显示的表面。 - 或 - 设置返回虚拟显示的表面。\r\n","android.hardware.usb.UsbManager.EXTRA_PERMISSION_GRANTED":"android.hardware.usb.usbmanager.extra_permission_granted\r\n","android.hardware.SensorEventListener SensorEventListener2":"android.hardware.sensoreventlistener sensoreventListener2\r\n","Set the target gain for the audio effect.":"设置音频效果的目标增益。\r\n","android.media.MediaDescription.getMediaUri()":"android.media.mediadescription.getMediauri（）\r\n","rating":"评分\r\n","Encapsulates initialization data required by a ":"封装了一个初始化数据\r\n","android.media.MediaPlayer.setOnDrmInfoListener(android.media.OnDrmInfoListener)":"android.media.mediaplayer.setondrminfolistener（android.media.ondrminfolistener）\r\n","android.hardware.camera2.CaptureResult.LENS_POSE_TRANSLATION":"android.hardware.camera2.captureresult.lens_pose_translation\r\n","\n            containing a boolean value indicating whether the user granted permission or not.":"\r\n            包含布尔值，指示用户是否授予许可。\r\n","Returns The system unique device ID that corresponds to the id\n            returned by ":"返回与ID相对应的系统唯一设备ID\r\n            返回\r\n","NetworkCapabilities":"网络范围\r\n","This Galileo measurement's tracking state has E1B page sync.":"该伽利略测量的跟踪状态具有E1B页面同步。\r\n","android.media.RingtoneManager.getCursor()":"android.media.ringtonemanager.getCursor（）\r\n","#requestPermission(UsbAccessory, PendingIntent)":"#requestpermission（usbaccessory，pendingIntent）\r\n","android.media.AudioTrack.getMetrics()":"android.media.audiotrack.getMetrics（）\r\n","#TONE_DTMF_9":"＃tone_dtmf_9\r\n"," object for an input slot index.":" 输入插槽索引的对象。\r\n","Operation code for SelfTest":"自我测试的操作代码\r\n","android.net.IpSecManager.applyTransportModeTransform(java.net.Socket, int, android.net.IpSecTransform)":"android.net.ipsecmanager.applytransportmodetransform（java.net.socket，int，android.net.ipsectransform）\r\n","Gets the negative button text for the prompt, as set by\n            ":"按照提示获取负按钮文本\r\n            \r\n","Error code for other errors":"其他错误的错误代码\r\n","android.media.MediaMetadata.containsKey(java.lang.String)":"android.media.mediametadata.containskey（java.lang.string）\r\n","android.hardware.camera2.CameraCharacteristics.SCALER_AVAILABLE_MAX_DIGITAL_ZOOM":"android.hardware.camera2.cameracharacteristics.scaler_available_max_digital_zoom\r\n","android.inputmethodservice.ExtractEditText.finishInternalChanges()":"android.inputmethodservice.extractEdittext.finishInterneTernalChanges（）\r\n","android.media.MediaCodec.getMetrics()":"android.media.mediacodec.getMetrics（）\r\n","android.media.ApplicationMediaCapabilities.getSupportedVideoMimeTypes()":"android.media.applicationMediacapabilities.getSupportedVideMimetypes（）\r\n",") to the\n            current input connection is a key down + key up event pair.":"）\r\n            当前输入连接是一个键down +键UP事件对。\r\n"," contains haptic channels.":" 包含触觉通道。\r\n","Vibrate type that corresponds to notifications.":"振动类型与通知相对应。\r\n","#getAllProviders()":"#getAllProviders（）\r\n","android.hardware.usb.UsbAccessory.getDescription()":"android.hardware.usb.usbaccessory.getDescription（）\r\n","Activity Action: Shows a ringtone picker.":"活动动作：显示一个铃声选择器。\r\n","android.media.AudioRecord.getNotificationMarkerPosition()":"android.media.audiorecord.getNotificationmarkerPosition（）\r\n","android.media.MediaFormat.MIMETYPE_TEXT_CEA_608":"android.media.mediaformat.mimetype_text_cea_608\r\n","Gets the PSK to use for the provided engine.":"让PSK用于提供的发动机。\r\n","android.location.GnssNavigationMessage.TYPE_BDS_D2":"android.location.gnssnavigationmessage.type_bds_d2\r\n","Returns the number of ":"返回数量\r\n","The key for a bundle parameter containing a watch next program ID as a long integer.":"包含Watch Next程序ID的捆绑参数的键。\r\n"," to determine if the default speaker audio path\n            supports near-ultrasound frequencies (range of 18 - 21 kHz).":" 确定默认扬声器音频路径是否\r\n            支持接近拆卸的频率（范围为18-21 kHz）。\r\n","ISDN Call Signal Intergroup tone: {2091Hz 32ms ON, 2556 64ms ON} 8 times,\n 2091Hz 32ms ON, 400ms OFF, {2091Hz 32ms ON, 2556Hz 64ms ON} times,\n 2091Hz 32ms ON, 4s OFF.":"ISDN呼叫信号组间音：{2091Hz 32ms on，2556 64ms，} 8次，\r\n 2091Hz 32ms启动，400ms关闭，{2091Hz 32ms on，2556Hz 64ms on} times，\r\n 2091Hz 32ms开，4秒。\r\n","Implement this to handle generic motion events on your input method.":"在输入方法上实施此操作以处理通用运动事件。\r\n","Surround sound formats are available according to the choice of user, even if they are not\n            detected by the hardware.":"环绕声格式可以根据用户的选择获得，即使不是\r\n            由硬件检测到。\r\n","Set the user-visible name of this route.":"设置此路线的用户可见名称。\r\n","A key describing the temporal layering schema.":"描述时间分层模式的键。\r\n","android.media.MediaFormat.COLOR_STANDARD_BT709":"android.media.mediaformat.color_standard_bt709\r\n","TotalCaptureResult":"TotalCapturerSult\r\n","Progressive stream type.":"渐进式流类型。\r\n","format":"格式\r\n","android.media.session.MediaController.adjustVolume(int, int)":"android.media.session.MediaconTroller.AdjustVolume（int，int）\r\n","android.media.session.PlaybackState.STATE_SKIPPING_TO_NEXT":"android.media.session.playbackstate.state_skipping_to_next\r\n","Adjusts the volume of a particular stream by one step in a direction.":"将特定流的体积沿方向调节一个步骤。\r\n","android.mtp.MtpConstants.OPERATION_GET_OBJECT_PROP_DESC":"android.mtp.mtpconstants.operation_get_object_prop_desc\r\n","The surround sound formats are ALWAYS available, even if they are not detected by the\n            hardware.":"周围的声音格式始终可用，即使没有被检测到\r\n            硬件。\r\n","#TONE_CDMA_NETWORK_CALLWAITING":"#TONE_CDMA_NETWORK_CALLWAITING\r\n","android.media.ExifInterface.TAG_APERTURE":"android.media.exifinterface.tag_aperture\r\n","Remove the speed from this location.":"从此位置删除速度。\r\n","android.media.tv.TvView.setOnUnhandledInputEventListener(android.media.tv.OnUnhandledInputEventListener)":"android.media.tv.TVView.SetonunHandLeDinputeVentListener（android.media.tv.onunhandledinputeventlistener）\r\n","Get the component by the color channel index.":"通过颜色通道索引获取组件。\r\n","Obtain a CryptoSession object which can be used to encrypt, decrypt,\n            sign and verify messages or data using the session keys established\n            for the session using methods ":"获取可用于加密，解密，\r\n            使用建立的会话键签名并验证消息或数据\r\n            对于使用方法的会话\r\n","android.media.AudioManager.ERROR":"android.media.audiomanager.error\r\n","Returns the value associated with the given key, or 0L if no long exists\n            for the given key.":"返回与给定键关联的值，如果不存在长时间，则返回0L\r\n            对于给定的键。\r\n","android.media.MediaCodec.getOutputBuffer(int)":"android.media.mediacodec.getOutputbuffer（int）\r\n","android.media.MediaMetadataRetriever.getPrimaryImage()":"android.media.mediametadataretriever.getPrimaryimage（）\r\n","android.hardware.SensorManager.registerListener(android.hardware.SensorEventListener, android.hardware.Sensor, int)":"android.hardware.sensormanager.RegisterListener（android.hardware.sensoreventlistener，android.hardware.sensor，int）\r\n","VolumeAutomation":"体积成像\r\n","android.media.ExifInterface.TAG_Y_RESOLUTION":"android.media.exifinterface.tag_y_resolution\r\n","android.media.MediaCodec.BUFFER_FLAG_CODEC_CONFIG":"android.media.mediacodec.buffer_flag_codec_config\r\n","The metadata key to retrieve the music album compilation status.":"检索音乐专辑汇编状态的元数据键。\r\n","android.media.AudioManager.EXTRA_VIBRATE_SETTING":"android.media.audiomanager.extra_vibrate_setting\r\n","Encapsulates the capabilities of a given codec component,\n i.e. what profile/level combinations it supports and what colorspaces\n it is capable of providing the decoded data in.":"封装给定编解码器组件的功能，\r\n 即它支持哪些配置文件/级别组合以及哪些颜色空间\r\n 它能够提供解码的数据。\r\n","Reads audio data from the audio hardware for recording into a short array.":"从音频硬件中读取音频数据，以记录到一个简短的数组中。\r\n","android.media.MediaRoute2Info.getId()":"android.media.mediaroute2info.getID（）\r\n","height of the picture ":"图片的高度\r\n","android.mtp.MtpObjectInfo.getDateModified()":"android.mtp.mtpobjectInfo.getDateModified（）\r\n","android.location.Criteria.isSpeedRequired()":"android.location.Criteria.issPeedRequired（）\r\n","if this Address has not been assigned\n a longitude.\n":"如果该地址尚未分配\r\n 经度。\r\n\r\n","android.hardware.usb.UsbAccessory.getUri()":"android.hardware.usb.usbaccessory.geturi（）\r\n","android.hardware.camera2.params.SessionConfiguration.SESSION_REGULAR":"android.hardware.camera2.params.sessionconfiguration.session_regular\r\n","if the address lookup fails.\n":"如果地址查找失败。\r\n\r\n","This key request type species that the keys will be for online use, they will\n            not be saved to the device for subsequent use when the device is not connected\n            to a network.":"钥匙将用于在线使用的此密钥请求类型的物种，它们将\r\n            当设备未连接时，不保存到设备以供后续使用\r\n            到网络。\r\n","android.media.tv.TvContract.buildChannelLogoUri(long)":"android.media.tv.tvcontract.buildchannellogouri（长）\r\n"," on this ":" 关于这个\r\n","Returns the configured audio data encoding.":"返回配置的音频数据编码。\r\n","android.media.midi.MidiSender.onDisconnect(android.media.midi.MidiReceiver)":"android.media.midi.midisender.ondisconnect（android.media.midi.midireceiver）\r\n","Operation code for GetNumObjects":"getNumObjects的操作代码\r\n","Handles the notification when the JET engine generates an event.":"当喷气发动机生成事件时，处理通知。\r\n","Get the volume control type that this volume provider uses.":"获取此卷提供商使用的音量控制类型。\r\n","The artwork for the album of the media's original source as a\n            ":"媒体原始资源专辑的艺术品作为一个\r\n            \r\n","android.hardware.camera2.CaptureResult.CONTROL_AWB_MODE":"android.hardware.camera2.captureresult.control_awb_mode\r\n","android.media.metrics.NetworkEvent.NETWORK_TYPE_5G_SA":"android.media.metrics.networkevent.network_type_5g_sa\r\n","Sampling parameter.":"采样参数。\r\n","Returns true if this location is marked as a mock location. -or- Sets whether this location is marked as a mock location.":"如果将此位置标记为模拟位置，则返回true。 - 或设置此位置是否标记为模拟位置。\r\n","The AudioRecord class manages the audio resources for Java applications\n            to record audio from the audio input hardware of the platform.":"Audiorecord类管理Java应用程序的音频资源\r\n            从平台的音频输入硬件中记录音频。\r\n","Operation code for OpenSession":"操作代码\r\n","if no suitable permission is present\n":"如果没有合适的许可\r\n\r\n","Register a callback to be notified of audio capture changes via a\n            ":"注册回调，以通知通过A的音频捕获更改\r\n            \r\n","Get the mandatory stream combination description.":"获取强制性的流组合描述。\r\n","Sends a session command to a specific controller":"将会话命令发送到特定的控制器\r\n","Release an effect.":"释放效果。\r\n","android.media.ExifInterface.TAG_DEFAULT_CROP_SIZE":"android.media.exifinterface.tag_default_crop_size\r\n","Resets this TvView.":"重置此TVView。\r\n","Set loop mode.":"设置循环模式。\r\n","android.net.TelephonyNetworkSpecifier.getSubscriptionId()":"android.net.telephonynetworkspecifier.getSubscriptionId（）\r\n","android.media.MediaActionSound.SHUTTER_CLICK":"android.media.mediaactionsound.shutter_click\r\n","MediaCommunicationManager":"MediaCommunicationManager\r\n","#getCarrierPhase()":"#getCarrierphase（）\r\n","CameraDevice":"CameradeVice\r\n","Resume a playback stream.":"恢复播放流。\r\n","android.hardware.biometrics.BiometricPrompt.getSubtitle()":"android.hardware.biometrics.biometricprompt.getSubtitle（）\r\n","android.media.MediaRecorder.setLocation(float, float)":"android.media.mediarecorder.setlocation（float，float）\r\n","android.media.MediaParser.SAMPLE_FLAG_DECODE_ONLY":"android.media.mediaparser.sample_flag_decode_only\r\n","android.hardware.camera2.CaptureResult.SCALER_ROTATE_AND_CROP":"android.hardware.camera2.captureresult.scaler_rotate_and_crop\r\n","Resolution of embedded JPEG thumbnail.":"嵌入式JPEG缩略图的分辨率。\r\n","Whether this key is sticky, i.e., a toggle key ":"该密钥是否粘，即，一个切换键\r\n","Save the tag data into the original image file.":"将标签数据保存到原始图像文件中。\r\n","android.media.MediaPlayer.VIDEO_SCALING_MODE_SCALE_TO_FIT":"android.media.mediaplayer.video_scaling_mode_scale_to_fit\r\n","Get the stall duration for the format/size combination (in nanoseconds).":"获取格式/尺寸组合的失速持续时间（以纳秒为单位）。\r\n","android.media.AudioPresentation.getMasteringIndication()":"android.media.audiopersentation.getMasteringIndication（）\r\n","android.media.metrics.PlaybackMetrics.CONTENT_TYPE_AD":"android.media.metrics.playbackmetrics.content_type_ad\r\n","Preview version of the icon, for the preview popup ":"图标的预览版，用于预览弹出版\r\n","AudioPlaybackCallback":"AudioPlayBackCallback\r\n"," initialization.":" 初始化。\r\n","Request endlessly repeating capture of a sequence of images by this\n            capture session.":"请求无休止地重复捕获一系列图像\r\n            捕获会话。\r\n","android.media.AudioTrack.release()":"android.media.audiotrack.release（）\r\n","A camera capture session that was switched to offline mode via successful call to\n            ":"通过成功呼叫切换到离线模式的相机捕获会话\r\n            \r\n","android.media.tv.TvContract.buildProgramUri(long)":"android.media.tv.tvcontract.buildprogramuri（long）\r\n","android.media.CamcorderProfile.QUALITY_VGA":"android.media.camcorderprofile.quality_vga\r\n","#scanFile(String, String)":"#scanfile（字符串，字符串）\r\n","Query the video codec mime types supported by the application.":"查询应用程序支持的视频编解码器MIME类型。\r\n","Gets the PSK identity hint to report to the client to help agree on the PSK for the provided\n engine.":"获取PSK身份提示向客户报告，以帮助就提供的PSK达成协议\r\n 引擎。\r\n","Base class for MediaDrm exceptions":"MediaDRM异常的基类\r\n","Returns the longitude of this geofence.":"返回这个地理林的经度。\r\n","android.media.AudioDeviceInfo":"android.media.audiodeviceinfo\r\n","android.hardware.camera2.CameraCharacteristics.CONTROL_AWB_AVAILABLE_MODES":"机器人。硬件。相机2。CameraCharacteristics.控制_AWB_AVAILABLE_MODES\r\n","This class represents the capabilities of a network.":"该类代表网络的功能。\r\n","android.media.tv.TvTrackInfo.getType()":"android.media.tv.tvtrackinfo.getType（）\r\n","android.media.MediaPlayer.getDuration()":"android.media.mediaplayer.getDuration（）\r\n","#PROVIDERS_CHANGED_ACTION":"#providers_changed_action\r\n","List of neutral density filter values for\n            ":"中性密度滤波器值列表\r\n            \r\n","Retrieve the set of output buffers.":"检索一组输出缓冲区。\r\n","GnssNavigationMessage.Callback":"gnssnavigationMessage.callback\r\n","android.media.MediaMetadataRetriever#METADATA_KEY_ARTIST":"android.media.mediametadataretriever＃metadata_key_artist\r\n","Removes a GPS status listener.":"删除GPS状态侦听器。\r\n","android.media.MediaMetadataRetriever.release()":"android.media.mediametadataretriever.release（）\r\n","Register a callback to be invoked when a session expiration update\n            occurs.":"注册会话到期更新时调用的回调\r\n            发生。\r\n","Create a new immutable TonemapCurve instance.":"创建一个新的不变的ToneMapcurve实例。\r\n","Called on the listener to notify it that the previously set marker has been reached\n by the playback head.":"要求听众通知它已达到先前的标记\r\n 在播放头上。\r\n","android.media.Image.close()":"android.media.image.close（）\r\n","android.media.metrics.PlaybackSession":"android.media.metrics.playbacksession\r\n","Error code for other decoding errors":"其他解码错误的错误代码\r\n","Gets the action of a custom command.":"获取自定义命令的动作。\r\n","android.media.AudioTrack.setPlaybackHeadPosition(int)":"android.media.audiotrack.setplaybackheadposition（int）\r\n","android.hardware.GeomagneticField.getX()":"android.hardware.geomagneticfield.getx（）\r\n","Return the channel count.":"返回频道计数。\r\n","android.media.MediaPlayer.isPlaying()":"android.media.mediaplayer.isplaying（）\r\n","android.hardware.camera2.CameraCharacteristics.CONTROL_AVAILABLE_EXTENDED_SCENE_MODE_CAPABILITIES":"android.hardware.camera2.cameracharacteristics.control_available_extended_scene_mode_capabilities\r\n","If you know the exact name of the component you want to instantiate\n            use this method to instantiate it.":"如果您知道要实例化的组件的确切名称\r\n            使用此方法实例化。\r\n","android.hardware.camera2.params.MeteringRectangle.getX()":"android.hardware.camera2.params.meteringrectangle.getx（）\r\n","android.media.AudioManager.isMusicActive()":"android.media.audiomanager.ismusicactive（）\r\n","Returns the model name (including vendor and hardware/software version) of the GNSS hardware\n            driver, or null if this information is not available.":"返回GNSS硬件的型号名称（包括供应商和硬件/软件版本）\r\n            驱动程序，如果没有此信息，则为null。\r\n","Indicates whether an audio description for the visually impaired is available.":"指示是否有可用的视力障碍的音频说明。\r\n","android.media.MediaRecorder.getMaxAmplitude()":"android.media.mediarecorder.getMaxamplitude（）\r\n","Called when a provider this listener is registered with becomes enabled.":"当提供商注册时，请致电启用此侦听器。\r\n","SensorEvent#values data":"感官＃值数据\r\n","Returns the interface's protocol field.":"返回接口的协议字段。\r\n","Reverb preset representing a large-sized room suitable for live performances":"Reverb预设代表适合现场表演的大型房间\r\n","android.hardware.SensorManager.GRAVITY_NEPTUNE":"android.hardware.sensormanager.gravity_neptune\r\n","android.media.MediaRecorder.start()":"android.media.mediarecorder.start（）\r\n","Unknown constellation type.":"未知星座类型。\r\n","Queues the specified segment in the JET queue.":"排队在喷气式队列中的指定段。\r\n","android.hardware.camera2.CameraCaptureSession.captureSingleRequest(android.hardware.camera2.CaptureRequest, java.util.concurrent.Executor, android.hardware.camera2.CaptureCallback)":"android.hardware.camera2.cameracapturesessession.capturesinglerequest（android.hardware.camera.camera2.capturerequest，java.util.util.concurrent.executor.executor，android.hardware.camera2.camera2.capturecallback））\r\n","android.hardware.camera2.CameraCharacteristics.get(android.hardware.camera2.Key)":"机器人。硬件。相机2。CameraCharacteristics.获取（android。硬件。相机2。键）\r\n","Implement the Parcelable interface.":"实现包裹界面。\r\n","Create and return the view hierarchy used to show candidates.":"创建并返回用于显示候选人的视图层次结构。\r\n","android.media.MediaRecorder.setAudioEncoder(int)":"android.media.mediarecorder.setaudioencoder（int）\r\n","Returns a constant indicating the desired maximum power requirement. -or- Indicates the desired maximum power requirement.":"返回一个常数，指示所需的最大功率要求。 - 或指示所需的最大功率要求。\r\n","The type of folder that contains folders categorized by artist as specified in the section\n            6.":"包含由艺术家分类的文件夹的类型\r\n            6。\r\n","The default height of ":"默认高度的高度\r\n","Returns the width of the video.":"返回视频的宽度。\r\n","TvInputService":"TVINPUTSERVICE\r\n","android.media.AudioMetadataReadMap.get(android.media.Key)":"android.media.audiometadatareadmap.get（android.media.key）\r\n","android.view.inputmethod.InputMethodSession.updateSelection(int, int, int, int, int, int)":"android.view.inputmethod.inputmethodsession.updateselection（int，int，int，int，int，int，int）\r\n","List of lens shading map output modes for ":"镜头阴影地图输出模式的列表\r\n","Tells the underlying networking system that the caller wants to\n begin using the named feature.":"告诉呼叫者想要的基础网络系统\r\n 开始使用命名功能。\r\n","Text track.":"文字轨道。\r\n","android.media.MediaCodec.getOutputFormat(int)":"android.media.mediacodec.getOutputformat（int）\r\n","#SCRAMBLE_CONTROL_ODD_KEY":"#scramble_control_odd_key\r\n","android.media.MediaRouter2.getControllers()":"android.media.mediarouter2.getControllers（）\r\n","android.mtp.MtpObjectInfo.getParent()":"android.mtp.mtpobjectInfo.getParent（）\r\n","Instantiate a MediaDescrambler.":"实例化mediaDescrambler。\r\n","Sets playback rate using ":"使用\r\n","Query all effects available on the platform.":"查询平台上可用的所有效果。\r\n","Retrieve the extension type.":"检索扩展类型。\r\n","android.media.MediaSession2Service":"android.media.mediasession2service\r\n","android.hardware.usb.UsbDevice.getDeviceName()":"android.hardware.usb.usbdevice.getDeviceName（）\r\n","android.media.audiofx.PresetReverb.PRESET_LARGEHALL":"android.media.audiofx.presetreverb.preset_largehall\r\n","Called when the user tapped or clicked a text view.":"当用户点击或单击文本视图时，请致电。\r\n","android.location.LocationManager.requestLocationUpdates(java.lang.String, long, float, android.app.PendingIntent)":"android.location.LocationManager.RequestLocationUpdates（java.lang.string，long，float，android.app.pendingIntent）\r\n","android.media.AudioManager.EXTRA_SCO_AUDIO_PREVIOUS_STATE":"android.media.audiomanager.extra_sco_audio_previous_state\r\n","Parser for the MP3 container format, as defined in ISO/IEC 11172-3.":"MP3容器格式的解析器，如ISO/IEC 11172-3所定义。\r\n",", or is called when VideoSource is not set to SURFACE.":"，或当视频程序未设置为表面时被称为。\r\n","#BUFFER_FLAG_CODEC_CONFIG":"#BUFFER_FLAG_CODEC_CONFIG\r\n","android.media.AudioProfile.getFormat()":"android.media.audioprofile.getFormat（）\r\n","The maximal camera capture pipeline stall (in unit of frame count) introduced by a\n            reprocess capture request.":"最大摄像机捕获管道摊位（以帧数单位计数为单位）\r\n            重新计算捕获请求。\r\n","android.media.MediaDrm.KEY_TYPE_RELEASE":"android.media.mediadrm.key_type_release\r\n","The parameters for this camera device's intrinsic\n            calibration.":"此相机设备内在的参数\r\n            校准。\r\n","android.media.AudioFocusRequest.getAudioAttributes()":"android.media.audiofocusrequest.getaudioattributes（）\r\n","Error code for other media parsing errors":"其他媒体解析错误的错误代码\r\n","Return the properly localized/resource user-visible name of this route.":"返回此路线的正确局部/资源用户可见名称。\r\n","android.net.LocalServerSocket.getFileDescriptor()":"android.net.localserversocket.getFiledScriptor（）\r\n","Returns effect unique identifier.":"返回效果唯一标识符。\r\n","android.media.RingtoneManager.hasHapticChannels(android.net.Uri)":"android.media.ringtonemanager.hashapticchannels（android.net.uri）\r\n","android.media.ExifInterface.TAG_GPS_DEST_LONGITUDE":"android.media.exifinterface.tag_gps_dest_longitude\r\n","The type of folder that contains media elements only as specified in the section 6.":"仅按照第6节中指定的媒体元素的文件夹类型。\r\n","A key describing the codecs string of the MediaFormat.":"描述媒体形式的编解码器字符串的键。\r\n","Closes the resource containing the JET content.":"关闭包含喷气内容的资源。\r\n","Operation failed due to dead remote object.":"操作由于死去的远程对象而失败。\r\n","android.media.MediaCodec.getInputBuffers()":"android.media.mediacodec.getInputbuffers（）\r\n","android.media.MediaCas.processEmm(byte[])":"android.media.mediacas.processemm（byte []）\r\n"," keys that the\n            camera device can pass as part of the capture session initialization.":" 钥匙\r\n            相机设备可以作为捕获会话初始化的一部分传递。\r\n","android.mtp.MtpConstants.OPERATION_GET_DEVICE_PROP_DESC":"android.mtp.mtpconstants.operation_get_device_prop_desc\r\n","Return whether there is a rating value available.":"返回是否有可用的评级值。\r\n","Returns the number of elements in the map.":"返回地图中的元素数量。\r\n","Specifies an audio device (via an ":"指定音频设备（通过\r\n","Exception thrown when an operation on a MediaDrm object is attempted\n            and the device does not have a certificate.":"尝试在MediaDRM对象上进行操作时会引发异常\r\n            该设备没有证书。\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.getHighSpeedVideoSizesFor(android.util.Range)":"android.hardware.camera2.params.RecommendedStreamConfigurationMap.gethighspeedVideOsizesfor（android.util.range）\r\n","android.media.ImageReader.discardFreeBuffers()":"android.media.imagereader.discardfreebuffers（）\r\n","Registers a GNSS antenna info listener that will receive all changes to antenna info.":"注册A gnss天线信息听众，将收到对天线信息的所有更改。\r\n","android.media.MediaFormat.COLOR_TRANSFER_SDR_VIDEO":"android.media.mediaformat.color_transfer_sdr_video\r\n","android.media.MediaCas.PLUGIN_STATUS_SESSION_NUMBER_CHANGED":"android.media.mediacas.plugin_status_session_number_changed\r\n","android.hardware.usb.UsbDevice.getConfigurationCount()":"android.hardware.usb.usbdevice.getConfigurationCount（）\r\n","android.hardware.camera2.params.OisSample.OisSample(long, float, float)":"android.hardware.camera2.params.oissample.oissample（long，float，float）\r\n","android.hardware.usb.UsbManager.EXTRA_ACCESSORY":"android.hardware.usb.usbmanager.extra_accessory\r\n","Returns the thumbnail bytes inside the image file, regardless of the compression type of the\n            thumbnail image.":"返回图像文件中的缩略图字节，无论其压缩类型如何\r\n            缩略图图像。\r\n","android.media.MediaActionSound.MediaActionSound()":"android.media.mediaactionsound.mediaactionsound（）\r\n","F:Android.Media.AudioTrack..ctor":"f：android.media.audiotrack..ctor\r\n","android.media.AudioDeviceInfo.getEncapsulationModes()":"android.media.audiodeviceinfo.getencapsulationmodes（）\r\n","android.hardware.HardwareBuffer.USAGE_CPU_READ_OFTEN":"android.hardware.hardwarebuffer.usage_cpu_read_often\r\n","Gets the accumulated delta range's uncertainty (1-Sigma) in meters.":"获得累积的Delta范围的不确定性（1-Sigma），分为米。\r\n","MediaRouter allows applications to control the routing of media channels\n            and streams from the current device to external speakers and destination devices.":"Mediarouter允许应用程序控制媒体渠道的路由\r\n            并流从当前设备到外部扬声器和目的地设备。\r\n","Inverts the image colors.":"反转图像颜色。\r\n","Constant to indicate that the monitoring system is currently\n            available for monitoring geofences.":"不断表明监视系统目前是\r\n            可用于监视地理诉讼。\r\n","android.media.metrics.TrackChangeEvent.TRACK_CHANGE_REASON_UNKNOWN":"android.media.metrics.trackchangeevent.track_change_reason_unknown\r\n","android.location.LocationProvider.getName()":"android.location.locationprovider.getName（）\r\n","Set the value of the specified tag.":"设置指定标签的值。\r\n","MediaCodecInfo.CodecProfileLevel":"MediaCodeCinfo.codecprofilelevel\r\n","android.hardware.camera2.CameraCaptureSession.captureBurstRequests(java.util.List, java.util.concurrent.Executor, android.hardware.camera2.CaptureCallback)":"android.hardware.camera2.cameracapturesessession.captureburstrequests（java.util.list，java.util.util.concurrent.executor，android.hardware.camera2.capturecallback）\r\n","Default MidiReceiver constructor.":"默认的中级构造函数。\r\n","The number of leading unencrypted bytes in each subSample.":"每个子样本中领先的未加密字节的数量。\r\n",", causing it to no longer receive\n            media metadata and playback state information, and no longer be capable\n            of controlling playback.":"，导致它不再接收\r\n            媒体元数据和播放状态信息，不再有能力\r\n            控制播放。\r\n","android.media.MediaCodec.flush()":"android.media.mediacodec.flush（）\r\n","Encapsulates a request to modify the state of multiple lights.":"封装一个请求以修改多个光的状态。\r\n"," to retrieve\n            a sync (or key) frame associated with a data source that is located\n            right after or at the given time.":" 检索\r\n            与位于数据源关联的同步框架（或键）帧\r\n            在给定时间或在给定时间之后。\r\n","android.media.SoundPool.autoResume()":"android.media.soundpool.autoresume（）\r\n","android.location.Address":"Android.Location.Address\r\n","android.media.CamcorderProfile.QUALITY_HIGH_SPEED_VGA":"android.media.camcorderprofile.quality_high_speed_vga\r\n","android.media.MediaCodecInfo.getCanonicalName()":"android.media.mediacodecinfo.getCanonicalName（）\r\n","AudioMetadataMap":"AudiometAdatAmap\r\n","#OPTION_PREVIOUS_SYNC":"#option_previous_sync\r\n","android.media.AudioRecord.getChannelCount()":"android.media.audiorecord.getchannelcount（）\r\n","#TONE_CDMA_REORDER":"#TONE_CDMA_REORDER\r\n","Start making changes that will not be reported to the client.":"开始进行更改，不会报告给客户。\r\n","Returns the playback state of the AudioTrack instance.":"返回Adiotrack实例的播放状态。\r\n","This class contains information to describe a MIDI device.":"此类包含以描述MIDI设备的信息。\r\n","A constant describing a magnetic field uncalibrated sensor type. ":"描述磁场未校准传感器类型的常数。 \r\n","Cas session is used to descramble live streams , encrypt local recorded content and playback\n            local encrypted content.":"CAS会话用于描述实时流，加密本地记录的内容和播放\r\n            本地加密内容。\r\n","DVB CSA 3 in standard mode.":"DVB CSA 3在标准模式下。\r\n","Get the request associated with this result.":"获取与此结果相关联的请求。\r\n","android.media.PlaybackParams.setPitch(float)":"android.media.playbackparams.setpitch（float）\r\n","The audio encoder being used for the audio track.":"音频编码器用于音轨。\r\n","android.hardware.camera2.CameraAccessException.getReason()":"android.hardware.camera2.cameraaccessexception.getReason（）\r\n","android.media.MediaRecorder.getAudioSourceMax()":"android.media.mediarecorder.getaudiosourcemax（）\r\n","Called when the user quickly moves the finger from left to right.":"当用户迅速将手指从左到右移动时打电话。\r\n","android.hardware.camera2.params.StreamConfigurationMap.getOutputFormats()":"android.hardware.camera2.params.streamconfigurationmap.getOutputformats（）\r\n","android.mtp.MtpConstants#FORMAT_ASSOCIATION":"android.mtp.mtpconstants＃format_association\r\n","Operation code for GetThumb":"GetThumb的操作代码\r\n"," object to receive notifications of changes\n            to the set of connected audio devices.":" 目的接收更改通知\r\n            到连接的音频设备集。\r\n","Sets the video encoder to be used for recording.":"设置用于录制的视频编码器。\r\n","if it is called before\n setOutputFormat() or after prepare()":"如果以前被调用\r\n setOutputformat（）或prepar prepar（）之后\r\n","android.location.Address.setAdminArea(java.lang.String)":"android.location.address.setadminarea（java.lang.string）\r\n","android.media.AudioManager.SCO_AUDIO_STATE_ERROR":"android.media.audiomanager.sco_audio_state_error\r\n","F:Android.Media.MediaPlayer+ErrorEventArgs..ctor":"f：android.media.mediaplayer+erroreventargs..ctor\r\n","MediaCodec class can be used to access low-level media codecs, i.e. encoder/decoder components.":"MediaCodec类可用于访问低级媒体编解码器，即编码器/解码器组件。\r\n","Association type for objects representing file system directories.":"代表文件系统目录的对象的关联类型。\r\n","Returns a unique integer ID for the device.":"返回设备的唯一整数ID。\r\n","Reports whether the satellite at the specified index was used in the calculation of the most\n            recent position fix.":"报告是否使用指定索引的卫星在计算中使用\r\n            最近的位置修复。\r\n","android.media.MediaCodec.PARAMETER_KEY_OFFSET_TIME":"android.media.mediacodec.parameter_key_offset_time\r\n","android.media.session.PlaybackState.ACTION_PREPARE":"android.media.session.playbackstate.action_prepare\r\n","android.media.RouteDiscoveryPreference.getPreferredFeatures()":"android.media.routediscoverypreference.getPreferredFeatures（）\r\n","android.media.MediaRouter.CALLBACK_FLAG_PERFORM_ACTIVE_SCAN":"android.media.mediarouter.callback_flag_perform_active_scan\r\n","F:Android.Media.Audiofx.Visualizer.SetMeasurementMode":"F：android.media.audiofx.visualizer.setMeasurementMode\r\n","android.hardware.lights.LightsRequest.getLights()":"android.hardware.lights.lightsrequest.getlights（）\r\n","android.media.effect.EffectFactory.EFFECT_BRIGHTNESS":"android.media.effect.effectfactory.effect_brightness\r\n","android.hardware.camera2.CaptureResult.SENSOR_FRAME_DURATION":"android.hardware.camera2.captureresult.sensor_frame_duration\r\n","android.location.Address.setLongitude(double)":"android.location.Address.SetLongitude（double）\r\n","android.hardware.camera2.CameraCharacteristics.SCALER_MANDATORY_CONCURRENT_STREAM_COMBINATIONS":"android.hardware.camera2.cameracharacteristics.scaler_mandatory_concurrent_stream_combinations\r\n","android.hardware.camera2.params.ColorSpaceTransform.copyElements(int[], int)":"android.hardware.camera2.params.colorspacetransform.copylements（int []，int）\r\n","Coordinate3F":"坐标3F\r\n","android.media.MediaPlayer.setPreferredDevice(android.media.AudioDeviceInfo)":"android.media.mediaplayer.setpreferreddevice（android.media.audiodeviceinfo）\r\n","Builds a URI that points to all preview programs on a given channel.":"构建一个指向给定频道上所有预览程序的URI。\r\n","android.hardware.camera2.CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_RAW":"android.hardware.camera2.CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_RAW\r\n","Indicates this network uses a Cellular transport.":"指示该网络使用蜂窝传输。\r\n","android.media.MediaRecorder.setVideoFrameRate(int)":"android.media.mediarecorder.setVideoframerate（int）\r\n","if cameraId or the callback was null,\n or the cameraId does not match any currently or previously available\n camera device.":"如果摄影或回调为无效，\r\n 或摄影师与当前或以前可用的任何相匹配\r\n 相机设备。\r\n","Sanitize values based on which characters they contain.":"根据其包含哪些字符进行消毒值。\r\n","android.inputmethodservice.KeyboardView.setPreviewEnabled(boolean)":"android.inputmethodservice.keyboardview.setPreviewEnabled（boolean）\r\n","Provider of key material for pre-shared key (PSK) key exchange used in TLS-PSK cipher suites.":"TLS-PSK密码套件中使用的预共享密钥（PSK）密钥交换的关键材料提供商。\r\n","Dequeue an output buffer, block at most \"timeoutUs\" microseconds.":"排出输出缓冲区，最多可以在“超时”微秒处阻止。\r\n","#KEY_FLUSH_COMPLETE":"#KEY_FLUSH_COMPLETE\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_EXPOSURE_TIME_RANGE":"android.hardware.camera2.cameracharacteristics.sensor_info_exposure_time_range\r\n","The Settings class regroups all bass boost parameters.":"设置类重组所有低音提升参数。\r\n","Returns the azimuth of the satellite in degrees.":"返回卫星的方位角。\r\n","OnJetEventListener#onJetUserIdUpdate(JetPlayer, int, int)":"OnjeteventListener＃onjetuseridupdate（JetPlayer，int，int）\r\n","android.mtp.MtpConstants.OPERATION_GET_OBJECT_REFERENCES":"android.mtp.mtpconstants.operation_get_object_references\r\n","android.media.TimedMetaData.getMetaData()":"android.media.timedmetadata.getmetadata（）\r\n","Constructs a Geocoder whose responses will be localized for the\n            default system Locale.":"构建一个地理编码器，其响应将是本地化的\r\n            默认系统语言环境。\r\n","Cancels receiving trigger events for a trigger sensor.":"取消接收触发传感器的触发事件。\r\n","The Mobile data connection. ":"移动数据连接。\r\n","The lookup key for a ":"查找键\r\n","android.media.AudioManager.AUDIO_SESSION_ID_GENERATE":"android.media.audiomanager.audio_session_id_generate\r\n","A key request/response exchange occurs between the app and a license server\n            to obtain or release keys used to decrypt encrypted content.":"关键请求/响应交换发生在应用程序和许可证服务器之间\r\n            获取或释放用于解密加密内容的密钥。\r\n","android.net.MailTo.getHeaders()":"android.net.mailto.getheaders（）\r\n","android.media.ExifInterface.TAG_GPS_PROCESSING_METHOD":"android.media.exifinterface.tag_gps_processing_method\r\n","Returns the directionality of microphone.":"返回麦克风的方向性。\r\n","LoudnessEnhancer is an audio effect for increasing audio loudness.":"Loudnessenhancer是增加音频响度的音频效果。\r\n","android.location.provider.ProviderProperties.hasMonetaryCost()":"android.location.provider.providerproperties.hasmonetarycost（）\r\n","Reverb delay.":"混响延迟。\r\n","Add a network address to the VPN interface.":"将网络地址添加到VPN接口。\r\n","android.media.RoutingSessionInfo.getTransferableRoutes()":"android.media.routingsessioninfo.getTransferablerOutes（）\r\n","android.os.MemoryFile":"android.os.memoryfile\r\n","Allows an app to interact with an ongoing media session.":"允许应用程序与正在进行的媒体会话进行交互。\r\n","CaptureRequest#HOT_PIXEL_MODE android.hotPixel.mode":"CaptureRequest＃HOT_PIXEL_MODE android的。热像素。模式\r\n","android.media.MediaCodec.signalEndOfInputStream()":"android.media.mediacodec.signalendofinputstream（）\r\n","Cloning a JetPlayer instance is not supported.":"不支持克隆喷气机实例。\r\n","if it is called in an invalid state\n\n ":"如果以无效状态调用\r\n\r\n \r\n","#RATING_3_STARS":"＃rating_3_stars\r\n","Force switch to a new input method, as identified by <var>id</var>.":"强制切换到由<var> id </var>标识的新输入方法。\r\n","EditorInfo#IME_FLAG_NO_ENTER_ACTION\n            EditorInfo.IME_FLAG_NO_ENTER_ACTION":"editorinfo＃ime_flag_no_enter_action\r\n            editorinfo.ime_flag_no_enter_action\r\n","#SCRAMBLE_CONTROL_UNSCRAMBLED":"#scramble_control_unscrambled\r\n","android.media.AudioRecord.removeOnRoutingChangedListener(android.media.OnRoutingChangedListener)":"android.media.audiorecord.removeonRoutingChangedListener（android.media.onroutingchangedlistener）\r\n","The Ikev2VpnProfile is a configuration for the platform setup of IKEv2/IPsec VPNs.":"IKEV2VPNProfile是IKEV2/IPSEC VPN的平台设置的配置。\r\n","android.media.AudioRecord.getFormat()":"android.media.audiorecord.getFormat（）\r\n","android.media.Ringtone.isPlaying()":"android.media.rringtone.isplaying（）\r\n","android.media.ExifInterface.STREAM_TYPE_EXIF_DATA_ONLY":"android.media.exifinterface.stream_type_exif_data_only\r\n","android.mtp.MtpDeviceInfo":"android.mtp.mtpdeviceinfo\r\n","MidiDeviceInfo":"MidideViceInfo\r\n","android.media.MediaPlayer.pause()":"android.media.mediaplayer.pape（）\r\n","Gets the current default sound's ":"获取当前的默认声音\r\n","Usage: The buffer will be used as a cube map texture":"用法：缓冲区将用作立方体地图纹理\r\n","android.media.audiofx.Visualizer.getMeasurementPeakRms(android.media.audiofx.MeasurementPeakRms)":"android.media.audiofx.visualizer.getMeasurementPeakrms（android.media.audiofx.measurementpeakrms）\r\n","android.media.audiofx.EnvironmentalReverb":"android.media.audiofx.environmentalreverb\r\n","A media route discovery preference describing the features of routes that media router\n            would like to discover and whether to perform active scanning.":"媒体路线发现偏好描述了媒体路由器的路由的特征\r\n            想发现以及是否进行主动扫描。\r\n","MediaPlayer":"媒体播放器\r\n","android.media.MediaCas.refreshEntitlements(int, byte[])":"android.media.mediacas.refreshentitlements（int，byte []）\r\n","Normally offline licenses are released using a key request/response\n            exchange using ":"通常使用关键请求/响应发布离线许可证\r\n            交换使用\r\n","This method stops the tone currently playing playback.":"此方法停止了当前播放的音调。\r\n","android.media.tv.TvInputManager.isRatingBlocked(android.media.tv.TvContentRating)":"android.media.tv.tvinputmanager.isratingblocked（android.media.tv.tvcontentrating）\r\n","Early reflections level. ":"早期反思水平。\r\n","android.media.MediaPlayer.getTimestamp()":"android.media.mediaplayer.getTimestamp（）\r\n",") or disabled\n            (":"）或禁用\r\n            （（\r\n","Returns the current scaling mode on the captured visualization data.":"在捕获的可视化数据上返回当前缩放模式。\r\n","Pauses playback.":"暂停播放。\r\n","android.media.MediaDrm.provideKeyResponse(byte[], byte[])":"android.media.mediadrm.providekeyresponse（byte []，byte []）\r\n","Bass boost is an audio effect to boost or amplify low frequencies of the sound.":"低音增强是一种音频效应，可提高或扩大声音的低频。\r\n","#ACTION_GNSS_CAPABILITIES_CHANGED":"#action_gnss_capabilities_changed\r\n","The back button will close the input window.":"后退按钮将关闭输入窗口。\r\n","IRNSS L5 C/A message contained in the structure.":"IRNSS L5 C/A结构中包含的消息。\r\n","android.media.Rating":"android.media.Crating\r\n","android.media.audiofx.AudioEffect.EFFECT_TYPE_EQUALIZER":"android.media.audiofx.audioeffect.effect_type_equalizer\r\n","android.location.Address.setSubAdminArea(java.lang.String)":"android.location.Address.setsubadminarea（java.lang.string）\r\n","android.net.LocalSocket.LocalSocket(int)":"android.net.localsocket.localsocket（int）\r\n","android.media.session.MediaController.getSessionActivity()":"android.media.session.mediacontroller.getSessionSactivity（）\r\n","Time lapse quality level corresponding to the 8K UHD (7680 x 4320) resolution.":"时间失误质量水平对应于8K UHD（7680 x 4320）分辨率。\r\n","android.location.GnssClock.hasLeapSecond()":"android.location.gnssclock.hasleapsecond（）\r\n","Interface defining mechanism for controlling the directionality and field width of\n            audio capture.":"界面定义控制方向性和场宽度的机制\r\n            音频捕获。\r\n","android.media.MediaPlayer.create(android.content.Context, android.net.Uri)":"android.media.mediaplayer.create（android.content.context，android.net.uri）\r\n","android.media.MediaCas.processEmm(byte[], int, int)":"android.media.mediacas.processemm（byte []，int，int）\r\n","The metadata key to retrieve the content type or genre of the data\n source.":"检索数据的内容类型或类型的元数据键\r\n 资源。\r\n","android.hardware.camera2.CaptureRequest.DISTORTION_CORRECTION_MODE":"android.hardware.camera2.capturerequest.distortort_correction_mode\r\n","android.media.tv.TvContract":"android.media.tv.tvcontract\r\n","android.media.metrics.PlaybackMetrics.getPlayerVersion()":"android.media.metrics.playbackmetrics.getplayerversion（）\r\n","android.media.MediaExtractor.advance()":"android.media.mediaextractor.advance（）\r\n","android.media.ExifInterface.TAG_METERING_MODE":"android.media.exifinterface.tag_metering_mode\r\n","#STREAM_VOICE_CALL":"#Stream_voice_Call\r\n"," is relative to the optical center of\n            the largest camera device facing the same direction as this camera.":" 相对于光学中心\r\n            最大的摄像头设备面向与此相机相同的方向。\r\n","Information about a route that the application may define and modify.":"有关应用程序可以定义和修改路由的信息。\r\n","#getRotationMatrix":"#getRotationMatrix\r\n","android.media.audiofx.AudioEffect.EFFECT_TYPE_DYNAMICS_PROCESSING":"android.media.audiofx.audioeffect.effect_type_dynamics_processing\r\n","The shading map is a low-resolution floating-point map\n            that lists the coefficients used to correct for vignetting, for each\n            Bayer color channel.":"阴影地图是低分辨率的浮点图\r\n            这列出了用于校正小插图的系数\r\n            拜耳颜色通道。\r\n","android.hardware.camera2.CameraMetadata.DISTORTION_CORRECTION_MODE_HIGH_QUALITY":"android.hardware.camera2.camerametadata.distortion_correction_mode_high_quality\r\n","Tell if dynamic sensor discovery feature is supported by system.":"确定系统是否支持动态传感器发现功能。\r\n","Returns the number of fields in this metadata.":"返回此元数据中的字段数。\r\n","android.media.MediaMuxer.MediaMuxer(java.io.FileDescriptor, int)":"android.media.mediamuxer.mediamuxer（java.io.filedescriptor，int）\r\n","android.media.metrics.PlaybackMetrics.STREAM_SOURCE_NETWORK":"android.media.metrics.playbackmetrics.stream_source_network\r\n","android.hardware.camera2.CaptureFailure.getReason()":"android.hardware.camera2.capturefailure.getReason（）\r\n","android.inputmethodservice.InputMethodService.switchInputMethod(java.lang.String, android.view.inputmethod.InputMethodSubtype)":"android.inputmethodservice.inputmethodservice.switchinputmethod（java.lang.string，android.view.Inputmethod.inputmethod.inputmethodsubtype）\r\n","\n            passed into ":"\r\n            进入\r\n","android.hardware.camera2.CaptureFailure":"android.hardware.camera2.capturefailure\r\n","CDMA HIGH PBX SLS tone:{2600Hz 25ms, 2900Hz 25ms} 8 times\n 200ms OFF, {2600Hz 25ms, 2900Hz 25ms} 16 times, 200ms OFF,\n {2600Hz 25ms, 2900Hz 25ms} 8 times, 1000ms OFF, REPEAT....":"CDMA高PBX SLS音调：{2600Hz 25ms，2900Hz 25ms} 8次\r\n 200ms关闭，{2600Hz 25ms，2900Hz 25ms} 16次，200ms折扣，\r\n {2600Hz 25ms，2900Hz 25ms} 8次，1000毫秒，重复...\r\n","android.media.MediaActionSound.play(int)":"android.media.mediaactionsound.play（int）\r\n","android.media.MediaCas.SCRAMBLING_MODE_MULTI2":"android.media.mediacas.scrambling_mode_multi2\r\n","android.media.MediaMetadataRetriever":"android.media.mediametadataretriever\r\n","Creates a FaceDetector, configured with the size of the images to\n            be analysed and the maximum number of faces that can be detected.":"创建一个面对面的eTector，并配置了图像的大小\r\n            进行分析和可以检测到的最大面孔数量。\r\n"," supported by\n            this camera device.":" 支持\r\n            这个相机设备。\r\n","CDMA HIGH PBX L: {3700Hz 25ms, 4000Hz 25ms}20 times,\n 2000ms OFF,  REPEAT....":"CDMA高PBX L：{3700Hz 25ms，4000Hz 25ms} 20次，\r\n 2000毫秒左右，重复...\r\n","Audio presentation content classifier: Emergency.":"音频演示内容分类器：紧急情况。\r\n","The maximum number of simultaneously detectable\n            faces.":"同时可检测的最大数量\r\n            面孔。\r\n","android.media.SyncParams.getFrameRate()":"android.media.syncparams.getFramerate（）\r\n","Ethernet network":"以太网网络\r\n","Gets the default route for playing media content on the system.":"获取用于在系统上播放媒体内容的默认路由。\r\n","android.media.MediaMetadataRetriever#METADATA_KEY_ALBUM":"android.media.mediametadataretriever＃metadata_key_album\r\n","KeyEvent#KEYCODE_MEDIA_RECORD":"keyevent＃keycode_media_record\r\n","Size":"尺寸\r\n","This signals the end of stream, i.e. ":"这标志着流的尽头，即\r\n","Configures the codec (e.":"配置编解码器（e。\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_EXIF_OFFSET":"android.media.mediametadataretriever.metadata_key_exif_offset\r\n","android.hardware.camera2.CaptureRequest.BLACK_LEVEL_LOCK":"android.hardware.camera2.capturerequest.black_level_lock\r\n","android.mtp.MtpEvent.EVENT_OBJECT_ADDED":"android.mtp.mtpevent.event_object_added\r\n","android.media.MediaMetadata.METADATA_KEY_DISPLAY_ICON_URI":"android.media.mediametadata.metadata_key_display_icon_uri\r\n","CaptureResult#STATISTICS_OIS_SAMPLES optical image stabilization sample":"Captureresult＃Statistics_OIS_Samples光学图像稳定样本\r\n"," list for the capture\n            session.":" 捕获的列表\r\n            会议。\r\n","android.hardware.usb.UsbDevice#getDeviceName":"android.hardware.usb.usbdevice＃getDeviceName\r\n","Returns a socket factory (also named SSLSocketFactory, but in a different\n namespace) for use with the Apache HTTP stack.":"返回插座工厂（也名为SSLSocketFactory，但以不同的方式\r\n 名称空间）与Apache HTTP堆栈一起使用。\r\n","Interface definition of a callback to be invoked indicating\n the completion of a seek operation.":"接口的定义要调用的回调指示\r\n 搜索操作的完成。\r\n","#transferTo(MediaRoute2Info)":"#transferto（Mediaroute2info）\r\n","The constant to indicate that the user is uncertain with respect to a\n geofence. ":"表明用户相对于一个不确定的常数\r\n 地理林。\r\n","Type is undefined.":"类型不确定。\r\n","android.media.MediaMetadataEditor.putString(int, java.lang.String)":"android.media.mediametadataeditor.putstring（int，java.lang.string）\r\n","Gets language region code.":"获取语​​言区域代码。\r\n","Disconnects a ":"断开a\r\n"," with the given\n            <var>path</var> and <var>mimeType</var> when the connection is\n            established.":" 与给定\r\n            <var>路径</var>和<var> mimetype </var>当连接为\r\n            已确立的。\r\n","Computes the geomagnetic inclination angle in radians from the\n            inclination matrix <b>I</b> returned by ":"计算来自弧度的地磁倾斜角\r\n            倾斜矩阵<b> i </b>返回\r\n"," associated with a DRM session.":" 与DRM会话相关联。\r\n","android.location.GnssMeasurementRequest":"android.location.gnssmeasurementRequest\r\n","android.media.SoundPool.load(java.io.FileDescriptor, long, long, int)":"android.media.soundpool.load（java.io.filedescriptor，long，long，int）\r\n","Gets the equalizer properties.":"获取均衡器属性。\r\n","android.mtp.MtpConstants.OPERATION_GET_STORAGE_INFO":"android.mtp.mtpconstants.operation_get_storage_info\r\n","MediaPlayer#setLooping(boolean)":"MediaPlayer＃setlooping（布尔值）\r\n","android.mtp.MtpDeviceInfo.getManufacturer()":"android.mtp.mtpdeviceinfo.getManufacter（）\r\n","Detects if a point falls inside this key.":"检测一个点是否落在此键内。\r\n","Sets a new location for the given test provider.":"为给定的测试提供商设置一个新位置。\r\n","android.media.tv.TvTrackInfo.getVideoHeight()":"android.media.tv.tvtrackinfo.getVideHeight（）\r\n","android.media.audiofx.AudioEffect":"android.media.audiofx.audioeffect\r\n","android.location.LocationManager.NETWORK_PROVIDER":"android.location.locationmanager.network_provider\r\n","android.media.MediaDrm.MediaDrm(java.util.UUID)":"android.media.mediadrm.mediadrm（java.util.uuid）\r\n","Called when Autofill is requesting an ":"当自动填充要求\r\n","android.mtp.MtpEvent.EVENT_OBJECT_PROP_CHANGED":"android.mtp.mtpevent.event_object_prop_changed\r\n","Error code for a failure while establishing a network connection":"在建立网络连接时故障的错误代码\r\n","android.media.MediaMetadataRetriever.getFramesAtIndex(int, int)":"android.media.mediametadataretriever.getFramesatIndex（int，int）\r\n","Main contents.":"主要内容。\r\n","Device-specific extension implementation which tends to smooth the skin and apply other\n            cosmetic effects to people's faces.":"设备特定的扩展实现，倾向于使皮肤光滑并施加其他\r\n            对人们脸的美容效果。\r\n","android.media.AudioRecord.getAudioSource()":"android.media.audiorecord.getAudioSource（）\r\n","ColorSpaceTransform":"Colors -pacetransform\r\n","android.hardware.location.GeofenceHardware.pauseGeofence(int, int)":"android.hardware.location.geofencehardware.pausegeofence（int，int）\r\n","android.location.Location.getSpeed()":"android.location.location.getSpeed（）\r\n","android.location.Address.getPostalCode()":"android.location.address.getPostalCode（）\r\n","android.location.LocationProvider":"Android.Location.Location Provider\r\n","android.media.session.PlaybackState.getActions()":"android.media.session.playbackstate.getactions（）\r\n","The video is too complex for the decoder: it can't decode frames fast\n  enough. ":"该视频对于解码器来说太复杂了：它不能快速解码帧\r\n  足够的。\r\n","android.hardware.camera2.params.OutputConfiguration.getSurface()":"android.hardware.camera2.params.outputconfiguration.getSurface（）\r\n","android.media.RemoteControlClient.FLAG_KEY_MEDIA_PLAY":"android.media.remotecontrolclient.flag_key_media_play\r\n","android.media.MediaMetadataEditor":"android.media.mediametadataeditor\r\n","android.media.MediaRoute2Info.FEATURE_REMOTE_VIDEO_PLAYBACK":"android.media.mediaroute2info.feature_remote_video_playback\r\n","android.media.AudioPresentation.getLocale()":"android.media.audiopersentation.getLocale（）\r\n","F:Android.Media.MediaMuxer..ctor":"F：android.media.mediamuxer..ctor\r\n","#getProperty":"#getProperty\r\n","android.hardware.camera2.CameraCharacteristics.DEPTH_DEPTH_IS_EXCLUSIVE":"机器人。硬件。相机2。CameraCharacteristics.DEPTH_DEPTH_IS_排他性\r\n","android.media.metrics.TrackChangeEvent":"android.media.metrics.TrackChangeEvent\r\n","Quality level corresponding to 4k-DCI (4096 x 2160) resolution.":"质量水平对应于4K-DCI（4096 x 2160）分辨率。\r\n","#INFO_OUTPUT_FORMAT_CHANGED":"#info_output_format_changed\r\n","A key describing the MPEG-H stream profile-level indication.":"描述MPEG-H流曲线级指示的键。\r\n","android.media.effect.EffectFactory.EFFECT_TINT":"android.media.effect.effectfactory.effect_tint\r\n","Identifies the faces of people in a \n            ":"识别一个人的面孔\r\n            \r\n","Creates a minimal subtitle format.":"创建最小的字幕格式。\r\n","#write(byte[], int, int, int)":"#write（byte []，int，int，int）\r\n","MediaDrm#KEY_TYPE_OFFLINE":"MediaDRM＃key_type_offline\r\n","android.media.MediaFormat.getLong(java.lang.String, long)":"android.media.mediaformat.getlong（java.lang.string，长）\r\n","Returns current status of a hardware geofence monitoring system.":"返回硬件Geofence监视系统的当前状态。\r\n","Defines at what volume the playback associated with this route is performed (for user\n feedback purposes).":"定义与此路线相关联的播放的卷（对于用户\r\n 反馈目的）。\r\n","android.media.MediaFormat.getKeys()":"android.media.mediaformat.getkeys（）\r\n","android.media.midi.MidiReceiver":"android.media.midi.midireceiver\r\n","Returns the session ID":"返回会话ID\r\n","android.mtp.MtpDeviceInfo.getModel()":"android.mtp.mtpdeviceinfo.getmodel（）\r\n","android.media.Rating.newThumbRating(boolean)":"android.media.rating.newthumbrating（boolean）\r\n","android.media.MediaDescription.getMediaId()":"android.media.mediadescription.getMediaid（）\r\n","android.hardware.camera2.CameraDevice.AUDIO_RESTRICTION_VIBRATION":"android.hardware.camera2.cameradevice.audio_resteriction_vibration\r\n","android.hardware.usb.UsbDeviceConnection.controlTransfer(int, int, int, int, byte[], int, int, int)":"android.hardware.usb.usbdeviceconnection.controltransfer（int，int，int，int，int，byte []，int，int，int）\r\n","Register for a single location update using a Criteria and a callback.":"使用标准和回调注册单个位置更新。\r\n","Returns the names of the cipher suites that are supported and could be\n enabled for an SSL connection.":"返回所支持的密码套件的名称，可能是\r\n 启用了SSL连接。\r\n","android.media.MediaCodec.getOutputFormat()":"android.media.mediacodec.getOutputformat（）\r\n","android.media.MediaMetadataRetriever.OPTION_PREVIOUS_SYNC":"android.media.mediametadataretriever.option_previous_sync\r\n","android.net.VpnService.onBind(android.content.Intent)":"android.net.vpnservice.onbind（android.content.intent）\r\n","android.media.ExifInterface.TAG_GPS_ALTITUDE_REF":"android.media.exifinterface.tag_gps_altitude_ref\r\n","Gets information about how volume is handled on the route.":"获取有关如何在路线上处理音量的信息。\r\n","A class that aggregates all supported arguments for\n            ":"汇总所有支持论据的课程\r\n            \r\n","Create a new constrained high speed capture session.":"创建一个新的约束高速捕获会话。\r\n","Returns the maximum number of satellites that can be in the satellite\n            list that can be returned by ":"返回卫星中最大数量的卫星数量\r\n            可以返回的列表\r\n","MediaPlayer is resuming playback after filling buffers.":"填充缓冲区后，MediaPlayer正在恢复播放。\r\n","A sound generated within a room travels in many directions.":"在房间内产生的声音在许多方向上行进。\r\n","android.hardware.camera2.params.StreamConfigurationMap":"android.hardware.camera2.params.streamconfigurationmap\r\n","Retrieves the password.":"检索密码。\r\n","Gets the id of the route.":"获取路线的ID。\r\n","android.media.MediaMetadataRetriever.setDataSource(java.lang.String, java.util.Map)":"android.media.mediametadataretriever.setdatasource（java.lang.string，java.util.map）\r\n","Starts TV program recording in the current recording session.":"在当前录制会话中启动电视节目录制。\r\n","android.media.MediaMetadataRetriever#METADATA_KEY_DURATION":"android.media.mediametadataretriever＃metadata_key_duration\r\n","android.media.AudioManager.setRouting(int, int, int)":"android.media.audiomanager.setrouting（int，int，int）\r\n","android.location.GnssStatus.getAzimuthDegrees(int)":"android.location.gnssstatus.getazimuthdegrees（int）\r\n","android.media.AudioTrack.getChannelCount()":"android.media.audiotrack.getchannelcount（）\r\n","Set the type of scaling applied on the captured visualization data.":"设置在捕获的可视化数据上应用的缩放类型。\r\n","android.hardware.camera2.CameraCaptureSession.close()":"android.hardware.camera2.cameracapturesessession.close（）\r\n","android.media.CameraProfile":"android.media.cameraprofile\r\n","Bitmask used for extracting the ":"用于提取的Bitmask\r\n","android.hardware.camera2.CameraCharacteristics.CONTROL_POST_RAW_SENSITIVITY_BOOST_RANGE":"机器人。硬件。相机2。CameraCharacteristics.CONTROL_POST_RAW_SENSITIVITY_BOOST_RANGE\r\n","android.hardware.location.GeofenceHardwareRequest.getUnknownTimer()":"android.hardware.location.geofencehardwarerequest.getunknowntimer（）\r\n","A constant describing a magnetic field sensor type. ":"描述磁场传感器类型的常数。 \r\n","Get the estimated horizontal accuracy of this location, radial, in meters. -or- Set the estimated horizontal accuracy of this location, meters.":"以米为单位获得该位置的估计水平准确性。 - 或设置该位置的估计水平精度，米。\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.getHighSpeedVideoSizes()":"android.hardware.camera2.params.recommendstreamconfigurationmap.gethighspeedVideoSizes（）\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_IO_OTHER":"android.media.metrics.playbackerrorevent.error_io_other\r\n","Returns the maximum volume index for a particular stream.":"返回特定流的最大音量索引。\r\n","Retrieve the session wide camera parameters (see ":"检索会话宽相机参数（请参阅\r\n","android.media.ImageReader.acquireNextImage()":"android.media.imagereader.acquirenextimage（）\r\n","android.hardware.camera2.CameraCharacteristics.CONTROL_AE_COMPENSATION_STEP":"android.hardware.camera2.cameracharacteristics.control_ae_compensation_step\r\n","android.media.AudioPresentation.CONTENT_DIALOG":"android.media.audiopersentation.content_dialog\r\n","android.media.MediaDataSource":"android.media.mediadatasource\r\n","android.media.ExifInterface.TAG_LIGHT_SOURCE":"android.media.exifinterface.tag_light_source\r\n","F:Android.Media.Rating.NewUnratedRating":"f：android.media.rating.newunratedrating\r\n","android.media.ImageReader.newInstance(int, int, int, int, long)":"android.media.imagereader.newinstance（int，int，int，int，long）\r\n","android.media.effect.EffectFactory.EFFECT_GRAIN":"android.media.effect.effectfactory.effect_grain\r\n","android.hardware.location.GeofenceHardware.MONITOR_UNSUPPORTED":"android.hardware.location.geofencehardware.monitor_unsupported\r\n","Set the playback position synchronization mode.":"设置播放位置同步模式。\r\n","Looper":"looper\r\n","android.media.MediaExtractor.getTrackCount()":"android.media.mediaextractor.getTrackCount（）\r\n","#TONE_CDMA_LOW_PBX_S_X4":"＃tone_cdma_low_pbx_s_x4\r\n","android.media.audiofx.AudioEffect.ERROR":"android.media.audiofx.audioeffect.error\r\n","A key for boolean DEFAULT behavior for the track.":"布尔值默认行为的关键。\r\n","android.hardware.camera2.CameraDevice.createExtensionSession(android.hardware.camera2.params.ExtensionSessionConfiguration)":"android.hardware.camera2.cameradevice.createextensionsessessions（android.hardware.camera2.params.params.extensionsessessessesseessessessionConfiguration）\r\n","android.hardware.camera2.CaptureResult.CONTROL_AE_PRECAPTURE_TRIGGER":"android.hardware.camera2.captureresult.control_ae_precapture_trigger\r\n"," object encapsulating the phase center variation\n            corrections and corresponding uncertainties in millimeters.":" 对象封装相中中心变化\r\n            校正和相应的不确定性。\r\n","android.media.MediaRouter.ROUTE_TYPE_LIVE_VIDEO":"android.media.mediarouter.route_type_live_video\r\n","Remove the bearing from this location.":"从该位置删除轴承。\r\n","Indicates that this network is not a VPN.":"表示该网络不是VPN。\r\n","Releases the virtual display and destroys its underlying surface.":"释放虚拟显示并破坏其基础表面。\r\n","Sets the audio attributes for this MediaPlayer.":"设置此媒体播放器的音频属性。\r\n","Operation code for GetObjectInfo":"GetObjectInfo的操作代码\r\n","F:Android.Media.Session.PlaybackState+Builder.SetState":"F：android.media.session.playbackstate+Builder.setstate\r\n","android.inputmethodservice.InputMethodService.onStartCandidatesView(android.view.inputmethod.EditorInfo, boolean)":"android.inputmethodservice.inputmethodservice.onstartcandidatesview（android.view.inputmethod.editorinfo，boolean）\r\n","Operation code for GetObjectPropsSupported":"getObjectPropsSupport的操作代码\r\n","android.location.GnssStatus.CONSTELLATION_SBAS":"android.location.gnssstatus.constellation_sbas\r\n","Determine if fingerprint hardware is present and functional.":"确定指纹硬件是否存在并且功能功能。\r\n","android.media.AudioTrack.getLogSessionId()":"android.media.audiotrack.getLogsessionid（）\r\n","android.media.MediaParser.PARAMETER_TS_ENABLE_HDMV_DTS_AUDIO_STREAMS":"android.media.mediaparser.parameter_ts_enable_hdmv_dts_audio_streams\r\n","android.media.JetPlayer.setMuteFlags(int, boolean)":"android.media.jetplayer.setmuteflags（int，boolean）\r\n","android.media.MediaMetadataRetriever.getFrameAtTime(long)":"android.media.mediametadataretriever.getFrameattime（long）\r\n","The constant to indicate that the user has entered the geofence.":"表示用户已进入地理林的常数。\r\n","Device-specific extension implementation for automatic selection of particular extension\n            such as HDR or NIGHT depending on the current lighting and environment conditions.":"用于自动选择特定扩展的设备特定扩展实现\r\n            例如HDR或夜晚，具体取决于当前的照明和环境条件。\r\n","android.media.session.MediaSession.sendSessionEvent(java.lang.String, android.os.Bundle)":"android.media.session.mediasession.sendsessionevent（java.lang.string，android.os.bundle）\r\n","android.media.AudioManager.setMicrophoneMute(boolean)":"android.media.audiomanager.setmicrophonemute（boolean）\r\n","android.media.AudioManager.RINGER_MODE_CHANGED_ACTION":"android.media.audiomanager.ringer_mode_changed_action\r\n","MediaScannerConnectionClient#onScanCompleted(String, Uri)":"MediaScannerConnectionClient＃onScancompleted（String，uri）\r\n","#setRecordPositionUpdateListener(OnRecordPositionUpdateListener)":"#setRecordPositionUpDateListener（OnRecorDpositionUpDateListener）\r\n","Media server died. ":"媒体服务器死亡。\r\n","Return the list of currently connected camera devices by identifier, including\n            cameras that may be in use by other camera API clients.":"通过标识符返回当前连接的相机设备的列表，包括\r\n            其他相机API客户端可能正在使用的相机。\r\n","Retrieves the tolerance factor.":"检索公差因子。\r\n","Range of sensitivities for ":"敏感范围\r\n","android.media.MediaExtractor.unselectTrack(int)":"android.media.mediaextractor.unselecttrack（int）\r\n","android.media.AudioPresentation.MASTERING_NOT_INDICATED":"android.media.audiopersentation.mastering_not_indicated\r\n","android.media.effect.EffectFactory.EFFECT_CONTRAST":"android.media.effect.effectfactory.effect_contrast\r\n","android.hardware.camera2.DngCreator.setThumbnail(android.media.Image)":"android.hardware.camera2.dngcreator.setthumbnail（android.media.image）\r\n","android.media.MediaScannerConnection.onServiceConnected(android.content.ComponentName, android.os.IBinder)":"android.media.mediascannerconnection.onerviceconnected（android.content.componentname，android.os.ibinder）\r\n","#deselectTrack(int)":"#deselecttrack（int）\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.getInputFormats()":"android.hardware.camera2.params.RecommendStreamConfigurationMap.getInputformats（）\r\n","Change a video encoder's target bitrate on the fly.":"即时更改视频编码器的目标比特率。\r\n","android.hardware.camera2.params.InputConfiguration.getFormat()":"android.hardware.camera2.params.inputconfiguration.getFormat（）\r\n","State of a Visualizer object that is active.":"活跃的可视化器对象的状态。\r\n","#PARAMETER_KEY_SUSPEND":"#parameter_key_suspend\r\n","The metadata key to retrieve the information about the author of\n the data source.":"检索有关作者的信息的元数据键\r\n 数据源。\r\n","android.location.LocationManager.KEY_PROXIMITY_ENTERING":"android.location.locationManager.Key_proximity_entering\r\n","android.hardware.camera2.CaptureRequest.CONTROL_AF_MODE":"android.hardware.camera2.capturerequest.control_af_mode\r\n","Override this to intercept special key multiple events before they are\n            processed by the\n            application.":"覆盖这以拦截特别关键的多个事件\r\n            由\r\n            应用。\r\n","List of hot pixel correction modes for ":"热像素校正模式列表 \r\n","A constant indicating a coarser location accuracy.":"一个常数表示位置精度更粗糙。\r\n","android.media.AudioPlaybackCaptureConfiguration":"android.media.audioplaybackcaptureconfiguration\r\n","State of a Visualizer object that is ready to be used.":"可以使用的可视化器对象的状态。\r\n","Returns event code of MTP event.":"返回MTP事件的事件代码。\r\n","Indicates that the sample is (at least partially) encrypted.":"表明样品是（至少部分）加密的。\r\n","android.hardware.SensorManager.GRAVITY_MARS":"android.hardware.sensormanager.gravity_mars\r\n","android.media.AudioFormat.CHANNEL_INVALID":"android.media.audioformat.channel_invalid\r\n","android.media.CamcorderProfile.get(int, int)":"android.media.camcorderprofile.get（int，int）\r\n","if the location is incomplete\n":"如果位置不完整\r\n\r\n","Return the height of the rectangle.":"返回矩形的高度。\r\n","3*i":"3*i\r\n","Returns the current playback parameters. -or- Sets the playback parameters.":"返回当前的播放参数。 - 或 - 设置播放参数。\r\n","android.hardware.camera2.CaptureResult.CONTROL_POST_RAW_SENSITIVITY_BOOST":"android.hardware.camera2.captureresult.control_post_raw_sensitivity_boost\r\n","android.media.MediaCodec.INFO_TRY_AGAIN_LATER":"android.media.mediacodec.info_try_again_later\r\n","android.hardware.HardwareBuffer.USAGE_GPU_CUBE_MAP":"android.hardware.hardwarebuffer.usage_gpu_cube_map\r\n","android.provider.MediaStore.Images.Thumbnails#MINI_KIND":"android.provider.mediastore.images.thumbnails＃mini_kind\r\n","android.media.AudioDeviceInfo.isSource()":"android.media.audiodeviceinfo.issource（）\r\n","A key describing the desired bitrate mode to be used by an encoder.":"描述编码器要使用的所需比特率模式的密钥。\r\n","CameraExtensionSession":"Cameraextensionsessession\r\n","android.media.MediaDrm.getPropertyByteArray(java.lang.String)":"android.media.mediadrm.getPropertybyTearray（java.lang.string）\r\n"," if this rating has the same main rating as the specified rating and when\n            this rating's sub-ratings contain the other's.":" 如果此评级具有与指定评级相同的主评级以及\r\n            该评分的子评分包含对方。\r\n","State indicating this item is currently paused.":"指示此项目的状态当前已暂停。\r\n","android.media.MediaMetadata.METADATA_KEY_DISPLAY_TITLE":"android.media.mediametadata.metadata_key_display_title\r\n","android.location.Criteria.setAccuracy(int)":"Android.Location.Criteria.setaccuracy（INT）\r\n"," output formats in this stream configuration.":" 此流配置中的输出格式。\r\n","upon codec error.":"关于编解码错误。\r\n","Event code for UNREPORTED_STATUS event":"未报告_STATUS事件的事件代码\r\n","DVB (Digital Video Broadcasting) reserved mode.":"DVB（数字视频广播）保留模式。\r\n","android.media.MediaParser.PARSER_NAME_AC4":"android.media.mediaparser.parser_name_ac4\r\n","android.hardware.camera2.params.LensShadingMap.MINIMUM_GAIN_FACTOR":"android.hardware.camera2.params.lensshadingmap.minimum_gain_factor\r\n","Gets the playback params, containing the current playback rate. -or- Sets playback rate using ":"获取包含当前播放率的播放参数。 - 或设置使用的播放率\r\n"," for a given use case.":" 对于给定的用例。\r\n","Stop receiving active sessions updates on the specified listener.":"停止在指定的侦听器上接收活动会话更新。\r\n","android.media.Ringtone.setAudioAttributes(android.media.AudioAttributes)":"android.media.ringtone.setaudioAttributes（android.media.audioAttributes）\r\n","Returns the streaming start threshold of the <code>AudioTrack</code>.":"返回<code> audiotrack </code>的流启动开始阈值。\r\n","When configured to use a Direct Proxy this returns the host\n of the proxy.":"当配置为使用直接代理时，此返回主机\r\n 代理。\r\n","android.hardware.SensorEvent.timestamp":"android.hardware.sensorevent.timestamp\r\n","android.media.browse.MediaBrowser.getExtras()":"android.media.browse.mediabrowser.getExtras（）\r\n","android.media.TimedText.getBounds()":"android.media.timedtext.getBounds（）\r\n","If this key exists the media contains audio content.":"如果此键存在，则媒体包含音频内容。\r\n","Only refresh rate switches without visual interruptions are allowed.":"仅允许无视觉中断的刷新率开关。\r\n","android.media.SoundPool.load(android.content.res.AssetFileDescriptor, int)":"android.media.soundpool.load（android.content.res.assetfiledescriptor，int）\r\n","Remove an IPsec transform from a socket.":"从插座上卸下IPSEC转换。\r\n","Tells the underlying networking system that the caller is finished\n using the named feature.":"告诉基础网络系统呼叫者完成\r\n 使用命名功能。\r\n","List of video stabilization modes for ":"视频稳定模式列表 \r\n","android.media.MediaFormat.KEY_SLICE_HEIGHT":"android.media.mediaformat.key_slice_height\r\n","android.media.MediaFormat.COLOR_RANGE_FULL":"android.media.mediaformat.color_range_full\r\n","android.media.MediaFormat.KEY_VIDEO_QP_B_MAX":"android.media.mediaformat.key_video_qp_b_max\r\n","Get the frame number associated with this result.":"获取与此结果关联的框架号。\r\n","android.media.MediaCodec.setOutputSurface(android.view.Surface)":"android.media.mediacodec.setOutputsurface（android.view.surface）\r\n","android.media.MediaMetadata.METADATA_KEY_MEDIA_ID":"android.media.mediametadata.metadata_key_media_id\r\n","Gets the supported preview fps (frame-per-second) ranges.":"获取受支持的预览FPS（每秒帧）范围。\r\n","android.hardware.camera2.params.Face.SCORE_MAX":"android.hardware.camera2.params.face.score_max\r\n","Registers a callback to discover routes and to receive events when they change.":"注册一个回调以发现路线并在更改时接收事件。\r\n","android.media.AudioTrack.ENCAPSULATION_METADATA_TYPE_DVB_AD_DESCRIPTOR":"android.media.audiotrack.encapsulation_metadata_type_dvb_ad_descriptor\r\n","android.location.GnssMeasurement.getCarrierCycles()":"android.location.gnssmeasurement.getCarrierCycles（）\r\n","A key describing the maximum expected height of the content in a video\n            decoder format, in case there are resolution changes in the video content.":"描述视频中内容最大预期高度的键\r\n            解码器格式，以防视频内容有分辨率更改。\r\n","android.media.audiofx.Visualizer.getCaptureSizeRange()":"android.media.audiofx.visualizer.getCapturesizerange（）\r\n","The method that will be called when the sensor\n            is triggered.":"传感器时将调用的方法\r\n            被触发。\r\n"," corresponding to the media time\n            in nanoseconds.":" 对应于媒体时间\r\n            在纳秒中。\r\n","klass":"Klass\r\n","android.location.LocationManager.addNmeaListener(android.location.NmeaListener)":"android.location.locationManager.Addnmealistener（android.location.nmealistener）\r\n","State of an AudioTrack that is ready to be used.":"准备使用的录音带状态。\r\n","Writes the audio data to the audio sink for playback in streaming mode on a HW_AV_SYNC track.":"将音频数据写入音频接收器，以在HW_AV_SYNC轨道上以流式模式进行播放。\r\n","If the media contains video, this key retrieves its width.":"如果媒体包含视频，则此键会检索其宽度。\r\n","Register for location updates from the given provider with the given arguments, and a\n            callback on the specified ":"注册给定提供商的位置更新，并带有给定参数，\r\n            指定的回调\r\n","android.media.audiofx.PresetReverb.PRESET_LARGEROOM":"android.media.audiofx.presetreverb.preset_largeroom\r\n","Get the icon representing this route.":"获取代表这条路线的图标。\r\n","android.net.VpnManager.provisionVpnProfile(android.net.PlatformVpnProfile)":"android.net.vpnmanager.provisionvpnprofile（android.net.platformvpnprofile）\r\n","Indicates this session supports the play from search command.":"指示此会话支持搜索命令的播放。\r\n","android.media.AudioDeviceInfo.isSink()":"android.media.audiodeviceinfo.issink（）\r\n","android.media.ExifInterface.TAG_GPS_SPEED":"android.media.exifinterface.tag_gps_speed\r\n","Returns true if a latitude has been assigned to this Address,\n            false otherwise.":"如果已分配给该地址的纬度，则返回true，\r\n            否则为错误。\r\n","Determine if this is a reprocess capture request.":"确定这是否是重新处理捕获请求。\r\n","android.hardware.usb.UsbDeviceConnection.releaseInterface(android.hardware.usb.UsbInterface)":"android.hardware.usb.usbdeviceconnection.releaseinterface（android.hardware.usb.usbinterface）\r\n","android.media.MediaRoute2Info.isSystemRoute()":"android.media.mediaroute2info.issystemroute（）\r\n","Retrieves the video frame rate hint.":"检索视频帧速率提示。\r\n","android.media.MicrophoneInfo.getDirectionality()":"android.media.microphoneinfo.getDirectionality（）\r\n","Return number of bytes received since device boot.":"自设备启动以来收到的字节的返回号码。\r\n","android.hardware.camera2.CaptureRequest.SENSOR_TEST_PATTERN_MODE":"android.hardware.camera2.capturerequest.sensor_test_pattern_mode\r\n","android.media.AudioManager.setMode(int)":"android.media.audiomanager.setmode（int）\r\n","The constant to indicate that the user is uncertain with respect to a\n            geofence.":"表明用户相对于一个不确定的常数\r\n            地理林。\r\n","android.media.MediaActionSound.START_VIDEO_RECORDING":"android.media.mediaactionsound.start_video_recording\r\n","android.mtp.MtpConstants.OPERATION_GET_PARTIAL_OBJECT":"android.mtp.mtpconstants.operation_get_partial_object\r\n","android.media.metrics.TrackChangeEvent.TRACK_TYPE_VIDEO":"android.media.metrics.trackchangeevent.track_type_video\r\n","android.mtp.MtpEvent.getParameter2()":"android.mtp.mtpevent.getParameter2（）\r\n"," for the specified port number.":" 对于指定的端口号。\r\n","android.hardware.ConsumerIrManager.CarrierFrequencyRange":"android.hardware.consumerirmanager.carrierfrequencyrange\r\n","MediaScannerConnection provides a way for applications to pass a\n            newly created or downloaded media file to the media scanner service.":"MediaScannerConnection为应用程序提供了一种通过\r\n            新创建或下载的媒体文件到媒体扫描仪服务。\r\n","android.hardware.usb.UsbConstants":"android.hardware.usb.usbconstants\r\n","Creates a new session.":"创建一个新的会话。\r\n","The event to indicate that the status of CAS system is changed by the removal or insertion of\n            physical CAS modules.":"表明CAS系统状态的事件通过删除或插入更改\r\n            物理CAS模块。\r\n","android.media.MediaFormat.KEY_GRID_ROWS":"android.media.mediaformat.key_grid_rows\r\n","Network type which triggered a ":"网络类型触发了\r\n","Playback is abandoned before reaching the end of the media.":"播放在到达媒体结束之前就被放弃了。\r\n","#TONE_CDMA_HIGH_S_X4":"＃tone_cdma_high_s_x4\r\n","Query the camera extension capabilities of a camera device.":"查询相机设备的相机扩展功能。\r\n","True if provider requires access to a data network (e.":"如果提供商需要访问数据网络（e。\r\n","android.mtp.MtpDevice.getDeviceId()":"android.mtp.mtpdevice.getdeviceid（）\r\n","android.media.tv.TvView.setZOrderMediaOverlay(boolean)":"android.media.tv.tv.tview.setzordermediaoverlay（布尔值）\r\n","android.location.Criteria.setCostAllowed(boolean)":"Android.Location.Criteria.setCostlowered（布尔）\r\n","android.media.metrics.TrackChangeEvent.TRACK_CHANGE_REASON_MANUAL":"android.media.metrics.trackchangeevent.track_change_reason_manual\r\n","Query if the given scheme identified by its UUID is supported on\n            this device, and whether the DRM plugin is able to handle the\n            media container format specified by mimeType.":"查询如果支持其UUID确定的给定方案\r\n            该设备以及DRM插件是否能够处理\r\n            MIMETYPE指定的媒体容器格式。\r\n","if the destination vector is too small.":"如果目标向量太小。\r\n","Returns the interface's class field.":"返回接口的类字段。\r\n","Gets stream source type.":"获取流源类型。\r\n","The camera device supports frame timestamp synchronization at the hardware level,\n            and the timestamp of a physical stream image accurately reflects its\n            start-of-exposure time.":"相机设备在硬件级别上支持框架时间戳同步，\r\n            物理流图像的时间戳准确地反映了它的\r\n            暴露时间。\r\n","android.location.LocationManager.getLastKnownLocation(java.lang.String)":"android.location.locationmanager.getlastnoylocation（java.lang.string）\r\n","android.media.tv.TvRecordingClient.TvRecordingClient(android.content.Context, java.lang.String, android.media.tv.RecordingCallback, android.os.Handler)":"android.media.tv.tvrecordingclient.tvrecordingclient（android.content.context，java.lang.string，android.media.tv.recordingcallback，android.os.os.handler）\r\n","#FLAG_KEY_MEDIA_REWIND":"#flag_key_media_rewind\r\n","android.media.MediaPlayer.prepareDrm(java.util.UUID)":"android.media.mediaplayer.preparedrm（java.util.uuid）\r\n","android.location.GpsStatus.getSatellites()":"android.location.gpsstatus.getSatellites（）\r\n","Android.Media.Audiofx.Virtualizer.VIRTUALIZATION_MODE_TRANSAURAL":"android.media.audiofx.virtualizer.virtualization_mode_transaural\r\n","android.media.RemoteControlClient.PLAYSTATE_FAST_FORWARDING":"android.media.remotecontrolclient.playstate_fast_forwarding\r\n","android.media.midi.MidiDeviceInfo.getPorts()":"android.media.midi.midideviceinfo.getports（）\r\n","Stops TV program recording in the current recording session.":"在当前录制会话中停止电视节目录制。\r\n","android.hardware.usb.UsbDevice.getVendorId()":"android.hardware.usb.usbdevice.getVendorid（）\r\n","2G network":"2G网络\r\n","android.media.audiofx.Virtualizer.PARAM_STRENGTH_SUPPORTED":"android.media.audiofx.virtualizer.param_strength_supported\r\n","Deletes an object on the device.":"删除设备上的对象。\r\n","#TONE_CDMA_ALERT_NETWORK_LITE":"#TONE_CDMA_ALERT_NETWORK_LITE\r\n","CaptureRequest#STATISTICS_LENS_SHADING_MAP_MODE android.statistics.lensShadingMapMode":"capturerequest＃statistics_lens_shading_map_mode android.statistics.lensshadingmapmode\r\n","android.net.TrafficStats.untagFileDescriptor(java.io.FileDescriptor)":"android.net.trafficstats.untagfiledscriptor（java.io.filedscriptor）\r\n","android.hardware.SensorManager.unregisterListener(android.hardware.SensorListener, int)":"机器人。硬件。SensorManager。unregisterListener（android。硬件。SensorListener，int）\r\n","android.location.Address.setUrl(java.lang.String)":"android.location.address.seturl（java.lang.string）\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_DURATION":"android.media.mediametadataretriever.metadata_key_duration\r\n","The metadata key to retrieve the information about the author of\n            the data source.":"检索有关作者的信息的元数据键\r\n            数据源。\r\n","\n            instance.":"\r\n            实例。\r\n","android.media.MediaDrm.SECURITY_LEVEL_UNKNOWN":"android.media.mediadrm.security_level_unknown\r\n","android.hardware.display.VirtualDisplay.setSurface(android.view.Surface)":"android.hardware.display.virtualdisplay.setsurface（android.view.surface）\r\n","Create a new reader for images of the desired size, format and consumer usage flag.":"为所需尺寸，格式和消费者使用标志的图像创建新的读取器。\r\n","Returns the text value associated with the given key as a String, or null\n            if no mapping of the desired type exists for the given key or a null\n            value is explicitly associated with the key.":"返回与给定键关联为字符串或null关联的文本值\r\n            如果给定的键或空的未存在所需类型的映射\r\n            值与密钥明确关联。\r\n","CaptureRequest.Builder":"Capturerequest.builder\r\n"," traffic originating\n            from the current thread. -or- Set active tag to use when accounting ":" 交通原始\r\n            从当前线程。 - 或设置会计时使用的活动标签\r\n","RemoteController":"遥控器\r\n","Stream from network.":"从网络流。\r\n","android.media.ImageReader.setOnImageAvailableListener(android.media.OnImageAvailableListener, android.os.Handler)":"android.media.imagereader.setonimageavailablistener（android.media.onimageavailablelistener，android.os.handler）\r\n","Sets the audio session ID.":"设置音频会话ID。\r\n","android.location.GnssMeasurement.MULTIPATH_INDICATOR_UNKNOWN":"android.location.gnssmeasurement.multipath_indicator_unknown\r\n","Quality level corresponding to the cif (352 x 288) resolution.":"质量水平对应于CIF（352 x 288）分辨率。\r\n","AudioRecord":"录音带\r\n","A key describing the number of haptic channels in an audio format.":"一个以音频格式描述触觉通道数量的键。\r\n","Communicate additional parameter changes to the component instance.":"将其他参数更改与组件实例传达。\r\n","Use this constant as the value for audioStreamType to request that\n the default stream type for notifications be used. ":"使用此常数作为AudioStreamType的值\r\n 用于通知的默认流类型。\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_EXIF_LENGTH":"android.media.mediametadataretriever.metadata_key_exif_length\r\n","android.media.audiofx.Visualizer.getCaptureSize()":"android.media.audiofx.visualizer.getCapturesize（）\r\n","android.media.MediaFormat.KEY_PREPEND_HEADER_TO_SYNC_FRAMES":"android.media.mediaformat.key_prepend_header_to_sync_frames\r\n","Retrieves the maximum MTU set for this VPN profile.":"检索此VPN配置文件的最大MTU集。\r\n","android.hardware.camera2.CameraMetadata.SCALER_ROTATE_AND_CROP_180":"android.hardware.camera2.camerametadata.scaler_rotate_and_crop_180\r\n","Sets the volume index for a particular stream.":"为特定流设置卷索引。\r\n","if provider is null\n":"如果提供商为null\r\n\r\n","android.media.MediaExtractor.setDataSource(java.lang.String, java.util.Map)":"android.media.mediaextractor.setdatasource（java.lang.string，java.util.map）\r\n","#ERROR_INVALID_OPERATION":"#Error_invalid_operation\r\n","#getPropertyString":"#getPropertystring\r\n","android.mtp.MtpConstants.OPERATION_MOVE_OBJECT":"android.mtp.mtpconstants.operation_move_object\r\n","Query the infrared transmitter's supported carrier frequencies":"查询红外发射器的支撑载体频率\r\n","F:Android.Media.MediaRouter+UserRouteInfo.SetPlaybackType":"f：android.media.mediarouter+userrouteinfo.setplaybacktype\r\n","Returns a list of the names of available location providers.":"返回可用位置提供商名称的列表。\r\n","android.media.metrics.PlaybackMetrics.getLocalBytesRead()":"android.media.metrics.playbackmetrics.getlocalbytesread（）\r\n","android.media.metrics.NetworkEvent.NETWORK_TYPE_5G_NSA":"android.media.metrics.networkevent.network_type_5g_nsa\r\n","android.media.DrmInitData.getSchemeInitDataCount()":"android.media.drminitdata.getschemeinitdatacount（）\r\n","Error code for a failure while provisioning the device":"配置设备时故障的错误代码\r\n","Specifies the logical microphone (for processing).":"指定逻辑麦克风（用于处理）。\r\n","android.location.GnssNavigationMessage.TYPE_GLO_L1CA":"android.location.gnssnavigationmessage.type_glo_l1ca\r\n","Returns the effective size of the <code>AudioTrack</code> buffer\n            that the application writes to.":"返回<code> audiotrack </code>缓冲区的有效尺寸\r\n            该应用程序写入。\r\n","CDMA HIGH SS2 tone: {3700Hz 25ms, 4000Hz 25ms} 20 times,\n 1000ms OFF, {3700Hz 25ms, 4000Hz 25ms} 20 times,\n 3000ms OFF, repeat ....":"CDMA高SS2音调：{3700Hz 25ms，4000Hz 25ms} 20次，\r\n 1000ms关闭，{3700Hz 25ms，4000Hz 25ms} 20次，\r\n 3000毫秒左右，重复...\r\n","android.media.MediaRouter2.getRoutes()":"android.media.mediarouter2.getRoutes（）\r\n","Constellation type constant for GPS.":"GPS的星座类型常数。\r\n","android.media.ExifInterface.getThumbnailBitmap()":"android.media.exifinterface.getThumbNailbitMap（）\r\n","This class encapsulates information about a MTP event.":"此类封装有关MTP事件的信息。\r\n","Cancels previous communication device selection made with\n            ":"取消以前的通信设备选择\r\n            \r\n","android.net.Ikev2VpnProfile.getMaxMtu()":"android.net.ikev2vpnprofile.getmaxmtu（）\r\n","Processed images are rotated by 90 degrees clockwise, and then cropped\n            to the original aspect ratio.":"处理的图像顺时针旋转90度，然后裁剪\r\n            达到原始纵横比。\r\n","android.media.session.PlaybackState.STATE_CONNECTING":"android.media.session.playbackstate.state_connecting\r\n","F:Android.Media.MediaCodec+CryptoInfo.Set":"F：android.media.mediacodec+cryptoinfo.set\r\n","Returns the main rating of this ":"返回主要评分\r\n","#setRecordPositionUpdateListener(OnRecordPositionUpdateListener, Handler)":"#setRecordPositionUpDateListener（OnreCordPositionUpDateListener，处理程序）\r\n","A regular session type containing instances of ":"常规会议类型，包含\r\n","android.media.CamcorderProfile.QUALITY_HIGH_SPEED_CIF":"android.media.camcorderprofile.quality_high_speed_cif\r\n","android.location.GnssMeasurement.getPseudorangeRateUncertaintyMetersPerSecond()":"android.location.gnssmeasurement.getPseudorangerateNuncerneTytyMetersperspersecond（）\r\n","android.media.effect.EffectFactory.EFFECT_ROTATE":"android.media.effect.effectfactory.effect_rotate\r\n","android.hardware.SensorAdditionalInfo.TYPE_SAMPLING":"android.hardware.sensoradditionalinfo.type_sampling\r\n","This method has no effect as provider status has been deprecated and is no longer supported.":"该方法没有效果，因为提供者状态已被贬低，不再支持。\r\n","Checks if the combination of a channel mask and virtualization mode is supported by this\n virtualizer.":"检查频道掩码和虚拟化模式的组合是否由此支持\r\n 虚拟器。\r\n","android.hardware.camera2.CameraDevice.createCaptureSessionByOutputConfigurations(java.util.List, android.hardware.camera2.StateCallback, android.os.Handler)":"android.hardware.camera2.CameradeVice.CreateCapturesessionsessession byoutputConfigurations（java.util.list，android.hardware.camera.camera2.statecallback，android.os.handler）\r\n","android.media.MicrophoneInfo.DIRECTIONALITY_BI_DIRECTIONAL":"android.media.microphoneinfo.directionality_bi_directional\r\n","android.hardware.camera2.CaptureResult.CONTROL_AE_ANTIBANDING_MODE":"android.hardware.camera2.captureresult.control_ae_antibanding_mode\r\n","android.location.GnssCapabilities":"android.location.gnsscapabilities\r\n","List of noise reduction modes for ":"降噪模式列表\r\n","android.media.RemoteControlClient.FLAG_KEY_MEDIA_PAUSE":"android.media.remotecontrolclient.flag_key_media_pause\r\n","Called when the input view is being shown and input has started on\n            a new editor.":"显示输入视图并开始输入时调用\r\n            新编辑器。\r\n"," of the corresponding player.":" 相应的玩家。\r\n","Create a thumbnail for given video file.":"为给定的视频文件创建缩略图。\r\n","android.hardware.usb.UsbManager.openAccessory(android.hardware.usb.UsbAccessory)":"android.hardware.usb.usbmanager.openaccessory（android.hardware.usb.usbaccessory）\r\n","Audio data format: DTS UHD compressed":"音频数据格式：DTS UHD压缩\r\n","Type is double.":"类型是双重的。\r\n","android.media.metrics.PlaybackMetrics.getDrmType()":"android.media.metrics.playbackmetrics.getdrmtype（）\r\n","android.hardware.SensorManager.GRAVITY_PLUTO":"android.hardware.sensormanager.gravity_pluto\r\n","android.hardware.HardwareBuffer.USAGE_GPU_MIPMAP_COMPLETE":"android.hardware.hardwarebuffer.usage_gpu_mipmap_complete\r\n","Convenience method to add a DNS server to the VPN connection\n using a numeric address string.":"便利方法将DNS服务器添加到VPN连接\r\n 使用数字地址字符串。\r\n","android.media.ExifInterface.TAG_SHUTTER_SPEED_VALUE":"android.media.exifinterface.tag_shutter_speed_value\r\n","Identical to ":"相同于 \r\n","Checks whether a given TV content rating is blocked by the user.":"检查给定的电视内容额定值是否被用户阻止。\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_PIXEL_ARRAY_SIZE":"android.hardware.camera2.cameracharacteristics.sensor_info_pixel_array_size\r\n","\n            indicating that the SCO audio channel is established":"\r\n            表示已建立了SCO音频频道\r\n","android.mtp.MtpEvent.EVENT_DEVICE_INFO_CHANGED":"android.mtp.mtpevent.event_device_info_changed\r\n","Resume all previously active streams.":"恢复所有以前活跃的流。\r\n","android.location.GnssMeasurement.STATE_BDS_D2_BIT_SYNC":"android.location.gnssmeasurement.state_bds_d2_bit_sync\r\n","Return a list of supported device-specific extensions for a given camera device.":"返回给定相机设备的受支持的设备特定扩展名列表。\r\n","Information to the camera device 3A (auto-exposure,\n            auto-focus, auto-white balance) routines about the purpose\n            of this capture, to help the camera device to decide optimal 3A\n            strategy.":"信息到相机设备3A（自动暴露，，\r\n            自动焦点，自动白色余额）关于目的的例程\r\n            在此捕获中，以帮助相机设备决定最佳3A\r\n            战略。\r\n","android.net.VpnService.isLockdownEnabled()":"android.net.vpnservice.islockdownenabled（）\r\n","Gets the total number of satellites in satellite list.":"获取卫星列表中的卫星总数。\r\n","android.media.MediaDescription.BT_FOLDER_TYPE_ALBUMS":"android.media.mediadescription.bt_folder_type_albums\r\n","android.media.ImageWriter.getFormat()":"android.media.imagewriter.getFormat（）\r\n","android.media.MediaParser.PARSER_NAME_OGG":"android.media.mediaparser.parser_name_ogg\r\n","android.hardware.SensorAdditionalInfo.floatValues":"android.hardware.sensoradditionalinfo.floatvalues\r\n"," when the type of content played is music":" 当播放的内容类型是音乐时\r\n","android.media.metrics.Event.getMetricsBundle()":"android.media.metrics.event.getMetricsBundle（）\r\n","Operating mode for the face detector\n            unit.":"面部探测器的操作模式\r\n            单元。\r\n","The multi-resolution stream configurations supported by this logical camera\n            or ultra high resolution sensor camera device.":"该逻辑相机支持的多分辨率流配置\r\n            或超高分辨率传感器相机设备。\r\n","Whether auto-white balance (AWB) is currently locked to its\n            latest calculated values.":"当前是否将自动白余额（AWB）锁定到其\r\n            最新计算值。\r\n","android.media.session.PlaybackState.STATE_REWINDING":"android.media.session.playbackstate.state_rewinding\r\n"," and free allocated resources.":" 和免费分配的资源。\r\n","List of distortion correction modes for ":"失真校正模式列表 \r\n","android.hardware.camera2.CaptureRequest.TONEMAP_CURVE":"android.hardware.camera2.capturerequest.tonemap_curve\r\n","android.media.MediaPlayer.setPlaybackParams(android.media.PlaybackParams)":"android.media.mediaplayer.setplaybackparams（android.media.playbackparams）\r\n","RoutingController":"RoutingController\r\n","AudioManager#registerAudioDeviceCallback":"听众＃registeraudiodevicecallback\r\n","#TONE_CDMA_LOW_SS":"#TONE_CDMA_LOW_SS\r\n","android.hardware.Sensor.STRING_TYPE_HINGE_ANGLE":"android.hardware.sensor.string_type_hinge_angle\r\n"," if GNSS chipset supports antenna info, ":" 如果GNSS芯片组支持天线信息，\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_UNKNOWN":"android.media.metrics.playbackerrorevent.error_unknown\r\n","Return the frame size in bytes.":"返回字节中的帧大小。\r\n","android.hardware.camera2.CaptureFailure.getFrameNumber()":"android.hardware.camera2.capturefailure.getFramenumber（）\r\n","#DUAL_MONO_MODE_LR":"#dual_mono_mode_lr\r\n","Unregisters the existing ":"解开现有的\r\n","android.media.Session2CommandGroup":"android.media.session2CommandGroup\r\n","Set an icon that will be used to represent this route.":"设置将用于表示此路线的图标。\r\n","android.util.Pair":"android.util.pair\r\n","Sets the listener to be called whenever the metadata is updated.":"每当更新元数据时，将侦听器设置为调用。\r\n","android.media.MicrophoneInfo.DIRECTIONALITY_SUPER_CARDIOID":"android.media.microphoneinfo.directionality_super_cardioid\r\n","Flag indicating a RemoteControlClient makes use of the \"fast forward\" media key.":"指示RemoteControlclient的标志利用了“快进”媒体密钥。\r\n","Returns the type of the device.":"返回设备的类型。\r\n","18":"18\r\n","android.media.tv.TvInputInfo.isPassthroughInput()":"android.media.tv.tvinputinfo.ispassthroughinput（）\r\n","The desired lens aperture size, as a ratio of lens focal length to the\n            effective aperture diameter.":"所需的镜头孔径大小，作为镜头焦距的比率\r\n            有效的孔径直径。\r\n","android.hardware.camera2.CameraExtensionCharacteristics.getSupportedExtensions()":"android.hardware.camera2.CameraExtensionCharacteristics.getSupportedExtensions（）\r\n","Sets the listener AudioEffect notifies when the effect engine is enabled\n or disabled.":"设置侦听器音频效应在启用效果引擎时通知\r\n 或禁用。\r\n","android.media.tv.TvInputManager.VIDEO_UNAVAILABLE_REASON_CAS_CARD_MUTE":"android.media.tv.tvinputmanager.video_unavailable_reason_cas_card_mute\r\n"," effect is enabled or not.":" 效果是否启用。\r\n","Query if the codec is hardware accelerated.":"查询是否加速了编解码器。\r\n","Returns domain-specific extras associated with this TV input.":"与此电视输入相关的返回特定于域的附加功能。\r\n","#isCryptoSchemeSupported(UUID, String)":"#iscryptoschemesupported（uuid，string）\r\n","android.media.metrics.TrackChangeEvent.getChannelCount()":"android.media.metrics.trackchangeevent.getchannelcount（）\r\n","Sets parser-specific parameters which allow customizing behavior.":"设置特定于解析器的参数，允许自定义行为。\r\n","android.media.ExifInterface.TAG_GAIN_CONTROL":"android.media.exifinterface.tag_gain_control\r\n","android.location.GnssNavigationMessage.TYPE_UNKNOWN":"android.location.gnssnavigationmessage.type_unknown\r\n","Returns whether offloaded playback of an audio format is supported on the device or not and\n            when supported whether gapless transitions are possible or not.":"返回设备上是否支持音频格式的卸载播放和\r\n            当支持无间隙转换是否可能发生时。\r\n","android.hardware.camera2.CaptureRequest.CONTROL_AE_PRECAPTURE_TRIGGER":"android.hardware.camera2.capturerequest.control_ae_precapture_trigger\r\n","elements":"元素\r\n","Extended scene mode is disabled.":"扩展场景模式被禁用。\r\n","Density. ":"密度。\r\n","Returns the current enabled/disabled state of location.":"返回当前启用/禁用位置状态。\r\n","android.net.TrafficStats.clearThreadStatsUid()":"android.net.trafficstats.clearthreadstatsuid（）\r\n","Determine whether or not the ":"确定是否\r\n","android.net.SSLCertificateSocketFactory.createSocket(java.lang.String, int)":"android.net.sslcertificatesocketFactory.createsocket（java.lang.string，int）\r\n","Duration each pixel is exposed to\n            light.":"持续时间每个像素暴露于\r\n            光。\r\n"," has been reported by the\n            GNSS hardware.":" 已报告\r\n            GNSS硬件。\r\n","Submit a request for device-specific processing using input\n            from the camera device, to produce a single high-quality output result.":"使用输入提交特定设备处理的请求\r\n            从相机设备产生一个高质量的输出结果。\r\n","Overlays a bitmap (with premultiplied alpha channel) onto the input image.":"覆盖位图（带有较小的alpha通道）到输入图像上。\r\n","MediaFormat#KEY_AUDIO_SESSION_ID":"MediaFormat＃key_audio_session_id\r\n","android.media.Session2Token.getUid()":"android.media.session2token.getuid（）\r\n","when the geofence request type is not supported.\n":"当不支持Geofence请求类型时。\r\n\r\n","android.media.MediaFormat.KEY_CAPTURE_RATE":"android.media.mediaformat.key_capture_rate\r\n","android.location.LocationManager.requestLocationUpdates(long, float, android.location.Criteria, java.util.concurrent.Executor, android.location.LocationListener)":"android.location.LocationManager.RequestLocationUpdates（long，float，android.location.Criteria，java.util.concurrent.executor，android.location.location.location.locationlistener）\r\n","android.location.GnssNavigationMessage.TYPE_BDS_CNAV1":"android.location.gnssnavigationmessage.type_bds_cnav1\r\n","Returns the size of the MTP object's thumbnail\n            Will be zero for objects with no thumbnail":"返回MTP对象的缩略图的大小\r\n            对于没有缩略图的物体将为零\r\n","The metadata key for the content artwork / album art.":"内容艺术品 /专辑艺术的元数据密钥。\r\n","The track is on.":"轨道已经打开。\r\n","Utilities for generating visual thumbnails from files.":"从文件中生成视觉缩略图的实用程序。\r\n","Playback is suppressed (e.":"播放被抑制（e。\r\n","RoutingController routing controllers":"RutingController路由控制器\r\n","android.media.MediaPlayer.setOnMediaTimeDiscontinuityListener(android.media.OnMediaTimeDiscontinuityListener)":"android.media.mediaplayer.setonMediatimimedIscontinuityListener（android.media.onmediatimidimediscontinuityListener）\r\n","UUID for environmental reverberation effect":"环境混响效果的UUID\r\n","Advanced Encryption System (AES) Electronic Code Book (ECB) mode.":"高级加密系统（AES）电子代码簿（ECB）模式。\r\n","Remove an IPsec transform from a datagram socket.":"从数据报套接字中删除IPSEC变换。\r\n","android.media.AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE":"android.media.audiomanager.audiofocus_gain_transient_exclusive\r\n","android.media.tv.TvRecordingClient.resumeRecording(android.os.Bundle)":"android.media.tv.tvrecordingclient.Resumerecording（android.os.bundle）\r\n","android.media.midi.MidiDeviceInfo.getType()":"android.media.midi.midideviceinfo.getType（）\r\n","android.media.ImageWriter":"android.media.imageWriter\r\n","Playback state for a ":"播放状态\r\n","Send the specified media button event to the session.":"将指定的媒体按钮事件发送到会话。\r\n","android.media.MediaMetadata.METADATA_KEY_RATING":"android.media.mediametadata.metadata_key_rating\r\n"," and its specific\n            configuration for creating capture session.":" 及其具体\r\n            用于创建捕获会话的配置。\r\n","android.media.MicrophoneDirection.MIC_DIRECTION_TOWARDS_USER":"android.media.microphonedirection.mic_direction_towards_user\r\n","android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL ":"android.hardware.camera2.cameracharacteristics＃info_supported_hardware_level\r\n","android.media.AudioManager.PROPERTY_OUTPUT_SAMPLE_RATE":"android.media.audiomanager.property_output_sample_rate\r\n","android.net.NetworkSpecifier.NetworkSpecifier()":"android.net.networkspecifier.networkspecifier（）\r\n","android.media.JetPlayer.clone()":"android.media.jetplayer.clone（）\r\n","android.media.ImageReader.newInstance(int, int, int, int)":"android.media.imagereader.newinstance（int，int，int，int）\r\n","if the FileDescriptor is invalid\n":"如果备案者无效\r\n\r\n","Flush pending images from all internal ImageReaders":"来自所有内部成像研究员的齐平图像\r\n","Returns true if the GPS engine has ephemeris data for the satellite.":"如果GPS发动机具有卫星的埃菲默里斯数据，则返回true。\r\n","Contains the package name of the calling application.":"包含调用应用程序的软件包名称。\r\n","MidiManager#openDevice":"Midimanager＃Opendevice\r\n","android.location.LocationManager.getProviderProperties(java.lang.String)":"android.location.locationmanager.getProviderProperties（java.lang.string）\r\n","android.media.ApplicationMediaCapabilities.isVideoMimeTypeSupported(java.lang.String)":"android.media.ApplicationMediacapabilities.isvideMimetypespulported（java.lang.string）\r\n","android.media.AudioFormat.ENCODING_MPEGH_BL_L4":"android.media.audioformat.encoding_mpegh_bl_l4\r\n","Indicates this session supports the play from media id command.":"指示此会话支持媒体ID命令的播放。\r\n","#switchToOffline":"#switchtooffline\r\n","android.inputmethodservice.InputMethodService.requestHideSelf(int)":"android.inputmethodservice.inputmethodservice.requesthideself（int）\r\n","MIME type for MPEG-H Audio single stream, encapsulated in MHAS":"MPEG-H音频单流的MIME类型，封装在MHA中\r\n","Request an informative description of the key status for the session.":"请求有关会话的关键状态的信息描述。\r\n","#getPlaybackOffloadSupport(AudioFormat, AudioAttributes)":"#getPlayBackoffloadSupport（AudioOforMat，AudioAttributes）\r\n"," instance to this AudioRecord for metrics collection.":" 实例到此AudiOrecord进行指标集合。\r\n","Unregisters the remote control client that was providing information to display on the\n            remote controls.":"解开远程控制客户端，该客户端提供的信息要在\r\n            遥控器。\r\n","android.hardware.camera2.CameraCharacteristics.TONEMAP_MAX_CURVE_POINTS":"android.hardware.camera2.cameracharacteristics.tonemap_max_curve_points\r\n","View#INVISIBLE View.INVISIBLE":"查看＃隐形视图。\r\n","android.media.AudioTrack.setAudioDescriptionMixLeveldB(float)":"android.media.audiotrack.setaudiodescriptionmixleveldb（float）\r\n","#registerAudioRecordingCallback(Executor, AudioManager.AudioRecordingCallback)":"#RegisterAudiorecordingCallback（executor，audiomanager.audiorecordingcallback）\r\n","#TONE_CDMA_NETWORK_BUSY_ONE_SHOT":"#TONE_CDMA_NETWORK_BUSY_ONE_SHOT\r\n","Constellation type constant for Glonass.":"星座类型常数用于Glonass。\r\n","Used to indicate no audio focus has been gained or lost, or requested.":"用来表明没有获得或丢失或要求的音频焦点。\r\n","Returns information about the device's ports.":"返回有关设备端口的信息。\r\n","android.net.SSLCertificateSocketFactory.setKeyManagers(javax.net.ssl.KeyManager[])":"android.net.sslcertificateAcceTocketFactory.setKeyManagers（javax.net.ssl.keymanager []）\r\n","#RATING_HEART":"#rating_heart\r\n","android.media.MediaFormat.containsFeature(java.lang.String)":"android.media.mediaformat.containsfeature（java.lang.string）\r\n","Returns the minimum volume index for a particular stream.":"返回特定流的最小音量索引。\r\n","A constant string describing a relative humidity sensor type":"描述相对湿度传感器类型的常数字符串\r\n","USB class for human interface devices (for example, mice and keyboards).":"人类界面设备的USB类（例如，鼠标和键盘）。\r\n","android.location.LocationManager.setTestProviderEnabled(java.lang.String, boolean)":"android.location.locationManager.setTestProviderEnabled（java.lang.string，boolean）\r\n","The WIFI data connection. ":"WiFi数据连接。\r\n","Return the currently selected route for any of the given types":"返回任何给定类型的当前选择的路线\r\n","This Galileo measurement's tracking state has E1C secondary code lock.":"该Galileo测量的跟踪状态具有E1C二级代码锁。\r\n","android.hardware.camera2.CameraMetadata.REQUEST_AVAILABLE_CAPABILITIES_SYSTEM_CAMERA":"android.hardware.camera2.camerametadata.request_available_capabilities_system_camera\r\n","android.media.AudioTrack.setVolume(float)":"android.media.audiotrack.setvolume（float）\r\n","Get the surface that is used as a target for ":"获取被用作目标的表面\r\n","android.media.ExifInterface.TAG_MODEL":"android.media.exifinterface.tag_model\r\n","android.media.TimedText":"android.media.timedText\r\n","Gets the data of the reported GPS message.":"获取报告的GPS消息的数据。\r\n","android.location.LocationProvider.requiresNetwork()":"android.location.locationprovider.requiresnetwork（）\r\n","android.net.Ikev2VpnProfile.getPassword()":"android.net.ikev2vpnprofile.getPassword（）\r\n","Unregister an audio playback callback previously registered with\n            ":"取消先前注册的音频回调回调\r\n            \r\n","The compilation status of the media.":"媒体的汇编状态。\r\n","android.media.MediaParser.PARSER_NAME_ADTS":"android.media.mediaparser.parser_name_adts\r\n","Registers a display listener to receive notifications about when\n            displays are added, removed or changed.":"注册显示听众以接收有关何时的通知\r\n            添加，删除或更改显示器。\r\n","Return a network-type-specific integer describing the subtype\n of the network.":"返回一个描述子类型的网络类型的整数\r\n 网络。\r\n","Instantiate a new client session for the input method, by calling\n back to ":"通过调用来实例化输入方法的新客户会话\r\n 回到\r\n","Sets whether constant bitrate seeking should be enabled for ADTS parsing.":"设置是否应启用不断的比特率寻求ADTS解析。\r\n","Attaches an auxiliary effect to the player.":"将辅助效果附加到玩家。\r\n","Unregisters a GNSS Navigation Message callback.":"解开GNSS导航消息回调。\r\n","Contains metadata about an item, such as the title, artist, etc.":"包含有关项目的元数据，例如标题，艺术家等。\r\n","Remove a previously-added callback; the callback will no longer receive connection and\n            disconnection callbacks.":"删除先前的回调；回调将不再接收连接，并且\r\n            断开回调。\r\n","android.media.audiofx.Visualizer.getEnabled()":"android.media.audiofx.visualizer.getEnabled（）\r\n","android.location.LocationRequest.getDurationMillis()":"android.location.locationrequest.getDurationMillis（）\r\n","android.hardware.location.GeofenceHardwareRequest.setNotificationResponsiveness(int)":"android.hardware.location.geofencehardwarerequest.setnotification responsivessices（int）\r\n","android.media.MediaMetadata.METADATA_KEY_YEAR":"android.media.mediametadata.metadata_key_year\r\n","Called on the listener to periodically notify it that the record head has reached\n a multiple of the notification period.":"要求听众定期通知唱片头已经到达\r\n 通知期的倍数。\r\n","if coordinate is null":"如果坐标为null\r\n","Query if the crypto scheme requires the use of a secure decoder\n            to decode data of the given mime type at the given security level.":"查询如果加密方案需要使用安全解码器\r\n            在给定的安全级别上解码给定的MIME类型的数据。\r\n","android.media.MediaPlayer.clearOnMediaTimeDiscontinuityListener()":"android.media.mediaplayer.clearonmediatimimediscontinuityListener（）\r\n","android.media.AudioManager.getAudioHwSyncForSession(int)":"android.media.audiomanager.getaudiohwsyncforsession（int）\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_ACTIVE_ARRAY_SIZE_MAXIMUM_RESOLUTION":"android.hardware.camera2.cameracharacteristics.sensor_info_active_array_size_maximum_resolution\r\n","android.inputmethodservice.KeyboardView.invalidateAllKeys()":"android.inputmethodservice.keyboardview.invalidateallkeys（）\r\n","android.media.MediaDrm.SECURITY_LEVEL_HW_SECURE_CRYPTO":"android.media.mediadrm.security_level_hw_secure_crypto\r\n","Performs a bulk transaction on the given endpoint.":"在给定端点上执行批量交易。\r\n","android.net.TrafficStats.getThreadStatsTag()":"android.net.trafficstats.getThreadstatstag（）\r\n","android.media.Session2Token.TYPE_SESSION_SERVICE":"android.media.session2token.type_session_service\r\n","Aimed to return the previous input method's ":"旨在返回以前的输入方法的\r\n","Returns the ID of the device.":"返回设备的ID。\r\n","android.media.AudioManager.ACTION_SPEAKERPHONE_STATE_CHANGED":"android.media.audiomanager.action_speakerphone_state_changed\r\n","android.media.tv.TvTrackInfo.isEncrypted()":"android.media.tv.tvtrackinfo.isencrypted（）\r\n","android.media.MediaPlayer.getPlaybackParams()":"android.media.mediaplayer.getPlaybackParams（）\r\n","Sets the streaming start threshold for an <code>AudioTrack</code>.":"设置<code> audiotrack </code>的流启动阈值。\r\n","Returns the interface's bAlternateSetting field.":"返回界面的玻璃体系网。\r\n","android.location.Location":"Android.Location.Location\r\n","#METADATA_KEY_VIDEO_FRAME_COUNT":"#metadata_key_video_frame_count\r\n","Returns the integer value of the specified tag.":"返回指定标签的整数值。\r\n","Set a pending intent for your media button receiver to allow restarting\n            playback after the session has been stopped.":"为您的媒体按钮接收器设置未决意图以允许重新启动\r\n            会议停止后的播放。\r\n","Starts playing the JET segment queue.":"开始播放喷气段队列。\r\n","android.location.Location.getExtras()":"android.location.location.getExtras（）\r\n","#getStorageInfo":"#getStorageinfo\r\n","android.inputmethodservice.InputMethodService.onEvaluateInputViewShown()":"android.inputmethodservice.inputmethodservice.onevaluateInputViewShown（）\r\n","CaptureRequest#SENSOR_TEST_PATTERN_MODE android.sensor.testPatternMode":"capturerequest＃sensor_test_pattern_mode android.sensor.testpatternmode\r\n","#notifySessionCreated(long, RoutingSessionInfo)":"#notifysessessed（长，RutingSessioninfo）\r\n","android.media.MediaCas.enumeratePlugins()":"android.media.mediacas.enumerateplugins（）\r\n","Finalize the output configurations that now have their deferred and/or extra Surfaces\n            included.":"最终确定现在已延期和/或额外表面的输出配置\r\n            包括。\r\n","android.media.MediaFormat.KEY_AAC_DRC_HEAVY_COMPRESSION":"android.media.mediaformat.key_aac_drc_heavy_compression\r\n","android.media.audiofx.Visualizer":"android.media.audiofx.Visualizer\r\n","Range over which the auto-exposure routine can\n            adjust the capture frame rate to maintain good\n            exposure.":"自动暴露例程可以\r\n            调整捕获框架以保持良好\r\n            暴露。\r\n","Is strength parameter supported by bass boost engine.":"是低音增强引擎支持的强度参数。\r\n","android.hardware.SensorAdditionalInfo.serial":"android.hardware.sensoradditionalinfo.Serial\r\n","Stop a playback stream.":"停止播放流。\r\n","android.media.audiofx.Virtualizer.getStrengthSupported()":"android.media.audiofx.virtualizer.getstrengthsupported（）\r\n","#PLAYBACK_OFFLOAD_NOT_SUPPORTED":"#playback_offload_not_supported\r\n","Rough location accuracy for this provider, primarily with respect to horizontal location\n            accuracy.":"该提供商的粗略位置准确性，主要是关于水平位置的\r\n            准确性。\r\n","Get a list of supported high resolution sizes, which cannot operate at full BURST_CAPTURE\n            rate.":"获取支持的高分辨率尺寸的列表，该尺寸无法在Full Burst_capture中运行\r\n            速度。\r\n","This API is not generally intended for third party application developers.":"该API通常不适用于第三方应用程序开发人员。\r\n","The recommended stream configuration map for use case snapshot must contain a subset of\n            efficient still capture configurations that must include\n            ":"用例快照的推荐流配置映射必须包含\r\n            高效的仍然捕获必须包括的配置\r\n            \r\n","A per-frame dynamic black level offset for each of the color filter\n            arrangement (CFA) mosaic channels.":"每个颜色过滤器的人均动态黑级偏移\r\n            布置（CFA）镶嵌通道。\r\n","#SOCKET_SEQPACKET":"#socket_seqpacket\r\n","android.media.audiofx.Visualizer.ERROR_BAD_VALUE":"android.media.audiofx.Visualizer.Error_bad_value\r\n","Used for receiving NMEA sentences from the GNSS.":"用于从GNSS接收NMEA句子。\r\n","Creates a new LightsSession that can be used to control the device lights.":"创建一个新的照明，可用于控制设备灯。\r\n","A class that contains biometric utilities.":"包含生物识别实用程序的类。\r\n","Audio data format: DRA compressed":"音频数据格式：DRA压缩\r\n","Returns the list of tracks.":"返回曲目列表。\r\n","CaptureRequest#CONTROL_EFFECT_MODE android.control.effectMode":"captureRequest＃control_effect_mode android.control.effectmode\r\n"," to communicate whether HDMI is plugged in\n            or unplugged.":" 传达HDMI是否插入\r\n            或拔掉的。\r\n","Is strength parameter supported by virtualizer engine.":"是虚拟器引擎支持的强度参数。\r\n","Gets the MIME type of the video/audio/text samples.":"获取视频/音频/文本样本的MIME类型。\r\n","Flag indicating a RemoteControlClient makes use of the \"play/pause\" media key.":"指示RemoteControlclient的标志使用“ Play/Pause”媒体密钥。\r\n","Unbind an application environment, called when the information previously\n            set by ":"解开一个应用程序环境，当以前的信息时调用\r\n            通过设置\r\n","android.media.MediaFormat.KEY_VIDEO_QP_B_MIN":"android.media.mediaformat.key_video_qp_b_min\r\n","android.media.MediaFormat.KEY_LANGUAGE":"android.media.mediaformat.key_language\r\n","Vibrate type that corresponds to the ringer.":"对应于铃声的振动类型。\r\n","A class representing a GNSS satellite measurement, containing raw and computed information.":"代表GNSS卫星测量的类，包含原始和计算的信息。\r\n","android.hardware.camera2.CameraCharacteristics.SCALER_STREAM_CONFIGURATION_MAP":"android.hardware.camera2.cameracharacteristics.scaler_stream_configuration_map\r\n","Returns the value of an integer key.":"返回整数键的值。\r\n"," containing\n            inline suggestions.":" 包含\r\n            内联建议。\r\n","android.location.GnssMeasurement.STATE_UNKNOWN":"android.location.gnssmeasurement.state_unknown\r\n","A constant indicating a low power requirement.":"常数表示低功率要求。\r\n","Unregister an audio recording callback previously registered with\n            ":"取消注册的录音回调，以前已注册\r\n            \r\n","0.0f":"0.0F\r\n"," object that can be used modify the volume envelope\n            of the player or track.":" 可以使用的对象修改卷信封\r\n            播放器或轨道。\r\n","android.media.MediaRecorder.setOrientationHint(int)":"android.media.mediarecorder.setorientationhint（int）\r\n","android.media.MediaMetadata.METADATA_KEY_TRACK_NUMBER":"android.media.mediametadata.metadata_key_track_number\r\n","Called when a sensor additional information frame is available.":"当传感器提供其他信息框架时，请致电。\r\n","android.media.audiofx.HapticGenerator.close()":"android.media.audiofx.hapticgenerator.close（）\r\n","android.media.MediaFormat.getNumber(java.lang.String, java.lang.Number)":"android.media.mediaformat.getnumber（java.lang.string，java.lang.number）\r\n","android.media.MediaExtractor":"android.media.mediaextractor\r\n","Releases resources associated with this MediaPlayer object.":"释放与此MediaPlayer对象关联的资源。\r\n","android.hardware.GeomagneticField.getZ()":"android.hardware.geomagneticfield.getz（）\r\n","#GEOFENCE_ENTERED":"#geofence_entered\r\n","android.hardware.camera2.CaptureResult.STATISTICS_SCENE_FLICKER":"android.hardware.camera2.captureresult.statistics_scene_flicker\r\n","android.media.MediaCrypto.isCryptoSchemeSupported(java.util.UUID)":"android.media.mediacrypto.iscryptoschemesupported（java.util.uuid）\r\n","Current preset.":"当前预设。\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_SENSITIVITY_RANGE":"android.hardware.camera2.cameracharacteristics.sensor_info_sensitivity_range\r\n","CameraCharacteristics#getAvailableSessionKeys":"摄影师＃getavailablessessionsessession\r\n","Error code for an AudioTrack write operation failure":"ADIOTRACK写操作失败的错误代码\r\n","android.hardware.usb.UsbDeviceConnection.requestWait()":"android.hardware.usb.usbdeviceconnection.requestwait（）\r\n","android.media.ImageWriter.dequeueInputImage()":"android.media.imageWriter.dequeueInputiMage（）\r\n","Add a search domain to the DNS resolver.":"将搜索域添加到DNS解析器中。\r\n","Sets which type(s) of ringtones will be listed by this.":"集合将列出哪种类型的铃声。\r\n","android.net.IpSecAlgorithm.getKey()":"android.net.ipsecalgorithm.getkey（）\r\n","#getSchemeInitDataAt":"#getschemeinitdataat\r\n","android.media.MediaRouter.addCallback(int, android.media.Callback)":"android.media.mediarouter.addcallback（int，android.media.callback）\r\n","Dynamically specifies the summary (subtitle) and enabled status of a preference injected into\n            the list of app settings displayed by the system settings app\n            <p/>\n            For use only by apps that are included in the system image, for preferences that affect multiple\n            apps.":"动态指定摘要（字幕）并启用了注入到\r\n            系统设置应用程序显示的应用程序设置列表\r\n            <p/>\r\n            仅由包含在系统图像中的应用程序使用，用于影响多个的偏好\r\n            应用。\r\n","android.hardware.Sensor.STRING_TYPE_RELATIVE_HUMIDITY":"android.hardware.sensor.string_type_relative_humity\r\n","Gets the difference between hardware clock (":"获得硬件时钟之间的区别（\r\n","Returns an array of Addresses that attempt to describe the named location, which may be a\n            place name such as \"Dalvik, Iceland\", an address such as \"1600 Amphitheatre Parkway, Mountain\n            View, CA\", an airport code such as \"SFO\", and so forth.":"返回尝试描述指定位置的一系列地址，这可能是\r\n            地名，例如“ Dalvik，冰岛”\r\n            查看，CA“，“ SFO”等机场代码，依此类推。\r\n","Constant to indiciate that the monitoring system is currently\n unavailable for monitoring geofences.":"不断指出监视系统当前是\r\n 无法监视地理福特。\r\n","android.media.tv.TvInputService#onCreateSession(String, String)":"android.media.tv.tvinputservice＃oncreatesession（字符串，字符串）\r\n","Stops playing the last ":"停止扮演最后一个\r\n","android.media.EncoderProfiles.getVideoProfiles()":"android.media.encoderprofiles.getVideProfiles（）\r\n","Called whenever the properties of a logical display have changed.":"每当逻辑显示的属性更改时，请致电。\r\n","android.media.MediaCodecInfo.isHardwareAccelerated()":"android.media.mediacodecinfo.ishardwareaccelerated（）\r\n","android.hardware.usb.UsbManager.requestPermission(android.hardware.usb.UsbAccessory, android.app.PendingIntent)":"android.hardware.usb.usbmanager.requestpermission（android.hardware.usb.usbaccessory，android.app.pendingintent）\r\n","Returns true iff a feature of the given name exists in the format.":"返回true Iff IFF的功能以格式存在。\r\n","android.media.audiofx.Visualizer.MEASUREMENT_MODE_PEAK_RMS":"android.media.audiofx.visualizer.measurement_mode_peak_rms\r\n","android.media.AudioPresentation.MASTERED_FOR_3D":"android.media.audiopersentation.mastered_for_3d\r\n","android.net.TrafficStats.getUidUdpTxBytes(int)":"android.net.trafficstats.getuidudptxbytes（int）\r\n","Sets the data source (URI) to use.":"将数据源（URI）设置为使用。\r\n","Set the orientation value to write.":"设置要写的方向值。\r\n","\n            output format for at least all supported ":"\r\n            至少所有支持的输出格式\r\n","android.media.MediaParser.SAMPLE_FLAG_ENCRYPTED":"android.media.mediaparser.sample_flag_encrypted\r\n","android.media.AudioProfile.getEncapsulationType()":"android.media.audioprofile.getEncapsulationType（）\r\n","android.mtp.MtpObjectInfo.getThumbFormat()":"android.mtp.mtpobjectInfo.getThumbFormat（）\r\n","Sun's gravity in SI units (m/s^2)":"太阳的重力在SI单位（M/S^2）\r\n","Compare two metering rectangles to see if they are equal.":"比较两个计量矩形，以查看它们是否相等。\r\n","Parses media container formats and extracts contained media samples and metadata.":"解析媒体容器格式和提取物包含介质样品和元数据。\r\n","android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession":"android.hardware.camera2.CameraconconnaininghighspeedCapturesession\r\n","android.hardware.display.DeviceProductInfo.getProductId()":"android.hardware.display.deviceproductinfo.getProductId（）\r\n","Releases the connection to the media scanner service.":"释放与媒体扫描仪服务的连接。\r\n","android.media.AudioManager.ACTION_SCO_AUDIO_STATE_CHANGED":"android.media.audiomanager.action_sco_audio_state_changed\r\n"," if GNSS chipset supports navigation messages, ":" 如果GNSS芯片组支持导航消息，请\r\n","android.media.MediaSyncEvent.SYNC_EVENT_NONE":"android.media.mediasyncevent.sync_event_none\r\n","android.hardware.SensorManager.GRAVITY_SUN":"android.hardware.sensormanager.gravity_sun\r\n","if the request targets no Surfaces or Surfaces that are not\n                                  configured as outputs for this session; or the request\n                                  targets a set of Surfaces that cannot be submitted\n                                  simultaneously in a reprocessable capture session; or a\n                                  reprocess capture request is submitted in a\n                                  non-reprocessable capture session; or the reprocess capture\n                                  request was created with a ":"如果请求目标没有任何表面或表面\r\n                                  配置为本节的输出；或请求\r\n                                  针对一组无法提交的表面\r\n                                  在可重新处理的捕获会话中同时；或a\r\n                                  重新计算捕获请求已在\r\n                                  不可加工的捕获会话；或重新捕获\r\n                                  请求是用一个\r\n","android.media.ExifInterface.TAG_ISO_SPEED_RATINGS":"android.media.exifinterface.tag_iso_speed_ratings\r\n","android.inputmethodservice.InputMethodService.onExtractTextContextMenuItem(int)":"android.inputmethodservice.inputmethodservice.onextractTextTextContextMenuitem（int）\r\n","This class handles geofences managed by various hardware subsystems.":"该类负责由各种硬件子系统管理的地理诉讼。\r\n","#STREAM_ACCESSIBILITY":"#STREAM_ACCOSSIOBY\r\n","Call supervisory tone, Radio path acknowlegment :\n      CEPT, ANSI:    425Hz, 200ms ON\n      JAPAN:         400Hz, 1s ON, 2s OFF...":"调用监督语调，无线电路径确认：\r\n      CEPT，ANSI：425Hz，200ms on\r\n      日本：400Hz，1秒开，2s off ...\r\n","Sets whether TS parsing should ignore AAC elementary streams.":"设置TS解析是否应忽略AAC基本流。\r\n","Returns the audio recording source.":"返回音频录制源。\r\n","android.media.MediaCodec.setParameters(android.os.Bundle)":"android.media.mediacodec.setparameters（android.os.bundle）\r\n","android.media.MediaPlayer.setNextMediaPlayer(android.media.MediaPlayer)":"android.media.mediaplayer.setNextMediaPlayer（android.media.mediaplayer）\r\n","Instantiate the preferred decoder supporting input data of the given mime type.":"实例化给定MIME类型的支持输入数据的首选解码器。\r\n","#PLAYSTATE_STOPPED":"#playstate_stopped\r\n","#setOnMediaTimeDiscontinuityListener(OnMediaTimeDiscontinuityListener, Handler)":"#SetonMediatimedIscontinuityListener（onmediatimediscontinuityListener，处理程序）\r\n","Invalidates a key so that it will be redrawn on the next repaint.":"使钥匙无效，以便在下一个重新涂片上重新绘制它。\r\n","Returns the signal to noise ratio for the satellite.":"返回卫星的信号与噪声比。\r\n","Modifies the mute flags for the current active segment.":"修改当前活动段的静音标志。\r\n","android.hardware.camera2.params.OutputConfiguration.createInstancesForMultiResolutionOutput(android.hardware.camera2.MultiResolutionImageReader)":"android.hardware.camera2.params.outputconfiguration.createinstances formultirestolutionOutput（android.hardware.camera.camera2.multirestolutionsolutionsolutionsolutionsolutionsolutionsolution impereader）\r\n","TvInputService.Session#onTimeShiftGetCurrentPosition()":"tvinputservice.session＃ontimeshiftgetCurrentPosition（）\r\n","The amount of additional sensitivity boost applied to output images\n            after RAW sensor data is captured.":"应用于输出图像的额外灵敏度增强量\r\n            捕获原始传感器数据后。\r\n","android.media.MediaPlayer.restoreKeys(byte[])":"android.media.mediaplayer.restorekeys（byte []）\r\n","android.media.AudioManager.AUDIOFOCUS_LOSS_TRANSIENT":"android.media.audiomanager.audiofocus_loss_transient\r\n","android.net.SSLCertificateSocketFactory.createSocket(java.net.InetAddress, int)":"android.net.sslcertificatesocketFactory.CREATESOCTED（java.net.inetaddress，int）\r\n","android.media.AudioTrack.getPlaybackParams()":"android.media.audiotrack.getplaybackparams（）\r\n","Sets the MediaCas instance to use.":"设置要使用的MediaCas实例。\r\n","USB class for printers.":"USB类打印机。\r\n","You can call this to try to enable accelerated drawing for your IME.":"您可以打电话给它，以尝试为您的IME启用加速绘图。\r\n","Key used for the Bundle extra holding a boolean indicating whether\n            a proximity alert is entering (true) or exiting (false).":"用于捆绑包的钥匙额外持有布尔值，指示是否是否\r\n            接近警报正在输入（true）或退出（false）。\r\n","A key describing the FLAC compression level to be used (FLAC audio format only).":"描述要使用的FLAC压缩级别的键（仅FLAC音频格式）。\r\n","android.media.AudioFormat.ENCODING_MPEGH_LC_L3":"android.media.audioformat.encoding_mpegh_lc_l3\r\n","android.location.GnssMeasurement.STATE_GLO_STRING_SYNC":"android.location.gnssmeasurement.state_glo_string_sync\r\n","Part of the ServiceConnection interface.":"ServiceConnection界面的一部分。\r\n","Revoke the session from the client.":"撤销客户的会话。\r\n"," array depends on\n            which ":" 数组取决于\r\n            其中 \r\n","\n            is CONTRAST_CURVE.":"\r\n            是contast_curve。\r\n","android.location.LocationProvider.meetsCriteria(android.location.Criteria)":"android.location.locationprovider.meetscriteria（android.location.criteria）\r\n"," object for the device.":" 设备的对象。\r\n","android.media.tv.TvInputManager.VIDEO_UNAVAILABLE_REASON_CAS_INSUFFICIENT_OUTPUT_PROTECTION":"android.media.tv.tvinputmanager.video_unavailable_reason_cas_insuffitice_output_protection\r\n","android.media.audiofx.Equalizer.setParameterListener(android.media.audiofx.OnParameterChangeListener)":"android.media.audiofx.equalizer.setParameterListener（android.media.audiofx.onparameterchangelistener）\r\n","android.media.tv.TvInputService.onCreateSession(java.lang.String)":"android.media.tv.tvinputservice.oncreatesession（java.lang.string）\r\n","android.media.CamcorderProfile.hasProfile(int)":"android.media.camcorderprofile.hasprofile（int）\r\n","Returns the feature name of the address, for example, \"Golden Gate Bridge\", or null\n            if it is unknown -or- Sets the feature name of the address to the given String, which may be null":"返回地址的功能名称，例如“金门桥”或NULL\r\n            如果未知 - 或将地址的特征名称设置为给定字符串，则可能为null\r\n","android.media.MediaCodecList.findDecoderForFormat(android.media.MediaFormat)":"android.media.mediacodeclist.finddecoderforformat（android.media.mediaformat）\r\n","android.hardware.camera2.CameraCharacteristics.FLASH_INFO_AVAILABLE":"机器人。硬件。相机2。CameraCharacteristics.FLASH_INFO_AVAILABLE\r\n","if it is called after\n start() or before setOutputFormat().":"如果是在\r\n start（）或setOutputformat（）之前。\r\n","#getBufferSizeInFrames()":"#getBuffersizeInframes（）\r\n","Returns the approximate initial bearing in degrees East of true\n            North when traveling along the shortest path between this\n            location and the given location.":"返回true以东度的大约初始轴承\r\n            沿着这之间的最短路径行驶时\r\n            位置和给定的位置。\r\n","android.hardware.camera2.CaptureResult.LENS_INTRINSIC_CALIBRATION":"android.hardware.camera2.captureresult.lens_intrinsic_calibration\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_TIMESTAMP_SOURCE":"android.hardware.camera2.cameracharacteristics.sensor_info_timestamp_source\r\n","colorChannel":"色彩渠道\r\n","android.location.LocationListener.onProviderDisabled(java.lang.String)":"android.location.locationlistener.onproviderdisabled（java.lang.string）\r\n","Called when the application has reported auto-completion candidates that\n            it would like to have the input method displayed.":"何时该应用程序报告了自动完成候选者\r\n            它希望显示输入方法。\r\n","android.media.AudioManager.unregisterRemoteController(android.media.RemoteController)":"android.media.audiomanager.unregisterremotecontroller（android.media.remotecontroller）\r\n","android.media.AudioPresentation.CONTENT_EMERGENCY":"android.media.audiopersentation.content_emergency\r\n","android.mtp.MtpObjectInfo":"android.mtp.mtpobjectinfo\r\n","to find the time from start to first fix.":"从开始到第一个修复的时间。\r\n","android.media.MediaTimestamp":"android.media.MediaTimestamp\r\n","This class provides information about the microphone and camera toggles.":"此类提供有关麦克风和摄像机切换的信息。\r\n","Band level.":"乐队级别。\r\n","android.media.MediaParser.PARSER_NAME_FMP4":"android.media.mediaparser.parser_name_fmp4\r\n","for the\n media provider's URI.":"为了\r\n 媒体提供商的URI。\r\n","android.media.effect.EffectFactory.EFFECT_FLIP":"android.media.effect.effectfactory.effect_flip\r\n","CameraDevice#createCaptureSession createCaptureSession":"CameraDevice#createCaptureSession createCaptureSession\r\n","Unsubscribes for changes to the children of the specified media id.":"取消订阅的更改指定媒体ID的孩子。\r\n","F:Android.Media.MediaDrm+IOnEventListener.OnEvent":"f：android.media.mediadrm+ioneventlistener.onevent\r\n","android.media.MediaTimestamp.getAnchorSytemNanoTime()":"android.media.MediaTimestamp.GetanChorsyTemnAtime（）\r\n","if not in the Executing state,\n         or codec is configured in asynchronous mode.":"如果不在执行状态，\r\n         或编解码器以异步模式配置。\r\n","A constant string describing a pose sensor with 6 degrees of freedom.":"一个恒定的字符串描述具有6个自由度的姿势传感器。\r\n","if it is called in an invalid state\n":"如果以无效状态调用\r\n\r\n","#registerAudioPlaybackCallback(AudioPlaybackCallback, Handler)":"#registeraudioplaybackcallback（AudioplaybackCallback，处理程序）\r\n","android.media.ImageWriter.close()":"android.media.imagewriter.close（）\r\n","android.media.MediaPlayer.getDrmPropertyString(java.lang.String)":"android.media.mediaplayer.getdrmpropertystring（java.lang.string）\r\n","Operation code for GetObjectHandles":"GetObjectHandles的操作代码\r\n","Sets the audio encoding bit rate for recording.":"设置用于记录的音频编码比特率。\r\n","android.media.audiofx.Virtualizer":"android.media.audiofx.Virtualizer\r\n","android.media.AudioDeviceInfo.getSampleRates()":"android.media.audiodeviceinfo.getSamplerates（）\r\n","if Locale is null\n":"如果语言环境为null\r\n\r\n","android.media.MediaCas.openSession()":"android.media.mediacas.opensession（）\r\n","Reverb level. ":"混响水平。\r\n","Returns whether this MediaRecorder is marked as privacy sensitive or not with\n            regard to audio capture. -or- Indicates that this capture request is privacy sensitive and that\n            any concurrent capture is not permitted.":"返回是否对此中Mediarecorder标记为隐私敏感\r\n            关于音频捕获。 - 或表明此捕获请求对隐私敏感，并且\r\n            不允许任何并发捕获。\r\n","Returns whether a particular type should vibrate according to user\n            settings and the current ringer mode.":"返回特定类型是否应根据用户振动\r\n            设置和当前铃声模式。\r\n","crypto":"加密\r\n","Operation code for SetObjectProtection":"setObjectProtection的操作代码\r\n","#SHOW_EXPLICIT":"#Show_Explicit\r\n","Called when the previous bound client is no longer associated\n            with the input method.":"当以前的界限不再关联时调用\r\n            使用输入方法。\r\n","android.media.AudioTrack.setNotificationMarkerPosition(int)":"android.media.audiotrack.setnotificationmarkerposition（int）\r\n","Sets the underlying networks used by the VPN for its upstream connections.":"设置VPN用于其上游连接的基础网络。\r\n","A constant describing all sensor types.":"描述所有传感器类型的常量。\r\n","Returns the list of object handles for all objects on the given storage unit,\n            with the given format and parent.":"返回给定存储单元上所有对象的对象句柄列表，\r\n            带有给定格式和父母。\r\n","android.location.GnssClock.hasTimeUncertaintyNanos()":"android.location.gnssclock.hastimeuncrenttynanos（）\r\n","InputMethodManager#RESULT_SHOWN InputMethodManager.RESULT_SHOWN":"inputmethodmanager＃result_shown inputmethodmanager.result_shown\r\n","android.hardware.usb.UsbManager.getAccessoryList()":"android.hardware.usb.usbmanager.getAccessoryList（）\r\n","android.media.browse.MediaBrowser.subscribe(java.lang.String, android.media.browse.SubscriptionCallback)":"android.media.browse.mediabrowser.subscribe（java.lang.string，android.media.media.browse.subscriptionCallback）\r\n","Effect connection mode is insert.":"效应连接模式是插入的。\r\n","Unload a sound from a sound ID.":"从声音ID卸载声音。\r\n","android.media.AudioDeviceInfo.getAddress()":"android.media.audiodeviceinfo.getAddress（）\r\n","CameraCharacteristics#SENSOR_CALIBRATION_TRANSFORM2 android.sensor.calibrationTransform2":"cameracharacteristics＃sensor_calibration_transform2 android.sensor.calibrationTransform2\r\n","State of an AudioTrack that was not successfully initialized upon creation.":"创作后未能成功初始初始初始化的录音带状态。\r\n","The metadata key to retrieve the playback duration (in ms) of the data source.":"元数据键检索数据源的播放持续时间（MS）。\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_REFERENCE_ILLUMINANT2":"android.hardware.camera2.cameracharacteristics.sensor_reference_illuminant2\r\n","android.hardware.camera2.CameraMetadata.LOGICAL_MULTI_CAMERA_SENSOR_SYNC_TYPE_CALIBRATED":"android.hardware.camera2.camerametadata.logical_multi_camera_sensor_sensor_sync_type_calibrated\r\n","Returns the maximum number of simultaneous MIDI tracks supported by JetPlayer":"返回JetPlayer支持的最大同时MIDI轨道数量\r\n","Retrieves a set of file descriptors that a peer has sent through\n an ancillary message.":"检索一组对等式发送的文件描述符\r\n 辅助信息。\r\n","android.media.AudioTrack.setState(int)":"android.media.audiotrack.setstate（int）\r\n","android.hardware.camera2.CaptureResult.EDGE_MODE":"android.hardware.camera2.captureresult.edge_mode\r\n","GeofenceHardwareCallback":"Geofencehardwarecallback\r\n","#ADJUST_UNMUTE":"#adjust_unmute\r\n","Playback state of a RemoteControlClient which is skipping back to the previous\n               logical chapter (such as a song in a playlist) in the media it is currently playing.":"Remotecontrolclient的播放状态，它正在跳回上一个\r\n               逻辑章节（例如播放列表中的歌曲）目前正在播放。\r\n","Generally classifies the overall set of the camera device functionality.":"一般对摄像装置功能性的整体集合进行分类。\r\n","Constructs a RingtoneManager.":"构建RingtoneManager。\r\n","GPS L5-CNAV message contained in the structure.":"结构中包含的GPS L5-CNAV消息。\r\n","The system-wide limit for number of open cameras or camera resources has\n            been reached, and more camera devices cannot be opened or torch mode\n            cannot be turned on until previous instances are closed.":"开放式相机或相机资源数量的全系统范围限制\r\n            已经到达，无法打开更多相机设备或火炬模式\r\n            直到以前的实例关闭，才能打开。\r\n","UUID for Dynamics Processing":"动力处理的UUID\r\n","android.media.MediaDrm.removeAllSecureStops()":"android.media.mediadrm.removeallsecurestops（）\r\n","Returns the maximum time any location update may be delayed, and thus grouped with following\n            updates to enable location batching.":"返回最长时间任何位置更新可能会延迟，因此与以下时间分组\r\n            更新以启用位置批处理。\r\n","android.media.effect.EffectContext.getFactory()":"android.media.effect.effectcontext.getFactory（）\r\n","Microphone audio source tuned for voice recognition if available, behaves like\n  ":"麦克风音频源（如果可用）调整为语音识别，行为像\r\n  \r\n","android.mtp.MtpConstants.OPERATION_GET_PARTIAL_OBJECT_64":"android.mtp.mtpconstants.operation_get_partial_object_64\r\n","Return a human-readable name describe the type of the network,\n for example \"WIFI\" or \"MOBILE\".":"返回人类可读名称描述网络的类型，\r\n 例如“ wifi”或“移动”。\r\n","android.media.tv.TvInputInfo.createSettingsIntent()":"android.media.tv.tvinputinfo.createsettingsintent（）\r\n","android.media.PlaybackParams":"android.media.playbackparams\r\n","android.media.MediaFormat.KEY_MIME":"android.media.mediaformat.key_mime\r\n","The default connection state indicating the route is disconnected.":"指示该路由的默认连接状态已断开连接。\r\n","Band level range. ":"带级范围。\r\n","android.media.RingtoneManager.getStopPreviousRingtone()":"android.media.ringtonemanager.getStoppreviousringtone（）\r\n","android.preference.Preference#isEnabled()":"android.preference.preference＃isEnabled（）\r\n","Gets metrics-related information that is not supported by dedicated methods.":"获取与指标相关的信息，这些信息不受专用方法支持。\r\n","Computes the inclination matrix <b>I</b> as well as the rotation matrix\n            <b>R</b> transforming a vector from the device coordinate system to the\n            world's coordinate system which is defined as a direct orthonormal basis,\n            where:":"计算倾斜矩阵<b> i </b>以及旋转矩阵\r\n            <b> r </b>将向量从设备坐标系转换为\r\n            世界的坐标系定义为直接基础，\r\n            在哪里：\r\n","android.media.MediaRecorder.setAudioEncodingBitRate(int)":"android.media.mediarecorder.setaudioencodingbitrate（int）\r\n","A software mechanism is used to synchronize between the physical cameras.":"软件机制用于在物理相机之间同步。\r\n","android.hardware.camera2.CameraCaptureSession.supportsOfflineProcessing(android.view.Surface)":"android.hardware.camera2.cameracapturesession.supportsoffline Processing（android.view.surface）\r\n","Return the number of packets transmitted on the specified interface since the interface\n            was created.":"返回指定接口上传输的数据包数，因为接口\r\n            被创建了。\r\n","Vibrate setting that suggests to never vibrate.":"振动设置，建议永不振动。\r\n","Sample rate will be a route-dependent value.":"采样率将是路线依赖的值。\r\n","android.media.ExifInterface":"android.media.exifterface\r\n","android.hardware.camera2.CaptureResult.SENSOR_EXPOSURE_TIME":"android.hardware.camera2.captureresult.sensor_exposure_time\r\n","android.hardware.camera2.CaptureRequest.CONTROL_ZOOM_RATIO":"android.hardware.camera2.capturerequest.control_zoom_ratio\r\n","Listens for changes in input devices.":"倾听输入设备的更改。\r\n","Retrieve a token object that can be used by apps to create a\n            ":"检索应用程序可以使用的令牌对象创建一个\r\n            \r\n","The unencoded value\n":"未编码的值\r\n\r\n","The namespace that this address exists in.":"此地址存在的名称空间。\r\n","Returns the endpoint's maximum packet size.":"返回端点的最大数据包大小。\r\n","android.media.SoundPool.setRate(int, float)":"android.media.soundpool.setrate（int，float）\r\n","#CHANNEL_BLUE":"#channel_blue\r\n","A key describing the height of the content in a video format.":"以视频格式描述内容高度的键。\r\n"," and other\n            RAW output formats.":" 和别的\r\n            RAW 输出格式。\r\n","Called when a new client has bound to the input method.":"当新客户端绑定到输入方法时调用。\r\n","#SOCKET_DGRAM":"#socket_dgram\r\n","A special audio session ID to indicate that the audio session ID isn't known and the\n            framework should generate a new value.":"一个特殊的音频会话ID表示音频会话ID尚不清楚，并且\r\n            框架应生成一个新值。\r\n","android.media.AudioDeviceInfo.getAudioDescriptors()":"android.media.audiodeviceinfo.getaudiodescriptors（）\r\n","android.media.tv.TvInputInfo.getTunerCount()":"android.media.tv.tvinputinfo.getTunerCount（）\r\n","android.hardware.SensorManager.LIGHT_SUNLIGHT":"android.hardware.sensormanager.light_sunlight\r\n","android.hardware.camera2.params.Capability":"android.hardware.camera2.params.apabilable\r\n","android.location.Location.setSpeedAccuracyMetersPerSecond(float)":"Android.Location.Location.SetsPeedAccuracymetersperspersecond（float）\r\n","android.location.GpsStatus.getTimeToFirstFix()":"android.location.gpsstatus.gettimetofirstfix（）\r\n","android.net.Ikev2VpnProfile.getServerRootCaCert()":"android.net.ikev2vpnprofile.getServerRootCacert（）\r\n","Whether the RAW images output from this camera device are subject to\n            lens shading correction.":"该相机设备输出的原始图像是否受到\r\n            镜头阴影校正。\r\n","Preload a predefined platform sound to minimize latency when the sound is\n            played later by ":"预加载预定义的平台声音，以最大程度地减少声音的延迟\r\n            以后玩\r\n","android.media.midi.MidiDeviceInfo.PROPERTY_MANUFACTURER":"android.media.midi.midideviceinfo.property_manufacturer\r\n","android.media.MediaParser.SAMPLE_FLAG_HAS_SUPPLEMENTAL_DATA":"android.media.mediaparser.sample_flag_has_supplemental_data\r\n","android.mtp.MtpStorageInfo.getVolumeIdentifier()":"android.mtp.mtpstorageinfo.getVolumeIdentifier（）\r\n","android.media.metrics.PlaybackStateEvent.STATE_FAILED":"android.media.metrics.playbackstateevent.state_failed\r\n","android.hardware.camera2.CaptureRequest.SCALER_ROTATE_AND_CROP":"android.hardware.camera2.capturerequest.scaler_rotate_and_crop\r\n","android.media.ExifInterface.TAG_GPS_DIFFERENTIAL":"android.media.exifinterface.tag_gps_differential\r\n","A rating style for \"thumb up\" vs \"thumb down\".":"“拇指向上”与“拇指向下”的评分样式。\r\n","android.hardware.camera2.CameraCharacteristics.SCALER_MULTI_RESOLUTION_STREAM_CONFIGURATION_MAP":"android.hardware.camera2.cameracharacteristics.scaler_multi_resolution_stream_configuration_map\r\n","Returns a title suitable for display or null.":"返回适合显示或空的标题。\r\n","android.hardware.camera2.CameraCharacteristics.LENS_INFO_MINIMUM_FOCUS_DISTANCE":"android.hardware.camera2.cameracharacteristics.lens_info_minimum_focus_distance\r\n","android.media.session.MediaSession.setActive(boolean)":"android.media.session.mediasession.setactive（boolean）\r\n","android.media.audiofx.Equalizer.PARAM_NUM_BANDS":"android.media.audiofx.equalizer.param_num_bands\r\n","Operation mode for edge\n            enhancement.":"边缘的操作模式\r\n            增强。\r\n","android.hardware.camera2.CameraCharacteristics.DISTORTION_CORRECTION_AVAILABLE_MODES":"机器人。硬件。相机2。CameraCharacteristics.脝路脜脝录脱脙脣\r\n","Ringtone provides a quick method for playing a ringtone, notification, or\n            other similar types of sounds.":"铃声提供了一种快速播放铃声，通知或\r\n            其他类似类型的声音。\r\n","android.net.LocalServerSocket":"android.net.localserversocket\r\n","Checking if network is a captive portal ":"检查网络是否是圈养门户\r\n","android.media.AudioTrack.getChannelConfiguration()":"android.media.audiotrack.getChannelConfiguration（）\r\n",". -or- Sets a ":"。 - 或设置a\r\n","Unknown playback type.":"未知的播放类型。\r\n","android.location.provider.ProviderProperties.POWER_USAGE_MEDIUM":"android.location.provider.providerproperties.power_usage_medium\r\n","#TONE_CDMA_HIGH_PBX_L":"#TONE_CDMA_HIGH_PBX_L\r\n","android.media.session.MediaController.getSessionInfo()":"android.media.session.mediacontroller.getSessioninfo（）\r\n","A class to encapsulate a collection of attributes describing information about an audio\n            stream.":"封装属性集合的类，描述有关音频的信息\r\n            溪流。\r\n","android.media.MediaPlayer.prepareAsync()":"android.media.mediaplayer.prepareasync（）\r\n","android.media.MediaCodec.configure(android.media.MediaFormat, android.view.Surface, int, android.media.MediaDescrambler)":"android.media.mediacodec.configure（android.media.mediaformat，android.view.surface，int，android.media.media.mediadescrambler）\r\n","android.media.metrics.PlaybackMetrics.getMetricsBundle()":"android.media.metrics.playbackmetrics.getMetricsBundle（）\r\n","Schedules the playback of a clip.":"安排剪辑的播放。\r\n","android.media.audiofx.AudioEffect.release()":"android.media.audiofx.audioeffect.Release（）\r\n","android.media.MediaRouter.addUserRoute(android.media.UserRouteInfo)":"android.media.mediarouter.adduserroute（android.media.userrouteinfo）\r\n","AudioManager#AUDIOFOCUS_GAIN":"听众＃audiofocus_gain\r\n","android.media.midi.MidiDeviceService.onGetInputPortReceivers()":"android.media.midi.midideviceservice.ongetinputportreceivers（）\r\n","\n            towards the host.":"\r\n            走向主人。\r\n","android.net.LocalSocketAddress.getName()":"android.net.localsocketDress.getName（）\r\n","Current audio mode. ":"当前音频模式。\r\n","android.location.Location.hasSpeed()":"android.location.location.hasspeed（）\r\n","#SECURITY_LEVEL_HW_SECURE_ALL":"#security_level_hw_secure_all\r\n","System#DEFAULT_NOTIFICATION_URI":"系统＃default_notification_uri\r\n","Returns the index of an input buffer to be filled with valid data\n            or -1 if no such buffer is currently available.":"返回输入缓冲区的索引，以填充有效数据\r\n            或-1如果当前没有此类缓冲区。\r\n","AudioManager#STREAM_ALARM":"听众＃stream_alarm\r\n","Offline license state is unknown, an error occurred while trying\n            to access it.":"离线许可证状态未知，尝试时发生了错误\r\n            访问它。\r\n","Gets the supported preview formats.":"获取支持的预览格式。\r\n","android.media.MediaFormat.KEY_STRIDE":"android.media.mediaformat.key_stride\r\n","Return the color channel offset for a given index into the array of raw pixel values.":"将给定索引的颜色通道偏移返回到原始像素值的数组中。\r\n","android.hardware.camera2.MultiResolutionImageReader.MultiResolutionImageReader(java.util.Collection, int, int)":"android.hardware.camera2.multirestolutionimagereader.multirestolutionimagereader（java.util.collection，int，int）\r\n","#BIOMETRIC_ERROR_HW_UNAVAILABLE":"#biometric_error_hw_unavailable\r\n","android.media.ExifInterface.TAG_GPS_DEST_DISTANCE_REF":"android.media.exifinterface.tag_gps_dest_distance_ref\r\n","android.media.ExifInterface.TAG_X_RESOLUTION":"android.media.exifinterface.tag_x_resolution\r\n","Take care of dispatching incoming trackball events to the appropriate\n callbacks on the service, and tell the client when this is done.":"照顾将传入的轨迹球派遣到适当的\r\n 在服务上回调，并告诉客户何时完成。\r\n","android.hardware.display.VirtualDisplay":"android.hardware.display.virtualdisplay\r\n","android.media.session.MediaSession.setRatingType(int)":"android.media.session.mediasession.setratingtype（int）\r\n","The metadata key to retrieve the numeric string describing the\n            order of the audio data source on its original recording.":"检索描述数字字符串的元数据键\r\n            原始记录上的音频数据源的顺序。\r\n","android.media.MediaRouter2.stop()":"android.media.mediarouter2.stop（）\r\n","android.location.LocationManager.getCurrentLocation(java.lang.String, android.os.CancellationSignal, java.util.concurrent.Executor, java.util.function.Consumer)":"android.location.LocationManager.getCurrentLocation（java.lang.string，android.os.cancellationsignal，java.util.concurrent.executor，java.util.util.function.consumer））\r\n","android.media.ExifInterface#ORIENTATION_NORMAL":"android.media.exifterface＃orientation_normal\r\n","android.hardware.camera2.params.Face":"android.hardware.camera2.params.face\r\n","android.hardware.camera2.CaptureResult.getFrameNumber()":"android.hardware.camera2.captureresult.getframenumber（）\r\n","android.hardware.camera2.CaptureRequest.STATISTICS_HOT_PIXEL_MAP_MODE":"android.hardware.camera2.capturerequest.statistics_hot_pixel_map_mode\r\n","F:Android.Media.MediaRecorder+ErrorEventArgs..ctor":"f：android.media.mediarecorder+erroreventargs..ctor\r\n","Gets the reverb level.":"获取混响水平。\r\n","Copy all gain factors in row-major order from this lens shading map into the destination.":"从此镜头阴影映射中将所有收益因子以行分顺序复制到目的地。\r\n","MidiInputPort":"Midiinputport\r\n","Releases the native AudioRecord resources.":"释放本地Audiorecord资源。\r\n","CaptureRequest#DISTORTION_CORRECTION_MODE android.distortionCorrection.mode":"CaptureRequest#DISTORTION_CORRECTION_MODE android的。扭曲修正。模式\r\n","F:Android.Media.TV.TvInputManager+TvInputCallback.OnInputStateChanged":"f：android.media.tv.tvinputmanager+tvinputcallback.oninputstatatechanged\r\n","Requests temporary permission for the given package to access the accessory.":"请求给定软件包的临时权限访问附件。\r\n"," object) to route\n            the input to this AudioRecord.":" 对象）路线\r\n            此Audiorecord的输入。\r\n","android.hardware.SensorManager.getAltitude(float, float)":"android.hardware.sensormanager.getaltitude（float，float）\r\n","System#DEFAULT_RINGTONE_URI":"系统＃default_ringtone_uri\r\n","The vibrate type whose setting has changed.":"设置已更改的振动类型。\r\n","android.mtp.MtpConstants.OPERATION_COPY_OBJECT":"android.mtp.mtpconstants.operation_copy_object\r\n","),":"），\r\n","android.media.session.PlaybackState.ACTION_SEEK_TO":"android.media.session.playbackstate.action_seek_to\r\n"," class is used to automatically control audio volume during media\n            playback, allowing simple implementation of transition effects and ducking.":" 类用于在媒体期间自动控制音量\r\n            播放，允许简单地实现过渡效果和躲避。\r\n","android.media.AudioManager.setStreamMute(int, boolean)":"android.media.audiomanager.setstreammute（int，boolean）\r\n","android.hardware.camera2.CameraCharacteristics.CONTROL_AE_AVAILABLE_MODES":"android.hardware.camera2.cameracharacteristics.control_ae_available_modes\r\n","start":"开始\r\n","Rotates the supplied rotation matrix so it is expressed in a different\n            coordinate system.":"旋转提供的旋转矩阵，使其以不同的方式表示\r\n            坐标系统。\r\n"," for the capture session.":" 用于捕获会话。\r\n","android.media.ImageReader.getImageFormat()":"android.media.imagereader.getImageFormat（）\r\n","Retrieve the RemoteControlClient associated with this route, if one has been set.":"如果设置了该路由，则检索与此路线关联的remotecontrolclient。\r\n","Called when an event occurs that requires the app to be notified":"当发生需要通知应用程序的事件时调用\r\n","Returns the user's parental controls enabled state.":"返回用户的父母控制启用状态。\r\n","android.view.inputmethod.InputMethod.SERVICE_INTERFACE":"android.view.inputmethod.inputmethod.service_interface\r\n","Provides support for interacting with ":"提供与与之互动的支持\r\n","if the route is invalid.\n":"如果路线无效。\r\n\r\n","Unregisters a listener for all sensors.":"取消注册所有传感器的侦听器。\r\n","android.location.Address.setSubLocality(java.lang.String)":"android.location.Address.Setsublocality（Java.lang.String）\r\n","android.media.ExifInterface.TAG_GPS_AREA_INFORMATION":"android.media.exifinterface.tag_gps_area_information\r\n","Gets count of hardware clock discontinuities.":"获得硬件时钟不连续性的计数。\r\n",":\n                    offload playback not supported":"：\r\n                    卸载播放不支持\r\n","Defines a request for a network, made through ":"定义网络请求，通过\r\n","UsbConfiguration":"USBCONFIGURATION\r\n","A sound to indicate that focusing has completed.":"声音表明聚焦已经完成。\r\n","Returns the volume scalar set on this player. -or- Sets the volume on this player.":"返回此播放器上设置的音量标量。 - 或 - 设置此播放器上的卷。\r\n","android.media.effect.EffectUpdateListener":"android.media.effect.effectupdateListener\r\n","android.location.GnssClock.getReferenceConstellationTypeForIsb()":"android.location.gnssclock.getReferenceConstellationTypeforisb（）\r\n","Indicates whether setting strength is supported.":"指示是否支持设置强度。\r\n","android.media.MediaFormat.KEY_WIDTH":"android.media.mediaformat.key_width\r\n","android.media.MediaExtractor.getCasInfo(int)":"android.media.mediaextractor.getCasinfo（int）\r\n","android.media.MediaRoute2Info.FEATURE_LIVE_VIDEO":"android.media.mediaroute2info.feature_live_video\r\n","Checks whether the microphone mute is on or off. -or- Sets the microphone mute on or off.":"检查麦克风静音是打开还是关闭。 - 或设置麦克风静音。\r\n","android.mtp.MtpConstants.OPERATION_SKIP":"android.mtp.mtpconstants.operation_skip\r\n","SSLSocketFactory implementation with several extra features:\n            \n            <ul>\n            <li>Timeout specification for SSL handshake operations\n            <li>Hostname verification in most cases (see WARNINGs below)\n            <li>Optional SSL session caching with ":"SSLSocketFactory实现具有多个额外功能：\r\n            \r\n            <ul>\r\n            <li> SSL握手操作的超时规范\r\n            <li>在大多数情况下，主机名验证（请参见下面的警告）\r\n            <li>可选的SSL会话缓存\r\n","#getType()":"#getType（）\r\n","This callback will never be invoked on Android Q and above, and providers can be considered\n            as always in the ":"该回调将永远不会在Android Q及以上调用，并且可以考虑提供商\r\n            一如既往\r\n","android.media.MediaDescrambler.setMediaCasSession(android.media.Session)":"android.media.mediadescrambler.setmediacassession（android.media.session）\r\n","The target video frame width in pixels":"像素的目标视频框架宽度\r\n"," supports\n            a focus gain granted after a temporary request failure.":" 支持\r\n            临时请求失败后获得的重点收益。\r\n","android.media.MediaDrm.getOfflineLicenseKeySetIds()":"android.media.mediadrm.getOfflinelicenseKeySetids（）\r\n","Optimize capture for audio coming from the side of the device pointing away from the user.":"优化来自用户指向的设备侧面的音频捕获。\r\n","Defined in the OpenMAX IL specs, depending on the type of media\n this can be OMX_VIDEO_AVCLEVELTYPE, OMX_VIDEO_H263LEVELTYPE\n OMX_VIDEO_MPEG4LEVELTYPE or OMX_VIDEO_VP8LEVELTYPE.":"在OpenMax IL规格中定义，具体取决于媒体的类型\r\n 这可以是omx_video_avcleveltype，omx_video_h263leveltype\r\n OMX_VIDEO_MPEG4LEVELTYPE或OMX_VIDEO_VP8LEVELTYPE。\r\n","Value used for when the index in the group of the microphone is unknown.":"当麦克风组中的索引未知时使用的值。\r\n","android.media.session.MediaController.registerCallback(android.media.session.Callback)":"android.media.session.mediacontroller.registercallback（android.media.session.callback）\r\n","[R, Geven, Godd, B]":"[R，Geven，Godd，B]\r\n","Returns the frame count of the native <code>AudioTrack</code> buffer.":"返回本机<code> audiotrack </code>缓冲区的框架计数。\r\n","android.media.tv.TvView.reset()":"android.media.tv.tview.reset（）\r\n"," unless the output is the input.":" 除非输出是输入。\r\n","Information about a route that consists of multiple other routes in a group.":"有关一组其他路线组成的路线的信息。\r\n","if required resources are in use\n":"如果需要的话\r\n\r\n","android.media.metrics.NetworkEvent.NETWORK_TYPE_OFFLINE":"android.media.metrics.networkevent.network_type_offline\r\n","android.net.TrafficStats.getTotalRxBytes()":"android.net.trafficstats.getTotalrxbytes（）\r\n","Reserved endpoint zero control request type (currently unused).":"保留端点零控制请求类型（当前未使用）。\r\n","SMPTE ST 2084 transfer function.":"SMPTE ST 2084传输函数。\r\n","Returns the name of the MTP object":"返回MTP对象的名称\r\n","Quality level corresponding to the 720p (1280 x 720) resolution.":"质量水平对应于720p（1280 x 720）分辨率。\r\n","android.media.ExifInterface.TAG_SUBSEC_TIME_DIGITIZED":"android.media.exifinterface.tag_subsec_time_digitized\r\n","Whether auto-focus (AF) is currently enabled, and what\n            mode it is set to.":"当前是否启用了自动对焦（AF），以及什么\r\n            设置的模式。\r\n","Return the sample rate.":"返回样本率。\r\n","Configures the delay and padding values for the current compressed stream playing\n            in offload mode.":"配置当前压缩流播放的延迟和填充值\r\n            在卸载模式下。\r\n","android.location.LocationManager.getBestProvider(android.location.Criteria, boolean)":"android.location.locationmanager.getBestProvider（android.location.Criteria，boolean）\r\n","android.media.tv.TvView.getTracks(int)":"android.media.tv.tvview.getTracks（int）\r\n","Given to the ringtone picker as a ":"给予铃声挑选器\r\n","Gets the GNSS measurement's satellite inter-signal bias uncertainty (1 sigma) in\n            nanoseconds with sub-nanosecond accuracy.":"获取GNSS测量的卫星信号偏置不确定性（1 Sigma）\r\n            纳秒秒准确性。\r\n","#PLAYSTATE_SKIPPING_BACKWARDS":"#playstate_skipping_backwards\r\n","Return the number of bytes transmitted on the specified interface since the interface\n            was created.":"返回指定接口上传输的字节数，因为接口\r\n            被创建了。\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_IMAGE_HEIGHT":"android.media.mediametadataretriever.metadata_key_image_height\r\n","android.media.midi.MidiReceiver.MidiReceiver(int)":"android.media.midi.midireceiver.midireceiver（int）\r\n","android.net.Credentials":"android.net.credentials\r\n","The metadata key to retrieve the year when the data source was created\n or modified.":"检索创建数据源的年份的元数据密钥\r\n 或修改。\r\n","android.media.metrics.TrackChangeEvent.getHeight()":"android.media.metrics.trackchangeevent.getheight（）\r\n","android.media.ExifInterface.TAG_GPS_DEST_LATITUDE_REF":"android.media.exifinterface.tag_gps_dest_latitate_ref\r\n","Called when a key is long pressed.":"长时间按键时调用。\r\n","android.inputmethodservice.InputMethodService.setExtractViewShown(boolean)":"android.inputmethodservice.inputmethodservice.setextractViewshown（布尔值）\r\n","Gets the received GNSS satellite time, at the measurement time, in nanoseconds.":"在测量时间以纳米秒为单位，获取接收到的GNSS卫星时间。\r\n","CDMA HIGH PBX SSL tone:{3700Hz 25ms, 4000Hz 25ms} 8 times\n 200ms OFF, {3700Hz 25ms, 4000Hz 25ms} 8 times, 200ms OFF,\n {3700Hz 25ms, 4000Hz 25ms} 16 times, 1000ms OFF, REPEAT....":"CDMA高PBX SSL音调：{3700Hz 25ms，4000Hz 25ms} 8次\r\n 200ms关闭，{3700Hz 25ms，4000Hz 25ms} 8次，200ms折扣，\r\n {3700Hz 25ms，4000Hz 25ms} 16次，1000毫秒，重复...\r\n","android.media.tv.TvView":"android.media.tv.tvview\r\n","Force switch to the next input method and subtype.":"强制切换到下一个输入方法和亚型。\r\n","android.media.ExifInterface.TAG_DATETIME":"android.media.exifinterface.tag_dateTime\r\n","android.media.MediaFormat.KEY_COMPLEXITY":"android.media.mediaformat.key_complexity\r\n","#getPlaybackHeadPosition":"#getPlayBackheadposition\r\n","Gets the (post-correlation & integration) Signal-to-Noise ratio (SNR) in dB.":"获取DB中的（后相关和集成）信噪比（SNR）。\r\n","Broadcast Action: The setting for background data usage has changed\n values.":"广播动作：背景数据使用的设置已更改\r\n 值。\r\n","Enable or disable the visualization engine.":"启用或禁用可视化引擎。\r\n","Sets the strength of the virtualizer effect.":"设定虚拟器效应的强度。\r\n","if called in an invalid state.":"如果处于无效状态。\r\n","Clear the current input binding.":"清除当前输入绑定。\r\n","android.hardware.camera2.CameraCharacteristics.STATISTICS_INFO_AVAILABLE_OIS_DATA_MODES":"android.hardware.camera2.cameracharacteristics.statistics_info_available_ois_data_modes\r\n","android.view.SurfaceHolder SurfaceHolder.class":"Android.View.Surfaceholder SurfaceHolder.Class\r\n","Gravity (estimate) on the first Death Star in Empire units (m/s^2)":"帝国单位的第一颗死亡之星（M/S^2）的重力（估计）\r\n","#connect":"＃连接\r\n","maxFaces":"maxfaces\r\n"," for this\n            ":" 为了这\r\n            \r\n","Construct a sanitizer.":"构建消毒剂。\r\n","android.hardware.camera2.CaptureResult.SENSOR_PIXEL_MODE":"android.hardware.camera2.captureresult.sensor_pixel_mode\r\n","android.media.MediaFormat":"android.media.mediaformat\r\n","A connection state indicating the route is in the process of connecting and is not yet\n            ready for use.":"指示该路线的连接状态正在连接过程中，尚未\r\n            准备启用。\r\n","True if this location has a vertical accuracy.":"如果此位置具有垂直精度，则为thus。\r\n","Uploads an object metadata for a new entry.":"上传一个对象元数据以进行新条目。\r\n","Returns the configuration's name.":"返回配置的名称。\r\n","android.media.tv.TvTrackInfo.getEncoding()":"android.media.tv.tvtrackinfo.getencoding（）\r\n","android.media.MediaCodec.subscribeToVendorParameters(java.util.List)":"android.media.mediacodec.subscribetetovendorparameters（java.util.list）\r\n","String property name: a comma-separated list of cipher and mac algorithms\n            supported by CryptoSession.":"字符串属性名称：密码和Mac算法的逗号分隔列表\r\n            由隐秘的支持。\r\n","android.media.MediaMetadataRetriever#METADATA_KEY_COMPILATION":"android.media.mediametadataretriever＃metadata_key_compilation\r\n","DngCreator":"dngcreator\r\n","The metadata key to retrieve the numberic string that describes which\n            part of a set the audio data source comes from.":"检索描述哪个数字字符串的元数据键\r\n            集合的一部分音频数据源来自。\r\n","Sets the speed factor.":"设置速度因子。\r\n","android.location.Criteria.NO_REQUIREMENT":"android.location.criteria.no_requirement\r\n","android.mtp.MtpEvent.EVENT_OBJECT_PROP_DESC_CHANGED":"android.mtp.mtpevent.event_object_prop_desc_changed\r\n","android.media.SubtitleData.getDurationUs()":"android.media.subtitledata.getDurationus（）\r\n","android.media.MediaRouter.getRouteCount()":"android.media.mediarouter.getRoutecount（）\r\n","android.media.midi.MidiReceiver.MidiReceiver()":"android.media.midi.midireceiver.midireceiver（）\r\n","X coordinate of the key in the keyboard layout ":"x键盘布局中键的坐标\r\n","android.media.MediaRecorder.setAudioSamplingRate(int)":"android.media.mediarecorder.setaudiosamplingrate（int）\r\n","AbstractInputMethodService provides a abstract base class for input methods.":"AbstractInputmethodservice提供了用于输入方法的抽象基类。\r\n","Operation code for GetPartialObject":"GetPartialObject的操作代码\r\n","android.media.MediaParser.advance(android.media.SeekableInputReader)":"android.media.mediaparser.Advance（android.media.seekableInputReader）\r\n","Builder#addMatchingUsage(int)":"构建器＃addMatchingusage（int）\r\n","Return a value sanitizer that allows everything except Nul ('\\0')\n            characters, space (' '), and other whitespace characters.":"返回一个允许除nul（'\\ 0'）以外的所有东西的值消毒剂\r\n            字符，空间（''）和其他空格字符。\r\n","Request an incremental volume update for this route.":"请求此路线的增量卷更新。\r\n","android.media.tv.TvContract.buildInputId(android.content.ComponentName)":"android.media.tv.tvcontract.buildinputid（android.content.componentname）\r\n","android.media.session.MediaSession.FLAG_HANDLES_TRANSPORT_CONTROLS":"android.media.session.mediasession.flag_handles_transport_controls\r\n","ToneGenerator class contructor specifying output stream type and volume.":"Tonegenerator类别指定输出流类型和音量。\r\n","Return the default proxy port specified by the carrier.":"返回运营商指定的默认代理端口。\r\n","#RINGER_MODE_SILENT":"#Ringer_Mode_silent\r\n"," allowing applications to install a callback and be notified of changes\n            in the capture path while recoding is active.":" 允许应用程序安装回调并通知更改\r\n            在捕获路径中，重新编码处于活动状态。\r\n","Constellation type constant for QZSS.":"QZSS的星座类型常数。\r\n","Queue an input ":"队列输入\r\n","android.media.tv.TvRecordingClient.pauseRecording(android.os.Bundle)":"android.media.tv.tvrecordingclient.pauserecording（android.os.bundle）\r\n","Room level. ":"房间。\r\n","android.media.MediaMetadata.METADATA_KEY_BT_FOLDER_TYPE":"android.media.mediametadata.metadata_key_bt_folder_type\r\n","Dummy data connection. ":"虚拟数据连接。\r\n","#TYPE_NOTIFICATION":"#type_notification\r\n","DVB CSA 3 in minimally enhanced mode.":"DVB CSA 3以最小增强的模式。\r\n","True if this provider may result in a monetary charge to the user.":"如果此提供商可能会给用户收取货币费用，则为是真的。\r\n"," object, which describes this device.":" 对象，描述此设备。\r\n","android.hardware.camera2.params.MultiResolutionStreamInfo.MultiResolutionStreamInfo(int, int, java.lang.String)":"android.hardware.camera2.params.multiresolutionstreaminfo.multiresolutionstreaminfo（int，int，int，java.lang.string）\r\n","android.location.Geocoder.getFromLocationName(java.lang.String, int)":"android.location.geocoder.getFromlocationname（java.lang.string，int）\r\n","Class that embodies one timed metadata access unit, including\n            \n            <ul>\n            <li> a time stamp, and </li>\n            <li> raw uninterpreted byte-array extracted directly from the container.":"体现一个定时元数据访问单元的课程，包括\r\n            \r\n            <ul>\r\n            <li>时间印章和</li>\r\n            <li>直接从容器中提取的原始未解释字节阵列。\r\n","getDrmInfo":"getdrminfo\r\n","android.hardware.camera2.params.StreamConfigurationMap.isOutputSupportedFor(android.view.Surface)":"android.hardware.camera2.params.streamconfigurationmap.isoutputsupportedfor（android.view.surface）\r\n","android.media.metrics.PlaybackMetrics.CONTENT_TYPE_UNKNOWN":"android.media.metrics.playbackmetrics.content_type_unknown\r\n","Cas session is used to descramble live streams and encrypt local recorded content":"CAS会话用于描述实时流和加密本地记录的内容\r\n","Stop bluetooth SCO audio connection.":"停止蓝牙SCO音频连接。\r\n","android.media.ExifInterface.TAG_CUSTOM_RENDERED":"android.media.exifinterface.tag_custom_rendered\r\n","Hyperfocal distance for this lens.":"该镜头的高焦距距离。\r\n","Linear transfer characteristic curve.":"线性转移特性曲线。\r\n","android.hardware.camera2.params.MultiResolutionStreamInfo.getWidth()":"android.hardware.camera2.params.multiresolutionstreaminfo.getWidth（）\r\n","If specified when configuring a video encoder that's in \"surface-input\"\n            mode, it will instruct the encoder to put the surface source in suspended\n            state when it's connected.":"如果在配置“表面输入”中的视频编码器时指定\r\n            模式，它将指示编码器将地面源放在悬浮\r\n            说明何时连接。\r\n"," that came from the system.":" 来自系统。\r\n","android.media.MediaParser.PARAMETER_TS_DETECT_ACCESS_UNITS":"android.media.mediaparser.parameter_ts_detect_access_units\r\n","android.hardware.camera2.params.MandatoryStreamCombination":"android.hardware.camera2.params.mandatoryStreamCombination\r\n"," output formats for a reprocessing input format.":" 输出格式，用于重新处理输入格式。\r\n","Get the ImageWriter format.":"获取ImageWriter格式。\r\n","Retrieves the pre-shared key.":"检索预共享钥匙。\r\n","If the media contains still images, this key retrieves the rotation\n            angle (in degrees clockwise) of the primary image.":"如果介质包含静止图像，则此键检索旋转\r\n            主图像的角度（以顺时针为顺时针）。\r\n","if the Uri is invalid":"如果URI无效\r\n","android.location.LocationManager.getGpsStatus(android.location.GpsStatus)":"android.location.locationmanager.getGpsStatus（android.location.gpsstatus）\r\n","android.media.ExifInterface.TAG_FLASHPIX_VERSION":"android.media.exifinterface.tag_flashpix_version\r\n","android.graphics.ImageFormat#PRIVATE":"android.graphics.ImageFormat#PRIVATE\r\n","Session2Command#COMMAND_CODE_CUSTOM":"Session2Command＃command_code_custom\r\n","Returns true if the image file has the given attribute defined.":"如果图像文件的定义给定的属性，则返回true。\r\n","Convenience method to protect a ":"保护一个的便利方法\r\n","android.hardware.camera2.CaptureResult.get(android.hardware.camera2.Key)":"android.hardware.camera2.captureresult.get（android.hardware.camera2.key）\r\n","The request has failed since the request is not valid.":"由于请求无效，因此该请求失败了。\r\n"," to send hints when creating a\n            ":" 在创建一个时发送提示\r\n            \r\n","Abandon audio focus.":"放弃音频焦点。\r\n","android.media.VolumeShaper":"android.media.volumeshaper\r\n","if not in the Configured state.\n":"如果不在配置状态。\r\n\r\n","Extra used in ":"额外使用\r\n","Maximum and minimum exposure compensation values for\n            ":"最大和最低暴露补偿值\r\n            \r\n","Sets the data source (file-path or http/rtsp URL) to use.":"将数据源（文件路径或HTTP/RTSP URL）设置为使用。\r\n","This class contains extra parameters to pass in a GNSS measurement request.":"此类包含额外的参数，可以传递GNSS测量请求。\r\n","Optimize capture for audio coming from the side of the device facing the user.":"优化来自用户面向用户的设备侧面的音频捕获。\r\n","Provides information about a given media codec available on the device.":"提供有关设备上可用的给定媒体编解码器的信息。\r\n","Registers a callback to get the result of ":"注册一个回调以获取结果\r\n","Constructs a UrlQuerySanitizer and parses a URL.":"构建一个Urquerysanitizer并解析URL。\r\n","Returns the ID represented by a string.":"返回由字符串表示的ID。\r\n","F:Android.Locations.LocationManager.AddTestProvider":"f：android.locations.locationmanager.addtestprovider\r\n","Returns the user preference for \"Match content frame rate\".":"返回对“匹配内容框架速率”的用户偏好。\r\n","android.hardware.usb.UsbDevice":"android.hardware.usb.usbdevice\r\n","android.media.MediaCodec.release()":"android.media.mediacodec.Release（）\r\n","Saturn's gravity in SI units (m/s^2)":"土星在SI单元中的重力（M/S^2）\r\n","android.hardware.camera2.CaptureRequest.CONTROL_POST_RAW_SENSITIVITY_BOOST":"android.hardware.camera2.capturerequest.control_post_raw_sensitivity_boost\r\n","#ERROR":"＃错误\r\n","Display category: Presentation displays.":"显示类别：显示显示。\r\n","Play ready DRM type.":"播放Ready DRM类型。\r\n","Returns all the hardware geofence monitoring systems which are supported":"返回支持的所有硬件地理监控系统\r\n","android.hardware.SensorDirectChannel":"android.hardware.sensordirectChannel\r\n","Effect connection mode is auxiliary.":"效应连接模式是辅助模式。\r\n","android.location.GnssClock.hasElapsedRealtimeNanos()":"android.location.gnssclock.haselapsedrealtimenanos（）\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_DRM_LICENSE_ACQUISITION_FAILED":"android.media.metrics.playbackerrorevent.error_drm_license_acquisition_failed\r\n","Reports whether the value ":"报告价值是否\r\n","MediaCrypto class can be used in conjunction with ":"MediaCrypto类可以与\r\n","AudioFormat#CHANNEL_OUT_STEREO":"AudioFormat＃channel_out_stereo\r\n","If you are done with a buffer, use this call to return the buffer to the codec\n            or to render it on the output surface.":"如果您使用缓冲区完成，请使用此调用将缓冲区返回编解码器\r\n            或将其渲染在输出表面上。\r\n","Metadata Key: Keyboard layout metadata associated with\n            ":"元数据键：键盘布局元数据与\r\n            \r\n","android.media.tv.TvTrackInfo.getVideoActiveFormatDescription()":"android.media.tv.tvtrackinfo.getVideOactiveFormatDescription（）\r\n","#EXTRA_CONTENT_TYPE":"#EXTRA_CONTENT_TYPE\r\n","LocationManager#GPS_PROVIDER":"LocationManager＃gps_provider\r\n","CameraCharacteristics#SENSOR_INFO_BINNING_FACTOR android.sensor.info.binningFactor":"cameracharacteristics＃sensor_info_binning_factor android.sensor.info.binningfactor\r\n","Some effects may issue callbacks to inform the host of changes to the effect state.":"一些效果可能会发出回调，以告知主机对效果状态的更改。\r\n","MediaSession":"传播\r\n","F:Android.Locations.GpsStatus+EventArgs..ctor":"f：android.locations.gpsstatus+EventArgs..ctor\r\n","android.media.AudioTrack.getState()":"android.media.audiotrack.getstate（）\r\n","Internal operation status. ":"内部操作状态。\r\n","android.hardware.location.GeofenceHardware.GEOFENCE_ERROR_ID_UNKNOWN":"android.hardware.location.geofencehardware.geofence_error_id_unknown\r\n","ImageReader ImageReaders":"Imagereader Imagereaders\r\n","android.media.AudioFocusRequest.acceptsDelayedFocusGain()":"android.media.audiofocusrequest.acceptsdelayedfocusgain（）\r\n","Standard name of the network location provider.":"网络位置提供商的标准名称。\r\n","android.media.metrics.PlaybackMetrics.getMediaDurationMillis()":"android.media.metrics.playbackmetrics.getMediadurationMillis（）\r\n","Call supervisory tone, Error/Special info: 950Hz+1400Hz+1800Hz, 330ms ON, 1s OFF...":"呼叫监督色调，错误/特殊信息：950Hz+1400Hz+1800Hz，330ms on，1s Off ...\r\n","VolumeShaper.Operation":"体积纸。操作\r\n","Recommended output file format":"推荐的输出文件格式\r\n","android.location.GpsStatus.create(android.location.GnssStatus, int)":"android.location.gpsstatus.create（android.location.gnssstatus，int）\r\n","SphericalCorrections":"球形校正\r\n","if any of the parameters were negative\n":"如果任何参数为负\r\n\r\n","android.media.tv.TvRecordingClient.release()":"android.media.tv.tvrecordingclient.release（）\r\n","This call warms up the biometric hardware, displays a system-provided dialog, and starts\n            scanning for a biometric.":"此呼叫会加热生物识别硬件，显示系统提供的对话框，并开始\r\n            扫描生物识别。\r\n","android.media.MediaSync.release()":"android.media.mediasync.Release（）\r\n","android.hardware.camera2.CameraCharacteristics.NOISE_REDUCTION_AVAILABLE_NOISE_REDUCTION_MODES":"android.hardware.camera2.cameracharacteristics.noise_reduction_available_noise_reduction_modes\r\n","Modifies the mute flags.":"修改静音标志。\r\n","android.media.midi.MidiReceiver.getMaxMessageSize()":"android.media.midi.midireceiver.getMaxMessagesize（）\r\n","Returns the offset and length of the requested tag inside the image file,\n            or ":"返回图像文件中请求的标签的偏移和长度，\r\n            或者\r\n","Human readable effect implementor name\n":"人类可读效果实施者名称\r\n\r\n","Get the list of custom actions.":"获取自定义操作列表。\r\n","android.net.Ikev2VpnProfile.isMetered()":"android.net.ikev2vpnprofile.ismetered（）\r\n","Sends a session command to the session":"将会话命令发送到会话\r\n","This method is called when the cursor and/or the character position relevant to text input\n            is changed on the screen.":"当光标和/或字符位置与文本输入相关时，将调​​用此方法\r\n            在屏幕上更改。\r\n","android.location.GnssMeasurement.hasFullInterSignalBiasNanos()":"android.location.gnssmeasurement.hasfullintersignalbiasnanos（）\r\n","Operation failed due to lack of memory.":"操作由于缺乏记忆而失败。\r\n","android.media.session.PlaybackState.STATE_BUFFERING":"android.media.session.playbackstate.state_buffering\r\n","The AudioDescriptor contains the information to describe the audio playback/capture\n            capabilities.":"AudioDescriptor包含以描述音频播放/捕获的信息\r\n            功能。\r\n","KEY_AUDIO_SESSION_ID":"key_audio_session_id\r\n","#BUFFER_FLAG_END_OF_STREAM":"#BUFFER_FLAG_END_OF_STREAM\r\n","android.media.ApplicationMediaCapabilities.getUnsupportedVideoMimeTypes()":"android.media.applicationMediacapabilities.getunsupportedVideMimetypes（）\r\n","Sets whether the camera device uses optical image stabilization (OIS)\n            when capturing images.":"设置相机设备是否使用光学图像稳定（OIS）\r\n            捕获图像时。\r\n","android.hardware.usb.UsbInterface.getInterfaceSubclass()":"android.hardware.usb.usbinterface.getInterfacesubclass（）\r\n","#getKeyRequest":"#getKeyRequest\r\n","Gets the maximum volume of the session.":"获取会话的最大音量。\r\n","ExtensionCaptureCallback#onCaptureSequenceCompleted":"ExtensionCaptureCallback＃Oncapturesequencected\r\n","android.net.IpSecAlgorithm.getName()":"android.net.ipsecalgorithm.getName（）\r\n","android.media.Session2Token.getServiceName()":"android.media.session2token.getServiceName（）\r\n","android.net.UrlQuerySanitizer.addSanitizedEntry(java.lang.String, java.lang.String)":"android.net.urlquerysanitizer.addsanitizedEntry（java.lang.string，java.lang.string）\r\n","UsbDeviceConnection#requestWait":"USBDeviceConnection＃requestWait\r\n","CaptureRequest#CONTROL_SCENE_MODE android.control.sceneMode":"CaptureRequest＃CONTROL_SCENE_MODE android的。控制。场景模式\r\n","java.util.concurrent.Executor":"java.util.concurrent.executor\r\n","android.media.audiofx.BassBoost.PARAM_STRENGTH_SUPPORTED":"android.media.audiofx.bassboost.param_strength_supported\r\n","Mark the beginning of a set of additional info frames.":"标记一组其他信息框架的开始。\r\n","android.location.GnssMeasurement.getSvid()":"android.location.gnssmeasurement.getSvid（）\r\n","Max width or height dimension for thumbnails.":"缩略图的最大宽度或高度尺寸。\r\n","Prerendered for headphone playback.":"预先用于耳机播放。\r\n","android.media.ExifInterface.TAG_FLASH_ENERGY":"android.media.exifinterface.tag_flash_energy\r\n","android.media.MediaMetadataRetriever#METADATA_KEY_GENRE":"android.media.mediametadataretriever＃metadata_key_genre\r\n","Sets whether constant bitrate seeking should be enabled for AMR.":"设置是否应为AMR启用恒定的比特率寻求。\r\n","android.media.MediaMetadata.METADATA_KEY_ALBUM":"android.media.mediametadata.metadata_key_album\r\n","A control for selecting whether optical stabilization (OIS) position\n            information is included in output result metadata.":"选择光学稳定（OIS）位置的控制\r\n            信息包含在输出结果元数据中。\r\n","Computes the device's orientation based on the rotation matrix.":"根据旋转矩阵计算设备的方向。\r\n","Event code for STORE_REMOVED event":"store_remaved事件的事件代码\r\n","android.hardware.SensorAdditionalInfo.TYPE_VEC3_CALIBRATION":"android.hardware.sensoradditionalinfo.type_vec3_calibration\r\n"," to receive notifications of routing\n            changes on this MediaPlayer.":" 接收路由通知\r\n            此Mediaplayer的更改。\r\n","android.media.MediaRoute2Info.getVolumeMax()":"android.media.mediaroute2info.getVolumeMax（）\r\n","A class indicating the application criteria for selecting a\n            location provider.":"指示选择应用程序标准的类\r\n            位置提供商。\r\n","android.hardware.camera2.CameraDevice.AUDIO_RESTRICTION_NONE":"android.hardware.camera2.cameradevice.audio_rerteriction_none\r\n","#FLAG_KEY_MEDIA_PAUSE":"#flag_key_media_pause\r\n","android.net.VpnService.isAlwaysOn()":"android.net.vpnservice.isalwayson（）\r\n"," currently bound to this process via\n ":" 目前通过\r\n \r\n","Gets the GNSS receiver internal hardware clock value in nanoseconds.":"在纳秒内获取GNSS接收器内部硬件时钟值。\r\n","Sets the callback to be invoked when the time shift position is changed.":"设置在更改时间移位位置时将调用的回调。\r\n","android.hardware.camera2.CaptureResult.CONTROL_CAPTURE_INTENT":"android.hardware.camera2.captureresult.control_capture_intent\r\n","An optional key describing the opto-electronic transfer function used\n            for the video content.":"描述使用的光电传输函数的可选密钥\r\n            对于视频内容。\r\n","#addGeofence":"#addgeofence\r\n","android.media.projection.MediaProjection.unregisterCallback(android.media.projection.Callback)":"android.media.provention.mediaproction.unregistercallback（android.media.provention.callback）\r\n","#TONE_PROP_BEEP":"#TONE_PROP_BEEP\r\n","android.location.GpsSatellite.getElevation()":"android.location.gpssatellite.getElevation（）\r\n","android.mtp.MtpDevice.importFile(int, android.os.ParcelFileDescriptor)":"android.mtp.mtpdevice.importfile（int，android.os.parcelfiledScriptor）\r\n","if any of the arguments were not finite\n":"如果任何参数不是有限的\r\n\r\n","AudioDescriptor":"audiodescriptor\r\n","Returns parsed ":"返回解析\r\n","android.media.MediaRoute2ProviderService.REASON_REJECTED":"android.media.mediaroute2providerService.Reason_Reasoned\r\n","android.media.MediaMetadata.METADATA_KEY_ALBUM_ART_URI":"android.media.mediametadata.metadata_key_album_art_uri\r\n","android.content.pm.PackageManager#FEATURE_TELEPHONY":"android.content.pm.packagemanager＃feature_telephony\r\n","Returns the audio source selected by the client.":"返回客户端选择的音频源。\r\n","android.hardware.camera2.CaptureResult.CONTROL_AE_REGIONS":"android.hardware.camera2.captureresult.control_ae_rigions\r\n","Time lapse quality level corresponding to the 2K (2048 x 1080) resolution.":"时间失误质量水平对应于2K（2048 x 1080）分辨率。\r\n","Audio presentation content classifier: Dialog.":"音频演示内容分类器：对话框。\r\n","Parser for the ADTS container format, as defined in ISO/IEC 13818-7.":"ADTS容器格式​​的解析器，如ISO/IEC 13818-7所定义。\r\n","android.media.ExifInterface.TAG_ORF_PREVIEW_IMAGE_LENGTH":"android.media.exifinterface.tag_orf_preview_image_length\r\n","Create an input configuration with the width, height, and user-defined format.":"创建具有宽度，高度和用户定义格式的输入配置。\r\n","The metadata key to retrieve the information of the writer (such as\n lyricist) of the data source.":"检索作者信息的元数据键（例如\r\n 数据源的作词人）。\r\n","Builder#setNegativeButton(CharSequence, Executor, DialogInterface.OnClickListener)":"构建器＃setnegativebutton（charsequence，executor，dialogInterface.onclicklistener）\r\n",", after\n ":"， 后\r\n \r\n","android.preference.Preference#getSummary()":"android.preference.preference＃getSummary（）\r\n","if intent is null":"如果意图为无效\r\n",", and can\n            be used in calls to ":"， 并且可以\r\n            在呼叫中使用\r\n","Returns currently selected audio device for communication.":"返回当前选择的音频设备用于通信。\r\n","Used to indicate a temporary request of audio focus, anticipated to last a short\n            amount of time, and where it is acceptable for other audio applications to keep playing\n            after having lowered their output level (also referred to as \"ducking\").":"用于指示音频焦点的临时请求，预计会持续短暂\r\n            其他音频应用程序可以接受的时间以及可以接受的时间\r\n            降低其输出水平（也称为“鸭子”）之后。\r\n","KeyEvent":"关键\r\n","android.hardware.usb.UsbConfiguration":"android.hardware.usb.usbconfiguration\r\n","Called when a client requests transferring a session to a route.":"当客户要求将会话转移到路线时，请致电。\r\n","android.media.AudioManager.setParameters(java.lang.String)":"android.media.audiomanager.setparameters（java.lang.string）\r\n","android.hardware.camera2.CaptureRequest.TONEMAP_MODE":"android.hardware.camera2.capturerequest.tonemap_mode\r\n","Gets the URI of the icon representing this route.":"获取代表这条路线的图标的URI。\r\n","Delete the VPN profile configuration that was provisioned by the calling app":"删除由调用应用程序配置的VPN配置文件配置\r\n","android.media.SyncParams.setSyncSource(int)":"android.media.syncparams.setsyncsource（int）\r\n","Check whether the device has an infrared emitter.":"检查设备是否具有红外发射器。\r\n","android.location.GnssClock.hasReferenceCarrierFrequencyHzForIsb()":"android.location.gnssclock.hasreferencecarrierfrequencyhzforisb（）\r\n","Builds a URI that points to a specific watch next program.":"构建一个指向特定手表下一个程序的URI。\r\n","EditText":"EDITTEXT\r\n","android.hardware.camera2.DngCreator.setLocation(android.location.Location)":"android.hardware.camera2.dngcreator.setlocation（android.location.location）\r\n","android.media.AudioTrack.setOffloadDelayPadding(int, int)":"android.media.audiotrack.setoffloaddelaypadding（int，int）\r\n","android.location.LocationManager.requestLocationUpdates(long, float, android.location.Criteria, android.app.PendingIntent)":"android.location.LocationManager.RequestLocationUpdates（long，float，android.location.Criteria，android.app.pendingIntent）\r\n","android.hardware.camera2.CameraCharacteristics.INFO_VERSION":"android.hardware.camera2.CameraCharacteristics.INFO_VERSION\r\n","A key describing the maximum size in bytes of a buffer of data\n            described by this MediaFormat.":"描述数据缓冲区中最大大小的键\r\n            由此媒体形式描述。\r\n","MediaPlayer#setAudioStreamType(int)":"MediaPlayer＃SetAudioStreamType（int）\r\n","android.hardware.camera2.CaptureResult.LENS_STATE":"android.hardware.camera2.captureresult.lens_state\r\n","android.media.MediaCodec.stop()":"android.media.mediacodec.stop（）\r\n","android.media.MediaCodec.getInputImage(int)":"android.media.mediacodec.getInputimage（int）\r\n","The recommended stream configuration map for use case video snapshot must only contain a\n            subset of efficient liveshot configurations that include\n            ":"用例视频快照的推荐流配置映射必须仅包含\r\n            高效实时拍摄配置的子集，包括\r\n            \r\n","Set the component name of the manifest-declared ":"设置明确指定的组件名称\r\n","android.net.UrlQuerySanitizer.getUrlLegal()":"android.net.urlquerysanitizer.geturllegal（）\r\n","android.location.Location.getVerticalAccuracyMeters()":"android.location.location.getVerticalAccuracymeters（）\r\n","android.graphics.ImageFormat#YUV_420_888":"android.graphics.imageFormat＃yuv_420_888\r\n","Create a new reprocessable camera capture session by providing the desired reprocessing\n            input configuration and output ":"通过提供所需的后处理来创建一个新的可重新处理的相机捕获会话\r\n            输入配置和输出\r\n","android.media.audiofx.EnvironmentalReverb.PARAM_REVERB_LEVEL":"android.media.audiofx.environmentalreverb.param_reverb_level\r\n","Sets the playback head position within the static buffer to zero,\n            that is it rewinds to start of static buffer.":"将静态缓冲区内的播放头位置设置为零，\r\n            这就是倒带静态缓冲区的开始。\r\n","LocationManager#NETWORK_PROVIDER":"LocationManager＃Network_provider\r\n","#PLAYSTATE_PAUSED":"#playstate_pause\r\n","A constant indicating a finer location accuracy.":"常数表示位置精度更高。\r\n","Get a capture request field value.":"获取捕获请求字段值。\r\n","Returns the default camcorder profile at the given quality level for the first back-facing\n            camera on the device.":"在给定质量级别的第一个后背返回默认的摄录机配置文件\r\n            设备上的相机。\r\n","android.hardware.camera2.CaptureResult.SENSOR_NEUTRAL_COLOR_POINT":"android.hardware.camera2.captureresult.sensor_neutral_color_point\r\n","android.hardware.camera2.CameraDevice.createReprocessableCaptureSessionByConfigurations(android.hardware.camera2.params.InputConfiguration, java.util.List, android.hardware.camera2.StateCallback, android.os.Handler)":"android.hardware.camera2.CameradeVice.CreateProcerSableCapturessessionByConfigurations（android.hardware.camera.camera2.params.params.inputconfiguration，java.util.util.list，android.hardware.camera.camera.camera2.camera2.camera2.camera2.statecallback，android.handler）android.handler）android.handler）\r\n","Get a list of supported high speed video recording sizes.":"获取支持的高速视频记录尺寸的列表。\r\n","android.media.JetPlayer.queueJetSegmentMuteArray(int, int, int, int, boolean[], byte)":"android.media.jetplayer.queuejetsegmentmutearray（int，int，int，int，int，boolean []，byte）\r\n"," with all keys that\n            require camera clients to obtain the ":" 所有的钥匙\r\n            要求相机客户端获取 \r\n","Sanitizes the Query portion of a URL.":"消毒URL的查询部分。\r\n","android.inputmethodservice.InputMethodService.onUpdateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)":"android.inputmethodservice.inputmethodservice.onupdatecursoranchorinfo（android.view.inputmethod.cursoranchorinfo）\r\n","android.net.SSLCertificateSocketFactory.setHostname(java.net.Socket, java.lang.String)":"android.net.sslcertificatesocketFactory.sethostname（java.net.socket，java.lang.string）\r\n","if results is null or has length ":"如果结果为空或长度\r\n","android.net.IpSecAlgorithm.AUTH_CRYPT_CHACHA20_POLY1305":"android.net.ipsecalgorithm.auth_crypt_chacha20_poly1305\r\n","android.hardware.camera2.CameraExtensionCharacteristics.EXTENSION_HDR":"android.hardware.camera2.CameraExtensionCharacteristics.extension_hdr\r\n","Selects a track.":"选择轨道。\r\n","android.hardware.camera2.params.ColorSpaceTransform.getElement(int, int)":"android.hardware.camera2.params.colorspacetransform.getElement（int，int）\r\n","android.media.AudioTrack.setDualMonoMode(int)":"android.media.audiotrack.setDualMonomode（int）\r\n","android.media.MediaExtractor.readSampleData(java.nio.ByteBuffer, int)":"android.media.mediaextractor.readsampledata（java.nio.bytebuffer，int）\r\n","Retrieves the RSA private key.":"检索RSA私钥。\r\n",". -or- Sets the ":"。 - 或设置\r\n","android.media.RingtoneManager.EXTRA_RINGTONE_EXISTING_URI":"android.media.ringtonemanager.extra_ringtone_existing_uri\r\n",": Video is unavailable because\n            of a geographical blackout.":"：视频不可用，因为\r\n            地理停电。\r\n","Playback error event.":"播放错误事件。\r\n","Gets the list of currently active ":"获取当前活动的列表\r\n","The maximum gain applied applied to the signal to process.":"应用于信号的最大增益应用于过程。\r\n","android.hardware.usb.UsbDeviceConnection.getSerial()":"android.hardware.usb.usbdeviceconnection.getSerial（）\r\n","Gets the volume control ID.":"获取音量控制ID。\r\n","Builds a URI that points to all channels from a given TV input.":"构建一个URI，指向给定电视输入的所有频道。\r\n","Applies black and white documentary style effect on image.":"在图像上应用黑白纪录片样式效果。\r\n","Indicates this session supports the pause command.":"指示此会话支持暂停命令。\r\n","android.hardware.usb.UsbManager.ACTION_USB_DEVICE_ATTACHED":"android.hardware.usb.usbmanager.action_usb_device_attached\r\n","Broadcast Action:  A broadcast for USB device detached event.":"广播动作：USB设备独立事件的广播。\r\n","Flag indicating a RemoteControlClient makes use of the \"stop\" media key.":"指示RemoteControlclient的标志使用“停止”媒体密钥。\r\n","android.media.MediaRoute2Info.getIconUri()":"android.media.mediaroute2info.geticonuri（）\r\n","Return if audio haptic coupled playback is supported or not.":"返回是否支持音频触觉耦合播放。\r\n","Return the content type.":"返回内容类型。\r\n","State indicating the player is currently skipping to the previous item.":"状态表示玩家当前正在跳到上一项。\r\n","android.media.AudioManager.getActivePlaybackConfigurations()":"android.media.audiomanager.getActivePlayBackConfigurations（）\r\n","Flag indicating a RemoteControlClient makes use of the \"previous\" media key.":"指示RemoteControlclient的标志使用“以前的”媒体密钥。\r\n","android.media.MediaMetadata.keySet()":"android.media.mediametadata.keyset（）\r\n","Sets the listener AudioEffect notifies when the effect engine control is\n taken or returned.":"设置侦听器音频效应在效果引擎控制为时通知\r\n 带走或返回。\r\n","Returns the":"返回\r\n"," to receive dynamic sensor connection callbacks.":" 接收动态传感器连接回调。\r\n","android.media.MediaDrmException":"android.media.mediadrmexception\r\n","if no provider with the given name exists\n":"如果没有给定名称的提供商\r\n\r\n","android.media.projection.MediaProjectionManager.createScreenCaptureIntent()":"android.media.proctive.MediaProctiveManager.CreatesCreencaptureIntent（）\r\n","The MultiResolutionImageReader class wraps a group of ":"多分辨率模仿者类包裹一组\r\n","F:Android.Media.MediaCodec+CryptoException..ctor":"f：android.media.mediacodec+加密copception..ctor\r\n","if format is not a valid media format.":"如果格式不是有效的媒体格式。\r\n","android.media.VolumeProvider.onSetVolumeTo(int)":"android.media.volumeprovider.onsetvolumeto（int）\r\n","Text to output when pressed.":"按下时要输出的文本。\r\n","android.media.MicrophoneInfo.getMaxSpl()":"android.media.microphoneinfo.getmaxspl（）\r\n","android.location.LocationRequest.PASSIVE_INTERVAL":"android.location.locationrequest.passive_interval\r\n","#TONE_CDMA_HIGH_L":"#tone_cdma_high_l\r\n",") or can modified\n (":"）或可以修改\r\n （（\r\n","android.media.MediaPlayer.attachAuxEffect(int)":"android.media.mediaplayer.attachauxeffect（int）\r\n","Returns the height of the video, in the unit of pixels.":"在像素单元中返回视频的高度。\r\n","Estimates magnetic field at a given point on\n            Earth, and in particular, to compute the magnetic declination from true\n            north.":"估计给定点的磁场\r\n            地球，尤其是从真实的\r\n            北。\r\n","android.media.AudioManager.setVibrateSetting(int, int)":"android.media.audiomanager.setVibrateSetting（int，int）\r\n","android.hardware.camera2.CaptureRequest.CONTROL_AWB_LOCK":"android.hardware.camera2.capturerequest.control_awb_lock\r\n","android.location.Address.getThoroughfare()":"android.location.address.getThoroughFare（）\r\n","Indicates whether the current attempt to connect to the network\n resulted from the ConnectivityManager trying to fail over to this\n network following a disconnect from another network.":"指示当前尝试连接到网络的尝试\r\n 由连接管理者试图失败而产生的\r\n 与另一个网络断开连接后的网络。\r\n","State indicating this item is currently buffering and will begin playing\n            when enough data has buffered.":"表明此项目当前正在缓冲，将开始播放\r\n            当足够的数据缓冲时。\r\n","AudioTrack#PERFORMANCE_MODE_LOW_LATENCY":"audiotrack＃performance_mode_low_latency\r\n","android.media.ExifInterface.TAG_MAKER_NOTE":"android.media.exifinterface.tag_maker_note\r\n","This class represents a ":"这个课程代表\r\n","android.hardware.camera2.params.OutputConfiguration.SURFACE_GROUP_ID_NONE":"android.hardware.camera2.params.outputconfiguration.surface_group_id_none\r\n","android.media.AudioManager.ENCODED_SURROUND_OUTPUT_AUTO":"android.media.audiomanager.encoded_surround_output_auto\r\n","USB class for wireless controller devices.":"无线控制器设备的USB类。\r\n","Converts image to sepia tone.":"将图像转换为棕褐色音。\r\n","if the socket was not created by this factory.\n":"如果该工厂未创建插座。\r\n\r\n","android.hardware.SensorManager.GRAVITY_EARTH":"android.hardware.sensormanager.gravity_earth\r\n","android.hardware.camera2.CaptureResult.LENS_FOCUS_DISTANCE":"android.hardware.camera2.captureresult.lens_focus_distance\r\n","Retrieve the codec name.":"检索编解码器名称。\r\n","#getSampleTrackIndex":"#getSampleTrackIndex\r\n","android.media.ExifInterface.isThumbnailCompressed()":"android.media.exifinterface.isthumbnailCompresse（）\r\n","android.media.RingtoneManager.EXTRA_RINGTONE_TYPE":"android.media.ringtonemanager.extra_ringtone_type\r\n","Returns the state of a given TV input.":"返回给定电视输入的状态。\r\n","android.hardware.usb.UsbManager.openDevice(android.hardware.usb.UsbDevice)":"android.hardware.usb.usbmanager.opendevice（android.hardware.usb.usbdevice）\r\n","A DUN-specific Mobile data connection. ":"DUN特定的移动数据连接。\r\n","Capability for lights that has red, green and blue LEDs to control the light's color.":"具有红色，绿色和蓝色LED的灯的能力，可以控制光的颜色。\r\n","Disconnects from the media browser service.":"与媒体浏览器服务断开连接。\r\n","Register a callback to be invoked when a selected track has timed metadata available.":"Register a callback to be invoked when a selected track has timed metadata available.\r\n","The physical camera Id of this particular image buffer stream.":"此特定图像缓冲区流的物理摄像头ID。\r\n","Replaces the current candidates view with a new one.":"用新的视图代替当前的候选人视图。\r\n","android.hardware.camera2.CameraMetadata.CONTROL_EXTENDED_SCENE_MODE_BOKEH_CONTINUOUS":"android.hardware.camera2.camerametadata.control_extended_scene_mode_bokeh_continuul\r\n","android.media.AudioManager.registerMediaButtonEventReceiver(android.app.PendingIntent)":"android.media.audiomanager.registermediabuttoneventreceiver（android.app.pendendIntent）\r\n","Interface for receiving events about media routing changes.":"接收有关媒体路由更改事件的接口。\r\n","android.hardware.camera2.params.InputConfiguration.InputConfiguration(int, int, int)":"android.hardware.camera2.params.inputconfiguration.inputconfiguration（int，int，int）\r\n","TvTrackInfo#TYPE_VIDEO":"TVTRACKINFO＃type_video\r\n","Adds a listener to be notified of changes to the audio mode.":"添加了一个侦听器，以通知音频模式的更改。\r\n","Shortest distance from frontmost surface\n            of the lens that can be brought into sharp focus.":"距最前面的最短距离\r\n            可以使人焦点的镜头。\r\n","#getMaxTracks()":"#getMaxTracks（）\r\n","Returns the value of a numeric key.":"返回数字键的值。\r\n","android.hardware.camera2.params.OutputConfiguration.enableSurfaceSharing()":"android.hardware.camera2.params.outputconfiguration.enablesurfacesharing（）\r\n","android.media.MediaPlayer.setVideoScalingMode(int)":"android.media.mediaplayer.setVidesoscalingmode（int）\r\n","Implement to return our standard ":"实施以返回我们的标准\r\n","F:Android.Mtp.MtpDevice.GetObjectHandles":"F：android.mtp.mtpdevice.getObjectHandles\r\n","android.hardware.camera2.CaptureRequest.CONTROL_AE_TARGET_FPS_RANGE":"android.hardware.camera2.capturerequest.control_ae_target_fps_range\r\n","#TONE_CDMA_LOW_SLS":"#tone_cdma_low_sls\r\n","T:Android.InputMethodServices.AbstractInputMethodService+AbstractInputMethodSessionImpl":"t：android.inputmethodservices.abstractinputmethodservice+AbstractInputMethodSessionImpl\r\n","android.location.Location.bearingTo(android.location.Location)":"android.location.location.bearingto（android.location.location）\r\n","Returns the value associated with the key.":"返回与密钥关联的值。\r\n","android.media.AudioTrack.getStreamType()":"android.media.audiotrack.getStreamType（）\r\n","android.media.MediaFormat.KEY_TILE_WIDTH":"android.media.mediaformat.key_tile_width\r\n","Get the timestamp associated with this frame.":"获取与此框架关联的时间戳。\r\n","android.location.Address.getSubAdminArea()":"android.location.address.getSubadminarea（）\r\n","The list of extended scene modes for ":"扩展场景模式的列表\r\n","android.media.MediaExtractor.getSampleCryptoInfo(android.media.CryptoInfo)":"android.media.mediaextractor.getSamplecryptoInfo（android.media.cryptoinfo）\r\n","android.mtp.MtpEvent.getObjectFormatCode()":"android.mtp.mtpevent.getObjectFormatCode（）\r\n","android.media.audiofx.Visualizer.ERROR_NO_INIT":"android.media.audiofx.visualizer.error_no_init\r\n","android.hardware.usb.UsbConfiguration.getMaxPower()":"android.hardware.usb.usbconfiguration.getmaxpower（）\r\n","android.hardware.usb.UsbRequest.getClientData()":"android.hardware.usb.usbrequest.getClientData（）\r\n","android.media.MediaDrm.OFFLINE_LICENSE_STATE_UNKNOWN":"android.media.mediadrm.offline_license_state_unknown\r\n","Returns the sampling rate of the captured audio.":"返回捕获的音频的采样率。\r\n","android.media.tv.TvContract.ACTION_WATCH_NEXT_PROGRAM_BROWSABLE_DISABLED":"android.media.tv.tvcontract.action_watch_next_next_program_browsable_disabled\r\n","Loads the user-displayed icon for this TV input.":"为此电视输入加载用户播放的图标。\r\n","android.media.MediaCodecInfo.getSupportedTypes()":"android.media.mediacodecinfo.getSuportedTypes（）\r\n"," for the given\n            sensor at the given sampling frequency.":" 对于给定\r\n            传感器以给定采样频率。\r\n"," has a cycle slip detected.":" 检测到周期单。\r\n","android.net.TrafficStats.getMobileTxBytes()":"android.net.trafficstats.getmobiletxbytes（）\r\n","android.inputmethodservice.InputMethodService.sendDefaultEditorAction(boolean)":"android.inputmethodservice.inputmethodservice.senddefaulteditoraction（boolean）\r\n","android.location.Criteria.setPowerRequirement(int)":"Android.Location.Criteria.setPowerRequirlement（INT）\r\n","android.hardware.Sensor.getVendor()":"android.hardware.sensor.getVendor（）\r\n","The time in nanosecond at which the event happened":"事件发生的纳秒时间\r\n","android.media.audiofx.PresetReverb":"android.media.audiofx.presetreverb\r\n","Use this value for the position to indicate the position is not known.":"使用此值以表明位置尚不清楚。\r\n","android.media.AudioManager.getMode()":"android.media.audiomanager.getmode（）\r\n","android.inputmethodservice.InputMethodService.onExtractedSelectionChanged(int, int)":"android.inputmethodservice.inputmethodservice.onextractedselectionclethanged（int，int）\r\n","android.mtp.MtpEvent.getDevicePropCode()":"android.mtp.mtpevent.getDevicePropcode（）\r\n","android.media.RemoteController.getEstimatedMediaPosition()":"android.media.remotecontroller.getEstimatedMediaposition（）\r\n","Gets the Message identifier.":"获取消息标识符。\r\n","android.media.audiofx.AudioEffect.ERROR_BAD_VALUE":"android.media.audiofx.audioeffect.error_bad_value\r\n","GNSS chipset capabilities.":"GNSS芯片组功能。\r\n","Returns the unique serial number for the MTP device":"返回MTP设备的唯一序列号\r\n","AudioRecordingCallback":"AudiorecordingCallback\r\n","Gets video frames dropped.":"获取视频帧掉落。\r\n","android.location.Location.setLongitude(double)":"Android.Location.Location.SetLongitude（双）\r\n","android.media.AudioAttributes.ALLOW_CAPTURE_BY_ALL":"android.media.audioattributes.allow_capture_by_all\r\n","android.media.AudioTrack.ERROR_DEAD_OBJECT":"android.media.audiotrack.error_dead_object\r\n","android.media.ExifInterface.TAG_RW2_SENSOR_TOP_BORDER":"android.media.exifinterface.tag_rw2_sensor_top_border\r\n","Uranus' gravity in SI units (m/s^2)":"天王星在Si单元中的重力（M/S^2）\r\n"," for\n            reprocessable sessions.":" 为了\r\n            可重加的会议。\r\n","android.hardware.biometrics.BiometricPrompt.authenticate(android.hardware.biometrics.CryptoObject, android.os.CancellationSignal, java.util.concurrent.Executor, android.hardware.biometrics.AuthenticationCallback)":"android.hardware.biometrics.BiometricPrompt.authenticate(android.hardware.biometrics.CryptoObject, android.os.CancellationSignal, java.util.concurrent.Executor, android.hardware.biometrics.AuthenticationCallback)\r\n","Extract DRM initialization data if it exists":"提取DRM初始化数据如果存在\r\n","Informs the key that it has been pressed, in case it needs to change its appearance or\n state.":"告知钥匙已经按下了，以防它需要更改外观或\r\n 状态。\r\n"," satellites - the number of satellites used to derive the fix\n ":" 卫星 - 用于得出修复的卫星数量\r\n \r\n","#getStreamMinVolume(int)":"#getStreamMinvolume（int）\r\n","Lens distortion correction is applied without reducing frame rate\n            relative to sensor output.":"透镜失真校正无需降低帧速率\r\n            相对于传感器输出。\r\n","android.media.MediaFormat.KEY_VIDEO_QP_MAX":"android.media.mediaformat.key_video_qp_max\r\n","Acquire the latest ":"获取最新\r\n","Returns the list of keys supported by this ":"返回此支持的密钥列表\r\n","android.media.MicrophoneInfo.LOCATION_PERIPHERAL":"android.media.microphoneinfo.location_peripheral\r\n","CaptureRequest#SHADING_MODE android.shading.mode":"capturerequest＃shading_mode android.shading.mode\r\n","Call this after ":"之后打电话\r\n","Returns the country code of the address, for example \"US\",\n            or null if it is unknown. -or- Sets the country code of the address to the given String, which may\n            be null.":"返回地址的国家代码，例如“我们”，\r\n            或null如果未知。 - 或 - 将地址的国家代码设置为给定的字符串，可能\r\n            为null。\r\n","android.hardware.camera2.CameraCharacteristics.CONTROL_AF_AVAILABLE_MODES":"android.hardware.camera2.cameracharacteristics.control_af_available_modes\r\n","android.hardware.camera2.params.MeteringRectangle.getHeight()":"android.hardware.camera2.params.meteringrectangle.getheight（）\r\n","#SENSITIVITY_UNKNOWN":"#sensitivity_unknown\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_DECODING_FORMAT_EXCEEDS_CAPABILITIES":"android.media.metrics.playbackerrorevent.error_decoding_format_format_exceeds_capabilities\r\n","android.provider.BaseColumns._COUNT":"android.provider.basecolumns._count\r\n","Number of elements in a ":"元素数量\r\n","android.media.metrics.LogSessionId.getStringId()":"android.media.metrics.logsessionid.getstringid（）\r\n","Intent action a client should broadcast when the value of one of its injected settings has\n            changed, so that the setting can be updated in the UI.":"客户应在其注射设置之一的价值的价值的情况下广播的意图行动\r\n            更改，以便可以在UI中更新设置。\r\n","android.location.LocationProvider.supportsSpeed()":"android.location.locationprovider.supportsspeed（）\r\n","Returns the width of the MTP object's thumbnail in pixels\n            Will be zero for objects with no thumbnail":"返回以像素为单位的MTP对象的缩略图的宽度\r\n            对于没有缩略图的物体将为零\r\n","Sign data using the CryptoSessions's mac algorithm.":"使用密码量的MAC算法签名数据。\r\n","android.media.MediaFormat.KEY_AAC_ENCODED_TARGET_LEVEL":"android.media.mediaformat.key_aac_encoded_target_level\r\n","Starts or resumes playback.":"启动或恢复播放。\r\n","android.media.RingtoneManager.getRingtonePosition(android.net.Uri)":"android.media.ringtonemanager.getringtoneposition（android.net.uri）\r\n","android.media.session.MediaSessionManager.isTrustedForMediaControl(android.media.session.RemoteUserInfo)":"android.media.session.mediasessionmanager.istrustedformediacontrol（android.media.session.remoteuserinfo）\r\n","Gets the room HF level.":"获取房间HF级别。\r\n","An optional key describing the range of the component values of the video content.":"一个可选的键，描述了视频内容的组件值范围。\r\n","Encapsulation metadata type for framework tuner information.":"用于框架调谐器信息的封装元数据类型。\r\n","Reports whether a valid ":"报告是否有效\r\n","Returns a list of audio devices that can be selected for communication use cases via\n            ":"返回可以通过\r\n            \r\n","Makes progress in the extraction of the input media stream, unless the end of the input has\n            been reached.":"在提取输入介质流的提取方面取得了进展，除非输入的结尾已\r\n            已达到。\r\n","android.hardware.camera2.CameraCharacteristics.REQUEST_MAX_NUM_OUTPUT_PROC":"android.hardware.camera2.cameracharacteristics.request_max_num_output_proc\r\n","android.media.audiofx.HapticGenerator":"android.media.audiofx.hapticgenerator\r\n","MicrophoneInfo":"麦克风\r\n","Get the current active state of this session. -or- Set if this session is currently active and ready to receive commands.":"获取本届会议的当前活动状态。 - 或设置此会话当前处于活动状态并准备接收命令。\r\n","Callback for when JET's number of queued segments is updated.":"何时更新JET的排队段数量。\r\n","android.media.AudioRecordingConfiguration.getAudioSource()":"android.media.audiorecordingConfiguration.getAudioSource（）\r\n","android.media.AudioRecord.getRecordingState()":"android.media.audiorecord.getRecordingState（）\r\n","android.media.MediaSession2 MediaSession2s":"android.media.mediasession2 MediaSession2S\r\n","android.media.session.PlaybackState.STATE_PAUSED":"android.media.session.playbackstate.state_paused\r\n","Get the input formats in this multi-resolution stream configuration.":"在此多分辨率流配置中获取输入格式。\r\n"," set on this link.":" 设置此链接。\r\n","The maximum possible frame duration (minimum frame rate) for\n            ":"最大可能的框架持续时间（最小帧速率）\r\n            \r\n","'s terminology\n            it is a key frame.":"的术语\r\n            这是一个关键框架。\r\n","InputMethodManager#RESULT_UNCHANGED_HIDDEN InputMethodManager.RESULT_UNCHANGED_HIDDEN":"inputmethodmanager＃result_unchanged_hidden inputmethodmanager.result_unchanged_hidden\r\n","MtpStorageInfo":"mtpstorageinfo\r\n","The date the media was created or published.":"媒体创建或发布的日期。\r\n","android.media.MediaMetadata":"android.media.mediametadata\r\n","If there's not enough room to write the elements at the specified destination and\n          offset.\n":"如果没有足够的空间在指定的目的地编写元素，并且\r\n          抵消。\r\n\r\n","The physical camera device ID in case the capture failure comes from a ":"物理相机设备ID如果捕获失败来自\r\n","Helper function to convert a rotation vector to a normalized quaternion.":"助手功能将旋转矢量转换为归一化四元基因。\r\n",": Video is unavailable because\n            of unknown CAS error.":"：视频不可用，因为\r\n            未知CAS错误。\r\n","android.net.LocalSocketAddress":"android.net.localsocketDress\r\n","Playback information indicating the playback volume is fixed, i.e. it cannot be\n controlled from this object.":"播放信息表示播放卷已修复，即不能是\r\n 由这个对象控制。\r\n","Event code for OBJECT_REFERENCES_CHANGED event":"object_references_changed事件的事件代码\r\n","android.media.Ringtone.isHapticGeneratorEnabled()":"android.media.ringtone.ishapticgeneratorEnabled（）\r\n","Obtains the socket's local address":"获得插座的本地地址\r\n","The physical dimensions of the full pixel\n            array.":"完整像素的物理尺寸\r\n            大批。\r\n","android.hardware.camera2.params.ExtensionSessionConfiguration.getExtension()":"android.hardware.camera2.params.extensionsessessessesseessconfiguration.getExtension（）\r\n"," of the device.":" 设备。\r\n","android.media.ExifInterface.STREAM_TYPE_FULL_IMAGE_DATA":"android.media.exifinterface.stream_type_full_image_data\r\n","android.media.MediaFormat.KEY_MPEGH_REFERENCE_CHANNEL_LAYOUT":"android.media.mediaformat.key_mpegh_reference_channel_layout\r\n","HardwareBuffer wraps a native <code>AHardwareBuffer</code> object, which is a low-level object\n            representing a memory buffer accessible by various hardware units.":"HardwareBuffer包装本机<code> ahardwarebuffer </code>对象，这是一个低级对象\r\n            代表各种硬件单元可访问的内存缓冲区。\r\n","OnNmeaMessageListener":"OnnMeamessageListener\r\n","KeyEvent#KEYCODE_MEDIA_NEXT":"keyevent＃keycode_media_next\r\n","android.media.MediaCas":"android.media.mediacas\r\n","#play":"＃玩\r\n","Return the flags.":"返回标志。\r\n","android.media.browse.MediaBrowser.getSessionToken()":"android.media.browse.mediabrowser.getSessionToken（）\r\n","OutputConfiguration#addSurface addSurface":"outputconfiguration＃addsurface addsurface\r\n","The fine-grained state of a network connection.":"网络连接的细粒度状态。\r\n","android.media.metrics.LogSessionId":"android.media.metrics.logsessionid\r\n","All types of sounds.":"所有类型的声音。\r\n","android.media.MediaDescrambler.SCRAMBLE_CONTROL_ODD_KEY":"android.media.mediadescrambler.scramble_control_odd_key\r\n","android.media.MediaFormat.getFeatureEnabled(java.lang.String)":"android.media.mediaformat.getFeatureEnabled（java.lang.string）\r\n","Gets the accumulated delta range since the last channel reset, in meters.":"自上次通道重置以来，以米为单位获得累积的三角洲范围。\r\n","Sets the video source to be used for recording.":"设置用于录制的视频源。\r\n","Pauses the playback of the JET segment queue.":"暂停喷气段队列的播放。\r\n","s that you've added to this service.":"您已添加到此服务中。\r\n","Creates an empty MediaFormat":"创建一个空的MediaFormat\r\n","A constant string describing a proximity sensor type.":"描述接近传感器类型的常数字符串。\r\n"," output formats.":" 输出格式。\r\n","Loads the custom label set by user in settings.":"加载用户在设置中设置的自定义标签。\r\n","android.media.MediaPlayer.setDataSource(android.content.res.AssetFileDescriptor)":"android.media.mediaplayer.setdatasource（android.content.res.res.assetfiledscriptor）\r\n","Returns the approximate distance in meters between this\n            location and the given location.":"在此之间返回大约米的距离\r\n            位置和给定的位置。\r\n","Type is rational.":"类型是理性的。\r\n","AudioFormat#ENCODING_INVALID":"AudioFormat＃encoding_invalid\r\n","android.media.MediaCodec.getCodecInfo()":"android.media.mediacodec.getCodecinfo（）\r\n"," after configuration finalization see\n            ":" 配置完成后，请参见\r\n            \r\n","ApplicationMediaCapabilities":"ApplicationMediacababilities\r\n","android.media.CameraProfile.getJpegEncodingQualityParameter(int)":"android.media.cameraprofile.getjpegencodingqualityparameter（int）\r\n","Rect":"矩形\r\n","android.media.metrics.PlaybackMetrics.STREAM_TYPE_PROGRESSIVE":"android.media.metrics.playbackmetrics.stream_type_progressive\r\n","UsbInterface":"USBinterface\r\n","android.location.GnssMeasurement.getCn0DbHz()":"android.location.gnssmeasurement.getCN0DBHz（）\r\n","Report the extra information about the network state, if any was\n provided by the lower networking layers.":"报告有关网络状态的额外信息，如果有的话\r\n 由较低的网络层提供。\r\n","AudioPresentation#MASTERED_FOR_SURROUND":"Audiopersentation＃Mastered_for_surround\r\n","android.media.ExifInterface.TAG_INTEROPERABILITY_INDEX":"android.media.exifinterface.tag_interoperability_index\r\n","android.media.AudioAttributes.ALLOW_CAPTURE_BY_SYSTEM":"android.media.audioattributes.allow_capture_by_system\r\n","A constant string describing a low-latency offbody detector sensor.":"一个恒定的字符串，描述了一个低延迟探测器传感器。\r\n","A class representing an endpoint on a ":"代表端点的类\r\n","Retrieve the To address line from the parsed mailto URL.":"从解析的邮件中检索到地址线。\r\n","android.media.ImageWriter ImageWriter":"android.media.imageWriter ImageWriter\r\n","Returns whether the application that would use this ":"返回是否使用此应用程序\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_PARSING_CONTAINER_MALFORMED":"android.media.metrics.playbackerrorevent.error_parsing_container_malformed\r\n","android.media.metrics.TrackChangeEvent.getVideoFrameRate()":"android.media.metrics.trackchangeevent.getVideoframerate（）\r\n","Return the proxy port set by the user.":"返回用户设置的代理端口。\r\n"," instance with a ":" 实例与\r\n","android.hardware.usb.UsbManager.hasPermission(android.hardware.usb.UsbAccessory)":"android.hardware.usb.usbmanager.haspermission（android.hardware.usb.usbaccessory）\r\n","android.hardware.camera2.CameraCharacteristics.SHADING_AVAILABLE_MODES":"android.hardware.camera2.cameracharacteristics.shading_available_modes\r\n"," if this is a\n            passive, no power request.":" 如果这是\r\n            被动，没有电源请求。\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_PREVIEW":"android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_PREVIEW\r\n","The sound used by\n ":"使用的声音\r\n \r\n","Set the current user-visible status for this route.":"设置此路线的当前用户可见状态。\r\n","android.media.MediaRecorder.setInputSurface(android.view.Surface)":"android.media.mediarecorder.setInputsurface（android.view.surface）\r\n","android.net.VpnService.protect(java.net.Socket)":"android.net.vpnservice.protect（java.net.socket）\r\n","#TONE_CDMA_MED_SS_2":"＃tone_cdma_med_ss_2\r\n"," running\n            at regular non high speed FPS ranges and optionally ":" 跑步\r\n            在常规的非高速FPS范围内，可选\r\n","UUID for bass boost effect":"低音提升效果的UUID\r\n","if the device does not support the\n specified scheme UUID\n":"如果设备不支持\r\n 指定方案UUID\r\n\r\n","Increment count of network operations performed under the accounting tag\n            currently active on the calling thread.":"在会计标签下执行的网络操作的增量计数\r\n            当前在调用线程上处于活动状态。\r\n","Attempt to connect failed.":"尝试连接失败。\r\n","indicates AudioRecord state is not successfully initialized.":"表示Audiorecord状态未成功初始化。\r\n","Parser for the AMR container format, as defined in RFC 4867.":"RFC 4867中定义的AMR容器格式的解析器。\r\n","#BIOMETRIC_ERROR_NONE_ENROLLED":"#biometric_error_none_enrolled\r\n","Plays a series of audio URIs, but does all the hard work on another thread\n            so that any slowness with preparing or loading doesn't block the calling thread.":"播放一系列音频URI，但在另一个线程上做了所有辛勤工作\r\n            因此，任何准备或加载的缓慢都不会阻止调用线程。\r\n","android.media.session.PlaybackState.STATE_ERROR":"android.media.session.playbackstate.state_error\r\n","Authenticators#DEVICE_CREDENTIAL":"身份验证器＃device_credential\r\n","Bundle key for the device's corresponding Bluetooth device.":"设备相应的蓝牙设备的捆绑键。\r\n","Returns a subset of the list returned by ":"返回由 \r\n","Add a route to this group before the specified index.":"在指定索引之前向该组添加路由。\r\n","Get the rectangle area or region for rendering the timed text as specified\n            by a Rect object.":"获取矩形区域或区域以呈现定时文本\r\n            通过矩形对象。\r\n","android.media.UnsupportedSchemeException":"android.media.unsupportedschemeexception\r\n","android.inputmethodservice.InputMethodService.sendDownUpKeyEvents(int)":"android.inputmethodservice.inputmethodservice.senddownupkeyevents（int）\r\n","android.media.CamcorderProfile.audioBitRate":"android.media.camcorderprofile.audiobitrate\r\n","Returns the double value of the tag that is specified as rational or contains a\n            double-formatted value.":"返回指定为合理或包含一个标签的双重值\r\n            双格式值。\r\n","android.media.Session2Token.getPackageName()":"android.media.session2token.getPackagename（）\r\n","A constant describing the significant motion trigger sensor.\n See ":"描述显着运动触发传感器的常数。\r\n 见 \r\n","OnGetControllerHintsListener":"OngetControllerHintslistener\r\n","android.media.AudioManager.getStreamMaxVolume(int)":"android.media.audiomanager.getStreammaxvolume（int）\r\n","android.media.audiofx.Visualizer.setDataCaptureListener(android.media.audiofx.OnDataCaptureListener, int, boolean, boolean)":"android.media.audiofx.visualizer.setDataCapturIsristener（android.media.audiofx.ondataCapturolisturisteristener，int，boolean，boolean）\r\n",", so that the content of the buffer is\n            accessible.":"，使缓冲区的内容是\r\n            无障碍。\r\n","android.hardware.camera2.CameraCharacteristics.CONTROL_AE_AVAILABLE_ANTIBANDING_MODES":"android.hardware.camera2.cameracharacteristics.control_ae_available_antibanding_modes\r\n","USB class for still image devices (digital cameras).":"静止图像设备（数码相机）的USB类。\r\n","android.media.MediaFormat.KEY_SAMPLE_RATE":"android.media.mediaformat.key_sample_rate\r\n","android.net.TrafficStats.getUidUdpRxPackets(int)":"android.net.trafficstats.getuidudprxpackets（int）\r\n","Sets whether TS should treat samples consisting of non-IDR I slices as synchronization\n            samples (key-frames).":"设置TS是否应将由非IDR I切片组成的样品作为同步\r\n            样品（键框）。\r\n","Mode of operation for the lens distortion correction block.":"镜头失真校正块的操作模式。\r\n","android.media.AudioTrack.DUAL_MONO_MODE_OFF":"android.media.audiotrack.dual_mono_mode_off\r\n","A description that is suitable for display to the user.":"适用于用户显示的说明。\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.getOutputStallDuration(java.lang.Class, android.util.Size)":"android.hardware.camera2.params.RecommendStreamConfigurationMap.getOutputstallDuration（java.lang.class，android.util.size）\r\n","UUID for virtualizer effect":"虚拟器效果的UUID\r\n","Sets the album / artwork picture to be displayed on the remote control.":"设置专辑 /艺术品图片将显示在遥控器上。\r\n","android.media.audiofx.Visualizer.Visualizer(int)":"android.media.audiofx.Visualizer.Visualizer（INT）\r\n","android.hardware.camera2.CameraManager.getCameraExtensionCharacteristics(java.lang.String)":"android.hardware.camera2.cameramanager.getCameraExtensionCharacteristical（java.lang.string）\r\n","android.media.AudioDeviceInfo.getAudioProfiles()":"android.media.audiodeviceinfo.getaudioprofiles（）\r\n","Returns number of milliseconds since Jan.":"自1月以来返回毫秒数。\r\n","android.media.MediaFormat.KEY_IS_DEFAULT":"android.media.mediaformat.key_is_default\r\n","Called first thing after an input method is created, this supplies a\n            unique token for the session it has with the system service.":"创建输入方法后称为第一件事，这将提供\r\n            它在系统服务中的会话中的唯一令牌。\r\n","the element at index ":"索引的元素\r\n","Retrieves the pitch factor.":"检索音高因子。\r\n","#requestPermission(UsbDevice, PendingIntent)":"#requestpermission（USBDEVICE，pENDENDINTENT）\r\n","Encodes and sets the query.":"编码并设置查询。\r\n","Listens for changes in available display devices.":"聆听可用显示设备的更改。\r\n","android.hardware.camera2.params.InputConfiguration":"android.hardware.camera2.params.inputconfiguration\r\n","#getHighSpeedVideoSizes()":"#gethighspeedVideosizes（）\r\n","android.media.MediaCodec.getInputBuffer(int)":"android.media.mediacodec.getInputbuffer（int）\r\n","Operating mode for hot pixel map generation.":"热像素地图生成的操作模式。\r\n","android.media.AudioManager.getParameters(java.lang.String)":"android.media.audiomanager.getParameters（java.lang.string）\r\n","Constellation type constant for Galileo.":"伽利略的星座类型常数。\r\n","android.media.MediaRecorder.setNextOutputFile(java.io.FileDescriptor)":"android.media.mediarecorder.setNextOutputfile（java.io.filedescriptor）\r\n","android.location.GnssMeasurement.STATE_BIT_SYNC":"android.location.gnssmeasurement.state_bit_sync\r\n","android.media.MediaCas.SESSION_USAGE_TIMESHIFT":"android.media.mediacas.session_usage_timeshift\r\n","Retrieve the CC address line from the parsed mailto URL.":"从解析的邮件到URL中检索CC地址线。\r\n","MediaMetadataRetriever class provides a unified interface for retrieving\n            frame and meta data from an input media file.":"MediaMetadatareTriever类提供了一个统一的接口\r\n            来自输入媒体文件的帧和元数据。\r\n","android.media.MediaCas.MediaCas(android.content.Context, int, java.lang.String, int)":"android.media.mediacas.mediacas（android.content.context，int，java.lang.string，int）\r\n","Returns transitions monitored for this geofence. -or- Set the transitions to be monitored.":"对此地理林进行监控的返回过渡。 - 或设置要监视的过渡。\r\n","android.hardware.camera2.CameraCaptureSession.stopRepeating()":"android.hardware.camera2.cameracapturesession.stoprepeating（）\r\n","android.media.tv.TvTrackInfo.getVideoFrameRate()":"android.media.tv.tvtrackinfo.getVideoframerate（）\r\n","A High Priority Mobile data connection. ":"高优先级移动数据连接。\r\n","Indicates that the user has indicated implicit trust of this network.":"表示用户已表示该网络的隐式信任。\r\n","The amount of exposure time increase factor applied to the original output\n            frame by the application processing before sending for reprocessing.":"适用于原始输出的曝光时间增加因子的量\r\n            在发送重新处理之前，按申请处理进行框架。\r\n","android.net.LocalSocket.getLocalSocketAddress()":"android.net.localsocket.getLocalsocketDress（）\r\n","An optional key describing the HDR10+ metadata of the video content.":"描述视频内容的HDR10+元数据的可选密钥。\r\n","Sets the volume on this player.":"设置此播放器的音量。\r\n","android.media.ExifInterface#ORIENTATION_ROTATE_270":"android.media.exifinterface＃orientation_rotate_270\r\n","android.media.MediaFormat.getString(java.lang.String, java.lang.String)":"android.media.mediaformat.getString（java.lang.string，java.lang.string）\r\n","#GEOFENCE_UNCERTAIN":"#GEOFENCE_UNCENTION\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_RECORD":"android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_RECORD\r\n","if the given thumbnail image has a dimension\n      larger than ":"如果给定的缩略图图像具有尺寸\r\n      比大\r\n","Retrieve the underlying codec name.":"检索基础编解码器名称。\r\n","A data class representing a geographic location.":"代表地理位置的数据类。\r\n","Broadcast Action: sent by the system to tell the target TV input that one of its preview\n            program's browsable state is disabled, i.":"广播动作：系统发送以告诉目标电视输入其预览之一\r\n            程序的可浏览状态是禁用的。\r\n","Ringer mode that will be silent and will vibrate. ":"林格模式将保持沉默并会振动。\r\n","Gets the decoded authority part of this URI.":"获取该URI的解码权限。\r\n","android.media.MediaMetadataEditor.addEditableKey(int)":"android.media.mediametadataeditor.addeditablekey（int）\r\n","F:Android.Media.MediaRecorder+IOnErrorListener.OnError":"f：android.media.mediarecorder+ionerrorlistener.onerror\r\n","MediaRouter2":"Mediarouter2\r\n","android.hardware.camera2.CaptureRequest.JPEG_THUMBNAIL_SIZE":"android.hardware.camera2.capturerequest.jpeg_thumbnail_size\r\n","android.media.MediaDrm.getSupportedCryptoSchemes()":"android.media.mediadrm.getSupportedCryptoschemes（）\r\n","Time lapse quality level corresponding to the 720p (1280 x 720) resolution.":"时间失误质量水平对应于720p（1280 x 720）分辨率。\r\n","AudioAttributes#ALLOW_CAPTURE_BY_ALL":"AudioAttributes＃allow_capture_by_all\r\n","The height of this particular image buffer stream in pixels.":"该特定图像缓冲流在像素中的高度。\r\n","An immutable package of settings and outputs needed to capture a single\n            image from the camera device.":"捕获单个的设置和输出的不变的包装\r\n            来自相机设备的图像。\r\n","Configures the recorder to use a persistent surface when using SURFACE video source.":"配置录音机使用表面视频源时使用持续的表面。\r\n","Defines whether volume for the playback associated with this route is fixed\n (":"定义与此路线关联的播放的音量是否固定\r\n （（\r\n","Get the flags for this session.":"获取此会话的标志。\r\n","#getBiasNanos()":"#getBiasnanos（）\r\n","This GNSS measurement's tracking state has time-of-week decoded.":"该GNSS测量的跟踪状态已经进行了周的解码。\r\n","The desired mode for the camera device's\n            auto-exposure routine.":"相机设备的所需模式\r\n            自动暴露例程。\r\n",": Video is unavailable because\n            the device need be paired.":"：视频不可用，因为\r\n            该设备需要配对。\r\n","#TONE_DTMF_5":"＃tone_dtmf_5\r\n","This exception is thrown when the MediaDrm instance has become unusable\n            due to a restart of the mediaserver process.":"当MediaDRM实例变得无法使用时，将引发此例外\r\n            由于重新启动了MediaServer流程。\r\n","Requests to make a channel browsable.":"要求浏览频道。\r\n","android.hardware.location.GeofenceHardwareRequest.getMonitorTransitions()":"android.hardware.location.geofencehardwarerequest.getMonitorTransitions（）\r\n","android.media.ExifInterface.TAG_NEW_SUBFILE_TYPE":"android.media.exifinterface.tag_new_subfile_type\r\n","android.hardware.camera2.CameraManager.registerAvailabilityCallback(android.hardware.camera2.AvailabilityCallback, android.os.Handler)":"android.hardware.camera2.cameramanager.registeravailablecalback（android.hardware.camera.camera.camera2.availablecycallback，android.os.handler）\r\n","android.media.AsyncPlayer.AsyncPlayer(java.lang.String)":"android.media.asyncplayer.asyncplayer（java.lang.string）\r\n","Gets the controller information who sent the current request.":"获取发送当前请求的控制器信息。\r\n","SessionCallback#onCommandResult":"SessionCallback＃OnCommandResult\r\n","Query if a HDR type is supported by the application.":"查询如果应用程序支持HDR类型。\r\n","This event type indicates that the app needs to request a certificate from\n            the provisioning server.":"此事件类型表明该应用需要从\r\n            配置服务器。\r\n","Default YUV/PRIVATE size to use for requesting secure image buffers.":"默认的YUV/私人大小用于请求安全的图像缓冲区。\r\n","android.media.MediaRoute2ProviderService.REASON_UNKNOWN_ERROR":"android.media.mediaroute2ProviderService.Reason_Unknown_Error\r\n","Sets the Audio Description mix level in dB.":"将音频描述混合级别设置为DB。\r\n","android.location.LocationManager.unregisterGnssNavigationMessageCallback(android.location.Callback)":"android.location.locationmanager.unregistergnssnavigationmessagecallback（android.location.callback）\r\n","Operation code for GetPartialObject64":"GetPartialObject的操作代码64\r\n"," object encapsulating the phase center offset and\n            corresponding uncertainties in millimeters.":" 对象封装相中中心偏移和\r\n            毫米中的相应不确定性。\r\n","android.media.audiofx.EnvironmentalReverb.PARAM_ROOM_LEVEL":"android.media.audiofx.environmentalreverb.param_room_level\r\n","android.media.MediaFormat.createVideoFormat(java.lang.String, int, int)":"android.media.mediaformat.createvideoformat（java.lang.string，int，int）\r\n","android.media.ExifInterface.TAG_ORF_THUMBNAIL_IMAGE":"android.media.exifinterface.tag_orf_thumbnail_image\r\n","android.hardware.camera2.params.InputConfiguration.isMultiResolution()":"android.hardware.camera2.params.inputconfiguration.ismultiresolution（）\r\n"," to request the native or optimal output buffer size\n            for this device's low latency output stream, in decimal PCM frames.":" 请求本机或最佳输出缓冲区大小\r\n            对于此设备的低延迟输出流，以十进制PCM帧为单位。\r\n","Register for location updates from the specified provider, using a ":"注册从指定提供商的位置更新，使用\r\n","android.mtp.MtpStorageInfo.getStorageId()":"android.mtp.mtpstorageinfo.getstorageid（）\r\n","android.media.effect.EffectContext":"android.media.effect.effectContext\r\n","#getOutputSizes(Class)":"#getOutputsizes（class）\r\n","AudioEffect is the base class for controlling audio effects provided by the android audio\n            framework.":"音频效应是控制Android音频提供的音频效果的基类\r\n            框架。\r\n","android.location.Location.setVerticalAccuracyMeters(float)":"Android.Location.Location.SetverticalAccuracymeters（float）\r\n","Operation code for SetObjectPropValue":"setObjectPropvalue的操作代码\r\n","Returns the level in dB of the minimum SPL that can be registered by the device at 1000Hz.":"返回设备可以在1000Hz处注册的最小SPL的DB级别。\r\n","Returns a new socket factory instance with an optional handshake timeout\n            and SSL session cache.":"返回具有可选握手超时的新插座工厂实例\r\n            和SSL会话缓存。\r\n","android.media.AudioManager.loadSoundEffects()":"android.media.audiomanager.loadsoundeffects（）\r\n","android.net.IpSecAlgorithm.AUTH_HMAC_SHA256":"android.net.ipsecalgorithm.auth_hmac_sha256\r\n","The request has failed since this service rejected the request.":"自从此服务拒绝请求以来，请求失败了。\r\n"," graphic object.":" 图形对象。\r\n","android.location.Location.setExtras(android.os.Bundle)":"android.location.location.setExtras（android.os.bundle）\r\n","The z-axis Euler angle of a face.":"面部的Z轴欧拉角。\r\n","Desired distance to plane of sharpest focus,\n            measured from frontmost surface of the lens.":"所需的距离焦点最锐利的距离，\r\n            从镜头的最前表面测量。\r\n",": the area inside of\n the visible insets can be touched.":"：内部的区域\r\n 可见的插图可以触摸。\r\n","android.media.ExifInterface.getThumbnailBytes()":"android.media.exifinterface.getThumbNailbytes（）\r\n","android.media.MediaPlayer.setSurface(android.view.Surface)":"android.media.mediaplayer.setsurface（android.view.surface）\r\n","android.hardware.SensorManager.registerListener(android.hardware.SensorListener, int)":"android.hardware.sensormanager.RegisterListener（android.hardware.sensorlistener，int）\r\n","android.net.IpSecAlgorithm.CREATOR":"android.net.ipsecalgorithm.creator\r\n"," contains its corresponding azimuth angle\n          expressed in degrees, where 0 is the direction the listener faces, 180 is behind\n          the listener, and -90 is to her/his left,":" 包含其相应的方位角\r\n          以学位表示，其中0是听众面对的方向，180在后面\r\n          听众，-90在她/他的左边，\r\n","android.inputmethodservice.InputMethodService.onKeyDown(int, android.view.KeyEvent)":"android.inputmethodservice.inputmethodservice.onkeydown（int，android.view.keyevent）\r\n","android.media.MediaExtractor.SAMPLE_FLAG_ENCRYPTED":"android.media.mediaextractor.sample_flag_encrypted\r\n"," supported\n            by this camera device.":" 支持\r\n            由该摄像装置。\r\n","#TONE_CDMA_MED_SS":"#TONE_CDMA_MED_SS\r\n","android.inputmethodservice.InputMethodService.setInputView(android.view.View)":"android.inputmethodservice.inputmethodservice.setInputView（android.view.view）\r\n","android.inputmethodservice.InputMethodService.onViewClicked(boolean)":"android.inputmethodservice.inputmethodservice.onviewclicked（boolean）\r\n","Returns a constant indicating the desired horizontal accuracy (latitude and longitude). -or- Indicates the desired horizontal accuracy (latitude and longitude).":"返回一个常数，表示所需的水平准确性（纬度和经度）。 - 或指示所需的水平准确性（纬度和经度）。\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_AUDIO_TRACK_INIT_FAILED":"android.media.metrics.playbackerrorevent.error_audio_track_init_failed\r\n","A class containing a GNSS satellite Navigation Message.":"包含GNSS卫星导航消息的类。\r\n","android.media.ExifInterface.TAG_ORF_ASPECT_FRAME":"android.media.exifinterface.tag_orf_aspect_frame\r\n","android.hardware.lights.LightState.getPlayerId()":"android.hardware.lights.lights.getplayerid（）\r\n","Implement the Parcelable interface":"实现包裹界面\r\n","android.inputmethodservice.InputMethodService.setCandidatesViewShown(boolean)":"android.inputmethodservice.inputmethodservice.setcandidatesviewshown（boolean）\r\n","android.media.Ringtone.setLooping(boolean)":"android.media.rringtone.setlooping（boolean）\r\n","android.location.Location.removeAltitude()":"android.location.location.removealtitude（）\r\n","Get the shift in x direction.":"沿X方向转移。\r\n","Gets the surround sound mode.":"获取环绕声模式。\r\n","Performs a control transaction on endpoint zero for this device.":"对此设备执行对控制交易的零。\r\n","Decrease the ringer volume.":"减少铃声体积。\r\n","Releases the native AudioEffect resources.":"释放本地音频效应资源。\r\n","android.hardware.camera2.CameraMetadata.SCALER_ROTATE_AND_CROP_270":"android.hardware.camera2.camerametadata.scaler_rotate_and_crop_270\r\n","There is no biometric hardware.":"没有生物识别硬件。\r\n","Additional info payload data represented in float values.":"其他信息有效负载数据以浮点值表示。\r\n","android.net.Ikev2VpnProfile.getRsaPrivateKey()":"android.net.ikev2vpnprofile.getrsaprivatekey（）\r\n","android.media.Rating.newUnratedRating(int)":"android.media.rating.newunratedrating（int）\r\n","android.location.GnssClock.getTimeNanos()":"android.location.gnssclock.getTimenanos（）\r\n","android.hardware.camera2.DngCreator.setOrientation(int)":"android.hardware.camera2.dngcreator.setorientation（int）\r\n","android.net.TrafficStats.getMobileTxPackets()":"android.net.trafficstats.getmobiletxpackets（）\r\n","This class represents a USB device attached to the android device with the android device\n            acting as the USB host.":"该类代表使用Android设备连接到Android设备上的USB设备\r\n            充当USB主机。\r\n","KeyEvent#KEYCODE_MEDIA_PAUSE":"keyevent＃keycode_media_pause\r\n"," instance for this service":" 此服务的实例\r\n","Stops the muxer.":"停止Muxer。\r\n","android.media.AudioPresentation.MASTERED_FOR_STEREO":"android.media.audiopersentation.mastered_for_stereo\r\n","Factory method for the JetPlayer class.":"JetPlayer类的工厂方法。\r\n"," object) to route\n            the input from this MediaRecorder.":" 对象）路线\r\n            来自此Mediarecorder的输入。\r\n","Returns the configured <code>AudioRecord</code> format.":"返回配置的<code> audiorecord </code>格式。\r\n","Override to handle requests to set the volume of the current output.":"覆盖以处理请求以设置当前输出的音量。\r\n","Reverb preset representing a small room less than five meters in length":"Reverb预设代表一个小于五米长的小房间\r\n","Bass boost effect strength. ":"低音增强效应强度。\r\n","Android.App.Service.START_FLAG_REDELIVERY":"android.app.service.start_flag_redelivery\r\n","Device-specific extension implementation which can blur certain regions of the final image\n            thereby \"enhancing\" focus for all remaining non-blurred parts.":"设备特定的扩展实现，可以模糊最终图像的某些区域\r\n            从而“增强”所有剩余的无毛部件的焦点。\r\n","android.media.ExifInterface.TAG_GPS_TRACK_REF":"android.media.exifinterface.tag_gps_track_ref\r\n","Connects the supplied ":"连接所提供的\r\n","android.media.midi.MidiOutputPort.getPortNumber()":"android.media.midi.midioutputport.getportnumber（）\r\n","Whether this is a modifier key, such as Shift or Alt ":"这是修饰符键，例如Shift还是Alt\r\n","Sets whether a feature is to be enabled (":"设置是否要启用功能（\r\n","Writes an encoded sample into the muxer.":"将编码样品写入Muxer。\r\n","Removes the test location provider with the given name or does nothing if no such test\n            location provider exists.":"用给定名称删除测试位置提供商，或者如果没有这样的测试，则什么都不做\r\n            存在位置提供商。\r\n","Ringer mode that may be audible and may vibrate. ":"铃声模式可能是可听见的，可能会振动。\r\n","An optional key describing the static metadata of HDR (high-dynamic-range) video content.":"一个可选的密钥，描述了HDR（高动态范围）视频内容的静态元数据。\r\n","Gets the PSK identity to report to the server to help agree on the PSK for the provided\n socket.":"获取PSK身份向服务器报告，以帮助就提供的PSK达成共识\r\n 插座。\r\n","mediaFormat":"MediaFormat\r\n","Returns the location of the microphone.":"返回麦克风的位置。\r\n","F:Android.Net.LocalSocket..ctor":"f：android.net.localsocket..ctor\r\n","Used to indicate a temporary gain or request of audio focus, anticipated to last a short\n            amount of time.":"用于指示音频焦点的暂时收益或要求，预计会持续短暂\r\n            多少时间。\r\n","android.hardware.SensorManager.LIGHT_SUNLIGHT_MAX":"android.hardware.sensormanager.light_sunlight_max\r\n","Query if the crypto scheme requires the use of a secure decoder\n            to decode data of the given mime type at the default security level.":"查询如果加密方案需要使用安全解码器\r\n            在默认安全级别上解码给定的MIME类型的数据。\r\n","Gets the synchronization event type.":"获取同步事件类型。\r\n","android.hardware.camera2.CameraCharacteristics.EDGE_AVAILABLE_EDGE_MODES":"机器人。硬件。相机2。CameraCharacteristics.EDGE_AVAILABLE_EDGE_MODES\r\n","#ADJUST_RAISE":"#adjust_raise\r\n"," used by this object. -or- Sets the ":" 该对象使用。 - 或设置\r\n"," is supported by this parser.":" 由这个解析器支持。\r\n","Request preset name.":"请求预设名称。\r\n","The ImageReader class allows direct application access to image data\n            rendered into a ":"Imagereader类允许直接应用程序访问图像数据\r\n            呈现为一个\r\n","upon codec error.\n":"关于编解码错误。\r\n\r\n","HLS (HTTP Live Streaming) stream type.":"HLS（HTTP实时流）流类型。\r\n"," was not supported":" 不支持\r\n","No encapsulation type is specified.":"未指定封装类型。\r\n","android.media.MediaDrm.release()":"android.media.mediadrm.release（）\r\n","android.media.MediaParser.PARAMETER_TS_IGNORE_AVC_STREAM":"android.media.mediaparser.parameter_ts_ignore_avc_stream\r\n","android.media.MediaCodec.CONFIGURE_FLAG_USE_BLOCK_MODEL":"android.media.mediacodec.configure_flag_use_block_model\r\n","Operation code for SetObjectReferences":"setObjectReference的操作代码\r\n","android.media.MediaFormat.setFeatureEnabled(java.lang.String, boolean)":"android.media.mediaformat.setFeatureEnabled（java.lang.string，boolean）\r\n","network":"网络\r\n","android.inputmethodservice.KeyboardView.isProximityCorrectionEnabled()":"android.inputmethodservice.keyboardview.isproximitycorrectionenabled（）\r\n","android.media.AudioTrack.registerStreamEventCallback(java.util.concurrent.Executor, android.media.StreamEventCallback)":"android.media.audiotrack.RegistersTreameMeventCallback（java.util.concurrent.executor，android.media.media.streameventcallback）\r\n","Releases all resources related to this request.":"释放与此请求有关的所有资源。\r\n","Compression quality of JPEG\n            thumbnail.":"JPEG的压缩质量\r\n            缩略图。\r\n","Builds a URI that points to all programs on a given channel.":"构建一个指向给定频道上所有程序的URI。\r\n","Called when a route's presentation display changes.":"当路由显示显示时，请调用。\r\n","#ADJUST_MUTE":"#adjust_mute\r\n","android.hardware.display.VirtualDisplay.resize(int, int, int)":"android.hardware.display.virtualdisplay.resize（int，int，int）\r\n","android.media.MediaDrm.getMaxHdcpLevel()":"android.media.mediadrm.getmaxhdcplevel（）\r\n","android.hardware.usb.UsbDeviceConnection.getRawDescriptors()":"android.hardware.usb.usbdeviceconnection.getRawDescriptors（）\r\n","Operation code for Skip":"跳过的操作代码\r\n","android.media.AudioPresentation.CONTENT_HEARING_IMPAIRED":"android.media.audiopersentation.content_hearing_impaired\r\n","android.location.Location.distanceTo(android.location.Location)":"android.location.location.distanceto（android.location.location）\r\n","android.location.GnssStatus.CONSTELLATION_GPS":"android.location.gnssstatus.constellation_gps\r\n","android.net.IpSecAlgorithm":"android.net.ipsecalgorithm\r\n","Discard any free buffers owned by this ImageReader.":"丢弃此成像顾问拥有的任何免费缓冲区。\r\n","Class for describing the position and characteristics of a single key in the keyboard.":"用于描述键盘中单个键的位置和特征的类。\r\n","Unregisters an ":"解注册\r\n","Checks if the device implements acoustic echo cancellation.":"检查设备是否实现声学回声取消。\r\n","Set the attributes for this session's audio.":"设置此会话音频的属性。\r\n","android.media.AudioTrack.getRoutedDevice()":"android.media.audiotrack.getRoutedDevice（）\r\n","Activity Action: sent by an application telling the system to make the given channel\n            browsable with user interaction.":"活动动作：由应用程序发送的，告诉系统制作给定频道\r\n            可与用户互动一起浏览。\r\n","android.hardware.camera2.DngCreator.setThumbnail(android.graphics.Bitmap)":"android.hardware.camera2.dngcreator.setthumbnail（android.graphics.bitmap）\r\n","android.media.MediaRoute2Info.FEATURE_LIVE_AUDIO":"android.media.mediaroute2info.feature_live_audio\r\n","android.location.LocationManager.unregisterAntennaInfoListener(android.location.Listener)":"android.location.LocationManager.unregisterantenneNainFolistener（android.location.listener）\r\n","android.hardware.camera2.CaptureResult.STATISTICS_FACES":"android.hardware.camera2.captureresult.statistics_faces\r\n","Gets audio sample rate.":"获取音频样本率。\r\n","android.location.GpsSatellite.hasEphemeris()":"android.location.gpssatellite.hasephemeris（）\r\n","android.media.ToneGenerator.ToneGenerator(int, int)":"android.media.toneNerator.toneNerator（int，int）\r\n","Set a MediaDrm String property value, given the property name string\n            and new value for the property.":"设置MediaDRM字符串属性值，给定属性名称字符串\r\n            和该物业的新价值。\r\n","number its address field.":"编号其地址字段。\r\n","LogMessage LogMessages":"logmessage logmessages\r\n","AudioFocusRequest.Builder#setAcceptsDelayedFocusGain(boolean)":"AudiofocusRequest.builder＃SetacceptsdelayedFocusgain（布尔值）\r\n","#SCRAMBLE_CONTROL_EVEN_KEY":"#scramble_control_even_key\r\n","android.hardware.SensorEventCallback#onSensorAdditionalInfo onSensorAdditionalInfo":"android.hardware.sensoreventCallback＃OnSensorAdditionAlinfo OnSensOradDitionAlinfo\r\n","android.media.tv.TvInputManager.registerCallback(android.media.tv.TvInputCallback, android.os.Handler)":"android.media.tv.tvinputmanager.registercallback（android.media.tv.tv.tvinputcallback，android.os.handler）\r\n","Returns the current active audio playback configurations of the device":"返回设备的当前活动音频播放配置\r\n","Get a list of LightState.":"获取LightState的列表。\r\n","android.media.AudioTrack.ENCAPSULATION_MODE_NONE":"android.media.audiotrack.encapsulation_mode_none\r\n","Error code for a network timeout, meaning the server is taking too long to fulfill\n            a request":"网络超时的错误代码，这意味着服务器花费的时间太长了\r\n            一个要求\r\n","Image images":"图像图像\r\n","android.hardware.location.GeofenceHardwareCallback.onGeofenceResume(int, int)":"android.hardware.location.geofencehardwarecallback.ongeofenceresume（int，int）\r\n","Opens a Bluetooth MIDI device for reading and writing.":"打开蓝牙MIDI设备用于读写。\r\n","Reverb preset representing a medium-sized hall":"Reverb预设代表一个中型大厅\r\n","android.hardware.camera2.CameraDevice#createCaptureSession":"android.hardware.camera2.cameradevice＃createCapturesession\r\n","For supplying media data to the framework.":"用于向框架提供媒体数据。\r\n","android.media.ThumbnailUtils.createImageThumbnail(java.io.File, android.util.Size, android.os.CancellationSignal)":"android.media.thumbnailutils.createimagethumbnail（java.io.file，android.util.util.size，android.os.os.cancellationsignal）\r\n","A connection state indicating the route is connected.":"指示路线连接的连接状态。\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_REFERENCE_ILLUMINANT1":"android.hardware.camera2.cameracharacteristics.sensor_reference_illuminant1\r\n","CaptureRequest#EDGE_MODE android.edge.mode":"CaptureRequest#EDGE_MODE android.边缘。模式\r\n","Set stream volume.":"设置流量。\r\n","Called when a sound has completed loading.":"当声音完成加载时调用。\r\n","android.hardware.usb.UsbRequest.queue(java.nio.ByteBuffer, int)":"android.hardware.usb.usbrequest.queue（java.nio.bytebuffer，int）\r\n","android.media.Ringtone.getAudioAttributes()":"android.media.ringtone.getaudioattributes（）\r\n","android.media.effect.EffectFactory.EFFECT_REDEYE":"android.media.effect.effectfactory.effect_redeye\r\n","GeofenceHardware#GEOFENCE_ERROR_TOO_MANY_GEOFENCES":"geofencehardware＃geofence_error_too_many_geofences\r\n","android.media.MediaSync.setOnErrorListener(android.media.OnErrorListener, android.os.Handler)":"android.media.mediasync.setonerrorlistener（android.media.onerrorlistener，android.os.handler）\r\n","android.media.SyncParams.allowDefaults()":"android.media.syncparams.allowdefaults（）\r\n","List of color effects for ":"颜色效果清单\r\n","Call screening in progress.":"调用筛选正在进行中。\r\n","android.media.tv.TvInputService.SERVICE_META_DATA":"android.media.tv.tvinputservice.service_meta_data\r\n","android.hardware.camera2.params.MeteringRectangle.METERING_WEIGHT_MAX":"android.hardware.camera2.params.meteringrectangle.metering_weight_max\r\n","Datagram socket type":"数据报套接字类型\r\n","android.media.AudioDeviceCallback.onAudioDevicesRemoved(android.media.AudioDeviceInfo[])":"android.media.audiodevicecallback.onaudiodevicesrevicesrevice（android.media.audiodeviceinfo []）\r\n","android.net.MailTo.isMailTo(java.lang.String)":"android.net.mailto.ismailto（java.lang.string）\r\n","android.location.Criteria.setSpeedRequired(boolean)":"Android.Location.Criteria.SetsPeedRequired（布尔）\r\n","android.media.tv.TvInputInfo.loadIcon(android.content.Context)":"android.media.tv.tvinputinfo.loadicon（android.content.context）\r\n","android.location.GnssMeasurement.hasBasebandCn0DbHz()":"android.location.gnssmeasurement.hasbasebandcn0dbhz（）\r\n","ImageReader#acquireLatestImage()":"Imagereader＃acecrelateStimage（）\r\n","#bindInput":"#bindinput\r\n","Used to record audio and video.":"用于录制音频和视频。\r\n","android.media.MediaDrm.HDCP_NO_DIGITAL_OUTPUT":"android.media.mediadrm.hdcp_no_digital_output\r\n"," to set up\n            ":" 建立\r\n            \r\n","#ACTION_HDMI_AUDIO_PLUG":"#action_hdmi_audio_plug\r\n","Checks whether the remote user is a trusted app.":"检查远程用户是否是受信任的应用程序。\r\n","android.media.MediaRoute2Info.getClientPackageName()":"android.media.mediaroute2info.getClientpackagagename（）\r\n","Stream from more than one sources.":"从多个来源流式传输。\r\n","android.media.ExifInterface.TAG_DATETIME_ORIGINAL":"android.media.exifinterface.tag_datetime_original\r\n","android.media.AudioManager.ACTION_HEADSET_PLUG":"android.media.audiomanager.action_headset_plug\r\n","android.media.MediaMuxer.stop()":"android.media.mediamuxer.stop（）\r\n","android.hardware.camera2.params.OisSample.getTimestamp()":"android.hardware.camera2.params.oissample.getTimestamp（）\r\n","android.media.MediaRoute2ProviderService.onTransferToRoute(long, java.lang.String, java.lang.String)":"android.media.mediaroute2providerservice.ontransfertoroute（long，java.lang.string，java.lang.string）\r\n","List of capabilities that this camera device\n            advertises as fully supporting.":"该相机设备的功能列表\r\n            广告以充分支持。\r\n","android.media.MediaPlayer.getSyncParams()":"android.media.mediaplayer.getsyncparams（）\r\n","Image":"图片\r\n","Returns the logical type of the light.":"返回光的逻辑类型。\r\n","android.media.MediaRecorder.unregisterAudioRecordingCallback(android.media.AudioRecordingCallback)":"android.media.mediarecorder.unregisteraudiorecordingcallback（android.media.audiorecordingcallback）\r\n","android.hardware.camera2.params.MultiResolutionStreamConfigurationMap.getOutputInfo(int)":"android.hardware.camera2.params.multiresolutionstreamconfigurationmap.getOutputinfo（int）\r\n","android.location.GnssMeasurement.getConstellationType()":"android.location.gnssmeasurement.getConstellationType（）\r\n","android.media.metrics.NetworkEvent.NETWORK_TYPE_UNKNOWN":"android.media.metrics.networkevent.network_type_unknown\r\n","MediaRouter.RouteInfo routes":"Mediarouter.routeinfo路线\r\n","Retrieves the certificate for the server's root CA.":"检索服务器根CA的证书。\r\n","android.hardware.camera2.CameraCharacteristics.REPROCESS_MAX_CAPTURE_STALL":"android.hardware.camera2.cameracharacteristics.reprocess_max_capture_stall\r\n","Resumes the monitoring of a geofence added by ":"恢复对添加的Geofence的监视\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_LOW_LATENCY_SNAPSHOT":"android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_LOW_LATENCY_SNAPSHOT\r\n"," input formats in this stream configuration.":" 此流配置中的输入格式。\r\n"," or listen for changes\n via ":" 或聆听更改\r\n 通过\r\n","android.hardware.location.GeofenceHardwareCallback.onGeofenceAdd(int, int)":"android.hardware.location.geofencehardwarecallback.ongeofenceadd（int，int）\r\n",",\n            with a surface group ID.":"，，，，\r\n            具有表面组ID。\r\n","android.media.audiofx.AudioEffect.EFFECT_TYPE_NS":"android.media.audiofx.audioeffect.effect_type_ns\r\n","android.location.Address.getLatitude()":"android.location.address.getLatitude（）\r\n","android.media.AudioTrack.ERROR_BAD_VALUE":"android.media.audiotrack.error_bad_value\r\n","Open a new session at a requested security level.":"在请求的安全级别上打开新会话。\r\n","android.hardware.camera2.CaptureRequest.JPEG_ORIENTATION":"android.hardware.camera2.capturerequest.jpeg_orientation\r\n","#setMediaDrmSession":"#SetMediaDrmsession\r\n","android.media.MediaCodec.getOutputFrame(int)":"android.media.mediacodec.getOutputframe（int）\r\n","android.media.MediaDrm.PROPERTY_ALGORITHMS":"android.media.mediadrm.property_algoriths\r\n","Decay HF ratio.":"衰减HF比。\r\n"," with any statistics parameters\n            active for the current thread.":" 使用任何统计参数\r\n            当前线程活动。\r\n","This mode indicates no metadata encapsulation,\n            which is the default mode for sending audio data\n            through ":"此模式表示没有元数据封装，\r\n            这是发送音频数据的默认模式\r\n            通过\r\n","android.media.MediaRoute2Info.CONNECTION_STATE_CONNECTED":"android.media.mediaroute2info.connection_state_connection\r\n","This Glonass measurement's tracking state has time-of-day decoded.":"这种Glonass测量的跟踪状态已有时间解码。\r\n","#readSampleData":"#ReadSampleData\r\n","android.media.AudioManager.setSpeakerphoneOn(boolean)":"android.media.audiomanager.setspeakerphoneon（boolean）\r\n","MtpObjectInfo#getCompressedSize":"mtpobjectInfo＃getCompressedsize\r\n","A UNIX-domain (AF_LOCAL) socket address.":"Unix-Domain（AF_LOCAL）套接字地址。\r\n","Bass boost effect strength.":"低音增强效应强度。\r\n","android.media.SoundPool.setLoop(int, int)":"android.media.soundpool.setloop（int，int）\r\n","Number of bands.":"乐队数量。\r\n","android.media.AudioFormat.SAMPLE_RATE_UNSPECIFIED":"android.media.audioformat.sample_rate_unspecified\r\n","MidiDeviceStatus":"Mididevicestatus\r\n","Create a LocalServerSocket from a file descriptor that's already\n been created and bound. listen() will be called immediately on it.":"从已已经\r\n 被创建和绑定。听（）将立即在其上调用。\r\n","android.hardware.SensorManager.cancelTriggerSensor(android.hardware.TriggerEventListener, android.hardware.Sensor)":"android.hardware.sensormanager.canceltriggersensor（android.hardware.triggereventlistener，android.hardware.sensor）\r\n","Processed images are rotated by 270 degrees clockwise, and then cropped\n            to the original aspect ratio.":"处理的图像顺时针旋转270度，然后裁剪\r\n            达到原始纵横比。\r\n","android.media.browse.MediaBrowser.getServiceComponent()":"android.media.browse.mediabrowser.getServiceComponent（）\r\n","#TYPE_SESSION_SERVICE":"#type_session_service\r\n","A key describing the number of grid rows in the content in a\n            ":"一个键描述内容中内容中的网格行数\r\n            \r\n","android.media.MediaPlayer.setOnInfoListener(android.media.OnInfoListener)":"android.media.mediaplayer.setoninfolistener（android.media.oninfolistener）\r\n","android.hardware.GeomagneticField.getHorizontalStrength()":"android.hardware.geomagneticfield.gethorizo​​ntalstrength（）\r\n","android.hardware.display.DisplayManager.VIRTUAL_DISPLAY_FLAG_PUBLIC":"android.hardware.display.displaymanager.virtual_display_flag_public\r\n","android.media.MediaDrm.openSession()":"android.media.mediadrm.opensession（）\r\n","InetAddress.getAllByName":"InetAddress.getAllByName\r\n"," is forwarded from the target application.":" 从目标应用程序转发。\r\n","Load the sound from the specified APK resource.":"从指定的APK资源加载声音。\r\n","if any of the arguments is ":"如果有任何论点是\r\n","android.view.inputmethod.InputMethod.unbindInput()":"android.view.inputmethod.inputmethod.unbindinput（）\r\n","Open a socket for UDP encapsulation.":"打开一个用于UDP封装的插座。\r\n","android.media.MediaFormat.KEY_VIDEO_QP_P_MAX":"android.media.mediaformat.key_video_qp_p_max\r\n","if the destination is null.\n":"如果目的地为空。\r\n\r\n","The key for a bundle parameter containing a channel ID as a long integer":"包含通道ID作为长整数的束参数的键\r\n","Retrieves the server address string.":"检索服务器地址字符串。\r\n","CaptureRequest.Builder#setTag":"CaptureRequest.builder＃settag\r\n","android.location.GnssMeasurementsEvent.getMeasurements()":"android.location.gnssmeasurementsevent.getMeasurements（）\r\n","Sharpens the image.":"锐化图像。\r\n","Indicates this session supports the rewind command.":"指示此会话支持Rewind命令。\r\n","Returns a value that may be passed as a parameter to ":"返回可以通过参数传递的值\r\n","android.media.AsyncPlayer.play(android.content.Context, android.net.Uri, boolean, int)":"android.media.asyncplayer.play（android.content.context，android.net.uri，boolean，int）\r\n","Error code for an unidentified error in a remote controller or player":"遥控器或播放器中未知错误的错误代码\r\n","Gets the RF phase detected by the receiver.":"获取由接收器检测到的RF阶段。\r\n","Exception thrown when the provisioning server or key server denies a\n            certficate or license for a device.":"当配置服务器或密钥服务器拒绝时，会引发异常\r\n            设备认证或许可证。\r\n","if socket has been closed or cannot be created.\n":"如果插座已关闭或无法创建。\r\n\r\n","Gets language code.":"获取语​​言代码。\r\n","Returns the name of the device.":"返回设备的名称。\r\n","android.mtp.MtpObjectInfo.getThumbCompressedSize()":"android.mtp.mtpobjectInfo.getThumbCompressedSize（）\r\n","List of optical image stabilization (OIS) modes for\n            ":"光学图像稳定列表（OIS）模式\r\n            \r\n","Human readable effect name\n":"人类可读效果名称\r\n\r\n","android.media.MediaCodecList.findEncoderForFormat(android.media.MediaFormat)":"android.media.mediacodeclist.findencoderforformat（android.media.mediaformat）\r\n","Creates an AcousticEchoCanceler and attaches it to the AudioRecord on the audio\n            session specified.":"创建一个声学技术并将其连接到音频上的Audiorecord\r\n            指定会话。\r\n","android.media.session.PlaybackState.ACTION_STOP":"android.media.session.playbackstate.action_stop\r\n","android.inputmethodservice.InputMethodService.onUpdateCursor(android.graphics.Rect)":"android.inputmethodservice.inputmethodservice.onupdatecursor（android.graphics.Rect）\r\n","android.hardware.fingerprint.FingerprintManager.hasEnrolledFingerprints()":"android.hardware.fingerprint.fingerprintmanager.hasenroledfingerprints（）\r\n","android.hardware.usb.UsbDeviceConnection.requestWait(long)":"android.hardware.usb.usbdeviceconnection.requestwait（长）\r\n"," for the given key or null if no rating exists\n            for the given key.":" 对于给定的键或零，如果不存在等级\r\n            对于给定的键。\r\n","#openSession":"#opensession\r\n","if the string is not correctly formatted.\n":"如果字符串未正确格式。\r\n\r\n","android.media.MediaMuxer.setOrientationHint(int)":"android.media.mediamuxer.setorientationhint（int）\r\n","Called to open a ":"叫打开\r\n","#getSampleTime":"#getSampletime\r\n","android.hardware.usb.UsbAccessory.getModel()":"android.hardware.usb.usbaccessory.getmodel（）\r\n","AudioRecordingConfiguration":"AudiorecordingConfiguration\r\n","#PLAYBACK_OFFLOAD_GAPLESS_SUPPORTED":"#playback_offload_gapless_supported\r\n","This GNSS measurement's tracking state contains millisecond ambiguity.":"该GNSS测量的跟踪状态包含毫秒的歧义。\r\n","Return a human-readable name describing the subtype of the network.":"返回描述网络子类型的人类可读名称。\r\n","android.media.metrics.TrackChangeEvent.getBitrate()":"android.media.metrics.trackchangeevent.getBitrate（）\r\n","The lens focus distance calibration quality.":"镜头聚焦距离校准质量。\r\n","android.media.AudioManager.getRingerMode()":"android.media.audiomanager.getringermode（）\r\n","android.inputmethodservice.InputMethodService.onExtractedCursorMovement(int, int)":"android.inputmethodservice.inputmethodservice.onextractedcursormovement（int，int）\r\n","A key describing the maximum Quantization Parameter allowed for encoding video.":"描述用于编码视频的最大量化参数的密钥。\r\n","Seeks to a specified time position.":"寻求指定的时间位置。\r\n","if called after ":"如果在后打电话\r\n","android.media.ExifInterface.TAG_RW2_SENSOR_LEFT_BORDER":"android.media.exifinterface.tag_rw2_sensor_left_border\r\n","UUID for Automatic Gain Control (AGC)":"自动增益控制（AGC）的UUID\r\n","Send a received EMM packet to the CA system.":"将收到的EMM数据包发送到CA系统。\r\n","Gets the bass boost properties.":"获取低音增强属性。\r\n","Load the sound from an asset file descriptor.":"从资产文件描述符中加载声音。\r\n","Return the capture policy. -or- Specifies whether the audio played by this app may or may not be captured by other apps or\n            the system.":"返回捕获策略。 - 或 - 指定该应用程序播放的音频是否可能由其他应用程序捕获或可能不会捕获\r\n            系统。\r\n","android.media.tv.TvInputService.PRIORITY_HINT_USE_CASE_TYPE_LIVE":"android.media.tv.tvinputservice.priority_hint_use_case_type_live\r\n","Automatic Gain Control (AGC).":"自动增益控制（AGC）。\r\n","Creates a test location provider and adds it to the set of active providers.":"创建一个测试位置提供商，并将其添加到活动提供商的集合中。\r\n","android.location.LocationManager.addNmeaListener(android.location.OnNmeaMessageListener, android.os.Handler)":"android.location.locationManager.AddnMealistener（android.location.onnmeamemessagelistener，android.os.handler）\r\n","Glonass L1 CA message contained in the structure.":"结构中包含的Glonass L1 CA消息。\r\n","An instances of this class represents a session of media recording.":"此类的实例代表了媒体录制会议。\r\n","TransportControls":"TransportControls\r\n","android.inputmethodservice.InputMethodService.onCreateInputMethodInterface()":"android.inputmethodservice.inputmethodservice.oncreateinputmethodinterface（）\r\n","Returns the radius of this geofence.":"返回该地理林的半径。\r\n","android.hardware.camera2.params.OutputConfiguration.setPhysicalCameraId(java.lang.String)":"android.hardware.camera2.params.outputconfiguration.setphysicalcameraid（java.lang.string）\r\n","List of edge enhancement modes for ":"边缘增强模式列表 \r\n","Whether this key repeats itself when held down ":"该钥匙是否在压制时重复\r\n"," track.":" 追踪。\r\n","Controls whether the TvView's surface is placed on top of another regular surface view in the\n            window (but still behind the window itself).":"控制TVView的表面是否放在另一个常规表面视图的顶部\r\n            窗口（但仍在窗口本身后面）。\r\n","android.location.Location.Location(java.lang.String)":"android.location.location.location（java.lang.string）\r\n","android.media.audiofx.AudioEffect.CONTENT_TYPE_VOICE":"android.media.audiofx.audioeffect.content_type_voice\r\n","android.media.CamcorderProfile.fileFormat":"android.media.camcorderprofile.fileformat\r\n"," socket with any statistics\n            parameters active for the current thread.":" 带有任何统计数据的插座\r\n            当前线程的参数活动。\r\n","Product-specific information about the display or the directly connected device on the\n            display chain.":"有关显示器或直接连接的设备的产品特定信息\r\n            显示链。\r\n","android.location.LocationManager.requestLocationUpdates(java.lang.String, long, float, android.location.LocationListener, android.os.Looper)":"android.location.LocationManager.RequestLocationUpdates（java.lang.string，long，float，android.location.location.locationListener，android.os.oper）\r\n","android.inputmethodservice.InputMethodService.switchInputMethod(java.lang.String)":"android.inputmethodservice.inputmethodservice.switchinputmethod（java.lang.string）\r\n","CaptureRequest":"CaptureRequest\r\n","android.net.Ikev2VpnProfile.getUserIdentity()":"android.net.ikev2vpnprofile.getUserIdentity（）\r\n","android.media.tv.TvInputInfo.getExtras()":"android.media.tv.tvinputinfo.getExtras（）\r\n","Adds a GPS status listener.":"添加了GPS状态侦听器。\r\n","An icon or thumbnail that is suitable for display to the user.":"适合用户显示的图标或缩略图。\r\n","#TONE_CDMA_HIGH_SLS":"#tone_cdma_high_sls\r\n","TvInputService.RecordingSession#notifyError(int)":"TVInputService.RecorDingsession＃NotifyError（int）\r\n","Called on the listener to periodically notify it that the playback head has reached\n a multiple of the notification period.":"要求听众定期通知播放头已经到达\r\n 通知期的倍数。\r\n","android.media.session.MediaController.getPackageName()":"android.media.session.mediacontroller.getpackagename（）\r\n","android.media.ExifInterface.TAG_EXIF_VERSION":"android.media.exifinterface.tag_exif_version\r\n","android.media.MediaFormat.KEY_PROFILE":"android.media.mediaformat.key_profile\r\n","android.hardware.usb.UsbInterface":"android.hardware.usb.usbinterface\r\n","Creates a NoiseSuppressor and attaches it to the AudioRecord on the audio\n            session specified.":"创建一个噪声抑制器，并将其连接到音频上的AudioreCord\r\n            指定会话。\r\n","android.media.AudioRecord.read(java.nio.ByteBuffer, int, int)":"android.media.audiorecord.Read（java.nio.bytebuffer，int，int）\r\n","android.media.JetPlayer.setMuteArray(boolean[], boolean)":"android.media.jetplayer.setmutearray（布尔[]，布尔值）\r\n","TvContentRating#UNRATED":"TVContrating＃未注重\r\n","android.hardware.camera2.CaptureRequest.CONTROL_SCENE_MODE":"android.hardware.camera2.capturerequest.control_scene_mode\r\n","Pause a playback stream.":"暂停播放流。\r\n","android.hardware.camera2.CaptureRequest.SENSOR_EXPOSURE_TIME":"android.hardware.camera2.capturerequest.sensor_exposure_time\r\n","android.hardware.camera2.CaptureResult.TONEMAP_GAMMA":"android.hardware.camera2.captureresult.tonemap_gamma\r\n","android.media.MediaCas.SCRAMBLING_MODE_AES_SCTE52":"android.media.mediacas.scrambling_mode_aes_scte52\r\n","This is the interface name that a service implementing a TV input should say that it support\n            -- that is, this is the action it uses for its intent filter.":"这是实施电视输入的服务应表示支持的接口名称\r\n             - 也就是说，这是它用于其意图过滤器的动作。\r\n","android.mtp.MtpDevice.MtpDevice(android.hardware.usb.UsbDevice)":"android.mtp.mtpdevice.mtpdevice（android.hardware.usb.usbdevice）\r\n","android.media.MediaTimestamp.getAnchorMediaTimeUs()":"android.media.MediaTimestamp.GetanChormedimemedimeus（）\r\n","#TONE_CDMA_ANSWER":"#TONE_CDMA_ANSWER\r\n","Interface definition for a callback to be invoked when an AudioRecord has\n reached a notification marker set by ":"AudiOrecord具有的接口定义要调用回调\r\n 达到了由\r\n","\n         and ":"\r\n         和\r\n","android.view.InputEvent":"android.view.inputevent\r\n","android.hardware.camera2.params.MeteringRectangle.getY()":"android.hardware.camera2.params.meteringrectangle.gety（）\r\n","All selected tracks seek near the requested time according to the\n            specified mode.":"所有选定的曲目都根据要求的时间接近要求的时间\r\n            指定模式。\r\n","android.inputmethodservice.AbstractInputMethodService":"android.inputMethodService.AbstractInputMethodService\r\n","The maximum value of valid metering weight.":"有效计量重量的最大值。\r\n","android.media.MediaSyncEvent.SYNC_EVENT_PRESENTATION_COMPLETE":"android.media.mediasyncevent.sync_event_presentation_complete\r\n","Returns true if the image file has a thumbnail.":"如果图像文件具有缩略图，则返回true。\r\n","Sets the operation mode for TS parsing.":"设置用于解析的操作模式。\r\n","Removes any latitude associated with this address.":"删除与此地址相关的任何纬度。\r\n","if provider is null or doesn't exist\n":"如果提供商为null或不存在\r\n\r\n","Audio presentation content classifier: Music and effects.":"音频演示内容分类器：音乐和效果。\r\n","Get the rate of the media clock in relation to the system time.":"获取与系统时间有关的媒体时钟速率。\r\n","android.location.GpsSatellite.getAzimuth()":"android.location.gpssatellite.getazimuth（）\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_CALIBRATION_TRANSFORM1":"android.hardware.camera2.cameracharacteristics.sensor_calibration_transform1\r\n","android.hardware.camera2.params.Face.getRightEyePosition()":"android.hardware.camera2.params.face.getRightEeposition（）\r\n","#TONE_CDMA_HIGH_SS_2":"＃tone_cdma_high_ss_2\r\n","android.media.MediaFormat.KEY_IS_ADTS":"android.media.mediaformat.key_is_adts\r\n","android.media.ExifInterface.TAG_RW2_ISO":"android.media.exifinterface.tag_rw2_iso\r\n","android.location.LocationManager.KEY_FLUSH_COMPLETE":"android.location.locationmanager.key_flush_complete\r\n","#MODE_STATIC":"#mode_static\r\n","Convenience method to create a MediaPlayer for a given resource id.":"为给定资源ID创建媒体播放器的便利方法。\r\n","android.media.metrics.PlaybackMetrics.DRM_TYPE_OTHER":"android.media.metrics.playbackmetrics.drm_type_other\r\n","Start bluetooth SCO audio connection.":"启动蓝牙SCO音频连接。\r\n","Release the SoundPool resources.":"释放Soundpool资源。\r\n","Returns the distance between the eyes.":"返回眼睛之间的距离。\r\n","Some operation takes too long to complete, usually more than 3-5 seconds.":"某些操作需要太长完成，通常超过3-5秒。\r\n","android.media.MediaDescription.getExtras()":"android.media.mediadescription.getExtras（）\r\n","Sets the send level of the player to the attached auxiliary effect.":"将播放器的发送级别设置为附带的辅助效果。\r\n","The camera device supports the OFFLINE_PROCESSING use case.":"相机设备支持Offline_processing用例。\r\n","android.media.AudioManager.setWiredHeadsetOn(boolean)":"android.media.audiomanager.setwiredheadseton（布尔值）\r\n","android.media.MediaRecorder.prepare()":"android.media.mediarecorder.prepare（）\r\n","android.media.audiofx.Equalizer.PARAM_BAND_LEVEL":"android.media.audiofx.equalizer.param_band_level\r\n","Sets the desired video encoding profile and level for recording.":"设置所需的视频编码配置文件和用于录制的级别。\r\n","android.media.MediaCodec.getInputFormat()":"android.media.mediacodec.getInputformat（）\r\n","Use this method to get a list of available dynamic sensors of a certain type.":"使用此方法获取某种类型的可用动态传感器列表。\r\n","android.hardware.usb.UsbRequest":"android.hardware.usb.usbrequest\r\n","android.media.AudioManager.unregisterMediaButtonEventReceiver(android.content.ComponentName)":"android.media.audiomanager.unregistermediabuttoneventreceiver（android.content.componentname）\r\n","Byte array property name: the device unique identifier is established during\n            device provisioning and provides a means of uniquely identifying each device.":"字节阵列属性名称：设备唯一标识符是在期间建立的\r\n            设备配置并提供了一种唯一识别每个设备的方法。\r\n","This key retrieves the average bitrate (in bits/sec), if available.":"该键检索平均比特率（以钻头/秒为单位）（如果有）。\r\n","The maximum number of metering regions that can be used by the auto-white balance (AWB)\n            routine.":"自动白平衡(AWB)可使用的测光区域的最大数量\r\n            例行公事。\r\n","android.mtp.MtpDevice.importFile(int, java.lang.String)":"android.mtp.mtpdevice.importfile（int，java.lang.string）\r\n","android.hardware.usb.UsbDeviceConnection.setInterface(android.hardware.usb.UsbInterface)":"android.hardware.usb.usbdeviceconnection.setinterface（android.hardware.usb.usbinterface）\r\n","Called whenever an input device has been added to the system.":"只要将输入设备添加到系统中。\r\n","Broadcast intent action when GNSS capabilities change.":"当GNSS功能发生变化时，广播意愿行动。\r\n","Controls the visibility of the candidates display area.":"控制候选人显示区域的可见性。\r\n","android.media.MicrophoneInfo.getMinSpl()":"android.media.microphoneinfo.getminspl（）\r\n","The AudioPresentation class encapsulates the information that describes an audio presentation\n            which is available in next generation audio content.":"Audiopresentation类封装了描述音频演示文稿的信息\r\n            下一代音频内容可用。\r\n"," from the sender":" 来自发件人\r\n","android.media.ExifInterface.getThumbnailRange()":"android.media.exifinterface.getThumbNailrange（）\r\n","Send the given key event code (as defined by ":"发送给定的关键事件代码（按定义\r\n","android.hardware.camera2.CameraCaptureSession.updateOutputConfiguration(android.hardware.camera2.params.OutputConfiguration)":"android.hardware.camera2.cameracapturesessession.updateoutputconfiguration（android.hardware.camera2.params.params.params.outputconfiguration）\r\n","AudioManager#AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE":"听众＃audiofocus_gain_transient_exclusive\r\n","#BITMAP_KEY_ARTWORK":"#BITMAP_KEY_ARTWORK\r\n","List of auto-focus (AF) modes for ":"自动对焦（AF）模式的列表\r\n","Returns the current keyboard being displayed by this view. -or- Attaches a keyboard to this view.":"返回此视图显示的当前键盘。 - 或 - 将键盘附加到此视图上。\r\n","android.hardware.camera2.params.StreamConfigurationMap.getOutputSizes(int)":"android.hardware.camera2.params.streamconfigurationmap.getOutputsizes（int）\r\n","Return the number of MediaDrm sessions that are currently opened\n            simultaneously among all MediaDrm instances for the active DRM scheme.":"返回当前打开的MediaDRM会话的数量\r\n            同时在所有主动DRM方案的MediaDRM实例中。\r\n","State of a successfully initialized AudioTrack that uses static data,\n but that hasn't received that data yet.":"使用静态数据的成功初始化的Adiotrack的状态，\r\n 但这尚未收到该数据。\r\n","MediaDescrambler class can be used in conjunction with ":"可以将MediaDescrambler类结合使用\r\n","android.mtp.MtpObjectInfo.getFormat()":"android.mtp.mtpobjectInfo.getFormat（）\r\n","android.media.AudioTrack.getUnderrunCount()":"android.media.audiotrack.getUnderRuncount（）\r\n",": Video is unavailable because\n            CAS system is rebooting.":"：视频不可用，因为\r\n            CAS系统正在重新启动。\r\n","android.media.tv.TvInputService.PRIORITY_HINT_USE_CASE_TYPE_SCAN":"android.media.tv.tvinputservice.priority_hint_use_case_type_scan\r\n","Immutable class to store the available stream\n            ":"不变的课程存储可用的流\r\n            \r\n","Compares the string representation of this Uri with that of\n            another.":"将此URI的字符串表示与\r\n            其他。\r\n","A quality constant indicating a location provider may choose to satisfy this request by\n            providing less accurate locations in order to save power.":"质量常数，表明位置提供商可以选择满足此请求\r\n            提供较少准确的位置以节省电力。\r\n","Stops the current media routing.":"停止当前的媒体路由。\r\n","android.hardware.camera2.CameraCharacteristics.getKeysNeedingPermission()":"android.hardware.camera2.cameracharacteristics.getkeysneedingpermission（）\r\n","#TONE_CDMA_LOW_PBX_SS":"#TONE_CDMA_LOW_PBX_SS\r\n","Get a gain factor vector from this lens shading map by its row and column.":"通过其行和列从此镜头阴影映射获取增益因子向量。\r\n","A key describing the desired codec priority.":"描述所需编解码器优先级的密钥。\r\n","Unregisters an input device listener.":"解开输入设备侦听器。\r\n","Gets content type.":"获取内容类型。\r\n","Playback state of a RemoteControlClient which cannot perform any playback related\n    operation because of an internal error. ":"无法执行任何相关播放的remotecontrolclient的播放状态\r\n    由于内部错误而操作。\r\n","Base class for derived classes to implement their ":"用于实施其派生类的基类\r\n","Interface definition for a callback to be invoked when the media playback position is\n requested to be updated.":"媒体播放位置为时要调用回调的接口定义\r\n 要求更新。\r\n","android.hardware.camera2.params.OutputConfiguration.getMaxSharedSurfaceCount()":"android.hardware.camera2.params.outputconfiguration.getmaxsharedsurfacecount（）\r\n","\n            with configured physical camera streams for a logical camera.":"\r\n            配备了逻辑摄像头配置的物理相机流。\r\n","Operation failed because it was requested in wrong state.":"操作失败了，因为它是在错误状态下要求的。\r\n","android.media.MediaRecorder.registerAudioRecordingCallback(java.util.concurrent.Executor, android.media.AudioRecordingCallback)":"android.media.mediarecorder.registeraudiorecordingcallback（java.util.concurrent.executor，android.media.media.audiorecordingcallback）\r\n","android.media.Ringtone.setVolume(float)":"android.media.rringtone.setvolume（float）\r\n","if an error was encountered in the input or output stream.":"如果在输入或输出流中遇到错误。\r\n","android.media.session.PlaybackState.ACTION_PLAY_FROM_SEARCH":"android.media.session.playbackstate.action_play_from_search\r\n","CDMA LOW PBX SSL tone:{1300Hz 25ms, 1450Hz 25ms} 8 times\n 200ms OFF, {1300Hz 25ms, 1450Hz 25ms} 8 times, 200ms OFF,\n {1300Hz 25ms, 1450Hz 25ms} 16 times, 1000ms OFF, REPEAT....":"CDMA低PBX SSL音调：{1300Hz 25ms，1450Hz 25ms} 8次\r\n 200ms关闭，{1300Hz 25ms，1450Hz 25ms} 8次，200ms折扣，\r\n {1300Hz 25ms，1450Hz 25ms} 16次，1000ms折叠，重复...\r\n","android.location.LocationManager.EXTRA_PROVIDER_ENABLED":"android.location.locationmanager.extra_provider_enabled\r\n","android.media.tv.TvInputManager.getInputState(java.lang.String)":"android.media.tv.tvinputmanager.getInputState（java.lang.string）\r\n","Called by a text editor that performs auto completion, to tell the\n            input method about the completions it has available.":"由执行自动完成的文本编辑器调用，以告诉\r\n            有关完成的输入方法。\r\n","android.media.ExifInterface.TAG_EXPOSURE_INDEX":"android.media.exifinterface.tag_expuse_index\r\n","android.net.UrlQuerySanitizer.getAllButNulAndAngleBracketsLegal()":"android.net.urlquerysanitizer.getAllButnulangleBracketSlegal（）\r\n","Retrieves the object handle for the parent of an object on the device.":"检索设备上对象的母体的对象句柄。\r\n","android.mtp.MtpEvent.EVENT_DEVICE_RESET":"android.mtp.mtpevent.event_device_reset\r\n","Class constructor for a remote control client whose internal event handling\n            happens on a user-provided Looper.":"远程控制客户端的类构造函数，其内部事件处理\r\n            发生在用户提供的循环器上。\r\n","The length and contents of the ":"的长度和内容 \r\n","android.media.effect.EffectFactory.EFFECT_SHARPEN":"android.media.effect.effectfactory.effect_sharpen\r\n",",\n            that are supported by this camera device.":"，，，，\r\n            该相机设备支持。\r\n","android.net.TrafficStats.incrementOperationCount(int, int)":"android.net.trafficstats.incrementoperationcount（int，int）\r\n","Retrieves initialization data for a given DRM scheme, specified by its UUID.":"检索由其UUID指定的给定DRM方案的初始化数据。\r\n","android.media.AudioManager.requestAudioFocus(android.media.AudioFocusRequest)":"android.media.audiomanager.requestaudiofocus（android.media.audiofocusrequest）\r\n","A key describing the color format of the content in a video format.":"以视频格式描述内容的颜色格式的键。\r\n","Request preset name. ":"请求预设名称。\r\n","Get the red component.":"获取红色组件。\r\n"," if the track is encrypted, ":" 如果轨道被加密，\r\n","This class is used to specify meta information of a TV input.":"此类用于指定电视输入的元信息。\r\n","Determine if there is at least one fingerprint enrolled.":"确定是否至少有一个指纹注册。\r\n","\n            namespace":"\r\n            名称空间\r\n","A per-device calibration transform matrix that maps from the\n            reference sensor colorspace to the actual device sensor colorspace.":"每个设备校准变换矩阵，该矩阵从\r\n            参考传感器的Colorspace到实际设备传感器Colorspace。\r\n","Returns the supported capabilities of the GNSS chipset.":"返回GNSS芯片组的支持功能。\r\n","The OnParameterChangeListener interface defines a method called by the EnvironmentalReverb\n when a parameter value has changed.":"OnParameterChangeListener界面定义了一种由EnvironmentAlreverb调用的方法\r\n 当参数值已更改时。\r\n"," if GNSS chipset supports measurements, ":" 如果GNSS芯片组支持测量，则\r\n","Gets the GNSS measurement's inter-signal bias uncertainty (1 sigma) in\n            nanoseconds with sub-nanosecond accuracy.":"获取GNSS测量的信号偏置不确定性（1 Sigma）\r\n            纳秒秒准确性。\r\n","android.media.MediaParser.SAMPLE_FLAG_KEY_FRAME":"android.media.mediaparser.sample_flag_key_frame\r\n","android.media.midi.MidiDevice.openInputPort(int)":"android.media.midi.mididevice.openinputport（int）\r\n","android.media.audiofx.AudioEffect.SUCCESS":"android.media.audiofx.audioeffect.success\r\n","Audio presentation content classifier: Voice over.":"音频演示内容分类器：语音结束。\r\n","android.location.LocationManager.PROVIDERS_CHANGED_ACTION":"android.location.locationmanager.providers_changed_action\r\n","android.media.ExifInterface.TAG_FOCAL_LENGTH_IN_35MM_FILM":"android.media.exifinterface.tag_focal_length_in_35mm_film\r\n","Event code for REQUEST_OBJECT_TRANSFER event":"request_object_transfer事件的事件代码\r\n","Operation code for GetStorageInfo":"GetStorageinfo的操作代码\r\n","android.media.MediaRecorder.setPreferredMicrophoneDirection(int)":"android.media.mediarecorder.setpreferredmicrophondirection（INT）\r\n","MediaDrm#PROPERTY_VENDOR":"MediaDRM＃property_vendor\r\n","USE_DEFAULT_STREAM_TYPE":"use_default_stream_type\r\n","If the media contains XMP data, this key retrieves the length (in bytes)\n            of the data.":"如果介质包含XMP数据，则此键检索长度（以字节为单位）\r\n            数据。\r\n","Flag indicating a RemoteControlClient can receive changes in the media playback position\n            through the ":"指示RemoteControlclient的标志可以接收媒体播放位置的更改\r\n            通过\r\n","Replaces the background of the input frames with frames from a\n            selected video.":"用一个框架替换输入帧的背景\r\n            选定的视频。\r\n","android.media.JetPlayer.clearQueue()":"android.media.jetplayer.clearqueue（）\r\n"," event and\n            holds information such as the sensor's type, the time-stamp, accuracy and of\n            course the sensor's ":" 事件和\r\n            保留诸如传感器类型，时间戳记，准确性和诸如信息\r\n            当然传感器的\r\n","Operation code for GetDevicePropValue":"GetDevicePropvalue的操作代码\r\n","android.hardware.camera2.CaptureRequest.CONTROL_AF_TRIGGER":"android.hardware.camera2.capturerequest.control_af_trigger\r\n","android.media.MediaRecorder.setMaxDuration(int)":"android.media.mediarecorder.setmaxduration（int）\r\n","Return true if the edit text is currently showing a scroll bar.":"如果编辑文本当前显示滚动条，则返回true。\r\n","Widevine L1 DRM type.":"Widevine L1 DRM类型。\r\n","List of the faces detected through camera face detection\n            in this capture.":"通过摄像头检测检测到的面孔列表\r\n            在此捕获中。\r\n","The output format has changed, subsequent data will follow the new\n            format.":"输出格式已更改，随后的数据将遵循新的\r\n            格式。\r\n","This is the region of the UI that is touchable.":"这是UI的区域。\r\n","This GNSS measurement's tracking state is invalid or unknown.":"此GNSS测量的跟踪状态无效或未知。\r\n","android.hardware.lights.LightsManager":"android.hardware.lights.lightsmanager\r\n"," to be used as the sink for the video portion of\n            the media.":" 用作视频部分的水槽\r\n            媒体。\r\n","This sensor pixel mode is offered by devices with capability\n            ":"此传感器像素模式由具有功能的设备提供\r\n            \r\n","Playback has not started (initial state)":"播放尚未开始（初始状态）\r\n","Creates a blank keyboard from the given resource file and populates it with the specified\n            characters in left-to-right, top-to-bottom fashion, using the specified number of columns.":"从给定的资源文件中创建一个空白键盘，并用指定的\r\n            使用指定数量的列数，从左到右，从头到下的方式。\r\n","#STREAM_DTMF":"#Stream_DTMF\r\n","android.hardware.camera2.params.ExtensionSessionConfiguration.getExecutor()":"android.hardware.camera2.params.extensionsessessessesseessconfiguration.getExecutor（）\r\n","android.hardware.camera2.params.ExtensionSessionConfiguration.getOutputConfigurations()":"android.hardware.camera2.params.extensionsessessessesseessconfiguration.getOutputConfiguration（）\r\n","A microphone that the location is unknown.":"该位置未知的麦克风。\r\n","#MediaDrm(UUID)":"#MediADRM（UUID）\r\n","android.hardware.camera2.CameraCharacteristics.LENS_FACING":"android.hardware.camera2.cameracharacteristics.lens_facing\r\n","Returns the Audio Description mix level in dB.":"返回DB中的音频描述混合级别。\r\n","This event may indicate some specific vendor-defined condition, see your\n            DRM provider documentation for details":"此事件可能表示一些特定的供应商定义的条件，请参阅您的\r\n            DRM提供商文档以获取详细信息\r\n","android.hardware.Camera#takePicture Camera.takePicture":"android.hardware.camera＃TakePicture Camera.takePicture\r\n","android.location.provider.ProviderProperties.getPowerUsage()":"android.location.provider.providerproperties.getPoperusage（）\r\n","QueueRequest":"queuerequest\r\n","Advanced Encryption System (AES) Society of Cable Telecommunications Engineers (SCTE) 52\n            mode.":"高级加密系统（AES）电缆电信工程师协会（SCTE）52\r\n            模式。\r\n","android.media.MediaPlayer.getDrmInfo()":"android.media.mediaplayer.getdrminfo（）\r\n","android.media.MediaPlayer.addTimedTextSource(java.io.FileDescriptor, long, long, java.lang.String)":"android.media.mediaplayer.addtimedtextsource（java.io.filedscriptor，long，long，long，java.lang.string）\r\n","android.media.MediaFormat.KEY_VIDEO_QP_I_MAX":"android.media.mediaformat.key_video_qp_i_max\r\n","android.media.session.PlaybackState.ACTION_FAST_FORWARD":"android.media.session.playbackstate.action_fast_forward\r\n","Resets the MediaPlayer to its uninitialized state.":"将Mediaplayer重置为其非初始化的状态。\r\n","android.hardware.camera2.CaptureRequest.CONTROL_AE_REGIONS":"android.hardware.camera2.capturerequest.control_ae_rigions\r\n","List of face detection modes for ":"面部检测模式列表\r\n","MediaRoute2Info#PLAYBACK_VOLUME_VARIABLE":"Mediaroute2Info＃plopback_volume_variable\r\n","Take care of enabling or disabling an existing session by calling its\n ":"通过调用其启用或禁用现有会话\r\n \r\n","Called when the application has reported new extracted text to be shown\n            due to changes in its current text state.":"当应用程序报告了新提取的文本以显示的何时调用\r\n            由于其当前文本状态的变化。\r\n","GnssAntennaInfo.Listener":"gnssantennainfo.listener\r\n","android.net.TrafficStats.getAndSetThreadStatsTag(int)":"android.net.trafficstats.getAndSetThreadStatStag（int）\r\n","The camera device cannot represent the values of ":"相机设备无法表示\r\n","Sets the scheme.":"设置方案。\r\n","This Glonass measurement's tracking state has time-of-day known, possibly not decoded\n            over the air but has been determined from other sources.":"这种Glonass测量的跟踪状态已知时间已知，可能没有解码\r\n            在空中，但已从其他来源确定。\r\n","Returns an array of track information.":"返回一系列轨道信息。\r\n","android.media.JetPlayer.setMuteFlag(int, boolean, boolean)":"android.media.jetplayer.setmuteflag（INT，布尔值，布尔值）\r\n","Stop a previously played sound.":"停止以前播放的声音。\r\n","android.media.MediaPlayer.getVideoHeight()":"android.media.mediaplayer.getVideOheight（）\r\n","android.mtp.MtpConstants.OPERATION_GET_OBJECT_PROP_VALUE":"android.mtp.mtpconstants.operation_get_object_prop_value\r\n","Retrieve all the parsed email headers from the mailto URL":"从Mailto URL中检索所有解析的电子邮件标题\r\n","Returns true iff we are caching data and the cache has reached the\n            end of the data stream (for now, a future seek may of course restart\n            the fetching of data).":"返回true如果我们正在缓存数据，并且缓存已到达\r\n            数据流的结束（目前，未来的寻求可能会重新启动\r\n            数据的获取）。\r\n","Network link established, performing authentication.":"建立网络链接，执行身份验证。\r\n","android.media.MediaRoute2Info.PLAYBACK_VOLUME_VARIABLE":"android.media.mediaroute2info.playback_volume_variable\r\n"," object) to route\n            the output from this MediaPlayer.":" 对象）路线\r\n            来自此Mediaplayer的输出。\r\n","android.location.GnssClock.hasDriftUncertaintyNanosPerSecond()":"android.location.gnssclock.hasdriftuncuncterntynanospersecond（）\r\n","Gets video frame rate.":"获取视频框架速率。\r\n","android.media.MediaCas.SCRAMBLING_MODE_DVB_CSA2":"android.media.mediacas.scrambling_mode_dvb_csa2\r\n","ratingString":"收视率\r\n","Interface definition for a callback to be invoked when the audio focus of the system is\n updated.":"当系统的音频焦点为时，将调用回调的接口定义\r\n 更新。\r\n","android.hardware.camera2.CaptureResult.TONEMAP_MODE":"android.hardware.camera2.captureresult.tonemap_mode\r\n","Unspecified error.":"未指定的错误。\r\n","android.media.AudioManager.AUDIOFOCUS_REQUEST_FAILED":"android.media.audiomanager.audiofocus_request_failed\r\n","OnKeyboardActionListener":"OnKeyBoardActionListener\r\n","android.hardware.input.InputManager.registerInputDeviceListener(android.hardware.input.InputDeviceListener, android.os.Handler)":"android.hardware.input.inputManager.RegisterInputDevicElistener（android.hardware.input.input.inputdevicelistener，android.os.handler）\r\n","Event code for STORE_FULL event":"store_full事件的事件代码\r\n","android.hardware.biometrics.BiometricManager.BIOMETRIC_ERROR_HW_UNAVAILABLE":"机器人。硬件。生物测定学。生物计量管理器。生物计量_ERROR_HW_UNAVAILABLE\r\n","android.media.MediaRecorder.stop()":"android.media.mediarecorder.stop（）\r\n"," when no parser has been selected yet.":" 当尚未选择解析器时。\r\n","android.media.MediaCodec.createByCodecName(java.lang.String)":"android.media.mediacodec.createbycodecname（java.lang.string）\r\n","Removes a given feature setting if present.":"如果存在，请删除给定的功能设置。\r\n","\n            For directories the association type is typically\n            ":"\r\n            对于目录，关联类型通常是\r\n            \r\n","android.media.JetPlayer.getMaxTracks()":"android.media.jetplayer.getmaxtracks（）\r\n","android.media.MediaCodec.PARAMETER_KEY_SUSPEND":"android.media.mediacodec.parameter_key_suspend\r\n","The keys in an offline license allow protected content to be played even\n            if the device is not connected to a network.":"离线许可证中的钥匙允许播放受保护的内容\r\n            如果设备未连接到网络。\r\n",": the entire window frame\n can be touched.":"：整个窗框\r\n 可以触摸。\r\n","android.hardware.SensorEvent":"android.hardware.sensorevent\r\n","android.hardware.Sensor.STRING_TYPE_ORIENTATION":"android.hardware.sensor.string_type_orientation\r\n","Called when Autofill responds back with ":"何时自动填充回复\r\n","An unknown media timestamp value":"未知的媒体时间戳值\r\n","android.media.session.PlaybackState.getExtras()":"android.media.session.playbackstate.getExtras（）\r\n","The maximum numbers of any type of input streams\n            that can be configured and used simultaneously by a camera device.":"任何类型的输入流的最大数量\r\n            可以通过相机设备同时配置和使用。\r\n","Intent action that must be declared in the manifest for the subclass.":"必须在子类的清单中声明的​​意图行动。\r\n","Indicates this session supports the play from URI command.":"指示此会话支持URI命令的播放。\r\n","This is a class for reading and writing Exif tags in various image file formats.":"这是一个用于读取和编写各种图像文件格式的EXIF标签的类。\r\n","Called to indicate the video size\n\n The video size (width and height) could be 0 if there was no video,\n no display surface was set, or the value was not determined yet.":"叫指示视频大小\r\n\r\n 视频尺寸（宽度和高度）如果没有视频，则可能是0\r\n 尚未设置显示表面，否则尚未确定值。\r\n","USB class for wireless miscellaneous devices.":"无线杂项设备的USB类。\r\n","Return number of packets transmitted across mobile networks since device\n            boot.":"自设备以来，跨移动网络传输的数据包返回数\r\n            引导。\r\n","android.hardware.camera2.params.SessionConfiguration.getSessionType()":"android.hardware.camera2.params.sessionconfiguration.getSessionType（）\r\n","Creates a new TvRecordingClient object.":"创建一个新的TVRecorDingClient对象。\r\n","#TONE_CDMA_CALL_SIGNAL_ISDN_SP_PRI":"#TONE_CDMA_CALL_SIGNAL_ISDN_SP_PRI\r\n","Returns an intent to start the setup activity for this TV input.":"返回目的是启动此电视输入的设置活动。\r\n","android.media.MediaRecorder.getPreferredDevice()":"android.media.mediarecorder.getPreferreddevice（）\r\n","InputMethodImpl":"inputmethodimpl\r\n","Immutable class to store an input configuration that is used to create a reprocessable capture\n            session.":"不可变的类存储用于创建可重加捕获的输入配置\r\n            会议。\r\n","Stereo speaker layout.":"立体声扬声器布局。\r\n","android.hardware.SensorManager.createDirectChannel(android.hardware.HardwareBuffer)":"android.hardware.sensormanager.createDirectChannel（android.hardware.hardwarebuffer）\r\n","The channel contains raw audio from this microphone.":"该通道包含来自该麦克风的原始音频。\r\n","Class providing information on a microphone.":"提供有关麦克风的信息。\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_AUDIO_TRACK_OTHER":"android.media.metrics.playbackerrorevent.error_audio_track_other\r\n","android.media.browse.MediaBrowser":"android.media.browse.mediabrowser\r\n","Power usage for this provider.":"该提供商的电力使用情况。\r\n","android.media.AudioFormat.getChannelMask()":"android.media.audioformat.getChannelMask（）\r\n","Return the number of packets received on the specified interface since the interface was\n            created.":"由于接口为\r\n            创建。\r\n","Bundle key for the device's user visible name property.":"设备用户可见名称属性的捆绑键。\r\n","KeyEvent#KEYCODE_MEDIA_REWIND":"keyEvent＃keycode_media_rewind\r\n","android.media.Session2Token":"android.media.session2token\r\n","Sets the send level of the audio track to the attached auxiliary effect\n            ":"将音轨的发送级别设置为附带的辅助效果\r\n            \r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_PRE_CORRECTION_ACTIVE_ARRAY_SIZE":"android.hardware.camera2.cameracharacteristics.sensor_info_pre_pre_correction_correction_active_array_size\r\n","Returns the name of this provider.":"返回此提供商的名称。\r\n","Adds an NMEA listener.":"添加了NMEA侦听器。\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_IO_FILE_NOT_FOUND":"android.media.metrics.playbackerrorevent.error_io_file_not_found\r\n","android.inputmethodservice.ExtractEditText.hasVerticalScrollBar()":"android.inputmethodservice.extractEdittext.hasverticalscrollbar（）\r\n","Duration between the start of exposure for the first row of the image sensor,\n            and the start of exposure for one past the last row of the image sensor.":"图像传感器第一行的曝光开始之间的持续时间，\r\n            以及一个超过图像传感器的最后一行的曝光开始。\r\n","An optional key describing the period of intra refresh in frames.":"一个可选的键，描述了框架中内部刷新的时期。\r\n","Retrieves the username.":"检索用户名。\r\n","android.media.AudioRecord":"android.media.audiorecord\r\n","No digital output, implicitly secure":"没有数字输出，隐式安全\r\n","The Navigation Message Status is 'unknown'.":"导航消息状态“未知”。\r\n","android.hardware.camera2.CaptureRequest.LENS_FILTER_DENSITY":"android.hardware.camera2.capturerequest.lens_filter_dense\r\n","android.media.ApplicationMediaCapabilities.getSupportedHdrTypes()":"android.media.applicationMediacapabilities.getSupportedHdrtypes（）\r\n","Builds an ID that uniquely identifies a TV input service.":"构建一个唯一标识电视输入服务的ID。\r\n","PlaybackComponent":"plokebackcomponent\r\n","android.media.MediaRouter.getDefaultRoute()":"android.media.mediarouter.getDefaultRoute（）\r\n","AudioManager":"听众\r\n","android.hardware.Sensor.STRING_TYPE_LINEAR_ACCELERATION":"android.hardware.sensor.string_type_linear_acceleration\r\n","android.media.AudioProfile.getSampleRates()":"android.media.audioprofile.getSamplerates（）\r\n","android.media.MicrophoneInfo.getPosition()":"android.media.microphoneinfo.getPosition（）\r\n","android.media.AudioTrack.getMinVolume()":"android.media.audiotrack.getminvolume（）\r\n","Gets track state.":"获得跟踪状态。\r\n","android.media.session.PlaybackState.ACTION_PLAY_PAUSE":"android.media.session.playbackstate.action_play_pause\r\n","android.media.ExifInterface.TAG_GPS_IMG_DIRECTION_REF":"android.media.exifinterface.tag_gps_img_direction_ref\r\n","Sets the device's current ":"设置设备的电流\r\n","android.hardware.camera2.params.Capability.getMaxStreamingSize()":"android.hardware.camera2.params.capibility.getMaxStreamingsize（）\r\n","Returns the manufacturer name of the accessory.":"返回配件的制造商名称。\r\n","android.hardware.usb.UsbDevice.getProductId()":"android.hardware.usb.usbdevice.getProductId（）\r\n","Returns an array of all ":"返回所有阵列\r\n","android.hardware.location.GeofenceHardware.removeGeofence(int, int)":"android.hardware.location.geofencehardware.removegeefence（int，int）\r\n","Returns the current playback sample rate rate in Hz.":"将当前的播放样本率返回Hz。\r\n","android.media.ExifInterface.TAG_SUBSEC_TIME_ORIG":"android.media.exifinterface.tag_subsec_time_orig\r\n","android.hardware.Sensor.STRING_TYPE_SIGNIFICANT_MOTION":"android.hardware.sensor.string_type_significant_motion\r\n","android.media.audiofx.Virtualizer.Virtualizer(int, int)":"android.media.audiofx.virtualizer.Virtualizer（int，int）\r\n","android.media.MediaScannerConnection.MediaScannerConnection(android.content.Context, android.media.MediaScannerConnectionClient)":"android.media.mediascannerconnection.mediascannerconnection（android.content.context，android.media.media.mediascannerconnectionclient）\r\n","android.inputmethodservice.KeyboardView.getKeyboard()":"android.inputmethodservice.keyboardview.getKeyboard（）\r\n","The LightsManager class allows control over device lights.":"LightsManager类允许控制设备灯。\r\n","android.inputmethodservice.InputMethodService.onComputeInsets(android.inputmethodservice.Insets)":"android.inputmethodservice.inputmethodservice.oncomputeinsets（android.inputmethodservice.insets）\r\n","Releases the resources in the current recording session immediately.":"立即在当前记录会话中释放资源。\r\n","android.media.AudioManager.isVolumeFixed()":"android.media.audiomanager.isvolumefixed（）\r\n","android.media.ExifInterface.TAG_IMAGE_UNIQUE_ID":"android.media.exifinterface.tag_image_unique_id\r\n"," identifying the current routing of this AudioRecord.":" 识别此Audiorecord的当前路由。\r\n","android.media.RemoteControlClient.FLAG_KEY_MEDIA_FAST_FORWARD":"android.media.remotecontrolclient.flag_key_media_fast_forward\r\n","Return whether the rating is \"thumb up\".":"返回评级是否为“拇指”。\r\n","android.media.MediaFormat.getFloat(java.lang.String, float)":"android.media.mediaformat.getFloat（java.lang.string，float）\r\n","android.media.MediaExtractor.setDataSource(android.media.MediaDataSource)":"android.media.mediaextractor.setdatasource（android.media.mediadatasource）\r\n","Returns the current ringtone mode. -or- Sets the ringer mode.":"返回当前的铃声模式。 - 或设置铃声模式。\r\n","#acquireNextImage()":"#acquirenextimage（）\r\n","When configured to use a Direct Proxy this returns the list\n of hosts for which the proxy is ignored.":"配置为使用直接代理时，此返回列表\r\n 忽略代理的主机。\r\n","if name is null.\n":"如果名称为null。\r\n\r\n","android.net.LocalSocket.getInputStream()":"android.net.localsocket.getInputstream（）\r\n","Indicates that the audio may only be captured by system apps.":"表示音频只能由系统应用程序捕获。\r\n","android.hardware.SensorEvent\n                       sensor events":"android.hardware.sensorevent\r\n                       传感器事件\r\n","android.media.MediaRoute2Info.getDescription()":"android.media.mediaroute2info.getDescription（）\r\n","android.location.Address.setPhone(java.lang.String)":"android.location.address.setphone（java.lang.string）\r\n","The altitude (in meters) based on the reference in TAG_GPS_ALTITUDE_REF.":"基于tag_gps_altitude_ref中的参考（以米为单位）。\r\n","android.location.GnssCapabilities.hasGnssAntennaInfo()":"android.location.gnsscapabilities.hasgnssantennainfo（）\r\n","android.inputmethodservice.InputMethodService.onFinishInput()":"android.inputmethodservice.inputmethodservice.onfinishinput（）\r\n","android.hardware.camera2.params.MeteringRectangle.MeteringRectangle(int, int, int, int, int)":"android.hardware.camera2.params.meteringRectangle.MeteringRectangle（int，int，int，int，int，int）\r\n","CaptureRequest#TONEMAP_MODE android.tonemap.mode":"capturerequest＃tonemap_mode android.tonemap.mode\r\n","A utility class describing the properties of one stream of fixed-size image buffers\n            backing a multi-resolution image stream.":"描述一个固定大小的图像缓冲区流的属性的实用程序类\r\n            支持多分辨率图像流。\r\n","android.media.MediaParser.create(android.media.OutputConsumer, java.lang.String)":"android.media.mediaparser.create（android.media.outputconsumer，java.lang.string）\r\n","android.hardware.Sensor.STRING_TYPE_MAGNETIC_FIELD_UNCALIBRATED":"android.hardware.sensor.string_type_magnetic_field_uncalibrated\r\n","Encapsulates the information describing the format of media data, be it audio or video, as\n            well as optional feature metadata.":"封装描述媒体数据格式的信息，无论是音频还是视频，\r\n            以及可选的特征元数据。\r\n","android.media.MediaRoute2Info.CONNECTION_STATE_DISCONNECTED":"android.media.mediaroute2info.connection_state_disconnected\r\n","android.net.PlatformVpnProfile":"android.net.platformvpnprofile\r\n","Creates a new server socket listening at specified name.":"以指定名称创建一个新的服务器套接字。\r\n","android.hardware.ConsumerIrManager.transmit(int, int[])":"android.hardware.consumerirmanager.transmit（int，int []）\r\n","Cancels the session command previously sent.":"取消以前发送的会话命令。\r\n","android.media.MediaDescription":"android.media.mediadescription\r\n"," of the calling thread.":" 呼叫线程。\r\n","android.media.MediaCas.SCRAMBLING_MODE_TDES_ECB":"android.media.mediacas.scrambling_mode_tdes_ecb\r\n","android.media.metrics.PlaybackSession.reportPlaybackStateEvent(android.media.metrics.PlaybackStateEvent)":"android.media.metrics.playbacksession.reportplaybackstateevent（android.media.metrics.playbackstateevent）\r\n","android.location.GnssStatus.hasAlmanacData(int)":"android.location.gnssstatus.hasalmanacdata（int）\r\n","android.media.browse.MediaBrowser.unsubscribe(java.lang.String)":"android.media.browse.mediabrowser.unsubscribe（java.lang.string）\r\n","Sends a broadcast to refresh the injected settings on location settings page.":"发送广播以刷新位置设置页面上的注入设置。\r\n","android.hardware.HardwareBuffer.USAGE_GPU_COLOR_OUTPUT":"android.hardware.hardwarebuffer.usage_gpu_color_output\r\n","android.location.GnssNavigationMessage.TYPE_GPS_L1CA":"android.location.gnssnavigationmessage.type_gps_l1ca\r\n",", and control their playback.":"并控制他们的播放。\r\n","android.media.ExifInterface.saveAttributes()":"android.media.exifinterface.saveattributes（）\r\n","Playback is buffering to resume active playback.":"播放正在缓冲以恢复主动播放。\r\n","android.media.AudioFormat.ENCODING_MPEGH_LC_L4":"android.media.audioformat.encoding_mpegh_lc_l4\r\n","MidiReceiver":"中等学者\r\n","Widevine L3 fallback DRM type.":"Widevine L3后备DRM类型。\r\n","if the arguments are invalid\n":"如果参数无效\r\n\r\n","The sequence ID for this failed capture that was returned by the\n            ":"此失败捕获的序列ID由\r\n            \r\n","android.net.TrafficStats.getUidTxBytes(int)":"android.net.trafficstats.getuidtxbytes（int）\r\n","android.hardware.usb.UsbDeviceConnection.setConfiguration(android.hardware.usb.UsbConfiguration)":"android.hardware.usb.usbdeviceconnection.setConfiguration（android.hardware.usb.usbconfiguration）\r\n","The request has failed due to unknown reason.":"该请求由于未知原因而失败。\r\n","android.media.MediaPlayer.getSelectedTrack(int)":"android.media.mediaplayer.getSelectedTrack（INT）\r\n","#TONE_SUP_CONGESTION":"#tone_sup_congestion\r\n"," class, which provides localized strings for an\n            application, given a set of allowed authenticator types.":" 班级，为一个局部字符串\r\n            应用程序，给定一组允许的身份验证器类型。\r\n","The area of the image sensor which corresponds to active pixels prior to the\n            application of any geometric distortion correction, when the sensor runs in maximum\n            resolution mode.":"图像传感器的面积对应于在\r\n            当传感器最大运行时，任何几何失真校正的应用\r\n            分辨率模式。\r\n","Get the crop rectangle associated with this frame. -or- Set the crop rectangle associated with this frame.":"获取与此框架相关的作物矩形。 - 或设置与此框架相关的作物矩形。\r\n","android.location.LocationManager.unregisterGnssMeasurementsCallback(android.location.Callback)":"android.location.locationManager.unregistergnssmeasurementCallback（android.location.callback）\r\n","android.hardware.SensorDirectChannel.close()":"android.hardware.sensordirectChannel.Close（）\r\n"," output format and at least one configuration with\n            size approximately equal to the sensor pixel array size\n            ":" 输出格式和至少一种配置\r\n            大小约等于传感器像素阵列大小\r\n            \r\n","Processed images are rotated by 180 degrees.":"处理的图像旋转180度。\r\n","android.mtp.MtpDevice.getPartialObject(int, long, long, byte[])":"android.mtp.mtpdevice.getPartialObject（int，long，long，byte []）\r\n","LinearBlock":"线性嵌段\r\n","android.location.LocationManager.KEY_LOCATIONS":"android.location.locationmanager.key_locations\r\n","android.media.AudioPresentation.MASTERED_FOR_HEADPHONE":"android.media.audiopersentation.mastered_for_headphone\r\n","Denotes a failure due to the use of an invalid value.":"表示由于使用无效值而导致故障。\r\n","android.media.AudioManager.PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND":"android.media.audiomanager.property_support_mic_near_ultrasound\r\n","android.media.session.PlaybackState.getLastPositionUpdateTime()":"android.media.session.playbackstate.getLastPositionUpdateTime（）\r\n","Retrieve the set of input buffers.":"检索一组输入缓冲区。\r\n","android.location.Criteria.setBearingRequired(boolean)":"Android.Location.Criteria.SetBearingRequired（布尔）\r\n","Returns a bitmap icon suitable for display or null.":"返回适用于显示或空的位图图标。\r\n","If possible, seek to a sync sample at or after the specified time":"如果可能的话，请在指定时间或之后寻求同步样品\r\n","android.inputmethodservice.Keyboard.getNearestKeys(int, int)":"android.inputmethodservice.keyboard.getnearestkeys（int，int）\r\n","True if this location has a bearing accuracy.":"如果此位置具有轴承精度，则为诚然。\r\n","android.media.RingtoneManager.setStopPreviousRingtone(boolean)":"android.media.ringtonemanager.setstoppreviousringtone（布尔）\r\n","Unsubscribe from vendor parameters, so that these parameters will not be present in\n            ":"取消订阅供应商参数，因此这些参数不会存在于\r\n            \r\n","android.net.LocalSocket.SOCKET_SEQPACKET":"android.net.localsocket.socket_seqpacket\r\n","#TONE_CDMA_CALL_SIGNAL_ISDN_PAT3":"＃tone_cdma_call_signal_isdn_pat3\r\n","InputMethodManager#SHOW_FORCED":"Inputmethodmanager＃show_forced\r\n","Create a new volume provider for handling volume events.":"创建一个新的卷提供商来处理卷活动。\r\n","Return the subscription Id of current TelephonyNetworkSpecifier object.":"返回当前TelephonyNetworkspecifier对象的订阅ID。\r\n","Defines a capture mode where the playback volume will affect (scale) the range of the\n            captured data.":"定义捕获模式，其中播放卷将影响（比例）\r\n            捕获的数据。\r\n","android.hardware.usb.UsbEndpoint":"android.hardware.usb.usbendpoint\r\n","Per buffer metadata includes an offset and size specifying\n the range of valid data in the associated codec buffer.":"每个缓冲元数据包括一个偏移和大小指定\r\n 相关编解码器缓冲区中有效数据的范围。\r\n","android.net.IpSecManager.removeTransportModeTransforms(java.net.DatagramSocket)":"android.net.ipsecmanager.removetransportmodetransforms（java.net.datagramsocket）\r\n","android.location.Criteria.getHorizontalAccuracy()":"android.location.criteria.gethorizo​​ntalaccuracy（）\r\n","android.media.PlaybackParams.allowDefaults()":"android.media.playbackparams.allowdefaults（）\r\n","android.media.AudioRecordingConfiguration.getClientFormat()":"android.media.audiorecordingConfiguration.getClientFormat（）\r\n","android.media.MediaRecorder.addOnRoutingChangedListener(android.media.OnRoutingChangedListener, android.os.Handler)":"android.media.mediarecorder.addonroutingchangedlistener（android.media.onroutingchangedlistener，android.os.handler）\r\n","android.media.AudioManager.adjustVolume(int, int)":"android.media.audiomanager.adjustvolume（int，int）\r\n","android.hardware.display.DisplayManager.MATCH_CONTENT_FRAMERATE_NEVER":"android.hardware.display.displaymanager.match_content_framerate_never\r\n","android.media.MediaDescrambler.requiresSecureDecoderComponent(java.lang.String)":"android.media.mediadescrambler.requiressecuredecoderComponent（java.lang.string）\r\n","android.location.LocationManager.getProviders(android.location.Criteria, boolean)":"android.location.locationmanager.getProviders（android.location.Criteria，boolean）\r\n","android.media.session.MediaSessionManager.getSession2Tokens()":"android.media.session.mediasessionmanager.getSession2Tokens（）\r\n","android.media.MediaMetadataRetriever#METADATA_KEY_WRITER":"android.media.mediametadataretriever＃metadata_key_writer\r\n","Gets the pseudorange's rate uncertainty (1-Sigma) in m/s.":"以m/s的速度获得伪曲线的速率不确定性（1- sigma）。\r\n","Returns the square of the distance between the center of the key and the given point.":"返回钥匙中心与给定点之间的距离正方形。\r\n","Returns the version of the accessory.":"返回配件的版本。\r\n","GPS L1 C/A message contained in the structure.":"结构中包含的GPS L1 C/A消息。\r\n","android.media.MediaRecorder.setAudioSource(int)":"android.media.mediarecorder.setaudiosource（int）\r\n","Gets the clock's Bias Uncertainty (1-Sigma) in nanoseconds.":"在纳秒中获得时钟的偏见不确定性（1- sigma）。\r\n","InputMethodManager#HIDE_NOT_ALWAYS":"Inputmethodmanager＃hide_not_always\r\n","android.media.AudioManager.unregisterRemoteControlClient(android.media.RemoteControlClient)":"android.media.audiomanager.unregisterremotecontrolclient（android.media.remotecontolclient）\r\n","Unspecified media player error.":"未指定的媒体播放器错误。\r\n","android.hardware.camera2.params.Capability.getZoomRatioRange()":"android.hardware.camera2.params.capibility.getzoomratiorange（）\r\n","android.media.RemoteControlClient.RemoteControlClient(android.app.PendingIntent)":"android.media.remotecontrolclient.remotecontrolclient（android.app.pendentIntent）\r\n","android.media.AudioTrack.getTimestamp(android.media.AudioTimestamp)":"android.media.audiotrack.getTimestamp（android.media.audiotimestamp）\r\n","if the Uri cannot be used due to lack of\n permission.\n":"如果由于缺乏而无法使用URI\r\n 允许。\r\n\r\n","Time lapse quality level corresponding to the 1080p (1920 x 1088) resolution.":"时间失误质量水平对应于1080p（1920 x 1088）分辨率。\r\n","CaptureRequest#CONTROL_MODE android.control.mode":"CaptureRequest#CONTROL_MODE android的。控制。模式\r\n","Opens the MTP device.":"打开MTP设备。\r\n","android.media.ExifInterface.TAG_GPS_ALTITUDE":"android.media.exifinterface.tag_gps_altitude\r\n","android.location.GnssStatus":"android.location.gnssstatus\r\n","The accuracy of frame timestamp synchronization between physical cameras":"框架时间戳在物理相机之间同步的准确性\r\n","android.media.Rating.RATING_3_STARS":"android.media.rating.rating_3_stars\r\n","android.media.MediaMuxer.release()":"android.media.mediamuxer.release（）\r\n","Called when the application has reported a new location of its text\n            cursor.":"当应用程序报告其文本的新位置时，请致电\r\n            光标。\r\n","android.media.ExifInterface.TAG_RELATED_SOUND_FILE":"android.media.exifinterface.tag_releated_sound_file\r\n"," for a storage unit.":" 对于存储单元。\r\n","The Bluetooth data connection. ":"蓝牙数据连接。\r\n","Stops projection.":"停止投影。\r\n","Describes a proxy configuration.":"描述代理配置。\r\n","Uses the settings from an AudioProfile for recording.":"使用来自AudioProfile的设置进行录制。\r\n","The number of offsets in this vector.":"该向量中的偏移数量。\r\n","android.media.RoutingSessionInfo.getId()":"android.media.routingsessioninfo.getID（）\r\n","The confidence level for the detection of the face.":"检测面的信心水平。\r\n","android.net.PlatformVpnProfile.getTypeString()":"android.net.platformvpnprofile.getTypestring（）\r\n","android.hardware.camera2.CaptureRequest.JPEG_GPS_LOCATION":"android.hardware.camera2.capturerequest.jpeg_gps_location\r\n","Register for location updates using a provider selected through the given Criteria, and\n            callbacks delivered via the provided ":"使用通过给定标准选择的提供商注册位置更新，并\r\n            通过提供的回调\r\n","LogSessionId#LOG_SESSION_ID_NONE":"logSessionId＃log_session_id_none\r\n","android.media.ExifInterface.getDateTimeDigitized()":"android.media.exifinterface.getDateTimEdigitized（）\r\n","Route feature: Remote playback.":"路线功能：远程播放。\r\n","Indicates whether network connectivity exists and it is possible to establish\n connections and pass data.":"指示网络连接是否存在，可以建立\r\n 连接并传递数据。\r\n","A key describing the hardware AV sync id.":"描述硬件AV同步ID的键。\r\n","android.media.tv.TvContentRating.UNRATED":"android.media.tv.tvcontentrating.unrated\r\n","Gets the GNSS measurement's satellite inter-signal bias in nanoseconds with sub-nanosecond\n            accuracy.":"获得GNSS Measurement的卫星信号偏置在纳米秒中\r\n            准确性。\r\n","The range of image exposure times for ":"图像暴露时间的范围\r\n","Opens the device so it can be used to send and receive\n            data using ":"打开设备，以便可以用于发送和接收\r\n            数据使用\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_SNAPSHOT":"android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_SNAPSHOT\r\n","if the image format was not a defined named constant\n          from either ":"如果图像格式不是定义的命名常数\r\n          来自两个\r\n","Gets current zoom value.":"获取当前的缩放值。\r\n","android.media.MediaCasStateException.getDiagnosticInfo()":"android.media.MediacasStateException.GetDiagnosticInfo（）\r\n","android.hardware.camera2.params.RggbChannelVector.copyTo(float[], int)":"android.hardware.camera2.params.RggbChannelVector.copyTo(float[], int)\r\n","Parser for fragmented files using the MP4 container format, as defined in ISO/IEC 14496-12.":"使用MP4容器格式的零碎文件的解析器，如ISO/IEC 14496-12所定义。\r\n","Query if the crypto scheme requires the use of a secure decoder\n            to decode data of the given mime type.":"查询如果加密方案需要使用安全解码器\r\n            解码给定的MIME类型的数据。\r\n","android.media.MediaDrm.HDCP_NONE":"android.media.mediadrm.hdcp_none\r\n","android.hardware.camera2.params.Face.getBounds()":"android.hardware.camera2.params.face.getBounds（）\r\n","android.media.audiofx.Visualizer.release()":"android.media.audiofx.Visualizer.Release（）\r\n","Intent to launch an audio effect control panel UI.":"打算启动音频效应控制面板UI。\r\n","#ADR_STATE_HALF_CYCLE_RESOLVED":"#adr_state_half_cycle_resolved\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_IO_NO_PERMISSION":"android.media.metrics.playbackerrorevent.error_io_no_permission\r\n","F:Android.Media.MediaRouter+UserRouteInfo.SetVolumeHandling":"f：android.media.mediarouter+userrouteinfo.setvolumehandling\r\n","Callback#onInputBufferAvailable":"回调＃onutputbufferavailable\r\n","Compute the interesting insets into your UI.":"将有趣的插图计算到您的UI中。\r\n","android.media.session.PlaybackState.STATE_SKIPPING_TO_QUEUE_ITEM":"android.media.session.playbackstate.state_skipping_to_queue_item\r\n","android.media.RingtoneManager.RingtoneManager(android.app.Activity)":"android.media.ringtonemanager.ringtonemanager（android.app.Activity）\r\n","CaptureRequest#TONEMAP_CURVE android.tonemap.curve":"CaptureRequest＃tonemap_curve android.tonemap.curve\r\n","Adds information stored as an instance.":"添加作为实例存储的信息。\r\n","android.media.MediaCodec.PARAMETER_KEY_VIDEO_BITRATE":"android.media.mediacodec.parameter_key_video_bitrate\r\n","Returns a simple description of this metadata for display purposes.":"为显示目的返回此元数据的简单描述。\r\n","Full range.":"全系列。\r\n","android.location.Geocoder.getFromLocation(double, double, int)":"android.location.geocoder.getFromlocation（double，double，int）\r\n","android.media.MediaSync.setSurface(android.view.Surface)":"android.media.mediasync.setsurface（android.view.surface）\r\n","Encrypt data using the CryptoSession's cipher algorithm":"使用密码session的密码算法加密数据\r\n","android.media.ExifInterface.TAG_SUBJECT_LOCATION":"android.media.exifinterface.tag_subject_location\r\n","Audio data format: MPEG-H low complexity profile, level 4":"音频数据格式：MPEG-H低复杂度概况，级别4\r\n","Whether the camera device will trigger a precapture\n            metering sequence when it processes this request.":"相机设备是否会触发预定\r\n            处理此请求时计量顺序。\r\n","Describes the properties of a route.":"描述路线的属性。\r\n","Sets the video encoding bit rate for recording.":"设置视频编码比特率以进行录制。\r\n","The device supports reprocessing from the <code>RAW_SENSOR</code> format with a bayer pattern\n            given by ":"该设备支持从<code> RAW_SENSOR </code>格式的重新处理，并使用拜耳模式\r\n            给出\r\n","#FLAG_KEY_MEDIA_NEXT":"#flag_key_media_next\r\n"," object encapsulating the signal gain\n            corrections and corresponding uncertainties in dBi.":" 对象封装信号增益\r\n            DBI中的校正和相应的不确定性。\r\n","Gets the supported preview frame rates.":"获取支持的预览帧速率。\r\n","android.media.MediaActionSound.FOCUS_COMPLETE":"android.media.mediaactionsound.focus_complete\r\n"," is no longer valid for this input method.":" 对于此输入方法不再有效。\r\n","Reports network event.":"报告网络事件。\r\n","android.location.LocationManager.setTestProviderStatus(java.lang.String, int, android.os.Bundle, long)":"android.location.locationmanager.settestproviderstatus（java.lang.string，int，android.os.bundle，long）\r\n","android.net.SSLSessionCache.SSLSessionCache(android.content.Context)":"android.net.sslsessioncache.sslsessioncache（android.content.context）\r\n"," object for the accessory.":" 附件的对象。\r\n","PlaybackParams#getSpeed\n                Speed":"plobackparams＃getspeed\r\n                速度\r\n","Returns the format code for the MTP object's thumbnail\n            Will be zero for objects with no thumbnail":"返回MTP对象的缩略图的格式代码\r\n            对于没有缩略图的物体将为零\r\n","Returns the set of physical camera ids that this logical ":"返回该逻辑的物理相机ID集\r\n","android.hardware.usb.UsbDevice.getConfiguration(int)":"android.hardware.usb.usbdevice.getConfiguration（int）\r\n","Set the user-visible description of this route.":"设置此路线的用户可见描述。\r\n","android.hardware.SensorManager.GRAVITY_THE_ISLAND":"android.hardware.sensormanager.gravity_the_island\r\n","android.location.provider.ProviderProperties":"android.location.provider.providerproperties\r\n","android.location.GnssMeasurement.hasAutomaticGainControlLevelDb()":"android.location.gnssmeasurement.hasautomaticgaincontrolleveldb（）\r\n","Gets the decay time.":"得到衰减时间。\r\n","android.hardware.camera2.CameraManager.unregisterAvailabilityCallback(android.hardware.camera2.AvailabilityCallback)":"android.hardware.camera2.cameramanager.unregisteravailablecalback（android.hardware.camera.camera2.availablecycallback）\r\n","#onCreateSession(long, String, String, Bundle)":"#oncreatesession（长，字符串，字符串，捆绑包）\r\n","A failed focus change request.":"焦点更改请求失败。\r\n","android.media.session.PlaybackState.STATE_SKIPPING_TO_PREVIOUS":"android.media.session.playbackstate.state_skipping_to_previous\r\n","#getFullInterSignalBiasUncertaintyNanos()":"#getfullintersignalbiasuncunclentytynanos（）\r\n","android.hardware.camera2.CameraManager.getConcurrentCameraIds()":"android.hardware.camera2.cameramanager.getConcurrentCameraids（）\r\n","Get the ID of this camera device.":"获取此相机设备的ID。\r\n","android.hardware.lights.LightsRequest.getLightStates()":"android.hardware.lights.lightsrequest.getlightstates（）\r\n","SessionConfiguration":"会议con仪\r\n","Other network type":"其他网络类型\r\n","If this codec is to be used as an encoder, pass this flag.":"如果将此编解码器用作编码器，请传递此标志。\r\n","Returns true if the GPS engine has almanac data for the satellite.":"如果GPS引擎具有卫星的年鉴数据，则返回真实。\r\n","Operation code for ResetDevicePropValue":"RESETDEVICEPROPVALUE的操作代码\r\n","Constructs a new Address object set to the given Locale and with all\n            other fields initialized to null or false.":"构建一个新的地址对象，设置为给定的语言环境以及所有\r\n            其他字段初始化为null或false。\r\n","android.location.GpsSatellite.getPrn()":"android.location.gpssatellite.getprn（）\r\n","Builder#addMatchingUid(int)":"构建器＃addMatchinguid（int）\r\n","AudioPresentation#MASTERED_FOR_HEADPHONE":"听力贷款＃MASTERED_FOR_HEADPHONE\r\n","android.media.AudioManager.setSurroundFormatEnabled(int, boolean)":"android.media.audiomanager.setsurnoundformateNabled（int，boolean）\r\n","#getColumnCount":"#getColumnCount\r\n","android.media.AudioTrack.setPlaybackParams(android.media.PlaybackParams)":"android.media.audiotrack.setplaybackparams（android.media.playbackparams）\r\n","android.media.AudioManager.AUDIOFOCUS_GAIN_TRANSIENT":"android.media.audiomanager.audiofocus_gain_transient\r\n","android.media.MediaScannerConnection.scanFile(java.lang.String, java.lang.String)":"android.media.mediascannerconnection.scanfile（java.lang.string，java.lang.string）\r\n","Checks whether the speakerphone is on or off. -or- Sets the speakerphone on or off.":"检查说话者是打开还是关闭。 - 或 - 设置发言机打开或关闭。\r\n","android.hardware.camera2.CaptureResult.CONTROL_AF_REGIONS":"android.hardware.camera2.captureresult.control_af_rigions\r\n","s when a location change is sent\n            using a PendingIntent.":"s何时发送位置更改\r\n            使用垂悬。\r\n","offset":"抵消\r\n","Specifies the number of pipeline stages the frame went\n            through from when it was exposed to when the final completed result\n            was available to the framework.":"指定框架进行的管道数量\r\n            从最终完成的结果何时接触到\r\n            可用于框架。\r\n","Query if the codec is provided by the Android platform (false) or the device manufacturer\n            (true).":"查询是否由Android平台（false）或设备制造商提供编解码器。\r\n            （真的）。\r\n","Returns the number of underrun occurrences in the application-level write buffer\n            since the AudioTrack was created.":"返回应用程序级写入缓冲区中底底事件的数量\r\n            由于创建了录音带。\r\n","android.media.ExifInterface#ORIENTATION_FLIP_HORIZONTAL":"android.media.exifinterface＃orientation_flip_horizo​​ntal\r\n","android.location.LocationManager.removeNmeaListener(android.location.NmeaListener)":"android.location.LocationManager.RemovenMealistener（android.location.nmealistener）\r\n","android.media.PlaybackParams.setAudioFallbackMode(int)":"android.media.playbackparams.setaudiofallbackmode（int）\r\n","Clear any active UID set to account ":"清除任何有效的UID设置为帐户\r\n","Create a sensor direct channel backed by shared memory wrapped in MemoryFile object.":"创建一个传感器直接通道，该通道由内存文件中包含的共享内存备份。\r\n","Creates a AF_LOCAL/UNIX domain stream socket.":"创建AF_LOCAL/UNIX域流套筒。\r\n","LocationProvider#AVAILABLE":"LocationProvider＃可用\r\n","android.media.MediaFormat.KEY_TILE_HEIGHT":"android.media.mediaformat.key_tile_height\r\n","Beidou CNAV1 message contained in the structure.":"结构中包含的Beidou CNAV1消息。\r\n","Virtual display flag: Create a public display.":"虚拟显示标志：创建一个公共显示。\r\n","android.media.MediaRecorder.setVideoSize(int, int)":"android.media.mediarecorder.setVideosize（int，int）\r\n","android.media.AudioRecord.registerAudioRecordingCallback(java.util.concurrent.Executor, android.media.AudioRecordingCallback)":"android.media.audiorecord.registeraudiorecordingcallback（java.util.concurrent.executor，android.media.media.audiorecordingcallback）\r\n","Usage: The buffer will be read from by the GPU":"用法：缓冲区将由GPU阅读\r\n","android.hardware.camera2.CameraCharacteristics.getAvailableSessionKeys()":"android.hardware.camera2.cameracharacteristics.getavailablessessionsessession（）\r\n","android.hardware.camera2.params.MeteringRectangle.equals(android.hardware.camera2.params.MeteringRectangle)":"android.hardware.camera2.params.meteringrectangle.equals（android.hardware.camera2.params.params.meteringrectangle）\r\n","Prevents this RemoteController from receiving artwork images.":"防止此RemoteController接收艺术品图像。\r\n","List of aberration correction modes for ":"畸变校正模式的清单\r\n","TrackInfo#MEDIA_TRACK_TYPE_AUDIO":"TrackInfo＃Media_track_type_audio\r\n","\n            specifies the scaling mode to use.":"\r\n            指定使用缩放模式。\r\n","Reason for ":"原因\r\n","Check whether this session has been enabled by the system.":"检查该会话是否已由系统启用。\r\n","Programs#COLUMN_END_TIME_UTC_MILLIS":"程序＃column_end_time_utc_millis\r\n","android.media.AudioRecord.read(short[], int, int)":"android.media.audiorecord.Read（short []，int，int）\r\n","Get the elapsed real time at which position was last updated.":"实时获得最后更新的位置。\r\n","android.media.MediaRecorder.setAudioProfile(android.media.AudioProfile)":"android.media.mediarecorder.setaudioprofile（android.media.audioprofile）\r\n","Visualizer.MeasurementPeakRms":"可visualizer.measurementPeakrms\r\n","Query if the scrambling scheme requires the use of a secure decoder\n            to decode data of the given mime type.":"查询是否需要使用安全解码器\r\n            解码给定的MIME类型的数据。\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_ALBUMARTIST":"android.media.mediametadataretriever.metadata_key_albumartist\r\n","android.media.AudioManager.getCommunicationDevice()":"android.media.audiomanager.getCommunicationDevice（）\r\n","The number of color channels in this vector.":"此向量中的颜色通道数。\r\n","#isCryptoSchemeSupported(UUID, String, int)":"#iscryptoschemesupported（uuid，string，int）\r\n","Convenience method to add a network route to the VPN interface\n using a numeric address string.":"便利方法将网络路线添加到VPN接口\r\n 使用数字地址字符串。\r\n","Returns the devices's class field.":"返回设备的类字段。\r\n","A class representing an Address, i.":"代表地址的课程，i。\r\n","android.media.MediaFormat.KEY_CAPTION_SERVICE_NUMBER":"android.media.mediaformat.key_caption_service_number\r\n","Get the use case value for the recommended stream configurations.":"获取推荐流配置的用例值。\r\n","Connects this socket to an endpoint.":"将此插座连接到端点。\r\n","Returns the selected input device specified by ":"返回选定的输入设备\r\n","android.media.audiofx.AutomaticGainControl.create(int)":"android.media.audiofx.automaticgaincontrol.create（int）\r\n"," and/or ":" 和/或\r\n","Get the frame number associated with this failed capture.":"获取与此失败捕获相关联的帧号。\r\n","Returns the level in dBFS produced by a 1000Hz tone at 94 dB SPL.":"返回由94 dB SPL的1000Hz音调产生的DBF的水平。\r\n","Indicates that this network is unmetered.":"表明该网络是未分配的。\r\n"," == STILL_CAPTURE.":" == still_capture。\r\n","android.media.JetPlayer.play()":"android.media.jetplayer.play（）\r\n",": Video is unavailable because\n            smart card is muted.":"：视频不可用，因为\r\n            智能卡被静音。\r\n","android.net.LocalSocket.connect(android.net.LocalSocketAddress)":"android.net.localsocket.connect（android.net.localsocketDress）\r\n"," object that represents the orientation of microphone.":" 代表麦克风方向的对象。\r\n","android.mtp.MtpConstants.OPERATION_INITIATE_CAPTURE":"android.mtp.mtpconstants.operation_initiate_capture\r\n","Indicates whether a capture request may target both a\n            DEPTH16 / DEPTH_POINT_CLOUD output, and normal color outputs (such as\n            YUV_420_888, JPEG, or RAW) simultaneously.":"指示捕获请求是否可以同时针对\r\n            DEPTH16/DEPTH_POINT_CLOUD输出，和正常颜色输出（如\r\n            YUV_420_888，JPEG或RAW）同时进行。\r\n","android.os.SystemClock#elapsedRealtimeNanos":"Android.os.SystemClock＃ElapsedRealTimenanos\r\n","A title that is suitable for display to the user.":"适用于用户显示的标题。\r\n","Return the star-based rating value.":"返回基于星星的评分值。\r\n","android.hardware.camera2.CaptureResult.STATISTICS_HOT_PIXEL_MAP":"android.hardware.camera2.captureresult.statistics_hot_pixel_map\r\n","Playback has reached the end of the media.":"播放已经达到媒体的结尾。\r\n","SurfaceHolder":"表面持有人\r\n","CaptureRequest#CONTROL_AWB_LOCK android.control.awbLock":"CaptureRequest＃CONTROL_AWB_LOCK android的。控制。n.障碍,障碍\r\n","android.media.metrics.PlaybackSession.reportPlaybackMetrics(android.media.metrics.PlaybackMetrics)":"android.media.metrics.playbacksession.reportplaybackmetrics（android.media.metrics.playbackmetrics）\r\n","Handles requests to adjust or set the volume on a session.":"处理请求调整或设置会话中的卷。\r\n","Get the timestamp in nanoseconds.":"获取纳秒秒的时间戳。\r\n","android.location.GnssNavigationMessage.getSvid()":"android.location.gnssnavigationMessage.getSvid（）\r\n","If the sample flags indicate that the current sample is at least\n            partially encrypted, this call returns relevant information about\n            the structure of the sample data required for decryption.":"如果样品标志表明当前样品至少是\r\n            部分加密，此呼叫返回有关的相关信息\r\n            解密所需的样本数据的结构。\r\n","android.media.AudioManager.setStreamSolo(int, boolean)":"android.media.audiomanager.setstreamsolo（int，boolean）\r\n","android.media.ExifInterface#ORIENTATION_TRANSVERSE":"android.media.exifterface＃orientation_transverse\r\n","A key for boolean AUTOSELECT behavior for the track.":"布尔值自动选择行为的关键。\r\n","REGULAR_CODECS":"常规_codecs\r\n","android.media.MediaSync.flush()":"android.media.mediasync.flush（）\r\n"," from an RGGB 2x2 pixel.":" 从 RGGB 2x2 像素。\r\n","android.mtp.MtpObjectInfo.getName()":"android.mtp.mtpobjectInfo.getName（）\r\n","android.location.Location.getElapsedRealtimeNanos()":"android.location.location.getElapsedRealTimenanos（）\r\n","Registers a GNSS status callback.":"注册A GNSS状态回调。\r\n","android.media.TimedMetaData.getTimestamp()":"android.media.timedmetadata.gettimestamp（）\r\n","android.media.RingtoneManager.setIncludeDrm(boolean)":"android.media.ringtonemanager.setincludedrm（boolean）\r\n","Returns additional provider-specific information about the location fix as a Bundle. -or- Sets the extra information associated with this fix to the given Bundle.":"返回有关位置修复的其他特定于提供商的特定信息。 - 或 - 将与此修复程序相关联的额外信息与给定捆绑包相关联。\r\n","android.hardware.biometrics.BiometricManager.BIOMETRIC_SUCCESS":"android.hardware.biometrics.biometricmanager.biometric_success\r\n","android.media.MediaParser.PARSER_NAME_FLAC":"android.media.mediaparser.parser_name_flac\r\n","android.location.LocationManager.requestLocationUpdates(java.lang.String, android.location.LocationRequest, android.app.PendingIntent)":"android.location.LocationManager.RequestLocationUpdates（java.lang.string，android.location.location.locationrequest，android.app.pendententent）\r\n","android.hardware.SensorManager.registerDynamicSensorCallback(android.hardware.DynamicSensorCallback)":"android.hardware.sensormanager.registerdynamicsensorcallback（android.hardware.dynamicsensorcallback）\r\n","android.media.MediaPlayer.create(android.content.Context, int, android.media.AudioAttributes, int)":"android.media.mediaplayer.create（android.content.context，int，android.media.audioAttributes，int）\r\n","android.media.MediaDrm.EVENT_PROVISION_REQUIRED":"android.media.mediadrm.event_provision_required\r\n","KeyEvent#KEYCODE_MEDIA_PREVIOUS":"keyEvent＃keycode_media_previous\r\n","android.media.CamcorderProfile.audioSampleRate":"android.media.camcorderprofile.audiosamplate\r\n","android.location.Address.getFeatureName()":"android.location.Address.getFeatUrename（）\r\n","Used as a key for ":"用作关键\r\n","android.inputmethodservice.AbstractInputMethodService.onCreateInputMethodSessionInterface()":"android.inputmethodservice.abstractinputmethodservice.oncreateinputmethodsessionsessionface（）\r\n","The desired zoom ratio":"所需的缩放比率\r\n","List of sensor test pattern modes for ":"传感器测试模式的列表\r\n","Add a sensor pixel mode that this OutputConfiguration will be used in.":"添加一种传感器像素模式，该模式将使用此输出configuration。\r\n","android.media.MediaMetadata.getRating(java.lang.String)":"android.media.mediametadata.getrating（java.lang.string）\r\n","If the media contains still images, this key retrieves the image\n            index of the primary image.":"如果媒体包含静止图像，则此键检索图像\r\n            主图像的索引。\r\n","Returns a lists of ":"返回列表\r\n","android.inputmethodservice.InputMethodService.onKeyUp(int, android.view.KeyEvent)":"android.inputmethodservice.inputmethodservice.onkeyup（int，android.view.keyevent）\r\n","Returns the creation date of the MTP object\n            The value is represented as milliseconds since January 1, 1970":"返回MTP对象的创建日期\r\n            自1970年1月1日以来，该值表示为毫秒\r\n","android.media.AudioManager.getPlaybackOffloadSupport(android.media.AudioFormat, android.media.AudioAttributes)":"android.media.audiomanager.getPlaybackoffsupport（android.media.audioformat，android.media.audioattributes）\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_DRM_SCHEME_UNSUPPORTED":"android.media.metrics.playbackerrorevent.error_drm_scheme_unsupported\r\n","android.media.tv.TvInputInfo.loadLabel(android.content.Context)":"android.media.tv.tvinputinfo.loadlabel（android.content.context）\r\n"," if the track is intended for people with hearing impairment, ":" 如果该曲目适用于听力障碍的人\r\n","A constant string describing a light sensor type.":"描述光传感器类型的常数字符串。\r\n","android.location.GnssClock.hasFullBiasNanos()":"android.location.gnssclock.hasfullbiasnanos（）\r\n","android.media.VolumeProvider.getVolumeControlId()":"android.media.volumeprovider.getVolumeControlid（）\r\n","Sets the audio presentation.":"设置音频演示文稿。\r\n","android.media.MediaSync.getPlaybackParams()":"android.media.mediasync.getplaybackparams（）\r\n"," when the user authenticated by\n            presenting some form of biometric (e.":" 当用户通过\r\n            呈现某种形式的生物特征（e。\r\n","Create a new multi-resolution reader based on a group of camera stream properties returned\n            by a camera device.":"根据返回的一组相机流属性创建一个新的多分辨率读取器\r\n            通过相机设备。\r\n","android.media.MediaDrm.releaseSecureStops(byte[])":"android.media.mediadrm.releasesecurestops（byte []）\r\n","#VIRTUALIZATION_MODE_BINAURAL":"#virtualization_mode_binaural\r\n","Maximum sensitivity that is implemented\n            purely through analog gain.":"实施的最大灵敏度\r\n            纯粹是通过模拟增益。\r\n","Get the maximum supported shared ":"获得最大支持的共享\r\n","PhaseCenterOffset":"phaseCenterOffset\r\n","android.hardware.camera2.params.MeteringRectangle.METERING_WEIGHT_DONT_CARE":"android.hardware.camera2.params.meteringrectangle.metering_weight_dont_care\r\n","android.hardware.lights.Light.getType()":"android.hardware.lights.light.getType（）\r\n","Attempts to auto-fix the image based on histogram equalization.":"尝试根据直方图均衡自动固定图像。\r\n","Set the low-level power management behavior for this MediaPlayer.":"为此媒体设置低级电源管理行为。\r\n","android.media.MediaMetadata.METADATA_KEY_NUM_TRACKS":"android.media.mediametadata.metadata_key_num_tracks\r\n","android.net.Proxy.getDefaultPort()":"android.net.proxy.getDefaultPort（）\r\n","MediaCodec#createPersistentInputSurface":"MediaCodec＃createpersistentInputsurface\r\n","Sets the playback head position within the static buffer.":"设置静态缓冲区中的播放头位置。\r\n","Authenticators":"身份验证者\r\n","android.hardware.camera2.params.MeteringRectangle.getMeteringWeight()":"android.hardware.camera2.params.meteringrectangle.getMeteringWeaight（）\r\n","Sets the Dual Mono mode presentation on the output device.":"在输出设备上设置双单声道模式演示。\r\n","android.media.AudioTrack.write(short[], int, int)":"android.media.audiotrack.write（short []，int，int）\r\n","(x, y, width, height)":"（x，y，宽度，高度）\r\n","Sets the audio source to be used for recording.":"设置用于录制的音频源。\r\n","Query if the given scheme identified by its UUID is supported on\n            this device.":"查询如果支持其UUID确定的给定方案\r\n            这个设备。\r\n","android.media.projection.MediaProjection.registerCallback(android.media.projection.Callback, android.os.Handler)":"android.media.provention.MediaProction.RegisterCallback（android.media.proctive.callback，android.os.handler）\r\n"," defines an interface for automatic volume control\n            of ":" 定义用于自动音量控制的接口\r\n            的\r\n","Returns the namespace used by this address.":"返回此地址使用的名称空间。\r\n","android.media.AudioRecord.getPreferredDevice()":"android.media.audiorecord.getPreferreddevice（）\r\n","android.media.tv.TvTrackInfo.getVideoPixelAspectRatio()":"android.media.tv.tvtrackinfo.getVideOpixElaspectratio（）\r\n","android.media.ToneGenerator.startTone(int, int)":"android.media.tonegenerator.starttone（int，int）\r\n","android.net.TrafficStats.getMobileRxPackets()":"android.net.trafficstats.getmobilerxpackets（）\r\n","The default playback type, \"local\", indicating the presentation of the media is happening\n on the same device (e.g. ":"默认播放类型“ local”，表明正在发生媒体的呈现\r\n 在同一设备上（例如\r\n","android.media.tv.TvInputService.onCreateRecordingSession(java.lang.String)":"android.media.tv.tvinputservice.oncreatecordingsessions（java.lang.string）\r\n","if called in an invalid state.\n":"如果处于无效状态。\r\n\r\n","android.hardware.camera2.params.LensShadingMap":"android.hardware.camera2.params.lensshadingmap\r\n","android.hardware.lights.Light.getName()":"android.hardware.lights.light.getname（）\r\n","Invalid audio mode.":"无效的音频模式。\r\n","Used as a String extra field in setup intents created by ":"用作字符串的额外字段，在由\r\n","android.media.MediaFormat.KEY_PCM_ENCODING":"android.media.mediaformat.key_pcm_encoding\r\n","No vibration or sound muting for this camera device.":"该相机设备没有振动或声音静音。\r\n","The reason for the failure to access the camera.":"无法访问相机的原因。\r\n","android.net.UrlQuerySanitizer.UrlQuerySanitizer()":"android.net.urlquerysanitizer.urlquerysanitizer（）\r\n","Adjusts the volume of the most relevant stream, or the given fallback\n            stream.":"调整最相关的流或给定后备的体积\r\n            溪流。\r\n","An error code indicating that the object reporting it is no longer valid and needs to\n            be recreated.":"错误代码，指示对象报告其不再有效，并且需要\r\n            重新创建。\r\n","If there's not enough room to write the elements at the specified destination and\n          offset.":"如果没有足够的空间在指定的目的地编写元素，并且\r\n          抵消。\r\n","Gets the preset name based on the index.":"根据索引获取预设名称。\r\n","Neptune's gravity in SI units (m/s^2)":"Neptune的重力（m/s^2）\r\n","android.media.MediaParser.PARAMETER_MATROSKA_DISABLE_CUES_SEEKING":"android.media.mediaparser.parameter_matroska_disable_cues_seeking\r\n","android.media.MediaRoute2ProviderService.onBind(android.content.Intent)":"android.media.mediaroute2providerservice.onbind（android.content.intent）\r\n","The orientation for a JPEG image.":"JPEG图像的方向。\r\n","android.media.TimedText.getText()":"android.media.timedtext.getText（）\r\n","android.media.AudioMetadataMap.set(android.media.Key, java.lang.Object)":"android.media.audiometadatamap.set（android.media.key，java.lang.object）\r\n","android.media.MediaMetadata.METADATA_KEY_ARTIST":"android.media.mediametadata.metadata_key_artist\r\n","android.media.MediaDrm.getLogMessages()":"android.media.mediadrm.getLogMessages（）\r\n","android.media.AudioManager.unloadSoundEffects()":"android.media.audiomanager.unloadsoundeffects（）\r\n","Called on the listener to notify it that the effect engine control\n has been taken or returned.":"要求听众通知效果引擎控制\r\n 已被带走或返回。\r\n","android.mtp.MtpObjectInfo.getDateCreated()":"android.mtp.mtpobjectInfo.getDateCreated（）\r\n","An optional key describing the opto-electronic transfer function\n            requested for the output video content.":"描述光电传输函数的可选密钥\r\n            要求输出视频内容。\r\n","android.mtp.MtpDeviceInfo.getEventsSupported()":"android.mtp.mtpdeviceinfo.getEventsSupported（）\r\n","android.hardware.camera2.params.MultiResolutionStreamConfigurationMap":"android.hardware.camera2.params.multiresolutionstreamconfigurationmap\r\n","The callback called to notify the success or failure of the resume call.":"回调通知简历电话的成功或失败。\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap":"android.hardware.camera2.params.RecommendedStreamConfigurationMap\r\n","Create a list of media-codecs of a specific kind.":"创建特定类型的媒体编号列表。\r\n","android.mtp.MtpObjectInfo.getCompressedSizeLong()":"android.mtp.mtpobjectInfo.getCompressedSizelong（）\r\n","AudioManager#STREAM_MUSIC":"听众＃stream_music\r\n","CDMA LOW SS2 tone: {1300Hz 25ms, 1450Hz 25ms} 20 times,\n 1000ms OFF, {1300Hz 25ms, 1450Hz 25ms} 20 times,\n 3000ms OFF, repeat ....":"CDMA低SS2音调：{1300Hz 25ms，1450Hz 25ms} 20次，\r\n 1000ms关闭，{1300Hz 25ms，1450Hz 25ms} 20次，\r\n 3000毫秒左右，重复...\r\n","#TONE_CDMA_SIGNAL_OFF":"#TONE_CDMA_SIGNAL_OFF\r\n","android.location.Location.getBearingAccuracyDegrees()":"android.location.location.getBerationAccuracyDegrees（）\r\n","android.media.audiofx.HapticGenerator.create(int)":"android.media.audiofx.hapticgenerator.create（int）\r\n","Test to see if the given string is a mailto URL":"测试以查看给定的字符串是否为mailto URL\r\n","android.hardware.camera2.CameraCharacteristics.CONTROL_AVAILABLE_MODES":"机器人。硬件。相机2。CameraCharacteristics.控制_AVAILABLE_MODES\r\n","android.media.ExifInterface.TAG_SPECTRAL_SENSITIVITY":"android.media.exifinterface.tag_spectral_sensitivity\r\n","MediaRecorder":"Mediarecorder\r\n","A socket in the Linux abstract namespace ":"Linux抽象名称空间中的插座\r\n","android.media.MediaExtractor.SEEK_TO_NEXT_SYNC":"android.media.mediaextractor.seek_to_next_sync\r\n","android.media.session.PlaybackState.PLAYBACK_POSITION_UNKNOWN":"android.media.session.playbackstate.playback_position_unknown\r\n","android.media.Session2Token.Session2Token(android.content.Context, android.content.ComponentName)":"android.media.session2token.session2token（android.content.context，android.content.componentname）\r\n","CaptureRequest#STATISTICS_HOT_PIXEL_MAP_MODE android.statistics.hotPixelMapMode":"capturerequest＃statistiss_hot_pixel_map_mode android.statistics.hotpixelmapmode\r\n","android.media.MediaRecorder.release()":"android.media.mediarecorder.release（）\r\n","android.media.MediaCodec.getName()":"android.media.mediacodec.getName（）\r\n","android.media.MediaRecorder.setPreferredDevice(android.media.AudioDeviceInfo)":"android.media.mediarecorder.setpreferreddevice（android.media.audiodeviceinfo）\r\n","#VIRTUALIZATION_MODE_TRANSAURAL":"#virtualization_mode_transaural\r\n","android.media.metrics.PlaybackMetrics.getDrmSessionId()":"android.media.metrics.playbackmetrics.getdrmessessiend（）\r\n","android.hardware.camera2.CameraExtensionCharacteristics.EXTENSION_BOKEH":"android.hardware.camera2.CameraExtensionCharacteristics.extension_bokeh\r\n","android.inputmethodservice.InputMethodService.onStartInput(android.view.inputmethod.EditorInfo, boolean)":"android.inputmethodservice.inputmethodservice.onstartinput（android.view.inputmethod.editorinfo，boolean）\r\n","android.hardware.SensorDirectChannel.isOpen()":"android.hardware.sensordirectChannel.isopen（）\r\n","android.hardware.camera2.CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL":"android.hardware.camera2.CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL\r\n"," except that\n            the default for ":" 除了那个\r\n            默认值\r\n","android.media.MediaRecorder.reset()":"android.media.mediarecorder.reset（）\r\n","android.media.MediaSession2Service.onUpdateNotification(android.media.MediaSession2)":"android.media.mediasession2service.onupdatenotification（android.media.mediasession2）\r\n","android.hardware.HardwareBuffer.USAGE_CPU_READ_RARELY":"android.hardware.hardwarebuffer.usage_cpu_read_rarely\r\n","MIME type for CEA-608 closed caption data.":"CEA-608封闭标题数据的MIME类型。\r\n","android.media.AudioAttributes.getAllowedCapturePolicy()":"android.media.audioattributes.getallowedcapturepolicy（）\r\n","The Moon's gravity in SI units (m/s^2)":"月亮的重力（m/s^2）\r\n","#FLAG_KEY_MEDIA_FAST_FORWARD":"#flag_key_media_fast_forward\r\n","The type of folder that contains folders categorized by year as specified in the section\n            6.":"包含按年度按年份分类的文件夹的文件夹类型\r\n            6。\r\n","android.media.MediaDescription.getDescription()":"android.media.mediadescription.getDescription（）\r\n","android.media.AudioTrack.getOffloadPadding()":"android.media.audiotrack.getOffLoadPadding（）\r\n","android.hardware.usb.UsbDevice.getDeviceSubclass()":"android.hardware.usb.usbdevice.getDevicesubClass（）\r\n","MIME type for WebVTT subtitle data.":"Webvtt字幕数据的MIME类型。\r\n","android.media.RemoteControlClient.getMediaSession()":"android.media.remotecontrolclient.getMediasession（）\r\n","Returns the endpoint's direction.":"返回端点的方向。\r\n","Returns the administrative area name of the address, for example, \"CA\", or null if\n            it is unknown -or- Sets the administrative area name of the address to the given String, which may be null":"返回地址的管理区域名称，例如“ CA”或null\r\n            它未知 - 或设置给定字符串的地址的管理区域名称，这可能为null\r\n","Builds a URI that points to a specific recorded program.":"构建指向特定录制程序的URI。\r\n","android.hardware.camera2.params.MultiResolutionStreamConfigurationMap.getOutputFormats()":"android.hardware.camera2.params.multiresolutionstreamconfigurationmap.getOutputformats（）\r\n","Copies the data for an object to a file descriptor.":"将对象的数据复制到文件描述符。\r\n"," images are currently acquired":" 图像当前获取\r\n","An instances of this class represents a session of media playback.":"此类的实例代表了媒体播放的会议。\r\n","Call supervisory tone (IS-95), pip tone: four bursts of 480 Hz tone (0.1 s on, 0.1 s off).":"调用监督色调（IS-95），PIP音调：四个480 Hz音调的突发（0.1 s ON，0.1 s关闭）。\r\n","android.media.AudioManager.getStreamVolumeDb(int, int, int)":"android.media.audiomanager.getStreamVolumedB（int，int，int）\r\n","A key mapping to a value of 1 if the content is AAC audio and\n            audio frames are prefixed with an ADTS header.":"如果内容为AAC音频，则键映射为1的值。\r\n            音频帧在ADTS标头中前缀。\r\n","#TONE_CDMA_ABBR_REORDER":"#TONE_CDMA_ABBR_REORDER\r\n","A matrix that transforms color values from CIE XYZ color space to\n            reference sensor color space.":"将颜色值从CIE xyz颜色空间转换为一个矩阵\r\n            参考传感器颜色空间。\r\n","Get the DNS domains search path set for this link.":"获取此链接的DNS域搜索路径设置。\r\n","android.media.tv.TvInputService.PRIORITY_HINT_USE_CASE_TYPE_BACKGROUND":"android.media.tv.tvinputservice.priority_hint_use_case_type_background\r\n","OnCodecFormatChangedListener":"OnCodecFormatchAngedListener\r\n","#VIRTUALIZATION_MODE_OFF":"#virtualization_mode_off\r\n","MediaPlayer#setDataSource(Context, Uri)":"MediaPlayer＃SetDatasource（上下文，URI）\r\n","android.hardware.camera2.CameraCharacteristics.SYNC_MAX_LATENCY":"android.hardware.camera2.cameracharacteristics.sync_max_latency\r\n","android.media.MediaRecorder.setProfile(android.media.CamcorderProfile)":"android.media.mediarecorder.setprofile（android.media.camcorderprofile）\r\n","android.hardware.camera2.params.ColorSpaceTransform.ColorSpaceTransform(android.util.Rational[])":"android.hardware.camera2.params.colorspacetransform.colorspacetransform（android.util.rational []）\r\n","Returns the URI for the accessory.":"返回附件的URI。\r\n","android.media.AudioRouting.removeOnRoutingChangedListener(android.media.OnRoutingChangedListener)":"android.media.audiorouting.removeonRoutingChangedListener（android.media.onroutingchangedlistener）\r\n","Time at start of exposure of first\n            row of the image sensor active array, in nanoseconds.":"首先接触的时间\r\n            图像传感器活动阵列的行，纳米秒。\r\n","android.location.GnssStatus.getCn0DbHz(int)":"android.location.gnssstatus.getcn0dbhz（int）\r\n","#ADJUST_TOGGLE_MUTE":"#adjust_toggle_mute\r\n","If the media contains XMP data, this key retrieves the offset (in bytes)\n            of the data.":"如果媒体包含XMP数据，则此键检索偏移量（字节）\r\n            数据。\r\n","The worst-case divergence between Bayer green channels.":"拜耳绿色通道之间最坏的案例差异。\r\n","android.media.AudioManager.isBluetoothA2dpOn()":"android.media.audiomanager.isbluetootha2dpon（）\r\n","Obtains objectHandle event parameter.":"获取ObjectHandle事件参数。\r\n","android.media.VolumeShaper.close()":"android.media.volumeshaper.close（）\r\n","A constant describing a gyroscope uncalibrated sensor type. ":"描述陀螺仪未校准传感器类型的常数。 \r\n","Returns the volume in dB (decibel) for the given stream type at the given volume index, on\n            the given type of audio output device.":"返回给定音量索引的给定流类型的DB（分贝）中的音量，ON\r\n            给定类型的音频输出设备。\r\n","android.media.session.MediaController.getExtras()":"android.media.session.mediacontroller.getExtras（）\r\n","Maximum luminance of sunlight in lux":"Lux中阳光的最大亮度\r\n","android.media.AudioTrack.SUCCESS":"android.media.audiotrack.Success\r\n","Used to indicate a transient loss of audio focus where the loser of the audio focus can\n            lower its output volume if it wants to continue playing (also referred to as \"ducking\"), as\n            the new focus owner doesn't require others to be silent.":"用来指示音频焦点的短暂丧失，而音频焦点的失败者可以\r\n            如果要继续播放（也称为“鸭”），则降低其输出量\r\n            新的焦点主不需要其他人保持沉默。\r\n","android.media.audiofx.NoiseSuppressor.create(int)":"android.media.audiofx.noisesuppressor.create（int）\r\n","android.location.LocationManager.EXTRA_LOCATION_ENABLED":"android.location.locationmanager.extra_location_enabled\r\n","Get an intent for launching UI associated with this session if one\n            exists.":"如果一个人\r\n            存在。\r\n","if it is called after\n prepare() or before setOutputFormat().\n\n NOTE: On some devices that have auto-frame rate, this sets the\n maximum frame rate, not a constant frame rate. Actual frame rate\n will vary according to lighting conditions.\n":"如果是在\r\n 准备（）或setOutputformat（）之前。\r\n\r\n 注意：在某些具有自动帧速率的设备上，这将设置\r\n 最大帧速率，而不是恒定的帧速率。实际帧速率\r\n 会根据照明条件有所不同。\r\n\r\n","android.mtp.MtpConstants.OPERATION_TERMINATE_OPEN_CAPTURE":"android.mtp.mtpconstants.operation_terminate_open_capture\r\n","Helper class to create a VPN interface.":"辅助类以创建VPN接口。\r\n","Descramble a ByteBuffer of data described by a\n            ":"描述A描述的数据的字节扣\r\n            \r\n","android.hardware.lights.Light.CREATOR":"android.hardware.lights.light.creator\r\n","if not connected.\n":"如果未连接。\r\n\r\n","Parse and decode a mailto scheme string.":"解析并解码邮件方案字符串。\r\n","Sets whether MP3 parsing should generate a time-to-byte mapping.":"设置MP3解析是否应生成一个字节映射。\r\n","Used to identify the volume of audio streams for accessibility prompts":"用于识别可访问性提示的音频流的量\r\n","AudioTimestamp#TIMEBASE_BOOTTIME AudioTimestamp.TIMEBASE_BOOTTIME":"Audiotimestamp＃timebase_boottime视图imiotimestamp.timebase_boottime\r\n","android.hardware.SensorManager.getOrientation(float[], float[])":"android.hardware.sensormanager.getorientation（float []，float []）\r\n","android.media.audiofx.BassBoost":"android.media.audiofx.bassboost\r\n","android.media.Session2Token.TYPE_SESSION":"android.media.session2token.type_session\r\n","Returns if the given operation is supported by the device or not.":"返回设备是否支持给定的操作。\r\n","Retrieve the currently active InputConnection that is bound to\n            the input method, or null if there is none.":"检索当前活动的输入连接\r\n            输入方法，如果没有输入方法。\r\n","android.media.MediaDescription.BT_FOLDER_TYPE_ARTISTS":"android.media.mediaDescription.bt_folder_type_artists\r\n","Seeks to specified time position.":"寻求指定的时间位置。\r\n","Rotates the image according to the specified angle, and crops the image so that no\n            non-image portions are visible.":"根据指定的角度旋转图像，然后播种图像，以免\r\n            可见非图像部分。\r\n","#TONE_CDMA_SOFT_ERROR_LITE":"#TONE_CDMA_SOFT_ERROR_LITE\r\n","A 16-byte opaque key\n":"16字节不透明的钥匙\r\n\r\n","A microphone that locate on a movable main body of the device.":"位于设备的可移动主体上的麦克风。\r\n","android.media.ExifInterface.TAG_GPS_DEST_LATITUDE":"android.media.exifinterface.tag_gps_dest_latitude\r\n","Height of the key, not including the gap ":"钥匙的高度，不包括差距\r\n","A constant string describing a heart rate monitor.":"描述心率监视器的恒定字符串。\r\n","List of auto-white-balance modes for ":"自动白平衡模式列表 \r\n","True if the provider requires access to a cellular network (e.":"如果提供商需要访问蜂窝网络，则为正确（e。\r\n","#setPreferredDevice":"#SetPreferredDevice\r\n","Requests that the given provider flush any batched locations to listeners.":"请求给定的提供商将任何批处理的位置冲洗给听众。\r\n","android.media.MediaDescrambler":"android.media.mediadescrambler\r\n","Gets the type of the navigation message contained in the object.":"获取对象中包含的导航消息的类型。\r\n","android.media.MediaRecorder":"android.media.mediarecorder\r\n","The maximum possible value for the confidence level.":"置信度水平的最大可能值。\r\n","This method is called when the selection or cursor in the current\n            target input field has changed.":"当电流中的选择或光标时称呼此方法\r\n            目标输入字段已更改。\r\n","Retrieves the carrier-to-noise density at the antenna of the satellite at the specified index\n            in dB-Hz.":"检索指定指数的卫星天线处的载体到噪声密度\r\n            在db-hz中。\r\n","android.location.LocationManager.registerAntennaInfoListener(java.util.concurrent.Executor, android.location.Listener)":"android.location.LocationManager.RegisterantennainFolistener（java.util.concurrent.executor，android.location.listener）\r\n","The callback called to notify the success or failure of the remove call.":"调用回调以通知删除呼叫的成功或失败。\r\n","if the surface has been released (or is invalid),\n or the format is unacceptable (e.g. missing a mandatory key),\n or the flags are not set properly\n (e.g. missing ":"如果表面已释放（或无效），\r\n 或格式是不可接受的（例如，缺少强制性键），\r\n 或旗帜未正确设置\r\n （例如缺少\r\n","android.media.MediaSync.setPlaybackParams(android.media.PlaybackParams)":"android.media.mediasync.setplaybackparams（android.media.playbackparams）\r\n","A tag used to record the offset from UTC (the time difference from Universal Time\n             Coordinated including daylight saving time) of the time of DateTimeOriginal tag.":"用于记录UTC偏移量的标签（通用时间的时间差\r\n             协调的DateTimeOriginal标签时间的日光保存时间）。\r\n","android.media.MediaRouter2.getInstance(android.content.Context)":"android.media.mediarouter2.getInstance（android.content.context）\r\n","android.media.MediaMetadataEditor.RATING_KEY_BY_OTHERS":"android.media.mediametadataeditor.rating_key_by_others\r\n","android.location.LocationManager.clearTestProviderStatus(java.lang.String)":"android.location.locationmanager.cleartestproviderstatus（java.lang.string）\r\n","android.media.MediaCodec.dequeueOutputBuffer(android.media.BufferInfo, long)":"android.media.mediacodec.dequequeueoutputbuffer（android.media.bufferinfo，长）\r\n","android.hardware.SensorEvent.accuracy":"android.hardware.sensorevent.Curacy\r\n","android.mtp.MtpObjectInfo.getSequenceNumber()":"android.mtp.mtpobjectInfo.getSequencenumber（）\r\n","android.inputmethodservice.InputMethodService.onFinishCandidatesView(boolean)":"android.inputmethodservice.inputmethodservice.onfinishcandidatesview（boolean）\r\n","android.location.LocationManager.getCurrentLocation(java.lang.String, android.location.LocationRequest, android.os.CancellationSignal, java.util.concurrent.Executor, java.util.function.Consumer)":"android.location.LocationManager.getCurrentLocation（java.lang.string，android.location.location.locationRequest，android.os.cancellationsignal，java.util.concurrent.executor，java.util.util.function.consumer.consumer）\r\n","android.media.metrics.PlaybackMetrics.DRM_TYPE_WIDEVINE_L1":"android.media.metrics.playbackmetrics.drm_type_widevine_l1\r\n","if not in the Executing or\n                               Configured state.":"如果不在执行或\r\n                               配置状态。\r\n","This key retrieves the original capture framerate, if it's\n            available.":"此键检索原始捕获帧量，如果是\r\n            可用的。\r\n","android.hardware.HardwareBuffer.USAGE_CPU_WRITE_OFTEN":"android.hardware.hardwarebuffer.usage_cpu_write_often\r\n","android.inputmethodservice.AbstractInputMethodService.onTrackballEvent(android.view.MotionEvent)":"android.inputmethodservice.abstractinputmethodservice.ontrackballevent（android.view.motionevent）\r\n","android.media.MediaDrm.HDCP_V2_1":"android.media.mediadrm.hdcp_v2_1\r\n","Reports track change event.":"报告跟踪变更事件。\r\n","android.media.browse.MediaBrowser.EXTRA_PAGE":"android.media.browse.mediabrowser.extra_page\r\n","The Settings class regroups all virtualizer parameters.":"设置类重组所有虚拟机参数。\r\n","Operation code for GetStorageIDs":"GetStorageids的操作代码\r\n","android.media.session.MediaSessionManager.notifySession2Created(android.media.Session2Token)":"android.media.session.mediasessionmanager.notifysession2创建（android.media.session2token）\r\n","Returns the parent input ID.":"返回父输入ID。\r\n","Finish the decode/encode session, note that the codec instance\n            remains active and ready to be ":"完成解码/编码会话，请注意编解码器实例\r\n            保持活跃并准备好\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_TITLE":"android.media.mediametadataretriever.metadata_key_title\r\n","Get the camera ID of the camera that produced this capture result.":"获取产生此捕获结果的相机ID。\r\n","android.net.LocalServerSocket.getLocalSocketAddress()":"android.net.localserversocket.getLocalSocketDress（）\r\n","android.media.MediaParser.PARSER_NAME_FLV":"android.media.mediaparser.parser_name_flv\r\n","android.mtp.MtpConstants.isAbstractObject(int)":"android.mtp.mtpconstants.isabstractobject（int）\r\n","android.media.metrics.PlaybackMetrics.STREAM_TYPE_OTHER":"android.media.metrics.playbackmetrics.stream_type_other\r\n","Register for a single location update using a named provider and pending intent.":"使用命名提供商和待处理意图注册单个位置更新。\r\n","Returns the Dual Mono mode presentation setting.":"返回双单声道模式演示文稿设置。\r\n","Called to request data from the given position.":"叫从给定位置请求数据。\r\n","Indicates this network uses a Wi-Fi transport.":"指示该网络使用Wi-Fi传输。\r\n","The total assembled results of a single image capture from the image sensor.":"从图像传感器捕获单个图像的总组装结果。\r\n","AudioManager#STREAM_SYSTEM":"听众＃stream_system\r\n","android.media.RingtoneManager.getValidRingtoneUri(android.content.Context)":"android.media.ringtonemanager.getValidringtoneuri（android.content.context）\r\n","Builder#setDescription(CharSequence)":"构建器＃setDescription（charsequence）\r\n","Registers a callback to receive notifications when MIDI devices are added and removed.":"当添加和删除MIDI设备时，请登录回调以接收通知。\r\n","Add a surface to this OutputConfiguration.":"将表面添加到此outputconfiguration中。\r\n","Gets the subtitle for the prompt, as set by ":"根据提示获取字幕\r\n","Query whether a given Surface is able to support offline mode.":"查询给定表面是否能够支持离线模式。\r\n","android.location.Location.convert(double, int)":"android.location.location.convert（double，int）\r\n","if a parameter is not accepted\n         by the operating system.":"如果不接受参数\r\n         由操作系统。\r\n","Set a callback to be notified of volume update requests":"设置一个回调，以通知卷更新请求\r\n","Retrieve the type of the capture session.":"检索捕获会话的类型。\r\n","Value used for when the sensitivity of the microphone is unknown.":"当麦克风的灵敏度未知时使用的值。\r\n","Gets bitrate.":"得到比特率。\r\n","android.hardware.usb.UsbRequest.cancel()":"android.hardware.usb.usbrequest.cancel（）\r\n","android.media.midi.MidiDeviceService.onClose()":"android.media.midi.midideviceservice.onclose（）\r\n","Returns the names of the cipher suites that are enabled by default.":"返回默认情况下启用的密码套件的名称。\r\n","android.hardware.camera2.params.BlackLevelPattern.copyTo(int[], int)":"android.hardware.camera2.params.blacklevelpattern.copyto（int []，int）\r\n"," set to\n            ":" 调成\r\n            \r\n",", but its actual\n            semantics has never been well defined.":"，但它的实际\r\n            语义从未得到很好的定义。\r\n","Return number of bytes received across mobile networks since device boot.":"自设备引导以来，跨移动网络接收到的字节数。\r\n","Request authentication of a crypto object.":"请求加密对象的身份验证。\r\n","This class encapsulates information about an object on an MTP device.":"此类将有关对象的信息封装在MTP设备上。\r\n","android.hardware.camera2.CaptureResult.CONTROL_AE_LOCK":"android.hardware.camera2.captureresult.control_ae_lock\r\n"," is called on\n            a routing session of the provider":" 被称为\r\n            提供商的路由会话\r\n","Error code for lack of permission to perform an IO operation, for example, lack of permission\n            to access internet or external storage.":"错误代码缺乏执行IO操作的许可，例如，缺乏许可\r\n            访问互联网或外部存储。\r\n","android.mtp.MtpConstants#ASSOCIATION_TYPE_GENERIC_FOLDER":"android.mtp.mtpconstants＃Associon_Type_generic_folder\r\n","Decrypt data using the CryptoSessions's cipher algorithm":"使用密码量的密码算法解密数据\r\n","List of frame rate ranges for ":"帧速率范围列表\r\n","Called by the framework when a new InputMethodSession interface is\n            needed for a new client of the input method.":"当新的输入methodsession接口为时，该框架调用\r\n            输入方法的新客户端需要。\r\n","Set an event listener to receive notifications from the MediaCas instance.":"设置事件侦听器以从MediaCas实例接收通知。\r\n","Called on the listener to notify it that the effect engine has been\n enabled or disabled.":"呼吁听众通知效果引擎已经是\r\n 启用或禁用。\r\n","android.mtp.MtpDevice.getObjectInfo(int)":"android.mtp.mtpdevice.getObjectInfo（int）\r\n","A key describing the width (in pixels) of each tile of the content in a\n            ":"一个键描述内容中每个图块的宽度（以像素为单位）\r\n            \r\n","F:Android.Media.Browse.MediaBrowser+MediaItem..ctor":"f：android.media.browse.mediabrowser+mediaItem..ctor\r\n"," for the given\n            sensor at the given sampling frequency and the given maximum reporting latency.":" 对于给定\r\n            给定采样频率的传感器和给定的最大报告延迟。\r\n","android.hardware.camera2.CameraMetadata.CONTROL_AF_SCENE_CHANGE_DETECTED":"android.hardware.camera2.camerametadata.control_af_scene_change_detected\r\n","android.media.browse.MediaBrowser.isConnected()":"android.media.browse.mediabrowser.isconnected（）\r\n","android.media.ImageReader.acquireLatestImage()":"android.media.imagereader.acquirelatestimage（）\r\n","Called to report changes in the GPS status.":"打电话报告GPS状态的更改。\r\n","If overriding this method, call through to the super method for any unknown actions.":"如果覆盖此方法，请致电到任何未知动作的超级方法。\r\n","Include OIS data in the capture result.":"将OIS数据包括在捕获结果中。\r\n","android.hardware.location.GeofenceHardware.GEOFENCE_SUCCESS":"android.hardware.location.geofencehardware.geofence_success\r\n","Gets the current strength of the effect.":"获得当前效果的强度。\r\n","android.hardware.camera2.CaptureResult.SENSOR_DYNAMIC_BLACK_LEVEL":"android.hardware.camera2.captureresult.sensor_dynamic_black_level\r\n","Create a session cache at the default location for this app.":"在此应用程序的默认位置创建会话缓存。\r\n","android.net.TrafficStats.untagSocket(java.net.Socket)":"android.net.trafficstats.untagsocket（java.net.socket）\r\n","android.hardware.camera2.CameraCharacteristics.LENS_POSE_REFERENCE":"android.hardware.camera2.cameracharacteristics.lens_pose_reference\r\n","android.media.MediaRoute2ProviderService.onDiscoveryPreferenceChanged(android.media.RouteDiscoveryPreference)":"android.media.mediaroute2providerservice.ondiscoverypreferencechanged（android.media.routediscoverypreference）\r\n","Band level. ":"乐队级别。\r\n","#addCallback":"#addcallback\r\n","except that it doesn't\n use the geomagnetic field. ":"除了它没有\r\n 用地磁场。 \r\n","MediaCodec":"MediaCodec\r\n","android.media.VolumeShaper.apply(android.media.Operation)":"android.media.volumeshaper.apply（android.media.operation）\r\n","Playback is actively playing":"播放正在积极播放\r\n","android.media.ImageReader":"android.media.imagereader\r\n","android.hardware.camera2.params.OutputConfiguration.addSurface(android.view.Surface)":"android.hardware.camera2.params.outputconfiguration.addsurface（android.view.surface）\r\n","Standard name of the GNSS location provider.":"GNSS位置提供商的标准名称。\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_VIDEO_HEIGHT":"android.media.mediametadataretriever.metadata_key_video_height\r\n","android.media.MediaDrm.EVENT_KEY_REQUIRED":"android.media.mediadrm.event_key_required\r\n","android.location.GnssMeasurement.STATE_GAL_E1C_2ND_CODE_LOCK":"android.location.gnssmeasurement.state_gal_e1c_2nd_code_lock\r\n","Set any flags for the session.":"设置会话的任何标志。\r\n","if the camera device has been closed":"如果相机设备已关闭\r\n","Quality level corresponding to the VGA (640 x 480) resolution.":"质量水平对应于VGA（640 x 480）分辨率。\r\n","Builder#excludeUid(int)":"构建器＃排除uid（int）\r\n","CDMA LOW SSL tone: {1300Hz 25ms, 1450Hz 25ms} 8 times,\n 200ms OFF, {1300Hz 25ms, 1450Hz 25ms} repeat 8 times,\n 200ms OFF, {1300Hz 25ms, 1450Hz 25ms} repeat 16 times,\n 4000ms OFF, repeat ...":"CDMA低SSL音调：{1300Hz 25ms，1450Hz 25ms} 8次，\r\n 200ms关闭，{1300Hz 25ms，1450Hz 25ms}重复8次，\r\n 200ms关闭，{1300Hz 25ms，1450Hz 25ms}重复16次，\r\n 4000毫米，重复...\r\n","android.media.MediaMetadata.METADATA_KEY_ART_URI":"android.media.mediametadata.metadata_key_art_uri\r\n","Mode of operation for the noise reduction algorithm.":"降噪算法的操作模式。\r\n","android.location.GnssClock.hasReferenceConstellationTypeForIsb()":"android.location.gnssclock.hasreferenceconstellationtypeforisb（）\r\n","Set onImageAvailableListener callback.":"设置OnimageAvailAbleSristener回调。\r\n","Two-dimensional (e.":"二维（e。\r\n","android.media.metrics.TrackChangeEvent.TRACK_CHANGE_REASON_INITIAL":"android.media.metrics.trackchangeevent.track_change_reason_initial\r\n","android.media.MediaCodec.createInputSurface()":"android.media.mediacodec.createinputsurface（）\r\n","android.hardware.Sensor.STRING_TYPE_MOTION_DETECT":"android.hardware.sensor.string_type_motion_detect\r\n","android.net.TrafficStats.getUidUdpRxBytes(int)":"android.net.trafficstats.getuidudprxbytes（int）\r\n","A key to retrieve the output loudness of a decoded bitstream.":"检索解码的botstream的输出响度的钥匙。\r\n","if the caller is not permitted to access the\n given provider.\n":"如果不允许呼叫者访问\r\n 给定的提供商。\r\n\r\n","android.media.MediaDescription.getSubtitle()":"android.media.mediadescription.getSubtitle（）\r\n","Sets the given equalizer band to the given gain value.":"将给定的均衡器带设置为给定增益值。\r\n","Return whether the ":"返回是否\r\n","Gets the supported scene modes.":"获取支持的场景模式。\r\n","TriggerEventListener#onTrigger(TriggerEvent)":"triggereventlistener＃ontrigger（triggerevent）\r\n","android.media.MediaRecorder.setNextOutputFile(java.io.File)":"android.media.mediarecorder.setnextoutputfile（java.io.file）\r\n","Closes all resources related to the MtpDevice object.":"关闭与MTPDEVICE对象相关的所有资源。\r\n","android.hardware.TriggerEvent.values":"机器人。硬件。性子。价值\r\n","Associate a MediaCas session with this MediaDescrambler instance.":"将MediaCas会话与此MediaDescrambler实例相关联。\r\n","android.hardware.camera2.CameraCaptureSession.capture(android.hardware.camera2.CaptureRequest, android.hardware.camera2.CaptureCallback, android.os.Handler)":"android.hardware.camera2.cameracapturesession.capture（android.hardware.camera2.capturerequest，android.hardware.camera.camera2.capturecallback，android.os.handler）\r\n","Removes an NMEA listener.":"删除NMEA听众。\r\n","android.media.midi.MidiDeviceInfo.isPrivate()":"android.media.midi.midideviceinfo.isprivate（）\r\n","UsbDevice":"USBDEVICE\r\n","Get the altitude if available, in meters above the WGS 84 reference\n            ellipsoid. -or- Set the altitude, in meters above the WGS 84 reference ellipsoid.":"如果可用，则获得高度，以高于WGS 84参考的米\r\n            椭圆形。 - 或 - 设置高度，高于WGS 84参考椭圆形。\r\n","android.mtp.MtpObjectInfo.getThumbPixHeightLong()":"android.mtp.mtpobjectInfo.getThumbPixheightlong（）\r\n","MIME type for SubRip (SRT) container.":"子档（SRT）容器的MIME类型。\r\n","android.inputmethodservice.InputMethodService.enableHardwareAcceleration()":"android.inputmethodservice.inputmethodservice.enablehardwareacceleration（）\r\n","Removes a GNSS status callback.":"删除GNSS状态回调。\r\n","android.media.MicrophoneDirection.setPreferredMicrophoneDirection(int)":"android.media.microphonedirection.setpreferredmicrophoneDirection（int）\r\n","Create a list of ":"创建一个清单\r\n","Indicates this session supports the previous command.":"指示此会话支持上一个命令。\r\n","android.hardware.GeomagneticField.getDeclination()":"android.hardware.geomagneticfield.getDeclination（）\r\n","Gets network type.":"获取网络类型。\r\n","abs(actual_rate - set_rate) / set_rate":"abs（muthate_rate -set_rate） / set_rate\r\n","Count the number of tracks found in the data source.":"计算数据源中发现的轨道数量。\r\n","#setTestProviderEnabled(String, boolean)":"#SetTestProviderEnabled（字符串，布尔值）\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_BLACK_LEVEL_PATTERN":"android.hardware.camera2.cameracharacteristics.sensor_black_level_pattern\r\n","Operation code for MoveObject":"MoveObject的操作代码\r\n","#RATING_4_STARS":"＃rating_4_stars\r\n","Returns the width of the MTP object in pixels\n            Will be zero for non-image objects":"返回像素中MTP对象的宽度\r\n            非图像对象将为零\r\n","android.location.Address.getCountryCode()":"android.location.address.getCountryCode（）\r\n","#TONE_CDMA_HIGH_PBX_SS":"#TONE_CDMA_HIGH_PBX_SS\r\n","android.hardware.camera2.CaptureResult.CONTROL_VIDEO_STABILIZATION_MODE":"android.hardware.camera2.captureresult.control_video_stabilization_mode\r\n","android.location.LocationManager.removeTestProvider(java.lang.String)":"android.location.locationmanager.removetestprovider（java.lang.string）\r\n","Returns the thumbnail data for an object as a byte array.":"将对象作为字节数组的缩略图数据返回。\r\n","The callback class associated with the APIs in ":"与API关联的回调类\r\n","android.location.Location.set(android.location.Location)":"android.location.location.set（android.location.location）\r\n","android.media.audiofx.AudioEffect.EFFECT_TYPE_HAPTIC_GENERATOR":"android.media.audiofx.audioeffect.effect_type_haptic_generator\r\n","Used as a long extra field to indicate the bluetooth folder type of the media item as\n            specified in the section 6.":"用作一个长期的额外字段，将媒体项目的蓝牙文件夹类型表示为\r\n            在第6节中指定。\r\n","Event code for UNDEFINED event":"未定义事件的事件代码\r\n","android.media.MediaExtractor.getSampleTime()":"android.media.mediaextractor.getSampletime（）\r\n","Returns the maximum size of a message this receiver can receive.":"返回该接收器可以接收的消息的最大大小。\r\n","android.media.tv.TvInputManager.VIDEO_UNAVAILABLE_REASON_CAS_NEED_ACTIVATION":"android.media.tv.tvinputmanager.video_unavailable_reason_cas_need_activation\r\n","android.location.LocationManager.registerGnssMeasurementsCallback(android.location.Callback)":"android.location.locationmanager.registergnssmeasurementCallback（android.location.callback）\r\n","Sets the event source audio session ID.":"设置事件源音频会话ID。\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_COMPILATION":"android.media.mediametadataretriever.metadata_key_compilation\r\n","#createPersistentInputSurface":"#createpersistentinputsurface\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_YEAR":"android.media.mediametadataretriever.metadata_key_year\r\n","android.mtp.MtpConstants.OPERATION_INITIATE_OPEN_CAPTURE":"android.mtp.mtpconstants.operation_initiate_open_capture\r\n","Sets the current playback state.":"设置当前的播放状态。\r\n","android.media.MediaFormat.KEY_MPEGH_PROFILE_LEVEL_INDICATION":"android.media.mediaformat.key_mpegh_profile_level_indication\r\n","android.media.session.MediaSession.FLAG_HANDLES_MEDIA_BUTTONS":"android.media.session.mediasession.flag_handles_media_buttons\r\n","Quality level corresponding to the 480p (720 x 480) resolution.\n Note that the horizontal resolution for 480p can also be other\n values, such as 640 or 704, instead of 720.":"质量水平对应于480p（720 x 480）分辨率。\r\n 请注意，480p的水平分辨率也可以是其他\r\n 值，例如640或704，而不是720。\r\n",": Actively scan for routes while this callback\n            is registered.":"：在此回调时积极扫描路线\r\n            已经注册。\r\n","android.media.AudioTrack.write(byte[], int, int)":"android.media.audiotrack.write（byte []，int，int）\r\n","android.media.MediaFormat.KEY_CODECS_STRING":"android.media.mediaformat.key_codecs_string\r\n","android.media.MediaFormat.KEY_CREATE_INPUT_SURFACE_SUSPENDED":"android.media.mediaformat.key_create_input_surface_suspended\r\n","Remove a sensor pixel mode, previously added through addSensorPixelModeUsed, from this\n            OutputConfiguration.":"从此\r\n            输出configuration。\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_LOCATION":"android.media.mediametadataretriever.metadata_key_location\r\n","Interface definition of a callback to be invoked to communicate some\n info and/or warning about the media or its playback.":"接口的定义要调用以传达一些回调\r\n 有关媒体或其播放的信息和/或警告。\r\n","if the Bitmap dimensions don't match\n               the dimensions defined at initialization or the given array \n               is not sized equal to the ":"如果位图尺寸不匹配\r\n               初始化或给定数组定义的尺寸\r\n               大小不等于\r\n","Gets the user-visible description of the route.":"获取对路线的用户可见描述。\r\n","Maximum supported length (in bytes) for PSK.":"PSK的最大支持长度（以字节为单位）。\r\n","android.net.Ikev2VpnProfile.getServerAddr()":"android.net.ikev2vpnprofile.getServerAddr（）\r\n","android.location.GnssMeasurement.STATE_CODE_LOCK":"android.location.gnssmeasurement.state_code_lock\r\n","A Uri formatted String representing the content.":"表示内容的URI格式字符串。\r\n","android.media.MicrophoneInfo.GROUP_UNKNOWN":"android.media.microphoneinfo.group_unknown\r\n","Capability for lights that could adjust its LED brightness.":"可以调整其LED亮度的灯的功能。\r\n","android.media.MediaDrm.isCryptoSchemeSupported(java.util.UUID, java.lang.String, int)":"android.media.mediadrm.siscryptoschemesupported（java.util.uuid，java.lang.string，int）\r\n","Unknown stream source.":"未知流源。\r\n","android.location.GnssClock.getReferenceCarrierFrequencyHzForIsb()":"android.location.gnssclock.getReferenceCarrierFrequencyHzForisb（）\r\n","android.hardware.usb.UsbRequest.queue(java.nio.ByteBuffer)":"android.hardware.usb.usbrequest.queue（java.nio.bytebuffer）\r\n","The minimum possible value for the confidence level.":"置信度水平的最小值。\r\n","android.hardware.display.VirtualDisplay.release()":"android.hardware.display.virtualdisplay.release（）\r\n","A class representing USB request packet.":"代表USB请求数据包的类。\r\n","request":"要求\r\n","Parser for the AC-3 container format, as defined in Digital Audio Compression Standard\n            (AC-3).":"数字音频压缩标准中定义的AC-3容器格式的解析器\r\n            （AC-3）。\r\n","Class representing a sensor direct channel.":"代表传感器直接通道的类。\r\n","android.media.audiofx.DynamicsProcessing.VARIANT_FAVOR_FREQUENCY_RESOLUTION":"android.media.audiofx.dynamicsprocessing.variant_favor_frequency_resolution\r\n","Dimensions of the full pixel array, possibly\n            including black calibration pixels, when the sensor runs in maximum resolution mode.":"完整像素阵列的尺寸，可能\r\n            当传感器以最大分辨率模式运行时，包括黑色校准像素。\r\n","android.media.ThumbnailUtils.extractThumbnail(android.graphics.Bitmap, int, int, int)":"android.media.thumbnailutils.extractthumbnail（android.graphics.bitmap，int，int，int）\r\n","android.media.AudioDeviceInfo.TYPE_BUILTIN_SPEAKER_SAFE":"android.media.audiodeviceinfo.type_builtin_speaker_safe\r\n","LocationRequest":"LICESEREQUEST\r\n","The number of full carrier cycles between the satellite and the receiver.":"卫星和接收器之间的完整载体周期数。\r\n","android.hardware.camera2.CameraCharacteristics.LENS_INFO_AVAILABLE_FOCAL_LENGTHS":"android.hardware.camera2.cameracharacteristics.lens_info_available_focal_lengths\r\n","F:Android.Media.RemoteController.SetSynchronizationMode":"F：android.media.remotecontroller.setsynchronizationmode\r\n","android.media.audiofx.PresetReverb.setParameterListener(android.media.audiofx.OnParameterChangeListener)":"android.media.audiofx.presetreverb.setparameterlistener（android.media.audiofx.onparameterchangelistener）\r\n","width of the picture ":"图片的宽度\r\n","android.media.MediaRoute2ProviderService.notifySessionUpdated(android.media.RoutingSessionInfo)":"android.media.mediaroute2providerservice.notifysessessionuped（android.media.routingsessioninfo）\r\n","Applies back-light filling to the image.":"将背光填充物应用于图像。\r\n","Returns the duration in microsecond during which the subtitle should be displayed.":"返回微秒中的持续时间，在此期间应显示字幕。\r\n","android.location.Location.hasAccuracy()":"android.location.location.hasaccuracy（）\r\n","Query if a video codec format is supported by the application.":"查询如果应用程序支持视频编解码器格式。\r\n","android.media.RingtoneManager.EXTRA_RINGTONE_SHOW_SILENT":"android.media.ringtonemanager.extra_ringtone_show_silent\r\n","android.hardware.SensorManager.getDefaultSensor(int, boolean)":"android.hardware.sensormanager.getDefaultSensor（int，boolean）\r\n","Remove all app-specified routes from the MediaRouter.":"从Mediarouter删除所有应用程序指定的路线。\r\n","android.media.MediaFormat.KEY_VIDEO_QP_P_MIN":"android.media.mediaformat.key_video_qp_p_min\r\n","android.media.RouteDiscoveryPreference":"android.media.RoutediscoveryPreference\r\n","Returns a copy of the first IP address in the prefix.":"返回前缀中第一个IP地址的副本。\r\n","android.media.MediaActionSound.STOP_VIDEO_RECORDING":"android.media.mediaactionsound.stop_video_recording\r\n","Mute vibration from ringtones, alarms or notifications while this camera device is in use.":"使用此相机设备时，铃声，警报或通知的静音振动。\r\n","android.mtp.MtpObjectInfo.getStorageId()":"android.mtp.mtpobjectInfo.getStorageid（）\r\n","Gets the list of all connected MIDI devices.":"获取所有连接的MIDI设备的列表。\r\n","Returns the amount of free space in the storage unit in bytes":"返回字节中存储单元中的自由空间数量\r\n","Unregisters the specified callback.":"解开指定的回调。\r\n","KeyEvent#KEYCODE_MUTE":"keyevent＃keycode_mute\r\n",", in counts of ":"，计数\r\n","android.mtp.MtpEvent.EVENT_CANCEL_TRANSACTION":"android.mtp.mtpevent.event_cancel_transaction\r\n","android.media.MediaCodecInfo":"android.media.mediacodecinfo\r\n","android.media.audiofx.BassBoost.setParameterListener(android.media.audiofx.OnParameterChangeListener)":"android.media.audiofx.bassboost.setParameterListener（android.media.audiofx.onparameterchangelistener）\r\n","android.mtp.MtpConstants.OPERATION_GET_DEVICE_INFO":"android.mtp.mtpconstants.operation_get_device_info\r\n","Returns connection status information about a particular\n network type.":"返回有关特定的连接状态信息\r\n 网络类型。\r\n","android.media.MediaScannerConnection.scanFile(android.content.Context, java.lang.String[], java.lang.String[], android.media.OnScanCompletedListener)":"android.media.mediascannerconnection.scanfile（android.content.context，java.lang.string []，java.lang.string []，android.media.onscanclasteDlestEdListener）\r\n","No sync event specified.":"未指定同步事件。\r\n","android.media.ExifInterface.TAG_XMP":"android.media.exifinterface.tag_xmp\r\n","android.media.MediaExtractor.getSampleTrackIndex()":"android.media.mediaextractor.getSampletrackIndex（）\r\n","android.media.MicrophoneInfo.getDescription()":"android.media.microphoneinfo.getDescription（）\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_BINNING_FACTOR":"android.hardware.camera2.cameracharacteristics.sensor_info_binning_factor\r\n","Register a listener to be invoked when a new image becomes available\n            from the ImageReader.":"注册一个新图像时要调用的侦听器\r\n            来自影像学者。\r\n","android.media.MicrophoneInfo.getFrequencyResponse()":"android.media.microphoneinfo.getFrequencyResponse（）\r\n",") or \"remote\"\n    (":"）或“远程”\r\n    （（\r\n","android.media.session.PlaybackState":"android.media.session.playbackstate\r\n","Activity intent sent when user attaches a USB device.":"当用户附加USB设备时，发送活动意图。\r\n","android.media.AudioRecord.release()":"android.media.audiorecord.Release（）\r\n","Maximum magnetic field on Earth's surface":"地球表面的最大磁场\r\n","Preset. ":"预设。\r\n","Remove the altitude from this location.":"从该位置卸下高度。\r\n","The user's rating for the media.":"用户对媒体的评分。\r\n","android.media.session.PlaybackState.getActiveQueueItemId()":"android.media.session.playbackstate.getActivequeueItemid（）\r\n","A class that coordinates access to the fingerprint hardware.":"一个可以协调指纹硬件访问的类。\r\n","android.media.midi.MidiManager.openBluetoothDevice(android.bluetooth.BluetoothDevice, android.media.midi.OnDeviceOpenedListener, android.os.Handler)":"android.media.midi.midimanager.openbluetoothdevice（android.bluetooth.bluetoothdevice，android.medi.midi.midi.ondeviceopenedlistener，android.os.os.handler）\r\n","android.media.ExifInterface.ExifInterface(java.io.FileDescriptor)":"android.media.exifinterface.exifinterface（java.io.filedescriptor）\r\n","android.hardware.camera2.params.MandatoryStreamCombination.isReprocessable()":"android.hardware.camera2.params.mandatorystreamcombination.isreprocessable（）\r\n","android.mtp.MtpConstants.OPERATION_FORMAT_STORE":"android.mtp.mtpconstants.operation_format_store\r\n","android.location.GnssMeasurement.hasCarrierCycles()":"android.location.gnssmeasurement.hascarriercycles（）\r\n","#PLAYSTATE_PLAYING":"#playstate_playing\r\n","USB class for content security devices.":"内容安全设备的USB类。\r\n","F:Android.Media.AudioManager.SetVibrateSetting":"F：android.media.audiomanager.setVibrateSetting\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.getHighSpeedVideoFpsRangesFor(android.util.Size)":"android.hardware.camera2.params.recommendedstreamconfigurationmap.gethighspeedVideFpsRangesfor（android.util.size）\r\n","Return the zoom ratio range of this capability.":"返回此功能的缩放比率范围。\r\n","Rating":"评分\r\n","android.hardware.camera2.CameraDevice.AUDIO_RESTRICTION_VIBRATION_SOUND":"android.hardware.camera2.cameradevice.audio_resteriction_vibration_sound\r\n","android.media.midi.MidiDevice.connectPorts(android.media.midi.MidiInputPort, int)":"android.media.midi.mididevice.connectports（android.media.midi.midi.midiinputport，int）\r\n","android.hardware.camera2.params.Face.ID_UNSUPPORTED":"android.hardware.camera2.params.face.id_unsupported\r\n","android.media.MediaPlayer.setOnPreparedListener(android.media.OnPreparedListener)":"android.media.mediaplayer.setonpreparedlistener（android.media.onpreparedListener）\r\n","android.hardware.camera2.CaptureRequest.JPEG_QUALITY":"android.hardware.camera2.capturerequest.jpeg_quality\r\n","Opens a MIDI device for reading and writing.":"打开用于阅读和写作的MIDI设备。\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_VIDEO_ROTATION":"android.media.mediametadataretriever.metadata_key_video_rotation\r\n","No-op method to keep backward-compatibility.":"无操作方法可以保持向后兼容。\r\n","android.media.MicrophoneInfo.INDEX_IN_THE_GROUP_UNKNOWN":"android.media.microphoneinfo.index_in_the_group_unknown\r\n","#getStreamMaxVolume(int)":"#getStreamMaxVolume（int）\r\n","MediaCas can be used to obtain keys for descrambling protected media streams, in\n            conjunction with ":"MediaCas可用于获取用于描述受保护媒体流的密钥，\r\n            与\r\n","Get the supported input sizes for this input format.":"获取此输入格式的支持的输入尺寸。\r\n","This indicates that the (encoded) buffer marked as such contains\n            the data for a key frame.":"这表明（编码的）缓冲区标记为此类缓冲区\r\n            关键帧的数据。\r\n","Gets the list of IDs of deselectable routes for the session.":"获取会话可选路由的ID列表。\r\n","android.hardware.camera2.params.StreamConfigurationMap.getHighSpeedVideoFpsRanges()":"android.hardware.camera2.params.streamconfigurationmap.gethighspeedvideofpsranges（）\r\n","android.hardware.camera2.CameraMetadata.CONTROL_AF_SCENE_CHANGE_NOT_DETECTED":"android.hardware.camera2.camerametadata.control_af_scene_change_not_detected\r\n","Gets the list of the connected controllers":"获取连接控制器的列表\r\n","Position in frames relative to start of an assumed audio stream.":"相对于假定音频流的启动，位于帧中。\r\n","Error code for attempting to play incompatible DRM-protected content":"试图播放不兼容DRM保护内容的错误代码\r\n","android.hardware.usb.UsbInterface.getInterfaceProtocol()":"android.hardware.usb.usbinterface.getInterfaceProtocol（）\r\n","android.location.LocationProvider.requiresCell()":"android.location.locationprovider.requirescell（）\r\n"," keys that can\n            be overridden for physical devices backing a logical multi-camera.":" 可以\r\n            要覆盖备份逻辑多摄像机的物理设备。\r\n","Returns the number of layers in this buffer.":"返回此缓冲区中的层数。\r\n","android.media.AudioManager.isSpeakerphoneOn()":"android.media.audiomanager.isspeakerphoneon（）\r\n","F:Android.Media.AudioManager.GetRouting":"F：android.media.audiomanager.getRouting\r\n","android.media.MediaDrm.HDCP_V2_2":"android.media.mediadrm.hdcp_v2_2\r\n","android.media.MicrophoneInfo.CHANNEL_MAPPING_PROCESSED":"android.media.microphoneinfo.channel_mapping_processed\r\n","android.location.Criteria.setAltitudeRequired(boolean)":"android.location.Criteria.SetalTitudeRequired（boolean）\r\n","android.location.Location.setProvider(java.lang.String)":"android.location.location.setProvider（java.lang.string）\r\n","Tear down the VPN provided by the calling app (if any)":"拆除调用应用程序提供的VPN（如果有）\r\n","Y coordinate of the key in the keyboard layout ":"y键盘布局中键的坐标\r\n","android.media.MediaPlayer.seekTo(int)":"android.media.mediaplayer.seekto（int）\r\n","Pluto's gravity in SI units (m/s^2)":"冥王星的重力（m/s^2）\r\n","android.media.MediaDrm.HDCP_V2_3":"android.media.mediadrm.hdcp_v2_3\r\n","android.media.MediaDrm.getSecurityLevel(byte[])":"android.media.mediadrm.getSecurityLevel（byte []）\r\n","android.media.ExifInterface.TAG_COMPRESSION":"android.media.exifinterface.tag_compression\r\n","android.hardware.display.DisplayManager.getDisplays()":"android.hardware.display.displaymanager.getDisplays（）（）\r\n"," for a given sound URI.":" 对于给定的声音URI。\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_OTHER":"android.media.metrics.playbackerrorevent.error_other\r\n","Unknown content type.":"未知内容类型。\r\n","Sets the listener the AudioTrack notifies when a previously set marker is reached or\n for each periodic playback head position update.":"设置侦听器录音机在达到先前设置的标记或\r\n 对于每个定期播放头部位置更新。\r\n","Returns the locality of the address, for example \"Mountain View\", or null if it is unknown. -or- Sets the locality of the address to the given String, which may be null.":"返回地址的局部性，例如“山景视图”，如果未知，则返回了零。 - 或 - 将地址的局部性设置为给定的字符串，这可能为null。\r\n","android.hardware.camera2.CameraCharacteristics.REQUEST_MAX_NUM_INPUT_STREAMS":"android.hardware.camera2.cameracharacteristics.request_max_num_input_streams\r\n","Additional info payload data represented in int values.":"其他信息有效负载数据以int值表示。\r\n","#BIOMETRIC_SUCCESS":"#biometric_success\r\n","Set some extras that can be associated with the ":"设置一些可以与\r\n","AudioManager#AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK":"AudioManager＃audiofocus_gain_transient_may_duck\r\n","android.media.AudioPresentation.CONTENT_MUSIC_AND_EFFECTS":"android.media.audiopersentation.content_music_and_effects\r\n","android.media.MediaParser.PARAMETER_MP3_ENABLE_CBR_SEEKING":"android.media.mediaparser.parameter_mp3_enable_cbr_seeking\r\n","Back sound":"后语\r\n","android.media.RemoteControlClient.PLAYSTATE_PAUSED":"android.media.remotecontrolclient.playstate_pause\r\n","android.media.CamcorderProfile.videoFrameWidth":"android.media.camcorderprofile.videoframewidth\r\n","MediaItem":"MediaItem\r\n","Represents the state of a device light.":"表示设备灯的状态。\r\n","The arrangement of color filters on sensor;\n            represents the colors in the top-left 2x2 section of\n            the sensor, in reading order, for a Bayer camera, or the\n            light spectrum it captures for MONOCHROME camera.":"传感器上颜色过滤器的布置；\r\n            表示左上角2x2部分的颜色\r\n            传感器，阅读顺序，用于拜耳相机或\r\n            它捕获了单色相机的光谱。\r\n","Encapsulates the format of tracks played in ":"封装播放的曲目格式\r\n","Builder#setAllowedCapturePolicy(int)":"构建器＃setalloweredcapturepolicy（int）\r\n","android.media.DrmInitData.getSchemeInitDataAt(int)":"android.media.drminitdata.getschemeinitdataat（int）\r\n","android.location.GnssNavigationMessage.TYPE_IRN_L5CA":"android.location.gnssnavigationmessage.type_irn_l5ca\r\n","Returns an estimate of how much data is presently cached in memory\n            expressed in microseconds.":"返回估计目前已在内存中缓存多少数据的估计值\r\n            在微秒中表达。\r\n","Called when a route for the specified type was removed.":"当删除指定类型的路由时，请致电。\r\n","android.media.ThumbnailUtils.createImageThumbnail(java.lang.String, int)":"android.media.thumbnailutils.createimagethumbnail（java.lang.string，int）\r\n","if the size passed in does not match the\n":"如果大小通过的大小与\r\n\r\n","\n calls.":"\r\n 呼叫。\r\n","Get a map of lights and states.":"获取灯光和状态地图。\r\n","Returns the scope of this ":"返回此范围\r\n","android.hardware.SensorEventCallback.onSensorAdditionalInfo(android.hardware.SensorAdditionalInfo)":"android.hardware.sensoreventcallback.onsensoradditionalinfo（android.hardware.sensoradditionalinfo）\r\n","android.media.AudioRecord.setPreferredMicrophoneDirection(int)":"android.media.audiorecord.setpreferredmicrophondirection（INT）\r\n","Used as an int extra field to denote the page number to subscribe.":"用作INT额外字段，用来表示要订阅的页码。\r\n","AudioManager#generateAudioSessionId()":"听众＃generateaudiosessionid（）\r\n","android.media.MediaFormat.COLOR_RANGE_LIMITED":"android.media.mediaformat.color_range_limited\r\n","android.hardware.camera2.CameraExtensionCharacteristics.getExtensionSupportedSizes(int, java.lang.Class)":"android.hardware.camera2.CameraExtensionCharacteristics.getExtensionsUpportedSizes（int，java.lang.class）\r\n","android.media.session.MediaSession.release()":"android.media.session.Mediasession.Release（）\r\n","Requests a Surface to use as the input to an encoder, in place of input buffers.":"请求将表面用作编码器的输入，以代替输入缓冲区。\r\n","android.media.AudioManager.setRingerMode(int)":"android.media.audiomanager.setringermode（int）\r\n","Flag indicating a RemoteControlClient makes use of the \"play\" media key.":"指示RemoteControlclient的标志使用“播放”媒体密钥。\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_COLOR_TRANSFER":"android.media.mediametadataretriever.metadata_key_color_transfer\r\n","CDMA EMERGENCY RINGBACK tone: {941Hz 125ms ON, 10ms OFF} 3times\n 4990ms OFF, REPEAT...":"CDMA紧急回合音：{941Hz 125ms打开，10毫秒左右} 3Times\r\n 4990毫秒，重复...\r\n","android.location.Location.setAltitude(double)":"android.location.location.setaltitude（double）\r\n","#FLAG_KEY_MEDIA_PLAY":"#flag_key_media_play\r\n","Represents whether to enable full GNSS tracking.":"表示是否启用完整的GNSS跟踪。\r\n","The metadata key to retrieve the content type or genre of the data\n            source.":"检索数据的内容类型或类型的元数据键\r\n            资源。\r\n","OutputConfiguration OutputConfigurations":"输出配置输出configuration\r\n","Called to notify when an our ":"叫通知我们什么时候\r\n","Configures a component.":"配置组件。\r\n","List of aperture size values for ":"孔径大小值列表\r\n","android.location.LocationRequest.QUALITY_LOW_POWER":"android.location.locationrequest.quality_low_power\r\n","android.media.RingtoneManager.EXTRA_RINGTONE_DEFAULT_URI":"android.media.ringtonemanager.extra_ringtone_default_uri\r\n","Gets the PSK to use for the provided socket.":"让PSK用于提供的插座。\r\n","android.media.MicrophoneInfo.CHANNEL_MAPPING_DIRECT":"android.media.microphoneinfo.channel_mapping_direct\r\n","android.media.MediaDrm.setOnKeyStatusChangeListener(android.media.OnKeyStatusChangeListener, android.os.Handler)":"android.media.mediadrm.setonKeystatuschangelistener（android.media.onkeystatuschangelistener，android.os.handler）\r\n","android.media.MediaCas.sendEvent(int, int, byte[])":"android.media.mediacas.sendevent（int，int，byte []）\r\n","The default width of ":"默认宽度的宽度\r\n","android.hardware.camera2.CameraMetadata.REQUEST_AVAILABLE_CAPABILITIES_OFFLINE_PROCESSING":"android.hardware.camera2.camerametadata.request_available_capabilities_offline_processing\r\n","A constant string describing a step counter sensor.":"一个恒定的字符串描述台阶计数器传感器。\r\n","Audio presentation content classifier: Commentary.":"音频演示内容分类器：评论。\r\n"," object are ":" 对象是\r\n","android.media.tv.TvContract.buildProgramsUriForChannel(long, long, long)":"android.media.tv.tvcontract.BuildProgramsuriforChannel（长，长，长）\r\n","android.location.GnssMeasurement.STATE_TOW_KNOWN":"android.location.gnssmeasurement.state_tow_nown\r\n","event.getKeyCode()":"event.getKeyCode（）\r\n","The parameters for this camera device's intrinsic\n            calibration when ":"此相机设备内在的参数\r\n            何时校准\r\n","F:Android.Media.AudioManager.SetRouting":"F：android.media.audiomanager.setrouting\r\n","android.media.MediaDrm.KEY_TYPE_STREAMING":"android.media.mediadrm.key_type_streaming\r\n","android.hardware.SensorManager.MAGNETIC_FIELD_EARTH_MAX":"android.hardware.sensormanager.magnetic_field_earth_max\r\n","Stub implementation of ":"存根实现\r\n","Gets the error estimate (1-sigma) for the received GNSS time, in nanoseconds.":"在接收到的GNSS时间（纳米秒）中获取误差估计（1- sigma）。\r\n","Indicates whether network connectivity exists or is in the process\n of being established.":"指示网络连接是否存在还是正在流程中\r\n 被建立。\r\n","Re-evaluate whether the input method should be running in fullscreen\n            mode, and update its UI if this has changed since the last time it\n            was evaluated.":"重新评估输入方法是否应在全屏中运行\r\n            模式，并更新其UI，如果自上次自上次发生了变化\r\n            被评估。\r\n","Gets video width.":"获取视频宽度。\r\n","Set a DRM engine plugin String property value.":"设置DRM引擎插件字符串属性值。\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_PLAYER_REMOTE":"android.media.metrics.playbackerrorevent.error_player_remote\r\n","android.media.RingtoneManager.getActualDefaultRingtoneUri(android.content.Context, int)":"android.media.ringtonemanager.getactualdefaultringtoneuri（android.content.context，int）\r\n","#COUNT":"＃数数\r\n","<code>CameraAccessException</code> is thrown if a camera device could not\n            be queried or opened by the ":"<code> cameraaccessexception </code>如果无法使用相机设备\r\n            被查询或打开\r\n","android.media.MediaCodec":"android.media.mediacodec\r\n","android.media.MediaFormat.MIMETYPE_TEXT_CEA_708":"android.media.mediaformat.mimetype_text_cea_708\r\n","This class represents the characteristics of the geofence.":"该类代表地理林的特征。\r\n","Cancels a pending queue operation.":"取消待处理的队列操作。\r\n","android.hardware.camera2.params.TonemapCurve":"android.hardware.camera2.params.tonemapcurve\r\n","android.media.CamcorderProfile.QUALITY_QHD":"android.media.camcorderprofile.quality_qhd\r\n","#openCamera":"＃开放式摄像头\r\n","Returns the codec to its initial (Uninitialized) state.":"将编解码器返回其初始（非初始化）状态。\r\n"," to define the maximum number of channels\n            supported by the HDMI device.":" 定义最大频道数量\r\n            由HDMI设备支持。\r\n","android.hardware.SensorManager.registerListener(android.hardware.SensorEventListener, android.hardware.Sensor, int, int, android.os.Handler)":"机器人。硬件。SensorManager。registerListener（android。硬件。SensorEventListener,android的.硬件。传感器，int，int，android。操作系统。处理程序)\r\n","Free up resources used by the codec instance.":"编解码器实例使用的免费资源。\r\n","android.media.MediaDrm.KEY_TYPE_OFFLINE":"android.media.mediadrm.key_type_offline\r\n","Playback is stopped due a fatal error and can be retried.":"由于致命的错误而停止了播放，可以重试。\r\n","The minimum value of valid metering weight.":"有效计量重量的最小值。\r\n","android.hardware.SensorEventListener SensorEventListener":"android.hardware.sensoreventlistener sensoreventlistener\r\n","Playback state of a RemoteControlClient which is buffering data to play before it can\n    start or resume playback.":"RemoteControlclient的播放状态，该状态正在缓冲数据之前可以播放的数据\r\n    启动或恢复播放。\r\n","android.location.GpsStatus":"android.location.gpsstatus\r\n","android.hardware.camera2.TotalCaptureResult.getPartialResults()":"android.hardware.camera2.totalcaptureresult.getPartialResults（）\r\n","android.media.ExifInterface.TAG_ORIENTATION":"android.media.exifinterface.tag_orientation\r\n","Returns true if the provider is able to provide bearing\n            information, false otherwise.":"如果提供商能够提供轴承，则返回真实\r\n            信息，否则为错误。\r\n","android.location.GnssMeasurement.STATE_BDS_D2_SUBFRAME_SYNC":"android.location.gnssmeasurement.state_bds_d2_subframe_sync\r\n","android.media.metrics.PlaybackStateEvent.STATE_ENDED":"android.media.metrics.playbackstateevent.state_ended\r\n","Get the effect descriptor.":"获取效果描述符。\r\n","android.media.ToneGenerator.stopTone()":"android.media.toneNerator.stoptone（）\r\n","android.media.MediaPlayer.setOnVideoSizeChangedListener(android.media.OnVideoSizeChangedListener)":"android.media.mediaplayer.setonvideosizechangedlistener（android.media.onvideosizechangedlistener）\r\n","android.media.CamcorderProfile.QUALITY_HIGH_SPEED_4KDCI":"android.media.camcorderprofile.quality_high_speed_4kdci\r\n","android.media.MediaPlayer.setDataSource(java.io.FileDescriptor)":"android.media.mediaplayer.setdatasource（java.io.filedescriptor）\r\n","Gains applying to Bayer raw color channels for\n            white-balance.":"适用于拜耳的原始色彩通道的收益\r\n            白平衡。\r\n","android.media.effect.EffectFactory.isEffectSupported(java.lang.String)":"android.media.effect.effectfactory.iseffectsupported（java.lang.string）\r\n","Return number of packets received across mobile networks since device\n            boot.":"自设备以来，跨移动网络收到的数据包的返回数量\r\n            引导。\r\n","parameterName":"参数名称\r\n","android.inputmethodservice.InputMethodService.getBackDisposition()":"android.inputmethodservice.inputmethodservice.getBackDisposition（）\r\n","MediaPlayer class can be used to control playback\n of audio/video files and streams.":"MediaPlayer类可用于控制播放\r\n 音频/视频文件和流。\r\n","android.hardware.camera2.CameraCharacteristics.SCALER_MANDATORY_STREAM_COMBINATIONS":"android.hardware.camera2.cameracharacteristics.scaler_mandatory_stream_combinations\r\n","The metadata key for the content's average rating, not the user's rating.":"内容的平均评级，而不是用户的评分。\r\n","android.media.MediaDescrambler.SCRAMBLE_CONTROL_UNSCRAMBLED":"android.media.mediadescrambler.scramble_control_unscrambled\r\n","Returns true if the provider is able to provide altitude\n            information, false otherwise.":"如果提供商能够提供高度，则返回正确\r\n            信息，否则为错误。\r\n","android.media.AudioTrack.addOnRoutingChangedListener(android.media.OnRoutingChangedListener, android.os.Handler)":"android.media.audiotrack.addonroutingchangedlistener（android.media.onroutingchangedlistener，android.os.handler）\r\n","android.media.ResourceBusyException":"android.media.ResourceBusyException\r\n","A key describing the desired operating frame rate for video or sample rate for audio\n            that the codec will need to operate at.":"描述视频的所需操作帧速率或音频样品速率的键\r\n            编解码器将需要操作。\r\n","Returns the extra information about the current track.":"返回有关当前轨道的额外信息。\r\n","android.media.RemoteControlClient.FLAG_KEY_MEDIA_REWIND":"android.media.remotecontrolclient.flag_key_media_rewind\r\n","android.media.MediaMetadata.METADATA_KEY_USER_RATING":"android.media.mediametadata.metadata_key_user_rating\r\n","Returns the EffectFactory for this context.":"在此上下文中返回效果效果。\r\n","Returns all the algorithms allowed by this VPN profile.":"返回此VPN配置文件允许的所有算法。\r\n","MediaDrm#PROPERTY_VERSION":"MediaDRM＃property_version\r\n","if the internal player engine has not been\n initialized.\n":"如果内部播放器引擎没有\r\n 初始化。\r\n\r\n"," was out of range":" 超出了范围\r\n","#TONE_SUP_INTERCEPT_ABBREV":"#tone_sup_intercept_abbrev\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_DATE":"android.media.mediametadataretriever.metadata_key_date\r\n","The amount of gain applied to sensor data\n            before processing.":"应用于传感器数据的增益量\r\n            处理之前。\r\n","#registerStreamEventCallback(Executor, StreamEventCallback)":"#RegistersTreameMeventCallback（executor，StreamEventCallback）\r\n","ImageReader":"成像学者\r\n","android.media.MediaCas.isSystemIdSupported(int)":"android.media.mediacas.issystemidsupported（int）\r\n","android.media.MediaRecorder.resume()":"android.media.mediarecorder.resume（）\r\n","android.media.ExifInterface.getLatLong(float[])":"android.media.exifinterface.getLatlong（float []）\r\n","android.media.MediaMetadataRetriever.getImageAtIndex(int)":"android.media.mediametadataretriever.getimageatexex（int）\r\n","android.media.VolumeProvider.VolumeProvider(int, int, int)":"android.media.volumeprovider.volumeprovider（int，int，int）\r\n","File or network related operation errors.":"文件或网络相关的操作错误。\r\n","if a parameter cannot be applied\n         by the operating system.":"如果不能应用参数\r\n         由操作系统。\r\n","Band for a given frequency.":"带有给定频率的频段。\r\n","#TONE_DTMF_4":"＃tone_dtmf_4\r\n","android.media.MediaFormat.createAudioFormat(java.lang.String, int, int)":"android.media.mediaformat.createaudiooformat（java.lang.string，int，int）\r\n","No sync event specified. ":"未指定同步事件。\r\n","Used to indicate a temporary gain or request of audio focus, anticipated to last a short\n amount of time. ":"用于指示音频焦点的暂时收益或要求，预计会持续短暂\r\n 多少时间。\r\n","android.hardware.SensorEvent.sensor":"android.hardware.sensorevent.sensor\r\n","android.net.TrafficStats.getRxBytes(java.lang.String)":"android.net.trafficstats.getrxbytes（java.lang.string）\r\n","The surround sound formats are NEVER available, even if they are detected by the hardware.":"即使硬件检测到环绕声格式，也永远无法使用。\r\n","android.media.TimedMetaData":"android.media.timedmetadata\r\n","android.media.session.MediaSession.setMetadata(android.media.MediaMetadata)":"android.media.session.mediasession.setmetadata（android.media.mediametadata）\r\n","#TONE_SUP_RINGTONE":"#tone_sup_ringtone\r\n","android.net.VpnManager.deleteProvisionedVpnProfile()":"android.net.vpnmanager.deleteprovisionedvpnprofile（）\r\n","Gets the type(s) of authenticators that may be invoked by the prompt to authenticate the\n            user, as set by ":"获取可以通过提示来验证的提示来调用的身份验证者的类型\r\n            用户，设置\r\n",", indicates that the call timed out.":"，指示通话时间计时。\r\n","android.mtp.MtpDevice.getPartialObject64(int, long, long, byte[])":"android.mtp.mtpdevice.getPartialObject64（int，long，long，byte []）\r\n","android.media.AudioTrack.addOnCodecFormatChangedListener(java.util.concurrent.Executor, android.media.OnCodecFormatChangedListener)":"android.media.audiotrack.addoncodecformatchangedlistener（java.util.concurrent.executor，android.media.media.oncodecodecformatchangedlistlistener）\r\n","android.mtp.MtpDevice.deleteObject(int)":"android.mtp.mtpdevice.deleteobject（int）\r\n","android.hardware.usb.UsbConstants.USB_TYPE_MASK":"android.hardware.usb.usbconstants.usb_type_mask\r\n","Specifies the number of maximum pipeline stages a frame\n            has to go through from when it's exposed to when it's available\n            to the framework.":"指定最大管道阶段的数量\r\n            必须从何时接触到它\r\n            到框架。\r\n","android.media.audiofx.Visualizer.STATE_INITIALIZED":"android.media.audiofx.visualizer.state_initialized\r\n","ATIS-0800006 IIF Default Scrambling Algorithm (IDSA).":"ATIS-0800006 IIF默认争夺算法（IDSA）。\r\n","Increase the ringer volume.":"增加铃声体积。\r\n","android.media.VolumeProvider.onAdjustVolume(int)":"android.media.volumeprovider.onadjustvolume（int）\r\n","Gets the last known location from the given provider, or null if there is no last known\n            location.":"从给定的提供商处获取最后一个已知位置，或者如果没有最后一个已知的位置\r\n            地点。\r\n","android.location.provider.ProviderProperties.hasSatelliteRequirement()":"android.location.provider.providerproperties.hassatelliterequirment（）\r\n","android.media.MediaFormat.COLOR_TRANSFER_ST2084":"android.media.mediaformat.color_transfer_st2084\r\n","The WiMAX data connection. ":"WIMAX数据连接。\r\n","Playback information indicating the playback volume is variable and can be controlled\n            from this object.":"播放信息表示播放卷是可变的，并且可以控制\r\n            从这个对象。\r\n",": Scan.":"： 扫描。\r\n","KeyEvent#KEYCODE_MEDIA_STOP":"keyevent＃keycode_media_stop\r\n","android.media.tv.TvContract.ACTION_REQUEST_CHANNEL_BROWSABLE":"android.media.tv.tvcontract.action_request_channel_browsable\r\n","A class containing constants in the MTP and PTP specifications.":"在MTP和PTP规范中包含常数的类。\r\n","#RATING_THUMB_UP_DOWN":"#rating_thumb_up_down\r\n","AudioAttributes#ALLOW_CAPTURE_BY_NONE":"AudioAttributes＃allow_capture_by_none\r\n"," matrices.":" 矩阵。\r\n","android.location.GnssClock.getReferenceCodeTypeForIsb()":"android.location.gnssclock.getReferenceCodeTypeForisb（）\r\n","android.media.JetPlayer.triggerClip(int)":"android.media.jetplayer.triggerclip（int）\r\n","Checks if the given toggle is supported on this device":"检查此设备是否支持给定的切换\r\n","The metadata key to retrieve the information about the performers or\n artist associated with the data source.":"元数据键检索有关表演者或\r\n 与数据源相关的艺术家。\r\n","A new set of metadata is available.":"提供了一组新的元数据。\r\n","#setOnMediaTimeDiscontinuityListener(OnMediaTimeDiscontinuityListener)":"#SetonMediatimedIscontinuityListener（onmediatimediscontinuityListener）\r\n","Type for lights that indicate microphone usage":"用于指示麦克风使用的灯的类型\r\n","Helper function to compute the angle change between two rotation matrices.":"辅助功能以计算两个旋转矩阵之间的角度变化。\r\n","android.media.MediaScannerConnection.isConnected()":"android.media.mediascannerconnection.isconnection（）\r\n","android.media.MediaMetadata.METADATA_KEY_DISPLAY_DESCRIPTION":"android.media.mediametadata.metadata_key_display_description\r\n","android.location.GnssMeasurement.hasSatelliteInterSignalBiasUncertaintyNanos()":"android.location.gnssmeasurement.hassatelliteintersignalbiasuncrestentytynanos（）\r\n","android.hardware.camera2.CaptureRequest.SCALER_CROP_REGION":"android.hardware.camera2.capturerequest.scaler_crop_region\r\n","Unspecified camera error.":"未指定的相机错误。\r\n","android.media.MicrophoneInfo.getAddress()":"android.media.microphoneinfo.getAddress（）\r\n","android.location.GnssNavigationMessage.STATUS_PARITY_REBUILT":"android.location.gnssnavigationmessage.status_parity_rebuilt\r\n","android.media.AudioTrack.ERROR_INVALID_OPERATION":"android.media.audiotrack.Error_invalid_operation\r\n","android.media.JetPlayer.pause()":"android.media.jetplayer.pape（）\r\n","android.hardware.camera2.CameraMetadata.SCALER_ROTATE_AND_CROP_90":"android.hardware.camera2.camerametadata.scaler_rotate_and_crop_90\r\n","Gets whether active scanning should be performed.":"获取是否应进行主动扫描。\r\n","Convenience method to create the size from this metering rectangle.":"从此计量矩形创建大小的便利方法。\r\n","Broadcast Action: Query available keyboard layouts.":"广播操作：查询可用的键盘布局。\r\n","android.media.audiofx.AudioEffect.ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL":"android.media.audiofx.audioeffect.action_display_audio_effect_control_panel\r\n","if accuracy is not one of the supported constants\n":"如果准确性不是受支持的常数之一\r\n\r\n","Process the secure stop server response message ssRelease.":"处理安全的停止服务器响应消息SSREALE。\r\n","Copy the vector into the destination in the order ":"将向量按顺序复制到目的地\r\n","android.media.AudioProfile.getChannelMasks()":"android.media.audioprofile.getChannelMasks（）\r\n","android.media.MediaFormat.getFloat(java.lang.String)":"android.media.mediaformat.getFloat（java.lang.string）\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_DRM_PROVISIONING_FAILED":"android.media.metrics.playbackerrorevent.error_drm_provisioning_failed\r\n","Unregisters a display listener.":"解开显示听众。\r\n","Sets the pitch factor.":"设置螺距因子。\r\n","android.media.ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT":"android.media.exifinterface.tag_jpeg_interchange_format\r\n","Event code for OBJECT_PROP_CHANGED event":"object_prop_changed事件的事件代码\r\n","Microphone directionality type: hyper cardioid.":"麦克风方向性类型：超心脏。\r\n"," output format.":" 输出格式。\r\n","Called to indicate an avaliable timed text":"叫指示可用的定时文本\r\n","android.hardware.camera2.CameraCharacteristics.SCALER_MANDATORY_MAXIMUM_RESOLUTION_STREAM_COMBINATIONS":"android.hardware.camera2.cameracharacteristics.scaler_mandatory_maximum_resolution_stream_combinations\r\n","android.inputmethodservice.InputMethodService.onCreateInlineSuggestionsRequest(android.os.Bundle)":"android.inputmethodservice.inputmethodservice.oncreateinlinesuggestionsrequest（android.os.bundle）\r\n","Get the map between physical camera ids and their total capture result metadata":"获取物理摄像头ID及其总捕获结果元数据之间的地图\r\n","Whether the camera device will output the lens\n            shading map in output result metadata.":"相机设备是否会输出镜头\r\n            输出结果元数据中的阴影图。\r\n","android.media.session.MediaController.MediaController(android.content.Context, android.media.session.Token)":"android.media.session.mediacontroller.mediacontroller（android.content.context，android.media.session.token）\r\n","Creates a AF_LOCAL/UNIX domain stream socket with given socket type":"使用给定的套接字类型创建AF_LOCAL/UNIX域流插座\r\n","Broadcast intent action used to query available content rating systems.":"广播意愿动作用于查询可用的内容评级系统。\r\n","MediaCrypto":"MediaCrypto\r\n","Return number of bytes transmitted since device boot.":"自设备引导以来传输的字节的返回数量。\r\n","android.location.LocationManager.addProximityAlert(double, double, float, long, android.app.PendingIntent)":"android.location.LocationManager.AddproximityAlert（double，double，float，long，android.app.pendingIntent）\r\n","android.media.MediaMetadataRetriever.getFrameAtTime()":"android.media.mediametadataretriever.getFrameattime（）\r\n","android.media.MediaSession2.isPlaybackActive()":"android.media.mediasession2.isplaybackactive（）\r\n","Indicates that the sample holds a synchronization sample.":"表明样品保存了同步样品。\r\n","android.hardware.camera2.CaptureResult.CONTROL_AF_STATE":"android.hardware.camera2.captureresult.control_af_state\r\n","Immutable class to store a 4-element vector of integers corresponding to a 2x2 pattern\n            of color channel offsets used for the black level offsets of each color channel.":"不可变的类存储与2x2模式相对应的整数的4元素向量\r\n            用于每个颜色通道的黑级偏移量的颜色通道偏移量。\r\n","Query the media types supported by the codec.":"查询编解码器支持的媒体类型。\r\n","android.mtp.MtpDeviceInfo.isEventSupported(int)":"android.mtp.mtpdeviceinfo.iseventsupported（int）\r\n","android.media.MediaPlayer.getRoutedDevice()":"android.media.mediaplayer.getRoutedDevice（）\r\n","android.hardware.camera2.CameraDevice CameraDevice":"android.hardware.camera2.cameradevice cameradevice\r\n","Describes a routing session which is created when a media route is selected.":"描述选择媒体路由时创建的路由会话。\r\n","android.location.GnssClock.hasBiasNanos()":"android.location.gnssclock.hasbiasnanos（）\r\n","android.media.SyncParams.getAudioAdjustMode()":"android.media.syncparams.getaudioadjustmode（）\r\n","android.media.metrics.LogSessionId.LOG_SESSION_ID_NONE":"android.media.metrics.logsessionid.log_session_id_none\r\n","Dequeue the next available input Image for the application to produce\n            data into.":"Dequeue的下一个可用输入图像，用于生产的应用程序\r\n            数据进入。\r\n","Compression quality of the final JPEG\n            image.":"最终JPEG的压缩质量\r\n            图片。\r\n","Indicates whether this buffer has been closed.":"指示该缓冲区是否已关闭。\r\n","#requiresSecureDecoder(String)":"#requiressecuredecoder（字符串）\r\n","Returns a description suitable for display or null.":"返回适合显示或空的描述。\r\n","android.media.MediaRecorder.pause()":"android.media.mediarecorder.pape（）\r\n"," type is being monitored (see\n            also ":" 类型正在被监视（参见\r\n            也 \r\n","android.media.AudioManager.STREAM_ACCESSIBILITY":"android.media.audiomanager.Stream_Accesctible\r\n","android.media.effect.EffectFactory.EFFECT_GRAYSCALE":"android.media.effect.effectfactory.effect_grayscale\r\n","Query if the codec is an alias for another underlying codec.":"查询是否编解码器是另一个基础编解码器的别名。\r\n","A simple tuple that holds parameter-value pairs.":"一个可容纳参数值对的简单元组。\r\n","F:Android.Media.MediaSyncEvent.CreateEvent":"F：android.media.mediasyncevent.createevent\r\n","android.media.Rating.newHeartRating(boolean)":"android.media.rating.newheartrating（boolean）\r\n","The playback position synchronization mode where the RemoteControlClient instances which\n            expose their playback position to the framework, will be regularly polled to check\n            whether any drift has been noticed between their estimated position and the one they report.":"播放位置同步模式，其中remoteconcontrolclient实例\r\n            将他们的播放位置暴露于框架，将定期进行调查以检查\r\n            他们的估计立场与他们报告的位置之间是否发现了任何漂移。\r\n","android.media.MediaRouter2.getSystemController()":"android.media.mediarouter2.getSystemController（）\r\n","Internal operation status.":"内部操作状态。\r\n","UUID for Loudness Enhancer":"响度增强器的UUID\r\n","android.location.GnssClock.getHardwareClockDiscontinuityCount()":"android.location.gnssclock.gethardwareclockdiscontinuitioncount（）\r\n","Returns the information about the location provider with the given name, or null if no\n            provider exists by that name.":"以给定名称返回有关位置提供商的信息，或者如果没有\r\n            提供者以该名称存在。\r\n","android.media.AudioTrack.ENCAPSULATION_MODE_ELEMENTARY_STREAM":"android.media.audiotrack.encapsulation_mode_elementary_stream\r\n","returns the ":"返回\r\n","String property name: identifies the version of the DRM plugin":"字符串属性名称：标识DRM插件的版本\r\n","android.location.Location.setTime(long)":"android.location.location.settime（long）\r\n","android.mtp.MtpConstants.OPERATION_DELETE_OBJECT":"android.mtp.mtpconstants.operation_delete_object\r\n","android.hardware.usb.UsbDevice.getInterface(int)":"android.hardware.usb.usbdevice.getinterface（int）\r\n","android.inputmethodservice.InputMethodService.onUnbindInput()":"android.inputmethodservice.inputmethodservice.onunbindinput（）\r\n","android.hardware.lights.Light.hasBrightnessControl()":"android.hardware.lights.light.hasbrightnesscontrol（）\r\n","android.media.VolumeProvider.getVolumeControl()":"android.media.volumeprovider.getVolumeControl（）\r\n","android.media.AudioMetadataReadMap.dup()":"android.media.audiometadatareadmap.dup（）\r\n","\n            to decode encrypted media data.":"\r\n            解码加密的媒体数据。\r\n"," for a new reprocess ":" 为了新的重新处理\r\n","android.media.AudioManager.MODE_CALL_SCREENING":"android.media.audiomanager.mode_call_screening\r\n","android.mtp.MtpConstants.OPERATION_GET_OBJECT_HANDLES":"android.mtp.mtpconstants.operation_get_object_handles\r\n","android.hardware.camera2.CameraCaptureSession.setRepeatingBurst(java.util.List, android.hardware.camera2.CaptureCallback, android.os.Handler)":"android.hardware.camera2.cameracapturesession.setrepeatingburst（java.util.list，android.hardware.camera.camera2.capturecallback，android.os.handler）\r\n","The duration of the media in ms.":"MS中媒体的持续时间。\r\n","A playback type indicating the presentation of the media is happening on\n a different device (i.e. ":"播放类型，指示媒体的介绍正在发生\r\n 不同的设备（即\r\n","android.location.LocationManager.requestFlush(java.lang.String, android.app.PendingIntent, int)":"android.location.LocationManager.RequestFlush（java.lang.string，android.app.pendingIntent，int）\r\n","This GNSS measurement's tracking state has bit sync.":"此GNSS测量的跟踪状态具有位同步。\r\n","Location provider properties.":"位置提供商属性。\r\n","Parser for the PS container format, as defined in ISO/IEC 11172-1.":"在ISO/IEC 11172-1中定义的PS容器格式​​的解析器。\r\n","Indicates this session supports the play command.":"指示此会话支持play命令。\r\n","Return number of packets transmitted by the given UID since device boot.":"自设备引导以来，给定UID传输的数据包的返回数量。\r\n","The OnParameterChangeListener interface defines a method called by the Virtualizer when a\n parameter value has changed.":"OnParameterChangeListener界面定义了一种通过虚拟机调用的方法\r\n 参数值已更改。\r\n","A constrained high speed capture session for a ":"一个受约束的高速捕获会话\r\n","android.net.LocalSocketAddress.LocalSocketAddress(java.lang.String)":"android.net.localsocketDress.localsocketDress（java.lang.string）\r\n","No distortion correction is applied.":"未应用失真校正。\r\n","android.hardware.camera2.CameraCharacteristics.CONTROL_AE_AVAILABLE_TARGET_FPS_RANGES":"android.hardware.camera2.cameracharacteristics.control_ae_available_target_fps_ranges\r\n","android.media.JetPlayer.queueJetSegment(int, int, int, int, int, byte)":"android.media.jetplayer.queueJeteggent（int，int，int，int，int，int，byte）\r\n","Stops the current JET playback, and releases all associated native resources.":"停止当前的喷气式播放，并发布所有相关的本机资源。\r\n","The CameraDevice class is a representation of a single camera connected to an\n            Android device, allowing for fine-grain control of image capture and\n            post-processing at high frame rates.":"CameradeVice类是连接到一个的单个相机的表示\r\n            Android设备，允许对图像捕获的细粒度控制和\r\n            以高帧速率进行后处理。\r\n","Return a Sensor with the given type and wakeUp properties.":"返回具有给定类型和唤醒属性的传感器。\r\n","#isCryptoSchemeSupported(UUID)":"#issryptoschemespupted（UUID）\r\n","Key used for an extra holding a boolean enabled/disabled status value when a provider\n            enabled/disabled event is broadcast using a PendingIntent.":"提供商时，用于额外持有布尔启用/禁用状态值的键\r\n            启用/禁用的事件是使用PendendIntent广播的。\r\n","android.media.AudioManager.registerAudioDeviceCallback(android.media.AudioDeviceCallback, android.os.Handler)":"android.media.audiomanager.registeraudiodevicecallback（android.media.audiodevicecallback，android.os.handler）\r\n","Gets the satellite ID.":"获取卫星ID。\r\n","Returns the type of audio focus request configured for this ":"返回为此配置的音频焦点请求的类型\r\n","\n or for periodic updates on the progress of the record head, as set by\n ":"\r\n 或有关记录头进度的定期更新，\r\n \r\n","android.hardware.location.GeofenceHardware.getMonitoringTypes()":"android.hardware.location.geofencehardware.getMonitoringTypes（）\r\n","#registerForMonitorStateChangeCallback":"#RegisterFormonTorStateChangeCallback\r\n","Builder#setOffloadedPlayback(boolean)":"建筑商＃SetOffLoadedPlayBack（布尔值）\r\n","F:Android.Media.MediaCodecInfo+EncoderCapabilities.IsBitrateModeSupported":"f：android.media.mediacodecinfo+encoderCapabilities.isbitrateModeSupported\r\n","java.nio.ByteBuffer":"Java.nio.Bytebuffer\r\n","Operation code for SendObject":"sendObject的操作代码\r\n","android.hardware.camera2.params.SessionConfiguration.getOutputConfigurations()":"android.hardware.camera2.params.sessionconfiguration.getOutputConfiguration（）\r\n","#AUDIOFOCUS_REQUEST_GRANTED":"＃Audiofocus_request_granted\r\n","android.media.JetPlayer.loadJetFile(java.lang.String)":"android.media.jetplayer.loadjetfile（java.lang.string）\r\n","android.media.MediaPlayer.setAudioAttributes(android.media.AudioAttributes)":"android.media.mediaplayer.setaudioattributes（android.media.audioAttributes）\r\n","Close sensor direct channel.":"关闭传感器直接通道。\r\n","CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_BACKWARD_COMPATIBLE":"camerametadata＃request_available_capabilities_backward_compatible\r\n","#TONE_DTMF_D":"#TONE_DTMF_D\r\n","DRM key management, crypto operations, decoding of content and all\n            handling of the media (compressed and uncompressed) is handled within a\n            hardware backed trusted execution environment.":"DRM密钥管理，加密操作，内容解码以及所有\r\n            媒体的处理（压缩和未压缩）在一个内处理\r\n            硬件支持的可信执行环境。\r\n","Gets 'Accumulated Delta Range' state.":"获得“累积的三角洲范围”状态。\r\n","Bad interleaving means that a media has been improperly interleaved or\n not interleaved at all, e.g has all the video samples first then all the\n audio ones. ":"不良的交错意味着媒体的交织不当或\r\n 根本没有交错，例如，首先拥有所有视频样本\r\n 音频。\r\n","android.hardware.location.GeofenceHardware.GEOFENCE_FAILURE":"android.hardware.location.geofencehardware.geofence_failure\r\n","android.media.AudioManager.shouldVibrate(int)":"android.media.audiomanager.shouldvibrate（int）\r\n","android.hardware.camera2.params.MultiResolutionStreamInfo.getPhysicalCameraId()":"android.hardware.camera2.params.multiresolutionstreaminfo.getPhysicalCameraid（）\r\n","The ID is ":"ID是\r\n","android.media.MicrophoneDirection.MIC_DIRECTION_UNSPECIFIED":"android.media.microphonedirection.mic_direction_unspecified\r\n"," or pre processing category\n  {at_link #EFFECT_PRE_PROCESSING}.":" 或预处理类别\r\n  {at_link #effect_pre_processing}。\r\n","AudioManager#setStreamVolume(int, int, int)":"听众＃setStreamVolume（int，int，int）\r\n","#SENSOR_DELAY_UI":"#sensor_delay_ui\r\n","Returns if the given event is supported by the device or not.":"返回设备是否支持给定事件。\r\n","Returns a subset of ":"返回一个子集\r\n"," supported by this\n            camera device.":" 受此支持\r\n            摄像装置。\r\n","android.location.LocationManager.removeUpdates(android.app.PendingIntent)":"android.location.locationmanager.removeupdates（android.app.pendingIntent）\r\n","Programs#COLUMN_START_TIME_UTC_MILLIS":"程序＃column_start_time_utc_millis\r\n","if socket is in invalid state or the address does\n not exist.\n":"如果插座处于无效状态或地址确实\r\n 不存在。\r\n\r\n","Browses media content offered by a link MediaBrowserService.":"浏览链接MediaBrowserService提供的媒体内容。\r\n","Apply an IPsec transform to a socket.":"将IPSEC转换应用于插座。\r\n","android.media.metrics.PlaybackMetrics.getPlaybackType()":"android.media.metrics.playbackmetrics.getplaybacktype（）\r\n","The Settings class regroups all equalizer parameters.":"设置类重组所有均衡参数。\r\n","android.location.GnssMeasurement.getState()":"android.location.gnssmeasurement.getState（）\r\n","The output buffers have changed, the client must refer to the new\n            set of output buffers returned by ":"输出缓冲区已更改，客户必须参考新的\r\n            返回的输出缓冲区集\r\n","Used for mask parameter of ":"用于掩模参数的参数\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_PLAYER_OTHER":"android.media.metrics.playbackerrorevent.error_player_other\r\n","Audio data format: PCM 16 bit per sample. ":"音频数据格式：PCM每个样品16位。\r\n","Get the height of this input configuration.":"获取此输入配置的高度。\r\n","The metadata key to retrieve the playback duration of the data source.":"检索数据源的播放持续时间的元数据键。\r\n","Called when the provider this listener is registered with becomes disabled.":"在提供商时，请致电该侦听器注册。\r\n","Updates the <code>TvInputInfo</code> for an existing TV input.":"更新现有电视输入的<code> tvInputinfo </code>。\r\n","Checks whether the MediaPlayer is looping or non-looping. -or- Sets the player to be looping or non-looping.":"检查媒体播放器是循环还是不循环。 - 或 - 设置播放器要循环或不循环。\r\n","#STREAM_RING":"#Stream_ring\r\n","android.hardware.camera2.CaptureResult.COLOR_CORRECTION_MODE":"android.hardware.camera2.captureresult.color_correction_mode\r\n","android.hardware.lights.Light#LIGHT_TYPE_PLAYER_ID":"android.hardware.lights.light＃light_type_player_id\r\n","Returns true if an input port is open.":"如果打开输入端口，则返回true。\r\n","android.location.GnssClock.hasBiasUncertaintyNanos()":"android.location.gnssclock.hasbiasunclenttynanos（）\r\n","android.media.audiofx.AudioEffect.CONTENT_TYPE_GAME":"android.media.audiofx.audioeffect.content_type_game\r\n","Creation mode where audio data is transferred from Java to the native layer\n only once before the audio starts playing.":"创建模式，其中音频数据从Java传输到本地层\r\n 音频开始播放之前只有一次。\r\n","if provisioning is needed":"如果需要配置\r\n","Retrieves the destination address and prefix length in the form of an ":"以一种形式检索目标地址和前缀长度\r\n","Noise Suppressor (NS).":"噪声抑制器（NS）。\r\n","android.hardware.camera2.CaptureResult.SCALER_CROP_REGION":"android.hardware.camera2.captureresult.scaler_crop_region\r\n","F:Android.Media.MediaRecorder+InfoEventArgs..ctor":"f：android.media.mediarecorder+infoeventargs..ctor\r\n","Returns the ID of the track.":"返回轨道的ID。\r\n","android.hardware.camera2.CaptureFailure.getPhysicalCameraId()":"android.hardware.camera2.capturefailure.getPhysicalCameraid（）\r\n","android.media.MediaPlayer.setOnCompletionListener(android.media.OnCompletionListener)":"android.media.mediaplayer.setonCompletionListener（android.media.oncompletionListener）\r\n","Asks the virtual display to resize.":"询问要调整大小的虚拟显示。\r\n","android.media.midi.MidiDeviceStatus.getDeviceInfo()":"android.media.midi.mididevicestatus.getDeviceInfo（）\r\n","android.media.MediaRouter.clearUserRoutes()":"android.media.mediarouter.clearuserroutes（）\r\n","CaptureRequest#CONTROL_AF_MODE android.control.afMode":"capturerequest＃control_af_mode android.control.afmode\r\n","Recovers a ":"恢复a\r\n","Set an effect listener.":"设置效果侦听器。\r\n","android.hardware.camera2.params.OisSample":"android.hardware.camera2.params.oissample\r\n","High-level global contrast/gamma/tonemapping control.":"高级全局对比度/γ/ToneMapping控件。\r\n","#SCRAMBLE_CONTROL_RESERVED":"#scramble_control_reserved\r\n","Implement this to do your drawing.":"实施此图纸。\r\n","android.media.AudioManager.PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND":"android.media.audiomanager.property_support_speaker_near_ultrasound\r\n","android.media.RemoteControlClient.PLAYSTATE_SKIPPING_FORWARDS":"android.media.remotecontrolclient.playstate_skipping_forwards\r\n","android.media.tv.TvContract.ACTION_PREVIEW_PROGRAM_ADDED_TO_WATCH_NEXT":"android.media.tv.tvcontract.action_preview_program_added_to_to_watch_next\r\n","Starts recording from the AudioRecord instance.":"开始从Audiorecord实例录制。\r\n","android.media.metrics.PlaybackStateEvent.STATE_PLAYING":"android.media.metrics.playbackstateevent.state_playing\r\n","Determines whether the destination and prefix of this route includes the specified\n address.":"确定该路线的目的地和前缀是否包括指定的\r\n 地址。\r\n","A simple set of metadata for a media item suitable for display.":"一组简单的元数据，适用于适合展示的媒体项目。\r\n","Sets the strength of the bass boost effect.":"设定低音增强效果的强度。\r\n","android.media.session.MediaSession.setFlags(int)":"android.media.session.mediasession.setflags（int）\r\n","android.hardware.biometrics.BiometricPrompt.getTitle()":"android.hardware.biometrics.biometricprompt.getTitle（）\r\n","android.hardware.camera2.params.MultiResolutionStreamConfigurationMap.getInputFormats()":"android.hardware.camera2.params.multiresolutionstreamconfigurationmap.getInputformats（）\r\n","Sets the relative stream volume of this TvView.":"设置此TVView的相对流量。\r\n","The metadata key for the content's user rating.":"内容用户评级的元数据密钥。\r\n","Called when a route is added to a group.":"将路线添加到组时调用。\r\n","android.media.AudioDescriptor.getStandard()":"android.media.audiodescriptor.getStandard（）\r\n"," to the sender":" 向发件人\r\n","#TONE_CDMA_ALERT_AUTOREDIAL_LITE":"#tone_cdma_alert_autoredial_lite\r\n","android.media.AudioDeviceInfo.getType()":"android.media.audiodeviceinfo.getType（）\r\n","android.media.MediaCodecInfo.isVendor()":"android.media.mediacodecinfo.isvendor（）\r\n","android.media.AudioTrack.setPreferredDevice(android.media.AudioDeviceInfo)":"android.media.audiotrack.setpreferreddevice（android.media.audiodeviceinfo）\r\n","Closes server socket.":"关闭服务器插座。\r\n","android.media.audiofx.Equalizer.PARAM_STRING_SIZE_MAX":"android.media.audiofx.equalizer.param_string_size_max\r\n","android.inputmethodservice.InputMethodService.onConfigureWindow(android.view.Window, boolean, boolean)":"android.inputmethodservice.inputmethodservice.onconfigurewindow（android.view.window，boolean，boolean）\r\n","android.hardware.camera2.CaptureResult.CONTROL_AE_STATE":"android.hardware.camera2.captureresult.control_ae_state\r\n","A subtitle that is suitable for display to the user.":"适用于用户显示的字幕。\r\n","The composer of the media.":"媒体的作曲家。\r\n","android.media.MediaParser.PARAMETER_MP3_DISABLE_ID3":"android.media.mediaparser.parameter_mp3_disable_id3\r\n","#SEEK_NEXT_SYNC":"#seek_next_sync\r\n","Gets information of the session with the given id.":"获取具有给定ID的会话信息。\r\n","android.media.MediaFormat.KEY_AAC_DRC_ALBUM_MODE":"android.media.mediaformat.key_aac_drc_album_mode\r\n"," view of the keys contained in this MediaFormat.":" 此媒体形式中包含的键的视图。\r\n","android.media.AudioManager.getVibrateSetting(int)":"android.media.audiomanager.getVibrateSetting（int）\r\n","Returns the current performance mode of the ":"返回当前的性能模式\r\n","Called whenever the properties of an input device have changed since they\n were last queried.":"每当输入设备的属性发生更改以来\r\n 最后查询。\r\n","android.hardware.camera2.CaptureResult.getRequest()":"android.hardware.camera2.captureresult.getrequest（）\r\n","android.os.Build.VERSION_CODES#M":"android.os.build.version_codes＃m\r\n","android.media.MediaMetadataRetriever.setDataSource(android.content.Context, android.net.Uri)":"android.media.mediametadataretriever.setdatasource（android.content.context，android.net.uri）\r\n","android.media.RingtoneManager.getDefaultType(android.net.Uri)":"android.media.ringtonemanager.getDefaultType（android.net.uri）\r\n","android.hardware.camera2.params.SessionConfiguration.SESSION_HIGH_SPEED":"android.hardware.camera2.params.sessionconfiguration.session_high_speed\r\n","android.media.MediaRoute2Info.getVolumeHandling()":"android.media.mediaroute2info.getVolumeHandling（）\r\n","android.hardware.camera2.CameraExtensionSession.capture(android.hardware.camera2.CaptureRequest, java.util.concurrent.Executor, android.hardware.camera2.ExtensionCaptureCallback)":"android.hardware.camera2.cameraextensionsessionsessession.capture（android.hardware.camera2.capturerequest，java.util.concurrent.executor.executor，android.hardware.camera.camera.camera2.extensioncaptensioncaptensioncatensioncapturecallback）\r\n","android.net.LocalSocket.SOCKET_STREAM":"android.net.localsocket.socket_stream\r\n","Returns the current sample's flags.":"返回当前样本的标志。\r\n","android.media.AudioRouting.addOnRoutingChangedListener(android.media.OnRoutingChangedListener, android.os.Handler)":"android.media.audiorouting.addonroutingchangedlistener（android.media.onroutingchangedlistener，android.os.handler）\r\n","Sets whether TS parsing should handle HDMV DTS audio streams.":"设置TS解析是否应处理HDMV DTS音频流。\r\n","android.location.GnssStatus.CONSTELLATION_UNKNOWN":"android.location.gnssstatus.constellation_unknown\r\n","android.hardware.usb.UsbDevice.getInterfaceCount()":"android.hardware.usb.usbdevice.getInterfacecount（）\r\n","android.location.GnssMeasurement.hasFullInterSignalBiasUncertaintyNanos()":"android.location.gnssmeasurement.hasfullintersignalbiasuncuncterntytynanos（）\r\n","android.media.MediaSync.createInputSurface()":"android.media.mediasync.createinputsurface（）\r\n","android.media.MediaCas.SESSION_USAGE_PLAYBACK":"android.media.mediacas.session_usage_playback\r\n","android.hardware.SensorEvent sensor events":"android.hardware.sensorevent传感器事件\r\n","Defines how many sub-components\n            a result will be composed of.":"定义多少个子组件\r\n            结果将由。\r\n","Return the maximum supported HDCP level.":"返回最大支持的HDCP级别。\r\n"," on this link.":" 在此链接上。\r\n","HDCP version 1.":"HDCP版本1。\r\n","android.media.MicrophoneInfo.getGroup()":"android.media.microphoneinfo.getgroup（）\r\n","android.media.SyncParams.setFrameRate(float)":"android.media.syncparams.setframerate（float）\r\n","Gets the information about how volume is handled on the session.":"获取有关会话中如何处理音量的信息。\r\n","android.media.MediaParser.PARSER_NAME_MATROSKA":"android.media.mediaparser.parser_name_matroska\r\n","android.media.MediaDrm.getOpenSessionCount()":"android.media.mediadrm.getopensessioncount（）\r\n","This Beidou measurement's tracking state has D2 bit sync.":"此Beidou测量的跟踪状态具有D2位同步。\r\n","android.media.MicrophoneInfo.getSensitivity()":"android.media.microphoneinfo.getSensitivity（）\r\n","Returns the raw bytes for the value of the requested tag inside the image\n            file, or ":"返回图像中请求标签的值的原始字节\r\n            文件，或\r\n","android.media.MediaDescrambler.descramble(java.nio.ByteBuffer, java.nio.ByteBuffer, android.media.CryptoInfo)":"android.media.MediadeScrambler.descramble（java.nio.bytebuffer，java.nio.bytebuffer，android.media.cryptoinfo）\r\n","An array of optical stabilization (OIS) position samples.":"一系列光学稳定（OIS）位置样品。\r\n","Returns the enabled state of the key feedback popup. -or- Enables or disables the key feedback popup.":"返回密钥反馈弹出式启用状态。 - 或启用或禁用关键反馈弹出窗口。\r\n","android.hardware.SensorAdditionalInfo.TYPE_INTERNAL_TEMPERATURE":"android.hardware.sensoradditionalinfo.type_internal_temperature\r\n","android.media.MediaRouter2.transferTo(android.media.MediaRoute2Info)":"android.media.mediarouter2.transferto（android.media.mediaroute2info）\r\n","android.media.AudioManager.EXTRA_RINGER_MODE":"android.media.audiomanager.extra_ringer_mode\r\n","This class contains methods for managing IPsec sessions.":"此类包含用于管理IPSEC会话的方法。\r\n","android.net.TrafficStats.getUidRxPackets(int)":"android.net.trafficstats.getuidrxpackets（int）\r\n","android.media.MediaRecorder.setPreviewDisplay(android.view.Surface)":"android.media.mediarecorder.setpreviewdisplay（android.view.surface）\r\n","CaptureRequest#SENSOR_FRAME_DURATION android.sensor.frameDuration":"captureRequest＃sensor_frame_duration android.sensor.frameduration\r\n","android.hardware.camera2.CaptureResult.CONTROL_AWB_LOCK":"android.hardware.camera2.captureresult.control_awb_lock\r\n","android.media.tv.TvInputManager.VIDEO_UNAVAILABLE_REASON_INSUFFICIENT_RESOURCE":"android.media.tv.tvinputmanager.video_unavailable_reason_insufficity_resource\r\n","Switch the current capture session and a given set of registered camera surfaces\n            to offline processing mode.":"切换当前捕获会议和给定的一组注册相机表面\r\n            到离线处理模式。\r\n","android.media.tv.TvTrackInfo.getDescription()":"android.media.tv.tvtrackinfo.getDescription（）\r\n","GnssStatus.Callback":"gnssstatus.callback\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_AUTHOR":"android.media.mediametadataretriever.metadata_key_author\r\n","(Pin, Pout)":"（针，p嘴）\r\n","Returns the value of a long key.":"返回长键的值。\r\n"," currently\n            known to the media router.":" 目前\r\n            媒体路由器已知。\r\n","android.media.MediaCodec.PARAMETER_KEY_LOW_LATENCY":"android.media.mediacodec.parameter_key_low_latency\r\n","Deactivate this ":"停用这个\r\n","F:Android.Media.MediaPlayer+IOnInfoListener.OnInfo":"f：android.media.mediaplayer+ioninfolistener.oninfo\r\n","CaptureRequest.Builder#addTarget":"capturerequest.builder＃addtarget\r\n","if an image with an unsupported format was used.":"如果使用具有不支持格式的图像。\r\n","android.view.inputmethod.InputMethodSession.displayCompletions(android.view.inputmethod.CompletionInfo[])":"android.view.inputmethod.inputmethodsession.displaycompletions（android.view.inputmethod.completioninfo []）\r\n","Returns a list of the names of available location providers that satisfy the given criteria.":"返回满足给定标准的可用位置提供商名称的列表。\r\n","#STREAM_SYSTEM":"#Stream_System\r\n","android.mtp.MtpDevice.open(android.hardware.usb.UsbDeviceConnection)":"android.mtp.mtpdevice.open（android.hardware.usb.usbdeviceconnection）\r\n","android.Manifest.permission#INTERNET":"android.manifest.permission＃Internet\r\n","Sets the current playback state and the matching media position for the current playback\n              speed.":"设置当前播放状态和当前播放的匹配媒体位置\r\n              速度。\r\n","maxImages":"最大值\r\n","#TONE_CDMA_LOW_PBX_SLS":"#tone_cdma_low_pbx_sls\r\n","android.media.MediaCodec.BUFFER_FLAG_KEY_FRAME":"android.media.mediacodec.buffer_flag_key_frame\r\n","Specify an offset (in micro-second) to be added on top of the timestamps\n            onward.":"指定要在时间戳顶部添加的偏移（以微秒为单位）\r\n            向前。\r\n"," is\n            made up of.":" 是\r\n            由。\r\n","Sets the audio fallback mode.":"设置音频后备模式。\r\n","android.net.IpSecAlgorithm.AUTH_HMAC_SHA512":"android.net.ipsecalgorithm.auth_hmac_sha512\r\n","android.media.MediaCasException":"android.media.mediacasexception\r\n","Virtual display flag: Create a presentation display.":"虚拟显示标志：创建演示文稿显示。\r\n","android.media.ExifInterface.getAttributeBytes(java.lang.String)":"android.media.exifinterface.getAttributeBytes（java.lang.string）\r\n","Indicates whether network connectivity is possible.":"指示网络连接是否可能。\r\n","android.mtp.MtpDevice.sendObjectInfo(android.mtp.MtpObjectInfo)":"android.mtp.mtpdevice.sendobjectInfo（android.mtp.mtpobjectInfo）\r\n","android.hardware.camera2.CaptureResult.getCameraId()":"android.hardware.camera2.captureresult.getCameraid（）\r\n","Query if a format is specified by the application.":"查询如果应用程序指定格式。\r\n","Identifies an IP address on a network link.":"在网络链接上标识IP地址。\r\n","Indicates this session supports the play/pause toggle command.":"指示此会话支持play/暂停切换命令。\r\n","android.media.CamcorderProfile.audioCodec":"android.media.camcorderprofile.audiocodec\r\n","android.hardware.camera2.CameraExtensionSession.setRepeatingRequest(android.hardware.camera2.CaptureRequest, java.util.concurrent.Executor, android.hardware.camera2.ExtensionCaptureCallback)":"android.hardware.camera2.cameraextensionsessionsessession.setRepeatingRequest（android.hardware.camera.camera2.capturerequest，java.util.util.concurrent.executor.executor，android.hardware.camera2.camera2.extensioncaptensioncapterensioncapturecallecallbackback））\r\n","Sticky broadcast intent action indicating that the Bluetooth SCO audio\n            connection state has changed.":"粘性广播意图动作表明蓝牙SCO音频\r\n            连接状态已更改。\r\n","if a provider with the given name already exists\n":"如果有给定名称的提供商已经存在\r\n\r\n","If the media contains video, this key retrieves its height.":"如果媒体包含视频，则此键会检索其高度。\r\n"," for a codec that is configured\n         in asynchronous mode.":" 对于配置的编解码器\r\n         在异步模式下。\r\n","Handle a request by the system to hide the soft input area.":"处理系统的请求以隐藏软输入区域。\r\n","android.media.MediaMetadata.getBitmapDimensionLimit()":"android.media.mediametadata.getBitMapDimensionLimit（）\r\n","A special location provider for receiving locations without actively initiating a location\n            fix.":"一个特殊的位置提供商，用于接收位置，而无需主动启动位置\r\n            使固定。\r\n"," from the ImageReader's queue, dropping older\n            ":" 从成像领导者的队列，降低了\r\n            \r\n","android.media.MediaDrm.setOnExpirationUpdateListener(android.media.OnExpirationUpdateListener, android.os.Handler)":"android.media.mediadrm.setonexpirationupdateListener（android.media.onexpirationupdateListener，android.os.os.handler）\r\n","#DUAL_MONO_MODE_RR":"#dual_mono_mode_rr\r\n","android.mtp.MtpConstants.OPERATION_GET_OBJECT":"android.mtp.mtpconstants.operation_get_object\r\n","#PLAYSTATE_SKIPPING_FORWARDS":"#playstate_skipping_forwards\r\n","android.hardware.camera2.params.RggbChannelVector.getBlue()":"android.hardware.camera2.params.RggbChannelVector.getBlue()\r\n","android.media.metrics.PlaybackMetrics.getExperimentIds()":"android.media.metrics.playbackmetrics.getExperimentIds（）\r\n","ed again.":"埃德再次。\r\n","trackType":"TractType\r\n"," can be configured concurrently.":" 可以同时配置。\r\n","UsbAccessory":"USBACCOSSORY\r\n","This mode indicates that a stereo stream should be presented\n            with the left and right audio channels blended together\n            and delivered to both channels.":"此模式表明应显示立体声流\r\n            左右音频通道混合在一起\r\n            并交付到两个频道。\r\n","Sets the audio track for MediaSync.":"为MediaSync设置音轨。\r\n","#getTimeUncertaintyNanos()":"#getTime uncterntytynanos（）\r\n","Indicates that the sample should be decoded but not rendered.":"表示样品应解码但不渲染。\r\n","Effect connection mode is pre processing.":"效应连接模式是预处理。\r\n","This input method will not consume the back key.":"此输入方法不会消耗后键。\r\n","android.hardware.camera2.CameraCharacteristics.REQUEST_PIPELINE_MAX_DEPTH":"android.hardware.camera2.cameracharacteristics.request_pipeline_max_depth\r\n","android.media.MediaFormat.KEY_ENCODER_DELAY":"android.media.mediaformat.key_encoder_delay\r\n","android.view.inputmethod.InputMethodSession.viewClicked(boolean)":"android.view.inputmethod.inputmethodsession.viewclicked（布尔值）\r\n","Retrieves the ID of the storage unit containing the given object on the device.":"检索设备上包含给定对象的存储单元的ID。\r\n","android.media.MediaExtractor.setLogSessionId(android.media.metrics.LogSessionId)":"android.media.mediaextractor.setLogsessionId（android.media.metrics.logsessionid）\r\n","Returns the level in dB of the maximum SPL supported by the device at 1000Hz.":"返回设备支撑在1000Hz的最大SPL的DB中的水平。\r\n","android.mtp.MtpObjectInfo.getImagePixWidth()":"android.mtp.mtpobjectInfo.getImagePixWidth（）\r\n","android.location.GnssClock.getBiasUncertaintyNanos()":"android.location.gnssclock.getBiasunclenttynanos（）\r\n","if no provider with the given name exists":"如果没有给定名称的提供商\r\n","android.media.MediaRouter2.registerTransferCallback(java.util.concurrent.Executor, android.media.TransferCallback)":"android.media.mediarouter2.RegisterTransferCallback（java.util.concurrent.executor，android.media.transfercallback）\r\n","android.mtp.MtpObjectInfo.getSequenceNumberLong()":"android.mtp.mtpobjectInfo.getSequencenumberlong（）\r\n","android.media.MediaDrm.clearOnSessionLostStateListener()":"android.media.mediadrm.clearressessionloststatelistener（）\r\n","android.media.MediaMetadataEditor.RATING_KEY_BY_USER":"android.media.mediametadataeditor.rating_key_by_user\r\n","android.media.MediaParser.supportsParameter(java.lang.String)":"android.media.mediaparser.supportsparameter（java.lang.string）\r\n","Keyboard":"键盘\r\n","android.hardware.camera2.CameraDevice.createConstrainedHighSpeedCaptureSession(java.util.List, android.hardware.camera2.StateCallback, android.os.Handler)":"android.hardware.camera2.CameradeVice.CreateConconnainedHighSpeedCapturesession（java.util.list，android.hardware.camera.camera2.statecallback，android.os.handler）\r\n","#TONE_CDMA_MED_SSL":"#TONE_CDMA_MED_SSL\r\n","Gets information about a logical display.":"获取有关逻辑显示的信息。\r\n","A constant describing a linear acceleration sensor type.\n See ":"描述线性加速度传感器类型的常数。\r\n 见 \r\n","<li> ":"<li>\r\n","Invoked when the application is revoked.":"吊销应用程序时调用。\r\n","ParameterDescriptor":"parameterDescriptor\r\n","android.media.MediaPlayer.setDataSource(android.content.Context, android.net.Uri, java.util.Map, java.util.List)":"android.media.mediaplayer.setdatasource（android.content.context，android.net.uri，java.util.map，java.util.list）\r\n","android.media.AudioPresentation.getPresentationId()":"android.media.audiopersentation.getPresentationId（）\r\n","A key describing the AAC SBR mode to be used (AAC audio formats only).":"描述要使用的AAC SBR模式的键（仅AAC音频格式）。\r\n","android.location.GnssMeasurement.STATE_GLO_TOD_KNOWN":"android.location.gnssmeasurement.state_glo_tod_known\r\n","android.media.AudioTrack.AudioTrack(int, int, int, int, int, int)":"android.media.audiotrack.audiotrack（int，int，int，int，int，int，int）\r\n","System#DEFAULT_ALARM_ALERT_URI":"系统＃default_alarm_alert_uri\r\n","android.media.ExifInterface.TAG_DEVICE_SETTING_DESCRIPTION":"android.media.exifinterface.tag_device_setting_description\r\n","android.media.AudioRecordingConfiguration.getClientEffects()":"android.media.audiorecordingConfiguration.getClientFects（）\r\n","Indicates this session supports the prepare from search command.":"指示此会话支持搜索命令的准备。\r\n","True if this location has a horizontal accuracy.":"如果此位置具有水平准确性，则为true。\r\n","The new ringer mode.":"新的铃声模式。\r\n","android.media.AudioDeviceInfo.getProductName()":"android.media.audiodeviceinfo.getProductName（）\r\n","android.view.inputmethod.InputMethod.SERVICE_META_DATA":"android.view.inputmethod.inputmethod.service_meta_data\r\n","Remove an app-specified route for media from the MediaRouter.":"从Mediarouter中删除用于媒体的应用指定路由。\r\n","Metadata describing the structure of a (at least partially) encrypted\n input sample.":"元数据描述了（至少部分）加密的结构\r\n 输入样本。\r\n","if any of the arguments were null\n":"如果有任何论点为无效\r\n\r\n","android.media.MediaSync.getSyncParams()":"android.media.mediasync.getsyncparams（）\r\n","android.media.effect.EffectFactory.EFFECT_POSTERIZE":"android.media.effect.effectfactory.effect_posterize\r\n","android.hardware.lights.Light.LIGHT_TYPE_MICROPHONE":"android.hardware.lights.light.light_type_microphone\r\n","android.media.MediaScannerConnection.connect()":"android.media.mediascannerconnection.connect（）\r\n","android.media.tv.TvInputManager.VIDEO_UNAVAILABLE_REASON_CAS_BLACKOUT":"android.media.tv.tvinputmanager.video_unavailable_reason_cas_blackout\r\n","Applies a cross process effect on image, in which the red and green channels are\n            enhanced while the blue channel is restricted.":"对图像应用跨过程效应，其中红色和绿色通道为\r\n            蓝色通道受到限制时增强。\r\n","android.hardware.camera2.CaptureRequest.JPEG_THUMBNAIL_QUALITY":"android.hardware.camera2.capturerequest.jpeg_thumbnail_quality\r\n","Preset.":"预设。\r\n","AudioEffect.Descriptor":"AudioEffect.Descriptor\r\n","The user does not have any biometrics enrolled.":"用户没有注册任何生物识别信息。\r\n","android.media.AudioRecord.read(byte[], int, int, int)":"android.media.audiorecord.read（byte []，int，int，int）\r\n","#FLAG_KEY_MEDIA_PLAY_PAUSE":"#flag_key_media_play_pause\r\n","F:Android.Media.MediaRecorder.SetAudioEncoder":"F：android.media.mediarecorder.setaudioencoder\r\n","s this device contains.":"S此设备包含。\r\n","android.media.MediaMetadata.getLong(java.lang.String)":"android.media.mediametadata.getlong（java.lang.string）\r\n","if the mimeType is not supported.":"如果不支持模拟型。\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_VIDEO_SNAPSHOT":"android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_VIDEO_SNAPSHOT\r\n","android.media.MicrophoneInfo.getIndexInTheGroup()":"android.media.microphoneinfo.getIndexinthegroup（）\r\n","Query if a certain CA system is supported on this device.":"查询如果该设备上支持某个CA系统。\r\n","Gets the id of the session.":"获取会话的ID。\r\n","#ACTION_USB_DEVICE_DETACHED":"#action_usb_device_detached\r\n"," count.":" 数数。\r\n"," for MediaExtractor.":" 用于MediaExtractor。\r\n","LinkAddress":"linkaddress\r\n","android.media.ExifInterface#ORIENTATION_ROTATE_90":"android.media.exifinterface＃orientation_rotate_90\r\n","A quality constant indicating a location provider may choose to satisfy this request by\n            equally balancing power and accuracy constraints.":"质量常数，表明位置提供商可以选择满足此请求\r\n            同样平衡力量和准确性约束。\r\n","android.media.tv.TvRecordingClient.tune(java.lang.String, android.net.Uri)":"android.media.tv.tvrecordingclient.tune（java.lang.string，android.net.uri）\r\n","Creates a context within the current GL context.":"在当前GL上下文中创建上下文。\r\n","Registers a GNSS navigation message callback which will run on a binder thread.":"注册A将在活页夹线程上运行的GNSS导航消息回调。\r\n","This GNSS measurement's tracking state has sub-frame sync.":"该GNSS测量的跟踪状态具有子帧同步。\r\n","android.media.tv.TvView.setZOrderOnTop(boolean)":"android.media.tv.tview.setzorderontop（boolean）\r\n","android.net.IpSecAlgorithm.AUTH_AES_XCBC":"android.net.ipsecalgorithm.auth_aes_xcbc\r\n","Android.Media.AudioFormat.CHANNEL_OUT_FRONT_LEFT":"android.media.audioformat.channel_out_front_left\r\n","InlineSuggestionsResponse":"InlineSuggestionsResponse\r\n"," object which is used to clear any existing session ID.":" 用于清除任何现有会话ID的对象。\r\n","android.media.AudioPresentation.MASTERED_FOR_SURROUND":"android.media.audiopersentation.mastered_for_surround\r\n","android.mtp.MtpConstants.OPERATION_SEND_OBJECT_INFO":"android.mtp.mtpconstants.operation_send_object_info\r\n","Returns the width of the video, in the unit of pixels.":"在像素单元中返回视频的宽度。\r\n","Called when the supplied route becomes selected as the active route\n for the given route type.":"当提供的路线被选为活动路线时，调用\r\n 对于给定的路线类型。\r\n","android.media.MediaDescription.BT_FOLDER_TYPE_GENRES":"android.media.mediaDescription.bt_folder_type_genres\r\n","android.inputmethodservice.InputMethodService.onShowInputRequested(int, boolean)":"android.inputmethodservice.inputmethodservice.onshowinputrequested（int，boolean）\r\n","android.media.tv.TvInputService.PRIORITY_HINT_USE_CASE_TYPE_RECORD":"android.media.tv.tvinputservice.priority_hint_use_case_type_record\r\n","android.hardware.location.GeofenceHardware.addGeofence(int, int, android.hardware.location.GeofenceHardwareRequest, android.hardware.location.GeofenceHardwareCallback)":"android.hardware.location.geofencehardware.Addgeofence（int，int，android.hardware.location.geofencehardwarerequest，android.hardware.location.location.geofencehardwarecallback）\r\n","Returns true if a camcorder profile exists for the given camera at\n            the given quality level.":"如果在给定相机上存在摄像机配置文件，则返回true\r\n            给定的质量水平。\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_IO_NETWORK_CONNECTION_FAILED":"android.media.metrics.playbackerrorevent.error_io_network_connection_failed\r\n","android.media.MediaDrm.PROPERTY_VERSION":"android.media.mediadrm.property_version\r\n","Register a callback to be invoked when an info/warning is available.":"注册一个可用信息/警告时调用的回调。\r\n","Return whether the fullscreen extract view is shown. -or- Controls the visibility of the extracted text area.":"返回是否显示全屏提取物视图。 - 或控制提取的文本区域的可见性。\r\n","android.hardware.camera2.params.RggbChannelVector":"android.hardware.camera2.params.RggbChannelVector\r\n","android.location.LocationManager.requestSingleUpdate(android.location.Criteria, android.app.PendingIntent)":"android.location.LocationManager.RequestSingLeupdate（android.location.Criteria，android.app.pendingIntent）\r\n","android.hardware.input.InputManager.getMaximumObscuringOpacityForTouch()":"android.hardware.input.inputmanager.getMaximumObscuringOpcityForcation Forthouch（）\r\n","android.media.MediaSession2Service.addSession(android.media.MediaSession2)":"android.media.mediasession2Service.Addsession（android.media.mediasession2）\r\n","android.hardware.camera2.params.InputConfiguration.getWidth()":"android.hardware.camera2.params.inputconfiguration.getWidth（）\r\n","android.hardware.camera2.CameraOfflineSession":"android.hardware.camera2.CameraOfflineSession\r\n","Call this after dequeueOutputBuffer signals a format change by returning\n            ":"在DequeUeOutputBuffer信号之后致电该格式通过返回的格式更改\r\n            \r\n","android.hardware.biometrics.BiometricPrompt.isConfirmationRequired()":"android.hardware.biometrics.biometricprompt.isconfirmationrequired（）\r\n","AudioTrack#PERFORMANCE_MODE_POWER_SAVING":"audiotrack＃performance_mode_power_saving\r\n","android.media.metrics.PlaybackStateEvent.STATE_PAUSED_BUFFERING":"android.media.metrics.playbackstateevent.state_paused_buffering\r\n","ARIB STD-B67 hybrid-log-gamma transfer function.":"ARIB STD-B67杂交型γ传递函数。\r\n","Band center frequency.":"带中心频率。\r\n","android.media.RoutingSessionInfo.getVolume()":"android.media.routingsessioninfo.getvolume（）\r\n","#setOutputFile":"#SetOutputfile\r\n","android.media.MediaRoute2Info.getName()":"android.media.mediaroute2info.getName（）\r\n","Return the time of this fix in nanoseconds of elapsed realtime since system boot. -or- Set the time of this fix, in elapsed realtime since system boot.":"自系统启动以来，在经过的实时的纳米秒中返回此修复程序的时间。 - 或 - 设置此修复程序的时间，自系统启动以来经过实时的实时。\r\n","android.media.MediaFormat.KEY_ROTATION":"android.media.mediaformat.key_rotation\r\n","Time lapse quality level corresponding to the QHD (2560 x 1440) resolution.":"时间失误质量水平对应于QHD（2560 x 1440）分辨率。\r\n","android.media.ExifInterface.TAG_ISO":"android.media.exifinterface.tag_iso\r\n","A constant describing a hinge angle sensor.":"描述铰链角传感器的常数。\r\n","Retrieves the current preferred network type.":"检索当前的首选网络类型。\r\n","android.hardware.camera2.params.MandatoryStreamCombination.getStreamsInformation()":"android.hardware.camera2.params.mandatorystreamcombination.getStreamSinformation（）\r\n","This is the default sensor pixel mode.":"这是默认传感器像素模式。\r\n","Returns the maximum capture rate for the callback capture method.":"返回回调捕获方法的最大捕获率。\r\n","android.location.GnssStatus.usedInFix(int)":"android.location.gnssstatus.usedinfix（int）\r\n","android.hardware.lights.LightsManager.openSession()":"android.hardware.lights.lightsmanager.opensession（）\r\n","This is called during layout when the size of this view has changed.":"当此视图的大小发生变化时，这是在布局中调用的。\r\n","android.media.audiofx.Visualizer.ERROR_DEAD_OBJECT":"android.media.audiofx.visualizer.Error_dead_Object\r\n","Construct an AsyncPlayer object.":"构建一个异步播放器对象。\r\n","This mode indicates that a stereo stream should be presented\n            with the left audio channel replicated into the right audio channel.":"此模式表明应显示立体声流\r\n            左音频频道将其复制到右音频频道中。\r\n"," instance to this AudioTrack for metrics collection.":" 实例向这个Audiotrack进行指标集合。\r\n","Bundle key for the device's corresponding USB device.":"设备相应的USB设备的捆绑键。\r\n","Defines a capture mode where the playback volume will affect (scale) the range of the\n captured data. ":"定义捕获模式，其中播放卷将影响（比例）\r\n 捕获的数据。\r\n","android.media.effect.EffectContext.createWithCurrentGlContext()":"android.media.effect.effectContext.CreateWithCurrentGlContext（）\r\n","Constructs a new Criteria object that is a copy of the given criteria.":"构建一个新标准对象，该对象是给定标准的副本。\r\n","Get the MultiResolutionStreamInfo describing the ImageReader an image originates from":"获取描述图像的图像启发图像辅导器的多曲线图\r\n","#TONE_CDMA_HIGH_PBX_S_X4":"＃tone_cdma_high_pbx_s_x4\r\n","android.media.ApplicationMediaCapabilities.isFormatSpecified(java.lang.String)":"android.media.applicationMediacapabilities.isformatspecifiend（java.lang.string）\r\n","#TONE_PROP_PROMPT":"#TONE_PROP_PROMPT\r\n","android.mtp.MtpConstants.OPERATION_SET_OBJECT_PROTECTION":"android.mtp.mtpconstants.operation_set_object_protection\r\n","Create a new DNG object.":"创建一个新的DNG对象。\r\n","Operation code for CloseSession":"关闭操作代码\r\n","Immutable class to store a 4-element vector of floats indexable by a bayer RAW 2x2 pixel block.":"不可变类，用于存储可由拜耳 RAW 2x2 像素块索引的 4 元素浮点向量。\r\n","android.media.MediaMetadataRetriever.getScaledFrameAtTime(long, int, int, int)":"android.media.mediametadataretriever.getscaledframeattime（长，int，int，int）\r\n","android.location.Address.setCountryName(java.lang.String)":"android.location.Address.setCountryname（java.lang.string）\r\n","android.location.provider.ProviderProperties.hasCellRequirement()":"android.location.provider.providerproperties.hascellrequirement（）\r\n","A key describing the plane height of a multi-planar (YUV) video bytebuffer layout.":"描述多平面（YUV）视频字节布置布局的平面高度的键。\r\n","android.location.GnssAntennaInfo.getPhaseCenterVariationCorrections()":"android.location.gnssantennainfo.get plosecentervariationCorrections（）\r\n","Whether auto-white balance (AWB) is currently setting the color\n            transform fields, and what its illumination target\n            is.":"自动白余额（AWB）当前是否正在设置颜色\r\n            变换字段，其照明目标\r\n            是。\r\n","android.media.MediaScannerConnection.onServiceDisconnected(android.content.ComponentName)":"android.media.mediascannerconnection.servicedisconnected（android.content.componentname）\r\n","A key describing the boost factor allowing to adapt the dynamics of the output to the\n            actual listening requirements.":"描述增强因子的键，允许将输出的动力学调整到\r\n            实际听力要求。\r\n","android.media.midi.MidiDeviceInfo.getId()":"android.media.midi.midideviceinfo.getID（）\r\n","android.media.tv.TvRecordingClient.pauseRecording()":"android.media.tv.tvrecordingclient.pauserecording（）\r\n","if an error occurs while attempting to decrypt the buffer.\n              An error code associated with the exception helps identify the\n              reason for the failure.\n":"如果在试图解密缓冲区时发生错误。\r\n              与异常关联的错误代码有助于确定\r\n              失败的原因。\r\n\r\n","android.media.AudioManager.setStreamVolume(int, int, int)":"android.media.audiomanager.setstreamvolume（int，int，int）\r\n","A matrix that transforms white balanced camera colors from the reference\n            sensor colorspace to the CIE XYZ colorspace with a D50 whitepoint.":"一个矩阵，可以从参考中转换白色平衡的相机颜色\r\n            传感器Colorspace到CIE XYZ Colorspace带有D50 WhitePoint的Colorspace。\r\n","DVB CSA 3 in fully enhanced mode.":"DVB CSA 3以完全增强的模式。\r\n","android.mtp.MtpDevice.getStorageInfo(int)":"android.mtp.mtpdevice.getStorageinfo（int）\r\n","After successfully configuring the component, call ":"成功配置组件后，请致电\r\n","android.hardware.display.DeviceProductInfo.getManufactureYear()":"android.hardware.display.deviceproductinfo.getManufactureyear（）\r\n","android.mtp.MtpDeviceInfo.isOperationSupported(int)":"android.mtp.mtpdeviceinfo.isoperationsupported（int）\r\n","Duration from start of frame exposure to\n            start of next frame exposure.":"从框架开始持续到持续时间\r\n            下一个框架曝光的开始。\r\n","android.media.session.PlaybackState.STATE_FAST_FORWARDING":"android.media.session.playbackstate.state_fast_forwarding\r\n","android.location.GnssMeasurementRequest.isFullTracking()":"android.location.gnssmeasurementrequest.isfulltracking（）\r\n","Register a callback to be notified of audio recording changes through\n            ":"注册回调，以通知通过\r\n            \r\n","android.hardware.camera2.params.StreamConfigurationMap.getInputFormats()":"android.hardware.camera2.params.streamconfigurationmap.getInputformats（）\r\n","Create a new MediaController from a session's token.":"从会话的令牌创建一个新的MediaController。\r\n","GeofenceHardware#GEOFENCE_ERROR_INVALID_TRANSITION":"geofencehardware＃geofence_error_invalid_transition\r\n","Returns the format code for the MTP object":"返回MTP对象的格式代码\r\n","This key request type specifies that the keys will be for offline use, they\n will be saved to the device for use when the device is not connected to a network.":"此密钥请求类型指定键将用于离线使用，它们\r\n 当设备未连接到网络时，将保存到设备中供设备使用。\r\n","android.media.AudioRecordingConfiguration.isClientSilenced()":"android.media.audiorecordingConfiguration.isclients（）\r\n","if no suitable permission is present":"如果没有合适的许可\r\n"," to receive notifications of\n            routing changes on this AudioRecord.":" 接收通知\r\n            该Audiorecord上的路由更改。\r\n","android.media.MediaDrm.PROPERTY_DESCRIPTION":"android.media.mediadrm.property_description\r\n","android.media.AudioPlaybackConfiguration":"android.media.audioplaybackconfiguration\r\n","android.media.RingtoneManager.ACTION_RINGTONE_PICKER":"android.media.ringtonemanager.action_ringtone_picker\r\n","android.hardware.camera2.params.Face.getScore()":"android.hardware.camera2.params.face.getScore（）\r\n","android.inputmethodservice.InputMethodService.getTextForImeAction(int)":"android.inputmethodservice.inputmethodservice.getTextforimeaction（int）\r\n","android.hardware.GeomagneticField":"android.hardware.Geomagneticfield\r\n","Retrieve the tag for this request, if any.":"检索此请求的标签（如果有）。\r\n","android.location.LocationManager.removeGpsStatusListener(android.location.Listener)":"android.location.LocationManager.RemoveGpsStatusListener（android.location.listener）\r\n","android.hardware.SensorManager.LIGHT_CLOUDY":"android.hardware.sensormanager.light_cloudy\r\n","DVB Common IPTV Software-oriented Scrambling Algorithm (CISSA) Version 1.":"DVB通用IPTV软件的拼凑算法（CISSA）版本1。\r\n","android.media.session.MediaSession.setPlaybackToRemote(android.media.VolumeProvider)":"android.media.session.mediasession.setplaybacktoremote（android.media.volumeprovider）\r\n","This key retrieves the location information, if available.":"此键将检索位置信息（如果有）。\r\n","Report a problem network to the framework.":"向框架报告问题网络。\r\n","android.hardware.location.GeofenceHardwareRequest.getLongitude()":"android.hardware.location.geofencehardwarerequest.getLongitude（）\r\n","Returns a unique ID for this TV input.":"返回此电视输入的唯一ID。\r\n","Default playback position synchronization mode where the RemoteControlClient is not\n            asked regularly for its playback position to see if it has drifted from the estimated\n            position.":"默认播放位置同步模式，其中remotecontrolclient不是\r\n            定期询问其播放位置，以查看它是否从估计的\r\n            位置。\r\n","Returns a Set containing the Strings used as keys in this metadata.":"返回包含此元数据中用作键的字符串的集合。\r\n","Returns the latitude of this geofence.":"返回该地理林的纬度。\r\n","android.net.SSLCertificateSocketFactory.getInsecure(int, android.net.SSLSessionCache)":"android.net.sslcertificatesocketFactory.getInsecure（int，android.net.sslsessioncache）\r\n","android.media.RingtoneManager.EXTRA_RINGTONE_SHOW_DEFAULT":"android.media.ringtonemanager.extra_ringtone_show_default\r\n","android.media.MicrophoneInfo.LOCATION_MAINBODY":"android.media.microphoneinfo.location_mainbody\r\n","android.net.SSLSessionCache.SSLSessionCache(java.io.File)":"android.net.sslsessioncache.sslsessioncache（java.io.file）\r\n","Scene change is not detected within the AF region(s).":"在AF区域内未检测到场景变化。\r\n","If the given latitude or longitude is out\n of range.":"如果给定的纬度或经度不在\r\n 范围。\r\n","Unknown microphone directionality.":"未知麦克风方向性。\r\n","#clear()":"＃清除（）\r\n","android.media.AudioPresentation.hasAudioDescription()":"android.media.audiopersentation.hasaudiodescription（）\r\n","3G network":"3G网络\r\n"," instance for it to receive media\n            metadata updates and playback state information from applications using\n            ":" 实例接收媒体\r\n            元数据更新和播放状态信息来自应用程序的信息\r\n            \r\n","A color transform matrix to use to transform\n            from sensor RGB color space to output linear sRGB color space.":"颜色转换矩阵用于转换\r\n            从传感器RGB颜色空间到输出线性SRGB颜色空间。\r\n","Returns the configured audio sink sample rate in Hz.":"将配置的音频接收器采样率返回Hz。\r\n","android.media.AudioRouting":"android.media.audioruting\r\n","android.mtp.MtpConstants.OPERATION_RESET_DEVICE":"android.mtp.mtpconstants.operation_reset_device\r\n","Indicates this session supports the prepare from URI command.":"指示此会话支持URI命令的准备。\r\n","if provider is null or doesn't exist\n on this device":"如果提供商为null或不存在\r\n 在此设备上\r\n","android.media.audiofx.HapticGenerator.isAvailable()":"android.media.audiofx.hapticgenerator.isavailable（）\r\n","Interface for notifying clients of the result of scanning a\n requested media file.":"通知客户扫描结果的接口\r\n 请求的媒体文件。\r\n","if intent is null\n":"如果意图为无效\r\n\r\n","Returns whether the provider must provide speed information. -or- Indicates whether the provider must provide speed information.":"返回提供商是否必须提供速度信息。 - 或指示提供商是否必须提供速度信息。\r\n","If the path is invalid.\n":"如果路径无效。\r\n\r\n","#TONE_SUP_CONFIRM":"#tone_sup_confirm\r\n","View#GONE View.GONE":"查看＃gone view.gone\r\n","Indicates this is a network that has the ability to reach a carrier's\n Initial Attach servers.":"表明这是一个能够到达运营商的网络\r\n 初始附加服务器。\r\n","Called when only the candidates view has been shown for showing\n            processing as the user enters text through a hard keyboard.":"仅显示候选人视图以显示\r\n            当用户通过硬键盘输入文本时进行处理。\r\n"," is available.":" 可用。\r\n","A key describing the MPEG-H stream reference channel layout.":"描述MPEG-H流参考通道布局的密钥。\r\n","Invalid audio channel mask":"无效的音频频道面具\r\n","android.media.tv.TvView.onUnhandledInputEvent(android.view.InputEvent)":"android.media.tv.tview.onunhandledinputevent（android.view.inputevent）\r\n","MediaFormat#KEY_MIME":"MediaFormat＃key_mime\r\n","BitmapParams":"Bitmapparams\r\n","android.media.MediaDrm.getSecureStops()":"android.media.mediadrm.getSecurestops（）\r\n","The channel contains processed audio from this microphone and possibly another microphone.":"该通道包含来自该麦克风和可能另一个麦克风的经过处理的音频。\r\n","Applies all of the metadata changes that have been set since the MediaMetadataEditor instance\n            was created or since ":"应用自MediaMetadataeditor实例以来已设置的所有元数据更改\r\n            是创建或从那以后\r\n","This method starts the playback of a tone of the specified type.":"此方法启动了指定类型的音调的播放。\r\n","Find an encoder supporting a given ":"找到支持给定的编码器\r\n","android.media.RingtoneManager.stopPreviousRingtone()":"android.media.ringtonemanager.stoppreviousringtone（）\r\n","android.hardware.camera2.params.TonemapCurve.LEVEL_BLACK":"android.hardware.camera2.params.tonemapcurve.level_black\r\n","This Galileo measurement's tracking state has E1B/C code lock.":"该Galileo测量的跟踪状态具有E1B/C代码锁。\r\n","android.hardware.SensorManager.unregisterListener(android.hardware.SensorEventListener)":"机器人。硬件。SensorManager。unregisterListener（android。硬件。SensorEventListener）\r\n","CaptureRequest#SCALER_ROTATE_AND_CROP android.scaler.rotateAndCrop":"capturerequest＃scaler_rotate_and_crop android.scaler.rotateandcrop\r\n","An array of mandatory concurrent stream combinations.":"一系列强制性并发流组合。\r\n","android.media.AudioRecord.read(java.nio.ByteBuffer, int)":"android.media.audiorecord.read（java.nio.bytebuffer，int）\r\n","Rating constant denoting unrated content.":"评级不断表示未显示的内容。\r\n","Release the resources that are held by the effect.":"释放效果持有的资源。\r\n","F:Android.Media.MediaCodec.SetVideoScalingMode":"F：android.media.mediacodec.setVidesoscalingmode\r\n","This is called when, while currently displayed in extract mode, the\n            current input target changes.":"当当前以提取模式显示时，这就是称为\r\n            当前输入目标变化。\r\n","android.hardware.camera2.CaptureResult.COLOR_CORRECTION_TRANSFORM":"android.hardware.camera2.captureresult.color_correction_transform\r\n","Create a new camera capture session by providing the target output set of Surfaces and\n            its corresponding surface configuration to the camera device.":"通过提供表面的目标输出集，创建一个新的相机捕获会话\r\n            其相应的表面配置与相机设备。\r\n","#setThreadStatsTag(int)":"#SetThreadStatStag（int）\r\n","Diffusion.":"扩散。\r\n","AudioManager#registerRemoteControlClient(RemoteControlClient)":"听众＃registerRemotecontrolclient（remotecontrolclient）\r\n","android.media.MediaMetadata.METADATA_KEY_COMPILATION":"android.media.mediametadata.metadata_key_compilation\r\n","Get information about each stream in the mandatory combination.":"在强制组合中获取有关每个流的信息。\r\n","android.hardware.display.DeviceProductInfo.CONNECTION_TO_SINK_DIRECT":"android.hardware.display.deviceproductinfo.connection_to_sink_direct\r\n","RingtoneManager":"Ringtonemanager\r\n","android.hardware.display.DisplayManager.getDisplay(int)":"android.hardware.display.displaymanager.getDisplay（int）\r\n","Encapsulation format is defined in standard IEC 61937.":"封装格式在标准IEC 61937中定义。\r\n","The accuracy of this event.":"此事件的准确性。\r\n","Gets a variable number of parameter values from audio hardware.":"从音频硬件获取可变数量的参数值。\r\n","android.hardware.display.DeviceProductInfo.CONNECTION_TO_SINK_TRANSITIVE":"android.hardware.display.deviceproductinfo.connection_to_sink_transistive\r\n","AudioPresentation":"听力抑制\r\n","android.hardware.camera2.CaptureRequest.COLOR_CORRECTION_MODE":"android.hardware.camera2.capturerequest.color_correction_mode\r\n","android.media.AudioManager.getAvailableCommunicationDevices()":"android.media.audiomanager.getAvailableCommunicationDevices（）\r\n","A key for applications to opt out of allowing\n            a Surface to discard undisplayed/unconsumed frames\n            as means to catch up after falling behind.":"应用程序选择退出的关键\r\n            丢弃未播放/未耗时框架的表面\r\n            作为跌倒后赶上的手段。\r\n","Request that any soft input part of the input method be hidden from the user.":"要求将输入方法的任何软输入部分隐藏在用户中。\r\n","android.media.SoundPool.play(int, float, float, int, int, float)":"android.media.soundpool.play（int，float，float，int，int，int，float）\r\n","android.media.tv.TvContentRating.getRatingSystem()":"android.media.tv.tvcontentrating.getratingsystem（）\r\n","Indicates this session supports the fast forward command.":"指示此会话支持快进命令。\r\n","Gets a value indicating the 'multipath' state of the event.":"获取指示事件的“多路径”状态的值。\r\n","android.media.metrics.MediaMetricsManager.createRecordingSession()":"android.media.metrics.mediametricsmanager.createcordingsession（）\r\n","A camera capture session that enables access to device-specific camera extensions, which\n            often use multi-frame bursts and sophisticated post-process algorithms for image capture.":"一个摄像机捕获会话，可访问设备特定的相机扩展名，\r\n            通常，使用多帧突发和复杂的后进程算法进行图像捕获。\r\n","Called whenever an input device has been removed from the system.":"每当从系统中删除输入设备时，都会调用。\r\n","android.media.AudioDeviceInfo.getEncodings()":"android.media.audiodeviceinfo.getencodings（）\r\n","Get the minimum ":"获取最低限度\r\n","android.location.SettingInjectorService.onGetEnabled()":"android.location.setTingInjectorService.ongetEnabled（）\r\n","Called when the user presses a key.":"当用户按键时调用。\r\n","android.media.AudioManager.registerAudioPlaybackCallback(android.media.AudioPlaybackCallback, android.os.Handler)":"android.media.audiomanager.registeraudioplaybackcallback（android.media.audioplaybackcallback，android.os.handler）\r\n","android.media.MediaDrm.clearOnExpirationUpdateListener()":"android.media.mediadrm.clearonexpirationupdateListener（）\r\n","Represents a passive only request.":"代表仅被动请求。\r\n","android.media.CamcorderProfile.quality":"android.media.camcorderprofile.quality\r\n","android.media.SubtitleData.getData()":"android.media.subtitledata.getData（）（）\r\n","Removes red eyes on specified region.":"在指定区域上去除红色眼睛。\r\n","Class to hold the timed text's metadata, including:\n            <ul>\n            <li> The characters for rendering</li>\n            <li> The rendering position for the timed text</li>\n            </ul>":"持有定时文本的元数据的课程，包括：\r\n            <ul>\r\n            <li>渲染的字符</li>\r\n            <li>定时文本的渲染位置</li>\r\n            </ul>\r\n","Sets the data source (file-path or http URL) to use.":"将数据源（文件路径或HTTP URL）设置为使用。\r\n","android.hardware.SensorManager.getSensors()":"机器人。硬件。SensorManager。getSensors()\r\n","Thrown when parsing a URL fails.":"解析URL失败时抛出。\r\n","android.media.AudioManager.adjustSuggestedStreamVolume(int, int, int)":"android.media.audiomanager.AdjustSuggestedStreamVolume（int，int，int）\r\n","AudioFormat#ENCODING_PCM_8BIT":"AudioFormat＃encoding_pcm_8bit\r\n","CameraExtensionSession#setRepeatingRequest":"cameraxtensionsessessessessessessessessessessessessessessessessessessessessessessessessession\r\n","This must be called when an app has finished performing playback.":"当应用程序完成播放时，必须调用这一点。\r\n","android.hardware.camera2.CaptureResult.SENSOR_RAW_BINNING_FACTOR_USED":"android.hardware.camera2.captureresult.sensor_raw_binning_factor_used\r\n","android.mtp.MtpEvent.EVENT_OBJECT_REFERENCES_CHANGED":"android.mtp.mtpevent.event_object_references_changed\r\n","Sets the\n            <a class=\"external\" href=\"https://tools.":"设置\r\n            <a class =“外部” href =“ https：//工具。\r\n","android.hardware.biometrics.BiometricPrompt.getAllowedAuthenticators()":"android.hardware.biometrics.biometricprompt.getloweredauthenticators（）\r\n","android.media.MediaFormat.KEY_HDR10_PLUS_INFO":"android.media.mediaformat.key_hdr10_plus_info\r\n","Interface definition for a callback to be invoked when the media\n source is ready for playback.":"媒体时要调用回调的接口定义\r\n 来源可以播放。\r\n","Tests if a given integer represents a valid network type.":"测试如果给定的整数表示有效的网络类型。\r\n","android.media.tv.TvInputInfo":"android.media.tv.tvinputinfo\r\n","luminance at night with no moon in lux":"晚上亮度在勒克斯没有月亮\r\n","Value for extra EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE\n            indicating that the SCO audio channel is not established":"额外的extra_sco_audio_state或extra_sco_audio_previous_state的值\r\n            表示未建立SCO音频频道\r\n","android.media.tv.TvContract.AUTHORITY":"android.media.tv.tvcontract.authority\r\n","Returns the unmodifiable sub-rating string ":"返回无法解码的子等级字符串\r\n","android.hardware.camera2.params.OutputConfiguration.OutputConfiguration(android.view.Surface)":"android.hardware.camera2.params.outputconfiguration.outputconfiguration（android.view.surface）\r\n","android.net.TrafficStats.getThreadStatsUid()":"android.net.trafficstats.getthreadstatsuid（）\r\n","android.media.MediaCodecInfo.isSoftwareOnly()":"android.media.mediacodecinfo.issoftwareonly（）\r\n","android.hardware.camera2.CameraMetadata.STATISTICS_OIS_DATA_MODE_ON":"android.hardware.camera2.camerametadata.statistics_ois_data_mode_on\r\n","OutputConfiguration":"输出configuration\r\n","The camera API automatically selects the best concrete value for\n            rotate-and-crop based on the application's support for resizability and the current\n            multi-window mode.":"相机API自动选择最佳的具体值\r\n            根据应用程序对可重复性的支持和电流的支持\r\n            多窗口模式。\r\n","android.media.tv.TvContract.ACTION_PREVIEW_PROGRAM_BROWSABLE_DISABLED":"android.media.tv.tvcontract.action_preview_program_browsable_disabled\r\n","android.media.metrics.PlaybackMetrics.getNetworkTransferDurationMillis()":"android.media.metrics.playbackmetrics.getnetworktransferdurationmillis（）\r\n","android.hardware.SensorManager.GRAVITY_SATURN":"android.hardware.sensormanager.gravity_saturn\r\n","upon DRM error.":"DRM错误。\r\n","android.media.metrics.TrackChangeEvent.TRACK_CHANGE_REASON_ADAPTIVE":"android.media.metrics.trackchangeevent.track_change_reason_adaptive\r\n","Returns the type of a default ":"返回默认的类型\r\n","\n interface.":"\r\n 界面。\r\n","Set the thumbnail image.":"设置缩略图图像。\r\n","Overall mode of 3A (auto-exposure, auto-white-balance, auto-focus) control\n            routines.":"3A的总体模式（自动曝光，自动白色平衡，自动对焦）控制\r\n            例程。\r\n","#TONE_CDMA_HIGH_PBX_SLS":"#tone_cdma_high_pbx_sls\r\n","Returns the indices of the keys that are closest to the given point.":"返回最接近给定点的键的索引。\r\n","Define three quality levels for JPEG image encoding.":"为JPEG图像编码定义三个质量级别。\r\n","Allows you to enumerate available codecs, each specified as a ":"允许您枚举可用的编解码器，每个编解码器指定为\r\n","This class is used for sending and receiving data to and from a MIDI device\n            Instances of this class are created by ":"此类用于发送和从MIDI设备发送和接收数据\r\n            该课程的实例是由\r\n","if not enough metadata information has been\n          set to write a well-formatted DNG file.":"如果没有足够的元数据信息\r\n          设置以编写一个格式良好的DNG文件。\r\n","Computes the approximate distance in meters between two\n locations, and optionally the initial and final bearings of the\n shortest path between them.":"计算两个之间的米大约距离\r\n 位置，以及可选的\r\n 它们之间的最短路径。\r\n","android.hardware.camera2.MultiResolutionImageReader.getStreamInfoForImageReader(android.media.ImageReader)":"android.hardware.camera2.multirestolutionImagereader.getStreamInfoForimagerAgereader（android.media.imagereader）\r\n","Get the read-only list of partial results that compose this total result.":"获取仅读取的部分结果列表，以构成此总结果。\r\n","android.location.LocationManager.addGpsStatusListener(android.location.Listener)":"android.location.locationManager.AddgpSstatuslistener（android.location.listener）\r\n","android.media.AudioProfile.AUDIO_ENCAPSULATION_TYPE_NONE":"android.media.audioprofile.audio_encapsulation_type_none\r\n","This method is called when the user tapped a text view.":"当用户点击文本视图时，该方法被调用。\r\n","Event sent when the GPS system has started.":"GPS系统启动时发送的事件。\r\n","android.hardware.camera2.CaptureResult.CONTROL_AF_TRIGGER":"android.hardware.camera2.captureresult.control_af_trigger\r\n","android.location.GnssNavigationMessage.getType()":"android.location.gnssnavigationmessage.getType（）\r\n","Usage: The buffer will sometimes be written to by the CPU":"用法：缓冲区有时会由CPU写信\r\n","Pause all active streams.":"暂停所有活动流。\r\n","android.media.MediaCodec.start()":"android.media.mediacodec.start（）\r\n","#dequeueOutputBuffer":"#dequeueoutputbuffer\r\n","android.media.MediaParser.PARAMETER_MP4_IGNORE_EDIT_LISTS":"android.media.mediaparser.parameter_mp4_ignore_edit_lists\r\n","Send the private data for the CA system.":"发送CA系统的私人数据。\r\n","android.hardware.camera2.CameraCharacteristics.REQUEST_MAX_NUM_OUTPUT_PROC_STALLING":"android.hardware.camera2.cameracharacteristics.request_max_num_output_proc_stalling\r\n","Returns true if the caller has permission to access the accessory.":"如果呼叫者有权访问附件，则返回true。\r\n","android.location.Address.getCountryName()":"android.location.address.getCountryname（）\r\n","A key describing the maximum expected width of the content in a video\n            decoder format, in case there are resolution changes in the video content.":"描述视频中内容最大预期宽度的键\r\n            解码器格式，以防视频内容有分辨率更改。\r\n","Sets whether Matroska parsing should avoid seeking to the cues element.":"设置Matroska解析是否应避免寻求提示元素。\r\n","android.media.MediaRoute2Info.getVolume()":"android.media.mediaroute2info.getVolume（）\r\n","android.media.JetPlayer.getJetPlayer()":"android.media.jetplayer.getJetplayer（）\r\n","This class provides an interface for apps to manage platform VPN profiles":"此类为应用程序管理平台VPN配置文件提供了一个接口\r\n","android.location.GnssMeasurement.getReceivedSvTimeUncertaintyNanos()":"android.location.gnssmeasurement.getReceivedSVTimeNuncterntyTynanos（）\r\n","android.location.OnNmeaMessageListener":"android.location.onnmeamessagelistener\r\n","#ADJUST_SAME":"#adjust_same\r\n","Start listening to reports when the system's default data network is active, meaning it is\n a good time to perform network traffic.":"当系统的默认数据网络处于活动状态时，开始收听报告，这意味着它是\r\n 执行网络流量的好时机。\r\n","android.media.Session2CommandGroup.getCommands()":"android.media.session2CommandGroup.getCommands（）\r\n","android.hardware.camera2.CameraExtensionCharacteristics.getExtensionSupportedSizes(int, int)":"android.hardware.camera2.CameraExtensionCharacteristics.getExtensionsUpportedSizes（int，int）\r\n"," object; any volume scale due to the\n            ":" 目的;由于\r\n            \r\n","An immutable class to represent a rectangle ":"不变的班级代表矩形\r\n","android.net.TrafficStats":"Android.net.Trafficstats\r\n","Creates ":"创建\r\n","android.hardware.camera2.CaptureRequest.LENS_FOCUS_DISTANCE":"android.hardware.camera2.capturerequest.lens_focus_distance\r\n","android.media.MediaParser.PARSER_NAME_UNKNOWN":"android.media.mediaparser.parser_name_unknown\r\n","android.media.AudioManager.unregisterAudioRecordingCallback(android.media.AudioRecordingCallback)":"android.media.audiomanager.unregisteraudiorecordingcallback（android.media.audiorecordingcallback）\r\n","android.media.MediaRecorder.setMaxFileSize(long)":"android.media.mediarecorder.setmaxfilesize（long）\r\n","android.net.TelephonyNetworkSpecifier":"android.net.telephonynetworkspecifier\r\n","android.net.Ikev2VpnProfile.getProxyInfo()":"android.net.ikev2vpnprofile.getProxyinfo（）\r\n","Defines a capture mode where amplification is applied based on the content of the captured\n data. ":"定义捕获模式，其中根据捕获的内容应用放大\r\n 数据。\r\n","Returns an intent to start the settings activity for this TV input.":"返回目的是启动此电视输入的设置活动。\r\n","#ACTION_USB_ACCESSORY_DETACHED":"#action_usb_accessory_detached\r\n","Returns a comma separated list of keywords for the MTP object":"返回MTP对象的逗号分开的关键字列表\r\n","android.media.midi.MidiInputPort":"android.media.midi.midiinputport\r\n","Returns A device group id that can be used to group together microphones on the same\n            peripheral, attachments or logical groups.":"返回一个设备组ID，该ID可用于将麦克风分组在一起\r\n            外围，附件或逻辑组。\r\n","android.media.MediaDrm.OFFLINE_LICENSE_STATE_USABLE":"android.media.mediadrm.offline_license_state_usable\r\n","Sets the video frame rate hint to be used.":"设置视频框架速率提示要使用。\r\n","android.media.tv.TvInputManager.VIDEO_UNAVAILABLE_REASON_NOT_CONNECTED":"android.media.tv.tvinputmanager.video_unavailable_reason_not_connected\r\n","android.hardware.usb.UsbManager.ACTION_USB_DEVICE_DETACHED":"android.hardware.usb.usbmanager.action_usb_device_detached\r\n","Returns the size of the MTP object":"返回MTP对象的大小\r\n","android.media.MediaPlayer.setOnSeekCompleteListener(android.media.OnSeekCompleteListener)":"android.media.mediaplayer.setonsonsonsonsonsonsonsonsonsonsonsonsonsonsonsonsonsekcompletelistener（android.media.sonsekcompletelisteristener）\r\n","android.hardware.display.VirtualDisplay.getDisplay()":"android.hardware.display.virtualdisplay.getDisplay（）（）\r\n","Sends additional commands to a location provider.":"将其他命令发送到位置提供商。\r\n","Maintain the previous ringer volume. ":"保持先前的铃声音量。\r\n","AudioRecord#getAudioSessionId()":"Audiorecord＃getAudioSessionId（）\r\n","Constant to indicate that the monitoring system is unsupported\n            for hardware geofence monitoring.":"不断表明监视系统不受支持\r\n            用于硬件Geofence监视。\r\n","Returns the selected input specified by ":"返回选定的输入\r\n","Transfers the current media to the given route.":"将当前媒体转移到给定的路线。\r\n","android.hardware.usb.UsbDeviceConnection.controlTransfer(int, int, int, int, byte[], int, int)":"android.hardware.usb.usbdeviceconnection.controltransfer（int，int，int，int，int，byte []，int，int）\r\n","Retrieves the DRM Info associated with the current source":"检索与当前源关联的DRM信息\r\n","android.graphics.ImageFormat#RAW_SENSOR":"android.graphics.imageformat＃raw_sensor\r\n","android.hardware.camera2.params.ColorSpaceTransform":"android.hardware.camera2.params.colorspacetransform\r\n","Successful operation.":"成功的操作。\r\n","android.media.AudioManager.ENCODED_SURROUND_OUTPUT_NEVER":"android.media.audiomanager.encoded_surround_output_never\r\n","Used to indicate a gain of audio focus, or a request of audio focus, of unknown duration.":"用于表示未知持续时间的音频焦点或音频焦点的请求。\r\n","android.location.LocationListener.onFlushComplete(int)":"Android.Location.LocationListener.OnflushComplete（INT）\r\n","android.media.RemoteControlClient.FLAG_KEY_MEDIA_RATING":"android.media.remotecontrolclient.flag_key_media_rating\r\n"," but the current thread has\n             no looper.\n":" 但是当前线程有\r\n             没有循环。\r\n\r\n"," of the default sound for a given sound type.":" 给定声音类型的默认声音。\r\n","android.hardware.location.GeofenceHardware.registerForMonitorStateChangeCallback(int, android.hardware.location.GeofenceHardwareMonitorCallback)":"android.hardware.location.geofencehardware.RegisterFormisterFormistorStateChangeCallback（int，android.hardware.location.geofencehardwaremonitorcallback）\r\n","Gets the carrier-phase's uncertainty (1-Sigma).":"获取载体相的不确定性（1- sigma）。\r\n","The author of the media.":"媒体的作者。\r\n","android.media.AudioTrack.getPreferredDevice()":"android.media.audiotrack.getPreferreddevice（）\r\n","android.media.AudioManager.AUDIOFOCUS_REQUEST_GRANTED":"android.media.audiomanager.audiofocus_request_granted\r\n","if it is called after\n prepare() or before setOutputFormat()\n":"如果是在\r\n 准备（）或setOutputformat（）之前\r\n\r\n","Provides information about input devices and available key layouts.":"提供有关输入设备和可用密钥布局的信息。\r\n","android.hardware.camera2.CaptureRequest#SENSOR_FRAME_DURATION frame duration":"android.hardware.camera2.capturerequest＃sensor_frame_duration框架持续时间\r\n"," when the type of content played is voice audio":" 当播放的内容类型为语音音频时\r\n","android.media.MediaRecorder.setVideoSource(int)":"android.media.mediarecorder.setVideosource（int）\r\n","F:Android.Media.MediaExtractor.SeekTo":"F：android.media.mediaextractor.seekto\r\n","#VIBRATE_TYPE_RINGER":"#vibrate_type_ringer\r\n","Unregisters callbacks about and possibly releases networks originating from\n ":"关于源自有关的回调，并可能发布源自源自的网络\r\n \r\n","android.media.metrics.PlaybackSession.reportNetworkEvent(android.media.metrics.NetworkEvent)":"android.media.metrics.playbacksession.reportnetworkevent（android.media.metrics.networkevent）\r\n","android.hardware.usb.UsbDevice.getSerialNumber()":"android.hardware.usb.usbdevice.getSerialNumber（）\r\n","android.media.AudioRecordingConfiguration.getFormat()":"android.media.audiorecordingConfiguration.getFormat（）\r\n","android.hardware.camera2.params.MandatoryStreamCombination.getDescription()":"android.hardware.camera2.params.mandatorystreamcombination.getDescription（）\r\n","RouteDiscoveryPreference discovery preference":"RoutedisCoveryPreference Discovery偏好\r\n",",\n            or 0 for other types.":"，，，，\r\n            或其他类型为0。\r\n","android.inputmethodservice.InputMethodService.onInlineSuggestionsResponse(android.view.inputmethod.InlineSuggestionsResponse)":"android.inputmethodservice.inputmethodservice.oninlinesuggestionsresponse（android.view.inputmethod.inputmethod.inlinesuggestionsResponse）\r\n","Creates a recording session.":"创建录音会话。\r\n","CaptureRequest#CONTROL_VIDEO_STABILIZATION_MODE android.control.videoStabilizationMode":"CaptureRequest#CONTROL_VIDEO_STABILIZATION_MODE android。控制。视频稳定模式\r\n","android.net.IpSecManager.DIRECTION_IN":"android.net.ipsecmanager.direction_in\r\n","Return a new audio session identifier not associated with any player or effect.":"返回与任何玩家或效果无关的新音频会话标识符。\r\n","android.hardware.usb.UsbDevice.getDeviceId()":"android.hardware.usb.usbdevice.getDeviceId（）\r\n","android.media.MediaPlayer.setVolume(float, float)":"android.media.mediaplayer.setvolume（浮点，浮点）\r\n","android.hardware.usb.UsbManager.requestPermission(android.hardware.usb.UsbDevice, android.app.PendingIntent)":"android.hardware.usb.usbmanager.requestpermission（android.hardware.usb.usb.usbdevice，android.app.pendingintent）\r\n","android.media.MediaParser.PARSER_NAME_MP3":"android.media.mediaparser.parser_name_mp3\r\n","android.hardware.location.GeofenceHardware.MONITOR_CURRENTLY_UNAVAILABLE":"android.hardware.location.geofencehardware.monitor_curraster_unavailable\r\n","android.media.MediaCodec.BUFFER_FLAG_END_OF_STREAM":"android.media.mediacodec.buffer_flag_end_of_stream\r\n","android.hardware.camera2.CaptureResult.LENS_APERTURE":"android.hardware.camera2.captureresult.lens_aperture\r\n","android.inputmethodservice.InputMethodService.onCurrentInputMethodSubtypeChanged(android.view.inputmethod.InputMethodSubtype)":"android.inputmethodservice.inputmethodservice.oncurrentinputmethodsubtyptypechanged（android.view.inputmethod.inputmethod.inputmethodsubtype）\r\n","If possible, seek to the sync sample closest to the specified time":"如果可能，请寻找最接近指定时间的同步样本\r\n","android.hardware.camera2.params.LensShadingMap.copyGainFactors(float[], int)":"android.hardware.camera2.params.lensshadingmap.copygainfactors（float []，int）\r\n","android.media.metrics.PlaybackMetrics.PLAYBACK_TYPE_LIVE":"android.media.metrics.playbackmetrics.playback_type_live\r\n","Sets a Surface to show a preview of recorded media (video).":"设置一个表面以显示录制媒体（视频）的预览。\r\n","android.hardware.usb.UsbEndpoint.getEndpointNumber()":"android.hardware.usb.usbendpoint.getendpointnumber（）\r\n","android.media.MediaExtractor.setDataSource(android.content.Context, android.net.Uri, java.util.Map)":"android.media.mediaextractor.setDatasource（android.content.context，android.net.uri，java.util.map）\r\n","A focus change request whose granting is delayed: the request was successful, but the\n            requester will only be granted audio focus once the condition that prevented immediate\n            granting has ended.":"授予延迟的焦点更改请求：该请求成功，但是\r\n            一旦阻止立即的条件，请求者才会被授予音频重点\r\n            授予已经结束。\r\n","Returns the height of this buffer in pixels.":"以像素为单位返回此缓冲区的高度。\r\n","Return a list of all secure stop IDs currently in persistent memory.":"返回当前在持久内存中的所有安全停止ID的列表。\r\n","Gets player name.":"获取播放器名称。\r\n","Immutable class to store the available mandatory stream combination.":"不可变的班级存储可用的强制性流组合。\r\n","android.hardware.usb.UsbInterface.getEndpointCount()":"android.hardware.usb.usbinterface.getendpointcount（）\r\n","android.media.MediaRouter2.unregisterRouteCallback(android.media.RouteCallback)":"android.media.mediarouter2.unregisterRoutecallback（android.media.routecallback）\r\n","android.inputmethodservice.InputMethodService.updateInputViewShown()":"android.inputmethodservice.inputmethodservice.updateinputviewshown（）\r\n","android.view.inputmethod.InputMethodSession.updateExtractedText(int, android.view.inputmethod.ExtractedText)":"android.view.inputmethod.inputmethodsession.updateextractedText（int，android.view.inputmethod.extractedText）\r\n","#PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND":"#property_support_speaker_near_ultrasound\r\n","Tonemapping / contrast / gamma curve to use when ":"tonemapping / Contrast / gamma曲线用于使用\r\n"," or any sub-element is ":" 或任何子元素是\r\n","Indicates if the effect is of insert category ":"指示效果是否是插入类别的效果\r\n","Call supervisory tone, Ring Tone:\n      CEPT, JAPAN:    425Hz, 1s ON, 4s OFF...\n      ANSI (IS-95):   440Hz + 480Hz, 2s ON, 4s OFF...":"呼叫监督语气，铃声：\r\n      日本CEPT：425Hz，1秒，4s off ...\r\n      ANSI（IS-95）：440Hz + 480Hz，2s On，4s Off ...\r\n","android.location.Address.setExtras(android.os.Bundle)":"android.location.address.setExtras（android.os.bundle）\r\n","Gets current preset.":"获得当前的预设。\r\n","Determine which area of the window is touchable by the user.":"确定用户可以触摸窗口的哪个区域。\r\n","android.media.session.MediaSession.isActive()":"android.media.session.mediasession.isactive（）\r\n","android.media.MediaFormat.COLOR_STANDARD_BT601_PAL":"android.media.mediaformat.color_standard_bt601_pal\r\n","Adjusts the contrast of the image.":"调整图像的对比度。\r\n","android.location.GnssStatus.getBasebandCn0DbHz(int)":"android.location.gnssstatus.getBasebandcn0dbhz（int）\r\n","Set video frame capture rate.":"设置视频框架捕获率。\r\n","Returns the estimated capture latency range in milliseconds for the\n            target capture resolution during the calls to ":"返回以毫秒为单位的估计捕获延迟范围\r\n            在呼叫期间的目标捕获分辨率\r\n","android.media.MediaController2":"android.media.mediacontroller2\r\n","Remove all secure stops without requiring a secure stop release message from\n            the license server.":"删除所有安全停止，而无需从\r\n            许可证服务器。\r\n","android.location.Location.setSpeed(float)":"android.location.location.setspeed（float）\r\n","Extra for intent ":"额外意图\r\n","android.media.tv.TvInputManager.unregisterCallback(android.media.tv.TvInputCallback)":"android.media.tv.tvinputmanager.unregistercallback（android.media.tv.tv.tvinputCallback）\r\n","Return the capture policy.":"返回捕获策略。\r\n","android.mtp.MtpConstants.ASSOCIATION_TYPE_GENERIC_FOLDER":"android.mtp.mtpconstants.association_type_generic_folder\r\n","The RemoteController class is used to control media playback, display and update media metadata\n            and playback status, published by applications using the ":"RemoteController类用于控制媒体播放，显示和更新媒体元数据\r\n            和播放状态，使用应用程序发布\r\n","Returns a new socket factory instance with an optional handshake timeout.":"返回具有可选握手超时的新套接字工厂实例。\r\n","Gets video height.":"获取视频高度。\r\n"," for a reprocessable session.":" 为了重新处理会议。\r\n","android.media.MediaSync.setCallback(android.media.Callback, android.os.Handler)":"android.media.mediasync.setCallback（android.media.callback，android.os.handler）\r\n","android.media.MediaMetadata.size()":"android.media.mediametadata.size（）\r\n","android.hardware.camera2.params.BlackLevelPattern.COUNT":"android.hardware.camera2.params.blacklevelpattern.count\r\n","if the track isn't properly initialized\n":"如果曲目未正确初始化\r\n\r\n","F:Android.Media.MediaRecorder.SetVideoSource":"F：android.media.mediarecorder.setVideosource\r\n","android.media.projection.MediaProjectionManager.getMediaProjection(int, android.content.Intent)":"android.media.provention.mediaproctiveManager.getMediaproctoction（int，android.content.intent）\r\n","android.location.GnssNavigationMessage.getMessageId()":"android.location.gnssnavigationMessage.getMessageId（）\r\n","Remove a specific secure stop without requiring a secure stop release message\n            from the license server.":"删除特定的安全停止，而无需安全停止释放消息\r\n            从许可证服务器。\r\n","Creates a centered bitmap of the desired size.":"创建所需尺寸的集中位图。\r\n","android.media.RemoteControlClient.PLAYSTATE_PLAYING":"android.media.remotecontrolclient.playstate_playing\r\n"," for this ringtone.":" 对于这个铃声。\r\n","Changes the pressed state of the key.":"更改键的压力状态。\r\n","android.media.AudioFormat.ENCODING_DRA":"android.media.audioformat.encoding_dra\r\n","Operation code for GetObjectPropValue":"getObjectPropvalue的操作代码\r\n","android.media.tv.TvView.timeShiftSetPlaybackParams(android.media.PlaybackParams)":"android.media.tv.TVView.TimesHiftSetSetplayBackparams（android.media.playbackparams）\r\n","Returns true if thumbnail image is JPEG Compressed, or false if either thumbnail image does\n            not exist or thumbnail image is uncompressed.":"如果缩略图被压缩为jpeg，则返回true，或者如果缩略图图像为false\r\n            不存在或缩略图图像未压缩。\r\n"," lens shading map of floats.":"镜头的镜头图。\r\n","The Visualizer class enables application to retrieve part of the currently playing audio for\n            visualization purpose.":"可视化器类使应用程序可以检索一部分当前播放音频\r\n            可视化目的。\r\n","Sequence number of frame for a certain type.":"某种类型的帧数序列数。\r\n","Used to specify that an endpoint zero control request is a vendor specific request.":"用来指定端点零控制请求是供应商特定的请求。\r\n","android.media.MediaTimestamp.MediaTimestamp(long, long, float)":"android.media.MediaTimestamp.MediAtimestamp（长，长，浮动）\r\n","Gets experiment IDs.":"获取实验ID。\r\n"," to use as an output.":" 用作输出。\r\n","A key describing the maximum number of B frames between I or P frames,\n            to be used by a video encoder.":"一个键描述I或P帧之间的B帧数量的最大数量，\r\n            由视频编码器使用。\r\n","android.mtp.MtpConstants.OPERATION_SELF_TEST":"android.mtp.mtpconstants.operation_self_test\r\n","android.media.MediaDataSource.readAt(long, byte[], int, int)":"android.media.mediadatasource.readat（long，byte []，int，int）\r\n","android.media.AudioManager.SCO_AUDIO_STATE_CONNECTING":"android.media.audiomanager.sco_audio_state_connecting\r\n","Identifies a ":"识别\r\n","android.mtp.MtpConstants.OPERATION_OPEN_SESSION":"android.mtp.mtpconstants.operation_open_session\r\n","Get the number of points stored in this tonemap curve for the specified color channel.":"获取为指定的颜色通道中存储在此ToneMap曲线中的点数。\r\n","Takes a flattened string of parameters and adds each one to\n this Parameters object.":"采用一串参数，将每个参数添加到\r\n 此参数对象。\r\n","Waits for the result of a ":"等待\r\n","android.media.AudioRecordingConfiguration.getAudioDevice()":"android.media.audiorecordingconfiguration.getaudiodevice（）\r\n","android.media.metrics.NetworkEvent.NETWORK_TYPE_2G":"android.media.metrics.networkevent.network_type_2g\r\n","The Extended Display Identification Data (EDID) standard for a short audio descriptor.":"简短音频描述符的扩展显示标识数据（EDID）标准。\r\n","Event code for STORE_ADDED event":"商店_ADDED事件的活动代码\r\n","android.media.MediaSync.setAudioTrack(android.media.AudioTrack)":"android.media.mediasync.setaudiotrack（android.media.audiotrack）\r\n","android.media.ExifInterface.TAG_GPS_LONGITUDE":"android.media.exifinterface.tag_gps_longitude\r\n","Sets the listener to be called whenever the media playback position is requested\n            to be updated.":"每当请求媒体播放位置时，请设置侦听器\r\n            要被更新。\r\n","Notifies clients of that the session is created and ready for use.":"通知客户，会创建会话并准备使用。\r\n","if an error occurs while opening the connection.":"如果在打开连接时发生错误。\r\n","android.hardware.usb.UsbConstants.USB_INTERFACE_SUBCLASS_BOOT":"android.hardware.usb.usbconstants.usb_interface_subclass_boot\r\n","Sets the setting for when the vibrate type should vibrate.":"设置设置何时振动类型应振动。\r\n","5G NSA network":"5G NSA网络\r\n","NetworkCapabilities.TRANSPORT_*":"NetworkCapabilities.transport _*\r\n","android.media.midi.MidiSender.onConnect(android.media.midi.MidiReceiver)":"android.media.midi.midisender.onconnect（android.media.midi.midireceiver）\r\n","Coarse-grained network state.":"粗粒网络状态。\r\n","android.media.MediaRecorder.MEDIA_RECORDER_ERROR_UNKNOWN":"android.media.mediarecorder.media_recorder_error_unknown\r\n","android.media.Image.getPlanes()":"android.media.image.getplanes（）\r\n","Configure a component to be used with a descrambler.":"配置要与描述器一起使用的组件。\r\n","A constant describing a light sensor type. ":"描述光传感器类型的常量。 \r\n","android.media.MediaCodec.releaseOutputBuffer(int, long)":"android.media.mediacodec.ReleaseOutputbuffer（int，long）\r\n","#EXTRA_SCO_AUDIO_PREVIOUS_STATE":"#EXTRA_SCO_AUDIO_PREVIOS_STATE\r\n","The video is streamed and its container is not valid for progressive\n playback i.e the video's index (e.g moov atom) is not at the start of the\n file.":"视频流了，其容器无效\r\n 播放，即视频的索引（例如MOOV原子）不在\r\n 文件。\r\n","Immutable class to store the camera capability, its corresponding maximum\n            streaming dimension and zoom range.":"不变的类存储相机功能，其相应的最大值\r\n            流尺寸和变焦范围。\r\n","android.hardware.ConsumerIrManager.hasIrEmitter()":"android.hardware.consumerirmanager.hasiremitter（）\r\n","Reads audio data from the audio hardware for recording into a byte array.":"从音频硬件读取音频数据，以记录到字节数组中。\r\n","android.hardware.camera2.CameraCaptureSession.switchToOffline(java.util.Collection, java.util.concurrent.Executor, android.hardware.camera2.CameraOfflineSessionCallback)":"android.hardware.camera2.cameracapturesessionsessession.switchtooffline（java.util.collection，java.util.concurrent.executor，android.hardware.camera.camera2.cameraofflineSessionCallback）\r\n","An array of mandatory stream combinations generated according to the camera device\n            ":"根据相机设备生成的一系列强制性流组合\r\n            \r\n","android.media.tv.TvInputInfo.getType()":"android.media.tv.tvinputinfo.getType（）\r\n","Set the user description string to write.":"设置用户描述字符串写。\r\n","android.media.AudioPresentation.CONTENT_VOICEOVER":"android.media.audiopersentation.content_voiceover\r\n","Sets an asynchronous callback for error events.":"为错误事件设置异步回调。\r\n","#getClientEffects()":"#getClientFects（）\r\n","Send the given UTF-16 character to the current input connection.":"将给定的UTF-16字符发送到当前输入连接。\r\n","android.hardware.usb.UsbAccessory.getVersion()":"android.hardware.usb.usbaccessory.getversion（）\r\n","android.media.MediaSyncEvent":"android.media.mediasyncevent\r\n","android.hardware.camera2.params.BlackLevelPattern":"android.hardware.camera2.params.blacklevelpattern\r\n"," object which has been previously registered\n            to receive notifications of changes to the set of connected audio devices.":" 以前已注册的对象\r\n            接收有关连接音频设备集更改的通知。\r\n","android.location.LocationManager.isLocationEnabled()":"android.location.locationmanager.islocationEnabled（）\r\n","This key retrieves the location information, if available.\n The location should be specified according to ISO-6709 standard, under\n a mp4/3gp box \"@xyz\". ":"此键将检索位置信息（如果有）。\r\n 该位置应根据ISO-6709标准指定\r\n MP4/3GP盒“ @xyz”。\r\n","android.media.audiofx.PresetReverb.PRESET_MEDIUMHALL":"android.media.audiofx.presetreverb.preset_mediumhall\r\n","Interface definition of a callback to be invoked when the\n video size is first known or updated\n":"接口的定义是要调用的回调的定义\r\n 视频尺寸首先已知或更新\r\n\r\n","Called when a route for the specified type was added.":"添加指定类型的路由时调用。\r\n","android.media.MediaActionSound":"android.media.mediaactionsound\r\n","#STREAM_MUSIC":"#Stream_Music\r\n","android.media.ExifInterface.TAG_Y_CB_CR_POSITIONING":"android.media.exifinterface.tag_y_cb_cr_positioning\r\n","Queues the audio data asynchronously for playback (AudioTrack must be in streaming mode).":"排队在播放时不同步（ADIOTRACK必须处于流式传输模式）。\r\n","android.location.GnssMeasurement.STATE_GLO_TOD_DECODED":"android.location.gnssmeasurement.state_glo_tod_decoded\r\n","android.net.LocalSocket":"android.net.localsocket\r\n","android.media.session.MediaSession.getSessionToken()":"android.media.session.mediasession.getSessionToken（）\r\n","Sets the listener to be invoked when a media time discontinuity is encountered.":"遇到媒体时间不连续性时，将侦听器设置为被调用。\r\n","Empties the segment queue, and clears all clips that are scheduled for playback.":"清空段队列，并清除计划进行播放的所有剪辑。\r\n","Describes a set of encoding profiles for a given media (audio and/or video) profile.":"描述给定媒体（音频和/或视频）配置文件的一组编码配置文件。\r\n","android.media.RingtoneManager.setType(int)":"android.media.ringtonemanager.setType（int）\r\n"," to receive notifications of\n            codec format change events on this ":" 接收通知\r\n            编解码器格式更改事件\r\n"," pertains.":" 有关。\r\n","Get the total number of gain factors in this map.":"在此地图中获取收益因子的总数。\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.getInputSizes(int)":"android.hardware.camera2.params.recommendstreamconfigurationmap.getInputsizes（int）\r\n","android.hardware.camera2.CaptureFailure.getRequest()":"android.hardware.camera2.capturefailure.getRequest（）\r\n","Pause TV program recording in the current recording session.":"在当前录制会话中暂停电视节目录制。\r\n","android.hardware.Sensor.STRING_TYPE_HEART_BEAT":"android.hardware.sensor.string_type_heart_beat\r\n","android.media.audiofx.PresetReverb.PRESET_NONE":"android.media.audiofx.presetreverb.preset_none\r\n","android.location.GnssClock.hasReferenceCodeTypeForIsb()":"android.location.gnssclock.hasreferencecodetypeforisb（）\r\n","The constant used to indicate that the geofence operation has failed.":"用于指示地理五项操作失败的常数。\r\n","Name of the XML tag that includes the attributes for the setting.":"XML标签的名称，其中包括设置的属性。\r\n","configuration":"配置\r\n","The unique ID for a row.":"一排的唯一ID。\r\n","Returns any extras that were added to the description.":"返回添加到描述中的任何附加功能。\r\n","android.media.MediaExtractor.setMediaCas(android.media.MediaCas)":"android.media.mediaextractor.setmediacas（android.media.mediacas）\r\n","android.media.AudioRecord.getActiveMicrophones()":"android.media.audiorecord.getactivemicrophones（）\r\n","android.media.MediaRouter2":"android.media.mediarouter2\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_PLAYER_BEHIND_LIVE_WINDOW":"android.media.metrics.playbackerrorevent.error_player_behind_live_window\r\n","android.location.GnssCapabilities.hasAntennaInfo()":"android.location.gnsscapabilities.hasantennainfo（）\r\n","Reports whether the satellite at the specified index has almanac data.":"报告指定索引的卫星是否具有年鉴数据。\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.getOutputSizes(int)":"android.hardware.camera2.params.recommendstreamconfigurationmap.getOutputsizes（int）\r\n","Route feature: Live video.":"路线功能：实时视频。\r\n","Reads Exif tags from the specified image input stream.":"从指定的图像输入流读取EXIF标签。\r\n","Returns the maximum number of location updates for this request before the request is\n            automatically removed.":"在请求为之前，返回此请求的最大位置更新数\r\n            自动删除。\r\n","RoutingSessionInfo session info":"RutingSessionInfo会话信息\r\n","Return the set of combinations of currently connected camera device identifiers, which\n            support configuring camera device sessions concurrently.":"返回当前连接的相机设备标识符的组合集，其中\r\n            支持同时配置相机设备会话。\r\n"," has resolved the half\n            cycle ambiguity.":" 已经解决了一半\r\n            循环歧义。\r\n"," objects corresponding to the audio devices\n            currently connected to the system and meeting the criteria specified in the\n            <code>flags</code> parameter.":" 对应于音频设备的对象\r\n            目前已连接到系统并符合在\r\n            <code>标志</code>参数。\r\n","Flag indicating a RemoteControlClient makes use of the \"rewind\" media key.":"指示RemoteControlclient的标志利用了“倒带”媒体密钥。\r\n","MediaCodecInfo.CodecCapabilities":"MediaCodeCinfo.codeccapabilities\r\n","A key describing the selection of the heavy compression profile for MPEG-4 DRC.":"描述MPEG-4 DRC的重压曲线的键。\r\n"," for updating metadata values of the editable keys of\n            the current ":" 用于更新可编辑键的元数据值\r\n            电流\r\n","android.media.audiofx.AudioEffect.EFFECT_POST_PROCESSING":"android.media.audiofx.audioeffect.effect_post_processing\r\n","Get the truncation length of this algorithm, in bits":"获取此算法的截断长度，\r\n"," to request the native or optimal output sample rate\n            for this device's low latency output stream, in decimal Hz.":" 请求本地或最佳输出样本率\r\n            对于此设备的低延迟输出流，以十进制Hz为单位。\r\n","Returns the notification update period expressed in frames.":"返回以帧表示的通知更新期。\r\n","This is the top part of the UI that is the main content.":"这是UI的最高部分，是主要内容。\r\n","android.hardware.camera2.params.StreamConfigurationMap.getOutputMinFrameDuration(int, android.util.Size)":"android.hardware.camera2.params.streamconfigurationmap.getOutputminframeduration（int，android.util.size）\r\n","android.hardware.camera2.CaptureRequest.TONEMAP_GAMMA":"android.hardware.camera2.capturerequest.tonemap_gamma\r\n","#TONE_CDMA_MED_PBX_SLS":"#TONE_CDMA_MED_PBX_SLS\r\n","Gets the clock's Drift in nanoseconds per second.":"每秒以纳米秒为单位。\r\n","Returns the current audio mode. -or- Sets the audio mode.":"返回当前音频模式。 - 或设置音频模式。\r\n","#TONE_DTMF_6":"＃tone_dtmf_6\r\n","Close this capture session asynchronously.":"不同步关闭此捕获会话。\r\n","android.media.PlaybackParams.setSpeed(float)":"android.media.playbackparams.setspeed（float）\r\n","Returns the last transition of this geofence. -or- Set the last known transition of the geofence.":"返回该地理林的最后一次过渡。 - 或设置Geofence的最后已知过渡。\r\n","Sends a simulated key event for a media button.":"发送媒体按钮的模拟密钥事件。\r\n","android.media.AudioTrack.getPerformanceMode()":"android.media.audiotrack.getPerformanceMode（）\r\n","android.net.UrlQuerySanitizer.setAllowUnregisteredParamaters(boolean)":"android.net.urlquerysanitizer.setAllowunregisteredParamaters（布尔值）\r\n","#pauseGeofence":"#pausegeofence\r\n","Sets the data source (file pathname) to use.":"将数据源（文件路径名）设置为使用。\r\n","#getRowCount":"#getrowcount\r\n","Returns a valid ringtone URI.":"返回有效的铃声URI。\r\n","android.location.SettingInjectorService.onGetSummary()":"android.location.setTingInjectionService.ongetsummary（）\r\n","Bundle key for the device's manufacturer name property.":"设备制造商名称属性的捆绑键。\r\n","android.hardware.Sensor.STRING_TYPE_POSE_6DOF":"android.hardware.sensor.string_type_pose_6dof\r\n","android.media.metrics.PlaybackMetrics.STREAM_TYPE_UNKNOWN":"android.media.metrics.playbackmetrics.stream_type_unknown\r\n","android.location.Location.removeBearing()":"android.location.Location.RemoveBearing（）\r\n","HardwareBuffer#isSupported(int, int, int, int, long)":"hardwarebuffer＃issupported（int，int，int，int，long）\r\n","Operation code for GetDevicePropDesc":"GetDevicePropdesc的操作代码\r\n","MediaRouter.RouteCategory category":"Mediarouter.Routecategory类别\r\n","#STREAM_ALARM":"#Stream_Alarm\r\n","The properties describing a\n            ":"描述一个的属性\r\n            \r\n","A convenience class for accessing the user and default proxy\n            settings.":"便利类，用于访问用户和默认代理\r\n            设置。\r\n","android.hardware.camera2.params.TonemapCurve.getPoint(int, int)":"android.hardware.camera2.params.tonemapcurve.getPoint（int，int）\r\n","Returns the model name for the MTP device":"返回MTP设备的型号\r\n","Returns whether or not the VPN profile should be bypassable.":"返回是否应绕开VPN配置文件。\r\n","Returns a subtitle suitable for display or null.":"返回适合显示或空的字幕。\r\n","Notifies the existing session is updated.":"通知现有会话已更新。\r\n","#getPrimaryImage(BitmapParams)":"#getPrimaryimage（bitmapparams）\r\n","android.media.AudioTrack.setPresentation(android.media.AudioPresentation)":"android.media.audiotrack.setPresentation（android.media.audiopersentation）\r\n","Abstract class for metrics events.":"指标事件的抽象类。\r\n","Get the id of the currently active item in the queue.":"在队列中获取当前活动项目的ID。\r\n","if it is called before start()\n":"如果在开始之前调用（）\r\n\r\n","android.media.MediaParser.SAMPLE_FLAG_LAST_SAMPLE":"android.media.mediaparser.sample_flag_last_sample\r\n","F:Android.Media.MediaPlayer.GetSelectedTrack":"F：android.media.mediaplayer.getSelectedTrack\r\n","TONE_CDMA_LOW_L tone: {1300Hz 25ms, 1450Hz 25ms} 40 times,\n 4000ms OFF, Repeat ....":"tone_cdma_low_l音调：{1300Hz 25ms，1450Hz 25ms} 40次，\r\n 4000毫米，重复...\r\n","If offset was negative":"如果偏移为负\r\n","Removes the value associated with the key.":"删除与密钥相关的值。\r\n","Defined in the OpenMAX IL specs, depending on the type of media\n this can be OMX_VIDEO_AVCPROFILETYPE, OMX_VIDEO_H263PROFILETYPE,\n OMX_VIDEO_MPEG4PROFILETYPE or OMX_VIDEO_VP8PROFILETYPE.":"在OpenMax IL规格中定义，具体取决于媒体的类型\r\n 这可以是OMX_VIDEO_AVCPROFILETYPE，OMX_VIDEO_H263PROFILETYPE，\r\n OMX_VIDEO_MPEG4PROFILETYPE或OMX_VIDEO_VP8 PROFILETYPE。\r\n","android.location.GnssMeasurement":"android.location.gnssmeasurement\r\n","android.location.Criteria.setHorizontalAccuracy(int)":"Android.Location.Criteria.Sethorizo​​ntalaccuracy（INT）\r\n","Defines the video encoding.":"定义视频编码。\r\n","#TAG_DATETIME_DIGITIZED":"#TAG_DATETIME_DIGITIZED\r\n","Retrieves the downstream bandwidth for this network in Kbps.":"在KBPS中检索该网络的下游带宽。\r\n","android.media.effect.EffectFactory.EFFECT_TEMPERATURE":"android.media.effect.effectfactory.effect_temperature\r\n","If this key exists the media contains video content.":"如果此键存在，则媒体包含视频内容。\r\n","android.hardware.camera2.params.SessionConfiguration.getStateCallback()":"android.hardware.camera2.params.sessionconfiguration.getstatecallback（）\r\n","#dequeueInputBuffer":"#DequeUeInputBuffer\r\n","CameraManager":"摄影师\r\n"," from the IME.":" 来自IME。\r\n","android.media.MediaCrypto.setMediaDrmSession(byte[])":"android.media.mediacrypto.setmediadrmsession（byte []）\r\n","android.media.metrics.PlaybackMetrics.getPlayerName()":"android.media.metrics.playbackmetrics.getplayername（）\r\n","Called when the session should be released.":"何时应发布会话。\r\n","android.media.MediaDrm.restoreKeys(byte[], byte[])":"android.media.mediadrm.restorekeys（byte []，byte []）\r\n","#ADJUST_LOWER":"#adjust_lower\r\n","Returns the defined video encoder profiles.":"返回定义的视频编码器配置文件。\r\n","android.hardware.location.GeofenceHardwareRequest.getRadius()":"android.hardware.location.geofencehardwarerequest.getradius（）\r\n","android.media.MediaRecorder.MEDIA_ERROR_SERVER_DIED":"android.media.mediarecorder.media_error_server_died\r\n","android.media.MediaRecorder.setOnErrorListener(android.media.OnErrorListener)":"android.media.mediarecorder.setonerrorlistener（android.media.onerrorlistener）\r\n","android.media.AudioRecord.getMetrics()":"android.media.audiorecord.getMetrics（）\r\n","Acoustic Echo Canceler (AEC).":"声学回声取消器（AEC）。\r\n","android.hardware.usb.UsbDevice.getDeviceClass()":"android.hardware.usb.usbdevice.getDeviceClass（）\r\n","Called when a client requests selecting a route for the session.":"当客户要求选择会话路由时，请致电。\r\n","#RINGER_MODE_VIBRATE":"#Ringer_Mode_vibrate\r\n","This GNSS measurement's tracking state has secondary code lock.":"该GNSS测量的跟踪状态具有辅助代码锁定。\r\n"," list of frequency responses.":" 频率响应列表。\r\n","android.media.tv.TvTrackInfo.writeToParcel(android.os.Parcel, int)":"android.media.tv.tvtrackinfo.writetetoparcel（android.os.os.parcel，int）\r\n","android.location.Location.getSpeedAccuracyMetersPerSecond()":"android.location.location.getSpeedAccuracymetersperspersecond（）\r\n","android.media.SoundPool.unload(int)":"android.media.soundpool.unload（int）\r\n","Clears all the metadata that has been set since the MetadataEditor instance was\n     created with ":"清除以来所有元数据的元数据是\r\n     创建\r\n",": Video is unavailable because\n            smart card is missed.":"：视频不可用，因为\r\n            错过了智能卡。\r\n","F:Android.Media.MediaMetadataRetriever.GetFrameAtTime":"F：android.media.mediametadataretriever.getFrameattime\r\n","#TONE_CDMA_MED_PBX_L":"#TONE_CDMA_MED_PBX_L\r\n","Usage: The buffer will be used as a shader storage or uniform buffer object":"用法：缓冲区将用作着色器存储或均匀的缓冲物对象\r\n","android.media.MediaRecorder.setCaptureRate(double)":"android.media.mediarecorder.setcapturater（双）\r\n","SENSOR_DELAY_*":"Sensor_delay_*\r\n","index":"指数\r\n","The audio sampling rate used for the audio track":"音轨使用的音频采样率\r\n","android.media.metrics.PlaybackStateEvent.STATE_PAUSED":"android.media.metrics.playbackstateevent.state_pause\r\n","android.location.GnssMeasurement.STATE_SBAS_SYNC":"android.location.gnssmeasurement.state_sbas_sync\r\n","Immutable class for describing a 3x3 matrix of ":"不变的类，用于描述3x3矩阵\r\n","Sets the marker position at which the listener is called, if set with\n            ":"设置调用侦听器的标记位置，如果设置\r\n            \r\n","android.media.metrics.PlaybackMetrics.getAudioUnderrunCount()":"android.media.metrics.playbackmetrics.getaudiounderrunco​​unt（）\r\n","The artist for the album of the media's original source.":"媒体原始资料专辑的艺术家。\r\n","android.media.ExifInterface.TAG_PRIMARY_CHROMATICITIES":"android.media.exifinterface.TAG_PRIMARY_CHROMATIT\r\n","android.media.AudioManager.AUDIOFOCUS_LOSS":"android.media.audiomanager.audiofocus_loss\r\n","KeyEvent#KEYCODE_MEDIA_PLAY_PAUSE":"keyevent＃keycode_media_play_pause\r\n","Gets the number of channels in the effect engine":"获取效应引擎中的频道数量\r\n","Allow greater-than characters. ":"允许大于大字符。\r\n","android.location.GnssNavigationMessage.TYPE_GAL_I":"android.location.gnssnavigationmessage.type_gal_i\r\n","Return the communication interface to the service.":"将通信接口返回到服务。\r\n"," of the message.":" 消息。\r\n","; or\n                                  the handler is null, the listener is not null, and the\n                                  calling thread has no looper; or no requests were passed in.":";或者\r\n                                  处理程序为无效，听众不是空的，\r\n                                  呼叫线没有循环仪；或未通过请求。\r\n","android.media.MediaController2.isPlaybackActive()":"android.media.mediacontroller2.isplaybackactive（）\r\n","Do not include OIS data in the capture result.":"请勿在捕获结果中包含OIS数据。\r\n","android.hardware.camera2.params.BlackLevelPattern.getOffsetForIndex(int, int)":"android.hardware.camera2.params.blacklevelpattern.getOffSetForIndex（int，int）\r\n","android.media.audiofx.Virtualizer.PARAM_STRENGTH":"android.media.audiofx.virtualizer.param_strength\r\n","Begins capturing and encoding data to the file specified with\n            setOutputFile().":"开始捕获并编码数据到指定的文件\r\n            setOutputfile（）。\r\n","android.media.MediaPlayer.getCurrentPosition()":"android.media.mediaplayer.getCurrentPosition（）\r\n","android.media.MediaSession2Service.getSessions()":"android.media.mediasession2service.getSessions（）\r\n","android.hardware.lights.Light.getOrdinal()":"android.hardware.lights.light.getordinal（）\r\n","Returns the sub-administrative area name of the address, for example, \"Santa Clara County\",\n            or null if it is unknown -or- Sets the sub-administrative area name of the address to the given String, which may be null":"返回地址的次级管理区域名称，例如“圣塔克拉拉县”，\r\n            或null如果未知或 - 将地址的子公司给定字符串的子公司名称设置为null\r\n","android.media.MediaFormat.getByteBuffer(java.lang.String, java.nio.ByteBuffer)":"android.media.mediaformat.getbytebuffer（java.lang.string，java.nio.bytebuffer）\r\n","Minimum magnetic field on Earth's surface":"地球表面的最小磁场\r\n","Get the opaque message data\n":"获取不透明的消息数据\r\n\r\n","AudioTrack.Builder#setPerformanceMode":"audiotrack.builder＃setPerformanceMode\r\n","if not in the Uninitialized state.":"如果不处于非初始化状态。\r\n","List of auto-exposure modes for ":"自动暴露模式的列表\r\n","GPS L2-CNAV message contained in the structure.":"结构中包含的GPS L2-CNAV消息。\r\n","Gets track change reason.":"获取跟踪变更原因。\r\n","A class for representing UNIX credentials passed via ancillary data\n            on UNIX domain sockets.":"代表通过辅助数据通过的UNIX凭据的课程\r\n            在Unix域插座上。\r\n","android.media.MediaRoute2Info.FEATURE_REMOTE_AUDIO_PLAYBACK":"android.media.mediaroute2info.feature_remote_audio_playback\r\n","android.media.browse.MediaBrowser.disconnect()":"android.media.browse.mediabrowser.disconnect（）\r\n","Gets the package name of the app using the route.":"使用路由获取应用程序的包装名称。\r\n","android.media.MediaDrm.removeKeys(byte[])":"android.media.mediadrm.removekeys（byte []）\r\n","USB class for content smart card devices.":"内容智能卡设备的USB类。\r\n","#TYPE_RINGTONE":"#type_ringtone\r\n","MtpObjectInfo":"mtpobjectinfo\r\n","Invoked when a flush operation is complete and after flushed locations have been delivered.":"当完成冲洗操作时，并在交付冲洗位置后调用。\r\n","Maximum supported length (in bytes) for PSK identity (in modified UTF-8 representation).":"PSK身份（以修改UTF-8表示）的最大支持长度（以字节为单位）。\r\n","android.media.AudioRecord.getAudioFormat()":"android.media.audiorecord.getaudioformat（）\r\n","AudioFormat#CHANNEL_INVALID":"AudioFormat＃channel_invalid\r\n","android.view.inputmethod.InputMethodSession.appPrivateCommand(java.lang.String, android.os.Bundle)":"android.view.inputmethod.inputmethodsession.appprivatecommand（java.lang.string，android.os.bundle）\r\n"," and changes to these parameters generate\n            output format change event.":" 并更改这些参数生成\r\n            输出格式更改事件。\r\n","Returns the time required to receive the first fix since the most recent\n            restart of the GPS engine.":"返回以来收到第一个修复所需的时间\r\n            重新启动GPS发动机。\r\n","Android.Locations.LocationProvider.AVAILABLE":"android.locations.locationprovider.available\r\n","android.hardware.camera2.CameraMetadata.getKeys()":"android.hardware.camera2.camerametadata.getkeys（）\r\n","android.hardware.display.DeviceProductInfo.getManufacturerPnpId()":"android.hardware.display.deviceproductinfo.getManufacturerPID（）\r\n","android.media.MicrophoneInfo.DIRECTIONALITY_HYPER_CARDIOID":"android.media.microphoneinfo.directionality_hyper_cardioid\r\n","Read a MediaDrm String property value, given the property name string.":"读取属性名称字符串，读取MediaDRM字符串属性值。\r\n","android.media.RoutingSessionInfo":"android.media.routingsessioninfo\r\n"," associated with this RCC.":" 与此RCC相关联。\r\n","Event code for DEVICE_INFO_CHANGED event":"设备的事件代码_info_changed事件\r\n"," for showing and interacting with the\n            extracted text in a full-screen input method.":" 显示并与\r\n            以全屏输入方法提取文本。\r\n","if longitude is\n less than -180 or greater than 180":"如果经度是\r\n 小于-180或大于180\r\n","#READ_BLOCKING":"#Read_Blocking\r\n","A special color effect to apply.":"适用的特殊色彩效果。\r\n","Constant used to indicate that the input stream contains the full image data.":"用于指示输入流的常数包含完整的图像数据。\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.isOutputSupportedFor(int)":"android.hardware.camera2.params.RecommendedStreamConfigurationMap.isOutputSupportedFor(int)\r\n","Sets the audio encoder to be used for recording.":"设置用于录制的音频编码器。\r\n","Checks whether the MediaPlayer is playing.":"检查Mediaplayer是否正在演奏。\r\n","android.net.SSLCertificateSocketFactory.createSocket(java.lang.String, int, java.net.InetAddress, int)":"android.net.sslcertificatesocketFactory.CREATESOCTED（java.lang.string，int，java.net.inetaddress，int）\r\n","android.hardware.camera2.CaptureResult.STATISTICS_OIS_SAMPLES":"android.hardware.camera2.captureresult.statistics_ois_samples\r\n","android.hardware.display.DisplayManager.getMatchContentFrameRateUserPreference()":"android.hardware.display.displaymanager.getMatchContentFramerateUserPreference（）\r\n","android.hardware.display.DisplayManager.MATCH_CONTENT_FRAMERATE_UNKNOWN":"android.hardware.display.displaymanager.match_content_framerate_unknown\r\n","android.hardware.camera2.CaptureResult":"android.hardware.camera2.captureresult\r\n","Indicates this is a network that has the ability to reach the carrier's\n CBS servers, used for carrier specific services.":"表明这是一个能够到达运营商的网络\r\n CBS服务器，用于运营商特定服务。\r\n","android.view.inputmethod.InputMethod.attachToken(android.os.IBinder)":"android.view.inputmethod.inputmethod.attachtoken（android.os.ibinder）\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_CALIBRATION_TRANSFORM2":"android.hardware.camera2.cameracharacteristics.sensor_calibration_transform2\r\n","android.hardware.camera2.CameraDevice.createReprocessCaptureRequest(android.hardware.camera2.TotalCaptureResult)":"android.hardware.camera2.cameradevice.createreprocesscapturerequest（android.hardware.camera.camera2.totalcaptureresult）\r\n","android.hardware.location.GeofenceHardwareRequest.getLastTransition()":"android.hardware.location.geofencehardwarerequest.getLastTransition（）\r\n","Indicates that the sample has supplemental data.":"表明样品具有补充数据。\r\n"," in the array contains the speaker\n          identification (e.g. ":" 在阵列中包含扬声器\r\n          识别（例如\r\n","android.media.SoundPool.pause(int)":"android.media.soundpool.pause（int）\r\n","android.hardware.SensorManager.LIGHT_SHADE":"android.hardware.sensormanager.light_shade\r\n","android.net.TrafficStats.getUidTxPackets(int)":"android.net.trafficstats.getuidtxpackets（int）\r\n","android.media.metrics.PlaybackMetrics.getVideoFramesPlayed()":"android.media.metrics.playbackmetrics.getVideOframesplayed（）\r\n","android.media.MediaDrm.getProvisionRequest()":"android.media.mediadrm.getProvisionRequest（）\r\n","android.media.MediaDrm.clearOnEventListener()":"android.media.mediadrm.clearoneventlistener（）\r\n","android.media.MediaParser.PARAMETER_AMR_ENABLE_CBR_SEEKING":"android.media.mediaparser.parameter_amr_enable_cbr_seeking\r\n","TvContract#buildProgramUri(long)":"TVContract＃build Programuri（long）\r\n","android.hardware.camera2.TotalCaptureResult":"android.hardware.camera2.totalcaptureresult\r\n","android.media.MediaFormat.createSubtitleFormat(java.lang.String, java.lang.String)":"android.media.mediaformat.createsubtitleformat（java.lang.string，java.lang.string）\r\n","Opens a file descriptor for reading and writing data to the USB accessory.":"打开文件描述符，用于读取和写入USB附件。\r\n","Create and return the view hierarchy used for the input area (such as\n            a soft keyboard).":"创建并返回用于输入区域的视图层次结构（例如\r\n            软键盘）。\r\n","android.location.LocationManager.requestSingleUpdate(java.lang.String, android.app.PendingIntent)":"android.location.LocationManager.Requestsingleupdate（java.lang.string，android.app.pendingIntent）\r\n","Beidou CNAV2 message contained in the structure.":"结构中包含的beidou cnav2消息。\r\n","android.location.GnssNavigationMessage.TYPE_GAL_F":"android.location.gnssnavigationmessage.type_gal_f\r\n","android.hardware.camera2.CaptureResult.LENS_RADIAL_DISTORTION":"android.hardware.camera2.captureresult.lens_radial_distort\r\n","Band level range.":"带级范围。\r\n","android.mtp.MtpEvent.getObjectHandle()":"android.mtp.mtpevent.getObjectHandle（）\r\n","android.location.GnssStatus.hasEphemerisData(int)":"android.location.gnssstatus.hasephemerisdata（int）\r\n","If this key pops up a mini keyboard, this is the resource id for the XML layout for that\n keyboard.":"如果此键弹出一个迷你键盘，这是XML布局的资源ID\r\n 键盘。\r\n","Clears the contents of the location.":"清除位置的内容。\r\n","IpSecTransform":"ipsectransform\r\n","Gets the carrier frequency of the tracked signal.":"获取跟踪信号的载体频率。\r\n","android.location.GnssMeasurement.getFullInterSignalBiasUncertaintyNanos()":"android.location.gnssmeasurement.getfullintersignalbiascenterntytynanos（）\r\n","android.media.MediaRecorder#stop MediaRecorder.stop()":"android.media.mediarecorder＃stop mediarecorder.stop（）\r\n","#onFinishInput":"#onfinishInput\r\n","#openSession()":"#opensession（）\r\n","android.hardware.camera2.CaptureRequest.CONTROL_VIDEO_STABILIZATION_MODE":"android.hardware.camera2.capturerequest.control_video_stabilization_mode\r\n","True if the provider is able to provide bearing under at least some conditions.":"如果提供商能够至少在某些条件下提供轴承，则为是真的。\r\n","Return whether the soft input view is <em>currently</em> shown to the\n            user.":"返回软输入视图当前显示的软输入视图是否为</em>\r\n            用户。\r\n","android.hardware.display.DisplayManager.unregisterDisplayListener(android.hardware.display.DisplayListener)":"android.hardware.display.displaymanager.unregisterdisplaylistener（android.hardware.display.displaylistener）\r\n","Get the array of pixel planes for this Image.":"获取此图像的像素平面数组。\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_DISC_NUMBER":"android.media.mediametadataretriever.metadata_key_disc_number\r\n","android.media.MediaFormat.KEY_ALLOW_FRAME_DROP":"android.media.mediaformat.key_allow_frame_drop\r\n","The OnParameterChangeListener interface defines a method called by the BassBoost when a\n parameter value has changed.":"OnParameterChangeListener界面定义了bassboost调用的方法\r\n 参数值已更改。\r\n","CameraDevice CameraDevice":"CameradeVice CameradeVice\r\n","android.media.tv.TvContract.buildChannelLogoUri(android.net.Uri)":"android.media.tv.tvcontract.buildchannellogouri（android.net.uri）\r\n","android.hardware.location.GeofenceHardware.MONITOR_CURRENTLY_AVAILABLE":"android.hardware.location.geofencehardware.monitor_curranty_available\r\n","Returns the current volume scale attributable to the ":"返回可归因于\r\n","Requests temporary permission for the given package to access the device.":"请求给定软件包的临时权限访问设备。\r\n","android.hardware.Sensor.STRING_TYPE_ROTATION_VECTOR":"android.hardware.sensor.string_type_rotation_vector\r\n","This class is the public application interface to the MIDI service.":"该课程是MIDI服务的公共应用程序接口。\r\n","Gets the current volume. -or- Notify the system that the current volume has been changed.":"获取当前卷。 - 或 - 通知系统已更改当前卷。\r\n","Converts image to grayscale.":"将图像转换为灰度。\r\n","android.hardware.camera2.CaptureResult.LOGICAL_MULTI_CAMERA_ACTIVE_PHYSICAL_ID":"android.hardware.camera2.captureresult.logical_multi_camera_active_physical_id\r\n","Get the default URL to use when sending the key request message to a\n server, if known.":"将密钥请求消息发送到一个时，请获取默认URL\r\n 服务器，如果已知。\r\n","android.media.MediaExtractor.getLogSessionId()":"android.media.mediaextractor.getLogsessionId（）\r\n"," for the given\n            sensor.":" 对于给定\r\n            传感器。\r\n","android.media.AudioManager.PLAYBACK_OFFLOAD_GAPLESS_SUPPORTED":"android.media.audiomanager.playback_offload_gapless_supported\r\n","android.media.AudioManager.getActiveRecordingConfigurations()":"android.media.audiomanager.getActiverecordingConfigurations（）\r\n","android.hardware.SensorManager.GRAVITY_VENUS":"android.hardware.sensormanager.gravity_venus\r\n","Audio data format: MPEG-H baseline profile, level 3":"音频数据格式：MPEG-H基线配置文件，第3级\r\n","The display sink is built-in to the device":"显示器接收器是内置的设备\r\n","android.media.ExifInterface.TAG_WHITE_BALANCE":"android.media.exifinterface.tag_white_balance\r\n","if not in the Configured state\n         or just after ":"如果不在配置状态\r\n         或之后\r\n","Returns the offset and length of thumbnail inside the image file, or\n            ":"返回图像文件中的缩略图和缩略图的偏移和长度，或\r\n            \r\n","Gets information about the input device with the specified id.":"获取具有指定ID的输入设备的信息。\r\n","android.media.audiofx.PresetReverb.PRESET_PLATE":"android.media.audiofx.presetreverb.preset_plate\r\n","Whether video stabilization is\n            active.":"视频稳定是否是\r\n            积极的。\r\n","Signals end-of-stream on input.":"输入的信号末端。\r\n","android.hardware.SensorDirectChannel.configure(android.hardware.Sensor, int)":"android.hardware.sensordirectChannel.configure（android.hardware.sensor，int）\r\n","android.media.FaceDetector":"android.media.facedetector\r\n"," is created with the this service's\n            ":" 是使用此服务创建的\r\n            \r\n","CDMA HIGH PBX SSL tone:{3700Hz 25ms, 4000Hz 25ms} 8 times\n 200ms OFF, {3700Hz 25ms, 4000Hz 25ms} 16 times, 200ms OFF,\n {3700Hz 25ms, 4000Hz 25ms} 8 times, 1000ms OFF, REPEAT....":"CDMA高PBX SSL音调：{3700Hz 25ms，4000Hz 25ms} 8次\r\n 200ms关闭，{3700Hz 25ms，4000Hz 25ms} 16次，200ms折扣，\r\n {3700Hz 25ms，4000Hz 25ms} 8次，1000毫秒，重复...\r\n","android.media.ExifInterface.TAG_GPS_MAP_DATUM":"android.media.exifinterface.tag_gps_map_datum\r\n","android.hardware.usb.UsbRequest.initialize(android.hardware.usb.UsbDeviceConnection, android.hardware.usb.UsbEndpoint)":"android.hardware.usb.usbrequest.initialize（android.hardware.usb.usbdeviceconnection，android.hardware.usb.usbendpoint）\r\n","android.media.metrics.PlaybackMetrics.getStreamType()":"android.media.metrics.playbackmetrics.getStreamType（）\r\n"," is no longer valid.":" 不再有效。\r\n","android.media.SoundPool.stop(int)":"android.media.soundpool.stop（int）\r\n","The maximum number of metering regions that can be used by the auto-focus (AF) routine.":"自动对焦(AF)例程可使用的测光区域的最大数量。\r\n","android.net.Proxy.getDefaultHost()":"android.net.proxy.getDefaulthost（）\r\n","Band center frequency. ":"带中心频率。\r\n","android.view.inputmethod.InputMethod.showSoftInput(int, android.os.ResultReceiver)":"android.view.inputmethod.inputmethod.showsoftinput（int，android.os.resultreceiver）\r\n","android.mtp.MtpObjectInfo.getAssociationType()":"android.mtp.mtpobjectInfo.getAssociationType（）\r\n","Called when the service receives a request to create a session.":"当服务收到创建会话的请求时，请致电。\r\n","A key describing the frequency of key frames expressed in seconds between key frames.":"一个键描述密钥帧之间几秒钟表示的键帧的频率。\r\n","#TONE_DTMF_C":"#TONE_DTMF_C\r\n","#SENSOR_DELAY_FASTEST":"#sensor_delay_fastest\r\n","android.hardware.usb.UsbDeviceConnection":"android.hardware.usb.usbdeviceconnection\r\n","Gets the root id.":"获取根ID。\r\n","UUID for Noise Suppressor (NS)":"抑制器（NS）的UUID\r\n","Set and store the geodata (latitude and longitude) in the output file.":"将Geodata（纬度和经度）设置并存储在输出文件中。\r\n","android.media.RoutingSessionInfo.getSelectedRoutes()":"android.media.routingsessioninfo.getSelectedRoutes（）\r\n","This GNSS measurement's tracking state has code lock.":"此GNSS测量的跟踪状态具有代码锁定。\r\n","Gets the list of IDs of transferable routes for the session.":"获取会话可转让路由的ID列表。\r\n","android.media.MediaCrypto.MediaCrypto(java.util.UUID, byte[])":"android.media.mediacrypto.mediacrypto（java.util.uuid，byte []）\r\n"," to retrieve\n            a sync (or key) frame associated with a data source that is located\n            right before or at the given time.":" 检索\r\n            与位于数据源关联的同步框架（或键）帧\r\n            就在给定时间之前还是在。\r\n","android.media.MediaRecorder.setOutputFormat(int)":"android.media.mediarecorder.setOutputformat（int）\r\n","android.hardware.SensorPrivacyManager.supportsSensorToggle(int)":"机器人。硬件。SensorPrivacyManager.supportsSensorToggle（int）\r\n","MediaDrm":"Mediadrm\r\n","android.media.MediaCas.SESSION_USAGE_RECORD":"android.media.mediacas.session_usage_record\r\n","android.media.AudioManager.setBluetoothScoOn(boolean)":"android.media.audiomanager.setbluetoothscoon（布尔值）\r\n","Returns whether the given ":"返回是否给定\r\n","android.hardware.Sensor.STRING_TYPE_STEP_DETECTOR":"android.hardware.sensor.string_type_step_detector\r\n","android.media.MediaCodec.setOnFirstTunnelFrameReadyListener(android.os.Handler, android.media.OnFirstTunnelFrameReadyListener)":"android.media.mediacodec.setonfirsttunnelframereadylistener（android.os.handler，android.media.onfirsttunnnelframereadylistenersener）\r\n","android.hardware.camera2.MultiResolutionImageReader.getSurface()":"android.hardware.camera2.multirestolutionimagereader.getSurface（）\r\n","Represents a logical light on the device.":"表示设备上的逻辑灯。\r\n","Gets the level range for use by ":"获取级别范围以供使用\r\n","android.media.MicrophoneDirection.MIC_DIRECTION_EXTERNAL":"android.media.microphonedirection.mic_direction_external\r\n","This class represents an IP prefix, i.e., a contiguous block of IP addresses aligned on a\n power of two boundary (also known as an \"IP subnet\").":"该类代表IP前缀，即，在A上对齐的IP地址的连续块\r\n 两个边界的功率（也称为“ IP子网”）。\r\n","#TYPE_ALL":"#type_all\r\n","Microphone directionality type: cardioid.":"麦克风方向性类型：心脏化。\r\n","Called when the input view is being hidden from the user.":"当输入视图从用户隐藏时，请致电。\r\n","Contains constants for the USB protocol.":"包含USB协议的常数。\r\n"," instance, with desired Surface size and Surface\n            source class.":" 实例，具有所需的表面尺寸和表面\r\n            源类。\r\n","android.media.MediaCodec.getSupportedVendorParameters()":"android.media.mediacodec.getSupportedVendorParameters（）\r\n","if the cache can't be opened\n":"如果无法打开缓存\r\n\r\n","android.media.MediaRecorder.getActiveMicrophones()":"android.media.mediarecorder.getactivemicrophones（）\r\n","Remove a previously-added callback; the callback will no longer receive torch mode status\n            callbacks.":"删除先前的回调；回调将不再接收火炬模式状态\r\n            回调。\r\n","android.media.MediaPlayer.getMetrics()":"android.media.mediaplayer.getMetrics（）\r\n","Room HF level. ":"房间HF级。\r\n","Playback state of a RemoteControlClient which is skipping to the next\n    logical chapter (such as a song in a playlist) in the media it is currently playing.":"跳到下一个的弹回状态\r\n    逻辑章节（例如播放列表中的歌曲）目前正在播放。\r\n","A maximum filesize had been setup and has now been reached.":"已经设置了最大文件大小，现已达到。\r\n","Call supervisory tone, Busy:\n      CEPT:           425Hz, 500ms ON, 500ms OFF...\n      ANSI (IS-95):   480Hz+620Hz, 500ms ON, 500ms OFF...\n      JAPAN:          400Hz, 500ms ON, 500ms OFF...":"致电监督语调，忙：\r\n      CEPT：425Hz，500ms on，500ms左右...\r\n      ANSI（IS-95）：480Hz+620Hz，500ms on，500ms左右...\r\n      日本：400Hz，500ms on，500ms折扣...\r\n","RecordingSession":"录音\r\n","Virtualizer effect strength.":"虚拟器效应强度。\r\n","android.hardware.camera2.params.StreamConfigurationMap.isOutputSupportedFor(int)":"android.hardware.camera2.params.streamconfigurationmap.isoutputsupportedfor（int）\r\n","Controls whether the TvView's surface is placed on top of its window.":"控制TVView的表面是否放在其窗户顶部。\r\n"," instance from an ":" 实例来自\r\n","android.media.AudioPlaybackConfiguration.getAudioAttributes()":"android.media.audioplaybackconfiguration.getAudioAttributes（）\r\n","if any longitude is\n less than -180 or greater than 180":"如果有任何经度\r\n 小于-180或大于180\r\n","Indicates whether the mandatory stream combination is reprocessable.":"指示强制性流组合是否可以重新处理。\r\n","Returns true if the provider is able to provide speed\n            information, false otherwise.":"如果提供商能够提供速度，则返回正确\r\n            信息，否则为错误。\r\n","android.media.MediaCodecInfo.getCapabilitiesForType(java.lang.String)":"android.media.mediacodecinfo.getCapabilitysFortys（java.lang.string）\r\n","commandCode":"Commandcode\r\n","android.media.AudioManager.isStreamMute(int)":"android.media.audiomanager.isstreammute（int）\r\n","F:Android.Hardware.Camera2.CameraDevice+StateCallback.OnError":"f：android.hardware.camera2.cameradevice+statecallback.onerror\r\n","android.media.audiofx.AudioEffect.CONTENT_TYPE_MUSIC":"android.media.audiofx.audioeffect.content_type_music\r\n","android.media.tv.TvTrackInfo.isAudioDescription()":"android.media.tv.tvtrackinfo.isaudiodescription（）\r\n","android.mtp.MtpDevice.getObjectHandles(int, int, int)":"android.mtp.mtpdevice.getObjectHandles（int，int，int）\r\n","Sets the specified output gain value on all channels of this track.":"在此轨道的所有通道上设置指定的输出增益值。\r\n","android.hardware.display.DisplayManager.VIRTUAL_DISPLAY_FLAG_PRESENTATION":"android.hardware.display.displaymanager.virtual_display_flag_presentation\r\n","android.media.AudioRecord.getSampleRate()":"android.media.audiorecord.getSamplerate（）\r\n","Write to parcel":"写信给包裹\r\n","GeofenceHardware#GEOFENCE_ERROR_ID_UNKNOWN":"geofencehardware＃geofence_error_id_unknown\r\n","Clears all the pending metadata changes set since the MediaMetadataEditor instance was\n            created or since this method was last called.":"清除所有待处理的元数据更改设置，因为MediaMetadataeditor实例是\r\n            创建或此方法是最后一次调用。\r\n","android.hardware.camera2.MultiResolutionImageReader.flush()":"android.hardware.camera2.multirestolutionimagereader.flush（）\r\n","Retrieves information about the current status of the GPS engine.":"检索有关GPS引擎当前状态的信息。\r\n","android.media.metrics.TrackChangeEvent.getWidth()":"android.media.metrics.trackchangeevent.getWidth（）\r\n","Returns the notification responsiveness of this geofence. -or- Set the notification responsiveness of the geofence.":"返回该地理林的通知响应能力。 - 或设置Geofence的通知响应能力。\r\n","android.media.AudioProfile.AUDIO_ENCAPSULATION_TYPE_IEC61937":"android.media.audioprofile.audio_encapsulation_type_iec61937\r\n","android.hardware.camera2.CaptureResult.STATISTICS_LENS_SHADING_CORRECTION_MAP":"android.hardware.camera2.captureresult.statistics_lens_shading_correction_map\r\n","Returns the phone number of the address if known,\n            or null if it is unknown. -or- Sets the phone number associated with this address.":"返回地址的电话号码，如果已知，\r\n            或null如果未知。 - 或 - 设置与此地址关联的电话号码。\r\n","Get a list of controllers for all ongoing sessions.":"获取所有正在进行的会话的控制器列表。\r\n","android.location.Address.setFeatureName(java.lang.String)":"android.location.Address.setFeatureName（java.lang.string）\r\n","Set the flash unit's torch mode of the camera of the given ID without opening the camera\n            device.":"设置给定ID相机的闪光灯的火炬模式，而无需打开相机\r\n            设备。\r\n","This key retrieves the bits per sample in numbers of bits, if available.":"该键可以检索每个样品的位，如果有的话。\r\n","android.inputmethodservice.InputMethodService.onUpdateExtractingVisibility(android.view.inputmethod.EditorInfo)":"android.inputmethodservice.inputmethodservice.onupdateExtractingVisible（android.view.inputmethod.editorinfo）\r\n","Returns the index of the media player track which contains this subtitle data.":"返回包含此字幕数据的媒体播放器跟踪的索引。\r\n","android.hardware.camera2.CameraCharacteristics.getAvailableCaptureResultKeys()":"android.hardware.camera2.cameracharacteristics.getavailablecaptureresultkeys（）\r\n","android.media.MediaRoute2ProviderService.REASON_ROUTE_NOT_AVAILABLE":"android.media.mediaroute2ProviderService.Reason_Route_not_available\r\n","Class constructor.":"类构造函数。\r\n","android.hardware.input.InputManager.getInputDeviceIds()":"android.hardware.input.inputmanager.getInputDeviceids（）\r\n","android.hardware.camera2.CaptureResult.CONTROL_AE_TARGET_FPS_RANGE":"android.hardware.camera2.captureresult.control_ae_target_fps_range\r\n","Apply an IPsec transform to a stream socket.":"将IPSEC转换应用于流插座。\r\n","Used to indicate a loss of audio focus of unknown duration.":"用于表示未知持续时间的音频焦点的损失。\r\n"," in the list\n            of media-codecs.":" 在列表中\r\n            媒体代码。\r\n","android.media.MediaFormat.setLong(java.lang.String, long)":"android.media.mediaformat.setlong（java.lang.string，长）\r\n","android.hardware.camera2.CameraCharacteristics.SCALER_CROPPING_TYPE":"android.hardware.camera2.cameracharacteristics.scaler_cropping_type\r\n","android.media.MediaRouter.createUserRoute(android.media.RouteCategory)":"android.media.mediarouter.createuserroute（android.media.routecategory）\r\n","#CONNECTION_STATE_CONNECTED":"#connection_state_connection\r\n","Load the sound from a FileDescriptor.":"加载来自档案记录的声音。\r\n","Offline license is usable, the keys may be used for decryption.":"离线许可证可用，键可用于解密。\r\n","MailTo URL parser":"mailto url解析器\r\n","android.location.GnssMeasurement.ADR_STATE_RESET":"android.location.gnssmeasurement.adr_state_reset\r\n","android.view.inputmethod.InputMethodSession.updateCursor(android.graphics.Rect)":"android.view.inputmethod.inputmethodsession.updatecursor（android.graphics.Rect）\r\n","This key request type specifies that the keys will be for offline use, they\n            will be saved to the device for use when the device is not connected to a network.":"此密钥请求类型指定键将用于离线使用，它们\r\n            当设备未连接到网络时，将保存到设备中供设备使用。\r\n","GeofenceHardware#GEOFENCE_FAILURE":"geofencehardware＃geofence_failure\r\n","android.media.ExifInterface.TAG_CFA_PATTERN":"android.media.exifinterface.tag_cfa_pattern\r\n","Intent#setComponent(ComponentName)":"意图＃setComponent（componentName）\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_HAS_IMAGE":"android.media.mediametadataretriever.metadata_key_has_image\r\n"," to define the audio encodings supported by\n            the connected HDMI device.":" 定义由支持的音频编码\r\n            连接的HDMI设备。\r\n","startTime":"开始时间\r\n","Tag the given ":"标记给定\r\n","Gets the command code of a predefined command.":"获取预定义命令的命令代码。\r\n","Set the volume of the output this session is playing on.":"设置本届会话正在播放的输出的音量。\r\n","Gets whether a certain surround format is enabled or not.":"获取是否启用某种环绕格式。\r\n","android.hardware.HardwareBuffer.getLayers()":"android.hardware.hardwarebuffer.getlayers（）\r\n","Returns the audio sample rate, in the unit of Hz.":"返回HZ单元中的音频样本率。\r\n"," but that lets you specify\n            the audio attributes and session ID to be used by the new MediaPlayer instance.":" 但这使您可以指定\r\n            新MediaPlayer实例将使用的音频属性和会话ID。\r\n","#getFullBiasNanos()":"#getfullbiasnanos（）\r\n","Returns event code supported by the device.":"返回设备支持的事件代码。\r\n","The area of the image sensor which corresponds to active pixels after any geometric\n            distortion correction has been applied, when the sensor runs in maximum resolution mode.":"任何几何后对应于活动像素的图像传感器的面积\r\n            当传感器以最大分辨率模式运行时，已应用失真校正。\r\n","Time lapse quality level corresponding to the lowest available resolution.":"时间失误质量水平对应于最低的分辨率。\r\n","android.media.MediaActionSound.release()":"android.media.mediaactionsound.Release（）\r\n","Gets per-satellite-signal sync state.":"获得人均信号同步状态。\r\n","Returns effect enabled state":"返回效果启用状态\r\n","from\n this point on.":"从\r\n 这一点。\r\n","The standard reference illuminant used as the scene light source when\n            calculating the ":"当用作场景光源的标准参考照明剂\r\n            计算\r\n","android.inputmethodservice.KeyboardView.setKeyboard(android.inputmethodservice.Keyboard)":"android.inputmethodservice.keyboardview.setKeyboard（android.inputmethodservice.keyboard）\r\n","android.hardware.camera2.params.RggbChannelVector.COUNT":"android.hardware.camera2.params.RggbChannelVector.COUNT\r\n","DRM key management and crypto operations are performed within a hardware\n            backed trusted execution environment.":"DRM密钥管理和加密操作是在硬件中执行的\r\n            支持信任的执行环境。\r\n"," will include key\n            codes for adjacent keys.":" 将包括密钥\r\n            相邻密钥的代码。\r\n","android.media.MediaDrm.PROPERTY_DEVICE_UNIQUE_ID":"android.media.mediadrm.property_device_unique_id\r\n","Called when the location has changed.":"当位置更改时调用。\r\n","#WRITE_NON_BLOCKING":"#WRITE_NON_BLOCKING\r\n","Structure for common playback params.":"常见播放参数的结构。\r\n","android.location.LocationManager.requestSingleUpdate(android.location.Criteria, android.location.LocationListener, android.os.Looper)":"android.location.LocationManager.RequestSingLeupdate（android.location.Criteria，android.location.Location.LocationListener，android.os.oper）\r\n","Reverb preset representing a large-sized hall suitable for a full orchestra":"Reverb预设代表适合完整乐团的大型大厅\r\n","android.hardware.camera2.params.LensShadingMap.getGainFactor(int, int, int)":"android.hardware.camera2.params.lensshadingmap.getGainFactor（int，int，int）\r\n","Broadcast intent action when the set of enabled location providers changes.":"当启用位置提供商一组更改时，广播意愿行动。\r\n","A key describing the height (in pixels) of each tile of the content in a\n            ":"一个键描述内容中每个图块的高度（以像素为单位）\r\n            \r\n","android.location.GnssStatus.CONSTELLATION_IRNSS":"android.location.gnssstatus.constellation_irnss\r\n","android.media.MediaRoute2Info.CONNECTION_STATE_CONNECTING":"android.media.mediaroute2info.connection_state_connecting\r\n","Extracts the endpoint's endpoint number from its address":"从其地址提取端点的端点号\r\n"," for this device":" 对于此设备\r\n","IP traffic not available.":"IP流量不可用。\r\n","True if the provider requires access to a satellite-based positioning system (e.":"如果提供商需要访问基于卫星的定位系统（e。\r\n",": Video is unavailable because\n            the PVR record is not allowed by the license policy.":"：视频不可用，因为\r\n            许可政策不允许PVR记录。\r\n","Returns the current measurement modes performed by this audio effect":"返回该音频效应执行的当前测量模式\r\n","#getAccumulatedDeltaRangeMeters()":"#getAccumulatureDeltArangeMeters（）\r\n","#FLAG_KEY_MEDIA_STOP":"#flag_key_media_stop\r\n","Finds all the faces found in a given ":"找到给定的所有面孔\r\n"," for the default ringtone of a particular type.":" 对于特定类型的默认铃声。\r\n","SchemeInitData":"方案\r\n","Read a MediaDrm byte array property value, given the property name string.":"给定属性名称字符串，读取MediaDRM字节数组属性值。\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_COLOR_STANDARD":"android.media.mediametadataretriever.metadata_key_color_standard\r\n","android.media.MediaPlayer.clearOnSubtitleDataListener()":"android.media.mediaplayer.clearonsubtitledatalistener（）\r\n","Sets the frame rate of the video to be captured.":"设置要捕获的视频的帧速率。\r\n","android.media.audiofx.PresetReverb.PRESET_MEDIUMROOM":"android.media.audiofx.presetreverb.preset_mediumroom\r\n","Protect a socket from VPN connections.":"保护插座免受VPN连接。\r\n","Stops a playing ringtone.":"停止演奏铃声。\r\n","Indicates this is a network that has the ability to reach the carrier's\n FOTA portal, used for over the air updates.":"表明这是一个能够到达运营商的网络\r\n FOTA门户，用于空气更新。\r\n","android.media.RemoteControlClient":"android.media.remotecontrolclient\r\n","android.media.AudioPresentation.CONTENT_VISUALLY_IMPAIRED":"android.media.audiopersentation.content_visaly_impaired\r\n","Immutable class to store the information of the multi-resolution streams supported by\n            the camera device.":"不变的类存储由支持的多分辨率流的信息\r\n            相机设备。\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_CD_TRACK_NUMBER":"android.media.mediametadataretriever.metadata_key_cd_track_number\r\n","android.location.Address.setPostalCode(java.lang.String)":"android.location.address.setpostalcode（java.lang.string）\r\n","Pass in the file descriptor of the file to be written.":"传递要编写的文件的文件描述符。\r\n","Returned from the ringtone picker as a ":"从铃声采摘器返回\r\n","Request endlessly repeating device-specific extension processing of\n            camera images.":"请求无休止重复设备特定的扩展处理\r\n            相机图像。\r\n","F:Android.Locations.Location.Convert":"f：android.locations.location.convert\r\n"," values in row-major order.":"行订单的值。\r\n","android.mtp.MtpEvent.EVENT_STORE_REMOVED":"android.mtp.mtpevent.event_store_remaved\r\n","Tonemapping curve to use when ":"当调整曲线用于使用\r\n","Quality level corresponding to 8K UHD (7680 x 4320) resolution":"质量水平对应于8K UHD（7680 x 4320）分辨率\r\n","android.media.Ringtone":"android.media.rringtone\r\n","A class containing a GPS clock timestamp.":"包含GPS时钟时间戳的类。\r\n"," which has been previously added\n            to receive rerouting notifications.":" 以前已添加\r\n            接收重新路由通知。\r\n","Creates an instance with a given name in the ":"创建一个带有给定名称的实例\r\n","Constant used to specify formatting of a latitude or longitude\n in the form \"[+-]DDD.DDDDD where D indicates degrees.":"常数用于指定纬度或经度的格式\r\n 以“ [+ - ] ddd.dddd的形式，d表示度。\r\n","android.location.LocationManager.hasProvider(java.lang.String)":"android.location.locationmanager.hasprovider（java.lang.string）\r\n","A key describing the minimum Quantization Parameter allowed for encoding video.":"描述用于编码视频的最小量化参数的密钥。\r\n","android.media.MediaExtractor.SAMPLE_FLAG_PARTIAL_FRAME":"android.media.mediaextractor.sample_flag_partial_frame\r\n","Allow less-than characters. ":"允许字符不太少。\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_DECODER_INIT_FAILED":"android.media.metrics.playbackerrorevent.error_decoder_init_failed\r\n","when sensor is a trigger sensor.\n":"当传感器是触发传感器时。\r\n\r\n","android.net.VpnService.setUnderlyingNetworks(.*Network[])":"android.net.vpnservice.setunderlyingnetworks（。*network []）\r\n","The type of folder that contains folders categorized by genre as specified in the section\n            6.":"包含按类型分类的文件夹的类型，如本节所示\r\n            6。\r\n","android.inputmethodservice.KeyboardView.invalidateKey(int)":"android.inputmethodservice.keyboardview.invalidatekey（int）\r\n","Called when the effect state is updated.":"效果状态更新时调用。\r\n","android.media.midi.MidiDeviceInfo":"android.media.midi.midideviceinfo\r\n","Sets the surround sound mode.":"设置环绕声模式。\r\n","Accepts a new connection to the socket.":"接受与插座的新连接。\r\n","A key for the FORCED field for subtitle tracks.":"字幕轨道强制字段的钥匙。\r\n","Allow camera device to enable zero-shutter-lag mode for requests with\n            ":"允许摄像机设备启用零用锁定模式以获取要求的请求\r\n            \r\n","Activity intent sent when user attaches a USB accessory.":"当用户附加USB附件时发送活动意图。\r\n","CaptureRequest#LENS_APERTURE android.lens.aperture":"capturerequest＃lens_aperture android.lens.aperture\r\n","android.hardware.biometrics.BiometricPrompt.AUTHENTICATION_RESULT_TYPE_DEVICE_CREDENTIAL":"android.hardware.biometrics.biometricprompt.authentication_result_type_device_credential\r\n","android.media.MediaFormat.KEY_AUDIO_SESSION_ID":"android.media.mediaformat.key_audio_session_id\r\n","android.location.LocationManager.requestLocationUpdates(java.lang.String, long, float, java.util.concurrent.Executor, android.location.LocationListener)":"android.location.LocationManager.RequestLocationUpdates（java.lang.string，long，float，java.util.concurrent.executor，android.location.location.location.locationlistener）\r\n","android.media.tv.TvInputManager.RECORDING_ERROR_UNKNOWN":"android.media.tv.tvinputmanager.recording_error_unknown\r\n","Reads audio data from the audio hardware for recording into a direct buffer.":"从音频硬件读取音频数据，以记录到直接缓冲区。\r\n","Get the list of available audio presentations for the track.":"获取曲目可用音频演示的列表。\r\n","A constant indicating a medium power requirement.":"常数表示中等功率要求。\r\n","Whether a significant scene change is detected within the currently-set AF\n            region(s).":"当前设定的AF中是否检测到重大的场景变化\r\n            区域。\r\n","android.location.LocationListener":"Android.Location.LocationListener\r\n","Unknown error code.":"未知错误代码。\r\n","android.location.SettingInjectorService.ACTION_INJECTED_SETTING_CHANGED":"android.location.setTingInjectorService.Action_Injected_setting_changed\r\n","Checks if the device implements noise suppression.":"检查设备是否实现噪声抑制。\r\n","Initialize a specific device-specific extension augmented camera capture\n            session.":"初始化特定设备的特定扩展增强相机捕获\r\n            会议。\r\n","android.media.Session2Token.getExtras()":"android.media.session2token.getExtras（）\r\n","android.media.MediaExtractor.setDataSource(java.io.FileDescriptor, long, long)":"android.media.mediaextractor.setdatasource（java.io.filedescriptor，long，long）\r\n","#STREAM_NOTIFICATION":"#Stream_Notification\r\n","android.media.MediaMetadata.getText(java.lang.String)":"android.media.mediametadata.getText（java.lang.string）\r\n","Time lapse quality level corresponding to the highest available resolution.":"时间失误质量水平对应于最高可用分辨率。\r\n","The desired setting for the lens neutral density filter(s).":"透镜中性密度过滤器的所需设置。\r\n","android.hardware.HardwareBuffer":"android.hardware.hardwarebuffer\r\n","A constant describing a proximity sensor type. ":"描述接近传感器类型的常量。 \r\n","android.media.RoutingSessionInfo.getClientPackageName()":"android.media.routingsessioninfo.getClientpackagename（）\r\n","android.location.LocationRequest.QUALITY_BALANCED_POWER_ACCURACY":"android.location.locationrequest.quality_balenced_power_accuracy\r\n","If this key exists the media contains still image content.":"如果此键存在，则媒体包含静态图像内容。\r\n","android.mtp.MtpConstants.OPERATION_SEND_OBJECT":"android.mtp.mtpconstants.operation_send_object\r\n","android.media.metrics.PlaybackStateEvent.STATE_SEEKING":"android.media.metrics.playbackstateevent.state_seeking\r\n","Returns the object handle for the object's parent\n            Will be zero for the root directory of a storage unit":"返回对象父母的对象句柄\r\n            存储单元的根目录将为零\r\n","android.location.LocationRequest.getIntervalMillis()":"android.location.locationrequest.getIntervalmillis（）\r\n","State of a Visualizer object that was not successfully initialized upon creation":"可视化器对象的状态在创建时未成功初始初始化\r\n","Sets the number of audio channels for recording.":"设置用于录制的音频频道的数量。\r\n","#TONE_DTMF_8":"＃tone_dtmf_8\r\n","#setAllowedCapturePolicy(int)":"#setAllowedCapturePolicy（INT）\r\n","android.hardware.camera2.CameraMetadata.CONTROL_MODE_USE_EXTENDED_SCENE_MODE":"android.hardware.camera2.camerametadata.control_mode_use_extended_scene_mode\r\n","Convenience method to add a network address to the VPN interface\n using a numeric address string.":"便利方法将网络地址添加到VPN接口\r\n 使用数字地址字符串。\r\n","The maximum numbers of different types of output streams\n            that can be configured and used simultaneously by a camera device\n            for any processed (but not-stalling) formats.":"不同类型的输出流的最大数量\r\n            可以由相机设备同时配置和使用\r\n            对于任何处理（但不播种）格式。\r\n","for the\n row ID.":"为了\r\n 行ID。\r\n","#TONE_PROP_BEEP2":"＃tone_prop_beep2\r\n","Constructs a new Criteria object.":"构建一个新的标准对象。\r\n","Called when the ":"在\r\n"," is invalid or unknown.":" 无效或未知。\r\n","Information about a media route.":"有关媒体路线的信息。\r\n","MediaProjection":"媒介投射\r\n","Cancel any ongoing repeating capture set by\n            ":"取消任何正在进行的重复捕获\r\n            \r\n","Registers a listener for given sensors.":"注册给定传感器的听众。\r\n","Solo or unsolo a particular stream.":"独奏或Unsolo特定流。\r\n","Sets the audio routing for a specified mode":"为指定模式设置音频路由\r\n","A 16-byte initialization vector\n":"16字节初始化向量\r\n\r\n","android.media.browse.MediaBrowser.getItem(java.lang.String, android.media.browse.ItemCallback)":"android.media.browse.mediabrowser.getitem（java.lang.string，android.media.browse.itemcallback）\r\n"," is removed after closing.":" 关闭后被删除。\r\n","Whether this ringtone is currently playing.":"该铃声是否当前正在播放。\r\n","Quality level corresponding to the QVGA (320x240) resolution.":"质量水平对应于QVGA（320x240）分辨率。\r\n","Scramble control value indicating that the odd key is used.":"争夺控制值表示使用了奇数。\r\n","android.media.tv.TvView.setCaptionEnabled(boolean)":"android.media.tv.tv.tview.setcaptionenabled（boolean）\r\n","Sets the line of the address numbered by index (starting at 0) to the\n given String, which may be null.":"将索引编号（从0开始）编号设置为\r\n 给定的字符串，可能为空。\r\n","android.location.Location.hasAltitude()":"android.location.location.hasaltitude（）\r\n","when sensor is null or not a trigger sensor.\n":"当传感器为空或不触发传感器。\r\n\r\n","Gets the Automatic Gain Control level in dB.":"在DB中获取自动增益控制级别。\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_DRM_DEVICE_REVOKED":"android.media.metrics.playbackerrorevent.error_drm_device_revoked\r\n","android.hardware.camera2.CaptureRequest.COLOR_CORRECTION_ABERRATION_MODE":"android.hardware.camera2.capturerequest.color_correction_aberration_mode\r\n","The encapsulation type indicates what encapsulation type is required when the framework is\n            using this extra audio descriptor for playing to a device exposing this audio profile.":"封装类型指示框架为时需要什么封装类型\r\n            使用此额外的音频描述符播放到设备，以公开此音频配置文件。\r\n","Sets whether MP4 parsing should treat all video frames as key frames.":"设置MP4解析是否应将所有视频帧视为关键帧。\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_FORWARD_MATRIX1":"android.hardware.camera2.cameracharacteristics.sensor_forward_matrix1\r\n","android.media.midi.MidiReceiver.send(byte[], int, int)":"android.media.midi.midireceiver.send（byte []，int，int）\r\n","Gets the user-visible name of the session.":"获取会话的用户可见名称。\r\n","Returns a read-only ByteBuffer for a dequeued output buffer\n            index.":"返回仅读取的字节扣，用于排水输出缓冲区\r\n            指数。\r\n","android.location.GnssStatus.hasBasebandCn0DbHz(int)":"android.location.gnssstatus.hasbasebandcn0dbhz（int）\r\n","Returns true if the given location provider exists on this device, irrespective of whether\n            it is currently enabled or not.":"如果给定的位置提供商在此设备上存在，则返回true\r\n            当前是否启用了它。\r\n","android.media.CameraProfile.QUALITY_LOW":"android.media.cameraprofile.quality_low\r\n","android.media.tv.TvTrackInfo":"android.media.tv.tvtrackinfo\r\n","android.hardware.SensorAdditionalInfo.sensor":"android.hardware.sensoradditionalinfo.sensor\r\n","A key describing the desired encoding quality.":"描述所需编码质量的密钥。\r\n","Retrieves the string name of this address":"检索此地址的字符串名称\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_COLOR_RANGE":"android.media.mediametadataretriever.metadata_key_color_range\r\n","A key describing the target reference level that was assumed at the encoder for\n            calculation of attenuation gains for clipping prevention.":"描述在编码器上假设的目标参考级别的密钥\r\n            计算预防裁剪的衰减收益。\r\n","android.media.metrics.PlaybackMetrics.STREAM_TYPE_HLS":"android.media.metrics.playbackmetrics.stream_type_hls\r\n","Get a single color channel gain factor from this lens shading map by its row and column.":"通过其行和列从此镜头阴影映射中获取单个颜色通道增益系数。\r\n","android.hardware.camera2.CameraMetadata.LENS_POSE_REFERENCE_GYROSCOPE":"android.hardware.camera2.camerametadata.lens_pose_reference_gyroscope\r\n","Decay time.":"衰减时间。\r\n","The subset of the results of a single image capture from the image sensor.":"单个图像的结果从图像传感器捕获。\r\n","EditorInfo#imeOptions EditorInfo.imeOptions":"EditorInfo＃imeoptions editorinfo.imeoptions\r\n","android.net.PlatformVpnProfile.getType()":"android.net.platformvpnprofile.getType（）\r\n","Name of extra for ":"额外的名称\r\n","AudioDeviceInfo#getId()":"AudioDeviceInfo＃getId（）\r\n","android.hardware.camera2.CaptureResult.COLOR_CORRECTION_GAINS":"android.hardware.camera2.captureresult.color_correction_gains\r\n","android.hardware.camera2.CaptureResult.CONTROL_MODE":"android.hardware.camera2.captureresult.control_mode\r\n","android.hardware.input.InputManager.verifyInputEvent(android.view.InputEvent)":"android.hardware.input.inputmanager.verifyinputevent（android.view.inputevent）\r\n","android.media.AudioManager.getAllowedCapturePolicy()":"android.media.audiomanager.getallowedcapturepolicy（）\r\n","android.media.RingtoneManager.EXTRA_RINGTONE_INCLUDE_DRM":"android.media.ringtonemanager.extra_ringtone_include_drm\r\n","CaptureRequest#STATISTICS_OIS_DATA_MODE android.statistics.oisDataMode":"capturerequest＃statistics_ois_data_mode android.statistics.oisdatamode\r\n","Return whether or not this category supports grouping.":"返回该类别是否支持分组。\r\n","#extractThumbnail(Bitmap, int, int, int)":"#entractthumbnail（位图，int，int，int）\r\n","Moves the media to specified time position by considering the given mode.":"通过考虑给定模式将媒体移至指定的时间位置。\r\n","Image size (width and height dimensions).":"图像大小（宽度和高度尺寸）。\r\n","Checks whether this command group has a command that matches given ":"检查该命令组是否具有匹配给定的命令\r\n","Get the width of this input configuration.":"获取此输入配置的宽度。\r\n","CDMA LOW SS tone: {1300z 25ms, 1450Hz 25ms} repeat 16 times,\n 400ms OFF, repeat ....":"CDMA低SS音调：{1300Z 25ms，1450Hz 25ms}重复16次，\r\n 400毫米，重复...\r\n","Start playing the sound.":"开始播放声音。\r\n","android.media.FaceDetector.findFaces(android.graphics.Bitmap, android.media.Face[])":"android.media.facedetector.findfaces（android.graphics.bitmap，android.media.face []）\r\n",": the area inside of\n the content insets can be touched.":"：内部的区域\r\n 内容插图可以触摸。\r\n","android.location.GnssMeasurement.getCarrierPhaseUncertainty()":"android.location.gnssmeasurement.getCarrierPhaseClaseClaneTy（）\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_SAMPLERATE":"android.media.mediametadataretriever.metadata_key_samplerate\r\n",": Recording cannot proceed due to\n            insufficient storage space.":"：由于录制无法进行\r\n            存储空间不足。\r\n","Register the callback to be notified when the state of a hardware geofence\n            monitoring system changes.":"在硬件地理林格状态时注册回调要通知\r\n            监视系统更改。\r\n","Returns the rough accuracy of this provider, one of the ProviderProperties.":"返回该提供商的粗糙精度，这是ProviderProperties之一。\r\n","android.media.session.MediaController":"android.media.session.mediacontroller\r\n","Operation code for GetDeviceInfo":"GetDeviceInfo的操作代码\r\n"," currently known\n            to this MediaRouter.":" 目前已知\r\n            对这个Mediarouter。\r\n","android.media.MediaFormat.removeFeature(java.lang.String)":"android.media.mediaformat.removefeature（java.lang.string）\r\n","#sendSessionCommand":"#SendSessionCommand\r\n","Maximum raw value output by sensor.":"传感器的最大原始价值输出。\r\n","android.location.GnssMeasurement.STATE_MSEC_AMBIGUOUS":"android.location.gnssmeasurement.state_msec_ambiguul\r\n","#getFullInterSignalBiasNanos()":"#getfullintersignalbiasnanos（）\r\n","android.location.GnssClock.getElapsedRealtimeNanos()":"android.location.gnssclock.getelapsedrealtimenanos（）\r\n","Get the current state of playback.":"获取当前播放状态。\r\n","if it is called before\n prepare().\n":"如果以前被调用\r\n 准备（）。\r\n\r\n","android.location.GnssClock.getFullBiasNanos()":"android.location.gnssclock.getfullbiasnanos（）\r\n"," tokens.":" 令牌。\r\n","Returns the value of an integer key, or the default value if the key is missing.":"返回整数键的值，或者如果丢失了键，则返回默认值。\r\n","luminance under a cloudy sky in lux":"在勒克斯的阴天下的亮度\r\n",": Video is unavailable because\n            the output protection level enabled on the device is not sufficient to meet the requirements\n            in the license policy.":"：视频不可用，因为\r\n            设备上启用的输出保护级别不足以满足要求\r\n            在许可政策中。\r\n",": Video is unavailable because\n            the source is not physically connected, for example the HDMI cable is not connected.":"：视频不可用，因为\r\n            源没有物理连接，例如HDMI电缆未连接。\r\n","Playback state of a RemoteControlClient which is fast rewinding in the media\n               it is currently playing.":"在媒体中快速倒带的remotecontrolclient的播放状态\r\n               它目前正在播放。\r\n","if provider is null or doesn't exist":"如果提供商为null或不存在\r\n","Float.NaN":"float.nan\r\n","android.media.AudioTrack.setLoopPoints(int, int, int)":"android.media.audiotrack.setlooppoints（int，int，int）\r\n","android.media.metrics.PlaybackStateEvent.STATE_STOPPED":"android.media.metrics.playbackstateevent.state_stopped\r\n"," and changes to these parameters no longer generate\n            output format change event.":" 并且对这些参数的更改不再生成\r\n            输出格式更改事件。\r\n"," to use for displaying the video\n            portion of the media.":" 用于显示视频\r\n            媒体的一部分。\r\n","A key describing the number of frames to trim from the start of the decoded audio stream.":"一个键，描述从解码音频流的开始时进行修剪的帧数。\r\n","Show a toast containing the current volume.":"显示包含当前体积的吐司。\r\n","#TAG_DATETIME":"#TAG_DATETIME\r\n",": Record.":"： 记录。\r\n","Sends a sequence of characters to the listener.":"向听众发送一系列字符。\r\n","android.media.AudioFormat.getEncoding()":"android.media.audioformat.getencoding（）\r\n","android.media.AudioTimestamp.TIMEBASE_BOOTTIME":"android.media.audiotimestamp.TimeBase_boottime\r\n","android.media.ExifInterface.getAttributeDouble(java.lang.String, double)":"android.media.exifinterface.getAttributeduble（java.lang.string，double）\r\n","This is a hook that subclasses can use to perform initialization of\n            their interface.":"这是子类可用于执行初始化的钩子\r\n            他们的界面。\r\n","android.inputmethodservice.KeyboardView.setShifted(boolean)":"android.inputmethodservice.keyboardview.sethifted（boolean）\r\n","android.media.ExifInterface.TAG_BRIGHTNESS_VALUE":"android.media.exifinterface.tag_brightness_value\r\n","android.media.MediaRecorder.setVideoProfile(android.media.VideoProfile)":"android.media.mediarecorder.setVideProfile（android.media.videprofile）\r\n"," for creating a\n            ":" 用于创建一个\r\n            \r\n"," that are supported by this camera device.":" 该相机设备支持。\r\n","android.hardware.camera2.CameraDevice.createReprocessableCaptureSession(android.hardware.camera2.params.InputConfiguration, java.util.List, android.hardware.camera2.StateCallback, android.os.Handler)":"android.hardware.camera2.CameradeVice.CreateProcerSableCapturesessessionSession（android.hardware.camera2.params.params.params.inputconfiguration，java.util.list，android.hardware.hardware.camera.camera2.camera2.statecallback，android.os.handler）\r\n","android.hardware.camera2.CameraCharacteristics.LENS_INFO_AVAILABLE_FILTER_DENSITIES":"android.hardware.camera2.cameracharacteristics.lens_info_available_filter_densities\r\n","android.hardware.camera2.CameraCaptureSession.finalizeOutputConfigurations(java.util.List)":"android.hardware.camera2.cameracapturesession.finalizeoutputconfigurations（java.util.list）\r\n","android.media.MediaCodecList":"android.media.mediacodeclist\r\n","android.location.Location.hasSpeedAccuracy()":"android.location.location.hasspeedAccuracy（）\r\n","android.media.AudioMetadataReadMap.containsKey(android.media.Key)":"android.media.audiometadatareadmap.containskey（android.media.key）\r\n","android.media.metrics.Event.getTimeSinceCreatedMillis()":"android.media.metrics.event.getTimesInceCreatedMillis（）\r\n","If this method is called after ":"如果此方法是在调用的\r\n","android.net.MailTo.parse(java.lang.String)":"android.net.mailto.parse（java.lang.string）\r\n","MediaRoute2ProviderService":"Mediaroute2ProviderService\r\n","android.hardware.SensorManager.MAGNETIC_FIELD_EARTH_MIN":"android.hardware.sensormanager.magnetic_field_earth_min\r\n","android.hardware.camera2.params.OisSample.getXshift()":"android.hardware.camera2.params.oissample.getxshift（）\r\n","android.media.ImageReader.getMaxImages()":"android.media.imagereader.getMaximages（）\r\n","android.hardware.camera2.params.StreamConfigurationMap.getInputSizes(int)":"android.hardware.camera2.params.streamconfigurationmap.getInputsizes（int）\r\n","Unknown track change reason.":"未知的轨道变更原因。\r\n"," traffic originating\n            from the current thread. -or- Set specific UID to use when accounting ":" 交通原始\r\n            从当前线程。 - 或设置会计时使用的特定UID\r\n","Method called when a parameter value has changed.":"当参数值已更改时调用方法。\r\n","android.location.GnssMeasurement.getCodeType()":"android.location.gnssmeasurement.getCodeType（）\r\n","Defines the output format.":"定义输出格式。\r\n","Gets the control hints":"获取控制提示\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_COLOR_FILTER_ARRANGEMENT":"android.hardware.camera2.cameracharacteristics.sensor_info_color_filter_arrangement\r\n","android.media.AudioTrack.getAudioFormat()":"android.media.audiotrack.getaudioformat（）\r\n","MidiOutputPort":"MIDIOUTPUTPORT\r\n","android.media.MediaFormat.KEY_I_FRAME_INTERVAL":"android.media.mediaformat.key_i_frame_interval\r\n","Initializes the request so it can read or write data on the given endpoint.":"初始化该请求，以便可以在给定端点上读取或写入数据。\r\n","CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_EXTERNAL EXTERNAL":"camerametadata＃info_supported_hardware_level_external外部\r\n"," within this ":" 在此\r\n","Called to inform the input method that text input has started in an\n            editor.":"叫通知输入方法文本输入已在\r\n            编辑。\r\n"," as an output.":"作为输出。\r\n","android.location.SettingInjectorService.ACTION_SERVICE_INTENT":"android.location.setTingInjectorService.Action_Service_intent\r\n","Creates an instance backed by the parser with the given ":"创建一个由解析器支持的实例\r\n"," object for the codec at\n            the given ":" 编解码器的对象\r\n            给定\r\n","android.mtp.MtpEvent.EVENT_REQUEST_OBJECT_TRANSFER":"android.mtp.mtpevent.event_request_object_transfer\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_IMAGE_WIDTH":"android.media.mediametadataretriever.metadata_key_image_width\r\n","android.hardware.camera2.CaptureRequest.CONTROL_EFFECT_MODE":"android.hardware.camera2.capturerequest.control_effect_mode\r\n","android.location.provider.ProviderProperties.hasAltitudeSupport()":"android.location.provider.providerproperties.hasaltitudesupport（）\r\n","android.hardware.biometrics.BiometricManager.canAuthenticate(int)":"android.hardware.biometrics.biometricmanager.canauthenticate（int）\r\n","android.location.Location.setElapsedRealtimeNanos(long)":"Android.Location.Location.SetelapsedRealTimenanos（长）\r\n","android.media.MediaMuxer.setLocation(float, float)":"android.media.mediamuxer.setlocation（float，float）\r\n","android.inputmethodservice.InputMethodService.switchToPreviousInputMethod()":"android.inputmethodservice.inputmethodservice.switchtopreviousinputmethod（）\r\n","Gets the band that has the most effect on the given frequency.":"获取对给定频率产生最大影响的频段。\r\n",": Video is unavailable because\n            smart card is invalid.":"：视频不可用，因为\r\n            智能卡无效。\r\n","AudioTimestamp":"录音室\r\n","Returns the value of a string key.":"返回字符串键的值。\r\n","#SENSOR_DELAY_NORMAL":"#sensor_delay_normal\r\n","android.mtp.MtpEvent.EVENT_DEVICE_PROP_CHANGED":"android.mtp.mtpevent.event_device_prop_changed\r\n","#getCarrierPhaseUncertainty()":"#getCarrierPhaseUnccternity（）\r\n","Set this flag on the session to indicate that it handles transport\n            control commands through its ":"在会话上设置此标志以指示它处理运输\r\n            控制命令通过其\r\n"," to use as an output for the\n            repeating request\n            ":" 用作输出\r\n            重复请求\r\n            \r\n","Operation code for GetObjectReferences":"getObjectReferences的操作代码\r\n","android.hardware.camera2.CaptureResult.JPEG_QUALITY":"android.hardware.camera2.captureresult.jpeg_quality\r\n","android.hardware.usb.UsbManager.EXTRA_DEVICE":"android.hardware.usb.usbmanager.extra_device\r\n","android.hardware.location.GeofenceHardwareRequest.setMonitorTransitions(int)":"android.hardware.location.geofencehardwarerequest.setMonitorTransitions（int）\r\n","android.location.Address.clearLongitude()":"android.location.Address.Clearlongitude（）\r\n","android.hardware.camera2.CameraManager.setTorchMode(java.lang.String, boolean)":"android.hardware.camera2.cameramanager.settorchmode（java.lang.string，boolean）\r\n","android.hardware.usb.UsbEndpoint.getMaxPacketSize()":"android.hardware.usb.usbendpoint.getmaxpacketsize（）\r\n","android.media.MediaPlayer.create(android.content.Context, int)":"android.media.mediaplayer.create（android.content.context，int）\r\n","android.media.CamcorderProfile.duration":"android.media.camcorderprofile.duration\r\n","Enable multiple surfaces sharing the same OutputConfiguration":"启用多个表面共享相同的输出configuration\r\n","android.media.metrics.MediaMetricsManager.createPlaybackSession()":"android.media.metrics.mediametricsmanager.createplaybacksession（）\r\n","android.location.Geocoder.Geocoder(android.content.Context)":"android.location.geocoder.geocoder（android.content.context）\r\n","#CONNECTION_STATE_CONNECTING":"#connection_state_connecting\r\n","android.media.metrics.PlaybackMetrics.getNetworkBytesRead()":"android.media.metrics.playbackmetrics.getnetworkbytesread（）\r\n","Seeks within the media container being extracted.":"在提取的媒体容器中寻求。\r\n","android.media.session.PlaybackState.ACTION_REWIND":"android.media.session.playbackstate.action_rewind\r\n","Number of bands. ":"乐队数量。\r\n"," object) to route\n            the output/input to/from.":" 对象）路线\r\n            输出/输入到/输入。\r\n","#TONE_CDMA_MED_S_X4":"＃tone_cdma_med_s_x4\r\n","#getSupportedVendorParameters":"#getSupportedVendorParameters\r\n","android.media.AudioDescriptor.STANDARD_EDID":"android.media.audiodescriptor.standard_edid\r\n","android.hardware.usb.UsbDevice.getDeviceProtocol()":"android.hardware.usb.usbdevice.getDeviceProtocol（）\r\n","\n            set to\n            ":"\r\n            调成\r\n            \r\n","Returns the elapsed real-time of this clock since system boot, in nanoseconds.":"自系统引导以来，纳米秒以来，返回该时钟的实时返回。\r\n","if the Surface endpoint is no longer valid":"如果表面端点不再有效\r\n","Smallest step by which the exposure compensation\n            can be changed.":"接触补偿的最小步骤\r\n            可以更改。\r\n","A key describing the duration (in microseconds) of the content.":"描述内容的持续时间（以微秒为单位）。\r\n","android.hardware.usb.UsbDevice.getVersion()":"android.hardware.usb.usbdevice.getversion（）\r\n","android.media.ImageWriter.setOnImageReleasedListener(android.media.OnImageReleasedListener, android.os.Handler)":"android.media.imageWriter.setOnimagereLEADELESSENER（android.media.onimagerelearsleastleasterlistener，android.os.handler）\r\n","Gets the total number of presets the equalizer supports.":"获取均衡器支持的预设总数。\r\n"," but submits a buffer that is\n            potentially encrypted.":" 但是提交一个缓冲区\r\n            潜在的加密。\r\n","android.hardware.Sensor.STRING_TYPE_MAGNETIC_FIELD":"android.hardware.sensor.string_type_magnetic_field\r\n","Quality level corresponding to 2K (2048 x 1080) resolution":"质量水平对应于2K（2048 x 1080）分辨率\r\n","Indicates whether spoken subtitles for the visually impaired are available.":"指示视障人士的口语字幕是否可用。\r\n","android.media.SoundPool.release()":"android.media.soundpool.release（）\r\n","android.mtp.MtpEvent.getParameter3()":"android.mtp.mtpevent.getParameter3（）\r\n","Returns the postal code of the address, for example \"94110\",\n            or null if it is unknown. -or- Sets the postal code of the address to the given String, which may\n            be null.":"返回地址的邮政编码，例如“ 94110”，\r\n            或null如果未知。 - 或 - 将地址的邮政编码设置为给定的字符串，可能\r\n            为null。\r\n","Called when the user quickly moves the finger from right to left.":"当用户迅速将手指从右向左移动时打电话。\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_AVAILABLE_TEST_PATTERN_MODES":"android.hardware.camera2.cameracharacteristics.sensor_available_test_pattern_modes\r\n","android.media.ExifInterface.TAG_GPS_LATITUDE":"android.media.exifinterface.tag_gps_latitude\r\n","Describes specific properties of a requested network for use in a ":"描述请求网络的特定属性用于\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_NUM_TRACKS":"android.media.mediametadataretriever.metadata_key_num_tracks\r\n","Call supervisory tone, Congestion:\n      CEPT, JAPAN:    425Hz, 200ms ON, 200ms OFF...\n      ANSI (IS-95):   480Hz+620Hz, 250ms ON, 250ms OFF...":"呼叫监督语调，拥塞：\r\n      日本CEPT：425Hz，200ms开，200ms折叠...\r\n      ANSI（IS-95）：480Hz+620Hz，250ms开，250毫秒...\r\n","android.media.SyncParams.getSyncSource()":"android.media.syncparams.getSyncsource（）\r\n"," suitable for adding keys.":" 适用于添加钥匙。\r\n","android.hardware.GeomagneticField.GeomagneticField(float, float, float, long)":"android.hardware.Geomagneticfield.Geomagneticfield（浮子，浮点，浮点，长）\r\n","Returns the value of a float key.":"返回浮子键的值。\r\n","DRM key management uses software-based whitebox crypto.":"DRM密钥管理使用基于软件的WhiteBox加密货币。\r\n","android.media.AudioRecord.getRoutedDevice()":"android.media.audiorecord.getRoutedDevice（）\r\n","android.net.SSLCertificateSocketFactory.getDefault(int)":"android.net.sslcertificatesocketFactory.getDefault（int）\r\n","Set an intent for launching UI for this Session.":"设定本届会议启动UI的意图。\r\n","Sets the maximum filesize (in bytes) of the recording session.":"设置录制会话的最大文件（以字节为单位）。\r\n","List of tonemapping modes for ":"tonemapping模式的列表\r\n","android.location.Address.hasLongitude()":"android.location.address.haslongitude（）\r\n","i":"一世\r\n","Remove the current keys from a session.":"从会话中删除当前键。\r\n","android.media.ExifInterface.TAG_FOCAL_LENGTH":"android.media.exifinterface.tag_focal_length\r\n","When configured to use a Direct Proxy this returns the port\n of the proxy\n":"当配置为使用直接代理时，此返回端口\r\n 代理\r\n\r\n","android.hardware.HardwareBuffer.close()":"android.hardware.hardwarebuffer.close（）\r\n","android.location.Geocoder.Geocoder(android.content.Context, java.util.Locale)":"android.location.geocoder.geocoder（android.content.context，java.util.locale）\r\n","AudioFormat#CHANNEL_IN_MONO":"AudioFormat＃channel_in_mono\r\n","Create a thumbnail for given image file.":"为给定的图像文件创建缩略图。\r\n","android.media.Ringtone.play()":"android.media.rringtone.play（）\r\n","android.inputmethodservice.InputMethodService.isFullscreenMode()":"android.inputmethodservice.inputmethodservice.isfullscreenmode（）\r\n","Flips image vertically and/or horizontally.":"垂直和/或水平翻转图像。\r\n","CDMA USA Ringback: 440Hz+480Hz 2s ON, 4000 OFF ...":"CDMA USA RINGBACK：440Hz+480Hz 2s on，4000 OFF ...\r\n","TvInputInfo":"tvinputinfo\r\n","android.media.MediaDrm.getPropertyString(java.lang.String)":"android.media.mediadrm.getPropertystring（java.lang.string）\r\n","The recommended stream configuration map for use case preview must contain a subset of\n            efficient, non-stalling configurations that must include both\n            ":"用于用例预览的推荐流配置映射必须包含\r\n            高效、无停滞的配置，必须同时包括\r\n            \r\n","android.media.ThumbnailUtils.OPTIONS_RECYCLE_INPUT":"android.media.thumbnailutils.options_recycle_input\r\n","Instantiate a new effect with the given effect name.":"用给定效果名称实例化新效果。\r\n","Command code for the custom command which can be defined by string action in the\n            ":"自定义命令的命令代码，可以通过字符串操作在\r\n            \r\n","No mode switching is allowed.":"不允许进行模式切换。\r\n","android.media.session.PlaybackState.STATE_PLAYING":"android.media.session.playbackstate.state_playing\r\n","Retrieves the audio adjust mode.":"检索音频调整模式。\r\n","Specifies a video scaling mode. ":"指定视频缩放模式。\r\n","android.media.AudioDescriptor.getDescriptor()":"android.media.audiodescriptor.getDescriptor（）\r\n","Register for location updates from the given provider with the given arguments, and a\n            callback on the ":"注册给定提供商的位置更新，并带有给定参数，\r\n            回调\r\n"," for all effects currently enabled on\n            the audio capture client (e.":" 对于当前启用的所有效果\r\n            音频捕获客户端（e。\r\n","Unregister a MediaProjection listener.":"取消介绍媒体注射的听众。\r\n","android.media.midi.MidiDeviceService.getDeviceInfo()":"android.media.midi.midideviceservice.getDeviceInfo（）\r\n","android.media.ExifInterface.TAG_OECF":"android.media.exifinterface.tag_oecf\r\n","Gets the current playback position.":"获取当前的播放位置。\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_FORWARD_MATRIX2":"android.hardware.camera2.cameracharacteristics.sensor_forward_matrix2\r\n","android.media.MediaParser.release()":"android.media.mediaparser.release（）\r\n"," that\n            are supported by this camera device, and each extended scene mode's capabilities such\n            as maximum streaming size, and supported zoom ratio ranges.":" 那\r\n            由此相机设备支持，每个扩展场景模式的功能此类功能\r\n            作为最大流量大小和支持的缩放比率范围。\r\n","Gets the clock's sub-nanosecond bias.":"获得时钟的子纳秒偏差。\r\n","USB class for CDC devices (communications device class).":"CDC设备的USB类（通信设备类）。\r\n","android.media.AudioTimestamp.TIMEBASE_MONOTONIC":"android.media.audiotimestamp.TimeBase_Monotonic\r\n","android.hardware.camera2.CameraManager.isConcurrentSessionConfigurationSupported(java.util.Map)":"android.hardware.camera2.cameramanager.isconcurrentsessessesconconfigurationsupported（java.util.map）\r\n","Direction the camera faces relative to\n            device screen.":"相机相对于相机的方向\r\n            设备屏幕。\r\n","Register a callback to be invoked when the DRM info is\n            known.":"在DRM信息为时注册要调用的回调\r\n            已知。\r\n","Returns a constant indicating the desired bearing accuracy. -or- Indicates the desired bearing accuracy.":"返回一个常数，表示所需的轴承精度。 - 或指示所需的轴承精度。\r\n","android.media.AudioTrack.setLogSessionId(android.media.metrics.LogSessionId)":"android.media.audiotrack.setLogsessionId（android.media.metrics.logsessionid）\r\n","android.hardware.camera2.CaptureResult.LENS_FILTER_DENSITY":"android.hardware.camera2.captureresult.lens_filter_dense\r\n","android.mtp.MtpConstants.OPERATION_CLOSE_SESSION":"android.mtp.mtpconstants.operation_close_session\r\n","Error code for an AudioTrack initialization failure":"录音初始化失败的错误代码\r\n","android.hardware.display.DisplayManager.VIRTUAL_DISPLAY_FLAG_SECURE":"android.hardware.display.displaymanager.virtual_display_flag_secure\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_VIDEO_FRAME_COUNT":"android.media.mediametadataretriever.metadata_key_video_frame_count\r\n","LocationManager":"LocationManager\r\n","android.media.tv.TvInputManager.TIME_SHIFT_INVALID_TIME":"android.media.tv.tvinputmanager.time_shift_invalid_time\r\n","android.hardware.fingerprint.FingerprintManager.isHardwareDetected()":"android.hardware.fingerprint.fingerprintmanager.ishardwaredetected（）\r\n","if index ":"如果索引\r\n","Returns the sequence number for the MTP object\n            This field is typically not used for MTP devices,\n            but is sometimes used to define a sequence of photos\n            on PTP cameras.":"返回MTP对象的序列号\r\n            该字段通常不用于MTP设备，\r\n            但有时被用来定义一系列照片\r\n            在PTP摄像机上。\r\n","android.inputmethodservice.InputMethodService.onExtractingInputChanged(android.view.inputmethod.EditorInfo)":"android.inputmethodservice.inputmethodservice.onextractinginputchanged（android.view.inputmethod.editorinfo）\r\n","Apply an IPsec transform to a datagram socket.":"将IPSEC转换应用于数据报套接字。\r\n","Constant to indiciate that the monitoring system is currently\n available for monitoring geofences.":"不断指出监视系统当前是\r\n 可用于监视地理诉讼。\r\n","android.media.MediaFormat.KEY_MPEGH_COMPATIBLE_SETS":"android.media.mediaformat.key_mpegh_compatible_sets\r\n","android.graphics.SurfaceTexture SurfaceTexture.class":"android.graphics.surfaceTexture surfaceTexture.class\r\n","android.media.effect.EffectFactory.EFFECT_SEPIA":"android.media.effect.effectfactory.effect_sepia\r\n","#DngCreator":"#dngcreator\r\n","android.media.MediaMetadata.METADATA_KEY_GENRE":"android.media.mediametadata.metadata_key_genre\r\n","for the\n title.":"为了\r\n 标题。\r\n","Gets the Status of the navigation message contained in the object.":"获取对象中包含的导航消息的状态。\r\n","android.hardware.display.DisplayManager.VIRTUAL_DISPLAY_FLAG_AUTO_MIRROR":"android.hardware.display.displaymanager.virtual_display_flag_auto_mirror\r\n","android.location.LocationManager.EXTRA_GNSS_CAPABILITIES":"android.location.locationmanager.extra_gnss_capabilities\r\n","#TONE_CDMA_HIGH_SSL":"#TONE_CDMA_HIGH_SSL\r\n","android.media.ToneGenerator":"android.media.tonegenerator\r\n","The OnDataCaptureListener interface defines methods called by the Visualizer to periodically\n update the audio visualization capture.":"OnDataCaptureListener界面定义了可视化器调用的方法\r\n 更新音频可视化捕获。\r\n","Name under which an InputMethod service component publishes information\n            about itself.":"inputmethod服务组件的名称发布信息\r\n            关于自己。\r\n","Used for receiving notifications when GPS status has changed.":"GPS状态发生变化时，用于接收通知。\r\n","Gets the center frequency of the given band.":"获取给定带的中心频率。\r\n","android.media.ThumbnailUtils.createAudioThumbnail(java.io.File, android.util.Size, android.os.CancellationSignal)":"android.media.thumbnailutils.createaudiothumbnail（java.io.file，android.util.util.size，android.os.os.cancellationsignal）\r\n","The metadata key to retrieve the information about the album title\n of the data source.":"检索有关专辑标题信息的元数据键\r\n 数据源。\r\n","A Uri formatted String for an icon or thumbnail that is suitable for\n            display to the user.":"适用于图标或缩略图的URI格式字符串\r\n            向用户显示。\r\n","android.location.GpsStatus.getMaxSatellites()":"android.location.gpsstatus.getmaxsatellites（）\r\n","The Ethernet data connection. ":"以太网数据连接。\r\n","The type of folder that is unknown or contains media elements of mixed types as specified in\n            the section 6.":"未知或包含混合类型的媒体元素的文件夹类型\r\n            第6节。\r\n","Authentication type reported by ":"认证类型报告\r\n","SSLSessionCache":"sslsessioncache\r\n","Decay HF ratio. ":"衰减HF比。\r\n","android.media.SoundPool.setOnLoadCompleteListener(android.media.OnLoadCompleteListener)":"android.media.soundpool.setonloadCompletElistener（android.media.onloadCompletElistener）\r\n","Check if an effect is supported on this platform.":"检查该平台上是否支持效果。\r\n","Gets an instance of the media router associated with the context.":"获取与上下文关联的媒体路由器的实例。\r\n","android.location.LocationManager.requestSingleUpdate(java.lang.String, android.location.LocationListener, android.os.Looper)":"android.location.LocationManager.RequestSingLeupdate（java.lang.string，android.location.location.locationlistener，android.os.oper）\r\n","android.media.metrics.PlaybackMetrics.getContentType()":"android.media.metrics.playbackmetrics.getContentType（）\r\n","Return the decoder delay of an offloaded track, expressed in frames, previously set with\n            ":"返回以框架表示的卸载轨道的解码器延迟，以前设置为\r\n            \r\n","android.media.MediaDrm.requiresSecureDecoder(java.lang.String)":"android.media.mediadrm.Requireressecuredecoder（java.lang.string）\r\n","android.location.GnssClock.getLeapSecond()":"android.location.gnssclock.getleapsecond（）\r\n","android.media.MediaParser.PARAMETER_ADTS_ENABLE_CBR_SEEKING":"android.media.mediaparser.parameter_adts_enable_cbr_seeking\r\n","AudioDeviceInfo":"AudioDeviceInfo\r\n"," to receive notifications of routing\n            changes on this MediaRecorder.":" 接收路由通知\r\n            在此Mediarecorder上更改。\r\n","Check whether a given extension is available and return the\n            supported output surface resolutions that can be used for high-quality capture\n            requests via ":"检查给定的扩展名是否可用，然后返回\r\n            可用于高质量捕获的支持的输出表面分辨率\r\n            通过\r\n","Build a special channel URI intended to be used with pass-through inputs.":"构建一个特殊的频道URI，旨在与传递输入一起使用。\r\n","Sets the period at which the listener is called, if set with\n            ":"设置调用听众的时间，如果设置\r\n            \r\n","android.media.AudioRecord.getActiveRecordingConfiguration()":"android.media.audiorecord.getActiverecordingConfiguration（）\r\n","Discard all captures currently pending and in-progress as fast as possible.":"丢弃当前正在待处理的所有捕获，并尽快进行中。\r\n","android.location.Address.setLocality(java.lang.String)":"android.location.Address.SetLocality（java.lang.string）\r\n","Error code for the loading position falling behind the sliding window of available live\n            content.":"加载位置的错误代码落在可用实时的滑动窗口后面\r\n            内容。\r\n","JetPlayer provides access to JET content playback and control.":"JetPlayer提供了对JET内容播放和控制的访问权限。\r\n","android.media.MediaRouter.ROUTE_TYPE_USER":"android.media.mediarouter.route_type_user\r\n","Quality level corresponding to QHD (2560 x 1440) resolution":"质量水平对应于QHD（2560 x 1440）分辨率\r\n","android.hardware.location.GeofenceHardware.GEOFENCE_ENTERED":"android.hardware.location.geofencehardware.geofence_entered\r\n","android.media.MediaMetadata.METADATA_KEY_ALBUM_ARTIST":"android.media.mediametadata.metadata_key_album_artist\r\n","Close this input method's soft input area, removing it from the display.":"关闭此输入方法的软输入区域，将其从显示屏中删除。\r\n","Returns the desired interval of location updates, or ":"返回位置更新的所需间隔，或\r\n","android.hardware.Sensor.TYPE_HINGE_ANGLE":"android.hardware.sensor.type_hinge_angle\r\n","android.media.MediaCodec.getCanonicalName()":"android.media.mediacodec.getCanonicalName（）\r\n","android.media.audiofx.AudioEffect.EXTRA_AUDIO_SESSION":"android.media.audiofx.audioeffect.extra_audio_session\r\n","android.media.AudioRecord.getState()":"android.media.audiorecord.getstate（）\r\n","Reads audio data from the audio hardware for recording into a float array.":"从音频硬件读取音频数据，以记录到浮点数组中。\r\n","android.location.LocationManager.getGnssAntennaInfos()":"android.location.locationmanager.getgnssantennainfos（）\r\n","Returns a line of the address numbered by the given index\n (starting at 0), or null if no such line is present.":"返回给定索引编号的地址的行\r\n （从0开始），如果没有这样的行，则为null。\r\n","An immutable object that represents the linear correlation between the media time\n            and the system time.":"一个不变的对象，代表媒体时间之间的线性相关性\r\n            和系统时间。\r\n","android.media.ExifInterface.TAG_PIXEL_X_DIMENSION":"android.media.exifinterface.tag_pixel_x_dimension\r\n","Return Metrics data about the current media container.":"返回有关当前媒体容器的指标数据。\r\n","Verify the details of an ":"验证一个细节\r\n","android.media.MediaPlayer.setDataSource(java.io.FileDescriptor, long, long)":"android.media.mediaplayer.setdatasource（java.io.filedescriptor，long，long）\r\n","android.media.audiofx.Visualizer.SUCCESS":"android.media.audiofx.Visualizer.Success\r\n","Broadcast Action: A sticky broadcast indicating an HDMI cable was plugged or unplugged.":"广播动作：粘性广播，表明HDMI电缆已被插入或插电。\r\n","android.mtp.MtpConstants.OPERATION_GET_NUM_OBJECTS":"android.mtp.mtpconstants.operation_get_num_objects\r\n","android.media.MediaFormat.KEY_FLAC_COMPRESSION_LEVEL":"android.media.mediaformat.key_flac_compression_level\r\n","android.hardware.SensorManager.unregisterListener(android.hardware.SensorListener)":"机器人。硬件。SensorManager。unregisterListener（android。硬件。SensorListener）\r\n","MediaScannerConnection":"MediaScannerConnection\r\n","Return a value sanitizer that does not allow any special characters,\n            and also does not allow script URLs.":"返回不允许任何特殊字符的价值消毒剂，\r\n            而且也不允许脚本URL。\r\n","android.media.Session2Command":"android.media.session2Command\r\n","DynamicsProcessing is an audio effect for equalizing and changing dynamic range properties of the\n            sound.":"DynamicsProcessing是用于均衡和更改动态范围属性的音频效应\r\n            声音。\r\n","Returns the interface's bInterfaceNumber field.":"返回接口的BinterfaceNumber字段。\r\n","Return the usage.":"返回用法。\r\n","Sanitize a value.":"消毒价值。\r\n","Returns the Locale associated with this address.":"返回与此地址关联的语言环境。\r\n","android.media.AudioRecordingConfiguration.getEffects()":"android.media.audiorecordingConfiguration.getEffects（）\r\n","android.hardware.camera2.CameraCharacteristics.CONTROL_AE_COMPENSATION_RANGE":"android.hardware.camera2.cameracharacteristics.control_ae_compensation_range\r\n","Get the speed if it is available, in meters/second over ground. -or- Set the speed, in meters/second over ground.":"如果可用，请以米/秒的速度获取速度。 - 或 - 设置速度，以米/第二秒为单位。\r\n","android.location.Address.clearLatitude()":"android.location.address.clearlatitude（）\r\n","#getBasebandCn0DbHz()":"＃getBaseBandCn0dBHz（）\r\n","ImageReader#acquireNextImage()":"Imagereader＃acecReNextImage（）\r\n","android.media.MediaMetadataRetriever.getFrameAtIndex(int)":"android.media.mediametadataretriever.getFrameAtIndex（INT）\r\n","android.media.AudioManager.getStreamVolume(int)":"android.media.audiomanager.getStreamVolume（int）\r\n","Standard atmosphere, or average sea-level pressure in hPa (millibar)":"标准气氛或HPA（Millibar）的平均海平面压力\r\n","#PLAYSTATE_BUFFERING":"#playstate_buffering\r\n","Set the MediaPlayer to start when this MediaPlayer finishes playback\n            (i.":"将媒体播放器设置为在此媒体播放器完成播放时开始\r\n            （一世。\r\n","android.location.LocationManager.addTestProvider(java.lang.String, android.location.provider.ProviderProperties, java.util.Set)":"android.location.LocationManager.AddtestProvider（java.lang.string，android.location.provider.provider.providerproperties，java.util.set）\r\n","android.hardware.camera2.CameraCaptureSession.abortCaptures()":"android.hardware.camera2.cameracapturesessession.abortcaptures（）\r\n","Request the startup of a previously provisioned VPN.":"请求先前配置的VPN的启动。\r\n","Return the UTC time of this location fix, in milliseconds since epoch (January 1, 1970). -or- Set the UTC time of this fix, in milliseconds since epoch (January 1, 1970).":"自Epoch（1970年1月1日）以来，以毫秒为单位返回该位置修复的UTC时间。自1970年1月1日以来，以毫秒为单位，以毫秒为单位，以毫秒为单位。\r\n","android.hardware.camera2.CameraExtensionSession":"android.hardware.camera2.cameraextensionsessess\r\n","android.hardware.lights.Light.getId()":"android.hardware.lights.light.getID（）\r\n","CameraManager#getCameraIdList":"摄影师＃getCamerAidlist\r\n","android.media.CamcorderProfile.audioChannels":"android.media.camcorderprofile.audiochannels\r\n","android.hardware.usb.UsbInterface.getAlternateSetting()":"android.hardware.usb.usbinterface.getalternatesetting（）\r\n","android.hardware.Sensor.STRING_TYPE_STATIONARY_DETECT":"android.hardware.sensor.string_type_stationary_detect\r\n","android.media.Session2Command.getCustomAction()":"android.media.session2command.getCustomAction（）\r\n","Create a new ImageWriter.":"创建一个新的ImageWriter。\r\n","Builder#setChannelMask(int)":"构建器＃setChannelMask（int）\r\n","Sticky broadcast intent action indicating that the Bluetooth SCO audio\n            connection state has been updated.":"粘性广播意图动作表明蓝牙SCO音频\r\n            连接状态已更新。\r\n"," for this route.":" 对于这条路线。\r\n","android.hardware.camera2.CaptureResult.NOISE_REDUCTION_MODE":"android.hardware.camera2.captureresult.noise_reduction_mode\r\n","Early reflections delay.":"早期反射延迟。\r\n"," to retrieve\n            a sync (or key) frame associated with a data source that is located\n            closest to (in time) or at the given time.":" 检索\r\n            与位于数据源关联的同步框架（或键）帧\r\n            最接近（及时）或给定时间。\r\n","android.media.MediaSync.queueAudio(java.nio.ByteBuffer, int, long)":"android.media.mediasync.queueaudio（java.nio.bytebuffer，int，long）\r\n","android.location.LocationRequest.QUALITY_HIGH_ACCURACY":"android.location.locationrequest.quality_high_accuracy\r\n","Scramble control value reserved and shouldn't be used currently.":"争夺控制值保留，目前不应使用。\r\n","android.hardware.display.DeviceProductInfo.CONNECTION_TO_SINK_BUILT_IN":"android.hardware.display.deviceproductinfo.connection_to_sink_built_in\r\n","#TONE_DTMF_0":"＃TONTH_DTMF_0\r\n","android.hardware.location.GeofenceHardwareRequest.setLastTransition(int)":"android.hardware.location.geofencehardwarerequest.setlasttransition（int）\r\n","android.media.MediaFormat.KEY_TEMPORAL_LAYERING":"android.media.mediaformat.key_temporal_layering\r\n","android.media.AudioFormat.ENCODING_MPEGH_BL_L3":"android.media.audioformat.encoding_mpegh_bl_l3\r\n","#PLAYBACK_VOLUME_VARIABLE":"#playback_volume_variable\r\n","android.media.SoundPool.resume(int)":"android.media.soundpool.resume（int）\r\n","android.location.GnssStatus.hasCarrierFrequencyHz(int)":"android.location.gnssstatus.hascarrierfrequencencyhz（int）\r\n","android.media.audiofx.EnvironmentalReverb.PARAM_DIFFUSION":"android.media.audiofx.environmentalreverb.param_diffusion\r\n","android.hardware.camera2.params.MeteringRectangle.getUpperLeftPoint()":"android.hardware.camera2.params.meteringRectangle.getUpperLeftpoint（）\r\n","Instruct the video encoder in \"surface-input\" mode to drop excessive\n            frames from the source, so that the input frame rate to the encoder\n            does not exceed the specified fps.":"指示“表面输入”模式的视频编码器掉落过多\r\n            来自源的帧，因此输入帧速率到编码器\r\n            不超过指定的FPS。\r\n","Enables <a href=\"http://tools.":"启用<a href =“ http：//工具。\r\n"," using a session key server.":" 使用会话密钥服务器。\r\n","android.media.MediaMetadata.METADATA_KEY_DISPLAY_ICON":"android.media.mediametadata.metadata_key_display_icon\r\n","Interface for sending and receiving data to and from a MIDI device.":"用于发送和从MIDI设备发送和接收数据的接口。\r\n","android.hardware.camera2.CaptureResult.CONTROL_AWB_STATE":"android.hardware.camera2.captureresult.control_awb_state\r\n","android.media.midi.MidiManager.openDevice(android.media.midi.MidiDeviceInfo, android.media.midi.OnDeviceOpenedListener, android.os.Handler)":"android.media.midi.midimanager.opendevice（android.media.midi.midi.midide.midideviceinfo，android.medi.midi.midi.ondeviceopenedlistener，android.os.os.handler）\r\n","android.media.ExifInterface.TAG_SUBSEC_TIME_DIG":"android.media.exifinterface.tag_subsec_time_dig\r\n","Get a list of sizes compatible with the requested image ":"获取与请求的图像兼容尺寸的列表\r\n","android.media.AudioRecord.unregisterAudioRecordingCallback(android.media.AudioRecordingCallback)":"android.media.audiorecord.unregisteraudiorecordingcallback（android.media.audiorecordingcallback）\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_COLOR_TRANSFORM1":"android.hardware.camera2.cameracharacteristics.sensor_color_transform1\r\n"," to determine if the default microphone audio source\n            supports near-ultrasound frequencies (range of 18 - 21 kHz).":" 确定默认麦克风音频源是否\r\n            支持接近拆卸的频率（范围为18-21 kHz）。\r\n","Returns a constant indicating desired accuracy of location. -or- Indicates the desired accuracy for latitude and longitude.":"返回常数表示所需的位置精度。 - 或指示纬度和经度的所需准确性。\r\n","Open a new session with the MediaDrm object.":"使用MediaDRM对象打开新会话。\r\n","Gets all currently valid logical displays.":"获取当前有效的逻辑显示。\r\n","android.media.session.PlaybackState.ACTION_PREPARE_FROM_SEARCH":"android.media.session.playbackstate.action_prepare_from_search\r\n","Creates a circular geofence which is monitored by subsystems in the hardware.":"创建一个圆形的地理林，由硬件中的子系统监视。\r\n","android.media.ExifInterface.TAG_SAMPLES_PER_PIXEL":"android.media.exifinterface.tag_samples_per_pixel\r\n","android.media.AudioTrack.getPlaybackHeadPosition()":"android.media.audiotrack.getPlaybackheadposition（）\r\n","android.media.ExifInterface.TAG_SUBJECT_AREA":"android.media.exifinterface.tag_subject_area\r\n","android.media.AudioManager.isHapticPlaybackSupported()":"android.media.audiomanager.ishapticplaybacksupported（）\r\n","A constant indicating a high power requirement.":"恒定表示高功率要求。\r\n","Usage: The buffer will often be read by the CPU":"用法：缓冲区通常会由CPU阅读\r\n","android.location.LocationManager.isProviderEnabled(java.lang.String)":"android.location.locationmanager.isproviderEnabled（java.lang.string）\r\n","android.media.MediaDrm.getSecureStopIds()":"android.media.mediadrm.getSecurestopids（）\r\n","Register a callback to be notified about torch mode status.":"注册一个回调，以通知有关火炬模式状态的通知。\r\n","android.media.metrics.PlaybackErrorEvent":"android.media.metrics.playbackerrorevent\r\n","Internal temperature.":"内部温度。\r\n","android.media.tv.TvContentRating.unflattenFromString(java.lang.String)":"android.media.tv.tvcontentrating.unflattenfromstring（java.lang.string）\r\n"," for querying\n            with a ":" 用于查询\r\n            与\r\n","android.media.metrics.PlaybackStateEvent.STATE_JOINING_FOREGROUND":"android.media.metrics.playbackstateevent.state_joining_foreground\r\n","Returns the maximum size of the <code>AudioTrack</code> buffer in frames.":"返回<code> audiotrack </code>框架中的最大尺寸。\r\n","Play one of the predefined platform sounds for media actions.":"播放用于媒体动作的预定义平台之一。\r\n","android.media.effect.Effect.setParameter(java.lang.String, java.lang.Object)":"android.media.effect.effect.setParameter（java.lang.string，java.lang.Object）\r\n","android.media.session.MediaController.getRatingType()":"android.media.session.mediacontroller.getRatingType（）\r\n","Create a copy of a media format object.":"创建媒体格式对象的副本。\r\n","android.media.RingtoneManager.openDefaultRingtoneUri(android.content.Context, android.net.Uri)":"android.media.ringtonemanager.opendefaultringtoneuri（android.content.context，android.net.uri）\r\n","android.hardware.usb.UsbManager.hasPermission(android.hardware.usb.UsbDevice)":"android.hardware.usb.usbmanager.haspermission（android.hardware.usb.usbdevice）\r\n","if criteria is null":"如果标准为无效\r\n","android.media.ExifInterface#ORIENTATION_ROTATE_180":"android.media.exifinterface＃orientation_rotate_180\r\n","android.net.SSLSessionCache":"android.net.sslsessioncache\r\n","Returns the default camcorder profile for the given camera at the given quality level.":"在给定质量级别返回给定相机的默认摄像机配置文件。\r\n","android.media.audiofx.AudioEffect.ERROR_INVALID_OPERATION":"android.media.audiofx.audioeffect.error_invalid_operation\r\n","android.media.ExifInterface.TAG_THUMBNAIL_IMAGE_LENGTH":"android.media.exifinterface.tag_thumbnail_image_length\r\n"," point;":" 观点;\r\n","android.hardware.camera2.CaptureResult.SENSOR_NOISE_PROFILE":"android.hardware.camera2.captureresult.sensor_noise_profile\r\n","MediaDrm can be used to obtain keys for decrypting protected media streams, in\n            conjunction with ":"MediaDRM可用于获取解密受保护媒体流的密钥，\r\n            与\r\n","android.hardware.camera2.params.StreamConfigurationMap.getHighSpeedVideoFpsRangesFor(android.util.Size)":"android.hardware.camera2.params.streamconfigurationmap.gethighspeedvideofpsrangesfor（android.util.size）\r\n","android.location.Address.setThoroughfare(java.lang.String)":"android.location.address.setthoroughfare（java.lang.string）\r\n","The sound used by\n            ":"使用的声音\r\n            \r\n","surface":"表面\r\n","Converts a String in one of the formats described by\n            FORMAT_DEGREES, FORMAT_MINUTES, or FORMAT_SECONDS into a\n            double.":"将字符串转换为描述的一种格式之一\r\n            format_degrees，format_minutes或format_seconds\r\n            双倍的。\r\n","android.media.tv.TvInputInfo.EXTRA_INPUT_ID":"android.media.tv.tvinputinfo.extra_input_id\r\n","#TONE_CDMA_ABBR_INTERCEPT":"#tone_cdma_abbr_intercept\r\n",") of the candidates view when it is not\n            shown.":"）候选人观看\r\n            显示。\r\n","Error code for trying to decode content whose format is not supported":"试图解码不支持其格式的内容的错误代码\r\n","#ACTION_QUERY_CONTENT_RATING_SYSTEMS":"#action_query_content_rating_systems\r\n","Adjust the volume of the output this session is playing on.":"调整本届会话正在播放的输出的音量。\r\n","android.net.IpSecManager.applyTransportModeTransform(java.net.DatagramSocket, int, android.net.IpSecTransform)":"android.net.ipsecmanager.applytransportmodetransform（java.net.datagramsocket，int，android.net.ipsectransform）\r\n","Mute vibration and sound from ringtones, alarms or notifications while this camera device is\n            in use.":"静音振动和铃声，警报或通知的声音，此相机设备为\r\n            正在使用。\r\n","android.inputmethodservice.Keyboard.getHeight()":"android.inputmethodservice.keyboard.getheight（）\r\n","Ready to start data connection setup.":"准备开始数据连接设置。\r\n","Gets the current white balance setting.":"获取当前的白平衡设置。\r\n","Advanced Encryption System (AES) 128-bit Encryption mode.":"高级加密系统（AES）128位加密模式。\r\n","android.media.session.MediaController.dispatchMediaButtonEvent(android.view.KeyEvent)":"android.media.session.mediacontroller.dispatchmediabuttonevent（android.view.keyevent）\r\n","Widevine L3 DRM type.":"Widevine L3 DRM类型。\r\n","MPEG4 media file format":"MPEG4媒体文件格式\r\n","android.media.projection.MediaProjection":"android.media.procottion.MediaFoction\r\n","#TONE_SUP_BUSY":"#tone_sup_busy\r\n","android.media.MediaCodec.setAudioPresentation(android.media.AudioPresentation)":"android.media.mediacodec.setaudiopersentation（android.media.audiopersentation）\r\n","Get the current value sanitizer used when processing\n            unregistered parameter values. -or- Set the value sanitizer used when processing unregistered\n            parameter values.":"处理当前值消毒剂处理时使用\r\n            未注册的参数值。 - 或设置未注册处理时使用的价值消毒剂\r\n            参数值。\r\n","android.media.AudioDeviceInfo.getId()":"android.media.audiodeviceinfo.getID（）\r\n","Returns the properties of the given provider, or null if the properties are currently\n            unknown.":"返回给定提供商的属性，或者如果当前属性为null\r\n            未知。\r\n","Returns the <a href=\"http://technotes.":"返回<a href =“ http：// technotes。\r\n","android.media.MediaFormat.KEY_PRIORITY":"android.media.mediaformat.key_priority\r\n","android.media.AudioManager.USE_DEFAULT_STREAM_TYPE":"android.media.audiomanager.use_default_stream_type\r\n","android.location.GnssMeasurement.getPseudorangeRateMetersPerSecond()":"android.location.gnssmeasurement.getPseudorangerateMeterSperseperSecond（）\r\n","Starts playing an AudioTrack.":"开始播放录音带。\r\n","android.media.MediaFormat.KEY_FRAME_RATE":"android.media.mediaformat.key_frame_rate\r\n","Check whether the light has RGB led control.":"检查灯是否具有RGB LED控制。\r\n","Returns the protection status for the MTP object\n            Possible values are:\n            \n            <ul>\n            <li> ":"返回MTP对象的保护状态\r\n            可能的值是：\r\n            \r\n            <ul>\r\n            <li>\r\n","android.hardware.camera2.params.MultiResolutionStreamInfo.getHeight()":"android.hardware.camera2.params.multiresolutionstreaminfo.getheight（）\r\n","android.media.SyncParams.setTolerance(float)":"android.media.syncparams.settolerance（float）\r\n","Interface definition for a callback to be invoked when a drm event\n occurs\n":"DRM事件时要调用回调的接口定义\r\n 发生\r\n\r\n","android.media.metrics.PlaybackMetrics.DRM_TYPE_PLAY_READY":"android.media.metrics.playbackmetrics.drm_type_play_ready\r\n","Called when an error occurs while recording.":"记录时发生错误时调用。\r\n","android.media.AudioManager.NUM_STREAMS":"android.media.audiomanager.num_streams\r\n","The recommended stream configuration map for use case low latency snapshot must contain\n            subset of configurations with end-to-end latency that does not exceed 200 ms.":"用例低延迟快照的推荐流配置映射必须包含\r\n            端到端延迟不超过 200 毫秒的配置子集。\r\n","Interface definition for a callback to be invoked when playback of\n a media source has completed.":"播放时要调用回调的接口定义\r\n 媒体来源已经完成。\r\n","android.media.ExifInterface.TAG_IMAGE_LENGTH":"android.media.exifinterface.tag_image_length\r\n","Constant for geofence monitoring done by the GPS hardware.":"GPS硬件完成的Geofence监视不断。\r\n","Close the connection to this camera device as quickly as possible.":"尽快关闭与此相机设备的连接。\r\n","A key describing the pixel aspect ratio width.":"描述像素纵横比宽度的键。\r\n","android.media.MediaFormat.getNumber(java.lang.String)":"android.media.mediaformat.getnumber（java.lang.string）\r\n","android.media.effect.EffectFactory.createEffect(java.lang.String)":"android.media.effect.effectfactory.createefect（java.lang.string）\r\n","AudioAttributes#ALLOW_CAPTURE_BY_SYSTEM":"AudioAttributes＃allow_capture_by_system\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_AUDIO_TRACK_WRITE_FAILED":"android.media.metrics.playbackerrorevent.error_audio_track_write_failed\r\n","Unregisters a listener for the sensors with which it is registered.":"为注册它的传感器取消注册侦听器。\r\n","android.media.ExifInterface.TAG_SUBJECT_DISTANCE_RANGE":"android.media.exifinterface.tag_subject_distance_range\r\n","android.media.MediaDrm.removeOfflineLicense(byte[])":"android.media.mediadrm.removeofflinelicense（byte []）\r\n","#getCodeType()":"#getCodeType（）\r\n","android.hardware.camera2.params.Face.getLeftEyePosition()":"android.hardware.camera2.params.face.getLefteePosition（）\r\n","android.media.RingtoneManager.setActualDefaultRingtoneUri(android.content.Context, int, android.net.Uri)":"android.media.ringtonemanager.setactualdefaultringtoneuri（android.content.context，int，android.net.uri）\r\n","android.media.Rating.hasHeart()":"android.media.rating.hasheart（）\r\n","android.media.ExifInterface.TAG_EXPOSURE_TIME":"android.media.exifinterface.tag_expuse_time\r\n","Represents a virtual display.":"表示虚拟显示。\r\n","#getFrameAtTime(long, int)":"#getFrameattime（长，int）\r\n","android.media.session.PlaybackState.ACTION_SKIP_TO_PREVIOUS":"android.media.session.playbackstate.action_skip_to_previous\r\n","Poll for an ":"民意调查\r\n","#getElapsedRealtimeNanos()":"#getElapsedRealTimenanos（）\r\n","Checks whether a wired headset is connected or not. -or- Sets audio routing to the wired headset on or off.":"检查是否连接有线耳机。 - 或 - 将音频路由设置为有线耳机打开或关闭。\r\n","android.hardware.camera2.CameraMetadata.SENSOR_PIXEL_MODE_MAXIMUM_RESOLUTION":"android.hardware.camera2.camerametadata.sensor_pixel_mode_maximum_resolution\r\n","#SAMPLE_RATE_UNSPECIFIED":"#sample_rate_unspecified\r\n","android.media.MediaCodec.queueSecureInputBuffer(int, int, android.media.CryptoInfo, long, int)":"android.media.mediacodec.queuesecureInputbuffer（int，int，android.media.cryptoinfo，long，int）\r\n","android.location.LocationRequest.getMinUpdateIntervalMillis()":"android.location.locationrequest.getminupdateintervalmillis（）\r\n","android.media.metrics.TrackChangeEvent.TRACK_CHANGE_REASON_OTHER":"android.media.metrics.trackchangeevent.track_change_reason_other\r\n","Gets the supported white balance.":"获得支持的白平衡。\r\n","Returns recent ":"返回最近\r\n","Indicates this session supports the next command.":"指示此会话支持下一个命令。\r\n","android.media.metrics.PlaybackMetrics.PLAYBACK_TYPE_UNKNOWN":"android.media.metrics.playbackmetrics.playback_type_unknown\r\n","List of auto-exposure antibanding modes for ":"自动暴露抗体模式列表\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_IO_CONNECTION_TIMEOUT":"android.media.metrics.playbackerrorevent.error_io_connection_timeout\r\n","AudioManager#STREAM_RING":"听众＃stream_ring\r\n","A report of failed capture for a single image capture from the image sensor.":"来自图像传感器的单个图像捕获的捕获失败的报告。\r\n","android.hardware.camera2.CaptureRequest.CONTROL_AF_REGIONS":"android.hardware.camera2.capturerequest.control_af_rigions\r\n","Gets the identification number for the satellite at the specific index.":"获取特定索引的卫星标识号。\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_HAS_VIDEO":"android.media.mediametadataretriever.metadata_key_has_video\r\n","Called by a text editor to report its new extracted text when its\n            contents change.":"由文本编辑器拨打以报告其新提取的文本时\r\n            内容改变。\r\n","The callback called when there is a transition to report for the specific\n            geofence.":"当有过渡到特定的过渡时，调用了回调\r\n            地理林。\r\n","android.media.AudioTrack.isOffloadedPlayback()":"android.media.audiotrack.isoffloadedplayback（）\r\n","android.net.LocalSocketAddress.getNamespace()":"android.net.localsocketDress.getNamespace（）\r\n","android.media.ExifInterface.TAG_GPS_TIMESTAMP":"android.media.exifinterface.tag_gps_timestamp\r\n","android.media.AudioTimestamp":"android.media.audiotimestamp\r\n","Type that refers to sounds that are used for the phone ringer.":"类型是指用于电话铃声的声音。\r\n","Indicates this is a network that has the ability to reach the carrier's\n IMS servers, used for network registration and signaling.":"表明这是一个能够到达运营商的网络\r\n IMS服务器，用于网络注册和信号。\r\n","F:Android.Media.MediaPlayer.SetVideoScalingMode":"F：android.media.mediaplayer.setVidesoscalingmode\r\n","CaptureRequest#SENSOR_EXPOSURE_TIME android.sensor.exposureTime":"captureRequest＃sensor_exposure_time android.sensor.exposuretime\r\n","Width of the key, not including the gap ":"钥匙的宽度，不包括差距\r\n","F:Android.Hardware.Camera+IErrorCallback.OnError":"f：android.hardware.camera+iErrorcallback.onerror\r\n","android.media.MediaCas.PLUGIN_STATUS_PHYSICAL_MODULE_CHANGED":"android.media.mediacas.plugin_status_physical_module_changed\r\n","LocationManager#PASSIVE_PROVIDER":"locationmanager＃passive_provider\r\n","AudioFormat#ENCODING_PCM_16BIT":"AudioFormat＃encoding_pcm_16bit\r\n","#SEEK_PREVIOUS_SYNC":"#seek_previous_sync\r\n","All the key codes (unicode or custom code) that this key could generate, zero'th \n being the most important.":"此密钥可以生成的所有密钥代码（Unicode或自定义代码），零\r\n 是最重要的。\r\n","The metadata key to retrieve the data source title.":"检索数据源标题的元数据键。\r\n","if type is not a valid mime type.":"如果类型不是有效的MIME类型。\r\n","Returns a list of the names of all available location providers.":"返回所有可用位置提供商名称的列表。\r\n","android.location.LocationManager.registerGnssNavigationMessageCallback(android.location.Callback)":"android.location.locationManager.RegistergnssnavigationMessageCallback（android.location.callback）\r\n","Route feature: Remote audio playback.":"路线功能：远程音频播放。\r\n","android.media.ApplicationMediaCapabilities.getUnsupportedHdrTypes()":"android.media.applicationMediacapabilities.getunsupportedHdrtypes（）\r\n","Get the output formats in this multi-resolution stream configuration.":"在此多分辨率流配置中获取输出格式。\r\n","Returns the prefix length of this ":"返回此的前缀长度\r\n","Scramble flag for a hint indicating that the descrambling request is for\n            retrieving the PES header info only.":"提示的争夺标志，表明描述请求是\r\n            仅检索PES标头信息。\r\n","android.media.MediaRoute2ProviderService.onSetSessionVolume(long, java.lang.String, int)":"android.media.mediaroute2providerservice.onsessessessessessessvolume（long，java.lang.string，int）\r\n","android.media.Session2Command.getCustomExtras()":"android.media.session2Command.getCustomeXtras（）\r\n","android.media.audiofx.EnvironmentalReverb.setParameterListener(android.media.audiofx.OnParameterChangeListener)":"android.media.audiofx.environmentalreverb.setparameterListener（android.media.audiofx.onparameterchangelistener）\r\n"," to\n            indicate the end of video recording.":" 至\r\n            指示视频录制的结束。\r\n","android.media.EncoderProfiles":"android.media.encoderprofiles\r\n","Returns the index of the audio, video, or subtitle track currently selected for playback,\n            The return value is an index into the array returned by ":"返回当前选择进行播放的音频，视频或字幕轨道的索引，\r\n            返回值是返回的数组的索引\r\n","android.media.AudioTrack.getBufferCapacityInFrames()":"android.media.audiotrack.getBufferCapacityInframes（）\r\n","An optional key describing the desired encoder latency in frames.":"一个可选的密钥，描述了帧中所需的编码延迟。\r\n","CaptureRequest#CONTROL_CAPTURE_INTENT android.control.captureIntent":"captureRequest＃control_capture_intent android.control.captureintent\r\n","Microphone directionality type: bi-directional.":"麦克风方向性类型：双向。\r\n","Returns the selected output specified by ":"返回选定的输出由\r\n","Constant used to indicate that the input stream contains only Exif data.":"用于指示输入流仅包含EXIF数据的常数。\r\n","Parser for the WAV container format, as defined in Multimedia Programming Interface and Data\n            Specifications.":"WAV容器格式的解析器，如多媒体编程接口和数据中所定义\r\n            规格。\r\n","android.hardware.camera2.params.TonemapCurve.TonemapCurve(float[], float[], float[])":"android.hardware.camera2.params.tonemapcurve.tonemapcurve（float []，float []，float []）\r\n","CameraCharacteristics#CONTROL_AE_COMPENSATION_STEP android.control.aeCompensationStep":"cameracharacteristics＃control_ae_compensation_step android.control.aecompensationstep\r\n","The target audio output bit rate in bits per second":"目标音频输出比特每秒的位\r\n","android.media.MediaFormat.getFeatures()":"android.media.mediaformat.getFeatures（）\r\n","The lookup key for a string that provides optionally supplied\n extra information about the network state.":"提供可选提供的字符串的查找键\r\n 有关网络状态的额外信息。\r\n","#setOnVideoSizeChangedListener(OnVideoSizeChangedListener)":"#setonvideosizechangedlistener（onvideosizechangedListener）\r\n","The overall rating for the media.":"媒体的总体评级。\r\n","android.media.AudioTrack.getNativeOutputSampleRate(int)":"android.media.audiotrack.getNativeOutputsamplerate（int）\r\n","android.hardware.SensorManager.PRESSURE_STANDARD_ATMOSPHERE":"android.hardware.sensormanager.pressure_standard_atmosphere\r\n","A maximum duration had been setup and has now been reached.":"已经设置了最长的持续时间，现在已达到。\r\n","Current state of auto-focus (AF) algorithm.":"当前自动对焦（AF）算法的状态。\r\n","android.media.MediaCas.SCRAMBLING_MODE_AES128":"android.media.mediacas.scrambling_mode_aes128\r\n","android.media.tv.TvInputManager.RECORDING_ERROR_INSUFFICIENT_SPACE":"android.media.tv.tvinputmanager.Recording_Error_insuffiticed_space\r\n","Edge flags for this row of keys.":"这一行键的边缘标志。\r\n","Mark the end of a set of additional info frames.":"标记一组其他信息框架的末尾。\r\n","AudioTrack#PERFORMANCE_MODE_NONE":"audiotrack＃performance_mode_none\r\n","Called when a volume setting is requested on a route of the provider":"在提供商的路线上请求卷设置时调用\r\n","Turns on <a href=\"http://tools.":"打开<a href =“ http：//工具。\r\n","Adds an external timed text source file (FileDescriptor).":"添加了外部定时文本文件（FileDescriptor）。\r\n","List of metering areas to use for auto-white-balance illuminant\n            estimation.":"用于自动白色平衡光照明剂的计量区域列表\r\n            估计。\r\n","#RATING_5_STARS":"＃rating_5_stars\r\n","android.inputmethodservice.KeyboardView.getOnKeyboardActionListener()":"android.inputmethodservice.keyboardview.getOnkeyBoardActionListener（）\r\n"," for the device's input ports.":" 对于设备的输入端口。\r\n","This class allows you to access the state of USB and communicate with USB devices.":"该课程使您可以访问USB状态并与USB设备进行通信。\r\n","Returns the duration for which location will be provided before the request is automatically\n            removed.":"返回在请求自动之前提供位置的持续时间\r\n            删除。\r\n","#getCarrierCycles()":"#getCarrierCycles（）\r\n","#TONE_CDMA_EMERGENCY_RINGBACK":"#tone_cdma_emergency_ringback\r\n","Gets channel count.":"获取频道计数。\r\n","A socket in the Android reserved namespace in /dev/socket.":"Android保留的命名空间 /dev /套接字中的插座。\r\n","android.media.VolumeProvider.getMaxVolume()":"android.media.volumeprovider.getmaxvolume（）\r\n","android.location.GnssMeasurement.hasCarrierPhase()":"android.location.gnssmeasurement.hascarrierphase（）\r\n","Retrieves the output stream for this instance.":"检索此实例的输出流。\r\n","android.location.Criteria.getVerticalAccuracy()":"android.location.criteria.getVerticalAccuracy（）\r\n","Gets the PSK identity hint to report to the client to help agree on the PSK for the provided\n socket.":"获取PSK身份提示向客户报告，以帮助就提供的PSK达成协议\r\n 插座。\r\n","android.net.IpSecAlgorithm.getTruncationLengthBits()":"android.net.ipsecalgorithm.getTruncationLengthbits（）\r\n","android.hardware.SensorEventCallback.onSensorChanged(android.hardware.SensorEvent)":"android.hardware.sensoreventcallback.onsensorchanged（android.hardware.sensorevent）\r\n","Override this to control when the soft input area should be shown to the user.":"覆盖此内容以控制何时应向用户显示软输入区域。\r\n","android.location.GnssMeasurement.getMultipathIndicator()":"android.location.gnssmeasurement.getMultipathIndicator（）\r\n","Called when an unhandled input event also has not been handled by the user provided\n            callback.":"当提供的用户还没有处理未经处理的输入事件时调用\r\n            打回来。\r\n","android.net.MailTo.getTo()":"android.net.mailto.getto（）\r\n","The device connection to the display sink is unknown.":"设备连接到显示池未知。\r\n","android.media.MediaCas.SCRAMBLING_MODE_DVB_CSA1":"android.media.mediacas.scrambling_mode_dvb_csa1\r\n","Get the rating type supported by the session.":"获取会话支持的评级类型。\r\n","Strings":"字符串\r\n","android.media.AudioManager.ENCODED_SURROUND_OUTPUT_MANUAL":"android.media.audiomanager.encoded_surround_output_manual\r\n","#PLAYBACK_OFFLOAD_SUPPORTED":"#playback_offload_supported\r\n","android.mtp.MtpDevice.getStorageIds()":"android.mtp.mtpdevice.getStorageids（）\r\n","The following UUIDs define effect types corresponding to standard audio\n            effects whose implementation and interface conform to the OpenSL ES\n            specification.":"以下UUID定义了与标准音频相对应的效果类型\r\n            其实现和接口符合OpenSL ES的效果\r\n            规格。\r\n","\n            object.":"\r\n            目的。\r\n","Untracked delay.":"未跟踪的延迟。\r\n","android.media.MediaRecorder.setPreferredMicrophoneFieldDimension(float)":"android.media.mediarecorder.setpreferredmicrophonefielddimension（float）\r\n","android.hardware.camera2.CameraCharacteristics.SCALER_STREAM_CONFIGURATION_MAP_MAXIMUM_RESOLUTION":"android.hardware.camera2.cameracharacteristics.scaler_stream_configuration_map_maximum_resolution\r\n","Stores the latitude and longitude value in a float array.":"将纬度和经度值存储在浮点数组中。\r\n","if the given location object doesn't\n          contain enough information to set location metadata.\n":"如果给定的位置对象没有\r\n          包含足够的信息来设置位置元数据。\r\n\r\n","Adjusts the range of minimal and maximal color pixel intensities.":"调整最小和最大颜色像素强度的范围。\r\n","android.media.session.MediaSession.setSessionActivity(android.app.PendingIntent)":"android.media.session.mediasession.sestessestive（android.app.pendendIntent）\r\n","android.media.audiofx.BassBoost.PARAM_STRENGTH":"android.media.audiofx.bassboost.param_strength\r\n","android.media.audiofx.AudioEffect.EFFECT_TYPE_PRESET_REVERB":"android.media.audiofx.audioeffect.effect_type_preset_reverb\r\n","Sets the orientation hint for output video playback.":"为输出视频播放设置方向提示。\r\n","android.media.MediaCodec MediaCodec":"android.media.mediacodec mediacodec\r\n","android.media.metrics.PlaybackErrorEvent.getErrorCode()":"android.media.metrics.playbackerrorevent.getErrorcode（）\r\n","android.media.effect.EffectFactory.EFFECT_AUTOFIX":"android.media.effect.effectfactory.effect_autofix\r\n","android.media.MediaSession2.getToken()":"android.media.mediasession2.getToken（）\r\n","Binds this socket to an endpoint name.":"将此套接字绑定到端点名称。\r\n","Releases the context.":"释放上下文。\r\n","android.hardware.camera2.CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES ":"android.hardware.camera2.cameracharacteristics＃request_available_capabilities\r\n","android.media.MediaParser.PARSER_NAME_WAV":"android.media.mediaparser.parser_name_wav\r\n","android.net.Ikev2VpnProfile.getUserCert()":"android.net.ikev2vpnprofile.getUserCert（）\r\n","#registerMediaButtonEventReceiver(ComponentName)":"#RegisterMediabuttoneVentReceiver（componentName）\r\n","android.location.provider.ProviderProperties.hasSpeedSupport()":"android.location.provider.providerproperties.hasspeedsupport（）\r\n","This signals the end of stream, i.":"这标志着流的末尾，即。\r\n","android.hardware.biometrics.BiometricManager.BIOMETRIC_ERROR_SECURITY_UPDATE_REQUIRED":"机器人。硬件。生物测定学。生物计量管理器。生物计量_ERROR_SECURITY_UPDATE_REQUIRED\r\n","android.net.UrlQuerySanitizer.getUrlAndSpaceLegal()":"android.net.urlquerysanitizer.geturlandspacelegal（）\r\n","android.media.RemoteControlClient.RemoteControlClient(android.app.PendingIntent, android.os.Looper)":"android.media.remotecontrolclient.remotecontrolclient（android.app.pendententent，android.os.oper）\r\n","Called when a route is removed from a group.":"从组中删除路线时调用。\r\n","android.media.tv.TvContract.EXTRA_WATCH_NEXT_PROGRAM_ID":"android.media.tv.tvcontract.extra_watch_next_next_program_id\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.getOutputStallDuration(int, android.util.Size)":"android.hardware.camera2.params.RecommendStreamConfigurationMap.getOutputstallDuration（int，android.util.size）\r\n","Defines the video source.":"定义视频源。\r\n","\n            class that should receive media buttons.":"\r\n            应该接收媒体按钮的课程。\r\n","Constructs a UrlQuerySanitizer.":"构建一个Urquerysanitizer。\r\n","Returns the latitude of the address if known. -or- Sets the latitude associated with this address.":"如果已知，则返回地址的纬度。 - 或设置与此地址关联的纬度。\r\n","android.media.MicrophoneInfo.DIRECTIONALITY_OMNI":"android.media.microphoneinfo.directionality_omni\r\n","android.location.GnssNavigationMessage.TYPE_BDS_D1":"android.location.gnssnavigationmessage.type_bds_d1\r\n","android.hardware.camera2.CaptureRequest.CONTROL_AWB_MODE":"android.hardware.camera2.capturerequest.control_awb_mode\r\n","android.mtp.MtpEvent.EVENT_STORE_FULL":"android.mtp.mtpevent.event_store_full\r\n","android.mtp.MtpEvent":"android.mtp.mtpevent\r\n","android.media.MediaExtractor.getDrmInitData()":"android.media.mediaextractor.getdrminitdata（）\r\n","android.location.LocationManager.PASSIVE_PROVIDER":"android.location.locationmanager.passive_provider\r\n"," to disable a test\n            provider.":" 禁用测试\r\n            提供者。\r\n","android.media.MediaCodec.VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING":"android.media.mediacodec.video_scaling_mode_scale_to_fit_with_cropping\r\n","android.media.MediaPlayer.setOnErrorListener(android.media.OnErrorListener)":"android.media.mediaplayer.setonerrorlistener（android.media.onerrorlistener）\r\n","Audio presentation content classifier: Hearing impaired.":"音频演示内容分类器：听力障碍。\r\n","An MMS-specific Mobile data connection. ":"MMS特定的移动数据连接。\r\n","android.media.ExifInterface.TAG_OFFSET_TIME":"android.media.exifinterface.tag_offset_time\r\n","android.media.audiofx.AudioEffect.EFFECT_TYPE_ENV_REVERB":"android.media.audiofx.audioeffect.effect_type_env_reverb\r\n","CameraMetadata#CONTROL_EXTENDED_SCENE_MODE_BOKEH_CONTINUOUS":"camerametadata＃control_extended_scene_mode_bokeh_continuul\r\n","android.hardware.display.DisplayManager.DISPLAY_CATEGORY_PRESENTATION":"android.hardware.display.displaymanager.display_category_presentation\r\n"," elements available through ":" 可通过\r\n","Create a thumbnail for given audio file.":"为给定的音频文件创建缩略图。\r\n","Returns the longitude of the address if known. -or- Sets the longitude associated with this address.":"如果已知，则返回地址的经度。 - 或设置与此地址相关的经度。\r\n","Copy the ":"复制\r\n","android.media.session.PlaybackState.STATE_STOPPED":"android.media.session.playbackstate.state_stopped\r\n","when listener is null.\n":"当听众为无效时。\r\n\r\n","android.media.MediaCommunicationManager.getVersion()":"android.media.mediacommunicationmanager.getVersion（）\r\n","android.media.AudioRecord.startRecording(android.media.MediaSyncEvent)":"android.media.audiorecord.startrecording（android.media.mediasyncevent）\r\n","android.media.MediaCodec.CONFIGURE_FLAG_ENCODE":"android.media.mediacodec.configure_flag_encode\r\n","Called whenever a logical display has been added to the system.":"每当将逻辑显示已添加到系统中。\r\n","if the camera device has been disconnected.":"如果相机设备已断开连接。\r\n","Count the number of available (regular) codecs.":"计算可用（常规）编解码器的数量。\r\n","A short string for manufacturer version information about the camera device, such as\n            ISP hardware, sensors, etc.":"有关相机设备的制造商版本信息的短字符串，例如\r\n            ISP硬件，传感器等。\r\n","android.media.audiofx.AutomaticGainControl":"android.media.audiofx.AutomaticGainControl\r\n","Other DRM type.":"其他DRM类型。\r\n","#getInputSurface":"#getInputsurface\r\n","#ACTION_USB_ACCESSORY_ATTACHED":"#action_usb_accessory_attached\r\n","android.hardware.camera2.CaptureResult.SENSOR_GREEN_SPLIT":"android.hardware.camera2.captureresult.sensor_green_split\r\n","The DRM plugin did not report a security level, or an error occurred\n            accessing it":"DRM插件未报告安全级别或发生错误\r\n            访问它\r\n","android.media.CamcorderProfile.QUALITY_TIME_LAPSE_8KUHD":"android.media.camcorderprofile.quality_time_lapse_8kuhd\r\n","Handle a new input binding, calling\n ":"处理新的输入绑定，调用\r\n \r\n","#setInputSurface":"#SetInputsurface\r\n","android.media.MediaMetadataRetriever.getFrameAtTime(long, int)":"android.media.mediametadataretriever.getFrameattime（long，int）\r\n","android.location.Location.isFromMockProvider()":"android.location.location.isfrommockprovider（）\r\n","android.media.MediaRoute2ProviderService.onCreateSession(long, java.lang.String, java.lang.String, android.os.Bundle)":"android.media.mediaroute2providerservice.oncreatesession（long，java.lang.string，java.lang.string，android.os.os.bundle）\r\n","The OnParameterChangeListener interface defines a method called by the Equalizer when a\n parameter value has changed.":"OnParameterChangeListener接口定义了均衡器称为均衡器的方法\r\n 参数值已更改。\r\n","Called when the user quickly moves the finger from up to down.":"当用户迅速将手指从向下移动时，请打电话。\r\n","This class is the listener used to handle Trigger Sensors.":"此类是用于处理触发器传感器的侦听器。\r\n","android.mtp.MtpObjectInfo.getThumbPixWidth()":"android.mtp.mtpobjectInfo.getThumbPixWidth（）\r\n","android.media.metrics.PlaybackStateEvent.STATE_NOT_STARTED":"android.media.metrics.playbackstateevent.state_not_started\r\n","Adds numerical information.":"添加数值信息。\r\n","Set a MediaDrm byte array property value, given the property name string\n            and new value for the property.":"设置MediaDRM字节数组属性值，给定属性名称字符串\r\n            和该物业的新价值。\r\n","android.media.AudioAttributes.getFlags()":"android.media.audioattributes.getflags（）\r\n","android.media.MediaMetadataRetriever.setDataSource(java.io.FileDescriptor)":"android.media.mediametadataretriever.setdatasource（java.io.filedscriptor）\r\n","Check whether this session has been revoked by the system.":"检查该会话是否已被系统撤销。\r\n","android.hardware.lights.Light.LIGHT_CAPABILITY_RGB":"android.hardware.lights.light.light_capibility_rgb\r\n","Process a private command sent from the application to the input method.":"处理从应用程序发送到输入方法的私有命令。\r\n","Interface for receiving events about volume changes.":"接收有关卷更改事件的接口。\r\n","android.media.AudioTrack.isDirectPlaybackSupported(android.media.AudioFormat, android.media.AudioAttributes)":"android.media.audiotrack.isdirectplaybacksupported（android.media.audioformat，android.media.media.audioattributes）\r\n","T:Android.Media.MediaRouter+Callback":"t：android.media.mediarouter+回调\r\n","android.media.AudioTrack":"android.media.audiotrack\r\n","android.media.MediaParser.PARAMETER_TS_MODE":"android.media.mediaparser.parameter_ts_mode\r\n","Describes the status of a network interface.":"描述网络接口的状态。\r\n","The sensor that generated this event.":"生成此事件的传感器。\r\n","if it is called in an invalid state.\n":"如果以无效状态调用。\r\n\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_XMP_OFFSET":"android.media.mediametadataretriever.metadata_key_xmp_offset\r\n","Type that refers to sounds that are used for notifications.":"类型是指用于通知的声音。\r\n",", pass this flag.":"，传递此标志。\r\n","#MIMETYPE_IMAGE_ANDROID_HEIC":"#mimetype_image_android_heic\r\n","Bitstream is conforming to the related coding standard or file spec, but\n the media framework does not support the feature.":"Bitstream符合相关的编码标准或文件规格，但\r\n 媒体框架不支持该功能。\r\n","DRM key management and decoding use software-based whitebox crypto.":"DRM密钥管理和解码使用基于软件的WhiteBox加密。\r\n","android.hardware.TriggerEventListener.onTrigger(android.hardware.TriggerEvent)":"机器人。硬件。TriggerEventListener.onTrigger（android。硬件。TriggerEvent）\r\n","Audio data format: PCM 8 bit per sample. ":"音频数据格式：PCM每个样本8位。\r\n","android.hardware.SensorManager.registerListener(android.hardware.SensorEventListener, android.hardware.Sensor, int, android.os.Handler)":"android.hardware.sensormanager.RegisterListener（android.hardware.sensoreventlistener，android.hardware.sensor，int，android.os.handler）\r\n","An optional key describing the color primaries, white point and\n            luminance factors for video content.":"一个可选的键，描述了颜色初选，白点和\r\n            视频内容的亮度因素。\r\n","Returns the configured number of channels.":"返回配置的通道数。\r\n","Gets the GNSS measurement's inter-signal bias in nanoseconds with sub-nanosecond accuracy.":"获得GNSS测量的纳秒秒准确性中的纳秒偏差。\r\n","android.inputmethodservice.InputMethodService.onWindowHidden()":"android.inputmethodservice.inputmethodservice.onwindowhidden（）\r\n","Indicates the generic type of the effect (Equalizer, Bass boost .":"指示效果的通用类型（均衡器，低音提升。\r\n","#setRepeatingRequest setRepeatingRequest":"#SetRepeatingRequest setRepeatingRequest\r\n","EULER_X":"Euler_x\r\n","The metadata key to retrieve the information about the performers or\n            artist associated with the data source.":"元数据键检索有关表演者或\r\n            与数据源相关的艺术家。\r\n","Sends a private command to the underlying TV input.":"将私人命令发送到基础电视输入。\r\n","android.hardware.SensorManager.getSensorList(int)":"android.hardware.sensormanager.getSensorlist（int）\r\n","F:Android.Media.MediaRecorder+IOnInfoListener.OnInfo":"f：android.media.mediarecorder+ioninfolistener.oninfo\r\n","Construct a new MediaActionSound instance.":"构建一个新的MediaCtionSound实例。\r\n","Return the route at the specified index.":"返回指定索引处的路线。\r\n","android.media.MediaDrm.closeSession(byte[])":"android.media.mediadrm.closessession（byte []）\r\n","android.hardware.camera2.params.StreamConfigurationMap.getHighSpeedVideoSizes()":"android.hardware.camera2.params.streamconfigurationmap.gethighspeedVideosizes（）\r\n","#write(short[], int, int, int)":"#write（short []，int，int，int）\r\n","android.hardware.camera2.params.SessionConfiguration.SessionConfiguration(int, java.util.List, java.util.concurrent.Executor, android.hardware.camera2.StateCallback)":"android.hardware.camera2.params.sessionconfiguration.sessionconfiguration（int，java.util.list，java.util.concurrent.executor，android.hardware.camera2.statecallback）\r\n","Value used for when the position of the microphone is unknown.":"麦克风位置未知时使用的值。\r\n","#setNextOutputFile":"#setNextOutputfile\r\n","Return a Rating instance with a heart-based rating.":"通过基于心脏的评分返回评级实例。\r\n","Vibrate setting that suggests to vibrate when possible.":"振动设置，建议在可能的情况下振动。\r\n","if the camera device is no longer connected or has\n                               encountered a fatal error":"如果相机设备不再连接或具有\r\n                               遇到致命错误\r\n","android.location.Location.hasElapsedRealtimeUncertaintyNanos()":"android.location.location.haselapsedrealtime uncterntytynanos（）\r\n","Access a specific secure stop given its secure stop ID.":"鉴于其安全停止ID，访问特定的安全停止。\r\n","Request the state of an offline license.":"请求离线许可证的状态。\r\n","android.location.GnssMeasurement.hasCarrierPhaseUncertainty()":"android.location.gnssmeasurement.hascarrierphaseuncunclinety（）\r\n","android.net.Proxy.getHost(android.content.Context)":"android.net.proxy.gethost（android.content.context）\r\n","android.hardware.camera2.CaptureResult.SENSOR_TEST_PATTERN_DATA":"android.hardware.camera2.captureresult.sensor_test_pattern_data\r\n","android.media.ExifInterface.getThumbnail()":"android.media.exifinterface.getThumbnail（）\r\n","if it is called before\n the audio source has been set.\n":"如果以前被调用\r\n 设置了音频源。\r\n\r\n","The encapsulation type indicates what encapsulation type is required when the framework is\n            using this format when playing to a device exposing this audio profile.":"封装类型指示框架为时需要什么封装类型\r\n            播放到设备公开此音频配置文件时使用此格式。\r\n","android.location.GnssNavigationMessage.getData()":"android.location.gnssnavigationmessage.getData（）\r\n","The target video frame height in pixels":"像素的目标视频框架高度\r\n","android.media.AudioAttributes.getContentType()":"android.media.audioattributes.getContentType（）\r\n","Sets an asynchronous callback for actionable MediaCodec events on the default\n            looper.":"为默认值设置一个异步的回调，以供起可行的mediaCodec事件\r\n            looper。\r\n","android.media.MediaFormat.KEY_DURATION":"android.media.mediaformat.key_duration\r\n","Playback state of a RemoteControlClient which cannot perform any playback related\n               operation because of an internal error.":"无法执行任何相关播放的remotecontrolclient的播放状态\r\n               由于内部错误而操作。\r\n","if the network is unavailable or any other\n I/O problem occurs\n":"如果网络不可用或任何其他\r\n I/O问题发生\r\n\r\n","Returns the stream type matching this ":"返回与此匹配的流类型\r\n","android.hardware.input.InputManager.unregisterInputDeviceListener(android.hardware.input.InputDeviceListener)":"android.hardware.input.inputmanager.unregisterInputDeviceListener（android.hardware.input.input.inputdevicelistener）\r\n","#TONE_CDMA_ONE_MIN_BEEP":"#TONE_CDMA_ONE_MIN_BEEP\r\n","android.hardware.camera2.CameraDevice.isSessionConfigurationSupported(android.hardware.camera2.params.SessionConfiguration)":"android.hardware.camera2.cameradevice.issessionConfigurationsupported（android.hardware.camera2.params.params.sessionseverconfiguration）\r\n","android.hardware.SensorAdditionalInfo.TYPE_FRAME_BEGIN":"android.hardware.sensoradditionalinfo.type_frame_begin\r\n","This Beidou measurement's tracking state has D2 sub-frame sync.":"此Beidou Measurement的跟踪状态具有D2子帧同步。\r\n","Returns true if a longitude has been assigned to this Address,\n            false otherwise.":"如果已分配了此地址，则返回true，\r\n            否则为错误。\r\n","Determine whether or not output streams can be configured with a particular class\n            as a consumer.":"确定是否可以使用特定类配置输出流\r\n            作为消费者。\r\n","CaptureRequest#LENS_FOCAL_LENGTH android.lens.focalLength":"capturerequest＃lens_focal_length android.lens.focallength\r\n","Session2Token":"Session2Token\r\n","android.media.MediaFormat.KEY_AAC_DRC_EFFECT_TYPE":"android.media.mediaformat.key_aac_drc_fercect_type\r\n","android.media.session.MediaController.getPlaybackState()":"android.media.session.mediacontroller.getPlayBackstate（）\r\n","#getCarrierFrequencyHz()":"#getCarrierFrequencyHz（）\r\n","android.media.effect.EffectFactory.EFFECT_BLACKWHITE":"android.media.effect.effectfactory.effect_blackwhite\r\n","android.media.AudioDeviceInfo.getChannelCounts()":"android.media.audiodeviceinfo.getChannelcounts（）\r\n","Playback state of a RemoteControlClient which is fast forwarding in the media\n    it is currently playing.":"在媒体中快速转发的远程控制状态的播放状态\r\n    它目前正在播放。\r\n","Gets the current volume of the session.":"获取会话的当前卷。\r\n","android.media.AudioPresentation.hasSpokenSubtitles()":"android.media.audiopersentation.hasspokensubtitles（）\r\n","android.media.ExifInterface.TAG_ARTIST":"android.media.exifinterface.tag_artist\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_CAPTURE_FRAMERATE":"android.media.mediametadataretriever.metadata_key_capture_framerate\r\n","DRM is not used.":"不使用DRM。\r\n","#getElapsedRealtimeUncertaintyNanos()":"#getElapsedRealTimeNuncterntytynanos（）\r\n","android.media.CamcorderProfile.QUALITY_TIME_LAPSE_2K":"android.media.camcorderprofile.quality_time_lapse_2k\r\n","Error for ":"错误\r\n","Removes a geofence added by ":"删除添加的地理林\r\n","android.media.AudioManager.clearCommunicationDevice()":"android.media.audiomanager.clearcommunicationdevice（）\r\n","This key is no longer in use.":"此键不再使用。\r\n","android.media.MediaFormat.KEY_BITRATE_MODE":"android.media.mediaformat.key_bitrate_mode\r\n","Set image location metadata.":"设置图像位置元数据。\r\n","android.hardware.Sensor.STRING_TYPE_LOW_LATENCY_OFFBODY_DETECT":"android.hardware.sensor.string_type_low_latency_offbody_detect\r\n","android.hardware.location.GeofenceHardware.resumeGeofence(int, int, int)":"android.hardware.location.geofencehardware.resumegeofence（int，int，int）\r\n","Flag indicating a RemoteControlClient makes use of the \"pause\" media key.":"指示RemoteControlclient的标志使用“暂停”媒体密钥。\r\n","Error code for a non-existent file":"不存在的文件的错误代码\r\n","CaptureRequest#CONTROL_AWB_MODE android.control.awbMode":"CaptureRequest＃CONTROL_AWB_MODE android的。控制。awb模式\r\n","android.media.metrics.PlaybackMetrics.STREAM_SOURCE_UNKNOWN":"android.media.metrics.playbackmetrics.stream_source_unknown\r\n","Interface definition of a callback to be invoked when a\n timed text is available for display.":"接口的定义是回调时要调用的回调\r\n 定时文本可供显示。\r\n","android.media.Rating.RATING_NONE":"android.media.rating.rating_none\r\n","android.media.RemoteControlClient.setPlaybackState(int, long, float)":"android.media.remotecontrolclient.setplaybackstate（int，long，float）\r\n","android.mtp.MtpEvent.EVENT_OBJECT_REMOVED":"android.mtp.mtpevent.event_object_remaved\r\n","SeekableInputReader":"SeekableInputReader\r\n","luminance in shade in lux":"Lux的阴影亮度\r\n","A rating style expressed as a percentage.":"评级样式表示为百分比。\r\n","AudioPresentation#MASTERING_NOT_INDICATED":"Audiopersentation＃Mastering_Not_Indicated\r\n","android.media.VolumeShaper.getVolume()":"android.media.volumeshaper.getVolume（）\r\n","Gets the stream type where this ringtone will be played. -or- Sets the stream type where this ringtone will be played.":"获取将播放此铃声的流类型。 - 或 - 设置将播放此铃声的流类型。\r\n","\n            that applications have published to express their ongoing media playback state.":"\r\n            该应用程序已发布以表达其正在进行的媒体播放状态。\r\n","This key request type specifies that previously saved offline keys should be released.":"此密钥请求类型指定应发布以前保存的离线密钥。\r\n","android.media.ExifInterface.getDateTime()":"android.media.exifinterface.getDateTime（）\r\n","android.media.MediaRecorder.setVideoEncodingProfileLevel(int, int)":"android.media.mediarecorder.setVideoEncodingProfilelevel（int，int）\r\n","android.media.MediaFormat.KEY_PUSH_BLANK_BUFFERS_ON_STOP":"android.media.mediaformat.key_push_blank_buffers_on_stop\r\n","Initiate a provisioning operation for a CA system.":"启动CA系统的配置操作。\r\n","Returns true if the given key is contained in the metadata":"如果给定键包含在元数据中，则返回为true\r\n","Removes any longitude associated with this address.":"消除与此地址相关的任何经度。\r\n","#TONE_CDMA_CONFIRM":"#TONE_CDMA_CONFIRM\r\n","android.hardware.camera2.params.RggbChannelVector.RggbChannelVector(float, float, float, float)":"android.hardware.camera2.params.RggbChannelVector.RggbChannelVector（浮动，浮动，浮动，浮动）\r\n","Called when the user releases a key.":"当用户发布密钥时调用。\r\n","Used to specify that an endpoint zero control request is a class specific request.":"用来指定端点零控制请求是特定于类的请求。\r\n","Returns the remote-wakeup attribute value configuration's attributes field.":"返回远程磁通属性值配置的属性字段。\r\n","android.view.inputmethod.InputMethodSession.updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)":"android.view.inputmethod.inputmethodsession.updatecursoranchorinfo（android.view.inputmethod.cursoranchorinfo）\r\n","android.media.MediaCodec.setCallback(android.media.Callback)":"android.media.mediacodec.setCallback（android.media.callback）\r\n","android.net.LocalSocket.SOCKET_DGRAM":"android.net.localsocket.socket_dgram\r\n","android.media.MediaRoute2Info.getConnectionState()":"android.media.mediaroute2info.getConnectionState（）\r\n","CaptureRequest#SCALER_CROP_REGION android.scaler.cropRegion":"captureRequest＃scaler_crop_region android.scaler.cropregion\r\n","The output format has changed, subsequent data will follow the new\n format.":"输出格式已更改，随后的数据将遵循新的\r\n 格式。\r\n","android.inputmethodservice.InputMethodService.getCurrentInputBinding()":"android.inputmethodservice.inputmethodservice.getCurrentInputBinding（）\r\n","Gets the density level.":"获得密度水平。\r\n","Register for location updates using the named provider, and callbacks delivered via the\n            provided ":"使用命名提供商注册位置更新，并通过\r\n            假如\r\n","Returns the ordinal of the light.":"返回光的顺序。\r\n"," containing the previous\n            bluetooth SCO connection state.":" 包含上一个\r\n            蓝牙SCO连接状态。\r\n","Event code for OBJECT_PROP_DESC_CHANGED event":"object_prop_desc_changed事件的事件代码\r\n","android.media.ExifInterface.TAG_RW2_JPG_FROM_RAW":"android.media.exifinterface.tag_rw2_jpg_from_raw\r\n","A key describing the number of channels in an audio format.":"描述音频格式的频道数量的键。\r\n","android.media.AudioPresentation.CONTENT_COMMENTARY":"android.media.audiopersentation.content_commentary\r\n","Indicates this session supports the stop command.":"指示此会话支持停止命令。\r\n","android.media.MediaRecorder.setOutputFile(java.lang.String)":"android.media.mediarecorder.setOutputfile（java.lang.string）\r\n","This is called when the user has moved the cursor in the extracted\n            text view, when running in fullsreen mode.":"当用户移动了提取的光标时，这就是调用\r\n            文本视图，以全序模式运行时。\r\n","Used as an int extra field to denote the number of media items in a page.":"用作INT额外字段，用来表示页面中的媒体项目数量。\r\n","A key describing the desired clockwise rotation on an output surface.":"一个键，描述输出表面上所需的顺时针旋转。\r\n","android.hardware.usb.UsbAccessory":"android.hardware.usb.usbaccessory\r\n","android.hardware.camera2.CaptureResult.BLACK_LEVEL_LOCK":"android.hardware.camera2.captureresult.black_level_lock\r\n","The device is transitively connected to the display sink.":"该设备已定义地连接到显示器接收器。\r\n","android.hardware.GeomagneticField.getFieldStrength()":"android.hardware.geomagneticfield.getFieldstrength（）\r\n","android.hardware.camera2.CameraCharacteristics.JPEG_AVAILABLE_THUMBNAIL_SIZES":"机器人。硬件。相机2。CameraCharacteristics.JPEG_AVAILABLE_THUMBNAIL_SIZES\r\n","A String key for identifying the content.":"识别内容的字符串键。\r\n","#TONE_CDMA_KEYPAD_VOLUME_KEY_LITE":"#TONE_CDMA_KEYPAD_VOLUME_KEY_LITE\r\n","android.media.AudioDeviceInfo.TYPE_REMOTE_SUBMIX":"android.media.audiodeviceinfo.type_remote_submix\r\n","android.hardware.camera2.params.StreamConfigurationMap.getOutputStallDuration(java.lang.Class, android.util.Size)":"android.hardware.camera2.params.streamconfigurationmap.getOutputstallduration（java.lang.class，android.util.size）\r\n","android.location.GnssMeasurement.getAccumulatedDeltaRangeMeters()":"android.location.gnssmeasurement.getAccumulationDeltArangeMeters（）\r\n","android.media.midi.MidiInputPort.getPortNumber()":"android.media.midi.midiinputport.getportnumber（）\r\n","Returns the endpoint's interval field.":"返回端点的间隔字段。\r\n","android.media.MediaExtractor.SAMPLE_FLAG_SYNC":"android.media.mediaextractor.sample_flag_sync\r\n","android.media.MediaMetadataRetriever#METADATA_KEY_COMPOSER":"android.media.mediametadataretriever＃metadata_key_composer\r\n","AudioManager.AudioRecordingCallback":"AudioManager.AudiorCordingCallback\r\n","s to be used for connections made by this factory.":"S用于该工厂建立的连接。\r\n","Returns an array of supported encapsulation modes for the device.":"返回设备的支持封装模式数组。\r\n","Name under which a TvInputService component publishes information about itself.":"tvInputService组件的名称发布了有关自身的信息。\r\n","android.media.MediaExtractor.selectTrack(int)":"android.media.mediaextractor.selecttrack（int）\r\n","if the caller does not have permission to create\n a virtual display with the specified flags.\n":"如果呼叫者无权创建\r\n 带有指定标志的虚拟显示。\r\n\r\n","Send a simulated key event for a media button to be received by the current client.":"为当前客户端接收媒体按钮发送模拟密钥事件。\r\n","#TONE_CDMA_LOW_SS_2":"＃tone_cdma_low_ss_2\r\n"," that provides\n all of the standard behavior for an input method.":" 提供的\r\n 输入方法的所有标准行为。\r\n","if a crypto object has been specified in\n         ":"如果在\r\n         \r\n","A constant describing an accelerometer sensor type. ":"描述加速度计传感器类型的常量。 \r\n","android.media.Session2CommandGroup.hasCommand(android.media.Session2Command)":"android.media.session2CommandGroup.hascommand（android.media.session2Command）\r\n","Class used to modify metadata in a ":"用于修改元数据的类\r\n","android.media.session.MediaSession.setPlaybackToLocal(android.media.AudioAttributes)":"android.media.session.mediasession.setplaybacktolocal（android.media.audioAttributes）\r\n","android.media.MediaDescription.BT_FOLDER_TYPE_TITLES":"android.media.mediaDescription.bt_folder_type_titles\r\n","The correction coefficients to correct for this camera device's\n            radial and tangential lens distortion.":"更正此相机设备的校正系数\r\n            径向和切向镜头失真。\r\n","android.hardware.camera2.CaptureRequest.SENSOR_FRAME_DURATION":"android.hardware.camera2.capturerequest.sensor_frame_duration\r\n","android.media.MediaPlayer.setDataSource(android.content.Context, android.net.Uri, java.util.Map)":"android.media.mediaplayer.setdatasource（android.content.context，android.net.uri，java.util.map）\r\n","Vendor specific USB subclass.":"供应商特定的USB子类。\r\n","#start":"＃开始\r\n","Register a listener to be invoked when an input Image is returned to the\n            ImageWriter.":"注册一个侦听器，当输入图像返回到\r\n            ImageWriter。\r\n","List of scene modes for ":"场景模式列表 \r\n","android.hardware.usb.UsbConfiguration.isSelfPowered()":"android.hardware.usb.usbconfiguration.isselfpopered（）\r\n","android.media.Session2Command.getCommandCode()":"android.media.session2command.getCommandCode（）\r\n","android.hardware.Sensor.getType()":"android.hardware.sensor.getType（）\r\n","Get current playback position.":"获得当前的播放位置。\r\n","OnPlaybackPositionUpdateListener":"OnPlayBackPositionUpDateListener\r\n","OnSessionLostStateListener":"OnsessionLostStateListener\r\n","Reverb delay. ":"混响延迟。\r\n","if the angle is not supported.\n\n":"如果不支持角度。\r\n\r\n\r\n","The width of the image in pixels.":"图像的宽度以像素为单位。\r\n","Limits the effective size of the <code>AudioTrack</code> buffer\n            that the application writes to.":"限制<code> audiotrack </code>缓冲区的有效尺寸\r\n            该应用程序写入。\r\n","Gets the extra bundle of a custom command.":"获取自定义命令的额外捆绑包。\r\n","android.hardware.Sensor.getVersion()":"android.hardware.sensor.getVersion（）\r\n"," object,\n            find a codec supporting a given format and query the capabilities\n            of a given codec.":" 目的，\r\n            查找支持给定格式的编解码器并查询功能\r\n            给定的编解码器。\r\n","android.media.RoutingSessionInfo.getName()":"android.media.routingsessioninfo.getName（）\r\n"," back to ImageWriter for the downstream\n            consumer to access.":" 返回下游的ImageWriter\r\n            消费者访问。\r\n","Retrieve the CameraCaptureSession.":"取回摄影师。\r\n","Reads Exif tags from the specified image file descriptor.":"从指定的图像文件描述符中读取EXIF标签。\r\n","Returns the number of clients currently connected to the specified output port.":"返回当前连接到指定输出端口的客户端数。\r\n","android.location.GnssMeasurement.STATE_2ND_CODE_LOCK":"android.location.gnssmeasurement.state_2nd_code_lock\r\n","Maximum size for preset name":"预设名称的最大尺寸\r\n","KeyEvent.DispatcherState KeyEvent.DispatcherState":"keyevent.dispatchertate keyevent.dispatchertate\r\n","This indicates that the buffer marked as such contains the data\n for a sync frame.":"这表明标记为此类的缓冲区包含数据\r\n 对于同步框架。\r\n"," to\n            supply the ID of a specific TV input to set up.":" 至\r\n            提供特定电视输入的ID。\r\n","Gets network transfer duration in milliseconds.":"获取网络传输持续时间以毫秒。\r\n","if the cameraId does not match any\n         known camera device.":"如果摄影师不匹配任何\r\n         已知的相机设备。\r\n","android.media.RingtoneManager.getRingtone(android.content.Context, android.net.Uri)":"android.media.ringtonemanager.getringtone（android.content.context，android.net.uri）\r\n","android.media.MediaDrm.getSecureStop(byte[])":"android.media.mediadrm.getSecurestop（byte []）\r\n","XmlPullParser":"xmlpullparser\r\n","android.media.metrics.PlaybackSession.reportTrackChangeEvent(android.media.metrics.TrackChangeEvent)":"android.media.metrics.playbacksession.reporttrackchangeevent（android.media.metrics.trackchangeevent）\r\n","#TONE_CDMA_CALL_SIGNAL_ISDN_PAT7":"＃tone_cdma_call_signal_isdn_pat7\r\n","Implement the Parcelable interface\n":"实现包裹界面\r\n\r\n","ImageFormat#PRIVATE":"ImageFormat＃私有\r\n","HDCP version 2.":"HDCP版本2。\r\n","android.media.MediaRouter2.registerControllerCallback(java.util.concurrent.Executor, android.media.ControllerCallback)":"android.media.mediarouter2.RegisterControllerCallback（java.util.concurrent.executor，android.media.controllerCallback））\r\n","Default recording duration in seconds before the session is terminated.":"会话终止之前的默认记录持续时间。\r\n","Pauses the monitoring of a geofence added by ":"暂停监控添加的地理林\r\n","if it is called before ":"如果以前被调用\r\n","Broadcast Action: sent by the system to tell the target TV input that one of its \"watch next\"\n            program's browsable state is disabled, i.":"广播动作：系统发送以告诉目标电视输入其“下一步”之一\r\n            程序的可浏览状态是禁用的。\r\n","MidiManager.OnDeviceOpenedListener":"Midimanager.ondeviceopenedListener\r\n","CaptureResult":"捕获\r\n","android.net.VpnService.onRevoke()":"android.net.vpnservice.onrevoke（）\r\n","Map a ":"地图\r\n","Get the number of rows in this map.":"获取此地图中的行数。\r\n","Icon to display instead of a label.":"图标显示而不是标签。\r\n","MediaSession media sessions":"MediaSession媒体会议\r\n","Gets the duration of the file.":"获取文件的持续时间。\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.getRecommendedUseCase()":"android.hardware.camera2.params.RecommendedStreamConfigurationMap.getRecommendedUseCase()\r\n","). -or- Sets the session wide camera parameters (see ":"）。 - 或 - 设置会话宽相机参数（请参阅\r\n","android.media.ImageReader.getHeight()":"android.media.imagereader.getheight（）\r\n","The Settings class regroups all preset reverb parameters.":"设置类重组所有预设混响参数。\r\n","android.media.audiofx.AcousticEchoCanceler.isAvailable()":"android.media.audiofx.Acousticticechcanceler.isavailable（）\r\n","AudioManager#USE_DEFAULT_STREAM_TYPE":"听众＃use_default_stream_type\r\n","android.hardware.camera2.CameraCharacteristics.HOT_PIXEL_AVAILABLE_HOT_PIXEL_MODES":"机器人。硬件。相机2。CameraCharacteristics.HOT_PIXEL_AVAILABLE_HOT_PIXEL_MODES\r\n"," if this TV input is pass-though which does not have any real channels in\n            TvProvider.":" 如果该电视输入是传递的，尽管没有任何真实渠道\r\n            TVPROVIDER。\r\n","upon codec error. Note that some codec errors\n for start may be attributed to future method calls.\n":"关于编解码错误。请注意一些编解码器错误\r\n 对于开始，可能归因于将来的方法调用。\r\n\r\n","android.media.MediaCodecInfo.isAlias()":"android.media.mediacodecinfo.isalias（）\r\n","The correction coefficients to correct for this camera device's\n            radial and tangential lens distortion for a\n            CaptureRequest with ":"更正此相机设备的校正系数\r\n            A的径向和切向镜头失真\r\n            与captureRequest一起\r\n","Creates an instance whose backing parser will be selected by sniffing the content during the\n            first ":"创建一个实例，将通过嗅探内容来选择其后备解析器\r\n            第一的\r\n","android.media.session.PlaybackState.getCustomActions()":"android.media.session.playbackstate.getCustomactions（）\r\n","android.hardware.camera2.CaptureResult.FLASH_STATE":"android.hardware.camera2.captureresult.flash_state\r\n","Error code for attempting to extract a file with an unsupported media container format, or an\n            unsupported media container feature":"错误代码用于尝试使用不支持的媒体容器格式提取文件或\r\n            不支持的媒体容器功能\r\n","MediaPlayer is temporarily pausing playback internally in order to\n buffer more data.":"MediaPlayer暂时在内部暂停播放\r\n 缓冲区更多数据。\r\n","#TONE_CDMA_DIAL_TONE_LITE":"#TONE_CDMA_DIAL_TONE_LITE\r\n"," created a session although there was no creation\n            request.":" 尽管没有创建，但创建了一个会话\r\n            要求。\r\n","Returns the number of tuners this TV input has.":"返回该电视输入具有的调谐器数量。\r\n","android.hardware.camera2.CameraCharacteristics.REQUEST_MAX_NUM_OUTPUT_RAW":"android.hardware.camera2.cameracharacteristics.request_max_num_output_raw\r\n","android.media.ExifInterface.TAG_PLANAR_CONFIGURATION":"android.media.exifinterface.tag_planar_configuration\r\n","if the response indicates that\n reprovisioning is required":"如果响应表明\r\n 需要置换\r\n"," only retrieve information for the subset of tracks\n            selected.":" 仅检索轨道子集的信息\r\n            选定。\r\n","android.graphics.ImageFormat":"android.graphics.imageformat\r\n","The system has decided that it may be time to show your input method.":"该系统已决定可能该显示您的输入方法了。\r\n","android.hardware.camera2.params.StreamConfigurationMap.getOutputStallDuration(int, android.util.Size)":"android.hardware.camera2.params.streamconfigurationmap.getOutputstallduration（int，android.util.size）\r\n","Get the request associated with this failed capture.":"获取与此失败捕获相关的请求。\r\n","android.location.GnssNavigationMessage.STATUS_PARITY_PASSED":"android.location.gnssnavigationmessage.status_parity_passed\r\n","Connects a ":"连接a\r\n","android.media.MediaFormat.KEY_QUALITY":"android.media.mediaformat.key_quality\r\n","LocationListener#onFlushComplete(int)":"LocationListener＃onflushComplete（int）\r\n","android.mtp.MtpConstants.OPERATION_SET_OBJECT_PROP_VALUE":"android.mtp.mtpconstants.operation_set_set_object_prop_value\r\n","android.media.AudioTrack.write(byte[], int, int, int)":"android.media.audiotrack.write（byte []，int，int，int）\r\n","android.media.AudioManager.unregisterAudioDeviceCallback(android.media.AudioDeviceCallback)":"android.media.audiomanager.unregisteraudiodevicecallback（android.media.audiodevicecallback）\r\n","android.hardware.camera2.CaptureRequest ":"android.hardware.camera2.capturreequest\r\n","Gets the title for the prompt, as set by ":"获取提示的标题，\r\n","If the media contains EXIF data, this key retrieves the length (in bytes)\n            of the data.":"如果介质包含EXIF数据，则此键检索长度（以字节为单位）\r\n            数据。\r\n","Object can not be modified or deleted but its properties are modifiable.":"无法修改或删除对象，但其属性是可修改的。\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_ORIENTATION":"android.hardware.camera2.cameracharacteristics.sensor_orientation\r\n","android.hardware.camera2.CameraCaptureSession.captureBurst(java.util.List, android.hardware.camera2.CaptureCallback, android.os.Handler)":"android.hardware.camera2.cameracapturesession.captureburst（java.util.list，android.hardware.camera.camera2.capturecallback，android.os.handler）\r\n","A socket named with a normal filesystem path.":"插入普通文件系统路径的插座。\r\n"," if this TV input can record TV programs, ":" 如果此电视输入可以录制电视节目，\r\n","The video encoder being used for the video track":"视频编码器用于视频轨道\r\n","Return the HDCP level negotiated with downstream receivers the\n            device is connected to.":"返回与下游接收器协商的HDCP级别\r\n            设备已连接到。\r\n","android.media.MediaCodec.setVideoScalingMode(int)":"android.media.mediacodec.setVidesoscalingmode（int）\r\n","MediaRouter2.RoutingController#setVolume(int)":"Mediarouter2.RoutingController＃setVolume（int）\r\n","android.media.MediaParser.PARAMETER_TS_IGNORE_AAC_STREAM":"android.media.mediaparser.parameter_ts_ignore_aac_stream\r\n","android.location.Address.getLongitude()":"android.location.Address.getLongitude（）\r\n","android.net.UrlQuerySanitizer.getAllowUnregisteredParamaters()":"android.net.urlquerysanitizer.getallowunregisteredParamaters（）\r\n","Adds a vignette effect to image, i.":"在图像中添加了小插图效果。\r\n","android.media.CamcorderProfile.QUALITY_8KUHD":"android.media.camcorderprofile.quality_8kuhd\r\n","Indicates this is a network that has the ability to reach the carrier's\n SUPL server, used to retrieve GPS information.":"表明这是一个能够到达运营商的网络\r\n SUPL服务器，用于检索GPS信息。\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_GENRE":"android.media.mediametadataretriever.metadata_key_gerre\r\n","android.hardware.HardwareBuffer.USAGE_PROTECTED_CONTENT":"android.hardware.hardwarebuffer.usage_protected_content\r\n","Returns the long value for the key.":"返回密钥的长度值。\r\n","android.hardware.camera2.MultiResolutionImageReader":"android.hardware.camera2.multiresolutionsolutionImagereader\r\n","Used to indicate a transient loss of audio focus.":"用于指示音频焦点的短暂损失。\r\n","android.media.tv.TvInputService.SERVICE_INTERFACE":"android.media.tv.tvinputservice.service_interface\r\n","Returns the endpoint's address field.":"返回端点的地址字段。\r\n","Unregisters a GNSS antenna info listener.":"解开gnss天线信息听众。\r\n","android.media.MediaCas.SCRAMBLING_MODE_RESERVED":"android.media.mediacas.scrambling_mode_reserved\r\n"," but that lets you specify the audio\n            attributes and session ID to be used by the new MediaPlayer instance.":" 但这使您可以指定音频\r\n            新MediaPlayer实例要使用的属性和会话ID。\r\n","Registers an OnParameterChangeListener interface.":"注册一个ongarameterChangelistener界面。\r\n","android.media.MicrophoneInfo.getId()":"android.media.microphoneinfo.getID（）\r\n","android.mtp.MtpEvent.getParameter1()":"android.mtp.mtpevent.getParameter1（）\r\n","android.mtp.MtpEvent.EVENT_UNREPORTED_STATUS":"android.mtp.mtpevent.event_unreported_status\r\n","TrustManager":"Trustmanager\r\n","android.net.TrafficStats.setThreadStatsTag(int)":"android.net.trafficstats.setthreadstatstag（int）\r\n","android.mtp.MtpDevice.sendObject(int, long, android.os.ParcelFileDescriptor)":"android.mtp.mtpdevice.sendobject（int，long，android.os.parcelfiledScriptor）\r\n","android.media.AudioDeviceCallback.onAudioDevicesAdded(android.media.AudioDeviceInfo[])":"android.media.audiodevicecallback.onaudiodevicesadded（android.media.audiodeviceinfo []）\r\n","MediaSync class can be used to synchronously play audio and video streams.":"MediaSync类可用于同步播放音频和视频流。\r\n","android.media.MicrophoneInfo":"android.media.microphoneinfo\r\n","android.media.RingtoneManager.EXTRA_RINGTONE_PICKED_URI":"android.media.ringtonemanager.extra_ringtone_picked_uri\r\n","Gets number of local bytes read.":"获取读取本地字节的数量。\r\n","Returns true if this route is enabled and may be selected.":"如果启用此路线并可以选择此路线，则返回true。\r\n","android.hardware.usb.UsbInterface.getEndpoint(int)":"android.hardware.usb.usbinterface.getendpoint（int）\r\n","Returns the minimum gain value, which is the constant 0.":"返回最小增益值，即常数0。\r\n","#PASSIVE_INTERVAL":"#passive_interval\r\n","android.media.ImageReader.getSurface()":"android.media.imagereader.getSurface（）\r\n","Returns the URL of the current PAC script or null if there is\n no PAC script.":"返回当前PAC脚本或null的URL\r\n 没有PAC脚本。\r\n","AuthenticationResult":"AuthenticationResult\r\n","This class encapsulates information about an MTP device.":"此类封装有关MTP设备的信息。\r\n","android.hardware.SensorEventCallback":"android.hardware.sensoreventCallback\r\n","Method called when a new waveform capture is available.":"可用新波形捕获时调用的方法。\r\n","Microphone directionality type: super cardioid.":"麦克风方向性类型：超级心脏。\r\n","android.media.MediaFormat.KEY_MAX_WIDTH":"android.media.mediaformat.key_max_width\r\n","android.hardware.usb.UsbEndpoint.getType()":"android.hardware.usb.usbendpoint.getType（）\r\n","List of <code>(x, y)</code> coordinates of hot/defective pixels on the sensor.":"<code>（x，y）</code>传感器上热/有缺陷像素的坐标的列表。\r\n","android.media.effect.EffectUpdateListener.onEffectUpdated(android.media.effect.Effect, java.lang.Object)":"android.media.effect.effectupdateListener.Oneffectupupdated（android.media.effect.effect，java.lang.Object）\r\n","Use this method to get the default sensor for a given type.":"使用此方法获取给定类型的默认传感器。\r\n","android.media.tv.TvInputManager.VIDEO_UNAVAILABLE_REASON_CAS_NO_CARD":"android.media.tv.tvinputmanager.video_unavailable_reason_cas_no_card\r\n","android.location.Criteria.getSpeedAccuracy()":"android.location.criteria.getSpeedAccuracy（）\r\n","Denotes a generic operation failure.":"表示通用操作故障。\r\n","Removes all location updates for the specified ":"删除指定的所有位置更新\r\n","android.net.TrafficStats.getTotalTxPackets()":"android.net.trafficstats.getTotalTxPackets（）\r\n","android.hardware.SensorManager.DynamicSensorCallback\n                   DynamicSensorCallback":"android.hardware.sensormanager.dynamicsensorcallback\r\n                   DynamicsEnsorCallback\r\n","Returns the configuration's max power consumption, in milliamps.":"返回配置的最大功率消耗，以毫安为单位。\r\n","android.media.session.MediaController.getTag()":"android.media.session.mediacontroller.getTag（）\r\n","Create a new metering rectangle.":"创建一个新的计量矩形。\r\n","android.media.AudioTrack.getAudioSessionId()":"android.media.audiotrack.getAudiosessionId（）\r\n","State indicating this item is currently rewinding.":"指示此项目的状态当前正在倒带。\r\n","android.media.MediaFormat.containsKey(java.lang.String)":"android.media.mediaformat.containskey（java.lang.string）\r\n","android.media.RingtoneManager.hasHapticChannels(int)":"android.media.ringtonemanager.hashapticchannels（int）\r\n","android.media.audiofx.EnvironmentalReverb.PARAM_DECAY_HF_RATIO":"android.media.audiofx.environmentalreverb.param_decay_hf_ratio\r\n","android.hardware.camera2.CameraCharacteristics.LENS_INFO_FOCUS_DISTANCE_CALIBRATION":"android.hardware.camera2.cameracharacteristics.lens_info_focus_distance_calibration\r\n","The ImageWriter class allows an application to produce Image data into a\n            ":"ImageWriter类允许应用程序将图像数据产生到一个\r\n            \r\n","android.media.ExifInterface.TAG_OFFSET_TIME_DIGITIZED":"android.media.exifinterface.tag_offset_time_digitized\r\n","Bundle key for the device's product name property.":"设备产品名称属性的捆绑键。\r\n","NetworkRequest":"NetworkRequest\r\n","DeviceCallback":"DeviceCallback\r\n","android.net.IpSecManager.removeTransportModeTransforms(java.net.Socket)":"android.net.ipsecmanager.removetransportmodetransforms（java.net.socket）\r\n","android.net.UrlQuerySanitizer.getAllIllegal()":"android.net.urlquerysanitizer.getAllillegal（）\r\n","Registers a callback for the notification of stream events.":"注册回调以通知流事件。\r\n","A key describing the channel composition of audio content.":"描述音频内容的通道组成的键。\r\n","Get the latitude, in degrees. -or- Set the latitude, in degrees.":"获得纬度。 - 或 - 设置纬度，以度为单位。\r\n","#TONE_CDMA_INTERCEPT":"#tone_cdma_intercept\r\n","Update the given window's parameters for the given mode.":"为给定模式更新给定窗口的参数。\r\n","android.media.MediaParser.PARAMETER_MP3_ENABLE_INDEX_SEEKING":"android.media.mediaparser.parameter_mp3_enable_index_seeking\r\n","Sequential packet socket type":"顺序数据包套接字类型\r\n","Called when the application has reported a new location of its text insertion point and\n            characters in the composition string.":"当应用程序报告其文本插入点的新位置时，请调用\r\n            构图字符串中的字符。\r\n","Returns the minimum buffer size required for the successful creation of an AudioRecord\n            object, in byte units.":"返回成功创建Audiorecord所需的最小缓冲尺寸\r\n            对象，字节单元。\r\n","android.location.GnssMeasurement.getSnrInDb()":"android.location.gnssmeasurement.getSnrindB（）\r\n","if locationName is null":"如果位置名称为null\r\n","Used for receiving notifications when the device location has changed.":"设备位置更改时，用于接收通知。\r\n","android.media.ExifInterface.TAG_SUBSEC_TIME":"android.media.exifinterface.tag_subsec_time\r\n","android.hardware.camera2.CaptureResult.CONTROL_AF_SCENE_CHANGE":"android.hardware.camera2.captureresult.control_af_scene_change\r\n","android.media.AudioFormat.getFrameSizeInBytes()":"android.media.audioformat.getFramesizeInbytes（）\r\n","In communication audio mode. ":"在通信音频模式下。\r\n",", providing the arguments it supplied and a \n unique integer token representing the start request.":"，提供所提供的论点，\r\n 唯一代表开始请求的唯一整数令牌。\r\n","The action must be matched by the intent filter of this service.":"该操作必须通过此服务的意图过滤器匹配。\r\n","android.hardware.camera2.params.RggbChannelVector.getRed()":"android.hardware.camera2.params.rggbchannelvector.getred（）\r\n","Returns all encoder profiles of a camcorder profile for the given camera at\n            the given quality level.":"返回给定相机的摄像机配置文件的所有编码器配置文件\r\n            给定的质量水平。\r\n","Returns the current sample's presentation time in microseconds.":"返回当前样本的表示时间微秒。\r\n","android.media.ExifInterface.TAG_SUBFILE_TYPE":"android.media.exifinterface.tag_subfile_type\r\n",", used for capturing high\n            speed images from the ":"，用于捕获高\r\n            从\r\n","android.media.MediaCodec.PARAMETER_KEY_SUSPEND_TIME":"android.media.mediacodec.parameter_key_suspend_time\r\n","VolumeShaper":"体积纸\r\n","A device type describing a Bluetooth Low Energy (BLE) audio headset or headphones.":"描述蓝牙低能（BLE）音频耳机或耳机的设备类型。\r\n","#getPlaybackHeadPosition()":"#getPlayBackheadposition（）\r\n","operation":"手术\r\n","A constant string describing a significant motion trigger sensor.":"一个恒定的字符串描述了一个重要的运动触发传感器。\r\n","if any of the parameters was out of range":"如果任何参数超出范围\r\n","Returns the thoroughfare name of the address, for example, \"1600 Ampitheater Parkway\",\n            which may be null -or- Sets the thoroughfare name of the address, which may be null.":"返回地址的通道名称，例如“ 1600 Ampitheater Parkway”，\r\n            可能为null或 - 设置地址的通道名称，这可能为null。\r\n","android.location.LocationManager.MODE_CHANGED_ACTION":"android.location.locationmanager.mode_changed_action\r\n","TvView.TvInputCallback#onVideoUnavailable(String, int)":"tvview.tvinputcallback＃onVideounavailable（字符串，int）\r\n","Returns the PRN (pseudo-random number) for the satellite.":"返回卫星的PRN（伪随机编号）。\r\n","A tag used to record the offset from UTC (the time difference from Universal Time\n             Coordinated including daylight saving time) of the time of DateTime tag.":"用于记录UTC偏移量的标签（通用时间的时间差\r\n             协调的DateTime标签时间的日光保存时间）。\r\n","The count of rows in a directory.":"目录中的行计数。\r\n","android.media.MicrophoneInfo.getType()":"android.media.microphoneinfo.getType（）\r\n","Record a sanitized parameter-value pair.":"记录一个消毒的参数值对。\r\n","Retrieves the audio fallback mode.":"检索音频后备模式。\r\n","Returns the codec in the form of mime type.":"以Mime类型的形式返回编解码器。\r\n","#getBasebandCn0DbHz(int satelliteIndex)":"＃getBaseBandCN0DBHz（int satelliteIndex）\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_IO_BAD_HTTP_STATUS":"android.media.metrics.playbackerrorevent.error_io_bad_http_status\r\n","AudioMetadata class is used to manage typed key-value pairs for\n            configuration and capability requests within the Audio Framework.":"AudiOmetAdata类用于管理类型的键值对\r\n            音频框架内的配置和功能请求。\r\n","Returns the capture size range.":"返回捕获尺寸范围。\r\n","android.hardware.SensorManager.STANDARD_GRAVITY":"机器人。硬件。SensorManager。标准重力\r\n","DatagramSocket":"Datagramsocket\r\n","TvContentRating":"TVCONTENTRATIEN\r\n","android.media.audiofx.AudioEffect.ALREADY_EXISTS":"android.media.audiofx.audioeffect.already_exists\r\n","android.location.GnssAntennaInfo.getSignalGainCorrections()":"android.location.gnssantennainfo.getSignAlgainCorrections（）\r\n","android.media.tv.TvInputManager.getBlockedRatings()":"android.media.tv.tvinputmanager.getBlockedratings（）\r\n","android.media.CamcorderProfile.videoFrameHeight":"android.media.camcorderprofile.videoframeheight\r\n","android.media.MediaDrm.isCryptoSchemeSupported(java.util.UUID)":"android.media.mediadrm.siscryptoschemesupported（java.util.uuid）\r\n","Returns the minimum distance between location updates.":"返回位置更新之间的最小距离。\r\n","Sets video scaling mode.":"设置视频缩放模式。\r\n","#SUCCESS":"＃成功\r\n","android.media.metrics.PlaybackMetrics.getVideoFramesDropped()":"android.media.metrics.playbackmetrics.getVideoframesdropped（）\r\n","android.media.ExifInterface.TAG_STRIP_BYTE_COUNTS":"android.media.exifinterface.tag_strip_byte_counts\r\n","android.hardware.usb.UsbEndpoint.getDirection()":"android.hardware.usb.usbendpoint.getDirection（）\r\n","android.hardware.camera2.CaptureRequest.SENSOR_TEST_PATTERN_DATA":"android.hardware.camera2.capturerequest.sensor_test_pattern_data\r\n","UsbDeviceConnection#requestWait() is processed":"USBDeviceConnection＃requestWait（）已处理\r\n","ControllerCallback#onCommandResult":"ControlererCallback＃OnCommandResult\r\n","android.location.Location.Location(android.location.Location)":"android.location.location.location（android.location.location）\r\n","Get the PSSH info if present.":"如果存在，获取PSSH信息。\r\n","Returns a Uri representing this content or null.":"返回代表此内容或null的URI。\r\n","Get a list of sizes compatible with ":"获取与兼容尺寸的列表\r\n","Sets the capture size, i.e. the number of bytes returned by ":"设置捕获大小，即返回的字节数\r\n","Returns the playback head position expressed in frames.":"返回以帧表示的播放头位置。\r\n","#TONE_SUP_DIAL":"#tone_sup_dial\r\n","android.media.MicrophoneInfo.SENSITIVITY_UNKNOWN":"android.media.microphoneinfo.sensitivity_unknown\r\n","CameraCaptureSession#switchToOffline":"摄影＃switchToOffline\r\n","android.media.tv.TvInputManager.VIDEO_UNAVAILABLE_REASON_CAS_REBOOTING":"android.media.tv.tvinputmanager.video_unavailable_reason_cas_rebooting\r\n","CDMA HIGH PBX SLS tone:{1300Hz 25ms, 1450Hz 25ms} 8 times\n 200ms OFF, {1300Hz 25ms, 1450Hz 25ms} 16 times, 200ms OFF,\n {1300Hz 25ms, 1450Hz 25ms} 8 times, 1000ms OFF, REPEAT....":"CDMA高PBX SLS音调：{1300Hz 25ms，1450Hz 25ms} 8次\r\n 200ms关闭，{1300Hz 25ms，1450Hz 25ms} 16次，200ms折扣，\r\n {1300Hz 25ms，1450Hz 25ms} 8次，1000毫秒，重复...\r\n","android.media.AudioManager.getRouting(int)":"android.media.audiomanager.getRouting（int）\r\n","#CHANNEL_RED":"#channel_red\r\n","Sets whether TS parsing should split AVC stream into access units based on slice headers.":"设置TS解析是否应将AVC流分为基于Slice标头的访问单元。\r\n","Gets DRM type.":"获取DRM类型。\r\n","android.media.MicrophoneInfo.getOrientation()":"android.media.microphoneinfo.getorientation（）\r\n","android.net.UrlQuerySanitizer.getSpaceLegal()":"android.net.urlquerysanitizer.getSpacelegal（）\r\n","android.hardware.usb.UsbAccessory.getManufacturer()":"android.hardware.usb.usbaccessory.getManufacter（）\r\n","android.media.AudioManager.registerAudioRecordingCallback(android.media.AudioRecordingCallback, android.os.Handler)":"android.media.audiomanager.registeraudiorecordingcallback（android.media.audiorecordingcallback，android.os.handler）\r\n","Request that any soft input part of the input method be shown to the user.":"请求向用户显示输入方法的任何软输入部分。\r\n","Playback information indicating the playback volume is fixed, i&#46;e&#46; it cannot be\n            controlled from this object.":"播放信息表示播放卷已修复，i＆＃46; e＆＃46;它不可能是\r\n            由这个对象控制。\r\n","Gets the carrier frequency of the signal tracked.":"获取跟踪信号的载体频率。\r\n","Bundle key for the device's version property.":"设备版本属性的捆绑键。\r\n","Gets the supported features of the route.":"获取路线的支持功能。\r\n","android.media.ExifInterface#ORIENTATION_TRANSPOSE":"android.media.exifterface＃orientation_transpose\r\n","F:Android.Media.MediaRecorder.SetAudioSource":"F：android.media.mediarecorder.setaudiosource\r\n","Create a circular geofence.":"创建一个圆形的地理林。\r\n","android.media.RemoteControlClient.setPlaybackPositionUpdateListener(android.media.OnPlaybackPositionUpdateListener)":"android.media.remotecontrolclient.setplaybackpositionupdateListener（android.media.onplaybackpositionupdateListener）\r\n","Called when the media file is ready for playback.":"当媒体文件准备播放时，请致电。\r\n","android.media.MediaFormat.KEY_VIDEO_QP_I_MIN":"android.media.mediaformat.key_video_qp_i_min\r\n","The surround sound formats are available for use if they are detected.":"如果检测到环绕声格式，则可以使用。\r\n","android.location.LocationManager.removeProximityAlert(android.app.PendingIntent)":"android.location.LocationManager.RemoveProximityAlert（android.app.pendendIntent）\r\n","Container for keys in the keyboard.":"键盘中的键容器。\r\n","android.hardware.camera2.CaptureResult.DISTORTION_CORRECTION_MODE":"android.hardware.camera2.captureresult.distortort_correction_mode\r\n","Indicates whether dialogue enhancement is available.":"指示是否可用对话增强。\r\n","android.hardware.camera2.CaptureRequest.COLOR_CORRECTION_TRANSFORM":"android.hardware.camera2.capturerequest.color_correction_transform\r\n","If you want to set the default network preference,you can directly\n change the networkAttributes array in framework's config.xml.":"如果要设置默认网络偏好，则可以直接\r\n 在Framework的Config.xml中更改NetworkAttributes数组。\r\n","android.media.tv.TvInputInfo.canPauseRecording()":"android.media.tv.tvinputinfo.canpauserecording（）\r\n","MediaDrm#PROPERTY_DESCRIPTION":"MediaDRM＃property_description\r\n","android.media.audiofx.DynamicsProcessing":"android.media.audiofx.DynamicsProcessing\r\n","Returns the track index the current sample originates from (or -1\n            if no more samples are available)":"返回轨道索引当前样品起源于（OR -1）\r\n            如果没有更多样品）\r\n","RingtoneManager provides access to ringtones, notification, and other types\n            of sounds.":"RingtoneManager提供了对铃声，通知和其他类型的访问权限\r\n            声音。\r\n","android.media.AudioManager.startBluetoothSco()":"android.media.audiomanager.startbluetoothsco（）\r\n","android.media.AudioRecord.setPreferredDevice(android.media.AudioDeviceInfo)":"android.media.audiorecord.setpreferreddevice（android.media.audiodeviceinfo）\r\n","Builder#setEncoding(int)":"构建器＃setEncoding（int）\r\n","Removes any sounds/vibrate that may be in the queue, or are playing (related to\n changing volume).":"删除可能在队列中或正在播放的任何声音/振动（与\r\n 更改音量）。\r\n","Returns the Manufacturer Plug and Play ID.":"返回制造商的插件和播放ID。\r\n"," from the connected service.":" 从连接的服务。\r\n","Returns the maximum absolute amplitude that was sampled since the last\n            call to this method.":"返回自上次采样的最大绝对幅度\r\n            调用此方法。\r\n","android.media.MicrophoneInfo.getChannelMapping()":"android.media.microphoneinfo.getChannelMapping（）\r\n","android.media.MediaDescription.EXTRA_BT_FOLDER_TYPE":"android.media.mediadescription.extra_bt_folder_type\r\n","Register a callback to be invoked when an error has happened\n            during an asynchronous operation.":"在发生错误时注册要调用的回调\r\n            在异步操作中。\r\n","#TONE_DTMF_2":"＃tone_dtmf_2\r\n"," value, or -1 if unavailable or invalid.":" 值，或-1如果不可用或无效。\r\n","Returns the profile integer type.":"返回配置文件整数类型。\r\n","android.media.MediaRecorder.setVideoEncodingBitRate(int)":"android.media.mediarecorder.setVideoencodingBitrate（INT）\r\n","if the file cannot be accessed or is corrupted.":"如果无法访问或损坏该文件。\r\n","A constant string describing a rotation vector sensor type.":"描述旋转向量传感器类型的常数字符串。\r\n","Returns true if the satellite was used by the GPS engine when\n            calculating the most recent GPS fix.":"如果GPS发动机使用卫星，则返回true\r\n            计算最新的GPS修复。\r\n","if the effect with the specified name is not supported or\n         not known.\n":"如果不支持指定名称的效果或\r\n         未知。\r\n\r\n","Advance to the next sample.":"前进到下一个样本。\r\n","android.net.IpSecAlgorithm.IpSecAlgorithm(java.lang.String, byte[])":"android.net.ipsecalgorithm.ipsecalgorithm（java.lang.string，byte []）\r\n","Same factory method as ":"同一工厂方法与\r\n"," is available,\n            ":" 可用，\r\n            \r\n","F:Android.Media.Session.MediaSession.SetFlags":"F：android.media.session.mediasession.setflags\r\n","#READ_NON_BLOCKING":"#Read_non_blocking\r\n","android.media.metrics.PlaybackStateEvent.getState()":"android.media.metrics.playbackstateevent.getstate（）\r\n","android.location.GnssMeasurement.getAccumulatedDeltaRangeState()":"android.location.gnssmeasurement.getAccumulationDeltArangeState（）\r\n","A key describing the number of frames to trim from the end of the decoded audio stream.":"一个键，描述从解码音频流的末端进行修剪的帧数。\r\n","Override to handle requests to adjust the volume of the current output.":"覆盖以处理请求以调整当前输出的音量。\r\n","android.location.GpsSatellite.usedInFix()":"android.location.gpssatellite.usedinfix（）\r\n","android.location.GnssMeasurement.STATE_GAL_E1BC_CODE_LOCK":"android.location.gnssmeasurement.state_gal_e1bc_code_lock\r\n","Gets the estimate of the relative precision of the alignment of the\n            ":"获取对对准的相对精度的估计\r\n            \r\n","android.media.ExifInterface.TAG_MAX_APERTURE_VALUE":"android.media.exifinterface.tag_max_aperture_value\r\n","Switches sensor pixel mode between maximum resolution mode and default mode.":"开关传感器像素模式在最大分辨率模式和默认模式之间。\r\n","android.media.MediaFormat.KEY_LOW_LATENCY":"android.media.mediaformat.key_low_latency\r\n","android.hardware.camera2.CameraCharacteristics.LENS_RADIAL_DISTORTION":"android.hardware.camera2.cameracharacteristics.lens_radial_distort\r\n","\n            that are supported by this camera device.":"\r\n            这是由这个相机设备支持的.\r\n","if the internal player engine has not been\n initialized\n":"如果内部播放器引擎没有\r\n 初始化\r\n\r\n","otherwise.":"否则。\r\n","True if the provider is able to provide altitude under at least some conditions.":"如果提供商能够至少在某些条件下提供高度，则是真的。\r\n","Represents a network route.":"代表网络路线。\r\n"," is relative to the position of the\n            primary gyroscope of this Android device.":" 相对于\r\n            该Android设备的主要陀螺仪。\r\n","AudioManager#AUDIOFOCUS_GAIN_TRANSIENT":"听众＃audiofocus_gain_transient\r\n","android.hardware.camera2.params.StreamConfigurationMap.getOutputSizes(java.lang.Class)":"android.hardware.camera2.params.streamconfigurationmap.getOutputsizes（java.lang.class）\r\n","Bounds of the face.":"脸的边界。\r\n","android.media.MediaCodec.reset()":"android.media.mediacodec.reset（）\r\n","Returns the current volume index for a particular stream.":"返回特定流的当前音量索引。\r\n","android.media.ExifInterface.TAG_F_NUMBER":"android.media.exifinterface.tag_f_number\r\n","Retrieves the speed factor.":"检索速度因子。\r\n","android.media.SoundPool.autoPause()":"android.media.soundpool.autopause（）\r\n","android.media.MediaMetadata.METADATA_KEY_ART":"android.media.mediametadata.metadata_key_art\r\n","Creates a keyboard from the given xml key layout file.":"从给定的XML键布局文件创建键盘。\r\n","android.location.GnssMeasurement.hasCodeType()":"android.location.gnssmeasurement.hascodeType（）\r\n","android.hardware.location.GeofenceHardwareMonitorCallback.onMonitoringSystemChange(int, boolean, android.location.Location)":"android.hardware.location.geofencehardwaremonitorcallback.onmonitoringsystemchange（int，boolean，android.location.location.location.location.location.location）\r\n","android.net.TrafficStats.getRxPackets(java.lang.String)":"android.net.trafficstats.getrxpackets（java.lang.string）\r\n","android.hardware.camera2.CameraCharacteristics.LENS_POSE_TRANSLATION":"android.hardware.camera2.cameracharacteristics.lens_pose_translation\r\n","android.media.AudioFormat.getChannelCount()":"android.media.audioformat.getChannelcount（）\r\n","android.media.MediaPlayer.getTrackInfo()":"android.media.mediaplayer.getTrackinfo（）\r\n","Value for extra EXTRA_SCO_AUDIO_STATE indicating that\n            there was an error trying to obtain the state":"额外的extra_sco_audio_state的值\r\n            试图获得状态存在错误\r\n","android.location.GnssMeasurement.ADR_STATE_HALF_CYCLE_RESOLVED":"android.location.gnssmeasurement.adr_state_half_cycle_resolved\r\n","android.media.audiofx.Equalizer.PARAM_BAND_FREQ_RANGE":"android.media.audiofx.equalizer.param_band_freq_range\r\n","Gets the GNSS receiver clock information associated with the measurements for the current\n            event.":"获取与当前的测量相关的GNSS接收器时钟信息\r\n            事件。\r\n","Error code for a decoder initialization failure":"解码器初始化失败的错误代码\r\n","Sets the listener to be invoked when a subtitle track has new data available.":"设置侦听器在字幕轨道上有新数据可用时被调用。\r\n","android.media.audiofx.LoudnessEnhancer":"android.media.audiofx.loudnessenhancer\r\n","Called when notification UI needs update.":"通知UI需要更新时调用。\r\n","android.media.RemoteControlClient.setTransportControlFlags(int)":"android.media.remotecontrolclient.setTransportControlflags（INT）\r\n"," for the ringtone at the given position in the\n            ":" 对于在给定位置的铃声\r\n            \r\n","android.media.MediaSync.setSyncParams(android.media.SyncParams)":"android.media.mediasync.setsyncparams（android.media.syncparams）\r\n","android.media.MediaFormat.KEY_LEVEL":"android.media.mediaformat.key_level\r\n","android.media.MediaDrm.setPropertyString(java.lang.String, java.lang.String)":"android.media.mediadrm.setpropertystring（java.lang.string，java.lang.string）\r\n","android.app.Activity#onActivityResult(int,\n            int, android.content.Intent)":"android.app.Activity＃onActivityResult（int，\r\n            int，android.content.intent）\r\n","Early reflections level.":"早期反思水平。\r\n","Get the current buffered position in ms.":"在MS中获取当前缓冲位置。\r\n","Return the virtualization mode being used, if any.":"返回使用的虚拟化模式（如果有）。\r\n","android.inputmethodservice.Keyboard.Keyboard(android.content.Context, int, int, int, int)":"android.inputmethodservice.keyboard.keyboard（android.content.context，int，int，int，int，int）\r\n","Returns the native file descriptor for the device, or\n            -1 if the device is not opened.":"返回设备的本机文件描述符或\r\n            -1如果设备未打开。\r\n","android.media.tv.TvTrackInfo.getAudioChannelCount()":"android.media.tv.tvtrackinfo.getaudiochannelcount（）\r\n","Creation mode where audio data is streamed from Java to the native layer\n as the audio is playing.":"创建模式从Java流到本机层的音频数据\r\n 随着音频的播放。\r\n","android.media.session.PlaybackState.ACTION_PREPARE_FROM_URI":"android.media.session.playbackstate.action_prepare_from_uri\r\n","Indicates this session supports the seek to command.":"指示本课程支持寻求命令。\r\n","List of disjoint rectangles indicating the sensor\n            optically shielded black pixel regions.":"指示传感器的分离矩形列表\r\n            光学屏蔽的黑色像素区域。\r\n","android.media.metrics.TrackChangeEvent.getLanguageRegion()":"android.media.metrics.trackchangeevent.getlanguageregion（）\r\n","Create an input configuration with the format and a list of multi-resolution input stream\n            info.":"创建具有格式的输入配置和多分辨率输入流的列表\r\n            信息。\r\n","Band frequency range.":"带频率范围。\r\n","android.inputmethodservice.AbstractInputMethodService.getKeyDispatcherState()":"android.inputmethodservice.abstractinputmethodservice.getKeyDisPatchertate（）\r\n","Insets#contentTopInsets":"插图＃contentTopinsets\r\n","The disc number for the media's original source.":"媒体原始来源的光盘编号。\r\n","android.hardware.camera2.CameraMetadata.REQUEST_AVAILABLE_CAPABILITIES_ULTRA_HIGH_RESOLUTION_SENSOR":"android.hardware.camera2.camerametadata.request_available_capabilities_ultra_high_resolution_sensor\r\n","Returns the unknownTimer of this geofence. -or- Set the unknown timer for this geofence.":"返回该地理林的不知名者。 - 或 - 设置此地理林的未知计时器。\r\n","android.media.metrics.TrackChangeEvent.TRACK_TYPE_TEXT":"android.media.metrics.trackchangeevent.track_type_text\r\n","#ACTION_SCO_AUDIO_STATE_CHANGED":"#action_sco_audio_state_changed\r\n","Offline license is released, the keys have been marked for\n            release using ":"发行了离线许可证，钥匙已被标记为\r\n            使用\r\n","#TONE_DTMF_7":"＃tone_dtmf_7\r\n","Returns true if the route is in the process of connecting and is not\n yet ready for use.":"如果路由在连接过程中，则返回true\r\n 尚未准备好使用。\r\n","android.media.MediaDrm.getOfflineLicenseState(byte[])":"android.media.mediadrm.getofflinelicensestate（byte []）\r\n","DASH (Dynamic Adaptive Streaming over HTTP) stream type.":"dash（通过HTTP上的动态自适应流）流类型。\r\n","A class representing an interface on a ":"一个代表接口的类\r\n","A high speed session type that can only contain instances of ":"高速会话类型，只能包含\r\n","android.media.midi.MidiReceiver.send(byte[], int, int, long)":"android.media.midi.midireceiver.send（byte []，int，int，long）\r\n","android.mtp.MtpObjectInfo.getThumbPixHeight()":"android.mtp.mtpobjectInfo.getThumbPixHeight（）\r\n","Return number of packets transmitted since device boot.":"自设备引导以来传输的数据包的返回数量。\r\n","android.media.AudioRecord.setNotificationMarkerPosition(int)":"android.media.audiorecord.setnotificationmarkerposition（int）\r\n","android.media.AudioPresentation.CONTENT_MAIN":"android.media.audiopersentation.content_main\r\n","Clear any active tag set to account ":"清除任何有效标签设置为帐户\r\n","android.hardware.camera2.params.StreamConfigurationMap.getHighSpeedVideoSizesFor(android.util.Range)":"android.hardware.camera2.params.streamconfigurationmap.gethighspeedvideosizesfor（android.util.range）\r\n","#TONE_CDMA_LOW_SSL":"#TONE_CDMA_LOW_SSL\r\n","android.media.MediaRoute2ProviderService.getAllSessionInfo()":"android.media.mediaroute2providerservice.getallsessioninfo（）\r\n","Gets the Pseudorange rate at the timestamp in m/s.":"以m/s的速度扫时获取伪量率。\r\n","Quality level corresponding to the qcif (176 x 144) resolution.":"质量水平对应于QCIF（176 x 144）分辨率。\r\n","android.media.metrics.NetworkEvent":"android.media.metrics.networkevent\r\n","android.hardware.location.GeofenceHardwareRequest.getNotificationResponsiveness()":"android.hardware.location.geofencehardwarerequest.getNotificationResponsives（）\r\n","Dispatches an unhandled input event to the next receiver.":"向下一个接收器派遣一个未经处理的输入事件。\r\n","android.hardware.usb.UsbDeviceConnection.bulkTransfer(android.hardware.usb.UsbEndpoint, byte[], int, int)":"android.hardware.usb.usbdeviceconnection.bulktransfer（android.hardware.usb.usbendpoint，byte []，int，int）\r\n","android.media.AudioDeviceInfo.getChannelIndexMasks()":"android.media.audiodeviceinfo.getChannelIndexMasks（）\r\n","android.media.MediaPlayer.getKeyRequest(byte[], byte[], java.lang.String, int, java.util.Map)":"android.media.mediaplayer.getKeyRequest（byte []，byte []，java.lang.string，int，java.util.map）\r\n","android.net.SSLCertificateSocketFactory.setTrustManagers(javax.net.ssl.TrustManager[])":"android.net.sslcertificatesocketFactory.setTrustManagers（javax.net.ssl.trustmanager []）\r\n","MediaSession#getCurrentControllerInfo()":"MediaSession＃getCurrentControllerInfo（）\r\n","android.media.audiofx.EnvironmentalReverb.PARAM_REVERB_DELAY":"android.media.audiofx.environmentalreverb.param_reverb_delay\r\n"," instances for the outputs used by a\n            ":" 实例的输出\r\n            \r\n","android.media.tv.TvContract.buildWatchNextProgramUri(long)":"android.media.tv.tvcontract.buildwatchnextprogramuri（long）\r\n","Returns the media id or null.":"返回媒体ID或NULL。\r\n","Returns a type string describing the VPN profile type":"返回描述VPN配置文件类型的类型字符串\r\n","Usage: The buffer will sometimes be read by the CPU":"用法：缓冲区有时会由CPU阅读\r\n","Operation code for GetObjectPropDesc":"GetObjectPropdesc的操作代码\r\n"," is\n            PRESET_CURVE":" 是\r\n            PRESET_CURVE\r\n","The output buffers have changed, the client must refer to the new\n set of output buffers returned by ":"输出缓冲区已更改，客户必须参考新的\r\n 返回的输出缓冲区集\r\n","The unencoded parameter\n":"未编码的参数\r\n\r\n","android.hardware.SensorManager.LIGHT_NO_MOON":"android.hardware.sensormanager.light_no_moon\r\n"," effect.":" 影响。\r\n","if name is null or does not exist":"如果名称为null或不存在\r\n","The metadata key to retrieve the information about the artist of\n the data source.":"检索有关艺术家的信息的元数据键\r\n 数据源。\r\n","android.media.MediaFormat.getInteger(java.lang.String)":"android.media.mediaformat.getinteger（java.lang.string）\r\n","Allows defaults to be returned for properties not set.":"允许返回未设置属性的默认值。\r\n","android.media.MediaCas.SCRAMBLING_MODE_DVB_CISSA_V1":"android.media.mediacas.scrambling_mode_dvb_cissa_v1\r\n","android.media.AudioTrack.write(short[], int, int, int)":"android.media.audiotrack.write（简短[]，int，int，int）\r\n","AudioAttributes":"AudioAttributes\r\n","#RATING_PERCENTAGE":"#rating_percentage\r\n","Applies a fisheye lens distortion to the image.":"将鱼眼镜头变形适用于图像。\r\n","android.media.MediaCodecList.getCodecInfoAt(int)":"android.media.mediacodeclist.getCodecinfoat（int）\r\n","android.media.MediaPlayer.prepare()":"android.media.mediaplayer.prepare（）\r\n","android.hardware.location.GeofenceHardwareCallback.onGeofenceTransition(int, int, android.location.Location, long, int)":"android.hardware.location.geofencehardwarecallback.ongeofencetransition（int，int，android.location.location.location，long，int）\r\n","android.media.FaceDetector.FaceDetector(int, int, int)":"android.media.faceDetector.facedEtector（INT，INT，INT）\r\n"," for your app.":" 对于您的应用。\r\n","Get the green (even rows) component.":"获取绿色（甚至行）组件。\r\n","GeofenceHardware#GEOFENCE_UNCERTAIN":"geofencehardware＃geofence_unc.uncnerty\r\n","android.hardware.SensorManager.getQuaternionFromVector(float[], float[])":"android.hardware.sensormanager.getQuaternionFromDector（float []，float []）\r\n","android.media.MediaPlayer.start()":"android.media.mediaplayer.start（）\r\n","The area of the image sensor which corresponds to active pixels after any geometric\n            distortion correction has been applied.":"任何几何后对应于活动像素的图像传感器的面积\r\n            已应用失真校正。\r\n","android.media.ExifInterface.TAG_TRANSFER_FUNCTION":"android.media.exifinterface.tag_transfer_function\r\n","MidiDevice.MidiConnection":"MidideVice.Midiconnection\r\n","Current state of auto-white balance (AWB) algorithm.":"当前的自动余额状态（AWB）算法。\r\n","Constructs a new MediaScannerConnection object.":"构建一个新的MediaScannerConnection对象。\r\n","Set the style of rating used by this session.":"设置此会话使用的评分样式。\r\n","Match content frame rate user preference is unknown.":"匹配内容框架率用户偏好是未知的。\r\n","#CONNECTION_STATE_DISCONNECTED":"#connection_state_disconnected\r\n","NetworkSpecifier object for cellular network request.":"蜂窝网络请求的NetworkSpecifier对象。\r\n","This key retrieves the video rotation angle in degrees, if available.":"该键将以度为单位的视频旋转角度（如果有）。\r\n","android.inputmethodservice.KeyboardView.isShifted()":"android.inputmethodservice.keyboardview.isshifted（）\r\n","android.media.metrics.PlaybackMetrics.PLAYBACK_TYPE_VOD":"android.media.metrics.playbackmetrics.playback_type_vod\r\n","android.media.tv.TvInputManager.getTvInputList()":"android.media.tv.tvinputmanager.gettvinputlist（）\r\n","android.hardware.display.DisplayManager.registerDisplayListener(android.hardware.display.DisplayListener, android.os.Handler)":"android.hardware.display.displaymanager.registerdisplaylistener（android.hardware.display.displaylistener，android.os.handler）\r\n","Playback state of a RemoteControlClient which is skipping to the next\n               logical chapter (such as a song in a playlist) in the media it is currently playing.":"跳到下一个的弹回状态\r\n               逻辑章节（例如播放列表中的歌曲）目前正在播放。\r\n","Immutable URI reference.":"不变的URI参考。\r\n","android.graphics.PixelFormat":"android.graphics.pixelformat\r\n","android.media.audiofx.Virtualizer.getVirtualizationMode()":"android.media.audiofx.virtualizer.getVirtualizationmode（）\r\n","Access to this network is blocked.":"对该网络的访问被阻止。\r\n","android.media.MediaPlayer.setScreenOnWhilePlaying(boolean)":"android.media.mediaplayer.setscreenonwhileplaying（布尔）\r\n","Sets the initialization state of the instance.":"设置实例的初始化状态。\r\n","This key retrieves the color range, if available.":"此键检索颜色范围（如果有）。\r\n","F:Android.Media.ThumbnailUtils.ExtractThumbnail":"F：android.media.thumbnailutils.extractthumbnail\r\n","android.media.JetPlayer.release()":"android.media.jetplayer.release（）\r\n","android.location.GnssNavigationMessage":"android.location.gnssnavigationMessage\r\n","+48.f":"+48.f\r\n","android.hardware.camera2.CaptureResult.JPEG_ORIENTATION":"android.hardware.camera2.captureresult.jpeg_orientation\r\n"," accurately enough.":" 足够准确。\r\n"," value for the key.":" 键的值。\r\n","#TONE_CDMA_CALL_SIGNAL_ISDN_PING_RING":"#tone_cdma_call_signal_isdn_ping_ring\r\n","Register a callback to be invoked when the state of keys in a session\n            change, e.":"在会话中注册一个键状态时调用要调用的回调\r\n            更改，e。\r\n","Get a capture result field value.":"获取捕获结果字段值。\r\n","#ERROR_NO_MEMORY":"#ERROR_NO_MEMORY\r\n","android.hardware.camera2.params.OutputConfiguration.getSurfaces()":"android.hardware.camera2.params.outputconfiguration.getsurfaces（）\r\n","\n when done.":"\r\n 完成后。\r\n","android.media.MediaFormat.KEY_MAX_HEIGHT":"android.media.mediaformat.key_max_height\r\n","Called to indicate the completion of a seek operation.":"呼吁表示搜索操作的完成。\r\n","UsbDeviceConnection":"UsbdeviceConnection\r\n","android.media.AudioPlaybackConfiguration.getAudioDeviceInfo()":"android.media.audioplaybackconfiguration.getaudiodeviceinfo（）\r\n"," returns successfully to\n            get the input format accepted by the codec.":" 成功返回\r\n            获取编解码器接受的输入格式。\r\n","A rating style with 0 to 4 stars.":"具有0到4星的评分样式。\r\n","android.media.ExifInterface.getAltitude(double)":"android.media.exifinterface.getAltitude（double）\r\n","android.hardware.SensorPrivacyManager":"机器人。硬件。N.传感器，传感器\r\n","android.hardware.camera2.params.Capability.getMode()":"android.hardware.camera2.params.capibility.getmode（）\r\n","android.hardware.HardwareBuffer.getFormat()":"android.hardware.hardwarebuffer.getFormat（）\r\n","Playback information indicating the playback volume is variable and can be controlled\n from this object.":"播放信息表示播放卷是可变的，并且可以控制\r\n 从这个对象。\r\n","Indicates that the audio is not to be recorded by any app, even if it is a system app.":"表示即使是系统应用程序，任何应用程序也不会记录音频。\r\n","Diffusion. ":"扩散。\r\n","MediaSession2":"MediaSession2\r\n","\n            away from the host.":"\r\n            远离主机。\r\n","android.media.audiofx.LoudnessEnhancer.PARAM_TARGET_GAIN_MB":"android.media.audiofx.loudnessenhancer.param_target_gain_mb\r\n","android.location.LocationListener.onStatusChanged(java.lang.String, int, android.os.Bundle)":"android.location.LocationListener.Onstatuschanged（java.lang.string，int，android.os.bundle）\r\n","OnEventListener":"OneVentListener\r\n","android.media.tv.TvInputManager.updateTvInputInfo(android.media.tv.TvInputInfo)":"android.media.tv.tvinputmanager.updatetvinputinfo（android.media.tv.tvinputinfo）\r\n","android.media.AudioTrack.getDualMonoMode()":"android.media.audiotrack.getDualMonomode（）\r\n","Unload Sound effects.":"卸载声音效果。\r\n","UUID for preset reverberation effect":"预设混响效果的UUID\r\n","android.media.AudioManager.isBluetoothScoOn()":"android.media.audiomanager.isbluetoothscoon（）\r\n","Returns the maximum gain value, which is greater than or equal to 1.":"返回最大增益值，该值大于或等于1。\r\n","android.media.AudioTrack.getNotificationMarkerPosition()":"android.media.audiotrack.getNotificationmarkerPosition（）\r\n","Returns connection status information about all network\n types supported by the device.":"返回有关所有网络的连接状态信息\r\n 设备支持的类型。\r\n","MediaDrm#KEY_TYPE_STREAMING":"MediaDRM＃key_type_streaming\r\n","android.location.LocationRequest":"Android.Location.LocationRequest\r\n",". -or- Sets playback rate using ":"。 - 或设置使用的播放率\r\n","An optional key describing the maximum number of non-display-order coded frames.":"一个可选的密钥，描述了最大数量的非显示顺序编码框架。\r\n","android.media.MediaFormat.COLOR_TRANSFER_HLG":"android.media.mediaformat.color_transfer_hlg\r\n","#TONE_PROP_ACK":"#tone_prop_ack\r\n","Constructs a new builder, copying the attributes from this Uri.":"构建一个新的构建器，从该URI复制属性。\r\n","android.hardware.usb.UsbEndpoint.getAttributes()":"android.hardware.usb.usbendpoint.getAttributes（）\r\n","if the codec cannot be created.":"如果无法创建编解码器。\r\n","Returns whether the provider is allowed to incur monetary cost. -or- Indicates whether the provider is allowed to incur monetary cost.":"退货是否允许提供者产生货币成本。 - 或指示提供商是否允许货币成本。\r\n","android.media.MediaParser.setParameter(java.lang.String, java.lang.Object)":"android.media.mediaparser.setParameter（java.lang.string，java.lang.object）\r\n","android.media.MediaFormat.KEY_AAC_MAX_OUTPUT_CHANNEL_COUNT":"android.media.mediaformat.key_aac_max_output_channel_count\r\n","KeyEvent#KEYCODE_MEDIA_EJECT":"keyevent＃keycode_media_eject\r\n","The key for a bundle parameter containing a program ID as a long integer.":"包含程序ID作为长整数的捆绑参数的键。\r\n","Creates a minimal audio format.":"创建最小的音频格式。\r\n","android.inputmethodservice.InputMethodService.onUpdateSelection(int, int, int, int, int, int)":"android.inputmethodservice.inputmethodservice.onupdateselection（int，int，int，int，int，int，int，int）\r\n","Prepare to establish a VPN connection.":"准备建立VPN连接。\r\n","android.media.AudioFormat.ENCODING_PCM_32BIT":"android.media.audioformat.encoding_pcm_32bit\r\n","A key describing the attenuation factor allowing to adapt the dynamics of the output to the\n            actual listening requirements.":"描述衰减因子的键，允许将输出的动态调整到\r\n            实际听力要求。\r\n","android.media.MediaRoute2Info.FEATURE_REMOTE_PLAYBACK":"android.media.mediaroute2info.feature_remote_playback\r\n","#TONE_SUP_ERROR":"#TONE_SUP_ERROR\r\n","Retrieve a developer-readable diagnostic information string\n            associated with the exception.":"检索开发人员可读的诊断信息字符串\r\n            与例外相关。\r\n"," to retrieve\n            a frame (not necessarily a key frame) associated with a data source that\n            is located closest to or at the given time.":" 检索\r\n            与数据源关联的框架（不一定是关键帧）\r\n            是最接近或在给定时间的。\r\n","Operation code for SetDevicePropValue":"SetDevicePropvalue的操作代码\r\n","Stops recording.":"停止记录。\r\n","Submit a list of requests to be captured in sequence as a burst.":"提交一个要顺序捕获的请求列表，作为爆发。\r\n","The year the media was created or published as a long.":"媒体创建或发表的那一年。\r\n","android.media.MediaCodec.PARAMETER_KEY_REQUEST_SYNC_FRAME":"android.media.mediacodec.parameter_key_request_sync_frame\r\n","Update the current metadata.":"更新当前的元数据。\r\n","android.hardware.usb.UsbRequest.close()":"android.hardware.usb.usbrequest.close（）\r\n","ImageFormat image format":"图像图像格式\r\n","android.net.TrafficStats.UNSUPPORTED":"android.net.trafficstats.unsupported\r\n","android.hardware.camera2.params.MultiResolutionStreamInfo":"android.hardware.camera2.params.multiresolutionstreaminfo\r\n","android.hardware.camera2.CaptureResult.CONTROL_AF_MODE":"android.hardware.camera2.captureresult.control_af_mode\r\n"," to receive notifications of routing\n            changes on this AudioTrack.":" 接收路由通知\r\n            此录音带的变化。\r\n","Manages the properties of attached displays.":"管理附件显示的属性。\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_RAW":"android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_RAW\r\n","Usage: The buffer will often be written to by the CPU":"用法：缓冲区通常会由CPU写信\r\n","android.media.MediaParser.PARSER_NAME_PS":"android.media.mediaparser.parser_name_ps\r\n","SHA512 HMAC Authentication/Integrity Algorithm.":"SHA512 HMAC身份验证/完整性算法。\r\n","android.media.session.PlaybackState.ACTION_PAUSE":"android.media.session.playbackstate.action_pause\r\n"," broadcasts, containing\n            the new ":" 广播，包含\r\n            新的\r\n","android.media.MediaDrm.setOnSessionLostStateListener(android.media.OnSessionLostStateListener, android.os.Handler)":"android.media.mediadrm.setonsessionloststateListener（android.media.onsessionloststateListener，android.os.handler）\r\n","android.media.RemoteControlClient.PLAYSTATE_STOPPED":"android.media.remotecontrolclient.playstate_stopped\r\n","Gets diffusion level.":"获得扩散水平。\r\n","Event code for OBJECT_REMOVED event":"object_remaved事件的事件代码\r\n","Returns a copy of the map.":"返回地图的副本。\r\n","Called when the volume for the route should be set to the given value":"当路由的音量应设置为给定值时调用\r\n","The crop type that this camera device supports.":"该相机设备支持的作物类型。\r\n","Concrete implementation of\n ":"具体实施\r\n \r\n","The smallest gain factor in this map.":"此地图中最小的增益因子。\r\n","\n            requesting that the session be opened at the maximum security level of\n            the device.":"\r\n            要求以最大安全级别打开会话\r\n            设备。\r\n","Override this to control when the input method should run in\n            fullscreen mode.":"覆盖这是为了控制输入方法应何时运行\r\n            全屏模式。\r\n","Returns the interface's name.":"返回接口的名称。\r\n","android.media.MediaRouter.ROUTE_TYPE_LIVE_AUDIO":"android.media.mediarouter.route_type_live_audio\r\n","android.inputmethodservice.ExtractEditText":"android.inputMethodService.ExtractEditText\r\n","List of rotate-and-crop modes for ":"旋转和旋转模式的列表\r\n","android.media.MediaController2.sendSessionCommand(android.media.Session2Command, android.os.Bundle)":"android.media.mediacontroller2.sendsessioncommand（android.media.session2Command，android.os.bundle）\r\n","Broadcast intent, a hint for applications that audio is about to become\n            'noisy' due to a change in audio outputs.":"广播意图，这是音频即将成为的应用的提示\r\n            由于音频输出的变化，“嘈杂”。\r\n","Returns the state of the AudioRecord instance.":"返回Audiorecord实例的状态。\r\n","Indicates this session supports the prepare command.":"指示此会话支持准备命令。\r\n","Register a component to be the sole receiver of MEDIA_BUTTON intents.":"注册一个组件，是Media_button Intents的唯一接收器。\r\n","java.io.OutputStream":"java.io.outputstream\r\n","Network":"网络\r\n","Return number of bytes transmitted by the given UID since device boot.":"自设备引导以来，给定UID传输的字节的返回数量。\r\n","Returns the value of the specified tag or ":"返回指定标签的值或\r\n","Returns the version string the MTP device":"返回版本字符串MTP设备\r\n","android.hardware.camera2.CaptureRequest.STATISTICS_LENS_SHADING_MAP_MODE":"android.hardware.camera2.capturerequest.statistics_lens_shading_map_mode\r\n","android.hardware.camera2.CaptureRequest.NOISE_REDUCTION_MODE":"android.hardware.camera2.capturerequest.noise_reduction_mode\r\n","A constant string describing a hinge angle sensor.":"描述铰链角传感器的常数字符串。\r\n","Returns program ID used by the framework to select an audio presentation rendered by a\n            decoder.":"返回程序ID由框架使用以选择由A的音频演示文稿\r\n            解码器。\r\n","android.media.audiofx.Equalizer.PARAM_LEVEL_RANGE":"android.media.audiofx.equalizer.param_level_range\r\n","android.media.AudioTrack.getMinBufferSize(int, int, int)":"android.media.audiotrack.getminbuffersize（int，int，int）\r\n","android.location.GnssMeasurement.getFullInterSignalBiasNanos()":"android.location.gnssmeasurement.getfullintersignalbiasnanos（）\r\n","An interface for notifying clients of MediaScannerConnection\n when a connection to the MediaScanner service has been established\n and when the scanning of a file has completed.":"通知客户MediaScannerConnection的界面\r\n 建立了与MediaScanner服务的连接时\r\n 当文件的扫描完成后。\r\n","android.hardware.camera2.CaptureResult.SENSOR_TEST_PATTERN_MODE":"android.hardware.camera2.captureresult.sensor_test_pattern_mode\r\n","android.media.midi.MidiDeviceStatus.getOutputPortOpenCount(int)":"android.media.midi.mididevicestatus.getOutputpoteponCouncount（INT）\r\n","android.location.GnssClock.getElapsedRealtimeUncertaintyNanos()":"android.location.gnssclock.getElapsedRealTimeNuncterntytynanos（）\r\n","android.media.AudioManager.adjustStreamVolume(int, int, int)":"android.media.audiomanager.adjuststreamvolume（int，int，int）\r\n","android.media.MediaMetadataRetriever.METADATA_KEY_ARTIST":"android.media.mediametadataretriever.metadata_key_artist\r\n","Gets the number of frequency bands supported by the Equalizer engine.":"获取均衡器引擎支持的频带的数量。\r\n","android.hardware.lights.LightState.getColor()":"android.hardware.lights.lights.getColor（）\r\n","The metadata key to retrieve the information about the artist of\n            the data source.":"检索有关艺术家的信息的元数据键\r\n            数据源。\r\n","android.media.AudioRecord.setPreferredMicrophoneFieldDimension(float)":"android.media.audiorecord.setpreferredmicrophonefielddimension（float）\r\n","Beidou D1 message contained in the structure.":"结构中包含的Beidou D1消息。\r\n","android.net.SSLCertificateSocketFactory.setUseSessionTickets(java.net.Socket, boolean)":"android.net.sslcertificatesocketFactory.setuseSessionTickets（java.net.socket，boolean）\r\n","android.location.GnssNavigationMessage.STATUS_UNKNOWN":"android.location.gnssnavigationmessage.status_unknown\r\n","Returns the type of this TV input.":"返回此电视输入的类型。\r\n","Determine if a channel is still valid.":"确定通道是否仍然有效。\r\n","android.media.ApplicationMediaCapabilities":"android.media.ApplicationMediacababilities\r\n","Uses the settings from a VideoProfile object for recording.":"使用来自VideoProfile对象的设置进行录制。\r\n","Closes the socket.":"关闭插座。\r\n","android.net.SSLCertificateSocketFactory.setNpnProtocols(byte[][])":"android.net.sslcertificatesocketFactory.setnpnprotocols（byte [] [] []）\r\n","Returns marker position expressed in frames.":"返回标记位置以帧表示。\r\n","android.location.GnssMeasurement.MULTIPATH_INDICATOR_NOT_DETECTED":"android.location.gnssmeasurement.multipath_indicator_not_detected\r\n","android.media.MediaParser.PARSER_NAME_AMR":"android.media.mediaparser.parser_name_amr\r\n","#configure configure":"#Configure配置\r\n"," additional information frame,\n            which is reported through listener callback ":" 其他信息框架，\r\n            通过听众回调报告\r\n",">":">\r\n","android.media.MediaFormat.getByteBuffer(java.lang.String)":"android.media.mediaformat.getbytebuffer（java.lang.string）\r\n","IP traffic should be available.":"IP流量应该可用。\r\n","android.mtp.MtpConstants.OPERATION_GET_DEVICE_PROP_VALUE":"android.mtp.mtpconstants.operation_get_device_prop_value\r\n","android.media.MediaCodec.createPersistentInputSurface()":"android.media.mediacodec.createpersistentinputsurface（）\r\n","android.media.RemoteControlClient.FLAG_KEY_MEDIA_PREVIOUS":"android.media.remotecontrolclient.flag_key_media_previous\r\n","android.location.GnssStatus.getConstellationType(int)":"android.location.gnssstatus.getConstellationType（int）\r\n","Returns whether the provider must provide altitude information. -or- Indicates whether the provider must provide altitude information.":"返回提供商是否必须提供高度信息。 - 或指示提供商是否必须提供高度信息。\r\n","Gets audio underrun count.":"获得音频底部计数。\r\n","android.media.MediaParser.PARAMETER_TS_ALLOW_NON_IDR_AVC_KEYFRAMES":"android.media.mediaparser.parameter_ts_allow_non_idr_avc_keyframes\r\n","A constant string describing a motion detection sensor.":"描述运动检测传感器的常数弦。\r\n","android.media.tv.TvRecordingClient.startRecording(android.net.Uri, android.os.Bundle)":"android.media.tv.tvrecordingclient.startrecording（android.net.uri，android.os.bundle）\r\n","Constellation type constant for SBAS.":"SBAS的星座类型常数。\r\n","Return the number of ":"返回\r\n","Creates a HapticGenerator and attaches it to the given audio session.":"创建一个Hapticgenerator并将其附加到给定的音频会话中。\r\n","A system service manager for detecting, characterizing, and connecting to\n            ":"用于检测，表征和连接到的系统服务经理\r\n            \r\n","android.media.MediaTimestamp.getAnchorSystemNanoTime()":"android.media.MediaTimestamp.GetanchorSystemnanotime（）\r\n","Indicates if this route is a default route (ie, has no destination specified).":"指示此路由是否是默认路由（即未指定目的地）。\r\n","Invalid surface group ID.":"无效的表面组ID。\r\n","Returns the configuration's ID field.":"返回配置的ID字段。\r\n","android.media.ExifInterface.TAG_COPYRIGHT":"android.media.exifinterface.tag_copyright\r\n","Returns whether DRM ringtones will be included. -or- Sets whether to include DRM ringtones.":"返回是否包括DRM铃声。 - 或设置是否包括DRM铃声。\r\n","#TONE_DTMF_3":"＃tone_dtmf_3\r\n","Broadcast intent action when the user blocked content ratings change.":"当用户阻止内容评分变化时，广播意愿行动。\r\n","android.media.AudioManager.unregisterMediaButtonEventReceiver(android.app.PendingIntent)":"android.media.audiomanager.unregistermediabuttoneventreceiver（android.app.pendendintent）\r\n","The recommended stream configuration map for recording must contain a subset of efficient\n            video configurations that include ":"推荐的用于录制的流配置映射必须包含高效的子集\r\n            视频配置包括\r\n","SeekPoint":"寻求点\r\n","android.hardware.camera2.CameraCharacteristics.REQUEST_PARTIAL_RESULT_COUNT":"android.hardware.camera2.cameracharacteristics.request_partial_result_count\r\n","#SCRAMBLE_FLAG_PES_HEADER":"#scramble_flag_pes_header\r\n","android.media.tv.TvTrackInfo.getLanguage()":"android.media.tv.tvtrackinfo.getlanguage（）\r\n"," set\n            to ":" 放\r\n            至\r\n","android.media.audiofx.Equalizer.Equalizer(int, int)":"android.media.audiofx.equalizer.Equalizer（int，int）\r\n","android.media.session.MediaSessionManager.getActiveSessions(android.content.ComponentName)":"android.media.session.mediasessionmanager.getActiveSessions（android.content.componentname）\r\n","An EffectContext keeps all necessary state information to run Effects within a Open GL ES 2.":"效应context保留所有必要的状态信息，以在开放的gl es 2中运行效果。\r\n","#acquireLatestImage()":"#acquirelateStimage（）\r\n","#TONE_CDMA_MED_PBX_SS":"#TONE_CDMA_MED_PBX_SS\r\n","Parser for the OGG container format, as defined in RFC 3533.":"RFC 3533中定义的OGG容器格式的解析器。\r\n","Control for which scene mode is currently active.":"控制哪个场景模式当前处于活动状态。\r\n","The available stream configurations that this\n            camera device supports; also includes the minimum frame durations\n            and the stall durations for each format/size combination.":"可用的流配置\r\n            相机设备支持；还包括最小框架持续时间\r\n            以及每种格式/尺寸组合的失速持续时间。\r\n","#setOnSubtitleDataListener(OnSubtitleDataListener, Handler)":"#setOnsubTitleDataListener（onsubtitledataListener，处理程序）\r\n","Cas session is used to descramble live streams.":"CAS会话用于描述实时流。\r\n","Returns A ":"返回a\r\n","if input size does not exist in the return value of\n             getHighSpeedVideoSizes":"如果输入大小在返回值中不存在\r\n             GethighSpeedVideossized\r\n","Adds a session to this service.":"在此服务中添加了会话。\r\n","Register a listener to receive notifications about when the ":"注册听众以接收有关何时\r\n","android.hardware.camera2.CameraMetadata.DISTORTION_CORRECTION_MODE_FAST":"android.hardware.camera2.camerametadata.distortort_correction_mode_fast\r\n","android.net.SSLCertificateSocketFactory.createSocket(java.net.InetAddress, int, java.net.InetAddress, int)":"android.net.sslcertificatesocketFactory.Createsocket（Java.net.inetaddress，int，java.net.inetaddress，int）\r\n","android.media.MediaMetadataRetriever#METADATA_KEY_DATE":"android.media.mediametadataretriever＃metadata_key_date\r\n","Configuration for capturing audio played by other apps.":"用于捕获其他应用程序播放的音频的配置。\r\n","Playback is stopped and can be restarted.":"播放被停止，可以重新启动。\r\n","android.media.MediaDrm.getKeyRequest(byte[], byte[], java.lang.String, int, java.util.HashMap)":"android.media.mediadrm.getKeyRequest（byte []，byte []，java.lang.string，int，java.util.hashmap）\r\n","android.media.MediaFormat.KEY_CHANNEL_MASK":"android.media.mediaformat.key_channel_mask\r\n","android.hardware.camera2.CaptureRequest.COLOR_CORRECTION_GAINS":"android.hardware.camera2.capturerequest.color_correction_gains\r\n","android.hardware.camera2.CaptureResult.CONTROL_AE_MODE":"android.hardware.camera2.captureresult.control_ae_mode\r\n","android.media.MediaDescrambler.MediaDescrambler(int)":"android.media.mediadescrambler.mediadescrambler（int）\r\n","MediaTimestamp":"中型\r\n","Returns the session number of the recording, see ":"返回录制的会话号，请参阅\r\n","android.media.MediaFormat.COLOR_STANDARD_BT601_NTSC":"android.media.mediaformat.color_standard_bt601_ntsc\r\n","Retrieve the Executor for the CameraExtensionSession instance.":"检索执行人的摄影机实例。\r\n","android.media.MediaParser.PARAMETER_TS_IGNORE_SPLICE_INFO_STREAM":"android.media.mediaparser.parameter_ts_ignore_splice_info_stream\r\n"," to indicate that one or more audio devices have been\n            disconnected.":" 指出一个或多个音频设备已经\r\n            断开连接。\r\n","Returns the state of the AudioTrack instance.":"返回录音机实例的状态。\r\n","android.media.MediaMetadata.METADATA_KEY_TITLE":"android.media.mediametadata.metadata_key_title\r\n","Broadcast Action: sent to the target TV input after it is first installed to notify the input\n            to initialize its channels and programs to the system content provider.":"广播动作：首次安装后发送到目标电视输入以通知输入\r\n            将其渠道和程序初始化为系统内容提供商。\r\n","android.inputmethodservice.InputMethodService.onCreateInputMethodSessionInterface()":"android.inputmethodservice.inputmethodservice.oncreateinputmethodsessionsessionface（）\r\n","Dynamically sets the output surface of a codec.":"动态设置编解码器的输出表面。\r\n","Bitstream is not conforming to the related coding standard or file spec.":"Bitstream不符合相关的编码标准或文件规格。\r\n","android.media.MediaRoute2ProviderService.getSessionInfo(java.lang.String)":"android.media.mediaroute2providerservice.getSessioninfo（java.lang.string）\r\n","Gets the baseband carrier-to-noise density in dB-Hz.":"在DB-HZ中获取基带载体到噪声密度。\r\n","A SUPL-specific Mobile data connection. ":"特定于SUPL的移动数据连接。\r\n","android.hardware.biometrics.BiometricPrompt":"android.hardware.biometrics.biometricprompt\r\n","android.hardware.camera2.params.MeteringRectangle.getRect()":"android.hardware.camera2.params.meteringrectangle.getRect（）\r\n","android.hardware.camera2.params.SessionConfiguration.setSessionParameters(android.hardware.camera2.CaptureRequest)":"android.hardware.camera2.params.sessionconfiguration.setsessionparameters（android.hardware.camera2.capturerequest）\r\n","Checks whether the provided set of camera devices and their corresponding\n            ":"检查提供的相机设备集及其相应\r\n            \r\n","android.media.MicrophoneInfo.SPL_UNKNOWN":"android.media.microphoneinfo.spl_unknown\r\n","Gets the clock's Drift Uncertainty (1-Sigma) in nanoseconds per second.":"以每秒的纳秒秒为单位获得时钟的漂移不确定性（1-Sigma）。\r\n","android.media.MediaPlayer.addOnRoutingChangedListener(android.media.OnRoutingChangedListener, android.os.Handler)":"android.media.mediaplayer.addonroutingchangedlistener（android.media.onroutingchangedlistener，android.os.handler）\r\n","Read a DRM engine plugin String property value, given the property name string.":"给定属性名称字符串，读取DRM引擎插件字符串属性值。\r\n","android.hardware.camera2.CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_ULTRA_HIGH_RESOLUTION_SENSOR ":"android.hardware.camera2.camerametadata＃request_available_capabilities_ultra_high_resolution_sensor\r\n","CDMA MED SSL tone: {2600Hz 25ms, 2900Hz 25ms} 8 times,\n 200ms OFF, {2600Hz 25ms, 2900Hz 25ms} repeat 8 times,\n 200ms OFF, {2600Hz 25ms, 2900Hz 25ms} repeat 16 times,\n 4000ms OFF, repeat ...":"CDMA MED SSL音调：{2600Hz 25ms，2900Hz 25ms} 8次，\r\n 200ms关闭，{2600Hz 25ms，2900Hz 25ms}重复8次，\r\n 200ms关闭，{2600Hz 25ms，2900Hz 25ms}重复16次，\r\n 4000毫米，重复...\r\n","android.hardware.camera2.CameraCharacteristics.LENS_INFO_AVAILABLE_APERTURES":"android.hardware.camera2.cameracharacteristics.lens_info_available_apertures\r\n","CDMA LOW PBX SS tone: {1300Hz 25ms, 1450Hz 25ms} 8 times\n 200 ms OFF, {1300Hz 25ms 1450Hz 25ms}8 times,\n 2000ms OFF, REPEAT....":"CDMA低PBX SS音调：{1300Hz 25ms，1450Hz 25ms} 8次\r\n 200毫秒关闭，{1300Hz 25ms 1450Hz 25ms} 8次，\r\n 2000毫秒左右，重复...\r\n","Sets the sync source.":"设置同步源。\r\n","Retrieves the input stream for this instance.":"检索此实例的输入流。\r\n","2 x M x 3":"2 x m x 3\r\n","Limited range.":"范围有限。\r\n","android.media.audiofx.Visualizer.ERROR_NO_MEMORY":"android.media.audiofx.Visualizer.Error_no_memory\r\n","AudioPresentation#MASTERED_FOR_3D":"听力贷款＃MASTERED_FOR_3D\r\n","Playback is buffering in the foreground for initial playback start":"播放正在前景中缓冲以进行初始播放开始\r\n","TrackInfo#MEDIA_TRACK_TYPE_VIDEO":"TrackInfo＃Media_track_type_video\r\n","Decay time. ":"衰减时间。\r\n","android.net.LocalSocket.LocalSocket()":"android.net.localsocket.localsocket（）\r\n","Constructor for creating a command predefined in AndroidX media2.":"用于创建Androidx Media2中预定义命令的构造函数。\r\n","android.hardware.Sensor#TYPE_ACCELEROMETER\n                   TYPE_ACCELEROMETER":"android.hardware.sensor＃type_accelerometer\r\n                   type_accelerometer\r\n","android.media.AudioFocusRequest.willPauseWhenDucked()":"android.media.audiofocusrequest.willpausewhenducked（）\r\n","android.media.metrics.Event":"android.media.metrics.event\r\n","android.media.ExifInterface.TAG_SHARPNESS":"android.media.exifinterface.tag_sharpness\r\n","Returns the value of a numeric key, or the default value if the key is missing.":"返回数字键的值，如果丢失了键，则返回默认值。\r\n","android.media.tv.TvContract.EXTRA_CHANNEL_ID":"android.media.tv.tvcontract.extra_channel_id\r\n","AudioManager provides access to volume and ringer mode control.":"听众提供了对音量和铃声模式控制的访问。\r\n","android.media.audiofx.AutomaticGainControl.isAvailable()":"android.media.audiofx.automaticgaincontrol.isavailable（）\r\n","Secure stops are a way to enforce limits on the number of concurrent\n            streams per subscriber across devices.":"安全停止是强制执行并发数量限制的方法\r\n            跨设备的每个订户流式传输。\r\n","android.media.MediaParser.getParserNames(android.media.MediaFormat)":"android.media.mediaparser.getParsernames（android.media.mediaformat）\r\n","Boot subclass for HID devices.":"HID设备的引导子类。\r\n","A key describing the closed caption service number.":"描述封闭字幕服务编号的键。\r\n","Wi-Fi network":"Wi-Fi网络\r\n","Denotes a failure due to the improper use of a method.":"表示由于方​​法不当而导致故障。\r\n","Retrieves the Hardware A/V synchronization ID corresponding to the given audio session ID.":"检索与给定音频会话ID相对应的硬件A/V同步ID。\r\n","USB class indicating that the class is determined on a per-interface basis.":"USB类表明该类是按界面确定的。\r\n","Sets the flags for the media transport control buttons that this client supports.":"设置该客户端支持的媒体传输控制按钮的标志。\r\n","Band for a given frequency. ":"带有给定频率的频段。\r\n","Returns the encoded data for the subtitle content.":"返回字幕内容的编码数据。\r\n","Operational mode for hot pixel correction.":"热像素校正的操作模式。\r\n","#getDriftNanosPerSecond()":"#getdriftnanospersecond（）\r\n","Sets whether the ID3 track should be disabled for MP3.":"设置是否应禁用MP3 ID3轨道。\r\n","android.inputmethodservice.AbstractInputMethodService.onGenericMotionEvent(android.view.MotionEvent)":"android.inputmethodservice.abstractinputmethodservice.ongenericmotionevent（android.view.motionevent）\r\n","CameraDevice CameraDevices":"CameradeVice CameradeVices\r\n","android.location.GnssStatus.CONSTELLATION_BEIDOU":"android.location.gnssstatus.constellation_beidou\r\n","Register a callback to be invoked when the end of a media source\n            has been reached during playback.":"注册媒体源结束时调用的回调\r\n            在播放期间已达到。\r\n","If you are done with a buffer, use this call to update its surface timestamp\n            and return it to the codec to render it on the output surface.":"如果您使用缓冲区完成，请使用此调用来更新其表面时间戳\r\n            并将其返回到编解码器以在输出表面上渲染。\r\n","CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_PRIVATE_REPROCESSING":"相机元数据#REQUEST_AVAILABLE_CAPABILITIES_PRIVATE_REPROCESSING\r\n","android.net.TrafficStats.getMobileRxBytes()":"android.net.trafficstats.getmobilerxbytes（）\r\n","Gets the description for the prompt, as set by ":"获取提示的描述，如\r\n","High speed ( >= 100fps) quality level corresponding to the 4K-DCI (4096 x 2160)":"高速（> = 100fps）质量水平与4K-DCI相对应（4096 x 2160）\r\n","android.hardware.SensorManager.requestTriggerSensor(android.hardware.TriggerEventListener, android.hardware.Sensor)":"机器人。硬件。SensorManager。requestTriggerSensor（android的。硬件。TriggerEventListener,android的.硬件。传感器）\r\n","android.media.metrics.PlaybackMetrics.STREAM_TYPE_DASH":"android.media.metrics.playbackmetrics.stream_type_dash\r\n","Loads the user-displayed label for this TV input.":"为该电视输入加载用户播放的标签。\r\n","android.hardware.lights.Light.LIGHT_TYPE_PLAYER_ID":"android.hardware.lights.light.light_type_player_id\r\n","CDMA MED SS2 tone: {2600Hz 25ms, 2900Hz 25ms} 20 times,\n 1000ms OFF, {2600Hz 25ms, 2900Hz 25ms} 20 times,\n 3000ms OFF, repeat ....":"CDMA MED SS2音调：{2600Hz 25ms，2900Hz 25ms} 20次，\r\n 1000ms关闭，{2600Hz 25ms，2900Hz 25ms} 20次，\r\n 3000毫秒左右，重复...\r\n","The OnControlStatusChangeListener interface defines a method called by the AudioEffect\n when a the control of the effect engine is gained or lost by the application\n":"OnControlStatuschangelistener界面定义了AudioFect调用的方法\r\n 当应用程序获得或丢失效应引擎的控制时\r\n\r\n","The minimum confidence factor of good face recognition ":"良好的面部识别的最低信心因素\r\n","android.media.tv.TvContract.buildChannelsUriForInput(java.lang.String)":"android.media.tv.tvcontract.buildchannelsuriforinput（java.lang.string）\r\n","android.media.MediaCas.setEventListener(android.media.EventListener, android.os.Handler)":"android.media.mediacas.seteventlistener（android.media.eventlistener，android.os.handler）\r\n","android.net.UrlQuerySanitizer.setUnregisteredParameterValueSanitizer(android.net.ValueSanitizer)":"android.net.urlquerysanitizer.setunregisteredParameTervaluesanitizer（android.net.valuesanitizer）\r\n","Returns true if the audio returned to the client is currently being silenced by the\n            audio framework due to concurrent capture policy (e.":"如果音频返回到客户端，则返回true\r\n            由于并发捕获策略，音频框架（e。\r\n","Returns a constant indicating the desired vertical accuracy (altitude). -or- Indicates the desired vertical accuracy (altitude).":"返回一个常数，表示所需的垂直精度（高度）。 - 或指示所需的垂直精度（高度）。\r\n","Builder#setUsage(int)":"构建器＃setusage（int）\r\n","Loads a .":"加载a。\r\n","android.net.NetworkSpecifier":"android.net.networkspecifier\r\n","android.media.MediaMetadataEditor.removeEditableKeys()":"android.media.mediametadataeditor.removeeditablekeys（）\r\n","Gets the interface name for this link.":"获取此链接的接口名称。\r\n","android.location.LocationManager.sendExtraCommand(java.lang.String, java.lang.String, android.os.Bundle)":"android.location.LocationManager.SendExtracommand（java.lang.string，java.lang.string，android.os.bundle）\r\n","Get current activation state of the visualizer.":"获取可视化器的当前激活状态。\r\n","Reports the current coarse-grained state of the network.":"报告网络当前的粗粒状态。\r\n","android.mtp.MtpDevice.getObject(int, int)":"android.mtp.mtpdevice.getObject（int，int）\r\n","A configured capture session for a ":"一个配置的捕获会话\r\n","android.media.MediaFormat.KEY_AAC_SBR_MODE":"android.media.mediaformat.key_aac_sbr_mode\r\n","android.net.TrafficStats.getUidTcpTxBytes(int)":"android.net.trafficstats.getuidtcptxbytes（int）\r\n","android.location.Criteria.Criteria(android.location.Criteria)":"android.location.Criteria.Criteria（Android.Location.Criteria）\r\n"," if the tag is not contained.":" 如果标签不包含。\r\n","No preferred reproduction channel layout.":"没有首选的繁殖通道布局。\r\n","Returns the output format for a specific output buffer.":"返回特定输出缓冲区的输出格式。\r\n","android.hardware.display.DisplayManager.createVirtualDisplay(java.lang.String, int, int, int, android.view.Surface, int)":"android.hardware.display.displaymanager.createvirtualdisplay（java.lang.string，int，int，int，int，int，android.view.surface，int）\r\n",";\n            also includes the minimum frame durations\n            and the stall durations for each format/size combination.":";\r\n            还包括最小框架持续时间\r\n            以及每种格式/尺寸组合的失速持续时间。\r\n","android.location.GnssMeasurement.hasSatelliteInterSignalBiasNanos()":"android.location.gnssmeasurement.hassatelliteintersignalbiasnanos（）\r\n","Class that operates consumer infrared on the device.":"在设备上运行消费者红外线的类。\r\n","android.inputmethodservice.InputMethodService.onStartInputView(android.view.inputmethod.EditorInfo, boolean)":"android.inputmethodservice.inputmethodservice.onstartinputview（android.view.inputmethod.editorinfo，boolean）\r\n","Operation code for TerminateOpenCapture":"终端操作代码\r\n","android.hardware.camera2.CameraCharacteristics.CONTROL_ZOOM_RATIO_RANGE":"机器人。硬件。相机2。CameraCharacteristics.控制_ZOOM_RATIO_RANGE\r\n","android.media.ExifInterface.TAG_RW2_SENSOR_RIGHT_BORDER":"android.media.exifinterface.tag_rw2_sensor_right_border\r\n","Operates the same as ":"操作与\r\n","Does nothing.":"什么也没做。\r\n","CasInfo":"赌场\r\n","Create a new ImageWriter with given number of max Images and format.":"使用给定数量的最大图像和格式创建一个新的ImageWriter。\r\n","If this is a sticky key, is it on? ":"如果这是一个粘键，它是否打开？\r\n","F:Android.Media.Rating.NewStarRating":"F：android.media.rating.newstarrating\r\n","android.media.metrics.PlaybackStateEvent.STATE_JOINING_BACKGROUND":"android.media.metrics.playbackstateevent.state_joining_background\r\n","Check whether the light has led brightness control.":"检查灯是否已导致亮度控制。\r\n","android.hardware.usb.UsbEndpoint.getAddress()":"android.hardware.usb.usbendpoint.getAddress（）\r\n","The desired mode for for the camera device's flash control.":"相机设备的闪存控制的所需模式。\r\n",", calling\n            ":"，打电话\r\n            \r\n","android.media.MediaFormat.MIMETYPE_TEXT_VTT":"android.media.mediaformat.mimetype_text_vtt\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_ACTIVE_ARRAY_SIZE":"android.hardware.camera2.cameracharacteristics.sensor_info_active_array_size\r\n","Writes the audio data to the audio sink for playback (streaming mode),\n            or copies audio data for later playback (static buffer mode).":"将音频数据写入音频接收器以进行播放（流模式），\r\n            或复制音频数据以进行以后的播放（静态缓冲区模式）。\r\n","android.media.SubtitleData.getTrackIndex()":"android.media.subtitledata.getTrackIndex（）\r\n","android.media.effect.EffectFactory.EFFECT_CROSSPROCESS":"android.media.effect.effectfactory.effect_crossprocess\r\n","Sets the value of an integer key.":"设置整数键的值。\r\n","The time in nanoseconds at which the event happened.":"活动发生的纳秒秒的时间。\r\n","CaptureRequest#CONTROL_EXTENDED_SCENE_MODE android.control.extendedSceneMode":"capturerequest＃control_extended_scene_mode android.control.extendendedSceneMode\r\n","SBAS message contained in the structure.":"结构中包含的SBAS消息。\r\n","android.hardware.SensorManager.GRAVITY_MOON":"android.hardware.sensormanager.gravity_moon\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_WHITE_LEVEL":"android.hardware.camera2.cameracharacteristics.sensor_info_white_level\r\n","Create a session cache using the specified directory.":"使用指定目录创建会话缓存。\r\n","android.media.metrics.TrackChangeEvent.TRACK_TYPE_AUDIO":"android.media.metrics.trackchangeevent.track_type_audio\r\n","android.hardware.camera2.CaptureResult.COLOR_CORRECTION_ABERRATION_MODE":"android.hardware.camera2.captureresult.color_correction_aberration_mode\r\n","Get the estimated vertical accuracy of this location, in meters. -or- Set the estimated vertical accuracy of this location, meters.":"以米为单位获得此位置的估计垂直精度。 - 或设置该位置的估计垂直精度，米。\r\n","Clock monotonic or its equivalent on the system,\n            in the same units and timebase as ":"时钟单调或在系统上等效，\r\n            在同一单元和时间键中\r\n","android.hardware.camera2.CaptureResult.SENSOR_DYNAMIC_WHITE_LEVEL":"android.hardware.camera2.captureresult.sensor_dynamic_white_level\r\n","android.media.MediaPlayer.create(android.content.Context, android.net.Uri, android.view.SurfaceHolder)":"android.media.mediaplayer.create（android.content.context，android.net.uri，android.view.surface.surfaceholder）\r\n","#acquireNextImage":"#acquirenextimage\r\n","if format is null.":"如果格式为null。\r\n","Gets the supported preview sizes.":"获取支持的预览尺寸。\r\n","android.media.audiofx.Equalizer.usePreset(short)":"android.media.audiofx.equalizer.usepreset（简称）\r\n","Returns the value of a ByteBuffer key.":"返回字节键键的值。\r\n","android.location.Address.getPhone()":"android.location.address.getPhone（）\r\n","android.media.AudioTrack.getAudioAttributes()":"android.media.audiotrack.getaudioattributes（）\r\n","Quality level corresponding to the highest available resolution.":"质量水平对应于最高可用分辨率。\r\n","android.hardware.usb.UsbConstants.USB_TYPE_RESERVED":"android.hardware.usb.usbconstants.usb_type_reverved\r\n","android.location.GnssNavigationMessage.TYPE_SBS":"android.location.gnssnavigationmessage.type_sbs\r\n","Convenience method to create a ":"创建一个方便方法\r\n","android.media.audiofx.AudioEffect.EFFECT_INSERT":"android.media.audiofx.audioeffect.effect_insert\r\n","if a column or row given is negative.\n":"如果给定的列或行为负。\r\n\r\n","The audio standard is not specified.":"音频标准未指定。\r\n","Get the longitude, in degrees. -or- Set the longitude, in degrees.":"获得经度的程度。 - 或设置经度，以度数度。\r\n","android.media.MediaFormat.setString(java.lang.String, java.lang.String)":"android.media.mediaformat.setstring（java.lang.string，java.lang.string）\r\n","Value used for when the group of the microphone is unknown.":"当麦克风的组未知时使用的值。\r\n"," which has been previously added\n            to receive codec format change events.":" 以前已添加\r\n            接收编解码格式更改事件。\r\n","android.media.metrics.PlaybackMetrics.PLAYBACK_TYPE_OTHER":"android.media.metrics.playbackmetrics.playback_type_other\r\n","Whether extended scene mode is enabled for a particular capture request.":"是否启用了特定捕获请求的扩展场景模式。\r\n","java.util.Set Set":"java.util.set集\r\n","Sets the value of a float key.":"设置浮子键的值。\r\n","android.media.tv.TvInputInfo.createSetupIntent()":"android.media.tv.tvinputinfo.createsetupintent（）\r\n","android.hardware.camera2.CaptureRequest.CONTROL_MODE":"android.hardware.camera2.capturerequest.control_mode\r\n","if too many images are currently acquired\n":"如果目前获取太多图像\r\n\r\n","android.media.MediaExtractor.getMetrics()":"android.media.mediaextractor.getMetrics（）\r\n","android.media.MediaMetadataRetriever.setDataSource(java.io.FileDescriptor, long, long)":"android.media.mediametadataretriever.setdatasource（java.io.filedscriptor，long，long）\r\n","android.location.LocationProvider.hasMonetaryCost()":"android.location.locationprovider.hasmonetarycost（）\r\n","\n            except that the device will choose the actual ":"\r\n            除了设备将选择实际\r\n","android.media.AudioPlaybackCaptureConfiguration.getExcludeUsages()":"android.media.audioplaybackcaptureconfiguration.getExcludeUsages（）\r\n","android.media.MediaRouter.getRouteAt(int)":"android.media.mediarouter.getRouteat（int）\r\n","android.media.MediaFormat.KEY_PIXEL_ASPECT_RATIO_HEIGHT":"android.media.mediaformat.key_pixel_aspect_ratio_height\r\n","Haptic Generator(HG).":"触觉发生器（HG）。\r\n","Asynchronously returns a single current location fix from the given provider based on the\n            given ":"异步返回基于给定提供商的单个当前位置修复\r\n            给出\r\n","android.media.MediaCodec.queueInputBuffer(int, int, int, long, int)":"android.media.mediacodec.queueInputbuffer（int，int，int，long，int）\r\n","android.media.AudioRecord.getTimestamp(android.media.AudioTimestamp, int)":"android.media.audiorecord.getTimestamp（android.media.audiotimestamp，int）\r\n"," identifying the current routing of this MediaRecorder\n            Note: The query is only valid if the MediaRecorder is currently recording.":" 识别此Mediarecorder的当前路由\r\n            注意：仅当Mediarecorder当前录制时，查询才有效。\r\n","android.hardware.camera2.params.StreamConfigurationMap.isOutputSupportedFor(java.lang.Class)":"android.hardware.camera2.params.streamconfigurationmap.isoutputsupported（java.lang.class）\r\n","android.hardware.camera2.CameraMetadata.LENS_POSE_REFERENCE_UNDEFINED":"android.hardware.camera2.camerametadata.lens_pose_reference_undefined\r\n","A quality constant indicating a location provider may choose to satisfy this request by\n            providing very accurate locations at the expense of potentially increased power usage.":"质量常数，表明位置提供商可以选择满足此请求\r\n            提供非常准确的位置，牺牲了可能增加的功率使用情况。\r\n","T:Android.InputMethodServices.AbstractInputMethodService+AbstractInputMethodImpl":"t：android.inputmethodservices.abstractinputmethodservice+AbstractInputmethodimpl\r\n","Audio data format: PCM 24 bit per sample packed as 3 bytes.":"音频数据格式：PCM每样本包装为3个字节24位。\r\n","if it is called after setOutputFormat()":"如果在setOutputformat（）之后调用\r\n","This method starts the playback of a tone of the specified type for the specified duration.":"此方法启动了指定持续时间的指定类型音调的播放。\r\n","android.media.AudioManager.isMicrophoneMute()":"android.media.audiomanager.ismicrophonemute（）\r\n","android.net.VpnService.SERVICE_INTERFACE":"android.net.vpnservice.service_interface\r\n","The default playback type, \"local\", indicating the presentation of the media is happening\n on the same device (e.g. a phone, a tablet) as where it is controlled from.":"默认播放类型“ local”，表明正在发生媒体的呈现\r\n 在同一设备（例如手机，平板电脑）上，它的控制位置。\r\n","Returns the value of a long key, or the default value if the key is missing.":"返回长密钥的值，如果丢失了键，则返回默认值。\r\n","The authority for the TV provider.":"电视提供商的权威。\r\n","android.media.AudioProfile":"android.media.audioprofile\r\n","The metadata key to retrieve the numeric string describing the\n order of the audio data source on its original recording.":"检索描述数字字符串的元数据键\r\n 原始记录上的音频数据源的顺序。\r\n","Returns the elevation of the satellite in degrees.":"返回卫星的高度。\r\n","Returns the flags of this ":"返回旗帜\r\n","android.media.ImageWriter.newInstance(android.view.Surface, int, int)":"android.media.imagewriter.newinstance（android.view.surface，int，int）\r\n","android.media.SoundPool.load(android.content.Context, int, int)":"android.media.soundpool.load（android.content.context，int，int）\r\n","Error code for other player errors":"其他播放器错误的错误代码\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_DECODING_OTHER":"android.media.metrics.playbackerrorevent.error_decoding_other\r\n","android.media.browse.MediaBrowser.MediaBrowser(android.content.Context, android.content.ComponentName, android.media.browse.ConnectionCallback, android.os.Bundle)":"android.media.browse.mediabrowser.mediabrowser（android.content.context，android.content.componentname，android.media.media.browse.connection.connectioncallback，android.os.os.bundle）\r\n","android.media.tv.TvContract.isRecordedProgramUri(android.net.Uri)":"android.media.tv.tvcontract.isrecordedprogramuri（android.net.uri）\r\n"," currently tracked by the\n framework.":" 目前由\r\n 框架。\r\n","Associate a MediaDrm session with this MediaCrypto instance.":"将MediaDRM会话与此MediaCrypto实例相关联。\r\n","Representation of photo using only two color tones.":"仅使用两个彩色音调表示照片。\r\n","android.mtp.MtpConstants.OPERATION_POWER_DOWN":"android.mtp.mtpconstants.operation_power_down\r\n","Returns true if the caller has permission to access the device.":"如果呼叫者有权访问设备，则返回true。\r\n","Returns the sub-thoroughfare name of the address, which may be null. -or- Sets the sub-thoroughfare name of the address, which may be null.":"返回地址的子thoroughfare名称，这可能为null。 - 或设置地址的子thoroughfare名称，可能为null。\r\n","android.location.Criteria.setBearingAccuracy(int)":"Android.Location.Criteria.setBearionAccuracy（INT）\r\n","android.media.MediaCodec#queueSecureInputBuffer":"android.media.mediacodec＃queuesecureInputbuffer\r\n","android.hardware.usb.UsbDeviceConnection.claimInterface(android.hardware.usb.UsbInterface, boolean)":"android.hardware.usb.usbdeviceconnection.claiminterface（android.hardware.usb.usbinterface，boolean）\r\n","CDMA Intercept tone: 440Hz 250ms ON, 620Hz 250ms ON ...":"CDMA拦截音：440Hz 250ms on，620Hz 250ms on ...\r\n","A class for producing sounds that match those produced by various actions\n            taken by the media and camera APIs.":"一种用于制作声音的课程，与各种动作产生的声音相匹配\r\n            由媒体和相机API拍摄。\r\n","Called to indicate an error.":"叫指示错误。\r\n","android.media.AudioRouting.setPreferredDevice(android.media.AudioDeviceInfo)":"android.media.audiorouting.setpreferreddevice（android.media.audiodeviceinfo）\r\n","android.hardware.location.GeofenceHardware.GEOFENCE_ERROR_TOO_MANY_GEOFENCES":"android.hardware.location.geofencehardware.geofence_error_too_many_geofeness\r\n","android.media.VolumeProvider.setCurrentVolume(int)":"android.media.volumeprovider.setcurrentvolume（int）\r\n","Range of boosts for ":"提升范围 \r\n","Tests for the presence of a transport on this instance.":"测试在这种情况下是否存在运输。\r\n","android.media.session.PlaybackState.getErrorMessage()":"android.media.session.playbackstate.geterrormessage（）\r\n","Maximum number of images that can be acquired from the ImageReader by any time (for example,\n            with ":"可以随时从成像领导者获取的最大图像数（例如，\r\n            和\r\n","Get the stall duration for the class/size combination (in nanoseconds).":"获取班级/大小组合的失速持续时间（以纳秒为单位）。\r\n","An Equalizer is used to alter the frequency response of a particular music source or of the main\n            output mix.":"均衡器用于更改特定音乐源或主的频率响应\r\n            输出组合。\r\n","Returns true if the object is abstract (that is, it has no representation\n            in the underlying file system).":"如果对象是抽象的，则返回true（也就是说，它没有表示\r\n            在基础文件系统中）。\r\n"," tonemap curve of floats.":" 浮子的tonemap曲线。\r\n","android.hardware.location.GeofenceHardware.MONITORING_TYPE_GPS_HARDWARE":"android.hardware.location.geofencehardware.monitoring_type_gps_hardware\r\n","Position of the camera optical center.":"相机光学中心的位置。\r\n","android.media.MediaDrm.getMaxSessionCount()":"android.media.mediadrm.getmaxsessioncount（）\r\n","The metadata key to retrieve the information of the writer (such as\n            lyricist) of the data source.":"检索作者信息的元数据键（例如\r\n            数据源的作词人）。\r\n","android.media.VolumeShaper.replace(android.media.Configuration, android.media.Operation, boolean)":"android.media.volumeshaper.replace（android.media.configuration，android.media.Media.Media，Operation，boolean）\r\n","android.media.MediaDrm.EVENT_VENDOR_DEFINED":"android.media.mediadrm.event_vendor_defined\r\n","android.media.ExifInterface.TAG_USER_COMMENT":"android.media.exifinterface.tag_user_comment\r\n","String containing the ID of the underlying active physical camera.":"字符串包含基础活动物理摄像头的ID。\r\n","Parser for the TS container format, as defined in ISO/IEC 13818-1.":"TS容器格式​​的解析器，如ISO/IEC 13818-1所定义。\r\n","Device-specific extension implementation that aims to suppress noise and improve the\n            overall image quality under low light conditions.":"设备特定的扩展实现，旨在抑制噪声并改善\r\n            在低光条件下的整体图像质量。\r\n","android.media.VolumeProvider":"android.media.volumeprovider\r\n","android.hardware.input.InputManager.getInputDevice(int)":"android.hardware.input.inputmanager.getInputDevice（int）\r\n","Event code for CAPTURE_COMPLETE event":"capture_complete事件的事件代码\r\n","android.media.tv.TvInputManager.VIDEO_UNAVAILABLE_REASON_CAS_UNKNOWN":"android.media.tv.tvinputmanager.video_unavailable_reason_cas_unknown\r\n"," if the track is an audio description intended for people with visual\n            impairment, ":" 如果曲目是针对视觉的人的音频描述\r\n            损害，\r\n","The new vibrate setting for a particular type.":"特定类型的新振动设置。\r\n","BT.":"Bt。\r\n","android.net.MailTo.getSubject()":"android.net.mailto.getSubject（）\r\n","android.inputmethodservice.InputMethodService.getCandidatesHiddenVisibility()":"android.inputmethodservice.inputmethodservice.getCandidatesHdidenVisibility（）\r\n","Normal audio mode: not ringing and no call established.":"正常音频模式：不响声，没有建立呼叫。\r\n","IP traffic is suspended ":"IP流量被暂停\r\n","This method is called when the application would like to stop\n            receiving text input.":"当应用程序要停止时调用此方法\r\n            接收文本输入。\r\n","android.hardware.camera2.CameraCharacteristics.CONTROL_AVAILABLE_SCENE_MODES":"机器人。硬件。相机2。CameraCharacteristics.控制_AVAILABLE_SCENE_MODES\r\n","Returns all the ":"返回所有\r\n","Returns the media time at which the subtitle should be displayed, expressed in microseconds.":"返回应在微秒中表达字幕的媒体时间。\r\n","Associates all the metadata that has been set since the MetadataEditor instance was\n     created with ":"自从元数据eDitor实例以来已设置的所有元数据\r\n     创建\r\n","Call it when one is done with the object.":"使用对象完成时称其为调用。\r\n","Returns the value of a string key, or the default value if the key is missing.":"返回字符串键的值，如果丢失了键，则返回默认值。\r\n","#TONE_CDMA_HIGH_PBX_SSL":"#TONE_CDMA_HIGH_PBX_SSL\r\n","Checks whether a particular ":"检查是否特定\r\n","android.media.effect.EffectFactory.EFFECT_SATURATE":"android.media.effect.effectfactory.effect_saturate\r\n","android.media.audiofx.AudioEffect.ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION":"android.media.audiofx.audioeffect.action_open_audio_effect_control_session\r\n"," family of functions.":"功能家族。\r\n","android.hardware.camera2.CameraMetadata.SENSOR_PIXEL_MODE_DEFAULT":"android.hardware.camera2.camerametadata.sensor_pixel_mode_default\r\n","Error code for a chosen DRM protection scheme not being supported by the device":"设备不支持所选DRM保护方案的错误代码\r\n","android.media.ApplicationMediaCapabilities.createFromXml(org.xmlpull.v1.XmlPullParser)":"android.media.applicationMediacapabilities.createfromxml（org.xmlpull.v1.xmlpullparser）\r\n","if the calling thread has no Looper":"如果通话线没有循环器\r\n","android.hardware.camera2.params.SessionConfiguration":"android.hardware.camera2.params.sessionconfiguration\r\n","android.hardware.camera2.CameraDevice":"android.hardware.camera2.cameradevice\r\n","android.hardware.SensorAdditionalInfo SensorAdditionalInfo":"android.hardware.sensoradditionalinfo sensorAdditionAlinfo\r\n","NetworkInfo":"NetworkInfo\r\n","android.hardware.input.InputManager.ACTION_QUERY_KEYBOARD_LAYOUTS":"android.hardware.input.inputmanager.action_query_keyboard_layouts\r\n","android.media.MediaPlayer.setOnDrmConfigHelper(android.media.OnDrmConfigHelper)":"android.media.mediaplayer.setondrmconfighelper（android.media.ondrmconfighelper）\r\n","Register a callback to be notified of audio playback changes through\n            ":"注册回调，以通知通过\r\n            \r\n","android.mtp.MtpObjectInfo.getImagePixHeightLong()":"android.mtp.mtpobjectInfo.getImagePixheightlong（）\r\n","android.media.MediaPlayer.removeOnRoutingChangedListener(android.media.OnRoutingChangedListener)":"android.media.mediaplayer.removeonRoutingChangedListener（android.media.onroutingchangedlistener）\r\n","android.hardware.camera2.CaptureRequest.LENS_APERTURE":"android.hardware.camera2.capturerequest.lens_aperture\r\n","android.location.LocationManager.getGnssHardwareModelName()":"android.location.locationmanager.getgnsshardwaremodelname（）\r\n","android.media.audiofx.AudioEffect.EFFECT_TYPE_VIRTUALIZER":"android.media.audiofx.audioeffect.effect_type_virtualizer\r\n","android.media.tv.TvView.setCallback(android.media.tv.TvInputCallback)":"android.media.tv.tv.tview.setCallback（android.media.tv.tvinputCallback）\r\n"," for interacting with this session.":" 用于与此会话互动。\r\n","Indicates this is a network that has the ability to reach the carrier's\n DUN or tethering gateway.":"表明这是一个能够到达运营商的网络\r\n 邓恩或绑扎门户。\r\n","android.media.DeniedByServerException":"android.media.deniedbyserverexception\r\n","android.mtp.MtpEvent.getStorageId()":"android.mtp.mtpevent.getStorageid（）\r\n","Show the input method's soft input area, so the user sees the input method window and can\n            interact with it.":"显示输入方法的软输入区域，因此用户看到输入方法窗口，可以\r\n            与之互动。\r\n","android.media.AudioTrack.write(java.nio.ByteBuffer, int, int)":"android.media.audiotrack.write（java.nio.Bytebuffer，int，int）\r\n","List of JPEG thumbnail sizes for ":"JPEG缩略图尺寸列表 \r\n","The type of folder that contains folders categorized by album as specified in the section\n            6.":"包含专辑分类的文件夹的类型，如本节中指定\r\n            6。\r\n","android.hardware.camera2.CameraCharacteristics.CONTROL_MAX_REGIONS_AE":"机器人。硬件。相机2。CameraCharacteristics.控制_MAX_区域_AE\r\n","Returns a Uri for an icon suitable for display or null.":"返回适用于显示或空的图标的URI。\r\n","android.media.ExifInterface.TAG_ORF_PREVIEW_IMAGE_START":"android.media.exifinterface.tag_orf_preview_image_start\r\n","RemoteControlClient":"RemoteControlclient\r\n","android.media.audiofx.Equalizer.setBandLevel(short, short)":"android.media.audiofx.equalizer.SetBandlevel（短，短）\r\n","Tints the photo with specified color.":"用指定的颜色将照片色调。\r\n","RggbChannelVector#COUNT":"RGGBCHANNELVECTOR＃计数\r\n","android.hardware.SensorEvent#values values":"android.hardware.sensorevent＃值值\r\n","android.net.TrafficStats.getTotalTxBytes()":"android.net.trafficstats.getTotalTxBytes（）\r\n","Get a list of supported high speed video recording FPS ranges.":"获取支持的高速视频录制FPS范围的列表。\r\n","Activity action to set up channel sources i.":"设置频道资源的活动行动i。\r\n","Get the current state of video stabilization.":"获取视频稳定的当前状态。\r\n","Returns the current active audio recording for this audio recorder.":"返回此音频录音机的当前活动音频录制。\r\n","android.media.session.PlaybackState.ACTION_SET_PLAYBACK_SPEED":"android.media.session.playbackstate.action_set_set_playback_speed\r\n","android.media.MediaRouter.removeCallback(android.media.Callback)":"android.media.mediarouter.removecallback（android.media.callback）\r\n","android.location.LocationProvider.requiresSatellite()":"android.location.locationprovider.requireressatellite（）\r\n","android.media.effect.EffectContext.release()":"android.media.effect.effectContext.Release（）\r\n","Determines if explicit user confirmation is required by the prompt, as set by\n            ":"确定提示是否需要明确的用户确认\r\n            \r\n","android.location.Geocoder.isPresent()":"android.location.geocoder.ispresent（）\r\n","android.media.MediaDrm.HDCP_V2":"android.media.mediadrm.hdcp_v2\r\n","True if this location has an altitude.":"如果此位置具有高度，则为诚然。\r\n","Get whether or not unregistered parameters are allowed. -or- Set whether or not unregistered parameters are allowed.":"获取是否允许未注册的参数。 - 或设置是否允许未注册的参数。\r\n","Returns if the currently active data network is metered.":"如果当前活动的数据网络被计量，则返回。\r\n","#SECURITY_LEVEL_SW_SECURE_CRYPTO":"#security_level_sw_secure_crypto\r\n","Releases the native Visualizer resources.":"释放本地可视化器资源。\r\n","android.media.MediaRouter2.getController(java.lang.String)":"android.media.mediarouter2.getController（java.lang.string）\r\n","android.net.UrlQuerySanitizer.getAllButNulLegal()":"android.net.urlquerysanitizer.getAllbutnullegal（）\r\n","android.media.TimedMetaData.TimedMetaData(long, byte[])":"android.media.timedmetadata.timedmetadata（long，byte []）\r\n","CDMA MED SS tone: {2600Hz 25ms, 2900Hz 25ms} repeat 16 times,\n 400ms OFF, repeat ....":"CDMA MED SS音调：{2600Hz 25ms，2900Hz 25ms}重复16次，\r\n 400毫米，重复...\r\n","Returns a list of vendor parameter names.":"返回供应商参数名称的列表。\r\n","android.mtp.MtpEvent.getObjectPropCode()":"android.mtp.mtpevent.getObjectPropcode（）\r\n","Plays the ringtone.":"播放铃声。\r\n"," with the requested output image\n            ":" 带有请求的输出图像\r\n            \r\n","AudioManager#STREAM_VOICE_CALL":"听众＃stream_voice_call\r\n","#TONE_CDMA_CALL_SIGNAL_ISDN_INTERGROUP":"#TONE_CDMA_CALL_SIGNAL_ISDN_INTERGROUP\r\n","android.location.Location.hasBearingAccuracy()":"android.location.location.hasbearingaccuracy（）\r\n","android.media.MediaFormat.KEY_GRID_COLUMNS":"android.media.mediaformat.key_grid_columns\r\n","android.media.RingtoneManager.getRingtone(int)":"android.media.ringtonemanager.getringtone（int）\r\n","Returns the device's number of output ports.":"返回设备的输出端口数。\r\n","Removes the proximity alert with the given PendingIntent.":"用给定的悬浮仪删除接近警报。\r\n","android.media.MediaCodec.setOnFrameRenderedListener(android.media.OnFrameRenderedListener, android.os.Handler)":"android.media.mediacodec.setonframerenderedlistener（android.media.onframerenderedlistener，android.os.handler）\r\n"," is available, ":" 可用，\r\n","android.media.RemoteControlClient.FLAG_KEY_MEDIA_PLAY_PAUSE":"android.media.remotecontrolclient.flag_key_media_play_pause\r\n","Builder#excludeUsage(int)":"构建器＃ubledusage（int）\r\n","File-based cache of established SSL sessions.":"已建立的SSL会话的基于文件的缓存。\r\n","android.hardware.camera2.CaptureRequest.CONTROL_AE_ANTIBANDING_MODE":"android.hardware.camera2.capturerequest.control_ae_antibanding_mode\r\n","Retrieves the latest peak and RMS measurement.":"检索最新的峰值和RMS测量。\r\n","Returns current capture size.":"返回当前捕获大小。\r\n","android.location.LocationManager.registerGnssStatusCallback(android.location.Callback)":"android.location.locationManager.RegistergnssStatusCallback（android.location.callback）\r\n"," when time shifting has not\n            yet started.":" 当时间转移还没有\r\n            尚开始。\r\n","android.media.MediaCas#MediaCas(Context, int, String,\n            int)":"android.media.mediacas＃mediaCas（上下文，int，string，\r\n            int）\r\n","android.media.MediaCas.MediaCas(int)":"android.media.mediacas.mediacas（int）\r\n","Returns a writable Image object for a dequeued input buffer\n            index to contain the raw input video frame.":"返回脱水输入缓冲区的可写图像对象\r\n            索引包含原始输入视频框架。\r\n","android.media.tv.TvView.setTimeShiftPositionCallback(android.media.tv.TimeShiftPositionCallback)":"android.media.tv.tv.tview.settimeshiftpositionCallback（android.media.tv.timeshiftpositionCallback）\r\n","Returns the value type for a key.":"返回键的值类型。\r\n","android.media.MediaCodec.PARAMETER_KEY_HDR10_PLUS_INFO":"android.media.mediacodec.parameter_key_hdr10_plus_info\r\n","android.media.tv.TvInputManager.isParentalControlsEnabled()":"android.media.tv.tvinputmanager.isparentalcontrolsenabled（）\r\n","Query if the codec is an encoder.":"查询是否编解码器是编码器。\r\n","Session2Command":"Session2Command\r\n","Returns the current enabled/disabled status of the given provider.":"返回给定提供商的当前启用/禁用状态。\r\n","android.location.GnssMeasurement.hasSnrInDb()":"android.location.gnssmeasurement.hassnrindb（）\r\n","]":"这是给予的\r\n","The measurement shows signs of multi-path.":"测量显示了多路径的迹象。\r\n","android.media.MediaFormat.KEY_HEIGHT":"android.media.mediaformat.key_height\r\n","Builds a URI that points to a specific preview program.":"构建指向特定预览程序的URI。\r\n","android.mtp.MtpObjectInfo.getImagePixWidthLong()":"android.mtp.mtpobjectInfo.getImagePixwidThlong（）\r\n","Control video peek of the first frame when a codec is configured for tunnel mode with\n            ":"当编解码器配置为隧道模式时，第一帧的控制视频窥视\r\n            \r\n","android.media.session.PlaybackState.isActive()":"android.media.session.playbackstate.isactive（）\r\n","android.media.MediaDescription.getIconUri()":"android.media.mediadescription.geticonuri（）\r\n","#ACTION_SCO_AUDIO_STATE_UPDATED":"#action_sco_audio_state_updated\r\n","Adds image.":"添加图像。\r\n","A microphone that locate on a peripheral.":"位于外围的麦克风。\r\n","android.media.MediaCodec.BUFFER_FLAG_PARTIAL_FRAME":"android.media.mediacodec.buffer_flag_partial_frame\r\n","android.media.MediaPlayer.seekTo(long, int)":"android.media.mediaplayer.seekto（long，int）\r\n","Return Metrics data about the current player.":"返回有关当前播放器的指标数据。\r\n","This GNSS measurement's tracking state has time-of-week known, possibly not decoded\n            over the air but has been determined from other sources.":"该GNSS Measurement的跟踪状态已知一周已知，可能没有解码\r\n            在空中，但已从其他来源确定。\r\n","android.media.tv.TvContract.buildPreviewProgramsUriForChannel(android.net.Uri)":"android.media.tv.tvcontract.buildpreviewprogramsuriforchannel（android.net.uri）\r\n","android.net.Ikev2VpnProfile.isBypassable()":"android.net.ikev2vpnprofile.isbypassable（）\r\n","Returns a concrete implementation of ":"返回具体实施\r\n","android.media.MediaFormat.KEY_AAC_DRC_BOOST_FACTOR":"android.media.mediaformat.key_aac_drc_boost_factor\r\n","Bokeh effect must not slow down capture rate relative to sensor raw output,\n            and the effect is applied to all processed streams no larger than the maximum\n            streaming dimension.":"相对于传感器原始输出，散景效应不得降低捕获率，\r\n            并且该效果应用于所有处理的流，不超过最大值\r\n            流维度。\r\n","#getAvailableCaptureRequestKeys":"#getavailablecapturerequestkeys\r\n","android.net.IpSecManager.applyTransportModeTransform(java.io.FileDescriptor, int, android.net.IpSecTransform)":"android.net.ipsecmanager.applytransportmodetransform（java.io.filedscriptor，int，android.net.ipsectransform）\r\n","The mode for surround sound formats is unknown.":"环绕声格式的模式未知。\r\n","Retrieves the azimuth the satellite at the specified index.":"在指定的索引处检索方位角卫星。\r\n","Enable or disable the effect.":"启用或禁用效果。\r\n","Returns the state of a specified light.":"返回指定光的状态。\r\n","android.media.audiofx.AcousticEchoCanceler.create(int)":"android.media.audiofx.Acousticticechcanceler.create（int）\r\n","Return a Rating instance with a thumb-based rating.":"返回具有基于拇指的评分的评分实例。\r\n","Constant used to indicate we should recycle the input in\n            ":"常数用于指示我们应该回收输入\r\n            \r\n","Returns details about the currently active default data network.":"返回有关当前活动默认数据网络的详细信息。\r\n","android.media.AudioManager.ACTION_AUDIO_BECOMING_NOISY":"android.media.audiomanager.action_audio_becoming_noisy\r\n","Called by the system every time a client explicitly starts the service by calling \n ":"每当客户端通过调用客户明确启动服务时，系统调用\r\n \r\n","The constant used to indicate that the transition requested for the geofence is invalid.":"用于指示Geofence请求的过渡无效的常数。\r\n"," pixel data to a DNG file with\n            the currently configured metadata.":" 带有Pixel数据到DNG文件\r\n            当前配置的元数据。\r\n","Gets playback state.":"获得播放状态。\r\n","Adds an external timed text source file (Uri).":"添加了外部定时文本文件（URI）。\r\n","Register a callback to be notified about camera device availability.":"注册回调，以通知相机设备可用性。\r\n","android.hardware.camera2.CameraMetadata.REQUEST_AVAILABLE_CAPABILITIES_REMOSAIC_REPROCESSING":"android.hardware.camera2.camerametadata.request_available_capabilities_remosaic_reprocessing\r\n","A single complete image buffer to use with a media source such as a\n            ":"一个完整的图像缓冲区，用于与媒体源一起使用，例如\r\n            \r\n","android.hardware.camera2.params.TonemapCurve.getPointCount(int)":"android.hardware.camera2.params.tonemapcurve.getPointCount（int）\r\n","Copies the data for an object to a file in external storage.":"将对象的数据复制到外部存储中的文件。\r\n","AudioDeviceCallback":"AudioDeviceCallback\r\n","android.media.ExifInterface#ORIENTATION_FLIP_VERTICAL":"android.media.exifinterface＃orientation_flip_vertical\r\n","android.media.MediaRouter2.setOnGetControllerHintsListener(android.media.OnGetControllerHintsListener)":"android.media.mediarouter2.setongetControllerhintslistener（android.media.gongetControllerHintslistSlistener）\r\n","MultiResolutionImageReader":"多解决模拟器\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.getOutputFormats()":"android.hardware.camera2.params.RecommendedStreamConfigurationMap.getOutputFormats()\r\n","android.media.ExifInterface.TAG_GPS_STATUS":"android.media.exifinterface.tag_gps_status\r\n","android.media.AudioAttributes.getVolumeControlStream()":"android.media.audioattributes.getVolumeControlStream（）\r\n","#GEOFENCE_EXITED":"#geofence_exited\r\n"," from\n                                  a different session; or the capture targets a Surface in\n                                  the middle of being ":" 从\r\n                                  不同的会话；或捕获的靶向\r\n                                  中间\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_DRM_SYSTEM_ERROR":"android.media.metrics.playbackerrorevent.error_drm_system_error\r\n","Returns the configured channel position mask.":"返回配置的通道位置蒙版。\r\n","Returns the drawable state for the key, based on the current state and type of the key.":"根据键的当前状态和类型返回密钥的可绘制状态。\r\n","android.media.AudioManager.dispatchMediaKeyEvent(android.view.KeyEvent)":"android.media.audiomanager.dispatchmediakeyevent（android.view.keyevent）\r\n","Add a route to this group.":"向该组添加路线。\r\n","android.media.ExifInterface.TAG_STRIP_OFFSETS":"android.media.exifinterface.tag_strip_offsets\r\n","android.media.AudioManager.EXTRA_AUDIO_PLUG_STATE":"android.media.audiomanager.extra_audio_plug_state\r\n","android.media.audiofx.Equalizer.PARAM_GET_PRESET_NAME":"android.media.audiofx.equalizer.param_get_preset_name\r\n","android.media.RoutingSessionInfo.getVolumeMax()":"android.media.routingsessioninfo.getVolumeMax（）\r\n","android.media.AudioManager.SCO_AUDIO_STATE_CONNECTED":"android.media.audiomanager.sco_audio_state_connected\r\n","android.media.midi.MidiDeviceInfo.PROPERTY_USB_DEVICE":"android.media.midi.midideviceinfo.property_usb_device\r\n","Parser for the AC-4 container format, as defined by Dolby AC-4: Audio delivery for\n            Next-Generation Entertainment Services.":"AC-4集装箱格式的解析器，如Dolby AC-4的定义：\r\n            下一代娱乐服务。\r\n","\n            socket.":"\r\n            插座。\r\n","android.media.audiofx.Visualizer.getSamplingRate()":"android.media.audiofx.visualizer.getSamplingRate（）\r\n","Gets the language code of the track.":"获取曲目的语言代码。\r\n","CaptureRequest#LENS_FILTER_DENSITY android.lens.filterDensity":"captureRequest＃lens_filter_denty android.lens.filterdense\r\n","Reports the type of network to which the\n info in this ":"报告网络类型\r\n 此信息\r\n","android.net.VpnService.protect(java.net.DatagramSocket)":"android.net.vpnservice.protect（java.net.datagramsocket）\r\n","Currently tearing down data connection.":"当前拆除数据连接。\r\n","Remove the route at the specified index from this group.":"从该组中删除指定索引的路线。\r\n","android.media.AudioManager.getEncodedSurroundMode()":"android.media.audiomanager.getencodedsurroundmode（）\r\n","Maximum number of supported points in the\n            tonemap curve that can be used for ":"在\r\n            可以用于的ToneMap曲线\r\n","Error code for other Input/Output errors":"其他输入/输出错误的错误代码\r\n","android.media.metrics.TrackChangeEvent.getTrackType()":"android.media.metrics.trackchangeevent.getTrackType（）\r\n","GeofenceHardware#GEOFENCE_ERROR_ID_EXISTS":"geofencehardware＃geofence_error_id_exists\r\n"," that are supported by this\n            camera device.":" 这得到了支持\r\n            摄像装置。\r\n","android.hardware.camera2.CameraCharacteristics.SCALER_DEFAULT_SECURE_IMAGE_SIZE":"android.hardware.camera2.cameracharacteristics.scaler_default_secure_image_size\r\n","android.media.MediaCas.SCRAMBLING_MODE_DVB_CSA3_STANDARD":"android.media.mediacas.scrambling_mode_dvb_csa3_standard\r\n","Creates a virtual display.":"创建虚拟显示。\r\n","android.media.RemoteController.editMetadata()":"android.media.remotecontroller.editmetadata（）\r\n","Return the channel mask.":"返回频道面具。\r\n","android.mtp.MtpStorageInfo.getFreeSpace()":"android.mtp.mtpstorageinfo.getfreespace（）\r\n","Called when the fullscreen-mode extracting editor info has changed,\n            to determine whether the extracting (extract text and candidates) portion\n            of the UI should be shown.":"当全屏模式提取编辑器信息已更改时，请致电\r\n            确定提取（提取文本和候选）是否部分\r\n            应该显示UI的。\r\n","If a non-negative timeout had been specified in the call\n            to ":"如果在通话中指定了非负超时\r\n            至\r\n","Get the bearing, in degrees. -or- Set the bearing, in degrees.":"获得轴承的程度。 - 或设置轴承，以度数度。\r\n"," to\n            indicate still image capture.":" 至\r\n            指示静态图像捕获。\r\n","android.media.ExifInterface.getDateTimeOriginal()":"android.media.exifinterface.getDateTimeoriginal（）\r\n","Register a callback to be invoked when a seek operation has been\n            completed.":"注册一个搜索操作后要调用的回调\r\n            完全的。\r\n","android.media.AudioFormat.ENCODING_DTS_UHD":"android.media.audioformat.encoding_dts_uhd\r\n","android.media.MediaMetadataEditor.getEditableKeys()":"android.media.mediametadataeditor.getEditablekeys（）\r\n","#queueInputBuffer queueInputBuffer":"#queueInputBuffer queueInputBuffer\r\n","DRM key management, crypto operations and decoding of content are\n            performed within a hardware backed trusted execution environment.":"DRM密钥管理，加密操作和内容解码为\r\n            在硬件支持的可信执行环境中执行。\r\n","android.media.MediaController2.cancelSessionCommand(java.lang.Object)":"android.media.mediacontroller2.CancelsessessessessesseconCommand（java.lang.object）\r\n","Mutes or unmutes a single track.":"静音或单个轨道。\r\n","Called when the end of a media source is reached during playback.":"在播放期间达到媒体源的结束时，请致电。\r\n","android.hardware.camera2.CameraCharacteristics.SENSOR_OPTICAL_BLACK_REGIONS":"android.hardware.camera2.cameracharacteristics.sensor_optical_black_rigions\r\n","Enable/disable low latency decoding mode.":"启用/禁用低延迟解码模式。\r\n","The column index (in the cursor returned by ":"列索引（在光标返回的光标中\r\n","InputMethodSessionImpl":"InputMethodSessionImpl\r\n","Indicates this network uses a Bluetooth transport.":"指示此网络使用蓝牙传输。\r\n","android.hardware.location.GeofenceHardware.unregisterForMonitorStateChangeCallback(int, android.hardware.location.GeofenceHardwareMonitorCallback)":"android.hardware.location.geofencehardware.unregisterformister formonterStateChangeCallback（int，android.hardware.location.geofencehardwaremonitorcallback）\r\n","4G network":"4G网络\r\n","android.media.AudioTrack.setPositionNotificationPeriod(int)":"android.media.audiotrack.setpositionnotificationperiod（int）\r\n","Retrieves the keys flagged as editable.":"检索被标记为可编辑的键。\r\n","android.mtp.MtpEvent.EVENT_STORE_ADDED":"android.mtp.mtpevent.event_store_added\r\n","Returns a read-only Image object for a dequeued output buffer\n            index that contains the raw video frame.":"返回排水输出缓冲区的仅读取图像对象\r\n            包含原始视频框架的索引。\r\n","android.media.CamcorderProfile.videoBitRate":"android.media.camcorderprofile.videobitrate\r\n","android.hardware.camera2.CameraCharacteristics.STATISTICS_INFO_AVAILABLE_LENS_SHADING_MAP_MODES":"android.hardware.camera2.cameracharacteristics.statistics_info_available_lens_lens_shading_map_modes\r\n","Retrieves the information about the conditional access system used to scramble\n            a track.":"检索有关用于争夺条件访问系统的信息\r\n            轨道。\r\n","True if this location has a bearing.":"如果此位置有轴承，则为是真的。\r\n",":\n                    offload playback supported":"：\r\n                    支持卸载播放\r\n","android.hardware.GeomagneticField.getY()":"android.hardware.geomagneticfield.gety（）\r\n"," object that represents the geometric location of microphone\n            in meters.":" 代表麦克风几何位置的对象\r\n            在米中。\r\n","android.hardware.usb.UsbDevice.getProductName()":"android.hardware.usb.usbdevice.getProductName（）\r\n","android.location.SettingInjectorService.ATTRIBUTES_NAME":"android.location.setTingInjectorService.Attributes_name\r\n","Gets the position of a ":"得到一个\r\n","The Settings class regroups all environmental reverb parameters.":"设置类重组所有环境混响参数。\r\n","A constant string describing an uncalibrated magnetic field sensor type.":"描述未校准的磁场传感器类型的常数字符串。\r\n","android.media.tv.TvInputInfo.canRecord()":"android.media.tv.tvinputinfo.canrecord（）\r\n","Returns a human-presentable title for ringtone.":"返回铃声的人类标题。\r\n","android.media.AudioRecordingConfiguration":"android.media.audiorecordingconfiguration\r\n","android.net.SSLCertificateSocketFactory.SSLCertificateSocketFactory(int)":"android.net.sslcertificatesocketFactory.sslcertificatesocketFactory（int）\r\n","android.media.tv.TvContract.buildChannelUriForPassthroughInput(java.lang.String)":"android.media.tv.tvcontract.buildchanneluriforpassthroughinput（java.lang.string）\r\n","Call this method after setDataSource().":"在setDatasource（）之后调用此方法。\r\n","CDMA HIGH SS tone: {3700Hz 25ms, 4000Hz 25ms} repeat 16 times,\n 400ms OFF, repeat ....":"CDMA高SS音调：{3700Hz 25ms，4000Hz 25ms}重复16次，\r\n 400毫米，重复...\r\n","if listener is null\n":"如果听众为null\r\n\r\n","#getReferenceConstellationTypeForIsb()":"#getReferenceConstellationTypeforisb（）\r\n","Get the current metadata for this session.":"获取本届会议的当前元数据。\r\n","Gets player version.":"获取玩家版本。\r\n"," that is supported this camera device.":" 支持该相机设备。\r\n","HDCP is not supported on this device, content is unprotected":"该设备不支持HDCP，内容不受保护\r\n","QZSS L1 C/A message contained in the structure.":"QZSS L1 C/A结构中包含的消息。\r\n","Enable or disable the ":"启用或禁用\r\n","android.location.LocationManager.clearTestProviderEnabled(java.lang.String)":"android.location.locationmanager.cleartestProviderEnabled（java.lang.string）\r\n","android.media.ImageWriter.getMaxImages()":"android.media.imageWriter.getMaximages（）\r\n","The target video output bit rate in bits per second":"目标视频输出比特率每秒位数\r\n","android.media.metrics.PlaybackMetrics.STREAM_SOURCE_DEVICE":"android.media.metrics.playbackmetrics.stream_source_device\r\n","Registers a callback to receive updates from the Session.":"注册一个回调以接收会话更新。\r\n","android.media.audiofx.Visualizer.ALREADY_EXISTS":"android.media.audiofx.visualizer.already_exists\r\n","Adjusts color temperature of the image.":"调整图像的色温。\r\n","Report the reason an attempt to establish connectivity failed,\n if one is available.":"报告试图建立连接失败的原因，\r\n 如果有可用的话。\r\n","Gets the reflections delay.":"获取反射延迟。\r\n","android.hardware.camera2.CameraAccessException.MAX_CAMERAS_IN_USE":"android.hardware.camera2.cameraaccessexception.max_cameras_in_use\r\n","CaptureRequest#SENSOR_PIXEL_MODE android.sensor.pixelMode":"capturerequest＃sensor_pixel_mode android.sensor.pixelmode\r\n","The estimated camera neutral color in the native sensor colorspace at\n            the time of capture.":"本机传感器Colorspace中估计的相机中性颜色在\r\n            捕获时间。\r\n","#PLAYSTATE_FAST_FORWARDING":"#playstate_fast_forwarding\r\n","android.media.AudioManager.addOnCommunicationDeviceChangedListener(java.util.concurrent.Executor, android.media.OnCommunicationDeviceChangedListener)":"android.media.audiomanager.addoncommunicationdevicechangedlistener（java.util.concurrent.executor，android.media.media.oncommunicationdevicechangedlistlistener）\r\n","Unregisters the given callback.":"解注定给定的回调。\r\n","This class represents the current state of the GPS engine and is used in conjunction with ":"该类代表GPS发动机的当前状态，并与\r\n","No reverb or reflections":"没有混响或反思\r\n","Create a sensor direct channel backed by shared memory wrapped in HardwareBuffer object.":"创建一个传感器直接通道，该频道由包裹在硬件式对象中的共享内存支持。\r\n","android.media.metrics.PlaybackMetrics.DRM_TYPE_NONE":"android.media.metrics.playbackmetrics.drm_type_none\r\n","Adjusts color saturation of image.":"调整图像的颜色饱和度。\r\n","android.hardware.camera2.CameraExtensionCharacteristics.EXTENSION_AUTOMATIC":"android.hardware.camera2.CameraExtensionCharacteristics.extension_automatic\r\n","Density.":"密度。\r\n","android.location.GnssMeasurement.STATE_SUBFRAME_SYNC":"android.location.gnssmeasurement.state_subframe_sync\r\n","android.media.AudioTrack.getFormat()":"android.media.audiotrack.getFormat（）\r\n","android.hardware.camera2.params.ColorSpaceTransform.ColorSpaceTransform(int[])":"android.hardware.camera2.params.colorspacetransform.colorspacetransform（int []）\r\n","android.hardware.camera2.DngCreator.setDescription(java.lang.String)":"android.hardware.camera2.dngcreator.setDescription（java.lang.string）\r\n","#TONE_CDMA_LOW_PBX_L":"#TONE_CDMA_LOW_PBX_L\r\n","Registers an input device listener to receive notifications about when\n            input devices are added, removed or changed.":"注册输入设备侦听器，以接收有关何时的通知\r\n            添加，删除或更改输入设备。\r\n","Returns whether we are connected to the media scanner service":"返回我们是否连接到媒体扫描仪服务\r\n","android.media.MediaDrm.EVENT_KEY_EXPIRED":"android.media.mediadrm.event_key_expired\r\n","android.hardware.usb.UsbManager.ACTION_USB_ACCESSORY_ATTACHED":"android.hardware.usb.usbmanager.action_usb_accessory_attached\r\n","OutputFrame":"输出框架\r\n","A key describing the encoding complexity.":"描述编码复杂性的键。\r\n","CaptureRequest#CONTROL_AE_ANTIBANDING_MODE android.control.aeAntibandingMode":"capturerequest＃control_ae_antibanding_mode android.control.aeantibandingmode\r\n","Virtual display flag: Create a secure display.":"虚拟显示标志：创建安全显示。\r\n","Playback track change event.":"播放轨道变更事件。\r\n"," when the type of content played is game audio":" 当播放的内容类型为游戏音频时\r\n"," used in configuration.":" 用于配置。\r\n","android.media.MicrophoneInfo.DIRECTIONALITY_CARDIOID":"android.media.microphoneinfo.Directionality_cardioid\r\n","Indicates which type of content is played by the application.":"指示应用程序播放哪种类型的内容。\r\n","android.hardware.camera2.CaptureResult.STATISTICS_OIS_DATA_MODE":"android.hardware.camera2.captureresult.statistics_ois_data_mode\r\n","If no handler specified and the calling thread has no looper.\n":"如果没有指定处理程序，并且该通话线没有循环序列。\r\n\r\n","android.media.MediaFormat.KEY_OUTPUT_REORDER_DEPTH":"android.media.mediaformat.key_output_reorder_depth\r\n","android.net.IpSecTransform":"android.net.ipsectransform\r\n","android.media.MediaMuxer.start()":"android.media.mediamuxer.start（）\r\n","android.location.GnssMeasurement.ADR_STATE_VALID":"android.location.gnssmeasurement.adr_state_valid\r\n","android.media.audiofx.AudioEffect.EFFECT_TYPE_AEC":"android.media.audiofx.audioeffect.effect_type_aec\r\n","android.hardware.biometrics.BiometricPrompt.getDescription()":"android.hardware.biometrics.biometricprompt.getDescription（）\r\n","android.media.tv.TvInputManager.ACTION_SETUP_INPUTS":"android.media.tv.tvinputmanager.action_setup_inputs\r\n"," that are supported\n            by this camera device.":" 得到支持\r\n            通过此相机设备。\r\n","android.media.PlaybackParams.getSpeed()":"android.media.playbackparams.getspeed（）\r\n","android.media.MediaMetadataRetriever.setDataSource(android.media.MediaDataSource)":"android.media.mediametadataretriever.setdatasource（android.media.mediadatasource）\r\n","Convenience for constructing a ":"构建的便利\r\n","Gets error code.":"获取错误代码。\r\n","Removes location updates for the specified ":"删除指定的位置更新\r\n","android.media.MediaRoute2ProviderService.REASON_NETWORK_ERROR":"android.media.mediaroute2ProviderService.Reason_Network_error\r\n","if mode is not recognized.":"如果未识别模式。\r\n","android.mtp.MtpConstants#PROTECTION_STATUS_READ_ONLY":"android.mtp.mtpconstants＃protection_status_read_only\r\n","android.hardware.camera2.CaptureRequest.REPROCESS_EFFECTIVE_EXPOSURE_FACTOR":"android.hardware.camera2.capturerequest.reprocess_effective_exposure_factor\r\n","android.hardware.camera2.CameraCharacteristics.LOGICAL_MULTI_CAMERA_SENSOR_SYNC_TYPE":"android.hardware.camera2.cameracharacteristics.logical_multi_camera_sensor_sensor_sync_type\r\n","MtpDeviceInfo":"mtpdeviceinfo\r\n","A key describing the Target Reference Level (Target Loudness).":"描述目标参考级别（目标响度）的键。\r\n","F:Android.Media.MediaCodecList..ctor":"F：android.media.mediacodeclist..ctor\r\n","android.media.MediaPlayer.releaseDrm()":"android.media.mediaplayer.ReleasedRM（）\r\n","android.hardware.camera2.CameraCharacteristics.getAvailablePhysicalCameraRequestKeys()":"android.hardware.camera2.cameracharacteristics.getavailablephysicalcamerarequestkeys（）\r\n","android.media.tv.TvContract.isProgramUri(android.net.Uri)":"android.media.tv.tvcontract.isprogramuri（android.net.uri）\r\n","A service that implements a virtual MIDI device.":"实现虚拟MIDI设备的服务。\r\n","This event type indicates that the app needs to request keys from a license\n            server.":"此事件类型表明该应用需要从许可证请求密钥\r\n            服务器。\r\n","\n            for the format/size combination (in nanoseconds).":"\r\n            对于格式/尺寸组合（以纳秒为单位）。\r\n","android.hardware.camera2.params.RecommendedStreamConfigurationMap.getHighSpeedVideoFpsRanges()":"android.hardware.camera2.params.recommendedstreamconfigurationmap.gethighspeedvideofpsranges（）\r\n","android.media.session.PlaybackState.getPlaybackSpeed()":"android.media.session.playbackstate.getPlaybackspeed（）\r\n","Return a value sanitizer that allows all the characters used by\n            encoded URLs.":"返回一个允许所有字符的价值消毒剂\r\n            编码URL。\r\n","#registerMediaButtonEventReceiver(PendingIntent)":"#RegisterMediabuttoneVentReceiver（pendendIntent）\r\n","android.util.Size Size":"android.util。尺寸\r\n","android.media.tv.TvInputManager.RECORDING_ERROR_RESOURCE_BUSY":"android.media.tv.tvinputmanager.recording_error_resource_busy\r\n","android.location.GnssMeasurement.getCarrierFrequencyHz()":"android.location.gnssmeasurement.getCarrierFrequencyHz（）\r\n","Obtains storageID event parameter.":"获取存储ID事件参数。\r\n","android.hardware.lights.Light.hasRgbControl()":"android.hardware.lights.light.hasrgbcontrol（）\r\n","android.location.GnssStatus.CONSTELLATION_GALILEO":"android.location.gnssstatus.constellation_galileo\r\n","Returns a waveform capture of currently playing audio content.":"返回当前播放音频内容的波形捕获。\r\n","Play a sound from a sound ID.":"从声音ID中播放声音。\r\n","android.media.RingtoneManager.inferStreamType()":"android.media.ringtonemanager.inferstreamtype（）\r\n","android.media.MediaRecorder.setAudioChannels(int)":"android.media.mediarecorder.setaudiochannels（INT）\r\n","android.hardware.camera2.CaptureRequest.CONTROL_AE_EXPOSURE_COMPENSATION":"android.hardware.camera2.capturerequest.control_ae_exposure_compensation\r\n","android.media.MediaExtractor.setDataSource(java.io.FileDescriptor)":"android.media.mediaextractor.setdatasource（java.io.filedescriptor）\r\n","Returns the list of blocked content ratings.":"返回阻止内容评分的列表。\r\n"," is set to\n            ":" 被设定为\r\n            \r\n","android.media.AudioManager.PROPERTY_OUTPUT_FRAMES_PER_BUFFER":"android.media.audiomanager.property_output_frames_per_buffer\r\n","android.hardware.camera2.CaptureResult.HOT_PIXEL_MODE":"android.hardware.camera2.captureresult.hot_pixel_mode\r\n"," that are supported by this camera\n            device.":" 这张相机支持\r\n            设备。\r\n","android.hardware.camera2.params.OutputConfiguration.removeSensorPixelModeUsed(int)":"android.hardware.camera2.params.outputconfiguration.removesensorpixelmodeused（int）\r\n","Gets the media session token associated with the media browser.":"获取与媒体浏览器关联的媒体会话令牌。\r\n","MIME type for CEA-708 closed caption data.":"CEA-708封闭标题数据的MIME类型。\r\n","List of OIS data output modes for ":"OIS数据输出模式的列表\r\n","Triple Data Encryption Algorithm (TDES) Society of Cable Telecommunications Engineers (SCTE)\n            52 mode.":"三重数据加密算法（TDES）电缆电信工程师协会（SCTE）\r\n            52模式。\r\n","android.location.Address.getMaxAddressLineIndex()":"android.location.Address.getMaxAddressLineIndex（）\r\n","android.media.MediaExtractor.getCachedDuration()":"android.media.mediaextractor.getCachedDuration（）\r\n","Other track change reason.":"其他轨道变更原因。\r\n","android.hardware.usb.UsbConfiguration.getInterface(int)":"android.hardware.usb.usbconfiguration.getinterface（int）\r\n","Called immediately before the input method window is shown to the user.":"在输入方法窗口之前立即致电给用户。\r\n","android.hardware.usb.UsbAccessory.getSerial()":"android.hardware.usb.usbaccessory.getSerial（）\r\n","Tests for the presence of a capabilitity on this instance.":"测试在这种情况下是否存在辅助性。\r\n","android.media.audiofx.Visualizer.getMaxCaptureRate()":"android.media.audiofx.visualizer.getMaxCapturater（）\r\n","android.location.LocationManager.addTestProvider(java.lang.String, android.location.provider.ProviderProperties)":"android.location.LocationManager.AddtestProvider（java.lang.string，android.location.provider.provider.providerproperties）\r\n","android.hardware.camera2.TotalCaptureResult.getPhysicalCameraResults()":"android.hardware.camera2.totalcaptureresult.getPhysicalCameraresults（）\r\n","A key describing for selecting the DRC effect type for MPEG-D DRC.":"描述选择MPEG-D DRC的DRC效应类型的键。\r\n","android.media.session.PlaybackState.ACTION_PLAY":"android.media.session.playbackstate.action_play\r\n","android.media.effect.Effect.apply(int, int, int, int)":"android.media.effect.effect.Apply（int，int，int，int）\r\n","Called when the fullscreen-mode extracting editor info has changed,\n            to update the state of its UI such as the action buttons shown.":"当全屏模式提取编辑器信息已更改时，请致电\r\n            更新UI的状态，例如显示的操作按钮。\r\n"," at the given position in the\n            ":" 在给定的位置\r\n            \r\n","Returns the height of the video.":"返回视频的高度。\r\n"," for an encoder).":" 对于编码器）。\r\n","Take care of attaching the given window token provided by the system.":"注意附加系统提供的给定窗口令牌。\r\n","Reports whether the satellite at the specified index has ephemeris data.":"报告指定索引处的卫星是否具有埃弗米斯数据。\r\n","android.location.Address.setCountryCode(java.lang.String)":"android.location.Address.SetCountryCode（Java.lang.String）\r\n","android.hardware.biometrics.BiometricManager.getStrings(int)":"android.hardware.biometrics.biometricmanager.getstrings（int）\r\n","Handle a request by the system to show the soft input area.":"处理系统的请求以显示软输入区域。\r\n","The contract between the TV provider and applications.":"电视提供商和应用程序之间的合同。\r\n","android.media.midi.MidiOutputPort":"android.media.midi.midioutputport\r\n","Called back when a ":"何时回电\r\n","android.inputmethodservice.AbstractInputMethodService.onCreateInputMethodInterface()":"android.inputmethodservice.abstractinputmethodservice.oncreateinputmethodinterface（）\r\n","Indicates that this network is available for general use.":"表示该网络可用于一般使用。\r\n","F:Android.Mtp.MtpConstants.IsAbstractObject":"F：android.mtp.mtpconstants.isabstractObject\r\n","(x,y)":"（x，y）\r\n","Returns the recording state of the AudioRecord instance.":"返回AudioreCord实例的记录状态。\r\n","The return value to indicate that the device does not support the statistic.":"返回值表示设备不支持统计数据。\r\n","android.media.MediaParser":"android.media.mediaparser\r\n","android.media.SyncParams.getTolerance()":"android.media.syncparams.getTolerance（）\r\n","Change playback rate.":"更改播放率。\r\n","#POINT_SIZE":"#point_size\r\n","android.media.metrics.TrackChangeEvent.getCodecName()":"android.media.metrics.trackchangeevent.getCodecname（）\r\n","android.media.MediaCodec.CryptoInfo":"android.media.mediacodec.cryptoinfo\r\n","android.media.MediaCodec.INFO_OUTPUT_BUFFERS_CHANGED":"android.media.mediacodec.info_output_buffers_changed\r\n","android.location.LocationRequest.getMinUpdateDistanceMeters()":"android.location.locationrequest.getMinupDatedistAnceMeters（）\r\n","Get the minimum\n            ":"获取最低限度\r\n            \r\n","Immutable class to store the recommended stream configurations to set up\n            ":"不可变的类存储推荐的流配置以设置\r\n            \r\n","The number of subSamples that make up the buffer's contents.":"构成缓冲区内容的子样本的数量。\r\n","android.hardware.camera2.CameraCharacteristics.CONTROL_AE_LOCK_AVAILABLE":"android.hardware.camera2.cameracharacteristics.control_ae_lock_available\r\n","Opens a raw file descriptor to read the data under the given default URI.":"打开一个原始文件描述符以读取给定默认URI下的数据。\r\n","Retrieves the constellation type of the satellite at the specified index.":"检索指定索引的卫星的星座类型。\r\n","android.media.ExifInterface.TAG_SCENE_CAPTURE_TYPE":"android.media.exifinterface.tag_scene_capture_type\r\n","MediaExtractor facilitates extraction of demuxed, typically encoded,  media data\n            from a data source.":"MediaExtractor有助于提取脱机，通常编码的媒体数据\r\n            来自数据源。\r\n"," has detected a reset.":" 已经检测到重置。\r\n","android.media.metrics.PlaybackMetrics":"android.media.metrics.playbackmetrics\r\n","android.location.LocationManager.FUSED_PROVIDER":"android.location.locationmanager.fused_provider\r\n","#ORIENTATION_UNKNOWN":"#orientation_unknown\r\n","The event to indicate that the number of CAS system's session is changed.":"该事件表明CAS系统会话的数量已更改。\r\n","android.location.Address.getLocale()":"android.location.address.getLocale（）\r\n","Returns the manufacturer name of the device.":"返回设备的制造商名称。\r\n"," view of the features contained in this MediaFormat.":" 此媒体形式中包含的功能的视图。\r\n",",\n            and a callback on the specified ":"，，，，\r\n            以及指定的回调\r\n","android.hardware.camera2.params.SessionConfiguration.getExecutor()":"android.hardware.camera2.params.sessionconfiguration.getExecutor（）\r\n","android.media.Ringtone.setStreamType(int)":"android.media.rringtone.setStreamType（int）\r\n","android.hardware.camera2.params.OutputConfiguration.removeSurface(android.view.Surface)":"android.hardware.camera2.params.outputconfiguration.removesurface（android.view.surface）\r\n","A key describing the width of the content in a video format.":"以视频格式描述内容宽度的键。\r\n","Get the estimated bearing accuracy of this location, in degrees. -or- Set the estimated bearing accuracy of this location, degrees.":"以该位置获得该位置的估计轴承精度。 - 或设置该位置的估计轴承精度。\r\n","android.hardware.camera2.params.MeteringRectangle.METERING_WEIGHT_MIN":"android.hardware.camera2.params.meteringrectangle.metering_weight_min\r\n","Update the list of items in the play queue.":"更新播放队列中的项目列表。\r\n","Add an app-specified route for media to the MediaRouter.":"向Mediarouter添加媒体的应用指定路由。\r\n","android.media.ExifInterface.TAG_EXPOSURE_MODE":"android.media.exifinterface.tag_expuse_mode\r\n","android.media.AudioManager.setAllowedCapturePolicy(int)":"android.media.audiomanager.setallowedcapturepolicy（int）\r\n","CDMA HIGH PBX SS tone: {3700Hz 25ms, 4000Hz 25ms} 8 times\n 200 ms OFF, {3700Hz 25ms 4000Hz 25ms}8 times,\n 2000ms OFF, REPEAT....":"CDMA高PBX SS音调：{3700Hz 25ms，4000Hz 25ms} 8次\r\n 200毫秒关闭，{3700Hz 25ms 4000Hz 25ms} 8次，\r\n 2000毫秒左右，重复...\r\n","\n            for used for processing events from the target application.":"\r\n            用于从目标应用程序处理事件。\r\n","Current preset. ":"当前预设。\r\n","Sets the listener JetPlayer notifies when a JET event is generated by the rendering and\n playback engine.":"设置侦听器JetPlayer会在渲染和\r\n 播放引擎。\r\n","Prepares the player for playback, asynchronously.":"为播放器准备播放，异步。\r\n","android.media.MediaRoute2Info":"android.media.mediaroute2info\r\n","android.media.audiofx.Equalizer.PARAM_CENTER_FREQ":"android.media.audiofx.equalizer.param_center_freq\r\n","The maximum number of metering regions that can be used by the auto-exposure (AE)\n            routine.":"自动曝光(AE)可使用的测光区域的最大数量\r\n            例行公事。\r\n","android.media.ExifInterface.TAG_CONTRAST":"android.media.exifinterface.tag_contrast\r\n","Requests a Surface to use as the input.":"请求表面用作输入。\r\n","android.hardware.location.GeofenceHardwareRequest.createCircularGeofence(double, double, double)":"android.hardware.Location.GeofenceHardwarereQuest.CreateCircularGeofe（双，双，双，双）\r\n","A class for handling geocoding and reverse geocoding.":"用于处理地理编码和反向地理编码的课程。\r\n","android.inputmethodservice.KeyboardView":"android.inputmethodservice.keyboardview\r\n","android.media.Rating.getRatingStyle()":"android.media.rating.getRatingStyle（）\r\n","InputConfiguration":"inputConfiguration\r\n","android.net.Proxy":"android.net.proxy\r\n","F:Android.Views.Keycode.MediaMute":"F：android.views.keycode.mediamute\r\n","Subsequent calls to ":"随后的电话\r\n","A functor used to sanitize a single query value.":"用于消毒单个查询值的函子。\r\n","AudioPresentation#MASTERED_FOR_STEREO":"听力贷款＃MASTERED_FOR_FOR_STEREO\r\n","android.media.ExifInterface.TAG_WHITE_POINT":"android.media.exifinterface.tag_white_point\r\n","#getFramesAtIndex(int, int, BitmapParams)":"#getFramesatIndex（int，int，bitmapparams）\r\n","android.net.MailTo":"android.net.mailto\r\n","android.media.MediaFormat.KEY_BIT_RATE":"android.media.mediaformat.key_bit_rate\r\n","android.location.GnssNavigationMessage.TYPE_GPS_L2CNAV":"android.location.gnssnavigationmessage.type_gps_l2cnav\r\n"," to indicate that one or more audio devices have been\n            connected.":" 指出一个或多个音频设备已经\r\n            连接的。\r\n","android.hardware.camera2.CaptureRequest.TONEMAP_PRESET_CURVE":"android.hardware.camera2.capturerequest.tonemap_preset_curve\r\n","android.media.RemoteController.POSITION_SYNCHRONIZATION_CHECK":"android.media.remotecontroller.position_synchronization_check\r\n","Parser for the FLV container format, as defined in Adobe Flash Video File Format\n            Specification.":"FLV容器格式的解析器，如Adobe Flash视频文件格式所定义\r\n            规格。\r\n","Defines over what stream type the media is presented.":"定义介绍媒体的流类型。\r\n","Enumerates the capabilities of the codec component.":"列举编解码器组件的功能。\r\n","android.media.MediaFormat.getString(java.lang.String)":"android.media.mediaformat.getstring（java.lang.string）\r\n","The number of trailing encrypted bytes in each subSample.":"每个子样本中的尾随字节数。\r\n","android.media.MediaRecorder.setOutputFile(java.io.File)":"android.media.mediarecorder.setOutputfile（java.io.file）\r\n","android.net.TrafficStats.tagSocket(java.net.Socket)":"android.net.trafficstats.tagsocket（java.net.socket）\r\n","#getSatelliteCount()":"#getSatelliteCount（）\r\n","Sets the audio adjust mode.":"设置音频调整模式。\r\n","android.media.MediaPlayer.setAuxEffectSendLevel(float)":"android.media.mediaplayer.setauxeffectsendlevel（float）\r\n","When enabled, the sensor sends a test pattern instead of\n            doing a real exposure from the camera.":"启用后，传感器会发送测试模式而不是\r\n            从相机中进行真正的曝光。\r\n","Unknown stream type.":"未知流类型。\r\n","android.hardware.camera2.CameraCaptureSession capture session":"android.hardware.camera2.cameracapturesessionsession捕获会话\r\n","Builder#setContentType(int)":"构建器＃setContentType（int）\r\n","Gets all commands of this command group.":"获取此命令组的所有命令。\r\n","android.provider.BaseColumns._ID":"android.provider.basecolumns._id\r\n","for more details.":"有关更多详情。\r\n","Sets a value for the key.":"设置键的值。\r\n","Sets the value of a string key.":"设置字符串键的值。\r\n","The width of this particular image buffer stream in pixels.":"该特定图像缓冲流在像素中的宽度。\r\n","android.media.MediaRecorder.setOnInfoListener(android.media.OnInfoListener)":"android.media.mediarecorder.setoninfolistener（android.media.oninfolistener）\r\n","Verify a signature using the CryptoSessions's mac algorithm.":"使用密码量的MAC算法验证签名。\r\n","#getSatelliteInterSignalBiasNanos()":"#getSatelliteIntersignalBiasnanos（）\r\n","android.hardware.camera2.CameraCharacteristics.STATISTICS_INFO_MAX_FACE_COUNT":"android.hardware.camera2.cameracharacteristics.statistics_info_max_face_count\r\n","android.media.MediaPlayer.MediaPlayer()":"android.media.mediaplayer.mediaplayer（）\r\n","The bluetooth folder type of the media specified in the section 6.":"第6节中指定的媒体的蓝牙文件夹类型。\r\n","\n            for the class/size combination (in nanoseconds).":"\r\n            对于类/尺寸组合（以纳秒为单位）。\r\n","android.media.MediaCodecInfo.isEncoder()":"android.media.mediacodecinfo.isencoder（）\r\n","Returns the reference carrier frequency in Hz for inter-signal bias.":"返回Hz中的参考载体频率以获得信号偏置。\r\n","android.media.MediaParser.PARAMETER_MP4_IGNORE_TFDT_BOX":"android.media.mediaparser.parameter_mp4_ignore_tfdt_box\r\n","android.net.IpSecManager.DIRECTION_OUT":"android.net.ipsecmanager.direction_out\r\n","Other contents.":"其他内容。\r\n","android.media.AudioPresentation.hasDialogueEnhancement()":"android.media.audiopersentation.hasdialogueenhancement（）\r\n","android.media.Session2Command.Session2Command(int)":"android.media.session2Command.Session2Command（INT）\r\n","android.inputmethodservice.KeyboardView.onLongPress(android.inputmethodservice.Key)":"android.inputmethodservice.keyboardview.onlongpress（android.inputmethodservice.key）\r\n","Get current playback position as a ":"获得当前的播放位置\r\n"," value when a location change is sent using\n            a PendingIntent.":" 当使用位置更改发送时值\r\n            垂悬的人。\r\n","android.hardware.camera2.CaptureResult.CONTROL_EXTENDED_SCENE_MODE":"android.hardware.camera2.captureresult.control_extended_scene_mode\r\n","Unescape an escaped string.":"取消示例的逃脱字符串。\r\n","android.media.audiofx.AudioEffect.CONTENT_TYPE_MOVIE":"android.media.audiofx.audioeffect.content_type_movie\r\n","android.mtp.MtpDeviceInfo.getOperationsSupported()":"android.mtp.mtpdeviceinfo.getoperationsupported（）\r\n","android.media.MediaParser.PARSER_NAME_TS":"android.media.mediaparser.parser_name_ts\r\n","#RATING_KEY_BY_USER":"#rating_key_by_user\r\n","CaptureRequest#NOISE_REDUCTION_MODE android.noiseReduction.mode":"capturerequest＃noings_reduction_mode android.noisereduction.mode\r\n","android.location.Criteria.isBearingRequired()":"android.location.criteria.isbearingrequired（）\r\n","Sets the given test provider to be enabled or disabled.":"设置要启用或禁用的给定测试提供商。\r\n","Constellation type constant for Beidou.":"beidou的星座类型常数。\r\n","android.media.AsyncPlayer.stop()":"android.media.asyncplayer.stop（）\r\n","android.media.ExifInterface.isSupportedMimeType(java.lang.String)":"android.media.exifinterface.issupportedmimetype（java.lang.string）\r\n","Index of variant that favors time resolution resolution.":"有利于时间分辨率的变体索引。\r\n","android.media.metrics.TrackChangeEvent.getTrackState()":"android.media.metrics.trackchangeevent.getTrackState（）\r\n","android.media.AudioTrack.getMaxVolume()":"android.media.audiotrack.getmaxvolume（）\r\n","Returns true if the current IME needs to offer the users ways to switch to a next input\n            method (e.":"如果当前IME需要为用户提供切换到下一个输入的方法，则返回true\r\n            方法（e。\r\n","android.media.MediaMetadata.METADATA_KEY_ALBUM_ART":"android.media.mediametadata.metadata_key_album_art\r\n","android.media.MediaMetadata.METADATA_KEY_MEDIA_URI":"android.media.mediametadata.metadata_key_media_uri\r\n","Requests receiving trigger events for a trigger sensor.":"接收触发传感器的触发事件的请求。\r\n","android.media.audiofx.AcousticEchoCanceler":"android.media.audiofx.AcousticticeChaccanceler\r\n","android.media.MediaRouter.selectRoute(int, android.media.RouteInfo)":"android.media.mediarouter.selectroute（int，android.media.routeinfo）\r\n","Releases resources associated with the current session of\n            MediaDrm.":"释放与当前会话相关的资源\r\n            Mediadrm。\r\n"," that corresponds to the characteristics\n            of all available microphones.":" 与特征相对应\r\n            在所有可用的麦克风中。\r\n","Returns a list of currently attached USB accessories.":"返回当前附件的USB配件的列表。\r\n","Returns the modification date of the MTP object\n            The value is represented as milliseconds since January 1, 1970":"返回MTP对象的修改日期\r\n            自1970年1月1日以来，该值表示为毫秒\r\n","android.mtp.MtpConstants.OPERATION_GET_OBJECT_PROPS_SUPPORTED":"android.mtp.mtpconstants.operation_get_object_props_supported\r\n","Describes the properties of a network link.":"描述网络链接的属性。\r\n","Callback for when the JET engine generates a new event.":"何时产生新事件的回调。\r\n","android.media.MediaCodecList.getCodecInfos()":"android.media.mediacodeclist.getCodeCinfos（）\r\n","#TONE_CDMA_ABBR_ALERT":"#TONE_CDMA_ABBR_ALERT\r\n","android.location.GnssAntennaInfo":"android.location.gnssantennainfo\r\n","android.media.AudioTrack.getPlaybackRate()":"android.media.audiotrack.getPlayBackrate（）\r\n","Returns the version number of the device.":"返回设备的版本号。\r\n","android.media.MediaExtractor.getPsshInfo()":"android.media.mediaextractor.getpsshinfo（）\r\n","Awaiting response from DHCP server in order to assign IP address information.":"等待DHCP服务器的响应以分配IP地址信息。\r\n","Parser for non-fragmented files using the MP4 container format, as defined in ISO/IEC\n            14496-12.":"使用MP4容器格式的非碎片文件的解析器，如ISO/IEC中所定义\r\n            14496-12。\r\n","Return the rating style.":"返回评级样式。\r\n","android.media.session.MediaController.getTransportControls()":"android.media.session.mediacontroller.getTransportControls（）\r\n","android.media.MediaSyncEvent.getType()":"android.media.mediasyncevent.getType（）\r\n","#getImageAtIndex(int, BitmapParams)":"#getimageatindex（int，bitmapparams）\r\n","if the given latitude or\n longitude is out of range.\n\n":"如果给定的纬度或\r\n 经度超出范围。\r\n\r\n\r\n","Notifies that the session is released.":"通知会话已发布。\r\n","The metadata key to retrieve the mime type of the data source.":"检索数据源的MIME类型的元数据键。\r\n","android.media.AudioTrack.removeOnCodecFormatChangedListener(android.media.OnCodecFormatChangedListener)":"android.media.audiotrack.removeoncodecformatchangedlistener（android.media.oncodecformatchangedListener）\r\n","android.media.MediaRoute2ProviderService.REQUEST_ID_NONE":"android.media.mediaroute2providerservice.request_id_none\r\n","android.media.tv.TvView.dispatchUnhandledInputEvent(android.view.InputEvent)":"android.media.tv.tvview.dispatchunhandledinputevent（android.view.inputevent）\r\n","A rating style with 0 to 3 stars.":"具有0到3星的评分样式。\r\n","Unregisters the callback for notification of stream events, previously registered\n            with ":"请注册以通知流事件的回调，先前已注册\r\n            和\r\n","Create an empty key with no attributes.":"创建一个没有属性的空键。\r\n","android.media.MediaFormat.KEY_MAX_PTS_GAP_TO_ENCODER":"android.media.mediaformat.key_max_pts_gap_to_encoder\r\n","android.media.projection.MediaProjection.stop()":"android.media.proctive.mediaproction.stop（）\r\n","This indicated that the buffer marked as such contains codec\n            initialization / codec specific data instead of media data.":"这表明标记为此类的缓冲区包含编解码器\r\n            初始化 /编解码器特定数据而不是媒体数据。\r\n"," object are the same as for ":" 对象与\r\n","Register a callback to be invoked when session state has been\n            lost.":"注册会议状态时要调用的回调\r\n            丢失的。\r\n","Returns a confidence factor between 0 and 1.":"返回0到1之间的置信因子。\r\n"," for MediaRecorder.":" 对于中国订单。\r\n","Free up all the resources associated with this ImageWriter.":"释放与此ImageWriter关联的所有资源。\r\n","android.media.MediaPlayer.stop()":"android.media.mediaplayer.stop（）\r\n","android.media.MediaParser.seek(android.media.SeekPoint)":"android.media.mediaparser.seek（android.media.seekpoint）\r\n","Returns true if the device is private.":"如果设备是私有的，则返回true。\r\n","F:Android.Media.AudioRecord..ctor":"f：android.media.audiorecord..ctor\r\n","android.media.MediaDrm.removeSecureStop(byte[])":"android.media.mediadrm.removesecurestop（byte []）\r\n","android.location.Location.getLongitude()":"android.location.location.getLongitude（）\r\n","if not enough metadata information has been\n          set to write a well-formatted DNG file.\n":"如果没有足够的元数据信息\r\n          设置以编写一个格式良好的DNG文件。\r\n\r\n","android.media.ExifInterface.TAG_GPS_IMG_DIRECTION":"android.media.exifinterface.tag_gps_img_direction\r\n","Returns the name of the light.":"返回光的名称。\r\n","Mercury's gravity in SI units (m/s^2)":"汞的重力（m/s^2）\r\n","android.media.ExifInterface.TAG_GPS_DATESTAMP":"android.media.exifinterface.tag_gps_datestamp\r\n","android.media.ImageReader.close()":"android.media.imagereader.close（）\r\n","Checks if this TV input is marked hidden by the user in the settings.":"检查该电视输入是否由用户在设置中隐藏。\r\n","Return the X coordinate of the left side of the rectangle.":"返回矩形左侧的X坐标。\r\n","android.media.AudioDeviceInfo.TYPE_BLE_SPEAKER":"android.media.audiodeviceinfo.type_ble_speaker\r\n","if column or row was out of range\n":"如果列或行超出范围\r\n\r\n","Get a group of ":"get\r\n","android.media.metrics.PlaybackErrorEvent.ERROR_DRM_CONTENT_ERROR":"android.media.metrics.playbackerrorevent.error_drm_content_error\r\n","Sets the data source (MediaDataSource) to use.":"设置数据源（MediaDataSource）要使用。\r\n","ApplicationMediaCapabilities is an immutable class that encapsulates an application's capabilities\n             for handling newer video codec format and media features.":"applicationmediacapabilities是一个不变的类，可封装应用程序的功能\r\n             用于处理较新的视频编解码器格式和媒体功能。\r\n","Query all hdr types that are supported by the application.":"查询应用程序支持的所有HDR类型。\r\n","OutputConfiguration#enableSurfaceSharing":"outputConfiguration＃enablesurfacesharing\r\n","android.media.AudioFormat":"android.media.audioformat\r\n","android.media.tv.TvRecordingClient.tune(java.lang.String, android.net.Uri, android.os.Bundle)":"android.media.tv.tv.tvrecordingclient.tune（java.lang.string，android.net.uri，android.os.os.bundle）\r\n","android.media.session.MediaController.unregisterCallback(android.media.session.Callback)":"android.media.session.mediacontroller.unregistercallback（android.media.session.callback）\r\n","android.media.AudioDescriptor.getEncapsulationType()":"android.media.audiodescriptor.getEncapsulationType（）\r\n","Given to the ringtone picker as an int.":"将铃声挑选器作为int赋予。\r\n","Mode of operation for the chromatic aberration correction algorithm.":"色差校正算法的操作模式。\r\n","Returns the audio source currently used to configure the capture path.":"返回当前用于配置捕获路径的音频源。\r\n","Returns the product name of the device.":"返回设备的产品名称。\r\n","Returns the defined audio encoder profiles.":"返回定义的音频编码器配置文件。\r\n","Gets the list of IDs of selectable routes for the session.":"获取会话可选路由的ID列表。\r\n","android.hardware.camera2.CameraMetadata#SENSOR_PIXEL_MODE_MAXIMUM_RESOLUTION ":"android.hardware.camera2.camerametadata＃sensor_pixel_mode_maximum_resolution\r\n","Playback state of a RemoteControlClient which is buffering data to play before it can\n               start or resume playback.":"RemoteControlclient的播放状态，该状态正在缓冲数据之前可以播放的数据\r\n               启动或恢复播放。\r\n","android.media.AudioMetadataReadMap.size()":"android.media.audiometadatareadmap.size（）\r\n","This method is called when the state of this input method needs to be\n            reset.":"当需要该输入方法的状态为\r\n            重置。\r\n","Allow double quote characters. ":"允许双引号字符。\r\n","android.media.session.PlaybackState.ACTION_PREPARE_FROM_MEDIA_ID":"android.media.session.playbackstate.action_prepare_from_media_id\r\n","Stops playback after playback has been started or paused.":"播放或停止播放后停止播放。\r\n","android.location.GnssNavigationMessage.TYPE_GPS_L5CNAV":"android.location.gnssnavigationmessage.type_gps_l5cnav\r\n","android.net.TrafficStats.getUidTcpRxBytes(int)":"android.net.trafficstats.getuidtcprxbytes（int）\r\n","android.media.effect.EffectFactory.EFFECT_CROP":"android.media.effect.effectfactory.effect_crop\r\n","Gets a read-only collection of measurements associated with the current event.":"获取与当前事件相关的仅阅读测量集合。\r\n","android.media.AudioAttributes":"android.media.audioAttributes\r\n"," for high speed video recording use case.":" 对于高速视频记录用例。\r\n","Event sent when the GPS system has stopped.":"GPS系统停止时发送的事件。\r\n","MetadataEditor":"元数据\r\n","Creates and returns a Bitmap object of the thumbnail image based on the byte array and the\n            thumbnail compression value, or ":"创建并返回基于字节数组和\r\n            缩略图压缩值，或\r\n","android.location.LocationManager.getProvider(java.lang.String)":"android.location.locationmanager.getProvider（java.lang.string）\r\n","android.media.AudioAttributes.ALLOW_CAPTURE_BY_NONE":"android.media.audioattributes.allow_capture_by_none\r\n","android.inputmethodservice.InputMethodService.onKeyLongPress(int, android.view.KeyEvent)":"android.inputmethodservice.inputmethodservice.onkeylongpress（int，android.view.keyevent）\r\n","android.media.JetPlayer":"android.media.jetplayer\r\n","android.media.ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH":"android.media.exifinterface.tag_jpeg_interchange_format_length\r\n","android.media.midi.MidiDeviceService.onDeviceStatusChanged(android.media.midi.MidiDeviceStatus)":"android.media.midi.midideviceservice.ondevicestatuschanged（android.media.midi.midi.mididevicestatus）\r\n","android.hardware.camera2.params.TonemapCurve.LEVEL_WHITE":"android.hardware.camera2.params.tonemapcurve.level_white\r\n"}