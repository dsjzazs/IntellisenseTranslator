{"\r\n            Retrieves the forwarding logger description.\r\n            ":"\r\n            检索转发记录器描述。\r\n            \r\n","\r\n            Whether the include value has wildcards, \r\n            cached for performance.\r\n            ":"\r\n            包括价值是否具有通配符，\r\n            缓存以进行性能。\r\n            \r\n","\r\n            Determines if the specified submission has logged an errors.\r\n            ":"\r\n            确定指定的提交是否已记录了错误。\r\n            \r\n","\r\n            Sets the node affinity for a particular project file.\r\n            ":"\r\n            设置特定项目文件的节点亲和力。\r\n            \r\n","true indicates task succeed":"正确表示任务成功\r\n","\r\n            List of ProjectItemElement's traversing into imports.\r\n            Gathered during the first pass to avoid traversing again.\r\n            ":"\r\n            ProjectItemelement的列表遍历进口。\r\n            在第一次通行证中聚集，以避免再次穿越。\r\n            \r\n","\r\n            Given the absolute location of a file, and a disc location, returns relative file path to that disk location. \r\n            Throws UriFormatException.\r\n            ":"\r\n            给定文件的绝对位置和光盘位置，将相对文件路径返回到该磁盘位置。\r\n            抛出ur uniformate Xsception。\r\n            \r\n","sender (should be null)":"发件人（应该为null）\r\n","\r\n             Made this as large as 200 because ASP.NET Core (6.0) projects have\r\n             something like 80-90 imports. This was observed to give a noticeable\r\n             performance improvement compared to a mid-17.0 MSBuild with the old\r\n             value of 50.\r\n            \r\n             If this number is increased much higher, the datastructure may\r\n             need to be changed from a linked list, since it's currently O(n).\r\n             ":"使其大于200，因为ASP.NET Core（6.0）项目\r\n             大约是80-90进口。观察到这给出​​了一个明显的\r\n             与旧的17.0 msbuild相比，性能提高\r\n             价值50。\r\n            \r\n             如果这个数字增加了得多，则数据架构可能\r\n             需要从链接列表中更改，因为当前是o（n）。\r\n             \r\n","The build request with which these results should be associated.":"这些结果应关联的构建请求。\r\n","\r\n            The event which is set when we should shut down.\r\n            ":"\r\n            我们应该关闭时设置的事件。\r\n            \r\n","True if the operation was successful":"如果操作成功，则是真的\r\n","\r\n            Return the WinMD paths referenced by the given api contracts and target sdk root\r\n            ":"\r\n            返回给定API合同和目标SDK根引用的WinMD路径\r\n            \r\n"," issued in response to this request will\r\n            include ":" 根据此请求发出的\r\n            包括\r\n","\r\n            Wraps an output item element under a task element\r\n            ":"\r\n            在任务元素下包装输出项元素\r\n            \r\n","\r\n            Handler for target finished events\r\n            ":"\r\n            目标成品事件的处理程序\r\n            \r\n","\r\n            Creates a new instance of frame with all fields specified.\r\n            ":"\r\n            使用指定的所有字段创建帧的新实例。\r\n            \r\n","\r\n            True if this project configuration should be built as part of its parent solution configuration\r\n            ":"\r\n            如果应作为其父求解配置的一部分构建此项目配置，则为true\r\n            \r\n","\r\n            indicates if the default tasks file has already been scanned\r\n            ":"\r\n            指示是否已经扫描默认任务文件\r\n            \r\n","The new value of the reassigned property.":"重新分配属性的新值。\r\n","\r\n            Parse SDK moniker\r\n            ":"\r\n            解析SDK绰号\r\n            \r\n","\r\n            Should be protected+internal.\r\n            ":"\r\n            应受到保护+内部。\r\n            \r\n","\r\n            This number is static so that it is unique across the appdomain. That is so that a host\r\n            can know when a ProjectRootElement has been unloaded (perhaps after modification) and\r\n            reloaded -- the version won't reset to '0'.\r\n            ":"\r\n            该数字是静态的，因此在AppDomain中是唯一的。那是一个主人\r\n            可以知道何时卸载项目Rootelement（也许是在修改后）和\r\n            重新加载 - 版本不会重置为“ 0”。\r\n            \r\n","\r\n            Throws an instance of this exception using rich error information.\r\n            ":"\r\n            使用丰富的错误信息抛出此异常的实例。\r\n            \r\n","\r\n            Project visible property that allows the user to specify an amount of time after which the task executable\r\n            is terminated. \r\n            ":"\r\n            项目可见属性，允许用户指定任务可执行的时间\r\n            被终止。\r\n            \r\n","\r\n            Retrieves the number of references this configuration has.\r\n            ":"\r\n            检索该配置具有的参考文献数量。\r\n            \r\n","\r\n            Signals that a node has been created.\r\n            ":"\r\n            信号表明已经创建了一个节点。\r\n            \r\n","Od":"OD\r\n","\r\n            The callback interface used to invoke new project builds.\r\n            ":"\r\n            用于调用新项目构建的回调界面。\r\n            \r\n","\r\n            The name of the task\r\n            ":"\r\n            任务的名称\r\n            \r\n","Error message for exception.":"异常错误消息。\r\n","\r\n            The highest version of the backing ProjectRootElements (including imports) that this object was last evaluated from.\r\n            Edits to the ProjectRootElement either by this Project or another Project increment the number.\r\n            If that number is different from this one a reevaluation is necessary at some point.\r\n            ":"\r\n            最高版本的Backing ProjectRootelement（包括导入）该对象是最后评估的。\r\n            通过此项目或另一个项目递增该数字的项目Rootelement。\r\n            如果该数字与此不同，则在某个时候需要重新评估。\r\n            \r\n","\r\n            If false, the graph is constructed but the nodes are not built.\r\n            ":"\r\n            如果是错误的，则该图是构造的，但没有构建节点。\r\n            \r\n","\r\n            Provides an enumerator over property definitions for a specified tools version\r\n            ":"\r\n            提供有关指定工具版本属性定义的枚举者\r\n            \r\n","O1":"O1\r\n","The other object with which to compare this one.":"与此对象进行比较的另一个对象。\r\n","\r\n            Same as Directory.EnumerateFiles(...) except that files that\r\n            aren't accessible are skipped instead of throwing an exception.\r\n            \r\n            Other exceptions are passed through.\r\n            ":"\r\n            与目录相同。\r\n            跳过不可访问而不是抛出异常。\r\n            \r\n            其他例外情况通过。\r\n            \r\n","\r\n            ProjectTaskElement represents the Task element in the MSBuild project.\r\n            ":"ProjectTaskElement代表MSBUILD项目中的任务元素。\r\n            \r\n","\r\n            The results node assigned to this configuration\r\n            ":"\r\n            分配给此配置的结果节点\r\n            \r\n","\r\n            Lookup for reserved property names. Intentionally do not include MSBuildExtensionsPath* or MSBuildUserExtensionsPath in this list.  We need tasks to be able to override those.\r\n            ":"查找保留属性名称。有意在此列表中不包括msbuildextensionspath*或msbuilduserextensionspath。我们需要任务才能覆盖这些任务。\r\n            \r\n","\r\n            Adds a dependency to the project based on the specified guid string.\r\n            ":"\r\n            基于指定的GUID字符串对项目增加依赖关系。\r\n            \r\n","Did the project pass or fail":"项目通过还是失败了\r\n","\r\n            True if it is known that no child items have wildcards in their\r\n            include. An optimization helping Project.AddItem.\r\n            Only reliable if it is true.\r\n            ONLY TO BE CALLED by ProjectItemElement.\r\n            Should be protected+internal.\r\n            ":"\r\n            是的，如果知道没有孩子的物品在他们的\r\n            包括。优化帮助项目。\r\n            仅在真实的情况下可靠。\r\n            只能通过ProjectItemelement调用。\r\n            应受到保护+内部。\r\n            \r\n",". Adds the option of not splitting the item element and thus affecting all sibling items.\r\n            Sibling items are defined as all ProjectItem instances that were created from the same item element.\r\n            \r\n            This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state without a reevaluation\r\n            ":"。添加了不拆分项目元素并因此影响所有同胞项目的选项。\r\n            同级项目定义为从同一项目元素创建的所有ProjectItem实例。\r\n            \r\n            这是一种方便，可以理解，不一定会使项目处于完全一致的状态，而无需重新评估\r\n            \r\n","General":"一般的\r\n","\r\n            Character that will be used to replace 'unclean' ones.\r\n            ":"\r\n            将用于替换“不洁”的角色。\r\n            \r\n","\r\n            The containing project will be dirtied by the XML modification.\r\n            If there is no XML backing, the evaluated value returned is the value of the property that has been \r\n            escaped as necessary.\r\n            ":"\r\n            XML修改将使包含的项目污垢。\r\n            如果没有XML备份，则返回的评估值是已有的属性的值\r\n            必要时逃脱。\r\n            \r\n","\r\n            Constants for default (empty) project file.\r\n        ":"\r\n            默认（空）项目文件的常数。\r\n        \r\n","\r\n            The type of the task that we are wrapping.  \r\n            ":"\r\n            我们包装的任务的类型。\r\n            \r\n"," \r\n            Base class for build status events.  This class is meant\r\n            to be extended.  \r\n            ":" \r\n            构建状态事件的基类。这堂课的意思是\r\n            延长。\r\n            \r\n","\r\n            The current state of this entry.\r\n            ":"\r\n            该条目的当前状态。\r\n            \r\n","\r\n            The buildStartedEvent to use when synthesizing the build started event.\r\n            ":"\r\n            合成构建启动事件时，要使用的buildStartedEvent。\r\n            \r\n","\r\n            Condition, if any.\r\n            May be empty string.\r\n            ":"\r\n            条件（如果有）。\r\n            可以是空字符串。\r\n            \r\n","\r\n            Given a TaskHostContext, return the appropriate location of the\r\n            executable (MSBuild or MSBuildTaskHost) that we wish to use, or null\r\n            if that location cannot be resolved.\r\n            ":"\r\n            给定一个任务主持context，返回适当的位置\r\n            我们希望使用的可执行文件（msbuild或msbuildtaskhost）或null\r\n            如果该位置无法解决。\r\n            \r\n","Collection of reference assembly locations.":"参考组装位置的收集。\r\n","\r\n            Override equals\r\n            ":"\r\n            替代等于\r\n            \r\n","\r\n            Adds a new property group with contents of the given solution configuration to the project\r\n            Internal for unit-testing.\r\n            ":"\r\n            在项目中添加一个带有给定解决方案配置内容的新属性组\r\n            内部用于单位测试。\r\n            \r\n","Command line arguments that should be passed to the tool executable directly":"命令行参数应直接传递给工具可执行文件\r\n","The outputs from the targets":"目标的输出\r\n","\r\n            Overrides the default behavior of property expansion on evaluation of a ":"\r\n            覆盖财产扩展的默认行为在评估时\r\n","\r\n            Raised for TargetStartedEventArgs instances\r\n            ":"\r\n            为TargetStartedEventargs实例提出\r\n            \r\n","\r\n            of the file containing the property function.":"\r\n            包含属性函数的文件。\r\n","\r\n            Get a string from the table.\r\n            ":"\r\n            从表中获取一个字符串。\r\n            \r\n","\r\n            Adds a new build request to the request queue.\r\n            ":"\r\n            向请求队列添加新的构建请求。\r\n            \r\n","\r\n            Compares this item bucket against the given one. The comparison is\r\n            solely based on the values of the item metadata in the buckets.\r\n            ":"\r\n            将此项存储桶与给定的存储桶进行比较。 比较是\r\n            仅基于存储桶中项目元数据的值。\r\n            \r\n","\r\n            Create a new console.\r\n            ":"\r\n            创建一个新的控制台。\r\n            \r\n","\r\n            Prepare the stack of transforms that will be executed on a given set of items.\r\n            ":"\r\n            准备将在给定的项目集上执行的转换堆栈。\r\n            \r\n","\r\n            The Warning event handler\r\n            ":"\r\n            警告活动处理程序\r\n            \r\n","An Task representing the work which will be done.":"代表将要完成的工作的任务。\r\n","\r\n            Location of the matchOnMetadataOptions attribute, if any.\r\n            ":"\r\n            MATCONONMETADATATAEOPTIONS属性的位置（如果有）。\r\n            \r\n","\r\n            The request caused a circular dependency in scheduling.\r\n            ":"\r\n            该请求在调度方面引起了循环依赖性。\r\n            \r\n","\r\n            The maximum number of bytes to write \r\n            ":"\r\n            编写的最大字节数\r\n            \r\n","\r\n            Whatever framework identities we found in the manifest.\r\n            ":"\r\n            我们在清单中发现的任何框架身份。\r\n            \r\n","The configuration id.":"配置ID。\r\n","The task's condition.":"任务的条件。\r\n","\r\n            Aggregation of a set of properties that correspond to a particular sub-toolset.  \r\n            ":"\r\n            一组对应于特定子模具的属性的集合。\r\n            \r\n","proj":"Proj\r\n","Whether or not to wait for the results of this request.":"是否等待此请求的结果。\r\n","\r\n            Initialize.\r\n            ":"\r\n            初始化。\r\n            \r\n","\r\n            Locate a file in either the directory specified or a location in the\r\n            direcorty structure above that directory.\r\n            ":"\r\n            在指定的目录或位置中找到文件\r\n            该目录上方的直接结构。\r\n            \r\n","\r\n            If only one value has been added and it is not a string, it is returned unchanged.\r\n            In all other cases (no value, one string value, multiple values) the result is a\r\n            concatenation of the string representation of the values, each additionally subjected\r\n            to file path adjustment.\r\n            ":"\r\n            如果仅添加了一个值，并且不是字符串，则将其返回不变。\r\n            在所有其他情况下（无值，一个字符串值，多个值），结果是\r\n            值的字符串表示的串联，每个串联表示\r\n            提交路径调整。\r\n            \r\n","Project state that should be returned.":"项目状态应退还。\r\n","An SDK name and version to parse in the format \"SDK/Version,min=MinimumVersion\".":"SDK名称和版本，以“ SDK/版本，min = MinimumSversion”的格式解析。\r\n","\r\n            Allows data (for example, item metadata) to be represented as an attribute on the parent element instead of as a child element.\r\n            ":"\r\n            允许数据（例如，项目元数据）表示为父元素上的属性，而不是子元素。\r\n            \r\n","The ToolsVersion from the project file. May be null":"项目文件中的工具库。可能是无效的\r\n","\r\n            Include value is unescaped \r\n            ":"\r\n            包括价值是不阐明的\r\n            \r\n","\r\n            Derived class should override if it needs to release any resources.\r\n            ":"\r\n            如果需要发布任何资源，则派生类应覆盖。\r\n            \r\n","\r\n            toolsetProvider.Toolsets is already a readonly collection. \r\n            ":"\r\n            ToolSetProvider.toolsets已经是一个可读的集合。\r\n            \r\n","\r\n            Creates a task registry that does not fall back to any other task registry.\r\n            Default constructor does no work because the tables are initialized lazily when a task is registered\r\n            ":"\r\n            创建一个任务注册表，该注册表不会归还到任何其他任务注册表。\r\n            默认构造函数无效，因为注册任务时表是懒惰的\r\n            \r\n","\r\n            Note that these are somewhat different to items. Like items, they can have metadata; like properties, the metadata\r\n            can override each other. So during evaluation all the item definitions for a type are rolled together (assuming\r\n            their conditions are true) to create one ProjectItemDefinition for each type. For this reason, the ProjectItemDefinition\r\n            often will not point to a single ProjectItemDefinitionElement. The metadata within, however, will each point to a single\r\n            ProjectMetadataElement, and these can be added, removed, and modified.\r\n            ":"\r\n            请注意，这些与项目有些不同。像物品一样，它们可以具有元数据。像属性一样，元数据\r\n            可以互相覆盖。因此，在评估期间，所有类型的项目定义都卷在一起（假设\r\n            他们的条件是正确的）为每种类型创建一个ProjectItemDefinition。因此，ProjectItemDefinition\r\n            通常不会指向一个ProjectItemDefinitionElement。但是，内部的元数据将每个点\r\n            可以添加，删除和修改这些ProjectMetadataLement。\r\n            \r\n","\r\n            Performs a deep clone\r\n            ":"\r\n            执行深度克隆\r\n            \r\n","\r\n            Look up a simple property reference by the name of the property, e.g. \"Foo\" when expanding $(Foo).\r\n            ":"\r\n            通过属性的名称查找一个简单的属性引用，例如在扩展$(Foo)时\"Foo\"。\r\n            \r\n","\r\n            The length of the separator.\r\n            ":"\r\n            分离器的长度。\r\n            \r\n","\r\n            Gets the nature of the change made to the ":"\r\n            获取变更的本质\r\n","\r\n            For when the line and column each fit in a short - under 65536\r\n            (almost always will: microsoft.common.targets is less than 5000 lines long)\r\n            When loading Australian Government, for example, there are over 31,000 ElementLocation\r\n            objects so this saves 4 bytes each = 123KB \r\n            \r\n            A \"very small\" variation that used two bytes (or halves of a short) would fit about half of them\r\n            and save 4 more bytes each, but the CLR packs each field to 4 bytes, so it isn't actually any smaller.\r\n            ":"\r\n            当线和列在短时间内拟合时 - 在65536以下\r\n            （几乎总是会：Microsoft.common.targets长度小于5000行）\r\n            例如，在加载澳大利亚政府时，有31,000多个元素置境\r\n            对象，这样就可以保存4个字节= 123kb\r\n            \r\n            使用两个字节（或一半的短）的“非常小”的变化将适合其中的一半\r\n            并节省4个字节，但是CLR将每个字段包装到4个字节中，因此实际上并不是任何较小的字节。\r\n            \r\n","The xml location the itemspec comes from":"XML位置itemspec来自\r\n","\r\n            Runs all of the tasks for this target, batched as necessary.\r\n            ":"\r\n            运行此目标的所有任务，必要时进行批处理。\r\n            \r\n","\r\n            Factory for the serializer.\r\n            ":"\r\n            序列化器的工厂。\r\n            \r\n","\r\n            Get the value of a property in this project, or\r\n            an empty string if it does not exist.\r\n            Returns the unescaped value.\r\n            ":"\r\n            获取该项目中财产的价值，或\r\n            如果不存在一个空字符串。\r\n            返回Unescaper值。\r\n            \r\n","\r\n            Accessor for the build results, if any.\r\n            ":"\r\n            构建结果的登录器（如果有）。\r\n            \r\n","\r\n            Number of targets in the project. \r\n            ":"\r\n            项目中的目标数。\r\n            \r\n","\r\n            Constructor taking the registry location.\r\n            ":"\r\n            构造函数位于注册表位置。\r\n            \r\n","\r\n            Handler for request completed events.\r\n            ":"\r\n            请求完成的事件处理程序。\r\n            \r\n","\r\n            Attempts to parse the input string as a QName (see the XML Namespace spec).\r\n            Quits parsing when an invalid QName char is reached or the end of string is reached.\r\n            Returns the number of valid QName chars that were parsed.\r\n            Sets colonOffset to the offset of a colon character if it exists, or 0 otherwise.\r\n            ":"\r\n            尝试将输入字符串解析为QNAME（请参阅XML名称空间规格）。\r\n            当达到无效的Qname char或达到字符串的末端时，请退出。\r\n            返回解析的有效Qname字符的数量。\r\n            如果存在结肠特征，则将其设置为偏移的偏移，或者否则为0。\r\n            \r\n","The document element to add nodes to.":"要向其中添加节点的文档元素。\r\n","\r\n            Adds made in this scope or above.\r\n            ":"\r\n            在此范围或更高版本中添加。\r\n            \r\n","\r\n            Carries out the actions specified by the scheduler.\r\n            ":"\r\n            执行调度程序指定的操作。\r\n            \r\n","The property groups to use for each project.  Must be the same number as there are project files.":"每个项目都使用的属性组。必须与项目文件相同。\r\n","\r\n            A binary writer to help write into ":"\r\n            二进制作家来帮助写入\r\n","\r\n            Gets the default targets for the project\r\n            ":"\r\n            获取项目的默认目标\r\n            \r\n","The new task instance.":"新的任务实例。\r\n","\r\n            Logging context for logging errors / issues \r\n            encountered in the TaskHostTask itself. \r\n            ":"\r\n            记录上下文记录错误 /问题\r\n            在TaskShosttask本身中遇到。\r\n            \r\n","\r\n            The location of the node exe.  This is the full path including the exe file itself.\r\n            ":"\r\n            节点EXE的位置。这是包括EXE文件本身的完整路径。\r\n            \r\n","The list of warning codes to treat as low importance messsages.":"警告代码列表将其视为低重要性的杂物。\r\n","\r\n            Maps a configuration id to the requests which apply to it.\r\n            ":"\r\n            将配置ID映射到适用于其的请求。\r\n            \r\n","\r\n            The high-order DWORD value of the file size, in bytes.\r\n            ":"\r\n            文件大小的高阶DWord值，字节。\r\n            \r\n","\r\n            The unblocking information.\r\n            ":"\r\n            解密信息。\r\n            \r\n"," to allow tasks to set whether they want to\r\n            log an error when a task returns without logging an error.\r\n            ":" 允许任务设置是否要\r\n            当任务返回而无需记录错误时，请记录错误。\r\n            \r\n","The global properties to use for each project":"每个项目要使用的全局属性\r\n","\r\n            Wraps an unevaluated propertygroup under a target.\r\n            Immutable.\r\n            ":"\r\n            将目标组包裹在目标下。\r\n            不变。\r\n            \r\n","\r\n            Adds all implicit import nodes to the specified document.\r\n            ":"\r\n            将所有隐式导入节点添加到指定文档。\r\n            \r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n            Adds an item group after the last existing item group, if any; otherwise\r\n            adds an item group after the last existing property group, if any; otherwise\r\n            adds a new item group at the end of the project.\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n            在最后一个现有项目组之后添加一个项目组，如果有的话；否则\r\n            在最后一个现有的属性组之后添加一个项目组，如果有的话；否则\r\n            在项目末尾添加了一个新项目组。\r\n            \r\n","\r\n            Stores the SendPacket delegate to use.\r\n            ":"\r\n            存储SendPacket委托使用。\r\n            \r\n","The ScheduleResponse.":"SchedulerSponse。\r\n","\r\n            Wrapper over a string.\r\n            ":"\r\n            用字符串包装。\r\n            \r\n","\r\n            Does not store XML location information. That is not needed by the build process as all correctness checks\r\n            and evaluation has already been performed, so it is unnecessary bulk.\r\n            ":"\r\n            不存储XML位置信息。构建过程不需要所有正确性检查\r\n            并且已经进行了评估，因此这是不必要的。\r\n            \r\n","\r\n            Use this for File.Exists(path)\r\n            ":"\r\n            将其用于file.exists（路径）\r\n            \r\n","\r\n            Executes the specified task, batching it is necessary.\r\n            ":"\r\n            执行指定的任务，批处理是必要的。\r\n            \r\n","\r\n            The packet factory used to translate and route packets\r\n            ":"\r\n            用于翻译和路线包装的数据包工厂\r\n            \r\n","\r\n            Factory for ":"\r\n            工厂\r\n","\r\n            Gets the set of requests for which we require results before we may proceed.\r\n            ":"\r\n            获取在继续进行之前我们需要结果的一组请求。\r\n            \r\n","\r\n            Gets or sets the current event time.\r\n            ":"获取或设置当前事件时间。\r\n            \r\n","\r\n            The component factories.\r\n            ":"\r\n            组件工厂。\r\n            \r\n","\r\n            Get a read-only collection of the child item groups, if any, in reverse order\r\n            ":"\r\n            以相反的顺序获取仅阅读子项组（如果有）的收集\r\n            \r\n","\r\n            Writes the graph representation of how the nodes were utilized.\r\n            ":"\r\n            写出如何利用节点的图表表示。\r\n            \r\n","\r\n            Attempts to create a node on the specified machine using the specified provider.\r\n            ":"\r\n            尝试使用指定的提供商在指定的计算机上创建节点。\r\n            \r\n","The tranlator doing the translating":"旋转器进行翻译\r\n"," \r\n            This interface defines the events raised by the build engine.\r\n            Loggers use this interface to subscribe to the events they\r\n            are interested in receiving.\r\n            ":" \r\n            该界面定义了构建引擎提出的事件。\r\n            登录器使用此界面订阅他们的事件\r\n            有兴趣接收。\r\n            \r\n","\r\n            Whether to expand built-in metadata, custom metadata, or both kinds.\r\n            ":"\r\n            是扩展内置元数据，定制元数据还是两种。\r\n            \r\n","\r\n            Gets the file version of the file in which the Engine assembly lies.\r\n            ":"\r\n            获取引擎组件所在的文件的文件版本。\r\n            \r\n","Usually there'll be a single packet in the queue, but sometimes\r\n            a burst of SendData comes in, with 10-20 packets scheduled. In this case\r\n            the first scheduled task will drain all of them, and subsequent tasks\r\n            will run on an empty queue. I tried to write logic that avoids queueing\r\n            a new task if the queue is already being drained, but it didn't show any\r\n            improvement and made things more complicated.":"通常，队列中会有一个数据包\r\n            一系列的senddata进来，安排了10-20个数据包。在这种情况下\r\n            第一个计划的任务将耗尽所有这些任务，并随后的任务\r\n            将以空的队列运行。我试图编写避免排队的逻辑\r\n            如果队列已经排干，则一项新任务，但没有显示任何\r\n            改进并使事情变得更加复杂。\r\n","\r\n            Returns the path to mscorlib and system.dll\r\n            ":"\r\n            返回到Mscorlib和System.dll的路径\r\n            \r\n","\r\n            Creates a task item using the specified include and include before wildcard expansion.\r\n            ":"\r\n            使用指定的Include Include并在通配符扩展之前创建任务项。\r\n            \r\n","\r\n            Returns the metadata for the specified item type.\r\n            ":"\r\n            返回指定项目类型的元数据。\r\n            \r\n","\r\n            Gets or sets the metadata Xml\r\n            ":"\r\n            获取或设置元数据XML\r\n            \r\n","\r\n            Compares the last-write times of the given files/directories.\r\n            ":"\r\n            比较给定文件/目录的最后写时间。\r\n            \r\n","\r\n            Support Prefer32bit found in the sdk manifest\r\n            ":"\r\n            SDK清单中发现\r\n            \r\n","\r\n            Retrieves the items.\r\n            ":"\r\n            检索项目。\r\n            \r\n","Initial items list":"初始项目列表\r\n","\r\n            Retrieves the root request for the specified submission id.\r\n            ":"\r\n            检索指定提交ID的根请求。\r\n            \r\n","\r\n            Unevaluated keepDuplicates value\r\n            ":"\r\n            未评估的保留价值\r\n            \r\n","The XML element to parse":"XML元素解析\r\n","\r\n            0 is null, 1 is empty string\r\n            2-9 are reserved for future use.\r\n            Start indexing at 10.\r\n            ":"\r\n            0是null，1是空字符串\r\n            2-9保留供将来使用。\r\n            开始索引10。\r\n            \r\n","\r\n            When true, causes the build to emit a summary of project build information\r\n            ":"\r\n            如果是真的，则导致构建发出项目构建信息的摘要\r\n            \r\n"," getter.\r\n            ":" Getter。\r\n            \r\n","\r\n            Callback invoked when the endpoint shuts down.\r\n            ":"\r\n            端点关闭时调用回调。\r\n            \r\n","\r\n            A cache of tasks and the AppDomains they are loaded in.\r\n            ":"\r\n            它们加载了一系列任务及其应用程序。\r\n            \r\n","\r\n            \r\n            The first MSBuild call re-invokes the solution project instructing it to build the reference projects for the\r\n            current project.  The second MSBuild call invokes the actual project itself.  Because all reference projects have\r\n            the same additional properties, MSBuild will only build the first one it comes across and the rest will be\r\n            satisfied from the cache.\r\n            ":"第一个MSBUILD呼叫重新启动解决方案项目，指示其构建参考项目\r\n            当前的项目。第二个MSBUILD呼叫调用实际项目本身。因为所有参考项目都有\r\n            同样的其他属性，MSBuild将仅构建它遇到的第一个属性，其余的将是\r\n            从缓存中满足。\r\n            \r\n","List of matching WinMDs":"匹配Winmds的列表\r\n","\r\n            Initialize a ProjectRootElement instance by loading from the specified file path.\r\n            Uses the specified project collection and preserves the formatting of the document if specified.\r\n            ":"\r\n            通过从指定的文件路径加载来初始化ProjectRootelement实例。\r\n            使用指定的项目集合，并保留文档格式（如果指定）。\r\n            \r\n"," containing information about the SDK to resolve.":" 包含有关SDK解决的信息。\r\n","This method will return false if an attempt is made to schedule an action after the queue has been shut down.":"如果尝试在队列被关闭后试图安排行动，则此方法将返回false。\r\n",").\r\n            \r\n            ":"）。\r\n            \r\n            \r\n","\r\n            The maximum number of idle request builders to retain before we start discarding them.\r\n            ":"\r\n            在我们开始丢弃之前，要保留的最大闲置请求构建者数量。\r\n            \r\n","The global properties to use":"要使用的全局属性\r\n","The registry root used to gather installed extension SDKs.":"注册表根用于收集安装的扩展SDK。\r\n","Packet is null":"数据包为空\r\n"," of the reference.":" 参考。\r\n","\r\n            Apply a logger parameter.\r\n            parameterValue may be null, if there is no parameter value.\r\n            ":"\r\n            应用记录器参数。\r\n            如果没有参数值，则参数性可能为null。\r\n            \r\n","wrapper around key":"包装钥匙\r\n","The request which is blocking this one.":"阻止此的请求。\r\n","\r\n            If a task launches multiple parallel processes, it should ask how many cores it can use.\r\n            ":"\r\n            如果任务启动了多个并行进程，则应询问可以使用多少个内核。\r\n            \r\n","\r\n            Solution filters are included because they are a thin veneer over solutions, just\r\n            with a more limited set of projects to build, and should be treated the same way.\r\n            ":"包括溶液过滤器，因为它们是较薄的贴面，而不是解决方案，\r\n            构建更有限的项目集，应以相同的方式对待。\r\n            \r\n","\r\n            Snapshot of the current directory from the configuration this result comes from.\r\n            This should only be populated when the configuration for this result is moved between nodes.\r\n            ":"\r\n            当前目录的快照来自配置，此结果来自。\r\n            只有在节点之间移动此结果的配置时，才应填充这一点。\r\n            \r\n","\r\n            Its value must point to a valid ":"\r\n            它的价值必须指向有效的\r\n","\r\n            Location of the original condition attribute\r\n            if any\r\n            ":"\r\n            原始条件属性的位置\r\n            如果有的话\r\n            \r\n"," means not reusing any caches between evaluations,\r\n                and the passed in ":" 意味着不重复使用评估之间的任何缓存，\r\n                和过去\r\n","\r\n            Gets the XmlDocument associated with this project element.\r\n            ":"\r\n            获取与此项目元素关联的Xmldocument。\r\n            \r\n","\r\n            Cancels the currently executing task\r\n            ":"\r\n            取消当前执行任务\r\n            \r\n","\r\n             The number of elements in each page of the segmented array of type ":"\r\n             类型的分段数组的每个页面中的元素数量\r\n","Arguments for the string resource":"字符串资源的论点\r\n","\r\n            Represents the 32-bit x86 processor architecture.\r\n            ":"\r\n            代表32位X86处理器体系结构。\r\n            \r\n","\r\n            Shred item types\r\n            ":"\r\n            切碎的项目类型\r\n            \r\n","\r\n            Name of the metadata\r\n            ":"\r\n            元数据的名称\r\n            \r\n","\r\n            Properties encountered during evaluation. These are read during the first evaluation pass.\r\n            Unlike those returned by the Properties property, these are ordered, and includes any properties that\r\n            were subsequently overridden by others with the same name. It does not include any\r\n            properties whose conditions did not evaluate to true.\r\n            It does not include any properties added since the last evaluation.\r\n            ":"\r\n            评估期间遇到的属性。这些是在第一次评估通行证中读取的。\r\n            与属性属性返回的人不同，这些是订购的，并包括任何属性\r\n            随后被其他人以相同名称覆盖。它不包括任何\r\n            条件未评估为真的属性。\r\n            它不包括自上次评估以来添加的任何属性。\r\n            \r\n","\r\n            Creates a property without backing XML.\r\n            Property MAY BE global, and property MAY HAVE a reserved name (such as \"MSBuildProjectDirectory\") if indicated.\r\n            This is ONLY to be used by the Evaluator (and Project.SetGlobalProperty) and ONLY for Global, Environment, and Built-in properties.\r\n            All other properties originate in XML, and should have a backing XML object.\r\n            ":"\r\n            创建一个无需备份XML的属性。\r\n            属性可以是全局，并且属性可能具有保留名称（例如“ MSBUILDPROJECTDIRECTORY”）。\r\n            这仅由评估者（和project.set.setglobalproperty）使用，并且仅用于全球，环境和内置属性。\r\n            所有其他属性均起源于XML，并且应具有Backing XML对象。\r\n            \r\n","\r\n            The new value of the reassigned property.\r\n            ":"\r\n            重新分配属性的新值。\r\n            \r\n","\r\n            Location of the element itself\r\n            ":"\r\n            元素本身的位置\r\n            \r\n","\r\n            Regkey that we check to see whether VB Express 2010 is installed.  This will exist if it is installed, and be\r\n            properly removed after it has been uninstalled.\r\n            ":"\r\n            我们检查是否安装了VB Express 2010。如果安装它，则将存在，并且\r\n            卸载后正确删除。\r\n            \r\n","\r\n            One or more path components did not exist, so the search directory could not be opened.\r\n            ":"\r\n            不存在一个或多个路径组件，因此无法打开搜索目录。\r\n            \r\n","\r\n            This class is responsible for serializing and deserializing anything that is not \r\n            officially supported by ITranslator, but that we still want to do \r\n            custom translation of.  \r\n            ":"\r\n            该课程负责序列化和应对任何不是\r\n            由iTranslator正式支持，但我们仍然想做\r\n            自定义翻译。\r\n            \r\n","\r\n            The element referenced the item by an Update.\r\n            ":"\r\n            该元素通过更新引用该项目。\r\n            \r\n","\r\n            Gets all of the parameters on the task.\r\n            ":"\r\n            获取任务上的所有参数。\r\n            \r\n","\r\n            Lookup for reserved property names\r\n            ":"\r\n            查找保留属性名称\r\n            \r\n","\r\n            Indicate to the client that all elements of the Handshake have been sent.\r\n            ":"\r\n            向客户指示握手的所有元素已发送。\r\n            \r\n","\r\n            Queues up the output from the stderr stream of the process executing\r\n            the tool, and signals the availability of the data. The Process object\r\n            executing the tool calls this method for every line of text that the\r\n            tool writes to stderr.\r\n            ":"\r\n            从该过程执行的stderr流排队排列输出\r\n            该工具，并发出数据的可用性。过程对象\r\n            执行该工具为每行文本调用此方法\r\n            工具写入stderr。\r\n            \r\n","\r\n            Constructor that associates a set of properties with a sub-toolset version.  \r\n            ":"\r\n            将一组属性与子模式版本相关联的构造函数。\r\n            \r\n","\r\n            Implementation of a comparer that determines equality between ProjectItemInstances\r\n            ":"\r\n            实施比较，该比较决定了ProjectIteMinstances之间的平等\r\n            \r\n","\r\n            A path component in the search path refers to a file. Only directories can be enumerated.\r\n            ":"\r\n            搜索路径中的路径组件是指文件。只能列举目录。\r\n            \r\n","The node-assigned configuration id":"节点分配的配置ID\r\n","\r\n            Flags for controlling the project load.\r\n            ":"\r\n            用于控制项目负载的标志。\r\n            \r\n","\r\n            Starts a build using this project, building the specified target with the specified loggers.\r\n            Returns true on success, false on failure.\r\n            Works on a privately cloned instance. To set or get\r\n            virtual items for build purposes, clone an instance explicitly and build that.\r\n            Does not modify the Project object.\r\n            ":"\r\n            使用此项目启动构建，并使用指定的记录仪构建指定的目标。\r\n            成功返回，成功，失败。\r\n            在私人克隆实例上工作。设置或获得\r\n            用于构建目的的虚拟项目，明确克隆实例并构建该实例。\r\n            不修改项目对象。\r\n            \r\n","\r\n            Signal that we are done with this task.\r\n            ":"\r\n            信号表明我们已经完成了此任务。\r\n            \r\n","\r\n            If no default tools version is specified in the config file or registry, we'll use 2.0.\r\n            The engine will use its binpath for the matching toolset path.\r\n            ":"\r\n            如果在配置文件或注册表中未指定默认工具版本，我们将使用2.0。\r\n            该发动机将使用其BinPath进行匹配的工具集路径。\r\n            \r\n","\r\n            Valid attributes on output element\r\n            ":"\r\n            输出元素上的有效属性\r\n            \r\n","The node to which data shall be sent.":"发送数据的节点。\r\n","\r\n            ITaskItem implementation which copies the metadata on this item to the specified item.\r\n            Copies direct and item definition metadata.\r\n            Does not copy built-in metadata, and will not overwrite existing, non-empty metadata.\r\n            If the destination implements ITaskItem2, this avoids losing the escaped nature of values.\r\n            \r\n            When copying metadata to a task item which can be accessed from a task (Utilities task item)\r\n            this method will merge and expand any metadata originating with item definitions.\r\n            ":"ITASKITEM实现将本项目的元数据复制到指定项目。\r\n            副本直接和项目定义元数据。\r\n            不会复制内置元数据，也不会覆盖现有的非空元数据。\r\n            如果目的地实现了itaskItem2，则避免了失去值的逃脱性质。\r\n            \r\n            将元数据复制到可以从任务访问的任务项（公用事业任务项）\r\n            此方法将合并并扩展任何源自项目定义的元数据。\r\n            \r\n","\r\n            AppendTextUnquoted(@\"Folder name\\filename.cs\") => \"Folder name\\\\filename.cs\"\r\n            ":"\r\n            appendTextunquoted（@“文件夹名称\\ filename.cs”）=>“文件夹名称\\\\ filename.cs”\r\n            \r\n","\r\n            Subtract two doubles\r\n            ":"\r\n            减去两个双打\r\n            \r\n","\r\n            Read the project configuration information for every project in the solution, using pre-cached \r\n            solution section data. \r\n            ":"\r\n            使用预先处理的解决方案中每个项目的项目配置信息\r\n            解决方案部分数据。\r\n            \r\n","\r\n            The TargetStarted event handler\r\n            ":"\r\n            目标开始的事件处理程序\r\n            \r\n","\r\n            Initialize a parented UsingTaskParameterElement instance\r\n            ":"\r\n            使用TaskParameterElement实例初始化育儿\r\n            \r\n"," for this property indicates that this property is actually\r\n            an item array - the list of all items with the item type specified by ":" 因为此属性表明此属性实际上是\r\n            项目数组 - 所有项目的列表，其中包含由项目类型指定的项目类型\r\n","taskLoggingContext.TargetLoggingContext.Target.Name":"taskloggingContext.targetLoggingContext.target.name\r\n","\r\n            Retrieves the error targets for this target.\r\n            ":"\r\n            检索此目标的错误目标。\r\n            \r\n",", the resulting ProjectGraph\r\n                nodes might not be buildable.\r\n                To avoid corruption of the graph and subsequent builds based on the graph:\r\n                - all callback parameters must be utilized for creating the ProjectInstance, without any mutations\r\n                - the project instance should not be mutated in any way, its state should be a\r\n                full fidelity representation of the project file\r\n            ":"，由此产生的项目图\r\n                节点可能无法构建。\r\n                为了避免图形的损坏和基于图的后续构建：\r\n                 - 所有回调参数必须用于创建ProjectInstance，而无需任何突变\r\n                 - 项目实例不应以任何方式突变，其状态应为\r\n                项目文件的完整保真表示\r\n            \r\n","\r\n            The handler for the project finished event.\r\n            ":"\r\n            项目完成活动的处理程序。\r\n            \r\n","\r\n            Legacy threading semantics indicate that if a submission is to be built  \r\n            only on the in-proc node and the submission is executed synchronously, then all of its\r\n            requests will be built on the thread which invoked the build rather than a \r\n            thread owned by the BuildManager.\r\n            ":"\r\n            传统线程语义表明，如果要构建提交\r\n            仅在程序内节点上并同步执行提交\r\n            请求将建立在调用构建而不是一个调用的线程上\r\n            buildmanager拥有的线程。\r\n            \r\n","\r\n            Initialize a parented UsingTaskParameterGroupElement\r\n            ":"\r\n            使用TaskParameterGroupelement初始化育儿\r\n            \r\n","\r\n            holds all the override tasks we know about and the assemblies they exist in\r\n            ":"\r\n            保留我们知道的所有覆盖任务以及它们存在的组件\r\n            \r\n","\r\n            Starts up the node and processes messages until the node is requested to shut down.\r\n            Assumes no node reuse.\r\n            ":"\r\n            启动节点并处理消息，直到要求关闭节点为止。\r\n            假设没有node重复使用。\r\n            \r\n","\r\n            Returns the metadata with the specified key.\r\n            Returns null if it does not exist.\r\n            Attempting to get built-in metadata on a value that is not a valid path throws InvalidOperationException.\r\n            Metadata value is unescaped.\r\n            ":"\r\n            用指定的密钥返回元数据。\r\n            如果不存在，则返回null。\r\n            试图在一个不是有效路径的值上获得内置元数据会引发无效的exception。\r\n            元数据值是不渗透的。\r\n            \r\n","\r\n            Returns the largest configuration id known to the plan.\r\n            ":"\r\n            返回计划已知的最大配置ID。\r\n            \r\n","\r\n            Represents a modification for a single metadata.\r\n            ":"\r\n            表示单个元数据的修改。\r\n            \r\n","The host services to use, if any.  May be null.":"如果有的话，可以使用的主机服务。可能是无效的。\r\n","\r\n            Deserialize the file into an AssemblyFolderCollection.\r\n            ":"将文件供电到汇编封装。\r\n            \r\n","\r\n            The telemetry sent event.\r\n            ":"\r\n            遥测发送活动。\r\n            \r\n","\r\n            Constructs a response indicating that a specific submission has completed.\r\n            ":"\r\n            构建响应，表明特定提交已经完成。\r\n            \r\n","\r\n                Return type of ":"\r\n                返回类型的\r\n","true if follows the drive pattern, false otherwise.":"如果遵循驱动器模式，则为true，否则为false。\r\n","\r\n            Singly linked list node.\r\n            ":"\r\n            单链接列表节点。\r\n            \r\n","The other metadata":"另一个元数据\r\n","\r\n            Whether debugging is enabled. This is not normally\r\n            enabled as it makes everything slow.\r\n            ":"是否启用调试。这通常不是\r\n            启用，因为它使一切都放慢。\r\n            \r\n","\r\n            Gets the request currently executing on the node.\r\n            ":"\r\n            获取当前在节点上执行的请求。\r\n            \r\n","\r\n            Lazy getter for the root tools version registry key: means that this class\r\n            will never throw registry exceptions from the constructor\r\n            ":"Root Tools版本注册表的懒惰Getter：表示此类\r\n            永远不会从构造函数上抛出注册表例外\r\n            \r\n","\r\n            Returns true in the multiproc case\r\n            REVIEW: Should this mean the same thing in the distributed build case?  If we have\r\n            a build which happens to be on a distributed cluster, but the build manager has only\r\n            alotted a single machine to this build, is this true?  Because the build manager\r\n            could later decide to add more nodes to this build.\r\n            UNDONE: This means we are building with multiple processes. If we are building on\r\n            one machine then I think the maxcpu-count is still 1. In my mind this means multiple nodes either distributed or on the same machine.\r\n            ":"\r\n            在Multiproc情况下返回true\r\n            评论：这在分布式构建案例中是否意味着同一件事？如果有\r\n            恰好在分布式群集上的构建，但构建管理器只有\r\n            为此构建倾斜了一台机器，这是真的吗？因为构建经理\r\n            稍后可以决定在此构建中添加更多节点。\r\n            撤消：这意味着我们正在使用多个过程进行构建。如果我们要建立\r\n            一台机器，然后我认为MaxCPU计数仍然是1。在我看来，这意味着要么在同一台计算机上分发多个节点。\r\n            \r\n","The actual value":"实际值\r\n","\r\n            Full path to the file from which this target originated.\r\n            If it originated in a project that was not loaded and has never been \r\n            given a path, returns an empty string.\r\n            ":"\r\n            该目标起源的文件的完整路径。\r\n            如果它起源于未加载且从未有过的项目\r\n            给定路径，返回一个空字符串。\r\n            \r\n","\r\n            Compare strings\r\n            ":"\r\n            比较字符串\r\n            \r\n","\r\n            Given a set of task parameters from the UsingTask and from the task invocation, generate a dictionary that combines the two, or throws if the merge\r\n            is impossible (we shouldn't ever get to this point if it is ...)\r\n            ":"\r\n            给定一组来自​​usedtask和任务调用的任务参数，生成一个结合两者的字典，或者如果合并，\r\n            是不可能的（如果是的话，我们不应该达到这一点）\r\n            \r\n","\r\n            Expands the given unexpanded property expression using the properties in the\r\n            given expander.\r\n            ":"\r\n            使用该属性在\r\n            给予扩展器。\r\n            \r\n","\r\n            Cancels all outstanding submissions asynchronously.\r\n            ":"\r\n            取消所有出色提交的意见。\r\n            \r\n","\r\n            The endpoint destined for use by a node.\r\n            ":"\r\n            端点注定要由节点使用。\r\n            \r\n","\r\n            Node reuse enabled\r\n            ":"\r\n            节点重复使用启用\r\n            \r\n","\r\n            Determines which work is available which must be assigned to the nodes.  This includes:\r\n            1. Ready requests - those requests which can immediately resume executing.\r\n            2. Requests which can continue because results are now available but we haven't distributed them.\r\n            ":"\r\n            确定哪些可用的工作必须分配给节点。这包括：\r\n            1.就绪请求 - 可以立即恢复执行的那些请求。\r\n            2.可以继续的请求，因为结果现在可用，但我们尚未分发它们。\r\n            \r\n","\r\n            The index of the next record to be written.\r\n            ":"\r\n            下一个记录的索引要编写。\r\n            \r\n","\r\n            Pattern in path to extension SDK used to help determine if manifest is from a framework SDK\r\n            ":"\r\n            通往扩展SDK的模式用于帮助确定清单是否来自框架SDK\r\n            \r\n","\r\n            An array used to store the header byte for each packet when read.\r\n            ":"\r\n            读取时用于为每个数据包存储标头字节的数组。\r\n            \r\n","\r\n            Gets the tools version used to evaluate this project.\r\n            ":"获取用于评估该项目的工具版本。\r\n            \r\n",".\r\n                The glob root, if the glob is not fully qualified, will be the current working directory.\r\n            ":"。\r\n                如果全球没有完全限定，则全球根将是当前的工作目录。\r\n            \r\n","\r\n            Provides an enumerator over property definitions for a specified sub-toolset version \r\n            under a specified toolset version. \r\n            ":"\r\n            提供有关指定子图案版本的属性定义的枚举器\r\n            在指定的工具集中。\r\n            \r\n","\r\n            When set, we'll try reading background color.\r\n            ":"\r\n            设置后，我们将尝试读取背景颜色。\r\n            \r\n","\r\n            Determines if the given warning should be treated as an error.\r\n            ":"\r\n            确定是否应将给定的警告视为错误。\r\n            \r\n","\r\n            The Intrinsic class provides static methods that can be accessed from MSBuild's\r\n            property functions using $([MSBuild]::Function(x,y))\r\n            ":"\r\n            内在类提供可以从MSBuild访问的静态方法\r\n            使用$（[msbuild] :: function（x，y））属性功能\r\n            \r\n","\r\n            Indicates whether or not the file-spec meets the minimum requirements of a UNC pattern.\r\n            ":"\r\n            指示文件规格是否符合UNC模式的最低要求。\r\n            \r\n","\r\n            Registers a packet handler.  Not used in the in-proc node.\r\n            ":"\r\n            注册一个数据包处理程序。未在程序内节点中使用。\r\n            \r\n","\r\n            Must be implemented by derived class to subscribe to build events.\r\n            ":"\r\n            必须通过派生类实现以订阅构建事件。\r\n            \r\n","\r\n            Queues up the output from the stdout stream of the process executing\r\n            the tool, and signals the availability of the data. The Process object\r\n            executing the tool calls this method for every line of text that the\r\n            tool writes to stdout.\r\n            ":"\r\n            从进程执行的Stdout流中排列输出\r\n            该工具，并发出数据的可用性。过程对象\r\n            执行该工具为每行文本调用此方法\r\n            工具写入stdout。\r\n            \r\n","\r\n            The data associated with a config as read from a build plan.\r\n            ":"\r\n            与配置相关联的数据，如从构建计划中读取。\r\n            \r\n","\r\n            ERROR_PATH_NOT_FOUND\r\n            ":"error_path_not_found\r\n            \r\n","\r\n            Gets a value indicating whether this PRE is known by its containing collection.\r\n            ":"\r\n            获得一个值，指示此PRE是否通过其包含的收集来知道。\r\n            \r\n","\r\n            The task host context of the task host we're launching -- used to \r\n            communicate with the task host. \r\n            ":"\r\n            我们启动任务主机的任务主机上下文 - 曾经\r\n            与任务主机通信。\r\n            \r\n","\r\n            This property is set by the build engine to allow a node loggers to forward messages to the\r\n            central logger\r\n            ":"\r\n            该属性由构建引擎设置，以允许节点记录器将消息转发到\r\n            中央记录仪\r\n            \r\n","\r\n            For purposes of declaring the project that defined this item (for use with e.g. the\r\n            DeclaringProject* metadata), the entrypoint project is used for synthesized items\r\n            like those added by this API.\r\n            ":"\r\n            为了宣布定义此项目的项目（供例如\r\n            声明Project*元数据），入口点项目用于合成项目\r\n            就像该API添加的那些一样。\r\n            \r\n","\r\n            The response indicates that the submission is complete.\r\n            ":"\r\n            响应表明提交已完成。\r\n            \r\n","The locations from which to load toolsets.":"加载工具集的位置。\r\n","Targeted platform to find SDKs for":"针对的平台找到SDK\r\n","\r\n            The Any logging event\r\n            ":"\r\n            任何伐木活动\r\n            \r\n","\r\n            Implemented in the derived class\r\n            ":"\r\n            在派生类中实现\r\n            \r\n","\r\n            Lazy getter for the ToolsetConfigurationSection\r\n            Returns null if the section is not present\r\n            ":"\r\n            toolsetConfigurationsection的懒惰Getter\r\n            如果不存在该部分，则返回null\r\n            \r\n","\r\n            Gets or sets the target name            \r\n            ":"\r\n            获取或设置目标名称\r\n            \r\n","The version of the target platform SDK":"目标平台SDK的版本\r\n","\r\n            Gets the value of the target's \"Inputs\" attribute.\r\n            ":"\r\n            获取目标“输入”属性的值。\r\n            \r\n","\r\n            Sets or retrieves the logging context\r\n            ":"\r\n            设置或检索记录上下文\r\n            \r\n","\r\n            Shortcut method to mimic the original logic of creating the formatted strings.\r\n            ":"\r\n            快捷方式模仿创建格式化字符串的原始逻辑。\r\n            \r\n","\r\n            Loads the toolsets if we don't have them already.\r\n            ":"\r\n            如果我们还没有它们，则加载工具集。\r\n            \r\n","\r\n            Run before the object has been deserialized\r\n            UNDONE (Logging.)  Can this and the next function go away, and instead return a BuildEventContext.Invalid from\r\n            the property if the buildEventContext field is null?\r\n            ":"\r\n            在对象被启用之前运行\r\n            撤消（记录）可以和下一个功能消失，而是从buildeventcontext.invalid返回\r\n            该属性如果buildEventContext字段为null？\r\n            \r\n","\r\n            This helper base class provides default functionality for tasks. This class can only be instantiated in a derived form.\r\n            ":"\r\n            该辅助基类提供任务的默认功能。该类只能以派生形式实例化。\r\n            \r\n","class, IItem.":"上课，iITEM。\r\n","\r\n            Get the descriptions for all the task's parameters.\r\n            ":"\r\n            获取所有任务参数的描述。\r\n            \r\n"," based ProjectInstance.\r\n            ":" 基于ProjectInstance。\r\n            \r\n","name of the project":"该项目的名称\r\n","\r\n            Sub-toolset version to explicitly evaluate the toolset with.\r\n            ":"\r\n            子模式版本以明确评估工具集。\r\n            \r\n"," static constructor\r\n            to ensure it initializes ":" 静态构造函数\r\n            确保其初始化\r\n","\r\n            Removes an item from the project, if present.\r\n            Returns true if it was present, false otherwise.\r\n            ":"\r\n            如果存在，请从项目中删除项目。\r\n            如果存在，则返回true，否则为错误。\r\n            \r\n","\r\n            The logger registered to the logging service when no other one is.\r\n            ":"\r\n            当没有其他人时，记录器注册到记录服务。\r\n            \r\n","\r\n            Add a new toolset.\r\n            Replaces any existing toolset with the same tools version.\r\n            ":"\r\n            添加新的工具集。\r\n            用相同的工具版本代替任何现有的工具集。\r\n            \r\n","\r\n            Expand bare metadata, then properties, then item expressions\r\n            ":"\r\n            扩展裸元数据，然后扩展属性，然后扩展项目表达式\r\n            \r\n","SDK for which to find the installed platforms":"SDK为其找到已安装的平台\r\n"," will still be used to hold the data for this (pseudo) ProjectElement, but\r\n            it will not be added to the Xml tree.  \r\n            ":" 仍将用于保存此（伪）项目的数据，但是\r\n            它不会添加到XML树中。\r\n            \r\n","\r\n            Version evaluation is never allowed for operators\r\n            ":"\r\n            运营商永远不允许版本评估\r\n            \r\n","\r\n            Number of projects currently loaded into this collection.\r\n            ":"\r\n            当前加载到此集合中的项目数量。\r\n            \r\n","\r\n            Retrieves the results for the specified build request.\r\n            ":"\r\n            检索指定构建请求的结果。\r\n            \r\n","\r\n            Thrown if the project XML root element to unload is still in use by a loaded project or its imports.\r\n            ":"\r\n            如果要卸载的项目XML根元素仍在使用已加载的项目或其导入的项目中。\r\n            \r\n","\r\n            Adds a request to the set of waiting requests.\r\n            ":"\r\n            将请求添加到一组等待请求中。\r\n            \r\n","\r\n            Location of the Returns attribute\r\n            ":"\r\n            退货属性的位置\r\n            \r\n","Val1;Val2;Val3":"val1; val2; val3\r\n","\r\n            Re-initialize.\r\n            Unit tests need this when they enable \"unsafe\" methods -- which will then go in the collection,\r\n            and mess up subsequent tests.\r\n            ":"重新定位。\r\n            单位测试在启用“不安全”方法时需要此操作 - 然后将进入集合，\r\n            并混乱后续测试。\r\n            \r\n","\r\n            External projects support\r\n            ":"\r\n            外部项目支持\r\n            \r\n","The full path to the project file that is resolving the SDK.":"解决SDK的项目文件的完整路径。\r\n","\r\n            Get the result code.\r\n            ":"\r\n            获取结果代码。\r\n            \r\n","\r\n            Location of the defaulttargets attribute, if any\r\n            ":"\r\n            defaulttargets属性的位置，如果有的话\r\n            \r\n","The project xml root element in question.":"所讨论的项目XML根元素。\r\n","\r\n            Global properties used during this evaluation.\r\n            ":"\r\n            在此评估中使用的全局属性。\r\n            \r\n","\r\n            Delegate to retrieving files.  For unit testing only.\r\n            ":"\r\n            委托检索文件。仅用于单元测试。\r\n            \r\n","\r\n            The TargetFinished event handler\r\n            ":"\r\n            目标完成的事件处理程序\r\n            \r\n","\r\n            Read project configurations in solution configurations section.\r\n            ":"\r\n            在解决方案配置部分中读取项目配置。\r\n            \r\n","\r\n            The binary logger Verbosity is always maximum (Diagnostic). It tries to capture as much\r\n            information as possible.\r\n            ":"\r\n            二进制记录仪的冗长始终是最大的（诊断）。它试图捕获尽可能多\r\n            信息尽可能。\r\n            \r\n","\r\n            and the value of this property can therefore be left at is default of ":"\r\n            因此，该属性的价值可以留在\r\n","\r\n            The return value from the implementation of ":"\r\n            从实施中的回报值\r\n","\r\n                Gets the project nodes representing the entry points.\r\n            ":"获取代表入口点的项目节点。\r\n            \r\n","\r\n            Constructor.\r\n            State is given arbitrary provided name, which will appear in the debugger callstack: \"ASSEMBLYNAME!FILENAME.STATENAME(...LOCALS...)\"\r\n            Early locals are any locals whose names and types available at the time the state was created. May be null.\r\n            \"Calling Type.GetMethod() is slow (10,000 calls can take ~1 minute). So defer that to later.\"\r\n            CALLED ONLY FROM THE DEBUGGER MANAGER.\r\n            ":"\r\n            构造函数。\r\n            为状态提供了任意提供的名称，该名称将出现在调试器Callstack中：“ assemblyName！filename.statename（...当地人...）”\r\n            早期的当地人是任何当地人在创建该州时可用的名称和类型的当地人。可能是无效的。\r\n            “呼叫type.getMethod（）很慢（10,000个呼叫可能需要约1分钟）。请稍后推迟。”\r\n            仅来自调试器经理。\r\n            \r\n","\r\n            MaxPlatformVersionAttribute metadata name\r\n            ":"\r\n            MaxPlatFormVersionAttribute元数据名称\r\n            \r\n","Type of items to return":"返回的项目类型\r\n","WaitHandle returns something other than 0 or 1":"Waithandle返回0或1以外的东西\r\n","The runtime version property from the project file.":"项目文件中的运行时版本属性。\r\n","\r\n            Retrieves the task node.\r\n            ":"\r\n            检索任务节点。\r\n            \r\n","\r\n            Gets or sets whether to capture and embed project and target source files used during the build.\r\n            ":"\r\n            获取或设置是捕获和嵌入项目和构建过程中使用的目标源文件。\r\n            \r\n","\r\n            The timeout for endpoints to shut down.\r\n            ":"\r\n            端点关闭的超时。\r\n            \r\n","\r\n            Extension SDK moniker\r\n            ":"\r\n            扩展SDK绰号\r\n            \r\n","\r\n            Explicitly removes previously granted CPU cores from a request.\r\n            ":"\r\n            明确从请求中删除先前授予的CPU内核。\r\n            \r\n","The metaproject path name":"Metaproject路径名\r\n","Help keyword.":"帮助关键字。\r\n","The item to check for a match.":"检查比赛的项目。\r\n","\r\n            Creates a ProjectPropertyElement representing this instance.\r\n            ":"\r\n            创建代表此实例的ProjectPropertyelement。\r\n            \r\n","\r\n            Number of ginormous strings to keep\r\n            By observation of Auto7, there are about three variations of the huge solution config blob\r\n            There aren't really any other strings of this size, but make it 10 to be sure. (There will barely be any misses)\r\n            ":"\r\n            保持巨大的弦数\r\n            通过观察auto7，大约有三个变体的巨大解决方案config blob\r\n            确实没有其他这种大小的字符串，但是可以肯定的是10。 （几乎不会错过）\r\n            \r\n","\r\n            Get the unescaped value of a property in this project, or\r\n            an empty string if it does not exist.\r\n            ":"\r\n            获取该项目中财产的未阐明价值，或\r\n            如果不存在一个空字符串。\r\n            \r\n","\r\n            Child tasks below the target (both regular tasks and \"intrinsic tasks\" like ItemGroup and PropertyGroup).\r\n            This is a read-only list unless the instance has been modified using AddTask.\r\n            ":"\r\n            在目标下方的子任务（常规任务和“固有任务”，例如ItemGroup和PropertyGroup）。\r\n            除非使用addTask修改了实例，否则这是仅读取列表。\r\n            \r\n","\r\n            A cancellation token source used to cancel graph build scheduling\r\n            ":"\r\n            取消代币源用于取消图形构建计划\r\n            \r\n","\r\n            All the files that during evaluation contributed to this project, as ProjectRootElements,\r\n            with the ProjectImportElement that caused them to be imported.\r\n            This does not include projects that were never imported because a condition on an Import element was false.\r\n            The outer ProjectRootElement that maps to this project itself is not included.\r\n            ":"\r\n            评估期间的所有文件都为该项目做出了贡献，作为ProjectRootelements，\r\n            带有导致它们进口的ProjectImportelement。\r\n            这不包括从未进口的项目，因为导入元素的条件是错误的。\r\n            不包括映射到该项目本身的外部项目Rootelement。\r\n            \r\n","\r\n            Helper class to convert ItemGroup parameters to a string value for logging.\r\n            ":"\r\n            助手类将项目组参数转换为用于记录的字符串值。\r\n            \r\n","\r\n            Caching MSBuild exe configuration.\r\n            Used only by ReadApplicationConfiguration factory function (default) as oppose to unit tests config factory functions\r\n            which must not cache configs.\r\n            ":"\r\n            缓存MSBUILD EXE配置。\r\n            仅由ReadApplicationConfiguration Factory功能（默认）使用，而不是单位测试配置工厂功能\r\n            一定不能缓存配置。\r\n            \r\n","Length of the substring.":"子字符串的长度。\r\n","), \r\n            etc. ":"），\r\n            等等\r\n","\r\n            Start the timer.\r\n            ":"\r\n            启动计时器。\r\n            \r\n","\r\n            Removes an item.\r\n            Returns true if it was previously present, otherwise false.\r\n            ":"\r\n            删除项目。\r\n            如果以前存在，则返回true，否则为错误。\r\n            \r\n","custom timestamp for the event":"该活动的定制时间戳\r\n","\r\n            Gets an instance of a private TaskLoggingHelper class containing task logging methods.\r\n            This is necessary because ToolTask lives in a different assembly than the task inheriting from it\r\n            and needs its own separate resources.\r\n            ":"\r\n            获取包含任务记录方法的私有taskLoggingHelper类的实例。\r\n            这是必需的\r\n            并且需要自己的独立资源。\r\n            \r\n","\r\n            Statically specifies what targets a project calls on its references\r\n            ":"\r\n            静态地指定目标是针对其参考的原因\r\n            \r\n","\r\n            Finds the differences in the keys between the two given hashtables.\r\n            ":"\r\n            找到两个给定的Hashtables之间的键差异。\r\n            \r\n","\r\n            On project in order to keep Project's expander hidden.\r\n            ":"\r\n            在项目上，以使项目的扩展器隐藏起来。\r\n            \r\n","\r\n            Returns a list of items of the specified type.\r\n            If there are none, returns an empty list.\r\n            ":"\r\n            返回指定类型的项目列表。\r\n            如果没有，请返回一个空列表。\r\n            \r\n","\r\n            Filename for the MSBuild tasks (v4), used for shimming in loading \r\n            task factory UsingTasks\r\n            ":"\r\n            MSBUILD任务（V4）的文件名，用于加载\r\n            任务工厂使用任务\r\n            \r\n","It is only valid to call this method when the engine is in the Idle or\r\n            Waiting state because the engine can only service one active request at a time.":"仅当引擎处于空闲状态或\r\n            等待状态，因为引擎一次只能为一个活动请求提供服务。\r\n","The file information which indicates where the warning happened":"指示警告发生何处的文件信息\r\n","\r\n            description of an item vector with a transform, right hand side. \r\n            ":"\r\n            具有转换，右侧的项目向量的描述。\r\n            \r\n","\r\n            Constructor for items with metadata.\r\n            Called when a ProjectInstance is created.\r\n            Include may be empty.\r\n            Direct metadata may be null, indicating no metadata. It will be cloned.\r\n            Metadata collection provided is cloned.\r\n            Mutability follows the project.\r\n            ":"\r\n            具有元数据的物品的构造函数。\r\n            创建ProjectInstance时调用。\r\n            包含可能是空的。\r\n            直接元数据可能为无效，表明没有元数据。它将被克隆。\r\n            提供的元数据收集是克隆的。\r\n            项目遵循该项目。\r\n            \r\n","\r\n            Constructor for multiple input source files\r\n            ":"\r\n            多个输入源文件的构造函数\r\n            \r\n","\r\n            Sets all of the specified parameters on the task.\r\n            ":"\r\n            设置任务上的所有指定参数。\r\n            \r\n","\r\n            Actual collection of properties in this project,\r\n            for the build to start with.\r\n            ":"\r\n            实际收集该项目中的属性，\r\n            为了构建。\r\n            \r\n","The architecture of the build tools file to get":"构建工具文件的架构以获取\r\n","\r\n            Targets explicitly specified in the build request.\r\n            ":"\r\n            构建请求中明确指定的目标。\r\n            \r\n"," \r\n            This constructor allows timestamp to be set\r\n            ":" \r\n            该构造函数允许设置时间戳\r\n            \r\n","\r\n            Location of the originating file itself, not any specific content within it.\r\n            Never returns null, even if the file has not got a path yet.\r\n            ":"\r\n            原始文件本身的位置，而不是其中的任何特定内容。\r\n            即使文件还没有路径，也永远不会返回null。\r\n            \r\n","\r\n            The id of the submission.\r\n            ":"\r\n            提交的ID。\r\n            \r\n","The invalid project file (can be empty string).":"无效的项目文件（可以是空字符串）。\r\n","\r\n            A function that mutates the value. This function should be side-effect free,\r\n            as it may run multiple times when races occur with other threads.":"\r\n            突变值的函数。此功能应无副作用，\r\n            因为当其他线程发生比赛时可能会多次运行。\r\n","\r\n            The target is ready to execute its tasks, batched as needed.\r\n            \r\n            Transitions:\r\n            ErrorExecution, Completed\r\n            ":"\r\n            目标准备执行其任务，并根据需要进行批处理。\r\n            \r\n            过渡：\r\n            errorexcution，完成\r\n            \r\n","\r\n            Gets or sets the continue on error value. \r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"\r\n            获取或设置继续误差值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n","The object may be disposed earlier that the requested time if\r\n            MSBuild needs to reclaim memory.":"该对象可以较早地处置，如果请求的时间\r\n            MSBUILD需要回收内存。\r\n","\r\n            Performs logical NOT on left child\r\n            Does not update conditioned properties table\r\n            ":"\r\n            执行逻辑不在左边的孩子\r\n            不更新条件属性表\r\n            \r\n","\r\n            Implement IEquatable\r\n            ":"\r\n            实现Iquabal\r\n            \r\n","\r\n            Context to log messages and events in.\r\n            ":"\r\n            上下文以记录消息和事件中的上下文。\r\n            \r\n","\r\n            Writes a newline to the log.\r\n            ":"\r\n            写下日志的新线。\r\n            \r\n","\r\n            Logs that a task has finished executing.\r\n            ":"\r\n            记录任务已完成执行。\r\n            \r\n","\r\n            Valid attribute list when only Condition and Label are valid\r\n            ":"\r\n            有效的属性列表仅当条件和标签有效时\r\n            \r\n","\r\n            The BuildStarted event handler\r\n            ":"\r\n            构建的事件处理程序\r\n            \r\n","\r\n            Implementation of HostServices that\r\n            mediates access from the build to the host.\r\n            ":"\r\n            实施主机服务\r\n            调解从构建到主机的访问。\r\n            \r\n","\r\n            The targets to build in each project specified by the ":"\r\n            在每个项目中构建的目标\r\n","The path to the config file.":"配置文件的路径。\r\n","MSBuild engine will call this to initialize the factory. This should initialize the factory enough so that the \r\n            factory can be asked whether or not task names can be created by the factory.  If a task factory implements ITaskFactory2, \r\n            this Initialize method will be called in place of ITaskFactory.Initialize.":"MSBUILD引擎将其称为初始化工厂。这应该足够初始化工厂，以便\r\n            可以询问工厂是否可以由工厂创建任务名称。如果任务工厂实现了itaskFactory2，\r\n            此初始化方法将被称为ItaskFactory.Initialize。\r\n","Details of event to raise.":"事件的详细信息要提高。\r\n","\r\n            Writes out as many configurations to disk as we can, under the assumption that inactive configurations\r\n            probably aren't going to be accessed again (the exception is re-entrant builds) and we want to make as much\r\n            space as possible now for future projects to load.\r\n            ":"\r\n            在假设无效配置的假设下，尽可能多地写入磁盘的配置\r\n            可能不会再次访问（例外是重新组件），我们希望做得太多\r\n            现在，尽可能多地加载项目。\r\n            \r\n","\r\n            Location of the original PropertyName attribute\r\n            ":"\r\n            原始属性名称属性的位置\r\n            \r\n","\r\n            Coerce the arguments according to the parameter types\r\n            Will only return null if the coercion didn't work due to an InvalidCastException.\r\n            ":"\r\n            根据参数类型胁迫论点\r\n            只有由于无效的CastException而无法工作，才会返回NULL。\r\n            \r\n","\r\n            SDK identifier from the moniker\r\n            ":"\r\n            来自绰号的SDK标识符\r\n            \r\n","\r\n            Project that this item lives in.\r\n            ProjectDefinitions always live in a project.\r\n            ":"\r\n            投影此项目居住。\r\n            ProjectDefinitions始终生活在一个项目中。\r\n            \r\n","\r\n            Escape hatch for problems arising from https://github.com/microsoft/msbuild/pull/4420.\r\n            ":"\r\n            从https://github.com/microsoft/msbuild/pull/4420出现的问题。\r\n            \r\n","\r\n            Mapping of project full paths to plan configuration data.\r\n            ":"映射项目完整路径以计划配置数据。\r\n            \r\n","\r\n             Finds all the globs specified in item includes.\r\n             ":"\r\n             查找项目中指定的所有地球。\r\n             \r\n","\r\n            Modulo two longs\r\n            ":"\r\n            Modulo两个渴望\r\n            \r\n","\r\n            Gets or sets the BeforeTargets value.\r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"\r\n            获取或设置buforetargets值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n","\r\n            Gets the evaluated project instance represented by this node in the graph.\r\n            ":"\r\n            获取图表中此节点表示的评估项目实例。\r\n            \r\n","\r\n            Constructor that takes a string description of the registry\r\n            key or value causing the error.\r\n            ":"\r\n            对注册表进行字符串描述的构造函数\r\n            键或值导致错误。\r\n            \r\n","\r\n            Clear out the appdomain wide cache of Platform and Extension SDKs.\r\n            ":"\r\n            清除平台和扩展SDK的AppDomain广泛缓存。\r\n            \r\n","\r\n            Parse a ProjectOutputElement\r\n            ":"\r\n            解析projectOutuputelement\r\n            \r\n","\r\n            The data flow buffer for logging events.\r\n            ":"\r\n            记录事件的数据流缓冲区。\r\n            \r\n","\r\n            This constructor creates a new task item, given the item spec.\r\n            ":"\r\n            给定项目规范，该构造函数创建了一个新任务项。\r\n            \r\n","\r\n            Check that the number of function arguments is correct.\r\n            ":"\r\n            检查函数参数的数量是否正确。\r\n            \r\n","\r\n            Verifies the BuildManager is in the required state, and throws a ":"\r\n            验证BuildManager处于所需状态，并抛出一个\r\n","\r\n            Returns the configuration with the specified id.\r\n            ":"\r\n            用指定的ID返回配置。\r\n            \r\n","\r\n            Reports a configuration response to the request, allowing it to satisfy outstanding requests.\r\n            ":"\r\n            向请求报告配置响应，使其满足未偿还的请求。\r\n            \r\n","List expression to split":"列表表达式拆分\r\n","\r\n            The endpoint destined for use by the Build Manager\r\n            ":"\r\n            端点注定要由构建管理器使用\r\n            \r\n","\r\n            Takes a project in the solution and a base property name, and creates a new property name\r\n            that can safely be used as an XML element name, and is also unique to that project (by\r\n            embedding the project's GUID into the property name.\r\n            ":"\r\n            在解决方案和基本属性名称中获取一个项目，并创建一个新的属性名称\r\n            可以安全地将其用作XML元素名称，并且也是该项目所独有的（通过\r\n            将项目的GUID嵌入到属性名称中。\r\n            \r\n","\r\n            Filename for the MSBuild tasks (v12), used for shimming in loading\r\n            task factory UsingTasks\r\n            ":"\r\n            MSBUILD任务的文件名（V12），用于加载\r\n            任务工厂使用任务\r\n            \r\n"," // NA\r\n             ":" // na\r\n             \r\n","\r\n            Enum that specifies how an item element references an item\r\n            ":"\r\n            指定项目元素如何引用项目的枚举\r\n            \r\n","\r\n              Whether the reload should preserve formatting or not. A null value causes the reload to reuse the existing ":"\r\n              重新加载是否应保留格式。零值导致重新加载重复使用现有\r\n","\r\n            We know the string coming in is a valid XML fragment. (The project loaded after all.)\r\n            So for example we can ignore an open comment tag without a matching closing comment tag.\r\n            ":"\r\n            我们知道进入的字符串是有效的XML片段。 （毕竟已经加载了项目。）\r\n            因此，例如，我们可以忽略一个开放的评论标签，而无需匹配的关闭注释标签。\r\n            \r\n","\r\n            Path to target platform sdk if it exists, it may not if there is no target platform is installed\r\n            ":"\r\n            通往目标平台SDK的路径，如果存在，则可能不会安装目标平台\r\n            \r\n","\r\n            Number of children of any kind\r\n            ":"\r\n            任何类型的孩子人数\r\n            \r\n","The project that defined the item.":"定义项目的项目。\r\n","\r\n             Some project APIs need to do analysis that requires the Evaluator to record more data than usual as it evaluates.\r\n             This method checks if the Evaluator was run with the extra required settings and if not, does a re-evaluation.\r\n             If a re-evaluation was necessary, it saves this information so a next call does not re-evaluate.\r\n            \r\n             Using this method avoids storing extra data in memory when its not needed.\r\n             ":"\r\n             一些项目API需要进行分析，这需要评估者在评估时记录比平常更多的数据。\r\n             此方法检查评估器是否使用额外的必需设置运行，如果没有，则进行重新评估。\r\n             如果需要重新评估，则可以节省此信息，因此下一个呼叫不会重新评估。\r\n            \r\n             使用此方法，避免在不需要时将额外的数据存储在内存中。\r\n             \r\n","\r\n            Handler for new configuration requests.\r\n            ":"\r\n            新配置请求的处理程序。\r\n            \r\n","\r\n            Applies the specified duration offset to the configurations which refer to this one.\r\n            ":"\r\n            将指定的持续时间偏移应用于指代此的配置。\r\n            \r\n"," of the target framework.\r\n            ":" 的目标框架。\r\n            \r\n","\r\n            A ProjectItemElement could have resulted in several items if it contains wildcards or item or property expressions.\r\n            Before any edit to a ProjectItem (remove, rename, set metadata, or remove metadata) this must be called to make\r\n            sure that the edit does not affect any other ProjectItems originating in the same ProjectItemElement.\r\n            \r\n            For example, an item xml with an include of \"@(x)\" could evaluate to items \"a\", \"b\", and \"c\". If \"b\" is removed, then the original\r\n            item xml must be removed and replaced with three, then the one corresponding to \"b\" can be removed.\r\n            \r\n            This is an unsophisticated approach; the best that can be said is that the result will likely be correct, if not ideal.\r\n            For example, perhaps the user would rather remove the item from the original list \"x\" instead of expanding the list.\r\n            Or, perhaps the user would rather the property in \"$(p)\\a;$(p)\\b\" not be expanded when \"$(p)\\b\" is removed.\r\n            If that's important, the host can manipulate the ProjectItemElement's directly, instead, and it can be as fastidious as it wishes.\r\n            ":"\r\n            如果ProjectItemelement包含通配符或项目或属性表达式，则可能会导致几个项目。\r\n            在对ProjectItem进行任何编辑（删除，重命名，设置元数据或删除元数据）之前，必须调用此操作以进行\r\n            当然，编辑不会影响源自同一ProjectItemelement的任何其他projectItems。\r\n            \r\n            例如，一个具有“@（x）”包含的项目XML可以评估“ A”，“ B”和“ C”项目。如果删除了“ b”，则原始\r\n            必须删除项目XML并替换为三个，然后可以删除与“ B”相对应的一个。\r\n            \r\n            这是一种不老练的方法。最好的说法是，即使不是理想的话，结果可能是正确的。\r\n            例如，也许用户宁愿从原始列表“ x”中删除项目，而不是扩展列表。\r\n            或者，也许用户宁愿在“ $（p）\\ a; $（p）\\ b”中使用该属性时，当删除“ $（p）\\ b”时不会扩展。\r\n            如果这很重要，主机可以直接操纵ProjectItemelement，而它可以随心所欲。\r\n            \r\n","\r\n            Indicates an invalid submission identifier.\r\n            ":"\r\n            指示一个无效的提交标识符。\r\n            \r\n","\r\n            Exposes build engine functionality that was made available in newer versions of MSBuild.\r\n            ":"\r\n            公开构建引擎功能，该功能可在MSBuild的较新版本中提供。\r\n            \r\n"," after setting the last property of the object.":" 设置对象的最后一个属性之后。\r\n","\r\n            Line, column, file information\r\n            ":"\r\n            行，列，文件信息\r\n            \r\n","\r\n            This value was determined empirically by looking at how many items tend to be transmitted for \"normal\" projects versus the ones\r\n            which benefit from this technique.\r\n            ":"\r\n            该值是通过查看“正常”项目倾向于传输多少个项目来确定的值\r\n            这项技术受益。\r\n            \r\n","\r\n            define the singleton instance of the event source\r\n            ":"\r\n            定义事件源的单例实例\r\n            \r\n","\r\n            EvaluateExpression,\r\n            ":"\r\n            评估表达，\r\n            \r\n","The condition being evaluated.":"正在评估的条件。\r\n","The global properties to use. May be null in which case the containing project collection's global properties will be used.":"要使用的全局属性。在这种情况下，将使用包含项目集合的全局属性的情况。\r\n","\r\n            Load information about the task factory itself\r\n            ":"\r\n            加载有关任务工厂本身的信息\r\n            \r\n"," element defined in\r\n            the containing ":" 定义的元素\r\n            包含\r\n","\r\n            Creates a ProjectInstance directly.\r\n            No intermediate Project object is created.\r\n            This is ideal if the project is simply going to be built, and not displayed or edited.\r\n            Global properties may be null.\r\n            Tools version may be null.\r\n            Evaluation context may be null.\r\n            ":"\r\n            直接创建一个ProjectInstance。\r\n            没有创建中间项目对象。\r\n            如果仅仅要构建或不显示或编辑该项目，这是理想的选择。\r\n            全局属性可能为零。\r\n            工具版本可能为空。\r\n            评估上下文可能是无效的。\r\n            \r\n","Null if properties is null, or a list containing one or more of the  properties in the properties enumerator":"null如果属性为null，则或包含属性中包含一个或多个属性的列表\r\n","\r\n            Get the value of a metadata on this item, or\r\n            String.Empty if it does not exist or has no value.\r\n            Includes any metadata inherited from item definitions and any built-in metadata.\r\n            To determine whether a piece of metadata is actually present\r\n            but with an empty value, use ":"\r\n            在此项目上获取元数据的价值，或\r\n            string.empty如果不存在或没有价值。\r\n            包括从项目定义和任何内置元数据继承的任何元数据。\r\n            确定是否真的存在一块元数据\r\n            但是有一个空价值，请使用\r\n","\r\n            A logging detail entry. Describes what TLDA decided about inputs / outputs\r\n            ":"\r\n            记录细节条目。描述TLDA关于输入 /输出的决定\r\n            \r\n","\r\n            Raises the OnRequestComplete event.\r\n            ":"\r\n            举起OnRequestComplete活动。\r\n            \r\n"," has been called but before ":" 已经被打电话了\r\n"," if the specified SDK reference has the same version as the specified result, otherwise ":" 如果指定的SDK参考具有与指定结果相同的版本，则\r\n","A description of the forwarding logger":"转发记录仪的描述\r\n","\r\n            The AppDomain to which this refers is the one in which MSBuild was launched,\r\n            not the one in which the Task was launched.\r\n            ":"\r\n            该提到的AppDomain是MSBuild启动的AppDomain，\r\n            不是启动任务的人。\r\n            \r\n","\r\n            Logs an error using the specified resource string and other error details. \r\n            If the message has an error code prefixed, the code is extracted and logged with the message. If a\r\n            help keyword prefix has been provided, a help keyword for the host IDE is also logged with the message. The help\r\n            keyword is composed by appending the error message resource string name to the prefix.\r\n            \r\n            A task can provide a help keyword prefix either via the Task (or TaskMarshalByRef) base class constructor, or the\r\n            Task.HelpKeywordPrefix (or AppDomainIsolatedTask.HelpKeywordPrefix) property.\r\n            \r\n            Thread safe.\r\n            ":"\r\n            使用指定的资源字符串和其他错误详细信息记录错误。\r\n            如果消息具有前缀的错误代码，则将提取并记录该消息。如果一个\r\n            已经提供了帮助关键字的前缀，该消息还记录了主机IDE的帮助关键字。帮助\r\n            关键字是通过将错误消息资源字符串名称附加到前缀中来组成的。\r\n            \r\n            任务可以通过任务（或taskmarshalbyref）基类构造函数或\r\n            task.helpkeywordprefix（或app domainisolatedTask.helpkeywordprefix）属性。\r\n            \r\n            线程安全。\r\n            \r\n","(void*)(&source) == nullptr":"（void*）（＆source）== nullptr\r\n","Importance of command line -- controls whether\r\n            the command line will be displayed by less verbose loggers.":"命令行的重要性 - 控制是否\r\n            命令行将通过较少的详细记录仪显示。\r\n","Location of the platform SDK if it is found, empty string if it could not be found":"平台SDK的位置（如果找到），则无法找到空字符串\r\n"," of the task.":" 任务。\r\n","\r\n            Represents the logical negation of a boolean switch. \r\n            ":"\r\n            表示布尔开关的逻辑否定。\r\n            \r\n","\r\n            Expected location that MSBuild tasks (v14+) is picked up from if the user \r\n            references it with just a simple name, used for shimming in loading \r\n            task factory UsingTasks\r\n            ":"\r\n            如果用户从用户那里拾取了MSBUILD任务（V14+）的预期位置\r\n            引用它仅用一个简单的名称，用于加载时弹药\r\n            任务工厂使用任务\r\n            \r\n","\r\n            Add the task host context to this handshake, to make sure that task hosts with different contexts \r\n            will have different handshakes.  Shift it into the upper 32-bits to avoid running into the \r\n            session ID.\r\n            ":"\r\n            将任务主机上下文添加到此握手中，以确保任务主机具有不同的上下文\r\n            将有不同的握手。将其转移到上部32位，以避免进入\r\n            会话ID。\r\n            \r\n","collection of all locals (both early and late) for this frame. May be null.":"该框架的所有当地人（早期和晚期）收集。可能是无效的。\r\n","\r\n            Condition on the element.\r\n            ":"\r\n            元素的条件。\r\n            \r\n","\r\n            Returns true if a configuration with the specified id exists in the cache.\r\n            ":"\r\n            如果缓存中存在具有指定ID的配置，则返回true。\r\n            \r\n","\r\n            Throws out the deserialized items.\r\n            ":"\r\n            扔掉绝对序列化的物品。\r\n            \r\n","\r\n            Verifies that the current state is as expected.\r\n            ":"\r\n            验证当前状态是否如预期。\r\n            \r\n","The .tlog files to ignore":".tlog文件要忽略\r\n"," to clone":" 克隆\r\n","\r\n            Enumerates item lists per each item type under the lock.\r\n            ":"\r\n            列出锁定下每个项目类型的项目列表。\r\n            \r\n","\r\n            Retrieves the named metadata from the item definition, if any.\r\n            If it is not present, returns null\r\n            ":"\r\n            从项目定义（如果有）中检索命名的元数据。\r\n            如果不存在，则返回null\r\n            \r\n","\r\n            Retrieves the node logging context.\r\n            ":"\r\n            检索节点记录上下文。\r\n            \r\n","\r\n            Gets an instance of a shared resources TaskLoggingHelper class containing task logging methods.\r\n            This is necessary because ToolTask lives in a different assembly than the task inheriting from it\r\n            and needs its own separate resources.\r\n            ":"\r\n            获取包含任务记录方法的共享资源TaskLoggingHelper类。\r\n            这是必需的\r\n            并且需要自己的独立资源。\r\n            \r\n","\r\n            Handler for task started events\r\n            ":"\r\n            任务的处理程序开始事件\r\n            \r\n","\r\n            Gets the item's type.\r\n            ":"\r\n            获取项目的类型。\r\n            \r\n","\r\n            Gets the evaluated property value.\r\n            Cannot be set directly: only the unevaluated value can be set.\r\n            Is never null.\r\n            ":"\r\n            获取评估的属性价值。\r\n            不能直接设置：只能设置未评估的值。\r\n            永远不会无效。\r\n            \r\n"," originated. The intent is to affect all other sibling items.\r\n            ":" 起源。目的是影响所有其他同胞项目。\r\n            \r\n","\r\n            By default, evaluations performed via ":"\r\n            默认情况下，通过\r\n","Verbosity level.":"详细的水平。\r\n",". Returns null if this ":"。如果此返回null\r\n","\r\n            Constructor takes the token type and the string that\r\n            represents the token.\r\n            If the string may contain content that needs expansion, expandable is set.\r\n            ":"\r\n            构造函数采用令牌类型和字符串\r\n            代表令牌。\r\n            如果字符串可能包含需要扩展的内容，则将设置可扩展。\r\n            \r\n","\r\n            new MSBuildGlobWithGaps(\r\n               MSBuildGlob.Parse(\"**/*.cs\"),            // matches all .cs files\r\n               new CompositeGlob(                       // a composite glob to combine all the gaps\r\n                  MSBuildGlob.Parse(\"**/*foo*.cs\"),     // matches .cs files containing \"foo\"\r\n                  MSBuildGlob.Parse(\"**/bin/**/*.cs\")   // matches .cs files under bin directories\r\n               )\r\n            )\r\n                ":"\r\n            新的msbuildglobwithgaps（\r\n               msbuildglob.parse（“ **/*。CS”），//匹配所有.cs文件\r\n               新的CompositeGlob（//一个复合地球，以结合所有差距\r\n                  msbuildglob.parse（“ **/*foo*.cs”），//匹配包含“ foo”的.cs文件\r\n                  msbuildglob.parse（“ **/bin/**/*。cs”）//匹配bin目录下的.cs文件\r\n               ）\r\n            ）\r\n                \r\n","\r\n            Normally the active solution configuration/platform is determined when we build the solution\r\n            wrapper project, not when we create it. However, we need to know them to scan project references\r\n            for the right project configuration/platform. It's unlikely that references would be conditional, \r\n            but still possible and we want to get that case right.\r\n            ":"\r\n            通常，当我们构建解决方案时，确定活动解决方案配置/平台\r\n            包装器项目，而不是我们创建它。但是，我们需要知道他们以扫描项目参考\r\n            适用于正确的项目配置/平台。参考文献不太可能是有条件的，\r\n            但是仍然有可能，我们希望正确地解决这个案件。\r\n            \r\n","\r\n            Checks if the given type is a logger class.\r\n            ":"\r\n            检查给定类型是否是Logger类。\r\n            \r\n","\r\n            When a target build fails, we don't just stop building that target; we also pop all of the other dependency targets of its\r\n            parent target off the stack. Extract that logic into a standalone method so that it can be used when dealing with targets that\r\n            are skipped-unsuccessful as well as first-time failures.\r\n            ":"当目标构建失败时，我们不仅停止构建该目标。我们还弹出了它的所有其他依赖性目标\r\n            父级目标堆叠。将该逻辑提取到独立方法中，以便在处理目标时可以使用它\r\n            被跳过不成功的以及首次失败。\r\n            \r\n","\r\n            Contains all of the original properties at this level in the Lookup\r\n            ":"\r\n            在查找中包含此级别的所有原始属性\r\n            \r\n","GetMetadataValue":"GetMetadatavalue\r\n","\r\n            Instantiates a new MSBuild or MSBuildTaskHost process acting as a child node.\r\n            ":"\r\n            实例化新的MSBUILD或MSBUILDTASKHOST流程作为子节点。\r\n            \r\n","\r\n            The TashStarted logging event\r\n            ":"Tashstarted Logging活动\r\n            \r\n","\r\n            A mapping of all the nodes managed by this provider.\r\n            ":"\r\n            该提供商管理的所有节点的映射。\r\n            \r\n","The logging context":"记录上下文\r\n","Name of metadata to remove.":"要删除的元数据的名称。\r\n","\r\n            Writes out all of the dependencies for a specified request, recursively.\r\n            ":"\r\n            递归写下指定请求的所有依赖项。\r\n            \r\n","[out] indicates if the second file/directory does not exist on disk":"[out]指示磁盘上的第二个文件/目录是否不存在\r\n","\r\n            Appends a file name quoting it if necessary.\r\n            This method appends a space to the command line (if it's not currently empty) before the file name.\r\n            ":"\r\n            如有必要，附加文件名引用。\r\n            此方法在文件名之前将空间附加到命令行（如果当前不是空）。\r\n            \r\n","Task which the error is happening in":"错误正在发生的任务\r\n","\r\n            This class will throw an exception when it receives any event except for the build started or build finished event\r\n            this logger is good to use if a distributed logger is attached but does not want to forward any events\r\n            ":"\r\n            该课程将在收到任何事件时会引发异常\r\n            如果连接分布式记录器，但不想转发任何事件，该记录仪很适合使用\r\n            \r\n","\r\n            Creates a ReportResult response.\r\n            ":"\r\n            创建记者响应。\r\n            \r\n","A dictionary of global properties.":"全球属性词典。\r\n","\r\n            Starts full tracking.\r\n            ":"\r\n            开始完全跟踪。\r\n            \r\n","\r\n            Prints a message event\r\n            ":"\r\n            打印消息事件\r\n            \r\n","\r\n            XML namespace specified and used by this project file. If a namespace was not specified in the project file, this\r\n            value will be string.Empty.\r\n            ":"\r\n            XML名称空间由此项目文件指定和使用。如果项目文件中未指定名称空间，则\r\n            值将为字符串。\r\n            \r\n","\r\n            This class will create a text file which will contain the build log for that node\r\n            ":"\r\n            此类将创建一个文本文件，该文件将包含该节点的构建日志\r\n            \r\n","\r\n            Gets or sets the prefix used to compose help keywords from string resource names. If a task does not have help\r\n            keywords associated with its messages, it can ignore this property or set it to null. If the prefix is set to an empty\r\n            string, then string resource names will be used verbatim as help keywords. For an example of how this prefix is used,\r\n            see the TaskLoggingHelper.LogErrorWithCodeFromResources(string, object[]) method.\r\n            ":"\r\n            获取或设置用于从字符串资源名称中撰写帮助关键字的前缀。如果任务没有帮助\r\n            与其消息关联的关键字可以忽略此属性或将其设置为null。如果前缀设置为空\r\n            字符串，然后字符串资源名称将逐字使用用作帮助关键字。对于如何使用此前缀的示例\r\n            请参阅taskLoggingHelper.logerrorwithCodeFromResources（String，Object []）方法。\r\n            \r\n","\r\n            Route the build event to the correct filter or sink depending on what the sinId is in the build event.\r\n            ":"\r\n            根据构建事件中的SINID是什么，将构建事件路由到正确的过滤器或下沉。\r\n            \r\n","\r\n            Regular expressions used by the expander.\r\n            The expander currently uses regular expressions rather than a parser to do its work.\r\n            ":"\r\n            扩展器使用的正式表达式。\r\n            扩展器目前使用正则表达式而不是解析器来完成其工作。\r\n            \r\n","\r\n            This method will parse a .etp project recursively and \r\n            add all the projects found to projects and projectsInOrder\r\n            ":"\r\n            此方法将递归解析.ETP项目，并\r\n            将发现的所有项目添加到项目和项目界\r\n            \r\n","\r\n            This class is used as a key to group warnings and errors by the project entry point and the target they \r\n            error or warning was in\r\n            ":"\r\n            该课程用作项目入口点和目标的关键\r\n            错误或警告已在\r\n            \r\n","\r\n            This class is called \"Fully Qualified\" because it completely and directly specifies all of the configuration information.\r\n            A standard Build Request only specifies the configuration id, so to get the configuration requires an additional lookup\r\n            in a configuration cache.\r\n            ":"\r\n            该类称为“完全合格”，因为它完全并直接指定了所有配置信息。\r\n            标准构建请求仅指定配置ID，因此要获得配置需要附加查找\r\n            在配置缓存中。\r\n            \r\n","element whose key is returned":"返回键的元素\r\n","\r\n            All the item definitions that apply to this item, in order of\r\n            decreasing precedence. At the bottom will be an item definition\r\n            that directly applies to the item type that produced this item. The others will\r\n            be item definitions inherited from items that were\r\n            used to create this item.\r\n            ":"\r\n            按顺序\r\n            降低优先级。在底部将是项目定义\r\n            直接适用于生产此项目的项目类型。其他人会\r\n            是从项目中继承的项目定义\r\n            用于创建此项目。\r\n            \r\n","The hive.":"蜂巢。\r\n","\r\n            Retrieves any value we have in our metadata table for the metadata name and item type specified.\r\n            If no value is available, returns empty string.\r\n            ":"\r\n            检索我们在元数据表中为元数据名称和指定的项目类型中的任何值。\r\n            如果没有可用的值，请返回空字符串。\r\n            \r\n","The expected value":"预期值\r\n","\r\n            Native error code. Note that an error code other than ":"\r\n            本机错误代码。请注意，错误代码以外\r\n","List of properties":"属性列表\r\n","Visual Studio version. Pass null not to filter based on this parameter":"Visual Studio版本。将null传递不基于此参数过滤\r\n","\r\n            Enumerator over properties in this project.\r\n            Exposed for debugging display.\r\n            ":"\r\n            枚举此项目中的属性。\r\n            暴露于调试显示。\r\n            \r\n","\r\n            Sends the request to the scheduler with optional legacy threading semantics behavior.\r\n            ":"\r\n            以可选的遗留线程语义行为将请求发送给调度程序。\r\n            \r\n","Name of tool.":"工具的名称。\r\n","\r\n            Signs up the console file logger for all build events.\r\n            This is the backward-compatible overload.\r\n            ":"\r\n            为所有构建事件注册控制台文件记录器。\r\n            这是向后兼容的过载。\r\n            \r\n"," contained by this instance is directly changed.\r\n            ":" 该实例包含的内容直接更改。\r\n            \r\n","\r\n            Items in this project, ordered within groups of item types.\r\n            ":"\r\n            该项目中的项目，在项目类型组中排序。\r\n            \r\n","\r\n            Gets the canonicalized full path of the provided directory and ensures it contains the correct directory separator characters for the current operating system\r\n            while ensuring it has a trailing slash.\r\n            ":"\r\n            获取所提供目录的规范化完整路径，并确保其包含当前操作系统的正确目录分离器字符\r\n            同时确保它具有落后的斜线。\r\n            \r\n","\r\n            It would be nice to add some helper overloads of base class members that\r\n            downcast their return values to XmlElement/AttributeWithLocation. However\r\n            C# doesn't currently allow covariance in method overloading, only on delegates.\r\n            The caller must bravely downcast.\r\n            ":"\r\n            添加一些基类成员的助手过载会很高兴\r\n            将其返回值降低到XMlelement/AttributeWithLocation。然而\r\n            C＃当前不允许在方法过载方面，仅允许在委托上进行协方差。\r\n            呼叫者必须勇敢地沮丧。\r\n            \r\n","\r\n            This task parameter is required (analogous to the [Required] attribute)\r\n            ":"\r\n            需要此任务参数（类似于[必需的]属性）\r\n            \r\n",". If the task has allocated its one implicit core, this call may block, waiting for\r\n            at least one core to become available.":"。如果任务分配了一个隐式核心，则此呼叫可能会阻止，等待\r\n            至少有一个核心可用。\r\n","\r\n            Logs the actual command line about to be executed (or what the task wants the log to show)\r\n            ":"\r\n            记录即将执行的实际命令行（或任务希望显示的内容）\r\n            \r\n","\r\n            Used for unit tests only.  This is currently only called through reflection in Microsoft.Build.Engine.UnitTests.TransientSdkResolution.CallResetForTests\r\n            ":"\r\n            仅用于单位测试。目前仅在Microsoft.build.engine.unittests.transientsdkresolution.callresetfortests中进行反思来调用。\r\n            \r\n","The generated full path, for caching":"生成的完整路径，用于缓存\r\n","\r\n            Error code\r\n            ":"\r\n            错误代码\r\n            \r\n","Did the build succeed or not":"建造是否成功了\r\n","\r\n            Name associated with this element\r\n            ":"\r\n            与此元素关联的名称\r\n            \r\n"," causes the property value to be written to and read\r\n            from the .user file.\r\n            ":" 导致财产价值写入和阅读\r\n            从.user文件。\r\n            \r\n","\r\n            Replacement for BinaryReader which attempts to intern the strings read by ReadString.\r\n            ":"\r\n            替换二进制阅读器，该二进制读取器试图实现通过ReadString读取的字符串。\r\n            \r\n","\r\n            The table for all metadata added during expansion\r\n            ":"\r\n            在扩展过程中添加的所有元数据的表\r\n            \r\n","An optional disk root to search.  A value should only be passed from a unit test.":"可选的磁盘根。值只能通过单位测试传递。\r\n","The resources being requested":"请求的资源\r\n","Path to the appropriate Windows SDK location":"通往适当Windows SDK位置的路径\r\n","\r\n            Raised when an item is encountered with a hint to embed a file into the binlog.\r\n            ":"\r\n            当遇到带有提示的项目时，将文件嵌入到Binlog中时提出。\r\n            \r\n","If the evaluation fails.":"如果评估失败。\r\n","\r\n            Multiply two longs\r\n            ":"\r\n            乘以两个长\r\n            \r\n","\r\n            The environment properties\r\n            ":"环境属性\r\n            \r\n","\r\n            Command line arguments that cannot be put into response files, and which\r\n            must appear on the command line, should not be passed to this method.\r\n            ":"\r\n            命令行参数不能放入响应文件中，哪个\r\n            必须出现在命令行上，不应传递给此方法。\r\n            \r\n","ResourceManager for primary resources.":"主要资源的资源管理器。\r\n","\r\n            this event is raised to log an error\r\n            ":"\r\n            此事件被提出以记录错误\r\n            \r\n","[out] indicates if the first file/directory does not exist on disk":"[out]指示磁盘上的第一个文件/目录是否不存在\r\n","\r\n            Mapping of nodeRequestIDs to Build Requests waiting for results.\r\n            ":"\r\n            映射NodereQuestids以构建等待结果的请求。\r\n            \r\n","\r\n            A dictionary of named values for debugger display only. If \r\n            not debugging, this should be null.\r\n            ":"\r\n            仅显示调试器的命名值的字典。如果\r\n            不调试，这应该是无效的。\r\n            \r\n","The ToolsetPropertyDefinition being analyzed.":"分析工具集型定义。\r\n","\r\n                An abstract interface class to indicate SDK resolver success or failure.\r\n            ":"\r\n                一个抽象接口类，以表示SDK解析器成功或故障。\r\n            \r\n","\r\n            Unevaluated condition on the task.\r\n            May be empty string.\r\n            ":"\r\n            该任务的条件未评估。\r\n            可以是空字符串。\r\n            \r\n","\r\n            This call blocks until all currently pending requests are complete.\r\n            ":"\r\n            此呼叫块，直到当前所有待处理的请求均已完成为止。\r\n            \r\n","\r\n            Head of the mru list.\r\n            ":"\r\n            MRU名单的负责人。\r\n            \r\n","\r\n            If the task fails, error and stop.\r\n            ":"\r\n            如果任务失败，则错误并停止。\r\n            \r\n","\r\n            The full path to the project file being built\r\n            Can be null: if the project hasn't been saved yet it will be null\r\n            ":"\r\n            构建项目文件的完整路径\r\n            可以为null：如果该项目尚未保存，但它将为null\r\n            \r\n","\r\n            Initialize a ProjectRootElement instance over a project with the specified file path.\r\n            Assumes path is already normalized.\r\n            May throw InvalidProjectFileException.\r\n            ":"\r\n            用指定的文件路径在项目上初始化ProjectRootelement实例。\r\n            假设路径已经归一化。\r\n            可能会抛出无效的fileException。\r\n            \r\n","The new element.":"新元素。\r\n","\r\n            Creates a new in-proc node.\r\n            ":"\r\n            创建一个新的下点节点。\r\n            \r\n","\r\n            Used to return metadata from another AppDomain. Can't use yield return because the\r\n            generated state machine is not marked as [Serializable], so we need to allocate.\r\n            ":"\r\n            用于从另一个应用程序返回元数据。无法使用收益率，因为\r\n            生成的状态机不标记为[可序列化]，因此我们需要分配。\r\n            \r\n"," \r\n            Those who manually \r\n            instantiate this class should remember to call ":" \r\n            那些手动的人\r\n            实例化此课程应该记得打电话\r\n","\r\n            This captures information of how various key methods of building with MSBuild ran.\r\n            ":"\r\n            这捕获了有关MSBUILD如何运行各种关键方法的信息。\r\n            \r\n","The results for the specified node":"指定节点的结果\r\n","\r\n             What is the currently evaluating property element, this is so that we do not add a un initialized property if we are evaluating that property.\r\n            ":"\r\n             当前评估的属性元素是什么，因此，如果我们正在评估该属性，则不会添加非初始化的属性。\r\n            \r\n","\r\n            Deep clone the metadata\r\n            Strings are immutable (copy on write) so there is no work to do.\r\n            Allows built-in metadata names, as they are still valid on the new metadatum.\r\n            ":"\r\n            深克隆元数据\r\n            字符串是不变的（写在书面上），因此没有工作要做。\r\n            允许内置的元数据名称，因为它们在新的元数据上仍然有效。\r\n            \r\n","\r\n            The overall result calculated in the constructor.\r\n            ":"\r\n            在构造函数中计算的总结果。\r\n            \r\n","end line number (0 if not applicable)":"端线号（0如果不适用）\r\n","\r\n            Represents all the components of a transform function, including the ability to execute it. \r\n            ":"\r\n            代表转换函数的所有组件，包括执行它的能力。\r\n            \r\n","\r\n            Location of the condition attribute\r\n            ":"\r\n            条件属性的位置\r\n            \r\n","\r\n            Gets a matching configuration.  If no such configration exists, one is created and optionally loaded.\r\n            ":"\r\n            获得匹配配置。如果不存在这样的肢体，则将创建并可选地加载。\r\n            \r\n","An appropriate ProjectRootElement":"适当的项目Rootlement\r\n","\r\n            Implementation of the ItemGroup intrinsic task\r\n            ":"\r\n            实施项目组固有任务\r\n            \r\n","\r\n            Creates an unparented ProjectImportElement, wrapping an unparented XmlElement.\r\n            Validates the project value.\r\n            Caller should then ensure the element is added to a parent\r\n            ":"\r\n            创建一个无与伦比的ProjectImportelement，包装了无与伦比的Xmlelement。\r\n            验证项目值。\r\n            然后，呼叫者应确保将元素添加到父\r\n            \r\n","\r\n            Create a new logging service\r\n            ":"\r\n            创建新的伐木服务\r\n            \r\n","A canonicalized full directory path with the correct directory separators and a trailing slash.":"具有正确目录的分离器和后斜线的规范化完整目录路径。\r\n","\r\n            For configuring child AppDomains.\r\n            ":"\r\n            用于配置儿童应用程序。\r\n            \r\n","\r\n            This optional ProjectInstance is only exposed when doing debugging. It is not used by the evaluator.\r\n            ":"\r\n            这种可选的ProjectInstance仅在进行调试时才会暴露。评估者不使用它。\r\n            \r\n","\r\n            Encapsulates a list of parameters declared in the UsingTask\r\n            ":"\r\n            封装在usedtask中声明的参数列表\r\n            \r\n","String name for the resource string to be used":"要使用的资源字符串的字符串名称\r\n","\r\n                Only one plugin instance can exist for a given BuildManager BeginBuild / EndBuild session.\r\n                Any exceptions thrown by the plugin will cause MSBuild to fail the build.\r\n            ":"\r\n                对于给定的BuildManager启动建筑 / Endbuild会话，只有一个插件实例可以存在。\r\n                插件抛出的任何例外都会导致MSBUILD使构建失败。\r\n            \r\n","\r\n            The set of states in which a build request entry can be.\r\n            ":"\r\n            可以使用构建请求条目的一组状态。\r\n            \r\n","string data in the value":"值中的字符串数据\r\n","\r\n            Visual Studio Dev15\r\n            ":"\r\n            Visual Studio Dev15\r\n            \r\n","\r\n            The new requests to issue\r\n            ":"\r\n            发行的新请求\r\n            \r\n","\r\n            The task logging context\r\n            ":"\r\n            任务记录上下文\r\n            \r\n","\r\n            Wraps an evaluated piece of metadata for build purposes\r\n            Added and removed via methods on the ProjectItemInstance object.\r\n            IMMUTABLE OBJECT.\r\n            ":"\r\n            将评估的元数据包装为构建目的\r\n            通过ProjectIteMinstance对象上的方法添加并删除。\r\n            不变的物体。\r\n            \r\n","\r\n            Keeps track of the project that is last modified of the project and all imports.\r\n            ":"\r\n            跟踪最后修改项目和所有进口的项目。\r\n            \r\n","\r\n            The task instance\r\n            ":"\r\n            任务实例\r\n            \r\n","\r\n            Location of the originating file itself, not any specific content within it.\r\n            If the file has not been given a name, returns an empty location.\r\n            ":"\r\n            原始文件本身的位置，而不是其中的任何特定内容。\r\n            如果没有给文件命名，请返回空位置。\r\n            \r\n","\r\n            Flag indicating whether at least one target which has run after us (transitively via AfterTargets) failed.\r\n            ":"\r\n            标志指示至少一个追随我们的目标（通过余后传输）失败。\r\n            \r\n","Offset in string where parsing began.":"在解析开始的弦乐中抵消。\r\n","\r\n            Retrieves a request which is currently blocked, or null if there is none.\r\n            ":"\r\n            检索当前被阻止的请求，或者如果没有的话，则将其null。\r\n            \r\n","\r\n            The element referenced the item by an Exclude.\r\n            ":"\r\n            该元素由排除引用该项目。\r\n            \r\n","\r\n            Get a call stack of event contexts for a starting point event context\r\n            ":"\r\n            获取起点事件上下文的事件上下文的呼叫堆栈\r\n            \r\n","\r\n            Perform a bitwise AND on the first and second (first & second) \r\n            ":"\r\n            在第一和第二（第一和第二）执行位置\r\n            \r\n","\r\n            Packet factory we use if there's not already one associated with a particular context.\r\n            ":"数据包工厂，如果尚未与特定上下文关联，则使用。\r\n            \r\n","\r\n            Given a ToolsVersion, find the path to the build tools folder for that ToolsVersion.\r\n            ":"\r\n            给定工具，请找到该工具交换的构建工具文件夹的路径。\r\n            \r\n","What processor architecture is being targeted. This determines which registry hives are searched in what order.\r\n             On a 64 bit operating system we do the following\r\n                     If you are targeting 64 bit (target x64 or ia64)\r\n                         Add in the 64 bit assembly folders first\r\n                         Add in the 32 bit assembly folders second\r\n                     If you are not targeting a 64 bit\r\n                        Add in the 32 bit assembly folders first\r\n                        Add in the 64 bit assembly folders second\r\n             On a 32 bit machine we only add in the 32 bit assembly folders.\r\n             ":"哪种处理器体系结构是针对的。这决定了哪些注册表的搜索顺序。\r\n             在64位操作系统上，我们执行以下操作\r\n                     如果目标是64位（目标X64或IA64）\r\n                         首先添加64位组件文件夹\r\n                         添加32位组件文件夹第二\r\n                     如果您不瞄准64位\r\n                        首先添加32位组件文件夹\r\n                        添加64位组装文件夹第二\r\n             在32位机器上，我们仅添加32位组件文件夹。\r\n             \r\n","\r\n            Checks the given switch parameter to see if it must/can be quoted.\r\n            ":"\r\n            检查给定的开关参数以查看是否必须/可以引用。\r\n            \r\n","\r\n            Does appropriate logging to indicate why this target is being built fully or partially.\r\n            ":"\r\n            确实有适当的记录来指示为什么要完全或部分构建此目标。\r\n            \r\n","\r\n            Indents the given string by the specified number of spaces.\r\n            ":"\r\n            指定数量的空间数字缩进给定的字符串。\r\n            \r\n","\r\n            The requests which cannot continue until we have finished executing.\r\n            ":"\r\n            在我们完成执行之前，无法继续的请求。\r\n            \r\n","\r\n            The type of node we must create.\r\n            ":"\r\n            我们必须创建的节点的类型。\r\n            \r\n","\r\n            Processor architecture utilities\r\n            ":"\r\n            处理器架构实用程序\r\n            \r\n","\r\n            The time that this object was last changed. If it hasn't\r\n            been changed since being loaded or created, its value is ":"\r\n            该对象最后更改的时间。如果没有\r\n            自从加载或创建以来已更改，其价值为\r\n","\r\n            Raised when a build request is completed and results are available.\r\n            ":"\r\n            构建请求完成并提供结果时提出。\r\n            \r\n","\r\n            Constructor which allows the timestamp to be set\r\n            ":"\r\n            允许设置时间戳的构造函数\r\n            \r\n","\r\n            Thread synchronization.\r\n            ":"\r\n            线程同步。\r\n            \r\n","Target .NET Framework version":"目标.NET框架版本\r\n","\r\n            Returns the task type.\r\n            ":"\r\n            返回任务类型。\r\n            \r\n","\r\n            ITaskItem implementation.\r\n            ":"\r\n            ITASCITEM实施。\r\n            \r\n","This method is used as a TypeFilter delegate.":"此方法用作TypeFilter委托。\r\n","\r\n            Returns true if a single quoted subexpression begins at the specified index\r\n            and ends before the specified end index.\r\n            Leaves index one past the end of the second quote.\r\n            ":"\r\n            如果单个引用的子表达在指定的索引开始，则返回true\r\n            并在指定的端索引之前结束。\r\n            将索引叶索引超过第二个报价的末尾。\r\n            \r\n","\r\n            This state means the node is waiting for results from outstanding build requests.  When this \r\n            state is set, the outstandingRequest or outstandingConfiguration members of the entry \r\n            must be non-null.\r\n            \r\n            Transitions: \r\n                      Ready: All of the results which caused the build request to wait have been received\r\n            ":"\r\n            该状态意味着该节点正在等待出色的构建请求的结果。当这个\r\n            国家设定了该条目的杰出征服或杰出的配置成员\r\n            必须是非记器。\r\n            \r\n            过渡：\r\n                      准备就绪：所有导致构建请求等待的结果已收到\r\n            \r\n","\r\n            Constructor creates a build result indicating a circular dependency was created.\r\n            ":"\r\n            构造函数创建了一个构建结果，表明创建了循环依赖性。\r\n            \r\n","\r\n            The event which is set when we receive packets.\r\n            ":"\r\n            我们收到数据包时设置的事件。\r\n            \r\n","\r\n            Creates a ProjectExtensionsElement parented by a project\r\n            ":"\r\n            创建由项目育儿的ProjectExtensionsElement\r\n            \r\n","An instance of a LoggingService as a IBuildComponent":"loggingservice作为iBuildComponent的实例\r\n","help keyword ":"帮助关键字\r\n","The tools version. May be null.":"工具版本。可能是无效的。\r\n"," containing information about the resolved SDK. If no resolver was able to resolve it, then ":" 包含有关已解决的SDK的信息。如果没有解析器能够解决它，那就\r\n","\r\n            Gets the values of the specified metadata for the given item.\r\n            The keys in the dictionary returned may be qualified and/or unqualified, exactly\r\n            as they are found in the metadata reference. \r\n            For example if %(x) is found, the key is \"x\", if %(z.x) is found, the key is \"z.x\".\r\n            This dictionary in each bucket is used by Expander to expand exactly the same metadata references, so\r\n            %(x) is expanded using the key \"x\", and %(z.x) is expanded using the key \"z.x\".\r\n            ":"\r\n            获取给定项目的指定元数据的值。\r\n            返回的字典中的键可能是合格和/或不合格的，恰好是\r\n            正如在元数据参考中发现的那样。\r\n            例如，如果找到％（x），则键是“ x”，如果找到％（z.x），则密钥为“ z.x”。\r\n            expander使用每个存储桶中的这个词典来扩展完全相同的元数据参考，因此\r\n            使用键“ x”扩展％（x），并使用键“ z.x”扩展％（z.x）。\r\n            \r\n","\r\n            Flag to determine whether or not to log task inputs.\r\n            ":"\r\n            标志以确定是否记录任务输入。\r\n            \r\n","\r\n            with an additional ":"\r\n            还有一个\r\n","\r\n            Adds a new target, overwriting any existing target with the same name.\r\n            ":"\r\n            添加一个新目标，覆盖任何具有相同名称的现有目标。\r\n            \r\n"," instance for resolving SDKs.\r\n            ":" 解决SDK的实例。\r\n            \r\n","\r\n            Updates the environment to match the provided dictionary.\r\n            ":"\r\n            更新环境以匹配提供的字典。\r\n            \r\n","\r\n            The target is ready to provide error tasks.\r\n            \r\n            Transitions:\r\n            None\r\n            ":"\r\n            目标准备提供错误任务。\r\n            \r\n            过渡：\r\n            没有任何\r\n            \r\n","\r\n                The main glob used for globbing operations.\r\n            ":"\r\n                主要的地球用于地球操作。\r\n            \r\n","\r\n            Searches all task declarations for the given task name.\r\n            If no exact match is found, looks for partial matches.\r\n            A task name that is not fully qualified may produce several partial matches.\r\n            ":"\r\n            搜索给定任务名称的所有任务声明。\r\n            如果找不到确切的匹配，请寻找部分匹配。\r\n            不完全合格的任务名称可能会产生多个部分匹配。\r\n            \r\n","T[]":"t []\r\n","\r\n            Note, this represents\r\n            a list of strings, not a list of ":"\r\n            注意，这代表\r\n            字符串列表，而不是\r\n","\r\n                ProjectSdkElement represents the Sdk element within the MSBuild project.\r\n            ":"\r\n                ProjectsDkelement代表MSBuild项目中的SDK元素。\r\n            \r\n","The request to be issued.":"发出的请求。\r\n","\r\n            Attempts to satisfy the request from the cache.  The request can be satisfied only if:\r\n            1. All specified targets in the request have non-skipped results in the cache.\r\n            2. All initial targets in the configuration for the request have non-skipped results in the cache.\r\n            3. If there are no specified targets, then all default targets in the request must have non-skipped results\r\n               in the cache.\r\n            ":"\r\n            尝试满足缓存的请求。只有在以下方式时才能满足请求\r\n            1.请求中的所有指定目标都在缓存中具有未击倒的结果。\r\n            2.该请求配置中的所有初始目标都在缓存中具有未击倒的结果。\r\n            3.如果没有指定的目标，则请求中的所有默认目标都必须具有未打击的结果\r\n               在缓存中。\r\n            \r\n","\r\n            Type of handler for AnyEventRaised events\r\n            ":"\r\n            AnyEventraises事件的处理程序类型\r\n            \r\n","The project file which contains the ProjectRootElement.  Must be a full path.":"包含ProjectRootelement的项目文件。必须是一条完整的道路。\r\n","\r\n            Registers an evaluated using task tag for future \r\n            consultation\r\n            ":"\r\n            使用任务标签评估的未来评估标签\r\n            咨询\r\n            \r\n","\r\n            Parse a ProjectImportElement that is contained in an ImportGroup\r\n            ":"\r\n            解析importgroup中包含的项目iMportelement\r\n            \r\n","\r\n            Raised when the build request is complete.\r\n            ":"\r\n            构建请求完成后提出。\r\n            \r\n","\r\n            When true, indicates that the initial properties and items should be logged.\r\n            ":"\r\n            如果是正确的，则指示应记录初始属性和项目。\r\n            \r\n","The value to check equality for before assigning.":"分配前要检查平等的值。\r\n","\r\n            Creates an instance of this exception using the specified error message and inner exception.\r\n            ":"\r\n            使用指定的错误消息和内部异常创建此异常的实例。\r\n            \r\n","\r\n            Retrieves the target logging context.\r\n            ":"\r\n            检索目标记录上下文。\r\n            \r\n","\r\n            Represents the elements of an item specification string and \r\n            provides some operations over them (like matching items against a given ItemSpec)\r\n            ":"\r\n            表示项目规范字符串的元素和\r\n            提供了一些对它们的操作（例如，与给定的项目Spec匹配的项目）\r\n            \r\n","\r\n            Writes the packet to the serializer.\r\n            Always send as ints, even if ushorts are being used: otherwise it'd\r\n            need a byte to discriminate and the savings would be microscopic.\r\n            ":"\r\n            将数据包写入序列化器。\r\n            始终以int的方式发送，即使使用了ushorts：否则\r\n            需要一个字节来区分，节省将是微观的。\r\n            \r\n","\r\n            The property name that this function is applied on.\r\n            ":"\r\n            应用此功能的属性名称。\r\n            \r\n","\r\n            Sets the overall result.\r\n            ":"\r\n            设置总体结果。\r\n            \r\n","\r\n            First element\r\n            ":"\r\n            第一个元素\r\n            \r\n","\r\n            Items and metadata of interest.\r\n            ":"\r\n            感兴趣的项目和元数据。\r\n            \r\n","\r\n            C#, VB, and VJ# projects\r\n            ":"\r\n            C＃，VB和VJ＃项目\r\n            \r\n","\r\n            Creates an unparented UsingTaskParameterGroupElement, wrapping an unparented XmlElement.\r\n            Caller should then ensure the element is added to a parent\r\n            ":"\r\n            使用TaskParameterGroupelement创建一个无与伦比的XMLELEMENT。\r\n            然后，呼叫者应确保将元素添加到父\r\n            \r\n","\r\n            Applies a list of modifications to the appropriate ":"\r\n            适用于适当的修改列表\r\n","\r\n            Ask the question, whether or not the task name can be created by the task factory.\r\n            To answer this question we need to instantiate and initialize the task factory and ask it if it can create the given task name.\r\n            This question is useful for assembly tasks where the task may or may not be in an assembly, this can also be useful if the task factory\r\n            loads an external file and uses that to generate the tasks.\r\n            ":"\r\n            询问问题，是否可以由任务工厂创建任务名称。\r\n            要回答这个问题，我们需要实例化和初始化任务工厂，并询问它是否可以创建给定的任务名称。\r\n            这个问题对于任务可能会或可能不在组装中的汇编任务很有用，如果任务工厂，这也可能很有用\r\n            加载外部文件并使用它来生成任务。\r\n            \r\n","\r\n            The type of the generated tasks.\r\n            ":"\r\n            生成的任务的类型。\r\n            \r\n","\r\n            Specifies the default value for this property. \r\n            ":"\r\n            指定此属性的默认值。\r\n            \r\n","\r\n            Adds a target for a project whose type is unknown and we cannot build.  We will emit an error or warning as appropriate.\r\n            ":"\r\n            添加了一个类型未知且我们无法构建的项目的目标。我们将在适当的情况下发出错误或警告。\r\n            \r\n","The expression to expand.":"表达式扩展。\r\n","\r\n            The next task ID to assign when a task started event is received.\r\n            ":"\r\n            收到任务启动事件时要分配的下一个任务ID。\r\n            \r\n","\r\n            Returns CPU resources.\r\n            ":"\r\n            返回CPU资源。\r\n            \r\n","\r\n            Reset the states of per-build member variables.\r\n            Used when a build is finished, but the logger might be needed for the next build.\r\n            ":"\r\n            重置人均成员变量的状态。\r\n            当构建完成时使用，但是下一个构建可能需要记录器。\r\n            \r\n","\r\n            Create a file based project.\r\n            ":"\r\n            创建一个基于文件的项目。\r\n            \r\n","\r\n            Any immediately previous property that was overridden by this one during evaluation.\r\n            This would include all properties with the same name that lie above in the logical\r\n            project file, and whose conditions evaluated to true.\r\n            If there are none above this is null.\r\n            If the project has not been reevaluated since the last modification this value may be incorrect.\r\n            ":"\r\n            在评估期间，该属性直接覆盖的任何属性。\r\n            这将包括所有属性，其名称与逻辑上的同名相同\r\n            项目文件，并评估其条件为true。\r\n            如果上面没有，则无效。\r\n            如果未重新评估项目，则该值可能不正确。\r\n            \r\n","\r\n            Must be called within the cache lock.\r\n            ":"\r\n            必须在缓存锁中调用。\r\n            \r\n","\r\n            Keeps track of whether the wrapped task has had cancel called against it. \r\n            ":"\r\n            跟踪包裹的任务是否已取消了。\r\n            \r\n"," with this name\r\n            is auto-generated and added to the containing ":" 有这个名字\r\n            自动生成并添加到包含\r\n","\r\n            Set of properties which are null during expansion.\r\n            ":"\r\n            在展开期间为null的属性集。\r\n            \r\n"," to test if a file path matches the glob or not.\r\n            ":" 测试文件路径是否匹配全球。\r\n            \r\n","The exception which aborted this target, if any.":"如果有的话，该目标的例外是中止该目标的。\r\n","\r\n            Constructor for metadata modifications of type Update.\r\n            ":"\r\n            元数据修改类型更新的构造函数。\r\n            \r\n","\r\n            Retrieves the name of this component host.\r\n            ":"\r\n            检索此组件主机的名称。\r\n            \r\n","\r\n            Location of the BeforeTargets attribute ,if any\r\n            ":"\r\n            beforetargets属性的位置，如果有的话\r\n            \r\n","\r\n            Name of the element\r\n            ":"\r\n            元素的名称\r\n            \r\n","\r\n            Type of the local variable.\r\n            ":"\r\n            本地变量的类型。\r\n            \r\n","\r\n            The app domain information needed for setting up AppDomain-isolated tasks.\r\n            ":"\r\n            设置AppDomain隔离任务所需的应用域信息。\r\n            \r\n","\r\n            A very simple comparer for TaskItems so that up to date check results can be sorted.\r\n            ":"\r\n            一个非常简单的任务比较，因此可以对最新的检查结果进行排序。\r\n            \r\n","\r\n            Target outputs\r\n            ":"\r\n            目标输出\r\n            \r\n","\r\n            Taking the opportunity to fix the property name, although this doesn't\r\n            make it obvious it's an improvement on ItemSpec.\r\n            ":"\r\n            借此机会修复了属性名称，尽管这不是\r\n            显然，这是对ItemSpec的改进。\r\n            \r\n","\r\n            The event used to signal that this request should immediately terminate.\r\n            ":"\r\n            用于信号的事件表明该请求应立即终止。\r\n            \r\n","\r\n            Structure to represent an extension sdk\r\n            ":"\r\n            代表扩展SDK的结构\r\n            \r\n","\r\n            Logs a message event for the current task\r\n            Thread safe.\r\n            ":"\r\n            记录当前任务的消息事件\r\n            线程安全。\r\n            \r\n","\r\n            Adds the initial target to the solution wrapper project, necessary for a few message/error tags\r\n            ":"\r\n            将初始目标添加到解决方案包装器项目中，这是一些消息/错误标签所必需的\r\n            \r\n","The number of cores a task is allowed to use.":"允许使用任务的内核数。\r\n","\r\n            Returns the evaluated, unescaped value for the property.\r\n            ":"\r\n            返回该属性的评估，未设计的值。\r\n            \r\n","Children globs. Input gets shallow cloned":"儿童地球。输入得到浅克隆\r\n","\r\n            Creates a target.\r\n            Caller must add it to the location of choice in this project.\r\n            ":"\r\n            创建目标。\r\n            呼叫者必须将其添加到该项目的选择位置。\r\n            \r\n","\r\n            Adds a new property group with contents of the given solution configuration to the project.\r\n            ":"\r\n            将带有给定解决方案配置内容的新属性组添加到项目中。\r\n            \r\n","\r\n            The BuildManager sent a command instructing the node to terminate, but to restart for reuse.\r\n            ":"\r\n            buildmanager发送了一个命令，指示节点终止，但要重新使用。\r\n            \r\n","\r\n            Following standard framework guideline dispose pattern.\r\n            Shut down logging service if the project collection owns one, in order\r\n            to shut down the logger thread and loggers.\r\n            ":"\r\n            遵循标准框架指南处理模式。\r\n            如果项目集合拥有一个，请关闭记录服务\r\n            关闭Logger线程和记录器。\r\n            \r\n","\r\n            Initialize an unparented UsingTaskParameterElement instance\r\n            ":"\r\n            初始化使用TaskParameterElement实例的无与伦比的初始化\r\n            \r\n","An enumerable of filesystem entries.":"枚举文件系统条目。\r\n","\r\n            Get the list of SDK folders which contains the designtime files for the sdk at the sdkRoot provided\r\n            in the order in which they should be searched for references.\r\n            ":"\r\n            获取SDK文件夹的列表，该文件夹包含SDKRoot的SDK的Designtime文件\r\n            按照他们应搜索参考的顺序。\r\n            \r\n","\r\n            Minimum allowed value for this property. \r\n            ":"\r\n            此属性的最低允许值。\r\n            \r\n","The node if one has been assigned for this configuration, otherwise -1.":"该节点如果为此配置分配了一个节点，则为-1。\r\n","The name of the property whose value we wish to generate a ToolsetPropertyDefinition for.":"我们希望为其价值生成toolsetPropertyDefinition的属性的名称。\r\n","\r\n            The switch representation of this property for the case when this property represents a tool parameter.\r\n            ":"\r\n            此属性代表工具参数时，此属性的开关表示。\r\n            \r\n","\r\n            Overridden to update the parent's children-have-no-wildcards flag.\r\n            ":"\r\n            覆盖以更新父母的子女 - 没有妻子的旗帜。\r\n            \r\n","\r\n            Creates a clone of this BuildParameters object.  This creates a clone of the logger collections, but does not deep clone\r\n            the loggers within.\r\n            ":"\r\n            创建此BuildParameters对象的克隆。这创建了Logger集合的克隆，但并不深克隆\r\n            里面的伐木者。\r\n            \r\n","\r\n            Stores the name of the tools version in a case-insensitive map\r\n            so we can detect if it is specified more than once but with\r\n            different case\r\n            ":"\r\n            将工具版本的名称存储在不敏感的地图中\r\n            因此，我们可以检测到它是否多次指定，但\r\n            不同的情况\r\n            \r\n","\r\n            Include the XML declaration element.\r\n            ":"\r\n            包括XML声明元素。\r\n            \r\n","\r\n            Returns the global properties as a dictionary.\r\n            ":"\r\n            返回全球属性作为词典。\r\n            \r\n","\r\n            Should target outputs be logged also.\r\n            ":"\r\n            也应记录目标输出。\r\n            \r\n","\r\n            This class represents an implementation of INode for in-proc nodes.\r\n            ":"\r\n            该类代表了用于程序内节点的Inode的实现。\r\n            \r\n","\r\n            Whatever appx locations we found in the manifest\r\n            ":"\r\n            我们在清单中发现的任何appx位置\r\n            \r\n","\r\n            The next ID to assign to a project which has no name.\r\n            ":"\r\n            下一个将分配给没有名称的项目的ID。\r\n            \r\n","\r\n            The BuildStarted logging event\r\n            ":"\r\n            构建的伐木活动\r\n            \r\n","The expander whose state will be used to expand any transforms.":"该状态将用于扩展任何变换的扩展器。\r\n","\r\n            Type of handler for WarningRaised events\r\n            ":"\r\n            警告事件的处理程序类型\r\n            \r\n","\r\n            Maps a node id to those requests which are ready to execute, if any.\r\n            ":"\r\n            将节点ID映射到准备执行的请求（如果有的话）。\r\n            \r\n","\r\n            Example: If we know that no logger is interested in ":"\r\n            示例：如果我们知道没有记录器感兴趣\r\n","\r\n            If this could be set, it would be necessary to have a callback\r\n            so that the containing collections could be updated, as they use the name as \r\n            their key.\r\n            ":"\r\n            如果可以设置此设置，则有必要进行回调\r\n            因此，可以更新包含的集合，因为它们使用名称为\r\n            他们的钥匙。\r\n            \r\n","Name of the metadata":"元数据的名称\r\n","\r\n            The project which was building when the message was issued.\r\n            ":"\r\n            发出消息时正在构建的项目。\r\n            \r\n","\r\n            The name of the UI culture to use during the build.\r\n            ":"\r\n            在构建过程中要使用的UI文化的名称。\r\n            \r\n","\r\n             Collection of possible values implied for properties contained in the conditions found on properties,\r\n             property groups, imports, and whens.\r\n            \r\n             For example, if the following conditions existed on properties in a project:\r\n            \r\n             Condition=\"'$(Configuration)|$(Platform)' == 'Debug|x86'\"\r\n             Condition=\"'$(Configuration)' == 'Release'\"\r\n            \r\n             the table would be populated with\r\n            \r\n             { \"Configuration\", { \"Debug\", \"Release\" }}\r\n             { \"Platform\", { \"x86\" }}\r\n            \r\n             This is used by Visual Studio to determine the configurations defined in the project.\r\n             ":"\r\n             收集在属性上发现的条件中包含的属性所隐含的可能值\r\n             财产组，进口和何时。\r\n            \r\n             例如，如果项目中的属性存在以下条件：\r\n            \r\n             条件=“'$（配置）| $（platform）'=='调试| x86'\r\n             条件=“'$（配置）'=='发行'”\r\n            \r\n             桌子会填充\r\n            \r\n             {“ configuration”，{“ debug”，“ release”}}\r\n             {“平台”，{“ x86”}}}\r\n            \r\n             Visual Studio用于确定项目中定义的配置。\r\n             \r\n","\r\n            This event is NOT raised for changes in individual projects.\r\n            ":"\r\n            该事件并未提高单个项目的变化。\r\n            \r\n","\r\n            Returns the toolset state used to initialize this registry, if any.\r\n            ":"\r\n            返回用于初始化此注册表的工具集状态（如果有）。\r\n            \r\n","\r\n            Dispose. Do nothing.\r\n            ":"\r\n            处置。没做什么。\r\n            \r\n","\r\n            Adds metadata with the specified name and value to the item.\r\n            Updates an existing metadata if one already exists with the same name on the item directly, as opposed to inherited from an item definition.\r\n            Updates the evaluated project, but does not affect anything else in the project until reevaluation. For example,\r\n            if a piece of metadata named \"m\" is added on item of type \"i\", it does not affect \"j\" which is evaluated from \"@(j->'%(m)')\" until reevaluation.\r\n            Also if the unevaluated value of \"m\" is set to something that is modified by evaluation, such as \"$(p)\", the evaluated value will be set to literally \"$(p)\" until reevaluation.\r\n            This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state.\r\n            Returns the new or existing metadatum.\r\n            ":"\r\n            将带有指定名称和值的元数据添加到项目中。\r\n            如果已直接在项目上的同名存在，而不是从项目定义继承，则更新现有的元数据。\r\n            更新评估的项目，但在重新评估之前不会影响项目中的其他任何内容。例如，\r\n            如果在类型的“ I”项目中添加了名为“ M”的元数据，则不会影响“ J”，该元素从“@（j->'％（m）'）”中进行评估，直到重新评估为止。\r\n            同样，如果“ m”的未评估值设置为通过评估修改的东西，例如“ $（p）”，则评估值将以字面的“ $（p）”设置为“ $（p）”，直到重新评估为止。\r\n            这是一种方便，可以理解，不一定会将项目处于完全一致的状态。\r\n            返回新的或现有的元数据。\r\n            \r\n","\r\n                Called once before the build, to have the plugin instantiate its state.\r\n                Errors are checked via ":"\r\n                在构建之前调用一次，以使插件实例化其状态。\r\n                通过检查错误\r\n","The configuration for the node.":"节点的配置。\r\n","Name of the SDK to determine the installation location for.":"SDK的名称以确定安装位置。\r\n","The continue on error flag.":"继续进行错误标志。\r\n","\r\n            If the condition is false, throws an InvalidProjectFileException complaining that the attribute is not valid on this element.\r\n            ":"\r\n            如果条件是错误的，请投掷无效的fileException，抱怨该属性在此元素上无效。\r\n            \r\n","\r\n            Get installed framework profiles\r\n            ":"\r\n            获得安装的框架配置文件\r\n            \r\n","Ignore files that do not exist on disk":"忽略磁盘上不存在的文件\r\n","\r\n            version 4.5.1\r\n            ":"\r\n            版本4.5.1\r\n            \r\n"," is temporarily disabled on\r\n            projects in this collection.\r\n            This allows, for example, global properties to be set without projects getting\r\n            marked dirty for reevaluation as a consequence.\r\n            ":" 暂时禁用\r\n            此集合中的项目。\r\n            例如，这允许设置全局属性，而无需项目\r\n            结果是重新评估的脏物。\r\n            \r\n","\r\n            True if it has been invoked\r\n            ":"\r\n            如果被调用了\r\n            \r\n","\r\n            Packet factory we use if there's not already one associated with a particular context. \r\n            ":"\r\n            数据包工厂，如果尚未与特定上下文关联，则使用。\r\n            \r\n","\r\n            Update the default targets value.\r\n            We only take the first DefaultTargets value we encounter in a project or import.\r\n            ":"\r\n            更新默认目标值。\r\n            我们仅在项目或导入中遇到的第一个DefaultTargets值。\r\n            \r\n","\r\n            Delegate is called when a node shuts down.\r\n            ":"\r\n            当节点关闭时，将调用委托。\r\n            \r\n","\r\n            If dwFlags specifies STARTF_USECOUNTCHARS, if a new console window is created in a console process, this member specifies the screen buffer height, in character rows. Otherwise, this member is ignored.dwFillAttribute \r\n            ":"\r\n            如果DWFLAGS指定startf_usecountchars，则在控制台进程中创建新的控制台窗口，则该成员在字符行中指定屏幕缓冲区高度。否则，将忽略此成员。dwfillattribute\r\n            \r\n"," by itself doesn't have the implementation\r\n            to materialize the Message as that's a declaration assembly. We inject the logic\r\n            here.\r\n            ":"本身没有实现\r\n            实现该消息，因为这是声明组件。我们注入逻辑\r\n            这里。\r\n            \r\n","\r\n            Strings which did not intern\r\n            ":"\r\n            没有实习的字符串\r\n            \r\n","\r\n            Writes to the log, using the default indentation. Does not \r\n            terminate with a newline.\r\n            ":"\r\n            使用默认凹痕写入日志。才不是\r\n            用新线终止。\r\n            \r\n","\r\n            The value of an item and any associated metadata to be added by an SDK resolver.  See ":"\r\n            SDK解析器要添加的项目的值和任何关联的元数据。看\r\n","\r\n            This method may be called by tasks which need to maintain state across task invocations,\r\n            such as to cache data which may be expensive to generate but which is known not to change during the \r\n            build.  It is strongly recommended that ":"\r\n            可以通过任务来调用此方法，这些任务需要在任务调用中维护状态，\r\n            例如缓存数据可能会生成昂贵，但已知在此期间不会更改\r\n            建造。强烈建议\r\n","\r\n            When true, indicates that the logger should tack the project file onto the end of errors and warnings.\r\n            ":"\r\n            如果为thum，则表示记录器应将项目文件贴在错误和警告的末尾。\r\n            \r\n","\r\n            Gets the effective property for the current scope.\r\n            If no match is found, returns null.\r\n            Caller must not modify the property returned.\r\n            ":"\r\n            获取当前范围的有效属性。\r\n            如果找不到匹配，请返回null。\r\n            呼叫者不得修改返回的属性。\r\n            \r\n","\r\n            Called by the project collection to indicate to this project that it is no longer loaded.\r\n            ":"\r\n            由项目集合召集来指示该项目不再加载。\r\n            \r\n","\r\n            Returns an XmlDocument representing the evaluated project's XML as if it all had \r\n            been loaded from a single file, instead of being assembled by pulling in imported files.\r\n            ":"\r\n            返回代表评估项目的XML的Xmldocument\r\n            是从一个文件中加载的，而不是通过拉出导入的文件来组装。\r\n            \r\n","\r\n            Signals when the tool exits. The Process object executing the tool\r\n            calls this method when the tool exits.\r\n            ":"\r\n            工具退出时的信号。执行工具的过程对象\r\n            工具退出时调用此方法。\r\n            \r\n","\r\n            Un-escape Targets, Properties (including Properties and AdditionalProperties as Project item metadata)\r\n            will be un-escaped before processing. e.g. %3B (an escaped ';') in the string for any of them will \r\n            be treated as if it were an un-escaped ';'\r\n            ":"\r\n            UN-ESCAPE目标，属性（包括属性和其他Properties作为项目项目元数据）\r\n            处理前将不被淘汰。例如其中任何一个中的％3B（一个逃脱的';'）将\r\n            被视为是一个未散布的';\r\n            \r\n","\r\n            A singly linked list of strings where the most recently accessed string is at the top.\r\n            Size expands up to a fixed number of strings.\r\n            ":"\r\n            最近访问的字符串位于顶部的单链列表。\r\n            尺寸扩大到固定数量的字符串。\r\n            \r\n","The line number in the file where the task invocation is located.":"任务调用所在的文件中的行号。\r\n","The task's resources (can be null).":"任务的资源（可以为null）。\r\n","text message.":"短信。\r\n","\r\n             This is using the theory described at: \r\n              http://blogs.msdn.com/jmstall/archive/2005/07/27/state-machine-theory.aspx. \r\n             The summary is that it emits IL snippets (\"Islands\") for each state in the machine.\r\n             The island serves as a spot to set a breakpoint. \r\n            \r\n             You should be able to set breakpoints on states and hit them.\r\n             To do stepping between states:\r\n               - ensure the interpreter is non-user code (perhaps by placing the [DebuggerNonUserCode] attribute\r\n                  on all the classes, or not providing the symbols to the debugger)\r\n               - ensure Just-My-Code is turned on. In VS2005, \r\n                   this is at: Tools > Options  > Debugging > General, \"Enable Just My Code\".\r\n              - Use step-in (F11) between states.\r\n             \r\n             \r\n             The general usage is to call:\r\n              - DefineState() for each state\r\n              - Bake() once you've defined all the states you need to enter.\r\n              - EnterState() / LeaveState() for each state. \r\n             You can Define new states and bake them, such as if the script loads a new file.\r\n             Baking is expensive, so it's best to define as many states in each batch.\r\n            \r\n             UNDONE: Show proper state of items and properties set and modified within targets.\r\n             UNDONE: Characterization and fixing of debugging multiproc MSBuild, and MSBuild hosted by VS.\r\n             ":"\r\n             这是使用以下理论所描述的：\r\n              http://blogs.msdn.com/jmstall/archive/2005/07/27/state-machine-theory.aspx。\r\n             摘要是它为机器中的每个州发出IL摘要（“岛”）。\r\n             该岛是设定断点的地方。\r\n            \r\n             您应该能够在状态上设置断点并击中它们。\r\n             在国家之间进行阶级：\r\n                - 确保解释器是非用户代码（也许是通过放置[debuggernonusercode]属性\r\n                  在所有类中，或不向调试器提供符号）\r\n                - 确保刚打开我的代码。在VS2005中，\r\n                   这是：工具>选项>调试>一般，“仅启用我的代码”。\r\n               - 在状态之间使用阶跃（F11）。\r\n             \r\n             \r\n             一般用法是致电：\r\n               - 每个状态的定义（）\r\n              -Bake（）定义了所有需要输入的状态。\r\n               - 每个状态的sterstate（） / leavestate（）。\r\n             您可以定义新状态并烘烤它们，例如脚本加载新文件。\r\n             烘烤很昂贵，因此最好在每批中定义尽可能多的州。\r\n            \r\n             撤消：显示目标设置和修改的项目和属性的正确状态。\r\n             撤消：调试多个MSBUILD的表征和固定，以及VS托管的MSBUILD。\r\n             \r\n","\r\n            Task factory used to create CodeDom-based inline tasks.  Special-cased as one of two officially\r\n            supported task factories in Microsoft.Build.Tasks.vX.Y.dll to deal with versioning issue.\r\n            ":"\r\n            任务工厂用于创建基于编码的内联任务。作为两个正式之一的特殊赛\r\n            Microsoft.build.tasks.vx.y.dll中支持的任务工厂来处理版本化问题。\r\n            \r\n","\r\n            Detects a circular dependency where the blocking request is in our direct ancestor chain.\r\n            ":"\r\n            检测到我们直接祖先链中阻塞请求的位置的循环依赖性。\r\n            \r\n","\r\n            Normal load. This is the default.\r\n            ":"\r\n            正常负载。这是默认值。\r\n            \r\n","\r\n            Called when a build request entry has a state change.  We should re-evaluate our requests when this happens.\r\n            ":"\r\n            当构建请求条目具有状态更改时，请致电。发生这种情况时，我们应该重新评估我们的要求。\r\n            \r\n","\r\n            version 4.6.1\r\n            ":"\r\n            版本4.6.1\r\n            \r\n","\r\n            List of ProjectUsingTaskElement's traversing into imports.\r\n            Gathered during the first pass to avoid traversing again.\r\n            Key is the directory of the file importing the usingTask, which is needed\r\n            to handle any relative paths in the usingTask.\r\n            ":"\r\n            ProjectingTaskelement列表的进口列表。\r\n            在第一次通行证中聚集，以避免再次穿越。\r\n            关键是导入usedTask的文件的目录，需要\r\n            处理使用任务中的任何相对路径。\r\n            \r\n","\r\n            Gets the specified metadata value for the qualified item type.  Returns null if none is set.\r\n            ":"\r\n            获取合格项目类型的指定元数据值。返回null，如果没有设置。\r\n            \r\n","\r\n            Returns the value if it exists.\r\n            If no value is available, returns null.\r\n            If item type is null, it is ignored, otherwise it must match.\r\n            ":"\r\n            如果存在值，则返回该值。\r\n            如果没有可用的值，请返回null。\r\n            如果项目类型为null，则将忽略，否则必须匹配。\r\n            \r\n"," describing properties, items, and metadata that should be returned. Requires setting ":" 描述应返回的属性，项目和元数据。需要设置\r\n","\r\n            Condition on the element.\r\n            If there is no condition, returns empty string.\r\n            ":"\r\n            元素的条件。\r\n            如果没有条件，请返回空字符串。\r\n            \r\n","\r\n            Factory for serialization.\r\n            ":"\r\n            工厂序列化。\r\n            \r\n","Currently requires creating a new segmented list, but could be modified to only clone the segments with changes":"当前需要创建一个新的分段列表，但可以修改以仅克隆段来进行更改\r\n","\r\n            Asserts that the entry is in the active or waiting state.\r\n            ":"\r\n            断言该条目处于活动状态或等待状态。\r\n            \r\n","\r\n            Generate the key which will be used for the reference assembly cache so that multiple static methods will generate it in the same way.\r\n            ":"\r\n            生成将用于参考组件缓存的密钥，以便多个静态方法以相同的方式生成它。\r\n            \r\n","The rooting marker that should be removed from the graph":"应从图中删除的生根标记\r\n","\r\n            Takes a property name / value that comes from the SLN file for a Venus project, and\r\n            stores it appropriately in our data structures.\r\n            ":"\r\n            获取来自金星项目的SLN文件的属性名称 /值，\r\n            将其适当地存储在我们的数据结构中。\r\n            \r\n","\r\n                An abstract interface class provided to ":"\r\n                提供的抽象接口类\r\n","\r\n            Returns the result code for the target.\r\n            ":"\r\n            返回目标的结果代码。\r\n            \r\n","\r\n            Constructor with location information\r\n            ":"\r\n            带有位置信息的构造函数\r\n            \r\n","\r\n            Raised when a ":"\r\n            升起时\r\n","\r\n            Assigns requests preferring the ones which have the most other requests waiting on them using the transitive closure.\r\n            ":"\r\n            分配请求偏爱使用传递闭合等待其他请求的最多请求的请求。\r\n            \r\n","\r\n            Determines whether a task with the given name is instantiable by this factory.\r\n            ":"\r\n            确定该工厂是否可以立即进行即时的任务。\r\n            \r\n","\r\n            Unregisters a previously registered task object.\r\n            ":"\r\n            解开先前注册的任务对象。\r\n            \r\n","\r\n            The FrameStack class represents a (lifo) stack of Frames.\r\n            ":"\r\n            Framestack类代表（LIFO）框架。\r\n            \r\n","\r\n            Wrapped ProjectRootElement\r\n            ":"\r\n            包裹的项目Rootlement\r\n            \r\n","\r\n            Retrieves the BuildParameters used during the build.\r\n            ":"\r\n            检索构建过程中使用的构建参数。\r\n            \r\n","The default ToolsVersion to use as a fallback":"用作后备的默认工具交换\r\n","\r\n            Don't collect any files during the build.\r\n            ":"\r\n            在构建过程中不要收集任何文件。\r\n            \r\n","\r\n            Call this method to notify listeners of information relevant to the setup for a BuildManager to receive build requests.\r\n            ":"\r\n            调用此方法，将与设置相关的信息通知听众，以使buildmanager接收构建请求。\r\n            \r\n","\r\n            Condition value cached for performance\r\n            ":"\r\n            条件价值缓存以进行性能\r\n            \r\n","\r\n            Component host for this component which is used to get system parameters and other initialization information.\r\n            ":"\r\n            该组件的组件主机用于获取系统参数和其他初始化信息。\r\n            \r\n","\r\n            Helps implementing sub element indexer.\r\n            ":"\r\n            帮助实现子元素索引器。\r\n            \r\n","\r\n            Regkey that we check to see whether VB Express 2010 is installed.  This will exist if it is installed, and be \r\n            properly removed after it has been uninstalled.  \r\n            ":"\r\n            我们检查是否安装了VB Express 2010。如果安装它，则将存在，并且\r\n            卸载后正确删除。\r\n            \r\n","\r\n            Implementation of the serialization mechanism.\r\n            ":"\r\n            实施序列化机制。\r\n            \r\n","\r\n            Constructs a response indicating there is a circular dependency caused by the specified request.\r\n            ":"\r\n            构建响应，表明指定请求引起的循环依赖性。\r\n            \r\n","\r\n            Verify  that all attributes on the element are on the list of legal attributes\r\n            ":"\r\n            验证该元素上的所有属性都在法律属性列表中\r\n            \r\n","\r\n            The identifier of the node.\r\n            ":"\r\n            节点的标识符。\r\n            \r\n","\r\n            Initialize a ProjectItemDefinitionElement instance from a node read from a project file\r\n            ":"\r\n            从项目文件中读取节点的projectItemDefinitionElement实例\r\n            \r\n","\r\n            ITaskItem2 implementation which returns a clone of the metadata on this object.\r\n            Values returned are in their original escaped form.\r\n            ":"\r\n            ITASKITEM2实现该对象上返回元数据的克隆。\r\n            返回的值以其原始逃脱形式。\r\n            \r\n","Offset in string to start the search in":"偏移字符串以启动搜索\r\n","\r\n            The cache for build request configurations.\r\n            ":"\r\n            用于构建请求配置的缓存。\r\n            \r\n","\r\n            The provider for task host nodes. \r\n            ":"\r\n            任务主机节点的提供商。\r\n            \r\n","Collection for transforms if they should be collected separately, else null":"收集用于转换的收集如果应分别收集，则否则\r\n","\r\n            The default tools version of this project collection. Projects use this tools version if they\r\n            aren't otherwise told what tools version to use.\r\n            This value is gotten from the .exe.config file, or else in the registry,\r\n            or if neither specify a default tools version then it is hard-coded to the tools version \"2.0\".\r\n            Setter throws InvalidOperationException if a toolset with the provided tools version has not been defined.\r\n            Always defined.\r\n            ":"\r\n            此项目集合的默认工具版本。项目使用此工具版本，如果\r\n            否则不会告诉使用哪些工具版本。\r\n            此值是从.exe.config文件中获得的，或者在注册表中获得\r\n            或者，如果没有指定默认工具版本，则将其硬编码为工具版本“ 2.0”。\r\n            如果尚未定义带有提供的工具版本的工具集，则setter抛出无效的exception。\r\n            总是定义。\r\n            \r\n"," containing strings that were later removed via the Remove element.\r\n            ":" 包含以后通过删除元件去除的字符串。\r\n            \r\n","\r\n            Backing XML object.\r\n            Can never be null: projects must always be backed by XML\r\n            ":"\r\n            备份XML对象。\r\n            永远不会为null：项目必须始终得到XML的支持\r\n            \r\n","\r\n            Comparer for ":"\r\n            比较\r\n","The node id":"节点ID\r\n","\r\n            The environment at the time the build is started.\r\n            ":"\r\n            构建开始时的环境。\r\n            \r\n","\r\n            ITaskItem2 implementation which returns a clone of the metadata on this object.\r\n            Values returned are in their original escaped form. \r\n            ":"\r\n            ITASKITEM2实现该对象上返回元数据的克隆。\r\n            返回的值以其原始逃脱形式。\r\n            \r\n","\r\n            Reference to manifest object\r\n            Makes it is instantiated only once \r\n            ":"\r\n            引用清单对象\r\n            使其仅实例化一次\r\n            \r\n","\r\n            An interface implemented by tasks that are generated by ITaskFactory instances.\r\n            ":"\r\n            由ItaskFactory实例生成的任务实现的接口。\r\n            \r\n","\r\n            Gets a count of all of the yielded requests.\r\n            ":"\r\n            获取所有屈服要求的计数。\r\n            \r\n","\r\n            Gets the canonicalized full path of the provided path.\r\n            Guidance for use: call this on all paths accepted through public entry\r\n            points that need normalization. After that point, only verify the path\r\n            is rooted, using ErrorUtilities.VerifyThrowPathRooted.\r\n            ASSUMES INPUT IS ALREADY UNESCAPED.\r\n            ":"\r\n            获取所提供路径的规范化完整路径。\r\n            使用指南：在通过公共进入接受的所有路径上调用此指南\r\n            需要归一化的点。此后，只验证路径\r\n            使用errorutilities.verifyThrowPathRooted扎根。\r\n            假设输入已经被阐明了。\r\n            \r\n","The manager-side endpoint.":"经理端端点。\r\n","\r\n            Default (family) constructor.\r\n            ":"\r\n            默认（家庭）构造函数。\r\n            \r\n","\r\n             Logs a warning using the specified resource string.\r\n             If the message has a warning code prefixed to it, the code is extracted and logged with the message. If a help keyword\r\n             prefix has been provided, a help keyword for the host IDE is also logged with the message. The help keyword is\r\n             composed by appending the string resource name to the prefix.\r\n            \r\n             A task can provide a help keyword prefix either via the Task (or TaskMarshalByRef) base class constructor, or the\r\n             Task.HelpKeywordPrefix (or AppDomainIsolatedTask.HelpKeywordPrefix) property.\r\n            \r\n             Thread safe.\r\n             ":"\r\n             使用指定的资源字符串记录警告。\r\n             如果该消息的警告代码前缀为其，则将提取并登录消息。如果帮助关键字\r\n             已经提供了前缀，也记录了该消息的主机IDE的帮助关键字。帮助关键字是\r\n             通过将字符串资源名称附加到前缀中来组成。\r\n            \r\n             任务可以通过任务（或taskmarshalbyref）基类构造函数或\r\n             task.helpkeywordprefix（或app domainisolatedTask.helpkeywordprefix）属性。\r\n            \r\n             线程安全。\r\n             \r\n","\r\n            serializes IItemType.ItemType\r\n            ":"\r\n            序列化iitemtype.itemtype\r\n            \r\n","\r\n            Handle the Build Finished event\r\n            ":"\r\n            处理构建成品事件\r\n            \r\n","\r\n            Intrinsic function that combines the existing paths of the input items with a given relative path.\r\n            ":"\r\n            将输入项目的现有路径与给定的相对路径相结合的固有函数。\r\n            \r\n","The provider used to create the node.":"提供商用于创建节点。\r\n","\r\n            Store the path for the 64-bit MSBuild so that we don't have to keep re-calculating it. \r\n            ":"\r\n            存储64位MSBUILD的路径，以便我们不必继续重新计算它。\r\n            \r\n","The type of items to produce.":"要生产的项目类型。\r\n","\r\n            This is for internal use by MSBuild, only.\r\n            ":"\r\n            这仅用于MSBUILD的内部使用。\r\n            \r\n","\r\n            The list of possible values for this property. Must have at least one value.\r\n            ":"\r\n            此属性的可能值列表。必须至少具有一个值。\r\n            \r\n","\r\n            Normalizes the expression returned by ":"\r\n            使返回的表达式归一\r\n","\r\n            The number of inproc nodes that can be created without hitting the\r\n            node limit.\r\n            ":"\r\n            可以创建的INPROC节点的数量，而无需击中\r\n            节点限制。\r\n            \r\n","\r\n            Finds a matching configuration in the cache and returns it, or stores the configuration passed in.\r\n            ":"\r\n            在缓存中找到匹配的配置并将其返回，或存储传递的配置。\r\n            \r\n","\r\n            This code handles the *.REFRESH files that are in the \"bin\" subdirectory of\r\n            a web project.  These .REFRESH files are just text files that contain absolute or\r\n            relative paths to the referenced assemblies.  The goal of these tasks is to\r\n            search all *.REFRESH files and extract fully-qualified absolute paths for\r\n            each of the references.\r\n            ":"\r\n            此代码处理的 *.refresh文件在“ bin”子目录中\r\n            网络项目。这些.refresh文件只是包含绝对或\r\n            引用组件的相对路径。这些任务的目标是\r\n            搜索所有 *.refresh文件，并提取完全合格的绝对路径\r\n            每个参考。\r\n            \r\n","\r\n            A buffer typically big enough to handle a packet body.\r\n            ":"\r\n            一个缓冲区通常足够大以处理包子。\r\n            \r\n","\r\n            Evaluate a single ProjectPropertyElement and update the data as appropriate\r\n            ":"\r\n            评估单个Project Propertyelement并适当更新数据\r\n            \r\n","What is the targeted platform, this is used to determine where we should look for the standard libraries. Note, this parameter is only used for .net frameworks less than 4.0":"什么是目标平台，用于确定我们应该在哪里寻找标准库。注意，此参数仅用于小于4.0的.NET框架\r\n","The latest installed version for the given SDK":"给定SDK的最新安装版本\r\n","\r\n            Given a string like \"Registry:HKEY_LOCAL_MACHINE\\Software\\Vendor\\Tools@TaskLocation\", returns String.Empty, as FEATURE_WIN32_REGISTRY is off.\r\n            ":"\r\n            给定一个字符串，例如“注册表：hkey_local_machine \\ software \\ vendor \\ wools@taskLocation”，返回字符串。\r\n            \r\n"," that returns\r\n            a full ICollection.\r\n            Unordered collection of evaluated metadata on the item.\r\n            If there is no metadata, returns an empty collection.\r\n            Does not include built-in metadata.\r\n            Includes any from item definitions not masked by directly set metadata.\r\n            This is a read-only collection. To modify the metadata, use ":" 返回\r\n            完整的偶像。\r\n            该项目上评估的元数据的无序集合。\r\n            如果没有元数据，请返回一个空的收藏。\r\n            不包括内置元数据。\r\n            包括任何未直接设置元数据的项目定义中的任何定义。\r\n            这是一个只读的集合。要修改元数据，请使用\r\n"," This class inherits the ":" 此类继承\r\n","The API contract definitions":"API合同定义\r\n","\r\n            An exception representing the case where the build was aborted by request, as opposed to being\r\n            unceremoniously shut down due to another kind of error exception.\r\n            ":"\r\n            一个例外，代表构建被要求中止的情况，而不是\r\n            由于另一种错误例外，毫不客气地关闭。\r\n            \r\n","\r\n            The held string.\r\n            ":"\r\n            固定的绳子。\r\n            \r\n","\r\n            The name is inconsistent to make it more understandable, per API review.\r\n            ":"\r\n            根据API评论，该名称不一致，使其更容易理解。\r\n            \r\n","\r\n            This class is used by objects in the build engine that have the ability to execute themselves in batches, to partition the\r\n            items they consume into \"buckets\", based on the values of select item metadata.\r\n            ":"\r\n            该类是由构建引擎中的对象使用的，该对象能够分批执行自己，以分区\r\n            他们根据选定项目元数据的值将它们消耗到“存储桶”中。\r\n            \r\n","\r\n            Gets an instance of a TaskLoggingHelper class containing task logging methods.\r\n            The taskLoggingHelper is a MarshallByRef object which needs to have MarkAsInactive called\r\n            if the parent task is making the appdomain and marshaling this object into it. If the appdomain is not unloaded at the end of \r\n            the task execution and the MarkAsInactive method is not called this will result in a leak of the task instances in the appdomain the task was created within.\r\n            ":"\r\n            获取包含任务记录方法的TaskLoggingHelper类的实例。\r\n            TaskLoggingHelper是一个需要称为MarkasInactive的MarshallbyRef对象\r\n            如果父任务正在使AppDomain并将此对象编写到其中。如果在末尾未卸载AppDomain\r\n            任务执行和标记方法未称为此任务将导致AppDomain中的任务实例泄漏该任务是在内部创建的。\r\n            \r\n","\r\n            Gets the set of requests which cannot proceed because they are waiting for results from us.\r\n            ":"\r\n            获取一组无法进行的请求，因为他们正在等待我们的结果。\r\n            \r\n","\r\n            Used for finding loggers when reflecting through assemblies.\r\n            ":"\r\n            用于通过组件反射时查找记录器。\r\n            \r\n","\r\n            Returns the current engine status.\r\n            ":"\r\n            返回当前的发动机状态。\r\n            \r\n","This is the only usable constructor.":"这是唯一可用的构造函数。\r\n","\r\n            Dictionary of {child, parent} import relationships.\r\n            ":"\r\n            {child，parent}导入关系的字典。\r\n            \r\n","\r\n            Value of ToolsVersion to use when building projects passed to this task.\r\n            ":"\r\n            构建项目传递给此任务时要使用的工具交换值。\r\n            \r\n","\r\n            Translates a long.\r\n            ":"\r\n            翻译很长。\r\n            \r\n","\r\n            Exit debugging.\r\n            Called by debugger manager thread.\r\n            ":"\r\n            退出调试。\r\n            由Debugger Manager线程拨打。\r\n            \r\n","\r\n            Starts the request asynchronously and immediately returns control to the caller.\r\n            ":"\r\n            异步启动请求，并立即将控件返回到呼叫者。\r\n            \r\n","\r\n            Returns true if this is a root request (one which has no parent.)\r\n            ":"\r\n            如果这是根请求（一个没有父母的root请求），则返回true。\r\n            \r\n"," is the default value for the associated\r\n            ":" 是关联的默认值\r\n            \r\n","\r\n            Why the parent target built this target.\r\n            ":"\r\n            父母目标为什么构建了这个目标。\r\n            \r\n","\r\n            Output the projectKey or the projectKey and the entrypointKey depending on the verbosity level of the logger\r\n            ":"\r\n            根据记录器的详细级别输出项目键或projectkey和entrypointkey\r\n            \r\n","\r\n                Initialize an non-parented ProjectSdkElement\r\n            ":"\r\n                初始化非父母项目dkelement\r\n            \r\n","\r\n            Returns true if this SDK supports the given platform, or false otherwise. \r\n            ":"\r\n            如果此SDK支持给定平台，则返回true，否则为false。\r\n            \r\n","\r\n            Gets the outputs (as an array of string values) from the specified output parameter.\r\n            ":"\r\n            从指定的输出参数获取输出（作为字符串值数组）。\r\n            \r\n","\r\n            Gets or sets the Returns value.\r\n            Returns null if the attribute is not present -- empty string is an allowable\r\n            value for both getting and setting.\r\n            Removes the attribute only if the value is set to null.\r\n            ":"\r\n            获取或设置返回值。\r\n            如果不存在该属性，则返回null  - 空字符串是允许的\r\n            获得和设置的价值。\r\n            仅当将值设置为null时，才删除属性。\r\n            \r\n","An array of projects to be built.":"要建立的一系列项目。\r\n"," is set\r\n            to true.\r\n            ":" 设置\r\n            真实。\r\n            \r\n","true if right version is higher than left, false otherwise":"如果右版本高于左版本，则为true，否则为false\r\n","\r\n            Invokes the OnNewBuildRequests event\r\n            ":"\r\n            调用NewbuildRequests活动\r\n            \r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n            Adds a new property group after the last existing property group, if any; otherwise\r\n            at the start of the project.\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n            在最后一个现有的属性组之后，添加了一个新的属性组，如果有的话；否则\r\n            在项目开始时。\r\n            \r\n","\r\n            Deserialize a type or a subtype by its full name. The type must implement ITranslateable\r\n            ":"\r\n            通过其全名供应类型或子类型。该类型必须实现Itranslatsable\r\n            \r\n","\r\n             Attach an external project provider to a msbuild ProjectCollection.\r\n            \r\n             Note at any time there could be only one ExternalProvider attached.\r\n            \r\n             Can be called with link == null, in which case it will \"clear\" the external provider on the target collection\r\n             ":"\r\n             将外部项目提供商附加到MSBuild ProjectCollection。\r\n            \r\n             注意，任何时候都可能只附有一个外部推荐。\r\n            \r\n             可以使用link == null调用，在这种情况下，它将“清除”目标集合上的外部提供商\r\n             \r\n","\r\n            Delegate for StrongCacheEntryRemoved event\r\n            ":"\r\n            委员\r\n            \r\n","\r\n            Gets any metadatum on this item definition with the specified name.\r\n            ":"\r\n            用指定名称获取此项目定义上的任何元数据。\r\n            \r\n","\r\n            Whether to trace communications\r\n            ":"\r\n            是否跟踪通信\r\n            \r\n","The class is public so that we can call it from MSBuild.exe when replaying a log file.":"该类是公开的，因此我们可以在重播日志文件时从msbuild.exe调用它。\r\n","The task execution mode":"任务执行模式\r\n","\r\n            Creates a new element\r\n            ":"\r\n            创建一个新元素\r\n            \r\n","The event context for where the warning occurred":"警告发生的事件上下文\r\n","\r\n            Exception that should be thrown by a logger when it cannot continue.\r\n            Allows a logger to force the build to stop in an explicit way, when, for example, it \r\n            receives invalid parameters, or cannot write to disk.\r\n            ":"\r\n            当记录仪无法继续时，应该被记录器抛出的例外。\r\n            允许记录器迫使构建以明确的方式停止，例如\r\n            接收无效的参数，或者无法写入磁盘。\r\n            \r\n","\r\n            If dwFlags specifies STARTF_USEFILLATTRIBUTE, this member is the initial text and background colors if a new console window is created in a console application. Otherwise, this member is ignored. \r\n            ":"\r\n            如果DWFLAGS指定startf_usefillattribute，则如果在控制台应用程序中创建了新的控制台窗口，则该成员是初始文本和背景颜色。否则，该成员将被忽略。\r\n            \r\n","\r\n            Disables switching codepage to UTF-8 after detection of characters that can't be represented in the current codepage.\r\n            ":"\r\n            在检测到当前代码epage中无法表示的字符后，禁用将代码ep缩短到UTF-8。\r\n            \r\n"," object indicating success / failure.\r\n            ":" 表示成功 /失败的对象。\r\n            \r\n","\r\n            Source of the metadata.\r\n            ":"\r\n            元数据的来源。\r\n            \r\n","\r\n            Get a fully qualified path to a file in the .NET Framework SDK. Error if the .NET Framework SDK can't be found.\r\n            When targeting .NET 3.5 or above, looks in the locations associated with Visual Studio 2010.  If you wish to \r\n            target the .NET Framework SDK that ships with Visual Studio Dev11 or later, please use the override that \r\n            specifies a VisualStudioVersion. \r\n            ":"\r\n            在.NET Framework SDK中获取通往文件的完全合格的路径。如果找不到.NET Framework SDK，则错误。\r\n            定位.NET 3.5或更高时，请查看与Visual Studio 2010相关的位置。如果您想\r\n            针对以Visual Studio Dev11或更高版本发货的.NET Framework SDK，请使用该替代\r\n            指定一个VisualStudioversion。\r\n            \r\n","\r\n            Removing one item could cause the backing XML\r\n            to be expanded, which could zombie (disassociate) the next item.\r\n            To make this case easy for the caller, if an item\r\n            is not associated with this project it is simply skipped.\r\n            ":"\r\n            删除一项可能会导致支持XML\r\n            要扩展，这可能会僵尸（分解）下一个项目。\r\n            为了使呼叫者容易，如果有项目\r\n            与该项目无关，它只是跳过。\r\n            \r\n","\r\n            Remove a toolset and does not raise events. The caller should have acquired a lock on this method's behalf.\r\n            ":"\r\n            删除工具集，不会提出事件。呼叫者应该代表该方法获得锁定。\r\n            \r\n","\r\n            Item type, for example \"Compile\", that this item definition applies to\r\n            ":"\r\n            项目类型，例如“编译”，该项目定义适用于\r\n            \r\n","Path to this toolset's tasks and targets":"通往此工具集的任务和目标的路径\r\n","\r\n            Used to determine if a file is an empty XML file if it ONLY contains an XML declaration like <?xml version=\"1.0\" encoding=\"utf-8\"?>.\r\n            ":"\r\n            如果文件仅包含XML声明，则用于确定文件是否是一个空文件，例如<？xml版本=“ 1.0” encoding =“ utf-8”？>。\r\n            \r\n","\r\n            Creates an on error node.\r\n            Caller must add it to the location of choice in the project.\r\n            ":"\r\n            创建一个错误节点。\r\n            呼叫者必须将其添加到项目中选择的位置。\r\n            \r\n","\r\n            Whether to write information about why we evaluate to debug output.\r\n            ":"\r\n            是否编写有关我们为什么评估调试输出的信息。\r\n            \r\n","\r\n            Create an instance of the wrapped ITask for a batch run of the task.\r\n            ":"\r\n            为任务的批量运行创建包装ITASK的实例。\r\n            \r\n","\r\n            True if there is a configuration with the specified id, false otherwise.\r\n            ":"\r\n            true如果有指定ID的配置，则否则为false。\r\n            \r\n","\r\n            Whether or not the ":"\r\n            是否\r\n","Depth to indent.":"深度缩进。\r\n","\r\n            Produce a string representation.\r\n            ":"\r\n            产生字符串表示。\r\n            \r\n","\r\n            The cache to consult for any imports that need loading.\r\n            ":"\r\n            咨询任何需要加载的进口的缓存。\r\n            \r\n","\r\n            Callback invoked by the completion of a read of a header byte on one of the named pipes.\r\n            ":"\r\n            通过在其中一个命名管上完成标头字节的读取的读取来调用回调。\r\n            \r\n","\r\n            Flags providing additional control over the build request\r\n            ":"\r\n            提供对构建请求的额外控制的标志\r\n            \r\n","\r\n            This class is designed to be passed to loggers.\r\n            The expense of copying items is only incurred if and when\r\n            a logger chooses to enumerate over it.\r\n            The type of the items enumerated over is imposed by backwards compatibility for ProjectStartedEvent.\r\n            ":"\r\n            该课程旨在将其传递给伐木工人。\r\n            复制项目的费用仅在以及\r\n            记录仪选择枚举它。\r\n            列举的项目的类型是通过ProjectStartedEvent的向后兼容性强加的。\r\n            \r\n","\r\n            get items by item type and evaluated include value\r\n            ":"\r\n            按项目类型获取项目，并评估包括值\r\n            \r\n","The root element cache which should be used for the generated project.":"根元素缓存应用于生成项目。\r\n","\r\n            List of possible values for properties inferred from certain conditions,\r\n            keyed by the property name.\r\n            ":"\r\n            从某些条件推断出的属性的可能值列表，\r\n            以属性名称为单位。\r\n            \r\n","\r\n            Whether a cache has been provided by a project instance, meaning\r\n            we've acquired at least one build submission that included a project instance.\r\n            Once that has happened, we use the provided one, rather than our default.\r\n            ":"\r\n            项目实例是否提供了缓存，含义\r\n            我们已经获得了包括项目实例在内的至少一个构建提交。\r\n            一旦发生这种情况，我们就会使用提供的一个，而不是我们的默认值。\r\n            \r\n","\r\n            The reason we do this and not just look at project.GlobalProperties is\r\n            that when the project is being loaded, the GlobalProperties collection is already populated.  When we do our\r\n            evaluation, we may attempt to add some properties, such as environment variables, to the master Properties\r\n            collection.  As GlobalProperties are supposed to override these and thus be added last, we can't check against\r\n            the GlobalProperties collection as they are being added.  The correct behavior is to always check against the\r\n            collection which is accumulating properties as we go, which is the Properties collection.  Once the project has\r\n            been fully populated, this method will also ensure that further properties do not attempt to override global\r\n            properties, as those will have the global property flag set.\r\n            ":"\r\n            我们这样做的原因，而不仅仅是看项目。GlobalProperties是\r\n            当项目加载时，GlobalProperties Collection已经填充。当我们做我们的\r\n            评估，我们可能会尝试将一些属性（例如环境变量）添加到主属性\r\n            收藏。由于应该覆盖它们，因此最后添加了，我们无法检查\r\n            添加时，GlobalProperties集合。正确的行为是始终检查\r\n            收集我们的累积属性，即属性集合。一旦项目有\r\n            被完全填充，此方法还将确保进一步的属性不会尝试覆盖全局\r\n            属性，因为这些将具有全局属性标志集。\r\n            \r\n","\r\n            Initialize a parented ProjectItemGroupElement\r\n            ":"\r\n            初始化育儿ProjectItemGroupelement\r\n            \r\n","Identifier for the platform":"平台的标识符\r\n","\r\n            The state enumeration for SchedulableRequests.\r\n            ":"\r\n            SchedulableRequests的国家枚举。\r\n            \r\n","The name of the task raising this event.":"提出此事件的任务名称。\r\n","m1":"M1\r\n","\r\n            Gets the global properties for the current project.\r\n            ":"\r\n            获取当前项目的全球属性。\r\n            \r\n","\r\n            Retrieves a hosted":"\r\n            检索托管\r\n","\r\n            Retrieves the task id.\r\n            ":"\r\n            检索任务ID。\r\n            \r\n","\r\n            For console processes, this is the title displayed in the title bar if a new console window is created. \r\n            If NULL, the name of the executable file is used as the window title instead. \r\n            This parameter must be NULL for GUI or console processes that do not create a new console window\r\n            ":"\r\n            对于控制台进程，如果创建了新的控制台窗口，则这是标题栏中显示的标题。\r\n            如果为null，则使用可执行文件的名称代替用作窗口标题。\r\n            对于不创建新控制台窗口的GUI或控制台进程，此参数必须为null\r\n            \r\n","\r\n            Forces a removal of a project root element from the weak cache if it is present.\r\n            ":"如果存在，则迫使从弱高速缓存中去除项目根元件。\r\n            \r\n","The task instance.":"任务实例。\r\n","\r\n             Produces a set of targets which allows the MSBuild scheduler to schedule projects in the order automatically by\r\n             following their dependencies without enforcing build levels.\r\n             ":"\r\n             产生一组目标，使MSBUILD调度程序可以自动安排项目\r\n             遵循他们的依赖项，而无需执行构建水平。\r\n             \r\n","\r\n            Ths component host\r\n            ":"\r\n            THS组件主机\r\n            \r\n","\r\n            Returns the set of parameters that can contribute to a task's identity, and their values for this particular task.  \r\n            ":"\r\n            返回可以为任务的身份做出贡献的一组参数及其对该特定任务的值。\r\n            \r\n"," A dictionary whose keys are the ":" 键的字典是\r\n"," to return escaped specs.":" 返回逃脱的规格。\r\n"," will be used with the specified style. Example values are ":" 将与指定样式一起使用。示例值是\r\n","\r\n            The project graph entry points.\r\n            May be null.\r\n            ":"\r\n            项目图入口点。\r\n            可能是无效的。\r\n            \r\n","\r\n            Pretty prints an evaluation location in markdown format\r\n            ":"\r\n            漂亮以降价格式打印评估位置\r\n            \r\n","PERF WARNING: this Regex is complex and tends to run slowly":"完美警告：此正则是复杂的，并且往往会缓慢运行\r\n","\r\n            This packet is sent by a node to request or release resources from/to the scheduler.\r\n            ":"\r\n            该数据包由节点发送，以从/向调度程序发送或发布资源。\r\n            \r\n","\r\n            This is the ID of the configuration as set by the generator of the configuration.  When\r\n            a node generates a configuration, this is set to a negative number.  The Build Manager will\r\n            generate positive IDs\r\n            ":"\r\n            这是由配置的生成器设置的配置的ID。什么时候\r\n            节点生成配置，将其设置为负数。构建经理将\r\n            产生正ID\r\n            \r\n","\r\n            Return the command-line as a string.\r\n            ":"\r\n            将命令行作为字符串返回。\r\n            \r\n","\r\n            Event is a ProjectEvaluationFinishedEventArgs\r\n            ":"\r\n            活动是一个ProjectEvaluationFinedEventargs\r\n            \r\n","\r\n            This is not the same as BuildProcessEnvironment.  See EnvironmentProperties.  These properties are those which\r\n            are used during evaluation of a project, and exclude those properties which would not be valid MSBuild properties\r\n            because they contain invalid characters (such as 'Program Files (x86)').\r\n            ":"\r\n            这与BuildProcessenvironment不同。请参阅环境保护。这些属性是\r\n            在评估项目期间使用，并排除那些无效属性属性的属性\r\n            因为它们包含无效字符（例如“程序文件（x86）”）。\r\n            \r\n","The list which should be populated with responses from the scheduling.":"该列表应填充计划中的响应。\r\n","namespace qualified type name":"名称空间合格类型名称\r\n","\r\n            The kind of the evaluated location being tracked\r\n            ":"\r\n            跟踪所评估的位置的种类\r\n            \r\n","\r\n            Shuts down all of the managed nodes permanently.  This is an asynchronous method - the nodes are\r\n            not considered shut down until a NodeShutdown packet has been received.\r\n            ":"\r\n            永久关闭所有托管节点。这是一种异步方法 - 节点是\r\n            直到收到nodeShutdown数据包之前，才考虑关闭。\r\n            \r\n","Message formatting arguments":"消息格式参数\r\n","\r\n            The default global properties.\r\n            ":"\r\n            默认的全局属性。\r\n            \r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n            Creates an import group at the end of the project.\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n            在项目末尾创建一个导入组。\r\n            \r\n","\r\n            CopyLocalExpandedReferenceAssemblies metadata name\r\n            ":"\r\n            CopylocalexpandEdreferenceSemblies元数据名称\r\n            \r\n","The cloned metadata, with values' escaping preserved.":"克隆的元数据，值逃脱了。\r\n","\r\n            Evaluates the project data passed in.\r\n            ":"\r\n            评估传递的项目数据。\r\n            \r\n","\r\n            Should ideally be protected+internal.\r\n            ":"\r\n            理想情况下应受到保护+内部。\r\n            \r\n","Path to the AssemblyFolder.config file.":"通往gasemblyFolder.config文件的路径。\r\n","\r\n            32-bit Intel process, using the 4.0 CLR.\r\n            ":"\r\n            使用4.0 CLR，32位Intel工艺。\r\n            \r\n","\r\n            Perform a bitwise NOT on the first and second (~first) \r\n            ":"\r\n            在第一个和第二（〜第一）上执行一个位置\r\n            \r\n","Id of the project instance which is being started":"正在启动的项目实例的ID\r\n","\r\n             (1) Make sure values containing hyphens are quoted (RC at least requires this)\r\n             (2) Escape any embedded quotes. \r\n                 -- Literal double quotes should be written in the form \\\" not \"\"\r\n                 -- Backslashes falling just before doublequotes must be doubled.\r\n                 -- Literal double quotes can only occur in pairs (you cannot pass a single literal double quote)\r\n             \t-- Functional double quotes (for example to handle spaces) are best put around both name and value\r\n             \t    in switches like /Dname=value.\r\n             ":"\r\n             （1）确保包含连字符的值被引用（RC至少需要这个）\r\n             （2）转义任何嵌入的引号。 \r\n                 --字面双引号应写在形式\\\"不是\"\"\r\n                 --在doublequotes之前下降的反斜杠必须加倍。\r\n                 --文字双引号只能成对出现（不能传递单个文字双引号）\r\n             \t--功能双引号（例如处理空格）最好放在名称和值周围\r\n             \t    在像/Dname=value这样的开关中。\r\n             \r\n","list of items":"项目列表\r\n",", the InnerException contains\r\n                ":"，Interexception包含\r\n                \r\n","\r\n            The logging context for the target.\r\n            ":"\r\n            目标的记录上下文。\r\n            \r\n"," property changed.\r\n            ":" 属性更改。\r\n            \r\n","Information about the nodes which were created.":"有关创建节点的信息。\r\n","\r\n            Put all the toolset's properties into our property bag\r\n            ":"\r\n            将所有工具集的属性放入我们的财产袋中\r\n            \r\n"," is specified as, say ":" 指定为\r\n","\r\n            Convenience method. Submits a build request and blocks until the results are available.\r\n            ":"\r\n            便利方法。提交构建请求并块，直到结果可用。\r\n            \r\n","\r\n            Construct a Node\r\n            ":"\r\n            构建节点\r\n            \r\n"," to preserve the formatting of the document, otherwise ":" 为了保留文档的格式，否则\r\n","\r\n            Read-only dictionary of item definitions in this project.\r\n            Keyed by item type.\r\n            ":"\r\n            该项目中项目定义的仅阅读字典。\r\n            按项目类型锁定。\r\n            \r\n","\r\n            Creates an item based on the provided item, but with\r\n            the project and xml of this factory. Metadata is cloned,\r\n            but continues to point to the original ProjectMetadataElement objects.\r\n            This is to support the scenario Include=\"@(i)\" where we are copying\r\n            metadata, and are happy to see changes in the original metadata, but\r\n            setting metadata should create new XML.\r\n            ":"\r\n            根据提供的项目创建一个项目，但\r\n            该工厂的项目和XML。元数据被克隆，\r\n            但是继续指向原始的ProjectMetadataelement对象。\r\n            这是为了支持场景包括=“@（i）”我们要复制的地方\r\n            元数据，很高兴看到原始元数据的变化，但是\r\n            设置元数据应创建新的XML。\r\n            \r\n","\r\n            ValueCollection is already read-only\r\n            ":"\r\n            ValueCollection已经是只读的\r\n            \r\n","\r\n            The logging context to be used and piped down throughout evaluation\r\n            ":"\r\n            在整个评估中要使用和管道的记录上下文\r\n            \r\n","\r\n            Arguments for external project finished events\r\n            ":"\r\n            外部项目完成事件的论点\r\n            \r\n","The build manager-assigned configuration id":"构建管理器分配的配置ID\r\n","\r\n            Called by the Evaluator during project evaluation.\r\n            Direct metadata may be null, indicating no metadata. It is assumed to have already been cloned.\r\n            Inherited item definition metadata may be null. It is assumed that its list has already been cloned.\r\n            ProjectMetadata objects may be shared with other items.\r\n            ":"\r\n            在项目评估期间由评估者拨打。\r\n            直接元数据可能为无效，表明没有元数据。假定已经克隆了它。\r\n            继承的项目定义元数据可能为null。假定其列表已经被克隆。\r\n            ProjectMetadata对象可以与其他项目共享。\r\n            \r\n","\r\n            Get any property in the item that has the specified name,\r\n            otherwise returns null.\r\n            Name is the segment of the provided string with the provided start and end indexes.\r\n            ":"\r\n            获取具有指定名称的项目中的任何属性，\r\n            否则返回null。\r\n            名称是提供的字符串的段，并提供提供的开始和端索引。\r\n            \r\n","\r\n            Returns the maximum number of cores that can be returned from a RequestCores() call at the moment.\r\n            ":"\r\n            返回可在目前可以从requestCores（）调用返回的最大核心数。\r\n            \r\n","Is the build running at low priority?":"构建是否优先运行？\r\n","\r\n            Throw an invalid project exception indicating that the child is not valid beneath the element\r\n            ":"\r\n            投掷无效的项目例外，表明孩子在元素下面无效\r\n            \r\n","\r\n            Returns the value of the attribute. \r\n            If the attribute is not present, returns an empty string.\r\n            ":"\r\n            返回属性的值。\r\n            如果不存在该属性，请返回一个空字符串。\r\n            \r\n","\r\n            Adds an output property to the task.\r\n            ":"\r\n            将输出属性添加到任务中。\r\n            \r\n","\r\n             Abstracts away some file system operations.\r\n            \r\n             Implementations:\r\n             - must be thread safe\r\n             - may cache some or all the calls.\r\n             ":"\r\n             抽象一些文件系统操作。\r\n            \r\n             实施：\r\n              - 必须安全\r\n              - 可能会缓存一些或所有调用。\r\n             \r\n","\r\n            Unevaluated keepMetadata value\r\n            ":"\r\n            未评估的保留值\r\n            \r\n"," instances. \r\n            ":" 实例。\r\n            \r\n","\r\n            Represents the 64-bit AMD64 processor architecture.\r\n            ":"\r\n            代表64位AMD64处理器体系结构。\r\n            \r\n","\r\n            Evaluates a string representing a condition from a \"condition\" attribute.\r\n            If the condition is a malformed string, it throws an InvalidProjectFileException.\r\n            This method uses cached expression trees to avoid generating them from scratch every time it's called.\r\n            This method is thread safe and is called from engine and task execution module threads\r\n            Logging service may be null.\r\n            ":"\r\n            评估代表“条件”属性条件的字符串。\r\n            如果条件是畸形的字符串，则会引发无效的fileException。\r\n            该方法使用缓存的表达树来避免每次调用时从头开始生成它们。\r\n            此方法是线程安全的，并从引擎和任务执行模块线程调用\r\n            伐木服务可能是无效的。\r\n            \r\n","\r\n            Verify that if a namespace is specified it matches the default MSBuild namespace.\r\n            ":"\r\n            验证如果指定了名称空间，则匹配默认的msbuild名称空间。\r\n            \r\n","\r\n            Flags requrned by ITaskExecutionHost.FindTask().\r\n            ":"\r\n            由itaskexecutionhost.findtask（）重新重新重新定旗。\r\n            \r\n","\r\n            Creates a set of project instances which represent the project dependency graph for a solution build.\r\n            ":"\r\n            创建一组项目实例，该实例代表解决方案构建的项目依赖关系图。\r\n            \r\n","\r\n            Returns an enumerator for all target results in this build result\r\n            ":"\r\n            在此构建结果中返回所有目标结果的枚举器\r\n            \r\n","\r\n            ProjectExtensionsElement represents the ProjectExtensions element in the MSBuild project.\r\n            ProjectExtensions can contain arbitrary XML content.\r\n            The ProjectExtensions element is deprecated and provided only for backward compatibility.\r\n            Use a property instead. Properties can also contain XML content.\r\n            ":"\r\n            ProjectExtensionsElement代表MSBUILD项目中的ProjectExtensions元素。\r\n            ProjectExtensions可以包含任意XML内容。\r\n            projectExtensions元素被弃用，仅用于向后兼容性。\r\n            改用属性。属性还可以包含XML内容。\r\n            \r\n","File is null":"文件为空\r\n","\r\n            The item type of the parent item definition or item.\r\n            ":"\r\n            父项目定义或项目的项目类型。\r\n            \r\n","\r\n            Constructor called by Project's constructor to create a fresh instance.\r\n            Properties and items are cloned immediately and only the instance data is stored.\r\n            ":"\r\n            Project的构造函数调用构造函数以创建一个新的实例。\r\n            属性和项目立即克隆，仅存储实例数据。\r\n            \r\n","file in which the target is defined":"定义目标的文件\r\n","\r\n            This is called by every event handler for compat reasons -- see DDB #136924\r\n            However it will skip after the first call\r\n            ":"\r\n            出于兼容原因，每个活动处理程序都调用这一点 - 请参阅DDB＃136924\r\n            但是它将在第一次通话后跳过\r\n            \r\n","\r\n            Retrieves the value of the named metadatum, or null if it doesn't exist\r\n            ":"\r\n            检索命名元数据的值，如果不存在，则检索null的值\r\n            \r\n","\r\n            Moves to the next item if any, otherwise returns false\r\n            ":"\r\n            如果有的话，将移至下一个项目，否则返回false\r\n            \r\n","\r\n            Gets or sets the node id.\r\n            ":"\r\n            获取或设置节点ID。\r\n            \r\n","\r\n            Gets the list of parameters which are batchable for a target\r\n            PERF: (Refactor) This used to be a method on the target, and it would \r\n            cache its values so this would only be computed once for each\r\n            target.  We should consider doing something similar for perf reasons.\r\n            ":"\r\n            获取可用于目标的参数列表\r\n            perf ：（重构）这曾经是目标上的一种方法，它将\r\n            缓存其值，因此只能为每个计算一次\r\n            目标。出于完美原因，我们应该考虑做类似的事情。\r\n            \r\n","\r\n            Location of the \"Label\" attribute on this element, if any.\r\n            If there is no such attribute, returns null;\r\n            ":"\r\n            此元素上的“标签”属性的位置（如果有）。\r\n            如果没有这样的属性，请返回null；\r\n            \r\n","\r\n            Returns the current state of the build request.\r\n            ":"\r\n            返回构建请求的当前状态。\r\n            \r\n","\r\n            Gets the item definitions\r\n            ":"\r\n            获取项目定义\r\n            \r\n","\r\n            Given a task name, this method retrieves the task class. If the task has been requested before, it will be found in\r\n            the class cache; otherwise, <UsingTask> declarations will be used to search the appropriate assemblies.\r\n            ":"\r\n            给定任务名称，此方法检索任务类。如果以前要求任务，将在\r\n            类缓存；否则，<sustrat>声明将用于搜索适当的组件。\r\n            \r\n","The reason the target is being built by the parent.":"父母正在建立目标的原因。\r\n","Properties to Print along with message":"要打印的属性以及消息\r\n","\r\n            This method is called to reset the current directory to the one appropriate for this project.  It should be called any time\r\n            the project is resumed.\r\n            If the directory does not exist, does nothing.\r\n            This is because if the project has not been saved, this directory may not exist, yet it is often useful to still be able to build the project.\r\n            No errors are masked by doing this: errors loading the project from disk are reported at load time, if necessary.\r\n            ":"\r\n            该方法被调用以将当前目录重置为适合该项目的目录。应该随时称呼\r\n            该项目已恢复。\r\n            如果目录不存在，则无能为力。\r\n            这是因为如果项目尚未保存，则可能不存在此目录，但是仍然能够构建项目通常很有用。\r\n            这样做没有掩盖错误：如有必要，在加载时间报告了从磁盘上加载项目的错误。\r\n            \r\n","event context info for the parent project":"父母项目的事件上下文信息\r\n","\r\n            Returns the property with the specified name or null if it was not present\r\n            ":"\r\n            以指定名称或空的方式返回该属性（如果不存在）\r\n            \r\n","\r\n            This method is called by the node loggers to forward the events to central logger\r\n            ":"\r\n            节点记录器调用此方法将事件转发到中央记录器\r\n            \r\n","\r\n            Evaluates as boolean and evaluates children as boolean, numeric, or string.\r\n            Order in which comparisons are attempted is numeric, boolean, then string.\r\n            Updates conditioned properties table.\r\n            ":"\r\n            评估为布尔值，并评估儿童为布尔，数字或字符串。\r\n            尝试进行比较的顺序是数字，布尔值，然后是字符串。\r\n            更新条件属性表。\r\n            \r\n","\r\n            Flags to control options when creating a new, in memory, project.\r\n            ":"\r\n            在创建新的，内存，项目时要控制选项的标志。\r\n            \r\n","\r\n            Returns the key value for the given element\r\n            ":"\r\n            返回给定元素的密钥值\r\n            \r\n","\r\n                The Sdk reference\r\n            ":"\r\n                SDK参考\r\n            \r\n","\r\n            A mapping of all of the INodePacketFactories wrapped by this provider. \r\n            ":"\r\n            该提供商包裹的所有InodePacketFactory的映射。\r\n            \r\n","\r\n            Unevaluated remove value\r\n            ":"\r\n            未评估的删除值\r\n            \r\n","True if the object values are identical, false if they are not identical":"如果对象值相同，则为true，如果它们不完全相同，则为false\r\n","Type of the items provided by the item source used for expansion.":"用于扩展的项目源提供的项目类型。\r\n","\r\n            Comparer used to figure out whether two RegisteredTaskIdentities are equal or not. \r\n            ":"\r\n            用于弄清楚两个注册任务认可是否相等的比较。\r\n            \r\n","\r\n            The starting character of the separator within the expression\r\n            ":"\r\n            表达式中分离器的起始特征\r\n            \r\n","\r\n            Sets the operationg environment to the initial build environment.\r\n            ":"\r\n            将操作环境设置为初始构建环境。\r\n            \r\n","This method is used as a System.Diagnostics.DataReceivedEventHandler delegate.":"该方法用作system.diagnostics.datareceivedeventhandler代表。\r\n",". Case Insensitive":"。不区分大小写\r\n","\r\n            Retrieves the total time for this configuration, which includes the time spent on its references.\r\n            ":"\r\n            检索此配置的总时间，其中包括在其参考上花费的时间。\r\n            \r\n","\r\n            Sets a property which comes from the Xml.\r\n            ":"\r\n            设置来自Xml的属性。\r\n            \r\n","\r\n            Finds the first ancestor of parentId (which could be itself) that is either an evaluation pass location or a big enough profiled data\r\n            ":"\r\n            找到parentid的第一个祖先（可能是本身），该祖先是评估通过的位置，或者是足够大的数据\r\n            \r\n","True if the parameter is both an output and and input parameter. False if the parameter is only an input parameter":"如果参数既是输出又是输入参数，则为true。 false如果参数仅是输入参数\r\n","\r\n            The name of the property whose value was reassigned.\r\n            ":"\r\n            重新分配价值的属性名称。\r\n            \r\n","\r\n            A subsequent definition for a rule (with the same name) entirely overrides a previous definition.\r\n            ":"\r\n            一条规则（具有相同名称）的后续定义完全覆盖了先前的定义。\r\n            \r\n","\r\n            Execute this transform function with the arguments contained within this TransformFunction instance.\r\n            ":"\r\n            使用此转换功能实例中包含的参数执行此转换函数。\r\n            \r\n","Start index of the substring.":"启动子字符串的索引。\r\n","a frame to push":"推动的框架\r\n","The build event context of the project spawning this target.":"该项目的构建事件上下文产生了该目标。\r\n","\r\n            There is no setter here as that doesn't make sense. If you have a new ProjectRootElement, evaluate it into a new Project.\r\n            ":"\r\n            这里没有二传手，因为这是没有意义的。如果您有一个新的项目Rootelement，请将其评估为一个新项目。\r\n            \r\n","\r\n            Callback for event raised when a resource is requested.\r\n            ":"\r\n            请求资源时提出的事件回调。\r\n            \r\n","\r\n            Constructor creates an empty build result\r\n            ":"\r\n            构造函数创建一个空的构建结果\r\n            \r\n","\r\n            Null Pointer\r\n            ":"\r\n            空指针\r\n            \r\n","\r\n            Represents a number - evaluates as numeric.\r\n            ":"\r\n            表示数字 - 评估为数字。\r\n            \r\n","\r\n            A bit field that determines whether certain STARTUPINFO members are used when the process creates a window\r\n            ":"\r\n            确定该过程创建窗口时是否使用某些startupinfo成员的位字段\r\n            \r\n","Note: This function mimics the behavior of checking if Path.GetDirectoryName(path) == null.":"注意：此函数模拟检查if path.getDirectoryName（path）== null的行为。\r\n","The endpoint whose status has changed.":"状态已改变的端点。\r\n"," that is hosted in an out-of-proc node for multi-proc builds.  This instance of the service\r\n            sends requests to the main node that SDK resolution is handled in a central location.  This instance is registered in ":" 该托管在多个PROC构建的一个非传播节点中。这项服务的实例\r\n            将请求发送到主要节点，即SDK分辨率在中心位置处理。此实例已注册\r\n","\r\n            Represents the 64-bit IA64 processor architecture.\r\n            ":"\r\n            代表64位IA64处理器体系结构。\r\n            \r\n","\r\n            Throws an exception if the native error code was corresponds to a known ":"\r\n            如果本机错误代码对应于已知的，则引发异常\r\n","\r\n            If any expression nodes cache any state for the duration of evaluation, \r\n            now's the time to clean it up\r\n            ":"\r\n            如果任何表达式节点在评估期间缓存任何状态，\r\n            现在是时候清理它了\r\n            \r\n","PlatformMoniker, in the form \"PlatformName, Version=version\"":"Platform Moniker，以“ PlatformName，version =版本”的形式形式\r\n","true if right is higher than major version of left, false otherwise":"如果right高于left的主要版本，则为true，否则为false\r\n","\r\n            Tells if this ":"\r\n            告诉这个\r\n","The disk roots used to gather installed extension SDKs.":"用于收集安装的扩展SDK的磁盘根。\r\n","\r\n            Override != so the  equals comparison using this operator will be the same as\r\n             ! Equals\r\n            ":"\r\n            覆盖！=因此，使用此操作员的平等比较将与\r\n             呢等于\r\n            \r\n",".\r\n            return raw xml content of the element if it has exactly 1 text child\r\n            ":"。\r\n            返回元素的原始XML内容，如果它具有1个文本孩子\r\n            \r\n","\r\n            The thread on which the object is disposed may be arbitrary - however it is guaranteed not to\r\n            be disposed while the task is executing, even if ":"\r\n            处置对象的线可能是任意的 - 但是，保证\r\n            任务执行时被处置，即使\r\n","Has the prefix(timestamp or key been written)":"是否有前缀（时间戳或密钥编写）\r\n","\r\n            We can ignore any semicolons in the expression, since we're not itemizing it.\r\n            ":"\r\n            我们可以忽略表达式中的任何半殖民地，因为我们没有逐项列出。\r\n            \r\n","The items produced by the target.":"目标生产的项目。\r\n","The set of paths that contain files that are to be ignored during up to date check, including any subdirectories.":"包含最新检查中要忽略的文件的一组路径，包括任何子目录。\r\n","The project file which is being built":"正在构建的项目文件\r\n","Type of source items.":"源项目的类型。\r\n","Map of parameter name to property search paths for use during Import.":"参数名称的地图到导入期间使用的属性搜索路径。\r\n","\r\n            The IConfigCache instance obtained from componentHost (stored here to avoid repeated dictionary lookups).\r\n            ":"\r\n            从Component -Host获得的IconFigcache实例（在此处存储以避免重复的字典查找）。\r\n            \r\n","The resource manager for task resources":"任务资源的资源管理器\r\n","\r\n            The set of sub-toolsets associated with this toolset.\r\n            ":"\r\n            与此工具集关联的子工具集集合。\r\n            \r\n"," containing the global properties.":" 包含全局属性。\r\n","\r\n            Represents a cache for build properties\r\n            ":"\r\n            代表构建属性的缓存\r\n            \r\n","\r\n            Overridden to convert the display of the element from open form (separate open and closed tags) to closed form \r\n            (single closed tag) if the last child is being removed. This is simply for tidiness of the project file.\r\n            For example, removing the only piece of metadata from an item will leave behind one tag instead of two.\r\n            ":"\r\n            覆盖以将元素的显示从开放式（单独的开放和封闭标签）转换为封闭形式\r\n            （单封闭标签）如果最后一个孩子被删除。这仅仅是为了整理项目文件。\r\n            例如，从一个项目中删除唯一的元数据将留下一个标签而不是两个标签。\r\n            \r\n","\r\n            Returns the list of unresolved configurations to issue.\r\n            ":"\r\n            返回未解决的配置列表。\r\n            \r\n","\r\n            Items organized by evaluatedInclude value\r\n            ":"\r\n            通过评估值组织的项目\r\n            \r\n","\r\n            The version of the tools information in the project collection against we were last evaluated.\r\n            ":"\r\n            上次评估了项目集合中针对我们的工具信息的版本。\r\n            \r\n","\r\n            UsingTaskParameterElement class represents the Parameter element in the MSBuild project.\r\n            ":"\r\n            使用TaskParameterElement类代表MSBuild项目中的参数元素。\r\n            \r\n"," switch in the command line.\r\n            ":" 切换命令行。\r\n            \r\n","\r\n            The state of a project instance which has been transferred from one node to another.\r\n            ":"\r\n            项目实例的状态已从一个节点传输到另一个节点。\r\n            \r\n","\r\n            Returns a new, valid configuration id.\r\n            ":"\r\n            返回新的有效配置ID。\r\n            \r\n","\r\n            Returns the node packet type.\r\n            ":"\r\n            返回节点数据包类型。\r\n            \r\n"," with the flag\r\n                ":" 带有国旗\r\n                \r\n","The parent to append the cloned element to as a child.":"父母小时候将克隆元素附加到。\r\n","\r\n            Configurations for this project, keyed off the configuration's full name, e.g. \"Debug|x86\"\r\n            ":"\r\n            该项目的配置，关闭配置的全名，例如“调试| x86”\r\n            \r\n","\r\n            Reason it was last marked dirty; unlocalized, for debugging\r\n            ":"\r\n            原因是最后一个肮脏的原因；非定位，用于调试\r\n            \r\n","\r\n            Aggregation of a toolset version (eg. \"2.0\"), tools path, and optional set of associated properties.\r\n            Toolset is immutable.\r\n            ":"\r\n            工具集版本（例如“ 2.0”），工具路径和可选属性集的聚合。\r\n            工具集是不可变的。\r\n            \r\n","\r\n            We enter here in both the property and item passes, since Chooses can contain both.\r\n            However, we only evaluate the When conditions on the first pass, so we only pulse \r\n            those states on that pass. On the other pass, it's as if they're not there.\r\n            ":"\r\n            我们在属性和项目通行证中输入此处，因为选择都可以包含。\r\n            但是，我们只评估第一次通过时的条件，所以我们只脉动\r\n            那些传球上的国家。在另一个通行证上，好像他们不在那样。\r\n            \r\n","\r\n            Struct used to contain information about requests submitted by the RequestBuilder.\r\n            ":"\r\n            结构用于包含有关请求构造者提交的请求的信息。\r\n            \r\n","\r\n            Writes a detailed summary of the build state which includes informaiton about the scheduling plan.\r\n            ":"\r\n            详细介绍了构建状态，其中包括有关调度计划的信息。\r\n            \r\n","The filesystem":"文件系统\r\n","\r\n            Evaluates the provided string as a condition by expanding items and properties,\r\n            using the current items and properties available, then doing a logical evaluation.\r\n            This is useful for the immediate window.\r\n            Does not expand bare metadata expressions.\r\n            ":"\r\n            通过扩展项目和属性来评估提供的字符串作为条件，\r\n            使用当前的项目和属性，然后进行逻辑评估。\r\n            这对于直接窗口很有用。\r\n            不会扩大裸露的元数据表达。\r\n            \r\n","\r\n            Starts to terminate any builder associated with the entry and clean it up in preparation for removal.\r\n            ":"\r\n            开始终止与条目相关的任何建筑商，并将其进行清理以准备去除。\r\n            \r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n            If import groups exist, inserts into the last one without a condition on it.\r\n            Otherwise, creates an import at the end of the project.\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n            如果存在导入组，则将其插入最后一个没有条件。\r\n            否则，在项目末尾创建导入。\r\n            \r\n","\r\n            The data type of the source.  Generally one of ":"\r\n            源的数据类型。通常之一\r\n","\r\n            Initialize the factory from the task registry\r\n            ":"\r\n            从任务注册表初始化工厂\r\n            \r\n","\r\n            Explicitly disabled\r\n            ":"\r\n            明确禁用\r\n            \r\n"," for rules.\r\n            ":" 对于规则。\r\n            \r\n","\r\n            The most minimal output\r\n            ":"\r\n            最小的产出\r\n            \r\n"," ONCE ⚠⚠":" 一次\r\n","May be null.":"可能是无效的。\r\n","AppendChild()":"附录（）\r\n","\r\n            The logging context for the node\r\n            ":"\r\n            节点的记录上下文\r\n            \r\n","\r\n            Applies the modifications from the specified modifications to this one, performing a proper merge.\r\n            ":"\r\n            将从指定修改的修改应用于该修改，并执行适当的合并。\r\n            \r\n","Output that correspond ot the sources (used for same file processing)":"对应源的输出（用于同一文件处理）\r\n","\r\n            Column number\r\n            ":"\r\n            列号\r\n            \r\n","\r\n            The name of the function that this class will call.\r\n            ":"\r\n            此类将调用功能的名称。\r\n            \r\n","\r\n            Whether the property originated in an imported file.\r\n            Because these properties did not originate in an XML file, this always returns null.\r\n            ":"\r\n            该属性是否起源于导入的文件。\r\n            因为这些属性不是源自XML文件，所以这总是返回null。\r\n            \r\n","\r\n            Gets a IList of supported target framework monikers.\r\n            ":"\r\n            得到支持的目标框架绰号。\r\n            \r\n","host handshake key":"主机握手钥匙\r\n","\r\n            Returns a string indicating why an incremental build is occurring.\r\n            ":"\r\n            返回一个字符串，指示为什么发生增量构建。\r\n            \r\n","The request which completed.":"完成的请求。\r\n","\r\n            Holds a snapshot of the current working directory at the time we blocked.\r\n            ":"\r\n            在我们被阻止时，请持有当前工作目录的快照。\r\n            \r\n","The traversal project from which global properties and tools version will be inherited.":"将继承全局属性和工具版本的遍历项目。\r\n","Top level type. Serialized types can be of this type, or subtypes":"顶级类型。序列化类型可以是这种类型的，也可以是亚型\r\n","\r\n            Construct over an existing project file, evaluating with the specified global properties and\r\n            using the tools version provided, either or both of which may be null.\r\n            Project is added to the global project collection.\r\n            Throws InvalidProjectFileException if the evaluation fails.\r\n            Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.\r\n            May throw IO-related exceptions.\r\n            ":"\r\n            通过现有项目文件构建，用指定的全局属性评估\r\n            使用提供的工具版本，或两个可能为null。\r\n            项目被添加到全球项目集合中。\r\n            如果评估失败，则投掷无效的fileException。\r\n            如果项目集合中已经加载了等效的项目，则投掷无效的exception。\r\n            可能会抛出与IO相关的例外。\r\n            \r\n","\r\n            Returns true if the expression contains an item vector pattern, else returns false.\r\n            Used to flag use of item expressions where they are illegal.\r\n            ":"\r\n            如果表达式包含项目向量模式，则返回true，否则返回false。\r\n            用于标记使用非法的项目表达式的使用。\r\n            \r\n","\r\n            Gets the working directory to use for the process. Should return null if ToolTask should use the\r\n            current directory. \r\n            ":"使工作目录用于该过程。如果工具任务应使用\r\n            当前目录。\r\n            \r\n","\r\n            An interface for services which resolve SDKs.\r\n            ":"\r\n            解决SDK的服务接口。\r\n            \r\n","\r\n            Determines whether the logging service will convert the specified\r\n            warning code into an error.\r\n            ":"\r\n            确定伐木服务是否将转换指定的\r\n            警告代码陷入错误。\r\n            \r\n","\r\n            Submits a graph build request to the current build but does not start it immediately.  Allows the user to\r\n            perform asynchronous execution or access the submission ID prior to executing the request.\r\n            ":"\r\n            将图形构建请求提交给当前构建，但不会立即启动。允许用户\r\n            在执行请求之前，执行异步执行或访问提交ID。\r\n            \r\n","\r\n            The expander used to expand item and property markup to evaluated values.\r\n            ":"\r\n            用于将项目和属性标记扩展到评估值的扩展器。\r\n            \r\n","\r\n            String representation handy for tracing\r\n            ":"\r\n            字符串表示方便的跟踪\r\n            \r\n","\r\n            The original task instance data.\r\n            ":"\r\n            原始任务实例数据。\r\n            \r\n","A dictionary of item metadata.  This should be created with ":"项目元数据的字典。这应该用\r\n"," object indicating failure resolving the SDK.\r\n            ":" 表明解决SDK故障的对象。\r\n            \r\n","\r\n            (and enumeration was not successful).\r\n            ":"\r\n            （枚举没有成功）。\r\n            \r\n","\r\n            Gets or sets the output attribute\r\n            ":"\r\n            获取或设置输出属性\r\n            \r\n","\r\n            This request has completed and removed from the system.\r\n            ":"\r\n            该请求已完成并从系统中删除。\r\n            \r\n","\r\n            Gathers the set of platform winmds for a particular {SDKI, SDKV, TPI, TPMinV, TPV} combination\r\n            ":"\r\n            收集特定{SDKI，SDKV，TPI，TPMINV，TPV}组合的平台winmds集\r\n            \r\n","\r\n            Gets or sets the number of MSBuild processes participating in the build. If greater than 1,\r\n            include the node ID \r\n            ":"\r\n            获取或设置参与构建的MSBUILD流程的数量。如果大于1\r\n            包括节点ID\r\n            \r\n","\r\n            ISerializable method which we must override since Exception implements this interface\r\n            If we ever add new members to this class, we'll need to update this.\r\n            ":"\r\n            由于异常实现此接口\r\n            如果我们在此类中添加新成员，我们需要更新此会员。\r\n            \r\n","\r\n            Gets and sets the name of the parameter's name\r\n            ":"\r\n            获取并设置参数名称的名称\r\n            \r\n","\r\n            This override is used to provide a hash code for storage in dictionaries and the like.\r\n            ":"\r\n            该替代用于提供词典中存储的哈希代码。\r\n            \r\n","\r\n            Gets or sets the Outputs value.\r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"\r\n            获取或设置输出值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n"," for a specific\r\n                ":" 对于特定\r\n                \r\n","\r\n            This method will re-write the tlogs from the current dependency. As the sources are compiled,\r\n            new entries willbe tracked.\r\n            ":"\r\n            此方法将从当前的依赖性重写TLOGS。随着来源的编译，\r\n            新条目将跟踪。\r\n            \r\n","\r\n            A cache of recently used buffers. This is a pool of size 1 to avoid allocating moderately sized\r\n            ":"\r\n            最近使用的缓冲区的缓存。这是一个尺寸1的池，以避免分配适度的尺寸\r\n            \r\n","\r\n            The path into which debug files will be written.\r\n            ":"\r\n            编写调试文件的路径。\r\n            \r\n","\r\n            Complete list of all imports pulled in during evaluation including duplicate imports.\r\n            This includes the outer project itself.\r\n            ":"\r\n            在评估过程中删除的所有进口的完整列表，包括重复进口。\r\n            这包括外部项目本身。\r\n            \r\n","\r\n            Event is a ProjectEvaluationStartedEventArgs\r\n            ":"\r\n            活动是一个ProjectEvaluationStartedEventargs\r\n            \r\n","The default targets for the request's configuration.":"请求配置的默认目标。\r\n","\r\n            Formats the timestamp in the log as  Hours:Minutes:Seconds.Milliseconds\r\n            ":"\r\n            格式化日志中的时间戳为小时：分钟：seconds.milliseconds\r\n            \r\n","A dictionary which lists the environment of the build when the build is started.":"词典列出构建构建时构建环境的词典。\r\n","The logger is public so that it can be instantiated from MSBuild.exe via command-line switch.":"该记录器是公开的，因此可以通过命令行交换机从msbuild.exe实例化。\r\n",", but\r\n            uses segmented arrays to avoid allocations in the Large Object Heap.":"， 但\r\n            使用分段阵列避免在大对象堆中分配。\r\n","\r\n            Free environment block\r\n            ":"\r\n            自由环境块\r\n            \r\n","\r\n            Full path to the file from which this target originated.\r\n            If it originated in a project that was not loaded and has never been\r\n            given a path, returns an empty string.\r\n            ":"\r\n            该目标起源的文件的完整路径。\r\n            如果它起源于未加载且从未有过的项目\r\n            给定路径，返回一个空字符串。\r\n            \r\n","\r\n            Returns the factory name\r\n            ":"\r\n            返回工厂名称\r\n            \r\n","\r\n            The ProjectFinished logging event\r\n            ":"\r\n            项目编号的伐木活动\r\n            \r\n","\r\n            Uses the given task output specification to (statically) infer the task's outputs.\r\n            ":"\r\n            使用给定的任务输出规范（静态）推断任务的输出。\r\n            \r\n","Whether to skip the constraints of static graph isolation.":"是否跳过静态图隔离的约束。\r\n","\r\n            Gets or sets the type of this item.\r\n            ":"\r\n            获取或设置此项目的类型。\r\n            \r\n","\r\n            Completes a submission using the specified overall results.\r\n            ":"\r\n            使用指定的总体结果完成提交。\r\n            \r\n","\r\n            Returns true if this result belongs to a root request (that is, no node is waiting for \r\n            these results.\r\n            ":"\r\n            如果此结果属于root请求，则返回true（也就是说，没有节点在等待\r\n            这些结果。\r\n            \r\n","\r\n            Creates a task item from a ProjectItem\r\n            ":"\r\n            从ProjectItem创建任务项\r\n            \r\n","\r\n            Bubbles a Project dirty notification up to the ProjectRootElementCacheBase and ultimately to the ProjectCollection.\r\n            ":"\r\n            在ProjectRootelementCachebase并最终到ProjectCollection之前将项目弄脏通知。\r\n            \r\n","\r\n            Number of times interning worked.\r\n            ":"\r\n            实习次数有效。\r\n            \r\n","\r\n             The collection of all projects already loaded into this collection.\r\n             Key is the full path to the project, value is a list of projects with that path, each\r\n             with different global properties and/or tools version.\r\n             ":"\r\n             所有已经加载到此集合中的项目的集合。\r\n             关键是该项目的完整路径，值是带有该路径的项目列表\r\n             具有不同的全局属性和/或工具版本。\r\n             \r\n","\r\n            Registers a factory which will be used to create the necessary components of the build\r\n            system.\r\n            ":"\r\n            注册一个工厂，该工厂将用于创建构建的必要组件\r\n            系统。\r\n            \r\n","\r\n            Evaluate the itemdefinitiongroup and update the definitions library\r\n            ":"\r\n            评估ItemDefinitionGroup并更新定义库\r\n            \r\n","\r\n            Final set of properties produced by this evaluation.\r\n            ":"\r\n            该评估产生的最终属性集。\r\n            \r\n","\r\n            Whether the logger should append to any existing file.\r\n            Default is to overwrite.\r\n            ":"\r\n            记录器是否应附加到任何现有文件。\r\n            默认值是覆盖。\r\n            \r\n","\r\n            The component host.\r\n            ":"\r\n            组件主机。\r\n            \r\n","\r\n            Outputs of the targets per project.\r\n            ":"每个项目的目标输出。\r\n            \r\n","The value of the property that was read (null if there is no value).":"读取的属性的值（如果没有值，则为null）。\r\n","Timestamp when event was created.":"创建事件时的时间戳。\r\n","\r\n            A list of warnings to treat as errors.\r\n            ":"\r\n            警告列表，以将其视为错误。\r\n            \r\n","\r\n            Private constructor for deserialization\r\n            ":"\r\n            私人构造函数\r\n            \r\n","\r\n            Raised when a project started logging message is about to be processed.\r\n            ":"\r\n            当项目开始记录消息即将处理时，提出了。\r\n            \r\n","\r\n            Regkey that we check to see whether Dev10 Ultimate is installed.  This will exist if it is installed, and be\r\n            properly removed after it has been uninstalled.\r\n            ":"\r\n            我们检查是否安装了Dev10 Ultimate。如果安装它，则将存在，并且\r\n            卸载后正确删除。\r\n            \r\n","\r\n            Gets a profiled result in a tab separated value form.\r\n            ":"\r\n            在选项卡分离的值表中获取概要结果。\r\n            \r\n"," causes the property value to be written to and read from the project \r\n            manifest file or the property sheet (depending on which node in the solution explorer/property manager window\r\n            is used to spawn the property pages UI). ":" 导致财产价值写入和从项目中读取\r\n            清单文件或属性表（具体取决于解决方案Explorer/属性管理器窗口中的哪个节点\r\n            用于产生属性页UI）。\r\n","\r\n            Magic number sent by the host to the client during the handshake.\r\n            Derived from the binary timestamp to avoid mixing binary versions,\r\n            Is64BitProcess to avoid mixing bitness, and enableNodeReuse to\r\n            ensure that a /nr:false build doesn't reuse clients left over from\r\n            a prior /nr:true build.\r\n            ":"\r\n            主机在握手期间发送给客户的魔术号码。\r\n            源自二进制时间戳以避免混合二进制版本，\r\n            IS64BitProcess避免混合点，并启用dobablenodereuse\r\n            确保a /nr：false构建不会重复使用客户端剩下的客户\r\n            先验 /nr：true构建。\r\n            \r\n","Time-out in milliseconds. Default is ":"超时以毫秒。默认为\r\n","\r\n            When true, indicates that the task parameters should be logged.\r\n            ":"\r\n            如果是正确的，则指示应记录任务参数。\r\n            \r\n","\r\n            Creates a ProjectInstance directly.  Used to generate solution metaprojects.\r\n            ":"\r\n            直接创建一个ProjectInstance。用于生成解决方案元标记。\r\n            \r\n","\r\n            The ID of this evaluation\r\n            ":"\r\n            此评估的ID\r\n            \r\n","\r\n            Write out the scheduling information so the next time we can read the plan back in and use it.\r\n            ":"\r\n            写出调度信息，以便下次我们可以重新阅读计划并使用它。\r\n            \r\n","\r\n            The singleton comparer to use when a fuzzy match is desired.  Note that this still does an exact match on the \r\n            name, but does a fuzzy match on the task identity parameters. \r\n            ":"\r\n            需要进行模糊匹配时使用的单例比较。请注意，这仍然在\r\n            名称，但在任务身份参数上进行模糊匹配。\r\n            \r\n","\r\n            Construct an Mru list with a fixed maximum size.\r\n            ":"\r\n            构建具有固定最大尺寸的MRU列表。\r\n            \r\n","ERROR_SUCCESS":"error_success\r\n","\r\n            Location of the Name attribute\r\n            ":"\r\n            名称属性的位置\r\n            \r\n","\r\n            Get platform version string which is used to generate versioned path\r\n            ":"\r\n            获取用于生成版本的路径的平台版本字符串\r\n            \r\n","\r\n            Get a sorted list of AssemblyFoldersExInfo which contain information about what directories the 3rd party assemblies are registered under for use during build and design time.\r\n            \r\n            This method will enumerate the AssemblyFoldersEx registry location and return a list of AssemblyFoldersExInfo in the same order in which\r\n            they will be searched during both design and build time for reference assemblies.\r\n            ":"\r\n            获取一个排序的汇编FolderSexinfo列表，其中包含有关在构建和设计时间期间使用的第三方组件目录的信息。\r\n            \r\n            此方法将列举“汇编”注册表的位置，并按照相同的顺序返回汇编Foldersexinfo的列表\r\n            它们将在设计和建立参考组件的时间期间进行搜索。\r\n            \r\n","The translator to use for the values in the dictionary":"用于字典中值的翻译器\r\n","\r\n                The fixed directory part.\r\n            ":"\r\n                固定目录部分。\r\n            \r\n","\r\n            Called when the request builder needs to block on another request.\r\n            ":"\r\n            当请求构建器需要阻止另一个请求时，请致电。\r\n            \r\n","Action to be taken.":"要采取的行动。\r\n","\r\n            This constructor allows event data to be initialized including the timestamp when the event was created.\r\n            ":"\r\n            该构造函数允许在创建事件时初始化事件数据，包括时间戳。\r\n            \r\n","Event context for the task":"任务的事件上下文\r\n","\r\n            Callback used to enter an island\r\n            ":"\r\n            用于进入岛屿的回调\r\n            \r\n","The exception to be used to create the warning text":"用于创建警告文本的例外\r\n","\r\n            Compares this metadata to another for equivalence.\r\n            ":"\r\n            将此元数据与另一个元数据进行比较。\r\n            \r\n","\r\n            Accessor for the global request id.\r\n            ":"\r\n            全局请求ID的登录器。\r\n            \r\n","WholeProgramOptimization":"全键合化\r\n","\r\n            Initialize the logger\r\n            ":"\r\n            初始化记录器\r\n            \r\n","\r\n            Location of the inputs\r\n            ":"\r\n            输入的位置\r\n            \r\n","\r\n            Create a comment node.\r\n            Overridden in order to cache comment strings.\r\n            ":"\r\n            创建评论节点。\r\n            覆盖以缓存评论字符串。\r\n            \r\n","\r\n            Unevaluated condition\r\n            ":"\r\n            未评估的状况\r\n            \r\n","\r\n            The substring from the original itemspec representing this fragment\r\n            ":"来自原始itemspec的子字符串表示该片段\r\n            \r\n","\r\n            The value specified here is overridden by the value specified by the child ":"\r\n            此处指定的值被儿童指定的值所覆盖\r\n","\r\n            The subset of explicit targets which must be built because there are no results for them in the cache.\r\n            ":"\r\n            由于缓存中没有结果，因此必须构建的显式目标子集。\r\n            \r\n","\r\n            Evaluates an import element.\r\n            If the condition is true, loads the import and continues the pass.\r\n            ":"\r\n            评估导入元素。\r\n            如果条件是正确的，请加载导入并继续通过。\r\n            \r\n","The item type to constrain the search in":"限制搜索的项目类型\r\n","\r\n            Indicates whether the specified file-spec begins with \"\\\\server\\share\".\r\n            ":"\r\n            指示指定的文件规格是否以“ \\\\ server \\ share”开头。\r\n            \r\n","\r\n            Cache of tasks already found using fuzzy matching,\r\n            keyed by the task name requested.\r\n            Value is a dictionary of all possible matches for that\r\n            task name, by unique identity.\r\n            ":"\r\n            使用模糊匹配已找到的任务缓存，\r\n            由请求的任务名称锁定。\r\n            价值是所有可能匹配的字典\r\n            任务名称，通过唯一身份。\r\n            \r\n","\r\n            The event raised when resources are requested.\r\n            ":"\r\n            当请求资源时筹集了事件。\r\n            \r\n","\r\n            Starts a build using this project, building the default targets and the specified logger.\r\n            Returns true on success, false on failure.\r\n            Works on a privately cloned instance. To set or get\r\n            virtual items for build purposes, clone an instance explicitly and build that.\r\n            Does not modify the Project object.\r\n            ":"\r\n            使用此项目启动构建，构建默认目标和指定的记录器。\r\n            成功返回，成功，失败。\r\n            在私人克隆实例上工作。设置或获得\r\n            用于构建目的的虚拟项目，明确克隆实例并构建该实例。\r\n            不修改项目对象。\r\n            \r\n","\r\n            A static cache that will hold the dependency graph as built from tlog files.\r\n            The cache is keyed on the root marker created from the full paths of the tlog files concerned.\r\n            As an entry is added to the cache so is the datetime it was added.\r\n            ":"\r\n            一个静态缓存，将保存从TLOG文件构建的依赖关系图。\r\n            缓存是从相关TLOG文件的完整路径创建的根标记上键入的。\r\n            由于将条目添加到缓存中，因此添加了DateTime。\r\n            \r\n","Wether to include items that evaluated to empty / null":"要包括评估为空 /空评估的项目\r\n","\r\n            Instantiates a project collection using toolsets from the specified locations,\r\n            and no global properties or loggers.\r\n            May throw InvalidToolsetDefinitionException.\r\n            ":"\r\n            使用指定位置的工具集实例化项目集，\r\n            也没有全球属性或登录器。\r\n            可能会抛出无效的DoolsetDefinitionException。\r\n            \r\n","The data containing the configuration information.":"包含配置信息的数据。\r\n","Arguments for the format string indexed by messageResourceName":"通过MessagerEsourCename索引格式字符串的论点\r\n","\r\n            Gets a schedulable request with the specified global request id if it is currently scheduled.\r\n            ":"\r\n            如果当前已安排了指定的全局请求ID，则获取可计划请求。\r\n            \r\n","\r\n            Get any global property on the project collection that has the specified name,\r\n            otherwise returns null.\r\n            ":"\r\n            获取具有指定名称的项目集合上的任何全局属性，\r\n            否则返回null。\r\n            \r\n","\r\n            Touches the ":"\r\n            触摸\r\n","\r\n            Called when the XmlDocument is unloaded to remove this XML's\r\n            contribution to the string interning cache.\r\n            Does NOT zombie the ProjectRootElement or anything else.\r\n            ":"\r\n            卸载Xmldocument以删除此XML时调用\r\n            对字符串Indusing Cache的贡献。\r\n            不会僵尸项目或其他任何东西。\r\n            \r\n","\r\n            Interface method for IEquatable<AssemblyNameExtension>\r\n            ":"\r\n            i equabable <sourceBlyNameExtension>的接口方法\r\n            \r\n","\r\n            Dev9 behavior refers to the following:\r\n            1. The changes made during the calling target up to this point are NOT visible to this target.\r\n            2. The changes made by this target are NOT visible to the calling target.\r\n            3. Changes made by the calling target OVERRIDE changes made by this target.\r\n            ":"\r\n            DEV9行为是指以下内容：\r\n            1.直到目前，该目标在呼叫目标期间所做的更改不可见。\r\n            2.该目标所做的更改对呼叫目标看不到。\r\n            3.调用目标覆盖该目标的更改所做的更改。\r\n            \r\n","\r\n            Class representing collection of property elements\r\n            ":"\r\n            代表财产元素收集的类\r\n            \r\n","\r\n            This interface is implemented by a build node, and allows the host process to control its execution.\r\n            ":"\r\n            该接口由构建节点实现，并允许主机进程控制其执行。\r\n            \r\n","The ToolsVersion in which to find the file":"在其中找到文件的工具库\r\n","\r\n            Given a property name and a sub-toolset version, searches for that property first in the\r\n            sub-toolset, then falls back to the base toolset if necessary, and returns the property\r\n            if it was found.\r\n            ":"给定属性名称和一个子图表版本，首先在\r\n            子型号，然后在必要时掉回基本工具集，然后返回属性\r\n            如果找到了。\r\n            \r\n","\r\n            Use this for File.ReadAllBytes(path)\r\n            ":"\r\n            将其用于file.readallBytes（路径）\r\n            \r\n","\r\n            The reason why the target was skipped.\r\n            ":"\r\n            目标被跳过的原因。\r\n            \r\n","\r\n            Returns the hashcode for this object.\r\n            ":"\r\n            返回此对象的哈希码。\r\n            \r\n","\r\n            Loads a logger from its assembly, instantiates it, and handles errors.\r\n            ":"从其组装中加载记录仪，实例化并处理错误。\r\n            \r\n","\r\n            Closes the node's context, disconnecting it from the node.\r\n            ":"\r\n            关闭节点的上下文，从节点断开连接。\r\n            \r\n","Uses CurrentCulture for display purposes":"将当前文化用于显示目的\r\n","\r\n            True if the \"secret\" environment variable MSBUILDNOINPROCNODE is set. \r\n            ":"如果设置了“秘密”环境变量MSBUILDNOINPROCOCNODE，则为正确。\r\n            \r\n","\r\n            Constructor for the blocker where we are blocked waiting for requests to be satisfied.\r\n            ":"\r\n            阻止我们被阻止的构造函数，等待满足请求。\r\n            \r\n","\r\n            Populates with an item group. This is done before the item lookup is used in this scope.\r\n            Assumes all the items in the group have the same, provided, type.\r\n            Assumes there is no item group of this type in the primary table already.\r\n            Should be used only by batching buckets, and if no items are passed,\r\n            explicitly stores a marker for this item type indicating this.\r\n            ":"\r\n            用项目组填充。这是在此范围中使用项目查找之前完成的。\r\n            假设组中的所有项目都具有相同的类型。\r\n            假设已经在主表中没有此类型的项目组。\r\n            应仅通过批处理存储桶来使用，如果没有通过任何项目，则应使用\r\n            显式存储该项目类型的标记，以指示这一点。\r\n            \r\n","\r\n            Expands the specified expression into a list of TaskItem's.\r\n            ":"\r\n            将指定的表达式扩展到TaskItem的列表中。\r\n            \r\n","The metadata table for the item definition representing this item.  May be null.":"代表此项目的项目定义的元数据表。可能是无效的。\r\n","\r\n            Location of keepDuplicates, if any.\r\n            ":"\r\n            如果有的话。\r\n            \r\n","\r\n            Initialize a parented ProjectUsingTaskBodyElement\r\n            ":"\r\n            初始化parented projectingTaskbodylement\r\n            \r\n","\r\n            Delegate to a method which takes a version enumeration and return a string path\r\n            ":"\r\n            将列出版本枚举并返回字符串路径的方法委派\r\n            \r\n","Code page for encoding.":"编码的代码页。\r\n","The items to match":"匹配的项目\r\n","\r\n            Creates a property group.\r\n            Caller must add it to the location of choice in the project.\r\n            ":"\r\n            创建一个属性组。\r\n            呼叫者必须将其添加到项目中选择的位置。\r\n            \r\n","\r\n            Log errors from TaskLoader. \r\n            ":"\r\n            来自TaskLoader的日志错误。\r\n            \r\n","\r\n            ProjectWhenElement represents the When element in the MSBuild project.\r\n            ":"\r\n            Project Whenelement代表MSBUILD项目中的WINE元素。\r\n            \r\n","\r\n            Check if the source file needs to be compiled\r\n            ":"\r\n            检查是否需要编译源文件\r\n            \r\n","The lifetime of the object.":"对象的寿命。\r\n","\r\n            Dictionary of project full paths and a boolean that indicates whether at least one \r\n            of their targets has the \"Returns\" attribute set.  \r\n            ":"\r\n            项目完整路径的字典和一个布尔值，指示至少一个\r\n            他们的目标具有“返回”属性集。\r\n            \r\n","\r\n            Delegate for users that want to translate an arbitrary structure that doesn't implement ":"\r\n            为想要翻译任意结构的用户委派\r\n","\r\n            Unescaped value of the evaluated property\r\n            ":"\r\n            评估属性的毫无疑问的价值\r\n            \r\n","\r\n            Handler for TaskFinished events.\r\n            ":"\r\n            任务事件的处理程序。\r\n            \r\n","\r\n            MatchOnMetadata value cached for performance\r\n            ":"\r\n            MATCONOMMETADATA值缓存以供性能\r\n            \r\n","\r\n            The name of the targets to build.\r\n            ":"\r\n            要构建目标的名称。\r\n            \r\n","\r\n            Indicates whether there are any targets in this project \r\n            that use the \"Returns\" attribute.  If so, then this project file\r\n            is automatically assumed to be \"Returns-enabled\", and the default behavior\r\n            for targets without Returns attributes changes from using the Outputs to \r\n            returning nothing by default. \r\n            ":"\r\n            指示该项目中是否有任何目标\r\n            使用“返回”属性。如果是这样，那么这个项目文件\r\n            自动假定为“支持返回”，默认行为\r\n            对于没有返回的目标，属性从使用输出到\r\n            默认情况下什么都没有返回。\r\n            \r\n","\r\n            Returns the node build request id for which this result was generated\r\n            ":"\r\n            返回生成此结果的节点构建请求ID\r\n            \r\n","\r\n            Returns a hashset of warnings to be logged as messages for the specified project instance ID.\r\n            ":"\r\n            返回要记录的警告标签作为指定项目实例ID的消息。\r\n            \r\n","\r\n            The count of items, stored here so that we don't have to decompress the items if we are\r\n            only looking at the count.\r\n            ":"\r\n            物品计数，存储在此处，以便我们不必解压缩项目\r\n            只看着计数。\r\n            \r\n","\r\n            Contains information about the state of a node.\r\n            ":"\r\n            包含有关节点状态的信息。\r\n            \r\n"," from the original target build\r\n            ":" 从原始目标构建\r\n            \r\n","\r\n            Gets or sets the build id.\r\n            ":"\r\n            获取或设置构建ID。\r\n            \r\n","The Lookup containing all current items and properties for this target.":"包含此目标的所有当前项和属性的查找。\r\n","\r\n            Append a switch [overload]\r\n            This method appends a space to the command line (if it's not currently empty) before the switch.\r\n            ":"\r\n            附加开关[超载]\r\n            此方法在开关之前将一个空间附加到命令行（如果当前不是空）。\r\n            \r\n","\r\n            Verbosity is ignored by this logger\r\n            ":"\r\n            这个记录器忽略了冗长\r\n            \r\n","\r\n            Save the project to the file system, if dirty or the path is different.\r\n            ":"\r\n            如果脏或路径不同，则将项目保存到文件系统。\r\n            \r\n"," implementation in\r\n            ":" 实施\r\n            \r\n","\r\n            Copy constructor\r\n            ":"\r\n            复制构造函数\r\n            \r\n","\r\n            Note that the current implementation never runs and is provided merely\r\n            as a safeguard in case MessageGetter isn't set for some reason.\r\n            ":"\r\n            请注意，当前的实施永远不会运行，仅提供\r\n            如果没有设置MessageGetter，则作为保障。\r\n            \r\n","\r\n            Is this spec a single reference to a specific item?\r\n            ":"\r\n            这个规格是对特定项目的单一引用吗？\r\n            \r\n","The new link status.":"新的链接状态。\r\n","\r\n                This method uses the ProjectReferenceTargets items to determine the targets to run per node. The results can then\r\n                be used to start building each project individually, assuming a given project is built after its references.\r\n            ":"\r\n                此方法使用ProjectReferenceTargets项目来确定每个节点要运行的目标。结果可以\r\n                假设一个给定的项目是在参考文献之后构建的，则可以用来开始分别构建每个项目。\r\n            \r\n","A new set of scheduling actions to take.":"一组新的调度措施。\r\n","The project instance to which this item definition belongs.":"该项目定义所属的项目实例。\r\n","\r\n             Shutdown the logging service\r\n            ":"\r\n             关闭伐木服务\r\n            \r\n","\r\n            This class implements the default logger that outputs event data\r\n            to the console (stdout).\r\n            ":"\r\n            该类实现输出事件数据的默认记录器\r\n            到控制台（Stdout）。\r\n            \r\n","\r\n            Exposes the underlying arguments field to serializers.\r\n            ":"\r\n            将基础论点字段暴露于串行化器。\r\n            \r\n"," if the build is configured to log all task inputs.\r\n            ":" 如果将构建配置为记录所有任务输入。\r\n            \r\n","\r\n            Returns the prefix of the .NET Framework version folder (e.g. \"v2.0\")\r\n            ":"\r\n            返回.NET Framework版本文件夹的前缀（例如“ V2.0”）\r\n            \r\n","event subcategory":"事件子类别\r\n","\r\n            Divide two longs\r\n            ":"\r\n            划分两个长\r\n            \r\n","List of AssemblyFoldersExInfo":"汇编Foldersexinfo列表\r\n","Object that the function is called on.":"调用函数的对象。\r\n","\r\n            This field need not be specified only if all individual properties have data source defined locally.\r\n            ":"\r\n            仅当所有各个属性都在本地定义数据源时，就不必指定此字段。\r\n            \r\n","\r\n            Returns the path to a file in the Windows SDK for the desired .NET Framework and Visual Studio version.  Note that \r\n            this is only supported for a targeted .NET Framework version of 4.5 and above. \r\n            ":"\r\n            为所需的.NET框架和Visual Studio版本返回Windows SDK中文件的路径。注意\r\n            仅针对4.5及更高版本的目标.NET框架版本支持这。\r\n            \r\n","\r\n            CopyRedist metadata name\r\n            ":"\r\n            复印员元数据名称\r\n            \r\n","\r\n            Add or rename an entry in the cache.\r\n            Old full path may be null iff it was not already in the cache.\r\n            ":"\r\n            在缓存中添加或重命名条目。\r\n            如果尚未在缓存中，则旧的完整路径可能为null。\r\n            \r\n","\r\n            This class will cache string values for loaded Xml files.\r\n            ":"\r\n            此类将为已加载的XML文件缓存字符串值。\r\n            \r\n","\r\n            Appends the literal parameter without trying to quote.\r\n            This method appends a space to the command line (if it's not currently empty) before the switch.\r\n            ":"\r\n            无需引用文字参数即可附加文字参数。\r\n            此方法在开关之前将一个空间附加到命令行（如果当前不是空）。\r\n            \r\n","\r\n            Element describing a platform this platform is dependent on\r\n            ":"\r\n            描述平台的元素该平台取决于\r\n            \r\n","\r\n            The node ID to which the request should be sent.\r\n            ":"\r\n            请求发送请求的节点ID。\r\n            \r\n"," to use for the new project.":" 用于新项目。\r\n","\r\n            Handler for TargetStarted events.\r\n            ":"\r\n            针对目标事件的处理程序。\r\n            \r\n","Name of the task which the warning is being raised from":"警告从中提出的任务的名称\r\n","\r\n            Evaluated value of the property, escaped as necessary.\r\n            Setter assumes caller has protected global properties, if necessary.\r\n            ":"\r\n            评估该物业的价值，必要时逃脱。\r\n            Setter假设呼叫者在必要时保护了全局属性。\r\n            \r\n","\r\n            This method searches the first two lines of the solution file opened by the specified\r\n            StreamReader for the solution file header.  An exception is thrown if it is not found.\r\n            \r\n            The solution file header looks like this:\r\n            \r\n                Microsoft Visual Studio Solution File, Format Version 9.00\r\n            \r\n            ":"\r\n            此方法搜索指定文件打开的解决方案文件的前两行\r\n            解决方案文件标头的StreamReader。如果找不到例外，则会抛出一个例外。\r\n            \r\n            解决方案文件标头看起来像这样：\r\n            \r\n                Microsoft Visual Studio解决方案文件，格式9.00\r\n            \r\n            \r\n","\r\n            Implementation of IKeyed exposing the item type, so items\r\n            can be put in a dictionary conveniently.\r\n            ":"\r\n            实施IKEYED公开项目类型，因此项目\r\n            可以方便地放入字典中。\r\n            \r\n","\r\n            Not a public property on original ProjectMetadata object, but int is needed to create a local proxy object.\r\n            ":"\r\n            不是原始ProjectMetadata对象上的公共财产，而是创建本地代理对象所需的INT。\r\n            \r\n","\r\n            Importance of the message\r\n            ":"\r\n            消息的重要性\r\n            \r\n","\r\n            Information about where the cache for the items in this result are stored.\r\n            ":"有关此结果中项目缓存的位置存储的信息。\r\n            \r\n","\r\n            Compare numerically\r\n            ":"\r\n            进行数值比较\r\n            \r\n","\r\n            Examines the provided ProjectItemElement to see if it has a wildcard that would match the \r\n            item we wish to add, and does not have a condition or an exclude.\r\n            Works conservatively - if there is anything that might cause doubt, considers the candidate to not be suitable.\r\n            Returns true if it is suitable, otherwise false.\r\n            ":"\r\n            检查提供的ProjectItemelement，以查看其是否具有与之匹配的通配符\r\n            我们希望添加的项目，没有条件或排除。\r\n            保守的工作 - 如果有任何可能引起怀疑的东西，请认为候选人不合适。\r\n            如果合适，则返回true，否则为错误。\r\n            \r\n","\r\n            When reset caches is false we need to only keep around the configurations which are being asked for during the design time build.\r\n            Other configurations need to be cleared. If this configuration is marked as ExplicitlyLoadedConfiguration then it should not be cleared when \r\n            Reset Caches is false.\r\n            ":"\r\n            当重置缓存为错误时，我们只需要围绕在设计时间构建过程中要求的配置。\r\n            其他配置需要清除。如果将此配置标记为显式载体configuration，则不应在\r\n            重置缓存是错误的。\r\n            \r\n"," would have this\r\n            same value for this field. ":" 会有这个\r\n            该字段相同的值。\r\n","\r\n            instead of ":"\r\n            代替\r\n","\r\n            Gets the evaluated metadata value.\r\n            Cannot be set directly: only the unevaluated value can be set.\r\n            Is never null.\r\n            ":"\r\n            获取评估的元数据值。\r\n            不能直接设置：只能设置未评估的值。\r\n            永远不会无效。\r\n            \r\n","\r\n            Mapping from proxy targets to real targets. Case insensitive.\r\n            ":"\r\n            从代理目标映射到实际目标。不区分大小写。\r\n            \r\n","\r\n            Gets the project file to use for this entry point.\r\n            ":"\r\n            获取用于此入口点的项目文件。\r\n            \r\n","The project collection that this toolset should inherit from":"该工具集应继承的项目集合\r\n","\r\n            A function that mutates the value. This function should be side-effect free, as it may run multiple times\r\n            when races occur with other threads.":"\r\n            突变值的函数。此功能应无副作用，因为它可能会多次运行\r\n            当种族与其他线程发生时。\r\n","\r\n            Specified when a file or directory was created\r\n            ":"\r\n            在创建文件或目录时指定\r\n            \r\n","Like Software\\Microsoft\\[.NetFramework | .NetCompactFramework]":"喜欢软件\\ Microsoft \\ [。NetFramework | .NetCompactFramework]\r\n","\r\n            Encapsulates the backing data of a Project, so that it can be passed to the Evaluator to\r\n            fill in on a re-evaluation without having to expose property setters.\r\n            ":"\r\n            封装项目的背景数据，以便可以将其传递给评估者\r\n            填写重新评估，而无需公开属性设置器。\r\n            \r\n"," names and \r\n            the value is the list of properties in that category. ":" 名称和\r\n            该值是该类别中的属性列表。\r\n","\r\n            If the metadatum originated in an imported file, returns true.\r\n            Otherwise returns false.\r\n            ":"\r\n            如果元数据起源于导入的文件，请返回true。\r\n            否则返回false。\r\n            \r\n","\r\n            Strings which we didn't attempt to intern\r\n            ":"\r\n            我们没有尝试实习的琴弦\r\n            \r\n","\r\n            Reads all the toolsets and populates the given ToolsetCollection with them\r\n            ":"\r\n            读取所有工具集并与给定的ToolsetCollection填充它们\r\n            \r\n","\r\n            The value specified can be overridden by the value specified by a child ":"\r\n            指定的值可以被儿童指定的值覆盖\r\n","\r\n            This is a good ":"\r\n            这是一个好\r\n","\r\n            Leave the current state\r\n            ":"\r\n            离开当前状态\r\n            \r\n","\r\n            Figure out what tools version to build the solution wrapper project with. If a /tv\r\n            switch was passed in, use that; otherwise fall back to the default (12.0).\r\n            ":"\r\n            找出哪些工具版本可以构建解决方案包装器项目。如果A /电视\r\n            开关传递，使用它；否则回到默认值（12.0）。\r\n            \r\n","\r\n            Used by serialization/deserialization purposes\r\n            ":"\r\n            通过序列化/避难目的使用\r\n            \r\n"," == false\r\n            ":" == false\r\n            \r\n","\r\n            Regkey that we check to see whether Dev10 Premium is installed.  This will exist if it is installed, and be\r\n            properly removed after it has been uninstalled.\r\n            ":"\r\n            我们检查是否安装了Dev10 Premium。如果安装它，则将存在，并且\r\n            卸载后正确删除。\r\n            \r\n","\r\n            ProjectUsingTaskElement represents the Import element in the MSBuild project.\r\n            ":"\r\n            ProjectingTaskElement代表MSBUILD项目中的导入元素。\r\n            \r\n","\r\n            Stores large strings in a temp file on disk, to avoid keeping all strings in memory.\r\n            Only creates a file for 32-bit MSBuild.exe, just returns the string directly on 64-bit.\r\n            ":"\r\n            将大字符串存储在磁盘上的温度文件中，以避免将所有字符串保持在内存中。\r\n            仅创建32位msbuild.exe的文件，只需在64位上直接返回字符串即可。\r\n            \r\n","The type of items this factory will create.":"该工厂将创建的项目类型。\r\n","\r\n            Compare numbers\r\n            ":"\r\n            比较数字\r\n            \r\n","\r\n            Executes the islands on a dedicated worker thread. The worker thread's\r\n            physical callstack then maps to the interpreter's virtual callstack.\r\n            ":"\r\n            在专用的工人线程上执行岛屿。工人线程\r\n            然后，物理呼叫插图将其映射到解释器的虚拟呼叫站。\r\n            \r\n","True if the element contains known invalid namespace definitions":"如果元素包含已知无效的名称空间定义，则为true\r\n","\r\n            Expands all embedded item metadata in the given string, using the bucketed items.\r\n            Metadata may be qualified, like %(Compile.WarningLevel), or unqualified, like %(Compile)\r\n            ":"\r\n            使用铲斗项目扩展给定字符串中的所有嵌入式项目元数据。\r\n            元数据可能是合格的，例如％（compile.warninglevel）或不合格的，例如％（编译）\r\n            \r\n","The path to load.":"加载路径。\r\n"," does not have the data source initialized. The getter for this property returns\r\n            only the ":" 没有初始化的数据源。此属性的Getter返回\r\n            只有\r\n","\r\n            Raised when a new build request is generated by an MSBuild callback.\r\n            ":"\r\n            当MSBuild回调生成新的构建请求时提出。\r\n            \r\n","\r\n            This is passed back so it can go to the build for debugger display while executing targets\r\n            ":"\r\n            这是传递的，因此可以在执行目标时转到构建以进行调试器显示\r\n            \r\n","\r\n            The default tools version for the build.\r\n            ":"\r\n            构建的默认工具版本。\r\n            \r\n","\r\n            A thread is started which will process build events by raising them on a filter event source\r\n            or on the correct sink.\r\n            ":"\r\n            启动了线程，该线程将通过在滤波器事件源上提高构建事件来处理构建事件\r\n            或在正确的水槽上。\r\n            \r\n","\r\n            This field is optional and has the default value of \"true\".\r\n            ":"\r\n            该字段是可选的，具有“ true”的默认值。\r\n            \r\n","The location information for error reporting purposes.":"错误报告目的的位置信息。\r\n","true, if specified property is reserved":"是的，如果保留了指定的属性\r\n","\r\n            The list of metadata to keep.\r\n            ":"\r\n            保留的元数据清单。\r\n            \r\n","GL-":"gl\r\n","\r\n            Returns true if the solution contains any .wdproj projects.  Used to determine\r\n            whether we need to load up any projects to examine dependencies. \r\n            ":"\r\n            如果解决方案包含任何.WDPROJ项目，则返回true。用于确定\r\n            我们是否需要加载任何项目来检查依赖项。\r\n            \r\n","\r\n            Returns the specified metadata value, escaped.\r\n            If metadata is not defined, returns empty string.\r\n            ":"\r\n            返回指定的元数据值逃脱。\r\n            如果未定义元数据，请返回空字符串。\r\n            \r\n","\r\n            Simplified registry access delegate. Given a baseKey and a subKey, get all of the subkey\r\n            names.\r\n            ":"\r\n            简化的注册表访问委托。鉴于basekey和subkey，获取所有子钥匙\r\n            名称。\r\n            \r\n","\r\n            Regkey that we check to see whether VWD Express 2010 is installed.  This will exist if it is installed, and be \r\n            properly removed after it has been uninstalled.  \r\n            ":"\r\n            我们检查是否安装了VWD Express 2010。如果安装它，则将存在，并且\r\n            卸载后正确删除。\r\n            \r\n","\r\n            Caches all of the targets results we can.\r\n            ":"\r\n            缓存所有目标结果。\r\n            \r\n","\r\n            The item type of the items that this factory will create.\r\n            May be null, if the items will not have an itemtype (ie., for ITaskItems)\r\n            May not be settable (eg., for ITaskItems and for ProjectItems)\r\n            ":"\r\n            该工厂将创建的项目的项目类型。\r\n            如果项目没有itemType（即iTaskItems），则可能是零的\r\n            可能无法设置（例如，对于itaskItems和ProjectItems）\r\n            \r\n","\r\n            Unevaluated removeMetadata value\r\n            ":"\r\n            未评估的删除值\r\n            \r\n","The main glob":"主球\r\n","\r\n            Get a read-only collection of the child import groups, if any, in reverse order\r\n            ":"\r\n            以相反的顺序获取儿童进口组（如果有的话）的只读收集\r\n            \r\n","\r\n            Initializes a build request.\r\n            ":"\r\n            初始化构建请求。\r\n            \r\n","\r\n            Not relevant, returns empty string.\r\n            ":"\r\n            无关，返回空字符串。\r\n            \r\n","\r\n            Modifies items in the world - specifically, changes their metadata. Changes to items that are part of the project manifest are backed up, so \r\n            they can be reverted when the project is reset after the end of the build.\r\n            ":"\r\n            修改世界上的项目 - 具体来说，改变了它们的元数据。对项目清单一部分的项目的更改得到了备份，因此\r\n            当项目结束后重置项目时，可以将它们恢复。\r\n            \r\n","Type of the items that should be returned":"应该退还的项目的类型\r\n","\r\n            Creates a property.\r\n            Caller must add it to the location of choice in the project.\r\n            ":"\r\n            创建一个属性。\r\n            呼叫者必须将其添加到项目中选择的位置。\r\n            \r\n","One or more paths to combine and normalize.":"一条或多个路径可以合并和归一化。\r\n","\r\n            Returns all items that have the specified evaluated include.\r\n            For example, all items that have the evaluated include \"bar.cpp\".\r\n            Typically there will be zero or one, but sometimes there are two items with the\r\n            same path and different item types, or even the same item types. This will return\r\n            them all.\r\n            ":"\r\n            返回所有已评估的指定的项目包括。\r\n            例如，所有具有评估的项目都包括“ bar.cpp”。\r\n            通常会有零或一个，但有时有两个项目\r\n            相同的路径和不同的项目类型，甚至相同的项目类型。这将返回\r\n            商场。\r\n            \r\n","\r\n            AppendSwitchUnquotedIfNotNull(\"/source:\", \"File Name.cs\") => \"/source:File Name.cs\"\r\n            ":"\r\n            appendswitchunquotedifnotnull（“/source：”，“ file name.cs”）=>>“/source：file name.cs”\r\n            \r\n","\r\n            Escape hatch for problems arising from https://github.com/dotnet/msbuild/pull/5552.\r\n            ":"\r\n            从https://github.com/dotnet/msbuild/pull/5552出现的问题。\r\n            \r\n","\r\n            The first value added to the concatenator if it is a span. Tracked in its own field so the\r\n            ":"\r\n            如果是跨度，则将第一个值添加到串联器中。在自己的领域进行跟踪\r\n            \r\n","\r\n            Provides an enumerator over property definitions for a specified sub-toolset version \r\n            under a specified toolset version. In the ToolsetConfigurationReader case, breaks \r\n            immediately because we do not currently support sub-toolsets in the configuration file. \r\n            ":"\r\n            提供有关指定子图案版本的属性定义的枚举器\r\n            在指定的工具集中。在toolsetConfigurationReader案例中，断裂\r\n            立即，因为我们当前不支持配置文件中的子处理器。\r\n            \r\n","\r\n            for construction objects so therefore not increasing the storage size while supporting\r\n            external linking.\r\n            ":"\r\n            对于施工对象，因此在支持时不会增加存储尺寸\r\n            外部链接。\r\n            \r\n","\r\n            Initialize the properties which are used to evaluate the tasks files.\r\n            ":"\r\n            初始化用于评估任务文件的属性。\r\n            \r\n","\r\n            The project may only be scheduled on an out-of-proc node.  A host may wish to specify this if it is known the project being built\r\n            could contaminate the host environment (or the host contaminates the environment while a build is proceeding.)\r\n            ":"\r\n            该项目只能安排在一个非附加节点上。主机可能希望指定这一点，如果已知该项目正在构建\r\n            可能污染主机环境（或者在构建过程中污染环境。）\r\n            \r\n","\r\n            Create a new PropertyGroup task.\r\n            ":"\r\n            创建一个新的PropertyGroup任务。\r\n            \r\n","\r\n            Arguments for project finished events\r\n            ":"\r\n            项目完成事件的论点\r\n            \r\n","The metadata modifications to clone.":"克隆的元数据修饰。\r\n","\r\n            The build id\r\n            ":"\r\n            构建ID\r\n            \r\n","\r\n            Resolves the target.  If it doesn't exist in the project, throws an InvalidProjectFileException.\r\n            ":"\r\n            解决目标。如果项目中不存在，则会引发无效的fileException。\r\n            \r\n","\r\n            Implementation of IKeyed exposing the property name\r\n            ":"\r\n            实施IKEYED公开属性名称\r\n            \r\n","\r\n            Determines whether MSBuild will save the results of builds after EndBuild to speed up future builds.\r\n            ":"\r\n            确定MSBUILD是否会保存Endbuild后的构建结果，以加快未来的构建。\r\n            \r\n","\r\n            Protected constructor used for (de)serialization. \r\n            If we ever add new members to this class, we'll need to update this.\r\n            ":"\r\n            用于（DE）序列化的保护构造函数。\r\n            如果我们在此类中添加新成员，我们需要更新此会员。\r\n            \r\n","\r\n            Pushes the list of targets specified onto the target stack in reverse order specified, so that\r\n            they will be built in the order specified.\r\n            ":"\r\n            按指定的相反顺序将指定的目标列表推入目标堆栈，以便\r\n            它们将按照指定的顺序构建。\r\n            \r\n","A child element which might be represented as an attribute":"可能表示为属性的子元素\r\n","\r\n            Store the 64-bit path for MSBuild / MSBuildTaskHost so that we don't have to keep recalculating it. \r\n            ":"\r\n            存储MSBUILD / MSBUILDTASKHOST的64位路径，这样我们就不必继续重新计算它。\r\n            \r\n","\r\n            Special derived variation of ProjectElementContainer used to wrap a ProjectRootElement.\r\n            This is part of a trick used in ProjectElement to avoid using a separate field for the containing PRE.\r\n            ":"\r\n            ProjectElementContainer的特殊派生变化用于包裹项目Rootelement。\r\n            这是项目电子中用于避免使用单独的字段进行包含的pre的技巧的一部分。\r\n            \r\n","\r\n            The engine has shut down.\r\n            ":"\r\n            引擎已关闭。\r\n            \r\n","\r\n            Gets or sets a value indicating if property pages for this rule should be hidden or not.\r\n            ":"\r\n            获取或设置一个值，指示该规则的属性页面是否应该隐藏。\r\n            \r\n","\r\n            AppendSwitchIfNotNull(\"/sources:\", new string[] {\"Alpha.cs\", \"Be ta.cs\"}, \";\") => \"/sources:Alpha.cs;\\\"Be ta.cs\\\"\"\r\n            ":"\r\n            appendSwitchifnotnull（“/sources：”，new String [] {“ alpha.cs”，“ Be ta.cs”}，“;”）=>“/sources：alpha.cs; \\ \"be ta.cs \\“”\r\n            \r\n","The configuration to be resolved.":"要解决的配置。\r\n","Path to the root of the referenced SDK.":"通往引用SDK的根的路径。\r\n","\r\n            Gets or sets the semicolon-delimited list of MSBuild targets that must be executed before reading\r\n            the read-only properties or items described by this ":"\r\n            获取或设置在阅读之前必须执行的MSBUILD目标列表\r\n            此描述的仅阅读属性或项目\r\n","\r\n            Gets a count of the requests we are blocked by.\r\n            ":"\r\n            获取我们阻止的请求的计数。\r\n            \r\n","capacity was less than the current size.":"容量小于当前大小。\r\n","\r\n            Required for interface - this should never be called.\r\n            ":"\r\n            接口所需的 - 不应调用。\r\n            \r\n","A list of folders in the order which they should be used when looking for DesignTime files in the SDK":"在SDK中查找DesignTime文件时应使用的顺序中的文件夹列表\r\n","targets that are being invoked":"被调用的目标\r\n","\r\n            Create an instance of a LoggingService using the specified mode.\r\n            This method is used by the object factories to create instances of components.\r\n            ":"\r\n            使用指定模式创建loggingservice的实例。\r\n            对象工厂使用此方法来创建组件实例。\r\n            \r\n","\r\n            Given a hive and a hive view open the base key\r\n                 RegistryKey baseKey = RegistryKey.OpenBaseKey(hive, view);\r\n            ":"\r\n            给定蜂巢和蜂巢视图打开基本钥匙\r\n                 RegistryKey baseKey = RegistryKey.openBaseKey（Hive，View）;\r\n            \r\n"," is the same as the specified version.  If the ":" 与指定版本相同。如果是\r\n","\r\n            if the import statement was a glob and no files matched, or the condition (if any) evaluated\r\n            to false.\r\n            ":"\r\n            如果导入语句是地球范围的，则没有匹配的文件，或者已评估的条件（如果有）\r\n            虚假。\r\n            \r\n","\r\n            A property with a value of empty string and no property\r\n            at all are not distinguished between by this method.\r\n            This is because the build does not distinguish between the two.\r\n            The reason this method exists when users can simply do GetProperty(..).EvaluatedValue,\r\n            is that the caller would have to check for null every time. For properties, empty and undefined are\r\n            not distinguished, so it much more useful to also have a method that returns empty string in\r\n            either case.\r\n            This function returns the unescaped value.\r\n            ":"\r\n            一个具有空字符串和无属性的属性\r\n            完全没有通过这种方法区分。\r\n            这是因为构建没有区分两者。\r\n            当用户可以简单地做getProperty（..）。evaliedValue时，此方法之所以存在，\r\n            是呼叫者每次都必须检查null。对于属性，空的和未定义的是\r\n            没有区分，因此还可以使用一种返回空字符串的方法更有用\r\n            两种情况。\r\n            此函数返回未排列的值。\r\n            \r\n","\r\n            List of loggers\r\n            ":"\r\n            伐木者列表\r\n            \r\n","\r\n            Potentially Intern the given string builder.\r\n            ":"\r\n            可能实习给定的弦乐制造商。\r\n            \r\n","\r\n            ID of thread owning this scope\r\n            ":"\r\n            拥有此范围的线程的ID\r\n            \r\n","If successful, the index corresponds to the end of the property expression.\r\n            In case of scan failure, it is the error position index.":"如果成功，则索引对应于属性表达式的末尾。\r\n            在扫描失败的情况下，它是错误位置索引。\r\n","\r\n            Describes a state in the interpreter. A state is any source location that \r\n            a breakpoint could be set on or that could be stepped to, such\r\n            as a line of code or a statement.\r\n            ":"\r\n            描述口译员中的状态。状态是任何来源位置\r\n            可以设置一个断点，也可以踩到\r\n            作为代码或语句行。\r\n            \r\n","The lookup to be used during execution.":"执行过程中要使用的查找。\r\n","\r\n            Routes a packet.\r\n            ":"\r\n            路由数据包。\r\n            \r\n","\r\n            Property value fragments. Join with semicolon to get the final value.\r\n            ":"\r\n            属性价值片段。加入半隆以获得最终值。\r\n            \r\n","\r\n            Initializes this class after Xaml loading is done.\r\n            ":"\r\n            在完成XAML加载后初始化此类。\r\n            \r\n","A IDictionary collection of filtered extension SDKs":"过滤扩展SDK的IDictionary集合\r\n","\r\n            Adds a traversal target which invokes a specified target on a single project.  This creates targets called \"Project\", \"Project:Rebuild\", \"Project:Clean\", \"Project:Publish\" etc.\r\n            ":"\r\n            添加了一个遍历目标，该目标调用单个项目上的指定目标。这创建了称为“项目”，“项目：重建”，“项目：清洁”，“项目：发布”等的目标目标。\r\n            \r\n"," if the location's value is changed by applying the result of the\r\n            ":" 如果位置的值通过应用程序的结果更改\r\n            \r\n","\r\n            The project instance in whose context we are executing\r\n            ":"\r\n            我们正在执行其上下文的项目实例\r\n            \r\n","The logger verbosity required to log a message of the given ":"记录给定的消息所需的记录器冗长。\r\n","\r\n            The default tools version obtained by examining all of the toolsets.\r\n            ":"\r\n            通过检查所有工具集获得的默认工具版本。\r\n            \r\n","\r\n            Request Manager\r\n            ":"\r\n            请求管理器\r\n            \r\n","Object is not a array with the same number of elements as the array to compare it to.":"对象不是一个数组，其数量与将其比较的数组数量相同。\r\n","The value returned from the function call.":"从函数调用返回的值。\r\n","\r\n            Handle logged messages from the task host.\r\n            ":"\r\n            从任务主机处理记录消息。\r\n            \r\n","\r\n            The task representing the currently-executing build request.\r\n            ":"\r\n            代表当前执行构建请求的任务。\r\n            \r\n","\r\n            Workaround for https://github.com/Microsoft/vstest/issues/1503.\r\n            ":"\r\n            https://github.com/microsoft/vstest/issues/1503进行解决方法。\r\n            \r\n","\r\n            Whether this represents an output property (as opposed to an output item)\r\n            ":"\r\n            这是否代表输出属性（与输出项目相反）\r\n            \r\n","\r\n            Whether the target succeeded originally.\r\n            ":"\r\n            目标是否最初成功。\r\n            \r\n","\r\n            The environment properties used to read the toolset.\r\n            ":"\r\n            用于读取工具集的环境属性。\r\n            \r\n","\r\n            Construct over a ProjectRootElement object, evaluating with specified\r\n            global properties and toolset, either or both of which may be null.\r\n            Project is added to the global project collection if it has a name, or else when it is named.\r\n            Throws InvalidProjectFileException if the evaluation fails.\r\n            Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.\r\n            ":"\r\n            通过ProjectRootelement对象构建，并用指定的\r\n            全局属性和工具集，或两者都可能为null。\r\n            如果项目收集具有名称，则将其添加到全局项目集合中。\r\n            如果评估失败，则投掷无效的fileException。\r\n            如果项目集合中已经加载了等效的项目，则投掷无效的exception。\r\n            \r\n","\r\n            Sets the inner XML/text of the given XML node, escaping as necessary.\r\n            ":"\r\n            设置给定XML节点的内部XML/文本，根据需要逃脱。\r\n            \r\n","\r\n            Manages the separate MRU lists.\r\n            ":"\r\n            管理单独的MRU列表。\r\n            \r\n","\r\n            Signalled by the worker thread when it's finished handling the event and \r\n            the main thread can resume.\r\n            ":"\r\n            工人线程完成事件时，由工人线程发出信号\r\n            主线程可以恢复。\r\n            \r\n","\r\n            Get any metadata in the item that has the specified name,\r\n            otherwise returns null.\r\n            Includes any metadata inherited from item definitions.\r\n            Includes any built-in metadata.\r\n            ":"\r\n            在具有指定名称的项目中获取任何元数据，\r\n            否则返回null。\r\n            包括从项目定义继承的任何元数据。\r\n            包括任何内置元数据。\r\n            \r\n"," representing the structure of an item expression":" 表示项目表达式的结构\r\n","\r\n            A value that can be used to identify a process.\r\n            The value is valid from the time the process is created until all handles to the process are closed and \r\n            the process object is freed; at this point, the identifier may be reused.\r\n            ":"可用于识别过程的值。\r\n            该值从创建过程的时间到整个过程都关闭并\r\n            过程对象被释放；此时，标识符可以重复使用。\r\n            \r\n","\r\n            Creates a when.\r\n            Caller must add it to the location of choice in this project.\r\n            ":"\r\n            创建一个何时。\r\n            呼叫者必须将其添加到该项目的选择位置。\r\n            \r\n","\r\n            This overload allows any number (zero, one, or many) of SDK paths to be returned.  This means a \"successful\" result\r\n            may not resolve to any SDKs.  The resolver can also supply properties or items to communicate information to the build.  This\r\n            can allow resolvers to report SDKs that could not be resolved without hard-failing the evaluation, which can allow other\r\n            components to take more appropriate action (for example installing optional workloads or downloading NuGet SDKs).\r\n            ":"\r\n            此过载允许返回任何数字（零，一个或多个）的SDK路径。这意味着“成功”的结果\r\n            可能无法解决任何SDK。解析器还可以提供属性或项目以将信息传达给构建。这个\r\n            可以允许解析器报告如果不努力消除评估，可以解决无法解决的SDK，这可以允许其他\r\n            组件采取更合适的操作（例如安装可选工作负载或下载Nuget SDK）。\r\n            \r\n"," is thrown if the project root element is not associated with any file on disk.\r\n            \r\n            See ":" 如果项目根元素与磁盘上的任何文件没有关联，则将抛弃。\r\n            \r\n            看\r\n","\r\n            Whether to stop lookups going beyond this scope downwards\r\n            ":"\r\n            是否停止查找超出此范围的范围\r\n            \r\n","\r\n            Should use new line separators instead of spaces to separate arguments.\r\n            ":"\r\n            应该使用新的行分隔符代替空格来分开参数。\r\n            \r\n","\r\n            List of names of the properties that, while global, are still treated as overridable.\r\n            ":"\r\n            虽然全局仍然被视为过度填充的属性名称列表。\r\n            \r\n","\r\n            The name is poorly chosen as this may be a targets file,\r\n            but the name has shipped now.\r\n            ":"\r\n            该名称的选择不佳，因为这可能是目标文件，\r\n            但是这个名字现在已经发货了。\r\n            \r\n","\r\n            Determines if the target needs to be built/rebuilt/skipped if it has no outputs (because they evaluated to empty).\r\n            ":"\r\n            确定目标是否没有输出（因为它们被评估为空），是否需要构建/重建/跳过。\r\n            \r\n","\r\n            Lock object to synchronize chainedReferenceAssemblyPath dictionary\r\n            ":"\r\n            锁定对象以同步链式限制性词汇\r\n            \r\n","\r\n             This is a private nested class, exposed only through the Expander class.\r\n             That allows it to hide its private methods even from Expander.\r\n             ":"这是一个私人嵌套班，仅通过扩展阶层暴露。\r\n             这使其甚至可以从扩展器中隐藏其私人方法。\r\n             \r\n","\r\n            DisplayName metadata name and manifest attribute\r\n            ":"\r\n            displayname元数据名称和清单属性\r\n            \r\n","\r\n            Item types in this project.\r\n            This is an ordered collection.\r\n            ":"\r\n            该项目中的项目类型。\r\n            这是一个有序的集合。\r\n            \r\n","The global properties to be used for creating the ProjectInstance.":"用于创建ProjectInstance的全局属性。\r\n","*.txt":"*。文本\r\n","\r\n            The project item's XML\r\n            ":"\r\n            项目项目的XML\r\n            \r\n","\r\n            Reader we've hooked\r\n            ":"\r\n            我们迷上了读者\r\n            \r\n","\r\n             Expands any item vector in the expression into items.\r\n             \r\n             For example, expands @(Compile->'%(foo)') to a set of items derived from the items in the \"Compile\" list.\r\n             \r\n             If there is no item vector in the expression (for example a literal \"foo.cpp\"), returns null.\r\n             If the item vector expression expands to no items, returns an empty list.\r\n             If item expansion is not allowed by the provided options, returns null.\r\n             If there is an item vector but concatenated with something else, throws InvalidProjectFileException.\r\n             If ExpanderOptions.BreakOnNotEmpty was passed, expression was going to be non-empty, and it broke out early, returns null. Otherwise the result can be trusted.\r\n             \r\n             If the expression is a transform, any transformations to an expression that evaluates to nothing (i.e., because\r\n             an item has no value for a piece of metadata) are optionally indicated with a null entry in the list. This means \r\n             that the length of the returned list is always the same as the length of the referenced item list in the input string.\r\n             That's important for any correlation the caller wants to do.\r\n             \r\n             If expression was a transform, 'isTransformExpression' is true, otherwise false.\r\n            \r\n             Item type of the items returned is determined by the IItemFactory passed in; if the IItemFactory does not \r\n             have an item type set on it, it will be given the item type of the item vector to use.\r\n             ":"\r\n             将表达式中的任何项目向量扩展到项目中。\r\n             \r\n             例如，将 @（compile->'％（foo）'）展开到从“编译”列表中的项目中得出的一组项目。\r\n             \r\n             如果表达式中没有项目向量（例如字面的“ foo.cpp”），请返回null。\r\n             如果项目矢量表达式扩展到没有项目，请返回一个空列表。\r\n             如果提供的选项不允许项目扩展，则返回null。\r\n             如果有一个项目向量，但与其他东西串联，则会引发无效的fileException。\r\n             如果通过ExpanderOptions.breakonnotempty通过，表达将是非空的，并且早点爆发，则返回NULL。否则可以信任结果。\r\n             \r\n             如果表达式是转换\r\n             一个项目对一块元数据没有值），可选地指示列表中的空条目。这表示\r\n             返回列表的长度始终与输入字符串中引用的项目列表的长度相同。\r\n             这对于呼叫者想要做的任何关联都很重要。\r\n             \r\n             如果表达是一种转换，则“ IsTransFormExpression”是真实的，否则是错误的。\r\n            \r\n             返回的项目的项目类型由传递的iItemFactory确定；如果iItemfactory没有\r\n             在其上设置了一个项目类型，它将为其使用项目向量的项目类型。\r\n             \r\n","\r\n                Resolved path to the SDK.\r\n            \r\n                Null if ":"\r\n                已解决通往SDK的路径。\r\n            \r\n                null if\r\n","\r\n            True if current OS is a BSD system.\r\n            ":"\r\n            如果当前操作系统是BSD系统，则为True。\r\n            \r\n","\r\n            Delegates the Dispose call the to the underlying BinaryWriter.\r\n            ":"\r\n            将处置委托给基础二进制作者。\r\n            \r\n","\r\n            Read toolset information from the current exe path\r\n            ":"\r\n            从当前的EXE路径读取工具集信息\r\n            \r\n","The target platform name.":"目标平台名称。\r\n","\r\n            Name of the platform on which this platform depends\r\n            ":"\r\n            该平台依赖的平台的名称\r\n            \r\n","\r\n            Constructs a GraphBuildRequestData for build requests based on project files.\r\n            ":"\r\n            构建一个基于项目文件的构建请求的GraphBuildRequestData。\r\n            \r\n","\r\n            Satisfies pending resource requests. Requests are pulled from the queue in FIFO fashion and granted as many cores\r\n            as possible, optimizing for maximum number of cores granted to a single request, not for maximum number of satisfied\r\n            requests.\r\n            ":"\r\n            满足未决的资源请求。请求以FIFO的方式从队列中提取，并批准了许多核心\r\n            尽可能优化授予单个请求的最大核心数，而不是最大值的满足数量\r\n            要求。\r\n            \r\n","\r\n            Gets the task instance\r\n            ":"\r\n            获取任务实例\r\n            \r\n","\r\n            Partitions the items consumed by the batchable object into buckets, where each bucket contains a set of items that\r\n            have the same value set on all item metadata consumed by the object.\r\n            ":"\r\n            将可批处理对象消耗的物品划分为存储桶，每个存储桶包含一组项目\r\n            在对象消耗的所有项目元数据上设置相同的值。\r\n            \r\n","\r\n            Retrieves the configuration structure for a node.\r\n            ":"\r\n            检索节点的配置结构。\r\n            \r\n","\r\n            The current state of the logging service\r\n            ":"\r\n            伐木服务的当前状态\r\n            \r\n","\r\n            Creates a new unnamed build manager.\r\n            Normally there is only one build manager in a process, and it is the default build manager.\r\n            Access it with ":"\r\n            创建一个新的未命名的构建经理。\r\n            通常，一个过程中只有一个构建管理器，它是默认的构建管理器。\r\n            访问它\r\n","\r\n            This interface represents a collection of nodes in the system.  It provides methods to \r\n            enumerate active nodes as well as send data and receive events from those nodes.\r\n            ":"\r\n            该界面代表系统中的节点集合。它提供了\r\n            列举活动节点以及从这些节点发送数据并接收事件。\r\n            \r\n","\r\n            Raises a status event, optionally cascading to an any event.\r\n            ":"\r\n            提出状态事件，可选地级联到任何事件。\r\n            \r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n            Adds a property group after the last child.\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n            在最后一个孩子之后增加了一个财产组。\r\n            \r\n","\r\n            Indicates an invalid project identifier.\r\n            ":"\r\n            表示无效的项目标识符。\r\n            \r\n","\r\n            Input cache files that MSBuild will use to read build results from.\r\n            Setting this also turns on isolated builds.\r\n            ":"\r\n            MSBUILD将用来读取构建结果的输入缓存文件。\r\n            设置这也打开孤立的构建。\r\n            \r\n"," Build messages to be logged before the build begins. ":" 在构建开始之前要记录的构建消息。\r\n","The build event context of the parent project.":"父项目的构建事件上下文。\r\n","\r\n            Logs that the build has started \r\n            ":"\r\n            构建已开始的日志\r\n            \r\n","\r\n            A known list of target names to create.  This is for backwards compatibility.\r\n            ":"\r\n            要创建目标名称的已知列表。这是为了向后兼容。\r\n            \r\n","\r\n            Keep track of the last event displayed so target names can be displayed at the correct time\r\n            ":"\r\n            跟踪显示的最后一个事件，以便可以在正确的时间显示目标名称\r\n            \r\n","\r\n            Determines what the real tools version is.\r\n            ":"\r\n            确定真正的工具版本是什么。\r\n            \r\n","\r\n            Disables truncation of Condition messages in Tasks/Targets via ExpanderOptions.Truncate.\r\n            ":"\r\n            通过ExpanderOptions.Truncate禁用任务/目标中条件消息的截断。\r\n            \r\n","\r\n            Synchronization object.  Currently this just prevents us from caching and uncaching at the\r\n            same time, causing a race condition.  This class is not made 100% threadsafe by the presence\r\n            and current usage of this lock.\r\n            ":"\r\n            同步对象。目前，这只是阻止我们在\r\n            同一时间，导致比赛状况。该课程不是通过存在的100％螺纹保护\r\n            当前使用此锁。\r\n            \r\n","\r\n            Convenience method to add a conditioned Output Item to this task. \r\n            Adds after the last child. \r\n            ":"\r\n            便利方法将条件输出项目添加到此任务中。\r\n            在最后一个孩子之后添加。\r\n            \r\n","\r\n            Location of the removeMetadata attribute, if any\r\n            ":"\r\n            removeMetAdata属性的位置，如果有的话\r\n            \r\n","If the string should be trimmed before being unescaped.":"如果在被拆除之前应修剪弦。\r\n","\r\n            Prepare the stack of transforms that will be executed on a given set of items\r\n            ":"\r\n            准备将在给定项目集上执行的转换堆栈\r\n            \r\n","\r\n            Flag indicating we are in an MSBuild callback\r\n            ":"\r\n            指示我们在MSBUILD回调中的标志\r\n            \r\n","\r\n            Inputs to and outputs of this function are all escaped.\r\n            ":"\r\n            该功能的输入和输出均已逃脱。\r\n            \r\n","\r\n            Short name of the current assembly - to distinguish statics when this type is shared into different assemblies\r\n            ":"\r\n            当前组件的简短名称 - 当这种类型共享到不同的组件中时，以区分静态\r\n            \r\n","\r\n            If set, the BuildManager will query all\r\n            incoming ":"\r\n            如果设置，buildmanager将查询全部\r\n            传入\r\n","\r\n            Create an instance of the task to be used.\r\n            The task factory logging host will log messages in the context of the task.\r\n            ":"\r\n            创建要使用的任务的实例。\r\n            任务工厂记录主机将在任务上下文中记录消息。\r\n            \r\n","A string containing the default value.":"包含默认值的字符串。\r\n","\r\n            Translate the project instance to or from a stream.\r\n            Only translates global properties, properties, items, and mutability.\r\n            ":"\r\n            将项目实例转换为或从流。\r\n            仅翻译全局属性，属性，项目和突变性。\r\n            \r\n","\r\n            If we haven't yet been initialized, we register for design time events and initialize the logger we are holding.\r\n            If we are in design-time mode\r\n            ":"\r\n            如果我们尚未初始化，我们会注册设计时间事件并初始化我们持有的记录器。\r\n            如果我们处于设计时间模式\r\n            \r\n","\r\n            Parse a ProjectChooseElement\r\n            ":"\r\n            解析projectChooselement\r\n            \r\n","\r\n            Cached value for MaxPath.\r\n            ":"\r\n            MaxPath的缓存值。\r\n            \r\n","The configuration metadata to match":"匹配的配置元数据\r\n","\r\n            Log that a target has started\r\n            ":"\r\n            记录目标已经开始\r\n            \r\n","\r\n            Convert the UsingTaskParameterGroupElement into a list of parameter names and UsingTaskParameters\r\n            ":"\r\n            将使用的tustaskParameterGroupelement转换为参数名称列表和使用TaskParameters\r\n            \r\n","\r\n            Registers for all of the events on the specified event source.\r\n            ":"\r\n            注册指定事件源上的所有事件。\r\n            \r\n"," functionality doesn't have to be invoked if no concatenation\r\n            takes place.\r\n            ":" 如果没有串联，则不必调用功能\r\n            发生。\r\n            \r\n","The base lookup for this target.":"该目标的基本查找。\r\n","Current project":"当前的项目\r\n","\r\n             Get a deferred target started event based on a given event context\r\n            ":"\r\n             根据给定的事件上下文获得延期延期目标开始事件\r\n            \r\n","\r\n            TransformFunction constructor\r\n            ":"\r\n            转换功能构造函数\r\n            \r\n","\r\n            Location of the \"Condition\" attribute on this element, if any.\r\n            If there is no such attribute, returns the location of the element,\r\n            in lieu of the default value it uses for the attribute.\r\n            ":"\r\n            此元素上的“条件”属性的位置（如果有）。\r\n            如果没有此类属性，请返回元素的位置，\r\n            代替用于属性的默认值。\r\n            \r\n","\r\n            Tracks an assortment of evaluation elements in a stack-like fashion, keeping inclusive and exclusive times for each of them.\r\n            ":"\r\n            以类似堆栈的方式跟踪各种评估元素，为每个评估元素保留包容性和独家时间。\r\n            \r\n","\r\n            Types of locals relevant to the item definition pass\r\n            ":"\r\n            与项目定义相关的当地人类型\r\n            \r\n","\r\n            Set metadata\r\n            ":"\r\n            设置元数据\r\n            \r\n","\r\n            Handler for ProjectFinished events.\r\n            ":"\r\n            项目结构事件的处理程序。\r\n            \r\n","\r\n            Returns the results node for the global configuration.\r\n            ":"\r\n            返回全局配置的结果节点。\r\n            \r\n","\r\n            Gets or sets the TaskParameter value. \r\n            Returns empty string if it is not present.\r\n            ":"\r\n            获取或设置任务参数值。\r\n            如果不存在，则返回空字符串。\r\n            \r\n","\r\n            The name of the environment variable that was read.\r\n            ":"\r\n            读取的环境变量的名称。\r\n            \r\n","\r\n            Location of the AfterTargets attribute\r\n            ":"\r\n            余后属性属性的位置\r\n            \r\n","\r\n            Gets the error code (if any) associated with the exception message.\r\n            ":"\r\n            获取与异常消息关联的错误代码（如果有）。\r\n            \r\n","\r\n            Appends array of ITaskItem specs as file names, quoting them if necessary, delimited by a delimiter.\r\n            This method appends a space to the command line (if it's not currently empty) before the file names.\r\n            ":"\r\n            将itaskItem规格的数组附加为文件名，在必要时引用它们，由定界符界定。\r\n            此方法在文件名之前将空间附加到命令行（如果当前不是空）。\r\n            \r\n","\r\n            Determines if the specified file is an empty XML file meaning it has no contents, contains only whitespace, or\r\n            only an XML declaration.  If the file does not exist, it is not considered empty.\r\n            ":"\r\n            确定指定的文件是空的XML文件，这意味着它没有内容，仅包含whitespace或\r\n            只有XML声明。如果该文件不存在，则不认为该文件为空。\r\n            \r\n","\r\n            Apply the verbosity value\r\n            ":"\r\n            应用详细价值\r\n            \r\n","\r\n            Gets or sets the environment properties.\r\n            ":"\r\n            获取或设置环境属性。\r\n            \r\n","\r\n            Project that this property lives in.\r\n            ProjectProperty's always live in a project.\r\n            Used to evaluate any updates.\r\n            ":"\r\n            预测该财产所居住的。\r\n            ProjectProperty总是生活在一个项目中。\r\n            用于评估任何更新。\r\n            \r\n","\r\n            Figure out whether there are any XML tags, other than comment tags,\r\n            in the string.\r\n            ":"\r\n            弄清楚除了注释标签以外，是否有任何XML标签，\r\n            在字符串中。\r\n            \r\n","\r\n            Array of equals-separated pairs of environment\r\n            variables that should be passed to the spawned executable,\r\n            in addition to (or selectively overriding) the regular environment block.\r\n            ":"\r\n            一系列平等分离的环境\r\n            应该传递给催生的可执行文件的变量，\r\n            除了（或选择性地覆盖）常规环境块。\r\n            \r\n","\r\n            Make all members virtual but not abstract, ensuring that implementations can override them and external implementations\r\n            won't break when the class is extended with new members. This base implementation should be throwing ":"\r\n            使所有成员虚拟但不是抽象的，以确保实现可以覆盖它们和外部实现\r\n            当课程与新成员扩展时不会破裂。这个基本实施应该投掷\r\n","\r\n            Retrieves the request entry associated with this RequestBuilder.\r\n            ":"\r\n            检索与此RequestBuilder关联的请求条目。\r\n            \r\n","A list of batchable parameters":"批处理参数列表\r\n","\r\n            Sets the capacity of this dictionary to hold up 'capacity' entries without any further expansion of its backing storage\r\n            ":"\r\n            设置该词典的能力，以保持“容量”条目，而无需进一步扩展其备份存储\r\n            \r\n","\r\n            Advances the state of the plan by zeroing out the time spend on the config.\r\n            ":"\r\n            通过将花费在配置上的时间归零，从而提高了计划的状态。\r\n            \r\n","\r\n            Writes a detailed summary of the build state which includes information about the scheduling plan.\r\n            ":"\r\n            详细介绍了构建状态的详细摘要，其中包括有关调度计划的信息。\r\n            \r\n","\r\n            Should evaluation events include generated metaprojects?\r\n            ":"\r\n            评估事件是否应该包括生成的元标记？\r\n            \r\n","\r\n            The item name\r\n            ":"\r\n            项目名称\r\n            \r\n","\r\n            Retrieves the item-specs of all items in the given item vector collection.\r\n            ":"\r\n            检索给定项目向量集合中所有项目的项目规格。\r\n            \r\n","The item set":"项目集\r\n","\r\n            Evaluate the task body of the using task\r\n            ":"\r\n            评估使用任务的任务主体\r\n            \r\n"," to use for loading SDK resolvers.":" 用于加载SDK解析器。\r\n","\r\n            The build event context of this request\r\n            ":"\r\n            此请求的构建事件上下文\r\n            \r\n","\r\n            Constructor to allow timestamp to be set\r\n            ":"\r\n            允许设置时间戳的构造函数\r\n            \r\n","\r\n            Cache the set of extension Sdk references for a particular combination of inputs.\r\n            ":"缓存特定输入组合的扩展SDK引用集。\r\n            \r\n","\r\n            Emits the module into the current appdomain.\r\n            This could be improved to use another appdomain so that all\r\n            the types could be unloaded. All locals would have to be \r\n            marshalable in this case.\r\n            ":"\r\n            将模块排放到当前的AppDomain中。\r\n            可以改进使用另一个应用程序，以便所有人\r\n            这些类型可以卸载。所有当地人都必须是\r\n            在这种情况下可安排。\r\n            \r\n","Hashtable of item metadata values: null indicates no batching is occurring":"项目元数据值的哈希表：null表示没有发生批处理\r\n","BuildEvent to log":"buildEvent符合日志\r\n","\r\n            Marks the request as being blocked by another request which is currently building a target whose results we need to proceed.\r\n            ":"\r\n            将请求标记为被另一个请求所阻止的，该请求当前正在构建一个目标，我们需要继续进行其结果。\r\n            \r\n","Name of the resource string.":"资源字符串的名称。\r\n","\r\n            Results Cache\r\n            ":"\r\n            结果缓存\r\n            \r\n","\r\n            The properties defined by the subtoolset.\r\n            ":"\r\n            子管盘定义的属性。\r\n            \r\n","\r\n            Structure that holds both project and entrypoint keys\r\n            ":"\r\n            既有项目键和入口点键的结构\r\n            \r\n","\r\n            Creates a new mutable collection.\r\n            ":"\r\n            创建一个新的可变收藏。\r\n            \r\n","\r\n            Implementation of IValued\r\n            ":"\r\n            实施IVARED\r\n            \r\n","The source of the property.":"属性的来源。\r\n","\r\n            A list of targets to build.  This is a required parameter.  If you want to build the \r\n            default targets, use the ":"\r\n            构建目标列表。这是一个必需的参数。如果您想构建\r\n            默认目标，使用\r\n","\r\n            Don't use this function. Use ExpensiveConvertToString\r\n            ":"\r\n            不要使用此功能。使用ExpensiveConvertTostring\r\n            \r\n","\r\n            Starts debugger worker thread immediately, if debugging is enabled.\r\n            This must not be called by a static constructor, as the \r\n            time at which it is called will then be undefined, and\r\n            the debugging environment variable might not have had a \r\n            chance to be set.\r\n            ":"如果启用调试，请立即启动调试器工作线程。\r\n            静态构造函数不得将其称为\r\n            然后将其称为的时间将不确定，并且\r\n            调试环境变量可能没有\r\n            有机会设置。\r\n            \r\n","\r\n            Requests that the configuration be cached to disk.\r\n            ":"\r\n            请求将配置缓存到磁盘。\r\n            \r\n","\r\n            Use the default location or locations.\r\n            ":"\r\n            使用默认位置或位置。\r\n            \r\n"," \r\n            This field is optional and is set to ":" \r\n            该字段是可选的，设置为\r\n","\r\n            Produce the items to operate on. For example, create new ones or select existing ones\r\n            ":"\r\n            生产要运行的项目。例如，创建新的或选择现有的新产品\r\n            \r\n","\r\n            If MSBUILDCUSTOMSCHEDULER is set, contains the requested scheduling algorithm\r\n            ":"\r\n            如果设置了msbuildcustomscheduler，则包含请求的调度算法\r\n            \r\n","\r\n            The set of available static methods.\r\n            NOTE: Do not allow methods here that could do \"bad\" things under any circumstances.\r\n            These must be completely benign operations, as they run during project load, which must be safe in VS.\r\n            Key = Type or Type::Method, Value = AssemblyQualifiedTypeName (where null = mscorlib)\r\n            ":"\r\n            一组可用的静态方法。\r\n            注意：在任何情况下，都不允许在这里可以做“不良”事情的方法。\r\n            这些必须完全是良性操作，因为它们在项目负载期间运行，这必须在VS中安全。\r\n            key = type或type :: method，value = assemblyQualifyTypename（其中null = mscorlib）\r\n            \r\n","\r\n            This is the packet which is sent in response to a build configuration ID request.  When the node generates a new configuration which it has\r\n            never seen before, it gives that configuration a temporary, \"unresolved\" configuration id.  The node then asks the Build Request Manager\r\n            for the \"resolved\" configuration id, which is global to all nodes in the system.  This packet maps the unresolved to the resolved\r\n            configuration id.  Once this packet is received, the node engine can then continue processing requests associated with the configuration.\r\n            ":"\r\n            这是针对构建配置ID请求发送的数据包。当节点生成具有的新配置时\r\n            从未见过，它使该配置为临时“未解决”配置ID。然后该节点询问构建请求管理器\r\n            对于“已解决”配置ID，该配置ID是系统中所有节点的全局。这个数据包将未解决的映射到已解决的\r\n            配置ID。收到此数据包后，节点引擎可以继续处理与配置关联的请求。\r\n            \r\n","\r\n            Creates an instance of the PropertyReassignmentEventArgs class.\r\n            ":"创建一个属性YEREASSIGNMENTEMTEVENTARGS类的实例。\r\n            \r\n","\r\n            Element representing an individual API contract\r\n            ":"\r\n            代表单个API合同的元素\r\n            \r\n","\r\n            Constructor over a Project.\r\n            ":"\r\n            项目的构造函数。\r\n            \r\n","\r\n            Gets or sets the ItemType value. \r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"\r\n            获取或设置项目类型值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n"," property to display the help context of the specified \r\n            help file. This field is optional. This\r\n            form of specifying the help page for a property takes lower precedence than both ":" 显示指定的帮助上下文的属性\r\n            帮助文件。该字段是可选的。这个\r\n            指定财产的帮助页的形式比两者都低的优先级\r\n","\r\n            Determines if the target needs to be built/rebuilt/skipped if its inputs and outputs can be correlated.\r\n            ":"\r\n            确定目标是否需要建立/重建/跳过，如果其输入和输出可以关联。\r\n            \r\n","\r\n            Additional constructor to make unit testing the TaskRegistry support easier\r\n            ":"\r\n            其他构造函数，使单元测试任务指导支持更轻松\r\n            \r\n","\r\n            This method forms a configuration request from an unresolved configuration and posts it to the\r\n            Build Manager.\r\n            ":"\r\n            此方法构成了来自未解决配置的配置请求，并将其发布到\r\n            构建经理。\r\n            \r\n","\r\n            Returns the evaluated, escaped value of the provided item's include.\r\n            ":"\r\n            返回所评估项目的评估，逃脱的价值。\r\n            \r\n","\r\n            Provides an ElementLocation for this attribute.\r\n            ":"\r\n            为此属性提供了元素location。\r\n            \r\n","\r\n            Gets a ProjectRootElement representing an MSBuild file.\r\n            Path provided must be a canonicalized full path.\r\n            May throw InvalidProjectFileException or an IO-related exception.\r\n            ":"\r\n            获取代表MSBuild文件的ProjectRootelement。\r\n            提供的路径必须是规范化的完整路径。\r\n            可能会抛出无效的fileException或与IO相关的异常。\r\n            \r\n","\r\n            Directory enumeration could not complete due to denied access to the search directory or a file inside.\r\n            ":"\r\n            目录枚举由于拒绝访问搜索目录或内部文件而无法完成。\r\n            \r\n","\r\n            Properties in the project. This is a dictionary of name, value pairs.\r\n            ":"\r\n            项目中的属性。这是名称，价值对的字典。\r\n            \r\n","\r\n            Registers an evaluated using task tag for future\r\n            consultation\r\n            ":"\r\n            使用任务标签评估的未来评估标签\r\n            咨询\r\n            \r\n","\r\n            Pretty prints the aggregated results and saves it to disk\r\n            ":"\r\n            漂亮打印汇总结果并将其保存到磁盘\r\n            \r\n","\r\n            Private constructor for serialization.\r\n            ":"\r\n            序列化的私人构造函数。\r\n            \r\n","\r\n            Returns true if there is any in process host object registered for this project file.\r\n            ":"\r\n            如果在此项目文件中注册了Process主机对象中的任何内容，则返回true。\r\n            \r\n","\r\n            Location of the toolsversion attribute, if any\r\n            ":"\r\n            ToolsVersion属性的位置，如果有的话\r\n            \r\n","\r\n            Generate the list of reference assembly paths for well known .net framework versions\r\n            ":"\r\n            生成众所周知的.NET框架版本的参考组件路径列表\r\n            \r\n","\r\n            Wraps a table of metadata values in which keys\r\n            may be qualified (\"itemtype.name\") or unqualified (\"name\").\r\n            ":"\r\n            包装元数据值表\r\n            可以有资格（“ itemType.name”）或不合格（“名称”）。\r\n            \r\n","Indicates whether or not the resolver is running in Visual Studio.":"指示解析器是否在Visual Studio中运行。\r\n","\r\n            Given a subexpression, finds referenced item names and inserts them into the table\r\n            as K=Name, V=String.Empty.\r\n            ":"\r\n            给定子表达，找到引用的项目名称并将其插入表中\r\n            as k = name，v = string.empty。\r\n            \r\n","The array length is a power of 2.":"阵列长度为2。\r\n","The content folder name under SDK path":"SDK路径下的内容文件夹名称\r\n"," objects attached to properties.\r\n            ":" 附在属性上的对象。\r\n            \r\n","\r\n            The target on which we are blocking\r\n            ":"\r\n            我们要阻止的目标\r\n            \r\n","\r\n            Gets the max path limit of the current OS.\r\n            ":"\r\n            获取当前OS的最大路径限制。\r\n            \r\n","\r\n            0-based index of next entry in chain: -1 means end of chain\r\n            also encodes whether this entry _itself_ is part of the free list by changing sign and subtracting 3,\r\n            so -2 means end of free list, -3 means index 0 but on free list, -4 means index 1 but on free list, etc.\r\n            ":"\r\n            链中的下一个条目的0基索引：-1表示链的末端\r\n            还编码此条目是否是通过更改标志和减法3的免费列表的一部分\r\n            因此-2表示免费列表的结尾，-3表示索引0，但在免费列表中，-4表示索引1，但在免费列表中，等等。\r\n            \r\n"," if the location's value remained\r\n            the same because the last invocation of ":" 如果位置的价值保持\r\n            相同，因为最后一次调用\r\n","\r\n            Gets the exception message including the affected project file (if any).\r\n            ":"\r\n            获取包括受影响的项目文件的异常消息（如果有）。\r\n            \r\n","\r\n            We are not blocked at all.\r\n            ":"\r\n            我们根本没有被阻止。\r\n            \r\n","\r\n            The ID of the evaluation that produced this ProjectInstance.\r\n            \r\n            See ":"\r\n            产生该项目的评估的ID。\r\n            \r\n            看\r\n","\r\n            Override Save to verify file was not loaded as readonly\r\n            ":"\r\n            覆盖保存以验证文件未加载为ROADONLY\r\n            \r\n","\r\n            Continues building a request which was previously waiting for a resource grant.\r\n            ":"\r\n            继续建立一个以前正在等待资源赠款的请求。\r\n            \r\n","\r\n            The large string Mru list.\r\n            ":"\r\n            大字符串MRU列表。\r\n            \r\n","The type to reflect over to get the reflection propertyinfo later.":"稍后将反思以获取反射属性的类型。\r\n","\r\n            Pretty prints a profiled result to a variety of formats\r\n            ":"\r\n            漂亮将剖面的结果打印为各种格式\r\n            \r\n","\r\n            A possibly-recoverable exception wrapping a failed native call. The ":"\r\n            可能会恢复的异常包装失败的本机呼叫。这\r\n","\r\n            Shortcut to avoid calling into binding if we recognize some most common constructors.\r\n            Analogous to TryExecuteWellKnownFunction but guaranteed to not throw.\r\n            ":"\r\n            快捷方式以避免呼吁绑定，如果我们识别一些最常见的构造函数。\r\n            类似于Tryexecutewellnofennknownnoction，但保证不会投掷。\r\n            \r\n","\r\n            A functor that returns the value of the metadata in the match\r\n            that is on the item it was created with.\r\n            ":"\r\n            返回比赛中元数据值的函子\r\n            那是在它创建的项目上。\r\n            \r\n","\r\n            Retrieves the target.\r\n            ":"\r\n            检索目标。\r\n            \r\n","Tools version to evaluate with. May be null.":"可以评估的工具版本。可能是无效的。\r\n","\r\n            The id of the evaluation\r\n            ":"\r\n            评估的ID\r\n            \r\n","\r\n            Skip the project if there is no file on disk.\r\n            ":"\r\n            如果磁盘上没有文件，则跳过项目。\r\n            \r\n","\r\n            The expression that this function is part of\r\n            ":"\r\n            此功能是一部分的表达\r\n            \r\n"," that includes ONLY the\r\n            explicitly-requested properties, items, and metadata.\r\n            ":" 仅包括\r\n            明确要求的属性，项目和元数据。\r\n            \r\n","\r\n            Initializes and executes the task.\r\n            ":"\r\n            初始化并执行任务。\r\n            \r\n","\r\n            Registry location for storing tools version dependent data for msbuild\r\n            ":"\r\n            存储工具版本依赖数据的注册表位置\r\n            \r\n","\r\n            Set by construction.\r\n            ":"\r\n            通过施工设置。\r\n            \r\n","\r\n            The length of the separator\r\n            ":"\r\n            分离器的长度\r\n            \r\n","\r\n            Cache file existence for the entire process\r\n            ":"\r\n            整个过程的缓存文件存在\r\n            \r\n","\r\n            Handler for Custom events.\r\n            ":"\r\n            定制活动的处理程序。\r\n            \r\n","\r\n            Gets the singleton instance of the Build Manager.\r\n            ":"\r\n            获取Build Manager的Singleton实例。\r\n            \r\n","\r\n            Inserts the provided element as the last child.\r\n            Throws if the parent is not itself parented.\r\n            Throws if the node to add is already parented.\r\n            Throws if the node to add was created from a different project than this node.\r\n            ":"\r\n            将提供的元素插入最后一个孩子。\r\n            如果父母本身没有父母的父母，则投掷。\r\n            如果要添加的节点已经归父母，请投掷。\r\n            如果要添加的节点是由与此节点不同的项目创建的。\r\n            \r\n","\r\n            Extension method to write a series of bytes to a stream\r\n            ":"\r\n            扩展方法将一系列字节写入流\r\n            \r\n","\r\n            Route the event to the correct location, this is mostly used by the logging thread since it may have a buildevent or a tuple.\r\n            ":"\r\n            将事件路由到正确的位置，这主要由记录线程使用，因为它可能具有buildEvent或元组。\r\n            \r\n","\r\n            Associate a (nodeID and project_context_id) to a target framework.\r\n            ":"\r\n            将A（Nodeid和Project_Context_ID）关联到目标框架。\r\n            \r\n","\r\n            Get the exact physical core count on Windows\r\n            Useful for getting the exact core count in 32 bits processes,\r\n            as Environment.ProcessorCount has a 32-core limit in that case. \r\n            https://github.com/dotnet/runtime/blob/221ad5b728f93489655df290c1ea52956ad8f51c/src/libraries/System.Runtime.Extensions/src/System/Environment.Windows.cs#L171-L210\r\n            ":"\r\n            在Windows上获取确切的物理核心计数\r\n            对于在32位进程中获得确切的核心计数有用，\r\n            在这种情况下，AS Environmencon.ProcessorCount具有32核限制。\r\n            https://github.com/dotnet/runtime/blob/221ad5b728f93489655df290c1ea52956ad8f51c/src/libraries/System.Runtime.Extensions/src/System/Environment.Windows.cs#L171-L210\r\n            \r\n","name of the element":"元素的名称\r\n","Targeted platform version to find SDKs for":"针对性的平台版本可以找到SDK\r\n","\r\n             Will Log a build Event. Will also take into account OnlyLogCriticalEvents when determining\r\n             if to drop the event or to log it.\r\n            \r\n             Only the following events will be logged if OnlyLogCriticalEvents is true:\r\n             CustomEventArgs\r\n             BuildErrorEventArgs\r\n             BuildWarningEventArgs\r\n             ":"\r\n             将记录构建事件。在确定时也将仅考虑唯一的批判性\r\n             如果要放弃事件或记录事件。\r\n            \r\n             只有仅logcriticalingevents为true，才会记录以下事件：\r\n             Customeventargs\r\n             Builderroreventargs\r\n             BuildWarningEventargs\r\n             \r\n","\r\n            Sets a new metadata value on the ItemDefinition.\r\n            ":"\r\n            在ItemDefinition上设置新的元数据值。\r\n            \r\n","\r\n            The plugin determined that it does not support a certain build request. MSBuild will build the request.\r\n            For example, a plugin may not support projects with a certain extension, certain properties, or certain called targets.\r\n            ":"\r\n            插件确定它不支持某个构建请求。 MSBUILD将构建请求。\r\n            例如，插件不得支持具有一定扩展，某些属性或某些称为目标的项目。\r\n            \r\n","\r\n            ProductFamilyName metadata name and manifest attribute\r\n            ":"\r\n            ProductFamilyName元数据名称和明显属性\r\n            \r\n","\r\n            metadata hash\r\n            ":"\r\n            元数据哈希\r\n            \r\n","\r\n            Properties to draw on for expansion.\r\n            ":"\r\n            用于扩展的属性。\r\n            \r\n","\r\n            Mapping of submission IDs to their first project started events.\r\n            ":"\r\n            将提交ID的映射到其第一个项目开始活动。\r\n            \r\n","The target names whose results we will take from the existing results, if they exist.":"如果存在的目标名称，我们将从现有结果（如果存在）中获取其结果。\r\n","\r\n            Handle for a volume iteration as returned by WindowsNative.FindFirstVolumeW />\r\n            ":"\r\n            处理Windowsnative.findfirstvolumew />返回的音量迭代\r\n            \r\n","The mode in which to execute tasks.":"执行任务的模式。\r\n","\r\n            The display version of the file in which the Engine assembly lies.\r\n            ":"\r\n            引擎组件所在的文件的显示版本。\r\n            \r\n","The initial properties of the project":"项目的初始属性\r\n","\r\n            The build-global properties.\r\n            ":"\r\n            构建全球属性。\r\n            \r\n","\r\n            Function for serialization.\r\n            ":"\r\n            序列化功能。\r\n            \r\n","\r\n            Returns true if these two identities match \"fuzzily\" -- if the names pass a partial type name \r\n            match and the task identity parameters would constitute a valid merge (e.g. \"don't care\" and \r\n            something explicit).  Otherwise returns false. \r\n            ":"\r\n            如果这两个身份匹配“模糊性”，则返回true  - 如果名称传递了部分类型名称\r\n            匹配和任务身份参数将构成有效合并（例如“不在乎”和\r\n            明确的东西）。否则返回false。\r\n            \r\n","\r\n            Called only by the parser to tell the ProjectRootElement its backing XmlElement and its own parent project (itself)\r\n            This can't be done during construction, as it hasn't loaded the document at that point and it doesn't have a 'this' pointer either.\r\n            ":"\r\n            仅由解析器称呼ProjectRootelement的支持XMlelement及其亲本项目（本身）\r\n            这在构造过程中不能完成，因为它当时还没有加载文档，并且也没有“此”指针。\r\n            \r\n","Type of keys":"钥匙类型\r\n","\r\n            Target platform identifier\r\n            ":"\r\n            目标平台标识符\r\n            \r\n","\r\n            Create an instance of the task to be used.\r\n            ":"\r\n            创建要使用的任务的实例。\r\n            \r\n","\r\n            Returns the config id for the config specified by the path, if any.\r\n            ":"\r\n            返回路径指定的配置的配置ID（如果有）。\r\n            \r\n","String which is matched against the pattern.":"与模式匹配的字符串。\r\n","The matching configuration if any, null otherwise.":"匹配配置如果有的话，则否则为空。\r\n"," if applicable to this import element.\r\n            ":" 如果适用于此导入元素。\r\n            \r\n","The file system abstraction to use that implements file system operations":"文件系统抽象用于使用该文件系统操作\r\n","The project file name":"项目文件名\r\n","\r\n            Visual separator for projects. Line length was picked arbitrarily.\r\n            ":"\r\n            项目的视觉分离器。任意选择线长度。\r\n            \r\n","\r\n            Evaluates an ImportGroup element.\r\n            If the condition is true, evaluates the contained imports and continues the pass.\r\n            ":"\r\n            评估ImportGroup元素。\r\n            如果条件是正确的，请评估包含的导入并继续通过。\r\n            \r\n","\r\n            Returns the list of currently active targets.\r\n            ":"\r\n            返回当前活动目标的列表。\r\n            \r\n","\r\n            Registry of usingtasks, for build\r\n            ":"\r\n            使用任务注册表，用于构建\r\n            \r\n","\r\n            Gets the name of the factory.\r\n            ":"\r\n            获取工厂的名字。\r\n            \r\n","\r\n            Create an event source to which the distributed (filter loggers) can attach to and listen\r\n            for logging events. This event source will consume events which are logged against\r\n            the logging service and raise them on itself.\r\n            ":"\r\n            创建一个事件来源\r\n            用于伐木事件。此事件源将消费已记录的事件\r\n            伐木服务并自身提高。\r\n            \r\n","\r\n            Has the record been shutdown yet.\r\n            ":"\r\n            记录是否已关闭。\r\n            \r\n","\r\n            Clone the task item and all metadata to create a snapshot\r\n            ":"\r\n            克隆任务项和所有元数据以创建快照\r\n            \r\n","\r\n            Enum describing the type of targets we are pushing on the stack.\r\n            ":"\r\n            枚举描述我们在堆栈上推动目标的类型。\r\n            \r\n","Project which is being processed":"正在处理的项目\r\n","The node to which the data packet should be sent.":"应该发送数据包的节点。\r\n","\r\n            The engine has no active or waiting build requests.\r\n            ":"\r\n            该引擎没有主动或等待的构建请求。\r\n            \r\n","\r\n            PRE cache\r\n            ":"前缓存\r\n            \r\n","\r\n            Whether ReevaluateIfNecessary is temporarily disabled.\r\n            This is useful when the host expects to make a number of reads and writes \r\n            to the project, and wants to temporarily sacrifice correctness for performance.\r\n            ":"\r\n            重新评估不必要的是暂时禁用。\r\n            当主机期望进行多个读取和写入时，这很有用\r\n            到该项目，并希望暂时牺牲绩效的正确性。\r\n            \r\n","\r\n            Logging services is used as a helper class to assist logging messages in getting to the correct loggers.\r\n            ":"\r\n            记录服务被用作帮助伐木消息以获取正确的记录仪。\r\n            \r\n","\r\n            The node configuration to use for spawning new nodes.\r\n            ":"用于产卵新节点的节点配置。\r\n            \r\n","\r\n            CopyRedistToSubDirectory metadata name and manifest attribute\r\n            ":"\r\n            copyredisttosubdirectory元数据名称和清单属性\r\n            \r\n","\r\n            Contains a dictionary of loggerId's and the sink which the logger (of the given Id) is expecting to consume its messages\r\n            ":"\r\n            包含Loggerid的字典和（给定ID的Logger）期望消耗其消息\r\n            \r\n","\r\n            Log that a target has finished\r\n            ":"\r\n            记录目标已经完成\r\n            \r\n","\r\n            The argument for a property initial value set event.\r\n            ":"\r\n            属性初始值集事件的参数。\r\n            \r\n","\r\n            This method is responsible for evaluating whether we have enough information to make the request of the Build Manager,\r\n            or if we need to obtain additional configuration information.  It then issues either configuration\r\n            requests or build requests, or both as needed.\r\n            ":"\r\n            此方法负责评估我们是否有足够的信息来提出构建经理的请求，\r\n            或者，如果我们需要获取其他配置信息。然后发出任何配置\r\n            请求或构建请求，或两者兼而有之。\r\n            \r\n","\r\n            Location of the \"MSBuildArchitecture\" attribute on this element, if any.\r\n            If there is no such attribute, returns null;\r\n            ":"\r\n            此元素上的“ msbuildarchitecture”属性的位置（如果有）。\r\n            如果没有这样的属性，请返回null；\r\n            \r\n","\r\n            Get enumerable over all the children, starting from the last\r\n            ":"\r\n            从最后一开始就枚举所有孩子\r\n            \r\n","\r\n            Get a string from the table, passed in as\r\n            an extent in a char array.\r\n            ":"\r\n            从桌子上获取一个弦，将其传递给\r\n            char阵列中的一个程度。\r\n            \r\n","A link pointing to more information about the error.":"链接指向有关错误的更多信息。\r\n","\r\n                Constructs a graph starting from the given project file, evaluating with the global project collection and no\r\n                global properties.\r\n            ":"\r\n                从给定的项目文件开始构造图形，用全局项目集合评估\r\n                全球属性。\r\n            \r\n","\r\n            Constructor for when we only know the file and nothing else.\r\n            This is the case when we are creating a new item, for example, and it has\r\n            not been evaluated from some XML.\r\n            ":"\r\n            构造函数是因为我们只知道文件而别无其他。\r\n            例如，当我们创建一个新项目时，它就是这种情况\r\n            未从某些XML评估。\r\n            \r\n","Path to the appropriate Windows SDK file":"通往适当Windows SDK文件的路径\r\n","\r\n            Creates a view of an evaluated project's XML as if it had all been loaded from \r\n            a single file, instead of being assembled by pulling in imported files as it actually was.\r\n            ":"\r\n            创建评估项目的XML的视图，就好像已从\r\n            一个文件，而不是通过按照实际情况来提取导入的文件来组装。\r\n            \r\n","The translator to use for the elements in the array":"用于数组中元素的翻译器\r\n","\r\n            This attribute is used by task writers to designate certain task parameters as \"outputs\". The build engine will only allow\r\n            task parameters (i.e. the task class' .NET properties) that are marked with this attribute to output data from a task. Project\r\n            authors can only use parameters marked with this attribute in a task's <Output> tag. All task parameters, including those\r\n            marked with this attribute, may be treated as inputs to a task by the build engine.\r\n            ":"\r\n            任务作者使用此属性将某些任务参数指定为“输出”。构建引擎只会允许\r\n            任务参数（即任务类'.NET属性），该属性标记为从任务输出数据。项目\r\n            作者只能在任务的<uptount>标签中使用该属性标记的参数。所有任务参数，包括\r\n            用这种属性标记，可以将构建引擎视为任务的输入。\r\n            \r\n","\r\n            When an exception is raised in the logging thread, we do not want the application to terminate right away.\r\n            Whidbey and orcas msbuild have the logger exceptions occurring on the engine thread so that the host can\r\n            catch and deal with these exceptions as they may occur somewhat frequently due to user generated loggers.\r\n            This method will raise the exception on a delegate to which the engine is registered to. This delegate will\r\n            send the exception to the engine so that it can be raised on the engine thread.\r\n            ":"\r\n            当日志线程中提出异常时，我们不希望该应用程序立即终止。\r\n            Whidbey和Orcas Msbuild在发动机线程上存在记录器异常，以便主机可以\r\n            捕获并处理这些例外，因为它们可能由于用户生成的登录器而经常发生。\r\n            此方法将在注册发动机注册的代表上提出例外。这个代表将\r\n            将异常发送到发动机，以便可以在发动机线上升高。\r\n            \r\n"," is owned by this instance, false if it was passed by the caller.\r\n            ":" 该实例所有，如果呼叫者通过了错误，则为false。\r\n            \r\n","\r\n            Used to keep track of nodes that were added to the document from implicit imports which will be removed later.\r\n            At the time of adding this feature, cloning is buggy so it is easier to just edit the DOM in memory.\r\n            ":"\r\n            用于跟踪从隐式导入添加到文档的节点，这些节点稍后将被删除。\r\n            在添加此功能时，克隆是错误的，因此只编辑内存中的DOM更容易。\r\n            \r\n","\r\n            Reserved; must be NULL\r\n            ":"\r\n            预订的;必须为空\r\n            \r\n","\r\n            Line number\r\n            ":"\r\n            电话号码\r\n            \r\n","\r\n            The outer markup associated with this project element\r\n            ":"与此项目元素关联的外部标记\r\n            \r\n","\r\n                Glob which will be subtracted from the ":"\r\n                地球将从\r\n","\r\n            Location of the TaskFactory attribute, if any\r\n            ":"\r\n            TaskFactory属性的位置，如果有的话\r\n            \r\n","\r\n            The location of the build node executable.\r\n            ":"\r\n            构建节点可执行文件的位置。\r\n            \r\n","\r\n            Gets default global properties for all projects in this collection.\r\n            Dead copy.\r\n            ":"\r\n            获取此集合中所有项目的默认全局属性。\r\n            死副本。\r\n            \r\n","\r\n            Should this node be treated as an expansion of VisualStudioVersion, rather than\r\n            its literal meaning?\r\n            ":"\r\n            此节点是否应该被视为VisualStudioVersion的扩展，而不是\r\n            它的字面意思？\r\n            \r\n","\r\n            Expands an expression capture into a list of items\r\n            If the capture uses a separator, then all the items are concatenated into one string using that separator.\r\n            \r\n            Returns true if ExpanderOptions.BreakOnNotEmpty was passed, expression was going to be non-empty, and so it broke out early.\r\n            ":"\r\n            将表达式捕获扩展到项目列表中\r\n            如果捕获使用分离器，则使用该分隔器将所有项目串联成一个字符串。\r\n            \r\n            如果通过扩展，breakonnotempty通过，表达将是非空的，那么返回是正确的。\r\n            \r\n","The exclude specification, escaped.":"排除规格逃脱了。\r\n","\r\n             Register a remote host object for a particular task/target pair.\r\n             The remote host object require registered in Running Object Table(ROT) already.\r\n             Overwrites any existing host object.\r\n            \r\n             It's caller's responsibly:\r\n             To maintain the live cycle of the host object.\r\n             Register and unregister from ROT.\r\n             Ensure the host object has appropriate COM interface that can be used in task.\r\n             ":"\r\n             为特定任务/目标对注册远程主机对象。\r\n             远程主机对象已经需要在运行对象表（ROT）中注册。\r\n             覆盖任何现有的主机对象。\r\n            \r\n             这是呼叫者负责任的：\r\n             保持主机对象的实时周期。\r\n             注册并从腐烂中注册。\r\n             确保主机对象具有适当的COM接口，可以在任务中使用。\r\n             \r\n","\r\n            Traditional 3rd party SDK\r\n            ":"\r\n            传统的第三方SDK\r\n            \r\n",". This field is mandatory and culture invariant.\r\n            ":"。该领域是强制性的，文化不变。\r\n            \r\n","\r\n            Store interned strings, and also a ref count, one per document using them.\r\n            ":"\r\n            使用它们存储实习字符串，还有一个裁判计数，每个文档使用它们。\r\n            \r\n","String to indent.":"字符串到缩进。\r\n","\r\n            Shred metadata not contained inside of a transform.\r\n            ":"\r\n            切碎的元数据不包含在转换内部。\r\n            \r\n","\r\n            Call either the static method or the delegate. This is done purely for performance as the delegate is only required for ease of unit testing and since\r\n            the methods being called are static this will be a non 0 cost to use delegates vs the static methods directly.\r\n            ":"\r\n            调用静态方法或委托。这纯粹是为了性能而进行的，因为代表仅用于易于单位测试和\r\n            所谓的方法是静态的，这将是直接使用代表与静态方法的非0成本。\r\n            \r\n","\r\n            Split a QualifiedName into prefix and localname, w/o any checking.\r\n            (Used for XmlReader/XPathNavigator MoveTo(name) methods)\r\n            ":"\r\n            将合格名称分为前缀和localname，n o任何检查。\r\n            （用于XMLREADER/XPATHNAVIGATOR MOVETO（名称）方法）\r\n            \r\n","\r\n            The task factory logging host will log messages in the context of the task.\r\n            ":"\r\n            任务工厂记录主机将在任务上下文中记录消息。\r\n            \r\n","\r\n            Log a single environment variable that's about to be applied to the tool\r\n            ":"\r\n            记录即将应用于工具的单个环境变量\r\n            \r\n","\r\n            Unescape the string according to MSBuild's escaping rules\r\n            ":"\r\n            根据MSBUILD的逃避规则驱散字符串\r\n            \r\n","The local .tlog files.":"本地.tlog文件。\r\n","\r\n            ITaskItem should not return null if metadata is not present.\r\n            ":"\r\n            如果不存在元数据，则不应返回null。\r\n            \r\n","The registry view to examine.":"注册表的观点要检查。\r\n"," be set to true if the\r\n            object will retain any significant amount of data, as this gives MSBuild the most flexibility to \r\n            manage limited process memory resources.\r\n            ":" 如果是\r\n            对象将保留大量数据，因为这使MSBuild最大的灵活性\r\n            管理有限的过程内存资源。\r\n            \r\n",")\r\n            is ":"）\r\n            是\r\n","Version of the platform":"平台的版本\r\n","\r\n            The target successfully built.\r\n            ":"\r\n            目标成功构建。\r\n            \r\n","\r\n            The single dynamic module used.\r\n            ":"\r\n            使用的单个动态模块。\r\n            \r\n","\r\n            Logs an error with all registered loggers using the specified resource string.\r\n            ":"\r\n            使用指定的资源字符串与所有注册记录仪一起记录一个错误。\r\n            \r\n","\r\n             Adds a new target to the list of project started events which have been fired\r\n            ":"\r\n             在已解雇的项目启动事件列表中添加一个新目标\r\n            \r\n","The new metadata value.":"新的元数据值。\r\n","\r\n            Set an error flag on all projects in the call stack of a given event context\r\n            ":"\r\n            在给定事件上下文的呼叫堆栈中的所有项目上设置错误标志\r\n            \r\n","\r\n            The work unit was cancelled.\r\n            ":"\r\n            工作单位被取消。\r\n            \r\n","This collection is NOT thread-safe.":"该集合不是线程安全。\r\n","\r\n            Declares a project cache plugin and its configuration.\r\n            ":"声明项目缓存插件及其配置。\r\n            \r\n","\r\n            The constructor takes the result of the build and a list of the target outputs per project\r\n            ":"\r\n            构造函数获取构建的结果和每个项目的目标输出列表\r\n            \r\n","The unformatted (may contain {0}) reason for the dirty event.":"肮脏事件的未格式化（可能包含{0}）原因。\r\n","\r\n            Return values on the target. \r\n            ":"\r\n            返回目标上的值。\r\n            \r\n","\r\n            In this mode, the task engine only infers the task's outputs from its <Output> tags.\r\n            ":"\r\n            在此模式下，任务引擎仅从其<Output>标记推断任务的输出。\r\n            \r\n","\r\n            The result of calling NativeMethodsShared.GetLogicalCoreCount() unless overriden with MSBUILDCORELIMIT.\r\n            ":"\r\n            除非使用msbuildCoreLimit Overriden，否则调用NativeMethodSshared.getLogicalCorecount（）的结果。\r\n            \r\n","\r\n            This class is used for performing dependency analysis on targets to determine if they should be built/rebuilt/skipped.\r\n            ":"\r\n            此类用于对目标进行依赖性分析，以确定是否应该构建/重建/跳过。\r\n            \r\n","\r\n            Initialize an unparented ProjectTaskElement\r\n            ":"\r\n            初始化无与伦比的ProjectTaskelement\r\n            \r\n","\r\n            Sets the parent of this element if it is a valid parent,\r\n            otherwise throws.\r\n            ":"\r\n            如果该元素是有效的父，则设置此元素的父\r\n            否则投掷。\r\n            \r\n","The requested toolset.":"请求的工具集。\r\n",". Calling other instance members\r\n             (properties or methods) also counts as dereferencing ":"。调用其他实例成员\r\n             （属性或方法）也将其视为删除\r\n","A non-null (but possibly empty) enumerable of item metadata.":"一个非零（但可能是空的）项目元数据。\r\n","\r\n                Gets the target list to be executed for every project in the graph, given a particular target list for the entry\r\n                project.\r\n            ":"\r\n                获取图表中每个项目要执行的目标列表，给出了条目的特定目标列表\r\n                项目。\r\n            \r\n","\r\n            Retrieves any value we have in our metadata table for the metadata name and item type specified.\r\n            If no value is available, returns empty string.\r\n            If item type is null, it is ignored, otherwise it must match.\r\n            ":"检索我们在元数据表中为元数据名称和指定的项目类型中的任何值。\r\n            如果没有可用的值，请返回空字符串。\r\n            如果项目类型为null，则将忽略，否则必须匹配。\r\n            \r\n","\r\n            Arguments for the project evaluation started event.\r\n            ":"\r\n            项目评估的论点开始事件。\r\n            \r\n"," for this process.\r\n            ":" 对于此过程。\r\n            \r\n","\r\n            Get the name of the factory wrapped by the wrapper\r\n            ":"\r\n            获取包装纸包裹的工厂的名字\r\n            \r\n","The translator to use for the items in the list":"用于列表中项目的翻译器\r\n","\r\n            Returns, but does not remove, the top of the stack.\r\n            ":"\r\n            返回但不删除堆栈的顶部。\r\n            \r\n","\r\n            Returns the node provider type.\r\n            ":"\r\n            返回节点提供商类型。\r\n            \r\n","\r\n            Recomputes the task's \"ContinueOnError\" setting.\r\n            ":"\r\n            重新计算任务的“连续性”设置。\r\n            \r\n","\r\n            Given a submission ID, return the event being used to track when that submission is ready \r\n            to be executed on the legacy thread. \r\n            ":"\r\n            给定提交ID，返回用于跟踪该提交准备时的事件\r\n            要在旧线程上执行。\r\n            \r\n","\r\n            Posts a Break instruction to the island thread.\r\n            Called by debugger manager thread.\r\n            ":"\r\n            向岛线发布休息指示。\r\n            由Debugger Manager线程拨打。\r\n            \r\n","\r\n            This could be useful when implementing a breaking protocol change between projects or stubbing behavior \r\n            which may not make sense in all project types (e.g. Restore).\r\n            ":"\r\n            在项目之间实施破坏协议或固执行为时，这可能很有用\r\n            在所有项目类型（例如还原）中，这可能没有意义。\r\n            \r\n","\r\n            Store the path for the 64-bit MSBuild so that we don't have to keep re-calculating it.\r\n            ":"\r\n            存储64位MSBUILD的路径，以便我们不必继续重新计算它。\r\n            \r\n","\r\n            The exception, if any, generated while the build ran.\r\n            ":"\r\n            构建运行时产生的例外（如果有的话）。\r\n            \r\n","\r\n            Lock for the taskFactoryTypeLoader\r\n            ":"\r\n            锁定taskFactoryTypeloadoder\r\n            \r\n","\r\n            The time the current counter started.\r\n            ":"\r\n            当前计数器开始的时间。\r\n            \r\n","\r\n            Creates a copy of a dictionary and returns a read-only dictionary around the results.\r\n            ":"\r\n            创建词典的副本，并返回围绕结果的只读字典。\r\n            \r\n","\r\n            An event to signal for waiting threads when the ":"\r\n            一个事件发出信号，以指示等待线程\r\n","\r\n            Cached registry wrapper at root of the msbuild entries\r\n            ":"\r\n            MSBUILD条目的根部加速注册表包装器\r\n            \r\n","\r\n            The Target being built.  This will be null until the GetTargetInstance() is called, which\r\n            will cause us to attempt to resolve the actual project instance.  At that point\r\n            if the target doesn't exist, we will throw an InvalidProjectFileException.  We do this lazy\r\n            evaluation because the 'target doesn't exist' message is not supposed to be emitted until\r\n            the target is actually needed, as opposed to when it is specified, such as in an OnError\r\n            clause, DependsOnTargets or on the command-line.\r\n            ":"\r\n            构建目标。这将是无效的，直到称为getTargetInstance（）\r\n            将使我们尝试解决实际项目实例。在那时候\r\n            如果目标不存在，我们将投掷无效的fileException。我们做这个懒惰\r\n            评估是因为“目标不存在”，直到不应该发出\r\n            实际上需要该目标，而不是指定目标，例如在OnError中\r\n            子句，依赖词或命令行。\r\n            \r\n","\r\n            Gets and sets the value of the ExecuteTargets attribute.\r\n            ":"\r\n            获取并设置executetArgets属性的值。\r\n            \r\n","\r\n            This is the default state.  ":"\r\n            这是默认状态。\r\n","\r\n            A reflection-generated TaskPropertyInfo instance.\r\n            ":"\r\n            反射生成的taskpropertyinfo实例。\r\n            \r\n","The type of properties provided.":"提供的属性类型。\r\n","\r\n            Null if profiling is not turned on\r\n            ":"\r\n            如果未打开分析，则无效\r\n            \r\n","\r\n            Provides an enumerator over the set of sub-toolset names available to a particular\r\n            toolsversion\r\n            ":"\r\n            在可用的一组子量表名称上提供枚举器\r\n            工具库\r\n            \r\n"," so that command lines can be logged as\r\n            messages. Logging a command line is only relevant for tasks that wrap an\r\n            underlying executable/tool, or emulate a shell command. Tasks that have\r\n            no command line equivalent should not raise this extended message event.\r\n            ":" 因此，该命令行可以记录为\r\n            消息。记录命令行仅与包裹一个任务有关\r\n            基础可执行/工具，或模拟shell命令。具有的任务\r\n            没有命令行等效不得提出此扩展消息事件。\r\n            \r\n","String representation of time-span.":"时间跨度的字符串表示。\r\n","\r\n            Path to the file loaded, if any, otherwise null.\r\n            Easier to intercept and store than to derive it from the XmlDocument.BaseUri property.\r\n            ":"\r\n            通往加载文件（如果有）的路径，否则为空。\r\n            比从xmldocument.baseuri属性中得出的截距和存储更容易拦截和存储。\r\n            \r\n","\r\n            The next project ID to assign when a project evaluation started event is received.\r\n            ":"\r\n            收到项目评估开始事件时要分配的下一个项目ID。\r\n            \r\n","Warning codes to be logged as errors for the current project.":"警告代码将记录为当前项目的错误。\r\n","Pattern against which string is matched.":"与字符串匹配的模式。\r\n","\r\n             Certain item operations split the item element in multiple elements if the include\r\n             contains globs, references to items or properties, or multiple item values.\r\n            \r\n             The items operations that may expand item elements are:\r\n             - ":"\r\n             某些项目操作如果包括\r\n             包含地球仪，对项目或属性的引用或多个项目值。\r\n            \r\n             可能扩展项目元素的项目操作是：\r\n              - \r\n","\r\n            Log statistics about property functions which require reflection\r\n            ":"\r\n            关于需要反思的属性功能的日志统计信息\r\n            \r\n","An array of ProjectInstances.  The first instance is the traversal project, the remaining are the metaprojects for each project referenced in the solution.":"一系列ProjectInstances。第一个实例是遍历项目，其余是解决方案中引用的每个项目的元标记。\r\n","How important is the message, this will determine which verbosities the message will show up on. \r\n            The higher the importance the lower the verbosity needs to be for the message to be seen":"消息有多重要，这将确定消息将显示的哪些动词。\r\n            重要性越高，详细信息才能看到消息的重要性越低\r\n","\r\n            Default separator between configuration and platform in configuration\r\n            full names\r\n            ":"\r\n            在配置中配置和平台之间的默认分离器\r\n            全名\r\n            \r\n","The location of this property's reassignment.":"该物业重新分配的位置。\r\n","\r\n            Gets only locally load projects, excluding external\r\n            ":"\r\n            仅获取本地加载项目，不包括外部\r\n            \r\n","\r\n            Determines whether the given path has any property references.\r\n            ":"\r\n            确定给定路径是否具有任何属性参考。\r\n            \r\n","\r\n            Assumes the value is passed in unescaped. \r\n            ":"\r\n            假设该值以UNSCAPAD为单位传递。\r\n            \r\n","\r\n            Gets or sets the Exclude value. \r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty or null.\r\n            ":"\r\n            获取或设置排除值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空或null，则删除属性。\r\n            \r\n","\r\n            Constructor called by the Evaluator.\r\n            ":"\r\n            评估器调用的构造函数。\r\n            \r\n","\r\n            If this is true, then the ":"\r\n            如果这是真的，那么\r\n","\r\n            Class which represents the parameter information from the using task as a strongly typed class.\r\n            ":"\r\n            类代表来自使用任务的参数信息作为强键入类。\r\n            \r\n","The last index of a directory sequence.":"目录序列的最后一个索引。\r\n","\r\n            When this is true, instead of calling the engine once to build all the targets (for each project),\r\n            we would call the engine once per target (for each project).  The benefit of this is that\r\n            if one target fails, you can still continue with the remaining targets.\r\n            ":"\r\n            当这是真的时，而不是一次调用引擎来构建所有目标（每个项目），而是\r\n            我们将每个目标调用一次引擎（每个项目）。这样的好处是\r\n            如果一个目标失败，您仍然可以继续使用其余目标。\r\n            \r\n","The cancellation token used to cancel processing of targets.":"用于取消处理目标的取消令牌。\r\n","\r\n            Construct a lookup over specified items and properties.\r\n            ":"\r\n            在指定的项目和属性上构建查找。\r\n            \r\n","\r\n            The list of requests currently waiting to be submitted from RequestBuilders.\r\n            ":"\r\n            当前等待从请求构建者提交的请求列表。\r\n            \r\n","\r\n            Map of properties to their list of fall-back search paths\r\n            ":"属性的地图到他们的后退搜索路径列表\r\n            \r\n","\r\n            The in-proc node endpoint.\r\n            ":"\r\n            程序内节点端点。\r\n            \r\n","\r\n            Creates a ProjectItemDefinitionElement representing this instance.\r\n            ":"\r\n            创建代表此实例的ProjectItemDefinitionElement。\r\n            \r\n","The pipe stream representing the node.":"代表节点的管道流。\r\n","The exception which caused an unexpected shutdown, if any.":"导致意外关闭的例外（如果有）。\r\n","\r\n            Returns a map of MSBuildExtensionsPath* property names/kind to list of search paths\r\n            ":"\r\n            返回msbuildextensionspath的地图*属性名称/类型列表搜索路径列表\r\n            \r\n","\r\n            Location of the item type attribute, if any\r\n            ":"\r\n            项目类型属性的位置，如果有\r\n            \r\n","\r\n            This interface is used to forward events to another loggers\r\n            ":"\r\n            该界面用于将事件转发到另一个登录器\r\n            \r\n","\r\n            The length of the string in chars (not bytes).\r\n            ":"\r\n            字符串的长度（不是字节）。\r\n            \r\n","\r\n            Dumps the current state of the scheduler.\r\n            ":"\r\n            转储调度程序的当前状态。\r\n            \r\n","\r\n            Used for the purposes of evaluating an item specification. Given a filespec that may include wildcard characters * and\r\n            ?, we translate it into an actual list of files. If the input filespec doesn't contain any wildcard characters, and it\r\n            doesn't appear to point to an actual file on disk, then we just give back the input string as an array of length one,\r\n            assuming that it wasn't really intended to be a filename (as items are not required to necessarily represent files).\r\n            Any wildcards passed in that are unescaped will be treated as real wildcards.\r\n            The \"include\" of items passed back from the filesystem will be returned canonically escaped.\r\n            The ordering of the list returned is deterministic (it is sorted).\r\n            Will never throw IO exceptions. If path is invalid, just returns filespec verbatim.\r\n            ":"\r\n            用于评估项目规范的目的。给定一个可能包括通配符字符 *和\r\n            ？，我们将其转换为实际文件列表。如果输入FileSpec不包含任何通配符，则\r\n            似乎没有指向磁盘上的实际文件，然后我们将输入字符串作为长度为一数的数组，\r\n            假设它并不是真正打算是文件名（因为不需要项目代表文件）。\r\n            未经扫描的任何通配符都将被视为真正的通配符。\r\n            从文件系统传递的项目的“包括”将被返回规范。\r\n            返回的列表的排序是确定性的（已排序）。\r\n            永远不会抛出IO例外。如果路径无效，只需逐字返回filespec。\r\n            \r\n","\r\n            using a factory so that parameters can be passed to the constructor.  This service caches responses for a given build so that it can avoid sending\r\n            a packet where possible.  The cache is always in effect here because the out-of-proc node is only used for builds.\r\n            \r\n            Since this object is a registered ":"\r\n            使用工厂，以便可以将参数传递给构造函数。此服务缓存给定构建的响应，以免发送\r\n            可能会有一个数据包。缓存总是在此处生效，因为播出外节点仅用于构建。\r\n            \r\n            由于此对象是注册\r\n","\r\n            Record an import opened during evaluation. Include duplicates\r\n            Does nothing: not needed for project instances.\r\n            ":"\r\n            记录在评估期间打开的导入。包括重复\r\n            什么都不做：项目实例不需要。\r\n            \r\n","\r\n            Disposes of the cancellation token registration.\r\n            ":"\r\n            处置取消令牌注册。\r\n            \r\n","\r\n            Should properties and items be logged on ":"\r\n            是否应该登录属性和物品\r\n","\r\n            Handle target finished events\r\n            ":"\r\n            处理目标成品事件\r\n            \r\n","\r\n            The project's root directory, for evaluation of relative paths and\r\n            setting the current directory during build.\r\n            Is never null: projects not loaded from disk use the current directory from\r\n            the time the build started.\r\n            ":"\r\n            项目的根目录，用于评估相对路径和\r\n            在构建过程中设置当前目录。\r\n            永远不会零：未从磁盘加载的项目使用当前目录\r\n            构建开始的时间。\r\n            \r\n","\r\n            This constructor only exists to satisfy .NET coding guidelines. Use the rich constructor instead.\r\n            ":"\r\n            该构造函数仅能满足.NET编码指南。改用丰富的构造函数。\r\n            \r\n","\r\n             This is a specialized method for the use of TargetUpToDateChecker and Evaluator.EvaluateItemXml only.\r\n             \r\n             Extracts the items in the given SINGLE item vector.\r\n             For example, expands @(Compile->'%(foo)') to a set of items derived from the items in the \"Compile\" list.\r\n            \r\n             If there is in fact more than one vector in the expression, throws InvalidProjectFileException.\r\n             \r\n             If there are no item expressions in the expression (for example a literal \"foo.cpp\"), returns null.\r\n             If expression expands to no items, returns an empty list.\r\n             If item expansion is not allowed by the provided options, returns null.\r\n             If ExpanderOptions.BreakOnNotEmpty was passed, expression was going to be non-empty, and it broke out early, returns null. Otherwise the result can be trusted.\r\n             \r\n             If the expression is a transform, any transformations to an expression that evaluates to nothing (i.e., because\r\n             an item has no value for a piece of metadata) are optionally indicated with a null entry in the list. This means \r\n             that the length of the returned list is always the same as the length of the referenced item list in the input string.\r\n             That's important for any correlation the caller wants to do.\r\n             \r\n             If expression was a transform, 'isTransformExpression' is true, otherwise false.\r\n            \r\n             Item type of the items returned is determined by the IItemFactory passed in; if the IItemFactory does not \r\n             have an item type set on it, it will be given the item type of the item vector to use.\r\n             ":"\r\n             这是用于使用target uptodatechecker和评估器的专业方法。\r\n             \r\n             提取给定的单项向量中的项目。\r\n             例如，将 @（compile->'％（foo）'）展开到从“编译”列表中的项目中得出的一组项目。\r\n            \r\n             如果表达式中实际上有多个向量，则会引发InvalidProjectFileException。\r\n             \r\n             如果表达式中没有项目表达式（例如文字“ foo.cpp”），则返回null。\r\n             如果表达式扩展到没有项目，请返回一个空列表。\r\n             如果提供的选项不允许项目扩展，则返回null。\r\n             如果通过ExpanderOptions.breakonnotempty通过，表达将是非空的，并且早点爆发，则返回NULL。否则可以信任结果。\r\n             \r\n             如果表达式是转换\r\n             一个项目对一块元数据没有值），可选地指示列表中的空条目。这表示\r\n             返回列表的长度始终与输入字符串中引用的项目列表的长度相同。\r\n             这对于呼叫者想要做的任何关联都很重要。\r\n             \r\n             如果表达是一种转换，则“ IsTransFormExpression”是真实的，否则是错误的。\r\n            \r\n             返回的项目的项目类型由传递的iItemFactory确定；如果iItemfactory没有\r\n             在其上设置了一个项目类型，它将为其使用项目向量的项目类型。\r\n             \r\n","\r\n            Complete description of an item metadata reference, including the optional qualifying item type.\r\n            For example, %(Compile.DependsOn) or %(DependsOn).\r\n            ":"\r\n            项目元数据参考的完整说明，包括可选的合格项目类型。\r\n            例如，％（compile.ipenderson）或％（依赖子）。\r\n            \r\n","The node which reported the failure.":"报告失败的节点。\r\n","\r\n            Gets the results for a target in the build request\r\n            ":"\r\n            在构建请求中获取目标的结果\r\n            \r\n","\r\n            The level of detail (i.e. verbosity) of an event log is entirely controlled by the logger generating the log -- a logger\r\n            will be directed to keep its verbosity at a certain level, based on user preferences, but a logger is free to choose the\r\n            events it logs for each verbosity level.\r\n            \r\n            LOGGING GUIDELINES FOR EACH VERBOSITY LEVEL:\r\n            1) Quiet -- only display a summary at the end of build\r\n            2) Minimal -- only display errors, warnings, high importance events and a build summary\r\n            3) Normal -- display all errors, warnings, high importance events, some status events, and a build summary\r\n            4) Detailed -- display all errors, warnings, high and normal importance events, all status events, and a build summary\r\n            5) Diagnostic -- display all events, and a build summary\r\n            \r\n            WARNING: VS Automation code for the Tools/Options MSBuild build verbosity setting will be broken\r\n            by changes to this enum (not to mention existing MSBuild clients and vsproject code). \r\n            Please make sure to talk to automation devs before changing it.\r\n            ":"\r\n            事件日志的细节级别（即详细）完全由生成日志的记录器控制 - 记录器\r\n            根据用户的喜好，将指示将其详细性保持在一定层面，但是记录器可以免费选择\r\n            它为每个详细级别登录的事件。\r\n            \r\n            每个详细级别的记录指南：\r\n            1）安静 - 仅在构建结束时显示摘要\r\n            2）最小值 - 仅显示错误，警告，高重要性事件和构建摘要\r\n            3）正常 - 显示所有错误，警告，高重要性事件，一些状态事件和构建摘要\r\n            4）详细 - 显示所有错误，警告，高和正常的重要性事件，所有状态事件以及构建摘要\r\n            5）诊断 - 显示所有事件和构建摘要\r\n            \r\n            警告：VS工具/选项的自动化代码MSBUILD构建的详细性设置将被打破\r\n            通过更改此枚举（更不用说现有的MSBUILD客户端和VSProject代码了）。\r\n            在更改之前，请确保与自动化开发人员交谈。\r\n            \r\n","\r\n            Create an evaluation context, by generating a new evaluation id.\r\n            ":"\r\n            通过生成新的评估ID来创建评估上下文。\r\n            \r\n","\r\n            Unregisters all the loggers for a given submission id.\r\n            ":"\r\n            拆除给定提交ID的所有记录仪。\r\n            \r\n","\r\n            The ReusableLogger wraps a logger and allows it to be used for both design-time and build-time.  It internally swaps\r\n            between the design-time and build-time event sources in response to Initialize and Shutdown events.\r\n            ":"\r\n            ReusableLogger包装了一个记录器，并允许将其用于设计时间和构建时间。它在内部交换\r\n            在设计时间和构建时间事件源之间，以响应初始化和关闭事件。\r\n            \r\n","\r\n            Call this method to notify listeners of profiling for the method that removes blacklisted references from the reference table. It puts primary and dependency references in invalid file lists.\r\n            ":"\r\n            调用此方法以通知听众有关从参考表中删除黑名单引用的方法的分析。它将主要和依赖项引用放在无效的文件列表中。\r\n            \r\n","\r\n            Gets or sets the item-spec.\r\n            ":"\r\n            获取或设置项目规格。\r\n            \r\n","\r\n            Create the shared cache if it is not null\r\n            ":"\r\n            创建共享缓存，如果不是null\r\n            \r\n","The version to compare.":"比较的版本。\r\n","When forwardingLoggerSink is null":"当thressingloggerggersink为null时\r\n","\r\n            Special parameters that the task factory can use to modify how it executes tasks, such as Runtime and Architecture.  \r\n            The key is the name of the parameter and the value is the parameter's value.  This is the set of parameters that was \r\n            set to the task invocation itself, via e.g. the special MSBuildRuntime and MSBuildArchitecture parameters.  \r\n            ":"\r\n            任务工厂可以用来修改其执行任务的特殊参数，例如运行时和体系结构。\r\n            关键是参数的名称，值是参数的值。这是一组参数\r\n            通过例如，设置为任务调用本身特殊的msbuildruntime和msbuildarchitecture参数。\r\n            \r\n","The project file to be built.":"要构建的项目文件。\r\n","\r\n            Gets or sets the desired thread priority for building.\r\n            ":"\r\n            获取或设置构建所需的线程优先级。\r\n            \r\n","\r\n            Location of the inputs attribute, if any\r\n            ":"\r\n            输入属性的位置，如果有的话\r\n            \r\n","\r\n            Resets the scheduler.\r\n            ":"\r\n            重置调度程序。\r\n            \r\n","\r\n            Whether the XML is preserving formatting or not.\r\n            ":"\r\n            XML是否保留格式。\r\n            \r\n","\r\n            Number of pieces of metadata directly on this item\r\n            ":"\r\n            直接在此项目上的元数据数量\r\n            \r\n","\r\n            Event arguments for the ":"\r\n            事件论点\r\n","\r\n            Returns the property with the specified name or null if it was not present.\r\n            ":"\r\n            如果不存在，则以指定名称或空返回该属性。\r\n            \r\n"," which can load registered SDK resolvers.\r\n            ":" 可以加载已注册的SDK解析器。\r\n            \r\n","\r\n            Identity of this task.\r\n            ":"\r\n            此任务的身份。\r\n            \r\n","\r\n            Logs an EnvironmentVariableRead event.\r\n            ":"\r\n            记录一个环境variablead事件。\r\n            \r\n","\r\n            Completes the asynchronous packet write to the node.\r\n            ":"\r\n            完成异步数据包写入节点。\r\n            \r\n","The logging helper object.":"日志帮助器对象。\r\n","\r\n            Returns true if a valid name begins at the specified index.\r\n            Leaves index one past the end of the name.\r\n            ":"\r\n            如果有效名称从指定的索引开始，则返回true。\r\n            将索引留在名称的末尾。\r\n            \r\n","\r\n            The engine fails on this because it doesn't like item lists being concatenated with string\r\n            constants when the data is being passed into an array parameter.  So the workaround is to \r\n            write this in the project file:\r\n                ":"\r\n            引擎失败了，因为它不喜欢与字符串连接的项目列表\r\n            当数据传递到数组参数中时，常数。所以解决方法是\r\n            将其写在项目文件中：\r\n                \r\n","\r\n            Writes out the environment as seen on build started.\r\n            ":"\r\n            写出构建中所见的环境。\r\n            \r\n","\r\n            Constructor\r\n            Takes the location of Platform.xml and populates the structure with manifest data\r\n            ":"\r\n            构造函数\r\n            占据platform.xml的位置，并使用清单数据填充结构\r\n            \r\n","\r\n            Type of this item definition.\r\n            ":"\r\n            此项目定义的类型。\r\n            \r\n","\r\n            The global build request id, assigned by the Build Manager\r\n            ":"\r\n            由Build Manager分配的全局构建请求ID\r\n            \r\n","\r\n            CoreCLR-compatible wrapper for loading task assemblies.\r\n            ":"\r\n            与CORECLR兼容的包装器，用于加载任务组件。\r\n            \r\n","\r\n            holds all the default tasks we know about and the assemblies they exist in\r\n            ":"\r\n            保留我们知道的所有默认任务以及它们存在于\r\n            \r\n"," to target.":" 达到目标。\r\n","\r\n            Retrieves the name of the component host.\r\n            ":"\r\n            检索组件主机的名称。\r\n            \r\n","\r\n            Version 2.0\r\n            ":"\r\n            2.0版\r\n            \r\n"," \r\n            property of a ":" \r\n            属性\r\n","\r\n            This is in the form of a SemVer v2 version, Major.Minor.Patch-prerelease+metadata.\r\n            ":"这是SEMVER V2版本的形式，Major.minor.patch-prerelease+元数据。\r\n            \r\n","The logging context to use.":"使用的记录上下文。\r\n","\r\n            fileWriter is the stream that has been opened on our log file.\r\n            ":"\r\n            文件作者是在我们的日志文件上打开的流。\r\n            \r\n","\r\n            Gets or sets the prefix used to compose help keywords from string resource names. If a task does not have help\r\n            keywords associated with its messages, it can ignore this property or set it to null. If the prefix is set to an empty\r\n            string, then string resource names will be used verbatim as help keywords. For an example of how this prefix is used,\r\n            see the ":"\r\n            获取或设置用于从字符串资源名称组成帮助关键字的前缀。 如果任务没有帮助\r\n            与其消息相关联的关键字，它可以忽略此属性或将其设置为null。 如果前缀设置为空\r\n            字符串，则字符串资源名称将逐字作为帮助关键字。 有关如何使用此前缀的示例,\r\n            查看 \r\n","\r\n            Verifies if the reference of the target string is the same of the given string.\r\n            ":"\r\n            验证目标字符串的引用是否与给定字符串相同。\r\n            \r\n","\r\n            Populate the cache of PropertyInfos for this type\r\n            ":"\r\n            填充此类型的PropertyInfos的缓存\r\n            \r\n","\r\n            The output item name (can be null)\r\n            ":"\r\n            输出项目名称（可以为null）\r\n            \r\n","\r\n            Contains a list of the special (reserved) properties that are settable by MSBuild code only.\r\n            ":"\r\n            包含仅通过MSBUILD代码来设置的特殊（保留）属性的列表。\r\n            \r\n","\r\n            When an entry is removed from a project root element cache's strong cache, we will remove\r\n            its entries from our string cache. Otherwise the string cache ends up being the only one\r\n            holding references to the Xml documents that have already been dropped.\r\n            ":"\r\n            从项目根元素缓存的强缓存中删除条目时，我们将删除\r\n            它的条目来自我们的字符串缓存。否则，字符串缓存最终是唯一的\r\n            持有对已经删除的XML文档的引用。\r\n            \r\n","\r\n            Method instead of a setter on EvaluatedValue to try to make clear its limited purpose.\r\n            ":"方法而不是评估值的设置器来清楚其有限的目的。\r\n            \r\n"," anda collection factory\r\n            ":" 安达收集工厂\r\n            \r\n","\r\n            Convenience method to add a conditioned Output Property to this task.\r\n            Adds after the last child.\r\n            ":"\r\n            便利方法将条件输出属性添加到此任务中。\r\n            在最后一个孩子之后添加。\r\n            \r\n","The path to search for msbuild overridetasks files.":"搜索MSBUILD OVERRIDETASKS文件的路径。\r\n","\r\n            ITaskItem2 should not return null if metadata is not present.\r\n            ":"\r\n            如果不存在元数据，则不应返回null。\r\n            \r\n","File to delete":"文件要删除\r\n","\r\n            Indicates whether we should dump string interning stats\r\n            ":"\r\n            指示我们是否应该倾倒字符串实习统计\r\n            \r\n","\r\n            Project name\r\n            ":"\r\n            项目名称\r\n            \r\n"," instance. This value must not be null.":" 实例。此值不得无效。\r\n","\r\n            The build result which we wish to report.\r\n            ":"\r\n            我们希望报告的构建结果。\r\n            \r\n","\r\n            Replace backslashes with OS-specific path separators,\r\n            except when likely that the backslash is intentional.\r\n            ":"\r\n            用特异性路径分离器替换背斜线，\r\n            除非后卫是有意的。\r\n            \r\n","\r\n            We cannot use a copy-on-write table for the metadata, as ProjectMetadata objects are mutable. However,\r\n            we do use it for build-time items.\r\n            ":"\r\n            由于ProjectMetadata对象是可变的，因此我们不能为元数据使用复制表。然而，\r\n            我们确实将其用于构建时间。\r\n            \r\n","\r\n            A property with a value of empty string and no property\r\n            at all are not distinguished between by this method.\r\n            This is because the build does not distinguish between the two.\r\n            The reason this method exists when users can simply do GetProperty(..).EvaluatedValue,\r\n            is that the caller would have to check for null every time. For properties, empty and undefined are \r\n            not distinguished, so it much more useful to also have a method that returns empty string in\r\n            either case.\r\n            This function returns the unescaped value.\r\n            ":"\r\n            一个具有空字符串和无属性的属性\r\n            完全没有通过这种方法区分。\r\n            这是因为构建没有区分两者。\r\n            当用户可以简单地做getProperty（..）。evaliedValue时，此方法之所以存在，\r\n            是呼叫者每次都必须检查null。对于属性，空的和未定义的是\r\n            没有区分，因此还可以使用一种返回空字符串的方法更有用\r\n            两种情况。\r\n            此函数返回未排列的值。\r\n            \r\n","display state. true indicates this frame has been displayed to the user":"显示状态。 true表明该框架已显示给用户\r\n","\r\n            Completely remove an entry from this cache\r\n            ":"\r\n            完全删除此缓存的条目\r\n            \r\n","\r\n            Displays project started and target started messages that\r\n            are shown only when the associated project or target produces\r\n            output.\r\n            ":"\r\n            显示项目开始，目标启动消息\r\n            仅当关联的项目或目标产生时才显示\r\n            输出。\r\n            \r\n","\r\n            Writes out configuration in order of the greatest total plan time.\r\n            ":"\r\n            按照最大的总计划时间顺序写出配置。\r\n            \r\n","\r\n            Fill up the dictionary for first use\r\n            ":"\r\n            填写词典首次使用\r\n            \r\n","\r\n            This property returns the list of comments that were generated during the solution parsing\r\n            ":"\r\n            该属性返回解决方案解析期间生成的评论列表\r\n            \r\n","\r\n            This packet is sent by the scheduler in response to ":"\r\n            该数据包由调度程序发送给\r\n","\r\n            Default constructor. Called during deserialization.\r\n            ":"\r\n            默认构造函数。在避难过程中被调用。\r\n            \r\n","expander options":"扩展器选项\r\n","\r\n            Backing XML metadata.\r\n            Can never be null.\r\n            ":"\r\n            支持XML元数据。\r\n            永远不会无效。\r\n            \r\n","\r\n            is specified), but lower in priority than ":"\r\n            指定），但优先级低于\r\n","Filename of the project being evaluated.":"正在评估项目的文件名。\r\n","\r\n            We are pushing AfterTargets.  When pushed, if they have already executed, we ignore them.\r\n            ":"我们正在推动后台。当推动时，如果他们已经执行，我们会忽略它们。\r\n            \r\n","\r\n            Parse a ProjectImportGroupElement\r\n            ":"\r\n            解析ProjectImportGroupelement\r\n            \r\n","\r\n            When reset caches is false we need to only keep around the configurations which are being asked for during the design time build.\r\n            Other configurations need to be cleared. If this configuration is marked as ExplicitlyLoadedConfiguration then it should not be cleared when\r\n            Reset Caches is false.\r\n            ":"\r\n            当重置缓存为错误时，我们只需要围绕在设计时间构建过程中要求的配置。\r\n            其他配置需要清除。如果将此配置标记为显式载体configuration，则不应在\r\n            重置缓存是错误的。\r\n            \r\n","\r\n            Scan for the closing bracket that matches the one we've already skipped;\r\n            essentially, pushes and pops on a stack of parentheses to do this.\r\n            Takes the expression and the index to start at.\r\n            Returns the index of the matching parenthesis, or -1 if it was not found.\r\n            Also returns flags to indicate if a propertyfunction or registry property is likely\r\n            to be found in the expression\r\n            ":"\r\n            扫描与我们已经跳过的封闭托架相匹配的封闭括号；\r\n            从本质上讲，推动并弹出一堆括号来做到这一点。\r\n            以表达式和索引开始。\r\n            返回匹配括号的索引，如果找不到-1，则返回-1。\r\n            还返回标志以指示属性功能或注册表属性是否可能\r\n            在表达中找到\r\n            \r\n"," after setting the last property of the object.\r\n            ":" 设置对象的最后一个属性之后。\r\n            \r\n","\r\n            EvaluateCondition,\r\n            ":"\r\n            评估，\r\n            \r\n","\r\n            A mapping of project file names to their node affinities.  An entry for String.Empty means that\r\n            all projects which don't otherwise have an affinity should use that affinity.\r\n            ":"\r\n            将项目文件名的映射到其节点亲和力。字符串条目。Empty意味着\r\n            所有否则没有亲和力的项目都应使用该亲和力。\r\n            \r\n","true, if build was successful":"是的，如果构建成功\r\n","Targets with which ":"目标\r\n","\r\n            Context to log messages and events in\r\n            ":"\r\n            记录消息和事件中的上下文\r\n            \r\n","\r\n            The set of parameters used to decide which host to launch.  \r\n            ":"\r\n            一组参数用于决定要启动哪个主机。\r\n            \r\n","\r\n            Gets the toolset provider.\r\n            ":"\r\n            获取工具集提供商。\r\n            \r\n","\r\n            Flag indicating if the modifications should be interpreted such that the lack of an explicit entry for a metadata name\r\n            means that that metadata should be removed.\r\n            ":"\r\n            标志指示是否应解释修改，以使元数据名称缺乏明确的条目\r\n            意味着该元数据应被去除。\r\n            \r\n","The request to be added.":"要添加的请求。\r\n","\r\n            Initialize an in-memory, empty ProjectRootElement instance that can be saved later.\r\n            Uses the specified project collection.\r\n            ":"\r\n            初始化一个内存，空的项目Rootelement实例，以后可以保存。\r\n            使用指定的项目集合。\r\n            \r\n","\r\n            Report statistics to the console.\r\n            ":"\r\n            向控制台报告统计信息。\r\n            \r\n","\r\n            The properties representing the environment.\r\n            ":"\r\n            代表环境的属性。\r\n            \r\n","\r\n            Prints a custom event\r\n            ":"\r\n            打印自定义活动\r\n            \r\n","The node":"节点\r\n","result indicating whether or not the scan was successful.":"结果指示扫描是否成功。\r\n","Index of the character to gather.":"角色的索引聚集。\r\n","\r\n            The default targets for the project\r\n            ":"\r\n            项目的默认目标\r\n            \r\n","Mutating a value collection derived from a dictionary is not allowed.":"不允许突变从字典中得出的价值收集。\r\n"," issued in response to this request should include ":" 响应此请求的发行应包括\r\n","The bucket being executed.":"被执行的水桶。\r\n","\r\n            Apply modifies to a temporary result group.\r\n            Items to be modified are virtual-cloned so the original isn't changed.\r\n            ":"\r\n            将修改应用于临时结果组。\r\n            要修改的项目是虚拟串起的，因此原始内容不会更改。\r\n            \r\n","\r\n            Evaluate as boolean\r\n            ":"\r\n            评估为布尔\r\n            \r\n","\r\n            The global request id.\r\n            ":"\r\n            全局请求ID。\r\n            \r\n"," for remoted objects.\r\n            ":" 对于远程对象。\r\n            \r\n","A type derived from IItem":"从IITEM派生的类型\r\n","\r\n            Ending line number of interest in associated file.\r\n            ":"\r\n            结束行的关联文件的兴趣数。\r\n            \r\n","\r\n            Filter list of platform sdks based on minimum OS and VS versions\r\n            ":"\r\n            基于最低OS和VS版本的平台SDK的过滤列表\r\n            \r\n","\r\n            Whether the property originated from the environment (or the toolset)\r\n            ":"\r\n            该属性是起源于环境（还是工具集）\r\n            \r\n","The tools version.":"工具版本。\r\n","\r\n            Given an XML element containing API contracts, read out all contracts within that element. \r\n            ":"\r\n            给定包含API合同的XML元素，请读取该元素中的所有合同。\r\n            \r\n","\r\n            Cache the results of reading the redist list so that we do not have to read the redist list over and over again to get the chains.\r\n            ":"\r\n            缓存读取重新列表列表的结果，以便我们不必一遍又一遍地阅读重新列表即可获得链条。\r\n            \r\n","\r\n            The reason we are shutting down.\r\n            ":"\r\n            我们关闭的原因。\r\n            \r\n","\r\n            The requests which need to be built to unblock the request, if any.\r\n            ":"\r\n            需要构建的请求以解除请求（如果有）。\r\n            \r\n","\r\n            This method computes the sources that need to be compiled based on the output files and the\r\n            full dependency graph of inputs, making the assumption that the source files are all primary\r\n            files -- ie. there is either a one-to-one or a one-to-many correspondence between inputs\r\n            and outputs\r\n            ":"\r\n            此方法计算需要根据输出文件和\r\n            输入的完整依赖关系图，假设源文件都是主要文件\r\n            文件 - 即。输入之间有一对一或一对一的对应关系\r\n            和输出\r\n            \r\n","\r\n            Gets or sets the value of InitialTargets. If there is no InitialTargets, returns empty string.\r\n            If the value is null or empty, removes the attribute.\r\n            ":"\r\n            获取或设置初始字母的值。如果没有初始字母，请返回空字符串。\r\n            如果值为空或空为空，请删除属性。\r\n            \r\n","\r\n            All the items in the project of the specified\r\n            type.\r\n            If there are none, returns an empty list.\r\n            Use AddItem or RemoveItem to modify items in this project.\r\n            ":"\r\n            指定项目中的所有项目\r\n            类型。\r\n            如果没有，请返回一个空列表。\r\n            使用AddItem或RemoveItem在此项目中修改项目。\r\n            \r\n","\r\n            Creates a metadata modification of type Remove.\r\n            ":"\r\n            创建对删除类型的元数据修改。\r\n            \r\n","The node ID to which the result should be sent.":"结果应发送的节点ID。\r\n","\r\n            Whether to to respect the TreatAsLocalProperty parameter on the Project tag. \r\n            ":"\r\n            是否要尊重项目标签上的treataslocalproperty参数。\r\n            \r\n","\r\n            Creates an instance of this class using the given bucket data.\r\n            ":"\r\n            使用给定的存储桶数据创建此类的实例。\r\n            \r\n","\r\n            Returns the full name of the .NET Framework SDK root registry key.  When targeting .NET 3.5 or\r\n            above, looks in the locations associated with Visual Studio 2010.  If you wish to target the \r\n            .NET Framework SDK that ships with Visual Studio Dev11 or later, please use the override that \r\n            specifies a VisualStudioVersion. \r\n            ":"\r\n            返回.NET Framework SDK根注册表密钥的全名。定位.NET 3.5或\r\n            上面，查看与Visual Studio 2010相关的位置。如果您想定位\r\n            .NET框架SDK与Visual Studio Dev11或更高版本一起发货\r\n            指定一个VisualStudioversion。\r\n            \r\n","The callback to use for handling new build requests.":"用于处理新构建请求的回调。\r\n","\r\n            Constructs a response where a request should be scheduled.\r\n            ":"\r\n            构建应安排请求的响应。\r\n            \r\n","\r\n            The current engine status\r\n            ":"\r\n            当前的发动机状态\r\n            \r\n","\r\n            Searches for a file based on the specified ":"\r\n            根据指定的搜索文件\r\n","\r\n            Whether this project is dirty such that it needs reevaluation.\r\n            This may be because its underlying XML has changed (either through this project or another)\r\n            either the XML of the main project or an imported file; \r\n            or because its toolset may have changed.\r\n            ":"\r\n            这个项目是否脏，以便需要重新评估。\r\n            这可能是因为其基础XML已更改（通过此项目或另一个项目）\r\n            主项目的XML或导入文件；\r\n            或因为其工具集可能已经改变。\r\n            \r\n","\r\n            Stores the message arguments.\r\n            ":"\r\n            存储消息参数。\r\n            \r\n","\r\n            This interface defines a project item that can be consumed and emitted by tasks.\r\n            ":"\r\n            该界面定义了一个可以通过任务消费和发射的项目项。\r\n            \r\n","\r\n             The ID of the evaluation that produced this ProjectInstance.\r\n            \r\n             See ":"\r\n             产生该项目的评估的ID。\r\n            \r\n             看\r\n","\r\n                Called once for each build request.\r\n                Operation needs to be atomic. Any side effects (IO, environment variables, etc) need to be reverted upon\r\n                cancellation.\r\n                MSBuild may choose to cancel this method and build the project itself.\r\n                Errors are checked via ":"\r\n                每次构建请求一次调用一次。\r\n                操作需要是原子。任何副作用（IO，环境变量等）都需要恢复\r\n                消除。\r\n                MSBUILD可能会选择取消此方法并构建项目本身。\r\n                通过检查错误\r\n","Mutating a key collection derived from a dictionary is not allowed.":"不允许突变从字典中得出的钥匙集。\r\n","\r\n            Creates a logger description from given data\r\n            ":"\r\n            从给定的数据创建记录器描述\r\n            \r\n","\r\n            Writes out configs in order of most immediate references.\r\n            ":"\r\n            按照大多数直接的参考顺序写出配置。\r\n            \r\n","\r\n            Get target platform monikers used to extract ESDK information in the methods GetPlatformExtensionSDKLocationsAndVersions and GetPlatformExtensionSDKLocations\r\n            ":"\r\n            获取目标平台绰号用于在方法中提取ESDK信息的方法getPlatformextensionsdklocations andversions和getPlatformextensionsdklocationsdklocations\r\n            \r\n","Internal for testing purposes.":"内部用于测试目的。\r\n","\r\n            Divide two doubles\r\n            ":"\r\n            划分两个双打\r\n            \r\n","The name of the target":"目标名称\r\n","\r\n            Called by the Evaluator during creation of the ProjectInstance.\r\n            Reserved properties can be set with this constructor using the appropriate flag.\r\n            This flags should ONLY be set by the evaluator or by cloning; after the ProjectInstance is created, they must be illegal.\r\n            If name is invalid or reserved, throws ArgumentException.\r\n            ":"\r\n            由评估者在创建ProjectInstance期间召集。\r\n            可以使用适当的标志使用此构造函数设置保留属性。\r\n            该标志应仅由评估者或克隆设置；创建ProjectInstance之后，它们必须是非法的。\r\n            如果名称无效或保留，请引发参数exception。\r\n            \r\n","\r\n            The singleton comparer to use for when a fuzzy match is desired \r\n            ":"需要使用模糊匹配时使用的单例比较\r\n            \r\n","\r\n            Gets or sets the node id\r\n            ":"\r\n            获取或设置节点ID\r\n            \r\n","\r\n            The next node in the list.\r\n            ":"\r\n            列表中的下一个节点。\r\n            \r\n","\r\n            Truncate task inputs when logging them. This can reduce memory pressure\r\n            at the expense of log usefulness.\r\n            ":"\r\n            记录任务时截断任务输入。这可以减轻记忆压力\r\n            以日志有用为代价。\r\n            \r\n","\r\n            The current directory at the time the build is started.\r\n            ":"\r\n            启动构建时的当前目录。\r\n            \r\n","\r\n            Parse a ProjectItemElement\r\n            ":"\r\n            解析一个投影仪\r\n            \r\n","\r\n            Has the object been disposed yet.\r\n            ":"\r\n            是否已处理该物体。\r\n            \r\n","\r\n            Create Items snapshot\r\n            ":"\r\n            创建项目快照\r\n            \r\n","\r\n            Tools version to evaluate with\r\n            ":"\r\n            用来评估的工具版本\r\n            \r\n","The logging services used to log during task registration.":"在任务注册过程中用于登录的记录服务。\r\n","\r\n            Creates an unparented ProjectItemDefinitionElement, wrapping an unparented XmlElement.\r\n            Caller should then ensure the element is added to a parent.\r\n            ":"\r\n            创建一个无与伦比的ProjectItemDefinitionElement，包裹无与伦比的XMlelement。\r\n            然后，呼叫者应确保将元素添加到父。\r\n            \r\n","\r\n            Get any contained TaskElement.\r\n            ":"\r\n            获取任何包含的任务。\r\n            \r\n","\r\n            Private IComparer class for sorting performance counters \r\n            in descending order by elapsed time.\r\n            ":"\r\n            用于分类性能计数器的私人ICOMPARER类\r\n            按照经过的时间下降顺序。\r\n            \r\n","\r\n            This submission is completely done with the legacy thread, so unregister it \r\n            from the dictionary so that we don't leave random events lying around. \r\n            ":"\r\n            此提交完全通过旧线程完成，因此请登记\r\n            从词典中，我们不要留下随机的事件。\r\n            \r\n","\r\n            Deserializes to a stream through a binary writer\r\n            ":"\r\n            通过二进制作家供应到流\r\n            \r\n","\r\n            WARNING: marking a type [Serializable] without implementing ISerializable\r\n            imposes a serialization contract -- it is a promise to never change the\r\n            type's fields i.e. the type is immutable; adding new fields in the next\r\n            version of the type without following certain special FX guidelines, can\r\n            break both forward and backward compatibility\r\n            ":"\r\n            警告：标记类型[可序列化]而无需实施iSerializable\r\n            施加序列化合同 - 承诺永远不要改变\r\n            类型的字段，即类型是不变的；在下一个中添加新字段\r\n            该类型的版本无需遵循某些特殊的FX指南，可以\r\n            突破向前和向后的兼容性\r\n            \r\n","\r\n            Logs all the messages that the tool wrote to either stderr or stdout.\r\n            The messages are read out of the given data queue. This method is a\r\n            helper for the ":"\r\n            记录该工具写给STDERR或Stdout的所有消息。\r\n            从给定的数据队列中读取消息。此方法是\r\n            助手\r\n","\r\n            Expands property expressions, like $(Configuration) and $(Registry:HKEY_LOCAL_MACHINE\\Software\\Vendor\\Tools@TaskLocation)\r\n            ":"\r\n            扩展属性表达式，例如$（配置）和$（注册表：HKEY_LOCAL_MACHINE \\ SOFTWORD \\ vendor \\ vendor \\ tools@taskLocation）\r\n            \r\n","\r\n            Adds a new item to this bucket.\r\n            ":"\r\n            将新项目添加到此存储桶。\r\n            \r\n","\r\n            DefaultOverrideToolsVersion attribute on msbuildToolsets element, specifying the tools version that should be used by\r\n            default to build projects with this version of MSBuild.\r\n            ":"\r\n            MSBUILDToolSets元素上的DefaultoverRidetoolSversion属性，指定应由应使用的工具版本\r\n            默认可以使用此版本的MSBuild构建项目。\r\n            \r\n","\r\n             This is the publicly exposed getter, that translates into a read-only dead IDictionary<string, string>.\r\n            \r\n             In order to easily tell when we're dirtied, setting and removing global properties is done with\r\n             ":"这是公开暴露的getter，转化为仅读取的死idictionary <string，string>。\r\n            \r\n             为了轻松判断我们何时污垢，设置和删除全局属性已完成\r\n             \r\n","\r\n            Creates a ParameterGroup for use in a using task.\r\n            Caller must add it to the location of choice in the project under a using task.\r\n            ":"\r\n            创建一个参数组，以用于使用任务。\r\n            呼叫者必须在使用任务下的项目中将其添加到项目的选择位置。\r\n            \r\n","\r\n            includes ":"\r\n            包括\r\n","\r\n            A non-allocating enumerator for the multi-value.\r\n            ":"\r\n            多价值的非分配枚举者。\r\n            \r\n","\r\n            Delegate invoked to create a configuration\r\n            ":"\r\n            调用委派来创建配置\r\n            \r\n","\r\n            Compares two event contexts based on the ProjectContextId, NodeId, and TargetId only\r\n            ":"\r\n            仅根据ProjectContextID，NodeID和TargetID比较两个事件上下文\r\n            \r\n","\r\n            The most current VSGeneralAssemblyVersion known to this version of MSBuild.\r\n            ":"\r\n            此版本的MSBuild已知的最新VSGeneralSemblyverion。\r\n            \r\n","Registry root location to look for platform sdks":"注册表根位置以寻找平台SDK\r\n","Array of file paths.":"文件路径数组。\r\n","The global properties which should be used during evaluation of the project.  Cannot be null.":"在评估项目期间应使用的全球属性。不能无效。\r\n","\r\n            Contains the current results for all of the targets which have produced results for a particular configuration.\r\n            ":"\r\n            包含所有目标的当前结果，这些结果已为特定配置产生结果。\r\n            \r\n","\r\n            Set some parameters common to all worker threads we use\r\n            ":"\r\n            设置一些我们使用的所有工作线程共有的参数\r\n            \r\n","\r\n            When the BuildManager was created.\r\n            ":"\r\n            创建BuildManager时。\r\n            \r\n","\r\n            Returns true if the ContinueOnError flag was set to true for this particular task\r\n            in the project file.\r\n            ":"\r\n            如果连续方标志设置为True对于此特定任务，则返回true\r\n            在项目文件中。\r\n            \r\n","\r\n            Gets an element with the specified name\r\n            ":"\r\n            获取指定名称的元素\r\n            \r\n","\r\n            Gets the evaluated include value for this item, escaped as necessary.\r\n            ":"\r\n            获取评估的包括此项目的值，并在必要时逃脱。\r\n            \r\n","\r\n             This method and its overloads are useful for clients that need to inspect all the item elements\r\n             that might refer to a specific item instance. For example, Visual Studio uses it to inspect\r\n             projects with globs. Upon a file system or IDE file artifact change, VS calls this method to find all the items\r\n             that might refer to the detected file change (e.g. 'which item elements refer to \"Program.cs\"?').\r\n             It uses such information to know which elements it should edit to reflect the user or file system changes.\r\n             \r\n             Literal string matching tries to first match the strings. If the check fails, it then tries to match\r\n             the strings as if they represented files: it normalizes both strings as files relative to the current project directory\r\n            \r\n             GetItemProvenance suffers from some sources of innacuracy:\r\n             - it is performed after evaluation, thus is insensitive to item data flow when item references are present\r\n             (it sees items as they are at the end of evaluation)\r\n             \r\n             This API and its return types are prone to change.\r\n             ":"\r\n             此方法及其过载对于需要检查所有项目元素的客户很有用\r\n             这可能是指特定项目实例。例如，Visual Studio使用它来检查\r\n             带有地球的项目。在文件系统或IDE文件伪影更改时，VS调用此方法以查找所有项目\r\n             这可能是指检测到的文件更改（例如'哪些项目元素是指“ program.cs”？）。\r\n             它使用此类信息来知道应该编辑哪些元素以反映用户或文件系统更改。\r\n             \r\n             字面的字符串匹配试图首先匹配字符串。如果支票失败，则试图匹配\r\n             字符串好像它们表示文件：它相对于当前项目目录将两个字符串归一化为文件\r\n            \r\n             getItemProvence受到了一些无知的来源：\r\n              - 在评估后执行，因此在存在项目参考时对项目数据流不敏感\r\n             （它看到了在评估结束时的项目）\r\n             \r\n             此API及其返回类型容易更改。\r\n             \r\n","\r\n            Items in the project. This is a dictionary of ordered lists of a single type of items keyed by item type.\r\n            ":"\r\n            项目中的项目。这是按项目类型键入的单一类型项目的有序列表的词典。\r\n            \r\n","\r\n            Returns a clone of this project.\r\n            ":"返回该项目的克隆。\r\n            \r\n"," in a main table.\r\n            If any modifications conflict, these modifications win.\r\n            ":" 在主表中。\r\n            如果任何修改冲突，这些修改会获胜。\r\n            \r\n","\r\n            Internal for unit test purposes only.\r\n            ":"\r\n            内部仅出于单位测试目的。\r\n            \r\n","\r\n            Item definition metadata encountered during evaluation. These are read during the second evaluation pass.\r\n            Unlike those returned by the ItemDefinitions property, these are ordered, and include any metadata that\r\n            were subsequently overridden by others with the same name and item type. It does not include any \r\n            elements whose conditions did not evaluate to true.\r\n            ":"\r\n            评估期间遇到的项目定义元数据。这些是在第二次评估通行证中读取的。\r\n            与ItemDefinitions属性返回的那些不同，这些是订购的，并包括任何元数据\r\n            随后被其他名称和项目类型的其他人覆盖。它不包括任何\r\n            条件未评估为真的元素。\r\n            \r\n","\r\n            This class is used to programmatically read msbuildToolsets section\r\n            in from the configuration file.  An example of application config file:\r\n            \r\n            <configuration>\r\n                <msbuildToolsets default=\"2.0\">\r\n                    <toolset toolsVersion=\"2.0\">\r\n                        <property name=\"MSBuildBinPath\" value=\"D:\\windows\\Microsoft.NET\\Framework\\v2.0.x86ret\\\"/>\r\n                        <property name=\"SomeOtherProperty\" value=\"SomeOtherPropertyValue\"/>\r\n                    </toolset>\r\n                    <toolset toolsVersion=\"3.5\">\r\n                        <property name=\"MSBuildBinPath\" value=\"D:\\windows\\Microsoft.NET\\Framework\\v3.5.x86ret\\\"/>\r\n                    </toolset>\r\n                </msbuildToolsets>\r\n            </configuration>\r\n            \r\n            ":"\r\n            此类用于编程读取MSBUILDTOOLSETS部分\r\n            从配置文件中输入。应用程序配置文件的示例：\r\n            \r\n            <Configuration>\r\n                <msbuildtoolsets default =“ 2.0”>\r\n                    <toolset toolsversion =“ 2.0”>\r\n                        在\r\n                        态\r\n                    </toolset>\r\n                    <toolset toolsversion =“ 3.5”>\r\n                        <property name =“ msbuildbinpath” value =“ d：\\ windows \\ microsoft.net \\ framework \\ v3.5.x86ret \\”/>\r\n                    </toolset>\r\n                </msbuildtoolsets>\r\n            </configuration>\r\n            \r\n            \r\n","\r\n            Constructor for deserialization only.\r\n            ":"\r\n            仅用于避难所的构造函数。\r\n            \r\n","\r\n            Verify that the provided object location is in the same file as the project.\r\n            If it is not, throws an InvalidOperationException indicating that imported evaluated objects should not be modified.\r\n            This prevents, for example, accidentally updating something like the OutputPath property, that you want be in the\r\n            main project, but for some reason was actually read in from an imported targets file.\r\n            ":"验证提供的对象位置与项目同一文件中。\r\n            如果不是这样，则抛出InvalidOperationException，表明不应修改导入的评估对象。\r\n            例如，这样可以防止意外地更新类似Outputpath属性的内容，您希望在\r\n            主要项目，但由于某种原因，实际上是从导入目标文件中读取的。\r\n            \r\n"," type is declared in Microsoft.Build.Framework.dll\r\n            which is a declarations assembly. The logic to realize the Message is in Microsoft.Build.dll\r\n            which is an implementations assembly. This seems like the easiest way to inject the\r\n            implementation for realizing the Message.\r\n            ":"类型在microsoft.build.framework.dll中声明\r\n            这是声明集会。意识到消息的逻辑在microsoft.build.dll中\r\n            这是一个实施组件。这似乎是注入最简单的方法\r\n            实现消息的实现。\r\n            \r\n","The name of the environment variable read.":"环境变量的名称读取。\r\n","\r\n            Decompresses the items.\r\n            ":"\r\n            解压缩项目。\r\n            \r\n","XML Reader object":"XML读取器对象\r\n","\r\n            Returns the exception which aborted this target, if any.\r\n            ":"\r\n            返回该目标的例外，如果有的话。\r\n            \r\n","The dirtied project root element.":"污垢的项目根元素。\r\n","\r\n            Gets or sets the KeepDuplicates value.\r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty or null.\r\n            ":"\r\n            获取或设置保留的值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空或null，则删除属性。\r\n            \r\n","\r\n            implemented by MSBuild objects that support remote linking;\r\n            ":"\r\n            由支持远程链接的MSBUILD对象实现；\r\n            \r\n","\r\n            We do not need to use or set the PropertyType enumeration in the CM. \r\n            The CM does not know about Environment or Global properties, and does not create Output properties.\r\n            We can just verify that we haven't read a PropertyType.Reserved property ourselves.\r\n            So the CM only represents Normal properties.\r\n            ":"\r\n            我们不需要在CM中使用或设置PropertyType枚举。\r\n            CM不了解环境或全局属性，也不创建输出属性。\r\n            我们可以验证我们没有阅读PropertyType。\r\n            因此，CM仅表示正常属性。\r\n            \r\n","\r\n            Default constructor. Needed for proper XAML deserialization.\r\n            ":"\r\n            默认构造函数。需要适当的XAML避难所化。\r\n            \r\n","\r\n            The list of directory names found from the config file.\r\n            ":"\r\n            从配置文件中找到的目录名称列表。\r\n            \r\n","\r\n            serializes IItemType.Name\r\n            ":"\r\n            序列化iitemtype.name\r\n            \r\n","\r\n            Intern the given internable.\r\n            ":"\r\n            实习给定的可保护。\r\n            \r\n","\r\n            The host used to initialize components.\r\n            ":"\r\n            主机用于初始化组件。\r\n            \r\n"," is temporarily disabled.\r\n            This allows, for example, a global property to be set without the project getting\r\n            marked dirty for reevaluation as a consequence.\r\n            ":" 暂时禁用。\r\n            例如，这允许设置一个全局属性，而无需项目获得\r\n            结果是重新评估的脏物。\r\n            \r\n","\r\n            A list of property name/value pairs to apply as global properties to \r\n            the child project.  \r\n            A typical input: \"propname1=propvalue1\", \"propname2=propvalue2\", \"propname3=propvalue3\".\r\n            ":"\r\n            属性名称/价值对的列表，将作为全局属性应用于\r\n            儿童项目。\r\n            一个典型的输入：“ propname1 = propvalue1”，“ propname2 = propvalue2”，“ propname3 = propvalue3”。\r\n            \r\n","\r\n            If the property originated in an imported file, returns true.\r\n            Otherwise returns false.\r\n            ":"\r\n            如果该属性起源于导入的文件，请返回true。\r\n            否则返回false。\r\n            \r\n","\r\n            Invokes the specified targets using Dev9 behavior.\r\n            ":"\r\n            使用DEV9行为调用指定的目标。\r\n            \r\n","Target which has just finished":"刚刚完成的目标\r\n","\r\n            Ordered collection of unevaluated metadata.\r\n            May be null.\r\n            ":"\r\n            有序收集未评估的元数据。\r\n            可能是无效的。\r\n            \r\n"," for the case when this property ":" 对于此属性的情况\r\n","\r\n            Removes any metadata with the specified name.\r\n            Returns true if the evaluated metadata existed, otherwise false.\r\n            If the metadata name is one of the built-in metadata, like \"FullPath\", throws InvalidArgumentException.\r\n            If the metadata originates in an item definition, and was not overridden, throws InvalidOperationException.\r\n            ":"\r\n            删除带有指定名称的任何元数据。\r\n            如果存在评估的元数据，则返回为true，否则为错误。\r\n            如果元数据名称是内置的元数据之一，例如“ FullPath”，则会引发无效的Exception。\r\n            如果元数据起源于项目定义，并且没有被覆盖，则会引发无效的exception。\r\n            \r\n","\r\n            Processes a particular ToolsetPropertyDefinition into the correct value and location in the initial and/or final property set. \r\n            ":"\r\n            将特定的ToolsetPropertyDefinition处理为初始和/或最终属性集中的正确值和位置。\r\n            \r\n","file associated with the event":"与事件关联的文件\r\n","The toolset to remove.":"要删除的工具集。\r\n","The entry points to use in constructing the graph":"用于构建图的入口点\r\n","The lookup used when executing the task to get its outputs.":"执行任务以获取其输出时使用的查找。\r\n","\r\n            serializes IItemType.DisplayName\r\n            ":"\r\n            序列化iitemtype.displayname\r\n            \r\n","\r\n            Receives the build started event for the whole build.\r\n            ":"\r\n            收到整个构建的构建开始事件。\r\n            \r\n","\r\n            The singleton comparer to use for when a fuzzy match is desired\r\n            ":"\r\n            需要使用模糊匹配时使用的单例比较\r\n            \r\n","\r\n            Constructor taking a version, such as \"v2.0\". \r\n            ":"\r\n            构造函数采用版本，例如“ v2.0”。\r\n            \r\n","\r\n            Handler for Status events.\r\n            ":"\r\n            状态事件的处理程序。\r\n            \r\n","\r\n            Returns the minimum importance of messages logged by this logger.\r\n            ":"\r\n            返回该记录器记录的消息的最低重要性。\r\n            \r\n","\r\n            Informs the scheduler of a specific result.\r\n            ":"\r\n            告知调度程序特定结果。\r\n            \r\n","\r\n            Registers a factory to replace one of the defaults.  Creation pattern is inherited from the original.\r\n            ":"\r\n            注册工厂以替换其中一个默认值。创建模式是从原始的。\r\n            \r\n","\r\n            Creates an item with the specified include and include before wildcard expansion.\r\n            This is to support creating items from an include that may have a wildcard expression in it.\r\n            ":"\r\n            使用指定的包含和包含通配符扩展之前创建一个项目。\r\n            这是为了支持创建可能在其中具有通配符表达的包含的项目。\r\n            \r\n","The full path to the project file.":"项目文件的完整路径。\r\n","\r\n            Retrieves the scheduling plan from the previous run.\r\n            ":"\r\n            从上一步中检索计划计划。\r\n            \r\n","\r\n            The latest version available at the time of release\r\n            ":"\r\n            发行时可用的最新版本\r\n            \r\n","\r\n            Project that this item lives in.\r\n            ProjectItems always live in a project.\r\n            Used to get item definitions and project directory.\r\n            ":"\r\n            投影此项目居住。\r\n            ProjectItems总是生活在一个项目中。\r\n            用于获取项目定义和项目目录。\r\n            \r\n","\r\n            Returns true if this element is a \"ContainedApiContracts\" element. \r\n            ":"\r\n            如果此元素是“包含的合同”元素，则返回true。\r\n            \r\n"," property (and hence, would not be localized).\r\n            ":" 财产（因此，不会被本地化）。\r\n            \r\n","\r\n            Determines whether properties and items should be logged on ":"\r\n            确定是否应登录属性和项目\r\n","\r\n            Returns true if this submission is complete.\r\n            ":"\r\n            如果此提交完成，则返回true。\r\n            \r\n","\r\n            Version of Intern that gathers statistics\r\n            ":"\r\n            实习生的版本收集统计数据\r\n            \r\n","\r\n            Creates an otherwise node.\r\n            Caller must add it to the location of choice in the project.\r\n            ":"\r\n            创建一个原本的节点。\r\n            呼叫者必须将其添加到项目中选择的位置。\r\n            \r\n","\r\n            Enter and immediately leave a state, so that any breakpoint can be hit.\r\n            ":"\r\n            输入并立即离开状态，以便可以击中任何断点。\r\n            \r\n","\r\n            Checks if the work set has been marked as completed.\r\n            ":"\r\n            检查工作集是否已标记为已完成。\r\n            \r\n","\r\n            Returns all items that have the specified evaluated include.\r\n            For example, all items that have the evaluated include \"bar.cpp\".\r\n            Typically there will be no more than one, but sometimes there are two items with the\r\n            same path and different item types, or even the same item types. This will return\r\n            them all.\r\n            ":"\r\n            返回所有已评估的指定的项目包括。\r\n            例如，所有具有评估的项目都包括“ bar.cpp”。\r\n            通常不超过一个，但是有时有两个项目\r\n            相同的路径和不同的项目类型，甚至相同的项目类型。这将返回\r\n            商场。\r\n            \r\n","The version of the SDK.":"SDK的版本。\r\n","\r\n            ITaskItem implementation which returns the specified metadata value, unescaped.\r\n            If metadata is not defined, returns empty string.\r\n            ":"\r\n            返回指定的元数据值的ITASKITEM实现，未耗尽。\r\n            如果未定义元数据，请返回空字符串。\r\n            \r\n","\r\n            Location of the task in the project file. \r\n            ":"\r\n            项目文件中任务的位置。\r\n            \r\n","The lookup used for expansion and to receive created items and properties.":"用于扩展和接收创建的项目和属性的查找。\r\n","The exception, if any.":"例外（如果有）。\r\n","\r\n            Serialization class for node for the Data driven project schema XAML\r\n            ":"\r\n            数据驱动项目架构XAML的节点序列化类\r\n            \r\n","\r\n            Location of the project attribute\r\n            ":"\r\n            项目属性的位置\r\n            \r\n","\r\n            The maximum number of nodes that this provider supports. Should\r\n            always be equivalent to the number of different TaskHostContexts\r\n            that exist.\r\n            ":"\r\n            该提供商支持的最大节点数量。应该\r\n            始终等同于不同的任务主持的数量\r\n            存在。\r\n            \r\n","\r\n            Continue on error on the task, if any\r\n            May be empty string\r\n            ":"\r\n            继续执行任务错误，如果有的话\r\n            可能是空字符串\r\n            \r\n","\r\n            The type of the SDK.\r\n            ":"\r\n            SDK的类型。\r\n            \r\n","\r\n            Include value cached for performance\r\n            ":"\r\n            包括为性能缓存的值\r\n            \r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n            If there is an existing property with the same name and no condition,\r\n            updates its value. Otherwise it adds a new property after the last property.\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n            如果存在具有相同名称且没有条件的现有属性，\r\n            更新其价值。否则，它将在最后一个属性之后添加新属性。\r\n            \r\n","\r\n            Location of the Required attribute.\r\n            If there is no such attribute, returns the location of the element,\r\n            in lieu of the default value it uses for the attribute.\r\n            ":"所需属性的位置。\r\n            如果没有此类属性，请返回元素的位置，\r\n            代替用于属性的默认值。\r\n            \r\n","\r\n            Creates a colon-delimited qname from prefix and local name parts.\r\n            ":"\r\n            从前缀和本地名称零件中创建一个结肠划分的QNAME。\r\n            \r\n","\r\n            Create a BinaryReader. It will either be an interning reader or standard binary reader\r\n            depending on whether the interning reader is possible given the buffer and stream.\r\n            ":"\r\n            创建一个二进制阅读器。它要么是实习读者或标准二进制读者\r\n            根据缓冲区和流是否可能，是否可以使用实习生。\r\n            \r\n","The task registration record, or null if none was found.":"任务注册记录，如果没有发现，则无效。\r\n","\r\n            Save the project to the file system, if dirty or the path is different.\r\n            Creates any necessary directories.\r\n            May throw IO related exceptions.\r\n            Clears the Dirty flag.\r\n            ":"\r\n            如果脏或路径不同，则将项目保存到文件系统。\r\n            创建任何必要的目录。\r\n            可能会抛出与IO相关的例外。\r\n            清除肮脏的旗帜。\r\n            \r\n","\r\n            The root directory for this project\r\n            ":"\r\n            该项目的根目录\r\n            \r\n","Returns the new or existing metadatum.":"返回新的或现有的元数据。\r\n","\r\n            Initialize an in-memory, empty ProjectRootElement instance that can be saved later.\r\n            Uses the global project collection.\r\n            ":"\r\n            初始化一个内存，空的项目Rootelement实例，以后可以保存。\r\n            使用全球项目集合。\r\n            \r\n","The solution file to generate a wrapper for.":"解决方案文件以生成包装器。\r\n","\r\n            Delegates the Dispose call the to the underlying BinaryReader.\r\n            ":"\r\n            将处置委托给基础二元阅读器。\r\n            \r\n","The task host to use.":"要使用的任务主机。\r\n","\r\n            Aggregates the specified result with this result and returns the aggregation.\r\n            ":"\r\n            通过此结果聚合指定的结果并返回聚合。\r\n            \r\n","The name of the sender of the event.":"活动发件人的名称。\r\n","\r\n            Clear out all registered loggers so that none are registered.\r\n            ":"\r\n            清除所有注册的登录机，以便没有注册。\r\n            \r\n","\r\n             This method and its overloads are useful for clients that need to inspect all the item elements\r\n             that might refer to a specific item instance. For example, Visual Studio uses it to inspect\r\n             projects with globs. Upon a file system or IDE file artifact change, VS calls this method to find all the items\r\n             that might refer to the detected file change (e.g. 'which item elements refer to \"Program.cs\"?').\r\n             It uses such information to know which elements it should edit to reflect the user or file system changes.\r\n            \r\n             Literal string matching tries to first match the strings. If the check fails, it then tries to match\r\n             the strings as if they represented files: it normalizes both strings as files relative to the current project directory\r\n            \r\n             GetItemProvenance suffers from some sources of inaccuracy:\r\n             - it is performed after evaluation, thus is insensitive to item data flow when item references are present\r\n             (it sees items as they are at the end of evaluation)\r\n            \r\n             This API and its return types are prone to change.\r\n             ":"\r\n             此方法及其过载对于需要检查所有项目元素的客户很有用\r\n             这可能是指特定项目实例。例如，Visual Studio使用它来检查\r\n             带有地球的项目。在文件系统或IDE文件伪影更改时，VS调用此方法以查找所有项目\r\n             这可能是指检测到的文件更改（例如'哪些项目元素是指“ program.cs”？）。\r\n             它使用此类信息来知道应该编辑哪些元素以反映用户或文件系统更改。\r\n            \r\n             字面的字符串匹配试图首先匹配字符串。如果支票失败，则试图匹配\r\n             字符串好像它们表示文件：它相对于当前项目目录将两个字符串归一化为文件\r\n            \r\n             GetItemProvence受到了一些不准确的来源：\r\n              - 在评估后执行，因此在存在项目参考时对项目数据流不敏感\r\n             （它看到了在评估结束时的项目）\r\n            \r\n             此API及其返回类型容易更改。\r\n             \r\n","\r\n            Explicitly grants CPU cores to a request.\r\n            ":"\r\n            明确将CPU内核授予请求。\r\n            \r\n","\r\n            The logger parameters\r\n            ":"\r\n            记录器参数\r\n            \r\n","\r\n            Whether the XML has been modified since it was last loaded or saved.\r\n            ":"\r\n            自上次加载还是保存以来，XML是否已修改。\r\n            \r\n","\r\n            Gets any existing ProjectMetadata on the item, or\r\n            else any on an applicable item definition.\r\n            This is ONLY called during evaluation.\r\n            Does not return built-in metadata, such as \"FullPath\".\r\n            Returns null if not found.\r\n            ":"\r\n            在该项目上获取任何现有的projectMetadata，或\r\n            否则适用的项目定义上的任何内容。\r\n            这仅在评估期间被调用。\r\n            不返回内置元数据，例如“ FullPath”。\r\n            如果找不到的话，返回零。\r\n            \r\n","WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!":"警告：最小的重建优化需要指定100％精确的计算输出！\r\n","Like [ PocketPC | SmartPhone | WindowsCE]\\AssemblyFoldersEx":"喜欢[Pocketpc |智能手机| windowsce] \\ gasemblyFoldersex\r\n","Project file which contains the target":"包含目标的项目文件\r\n","\r\n            Builds a single project file\r\n            ":"\r\n            构建一个项目文件\r\n            \r\n","\r\n            Constructor called by the Evaluator.\r\n            Metadata may be null, indicating no metadata.\r\n            Metadata collection is ordered.\r\n            Assumes ProjectItemGroupTaskMetadataInstance is an immutable type.\r\n            ":"评估器调用的构造函数。\r\n            元数据可能是无效的，表明没有元数据。\r\n            元数据收集被订购。\r\n            假设ProjectItemGrouptaskMetadaTainstance是一种不变的类型。\r\n            \r\n","\r\n            When this ":"\r\n            当这个\r\n","\r\n            Get a fully qualified path to a file in the frameworks root directory.\r\n            ":"\r\n            在“框架根目录”中获取通往文件的完全合格的路径。\r\n            \r\n","\r\n            Look up a simple property reference by the name of the property, e.g. \"Foo\" when expanding $(Foo)\r\n            ":"\r\n            查找一个简单的属性参考，例如该属性的名称，例如扩展$（foo）时“ foo”\r\n            \r\n","\r\n            We use this dictionary to track whether or not we've seen a given\r\n            searchPaths definition before, since the .NET configuration classes\r\n            won't perform this check without respect for case.\r\n            ":"\r\n            我们使用此词典来跟踪我们是否看到了给定的\r\n            搜索路径以前的定义，因为.NET配置类\r\n            不会在没有案件的情况下执行此支票。\r\n            \r\n","\r\n            Save off the contents of the environment variable that specifies whether we should treat higher toolsversions as the current \r\n            toolsversion.  (Some hosts require this.)\r\n            ":"\r\n            保存环境变量的内容，该变量指定我们是否应该将更高的工具视为当前\r\n            工具库。 （有些主机需要这个。）\r\n            \r\n","The message of the reassignment event.":"重新分配事件的信息。\r\n","\r\n            The item set\r\n            ":"\r\n            项目集\r\n            \r\n","The updated item.":"更新的项目。\r\n","\r\n            Handler for target started events\r\n            ":"\r\n            目标启动事件的处理程序\r\n            \r\n","\r\n            Helper to verify that any AllowBuiltInMetadata or AllowCustomMetadata\r\n            specifications are not respected.\r\n            Returns true if it is ok, otherwise false.\r\n            ":"\r\n            助手验证任何允许构成的甲甲米或允许custompomtadata\r\n            规格不符合尊重。\r\n            如果还可以，则返回true，否则为false。\r\n            \r\n","ProjectItem.Rename(string name).\r\n            ":"ProjectItem.Rename（字符串名称）。\r\n            \r\n","\r\n            Don't delete TargetPath metadata from associated files found by RAR.\r\n            ":"\r\n            不要从RAR找到的关联文件中删除目标路径元数据。\r\n            \r\n","\r\n             Add a finished event to the performance counter, so perf numbers can be calculated\r\n            ":"\r\n             将完成的事件添加到性能计数器中，因此可以计算出完美数字\r\n            \r\n","The global properties, used for expansion and to make sure none are overridden.":"用于扩展的全局属性，确保没有被覆盖。\r\n","The build event context for the target.":"目标的构建事件上下文。\r\n","\r\n            Enumerator over all items.\r\n            Exposed for debugging display.\r\n            Ideally the dictionary would be exposed, but there are \r\n            covariance problems. (A dictionary of Key, Value cannot be upcast\r\n            to a Dictionary of Key, IValue).\r\n            ":"\r\n            枚举所有项目。\r\n            暴露于调试显示。\r\n            理想情况下，词典会暴露出来，但是有\r\n            协方差问题。 （关键的字典，值无法升级\r\n            到Key的字典，Ivalue）。\r\n            \r\n","\r\n            Creates a ResumeExecution response.\r\n            ":"\r\n            创建简历响应。\r\n            \r\n","\r\n            The current build submission ID.\r\n            ":"当前的构建提交ID。\r\n            \r\n","\r\n            Load and parse the specified project import, which may have wildcards,\r\n            into one or more ProjectRootElements, if it's Condition evaluates to true\r\n            Caches the parsed import into the provided collection, so future\r\n            requests can be satisfied without re-parsing it.\r\n            ":"\r\n            负载并解析指定的项目导入，可能具有通配符，\r\n            如果条件评估为true\r\n            缓存解析的导入到提供的收藏中，因此未来\r\n            可以在不重新分配的情况下满足请求。\r\n            \r\n","\r\n            Whether the cache should check the timestamp of the file on disk\r\n            whenever it is requested, and update with the latest content of that\r\n            file if it has changed.\r\n            ":"\r\n            缓存是否应检查磁盘上文件的时间戳\r\n            每当请求时，并使用最新内容进行更新\r\n            文件是否已更改。\r\n            \r\n","\r\n            The lowest wave in the current rotation of Change Waves.\r\n            ":"\r\n            当前变化波旋转的最低波。\r\n            \r\n","\r\n            This check is conceptually similar to ":"\r\n            此检查在概念上类似于\r\n","\r\n            This is the only non-private member of this class.\r\n            This is a helper static method so that the caller can just do \"Evaluator.Evaluate(..)\" without\r\n            newing one up, yet the whole class need not be static.\r\n            The optional ProjectInstance is only exposed when doing debugging. It is not used by the evaluator.\r\n            ":"\r\n            这是该课程中唯一的非私人成员。\r\n            这是一种助手静态方法，以便呼叫者只能执行“评估器。\r\n            新的一个，但整个班级都不必静态。\r\n            可选的ProjectInstance仅在进行调试时才会暴露。评估者不使用它。\r\n            \r\n","\r\n            Has the task body been passed to the expander to be expanded\r\n            ":"\r\n            任务主体是否已传递给扩展器\r\n            \r\n","\r\n            Constructor\r\n            Takes the path to SDKManifest.xml and populates the structure with manifest data\r\n            ":"\r\n            构造函数\r\n            走到sdkmanifest.xml并用清单数据填充结构\r\n            \r\n","\r\n            The configuration ID for these results.\r\n            ":"\r\n            这些结果的配置ID。\r\n            \r\n","\r\n            Creates an unparented ProjectUsingTaskBodyElement, wrapping an unparented XmlElement.\r\n            Validates name.\r\n            Caller should then ensure the element is added to the XmlDocument in the appropriate location.\r\n            ":"\r\n            创建一个无与伦比的ProjectingTaskBodylement，包裹无与伦比的XMlelement。\r\n            验证名称。\r\n            然后，呼叫者应确保将元素添加到适当位置的xmldocument中。\r\n            \r\n","\r\n            Check a Project element for known invalid namespace definitions.\r\n            ":"\r\n            检查项目元素是否已知无效的名称空间定义。\r\n            \r\n","\r\n            Constructor for items with no metadata.\r\n            Include may be empty.\r\n            Called before the build when virtual items are added,\r\n            and during the build when tasks emit items.\r\n            Mutability follows the project.\r\n            ":"\r\n            没有元数据的物品的构造函数。\r\n            包含可能是空的。\r\n            添加虚拟项目时构建之前调用\r\n            在构建期间，任务发出项目。\r\n            项目遵循该项目。\r\n            \r\n","List of loggers.":"伐木者列表。\r\n","\r\n            The cache for AppDomain lifetime objects.\r\n            ":"\r\n            AppDomain寿命对象的缓存。\r\n            \r\n","\r\n             <UsingTask TaskName=\"Microsoft.Build.Tasks.Csc\"                     ==> look for the \"Csc\" task in the\r\n                        AssemblyName=\"Microsoft.Build.Tasks\"/>                       weakly-named \"Microsoft.Build.Tasks\" assembly\r\n            \r\n             <UsingTask TaskName=\"t1\"                                            ==> look for the \"t1\" task in the\r\n                        AssemblyName=\"mytasks, Culture=en, Version=1.0.0.0\"/>        strongly-named \"mytasks\" assembly\r\n            \r\n             <UsingTask TaskName=\"foo\"                                           ==> look for the \"foo\" task in the\r\n                        AssemblyFile=\"$(MyDownloadedTasks)\\utiltasks.dll\"/>          \"utiltasks\" assembly file\r\n            \r\n             <UsingTask TaskName=\"UtilTasks.Bar\"                                 ==> invalid task declaration\r\n                        AssemblyName=\"utiltasks.dll\"\r\n                        AssemblyFile=\"$(MyDownloadedTasks)\\\"/>\r\n             ":"\r\n             <\r\n                        assemblyName =“ microsoft.build.tasks”/>弱命名为“ microsoft.build.tasks”汇编\r\n            \r\n             <lustherTask taskname =“ t1” ==>在该任务中寻找“ T1”任务\r\n                        assemblyName =“ mytasks，culture = en，版本= 1.0.0.0”/>强名的“ mytasks”汇编\r\n            \r\n             <usingTask taskname =“ foo” ==>在该任务中寻找“ foo”任务\r\n                        assemblyFile =“ $（myDownloadedTasks）\\ utiltasks.dll”/>“ utiltasks”汇编文件\r\n            \r\n             <lustherTask taskname =“ utiltasks.bar” ==>无效任务声明\r\n                        assemblyName =“ utiltasks.dll”\r\n                        assemblyFile =“ $（myDownloadedTasks）\\”/>\r\n             \r\n","\r\n            Common code for the constructors.\r\n            Applies global properties that are on the collection.\r\n            Global properties provided for the project overwrite any global properties from the collection that have the same name.\r\n            Global properties may be null.\r\n            Tools version may be null.\r\n            ":"\r\n            构造函数的常见代码。\r\n            应用集合上的全局属性。\r\n            为项目提供的全局属性覆盖具有相同名称的集合中的任何全局属性。\r\n            全局属性可能为零。\r\n            工具版本可能为空。\r\n            \r\n","\r\n            Event handler for the LoggingService's OnLoggingThreadException event.\r\n            ":"\r\n            Loggingservice的onLoggingThreadException事件的活动处理程序。\r\n            \r\n","\r\n            Use this for var sr = new StreamReader(path)\r\n            ":"\r\n            将其用于var sr = new StreamReader（路径）\r\n            \r\n","\r\n            External projects support.\r\n            Allow for creating a local representation to external construction objects derived from ":"\r\n            外部项目支持。\r\n            允许创建局部表示形式\r\n","\r\n            True if this is a request to acquire resources, false if this is a request to release resources.\r\n            ":"\r\n            是的，如果这是获取资源的请求，如果这是发布资源的请求，false。\r\n            \r\n","\r\n            Adds an item with metadata to the project.\r\n            Metadata may be null.\r\n            ":"\r\n            将带有元数据的项目添加到该项目中。\r\n            元数据可能是无效的。\r\n            \r\n","\r\n            Moves past all whitespace starting at the specified index.\r\n            Returns the next index, possibly the string length.\r\n            ":"\r\n            从指定的索引开始移动所有空格。\r\n            返回下一个索引，可能是字符串长度。\r\n            \r\n","\r\n            Generates a ProjectItemElement representing this instance.\r\n            ":"\r\n            生成代表此实例的projectItemelement。\r\n            \r\n","\r\n            Initialize the Forwarding Table with the default values\r\n            ":"\r\n            用默认值初始化转发表\r\n            \r\n","\r\n            Handles a response from the main node.\r\n            ":"\r\n            处理主节点的响应。\r\n            \r\n"," only used for deserializing items.\r\n            The goal is to minimize overhead when representing deserialized items.\r\n            Used by node packet translator and binary logger.\r\n            ":" 仅用于挑选物品。\r\n            目的是在代表必不可少的项目时最小化开销。\r\n            由节点数据包翻译器和二进制记录器使用。\r\n            \r\n","\r\n            We are blocked because we have yielded control\r\n            ":"\r\n            我们之所以被阻止，是因为我们产生了控制\r\n            \r\n","\r\n            Name of the property used to select which sub-toolset to use. \r\n            ":"\r\n            用于选择要使用哪个子型的属性的名称。\r\n            \r\n","\r\n            Invokes the specified targets using Dev9 behavior.  \r\n            ":"\r\n            使用DEV9行为调用指定的目标。\r\n            \r\n","A list of folders in the order which they should be used when looking for references in the SDK":"在SDK中寻找参考时应使用的顺序中的文件夹列表\r\n","\r\n            The set of functions that called during an item transformation, e.g. @(CLCompile->ContainsMetadata('MetaName', 'metaValue')).\r\n            ":"\r\n            在项目转换期间调用的一组函数，例如@（clcompile-> contrainsmetadata（'metaname'，'metavalue'））。\r\n            \r\n","\r\n            The length of the captured substring.\r\n            ":"\r\n            捕获的子弦的长度。\r\n            \r\n","\r\n            Shutdown the mux logger and clear out any state\r\n            ":"\r\n            关闭MUX记录仪并清除任何状态\r\n            \r\n","CommandLine":"命令行\r\n","\r\n            Whether the logger should flush aggressively to disk.\r\n            Default is true. This preserves the most information in the case\r\n            of a crash, but may slow the logger down.\r\n            ":"\r\n            记录仪是否应积极冲洗到磁盘。\r\n            默认是正确的。这保留了此案中的最多信息\r\n            崩溃，但可能会减慢记录器的速度。\r\n            \r\n","\r\n            Intrinsic function reverses the item list.\r\n            ":"\r\n            内在功能逆转项目列表。\r\n            \r\n","\r\n            Signal that we are done with this bucket.\r\n            ":"\r\n            信号表明我们已经完成了这个水桶。\r\n            \r\n","\r\n            Get display string for this node for use in the debugger.\r\n            ":"\r\n            获取此节点的显示字符串，以便在调试器中使用。\r\n            \r\n","The Build Component Host to use.":"构建组件主机要使用。\r\n","\r\n            Location of the returns attribute, if any\r\n            ":"\r\n            返回属性的位置，如果有的话\r\n            \r\n","\r\n            Enables or disables emitting a default error when a task fails without logging errors\r\n            ":"\r\n            启用或禁用任务失败而无需记录错误时发出默认错误\r\n            \r\n","\r\n            The MSBuild Scheduler\r\n            ":"\r\n            MSBUILD调度程序\r\n            \r\n","O(n)":"上）\r\n","\r\n            Used to deserialize the item type information \r\n            ":"\r\n            用于对项目类型信息进行挑选\r\n            \r\n","\r\n            This method takes a string representing one of the project's unique names (guid), and\r\n            returns the corresponding \"friendly\" name for this project.\r\n            ":"\r\n            此方法采用一个代表项目的唯一名称之一（GUID）的字符串，并且\r\n            返回该项目的相应“友好”名称。\r\n            \r\n","\r\n            Location of the dependsOnTargets\r\n            ":"\r\n            依赖性的位置\r\n            \r\n","\r\n                Holds various information about the current msbuild execution that the cache might use.\r\n                The cache may need to know about the top level projects or the entire project graph, so MSBuild\r\n                provides a graph when one is available. When it isn't available, MSBuild provides the top level projects\r\n                and the plugin can construct its own graph based on those.\r\n                So either ":"\r\n                持有有关缓存可能使用的当前MSBUILD执行的各种信息。\r\n                缓存可能需要了解顶级项目或整个项目图，因此MSBUILD\r\n                可用时提供图形。当不可用时，MSBuild提供顶级项目\r\n                插件可以基于这些插件构建自己的图表。\r\n                所以\r\n","Patterns not to expand.":"模式不扩展。\r\n","\r\n            Returns a list of items with the specified item type.\r\n            \r\n            If there are no items of this type, returns an empty list.\r\n            ":"\r\n            返回带有指定项目类型的项目列表。\r\n            \r\n            如果没有此类型的项目，请返回一个空列表。\r\n            \r\n","\r\n            Gets the cached configuration which matches the specified configuration\r\n            ":"\r\n            获取与指定配置匹配的缓存配置\r\n            \r\n","\r\n            Writes out configs in order of how often they are seen in the hierarchy.\r\n            ":"\r\n            按顺序列出配置在层次结构中看到的频率。\r\n            \r\n","The exception to be logged as a warning":"记录的例外是警告\r\n","\r\n            Constructor over a BuildRequestConfiguration.\r\n            ":"\r\n            构建器上的buildrequestConfiguration。\r\n            \r\n","\r\n            Sets the specified metadata.  Discards the xml part except for the name.\r\n            Discards the location of the original element. This is not interesting in the Execution world\r\n            as it should never be needed for any messages, and is just extra bulk.\r\n            Predecessor is discarded as it is only needed for design time.\r\n            ":"\r\n            设置指定的元数据。放弃XML零件，除了名称。\r\n            丢弃原始元素的位置。这在执行世界中并不有趣\r\n            因为任何消息都不需要它，并且只是额外的批量。\r\n            前任被丢弃，因为仅在设计时间内需要它。\r\n            \r\n","\r\n            This field is mandatory and culture invariant.\r\n            ":"\r\n            该领域是强制性的，文化不变。\r\n            \r\n","\r\n            Adds a new item to the collection of all items ignoring condition.\r\n            ":"\r\n            将新项目添加到所有忽略条件的项目的集合中。\r\n            \r\n","\r\n            The name of the file.\r\n            ":"\r\n            文件的名称。\r\n            \r\n","projectBuildEventContext is null":"ProjectBuildEventContext为null\r\n","Resolver loading strategy.":"解析器加载策略。\r\n","true, if successful":"是的，如果成功\r\n","\r\n            Locals types names. We only have these because 'Built In' has a space,\r\n            else we would use LocalsTypes enum names.\r\n            Note: This should match LocalsTypes enum.\r\n            ":"\r\n            当地人类型名称。我们之所以拥有这些，是因为“内置”有一个空间，\r\n            否则，我们将使用localstypes枚举。\r\n            注意：这应该匹配本地概论。\r\n            \r\n","\r\n            returns the .NETFramework versions lessthanOrEqualTo 3.5 installed in the machine\r\n            Only returns Fx versions lessthanOrEqualTo 3.5 if DNFx3.5 is installed\r\n            ":"\r\n            返回.netFramework版本Lesshanorequalto 3.5机器中安装了\r\n            如果安装了DNFX3.5\r\n            \r\n","\r\n            The Custom logging event\r\n            ":"\r\n            自定义伐木活动\r\n            \r\n","\r\n            This method is called when the current request needs to build a target which is already in progress on this configuration, but which\r\n            is being built by another request.\r\n            ":"\r\n            当当前请求需要构建已经在此配置上正在进行的目标时，此方法是调用的\r\n            是由另一个请求构建的。\r\n            \r\n","\r\n            ITaskItem implementation which sets metadata.\r\n            ":"\r\n            设置元数据的itaskItem实现。\r\n            \r\n","\r\n            The list of targets specified to use.\r\n            ":"\r\n            指定使用的目标列表。\r\n            \r\n","\r\n            Serializes BuildEventArgs-derived objects into a provided BinaryWriter\r\n            ":"\r\n            将buildEventargs衍生的对象序列化为提供的二进制作者\r\n            \r\n","The project instance":"项目实例\r\n","Project collection":"项目收集\r\n"," Complexity":" 复杂\r\n","The string with item metadata expanded in-place, escaped.":"带有项目元数据的字符串在现场扩展，逃脱了。\r\n","\r\n            Retrieves all of the blocked requests.\r\n            ":"\r\n            检索所有阻止的请求。\r\n            \r\n","\r\n            Retrieves a BuildResult for the specified configuration.\r\n            ":"\r\n            检索指定配置的buildResult。\r\n            \r\n"," for the comparer.":" 用于比较。\r\n","\r\n            Retrieves a request which has been assigned to a node and is in the executing, blocked or ready states.\r\n            ":"\r\n            检索已分配给节点的请求，并在执行，阻止或就绪状态中。\r\n            \r\n","\r\n            A lookup cache of property names to properties.\r\n            ":"属性名称的查找缓存到属性。\r\n            \r\n","\r\n                Exposes the globbing semantics of the MSBuild engine.\r\n            ":"\r\n                暴露了MSBUILD引擎的全球语义。\r\n            \r\n","\r\n            Adds a span to be concatenated.\r\n            ":"\r\n            添加一个要连接的跨度。\r\n            \r\n","Returned if a configuration with the specified id is not in the cache.":"如果没有指定ID的配置不在缓存中，则返回。\r\n","\r\n            Returns the line number if available, else 0.\r\n            IXmlLineInfo member.\r\n            ":"\r\n            如果有的话，将返回行号，else 0。\r\n            ixmllineinfo成员。\r\n            \r\n","\r\n            Types of locals relevant to the property pass\r\n            ":"\r\n            与财产通行证有关的当地人类型\r\n            \r\n","\r\n            Enumerator over the entries in this table\r\n            ":"\r\n            该表中的条目上的枚举者\r\n            \r\n","The global properties. May be null.":"全局属性。可能是无效的。\r\n","\r\n            Invokes the OnBlockedRequest event\r\n            ":"\r\n            调用OnBlockedRequest活动\r\n            \r\n","\r\n            The time this request started building.\r\n            ":"\r\n            该请求开始构建的时间。\r\n            \r\n","\r\n            The packet factory used to route packets from the node.\r\n            ":"\r\n            数据包工厂用于从节点路由数据包。\r\n            \r\n","\r\n            The source of the property.\r\n            ":"\r\n            属性的来源。\r\n            \r\n","\r\n            Returns the runtime version the attribute was constructed with,\r\n            e.g., \"v2.0\"\r\n            ":"\r\n            返回运行时版本属性是由\r\n            例如，“ v2.0”\r\n            \r\n"," The importing element for this import. ":" 此导入的导入元素。\r\n","\r\n            This interface represents a metadata object.\r\n            ":"\r\n            该界面代表一个元数据对象。\r\n            \r\n","When true, metadata which is not explicitly-specified here but which is present on the target\r\n            item should be removed.  When false, only explicitly-specified modifications apply.":"如果是的，则在此处未明确指定但存在于目标上的元数据\r\n            项目应删除。当错误时，仅适用明确指定的修改。\r\n","\r\n            Location of the remove, if any.\r\n            ":"\r\n            删除的位置（如果有）。\r\n            \r\n","MSBuild engine will call this to initialize the factory. This should initialize the factory enough so that the factory can be asked\r\n            whether or not task names can be created by the factory.":"MSBUILD引擎将其称为初始化工厂。这应该足够初始化工厂，以便可以询问工厂\r\n            是否可以由工厂创建任务名称。\r\n","\r\n            Returns the filename of the project to build.\r\n            ":"\r\n            返回项目的文件名构建。\r\n            \r\n","\r\n            Add the guid of a referenced project to our dependencies list.\r\n            ":"\r\n            将引用项目的GUID添加到我们的依赖项列表中。\r\n            \r\n","\r\n            Given a Registered task record and a task name. Check create an instance of the task factory using the record. \r\n            If the factory is a assembly task factory see if the assemblyFile has the correct task inside of it.\r\n            ":"\r\n            给定注册的任务记录和一个任务名称。使用记录来检查任务工厂的实例。\r\n            如果工厂是一个装配任务工厂，请查看汇编费是否内部具有正确的任务。\r\n            \r\n","The root to remove":"删除的根\r\n","\r\n            description of an item vector with a transform, right hand side \r\n            ":"\r\n            具有转换，右侧的项目向量的描述\r\n            \r\n","\r\n            Element containing a bucket of contracts\r\n            ":"\r\n            包含一桶合同的元素\r\n            \r\n","\r\n            Implementation of Dispose pattern.\r\n            ":"\r\n            实施处置模式。\r\n            \r\n","\r\n            True if SearchData.DirectoryPattern is non-null and we have descended into a directory that matches the pattern.\r\n            ":"\r\n            没错，如果searchData.DirectoryPattern是非编号的，并且我们已进入与模式匹配的目录。\r\n            \r\n","\r\n            The target was not skipped or the skip reason was unknown.\r\n            ":"\r\n            目标没有跳过或跳过原因未知。\r\n            \r\n","\r\n            Exposes the underlying message field without side-effects.\r\n            Used for serialization.\r\n            ":"\r\n            公开没有副作用的基础消息字段。\r\n            用于序列化。\r\n            \r\n","\r\n            Whether the graph build has started.\r\n            ":"\r\n            图形构建是否已开始。\r\n            \r\n","\r\n            The build system parameters.\r\n            ":"\r\n            构建系统参数。\r\n            \r\n","\r\n            Gets the fully qualified path to the system directory i.e. %SystemRoot%\\System32\r\n            ":"\r\n            获取完全合格的系统目录，即％SystemRoot％\\ System32\r\n            \r\n","\r\n            This class could be improved to do partial (minimal) reevaluation: at present we wipe all state and start over.\r\n            ":"\r\n            可以改进此类的部分（最小）重新评估：目前，我们擦除所有状态并重新开始。\r\n            \r\n","\r\n            Multiproc aware initialization\r\n            ":"\r\n            MultipRoc意识到初始化\r\n            \r\n","The type of items this factory can clone from.":"该工厂可以从中克隆的物品类型。\r\n","\r\n            The request on which we are blocked, if any.\r\n            ":"\r\n            如果有的话，我们被阻止的请求。\r\n            \r\n","The new configuration id for this request.":"此请求的新配置ID。\r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n            Creates a usingtask at the end of the project.\r\n            Exactly one of assemblyName or assemblyFile must be null.\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n            在项目的末尾创建一个使用TASK。\r\n            恰好是汇编名称或组件框架之一必须为空。\r\n            \r\n","True if this should be considered an error target.":"是的，如果应该将其视为错误目标。\r\n","The logging service":"伐木服务\r\n","\r\n            Processes the parameters given to the logger from MSBuild.\r\n            ":"\r\n            处理从MSBuild提供给记录器的参数。\r\n            \r\n","The project to compare with.":"与之比较的项目。\r\n","\r\n            Class used to track time accumulated during scheduling.\r\n            ":"\r\n            课程用于跟踪计划期间积累的时间。\r\n            \r\n","\r\n            The factory used to construct instances of the component.\r\n            ":"\r\n            工厂用于构建组件的实例。\r\n            \r\n","\r\n            This method adds the request in the specified submission to the set of requests being handled by the scheduler.\r\n            ":"\r\n            此方法将指定提交中的请求添加到调度程序正在处理的一组请求中。\r\n            \r\n","\r\n            The global properties evaluation occurred with.\r\n            Needed by the build as they traverse between projects.\r\n            ":"进行全球属性评估。\r\n            构建在项目之间穿越时需要。\r\n            \r\n","\r\n            Unloads the specific project specified.\r\n            Host should call this when they are completely done with the project.\r\n            If project was not already loaded, throws InvalidOperationException.\r\n            ":"\r\n            卸载指定的特定项目。\r\n            主机在项目完全完成时应将其调用。\r\n            如果尚未加载项目，则会引发无效的Exception。\r\n            \r\n","\r\n            This constructor allows event data to be initialized.\r\n            Sender is assumed to be \"MSBuild\". This constructor allows the timestamp to be set as well\r\n            ":"\r\n            该构造函数允许初始化事件数据。\r\n            假定发件人是“ msbuild”。该构造函数也允许设置时间戳\r\n            \r\n","\r\n            Structure to represent a target platform sdk\r\n            ":"\r\n            代表目标平台SDK的结构\r\n            \r\n","\r\n            Request engine\r\n            ":"\r\n            请求引擎\r\n            \r\n","\r\n            Returns the content of any exception dump files modified\r\n            since the provided time, otherwise returns an empty string.\r\n            ":"返回任何例外转储文件修改的内容\r\n            由于提供的时间，否则返回一个空字符串。\r\n            \r\n","\r\n            Expand all bare metadata\r\n            ":"扩展所有裸露的元数据\r\n            \r\n","\r\n            The global build request ID which issued the request leading to this result.\r\n            ":"\r\n            发布该结果的全局构建请求ID。\r\n            \r\n","\r\n            Start the process with a normal priority class\r\n            ":"\r\n            从正常的优先类开始过程\r\n            \r\n","The build context through which warnings will be logged as errors.":"警告将以错误记录的构建上下文。\r\n","List of platform sdks":"平台SDK列表\r\n","\r\n            The TaskBuilder is one of two components related to building tasks, the other being the TaskExecutionHost.  The TaskBuilder is\r\n            responsible for all parts dealing with the XML/task declaration.  It determines if the task is intrinsic or extrinsic,\r\n            looks up the task in the task registry, determines the task parameters and requests them to be set, and requests outputs\r\n            when task execution has been completed.  It is not responsible for reflection over the task instance or anything which\r\n            requires dealing with the task instance directly - those actions are handled by the TaskExecutionHost.\r\n            ":"\r\n            TaskBuilder是与构建任务相关的两个组件之一，另一个是taskexecutionHost。 Taskbuilder是\r\n            负责涉及XML/任务声明的所有零件。它确定任务是固有的还是外在的，\r\n            查找任务注册表中的任务，确定任务参数并请求将其设置为设置，并请求输出\r\n            任务执行完成后。它对列为实例的反思或任何内容概不负责\r\n            需要直接处理任务实例 - 这些操作由taskexecutionhost处理。\r\n            \r\n","Source that should be removed from the graph":"应该从图表中删除的来源\r\n","\r\n            Builds the request contained in the specified entry.\r\n            ":"\r\n            构建指定条目中包含的请求。\r\n            \r\n","ILogger":"伊洛格\r\n","\r\n            Handler for which project root element just got added to the cache\r\n            ":"\r\n            处理程序刚刚添加到缓存的项目根元素的处理程序\r\n            \r\n","The type of item.":"项目类型。\r\n","\r\n            Default constructor \r\n            ":"\r\n            默认构造函数\r\n            \r\n","\r\n            Whether it can be evaluated as numeric\r\n            ":"是否可以评估为数字\r\n            \r\n","\r\n            This interface extends IBuildEngine to log telemetry.\r\n            ":"\r\n            该界面扩展了IbuildEngine以记录遥测。\r\n            \r\n","\r\n            The build-time event source\r\n            ":"\r\n            构建时间事件源\r\n            \r\n","\r\n            Implementation of IKeyed exposing the metadata name, so metadata\r\n            can be put in a dictionary conveniently.\r\n            ":"\r\n            实施IKEYED公开元数据名称，因此元数据\r\n            可以方便地放入字典中。\r\n            \r\n","\r\n            Construct over an existing project file, evaluating with the global project collection's\r\n            global properties and default tools version.\r\n            Project is added to the global project collection.\r\n            Throws InvalidProjectFileException if the evaluation fails.\r\n            Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.\r\n            May throw IO-related exceptions.\r\n            ":"\r\n            通过现有项目文件构建，用全球项目集合的评估\r\n            全局属性和默认工具版本。\r\n            项目被添加到全球项目集合中。\r\n            如果评估失败，则投掷无效的fileException。\r\n            如果项目集合中已经加载了等效的项目，则投掷无效的exception。\r\n            可能会抛出与IO相关的例外。\r\n            \r\n","The name of the parent target.":"父目标的名称。\r\n","\r\n            Overridden to verify that the potential parent and siblings\r\n            are acceptable. Throws InvalidOperationException if they are not.\r\n            ":"\r\n            覆盖以验证潜在的父母和兄弟姐妹\r\n            可以接受。如果不是，则抛出无效的exception。\r\n            \r\n","\r\n            Use this for File.GetAttributes()\r\n            ":"\r\n            将其用于file.getAttributes（）\r\n            \r\n","The string reference to compare to.":"字符串引用比较。\r\n","The set of paths that contain files that are to be ignored during up to date check":"包含最新检查中要忽略的文件的一组路径\r\n","\r\n            Constructor for a blocker used by yielding requests.\r\n            ":"\r\n            通过产生请求使用的阻滞剂的构造函数。\r\n            \r\n","\r\n            This method is called within XmlDocument by all other\r\n            Load(..) overloads, and by LoadXml(..), so however the client loads XML,\r\n            we will grab the reader.\r\n            ":"\r\n            所有其他\r\n            加载（..）过载，以及通过LOADXML（..），因此客户端加载XML，\r\n            我们将抓住读者。\r\n            \r\n","\r\n            The full path to the project to build.\r\n            ":"\r\n            通往项目建设的完整途径。\r\n            \r\n","Logger description which describes how to create the forwarding logger, the logger description cannot have been used before":"Logger描述描述了如何创建转发记录器，在之前无法使用记录器描述\r\n","\r\n            Normal importance\r\n            ":"\r\n            正常的重要性\r\n            \r\n","\r\n            Gets the canonicalized full path of the provided path and ensures it contains the correct directory separator characters for the current operating system.\r\n            ":"\r\n            获取所提供路径的规范化完整路径，并确保其包含当前操作系统的正确目录分离器字符。\r\n            \r\n","\r\n            The formatting to open with. Must match the formatting in the collection to succeed.\r\n            ":"\r\n            打开的格式。必须匹配集合中的格式才能成功。\r\n            \r\n","The task in which the warning occurred":"警告发生的任务\r\n","\r\n            Marks this entry as complete and sets the final results.\r\n            ":"\r\n            将此条目标记为完整，并设置最终结果。\r\n            \r\n",".\r\n            When this happens, the state of this object does not change.\r\n            \r\n            Reloading from an XMLReader will retain the previous root element location (":"。\r\n            发生这种情况时，该对象的状态不会改变。\r\n            \r\n            从XMLReader重新加载将保留先前的根元素位置（\r\n","\r\n             This method will be called from multiple threads in asynchronous mode.\r\n            \r\n             Determine where to send the buildevent either to the filters or to a specific sink.\r\n             When in Asynchronous mode the event should to into the logging queue (as long as we are initialized).\r\n             In Synchronous mode the event should be routed to the correct sink or logger right away\r\n             ":"\r\n             此方法将从异步模式下从多个线程调用。\r\n            \r\n             确定将buildEvent发送到过滤器或特定水槽的位置。\r\n             在异步模式下，事件应进入记录队列（只要我们初始化）。\r\n             在同步模式下，应立即将事件路由到正确的水槽或记录仪\r\n             \r\n","\r\n            This object is only passed to the Evaluator.\r\n            ":"\r\n            此对象仅传递给评估器。\r\n            \r\n","\r\n            Default descriptions for locations that are used in case a description is not provided\r\n            ":"\r\n            在未提供描述时使用的位置的默认描述\r\n            \r\n","\r\n            Per node read buffers\r\n            ":"\r\n            每个节点读取缓冲区\r\n            \r\n","\r\n            Walks through the set of tasks for this target and processes them by handing them off to the TaskBuilder.\r\n            ":"\r\n            浏览该目标的一组任务，并将其交给任务构建器来处理它们。\r\n            \r\n","\r\n            Low importance, appears in more verbose logs\r\n            ":"\r\n            重要性低，出现在更多的详细日志中\r\n            \r\n","\r\n            overridden so we can track previously seen property names\r\n            ":"\r\n            覆盖以便我们可以跟踪以前看到的属性名称\r\n            \r\n","\r\n            Neither this class nor any of its constituents are allowed to have\r\n            references to any of the Construction or Evaluation objects.\r\n            This class is immutable except for adding instance items and setting instance properties.\r\n            It only exposes items and properties: targets, host services, and the task registry are not exposed as they are only the concern of build.\r\n            Constructors are internal in order to direct users to Project class instead; these are only createable via Project objects.\r\n            ":"\r\n            这个班级和任何选民都不能拥有\r\n            引用任何构建或评估对象。\r\n            此类是不可变的，除了添加实例项目和设置实例属性。\r\n            它仅揭示项目和属性：目标，主机服务和任务注册表并未公开，因为它们仅是构建的关注点。\r\n            构造函数是内部的，以指导用户进入项目类；这些仅通过项目对象创建。\r\n            \r\n","\r\n            If the \"input\" does not exist on disk, we treat its disappearance as a change, and consider the \"input\" to be newer\r\n            than the \"output\", regardless of whether the \"output\" itself exists.\r\n            ":"\r\n            如果“输入”在磁盘上不存在，我们将其消失视为变化，并将“输入”视为较新\r\n            无论“输出”本身是否存在，都比“输出”。\r\n            \r\n","The result of the up-to-date check.":"最新检查的结果。\r\n","The packet type for which the handler should be registered.":"应为处理程序注册的数据包类型。\r\n","\r\n            Unfortunately the attribute name chosen in Whidbey was \"ItemName\" not ItemType.\r\n            ":"\r\n            不幸的是，在Whidbey中选择的属性名称是“ ItemName”而不是ItemType。\r\n            \r\n","\r\n            Subtype of this ":"\r\n            亚型\r\n","\r\n             Creates the target used to build all of the references in the traversal project.\r\n            ":"\r\n             创建用于构建遍历项目中所有参考的目标。\r\n            \r\n","\r\n            The one and only project root element cache to be used for the build\r\n            on this out of proc node.\r\n            ":"\r\n            用于构建的唯一项目根元素缓存\r\n            从Proc节点出发。\r\n            \r\n","RemoveChild":"Removechild\r\n","\r\n            Expands the metadata in the match provided into a string result.\r\n            The match is expected to be the content of a transform.\r\n            For example, representing \"%(Filename.obj)\" in the original expression \"@(Compile->'%(Filename.obj)')\".\r\n            ":"\r\n            将匹配项中的元数据扩展为字符串结果。\r\n            比赛预计将是转换的内容。\r\n            例如，在原始表达式中代表“％（filename.obj）”@（compile->'％（filename.obj）'）。\r\n            \r\n","\r\n            Constructor helper to load an XmlDocumentWithLocation from a path.\r\n            Assumes path is already normalized.\r\n            May throw InvalidProjectFileException.\r\n            Never returns null.\r\n            Does NOT add to the ProjectRootElementCache. Caller should add after verifying subsequent MSBuild parsing succeeds.\r\n            ":"\r\n            从路径加载XmldocumentWithLocation的构造助手。\r\n            假设路径已经归一化。\r\n            可能会抛出无效的fileException。\r\n            永远不会返回零。\r\n            不会添加到ProjectRootelementCache中。验证后续的MSBUILD解析成功后，应添加呼叫者。\r\n            \r\n","If this toolset property is the \"MSBuildBinPath\" property, we will return the value in this parameter.":"如果此工具集属性是“ msbuildbinpath”属性，我们将返回此参数中的值。\r\n","\r\n            Updates the state of the specified request.\r\n            ":"\r\n            更新指定请求的状态。\r\n            \r\n","\r\n            An enumerable wrapper for properties that clones properties as they are requested,\r\n            so that writes have no effect on the properties.\r\n            ":"\r\n            一个枚举的包装器，用于限制要求属性的属性包装器，\r\n            因此，写作对属性没有影响。\r\n            \r\n","\r\n            Instantiates a project collection with no global properties or loggers that reads toolset \r\n            information from the configuration file and registry.\r\n            ":"\r\n            实例化一个没有读取工具集的全局属性或登录器的项目集合\r\n            来自配置文件和注册表的信息。\r\n            \r\n","\r\n            Cache of names of properties on this type whose names are ambiguous\r\n            ":"\r\n            该类型上属性名称的名称的缓存，其名称是模棱两可的\r\n            \r\n","\r\n            Parent should only be set by ProjectElementContainer.\r\n            ":"\r\n            父母只能由ProjectElementContainer设置。\r\n            \r\n"," for use by a prospective UI client. \r\n            ":" 供潜在的UI客户端使用。\r\n            \r\n","\r\n            Creates an unparented ProjectOtherwiseElement, wrapping an unparented XmlElement.\r\n            Caller should then ensure the element is added to a parent.\r\n            ":"\r\n            创建一个无与伦比的Project photeTherewiselement，包裹无与伦比的XMlelement。\r\n            然后，呼叫者应确保将元素添加到父。\r\n            \r\n","\r\n            Returns a unique evaluation id\r\n            ":"\r\n            返回独特的评估ID\r\n            \r\n","\r\n            If MSBUILDCUSTOMSCHEDULER = CustomSchedulerForSQL, the default multiplier for the amount by which\r\n            the count of configurations on any one node can exceed the average configuration count is 1.1 --\r\n            + 10%.\r\n            ":"\r\n            如果msbuildcustomscheduler = customschedulerforsql，则默认乘数的数量\r\n            任何一个节点上的配置计数都可以超过平均配置计数为1.1-\r\n            + 10％。\r\n            \r\n","\r\n            Constructs a response indicating what type of node we need to create.\r\n            ":"\r\n            构建响应，指示我们需要创建哪种类型的节点。\r\n            \r\n","The targeted framework version (2.0, 3.0, 3.5, 4.0, etc).":"目标框架版本（2.0、3.0、3.5、4.0等）。\r\n","\r\n            The provider for out-of-proc nodes.  This manages the lifetime of external MSBuild.exe processes\r\n            which act as child nodes for the build system.\r\n            ":"\r\n            传播节点的提供商。这管理了外部msbuild.exe进程的寿命\r\n            它充当构建系统的子节点。\r\n            \r\n","\r\n                The file name part\r\n            ":"\r\n                文件名部分\r\n            \r\n","\r\n            Gets the key for the element\r\n            ":"\r\n            获取元素的关键\r\n            \r\n","\r\n            The singleton comparer.\r\n            ":"\r\n            Singleton比较。\r\n            \r\n","\r\n            Wrapped worker thread\r\n            ":"\r\n            包裹的工人线程\r\n            \r\n","Warning message in canonical format":"警告消息以典型格式\r\n","\r\n            An implementation of a node provider for in-proc nodes.\r\n            ":"\r\n            用于程序内节点的节点提供商的实现。\r\n            \r\n","Whether the OriginalItemSpec should be added as a piece\r\n             of magic metadata. For copying of items this is useful but for cloning of items this adds\r\n             additional metadata which is not useful because the OriginalItemSpec will always be identical\r\n             to the ItemSpec, and the addition will and will cause copy-on-write to trigger.\r\n             ":"是否应添加原始列型者\r\n             魔术元数据。要复制项目这很有用，但对于物品的克隆，这会增加\r\n             其他元数据无用，因为OriginalItemspec将始终是相同的\r\n             到ItemSpec，并将添加的意愿并将导致抄袭触发。\r\n             \r\n","\r\n            For now it's just the ProjectImportArchive.\r\n            ":"\r\n            目前，这只是ProjectImportarchive。\r\n            \r\n","\r\n            Returns an enumerator that provides copies of the items\r\n            in the backing store.\r\n            ":"\r\n            返回提供项目副本的枚举者\r\n            在后备店。\r\n            \r\n","\r\n            Constructor to initialize all parameters.\r\n            Sender field cannot be set here and is assumed to be \"MSBuild\"\r\n            ":"初始化所有参数的构造函数。\r\n            发件人字段不能在此处设置，并且假定为“ msbuild”\r\n            \r\n","\r\n            Never needs to consult the strong cache as well, since if the item is in there, it will\r\n            not have left the weak cache.\r\n            If item is found, boosts it to the top of the strong cache.\r\n            ":"\r\n            永远不需要咨询强缓存，因为如果物品在那里，它将\r\n            没有留下薄弱的缓存。\r\n            如果找到了项目，请将其提升到强缓存的顶部。\r\n            \r\n","\r\n            The TargetStarted logging event\r\n            ":"\r\n            TargetStarted Logging活动\r\n            \r\n","\r\n            Creates a ProjectInstance from an external created ":"\r\n            从外部创建的\r\n","\r\n                An abstract interface class to providing real-time logging and status while resolving\r\n                an SDK.\r\n            ":"\r\n                在解决时提供实时记录和状态的抽象接口类\r\n                SDK。\r\n            \r\n","\r\n            Bit flag enum that specifies how a string representing an item matched against an itemspec.\r\n            ":"\r\n            位标志枚举，指定代表项目与itemspec匹配的字符串。\r\n            \r\n","ToolsVersion to use as the default ToolsVersion for this version of MSBuild.":"用作此版本的MSBUILD的默认工具交换。\r\n","The F1-help keyword for the host IDE (can be null).":"主机IDE的F1-HELP关键字（可以为null）。\r\n","\r\n            Friendly name associated with this element\r\n            ":"\r\n            与此元素相关的友好名称\r\n            \r\n","\r\n            The accumulated time for this counter.\r\n            ":"\r\n            该计数器的累积时间。\r\n            \r\n","\r\n            Event signalled when all nodes have shutdown.\r\n            ":"\r\n            当所有节点都关闭时，事件发出了信号。\r\n            \r\n","\r\n            Number of pieces of metadata on this item\r\n            ":"\r\n            此项目上的元数据数量\r\n            \r\n","\r\n            Factory for component construction.\r\n            ":"\r\n            零部件结构的工厂。\r\n            \r\n","The value \"{0}\" is not of type \"{1}\" and cannot be used in this generic collection.":"值“ {0}”不是类型“ {1}”的值，也不能在此通用集合中使用。\r\n","\r\n            This class represents a token in the Complex Conditionals grammar.  It's\r\n            really just a bag that contains the type of the token and the string that\r\n            was parsed into the token.  This isn't very useful for operators, but\r\n            is useful for strings and such.\r\n            ":"\r\n            该类代表复杂条件语法中的令牌。它是\r\n            真的只是一个包含令牌类型和字符串的包\r\n            被解析为令牌。这对运营商来说不是很有用，但是\r\n            对于字符串等有用。\r\n            \r\n","\r\n            Changes the name.\r\n            ":"\r\n            更改名称。\r\n            \r\n","\r\n            Raise one of the events that is appropriate for the type of the BuildEventArgs\r\n            ":"\r\n            提出适合BuildEventargs类型的事件之一\r\n            \r\n","\r\n            TargetedSDKArchitecture metadata name\r\n            ":"\r\n            targinaledsdkarchitecture元数据名称\r\n            \r\n","[optional] project full path. Can be null in which case function will return all projects":"[可选]项目完整路径。可以为null，在这种情况下将返回所有项目\r\n","\r\n            BuildRequestEntry holds a build request and associated state data.\r\n            ":"\r\n            BuildRequestry持有构建请求和关联的状态数据。\r\n            \r\n","\r\n            Called to forcibly mark the project as dirty requiring reevaluation. Generally this is not necessary to set; all edits affecting\r\n            this project will automatically make it dirty. However there are potential corner cases where it is necessary to mark the project dirty\r\n            directly. For example, if the project has an import conditioned on a file existing on disk, and the file did not exist at\r\n            evaluation time, then someone subsequently creates that file, the project cannot know that reevaluation would be productive.\r\n            In such a case the host can help us by setting the dirty flag explicitly so that ":"\r\n            被要求强行将该项目标记为需要重新评估的脏项目。通常，这是不需要设置的；所有影响的编辑\r\n            该项目将自动使其变得肮脏。但是，在某些潜在的角案件中，有必要将项目标记为脏项目\r\n            直接地。例如，如果该项目在磁盘上存在的文件上有导入条件，并且该文件不存在\r\n            评估时间，然后有人随后创建该文件，项目不知道重新评估将是有效的。\r\n            在这种情况下，主机可以通过明确设置肮脏的标志来帮助我们\r\n","The delegate to use to load if necessary. May be null. Must not update the cache.":"如有必要，用于加载的委托。可能是无效的。不得更新缓存。\r\n","\r\n            Default version of MaxOSVersionTested in framework extension SDKs with manifest not containing such a property\r\n            ":"\r\n            在框架扩展SDK中默认版本的maxosversiontesttest，其明显不包含此类属性\r\n            \r\n","parentBuildEventContext is null":"ParentBuildEventContext为null\r\n","\r\n            Gets the names of all sub keys immediately below this registry key\r\n            ":"\r\n            在此注册表密钥下方获取所有子键的名称\r\n            \r\n","\r\n            Returns true if the default and initial targets have been resolved.\r\n            ":"\r\n            如果解决了默认目标和初始目标，则返回为true。\r\n            \r\n","\r\n            Get a read-only collection of the child property groups, if any, in reverse order\r\n            ":"\r\n            以相反的顺序获取儿童财产组（如果有的话）的只读收集\r\n            \r\n","\r\n            Updates the conditioned properties table if it hasn't already been done.\r\n            ":"\r\n            如果尚未完成条件属性表，则会更新条件属性表。\r\n            \r\n","The build results for the specified request.":"指定请求的构建结果。\r\n","\r\n            If this number is increased much higher, the datastructure may\r\n            need to be changed from a linked list, since it's currently O(n).\r\n            ":"\r\n            如果这个数字增加了得多，则数据架构可能\r\n            需要从链接列表中更改，因为当前是o（n）。\r\n            \r\n","\r\n            Place to dump trace\r\n            ":"\r\n            倾倒跟踪的地方\r\n            \r\n","\r\n            Renames the item.\r\n            Equivalent to setting the ":"\r\n            重命名该项目。\r\n            等效于设置\r\n","\r\n            The creation pattern to use for this component.\r\n            ":"\r\n            用于此组件的创建模式。\r\n            \r\n","\r\n            Read the item-group-under-target into an instance.\r\n            Do not evaluate anything: this occurs during build.\r\n            ":"\r\n            将键入目标的项目组读取到一个实例中。\r\n            不要评估任何内容：这发生在构建过程中。\r\n            \r\n","The type of collection to be created.":"要创建的集合的类型。\r\n","\r\n            Assigns the specific configuration ID to the node.\r\n            ":"\r\n            将特定配置ID分配给节点。\r\n            \r\n","\r\n            Flag indicating that we are supposed to dump the scheduler state to the disk periodically.\r\n            ":"\r\n            标志表明我们应该定期将调度程序状态转储到磁盘上。\r\n            \r\n","\r\n            Flag indicating whether or not the configuration is actually building.\r\n            ":"\r\n            指示配置是否实际构建的标志。\r\n            \r\n","\r\n                Logger to log real-time messages back to MSBuild.\r\n            ":"\r\n                记录器将实时消息记录回MSBUILD。\r\n            \r\n","\r\n            Ticks at last time logged\r\n            ":"\r\n            上次登记的壁虱\r\n            \r\n","\r\n            Gets or sets the item set\r\n            ":"\r\n            获取或设置项目集\r\n            \r\n","\r\n            Existing files/directories are always considered newer than non-existent ones, and two non-existent files/directories\r\n            are considered to have the same last-write time.\r\n            ":"\r\n            现有文件/目录总是比不存在的文件更新，还有两个不存在的文件/目录\r\n            被认为具有相同的最后写时间。\r\n            \r\n","\r\n            Succeeded is true if the build succeeded; false otherwise.\r\n            ":"\r\n            如果建造成功，成功是正确的。否则为错误。\r\n            \r\n","\r\n            Returns the path to the reference assemblies location for the given target framework's standard libraries (i.e. mscorlib).\r\n            This method will assume the requested ReferenceAssemblyRoot path will be the ProgramFiles directory specified by Environment.SpecialFolder.ProgramFiles\r\n            In additon when the .NETFramework or .NET Framework targetFrameworkIdentifiers are seen and targetFrameworkVersion is 2.0, 3.0, 3.5 or 4.0 we will return the correctly chained reference assembly paths\r\n            for the legacy .net frameworks. This chaining will use the existing GetPathToDotNetFrameworkReferenceAssemblies to build up the list of reference assembly paths.\r\n            ":"\r\n            返回给定目标框架的标准库（即Mscorlib）的参考组件位置的路径。\r\n            此方法将假设请求的ReferenCeasSemblyRoot路径将是Environment.specialfolder.programfiles指定的programFiles目录。\r\n            当看到.netFramework或.NET Framework targetFrameWorksidentifiers时，ADDITON中的目标FrameWorkversion为2.0、3.0、3.5或4.0，我们将返回正确链式的参考组件路径\r\n            对于遗产.NET框架。该链接将使用现有的GetPathTodotnetFrameWorkReferenCeaseSemblies来构建参考汇编路径列表。\r\n            \r\n","\r\n            this event is raised to log any build event.  These events do not include telemetry.  To receive telemetry, you must attach to the ":"\r\n            提出了此事件以记录任何构建事件。这些事件不包括遥测。要接收遥测，您必须附加到\r\n","\r\n            Cached mapping of file path to symbol store documents\r\n            ":"\r\n            文件路径的缓存映射到符号存储文档\r\n            \r\n","\r\n            The store of items in this result.\r\n            ":"\r\n            在此结果中的商品存储。\r\n            \r\n","\r\n            Location of the initialtargets attribute, if any\r\n            ":"\r\n            初始字母属性的位置，如果有的话\r\n            \r\n","\r\n            Cache the items.\r\n            ":"\r\n            缓存项目。\r\n            \r\n","\r\n            The underlying BuildRequest.\r\n            ":"\r\n            基础的BuildRequest。\r\n            \r\n","\r\n            This class is used by tasks to log their parameters (input, output).\r\n            The intrinsic ItemGroupIntrinsicTask to add or remove items also\r\n            uses this class.\r\n            ":"\r\n            任务使用此类来记录其参数（输入，输出）。\r\n            还要添加或删除项目的内在itemgroupIntrinsictask\r\n            使用此类。\r\n            \r\n","\r\n            The custom sub-type of the event.         \r\n            ":"\r\n            活动的自定义子类型。\r\n            \r\n"," // Occurrences: 4; Operation: Include; Provenance: FromLiteral (direct reference in $P) | Glob (direct reference in $P) | Inconclusive (it is an indirect occurrence from referenced properties and items)\r\n             ":" //出现：4;操作：包括；出处：源自文学（$ p的直接引用）| Glob（$ p的直接参考）|尚无定论（这是参考属性和项目的间接发生）\r\n             \r\n","\r\n            This class implements the \"MSBuild\" task, which hands off child project files to the MSBuild engine to be built.\r\n            ":"\r\n            该课程实施了“ MSBUILD”任务，该任务将儿童项目文件移交给要构建的MSBUILD引擎。\r\n            \r\n","\r\n            Threadproc.\r\n            Called on debugger worker thread.\r\n            ":"\r\n            线程。\r\n            打电话给调试器工人线程。\r\n            \r\n","\r\n            Private constructor used for serialization\r\n            ":"用于序列化的私人构造函数\r\n            \r\n","\r\n            The full file paths of all the files that during evaluation contributed to this project instance.\r\n            This does not include projects that were never imported because a condition on an Import element was false.\r\n            The outer ProjectRootElement that maps to this project instance itself is not included.\r\n            ":"\r\n            评估过程中所有文件的完整文件路径促成了此项目实例。\r\n            这不包括从未进口的项目，因为导入元素的条件是错误的。\r\n            不包括映射到该项目实例本身的外部项目Rootelement。\r\n            \r\n","\r\n            Errors if the BuildManager is in the specified state.\r\n            ":"\r\n            如果构建管理器处于指定状态，则错误。\r\n            \r\n","\r\n            Assigns requests to nodes based on those which have the most plan time.\r\n            ":"\r\n            根据计划时间最长的节点，将请求分配给节点。\r\n            \r\n","\r\n            Compresses the items.\r\n            ":"\r\n            压缩项目。\r\n            \r\n","\r\n            Callback for event raised when a build request is completed\r\n            ":"\r\n            构建请求完成时提出的事件的回调\r\n            \r\n","\r\n            The interface used to call back into the build engine.\r\n            ":"\r\n            该界面用于回到构建引擎。\r\n            \r\n","\r\n            SubToolset,\r\n            ":"\r\n            子管盘，\r\n            \r\n","This method is used as a Type Filter delegate.":"此方法用作类型的过滤器委托。\r\n","\r\n            The global configuration cache\r\n            ":"\r\n            全局配置缓存\r\n            \r\n","True if the specified configuration is already building.":"如果已经建立了指定的配置，则为正确。\r\n","\r\n            This interface extends IBuildEngine to provide a method allowing building \r\n            project files in parallel.\r\n            ":"\r\n            该界面扩展了iBuildEngine，以提供允许构建的方法\r\n            并行项目文件。\r\n            \r\n","A bool indicating whether the change wave is enabled.":"指示是否启用了变化波的布尔。\r\n","\r\n            Unevaluated outputs on the target element\r\n            May be empty string.\r\n            ":"\r\n            目标元素上未评估的输出\r\n            可以是空字符串。\r\n            \r\n","\r\n            Platform friendly name\r\n            ":"\r\n            平台友好名称\r\n            \r\n","\r\n            Get an enumerator over any child chooses\r\n            ":"\r\n            枚举任何孩子选择\r\n            \r\n","\r\n            Retrieves the results for the specified configuration\r\n            ":"\r\n            检索指定配置的结果\r\n            \r\n","\r\n            Flag indicating whether this request builder has been zombied by a cancellation request.\r\n            ":"\r\n            指示该请求构建器是否已通过取消请求僵尸的标志。\r\n            \r\n","\r\n            Adds a new item.\r\n            ":"\r\n            添加了一个新项目。\r\n            \r\n","\r\n            Initializes this factory for instantiating tasks with a particular inline task block and a set of UsingTask parameters.  MSBuild\r\n            provides an implementation of this interface, TaskHostFactory, that uses \"Runtime\", with values \"CLR2\", \"CLR4\", \"CurrentRuntime\", \r\n            and \"*\" (Any); and \"Architecture\", with values \"x86\", \"x64\", \"CurrentArchitecture\", and \"*\" (Any).  An implementer of ITaskFactory2 \r\n            can choose to use these pre-defined Runtime and Architecture values, or can specify new values for these parameters.  \r\n            ":"\r\n            初始化此工厂以使用特定的内联任务块和一组使用任务参数实例化任务。 msbuild\r\n            提供此接口的实现，即TaskHostFactory，该界面使用“运行时”，带有“ CLR2”，“ CLR4”，“ CurrentRuntime”，\r\n            和“*”（任何）;和“架构”，带有值“ x86”，“ x64”，“ CurrentRawtecture”和“*”（任何）。 ItaskFactory的实施者2\r\n            可以选择使用这些预定义的运行时和体系结构值，也可以为这些参数指定新值。\r\n            \r\n","\r\n            UsingTaskParameterGroupElement represents a ParameterGroup under the using task.\r\n            ":"\r\n            使用TaskParameterGroupElement代表使用任务下的参数组。\r\n            \r\n","\r\n            logFileName is the name of the log file that we will generate\r\n            the default value is msbuild.log\r\n            ":"\r\n            logFilename是我们将生成的日志文件的名称\r\n            默认值是msbuild.log\r\n            \r\n","\r\n            This method determines where MSBuild.Exe is and sets the NodeExePath to that by default.\r\n            ":"\r\n            此方法确定msbuild.exe在何处并将nodeexepath设置为默认情况下。\r\n            \r\n","\r\n            Gets the value of a boolean environment setting which is not expected to change.\r\n            ":"\r\n            获得布尔环境环境的价值，预计不会改变。\r\n            \r\n","\r\n            The task name this record was registered with from the using task element\r\n            ":"\r\n            该记录的任务名称已从使用任务元素注册\r\n            \r\n","\r\n            Gets or sets the request builder shutdown timeout.\r\n            ":"\r\n            获取或设置请求构建器关闭超时。\r\n            \r\n","\r\n            The node logging context\r\n            ":"\r\n            节点记录上下文\r\n            \r\n","\r\n            The handler for the write delegate of the console logger we are deriving from.\r\n            ":"\r\n            我们派生的控制台记录仪的写入代表的处理程序。\r\n            \r\n","\r\n             UNDONE: When we copied over the conditionals code, we didn't copy over the unit tests for scanner, parser, and expression tree.\r\n             ":"\r\n             撤消：当我们复制条件代码时，我们没有通过扫描仪，解析器和表达树的单元测试复制。\r\n             \r\n","\r\n            Marks this project as dirty.\r\n            Typically called by child elements to indicate that they themselves have become dirty.\r\n            Accepts a reason for debugging purposes only, and optional reason parameter.\r\n            ":"\r\n            将该项目标记为肮脏。\r\n            通常，儿童元素称呼他们自己已经变得肮脏。\r\n            接受仅进行调试目的的原因和可选的原因参数。\r\n            \r\n","\r\n            Delegate for loading an Xml file, for unit testing.\r\n            ":"\r\n            用于加载XML文件的委托，用于单元测试。\r\n            \r\n","\r\n                Disposable helper class to wrap XmlReader / XmlTextReader functionality.\r\n            ":"\r\n                用于包装XMLREADER / XMLTEXTREADER功能的一次性助手类。\r\n            \r\n","\r\n            Initialize a parented ProjectChooseElement\r\n            ":"\r\n            初始化育儿projectChooselement\r\n            \r\n","\r\n            A cache of previously created item function delegates\r\n            ":"\r\n            先前创建的项目功能委托的缓存\r\n            \r\n","\r\n            Static factory for component creation.\r\n            ":"\r\n            组件创建的静态工厂。\r\n            \r\n","\r\n            Is the class being loaded a task factory class\r\n            ":"\r\n            是加载任务工厂课程的课程吗\r\n            \r\n","\r\n            Whether location is available.\r\n            IXmlLineInfo member.\r\n            ":"\r\n            是否可用位置。\r\n            ixmllineinfo成员。\r\n            \r\n","\r\n            Set of parameters that can be used by the task factory specifically.  \r\n            ":"\r\n            任务工厂可以使用的一组参数。\r\n            \r\n","\r\n            This interface represents the host for task execution.  When used in the in-proc scenario, these method calls essentially\r\n            are pass-throughs to just set some member variables and call methods directly on the task and associated objects.\r\n            In the out-of-proc/AppDomain-isolated case, the object implementing these methods may break apart the information\r\n            in the parameters to be consumed by the IContract representing the remote object through MAF.\r\n            \r\n            REFACTOR - Eliminate this interface.\r\n            ":"\r\n            此接口表示任务执行的主机。当在程序内场景中使用时，这些方法基本上调用\r\n            是直接设置一些成员变量并直接在任务和关联对象上调用方法。\r\n            在传播/AppDomain隔离的情况下，实施这些方法的对象可能会分解信息\r\n            在由MAF代表远程对象的ICONTRACT消耗的参数中。\r\n            \r\n            重构 - 消除此界面。\r\n            \r\n","\r\n            Useful for debugging.\r\n            Note that we do not expose an XmlDocument or any other specific XML API.\r\n            ":"\r\n            可用于调试。\r\n            请注意，我们不会公开XMLDOcument或任何其他特定的XML API。\r\n            \r\n","\r\n            Items to draw on for expansion\r\n            ":"\r\n            要绘制扩展的项目\r\n            \r\n","\r\n            Ordered set of output property and item objects.\r\n            This is a read-only dead collection.\r\n            ":"有序的输出属性和项目对象集。\r\n            这是一个只读的死亡系列。\r\n            \r\n","\r\n            This constructor allows all event data to be initialized\r\n            ":"\r\n            该构造函数允许所有事件数据初始化\r\n            \r\n","\r\n            Flag indicating whether we are under the influence of the legacy CallTarget's ContinueOnError behavior.\r\n            ":"\r\n            标志表明我们是否受到传统Calltarget的持续行为的影响。\r\n            \r\n","\r\n            Determines if the target needs to be built/rebuilt/skipped if it has no inputs (because they evaluated to empty).\r\n            ":"\r\n            确定目标是否需要构建/重建/跳过，如果没有输入（因为它们被评估为空）。\r\n            \r\n","\r\n            Will remove a project started event from the list of deferred project started events\r\n            ":"\r\n            将从延期项目开始活动列表中删除项目开始事件\r\n            \r\n","\r\n            Windows-specific implementation of file system operations using Windows native invocations.\r\n            TODO For potential extra perf gains, provide native implementations for all IFileSystem methods and stop inheriting from ManagedFileSystem\r\n            ":"\r\n            Windows特定于文件系统操作的实现使用Windows本机调用。\r\n            托多获得潜在的额外perf益收益，为所有iFilesystem方法提供本地实现，并停止从托管系统继承\r\n            \r\n","\r\n            Gets an immutable collection of environment properties.\r\n            ":"\r\n            获得不可变的环境属性集合。\r\n            \r\n","\r\n            Ideally the result would be buildable on its own, and *usually* this should be the case.\r\n            Known cases where it wouldn't be buildable:\r\n            -- $(MSBuildThisFile) and similar properties aren't corrected\r\n            -- relative path in exists(..) conditions is relative to the imported file\r\n            -- same for AssemblyFile on UsingTask\r\n            Paths in item includes are relative to the importing project, though.\r\n            ":"\r\n            理想情况下，结果将是自行建立的，通常 *应该是这种情况。\r\n            无法建立的已知情况：\r\n             -  $（msbuildthisfile）和类似属性未纠正\r\n             - 存在（..）条件中的相对路径相对于导入文件\r\n             - 对于使用Task上的汇编费相同\r\n            不过，项目中的路径包括相对于导入项目。\r\n            \r\n","\r\n            True if ":"\r\n            是的，如果\r\n","\r\n            In AG there are 600 locations that have a file but zero line and column.\r\n            In theory yet another derived class could be made for these to save 4 bytes each.\r\n            ":"\r\n            在AG中，有600个位置具有文件，但零行和列。\r\n            从理论上讲，可以为这些阶段提供另一个派生的类，以节省每个字节。\r\n            \r\n","\r\n            Finds all the task properties that are required.\r\n            Returns them as keys in a dictionary.\r\n            ":"\r\n            找到所有需要的任务属性。\r\n            将它们作为词典中的键返回。\r\n            \r\n","\r\n            Implementation of a metadata table for use by the evaluator.\r\n            Accumulates ProjectMetadataElement objects and their evaluated value,\r\n            overwriting any previous metadata with that name.\r\n            ":"\r\n            实施元数据表供评估者使用。\r\n            累积projectMetadataelement对象及其评估的价值，\r\n            覆盖任何以前名称的元数据。\r\n            \r\n","\r\n            Since:\r\n                - we have no proper AST and interpreter for itemspecs that we can do analysis on\r\n                - GetItemProvenance needs to have correct counts for exclude strings (as correct as it can get while doing it after evaluation)\r\n            \r\n            The temporary hack is to use the expander to expand the strings, and if any property or item references were encountered, return Provenance.Inconclusive\r\n            ":"\r\n            自从：\r\n                 - 我们没有适当的AST和对项目设备的解释器，我们可以对\r\n                 -  getItemProventhy需要有正确的排除字符串计数（在评估后进行时尽可能正确）\r\n            \r\n            临时黑客是使用扩展器扩展字符串，如果遇到任何属性或项目参考，请返回出处。\r\n            \r\n","\r\n            An interface representing an object which can provide properties to the Expander.\r\n            ":"\r\n            代表可以为扩展器提供属性的对象的接口。\r\n            \r\n","\r\n            This helper base class provides default functionality for loggers that handle events raised by the build engine. This\r\n            class can only be instantiated in a derived form.\r\n            ":"\r\n            该辅助基类为处理构建引擎提出的事件的登录器提供默认功能。这个\r\n            类只能以派生形式实例化。\r\n            \r\n","\r\n            The default compression threshold.\r\n            ":"\r\n            默认压缩阈值。\r\n            \r\n","\r\n            The engine has only build requests which are waiting for build results to continue.\r\n            ":"\r\n            该引擎只有构建请求，这些请求正在等待构建结果继续。\r\n            \r\n","\r\n            Describes whether to collect the project files (including imported project files) used during the build.\r\n            If the project files are collected they can be embedded in the log file or as a separate zip archive.\r\n            ":"\r\n            描述是否要收集构建过程中使用的项目文件（包括导入的项目文件）。\r\n            如果收集了项目文件，则可以将它们嵌入日志文件中或单独的ZIP存档中。\r\n            \r\n","\r\n            The list of descriptions which describe how to create forwarding loggers on a node.\r\n            This is used by the node provider to get a list of registered descriptions so that\r\n            they can be transmitted to child nodes.\r\n            ":"\r\n            描述如何在节点上创建转发记录器的描述列表。\r\n            节点提供商使用此列表，以获取注册说明列表\r\n            它们可以传输到儿童节点。\r\n            \r\n","\r\n            Required for ILogger interface\r\n            ":"\r\n            Ilogger界面所需\r\n            \r\n","\r\n            When true, this modification indicates the associated metadata should be removed.\r\n            ":"\r\n            如果为true，则此修改指示应删除相关的元数据。\r\n            \r\n","\r\n            The cache of project root elements associated with this project collection.\r\n            Each is associated with a specific project collection for two reasons:\r\n            - To help protect one project collection from any XML edits through another one:\r\n            until a reload from disk - when it's ready to accept changes - it won't see the edits;\r\n            - So that the owner of this project collection can force the XML to be loaded again\r\n            from disk, by doing ":"与此项目集合关联的项目根元素的缓存。\r\n            每个都与特定的项目集合相关联有两个原因：\r\n             - 帮助保护一个项目收集免受任何XML编辑的侵害：\r\n            直到从磁盘中重新加载（准备好接受更改）之前，它不会看到编辑；\r\n             - 这样该项目集合的所有者可以迫使XML再次加载\r\n            从磁盘，做\r\n","\r\n            Whether enumeration should go forwards or backwards.\r\n            If backwards, the \"initial\" will be the first returned, then each previous\r\n            node in turn.\r\n            ":"\r\n            枚举应该向前还是向后进行。\r\n            如果向后，“初始”将是第一个返回的\r\n            节点依次。\r\n            \r\n","\r\n            Adds the target which validates that the solution configuration specified by the user is supported.\r\n            ":"\r\n            添加目标，该目标验证了支持用户指定的解决方案配置。\r\n            \r\n","\r\n            Helper method to add a call to the AspNetCompiler task into the given target.\r\n            ":"\r\n            助手方法将ASPNETCOMPILER任务添加到给定目标中的呼叫。\r\n            \r\n","\r\n                Constructs a graph starting from the given graph entry point, evaluating with the provided project collection.\r\n            ":"\r\n                从给定的图入口点开始构造图形，并通过提供的项目集合评估。\r\n            \r\n","\r\n            Retrieves the list of dependencies this target needs to have built and moves the target to the next state.\r\n            Never returns null.\r\n            ":"\r\n            检索该目标需要构建并将目标移至下一个状态的依赖性列表。\r\n            永远不会返回零。\r\n            \r\n","The build component host.":"构建组件主机。\r\n","\r\n            If there are no more active nodes, cleans up any remaining submissions.\r\n            ":"\r\n            如果不再有活跃的节点，请清理任何剩余的提交。\r\n            \r\n","\r\n            Evaluate the usingtask and add the result into the data passed in\r\n            ":"\r\n            评估使用任务并将结果添加到传递的数据中\r\n            \r\n","\r\n            Gets the original ":"\r\n            获取原件\r\n","\r\n            Returns the path to the \"bin\" directory of the .NET Framework SDK. When targeting .NET 3.5 \r\n            or above, looks in the locations associated with Visual Studio 2010.  If you wish to target \r\n            the .NET Framework SDK that ships with Visual Studio Dev11 or later, please use the override \r\n            that specifies a VisualStudioVersion. \r\n            ":"\r\n            返回.NET Framework SDK的“ bin”目录的路径。定位.NET 3.5时\r\n            或以上，查看与Visual Studio 2010相关的位置。如果您想定位\r\n            带有Visual Studio Dev11或更高版本的.NET Framework SDK，请使用Override\r\n            这指定了视觉识别。\r\n            \r\n","\r\n            Represents all the components of a transform function, including the ability to execute it \r\n            ":"\r\n            表示转换功能的所有组件，包括执行它的能力\r\n            \r\n","\r\n            Location of the ContinueOnError attribute, if any\r\n            ":"\r\n            连续方属性的位置，如果有的话\r\n            \r\n","\r\n            Gets child elements, ignoring whitespace and comments.\r\n            Verifies xml namespace of elements is the MSBuild namespace.\r\n            Throws InvalidProjectFileException for elements in the wrong namespace, and (if parameter is set) unexpected XML node types\r\n            ":"\r\n            获取儿童元素，忽略空格和评论。\r\n            验证元素的XML名称空间是MSBUILD名称空间。\r\n            在错误的名称空间中为元素和（如果设置参数设置）出乎意料的XML节点类型（如果设置了参数）中的无效fileException\r\n            \r\n","\r\n            Returns true if we are at the limit of work we can schedule.\r\n            ":"\r\n            如果我们处于可以安排的工作限制，则返回真实。\r\n            \r\n","The include.":"包括。\r\n","A response indicating the results, if any, and the targets needing to be built, if any.":"响应表示结果（如果有），以及需要构建目标（如果有）。\r\n","\r\n            When an error occurs expanding a property, just leave it unexpanded.\r\n            ":"\r\n            当出现错误扩展属性时，只需将其放置。\r\n            \r\n","\r\n            The max version of the platform that the SDK targets\r\n            ":"\r\n            SDK目标的最大版本\r\n            \r\n","\r\n            Utility helper functions for formatting logger output.\r\n            ":"\r\n            用于格式化记录器输出的实用助手功能。\r\n            \r\n","\r\n            The logging context for an entire node.\r\n            ":"\r\n            整个节点的记录上下文。\r\n            \r\n","\r\n                Attempts to parse the specified string as a ":"\r\n                试图将指定字符串解析为\r\n","The event arguments that indicate ProjectRootElement-specific details.":"事件论证指示特定于项目的细节。\r\n","\r\n            Get non generic enumerator\r\n            ":"\r\n            获取非通用枚举者\r\n            \r\n",".\r\n            Uses the global project collection.\r\n            ":"。\r\n            使用全球项目集合。\r\n            \r\n","\r\n            Runs an intrinsic task.\r\n            ":"\r\n            执行内在任务。\r\n            \r\n","HasMetadata":"Hasmetadata\r\n","\r\n            Gathers task outputs in two ways:\r\n            1) Given an instantiated task that has finished executing, it extracts the outputs using .NET reflection.\r\n            2) Otherwise, it parses the task's output specifications and (statically) infers the outputs.\r\n            ":"\r\n            收集任务以两种方式输出：\r\n            1）给定完成执行的实例化任务，它使用.NET反射提取输出。\r\n            2）否则，它解析了任务的输出规范，并（静态）渗透输出。\r\n            \r\n","The collection with which this project should be associated. May not be null.":"该项目应关联的集合。可能不会无效。\r\n","Project file to build":"要构建的项目文件\r\n","\r\n            Equatable key for the table\r\n            ":"\r\n            表的平等键\r\n            \r\n","\r\n            This method generates an MSBuild project file from the list of projects and project dependencies \r\n            that have been collected from the solution file.\r\n            ":"\r\n            此方法从项目列表和项目依赖项列表中生成MSBUILD项目文件\r\n            从解决方案文件中收集的。\r\n            \r\n","\r\n            True if the \"secret\" environment variable MSBUILDNOINPROCNODE is set.\r\n            ":"\r\n            如果设置了“秘密”环境变量MSBUILDNOINPROCOCNODE，则为正确。\r\n            \r\n","The tools version for the toolset.":"工具集的工具版本。\r\n","\r\n            Adds a new item\r\n            ":"\r\n            添加一个新项目\r\n            \r\n","\r\n            Adds a metadata entry to the table\r\n            ":"\r\n            在表中添加元数据条目\r\n            \r\n","\r\n            The smallest size a string can be to be considered large.\r\n            ":"\r\n            可以将绳子视为大的最小尺寸。\r\n            \r\n","\r\n            Building with administrator privileges\r\n            ":"\r\n            具有管理员特权的建造\r\n            \r\n","\r\n            Directory of the associated project. If this is available,\r\n            it is used to calculate built-in metadata. Otherwise,\r\n            the current directory is used.\r\n            ":"\r\n            关联项目的目录。如果可用，\r\n            它用于计算内置元数据。否则，\r\n            使用当前目录。\r\n            \r\n","\r\n            What node is this logging service being created on.\r\n            ":"\r\n            在创建此记录服务的是什么节点。\r\n            \r\n","\r\n            A limit for truncating string expansions for item groups within an evaluated Condition. N items will be evaluated such as 'A;B;C;...'.\r\n            Enabled by ExpanderOptions.Truncate.\r\n            ":"\r\n            在计算条件内截断项组的字符串展开的限制。 N项将被评估如'A;B;C;。..'.\r\n            通过ExpanderOptions启用。截断。\r\n            \r\n","Gets a list of properties which are required.":"获取所需的属性列表。\r\n","\r\n            GraphBuildRequestData encapsulates all of the data needed to submit a graph build request.\r\n            ":"\r\n            GraphBuildRequestData封装了提交图形构建请求所需的所有数据。\r\n            \r\n","\r\n            Task name\r\n            ":"\r\n            任务名称\r\n            \r\n","true, if \"input\" is newer than \"output\"":"是的，如果“输入”比“输出”更新\r\n","\r\n            Construct a lookup over specified items and properties.\r\n            Accept a dictionary of named values for debugger display only. If \r\n            not debugging, this should be null.\r\n            ":"\r\n            在指定的项目和属性上构建查找。\r\n            仅接受仅用于调试器显示的命名值的字典。如果\r\n            不调试，这应该是无效的。\r\n            \r\n","\r\n            Sets metadata where one built-in metadata is allowed to be set: RecursiveDir.\r\n            This is not normally legal to set outside of evaluation. However, the CreateItem\r\n            needs to be able to set it as a task output, because it supports wildcards. So as a special exception we allow\r\n            tasks to set this particular metadata as a task output.\r\n            Other built in metadata names are ignored. That's because often task outputs are items that were passed in,\r\n            which legally have built-in metadata. If necessary we can calculate it on the new items we're making if requested.\r\n            We don't copy them too because tasks shouldn't set them (they might become inconsistent)\r\n            ":"\r\n            设置元数据，其中允许设置一个内置元数据：recursivedir。\r\n            在评估之外，这通常不合法。但是，createItem\r\n            需要能够将其设置为任务输出，因为它支持通配符。因此，作为一个特殊例外，我们允许\r\n            将此特定元数据设置为任务输出的任务。\r\n            其他内置的元数据名称将被忽略。这是因为任务输出通常是传递的项目，\r\n            法律上具有内置元数据。如有必要，我们可以根据要求在我们制作的新项目上进行计算。\r\n            我们也不复制它们，因为任务不应该设置它们（它们可能会变得不一致）\r\n            \r\n","\r\n            Builds a list of targets with the specified loggers.\r\n            ":"\r\n            用指定的记录仪构建目标列表。\r\n            \r\n","\r\n            Console logger parameters delimiters.\r\n            ":"\r\n            控制台记录仪参数定界符。\r\n            \r\n","\r\n             This usually is not desired behavior.  It is only provided for those cases where the client\r\n             knows that the new build request does not depend on project state generated by a previous request.  Setting\r\n             this flag can provide a performance boost in the case of incompatible node affinities, as MSBuild would\r\n             otherwise have to serialize the project state from one node to another, which may be\r\n             expensive depending on how much data the project previously generated.\r\n            \r\n             This flag has no effect on target results, so if a previous request already built a target, the new\r\n             request will not re-build that target (nor will any of the project state mutations which previously\r\n             occurred as a consequence of building that target be re-applied.)\r\n             ":"\r\n             这通常不是所需的行为。仅适用于客户\r\n             知道新的构建请求不取决于先前请求生成的项目状态。环境\r\n             在不兼容的节点亲和力的情况下，此标志可以提供性能提升，就像MSBuild一样\r\n             否则必须将项目状态从一个节点序列化到另一个节点，这可能是\r\n             昂贵的，具体取决于该项目先前生成的数据。\r\n            \r\n             该标志对目标结果没有影响，因此，如果先前的请求已经构建了目标，则新的\r\n             请求不会重建该目标（以前的任何项目状态突变也不会\r\n             是由于重新实现目标的建筑物而发生的。）\r\n             \r\n","list of supported target framework monikers":"支持的目标框架名单\r\n","\r\n            The logger parameters.\r\n            ":"\r\n            记录器参数。\r\n            \r\n","When buildComponentHost is null":"当buildComponentHost为null时\r\n","indentation level for this frame":"此框架的凹痕水平\r\n","\r\n            Enters the state where we are going to perform a build request callback.\r\n            ":"\r\n            进入我们要执行构建请求回调的状态。\r\n            \r\n"," The import that is being added. ":" 正在添加的导入。\r\n","The full path to the solution file, if any, that is resolving the SDK.":"解决SDK的解决方案文件的完整路径（如果有）。\r\n","\r\n            Returns the locations used to find the toolsets.\r\n            ":"\r\n            返回用于查找工具集的位置。\r\n            \r\n","The type of value stored by the list.":"列表存储的值类型。\r\n","The list of properties assocated with the event.":"与事件相关联的属性列表。\r\n","\r\n            Check to see if the source specified needs compilation relative to its outputs\r\n            ":"\r\n            检查源指定的需求是否相对于其输出\r\n            \r\n","\r\n            Get any Otherwise child.\r\n            May be null.\r\n            ":"\r\n            找任何其他孩子。\r\n            可能是无效的。\r\n            \r\n","\r\n            see IProjectSchemaNode\r\n            ":"\r\n            请参阅iprojectschemanode\r\n            \r\n","\r\n            If MSBUILDCUSTOMSCHEDULER = CustomSchedulerForSQL, the user may also choose to set \r\n            MSBUILDCUSTOMSCHEDULERFORSQLCONFIGURATIONLIMITMULTIPLIER to the value by which they want \r\n            the max configuration count for any one node to exceed the average configuration count.  \r\n            If that env var is not set, or is set to an invalid value (negative, less than 1, non-numeric)\r\n            then we use the default value instead.\r\n            ":"\r\n            如果msbuildcustomscheduler = customschedulerforsql，则用户也可以选择设置\r\n            MSBUILDCUSTOMSCHEDULERERFORSQLCONFIGURATIONLIMITMULTIPLIER到他们想要的值\r\n            任何一个节点都超过平均配置计数的最大配置计数。\r\n            如果未设置该env var或设置为无效的值（负数，小于1，非数字）\r\n            然后，我们改用默认值。\r\n            \r\n","\r\n            Implements a true add, an item that has been created in a batch.\r\n            ":"实现一个真实的添加，这是在批处理中创建的项目。\r\n            \r\n","\r\n            Applies a modification to an item in a table of modifications.\r\n            If the item already exists in the table, merges in the modifications; if there is a conflict\r\n            the mergeType indicates which should win.\r\n            ":"\r\n            将修改应用于修改表中的项目。\r\n            如果该项目已经存在于表中，则在修改中合并；如果有冲突\r\n            Mergetype指示哪个应该获胜。\r\n            \r\n","\r\n            The string used to separate this argument value from the parent ":"\r\n            用于将此参数值与父的字符串\r\n","\r\n            Child properties\r\n            ":"\r\n            儿童财产\r\n            \r\n","\r\n            Given a registry hive and a request view open the base key for that registry location.\r\n            ":"\r\n            给定注册表Hive和请求视图打开该注册表位置的基本密钥。\r\n            \r\n","\r\n            The name of the function\r\n            ":"\r\n            功能的名称\r\n            \r\n","The metadata table created for this batch bucket.  May be null.":"为此批量存储桶创建的元数据表。可能是无效的。\r\n","\r\n            Type of the collection\r\n            This has to be public as cannot change access modifier when overriding\r\n            ":"\r\n            集合的类型\r\n            这必须是公开的，因为覆盖时不能更改访问修饰符\r\n            \r\n","\r\n            Constructor which allows reporting results for a different nodeRequestId\r\n            ":"\r\n            构建器允许报告不同的noderequestid的报告结果\r\n            \r\n","\r\n            How often to log\r\n            ":"\r\n            多久记录一次\r\n            \r\n"," if the resolver is not\r\n                applicable for a particular ":" 如果解析器不是\r\n                适用于特定\r\n","Optional list of arguments to pass to the formatted string.":"可选的参数列表将传递给格式化的字符串。\r\n","\r\n            Why this target was built by its parent.\r\n            ":"\r\n            为什么这个目标是由父母建立的。\r\n            \r\n","\r\n            This structure is used to return the result of the build and the target outputs.\r\n            ":"\r\n            该结构用于返回构建和目标输出的结果。\r\n            \r\n","\r\n            Return values on the target.\r\n            ":"返回目标上的值。\r\n            \r\n","\r\n            Only applies to websites -- for other project types, references are \r\n            either specified as Dependencies above, or as ProjectReferences in the\r\n            project file, which the solution doesn't have insight into. \r\n            ":"\r\n            仅适用于网站 - 对于其他项目类型，参考为\r\n            要么指定为上述依赖项，要么在\r\n            项目文件，解决方案没有洞察力。\r\n            \r\n","\r\n            Given an instantiated task, this helper method sets the specified parameter\r\n            ":"\r\n            给定实例化任务，此辅助方法设置了指定的参数\r\n            \r\n","The task requirements if the task is found, null otherwise.":"任务要求如果找到任务，则否则为无效。\r\n","\r\n            Creates a XmlElement with the specified name in the document\r\n            containing this project.\r\n            ":"\r\n            在文档中使用指定名称创建XMlelement\r\n            包含这个项目。\r\n            \r\n","\r\n            Retrieves the system parameters.\r\n            ":"\r\n            检索系统参数。\r\n            \r\n","A list of matching items.":"匹配项列表。\r\n","\r\n            value attribute\r\n            ":"\r\n            值属性\r\n            \r\n","\r\n            The system parameters which were defined on the host.\r\n            ":"\r\n            主机上定义的系统参数。\r\n            \r\n","\r\n            This class contains the functionality to parse a solution file and return a corresponding\r\n            MSBuild project file containing the projects and dependencies defined in the solution.\r\n            ":"\r\n            此类包含解析解决方案文件并返回相应的功能\r\n            MSBUILD项目文件包含解决方案中定义的项目和依赖项。\r\n            \r\n","\r\n            Stores and manages projects and targets events for logging purposes\r\n            ":"\r\n            商店和管理项目和目标是用于记录目的的事件\r\n            \r\n","Created element":"创建的元素\r\n","\r\n            Adds the standard targets to the traversal project.\r\n            ":"\r\n            将标准目标添加到遍历项目中。\r\n            \r\n","\r\n            The invalid in-proc node id\r\n            ":"\r\n            无效的程序内节点ID\r\n            \r\n","\r\n            The contracts contained by this platform\r\n            Item1: Contract name\r\n            Item2: Contract version\r\n            ":"\r\n            该平台包含的合同\r\n            项目1：合同名称\r\n            项目2：合同版本\r\n            \r\n","\r\n            The global singleton project collection used as a default for otherwise\r\n            unassociated projects.\r\n            ":"\r\n            全局单顿项目集合用作默认值\r\n            无关的项目。\r\n            \r\n","An array of t":"一系列T\r\n","The event's new state.":"活动的新状态。\r\n","\r\n            The value to which the metadata should be set.  If null, the metadata value should be retained unmodified.\r\n            ":"\r\n            应设置元数据的值。如果无效，则应将元数据值保留不变。\r\n            \r\n","Requires creating a new segmented dictionary":"需要创建一个新的分段词典\r\n","\r\n            Indicates to the expander what exactly it should expand.\r\n            ":"\r\n            向扩展器指示它应该扩展什么。\r\n            \r\n","\r\n            The previous value of the reassigned property.\r\n            ":"\r\n            重新分配属性的先前值。\r\n            \r\n","\r\n            Record the item elements that got evaluated\r\n            ":"\r\n            记录评估的项目元素\r\n            \r\n","\r\n            The identity parameters\r\n            ":"\r\n            身份参数\r\n            \r\n"," for all the properties in this ":" 对于此中的所有属性\r\n","\r\n            Clear non explicltly loaded configurations. \r\n            ":"\r\n            清除非显性加载配置。\r\n            \r\n","A value indicating whether initialization was successful.":"指示初始化是否成功的值。\r\n","\r\n            Gets or sets the unevaluated value of the Include.\r\n            ":"\r\n            获取或设置包括包含的未评估值。\r\n            \r\n","\r\n            Shuts down the single instance for this component type.\r\n            ":"\r\n            关闭此组件类型的单个实例。\r\n            \r\n","\r\n            Creates a build request entry from a build request.\r\n            ":"\r\n            通过构建请求创建构建请求条目。\r\n            \r\n","\r\n            The overall success of the build.\r\n            ":"\r\n            构建的总体成功。\r\n            \r\n","\r\n            Used in the evaluator\r\n            ":"\r\n            在评估器中使用\r\n            \r\n","\r\n            Task Parameter: Override the importance at which standard out messages will be logged \r\n            ":"\r\n            任务参数：覆盖记录标准消息的重要性\r\n            \r\n","\r\n            Already a readonly collection\r\n            ":"\r\n            已经有一个可读的收藏\r\n            \r\n","Target outputs for the target.":"目标的目标输出。\r\n"," class depends on it, as well as others externally.":" 班级以及外部的其他人都取决于它。\r\n","The configuration":"配置\r\n","\r\n            The singleton delegate that loads projects into the ProjectRootElement\r\n            ":"\r\n            将项目加载到ProjectRootelement的Singleton代表\r\n            \r\n","\r\n            Examine each project in the solution, add references and targets for it, and create metaprojects if necessary.\r\n            ":"\r\n            检查解决方案中的每个项目，为其添加引用和目标，并在必要时创建元标记。\r\n            \r\n","\r\n            This project's type.\r\n            ":"\r\n            这个项目的类型。\r\n            \r\n","\r\n            Unevaluated condition on the task\r\n            May be empty string.\r\n            ":"\r\n            任务未评估的条件\r\n            可以是空字符串。\r\n            \r\n","\r\n            Gets child elements, ignoring whitespace and comments.\r\n            Verifies xml namespace of elements is the MSBuild namespace.\r\n            Throws InvalidProjectFileException for elements in the wrong namespace, and unexpected XML node types\r\n            ":"\r\n            获取儿童元素，忽略空格和评论。\r\n            验证元素的XML名称空间是MSBUILD名称空间。\r\n            在错误的名称空间和意外的XML节点类型中抛出无效的元素元素\r\n            \r\n","Type of the items provided by the item source used for expansion":"用于扩展的项目源提供的项目类型\r\n","\r\n            The enumerator\r\n            ":"\r\n            枚举者\r\n            \r\n","\r\n            Dispose implementation\r\n            ":"\r\n            处置实施\r\n            \r\n","\r\n            Keep track of the xml which will be sent to the inline task factory and the parameters if any which will also be passed in\r\n            ":"\r\n            跟踪将发送到内联任务工厂的XML，如果有任何也将通过的参数\r\n            \r\n","The importing element for this import":"此导入的导入元素\r\n","The xml for items generated.":"生成的项目的XML。\r\n","Operating System version. Pass null to not filter based on this parameter":"操作系统版本。将null传递至不基于此参数过滤\r\n","\r\n            The value of the property.\r\n            ":"\r\n            属性的价值。\r\n            \r\n","\r\n            The task must be executed on an STA thread.\r\n            ":"\r\n            该任务必须在STA线程上执行。\r\n            \r\n","\r\n                An abstract interface for classes that can resolve a Software Development Kit (SDK).\r\n            ":"\r\n                可以解决软件开发套件（SDK）的类的抽象接口。\r\n            \r\n","\r\n            THe IBuildEngine callback object\r\n            ":"\r\n            ibuildengine回调对象\r\n            \r\n","The left hand side.":"左侧。\r\n","\r\n            When we are asked for all the items of a certain type using the GetItems() method, we may have to handle items\r\n            that have been modified earlier with ModifyItems(). These pending modifications can't be applied immediately to\r\n            the item because that would affect other batches. Instead we clone the item, apply the modification, and hand that over.\r\n            The problem is that later we might get asked to remove or modify that item. We want to make sure that we record that as\r\n            a remove or modify of the real item, not the clone we handed over. So we keep a lookup of (clone, original) to consult.\r\n            ":"当我们使用getItems（）方法询问我们的所有类型的项目时，我们可能必须处理项目\r\n            已通过modifyItems（）进行了修改。这些待处理的修改不能立即应用于\r\n            该项目是因为这会影响其他批次。取而代之的是，我们克隆项目，应用修改，然后将其交付。\r\n            问题是，以后我们可能会被要求删除或修改该项目。我们要确保将其记录为\r\n            删除或修改真实物品，而不是我们移交给的克隆。因此，我们请查找（克隆，原始）咨询。\r\n            \r\n","An instantiated intrinsic task.":"实例化的内在任务。\r\n","\r\n            Constructs a BuildAbortedException with an additional message attached and an inner exception.\r\n            ":"\r\n            构建一个带有附加消息和内部异常的BuildAbortedException。\r\n            \r\n","\r\n            Provides static methods to invoke ":"提供静态方法来调用\r\n","A Hashset containing warning codes that should be treated as errors.":"一个包含警告代码的标签，该警告代码应被视为错误。\r\n","\r\n            Count of direct metadata on this item, if any.\r\n            Does NOT count any metadata inherited from item definitions.\r\n            Does not count built-in metadata, such as \"FullPath\".\r\n            ":"\r\n            该项目的直接元数据计数（如果有）。\r\n            不计算从项目定义继承的任何元数据。\r\n            不计算内置元数据，例如“ FullPath”。\r\n            \r\n","Metadata name":"元数据名称\r\n","\r\n            The global build request ID for which these results are intended.\r\n            ":"\r\n            这些结果的全局构建请求ID。\r\n            \r\n","Value of metadata.":"元数据的价值。\r\n","\r\n            Throws an InvalidToolsetDefinitionException including a specified inner exception,\r\n            which may be interesting to hosts.\r\n            \r\n            PERF WARNING: calling a method that takes a variable number of arguments\r\n            is expensive, because memory is allocated for the array of arguments -- do\r\n            not call this method repeatedly in performance-critical scenarios\r\n            ":"\r\n            抛出无效的ToolSetDefinitionException，包括指定的内部异常，\r\n            这可能对主机很有趣。\r\n            \r\n            完美警告：调用一种方法，该方法采用可变数量的参数\r\n            很昂贵，因为记忆是为一系列参数分配的 - 做\r\n            在绩效至关重要的情况下不反复调用此方法\r\n            \r\n","\r\n            Retrieves the list of targets which should run before the specified target.\r\n            Never returns null.\r\n            ":"\r\n            检索应在指定目标之前运行的目标列表。\r\n            永远不会返回零。\r\n            \r\n","\r\n            Gets the Path override value.\r\n            ":"\r\n            获取路径覆盖值。\r\n            \r\n","\r\n            Gets an instance of the component.\r\n            ":"\r\n            获取组件的实例。\r\n            \r\n",", sorted in project evaluation order.\r\n             ":"，按项目评估顺序排序。\r\n             \r\n","\r\n            Returns true if the two task identities are equal; false otherwise. \r\n            ":"\r\n            如果两个任务身份相等，则返回true；否则为错误。\r\n            \r\n","OS of the element":"元素OS\r\n","true if follows the drive pattern with slash, false otherwise.":"如果遵循斜线驱动模式，则为true，否则为false。\r\n","\r\n            The platforms that this platform depends on.  \r\n            Item1: Platform name\r\n            Item2: Platform version\r\n            ":"\r\n            该平台取决于的平台。\r\n            项目1：平台名称\r\n            项目2：平台版本\r\n            \r\n","The expanded string.":"扩展的字符串。\r\n","\r\n            An object representing the identity of a task -- not just task name, but also \r\n            the set of identity parameters\r\n            ":"\r\n            代表任务身份的对象 - 不仅是任务名称，还\r\n            一组身份参数\r\n            \r\n","The reason the parent target built the target.":"父母目标构建目标的原因。\r\n","The sender name of the reassignment event.":"重新分配事件的发件人名称。\r\n"," containing this ":" 包含这个\r\n","\r\n            Gets the number of occurrences of the item.\r\n            ":"\r\n            获取项目的出现数量。\r\n            \r\n","If any exception (other than a loggerException)is thrown while creating or initializing the distributed or central logger, we will wrap these exceptions in an InternalLoggerException":"如果在创建或初始化分布式或中央记录仪时会抛出任何例外（除了记录症状之外）\r\n","\r\n            Write message taking into account whether or not the prefix (timestamp and key) have already been written on the line\r\n            ":"\r\n            考虑是否已经在行上写下了前缀（TIMESTAMP和KEY）\r\n            \r\n"," matches this itemspec\r\n            ":" 匹配此项目Spec\r\n            \r\n","\r\n            InProcNodeProvider\r\n            ":"inprocnodeprovider\r\n            \r\n","\r\n            Initialize an unparented ProjectOnErrorElement\r\n            ":"\r\n            初始化无与伦比\r\n            \r\n","\r\n            Returns the path to the Windows SDK for the desired .NET Framework and Visual Studio version.  Note that \r\n            this is only supported for a targeted .NET Framework version of 4.5 and above. \r\n            ":"\r\n            为所需的.NET框架和Visual Studio版本返回到Windows SDK的路径。注意\r\n            仅针对4.5及更高版本的目标.NET框架版本支持这。\r\n            \r\n","This property is thread-safe.":"此属性是线程安全。\r\n","\r\n             We want MSBuild to be able to parallelize the builds of these projects where possible and still honor references.\r\n             Since the project files referenced by the solution do not (necessarily) themselves contain actual project references\r\n             to the projects they depend on, we need to synthesize this relationship ourselves.  This is done by creating a target\r\n             which first invokes the project's dependencies, then invokes the actual project itself.  However, invoking the\r\n             dependencies must also invoke their dependencies and so on down the line.\r\n            \r\n             Additionally, we do not wish to create a separate MSBuild project to contain this target yet we want to parallelize\r\n             calls to these targets.  The way to do this is to pass in different global properties to the same project in the same\r\n             MSBuild call.  MSBuild easily allows this using the AdditionalProperties metadata which can be specified on an Item.\r\n            \r\n             Assuming the solution project we are generating is called \"foo.proj\", we can accomplish this parallelism as follows:\r\n             ":"\r\n             我们希望MSBUILD能够在可能的情况下平行这些项目的构建，并仍然尊重参考。\r\n             由于解决方案引用的项目文件（一定）本身不包含实际的项目参考\r\n             对于他们依赖的项目，我们需要自己综合这种关系。这是通过创建目标来完成的\r\n             首先调用项目的依赖性，然后调用实际项目本身。但是，调用\r\n             依赖项还必须调用其依赖项，等等。\r\n            \r\n             此外，我们不希望创建一个单独的MSBUILD项目来包含此目标，但我们希望并行化\r\n             调用这些目标。这样做的方法是将不同的全局属性传递给同一项目\r\n             MSBUILD电话。 MSBUILD可以轻松地使用可以在项目上指定的附加Properties元数据。\r\n            \r\n             假设我们正在生成的解决方案项目称为“ foo.proj”，我们可以按以下方式完成此并行性：\r\n             \r\n"," property if necessary (update only when changed).\r\n            ":" 如有必要，属性（仅在更改时更新）。\r\n            \r\n","\r\n            Methods for overriding one rule with another.\r\n            ":"\r\n            用另一条规则覆盖一个规则的方法。\r\n            \r\n","This is a method rather than a property so that derived classes (like Exec) can choose to\r\n            expose a public WorkingDirectory property, and it would be confusing to have two properties.":"这是一种方法而不是属性，因此派生的类（例如Exec）可以选择\r\n            揭露公共工作直接属性，拥有两个属性会令人困惑。\r\n","\r\n            Deals with exceptions that may be thrown as a result of ExecuteSubmission.\r\n            ":"\r\n            处理可能因executeUbsiber而引发的例外。\r\n            \r\n","\r\n            This state means the request has completed and results are available.  The engine will remove\r\n            the request from the list and the results will be returned to the node for processing.\r\n            \r\n            Transitions: None, this is the final state of the build request\r\n            ":"\r\n            该状态意味着请求已完成，结果可用。引擎将卸下\r\n            列表和结果的请求将返回到节点进行处理。\r\n            \r\n            过渡：没有，这是构建请求的最终状态\r\n            \r\n","\r\n            Creates a ProjectInstance directly.\r\n            No intermediate Project object is created.\r\n            This is ideal if the project is simply going to be built, and not displayed or edited.\r\n            Global properties may be null.\r\n            Tools version may be null.\r\n            ":"\r\n            直接创建一个ProjectInstance。\r\n            没有创建中间项目对象。\r\n            如果仅仅要构建或不显示或编辑该项目，这是理想的选择。\r\n            全局属性可能为零。\r\n            工具版本可能为空。\r\n            \r\n","\r\n            Creates a new BuildRequestConfiguration based on an existing project instance.\r\n            Used by the BuildManager to populate configurations from a solution.\r\n            ":"\r\n            根据现有项目实例创建一个新的BuildRequestConfiguration。\r\n            由BuildManager使用来从解决方案中填充配置。\r\n            \r\n"," field, that counts as a dereference of ":" 字段，这是对\r\n",". This field is mandatory only if the parent\r\n            ":"。仅当父母\r\n            \r\n","The project file to use as the entry point in constructing the graph":"用于构建图的入口点的项目文件\r\n","\r\n            Location of the DependsOnTargets attribute ,if any\r\n            ":"\r\n            依赖件的位置属性，如果有的话\r\n            \r\n","\r\n            Handler for TaskStartedevents.\r\n            ":"\r\n            TaskStartedEvents的处理程序。\r\n            \r\n","\r\n            Builds multiple project files in parallel.  This is the method the old MSBuild task invokes.\r\n            Thread safe.\r\n            ":"\r\n            并联构建多个项目文件。这是旧的MSBUILD任务调用的方法。\r\n            线程安全。\r\n            \r\n","\r\n            Coerce the arguments according to the parameter types\r\n            Will only return null if the coercion didn't work due to an InvalidCastException\r\n            ":"\r\n            根据参数类型胁迫论点\r\n            仅当由于无效CastException而无法工作时，才会返回null\r\n            \r\n","XML string to process.":"XML字符串进行处理。\r\n","\r\n            Use this for new FileStream(path, mode, access, share)\r\n            ":"\r\n            将其用于新的文件流（路径，模式，访问，共享）\r\n            \r\n","\r\n            Number of pieces of metadata on this item definition.\r\n            ":"\r\n            此项目定义上的元数据数量。\r\n            \r\n","Root registry location to look for sdks":"根注册表位置寻找SDK\r\n","\r\n            Gets the evaluated include for this item, escaped.\r\n            ":"\r\n            获取评估的包括此项目，逃脱。\r\n            \r\n","\r\n            True if target built successfully, false otherwise\r\n            ":"\r\n            如果目标成功构建，则为true，否则为错误\r\n            \r\n","\r\n            Requests to yield the node.\r\n            Thread safe, however Yield cannot be called unless the\r\n            last call to Yield or Reaquire was Reaquire.\r\n            ":"\r\n            要求产生节点的请求。\r\n            线程安全，但是，除非\r\n            最后一次求婚或重审的电话是重点。\r\n            \r\n","\r\n            Returns true if the given character is a valid drive letter\r\n            ":"\r\n            如果给定字符是有效的驱动器字母，则返回true\r\n            \r\n","Inner exception. Can be null":"内部异常。可以是零的\r\n","\r\n            Hash set of properties which have been used before being initialized\r\n            ":"\r\n            在初始化之前已使用的哈希属性集\r\n            \r\n","\r\n            The location in a form suitable for replacement\r\n            into a message.\r\n            Example: \"c:\\foo\\bar.csproj (12,34)\"\r\n            Calling this creates and formats a new string.\r\n            PREFER TO PUT THE LOCATION INFORMATION AT THE START OF THE MESSAGE INSTEAD.\r\n            Only in rare cases should the location go within the message itself.\r\n            ":"\r\n            适合更换的形式的位置\r\n            进入消息。\r\n            示例：“ c：\\ foo \\ bar.csproj（12,34）”\r\n            称此创建并格式化为新字符串。\r\n            更喜欢将位置信息放在消息的开头。\r\n            只有在极少数情况下，该位置才能在消息本身内。\r\n            \r\n","\r\n            Contains all of the metadata which has been changed for items at this level in the Lookup.\r\n            Schema: { K=type, V= { K=item, V=table of { K=metadata name, V=metadata value }}}\r\n            ":"\r\n            包含所有元数据，这些元数据已在查找中为此级别上的项目更改。\r\n            架构：{k = type，v = {k = item，v = {k = metadata name，v = metadata value}}}}}}\r\n            \r\n","The message of the property.":"属性的消息。\r\n","\r\n            This controls whether or not the building of targets/tasks is enabled for this\r\n            project.  This is for security purposes in case a host wants to closely\r\n            control which projects it allows to run targets/tasks.  By default, for a newly\r\n            created project, we will use whatever setting is in the parent project collection.\r\n            When build is disabled, the Build method on this class will fail. However if\r\n            the host has already created a ProjectInstance, it can still build it. (It is\r\n            free to put a similar check around where it does this.)\r\n            ":"\r\n            这控制了是否启用了目标/任务的构建\r\n            项目。这是出于安全目的，以防主机要密切\r\n            控制哪些项目允许运行目标/任务。默认情况下，对于新的\r\n            创建的项目，我们将使用父项目集合中的任何设置。\r\n            当禁用构建时，此类的构建方法将失败。但是，如果\r\n            主机已经创建了一个ProjectInstance，它仍然可以构建它。 （这是\r\n            免费在何处进行类似的检查。）\r\n            \r\n","project file name":"项目文件名\r\n","\r\n            Represents an argument to a ":"\r\n            代表一个论点\r\n","\r\n            The path we need to make relative to basePath.  The path can be either absolute path or a relative path in which case it is relative to the base path.\r\n            If the path cannot be made relative to the base path (for example, it is on another drive), it is returned verbatim.\r\n            ":"\r\n            我们需要相对于底层的路径。该路径可以是绝对路径或相对路径，在这种情况下，该路径相对于基本路径。\r\n            如果无法相对于基本路径（例如，在另一个驱动器上）进行路径，则逐字返回。\r\n            \r\n","\r\n            A cache of previously created item function delegates.\r\n            ":"\r\n            先前创建的项目功能委托的缓存。\r\n            \r\n","\r\n            Marks the parent as blocked waiting for results from a results transfer.\r\n            ":"\r\n            标记父母的等待结果转移的结果。\r\n            \r\n","\r\n            If MSBUILDNOINPROCNODE is set, then even if there's only one node in the buildparameters, it will be an out-of-proc node.\r\n            ":"\r\n            如果设置了MSBUILDNOINPROCNODE，那么即使在buildParameters中只有一个节点，它也将是一个偏离的节点。\r\n            \r\n","\r\n            The BuildFinished logging event\r\n            ":"\r\n            建筑伐木活动\r\n            \r\n","The interface on the build engine available to tasks.":"构建引擎上的接口可用于任务。\r\n","A link pointing to more  information about the warning":"指出有关警告的更多信息的链接\r\n","\r\n            If the property name provided is one of the special\r\n            per file properties named \"MSBuildThisFileXXXX\" then returns the value of that property.\r\n            If the location provided does not have a path (eg., if it comes from a file that has\r\n            never been saved) then returns empty string.\r\n            If the property name is not one of those properties, returns empty string.\r\n            ":"\r\n            如果提供的属性名称是特别的\r\n            然后，名为“ msbuildthisfilexxxxx”的文件属性返回该属性的值。\r\n            如果所提供的位置没有路径（例如，如果它来自具有\r\n            从未保存）然后返回空字符串。\r\n            如果属性名称不是这些属性之一，请返回空字符串。\r\n            \r\n","\r\n            Returns true if this configuration was generated on a node and has not yet been resolved.\r\n            ":"\r\n            如果该配置是在节点上生成且尚未解决的，则返回为true。\r\n            \r\n","\r\n            The build engine, from ITask\r\n            ":"\r\n            构建引擎，从itask\r\n            \r\n","\r\n            Location of the DependsOnTargets attribute\r\n            ":"\r\n            依赖件的位置属性\r\n            \r\n","\r\n                Parse the given ":"\r\n                解析给定\r\n","\r\n            The object used for thread-safe synchronization of static members.\r\n            ":"\r\n            用于静态成员的线程安全同步的对象。\r\n            \r\n","\r\n            Raised when an unexpected exception occurs.\r\n            ":"\r\n            当出现意外例外时提出。\r\n            \r\n","\r\n            The target or request was a complete success.\r\n            ":"目标或请求取得了完全的成功。\r\n            \r\n","\r\n            Gets any output children.\r\n            ":"\r\n            得到任何输出的孩子。\r\n            \r\n","\r\n                A glob with gaps. The gaps are represented as other globs.\r\n                For example, to express a glob that matches all .cs files except the ones containing \"foo\" and the ones under bin directories, one can use:\r\n                ":"\r\n                一个带空白的地球。差距表示为其他地球。\r\n                例如，要表达与所有.cs文件匹配的网球，除了包含“ foo”的文件以及bin目录下的文件，可以使用：\r\n                \r\n","An instantiated LoggingService as a IBuildComponent":"实例化的loggingservice作为iBuildComponent\r\n","\r\n            When set to true, it passes /Q to the cmd.exe command line such that the command line does not get echo-ed on stdout\r\n            ":"\r\n            设置为true时，它将 /q传递到cmd.exe命令行，因此命令行不会在stdout上获得回声\r\n            \r\n","\r\n            Example: Consider ":"\r\n            示例：考虑\r\n","The system path.":"系统路径。\r\n","\r\n            Processes the target stack until its empty or we hit a recursive break (due to CallTarget etc.)\r\n            ":"\r\n            处理目标堆栈直到其空堆栈或我们碰到递归中断（由于Calltarget等）\r\n            \r\n","True if the parameters were set correctly, false otherwise.":"正确，如果正确设置了参数，则否则为false。\r\n","\r\n            Removes the xmlns attribute from an XML string.\r\n            ":"\r\n            从XML字符串中删除XMLNS属性。\r\n            \r\n","\r\n            A list of ILoggers registered with the LoggingService\r\n            ":"\r\n            在Loggingservice注册的Iloggers列表\r\n            \r\n","\r\n            Arguments for project started events\r\n            ":"\r\n            项目开始事件的论点\r\n            \r\n","\r\n            List of properties in this project. This is a live, read-only list.\r\n            ":"\r\n            该项目中的属性列表。这是一个现场读取的列表。\r\n            \r\n","\r\n            Restores a previously saved operating environment.\r\n            ":"\r\n            还原以前保存的操作环境。\r\n            \r\n","\r\n            Must only be called from within the sync lock.\r\n            ":"\r\n            必须仅在同步锁中调用。\r\n            \r\n","\r\n            Returns the properties, items, and metadata that will be returned\r\n            by this build.\r\n            ":"\r\n            返回将返回的属性，项目和元数据\r\n            通过这个构建。\r\n            \r\n","\r\n            Returns an enumerator that provides copies of the properties\r\n            in the backing store.\r\n            Each DictionaryEntry has key of the property name and value of the property value.\r\n            Type of the enumerator is imposed by backwards compatibility for ProjectStartedEvent.\r\n            ":"\r\n            返回提供属性副本的枚举者\r\n            在后备店。\r\n            每个字典都有属性名称和属性值的值的键。\r\n            枚举的类型是通过ProjectStartedEvent的向后兼容性强加的。\r\n            \r\n","\r\n            Translator.\r\n            ":"\r\n            翻译器。\r\n            \r\n","An item with the same key has already been added. Key: {0}":"已经添加了具有相同密钥的项目。钥匙：{0}\r\n","\r\n            Check to see what kind of device we are outputting the log to, is it a character device, a file, or something else\r\n            this can be used by loggers to modify their outputs based on the device they are writing to\r\n            ":"\r\n            检查以查看我们正在输出日志的哪种设备，它是字符设备，文件还是其他设备\r\n            登录器可以使用这可以根据他们写的设备修改其输出来修改其输出\r\n            \r\n",". Thus the complete switch in the command line for this property would be ":"。因此，该属性的命令行中的完整开关将是\r\n","\r\n            Indicates the metadata value should be changed.\r\n            ":"表示应更改元数据值。\r\n            \r\n","\r\n            The expander needs to have a default item factory set.\r\n            ":"\r\n            扩展器需要具有默认项目工厂集。\r\n            \r\n","\r\n            The actual project, in the case where the project doesn't come from disk.\r\n            May be null.\r\n            ":"\r\n            实际项目，如果项目不是来自磁盘的情况。\r\n            可能是无效的。\r\n            \r\n","\r\n            To avoid calling nuget at graph construction time, the graph is initially constructed with outer build nodes referencing inner build nodes.\r\n            However, at build time, for non root outer builds, the inner builds are NOT referenced by the outer build, but by the nodes referencing the\r\n            outer build. Change the graph to mimic this behaviour.\r\n            Examples\r\n            OuterAsRoot -> Inner go to OuterAsRoot -> Inner. Inner builds remain the same, parented to their outer build\r\n            Node -> Outer -> Inner go to: Node -> Outer; Node->Inner; Outer -> empty. Inner builds get reparented to Node\r\n            ":"\r\n            为了避免在图形构造时间调用Nuget，该图最初是用引用内部构建节点的外部构建节点构造的。\r\n            但是，在构建时间，对于非根部外部构建，外部构建并不引用内部构建，而是由引用的节点引用\r\n            外部构建。将图形更改为模仿此行为。\r\n            例子\r\n            OuterAsroot->内部转到OuterAsroot->内部。内部构建保持不变，并归于其外部构建\r\n            节点 - >外部 - >内部转到：节点 - > outer; node-> inner;外部 - >空。内部构建被调整为节点\r\n            \r\n","\r\n            The provider that produces the list of possible values for this property. Must be set.\r\n            ":"\r\n            产生此属性可能值列表的提供商。必须设置。\r\n            \r\n","\r\n            The project file location, for logging.\r\n            If the project has not been loaded from disk and has not been given a path, returns null.\r\n            If the project has not been loaded from disk but has been given a path, this path may not exist.\r\n            ":"\r\n            项目文件位置，用于记录。\r\n            如果该项目尚未从磁盘上加载，也没有给出路径，则返回null。\r\n            如果该项目尚未从磁盘上加载，但已获得一条路径，则该路径可能不存在。\r\n            \r\n","\r\n            Class:       Scanner\r\n            This class does the scanning of the input and returns tokens.\r\n            The usage pattern is:\r\n               Scanner s = new Scanner(expression, CultureInfo)\r\n               do {\r\n                 s.Advance();\r\n               while (s.IsNext(Token.EndOfInput));\r\n            \r\n             After Advance() is called, you can get the current token (s.CurrentToken),\r\n             check it's type (s.IsNext()), get the string for it (s.NextString()).\r\n            ":"\r\n            课程：扫描仪\r\n            该类对输入进行扫描并返回令牌。\r\n            用法模式是：\r\n               扫描仪s =新扫描仪（表达，cultuarinfo）\r\n               做 {\r\n                 s.Advance（）;\r\n               while（s.isnext（token.endofInput））;\r\n            \r\n             在调用Advance（）之后，您可以获取当前令牌（s.currenttoken），\r\n             检查它的类型（s.isnext（）），获取字符串（s.nextstring（））。\r\n            \r\n","\r\n            An internal implementation of ":"\r\n            内部实施\r\n","The message importance of the event.":"事件的消息重要性。\r\n","\r\n            When this delegate is invoked, the WaitHandle on the BuildSubmission will have been be signalled and the OverallBuildResult will be valid.\r\n            ":"\r\n            当调用此代表时，将发出信号，并将整体建筑物的订婚信号发出信号。\r\n            \r\n","\r\n            Create an enumerator from a base IEnumerable of items into an enumerable\r\n            of transformation result which includes the new itemspec and the base item.\r\n            ":"\r\n            从基本的项目中创建一个枚举者，为枚举\r\n            转换结果，其中包括新项目Spec和基本项目。\r\n            \r\n","\r\n            The guid, in \"{XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX}\" form, of this project's \r\n            parent project, if any. \r\n            ":"\r\n            GUID，在“ {xxxxxxxx-xxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxxxxxx}”中\r\n            父项目（如果有）。\r\n            \r\n","\r\n            Must be called within the cache lock.\r\n            If the size of strong cache gets large, this needs a faster data structure\r\n            than a linked list. It's currently O(n).\r\n            ":"\r\n            必须在缓存锁中调用。\r\n            如果强烈缓存的大小变大，则需要更快的数据结构\r\n            而不是链接列表。目前是o（n）。\r\n            \r\n","\r\n            Fragment of the original include that led to this item,\r\n            with properties expanded but not wildcards.  Escaped as necessary\r\n            ":"\r\n            原始的片段包括导致此项目的片段，\r\n            属性扩大但不扩大通配符。必要时逃脱\r\n            \r\n","\r\n            Handler for engine exceptions.\r\n            ":"\r\n            引擎例外的处理程序。\r\n            \r\n","\r\n            Returns the path to a file in the Windows SDK for the desired .NET Framework and Visual Studio version and the desired \r\n            architecture.  Note that this is only supported for a targeted .NET Framework version of 4.5 and above. \r\n            ":"\r\n            为所需的.NET框架和Visual Studio版本返回Windows SDK中文件的路径以及所需的\r\n            建筑学。请注意，仅针对4.5及以上的目标.NET框架版本支持这。\r\n            \r\n","\r\n            Starts a build using this project, building the specified targets.\r\n            Returns true on success, false on failure.\r\n            Works on a privately cloned instance. To set or get\r\n            virtual items for build purposes, clone an instance explicitly and build that.\r\n            Does not modify the Project object.\r\n            ":"\r\n            使用此项目启动构建，建立指定目标。\r\n            成功返回，成功，失败。\r\n            在私人克隆实例上工作。设置或获得\r\n            用于构建目的的虚拟项目，明确克隆实例并构建该实例。\r\n            不修改项目对象。\r\n            \r\n","\r\n            A task should notify the build manager when all or some of the requested cores are not used anymore.\r\n            When task is finished, the cores it requested are automatically released.\r\n            ":"\r\n            当不再使用所有请求的内核时，任务应通知构建管理器。\r\n            完成任务后，它要求的内核会自动释放。\r\n            \r\n","\r\n            Enum that specifies how an item element references an item.\r\n            ":"\r\n            指定项目元素如何引用项目的枚举。\r\n            \r\n","\r\n            The name of the property that indicates the tools path\r\n            ":"\r\n            指示工具路径的属性名称\r\n            \r\n","\r\n            For the VC++ CL task, ":"\r\n            对于VC ++ CL任务，\r\n","\r\n            An instanatiable version of MSBuildFileSystemBase not overriding any methods,\r\n            i.e. falling back to FileSystem.Default.\r\n            ":"\r\n            MSBUILDFILESYSTEMBASE的一个内词版本不覆盖任何方法，\r\n            即落回Filesystem.default。\r\n            \r\n","\r\n            Targets in the project after overrides have been resolved.\r\n            This is an immutable, unordered collection keyed by target name.\r\n            It is just a wrapper around ":"\r\n            覆盖后项目中的目标已解决。\r\n            这是一个不可变的，无序的集合，由目标名称键起。\r\n            这只是周围的包装纸\r\n","\r\n            The first value added to the concatenator. Tracked in its own field so it can be returned\r\n            without conversion if no concatenation takes place.\r\n            ":"\r\n            第一个值添加到串联器中。在自己的领域进行跟踪，以便可以返回\r\n            如果不进行串联，则没有转换。\r\n            \r\n","\r\n            Return a task registry for the override tasks in the *.overridetasks file for this toolset         \r\n            ":"\r\n            返回 *.overridetasks文件中的覆盖任务的任务注册表此工具集\r\n            \r\n","\r\n            Message sent from a node when it needs to have an SDK resolved.\r\n            ":"\r\n            当节点需要解决SDK时从节点发送的消息。\r\n            \r\n","\r\n            Gets the appropriate ScheduleResponse for a result, either to complete a submission or to report to a node.\r\n            ":"\r\n            获取结果的适当调度响应，以完成提交或向节点报告。\r\n            \r\n","\r\n            Signals that the build has been aborted by the specified node.\r\n            ":"\r\n            信号表明该构建已被指定的节点中止。\r\n            \r\n","\r\n            Reads or writes the task item to the translator using an interner for metadata.\r\n            ":"\r\n            使用元数据的Interner读取或写任务项将其写给翻译人员。\r\n            \r\n","\r\n            The binary writer around the originalStream.\r\n            ":"\r\n            原始流的二进制作家。\r\n            \r\n","\r\n            Returns true if the last component of the given directory path (assumed to not have any trailing slashes)\r\n            matches the given pattern.\r\n            ":"\r\n            如果给定目录路径的最后一个组件（假定没有任何落后斜线），则返回true\r\n            匹配给定模式。\r\n            \r\n","\r\n            This is the Windows file version (specifically the value of the FileVersion\r\n            resource), not necessarily the assembly version.\r\n            If you want the assembly version, use Constants.AssemblyVersion.\r\n            This is not the ":"\r\n            这是Windows文件版本（特别是文件VELAVER的值\r\n            资源），不一定是汇编版本。\r\n            如果需要汇编版本，请使用常量。启用。\r\n            这不是\r\n","\r\n            Returns a hashset of warnings to be logged as errors for the specified project instance ID.\r\n            ":"\r\n            返回警告标签，该警告将记录为指定项目实例ID的错误。\r\n            \r\n","\r\n            Intrinsic function that returns only those items have the given metadata value\r\n            Using a case insensitive comparison\r\n            ":"\r\n            仅返回这些项目具有给定的元数据值的固有功能\r\n            使用案例不敏感的比较\r\n            \r\n","list of item-specs":"项目规格列表\r\n","\r\n            If true, adds direct metadata to the ":"\r\n            如果为true，将直接元数据添加到\r\n","\r\n            Get a list of child item definitions.\r\n            ":"获取子项目定义的列表。\r\n            \r\n","\r\n            Construct an empty project, evaluating with the global project collection's\r\n            global properties and default tools version.\r\n            Project will be added to the global project collection when it is named.\r\n            ":"\r\n            构建一个空项目，评估全球项目集合的\r\n            全局属性和默认工具版本。\r\n            命名时，项目将被添加到全球项目集合中。\r\n            \r\n","\r\n            This is the default stub implementation, only here as a safeguard.\r\n            Actual logic is injected from Microsoft.Build.dll to replace this.\r\n            This is used by the Message property overrides to reconstruct the\r\n            message lazily on demand.\r\n            ":"\r\n            这是默认的存根实现，仅在这里作为保障。\r\n            实际逻辑是从Microsoft.build.dll注入的。\r\n            消息属性覆盖以重建该消息\r\n            懒洋洋地按需消息。\r\n            \r\n"," to create instances of this class. Do not\r\n                    inherit from this class.\r\n                ":" 创建此类实例。不要\r\n                    从这个课程继承。\r\n                \r\n","\r\n            This property allows a task to query whether or not the system is running in single process mode or multi process mode.\r\n            Single process mode (IsRunningMultipleNodes = false) is where the engine is initialized with the number of cpus = 1 and the engine is not a child engine.\r\n            The engine is in multi process mode (IsRunningMultipleNodes = true) when the engine is initialized with a number of cpus > 1 or the engine is a child engine.\r\n            ":"\r\n            此属性允许任务查询系统是否在单个过程模式或多进程模式下运行。\r\n            单个过程模式（IsrunningmultipleNodes = false）是发动机以CPU = 1的数量初始化发动机，并且发动机不是子引擎。\r\n            当发动机用多个CPU> 1初始化发动机或发动机是儿童发动机时，发动机处于多工艺模式（isrunningmultipleenodes = true）。\r\n            \r\n","\r\n            The name of the task to execute.\r\n            ":"\r\n            执行任务的名称。\r\n            \r\n","task name":"任务名称\r\n"," for the version,\r\n            this method will always return true since ":" 对于版本，\r\n            此方法将始终返回true，因为\r\n","\r\n            Whatever information regarding support for multiple versions is found in the manifest\r\n            ":"\r\n            在清单中找到有关多个版本支持的任何信息\r\n            \r\n","\r\n            Worker thread loop.\r\n            Called on debugger worker thread.\r\n            ":"\r\n            工人线循环。\r\n            打电话给调试器工人线程。\r\n            \r\n","\r\n            The input item name (can be null)\r\n            ":"\r\n            输入项目名称（可以为null）\r\n            \r\n","\r\n            Specify whether the current OS platform is ":"\r\n            指定当前的操作系统平台是\r\n","\r\n            Method called when the body of a packet has been read.\r\n            ":"\r\n            当读取数据包的主体时，调用方法。\r\n            \r\n","A matching configuration if one exists, null otherwise.":"匹配配置如果存在，则否则为null。\r\n","\r\n            An interface for objects which the Evaluator can use as a destination for evaluation of ProjectRootElement.\r\n            ":"\r\n            评估者可以用作评估项目Rootelement的目的地的对象的接口。\r\n            \r\n","\r\n            Object used to synchronize access to internals.\r\n            ":"\r\n            用于同步内部访问的对象。\r\n            \r\n","A loaded project.":"一个加载的项目。\r\n","\r\n            The MSBuildBinPath (and ToolsPath) for this tools version\r\n            ":"\r\n            此工具版本的MSBUILDBINPATH（和Toolspath）\r\n            \r\n","\r\n            Raised when a new request is generated.\r\n            ":"\r\n            生成新请求时提出。\r\n            \r\n","\r\n            Adds a new target.\r\n            Only called during evaluation, so does not check for immutability.\r\n            ":"\r\n            添加了一个新目标。\r\n            仅在评估过程中调用，因此不检查不变性。\r\n            \r\n","\r\n            Expands item/property/metadata in expressions.\r\n            Encapsulates the data necessary for expansion.\r\n            ":"\r\n            在表达式中扩展项目/属性/元数据。\r\n            封装扩展所需的数据。\r\n            \r\n","\r\n            The type of file artifact to search for\r\n            ":"\r\n            用于搜索的文件伪像的类型\r\n            \r\n","\r\n            A factory which is registered to create an instance of this class.\r\n            ":"\r\n            注册以创建此类实例的工厂。\r\n            \r\n","\r\n            DependsOn metadata name\r\n            ":"\r\n            依赖子元数据名称\r\n            \r\n","\r\n            Stack of file paths pushed as we follow imports\r\n            ":"\r\n            当我们遵循导入时，请按下文件路径堆栈\r\n            \r\n","The targets to search for":"搜索的目标\r\n","\r\n            helps implementation the ":"\r\n            帮助实施\r\n","\r\n            The type of action to take in response to a scheduling request.\r\n            ":"\r\n            为了响应调度请求而采取的措施类型。\r\n            \r\n","\r\n            Create environment variable properties snapshot\r\n            ":"\r\n            创建环境变量属性快照\r\n            \r\n","\r\n            Whether or not this is out-of-proc.\r\n            ":"\r\n            这是否是爆炸性的。\r\n            \r\n","\r\n            A bitmask to specify which fields on a BuildEventArgs object are present; used in serialization\r\n            ":"\r\n            一个bitmask可以指定存在buildeventargs对象上的哪些字段；用于序列化\r\n            \r\n","\r\n            True if execution succeeded, false otherwise.\r\n            ":"\r\n            如果执行成功，则为false，否则为否则。\r\n            \r\n","The metadata value, or an null if none exists.":"元数据值，如果不存在，则为null。\r\n","\r\n            Equality of the configuration is the product of the equality of its members.\r\n            ":"\r\n            配置的平等是其成员平等的产物。\r\n            \r\n","\r\n             Register a distributed logger. This involves creating a new eventsource sink\r\n             and associating this with the central logger. In addition the sinkId needs\r\n             to be put in the loggerDescription so that nodes know what they need to\r\n             tag onto the event so that the message goes to the correct logger.\r\n            \r\n             The central logger is initialized before the distributed logger\r\n             ":"\r\n             注册分布式记录器。这涉及创建一个新的Eventsource sink\r\n             并将其与中央记录仪相关联。另外需求\r\n             要放入loggerDescription，以便节点知道他们需要什么\r\n             将标记到事件上，以使消息传达到正确的记录器。\r\n            \r\n             中央记录仪在分布式记录器之前初始化\r\n             \r\n","\r\n            A logging context for a project.\r\n            ":"\r\n            项目的记录上下文。\r\n            \r\n","\r\n            When true, the build should log the input parameters.  Note - logging these is very expensive!\r\n            ":"\r\n            如果为true，则构建应记录输入参数。注意 - 记录这些非常昂贵！\r\n            \r\n","\r\n            Appends a command-line switch that takes a string[] parameter,\r\n            and add double-quotes around the individual filenames if necessary.\r\n            This method appends a space to the command line (if it's not currently empty) before the switch.\r\n            ":"\r\n            附加命令行开关，该开关将字符串[]参数，\r\n            并在必要时在单个文件名周围添加双重报价。\r\n            此方法在开关之前将一个空间附加到命令行（如果当前不是空）。\r\n            \r\n","\r\n            The output path for a given item.\r\n            ":"\r\n            给定项目的输出路径。\r\n            \r\n","An instance of the component.":"组件的实例。\r\n","String to encode.":"字符串编码。\r\n","Did the build succeede or not":"建造是否成功了\r\n","\r\n            Creates an expander passing it some properties, items, and/or metadata to use.\r\n            Any or all may be null.\r\n            ":"\r\n            创建一个传播者，传递一些属性，项目和/或元数据。\r\n            任何或全部可能为null。\r\n            \r\n","The number of new nodes of that particular affinity to create.":"要创建该特定亲和力的新节点的数量。\r\n","\r\n            Condition on the task, if any\r\n            May be empty string\r\n            ":"\r\n            任务条件，如果有的话\r\n            可能是空字符串\r\n            \r\n","\r\n            When writing the current record, first write it to a memory stream,\r\n            then flush to the originalStream. This is needed so that if we discover\r\n            that we need to write a string record in the middle of writing the\r\n            current record, we will write the string record to the original stream\r\n            and the current record will end up after the string record.\r\n            ":"\r\n            编写当前记录时，首先将其写入内存流，\r\n            然后冲向原始的流。这是需要的，以便我们发现\r\n            我们需要在编写中间编写字符串记录\r\n            当前记录，我们将将字符串记录写入原始流\r\n            当前记录将在字符串记录之后结束。\r\n            \r\n","\r\n            We want MSBuild to be able to parallelize the builds of these projects where possible and still honor references.\r\n            Since the project files referenced by the solution do not (necessarily) themselves contain actual project references\r\n            to the projects they depend on, we need to synthesize this relationship ourselves.  This is done by creating a target\r\n            which first invokes the project's dependencies, then invokes the actual project itself.  However, invoking the \r\n            dependencies must also invoke their dependencies and so on down the line.  \r\n            \r\n            Additionally, we do not wish to create a separate MSBuild project to contain this target yet we want to parallelize\r\n            calls to these targets.  The way to do this is to pass in different global properties to the same project in the same\r\n            MSBuild call.  MSBuild easily allows this using the AdditionalProperties metadata which can be specified on an Item.\r\n            \r\n            Assuming the solution project we are generating is called \"foo.proj\", we can accomplish this parallelism as follows:\r\n            ":"\r\n            我们希望MSBUILD能够在可能的情况下平行这些项目的构建，并仍然尊重参考。\r\n            由于解决方案引用的项目文件（一定）本身不包含实际的项目参考\r\n            对于他们依赖的项目，我们需要自己综合这种关系。这是通过创建目标来完成的\r\n            首先调用项目的依赖性，然后调用实际项目本身。但是，调用\r\n            依赖项还必须调用其依赖项，等等。\r\n            \r\n            此外，我们不希望创建一个单独的MSBUILD项目来包含此目标，但我们希望并行化\r\n            调用这些目标。这样做的方法是将不同的全局属性传递给同一项目\r\n            MSBUILD电话。 MSBUILD可以轻松地使用可以在项目上指定的附加Properties元数据。\r\n            \r\n            假设我们正在生成的解决方案项目称为“ foo.proj”，我们可以按以下方式完成此并行性：\r\n            \r\n","\r\n            This list will contain duplicate imports if an import is imported multiple times. However, only the first import was used in evaluation.\r\n            ":"\r\n            如果导入多次导入导入，则此列表将包含重复导入。但是，只有第一个导入用于评估。\r\n            \r\n","\r\n            Gets or sets the project instance.\r\n            ":"\r\n            获取或设置项目实例。\r\n            \r\n","\r\n            Gets the node affinity for the specified request.\r\n            ":"\r\n            获取指定请求的节点亲和力。\r\n            \r\n","\r\n            The base path we want to relativize to. Must be absolute.  \r\n            Should ":"\r\n            我们要关联到的基本路径。必须是绝对的。\r\n            应该\r\n","True if the item is a simple reference to the referenced item type.":"如果项目是对引用的项目类型的简单引用，则为true。\r\n"," using a given\r\n                ":" 使用给定\r\n                \r\n","\r\n            Gets or sets the endpoint shutdown timeout.\r\n            ":"\r\n            获取或设置端点关闭超时。\r\n            \r\n","\r\n             The Target Builder is responsible for building a single target within a given project.\r\n             ":"\r\n             目标构建器负责在给定项目中构建单个目标。\r\n             \r\n","\r\n            The TaskStarted event handler\r\n            ":"\r\n            任务启动事件处理程序\r\n            \r\n","\r\n            Retrieves a request which is ready to continue executing.\r\n            ":"\r\n            检索准备继续执行的请求。\r\n            \r\n","\r\n            ToolLocationHelper provides utility methods for locating .NET Framework and .NET Framework SDK directories and files.\r\n            NOTE: All public methods of this class are available to MSBuild projects for use in functions - they must be safe for\r\n            use during project evaluation.\r\n            ":"\r\n            ToollocationHelper提供了用于查找.NET Framework和.NET Framework SDK目录和文件的实用方法。\r\n            注意：此类的所有公共方法均可用于MSBUILD项目以用于功能 - 它们必须安全\r\n            在项目评估期间使用。\r\n            \r\n","\r\n            Condition on the output element.\r\n            If there is no condition, returns empty string.\r\n            ":"\r\n            输出元素的条件。\r\n            如果没有条件，请返回空字符串。\r\n            \r\n","Whether to use the results cache":"是否使用结果缓存\r\n","The path to the project that defined the item.":"定义项目的项目的路径。\r\n","\r\n            The set of referrers.\r\n            ":"\r\n            推荐人集。\r\n            \r\n","\r\n            Returns a Func that will return true IFF its argument matches any of the specified filespecs\r\n            Assumes filespec may be escaped, so it unescapes it\r\n            The returned function makes no escaping assumptions or escaping operations. Its callers should control escaping.\r\n        ":"\r\n            返回一个将返回true的函数，如果其参数匹配任何指定的fileSpecs\r\n            假设FILESPEC可能被逃脱，因此它不es缩\r\n            返回的功能没有逃脱的假设或逃避操作。它的呼叫者应控制逃脱。\r\n        \r\n","\r\n            By default if the number of processes is set to 1 we will use Asynchronous logging. However if we want to use synchronous logging when the number of cpu's is set to 1\r\n            this property needs to be set to true.\r\n            ":"\r\n            默认情况下，如果将过程数设置为1，我们将使用异步记录。但是，如果我们想在将CPU的数量设置为1时使用同步记录\r\n            此属性需要设置为真。\r\n            \r\n","The escaped as necessary metadata value.":"逃脱是必要的元数据值。\r\n","property expression to parse":"要解析的属性表达式\r\n","Version of Visual Studio associated with the SDK.":"与SDK关联的Visual Studio版本。\r\n","Any item type that can be considered an implicit input to this batchable object.\r\n            This is useful for items inside targets, where the item name is plainly an item type that's an \"input\" to the object.":"任何可以视为该批处理对象的隐式输入的项目类型。\r\n            这对于目标内部的项目很有用，其中项目名称显然是对对象的“输入”的项目类型。\r\n","\r\n            Enumerable over the locations of parameters on the task.\r\n            Condition and ContinueOnError, which have their own properties, are not included in this collection.\r\n            If parameters differ only by case only the last one will be returned. MSBuild uses only this one.\r\n            Hosts can still remove the other parameters by using RemoveAllParameters().\r\n            ":"\r\n            在任务上的参数位置枚举。\r\n            条件和连续性具有自己的属性，并未包含在此系列中。\r\n            如果参数仅因情况而差异，则仅返回最后一个。 MSBUILD仅使用此。\r\n            主机仍然可以使用removeallParameters（）删除其他参数。\r\n            \r\n","Information about the node created":"有关创建的节点的信息\r\n",". This is the return value for most instances of this\r\n            enumerator.\r\n            ":"。这是大多数情况的回报值\r\n            枚举者。\r\n            \r\n","\r\n            The most current ToolsVersion known to this version of MSBuild.\r\n            ":"\r\n            此版本的MSBUILD已知的最新工具。\r\n            \r\n","\r\n            Hashtable used for deduplicating name-value lists. Same as strings.\r\n            ":"\r\n            用于删除名称值列表的载量表。和弦。\r\n            \r\n","The target":"目标\r\n","\r\n            An interface representing an object which can act as a property.\r\n            ":"\r\n            代表可以充当属性的对象的接口。\r\n            \r\n","\r\n            Sets or retrieves an immutable collection of global properties.\r\n            ":"\r\n            集合或检索全球属性的不变收集。\r\n            \r\n","\r\n            External projects support.\r\n            Allow for creating a local representation to external object of type ":"\r\n            外部项目支持。\r\n            允许为类型的外部对象创建本地表示\r\n",". To\r\n            disable whole program optimization, you need to pass the ReverseSwitch, which is ":"。至\r\n            禁用整个程序优化，您需要通过反向开关，即\r\n","\r\n            Performs logical AND on children\r\n            Does not update conditioned properties table\r\n            ":"\r\n            表演逻辑和孩子\r\n            不更新条件属性表\r\n            \r\n","\r\n            Private constructor.\r\n            Called by outer class factory method.\r\n            ":"\r\n            私人构造函数。\r\n            由外班级工厂方法调用。\r\n            \r\n","\r\n            Holder for the projects loaded into this collection.\r\n            ":"\r\n            加载到此集合中的项目的持有人。\r\n            \r\n","\r\n            Starts up the node and processes messages until the node is requested to shut down.\r\n            Assumes no node reuse.\r\n            Assumes low priority is disabled.\r\n            ":"\r\n            启动节点并处理消息，直到要求关闭节点为止。\r\n            假设没有node重复使用。\r\n            假设低优先级是禁用的。\r\n            \r\n","\r\n            Convenience method to add a conditioned Output Property to this task. \r\n            Adds after the last child. \r\n            ":"\r\n            便利方法将条件输出属性添加到此任务中。\r\n            在最后一个孩子之后添加。\r\n            \r\n","parent project file":"父项目文件\r\n","\r\n            The invalid node id\r\n            ":"\r\n            无效节点ID\r\n            \r\n","The value (itemspec) for the item":"该项目的值（itemspec）\r\n","\r\n            This class represents an entry for a project configuration in a solution configuration.\r\n            ":"\r\n            此类代表解决方案配置中项目配置的条目。\r\n            \r\n","The task registry":"任务注册表\r\n","\r\n            Lock for process wide ToolsetConfigurationSection section cache\r\n            ":"\r\n            锁定过程宽工具集合仪部分缓存\r\n            \r\n","\r\n            This constructor allows event data to be initialized and the timestamp to be set\r\n            Sender is assumed to be \"MSBuild\".\r\n            ":"\r\n            该构造函数允许初始化事件数据，并设置时间戳\r\n            假定发件人是“ msbuild”。\r\n            \r\n","\r\n            The next available local unresolved configuration Id\r\n            ":"\r\n            下一个可用的本地未解决配置ID\r\n            \r\n","\r\n            There is no yield action\r\n            ":"\r\n            没有收益动作\r\n            \r\n","\r\n            The toolset provider\r\n            ":"\r\n            工具集提供商\r\n            \r\n","\r\n            Location of the \"ContinueOnError\" attribute on this element, if any.\r\n            If there is no such attribute, returns null;\r\n            ":"\r\n            如果有的话，此元素上的“ rentionOrror”属性位置。\r\n            如果没有这样的属性，请返回null；\r\n            \r\n","\r\n            Recursively accumulates the amount of time spent in each configuration.\r\n            ":"\r\n            递归地积累每种配置中花费的时间。\r\n            \r\n","\r\n            The unformatted reason for dirtying the project collection.\r\n            ":"\r\n            弄脏项目集合的无法规原因。\r\n            \r\n","\r\n            Project that owns this data\r\n            ":"\r\n            拥有此数据的项目\r\n            \r\n","\r\n            Ensures that the dictionary can hold up to 'capacity' entries without any further expansion of its backing storage\r\n            ":"\r\n            确保字典可以保持“容量”条目，而无需进一步扩展其备份存储\r\n            \r\n","\r\n            Contains information about a target name and reference location.\r\n            ":"\r\n            包含有关目标名称和参考位置的信息。\r\n            \r\n","\r\n            List of arguments for this property.\r\n            ":"\r\n            此属性的参数列表。\r\n            \r\n","\r\n            Updates the ProjectRootElement cache.\r\n            ":"\r\n            更新ProjectRootelement缓存。\r\n            \r\n"," containing information about the referenced SDK.":" 包含有关引用SDK的信息。\r\n","\r\n            This event is NOT raised for direct project XML changes via the construction model.\r\n            ":"\r\n            通过施工模型进行直接项目XML更改，并未提出此事件。\r\n            \r\n","\r\n            Removes a container for this entry.\r\n            Callers must verify that this was not already reffed and not subsequently dereffed.\r\n            ":"\r\n            卸下此条目的容器。\r\n            呼叫者必须验证这尚未被拒绝，随后尚未被删除。\r\n            \r\n","\r\n            Gets or sets the metadata's type.\r\n            ":"\r\n            获取或设置元数据类型。\r\n            \r\n","\r\n            This cannot be set, as it is used as the key into\r\n            the project's items table.\r\n            ":"无法设置此设置，因为它被用作键\r\n            项目的项目表。\r\n            \r\n","\r\n            Record an import opened during evaluation.\r\n            This is used to check later whether any of them have been changed.\r\n            ":"\r\n            记录在评估期间打开的导入。\r\n            这用于检查稍后是否已更改。\r\n            \r\n","\r\n            Gets the inline task record\r\n            ":"\r\n            获取内联任务记录\r\n            \r\n","\r\n            Creates a property without backing XML. \r\n            Property MAY BE global, and property MAY HAVE a reserved name (such as \"MSBuildProjectDirectory\") if indicated.\r\n            This is ONLY to be used by the Evaluator (and Project.SetGlobalProperty) and ONLY for Global, Environment, and Built-in properties.\r\n            All other properties originate in XML, and should have a backing XML object.\r\n            ":"\r\n            创建一个无需备份XML的属性。\r\n            属性可以是全局，并且属性可能具有保留名称（例如“ MSBUILDPROJECTDIRECTORY”）。\r\n            这仅由评估者（和project.set.setglobalproperty）使用，并且仅用于全球，环境和内置属性。\r\n            所有其他属性均起源于XML，并且应具有Backing XML对象。\r\n            \r\n","\r\n            Constructor called by the Evaluator.\r\n            Assumes ProjectPropertyGroupTaskPropertyInstance is an immutable type.\r\n            ":"\r\n            评估器调用的构造函数。\r\n            假设ProjectPropertyGrouptask Propertyinstance是不变的类型。\r\n            \r\n","The specification to match against the items.":"与项目匹配的规范。\r\n","\r\n            The result of profiling a project.\r\n            ":"\r\n            分析项目的结果。\r\n            \r\n","\r\n            Writes a plan for the specified submission id.\r\n            ":"\r\n            为指定提交ID制定计划。\r\n            \r\n","\r\n            Shuts down all of the connected, managed nodes.  This call will not return until all nodes are shut down.\r\n            ":"\r\n            关闭所有连接的托管节点。在关闭所有节点之前，此呼叫不会返回。\r\n            \r\n","\r\n            Text of event.\r\n            ":"\r\n            事件文字。\r\n            \r\n","\r\n            The continueOnError flag\r\n            ":"\r\n            ContinonError国旗\r\n            \r\n","\r\n            Gets the next task id.\r\n            ":"\r\n            获取下一个任务ID。\r\n            \r\n","Optimization":"优化\r\n","\r\n             Finds all the item elements in the logical project with itemspecs that match the given string:\r\n             - elements that would include (or exclude) the string\r\n             - elements that would update the string (not yet implemented)\r\n             - elements that would remove the string (not yet implemented).\r\n             ":"\r\n             使用与给定字符串匹配的ItemSpecs中找到逻辑项目中的所有项目元素：\r\n              - 包括（或排除）字符串的元素\r\n              - 将更新字符串的元素（尚未实现）\r\n              - 将删除字符串的元素（尚未实现）。\r\n             \r\n","\r\n            Implementation of IMetadataTable that can be passed to expander\r\n            to expose only built-in metadata on this item.\r\n            ":"\r\n            可以通过\r\n            仅在此项目上暴露内置元数据。\r\n            \r\n","\r\n            The host allows task factories access to method to allow them to log message during the construction of the task factories.\r\n            ":"\r\n            主机允许任务工厂访问方法，以允许他们在构建任务工厂期间记录消息。\r\n            \r\n","\r\n            The frames member is contained by FrameStack and does\r\n            all the heavy lifting for FrameStack.\r\n            ":"\r\n            帧成员由Framestack包含\r\n            Framestack的所有繁重举重。\r\n            \r\n","\r\n            The help context to use when the user hits F1. Must specify ":"\r\n            用户击中F1时要使用的帮助上下文。必须指定\r\n","\r\n            List of arguments for this ":"\r\n            为此的论点清单\r\n","Filespecs to exclude, escaped.":"档案排除，逃脱。\r\n","\r\n            Logs a warning using the specified resource string.\r\n            ":"\r\n            使用指定的资源字符串记录警告。\r\n            \r\n","\r\n            This is a destructive operation.  It clears the NameValuePair list field.\r\n            ":"\r\n            这是一个破坏性的操作。它清除了名称valuepair列表字段。\r\n            \r\n","\r\n            Expand only properties and then item lists\r\n            ":"\r\n            仅扩展属性，然后扩展项目列表\r\n            \r\n","\r\n            Verify the task host is active or not\r\n            Thread safe.\r\n            ":"\r\n            验证任务主机是否有效\r\n            线程安全。\r\n            \r\n","\r\n            A callback used to receive notification that a build has completed.\r\n            ":"\r\n            用于接收构建已完成的通知的回调。\r\n            \r\n","\r\n            Routes the specified packet. This is called by the Inproc node directly since it does not have to do any deserialization\r\n            ":"\r\n            路由指定的数据包。 INPROC节点直接调用，因为它不必进行任何避难所化\r\n            \r\n","\r\n            A shared project represents a collection of shared files that is not buildable on its own.\r\n            ":"\r\n            共享项目代表共享文件的集合，这些文件本身不可构建。\r\n            \r\n","\r\n            Get the list of SDK folders which contains the redist files for the sdk at the sdkRoot provided\r\n            in the order in which they should be searched for references.\r\n            ":"\r\n            获取SDK文件夹的列表，该文件夹包含SDKRoot处的SDK的REDIST文件\r\n            按照他们应搜索参考的顺序。\r\n            \r\n","\r\n            The value of the property\r\n            ":"\r\n            财产的价值\r\n            \r\n","\r\n            Populate Toolsets with a dictionary of (toolset version, Toolset)\r\n            using information from the registry and config file, if any.\r\n            ":"\r\n            用（工具集版本，工具集）的字典填充工具集\r\n            使用注册表和配置文件中的信息（如果有）。\r\n            \r\n","\r\n            Returns true if this node evaluates to an empty string,\r\n            otherwise false.\r\n            It may be cheaper to determine whether an expression will evaluate\r\n            to empty than to fully evaluate it.\r\n            Implementations should cache the result so that calls after the first are free.\r\n            ":"\r\n            如果此节点评估为空字符串，则返回true，\r\n            否则错误。\r\n            确定表达是否会评估可能会更便宜\r\n            空的比完全评估它。\r\n            实现应缓存结果，以便第一个免费的呼叫。\r\n            \r\n","\r\n            A Boolean value that specifies whether the returned handle is inherited when a new process is created.\r\n            If this member is TRUE, the new process inherits the handle.\r\n            ":"\r\n            布尔值指定在创建新过程时是否继承返回的句柄。\r\n            如果此成员为真，则新过程继承了句柄。\r\n            \r\n","\r\n                The default version of this delegate used by ProjectGraph simply calls the\r\n                ProjectInstance constructor with information from the parameters. This delegate\r\n                is provided as a hook to allow scenarios like creating a ":"\r\n                ProjectGraph使用的此代表的默认版本简单地调用\r\n                ProjectInstance构造函数，带有来自参数的信息。这个代表\r\n                作为钩子提供，以允许创建一个场景\r\n","\r\n            Gets a value indicating if the resolver is allowed to be interactive.\r\n            ":"\r\n            获取一个值，指示是否允许解析器进行交互。\r\n            \r\n","\r\n            The sum of number of cores explicitly granted to all build requests.\r\n            ":"\r\n            明确授予所有构建请求的核心数量的总和。\r\n            \r\n","\r\n            The name of the function that this class will call\r\n            ":"\r\n            此类将调用功能的名称\r\n            \r\n"," causes the property value to be written to and read from the project\r\n            manifest file or the property sheet (depending on which node in the solution explorer/property manager window\r\n            is used to spawn the property pages UI). ":" 导致财产价值写入和从项目中读取\r\n            清单文件或属性表（具体取决于解决方案Explorer/属性管理器窗口中的哪个节点\r\n            用于产生属性页UI）。\r\n","\r\n            Target platform version\r\n            ":"\r\n            目标平台版本\r\n            \r\n","\r\n            This method instructs the request builder to build the specified projects using the specified parameters.  This is\r\n            what is ultimately used by something like an MSBuild task which needs to invoke a project-to-project reference.  IBuildEngine\r\n            and IBuildEngine2 have BuildProjectFile methods which boil down to an invocation of this method as well.\r\n            ":"\r\n            此方法指示请求构建器使用指定参数构建指定的项目。这是\r\n            诸如MSBUILD任务之类的东西最终使用的是需要调用项目对项目的参考。 ibuildengine\r\n            iBuildEngine2具有buildProjectFile方法，也归结为该方法的调用。\r\n            \r\n","The value stored in the dictionary":"存储在字典中的值\r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n            Adds a new item ordered by include.\r\n            Metadata may be null, indicating no metadata.\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n            添加了由Inclupher订购的新项目。\r\n            元数据可能是无效的，表明没有元数据。\r\n            \r\n","\r\n            Creates and returns a list of ":"\r\n            创建并返回\r\n","\r\n            Object containing the properties in the SDK manifest\r\n            ":"\r\n            SDK清单中包含属性的对象\r\n            \r\n","\r\n                Constructs a graph starting from the given project file, evaluating with the provided global properties and the\r\n                global project collection.\r\n            ":"\r\n                从给定的项目文件开始构造图形，用提供的全局属性评估\r\n                全球项目集合。\r\n            \r\n","\r\n            Writes trace information to a log file\r\n            ":"\r\n            将跟踪信息写入日志文件\r\n            \r\n","\r\n            Name of the property used to store the path to the solution being built.\r\n            ":"\r\n            用于存储要构建解决方案的路径的属性的名称。\r\n            \r\n","\r\n            Cleans up after a build but leaves the engine thread running.  Aborts\r\n            any outstanding requests.  Blocks until the engine has cleaned up\r\n            everything.  After this method is called, InitializeForBuild may be\r\n            called to start a new build, or the component may be shut down.        \r\n            ":"\r\n            构建后清理，但使发动机线运行。中止\r\n            任何未偿还的请求。块直到发动机清理\r\n            一切。调用此方法后，初始化forbuild可能是\r\n            呼吁启动新构建，或者可以关闭组件。\r\n            \r\n","\r\n            When the logging service has been instantiated but not yet initialized through a call\r\n            to initializecomponent\r\n            ":"\r\n            登录服务已实例化但尚未通过呼叫初始化\r\n            到Initializecomponent\r\n            \r\n","\r\n            Construct our dependency table for our source files\r\n            ":"\r\n            为源文件构建我们的依赖表\r\n            \r\n","Never null.":"永不零。\r\n","\r\n            If the property originated in an imported file, returns true.\r\n            If the property originates from the environment, a global property, or is a built-in property, returns false.\r\n            Otherwise returns false.\r\n            ":"\r\n            如果该属性起源于导入的文件，请返回true。\r\n            如果该属性起源于环境，则是全球属性，或者是内置属性，则返回false。\r\n            否则返回false。\r\n            \r\n","\r\n            default attribute on msbuildToolsets element, specifying the default ToolsVersion\r\n            ":"\r\n            msbuildtoolsets元素上的默认属性，指定默认工具verseversion\r\n            \r\n","\r\n            Items in this project, ordered within groups of item types.\r\n            Protected by an upcast to IEnumerable.\r\n            ":"\r\n            该项目中的项目，在项目类型组中排序。\r\n            受到iEnumerable的启动保护。\r\n            \r\n"," is thrown if the path does not exist.\r\n            \r\n            See ":" 如果路径不存在，则将抛弃。\r\n            \r\n            看\r\n","\r\n            Iterates through the set of available nodes and checks whether any of them is\r\n            capable of servicing this request or any of the requests that it is blocked\r\n            by (regardless of whether they are currently available to do so).\r\n            ":"\r\n            通过一组可用节点进行迭代，并检查它们是否是\r\n            能够维修此请求或任何被阻止的请求\r\n            通过（无论目前是否可以使用它们）。\r\n            \r\n","\r\n            Gets the list of names of public instance properties that have the output attribute applied.\r\n            Caches the result - since it can't change during the build.\r\n            ":"\r\n            获取具有应用输出属性的公共实例属性名称列表。\r\n            缓存结果 - 因为在构建过程中无法更改。\r\n            \r\n","\r\n            serializes IContentType.ItemType\r\n            ":"\r\n            序列化icontenttype.itemtype\r\n            \r\n","The lookup to use.":"使用的查找。\r\n"," should be really cheap (only return properties and items) and it's not worth\r\n            paying the IPC cost and re-evaluating them on out of proc nodes (they are guaranteed to be evaluated in the Scheduler process).\r\n            ":" 应该真的很便宜（仅返回属性和物品），这是不值得的\r\n            支付IPC成本并将其重新评估在ProC节点中（保证在调度程序过程中对其进行评估）。\r\n            \r\n","\r\n            Retrieves a request which is currently blocked.\r\n            ":"\r\n            检索当前被阻止的请求。\r\n            \r\n","\r\n            Raised for CustomBuildEventArgs instances\r\n            ":"为CustomBuildeventargs实例提出\r\n            \r\n","Location of the target platform SDK props file without .props filename":"目标平台SDK Props文件的位置没有.props fileName\r\n","\r\n            At the end of the build, repeats the errors and warnings that occurred \r\n            during the build, and displays the error count and warning count.\r\n            ":"\r\n            在构建结束时，重复发生的错误和警告\r\n            在构建过程中，并显示错误计数和警告计数。\r\n            \r\n","\r\n            A representation of a BuildRequest and associated data used by the Scheduler to track work being done by the build system.\r\n            SchedulableRequests implicitly form a directed acyclic graph showing the blocking/blocked relationship between the requests\r\n            known to the system at any given time.  These associations are updated by the BlockByRequest, UnblockWithResult and ResumeExecution\r\n            methods.  These methods, along with Complete, cause state changes which the SchedulingData object will record.  That data can be\r\n            queried to determine the state of any request or node in the system.\r\n            ":"\r\n            调度程序用来跟踪构建系统正在完成的工作的buildRequest和相关数据的表示。\r\n            Schedulablerequests隐式形成有向的无环图，显示了请求之间的阻塞/阻塞关系\r\n            在任何给定时间都知道该系统。这些关联由BlockbyRequest，UnblockWithResult和Resumeexecution更新\r\n            方法。这些方法以及完整的情况会导致状态更改，该方法将记录SchedulingData对象。该数据可以是\r\n            查询以确定系统中任何请求或节点的状态。\r\n            \r\n"," for the build request which this object is a result of,\r\n            and will be ":"对于构建请求，此对象是\r\n            并会\r\n","\r\n            Creates a new element of the collection\r\n            ":"\r\n            创建集合的新元素\r\n            \r\n","\r\n                Component responsible for resolving an SDK to a file path. Loads and coordinates\r\n                with ":"\r\n                负责将SDK解析到文件路径的组件。负载和坐标\r\n                和\r\n","\r\n            Storage for the left and right children of the operator\r\n            ":"\r\n            存放操作员的左右孩子\r\n            \r\n","\r\n            Gets the value of the Evaluate attribute.\r\n            Returns true if it is not present.\r\n            ":"\r\n            获取评估属性的值。\r\n            如果不存在，则返回true。\r\n            \r\n","GetItemProvenance(\"a.cs\")":"GetItemProvenance（“ A.CS”）\r\n","Build event that needs to be routed to the correct filter or sink.":"构建事件需要路由到正确的过滤器或下沉。\r\n","\r\n            Used to signal when a tool has been cancelled.\r\n            ":"\r\n            用于何时取消工具。\r\n            \r\n","The new value for the metadata.":"元数据的新价值。\r\n","foreground color for black":"黑色的前景颜色\r\n","\r\n            Formats the resource string with the given arguments.\r\n            Ignores error codes and keywords\r\n            ":"\r\n            用给定参数格式化资源字符串。\r\n            忽略错误代码和关键字\r\n            \r\n","\r\n            Retrieves the comparer used for determining equality between ProjectItemInstances.\r\n            ":"\r\n            检索用于确定投影仪之间平等的比较。\r\n            \r\n","\r\n            Remove a bunch of items from this scope\r\n            ":"\r\n            从此范围中删除一堆项目\r\n            \r\n","\r\n            The loaded type (type, assembly name / file) of the task wrapped by the factory\r\n            ":"\r\n            工厂包裹的任务的加载类型（类型，汇编名称 /文件）\r\n            \r\n","\r\n            Returns the items produced by the target.\r\n            These are ITaskItem's, so they have no item-type.\r\n            ":"\r\n            返回目标生产的项目。\r\n            这些是itaskItem的，因此它们没有项目类型。\r\n            \r\n","\r\n            A cache of the last instance which was created from this target.\r\n            ":"\r\n            从该目标创建的最后一个实例的缓存。\r\n            \r\n"," that combines all globs in the include element and ignores\r\n             all the fragments in the exclude attribute and all the fragments in all Remove elements that apply to the include element.\r\n            \r\n             Users can construct a composite glob that incorporates all the globs in the Project:\r\n             ":" 将所有地球结合在包含元素中，忽略\r\n             排除属性中的所有片段和所有删除适用于Incluber元素的元素中的所有片段。\r\n            \r\n             用户可以构建一个合并到项目中的全球的复合地球：\r\n             \r\n","\r\n            A wildcard (* and ?) matching algorithm that tests whether the input string matches against the pattern.\r\n            ":"\r\n            一个匹配算法的通配符（*和？）测试输入字符串是否匹配模式。\r\n            \r\n","\r\n            Get the cached propertyinfo of the given name\r\n            ":"\r\n            获取给定名称的缓存属性\r\n            \r\n","\r\n            Do the actual loading of the tasks or override tasks file and register the tasks in the task registry\r\n            ":"\r\n            实际加载任务或覆盖任务文件，然后在任务注册表中注册任务\r\n            \r\n","\r\n            Logs an error regarding an unexpected build failure\r\n            This will include a stack dump.\r\n            ":"\r\n            记录有关意外构建故障的错误\r\n            这将包括一个堆栈转储。\r\n            \r\n","\r\n            The immutable collection this builder is based on.\r\n            ":"\r\n            该建筑商的不变收藏基于。\r\n            \r\n","\r\n            This constructor creates a new TaskItem, using the given item spec and metadata.\r\n            ":"\r\n            该构造函数使用给定的项目规格和元数据创建一个新的TaskItem。\r\n            \r\n","True if the well known function call binding was successful.":"如果众所周知的函数呼叫绑定成功，则是真的。\r\n","The project root element to remove.":"项目根元素要删除。\r\n",", false otherwise.\r\n            ":"，否则为错误。\r\n            \r\n","\r\n            Discards strong references held by the cache.\r\n            ":"\r\n            丢弃缓存持有的强有力的参考。\r\n            \r\n","\r\n            Sets foreground color to color specified\r\n            ":"\r\n            将前景颜色设置为指定的颜色\r\n            \r\n"," to wrap for property tracking.":" 包装属性跟踪。\r\n","\r\n            Undefined is the bottom element and should not appear in actual results\r\n            ":"\r\n            未定义是底部元素，不应出现在实际结果中\r\n            \r\n","\r\n            Override GetHashCode\r\n            ":"\r\n            覆盖Gethashcode\r\n            \r\n","\r\n            Unevaluated executetargets value.\r\n            ":"\r\n            未评估的执行程序值。\r\n            \r\n","\r\n            Evaluated property escaped as necessary\r\n            ":"\r\n            必要的评估财产逃脱\r\n            \r\n","\r\n            Task classes and locations known to this project. \r\n            This is the project-specific task registry, which is consulted before\r\n            the toolset's task registry.\r\n            Only set during evaluation, so does not check for immutability.\r\n            ":"\r\n            该项目已知的任务类和位置。\r\n            这是特定于项目的任务注册表，以前进行咨询\r\n            工具集的任务注册表。\r\n            仅在评估期间设置，因此不检查不变性。\r\n            \r\n","\r\n            Waits for a result from a request which previously had an unresolved configuration.\r\n            ":"\r\n            等待先前具有未解决配置的请求的结果。\r\n            \r\n","\r\n            Raise the project finished event, if necessary.\r\n            ":"\r\n            如有必要，提出项目完成的活动。\r\n            \r\n","\r\n            This interface extends the ILogger interface to provide a property which can be used to forward events\r\n            to a logger running in a different process. It can also be used create filtering loggers.\r\n            ":"\r\n            该界面扩展了ilogger接口，以提供可用于转发事件的属性\r\n            到在不同过程中运行的记录器。它也可以使用创建过滤记录器。\r\n            \r\n","\r\n            Assign the importances that will be used for stdout/stderr logging of messages from this tool task.\r\n            This takes into account (1 is highest precedence):\r\n            1. the override value supplied as a task parameter.\r\n            2. those overridden by any derived class and\r\n            3. the defaults given by tooltask\r\n            ":"分配将用于从此工具任务的消息记录的stdout/stderr记录的重要性。\r\n            这考虑在内（1个最高优先级）：\r\n            1.作为任务参数提供的覆盖值。\r\n            2.那些被任何派生班级覆盖的人\r\n            3.工具任务给出的默认值\r\n            \r\n","The result to send.":"结果发送。\r\n","\r\n            If MSBUILDNODELIMITOFFSET is set, this will add an offset to the limit used in AtSchedulingLimit()\r\n            ":"\r\n            如果设置了msbuildnodelimitoffset，这将为Atschedulinglimit（）中使用的极限增加一个偏移\r\n            \r\n","name of the value":"值的名称\r\n","\r\n            Expands all embedded item metadata in the given string, using the bucketed items.\r\n            Metadata may be qualified, like %(Compile.WarningLevel), or unqualified, like %(Compile).\r\n            ":"\r\n            使用分压项展开给定字符串中的所有嵌入项元数据。\r\n            元数据可能是限定的，如%(Compile.WarningLevel），或不合格，如％（编译）。\r\n            \r\n","\r\n            Retrieves the number of requests which exist in the system that are attributed to the specified configuration.\r\n            ":"\r\n            检索系统中存在的请求数，这些请求归因于指定的配置。\r\n            \r\n","\r\n            Public constructor.\r\n            ":"\r\n            公共构造师。\r\n            \r\n","\r\n            This attribute is used to mark a task class as being required to run in a Single Threaded Apartment for COM.\r\n            ":"\r\n            此属性用于将任务类标记为在单个螺纹公寓中运行的com所需。\r\n            \r\n","\r\n            Use to optimize away status messages. When this is set to true, only \"critical\"\r\n            events like errors are logged. Default is false\r\n            ":"\r\n            用于优化离外状态消息。当将其设置为真时，只有“关键”\r\n            诸如错误之类的事件已记录。默认值为false\r\n            \r\n","true if execution succeeded":"如果执行成功，则为真实\r\n","\r\n            Creates an item using the specified evaluated include, include before wildcard expansion, \r\n            and defining project.\r\n            ":"\r\n            使用指定的评估包括，包括，包括在通配符扩展之前，包括\r\n            和定义项目。\r\n            \r\n","\r\n            An evaluated item definition for a particular item-type.\r\n            ":"\r\n            特定项目类型的评估项目定义。\r\n            \r\n","The entry whose state has changed.":"状态发生了变化的条目。\r\n","\r\n            Assumes we have a lock on _guard\r\n            ":"\r\n            假设我们在_guard上有一个锁\r\n            \r\n","\r\n            Need to store away the taskloggingcontext used by CreateTaskInstance so that \r\n            TaskLoader will be able to call back with errors.  \r\n            ":"\r\n            需要存储CreateTaskInstance使用的TaskLoggingContext，以便\r\n            TaskLoader将能够通过错误回电。\r\n            \r\n","Key object to open.":"打开的关键对象。\r\n","\r\n            Figures out what the ToolsVersion should be for child projects (used when scanning\r\n            for dependencies)\r\n            ":"\r\n            数字算出儿童项目应该是什么工具（扫描时使用）\r\n            依赖关系）\r\n            \r\n","\r\n            This reference type is used to block access to a single entry methods of the interface\r\n            ":"\r\n            此参考类型用于阻止访问接口的单个​​条目方法\r\n            \r\n","\r\n            Creates an unparented ProjectUsingTaskElement, wrapping an unparented XmlElement.\r\n            Validates the parameters.\r\n            Exactly one of assembly file and assembly name must have a value.\r\n            Caller should then ensure the element is added to a parent\r\n            ":"\r\n            创建一个无与伦比的ProjectingTaskelement，包装无与伦比的XMLELEMENT。\r\n            验证参数。\r\n            恰好的一个汇编文件和汇编名称必须具有值。\r\n            然后，呼叫者应确保将元素添加到父\r\n            \r\n","\r\n            Event contextual information for the build event argument\r\n            ":"\r\n            构建事件参数的事件上下文信息\r\n            \r\n","Intentionally not a property getter to avoid the debugger triggering the Assert dialog":"故意不是避免触发“断言”对话框的调试器的财产getter\r\n","\r\n            Initializes the component with the specified component host.\r\n            ":"\r\n            用指定的组件主机初始化组件。\r\n            \r\n","The metadata name.":"元数据名称。\r\n","\r\n            Removes all loggers from the collection of loggers used for builds of projects in this collection.\r\n            ":"\r\n            从该集合中用于构建项目的登录机中删除所有记录仪。\r\n            \r\n","The request if one exists, otherwise null.":"如果存在，则该请求为null。\r\n","\r\n            Unevaluated return values on the target element\r\n            May be empty string or null, if no return value is specified.\r\n            ":"\r\n            目标元素上未评估的返回值\r\n            如果未指定返回值，则可以是空字符串或空的。\r\n            \r\n","\r\n            Gets the task execution mode based\r\n            ":"\r\n            获取基于任务执行模式\r\n            \r\n","\r\n            Extract the function details from the given property function expression\r\n            ":"\r\n            从给定的属性函数表达式中提取功能详细信息\r\n            \r\n","\r\n            Whether to trace communications.\r\n            Stored here as a field to avoid a function call when writing packets\r\n            ":"\r\n            是否跟踪通信。\r\n            在这里存储在此处，以避免编写数据包时函数调用\r\n            \r\n",", called for each\r\n                project created during graph creation. This value can be null, which uses\r\n                a default implementation that calls the ProjectInstance constructor. See the remarks\r\n                on the ":"，每个人都要求\r\n                在图形创建期间创建的项目。该值可以为null，它使用\r\n                称为ProjectInstance构造函数的默认实现。看到言论\r\n                在\r\n","\r\n            Attempts to parse the input string as a Name without taking into account the XML Namespaces spec.\r\n            What it means is that the ':' character does not delimiter prefix and local name, but it is a regular\r\n            name character, which is allowed to appear at any position and any number of times in the name.\r\n            Quits parsing when an invalid Name char is reached or the end of string is reached.\r\n            Returns the number of valid Name chars that were parsed.\r\n            ":"\r\n            尝试将输入字符串作为名称解析而不考虑XML名称空间规格。\r\n            这意味着“：”字符不是定义者前缀和本地名称，但它是常规的\r\n            名称字符，允许在任何位置出现和名称中的任何次数。\r\n            当达到无效的名称char或达到字符串的末尾时，请退出。\r\n            返回解析的有效名称字符的数量。\r\n            \r\n","\r\n            Gets the type of task this factory creates.\r\n            ":"\r\n            获取该工厂创建的任务类型。\r\n            \r\n","\r\n                A class to help with printline debugging in difficult environments like CI, or when debugging msbuild through other\r\n                tools like VS or CLI.\r\n                See example usages in PrintLineDebugger_Tests\r\n            ":"\r\n                在CI等困难环境中或通过其他调试时，可以帮助打印线调试的班级\r\n                VS或CLI等工具。\r\n                请参阅printlinedebugger_tests中的示例用法\r\n            \r\n"," to use when sending packets to the main node.":" 将数据包发送到主节点时使用。\r\n","\r\n            Normally the active solution configuration/platform is determined when we build the solution\r\n            wrapper project, not when we create it. However, we need to know them to scan project references\r\n            for the right project configuration/platform. It's unlikely that references would be conditional,\r\n            but still possible and we want to get that case right.\r\n            ":"\r\n            通常，当我们构建解决方案时，确定活动解决方案配置/平台\r\n            包装器项目，而不是我们创建它。但是，我们需要知道他们以扫描项目参考\r\n            适用于正确的项目配置/平台。参考文献不太可能是有条件的，\r\n            但是仍然有可能，我们希望正确地解决这个案件。\r\n            \r\n","\r\n            Translates a collection of T into the specified type using an ":"\r\n            使用一个将T的集合转换为指定类型\r\n","\r\n            Used for signalling when the tool exits.\r\n            ":"\r\n            工具退出时用于信令。\r\n            \r\n","A list of item types referenced in both the inputs and the outputs":"输入和输出中引用的项目类型列表\r\n","\r\n            Represents an object which provides scheduling services for BuildRequests over Nodes.\r\n            ":"\r\n            表示一个对象，该对象为节点上的buildRequest提供了调度服务。\r\n            \r\n","\r\n            A class used for thread synchronization\r\n            ":"\r\n            用于线程同步的类\r\n            \r\n","\r\n            Gets or sets the metadata dictionary\r\n            The key is the possibly qualified metadata name, for example\r\n            \"EmbeddedResource.Culture\" or \"Culture\"\r\n            ":"\r\n            获取或设置元数据字典\r\n            关键是可能合格的元数据名称，例如\r\n            “嵌入式Resource.culture”或“文化”\r\n            \r\n","\r\n            Method to call into this state.\r\n            Must be gotten on the debugger thread, otherwise \r\n            \"NotSupportedException: The invoked member is not supported in a dynamic module.\"\r\n            ":"\r\n            致电该状态的方法。\r\n            必须在调试器线程上获得\r\n            “ NotsupportedException：在动态模块中不支持被调用的成员。”\r\n            \r\n","\r\n             Because there is no longer a strong 1:1 mapping between FX versions and SDK\r\n             versions, if we're unable to locate the desired SDK version, we will try to\r\n             use whichever SDK version is installed by looking at the key pointing to the\r\n             \"latest\" version.\r\n            \r\n             This isn't ideal, but it will allow our tasks to function on any of several\r\n             related SDKs even if they don't have exactly the same versions.\r\n            \r\n             NOTE:  This returns the path to the root of the fallback SDK\r\n             ":"\r\n             因为FX版本和SDK之间不再有强度的1：1映射\r\n             版本，如果我们无法找到所需的SDK版本，我们将尝试\r\n             通过查看指向的密钥来安装任何SDK版本\r\n             “最新版本。\r\n            \r\n             这不是理想的，但是它将允许我们的任务在几个\r\n             相关的SDK即使没有完全相同的版本。\r\n            \r\n             注意：这返回了后备SDK根的路径\r\n             \r\n","\r\n            The list of all full solution configurations (configuration + platform) in this solution\r\n            ":"\r\n            此解决方案中所有完整解决方案配置（配置 +平台）的列表\r\n            \r\n","\r\n            Arguments for build started events.\r\n            ":"\r\n            构建的论点开始事件。\r\n            \r\n","\r\n            Allows the logger to take action based on a parameter passed on when initializing the logger\r\n            ":"允许记录器根据初始化记录器时传递的参数采取操作\r\n            \r\n","The reference type for the values":"值的参考类型\r\n","\r\n            If the lexer errors, it has the best knowledge of the error message to show. For example,\r\n            'unexpected character' or 'illformed operator'. This method returns the name of the resource\r\n            string that the parser should display.\r\n            ":"\r\n            如果Lexer错误，它对显示错误消息的最佳知识。例如，\r\n            “意外角色”或“虚拟操作员”。此方法返回资源的名称\r\n            解析器应显示的字符串。\r\n            \r\n","\r\n            The target or request failed in some way.\r\n            ":"\r\n            目标或请求以某种方式失败。\r\n            \r\n"," \r\n            This constructor allows event data to be initialized.  \r\n            ":" \r\n            该构造函数允许初始化事件数据。\r\n            \r\n","client handshake key":"客户握手钥匙\r\n","\r\n            A logger that serializes all incoming BuildEventArgs in a compressed binary file (*.binlog). The file\r\n            can later be played back and piped into other loggers (file, console, etc) to reconstruct the log contents\r\n            as if a real build was happening. Additionally, this format can be read by tools for\r\n            analysis or visualization. Since the file format preserves structure, tools don't have to parse\r\n            text logs that erase a lot of useful information.\r\n            ":"\r\n            在压缩二进制文件（*.binlog）中序列化所有传入的buildEventargs的记录器。文件\r\n            稍后可以播放并用管道输送到其他记录仪（文件，控制台等）以重建日志内容\r\n            好像正在发生真正的建筑。此外，可以通过工具来阅读此格式\r\n            分析或可视化。由于文件格式保留结构，因此工具不必解析\r\n            文本日志消除了许多有用的信息。\r\n            \r\n","\r\n            Log property tracking information.\r\n            ":"\r\n            日志属性跟踪信息。\r\n            \r\n","\r\n            Returns the root directory for the project being built by this request.\r\n            ":"\r\n            返回该请求正在构建的项目的根目录。\r\n            \r\n",",\r\n            it is culture sensitive or not depends on the semantics of it.\r\n            ":"，，，，\r\n            它对文化敏感还是不取决于其语义。\r\n            \r\n","\r\n            Returns a list of the search paths for a given search path property collection\r\n            ":"\r\n            返回给定搜索路径属性集合的搜索路径列表\r\n            \r\n","\r\n            Decide on whether it is a framework extension sdk based on manifest's FrameworkIdentify and path\r\n            ":"\r\n            确定它是否是基于清单的框架识别和路径的框架扩展SDK\r\n            \r\n","\r\n            Gets a count of the requests we are blocking.\r\n            ":"\r\n            获取我们阻止的请求的计数。\r\n            \r\n",")\r\n                contain information about what ":"）\r\n                包含有关什么的信息\r\n","\r\n            The platform part of this configuration - e.g. \"Any CPU\", \"Win32\"\r\n            ":"\r\n            该配置的平台部分 - 例如“任何CPU”，“ Win32”\r\n            \r\n","The entry point to use in constructing the graph":"用于构建图的入口点\r\n","\r\n            Sets the build started event for this event source if it hasn't already been set.\r\n            ":"\r\n            如果尚未设置此事件源的设置构建启动事件，则设置该事件。\r\n            \r\n","\r\n            In the circumstance where we want to specify the scheduling algorithm via the secret environment variable\r\n            MSBUILDCUSTOMSCHEDULING, the scheduling algorithm used will be assigned to a delegate of this type.\r\n            ":"\r\n            在我们要通过秘密环境变量指定调度算法的情况下\r\n            MSBUILDCUSTOMSCHEDULING，使用的调度算法将分配给此类委托。\r\n            \r\n","\r\n            Returns the RegistryKeyWrapper around the sub key with name \"name\". If that does\r\n            not exist, returns a RegistryKeyWrapper around null.\r\n            ":"\r\n            返回带有名称“名称”的子键周围的registryKeywrapper。如果这样做\r\n            不存在，返回null周围的注册表wrapper。\r\n            \r\n","Xml.ToolsVersion":"xml.toolsversion\r\n","True to wait for the results ":"确实等待结果\r\n","\r\n            Apply a parameter parsed by the file logger.\r\n            ":"\r\n            应用文件记录器解析的参数。\r\n            \r\n","Whther to load the file in real only mode.":"在实际唯一模式下加载文件的时间。\r\n",".  This is currently hard-coded as ":"。目前是硬编码为\r\n","\r\n            The toolsversion we will use when we construct the solution wrapper metaprojects; this should be the most current toolsversion known\r\n            ":"\r\n            当我们构建解决方案包装器元标记时，我们将使用的工具库；这应该是已知的最新工具。\r\n            \r\n","\r\n            Location of the AfterTargets attribute ,if any\r\n            ":"\r\n            AfterTargets属性的位置，如果有的话\r\n            \r\n","\r\n            The properties defined by the toolset.\r\n            ":"\r\n            工具集定义的属性。\r\n            \r\n","\r\n            Ensure all slashes are the current platform's slash\r\n            ":"\r\n            确保所有斜线都是当前平台的斜线\r\n            \r\n","\r\n            Constructs the fully qualified method name and adds it to the cache\r\n            ":"\r\n            构建完全合格的方法名称并将其添加到缓存中\r\n            \r\n","\r\n            Valid attributes on on error element\r\n            ":"\r\n            在错误元素上有效属性\r\n            \r\n","The number of cores the task wants to return. This number must be between 0 and the number of cores\r\n            granted and not yet released.":"任务要返回的内核数。这个数字必须在0和内核数之间\r\n            理所当然，尚未发布。\r\n","\r\n             Maintains a cache of all loaded ProjectRootElement's for design time purposes.\r\n             Weak references are held to add added ProjectRootElement's.\r\n             Strong references are held to a limited number of added ProjectRootElement's.\r\n            \r\n             1. Loads of a ProjectRootElement will share any existing loaded ProjectRootElement, rather\r\n             than loading and parsing a new one. This is the case whether the ProjectRootElement\r\n             is loaded directly or imported.\r\n            \r\n             2. For design time, only a weak reference needs to be held, because all users have a strong reference.\r\n            \r\n             3. Because all loads of a ProjectRootElement consult this cache, they can be assured that any\r\n             entries in this cache are up to date. For example, if a ProjectRootElement is modified and saved,\r\n             the cached ProjectRootElement will be the loaded one that was saved, so it will be up to date.\r\n            \r\n             4. If, after a project has been loaded, an external app changes the project file content on disk, it is\r\n             important that a subsequent load of that project does not return stale ProjectRootElement. To avoid this, the\r\n             timestamp of the file on disk is compared to the timestamp of the file at the time that the ProjectRootElement loaded it.\r\n            \r\n             5. For build time, some strong references need to be held, as otherwise the ProjectRootElement's for reuseable\r\n             imports will be collected, and time will be wasted reparsing them. However we do not want to hold strong references\r\n             to all ProjectRootElement's, consuming memory without end. So a simple priority queue is used. All Adds and Gets boost their\r\n             entry to the top. As the queue gets too big, low priority entries are dropped.\r\n            \r\n             No guesses are made at which files are more interesting to cache, beyond the most-recently-used list. For example, \".targets\" files\r\n             or imported files are not treated specially, as this is a potentially unreliable heuristic. Besides, caching a project file itself could\r\n             be useful, if for example you want to build it twice with different sets of properties.\r\n            \r\n             Because of the strongly typed list, some ProjectRootElement's will be held onto indefinitely. This is an acceptable price to pay for\r\n             being able to provide a commonly used ProjectRootElement immediately it's needed. It is mitigated by the list being finite and small, and\r\n             because we allow ProjectCollection.UnloadAllProjects to hint to us to clear the list.\r\n            \r\n             Implicit references are those which were loaded as a result of a build, and not explicitly loaded through, for instance, the project\r\n             collection.\r\n            \r\n             ":"\r\n             为了设计时的目的，维护所有加载的ProjectRootElement的缓存。\r\n             弱引用被持有添加ProjectRootElement的。\r\n             强引用持有有限数量的添加ProjectRootElement的。\r\n            \r\n             1. ProjectRootElement的加载将共享任何现有加载的ProjectRootElement，而\r\n             而不是加载和解析一个新的。 ProjectRootElement是否是这种情况\r\n             直接加载或导入。\r\n            \r\n             2. 对于设计时，只需要持有弱引用，因为所有用户都有强引用。\r\n            \r\n             3. 因为一个ProjectRootElement的所有负载咨询此缓存，他们可以放心，任何\r\n             此缓存中的条目是最新的。 例如，如果修改并保存了ProjectRootElement,\r\n             缓存的ProjectRootElement将是保存的加载的，因此它将是最新的。\r\n            \r\n             4. 如果在加载项目后，外部应用程序更改了磁盘上的项目文件内容，则\r\n             重要的是，该项目的后续加载不会返回过时的ProjectRootElement。 为了避免这种情况，\r\n             磁盘上文件的时间戳与ProjectRootElement加载文件时文件的时间戳进行比较。\r\n            \r\n             5. 对于构建时间，需要保留一些强引用，否则ProjectRootElement用于可重用\r\n             进口将被收集，时间将被浪费在修复它们。 但是，我们不希望持有强引用\r\n             对于所有ProjectRootElement的，消耗内存没有结束。 所以使用简单的优先级队列。 所有的增加和得到提高他们的\r\n             进入顶部。 当队列变得太大时，低优先级条目被丢弃。\r\n            \r\n             除了最近使用的列表之外，不会猜测哪些文件更容易缓存。 例如，\"。目标\"文件\r\n             或者导入的文件不会被特殊处理，因为这是一个潜在的不可靠的启发式。 此外，缓存项目文件本身可以\r\n             是有用的，例如，如果你想用不同的属性集构建它两次。\r\n            \r\n             由于强类型列表，某些ProjectRootElement将无限期保留。 这是一个可以接受的价格\r\n             能够立即提供常用的ProjectRootElement是需要的。 列表是有限的和小的，并且\r\n             因为我们允许ProjectCollection。UnloadAllProjects提示我们清除列表。\r\n            \r\n             隐式引用是那些作为构建结果加载的引用，而不是通过（例如）项目显式加载的引用\r\n             收集。\r\n            \r\n             \r\n","\r\n            A dictionary that has copy-on-write semantics.\r\n            KEYS AND VALUES MUST BE IMMUTABLE OR COPY-ON-WRITE FOR THIS TO WORK.\r\n            ":"具有复制在写作语义的词典。\r\n            钥匙和值必须是不变的，或者必须在写作上才能正常工作。\r\n            \r\n","\r\n            This is the publicly exposed getter, that translates into a read-only dead IDictionary<string, string>.\r\n            \r\n            To be consistent with Project, setting and removing global properties is done with \r\n            ":"这是公开暴露的getter，转化为仅读取的死idictionary <string，string>。\r\n            \r\n            为了与项目一致，设置和删除全球属性是通过\r\n            \r\n","\r\n            Flag indicating whether out-of-proc nodes should remain after the build and wait for further builds.\r\n            ":"\r\n            标志指示在构建后是否应保留离子外的节点并等待进一步的构建。\r\n            \r\n","\r\n            When true, suppresses all messages except for warnings. (And possibly errors, if showOnlyErrors is true.)\r\n            ":"\r\n            如果是正确的话，请抑制除警告以外的所有消息。 （可能是错误的，如果Showonlyerrors为真。）\r\n            \r\n"," can match any version.\r\n            ":" 可以匹配任何版本。\r\n            \r\n","True if the parameter must be supplied to each invocation of the task.":"如果必须将参数提供给任务的每个调用，则为正确。\r\n","\r\n            Node event was in \r\n            ":"\r\n            节点事件在\r\n            \r\n","\r\n            A key for blocking requests combining the global request and node request ids.\r\n            ":"\r\n            阻止请求结合全局请求和节点请求ID的键。\r\n            \r\n","\r\n            Notifies the engine of a resource response granting the node resources.\r\n            ":"\r\n            通知引擎授予节点资源的资源响应。\r\n            \r\n","\r\n            Some platforms do not allow getting current background color. There\r\n            is not way to check, but not-supported exception is thrown. Assume\r\n            black, but don't crash.\r\n            ":"\r\n            有些平台不允许获得当前的背景颜色。那里\r\n            不是检查的方式，而是不支持的例外。认为\r\n            黑色，但不要崩溃。\r\n            \r\n","\r\n                An abstract interface class to indicate SDK resolver success or failure.\r\n                ":"\r\n                一个抽象接口类，以表示SDK解析器成功或故障。\r\n                \r\n","\r\n            Configurations for this project, keyed off the configuration's full name, e.g. \"Debug|x86\"\r\n            They contain only the project configurations from the solution file that fully matched (configuration and platform) against the solution configurations.\r\n            ":"\r\n            该项目的配置，关闭配置的全名，例如“调试| x86”\r\n            它们仅包含来自解决方案文件的项目配置，该项目配置完全匹配（配置和平台）与解决方案配置。\r\n            \r\n","\r\n            Help implement rename.\r\n            ":"\r\n            帮助实施重命名。\r\n            \r\n","\r\n            Tracks whether, in the UsingTask invocation, we were specifically asked to use \r\n            the task host.  If so, that overrides all other concerns, and we will launch \r\n            the task host even if the requested runtime / architecture match that of the \r\n            current MSBuild process. \r\n            ":"\r\n            跟踪是否在使用任务调用中，我们被专门要求使用\r\n            任务主机。如果是这样，那将覆盖所有其他问题，我们将启动\r\n            即使请求的运行时 /体系结构匹配任务主机\r\n            当前的MSBUILD过程。\r\n            \r\n","The right-hand argument":"右手论点\r\n","\r\n            Whether properties and items should be logged on ":"\r\n            是否应登录属性和项目\r\n","\r\n            Location of the executeTargets attribute\r\n            ":"\r\n            executetArgets属性的位置\r\n            \r\n","\r\n            ExpandReferenceAssemblies metadata name\r\n            ":"\r\n            ExpandReferenCeassemblies元数据名称\r\n            \r\n","\r\n            Does nothing, meets the ColorSetter delegate type\r\n            ":"\r\n            什么都不做，满足Colorsetter代表类型\r\n            \r\n","\r\n            Gets the definition's type.\r\n            ":"\r\n            获取定义类型。\r\n            \r\n"," from it. Any other operation is not guaranteed to be supported.\r\n            ":" 从中。不保证支持任何其他操作。\r\n            \r\n","The load settings for this project.":"该项目的负载设置。\r\n","\r\n            The target builder callback.\r\n            ":"\r\n            目标构建器回调。\r\n            \r\n","\r\n            Store the path for the 32-bit MSBuildTaskHost so that we don't have to keep re-calculating it. \r\n            ":"\r\n            存储32位MSBUILDTASKHOST的路径，以便我们不必继续重新计算它。\r\n            \r\n","The property name to look up":"要查找的属性名称\r\n","\r\n            Resets the color using ANSI escape codes\r\n            ":"\r\n            使用ANSI逃生代码重置颜色\r\n            \r\n","\r\n            The DataReceived event is raised on the same thread as that which called SendData.\r\n            ":"\r\n            DataReceived事件与称为SendData的线程相同的线程提出。\r\n            \r\n","\r\n            Constructor called by ProjectRootElement only.\r\n            XmlElement is set directly after construction.\r\n            ":"\r\n            仅通过ProjectRootlement调用构造函数。\r\n            Xmlelement是在施工后直接设置的。\r\n            \r\n","\r\n            Appends array of file name strings, quoting them if necessary, delimited by a delimiter.\r\n            This method appends a space to the command line (if it's not currently empty) before the file names.\r\n            ":"\r\n            附加文件名称字符串数组，如有必要，由定界符划定。\r\n            此方法在文件名之前将空间附加到命令行（如果当前不是空）。\r\n            \r\n","The configuration for which results should be returned.":"应返回结果的配置。\r\n","\r\n            This field is optional and its default value is \"false\".\r\n            ":"\r\n            该字段是可选的，其默认值为“ false”。\r\n            \r\n","\r\n            The number of inproc nodes that can be created without hitting the \r\n            node limit.\r\n            ":"\r\n            可以创建的INPROC节点的数量，而无需击中\r\n            节点限制。\r\n            \r\n","\r\n            Did the task succeed? \r\n            ":"\r\n            任务成功了吗？\r\n            \r\n","\r\n            Returns a whitespace-trimmed and possibly interned substring of the expression.\r\n            ":"\r\n            返回表达式的白色空间修剪和可能被实施的子字符串。\r\n            \r\n","\r\n            CopyRedistToSubDirectory specifies where the redist files should be copied to relative to the root of the package.\r\n            ":"\r\n            copyredistTosubDirectory指定应将重新文件复制到软件包的根。\r\n            \r\n","\r\n            The name of the target to run when a user specifies the /restore command-line argument.\r\n            ":"\r\n            当用户指定 /还原命令行参数时，要运行的目标名称。\r\n            \r\n","\r\n            Initialize a ProjectRootElement instance from a XmlReader.\r\n            May throw InvalidProjectFileException.\r\n            Leaves the project dirty, indicating there are unsaved changes.\r\n            Used to create a root element for solutions loaded by the 3.5 version of the solution wrapper.\r\n            ":"\r\n            从XMLReader初始化ProjectRootelement实例。\r\n            可能会抛出无效的fileException。\r\n            使项目肮脏，表明有未保存的变化。\r\n            用于为解决方案包装器的3.5版本加载的解决方案创建根元素。\r\n            \r\n","Input to check for drive pattern.":"输入以检查驱动器模式。\r\n","\r\n            Called by the build engine to allow loggers to release any resources they may have allocated at initialization time,\r\n            or during the build.\r\n            ":"\r\n            由构建引擎调用以允许登录器发布他们可能在初始化时分配的任何资源，\r\n            或在构建过程中。\r\n            \r\n","\r\n            A string associated with this frame -- should be a target name\r\n            or a project file.\r\n            ":"\r\n            与此帧关联的字符串 - 应该是目标名称\r\n            或项目文件。\r\n            \r\n","A string byte types formated as X2.":"形成为x2的字符串字节类型。\r\n","The description for the forwarding logger.":"转发记录器的描述。\r\n"," is applicable in scenarios most like\r\n             the scenarios where ":" 适用于最喜欢的情况\r\n             场景\r\n","\r\n            Condition for whether to trim duplicate outputs\r\n            ":"\r\n            是否修剪复制输出的条件\r\n            \r\n"," to allow tasks to get the current project's global properties.\r\n            ":" 允许任务获取当前项目的全局属性。\r\n            \r\n","\r\n            Wraps an unevaluated metadatum under an item in an itemgroup in a target\r\n            Immutable.\r\n            ":"\r\n            将未评估的元数据包裹在目标组中的项目组中\r\n            不变。\r\n            \r\n","\r\n            Arguments for the metaproject generated event.\r\n            ":"\r\n            Metaproject生成事件的论点。\r\n            \r\n","\r\n            End line number\r\n            ":"\r\n            端线号\r\n            \r\n","The working string":"工作字符串\r\n","\r\n            Location of the outputs attribute, if any\r\n            ":"\r\n            输出属性的位置，如果有\r\n            \r\n","\r\n            Names of all metadata on this item definition\r\n            ":"\r\n            此项目定义上所有元数据的名称\r\n            \r\n","\r\n            Returns the full name of the .NET Framework root registry key\r\n            ":"返回.NET Framework root Registry键的全名\r\n            \r\n","The targets to build.":"构建目标。\r\n","\r\n            Minimum Visual Studio version from SDKManifest.xml\r\n            ":"\r\n            最小视觉工作室版本来自SDKMANIFEST.xml\r\n            \r\n","\r\n            This interface represents an item without exposing its type.\r\n            ":"\r\n            此接口表示一个项目而不公开其类型。\r\n            \r\n","Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.":"更改非电流收藏的操作必须具有独家访问权限。对此集合进行了同时更新，并破坏了其状态。该系列的状态不再正确。\r\n","\r\n            The table for metadata which was generated for this batch bucket.\r\n            May be null.\r\n            ":"\r\n            该批量存储桶生成的元数据表。\r\n            可能是无效的。\r\n            \r\n","\r\n            Compresses the items, but only if we have reached the threshold where it makes sense to do so.\r\n            ":"\r\n            压缩物品，但前提是我们达到了有意义的阈值。\r\n            \r\n","The maximum number of nodes to use for building.":"用于建筑物的最大节点数量。\r\n","\r\n            Retrieves the task registration record for the specified task.\r\n            ":"\r\n            检索指定任务的任务注册记录。\r\n            \r\n","\r\n            Did the build pass or fail\r\n            ":"\r\n            构建是否通过或失败\r\n            \r\n","\r\n            serializes IContentType.DisplayName\r\n            ":"\r\n            序列化icontentType.displayname\r\n            \r\n","\r\n            Gets the type of the task this factory will instantiate.  Implementations must return a value for this property.\r\n            ":"\r\n            获取该工厂将实例化的任务类型。实施必须返回此属性的值。\r\n            \r\n","\r\n             The \"best\" encoding is the current OEM encoding, unless it's not capable of representing\r\n             the characters we plan to put in the file. If it isn't, we can fall back to UTF-8.\r\n            \r\n             Why not always UTF-8? Because tools don't always handle it well. See\r\n             https://github.com/Microsoft/msbuild/issues/397\r\n             ":"“最佳”编码是当前的OEM编码，除非它不能表示\r\n             我们计划将字符放入文件中。如果不是这样，我们可以回到UTF-8。\r\n            \r\n             为什么不总是UTF-8？因为工具并不总是很好地处理它。看\r\n             https://github.com/microsoft/msbuild/issues/397\r\n             \r\n","\r\n            Internal for unit testing only\r\n            ":"\r\n            仅用于单元测试的内部\r\n            \r\n","\r\n            If child \"element\" is actually represented as an attribute, update the value in the corresponding Xml attribute\r\n            ":"\r\n            如果儿童“元素”实际表示为属性，请在相应的XML属性中更新值\r\n            \r\n","List of items":"项目列表\r\n","BuildEventContext of the error":"错误的buildEventContext\r\n","\r\n            Checks whether a given project has a .etp extension.\r\n            ":"\r\n            检查给定项目是否具有.ETP扩展名。\r\n            \r\n","\r\n            If set, will be used as the ToolsVersion to build with (unless MSBUILDLEGACYDEFAULTTOOLSVERSION is set).\r\n            ":"\r\n            如果设置，将用作使用的工具交换（除非设置了MSBuildLegacyDefaultToolSversion）。\r\n            \r\n","\r\n            Whether evaluation should collect items ignoring condition,\r\n            as well as items respecting condition; and collect\r\n            conditioned properties, as well as regular properties.\r\n            ":"\r\n            评估是否应收集忽略条件的项目，\r\n            以及尊重条件的项目；并收集\r\n            条件性能以及常规特性。\r\n            \r\n","The communications mode for this endpoint.":"此端点的通信模式。\r\n","\r\n            A dictionary of named counters\r\n            ":"\r\n            命名计数器的词典\r\n            \r\n","\r\n            Returns a list of properties to transfer out of proc for the build.\r\n            ":"\r\n            返回属性列表以转移到构建中的PROC。\r\n            \r\n","\r\n            The task factory logging context\r\n            ":"\r\n            任务工厂记录上下文\r\n            \r\n","\r\n            When this flag is present, the ":"\r\n            当存在这个标志时\r\n","\r\n            Unevaluated inputs on the target element.\r\n            May be empty string.\r\n            ":"\r\n            目标元素上未评估的输入。\r\n            可以是空字符串。\r\n            \r\n","\r\n            Default task factory to use if one is not specified and runtime or architecture is specified\r\n            ":"\r\n            默认任务工厂如果未指定一个并指定运行时或体系结构\r\n            \r\n","The node to which the response should be sent.":"应向响应发送的节点。\r\n","\r\n            version 4.6.2\r\n            ":"\r\n            版本4.6.2\r\n            \r\n","\r\n                The behavior of this method matches the hardcoded behaviour of the msbuild task\r\n                and the ":"\r\n                该方法的行为与MSBUILD任务的硬编码行为匹配\r\n                和\r\n","\r\n            The starting unresolved configuration id assigned by the engine.\r\n            ":"\r\n            发动机分配的启动未解决配置ID。\r\n            \r\n","\r\n            Interface representing an object which can build tasks.\r\n            ":"\r\n            表示可以构建任务的对象的接口。\r\n            \r\n","\r\n            Indicates whether the specified string follows the pattern drive pattern (for example \"C:\", \"D:\").\r\n            ":"\r\n            指示指定的字符串是否遵循模式驱动模式（例如“ C：”，“ D：”）。\r\n            \r\n","\r\n            Creates an item definition group.\r\n            Caller must add it to the location of choice in the project.\r\n            ":"\r\n            创建一个项目定义组。\r\n            呼叫者必须将其添加到项目中选择的位置。\r\n            \r\n","\r\n            Gets or sets a flag indicating if this entry is the result of being listed as an error target in\r\n            an OnError clause.\r\n            ":"\r\n            获取或设置一个标志，指示此条目是否是被列为错误目标的结果\r\n            OnError子句。\r\n            \r\n","\r\n            Wait for the logging messages in the logging queue to be completly processed.\r\n            This is required because for Logging build finished or when the component is to shutdown\r\n            we need to make sure we process all of the events before the build finished event is raised\r\n            and we need to make sure we process all of the logging events before we shutdown the component.\r\n            ":"\r\n            等待日志记录队列中的记录消息被完整处理。\r\n            这是必需的，因为为了完成记录构建或组件关闭时\r\n            我们需要确保我们在构建完成事件之前处理所有事件\r\n            而且，我们需要确保在关闭组件之前处理所有记录事件。\r\n            \r\n","\r\n                Constructs a graph starting from the given graph entry point, evaluating with the global project collection.\r\n            ":"\r\n                从给定的图入口点开始构建图形，并通过全局项目集合进行评估。\r\n            \r\n","\r\n            Minimum version of the platform the SDK supports.\r\n            ":"\r\n            SDK支持该平台的最低版本。\r\n            \r\n","\r\n            Attempts to satisfy the request from the cache.  The request can be satisfied only if:\r\n            1. All specified targets in the request have successful results in the cache or if the sequence of target results\r\n               includes 0 or more successful targets followed by at least one failed target.\r\n            2. All initial targets in the configuration for the request have non-skipped results in the cache.\r\n            3. If there are no specified targets, then all default targets in the request must have non-skipped results\r\n               in the cache.\r\n            ":"\r\n            尝试满足缓存的请求。只有在以下方式时才能满足请求\r\n            1.请求中的所有指定目标都在缓存中取得成功的结果或目标结果序列\r\n               包括0个或更多成功的目标，然后至少有一个失败的目标。\r\n            2.该请求配置中的所有初始目标都在缓存中具有未击倒的结果。\r\n            3.如果没有指定的目标，则请求中的所有默认目标都必须具有未打击的结果\r\n               在缓存中。\r\n            \r\n","\r\n            The maximum number of nodes to report for evaluation.\r\n            ":"\r\n            进行评估的最大节点数量。\r\n            \r\n","\r\n            Returns a by-ref to type ":"\r\n            返回by-ref键入类型\r\n","\r\n            Enumeration describing the current state of the build manager.\r\n            ":"\r\n            描述构建管理器的当前状态的枚举。\r\n            \r\n","\r\n            High importance, appears in less verbose logs\r\n            ":"\r\n            非常重要的是，出现在较少的详细日志中\r\n            \r\n","\r\n            Local variables associated with this state, matching by index with the types\r\n            passed into DefineState. The debugger will show the names, types, and values.\r\n            ":"\r\n            与此状态关联的本地变量，通过索引与类型匹配\r\n            传递到定义。调试器将显示名称，类型和值。\r\n            \r\n","\r\n            Helper to convert into a read-only dictionary of string, string.\r\n            TODO: for performance, consider switching to returning IDictionary\r\n            and returning ArrayDictionary if lookup of results is not needed.\r\n            ":"\r\n            助手转换为字符串的仅读取字典。\r\n            托多：要进行性能，请考虑切换到返回的idictionary\r\n            如果不需要查找结果，则返回阵列。\r\n            \r\n","Minimum SDK version required by the project.":"项目要求的最低SDK版本。\r\n","The name of the SDK.":"SDK的名称。\r\n","\r\n            The lock taken when dealing with cancel-synchronized objects\r\n            ":"\r\n            处理取消同步对象时采用的锁\r\n            \r\n","\r\n            Asks the nodeManager to tell the currently connected nodes to shut down and sets a flag preventing all non-shutdown-related packets from\r\n            being processed.\r\n            ":"\r\n            要求NodeManager告诉当前连接的节点关闭并设置标志\r\n            正在处理。\r\n            \r\n","\r\n            Unevaluated condition value.\r\n            ":"\r\n            未评估的条件值。\r\n            \r\n","\r\n            Location of the ItemType attribute\r\n            ":"\r\n            项目类型属性的位置\r\n            \r\n","The unblocking information":"解密信息\r\n","\r\n            The thread that raised event.  \r\n            ":"\r\n            提出事件的线程。\r\n            \r\n","\r\n            Log the provided items\r\n            ":"\r\n            记录提供的项目\r\n            \r\n","\r\n            Name of the ":"\r\n            的名字\r\n","\r\n            Frees all CPU resources granted so far.\r\n            ":"\r\n            释放到目前为止授予的所有CPU资源。\r\n            \r\n","\r\n            Add items to the world. This is the in-target equivalent of an item include expression outside of a target.\r\n            ":"\r\n            将项目添加到世界上。这是一个物品的目标等效物，包括目标之外的表达式。\r\n            \r\n","\r\n                Errors / reasons the SDK could not be resolved. Will be logged as a\r\n                build error if no other SdkResolvers were able to indicate success.\r\n            ":"\r\n                错误 / SDK无法解决的原因。将记录为\r\n                如果没有其他SDKResolvers能够表明成功，则构建错误。\r\n            \r\n","\r\n            The list of metadata to remove.\r\n            ":"\r\n            要删除的元数据列表。\r\n            \r\n","\r\n            Gets the type of the task this factory will instantiate.\r\n            ":"\r\n            获取该工厂将实例化的任务类型。\r\n            \r\n","Target to build.":"构建目标。\r\n","\r\n            Use this for File.Exists(path) || Directory.Exists(path)\r\n            ":"\r\n            将其用于file.exists（path）|| Directory.exists（路径）\r\n            \r\n","\r\n            Location of the TrimDuplicateOutputs attribute\r\n            ":"\r\n            trimduplicateOutputs属性的位置\r\n            \r\n","Root folder for the SDK":"SDK的根文件夹\r\n","The array can be allocated in the small object heap.":"阵列可以分配在小物体堆中。\r\n","\r\n            Get a delegate to the given item transformation function by supplying the name and the\r\n            Item type that should be used\r\n            ":"通过提供名称和\r\n            应该使用的项目类型\r\n            \r\n","\r\n            Always use the accurate-but-slow CreateFile approach to timestamp extraction.\r\n            ":"\r\n            始终使用准确但慢的createFile方法进行时间戳提取。\r\n            \r\n","An object that will resume full tracking when disposed.":"处置时将恢复全面跟踪的对象。\r\n","Binary writer which is attached to the stream the event will be serialized into":"附加到流中的二进制作者将被序列化\r\n","\r\n            Removes any property with the specified name.\r\n            Returns true if the property had a value (possibly empty string), otherwise false.\r\n            ":"\r\n            删除带有指定名称的任何属性。\r\n            如果属性具有一个值（可能为空字符串），则返回true，否则为false。\r\n            \r\n","\r\n            Enumerator over item types of the items in this project\r\n            ":"\r\n            枚举该项目中项目的项目类型\r\n            \r\n","\r\n            Clears the results for the specified build.\r\n            ":"\r\n            清除指定构建的结果。\r\n            \r\n","\r\n            Tries to retrieve the type information for a type name / method name combination. \r\n            \r\n            It does 2 lookups:\r\n            1st try: 'typeFullName'\r\n            2nd try: 'typeFullName::simpleMethodName'\r\n            \r\n            ":"\r\n            试图检索类型名称 /方法名称组合的类型信息。\r\n            \r\n            它可以进行2个查找：\r\n            第一尝试：'typefullname'\r\n            第二次尝试：'typefullname :: simplemethodname'\r\n            \r\n            \r\n","\r\n            A mutable and enumerable version of ":"\r\n            可变且枚举的版本\r\n","targetNames":"目标名称\r\n"," is thrown when unsaved changes are present.\r\n            ":" 当存在未保存的更改时，被抛弃。\r\n            \r\n","\r\n             The target is ready to execute its tasks, batched as needed.\r\n            \r\n             Transitions:\r\n             ErrorExecution, Completed\r\n             ":"\r\n             目标准备执行其任务，并根据需要进行批处理。\r\n            \r\n             过渡：\r\n             errorexcution，完成\r\n             \r\n","\r\n            Creates an exception representing a native failure (with a corresponding Win32 error code).\r\n            The exception's ":"\r\n            创建代表本地故障的异常（具有相应的WIN32错误代码）。\r\n            例外\r\n","The name of the file being requested.":"请求的文件名。\r\n","\r\n            Pretty prints an evaluation location with its associated profiled location\r\n            ":"\r\n            漂亮打印一个评估位置，其相关位置\r\n            \r\n","\r\n            Allow the user to specify that two processes should not be communicating via an environment variable.\r\n            ":"\r\n            允许用户指定两个进程不应通过环境变量进行通信。\r\n            \r\n","\r\n            Total number of matches. Some fragments match more than once (item expression may contain multiple instances of ":"\r\n            比赛总数。一些片段不止一次匹配（项目表达可能包含多个实例\r\n","\r\n            If dwFlags specifies STARTF_USESTDHANDLES, this member is the standard output handle for the process. Otherwise, this member is ignored and the default for standard output is the console window's buffer.\r\n            ":"\r\n            如果DWFlags指定startf_usestdhandhandles，则该成员是该过程的标准输出句柄。否则，将忽略此成员，并且标准输出的默认值为控制台窗口的缓冲区。\r\n            \r\n","\r\n            Child items.\r\n            Not ProjectItemInstances, as these are evaluated during the build.\r\n            ":"\r\n            子项目。\r\n            不是投影仪，因为它们在构建过程中进行了评估。\r\n            \r\n","\r\n            Backing data; stored in a nested class so it can be passed to the Evaluator to fill\r\n            in on re-evaluation, without having to expose property setters for that purpose.\r\n            Also it makes it easy to re-evaluate this project without creating a new project object.\r\n            ":"\r\n            支持数据；存储在嵌套类中，以便将其传递给评估者以填充\r\n            在重新评估中，无需为此目的暴露房地产设置器。\r\n            此外，它也可以轻松地重新评估该项目而不创建新的项目对象。\r\n            \r\n","\r\n            Attempts to parse the input string as an Nmtoken (see the XML spec production [7]) without taking \r\n            into account the XML Namespaces spec. What it means is that the ':' character is allowed at any \r\n            position and any number of times in the token.\r\n            Quits parsing when an invalid Nmtoken char is reached or the end of string is reached.\r\n            Returns the number of valid Nmtoken chars that were parsed.\r\n            ":"\r\n            尝试将输入字符串作为NMToken解析（请参阅XML规格生产[7]）\r\n            考虑到XML名称空间规格。意味着“：”字符在任何\r\n            位置和令牌中的任何次数。\r\n            当达到无效的nmtoken char或达到字符串的末端时，请退出。\r\n            返回解析的有效NMToken字符数量。\r\n            \r\n","\r\n            property (assuming that the latter is defined).\r\n            ":"\r\n            属性（假设定义了后者）。\r\n            \r\n","\r\n            The amount of time to wait for an out-of-proc node to exit.\r\n            ":"\r\n            等待出口外节点退出的时间。\r\n            \r\n","\r\n            This class is used to contain information about a logger as a collection of values that\r\n            can be used to instantiate the logger and can be serialized to be passed between different\r\n            processes.\r\n            ":"\r\n            此类用于包含有关记录器的信息，作为一个值的集合\r\n            可用于实例化记录器，可以序列化以在不同的之间传递\r\n            过程。\r\n            \r\n","\r\n            Assigns a field or variable containing an immutable list to the specified value if it is currently equal to\r\n            another specified value. Returns the previous value.\r\n            ":"\r\n            如果当前等于\r\n            另一个指定值。返回上一个值。\r\n            \r\n","\r\n            Cache wildcard expansions for the entire process\r\n            ":"\r\n            整个过程的缓存通配符扩展\r\n            \r\n","\r\n            Part of the extraction may result in the name of the property\r\n            This accessor is used by the Expander\r\n            Examples of expression root:\r\n                [System.Diagnostics.Process]::Start\r\n                SomeMSBuildProperty\r\n            ":"\r\n            提取的一部分可能会导致属性的名称\r\n            该登录器由扩展器使用\r\n            表达根的示例：\r\n                [system.diagnostics.process] ::开始\r\n                SomemsbuildProperty\r\n            \r\n","\r\n            Creates a ProjectTargetElement representing this instance.  Attaches it to the specified root element.\r\n            ":"\r\n            创建代表此实例的ProjectTargetElement。将其连接到指定的根元素。\r\n            \r\n","\r\n            MSBuildExtensionsPathReferenceKind instance representing no MSBuildExtensionsPath* property reference\r\n            ":"\r\n            msbuildextensionspathReferenceKind实例表示没有msbuildextensionspath*属性参考\r\n            \r\n","\r\n            This class represents a collection of items that are homogeneous w.r.t.\r\n            a certain set of metadata.\r\n            ":"\r\n            此类表示齐次w.r.t的项的集合。\r\n            定的一组元数据。\r\n            \r\n","\r\n            Valid attributes on UsingTaskParameter element\r\n            ":"\r\n            使用TaskParameter元素上的有效属性\r\n            \r\n","\r\n            64-bit Intel process, using the 2.0 CLR.\r\n            ":"\r\n            使用2.0 CLR，64位Intel工艺。\r\n            \r\n","\r\n            Detects a circular dependency where the request which is about to block us is already blocked by us, usually as a result\r\n            of it having been previously scheduled in a multiproc scenario, but before this request was able to execute.\r\n            ":"\r\n            检测到即将阻止我们的请求已经被我们阻止的循环依赖性，通常是结果\r\n            它以前是在多个方案中安排的，但是在此请求能够执行之前。\r\n            \r\n","The configuration to use to create the node.":"用于创建节点的配置。\r\n","> mehtod which needs to check if the document parses\r\n            ":">需要检查文档是否解析的mehtod\r\n            \r\n","\r\n            Do not include any options.\r\n            ":"\r\n            不要包括任何选项。\r\n            \r\n","\r\n                The behavior of this method should match the logic in the SDK\r\n            ":"\r\n                该方法的行为应与SDK中的逻辑匹配\r\n            \r\n","\r\n            Gets an element based at the specified position\r\n            ":"\r\n            在指定位置获得基于元素\r\n            \r\n","\r\n            Name of the object sending this event.\r\n            ":"\r\n            对象发送此事件的名称。\r\n            \r\n","\r\n            This is the state the BuildManager is in after ":"\r\n            这是Buildmanager所在的状态\r\n","\r\n            Merges the specified results with the results contained herein.\r\n            ":"\r\n            将指定的结果与本文包含的结果合并。\r\n            \r\n","\r\n            Retrieves a built-in metadata value and caches it.\r\n            If value is not available, returns empty string.\r\n            ":"\r\n            检索内置的元数据值并缓存。\r\n            如果值不可用，请返回空字符串。\r\n            \r\n","True when the namespace is in the MSBuild namespace or no namespace.":"当名称空间位于MSBUILD名称空间或没有名称空间时，则是正确的。\r\n","\r\n            Shuts down all of the connected managed nodes.\r\n            ":"\r\n            关闭所有连接的托管节点。\r\n            \r\n","\r\n            Given a path, de-relativizes it using the location of the currently\r\n            executing .exe as the base directory. For example, the path \"..\\foo\"\r\n            becomes \"c:\\windows\\microsoft.net\\framework\\foo\" if the current exe is\r\n            \"c:\\windows\\microsoft.net\\framework\\v3.5.1234\\msbuild.exe\".\r\n            If the path is not relative, it is returned without modification.\r\n            If the path is invalid, it is returned without modification.\r\n            ":"\r\n            给定路径，使用当前的位置将其重新释放\r\n            执行.EXE作为基本目录。例如，路径“ .. \\ foo”\r\n            如果当前EXE为\r\n            “ C：\\ Windows \\ Microsoft.net \\ Framework \\ v3.5.1234 \\ msbuild.exe”。\r\n            如果路径不是相对的，则在没有修改的情况下将其返回。\r\n            如果路径无效，则不会修改而返回。\r\n            \r\n","\r\n            Gets the current state of the target\r\n            ":"\r\n            获取目标的当前状态\r\n            \r\n","\r\n            File logger parameter value split character.\r\n            ":"\r\n            文件记录器参数值拆分字符。\r\n            \r\n","\r\n            An interface representing results for a build request\r\n            ":"\r\n            代表构建请求结果的接口\r\n            \r\n","\r\n            Retrieves the IBuildEngine5 version of the build engine interface provided by the host.\r\n            ":"检索主机提供的构建引擎界面的IbuildEngine5版本。\r\n            \r\n","\r\n            Expander for evaluating conditions\r\n            ":"\r\n            评估条件的扩张器\r\n            \r\n","Defaults to UTF8 for new projects.":"默认为新项目的UTF8。\r\n","\r\n            Initialize an unparented ProjectPropertyGroupElement\r\n            ":"\r\n            初始化无与伦比的ProjectPropertyGroupelement\r\n            \r\n","Is reuse of build nodes allowed?":"重复使用构建节点吗？\r\n","\r\n            The value is assumed to be escaped. \r\n            ":"\r\n            假定该值被逃脱了。\r\n            \r\n","\r\n            Helper class with ApiContract element names\r\n            ":"\r\n            带有apicantract元素名称的助手类\r\n            \r\n","\r\n            Constructor for the unblocker for circular dependencies\r\n            ":"\r\n            循环依赖的构造函数\r\n            \r\n","\r\n            Creates the traversal project instance.  This has all of the properties against which we can perform evaluations for the remainder of the process.\r\n            ":"\r\n            创建遍历项目实例。这具有所有属性，我们可以在该过程的其余部分进行评估。\r\n            \r\n","\r\n            Returns true if \"prefix\" starts with the characters 'x', 'm', 'l' (case-insensitive).\r\n            ":"\r\n            如果“前缀”从字符'x'，'m'，'l'（对案例不敏感）开始，则返回true。\r\n            \r\n","\r\n            Initialize a ProjectRootElement instance from an XmlReader.\r\n            Uses the specified project collection.\r\n            May throw InvalidProjectFileException.\r\n            ":"\r\n            从XMLReader初始化ProjectRootelement实例。\r\n            使用指定的项目集合。\r\n            可能会抛出无效的fileException。\r\n            \r\n","\r\n            Logs an error\r\n            ":"\r\n            记录错误\r\n            \r\n","\r\n            The request is ready to reacquire control of the node.\r\n            ":"\r\n            该请求已准备好重新控制节点。\r\n            \r\n","\r\n            Receives the project finished event.\r\n            ":"\r\n            接收项目完成的事件。\r\n            \r\n","\r\n            Throws an ArgumentException if the given collection is not null but of zero length.\r\n            ":"\r\n            如果给定的集合不是零，则引发一个参数检查。\r\n            \r\n","\r\n            Scan for the closing bracket that matches the one we've already skipped;\r\n            essentially, pushes and pops on a stack of parentheses to do this.\r\n            Takes the expression and the index to start at.\r\n            Returns the index of the matching parenthesis, or -1 if it was not found.\r\n            Also returns flags to indicate if a propertyfunction or registry property is likely\r\n            to be found in the expression.\r\n            ":"\r\n            扫描与我们已经跳过的括号匹配的右括号;\r\n            从本质上讲，推送和弹出一叠括号来做到这一点。\r\n            取表达式和索引开始。\r\n            返回匹配括号的索引，如果未找到则返回-1。\r\n            还返回标志以指示是否可能存在propertyfunction或注册表属性\r\n            在表达式中找到。\r\n            \r\n","\r\n            Reserved for future use.\r\n            ":"\r\n            保留供将来使用。\r\n            \r\n","\r\n            ProjectImportPathMatch instance representing no fall-back\r\n            ":"\r\n            ProjectImpathMatch实例表示没有秋季\r\n            \r\n","\r\n            The registration which handles the callback when task cancellation is invoked.\r\n            ":"\r\n            调用任务取消时处理回调的注册。\r\n            \r\n","\r\n            Perform a bitwise XOR on the first and second (first ^ second)\r\n            ":"\r\n            对第一和第二（第一^秒）执行按位异或\r\n            \r\n","This class is public because BinaryLogReplayEventSource is a derived class.\r\n            This is abstracted into its own class because it's a useful single-purpose helper that\r\n            can be used independently as a generic implementation of IEventSource.":"该课程是公开的，因为binarylogreplayeventsource是派生的类。\r\n            这是自己的班级抽象的，因为它是一个有用的单用助手\r\n            可以独立用作IEVENTSOURCE的通用实现。\r\n","\r\n            The results cache.\r\n            ":"\r\n            结果缓存。\r\n            \r\n","\r\n            Interface allowing the host to provide additional control over the build process.\r\n            ":"\r\n            接口允许主机对构建过程提供额外的控制。\r\n            \r\n","\r\n            The initial targets for the project\r\n            ":"\r\n            项目的初始目标\r\n            \r\n","\r\n            Constructor for metadata.\r\n            Called when a ProjectInstance is created, before the build\r\n            when virtual items are added, and during the build when tasks\r\n            emit items.\r\n            Discards the location of the original element. This is not interesting in the Execution world\r\n            as it should never be needed for any subsequent messages, and is just extra bulk.\r\n            IMMUTABLE OBJECT.\r\n            If the value passed in is null, will be changed to String.Empty.\r\n            ":"\r\n            元数据的构造函数。\r\n            在创建ProjectInstance时调用，在构建之前\r\n            当添加虚拟项目以及在构建期间任务时\r\n            发射物品。\r\n            丢弃原始元素的位置。这在执行世界中并不有趣\r\n            由于任何后续消息都不需要它，而且只是额外的批量。\r\n            不变的物体。\r\n            如果传递的值为null，则将更改为string.empty。\r\n            \r\n","\r\n            Returns the set of parameters that can contribute to a task's identity, and their values for this particular task.\r\n            ":"\r\n            返回可以为任务的身份做出贡献的一组参数及其对该特定任务的值。\r\n            \r\n","\r\n            Compare Versions. This is only intended to compare version formats like \"A.B.C.D\" which can otherwise not be compared numerically\r\n            ":"\r\n            比较版本。这仅是为了比较诸如“ a.b.c.d”之类的版本格式，否则无法进行数值比较\r\n            \r\n","\r\n            Undefined is the bottom element and should not appear in actual results \r\n            ":"\r\n            未定义是底部元素，不应出现在实际结果中\r\n            \r\n","\r\n            Gets the value of a given property on the given task.\r\n            ":"\r\n            在给定任务上获取给定属性的值。\r\n            \r\n","The task body.":"任务主体。\r\n","\r\n            Type of handler for TargetFinished events\r\n            ":"\r\n            针对目标事件的处理程序类型\r\n            \r\n","\r\n            Global,\r\n            ":"\r\n            全球的，\r\n            \r\n","\r\n            DependsOnSDK is a semicolon delimited list of SDK identities that the SDK requires be resolved in order to function.\r\n            ":"\r\n            ReTiveSonsDK是SDK身份的半分离界定列表，该列表为了解决SDK需要解决的SDK身份。\r\n            \r\n","The help keyword prefix string (can be null).":"Help关键字前缀字符串（可以为null）。\r\n","Array of non-empty strings from split list.":"从拆分列表中的非空字符串数组。\r\n",",\r\n            the command line looks like this: ":"，，，，\r\n            命令行看起来像这样：\r\n","\r\n             Register an logger which expects all logging events from the system\r\n             ":"\r\n             注册一个希望从系统中的所有记录事件的记录仪\r\n             \r\n","\r\n            Returns the collection associated with a particular lifetime.\r\n            ":"\r\n            返回与特定生命周期相关的集合。\r\n            \r\n","\r\n            Dispose implementation.\r\n            ":"\r\n            处置实施。\r\n            \r\n","\r\n            Once we have entered this method, no more methods will be invoked on this class (save ShutdownComponent)\r\n            as we should no longer be receiving any messages from the BuildManager.\r\n            ":"\r\n            一旦我们输入此方法，此类就不会再调用更多方法（保存shutdowncomponent）\r\n            因为我们不应该再收到BuildManager的任何消息。\r\n            \r\n","The id of the project instance which is about to start":"即将启动的项目实例的ID\r\n","\r\n            Delete temporary file. If the delete fails for some reason (e.g. file locked by anti-virus) then\r\n            the call will not throw an exception. Instead a warning will be logged, but the build will not fail.\r\n            ":"\r\n            删除临时文件。如果由于某种原因删除失败（例如，抗病毒锁定的文件），则\r\n            呼叫不会引发例外。相反，警告将被记录，但构建不会失败。\r\n            \r\n","Array of files that need to be compiled":"需要编译的一系列文件\r\n",". May be null or empty, in which case the entry projects' default\r\n                targets will be used.\r\n            ":"。可能为空或空，在这种情况下，条目项目的默认值\r\n                目标将使用。\r\n            \r\n","\r\n            Sets the build component host.\r\n            ":"\r\n            设置构建组件主机。\r\n            \r\n","\r\n            Location of the task name attribute\r\n            ":"\r\n            任务名称属性的位置\r\n            \r\n","The identifier of the node.":"节点的标识符。\r\n","The tools version to use for each project.  Must be the same number as there are project files.":"每个项目都使用的工具版本。必须与项目文件相同。\r\n","\r\n            The Status event handler\r\n            ":"\r\n            状态事件处理程序\r\n            \r\n","\r\n            This class descibes a central/forwarding logger pair used in multiproc logging.\r\n            ":"\r\n            该类是多条目记录中使用的中央/转发记录器对。\r\n            \r\n","\r\n            The ProjectStarted logging event\r\n            ":"\r\n            项目开始的伐木活动\r\n            \r\n","\r\n            Actual collection of items in this project,\r\n            for the build to start with.\r\n            ":"\r\n            该项目中项目的实际收集，\r\n            为了构建。\r\n            \r\n","The mode to be used to execute tasks.":"用于执行任务的模式。\r\n","\r\n                See ":"\r\n                看\r\n","\r\n            Re-evaluates the project using the specified logging service and load settings.\r\n            ":"\r\n            使用指定的记录服务和加载设置重新评估项目。\r\n            \r\n",".\r\n            Properties and items are cloned immediately and only the instance data is stored.\r\n            ":"。\r\n            属性和项目立即克隆，仅存储实例数据。\r\n            \r\n","\r\n            The full path to the project.\r\n            ":"\r\n            该项目的完整道路。\r\n            \r\n","\r\n            Determines if the target needs to be built/rebuilt/skipped if it has discrete inputs.\r\n            ":"\r\n            确定目标是否有离散输入，是否需要构建/重建/跳过。\r\n            \r\n"," contains invalid path or file characters>\r\n            ":" 包含无效的路径或文件字符>\r\n            \r\n","The object to compare with":"比较的对象\r\n","This method is used as a System.EventHandler delegate.":"此方法用作系统。\r\n","\r\n            Adds the targets which build the dependencies and actual project for a metaproject.\r\n            ":"\r\n            添加构建依赖项和元标记的实际项目的目标。\r\n            \r\n","Undefined if enumerator is before or after collection: we return null.":"未定义如果枚举在收集之前或之后：我们返回null。\r\n","\r\n            Determine whether we should load this file read only.\r\n            We decide yes if it is in program files or the OS directory, and the file name starts with \"microsoft\", else no.\r\n            We are very selective because we don't want to load files read only that the host might want to save, nor\r\n            any files in which comments within property/metadata values might be significant - MSBuild does not discard those, normally.\r\n            ":"\r\n            确定我们是否应该加载此文件仅读取。\r\n            我们决定是在程序文件或OS目录中，并且文件名以“ Microsoft”开头，否则。\r\n            我们非常有选择性，因为我们不想加载文件仅读取主机可能要保存的文件，也不是\r\n            属性/元数据值中注释的任何文件可能都很重要 -  MSBuild通常不会丢弃这些文件。\r\n            \r\n","\r\n                Represents a software development kit (SDK) that is referenced in a <Project /> or <Import /> element.\r\n            ":"\r\n                代表软件开发套件（SDK），该套件（SDK）在<project />或<import />元素中引用。\r\n            \r\n","\r\n            See https://docs.microsoft.com/en-us/windows/desktop/api/objidl/nn-objidl-irunningobjecttable.\r\n            ":"\r\n            请参阅https://docs.microsoft.com/en-us/windows/desktop/api/objidl/nn-objidl-irunningobjecttable。\r\n            \r\n","\r\n            To avoid deadlock possibility, this method MUST NOT be called inside of 'lock (_syncLock)'\r\n            ":"\r\n            为了避免僵局的可能性，不得在“锁（_synclock）”内部调用此方法\r\n            \r\n","The reason the endpoint is shutting down.":"终点关闭的原因。\r\n","\r\n            Returns true if a collection is not yet created or if it has no content.\r\n            ":"\r\n            如果尚未创建集合或没有内容，则返回true。\r\n            \r\n","\r\n             Update our table which keeps track of all the properties that are referenced\r\n             inside of a condition and the string values that they are being tested against.\r\n             So, for example, if the condition was \" '$(Configuration)' == 'Debug' \", we\r\n             would get passed in leftValue=\"$(Configuration)\" and rightValueExpanded=\"Debug\".\r\n             This call would add the string \"Debug\" to the list of possible values for the \r\n             \"Configuration\" property.\r\n            \r\n             This method also handles the case when two or more properties are being\r\n             concatenated together with a vertical bar, as in '\r\n                 $(Configuration)|$(Platform)' == 'Debug|x86'\r\n             ":"\r\n             更新我们的表格，以跟踪所有引用的属性\r\n             在条件和正在测试的字符串值的内部。\r\n             因此，例如，如果条件为“'$（配置）'=='debug'”，我们\r\n             将通过leftValue =“ $（配置）”和rightValueExpanded =“ debug”传递。\r\n             此调用将将字符串“调试”添加到可能的值列表中\r\n             “配置”属性。\r\n            \r\n             此方法还处理两个或多个属性时的情况\r\n             与垂直杆连接在一起，如'\r\n                 $（配置）| $（平台）'=='调试| x86'\r\n             \r\n","\r\n            An enumeration defining the different types of projects we might find in an SLN.\r\n            ":"\r\n            定义我们在SLN中可能找到的不同类型项目的枚举。\r\n            \r\n","\r\n            Adds an item with no metadata to the project\r\n            ":"在项目中添加一个没有元数据的项目\r\n            \r\n","\r\n            MoreInfoAttribute metadata name\r\n            ":"\r\n            MoreInfoattribute元数据名称\r\n            \r\n","\r\n            Sets the build component host for this object.\r\n            ":"\r\n            为此对象设置构建组件主机。\r\n            \r\n","\r\n            Islands are executed on an auxiliary thread instead of the main thread.\r\n            This gives a better default stepping experience (allows Step-in, step-over, step-out),\r\n            and also allows unloading the islands (since the thread can be in a separate appdomain).\r\n            ":"\r\n            岛屿是在辅助线程而不是主线程上执行的。\r\n            这提供了更好的默认步进体验（允许逐步，逐步，逐步），\r\n            并且还允许卸载岛屿（因为该线程可以在单独的AppDomain中）。\r\n            \r\n","\r\n            Gets the number of custom metadata set on the item.\r\n            Does not include built-in metadata.\r\n            Computed, not necessarily fast.\r\n            ":"\r\n            获取项目上设置的自定义元数据的数量。\r\n            不包括内置元数据。\r\n            计算，不一定快。\r\n            \r\n","\r\n            Creates BuildParameters from a ProjectCollection.\r\n            ":"\r\n            通过项目计算创建BuildParameters。\r\n            \r\n","\r\n            Retrieves the node affinity for a particular project file.\r\n            ":"\r\n            检索特定项目文件的节点亲和力。\r\n            \r\n","The pattern to test against.":"要测试的模式。\r\n","\r\n            ProjectOutputElement represents the Output element in the MSBuild project.\r\n            ":"\r\n            ProjectOutuputelement代表MSBUILD项目中的输出元素。\r\n            \r\n","\r\n            Whether it can be evaluated as a Version\r\n            ":"\r\n            是否可以评估为版本\r\n            \r\n","\r\n            The global config cache.\r\n            ":"\r\n            全局配置缓存。\r\n            \r\n","\r\n            Removes a global property from the collection-level set of global properties,\r\n            and all projects in the project collection.\r\n            If it was on this project collection, returns true.\r\n            ":"\r\n            从全球属性集合集中删除全球属性，\r\n            以及项目集合中的所有项目。\r\n            如果是在此项目集合中，则返回真实。\r\n            \r\n","\r\n            Clones this BuildRequestConfiguration but sets a new configuration id.\r\n            ":"\r\n            克隆此BuildRequestConfiguration，但设置了一个新的配置ID。\r\n            \r\n","\r\n            Creates a new work result ready for aggregation during batches.\r\n            ":"\r\n            创建一个新的作品结果，准备在批处理期间进行聚合。\r\n            \r\n",".\r\n            This field is optional and is culture insensitive.\r\n            ":"。\r\n            该领域是可选的，是文化不敏感的。\r\n            \r\n","\r\n            Returns true if task execution is not necessary. Executed after ValidateParameters\r\n            ":"\r\n            如果不需要任务执行，则返回true。在ValidateParameters之后执行\r\n            \r\n","\r\n            Following function will parse a keyName and returns the basekey for it.\r\n            It will also store the subkey name in the out parameter.\r\n            If the keyName is not valid, we will throw ArgumentException.\r\n            The return value shouldn't be null.\r\n            Taken from: \\ndp\\clr\\src\\BCL\\Microsoft\\Win32\\Registry.cs\r\n            ":"\r\n            以下函数将解析keyname并返回基本键。\r\n            它还将将子钥匙名存储在OUT参数中。\r\n            如果Keyname无效，我们将抛出参数exception。\r\n            返回值不应为null。\r\n            从：\\ ndp \\ clr \\ src \\ bcl \\ microsoft \\ win32 \\ registry.cs取。\r\n            \r\n","The type of items provided by the implementation.":"实施提供的项目类型。\r\n","Binary writer which is attached to the stream the event will be serialized into.":"附加到流中的二进制作者将被序列化。\r\n","\r\n            Number of documents using this string\r\n            ":"\r\n            使用此字符串的文档数量\r\n            \r\n","\r\n            Call this method to notify listeners of information relevant to identifying a list of files that correspond to an item with a wildcard.\r\n            ":"\r\n            调用此方法，将与识别与通配符相对应的文件列表相关的信息通知听众。\r\n            \r\n","\r\n            Regkey that we check to see whether C# Express 2010 is installed.  This will exist if it is installed, and be \r\n            properly removed after it has been uninstalled.  \r\n            ":"\r\n            我们检查是否安装了C＃Express 2010。如果安装它，则将存在，并且\r\n            卸载后正确删除。\r\n            \r\n","\r\n            The map of weakly-held ProjectRootElement's\r\n            ":"\r\n            虚弱的ProjectRootlement的地图\r\n            \r\n","\r\n            Convenience method to add a conditioned Output Item to this task.\r\n            Adds after the last child.\r\n            ":"\r\n            便利方法将条件输出项目添加到此任务中。\r\n            在最后一个孩子之后添加。\r\n            \r\n","\r\n            Unevaluated semicolon separated list of targets it depends on.\r\n            May be empty string.\r\n            ":"未评估的半分离目标列表取决于目标。\r\n            可以是空字符串。\r\n            \r\n","\r\n            Creates a view of an evaluated project's XML as if it had all been loaded from\r\n            a single file, instead of being assembled by pulling in imported files as it actually was.\r\n            ":"\r\n            创建已评估项目XML的视图，就好像它已全部从\r\n            一个文件，而不是通过实际导入的文件来组装。\r\n            \r\n","\r\n            Returns an instance based on this project, but completely disconnected.\r\n            This instance can be used to build independently.\r\n            Before creating the instance, this will reevaluate the project if necessary, so it will not be dirty.\r\n            ":"\r\n            返回基于此项目的实例，但完全断开了连接。\r\n            此实例可用于独立构建。\r\n            在创建实例之前，这将在必要时重新评估项目，因此不会脏。\r\n            \r\n","\r\n            Unevaluated MatchOnMetadataOptions value.\r\n            ":"\r\n            未评估的matchonemmetadataoptions值。\r\n            \r\n"," but the argument is expected to be a normalized path.\r\n            ":" 但是，该论点预计将是一条归一化路径。\r\n            \r\n","\r\n            Creates a ProjectInstance directly.\r\n            No intermediate Project object is created.\r\n            This is ideal if the project is simply going to be built, and not displayed or edited.\r\n            Global properties may be null.\r\n            Tools version may be null.\r\n            Sub-toolset version may be null, but if specified will override all other methods of determining the sub-toolset.\r\n            ":"\r\n            直接创建一个ProjectInstance。\r\n            没有创建中间项目对象。\r\n            如果仅仅要构建或不显示或编辑该项目，这是理想的选择。\r\n            全局属性可能为零。\r\n            工具版本可能为空。\r\n            子量表版本可能为null，但是如果指定，将覆盖所有其他确定子型的方法。\r\n            \r\n","The event context information as to where the error occurred ":"事件上下文信息有关错误发生的位置\r\n","\r\n            Raised for ProjectStartedEventArgs instances\r\n            ":"\r\n            为ProjectStartedEventargs实例提出\r\n            \r\n","\r\n            Wraps an onerror element\r\n            ":"\r\n            包裹一个oneror元素\r\n            \r\n"," property from the ":" 来自\r\n","\r\n            Construct a function that will be executed during property evaluation.\r\n            ":"\r\n            构建将在属性评估期间执行的函数。\r\n            \r\n","name of the object sending this event":"对象发送此事件的名称\r\n","Whether small items should be pruned. This is called with false on some tests since the result may vary depending on the evaluator speed":"是否应该修剪小物品。这在某些测试中被称为false，因为结果可能会根据评估器速度而有所不同\r\n","\r\n            Gets the name of the task that raised this event.\r\n            ":"\r\n            获取提出此事件的任务的名称。\r\n            \r\n","\r\n            The build engine sets this property if the host IDE has associated a host object with this particular task.\r\n            ":"\r\n            如果主机IDE已将主机对象与此特定任务相关联，则构建引擎将设置此属性。\r\n            \r\n","\r\n            Retrieves any value we have in our metadata table for the metadata name specified,\r\n            whatever the item type.\r\n            If no value is available, returns empty string.\r\n            ":"\r\n            检索我们在元数据表中的任何值，以指定的元数据名称，\r\n            无论项目类型如何。\r\n            如果没有可用的值，请返回空字符串。\r\n            \r\n"," to reuse state between the different project evaluations that use it.\r\n            ":" 在使用它的不同项目评估之间重复使用状态。\r\n            \r\n","event arguments":"事件参数\r\n"," to forward.":" 转发。\r\n","\r\n            The (project) directory that should be used during evaluation\r\n            ":"\r\n            评估期间应使用的（项目）目录\r\n            \r\n","\r\n            Signals that we are waiting for a specific blocking request to finish.\r\n            ":"\r\n            信号表明我们正在等待特定的阻止请求完成。\r\n            \r\n","The left hand argument":"左手论点\r\n"," (default) to\r\n            save as a child XML Element, or ":" （默认）到\r\n            保存为儿童XML元素，或\r\n","\r\n            Gets the list of targets which are used to build the specified request, including all initial and applicable default targets\r\n            ":"\r\n            获取用于构建指定请求的目标列表，包括所有初始和适用的默认目标\r\n            \r\n","\r\n             Should hyphens be quoted or not\r\n            ":"\r\n             是否应该引用连字符\r\n            \r\n"," for other scenarios.\r\n            ":" 对于其他情况。\r\n            \r\n","\r\n            Constructor taking a table of metadata in which keys\r\n            may be a mixture of qualified (\"itemtype.name\") and unqualified (\"name\").\r\n            Unqualified keys are considered to apply to all item types.\r\n            Metadata may be null, indicating it is empty.\r\n            ":"\r\n            构造函数取一张键的元数据桌\r\n            可能是合格（“ itemType.name”）和无限制（“名称”）的混合物。\r\n            不合格的密钥被认为适用于所有项目类型。\r\n            元数据可能为空，表明它是空的。\r\n            \r\n","a.cs;*.cs;@(A)":"a.cs;*。cs;@（a）\r\n","\r\n            Store the pair of start/end events used by a particular submission to track their ownership \r\n            of the legacy thread. \r\n            Item1: Start event, tracks when the submission has permission to start building. \r\n            Item2: End event, signalled when that submission is no longer using the legacy thread. \r\n            ":"\r\n            将特定提交用来跟踪其所有权的特定提交使用的一对开始/结束事件存储\r\n            旧线程。\r\n            项目1：开始事件，跟踪提交何时有权开始构建。\r\n            item2：结束事件，该提交不再使用旧线程时发出信号。\r\n            \r\n","\r\n             Tolerating leading 'v' allows using $(TargetFrameworkVersion) directly.\r\n            \r\n             Ignoring semver portions allows, for example, checking >= major.minor\r\n             while still in development of that release.\r\n            \r\n             Implemented as a struct to avoid heap allocation. Parsing is done\r\n             without heap allocation at all on .NET Core. However, on .NET Framework,\r\n             the integer component substrings are allocated as there is no int.Parse\r\n             on span there.\r\n             ":"\r\n             耐受性“ V”允许直接使用$（targetFrameWorkversion）。\r\n            \r\n             忽略SEMVER部分允许检查> = major.minor\r\n             仍在开发该版本的同时。\r\n            \r\n             以避免堆分配的结构实现。解析完成\r\n             在.NET核心上完全没有堆分配。但是，在.NET框架上，\r\n             由于没有int.parse，分配了整数组件子字符串\r\n             在那里。\r\n             \r\n","\r\n            Returns the overall result for this result set.\r\n            ":"返回此结果集的总体结果。\r\n            \r\n","\r\n            Default version of MinOSVersion in framework extension SDKs with manifest not containing such a property\r\n            ":"\r\n            框架扩展SDK中的Minosversion的默认版本不包含此类属性\r\n            \r\n","\r\n            Registers an object with the system that will be disposed of at some specified time\r\n            in the future.\r\n            ":"\r\n            将对象注册为将在某些指定时间处置的系统\r\n            在将来。\r\n            \r\n","\r\n            Location of the MatchOnMetadata attribute\r\n            ":"\r\n            MatchonMetadata属性的位置\r\n            \r\n","Warning codes to be treated as messages for the current project.":"警告代码将被视为当前项目的消息。\r\n","\r\n            XmlNameTable that is thread safe for concurrent users.\r\n            ":"\r\n            xmlnameTable对于并发用户来说是安全的。\r\n            \r\n","\r\n            Properties of interest.\r\n            ":"感兴趣的属性。\r\n            \r\n","Input specification string (can be empty).":"输入规范字符串（可以为空）。\r\n","\r\n            It is not necessary to register any factories.  If no factory is registered for a specific kind\r\n            of object, the system will use the default factory.\r\n            ":"\r\n            没有必要注册任何工厂。如果没有工厂注册特定类型\r\n            对象，系统将使用默认工厂。\r\n            \r\n","\r\n            The source file that defined this item.\r\n            ":"\r\n            定义此项目的源文件。\r\n            \r\n","\r\n            Implementation of the equality operator.\r\n            ":"\r\n            平等操作员的实现。\r\n            \r\n","\r\n            Delegate used to reset text color\r\n            ":"\r\n            代表用于重置文本颜色\r\n            \r\n","\r\n            Regular expression used to match item metadata references embedded in strings.\r\n            For example, %(Compile.DependsOn) or %(DependsOn).\r\n            ":"\r\n            正则表达式用于匹配嵌入在字符串中的项目元数据参考。\r\n            例如，％（compile.ipenderson）或％（依赖子）。\r\n            \r\n","\r\n            Return an MSBuildGlob that represents this ItemSpec.\r\n            ":"\r\n            返回代表此itemspec的msbuildglob。\r\n            \r\n","\r\n            Get the action code.\r\n            ":"\r\n            获取动作代码。\r\n            \r\n",".\r\n            If the item is not associated with a project, returns false.\r\n            If the item is not present in the evaluated project, returns false.\r\n            If the item is associated with another project, throws ArgumentException.\r\n            Otherwise removes the item and returns true.\r\n            ":"。\r\n            如果项目与项目不关联，请返回false。\r\n            如果该项目不存在于评估项目中，请返回false。\r\n            如果该项目与另一个项目关联，则会引发参数exception。\r\n            否则将删除该项目并返回真实。\r\n            \r\n","\r\n            Construct.\r\n            ":"\r\n            构造。\r\n            \r\n","\r\n            Location of the condition, if any\r\n            ":"\r\n            情况的位置，如果有的话\r\n            \r\n","\r\n                Constructs a graph starting from the given project files, evaluating with the provided global properties and the\r\n                global project collection.\r\n            ":"\r\n                从给定的项目文件开始构造图形，并通过提供的全局属性评估\r\n                全球项目集合。\r\n            \r\n","right version":"正确版本\r\n",". The containing ":"。包含\r\n","\r\n            Create a ProjectItemInstance from another item, changing the item type and include.\r\n            ":"\r\n            从另一个项目中创建一个ProjectIteMinstance，更改项目类型并包括。\r\n            \r\n","\r\n             Because there is no longer a strong 1:1 mapping between FX versions and SDK\r\n             versions, if we're unable to locate the desired SDK version, we will try to\r\n             use whichever SDK version is installed by looking at the key pointing to the\r\n             \"latest\" version.\r\n            \r\n             This isn't ideal, but it will allow our tasks to function on any of several\r\n             related SDKs even if they don't have exactly the same versions.\r\n            \r\n             NOTE:  This explicitly returns the path to the 3.5 tools (bin) under the fallback\r\n             SDK, to match the data we're pulling from the registry now.\r\n             ":"\r\n             因为FX版本和SDK之间不再有强度的1：1映射\r\n             版本，如果我们无法找到所需的SDK版本，我们将尝试\r\n             通过查看指向的密钥来安装任何SDK版本\r\n             “最新版本。\r\n            \r\n             这不是理想的，但是它将允许我们的任务在几个\r\n             相关的SDK即使没有完全相同的版本。\r\n            \r\n             注意：这明确返回了后备下的3.5工具（bin）的路径\r\n             SDK，要匹配我们现在从注册表中获取的数据。\r\n             \r\n","\r\n            Start off with a large size as there are very many strings in common scenarios and resizing is expensive.\r\n            Note that there is a single instance of this cache for the lifetime of the process (albeit cleared out on XML unload)\r\n            Australian Govt has about 3000 strings; a single VC project with all its various XML files has about 4000 strings.\r\n            ":"\r\n            从大尺寸开始，因为常见场景中有很多字符串，并且调整大小很昂贵。\r\n            请注意，该过程的生命周期有一个实例（尽管在XML卸载上清除）\r\n            澳大利亚政府大约有3000个弦乐；一个带有各种XML文件的单个VC项目具有大约4000个字符串。\r\n            \r\n","The length of array which will be used in translation":"阵列的长度将用于翻译\r\n","The request which completed":"完成的请求\r\n","List of disk locations to search for platform sdks":"搜索平台SDK的磁盘位置列表\r\n","Can be empty string, but not null.":"可以是空字符串，但不能为空字符串。\r\n","\r\n            Outputs of the targets built in each project.\r\n            ":"\r\n            每个项目中构建的目标的输出。\r\n            \r\n","\r\n            Additional attributes of this ":"\r\n            此的其他属性\r\n","\r\n            Constructor from an existing collection of toolsets.\r\n            ":"\r\n            现有工具集集合的构造函数。\r\n            \r\n","\r\n            ProjectTargetElement represents the Target element in the MSBuild project.\r\n            ":"\r\n            ProjectTargetElement代表MSBUILD项目中的目标元素。\r\n            \r\n","The type of items to be produced.":"要生产的项目类型。\r\n","\r\n            The default of he ToString method should  be to output the projectKey or the projectKey and the entrypointKey depending if a\r\n            entry point key exists or not\r\n            ":"\r\n            He Tostring方法的默认值应是输出项目Keke或ProjectKey和EntripointKey，具体取决于A\r\n            入口点密钥是否存在\r\n            \r\n"," to provide resource management API to tasks.\r\n            ":" 为任务提供资源管理API。\r\n            \r\n"," as the MSBuild property name.":" 作为MSBUILD属性名称。\r\n","\r\n            Target event was in\r\n            ":"\r\n            目标事件在\r\n            \r\n","\r\n            Sets a value on a property of this task instance.\r\n            ":"\r\n            在此任务实例的属性上设置一个值。\r\n            \r\n","\r\n            Platform that the SDK targets\r\n            ":"\r\n            SDK目标的平台\r\n            \r\n","\r\n            Creates an unparented ProjectItemElement, wrapping an unparented XmlElement.\r\n            Caller should then ensure the element is added to a parent.\r\n            ":"\r\n            创建一个无与伦比的projectItemelement，包装无与伦比的XMlelement。\r\n            然后，呼叫者应确保将元素添加到父。\r\n            \r\n","The primary source files to interpret dependencies for":"主要源文件要解释依赖关系\r\n","Disabled":"禁用\r\n","\r\n            We may only wish to log crtitical events, record that fact so we can apply it to build requests\r\n            ":"\r\n            我们可能只希望记录Crtitical事件，记录该事实，以便我们将其应用于构建请求\r\n            \r\n","the file name where the target is defined":"定义目标的文件名\r\n","\r\n            Valid attribute list for item\r\n            ":"\r\n            项目的有效属性列表\r\n            \r\n","Used to find registry subkey names.":"用于查找注册表子键名称。\r\n","The number of cores the task is allowed to use given the current state of the build. This number is always between\r\n            1 and ":"给定构建的当前状态，允许该任务的内核数。这个数字始终在\r\n            1和\r\n","\r\n            Write a provided instance of BuildEventArgs to the BinaryWriter\r\n            ":"\r\n            将提供的buildEventargs实例写给二进制作者\r\n            \r\n","\r\n            The path where we will store debug files\r\n            ":"\r\n            我们将存储调试文件的路径\r\n            \r\n","\r\n            Raises the OnStatusChanged event.\r\n            ":"\r\n            提出了Onstatuschanged活动。\r\n            \r\n","\r\n            Comparer used to figure out whether two RegisteredTaskIdentities are equal or not.\r\n            ":"\r\n            用于弄清楚两个注册任务认可是否相等的比较。\r\n            \r\n","\r\n            Raised for TaskFinishedEventArgs instances\r\n            ":"\r\n            为taskfinedEventargs实例提出\r\n            \r\n","The BuildRequestEntry which is making the request":"提出请求的BuildRequestry\r\n","\r\n            Regkey that we check to see whether LightSwitch 2010 is installed.  This will exist if it is installed, and be \r\n            properly removed after it has been uninstalled.  \r\n            ":"\r\n            我们检查是否安装了Lightswitch 2010。如果安装它，则将存在，并且\r\n            卸载后正确删除。\r\n            \r\n","The request which attempted to invoke the request causing the circular dependency.":"试图调用引起循环依赖性的请求的请求。\r\n","\r\n            Intrinsic function that returns only those items that have a not-blank value for the metadata specified\r\n            Using a case insensitive comparison.\r\n            ":"\r\n            固有函数仅返回那些指定元数据的项目\r\n            使用案例不敏感的比较。\r\n            \r\n","\r\n            The cache of responses which is cleared between builds.\r\n            ":"\r\n            构建之间清除的响应缓存。\r\n            \r\n","\r\n            The environment properties with which evaluation should take place.\r\n            ":"\r\n            应进行评估的环境属性。\r\n            \r\n","\r\n            The list of parameters found in the using task along with a corosponding UsingTaskParameterInfo which contains the specific information about it\r\n            Populated lazily as it is often empty.\r\n            ":"\r\n            在使用任务中找到的参数列表以及包含有关它的特定信息的Corossonding使用corosponding\r\n            懒散的人通常是空的。\r\n            \r\n","\r\n            The project file's location. It can be null if the project is not directly loaded from a file.\r\n            ":"\r\n            项目文件的位置。如果项目未直接从文件中加载，则可以为null。\r\n            \r\n","\r\n            Enters the scope using the specified description.\r\n            Callers keep the scope in order to pass it to ":"\r\n            使用指定的描述进入范围。\r\n            呼叫者保留范围以将其传递给\r\n","\r\n            Report statistics about interning. Don't call unless GatherStatistics has been called beforehand.\r\n            ":"\r\n            报告有关研究的统计数据。除非事先调用Gatherstatistics，否则请勿致电。\r\n            \r\n","\r\n            Writes out the detailed summary of the build.\r\n            ":"\r\n            写出构建的详细摘要。\r\n            \r\n","\r\n            Break in the current state last set by EnterState(). \r\n            An interpreter could call this to\r\n            implement a \"data breakpoint\".\r\n            ":"\r\n            在当前状态中折断sterstate（）的最后一个设置。\r\n            口译员可以将其称为\r\n            实施“数据断点”。\r\n            \r\n","\r\n            This field is optional.\r\n            ":"\r\n            该字段是可选的。\r\n            \r\n","\r\n            The item factory used to create items from Xml.\r\n            ":"\r\n            工厂用于从XML创建项目的工厂。\r\n            \r\n","The instance to build.":"要构建的实例。\r\n","\r\n            Location of the include attribute\r\n            ":"\r\n            包括属性的位置\r\n            \r\n","\r\n            PERF NOTE: Given n items and m batching metadata that produce l buckets, it is usually the case that n > l > m,\r\n            because a batchable object typically uses one or two item metadata to control batching, and only has a handful of\r\n            buckets. The number of buckets is typically only large if a batchable object is using single-item batching\r\n            (where l == n). Any algorithm devised for bucketing therefore, should try to minimize n and l in its complexity\r\n            equation. The algorithm below has a complexity of O(n*lg(l)*m/2) in its comparisons, and is effectively O(n) when\r\n            l is small, and O(n*lg(n)) in the worst case as l -> n. However, note that the comparison complexity is not the\r\n            same as the operational complexity for this algorithm. The operational complexity of this algorithm is actually\r\n            O(n*m + n*lg(l)*m/2 + n*l/2 + n + l), which is effectively O(n^2) in the worst case. The additional complexity comes\r\n            from the array and metadata operations that are performed. However, those operations are extremely cheap compared\r\n            to the comparison operations, which dominate the time spent in this method.\r\n            ":"\r\n            完善注意：给定n个项目和M批量元数据产生L桶，通常是N> m m，\r\n            因为一个批处理的对象通常使用一个或两个项目元数据来控制批处理，并且只有少数\r\n            水桶。如果可批处理对象使用单个项目批处理，则水桶数量通常仅大\r\n            （其中l == n）。因此，任何设计用于铲斗的算法，都应尝试最大程度地减少N和L的复杂性\r\n            方程。以下算法在比较中具有O（n*lg（l）*m/2）的复杂性，当\r\n            L很小，在最坏情况下为l-> n。但是，请注意，比较复杂性不是\r\n            与该算法的操作复杂性相同。该算法的操作复杂性实际上是\r\n            O（n*m + n*lg（l）*m/2 + n*l/2 + n + l），在最坏情况下实际上是O（n^2）。额外的复杂性来了\r\n            从执行的阵列和元数据操作中。但是，这些操作非常便宜\r\n            进行比较操作，该操作主导了此方法所花费的时间。\r\n            \r\n","\r\n            The associated project.\r\n            ":"\r\n            关联的项目。\r\n            \r\n","\r\n            This interface exposes functionality on the build engine\r\n            that is required for task authoring.\r\n            ":"\r\n            该界面在构建引擎上公开功能\r\n            这是任务创作所必需的。\r\n            \r\n","\r\n            Indicates the metadata value should be removed.\r\n            ":"\r\n            表示应删除元数据值。\r\n            \r\n","\r\n            Enters the MSBuild callback state for asynchronous processing of referenced projects.\r\n            ":"\r\n            进入MSBUILD回调状态，以进行引用项目的异步处理。\r\n            \r\n","\r\n            Creates a new request builder.\r\n            ":"\r\n            创建一个新的请求构建器。\r\n            \r\n","\r\n            Gets or sets the minimum version of the SDK required to build the project.\r\n            ":"\r\n            获取或设置构建项目所需的SDK的最低版本。\r\n            \r\n","\r\n            Location of the Inputs attribute\r\n            ":"\r\n            输入属性的位置\r\n            \r\n","\r\n            When a particular instance has not been set will use the global string cache. The ability\r\n            to use a particular instance is useful for tests.\r\n            ":"\r\n            尚未设置特定实例后，将使用全局字符串缓存。能力，技能\r\n            使用特定实例对于测试很有用。\r\n            \r\n","\r\n            Are all the TLogs that were passed to us actually available on disk?\r\n            ":"\r\n            是否所有传递给我们的TLOG实际上都在磁盘上可用？\r\n            \r\n","\r\n            Constructor over a result.\r\n            ":"\r\n            构造函数在结果上。\r\n            \r\n","The build request originating these requests.":"构建这些请求的构建请求。\r\n","\r\n            When an expansion occurs, truncate it to Expander.DefaultTruncationCharacterLimit or Expander.DefaultTruncationItemLimit.\r\n            ":"\r\n            发生扩展时，将其截断为扩展器。DefaultTruncationCharacterLimit或Expander.defaultTruncationItemlimit。\r\n            \r\n","\r\n            Create a text node.\r\n            Overridden to cache attribute values.\r\n            ":"\r\n            创建一个文本节点。\r\n            覆盖为缓存属性值。\r\n            \r\n","The action to be processed.":"要处理的动作。\r\n","\r\n            OS attribute of the element\r\n            ":"\r\n            元素的OS属性\r\n            \r\n","\r\n            Get the location of the target platform SDK props file for a given {SDKI, SDKV, TPI, TPMinV, TPV} combination.\r\n            ":"\r\n            获取给定{SDKI，SDKV，TPI，TPMINV，TPV}组合的目标平台SDK Props文件的位置。\r\n            \r\n","The unevaluated value for the parameter.":"参数的未评估值。\r\n","\r\n            Parse a ProjectUsingTaskElement\r\n            ":"\r\n            解析projectingTaskelement\r\n            \r\n","\r\n            Gets the total number of cores granted to executing and yielding build requests.\r\n            ":"\r\n            获取授予执行和产生构建请求的核心总数。\r\n            \r\n"," which will be signalled when the build is complete.  Valid after ":" 构建完成后将发出信号。有效\r\n","\r\n            Initializes this RegistryKeyWrapper to wrap the key at the specified path\r\n            and assumes the key is underneath HKLM\r\n            Note that registryKeyPath should be relative to HKLM.\r\n            ":"\r\n            初始化此registryKeywrapper以在指定路径上包装密钥\r\n            并假设关键在HKLM下方\r\n            请注意，注册表型应相对于HKLM。\r\n            \r\n","\r\n            C#, VB, F#, and VJ# projects\r\n            ":"\r\n            C＃，VB，F＃和VJ＃项目\r\n            \r\n","\r\n            Increment the named counter, and dump if it's time to do so\r\n            ":"\r\n            递增指定的计数器，如果是时候丢弃了\r\n            \r\n","\r\n            Handle telemetry events.\r\n            ":"\r\n            处理遥测活动。\r\n            \r\n","\r\n            Creates a project extensions node.\r\n            Caller must add it to the location of choice in the project.\r\n            ":"\r\n            创建一个项目扩展节点。\r\n            呼叫者必须将其添加到项目中选择的位置。\r\n            \r\n","\r\n            Gathers toolset data from the registry and configuration file, if any:\r\n            allows you to specify which of the registry and configuration file to\r\n            read from by providing ToolsetInitialization\r\n            ":"\r\n            从注册表和配置文件中收集工具集数据，如果有：\r\n            允许您指定哪个注册表和配置文件\r\n            通过提供工具启动来阅读\r\n            \r\n","\r\n            True if the exception occurred during logger initialization\r\n            ":"\r\n            如果在记录器初始化期间发生异常\r\n            \r\n","\r\n            UNDONE: (Multiple configurations.) Protect against problems when attempting to edit, after edits were made to the same ProjectRootElement either directly or through other projects evaluated from that ProjectRootElement.\r\n            ":"\r\n            撤消：（多种配置。）在尝试编辑时，请在直接或通过从该ProjectRootelement评估的其他项目进行编辑后，防止问题。\r\n            \r\n","\r\n            The project instance to which this item belongs.\r\n            Never null.\r\n            ":"\r\n            该项目所属的项目实例。\r\n            永不零。\r\n            \r\n","Error code string, or null.":"错误代码字符串或null。\r\n","\r\n            Maximum platform version from SDKManifest.xml\r\n            ":"\r\n            最大平台版本来自sdkmanifest.xml\r\n            \r\n","\r\n            Returns a list of all items in the provided item group whose itemspecs match the specification, after it is split and any wildcards are expanded.\r\n            If no items match, returns null.\r\n            ":"\r\n            返回提供的项目组中所有项目的列表，该项目组符合规范，然后将其拆分并扩展任何通配符。\r\n            如果没有匹配的项目，请返回null。\r\n            \r\n","\r\n            Convert the object into an MSBuild friendly string\r\n            Arrays are supported.\r\n            Will not return NULL\r\n            ":"\r\n            将对象转换为MSBUILD友好的字符串\r\n            支持阵列。\r\n            不会返回null\r\n            \r\n","\r\n            Ask the question, whether or not the task name can be created by the task factory. \r\n            To answer this question we need to instantiate and initialize the task factory and ask it if it can create the given task name. \r\n            This question is useful for assembly tasks where the task may or may not be in an assembly, this can also be useful if the task factory \r\n            loads an external file and uses that to generate the tasks.\r\n            ":"\r\n            询问问题，是否可以由任务工厂创建任务名称。\r\n            要回答这个问题，我们需要实例化和初始化任务工厂，并询问它是否可以创建给定的任务名称。\r\n            这个问题对于任务可能会或可能不在组装中的汇编任务很有用，如果任务工厂，这也可能很有用\r\n            加载外部文件并使用它来生成任务。\r\n            \r\n","\r\n            ProjectMetadataElement class represents a Metadata element in the MSBuild project.\r\n            ":"\r\n            ProjectMetadataelement类代表MSBUILD项目中的元数据元素。\r\n            \r\n","The name of the metadata.":"元数据的名称。\r\n","\r\n            Create an empty ParameterGroupAndTaskElementRecord\r\n            ":"\r\n            创建一个空参数groupandTaskElementRecord\r\n            \r\n","\r\n            Locate a file in either the directory specified or a location in the\r\n            directory structure above that directory.\r\n            ":"\r\n            在指定的目录或位置中找到文件\r\n            该目录上方的目录结构。\r\n            \r\n","The name of the project file.":"项目文件的名称。\r\n","\r\n            Throws an InvalidProjectFileException complaining that the attribute is not valid on this element.\r\n            ":"\r\n            抛出无效的fileException，抱怨该属性在此元素上无效。\r\n            \r\n","\r\n            App domain configuration.\r\n            ":"\r\n            应用域配置。\r\n            \r\n","\r\n            Class representing searchPaths element for a single OS\r\n            ":"代表单个操作系统的搜索路径元素\r\n            \r\n","\r\n            This method waits for the specified handles, but will also spawn a request builder \"thread\" if that event is set.\r\n            This mechanism is used to implement running RequestBuilder threads on the main UI thread in VS.\r\n            ":"\r\n            该方法等待指定的手柄，但如果设置该事件，也将催生请求构建器“线程”。\r\n            该机制用于在VS中的主UI线程上实现运行的RequestBuilder线程。\r\n            \r\n","\r\n            Initialize a parented ProjectImportGroupElement\r\n            ":"\r\n            初始化育儿ProjectImportGroupelement\r\n            \r\n","\r\n            Handler which is called when a project is dirtied.\r\n            ":"\r\n            当项目被污垢时称为处理程序。\r\n            \r\n","\r\n            Returns a property with a given name.\r\n            ":"\r\n            返回带有给定名称的属性。\r\n            \r\n","\r\n            Call this method to notify listeners of timing related to loading an XmlDocumentWithLocation from a path.\r\n            ":"\r\n            调用此方法以将与从路径加载xmldocumentWithLocation相关的时序通知听众。\r\n            \r\n","\r\n            Gets the assembly's primary resources i.e. the resources exclusively owned by this assembly.\r\n            ":"\r\n            获取大会的主要资源，即本议会独家拥有的资源。\r\n            \r\n","\r\n            Exits the previous MSBuild callback state.\r\n            ":"\r\n            退出以前的MSBUILD回调状态。\r\n            \r\n","\r\n            Logs an UninitializedPropertyRead event.\r\n            ":"\r\n            记录一个非初始化的propertyread事件。\r\n            \r\n","full path to the temporarily created response file":"通往暂时创建的响应文件的完整路径\r\n","\r\n            Writes out the list of property names and their values.\r\n            This could be done at any time during the build to show the latest\r\n            property values, using the cached reference to the list from the\r\n            appropriate ProjectStarted event.\r\n            ":"\r\n            写出属性名称及其价值的列表。\r\n            这可以在构建过程中的任何时候完成，以显示最新的\r\n            属性值，使用从列表中的缓存引用\r\n            适当的项目开始。\r\n            \r\n","Exception wihch caused the build error":"异常造成构建错误\r\n","\r\n            Unevaluated MSBuildArchitecture on the task.\r\n            May be empty string.\r\n            ":"\r\n            关于该任务的未评估MSBuildArchittone。\r\n            可以是空字符串。\r\n            \r\n"," to use for evaluation.":" 用于评估。\r\n","\r\n            Implementation of the inequality operator.\r\n            ":"\r\n            实施不平等运营商。\r\n            \r\n","\r\n            A section of a toolset configuration\r\n            ":"\r\n            工具集配置的一部分\r\n            \r\n","\r\n            Provides an ElementLocation for this element, using the path to the file containing\r\n            this element as the project file entry.\r\n            Element location may be incorrect, if it was not loaded from disk.\r\n            Does not return null.\r\n            ":"\r\n            使用包含的文件的路径为此元素提供了一个元素。\r\n            该元素作为项目文件条目。\r\n            如果未从磁盘加载元素位置，则可能是不正确的。\r\n            不返回null。\r\n            \r\n","\r\n            Set a built-in property in the supplied bag.\r\n            NOT to be used for properties originating in XML.\r\n            NOT to be used for global properties.\r\n            NOT to be used for environment properties.\r\n            ":"在提供的袋子中设置内置财产。\r\n            不适用于起源于XML的属性。\r\n            不适用于全局属性。\r\n            不适用于环境属性。\r\n            \r\n","\r\n            Applies properties from the specified type to this instance.\r\n            ":"\r\n            将属性从指定类型应用于此实例。\r\n            \r\n","\r\n            Splits an expression into fragments at semi-colons, except where the\r\n            semi-colons are in a macro or separator expression.\r\n            Fragments are trimmed and empty fragments discarded.\r\n            ":"\r\n            将表达式分成半颜色的片段，除非\r\n            半颜色在宏观或分离器表达中。\r\n            修剪碎片并丢弃空的碎片。\r\n            \r\n"," property was updated, otherwise false (no update necessary).":" 属性已更新，否则是错误的（无需更新）。\r\n","May be full name or assembly qualified name.":"可以是全名或组装合格名称。\r\n","\r\n            Gets or sets the node connection timeout.\r\n            ":"\r\n            获取或设置节点连接超时。\r\n            \r\n","\r\n            Cleans up any context or state that may have been built up for a given task.\r\n            ":"清理可能为给定任务建立的任何上下文或状态。\r\n            \r\n","\r\n            Path to look for msbuild override task files.\r\n            ":"\r\n            寻找MSBUILD替代任务文件的路径。\r\n            \r\n","\r\n            Help keyword\r\n            ":"\r\n            帮助关键字\r\n            \r\n","\r\n            The collection of all requests currently known to the system.\r\n            ":"\r\n            系统当前已知的所有请求的集合。\r\n            \r\n","\r\n            Properties associated with the toolset\r\n            ":"\r\n            与工具集关联的属性\r\n            \r\n","The request to be scheduled.":"安排的请求。\r\n","\r\n            Object used for locking.\r\n            ":"\r\n            用于锁定的对象。\r\n            \r\n","\r\n            The exception from the failure, if any.\r\n            ":"\r\n            失败的例外（如果有）。\r\n            \r\n","\r\n            This is much like ":"\r\n            这很像\r\n","\r\n            A GraphBuildSubmission represents a graph build request which has been submitted to the BuildManager for processing.  It may be used to\r\n            execute synchronous or asynchronous graph build requests and provides access to the results upon completion.\r\n            ":"\r\n            GraphBuildSubmission表示已提交给BuildManager进行处理的图形构建请求。它可以习惯\r\n            执行同步或异步图构建请求，并在完成后提供对结果的访问。\r\n            \r\n","\r\n            Clear out all registered loggers so that none are registered.\r\n            If no loggers are registered, does nothing.\r\n            ":"\r\n            清除所有注册的登录机，以便没有注册。\r\n            如果没有记录器注册，则什么都不做。\r\n            \r\n","\r\n            Returns the exception generated while this result was run, if any.\r\n            ":"\r\n            在运行此结果时返回生成的异常（如果有）。\r\n            \r\n","If set, skip targets that are not defined in the projects to be built.":"如果设置，则跳过要构建项目中未定义的目标。\r\n","\r\n            Test only\r\n            ":"\r\n            仅测试\r\n            \r\n","\r\n            Cache of task names which can be created by the factory. \r\n            When ever a taskName is checked against the factory we cache the result so we do not have to \r\n            make possibly expensive calls over and over again.\r\n            ":"\r\n            可以由工厂创建的任务名称的缓存。\r\n            当对工厂检查任务名时，我们可以缓存结果，因此我们不必\r\n            一遍又一遍地打来昂贵的电话。\r\n            \r\n","\r\n            Shuts down this component.\r\n            ":"\r\n            关闭此组件。\r\n            \r\n"," before\r\n            setting the first property and ":" 前\r\n            设置第一个属性，并\r\n","\r\n            This project's name\r\n            ":"这个项目的名字\r\n            \r\n","If a logger exception is thrown while creating or initializing the distributed or central logger":"如果在创建或初始化分布式或中央记录器时抛出了记录器异常\r\n","\r\n            A temporary buffer we use when writing a NameValueList record. Avoids allocating a list each time.\r\n            ":"\r\n            我们在编写名称Valuelist记录时使用的临时缓冲区。避免每次分配列表。\r\n            \r\n","\r\n            Returns the ProjectRootElement for the given path if it has been loaded, or null if it is not currently in memory.\r\n            Uses the specified project collection.\r\n            ":"\r\n            如果已加载了给定路径的项目Rootelement，则返回该项目的启用，如果当前不在内存中，则将其返回该项目。\r\n            使用指定的项目集合。\r\n            \r\n",". In this switch and value representation, \":\" is the separator since its separates the switch ":"。在此开关和值表示形式中，“：”是分隔器，因为它的开关分离\r\n","\r\n            A list of the warnings that have occurred during this build.\r\n            ":"\r\n            此构建过程中发生的警告列表。\r\n            \r\n","\r\n            Of all the item lists that are referenced in this batchable object, which ones should we\r\n            batch on, and which ones should we just pass in wholesale to every invocation of the \r\n            target/task?\r\n            \r\n            Rule #1.  If the user has referenced any *qualified* item metadata such as %(EmbeddedResource.Culture),\r\n            then that item list \"EmbeddedResource\" will definitely get batched.\r\n            \r\n            Rule #2.  For all the unqualified item metadata such as %(Culture), we make sure that \r\n            every single item in every single item list being passed into the task contains a value\r\n            for that metadata.  If not, it's an error.  If so, we batch all of those item lists.\r\n            \r\n            All other item lists will not be batched, and instead will be passed in wholesale to all buckets.\r\n            ":"\r\n            在此批处理对象中引用的所有项目列表中，我们应该哪一个\r\n            批处理，我们应该批发进行哪些\r\n            目标/任务？\r\n            \r\n            规则1。如果用户引用了任何 *合格的 *项目元数据，例如％（EmbeddedResource.Ulture），则\r\n            然后，该项目列表“ EmbeddedResource”肯定会批准。\r\n            \r\n            规则＃2。对于所有不合格的物品元数据，例如％（文化），我们确保\r\n            每个要传递到任务的项目列表中的每个项目都包含一个值\r\n            对于那个元数据。如果没有，这是一个错误。如果是这样，我们将所有这些项目列表批量。\r\n            \r\n            所有其他项目列表都不会批处理，而是将批发传递给所有存储桶。\r\n            \r\n","\r\n            Legacy continue on error value per batch exposed via IBuildEngine\r\n            ":"\r\n            遗产继续在通过ibuildengine暴露的每批误差值继续\r\n            \r\n"," if setting the condition is\r\n            not applicable for those elements.\r\n            ":" 如果设置条件是\r\n            不适用于这些元素。\r\n            \r\n"," to fallback, otherwise ":" 退缩，否则\r\n","Requires creating a new segmented list and cloning all impacted segments":"需要创建一个新的分段列表并克隆所有受影响的细分\r\n","\r\n            Project that owns this data.\r\n            ":"\r\n            拥有此数据的项目。\r\n            \r\n","\r\n            Maximum allowed value for this property. \r\n            ":"\r\n            此属性的最大允许值。\r\n            \r\n","\r\n            Returns the configuration id\r\n            ":"\r\n            返回配置ID\r\n            \r\n","This is designed to not hold on to strings. We just store the string indices and\r\n            hydrate the dictionary on demand before returning.":"这旨在不坚持字符串。我们只是存储字符串索引，\r\n            返回之前，请按需补充词典。\r\n"," might cache state.\r\n            ":" 可能缓存状态。\r\n            \r\n","\r\n            Looks for results for the specified targets.\r\n            ":"\r\n            寻找指定目标的结果。\r\n            \r\n","ProjectRootElement to use":"使用ProjectRootlement\r\n","\r\n            ItemDictionary[] returns a read only collection, so no need to wrap it.\r\n            ":"\r\n            ItemDictionary []仅返回一个读取集合，因此无需包装。\r\n            \r\n","\r\n            Initializes an instance of the ProvenanceResult class.\r\n            ":"\r\n            初始化Provenancerult类的实例。\r\n            \r\n","exit code from the tool - if errors were logged and the tool has an exit code of zero, then we sit it to -1":"该工具的退出代码 - 如果已记录错误并且该工具的退出代码为零，则将其放在-1\r\n","\r\n            The projects loaded into this collection.\r\n            ":"\r\n            加载到此集合中的项目。\r\n            \r\n","\r\n            The state of the request before the event.\r\n            ":"\r\n            事件前请求状态。\r\n            \r\n","\r\n            Regular property, originating in an XML node, but with no predecessor (property with same name that it overrode during evaluation)\r\n            ":"\r\n            常规属性，起源于XML节点，但没有前身（具有相同名称的属性，其在评估过程中覆盖了）\r\n            \r\n","Array of target names.":"目标名称数组。\r\n","\r\n            Cleans up after running the task.\r\n            ":"\r\n            运行任务后清理。\r\n            \r\n","\r\n            Sends a build request to the Build Manager for scheduling\r\n            ":"\r\n            向构建管理器发送构建请求以进行调度\r\n            \r\n","\r\n            Gets any metadata with the specified name.\r\n            Does not include built-in metadata.\r\n            ":"\r\n            获取带有指定名称的任何元数据。\r\n            不包括内置元数据。\r\n            \r\n","\r\n            The request for this entry\r\n            ":"\r\n            此条目的请求\r\n            \r\n","\r\n            Location of the element\r\n            ":"\r\n            元素的位置\r\n            \r\n","sizeof":"大小\r\n","\r\n            The binary writer around the currentRecordStream.\r\n            ":"\r\n            二进制作家围绕当前的播种。\r\n            \r\n","\r\n            Gets the exception message not including the project file.\r\n            ":"\r\n            获取不包括项目文件的异常消息。\r\n            \r\n","\r\n            Complete list of all imports pulled in during evaluation.\r\n            This includes the outer project itself.\r\n            ":"在评估期间撤出的所有进口列表的完整列表。\r\n            这包括外部项目本身。\r\n            \r\n","\r\n            The plan.\r\n            ":"\r\n            计划。\r\n            \r\n","\r\n            Expand only properties\r\n            ":"\r\n            仅扩展属性\r\n            \r\n","\r\n            Allows tasks to raise message events to all registered loggers.\r\n            The build engine may perform some filtering or\r\n            pre-processing on the events, before dispatching them.\r\n            ":"\r\n            允许任务将消息事件提高到所有注册的记录仪。\r\n            构建引擎可能会执行一些过滤或\r\n            在派遣事件之前对事件进行预处理。\r\n            \r\n","\r\n            Location of the execute targets attribute, if any\r\n            ":"\r\n            执行目标属性的位置，如果有的话\r\n            \r\n","\r\n            Synchronization object.\r\n            ":"\r\n            同步对象。\r\n            \r\n","\r\n            Signal that the legacy thread is starting work.\r\n            ":"\r\n            表明旧线程正在开始工作。\r\n            \r\n","\r\n            The provider provides out-of-proc nodes.\r\n            ":"\r\n            提供商提供了传播的节点。\r\n            \r\n"," represents a Build Customization, this field defines the semicolon separated list of outputs that are going to be evaluated\r\n            for the Build Customization target.\r\n            ":" 代表构建自定义，此字段定义了将要评估的输出的分离列表\r\n            对于构建自定义目标。\r\n            \r\n","\r\n            The non-equivalence operator.\r\n            ":"\r\n            非等效操作员。\r\n            \r\n","\r\n            Get a fully qualified path to a file in the frameworks root directory for the specified architecture.\r\n            ":"\r\n            在指定体系结构的“框架根目录”中获取通往文件的完全合格的路径。\r\n            \r\n","\r\n            Construct an empty project, evaluating with the specified project collection's\r\n            global properties and default tools version.\r\n            Project will be added to the specified project collection when it is named.\r\n            ":"\r\n            构建一个空项目，用指定的项目集合评估\r\n            全局属性和默认工具版本。\r\n            命名时，项目将被添加到指定的项目集合中。\r\n            \r\n","\r\n            Factory for intrinsic tasks.\r\n            ":"\r\n            用于内在任务的工厂。\r\n            \r\n","The logging services to use to log during this registration.":"在此注册过程中用于登录的日志服务。\r\n","true if all projects build successfully; false if any project fails":"如果所有项目成功地建立，则是真的；如果任何项目失败\r\n","\r\n            The set of requests to issue.  This holds all of the requests as we prepare them.  Once their configurations\r\n            have all been resolved, we will issue them to the Scheduler in the order received.\r\n            ":"\r\n            发出的请求集。当我们准备它们时，这持有所有请求。一旦其配置\r\n            已经解决了所有问题，我们将以收到的订单向调度程序发布。\r\n            \r\n","\r\n            Gets the evaluated value of the include, escaped as necessary.\r\n            ":"\r\n            获取所需的评估值，并在必要时逃脱。\r\n            \r\n","\r\n            Hash set of properties which have been used before being initialized.\r\n            ":"\r\n            在初始化之前已使用的哈希属性集。\r\n            \r\n","\r\n            Implementation of IMetadataTable that can be passed to expander to expose only built-in metadata on this item.\r\n            Built-in metadata is stored in a separate table so it can be cleared out when the item is renamed, as this invalidates the values.\r\n            Also, more importantly, because typically the same regular metadata values can be shared by many items,\r\n            and keeping item-specific metadata out of it could allow it to be implemented as a copy-on-write table.\r\n            ":"\r\n            可以传递以扩展的imetadatatabable的实施，以仅在此项目上暴露内置元数据。\r\n            内置的元数据存储在单独的表中，因此可以在项目重命名时清除，因为这使该值无效。\r\n            此外，更重要的是，因为通常可以通过许多项目共享相同的常规元数据值，\r\n            并将特定于项目的特定元数据放在其之外，可以使其作为抄写表的复制表实现。\r\n            \r\n","Factory class to create an ":"工厂课程创建一个\r\n","\r\n            The toolset data used during evaluation.\r\n            ":"\r\n            评估过程中使用的工具集数据。\r\n            \r\n","\r\n            Private constructor which throws the right sort of exception depending on whether it is invoked as a result of\r\n            a design-time or build-time call.\r\n            Discards the location of the original element after error checking. This is not interesting in the Execution world\r\n            as it should never be needed for any subsequent messages, and is just extra bulk.\r\n            Inherits mutability from project if any.\r\n            ":"\r\n            私人构造函数，根据是否调用了正确的例外\r\n            设计时间或构建时间通话。\r\n            错误检查后丢弃原始元素的位置。这在执行世界中并不有趣\r\n            由于任何后续消息都不需要它，而且只是额外的批量。\r\n            如果有的话，从项目中继承了可变性。\r\n            \r\n","\r\n            Normally, invocation of explicit interface members requires boxing or copying the value type, which is\r\n            especially problematic for operations that mutate the value. Invocation through these helpers behaves like a\r\n            normal call to an implicitly implemented member.\r\n            ":"\r\n            通常，调用显式接口成员需要拳击或复制值类型，即\r\n            对于突变价值的操作尤其有问题。通过这些助手的调用就像\r\n            普通呼叫对隐式实施的成员。\r\n            \r\n","\r\n            The type of this function's receiver\r\n            ":"\r\n            此功能接收器的类型\r\n            \r\n","\r\n            Stores and calculates the performance numbers for the different events\r\n            ":"\r\n            存储并计算不同事件的性能编号\r\n            \r\n","\r\n            The Project Xml to be evaluated.\r\n            ":"\r\n            XML项目将进行评估。\r\n            \r\n","\r\n            Type of handler for BuildStatus events\r\n            ":"\r\n            用于buildStatus事件的处理程序类型\r\n            \r\n","simple name of the method.":"该方法的简单名称。\r\n","\r\n            Initialize a ProjectRootElement instance by loading from the specified file path.\r\n            Uses the specified project collection.\r\n            May throw InvalidProjectFileException.\r\n            ":"\r\n            通过从指定的文件路径加载来初始化ProjectRootelement实例。\r\n            使用指定的项目集合。\r\n            可能会抛出无效的fileException。\r\n            \r\n","\r\n            The current task builder.\r\n            ":"\r\n            当前的任务构建器。\r\n            \r\n","\r\n            Location of the BeforeTargets attribute\r\n            ":"\r\n            beforetargets属性的位置\r\n            \r\n","\r\n            Adds a logger to the collection of loggers used for builds of projects in this collection.\r\n            If the logger object is already in the collection, does nothing.\r\n            ":"\r\n            将记录仪添加到该集合中用于构建项目的记录仪的集合中。\r\n            如果Logger对象已经在集合中，则什么都不做。\r\n            \r\n","\r\n            State for this frame.\r\n            ":"\r\n            该框架的状态。\r\n            \r\n","\r\n            This method doesn't need locking/synchronization because it's only called\r\n            from a task that is chained linearly\r\n            ":"\r\n            此方法不需要锁定/同步，因为它仅被称为\r\n            从线性链式的任务中\r\n            \r\n","\r\n            This task parameter is an output parameter (analogous to [Output] attribute)\r\n            ":"\r\n            此任务参数是输出参数（类似于[输出]属性）\r\n            \r\n","\r\n            Marks the entry as active and returns all of the results needed to continue.\r\n            Results are returned as { nodeRequestId -> BuildResult }\r\n            ":"\r\n            将条目标记为活动，并返回继续继续进行的所有结果。\r\n            结果被返回为{noderequestid-> buildResult}\r\n            \r\n","A frameworkName class which represents a TargetFrameworkMoniker. This cannot be null.":"一个代表目标框架的框架名称类。这不能无效。\r\n","\r\n            Returns true if the configuration has been resolved, false otherwise.\r\n            ":"\r\n            如果已解决配置，则返回true，否则为false。\r\n            \r\n","\r\n            Returns the node to which this request is assigned.\r\n            ":"\r\n            返回分配此请求的节点。\r\n            \r\n","\r\n            The Status logging event\r\n            ":"\r\n            状态记录事件\r\n            \r\n","\r\n            Gets the global request id\r\n            ":"\r\n            获取全局请求ID\r\n            \r\n","Return the version string if the platform is versioned, otherwise return empty string":"返回版本字符串，如果平台版版本，否则返回空字符串\r\n","\r\n            Returns the name of the CLR2 Task Host executable\r\n            ":"\r\n            返回CLR2任务主机的名称可执行\r\n            \r\n","\r\n            Requests that a new node be created on the specified machine.\r\n            ":"\r\n            请求在指定的计算机上创建一个新节点。\r\n            \r\n","\r\n            Construct and instance of objectType based on the constructor or method arguments provided.\r\n            Arguments must never be null.\r\n            ":"\r\n            基于提供的构造函数或方法参数的构造和实例。\r\n            争论绝不能无效。\r\n            \r\n","\r\n            Wraps an unevaluated property under an propertygroup in a target.\r\n            Immutable.\r\n            ":"\r\n            将目标集中的未评估财产包裹在目标中。\r\n            不变。\r\n            \r\n","\r\n                Events logged with this logger will get pushed into MSBuild's logging infrastructure.\r\n            ":"\r\n                使用此记录器记录的事件将被推入MSBuild的日志记录基础架构。\r\n            \r\n","\r\n            Shuts down all factories registered to this component factory collection. \r\n            ":"\r\n            关闭注册到此组件工厂收藏的所有工厂。\r\n            \r\n","\r\n            Gets the results uses to continue the current build request.\r\n            ":"\r\n            获取结果用来继续当前的构建请求。\r\n            \r\n","False if the items are equivalent, true otherwise.":"错误，如果项目等效，则为true。\r\n","HostServices":"主机服务\r\n","The other configuration to which we will compare ourselves.":"我们将与自己进行比较的其他配置。\r\n","\r\n            Property element collection \r\n            ":"\r\n            属性元素集合\r\n            \r\n","\r\n            The name of the project file\r\n            ":"\r\n            项目文件的名称\r\n            \r\n","\r\n            The bit mask to apply to an array index to get the index within a page of ":"\r\n            适用于数组索引的位掩码以获取索引\r\n","\r\n            This class is responsible for serializing and deserializing anything that is not \r\n            officially supported by INodePacketTranslator, but that we still want to do \r\n            custom translation of.  \r\n            ":"\r\n            该课程负责序列化和应对任何不是\r\n            由Inodepackettranslator正式支持，但我们仍然想做\r\n            自定义翻译。\r\n            \r\n","\r\n            Use this for Directory.Exists(path)\r\n            ":"\r\n            将其用于目录。Exists（path）\r\n            \r\n","\r\n            Indicates an invalid task identifier.\r\n            ":"\r\n            表示无效的任务标识符。\r\n            \r\n","\r\n            Gets or sets the default targets\r\n            Only set during evaluation, so does not check for immutability.\r\n            ":"\r\n            获取或设置默认目标\r\n            仅在评估期间设置，因此不检查不变性。\r\n            \r\n","\r\n            Provided a metadatum that is already part of this project, does a best-effort expansion\r\n            of the unevaluated value provided and returns the resulting value.\r\n            This is a interim expansion only: it may not be the value that a full project reevaluation would produce.\r\n            The metadata table passed in is that of the parent item or item definition.\r\n            ":"\r\n            提供已经是该项目一部分的元数据，可以进行最佳及时扩展\r\n            提供的未评估值并返回结果值。\r\n            这仅仅是临时扩展：这可能不是完整项目重新评估产生的价值。\r\n            传递的元数据表是父项目或项目定义。\r\n            \r\n","\r\n            Gets a configuration id from the plan which matches the specified path.\r\n            ":"\r\n            从计划中获取与指定路径匹配的配置ID。\r\n            \r\n","The translator":"翻译者\r\n","\r\n            The name of the culture to use during the build.\r\n            ":"\r\n            在构建过程中使用的文化名称。\r\n            \r\n","\r\n            Indicates if we should dump string interning stats.\r\n            ":"\r\n            指示我们是否应该倾倒字符串研究统计数据。\r\n            \r\n","\r\n            Cancel() may be called at any time after the task has been instantiated, even before ":"\r\n            cancel（）可以在实例化后的任何时间，甚至在\r\n"," based project.\r\n            ":" 基于项目。\r\n            \r\n","Offset in string where parsing failed.":"在解析失败的字符串中抵消。\r\n","\r\n            Whether a key is present\r\n            ":"\r\n            是否存在钥匙\r\n            \r\n","\r\n            Build a list of targets with specified loggers.\r\n            Returns true on success, false on failure.\r\n            Targets may be null.\r\n            Loggers may be null.\r\n            Only valid if mutable.\r\n            ":"\r\n            用指定的记录仪构建目标列表。\r\n            成功返回，成功，失败。\r\n            目标可能为无效。\r\n            伐木者可能是无效的。\r\n            仅有效，如果可变。\r\n            \r\n"," running in the background which handles requests from remote nodes.\r\n            ":" 在后台运行，从远程节点处理请求。\r\n            \r\n","\r\n            This property uses the ":"\r\n            此属性使用\r\n","\r\n            The results type.\r\n            ":"\r\n            结果类型。\r\n            \r\n","\r\n            Compares for left > right\r\n            ":"\r\n            比较左>右\r\n            \r\n","\r\n            Parses the target's \"Inputs\" and \"Outputs\" attributes and gathers up referenced items.\r\n            ":"\r\n            解析目标的“输入”和“输出”属性，并收集引用的项目。\r\n            \r\n","\r\n            The remainder of the body once the function and arguments have been extracted.\r\n            ":"\r\n            一旦提取功能和参数，身体的其余部分。\r\n            \r\n","\r\n            Initialize to run a specific batch of the current task.\r\n            ":"\r\n            初始化以运行特定的当前任务。\r\n            \r\n","\r\n            Sends a data packet to a specific node\r\n            ":"\r\n            将数据包发送到特定节点\r\n            \r\n","\r\n            Used to support overriding the toolExe name.\r\n            ":"\r\n            用于支持覆盖Toolexe名称。\r\n            \r\n","\r\n            Get an entry if present\r\n            ":"\r\n            如果有的话，请获取条目\r\n            \r\n","\r\n            Unregister the project's host objects, if any and remove any node affinities associated with it.\r\n            ":"\r\n            取消注册项目的主机对象（如果有），并删除与之相关的任何节点亲和力。\r\n            \r\n","\r\n            Gets the next project id.\r\n            ":"\r\n            获取下一个项目ID。\r\n            \r\n","\r\n            The list of unresolved configurations\r\n            ":"\r\n            未解决的配置列表\r\n            \r\n","\r\n            Returns true if the supplied string contains a valid property name.\r\n            ":"\r\n            如果提供的字符串包含有效的属性名称，则返回true。\r\n            \r\n","\r\n            Initializes for running a particular batch\r\n            ":"\r\n            运行特定批次的初始化\r\n            \r\n","\r\n            The request configuration.\r\n            ":"\r\n            请求配置。\r\n            \r\n"," to use when building the targets.":" 在构建目标时使用。\r\n","\r\n            Get the underlying \"link\" proxy for a given MSBuild object model object (null if it is not linked).\r\n            can be used by ExternalProjectsProvider to prevent double linking when implementing remote calls.\r\n            ":"\r\n            获取给定MSBUILD对象对象的基础“链接”代理（如果未链接，则null）。\r\n            外部ProjectsProvider可以使用以防止在实现远程调用时进行双重链接。\r\n            \r\n","\r\n            Given an SDK Identifier and SDK version, return the latest installed platform.\r\n            ":"\r\n            给定SDK标识符和SDK版本，请返回最新的安装平台。\r\n            \r\n","\r\n            Logs a warning\r\n            ":"\r\n            记录警告\r\n            \r\n","\r\n            Prepares the data block for a new evaluation pass\r\n            ":"\r\n            为新评估通行证准备数据块\r\n            \r\n"," (localized). This field cannot be set to the\r\n            empty string.\r\n            ":" （本地化）。该字段不能设置为\r\n            空字符串。\r\n            \r\n","\r\n            Compare two PerformanceCounters.\r\n            ":"\r\n            比较两个表演。\r\n            \r\n","\r\n            Initializes the node provider.\r\n            ":"\r\n            初始化节点提供商。\r\n            \r\n",".\r\n            This is a read-only collection. To modify the metadata, use ":"。\r\n            这是一个只读的集合。要修改元数据，请使用\r\n","\r\n            Removes the specified child.\r\n            Throws if the child is not currently parented by this object.\r\n            This is O(1).\r\n            May be safely called during enumeration of the children.\r\n            ":"\r\n            删除指定的孩子。\r\n            如果孩子当前没有由此对象育儿，则投掷。\r\n            这是O（1）。\r\n            可以在儿童列举期间安全地称呼。\r\n            \r\n","The parameter value, or null if it does not exist.":"参数值，如果不存在null。\r\n","\r\n            The only supported parameter is the output log file path (e.g. \"msbuild.binlog\") \r\n            ":"\r\n            唯一支持的参数是输出日志文件路径（例如“ msbuild.binlog”）\r\n            \r\n","\r\n            Store the path for the 32-bit MSBuild so that we don't have to keep re-calculating it.\r\n            ":"\r\n            存储32位MSBUILD的路径，以便我们不必继续重新计算它。\r\n            \r\n"," includes the error code, a system-provided message describing it,\r\n            and the provided application-specific message prefix (e.g. \"Unable to open log file\").\r\n            ":" 包括错误代码，一个系统提供的消息，描述了它，\r\n            和提供的特定应用程序的消息前缀（例如“无法打开日志文件”）。\r\n            \r\n","\r\n            The packet factory used to create packets when data is\r\n            received on this node.\r\n            ":"\r\n            数据包工厂用于在数据为时创建数据包\r\n            在此节点上收到。\r\n            \r\n","\r\n            Used for the purposes of evaluating an item specification. Given a filespec that may include wildcard characters * and\r\n            ?, we translate it into an actual list of files. If the input filespec doesn't contain any wildcard characters, and it\r\n            doesn't appear to point to an actual file on disk, then we just give back the input string as an array of length one,\r\n            assuming that it wasn't really intended to be a filename (as items are not required to necessarily represent files).\r\n            Any wildcards passed in that are unescaped will be treated as real wildcards.\r\n            The \"include\" of items passed back from the filesystem will be returned canonically escaped.\r\n            The ordering of the list returned is deterministic (it is sorted).\r\n            Will never throw IO exceptions: if there is no match, returns the input verbatim.\r\n            ":"\r\n            用于评估项目规范的目的。给定一个可能包括通配符字符 *和\r\n            ？，我们将其转换为实际文件列表。如果输入FileSpec不包含任何通配符，则\r\n            似乎没有指向磁盘上的实际文件，然后我们将输入字符串作为长度为一数的数组，\r\n            假设它并不是真正打算是文件名（因为不需要项目代表文件）。\r\n            未经扫描的任何通配符都将被视为真正的通配符。\r\n            从文件系统传递的项目的“包括”将被返回规范。\r\n            返回的列表的排序是确定性的（已排序）。\r\n            永远不会抛出IO例外：如果没有匹配，请逐字返回输入。\r\n            \r\n","\r\n            When this flag is present, the top level target(s) in the build request will be skipped if those targets\r\n            are not defined in the Project to build. This only applies to this build request (if another target calls\r\n            the \"missing target\" at any other point this will still result in an error).\r\n            ":"\r\n            当存在此标志时，如果这些目标，将跳过构建请求中的顶级目标\r\n            在项目中未定义要构建。这仅适用于此构建请求（如果其他目标调用\r\n            在任何其他方面，“缺失目标”这仍然会导致错误）。\r\n            \r\n","\r\n            This instance has suspended full tracking.\r\n            ":"\r\n            此实例已暂停完整跟踪。\r\n            \r\n","\r\n            Wait for the logginQueue to empty and then terminate the logging thread\r\n            ":"等待logginqueue清空然后终止记录线程\r\n            \r\n","The type of item definitions to be produced.":"要生成的项目定义的类型。\r\n","\r\n            Parse a UsingTaskParameterGroupElement from the element\r\n            ":"\r\n            解析元素的使用taskParameterGroupelement\r\n            \r\n","\r\n            See ISupportInitialize Members.\r\n            ":"\r\n            请参阅Isupportinialialize成员。\r\n            \r\n","\r\n            Retrieves all of the ready requests.\r\n            ":"\r\n            检索所有现成的请求。\r\n            \r\n","\r\n            Given a configuration name and a platform name, compute the full name \r\n            of this configuration\r\n            ":"\r\n            给定配置名称和平台名称，计算全名\r\n            此配置\r\n            \r\n","\r\n            Intrinsic function that returns the items from itemsOfType with their metadata cleared, i.e. only the itemspec is retained\r\n            ":"\r\n            固有功能可以从项目中返回项目的项目，并清除其元数据，即仅保留itemspec\r\n            \r\n","Any exception comming from a logger during shutdown that is not a LoggerException is wrapped in an InternalLoggerException and thrown":"在关闭期间从记录仪开始的任何例外都不是记录症状，并将其包裹在internalloggerexception中并抛出\r\n","\r\n            Get the value of a metadata on this item, or \r\n            String.Empty if it does not exist or has no value.\r\n            Includes any metadata inherited from item definitions and any built-in metadata.\r\n            To determine whether a piece of metadata is actually present\r\n            but with an empty value, use ":"\r\n            在此项目上获取元数据的价值，或\r\n            string.empty如果不存在或没有价值。\r\n            包括从项目定义和任何内置元数据继承的任何元数据。\r\n            确定是否真的存在一块元数据\r\n            但是有一个空价值，请使用\r\n","The logging context.":"记录上下文。\r\n","\r\n            Extracts the name, arguments, binding flags, and invocation type for a static or instance function.\r\n            Also extracts the remainder of the expression that is not part of this function.\r\n            ":"为静态或实例函数提取名称，参数，绑定标志和调用类型。\r\n            还提取不属于此函数一部分的表达式的其余部分。\r\n            \r\n","\r\n            The CategorySchema provides a strongly typed identity handle to the underlying schema data model.\r\n            ":"\r\n            类别策略为基础模式数据模型提供了强烈键入的身份手柄。\r\n            \r\n","\r\n            Resumes execution of the request on the specified node.\r\n            ":"\r\n            恢复指定节点上的请求执行。\r\n            \r\n","\r\n            The results of the build per graph node.  Valid only after WaitHandle has become signalled.\r\n            ":"\r\n            每个图节点的构建结果。只有在Waithandle发出信号后才有效。\r\n            \r\n","\r\n            Arguments to pass to the transform function as parsed out of the project file.\r\n            ":"参数将转换函数传递到项目文件中。\r\n            \r\n","\r\n            Determine if the filespec is legal according to the following conditions:\r\n            \r\n            (1) It is not legal for there to be a \"..\" after a wildcard.\r\n            \r\n            (2) By definition, \"**\" must appear alone between directory slashes.If there is any remaining \"**\" then this is not\r\n                a valid filespec.\r\n            ":"\r\n            根据以下条件确定FILESPEC是否合法：\r\n            \r\n            （1）在通配符之后，有一个“ ..”是不合法的。\r\n            \r\n            （2）从定义上，“ **”必须单独出现在目录斜线之间。如果还有剩下的“ **”，那不是\r\n                有效的文件。\r\n            \r\n","\r\n            Instantiates the task.\r\n            ":"\r\n            实例化任务。\r\n            \r\n","The initial items of the project":"项目的初始项目\r\n","\r\n            Construct over a text reader over project xml, evaluating with the global project collection's\r\n            global properties and default tools version.\r\n            Project will be added to the global project collection when it is named.\r\n            Throws InvalidProjectFileException if the evaluation fails.\r\n            Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.\r\n            ":"\r\n            通过项目XML构建文本读取器，并通过全球项目集合的评估\r\n            全局属性和默认工具版本。\r\n            命名时，项目将被添加到全球项目集合中。\r\n            如果评估失败，则投掷无效的fileException。\r\n            如果项目集合中已经加载了等效的项目，则投掷无效的exception。\r\n            \r\n","\r\n            Whether static graph isolation constraints should be skipped for this request\r\n            ":"\r\n            是否应跳过此请求的静态图隔离约束\r\n            \r\n","\r\n            Writes to the log, using the specified indentation. Does not\r\n            terminate with a newline.\r\n            ":"\r\n            使用指定的凹痕写入日志。才不是\r\n            用新线终止。\r\n            \r\n","\r\n            A pointer to a security descriptor for the object that controls the sharing of it.\r\n            If NULL is specified for this member, the object is assigned the default security descriptor of the calling process. \r\n            This is not the same as granting access to everyone by assigning a NULL discretionary access control list (DACL). \r\n            The default security descriptor is based on the default DACL of the access token belonging to the calling process.\r\n            By default, the default DACL in the access token of a process allows access only to the user represented by the access token. \r\n            If other users must access the object, you can either create a security descriptor with the appropriate access, \r\n            or add ACEs to the DACL that grants access to a group of users. \r\n            ":"\r\n            指向控制其共享的对象的安全描述符的指针。\r\n            如果为该成员指定了NULL，则将对象分配为调用过程的默认安全描述符。\r\n            这与通过分配无酌处权访问控制列表（DACL）来授予所有人的访问权限不同。\r\n            默认安全性描述符基于属于调用过程的访问令牌的默认DACL。\r\n            默认情况下，流程访问令牌中的默认DACL仅允许访问访问令牌表示的用户。\r\n            如果其他用户必须访问对象，则可以使用适当的访问创建安全描述符，\r\n            或将ACE添加到DACL中，以授予一组用户的访问权限。\r\n            \r\n","\r\n            Returns the node id to which this request should be assigned based on its configuration.\r\n            ":"\r\n            返回应根据其配置分配此请求的节点ID。\r\n            \r\n","\r\n            The element referenced the item by an Include.\r\n            ":"\r\n            元素通过include引用项目。\r\n            \r\n","\r\n            Parse a ProjectOtherwiseElement\r\n            ":"\r\n            解析项目疗法\r\n            \r\n"," to resolve an SDK.\r\n            ":" 解决SDK。\r\n            \r\n","\r\n            Accessor for _isResourceAcquire.\r\n            ":"\r\n            _isresourceacquire的登录器。\r\n            \r\n","\r\n            This class wraps information about properties which have been used before they are initialized. \r\n            ":"\r\n            此类包装有关在初始化之前已使用的属性的信息。\r\n            \r\n","\r\n            Reload the existing project root element from its file.\r\n            An ":"\r\n            从其文件中重新加载现有的项目根元素。\r\n            一个\r\n","Collection was of a fixed size.":"收集尺寸为固定。\r\n","\r\n            Set of parameters that can be used by the task factory specifically.\r\n            ":"\r\n            任务工厂可以使用的一组参数。\r\n            \r\n","\r\n            A task factory wrapper which caches and combines information related to the parameters of the task.\r\n            ":"\r\n            一个任务工厂包装器，该包装器可以缓存和组合与任务参数相关的信息。\r\n            \r\n","\r\n            Unassigns the node associated with a particular configuration.\r\n            ":"\r\n            非分配与特定配置关联的节点。\r\n            \r\n","\r\n            Register an instantiated logger which implements the ILogger interface. This logger will be registered to a specific event\r\n            source (the central logger event source) which will receive all logging messages for a given build.\r\n            This should not be used on a node, Loggers are not to be registered on a child node.\r\n            ":"\r\n            注册一个实例化的记录器，该记录仪可实现Ilogger接口。该记录器将注册到特定事件\r\n            源（中央记录器事件源）将接收给定构建的所有记录消息。\r\n            这不应在节点上使用，也不应在子节点上注册。\r\n            \r\n","\r\n            Handles a resource request coming from a node.\r\n            ":"\r\n            处理来自节点的资源请求。\r\n            \r\n","The event context for where the error occurred":"错误发生的事件上下文\r\n","\r\n            Property Cache\r\n            ":"\r\n            属性缓存\r\n            \r\n","\r\n            The project's full path\r\n            ":"\r\n            项目的完整道路\r\n            \r\n","\r\n            Reads or writes the packet to the serializer.\r\n            Built-in metadata is not transmitted, but other metadata is.\r\n            Does not lose escaped nature.\r\n            ":"\r\n            将数据包读取或写入序列化器。\r\n            内置元数据没有传输，但其他元数据是。\r\n            不会失去逃脱的自然。\r\n            \r\n","\r\n            Convenient static helper method on RegistryKeyWrapper, for when someone is only intersted in knowing \r\n            whether a particular registry key exists or not.\r\n            ":"\r\n            在RegistryKeywrapper上方便的静态辅助方法，因为当某人仅在知道时\r\n            是否存在特定的注册表密钥。\r\n            \r\n","\r\n            Location of the TreatAsLocalProperty attribute, if any\r\n            ":"\r\n            treataslocalproperty属性的位置，如果有的话\r\n            \r\n","\r\n            This constructor allows all event data to be initialized.\r\n            ":"\r\n            该构造函数允许初始化所有事件数据。\r\n            \r\n","\r\n            Explicitly enabled\r\n            ":"\r\n            明确启用\r\n            \r\n","\r\n            Evaluates an itemdefinition element, updating the definitions library.\r\n            ":"\r\n            评估ItemDefinition元素，更新定义库。\r\n            \r\n","The importance of the message.":"消息的重要性。\r\n","\r\n            Internally, the BuildRequestEngine manages the requests in the form of BuildRequestEntry objects.\r\n            Each of these maintains the complete state of a build request, accumulating results until completion.\r\n            The EngineLoop method is the separate thread proc which handles state changes for BuildRequestEntries\r\n            and shutting down.  However, each RequestBuilder can call back into the BuildRequestEngine (via events)\r\n            to cause new requests to be submitted.  See ":"\r\n            在内部，BuildRequestengine以BuildRequestry对象的形式管理请求。\r\n            这些中的每一个都保持构建请求的完整状态，累积结果直到完成为止。\r\n            ENGINELOOP方法是单独的线程Proc，它处理buildrequestentries的状态更改\r\n            并关闭。但是，每个RequestBuilder都可以回到BuildRequestengine（通过事件）\r\n            导致提交新请求。看\r\n","\r\n            What is the mode of the logger, should there be a thread\r\n            processing the buildEvents and raising them on the filters and sinks\r\n            or should they be done synchronously\r\n            ":"\r\n            应该有线程的记录器的模式是什么\r\n            处理构建器并在过滤器上抬起它们\r\n            还是应该同步完成\r\n            \r\n","\r\n            Path to the root Visual Studio install directory\r\n            (e.g. 'C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise')\r\n            ":"\r\n            root Visual Studio安装目录的路径\r\n            （例如'C：\\ Program Files（X86）\\ Microsoft Visual Studio \\ Preview \\ Enterprise'）\r\n            \r\n","The value, or null if there is none by that name.":"值，如果没有该名称，则值。\r\n","The actual type of the parameter":"参数的实际类型\r\n","\r\n            Dump the initial items provided.\r\n            Overridden in ParallelConsoleLogger.\r\n            ":"\r\n            倾倒提供的初始项目。\r\n            在并行核洛格中覆盖。\r\n            \r\n","Available events.":"可用事件。\r\n","\r\n            Initializes the results with specified items and result.\r\n            ":"\r\n            用指定项目和结果初始化结果。\r\n            \r\n","\r\n            Add/remove/modify/set directly on an outer scope would need to be handled separately - it would apply\r\n            directly to the main tables. Our code isn't expected to do this.\r\n            ":"\r\n            直接在外部范围上添加/删除/修改/设置将需要单独处理 - 它将适用\r\n            直接到主表。我们的代码不会做到这一点。\r\n            \r\n","\r\n            Parses the document into the provided ProjectRootElement.\r\n            Throws InvalidProjectFileExceptions for syntax errors.\r\n            ":"\r\n            将文档解析到提供的ProjectRootlement中。\r\n            引发语法错误的无效fileExceptions。\r\n            \r\n","\r\n            Extract the disk roots from the environment\r\n            ":"\r\n            从环境中提取磁盘根\r\n            \r\n","The subkey":"子钥匙\r\n","The configuration which needs resolving.":"需要解决的配置。\r\n","The build event context to use to log during this registration.":"在此注册过程中用于登录的构建事件上下文。\r\n","\r\n            Protection for the parameters cache\r\n            ":"\r\n            保护参数缓存\r\n            \r\n","\r\n            Look up the \"real\" item by using its clone, and return the real item.\r\n            See ":"\r\n            通过使用克隆来查找“真实”项目，然后返回真实项目。\r\n            看\r\n","\r\n             Given an index at a directory separator,\r\n             iteratively skip to the end of two sequences:\r\n            \r\n              (1) \\.\\ -> \\\r\n                 This is an identity, so for example, these two are equivalent,\r\n            \r\n                     dir1\\.\\dir2 == dir1\\dir2\r\n             \r\n                 (2) \\\\ -> \\\r\n                     Double directory separators are treated as a single directory separator,\r\n                     so, for example, this is an identity:\r\n            \r\n                         f:\\dir1\\\\dir2 == f:\\dir1\\dir2\r\n            \r\n                     The single exemption is for UNC path names, like this:\r\n            \r\n                         \\\\server\\share != \\server\\share\r\n             \r\n                     This case is handled by isUncPath in\r\n                     a prior step.\r\n            \r\n             ":"在目录分离器处给定索引，\r\n             迭代跳到两个序列的末尾：\r\n            \r\n              （1）\\。\\  - > \\\r\n                 这是一个身份，例如，这两个是等效的，\r\n            \r\n                     dir1 \\。\\ dir2 == dir1 \\ dir2\r\n             \r\n                 （2）\\\\  - > \\\r\n                     双目录分离器被视为单个目录分离器，\r\n                     因此，例如，这是一个身份：\r\n            \r\n                         f：\\ dir1 \\\\ dir2 == f：\\ dir1 \\ dir2\r\n            \r\n                     单一豁免是针对UNC路径名称，这样的豁免：\r\n            \r\n                         \\\\ server \\ share！= \\ server \\ share\r\n             \r\n                     此案由Isuncpath处理\r\n                     前一步。\r\n            \r\n             \r\n","\r\n            The number of times to retry creating an out-of-proc node.\r\n            ":"\r\n            重试的次数创建一个传播节点。\r\n            \r\n","\r\n            Private helper class for use only by ":"\r\n            私人帮手课程仅用于使用\r\n","\r\n            A helper struct wrapping a ":"\r\n            辅助结构包装\r\n","\r\n            Default constructor -- we need it so this type is COM-createable.\r\n            ":"\r\n            默认构造函数 - 我们需要它，因此此类型是可以创建的。\r\n            \r\n","\r\n            Deletes all results from the cache for the specified build.\r\n            ":"\r\n            从高速缓存中删除指定构建的所有结果。\r\n            \r\n","\r\n            Retrieve the environment block.\r\n            Copied from the BCL implementation to eliminate some expensive security asserts.\r\n            ":"\r\n            检索环境块。\r\n            从BCL实施中复制以消除一些昂贵的安全性断言。\r\n            \r\n","\r\n            Logic containing what to do when a property is read.\r\n            ":"\r\n            逻辑包含读取属性时该做什么。\r\n            \r\n","Relevant information about where in the run of the progam it is.":"有关在Progam的何处的相关信息。\r\n","\r\n            Since we log that we weren't able to connect to the task host in a couple of different places,\r\n            extract it out into a separate method. \r\n            ":"\r\n            由于我们记录了我们无法在几个不同的地方连接到任务主机的\r\n            将其提取成单独的方法。\r\n            \r\n","\r\n            Constructor called by derived classes, except from ProjectRootElement.\r\n            Parameters may not be null, except parent.\r\n            ":"\r\n            除ProjectRootelement以外，由派生类调用的构造函数。\r\n            除非父，否则参数可能不会为null。\r\n            \r\n","\r\n            The expression that this function is part of.\r\n            ":"\r\n            此函数是一部分的表达。\r\n            \r\n","\r\n            Returns true if this node evaluates to an empty string,\r\n            otherwise false.\r\n            (It may be cheaper to determine whether an expression will evaluate\r\n            to empty than to fully evaluate it.)\r\n            Implementations should cache the result so that calls after the first are free.\r\n            ":"\r\n            如果此节点评估为空字符串，则返回true，\r\n            否则错误。\r\n            （确定表达式是否会评估可能更便宜\r\n            空的比完全评估它。）\r\n            实现应缓存结果，以便第一个免费的呼叫。\r\n            \r\n","\r\n            If true, then the metadata will be expressed as an attribute instead of a child element, for example\r\n            <Reference Include=\"Libary.dll\" HintPath=\"..\\lib\\Library.dll\" Private=\"True\" />\r\n            ":"\r\n            如果为true，则元数据将以属性而不是子元素表示，例如\r\n            <参考include =“ libary.dll” hintpath =“ .. \\ lib \\ library.dll” private =“ true” />\r\n            \r\n","\r\n            Gets the XML representing this project as a string.\r\n            Does not remove any dirty flag.\r\n            ":"\r\n            获取将该项目表示为字符串的XML。\r\n            不会删除任何肮脏的标志。\r\n            \r\n","\r\n            Gets the node request id\r\n            ":"\r\n            获取节点请求ID\r\n            \r\n","\r\n            If true, we will force all tasks to run in the MSBuild task host EXCEPT\r\n            a small well-known set of tasks that are known to depend on IBuildEngine\r\n            callbacks; as forcing those out of proc would be just setting them up for \r\n            known failure.  \r\n            ":"\r\n            如果为true，我们将强制所有任务在MSBUILD任务主机中运行\r\n            一组众所周知的任务，这些任务依赖于Ibuildengine\r\n            回调;因为迫使这些人只是为他们准备\r\n            已知的失败。\r\n            \r\n","\r\n            The global request id on which we are blocking\r\n            ":"\r\n            我们阻止的全局请求ID\r\n            \r\n","\r\n            Name of the metadatum\r\n            ":"\r\n            元数据的名称\r\n            \r\n","\r\n            The path from where the tool is being run.\r\n            ":"\r\n            该工具正在运行的路径。\r\n            \r\n","\r\n            The new value of the metadata.  Only valid when ":"\r\n            元数据的新价值。仅在\r\n","\r\n            Helper class with attribute names\r\n            ":"\r\n            带有属性名称的助手类\r\n            \r\n","right number":"正确的数字\r\n","The culture info for formatting the message.":"格式化消息的文化信息。\r\n","\r\n            The list of items in the collection. Defines the enumeration order.\r\n            ":"\r\n            集合中的项目列表。定义枚举顺序。\r\n            \r\n","True if target stack processing should terminate when the last target in the list is processed.":"正确，如果目标堆栈处理应终止列表中的最后一个目标。\r\n","\r\n            Retrieves the logging service associated with a particular build\r\n            ":"\r\n            检索与特定构建相关的记录服务\r\n            \r\n","\r\n            Returns the submission id.\r\n            ":"\r\n            返回提交ID。\r\n            \r\n","\r\n            Translates an object implementing ":"\r\n            翻译实现对象\r\n","\r\n             Manager for supporting debugging a state machine.   \r\n             This is for internal use by MSBuild, only.\r\n             ":"\r\n             支持调试状态机的经理。\r\n             这仅用于MSBUILD的内部使用。\r\n             \r\n","\r\n            The build-global properties\r\n            ":"\r\n            构建全球属性\r\n            \r\n","If \"true\", we add this property to the initialProperties dictionary, as well, so that properties later in the toolset can use this value.":"如果“ true”，我们也将此属性添加到initialproperties字典中，以便稍后在工具集中的属性可以使用此值。\r\n","\r\n            Returns an enumerable of file system entries matching the specified search criteria. Inaccessible or non-existent file\r\n            system entries are skipped.\r\n            ":"\r\n            返回与指定搜索条件匹配的文件系统条目的枚举。无法访问或不存在的文件\r\n            系统条目被跳过。\r\n            \r\n","\r\n            Targets in the project, used to build.\r\n            ":"\r\n            项目中的目标，用于构建。\r\n            \r\n","\r\n            Causes all connected nodes to be shut down.\r\n            ":"\r\n            导致所有连接的节点被关闭。\r\n            \r\n","\r\n            Constructor called by the Evaluator.\r\n            Assumes ProjectItemGroupTaskItemInstance is an immutable type.\r\n            ":"\r\n            评估器调用的构造函数。\r\n            假设ProjectItemGrouptaskIteminstance是一种不变的类型。\r\n            \r\n","\r\n            Whether the tools version used originated from an explicit specification,\r\n            for example from an MSBuild task or /tv switch.\r\n            ":"\r\n            使用的工具版本是否源自显式规范，\r\n            例如，从MSBUILD任务或 /TV Switch中。\r\n            \r\n"," field to derived types.\r\n            Used for serialization. Avoids the side effects of calling the\r\n            ":" 字段到派生类型。\r\n            用于序列化。避免打电话给\r\n            \r\n","targetOutputs":"目标图\r\n","\r\n            Start index for the string\r\n            ":"\r\n            启动字符串索引\r\n            \r\n","The directory to start the search in.":"开始搜索的目录.\r\n","\r\n            Given an SDKName, targetPlatformIdentifier and TargetPlatformVersion search the default sdk locations for the passed in sdk name.\r\n            The format of the sdk moniker is  SDKName, Version=X.X\r\n            ":"\r\n            给定SDKNAME，targetPlatformidentifier和TargetPlatFormversion搜索传递的SDK名称的默认SDK位置。\r\n            SDK绰号的格式为SDKNAME，版本= X.x\r\n            \r\n","\r\n            Gets an instance of the specified component type from the host.\r\n            ":"\r\n            从主机获取指定组件类型的实例。\r\n            \r\n","New style extension SDK roots":"新样式扩展SDK根\r\n","\r\n            Bag of properties for the expander to expand the properties and items in the using tasks files\r\n            ":"\r\n            扩展器的属性袋，以扩展使用任务文件中的属性和项目\r\n            \r\n","\r\n            Indicates if project or target frame.\r\n            ":"\r\n            指示项目还是目标框架。\r\n            \r\n","\r\n            Log the completion of a build\r\n            ":"\r\n            记录构建的完成\r\n            \r\n","\r\n            The Error event handler\r\n            ":"\r\n            错误事件处理程序\r\n            \r\n","\r\n            Visual Studio Dev11\r\n            ":"\r\n            Visual Studio Dev11\r\n            \r\n","\r\n            A SchedulingPlan contains timing and relationship information for a build which has already occurred.  This data can then be\r\n            used by subsequent builds to determine how best to distribute work among several nodes.\r\n            ":"\r\n            调度计划包含已经发生的构建的时间和关系信息。然后可以\r\n            随后的构建用来确定如何最好地在几个节点之间分配工作。\r\n            \r\n","Delegate which is responsible for creating the Component.":"负责创建组件的委托。\r\n","\r\n            Get the list of extension sdks for a given platform and version\r\n            ":"\r\n            获取给定平台和版本的扩展SDK列表\r\n            \r\n","\r\n            Sends data to the specified node.\r\n            ":"\r\n            将数据发送到指定的节点。\r\n            \r\n","A list of matching items":"匹配项目列表\r\n",", performs the IL operation\r\n             defined by ":"，执行IL操作\r\n             被定义为\r\n","\r\n            Represents information about assembly folders.\r\n            ":"\r\n            表示有关程序集文件夹的信息。\r\n            \r\n","\r\n            A build request contains information about the configuration used to build as well\r\n            as which targets need to be built.\r\n            ":"\r\n            构建请求包含有关用于构建的配置的信息\r\n            当需要构建哪些目标。\r\n            \r\n","\r\n            Creates a using task.\r\n            Caller must add it to the location of choice in the project.\r\n            Exactly one of assembly file and assembly name must be provided.\r\n            Also allows providing optional runtime and architecture specifiers.  Null is OK. \r\n            ":"\r\n            创建一个使用任务。\r\n            呼叫者必须将其添加到项目中选择的位置。\r\n            必须提供汇编文件和汇编名称之一。\r\n            还允许提供可选的运行时和体系结构规范。零是可以的。\r\n            \r\n","\r\n            Initialize an in-memory, empty ProjectRootElement instance that can be saved later using the specified ":"\r\n            初始化一个内存中空的项目Rootelement实例，以后可以使用指定的\r\n","\r\n            Arguments for the project imported event.\r\n            ":"\r\n            项目导入事件的论点。\r\n            \r\n","\r\n            Total number of chars eliminated across all strings.\r\n            ":"所有字符串中消除的炭的总数。\r\n            \r\n","\r\n            Version 4.0\r\n            ":"\r\n            版本4.0\r\n            \r\n","\r\n            Handler for Message events.\r\n            ":"\r\n            消息事件的处理程序。\r\n            \r\n","\r\n            Load settings, such as whether to ignore missing imports.\r\n            ":"\r\n            加载设置，例如是否忽略丢失的导入。\r\n            \r\n","\r\n            We expect the tasks to override this method, if they support host objects. The implementation should call into the\r\n            host object to perform the real work of the task. For example, for compiler tasks like Csc and Vbc, this method would\r\n            call Compile() on the host object.\r\n            ":"\r\n            如果任务支持主机对象，我们希望这些任务将覆盖此方法。实施应调用\r\n            主机对象执行任务的真实工作。例如，对于CSC和VBC等编译器任务，此方法将\r\n            在主机对象上调用compile（）。\r\n            \r\n","\r\n            Determines the currently building project file.\r\n            ":"确定当前构建项目文件。\r\n            \r\n","\r\n            version 3.5\r\n            ":"\r\n            版本3.5\r\n            \r\n","\r\n            Retrieves the Project Context id.\r\n            ":"\r\n            检索项目上下文ID。\r\n            \r\n","\r\n            Those who manually\r\n            instantiate this class should remember to call ":"\r\n            那些手动的人\r\n            实例化此课程应该记得打电话\r\n","\r\n            Retrieves a hash code for this BuildEventContext.\r\n            ":"\r\n            检索此BuildEventContext的哈希代码。\r\n            \r\n","\r\n            Those characters which indicate that an expression may contain expandable\r\n            expressions\r\n            ":"\r\n            那些表明表达式可能包含可扩展的字符\r\n            表达\r\n            \r\n","\r\n            1) a default tasks file needs the <Project> root tag in order to be well-formed\r\n            2) the XML declaration tag <?xml ...> is ignored\r\n            3) comment tags are always ignored regardless of their placement\r\n            4) the rest of the tags are expected to be <UsingTask> tags\r\n            ":"\r\n            1）默认任务文件需要<project> root标签才能得到很好的形式\r\n            2）XML声明标签<？xml ...>被忽略\r\n            3）无论其位置如何，评论标签总是被忽略\r\n            4）预计其余标签为<useTtask>标签\r\n            \r\n","\r\n            The configuration ID assigned by the build manager.\r\n            ":"\r\n            构建管理器分配的配置ID。\r\n            \r\n","\r\n            Indicates whether we should warn when a property is uninitialized when it is used.\r\n            ":"\r\n            指示我们是否应该警告何时使用属性时使用该物业。\r\n            \r\n","\r\n            Parses the input string as a NameTest (see the XPath spec), returning the prefix and\r\n            local name parts.  Throws an exception if the given string is not a valid NameTest.\r\n            If the NameTest contains a star, null values for localName (case NCName':*'), or for\r\n            both localName and prefix (case '*') are returned.\r\n            ":"将输入字符串解析为nametest（请参阅XPATH规范），返回前缀和\r\n            本地名称零件。如果给定的字符串不是有效的名称，则引发异常。\r\n            如果名称包含恒星，则localname的null值（case ncname'：*'）或\r\n            返回LocalName和前缀（案例'*'）。\r\n            \r\n","Logger to use.":"使用的记录器。\r\n","\r\n            The asynchronous packet queue.\r\n            ":"\r\n            异步数据包队列。\r\n            \r\n","true, if any \"input\" is newer than any \"output\", or if any input or output does not exist.":"是的，如果任何“输入”比任何“输出”更新，或者不存在任何输入或输出。\r\n","\r\n            Tell the factory what kind of logging services is should create\r\n            ":"\r\n            告诉工厂应创建哪种伐木服务\r\n            \r\n","\r\n            Targets in the project. The key to the dictionary is the target's name.\r\n            Overridden targets are not included in this collection.\r\n            This collection is read-only.\r\n            ":"\r\n            项目中的目标。字典的关键是目标名称。\r\n            该集合中不包括覆盖目标。\r\n            该系列仅阅读。\r\n            \r\n","\r\n             The Target Builder is a stack machine which builds project targets.  Each time a target needs to be built, it is\r\n             pushed onto the stack.  The main loop for the Target Builder simply evaluates the top item on the stack to determine\r\n             which action to take.  These actions comprise the target state machine, as represented by the states of the\r\n             TargetEntry object.\r\n            \r\n             When a target completes, all of its outputs are available in the Lookup contained in the TargetEntry.  In fact, everything that it changed\r\n             in the global state is available by virtue of its Lookup being merged with the current Target's lookup.\r\n            \r\n             For CallTarget tasks, this behavior is not the same.  Rather the Lookup from a CallTarget call does not get merged until the calling\r\n             Target has completed.  This is considered erroneous behavior and 'normal' version of CallTarget will be implemented which does not exhibit\r\n             this.\r\n             ":"\r\n             目标构建器是构建项目目标的堆栈机。每次需要建立目标时，\r\n             推到烟囱上。目标构建器的主要循环简单地评估堆栈上的顶部项目以确定\r\n             要采取哪种行动。这些动作包括目标状态机，如\r\n             靶标对象。\r\n            \r\n             当目标完成后，其所有输出都可以在目标体中包含的查找中可用。实际上，它改变的一切\r\n             在全球状态下，可以通过将其查找与当前目标的查找合并。\r\n            \r\n             对于CallTarget任务，此行为不一样。相反，在调用电话之前，来自calltarget调用的查找不会合并\r\n             目标已经完成。这被认为是错误的行为，将实现“正常”版本的calltarget版本\r\n             这个。\r\n             \r\n","\r\n            Allow implement the ":"\r\n            允许实施\r\n","\r\n            RemoteNodeProvider\r\n            ":"\r\n            Remotenodeprovider\r\n            \r\n","\r\n            Cleans up a cache collection.\r\n            ":"\r\n            清理缓存集合。\r\n            \r\n"," (no time-out).":" （没有超时）。\r\n","Whether the project is expected to be buildable":"预计该项目是否可建立\r\n","\r\n            Invalid task host context\r\n            ":"\r\n            无效任务主机上下文\r\n            \r\n",".\r\n                The method throws if a file system is used with ":"。\r\n                如果文件系统与\r\n","The reason we are logging":"我们登录的原因\r\n"," members on value types that explicitly implement the\r\n            member.\r\n            ":" 成员明确实施的价值类型\r\n            成员。\r\n            \r\n","\r\n            Return a string that has AssemblyName special characters escaped.\r\n            Those characters are Equals(=), Comma(,), Quote(\"), Apostrophe('), Backslash(\\).\r\n            ":"\r\n            返回一个带有汇编名称特殊字符的字符串。\r\n            这些字符是等于（=），逗号（，），quote（“），postrophe（'），后斜线（\\）。\r\n            \r\n","\r\n            Location of the afterTargets\r\n            ":"\r\n            后台的位置\r\n            \r\n","\r\n            The starting character of the separator.\r\n            ":"\r\n            分离器的起始特征。\r\n            \r\n","\r\n            Class which wraps up the communications infrastructure for a given node.\r\n            ":"\r\n            总结给定节点的通信基础架构的类。\r\n            \r\n","\r\n            The generated task, or ":"\r\n            生成的任务，或\r\n","Global properties used for the evaluation.":"用于评估的全局属性。\r\n","\r\n            A sample section:\r\n            \r\n            GlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n                Debug|Any CPU = Debug|Any CPU\r\n                Release|Any CPU = Release|Any CPU\r\n            EndGlobalSection\r\n            ":"\r\n            样本部分：\r\n            \r\n            Globalsection（solutionConfigurationPlatforms）=预设\r\n                调试|任何CPU =调试|任何CPU\r\n                释放|任何CPU =发布|任何CPU\r\n            最终漏洞\r\n            \r\n","\r\n            accounts for the native code as well as a human readable portion.\r\n            ":"\r\n            占本地代码以及人类可读部分。\r\n            \r\n","True if the objects contain the same data, false otherwise.":"正确，如果对象包含相同的数据，则否则为false。\r\n","\r\n            Extension of the project file, if any\r\n            ":"\r\n            项目文件的扩展，如果有的话\r\n            \r\n","The result of running the task batch.":"运行任务批次的结果。\r\n","\r\n            Initializes the current ":"\r\n            初始化电流\r\n","\r\n            The NodeEngine caught an exception which requires the Node to shut down.\r\n            ":"\r\n            Nodeengine捕获了一个例外，要求节点关闭。\r\n            \r\n","\r\n            Adds MSBuild tasks to a project target to pre-resolve its project references\r\n            ":"\r\n            将MSBUILD任务添加到项目目标中以预见其项目参考\r\n            \r\n","() methods.\r\n            ":"（） 方法。\r\n            \r\n","\r\n            Returns all instances of static data with Type \"type\".  Null or Empty list if there is no objects from asked type provided by this node\r\n            ":"\r\n            返回使用类型“类型”的所有静态数据实例。 null或空列表，如果没有此节点提供的询问类型的对象\r\n            \r\n","\r\n            Initializes a new instance of the AssemblyFoldersFromConfigInfo class.\r\n            ":"\r\n            初始化AssemblyFoldersFromConfigInfo类的新实例。\r\n            \r\n","If this toolset property is the \"MSBuildToolsPath\" property, we will return the value in this parameter.":"如果此工具集属性是“ msbuildtoolspath”属性，我们将返回此参数中的值。\r\n","Comments":"注释\r\n","\r\n            Retrieves an existing target, if any.\r\n            ":"\r\n            检索现有目标（如果有）。\r\n            \r\n","\r\n            A place callers can put something worth logging later\r\n            ":"\r\n            一个地方呼叫者可以稍后列出一些值得记录的东西\r\n            \r\n","\r\n            Access list of task registrations.\r\n            FOR UNIT TESTING ONLY.\r\n            ":"\r\n            访问任务注册列表。\r\n            仅用于单元测试。\r\n            \r\n","\r\n            Delegate for event raised when a build request is blocked on another request which is in progress.\r\n            ":"\r\n            当构建请求被阻止的另一个正在进行的请求中，裁定的事件委托。\r\n            \r\n","\r\n            Embed specified files in the binary log\r\n            ":"\r\n            二进制日志中的指定文件\r\n            \r\n","\r\n            Expands embedded item metadata, properties, and embedded item lists (in that order) as specified in the provided options.\r\n            This is the standard form. Before using the expanded value, it must be unescaped, and this does that for you.\r\n            \r\n            If ExpanderOptions.BreakOnNotEmpty was passed, expression was going to be non-empty, and it broke out early, returns null. Otherwise the result can be trusted.        \r\n            ":"\r\n            按照提供的选项指定的（按该顺序）展开嵌入式项目元数据，属性和嵌入式项目列表。\r\n            这是标准形式。在使用扩展的值之前，必须不使用它，这为您做到了。\r\n            \r\n            如果通过ExpanderOptions.breakonnotempty通过，表达将是非空的，并且早点爆发，则返回NULL。否则可以信任结果。\r\n            \r\n","\r\n            Spawn the old engine to generate a solution wrapper project, so that our build ordering is somewhat more correct\r\n            when solutions with toolsVersions < 4.0 are passed to us.\r\n            ":"\r\n            产生旧引擎以生成解决方案包装器项目，以便我们的构建订购更正确\r\n            当带有工具范围<4.0的解决方案传递给我们。\r\n            \r\n","List of disk roots to look for manifest driven extension sdks":"磁盘根列表以寻找明显驱动的扩展SDK\r\n","\r\n            Returns the name of the metaproject for an actual project.\r\n            ":"\r\n            返回实际项目的Metaproject的名称。\r\n            \r\n","\r\n            Default constructor needed for \r\n            ":"\r\n            默认构造函数需要\r\n            \r\n","\r\n            Returns the ProjectRootElement for the given path if it has been loaded, or null if it is not currently in memory.\r\n            Uses the global project collection.\r\n            ":"\r\n            如果已加载了给定路径的项目Rootelement，则返回该项目的启用，如果当前不在内存中，则将其返回该项目。\r\n            使用全球项目集合。\r\n            \r\n","\r\n            Raised when a build request is blocked on another one in progress.\r\n            ":"\r\n            当构建请求被阻止在另一个正在进行中的构建请求时提出。\r\n            \r\n","\r\n            Hashtable used for deduplicating strings. When we need to write a string,\r\n            we check in this hashtable first, and if we've seen the string before,\r\n            just write out its index. Otherwise write out a string record, and then\r\n            write the string index. A string record is guaranteed to precede its first\r\n            usage.\r\n            The reader will read the string records first and then be able to retrieve\r\n            a string by its index. This allows us to keep the format streaming instead\r\n            of writing one giant string table at the end. If a binlog is interrupted\r\n            we'll be able to use all the information we've discovered thus far.\r\n            ":"\r\n            用于删除字符串的标签。当我们需要写一个字符串时\r\n            我们首先检查了此hashtable，如果我们以前看过字符串，\r\n            只需写出索引即可。否则写下字符串记录，然后\r\n            写字符串索引。弦记录可以保证在其第一个之前\r\n            用法。\r\n            读者将首先阅读字符串记录，然后能够检索\r\n            通过其索引的字符串。这使我们可以保持格式流式传输\r\n            最后写一个巨型弦乐表。如果BINLOG中断\r\n            我们将能够使用迄今为止发现的所有信息。\r\n            \r\n","\r\n            The byte buffer.\r\n            ":"\r\n            字节缓冲区。\r\n            \r\n","\r\n            If two objects are Equal, they must have the same hash code, for dictionaries to work correctly.\r\n            Two configurations are Equal if their global properties are equivalent, not necessary reference equals.\r\n            So only include filename and tools version in the hashcode.\r\n            ":"\r\n            如果两个对象相等，则必须具有相同的哈希代码，才能使词典正确工作。\r\n            如果它们的全局属性等效，则不需要参考等于两个配置。\r\n            因此，仅在哈希码中包含文件名和工具版本。\r\n            \r\n","\r\n            Return all types of static data for data driven features this node contains\r\n            ":"\r\n            返回数据驱动功能的所有类型的静态数据此节点包含\r\n            \r\n","\r\n            The backing Xml project.\r\n            Can never be null\r\n            ":"\r\n            支持XML项目。\r\n            永远不会无效\r\n            \r\n","\r\n            Helper for ":"\r\n            帮手\r\n","\r\n            Gets the next project evaluation id.\r\n            ":"\r\n            获取下一个项目评估ID。\r\n            \r\n","\r\n            The node id assigned by the node provider.\r\n            ":"\r\n            节点提供商分配的节点ID。\r\n            \r\n","\r\n            Event to provide information about what project just got added to the project collection.\r\n            ":"\r\n            事件提供有关刚刚添加到项目集合的项目的信息。\r\n            \r\n","\r\n            Symbol used in ProjectReferenceTarget items to represent targets specified on the ProjectReference item\r\n            with fallback to default targets if the ProjectReference item has no targets specified.\r\n            ":"\r\n            在ProjectReferenceTarget项目中使用的符号表示项目ReReference上指定的目标\r\n            如果未指定目标项目，则可以将后备到默认目标。\r\n            \r\n","\r\n            Stringify a list of strings, like {\"abc, \"def\", \"foo\"} to \"abc, def and foo\"\r\n            or {\"abc\"} to \"abc\"\r\n            ":"\r\n            将字符串列表串起，例如{“ abc，“ def”，“ foo”}到“ abc，def和foo”\r\n            或{“ ABC”}到“ ABC”\r\n            \r\n","\r\n            Allows tool to handle the return code.\r\n            This method will only be called with non-zero exitCode.\r\n            ":"\r\n            允许工具处理返回代码。\r\n            此方法仅使用非零出口码调用。\r\n            \r\n","\r\n            The main implementation of ":"\r\n            主要实施\r\n","\r\n            True if currently connected to the task host; false otherwise. \r\n            ":"\r\n            如果当前连接到任务主机，则为正确；否则为错误。\r\n            \r\n","\r\n            A type of metadata modification.\r\n            ":"\r\n            一种元数据修饰。\r\n            \r\n","\r\n            Loads a project with the specified filename, using the collection's global properties and tools version.\r\n            If a matching project is already loaded, it will be returned, otherwise a new project will be loaded.\r\n            ":"\r\n            使用该集合的全局属性和工具版本，将项目加载带有指定的文件名。\r\n            如果已经加载了匹配项目，将返回，否则将加载一个新项目。\r\n            \r\n","\r\n            Starts a build using this project, building the specified targets with the specified loggers.\r\n            Returns true on success, false on failure.\r\n            If build is disabled on this project, does not build, and returns false.\r\n            Works on a privately cloned instance. To set or get\r\n            virtual items for build purposes, clone an instance explicitly and build that.\r\n            Does not modify the Project object.\r\n            ":"\r\n            使用此项目启动构建，并使用指定的记录仪构建指定的目标。\r\n            成功返回，成功，失败。\r\n            如果在此项目上禁用构建，则不会构建并返回false。\r\n            在私人克隆实例上工作。设置或获得\r\n            用于构建目的的虚拟项目，明确克隆实例并构建该实例。\r\n            不修改项目对象。\r\n            \r\n"," is non-empty).\r\n            Among other things this governs how the data is treated during build.\r\n            ":" 是非空的）。\r\n            除其他外，这控制了在构建过程中如何处理数据。\r\n            \r\n","\r\n            Assigns requests with the largest file sizes first.\r\n            ":"\r\n            首先使用最大的文件大小分配请求。\r\n            \r\n","\r\n            The arbitrary task host object.\r\n            ":"\r\n            任意任务主机对象。\r\n            \r\n","\r\n            Verifies that the target's state is as expected.\r\n            ":"\r\n            验证目标状态是否如预期。\r\n            \r\n","\r\n            List of all state that have been created with DefineState\r\n            and are yet to be Baked into types.\r\n            We use a hashtable instead of a list so that we can find duplicate\r\n            state names immediately.\r\n            ":"\r\n            所有状态列表已创建了定义\r\n            并且尚未烘烤成类型。\r\n            我们使用标签而不是列表，以便我们可以找到重复\r\n            立即命名。\r\n            \r\n","\r\n            Intern cannot be used on this interner if it came from serialization, since we do\r\n            not reconstruct the interning dictionary.\r\n            ":"\r\n            实习生如果来自序列化，则不能在此Interner上使用，因为我们这样做\r\n            不重建实习词典。\r\n            \r\n","\r\n            Console logger parameters.\r\n            ":"\r\n            控制台记录器参数。\r\n            \r\n","IDictionary of installed SDKS and their tuples containing (location, platform version).":"已安装的SDK及其元素包含的IDictionary（位置，平台版本）。\r\n","\r\n            Dumps all of the configurations.\r\n            ":"\r\n            转储所有配置。\r\n            \r\n","\r\n            Raised when a request is resumed by the engine itself.\r\n            ":"\r\n            当引擎本身恢复请求时提出。\r\n            \r\n","\r\n            The project may be scheduled anywhere.\r\n            ":"\r\n            该项目可以在任何地方安排。\r\n            \r\n","\r\n            The queue of packets we have received but which have not yet been processed.\r\n            ":"\r\n            我们已经收到的数据包队列，但尚未处理。\r\n            \r\n","A delegate to intercept Xml load calls.  For unit testing.":"授予XML负载调用的委托。用于单元测试。\r\n","The id of the node issuing the request":"发出请求的节点的ID\r\n","\r\n            Not specified\r\n            ":"\r\n            未指定\r\n            \r\n","\r\n            Version number of this object.\r\n            A host can compare this to a stored version number to determine whether\r\n            a project's XML has changed, even if it has also been saved since.\r\n            \r\n            The actual value is meaningless: an edit may increment it more than once,\r\n            so it should only be compared to a stored value.\r\n            ":"\r\n            此对象的版本号。\r\n            主机可以将其与存储的版本编号进行比较，以确定是否是否\r\n            即使该项目的XML自此也已被保存。\r\n            \r\n            实际值是毫无意义的：编辑可以多次将其递增，\r\n            因此，仅应将其与存储值进行比较。\r\n            \r\n","\r\n            Even if the new value expands to zero items, we do not expand it.\r\n            The common case we are interested in for expansion here is setting something \r\n            like \"$(sourcesroot)\\foo.cs\" and expanding that to a single item. \r\n            If say \"@(foo)\" is set as the new name, and it expands to blank, that might \r\n            be surprising to the host and maybe even unhandled, if on full reevaluation \r\n            it wouldn’t expand to blank. That’s why we're being cautious and supporting \r\n            the most common scenario only. \r\n            Many hosts will do a ReevaluateIfNecessary before reading anyway.\r\n            ":"\r\n            即使新值扩展到零项目，我们也不会扩展它。\r\n            我们对扩展感兴趣的常见情况是设置一些东西\r\n            例如“ $（sourcesroot）\\ foo.cs”，并将其扩展到单个项目。\r\n            如果说“@（foo）”设置为新名称，并且它扩展到空白，则可能\r\n            如果全面重新评估\r\n            它不会扩展到空白。这就是为什么我们要谨慎和支持\r\n            最常见的情况。\r\n            无论如何，许多主持人都会在阅读之前进行重新评估。\r\n            \r\n","current background":"当前背景\r\n","Type of source items":"源项目的类型\r\n","\r\n            Initialize an unparented ProjectOtherwiseElement\r\n            ":"\r\n            初始化无与伦比的project photershothwiselement\r\n            \r\n","The build event context for the task.":"任务的构建事件上下文。\r\n","\r\n            Removes the results for a particular configuration.\r\n            ":"\r\n            删除特定配置的结果。\r\n            \r\n","\r\n            Unordered set of task parameter names and unevaluated values.\r\n            This is a dead, read-only collection.\r\n            ":"\r\n            无序的任务参数名称和未评估值。\r\n            这是一个死者，只读的收藏。\r\n            \r\n","\r\n            The in-proc node.\r\n            ":"\r\n            启动节点。\r\n            \r\n","\r\n            References to other msbuild projects\r\n            ":"\r\n            参考其他MSBUILD项目\r\n            \r\n","\r\n            Exception thrown when a circular dependency is detected in the Scheduler.\r\n            ":"\r\n            当调度程序中检测到圆形依赖关系时，会引发异常。\r\n            \r\n","\r\n            Gets or sets the unevaluated property value.\r\n            Updates the evaluated value in the project, although this is not sure to be correct until re-evaluation.\r\n            ":"\r\n            获取或设置未评估的属性值。\r\n            更新项目中的评估值，尽管这在重新评估之前不确定是正确的。\r\n            \r\n","\r\n            The registered object will be disposed when the AppDomain is unloaded.\r\n            ":"\r\n            当AppDomain卸载时，注册对象将被处置。\r\n            \r\n","\r\n            Returns the actual major version of the parsed solution file\r\n            ":"\r\n            返回解析解决方案文件的实际主要版本\r\n            \r\n","\r\n            Overridable property specifying the encoding of the captured task standard output stream\r\n            ":"\r\n            指定捕获的任务标准输出流的编码的属性\r\n            \r\n","\r\n            Returns a hashset of warnings to be logged as errors for the specified build context.\r\n            ":"返回警告标签，该警告将记录为指定构建上下文的错误。\r\n            \r\n","Root directory which will be used to calculate the reference assembly path. The references assemblies will be\r\n            generated in the following way TargetFrameworkRootPath\\TargetFrameworkIdentifier\\TargetFrameworkVersion\\SubType\\TargetFrameworkSubType.\r\n            ":"根目录将用于计算参考组件路径。参考组件将是\r\n            以以下方式生成targetFrameWorkRootPath \\ targetFrameWorkIdentifier \\ targetFrameWorkversion \\ subtype \\ targetFrameworksubtype。\r\n            \r\n","The set of global properties to be used to build this request.":"用于构建此请求的全局属性集。\r\n","\r\n            Given a Registered task record and a task name. Check create an instance of the task factory using the record.\r\n            If the factory is a assembly task factory see if the assemblyFile has the correct task inside of it.\r\n            ":"\r\n            给定注册的任务记录和一个任务名称。使用记录来检查任务工厂的实例。\r\n            如果工厂是一个装配任务工厂，请查看汇编费是否内部具有正确的任务。\r\n            \r\n","\r\n            This method is called by the other endpoint when it is ready to establish the connection.\r\n            ":"\r\n            当其他端点准备建立连接时，该方法将由其他端点调用。\r\n            \r\n","\r\n            Overridable method to escape content of the response file\r\n            ":"\r\n            逃脱响应文件内容的方法过多\r\n            \r\n","\r\n            Removes all the specified items from the project.\r\n            Items that are not associated with this project are skipped.\r\n            ":"\r\n            删除项目中的所有指定项目。\r\n            与此项目无关的项目被跳过。\r\n            \r\n","\r\n            Whether the cache should log activity to the Debug.Out stream\r\n            ":"\r\n            缓存是否应将活动记录到Debug.out流\r\n            \r\n","\r\n            Returns true if ExpanderOptions.Truncate is set and EscapeHatches.DoNotTruncateConditions is not set.\r\n            ":"\r\n            如果ExpanderOptions返回true。Truncate设置和EscapeHatches。DoNotTruncateConditions未设置。\r\n            \r\n","\r\n            Initialize a parented ProjectOutputElement\r\n            ":"\r\n            初始化育儿projectOutputelement\r\n            \r\n","\r\n            Creates an empty results cache.\r\n            ":"\r\n            创建一个空的结果缓存。\r\n            \r\n","\r\n            Helper method to extract attribute values and update the ParsedSdkReference property if\r\n            necessary (update only when changed).\r\n            ":"\r\n            提取属性值并更新parsedsdkreference属性的辅助方法\r\n            必要（仅在更改时更新）。\r\n            \r\n","\r\n            Should ALL messages received on the standard error stream be logged as errors.\r\n            ":"\r\n            是否在标准错误流上收到的所有消息应记录为错误。\r\n            \r\n","\r\n            Returns the build request id for which this result was generated\r\n            ":"\r\n            返回生成此结果的构建请求ID\r\n            \r\n","\r\n            Retrieves all of the build events.\r\n            ":"\r\n            检索所有构建活动。\r\n            \r\n","\r\n            True if it is known that no child items have wildcards in their\r\n            include. An optimization helping Project.AddItem.\r\n            Only reliable if it is true.\r\n            ":"\r\n            是的，如果知道没有孩子的物品在他们的\r\n            包括。优化帮助项目。\r\n            仅在真实的情况下可靠。\r\n            \r\n","\r\n            Routes the packet to the appropriate handler.\r\n            ":"\r\n            将数据包路由到适当的处理程序。\r\n            \r\n","\r\n            Type of handler for TaskStarted events\r\n            ":"\r\n            任务启动事件的处理程序类型\r\n            \r\n","\r\n            Facilitate remoting the ":"\r\n            促进远程\r\n","\r\n            Accessor for _numCores.\r\n            ":"\r\n            _numcores的登录器。\r\n            \r\n","\r\n            Prepares the BuildManager to receive build requests.\r\n            ":"\r\n            准备建筑商接收构建请求。\r\n            \r\n","\r\n            This class is used to isolate the types used by an MSBuild plugin\r\n            (SDK resolver, logger, or task).\r\n            ":"\r\n            此类用于隔离MSBuild插件使用的类型\r\n            （SDK解析器，记录器或任务）。\r\n            \r\n","\r\n             Returns the default sub-toolset version for this sub-toolset.  Heuristic used is:\r\n             1) If Visual Studio 2010 is installed and our ToolsVersion is \"4.0\", use the base toolset, and return\r\n                a sub-toolset version of \"10.0\", to be set as a publicly visible property so that e.g. targets can\r\n                consume it.  This is to handle the fact that Visual Studio 2010 did not have any concept of sub-toolsets.\r\n             2) Otherwise, use the highest-versioned sub-toolset found.  Sub-toolsets with numbered versions will\r\n                be ordered numerically; any additional sub-toolsets will be prepended to the beginning of the list in\r\n                the order found. We use the highest-versioned sub-toolset because, in the absence of any other information,\r\n                we assume that higher-versioned tools will be more likely to be able to generate something more correct.\r\n            \r\n             Will return null if there is no sub-toolset available (and Dev10 is not installed).\r\n             ":"\r\n             返回此子模式的默认子图案版本。使用的启发式是：\r\n             1）如果安装了Visual Studio 2010，并且我们的ToolsVersion为“ 4.0”，请使用基本工具集，然后返回\r\n                “ 10.0”的子型版本，将其设置为公开可见的属性，例如目标可以\r\n                消费。这是为了解决视觉工作室2010没有任何子工具概念的事实。\r\n             2）否则，请使用找到最高的子量。带编号版本的子工具将\r\n                被数字订购；任何其他子工具都将备用到列表的开头\r\n                找到的命令。我们使用最高的子量表，因为在没有任何其他信息的情况下\r\n                我们假设更高的工具将更有可能生成更正确的东西。\r\n            \r\n             如果没有可用的子图表（并且未安装DEV10），将返回NULL。\r\n             \r\n","\r\n            Expands and loads project imports.\r\n            ":"\r\n            扩展和加载项目导入。\r\n            \r\n","\r\n            Gets the installed versions for a given framework\r\n            ":"\r\n            获取给定框架的安装版本\r\n            \r\n","\r\n            SubToolsets that map to this toolset. \r\n            ":"\r\n            映射到此工具集的子工具集。\r\n            \r\n","\r\n            Gets a hash code for this string.  If strings A and B are such that A.Equals(B), then\r\n            they will return the same hash code.\r\n            This is as implemented in CLR String.GetHashCode() [ndp\\clr\\src\\BCL\\system\\String.cs]\r\n            but stripped out architecture specific defines\r\n            that causes the hashcode to be different and this causes problem in cross-architecture handshaking\r\n            ":"\r\n            获取此字符串的哈希代码。如果字符串A和b使得A. equals（b），那么\r\n            他们将返回相同的哈希代码。\r\n            这是在clr string.gethashcode（）[NDP \\ Clr \\ Src \\ bcl \\ system \\ string.cs]中实现的\r\n            但剥离了特定的体系结构定义\r\n            这会导致哈希码不同，这会导致跨体系结构的问题\r\n            \r\n","\r\n            Value we should be setting VisualStudioVersion as the ultimate fallback when Dev10 is installed. \r\n            ":"\r\n            值我们应该将Visual -Studioversion设置为安装Dev10时的最终后备。\r\n            \r\n","\r\n            Initialize a ProjectRootElement instance from an XmlReader.\r\n            Uses the global project collection.\r\n            May throw InvalidProjectFileException.\r\n            ":"\r\n            从XMLReader初始化ProjectRootelement实例。\r\n            使用全球项目集合。\r\n            可能会抛出无效的fileException。\r\n            \r\n","\r\n            Returns the entry in the cache which matches the specified config.\r\n            ":"\r\n            返回与指定配置匹配的缓存中的条目。\r\n            \r\n","\r\n            item.ItemTypes is a KeyCollection, so it doesn't need any\r\n            additional read-only protection.\r\n            ":"\r\n            item.itemtypes是一个钥匙集合，因此不需要任何\r\n            额外的仅阅读保护。\r\n            \r\n"," to evaluate the project from.":" 从中评估该项目。\r\n","\r\n            Registers a host object for this project file\r\n            ":"\r\n            注册此项目文件的主机对象\r\n            \r\n","\r\n            This instance has invoked full tracking.\r\n            ":"\r\n            此实例调用了完整的跟踪。\r\n            \r\n","\r\n            Implements a build request configuration cache.\r\n            ":"\r\n            实现构建请求配置缓存。\r\n            \r\n","\r\n            Returns true if a particular piece of metadata is defined on this item (even if\r\n            its value is empty string) otherwise false.\r\n            This includes built-in metadata and metadata from item definitions.\r\n            ":"\r\n            如果在此项目上定义了特定的元数据，则返回true（即使\r\n            它的值为空字符串），否则为false。\r\n            这包括来自项目定义的内置元数据和元数据。\r\n            \r\n","\r\n            This constructor which allows a timestamp to be set\r\n            ":"\r\n            这个允许设置时间戳的构造函数\r\n            \r\n","\r\n            Gets and sets the value of the Architecture attribute.\r\n            ":"\r\n            获取并设置架构属性的值。\r\n            \r\n","\r\n            Shutdown.\r\n            ":"\r\n            关闭。\r\n            \r\n","\r\n            Number representing the current assembly's timestamp\r\n            ":"\r\n            代表当前大会的时间戳的数字\r\n            \r\n","\r\n             Implements the rules for finding component directories using the AssemblyFoldersEx scheme.\r\n            \r\n             This is the normal schema:\r\n            \r\n              [HKLM | HKCU]\\SOFTWARE\\MICROSOFT\\.NetFramework\\ \r\n                v1.0.3705 \r\n                  AssemblyFoldersEx \r\n                      Infragistics.GridControl.1.0:  \r\n                          @Default = c:\\program files\\infragistics\\grid control\\1.0\\bin \r\n                          @Description = Infragistics Grid Control for .NET version 1.0 \r\n                          9466 \r\n                              @Default = c:\\program files\\infragistics\\grid control\\1.0sp1\\bin \r\n                              @Description = SP1 for Infragistics Grid Control for .NET version 1.0 \r\n            \r\n             \r\n             The root registry path is the following:\r\n            \r\n                 [HKLM | HKCU]\\{AssemblyFoldersBase}\\{RuntimeVersion}\\{AssemblyFoldersSuffix}\r\n            \r\n             Where:\r\n            \r\n                 {AssemblyFoldersBase} = Software\\Microsoft\\[.NetFramework | .NetCompactFramework]\r\n                 {RuntimeVersion} = the runtime version property from the project file\r\n                 {AssemblyFoldersSuffix} = [ PocketPC | SmartPhone | WindowsCE]\\AssemblyFoldersEx\r\n            \r\n             ":"\r\n             使用AssemblyFolderSex方案实现查找组件目录的规则。\r\n            \r\n             这是正常的模式：\r\n            \r\n              [HKLM | hkcu] \\ Software \\ Microsoft \\ .netFramework \\\r\n                V1.0.3705\r\n                  AssemblyFoldersex\r\n                      infragistics.gridcontrol.1.0：\r\n                          @default = C：\\ Program Files \\ Infragistics \\ Grid Control \\ 1.0 \\ bin\r\n                          @Description = .NET版本1.0的Infragistics网格控制\r\n                          9466\r\n                              @default = C：\\ Program Files \\ Infragistics \\ Grid Control \\ 1.0Sp1 \\ bin\r\n                              @Description = SP1用于.NET版本1.0的infragistics网格控制\r\n            \r\n             \r\n             根注册路径如下：\r\n            \r\n                 [HKLM | hkcu] \\ {assemblyFolderSbase} \\ {runtimeversion} \\ {andyblyFoldersSuffix}\r\n            \r\n             在哪里：\r\n            \r\n                 {assemblyFoldersBase} = Software \\ Microsoft \\ [。NetFrameWork | .NetCompactFramework]\r\n                 {runtimeversion} =项目文件中的运行时版本属性\r\n                 {assemblyFoldersSuffix} = [PocketPC |智能手机| windowsce] \\ gasemblyFoldersex\r\n            \r\n             \r\n","\r\n            The maximum number of idle request builders we will retain.\r\n            ":"\r\n            我们将保留的最大闲置请求构建器数量。\r\n            \r\n","\r\n            The type of item the metadata should be considered to apply to.\r\n            ":"\r\n            元数据应考虑适用的项目类型。\r\n            \r\n","A link pointing to more information about the error ":"指出有关错误的更多信息的链接\r\n","File name to append, if it's null this method has no effect":"文件名是要附加的，如果是无效的，则该方法没有效果\r\n","\r\n            The node endpoint\r\n            ":"节点端点\r\n            \r\n","\r\n            Strips a single pair of leading/trailing double-quotes from a string.\r\n            ":"\r\n            从字符串中剥离一对引导/尾随双引号。\r\n            \r\n","\r\n            Simple name for the MSBuild tasks (v12), used for shimming in loading \r\n            task factory UsingTasks\r\n            ":"\r\n            MSBUILD任务的简单名称（V12），用于加载\r\n            任务工厂使用任务\r\n            \r\n","\r\n            This interface represents an object which holds build results.\r\n            ":"\r\n            该界面代表一个保存构建结果的对象。\r\n            \r\n","\r\n            Indicates whether the given path is a UNC or drive pattern root directory.\r\n            ":"\r\n            指示给定路径是UNC或驱动模式根目录。\r\n            \r\n","The file in which the target is defined - typically a .targets file":"定义目标的文件 - 通常是.targets文件\r\n","\r\n            Serialization method.\r\n            ":"\r\n            序列化方法。\r\n            \r\n","Any exception which is a ExceptionHandling.IsCriticalException will not be wrapped":"任何例外的例外。\r\n","\r\n            Creates an item based on the provided item, with the specified include and item type.\r\n            ":"\r\n            根据提供的项目创建一个项目，并具有指定的Incluble和项目类型。\r\n            \r\n","\r\n            Get the cached string.\r\n            ":"\r\n            获取缓存的字符串。\r\n            \r\n","\r\n            Gets the current OEM code page which is used by console apps\r\n            (as opposed to the Windows/ANSI code page)\r\n            Basically for each ANSI code page (set in Regional settings) there's a corresponding OEM code page\r\n            that needs to be used for instance when writing to batch files\r\n            ":"\r\n            获取当前由控制台应用使用的OEM代码页\r\n            （与Windows/ANSI代码页面相反）\r\n            基本上，对于每个ANSI代码页面（在区域设置中设置）都有一个相应的OEM代码页\r\n            例如，在写作批处理文件时需要使用\r\n            \r\n"," to create instances of this class. Do not inherit from this class.\r\n            ":" 创建此类实例。不要从这个课程中继承。\r\n            \r\n","The full path to a file to check.":"要检查文件的完整路径。\r\n","\r\n            Create a new, empty, FrameStack.\r\n            ":"\r\n            创建一个新的，空的Framestack。\r\n            \r\n","\r\n            This is public because it may be returned in the Exceptions collection of a BuildResult.\r\n            If you add fields to this class, add a custom serialization constructor and override GetObjectData().\r\n            ":"\r\n            这是公开的，因为它可以在BuildResult的例外收集中返回。\r\n            如果将字段添加到此类中，请添加自定义序列化构造函数和Override getObjectData（）。\r\n            \r\n","The default ToolsVersion":"默认工具交换\r\n","\r\n            Cached value of the fullpath metadata. All other metadata are computed on demand.\r\n            ":"\r\n            FullPath元数据的缓存价值。按需计算所有其他元数据。\r\n            \r\n","\r\n            The SDKType, default of unspecified\r\n            ":"\r\n            SDKTYPE，未指定的默认\r\n            \r\n","File name to locate in the .NET Framework SDK directory":"要位于.NET Framework SDK目录中的文件名\r\n","\r\n            A mapping of all of the INodePacketHandlers wrapped by this provider. \r\n            ":"\r\n            该提供商包裹的所有InodePackEthandlers的映射。\r\n            \r\n","\r\n            Record the time and missing state of the entry in the tlog\r\n            ":"\r\n            记录TLOG中条目的时间和缺失状态\r\n            \r\n","\r\n            True if the task connected to this proxy is alive\r\n            ":"\r\n            如果连接到该代理的任务还活着，则为true\r\n            \r\n","\r\n            The number of nodes in the system. Loggers may take different action depending on how many nodes are in the system.\r\n            ":"\r\n            系统中的节点数量。登录器可能会根据系统中有多少个节点采取不同的动作。\r\n            \r\n","\r\n            Logs an error with a given message\r\n            ":"\r\n            通过给定消息记录错误\r\n            \r\n","\r\n            Targets that we will build in the project. This may mean different things for different project types,\r\n            our tasks will put something like Rebuild, Clean, etc. here. This may be null if the project is being\r\n            built with the default target.\r\n            ":"\r\n            我们将在项目中构建的目标。这可能意味着不同的项目类型的不同事物，\r\n            我们的任务将在这里放置重建，干净等。如果项目正在\r\n            用默认目标构建。\r\n            \r\n","\r\n            Mutates a value in-place with optimistic locking transaction semantics via a specified transformation\r\n            function. The transformation is retried as many times as necessary to win the optimistic locking race.\r\n            ":"\r\n            通过指定的转换，通过具有乐观锁定交易语义的置入价值来突变价值\r\n            功能。赢得乐观的锁定竞赛，转换经过多次进行。\r\n            \r\n"," after building the target initially (or skipping due to false condition).\r\n            Null when the ":" 构建目标后（或由于错误条件而跳过）。\r\n            无效\r\n","CommandLineValueSeparator":"CommandLineValueseparator\r\n","\r\n            The list of strongly-held ProjectRootElement's\r\n            ":"\r\n            强大的ProjectRootlement的清单\r\n            \r\n","\r\n            Enumerable that this proxies\r\n            ":"\r\n            枚举这个代理人\r\n            \r\n","\r\n            Arguments for the environment variable read event.\r\n            ":"\r\n            环境变量读取事件的论点。\r\n            \r\n","\r\n            Stop debugging thread.\r\n            This may not necessarily unload islands or dynamic modules that were created until the calling appdomain has exited.\r\n            UNDONE: Call this. Otherwise we still exit cleanly, just only when the process exits.\r\n            ":"\r\n            停止调试线程。\r\n            这可能不一定是在呼叫应用程序退出之前创建的岛屿或动态模块。\r\n            撤消：打电话给这个。否则，只有仅当该过程退出时，我们仍然干净地退出。\r\n            \r\n","\r\n            This constructor allows all event data to be initialized while providing a custom timestamp.\r\n            ":"\r\n            该构造函数允许在提供自定义时间戳时初始化所有事件数据。\r\n            \r\n","\r\n            This may include imported files that ended up contributing nothing to the evaluated project.\r\n            These might otherwise have no strong references to them at all.\r\n            If they are dirtied, though, they might affect the evaluated project; and that's why we record them. \r\n            Mostly these will be common imports, so they'll be shared anyway.\r\n            ":"\r\n            这可能包括导入的文件，最终对评估项目没有任何贡献。\r\n            否则，这些可能根本没有强烈的提及。\r\n            但是，如果它们被弄脏，它们可能会影响评估的项目；这就是为什么我们记录它们。\r\n            通常，这些将是常见的导入，因此无论如何它们都会被共享。\r\n            \r\n","\r\n            Constructs a BuildRequestData for build requests based on project instances.\r\n            ":"根据项目实例构建构建请求的buildrequestdata。\r\n            \r\n","\r\n            Whether to warn when we set a property for the first time, after it was previously used.\r\n            ":"\r\n            是否在先前使用后首次设置属性时要警告。\r\n            \r\n","Path to the solution if known.":"如果已知的话，通往溶液的路径。\r\n"," constructor arguments.\r\n            ":" 构造方参数。\r\n            \r\n","\r\n               Note: You must use ":"\r\n               注意：您必须使用\r\n","\r\n            The actual importance at which standard out messages will be logged.\r\n            ":"\r\n            记录标准消息的实际重要性。\r\n            \r\n","\r\n            A cached reflection accessor for an internal member.\r\n            ":"\r\n            内部成员的缓存反射登录器。\r\n            \r\n","\r\n            Add a call to the ResolveAssemblyReference task to crack the pre-resolved referenced\r\n            assemblies for the complete list of dependencies, PDBs, satellites, etc.  The invoke\r\n            the Copy task to copy all these files (or at least the ones that RAR determined should\r\n            be copied local) into the web project's bin directory.\r\n            ":"\r\n            将呼叫添加到ResolveressemblyReference任务中，以破解预先分辨的引用\r\n            依赖关系，PDB，卫星等完整列表的组件。\r\n            复制任务要复制所有这些文件（或至少RAR确定的文件应\r\n            将本地复制到Web项目的bin目录中。\r\n            \r\n","The name of the target which has just completed":"刚刚完成的目标名称\r\n","\r\n            Will return the root location for the reference assembly directory under the program files directory.\r\n            ":"\r\n            将在程序文件目录下返回参考程序集目录的根位置。\r\n            \r\n","\r\n            Initialize a parented ProjectPropertyElement\r\n            ":"\r\n            初始化育儿Project Propertyelement\r\n            \r\n","\r\n            Logs a warning event for the current task\r\n            ":"\r\n            记录当前任务的警告事件\r\n            \r\n","\r\n            Given a property name and a sub-toolset version, searches for that property first in the \r\n            sub-toolset, then falls back to the base toolset if necessary, and returns the property \r\n            if it was found. \r\n            ":"\r\n            给定属性名称和一个子图表版本，首先在\r\n            子型号，然后在必要时掉回基本工具集，然后返回属性\r\n            如果找到了。\r\n            \r\n","\r\n            Provides a way to efficiently enumerate item metadata\r\n            ":"\r\n            提供有效枚举项目元数据的方法\r\n            \r\n","The version of the targeted platform":"目标平台的版本\r\n","\r\n             Hash the string independent of bitness and target framework.\r\n             ":"\r\n             散列独立于比特性和目标框架的字符串。\r\n             \r\n","Exceptionm which caused the error":"引起错误的异常\r\n",". If a member needs to reference the\r\n             ":"。如果成员需要参考\r\n             \r\n","\r\n             The provider for the task host nodes. \r\n            ":"\r\n             任务主机节点的提供商。\r\n            \r\n","\r\n            Property element collection\r\n            ":"\r\n            属性元素集合\r\n            \r\n","\r\n            Ordered collection of unevaluated metadata on the item.\r\n            If there is no metadata, returns an empty collection.\r\n            ":"\r\n            在该物品上订购了未评估的元数据。\r\n            如果没有元数据，请返回一个空的收藏。\r\n            \r\n","\r\n            Returns true if this request must wait for its results in order to complete.\r\n            ":"\r\n            如果此请求必须等待其结果才能完成，则返回true。\r\n            \r\n","\r\n            Host callback for host-aware tasks.\r\n            ":"\r\n            主机回调的主机感知任务。\r\n            \r\n","\r\n            Adds an item with metadata to the project.\r\n            Metadata may be null, indicating no metadata.\r\n            Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.\r\n            Makes no effort to locate the new item near similar items.\r\n            Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.\r\n            Evaluates on a best-effort basis:\r\n                -expands with all items. Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.\r\n                -only this item is evaluated. Other items that might depend on it is not affected.\r\n            This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.\r\n            ":"\r\n            将带有元数据的项目添加到该项目中。\r\n            元数据可能是无效的，表明没有元数据。\r\n            除非是项目组中的第一个项目，否则不会努力查看现有通配符是否已经与新项目相匹配。\r\n            不用努力将新物品定位在类似物品附近。\r\n            将项目附加到没有条件的第一个项目组中，也没有孩子，或者他们的第一个孩子是相同类型的项目。\r\n            以最佳胜地进行评估：\r\n                 - 与所有项目相关。在新项目下方的XML中定义的项目也可以使用，即使在实际评估中不会。\r\n                 - 仅评估此项目。其他可能依赖它的项目不受影响。\r\n            这是一种方便，可以理解，在重新评估之前，它不一定会使项目处于完全一致的状态。\r\n            \r\n","\r\n             Append the regex equivalents for character sequences in the filename part of a filespec:\r\n            \r\n             (1) Trailing dots in file names have to be treated specially.\r\n                 We want:\r\n            \r\n                     *. to match foo\r\n            \r\n                 but 'foo' doesn't have a trailing '.' so we need to handle this while still being careful\r\n                 not to match 'foo.txt' by modifying the generated regex for wildcard characters * and ?\r\n             \r\n             (2) Common filespec characters\r\n            \r\n             (3) Ignore the .* portion of any *.* sequence when no trailing dot exists\r\n             ":"\r\n             在FileSpec的文件名部分中附加到字符序列的正则等效物：\r\n            \r\n             （1）必须专门处理文件名中的落后点。\r\n                 我们想要：\r\n            \r\n                     *。匹配foo\r\n            \r\n                 但是“ foo”没有落后'。因此，我们需要在仍然小心的同时处理这个\r\n                 通过修改通配符字符 *和？\r\n             \r\n             （2）Common FileSpec字符\r\n            \r\n             （3）忽略任何*。\r\n             \r\n","\r\n            Name of the scope.\r\n            ":"\r\n            范围的名称。\r\n            \r\n","\r\n            This is the Windows file version (specifically the value of the ProductVersion\r\n            resource), not necessarily the assembly version.\r\n            If you want the assembly version, use Constants.AssemblyVersion.\r\n            ":"\r\n            这是Windows文件版本（特别是产品的价值\r\n            资源），不一定是汇编版本。\r\n            如果需要汇编版本，请使用常量。启用。\r\n            \r\n","\r\n            This class encapsulates the behavior and collection of built-in metadata.  These metadatum\r\n            are inferred from the content of the include and sometimes the context of the project or\r\n            current directory.\r\n            ":"\r\n            该类封装了内置元数据的行为和收集。这些元数据\r\n            从包含内容的内容，有时是项目的上下文中推断出来或\r\n            当前目录。\r\n            \r\n","\r\n            Flag indicating when the nodes have been shut down.\r\n            BUGBUG: This is a fix which corrects an RI blocking BVT failure.  The real fix must be determined before RTM.\r\n            This must be investigated and resolved before RTM.  The apparent issue is that a design-time build has already called EndBuild\r\n            through the BuildManagerAccessor, and the nodes are shut down.  Shortly thereafter, the solution build manager comes through and calls EndBuild, which throws\r\n            another Shutdown packet in the queue, and causes the following build to stop prematurely.  This is all timing related - not every sequence of builds seems to \r\n            cause the problem, probably due to the order in which the packet queue gets serviced relative to other threads.\r\n            \r\n            It appears that the problem is that the BuildRequestEngine is being invoked in a way that causes a shutdown packet to appear to overlap with a build request packet.\r\n            Interactions between the in-proc node communication thread and the shutdown mechanism must be investigated to determine how BuildManager.EndBuild is allowing itself\r\n            to return before the node has indicated it is actually finished.\r\n            ":"\r\n            标志指示何时关闭节点。\r\n            Bugbug：这是一个修复程序，可以纠正RI阻塞BVT故障。实际修复必须在RTM之前确定。\r\n            必须在RTM之前对此进行调查和解决。显而易见的问题是，设计时构建已经称为Endbuild\r\n            通过BuildManagerAccessor，节点被关闭。此后不久，解决方案构建管理器会通过并致电Endbuild，这将抛出\r\n            队列中的另一个关闭数据包，并导致以下构建过早停止。这都是所有与时机相关的 - 并非每个构建顺序似乎都在\r\n            导致问题，可能是由于数据包队列相对于其他线程提供服务的顺序。\r\n            \r\n            看来问题是buildrequestengine正在以导致关闭数据包与构建请求数据包重叠的方式调用。\r\n            必须研究程序内节点通信线程与关闭机制之间的交互\r\n            在节点表明它实际完成之前返回。\r\n            \r\n","\r\n            Cache of task declarations i.e. the <UsingTask> tags fed to this registry,\r\n            keyed by the task name declared.\r\n            Task name may be qualified or not.\r\n            This field may be null.\r\n            ":"\r\n            任务声明的缓存，即<susthtask>标签喂入此注册表的标签，\r\n            由声明的任务名称锁定。\r\n            任务名称可能是合格的。\r\n            该字段可能是无效的。\r\n            \r\n","\r\n            Using the 2.0 CLR\r\n            ":"\r\n            使用2.0 CLR\r\n            \r\n","\r\n            Gets the current instance of ":"\r\n            获取当前实例\r\n","\r\n            Set the item xml from which items will be created.\r\n            Used by the evaluator only.\r\n            ":"\r\n            设置将创建项目的项目XML。\r\n            仅由评估者使用。\r\n            \r\n","\r\n            Returns true if there is any host object registered for this project file.\r\n            ":"\r\n            如果有任何主机对象为该项目文件注册，则返回true。\r\n            \r\n","\r\n            Perform a bitwise NOT on the first and second (~first)\r\n            ":"\r\n            在第一个和第二个（~第一个）上按位不执行\r\n            \r\n","\r\n            Null for \"external\" objects, not null for internal objects\r\n            ":"\r\n            null用于“外部”对象，而不是内部对象的null\r\n            \r\n","\r\n            Line number of the task invocation in the project file\r\n            ":"\r\n            项目文件中任务调用的行号\r\n            \r\n","\r\n            Full path of the file to test\r\n            ":"\r\n            文件的完整路径进行测试\r\n            \r\n","\r\n            Returns true if the specified configuration is currently in the scheduler.\r\n            ":"\r\n            如果指定的配置当前在调度程序中，则返回true。\r\n            \r\n","\r\n                Whether the ":"\r\n                是否\r\n","\r\n            Items in this project, ordered within groups of item types,\r\n            including items whose conditions evaluated to false, or that were\r\n            contained within item groups who themselves had conditioned evaluated to false.\r\n            This is useful for hosts that wish to display all items, even if they might not be part\r\n            of the build in the current configuration.\r\n            ":"\r\n            该项目中的项目，在项目类型组中订购，\r\n            包括评估为false的条件或\r\n            包含在自己的条件下评估为虚假的项目组中。\r\n            这对于希望显示所有项目的主机很有用，即使它们可能不是一部分\r\n            当前配置中的构建。\r\n            \r\n","Tools version to evaluate with. May be null":"可以评估的工具版本。可能是无效的\r\n","\r\n            The time this request was completed.\r\n            ":"\r\n            该请求完成的时间。\r\n            \r\n"," if this is the last task for this queue, otherwise ":" 如果这是此队列的最后一项任务，则\r\n","An amount to adjust the prefix by.":"通过调整前缀的金额。\r\n","\r\n            Table to resolve import tags\r\n            ":"\r\n            解决导入标签的表\r\n            \r\n","\r\n            Internal version of ":"\r\n            内部版本的\r\n","Indicates whether or not the resolver is allowed to be interactive.":"指示是否允许解析器进行交互。\r\n","\r\n            Return the items in ":"\r\n            退还项目\r\n","\r\n            Translation method.\r\n            ":"\r\n            翻译方法。\r\n            \r\n"," captures the\r\n            associated recent error code (":" 捕获\r\n            关联的最近错误代码（\r\n","\r\n            This interface defines the events raised by the build engine.\r\n            Loggers use this interface to subscribe to the events they\r\n            are interested in receiving.\r\n            ":"\r\n            该界面定义了构建引擎提出的事件。\r\n            登录器使用此界面订阅他们的事件\r\n            有兴趣接收。\r\n            \r\n","\r\n            Sets foreground color to color specified using ANSI escape codes\r\n            ":"将前景颜色设置为使用ANSI逃生代码指定的颜色\r\n            \r\n","Stringified list":"弦乐列表\r\n","\r\n            Initialize the internal event source which is used to raise events on loggers registered to this submission\r\n            ":"\r\n            初始化内部事件源，用于在此提交中注册的登录机上提出事件\r\n            \r\n","\r\n            Deserializes from a stream through a binary reader\r\n            ":"\r\n            通过二进制阅读器从流来验证\r\n            \r\n","The event context of the node which is spawning this project.":"产生该项目的节点的事件上下文。\r\n","\r\n            Items that should be added to the evaluation.  This allows an SDK resolver to provide information to the build\r\n            ":"\r\n            应该添加到评估中的项目。这允许SDK解析器为构建提供信息\r\n            \r\n","\r\n            The toolsets changed.\r\n            ":"\r\n            工具集更改了。\r\n            \r\n","\r\n            \r\n            Example result:\r\n            [\r\n            GlobResult(glob: \"C:\\**\\*.foo\", exclude: []),\r\n            GlobResult(glob: [\"*.a\", \"*.b\"], exclude=[\"3.a\"], remove=[\"2.a\"]),\r\n            GlobResult(glob: \"**\\*.b\", exclude=[\"1.b, **\\obj\\*.b\", **\\bar\\*.b\"]),\r\n            GlobResult(glob: \"*.txt\", exclude=[]),\r\n            GlobResult(glob: \"*.a\", exclude=[]),\r\n            GlobResult(glob: \"*.cs\", exclude=[\"bar\"])\r\n            ].\r\n             ":"\r\n            \r\n            结果：\r\n            [[\r\n            GlobResult（Glob：“ C：\\ ** \\*。foo”，排除：[]），\r\n            GlobResult（Glob：[“*.a”，“*.b”]，exclude = [3.a“”，remove = [2.a']），，\r\n            GlobResult（Glob：“ ** \\*。B”，排除= [1.b，** \\ obj \\*。b“，** \\ bar \\*。b”]），），\r\n            GlobResult（Glob：“*.txt”，ubled = []），，\r\n            GlobResult（Glob：“*.a”，ubled = []），，\r\n            GlobResult（Glob：“*.cs”，排除= [“ bar”]）\r\n            ]。\r\n             \r\n","\r\n            Class which provides access to toolsets.\r\n            ":"\r\n            提供对工具集的访问的类。\r\n            \r\n","\r\n            Store the path for the 64-bit MSBuildTaskHost so that we don't have to keep re-calculating it. \r\n            ":"\r\n            存储64位MSBUILDTASKHOST的路径，以便我们不必继续重新计算它。\r\n            \r\n","The value if it exists, null otherwise.":"如果存在该值，则否则为无效。\r\n","\r\n            If value is not an empty string, adds it to list.\r\n            ":"\r\n            如果值不是一个空字符串，则将其添加到列表中。\r\n            \r\n","\r\n            Shuts down all of the managed nodes.  This call will not return until all nodes are shut down.\r\n            ":"\r\n            关闭所有托管节点。在关闭所有节点之前，此呼叫不会返回。\r\n            \r\n","\r\n            This class represents a single target in the TargetBuilder.  It maintains the state machine for a particular target as well as\r\n            relevant information on outputs generated while a target is running.\r\n            ":"\r\n            该类代表目标构建器中的一个目标。它维护特定目标的状态机以及\r\n            有关目标运行时生成的输出的相关信息。\r\n            \r\n","\r\n             Represents a segmented dictionary that is immutable; meaning it cannot be changed once it is created.\r\n             ":"\r\n             代表一个不变的分段词典；这意味着一旦创建就无法更改。\r\n             \r\n","\r\n            The full path to the project, for logging.\r\n            If the project was never given a path, returns empty string.\r\n            ":"\r\n            该项目的完整路径，用于记录。\r\n            如果该项目从未有过路径，则将返回空字符串。\r\n            \r\n","\r\n            Tells if the ":"\r\n            告诉是否\r\n","The name of the task to create.":"要创建任务的名称。\r\n","\r\n            Identity of this task. \r\n            ":"\r\n            此任务的身份。\r\n            \r\n","\r\n            Verify that the provided object location is in the same file as the project.\r\n            If it is not, throws an InvalidOperationException indicating that imported evaluated objects should not be modified.\r\n            This prevents, for example, accidentally updating something like the OutputPath property, that you want be in the \r\n            main project, but for some reason was actually read in from an imported targets file.\r\n            ":"\r\n            验证提供的对象位置与项目同一文件中。\r\n            如果不是这样，则抛出InvalidOperationException，表明不应修改导入的评估对象。\r\n            例如，这样可以防止意外地更新类似Outputpath属性的内容，您希望在\r\n            主要项目，但由于某种原因，实际上是从导入目标文件中读取的。\r\n            \r\n","The identifier of the targeted platform":"目标平台的标识符\r\n","\r\n            This constructor allows event data to be initialized.\r\n            Sender is assumed to be \"MSBuild\".\r\n            ":"\r\n            该构造函数允许初始化事件数据。\r\n            假定发件人是“ msbuild”。\r\n            \r\n","\r\n            Return the fragments that match against the given ":"\r\n            返回与给定匹配的片段\r\n","\r\n            version 4.0\r\n            ":"\r\n            版本4.0\r\n            \r\n","ArrayList containing ItemBucket objects (can be empty), each one representing an execution batch.":"包含ItemBucket对象的arraylist（可以是空），每个对象代表执行批处理。\r\n","Project containing the PRT protocol":"包含PRT协议的项目\r\n","\r\n            Constructor taking a source of metadata.\r\n            ":"\r\n            获取元数据源的构造函数。\r\n            \r\n","\r\n            Almost always, projects have the same set of targets because they all import the same ones.\r\n            So we keep around the last set seen and if ours is the same at the end of evaluation, unify the references.\r\n            ":"\r\n            几乎总是，项目都具有相同的目标，因为它们都导入相同的目标。\r\n            因此，我们围绕着最后一组，如果我们的评估结束时我们的情况相同，请统一参考文献。\r\n            \r\n","\r\n            Version of the contract\r\n            ":"\r\n            合同的版本\r\n            \r\n","The translator to use for the values in the collection.":"用于集合中值的翻译器。\r\n","\r\n            Compares for inequality\r\n            ":"\r\n            比较不平等\r\n            \r\n","\r\n            Gets the set of parameters for the task factory\r\n            ":"\r\n            获取任务工厂的一组参数\r\n            \r\n","\r\n            Maps a schedulable request directly to the node holding it in the linked list.  This allows us to perform an O(1) operation to\r\n            remove the node from the linked list without exposing the list directly.\r\n            ":"\r\n            将可计划请求直接映射到将其保存在链接列表中的节点。这使我们能够执行O（1）操作\r\n            从链接列表中删除节点，而无需直接公开列表。\r\n            \r\n","\r\n            Sets the value of an attribute, but if the value to set is null or empty, just\r\n            removes the attribute. Returns the attribute, or null if it was removed.\r\n            UNDONE: Make this return a bool if the attribute did not change, so we can avoid dirtying.\r\n            ":"\r\n            设置属性的值，但是如果要设置的值为null或空，则\r\n            删除属性。返回属性，如果将其删除，则将其返回。\r\n            撤消：如果属性没有更改，请将此返回bool，以免弄脏。\r\n            \r\n","\r\n            Ensures the path does not have a leading or trailing slash after removing the first 'start' characters.\r\n            ":"\r\n            删除第一个“开始”字符后，确保该路径没有带头或落后的斜线。\r\n            \r\n","\r\n            Waits to drain all events of logging service.\r\n            This method shall be used carefully because during draining, LoggingService will block all incoming events.\r\n            ":"\r\n            等待耗尽所有伐木服务活动。\r\n            该方法应仔细使用，因为在排水期间，LoggingService将阻止所有传入事件。\r\n            \r\n","\r\n            Callback invoked when the link status of the endpoint has changed.\r\n            ":"\r\n            当端点的链接状态更改时，调用了回调。\r\n            \r\n","\r\n            Gets or sets the runtime value for the task.\r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"获取或设置任务的运行时值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n","\r\n            Constructor called by Evaluator.\r\n            All parameters are in the unevaluated state.\r\n            Locations other than the main location may be null.\r\n            ":"\r\n            评估器调用的构造函数。\r\n            所有参数均处于未评估状态。\r\n            除主要位置以外的其他位置可能为无效。\r\n            \r\n","\r\n            Gets or sets the unevaluated value. \r\n            Returns empty string if it is not present.\r\n            ":"\r\n            获取或设置未评估的值。\r\n            如果不存在，则返回空字符串。\r\n            \r\n","\r\n            Task name.\r\n            ":"\r\n            任务名称。\r\n            \r\n","\r\n            SDKType metadata name and manifest attribute\r\n            ":"\r\n            sdktype元数据名称和清单属性\r\n            \r\n","Logger to shutdown":"记录器要关闭\r\n","\r\n            Provides an enumerator over property definitions for a specified sub-toolset version\r\n            under a specified toolset version. In the ToolsetConfigurationReader case, breaks\r\n            immediately because we do not currently support sub-toolsets in the configuration file.\r\n            ":"\r\n            提供有关指定子图案版本的属性定义的枚举器\r\n            在指定的工具集中。在toolsetConfigurationReader案例中，断裂\r\n            立即，因为我们当前不支持配置文件中的子处理器。\r\n            \r\n","\r\n            Retrieves an existing item definition, if any.\r\n            ":"\r\n            检索现有项目定义（如果有）。\r\n            \r\n","\r\n            Figures out a display name given the target framework details. \r\n            This is the equivalent of the target framework moniker, but for display.\r\n            If one cannot be found from the redist list file, a synthesized one is returned, so there is always a display name.\r\n            ":"\r\n            给定目标框架详细信息的显示名称。\r\n            这相当于目标框架绰号，但要显示。\r\n            如果从重新列表文件中找不到一个，则返回一个合成的文件，因此总有一个显示名称。\r\n            \r\n","\r\n            The direct children of this composite\r\n            ":"\r\n            该复合材料的直接子女\r\n            \r\n","\r\n            Return the verbosity for this logger (from command line all loggers get same verbosity)\r\n            ":"\r\n            返回该记录器的详细性（从命令行中，所有记录器都获得相同的详细性）\r\n            \r\n","\r\n             This method takes a string which may contain any number of\r\n             \"$(propertyname)\" tags in it.  It replaces all those tags with\r\n             the actual property values, and returns a new string.  For example,\r\n            \r\n                 string processedString =\r\n                     propertyBag.ExpandProperties(\"Value of NoLogo is $(NoLogo).\");\r\n            \r\n             This code might produce:\r\n            \r\n                 processedString = \"Value of NoLogo is true.\"\r\n            \r\n             If the sourceString contains an embedded property which doesn't\r\n             have a value, then we replace that tag with an empty string.\r\n            \r\n             This method leaves the result escaped.  Callers may need to unescape on their own as appropriate.\r\n             ":"\r\n             此方法采用一个可能包含任意数量的字符串\r\n             “ $（propertyName）”标签。它用\r\n             实际属性值，并返回一个新字符串。例如，\r\n            \r\n                 字符串processedString =\r\n                     propertyBag.ExpandProperties（“ nologo的值是$（nologo）。”）;\r\n            \r\n             该代码可能会产生：\r\n            \r\n                 processedstring =“ nologo的值是正确的。”\r\n            \r\n             如果源环境包含一个不嵌入的属性\r\n             有一个值，然后我们用一个空字符串替换该标签。\r\n            \r\n             该方法使结果逃脱了。呼叫者可能需要自行开放。\r\n             \r\n","\r\n            Project file associated with event.   \r\n            ":"\r\n            与事件关联的项目文件。\r\n            \r\n","True if messages of the given importance should be logged, false if it's guaranteed that such messages would be ignored.":"是的，如果应记录给定重要性的消息，如果保证将忽略此类消息，则为错误。\r\n","\r\n            Enumerator over items in this project.\r\n            ":"\r\n            枚举此项目中的项目。\r\n            \r\n","Error sub-category that describes the error (can be null).":"描述错误的错误子类别（可以为null）。\r\n","The string containing item syntax":"包含项目语法的字符串\r\n","\r\n            Creates a task item from a ProjectItem but changing the itemspec\r\n            ":"\r\n            从projectItem创建任务项，但更改itemspec\r\n            \r\n","\r\n            Gets or sets the method to use when multiple rules with the same name appear in the project\r\n            to reconcile the rules into one instance.\r\n            ":"\r\n            当项目中出现多个具有相同名称的规则时获取或设置使用的方法\r\n            将规则调和为一个实例。\r\n            \r\n","\r\n            The issuing request\r\n            ":"\r\n            发行请求\r\n            \r\n","\r\n            This struct represents a reference to a piece of item metadata.  For example,\r\n            %(EmbeddedResource.Culture) or %(Culture) in the project file.  In this case,\r\n            \"EmbeddedResource\" is the item name, and \"Culture\" is the metadata name.\r\n            The item name is optional.\r\n            ":"\r\n            该结构代表对一件项目元数据的引用。例如，\r\n            项目文件中的％（EmbeddedResource.culture）或％（文化）。在这种情况下，\r\n            “ EmbeddedResource”是项目名称，“文化”是元数据名称。\r\n            项目名称是可选的。\r\n            \r\n","\r\n            Removes a project, using the specified full path to use as the key to find it.\r\n            This is specified separately in case the project was previously stored under a different path.\r\n            ":"\r\n            使用指定的完整路径来删除项目，将其用作查找的密钥。\r\n            这是单独指定的，以防该项目先前存储在不同的路径下。\r\n            \r\n","\r\n            Appends the provided child.\r\n            Does not dirty the project, does not add an element, does not set the child's parent,\r\n            and does not check the parent's future siblings and parent are acceptable.\r\n            Called during project load, when the child can be expected to \r\n            already have a parent and its element is already connected to the\r\n            parent's element.\r\n            All that remains is to set FirstChild/LastChild and fix up the linked list.\r\n            ":"\r\n            附加提供的孩子。\r\n            不脏项目，不会添加元素，没有设置孩子的父母，\r\n            并且不检查父母的未来兄弟姐妹和父母是可以接受的。\r\n            在项目负载期间打电话给孩子\r\n            已经有父母，其元素已经连接到\r\n            父母的元素。\r\n            剩下的就是设置第一个孩子/LastChild并修复链接列表。\r\n            \r\n","\r\n            Shuts down the packet pump thread and cleans up associated data.\r\n            ":"\r\n            关闭数据包泵线并清理相关的数据。\r\n            \r\n","The lookup to be used for inference.":"用于推断的查找。\r\n"," against the glob.\r\n                Matching is path aware:\r\n                - slashes are normalized\r\n                - arguments representing relative paths are normalized against the glob's root.\r\n                For example, the glob **/*.cs does not match ../a.cs, since ../a.cs points outside of the glob root.\r\n            \r\n                Returns false if ":" 对抗地球。\r\n                匹配是路径意识：\r\n                 - 斜线已归一化\r\n                 - 代表相对路径的参数针对全球根的归一化。\r\n                例如，由于../a.cs指向Glob root of。\r\n            \r\n                返回false如果\r\n","\r\n            Expected to be called when TaskHostTask is done with host of the given context.\r\n            ":"\r\n            当任务主持台面的主机完成时，预计将被调用。\r\n            \r\n","Cannot find the old value":"找不到旧值\r\n","\r\n            Set a global property at the collection-level,\r\n            and on all projects in the project collection.\r\n            ":"\r\n            在集合级设置全球属性，\r\n            以及项目集合中的所有项目。\r\n            \r\n","The parent build request, if any.":"父构建请求（如果有）。\r\n","\r\n            The logging service has been initialized through a call to initialize component\r\n            ":"\r\n            记录服务已通过调用初始化以初始化组件初始化\r\n            \r\n","\r\n            Removes a metadatum with the specified name.\r\n            Used by TaskItem\r\n            ":"\r\n            删除带有指定名称的元数据。\r\n            由Taskitem使用\r\n            \r\n","\r\n            Adds solution related build event macros and other global properties to the wrapper project\r\n            ":"将相关的构建事件宏和其他全球属性添加到包装器项目中\r\n            \r\n","\r\n            Collection of possible values implied for properties contained in the conditions found on properties,\r\n            property groups, imports, and whens.\r\n            \r\n            For example, if the following conditions existed on properties in a project:\r\n            \r\n            Condition=\"'$(Configuration)|$(Platform)' == 'Debug|x86'\"\r\n            Condition=\"'$(Configuration)' == 'Release'\"\r\n            \r\n            the table would be populated with\r\n            \r\n            { \"Configuration\", { \"Debug\", \"Release\" }}\r\n            { \"Platform\", { \"x86\" }}\r\n            \r\n            This is used by Visual Studio to determine the configurations defined in the project.\r\n            ":"\r\n            收集在属性上发现的条件中包含的属性所隐含的可能值\r\n            财产组，进口和何时。\r\n            \r\n            例如，如果项目中的属性存在以下条件：\r\n            \r\n            条件=“'$（配置）| $（platform）'=='调试| x86'\r\n            条件=“'$（配置）'=='发行'”\r\n            \r\n            桌子会填充\r\n            \r\n            {“ configuration”，{“ debug”，“ release”}}\r\n            {“平台”，{“ x86”}}}\r\n            \r\n            Visual Studio用于确定项目中定义的配置。\r\n            \r\n","\r\n            Do not expand wildcards that match a certain pattern\r\n            ":"\r\n            不要扩大与特定模式相匹配的通配符\r\n            \r\n","\r\n            Generates the sub-toolset version to be used with this toolset.  Sub-toolset version is based on:\r\n            1. If \"VisualStudioVersion\" is set as a property on the toolset itself (global or environment), \r\n               use that. \r\n            2. Otherwise, use the default sub-toolset version for this toolset. \r\n            \r\n            The sub-toolset version returned may be null; if so, that means that no sub-toolset should be used, \r\n            just the base toolset on its own. The sub-toolset version returned may not map to an existing \r\n            sub-toolset.  \r\n            ":"\r\n            生成要与此工具集一起使用的子模式版本。子量表版本基于：\r\n            1.如果“ Visual -Studioversion”设置为工具集本身（全局或环境）上的属性，则\r\n               使用。\r\n            2.否则，为此工具集使用默认的子图表版本。\r\n            \r\n            返回的子量表版本可能为null；如果是这样，这意味着不应使用不使用子图案，\r\n            只是基本工具集。返回的子模式版本可能无法映射到现有的\r\n            子模式。\r\n            \r\n"," is false.\r\n            ":" 是错误的。\r\n            \r\n","\r\n            The event raised when the build request has completed.\r\n            ":"\r\n            构建请求完成后提出的事件。\r\n            \r\n","\r\n            Given a registry location enumerate the registry and find the installed SDKs.\r\n            ":"\r\n            给定注册表位置列举注册表并找到已安装的SDK。\r\n            \r\n","Build event to extract context information from.":"构建事件以从中提取上下文信息。\r\n","\r\n            Gets the escaped value of the provided metadatum.\r\n            ":"\r\n            获取所提供的元数据的逃脱价值。\r\n            \r\n","\r\n            The storage style for this data source.\r\n            ":"\r\n            此数据源的存储样式。\r\n            \r\n","\r\n            Appends a string. No quotes are added.\r\n            This method does not append a space to the command line before executing.\r\n            ":"\r\n            附加字符串。没有添加报价。\r\n            此方法在执行之前不会将空间附加到命令行。\r\n            \r\n","\r\n            Protected constructor used for (de)serialization.\r\n            If we ever add new members to this class, we'll need to update this.\r\n            ":"\r\n            用于（DE）序列化的保护构造函数。\r\n            如果我们在此类中添加新成员，我们需要更新此会员。\r\n            \r\n","\r\n            This request has yielded control of the node while it is running a long-running out-of-process program.  Any number of tasks on a \r\n            node may be in the yielding state.\r\n            ":"\r\n            该请求在运行长期运行的程序外程序时对该节点产生了控制。在\r\n            节点可能处于屈服状态。\r\n            \r\n","Delimiter to put between items in the command line":"定界符在命令行中放置在项目之间\r\n","The path for the configuration":"配置的路径\r\n","\r\n            This constructor only exists to satisfy .NET coding guidelines. Use a rich constructor whenever possible.\r\n            ":"\r\n            该构造函数仅能满足.NET编码指南。尽可能使用丰富的构造函数。\r\n            \r\n","\r\n             Represents a segmented list that is immutable; meaning it cannot be changed once it is created.\r\n             ":"\r\n             代表一个不变的分段列表；这意味着一旦创建就无法更改。\r\n             \r\n","\r\n            Unevaluated semicolon separated list of targets it runs before.\r\n            May be empty string.\r\n            ":"\r\n            未评估的半隆分离了以前运行的目标列表。\r\n            可以是空字符串。\r\n            \r\n","\r\n            Implemtnation of IEqualityComparer.Equals.\r\n            ":"\r\n            IQualityComparer.Equals的植入。\r\n            \r\n","\r\n                Create an ":"\r\n                创建一个\r\n","\r\n            Executes the task using an STA thread.\r\n            ":"\r\n            使用STA线程执行任务。\r\n            \r\n"," representing the structure of an item expression.":" 表示项目表达式的结构。\r\n","\r\n            Reads the application configuration file.\r\n            NOTE: this is abstracted into a method to support unit testing GetToolsetDataFromConfiguration().\r\n            Unit tests wish to avoid reading (nunit.exe) application configuration file.\r\n            ":"\r\n            读取应用程序配置文件。\r\n            注意：将其抽象成一种方法来支持单元测试getToolSetDataFromConfiguration（）。\r\n            单位测试希望避免阅读（Nunit.exe）应用程序配置文件。\r\n            \r\n","The build request.":"构建请求。\r\n","\r\n            Tries to parse the \"version\" out of a platformMoniker. \r\n            ":"\r\n            试图从Platformentmoniker中解析“版本”。\r\n            \r\n","\r\n            Returns a new instance of ProjectRootElement that is affiliated with the same ProjectRootElementCache.\r\n            ":"\r\n            返回与同一ProjectRootelementCache相关的ProjectRootelement的新实例。\r\n            \r\n","\r\n            PRE collection. \r\n            ":"\r\n            预集合。\r\n            \r\n","\r\n            Forces the task to stop building the remaining projects as soon as any of\r\n            them fail.\r\n            ":"\r\n            迫使任务尽快停止构建其余项目\r\n            他们失败了。\r\n            \r\n","\r\n            A description of this scope, for error checking\r\n            ":"\r\n            此范围的描述，以进行错误检查\r\n            \r\n","\r\n            The request id known to the node.\r\n            ":"\r\n            节点已知的请求ID。\r\n            \r\n","\r\n            Raises the OnNewConfigurationRequest event.\r\n            ":"\r\n            举起OnnewConfigurationRequest活动。\r\n            \r\n","\r\n            Expands a single item metadata, which may be qualified with an item type.\r\n            ":"\r\n            扩展单个项目元数据，该元数据可能具有项目类型的资格。\r\n            \r\n","\r\n            The total time of all of the references.\r\n            ":"\r\n            所有参考的总时间。\r\n            \r\n","\r\n            The dictionary that maps the root of the tlog filenames to the dependencytable built from their content\r\n            ":"\r\n            将tlog文件名映射到根据其内容构建的可依赖性的词典\r\n            \r\n","\r\n            Translates the sub-toolset.\r\n            ":"\r\n            翻译子模式。\r\n            \r\n","\r\n            Handle custom build events\r\n            ":"\r\n            处理自定义构建事件\r\n            \r\n","\r\n            Reads a plan for the specified submission Id.\r\n            ":"\r\n            读取指定提交ID的计划。\r\n            \r\n","\r\n            DisplayName found in the sdk manifest\r\n            ":"\r\n            SDK清单中的DisplayName\r\n            \r\n","\r\n            Gets or sets the logging context.\r\n            ":"\r\n            获取或设置记录上下文。\r\n            \r\n","\r\n            Arguments for task finished events\r\n            ":"\r\n            任务完成事件的论点\r\n            \r\n","\r\n            Initialize the factory.\r\n            ":"\r\n            初始化工厂。\r\n            \r\n","\r\n            Expands bare metadata expressions, like %(Compile.WarningLevel), or unqualified, like %(Compile).\r\n            ":"扩展裸露的元数据表达式，例如％（compile.warninglevel）或不合格，例如％（compile）。\r\n            \r\n","\r\n            Should the target output items be displayed\r\n            ":"应该显示目标输出项目\r\n            \r\n"," owning this argument to make sense.\r\n            ":" 拥有这个论点是有道理的。\r\n            \r\n","\r\n            Iterates through the set of available nodes and checks whether any of them is \r\n            capable of servicing this request or any of the requests that it is blocked \r\n            by (regardless of whether they are currently available to do so).\r\n            ":"\r\n            通过一组可用节点进行迭代，并检查它们是否是\r\n            能够维修此请求或任何被阻止的请求\r\n            通过（无论目前是否可以使用它们）。\r\n            \r\n","True if the target builder should stop processing the current target stack when this target is complete.":"正确，如果目标构建器应在完成该目标完成后停止处理当前目标堆栈。\r\n","\r\n            Returns all of the toolsets.\r\n            ":"\r\n            返回所有工具集。\r\n            \r\n","\r\n            Retrieves the Evaluation id.\r\n            ":"\r\n            检索评估ID。\r\n            \r\n","The string to wrap":"包裹的字符串\r\n","\r\n            Constructor for serialization.\r\n            ":"\r\n            序列化的构造函数。\r\n            \r\n","\r\n            Constructor helper to load an XmlDocumentWithLocation from an XmlReader.\r\n            May throw InvalidProjectFileException.\r\n            Never returns null.\r\n            ":"\r\n            构造辅助助手从XMLReader加载XMLDocumentWithLocation。\r\n            可能会抛出无效的fileException。\r\n            永远不会返回零。\r\n            \r\n","\r\n             Maintains a cache of all loaded ProjectRootElement instances for design time purposes.\r\n            \r\n             This avoids the LRU cache and class-wide lock used within ProjectRootElementCache and replaces these mechanisms\r\n             with a single ConcurrentDictionary as a tradeoff for increased performance when evaluating projects in parallel.\r\n             As a tradeoff, this implementation uses more memory, and is not intended for use when the cache needs to be\r\n             long-lived e.g. within Visual Studio.\r\n            \r\n             SimpleProjectRootElementCache is not currently intended for use outside of evaluation. Several code paths\r\n             executed within a full build take a hard dependency on the strong/weak reference behavior used within\r\n             ProjectRootElementCache, and further investigation is required to determine the best way to hide these behind\r\n             an abstraction. As such, any method unused by evaluation will throw NotImplementedException.\r\n             ":"\r\n             为了设计时间目的，维护所有已加载的ProjectRootelement实例的缓存。\r\n            \r\n             这避免了projectRootelementCache中使用的LRU缓存和全班锁，并取代了这些机制\r\n             在同步评估项目时，单个同时限制是提高绩效的权衡。\r\n             作为一个权衡，此实现使用更多的内存，并且在缓存需要时不打算使用\r\n             长期寿命在Visual Studio中。\r\n            \r\n             当前，Simple ProjectRootelementCache目前尚未在评估之外使用。几个代码路径\r\n             在完整的版本中执行，对内部使用的强/弱参考行为有很大的依赖\r\n             ProjectRootelementCache需要进一步调查，以确定将这些隐藏在后面的最佳方法\r\n             抽象。因此，任何评估未使用的方法都会抛出NotimplempementedException。\r\n             \r\n","\r\n            Expand the body of the property, including any functions that it may contain.\r\n            ":"\r\n            展开属性的主体，包括它可能包含的任何函数。\r\n            \r\n","\r\n            Table of implicit imports by document.  The list per document contains both top and bottom imports.\r\n            ":"\r\n            按文档列出的隐式导入表。  每个文档的列表包含顶部和底部导入。\r\n            \r\n","\r\n            End column number\r\n            ":"\r\n            末端列号\r\n            \r\n","\r\n            The forwarding logger records.\r\n            ":"\r\n            转发记录器记录。\r\n            \r\n","\r\n            Applies the state from the specified instance to the loaded instance.  This overwrites the items and properties.\r\n            ":"\r\n            将从指定实例的状态应用于加载实例。这覆盖了项目和属性。\r\n            \r\n","\r\n            Determines if the target needs to be built/rebuilt/skipped if it has discrete outputs.\r\n            ":"\r\n            确定目标是否具有离散输出，是否需要构建/重建/跳过。\r\n            \r\n","\r\n            Build up a list of all parameters on the task, including those in any Output tags,\r\n            in order to find batchable metadata references\r\n            ":"\r\n            建立任务上所有参数的列表，包括任何输出标签中的参数，\r\n            为了查找可批处理的元数据参考\r\n            \r\n",". Atleast one property should be specified.\r\n            ":"。至少应指定一个属性。\r\n            \r\n","\r\n            Initialize a parented ProjectUsingTaskElement\r\n            ":"初始化父母的projectTaskelement\r\n            \r\n","\r\n            Constructor taking the immutable global properties and tools version.\r\n            Tools version may be null.\r\n            ":"\r\n            构造函数采用不变的全球属性和工具版本。\r\n            工具版本可能为空。\r\n            \r\n","Enumerator this class should proxy":"枚举者此类应该代理\r\n","\r\n            Item type, for example \"Compile\"\r\n            ":"\r\n            项目类型，例如“编译”\r\n            \r\n","\r\n            (or its derived classes) refer to a property that is not specified, then an new\r\n            Category is generated for the same. If not category is specified for the property, then\r\n            the property is placed in the \"General\" category.\r\n            The list of categories is exactly as specified in the Xaml file. The auto-generated\r\n            categories come (in no strict order) after the specified categories.\r\n            ":"\r\n            （或其派生类）参考未指定的属性，然后是新的\r\n            类别是相同的。如果不是为属性指定类别，则\r\n            该属性放在“常规”类别中。\r\n            类别列表完全如XAML文件中指定。自动生成\r\n            在指定类别之后（无严格的顺序）进行类别。\r\n            \r\n","\r\n            Creates an instance of the PropertyTrackingEvaluatorDataWrapper class.\r\n            ":"\r\n            创建一个属性TrackingEvaluatorDatawrapper类的实例。\r\n            \r\n","\r\n            This is a private nested class, exposed only through the Expander class.\r\n            That allows it to hide its private methods even from Expander.\r\n            ":"\r\n            这是一个私人嵌套班，仅通过扩展阶层暴露。\r\n            这使其甚至可以从扩展器中隐藏其私人方法。\r\n            \r\n","\r\n            This field is mandatory and culture invariant. The value of this field cannot be set to the empty string. \r\n            ":"\r\n            该领域是强制性的，文化不变。该字段的值不能设置为空字符串。\r\n            \r\n","\r\n            Initializes the logger by subscribing to events of IEventSource\r\n            ":"\r\n            通过订阅ieventsource事件来初始化记录器\r\n            \r\n","\r\n            The ExecuteTask method takes a task as specified by XML and executes it.  This procedure is comprised\r\n            of the following steps:\r\n            1. Loading the Task from its containing assembly by looking it up in the task registry\r\n            2. Determining if the task is batched.  If it is, create the batches and execute each as if it were a non-batched task\r\n            3. If the task is not batched, execute it.\r\n            4. If the task was batched, hold on to its Lookup until all of the natches are done, then merge them.\r\n            ":"\r\n            Executetask方法执行XML指定的任务并执行它。此过程包括\r\n            以下步骤：\r\n            1.通过在任务注册表中查找任务从其包含的组件中加载任务\r\n            2.确定任务是否批量。如果是这样，创建批处理并执行每个批次，就好像是一个非批处理任务\r\n            3.如果未批处理任务，请执行。\r\n            4.如果任务被分组，请保持查找，直到完成所有表，然后将其合并。\r\n            \r\n","\r\n            Evaluate as a Version\r\n            ":"\r\n            评估为版本\r\n            \r\n","The metadatum to retrieve.":"取回的元数据。\r\n","\r\n            The project to which item instances created by this factory will belong.\r\n            ":"\r\n            该工厂创建的项目实例将属于该项目。\r\n            \r\n","\r\n            Initialize a parented ProjectWhenElement\r\n            ":"\r\n            初始化育儿项目\r\n            \r\n","\r\n            The element location of the transform expression\r\n            ":"\r\n            转换表达式的元素位置\r\n            \r\n","\r\n            Construct a new EvaluatorMetadata\r\n            ":"\r\n            构建一个新的评估\r\n            \r\n","\r\n            Location of the assembly name attribute, if any\r\n            ":"\r\n            汇编名称属性的位置，如果有的话\r\n            \r\n","\r\n            Handler which is called when a project is added to the RootElementCache of this project collection. We then fire an event indicating that a project was added to the collection itself.\r\n            ":"\r\n            当项目被添加到该项目集合的rootelementCache中时称为处理程序。然后，我们开火，表明项目本身已添加到集合本身中。\r\n            \r\n","\r\n            The target was part of the parent's DependsOn list.\r\n            ":"目标是父母依赖子列表的一部分。\r\n            \r\n","\r\n            The position in the original string where the first character of the captured\r\n            substring was found.\r\n            ":"\r\n            在原始字符串中的位置，捕获的第一个字符\r\n            发现了底条。\r\n            \r\n","\r\n            Wrapper of two tables for a convenient method return value.\r\n            ":"\r\n            两张表的包装器，用于方便的方法返回值。\r\n            \r\n","This type is backed by segmented arrays to avoid using the Large Object Heap without impacting algorithmic\r\n             complexity.":"这种类型由分段阵列支持，以避免使用大对象堆而不影响算法\r\n             复杂。\r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n            Finds item group with no condition with at least one item of same type, or else adds a new item group;\r\n            adds the item to that item group with items of the same type, ordered by include.\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n            找到至少具有相同类型的项目的项目组，或者添加一个新项目组；\r\n            将项目添加到该项目组中，其中包括相同类型的项目，由Inclupher订购。\r\n            \r\n","\r\n            Table of metadata useable to expand expressions\r\n            ":"\r\n            可用于扩展表达式的元数据表\r\n            \r\n","\r\n            A class factory for ProjectItems.\r\n            ":"\r\n            用于投影的班级工厂。\r\n            \r\n","\r\n            Backing XML property.\r\n            ":"\r\n            支持XML属性。\r\n            \r\n","The configuration id to use.":"要使用的配置ID。\r\n","Input to check for drive pattern with slash.":"输入以检查使用Slash的驱动器模式。\r\n","\r\n            Retrieves all of the ready requests on the specified node.\r\n            ":"\r\n            检索指定节点上的所有准备请求。\r\n            \r\n"," Adds the target to fetch solution configuration contents for given configuration|platform combo. ":" 将目标添加到获取解决方案配置内容的给定配置|平台组合。\r\n","The node id from which the packet was received.":"收到数据包的节点ID。\r\n","\r\n            Store the path for the 64-bit MSBuildTaskHost so that we don't have to keep re-calculating it.\r\n            ":"\r\n            存储64位MSBUILDTASKHOST的路径，以便我们不必继续重新计算它。\r\n            \r\n"," object. This operation marks the \r\n            object as dirty (see ":" 目的。此操作标志着\r\n            对象脏（请参阅\r\n","\r\n            Gets the empty element location.\r\n            This is not to be used when something is \"missing\": that should have a null location.\r\n            It is to be used for the project location when the project has not been given a name.\r\n            In that case, it exists, but can't have a specific location.\r\n            ":"\r\n            获取空元素位置。\r\n            当某物“缺少”时，不使用这种情况：应该具有空位置。\r\n            当项目未获得名称时，它将用于项目位置。\r\n            在这种情况下，它存在，但不能具有特定位置。\r\n            \r\n","The gap glob":"差距地球\r\n","\r\n            Whether or not we need to wait for results before completing this request.\r\n            ":"\r\n            我们是否需要在完成此请求之前等待结果。\r\n            \r\n","\r\n            This object is IMMUTABLE, so that it can be passed around arbitrarily.\r\n            DO NOT make these objects any larger. There are huge numbers of them and they are transmitted between nodes.\r\n            ":"\r\n            该对象是不可变的，因此可以任意传递。\r\n            不要使这些对象更大。它们中有很多，它们在节点之间传输。\r\n            \r\n","\r\n            Raised for BuildMessageEventArgs instances\r\n            ":"\r\n            为buildMessageEventargs实例提出\r\n            \r\n"," if this is an in-process node, otherwise ":" 如果这是一个过程中的节点，则\r\n"," that ignores \r\n            both ":" 忽略了\r\n            两个都\r\n","\r\n            Pointless comment about constructor.\r\n            ":"\r\n            关于构造函数的毫无意义的评论。\r\n            \r\n","\r\n            Set of properties which are null during expansion\r\n            ":"\r\n            在扩展过程中无效的一组属性\r\n            \r\n","The platform string. Must be a member of ":"平台字符串。必须是\r\n","\r\n            Returns a property with the specified name, or null if it was not found.\r\n            Name is the segment of the provided string with the provided start and end indexes.\r\n            ":"\r\n            返回带有指定名称的属性，如果找不到该属性，则返回null。\r\n            名称是提供的字符串的段，并提供提供的开始和端索引。\r\n            \r\n","\r\n            Thread proc which runs the in-proc node.\r\n            ":"\r\n            线程proc运行程序内节点。\r\n            \r\n","\r\n            Intrinsic function that returns the number of items in the list.\r\n            ":"\r\n            返回列表中项目数的固有函数。\r\n            \r\n","\r\n            Replace all slashes to the OS slash, collapse multiple slashes into one, trim trailing slashes\r\n            ":"\r\n            将所有斜线更换为操作系统斜线，将多个斜线倒入一个，修剪后斜线\r\n            \r\n","The element to act as a template to copy from.":"充当要复制的模板的元素。\r\n","\r\n            Skip all characters until we find the matching quote character\r\n            ":"\r\n            跳过所有字符，直到我们找到匹配的报价字符\r\n            \r\n","\r\n            Adds the specified configuration as a reference.\r\n            ":"\r\n            将指定的配置添加为参考。\r\n            \r\n","\r\n            Gets the value of the parameter with the specified name,\r\n            or empty string if it is not present.\r\n            ":"\r\n            用指定名称获取参数的值\r\n            如果不存在空字符串，则为空字符串。\r\n            \r\n","\r\n            Metadata directly on the item, if any.\r\n            Does not include metadata from item definitions.\r\n            Does not include built-in metadata.\r\n            Never returns null.\r\n            ":"\r\n            直接在物品上的元数据（如果有）。\r\n            不包括项目定义中的元数据。\r\n            不包括内置元数据。\r\n            永远不会返回零。\r\n            \r\n","\r\n            Visual Studio Dev12\r\n            ":"\r\n            Visual Studio Dev12\r\n            \r\n","\r\n            Get a list of all the items in the project of the specified\r\n            type, or an empty list if there are none.\r\n            This is a read-only list.\r\n            ":"\r\n            获取指定项目中所有项目的清单\r\n            类型或一个空列表，如果没有。\r\n            这是只读列表。\r\n            \r\n","\r\n            Sets the component host.\r\n            ":"\r\n            设置组件主机。\r\n            \r\n","\r\n            The name of the task this factory can create.\r\n            ":"\r\n            该工厂可以创建的任务名称。\r\n            \r\n","\r\n            Get environment block\r\n            ":"\r\n            获取环境块\r\n            \r\n","\r\n            Tests whether a given project IS or IMPORTS some given project xml root element.\r\n            ":"\r\n            测试给定的项目是还是导入一些给定的项目XML根元素。\r\n            \r\n","true, if specified type is a logger":"是的，如果指定的类型是记录器\r\n","\r\n            Contails all of the items which have been removed at this level in the Lookup\r\n            ":"\r\n            在查找中在此级别上删除的所有项目\r\n            \r\n"," to send the configuration, otherwise ":" 发送配置，否则\r\n","\r\n            Returns the toolsets this ProjectCollection knows about.\r\n            ":"\r\n            返回该项目收获所知道的工具集。\r\n            \r\n","\r\n            Any immediately previous metadatum (from item definition or item) that was overridden by this one during evaluation.\r\n            This would include all metadata with the same name that lie above in the logical\r\n            project file, who are on item definitions of the same type, and whose conditions evaluated to true.\r\n            If this metadatum is on an item, it would include any previous metadatum with the same name on the same item whose condition\r\n            evaluated to true, and following that any item definition metadata.\r\n            If there are none above this is null.\r\n            If the project has not been reevaluated since the last modification this value may be incorrect.\r\n            ":"\r\n            在评估期间，该元数据直接以前的元数据（从项目定义或项目中）被覆盖。\r\n            这将包括所有元数据，其名称与逻辑上的上方相同\r\n            项目文件，同一类型的项目定义，并评估为true的条件。\r\n            如果此元数据在物品上，它将包括任何以前的元数据\r\n            评估为true，然后遵循任何项目定义元数据。\r\n            如果上面没有，则无效。\r\n            如果未重新评估项目，则该值可能不正确。\r\n            \r\n","\r\n            The node process.\r\n            ":"\r\n            节点过程。\r\n            \r\n",". This is overriden by any\r\n            data source defined locally for a property. \r\n            ":"。这是任何人都超越\r\n            数据源为属性本地定义。\r\n            \r\n","The partial build result on which we are blocked.":"我们被阻止的部分构建结果。\r\n","\r\n            Event is a TargetSkippedEventArgs\r\n            ":"\r\n            事件是Targetskippedeventargs\r\n            \r\n","\r\n            MsBuildOverrideTasksPath attribute on msbuildToolsets element, specifying the path to find msbuildOverrideTasks files\r\n            ":"\r\n            MSBUILDTOOMSETS元素上的MSBUILDOVERRIDETASKSPATH属性，指定查找MSBUILDOVERRIDETETASKS文件的路径\r\n            \r\n","\r\n            The highest wave in the current rotation of Change Waves.\r\n            ":"\r\n            当前变化波旋转中的最高波。\r\n            \r\n","\r\n            Removes the specified target from the instance.\r\n            ":"\r\n            从实例中删除指定的目标。\r\n            \r\n","\r\n            Deserializes and routes a packer to the appropriate handler.\r\n            ":"\r\n            应对包装器的应对处理程序，并将其路由到适当的处理程序。\r\n            \r\n","\r\n            The reason that we are logging this entry\r\n            ":"\r\n            我们要记录此条目的原因\r\n            \r\n","\r\n            Raised when an unhandled exception occurs in the engine.\r\n            ":"\r\n            当发动机中发生未经治疗的例外时，会提出。\r\n            \r\n","Type of the items provided":"提供的项目类型\r\n"," but also provides the match groups for the glob parts\r\n            ":"但也提供了全球零件的比赛组\r\n            \r\n","The translator to use for the elements in the array.":"用于数组中元素的翻译器。\r\n","\r\n            A wrapper over char[].\r\n            ":"\r\n            char []的包装纸。\r\n            \r\n","\r\n            Gets items of the specified type.\r\n            For internal use.\r\n            ":"\r\n            获取指定类型的项目。\r\n            用于内部用途。\r\n            \r\n","\r\n            A virtual callstack frame for the interpreter. \r\n            This is created by calls to EnterState and LeaveState.\r\n            ":"\r\n            解释器的虚拟呼号框架。\r\n            这是由呼叫和利用的呼吁创建的。\r\n            \r\n","\r\n             When this flag is present and the project has previously been built on a node whose affinity is\r\n             incompatible with the affinity this request requires, we will ignore the project state (but not\r\n             target results) that were previously generated.\r\n             ":"\r\n             当存在此标志并且该项目以前已建立在一个亲和力的节点上\r\n             与本请求要求的亲和力不兼容，我们将忽略项目状态（但不是\r\n             目标结果）先前生成的。\r\n             \r\n","The list of target names that are the subset of results that should be returned.":"目标名称的列表是应该返回的结果的子集。\r\n","\r\n            The event source which will have events raised from the buld manager.\r\n            ":"\r\n            活动来源将从大型经理提出活动。\r\n            \r\n","The new dictionary.":"新词典。\r\n"," must be defined for the definition\r\n            of the ":" 必须为定义定义\r\n            的\r\n","The request to send.":"发送请求。\r\n","\r\n            Logs an error using the specified resource string. \r\n            If the message has an error code prefixed to it, the code is extracted and logged with the message. If a help keyword\r\n            prefix has been provided, a help keyword for the host IDE is also logged with the message. The help keyword is\r\n            composed by appending the string resource name to the prefix.\r\n            \r\n            A task can provide a help keyword prefix either via the Task (or TaskMarshalByRef) base class constructor, or the\r\n            Task.HelpKeywordPrefix (or AppDomainIsolatedTask.HelpKeywordPrefix) property.\r\n            \r\n            Thread safe.\r\n            ":"\r\n            使用指定的资源字符串记录错误。\r\n            如果消息具有前缀的错误代码，则将提取并记录该消息。如果帮助关键字\r\n            已经提供了前缀，也记录了该消息的主机IDE的帮助关键字。帮助关键字是\r\n            通过将字符串资源名称附加到前缀中来组成。\r\n            \r\n            任务可以通过任务（或taskmarshalbyref）基类构造函数或\r\n            task.helpkeywordprefix（或app domainisolatedTask.helpkeywordprefix）属性。\r\n            \r\n            线程安全。\r\n            \r\n","Input item name (can be null)":"输入项目名称（可以为null）\r\n","\r\n            Callback for event raised when a request is resumed\r\n            ":"\r\n            恢复请求时提出的事件回调\r\n            \r\n","\r\n            Gets the original project name with the parent project as it is declared in the solution file, e.g. SolutionFolder\\SubSolutionFolder\\Project.Name\r\n            ":"\r\n            在解决方案文件中声明的情况下，获取带有父项目的原始项目名称，例如solutionFolder \\ substolutionFolder \\ project.name\r\n            \r\n","\r\n            Default constructor. Needed for deserializtion from a persisted format.\r\n            ":"\r\n            默认构造函数。从持续的格式中需要避难所。\r\n            \r\n","\r\n            Location of the keepDuplicates attribute, if any.\r\n            ":"\r\n            保留属性的位置（如果有）。\r\n            \r\n","\r\n            Name of the property.\r\n            Cannot be set.\r\n            ":"\r\n            属性的名称。\r\n            无法设置。\r\n            \r\n","ItemDefinition":"itemDefinition\r\n","\r\n            A global counter used to ensure each project version is distinct from every other.\r\n            ":"\r\n            用于确保每个项目版本的全局计数器都与众不同。\r\n            \r\n","\r\n            Enumeration of the levels of detail of an event log.\r\n            ":"\r\n            事件日志细节级别的枚举。\r\n            \r\n","\r\n            Creates an endpoint pair\r\n            ":"\r\n            创建端点对\r\n            \r\n","\r\n            The node provider for out-of-proc nodes.\r\n            ":"\r\n            传播节点的节点提供商。\r\n            \r\n","\r\n            The mapping of targets and tasks to host objects.\r\n            ":"\r\n            目标和任务映射到主机对象。\r\n            \r\n","\r\n            Logs that a project build has started\r\n            ":"\r\n            项目构建已开始的日志\r\n            \r\n","\r\n            The sub category to which this property belongs to.\r\n            ":"\r\n            该属性所属的子类别。\r\n            \r\n","\r\n            The shutdown timeout for the logging thread.\r\n            ":"\r\n            记录线程的关闭超时。\r\n            \r\n","\r\n            Translates an array of objects using an ":"\r\n            使用一个\r\n","\r\n            Constructs a new build result with existing results, but associated with the specified request.\r\n            ":"\r\n            构建具有现有结果的新构建结果，但与指定的请求相关联。\r\n            \r\n","\r\n            Intrinsic function that transforms expressions like the %(foo) in @(Compile->'%(foo)')\r\n            ":"\r\n            @（compile->'％（foo）'）在 @in of the％（foo）之类的表达式中转换表达式的内在函数\r\n            \r\n","If true, a status of \"skipped\" counts as having valid results \r\n            for that target.  Otherwise, a skipped target is treated as equivalent to a missing target.":"如果是真的，“跳过”的状态算作具有有效结果\r\n            对于那个目标。否则，跳过的目标被视为等同于缺失的目标。\r\n","\r\n            Properties that should be associated with the Toolset.\r\n            May be null, in which case an empty property group will be used.\r\n            ":"\r\n            应与工具集关联的属性。\r\n            可能为null，在这种情况下将使用一个空属性组。\r\n            \r\n","\r\n            ProjectItemDefinitionElement class represents the Item Definition element in the MSBuild project.\r\n            ":"\r\n            ProjectItemDefinitionElement类代表MSBUILD项目中的项目定义元素。\r\n            \r\n","\r\n            Block type\r\n            ":"\r\n            块类型\r\n            \r\n","This is required because AssemblyName is not Serializable on .NET Core.":"这是必需的，因为汇编名称在.NET核心上不可序列化。\r\n","\r\n            Returns the corresponding property name - eg. \"$(MSBuildExtensionsPath32)\"\r\n            ":"\r\n            返回相应的属性名称 - 例如。 “ $（msbuildextensionspath32）””\r\n            \r\n","\r\n            The loggers.\r\n            ":"\r\n            伐木者。\r\n            \r\n","\r\n            Retrieves all of the unscheduled requests.\r\n            ":"\r\n            检索所有计划中的所有请求。\r\n            \r\n","\r\n            The default insertion behavior.\r\n            ":"\r\n            默认插入行为。\r\n            \r\n","Xml reader to read project from.":"XML阅读器从中读取项目。\r\n","\r\n            Semicolon separated list of targets it runs before\r\n            ":"\r\n            半分离的目标列表之前运行的目标列表\r\n            \r\n","\r\n            This is an implementation of INodeEndpoint for in-proc nodes.  This endpoint can use either\r\n            synchronous or asynchronous packet processing methods.  When synchronous processing methods are\r\n            used, the SendData method will cause the OnDataReceived event on the receiving endpoint to be called\r\n            on the same thread, blocking until the handler returns.  The asynchronous method more closely emulates\r\n            the way other kinds of endpoints work, as the recipient processes the packet on a different thread\r\n            than that from which the packet originated, but with the cost of the extra thread.\r\n            ":"\r\n            这是对程序内节点的Inodeendpoint的实现。此端点可以使用\r\n            同步或异步数据包处理方法。当同步处理方法为\r\n            用过，senddata方法将导致接收端点上的ondatareceived事件被调用\r\n            在同一线程上，阻止直到处理程序返回。异步方法更紧密地模拟\r\n            当收件人在其他线程上处理数据包时，其他类型的端点的工作方式\r\n            比数据包起源于那个，但额外的线程成本。\r\n            \r\n",".  If an empty set, all warnings are treated as errors.\r\n            ":"。如果一个空集，则所有警告都被视为错误。\r\n            \r\n","\r\n            Indicates whether the specified file-spec comprises exactly \"\\\\server\\share\" (with no trailing characters).\r\n            ":"\r\n            指示指定的文件规格是否完全包含“ \\\\ server \\ share”（没有落后字符）。\r\n            \r\n","\r\n            Requests CPU resources.\r\n            ":"\r\n            请求CPU资源。\r\n            \r\n","\r\n            Define the methods needed to intern something.\r\n            ":"\r\n            定义实习所需的方法。\r\n            \r\n","\r\n            InitializeLifetimeService is called when the remote object is activated.\r\n            This method will determine how long the lifetime for the object will be.\r\n            ":"\r\n            激活远程对象时，调用initializeLifeTimesService。\r\n            此方法将确定对象的寿命要多长时间。\r\n            \r\n","\r\n            Name of the tools version\r\n            ":"\r\n            工具版本的名称\r\n            \r\n","\r\n            Indicates that there are partial results (project producing the result is still running) which can be used to unblock this request.  Updates the relationships between requests.\r\n            ":"\r\n            表明有部分结果（生产结果仍在运行），可用于解除此请求。更新请求之间的关系。\r\n            \r\n","\r\n            Provide access to the write hander delegate so that it can be redirected\r\n            if necessary (e.g. to a file)\r\n            ":"\r\n            提供对写入者委托的访问权限，以便可以重定向\r\n            如有必要（例如，到文件）\r\n            \r\n","\r\n            Removes the specified property.\r\n            Property must be associated with this project.\r\n            Property must not originate from an imported file.\r\n            Returns true if the property was in this evaluated project, otherwise false.\r\n            As a convenience, if the parent property group becomes empty, it is also removed.\r\n            Updates the evaluated project, but does not affect anything else in the project until reevaluation. For example,\r\n            if \"p\" is removed, it will be removed from the evaluated project, but \"q\" which is evaluated from \"$(p)\" will not be modified until reevaluation.\r\n            This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state.\r\n            ":"\r\n            删除指定的属性。\r\n            属性必须与此项目相关联。\r\n            属性不得起源于导入的文件。\r\n            如果该属性在此评估项目中，则返回为true，否则为错误。\r\n            为了方便起见，如果父属性组变为空，则也将其删除。\r\n            更新评估的项目，但在重新评估之前不会影响项目中的其他任何内容。例如，\r\n            如果删除“ P”，将从评估的项目中删除，但是“ Q”将从“ $（p）”中进行评估，直到重新评估。\r\n            这是一种方便，可以理解，不一定会将项目处于完全一致的状态。\r\n            \r\n","The type of item for which we are doing evaluation.":"我们进行评估的项目类型。\r\n","Message to log":"消息记录\r\n","\r\n            Indicates that a document's entries should be removed.\r\n            If document is unknown, does nothing.\r\n            Complexity proportional to the number of strings in the document,\r\n            if the document is anywhere in the cache, otherwise O(1).\r\n            ":"\r\n            表示应删除文档的条目。\r\n            如果文档未知，则什么也不做。\r\n            复杂性与文档中的字符串数成正比，\r\n            如果该文档在缓存中的任何地方，则否（1）。\r\n            \r\n","\r\n            Gets the names of all values underneath this registry key\r\n            ":"\r\n            获取此注册表密钥下方所有值的名称\r\n            \r\n","\r\n            We need a static constructor to retrieve the running ProcessorArchitecture that way we can\r\n            avoid using optimized code that will not run correctly on IA64 due to alignment issues\r\n            ":"\r\n            我们需要一个静态构造函数来检索以下方式\r\n            避免使用由于对齐问题而在IA64上无法正确运行的优化代码\r\n            \r\n","\r\n            ExternalProjectsProvider helpers\r\n            ":"\r\n            外部Projjectsprovider助手\r\n            \r\n","\r\n            Gets or sets the node on which this configuration's results are stored.\r\n            ":"\r\n            获取或设置该配置结果存储的节点。\r\n            \r\n","\r\n            Min OS version from manifest\r\n            ":"\r\n            清单的最小操作系统版本\r\n            \r\n","\r\n            Type of delegate used by the debugger worker thread to call back to invoke an island\r\n            ":"\r\n            调试器工人线程用来回电以调用岛屿的代表类型\r\n            \r\n","foreground color":"前景色\r\n","true if the task can be created by the factory, false if it cannot be created":"如果可以由工厂创建任务，则为false，如果无法创建该任务\r\n","\r\n            The context under which these results have been cached.\r\n            ":"\r\n            这些结果被缓存的背景。\r\n            \r\n","File information which describes where the error happened":"描述错误发生何处的文件信息\r\n"," returns, otherwise null.\r\n            ":" 返回，否则为空。\r\n            \r\n","\r\n            Represents a collection of all node providers in the system.  Reports events concerning\r\n            the topology of the system and provides a means to send and receive data to nodes.\r\n            ":"\r\n            代表系统中所有节点提供商的集合。报告有关的事件\r\n            系统的拓扑结构，并提供了将数据发送和接收到节点的方法。\r\n            \r\n","\r\n            Invokes the OnBuildRequestCompleted event\r\n            ":"\r\n            调用OnBuildRequestCompleted活动\r\n            \r\n","A new project instance":"一个新的项目实例\r\n","\r\n            Evaluates a function expression, such as \"Exists('foo')\"\r\n            ":"\r\n            评估函数表达式，例如“存在（'foo'）”\r\n            \r\n","\r\n            Used for signalling when the tool writes to stderr.\r\n            ":"\r\n            该工具将其写入stderr时，用于发信号。\r\n            \r\n","\r\n            Item definition metadata encountered during evaluation. These are read during the second evaluation pass.\r\n            Unlike those returned by the ItemDefinitions property, these are ordered, and include any metadata that\r\n            were subsequently overridden by others with the same name and item type. It does not include any\r\n            elements whose conditions did not evaluate to true.\r\n            ":"\r\n            评估期间遇到的项目定义元数据。这些是在第二次评估通行证中读取的。\r\n            与ItemDefinitions属性返回的那些不同，这些是订购的，并包括任何元数据\r\n            随后被其他名称和项目类型的其他人覆盖。它不包括任何\r\n            条件未评估为真的元素。\r\n            \r\n","The keyword string, or null.":"关键字字符串或null。\r\n","\r\n            This allows an explicit typecast from a \"TaskItem\" to a \"string\", returning the escaped ItemSpec for this item.\r\n            ":"\r\n            这允许从“ taskitem”到“字符串”的明确打字，并返回此项目的Escaped ItemSpec。\r\n            \r\n","The project file to use for this entry point":"用于此入口点的项目文件\r\n","\r\n            The work unit failed.\r\n            ":"\r\n            工作单位失败了。\r\n            \r\n","\r\n            Instructs the MSBuild engine to build one or more project files whose locations are specified by the\r\n            ":"\r\n            指示MSBUILD引擎构建一个或多个项目文件，其位置是由\r\n            \r\n","\r\n            Also, define the characters that we know for certain need quotes.\r\n            This is partly to document which characters we know can cause trouble\r\n            and partly as a sanity check against a bug creeping in.\r\n            ":"\r\n            另外，定义我们知道某些需求报价的字符。\r\n            这部分是要记录我们知道哪些角色会引起麻烦\r\n            部分原因是对漏洞的理智检查。\r\n            \r\n","\r\n            Custom scheduler for the SQL folks to solve a performance problem with their builds where they end up with a few long-running \r\n            requests on all but one node, and then a very large number of short-running requests on that one node -- which is by design for \r\n            our current scheduler, but makes it so that later in the build, when these configurations are re-entered with new requests, the \r\n            build becomes essentially serial because so many of the configurations are tied to that one node.  \r\n            \r\n            Fixes that problem by intentionally choosing to refrain from assigning new configurations to idle nodes if those idle nodes already \r\n            have more than their fair share of the existing configurations assigned to them. \r\n            ":"\r\n            SQL人的定制调度程序可以解决他们的构建中的性能问题，最终会有一些长期运行\r\n            除了一个节点以外的所有内容，然后在该节点上发出了大量的短运行请求 - 这是通过设计的\r\n            我们当前的调度程序，但要做，因此在构建中，当这些配置重新输入新请求时，\r\n            构建本质上是串行的，因为许多配置都与该节点相关。\r\n            \r\n            通过故意选择避免将新配置分配给闲置节点，请解决该问题\r\n            在分配给他们的现有配置中拥有不仅仅是公平的份额。\r\n            \r\n","\r\n            If no sub-toolset is specified, this is the default sub-toolset version.  Null == no default\r\n            sub-toolset, just use the base toolset.\r\n            ":"\r\n            如果未指定子图表，则是默认子图表版本。 null ==无默认\r\n            子模式，只需使用基本工具集即可。\r\n            \r\n","\r\n            Called when Engine is done with this logger\r\n            ":"\r\n            使用此记录器完成引擎时调用\r\n            \r\n","\r\n            Should have at least the file name if the containing project has been given a file name,\r\n            even if it wasn't loaded from disk, or has been edited since. That's because we set that\r\n            path on our XmlDocumentWithLocation wrapper class.\r\n            ":"\r\n            如果已将包含的项目给出文件名，则至少应具有文件名。\r\n            即使没有从磁盘上加载或从那以后进行了编辑。那是因为我们设定了\r\n            我们的XmldocumentWithLocation包装器类上的路径。\r\n            \r\n","\r\n            Whether the project file that this target lives in has at least one target\r\n            with a Returns attribute on it.  If so, the default behaviour for all targets\r\n            in the file without Returns attributes changes from returning the Outputs, to\r\n            returning nothing.\r\n            ":"\r\n            该目标持有的项目文件是否至少具有一个目标\r\n            带有返回属性。如果是这样，所有目标的默认行为\r\n            在没有返回属性的文件中，从返回输出的变化，\r\n            什么都没有。\r\n            \r\n","\r\n            Target framework version for the registry key\r\n            ":"\r\n            注册表主题的目标框架版本\r\n            \r\n","\r\n            Returns the hash code for this object.\r\n            ":"\r\n            返回此对象的哈希代码。\r\n            \r\n","\r\n            Returns the project in the collection matching the path, global properties, and tools version provided.\r\n            There can be no more than one match.\r\n            If none is found, returns null.\r\n            ":"\r\n            返回与所提供的路径，全局属性和工具版本相匹配的集合中的项目。\r\n            不超过一场比赛。\r\n            如果找不到，则返回null。\r\n            \r\n","\r\n            Returns the path to the \"bin\" directory of the latest .NET Framework SDK. When targeting .NET 3.5 \r\n            or above, looks in the locations associated with Visual Studio 2010.  If you wish to target \r\n            the .NET Framework SDK that ships with Visual Studio Dev11 or later, please use the override \r\n            that specifies a VisualStudioVersion. \r\n            ":"\r\n            返回最新.NET Framework SDK的“ bin”目录的路径。定位.NET 3.5时\r\n            或以上，查看与Visual Studio 2010相关的位置。如果您想定位\r\n            带有Visual Studio Dev11或更高版本的.NET Framework SDK，请使用Override\r\n            这指定了视觉识别。\r\n            \r\n","\r\n            Private so we can make sure that ":"\r\n            私人，因此我们可以确保\r\n","true if target built successfully":"如果目标成功建造，则为真实\r\n","\r\n            Unblocks an entry which was waiting for a specific global request id.\r\n            ":"\r\n            取消阻止正在等待特定全局请求ID的条目。\r\n            \r\n","\r\n            Expands the properties and items in the specified expression into a list of taskitems.\r\n            ":"\r\n            将指定表达式中的属性和项目扩展到任务列表中。\r\n            \r\n","The Type of the task, or null if it was not found.":"任务的类型，如果找不到该任务。\r\n","\r\n            Set the requested project configuration. \r\n            ":"\r\n            设置请求的项目配置。\r\n            \r\n","\r\n            Flag indicating whether or not the configuration has been loaded before.\r\n            ":"\r\n            标志指示是否已加载配置。\r\n            \r\n","\r\n            Backing XML item.\r\n            Can never be null.\r\n            ":"\r\n            支持XML项目。\r\n            永远不会无效。\r\n            \r\n","\r\n            'Attribute' suffix is for clarity.\r\n            ":"\r\n            “属性”后缀是为了清晰。\r\n            \r\n","\r\n            Returns the metaproject name for a given project.\r\n            ":"\r\n            返回给定项目的Metaproject名称。\r\n            \r\n","\r\n            Location of the include attribute, if any\r\n            ":"\r\n            包括属性的位置，如果有的话\r\n            \r\n","\r\n            Gets the escaped value of the metadatum with the provided name on the provided item definition.\r\n            ":"\r\n            获取元数据的逃逸值，并在提供的项目定义上使用提供的名称。\r\n            \r\n","\r\n            Delegate for loading Xml.  For unit testing only.\r\n            ":"\r\n            委托加载XML。仅用于单元测试。\r\n            \r\n","\r\n            Constructs an entry point with the given project file and global properties.\r\n            ":"\r\n            使用给定的项目文件和全局属性构建入口点。\r\n            \r\n","\r\n            The number of nodes this provider can create.\r\n            ":"\r\n            该提供商可以创建的节点数量。\r\n            \r\n","\r\n            The ID of the last evaluation for this Project.\r\n            A project is always evaluated upon construction and can subsequently get evaluated multiple times via\r\n            ":"\r\n            该项目的最后评估的ID。\r\n            始终在施工时评估一个项目，随后可以通过多次评估\r\n            \r\n","\r\n            Intrinsic function that transforms expressions by invoking methods of System.String on the itemspec\r\n            of the item in the pipeline\r\n            ":"\r\n            通过调用系统的方法来转换表达式的固有函数。\r\n            管道中的项目\r\n            \r\n","\r\n            Evaluates a numeric comparison, such as less-than, or greater-or-equal-than\r\n            Does not update conditioned properties table.\r\n            ":"\r\n            评估数字比较，例如较少或比较较大或比较\r\n            不更新条件属性表。\r\n            \r\n",". Is either ":"。或者是\r\n","\r\n            Creates an item with the specified type and evaluated include.\r\n            Used for making items from \"just strings\" and from expressions like \"@(Compile, ';')\"\r\n            ":"\r\n            使用指定类型创建一个项目，并评估包括。\r\n            用于从“ Just Strings”和诸如“@（compile，';'）”之类的表达式中制作项目\r\n            \r\n","\r\n            Whether task inputs are logged.\r\n            ":"\r\n            是否记录了任务输入。\r\n            \r\n","\r\n            The property name\r\n            ":"\r\n            属性名称\r\n            \r\n","\r\n            MaxPlatformVersion found in the sdk manifest, defaults to 8.0 for framework extension SDKs when manifest does not have this property set\r\n            ":"\r\n            在SDK清单中找到的MaxPlatFormversion，当清单没有此属性设置时，默认为8.0对于框架扩展SDK\r\n            \r\n","The ProjectRootElement whose content was actually changed.":"其内容实际更改的ProjectRootlement。\r\n","\r\n            A new instance of the component should be created with every request.\r\n            ":"每个请求都应创建组件的新实例。\r\n            \r\n","\r\n            Called by the build engine to allow loggers to subscribe to the events they desire.\r\n            ":"\r\n            由Build Engine称为允许伐木者订阅他们想要的事件。\r\n            \r\n","\r\n            The submission is a top level build request entering the BuildManager.\r\n            Sends the request to the scheduler with optional legacy threading semantics behavior.\r\n            ":"\r\n            提交是输入BuildManager的顶级构建请求。\r\n            以可选的遗留线程语义行为将请求发送给调度程序。\r\n            \r\n","True if the objects are not equivalent, false otherwise.":"正确，如果对象不等效，则否则为false。\r\n","The project file which the target was being run in":"目标正在运行的项目文件\r\n","\r\n            If any of the loggers supplied are already attached to the logging service we\r\n            were passed, throws InvalidOperationException.\r\n            ":"\r\n            如果提供的任何登录器已经连接到伐木服务，我们\r\n            通过，抛出无效的exception。\r\n            \r\n","\r\n            Common constructor.\r\n            ":"\r\n            通用构造函数。\r\n            \r\n","\r\n            Evaluate node as boolean\r\n            ":"\r\n            评估节点为布尔值\r\n            \r\n","\r\n            The name of the function.\r\n            ":"\r\n            功能的名称。\r\n            \r\n","\r\n            This cannot be set, as it is used as the key into \r\n            the item's metadata table.\r\n            ":"\r\n            无法设置此设置，因为它被用作键\r\n            该项目的元数据表。\r\n            \r\n","\r\n            Get the registry root to find sdks under. The registry can be disabled if we are in a checked in scenario\r\n            ":"\r\n            获取注册表根以在下面找到SDK。如果我们在场景中进行检查，可以禁用注册表\r\n            \r\n","\r\n            The BuildRequestEntry for which we are building targets.\r\n            ":"\r\n            我们正在建立目标的BuildRequestry。\r\n            \r\n","\r\n            Whether to warn when we set a property for the first time, after it was previously used.\r\n            Default is false, unless MSBUILDWARNONUNINITIALIZEDPROPERTY is set.\r\n            ":"\r\n            是否在先前使用后首次设置属性时要警告。\r\n            默认值为false，除非设置MSBUILDWARNONINITIALIADPROPERTY。\r\n            \r\n","Sub-toolset version to explicitly evaluate the toolset with.  May be null.":"子模式版本以明确评估工具集。可能是无效的。\r\n","\r\n            Gets or sets the value of DefaultTargets. If there is no DefaultTargets, returns empty string.\r\n            If the value is null or empty, removes the attribute.\r\n            ":"\r\n            获取或设置DefaultTargets的值。如果没有defaultTargets，请返回空字符串。\r\n            如果值为空或空为空，请删除属性。\r\n            \r\n","\r\n            It has to include all of these because it's used for batching, which doesn't\r\n            care where the metadata originated.\r\n            ":"\r\n            它必须包括所有这些，因为它用于批处理，这不是\r\n            关心元数据的起源。\r\n            \r\n","Target names to build":"构建目标名称\r\n","\r\n            Determines how many times the batchable object needs to be executed (each execution is termed a \"batch\"), and prepares\r\n            buckets of items to pass to the object in each batch.\r\n            ":"\r\n            确定需要执行可批处理对象的次数（每个执行都称为“批处理”），然后准备\r\n            一桶项目将每个批次中的对象传递到对象。\r\n            \r\n","\r\n            Dispatches the packet to the correct handler.\r\n            ":"\r\n            将数据包分配给正确的处理程序。\r\n            \r\n","\r\n            Empty dictionary with ":"\r\n            空词典\r\n","\r\n            Get the project name from a context ID. Throw an exception if it's not found.\r\n            ":"\r\n            从上下文ID获取项目名称。如果找不到例外。\r\n            \r\n"," containing the global properties of the current project.":" 包含当前项目的全球属性。\r\n","The type of component to be instantiated.":"要实例化的组件类型。\r\n","\r\n            Returns the build manager assigned configuration id\r\n            ":"\r\n            返回构建管理器分配的配置ID\r\n            \r\n","The file to evaluate the ProjectInstance from.":"文件以评估ProjectInstance的文件。\r\n","name of event sender.":"事件发件人的名称。\r\n","\r\n            Record an import opened during evaluation.\r\n            ":"\r\n            记录在评估期间打开的导入。\r\n            \r\n","\r\n            For debugging leaks, a way to disable caching expression trees, to reduce noise\r\n            ":"\r\n            用于调试泄漏，一种禁用缓存表达树的方法，以减少噪音\r\n            \r\n","\r\n            Constructs a GraphBuildRequestData for build requests based on a project graph entry points.\r\n            ":"\r\n            构建基于项目图入口点的构建请求的GraphBuildRequestData。\r\n            \r\n","\r\n            Retrieves the count of built-in metadata.\r\n            ":"\r\n            检索内置元数据的计数。\r\n            \r\n"," \r\n            The ProjectItem object that indicates: the itemspec to match and the item type to constrain the search in.\r\n            The search is also constrained on item elements appearing before the item element that produced this ":" \r\n            指示：要匹配的itemspec和以约束搜索的项目类型的projectItem对象。\r\n            搜索还受到限制，该项目元素出现在产生此的项目元素之前\r\n","The id of the build submission.":"构建提交的ID。\r\n","The logging service used to log messages etc. from the solution wrapper generator.":"从解决方案包装器生成器中记录消息等的日志记录服务。\r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n                Adds a new TaskBody to the using task to the end of the using task element\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n                将新任务机构添加到使用任务的末尾使用任务元素\r\n            \r\n","\r\n            Do not read toolset information from any external location.\r\n            ":"\r\n            请勿从任何外部位置读取工具集信息。\r\n            \r\n","\r\n            True if current OS is a Unix system.\r\n            ":"\r\n            如果当前的操作系统是UNIX系统，则为正确。\r\n            \r\n","\r\n            The value of the property, the value's type will match the type given by ":"属性的值，值的类型将与\r\n","\r\n            Property on the task class to retrieve the output from\r\n            ":"\r\n            在任务类上的属性以从\r\n            \r\n","\r\n            Instantiates a new MSBuild process acting as a child node.\r\n            ":"\r\n            实例化一个新的MSBUILD过程，该过程充当子节点。\r\n            \r\n","\r\n            If the expression is going to not be an empty string, break\r\n            out early\r\n            ":"\r\n            如果表达式不是一个空字符串，请断开\r\n            早点出去\r\n            \r\n","\r\n            Gets the value of the AssemblyFile attribute.\r\n            Returns empty string if it is not present.\r\n            ":"\r\n            获取汇编属性的值。\r\n            如果不存在，则返回空字符串。\r\n            \r\n","\r\n            Build even if the project does not exist on disk.\r\n            ":"\r\n            即使该项目不存在于磁盘上，也可以构建。\r\n            \r\n","\r\n            Gets the count of items.\r\n            ":"\r\n            获取项目计数。\r\n            \r\n","\r\n            Retrieves the target name.\r\n            ":"\r\n            检索目标名称。\r\n            \r\n","\r\n            If MSBUILDSCHEDULINGUNLIMITED is set, this flag will make AtSchedulingLimit() always return false\r\n            ":"如果设置了msbuildschedulingunlimited，则此标志将使Atschedulinglimit（）始终返回false\r\n            \r\n","SDK paths which should be imported":"应该导入的SDK路径\r\n","\r\n            Should the logging service be done Synchronously when the number of cps's is 1\r\n            ":"\r\n            当CPS的数量为1时，应同步完成日志记录服务\r\n            \r\n","\r\n            Expands all item vectors embedded in the given expression into a single string.\r\n            If the expression is empty, returns empty string.\r\n            If ExpanderOptions.BreakOnNotEmpty was passed, expression was going to be non-empty, and it broke out early, returns null. Otherwise the result can be trusted.\r\n            ":"\r\n            将嵌入给定表达式中的所有项目向量展开到一个字符串中。\r\n            如果表达式为空，请返回空字符串。\r\n            如果通过ExpanderOptions.breakonnotempty通过，表达将是非空的，并且早点爆发，则返回NULL。否则可以信任结果。\r\n            \r\n","\r\n            The name of the blocking target, if any.\r\n            ":"\r\n            阻止目标的名称（如果有）。\r\n            \r\n","\r\n            Gets or sets the AfterTargets value. \r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"\r\n            获取或设置AfterTargets值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n","\r\n            This constructor allows timestamp to be set\r\n            ":"\r\n            该构造函数允许设置时间戳\r\n            \r\n","\r\n            Unloads a project XML root element from the weak cache.\r\n            ":"\r\n            从弱缓存中卸载项目XML根元素。\r\n            \r\n","\r\n            NotThreadSafe, this method should only be called from the component host thread\r\n            Called by the build component host when the component host is about to shutdown.\r\n            1. Shutdown forwarding loggers so that any events they have left to forward can get into the queue\r\n            2. Terminate the logging thread\r\n            3. Null out sinks and the filter event source so that no more events can get to the central loggers\r\n            4. Shutdown the central loggers\r\n            ":"\r\n            notThreadSafe，此方法仅应从组件主机线程调用\r\n            当组件主机即将关闭时，由构建组件主机调用。\r\n            1.关闭转发记录器，以便他们剩下的任何事件都可以进入队列\r\n            2.终止记录线程\r\n            3.零下的水槽和过滤事件源，因此没有更多的事件可以到达中央记录仪\r\n            4.关闭中央伐木者\r\n            \r\n","\r\n                The entry points with which the plugin will be initialized.\r\n            ":"\r\n                插件将初始化的输入点。\r\n            \r\n","\r\n            Log that a project has started\r\n            ":"\r\n            日志已经开始\r\n            \r\n","\r\n            Gets or sets arbitrary metadata that may be set on a rule.\r\n            ":"\r\n            获取或设置可能在规则上设置的任意元数据。\r\n            \r\n","The task name.":"任务名称。\r\n","\r\n            Root element which was just added to the cache.\r\n            ":"\r\n            刚刚添加到缓存的根元素。\r\n            \r\n","The property from which to take the values.":"从中获得值的属性。\r\n","\r\n            Project that this property lives in.\r\n            ProjectProperty's always live in a project.\r\n            ":"\r\n            预测该财产所居住的。\r\n            ProjectProperty总是生活在一个项目中。\r\n            \r\n","\r\n            Spawn the old engine to generate a solution wrapper project, so that our build ordering is somewhat more correct \r\n            when solutions with toolsVersions < 4.0 are passed to us. \r\n            ":"\r\n            产生旧引擎以生成解决方案包装器项目，以便我们的构建订购更正确\r\n            当带有工具范围<4.0的解决方案传递给我们。\r\n            \r\n","\r\n            Use a private getter property to we can lazy initialize the regex\r\n            ":"\r\n            使用私人getter属性，我们可以懒惰地初始化正则义务\r\n            \r\n","The sub-toolset version.":"子模式版本。\r\n","\r\n            Execute a single bucket\r\n            ":"\r\n            执行一个存储桶\r\n            \r\n","\r\n            The source file.\r\n            ":"\r\n            源文件。\r\n            \r\n","\r\n            Represents the schame of a boolean property.\r\n            ":"\r\n            代表布尔属性的shame。\r\n            \r\n","\r\n             The target's dependencies need to be evaluated and pushed onto the target stack.\r\n            \r\n             Transitions:\r\n             Execution, ErrorExecution\r\n             ":"\r\n             目标的依赖项需要评估并将其推向目标堆栈。\r\n            \r\n             过渡：\r\n             执行，errorexecution\r\n             \r\n","True in case of a match (e.g. directoryPath = \"dir/subdir\" and pattern = \"s*\"), false otherwise.":"在匹配的情况下（例如DirectoryPath =“ dir/subdir”和pattern =“ s*”），否则为false。\r\n","Thrown if there is no build in progress.":"如果没有构建，就可以投掷。\r\n","\r\n            If true the project will be unloaded once the operation is completed\r\n            ":"\r\n            如果正确，该项目将在操作完成后卸载\r\n            \r\n","\r\n            Logs that a target started\r\n            ":"\r\n            目标开始的日志\r\n            \r\n","\r\n            This class defines a set of common XML namespaces for sharing across multiple source files.\r\n            ":"\r\n            此类定义了一组常见的XML名称空间，用于在多个源文件上共享。\r\n            \r\n","Location of the SDK if it is found, empty string if it could not be found":"SDK的位置（如果发现），则无法找到空字符串\r\n","\r\n            Initializes a new instance of the OutOfProcNodeSdkResolverService class.\r\n            ":"\r\n            初始化OutofProcnoDesdkResolverservice类的新实例。\r\n            \r\n","\r\n            Constructs a response where no action should be taken.\r\n            ":"\r\n            构建一个不应采取行动的响应。\r\n            \r\n","\r\n             Expands item expressions, like @(Compile), possibly with transforms and/or separators.\r\n            \r\n             Item vectors are composed of a name, an optional transform, and an optional separator i.e.\r\n             \r\n                 @(<name>->'<transform>','<separator>')\r\n                 \r\n             If a separator is not specified it defaults to a semi-colon. The transform expression is also optional, but if\r\n             specified, it allows each item in the vector to have its item-spec converted to a different form. The transform\r\n             expression can reference any custom metadata defined on the item, as well as the pre-defined item-spec modifiers.\r\n             \r\n             NOTE:\r\n             1) white space between <name>, <transform> and <separator> is ignored\r\n                i.e. @(<name>, '<separator>') is valid\r\n             2) the separator is not restricted to be a single character, it can be a string\r\n             3) the separator can be an empty string i.e. @(<name>,'')\r\n             4) specifying an empty transform is NOT the same as specifying no transform -- the former will reduce all item-specs\r\n                to empty strings\r\n            \r\n             if @(files) is a vector for the files a.txt and b.txt, then:\r\n             \r\n                 \"my list: @(files)\"                                 expands to string     \"my list: a.txt;b.txt\"\r\n             \r\n                 \"my list: @(files,' ')\"                             expands to string      \"my list: a.txt b.txt\"\r\n             \r\n                 \"my list: @(files, '')\"                             expands to string      \"my list: a.txtb.txt\"\r\n             \r\n                 \"my list: @(files, '; ')\"                           expands to string      \"my list: a.txt; b.txt\"\r\n             \r\n                 \"my list: @(files->'%(Filename)')\"                  expands to string      \"my list: a;b\"\r\n             \r\n                 \"my list: @(files -> 'temp\\%(Filename).xml', ' ')   expands to string      \"my list: temp\\a.xml temp\\b.xml\"\r\n             \r\n                 \"my list: @(files->'')                              expands to string      \"my list: ;\".\r\n             ":"\r\n             扩展项表达式，如@(Compile)，可能使用转换和/或分隔符。\r\n            \r\n             项向量由名称、可选变换和可选分隔符组成，即\r\n             \r\n                 @(<name>->'<transform>','<separator>')\r\n                 \r\n             如果未指定分隔符，则默认为分号。 转换表达式也是可选的，但如果\r\n             指定后，它允许向量中的每个项将其项规格转换为不同的形式。 变换\r\n             expression可以引用在项上定义的任何自定义元数据，以及预定义的item-spec修饰符。\r\n             \r\n             注意事项:\r\n             1)<name>,<transform>和<separator>之间的空格被忽略\r\n                即@(<name>,'<separator>')有效\r\n             2)分隔符不限于单个字符，可以是字符串\r\n             3)分隔符可以是空字符串，即@(<name>,\")\r\n             4)指定一个空的transform和指定no transform不一样--前者会减少所有item-specs\r\n                清空字符串\r\n            \r\n             如果@(files)是文件的向量a.txt 和b.txt，则:\r\n             \r\n                 \"我的列表：@（文件）\"扩展为字符串\"我的列表：a.txt；b.txt\"\r\n             \r\n                 \"my list:@(files,'')\"扩展为字符串\"my list:a.txt b.txt\"\r\n             \r\n                 \"我的列表：@（文件，\"）\"扩展为字符串\"我的列表：a.txtb。txt\"\r\n             \r\n                 \"my list:@(files,';')\"扩展为字符串\"my list:a.txt；b.txt\"\r\n             \r\n                 \"my list:@(files->'%(Filename)')\"扩展为字符串\"my list:a;b\"\r\n             \r\n                 \"我的列表：@(files->'temp\\%(Filename)。xml','')展开为字符串\"我的列表:temp\\a.xml temp\\b.xml\"\r\n             \r\n                 \"my list:@(files->\")扩展为字符串\"my list:;\"。\r\n             \r\n","\r\n            Writes to the log, using the default indentation. Does not\r\n            terminate with a newline.\r\n            ":"\r\n            使用默认凹痕写入日志。才不是\r\n            用新线终止。\r\n            \r\n","\r\n            This property generates the logger name by appending together the class name and assembly name\r\n            ":"\r\n            此属性通过将类名称和汇编名称一起附加来生成记录器名称\r\n            \r\n"," not to reuse state between the different project evaluations that use it.\r\n            ":" 不要在使用它的不同项目评估之间重复使用状态。\r\n            \r\n","\r\n            Pasre a ProjectItemDefinitionElement\r\n            ":"\r\n            Pasre A ProjectItemDefinitionElement\r\n            \r\n","element":"元素\r\n","name of project file currently being built":"当前正在构建的项目文件的名称\r\n","frame id":"框架ID\r\n","\r\n            The current node configuration\r\n            ":"\r\n            当前的节点配置\r\n            \r\n","The configuration to use for the request.":"用于请求的配置。\r\n","\r\n            Thin wrapper around Microsoft.Win32.RegistryKey that can be \r\n            subclassed for testing purposes\r\n            ":"\r\n            Microsoft.win32.RegistryKey的薄包装器可以是\r\n            分类用于测试目的\r\n            \r\n","\r\n            Min Visual Studio version from manifest\r\n            ":"\r\n            清单的最终视觉工作室版本\r\n            \r\n","\r\n            For errors and warnings these 8 fields are written out explicitly\r\n            (their presence is not marked as a bit in the flags). So we have to\r\n            read explicitly.\r\n            ":"\r\n            对于错误和警告，这8个字段被明确写出\r\n            （它们的存在在旗帜中没有标记为一点）。所以我们必须\r\n            明确阅读。\r\n            \r\n","\r\n            This method is called by either side to notify this endpoint that the link is inactive.\r\n            ":"\r\n            任何一侧都调用此方法来通知该端点链接不活动。\r\n            \r\n"," object indicating success resolving the SDK.\r\n            ":" 表示成功解决SDK的对象。\r\n            \r\n"," property on the containing ":" 包含的财产\r\n","The project collection from which to obtain the properties.":"从中获取属性的项目集合。\r\n","An Xml document.":"XML文档。\r\n","\r\n            Returns a hash code for the specified object factoring in the specified bounds.\r\n            ":"\r\n            在指定的边界中返回指定对象分解的哈希代码。\r\n            \r\n","\r\n             Adds CreateNode responses to satisfy all the affinities in the list of requests, with the following constraints:\r\n            \r\n             a) Issue no more than one response to create an inproc node, and aggressively issues as many requests for an out-of-proc node\r\n                as there are requests to assign to them.\r\n            \r\n             b) Don't exceed the max node count, *unless* there isn't even one node of the necessary affinity yet. (That means that even if there's a max\r\n                node count of e.g., 3, and we have already created 3 out of proc nodes, we will still create an inproc node if affinity requires it; if\r\n                we didn't, the build would jam.)\r\n            \r\n             Returns true if there is a pending response to create a new node.\r\n             ":"\r\n             添加createNode响应以满足请求列表中的所有亲和力，并具有以下约束：\r\n            \r\n             a）发出不超过一个响应来创建一个inproc节点，并积极发行，因为多个请求对一个传播节点的请求\r\n                由于有要求分配给他们。\r\n            \r\n             b）不要超过最大节点计数， *除非 *甚至还没有必要亲和力的一个节点。 （这意味着即使有最大\r\n                例如3的节点计数，并且我们已经创建了3个proc节点，如果亲和力需要它，我们仍然会创建一个inproc节点；如果\r\n                我们没有，构建会堵塞。）\r\n            \r\n             如果有待处理响应来创建新节点，则返回true。\r\n             \r\n","\r\n            Submits the specified request to the build queue. \r\n            ":"\r\n            将指定的请求提交给构建队列。\r\n            \r\n","\r\n            STA thread launching also being used in XMakeCommandLine\\OutOfProcTaskAppDomainWrapperBase.cs, InstantiateAndExecuteTaskInSTAThread method.  \r\n            Any bug fixes made to this code, please ensure that you also fix that code.  \r\n            ":"\r\n            XmakeCommandline \\ outofproctaskappdomainwrapperbase.cs，instantiateaneandexecutetAskinStathread方法中也使用了sta线程启动。\r\n            对此代码进行的任何错误修复，请确保您还修复了该代码。\r\n            \r\n","\r\n            The version of the handshake. This should be updated each time the handshake structure is altered.\r\n            ":"\r\n            握手的版本。每次更改握手结构时，都应对此进行更新。\r\n            \r\n","\r\n            The element location of the transform expression.\r\n            ":"\r\n            转换表达式的元素位置。\r\n            \r\n","Wrapper for the key that we're getting values from":"包装器，以获取我们从中获得值的钥匙\r\n","\r\n            Whether to include evaluation profiles in events.\r\n            ":"\r\n            是否在事件中包括评估概况。\r\n            \r\n","True if the strings are equal, false otherwise.":"如果字符串相等，则为错误，否则为错误。\r\n","Helper methods for use in array/span sorting routines.":"用于数组/跨度排序例程中的助手方法。\r\n","\r\n            Adds an object to be concatenated.\r\n            ":"\r\n            添加一个要连接的对象。\r\n            \r\n","\r\n            Please don't use. This is planned to be deprecated.\r\n            ":"\r\n            请不要使用。计划将其弃用。\r\n            \r\n","Framework required":"需要框架\r\n","\r\n            Given a base handshake, generates the real handshake based on e.g. elevation level.  \r\n            Client handshake required for comparison purposes only.  Returns the update handshake.  \r\n            ":"\r\n            给定基本握手，生成基于例如海拔水平。\r\n            客户握手仅用于比较目的。返回更新握手。\r\n            \r\n"," to save properties as an XML attribute.\r\n            ":" 将属性保存为XML属性。\r\n            \r\n","\r\n            Cache of names of output properties on this type\r\n            ":"\r\n            此类型上输出属性名称名称的缓存\r\n            \r\n","\r\n            Throws if the RequestBuilder has been zombied.\r\n            ":"\r\n            如果请求构建器已被僵尸抛弃，请投掷。\r\n            \r\n","\r\n            Take the parts of the Target framework moniker and formulate the reference assembly path based on the following pattern:\r\n            For a framework and version:\r\n                $(TargetFrameworkRootPath)\\$(TargetFrameworkIdentifier)\\$(TargetFrameworkVersion)\r\n            For a subtype:\r\n                $(TargetFrameworkRootPath)\\$(TargetFrameworkIdentifier)\\$(TargetFrameworkVersion)\\SubType\\$(TargetFrameworkSubType)\r\n            e.g.NET Framework v4.0 would locate its reference assemblies in:\r\n                \\Program Files\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.0\r\n            e.g.Silverlight v2.0 would locate its reference assemblies in:\r\n                \\Program Files\\Reference Assemblies\\Microsoft\\Framework\\Silverlight\\v2.0\r\n            e.g.NET Compact Framework v3.5, subtype PocketPC would locate its reference assemblies in:\r\n                \\Program Files\\Reference Assemblies\\Microsoft\\Framework\\.NETCompactFramework\\v3.5\\SubType\\PocketPC\r\n            ":"\r\n            采用目标框架绰号的一部分，并根据以下模式制定参考组件路径：\r\n            对于框架和版本：\r\n                $（targetFrameWorkRootPath）\\ $（targetFrameWorkIdentifier）\\ $（targetFrameWorkversion）\r\n            对于亚型：\r\n                $（targetframeworkrootpath）\\ $（targetFrameWorkIdentifier）\\ $（targetFrameWorkversion）\\ subtype \\ $（targetFrameWorksworksubtype）\r\n            例如，NET框架v4.0将在以下方式找到其参考组件。\r\n                \\ Program Files \\ Reference Assemblies \\ Microsoft \\ Framework \\ .netFramework \\ V4.0\r\n            例如，Silverlight v2.0将在以下方式找到其参考组件：\r\n                \\ Program Files \\ Reference Assemblies \\ Microsoft \\ Framework \\ Silverlight \\ V2.0\r\n            例如，NET紧凑型框架v3.5，Subtype PocketPC将在：\r\n                \\ Program Files \\ Reference Assemblies \\ Microsoft \\ Framework \\ .netCompactFramework \\ V3.5 \\ subtype \\ subtype \\ cocketpc\r\n            \r\n","\r\n            The event source to which filters will listen to to get the build events which are logged to the logging service through the \r\n            logging helper methods. Ie LogMessage and LogMessageEvent\r\n            ":"\r\n            过滤器将聆听的事件源以获取通过该登录到记录服务的构建事件\r\n            记录辅助方法。 IE logmessage和logmessageEvent\r\n            \r\n","\r\n            Initialize an in-memory, empty ProjectRootElement instance that can be saved later.\r\n            Leaves the project dirty, indicating there are unsaved changes.\r\n            ":"\r\n            初始化一个内存，空的项目Rootelement实例，以后可以保存。\r\n            使项目肮脏，表明有未保存的变化。\r\n            \r\n","True if the value fields are the same, false if otherwise":"true如果值字段相同，则为false，如果否则\r\n","\r\n            The value used to set\r\n            this field can be anything as long as it is recognized by the intended renderer.\r\n            This field is required only if this Rule is meant to be displayed as a property page.\r\n            ":"\r\n            用于设置的值\r\n            只要预期的渲染器认可，这个领域就可以是任何事物。\r\n            仅在将该规则显示为属性页面时，才需要此字段。\r\n            \r\n","\r\n            The options for MatchOnMetadata.\r\n            ":"\r\n            MatchonMetadata的选项。\r\n            \r\n","\r\n            Returns the initial targets for the configuration which requested these results.\r\n            ":"\r\n            返回请求这些结果的配置的初始目标。\r\n            \r\n","\r\n            Confirms that the given process has really and truly exited. If the\r\n            process is still finishing up, this method waits until it is done.\r\n            ":"\r\n            确认给定的过程确实已经真正退出。如果是\r\n            过程仍在完成，此方法等待直到完成。\r\n            \r\n","\r\n            Intrinsic function that returns only those items that have a not-blank value for the metadata specified\r\n            Using a case insensitive comparison\r\n            ":"\r\n            固有函数仅返回那些指定元数据的项目\r\n            使用案例不敏感的比较\r\n            \r\n","\r\n            Specifies that if an existing entry with the same key is encountered, an exception should be thrown.\r\n            ":"\r\n            指定如果遇到具有相同密钥的现有条目，则应抛出异常。\r\n            \r\n","\r\n            Relatively little output\r\n            ":"\r\n            相对较少的输出\r\n            \r\n","\r\n             If the ProjectItemElement evaluated to more than one ProjectItem, replaces it with a new ProjectItemElement for each one of them.\r\n             If the ProjectItemElement did not evaluate into more than one ProjectItem, does nothing.\r\n             Returns true if a split occurred, otherwise false.\r\n             ":"\r\n             如果将ProjectItemelement评估为一个以上的ProjectItem，则将其替换为每个projectItemement，以替换每个projectItem。\r\n             如果ProjectItemelement未评估多个ProjectItem，则无能为力。\r\n             如果发生分裂，则返回true，否则为错误。\r\n             \r\n","\r\n            Do the evaluation.\r\n            Called by the static helper method.\r\n            If debugging is enabled, returns a dictionary of name/value pairs such as properties, for debugger display.\r\n            ":"\r\n            进行评估。\r\n            由静态辅助方法调用。\r\n            如果启用了调试，则返回一个名称/值对的字典，例如属性，用于调试器显示。\r\n            \r\n","\r\n            Remove and return the top element in the stack.\r\n            ":"\r\n            删除并返回堆栈中的顶部元素。\r\n            \r\n","\r\n            Expands the metadata in the match provided into a string result.\r\n            The match is expected to be the content of a transform.\r\n            For example, representing \"%(Filename.obj)\" in the original expression \"@(Compile->'%(Filename.obj)')\"\r\n            ":"\r\n            将匹配项中的元数据扩展为字符串结果。\r\n            比赛预计将是转换的内容。\r\n            例如，在原始表达式中代表“％（filename.obj）”@（compile->'％（filename.obj）'）”\r\n            \r\n","\r\n            Reads registry at the base key and returns a Dictionary keyed on ToolsVersion.\r\n            Dictionary contains another dictionary of (property name, property value) pairs.\r\n            If a registry value is not a string, this will throw a InvalidToolsetDefinitionException.\r\n            An example of how the registry will look (note that the DefaultToolsVersion is per-MSBuild-version)\r\n            [HKLM]\\SOFTWARE\\Microsoft\r\n              msbuild\r\n                3.5\r\n                  @DefaultToolsVersion = 2.0\r\n                ToolsVersions\r\n                  2.0\r\n                    @MSBuildToolsPath = D:\\SomeFolder\r\n                  3.5\r\n                    @MSBuildToolsPath = D:\\SomeOtherFolder\r\n                    @MSBuildBinPath = D:\\SomeOtherFolder\r\n                    @SomePropertyName = PropertyOtherValue\r\n            ":"在基本键上读取注册表，并返回一个键入ToolsVersion的字典。\r\n            字典包含（属性名称，属性值）对的另一个字典。\r\n            如果注册表值不是字符串，则将抛出InvalidToolSetDefinitionException。\r\n            注册表的外观示例（请注意，DefaultToolSversion是每次msbuild-version）\r\n            [HKLM] \\ Software \\ Microsoft\r\n              msbuild\r\n                3.5\r\n                  @DefaultToolSversion = 2.0\r\n                工具库\r\n                  2.0\r\n                    @msbuildtoolspath = d：\\ somefolder\r\n                  3.5\r\n                    @msbuildtoolspath = d：\\ someotherfolder\r\n                    @msbuildbinpath = d：\\ someotherfolder\r\n                    @SomePropertyname = property hothervalue\r\n            \r\n","\r\n            MSBUILDUSECASESENSITIVEITEMNAMES is an escape hatch for the fix\r\n            for https://github.com/Microsoft/msbuild/issues/1751. It should\r\n            be removed (permanently set to false) after establishing that\r\n            it's unneeded (at least by the 16.0 timeframe).\r\n            ":"\r\n            msbuildusecasessentiveitemnames是修复程序的逃生舱口\r\n            对于https://github.com/microsoft/msbuild/issues/1751。它应该\r\n            确定该删除（永久设置为假）\r\n            它不需要（至少在16.0时间范围内）。\r\n            \r\n","Targets to build.":"构建目标。\r\n","The result to be reported.":"结果有报道。\r\n","\r\n            Removes all items whose normalized path is passed in a collection.\r\n            ":"\r\n            删除所有标准路径在集合中传递的项目。\r\n            \r\n","A new item instance":"一个新项目实例\r\n","\r\n            Raised for TargetFinishedEventArgs instances\r\n            ":"\r\n            为TargetFinedEventargs实例筹集\r\n            \r\n"," returned the existing value.\r\n            ":" 返回现有值。\r\n            \r\n","\r\n            Somebody is referencing this operation\r\n            ":"\r\n            有人在引用此操作\r\n            \r\n","A Task representing the work to be done.":"代表要完成的工作的任务。\r\n","\r\n            The list of directory names found from the registry.\r\n            ":"\r\n            从注册表中找到的目录名称列表。\r\n            \r\n","\r\n            Reports to the scheduler that a request is blocked.\r\n            ":"\r\n            向调度程序报告请求被阻止。\r\n            \r\n","\r\n            Returns an enumerator for all build results in this graph build result\r\n            ":"\r\n            在此图构建结果中返回所有构建结果的枚举器\r\n            \r\n","\r\n            What if Mru lists were infinitely long?\r\n            ":"\r\n            如果MRU列表无限长时间怎么办？\r\n            \r\n","\r\n            Build a target with specified loggers.\r\n            Returns true on success, false on failure.\r\n            Target may be null.\r\n            Loggers may be null.\r\n            Remote loggers may be null.\r\n            Only valid if mutable.\r\n            ":"\r\n            用指定的记录仪构建目标。\r\n            成功返回，成功，失败。\r\n            目标可能为零。\r\n            伐木者可能是无效的。\r\n            远程记录器可能为空。\r\n            仅有效，如果可变。\r\n            \r\n","\r\n            If the extension of the file to log is 'md', markdown content is generated. Otherwise, it falls \r\n            back to a tab separated format\r\n            ":"\r\n            如果将文件的扩展名为日志为'MD'，则会生成标记内容。否则，它跌倒了\r\n            返回标签分离格式\r\n            \r\n","\r\n            Advances the state of the plan by removing the specified config from all paths\r\n            ":"\r\n            通过从所有路径中删除指定的配置来推进计划的状态\r\n            \r\n","\r\n            Adds a target which verifies that all of the project references and configurations are valid.\r\n            ":"\r\n            添加一个目标，该目标验证所有项目参考和配置都是有效的。\r\n            \r\n","The set of results for each graph node.":"每个图节点的结果集。\r\n","\r\n            Flag used for debugging by forcing all scheduling to go out-of-proc.\r\n            ":"\r\n            通过强迫所有计划进行实行，用于调试的标志。\r\n            \r\n","\r\n            Constructs a generic evaluation location with no parent.\r\n            ":"\r\n            构建一个没有父母的通用评估位置。\r\n            \r\n","\r\n            Retrieves the LegacyThreadingData associated with a particular build manager\r\n            ":"\r\n            检索与特定构建经理相关的legacyThreadingData\r\n            \r\n","\r\n            Initialize to run a specific task.\r\n            ":"\r\n            初始化以运行特定任务。\r\n            \r\n","Type of the properties used to expand the expression":"用于扩展表达式的属性类型\r\n","\r\n            Type for ProjectTaskInstance and ProjectPropertyGroupTaskInstance and ProjectItemGroupTaskInstance\r\n            allowing them to be used in a single collection of target children\r\n            ":"\r\n            用于ProjectTaskInstance和ProjectPropertyGrouptaskInstance和ProjectItemGrouptaskInstance的类型\r\n            允许它们用于单个目标儿童的集合\r\n            \r\n","\r\n            What if we doubled the size of the Mru lists?\r\n            ":"\r\n            如果我们将MRU列表的大小翻了一番，该怎么办？\r\n            \r\n","\r\n            Whether build is enabled for this project.\r\n            ":"\r\n            是否启用了该项目的构建。\r\n            \r\n","\r\n            Waits for the cancellation until it's completed, and cleans up the internal states.\r\n            ":"\r\n            等待取消，直到完成为止，并清理内部状态。\r\n            \r\n","\r\n            Returns if a given by-ref to type ":"\r\n            如果给定的by-ref返回到类型\r\n"," class\r\n            that represents a change to a specific project root element.\r\n            ":" 班级\r\n            这代表了特定项目根元素的更改。\r\n            \r\n","\r\n            Indicates whether or not errors should be converted to warnings.\r\n            ":"\r\n            指示是否应将错误转换为警告。\r\n            \r\n","\r\n            If the import is an implicit one (":"\r\n            如果导入是隐性的（\r\n","\r\n            Retrieves any value we have in our metadata table for the metadata name and item type specified.\r\n            If no value is available, returns empty string.\r\n            If item type is null, it is ignored, otherwise it must match.\r\n            Value, if escaped, remains escaped.\r\n            ":"\r\n            检索我们在元数据表中为元数据名称和指定的项目类型中的任何值。\r\n            如果没有可用的值，请返回空字符串。\r\n            如果项目类型为null，则将忽略，否则必须匹配。\r\n            如果逃脱，价值仍然被逃脱。\r\n            \r\n","\r\n            Ctor for deserializing from state file (binary serialization).\r\n            ":"\r\n            从状态文件（二进制序列化）进行挑选的CTOR。\r\n            \r\n","\r\n            Properties originating from environment variables, gotten from the project collection\r\n            ":"\r\n            源自环境变量的属性，从项目集合中获得\r\n            \r\n","\r\n            Read a string while checking the string precursor for intern opportunities.\r\n            Taken from ndp\\clr\\src\\bcl\\system\\io\\binaryreader.cs-ReadString()\r\n            ":"\r\n            在检查字符串前体的实习机会时，请阅读字符串。\r\n            取自ndp \\ clr \\ src \\ bcl \\ system \\ io \\ binaryReader.cs-readstring（）\r\n            \r\n","\r\n            Get the unescaped value of a property in this project, or \r\n            an empty string if it does not exist.\r\n            ":"\r\n            获取该项目中财产的未阐明价值，或\r\n            如果不存在一个空字符串。\r\n            \r\n","\r\n            Just the tasks below this target, if any.\r\n            Other kinds of children are not included.\r\n            ":"\r\n            只是此目标以下的任务（如果有）。\r\n            其他类型的儿童不包括在内。\r\n            \r\n","\r\n            Base class used for tasks that spawn an executable. This class implements the ToolPath property which can be used to\r\n            override the default path.\r\n            ":"\r\n            用于产生可执行文件的任务的基类。此类实现了可以用来用于的工具路径属性\r\n            覆盖默认路径。\r\n            \r\n","\r\n            Deletes the cache file\r\n            ":"\r\n            删除缓存文件\r\n            \r\n","\r\n            Unevaluated keepDuplicates value.\r\n            ":"\r\n            未评估的保留价值。\r\n            \r\n","\r\n            Writes to the log, using the specified indentation. Does not \r\n            terminate with a newline.\r\n            ":"\r\n            使用指定的凹痕写入日志。才不是\r\n            用新线终止。\r\n            \r\n","\r\n            Intrinsic function that returns only the items from itemsOfType that have distinct Item1 in the Tuple\r\n            Using a case sensitive comparison\r\n            ":"\r\n            固有函数仅返回元组中具有独特item1的项目的项目\r\n            使用案例敏感比较\r\n            \r\n","\r\n            Exposes the private ":"\r\n            暴露私人\r\n","\r\n            The endpoint used to talk to the host.\r\n            ":"\r\n            终点用于与主机交谈。\r\n            \r\n","\r\n            The task instance for extrinsic tasks\r\n            ":"\r\n            外部任务的任务实例\r\n            \r\n","\r\n            Add timestamp comparison results to a list, to log them together later.\r\n            ":"\r\n            将时间戳比较结果添加到列表中，以稍后将它们记录在一起。\r\n            \r\n","is null, or ":"是无效的，或\r\n","\r\n            Returns the configuration for this request.\r\n            ":"\r\n            返回此请求的配置。\r\n            \r\n","\r\n            Handles the BuildRequestConfiguration packet.\r\n            ":"\r\n            处理BuildRequestConfiguration包。\r\n            \r\n","\r\n                Gets the name of the SDK.\r\n            ":"\r\n                获取SDK的名称。\r\n            \r\n","\r\n            This method parses the Visual Studio version in Dev 12 solution files\r\n            The version line looks like this:\r\n            \r\n            VisualStudioVersion = 12.0.20311.0 VSPRO_PLATFORM\r\n            \r\n            If such a line is found, the version is stored in this.currentVisualStudioVersion\r\n            ":"\r\n            此方法在Dev 12解决方案文件中解析Visual Studio版本\r\n            版本行看起来像这样：\r\n            \r\n            VisualStudioVersion = 12.0.20311.0 vspro_platform\r\n            \r\n            如果找到这样的行，则将版本存储在此中。\r\n            \r\n","\r\n            The response has results for a particular blocked request\r\n            ":"\r\n            响应具有特定阻止请求的结果\r\n            \r\n","\r\n            Sets the configuration id to a resolved id.\r\n            ":"\r\n            将配置ID设置为已解决的ID。\r\n            \r\n","\r\n            Sets one of the arbitrary metadata on the item.\r\n            ":"\r\n            设置项目上的任意元数据之一。\r\n            \r\n"," property on the\r\n            ":" 在\r\n            \r\n","\r\n            The search paths are machine specific and should not change during builds\r\n            ":"\r\n            搜索路径是特定于机器的，不应在构建过程中更改\r\n            \r\n","The item to operate on.":"要运行的项目。\r\n","\r\n            Assigns requests to nodes attempting to ensure each node has the same number of configurations assigned to it.\r\n            ":"\r\n            将请求分配给试图确保每个节点都具有与其分配相同数量的配置的节点。\r\n            \r\n"," case when switching on every possible ":" 打开一切可能的情况\r\n","Existing string in the cache, or null if it is not contained.":"在缓存中的现有字符串，如果未包含该字符串，则为NULL。\r\n","\r\n                A cache hit can use this to instruct MSBuild to construct a BuildResult with the target result specified in this\r\n                type.\r\n            ":"\r\n                缓存命中可以用它来指示MSBUILD构建具有指定目标结果的buildResult\r\n                类型。\r\n            \r\n","Dictionary to clone.":"克隆的字典。\r\n","\r\n            STA thread launching also being used in XMakeCommandLine\\OutOfProcTaskAppDomainWrapperBase.cs, InstantiateAndExecuteTaskInSTAThread method.\r\n            Any bug fixes made to this code, please ensure that you also fix that code.\r\n            ":"\r\n            XmakeCommandline \\ outofproctaskappdomainwrapperbase.cs，instantiateaneandexecutetAskinStathread方法中也使用了sta线程启动。\r\n            对此代码进行的任何错误修复，请确保您还修复了该代码。\r\n            \r\n","\r\n            This constructor creates a new TaskItem, using the given ITaskItem.\r\n            ":"\r\n            该构造函数使用给定的itaskItem创建一个新的任务标准。\r\n            \r\n","\r\n            The source column.\r\n            ":"\r\n            源列。\r\n            \r\n"," that match this itemspec\r\n            ":" 与此项目相匹配\r\n            \r\n","\r\n            The build request entry\r\n            ":"\r\n            构建请求条目\r\n            \r\n","\r\n            Creates a using task.\r\n            Caller must add it to the location of choice in the project.\r\n            Exactly one of assembly file and assembly name must be provided.\r\n            ":"\r\n            创建一个使用任务。\r\n            呼叫者必须将其添加到项目中选择的位置。\r\n            必须提供汇编文件和汇编名称之一。\r\n            \r\n","\r\n            Adds a given project to the project collections of this class\r\n            ":"\r\n            将给定的项目添加到该课程的项目集合中\r\n            \r\n","\r\n            Appends a default header with a given separator\r\n            ":"\r\n            用给定的分隔器附加默认标头\r\n            \r\n","\r\n            Logs all the messages that the tool wrote to stderr. The messages\r\n            are read out of the stderr data queue.\r\n            ":"\r\n            记录该工具写给STDERR的所有消息。消息\r\n            从stderr数据队列中读取。\r\n            \r\n","\r\n            Returns an UNESCAPED version of the custom metadata. For the escaped version (which \r\n            is how it is stored internally), call ITaskItem2.CloneCustomMetadataEscaped. \r\n            ":"返回自定义元数据的未设计版本。对于逃脱版本（哪个\r\n            是在内部存储的方式），请致电itaskItem2.clonecustommetadatapate。\r\n            \r\n","\r\n             Simple replacement for System.Version used to implement version\r\n             comparison intrinic property functions.\r\n            \r\n             Allows major version only (e.g. \"3\" is 3.0.0.0), ignores leading 'v'\r\n             (e.g. \"v3.0\" is 3.0.0.0).\r\n            \r\n             Ignores semver prerelease and metadata portions (e.g. \"1.0.0-preview+info\"\r\n             is 1.0.0.0).\r\n            \r\n             Treats unspecified components as 0 (e.g. x == x.0 == x.0.0 == x.0.0.0).\r\n            \r\n             Unlike System.Version, does not tolerate whitespace, and '+' is ignored as\r\n             semver metadata as described above, not tolerated as positive sign of integer\r\n             component.\r\n             ":"\r\n             简单替换系统。用于实现版本的Version\r\n             比较内在属性函数。\r\n            \r\n             仅允许主要版本（例如“ 3”是3.0.0.0），忽略了前导'V'\r\n             （例如“ v3.0”为3.0.0.0）。\r\n            \r\n             忽略semver预发行和元数据部分（例如“ 1.0.0-preview+info”\r\n             为1.0.0.0）。\r\n            \r\n             将未指定的组件视为0（例如x == x.0 == x.0.0 == x.0.0.0）。\r\n            \r\n             与system.version不同，不忍受空格，而“+”被忽略为\r\n             如上所述，semver元数据不耐受为整数的正迹象\r\n             零件。\r\n             \r\n","\r\n            Task classes and locations known to this project.\r\n            This is the project-specific task registry, which is consulted before\r\n            the toolset's task registry.\r\n            ":"\r\n            该项目已知的任务类和位置。\r\n            这是特定于项目的任务注册表，以前进行咨询\r\n            工具集的任务注册表。\r\n            \r\n","\r\n            Override of GetHashCode.\r\n            ":"\r\n            Gethashcode的覆盖。\r\n            \r\n","If true, then the metadata will be expressed as an attribute instead of a child element, for example\r\n            <Reference Include=\"Libary.dll\" HintPath=\"..\\lib\\Library.dll\" Private=\"True\" />\r\n            ":"如果为true，则元数据将以属性而不是子元素表示，例如\r\n            <参考include =“ libary.dll” hintpath =“ .. \\ lib \\ library.dll” private =“ true” />\r\n            \r\n","The location of the task element in the project file.":"项目文件中任务元素的位置。\r\n","\r\n            Informs the entry that it has configurations which need to be resolved.\r\n            ":"\r\n            告知条目，它具有需要解决的配置。\r\n            \r\n","\r\n            Raises the OnEngineException event.\r\n            ":"\r\n            提出OnEngineException事件。\r\n            \r\n","\r\n            Gets the next target id.\r\n            ":"\r\n            获取下一个目标ID。\r\n            \r\n","The build engine interface available to tasks.":"任务可用的构建引擎接口。\r\n","This type has a documented contract of being exactly one reference-type field in size. Our own\r\n             ":"这种类型的合同恰恰是一个大小的一个参考类型字段。我们自己的\r\n             \r\n","The target name":"目标名称\r\n","The set of sub-toolsets to add to this toolset":"将添加到此工具集中的子工具集集合\r\n","\r\n            Logs an error event for the current task\r\n            ":"\r\n            记录当前任务的错误事件\r\n            \r\n","\r\n            A unique Id gets assigned automatically\r\n            Used by serialization/deserialization purposes\r\n            ":"\r\n            独特的ID自动分配\r\n            通过序列化/避难目的使用\r\n            \r\n","Globals":"全球\r\n","\r\n            Chars interned for ginormous range.\r\n            ":"\r\n            炭是针对巨大范围实习的。\r\n            \r\n","\r\n            Initialize a parented ProjectPropertyGroupElement\r\n            ":"\r\n            初始化育儿Project PropertyGroupelement\r\n            \r\n","\r\n            Initializes the logger.\r\n            ":"\r\n            初始化记录器。\r\n            \r\n","\r\n            ProjectPropertyGroupElement represents the PropertyGroup element in the MSBuild project.\r\n            ":"\r\n            ProjectPropertyGroupElement代表MSBUILD项目中的属性组元素。\r\n            \r\n","\r\n            Gets the name of the plan file for a specified submission.\r\n            ":"\r\n            获取指定提交的计划文件的名称。\r\n            \r\n","Used to find registry key default values.":"用于查找注册表密钥默认值。\r\n","\r\n            Returns all the metadata names on this item.\r\n            Includes names from any applicable item definitions.\r\n            Includes names of built-in metadata.\r\n            ":"\r\n            返回此项目上的所有元数据名称。\r\n            包括任何适用的项目定义中的名称。\r\n            包括内置元数据的名称。\r\n            \r\n","\r\n            Retrieves a new build request ID\r\n            ":"\r\n            检索新的构建请求ID\r\n            \r\n","The results, if any":"结果，如果有的话\r\n","\r\n            Lazily initializes the metadata dictionary.\r\n            ":"\r\n            懒惰地初始化元数据字典。\r\n            \r\n","The build context of the parent project which asked this project to build":"父母项目的构建背景，要求该项目构建\r\n","\r\n            Clear the entire cache\r\n            ":"\r\n            清除整个缓存\r\n            \r\n","\r\n            Three most recently used strings over 8K.\r\n            ":"\r\n            三个最近使用了8K以上的字符串。\r\n            \r\n","\r\n            Architecture associated with this element\r\n            ":"\r\n            与此元素关联的架构\r\n            \r\n","\r\n            Event which is raised when the in-proc endpoint is connected.\r\n            ":"\r\n            当连接到程序内端点时会提出的事件。\r\n            \r\n","\r\n             \r\n            Example result: \r\n            [\r\n            GlobResult(glob: \"C:\\**\\*.foo\", exclude: []),\r\n            GlobResult(glob: [\"*.a\", \"*.b\"], exclude=[\"3.a\"], remove=[\"2.a\"]),\r\n            GlobResult(glob: \"**\\*.b\", exclude=[\"1.b, **\\obj\\*.b\", **\\bar\\*.b\"]),\r\n            GlobResult(glob: \"*.txt\", exclude=[]),\r\n            GlobResult(glob: \"*.a\", exclude=[]),\r\n            GlobResult(glob: \"*.cs\", exclude=[\"bar\"])\r\n            ]\r\n             ":"\r\n             \r\n            结果：\r\n            [[\r\n            GlobResult（Glob：“ C：\\ ** \\*。foo”，排除：[]），\r\n            GlobResult（Glob：[“*.a”，“*.b”]，exclude = [3.a“”，remove = [2.a']），，\r\n            GlobResult（Glob：“ ** \\*。B”，排除= [1.b，** \\ obj \\*。b“，** \\ bar \\*。b”]），），\r\n            GlobResult（Glob：“*.txt”，ubled = []），，\r\n            GlobResult（Glob：“*.a”，ubled = []），，\r\n            GlobResult（Glob：“*.cs”，排除= [“ bar”]）\r\n            这是给予的\r\n             \r\n","\r\n            Constructor taking individual arguments.\r\n            ":"\r\n            构造者采取个人论点。\r\n            \r\n","\r\n            Remove value cached for performance\r\n            ":"\r\n            删除可履行的值缓存\r\n            \r\n","\r\n                PRE cache\r\n            ":"\r\n                前缓存\r\n            \r\n","\r\n            Returns the evaluated, escaped value of the provided item definition's include.\r\n            ":"\r\n            返回所评估的，逃脱提供的项目定义的值。\r\n            \r\n","\r\n            Platform extension SDK\r\n            ":"\r\n            平台扩展SDK\r\n            \r\n","\r\n            Cleans up after running a batch.\r\n            ":"批量运行后清理。\r\n            \r\n","\r\n            Default constructor needed for XAML deserialization.\r\n            ":"\r\n            XAML值需要的默认构造函数。\r\n            \r\n","\r\n            The value to be passed to the ToolsVersion attribute of the MSBuild task used to directly build a project.\r\n            ":"\r\n            将要传递给用于直接构建项目的MSBUILD任务的ToolsVersion属性的值。\r\n            \r\n","\r\n            By default our logMode is Asynchronous. We do this\r\n            because we are hoping it will make the system \r\n            more responsive when there are a large number of logging messages\r\n            Note: Mono has issues with TPL Dataflow implementation,\r\n            so use synchronous version\r\n            ":"\r\n            默认情况下，我们的logMode是异步的。我们这样做\r\n            因为我们希望它能成为系统\r\n            当有大量的记录消息时，更响应\r\n            注意：Mono在TPL DataFlow实现中有问题，\r\n            因此，请使用同步版本\r\n            \r\n","\r\n            See ISupportInitialize.\r\n            ":"\r\n            请参阅Isupportinitialize。\r\n            \r\n","\r\n            Appends a command-line switch that takes a ITaskItem[] parameter, not quoting the individual parameters\r\n            This method appends a space to the command line (if it's not currently empty) before the switch.\r\n            ":"\r\n            附加命令行开关，该开关获取ITASCITEM []参数，而不是引用单个参数\r\n            此方法在开关之前将一个空间附加到命令行（如果当前不是空）。\r\n            \r\n","The set of targets to build":"建立目标的集合\r\n","\r\n            Unloads a project XML root element from the cache entirely, if it is not\r\n            in use by project loaded into this collection.\r\n            Returns true if it was unloaded successfully, or was not already loaded.\r\n            Returns false if it was not unloaded because it was still in use by a loaded ":"\r\n            如果不是\r\n            在该集合中加载的项目中使用。\r\n            如果成功卸载或尚未加载，则返回true。\r\n            如果未卸载，则返回false，因为加载仍在使用\r\n","\r\n            Gets or sets the parent target of the target being skipped.\r\n            ":"\r\n            获取或设置被跳过目标的母体目标。\r\n            \r\n","\r\n            When true, the build should log task inputs to the loggers.\r\n            ":"如果是，则构建应将任务输入记录到登录器。\r\n            \r\n","\r\n            Creates an unparented ProjectTaskElement, wrapping an unparented XmlElement.\r\n            Caller should then ensure the element is added to the XmlDocument in the appropriate location.\r\n            ":"\r\n            创建一个无与伦比的ProjectTaskelement，包装无与伦比的XMlelement。\r\n            然后，呼叫者应确保将元素添加到适当位置的xmldocument中。\r\n            \r\n","\r\n            Used in combination with ":"\r\n            与\r\n","Switch parameter to scan":"切换参数扫描\r\n","\r\n            Factory to create components of the type LoggingService\r\n            ":"\r\n            工厂创建类型LoggingService的组件\r\n            \r\n","\r\n            Processes the next action in the work queue.\r\n            ":"\r\n            处理工作队列中的下一个操作。\r\n            \r\n","\r\n            Helper to get the value of a built-in metadatum with\r\n            the specified name, if any.\r\n            ":"\r\n            帮助您获得内置元数据的价值\r\n            指定的名称（如果有）。\r\n            \r\n","Called by the RequestBuilder (implicitly through an event).  Non-overlapping with other RequestBuilders.":"由请求构造器调用（隐含通过事件）。与其他RequestBuilders的不重叠。\r\n","\r\n            Returns an iterator over the \"logical project\". The logical project is defined as\r\n            the unevaluated project obtained from the single MSBuild file that is the result\r\n            of inlining the text of all imports of the original MSBuild project manifest file.\r\n            ":"\r\n            通过“逻辑项目”返回迭代器。逻辑项目定义为\r\n            从单个msbuild文件获得的未评估项目是结果\r\n            包含原始MSBUILD项目清单文件的所有导入文本。\r\n            \r\n","ms-help://MS.VSCC.v80/MS.MSDN.v80/MS.VisualStudio.v80.en/dv_vstoc/html/06ddebea-2c83-4a45-bb48-6264c797ed93.htm":"ms-help：//ms.vscc.v80/ms.msdn.v80/ms.visualstudio.v80.en/dv_vstoc/html/06ddebea-2c83-4a45bb48-bb48-6264c797ed93.htm\r\n","\r\n            Unevaluated semicolon separated list of targets it runs after.\r\n            May be empty string.\r\n            ":"\r\n            未评估的半隆分离了它之后的目标列表。\r\n            可以是空字符串。\r\n            \r\n","Moniker for the sdk":"SDK的绰号\r\n","\r\n            Constructor called by Evaluator\r\n            ":"\r\n            评估员调用的构造函数\r\n            \r\n","\r\n            Gets or sets the unevaluated value of the contents of the task xml \r\n            Returns empty string if it is not present.\r\n            ":"\r\n            获取或设置任务XML内容的未评估值\r\n            如果不存在，则返回空字符串。\r\n            \r\n","the string to examine for characters that require quoting":"要检查需要引用的字符的字符串\r\n","\r\n            Whether or not this scope was reentered. Timing information is not recorded in these cases.\r\n            ":"\r\n            该范围是否重新进入。在这些情况下，未记录定时信息。\r\n            \r\n","\r\n                Gets the minimum version required. This value is specified by the project to indicate the minimum version of the\r\n                SDK that is required in order to build. This is useful in order to produce an error message if a name match can\r\n                be found but no acceptable version could be resolved.\r\n            ":"\r\n                获取最低版本。该值由项目指定，以指示该值的最低版本\r\n                为了构建所需的SDK。如果名称匹配可以，这对于产生错误消息很有用\r\n                可以找到但无法解决可接受的版本。\r\n            \r\n","The column number in the file where the task invocation is located.":"任务调用所在的文件中的列号。\r\n","\r\n            Last time logging happened\r\n            ":"\r\n            上次记录发生\r\n            \r\n","The bucket for the batch.":"批次的水桶。\r\n","\r\n            Delegate is called when the state for a build request entry has changed.\r\n            ":"当构建请求条目已更改时，将召集委托。\r\n            \r\n","\r\n            Gets a value indicating if the resolver is running in Visual Studio.\r\n            ":"\r\n            获取一个值，指示解析器是否在Visual Studio中运行。\r\n            \r\n","\r\n            The separator, if any, within this expression\r\n            ":"\r\n            该表达式中的分离器（如果有的话）\r\n            \r\n","\r\n            Determines whether the specified objects are equal, factoring in the specified bounds when comparing ":"\r\n            确定指定的对象是否相等，在比较时考虑在指定的范围中\r\n","The project files to use as the entry points in constructing the graph":"用于构建图的入口点的项目文件\r\n","The name of the target which is about to start":"目标的名称即将开始\r\n","Message to be formatted to fit on the console":"要格式化以适合控制台的消息\r\n","\r\n            Gets the name of the associated element. \r\n            Useful for display in some circumstances.\r\n            ":"获取关联元素的名称。\r\n            在某些情况下可显示。\r\n            \r\n","\r\n            Shuts down all of the managed nodes permanently.\r\n            ":"\r\n            永久关闭所有托管节点。\r\n            \r\n","\r\n            Skip all characters until we find the matching quote character.\r\n            ":"\r\n            跳过所有字符，直到找到匹配的引号字符。\r\n            \r\n","\r\n            Creates an instance of this exception using the specified error message.\r\n            ":"\r\n            使用指定的错误消息创建此异常的实例。\r\n            \r\n","\r\n            Constructs a standard BuildAbortedException.\r\n            ":"\r\n            构建标准的BuildAbortedException。\r\n            \r\n","Return null if we could not chain due to an error or the path not being found. return String.Empty if there is no next element in the chain":"如果由于错误或未发现路径而无法链接，请返回null。返回字符串。\r\n","\r\n            Indicates whether this property is required to have a value set.\r\n            ":"\r\n            指示该属性是否需要具有值集。\r\n            \r\n","\r\n            This wasn't built on because of a parent.\r\n            ":"\r\n            这不是因为父母而建立的。\r\n            \r\n","Target output items for the target. If batching will be null for everything except for the last target in the batch":"目标的目标输出项目。如果除了批处理中的最后一个目标以外的所有内容都将无效\r\n","true to release both managed and unmanaged resources; false to release only unmanaged resources..":"确实释放托管和不受管理的资源；虚假仅发布非管理资源。\r\n","The part of the target.":"目标的一部分。\r\n","\r\n            Retrieves any value we have in our metadata table for the metadata name and item type specified.\r\n            If no value is available, returns null.\r\n            ":"\r\n            检索我们在元数据表中为元数据名称和指定的项目类型中的任何值。\r\n            如果没有可用的值，请返回null。\r\n            \r\n","name of event sender":"事件发件人的名称\r\n","\r\n            Implementation of IEqualityComparer.GetHashCode.\r\n            ":"\r\n            IQualityComparer.gethashcode的实现。\r\n            \r\n","\r\n            Message sent from a node when a task is requesting or returning resources from the scheduler.\r\n            ":"\r\n            当任务请求或从调度程序返回资源时，从节点发送消息。\r\n            \r\n","\r\n            The request collection to which this belongs.\r\n            ":"\r\n            该请求收集所属的收集。\r\n            \r\n","The request for which results should be retrieved.":"应检索结果的请求。\r\n","The results for all previously pending requests, or null if there were none.":"所有先前待处理请求的结果，如果没有，则无效。\r\n","\r\n            this event is raised to log a message\r\n            ":"\r\n            此事件被提升以记录消息\r\n            \r\n","\r\n            Gets the number of occurences of the item.\r\n            ":"\r\n            获取物品的出现数量。\r\n            \r\n","\r\n            The global properties used to read the toolset.\r\n            ":"用于读取工具集的全局属性。\r\n            \r\n","\r\n            Whether evaluation should collect items ignoring condition,\r\n            as well as items respecting condition; and collect\r\n            conditioned properties, as well as regular properties\r\n            ":"\r\n            评估是否应收集忽略条件的项目，\r\n            以及尊重条件的项目；并收集\r\n            条件特性以及常规特性\r\n            \r\n","\r\n            This constructor allows event data to be initialized. Also the timestamp can be set\r\n            Sender is assumed to be \"MSBuild\".\r\n            ":"\r\n            该构造函数允许初始化事件数据。还可以设置时间戳\r\n            假定发件人是“ msbuild”。\r\n            \r\n","\r\n            Sets the specified metadata.\r\n            Predecessor is any preceding overridden metadata\r\n            ":"\r\n            设置指定的元数据。\r\n            前任是前面的任何覆盖元数据\r\n            \r\n","\r\n            The item type that generated items should have\r\n            ":"\r\n            生成项目的项目类型应具有\r\n            \r\n","\r\n            Gets the request which caused the circular dependency.\r\n            ":"\r\n            获取导致循环依赖性的请求。\r\n            \r\n","\r\n            Gets or sets the Outputs value. \r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"\r\n            获取或设置输出值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n","\r\n            Shuts down the loggers and removes them\r\n            ":"\r\n            关闭伐木者并将其删除\r\n            \r\n","\r\n            Removes the specified configuration from the cache.\r\n            ":"\r\n            从缓存中删除指定的配置。\r\n            \r\n","\r\n            Gets the outputs (as an array of ITaskItem) from the specified output parameter.\r\n            ":"\r\n            从指定的输出参数中获取输出（作为itaskItem的数组）。\r\n            \r\n","\r\n            Provides a way for Microsoft.Build.dll to provide a more efficient dictionary factory\r\n            (using ArrayDictionary`2). Since that is an implementation detail, it is not included\r\n            in Microsoft.Build.Framework.dll so we need this extensibility point here.\r\n            ":"\r\n            为microsoft.build.dll提供了一种提供更高效的词典工厂的方式\r\n            （使用arrayDictionary`2）。由于这是一个实现细节，因此不包括在内\r\n            在Microsoft.build.framework.dll中，因此我们在这里需要此可扩展性。\r\n            \r\n","\r\n            Updates the evaluation maps for BeforeTargets and AfterTargets\r\n            ":"\r\n            更新beforetargets和Aftertargets的评估图\r\n            \r\n","\r\n            Never null except during load or creation.\r\n            This should be protected, but \"protected internal\" means \"OR\" not \"AND\",\r\n            so this is not possible.\r\n            ":"\r\n            除了加载或创建期间，切勿无效。\r\n            这应该受到保护，但“受保护的内部”表示“或“不”和“，”，\r\n            因此，这是不可能的。\r\n            \r\n"," (default) or ":" （默认）或\r\n","\r\n                The path to the assembly containing the project cache plugin.\r\n            ":"\r\n                包含项目缓存插件的组件的路径。\r\n            \r\n",". ECMA-335 defines this operation with the following note:":"。 ECMA-335用以下注释定义了此操作：\r\n","\r\n            Private constructor, use CreateAcquireRequest or CreateReleaseRequest to make instances.\r\n            ":"私人构造函数，使用CreateAcquirereQuest或createleleaserequest制作实例。\r\n            \r\n","The path to the projec file which was just built":"刚刚构建的ProJec文件的路径\r\n","\r\n            Unevaluated MSBuildRuntime on the task.\r\n            May be empty string.\r\n            ":"\r\n            在任务上未评估msbuildruntime。\r\n            可以是空字符串。\r\n            \r\n"," used to log relevant events.":" 用于记录相关事件。\r\n","\r\n            Dumps the hierarchy of requests.\r\n            ":"\r\n            转储请求的层次结构。\r\n            \r\n","\r\n            BuiltIn,\r\n            ":"\r\n            内置，\r\n            \r\n","\r\n            Updates the host object table when a project is renamed.\r\n            Old full path may be null.\r\n            ":"\r\n            重命名时，更新主机对象表。\r\n            旧的完整路径可能是无效的。\r\n            \r\n","\r\n            Whether the tools version was set by the /tv switch or passed in through an msbuild callback\r\n            directly or indirectly.\r\n            ":"\r\n            是通过 /电视开关设置工具版本还是通过MSBuild回调传递\r\n            直接或间接。\r\n            \r\n","\r\n            Location of the keepMetadata attribute, if any\r\n            ":"\r\n            keepmetadata属性的位置，如果有的话\r\n            \r\n","\r\n            The directory of the project being built\r\n            If there is no project filename defined, returns null.\r\n            ":"\r\n            正在构建的项目目录\r\n            如果没有定义项目文件名，请返回null。\r\n            \r\n","The error code string.":"错误代码字符串。\r\n","\r\n            Gets one of the imported projects.\r\n            ":"\r\n            获取进口项目之一。\r\n            \r\n","\r\n            Assigns requests with the smallest file sizes first.\r\n            ":"\r\n            首先使用最小的文件大小分配请求。\r\n            \r\n","\r\n            The location of the reassignment.\r\n            ":"\r\n            重新分配的位置。\r\n            \r\n","\r\n            The import is not implicitly added and is explicitly added in a user-specified location.\r\n            ":"\r\n            该导入不会被隐式添加，并在用户指定的位置中明确添加。\r\n            \r\n","True of the instances are equivalent, false otherwise.":"真实的实例是等效的，否则是错误的。\r\n","\r\n             Location contextual information which are attached to logging events to \r\n             say where they are in relation to the process, engine, project, target,task which is executing\r\n            ":"\r\n             位置上下文信息附加到记录事件到\r\n             说出它们与正在执行的过程，引擎，项目，目标，任务相关的位置\r\n            \r\n","\r\n            Unevaluated include value\r\n            ":"\r\n            未评估包括价值\r\n            \r\n","Input file":"输入文件\r\n","\r\n            Use this for Directory.EnumerateFolders(path, pattern, option)\r\n            ":"\r\n            将其用于目录。\r\n            \r\n","\r\n            Attempts to get results from the cache for this request.  If results are available, reports them to the\r\n            correct node.  If that action causes the parent to become ready and its node is idle, the parent is\r\n            resumed.\r\n            ":"\r\n            试图从缓存中获取此请求的结果。如果有结果，请将其报告给\r\n            正确的节点。如果该动作导致父母准备就绪，并且其节点是空闲的，则父母是\r\n            恢复。\r\n            \r\n","\r\n            Types of locals relevant to the item pass\r\n            ":"\r\n            与项目通行证相关的当地人类型\r\n            \r\n",", it is a singleton for the main process.  To get an instance of it, you\r\n            must have access to an ":"，这是主要过程的单身人士。为了获得一个实例，您\r\n            必须访问\r\n","\r\n            The type of action to take on this response.\r\n            ":"\r\n            采取此响应的动作类型。\r\n            \r\n","\r\n            Initializes the logger and adds it to the list of loggers maintained by the engine.\r\n            This method is not expected to be called from multiple threads\r\n            ":"\r\n            初始化记录仪，并将其添加到引擎维护的记录列表中。\r\n            预计不会从多个线程调用此方法\r\n            \r\n","\r\n            The node manager contains state which is not supposed to persist between builds, make sure this is cleared.\r\n            ":"\r\n            节点管理器包含不应在构建之间持续存在的状态，请确保已清除。\r\n            \r\n","\r\n            Timestamp\r\n            ":"\r\n            时间戳\r\n            \r\n","The path to the file to load.":"加载文件的路径。\r\n","\r\n            will recognize an evaluation is indeed necessary.\r\n            Does not mark the underlying project file as requiring saving.\r\n            ":"\r\n            确实需要认识到评估确实是必要的。\r\n            不要将基础项目文件标记为需要保存。\r\n            \r\n","\r\n            The LoggingService used to log messages.\r\n            ":"\r\n            用于记录消息的Loggingservice。\r\n            \r\n","\r\n             Do a partial comparison between two assembly name extensions.\r\n             Compare the fields of A and B on the following conditions:\r\n             1) A.Field has a non null value\r\n             2) The field has been selected in the comparison flags or the default comparison flags are passed in.\r\n            \r\n             If A.Field is null then we will not compare A.Field and B.Field even when the comparison flag is set for that field unless skipNullFields is false.\r\n             ":"\r\n             在两个汇编名称扩展程序之间进行部分比较。\r\n             在以下条件下比较A和B的字段：\r\n             1）A.Field具有无效的值\r\n             2）在比较标志中选择了该字段，或者传递了默认比较标志。\r\n            \r\n             如果A.Field为null，那么即使为该字段设置了比较标志，除非Skipnullfields是错误的，否则我们也不会比较A.Field和B.Field。\r\n             \r\n","\r\n            Set all the supplied metadata on all the supplied items.\r\n            ":"\r\n            将所有提供的元数据设置在所有提供的物品上。\r\n            \r\n","\r\n            Enumeration which indicates what kind of queue is being passed\r\n            ":"\r\n            枚举表明要通过了哪种队列\r\n            \r\n","\r\n            The build request entry to which this target belongs.\r\n            ":"\r\n            该目标所属的构建请求条目。\r\n            \r\n","\r\n            A functor that returns the value of the metadata in the match\r\n            that is contained in the metadata dictionary it was created with.\r\n            ":"\r\n            返回比赛中元数据值的函子\r\n            它包含在其创建的元数据字典中。\r\n            \r\n","\r\n            Adds batchable parameters from a property element into the list. If the property element was\r\n            a task, these would be its raw parameter values.\r\n            ":"\r\n            将属性元素的可批处理参数添加到列表中。如果财产元素是\r\n            一项任务，这些将是其原始参数值。\r\n            \r\n","The output files.":"输出文件。\r\n","\r\n            The reason that a target was built by its parent target.\r\n            ":"\r\n            目标是由其母体目标构建的原因。\r\n            \r\n","IDictionary of installed SDKS and their tuples containing (location, platform version). Version may be null if the SDK targets multiple versions.":"已安装的SDK及其元素包含的IDictionary（位置，平台版本）。如果SDK针对多个版本，则版本可能为null。\r\n","\r\n            Whether debugging of project files is enabled.\r\n            By default it is not.\r\n            ":"\r\n            是否启用了项目文件的调试。\r\n            默认情况下不是。\r\n            \r\n","\r\n            Provided an item element that has been renamed with a new unevaluated include,\r\n            returns a best effort guess at the evaluated include that results.\r\n            If the best effort expansion produces anything other than one item, it just\r\n            returns the unevaluated include.\r\n            This is not at all generalized, but useful for the majority case where an item is a very\r\n            simple file name with perhaps a property prefix.\r\n            ":"\r\n            提供已重命名的项目元素，包括新的未评估，包括\r\n            回报最佳的努力猜测评估的结果包括结果。\r\n            如果最好的扩展产生了一项以外的任何东西，那就只是\r\n            返回未评估的包括。\r\n            这一点根本不是广义的，但对于大多数情况，一个项目非常有用\r\n            带有属性前缀的简单文件名。\r\n            \r\n","\r\n            This means that either there is no host object available, or that the host object is \r\n            not capable of supporting all of the features required for this build.  Therefore,\r\n            ToolTask should fallback to an alternate means of doing the build, such as invoking\r\n            the command-line tool.\r\n            ":"\r\n            这意味着没有可用的主机对象，或者主机对象是\r\n            无法支持此构建所需的所有功能。所以，\r\n            工具任务应退回到替代手段的构建手段，例如调用\r\n            命令行工具。\r\n            \r\n","IEnumerable\r\n        ":"ienumerable\r\n        \r\n","/D:WIN32":"/d：win32\r\n","\r\n            Stores the cache in a set of concurrent dictionaries.  The main dictionary is by build submission ID and the inner dictionary contains a case-insensitive SDK name and the cached ":"\r\n            将缓存存储在一组并发词典中。主要词典是通过构建提交ID，内部字典包含一个不敏感的SDK名称和缓存\r\n","\r\n            Implementation of IEquatable.\r\n            ":"\r\n            实施i equatable。\r\n            \r\n","\r\n            Sends the specified packet to this node.\r\n            ":"\r\n            将指定的数据包发送到此节点。\r\n            \r\n","\r\n            The set of global properties which should be used when building this project.\r\n            ":"\r\n            构建该项目时应使用的全球属性集。\r\n            \r\n","\r\n            Extension to IEnumerable of KVP of string, something to just return the somethings.\r\n            ":"\r\n            延伸到Inumerable的kVP字符串，只是返回一些东西。\r\n            \r\n","\r\n            The file attributes of a file\r\n            ":"\r\n            文件的文件属性\r\n            \r\n","Format string arguments":"格式字符串参数\r\n","\r\n            A hashcode calculated from the fileversion\r\n            ":"\r\n            从文件列表中计算出的哈希码\r\n            \r\n","\r\n            An event to signal when a response has been received.\r\n            ":"\r\n            收到响应时发出信号的事件。\r\n            \r\n","The results for the target.":"目标的结果。\r\n","\r\n            Help information for this ":"\r\n            为此提供帮助\r\n","\r\n            The metadata name\r\n            ":"\r\n            元数据名称\r\n            \r\n","The result to examine":"检查的结果\r\n","\r\n            Gets or sets the level of detail to show in the event log.\r\n            ":"\r\n            获取或设置在事件日志中显示的细节级别。\r\n            \r\n","\r\n            Checks the condition passed in.  If it's false, it emits an error message to the console\r\n            indicating that there's a problem with the console logger.  These \"problems\" should\r\n            never occur in the real world after we ship, unless there's a bug in the MSBuild\r\n            engine such that events aren't getting paired up properly.  So the messages don't\r\n            really need to be localized here, since they're only for our own benefit, and have\r\n            zero value to a customer.\r\n            ":"\r\n            检查传递的条件。如果是错误的，它会向控制台发出错误消息\r\n            表明控制台记录仪存在问题。这些“问题”应该\r\n            除非MSBUILD中有错误\r\n            引擎使事件无法正确配对。因此消息不\r\n            确实需要在这里进行本地化，因为它们只是为了我们自己的利益，并且\r\n            客户的价值为零。\r\n            \r\n","\r\n            Special hack for web projects. It can happen that there is no Release configuration for solutions\r\n            containing web projects, yet we still want to be able to build the Release configuration for\r\n            those projects. Since the ASP.NET project configuration defaults to the solution configuration,\r\n            we allow Release even if it doesn't actually exist in the solution.\r\n            ":"\r\n            Web项目的特殊黑客。可能没有针对解决方案的释放配置\r\n            包含Web项目，但我们仍然希望能够为\r\n            那些项目。由于ASP.NET项目配置默认为解决方案配置，因此\r\n            我们允许释放解决方案中实际上不存在。\r\n            \r\n","\r\n            The target previously built successfully.\r\n            ":"\r\n            目标先前成功构建。\r\n            \r\n"," to the project was loaded with the formated preserved, otherwise ":" 向项目加载，上面保存了保存，否则\r\n","Metadata matching.":"元数据匹配。\r\n","\r\n            Returns the configuration cached under the specified configuration id.\r\n            ":"\r\n            返回指定配置ID下缓存的配置。\r\n            \r\n","\r\n            Enumeration of the results of target dependency analysis.\r\n            ":"\r\n            目标依赖分析结果的列举。\r\n            \r\n","Outputs that correspond ot the sources (used for same file processing)":"对应源的输出（用于同一文件处理）\r\n","\r\n            Creates the traversal and metaproject instances necessary to represent the solution and populates new configurations with them.\r\n            ":"\r\n            创建代表解决方案并使用它们的新配置所需的遍历和元标记实例。\r\n            \r\n","\r\n            Deserializes and routes a packet.  Not used in the in-proc node.\r\n            ":"\r\n            应对和路由数据包。未在程序内节点中使用。\r\n            \r\n"," For the \"ProjectExtensions\" element, the getter returns null and the setter\r\n            throws an exception for any value. ":" 对于“ ProjectExtensions”元素，Getter返回null和setter\r\n            对任何值抛出例外。\r\n","\r\n            The singleton comparer to use for when an exact match is desired\r\n            ":"\r\n            需要在需要精确匹配时使用的单例比较\r\n            \r\n","The item type of items to return.":"要返回的项目类型。\r\n","\r\n            Remove items from the world. Removes to items that are part of the project manifest are backed up, so \r\n            they can be reverted when the project is reset after the end of the build.\r\n            ":"\r\n            从世界上删除项目。删除项目清单一部分的项目已备份，因此\r\n            当项目结束后重置项目时，可以将它们恢复。\r\n            \r\n","Message string":"消息字符串\r\n","\r\n            Returns an instance based on this project, but completely disconnected.\r\n            This instance can be used to build independently.\r\n            Before creating the instance, this will reevaluate the project if necessary, so it will not be dirty.\r\n            The instance is immutable; none of the objects that form it can be modified. This makes it safe to\r\n            access concurrently from multiple threads.\r\n            ":"\r\n            返回基于此项目的实例，但完全断开了连接。\r\n            此实例可用于独立构建。\r\n            在创建实例之前，这将在必要时重新评估项目，因此不会脏。\r\n            实例是不可变的；没有一个形式的对象可以修改。这使得安全\r\n            从多个线程同时访问。\r\n            \r\n","\r\n            Gets and sets the value of the TaskName attribute.\r\n            ":"\r\n            获取并设置任务名称属性的值。\r\n            \r\n","\r\n            Generate a list which contains the properties referenced by the properties \r\n            enumerable object\r\n            ":"\r\n            生成一个包含属性引用的属性的列表\r\n            枚举对象\r\n            \r\n","\r\n            This reports a result for a request on which this entry was waiting.\r\n            PERF: Once we have fixed up all the result reporting, we can probably\r\n            optimize this.  See the comment in BuildRequestEngine.ReportBuildResult.\r\n            ":"\r\n            这报告了该条目正在等待的请求的结果。\r\n            perf：一旦我们修复了所有结果报告，我们就可以\r\n            优化此。请参阅buildrequestengine.ReportBuildResult中的评论。\r\n            \r\n","The unescaped metadata value.":"UNESCAPEL元数据值。\r\n","\r\n            This method extracts the whole part of the version number from the specified line\r\n            containing the solution file format header, and throws an exception if the version number\r\n            is outside of the valid range.\r\n            \r\n            The solution file header looks like this:\r\n            \r\n                Microsoft Visual Studio Solution File, Format Version 9.00\r\n            \r\n            ":"\r\n            此方法从指定行提取版本号的整个部分\r\n            包含解决方案文件格式标题，并在版本号上引发异常\r\n            不在有效范围内。\r\n            \r\n            解决方案文件标头看起来像这样：\r\n            \r\n                Microsoft Visual Studio解决方案文件，格式9.00\r\n            \r\n            \r\n","\r\n            Location of removeMetadata, if any.\r\n            ":"\r\n            RemoveMetadata的位置，如果有的话。\r\n            \r\n","\r\n            Objects implementing this interface may be used by a Node to process build requests\r\n            and generate build results.\r\n            ":"\r\n            实现此接口的对象可以由节点使用来处理构建请求\r\n            并生成构建结果。\r\n            \r\n","\r\n            A task representing the last packet write, so we can chain packet writes one after another.\r\n            We want to queue up writing packets on a separate thread asynchronously, but serially.\r\n            Each task drains the ":"\r\n            代表最后一个数据包编写的任务，因此我们可以链条包装链写一个。\r\n            我们想在单独的线程上排队编写数据包，但要串行。\r\n            每个任务都排干\r\n","\r\n            Returns the new build engine interface.\r\n            ":"\r\n            返回新的构建引擎界面。\r\n            \r\n","It may also be useful in specialized build environments where property names must differ from the\r\n            normally used name in order to maintain compatibility with the project system.":"它在属性名称必须与之不同的专业构建环境中也可能有用\r\n            通常使用的名称以保持与项目系统的兼容性。\r\n","First index that is not a slash. Returns the string's length if end of string is reached":"第一个索引不是斜线。如果达到字符串的结尾，则返回字符串的长度\r\n","The moniker is the Name/Version string. Example: \"Windows Desktop, Version=10.0.0.1\"":"绰号是名称/版本字符串。示例：“ Windows桌面，版本= 10.0.0.1”\r\n","\r\n            If null, no file is saved to disk\r\n            ":"\r\n            如果null，则没有将文件保存到磁盘\r\n            \r\n","\r\n            Determines if we are completely done with this submission and can complete it so the user may access results.\r\n            ":"\r\n            确定我们是否完全完成此提交并可以完成它，以便用户可以访问结果。\r\n            \r\n","\r\n            The configuration ID assigned by the node\r\n            ":"\r\n            节点分配的配置ID\r\n            \r\n","\r\n            Gets or sets the evaluated value, escaped as necessary\r\n            ":"\r\n            获取或设置评估的价值，必要时逃脱\r\n            \r\n","\r\n            Intrinsic function that returns the specified built-in modifer value of the items in itemsOfType\r\n            Tuple is {current item include, item under transformation}.\r\n            ":"\r\n            内在函数返回项目中指定的内置修饰符值\r\n            元组为{当前项目包括，转换下的项目}。\r\n            \r\n","\r\n            This property was never used for anything.  It should have been removed before we shipped MSBuild 4.0.\r\n            ":"\r\n            该属性从未用于任何东西。在我们运送msbuild 4.0之前，应该已经将其删除。\r\n            \r\n","The name of the uninitialized property that was read.":"已阅读的非初始化属性的名称。\r\n","\r\n            The configurations\r\n            ":"\r\n            配置\r\n            \r\n","\r\n            Save the project to the file system, if dirty.\r\n            Uses the default encoding.\r\n            ":"\r\n            如果肮脏，将项目保存到文件系统中。\r\n            使用默认编码。\r\n            \r\n","\r\n            Kills the specified process\r\n            ":"\r\n            杀死指定的过程\r\n            \r\n","Path to the SDK.":"通往SDK的路径。\r\n","Flags specified for the build request.":"为构建请求指定的标志。\r\n","\r\n            Current version of this MSBuild Engine assembly in the \r\n            form, e.g, \"4.0\"\r\n            ":"\r\n            此MSBUILD引擎组件的当前版本\r\n            形式，例如“ 4.0”\r\n            \r\n","\r\n            The global properties to use.\r\n            ":"\r\n            要使用的全局属性。\r\n            \r\n"," (both outside and inside project cone)\r\n            ":" （无论外部和内部项目锥））\r\n            \r\n","\r\n            Returns the value of the attribute.\r\n            If the attribute is not present, returns an empty string.\r\n            ":"\r\n            返回属性的值。\r\n            如果不存在该属性，请返回一个空字符串。\r\n            \r\n","\r\n            Creates an instance of this exception using rich error information.\r\n            Internal for unit testing\r\n            ":"\r\n            使用丰富的错误信息创建此异常的实例。\r\n            内部测试\r\n            \r\n","\r\n            This means that there exists an appropriate host object for this task, it can support\r\n            all of the parameters passed in, and it should be invoked to do the real work of the task.\r\n            ":"\r\n            这意味着存在适合此任务的适当主机对象，它可以支持\r\n            所有参数传递给了，应调用它来完成任务的真实工作。\r\n            \r\n","\r\n            Call this method to notify listeners of how the project data was evaluated.\r\n            ":"\r\n            调用此方法以通知听众如何评估项目数据。\r\n            \r\n","\r\n            Gets or sets the Project value. \r\n            ":"\r\n            获取或设置项目值。\r\n            \r\n","\r\n            Assigns the specified request to the specified node.\r\n            ":"\r\n            将指定的请求分配给指定的节点。\r\n            \r\n","\r\n            Creates an item with the specified include and the metadata from the specified base item\r\n            New item is associated with the passed in defining project, not that of the original item. \r\n            ":"用指定的Incluble和指定基本项目的元数据创建一个项目\r\n            新项目与定义项目中传递的项目相关联，而不是原始项目。\r\n            \r\n","\r\n            Load content of SDKManifest.xml\r\n            ":"\r\n            加载sdkmanifest.xml的内容\r\n            \r\n","\r\n            Retrieves the project logging context.\r\n            ":"检索项目记录上下文。\r\n            \r\n","\r\n            Not public since the only creation scenario is setting on a project.\r\n            ":"\r\n            不是公开的，因为唯一的创建方案是在项目上设置。\r\n            \r\n","\r\n            We create our own kind of element, that we can give location information to.\r\n            ":"\r\n            我们创建自己的元素，可以将其提供给位置信息。\r\n            \r\n","\r\n            Collection of all evaluated item definitions, one per item-type\r\n            ":"\r\n            收集所有评估的项目定义，每个项目类型\r\n            \r\n","\r\n            Contains all warnings that should be logged as errors.\r\n            Non-null empty set when all warnings should be treated as errors.\r\n            ":"\r\n            包含所有应记录为错误的警告。\r\n            当所有警告应视为错误时，非无效的空套。\r\n            \r\n","\r\n            Log a comment\r\n            ":"\r\n            记录评论\r\n            \r\n","\r\n            A timeout to wait for a task to terminate before killing it.  In milliseconds.\r\n            ":"\r\n            等待任务终止之前的超时。以毫秒。\r\n            \r\n","\r\n            Initialize an unparented ProjectPropertyElement\r\n            ":"\r\n            初始化无与伦比的Project Propertyelement\r\n            \r\n","\r\n            Enable restore first functionality in MSBuild.exe\r\n            ":"\r\n            在msbuild.exe中启用还原第一功能\r\n            \r\n","The full path to the executable hosting the current process, or null if running on Full Framework on Windows.":"可执行文件托管当前过程的完整路径，如果在Windows上的全框架上运行，则null。\r\n","Whether the OriginalItemSpec should be added as a piece \r\n            of magic metadata. For copying of items this is useful but for cloning of items this adds \r\n            additional metadata which is not useful because the OriginalItemSpec will always be identical \r\n            to the ItemSpec, and the addition will and will cause copy-on-write to trigger.\r\n            ":"是否应添加原始列型者\r\n            魔术元数据。要复制项目这很有用，但对于物品的克隆，这会增加\r\n            其他元数据无用，因为OriginalItemspec将始终是相同的\r\n            到ItemSpec，并将添加的意愿并将导致抄袭触发。\r\n            \r\n","\r\n            The UI display name for the editor\r\n            ":"\r\n            编辑器的UI显示名称\r\n            \r\n","\r\n            Flag indicating if we should trace.\r\n            ":"\r\n            标志指示我们是否应该追踪。\r\n            \r\n","\r\n            This class must be serializable as it is used for metadata passed to tasks, which may\r\n            be run in a separate appdomain.\r\n            ":"\r\n            此类必须是可序列化的，因为它用于传递给任务的元数据，这可能\r\n            在单独的应用程序中运行。\r\n            \r\n","\r\n            Gets or sets the reference location\r\n            ":"\r\n            获取或设置参考位置\r\n            \r\n","\r\n            Needed to provide a compat shim for numeric/version comparisons\r\n            on MSBuildToolsVersion, which were fine when it was a number\r\n            but now cause the project to throw InvalidProjectException when\r\n            ToolsVersion is \"Current\". https://github.com/Microsoft/msbuild/issues/4150\r\n            ":"\r\n            需要为数字/版本比较提供compat shim\r\n            在MSBuildToolsVersion上，当它是一个数字时，这很好\r\n            但现在导致项目抛出InvalidProjectException时\r\n            ToolsVersion是\"当前\"。 https://github.com/Microsoft/msbuild/issues/4150\r\n            \r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n            Adds an item definition group after the last existing item definition group, if any; otherwise\r\n            adds an item definition group after the last existing property group, if any; otherwise\r\n            adds a new item definition group at the end of the project.\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n            在最后一个现有项目定义组之后添加项目定义组（如果有）；否则\r\n            在最后一个现有属性组之后添加项目定义组（如果有）；否则\r\n            在项目末尾添加了一个新项目定义组。\r\n            \r\n","When the frameworkName is null":"当frameworkname为null时\r\n","\r\n            We have received the node shutdown packet for this node, we should remove it from our list of providers.\r\n            ":"\r\n            我们已经收到了此节点的节点关闭数据包，我们应该从提供商列表中将其删除。\r\n            \r\n","\r\n            Has the project root element been explicitly loaded for a build or has it been implicitly loaded\r\n            as part of building another project.\r\n            ":"\r\n            项目根元素是否已明确为构建加载，或者是隐式加载的\r\n            作为建立另一个项目的一部分。\r\n            \r\n",", called for each\r\n                project created during graph creation. This value can be null, which uses\r\n                a default implementation that calls the ProjectInstance constructor. See the remarks\r\n                on ":"，每个人都要求\r\n                在图形创建期间创建的项目。该值可以为null，它使用\r\n                称为ProjectInstance构造函数的默认实现。看到言论\r\n                上\r\n","\r\n            Register a distributed logger. This involves creating a new eventsource sink \r\n            and associating this with the central logger. In addition the sinkId needs \r\n            to be put in the loggerDescription so that nodes know what they need to \r\n            tag onto the event so that the message goes to the correct logger.\r\n            \r\n            The central logger is initialized before the distributed logger\r\n            ":"\r\n            注册分布式记录器。这涉及创建一个新的Eventsource sink\r\n            并将其与中央记录仪相关联。另外需求\r\n            要放入loggerDescription，以便节点知道他们需要什么\r\n            将标记到事件上，以使消息传达到正确的记录器。\r\n            \r\n            中央记录仪在分布式记录器之前初始化\r\n            \r\n","The project root element":"项目根元素\r\n","\r\n            Prepares the data object for evaluation.\r\n            ":"\r\n            准备数据对象进行评估。\r\n            \r\n","\r\n            Current element\r\n            ":"\r\n            当前元素\r\n            \r\n","\r\n            The condition on the target was evaluated as false.\r\n            ":"\r\n            目标上的条件被评估为假。\r\n            \r\n","\r\n            An implementation of IComparer useful for comparing the keys\r\n            on DictionaryEntry's\r\n            ":"\r\n            IComparer的实现可用于比较键\r\n            在字典上\r\n            \r\n","\r\n            Don't actually have anything to do in the method, but the method is required when implementing an optional field\r\n            ":"\r\n            实际上没有任何事情要做，但是实现可选字段时需要该方法\r\n            \r\n","\r\n            The design-time event source\r\n            ":"\r\n            设计时间活动来源\r\n            \r\n","\r\n            Returns Visual Studio major version\r\n            ":"\r\n            返回视觉工作室主要版本\r\n            \r\n","\r\n            Try to get one element from the list. Upon leaving the function 'candidate' will be at the head of the Mru list.\r\n            This function is not thread-safe.\r\n            ":"\r\n            尝试从列表中获取一个元素。离开功能后，“候选人”将处于MRU列表的主角。\r\n            此功能不是线程安全。\r\n            \r\n","The translator to use for the values in the dictionary.":"用于字典中值的翻译器。\r\n","\r\n            Stores the singleton instance for a particular process.\r\n            ":"\r\n            存储Singleton实例以进行特定过程。\r\n            \r\n","\r\n            Cache the contents of this project instance to the translator.\r\n            The object is retained, but the bulk of its content is released.\r\n            ":"\r\n            将该项目实例的内容缓存到转换器。\r\n            保留该对象，但其大部分内容已发布。\r\n            \r\n",". This is only set when an import would have been included\r\n            but was ignored to due being invalid. This does not include when a globbed import returned\r\n            no matches, or a conditioned import that evaluated to false.\r\n            ":"。只有在包括导入的时候才设置\r\n            但由于无效而被忽略。这不包括当返回地球的进口\r\n            没有匹配或评估为false的条件导入。\r\n            \r\n","\r\n            Mapping of nodes to the configurations they know about.\r\n            ":"\r\n            将节点映射到他们所知道的配置。\r\n            \r\n","\r\n            Verify the parent is a usingTaskElement and that the taskFactory attribute is set\r\n            ":"\r\n            验证父是使用taskelement，并且设置了任务factory属性\r\n            \r\n","A collection of targets on which this target depends.":"该目标取决于的目标集合。\r\n"," compared to all other Rules in the system.\r\n            ":" 与系统中的所有其他规则相比。\r\n            \r\n","\r\n            Add a started event to the performance counter, by adding the event this sets the start time of the performance counter\r\n            ":"\r\n            通过添加事件，将启动事件添加到性能计数器中\r\n            \r\n","\r\n            Returns the minimum logger verbosity required to log a message with the given importance.\r\n            ":"\r\n            返回以给定重要性记录消息所需的最小记录器冗长。\r\n            \r\n","\r\n            Result of profiling an evaluation\r\n            ":"\r\n            分析评估的结果\r\n            \r\n","\r\n            No explicit setting, uses the setting on the\r\n            project collection.\r\n            This is the default.\r\n            ":"\r\n            没有明确的设置，使用\r\n            项目收集。\r\n            这是默认值。\r\n            \r\n","\r\n            Returns the path to find override tasks, or null if none was specified\r\n            ":"\r\n            返回查找覆盖任务的路径，或者如果未指定未指定的任务\r\n            \r\n","\r\n            MaxOSVersionTested found in the sdk manifest, defaults to 6.2.1 for framework extension SDKs when manifest does not have this property set\r\n            ":"\r\n            在SDK清单中发现的maxosseriontested，当清单没有此属性设置时，对于框架扩展SDK的默认为6.2.1\r\n            \r\n","\r\n            Indicates to the TaskHost that it is no longer needed.\r\n            Called by TaskBuilder when the task using the EngineProxy is done.\r\n            ":"向任务主机指示不再需要它。\r\n            通过TaskBuilder调用时使用EngineProxy的任务时。\r\n            \r\n","Project filename/path string, or null.":"项目文件名/路径字符串或null。\r\n","\r\n            Translates a PropertyDictionary of ProjectPropertyInstances.\r\n            ":"\r\n            翻译一个项目propopertyinstances的物业界限。\r\n            \r\n","\r\n            Configure warnings as messages and errors based on properties defined in the project.\r\n            ":"\r\n            根据项目定义的属性将警告作为消息和错误配置。\r\n            \r\n","\r\n            This is the hierarchy of build requests as they were created.\r\n            ":"\r\n            这是构建请求创建的层次结构。\r\n            \r\n","\r\n            Non-serializable CultureInfo object\r\n            ":"\r\n            不可用的培养物对象\r\n            \r\n","\r\n            Takes the root element which was added to the results cache.\r\n            ":"\r\n            将添加到结果缓存中的根元素。\r\n            \r\n","\r\n            Adds the specified metadata to the item definition.\r\n            ":"\r\n            将指定的元数据添加到项目定义中。\r\n            \r\n","\r\n            Char.IsWhitespace() is not identical in behavior to regex's \\s character class,\r\n            but it's extremely close, and it's what we use in conditional expressions.\r\n            ":"\r\n            char.iswhitespace（）在行为上与Regex的角色类别不一样，\r\n            但这是非常接近的，这就是我们在条件表达式中使用的。\r\n            \r\n","\r\n            Get the evaluated value of a metadata on this item, possibly from an item definition. \r\n            Returns empty string if it does not exist.\r\n            To determine whether a piece of metadata does not exist vs. simply has no value, use ":"\r\n            从项目定义中获取该项目上元数据的评估值。\r\n            如果不存在，则返回空字符串。\r\n            要确定一块元数据是否不存在，而不是没有价值，请使用\r\n","\r\n            List of values and names available in the item definition pass of evaluation\r\n            ":"\r\n            评估的项目定义通过中可用的值和名称列表\r\n            \r\n","The command line used by a task to launch\r\n            its underlying tool/executable.":"任务启动的命令行\r\n            其基础工具/可执行文件。\r\n"," is a transform expression)>":" 是转换表达式）>\r\n","The name of the parameter on the task which produces the output.":"产生输出的任务上的参数名称。\r\n","The target SDK name.":"目标SDK名称。\r\n","\r\n            Parse a ProjectSdkElement\r\n            ":"\r\n            解析一个项目\r\n            \r\n","\r\n            If true, we will force all tasks to run in the MSBuild task host EXCEPT\r\n            a small well-known set of tasks that are known to depend on IBuildEngine\r\n            callbacks; as forcing those out of proc would be just setting them up for\r\n            known failure.\r\n            ":"\r\n            如果为true，我们将强制所有任务在MSBUILD任务主机中运行\r\n            一组众所周知的任务，这些任务依赖于Ibuildengine\r\n            回调;因为迫使这些人只是为他们准备\r\n            已知的失败。\r\n            \r\n","\r\n            If the property's value has changed, it logs a PropertyReassignment event.\r\n            ":"\r\n            如果属性的值已更改，它将记录一个属性的签名事件。\r\n            \r\n","\r\n            True if the one implicit core has been allocated by ":"\r\n            如果是一个隐式核心，则是真的\r\n","The event args":"事件args\r\n","\r\n            Gets the F1-help keyword associated with this error, for the host IDE.\r\n            ":"\r\n            为主机IDE获取与此错误关联的F1-HELP关键字。\r\n            \r\n","\r\n            This interface represents an object which can act as a source of items for the Expander.\r\n            ":"\r\n            该接口表示可以充当扩展器项目来源的对象。\r\n            \r\n"," class.\r\n            Future engine API should be added to the class as opposed to introducing yet another version of the IBuildEngine interface.\r\n            ":" 班级。\r\n            应将未来的引擎API添加到课程中，而不是引入IbuildEngine界面的另一个版本。\r\n            \r\n","\r\n            The maximum number of bytes to write\r\n            ":"\r\n            编写的最大字节数\r\n            \r\n","Specifies that an output will not be null even if the corresponding type allows it.":"即使相应的类型允许，输出也不会为null。\r\n","\r\n            Implementation of ITranslator for writing to a stream.\r\n            ":"\r\n            实施iTranslator以写入流。\r\n            \r\n","\r\n            Appends a command-line switch that has no separate value, without any quoting.\r\n            This method appends a space to the command line (if it's not currently empty) before the switch.\r\n            ":"\r\n            附加一个没有单独值的命令行开关，没有任何报价。\r\n            此方法在开关之前将一个空间附加到命令行（如果当前不是空）。\r\n            \r\n","\r\n            Name of the registry key\r\n            ":"\r\n            注册表的名称\r\n            \r\n","\r\n            The callback to invoke when the submission is complete.\r\n            ":"\r\n            提交完成后调用的回调。\r\n            \r\n","\r\n            Creates a ProjectRootElement representing a file, where the file may be a .sln instead of\r\n            an MSBuild format file.\r\n            Assumes path is already normalized.\r\n            If the file is in MSBuild format, may throw InvalidProjectFileException.\r\n            If the file is a solution, will throw an IO-related exception if the file cannot be read.\r\n            ":"\r\n            创建一个代表文件的projectRootelement，该文件可能为.sln而不是\r\n            MSBUILD格式文件。\r\n            假设路径已经归一化。\r\n            如果文件以MSBUILD格式为单位，则可能会投掷InvalidProjectFileException。\r\n            如果文件是解决方案，则如果无法读取文件，将抛出与IO相关的异常。\r\n            \r\n","\r\n                A delegate used for constructing a ":"\r\n                用于构建A的代表\r\n","The component host.":"组件主机。\r\n","\r\n            Get a component from the host.\r\n            ":"\r\n            从主机中获取一个组件。\r\n            \r\n","\r\n            Instruct MSBuild to write out the generated \"metaproj\" file to disk when building a solution file.\r\n            ":"\r\n            指示MSBuild在构建解决方案文件时将生成的“ Metaproj”文件写入磁盘。\r\n            \r\n","\r\n            Reload the existing project root element from the given path\r\n            An ":"\r\n            从给定路径重新加载现有的项目根元素\r\n            一个\r\n","The lookup use for evaluation and as a destination for these properties.":"查找用于评估和作为这些属性目的地的目的地。\r\n","\r\n            Global properties to evaluate with.\r\n            ":"\r\n            全球属性要评估。\r\n            \r\n","\r\n            serializes IContentType.Name\r\n            ":"\r\n            序列化icontentType.name\r\n            \r\n","\r\n            The Message logging event\r\n            ":"\r\n            消息记录事件\r\n            \r\n","\r\n            Get the value of any metadata in the item that has the specified\r\n            name, otherwise returns null\r\n            ":"\r\n            获取具有指定的项目中任何元数据的值\r\n            名称，否则返回null\r\n            \r\n","\r\n            Provide default values for optional members\r\n            ":"\r\n            为可选成员提供默认值\r\n            \r\n","Event context information which describes who is logging the event":"事件上下文信息描述了谁正在记录事件\r\n","String to find in the cache.":"在缓存中找到的字符串。\r\n","\r\n            Gets or sets the name of the target being skipped.\r\n            ":"\r\n            获取或设置要跳过目标的名称。\r\n            \r\n","\r\n            The item type of items created by this factory.\r\n            Since TaskItems don't have an item type, this returns null, and cannot be set.\r\n            ":"\r\n            该工厂创建的项目类型。\r\n            由于TaskItems没有项目类型，因此返回null，无法设置。\r\n            \r\n","\r\n            This can be used as a grab bag of additional metadata of this value that are not\r\n            captured by the primary fields. You will need a custom UI to interpret the additional\r\n            metadata since the shipped UI formats can't obviously know about it.\r\n            This field is optional.\r\n            ":"\r\n            这可以用作该值的附加元数据的抓袋\r\n            由主要字段捕获。您将需要一个自定义UI来解释其他\r\n            元数据由于发货的UI格式显然无法知道。\r\n            该字段是可选的。\r\n            \r\n","\r\n            In the circumstance where we want to specify the scheduling algorithm via the secret environment variable \r\n            MSBUILDCUSTOMSCHEDULING, the scheduling algorithm used will be assigned to a delegate of this type. \r\n            ":"\r\n            在我们要通过秘密环境变量指定调度算法的情况下\r\n            MSBUILDCUSTOMSCHEDULING，使用的调度算法将分配给此类委托。\r\n            \r\n","\r\n            The project which issued the event\r\n            ":"\r\n            发布活动的项目\r\n            \r\n","The factory to be registered.":"要注册的工厂。\r\n","\r\n            Location of the remove attribute\r\n            ":"\r\n            删除属性的位置\r\n            \r\n","\r\n            Parses a project from raw XML into strongly typed objects\r\n            ":"\r\n            从RAW XML解析一个项目到强键入的对象\r\n            \r\n","\r\n            The invalid global request id\r\n            ":"\r\n            无效的全局请求ID\r\n            \r\n","\r\n            ValueCollection is already read-only. \r\n            ":"\r\n            ValueCollection已经是只读的。\r\n            \r\n","The name of the folder (AssemblyFoldersEx) could also be PocketPC\\AssemblyFoldersEx, or others":"文件夹的名称（AssemblyFolderSex）也可以是Pocketpc \\ AssemblyFoldersex，或其他\r\n","\r\n            Regkey that we check to see whether C# Express 2010 is installed.  This will exist if it is installed, and be\r\n            properly removed after it has been uninstalled.\r\n            ":"\r\n            我们检查是否安装了C＃Express 2010。如果安装它，则将存在，并且\r\n            卸载后正确删除。\r\n            \r\n","\r\n            Returns true if this builder is using legacy threading semantics.\r\n            ":"\r\n            如果此建筑商使用旧线程语义，则返回true。\r\n            \r\n","\r\n            Indicates an invalid project instance identifier.\r\n            ":"\r\n            指示无效的项目实例标识符。\r\n            \r\n","\r\n            ITaskItem2 implementation\r\n            ":"\r\n            ITASKITEM2实现\r\n            \r\n","\r\n            Disposes of all of the objects with the specified lifetime.\r\n            ":"\r\n            以指定的寿命处理所有对象。\r\n            \r\n","\r\n            Provides an enumerator over the set of sub-toolset names available to a particular\r\n            tools version.  MSBuild config files do not currently support sub-toolsets, so\r\n            we return nothing. \r\n            ":"\r\n            在可用的一组子量表名称上提供枚举器\r\n            工具版本。 MSBUILD配置文件当前不支持子处理器，因此\r\n            我们什么都没有。\r\n            \r\n","\r\n            Handler for thread exceptions. This handler will only get called if the exception did not previously\r\n            get handled by a node exception handlers (for instance because the build is complete for the node.)  In this case we\r\n            get the exception and will put it into the OverallBuildResult so that the host can see what happened.\r\n            ":"\r\n            线程异常的处理程序。此处理程序只有在异常以前没有被调用\r\n            通过节点异常处理程序处理（例如，由于节点的构建是完整的。）在这种情况下，我们\r\n            获取例外，并将其放入整体建筑物中，以便主持人可以看到发生的事情。\r\n            \r\n","\r\n            Gets the effective property for the current scope.\r\n            taking the name from the provided string within the specified start and end indexes.\r\n            If no match is found, returns null.\r\n            Caller must not modify the property returned.\r\n            ":"\r\n            获取当前范围的有效属性。\r\n            从指定的开始和结束索引中从提供的字符串中获取名称。\r\n            如果找不到匹配，请返回null。\r\n            呼叫者不得修改返回的属性。\r\n            \r\n","\r\n            Called when a host is completely done with the project collection.\r\n            UNDONE: This is a hack to make sure the logging thread shuts down if the build used the loggingservice\r\n            off the ProjectCollection. After CTP we need to rationalize this and see if we can remove the logging service from\r\n            the project collection entirely so this isn't necessary.\r\n            ":"\r\n            当项目集合完全完成主机时，请致电。\r\n            撤消：这是一个黑客，以确保登录线路关闭，如果构建使用了LoggingService\r\n            关闭项目收获。 CTP之后，我们需要合理化此问题，看看是否可以从\r\n            项目收集完全是必要的。\r\n            \r\n","The response type.":"响应类型。\r\n","The following table summarizes the performance characteristics of\r\n             ":"下表总结了\r\n             \r\n","Item":"物品\r\n","\r\n            Clears out the cache.\r\n            Called when all projects are unloaded and possibly when a build is done.\r\n            ":"\r\n            清除缓存。\r\n            当所有项目都卸载时，可能是完成构建时的调用。\r\n            \r\n","\r\n            Parse the children of a When or Otherwise\r\n            ":"\r\n            解析何时或以其他方式的孩子\r\n            \r\n","\r\n            -1, if this bucket is \"less than\" the second one\r\n             0, if this bucket is equivalent to the second one\r\n            +1, if this bucket is \"greater than\" the second one\r\n            ":"\r\n            -1，如果这个桶\"小于\"第二个\r\n             0，如果这个桶相当于第二个\r\n            +1，如果这个桶\"大于\"第二个\r\n            \r\n","Items to add to the evaluation":"要添加到评估的项目\r\n","\r\n            Api contracts from the SDKManifest, if any\r\n            ":"\r\n            SDKManifest的API合同，如果有的话\r\n            \r\n","\r\n            An interfacing representing a build request configuration cache.\r\n            ":"\r\n            代表构建请求配置缓存的接口。\r\n            \r\n","\r\n            Used for signalling when the tool times-out.\r\n            ":"\r\n            用于发出工具时间时的信号。\r\n            \r\n","\r\n            Keeps track of whether we're doing exact or fuzzy equivalency\r\n            ":"\r\n            跟踪我们是在做精确的还是模糊的等效性\r\n            \r\n","\r\n            Push(f) adds f to the top of the stack.\r\n            ":"\r\n            推（F）将F添加到堆栈顶部。\r\n            \r\n","\r\n            Queue an action to be run in the engine.\r\n            ":"\r\n            队列在发动机中运行的动作。\r\n            \r\n","\r\n            Name of the property\r\n            ":"\r\n            属性的名称\r\n            \r\n","PrependChild(child)":"预童（儿童）\r\n","\r\n            this event is raised to log a warning\r\n            ":"\r\n            此事件被提出来记录警告\r\n            \r\n","\r\n            Gets the current engine status.\r\n            ":"\r\n            获取当前的发动机状态。\r\n            \r\n","\r\n            Creates a task item by copying the information from a ":"\r\n            通过复制从一个的信息来创建任务项\r\n"," \r\n            WARNING: marking a type [Serializable] without implementing \r\n            ISerializable imposes a serialization contract -- it is a \r\n            promise to never change the type's fields i.e. the type is \r\n            immutable; adding new fields in the next version of the type \r\n            without following certain special FX guidelines, can break both \r\n            forward and backward compatibility \r\n            ":" \r\n            警告：标记不实施的类型[可序列化]\r\n            等法可施加序列化合同 - 这是一个\r\n            承诺永远不会更改类型字段，即类型是\r\n            不变；在类型的下一个版本中添加新字段\r\n            不遵循某些特殊的FX指南，可以打破两者\r\n            前后兼容性\r\n            \r\n","\r\n            The packet factory used to route packets.\r\n            ":"\r\n            数据包工厂用于路由包装。\r\n            \r\n","Whether to force file glob expansion when eager expansion is turned off":"当急切的扩展关闭时是否强制申请地球扩展\r\n","A list of error targets.":"错误目标列表。\r\n","The list which will contain the batchable values.":"将包含批处理值的列表。\r\n","The .tlog files to interpret":".tlog文件要解释\r\n","\r\n            Gets the path to the assembly folder.\r\n            ":"\r\n            获取程序集文件夹的路径。\r\n            \r\n","\r\n            item.ItemTypes is a KeyCollection, so it doesn't need any \r\n            additional read-only protection\r\n            ":"\r\n            item.itemtypes是一个钥匙集合，因此不需要任何\r\n            额外的仅阅读保护\r\n            \r\n","\r\n            Encoding for the output. Defaults to UTF-8.\r\n            ":"\r\n            编码输出。默认为UTF-8。\r\n            \r\n","\r\n            The configuration part of this configuration - e.g. \"Debug\", \"Release\"\r\n            ":"\r\n            此配置的配置部分 - 例如“调试”，“发行”\r\n            \r\n","\r\n            Formats the given string using the variable arguments passed in. The current thread's culture is used for formatting.\r\n            ":"\r\n            使用传递的变量参数格式化给定的字符串。当前线程的文化用于格式化。\r\n            \r\n","The string to perform matching against":"符合匹配的字符串\r\n","\r\n            Create a file based ProjectInstance.\r\n            ":"\r\n            创建基于文件的ProjectInstance。\r\n            \r\n","The path to the project that defined this item":"定义此项目的项目的路径\r\n","Input to check for UNC pattern.":"输入以检查UNC模式。\r\n","\r\n            Method called to reset the state of the system after a build.\r\n            ":"\r\n            构建后重置系统状态的方法。\r\n            \r\n","\r\n            This struct is functionally identical to KeyValuePair, but is necessary to avoid\r\n            CA908 warnings (types that in ngen images that will JIT).\r\n            It works because although this is a value type, it is not defined in mscorlib.\r\n            Essentially we would use KeyValuePair except for this technical reason.\r\n            ":"\r\n            该结构在功能上与keyValuepair相同，但对于避免\r\n            CA908警告（在ngen图像中的类型）。\r\n            它起作用是因为尽管这是一种值类型，但并未在mscorlib中定义。\r\n            从本质上讲，除了这个技术原因外，我们将使用KeyValuepair。\r\n            \r\n","\r\n            Adds the specified target to the instance.\r\n            ":"\r\n            将指定的目标添加到实例。\r\n            \r\n","\r\n            Called by a Project object to load itself into this collection.\r\n            If the project was already loaded under a different name, it is unloaded.\r\n            Stores the project in the list of loaded projects if it has a name.\r\n            Does not store the project if it has no name because it has not been saved to disk yet.\r\n            If the project previously had a name, but was not in the collection already, throws InvalidOperationException.\r\n            If the project was not previously in the collection, sets the collection's global properties on it.\r\n            ":"\r\n            由项目对象调用以将其自身加载到此集合中。\r\n            如果该项目已经以其他名称加载，则将其卸载。\r\n            如果有一个名称，则将项目存储在已加载项目列表中。\r\n            如果该项目没有名称，则不会存储该项目，因为尚未将其保存到磁盘上。\r\n            如果该项目以前有一个名称，但尚未在集合中，则会引发无效的exception。\r\n            如果该项目以前不在集合中，请在其上设置集合的全局属性。\r\n            \r\n"," if the result is success, otherwise ":" 如果结果是成功，否则\r\n","True if the ParsedSdkReference was updated, otherwise false (no update necessary).":"如果更新了ParsedSdkReference，则为否则错误（无需更新）。\r\n","\r\n            The singleton instance. Can be cast to the interface required.\r\n            ":"\r\n            Singleton实例。可以施放到所需的接口。\r\n            \r\n","\r\n            Get a list of parameters for the task.\r\n            ":"\r\n            获取任务参数列表。\r\n            \r\n","\r\n            Folder found at the registry keys default value\r\n            ":"\r\n            在注册表项默认值处找到的文件夹\r\n            \r\n","\r\n            This interface defines a \"task\" in the build system. A task is an atomic unit of build operation. All task classes must\r\n            implement this interface to be recognized by the build engine.\r\n            ":"\r\n            该接口在构建系统中定义了“任务”。一项任务是构建操作的原子单位。所有任务类都必须\r\n            实现此界面以由构建引擎识别。\r\n            \r\n","\r\n            This method determines how many requests are waiting for this request, taking into account the full tree of all requests\r\n            in all dependency chains which are waiting.\r\n            ":"\r\n            此方法确定了所有请求的请求，考虑到所有请求的完整树\r\n            在等待的所有依赖链中。\r\n            \r\n","\r\n            Returns the number of strings held and the total number of chars held.\r\n            ":"\r\n            返回持有的字符串数量和持有的字符总数。\r\n            \r\n","\r\n            A queue of RequestCores requests waiting for at least one core to become available.\r\n            ":"\r\n            RequestCores的队列请求等待至少一个核心可用。\r\n            \r\n","\r\n            The current ItemSpec of the item being matched\r\n            ":"\r\n            匹配的项目的当前项目标记\r\n            \r\n","\r\n                Log a build message to MSBuild.\r\n            ":"\r\n                将构建消息记录到MSBUILD。\r\n            \r\n","The component":"组件\r\n","The id of the configuration to return.":"要返回的配置的ID。\r\n","\r\n            Removes an unscheduled request.\r\n            ":"\r\n            删除一个计划外的请求。\r\n            \r\n","The central logger":"中央记录仪\r\n","\r\n            Retrieves any value we have in our metadata table for the metadata name specified.\r\n            If no value is available, returns empty string.\r\n            Value, if escaped, remains escaped.\r\n            ":"\r\n            检索我们在元数据表中为指定的元数据名称中的任何值。\r\n            如果没有可用的值，请返回空字符串。\r\n            如果逃脱，价值仍然被逃脱。\r\n            \r\n","\r\n            Cloning constructor.\r\n            Strings are immutable (copy on write) so there is no work to do\r\n            ":"\r\n            克隆构造函数。\r\n            字符串是不可变的（写在书面上），因此没有工作要做\r\n            \r\n","\r\n            Creates a metadata node.\r\n            Caller must add it to the location of choice in the project.\r\n            ":"\r\n            创建一个元数据节点。\r\n            呼叫者必须将其添加到项目中选择的位置。\r\n            \r\n","\r\n            \r\n            It is an arbitrary number that changes when this project reevaluates.\r\n            Hosts don't know whether an evaluation actually happened in an interval, but they can compare this number to\r\n            their previously stored value to find out, and if so perhaps decide to update their own state.\r\n            Note that the number may not increase monotonically.\r\n            \r\n            This number corresponds to the ":"\r\n            \r\n            当该项目重新评估时，这是一个任意数字。\r\n            主持人不知道评估是否实际上是在间隔中发生的，但是他们可以将此数字与\r\n            他们先前存储的价值以找出答案，如果可以的话，可以决定更新自己的状态。\r\n            请注意，该数字可能不会单调增加。\r\n            \r\n            这个数字对应于\r\n","The logger to register.":"注册的记录器。\r\n","\r\n            The in-proc node thread.\r\n            ":"\r\n            程序内节点线程。\r\n            \r\n","\r\n            Convenience method.  Submits a lone graph build request and blocks until results are available.\r\n            ":"便利方法。提交一个孤独的图形构建请求和块，直到结果可用。\r\n            \r\n"," was set to true, and the file on disk has changed since it was cached,\r\n             it will be reloaded before being returned.\r\n            \r\n             Thread safe.\r\n             ":" 已设置为true，并且磁盘上的文件已更改以来，该文件已被缓存，\r\n             它将在返回之前重新加载。\r\n            \r\n             线程安全。\r\n             \r\n","\r\n            { submissionId, GraphBuildSubmission }\r\n            ":"\r\n            {tubmissionId，graphBuildSubmission}\r\n            \r\n","\r\n            The binding flags that will be used during invocation of this function.\r\n            ":"\r\n            在调用此功能期间将使用的绑定标志。\r\n            \r\n","\r\n            Location of the include, if any\r\n            ":"\r\n            包括的位置，如果有的话\r\n            \r\n","\r\n            Retrieves the configurations which refer to this one.\r\n            ":"检索指指的配置。\r\n            \r\n","\r\n            Requires the caller to explicitly state what they wish to expand at the point of expansion (explicitly does not have a field for ExpanderOptions). \r\n            Callers typically use a single expander in many locations, and this forces the caller to make explicit what they wish to expand at the point of expansion.\r\n            \r\n            Requires the caller to have previously provided the necessary material for the expansion requested.\r\n            For example, if the caller requests ExpanderOptions.ExpandItems, the Expander will throw if it was not given items.\r\n            ":"\r\n            要求呼叫者在扩展时明确说明他们希望扩展的内容（明确没有扩展的领域）。\r\n            呼叫者通常在许多位置使用单个扩展器，这迫使呼叫者明确他们希望在扩展时扩展的内容。\r\n            \r\n            要求呼叫者以前为所请求的扩展提供必要的材料。\r\n            例如，如果呼叫者请求ExpanderOptions.ExpandTiTems，则如果未给出项目，则会将其投掷。\r\n            \r\n","The root element to which the new element will belong.":"新元素将属于的根元素。\r\n","TimeStamp of when the event was created":"何时创建活动的时间戳\r\n","\r\n            Creates an unparented ProjectPropertyElement, wrapping an unparented XmlElement.\r\n            Validates name.\r\n            Caller should then ensure the element is added to the XmlDocument in the appropriate location.\r\n            ":"\r\n            创建一个无与伦比的ProjectPropertyelement，包装无与伦比的XMLELEMENT。\r\n            验证名称。\r\n            然后，呼叫者应确保将元素添加到适当位置的xmldocument中。\r\n            \r\n","\r\n            The set of special parameters that, along with the name, contribute to the identity of \r\n            this factory.\r\n            ":"\r\n            一组特殊参数，其名称也有助于身份\r\n            这个工厂。\r\n            \r\n","\r\n            Represents a value editor \r\n            ":"\r\n            代表价值编辑器\r\n            \r\n","The build context of the project which has just finished":"刚刚完成的项目的构建背景\r\n","\r\n            Initializes a new instance of the ProjectEvaluationStartedEventArgs class.\r\n            ":"\r\n            初始化ProjectEvaluationStartedEventargs类的新实例。\r\n            \r\n","\r\n            Appends the header of all the locations to the string builder\r\n            ":"\r\n            将所有位置的标题附加到字符串构建器\r\n            \r\n","True if the string can be encoded in the specified code page.":"正确，如果可以在指定的代码页中编码字符串。\r\n","\r\n            Parse a ProjectRootElement from an element\r\n            ":"\r\n            从元素解析项目原始\r\n            \r\n","\r\n            DefaultOverrideToolsVersion attribute on msbuildToolsets element, specifying the toolsversion that should be used by\r\n            default to build projects with this version of MSBuild.\r\n            ":"\r\n            MSBUILDToolSets元素上的DefaultoverRidetoolSversion属性，指定应通过\r\n            默认可以使用此版本的MSBuild构建项目。\r\n            \r\n","), \"MinimumSize\" (switch = ":"），“最小尺寸”（switch =\r\n","This method is marked \"internal\" for unit-testing purposes only -- it should be \"private\" ideally.":"此方法仅用于单位测试目的为“内部”  - 理想情况下应该是“私有”。\r\n","\r\n            Gets the configuration's accumulated time for all of its references.\r\n            ":"\r\n            获取配置的所有参考的累积时间。\r\n            \r\n","\r\n                Create an instance with a specified resolver assembly loading strategy. Used\r\n                for testing purposes.\r\n            ":"\r\n                使用指定的解析器组装加载策略创建一个实例。用过的\r\n                用于测试目的。\r\n            \r\n","\r\n            The configuration id.\r\n            ":"\r\n            配置ID。\r\n            \r\n","\r\n            Global properties this project was evaluated with, if any.\r\n            Read only collection.\r\n            Traverses project references.\r\n            ":"\r\n            全球属性，该项目通过有的话进行了评估。\r\n            仅阅读收藏。\r\n            Travers项目参考。\r\n            \r\n","\r\n            Registry view used\r\n            ":"\r\n            使用的注册表视图\r\n            \r\n","\r\n            Metadata on the item, if any.  Includes metadata specified by the definition, if any.\r\n            If there is no metadata, returns an empty collection.\r\n            Does not include built-in metadata, such as \"FullPath\".\r\n            Get the values of built-in metadata using ":"\r\n            物品上的元数据（如果有）。包括定义指定的元数据（如果有）。\r\n            如果没有元数据，请返回一个空的收藏。\r\n            不包括内置元数据，例如“ FullPath”。\r\n            使用内置元数据的值\r\n","\r\n            The maximum node count as specified in the call to Initialize()\r\n            ":"\r\n            呼叫中指定的最大节点计数（初始化（）\r\n            \r\n","Message is null":"消息为空\r\n","Full path to the Assembly Folders config file.":"完整的汇编文件夹配置文件的路径。\r\n"," is false, then requesting to track a given element has no effect and a null ":" 是错误的，然后要求跟踪给定元素没有效果和空\r\n","\r\n            Retrieves a toolset.\r\n            ":"\r\n            检索工具集。\r\n            \r\n","\r\n            Properties in this project.\r\n            Since evaluation has occurred, this is an unordered collection.\r\n            ":"\r\n            该项目中的属性。\r\n            由于已经进行了评估，因此这是一个无序的集合。\r\n            \r\n","\r\n            Looks for the given file in the system path i.e. all locations in the %PATH% environment variable.\r\n            ":"\r\n            在系统路径中查找给定文件，即％路径％环境变量中的所有位置。\r\n            \r\n","\r\n            Constructs a BuildAbortedException with an additional message attached.\r\n            ":"\r\n            构建一个带有附加消息的BuildAbortedException。\r\n            \r\n","\r\n            Flag indicating if this configuration represents a traversal project.  Traversal projects\r\n            are projects which typically do little or no work themselves, but have references to other\r\n            projects (and thus are used to find more work.)  The scheduler can treat these differently\r\n            in order to fill its work queue with other options for scheduling.\r\n            ":"\r\n            标志表示此配置是否代表遍历项目。遍历项目\r\n            是通常很少或没有工作的项目，但要提及其他\r\n            项目（因此被用来寻找更多工作。）调度程序可以对其进行不同的处理\r\n            为了填写其工作队列，并使用其他调度选项。\r\n            \r\n","\r\n            Additional cores granted to the task by the scheduler. Does not include the one implicit core automatically granted to all tasks.\r\n            ":"\r\n            调度程序授予该任务的其他核心。不包括自动授予所有任务的隐式核心。\r\n            \r\n","\r\n            Returns the number of projects currently loaded\r\n            ":"\r\n            返回当前已加载的项目数量\r\n            \r\n","\r\n            This means that the host object is already up-to-date, and no further action is necessary.\r\n            ":"\r\n            这意味着主机对象已经是最新的，无需进一步的操作。\r\n            \r\n"," is applicable.":" 适用。\r\n","\r\n            Name of the Visual Studio (and Blend) process.\r\n            VS ASP intellisense server fails without Microsoft.VisualStudio.Web.Host. Remove when issue fixed: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/574986\r\n            ":"\r\n            视觉工作室（和混合）过程的名称。\r\n            VS ASP Intellisense服务器没有Microsoft.visualstudio.web.host失败。删除问题时删除：https：//devdiv.visualstudio.com/devdiv/_workitems/edit/574986\r\n            \r\n","\r\n            Constructor taking a delegate for unit test purposes only\r\n            ":"\r\n            构造师仅出于单位测试目的而授权代表\r\n            \r\n","\r\n            Expands embedded item metadata, properties, and embedded item lists (in that order) as specified in the provided options.\r\n            Use this form when the result is going to be processed further, for example by matching against the file system,\r\n            so literals must be distinguished, and you promise to unescape after that.\r\n            \r\n            If ExpanderOptions.BreakOnNotEmpty was passed, expression was going to be non-empty, and it broke out early, returns null. Otherwise the result can be trusted.\r\n            ":"\r\n            按照提供的选项指定的（按该顺序）展开嵌入式项目元数据，属性和嵌入式项目列表。\r\n            当结果要进一步处理时，请使用此表格，例如，通过与文件系统匹配，\r\n            因此，必须区分文字，然后您承诺在那之后取消探索。\r\n            \r\n            如果通过ExpanderOptions.breakonnotempty通过，表达将是非空的，并且早点爆发，则返回NULL。否则可以信任结果。\r\n            \r\n","\r\n            Called when a packet has been received.\r\n            ":"\r\n            收到数据包时打电话给。\r\n            \r\n","\r\n            Output properties and items below this task. This is an ordered collection\r\n            as one may depend on another.\r\n            This is a dead, read-only collection.\r\n            ":"\r\n            在此任务下方的输出属性和项目。这是一个有序的收藏\r\n            因为一个可能取决于另一个。\r\n            这是一个死者，只读的收藏。\r\n            \r\n","\r\n            The current state of the request.\r\n            ":"\r\n            请求的当前状态。\r\n            \r\n","\r\n            Add a string to the table.\r\n            ":"\r\n            在表中添加一个字符串。\r\n            \r\n","The event arguments that indicate details on what changed on the collection.":"事件参数指示有关集合上发生变化的详细信息。\r\n","\r\n            Returns the target which is already a string.\r\n            ":"\r\n            返回已经是字符串的目标。\r\n            \r\n","\r\n            Not necessary for in-proc node - we don't serialize.\r\n            ":"\r\n            无需进行程序内节点 - 我们不序列化。\r\n            \r\n","\r\n            Caches minimum Visual Studio version from the manifest\r\n            ":"\r\n            从清单中缓存最小视觉工作室版本\r\n            \r\n","\r\n            Constructor for granting cores.\r\n            ":"\r\n            授予核心的构造者。\r\n            \r\n","\r\n            Retrieves the name of the target.\r\n            ":"\r\n            检索目标的名称。\r\n            \r\n","\r\n            Logs a telemetry event.\r\n            ":"\r\n            记录遥测事件。\r\n            \r\n","\r\n            Represents a dependency on another platform\r\n            ":"\r\n            代表对另一平台的依赖性\r\n            \r\n","\r\n            Check to see if .net 2.0 is installed\r\n            ":"\r\n            检查是否已安装.NET 2.0\r\n            \r\n","The invalid line number in the project (set to zero if not available).":"项目中的无效行号（如果不可用，则设置为零）。\r\n","List containing ItemBucket objects, each one representing an execution batch.":"列表包含ItemBucket对象，每个对象代表执行批次。\r\n"," of the import.  This indicates if the import was implicitly\r\n            added because of the ":" 进口。这表明该导入是否隐含\r\n            添加是因为\r\n","\r\n            The ProjectStarted event handler\r\n            ":"\r\n            项目开始的活动处理程序\r\n            \r\n"," and its overloads.\r\n            This represents all globs found in an item include together with the item element it came from,\r\n            the excludes that were present on that item, and all the Remove item elements pertaining to the Include item element.\r\n            ":"及其过载。\r\n            这代表了项目中发现的所有地球，其中包括它来自的项目元素，\r\n            该项目上存在的排除，以及所有删除项目元素与包含项目元素有关。\r\n            \r\n","\r\n            This attribute is used to mark a task class as explicitly not being required to run in the STA for COM.\r\n            ":"\r\n            此属性用于将任务类标记为明确不需要在com中运行。\r\n            \r\n","\r\n            Intrinsic function that returns the contents of the metadata in specified in argument[0].\r\n            ":"\r\n            在参数[0]中指定的元数据中返回元数据的内容的内在函数。\r\n            \r\n","\r\n            Returns the result of the concatenation.\r\n            ":"\r\n            返回串联的结果。\r\n            \r\n","\r\n            Default project template options (include all features).\r\n            ":"\r\n            默认项目模板选项（包括所有功能）。\r\n            \r\n","\r\n            Creates an item node with an include.\r\n            Caller must add it to the location of choice in the project.\r\n            ":"\r\n            创建一个具有包含的项目节点。\r\n            呼叫者必须将其添加到项目中选择的位置。\r\n            \r\n","\r\n            Flag indicating if non-critical logging events should be discarded.\r\n            ":"\r\n            标志指示是否应丢弃非关键记录事件。\r\n            \r\n","\r\n            Save the project to the file system, if dirty.\r\n            ":"\r\n            如果肮脏，将项目保存到文件系统中。\r\n            \r\n","\r\n            Gets the specified type using the namespace to guess the assembly that its in.\r\n            ":"\r\n            使用名称空间获取指定的类型，以猜测其所在的组件。\r\n            \r\n","\r\n            Shared buffer saves allocating these arrays many times.\r\n            ":"\r\n            共享缓冲区保存多次分配这些阵列。\r\n            \r\n","\r\n            Full path to the project, for errors\r\n            ":"\r\n            该项目的完整路径，错误\r\n            \r\n","The ProjectRootElement for the root traversal and each of the metaprojects.":"根部遍历和每个元注射器的项目Rootelement。\r\n","The target to which these results apply.":"这些结果适用的目标。\r\n","\r\n            Gets or sets a semicolon delimited list of software development kits (SDK) that the project uses.\r\n            If  a value is specified, an Sdk.props is simplicity imported at the top of the project and an\r\n            Sdk.targets is simplicity imported at the bottom from the specified SDK.\r\n            If the value is null or empty, removes the attribute.\r\n            ":"\r\n            获取或设置该项目使用的软件开发套件（SDK）的半分离界定列表。\r\n            如果指定了一个值，则SDK.Props是在项目顶部导入的简单性，并且\r\n            SDK.Targets是从指定的SDK在底部导入的简单性。\r\n            如果值为空或空为空，请删除属性。\r\n            \r\n","\r\n            Sets the overall result of a build only if the user had specified /warnaserror and there were any errors.\r\n            This ensures the old behavior stays intact where builds could succeed even if a failure was logged.\r\n            ":"\r\n            仅当用户指定 /warnaserror并且存在任何错误时，才能设置构建的总体结果。\r\n            这样可以确保旧行为保持完整，即使已记录了故障，构建也可以成功。\r\n            \r\n","\r\n            Flag indicating if we are currently shutting down.  When set, we stop processing packets other than NodeShutdown.\r\n            ":"\r\n            标志指示我们当前正在关闭。设置后，我们停止处理nodeShutdown以外的其他数据包。\r\n            \r\n","Version of the SDK that was resolved.":"已解决的SDK版本。\r\n","True if the message should be rendered using lighter colored text.":"如果应该使用较浅的彩色文本渲染该消息，则为正确。\r\n","\r\n            All projects in this solution, in the order they appeared in the solution file\r\n            ":"\r\n            本解决方案中的所有项目，按照解决方案文件中出现的顺序\r\n            \r\n","\r\n            Usually gotten from the parent ProjectInstance.\r\n            ":"\r\n            通常从父母projectinstance中获得。\r\n            \r\n","The full path to give to this project.":"给这个项目的完整途径。\r\n","\r\n            Calculates a shift which can be applied to an absolute index to get the page index within a segmented array.\r\n            ":"\r\n            计算一个可以应用于绝对索引的偏移，以在分段数组中获取页面索引。\r\n            \r\n","\r\n            The document to parse from\r\n            ":"\r\n            从中解析的文件\r\n            \r\n","\r\n            List of ProjectItemDefinitionElement's traversing into imports.\r\n            Gathered during the first pass to avoid traversing again.\r\n            ":"\r\n            ProjectItemDefinitionElement的列表遍历进口。\r\n            在第一次通行证中聚集，以避免再次穿越。\r\n            \r\n"," describing the original build of the target, or null if not available.\r\n            ":" 描述目标的原始构建，如果没有，则无效。\r\n            \r\n","\r\n            Constructs a build result with an exception\r\n            ":"\r\n            构建构建结果，例外\r\n            \r\n","\r\n             Serialize the entire project instance state.\r\n            \r\n             When false, only a part of the project instance state is serialized (properties and items).\r\n             In this case out of proc nodes re-evaluate the project instance from disk to obtain the un-serialized state.\r\n             This partial state recombination may lead to build issues when the project instance state differs from what is on disk.\r\n             ":"\r\n             序列化整个项目实例状态。\r\n            \r\n             当false时，只有项目实例状态的一部分是序列化的（属性和项目）。\r\n             在这种情况下，ProcNodes从磁盘中重新评估了项目实例，以获得非序列化状态。\r\n             当项目实例状态与磁盘上的内容不同时，这种部分状态的重组可能会导致建立问题。\r\n             \r\n","\r\n            The ID of the in-proc node.\r\n            ":"\r\n            程序内节点的ID。\r\n            \r\n","The component host":"组件主机\r\n","\r\n            Evaluation main phases used by the profiler\r\n            ":"\r\n            评估主阶段由探索者使用\r\n            \r\n","\r\n                Constructs a graph starting from the given project files, evaluating with the provided project collection and no\r\n                global properties.\r\n            ":"\r\n                从给定的项目文件开始构造图形，用提供的项目集合评估\r\n                全球属性。\r\n            \r\n","The last invalid line number, or zero.":"最后一个无效的线号，或零。\r\n","\r\n            Sets or returns the configuration id\r\n            ":"\r\n            设置或返回配置ID\r\n            \r\n","\r\n            The ProjectFinished event handler\r\n            ":"\r\n            项目结束的活动处理程序\r\n            \r\n","The hive view":"蜂巢视图\r\n","\r\n            Returns the evaluated, escaped value for the property\r\n            ":"\r\n            返回评估的，逃脱的物业价值\r\n            \r\n","\r\n            Creates default Configuration and Platform values based on solution configurations present in the solution\r\n            ":"\r\n            根据解决方案中存在的解决方案配置创建默认配置和平台值\r\n            \r\n","\r\n            Evaluates the project data passed in.\r\n            If debugging is enabled, returns a dictionary of name/value pairs such as properties, for debugger display.\r\n            ":"\r\n            评估传递的项目数据。\r\n            如果启用了调试，则返回一个名称/值对的字典，例如属性，用于调试器显示。\r\n            \r\n","\r\n            Returns a ProjectImportPathMatch struct for the first property found in the expression for which\r\n            project import search paths is enabled.\r\n            ":"\r\n            返回一个projectimportathmatch struct，以供表达式中的第一个属性\r\n            项目导入搜索路径已启用。\r\n            \r\n","\r\n            The time the event took place.\r\n            ":"\r\n            活动发生的时间。\r\n            \r\n"," instance contains.\r\n            Must have at least one ":" 实例包含。\r\n            必须至少有一个\r\n","\r\n            Retrieves the BuildRequest id.  Note that this is not the same as the global request id on a BuildRequest or BuildResult.\r\n            ":"\r\n            检索BuildRequest ID。请注意，这与buildrequest或buildResult上的全局请求ID不同。\r\n            \r\n","\r\n            Escapes any double quotes in the string.\r\n            ":"\r\n            逃脱字符串中的任何双引号。\r\n            \r\n","\r\n            Inticates the request is yielding the node.\r\n            ":"nigates请求正在产生节点。\r\n            \r\n","\r\n            data.ItemTypes is a KeyCollection, so it doesn't need any\r\n            additional read-only protection.\r\n            ":"\r\n            data.itemtypes是一个钥匙集合，因此不需要任何\r\n            额外的仅阅读保护。\r\n            \r\n","\r\n            Node packet factory\r\n            ":"\r\n            节点数据包工厂\r\n            \r\n","Type of the items used.":"所使用的项目类型。\r\n","\r\n            Gets the request builder shutdown timeout.\r\n            ":"\r\n            获取请求构建器关闭超时。\r\n            \r\n","\r\n            Storage for the right child\r\n            ":"\r\n            合适的孩子的存储\r\n            \r\n","\r\n            The main evaluate entry point for expression trees\r\n            ":"\r\n            表达树的主要评估入口点\r\n            \r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n            Adds a new item definition after the last child.\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n            在最后一个孩子之后添加一个新项目定义。\r\n            \r\n","Target that we are blocked on which is being built by ":"我们被阻止的目标是由\r\n","\r\n            WARNING: marking a type [Serializable] without implementing\r\n            ISerializable imposes a serialization contract -- it is a\r\n            promise to never change the type's fields i.e. the type is\r\n            immutable; adding new fields in the next version of the type\r\n            without following certain special FX guidelines, can break both\r\n            forward and backward compatibility\r\n            ":"\r\n            警告：标记不实施的类型[可序列化]\r\n            等法可施加序列化合同 - 这是一个\r\n            承诺永远不会更改类型字段，即类型是\r\n            不变；在类型的下一个版本中添加新字段\r\n            不遵循某些特殊的FX指南，可以打破两者\r\n            前后兼容性\r\n            \r\n","Table that has tasks or targets.":"具有任务或目标的表。\r\n","\r\n            This field is mandatory unless ":"\r\n            除非\r\n","\r\n            Adds a set of items which describe the references for this project.\r\n            ":"\r\n            添加了一组描述该项目的参考的项目。\r\n            \r\n","\r\n            Generates a list of KeyValuePairs from the properties enumerator.\r\n            For each of these properties add them to a list to return to the caller.\r\n            ":"\r\n            从属性枚举器中生成钥匙值仪的列表。\r\n            对于这些属性中的每一个，将它们添加到列表中以返回到呼叫者。\r\n            \r\n","\r\n            Attempts to get results from the cache for this request.  If results are available, reports them to the \r\n            correct node.  If that action causes the parent to become ready and its node is idle, the parent is\r\n            resumed.\r\n            ":"试图从缓存中获取此请求的结果。如果有结果，请将其报告给\r\n            正确的节点。如果该动作导致父母准备就绪，并且其节点是空闲的，则父母是\r\n            恢复。\r\n            \r\n","\r\n            Suspends full tracking.\r\n            ":"\r\n            暂停完整的跟踪。\r\n            \r\n","\r\n             A list of ":"\r\n             的清单\r\n","\r\n            Parent item or item definition that this metadatum lives in.\r\n            ProjectMetadata's always live in a project and always have a parent.\r\n            The project can be gotten from this parent.\r\n            Used to evaluate any updates.\r\n            ":"\r\n            本元数据所居住的父项目或项目定义。\r\n            ProjectMetadata总是活在项目中，并总是有父母。\r\n            该项目可以从这个父母那里得到。\r\n            用于评估任何更新。\r\n            \r\n","\r\n            Cache of names of required properties on this type\r\n            ":"\r\n            此类型上必需属性的名称的缓存\r\n            \r\n","\r\n            Gets the assembly load information.\r\n            ":"\r\n            获取装配加载信息。\r\n            \r\n","\r\n            Creates a ProjectInstance directly.\r\n            No intermediate Project object is created.\r\n            This is ideal if the project is simply going to be built, and not displayed or edited.\r\n            Uses the default project collection.\r\n            ":"\r\n            直接创建一个ProjectInstance。\r\n            没有创建中间项目对象。\r\n            如果仅仅要构建或不显示或编辑该项目，这是理想的选择。\r\n            使用默认项目集合。\r\n            \r\n","\r\n            The Default FileMatcher does not cache directory enumeration.\r\n            ":"\r\n            默认的FileMatcher不会缓存目录枚举。\r\n            \r\n","\r\n            Extract the Items from the enumerable object and return a sorted list containing these items\r\n            ":"\r\n            从枚举的对象中提取项目，然后返回包含这些项目的排序列表\r\n            \r\n","\r\n             Append the regex equivalents for character sequences in the fixed directory part of a filespec:\r\n            \r\n             (1) The leading \\\\ in UNC paths, so that the doubled slash isn't reduced in the last step\r\n             \r\n             (2) Common filespec characters\r\n             ":"\r\n             在FileSpec的固定目录部分中附加到字符序列的正则等效物：\r\n            \r\n             （1）UNC路径中的领导\\\\，因此在最后一步中不会减少加倍的斜线\r\n             \r\n             （2）Common FileSpec字符\r\n             \r\n","\r\n            Function that checks if a given string matches the ":"\r\n            检查给定字符串是否匹配的功能\r\n","\r\n            Handle message events\r\n            ":"\r\n            处理消息事件\r\n            \r\n","\r\n            Creates a task registry that defers to the specified toolset's registry for those tasks it cannot resolve.        \r\n            UNDONE: (Logging.) We can't pass the base task registry from the Toolset because we can't call GetTaskRegistry\r\n            without logging context information.  When the Project load code is altered to contain logging service\r\n            references, we can load the toolset task registry at the time this registry is created and pass it to\r\n            this constructor instead of the toolset state.\r\n            ":"\r\n            创建一个任务注册表，为无法解决的那些任务辩护指定的工具集注册表。\r\n            撤消：（记录。）我们无法从工具集中传递基本任务注册表，因为我们无法调用getTaskRegistry\r\n            没有记录上下文信息。更改项目负载代码以包含日志记录服务\r\n            参考文献，我们可以在创建此注册表时加载工具集任务注册表并将其传递给\r\n            该构造函数而不是工具集状态。\r\n            \r\n","\r\n            Throw exception if an element with a duplicate key is added to the collection\r\n            ":"\r\n            如果将具有重复键的元素添加到集合中，请抛出异常\r\n            \r\n","\r\n            Unevaluated include\r\n            ":"\r\n            未评估包括\r\n            \r\n","\r\n            Reflects the value of the ContinueOnError attribute.\r\n            ":"\r\n            反映连续性属性的价值。\r\n            \r\n",". This\r\n            form of specifying the help page for a property takes lower precedence than both ":"。这个\r\n            指定财产的帮助页的形式比两者都低的优先级\r\n",". Either this is null, or ":"。这是无效的，或者\r\n"," and pass ":" 并通过\r\n","\r\n            The logging service\r\n            ":"\r\n            伐木服务\r\n            \r\n","\r\n            Read solution configuration section. \r\n            ":"阅读解决方案配置部分。\r\n            \r\n","\r\n            The condition expression on the target declaration.\r\n            ":"\r\n            目标声明上的条件表达式。\r\n            \r\n","\r\n            Useful constructor\r\n            ":"\r\n            有用的构造函数\r\n            \r\n"," composite.\r\n            ":" 合成的。\r\n            \r\n","\r\n            The plugin determined that it supports a build request and found that it cannot be skipped. MSBuild will build the request.\r\n            ":"\r\n            该插件确定它支持构建请求，并发现无法跳过。 MSBUILD将构建请求。\r\n            \r\n","The switch to append to the command line, may not be null":"向附加到命令行的开关可能不会为null\r\n","\r\n            Creates an unparented ProjectChooseElement, wrapping an unparented XmlElement.\r\n            Caller should then ensure the element is added to a parent\r\n            ":"\r\n            创建一个无与伦比的ProjectChooselement，包裹了无与伦比的Xmlelement。\r\n            然后，呼叫者应确保将元素添加到父\r\n            \r\n","\r\n            Deserializes the Errorevent from a stream through a binary reader\r\n            ":"\r\n            通过二进制读取器从流中验证错误\r\n            \r\n","Expression to search for properties in (first level only, not recursive)":"表达在搜索属性（仅第一级，不递归）中的属性\r\n"," is included in the results.\r\n            ":"包含在结果中。\r\n            \r\n","\r\n            Log that the project has finished\r\n            ":"\r\n            日志已经完成了项目\r\n            \r\n","\r\n            Translates to and from binary form.\r\n            ":"\r\n            转换为二进制形式。\r\n            \r\n","\r\n            The component responsible for building requests.\r\n            ":"\r\n            负责建筑请求的组件。\r\n            \r\n","\r\n            Create a ProjectItemInstance, changing the item type but keeping the include.\r\n            This is to support the scenario Include=\"@(i)\" where we are copying\r\n            metadata.\r\n            ":"\r\n            创建一个ProjectIteMinstance，更改项目类型，但要保留包含。\r\n            这是为了支持场景包括=“@（i）”我们要复制的地方\r\n            元数据。\r\n            \r\n","\r\n            { nodeId -> NodeInfo }\r\n            A list of nodes we know about.  For the non-distributed case, there will be no more nodes than the\r\n            maximum specified on the command-line.\r\n            ":"\r\n            {nodeid-> nodeinfo}\r\n            我们知道的节点列表。对于非分布情况，不会有更多的节点\r\n            在命令行上指定的最大值。\r\n            \r\n","\r\n            Event raised after the project XML is changed.\r\n            ":"\r\n            在更改项目XML之后提出的事件。\r\n            \r\n","\r\n            Provided a property that is already part of this project, does a best-effort expansion\r\n            of the unevaluated value provided and sets it as the evaluated value.\r\n            ":"提供已经是该项目一部分的属性，可以进行最佳及时扩展\r\n            提供的未评估值，并将其设置为评估值。\r\n            \r\n","\r\n            The result for this target.\r\n            ":"\r\n            该目标的结果。\r\n            \r\n","An enumeration of the sub-toolsets that belong to that toolsversion.":"属于该工具交换的子工具集的枚举。\r\n","\r\n            Produces a set of targets which allows the MSBuild scheduler to schedule projects in the order automatically by \r\n            following their dependencies without enforcing build levels.\r\n            ":"\r\n            产生一组目标，使MSBUILD调度程序可以自动安排项目\r\n            遵循他们的依赖项，而无需执行构建水平。\r\n            \r\n","\r\n            All parent elements of this element, going up to the ProjectRootElement.\r\n            None if this itself is a ProjectRootElement.\r\n            None if this itself has not been attached to a parent yet.\r\n            ":"\r\n            该元素的所有父元素，都可以进入ProjectRootelement。\r\n            如果这本身是一个项目，则没有。\r\n            如果此本身尚未附上父母，则没有。\r\n            \r\n","\r\n            An event which is signaled when a request is received from a remote host.\r\n            ":"\r\n            从远程主机收到请求时发出信号的事件。\r\n            \r\n","\r\n            Registers a task object with the specified key and lifetime.\r\n            ":"\r\n            用指定的密钥和寿命注册任务对象。\r\n            \r\n","The text to write to the log":"写入日志的文字\r\n","\r\n            Returns the object that knows how to handle all kinds of expansion for this bucket.\r\n            ":"\r\n            返回知道如何处理此存储桶的各种扩展的对象。\r\n            \r\n","\r\n            Remove a toolset.\r\n            Returns true if it was present, otherwise false.\r\n            ":"\r\n            删除工具集。\r\n            如果存在，则返回为true，否则为错误。\r\n            \r\n","\r\n            this event is raised to when telemetry is logged.\r\n            ":"\r\n            该活动被列入遥测时提出。\r\n            \r\n","The value to set. The caller is responsible to type-coerce this value to match the property's ":"要设置的值。呼叫者有责任将此值进行类型交易以匹配该属性的\r\n","\r\n            When this flag is present, projects loaded during build will ignore missing imports (":"\r\n            当存在此标志时，构建过程中加载的项目将忽略丢失的导入（\r\n","\r\n            Returns unexpanded value with '!' prepended. Useful for error messages.\r\n            ":"\r\n            用“！”返回未表达的价值预先。对于错误消息有用。\r\n            \r\n","\r\n            The plugin failed and couldn't return a result. The plugin should log an error detailing the failure. MSBuild will stop the build.\r\n            ":"\r\n            插件失败，无法返回结果。该插件应记录详细说明故障的错误。 MSBUILD将停止构建。\r\n            \r\n","\r\n            This code is very close to that which exists in the Evaluator.EvaluateItemXml method.  However, because\r\n            it invokes type constructors, and those constructors take arguments of fundamentally different types, it has not\r\n            been refactored.\r\n            ":"\r\n            该代码非常接近evaluator.evaluateitemxml方法中存在的代码。但是，因为\r\n            它调用类型的构造函数，这些构造函数对根本不同类型的论点进行了参数，但没有\r\n            被重构。\r\n            \r\n","\r\n            If the object implements IDisposable, IDisposable.Dispose will be invoked on the object before\r\n            discarding it.\r\n            ":"\r\n            如果对象实现IDISPOSable，则在对象上调用dispos.dispose。\r\n            丢弃它。\r\n            \r\n","\r\n            Starts to cancel the current request.\r\n            ":"\r\n            开始取消当前请求。\r\n            \r\n","\r\n            The results used when a build request entry continues.\r\n            ":"\r\n            当构建请求输入继续时使用的结果。\r\n            \r\n","\r\n            Raised when any XML in the underlying ProjectRootElement has changed.\r\n            ":"\r\n            当基础项目Rootelement中的任何XML发生变化时，会升高。\r\n            \r\n","\r\n            A factory used when creating a ":"\r\n            创建一个工厂\r\n","The location of the reassignment.":"重新分配的位置。\r\n","The full path to the actual project":"实际项目的完整途径\r\n","A structure containing the result of the build, success or failure and the list of target outputs per project":"包含构建结果，成功或失败结果以及每个项目目标输出列表的结构\r\n","\r\n            Looks at the project file node and determines (roughly) if the project file is in the MSBuild format.\r\n            The results are cached in case this method is called multiple times.\r\n            ":"\r\n            查看项目文件节点并（大致）确定项目文件是否为MSBUILD格式。\r\n            如果此方法被称为多次，则可以缓存结果。\r\n            \r\n","Delegate used to tell the node provider that a context has terminated":"代表用来告诉节点提供商上下文已终止\r\n","\r\n            Get the item types that have at least one item.\r\n            Read only collection.\r\n            ":"\r\n            获取至少有一个项目的项目类型。\r\n            仅阅读收藏。\r\n            \r\n","\r\n            The current pending and active graph build submissions.\r\n            ":"\r\n            当前的待处理和主动图构建提交。\r\n            \r\n","\r\n            Include all file options.\r\n            ":"\r\n            包括所有文件选项。\r\n            \r\n","\r\n            Marks the request as being blocked by new requests whose results we must get before we can proceed.\r\n            ":"\r\n            将请求标记为被新请求所阻止的，我们必须在继续进行之前就必须得到的结果。\r\n            \r\n","\r\n            This usually is not desired behavior.  It is only provided for those cases where the client\r\n            knows that the new build request does not depend on project state generated by a previous request.  Setting\r\n            this flag can provide a performance boost in the case of incompatible node affinities, as MSBuild would\r\n            otherwise have to serialize the project state from one node to another, which may be \r\n            expensive depending on how much data the project previously generated.\r\n            \r\n            This flag has no effect on target results, so if a previous request already built a target, the new \r\n            request will not re-build that target (nor will any of the project state mutations which previously\r\n            occurred as a consequence of building that target be re-applied.)\r\n            ":"\r\n            这通常不是所需的行为。仅适用于客户\r\n            知道新的构建请求不取决于先前请求生成的项目状态。环境\r\n            在不兼容的节点亲和力的情况下，此标志可以提供性能提升，就像MSBuild一样\r\n            否则必须将项目状态从一个节点序列化到另一个节点，这可能是\r\n            昂贵的，具体取决于该项目先前生成的数据。\r\n            \r\n            该标志对目标结果没有影响，因此，如果先前的请求已经构建了目标，则新的\r\n            请求不会重建该目标（以前的任何项目状态突变也不会\r\n            是由于重新实现目标的建筑物而发生的。）\r\n            \r\n","\r\n            This property holds the user-specified parameters to the logger. If parameters are not provided, a logger should revert\r\n            to defaults. If a logger does not take parameters, it can ignore this property.\r\n            ":"\r\n            此属性将用户指定的参数保存到Logger。如果未提供参数，则记录器应恢复\r\n            默认。如果记录器不采用参数，则可以忽略此属性。\r\n            \r\n","The request on which we are blocked.":"我们被阻止的请求。\r\n","The cancellation token used to cancel processing of the task.":"用于取消任务的处理的取消令牌。\r\n","\r\n            Creates a project SDK element attached to this project.\r\n            ":"\r\n            创建附加到此项目的项目SDK元素。\r\n            \r\n","\r\n            Create a CreateNode response\r\n            ":"\r\n            创建createNode响应\r\n            \r\n","\r\n            Initializes the object for evaluation.\r\n            Only called during evaluation, so does not check for immutability.\r\n            ":"\r\n            初始化评估对象。\r\n            仅在评估过程中调用，因此不检查不变性。\r\n            \r\n","\r\n            The rules are:\r\n            1. Errors take precedence over success.\r\n            2. Success takes precedence over skipped.\r\n            3. Stop takes precedence over continue.\r\n            4. The first exception in the result wins.\r\n            ":"\r\n            规则是：\r\n            1.错误优先于成功。\r\n            2.成功优先于跳过。\r\n            3.停止优先于继续。\r\n            4.结果中的第一个例外情况是。\r\n            \r\n","\r\n            Creates an empty cache.\r\n            ":"\r\n            创建一个空的缓存。\r\n            \r\n"," if the specified value is a valid SDK name.":" 如果指定的值是有效的SDK名称。\r\n","\r\n            Reset the states of per-build member variables\r\n            VSW#516376 \r\n            ":"\r\n            重置人均成员变量的状态\r\n            VSW＃516376\r\n            \r\n","The build parameters.  May be null.":"构建参数。可能是无效的。\r\n","\r\n            Gets the logging thread shutdown timeout.\r\n            ":"\r\n            获取记录线程关闭超时。\r\n            \r\n","\r\n            Given an SDK moniker and the targeted platform get the path to the SDK root if it exists.\r\n            ":"\r\n            给定SDK绰号和目标平台如果存在，则可以将其通往SDK根的路径。\r\n            \r\n","\r\n            Get an entry or null if not present\r\n            ":"\r\n            获取条目或无效（如果不存在）\r\n            \r\n","GetLogicalProject":"GetLogicalProject\r\n","\r\n            Thread safety: for all users, this class is as thread safe as the underlying Dictionary implementation, that is,\r\n            safe for concurrent readers or one writer from EACH user. It achieves this by locking itself and cloning before\r\n            any write, if it is being shared - i.e., stopping sharing before any writes occur.\r\n            ":"\r\n            线程安全：对于所有用户，此类与基础词典实现一样安全，也就是说\r\n            适用于并发的读者或每个用户的一位作家。它通过锁定和克隆来实现这一目标\r\n            任何写入，如果要共享 - 即，在任何写入之前停止共享。\r\n            \r\n","\r\n            An efficient multi-value wrapper holding one or more items.\r\n            ":"\r\n            一个有效的多价包装器，持有一个或多个物品。\r\n            \r\n","\r\n            Returns all properties partitioned into categories. The return value is never\r\n            null. \r\n            The returned list may contain auto-generated categories. Note that if a ":"\r\n            将所有分区分为类别的属性返回。回报值永远不会\r\n            无效的。\r\n            返回的列表可能包含自动生成类别。请注意，如果一个\r\n","\r\n            Used for timing-out the tool.\r\n            ":"\r\n            用于计时工具。\r\n            \r\n","\r\n            Column number of interest in associated file. \r\n            ":"\r\n            关联文件中的兴趣列。\r\n            \r\n","\r\n            Keeps track of the current indentation level.\r\n            ":"\r\n            跟踪当前的压痕水平。\r\n            \r\n","\r\n            Same as ":"\r\n            如同\r\n","\r\n            The plugin determined that it supports a build request and found that it can be skipped. MSBuild won't build the request.\r\n            ":"\r\n            该插件确定它支持构建请求，并发现可以跳过。 MSBUILD不会构建请求。\r\n            \r\n","\r\n            Logger parameters can be used to enable and disable specific event types.\r\n            Otherwise, the verbosity is used to choose which events to forward.\r\n            ":"\r\n            Logger参数可用于启用和禁用特定事件类型。\r\n            否则，使用冗长来选择要转发哪些事件。\r\n            \r\n"," // Occurences: 2; Operation: Include; Provenance: Inconclusive (it is an indirect occurence from a referenced item)\r\n             ":" //发生：2;操作：包括；出处：没有定论（这是引用项目的间接情况）\r\n             \r\n","\r\n            AppendFileNameWithQuoting(\"-StrangeFileName.cs\") => \".\\-StrangeFileName.cs\"\r\n            ":"\r\n            appendfilenamewithquoting（“  -  strangefilename.cs”）=>“。\r\n            \r\n","\r\n            Add the reference folder to the list of reference directories if it exists.\r\n            ":"\r\n            如果存在，则将参考文件夹添加到参考目录列表中。\r\n            \r\n"," represents a tool parameter.\r\n            ":" 表示工具参数。\r\n            \r\n","\r\n            The task execution host for in-proc tasks.\r\n            ":"\r\n            执行任务的任务主机。\r\n            \r\n","\r\n            Location of the match\r\n            ":"\r\n            比赛的位置\r\n            \r\n","\r\n            Provides an enumeration of the explicit metadata modifications.\r\n            ":"\r\n            提供明确的元数据修改的枚举。\r\n            \r\n","\r\n            The list of current requests the engine is working on.\r\n            ":"\r\n            引擎正在处理的当前请求列表。\r\n            \r\n","The sub-category string, or null.":"子类别字符串或null。\r\n"," more\r\n             than once must instead assign ":" 更多的\r\n             而不是一次必须分配\r\n","\r\n            Metadata to draw on for expansion.\r\n            ":"\r\n            用于扩展的元数据。\r\n            \r\n","\r\n             Get a sorted list of AssemblyFoldersFromConfigInfo which contain information about what directories the 3rd party assemblies are registered under for use during build and design time.\r\n            \r\n             This method will read the specified configuration file and enumerate the and return a list of AssemblyFoldersFromConfigInfo in the same order in which\r\n             they will be searched during both design and build time for reference assemblies.\r\n             ":"\r\n             获取从configinfo中获得的汇编列表，其中包含有关在构建和设计时间期间使用的第三方组件目录的信息。\r\n            \r\n             此方法将读取指定的配置文件并枚举并返回一个汇编列表，汇总fromconfiginfo的列表，以相同的顺序\r\n             它们将在设计和建立参考组件的时间期间进行搜索。\r\n             \r\n","The project XML root element to unload.":"项目XML根元素要卸载。\r\n","\r\n            Constructor called by evaluator\r\n            ":"\r\n            评估员调用的构造函数\r\n            \r\n","\r\n            Flag indicating we have disposed.\r\n            ":"\r\n            指示我们已处置的标志。\r\n            \r\n","\r\n            This class represents an implementation of INode for out-of-proc nodes.\r\n            ":"\r\n            该类代表用于传播外节点的Inode的实现。\r\n            \r\n","The ProjectRootElement instance if one exists.  Null otherwise.":"projectRootelement实例如果存在。否则为无效。\r\n","\r\n            Returns the encoding from the Xml declaration if any, otherwise UTF8.\r\n            ":"\r\n            如果有的话，从XML声明中返回编码，否则UTF8。\r\n            \r\n","\r\n            Used to specify the targeted bitness of the .NET Framework for some methods of ToolLocationHelper\r\n            ":"\r\n            用于指定.NET框架的某些方法的目标框架的目标位。\r\n            \r\n","\r\n            If dwFlags specifies STARTF_USESIZE, this member is the width of the window if a new window is created, in pixels. Otherwise, this member is ignored. \r\n            ":"\r\n            如果DWFLAGS指定startf_asesize，则该成员是窗口的宽度，如果创建了一个新窗口，则以像素为单位。否则，该成员将被忽略。\r\n            \r\n","\r\n            Dequeue some requests from the unsubmitted request queue and submit them.\r\n            ":"\r\n            从未删除的请求队列中删除一些请求并提交。\r\n            \r\n","\r\n            Whether a ProjectExtensions node has been encountered already.\r\n            It's not supposed to appear more than once.\r\n            ":"\r\n            是否已经遇到了projectExtensions节点。\r\n            它不应该多次出现。\r\n            \r\n","\r\n            Unloads any configurations not in use.\r\n            ":"\r\n            卸载任何未使用的配置。\r\n            \r\n","\r\n            Creates a ProjectInstance directly.\r\n            No intermediate Project object is created.\r\n            This is ideal if the project is simply going to be built, and not displayed or edited.\r\n            Global properties may be null.\r\n            Tools version may be null.\r\n            Used by SolutionProjectGenerator so that it can explicitly pass the vsVersionFromSolution in for use in\r\n            determining the sub-toolset version.\r\n            ":"\r\n            直接创建一个ProjectInstance。\r\n            没有创建中间项目对象。\r\n            如果仅仅要构建或不显示或编辑该项目，这是理想的选择。\r\n            全局属性可能为零。\r\n            工具版本可能为空。\r\n            由solutionProjectGenerator使用\r\n            确定子量表版本。\r\n            \r\n","The logging configuration for the node.":"节点的记录配置。\r\n","\r\n            The handler for the build started event\r\n            ":"\r\n            构建开始活动的处理程序\r\n            \r\n","\r\n            Raised when a configuration needs an id.\r\n            ":"\r\n            当配置需要ID时升高。\r\n            \r\n","\r\n            Evaluates a ProjectRootElement, updating the fresh Project.Data passed in.\r\n            Handles evaluating conditions, expanding expressions, and building up the\r\n            lists of applicable properties, items, and itemdefinitions, as well as gathering targets and tasks\r\n            and creating a TaskRegistry from the using tasks.\r\n            ":"\r\n            评估一个项目Rootelement，更新新的Project.Data通过。\r\n            处理评估条件，扩大表达方式并建立\r\n            适用的属性，项目和项目定义的列表，以及收集目标和任务\r\n            并从使用任务创建任务指定。\r\n            \r\n","\r\n            This class provides the same functionality as the Task class, but derives from MarshalByRefObject so that it can be\r\n            instantiated in its own app domain.\r\n            ":"\r\n            该类提供与任务类相同的功能，但源自元帅，以便它可以是\r\n            在其自己的应用域中实例化。\r\n            \r\n","\r\n            Indicates if we should keep duplicate target outputs.\r\n            ":"\r\n            指示我们是否应保持重复的目标输出。\r\n            \r\n","Add root markers as inputs.":"添加根标记作为输入。\r\n","The importance to check.":"检查的重要性。\r\n","Optional message importances. Default to low.":"可选消息重要性。默认为低。\r\n","\r\n            Delegate used to change text color.\r\n            ":"\r\n            用于更改文本颜色的委托。\r\n            \r\n","This is only needed by the IDE logger.":"这仅是IDE记录器需要的。\r\n","\r\n            The project file this task is in.\r\n            Typically this is an imported .targets file.\r\n            Unfortunately the interface has shipped with a poor name, so we cannot change it.\r\n            ":"\r\n            项目文件此任务已进入。\r\n            通常，这是导入的.targets文件。\r\n            不幸的是，该界面的名称不佳，因此我们无法更改它。\r\n            \r\n","\r\n            Retrieves all of the yielded requests.\r\n            ":"\r\n            检索所有屈服的请求。\r\n            \r\n","\r\n            Adds an item with no metadata to the project.\r\n            Any metadata can be added subsequently.\r\n            Does not modify the XML if a wildcard expression would already include the new item.\r\n            Evaluates on a best-effort basis:\r\n                -expands with all items. Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.\r\n                -only this item is evaluated. Other items that might depend on it is not affected.\r\n            This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.\r\n            ":"\r\n            在项目中添加一个没有元数据的项目。\r\n            任何元数据都可以随后添加。\r\n            如果通配符表达式已经包含新项目，则不会修改XML。\r\n            以最佳胜地进行评估：\r\n                 - 与所有项目相关。在新项目下方的XML中定义的项目也可以使用，即使在实际评估中不会。\r\n                 - 仅评估此项目。其他可能依赖它的项目不受影响。\r\n            这是一种方便，可以理解，在重新评估之前，它不一定会使项目处于完全一致的状态。\r\n            \r\n","\r\n            Constructor called by Evaluator.\r\n            All parameters are in the unevaluated state.\r\n            All location parameters may be null if not applicable, except for the main location parameter.\r\n            ":"\r\n            评估器调用的构造函数。\r\n            所有参数均处于未评估状态。\r\n            如果不适用，则所有位置参数均可能为null，除了主位置参数外。\r\n            \r\n","A child to add to the Xml tree, which has already been added to the ProjectElement tree":"一个孩子添加到XML树中，已经添加到项目电子树中\r\n","May be full name or assembly qualified name":"可以是全名或组装合格名称\r\n","\r\n            Handler for thread exceptions (logging thread, communications thread).  This handler will only get called if the exception did not previously\r\n            get handled by a node exception handlers (for instance because the build is complete for the node.)  In this case we\r\n            get the exception and will put it into the OverallBuildResult so that the host can see what happened.\r\n            ":"\r\n            线程异常的处理程序（记录线程，通信线程）。此处理程序只有在异常以前没有被调用\r\n            通过节点异常处理程序处理（例如，由于节点的构建是完整的。）在这种情况下，我们\r\n            获取例外，并将其放入整体建筑物中，以便主持人可以看到发生的事情。\r\n            \r\n","\r\n            Always load read-only, to save memory\r\n            ":"\r\n            始终加载只读，以保存内存\r\n            \r\n","\r\n            Calculates a mask, which can be applied to an absolute index to get the index within a page of a segmented\r\n            array.\r\n            ":"\r\n            计算一个掩码，可以将其应用于绝对索引，以获取索引的索引\r\n            大批。\r\n            \r\n","\r\n            Represents an output property element beneath a task element\r\n            ":"\r\n            代表任务元素下方的输出属性元素\r\n            \r\n","Count of metadata.":"元数据计数。\r\n"," named ":" 命名\r\n","\r\n            The ProjectRootElement to parse into\r\n            ":"\r\n            分析的项目Rootelement\r\n            \r\n","\r\n            Called before the build when virtual properties are added, \r\n            and during the build when tasks emit properties.\r\n            If name is invalid or reserved, throws ArgumentException.\r\n            Creates mutable object.\r\n            ":"\r\n            添加虚拟属性时构建之前调用\r\n            在构建期间，任务发出属性。\r\n            如果名称无效或保留，请引发参数exception。\r\n            创建可变的对象。\r\n            \r\n","The hash code of the instance.":"实例的哈希代码。\r\n","\r\n            Targets that we will build in the project\r\n            ":"\r\n            我们将在项目中建立的目标\r\n            \r\n","The help keyword.":"帮助关键字。\r\n","\r\n            Appends a default representation of an evaluation location with a given separator\r\n            ":"\r\n            用给定的分离器附加评估位置的默认表示\r\n            \r\n","\r\n            Initialize a parented ProjectItemElement instance\r\n            ":"\r\n            初始化父母的ProjectItemelement实例\r\n            \r\n","\r\n            Do the correct chaining of .net 3.5, 3.0 and 2.0. Throw an exception if any of the chain is missing\r\n            ":"\r\n            进行.NET 3.5、3.0和2.0的正确链条。如果缺少任何链条，请引发例外\r\n            \r\n","\r\n            A reusable buffer for writing packets.\r\n            ":"\r\n            可重复使用的缓冲区，用于编写数据包。\r\n            \r\n","\r\n            Constructs a token bucket object that can be compared against other\r\n            buckets. This dummy bucket is a patently invalid bucket, and cannot\r\n            be used for any other operations besides comparison.\r\n            ":"\r\n            构造一个可以与其他比较的令牌桶对象\r\n            水桶。 这个虚拟桶是一个明显无效的桶，不能\r\n            可用于除比较之外的任何其他操作。\r\n            \r\n","\r\n            Native implementation of file system operations\r\n            ":"\r\n            文件系统操作的本地实施\r\n            \r\n","The id of the request on which we are blocked.":"我们被阻止的请求的ID。\r\n","\r\n            We are blocked waiting for results from child requests.\r\n            ":"\r\n            我们被封锁了儿童请求的结果。\r\n            \r\n","\r\n            Factory delegate which instantiates a component of the type specified.\r\n            ":"\r\n            工厂代表实例化指定类型的组件。\r\n            \r\n","\r\n            Log a warning based on an exception\r\n            ":"\r\n            根据例外记录警告\r\n            \r\n","\r\n            Use the standard handles\r\n            ":"\r\n            使用标准手柄\r\n            \r\n","\r\n            An enumerable wrapper for items that clones items as they are requested,\r\n            so that writes have no effect on the items.\r\n            ":"\r\n            枚举的包装器，适用于要求按要求的物品夹杂的物品，\r\n            因此，写作对项目没有影响。\r\n            \r\n","\r\n            This is used to specify whether multiple files need to be batched on one command line invocation. \r\n            ":"\r\n            这用于指定是否需要在一个命令行调用上批处理多个文件。\r\n            \r\n","\r\n                Whether the glob was parsed sucsesfully from a string.\r\n                Illegal glob strings contain:\r\n                - invalid path characters (other than the wildcard characters themselves)\r\n                - \"...\"\r\n                - \":\"\r\n                In addition, the wildcard directory part:\r\n                - cannot contain \"..\"\r\n                - if ** is present it must appear alone between slashes\r\n            ":"\r\n                是否从弦上进行偷偷摸摸地解析了全球。\r\n                非法地球串包含：\r\n                 - 无效的路径字符（除了通配符本身除外）\r\n                 - “ ...”\r\n                 - “：”\r\n                此外，通配符目录部分：\r\n                 - 不能包含“ ..”\r\n                 - 如果存在**，则必须单独出现在斜线之间\r\n            \r\n","\r\n            The property source\r\n            ":"\r\n            属性源\r\n            \r\n","The name of the factory.":"工厂的名称。\r\n","\r\n            Called by a DERIVED CLASS to indicate its XmlElement has changed.\r\n            This normally shouldn't happen, so it's broken out into an explicit method.\r\n            An example of when it has to happen is when an item's type is changed.\r\n            We trust the caller to have fixed up the XmlDocument properly.\r\n            We ASSUME that attributes were copied verbatim. If this is not the case,\r\n            any cached attribute values would have to be cleared.\r\n            If the new element is actually the existing element, does nothing, and does\r\n            not mark the project dirty.\r\n            ":"\r\n            由派生类称呼表示其XMLELEMENT已更改。\r\n            通常不应该发生这种情况，因此将其分解为明确的方法。\r\n            一个何时发生的示例是何时更改项目的类型。\r\n            我们相信呼叫者可以正确修复Xmldocument。\r\n            我们假设属性是逐字复制的。如果不是这样，\r\n            任何缓存的属性值都必须清除。\r\n            如果新元素实际上是现有元素，则什么都不做，并且做\r\n            不标记项目肮脏。\r\n            \r\n","\r\n            File name\r\n            ":"\r\n            文件名\r\n            \r\n","\r\n            This is a little involved, as it requires replacing\r\n            the XmlElement, and updating the project's datastructures.\r\n            ":"这有点参与，因为它需要更换\r\n            XMlelement，并更新项目的数据架构。\r\n            \r\n","\r\n            Private Entry point called from islands. Must be public so that the islands can invoke it.\r\n            UNDONE: Make this internal somehow.\r\n            Called on debugger worker thread.\r\n            ":"\r\n            私人入口点从岛屿命名。必须公开，以便岛屿可以调用它。\r\n            撤消：以某种方式进行内部。\r\n            打电话给调试器工人线程。\r\n            \r\n","\r\n            Gets the environment variables which were set when this build was created.\r\n            ":"\r\n            获取创建此构建时设置的环境变量。\r\n            \r\n","\r\n            The sub-toolset version that should be used with this toolset to determine \r\n            the full set of properties to be used by the build. \r\n            ":"\r\n            该工具集应使用的子模式版本确定\r\n            构建要使用的完整属性。\r\n            \r\n","\r\n            UNDONE: (Logging) I don't like the semantics of this. Why should unregistering imply shutting down? VS actually calls it before registering any loggers.\r\n            Also, why not just have ShutdownComponent? Or call this Shutdown or Dispose?\r\n            ":"\r\n            撤消：（记录）我不喜欢这个语义。为什么不注册意味着关闭？ VS实际上在注册任何记录器之前将其调用。\r\n            另外，为什么不只是关闭操作呢？还是称此关闭或处置？\r\n            \r\n","The output files produced by compiling this source":"通过编译此源产生的输出文件\r\n","\r\n            The target we are blocked on\r\n            ":"\r\n            我们被阻止的目标\r\n            \r\n","\r\n            Creates the target result dictionary and populates it with however many target results are \r\n            available given the list of targets passed. \r\n            ":"\r\n            创建目标结果字典并使用它填充，但是许多目标结果是\r\n            给定的目标列表通过。\r\n            \r\n","\r\n            Task completed executing in the task host\r\n            ":"任务在任务主机中完成执行\r\n            \r\n","\r\n            Obtain the number of documents contained in the cache.\r\n            ":"\r\n            获取缓存中包含的文档数量。\r\n            \r\n","\r\n            Gets the number of metadata set on the item.\r\n            Computed, not necessarily fast.\r\n            ":"\r\n            获取项目上设置的元数据的数量。\r\n            计算，不一定快。\r\n            \r\n","The BinaryReader to read BuildEventArgs from":"二进制阅读buildeventargs\r\n","The target build event context":"目标构建事件上下文\r\n","\r\n            Helper class for maintaining the component collection\r\n            ":"\r\n            用于维护组件集合的帮助课程\r\n            \r\n","The dirtied project.":"污垢的项目。\r\n","\r\n            The Any event handler\r\n            ":"\r\n            任何活动处理程序\r\n            \r\n","Swaps the values in the two references if the first is greater than the second.":"如果第一个大于第二个，则将两个引用中的值交换。\r\n","\r\n            Constant property that indicates the number of elements\r\n            in the stack.\r\n            ":"\r\n            表示元素数量的恒定属性\r\n            在堆栈中。\r\n            \r\n","\r\n                Number of threads to participate in building the project graph.\r\n            ":"参与构建项目图的线程数。\r\n            \r\n","The property's current state.":"属性的当前状态。\r\n","\r\n            Interface implemented by the Target Builder which allows tasks to invoke targets and build projects.\r\n            ":"\r\n            目标构建器实现的接口允许任务调用目标并构建项目。\r\n            \r\n","\r\n            Returns a new instance of this same type.\r\n            Any properties that cannot be set after creation should be set to copies of values\r\n            as set for this instance.\r\n            ":"\r\n            返回同一类型的新实例。\r\n            创建后无法设置的任何属性都应设置为值的副本\r\n            为此实例设置。\r\n            \r\n","\r\n            NOTE: Internal for unit test purposes only.\r\n            ":"\r\n            注意：内部仅出于单位测试目的。\r\n            \r\n","\r\n            AppxLocation metadata\r\n            ":"appxlocation元数据\r\n            \r\n","Sources that should be removed from the graph":"应该从图表中删除的来源\r\n","The configuration ids which have been cleared.":"已清除的配置ID。\r\n",") with that\r\n            from the ":"） 接着就，随即\r\n            来自\r\n","\r\n             If hosts tend to load lots of projects with the same path, the value will have to be \r\n             changed to a more efficient type of collection.\r\n            \r\n             Lock on this object. Concurrent load must be thread safe.\r\n             Not using ConcurrentDictionary because some of the add/update\r\n             semantics would get convoluted.\r\n             ":"\r\n             如果主机倾向于用相同的路径加载很多项目，则该值必须为\r\n             更改为更有效的收藏类型。\r\n            \r\n             锁定此对象。并发负载必须是安全的。\r\n             由于某些添加/更新\r\n             语义会变得复杂。\r\n             \r\n","\r\n            The type of this function's receiver.\r\n            ":"\r\n            此功能接收器的类型。\r\n            \r\n","The unique name for the project":"该项目的唯一名称\r\n","True if the logger has been registered successfully. False if the logger was not registered due to it already being registered before":"如果已成功注册记录器，则为诚然。错误，如果未注册记录器，则由于已经注册了\r\n","\r\n            Returns the path to the reference assemblies location for the given framework version.\r\n            ":"\r\n            返回给定框架版本的参考组件位置的路径。\r\n            \r\n","\r\n            Appends a pretty printed location with its associated profiled data\r\n            ":"\r\n            用相关的配置数据附加一个漂亮的印刷位置\r\n            \r\n"," that is a null reference.\r\n            ":" 那是一个无效的引用。\r\n            \r\n","\r\n            DefaultOverrideToolsVersion attribute on msbuildToolsets element, specifying the tools version that should be used by \r\n            default to build projects with this version of MSBuild.\r\n            ":"\r\n            MSBUILDToolSets元素上的DefaultoverRidetoolSversion属性，指定应由应使用的工具版本\r\n            默认可以使用此版本的MSBuild构建项目。\r\n            \r\n","\r\n            The original process environment.\r\n            ":"\r\n            原始过程环境。\r\n            \r\n","Input to check for UNC pattern minimum requirements.":"输入以检查UNC模式最低要求。\r\n","\r\n            ERROR_ACCESS_DENIED\r\n            ":"\r\n            error_access_denied\r\n            \r\n","\r\n            Return a task registry for the override tasks in the *.overridetasks file for this toolset\r\n            ":"\r\n            返回 *.overridetasks文件中的覆盖任务的任务注册表此工具集\r\n            \r\n","\r\n            Initialize a ProjectRootElement instance from an existing document.\r\n            May throw InvalidProjectFileException.\r\n            Leaves the project dirty, indicating there are unsaved changes.\r\n            ":"\r\n            从现有文档初始化ProjectRootelement实例。\r\n            可能会抛出无效的fileException。\r\n            使项目肮脏，表明有未保存的变化。\r\n            \r\n","\r\n            Executes the task.\r\n            ":"\r\n            执行任务。\r\n            \r\n","\r\n            Handle build sttus events\r\n            ":"\r\n            处理构建Sttus事件\r\n            \r\n","\r\n            Handler for project finished events\r\n            ":"\r\n            项目完成活动的处理程序\r\n            \r\n","\r\n            Suppresses the display of error and warnings summary.\r\n            If null, user has made no indication.\r\n            ":"\r\n            抑制错误和警告摘要的显示。\r\n            如果无效，则用户没有任何指示。\r\n            \r\n","\r\n            Returns the value of a named parameter, or null if there is no such parameter.\r\n            ":"\r\n            返回命名参数的值，如果没有这样的参数，则返回null。\r\n            \r\n","The tools version":"工具版本\r\n","\r\n            Assigns a field or variable containing an immutable dictionary to the specified value if it is has not yet\r\n            been initialized.\r\n            ":"\r\n            如果尚未分配包含不可变字典的字段或变量\r\n            被初始化。\r\n            \r\n","Host services if any. May be null.":"主机服务（如果有）。可能是无效的。\r\n","\r\n            The logging services thread loop. This loop will wait until the logging queue has build events.\r\n            When this happens the thread will start to process the queue items by raising the build event\r\n            on either a filter event source or a sink depending on where the message is supposed to go.\r\n            ":"\r\n            记录服务线程循环。该循环将等到登录队列有构建事件。\r\n            发生这种情况时，线程将通过提高构建事件开始处理队列项目\r\n            在过滤器事件源或接收器上，取决于消息应在哪里进行。\r\n            \r\n","\r\n            Some project APIs need to do analysis that requires the Evaluator to record more data than usual as it evaluates.\r\n            This method checks if the Evaluator was run with the extra required settings and if not, does a re-evaluation.\r\n            If a re-evaluation was necessary, it saves this information so a next call does not re-evaluate.\r\n            \r\n            Using this method avoids storing extra data in memory when its not needed.\r\n            ":"\r\n            一些项目API需要进行分析，这需要评估者在评估时记录比平常更多的数据。\r\n            此方法检查评估器是否使用额外的必需设置运行，如果没有，则进行重新评估。\r\n            如果需要重新评估，则可以节省此信息，因此下一个呼叫不会重新评估。\r\n            \r\n            使用此方法，避免在不需要时将额外的数据存储在内存中。\r\n            \r\n","\r\n            Name for MSBuildTaskHost.exe\r\n            ":"\r\n            MSBUILDTASKHOST.EXE的名称\r\n            \r\n","Message arguments":"消息参数\r\n","\r\n            What should happen if multiple versions of a given productfamily or sdk name are found\r\n            ":"\r\n            如果找到给定产品的多个版本或SDK名称，该怎么办\r\n            \r\n","\r\n            This event is raised when telemetry is sent.\r\n            ":"\r\n            发送遥测时，将提出此活动。\r\n            \r\n","\r\n            What if the size of Mru lists was zero? (We still intern tiny strings in this case)\r\n            ":"\r\n            如果MRU列表的大小为零，该怎么办？ （在这种情况下，我们仍然实习小字符串）\r\n            \r\n","\r\n            Access to remote ":"\r\n            访问遥控器\r\n","\r\n            The type of the item within this expression\r\n            ":"\r\n            此表达式中项目的类型\r\n            \r\n","\r\n            Represents an evaluated project with design time semantics.\r\n            Always backed by XML; can be built directly, or an instance can be cloned off to add virtual items/properties and build.\r\n            Edits to this project always update the backing XML.\r\n            ":"代表具有设计时间语义的评估项目。\r\n            始终由XML支持；可以直接构建，也可以克隆一个实例以添加虚拟项目/属性并构建。\r\n            对该项目进行编辑始终更新Backing XML。\r\n            \r\n","\r\n            Disable AssemblyLoadContext isolation for plugins.\r\n            ":"\r\n            禁用插件的汇总loadContext隔离。\r\n            \r\n","\r\n            Get a read-only collection of the child import groups, if any.\r\n            ":"\r\n            如果有的话，获取只读子进口组的收集。\r\n            \r\n","This method must not directly handle requests because it would block requests from other nodes.  Instead, it simply\r\n            adds requests to a queue which are processed by a background thread.":"此方法不得直接处理请求，因为它会阻止其他节点的请求。相反，它简单\r\n            将请求添加到由背景线程处理的队列中。\r\n","\r\n            Controls the amount of text displayed by the logger\r\n            ":"\r\n            控制记录器显示的文本量\r\n            \r\n","\r\n            Instantiates a project collection with no global properties or loggers that reads toolset\r\n            information from the configuration file and registry.\r\n            ":"\r\n            实例化一个没有读取工具集的全局属性或登录器的项目集合\r\n            来自配置文件和注册表的信息。\r\n            \r\n","ArrayList containing ItemBucket objects, each one representing an execution batch.":"包含itembucket对象的arraylist，每个对象代表执行批处理。\r\n","\r\n            Get the logging service for a build.\r\n            ":"\r\n            获取构建的伐木服务。\r\n            \r\n","\r\n            Constructor for existing singleton.\r\n            ":"\r\n            现有Singleton的构造函数。\r\n            \r\n","\r\n            Raised when a project finished logging message has been processed.\r\n            ":"\r\n            处理项目完成的记录消息时升起。\r\n            \r\n","\r\n            Apply a parameter\r\n            ":"\r\n            应用参数\r\n            \r\n","\r\n            The reason we do this and not just look at project.GlobalProperties is\r\n            that when the project is being loaded, the GlobalProperties collection is already populated.  When we do our\r\n            evaluation, we may attempt to add some properties, such as environment variables, to the master Properties \r\n            collection.  As GlobalProperties are supposed to override these and thus be added last, we can't check against\r\n            the GlobalProperties collection as they are being added.  The correct behavior is to always check against the\r\n            collection which is accumulating properties as we go, which is the Properties collection.  Once the project has\r\n            been fully populated, this method will also ensure that further properties do not attempt to override global\r\n            properties, as those will have the global property flag set.\r\n            ":"\r\n            我们这样做的原因，而不仅仅是看项目。GlobalProperties是\r\n            当项目加载时，GlobalProperties Collection已经填充。当我们做我们的\r\n            评估，我们可能会尝试将一些属性（例如环境变量）添加到主属性\r\n            收藏。由于应该覆盖它们，因此最后添加了，我们无法检查\r\n            添加时，GlobalProperties集合。正确的行为是始终检查\r\n            收集我们的累积属性，即属性集合。一旦项目有\r\n            被完全填充，此方法还将确保进一步的属性不会尝试覆盖全局\r\n            属性，因为这些将具有全局属性标志集。\r\n            \r\n","The condition.":"条件。\r\n","\r\n            The ancestors which led to this circular dependency.\r\n            ":"\r\n            导致这种循环依赖性的祖先。\r\n            \r\n","The string to append":"要附加的字符串\r\n","\r\n            Gets or sets the runtime value for the task. \r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"\r\n            获取或设置任务的运行时值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n","\r\n            The input file\r\n            ":"\r\n            输入文件\r\n            \r\n","\r\n            Location of the original condition attribute, if any\r\n            ":"\r\n            原始条件属性的位置，如果有的话\r\n            \r\n","\r\n            Compare mixed numbers and Versions\r\n            ":"\r\n            比较混合数字和版本\r\n            \r\n","\r\n            Supported Architectures is a semicolon delimited list of architectures that the SDK supports.\r\n            ":"\r\n            支持的体系结构是SDK支持的半分号划界列表。\r\n            \r\n","\r\n            Given a list of configuration IDs, returns the id of the config with the greatest number of immediate references.\r\n            ":"\r\n            给定的配置ID列表，以最大数量的即时引用返回配置的ID。\r\n            \r\n","\r\n            SDKType found in the sdk manifest\r\n            ":"\r\n            SDKType在SDK清单中发现\r\n            \r\n","\r\n            Log that a project has started if it has no parent (the first project)\r\n            ":"\r\n            登录项目没有父母（第一个项目）就已经开始\r\n            \r\n","\r\n            Given a submission ID, assign it \"start\" and \"finish\" events to track its use of \r\n            the legacy thread.\r\n            ":"\r\n            给定提交ID，将其分配为“开始”和“完成”事件以跟踪其使用\r\n            旧线程。\r\n            \r\n","True if parse was successful, false otherwise ":"如果解析成功，则是真的，否则是错误的\r\n","\r\n            Gets or sets the architecture value for the task. \r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"\r\n            获取或设置任务的体系结构值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n","\r\n            Deep clone the item.\r\n            Any metadata inherited from item definitions are also copied.\r\n            ":"\r\n            深克隆物品。\r\n            也复制从项目定义继承的任何元数据。\r\n            \r\n","The dictionary to translate.":"翻译字典。\r\n","\r\n            Visual Studio 2010 and SP1\r\n            ":"\r\n            Visual Studio 2010和SP1\r\n            \r\n","\r\n            Location of the assembly file attribute, if any\r\n            ":"\r\n            汇编文件属性的位置，如果有\r\n            \r\n","\r\n            Arguments for the project evaluation finished event.\r\n            ":"\r\n            项目评估的论点完成事件。\r\n            \r\n","\r\n            The code markers here used to be around the Project class constructor in the old code.\r\n            In the new code, that's not very interesting; we are repurposing to wrap parsing the XML.\r\n            ":"\r\n            这里的代码标记曾经是旧代码中的项目类构造函数。\r\n            在新代码中，这不是很有趣。我们正在重新使用以包装XML解析。\r\n            \r\n","\r\n            Shutdown the inprocess node when the build finishes. By default this is false\r\n            since visual studio needs to keep the inprocess node around after the build finishes.\r\n            ":"\r\n            构建完成时关闭InProcess节点。默认情况下这是错误的\r\n            由于Visual Studio需要在构建完成后保持Inprocess节点。\r\n            \r\n"," containing the environment properties.":" 包含环境属性。\r\n","\r\n            The response indicates that no action should be taken.\r\n            ":"\r\n            响应表明不应采取任何行动。\r\n            \r\n","\r\n            Implementation of IKeyed exposing the target name\r\n            ":"\r\n            实施IKEYED公开目标名称\r\n            \r\n","The outputs of each specified target (can be null).":"每个指定目标的输出（可以为null）。\r\n","\r\n            Construct over a text reader over project xml, evaluating with specified\r\n            global properties and toolset, either or both of which may be null.\r\n            Project will be added to the global project collection when it is named.\r\n            Throws InvalidProjectFileException if the evaluation fails.\r\n            Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.\r\n            ":"\r\n            通过项目XML构造文本读取器，并用指定的\r\n            全局属性和工具集，或两者都可能为null。\r\n            命名时，项目将被添加到全球项目集合中。\r\n            如果评估失败，则投掷无效的fileException。\r\n            如果项目集合中已经加载了等效的项目，则投掷无效的exception。\r\n            \r\n","\r\n            Returns true in the multiproc case\r\n            ":"\r\n            在Multiproc情况下返回true\r\n            \r\n","\r\n            The parameters (excepting condition and continue-on-error)\r\n            ":"\r\n            参数（条件除外，并在纠正范围内）\r\n            \r\n","Detailed error message in case we encounter critical problems reading the file":"详细的错误消息，以防我们遇到关键问题阅读文件\r\n","\r\n             Custom scheduler for the SQL folks to solve a performance problem with their builds where they end up with a few long-running\r\n             requests on all but one node, and then a very large number of short-running requests on that one node -- which is by design for\r\n             our current scheduler, but makes it so that later in the build, when these configurations are re-entered with new requests, the\r\n             build becomes essentially serial because so many of the configurations are tied to that one node.\r\n            \r\n             Fixes that problem by intentionally choosing to refrain from assigning new configurations to idle nodes if those idle nodes already\r\n             have more than their fair share of the existing configurations assigned to them.\r\n             ":"\r\n             SQL人的定制调度程序可以解决他们的构建中的性能问题，最终会有一些长期运行\r\n             除了一个节点以外的所有内容，然后在该节点上发出了大量的短运行请求 - 这是通过设计的\r\n             我们当前的调度程序，但要做，因此在构建中，当这些配置重新输入新请求时，\r\n             构建本质上是串行的，因为许多配置都与该节点相关。\r\n            \r\n             通过故意选择避免将新配置分配给闲置节点，请解决该问题\r\n             在分配给他们的现有配置中拥有不仅仅是公平的份额。\r\n             \r\n","\r\n            Handler for telemetry events.\r\n            ":"\r\n            遥测活动的处理程序。\r\n            \r\n","\r\n            Location of the original condition attribute\r\n            ":"\r\n            原始条件属性的位置\r\n            \r\n","The parent of this entry, if any.":"该条目的父母（如果有）。\r\n","\r\n            Add a metadata with the specified names and values.\r\n            Overwrites any metadata with the same name already in the collection.\r\n            ":"\r\n            添加带有指定名称和值的元数据。\r\n            覆盖集合中已经具有相同名称的所有元数据。\r\n            \r\n","\r\n            Raised when the engine's status has changed.\r\n            ":"\r\n            当发动机状态发生变化时，提高了。\r\n            \r\n","A ProjectImportGroupElement derived from the XML element passed in":"从传递的XML元素得出的ProjectImportGroupelement\r\n","\r\n            The task factory class name which will be used to lookup the task factory from the assembly specified in the assemblyName or assemblyFile.\r\n            ":"\r\n            任务工厂的类名称将用于从汇编名称或汇编文件中指定的汇编中查找任务工厂。\r\n            \r\n","\r\n            Save the project to the file system, if dirty.\r\n            Creates any necessary directories.\r\n            May throw IO-related exceptions.\r\n            Clears the dirty flag.\r\n            ":"\r\n            如果肮脏，将项目保存到文件系统中。\r\n            创建任何必要的目录。\r\n            可能会抛出与IO相关的例外。\r\n            清除肮脏的旗帜。\r\n            \r\n","\r\n            This class is designed to be passed to loggers.\r\n            The expense of copying items is only incurred if and when \r\n            a logger chooses to enumerate over it.\r\n            ":"\r\n            该课程旨在将其传递给伐木工人。\r\n            复制项目的费用仅在以及\r\n            记录仪选择枚举它。\r\n            \r\n","message arguments":"消息参数\r\n","\r\n            Constructor for the blocker where we are blocked waiting for a target.\r\n            ":"\r\n            阻止我们被阻止的构造函数等待目标。\r\n            \r\n","\r\n            Sets a task parameter using an unevaluated value, which will be expanded by the batch bucket.\r\n            ":"\r\n            使用未评估的值设置任务参数，该值将通过批量存储桶进行扩展。\r\n            \r\n","Enumeration has either not started or has already finished.":"枚举尚未开始或已经完成。\r\n","\r\n            Create a new item from the specified include and include before wildcard expansion.\r\n            This is to support the scenario Include=\"@(i)\" where we are creating new items before adding metadata.\r\n            ":"从指定的Incluction中创建一个新项目，并在通配符扩展之前包括。\r\n            这是为了支持场景包括=“@（i）”，然后在添加元数据之前创建新项目。\r\n            \r\n","\r\n            overridden so we can track previously seen elements\r\n            ":"\r\n            覆盖以便我们可以跟踪以前看到的元素\r\n            \r\n","\r\n            The ExecuteTask method takes a task as specified by XML and executes it.  This procedure is comprised \r\n            of the following steps:\r\n            1. Loading the Task from its containing assembly by looking it up in the task registry\r\n            2. Determining if the task is batched.  If it is, create the batches and execute each as if it were a non-batched task\r\n            3. If the task is not batched, execute it.\r\n            4. If the task was batched, hold on to its Lookup until all of the natches are done, then merge them.\r\n            ":"\r\n            Executetask方法执行XML指定的任务并执行它。此过程包括\r\n            以下步骤：\r\n            1.通过在任务注册表中查找任务从其包含的组件中加载任务\r\n            2.确定任务是否批量。如果是这样，创建批处理并执行每个批次，就好像是一个非批处理任务\r\n            3.如果未批处理任务，请执行。\r\n            4.如果任务被分组，请保持查找，直到完成所有表，然后将其合并。\r\n            \r\n","\r\n            Returns the paths to the reference assemblies location for the given framework version and properly chains the reference assemblies if required.\r\n            ":"\r\n            将路径返回给定框架版本的参考组件位置，并在需要时正确链条。\r\n            \r\n","\r\n            Full path to the file in which the originating element was originally \r\n            defined.\r\n            If it originated in a project that was not loaded and has never been \r\n            given a path, returns an empty string.\r\n            ":"\r\n            原始元素最初的文件的完整路径\r\n            定义。\r\n            如果它起源于未加载且从未有过的项目\r\n            给定路径，返回一个空字符串。\r\n            \r\n","\r\n            version 4.5.2. Enum is out of order because it was shipped out of band from a Visual Studio update\r\n            without a corresponding SDK release.\r\n            ":"\r\n            版本4.5.2。枚举是故障的，因为它是从视觉工作室更新中从乐队中运送出来的\r\n            没有相应的SDK释放。\r\n            \r\n","\r\n            Record information necessary to find the method info from\r\n            the debugger thread.\r\n            CALLED ONLY FROM THE DEBUGGER MANAGER.\r\n            ":"\r\n            记录从中找到方法信息所需的信息\r\n            调试器线程。\r\n            仅来自调试器经理。\r\n            \r\n","\r\n            INTERNAL FOR UNIT-TESTING ONLY\r\n            \r\n            We've got several environment variables that we read into statics since we don't expect them to ever \r\n            reasonably change, but we need some way of refreshing their values so that we can modify them for \r\n            unit testing purposes. \r\n            ":"\r\n            内部仅用于单位测试\r\n            \r\n            我们已经有几个环境变量，因为我们不希望它们永远不会\r\n            合理的改变，但我们需要一些刷新其价值的方法，以便我们可以修改它们\r\n            单元测试目的。\r\n            \r\n","\r\n            Time interval in miliseconds between subsequent warnings that a non-cancelable task has not finished\r\n            ":"\r\n            随后的警告之间的时间间隔，即不可交付的任务尚未完成\r\n            \r\n","[out] The command line switch for using\r\n            the temporary response file, or null if the response file is not needed.\r\n            ":"[out]用于使用的命令行开关\r\n            临时响应文件或无需响应文件的null。\r\n            \r\n","\r\n            Gets a profiled result in a markdown-like form.\r\n            ":"\r\n            以类似降价的形式获得概要的结果。\r\n            \r\n","\r\n            Evaluated include value.\r\n            May be empty string.\r\n            ":"\r\n            评估包括值。\r\n            可以是空字符串。\r\n            \r\n","\r\n            The project file's full path, escaped.\r\n            ":"\r\n            项目文件的完整路径逃脱了。\r\n            \r\n","True if an exact name match is required.":"如果需要确切的名称匹配，则正确。\r\n","The traversal from which the global properties should be obtained.":"应从中获得全局特性的遍历。\r\n","\r\n            Contains all of the properties which have been set at this level or above in the Lookup\r\n            ":"\r\n            包含已在此级别或以上设置的所有属性\r\n            \r\n","\r\n            Creates an instance of this exception using projectFile, targetName, taskName and message.\r\n            ":"\r\n            使用ProjectFile，TargetName，TaskName和消息创建此例外的实例。\r\n            \r\n","\r\n            Logs that a project evaluation has finished\r\n            ":"\r\n            项目评估已经完成的日志\r\n            \r\n","\r\n            Get an enumerator over any child property groups\r\n            ":"\r\n            在任何儿童财产团体上获取枚举者\r\n            \r\n","\r\n            Parse a ProjectMetadataElement \r\n            ":"\r\n            解析一个项目\r\n            \r\n","\r\n            Whether the cache should check file content for cache entry invalidation.\r\n            ":"\r\n            缓存是否应检查文件内容是否无效缓存输入。\r\n            \r\n","\r\n            The smallest size a string can be to be ginormous.\r\n            ":"\r\n            一根弦的最小尺寸可能是巨大的。\r\n            \r\n","\r\n            The provider provides remote nodes.\r\n            ":"\r\n            提供商提供远程节点。\r\n            \r\n","\r\n            Gets a text serialized value of a parameter for logging.\r\n            ":"\r\n            获取用于记录的参数的文本序列化值。\r\n            \r\n","\r\n            The huge string Mru list.\r\n            ":"\r\n            巨大的字符串MRU列表。\r\n            \r\n","This method is used as a System.Threading.TimerCallback delegate.":"此方法用作system.threading.timercallback委托。\r\n","The entry to activate.":"激活的条目。\r\n","\r\n            Version of the platform on which this platform depends \r\n            ":"\r\n            该平台依赖的平台的版本\r\n            \r\n","\r\n            The thread on which we yielded.\r\n            ":"\r\n            我们屈服的线。\r\n            \r\n","\r\n            Tests to see if the expression may contain expandable expressions, i.e.\r\n            contains $, % or @.\r\n            ":"\r\n            测试以查看表达式是否可能包含可扩展表达式，即\r\n            包含$、%或@。\r\n            \r\n","List of AssemblyFoldersFromConfigInfo":"FromConfiginfo的汇编列表\r\n","\r\n            This override exists to apply the removing-everything short-circuit and to avoid creating a redundant list of items to remove.\r\n            ":"\r\n            存在此覆盖以应用删除的所有短路，并避免创建要删除的项目的冗余列表。\r\n            \r\n","\r\n            Set to true to indicate the user has seen a message about this frame.\r\n            ":"\r\n            设置为真实表示用户已经看到了有关此帧的消息。\r\n            \r\n","\r\n            The console logger does not need to release any resources.\r\n            This method does nothing.\r\n            ":"\r\n            控制台记录仪不需要发布任何资源。\r\n            此方法无济于事。\r\n            \r\n","\r\n            Retrieves the app domain setup information.\r\n            ":"\r\n            检索应用程序域设置信息。\r\n            \r\n","\r\n            The parent node logging context this context was derived from.\r\n            ":"\r\n            父节点记录上下文此上下文是从。\r\n            \r\n","\r\n            Method that islands call back to.\r\n            ":"\r\n            岛屿回电的方法。\r\n            \r\n","An IRequestBuilder to use.":"使用IreQuestBuilder。\r\n","\r\n            \r\n             When this property is set to true, the previous item operations throw an ":"\r\n            \r\n             当此属性设置为true时，先前的项目操作抛出\r\n","\r\n            Implemented by the derived class. Returns a string which is the name of the underlying .EXE to run e.g. \"resgen.exe\"\r\n            Only used by the ToolExe getter.\r\n            ":"\r\n            由派生类实施。返回一个字符串，该字符串是基础.exe运行的名称，例如“ resgen.exe”\r\n            仅由Toolexe Getter使用。\r\n            \r\n","\r\n            Signalled when the main thread wants to send an event to the debugger worker thread.\r\n            The main thread fills out the data first. \r\n            ":"\r\n            当主线程想要将事件发送到调试器工作线程时发出信号。\r\n            主线程首先填写数据。\r\n            \r\n","\r\n            This class is used during ItemGroup intrinsic tasks to resolve metadata references.  It consists of three tables:\r\n            1. The metadata added during evaluation.\r\n            1. The metadata table created for the bucket, may be null.\r\n            2. The metadata table derived from the item definition group, may be null.\r\n            ":"\r\n            该类在ItemGroup固有任务中使用以解决元数据参考。它由三个表组成：\r\n            1.评估过程中添加的元数据。\r\n            1.为存储桶创建的元数据表可以为空。\r\n            2.从项目定义组得出的元数据表可以为null。\r\n            \r\n","\r\n            Marks the current frame to indicate that an error or warning\r\n            occurred during it.\r\n            ":"\r\n            标记当前框架以表明错误或警告\r\n            发生在此期间。\r\n            \r\n","\r\n            Sets metadata where one built-in metadata is allowed to be set: RecursiveDir. \r\n            This is not normally legal to set outside of evaluation. However, the CreateItem\r\n            needs to be able to set it as a task output, because it supports wildcards. So as a special exception we allow\r\n            tasks to set this particular metadata as a task output.\r\n            Other built in metadata names are ignored. That's because often task outputs are items that were passed in,\r\n            which legally have built-in metadata. If necessary we can calculate it on the new items we're making if requested.\r\n            We don't copy them too because tasks shouldn't set them (they might become inconsistent)\r\n            ":"\r\n            设置元数据，其中允许设置一个内置元数据：recursivedir。\r\n            在评估之外，这通常不合法。但是，createItem\r\n            需要能够将其设置为任务输出，因为它支持通配符。因此，作为一个特殊例外，我们允许\r\n            将此特定元数据设置为任务输出的任务。\r\n            其他内置的元数据名称将被忽略。这是因为任务输出通常是传递的项目，\r\n            法律上具有内置元数据。如有必要，我们可以根据要求在我们制作的新项目上进行计算。\r\n            我们也不复制它们，因为任务不应该设置它们（它们可能会变得不一致）\r\n            \r\n","\r\n            Handler for TaskStarted events.\r\n            ":"\r\n            任务启动事件的处理程序。\r\n            \r\n","\r\n            Next sibling element.\r\n            May be null.\r\n            ":"\r\n            下一个同胞元素。\r\n            可能是无效的。\r\n            \r\n","\r\n            Read toolset information from the exe configuration file.\r\n            ":"\r\n            从EXE配置文件中读取工具集信息。\r\n            \r\n","\r\n            A background thread that waits for requests to be received.\r\n            ":"\r\n            一个等待收到请求的背景线程。\r\n            \r\n","\r\n            Project inside an Enterprise Template project\r\n            ":"\r\n            企业模板项目中的项目\r\n            \r\n","\r\n            An implementation of IEventSource that raises appropriate events for a provided BuildEventArgs object.\r\n            ":"\r\n            Ieventsource的实施，为提供的BuildEventargs对象提出了适当的事件。\r\n            \r\n","\r\n            This partial class contains all properties which are public and hence settable in XAML. Those properties that\r\n            are internal are defined in another partial class below.\r\n            ":"\r\n            该部分类包含所有公共属性，因此可以在XAML中进行设置。那些属性\r\n            内部定义在下面的另一部分类别中。\r\n            \r\n","current index to start from":"当前索引从\r\n","\r\n                Represents a parsed MSBuild glob.\r\n                An MSBuild glob is composed of three parts:\r\n                - fixed directory part: \"a/b/\" in \"a/b/**/*test*/**/*.cs\"\r\n                - wildcard directory part: \"**/*test*/**/\" in \"a/b/**/*test*/**/*.cs\"\r\n                - file name part: \"*.cs\" in \"a/b/**/*test*/**/*.cs\"\r\n            ":"\r\n                代表一个解析的MSBUILD GLOB。\r\n                MSBUILD GLOB由三个部分组成：\r\n                 - 固定目录零件：“ a/b/” in“ a/b/**/*test*/**/*。CS”\r\n                 - 通配符目录部分：“ **/*测试*/**/”在“ A/B/**/*测试*/**/*。CS”中\r\n                 - 文件名零件：“*.cs”在“ a/b/**/*test*/**/*。CS”中\r\n            \r\n","\r\n            Never use the slow (but more accurate) CreateFile approach to timestamp extraction.\r\n            ":"\r\n            切勿使用慢速（但更准确）的CreateFile方法进行时间戳提取。\r\n            \r\n","\r\n            The completion event.\r\n            ":"\r\n            完成事件。\r\n            \r\n","\r\n            Kicks off the build of the project file.  Doesn't return until the build is complete (or aborted.)\r\n            ":"\r\n            启动项目文件的构建。直到构建完成（或中止）才返回。\r\n            \r\n","\r\n            The wrapper task for tasks that wish to take advantage of the \r\n            task host factory feature.  Generated by AssemblyTaskFactory\r\n            when it wants to run the loaded task in the task host. \r\n            ":"\r\n            希望利用的任务的包装任务\r\n            任务主机工厂功能。由assemblyTaskFactory生成\r\n            当它想在任务主机中运行加载任务时。\r\n            \r\n","\r\n            Return the versioned/unversioned SDK content folder path\r\n            ":"\r\n            返回版本的/未讲述的SDK内容文件夹路径\r\n            \r\n","\r\n            InitialTargets specified in the project, plus those\r\n            in all imports, gathered depth-first.\r\n            ":"\r\n            项目中指定的初始标准，以及\r\n            在所有进口中，都收集了深度优先。\r\n            \r\n","Type of items to return.":"要返回的项目类型。\r\n"," to build. This only applies to this build request (if another target calls the\r\n            \"missing target\" later this will still result in an error).\r\n            ":" 建造。这仅适用于此构建请求（如果另一个目标调用\r\n            “缺少目标”以后这仍然会导致错误）。\r\n            \r\n","\r\n            Raised when a build request is resumed from a previously waiting state.\r\n            ":"\r\n            从先前等待的状态恢复构建请求时提出。\r\n            \r\n","\r\n            This is the only non-private member of this class.\r\n            This is a helper static method so that the caller can just do \"Evaluator.Evaluate(..)\" without\r\n            newing one up, yet the whole class need not be static.\r\n            ":"\r\n            这是该课程中唯一的非私人成员。\r\n            这是一种助手静态方法，以便呼叫者只能执行“评估器。\r\n            新的一个，但整个班级都不必静态。\r\n            \r\n","\r\n            Aggregation of all profiled locations. Computed the first time ":"\r\n            所有剖析位置的聚合。第一次计算\r\n","\r\n            Lightweight, read-only IDictionary implementation using two arrays\r\n            and O(n) lookup.\r\n            Requires specifying capacity at construction and does not\r\n            support reallocation to increase capacity.\r\n            ":"\r\n            使用两个阵列轻巧，仅阅读的IDictionary实现\r\n            和O（n）查找。\r\n            需要指定施工能力，不\r\n            支持重新分配以增加容量。\r\n            \r\n","\r\n            Sets the value of an attribute, removing the attribute if the value is null, but still setting it\r\n            if the value is the empty string. Returns the attribute, or null if it was removed.\r\n            UNDONE: Make this return a bool if the attribute did not change, so we can avoid dirtying.\r\n            ":"\r\n            设置属性的值，如果值为null，则删除属性，但仍将其设置\r\n            如果值是空字符串。返回属性，如果将其删除，则将其返回。\r\n            撤消：如果属性没有更改，请将此返回bool，以免弄脏。\r\n            \r\n","\r\n            Simple name for the MSBuild tasks (v14+), used for shimming in loading \r\n            task factory UsingTasks\r\n            ":"\r\n            MSBUILD任务（V14+）的简单名称，用于加载\r\n            任务工厂使用任务\r\n            \r\n","\r\n            Retrieves the configuration id.\r\n            ":"\r\n            检索配置ID。\r\n            \r\n","\r\n            Expands properties and items in the argument, and verifies that the result is consistent\r\n            with a scalar parameter type.\r\n            ":"\r\n            扩展参数中的属性和项目，并验证结果是否一致\r\n            使用标量参数类型。\r\n            \r\n","\r\n            Starts to cancel an existing request.\r\n            ":"\r\n            开始取消现有请求。\r\n            \r\n","\r\n            SDK version\r\n            ":"\r\n            SDK版本\r\n            \r\n","\r\n            Static constructor to choose cache size.\r\n            ":"\r\n            静态构造函数选择缓存大小。\r\n            \r\n","\r\n            Handles the NodeBuildComplete packet.\r\n            ":"\r\n            处理节点Complete数据包。\r\n            \r\n","\r\n            Type of handler for ProjectStarted events\r\n            ":"\r\n            项目开始的处理程序类型\r\n            \r\n","\r\n            The name of the environment variable that users can specify to override where NuGet assemblies are loaded from in the NuGetSdkResolver.\r\n            ":"\r\n            用户可以指定的环境变量的名称以覆盖nugetssberies在Nugetsdkresolver中加载的位置。\r\n            \r\n","\r\n                Gets or sets any custom state for current build.  This allows resolvers to maintain state between resolutions.\r\n                This property is not thread-safe.\r\n            ":"\r\n                获取或设置用于当前构建的任何自定义状态。这允许解析器在分辨率之间保持状态。\r\n                此属性不是线程安全。\r\n            \r\n","\r\n            Stores the wrapped string.\r\n            ":"\r\n            存储包裹的字符串。\r\n            \r\n","\r\n            Construct a function that will be executed during property evaluation\r\n            ":"\r\n            构建将在属性评估期间执行的函数\r\n            \r\n","The project graph.":"项目图。\r\n","\r\n            Mapping of configuration ids to the set of configurations which were traversed to get to this configuration.\r\n            ":"\r\n            将配置ID的映射到遍历以获取此配置的一组配置。\r\n            \r\n","\r\n            The table of all build results.  This table is indexed by configuration id and\r\n            contains BuildResult objects which have all of the target information.\r\n            ":"\r\n            所有构建结果的表。该表由配置ID和\r\n            包含具有所有目标信息的构建对象。\r\n            \r\n","\r\n            Indicates an invalid node identifier.\r\n            ":"指示无效的节点标识符。\r\n            \r\n","MarkDirty()":"markdirty（）\r\n","\r\n                Gets the effective global properties for a project reference item.\r\n            ":"\r\n                获取项目参考项的有效全球属性。\r\n            \r\n","\r\n            Retrieves a specific toolset.\r\n            ":"\r\n            检索特定的工具集。\r\n            \r\n","\r\n            Implementation of file system operations on windows. Combination of native and managed implementations.\r\n            TODO Remove this class and replace with WindowsFileSystem. Test perf to ensure no regressions.\r\n            ":"\r\n            在Windows上实现文件系统操作。本地和托管实施的结合。\r\n            TODO删除此类，然后用WindowsFilesystem替换。测试perf以确保没有回归。\r\n            \r\n","True if any configurations were cached, false otherwise.":"如果有任何配置，则为true，否则为false。\r\n","true, if target output item paths should be rebased":"是的，如果应重新重新重新目标输出项目路径\r\n","\r\n            Whether the node can be evaluated as a version: by default,\r\n            this is not allowed\r\n            ":"\r\n            是否可以将节点评估为一个版本：默认情况下，\r\n            这是不允许的\r\n            \r\n","The evaluation context to use in case reevaluation is required.":"如果需要重新评估，要使用的评估上下文。\r\n","The information about why the request is blocked.":"有关为什么请求被阻止的信息。\r\n","Property tracking setting value":"属性跟踪设置值\r\n"," should be cloned or not\r\n            ":" 是否应该克隆\r\n            \r\n","\r\n            Initialize an unparented ProjectOutputElement\r\n            ":"\r\n            初始化无与伦比的ProjectOutuputement\r\n            \r\n","The build request":"构建请求\r\n","\r\n            Keeps track of the FullPaths of ProjectRootElements that may have been modified as a stream.\r\n            ":"\r\n            跟踪可能已被修改为流的ProjectRootelements的完整路径。\r\n            \r\n","Function name for errors":"错误的功能名称\r\n","\r\n            Not public as we do not wish to encourage the use of ProjectExtensions.\r\n            ":"\r\n            不公开，因为我们不希望鼓励使用项目延迟。\r\n            \r\n","\r\n            Location that msbuild.exe was last successfully found at.\r\n            ":"\r\n            MSBUILD.EXE的位置是最后一个成功找到的位置。\r\n            \r\n","\r\n            The name of the desktop, or the name of both the desktop and window station for this process.\r\n            A backslash in the string indicates that the string includes both the desktop and window station names\r\n            ":"\r\n            桌面的名称，或此过程的桌面和窗口站的名称。\r\n            字符串中的后斜切表示字符串同时包含桌面和窗口站名称\r\n            \r\n","\r\n            Initialize an instance of a loggingService.\r\n            ":"\r\n            初始化loggingservice的实例。\r\n            \r\n","\r\n            Execute a task object for a given bucket.\r\n            ":"\r\n            执行给定存储桶的任务对象。\r\n            \r\n","\r\n            Finds directories for a specific registry key.\r\n            ":"\r\n            查找特定注册表密钥的目录。\r\n            \r\n","\r\n            Allows tasks to raise error events to all registered loggers.\r\n            The build engine may perform some filtering or\r\n            pre-processing on the events, before dispatching them.\r\n            ":"\r\n            允许任务将错误事件提高到所有已注册的记录器。\r\n            构建引擎可能会执行一些过滤或\r\n            在派遣事件之前对事件进行预处理。\r\n            \r\n","\r\n            Scan for the closing bracket that matches the one we've already skipped;\r\n            essentially, pushes and pops on a stack of parentheses to do this.\r\n            Takes the expression and the index to start at.\r\n            Returns the index of the matching parenthesis, or -1 if it was not found.\r\n            ":"\r\n            扫描与我们已经跳过的封闭托架相匹配的封闭括号；\r\n            从本质上讲，推动并弹出一堆括号来做到这一点。\r\n            以表达式和索引开始。\r\n            返回匹配括号的索引，如果找不到-1，则返回-1。\r\n            \r\n","\r\n            Retrieves the component type.\r\n            ":"\r\n            检索组件类型。\r\n            \r\n","The project for items generated.":"生成项目的项目。\r\n","The logging context for this project.":"该项目的记录上下文。\r\n","\r\n            Evaluates the children of a When or Choose.\r\n            Returns true if the condition was true, so subsequent\r\n            WhenElements and Otherwise can be skipped.\r\n            ":"\r\n            评估何时或选择的孩子。\r\n            如果条件为真，则返回真实，因此随后返回\r\n            元素和否则可以跳过。\r\n            \r\n","The unevaluated continue on error.":"未评估的继续错误。\r\n","\r\n            Sets the given property in the given property group.\r\n            ":"\r\n            在给定属性组中设置给定属性。\r\n            \r\n","\r\n            Expander to expand the properties and items in the using tasks files\r\n            ":"\r\n            扩展以扩展使用任务文件中的属性和项目\r\n            \r\n","\r\n            Retrieves the logger descriptions.\r\n            ":"\r\n            检索记录器描述。\r\n            \r\n","\r\n            Represents the schema of a list-of-strings property. \r\n            ":"\r\n            代表串线属性列表的模式。\r\n            \r\n","\r\n            Implementation of IKeyed exposing the property name, so properties\r\n            can be put in a dictionary conveniently.\r\n            ":"\r\n            实施IKEYED公开属性名称，因此属性\r\n            可以方便地放入字典中。\r\n            \r\n","\r\n            A class which interprets and splits MSBuild expressions\r\n            ":"\r\n            解释和拆分MSBUILD表达的课程\r\n            \r\n","\r\n            Maximum path length.\r\n            ":"\r\n            最大路径长度。\r\n            \r\n","The configuration to use for the remote node.":"用于远程节点的配置。\r\n","\r\n            What node is this logging service running on\r\n            ":"\r\n            该节目的日志服务服务在什么节点上运行\r\n            \r\n","\r\n            Causes all nodes to be shut down permanently - for InProc nodes it is the same as ShutdownConnectedNodes\r\n            with enableReuse = false\r\n            ":"\r\n            导致所有节点被永久关闭 - 对于InProc节点，它与ShutDownConnectedNodes相同\r\n            使用enableReuse = false\r\n            \r\n","\r\n            MinOSVersion found in the sdk manifest, defaults to 6.2.1 for framework extension SDKs when manifest does not have this property set\r\n            ":"\r\n            在SDK清单中找到的米斯转化，对于框架扩展SDK的默认为6.2.1，当清单没有此属性集时\r\n            \r\n","\r\n            Lazily created normalized item value.\r\n            ":"懒惰创建了归一化的项目值。\r\n            \r\n","Options matching.":"匹配的选项。\r\n","\r\n            Indicates whether to emit a default error if a task returns false without logging an error.\r\n            ":"\r\n            如果任务在不记录错误的情况下返回false，请指示是否发出默认错误。\r\n            \r\n","\r\n            The token used to separate a property switch from its value.\r\n            ":"\r\n            代币用于将属性开关与其值分开。\r\n            \r\n","\r\n            Constructor for items with metadata.\r\n            Called before the build when virtual items are added, \r\n            and during the build when tasks emit items.\r\n            Include may be empty.\r\n            Direct metadata may be null, indicating no metadata. It will be cloned.\r\n            Builtin metadata may be null, indicating it has not been populated. It will be cloned.\r\n            Inherited item definition metadata may be null. It is assumed to ALREADY HAVE BEEN CLONED.\r\n            Mutability follows the project.\r\n            ":"\r\n            具有元数据的物品的构造函数。\r\n            添加虚拟项目时构建之前调用\r\n            在构建期间，任务发出项目。\r\n            包含可能是空的。\r\n            直接元数据可能为无效，表明没有元数据。它将被克隆。\r\n            内置的元数据可能为无效，表明它尚未被填充。它将被克隆。\r\n            继承的项目定义元数据可能为null。假定已经克隆了它。\r\n            项目遵循该项目。\r\n            \r\n","The original task instance data":"原始任务实例数据\r\n"," otherwise.  In general, where available, it may be a non buildable-dummy object, and should only\r\n            be used to retrieve ":" 否则。通常，在可用的地方，它可能是一个不可建造的对象，只应\r\n            被用来检索\r\n"," indicating the replay should stop as soon as possible.":" 指示重播应尽快停止。\r\n","\r\n            The logging configuration for the node.\r\n            ":"\r\n            节点的记录配置。\r\n            \r\n"," containing the referenced SDKs be resolved.":" 包含参考的SDK可以解决。\r\n","\r\n            Handles the BuildRequest packet.\r\n            ":"\r\n            处理BuildRequest数据包。\r\n            \r\n","\r\n            Signal that the legacy thread has finished its work.\r\n            ":"\r\n            表明遗产线程已经完成。\r\n            \r\n","\r\n            Version number of this object that was last saved to disk, or last loaded from disk.\r\n            Used to figure whether this object is dirty for saving.\r\n            Saving to or loading from a provided stream reader does not modify this value, only saving to or loading from disk.\r\n            The actual value is meaningless (since the counter is shared with all projects) --\r\n            it should only be compared to a stored value.\r\n            Immediately after loading from disk, this has the same value as ":"\r\n            该对象的版本编号最后保存到磁盘或最后一次从磁盘加载。\r\n            用于弄清此对象是否脏于保存。\r\n            从提供的流读取器中保存或加载不会修改此值，仅保存到磁盘上或加载。\r\n            实际价值是毫无意义的（因为计数器与所有项目共享） - \r\n            它仅应与存储值进行比较。\r\n            从磁盘加载后立即具有与\r\n","The item specification to evaluate and add.":"评估和添加的项目规范。\r\n","The logging context for the target":"目标的日志记录上下文\r\n","ITaskItem":"itaskItem\r\n","\r\n             List of ":"\r\n             清单\r\n","\r\n            A class factory for instance model items.\r\n            ":"\r\n            例如，班级工厂实例模型项目。\r\n            \r\n","\r\n            Gets or sets a list of properties associated with the event.\r\n            ":"\r\n            获取或设置与事件关联的属性列表。\r\n            \r\n","\r\n            Location of the original property name attribute\r\n            ":"\r\n            原始属性名称属性的位置\r\n            \r\n"," if it is not.\r\n            ":" 如果不是。\r\n            \r\n","\r\n            Adds the configuration to the cache.\r\n            ":"\r\n            将配置添加到缓存中。\r\n            \r\n","\r\n            Constructs a BuildEventContext with a specified project instance id.\r\n            ":"\r\n            使用指定的项目实例ID构造buildEventContext。\r\n            \r\n","\r\n            Creates new xml objects for itself, disconnecting from the old xml objects.\r\n            Called ONLY by ":"\r\n            为自己创建新的XML对象，与旧的XML对象断开连接。\r\n            仅被称为\r\n","\r\n            Clear cached files from disk.\r\n            ":"\r\n            清除磁盘中的缓存文件。\r\n            \r\n","\r\n            Valid attributes on UsingTaskTask element\r\n            ":"\r\n            使用TASKTASK元素上的有效属性\r\n            \r\n","Path to tool.":"工具路径。\r\n","\r\n            The maximum number of nodes that this provider supports. Should \r\n            always be equivalent to the number of different TaskHostContexts \r\n            that exist. \r\n            ":"\r\n            该提供商支持的最大节点数量。应该\r\n            始终等同于不同的任务主持的数量\r\n            存在。\r\n            \r\n","\r\n            Use to optimize away status messages. When this is set to true, only \"critical\"\r\n            events like errors are logged.\r\n            ":"\r\n            用于优化离外状态消息。当将其设置为真时，只有“关键”\r\n            诸如错误之类的事件已记录。\r\n            \r\n","\r\n            Retrieves the root element cache with which this root element is associated.\r\n            ":"\r\n            检索与此根元素关联的根元素缓存。\r\n            \r\n"," is applicable in scenarios most like the scenarios where\r\n             ":" 适用于最类似的情况\r\n             \r\n","\r\n            Finds or creates a child process which can act as a node.\r\n            ":"\r\n            找到或创建可以充当节点的子过程。\r\n            \r\n","The help keyword prefix for task's messages":"任务消息的帮助关键字前缀\r\n","\r\n            Returns an unlocalized indication of how this file was last dirtied.\r\n            This is for debugging purposes only.\r\n            String formatting only occurs when retrieved.\r\n            ":"\r\n            返回未定位的指示该文件是如何最后污垢的。\r\n            这仅用于调试目的。\r\n            字符串格式仅在检索时发生。\r\n            \r\n","\r\n            This allows an SDK resolver to return multiple SDK paths, which will all be imported.\r\n            ":"\r\n            这允许SDK解析器返回多个SDK路径，这些路径将全部导入。\r\n            \r\n","\r\n            Accessor which indicates if there are any registered in process host objects.\r\n            ":"\r\n            登录器指示是否有进程主机对象中的任何注册。\r\n            \r\n","WIN32":"Win32\r\n","\r\n            Convenience method.  Submits a lone build request and blocks until results are available.\r\n            ":"\r\n            便利方法。提交一个孤独的构建请求和块，直到结果可用。\r\n            \r\n","\r\n            Gets or sets a value indicating if the build is allowed to interact with the user.\r\n            ":"\r\n            获取或设置一个值，指示是否允许构建与用户交互。\r\n            \r\n",".\r\n            Stored as UTC as this is faster when there are a large number of rapid edits.\r\n            ":"。\r\n            当有大量快速编辑时，以UTC的形式存储更快。\r\n            \r\n","\r\n            Initialize an unparented UsingTaskParameterGroupElement\r\n            ":"\r\n            初始化使用TaskParameterGroupelement的无与伦比的初始化\r\n            \r\n","\r\n            A link pointing to more information about the error.\r\n            ":"\r\n            链接指向有关错误的更多信息。\r\n            \r\n","The right hand argument":"右手论点\r\n","\r\n            Evaluated value\r\n            ":"\r\n            评估值\r\n            \r\n","\r\n            Retrieves the list of targets which should run after the specified target.\r\n            Never returns null.\r\n            ":"\r\n            检索应在指定目标之后运行的目标列表。\r\n            永远不会返回零。\r\n            \r\n","\r\n            Lookup which can be used to find a configuration with the specified metadata.\r\n            ":"\r\n            查找可用于查找指定元数据的配置。\r\n            \r\n","\r\n            This exception is used to wrap an unhandled exception from a project cache plugin. This exception aborts the build, and it can only be\r\n            thrown by the MSBuild engine.\r\n            ":"\r\n            该异常用于包含项目缓存插件的未经处理的异常。这个例外逐渐删除了构建，只能是\r\n            由MSBUILD引擎投掷。\r\n            \r\n","The targets to be built.  Each project will be built with the same targets.":"要构建的目标。每个项目都将以相同的目标构建。\r\n","Additional flags for the request.":"请求的其他标志。\r\n","ProjectRootElement to use.":"使用ProjectRootlement。\r\n","\r\n            Modifies the search condition of PathMatchSpecEx\r\n            ":"\r\n            修改PathMatchSpecex的搜索条件\r\n            \r\n","Filter for desired build results.":"滤波器的过滤器，以实现所需的构建结果。\r\n","\r\n            Get the unexpanded value\r\n            ":"\r\n            获取未表达的价值\r\n            \r\n","\r\n            The evaluated (escaped) include prior to wildcard expansion.  Used to determine the\r\n            RecursiveDir build-in metadata value.\r\n            ":"\r\n            评估（逃脱）包括通配符扩张之前。用于确定\r\n            recursivedir建筑物元数据值。\r\n            \r\n","\r\n            Perform a bitwise XOR on the first and second (first ^ second) \r\n            ":"\r\n            在第一个和第二个（第一 ^ second）上执行位XOR\r\n            \r\n"," which is hosting this component.\r\n            ":" 托管此组件。\r\n            \r\n","s\r\n            as far as property pages are concerned. The ":"s\r\n            就财产页而言。这\r\n","\r\n            Returns the submission id\r\n            ":"\r\n            返回提交ID\r\n            \r\n","\r\n            Log a comment from a format string and arguments\r\n            ":"\r\n            记录格式字符串和参数的评论\r\n            \r\n","The targets in the project to build (can be null).":"项目中的目标构建（可以为null）。\r\n","\r\n            The logging context for the target in which we are executing.\r\n            ":"\r\n            我们执行的目标的记录上下文。\r\n            \r\n","\r\n            Gets new style extension SDKs (those that are under the target SDK name and version and are driven by manifest, not directory structure).\r\n            ":"\r\n            获取新样式的扩展SDK（在目标SDK名称和版本下的SDK，并由明显而不是目录结构驱动）。\r\n            \r\n","\r\n            Private constructor to give static semantics\r\n            ":"\r\n            提供静态语义的私人构造函数\r\n            \r\n","\r\n            The result of the build.  Valid only after WaitHandle has become signalled.\r\n            ":"\r\n            构建的结果。只有在Waithandle发出信号后才有效。\r\n            \r\n","\r\n            Resolver to assist in resolving types when a new appdomain is created\r\n            ":"\r\n            创建新应用程序时，分辨率可以协助解决类型\r\n            \r\n","The result of the build.":"构建的结果。\r\n","\r\n            The handler for the project started event.\r\n            ":"项目的处理程序开始活动。\r\n            \r\n","\r\n            A list of the errors that have occurred during this build.\r\n            ":"\r\n            此构建过程中发生的错误列表。\r\n            \r\n","\r\n            The project's root directory, for evaluation of relative paths and\r\n            setting the current directory during build.\r\n            Is never null.\r\n            If the project has not been loaded from disk and has not been given a path, returns the current directory from \r\n            the time the project was loaded - this is the same behavior as Whidbey/Orcas.\r\n            If the project has not been loaded from disk but has been given a path, this path may not exist.\r\n            ":"\r\n            项目的根目录，用于评估相对路径和\r\n            在构建过程中设置当前目录。\r\n            永远不会无效。\r\n            如果该项目尚未从磁盘上加载并且没有给出路径，请从\r\n            加载项目的时间 - 这与Whidbey/orcas相同。\r\n            如果该项目尚未从磁盘上加载，但已获得一条路径，则该路径可能不存在。\r\n            \r\n","\r\n            Returns the string of logger parameters, null if there are none\r\n            ":"\r\n            返回logger参数的字符串，如果没有，则null\r\n            \r\n","\r\n            Deep clone of this object.\r\n            Useful for compiling a single file; or for keeping resolved assembly references between builds\r\n            Mutability is same as original.\r\n            ":"\r\n            该物体的深克隆。\r\n            可用于编译单个文件；或用于保持构建之间的解决方案参考\r\n            可变性与原始性相同。\r\n            \r\n","\r\n            Returns the escaped value of the metadata with the specified key.\r\n            ":"\r\n            用指定的键返回元数据的逃逸值。\r\n            \r\n","The sender name of the event.":"活动的发件人名称。\r\n","The modified XML string.":"修改后的XML字符串。\r\n","\r\n            Handle project finished events\r\n            ":"\r\n            处理项目完成的事件\r\n            \r\n","\r\n            { submissionId, BuildSubmission }\r\n            ":"\r\n            {提交，buildSubmission}\r\n            \r\n","\r\n            The invalid configuration id\r\n            ":"\r\n            无效的配置ID\r\n            \r\n","Failed to compare two elements in the array.":"无法比较数组中的两个元素。\r\n","\r\n            Called by the Node.  Non-overlapping with other calls from the Node.\r\n            ":"\r\n            由节点调用。与节点的其他呼叫的非重叠。\r\n            \r\n","\r\n            Do not create a window\r\n            ":"\r\n            不要创建窗口\r\n            \r\n","\r\n            The compressed set of items, if any.\r\n            ":"\r\n            压缩的项目集（如果有）。\r\n            \r\n","\r\n            Item definition metadata encountered during evaluation. These are read during the second evaluation pass.\r\n            Unlike those returned by the ItemDefinitions property, these are ordered, and include any metadata that\r\n            were subsequently overridden by others with the same name and item type. It does not include any\r\n            elements whose conditions did not evaluate to true.\r\n            It does not include any item definition metadata added since the last evaluation.\r\n            ":"\r\n            评估期间遇到的项目定义元数据。这些是在第二次评估通行证中读取的。\r\n            与ItemDefinitions属性返回的那些不同，这些是订购的，并包括任何元数据\r\n            随后被其他名称和项目类型的其他人覆盖。它不包括任何\r\n            条件未评估为真的元素。\r\n            它不包括自上次评估以来添加的任何项目定义元数据。\r\n            \r\n"," set directly on this ":" 直接放在此上\r\n","\r\n            Backing task item holding the other data.\r\n            Never null.\r\n            ":"\r\n            持有其他数据的支持任务项。\r\n            永不零。\r\n            \r\n","\r\n            Helps implementing the item type change for remoted objects>.\r\n            ":"\r\n            帮助实现远程对象>的项目类型更改。\r\n            \r\n"," arrays indexed by target name\r\n            ":" 数组由目标名称索引\r\n            \r\n"," that contains the operation.\r\n            ":" 其中包含操作。\r\n            \r\n","Project XML Element":"项目XML元素\r\n","\r\n            Marks this request as being blocked by the specified request.  Establishes the correct relationships between the requests.\r\n            ":"\r\n            将此请求标记为被指定请求阻止的。建立请求之间的正确关系。\r\n            \r\n","\r\n            This constructor allows event data to be initialized including the timestamp when the event was created.\r\n            Sender is assumed to be \"MSBuild\".\r\n            ":"\r\n            该构造函数允许在创建事件时初始化事件数据，包括时间戳。\r\n            假定发件人是“ msbuild”。\r\n            \r\n","Task name or target name.":"任务名称或目标名称。\r\n","\r\n            Convenience method to add an Output Item to this task.\r\n            Adds after the last child.\r\n            ":"\r\n            便利方法将输出项添加到此任务中。\r\n            在最后一个孩子之后添加。\r\n            \r\n","Flag indicating whether or not the configuration for the request must be sent to the node as well.":"指示是否也必须将请求配置的配置发送到节点。\r\n","\r\n            serializes IContentType.DefaultContentTypeForItemType\r\n            ":"\r\n            序列化icontentType.defaultContentTypeForiteMtype\r\n            \r\n","\r\n            AppendSwitchIfNotNull(\"/source:\", \"File Name.cs\") => \"/source:\\\"File Name.cs\\\"\"\r\n            ":"\r\n            appendSwitchifnotnull（“/source：“，“ file name.cs”）=>>“/source：\\” file name.cs \\“”\r\n            \r\n"," members that collect such elements will throw when accessed.\r\n            ":" 收集此类元素的成员将在访问时投掷。\r\n            \r\n","\r\n            Gets the task name this record was registered with.\r\n            ":"\r\n            获取该记录已注册的任务名称。\r\n            \r\n","\r\n            Task classes and locations known to this project. \r\n            This is the project-specific task registry, which is consulted before\r\n            the toolset's task registry.\r\n            ":"\r\n            该项目已知的任务类和位置。\r\n            这是特定于项目的任务注册表，以前进行咨询\r\n            工具集的任务注册表。\r\n            \r\n","\r\n            This class stands in for a full project started event because it contains only the \r\n            minimum amount of inforomation needed for the logger\r\n            ":"\r\n            该课程为一个完整的项目开始活动而站立，因为它仅包含\r\n            记录器所需的最小信息量\r\n            \r\n"," instead to mark the default value for this property. ":" 而是标记此属性的默认值。\r\n","Output specification string (can be empty).":"输出规范字符串（可以为空）。\r\n","\r\n            Interface for an object which can provide toolsets for evaulation.\r\n            ":"\r\n            可以提供用于散发工具集的对象的接口。\r\n            \r\n","\r\n            Retrieves a BuildResult for the specified matching BuildRequest.\r\n            ":"\r\n            检索指定匹配的BuildRequest的buildResult。\r\n            \r\n","\r\n            The object to synchronize with when accessing certain fields.\r\n            ":"\r\n            访问某些字段时要同步的对象。\r\n            \r\n","\r\n            Gets the HostServices object for this request.\r\n            ":"\r\n            获取此请求的hostServices对象。\r\n            \r\n","\r\n            The completion state of the target.\r\n            ":"目标的完成状态。\r\n            \r\n","The warning code to check.":"警告代码要检查。\r\n","The sub-toolset version, used in tandem with the ToolsVersion to determine the set of toolset properties.":"与ToolsVersion同时使用的子模式版本来确定工具集属性的集合。\r\n","\r\n            Is the assembly a complex name or a simple name. A simple name is where only the name is set\r\n            a complex name is where the version, culture or publickeytoken is also set\r\n            ":"\r\n            是组件是一个复杂的名称或一个简单的名称。一个简单的名称是仅设置名称的地方\r\n            还设置了一个复杂的名称\r\n            \r\n","\r\n            The overall build result code.\r\n            ":"\r\n            总体构建结果代码。\r\n            \r\n"," to associate with the list of warning codes.":" 与警告代码列表相关联。\r\n","\r\n            Flag indicating if errors should be converted to warnings.\r\n            ":"\r\n            标志指示是否应将错误转换为警告。\r\n            \r\n","\r\n                Factory for ":"\r\n                工厂\r\n","Project file being built":"正在构建项目文件\r\n","\r\n            Sends the specified packet to this node asynchronously.\r\n            The method enqueues a task to write the packet and returns\r\n            immediately. This is because SendData() is on a hot path\r\n            under the primary lock (BuildManager's _syncLock)\r\n            and we want to minimize our time there.\r\n            ":"\r\n            将指定的数据包发送到此节点异步。\r\n            该方法启动了编写数据包并返回的任务\r\n            立即地。这是因为senddata（）在热路上\r\n            在主要锁（BuildManager的_synclock）下\r\n            我们想最大程度地减少在那里的时间。\r\n            \r\n","\r\n            Reports that the specified request has become blocked and cannot proceed.\r\n            ":"\r\n            报告说，指定的请求已被阻止并且无法进行。\r\n            \r\n","\r\n            Targets in the project. The build process can find one by looking for its name\r\n            in the dictionary.\r\n            This collection is read-only.\r\n            ":"\r\n            项目中的目标。构建过程可以通过寻找名称来找到一个\r\n            在词典中。\r\n            该系列仅阅读。\r\n            \r\n","\r\n             Keep the build started event if it has been seen, we need the message off it.\r\n            ":"\r\n             保持构建启动事件，如果看到它，我们需要将消息传出。\r\n            \r\n","\r\n            Gets or sets the SDK that contains the import.\r\n            ":"\r\n            获取或设置包含导入的SDK。\r\n            \r\n","\r\n            Mapping of unnamed project instances to the file names assigned to them.\r\n            ":"\r\n            将未命名的项目实例映射到分配给他们的文件名。\r\n            \r\n","\r\n            Indicates if the given property is a reserved property.\r\n            ":"\r\n            指示给定的属性是否为保留属性。\r\n            \r\n","\r\n            Compares the set of files/directories designated as \"inputs\" against the set of files/directories designated as\r\n            \"outputs\", and indicates if any \"output\" file/directory is out-of-date w.r.t. any \"input\" file/directory.\r\n            ":"\r\n            将指定为“输入”的文件/目录集与指定为“输入”的一组文件/目录\r\n            “输出”，并指示是否有任何“输出”文件/目录是过时的W.R.T.任何“输入”文件/目录。\r\n            \r\n","\r\n            ItemDictionary[] returns a read only collection, so no need to wrap it. \r\n            ":"\r\n            ItemDictionary []仅返回一个读取集合，因此无需包装。\r\n            \r\n","\r\n            All locals (both early-bound and late-bound) for this frame.\r\n            ":"\r\n            该框架的所有当地人（既有早期和后期）。\r\n            \r\n","\r\n            The result of this target.\r\n            ":"\r\n            这个目标的结果。\r\n            \r\n","\r\n            Location of the original item type attribute\r\n            ":"\r\n            原始项目类型属性的位置\r\n            \r\n","\r\n            Reset the toolsets using the provided toolset reader, used by unit tests\r\n            ":"\r\n            使用提供的工具集读取器重置工具集，由单元测试使用\r\n            \r\n","A canonicalized full path with the correct directory separators.":"具有正确目录分离器的规范化完整路径。\r\n","\r\n            The forwarding loggers to use.\r\n            ":"\r\n            用于使用的转发记录器。\r\n            \r\n","Dictionary containing the item names that should be batched.  If the items match unqualified metadata,\r\n            the entire list of items will be returned in the Value.  Otherwise, the Value will be empty, indicating only the\r\n            qualified item set (in the Key) should be batched.\r\n            ":"字典包含应该批处理的项目名称。如果这些物品匹配不合格的元数据，\r\n            整个项目列表将在值中返回。否则，该值将为空，仅表示\r\n            合格的项目集（在密钥中）应进行批处理。\r\n            \r\n","\r\n            Time the build started\r\n            ":"\r\n            构建开始的时间\r\n            \r\n","Number of cores no longer in use.":"不再使用的内核数。\r\n","\r\n            Returns the node packet type\r\n            ":"\r\n            返回节点数据包类型\r\n            \r\n","A list of folders in the order which they should be used when looking for redist files in the SDK":"在SDK中查找REDIST文件时应使用的顺序中的文件夹列表\r\n","\r\n            Gets the specified toolset.\r\n            ":"\r\n            获取指定的工具集。\r\n            \r\n","\r\n            Logs that a project has finished\r\n            ":"\r\n            项目已经完成的日志\r\n            \r\n","\r\n            Override Equals so that identical\r\n            fields imply equal objects.\r\n            ":"覆盖等于\r\n            字段意味着平等的对象。\r\n            \r\n","\r\n            Setter ideally would be \"protected and internal\"\r\n            There are some tricks here in order to save the space of a field: there are a lot of these objects.\r\n            ":"\r\n            理想情况下将是“受保护和内部”\r\n            这里有一些技巧来节省字段的空间：这些对象有很多。\r\n            \r\n","The target which should be considered the parent of these targets.":"应视为这些目标的父母的目标。\r\n"," object containing information about the build event.":" 包含有关构建事件的信息的对象。\r\n","\r\n            Whether the property is a reserved property,\r\n            like 'MSBuildProjectFile'.\r\n            ":"\r\n            该财产是否是保留财产，\r\n            像“ msbuildprojectfile”。\r\n            \r\n","\r\n            The build event context of the parent\r\n            ":"\r\n            父母的构建事件上下文\r\n            \r\n","The instance-type of packet being expected":"预期数据包的实例类型\r\n","\r\n            An implementation of IComparer useful for comparing the ItemSpecs\r\n            on ITaskItem's\r\n            ":"\r\n            IComparer的实现可用于比较itemspecs\r\n            在itaskItem上\r\n            \r\n","The component host for this object":"此对象的组件主机\r\n","The result code for the target.":"目标代码。\r\n","\r\n            Assumes that metadataDictionary contains escaped values\r\n            ":"\r\n            假设元地数包含逃逸的值\r\n            \r\n","\r\n            Location of metadataMatchingSchema, if any.\r\n            ":"\r\n            Metadatamatchingschema的位置（如果有）。\r\n            \r\n","Root folder for the SDK must contain a Designtime folder":"SDK的根文件夹必须包含一个DesignTime文件夹\r\n","\r\n            Retrieves the IBuildEngine3 version of the build engine interface provided by the host.\r\n            ":"\r\n            检索主机提供的构建引擎界面的IbuildEngine3版本。\r\n            \r\n","The name to be cleansed":"要清洁的名字\r\n","\r\n            Given a list of expressions that may contain item list expressions,\r\n            returns a pair of tables of all item names found, as K=Name, V=String.Empty;\r\n            and all metadata not in transforms, as K=Metadata key, V=MetadataReference,\r\n            where metadata key is like \"itemname.metadataname\" or \"metadataname\".\r\n            PERF: Tables are null if there are no entries, because this is quite a common case.\r\n            ":"\r\n            给定表达式列表，该列表可能包含项目列表表达式，\r\n            返回找到所有项目名称的一对表，为k = name，v = string.empty;\r\n            并且所有元数据都不在变换中，因为k = metadata键，v = metadatareference，\r\n            其中元数据键就像“ itemName.metadataname”或“ metadataname”。\r\n            perf：如果没有条目，则表为无效，因为这是一个常见的情况。\r\n            \r\n","\r\n            Component factory.\r\n            ":"\r\n            组件工厂。\r\n            \r\n","\r\n            The custom sub-type of the event.\r\n            ":"\r\n            活动的自定义子类型。\r\n            \r\n","\r\n            If we are treating a missing toolset as the current ToolsVersion\r\n            ":"\r\n            如果我们将缺失的工具集视为当前工具。\r\n            \r\n","\r\n            name of the element\r\n            ":"\r\n            元素的名称\r\n            \r\n","\r\n            Constructor for deserialization.\r\n            ":"\r\n            构造函数进行审理。\r\n            \r\n","\r\n            Hook up last minute dumping of any exceptions bringing down the process\r\n            ":"\r\n            连接最后一分钟的任何例外情况\r\n            \r\n","\r\n            Arguments for error events\r\n            ":"\r\n            错误事件的论点\r\n            \r\n","\r\n            Holds the stderr output from the tool.\r\n            ":"\r\n            持有工具中的stderr输出。\r\n            \r\n","\r\n            Creates a map containing all the evaluated category names and the list of\r\n            properties belonging to that category.\r\n            ":"\r\n            创建包含所有评估类别名称的地图和\r\n            属于该类别的属性。\r\n            \r\n","\r\n            Internal project evaluation implementation.\r\n            ":"\r\n            内部项目评估实施。\r\n            \r\n","\r\n            Generate the path to the program files reference assembly location by taking in the program files special folder and then\r\n            using that path to generate the path to the reference assemblies location.\r\n            ":"通过获取程序文件特殊文件夹，生成程序文件参考组件位置的路径，然后\r\n            使用该路径生成通往参考组件位置的路径。\r\n            \r\n","\r\n            The aggregate build result from running the targets\r\n            ":"\r\n            运行目标的总体构建产生\r\n            \r\n","The project collection.":"项目集合。\r\n","\r\n            Simple name for the MSBuild tasks (v12), used for shimming in loading\r\n            task factory UsingTasks\r\n            ":"\r\n            MSBUILD任务的简单名称（V12），用于加载\r\n            任务工厂使用任务\r\n            \r\n","A logger will wrap other exceptions (except ExceptionHandling.IsCriticalException exceptions) in a InternalLoggerException if it crashes during shutdown":"如果记录器将其他异常（除外异常。\r\n","Warning event arguments":"警告事件论点\r\n","\r\n            Given a split file spec consisting of a directory without wildcard characters,\r\n            a sub-directory containing wildcard characters,\r\n            and a filename which may contain wildcard characters,\r\n            create a regular expression that will match that file spec.\r\n            \r\n            PERF WARNING: this method is called in performance-critical\r\n            scenarios, so keep it fast and cheap\r\n            ":"\r\n            给定一个由没有通配符字符的目录组成的拆分文件规格，\r\n            一个包含通配符字符的子目录，\r\n            以及可能包含通配符字符的文件名，\r\n            创建一个将匹配该文件规格的正则表达式。\r\n            \r\n            完美警告：此方法在绩效至关重要中被调用\r\n            场景，请保持快速和便宜\r\n            \r\n","\r\n            The configuration IDs the node knows about.  These are not necessarily the ones\r\n            currently assigned to the node, as that can change.\r\n            ":"\r\n            节点知道的配置ID。这些不一定是\r\n            当前分配给节点，因为可以更改。\r\n            \r\n","\r\n            Gets or sets the DependsOnTargets value.\r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"\r\n            获取或设置RewationSontargets值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n","\r\n            Called by the RequestBuilder (implicitly through an event).  Non-overlapping with other RequestBuilders.":"\r\n            由请求构造器调用（隐含通过事件）。与其他RequestBuilders的不重叠。\r\n","\r\n            Handles a configuration request coming from a node.\r\n            ":"\r\n            处理来自节点的配置请求。\r\n            \r\n","\r\n            Flag indicating whether we are currently executing this target.  Used for assertions.\r\n            ":"\r\n            标志指示我们当前是否正在执行此目标。用于断言。\r\n            \r\n","\r\n            The project file which issued this event.\r\n            ":"\r\n            发布此事件的项目文件。\r\n            \r\n","Returns approximate reciprocal of the divisor: ceil(2**64 / divisor).":"分隔线的返回大约倒数：ceil（2 ** 64 / divisor）。\r\n","\r\n            Called when the request builder needs to request resources.\r\n            ":"\r\n            当请求构建器需要请求资源时打电话。\r\n            \r\n","\r\n            Gets the file (if any) associated with this exception.\r\n            This may be an imported file.\r\n            ":"\r\n            获取与此异常关联的文件（如果有）。\r\n            这可能是导入的文件。\r\n            \r\n","\r\n            Type of SDK\r\n            ":"\r\n            SDK的类型\r\n            \r\n","\r\n            If a property is expanded but evaluates to null then it is considered to be un-initialized.\r\n            We want to keep track of these properties so that we can warn if the property gets set later on.\r\n            ":"\r\n            如果属性扩展但对零进行了评估，则认为它被认为是非判例化的。\r\n            我们想跟踪这些属性，以便我们可以警告如果属性以后设置。\r\n            \r\n","\r\n            Reference to the manifest object\r\n            Makes sure manifest is instantiated only once\r\n            ":"\r\n            引用清单对象\r\n            确保清单仅实例化一次\r\n            \r\n","Message string.":"消息字符串。\r\n"," to use when executing the task.":" 执行任务时使用。\r\n","\r\n            ID used to indicate that the results for a particular configuration may at one point\r\n            have resided on this node, but currently do not and will need to be transferred back\r\n            in order to be used.\r\n            ":"\r\n            用来指示特定配置的结果可能在某一时刻\r\n            已经居住在此节点上，但目前不在，需要转回\r\n            为了使用。\r\n            \r\n","The ID of the build submission.  A value of \"0\" means that an error was logged outside of any build submission.":"构建提交的ID。 “ 0”的值表示在任何构建提交中登录错误。\r\n","\r\n            The most verbose and informative verbosity\r\n            ":"最冗长，最有用的冗长\r\n            \r\n","String that was parsed.":"解析的字符串。\r\n","\r\n            The encoding of the project that was (if applicable) loaded off disk, and that will be used to save the project.\r\n            ":"\r\n            （如果适用）加载磁盘的项目的编码，将用于保存项目。\r\n            \r\n","\r\n            Retrieves the line number of the task node within the project file that called it.\r\n            ":"\r\n            检索调用它的项目文件中任务节点的行号。\r\n            \r\n","An array of hashtables of additional global properties to apply\r\n                to the child project (array entries can be null). \r\n                The key and value in the hashtable should both be strings.":"一系列其他全球属性的伸展人要应用\r\n                到子项目（数组条目可以为null）。\r\n                标签中的钥匙和价值都应该是字符串。\r\n","\r\n            MSBuildExtensionsPathReferenceKind instance for property named \"MSBuildExtensionsPath\"\r\n            ":"\r\n            MSBUILDEXTENSIONSPATHREFERYKIND的属性实例，名为“ msbuildextensionspath”\r\n            \r\n","\r\n            Called during project build time to create a property.  Reserved properties will cause\r\n            an invalid project file exception.\r\n            ":"在项目建设时间期间调用以创建属性。保留属性将导致\r\n            无效的项目文件例外。\r\n            \r\n","\r\n            Display the timings for each counter in the dictionary.\r\n            ":"\r\n            在字典中显示每个计数器的时间安排。\r\n            \r\n","\r\n            Yields the node.\r\n            ":"\r\n            产生节点。\r\n            \r\n","\r\n             If @(CPPFiles) is a vector for the files a.cpp and b.cpp, and @(IDLFiles) is a vector for the files a.idl and b.idl:\r\n            \r\n                 \"@(CPPFiles)\"                               converts to     { a.cpp, b.cpp }\r\n            \r\n                 \"@(CPPFiles); c.cpp; @(IDLFiles); c.idl\"    converts to     { a.cpp, b.cpp, c.cpp, a.idl, b.idl, c.idl }\r\n            \r\n                 \"@(CPPFiles,';')\"                           converts to     <error>\r\n            \r\n                 \"xxx@(CPPFiles)xxx\"                         converts to     <error>\r\n             ":"\r\n             如果 @（cppfiles）是文件A.CPP和B.CPP的向量，而 @（IDLFILES）是文件A.IDL和B.IDL的矢量：\r\n            \r\n                 “@（cppfiles）”转换为{a.cpp，b.cpp}\r\n            \r\n                 “ @（cppfiles）; c.cpp; @（idlfiles）; c.idl“转换为{a.cpp，b.cpp，c.cpp，a.idl，b.idl，c.idl}\r\n            \r\n                 “@（cppfiles，';'）”转换为<rorry>\r\n            \r\n                 “ xxx@（cppfiles）xxx”转换为<错误>\r\n             \r\n","\r\n            When merging metadata, we can deal with a conflict two different ways:\r\n            FirstWins = any previous metadata with the name takes precedence\r\n            SecondWins = the new metadata with the name takes precedence\r\n            ":"\r\n            合并元数据时，我们可以两种不同的方式处理冲突：\r\n            FirstWins =任何具有名称的先前元数据优先\r\n            secondwins =带有名称的新元数据优先\r\n            \r\n","\r\n            Enter a state \r\n            ":"\r\n            输入状态\r\n            \r\n","\r\n            The assembly task factory is used to wrap and construct tasks which are from .net assemblies.\r\n            ":"\r\n            组装任务工厂用于包装和构建来自.NET组件的任务。\r\n            \r\n","\r\n            Retrieves the set of targets currently building, mapped to the request id building them.\r\n            ":"\r\n            检索当前构建的一组目标，并映射到请求ID构建它们。\r\n            \r\n","\r\n            Used to deserialize the content type information \r\n            ":"\r\n            用来对内容类型信息进行挑选\r\n            \r\n","\r\n            Task Parameter: Override the importance at which standard error messages will be logged \r\n            ":"\r\n            任务参数：覆盖记录标准错误消息的重要性\r\n            \r\n","\r\n            Given a target platform identifier and version and locations in which to search, find the TargetPlatformSDK \r\n            object that matches.  \r\n            ":"\r\n            给定一个目标平台标识符，版本和可以在其中搜索的位置，找到targetPlatformsdk\r\n            匹配的对象。\r\n            \r\n","\r\n            Creates an expander passing it some properties to use.\r\n            Properties may be null.\r\n            ":"\r\n            创建一个传播器，传递一些属性。\r\n            属性可能为空。\r\n            \r\n","\r\n            Find the unique name for this project, e.g. SolutionFolder\\SubSolutionFolder\\Project_Name\r\n            ":"\r\n            找到该项目的唯一名称，例如solutionFolder \\ substolutionFolder \\ project_name\r\n            \r\n","\r\n            The task type retrieved from the assembly.\r\n            ":"\r\n            从组件中检索的任务类型。\r\n            \r\n","\r\n            An item without an item type. Cast to an ITaskItem, this is \r\n            what is given to tasks. It is also used for target outputs.\r\n            ":"\r\n            没有项目类型的项目。铸造到itaskItem，这是\r\n            任务给出了什么。它也用于目标输出。\r\n            \r\n"," object used to redirect build events.\r\n            ":" 用于重定向构建事件的对象。\r\n            \r\n","The id of the submission.":"提交的ID。\r\n","Directly index into the underlying segmented dictionary":"直接索引基础分段词典\r\n","The full path of the directory containing the file if it is found, otherwise an empty string. ":"如果找到包含文件的目录的完整路径，否则为空字符串。 \r\n","\r\n            Common code for the AddItem methods.\r\n            ":"\r\n            ADDITEM方法的常见代码。\r\n            \r\n","\r\n            The collection of forwarding logger descriptions.\r\n            ":"\r\n            转发记录器描述的集合。\r\n            \r\n","\r\n            Identify the .NET host of the current process.\r\n            ":"\r\n            确定当前过程的.NET主机。\r\n            \r\n","\r\n            This should only be used in cases where property evaluation isn't critcal, such as when attempting to log a\r\n            message with a best effort expansion of a string, or when discovering partial information during lazy evaluation.\r\n            ":"\r\n            仅在财产评估不是Critcal的情况下，例如尝试记录A时\r\n            在懒惰评估期间发现弦的最佳努力，或在发现部分信息时。\r\n            \r\n","\r\n            Adds a set of warning codes to treat as low importance messages for the specified project instance ID.\r\n            ":"添加一组警告代码，以视为指定项目实例ID的重要性消息。\r\n            \r\n","\r\n            If the item originated in an imported file, returns true.\r\n            Otherwise returns false.\r\n            ":"\r\n            如果该项目起源于导入的文件，请返回true。\r\n            否则返回false。\r\n            \r\n","\r\n            Supported Architectures metadata name and manifest attribute\r\n            ":"\r\n            支持的体系结构元数据名称和清单属性\r\n            \r\n","\r\n            Code associated with event.\r\n            ":"\r\n            与事件关联的代码。\r\n            \r\n","\r\n             bytes apart.":"\r\n             字节分开。\r\n","\r\n            Accumulates the result of profiling each project. Computing the aggregated result is deferred till the end of the build\r\n            to interfere as less as possible with evaluation times\r\n            ":"\r\n            累积分析每个项目的结果。计算汇总结果被推迟到构建结束\r\n            在评估时间尽可能少地干扰\r\n            \r\n","\r\n            Gets the number of pieces of metadata on the item. Includes\r\n            both custom and built-in metadata.\r\n            ":"\r\n            在该物品上获取元数据块的数量。包括\r\n            定制和内置元数据。\r\n            \r\n","\r\n            Choose does not accept a condition.\r\n            ":"\r\n            选择不接受条件。\r\n            \r\n","\r\n            Cache as many results as we can.\r\n            ":"\r\n            缓存尽可能多的结果。\r\n            \r\n","\r\n            Deep clone\r\n            ":"\r\n            深克隆\r\n            \r\n","Any exception which was raised that caused the endpoint to shut down.":"引起的任何例外导致端点关闭。\r\n","\r\n            Runs the Node.  Returns the reason the node shut down.\r\n            ":"\r\n            运行节点。返回节点关闭的原因。\r\n            \r\n","\r\n            Properties or other mutable state associated with a ":"\r\n            与A相关的属性或其他可变状态\r\n","\r\n            Cleanse the project name, by replacing characters like '@', '$' with '_'\r\n            ":"\r\n            通过更换诸如'@'，'$'''_'之类的字符来清洁项目名称\r\n            \r\n"," (default) to \r\n            save as a child XML Element, or ":" （默认）到\r\n            保存为儿童XML元素，或\r\n","PrependChild()":"pedendchild（）\r\n","\r\n            Offset in the file.\r\n            ":"\r\n            在文件中偏移。\r\n            \r\n","\r\n            Raises an event which is raised when a project root element is added to the cache.\r\n            ":"\r\n            提出一个事件，该事件是将项目根元素添加到缓存中时会提出的。\r\n            \r\n","\r\n            If dwFlags specifies STARTF_USESTDHANDLES, this member is the standard input handle for the process. Otherwise, this member is ignored and the default for standard input is the keyboard buffer.\r\n            ":"\r\n            如果DWFlags指定startf_usestdhandhandles，则该成员是该过程的标准输入句柄。否则，将忽略此成员，并且标准输入的默认值为键盘缓冲区。\r\n            \r\n","\r\n             instead of expanding the item element. \r\n             ":"\r\n             而不是扩展项目元素。\r\n             \r\n","\r\n            Logger that forwards events to a central logger (e.g ConsoleLogger)\r\n            residing on the parent node.\r\n            ":"\r\n            将事件转发到中央记录器（例如ConsoleLogger）的记录器\r\n            位于父节点上。\r\n            \r\n","\r\n            Returns the number of available nodes.\r\n            ":"\r\n            返回可用节点的数量。\r\n            \r\n","\r\n            Add a PropertyGroup to the project for a particular Asp.Net configuration.  This PropertyGroup\r\n            will have the correct values for all the Asp.Net properties for this project and this configuration.\r\n            ":"\r\n            将属性组添加到特定ASP.NET配置的项目中。此属性组\r\n            对于此项目和该配置的所有ASP.NET属性，将具有正确的值。\r\n            \r\n","\r\n            The cache in which this project root element is stored.\r\n            ":"\r\n            存储此项目根元素的缓存。\r\n            \r\n","m0":"M0\r\n","\r\n            The work unit succeeded.\r\n            ":"\r\n            工作单位成功了。\r\n            \r\n","\r\n            Initializes a new instance of the MetaprojectGeneratedEventArgs class.\r\n            ":"\r\n            初始化MetaprojectgeneratedEventargs类的新实例。\r\n            \r\n","\r\n            The virtual node, used when a request is initially given to the scheduler.\r\n            ":"\r\n            虚拟节点，最初给出调度程序的请求时使用的虚拟节点。\r\n            \r\n","\r\n            A list of warnings to treat as errors.  To treat all warnings as errors, set this to an empty ":"\r\n            警告列表，以将其视为错误。要将所有警告视为错误，请将其设置为空\r\n","\r\n            This field is optional and is culture sensitive.\r\n            ":"\r\n            该领域是可选的，对培养很敏感。\r\n            \r\n","An item bucket that is invalid for everything except comparisons.":"除了比较之外，对所有内容都无效的项目桶。\r\n","\r\n            Project file associated with event.\r\n            ":"\r\n            与事件关联的项目文件。\r\n            \r\n","\r\n            The thread calling BuildGraph() will act as an implicit worker\r\n            ":"\r\n            线程调用buildgraph（）将充当隐式工人\r\n            \r\n","\r\n            Unordered collection of evaluated metadata on the item.\r\n            If there is no metadata, returns an empty collection.\r\n            Does not include built-in metadata.\r\n            Includes any from item definitions.\r\n            This is a read-only collection. To modify the metadata, use ":"该项目上评估的元数据的无序集合。\r\n            如果没有元数据，请返回一个空的收藏。\r\n            不包括内置元数据。\r\n            包括项目定义中的任何。\r\n            这是一个只读的集合。要修改元数据，请使用\r\n","The target platform version.":"目标平台版本。\r\n","\r\n            Gathers the specified extension SDK references for the given target SDK\r\n            ":"\r\n            收集给定目标SDK的指定扩展SDK参考\r\n            \r\n","\r\n            A description of the location where the property was defined,\r\n            such as a registry key path or a path to a config file and \r\n            line number.\r\n            ":"\r\n            对属性定义的位置的描述，\r\n            例如注册表密钥路径或配置文件的路径和\r\n            电话号码。\r\n            \r\n","\r\n            The time this request was created.\r\n            ":"\r\n            创建此请求的时间。\r\n            \r\n","\r\n            Sets or retrieves the list of targets which run after the keyed target.\r\n            ":"\r\n            设置或检索按键目标下运行的目标列表。\r\n            \r\n","\r\n            Waits for the current request until it's canceled.\r\n            ":"\r\n            等待当前请求，直到被取消为止。\r\n            \r\n","\r\n            Add a string to the table, passed in as\r\n            an extent in a char array.\r\n            ":"\r\n            在表中添加一个字符串，将其传递给\r\n            char阵列中的一个程度。\r\n            \r\n","\r\n            Status of attempting to enumerate a directory.\r\n            ":"\r\n            试图枚举目录的状态。\r\n            \r\n","\r\n            Properties,\r\n            ":"\r\n            特性，\r\n            \r\n","\r\n            Item definition metadata encountered during evaluation. These are read during the second evaluation pass.\r\n            Unlike those returned by the ItemDefinitions property, these are ordered, and include any metadata that\r\n            were subsequently overridden by others with the same name and item type. It does not include any \r\n            elements whose conditions did not evaluate to true.\r\n            It does not include any item definition metadata added since the last evaluation.\r\n            ":"评估期间遇到的项目定义元数据。这些是在第二次评估通行证中读取的。\r\n            与ItemDefinitions属性返回的那些不同，这些是订购的，并包括任何元数据\r\n            随后被其他名称和项目类型的其他人覆盖。它不包括任何\r\n            条件未评估为真的元素。\r\n            它不包括自上次评估以来添加的任何项目定义元数据。\r\n            \r\n","\r\n            Sets the item type via the item xml.\r\n            Used by the evaluator only.\r\n            ":"\r\n            通过项目XML设置项目类型。\r\n            仅由评估者使用。\r\n            \r\n","\r\n            Constructor of the class\r\n            ":"\r\n            班级的构造者\r\n            \r\n"," instance to use when resolving SDKs.":" 解决SDK时要使用的实例。\r\n","\r\n            Class used to read toolset configurations.\r\n            ":"\r\n            用于读取工具集配置的类。\r\n            \r\n","\r\n            Represents which state the target entry is currently in.\r\n            ":"\r\n            表示目标条目当前处于哪个状态。\r\n            \r\n","\r\n            Semantics are those of XmlNode.InsertAfterChild.\r\n            ":"\r\n            语义是xmlnode.insertafterchild的语义。\r\n            \r\n","Subcategory resource Name. Can be null.":"子类别资源名称。可以是零的。\r\n","\r\n            Implementation of IKeyed exposing the item type, so these\r\n            can be put in a dictionary conveniently.\r\n            ":"\r\n            实施IKEYED公开项目类型，因此\r\n            可以方便地放入字典中。\r\n            \r\n","Error code":"错误代码\r\n","\r\n            Gets the configuration id.\r\n            ":"\r\n            获取配置ID。\r\n            \r\n","\r\n            Expand only bare metadata and then properties\r\n            ":"\r\n            仅扩展裸元数据，然后扩展属性\r\n            \r\n","\r\n            By default our logMode is Asynchronous. We do this\r\n            because we are hoping it will make the system\r\n            more responsive when there are a large number of logging messages\r\n            ":"\r\n            默认情况下，我们的logMode是异步的。我们这样做\r\n            因为我们希望它能成为系统\r\n            当有大量的记录消息时，更响应\r\n            \r\n","\r\n            Construct over an existing project file, evaluating with specified\r\n            global properties and toolset, either or both of which may be null.\r\n            Project is added to the global project collection.\r\n            Throws InvalidProjectFileException if the evaluation fails.\r\n            Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.\r\n            May throw IO-related exceptions.\r\n            ":"\r\n            通过现有项目文件构建，用指定的\r\n            全局属性和工具集，或两者都可能为null。\r\n            项目被添加到全球项目集合中。\r\n            如果评估失败，则投掷无效的fileException。\r\n            如果项目集合中已经加载了等效的项目，则投掷无效的exception。\r\n            可能会抛出与IO相关的例外。\r\n            \r\n","\r\n            Location of the \"MSBuildRuntime\" attribute on this element, if any.\r\n            If there is no such attribute, returns null;\r\n            ":"\r\n            此元素上的“ msbuildruntime”属性的位置（如果有）。\r\n            如果没有这样的属性，请返回null；\r\n            \r\n","\r\n            Returns true if \"s\" is a namespace that is reserved by Xml 1.0 or Namespace 1.0.\r\n            ":"\r\n            如果“ S”是由XML 1.0或名称空间1.0保留的名称空间，则返回true。\r\n            \r\n","\r\n            Handler to receive which project got added to the project collection.\r\n            ":"\r\n            接收到该项目的处理程序已添加到项目集合中。\r\n            \r\n"," of the target framework.":" 的目标框架。\r\n","\r\n            Creates a property.\r\n            ":"\r\n            创建一个属性。\r\n            \r\n","\r\n            The value specified here overrides the value specified for the parent ":"\r\n            此处指定的值覆盖了父母指定的值\r\n","\r\n            \r\n            Will produce 5 buckets: \r\n            \r\n            a={a1;a2.m0} b={.}\r\n            a={a3.m1} b={.}\r\n            a={.} b={b1.n0}\r\n            a={.} b={b2;b3.n1}\r\n            a={.} b={b4.}\r\n            \r\n            ":"\r\n            \r\n            将产生5桶：\r\n            \r\n            a = {a1; a2.m0} b = {。}\r\n            a = {a3.m1} b = {。}\r\n            a = {。} b = {b1.n0}\r\n            a = {。} b = {b2; b3.n1}\r\n            a = {。} b = {b4。}\r\n            \r\n            \r\n","\r\n            Creates a node on an available NodeProvider, if any..\r\n            ":"\r\n            在可用的nodeprovider上创建一个节点，如果有的话。\r\n            \r\n"," if the given message importance is not guaranteed to be ignored by registered loggers.\r\n            ":" 如果给定的消息重要性不能保证被注册的登录器忽略。\r\n            \r\n","\r\n            Save the project to the file system, if dirty.\r\n            Uses the Encoding returned by the Encoding property.\r\n            Creates any necessary directories.\r\n            May throw IO-related exceptions.\r\n            Clears the dirty flag.\r\n            ":"\r\n            如果肮脏，将项目保存到文件系统中。\r\n            使用编码属性返回的编码。\r\n            创建任何必要的目录。\r\n            可能会抛出与IO相关的例外。\r\n            清除肮脏的旗帜。\r\n            \r\n","\r\n            Web Deployment (.wdproj) projects\r\n            ":"\r\n            Web部署（.WDPROJ）项目\r\n            \r\n","true if starts with drive pattern, false otherwise.":"如果以驱动模式开头，则为true，否则为false。\r\n","\r\n            Given an object wrapping a scalar value that will be set on a task,\r\n            returns a suitable string to log its value, with a trailing newline.\r\n            First line is already indented.\r\n            Indent of any subsequent line should be 12 spaces.\r\n            ":"\r\n            给定一个对象包装标量值将设置在任务上，\r\n            返回合适的字符串以记录其值，并带有尾随的新线。\r\n            第一行已被缩进。\r\n            任何后续行的缩进应为12个空间。\r\n            \r\n","\r\n            The logging service used for evaluation errors.\r\n            ":"\r\n            用于评估错误的记录服务。\r\n            \r\n","A link pointing to more information about the warning (can be null).":"指出有关警告的更多信息的链接（可以为null）。\r\n","The name of the uninitialized property read.":"非初始化属性的名称已读取。\r\n","The right hand operand.":"右手操作数。\r\n","\r\n            The value this field is set to, must be understood by the consumer of this field\r\n            (normally a UI renderer).\r\n            ":"\r\n            该字段设置为该字段的值，必须由该领域的消费者理解\r\n            （通常是UI渲染器）。\r\n            \r\n"," is a null reference.\r\n            ":" 是一个零引用。\r\n            \r\n","\r\n            target name\r\n            ":"\r\n            目标名称\r\n            \r\n","\r\n            Immutable class to describe the name and type for an early bound local\r\n            ":"\r\n            不可变的班级来描述早期本地的名称和类型\r\n            \r\n","Should the events be processed synchronously or asynchronously":"是否同步或异步处理事件\r\n","\r\n            Construct a stack frame for the given state with the given locals (both early and late bound).\r\n            ":"\r\n            用给定的当地人（早期和晚期）为给定状态构建一个堆栈框架。\r\n            \r\n","\r\n            Items in this project, ordered within groups of item types,\r\n            including items whose conditions evaluated to false, or that were\r\n            contained within item groups who themselves had conditioned evaluated to false.\r\n            This is useful for hosts that wish to display all items, even if they might not be part \r\n            of the build in the current configuration.\r\n            ":"\r\n            该项目中的项目，在项目类型组中订购，\r\n            包括评估为false的条件或\r\n            包含在自己的条件下评估为虚假的项目组中。\r\n            这对于希望显示所有项目的主机很有用，即使它们可能不是一部分\r\n            当前配置中的构建。\r\n            \r\n","\r\n            Value after any item and property expressions are expanded\r\n            ":"\r\n            在扩展任何项目和属性表达式之后的价值\r\n            \r\n","\r\n                Resolves the specified SDK reference.\r\n            ":"\r\n                解析指定的SDK参考。\r\n            \r\n","\r\n            When this flag is present and the project has previously been built on a node whose affinity is\r\n            incompatible with the affinity this request requires, we will ignore the project state (but not\r\n            target results) that were previously generated.\r\n            ":"\r\n            当存在此标志并且该项目以前已建立在一个亲和力的节点上\r\n            与本请求要求的亲和力不兼容，我们将忽略项目状态（但不是\r\n            目标结果）先前生成的。\r\n            \r\n","\r\n            A struct representing the uniquely-identifying portion of a BuildRequestConfiguration.  Used for lookups.\r\n            ":"\r\n            代表BuildRequestConfiguration的独特识别部分的结构。用于查找。\r\n            \r\n","\r\n            Given a composite output rooting marker, gathers up all the sources it depends on.\r\n            ":"\r\n            给定复合输出加根标记，收集其取决于的所有来源。\r\n            \r\n","The segment size is calculated according to ":"该段的大小是根据\r\n","\r\n            Translates a TimeSpan.\r\n            ":"\r\n            翻译一个时间潘。\r\n            \r\n","\r\n            Set or add a property with the specified name and value.\r\n            Overwrites the value of any property with the same name already in the collection if it did not originate in an imported file.\r\n            If there is no such existing property, uses this heuristic:\r\n            Updates the last existing property with the specified name that has no condition on itself or its property group, if any,\r\n            and is in this project file rather than an imported file.\r\n            Otherwise, adds a new property in the first property group without a condition, creating a property group if necessary after\r\n            the last existing property group, else at the start of the project.\r\n            Returns the property set.\r\n            Evaluates on a best-effort basis:\r\n                -expands with all properties. Properties that are defined in the XML below the new property may be used, even though in a real evaluation they would not be.\r\n                -only this property is evaluated. Anything else that would depend on its value is not affected.\r\n            This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.\r\n            ":"\r\n            设置或添加带有指定名称和值的属性。\r\n            如果该属性没有源于导入的文件，则覆盖任何具有相同名称的属性的值。\r\n            如果没有这种现有财产，请使用这种启发式：\r\n            更新最后的现有属性，该属性具有指定名称，该名称本身或其属性组（如果有）\r\n            并且是在此项目文件中而不是导入的文件中。\r\n            否则，在第一个属性组中添加一个新属性，没有条件，请在必要时创建一个属性组\r\n            最后一个现有的属性组，在项目开始时。\r\n            返回属性集。\r\n            以最佳胜地进行评估：\r\n                 - 具有所有属性的扩展。在新属性下方XML中定义的属性也可以使用，即使在实际评估中不会。\r\n                 - 仅评估此属性。任何取决于其价值的事物都不会受到影响。\r\n            这是一种方便，可以理解，在重新评估之前，它不一定会使项目处于完全一致的状态。\r\n            \r\n","\r\n            The task factory wrapped by the wrapper\r\n            ":"\r\n            包装纸包裹的任务工厂\r\n            \r\n","\r\n            The parameters with which the build was started.\r\n            ":"\r\n            启动构建的参数。\r\n            \r\n","\r\n            doesn't contain this category.\r\n            ":"\r\n            不包含此类别。\r\n            \r\n","\r\n            Handler for ProjectStarted events.\r\n            ":"\r\n            项目开始的处理程序。\r\n            \r\n","The min version of the targeted platform":"目标平台的最小版本\r\n","\r\n            Gets the length of the target string.\r\n            ":"\r\n            获取目标字符串的长度。\r\n            \r\n","\r\n            This can be used by the host to figure out what projects might be impacted by a change to a particular file.\r\n            It could also be used, for example, to find the .user file, and use its ProjectRootElement to modify properties in it.\r\n            ":"\r\n            主机可以使用这来弄清哪些项目可能会受到对特定文件的更改的影响。\r\n            也可以使用它来查找.user文件，并使用其项目Rootelement修改其中的属性。\r\n            \r\n"," task and pass in Projects=$(MSBuildProjectFile).\r\n            ":" 任务并传递项目= $（msbuildprojectFile）。\r\n            \r\n","\r\n            The possible values for a task's ContinueOnError attribute.\r\n            ":"\r\n            任务的retinaneRorr属性的可能值。\r\n            \r\n","The project logging context.":"项目记录上下文。\r\n","\r\n            Handler for LoggingService thread exceptions.\r\n            ":"\r\n            loggingservice线程异常的处理程序。\r\n            \r\n","\r\n            Gets the error code associated with this exception's message (not the inner exception).\r\n            ":"\r\n            获取与此异常消息关联的错误代码（不是内部异常）。\r\n            \r\n","\r\n            Retrieve the contents of this project from the translator.\r\n            ":"\r\n            从翻译器中检索该项目的内容。\r\n            \r\n","\r\n            The slightly convoluted use of the async stderr/stdout streams of the\r\n            Process class is necessary because we want to log all our messages from\r\n            the main thread, instead of from a worker or callback thread.\r\n            ":"\r\n            略微复杂的使用异步stderr/stdout流的使用\r\n            过程类是必要的，因为我们想从\r\n            主线程，而不是来自工人或回调线程。\r\n            \r\n","\r\n            This method computes the sources that need to be compiled based on the output files and the\r\n            full dependency graph of inputs\r\n            ":"\r\n            此方法计算需要根据输出文件和\r\n            输入的完整依赖图\r\n            \r\n","\r\n            Returns the set of build requests which should be issued to the scheduler.\r\n            ":"\r\n            返回应发出调度程序的构建请求集。\r\n            \r\n","\r\n            This cannot be set, as it is used as the key into \r\n            the project's properties table.\r\n            ":"\r\n            无法设置此设置，因为它被用作键\r\n            项目的属性表。\r\n            \r\n","\r\n            The registered object will be disposed when the build ends.\r\n            ":"\r\n            构建结束时，注册对象将被处置。\r\n            \r\n","\r\n                If a null reference is returned from ":"\r\n                如果返回零引用\r\n","\r\n             A ProjectItemElement could have resulted in several items if it contains wildcards or item or property expressions.\r\n             Before any edit to a ProjectItem (remove, rename, set metadata, or remove metadata) this must be called to make\r\n             sure that the edit does not affect any other ProjectItems originating in the same ProjectItemElement.\r\n            \r\n             For example, an item xml with an include of \"@(x)\" could evaluate to items \"a\", \"b\", and \"c\". If \"b\" is removed, then the original\r\n             item xml must be removed and replaced with three, then the one corresponding to \"b\" can be removed.\r\n            \r\n             This is an unsophisticated approach; the best that can be said is that the result will likely be correct, if not ideal.\r\n             For example, perhaps the user would rather remove the item from the original list \"x\" instead of expanding the list.\r\n             Or, perhaps the user would rather the property in \"$(p)\\a;$(p)\\b\" not be expanded when \"$(p)\\b\" is removed.\r\n             If that's important, the host can manipulate the ProjectItemElement's directly, instead, and it can be as fastidious as it wishes.\r\n             ":"\r\n             如果ProjectItemelement包含通配符或项目或属性表达式，则可能会导致几个项目。\r\n             在对ProjectItem进行任何编辑（删除，重命名，设置元数据或删除元数据）之前，必须调用此操作以进行\r\n             当然，编辑不会影响源自同一ProjectItemelement的任何其他projectItems。\r\n            \r\n             例如，一个具有“@（x）”包含的项目XML可以评估“ A”，“ B”和“ C”项目。如果删除了“ b”，则原始\r\n             必须删除项目XML并替换为三个，然后可以删除与“ B”相对应的一个。\r\n            \r\n             这是一种不老练的方法。最好的说法是，即使不是理想的话，结果可能是正确的。\r\n             例如，也许用户宁愿从原始列表“ x”中删除项目，而不是扩展列表。\r\n             或者，也许用户宁愿在“ $（p）\\ a; $（p）\\ b”中使用该属性时，当删除“ $（p）\\ b”时不会扩展。\r\n             如果这很重要，主机可以直接操纵ProjectItemelement，而它可以随心所欲。\r\n             \r\n","IMPORTANT NOTICE FOR MAINTAINERS AND REVIEWERS:":"维护者和审阅者的重要通知：\r\n","The data to send.":"要发送的数据。\r\n","\r\n            Create various imports snapshots\r\n            ":"\r\n            创建各种导入快照\r\n            \r\n","\r\n            Accumulated task performance information.\r\n            ":"\r\n            累积任务绩效信息。\r\n            \r\n","\r\n            The Error logging event\r\n            ":"\r\n            错误记录事件\r\n            \r\n","The version of the platform, if the parse was successful - Else set to null":"平台的版本，如果解析成功 - 否则设置为空\r\n","\r\n            Starts a build using this project, building the specified target.\r\n            Returns true on success, false on failure.\r\n            Works on a privately cloned instance. To set or get\r\n            virtual items for build purposes, clone an instance explicitly and build that.\r\n            Does not modify the Project object.\r\n            ":"使用此项目启动构建，建立指定目标。\r\n            成功返回，成功，失败。\r\n            在私人克隆实例上工作。设置或获得\r\n            用于构建目的的虚拟项目，明确克隆实例并构建该实例。\r\n            不修改项目对象。\r\n            \r\n"," event if the args parameter is non-null.\r\n            ":" 事件如果args参数为非null。\r\n            \r\n","\r\n            The current block type\r\n            ":"\r\n            当前的块类型\r\n            \r\n","\r\n            Unevaluated keepMetadata value.\r\n            ":"\r\n            未评估的保留值。\r\n            \r\n","\r\n            Edits to this object will indirectly dirty the containing project because they will modify the backing XML.\r\n            ":"\r\n            对该对象进行编辑将间接弄脏包含项目，因为它们将修改备份XML。\r\n            \r\n"," if this factory can instantiate such a task; otherwise, ":" 如果该工厂可以实例化此类任务；否则，\r\n","The list of projects to build":"构建项目列表\r\n","\r\n            This class represents the function as extracted from an expression\r\n            It is also responsible for executing the function.\r\n            ":"\r\n            该类表示从表达式提取的函数\r\n            它还负责执行该功能。\r\n            \r\n","\r\n            The constructor.\r\n            ":"\r\n            构造函数。\r\n            \r\n","\r\n            The binary writer we're currently using. Is pointing at the currentRecordWriter usually,\r\n            but sometimes we repoint it to the originalBinaryWriter temporarily, when writing string\r\n            and name-value records.\r\n            ":"\r\n            我们目前正在使用的二进制作者。通常指向当前的记录作者\r\n            但是有时我们会在编写字符串时暂时将其重点\r\n            和名称值记录。\r\n            \r\n","BuildEventArgs to process":"buildeventargs进行处理\r\n","\r\n            Adds batchable parameters from an item element into the list. If the item element was a task, these\r\n            would be its raw parameter values.\r\n            ":"\r\n            将项目元素从项目元素添加到列表中。如果项目元素是任务，则这些\r\n            将是其原始参数值。\r\n            \r\n","\r\n            Throws InvalidProjectException because we failed to import a project which contained a ProjectImportSearchPath fall-back.\r\n            ":"\r\n            投掷无效的投射Exception，因为我们未能导入包含ProjectImportSearchPath倒下的项目。\r\n            \r\n","\r\n            Update the strong cache.\r\n            If the item is already a member of the list, move it to the top.\r\n            Otherwise, just add it to the top.\r\n            If the list is too large, remove an entry from the bottom.\r\n            ":"\r\n            更新强缓存。\r\n            如果项目已经是列表的成员，请将其移至顶部。\r\n            否则，只需将其添加到顶部即可。\r\n            如果列表太大，请从底部删除条目。\r\n            \r\n","\r\n            Ignore nonexistent targets files when evaluating the project\r\n            ":"\r\n            评估项目时忽略不存在的目标文件\r\n            \r\n","\r\n            Task Parameter: Importance with which to log text from the\r\n            standard error stream.\r\n            ":"\r\n            任务参数：从\r\n            标准错误流。\r\n            \r\n","\r\n            Location of the element.\r\n            ":"\r\n            元素的位置。\r\n            \r\n","The MSBuild architecture.":"MSBUILD架构。\r\n","\r\n            Unevaluated value\r\n            ":"\r\n            未评估的值\r\n            \r\n","\r\n             Finds all the item elements in the logical project with itemspecs that match the given string:\r\n             - elements that would include (or exclude) the string\r\n             - elements that would update the string (not yet implemented)\r\n             - elements that would remove the string (not yet implemented)\r\n             ":"\r\n             使用与给定字符串匹配的ItemSpecs中找到逻辑项目中的所有项目元素：\r\n              - 包括（或排除）字符串的元素\r\n              - 将更新字符串的元素（尚未实现）\r\n              - 将删除字符串的元素（尚未实现）\r\n             \r\n","\r\n            Returns the value of the attribute.\r\n            If the attribute is not present, returns either null or an empty string, depending on the value\r\n            of nullIfNotExists.\r\n            ":"\r\n            返回属性的值。\r\n            如果不存在属性，请返回null或一个空字符串，具体取决于值\r\n            nullifnotexists。\r\n            \r\n","\r\n            Factory method for acquiring.\r\n            ":"\r\n            获取的工厂方法。\r\n            \r\n","\r\n                Constructs a graph starting from the given project files, evaluating with the provided global properties and the\r\n                provided project collection.\r\n            ":"\r\n                从给定的项目文件开始构造图形，并通过提供的全局属性评估\r\n                提供了项目收集。\r\n            \r\n","\r\n            Whether the string potentially has expandable content,\r\n            such as a property expression or escaped character.\r\n            ":"\r\n            字符串是否可能具有可扩展的内容，\r\n            例如财产表达或逃脱的性格。\r\n            \r\n","\r\n            Inconclusive means that the match is indirect, coming from either property or item references.\r\n            ":"\r\n            尚无定论意味着该匹配是间接的，来自属性或项目参考。\r\n            \r\n","The return value of this method will be used as the task return value":"该方法的返回值将用作任务返回值\r\n","\r\n            Apply the Remove operation.\r\n            ":"\r\n            应用删除操作。\r\n            \r\n","\r\n            The node provider for task hosts. \r\n            ":"\r\n            任务主机的节点提供商。\r\n            \r\n","\r\n            Valid tokens\r\n            ":"\r\n            有效令牌\r\n            \r\n","\r\n            Count of loaded projects\r\n            ":"\r\n            加载项目的计数\r\n            \r\n","\r\n            See docs here: https://github.com/dotnet/msbuild/blob/master/documentation/wiki/ChangeWaves.md\r\n            For dev docs: https://github.com/dotnet/msbuild/blob/master/documentation/wiki/ChangeWaves-Dev.md\r\n        ":"\r\n            请参阅此处：https：//github.com/dotnet/msbuild/blob/master/documentation/wiki/changewaves.md\r\n            对于开发文档：https：//github.com/dotnet/msbuild/blob/master/documentation/wiki/changewaves-dev.md\r\n        \r\n","\r\n            Cache the frameworkName of the highest version of a framework given its root path and identifier. \r\n            This is to optimize calls to GetHighestVersionOfTargetFramework\r\n            ":"\r\n            在框架的根路径和标识符给定框架的最高版本的框架名称中。\r\n            这是为了优化对GethighestversionoftargetFramework的呼叫\r\n            \r\n","\r\n            ToolsVersion,\r\n            ":"\r\n            工具库，\r\n            \r\n","The result of running the task.":"运行任务的结果。\r\n"," can belong to.\r\n            ":" 可以属于。\r\n            \r\n","Options for tuning the parallelization of subdirectories":"调整子目录并行的选项\r\n","\r\n            Shuts down all of managed nodes permanently.\r\n            ":"\r\n            永久关闭所有托管节点。\r\n            \r\n","\r\n            Gets the value of the target's \"Outputs\" attribute.\r\n            ":"\r\n            获取目标“输出”属性的值。\r\n            \r\n"," is true, this will return a modification with ":" 是的，这将返回与\r\n","\r\n            The current state of the BuildManager.\r\n            ":"\r\n            建筑商的当前状态。\r\n            \r\n","\r\n            An evaluated design-time property\r\n            ":"\r\n            评估的设计时间属性\r\n            \r\n","\r\n            Logs that the build has finished\r\n            ":"\r\n            构建已完成的日志\r\n            \r\n","\r\n            Reports to the scheduler that a new result has been generated for a build request.\r\n            ":"\r\n            向调度程序报告说，已为构建请求生成了新的结果。\r\n            \r\n","\r\n            If dwFlags specifies STARTF_USESTDHANDLES, this member is the standard error handle for the process. Otherwise, this member is ignored and the default for standard error is the console window's buffer.\r\n            ":"\r\n            如果DWFLAGS指定startf_usestdhandles，则该成员是该过程的标准错误处理。否则，将忽略此成员，并且标准错误的默认值是控制台窗口的缓冲区。\r\n            \r\n","list of properties":"属性列表\r\n","\r\n            constructor\r\n            ":"\r\n            构造函数\r\n            \r\n","AppendChild(child)":"附录（儿童）\r\n","\r\n            returns if the string contains escaped wildcards\r\n            ":"\r\n            返回，如果琴弦包含逃脱的通配符\r\n            \r\n","\r\n            Arguments for the target skipped event.\r\n            ":"\r\n            目标跳过事件的争论。\r\n            \r\n","\r\n            The current disabled wave.\r\n            ":"\r\n            当前的残疾波。\r\n            \r\n","\r\n            Loads a project with the specified reader, using the collection's global properties and tools version.\r\n            The project will be added to this project collection when it is named.\r\n            ":"\r\n            使用该集合的全局属性和工具版本，将项目加载到指定的读取器中。\r\n            该项目命名时将添加到此项目集合中。\r\n            \r\n","\r\n            Native methods used by the backend. This was copied from the oldOM so we can make it stylecop compliant and allow\r\n            easier deletion of the native code in the old OM\r\n            ":"\r\n            后端使用的天然方法。这是从Oldom复制的，因此我们可以使其符合Stylecop的规定并允许\r\n            在旧OM中更容易删除本机代码\r\n            \r\n","\r\n            Queues up the output from either the stderr or stdout stream of the\r\n            process executing the tool, and signals the availability of the data.\r\n            This method is a helper for the ":"\r\n            从stderr或stdout流的输出排队\r\n            处理执行该工具的过程，并向数据的可用性发出信号。\r\n            此方法是\r\n","\r\n            If no sub-toolset is specified, this is the default sub-toolset version.  Null == no default \r\n            sub-toolset, just use the base toolset. \r\n            ":"\r\n            如果未指定子图表，则是默认子图表版本。 null ==无默认\r\n            子模式，只需使用基本工具集即可。\r\n            \r\n","\r\n            The cancellation token.\r\n            ":"\r\n            取消令牌。\r\n            \r\n","\r\n            No specific parameters are used by this logger\r\n            ":"\r\n            此记录器未使用具体参数\r\n            \r\n"," for side effects). \r\n            \r\n            If the new state has invalid XML or MSBuild syntax, then this method throws an ":" 副作用）。\r\n            \r\n            如果新状态具有无效的XML或MSBUILD语法，则此方法将\r\n","\r\n            Computed, not necessarily fast.\r\n            ":"\r\n            计算，不一定快。\r\n            \r\n"," is already compiled into mscorlib.\r\n            ":" 已被编译成Mscorlib。\r\n            \r\n","\r\n            Finds processes named after either msbuild or msbuildtaskhost.\r\n            ":"\r\n            查找以MSBUILD或MSBUILDTASKHOST命名的流程。\r\n            \r\n","\r\n            Enum for controlling project instance creation\r\n            ":"\r\n            用于控制项目实例创建的枚举\r\n            \r\n","The last invalid column number, or zero.":"最后一个无效的列号，或零。\r\n","\r\n            Null if it hasn't been figured out yet; true if (some variation of) Visual Studio 2010 is installed on \r\n            the current machine, false otherwise. \r\n            ":"\r\n            如果尚未弄清楚，则无效； true if（某些变体）Visual Studio 2010已安装\r\n            当前的机器，否则为错误。\r\n            \r\n","\r\n            Project that this item lives in.\r\n            ProjectItems always live in a project.\r\n            ":"\r\n            投影此项目居住。\r\n            ProjectItems总是生活在一个项目中。\r\n            \r\n","\r\n            Removes one of the arbitrary metadata on the item.\r\n            ":"\r\n            删除项目上的任意元数据之一。\r\n            \r\n","\r\n            Initialize a ProjectRootElement instance from an existing document.\r\n            Helper constructor for the ":"\r\n            从现有文档初始化ProjectRootelement实例。\r\n            助手构造函数\r\n","\r\n            The global request id of the request which is being blocked from continuing.\r\n            ":"该请求的全局请求ID被阻止继续。\r\n            \r\n","\r\n            Location of the exclude, if any\r\n            ":"\r\n            排除的位置，如果有的话\r\n            \r\n","\r\n            Changes the foreground color to black if the foreground is the\r\n            same as the background. Changes the foreground to white if the\r\n            background is black.\r\n            ":"\r\n            如果前景是\r\n            与背景相同。如果是\r\n            背景是黑色。\r\n            \r\n","\r\n                Version of MSBuild currently running.\r\n            ":"\r\n                当前正在运行的MSBUILD版本。\r\n            \r\n","\r\n            The current directory for the configuration this result came from\r\n            ":"\r\n            配置的当前目录此结果来自\r\n            \r\n","\r\n            Private IComparer class for sorting performance counters\r\n            in descending order by elapsed time.\r\n            ":"\r\n            用于分类性能计数器的私人ICOMPARER类\r\n            按照经过的时间下降顺序。\r\n            \r\n","\r\n            The body of the task element which will be passed to the task factory.\r\n            ":"\r\n            任务元素的正文将传递给任务工厂。\r\n            \r\n","\r\n            A provider-specific set of options to pass to the provider.\r\n            ":"\r\n            提供给提供商的特定于提供商的选项集。\r\n            \r\n","\r\n            Returns the path to the \"bin\" directory of the .NET Framework SDK.\r\n            ":"\r\n            返回.NET Framework SDK的“ bin”目录的路径。\r\n            \r\n","\r\n            Retrieves the global project collection object.\r\n            This is a singleton project collection with no global properties or loggers that reads toolset\r\n            information from the configuration file and registry.\r\n            May throw InvalidToolsetDefinitionException.\r\n            Thread safe.\r\n            ":"\r\n            检索全球项目收集对象。\r\n            这是一个单人项目集合，没有读取工具集的全局属性或登录器\r\n            来自配置文件和注册表的信息。\r\n            可能会抛出无效的DoolsetDefinitionException。\r\n            线程安全。\r\n            \r\n","\r\n            The current state.\r\n            ":"\r\n            当前状态。\r\n            \r\n","\r\n            The set of flags specified in the BuildRequestData for this request.\r\n            ":"\r\n            此请求中的buildrequestdata中指定的标志集。\r\n            \r\n","\r\n            Location of the removeMetadata attribute\r\n            ":"\r\n            removemetadata属性的位置\r\n            \r\n","\r\n            Semicolon separated list of targets it depends on\r\n            ":"\r\n            半分离的目标列表取决于\r\n            \r\n","\r\n            Returns the absolute path for this project\r\n            ":"\r\n            返回该项目的绝对路径\r\n            \r\n","The formatting parameter to use with ":"与\r\n","\r\n            An object that will stop full tracking when disposed.\r\n            ":"\r\n            处置时会停止完全跟踪的对象。\r\n            \r\n","\r\n            Get any child items.\r\n            This is a live collection.\r\n            ":"\r\n            获取任何儿童物品。\r\n            这是一个现场收藏。\r\n            \r\n","\r\n            What is the Id for the next logger registered with the logging service.\r\n            This Id is unique for this instance of the loggingService.\r\n            ":"在记录服务中注册的下一个记录器的ID是什么？\r\n            对于Loggingservice的这一实例，此ID是唯一的。\r\n            \r\n","\r\n            The default maximum size for the logging event queue.\r\n            ":"\r\n            记录事件队列的默认最大大小。\r\n            \r\n","\r\n            Name of the property.\r\n            ":"\r\n            属性的名称。\r\n            \r\n","\r\n            Evaluates the provided string by expanding items and properties,\r\n            using the current items and properties available.\r\n            This is useful for some hosts, or for the debugger immediate window.\r\n            Does not expand bare metadata expressions.\r\n            ":"\r\n            通过扩展项目和属性来评估提供的字符串，\r\n            使用当前项目和可用的属性。\r\n            这对于某些主机或调试器即时窗口很有用。\r\n            不会扩大裸露的元数据表达。\r\n            \r\n","\r\n            Return to start\r\n            ":"\r\n            返回开始\r\n            \r\n","\r\n            Called by the local project collection to indicate to this project that it is no longer loaded.\r\n            ":"\r\n            由本地项目集合拨打，以指示该项目不再加载。\r\n            \r\n","\r\n            Returns the object used to lock for synchronization of long-running operations.\r\n            ":"\r\n            返回用于锁定长期操作的对象。\r\n            \r\n","\r\n            Reads the accumulated time and path information for each configuration from the plan file.\r\n            ":"\r\n            从计划文件中读取每种配置的累积时间和路径信息。\r\n            \r\n","\r\n            Create remappedFrom HashSet. Used by deserialization as well.\r\n            ":"\r\n            创建从标签的重新映射。也由避难所使用。\r\n            \r\n","The string to match. If the string represents a relative path, it will get normalized against the glob's root. Cannot be null.":"匹配的字符串。如果字符串代表相对路径，则它将与全球根的标准化。不能无效。\r\n","\r\n            ASP.NET projects\r\n            ":"\r\n            ASP.NET项目\r\n            \r\n"," is a transform expression)>.":" 是转换表达式）>。\r\n","\r\n            Gets the escaped value of the metadatum with the provided name on the provided item.\r\n            ":"\r\n            获取元数据的逃脱值，并在提供的项目上提供提供的名称。\r\n            \r\n","\r\n            This method will becalled from multiple threads in asynchronous mode.\r\n            \r\n            Determine where to send the buildevent either to the filters or to a specific sink.\r\n            When in Asynchronous mode the event should to into the logging queue (as long as we are initialized).\r\n            In Synchronous mode the event should be routed to the correct sink or logger right away\r\n            ":"\r\n            此方法将从异步模式下从多个线程中进行。\r\n            \r\n            确定将buildEvent发送到过滤器或特定水槽的位置。\r\n            在异步模式下，事件应进入记录队列（只要我们初始化）。\r\n            在同步模式下，应立即将事件路由到正确的水槽或记录仪\r\n            \r\n","\r\n            Override of Equals\r\n            ":"\r\n            替代平等\r\n            \r\n","\r\n            Gets the task command line associated with this event.\r\n            ":"获取与此事件关联的任务命令行。\r\n            \r\n","\r\n            Will Log a build Event. Will also take into account OnlyLogCriticalEvents when determining\r\n            if to drop the event or to log it.\r\n            \r\n            Only the following events will be logged if OnlyLogCriticalEvents is true:\r\n            CustomEventArgs\r\n            BuildErrorEventArgs\r\n            BuildWarningEventArgs\r\n            ":"\r\n            将记录构建事件。在确定时也将仅考虑唯一的批判性\r\n            如果要放弃事件或记录事件。\r\n            \r\n            只有仅logcriticalingevents为true，才会记录以下事件：\r\n            Customeventargs\r\n            Builderroreventargs\r\n            BuildWarningEventargs\r\n            \r\n","\r\n            Does nothing, meets the ColorResetter delegate type\r\n            ":"\r\n            什么都不做，遇到Colorresetter代表类型\r\n            \r\n"," that is hosted in the main node for multi-proc builds.  This instance of the service\r\n             listens for requests from out-of-proc nodes so that SDK resolution is handled in a central location.  This instance is registered in ":" 该托管在多个Proc构建的主要节点中托管。这项服务的实例\r\n             聆听来自附加节点的请求，以便在中心位置处理SDK分辨率。此实例已注册\r\n","\r\n            Manages a set of mru lists that hold strings in varying size ranges.\r\n            ":"\r\n            管理一组MRU列表，这些列表将字符串保持在不同尺寸的范围内。\r\n            \r\n","\r\n            Represents one substring for a single successful capture.\r\n            ":"\r\n            代表单个成功捕获的一个子字符串。\r\n            \r\n","\r\n            Task classes and locations known to this project.\r\n            This is the project-specific task registry, which is consulted before\r\n            the toolset's task registry.\r\n            Only set during evaluation, so does not check for immutability.\r\n            ":"\r\n            该项目已知的任务类和位置。\r\n            这是特定于项目的任务注册表，以前进行咨询\r\n            工具集的任务注册表。\r\n            仅在评估期间设置，因此不检查不变性。\r\n            \r\n","\r\n            Potentially Intern the given string.\r\n            ":"\r\n            可能实习给定的字符串。\r\n            \r\n","\r\n            Expected location that MSBuild tasks (v12) is picked up from if the user \r\n            references it with just a simple name, used for shimming in loading \r\n            task factory UsingTasks\r\n            ":"\r\n            如果用户从\r\n            引用它仅用一个简单的名称，用于加载时弹药\r\n            任务工厂使用任务\r\n            \r\n","\r\n            File associated with event.\r\n            ":"\r\n            与事件关联的文件。\r\n            \r\n","\r\n            Path to where the file SDKManifest.xml is stored\r\n            ":"通往文件sdkmanifest.xml的路径\r\n            \r\n","\r\n            The result code for a given target.\r\n            ":"\r\n            给定目标的结果代码。\r\n            \r\n","\r\n            ProjectPropertyElement class represents the Property element in the MSBuild project.\r\n            ":"ProjectPropertyelement类代表MSBUILD项目中的属性元素。\r\n            \r\n","The unevaluated condition.":"未评估的条件。\r\n","The target SDK":"目标SDK\r\n","\r\n            Assumes the itemspec passed in is escaped, and also that any escapable metadata values\r\n            are passed in escaped form.\r\n            ":"\r\n            假设通过Itemspec进入了，也是任何可逃避的元数据值\r\n            以逃脱的形式通过。\r\n            \r\n","\r\n            Returns a shallow clone of this project element.\r\n            ":"\r\n            返回该项目元素的浅克隆。\r\n            \r\n","BuildEventContext to compare to this instance":"buildEventContext与此实例进行比较\r\n","\r\n            Adds an MSBuild task to a real project.\r\n            ":"\r\n            将MSBUILD任务添加到一个真实的项目中。\r\n            \r\n","\r\n            Creates an instance of this class given the item-spec and a built-in metadata collection.\r\n            Parameters are assumed to be ALREADY CLONED.\r\n            ":"\r\n            给定项目规格和内置元数据集合创建此类实例。\r\n            假定参数已被克隆。\r\n            \r\n","\r\n            Starts the request and blocks until results are available.\r\n            ":"\r\n            启动请求并阻止，直到结果可用。\r\n            \r\n","\r\n            Arguments for external project started events\r\n            ":"\r\n            外部项目的论点开始事件\r\n            \r\n","\r\n            Performs a deep clone, optionally changing mutability\r\n            ":"\r\n            执行深度克隆，可选地更改可变性\r\n            \r\n","\r\n            Location of the \"Condition\" attribute on this element, if any.\r\n            If there is no such attribute, returns null.\r\n            ":"\r\n            此元素上的“条件”属性的位置（如果有）。\r\n            如果没有此类属性，请返回null。\r\n            \r\n","\r\n            Returns true if the specified project will build in the currently selected solution configuration.\r\n            ":"\r\n            如果指定的项目将在当前选择的解决方案配置中构建，则返回true。\r\n            \r\n","The node which aborted.":"流产的节点。\r\n","\r\n            Disable the use of paths longer than Windows MAX_PATH limits (260 characters) when running on a long path enabled OS.\r\n            ":"\r\n            禁用路径的使用时间比Windows Max_path限制（260个字符）在长路径启用OS上运行时。\r\n            \r\n","This collection has the same performance characteristics as ":"该系列具有与\r\n","\r\n            If MSBUILDCUSTOMSCHEDULER = CustomSchedulerForSQL, the default multiplier for the amount by which \r\n            the count of configurations on any one node can exceed the average configuration count is 1.1 -- \r\n            + 10%.\r\n            ":"\r\n            如果msbuildcustomscheduler = customschedulerforsql，则默认乘数的数量\r\n            任何一个节点上的配置计数都可以超过平均配置计数为1.1-\r\n            + 10％。\r\n            \r\n","\r\n            INodePacket property.  Returns the packet type.\r\n            ":"\r\n            inodepacket属性。返回数据包类型。\r\n            \r\n","\r\n            Represents the style of communications used by the in-proc endpoint.\r\n            ":"\r\n            代表了端点内点使用的通信风格。\r\n            \r\n","\r\n            Evaluates the provided string by expanding items and properties,\r\n            as if it was found at the very end of the project file.\r\n            This is useful for some hosts for which this kind of best-effort\r\n            evaluation is sufficient.\r\n            Does not expand bare metadata expressions.\r\n            ":"\r\n            通过扩展项目和属性来评估提供的字符串，\r\n            好像是在项目文件的末尾找到的。\r\n            这对于某些最佳效果的主机很有用\r\n            评估就足够了。\r\n            不会扩大裸露的元数据表达。\r\n            \r\n",". Should be returned to the pool after we're done with it.":"。完成后，应该返回游泳池。\r\n","\r\n            Creates an item group.\r\n            Caller must add it to the location of choice in the project.\r\n            ":"\r\n            创建一个项目组。\r\n            呼叫者必须将其添加到项目中选择的位置。\r\n            \r\n","\r\n            Serializes to a stream through a binary writer.\r\n            ":"\r\n            通过二进制作家序列到流。\r\n            \r\n","\r\n            Imports may contain references to \"projectImportSearchPaths\" defined in the app.config \r\n            toolset section. If this is the case, this method will search for the imported project\r\n            in those additional paths if the default fails.\r\n            ":"\r\n            导入可能包含对app.config中定义的“ ProjectImportSearchPaths”的引用\r\n            工具集部分。如果是这种情况，此方法将搜索导入的项目\r\n            在那些其他路径中，如果默认值失败。\r\n            \r\n","\r\n            NodeConfiguration contains all of the information necessary for a node to configure itself for building.\r\n            ":"\r\n            NodeConfiguration包含一个节点为构建配置所需的所有信息。\r\n            \r\n","\r\n            Ending column number of interest in associated file.\r\n            ":"\r\n            结束列的关联文件的兴趣。\r\n            \r\n","\r\n            Be sure that the string keys are strongly held, or unpredictable bad\r\n            behavior will ensue.\r\n            ":"\r\n            确保符合串件键，或者不可预测的不良\r\n            行为将发生。\r\n            \r\n","Reader to read from":"读者阅读\r\n","\r\n            Get a fully qualified path to the framework's root directory. \r\n            ":"\r\n            获取通往框架根目录的完全合格的路径。\r\n            \r\n","\r\n            The task was not found.\r\n            ":"\r\n            找不到任务。\r\n            \r\n","\r\n            Determines whether features behind the given wave are enabled.\r\n            ":"\r\n            确定是否启用了给定波背后的功能。\r\n            \r\n"," property.\r\n            Since this is just schema information, there is no field like \"Value\" used to get/set the value of this\r\n            property.":" 财产。\r\n            由于这只是架构信息，因此没有用于获取/设置该值的“值”的字段\r\n            财产。\r\n"," Those who manually instantiate this class should remember to call ":" 那些手动实例化此类的人应该记得打电话\r\n","Output file":"输出文件\r\n","\r\n            Targets in the project after overrides have been resolved.\r\n            This is an unordered collection keyed by target name.\r\n            Only the wrapper around this collection is exposed.\r\n            ":"\r\n            覆盖后项目中的目标已解决。\r\n            这是一个由目标名称锁定的无序集合。\r\n            只有该系列周围的包装器才暴露。\r\n            \r\n","\r\n            Numeric evaluation is never allowed for operators\r\n            ":"\r\n            运营商永远不允许数字评估\r\n            \r\n","\r\n            Creates a Parameter for use in a using ParameterGroup.\r\n            Caller must add it to the location of choice in the project under a using task.\r\n            ":"\r\n            创建一个参数，用于使用参数组。\r\n            呼叫者必须在使用任务下的项目中将其添加到项目的选择位置。\r\n            \r\n","\r\n            Initialize a ProjectRootElement instance from an existing document.\r\n            Uses the global project collection.\r\n            May throw InvalidProjectFileException.\r\n            ":"\r\n            从现有文档初始化ProjectRootelement实例。\r\n            使用全球项目集合。\r\n            可能会抛出无效的fileException。\r\n            \r\n","\r\n            Async version of BuildProjectFilesInParallel.\r\n            ":"\r\n            异步版本的buildProjectFilesInParallel。\r\n            \r\n","\r\n                Maintain the state of each node (InProcess and Processed) to detect cycles.\r\n                Assumes edges have been added between nodes.\r\n                Returns false if cycles were detected.\r\n            ":"\r\n                保持每个节点的状态（inprocess and processed）以检测周期。\r\n                假设在节点之间添加了边缘。\r\n                如果检测到循环，则返回错误。\r\n            \r\n","\r\n            Caches results to disk if possible.\r\n            ":"\r\n            如果可能的话，缓存的结果会导致磁盘。\r\n            \r\n","True if we actually pushed any targets, false otherwise.":"是的，如果我们实际推动任何目标，则否则为错误。\r\n","\r\n            overridden so we can track previously seen tools versions\r\n            ":"\r\n            覆盖以便我们可以跟踪先前看到的工具版本\r\n            \r\n","\r\n            Gets or sets the number of MSBuild processes participating in the build. If greater than 1,\r\n            include the node ID\r\n            ":"\r\n            获取或设置参与构建的MSBUILD流程的数量。如果大于1\r\n            包括节点ID\r\n            \r\n","\r\n            Gets or sets the AfterTargets value.\r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"\r\n            获取或设置AfterTargets值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n","List of Target Platform SDKs, Item1: TargetPlatformName Item2: Version of SDK Item3: Path to sdk root":"目标平台SDK的列表，项目1：targetPlatformName item2：SDK item3的版本：通往SDK root的路径\r\n","\r\n            The task host node failed for some reason \r\n            ":"\r\n            任务主机节点由于某种原因失败\r\n            \r\n","\r\n            Gets or sets the minimum SDK version required by this import.\r\n            ":"\r\n            获取或设置此导入所需的最小SDK版本。\r\n            \r\n"," is null. But not both.\r\n            ":" 一片空白。但不是两者。\r\n            \r\n","\r\n            AppendSwitch(\"/utf8output\") => \"/utf8output\"\r\n            ":"\r\n            appendswitch（“/utf8Output”）=>“/utf8Output”\r\n            \r\n","In general, ":"一般来说，\r\n","\r\n            The list of targets which were actively building at the time we were blocked.\r\n            ":"\r\n            我们被阻止时积极建立的目标列表。\r\n            \r\n","The name of the metadata to add":"元数据的名称要添加\r\n","\r\n            Returns an XmlDocument representing the evaluated project's XML as if it all had\r\n            been loaded from a single file, instead of being assembled by pulling in imported files.\r\n            ":"\r\n            返回一个XmlDocument，表示被评估项目的XML，就好像它都有一样\r\n            从单个文件加载，而不是通过导入文件进行组装。\r\n            \r\n","\r\n            Remove a toolset and does not raise events. The caller should have acquired a write lock on this method's behalf.\r\n            ":"\r\n            删除工具集，不会提出事件。呼叫者应该代表该方法获得写锁。\r\n            \r\n","\r\n            This task parameter should be logged when LogTaskInputs is set. Defaults to true.\r\n            ":"\r\n            设置LogTaskInputs时，应记录此任务参数。默认为true。\r\n            \r\n","\r\n            Whether the importing element is itself imported.\r\n            ":"\r\n            导入元素本身是否导入。\r\n            \r\n","\r\n            Returns the set of targets to be satisfied for this request.\r\n            ":"\r\n            返回为此请求满足的目标集。\r\n            \r\n","\r\n            Do not make public: we do not wish to expose particular XML API's.\r\n            ":"\r\n            不要公开：我们不希望暴露特定的XML API。\r\n            \r\n","\r\n            Useful constructor, including the ability to set the timestamp of the event\r\n            ":"\r\n            有用的构造函数，包括设置事件时间戳的能力\r\n            \r\n","\r\n            True if project built successfully, false otherwise\r\n            ":"\r\n            如果项目成功构建，则为true，否则为错误\r\n            \r\n","\r\n            Clears configurations from the configuration cache which have not been explicitly loaded.\r\n            ":"\r\n            从尚未明确加载的配置缓存中清除配置。\r\n            \r\n","/GL":"/gl\r\n","\r\n            A logging context representing a task being built.\r\n            ":"\r\n            代表正在构建的任务的记录上下文。\r\n            \r\n","\r\n            This property is set by the build engine or node to inform the forwarding logger which node it is running on\r\n            ":"\r\n            此属性由构建引擎或节点设置，以告知转发记录器在哪个节点上运行\r\n            \r\n","Internal for unit testing only":"仅用于单元测试的内部\r\n","\r\n            Gets the startup directory.\r\n            ":"\r\n            获取启动目录。\r\n            \r\n","\r\n            What is the current state of the logging service\r\n            ":"\r\n            伐木服务的当前状态是什么\r\n            \r\n","\r\n            The default tools version.\r\n            ":"\r\n            默认工具版本。\r\n            \r\n","\r\n            Registry hive used\r\n            ":"\r\n            使用的注册表配置单元\r\n            \r\n","\r\n            Should evaluation events include profiling information?\r\n            ":"\r\n            评估事件应该包括分析信息吗？\r\n            \r\n","\r\n            Construct our dependency table for our source files.\r\n            ":"\r\n            为源文件构建我们的依赖表。\r\n            \r\n","File name to locate in the .NET Framework directory":"要位于.NET框架目录中的文件名\r\n","File name to locate in the system directory":"要位于系统目录中的文件名\r\n","\r\n            Visual Studio Dev14\r\n            ":"\r\n            Visual Studio Dev14\r\n            \r\n","The loggers to register. May be null.":"伐木者注册。可能是无效的。\r\n","\r\n            Returns the default targets for the configuration which requested these results.\r\n            ":"\r\n            返回请求这些结果的配置的默认目标。\r\n            \r\n","\r\n            Acquire a ":"\r\n            获取\r\n","\r\n            Read only dictionary of the global properties used in the evaluation\r\n            of this project.\r\n            ":"\r\n            仅阅读评估中使用的全局属性字典\r\n            这个项目。\r\n            \r\n","\r\n            Get a read-only collection of the child item definition groups, if any\r\n            ":"\r\n            如果有的话\r\n            \r\n","\r\n            Reset the state of objects in the node manager which need to be reset between builds.\r\n            ":"\r\n            重置在构建之间需要重置的节点管理器中的对象状态。\r\n            \r\n","\r\n            The import was implicitly added at the top of the project.\r\n            ":"\r\n            该导入被隐式添加在项目的顶部。\r\n            \r\n","The build request configuration.":"构建请求配置。\r\n","\r\n            Applies the specified modifications to the supplied item.\r\n            ":"\r\n            将指定的修改应用于提供的项目。\r\n            \r\n","\r\n            Depth first collection of InitialTargets strings declared in the main \r\n            Project and all its imported files, split on semicolons.\r\n            ":"\r\n            深度在主机中声明的初始字符串的第一批集合\r\n            项目及其所有导入的文件，分为半洛龙。\r\n            \r\n","\r\n            Given an instantiated task, this helper method sets the specified scalar parameter based on its type.\r\n            ":"\r\n            给定实例化任务，此助手方法根据其类型设置指定的标量参数。\r\n            \r\n","\r\n            Returns an IComparer that will put performance counters \r\n            in descending order by elapsed time.\r\n            ":"\r\n            返回一个将放置性能计数器的ICOMPARER\r\n            按照经过的时间下降顺序。\r\n            \r\n"," to log task inputs, otherwise ":" 要记录任务输入，否则\r\n","\r\n            Class representing all the per-OS search paths for MSBuildExtensionsPath*\r\n            ":"\r\n            代表MSBuildExtensionsPath的所有Per-OS搜索路径*的类*\r\n            \r\n","The property's preceding state. Null if none.":"该物业的先前状态。如果没有，则为空。\r\n","\r\n            The location of an XML node in a file.\r\n            Any editing of the project XML through the MSBuild API's will invalidate locations in that XML until the XML is reloaded.\r\n            ":"\r\n            文件中XML节点的位置。\r\n            通过MSBUILD API对项目XML的任何编辑将使该XML中的位置无效，直到重新加载XML为止。\r\n            \r\n","\r\n            Not thread safe. After this method is called, the assumption is that no new ProjectEvaluationFinishedEventArgs will arrive.\r\n            In the regular code path, this method is called only once per build. But some test cases may call it multiple times to validate \r\n            the aggregated data\r\n            ":"\r\n            不安全。在调用此方法之后，假设是没有新的ProjectEvaluationFinedEventargs到达。\r\n            在常规代码路径中，此方法仅调用一次。但是有些测试用例可能会多次调用以验证\r\n            聚合数据\r\n            \r\n","The string to parse":"解析字符串\r\n","\r\n            This may include imported files that ended up contributing nothing to the evaluated project.\r\n            These might otherwise have no strong references to them at all.\r\n            If they are dirtied, though, they might affect the evaluated project; and that's why we record them.\r\n            Mostly these will be common imports, so they'll be shared anyway.\r\n            ":"\r\n            这可能包括导入的文件，最终对评估项目没有任何贡献。\r\n            否则，这些可能根本没有强烈的提及。\r\n            但是，如果它们被弄脏，它们可能会影响评估的项目；这就是为什么我们记录它们。\r\n            通常，这些将是常见的导入，因此无论如何它们都会被共享。\r\n            \r\n","\r\n            Stores resolver state by build submission ID.\r\n            ":"\r\n            通过构建提交ID存储解析器状态。\r\n            \r\n","\r\n             Returns default global properties for all projects in this collection.\r\n             Read-only dead dictionary.\r\n             ":"\r\n             返回此集合中所有项目的默认全局属性。\r\n             只读的死词典。\r\n             \r\n","\r\n            List of names of the properties that, while global, are still treated as overridable \r\n            ":"\r\n            虽然全局仍然被视为填补的属性名称列表\r\n            \r\n","\r\n            Throws invalid operation exception if the project instance is immutable.\r\n            Called before an edit.\r\n            ":"\r\n            如果项目实例不变，则投掷无效的操作异常。\r\n            在编辑之前打电话。\r\n            \r\n","\r\n            ToolsVersion attribute of the element\r\n            ":"\r\n            元素的toolsversion属性\r\n            \r\n","Item types":"项目类型\r\n","\r\n            Task Parameter: Should messages received on the standard error stream be logged as errros\r\n            ":"\r\n            任务参数：应将在标准错误流以ERRROS记录为单位上接收到的消息\r\n            \r\n","\r\n            The submission with which this request is associated.\r\n            ":"\r\n            与此请求关联的提交。\r\n            \r\n","\r\n            Importance with which to log text from in the\r\n            standard out stream.\r\n            ":"\r\n            重要性可以在\r\n            标准流。\r\n            \r\n","\r\n            Event handler for the BuildEngine's OnRequestComplete event.\r\n            ":"\r\n            BuildEngine的OnRequestComplete活动的活动处理程序。\r\n            \r\n","\r\n            When true, accumulate performance numbers.\r\n            ":"\r\n            如果是真的，请积累性能号码。\r\n            \r\n","\r\n            Specifies whether the current evaluation / build is happening during a graph build\r\n            ":"\r\n            指定当前的评估 /构建是否在图形构建过程中发生\r\n            \r\n","\r\n            1) This method requires the owner task to have registered its resources either via the Task (or TaskMarshalByRef) base\r\n               class constructor, or the Task.TaskResources (or AppDomainIsolatedTask.TaskResources) property.\r\n            2) This method is thread-safe.\r\n            ":"\r\n            1）此方法要求所有者任务通过任务（或TaskmarshalbyRef）基础注册其资源\r\n               类构造函数或task.taskResources（或AppDomainisolatedTask.taskResources）属性。\r\n            2）此方法是线程安全。\r\n            \r\n","\r\n            A combination of ":"\r\n            组合\r\n","\r\n            Dumps all of the requests.\r\n            ":"\r\n            转储所有请求。\r\n            \r\n","\r\n            Gets the list of parameters which are batchable for a target\r\n            PERF: (Refactor) This used to be a method on the target, and it would\r\n            cache its values so this would only be computed once for each\r\n            target.  We should consider doing something similar for perf reasons.\r\n            ":"\r\n            获取可用于目标的参数列表\r\n            perf ：（重构）这曾经是目标上的一种方法，它将\r\n            缓存其值，因此只能为每个计算一次\r\n            目标。出于完美原因，我们应该考虑做类似的事情。\r\n            \r\n","\r\n            with that name and add it to the internal list of categories. That auto-generated category will not be returned\r\n            by this field.\r\n            ":"\r\n            使用该名称并将其添加到类别的内部列表中。该自动生成类别将不会退回\r\n            通过这个领域。\r\n            \r\n","\r\n            Initializes a build request with a parent context.\r\n            ":"\r\n            用父上下文初始化构建请求。\r\n            \r\n","\r\n            Add two longs\r\n            ":"\r\n            添加两个朗\r\n            \r\n","The build event context used to log during task registration.":"构建事件上下文用于在任务注册过程中登录。\r\n","\r\n            Add a target to the project called \"GetFrameworkPathAndRedistList\".  This target calls the\r\n            GetFrameworkPath task and then CreateItem to populate @(_CombinedTargetFrameworkDirectoriesItem) and\r\n            @(InstalledAssemblyTables), so that we can pass these into the ResolveAssemblyReference task\r\n            when building web projects.\r\n            ":"\r\n            将目标添加到名为“ getFrameworkpathandRedistList”的项目中。这个目标调用\r\n            getFrameWorkPath任务，然后createItem填充 @（_ combinedTargetFrameWorkDirectoriesItem）和\r\n            @（installedAssemblyTables），以便我们可以将它们传递到ResolvereSemblyReference任务中\r\n            构建网络项目时。\r\n            \r\n"," argument was matched against the glob\r\n            ":" 争论与全球匹配\r\n            \r\n","\r\n            Returns the node-assigned configuration id\r\n            ":"\r\n            返回节点分配的配置ID\r\n            \r\n","The computed path to tool executable on disk":"磁盘上的工具可执行文件的计算路径\r\n","The changed project.":"改变的项目。\r\n","\r\n            Throws an ArgumentNullException if the given collection is null\r\n            and ArgumentException if it has zero length.\r\n            ":"\r\n            如果给定的集合为null，则引发一个参数努力。\r\n            和grignt exception如果其长度为零。\r\n            \r\n","\r\n            The Custom event handler\r\n            ":"\r\n            自定义活动处理程序\r\n            \r\n","\r\n            Include the default MSBuild namespace on the Project element.\r\n            ":"\r\n            在项目元素上包含默认的MSBUILD名称空间。\r\n            \r\n","\r\n            Convenience method to add a task to this target.\r\n            Adds after any existing task.\r\n            ":"\r\n            便利方法将任务添加到此目标中。\r\n            在任何现有任务之后添加。\r\n            \r\n","\r\n            Type of handler for MessageRaised events\r\n            ":"\r\n            Messageraised事件的处理程序类型\r\n            \r\n","\r\n            The first build request to generate results for a configuration will set this so that future\r\n            requests may be properly satisfied from the cache.\r\n            ":"\r\n            为配置生成结果的第一个构建请求将设置该请求，以便将来\r\n            可以从缓存中正确满足请求。\r\n            \r\n","\r\n            Invokes the OnResourceRequest event\r\n            ":"\r\n            调用OnResourcerequest活动\r\n            \r\n","\r\n            Initializes this RegistryKeyWrapper to wrap the key at the specified path\r\n            ":"\r\n            初始化此registryKeywrapper以在指定路径上包装密钥\r\n            \r\n","\r\n            Event handler for the BuildEngine's OnNewConfigurationRequest event.\r\n            ":"\r\n            BuildEngine的OnnewConfigurationRequest活动的活动处理程序。\r\n            \r\n","\r\n            Enumerated directory.\r\n            ":"\r\n            枚举目录。\r\n            \r\n","\r\n            Gets or sets a flag indicating that the target builder should stop processing the target\r\n            stack when this target completes.\r\n            ":"\r\n            获取或设置一个标志，表明目标建筑商应停止处理目标\r\n            当该目标完成时堆叠。\r\n            \r\n","\r\n            Writes out the list of item specs and their metadata.\r\n            This could be done at any time during the build to show the latest\r\n            items, using the cached reference to the list from the\r\n            appropriate ProjectStarted event.\r\n            ":"写出项目规格及其元数据的列表。\r\n            这可以在构建过程中的任何时候完成，以显示最新的\r\n            项目，使用从列表中的缓存引用\r\n            适当的项目开始。\r\n            \r\n","\r\n            Since this class implements Iserializable this constructor is required to be implemented.\r\n            ":"\r\n            由于此类实现了本次数，因此必须实现此构造函数。\r\n            \r\n","The BuildEventContext to use for this project.":"用于此项目的BuildEventContext。\r\n","\r\n            Should task events include task inputs?\r\n            ":"\r\n            任务事件应该包括任务输入吗？\r\n            \r\n","\r\n            version 2.0\r\n            ":"\r\n            2.0版\r\n            \r\n","\r\n            Private constructor for singleton creation.\r\n            ":"\r\n            Singleton Creation的私人构造函数。\r\n            \r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n            Finds first item group with no condition with at least one item of same type, or else an empty item group; or else adds a new item group;\r\n            adds the item to that item group with items of the same type, ordered by include.\r\n            Does not attempt to check whether the item matches an existing wildcard expression; that is only possible\r\n            in the evaluated world.\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n            找到至少一项相同类型的条件的第一个项目组，否则为空项目组；否则添加了一个新项目组；\r\n            将项目添加到该项目组中，其中包括相同类型的项目，由Inclupher订购。\r\n            不尝试检查该项目是否匹配现有的通配符表达式；那只是可能的\r\n            在评估的世界中。\r\n            \r\n","\r\n            Include the ToolsVersion attribute on the Project element.\r\n            ":"\r\n            在项目元素上包含工具vertibion​​属性。\r\n            \r\n","Source array was not long enough. Check the source index, length, and the array's lower bounds.":"源阵列还不够长。检查源索引，长度和阵列的下限。\r\n","\r\n            Accesses the unescaped evaluated include prior to wildcard expansion\r\n            ":"\r\n            访问评估的未设计的包括通配符扩展之前\r\n            \r\n","A type derived from IProperty":"源自iProperty的类型\r\n","\r\n            The parent entry, which is waiting for us to complete before proceeding.\r\n            ":"\r\n            父母条目，正在等待我们在继续之前完成。\r\n            \r\n","\r\n            Improvement to XmlDocument that during load attaches location information to all elements and attributes.\r\n            We don't need a real XmlDocument, as we are careful not to expose Xml types in our public API.\r\n            ":"\r\n            对Xmldocument的改进，在加载期间，将位置信息附加到所有元素和属性。\r\n            我们不需要真正的Xmldocument，因为我们要小心不要在我们的公共API中暴露XML类型。\r\n            \r\n","\r\n            Returns a dictionary of the ESCAPED values of the metadata\r\n            ":"\r\n            返回元数据的逃脱值的字典\r\n            \r\n","\r\n            UsingTask tags have already been evaluated and entered into this task registry.\r\n            ":"\r\n            使用TASK标签已经评估并输入此任务注册表。\r\n            \r\n","the type of the this frame":"此框架的类型\r\n","\r\n            Stores the list of SDK resolvers which were loaded.\r\n            ":"\r\n            存储已加载的SDK解析器列表。\r\n            \r\n","\r\n            A mapping of all of the INodePacketFactories wrapped by this provider.\r\n            ":"\r\n            该提供商包裹的所有InodePacketFactory的映射。\r\n            \r\n","\r\n            Load and parse the specified project import, which may have wildcards,\r\n            into one or more ProjectRootElements.\r\n            Caches the parsed import into the provided collection, so future \r\n            requests can be satisfied without re-parsing it.\r\n            ":"\r\n            负载并解析指定的项目导入，可能具有通配符，\r\n            分为一个或多个项目。\r\n            缓存解析的导入到提供的收藏中，因此未来\r\n            可以在不重新分配的情况下满足请求。\r\n            \r\n","The item specification to evaluate and modify.":"评估和修改的项目规范。\r\n","\r\n            Fortunately the standard implementation has only four accessible members\r\n            and all of them are virtual so we can easily add locks.\r\n            ":"\r\n            幸运的是，标准实施只有四个可访问的成员\r\n            它们都是虚拟的，因此我们可以轻松添加锁。\r\n            \r\n","\r\n            Solution folders appear in the .sln file, but aren't buildable projects.\r\n            ":"\r\n            解决方案文件夹出现在.sln文件中，但不是可构建的项目。\r\n            \r\n","\r\n            Cache the display name for the TFM/FrameworkName, keyed by the target framework directory.\r\n            This is generated by the \"Name\" attribute on the root tag of the primary matching redist list.\r\n            Value is never an empty string or null: a name will be synthesized if necessary.\r\n            ":"\r\n            缓存TFM/Frameworkname的显示名称，由目标框架目录键入。\r\n            这是由主匹配列表的根标签上的“名称”属性生成的。\r\n            值绝不是空字符串或null：必要时将合成名称。\r\n            \r\n","\r\n             instead of expanding the item element.\r\n             ":"\r\n             而不是扩展项目元素。\r\n             \r\n","\r\n            Process wide ToolsetConfigurationSection section cache\r\n            ":"\r\n            处理广泛的工具集合配置部分缓存\r\n            \r\n","True if the objects are equivalent, false otherwise.":"正确，如果对象等效，则为false否则。\r\n"," The value of this property can be set to, say, \"File\", \"Folder\", \"CarModel\" etc. to specify\r\n            if this is a file path, folder path, car model name etc. ":" 该属性的价值可以设置为“文件”，“文件夹”，“ carmodel”等，以指定\r\n            如果这是文件路径，文件夹路径，汽车模型名称等。\r\n","\r\n            Add a new error/warning/message tag into the given target\r\n            ":"\r\n            在给定目标中添加新错误/警告/消息标签\r\n            \r\n","\r\n            The maximum node count\r\n            ":"\r\n            最大节点计数\r\n            \r\n","\r\n            The smallest size a string can be to be ginormous.\r\n            8K for large object heap.\r\n            ":"\r\n            一根弦的最小尺寸可能是巨大的。\r\n            8K用于大物体堆。\r\n            \r\n","\r\n            Facilitate remoting to remote ":"\r\n            便利远程遥控\r\n","\r\n            Creates a mutable view of this collection. Changes made to the returned builder are not reflected in this collection.\r\n            ":"\r\n            创建该系列的可变视图。对返回的构建器进行的更改未反映在此集合中。\r\n            \r\n","\r\n            The locations where we look for toolsets.\r\n            ":"\r\n            我们寻找工具集的位置。\r\n            \r\n","\r\n            Removes all projects from the collection.\r\n            ":"\r\n            从集合中删除所有项目。\r\n            \r\n","\r\n            Helper utility for External projects provider implementation to get access of the parent object.\r\n            At this point this is internal property for ":"\r\n            用于外部项目提供商实现的帮助实用程序，以获取父对象的访问。\r\n            此时，这是内部财产\r\n","The number of cores a task can potentially use.":"任务可能使用的内核数。\r\n","\r\n            Compare target to string. Assumes lengths are equal.\r\n            ":"\r\n            将目标与字符串进行比较。假设长度相等。\r\n            \r\n","\r\n            Processes all requests that are currently in the queue.\r\n            ":"\r\n            处理当前队列中的所有请求。\r\n            \r\n","\r\n            Add the argument in the StringBuilder to the arguments list, handling nulls\r\n            appropriately\r\n            ":"\r\n            将参数添加到StringBuilder中的参数列表，处理nulls\r\n            适当\r\n            \r\n","\r\n            Shutdown the logging service\r\n            ":"\r\n            关闭伐木服务\r\n            \r\n","\r\n            Returns true if this node can service requests with the specified affinity.\r\n            ":"\r\n            如果此节点可以使用指定的亲和力服务请求，则返回true。\r\n            \r\n","\r\n            Type of handler for TargetStarted events\r\n            ":"\r\n            针对目标事件的处理程序类型\r\n            \r\n","\r\n            Creates a regular evaluated property, with backing XML.\r\n            Called by Project.SetProperty.\r\n            Property MAY NOT have reserved name and MAY NOT overwrite a global property.\r\n            Predecessor is any immediately previous property that was overridden by this one during evaluation and may be null.\r\n            ":"\r\n            用备份XML创建常规评估的属性。\r\n            由Project.SetProperty称为。\r\n            属性可能没有保留名称，也不可能覆盖全球属性。\r\n            前身是该评估期间该物业被该属性所覆盖的任何属性，并且可能为无效。\r\n            \r\n","\r\n            ITaskItem2 implementation which sets the literal value of metadata -- it is escaped \r\n            internally as necessary.\r\n            ":"\r\n            ITASKITEM2实现设置了元数据的字面价值 - 它被逃脱了\r\n            必要时内部。\r\n            \r\n","\r\n            Gets or sets the name of the SDK.\r\n            ":"\r\n            获取或设置SDK的名称。\r\n            \r\n","\r\n            The set of parameters that has been set to this wrapped task -- save them \r\n            here so that we can forward them on to the task host. \r\n            ":"\r\n            设置为包装任务的一组参数 - 保存它们\r\n            在这里，我们可以将它们转发到任务主机。\r\n            \r\n","\r\n            Initialize a parented ProjectItemDefinitionGroupElement\r\n            ":"\r\n            初始化育儿ProjectItemDefinitionGroupelement\r\n            \r\n","The next unused local configuration ID.":"下一个未使用的本地配置ID。\r\n","\r\n            Creates an unparented UsingTaskParameterElement, wrapping an unparented XmlElement.\r\n            Caller should then ensure the element is added to a parent.\r\n            ":"\r\n            创建使用TaskParameTerlement的无与伦比的，包裹无与伦比的XMLELEMENT。\r\n            然后，呼叫者应确保将元素添加到父。\r\n            \r\n","\r\n            Prints an error event\r\n            ":"\r\n            打印错误事件\r\n            \r\n","\r\n            The Warning logging event\r\n            ":"\r\n            警告记录活动\r\n            \r\n","\r\n            Backing XML property.\r\n            Never null.\r\n            ":"\r\n            支持XML属性。\r\n            永不零。\r\n            \r\n","The tools version to use. May be null.":"要使用的工具版本。可能是无效的。\r\n","\r\n            When this flag is present, an unresolved MSBuild project SDK will fail the build.  This flag is used to\r\n            change the ":"\r\n            当存在此标志时，未解决的MSBUILD项目SDK将使构建失败。这个标志习惯了\r\n            更改\r\n","\r\n            Multiply two doubles\r\n            ":"\r\n            乘以两个双打\r\n            \r\n","\r\n            Returns the specified metadata.\r\n            ":"\r\n            返回指定的元数据。\r\n            \r\n","\r\n            Attempts to parse the input string as an Nmtoken (see the XML spec production [7] and XML Namespaces spec).\r\n            Quits parsing when an invalid Nmtoken char is reached or the end of string is reached.\r\n            Returns the number of valid Nmtoken chars that were parsed.\r\n            ":"\r\n            尝试将输入字符串解析为NMToken（请参阅XML规格生产[7]和XML名称空间Spec）。\r\n            当达到无效的nmtoken char或达到字符串的末端时，请退出。\r\n            返回解析的有效NMToken字符数量。\r\n            \r\n","\r\n            Construct a log detail element\r\n            ":"\r\n            构建日志详细元素\r\n            \r\n","If false, a cached skipped target will cause this method to return \"NotSatisfied\".  \r\n            If true, then as long as there is a result in the cache (regardless of whether it was skipped or not), this method \r\n            will return \"Satisfied\". In most cases this should be false, but it may be set to true in a situation where there is no \r\n            chance of re-execution (which is the usual response to missing / skipped targets), and the caller just needs the data.":"如果是错误的，则缓存的跳过目标将导致这种方法返回“不满意”。\r\n            如果是真的，那么只要缓存有结果（无论它是否被跳过），此方法\r\n            将返回“满意”。在大多数情况下，这应该是错误的，但是在没有\r\n            重新执行的机会（这是对失踪 /跳过目标的通常响应），而呼叫者只需要数据。\r\n","\r\n            The node ID\r\n            ":"\r\n            节点ID\r\n            \r\n","The initial properties, used for expansion and added to if \"accumulateProperties\" is true.":"用于扩展的初始属性，并添加到if“ regumulateProperties”中是正确的。\r\n","\r\n             Parse the first line of a Project section of a solution file. This line should look like:\r\n            \r\n              Project(\"{Project type GUID}\") = \"Project name\", \"Relative path to project file\", \"{Project GUID}\"\r\n             \r\n             ":"\r\n             解析解决方案文件项目部分的第一行。这条线应该看起来像：\r\n            \r\n              project（“ {project类型guid}”）=“项目名称”，“项目文件的相对路径”，“ {project guid}”\r\n             \r\n             \r\n","\r\n            Initialize an unparented ProjectMetadataElement\r\n            ":"\r\n            初始化无与伦比的项目\r\n            \r\n","\r\n            Searches for a file based on the specified starting directory.\r\n            ":"\r\n            根据指定的起始目录搜索文件。\r\n            \r\n","\r\n            Instructs the RequestBuilder to suspend until the node is reacquired.\r\n            ":"\r\n            指示请求构造器暂停，直到节点重新征用为止。\r\n            \r\n","\r\n            Location of the \"ExecuteTargets\" attribute on this element, if any.\r\n            If there is no such attribute, returns null;\r\n            ":"\r\n            此元素上的“ executetArgets”属性的位置（如果有）。\r\n            如果没有这样的属性，请返回null；\r\n            \r\n","Returns a structure containing the success or failure of the build and the target outputs by project.":"返回包含构建成功或目标输出的结构。\r\n","\r\n            Given a baseKey and a subKey, get all of the subkeys names.\r\n            ":"\r\n            给定一个basekey和subkey，获取所有Subkeys名称。\r\n            \r\n","\r\n            A wrapper over StringBuilder.\r\n            ":"\r\n            弦乐器上的包装器。\r\n            \r\n","\r\n            Gets the escaped value of the provided metadatum. \r\n            ":"\r\n            获取所提供的元数据的逃脱价值。\r\n            \r\n","The config id if one exists, otherwise BuildRequestConfiguration.InvalidConfigurationId":"配置ID如果存在，则否则buildRequestConfiguration.invalidConfigurationID\r\n","\r\n            Returns true if the solution contains any web projects\r\n            ":"\r\n            如果解决方案包含任何Web项目，则返回true\r\n            \r\n"," contained by this instance is changed.\r\n            ":" 此实例包含的内容已更改。\r\n            \r\n","Remote loggers for multi proc logging.":"用于多个PROC记录的远程记录器。\r\n","\r\n            Returns an IComparer that will put performance counters\r\n            in descending order by elapsed time.\r\n            ":"\r\n            返回一个将放置性能计数器的ICOMPARER\r\n            按照经过的时间下降顺序。\r\n            \r\n","\r\n            Make sure a node in the requested context exists.\r\n            ":"\r\n            确保存在请求上下文中的节点。\r\n            \r\n","\r\n            Gets the current link, if any. For local objects returns null;\r\n            ":"\r\n            获取当前链接（如果有）。对于本地对象返回null；\r\n            \r\n","\r\n            Attempts to retrieve an item from the ROT.\r\n            ":"\r\n            尝试从腐烂中检索物品。\r\n            \r\n","\r\n            Call this method to notify listeners of information relevant to collecting a set of items, mutating them in a specified way, and saving the results.\r\n            ":"\r\n            调用此方法，将与收集一组项目相关的信息通知听众，以指定的方式突变它们并保存结果。\r\n            \r\n","\r\n            Type of handler for BuildFinishedEvent events\r\n            ":"\r\n            用于buildfinedEvent事件的处理程序类型\r\n            \r\n","\r\n            Initialize an unparented ProjectUsingTaskElement\r\n            ":"\r\n            初始化无与伦比的ProjectingTaskelement\r\n            \r\n","\r\n                Expands the specified expression into a list of TaskItem's.\r\n            ":"\r\n                将指定的表达式扩展到TaskItem的列表中。\r\n            \r\n","\r\n            Creates the default Venus configuration property based on the selected solution configuration.\r\n            Unfortunately, Venus projects only expose one project configuration in the IDE (Debug) although\r\n            they allow building Debug and Release from command line. This means that if we wanted to use\r\n            the project configuration from the active solution configuration for Venus projects, we'd always\r\n            end up with Debug and there'd be no way to build the Release configuration. To work around this,\r\n            we use a special mechanism for choosing ASP.NET project configuration: we set it to Release if\r\n            we're building a Release solution configuration, and to Debug if we're building a Debug solution\r\n            configuration. The property is also settable from the command line, in which case it takes\r\n            precedence over this algorithm.\r\n            ":"\r\n            根据所选解决方案配置创建默认的金星配置属性。\r\n            不幸的是，金星项目仅在IDE（调试）中公开一个项目配置\r\n            它们允许建筑调试并从命令行释放。这意味着如果我们想使用\r\n            来自金星项目的活动解决方案配置的项目配置，我们总是会\r\n            最终进行调试，无法建立发行配置。为了解决这个问题，\r\n            我们使用特殊机制来选择ASP.NET项目配置：我们将其设置为发布\r\n            我们正在构建发布解决方案配置，如果我们要建立调试解决方案，请进行调试\r\n            配置。该属性也可以从命令行设置，在这种情况下进行\r\n            比该算法的优先级。\r\n            \r\n","\r\n            The delegate registered with the ProjectRootElement to be called if the file name\r\n            is changed. Retained so that ultimately it can be unregistered.\r\n            If it has been set to null, the project has been unloaded from its collection.\r\n            ":"\r\n            如果文件名称\r\n            已更改。保留，以最终可以没有注册。\r\n            如果设置为空，则该项目已从其集合中卸载。\r\n            \r\n","\r\n            Parses out the logger parameters from the Parameters string.\r\n            ":"\r\n            从参数字符串中解析记录参数。\r\n            \r\n","\r\n            Handler for build started events\r\n            ":"\r\n            构建开始活动的处理程序\r\n            \r\n","\r\n            No further work units should be executed.\r\n            ":"\r\n            不应执行进一步的工作单位。\r\n            \r\n","File information which describes where the warning happened":"描述警告发生在何处的文件信息\r\n","\r\n            Null if this is a ProjectRootElement.\r\n            Null if this has not been attached to a parent yet.\r\n            ":"\r\n            null如果这是一个项目首席。\r\n            null如果尚未将其附加到父母身上。\r\n            \r\n"," \r\n            (i.e., these two properties are ignored if ":" \r\n            （即，如果这两个属性被忽略\r\n","\r\n            Clears out all of the cached information.\r\n            ":"\r\n            清除所有缓存信息。\r\n            \r\n","\r\n            This differs from the BuildProcessEnvironment in that there are certain MSBuild-specific properties which are added, and those environment variables which\r\n            would not be valid as MSBuild properties are removed.\r\n            ":"\r\n            这与buildProcessenvironment不同，因为添加了某些MSBUILD特定属性，以及这些环境变量\r\n            由于MSBUILD属性被删除，因此无效。\r\n            \r\n","The event properties.":"事件属性。\r\n","\r\n            This class is thread-safe.\r\n            ":"\r\n            此类是线程安全。\r\n            \r\n","\r\n            The time spent interning.\r\n            ":"\r\n            花费的时间。\r\n            \r\n","True to skip the target, false otherwise.":"确实跳过目标，否则为错误。\r\n","\r\n            The project file.  If set to String.Empty, all projects will use the specified affinity.  If set to null, all affinities will be cleared.\r\n            ":"\r\n            项目文件。如果设置为string.empty，所有项目将使用指定的亲和力。如果设置为零，将清除所有亲和力。\r\n            \r\n","A new instance item.":"一个新实例项目。\r\n","Expects the expander to have a default item factory set":"期望扩展器具有默认项目工厂集\r\n","\r\n            This class is used to generate an MSBuild wrapper project for a solution file.\r\n            ":"\r\n            此类用于生成解决方案文件的MSBUILD包装器项目。\r\n            \r\n","\r\n            Apply a parameter.\r\n            NOTE: This method was public by accident in Whidbey, so it cannot be made internal now. It has \r\n            no good reason for being public.\r\n            ":"应用参数。\r\n            注意：此方法在Whidbey中是偶然的，因此现在无法内部。它有\r\n            没有充分的公开理由。\r\n            \r\n","\r\n            Whatever MaxPlatformVersion we found in the manifest\r\n            ":"\r\n            我们在清单中发现的任何MaxPlatFormversion\r\n            \r\n","?\r\n            ":"？\r\n            \r\n","\r\n            Whether the current appdomain has an out of proc node.\r\n            ":"\r\n            当前的AppDomain是否具有未proc节点。\r\n            \r\n","\r\n            UNDONE: (Performance) This algorithm should be modified so we don't have to iterate over all of the \r\n            requests to find a matching one.  A HashSet with proper equality semantics and a good hash code for the BuildRequest\r\n            would speed this considerably, especially for large numbers of projects in a build.\r\n            ":"\r\n            撤消：（性能）应修改此算法，以便我们不必迭代所有内容\r\n            要求找到匹配的请求。具有适当平等语义和良好哈希代码的标签\r\n            将大大加快这一速度，尤其是对于构建中的大量项目。\r\n            \r\n","the default tools version if available, or null otherwise":"默认工具版本（如果可用）或否则为null\r\n","\r\n            Overload of ":"\r\n            超负荷\r\n","\r\n            Global/environment/toolset properties are the minority;\r\n            they don't originate with XML, so we must store their name (instead)\r\n            ":"\r\n            全球/环境/工具集属性是少数；\r\n            它们不起源于XML，因此我们必须存储它们的名称（而是）\r\n            \r\n","\r\n            Records of the amount of time spent in each of the states.\r\n            ":"\r\n            每个州花费的时间的记录。\r\n            \r\n","\r\n            PlatformIdentity if it exists in the appx manifest for this sdk.\r\n            ":"\r\n            平台身份如果它存在于该SDK的APPX清单中。\r\n            \r\n","\r\n            The invalid node request id\r\n            ":"\r\n            无效的节点请求ID\r\n            \r\n","\r\n            The process id\r\n            ":"\r\n            过程ID\r\n            \r\n","\r\n            Constructor for the case where we have most or all information.\r\n            Numerical values must be 1-based, non-negative; 0 indicates unknown\r\n            File may be null, indicating the file was not loaded from disk.\r\n            ":"\r\n            我们拥有大多数或所有信息的情况的构造函数。\r\n            数值必须基于1个，非负值； 0表示未知\r\n            文件可能为null，表明该文件未从磁盘加载。\r\n            \r\n",", but uses segmented\r\n            arrays to avoid allocations in the Large Object Heap.":"，但使用分段\r\n            阵列以避免在大物体堆中分配。\r\n","\r\n                Constructor\r\n            ":"\r\n                构造函数\r\n            \r\n","\r\n            Get a read-only collection of the child imports\r\n            ":"\r\n            获取只读的孩子进口的收藏\r\n            \r\n","\r\n            File where this target was declared.\r\n            ":"\r\n            文件宣布该目标的位置。\r\n            \r\n","\r\n            The sub-toolset version we should use during the build, used to determine which set of sub-toolset\r\n            properties we should merge into this toolset.\r\n            ":"\r\n            我们在构建过程中应使用的子量表版本，用于确定哪一组子量表\r\n            属性我们应该合并到此工具集中。\r\n            \r\n","\r\n            Constructs a BuildEventContext\r\n            ":"\r\n            构建一个buildEventContext\r\n            \r\n",", it is a singleton for the main process.  To get an instance of it, you\r\n             must have access to an ":"，这是主要过程的单身人士。为了获得一个实例，您\r\n             必须访问\r\n","\r\n            Cancels the process executing the task by asking it to close nicely, then after a short period, forcing termination.\r\n            ":"\r\n            通过要求其良好关闭，然后在短时间后迫使终止来取消执行任务的过程。\r\n            \r\n","\r\n            Convenience method to add a piece of metadata to this item.\r\n            Adds after any existing metadata. Does not modify any existing metadata.\r\n            ":"\r\n            在此项目中添加一块元数据的便利方法。\r\n            在任何现有的元数据之后添加。不会修改任何现有的元数据。\r\n            \r\n","\r\n            The minimum message importance corresponding to this logger's verbosity or (MessageImportance.High - 1)\r\n            if this logger does not log messages of any importance.\r\n            ":"\r\n            最小消息重要性对应于该记录器的冗长或（messageimportance.high -1）\r\n            如果此记录器未记录任何重要性的消息。\r\n            \r\n","\r\n            Valid attributes on target element\r\n            ":"\r\n            目标元素上的有效属性\r\n            \r\n","\r\n            The communication link failed.\r\n            ":"\r\n            通信链接失败。\r\n            \r\n","\r\n            Gets or sets the set of global properties to remove.\r\n            ":"\r\n            获取或设置要删除的全局属性集。\r\n            \r\n","\r\n            Name of the target\r\n            ":"\r\n            目标名称\r\n            \r\n","\r\n            Evaluate a given condition\r\n            ":"\r\n            评估给定的条件\r\n            \r\n","\r\n            Contains all of the original items at this level in the Lookup\r\n            ":"\r\n            在查找中包含此级别的所有原始项目\r\n            \r\n","The disk roots used to gather installed SDKs.":"磁盘根用于收集已安装的SDK。\r\n","\r\n            Private method: generates an MSBuild wrapper project for the solution passed in; the MSBuild wrapper\r\n            project to be generated is the private variable \"msbuildProject\" and the SolutionFile containing information\r\n            about the solution is the private variable \"solutionFile\"\r\n            ":"\r\n            私人方法：为传递的解决方案生成一个MSBUILD包装器项目； MSBUILD包装纸\r\n            要生成的项目是私有变量“ msbuildproject”和包含信息的解决方案文件\r\n            关于解决方案是私人变量“ solutionfile”\r\n            \r\n","class, IItem":"上课，iITEM\r\n","The original property info that generated this instance.":"生成本实例的原始属性信息。\r\n","\r\n            Constructor for items with no metadata.\r\n            Include may be empty.\r\n            Called before the build when virtual items are added, \r\n            and during the build when tasks emit items.\r\n            Mutability follows the project.\r\n            ":"\r\n            没有元数据的物品的构造函数。\r\n            包含可能是空的。\r\n            添加虚拟项目时构建之前调用\r\n            在构建期间，任务发出项目。\r\n            项目遵循该项目。\r\n            \r\n","\r\n            Recursively visits all nodes in the hierarchy.\r\n            ":"\r\n            递归访问层次结构中的所有节点。\r\n            \r\n","\r\n            The unique target outputs.\r\n            ":"\r\n            唯一的目标输出。\r\n            \r\n","\r\n            Parse a ProjectItemGroupElement\r\n            ":"解析一个projectItemgroupelement\r\n            \r\n","\r\n            Execute a PropertyGroup element, including each child property\r\n            ":"\r\n            执行属性组元素，包括每个子属性\r\n            \r\n","\r\n            Implementation of IKeyed exposing the item type, so these \r\n            can be put in a dictionary conveniently.\r\n            ":"\r\n            实施IKEYED公开项目类型，因此\r\n            可以方便地放入字典中。\r\n            \r\n","\r\n            Apply the Update operation to the item if it matches.\r\n            ":"\r\n            如果该项目匹配，则将更新操作应用于该项目。\r\n            \r\n","\r\n            This can be used as a grab bag of additional metadata of this property that are not\r\n            captured by the primary fields. You will need a custom UI to interpret the additional\r\n            metadata since the shipped UI formats can't obviously know about it.\r\n            This field is optional.\r\n            ":"\r\n            这可以用作该物业的额外元数据的抓袋\r\n            由主要字段捕获。您将需要一个自定义UI来解释其他\r\n            元数据由于发货的UI格式显然无法知道。\r\n            该字段是可选的。\r\n            \r\n","\r\n            MSBuild file where this task was defined.   \r\n            ":"\r\n            MSBUILD文件定义了此任务。\r\n            \r\n","\r\n            Targets which are the default when no explicit targets are specified.\r\n            ":"\r\n            当未指定明确目标时，默认值是默认值。\r\n            \r\n","\r\n            The externally specified tools version, if any.\r\n            For example, the tools version from a /tv switch.\r\n            Not necessarily the same as the tools version from the project tag or of the toolset used.\r\n            May be null.\r\n            Flows through to called projects.\r\n            ":"\r\n            外部指定的工具版本（如果有）。\r\n            例如，来自A /TV Switch的工具版本。\r\n            不一定与项目标签或所使用工具集的工具版本相同。\r\n            可能是无效的。\r\n            流向调用项目。\r\n            \r\n","\r\n            Logs all the messages that the tool wrote to stdout. The messages\r\n            are read out of the stdout data queue.\r\n            ":"\r\n            记录该工具写给STDOUT的所有消息。消息\r\n            从Stdout数据队列中读取。\r\n            \r\n","\r\n            Translator constructor\r\n            ":"\r\n            翻译器构造函数\r\n            \r\n","\r\n            Gets or sets the before targets\r\n            Only set during evaluation, so does not check for immutability.\r\n            ":"\r\n            获取或设置之前的目标\r\n            仅在评估期间设置，因此不检查不变性。\r\n            \r\n","\r\n            MSBuildExtensionsPathReferenceKind instance for property named \"MSBuildExtensionsPath64\"\r\n            ":"\r\n            MSBUILDEXTENSIONSPATHREFERYKIND的属性实例，名为“ msbuildextensionspath64”\r\n            \r\n","\r\n            The singleton instance for the BuildManager.\r\n            ":"\r\n            BuildManager的单身实例。\r\n            \r\n","\r\n            Recursively called method that clones source nodes into nodes in the destination\r\n            document.\r\n            ":"\r\n            递归称为clones clones节点的方法\r\n            文档。\r\n            \r\n","\r\n            The file from which this particular element originated.  It may\r\n            differ from the ProjectFile if, for instance, it was part of\r\n            an import or originated in a targets file.\r\n            If not known, returns empty string.\r\n            ":"\r\n            该特定元素起源的文件。它可能\r\n            例如，与项目文件有所不同，例如，它是\r\n            导入或起源于目标文件。\r\n            如果尚不清楚，请返回空字符串。\r\n            \r\n","The delegate to use to load if necessary. May be null.":"如有必要，用于加载的委托。可能是无效的。\r\n","Properties to set in the evaluation":"评估中设置的属性\r\n","\r\n            Indicates if the paths of target output items should be rebased relative to the calling project.\r\n            ":"\r\n            指示目标输出项目的路径是否应相对于调用项目重新反复。\r\n            \r\n"," belong to. \r\n            ":" 属于。\r\n            \r\n","\r\n            Location of the task node in the original file\r\n            ":"\r\n            原始文件中任务节点的位置\r\n            \r\n","\r\n            Returns the minimum logging importance that must be logged because there is a possibility that\r\n            at least one registered logger consumes it.\r\n            ":"\r\n            返回必须记录的最低记录重要性，因为有可能\r\n            至少有一个注册的记录器会消耗它。\r\n            \r\n","The forwarding loggers.":"转发伐木者。\r\n","\r\n            There were no matching results, or some implicit targets need to be built.\r\n            ":"\r\n            没有匹配的结果，或者需要建立一些隐式目标。\r\n            \r\n","\r\n            An object representing the identity of a task -- not just task name, but also\r\n            the set of identity parameters\r\n            ":"\r\n            代表任务身份的对象 - 不仅是任务名称，还\r\n            一组身份参数\r\n            \r\n","\r\n            Save the project to the file system, if dirty or the path is different.\r\n            Uses the default encoding.\r\n            ":"\r\n            如果脏或路径不同，则将项目保存到文件系统。\r\n            使用默认编码。\r\n            \r\n","in place":"到位\r\n","\r\n             The target has finished building.  All of the results are in the Lookup.\r\n            \r\n             Transitions:\r\n             None\r\n             ":"\r\n             目标已完成。所有结果都在查找中。\r\n            \r\n             过渡：\r\n             没有任何\r\n             \r\n","\r\n            Get the specified type from the assembly partial name supplied\r\n            ":"\r\n            从提供的汇编部分名称中获取指定类型\r\n            \r\n","List of strings to stringify":"字符串列表\r\n","\r\n            See DisplayName property.\r\n            ":"\r\n            请参阅DisplayName属性。\r\n            \r\n","The cloned metadata.":"克隆的元数据。\r\n","/p:val1,val2,val3":"/p：val1，val2，val3\r\n","\r\n            Lock object.\r\n            ":"\r\n            锁定对象。\r\n            \r\n","\r\n            The provider type\r\n            ":"\r\n            提供商类型\r\n            \r\n","\r\n            The default value for a property is set at the top of the project file (usually via an import of a .props file).\r\n            ":"属性的默认值设置在项目文件的顶部（通常是通过.props文件的导入）。\r\n            \r\n","\r\n            Gets the assembly's shared resources i.e. the resources this assembly shares with other assemblies.\r\n            ":"\r\n            获取大会的共享资源，即与其他组件共享的资源。\r\n            \r\n","\r\n            This class represents a build request as it would be received from an MSBuild callback.  Such requests have\r\n            configurations which have not yet been assigned a global configuration ID, and therefore must be resolved\r\n            with the build manager before a formal request can be sent.\r\n            ":"\r\n            此类代表构建请求，因为它将从MSBUILD回调中收到。这样的请求\r\n            尚未分配全局配置ID的配置，因此必须解决\r\n            使用构建经理在正式请求之前。\r\n            \r\n","\r\n            Simple name for the MSBuild tasks (v4), used for shimming in loading\r\n            task factory UsingTasks\r\n            ":"\r\n            MSBUILD任务的简单名称（V4），用于加载\r\n            任务工厂使用任务\r\n            \r\n","\r\n            Adds a ProjectMetadata to the item. \r\n            This is ONLY called during evaluation and does not affect the XML.\r\n            ":"\r\n            向项目添加一个ProjectMetadata。\r\n            这仅在评估过程中调用，不会影响XML。\r\n            \r\n","\r\n            Creates a new target logging context from an existing project context and target.\r\n            ":"\r\n            从现有项目上下文和目标创建新的目标记录上下文。\r\n            \r\n","The additional targets that need to be taken into account when computing the overall result, if any.":"计算总体结果时需要考虑的其他目标（如果有）。\r\n"," is set. In that case, the parent\r\n            ":" 设置。在这种情况下，父母\r\n            \r\n","ProjectLoadSettings":"ProjectLoadSettings\r\n","\r\n            The value is assumed to be escaped.\r\n            ":"\r\n            假定该值被逃脱了。\r\n            \r\n","\r\n            NotThreadSafe, this method should only be called from the component host thread\r\n            Called by the build component host when a component is first initialized.\r\n            ":"\r\n            notThreadSafe，此方法仅应从组件主机线程调用\r\n            首先初始化组件时，由构建组件主机调用。\r\n            \r\n","\r\n            Returns true if a task host exists that can service the requested runtime and architecture\r\n            values, and false otherwise. \r\n            ":"\r\n            如果任务主机存在可以为请求的运行时和架构服务的任务主机，则返回true\r\n            值，否则为错误。\r\n            \r\n","\r\n            Items encountered during evaluation. These are read during the third evaluation pass.\r\n            Unlike those returned by the Items property, these are ordered with respect to all other items \r\n            encountered during evaluation, not just ordered with respect to items of the same item type.\r\n            In some applications, like the F# language, this complete mutual ordering is significant, and such hosts\r\n            can use this property.\r\n            It does not include any elements whose conditions did not evaluate to true.\r\n            It does not include any items added since the last evaluation.\r\n            ":"\r\n            评估期间遇到的项目。这些是在第三次评估通行证中读取的。\r\n            与项目属性返回的那些不同，这些都是针对所有其他项目的订购\r\n            在评估期间遇到的不仅是相同项目类型的项目的订购。\r\n            在某些应用程序中，例如f＃语言，这种完全的相互订购很重要，此类主机\r\n            可以使用此属性。\r\n            它不包括任何条件未评估为真的要素。\r\n            它不包括自上次评估以来添加的任何项目。\r\n            \r\n","\r\n            Evaluates the provided string by expanding items and properties,\r\n            using the current items and properties available.\r\n            This is useful for the immediate window.\r\n            Does not expand bare metadata expressions.\r\n            ":"\r\n            通过扩展项目和属性来评估提供的字符串，\r\n            使用当前项目和可用的属性。\r\n            这对于直接窗口很有用。\r\n            不会扩大裸露的元数据表达。\r\n            \r\n","\r\n            The environment which is used at the start of the build\r\n            ":"\r\n            构建开始时使用的环境\r\n            \r\n","\r\n            Returns true if the request can be scheduled to the specified node.\r\n            ":"\r\n            如果可以将请求安排到指定的节点，则返回true。\r\n            \r\n","\r\n            An interface representing results for a specific target\r\n            ":"\r\n            代表特定目标结果的接口\r\n            \r\n","\r\n            Log that a project has started if it is serviced from the cache\r\n            ":"\r\n            如果项目从高速缓存进行维修，则已经开始的日志\r\n            \r\n","\r\n            Accessor for the set of targets currently in progress.\r\n            ":"\r\n            目前正在进行的一组目标的访问者。\r\n            \r\n","\r\n            Gets all the evaluated glob strings (properties expanded) from the include.\r\n            ":"\r\n            获取所有评估的环弦（属性扩展）。\r\n            \r\n","\r\n            Collection type\r\n            This has to be public as cannot change access modifier when overriding  \r\n            ":"\r\n            收集类型\r\n            这必须是公开的，因为覆盖时不能更改访问修饰符\r\n            \r\n","\r\n            Adds an output item to the task.\r\n            ":"\r\n            将输出项添加到任务中。\r\n            \r\n","\r\n            The BuildRequestData being used for this submission.\r\n            ":"\r\n            BuildRequestData用于此提交。\r\n            \r\n","The set of targets to build.":"要建立的目标集。\r\n","\r\n            For purposes of declaring the project that defined this item (for use with e.g. the \r\n            DeclaringProject* metadata), the entrypoint project is used for synthesized items \r\n            like those added by this API. \r\n            ":"\r\n            为了宣布定义此项目的项目（供例如\r\n            声明Project*元数据），入口点项目用于合成项目\r\n            就像该API添加的那些一样。\r\n            \r\n","\r\n            Version associated with this element\r\n            ":"\r\n            与此元素关联的版本\r\n            \r\n","\r\n            Gets the item-spec.\r\n            ":"\r\n            获取项目规格。\r\n            \r\n","\r\n            Gets the global properties\r\n            ":"\r\n            获取全球属性\r\n            \r\n","Flag to determine whether or not to log task inputs.":"标志以确定是否记录任务输入。\r\n","\r\n            Whether something in this data has been modified since evaluation.\r\n            For example, a global property has been set.\r\n            ":"\r\n            自评估以来，这些数据中的某些内容是否已修改。\r\n            例如，已经设置了全球属性。\r\n            \r\n","\r\n            Exclude value cached for performance\r\n            ":"\r\n            排除价值缓存以进行性能\r\n            \r\n","The logging service.":"伐木服务。\r\n","The build configuration response.":"构建配置响应。\r\n","\r\n            Location of the removeMetadata attribute, if any.\r\n            ":"\r\n            removeMetAdata属性的位置（如果有）。\r\n            \r\n","The helpKeyword of the uninitialized property that was read.":"阅读的非初始化属性的HelpKeyword。\r\n","String which identifies the message in the string resx":"字符串标识字符串RESX中的消息\r\n","\r\n            Updates the state of this entry.\r\n            ":"\r\n            更新此条目的状态。\r\n            \r\n","\r\n            The BuildFinished event handler\r\n            ":"\r\n            构建的活动处理程序\r\n            \r\n","\r\n            The TaskFinished logging event\r\n            ":"\r\n            任务登录活动\r\n            \r\n","\r\n            Intrinsic function that returns a boolean to indicate if any of the items have the given metadata value\r\n            Using a case insensitive comparison\r\n            ":"\r\n            返回布尔值的固有函数，以指示任何项目是否具有给定的元数据值\r\n            使用案例不敏感的比较\r\n            \r\n","\r\n            Rename an entry in the cache.\r\n            Entry must already be in the cache.\r\n            ":"\r\n            重命名缓存中的条目。\r\n            条目必须已经在缓存中。\r\n            \r\n","\r\n            Accumulated target performance information.\r\n            ":"\r\n            累积目标绩效信息。\r\n            \r\n","\r\n            Event which is fired when a project is marked dirty.\r\n            ":"\r\n            当项目被标记为肮脏时被解雇的事件。\r\n            \r\n","\r\n            Writes a message to the console, aligned and formatted to fit within the console width\r\n            ":"\r\n            写信给控制台，对齐和格式化以适合控制台宽度\r\n            \r\n","\r\n            Custom help keyword associated with event.\r\n            ":"\r\n            与事件关联的自定义帮助关键字。\r\n            \r\n","\r\n            Creates a CircularDependency response.\r\n            ":"\r\n            创建一个循环依赖性响应。\r\n            \r\n","\r\n            This is a multiplexing logger. The purpose of this logger is to allow the registration and deregistration of \r\n            multiple loggers during the build. This is to support the VS IDE scenario where loggers are registered and unregistered\r\n            for each project system's build request. This means one physical build may have multiple logical builds\r\n            each with their own set of loggers. \r\n            \r\n            The Mux logger will register itself with the build manager as a regular central /l style logger. \r\n            It will be responsible for receiving messages from the build manager and route them to the correct\r\n            logger based on the logical build the message came from.\r\n            \r\n            Requirements:\r\n                1) Multiplexing logger will be registered at the beginning of the build manager's Begin build\r\n                    Any loggers registered before the build manager actually started building will get the build started event at the same time as the MUX logger\r\n                    Any loggers registered after the build manager starts the build will get a synthesised build started event. The event cannot be cached because the \r\n                    timestamp of the build started event is determined when the event is created, caching the event would give incorrect build times in the loggers registered to the MUX.\r\n                    \r\n                2) The MUX logger will be initialized by the build manager.\r\n                    The mux will listen to all events on the event source from the build manager and will route events correctly to the registered loggers.\r\n                \r\n                3) The MUX logger will be shutdown when the build is finished in end build . At this time it will un-register any loggers attached to it.\r\n                \r\n                4) The MUX logger will log the build finished event when the project finished event for the first project started event is seen for each logger.\r\n               \r\n            Registering Loggers:\r\n            \r\n            The multiplexing logger will function in the following way:\r\n                A logger will be passed to the MUX Register logger method with a submission ID which will be used to route a the message to the correct logger.\r\n                A new event source will be created so that the logger passed in can be registered to that event source\r\n                If the build started event has already been logged the MUX logger will create a new BuildStartedEvent and send that to the event source.\r\n                \r\n            UnregisterLoggers:\r\n                When a build submission is completed the UnregisterLoggers method will be called with the submission ID.\r\n                At this point we will look up the success state of the project finished event for the submission ID and log a build finished event to the logger.\r\n                The event source will be cleaned up.  This may be interesting because the unregister will come from a thread other than what is doing the logging.\r\n                This may create a Synchronization issue, if unregister is called while events are being logged.\r\n                \r\n            UNDONE: If we can use ErrorUtilities, replace all InvalidOperation and Argument exceptions with the appropriate calls.\r\n            \r\n            ":"\r\n            这是一个多路复用记录器。该记录仪的目的是允许注册和删除\r\n            构建过程中多个登录器。这是为了支持与登记符注册和未注册的VS IDE方案\r\n            对于每个项目系统的构建请求。这意味着一个物理构建可能具有多个逻辑构建\r\n            每个都有自己的伐木者集。\r\n            \r\n            MUX Logger将以常规的中央 /L样式记录器为构建管理器注册。\r\n            它将负责从构建管理器接收消息，并将其路由到正确\r\n            基于逻辑构建的记录器消息来自。\r\n            \r\n            要求：\r\n                1）多路复用记录器将在构建管理器的开始构建开始时注册\r\n                    在构建经理实际启动之前注册的任何登记仪都将与MUX Logger同时获得构建启动事件\r\n                    构建管理器启动后注册的所有登录器将获得合成的构建启动事件。该事件无法缓存，因为\r\n                    确定在创建事件时确定构建启动事件的时间戳，缓存该事件将在注册到MUX的登录器中给出错误的构建时间。\r\n                    \r\n                2）MUX记录仪将由Build Manager初始化。\r\n                    MUX将从build Manager中收听事件源上的所有事件，并将正确将事件路由到已注册的记录仪。\r\n                \r\n                3）当构建在最终构建中完成时，MUX记录器将关闭。目前，它将取消登记附加的任何登录器。\r\n                \r\n                4）MUX LOGGER将在每个记录器的第一个项目启动事件的项目完成事件时记录构建完成事件。\r\n               \r\n            注册日志：\r\n            \r\n            多路复用记录器将以以下方式运行：\r\n                记录器将传递给具有提交ID的MUX寄存器记录器方法，该方法将用于将消息路由到正确的记录器。\r\n                将创建一个新的事件源，以便可以将记录器传递给该事件源\r\n                如果已经记录了构建启动事件，则MUX Logger将创建一个新的buildStartedEvent，并将其发送到事件源。\r\n                \r\n            Unregisterlogger：\r\n                构建提交完成后，将使用提交ID调用UnregisterLoggers方法。\r\n                在这一点上，我们将查找提交ID的项目完成事件的成功状态，并将构建成品事件记录到Logger。\r\n                活动源将被清理。这可能很有趣，因为未注册的人将来自除登录以外的线程。\r\n                如果在记录事件时调用未注册的话，这可能会产生同步问题。\r\n                \r\n            撤消：如果我们可以使用错误，请用适当的呼叫替换所有无效和参数异常。\r\n            \r\n            \r\n","\r\n            Placed here to avoid StyleCop error.\r\n            ":"\r\n            放置在这里以避免使用Stylecop错误。\r\n            \r\n","\r\n            Gets the global request id of the parent request.\r\n            ":"\r\n            获取父请求的全局请求ID。\r\n            \r\n","\r\n            Get any child metadata.\r\n            ":"\r\n            获取任何孩子元数据。\r\n            \r\n","Thrown if a build is already in progress.":"如果已经进行了构建，则会投掷。\r\n","\r\n            \r\n             The first MSBuild call re-invokes the solution project instructing it to build the reference projects for the\r\n             current project.  The second MSBuild call invokes the actual project itself.  Because all reference projects have\r\n             the same additional properties, MSBuild will only build the first one it comes across and the rest will be\r\n             satisfied from the cache.\r\n             ":"\r\n            \r\n             第一个MSBUILD呼叫重新启动解决方案项目，指示其构建参考项目\r\n             当前的项目。第二个MSBUILD呼叫调用实际项目本身。因为所有参考项目都有\r\n             同样的其他属性，MSBuild将仅构建它遇到的第一个属性，其余的将是\r\n             从缓存中满足。\r\n             \r\n","\r\n            Reload the existing project root element from the given ":"\r\n            从给定的现有项目根元素重新加载\r\n","\r\n            Logs an error regarding an invalid project file . Since this method may be multiple times for the same InvalidProjectException\r\n            we do not want to log the error multiple times. Once the exception has been logged we set a flag on the exception to note that\r\n            it has already been logged.\r\n            ":"\r\n            记录有关无效项目文件的错误。由于此方法可能是相同无效的Exception多次\r\n            我们不想多次记录错误。一旦记录了例外，我们在例外设置标志，请注意\r\n            它已经被记录了。\r\n            \r\n","\r\n            Adds the specified build result to the cache\r\n            ":"\r\n            将指定的构建结果添加到缓存\r\n            \r\n","\r\n            Common code for the constructors that evaluate directly.\r\n            Global properties may be null.\r\n            Tools version may be null.\r\n            Does not set mutability.\r\n            ":"\r\n            直接评估的构造函数的通用代码。\r\n            全局属性可能为零。\r\n            工具版本可能为空。\r\n            不设置可变性。\r\n            \r\n","The lower bound of target array must be zero.":"目标阵列的下限必须为零。\r\n","\r\n            The task logging helper\r\n            ":"\r\n            任务记录助手\r\n            \r\n","\r\n            The project logging context\r\n            ":"\r\n            项目记录上下文\r\n            \r\n","\r\n            Constructs a generic evaluation location based on a (possibly null) parent Id.\r\n            ":"\r\n            基于（可能为null）父ID构建通用评估位置。\r\n            \r\n","\r\n                Constructs a graph starting from the given project files, evaluating with the global project collection and no\r\n                global properties.\r\n            ":"\r\n                从给定的项目文件开始构造图形，用全局项目集合评估\r\n                全球属性。\r\n            \r\n","\r\n            Constructor that also associates a set of properties with the tools version\r\n            ":"\r\n            还将一组属性与工具版本关联的构造函数\r\n            \r\n","\r\n              Note: Use ":"\r\n              注意：使用\r\n","The list of strings to which this should be added, if it is not empty.":"如果不为空的字符串列表应添加此字符串。\r\n","\r\n            Invalid\r\n            ":"\r\n            无效的\r\n            \r\n","The original item data":"原始项目数据\r\n","current project file":"当前的项目文件\r\n","\r\n            Given a task name and a list of records which may contain the task, this helper method will ask the records to see if the task name \r\n            can be created by the factories which are wrapped by the records. (this is done by instantiating the task factory and asking it).\r\n            ":"\r\n            给定一个任务名称和可能包含任务的记录列表，此辅助方法将要求记录查看任务名称是否\r\n            可以由记录包裹的工厂创建。 （这是通过实例化任务工厂并询问它来完成的）。\r\n            \r\n","\r\n            Copy constructor (called via Clone() - clearer semantics)\r\n            ":"\r\n            复制构造函数（通过clone（）称为 - 更清晰的语义）\r\n            \r\n","\r\n            Used to load information about MSBuild override tasks i.e. tasks that override tasks declared in tasks or project files.\r\n            ":"\r\n            用于加载有关MSBUILD覆盖任务的信息，即覆盖任务或项目文件中声明的任务的任务。\r\n            \r\n","\r\n            Wraps an unevaluated item under an itemgroup in a target.\r\n            Immutable.\r\n            ":"\r\n            将目标组下的未评估项目包裹在目标中。\r\n            不变。\r\n            \r\n","\r\n            Takes an item specification, evaluates it and expands it into a list of items\r\n            ":"\r\n            进行项目规范，对其进行评估并将其扩展为项目列表\r\n            \r\n","\r\n            Given the task name, this method tries to find the task. It uses the following search order:\r\n            1) checks the tasks declared by the project, searching by exact name and task identity parameters\r\n            2) checks the global task declarations (in *.TASKS in MSbuild bin dir), searching by exact name and task identity parameters\r\n            3) checks the tasks declared by the project, searching by fuzzy match (missing namespace, etc.) and task identity parameters\r\n            4) checks the global task declarations (in *.TASKS in MSbuild bin dir), searching by fuzzy match (missing namespace, etc.) and task identity parameters\r\n            5) 1-4 again in order without the task identity parameters, to gather additional information for the user (if the task identity \r\n               parameters don't match, it is an error, but at least we can return them a more useful error in this case than just \"could not \r\n               find task\")\r\n            \r\n            The search ordering is meant to reduce the number of assemblies we scan, because loading assemblies can be expensive.\r\n            The tasks and assemblies declared by the project are scanned first, on the assumption that if the project declared\r\n            them, they are likely used.\r\n            \r\n            If the set of task identity parameters are defined, only tasks that match that identity are chosen. \r\n            ":"\r\n            给定任务名称，此方法试图找到任务。它使用以下搜索顺序：\r\n            1）检查项目声明的任务，按确切名称和任务标识参数进行搜索\r\n            2）检查全局任务声明（在MSBuild bin dir中的 *.tasks中），按确切名称和任务身份参数进行搜索\r\n            3）检查项目声明的任务，通过模糊匹配（缺少名称空间等）和任务身份参数进行搜索\r\n            4）检查全局任务声明（在MSBUILD bin dir中的 *.tasks），通过模糊匹配（缺少名称空间等）和任务身份参数搜索\r\n            5）1-4在没有任务身份参数的情况下再次顺序为用户收集其他信息（如果任务身份\r\n               参数不匹配，这是一个错误，但是至少在这种情况下，我们可以将它们返回更有用的错误，而不是“不能\r\n               查找任务”）\r\n            \r\n            搜索订单旨在减少我们扫描的组件数量，因为加载组件可能很昂贵。\r\n            首先对项目声明的任务和组件进行扫描，假设如果该项目声明为\r\n            他们很可能被使用。\r\n            \r\n            如果定义了一组任务身份参数，则仅选择匹配该身份的任务。\r\n            \r\n","\r\n            Serializes to a stream through a binary writer\r\n            ":"\r\n            通过二进制作家序列到流\r\n            \r\n","\r\n            This class is used to inform the Scheduler that a request on a node is being blocked from further progress.  There\r\n            are two cases for this:\r\n            1) The request may be blocked waiting for a target to complete in the same project but which is assigned to\r\n               another request.\r\n            2) The request may be blocked because it has child requests which need to be satisfied to proceed.\r\n            ":"\r\n            该类用于通知调度程序，节点上的请求正在从进一步的进一步进展中阻止。那里\r\n            有两种情况：\r\n            1）可能会阻止请求，等待目标在同一项目中完成，但分配给\r\n               另一个请求。\r\n            2）可能会阻止请求，因为它具有需要满足的子女请求。\r\n            \r\n","\r\n            Adds a set of warning codes to treat as errors for the specified project instance ID.\r\n            ":"\r\n            添加了一组警告代码，以作为指定项目实例ID的错误。\r\n            \r\n","\r\n            The result of executing the task or target.\r\n            ":"\r\n            执行任务或目标的结果。\r\n            \r\n","\r\n            Enumeration of the search paths for the property.\r\n            ":"\r\n            属性搜索路径的枚举。\r\n            \r\n","\r\n            Constructor for types that don't have values\r\n            ":"\r\n            没有值的类型的构造函数\r\n            \r\n","\r\n            Type of handler for ErrorRaised events\r\n            ":"\r\n            发生错误的事件的处理程序类型\r\n            \r\n","The ProjectCollection from which the BuildParameters should populate itself.":"BuildParameters应该自行填充的项目汇编。\r\n","The root registry location for the targeted framework. For .NET this is SOFTWARE\\MICROSOFT\\.NETFramework":"目标框架的根注册处位置。对于.net这是软件\\ Microsoft \\ .netframework\r\n","\r\n            Column number of interest in associated file.\r\n            ":"\r\n            关联文件中的兴趣列。\r\n            \r\n","\r\n            Gets the task name\r\n            ":"\r\n            获取任务名称\r\n            \r\n","\r\n            Friendly name of the state, such as method name.\r\n            Never null.\r\n            ":"\r\n            状态的友好名称，例如方法名称。\r\n            永不零。\r\n            \r\n","\r\n            Appends a command-line switch that takes a string[] parameter, not quoting the individual parameters\r\n            This method appends a space to the command line (if it's not currently empty) before the switch.\r\n            ":"\r\n            附加命令行开关，该开关获取字符串[]参数，而不是引用单个参数\r\n            此方法在开关之前将一个空间附加到命令行（如果当前不是空）。\r\n            \r\n","\r\n            The task items that we remoted across the appdomain boundary\r\n            we use this list to disconnect the task items once we're done.\r\n            ":"\r\n            我们在AppDomain边界上远离的任务项\r\n            完成后，我们使用此列表来断开任务项。\r\n            \r\n"," that combines all globs in the include element and ignores\r\n             all the fragments in the exclude attribute and all the fragments in all Remove elements that apply to the include element.\r\n             \r\n             Users can construct a composite glob that incorporates all the globs in the Project:\r\n             ":" 将所有地球结合在包含元素中，忽略\r\n             排除属性中的所有片段和所有删除适用于Incluber元素的元素中的所有片段。\r\n             \r\n             用户可以构建一个合并到项目中的全球的复合地球：\r\n             \r\n","\r\n            Should the inprocess node be shutdown when the build finishes. By default this is false\r\n            since visual studio needs to keep the inprocess node around after the build has finished.\r\n            ":"\r\n            构建完成时，应关闭InProcess节点。默认情况下这是错误的\r\n            由于Visual Studio需要在构建完成后保持Inprocess节点。\r\n            \r\n","\r\n            Parameter for EnterState.\r\n            Stored on a stack only for verification that enters and leaves are matched.\r\n            ":"\r\n            遗产的参数。\r\n            仅存储在堆栈上以进行验证，并匹配进入和叶子。\r\n            \r\n","List of targets to build.":"构建目标列表。\r\n","\r\n            Gets all of the outputs and stores them in the batch bucket.\r\n            ":"\r\n            获取所有输出，并将它们存储在批处理中。\r\n            \r\n","\r\n            Verifies that an element is in the MSBuild namespace, otherwise throws an InvalidProjectFileException.\r\n            ":"\r\n            验证元素是否在MSBUILD名称空间中，否则会引发无效的fileException。\r\n            \r\n","\r\n            Reads a string value from the specified registry key\r\n            ":"\r\n            从指定的注册表密钥读取字符串值\r\n            \r\n","\r\n            Helper to get the value of a built-in metadatum with\r\n            the specified name, if any.\r\n            If value is not available, returns empty string.\r\n            ":"\r\n            帮助您获得内置元数据的价值\r\n            指定的名称（如果有）。\r\n            如果值不可用，请返回空字符串。\r\n            \r\n","used to specify the desired optimization type. All the\r\n            admissible values for this property have switches, e.g. ":"用于指定所需的优化类型。所有\r\n            该属性的可接受值具有开关，例如\r\n","\r\n            Retrieves the Submission id.\r\n            ":"\r\n            检索提交ID。\r\n            \r\n","\r\n            Empty dictionary with a ":"\r\n            空词典带有\r\n","The list of properties whose values should be transferred from the project to any out-of-proc node.":"应将其值从项目传输到任何传播的节点的属性列表。\r\n","The list of parameter values":"参数值列表\r\n","\r\n            Engine Logging Service reference where events will be logged to\r\n            ":"\r\n            引擎记录服务参考将记录事件\r\n            \r\n","The events available to loggers.":"伐木者可用的活动。\r\n","A parsed ":"解析\r\n","\r\n            64-bit Intel process\r\n            ":"\r\n            64位英特尔过程\r\n            \r\n","\r\n            Not for internal use.\r\n            ":"\r\n            不用于内部用途。\r\n            \r\n","\r\n            Intentionally do not include MSBuildExtensionsPath* or MSBuildUserExtensionsPath in this list.  We need tasks to be able to override those.\r\n            ":"\r\n            有意在此列表中不包括msbuildextensionspath*或msbuilduserextensionspath。我们需要任务才能覆盖这些任务。\r\n            \r\n","\r\n            Used to cache tag names in loaded files.\r\n            ":"\r\n            用于在加载文件中缓存标签名称。\r\n            \r\n","\r\n            Enter a state and push it onto the 'virtual callstack'.\r\n            If the user set a a breakpoint at the source location associated with \r\n            this state, this call will hit that breakpoint.\r\n            Call LeaveState when the interpreter is finished with this state.\r\n            State must have already been defined.\r\n            ":"\r\n            输入状态并将其推到“虚拟呼叫扇形”上。\r\n            如果用户在与之关联的源位置设置了一个断点\r\n            这个状态，此通话将达到该断点。\r\n            当口译员用此状态完成时，请致电Leavestate。\r\n            状态必须已经定义。\r\n            \r\n","\r\n                Get an unordered collection of all project nodes in the graph.\r\n            ":"\r\n                获取图中所有项目节点的无序集合。\r\n            \r\n","true if comprises UNC pattern.":"如果包含UNC模式，则为正确。\r\n","\r\n            Unordered collection of evaluated metadata on the item.\r\n            If there is no metadata, returns an empty collection.\r\n            Does not include built-in metadata.\r\n            Includes any from item definitions not masked by directly set metadata.\r\n            This is a read-only collection. To modify the metadata, use ":"\r\n            该项目上评估的元数据的无序集合。\r\n            如果没有元数据，请返回一个空的收藏。\r\n            不包括内置元数据。\r\n            包括任何未直接设置元数据的项目定义中的任何定义。\r\n            这是一个只读的集合。要修改元数据，请使用\r\n","\r\n            Variation to handle arrays, to help with logging the parameters.\r\n            ":"\r\n            处理数组的变化，以帮助记录参数。\r\n            \r\n","\r\n            This interface adds escaping support to the ITaskItem interface.\r\n            ":"\r\n            该接口将逃避支持添加到ITASPITEM接口。\r\n            \r\n","\r\n            If the string is null or empty, no dependency is added and this is not considered an error.\r\n            ":"\r\n            如果字符串为空或空，则不会添加依赖关系，也不认为这是错误。\r\n            \r\n"," containing the outputs of the target.":" 包含目标的输出。\r\n","\r\n            Initialize a parented ProjectMetadataElement\r\n            ":"\r\n            初始化育儿项目\r\n            \r\n","\r\n            This is the publicly exposed getter, that translates into a read-only dead IDictionary<string, string>.\r\n            ":"\r\n            这是公开暴露的getter，转化为仅读取的死idictionary <string，string>。\r\n            \r\n","\r\n            The arguments for the function.\r\n            ":"\r\n            该功能的论点。\r\n            \r\n","\r\n            Use this for File.GetLastWriteTimeUtc(path)\r\n            ":"\r\n            将其用于file.getLastWriteTimeUtc（path）\r\n            \r\n","\r\n            Initialize an unparented ProjectTargetElement\r\n            ":"\r\n            初始化无与伦比的ProjectTargetElement\r\n            \r\n",". Those who manually \r\n            instantiate this class should remember to call ":"。那些手动的人\r\n            实例化此课程应该记得打电话\r\n","The batching bucket.":"批处理。\r\n","\r\n            Records performance information consumed by a task or target.\r\n            ":"\r\n            记录任务或目标消耗的性能信息。\r\n            \r\n","true if all targets built successfully; false if any target fails":"如果所有目标成功建立，则为真实；如果任何目标失败，则为false\r\n","The source list to return metadata from.":"从返回元数据的源列表。\r\n","\r\n            What if we halved the size of the Mru lists?\r\n            ":"\r\n            如果我们将MRU列表的大小减半怎么办？\r\n            \r\n","\r\n            Item definitions are stored in one single table shared by all items of a particular item type.\r\n            \r\n            When an item is created from another item, such as by using an expression like Include=\"@(x)\",\r\n            any item definition metadata those source items have must override any item definition metadata \r\n            associated with the new item type. \r\n            \r\n            Copying all those item definition metadata into real metadata on this item would be very inefficient, because\r\n            it would turn a single shared table into a separate table for every item.\r\n            \r\n            Instead, we get a reference to the item definition of the source items, and consult\r\n            that table before we consult our own item type's item definition. Since item definitions can't change at this point,\r\n            it's safe to reference their original table.\r\n            \r\n            If our item gets copied again, we need a reference to the inherited item definition and we need the real item\r\n            definition of the source items. Thus a list is created. On copying, a list is created, beginning with a clone\r\n            of any list the source item had, and ending with the item definition list of the source item type.\r\n            \r\n            When we look up a metadata value we look at \r\n            (1) directly associated metadata and built-in metadata\r\n            (2) the inherited item definition list, starting from the top\r\n            (3) the item definition associated with our item type\r\n            ":"\r\n            项目定义存储在由特定项目类型的所有项目共享的一个表中。\r\n            \r\n            当从另一个项目中创建一个项目时，例如使用诸如include =“@（x）”之类的表达式\r\n            这些源项目的任何项目定义元数据必须覆盖任何项目定义元数据\r\n            与新项目类型相关联。\r\n            \r\n            将所有这些项目定义元数据复制到该项目上的真实元数据中，将非常降低，因为\r\n            它将单个共享表变成每个项目的单独表。\r\n            \r\n            相反，我们获得了源项目的项目定义，并咨询\r\n            在我们咨询自己的项目类型的项目定义之前，该表。由于项目定义目前无法更改，\r\n            可以肯定地参考他们的原始表。\r\n            \r\n            如果我们的项目再次复制，我们需要对继承的项目定义进行引用，我们需要真实的项目\r\n            源项目的定义。因此创建了一个列表。在复制时，创建了一个列表，以克隆开始\r\n            源项目具有的任何列表中，并以源项目类型的项目定义列表结尾。\r\n            \r\n            当我们查找元数据值时，我们会查看\r\n            （1）直接关联元数据和内置元数据\r\n            （2）继承的项目定义列表，从顶部开始\r\n            （3）与我们的项目类型关联的项目定义\r\n            \r\n","\r\n                Common ":"\r\n                常见的\r\n","\r\n            Gets or sets the TrimDuplicateOutputs value. \r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"\r\n            获取或设置trimduplicateOutputs值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n","\r\n            Enumerator over all item definitions.\r\n            Exposed for debugging display.\r\n            Ideally the dictionary would be exposed, but there are \r\n            covariance problems. (A dictionary of Key, Value cannot be upcast\r\n            to a Dictionary of Key, IValue).\r\n            ":"\r\n            枚举所有项目定义。\r\n            暴露于调试显示。\r\n            理想情况下，词典会暴露出来，但是有\r\n            协方差问题。 （关键的字典，值无法升级\r\n            到Key的字典，Ivalue）。\r\n            \r\n","\r\n            The Build Request Configuration Cache\r\n            ":"\r\n            构建请求配置缓存\r\n            \r\n","\r\n            Simplified registry access delegate. Given a baseKey and subKey, get the default value\r\n            of the subKey.\r\n            ":"\r\n            简化的注册表访问委托。给定一个basekey和subkey，获取默认值\r\n            子钥匙。\r\n            \r\n","Type of the items that should be returned.":"应返回的项目的类型。\r\n","\r\n            Gets the lazy cache for the specified lifetime.\r\n            ":"\r\n            获取指定寿命的懒惰缓存。\r\n            \r\n","\r\n            Message sent back to a node when an SDK has been resolved.\r\n            ":"\r\n            解决SDK时，消息发送回到节点。\r\n            \r\n","\r\n            Creates a SubmissionComplete response.\r\n            ":"\r\n            创建提交复杂的响应。\r\n            \r\n","\r\n            Figure out what ToolsVersion to use to actually build the project with. \r\n            ":"\r\n            找出实际构建项目的工具交换。\r\n            \r\n","\r\n            Extra flags for this BuildRequest.\r\n            ":"\r\n            此BuildRequest的额外标志。\r\n            \r\n","The specified path with a trailing slash.":"指定的路径带有尾斜线。\r\n","True if the configuration should also be loaded.":"如果还应加载配置，则为正确。\r\n"," to create an\r\n                ":" 创建一个\r\n                \r\n","\r\n            Total number of calls so far.\r\n            ":"\r\n            到目前为止的电话总数。\r\n            \r\n","\r\n            Deprecated. Does nothing.\r\n            ":"\r\n            弃用。什么也没做。\r\n            \r\n","\r\n            Construct over a ProjectRootElement object, evaluating with the global project collection's\r\n            global properties and default tools version.\r\n            Project is added to the global project collection if it has a name, or else when it is named.\r\n            Throws InvalidProjectFileException if the evaluation fails.\r\n            Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.\r\n            ":"\r\n            通过ProjectRootelement对象构建，并评估全球项目集合的\r\n            全局属性和默认工具版本。\r\n            如果项目收集具有名称，则将其添加到全局项目集合中。\r\n            如果评估失败，则投掷无效的fileException。\r\n            如果项目集合中已经加载了等效的项目，则投掷无效的exception。\r\n            \r\n","The filespec to evaluate, escaped.":"评估，逃脱的文件。\r\n","\r\n            Pretty prints an evaluation location in tab separated value (TSV) format\r\n            ":"\r\n            漂亮在选项卡分离值（TSV）格式中打印一个评估位置\r\n            \r\n","KeyNotFoundException is returned if the specified target doesn't exist when reading this property.":"如果在阅读此属性时不存在指定的目标，则返回KeynotFoundException。\r\n","\r\n            Location of keepMetadata, if any.\r\n            ":"\r\n            keepmetadata的位置，如果有的话。\r\n            \r\n","\r\n                 A cache hit can use this to instruct MSBuild to build the cheaper version of the targets that the plugin avoided\r\n                 running.\r\n                 For example, GetTargetPath is the cheaper version of Build.\r\n            \r\n                 MSBuild will build the proxy targets and assign their target results to the real targets the mapping points to.\r\n                 The proxy targets are left in the build result (i.e., both GetTargetPath and Build will appear in the build result).\r\n                 Real targets can be committed in which case msbuild only keeps the proxy target in the build result.\r\n             ":"\r\n                 缓存命中可以用它来指示MSBUILD构建插件避免的廉价版本\r\n                 跑步。\r\n                 例如，GetTargetPath是廉价版本的构建版本。\r\n            \r\n                 MSBUILD将构建代理目标，并将其目标结果分配给映射点的真实目标。\r\n                 代理目标留在构建结果中（即，getTargetPath和构建都将出现在构建结果中）。\r\n                 可以实现真正的目标，在这种情况下，MSBUILD仅在构建结果中保留代理目标。\r\n             \r\n","The given key '{0}' was not present in the dictionary.":"给定的键'{0}'在字典中不存在。\r\n","\r\n            Re-evaluates the project using the specified logging service.\r\n            ":"\r\n            使用指定的记录服务重新评估项目。\r\n            \r\n","\r\n            Returns true if the supplied string contains a valid property name\r\n            ":"\r\n            如果提供的字符串包含有效的属性名称，则返回true\r\n            \r\n","\r\n            Magic number sent by the client to the host during the handshake.\r\n            Munged version of the host handshake.\r\n            ":"\r\n            客户在握手期间发送给主机的魔术号码。\r\n            主机握手的爆炸版。\r\n            \r\n","\r\n            Turn on statistics gathering.\r\n            ":"\r\n            打开统计收集。\r\n            \r\n","\r\n            The object used to build this request.\r\n            ":"\r\n            用于构建此请求的对象。\r\n            \r\n","\r\n            Handler for project started events\r\n            ":"\r\n            项目的处理程序开始活动\r\n            \r\n","\r\n            Dumps detailed information about a request.\r\n            ":"\r\n            转储有关请求的详细信息。\r\n            \r\n"," members on value types that explicitly implement\r\n            the member.\r\n            ":" 明确实施的价值类型的成员\r\n            成员。\r\n            \r\n","\r\n            Get a fully qualified path to the frameworks root directory.\r\n            ":"\r\n            获取通往框架根目录的完全合格的路径。\r\n            \r\n","The specified arrays must have the same number of dimensions.":"指定的数组必须具有相同数量的尺寸。\r\n","importance of the message":"消息的重要性\r\n","\r\n            When evaluating items, this is the minimum number of items on the running list to use a dictionary-based remove optimization.\r\n            ":"\r\n            评估项目时，这是运行列表上使用基于字典的删除优化的最小项目数量。\r\n            \r\n","\r\n            Deserializes from a stream through a binary reader.\r\n            ":"\r\n            通过二进制读取器从流中进行验证。\r\n            \r\n","\r\n            Loads a project with the specified filename, tools version and global properties.\r\n            If a matching project is already loaded, it will be returned, otherwise a new project will be loaded.\r\n            ":"\r\n            加载一个项目，并带有指定的文件名，工具版本和全局属性。\r\n            如果已经加载了匹配项目，将返回，否则将加载一个新项目。\r\n            \r\n","\r\n            This partial class contains members that are auto-generated, internal, etc. Whereas the\r\n            other partial class contains public properties that can be set in XAML.\r\n            ":"\r\n            该部分类包含自动生成的成员，内部等。\r\n            其他部分类包含可以在XAML中设置的公共属性。\r\n            \r\n","\r\n            Slot for passing operation to the worker thread\r\n            ":"\r\n            用于将操作传递到工作线程的插槽\r\n            \r\n","\r\n            The TLog files that back this structure\r\n            ":"TLOG文件备份此结构\r\n            \r\n","\r\n            Gets the current dependency table.\r\n            ":"\r\n            获取当前的依赖表。\r\n            \r\n","\r\n            An implementation of compare that compares two base\r\n            names as quickly as possible.\r\n            ":"\r\n            比较两个基础的比较的实现\r\n            尽快名称。\r\n            \r\n","event sub-category":"事件子类别\r\n","\r\n            Sets a property which comes from the Xml.\r\n            Predecessor is any immediately previous property that was overridden by this one during evaluation.\r\n            This would include all properties with the same name that lie above in the logical\r\n            project file, and whose conditions evaluated to true.\r\n            If there are none above this is null.\r\n            ":"\r\n            设置来自XML的属性。\r\n            前身是该评估期间该物业被该物业所覆盖的任何属性。\r\n            这将包括所有属性，其名称与逻辑上的同名相同\r\n            项目文件，并评估其条件为true。\r\n            如果上面没有，则无效。\r\n            \r\n","\r\n            The items produced by this target.\r\n            ":"\r\n            该目标生产的项目。\r\n            \r\n","An optional directory to start the search in.  The default location is the directory\r\n                of the file containing the property function.":"可选目录以启动搜索。默认位置是目录\r\n                包含属性功能的文件。\r\n","\r\n            Get a fully qualified path to a file in the system directory (i.e. %SystemRoot%\\System32)\r\n            ":"\r\n            在系统目录中获取通往文件的完全合格的路径（即％SystemRoot％\\ System32）\r\n            \r\n","\r\n            Creates a work result with the specified result codes.\r\n            ":"\r\n            使用指定的结果代码创建工作结果。\r\n            \r\n","\r\n            Formats the given string using the variable arguments passed in.\r\n            \r\n            PERF WARNING: calling a method that takes a variable number of arguments is expensive, because memory is allocated for\r\n            the array of arguments -- do not call this method repeatedly in performance-critical scenarios\r\n            ":"\r\n            使用传递的变量参数格式化给定字符串。\r\n            \r\n            完善警告：调用一种采用可变参数的方法很昂贵，因为记忆是分配的\r\n            参数数组 - 不要在绩效至关重要的情况下反复称呼此方法\r\n            \r\n","\r\n            A modification which indicates the metadata should be removed.\r\n            ":"\r\n            指示元数据的修改应删除。\r\n            \r\n","\r\n            Do not log command line information to build loggers. Useful to unbreak people who parse the msbuild log and who are unwilling to change their code.\r\n            ":"\r\n            请勿记录命令行信息以构建记录器。对于解析MSBUILD日志并且不愿意更改其代码的人有用。\r\n            \r\n","true if starts with drive pattern with slash, false otherwise.":"如果以斜线为单位，则为true，否则为false。\r\n","The user-specified ToolsVersion (through e.g. /tv: on the command line)":"用户指定的ToolsVersion（例如 /电视：在命令行上）\r\n","\r\n            Whether to load files read only\r\n            ":"\r\n            是否仅加载文件仅读取\r\n            \r\n","\r\n            Location of the KeepDuplicatOutputs attribute\r\n            ":"\r\n            keepduplicatOutputs属性的位置\r\n            \r\n","\r\n            Raised when a request has completed.\r\n            ":"请求完成后提出。\r\n            \r\n","\r\n            This means that some of the parameters being passed into the task are invalid, and the\r\n            task should fail immediately.\r\n            ":"\r\n            这意味着要传递到任务的某些参数无效，而\r\n            任务应立即失败。\r\n            \r\n","\r\n            Returns the column number if available, else 0.\r\n            IXmlLineInfo member.\r\n            ":"\r\n            返回列号（如果有），else 0。\r\n            ixmllineinfo成员。\r\n            \r\n","The id to assign to the node.":"为节点分配的ID。\r\n","\r\n            Instead of defining which characters must be quoted, define \r\n            which characters we know its safe to not quote. This way leads\r\n            to more false-positives (which still work, but don't look as \r\n            nice coming out of the logger), but is less likely to leave a \r\n            security hole.\r\n            ":"\r\n            而不是定义必须引用哪个字符，而是定义\r\n            我们知道哪些角色不引用它。这种方式导致\r\n            到更多的假阳性（仍然有效，但看起来不像\r\n            很高兴从记录仪出来），但不太可能离开\r\n            安全洞。\r\n            \r\n","\r\n            The containing project will be dirtied.\r\n            As there is no XML backing, the evaluated value returned is the value of the property that has been \r\n            escaped as necessary.\r\n            ":"\r\n            包含的项目将被弄脏。\r\n            由于没有XML支持，返回的评估值是已属性的值\r\n            必要时逃脱。\r\n            \r\n","The project instance.":"项目实例。\r\n","\r\n            Retrieves the Lookup this target was initialized with, including any modifications which have\r\n            been made to it while running.\r\n            ":"\r\n            检索该目标是初始化的查找，包括任何具有的修改\r\n            在跑步时被制成。\r\n            \r\n","Info about the created nodes.":"有关创建节点的信息。\r\n","\r\n            The function name, if any, within this expression\r\n            ":"\r\n            此表达式中的函数名称（如果有）\r\n            \r\n","\r\n            Inputs on the target\r\n            ":"\r\n            目标的输入\r\n            \r\n","Grid":"网格\r\n","\r\n            Leaving an arbitrary scope, just merging all the adds, removes, modifies, and sets into the scope below.\r\n            ":"\r\n            留下任意范围，仅合并所有添加，删除，修改并设置为下面的范围。\r\n            \r\n","\r\n            Logs the tool name and the path from where it is being run.\r\n            ":"\r\n            记录工具名称和正在运行的路径。\r\n            \r\n","\r\n             \r\n             This method processes a \"Project\" section in the solution file opened by the specified\r\n             StreamReader, and returns a populated ProjectInSolution instance, if successful.\r\n             An exception is thrown if the solution file is invalid.\r\n            \r\n             The format of the parts of a Project section that we care about is as follows:\r\n            \r\n              Project(\"{Project type GUID}\") = \"Project name\", \"Relative path to project file\", \"{Project GUID}\"\r\n                  ProjectSection(ProjectDependencies) = postProject\r\n                      {Parent project unique name} = {Parent project unique name}\r\n                      ...\r\n                  EndProjectSection\r\n              EndProject\r\n             \r\n             ":"\r\n             \r\n             此方法处理指定的解决方案文件中的“项目”部分\r\n             StreamReader，并返回一个填充的ProjectInsolution实例，如果成功。\r\n             如果解决方案文件无效，则会抛出异常。\r\n            \r\n             我们关心的项目部分部分的格式如下：\r\n            \r\n              project（“ {project类型guid}”）=“项目名称”，“项目文件的相对路径”，“ {project guid}”\r\n                  Projectsection（Project Dependencies）= PostProject\r\n                      {parent project unique name} = {parent project unique name}\r\n                      ...\r\n                  Endprojectsection\r\n              Endproject\r\n             \r\n             \r\n","\r\n            Indicates whether the specified string starts with the drive pattern (for example \"C:\").\r\n            ":"\r\n            指示指定的字符串是否从驱动器模式开始（例如“ C：”）。\r\n            \r\n","\r\n            Event is a TelemetryEventArgs\r\n            ":"\r\n            事件是远程Eventargs\r\n            \r\n","A matched pair of endpoints.":"一对端点。\r\n","The outputs for each target on each project":"每个项目的每个目标的输出\r\n","\r\n            Mapping of nodeRequestIDs to Build Results.\r\n            ":"\r\n            映射NodereQuestids以构建结果。\r\n            \r\n","\r\n            Location of the include, if any.\r\n            ":"\r\n            包括的位置（如果有）。\r\n            \r\n","\r\n             The following snippet shows what ":"\r\n             以下片段显示了什么\r\n","Indication of how to build the target.":"指示如何构建目标。\r\n","\r\n            The logger we are wrapping.\r\n            ":"\r\n            我们正在包装的记录器。\r\n            \r\n","\r\n            The most current Visual Studio Version known to this version of MSBuild.\r\n            ":"\r\n            此版本的MSBuild已知的最新视觉工作室版本。\r\n            \r\n","\r\n            Returns the metadata with the specified key.\r\n            Returns null if it does not exist.\r\n            Attempting to get built-in metadata on a value that is not a valid path throws InvalidOperationException.\r\n            Metadata value is the escaped value initially set.\r\n            ":"\r\n            用指定的密钥返回元数据。\r\n            如果不存在，则返回null。\r\n            试图在一个不是有效路径的值上获得内置元数据会引发无效的exception。\r\n            元数据值是最初设置的逃逸值。\r\n            \r\n","A registry Key for the given baseKey and view":"给定基键和查看的注册表密钥\r\n"," Adds new child instance. ":" 添加了新的孩子实例。\r\n","The set of items which are in the inputs":"输入中的一组项目\r\n","\r\n            This interface extends IBuildEngine to provide a mechanism allowing tasks to \r\n            share data between task invocations.\r\n            ":"\r\n            该界面扩展了IbuildEngine，以提供允许任务的机制\r\n            在任务调用之间共享数据。\r\n            \r\n","\r\n            The description assigned to this scope.\r\n            ":"\r\n            分配给此范围的说明。\r\n            \r\n","The entry raising the event.":"进入活动的条目。\r\n","\r\n            This class is designed to be passed to loggers.\r\n            The expense of copying items is only incurred if and when \r\n            a logger chooses to enumerate over it.\r\n            The type of the items enumerated over is imposed by backwards compatibility for ProjectStartedEvent.\r\n            ":"\r\n            该课程旨在将其传递给伐木工人。\r\n            复制项目的费用仅在以及\r\n            记录仪选择枚举它。\r\n            列举的项目的类型是通过ProjectStartedEvent的向后兼容性强加的。\r\n            \r\n","Flags controlling this build request.":"标记控制此构建请求。\r\n","\r\n            Updates the state of a request based on its desire to yield or reacquire control of its node.\r\n            ":"\r\n            根据其愿意收益或重新控制其节点的要求，更新请求的状态。\r\n            \r\n",". This is the return value for instances of this\r\n            enumerator created by the ":"。这是此实例的回报值\r\n            由\r\n","\r\n            Translate the TargetOutputs for the target finished event.\r\n            ":"\r\n            转换目标完成事件的目标输出。\r\n            \r\n","\r\n            Updates the current environment with values in the saved environment which differ or are not yet set.\r\n            ":"\r\n            在已保存的环境中，更新当前环境，该环境有所不同或尚未设置。\r\n            \r\n","\r\n            An object to hold the event shutdown lock\r\n            ":"\r\n            固定事件关闭锁的对象\r\n            \r\n","The key used to retrieve the object.":"用于检索对象的键。\r\n","Switch parameter to append, not quoted. If null, this method has no effect.":"切换参数要附加，而不是引用。如果无效，则该方法无效。\r\n","\r\n            Data for the use of LegacyThreading semantics.\r\n            ":"\r\n            使用传统语义语义的数据。\r\n            \r\n","The expander whose state will be used to expand any transforms":"该状态将被用来扩展任何变换的扩展器\r\n","\r\n            Location of the Outputs attribute\r\n            ":"\r\n            输出属性的位置\r\n            \r\n","A list of global properties which should be removed.":"应删除的全局属性列表。\r\n","\r\n            Continues a build request after receiving a resource response.\r\n            ":"\r\n            收到资源响应后继续构建请求。\r\n            \r\n","\r\n            This exception is used to wrap an unhandled exception from a logger. This exception aborts the build, and it can only be\r\n            thrown by the MSBuild engine.\r\n            ":"\r\n            该异常用于包裹记录器中未经处理的异常。这个例外逐渐删除了构建，只能是\r\n            由MSBUILD引擎投掷。\r\n            \r\n","The entry point to use in the build.":"在构建中使用的入口点。\r\n","\r\n            Store the path for the 32-bit MSBuildTaskHost so that we don't have to keep re-calculating it.\r\n            ":"\r\n            存储32位MSBUILDTASKHOST的路径，以便我们不必继续重新计算它。\r\n            \r\n","\r\n            This class is being deprecated in favor of SpanBasedStringBuilder in StringTools. Avoid adding more uses.\r\n            ":"\r\n            该课程被贬低，支持StringTool中的SpanbasedStringBuilder。避免添加更多用途。\r\n            \r\n","\r\n            Adds the specified target, overwriting any existing target with the same name.\r\n            ":"\r\n            添加指定的目标，覆盖任何具有相同名称的现有目标。\r\n            \r\n","\r\n            Sets or gets a flag indicating whether at least one target which has run after us (transitively via AfterTargets) failed.\r\n            ":"\r\n            设置或获取一个标志，指示至少一个追随我们的目标（通过屈从于售后）失败。\r\n            \r\n","\r\n            Facilitate support for remote build.\r\n            ":"\r\n            促进对远程构建的支持。\r\n            \r\n"," (switch = ":" （开关=\r\n","\r\n            Collection of metadata that link the XML metadata and instance metadata\r\n            Since evaluation has occurred, this is an unordered collection.\r\n            Is never null or empty.\r\n            ":"\r\n            链接XML元数据和实例元数据的元数据集合\r\n            由于已经进行了评估，因此这是一个无序的集合。\r\n            永远不会空或空。\r\n            \r\n","When loggerDescriptions is null":"当loggerDexcriptions为null\r\n","\r\n            The unique guid associated with this project, in \"{XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX}\" form\r\n            ":"\r\n            与此项目关联的唯一指南\r\n            \r\n","\r\n            A dictionary of all of the properties read from environment variables during evaluation.\r\n            ":"\r\n            评估过程中环境变量读取的所有属性的字典。\r\n            \r\n","\r\n            Expands embedded item metadata, properties, and embedded item lists (in that order) as specified in the provided options,\r\n            then splits on semi-colons into a list of strings.\r\n            Use this form when the result is going to be processed further, for example by matching against the file system,\r\n            so literals must be distinguished, and you promise to unescape after that.\r\n            ":"扩展嵌入式项目元数据，属性和嵌入式项目列表（按照该顺序），如提供的选项中指定的\r\n            然后将半彩色将其分成字符串列表。\r\n            当结果要进一步处理时，请使用此表格，例如，通过与文件系统匹配，\r\n            因此，必须区分文字，然后您承诺在那之后取消探索。\r\n            \r\n","\r\n            Retrieves the private StringBuilder instance for inheriting classes\r\n            ":"检索继承类的私有字符串实例\r\n            \r\n","\r\n            Factory which is wrapped by the wrapper\r\n            ":"\r\n            包装纸包裹的工厂\r\n            \r\n","\r\n            Call this method to notify listeners of profiling for the function that parses an XML document into a ProjectRootElement.\r\n            ":"\r\n            调用此方法，以通知听众有关将XML文档解析为ProjectRootelement的函数的分析。\r\n            \r\n","\r\n            Asserts that the entry is in the active state.\r\n            ":"\r\n            断言该条目处于活动状态。\r\n            \r\n","\r\n            A \"page-file\" for storing strings we've read so far. Keeping them in memory would OOM the 32-bit MSBuild\r\n            when reading large binlogs. This is a no-op in a 64-bit process.\r\n            ":"\r\n            到目前为止，我们已经阅读的存储字符串的“页面文件”。保持它们的记忆力将使32位MSBUILD OOM\r\n            阅读大型Binlogs时。这是一个64位过程中的无效。\r\n            \r\n","\r\n            Tracks whether ShutdownComponent has been called.  \r\n            ":"\r\n            跟踪是否调用了shutDownComponent。\r\n            \r\n","\r\n            A collection of ItemData that maintains insertion order and internally optimizes some access patterns, e.g. bulk removal\r\n            based on normalized item values.\r\n            ":"\r\n            一系列ItemData的集合，可维护插入顺序并内部优化某些访问模式，例如批量去除\r\n            基于归一化的项目值。\r\n            \r\n","\r\n            Encapsulates an import relationship in an evaluated project\r\n            between a ProjectImportElement and the ProjectRootElement of the\r\n            imported project.\r\n            ":"\r\n            将导入关系封装在评估的项目中\r\n            在ProjectImportelement和项目的项目之间\r\n            进口项目。\r\n            \r\n","\r\n            Before an item changes its item type, it must be removed from\r\n            our datastructures, which key off item type. \r\n            This should be called ONLY by ProjectItems, in this situation.\r\n            ":"\r\n            在项目更改其项目类型之前，必须将其从\r\n            我们的数据架构，其中关键项目类型。\r\n            在这种情况下，仅由ProjectItems调用。\r\n            \r\n","\r\n            Represents the result of attempting to enumerate a directory.\r\n            ":"\r\n            代表试图枚举目录的结果。\r\n            \r\n","\r\n            The logging context for the task.\r\n            ":"\r\n            任务的记录上下文。\r\n            \r\n"," was set to true, and the file on disk has changed since it was cached,\r\n            it will be reloaded before being returned.\r\n            \r\n            Thread safe.\r\n            ":" 已设置为true，并且磁盘上的文件已更改以来，该文件已被缓存，\r\n            它将在返回之前重新加载。\r\n            \r\n            线程安全。\r\n            \r\n","\r\n            Creates an unparented ProjectOnErrorElement, wrapping an unparented XmlElement.\r\n            Caller should then ensure the element is added to a parent.\r\n            ":"\r\n            创建一个无与伦比的ProjectOnErrorlement，包裹了无与伦比的Xmlelement。\r\n            然后，呼叫者应确保将元素添加到父。\r\n            \r\n","Should the target outputs be returned in teh BuildEngineResult":"是否应在buildenginersult中返回目标输出\r\n","\r\n            Toolset,\r\n            ":"\r\n            工具集，\r\n            \r\n","If set to true, only critical events will be logged.":"如果设置为true，则只会记录关键事件。\r\n","\r\n            The return value from InitializeHostObject.  This enumeration defines what action the ToolTask\r\n            should take next, after we've tried to initialize the host object.\r\n            ":"\r\n            initializeHostObject的返回值。此枚举定义了工具任务的动作\r\n            在我们尝试初始化主机对象之后，应该采取下一步。\r\n            \r\n","\r\n            Add the set of paths for where sdk files should be found. Where <folderType> is redist, references, designtime\r\n            ":"\r\n            添加应找到SDK文件的路径集。其中<foldertype>是重新列表，参考，设计时间\r\n            \r\n","The type of properties to be produced.":"要生产的属性类型。\r\n","\r\n            Collects all the items of this item element's type that match the items (represented as operations)\r\n            ":"\r\n            收集此项目元素类型的所有项目，该类型匹配该项目（表示为操作）\r\n            \r\n","The location of the file, or null if file not found.":"文件的位置，如果找不到文件，则null。\r\n"," to evaluate the ProjectInstance from.":" 从中评估该项目。\r\n","\r\n            The global properties changed.\r\n            ":"\r\n            全局属性发生了变化。\r\n            \r\n","\r\n            The Target Builder is responsible for building a single target within a given project.\r\n            ":"\r\n            目标构建器负责在给定项目中构建单个目标。\r\n            \r\n","\r\n            Returns the result of aggregating all profiled projects across a build\r\n            ":"\r\n            返回汇总所有构造项目的结果\r\n            \r\n","\r\n            True if this instance is already disposed.\r\n            ":"\r\n            如果已经处置了此实例，则为正确。\r\n            \r\n","\r\n            The root directory for this project.\r\n            Is never null: in-memory projects use the current directory from the time of load.\r\n            ":"\r\n            该项目的根目录。\r\n            永远不要零：内存项目从加载时间开始使用当前目录。\r\n            \r\n","\r\n            Compares the primary property sets of the passed in lookups to determine if there are properties which are shared between\r\n            the lookups. We find these shared property names because this indicates that the current Lookup is overriding the property value of another Lookup\r\n            When an override is detected a messages is generated to inform the users that the property is being changed between batches\r\n            ":"\r\n            比较查找中传递的主要属性集，以确定是否存在共享的属性\r\n            查找。我们找到这些共享属性名称，因为这表明当前查找正在覆盖另一个查找的属性值\r\n            当检测到替代的消息时，生成了一条消息，以通知用户属性在批处理之间进行更改\r\n            \r\n","The required architecture of the requested file.":"请求的文件所需的架构。\r\n","\r\n            Callback for event raised when a new configuration needs an ID resolved.\r\n            ":"\r\n            当新配置需要解决ID时，已提出的事件回调。\r\n            \r\n","The build event args, or null.":"构建事件args或null。\r\n","The item instance.":"项目实例。\r\n","\r\n            Contains the result items for a single target as well as the overall result code.\r\n            ":"\r\n            包含单个目标以及总体结果代码的结果项目。\r\n            \r\n",".\r\n            UNDONE: Currently they cannot be removed.\r\n            Returns an empty collection if there are no loggers.\r\n            ":"。\r\n            撤消：目前无法删除它们。\r\n            如果没有登记机，则返回一个空的集合。\r\n            \r\n",". Any member that needs to use ":"。任何需要使用的成员\r\n","\r\n            regular expression used to match item metadata references outside of item vector transforms.\r\n            ":"\r\n            正则表达式用于匹配项目矢量变换之外的项目元数据参考。\r\n            \r\n","\r\n            Whether to respect the TreatAsLocalProperty parameter on the Project tag.\r\n            ":"\r\n            是否尊重项目标签上的treataslocalproperty参数。\r\n            \r\n","\r\n             What is the currently evaluating property element, this is so that we do not add a un initialized property if we are evaluating that property\r\n            ":"当前评估的属性元素是什么，这是这样，如果我们正在评估该属性，我们不会添加非初始化属性\r\n            \r\n","Source of files to glob.":"文件源到Glob。\r\n"," behavior to still fail when an SDK is missing\r\n            because those are more fatal.\r\n            ":" 丢失SDK时仍会失败的行为\r\n            因为这些更致命。\r\n            \r\n","\r\n            The amount of time to wait for an out-of-proc node to spool up before we give up.\r\n            ":"\r\n            在我们放弃之前，等待启动的节点的时间。\r\n            \r\n","\r\n            Indicates that there are results which can be used to unblock this request.  Updates the relationships between requests.\r\n            ":"\r\n            表明有一些结果可用于解除此请求。更新请求之间的关系。\r\n            \r\n","\r\n            Check whether the config cache has more items that the predefined threshold\r\n            ":"\r\n            检查配置缓存是否具有预定义阈值的更多项目\r\n            \r\n","\r\n            Returns the XmlAttribute with the specified name or null if a matching attribute was not found.\r\n            ":"\r\n            如果找不到匹配属性，则返回带有指定名称或空的XMLATTRIBUTE。\r\n            \r\n","\r\n            It is possible for ProjectRootElements to be brought into memory and discarded due to memory pressure. Therefore\r\n            this method returning false does not indicate that it has never been loaded, only that it is not currently in memory.\r\n            ":"\r\n            由于记忆压力，可能会将项目的电流元素带入内存并丢弃。所以\r\n            此方法返回false并不表示它从未加载过，而只是当前不在内存中。\r\n            \r\n","\r\n            Part of the extraction may result in the name of the property\r\n            This accessor is used by the Expander\r\n            Examples of expression root:\r\n                [System.Diagnostics.Process]::Start\r\n                SomeMSBuildProperty.\r\n            ":"\r\n            提取的一部分可能会导致属性的名称\r\n            该登录器由扩展器使用\r\n            表达根的示例：\r\n                [system.diagnostics.process] ::开始\r\n                SomemsbuildProperty。\r\n            \r\n","\r\n            The containing project will be dirtied.\r\n            As there is no XML backing, the evaluated value returned is the value of the property that has been\r\n            escaped as necessary.\r\n            ":"包含的项目将被弄脏。\r\n            由于没有XML支持，返回的评估值是已属性的值\r\n            必要时逃脱。\r\n            \r\n","True if results exist, false otherwise.":"如果结果存在，则为true，否则为错误。\r\n","\r\n            Invoke an \"island\", marshaling the arguments.\r\n            Called on debugger worker thread.\r\n            ":"\r\n            援引一个“岛”，提出了争论。\r\n            打电话给调试器工人线程。\r\n            \r\n","\r\n            Type of delegate used to set console color.\r\n            ":"\r\n            用于设置控制台颜色的委托类型。\r\n            \r\n","The configuration to query for":"查询的配置\r\n","The shift to apply to the absolute index to get the page index within a segmented array.":"适用于绝对索引的偏移以获取分段数组中的页面索引。\r\n","True to make the request block and wait for at least one core.":"真实地制作请求块，并等待至少一个核心。\r\n","\r\n            Initialize an unparented ProjectWhenElement\r\n            ":"\r\n            初始化无与伦比的项目播放\r\n            \r\n","\r\n            Get of warnings to treat as errors.  An empty non-null set will treat all warnings as errors.\r\n            ":"\r\n            警告将其视为错误。空的非挂机集将将所有警告视为错误。\r\n            \r\n","Event context for the target":"目标的事件上下文\r\n","\r\n            The collections of changed and up-to-date inputs returned from this method are valid IFF this method decides an\r\n            incremental build is needed.\r\n            ":"\r\n            如果此方法决定一个，则此方法的更改和最新输入的收集是有效的\r\n            需要增量构建。\r\n            \r\n","\r\n            Initializes a new instance of BuildEventArgsWriter with a BinaryWriter\r\n            ":"\r\n            用binarywriter初始化buildeventargswriter的新实例\r\n            \r\n","The inpurt which are \"up to date\" and do not require a build":"“最新”并且不需要构建的inpurt\r\n","\r\n            Gets or sets the parameters.\r\n            ":"\r\n            获取或设置参数。\r\n            \r\n"," will be cleared\r\n            after the build request completes.  This is used when the build request is known to modify a lot of\r\n            state such as restoring packages or generating parts of the import graph.\r\n            ":" 将被清除\r\n            构建请求完成后。当已知构建请求修改大量时，使用此方法\r\n            诸如还原软件包或生成导入图的部分之类的状态。\r\n            \r\n","\r\n            Represents an entry point into the project graph which is comprised of a project file and a set of global properties\r\n            ":"\r\n            代表项目图中的一个入口点，该切入点由项目文件和一组全局属性组成\r\n            \r\n","\r\n            Target which caused this target to build\r\n            ":"\r\n            导致该目标构建的目标\r\n            \r\n","\r\n            The next available build request Id\r\n            ":"\r\n            下一个可用的构建请求ID\r\n            \r\n","\r\n                Resolved version of the SDK.\r\n                Can be null or empty if the resolver did not provide a version (e.g. a path based resolver)\r\n            \r\n                Null if ":"\r\n                已解决的SDK版本。\r\n                如果解析器不提供版本（例如，基于路径的解析器），则可以为空或空\r\n            \r\n                null if\r\n","Information needed to unblock the engine.":"解除发动机所需的信息。\r\n","\r\n            Maps global request Id to a blocked request.\r\n            ":"\r\n            将全局请求ID映射到阻塞请求。\r\n            \r\n","The loggers to register. May be null and specified to any build instead.":"伐木者注册。可以为null并指定为任何构建。\r\n","The results, or null if the build should terminate.":"结果，如果构建应终止。\r\n","\r\n            Raised when the log reader encounters a binary blob embedded in the stream.\r\n            The arguments include the blob kind and the byte buffer with the contents.\r\n            ":"\r\n            当日志读取器遇到流中的二进制斑点时，会提出。\r\n            参数包括斑点类型和带有内容的字节缓冲区。\r\n            \r\n","\r\n            Prints a warning event\r\n            ":"\r\n            打印警告活动\r\n            \r\n","Type of the item.":"项目类型。\r\n","\r\n            s.IsEmpty() is true iff s.Count == 0\r\n            ":"\r\n            s.isempty（）是正确的，iff s.count == 0\r\n            \r\n","\r\n            Set of platforms supported by this SDK. \r\n            ":"\r\n            该SDK支持的一组平台。\r\n            \r\n","\r\n            These complex cases prevent us from doing a simple split on ';':\r\n             (1) Macro expression: @(foo->'xxx;xxx')\r\n             (2) Separator expression: @(foo, 'xxx;xxx')\r\n             (3) Combination: @(foo->'xxx;xxx', 'xxx;xxx')\r\n             We must not split on semicolons in macro or separator expressions like these.\r\n            ":"\r\n            这些复杂的案例阻止了我们对';'的简单分开：\r\n             （1）宏表达： @（foo->'xxx; xxx'）\r\n             （2）隔板表达式： @（foo，'xxx; xxx'）\r\n             （3）组合： @（foo->'xxx; xxx'，'xxx; xxx'）\r\n             我们绝不能在类似的宏观或分离器表达式中分裂。\r\n            \r\n","\r\n            A value indicating whether this instance is tracking a full tracking suspension\r\n            (as opposed to activation).\r\n            ":"表示此实例是否正在跟踪完整跟踪悬架的值\r\n            （而不是激活）。\r\n            \r\n","project id":"项目ID\r\n"," to use when logging messages during resolution.":" 在分辨率期间记录消息时使用。\r\n","The architecture the SDK is targeting":"SDK针对的架构\r\n","The ToolsVersion to use when generating the wrapper.":"生成包装器时要使用的工具。\r\n","\r\n            Adds the provided project to the collection.\r\n            If there is already an equivalent project, throws InvalidOperationException.\r\n            ":"\r\n            将提供的项目添加到集合中。\r\n            如果已经有一个等效的项目，则会引发InvalidOperationException。\r\n            \r\n","\r\n            The node to which this request is assigned.\r\n            ":"\r\n            分配此请求的节点。\r\n            \r\n","\r\n            Gets the name of the cache file for this configuration.\r\n            ":"\r\n            获取此配置的缓存文件的名称。\r\n            \r\n","\r\n                The wildcard directory part match\r\n            ":"\r\n                通配符目录部分比赛\r\n            \r\n","\r\n            Constructs a new build result based on existing results, but filtered by a specified set of target names\r\n            ":"\r\n            根据现有结果构建新的构建结果，但由指定的目标名称进行过滤\r\n            \r\n","The submission id":"提交ID\r\n","\r\n            The packet that is the end result of the task host task execution process\r\n            ":"\r\n            任务主机任务执行过程的最终结果数据包\r\n            \r\n","The node identifier.":"节点标识符。\r\n","\r\n            Retrieves the packet type.\r\n            ":"\r\n            检索数据包类型。\r\n            \r\n","\r\n            The registry key to the component\r\n            ":"\r\n            组件的注册表密钥\r\n            \r\n","\r\n            Helper to avoid doing an expensive disk check for MSBuild.exe when\r\n            we already checked in a previous build.\r\n            This File.Exists otherwise can show up in profiles when there's a lot of\r\n            design time builds going on.\r\n            ":"\r\n            助手避免进行昂贵的磁盘检查msbuild.exe\r\n            我们已经检查了以前的构建。\r\n            此文件。否则，当有很多时\r\n            设计时间构建正在进行中。\r\n            \r\n","\r\n            Returns a string with those switches and other information that can't go into a response file and\r\n            must go directly onto the command line.\r\n            Called after ValidateParameters and SkipTaskExecution\r\n            ":"\r\n            返回使用这些开关和其他无法进入响应文件的信息的字符串\r\n            必须直接进入命令行。\r\n            在验证参数和skiptaskexecution之后打电话\r\n            \r\n","\r\n            A mapping of tools versions to Toolsets, which contain the public Toolsets.\r\n            This is the collection we use internally.\r\n            ":"\r\n            将工具版本与包含公共工具集的工具集的映射。\r\n            这是我们内部使用的集合。\r\n            \r\n","\r\n            Action for the thread to take\r\n            ":"\r\n            线程采取的动作\r\n            \r\n","\r\n            Callback for logging packets to be sent.\r\n            ":"\r\n            用于发送记录数据包的回调。\r\n            \r\n"," is set. In that case, the parent \r\n            ":" 设置。在这种情况下，父母\r\n            \r\n","\r\n            Backing XML property.\r\n            Null only if this is a global, environment, or built-in property.\r\n            ":"\r\n            支持XML属性。\r\n            仅当这是全球，环境或内置属性的情况下。\r\n            \r\n","\r\n            Gets an instance of a TaskLoggingHelper class containing task logging methods.\r\n            ":"\r\n            获取包含任务日志记录方法的TaskLoggingHelper类的实例。\r\n            \r\n","The ToolsVersion for which to get the tools path":"获取工具路径的工具库\r\n","\r\n            Get the value of a property in this project, or\r\n            an empty string if it does not exist.\r\n            ":"获取该项目中财产的价值，或\r\n            如果不存在一个空字符串。\r\n            \r\n","\r\n            Condition should never be set, but the getter returns null instead of throwing \r\n            because a nonexistent condition is implicitly true\r\n            ":"\r\n            条件永远不要设置\r\n            因为不存在的条件是隐式的\r\n            \r\n","\r\n            The id is guaranteed to be unique across all running processes.\r\n            Additionally, it is monotonically increasing for callers on the same process id\r\n            ":"\r\n            ID可以保证在所有运行过程中都是唯一的。\r\n            此外，在同一流程ID上的呼叫者中，它在单调上增加了\r\n            \r\n","\r\n            The singleton instance.\r\n            ":"\r\n            Singleton实例。\r\n            \r\n","\r\n            This (family) constructor allows derived task classes to register their resources, as well as provide a prefix for\r\n            composing help keywords from string resource names. If the prefix is an empty string, then string resource names will\r\n            be used verbatim as help keywords. For an example of how the prefix is used, see the\r\n            ":"\r\n            该（家庭）构造函数允许派生任务类注册其资源，并为\r\n            从字符串资源名称中撰写帮助关键字。如果前缀是一个空字符串，则字符串资源名称将\r\n            逐字使用作为帮助关键字。有关如何使用前缀的示例，请参见\r\n            \r\n","\r\n            Log the start of the build\r\n            ":"\r\n            记录构建的开始\r\n            \r\n","\r\n            Handle error events\r\n            ":"\r\n            处理错误事件\r\n            \r\n","A new metadata instance.":"一个新的元数据实例。\r\n","\r\n            Constructor for metadata modifications of type Keep or Remove.\r\n            ":"\r\n            用于元数据修改类型的构造函数保留或删除。\r\n            \r\n","\r\n            This object is IMMUTABLE, so that it can be passed around arbitrarily.\r\n            This is not public because the current implementation only provides correct data for unedited projects.\r\n            DO NOT make it public without considering a solution to this problem.\r\n            ":"\r\n            该对象是不可变的，因此可以任意传递。\r\n            这不是公开的，因为当前的实施仅为未编辑的项目提供正确的数据。\r\n            不要考虑解决此问题的解决方案，不要公开它。\r\n            \r\n","\r\n            This method examines the current list of requests to determine if any requests should change\r\n            state, possibly reactivating a previously inactive request or removing a now-completed\r\n            request from the list.\r\n            ":"\r\n            此方法检查当前请求列表以确定任何请求是否应更改\r\n            状态，可能会重新激活以前的无效请求或删除现已完成的\r\n            从列表中的请求。\r\n            \r\n","\r\n            Analyzes the plan data which has been read.\r\n            ":"\r\n            分析已读取的计划数据。\r\n            \r\n","\r\n            The requested project graph to build.\r\n            May be null.\r\n            ":"\r\n            要构建的请求的项目图。\r\n            可能是无效的。\r\n            \r\n","EvaluationId of the project instance":"项目实例的评估\r\n","\r\n            Collection of all evaluated item definitions, one per item-type.\r\n            ":"\r\n            收集所有评估项目定义，每个项目类型。\r\n            \r\n","\r\n            EnterState can be called reentrantly. If code calls Enter(A); Enter(B); Enter(C); \r\n            Then on the call to Enter(C), the virtual callstack will be A-->B-->C. \r\n            Each call to Enter() will rebuild the virtual callstack. \r\n            ":"\r\n            遗产可以重新进入。如果代码调用输入（a）;输入（b）;输入（c）;\r\n            然后在输入（c）的呼叫上，虚拟呼叫堆栈将为a-> b-> c。\r\n            每个呼叫Enter（）都会重建虚拟呼叫站。\r\n            \r\n","\r\n            Adds a new item\r\n            Only called during evaluation, so does not check for immutability.\r\n            ":"添加一个新项目\r\n            仅在评估过程中调用，因此不检查不变性。\r\n            \r\n","\r\n            The requests which must complete before we can continue executing.  Indexed by global request id and node request id.\r\n            Each global request id may have multiple requests which map to it, but they will have separate node request ids.\r\n            ":"\r\n            在我们继续执行之前必须完成的请求。由全局请求ID和节点请求ID索引。\r\n            每个全局请求ID可能具有多个映射的请求，但是它们将具有单独的节点请求ID。\r\n            \r\n","\r\n            Creates a comma separated list of valid tools versions suitable for an error message.\r\n            ":"\r\n            创建一个适合错误消息的有效工具版本的逗号分隔列表。\r\n            \r\n","\r\n            Convenience method to add an Output Item to this task. \r\n            Adds after the last child. \r\n            ":"\r\n            便利方法将输出项添加到此任务中。\r\n            在最后一个孩子之后添加。\r\n            \r\n","\r\n            Name of the property used to specify a Visual Studio version.\r\n            ":"\r\n            用于指定Visual Studio版本的属性的名称。\r\n            \r\n","\r\n                The target list for the ":"\r\n                的目标列表\r\n","\r\n            Handles a build result coming from a node.\r\n            ":"\r\n            处理来自节点的构建结果。\r\n            \r\n","True if the well known constructor call binding was successful.":"如果众所周知的构造函数绑定成功，则是真的。\r\n","\r\n            Requests to reacquire the node.\r\n            Thread safe, however Reacquire cannot be called unless the\r\n            last call to Yield or Reacquire was Yield.\r\n            ":"\r\n            要求重新征用节点。\r\n            线程安全，但是，除非\r\n            屈服或重新召集的最后呼吁是产量。\r\n            \r\n","\r\n            Forwards the specified event.\r\n            ":"\r\n            转发指定的事件。\r\n            \r\n","\r\n            Will receive a logging packet and send it to the correct\r\n            sink which is registered to the LoggingServices.\r\n            PacketReceived should be called from a single thread.\r\n            ":"\r\n            将收到一个记录包并将其发送到正确的\r\n            注册到Loggingservices的水槽。\r\n            包packEteceived应该从单个线程调用。\r\n            \r\n","\r\n            The fallback task registry\r\n            ":"\r\n            后备任务注册表\r\n            \r\n","The id of the configuration with the most immediate references.":"具有最直接引用的配置ID。\r\n","\r\n            Expander to use to expand any expressions encountered after the project has been fully evaluated.\r\n            For example, to expand the values of any properties added at design time.\r\n            It's convenient to store it here.\r\n            ":"\r\n            用于扩展项目充分评估后遇到的任何表达式的扩展器。\r\n            例如，扩展在设计时间添加的任何属性的值。\r\n            将其存储在这里很方便。\r\n            \r\n","\r\n            The cache for Build lifetime objects.\r\n            ":"\r\n            构建生命周期对象的缓存。\r\n            \r\n","\r\n            Sets or retrieves the list of targets which run before the keyed target.\r\n            ":"\r\n            设置或检索在密钥目标之前运行的目标列表。\r\n            \r\n","\r\n            Collection of properties that link the XML properties and evaluated properties.\r\n            Since evaluation has occurred, this is an unordered collection.\r\n            Includes any global and reserved properties.\r\n            ":"\r\n            收集链接XML属性和评估属性的属性。\r\n            由于已经进行了评估，因此这是一个无序的集合。\r\n            包括任何全球和保留的属性。\r\n            \r\n","Event context for the target spawning this task.":"目标产卵此任务的事件上下文。\r\n","\r\n            Line number of interest in associated file. \r\n            ":"\r\n            关联文件中的兴趣线数。\r\n            \r\n","The request which caused the circular dependency.":"引起循环依赖性的请求。\r\n","\r\n            Returns a clone of this project element and all its children.\r\n            ":"\r\n            返回该项目元素及其所有孩子的克隆。\r\n            \r\n","\r\n            Root element which was added to the project collection.\r\n            ":"\r\n            添加到项目集合中的根元素。\r\n            \r\n","The build event context for the project.":"项目的构建事件上下文。\r\n","\r\n            Returns the type of packet.\r\n            ":"\r\n            返回数据包的类型。\r\n            \r\n","taskNode.Name":"tasknode.name\r\n","\r\n            Subscribes to status events, which is the category for the evaluation finished event.\r\n            ":"\r\n            订阅状态事件，这是评估事件的类别。\r\n            \r\n","\r\n            data.ItemTypes is a KeyCollection, so it doesn't need any \r\n            additional read-only protection\r\n            ":"\r\n            data.itemtypes是一个钥匙集合，因此不需要任何\r\n            额外的仅阅读保护\r\n            \r\n","\r\n            A list of warnings to treat as messages for an associated ":"\r\n            警告列表，将视为关联的消息\r\n","\r\n            We enter here in both the property and item passes, since Chooses can contain both.\r\n            However, we only evaluate the When conditions on the first pass, so we only pulse\r\n            those states on that pass. On the other pass, it's as if they're not there.\r\n            ":"\r\n            我们在属性和项目通行证中输入此处，因为选择都可以包含。\r\n            但是，我们只评估第一次通过时的条件，所以我们只脉动\r\n            那些传球上的国家。在另一个通行证上，好像他们不在那样。\r\n            \r\n","\r\n            Gets the task factory attribute value.\r\n            ":"\r\n            获取任务工厂属性值。\r\n            \r\n","\r\n            Gets the evaluated include value for this item, unescaped.\r\n            ":"\r\n            获取评估的包括该项目的价值，不使用。\r\n            \r\n","\r\n            Gets or sets the value of TreatAsLocalProperty. If there is no tag, returns empty string.\r\n            If the value being set is null or empty, removes the attribute.\r\n            ":"\r\n            获取或设置treataslocalproperty的价值。如果没有标签，请返回空字符串。\r\n            如果要设置的值为空或空，请删除属性。\r\n            \r\n","True if the cache contains a configuration with this id, false otherwise.":"正确，如果缓存包含具有此ID的配置，则为false否则。\r\n","\r\n            Gets the specified type using the namespace to guess the assembly that its in\r\n            ":"\r\n            使用名称空间获取指定的类型，以猜测它在\r\n            \r\n","A BuildResult with results from an incomplete build request.":"由不完整的构建请求产生的构建。\r\n","targets to execute, in the case of a project frame":"在项目框架的情况下执行的目标\r\n","The id of the node created.":"创建节点的ID。\r\n","\r\n            Parses the SLN file represented by the StreamReader in this.reader, and populates internal\r\n            data structures based on the SLN file contents.\r\n            ":"\r\n            在this.reader中解析由StreamReader表示的SLN文件，并填充内部\r\n            基于SLN文件内容的数据结构。\r\n            \r\n","\r\n            Outputs on the target\r\n            ":"\r\n            目标输出\r\n            \r\n","\r\n            Regkey that we check to see whether VWD Express 2010 is installed.  This will exist if it is installed, and be\r\n            properly removed after it has been uninstalled.\r\n            ":"\r\n            我们检查是否安装了VWD Express 2010。如果安装它，则将存在，并且\r\n            卸载后正确删除。\r\n            \r\n","\r\n            Whether the content potentially has expandable content,\r\n            such as a property expression or escaped character.\r\n            ":"\r\n            内容是否可能具有可扩展的内容，\r\n            例如财产表达或逃脱的性格。\r\n            \r\n","\r\n            This class is used by the Scheduler to unblock a blocked build request on the BuildRequestEngine.\r\n            There are two cases:\r\n            1. The request was blocked waiting on a target in the same project.  In this case this class will contain\r\n               no information other than the request id.\r\n            2. The request was blocked on some set of build requests.  This class will then contain the build results \r\n               needed to satisfy those requests.\r\n            ":"\r\n            调度程序使用此类来解开BuildRequestengine上阻塞的构建请求。\r\n            有两种情况：\r\n            1.该请求被阻止在同一项目中等待目标。在这种情况下，此类将包含\r\n               除请求ID外，没有其他信息。\r\n            2.该请求已在某些构建请求中被阻止。然后，此课将包含构建结果\r\n               需要满足这些要求。\r\n            \r\n","\r\n            If the item type of the source is the same as the item type of the destination,\r\n            then it's not necessary to copy metadata originating in an item definition.\r\n            If it's not, we have to clone that too.\r\n            ":"\r\n            如果源的项目类型与目标的项目类型相同，则\r\n            然后，不必复制源自项目定义中的元数据。\r\n            如果不是这样，我们也必须克隆。\r\n            \r\n","\r\n            Gets the error sub-category (if any) that describes the type of this error.\r\n            ":"\r\n            获取描述此错误类型的错误子类别（如果有）。\r\n            \r\n","\r\n            Raises the OnRequestResumed event.\r\n            ":"\r\n            提出了重新奖励的活动。\r\n            \r\n","\r\n            Element representing a flag to indicate if the SDK content is versioned\r\n            ":"\r\n            代表标志的元素表示SDK内容是否版本\r\n            \r\n","The object used by the caller for synchronization. The lock on this object must be taken when calling this method.":"呼叫者使用的对象进行同步。调用此方法时，必须对此对象锁定。\r\n","\r\n            The registered object, or null is there is no object registered under that key or the object\r\n            has been discarded through early collection.\r\n            ":"\r\n            注册的对象或null没有该密钥或对象下的对象\r\n            已通过早期收藏而丢弃。\r\n            \r\n","\r\n            Arguments for warning events\r\n            ":"\r\n            警告事件的争论\r\n            \r\n","\r\n            A queue of legacy CallTarget lookup scopes to leave when this target is finished.\r\n            ":"\r\n            该目标完成后，将离开旧的Calltarget查找范围。\r\n            \r\n","\r\n            The CultureInfo from the invariant culture. Used to avoid allocations for\r\n            perfoming IndexOf etc.\r\n            ":"\r\n            来自不变文化的文化。用于避免分配\r\n            完善的索引等。\r\n            \r\n","\r\n            Assigns a field or variable containing an immutable list to the specified value and returns the previous\r\n            value.\r\n            ":"\r\n            将包含不变列表的字段或变量分配给指定值，并返回以前的\r\n            价值。\r\n            \r\n","Help keyword for the message. Can be null.":"帮助关键字来获取消息。可以是零的。\r\n","\r\n            The packet factory.\r\n            ":"\r\n            数据包工厂。\r\n            \r\n","The factory type to register.":"要注册的工厂类型。\r\n","The event context of the target which has just completed":"刚刚完成的目标的事件上下文\r\n","\r\n            If on Unix, convert backslashes to slashes for strings that resemble paths.\r\n            This overload takes and returns ReadOnlyMemory of characters.\r\n            ":"\r\n            如果在UNIX上，将反斜线转换为类似路径的字符串的斜线。\r\n            此过载需要并返回字符的ReadonlyMemory。\r\n            \r\n","The bytes to convert":"字节转换\r\n","\r\n            Mapping of global request ids to the request entries.\r\n            ":"\r\n            将全局请求ID映射到请求条目。\r\n            \r\n","\r\n            Mapping of manager-produced node IDs to the provider hosting the node.\r\n            ":"\r\n            向托管节点的提供商的管理节点ID的映射。\r\n            \r\n","\r\n            Base class for all expression nodes.\r\n            ":"\r\n            所有表达节点的基类。\r\n            \r\n","\r\n            Extension to IEnumerable to get the count if it \r\n            can be quickly gotten, otherwise 0.\r\n            ":"\r\n            扩展到Ienumerable，以获取计数\r\n            可以很快获得，否则0。\r\n            \r\n","right input":"右输入\r\n","The request whose ID should be assigned":"应分配ID的请求\r\n","\r\n            This single object contains all of the data necessary to perform expansion of metadata, properties,\r\n            and items.\r\n            ":"\r\n            此单个对象包含执行元数据、属性扩展所需的所有数据,\r\n            和物品。\r\n            \r\n","\r\n            The target context in which this task is being built.\r\n            ":"\r\n            正在构建此任务的目标上下文。\r\n            \r\n","\r\n            Returns the metadata with the specified key.\r\n            ":"\r\n            用指定的密钥返回元数据。\r\n            \r\n","\r\n            Read from environment variable `MSBuildDisableFeaturesFromVersion`, correct it if required, cache it and its ConversionState.\r\n            ":"\r\n            从环境变量``MSBuildDisableFeaturesflomver''中读取，如果需要，请纠正它，缓存它及其转换state。\r\n            \r\n","\r\n            Delegate passed to methods to provide basic expression evaluation\r\n            ability, without having a language service.\r\n            ":"\r\n            代表传递给提供基本表达评估的方法\r\n            能力，没有语言服务。\r\n            \r\n","An enumeration of the sub-toolsets that belong to that tools version.":"属于该工具版本的子工具集的枚举。\r\n","\r\n            Retrieves the project instance id.\r\n            ":"\r\n            检索项目实例ID。\r\n            \r\n","\r\n            When true, this modification indicates the associated metadata should retain its existing value.\r\n            ":"\r\n            如果是正确的，则此修改表明关联的元数据应保留其现有值。\r\n            \r\n","\r\n            Get a read-only collection of the child usingtasks, if any\r\n            ":"\r\n            如果有的话\r\n            \r\n"," and can be used to connect\r\n             evaluation logging events back to the Project instance.\r\n             ":" 可以用来连接\r\n             评估记录事件回到项目实例。\r\n             \r\n","\r\n            The build request for execution.\r\n            ":"\r\n            构建执行请求。\r\n            \r\n","\r\n            The default name of the MSBuild property to read for the relative path to the full tracking .tlog files.\r\n            If this property isn't set in the project, full tracking is turned off.\r\n            ":"\r\n            MSBUILD属性的默认名称要读取完整跟踪.TLOG文件的相对路径。\r\n            如果该属性未在项目中设置，则将关闭完整的跟踪。\r\n            \r\n","\r\n            List of value editors for this property. \r\n            ":"\r\n            此属性的价值编辑列表。\r\n            \r\n","The end of a range of invalid lines in the project (set to zero if not available).":"项目中一系列无效线的末端（如果不可用，则设置为零）。\r\n","The node to which data should be sent.":"应该发送数据的节点。\r\n","\r\n            What type of logging mode is the logger running under. \r\n            Is it Synchronous or Asynchronous\r\n            ":"\r\n            记录模式是哪种类型的记录模式。\r\n            它是同步还是异步\r\n            \r\n","\r\n            Returns true if the given file matches this file spec.\r\n            ":"\r\n            如果给定文件匹配此文件规格，则返回true。\r\n            \r\n"," represent a tool.\r\n            ":" 代表工具。\r\n            \r\n","\r\n            Serialize the entire project instance state.\r\n            \r\n            When false, only a part of the project instance state is serialized (properties and items).\r\n            In this case out of proc nodes re-evaluate the project instance from disk to obtain the un-serialized state.\r\n            This partial state recombination may lead to build issues when the project instance state differs from what is on disk.\r\n            ":"\r\n            序列化整个项目实例状态。\r\n            \r\n            当false时，只有项目实例状态的一部分是序列化的（属性和项目）。\r\n            在这种情况下，ProcNodes从磁盘中重新评估了项目实例，以获得非序列化状态。\r\n            当项目实例状态与磁盘上的内容不同时，这种部分状态的重组可能会导致建立问题。\r\n            \r\n","The task output specification":"任务输出规范\r\n","\r\n            Override IsReadOnly property to correctly indicate the mode to callers\r\n            ":"\r\n            Override isReadonly属性正确地将模式指向呼叫者\r\n            \r\n","\r\n            Single logging service used for all builds of projects in this project collection\r\n            ":"\r\n            该项目集合中所有项目构建的单伐木服务\r\n            \r\n","\r\n            Creates a mutable ProjectInstance directly, using the specified logging service.\r\n            Assumes the project path is already normalized.\r\n            Used by this class when generating legacy solution wrappers.\r\n            ":"\r\n            使用指定的记录服务直接创建可变的ProjectInstance。\r\n            假设项目路径已经标准化。\r\n            该课程生成旧解决方案包装器时使用。\r\n            \r\n","MSBuildExtensionsPath reference kind found in the Project attribute of the Import element":"MSBUILDEXTENSIONSPath参考类型在“导入元素”项目属性中找到\r\n","\r\n            Constructor taking only tools version and a matching tools path\r\n            ":"\r\n            构造函数仅采用工具版本和匹配工具路径\r\n            \r\n","\r\n            This is called back when this request needs to issue new requests and possible wait on them.  This method will\r\n            block the builder's thread if any of the requests require us to wait for their results.\r\n            ":"\r\n            当此请求需要发出新请求并可能等待它们时，这就是回叫。此方法将\r\n            如果任何请求要求我们等待其结果，则阻止构建器的线程。\r\n            \r\n","Switch parameters to append, not quoted. If null, this method has no effect.":"切换参数以附加而不是引用。如果无效，则该方法无效。\r\n","\r\n            Setter should ideally be \"protected AND internal\"\r\n            ":"\r\n            理想情况下应该受到“保护和内部”\r\n            \r\n"," object regarding whether it is actively tracking or suspending tracking.\r\n            ":" 关于它是主动跟踪还是暂停跟踪。\r\n            \r\n","\r\n            Cached MethodInfo for the method for this state\r\n            ":"\r\n            该方法的缓存方法info\r\n            \r\n","\r\n            A limit for truncating string expansions within an evaluated Condition. Properties, item metadata, or item groups will be truncated to N characters such as 'N...'.\r\n            Enabled by ExpanderOptions.Truncate.\r\n            ":"\r\n            在已评估条件内截断字符串扩展的限制。 属性、项元数据或项组将被截断为N个字符，例如'N。..'.\r\n            通过ExpanderOptions启用。截断。\r\n            \r\n","\r\n            Mapping of configuration ids to plan configuration data.\r\n            ":"\r\n            配置ID的映射以计划配置数据。\r\n            \r\n","\r\n            Creates a table containing implicit imports by project document.\r\n            ":"\r\n            创建包含按项目文档进行隐式导入的表。\r\n            \r\n","\r\n            This is a performance optimization allowing tasks to skip expensive double-logging.\r\n            ":"\r\n            这是一个性能优化，允许任务跳过昂贵的双重遗迹。\r\n            \r\n","\r\n            The verbosity level directs the amount of detail that appears in a logger's event log. Though this is only a\r\n            recommendation based on user preferences, and a logger is free to choose the exact events it logs, it is still\r\n            important that the guidelines for each level be followed, for a good user experience.\r\n            ":"\r\n            冗长级别指示记录器事件日志中出现的细节数量。虽然这只是一个\r\n            根据用户的首选项进行建议，并免费选择记录仪，它仍在\r\n            重要的是要遵循每个级别的准则，以获得良好的用户体验。\r\n            \r\n","\r\n            Gets or sets the PropertyName value. \r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"\r\n            获取或设置属性名称值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n","\r\n            NodeId where event took place\r\n            ":"\r\n            发生事件发生的nodeid\r\n            \r\n","\r\n            Useful for reducing the wire cost of IPC for out-of-proc nodes used during\r\n            design-time builds that only need to populate a known set of data.\r\n            ":"\r\n            对于降低IPC的电线成本有用\r\n            设计时间构建只需要填充已知数据集。\r\n            \r\n","\r\n            Represents an API contract definition\r\n            ":"\r\n            代表API合同定义\r\n            \r\n","Special parameters that the task factory can use to modify how it executes tasks, \r\n            such as Runtime and Architecture.  The key is the name of the parameter and the value is the parameter's value. This \r\n            is the set of parameters that was set on the UsingTask using e.g. the UsingTask Runtime and Architecture parameters.":"任务工厂可以用来修改其执行任务的特殊参数，\r\n            例如运行时和架构。关键是参数的名称，值是参数的值。这个\r\n            是在usedTask上设置的一组参数。使用TASK运行时和体系结构参数。\r\n"," that contained the globs.\r\n            ":" 其中包含地球。\r\n            \r\n","A collection of strings which list the chained reference assembly paths with the highest version being first":"列出链式参考组件路径的字符串集，最高版本是第一个\r\n","The invalid line number, or zero.":"无效的线号，或零。\r\n","\r\n            Never used to represent built-in metadata, like %(Filename). There is always a backing XML object.\r\n            ":"\r\n            从未用来代表内置元数据，例如％（文件名）。总是有一个备份XML对象。\r\n            \r\n","The type of item this definition object represents.":"该定义对象表示的项目类型。\r\n","\r\n            The provider provides the in-proc node.\r\n            ":"提供商提供了程序内节点。\r\n            \r\n","\r\n            The tools version specified for the configuration.\r\n            Always specified.\r\n            May have originated from a /tv switch, or an MSBuild task,\r\n            or a Project tag, or the default.\r\n            ":"\r\n            为配置指定的工具版本。\r\n            始终指定。\r\n            可能起源于A /TV Switch或MSBuild任务，\r\n            或项目标签或默认标签。\r\n            \r\n","\r\n            Helper methods that simplify registry access.\r\n            ":"\r\n            简化注册表访问的帮助方法。\r\n            \r\n","The configuration response.":"配置响应。\r\n","\r\n            Creates a mutable ProjectInstance directly, using the specified logging service.\r\n            Assumes the project path is already normalized.\r\n            Used by the RequestBuilder.\r\n            ":"使用指定的记录服务直接创建可变的ProjectInstance。\r\n            假设项目路径已经标准化。\r\n            由请求构建器使用。\r\n            \r\n","\r\n            Arguments for target finished events\r\n            ":"\r\n            目标成品事件的论点\r\n            \r\n","The result for the request.":"请求的结果。\r\n","\r\n            Get an enumerator over any child onerrors\r\n            ":"\r\n            枚举任何孩子\r\n            \r\n","\r\n            Represents a class which is capable of building BuildRequestEntries.\r\n            ":"\r\n            代表能够建立BuildRequestentries的类。\r\n            \r\n","\r\n            List of ProjectTargetElement's traversing into imports.\r\n            Gathered during the first pass to avoid traversing again.\r\n            ":"\r\n            ProjectTargetElement的列表正在进口。\r\n            在第一次通行证中聚集，以避免再次穿越。\r\n            \r\n","\r\n            Order matters since the profiler pretty printer orders profiled items from top to bottom using \r\n            the pass they belong to\r\n            ":"\r\n            订单很重要，因为Profiler漂亮的打印机订购了从上到下介绍的项目\r\n            他们属于的通行证\r\n            \r\n","\r\n            Called by the Evaluator during project evaluation.\r\n            ":"\r\n            在项目评估期间由评估者拨打。\r\n            \r\n","\r\n            The next target ID to assign when a target started event is received.\r\n            ":"\r\n            收到目标启动事件时要分配的下一个目标ID。\r\n            \r\n","\r\n            This class packages information about task which has been loaded from a task factory.\r\n            ":"\r\n            此类包装有关已从任务工厂加载的任务的信息。\r\n            \r\n","\r\n            An empty location, used as the starting instance.\r\n            ":"\r\n            一个空位置，用作起始实例。\r\n            \r\n","\r\n            Take the path to a reference assembly directory which contains a RedistList folder which then contains a FrameworkList.xml file. \r\n            We will read in the xml file and determine if it has an IncludedFramework element in the redist list. If it does it will calculate\r\n            the path where the next link in the chain should be and return that path.\r\n            Also, when reading the redist list, if any display name is found it will be cached, keyed off the path passed in.\r\n            ":"以通往参考总成目录的路径，该目录包含一个redistList文件夹，然后包含一个Frameworklist.xml文件。\r\n            我们将在XML文件中阅读，并确定其在“ redist”列表中是否包含框架元素。如果这样做会计算\r\n            链中的下一个链接应为并返回该路径的路径。\r\n            另外，当阅读重新列表时，如果发现任何显示名称将被缓存，则将通过的路径锁定。\r\n            \r\n","\r\n            The submission with which this result is associated.\r\n            ":"\r\n            与此结果关联的提交。\r\n            \r\n","\r\n            It is safe to modify the children in this way\r\n            during enumeration. See ":"\r\n            以这种方式修改孩子是安全的\r\n            在枚举期间。看\r\n","\r\n            Constructs a graph build result with an exception\r\n            ":"\r\n            构建图形构建结果，有例外\r\n            \r\n","\r\n            Gets the project that was marked dirty.\r\n            ":"\r\n            获取标记为肮脏的项目。\r\n            \r\n","\r\n            Avoid having a BinaryWriter just to write a 4-byte int\r\n            ":"\r\n            避免拥有二进制作者只是为了编写4字节INT\r\n            \r\n","\r\n            Static methods that are allowed in constants. Key = Type or Type::Method, Value = Tuple of AssemblyQualifiedTypeName (where null = mscorlib) or the actual type object\r\n            ":"\r\n            常数允许的静态方法。 key = type或type :: method，value = assemblyQualifiedTypename（其中null = mscorlib）或实际类型对象的元组\r\n            \r\n","\r\n            Callback to create a ProjectRootElement if need be\r\n            ":"\r\n            根据需要\r\n            \r\n","\r\n            Returns the value of the requested task parameter\r\n            ":"\r\n            返回请求的任务参数的值\r\n            \r\n","\r\n            Creates new file for logging\r\n            ":"\r\n            创建用于记录的新文件\r\n            \r\n","The user-specified ToolsVersion (through e.g. /tv: on the command line). May be null":"用户指定的ToolsVersion（例如 /TV：在命令行上）。可能是无效的\r\n","can be null":"可以是零的\r\n","\r\n            This class is used by tasks to log their command lines. This class extends\r\n            ":"\r\n            任务使用此类来记录其命令行。此课程扩展\r\n            \r\n","\r\n            Intrinsic function that transforms expressions by invoking methods of System.String on the itemspec\r\n            of the item in the pipeline.\r\n            ":"\r\n            通过调用系统的方法来转换表达式的固有函数。\r\n            管道中的项目。\r\n            \r\n","\r\n            This is the set of targets which are currently building but which have not yet completed.\r\n            { targetName -> globalRequestId }\r\n            ":"\r\n            这是目前正在构建但尚未完成的一组目标。\r\n            {targetName-> globalRequestID}\r\n            \r\n","\r\n            Represents the schema of a string property.\r\n            ":"\r\n            表示字符串属性的模式。\r\n            \r\n","\r\n            Compare booleans\r\n            ":"\r\n            比较布尔人\r\n            \r\n","\r\n            Saves the current operating environment.\r\n            ":"\r\n            保存当前的操作环境。\r\n            \r\n","Location of the xml element containing the ":"XML元素的位置\r\n","\r\n            Called by the internal MSBuild task.\r\n            Does not take the lock because it is called by another request builder thread.\r\n            ":"\r\n            由内部MSBUILD任务调用。\r\n            不采用锁，因为另一个请求构建器线程将其调用。\r\n            \r\n","\r\n            Retrieves a set of build requests which have the specified parent.  If root is null, this will retrieve all of the \r\n            top-level requests.\r\n            ":"\r\n            检索具有指定父母的一组构建请求。如果根为null，则将检索所有\r\n            顶级请求。\r\n            \r\n","\r\n            Make an attempt to create a string showing what we were trying to execute when we failed.\r\n            This will show any intermediate evaluation which may help the user figure out what happened.\r\n            ":"\r\n            尝试创建一个字符串，显示我们在失败时试图执行的内容。\r\n            这将显示任何中间评估，这可能有助于用户弄清楚发生了什么。\r\n            \r\n","\r\n            Adds (or modifies the value of) a parameter on this task\r\n            ":"\r\n            在此任务上添加（或修改）参数\r\n            \r\n","\r\n            Reports this result to the engine and cleans up.\r\n            ":"\r\n            将此结果报告给引擎并清理。\r\n            \r\n","\r\n            Initializes a new instance of the ProjectImportedEventArgs class.\r\n            ":"\r\n            初始化ProjectImportedEventargs类的新实例。\r\n            \r\n","\r\n            The singleton instance for components which adhere to the singleton pattern.\r\n            ":"\r\n            遵守单例图案的组件的单例实例。\r\n            \r\n","\r\n            All explicit and implicit targets have results.\r\n            ":"\r\n            所有显式和隐式目标都有结果。\r\n            \r\n","The architecture of the build tools location to get":"构建工具位置的体系结构以获取\r\n","\r\n            The TaskFinished event handler\r\n            ":"\r\n            任务完成的事件处理程序\r\n            \r\n",".\r\n            The setter is private to make it more difficult to downgrade an existing PRE to an implicitly loaded state, which should never happen.\r\n            ":"。\r\n            Setter是私人的，可以使将现有的PRE降级到隐式加载状态更加困难，这绝对不会发生。\r\n            \r\n","\r\n            Verifies that the request is scheduled and in the expected state.\r\n            ":"\r\n            验证该请求是计划的，并且处于预期状态。\r\n            \r\n","\r\n            Project collection in which this Project is a member.\r\n            All Project's are a member of exactly one ProjectCollection.\r\n            Their backing ProjectRootElement may be shared with Projects in another ProjectCollection.\r\n            ":"\r\n            该项目是成员的项目收集。\r\n            所有项目都是一个项目汇编的成员。\r\n            他们的支持项目Rootelement可以与另一个ProjectCollection的项目共享。\r\n            \r\n","\r\n            Load content of Platform.xml\r\n            ":"\r\n            加载platform.xml的内容\r\n            \r\n","The set of configurations to consider.":"要考虑的一组配置。\r\n","\r\n            Whether to profile the evaluation\r\n            ":"\r\n            是否介绍评估\r\n            \r\n"," are mutually exclud\r\n            ":" 相互排除\r\n            \r\n","\r\n            Path to this toolset's tasks and targets. Corresponds to $(MSBuildToolsPath) in a project or targets file.\r\n            ":"\r\n            通往此工具集的任务和目标的路径。对应于项目或目标文件中的$（msbuildtoolspath）。\r\n            \r\n","\r\n            The startup directory.\r\n            ":"\r\n            启动目录。\r\n            \r\n","\r\n            This field is optional and is culture invariant. \r\n            ":"\r\n            该领域是可选的，是文化不变的。\r\n            \r\n","\r\n            Returns true if there is a toolset defined for the specified\r\n            tools version, otherwise false.\r\n            ":"\r\n            如果有针对指定的工具集定义的工具集，则返回true\r\n            工具版本，否则为错误。\r\n            \r\n","\r\n            Extract the full project key from the BuildEventContext\r\n            ":"\r\n            从BuildEventContext提取完整的项目密钥\r\n            \r\n","Type of the properties used.":"使用的属性类型。\r\n","File names to append, if it's null this method has no effect":"文件名是要附加的，如果是无效的，则该方法没有效果\r\n"," to provide a reference to the ":" 提供参考\r\n","\r\n            The externally specified sub-toolset version that, combined with the ToolsVersion, is used to determine\r\n            the toolset properties for this project.\r\n            ":"\r\n            外部指定的子模式版本与工具交换相结合来确定\r\n            该项目的工具集属性。\r\n            \r\n","The target results":"目标结果\r\n","\r\n            Reads a line from the StreamReader, trimming leading and trailing whitespace.\r\n            ":"\r\n            读取流程阅读器的一行，修剪领先和尾随的空格。\r\n            \r\n","\r\n            Appends a file name. Quotes are added if they are needed. \r\n            If the first character of the file name is a dash, \".\\\" is prepended to avoid confusing the file name with a switch\r\n            This method does not append a space to the command line before executing.\r\n            ":"\r\n            附加文件名。如果需要，则添加报价。\r\n            如果文件名的第一个字符是破折号，“。\\”，以避免将文件名与交换机混淆\r\n            此方法在执行之前不会将空间附加到命令行。\r\n            \r\n","\r\n            When this is true, project files that do not exist on the disk will be skipped. By default,\r\n            such projects will cause an error.\r\n            ":"\r\n            如果这是真的，将跳过磁盘上不存在的项目文件。默认，\r\n            这样的项目将导致错误。\r\n            \r\n","\r\n            Retrieves the value of the named metadatum.\r\n            ":"\r\n            检索命名元数据的价值。\r\n            \r\n","\r\n            What kind of LoggerMode are the logging services when created.\r\n            They could be Synchronous or Asynchronous\r\n            ":"\r\n            创建时的日志记录服务是什么样的。\r\n            它们可能是同步的或异步的\r\n            \r\n","The item to attempt to find a match for.":"试图找到匹配项的项目。\r\n","The search pattern to check":"搜索模式检查\r\n","\r\n            Creates an item definition.\r\n            Caller must add it to the location of choice in the project.\r\n            ":"\r\n            创建项目定义。\r\n            呼叫者必须将其添加到项目中选择的位置。\r\n            \r\n","\r\n            Build default target/s with specified loggers.\r\n            Returns true on success, false on failure.\r\n            Loggers may be null.\r\n            Only valid if mutable.\r\n            ":"\r\n            使用指定的记录器构建默认目标。\r\n            成功返回，成功，失败。\r\n            伐木者可能是无效的。\r\n            仅有效，如果可变。\r\n            \r\n","\r\n            The number of out-of-proc nodes that can be created without hitting the \r\n            node limit.\r\n            ":"\r\n            可以创建的无关的范围内节点的数量，而无需击中\r\n            节点限制。\r\n            \r\n","\r\n            Indicates if a property is configuration-dependent as indicated by the presence of a configuration\r\n            condition attached to the property definition at its persistence location.\r\n            ":"\r\n            指示属性是否取决于配置，如配置的存在所示\r\n            条件附在属性定义的持久位置。\r\n            \r\n","\r\n            Contains a list of item and property collections, optimized to allow\r\n                - very fast \"cloning\"\r\n                - quick lookups\r\n                - scoping down of item subsets in nested scopes (useful for batches)\r\n                - isolation of adds, removes, modifies, and property sets inside nested scopes\r\n                \r\n            When retrieving the item group for an item type, each table is consulted in turn,\r\n            starting with the primary table (the \"top\" or \"innermost\" table), until a table is found that has an entry for that type.\r\n            When an entry is found, it is returned without looking deeper.\r\n            This makes it possible to let callers see only a subset of items without affecting or cloning the original item groups,\r\n            by populating a scope with item groups that are empty or contain subsets of items in lower scopes.\r\n            \r\n            Instances of this class can be cloned with Clone() to share between batches.\r\n            \r\n            When EnterScope() is called, a fresh primary table is inserted, and all adds and removes will be invisible to\r\n            any clones made before the scope was entered and anyone who has access to item groups in lower tables.\r\n            \r\n            When LeaveScope() is called, the primary tables are merged into the secondary tables, and the primary tables are discarded.\r\n            This makes the adds and removes in the primary tables visible to clones made during the previous scope.\r\n            \r\n            Scopes can be populated (before Adds, Removes, and Lookups) using PopulateWithItem(). This reduces the set of items of a particular\r\n            type that are visible in a scope, because lookups of items of this type will stop at this level and see the subset, rather than the\r\n            larger set in a scope below.\r\n            \r\n            Items can be added or removed by calling AddNewItem() and RemoveItem(). Only the primary level is modified.\r\n            When items are added or removed they enter into a primary table exclusively for adds or removes, instead of the main primary table.\r\n            This allows the adds and removes to be applied to the scope below on LeaveScope(). Even when LeaveScope() is called, the adds and removes\r\n            stay in their separate add and remove tables: if they were applied to a main table, they could truncate the downward traversal performed by lookups\r\n            and hide items in a lower main table. Only on the final call of LeaveScope() can all adds and removes be applied to the outermost table, i.e., the project.\r\n            \r\n            Much the same applies to properties.\r\n            \r\n            For sensible semantics, only the current primary scope can be modified at any point.\r\n            ":"\r\n            包含项目和属性集合的列表，优化为允许\r\n                -非常快的\"克隆\"\r\n                -快速查找\r\n                -嵌套范围内的项目子集的范围（对批次有用）\r\n                -在嵌套范围内隔离添加、删除、修改和属性集\r\n                \r\n            检索项类型的项组时，将依次查阅每个表,\r\n            从主表（\"顶部\"或\"最内部\"表）开始，直到找到具有该类型条目的表。\r\n            当一个条目被发现时，它被返回而不看更深。\r\n            这样就可以让调用者只看到项目的子集，而不会影响或克隆原始项目组,\r\n            通过在作用域中填充为空的项组或在较低作用域中包含项子集的项组。\r\n            \r\n            可以使用Clone()克隆此类的实例，以便在批处理之间共享。\r\n            \r\n            当调用EnterScope()时，将插入一个新的主表，并且所有添加和删除都将不可见\r\n            在输入范围之前进行的任何克隆以及有权访问较低表中的项组的任何人。\r\n            \r\n            调用LeaveScope()时，将主表合并到辅助表中，并丢弃主表。\r\n            这使得主表中的添加和删除对于在前一个作用域中创建的克隆可见。\r\n            \r\n            可以使用PopulateWithItem()填充范围（在添加、删除和查找之前）。 这减少了一组特定的项目\r\n            在作用域中可见的类型，因为此类型的项的查找将在此级别停止并查看子集，而不是\r\n            更大的设置在下面的范围。\r\n            \r\n            可以通过调用AddNewItem()和RemoveItem()来添加或删除项。 只修改初级级别。\r\n            添加或删除项目时，它们会进入主表，专门用于添加或删除，而不是主主表。\r\n            这允许在LeaveScope()上将添加和删除应用于下面的范围。 即使调用LeaveScope()，添加和删除\r\n            留在它们单独的add和remove表中：如果它们应用于主表，它们可以截断查找执行的向下遍历\r\n            并将项目隐藏在较低的主表中。 只有在最后调用LeaveScope()时，才能将所有添加和删除应用于最外层的表，即项目。\r\n            \r\n            这同样适用于属性。\r\n            \r\n            对于合理的语义，任何时候都只能修改当前的主作用域。\r\n            \r\n","\r\n            Snapshot of the environment from the configuration this results comes from.\r\n            This should only be populated when the configuration for this result is moved between nodes.\r\n            ":"\r\n            来自配置的环境快照此结果来自。\r\n            只有在节点之间移动此结果的配置时，才应填充这一点。\r\n            \r\n","\r\n            Default constructor. Needed for deserialization from a persisted format.\r\n            ":"\r\n            默认构造函数。从持续的格式中进行绝对序列化所需。\r\n            \r\n","An enumeration of property definitions":"列举财产定义\r\n","The node-side endpoint.":"节点端端点。\r\n","\r\n            An enumeration of all component types recognized by the system\r\n            ":"\r\n            对系统认可的所有组件类型的枚举\r\n            \r\n","\r\n            The target names that were requested to execute.\r\n            ":"\r\n            要求执行的目标名称。\r\n            \r\n","\r\n            The base path we want to relativize to. Must be absolute.\r\n            Should ":"\r\n            我们想要相对化的基本路径。 必须是绝对的。\r\n            应该 \r\n","\r\n            Returns a default invalid BuildEventContext\r\n            ":"\r\n            返回默认无效的buildEventContext\r\n            \r\n","\r\n            Remove an item from this scope\r\n            ":"\r\n            从此范围中删除项目\r\n            \r\n","The field or local variable to change.":"要更改的字段或本地变量。\r\n","\r\n            The location.\r\n            ":"\r\n            那个地点。\r\n            \r\n","\r\n            The RuleSchema provides a strongly typed identity handle to the underlying schema data model.\r\n            ":"\r\n            RulesChema为基础模式数据模型提供了强烈键入的身份手柄。\r\n            \r\n","The thing blocking the active request on the node.":"阻止节点上的活动请求的事物。\r\n"," if the file is an empty XML file, otherwise ":" 如果文件是一个空的XML文件，则\r\n","\r\n            Deep clone a metadatum, retaining the same parent.\r\n            ":"\r\n            深克隆元数据，保留同一位父母。\r\n            \r\n","\r\n            Sets or returns the project to build.\r\n            ":"\r\n            设置或返回项目构建。\r\n            \r\n","\r\n            Saves a \"logical\" or \"preprocessed\" project file, that includes all the imported\r\n            files as if they formed a single file.\r\n            ":"\r\n            保存一个“逻辑”或“预处理”项目文件，其中包括所有导入的\r\n            文件好像它们形成了一个文件。\r\n            \r\n","Exception to raise to event handlers":"将活动处理人员提升的例外\r\n","\r\n            This field is optional and culture invariant.\r\n            ":"\r\n            该领域是可选的和文化不变的。\r\n            \r\n","\r\n            set to true if the metadata has no other explicitly-specified modification.  Otherwise it will return only the explicitly-specified\r\n            modification if one exists.":"\r\n            如果元数据没有其他明确指定的修改，则设置为true。否则，它将仅返回明确指定的\r\n            修改如果存在。\r\n","\r\n            Returns true if the character at the specified index \r\n            is the specified char. \r\n            Leaves index one past the character.\r\n            ":"\r\n            如果指定索引处的字符返回true\r\n            是指定的字符。\r\n            在角色的一个经历中留下索引。\r\n            \r\n","\r\n            Location of the condition attribute if any.\r\n            ":"\r\n            条件属性的位置（如果有）。\r\n            \r\n",". The implementation of this\r\n            collection uses segmented arrays to avoid placing objects on the Large Object Heap.\r\n            ":"。实施\r\n            Collection使用分段阵列避免将对象放在大对象堆上。\r\n            \r\n","\r\n            Perform necessary actions to shut down the node.\r\n            ":"\r\n            执行必要的操作以关闭节点。\r\n            \r\n"," represents a Build Customization, this field represents the command line template that is going to be used by a Build Customization task to invoke the tool.\r\n            ":" 代表构建自定义，此字段表示命令行模板将由构建自定义任务使用来调用该工具。\r\n            \r\n","\r\n            Instructs the ":"\r\n            指示\r\n","\r\n            Logs an warning regarding an unexpected task failure\r\n            This will include a stack dump.\r\n            ":"\r\n            记录有关意外任务故障的警告\r\n            这将包括一个堆栈转储。\r\n            \r\n","\r\n            Status types for the build request engine\r\n            ":"\r\n            构建请求引擎的状态类型\r\n            \r\n","\r\n            All the projects currently loaded into this collection.\r\n            Each has a unique combination of path, global properties, and tools version.\r\n            ":"\r\n            当前加载到此集合中的所有项目。\r\n            每个都有路径，全局属性和工具版本的独特组合。\r\n            \r\n","\r\n            The next project ID to assign when a project started event is received.\r\n            ":"\r\n            收到项目启动事件时要分配的下一个项目ID。\r\n            \r\n","\r\n            Location of the exclude attribute, if any\r\n            ":"\r\n            排除属性的位置，如果有的话\r\n            \r\n","The version of the runtime the message packet was created from":"运行时的版本是由消息包创建的\r\n","\r\n            Returns true if the next two characters at the specified index\r\n            are the specified sequence.\r\n            Leaves index one past the second character.\r\n            ":"\r\n            如果指定索引处的接下来两个字符，则返回true\r\n            是指定的序列。\r\n            将索引叶索引超过第二个字符。\r\n            \r\n","\r\n            The host services object.\r\n            ":"\r\n            主机服务对象。\r\n            \r\n","\r\n            Clears the cache for the specified build submission ID.\r\n            ":"\r\n            清除指定构建提交ID的缓存。\r\n            \r\n","\r\n            Returns the list of properties in a ":"\r\n            返回属性列表\r\n","\r\n            Invalid Handle\r\n            ":"\r\n            无效的手柄\r\n            \r\n"," of the element which referenced the SDK.":" 引用SDK的元素。\r\n","\r\n            Disable the use of any caching when resolving SDKs.\r\n            ":"\r\n            解决SDK时禁用任何缓存的使用。\r\n            \r\n","\r\n            Using this instead of EnvironmentOverride as that takes a Dictionary,\r\n            which cannot be set from an MSBuild project.\r\n            ":"\r\n            用它而不是环境用作词典，\r\n            无法从MSBUILD项目设置。\r\n            \r\n","\r\n            Event handler for the BuildEngine's OnEngineException event.\r\n            ":"\r\n            BuildEngine的OnEgneException事件的活动处理程序。\r\n            \r\n","\r\n            New requests always go on the front of the queue, because we prefer to build the projects we just received first (depth first, absent\r\n            any particular scheduling algorithm such as in the single-proc case.)\r\n            ":"\r\n            新请求总是在队列的前面进行，因为我们更喜欢构建刚收到的项目（首先，缺席，不存在\r\n            任何特定的调度算法，例如单个案例中。）\r\n            \r\n","\r\n            Dispose of the build manager.\r\n            ":"\r\n            处置构建经理。\r\n            \r\n","\r\n            Name for MSBuild.exe\r\n            ":"\r\n            msbuild.exe的名称\r\n            \r\n","Task items to append, if null this method has no effect":"要附加的任务项，如果无效，则无效\r\n","\r\n            Represents an entry in the ProjectStringCache.\r\n            Can't be a struct because the copy-by-value and the ref counting don't go well together.\r\n            ":"\r\n            表示ProjectStringCache中的条目。\r\n            不能成为结构，因为逐个价值和裁判计数不能很好地融合在一起。\r\n            \r\n","\r\n            Extracts the name, arguments, binding flags, and invocation type for a static or instance function.\r\n            Also extracts the remainder of the expression that is not part of this function\r\n            ":"\r\n            为静态或实例函数提取名称，参数，绑定标志和调用类型。\r\n            还提取不属于此功能一部分的表达式的其余部分\r\n            \r\n","\r\n            The main table, populated with items that\r\n            are initially visible in this scope. Does not \r\n            include adds or removes unless it's the table in \r\n            the outermost scope.\r\n            ":"\r\n            主桌，填充的项目\r\n            最初在此范围中可见。才不是\r\n            包括添加或删除，除非是桌子\r\n            最外面的范围。\r\n            \r\n","\r\n            We need to clone this object since it gets modified for each node which is launched.\r\n            ":"\r\n            我们需要克隆此对象，因为它对启动的每个节点进行了修改。\r\n            \r\n","\r\n            Constructs a GraphBuildRequestData for build requests based on a project graph.\r\n            ":"\r\n            构建一个基于项目图的构建请求的GraphBuildRequestData。\r\n            \r\n"," returns the total size that would be occupied by each element in an array of this type –\r\n             including any padding the implementation chooses to add. Specifically, array elements lie ":" 返回此类型数组中每个元素将占用的总大小 - \r\n             包括任何填充该实现都选择添加。具体而言，阵列元素躺在\r\n","Add()":"添加（）\r\n","\r\n            Requests to yield the node.\r\n            Thread safe, however Yield cannot be called unless the\r\n            last call to Yield or Reacquire was Reacquire.\r\n            ":"\r\n            要求产生节点的请求。\r\n            线程安全，但是，除非\r\n            重新召集或重新征服的最后呼吁。\r\n            \r\n","\r\n            The build component host. \r\n            ":"\r\n            构建组件主机。\r\n            \r\n","\r\n            Location of the match.\r\n            ":"\r\n            比赛的位置。\r\n            \r\n","\r\n            Processes a packet\r\n            ":"\r\n            处理数据包\r\n            \r\n","Components may declare platform guids in the registry this can be used to return only directories which have a certain platform guid. If this value is blank or null no filtering is done":"组件可以在注册表中声明平台GUID，这可以用于返回具有特定平台GUID的目录。如果此值为空白或无效\r\n","\r\n            Receives the project started event and records the submission as being in-progress.\r\n            ":"\r\n            接收项目开始事件，并将提交记录为正在进行中。\r\n            \r\n","\r\n            Don't use\r\n            ":"\r\n            不要使用\r\n            \r\n","\r\n            MetadataValue is assumed to be in its escaped form.\r\n            ":"\r\n            假定元数据处于其逃脱形式。\r\n            \r\n","\r\n            Insert the child before the reference child.\r\n            Reference child if provided must be parented by this element.\r\n            Reference child may be null, in which case this is equivalent to ":"\r\n            在参考子里插入孩子。\r\n            参考子女（如果提供）必须由此元素育儿。\r\n            参考儿童可能是无效的，在这种情况下，这等同于\r\n","\r\n            Get a list of SDK's installed on the machine for a given target platform\r\n            ":"\r\n            获取针对给定目标平台在计算机上安装的SDK的列表\r\n            \r\n","\r\n            Overridable property specifying the encoding of the captured task standard error stream\r\n            ":"\r\n            指定捕获的任务标准错误流的编码的属性\r\n            \r\n","\r\n            Returns a dictionary of the UNESCAPED values of the metadata\r\n            ":"\r\n            返回元数据的UNESCAPER值的字典\r\n            \r\n","\r\n            Get the toolset with the specified tools version.\r\n            If it is not present, returns null.\r\n            ":"\r\n            使用指定的工具版本获取工具集。\r\n            如果不存在，请返回null。\r\n            \r\n","The names of the targets to build.":"要构建目标的名称。\r\n","\r\n            For a file, the structure specifies when the file was last written to, truncated, or overwritten.\r\n            For a directory, the structure specifies when the directory is created.\r\n            ":"\r\n            对于文件，该结构指定最后写入，截断或覆盖的文件何时。\r\n            对于目录，该结构指定创建目录何时。\r\n            \r\n","\r\n             If hosts tend to load lots of projects with the same path, the value will have to be\r\n             changed to a more efficient type of collection.\r\n            \r\n             Lock on this object. Concurrent load must be thread safe.\r\n             Not using ConcurrentDictionary because some of the add/update\r\n             semantics would get convoluted.\r\n             ":"\r\n             如果主机倾向于用相同的路径加载很多项目，则该值必须为\r\n             更改为更有效的收藏类型。\r\n            \r\n             锁定此对象。并发负载必须是安全的。\r\n             由于某些添加/更新\r\n             语义会变得复杂。\r\n             \r\n","\r\n            The variable or field to be changed, which may be accessed by multiple threads.\r\n            ":"\r\n            要更改的变量或字段，可以通过多个线程访问。\r\n            \r\n","\r\n            Get the specified type from the assembly partial name supplied.\r\n            ":"\r\n            从提供的汇编部分名称中获取指定类型。\r\n            \r\n","The id of the node which terminated.":"终止节点的ID。\r\n","\r\n            Check the property function whitelist whether this method is available.\r\n            ":"\r\n            检查属性功能白名单是否可用。\r\n            \r\n","\r\n            Returns true if there are results for the specified target\r\n            ":"\r\n            如果指定目标有结果，则返回true\r\n            \r\n","\r\n            Represent the schema of an integer property.\r\n            ":"\r\n            代表整数属性的模式。\r\n            \r\n","\r\n            Gets the evaluated include for this item, unescaped.\r\n            ":"\r\n            获取评估的内容包括该项目，不使用。\r\n            \r\n"," may be called in this state.  All other methods raise InvalidOperationException\r\n            ":" 可以在此状态下称呼。所有其他方法都会提高InvalidOperationException\r\n            \r\n","\r\n            Legacy threading semantics indicate that if a submission is to be built\r\n            only on the in-proc node and the submission is executed synchronously, then all of its\r\n            requests will be built on the thread which invoked the build rather than a\r\n            thread owned by the BuildManager.\r\n            ":"\r\n            传统线程语义表明，如果要构建提交\r\n            仅在程序内节点上并同步执行提交\r\n            请求将建立在调用构建而不是一个调用的线程上\r\n            buildmanager拥有的线程。\r\n            \r\n","previous project file":"先前的项目文件\r\n","The request being resumed.":"请求恢复。\r\n","\r\n            Callback for event raised when the build request engine's status changes.\r\n            ":"\r\n            构建请求引擎状态更改时提出的事件回调。\r\n            \r\n","A ToolsetPropertyDefinition instance corresponding to the property name requested.":"与所请求的属性名称相对应的ToolsetPropertyDefinition实例。\r\n","\r\n            Accessor for the blocking build requests, if any.\r\n            ":"\r\n            阻止构建请求的访问器（如果有）。\r\n            \r\n","\r\n                A dictionary containing the target list for each node. If a node's target list is empty, then no targets were\r\n                inferred for that node and it should get skipped during a graph based build.\r\n            ":"\r\n                一个包含每个节点的目标列表的字典。如果节点的目标列表为空，则没有目标\r\n                推断该节点，应该在基于图形的构建过程中跳过。\r\n            \r\n","\r\n            ERROR_DIRECTORY\r\n            ":"\r\n            error_directory\r\n            \r\n","\r\n            Parse a ProjectMetadataElement\r\n            ":"\r\n            解析一个项目\r\n            \r\n","\r\n            Retrieves the name of the host.\r\n            ":"\r\n            检索主机的名称。\r\n            \r\n","\r\n            Location of the keepDuplicates attribute, if any\r\n            ":"\r\n            保留属性的位置，如果有的话\r\n            \r\n","\r\n            The build request to send.\r\n            ":"\r\n            构建请求发送。\r\n            \r\n","\r\n            The switch representation of this property for the case when the parent ":"\r\n            当父级的情况下，此属性的开关表示\r\n","\r\n            The project's root directory.\r\n            ":"\r\n            项目的根目录。\r\n            \r\n","\r\n            Calls parseName and returns false or throws exception if the resulting name is not\r\n            a valid NCName.  Returns the input string if there is no error.\r\n            ":"\r\n            呼叫parsename并返回false或抛出异常，如果结果名称不是\r\n            有效的NCNAME。如果没有错误，则返回输入字符串。\r\n            \r\n","\r\n            Owning project\r\n            ":"\r\n            拥有项目\r\n            \r\n","\r\n            Starts a build using this project, building the default targets.\r\n            Returns true on success, false on failure.\r\n            Works on a privately cloned instance. To set or get\r\n            virtual items for build purposes, clone an instance explicitly and build that.\r\n            Does not modify the Project object.\r\n            ":"\r\n            使用此项目启动构建，建立默认目标。\r\n            成功返回，成功，失败。\r\n            在私人克隆实例上工作。设置或获得\r\n            用于构建目的的虚拟项目，明确克隆实例并构建该实例。\r\n            不修改项目对象。\r\n            \r\n","\r\n            Parse a ProjectTargetElement\r\n            ":"\r\n            解析projectTargetElement\r\n            \r\n","The error message string only.":"仅错误消息字符串。\r\n","\r\n            We use this dictionary to track whether or not we've seen a given\r\n            toolset definition before, since the .NET configuration classes\r\n            won't perform this check without respect for case.\r\n            ":"\r\n            我们使用此词典来跟踪我们是否看到了给定的\r\n            由于.NET配置类，工具集的定义之前\r\n            不会在没有案件的情况下执行此支票。\r\n            \r\n","\r\n            If the task fails, error and continue.\r\n            ":"\r\n            如果任务失败，则错误并继续。\r\n            \r\n","The invalid column number, or zero.":"无效的列号，或零。\r\n","\r\n            Creates an import group. \r\n            Caller must add it to the location of choice in the project.\r\n            ":"\r\n            创建一个导入组。\r\n            呼叫者必须将其添加到项目中选择的位置。\r\n            \r\n","\r\n            Gets or sets the MatchOnMetadata value.\r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty or null.\r\n            ":"\r\n            获取或设置MatchonMetadata值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空或null，则删除属性。\r\n            \r\n","\r\n            Loads each MSBuild project in this solution and looks for its project-to-project references so that\r\n            we know what build order we should use when building the solution. \r\n            ":"\r\n            在此解决方案中加载每个MSBUILD项目，并寻找其项目对项目的参考\r\n            我们知道在构建解决方案时应使用什么构建顺序。\r\n            \r\n","\r\n            The actual results, if the request was satisfied.\r\n            ":"\r\n            如果满足请求，则实际结果。\r\n            \r\n","\r\n            Intrinsic function that returns only those items have the given metadata value\r\n            Using a case insensitive comparison.\r\n            ":"\r\n            仅返回这些项目具有给定的元数据值的固有功能\r\n            使用案例不敏感的比较。\r\n            \r\n"," of metadata names to keep.":" 要保留的元数据名称。\r\n","\r\n            A value indicating whether this property allows multiple values to be supplied/selected simultaneously.\r\n            ":"\r\n            指示该属性是否允许同时提供/选择多个值的值。\r\n            \r\n","\r\n            Gets an element at the specified position\r\n            ":"\r\n            在指定位置获取元素\r\n            \r\n","\r\n            This class stands in for a full target started event because it contains only the \r\n            minimum amount of inforomation needed for the logger\r\n            ":"\r\n            该课程为一个完整的目标开始事件而列入\r\n            记录器所需的最小信息量\r\n            \r\n","The list of targets to build":"构建目标列表\r\n","\r\n            Given the name of a file and a ToolsVersion, return the path to that file in the MSBuild \r\n            tools path for that ToolsVersion\r\n            ":"\r\n            给定文件和工具库的名称，请返回MSBuild中该文件的路径\r\n            该工具的工具路径\r\n            \r\n","\r\n            Not null for \"external\" objects, null for internal objects\r\n            ":"\r\n            不是“外部”对象的null，内部对象的null\r\n            \r\n","\r\n            Raises the OnNewRequest event.\r\n            ":"\r\n            举起Onnewrequest活动。\r\n            \r\n","\r\n            Get SubToolset version using Visual Studio version from Dev 12 solution file\r\n            ":"\r\n            使用Dev 12解决方案文件的Visual Studio版本获取子量图版本\r\n            \r\n","\r\n            Returns the default sub-toolset version for this sub-toolset.  Heuristic used is: \r\n            1) If Visual Studio 2010 is installed and our ToolsVersion is \"4.0\", use the base toolset, and return \r\n               a sub-toolset version of \"10.0\", to be set as a publicly visible property so that e.g. targets can \r\n               consume it.  This is to handle the fact that Visual Studio 2010 did not have any concept of sub-toolsets. \r\n            2) Otherwise, use the highest-versioned sub-toolset found.  Sub-toolsets with numbered versions will \r\n               be ordered numerically; any additional sub-toolsets will be prepended to the beginning of the list in \r\n               the order found. We use the highest-versioned sub-toolset because, in the absence of any other information, \r\n               we assume that higher-versioned tools will be more likely to be able to generate something more correct.  \r\n            \r\n            Will return null if there is no sub-toolset available (and Dev10 is not installed). \r\n            ":"\r\n            返回此子模式的默认子图案版本。使用的启发式是：\r\n            1）如果安装了Visual Studio 2010，并且我们的ToolsVersion为“ 4.0”，请使用基本工具集，然后返回\r\n               “ 10.0”的子型版本，将其设置为公开可见的属性，例如目标可以\r\n               消费。这是为了解决视觉工作室2010没有任何子工具概念的事实。\r\n            2）否则，请使用找到最高的子量。带编号版本的子工具将\r\n               被数字订购；任何其他子工具都将备用到列表的开头\r\n               找到的命令。我们使用最高的子量表，因为在没有任何其他信息的情况下\r\n               我们假设更高的工具将更有可能生成更正确的东西。\r\n            \r\n            如果没有可用的子图表（并且未安装DEV10），将返回NULL。\r\n            \r\n","\r\n            Gets a count of all of the blocked requests.\r\n            ":"\r\n            获取所有阻止请求的计数。\r\n            \r\n","\r\n            Gets the ProjectExtensions child, if any, otherwise null.\r\n            ":"\r\n            获取ProjectExtensions儿童（如果有的话）。\r\n            \r\n","\r\n            Overridable property specifying the encoding of the response file, UTF8 by default\r\n            ":"\r\n            默认属性指定响应文件的编码UTF8的编码\r\n            \r\n","The name of the property whose value was reassigned.":"重新分配价值的属性名称。\r\n","\r\n            Use the original, string-only resx parsing in .NET Core scenarios.\r\n            ":"\r\n            在.NET核心方案中使用原始的仅弦乐RESX解析。\r\n            \r\n","\r\n            Loads a project with the specified reader, tools version and global properties.\r\n            The project will be added to this project collection when it is named.\r\n            ":"\r\n            使用指定的阅读器，工具版本和全局属性加载项目。\r\n            该项目命名时将添加到此项目集合中。\r\n            \r\n","\r\n            Expected to be called when TaskHostTask is done with host of the given context.  \r\n            ":"\r\n            当任务主持台面的主机完成时，预计将被调用。\r\n            \r\n","\r\n            Avoid visiting each file more than once.\r\n            ":"\r\n            避免多次访问每个文件。\r\n            \r\n","\r\n            Returns the value if it exists.\r\n            If no value is available, returns null.\r\n            If item type is null, it is ignored, otherwise it must match.\r\n            Value, if escaped, remains escaped.\r\n            ":"\r\n            如果存在值，则返回该值。\r\n            如果没有可用的值，请返回null。\r\n            如果项目类型为null，则将忽略，否则必须匹配。\r\n            如果逃脱，价值仍然被逃脱。\r\n            \r\n","\r\n            Initialize a parented ProjectOtherwiseElement\r\n            ":"初始化育儿项目疗法元素\r\n            \r\n","The AppDomain setup information.":"AppDomain设置信息。\r\n","\r\n            The maximum number of tasks that are allowed to run concurrently\r\n            ":"\r\n            允许同时运行的最大任务数\r\n            \r\n","\r\n            Returns the value of the attribute.\r\n            If the attribute is null, returns an empty string.\r\n            ":"\r\n            返回属性的值。\r\n            如果属性为null，请返回一个空字符串。\r\n            \r\n","Event context which describes where in the build the message came from":"事件上下文描述了构建中的何处。\r\n","\r\n            Even hander for \"anyEvent\" this is a handler which will be called from each of the other event handlers\r\n            ":"\r\n            即使是“ Anyevent”的操作者，这是一个处理程序，将从每个其他事件处理程序中调用\r\n            \r\n","\r\n            Adds the results for the specified target to this result collection.\r\n            ":"\r\n            将指定目标的结果添加到此结果集合中。\r\n            \r\n","\r\n            The bucket used to evaluate items and properties.\r\n            ":"\r\n            用于评估项目和属性的存储桶。\r\n            \r\n","\r\n            The target contained by the entry.\r\n            ":"\r\n            条目包含的目标。\r\n            \r\n","\r\n            Store the 64-bit path for MSBuild / MSBuildTaskHost so that we don't have to keep recalculating it.\r\n            ":"\r\n            存储MSBUILD / MSBUILDTASKHOST的64位路径，这样我们就不必继续重新计算它。\r\n            \r\n","\r\n            2) if no targets are specified, the default targets are built\r\n            \r\n            ":"\r\n            2）如果未指定目标，则构建默认目标\r\n            \r\n            \r\n","\r\n            Gets a flag indicating if we are running under flavor of BSD (NetBSD, OpenBSD, FreeBSD)\r\n            ":"\r\n            获得一个旗帜，指示我们是否在BSD的风味下运行（NetBSD，OpenBSD，FreeBSD）\r\n            \r\n","\r\n             the set of parameters owned by this particular task host\r\n            ":"\r\n             此特定任务主机拥有的一组参数集\r\n            \r\n","\r\n                instance before converting it to a ProjectInstance for use by the ProjectGraph.\r\n                The returned ProjectInstance will be stored and provided with the ProjectGraph.\r\n                If this callback chooses to generate an immutable ProjectInstance, e.g. by\r\n                using ":"\r\n                实例将其转换为ProjectInstance供ProjectGraph使用。\r\n                返回的ProjectInstance将存储并提供ProjectGraph。\r\n                如果此回调选择生成不变的ProjectInstance，例如经过\r\n                使用\r\n","\r\n            Notifies the engine of a configuration response packet, typically generated by the Build Request Manager.  This packet is used to set\r\n            the global configuration ID for a specific configuration.\r\n            ":"\r\n            通知引擎的配置响应数据包，通常由构建请求管理器生成。此数据包用于设置\r\n            特定配置的全局配置ID。\r\n            \r\n","\r\n            Type definitions for early bound locals. This list is ordered.\r\n            Names should be unique. \r\n            ":"\r\n            类型的早期当地人定义。此列表已排序。\r\n            名称应该是唯一的。\r\n            \r\n","\r\n            Try to intern the string.\r\n            Return true if an interned value could be returned.\r\n            Return false if it was added to the intern list, but wasn't there already.\r\n            Return null if it didn't meet the length criteria for any of the buckets. Interning was rejected\r\n            ":"\r\n            尝试实习字符串。\r\n            如果可以返回实习值，则返回true。\r\n            如果将其添加到实习生列表中，则返回false，但还没有。\r\n            返回null如果不符合任何存储桶的长度标准，则返回。实习被拒绝\r\n            \r\n","The object to be held for later disposal.":"要持有以后处置的对象。\r\n","\r\n            String representation of the property reference - eg. \"MSBuildExtensionsPath32\"\r\n            ":"\r\n            属性参考的字符串表示 - 例如。 “ msbuildextensionspath32”\r\n            \r\n"," Child instance. ":" 儿童实例。\r\n","\r\n            Compares for equality\r\n            ":"\r\n            比较平等\r\n            \r\n","The originating build request.":"原始构建请求。\r\n","\r\n            Given a parsed solution, generate a top level traversal project and the metaprojects representing the dependencies for each real project\r\n            referenced in the solution.\r\n            ":"\r\n            给定解析解决方案，生成一个顶级遍历项目和代表每个真实项目依赖项的元标记\r\n            解决方案中引用。\r\n            \r\n","\r\n             The target is ready to provide error tasks.\r\n            \r\n             Transitions:\r\n             None\r\n             ":"\r\n             目标准备提供错误任务。\r\n            \r\n             过渡：\r\n             没有任何\r\n             \r\n","\r\n            The tool to Log. This is the actual tool being used, ie. if ToolExe has been specified it will be used, otherwise it will be ToolName\r\n            ":"\r\n            登录工具。这是正在使用的实际工具，即。如果指定了Toolexe，将使用它，否则将是工具名称\r\n            \r\n","\r\n            Gets the element doing the import.\r\n            ":"\r\n            获取元素进行导入。\r\n            \r\n","\r\n            Location of the condition attribute if any\r\n            ":"\r\n            条件属性的位置如果有\r\n            \r\n","\r\n            Throw if this was loaded read only\r\n            ":"如果加载仅阅读，请投掷\r\n            \r\n","Whether this node is low priority.":"该节点是否优先级。\r\n","destination item to copy the metadata from this to":"将元数据从此复制到的目标项目\r\n","\r\n            Parses the project into the ProjectRootElement\r\n            ":"\r\n            将项目解析为项目Rootlement\r\n            \r\n","\r\n            No action should be taken if multiple versions are detected\r\n            ":"\r\n            如果检测到多个版本，则应采取任何行动\r\n            \r\n"," object containing evaluated items.\r\n            ":" 包含评估项目的对象。\r\n            \r\n","\r\n            Clones this modification set.\r\n            ":"\r\n            克隆此修改集。\r\n            \r\n","\r\n            Separates item vectors from discrete items, and discards duplicates. If requested, item vector transforms are also\r\n            separated out. The item vectors (and the transforms) are partitioned by type, since there can be more than one item\r\n            vector of the same type.\r\n            ":"\r\n            将项目向量与离散项目分开，并放弃重复。如果要求，项目向量转换也是\r\n            分开。项目向量（和转换）按类型进行分区，因为可以有多个项目\r\n            相同类型的向量。\r\n            \r\n","\r\n            The request which issued this request.\r\n            ":"\r\n            发出此请求的请求。\r\n            \r\n","\r\n            Returns true if these two identities match \"fuzzily\" -- if the names pass a partial type name\r\n            match and the task identity parameters would constitute a valid merge (e.g. \"don't care\" and\r\n            something explicit).  Otherwise returns false.\r\n            ":"\r\n            如果这两个身份匹配“模糊性”，则返回true  - 如果名称传递了部分类型名称\r\n            匹配和任务身份参数将构成有效合并（例如“不在乎”和\r\n            明确的东西）。否则返回false。\r\n            \r\n"," and providing file path conversion\r\n            as used in e.g. property expansion.\r\n            ":" 并提供文件路径转换\r\n            如财产扩展。\r\n            \r\n"," may be present even on success.\r\n            ":" 即使在成功也可能存在。\r\n            \r\n","\r\n            Leaves all the call target scopes in the order they were entered.\r\n            ":"\r\n            将所有呼叫目标示波器放在输入的顺序中。\r\n            \r\n","\r\n            Handler for Warning events.\r\n            ":"\r\n            警告事件的处理程序。\r\n            \r\n","\r\n            Handle warning events\r\n            ":"\r\n            处理警告活动\r\n            \r\n","RemoveGlobalProperty":"删除globalproperty\r\n","\r\n            Creates a new property\r\n            ":"\r\n            创建一个新属性\r\n            \r\n","The loaded ProjectRootElement, or null if it is not currently in memory.":"已加载的项目Rootelement，如果当前不在内存中，则NULL。\r\n","Help keyword for host IDE. Can be null":"帮助主机IDE的关键字。可以是零的\r\n","The final set of properties that we wish this toolset property to be added to. ":"我们希望将此工具集属性添加到的最后一组属性集。\r\n","\r\n            Add a target for a Venus project into the XML doc that's being generated.  This\r\n            target will call the AspNetCompiler task.\r\n            ":"\r\n            将金星项目的目标添加到正在生成的XML文档中。这个\r\n            目标将调用AspnetCompiler任务。\r\n            \r\n","\r\n            Validates the given set of parameters, logging the appropriate errors as necessary. \r\n            ":"\r\n            验证给定的一组参数，根据需要记录适当的错误。\r\n            \r\n","\r\n            When this flag is present, caches including the ":"\r\n            当存在此标志时，包括\r\n","\r\n            version 4.6\r\n            ":"\r\n            版本4.6\r\n            \r\n","\r\n            Compare if the target string is equal to the given string.\r\n            ":"\r\n            比较目标字符串是否等于给定的字符串。\r\n            \r\n","\r\n            simple class that deserialize extension to content type data\r\n            ":"\r\n            简单的类，可以扩展到内容类型数据\r\n            \r\n","A copy of the modifications.":"修改的副本。\r\n","\r\n            Creates a project instance based on this project using the specified logging service.\r\n            ":"\r\n            使用指定的记录服务基于此项目创建项目实例。\r\n            \r\n","\r\n            The starting build request id\r\n            ":"\r\n            启动构建请求ID\r\n            \r\n","\r\n            The response indicates that the request should be sent to the specified node.\r\n            ":"\r\n            响应表明应将请求发送到指定的节点。\r\n            \r\n"," to return a result.\r\n                ":"返回结果。\r\n                \r\n","\r\n            The object used to synchronize access to the task execution host.\r\n            ":"\r\n            用于同步任务执行主机的对象。\r\n            \r\n","\r\n            The project may only be scheduled on the in-proc node.  This happens automatically if there is a host object or if a ProjectInstance\r\n            was specified.  A host may wish to specify it if they know a task depends explicitly on shared static data or other host-provided\r\n            objects.\r\n            ":"\r\n            该项目只能安排在程序内节点上。如果有主机对象或ProjectInstance，则会自动发生这种情况\r\n            已指定。如果主机知道任务明确取决于共享静态数据或其他主机提供的，则可能希望指定它\r\n            对象。\r\n            \r\n","Names of the targets that built.":"构建目标的名称。\r\n"," object indicating success.\r\n            ":" 表示成功的对象。\r\n            \r\n","\r\n            Qualifies this string property to give it a more specific classification.\r\n            ":"\r\n            符合此字符串属性的资格，以使其更具体地分类。\r\n            \r\n","\r\n            Continues building a request which was previously waiting for results.\r\n            ":"\r\n            继续构建以前正在等待结果的请求。\r\n            \r\n","\r\n            When an exception is raised in the logging thread, we do not want the application to terminate right away. \r\n            Whidbey and orcas msbuild have the logger exceptions occurring on the engine thread so that the host can\r\n            catch and deal with these exceptions as they may occur somewhat frequently due to user generated loggers.\r\n            This method will raise the exception on a delegate to which the engine is registered to. This delegate will \r\n            send the exception to the engine so that it can be raised on the engine thread.\r\n            ":"\r\n            当日志线程中提出异常时，我们不希望该应用程序立即终止。\r\n            Whidbey和Orcas Msbuild在发动机线程上存在记录器异常，以便主机可以\r\n            捕获并处理这些例外，因为它们可能由于用户生成的登录器而经常发生。\r\n            此方法将在注册发动机注册的代表上提出例外。这个代表将\r\n            将异常发送到发动机，以便可以在发动机线上升高。\r\n            \r\n","\r\n            The lookup which owns this scope, for error checking.\r\n            ":"\r\n            拥有此范围的查找，以进行错误检查。\r\n            \r\n","\r\n            Time interval in miliseconds to wait between receiving a cancelation signal and emitting the first warning that a non-cancelable task has not finished\r\n            ":"\r\n            MILISECONDS的时间间隔在接收取消信号和发出第一次警告之间等待，该警告尚未完成任务\r\n            \r\n","Metadata value":"元数据值\r\n","\r\n            The name of the task as given to FileTracker.dll.\r\n            ":"\r\n            filetracker.dll的任务名称。\r\n            \r\n","\r\n            Forwarding implementation of BuildProjects\r\n            ":"\r\n            转发实施buildProjects\r\n            \r\n","\r\n            Gets the initial targets for the project\r\n            ":"\r\n            获取项目的初始目标\r\n            \r\n","Operating system version":"操作系统版本\r\n","\r\n             This class is used to selectively intern strings. It should be used at the point of new string creation.\r\n             For example,\r\n            \r\n                 string interned = OpportunisticIntern.Intern(String.Join(\",\",someStrings));\r\n            \r\n             This class uses heuristics to decide whether it will be efficient to intern a string or not. There is no\r\n             guarantee that a string will intern.\r\n            \r\n             The thresholds and sizes were determined by experimentation to give the best number of bytes saved\r\n             at reasonable elapsed time cost.\r\n             ":"\r\n             该课程用于选择性地实习字符串。它应在新的字符串创建点使用。\r\n             例如，\r\n            \r\n                 字符串interned = umportimisticintern.intern（string.join（“，”，somestrings））;\r\n            \r\n             该课程使用启发式方法来决定是否有效实习字符串。没有\r\n             确保字符串将实习。\r\n            \r\n             通过实验确定阈值和尺寸，以保存最佳的字节数\r\n             以合理的时间成本。\r\n             \r\n","\r\n            The work queue.\r\n            ":"\r\n            工作队列。\r\n            \r\n","\r\n            Returns true if a task host exists that can service the requested runtime and architecture\r\n            values, and false otherwise.\r\n            ":"\r\n            如果存在可为请求的运行时和体系结构提供服务的任务主机，则返回true\r\n            值，否则为false。\r\n            \r\n","\r\n            Returns true if this block contains an explicitly-specified modification for the provided metadata name.\r\n            ":"\r\n            如果此块包含针对所提供的元数据名称的明确指定的修改，则返回true。\r\n            \r\n","The item type to constrain the search in.":"限制搜索的项目类型。\r\n","\r\n            ITaskItem implementation which returns a clone of the metadata on this object.\r\n            Values returned are unescaped. To get the original escaped values, use ITaskItem2.CloneCustomMetadataEscaped instead.\r\n            ":"\r\n            ITASKITEM实现将返回该对象上的元数据的克隆。\r\n            返回的值是毫无用处的。要获取原始的逃逸值，请改用itaskItem2.clonecustommetAdataeScccated。\r\n            \r\n","\r\n            Are there any active nodes? \r\n            ":"\r\n            有活性节点吗？\r\n            \r\n","\r\n            Expand only item list expressions\r\n            ":"\r\n            仅扩展项目列表表达式\r\n            \r\n","\r\n            Gets the evaluated value of the include, unescaped. \r\n            ":"\r\n            获取Incluber，UneScaper的评估值。\r\n            \r\n","\r\n            Location of state to enter, used to look up the state.\r\n            ":"\r\n            进入状态的状态位置，用于查找状态。\r\n            \r\n","\r\n            This is a suggestion to a prospective UI client on the relative location of this ":"\r\n            这是对潜在的UI客户端的相对位置的建议\r\n","\r\n            Code associated with event. \r\n            ":"\r\n            与事件关联的代码。\r\n            \r\n","\r\n            Extract the function details from the given property function expression.\r\n            ":"\r\n            从给定的属性函数表达式中提取功能详细信息。\r\n            \r\n","\r\n            Accessor for the metadata.\r\n            Set temporarily during item metadata evaluation.\r\n            ":"\r\n            元数据的登录器。\r\n            在项目元数据评估期间暂时设置。\r\n            \r\n","A BinaryWriter to write the BuildEventArgs instances to":"二进制作者编写BuildEventArgs实例\r\n","\r\n            Extract only the unique inputs and outputs from all the inputs and outputs gathered\r\n            during dependency analysis\r\n            ":"\r\n            仅从收集的所有输入和输出中提取唯一的输入和输出\r\n            在依赖分析期间\r\n            \r\n","\r\n            Initialize an unparented ProjectItemElement instance\r\n            ":"\r\n            初始化无与伦比的ProjectItemelement实例\r\n            \r\n","\r\n            Closes the underlying file stream.\r\n            ":"\r\n            关闭基础文件流。\r\n            \r\n","\r\n            Throw an exception and stop the evaluation of a project if any circular imports are detected\r\n            ":"\r\n            引发例外，如果检测到任何循环进口，请停止对项目的评估\r\n            \r\n","The root element to which the element will belong.":"该元素将属于的根元素。\r\n","\r\n            Collection storing host objects for particular project/task/target combinations.\r\n            ":"\r\n            集合存储特定项目/任务/目标组合的主机对象。\r\n            \r\n","\r\n            The loggers changed.\r\n            ":"\r\n            伐木者更改了。\r\n            \r\n","\r\n            Throws an exception if the node could not be created.\r\n            ":"\r\n            如果无法创建节点，则引发异常。\r\n            \r\n"," containing global properties.":" 包含全局属性。\r\n","The configuration to use to create the remote node.":"用于创建远程节点的配置。\r\n","\r\n            Waits for a result from a request.\r\n            ":"\r\n            等待请求的结果。\r\n            \r\n"," the project is added to.":" 该项目已添加到。\r\n","The string to compare with the target.":"与目标进行比较的字符串。\r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n            \r\n","The entry points to use in the build.":"在构建中使用的入口点。\r\n","\r\n            The current ToolsVersion. \r\n            ":"\r\n            当前的工具交换。\r\n            \r\n","\r\n            Constructs a generic evaluation location\r\n            ":"\r\n            构建通用评估位置\r\n            \r\n","\r\n            When marked with the RequiredRuntimeAttribute, a task indicates that it has stricter \r\n            runtime requirements than a regular task - this tells MSBuild that it will need to potentially \r\n            launch a separate process for that task if the current runtime does not match the version requirement.\r\n            This attribute is currently non-functional since there is only one version of the CLR that is\r\n            capable of running MSBuild v2.0 or v3.5 - the runtime v2.0 \r\n            ":"\r\n            当用必需的限制图标记时，任务表明其更严格\r\n            运行时要求比常规任务 - 这告诉MSBUILD，它将需要潜在\r\n            如果当前运行时不符合版本要求，则启动该任务的单独过程。\r\n            此属性当前是非功能的，因为CLR只有一个版本\r\n            能够运行MSBUILD v2.0或v3.5-运行时v2.0\r\n            \r\n","The item specification to evaluate and remove.":"评估和删除的项目规范。\r\n","\r\n            Process information from the create process call\r\n            Represents PROCESS_INFORMATION in win32\r\n            ":"\r\n            从创建过程调用中的处理信息\r\n            代表process_information in win32\r\n            \r\n","\r\n            The entry point for the request builder thread.\r\n            ":"\r\n            请求构建器线程的入口点。\r\n            \r\n","The override tasks path.":"覆盖任务路径。\r\n","\r\n            Retrieves the next build submission id.\r\n            ":"\r\n            检索下一个构建提交ID。\r\n            \r\n","\r\n            Whether this ToolTask has logged any errors\r\n            ":"\r\n            该工具任务是否已记录了任何错误\r\n            \r\n","\r\n            Count of metadata on this item, if any.\r\n            Includes any metadata inherited from item definitions.\r\n            Includes both custom and built-in metadata.\r\n            ":"\r\n            如果有的话，此项目的元数据计数。\r\n            包括从项目定义继承的任何元数据。\r\n            包括定制和内置元数据。\r\n            \r\n","\r\n            Whether the current appdomain has an out of proc node.\r\n            For diagnostics.\r\n            ":"\r\n            当前的AppDomain是否具有未proc节点。\r\n            用于诊断。\r\n            \r\n","\r\n            The load settings, such as to ignore missing imports.\r\n            This is retained after construction as it will be needed for reevaluation.\r\n            ":"\r\n            负载设置，例如忽略丢失的导入。\r\n            这是在施工后保留的，因为需要重新评估。\r\n            \r\n","path to the tool, or null":"该工具的路径或空\r\n","\r\n            Stores the original culture for String.Format.\r\n            ":"\r\n            存储string.format的原始文化。\r\n            \r\n"," is applicable, and\r\n             ":" 适用，并且\r\n             \r\n","\r\n            Returns true if a particular piece of metadata is defined on this item,\r\n            otherwise false.\r\n            Includes built-in metadata and metadata inherited from item definitions.\r\n            ":"如果在此项目上定义了特定的元数据，则返回true，\r\n            否则错误。\r\n            包括从项目定义继承的内置元数据和元数据。\r\n            \r\n","\r\n            Event handler for the event fired after this project file is named or renamed.\r\n            If the project file has not previously had a name, oldFullPath is null.\r\n            ":"\r\n            该项目文件命名或重命名之后，该事件的事件处理程序被射击。\r\n            如果项目文件以前没有名称，则OldFullPath为null。\r\n            \r\n","\r\n            The XML location of the task element.\r\n            ":"\r\n            任务元素的XML位置。\r\n            \r\n","\r\n            Shortcut to avoid calling into binding if we recognize some most common functions.\r\n            Binding is expensive and throws first-chance MissingMethodExceptions, which is\r\n            bad for debugging experience and has a performance cost.\r\n            A typical binding operation with exception can take ~1.500 ms; this call is ~0.050 ms\r\n            (rough numbers just for comparison).\r\n            See https://github.com/Microsoft/msbuild/issues/2217.\r\n            ":"\r\n            快捷方式以避免呼吁绑定，如果我们识别一些最常见的功能。\r\n            绑定很昂贵，并引发了第一次丢失的毫无疑问的感受，那就是\r\n            不适合调试经验，并且具有性能成本。\r\n            异常的典型结合操作可能需要约1.500毫秒；这个电话是〜0.050毫秒\r\n            （仅用于比较的粗略数字）。\r\n            请参阅https://github.com/microsoft/msbuild/issues/2217。\r\n            \r\n","\r\n            Initializes this factory for instantiating tasks with a particular inline task block and a set of UsingTask parameters.\r\n            ":"\r\n            初始化此工厂以使用特定的内联任务块和一组使用任务参数实例化任务。\r\n            \r\n","\r\n            indicates if the override tasks file has already been scanned\r\n            ":"\r\n            指示是否已经扫描了覆盖任务文件\r\n            \r\n","\r\n            The output file\r\n            ":"\r\n            输出文件\r\n            \r\n","\r\n            Read an onError tag.\r\n            Do not evaluate anything: this occurs during build.\r\n            ":"\r\n            阅读一个OnError标签。\r\n            不要评估任何内容：这发生在构建过程中。\r\n            \r\n","\r\n            Location of the MSBuildRuntime attribute, if any\r\n            ":"\r\n            MSBuildRuntime属性的位置，如果有的话\r\n            \r\n","\r\n            Item type\r\n            ":"\r\n            物品种类\r\n            \r\n","\r\n            A scheduling event.\r\n            ":"\r\n            调度事件。\r\n            \r\n","\r\n            Flag indicating whether node reuse should be enabled.\r\n            By default, it is enabled.\r\n            ":"\r\n            标志指示是否应启用节点重复使用。\r\n            默认情况下，它已启用。\r\n            \r\n","\r\n            This method can be used to minimize the memory overhead\r\n            once it is known that no new elements will be added.\r\n            ":"\r\n            此方法可用于最大程度地减少内存开销\r\n            一旦知道将不会添加新元素。\r\n            \r\n","\r\n            Items encountered during evaluation. These are read during the third evaluation pass.\r\n            Unlike those returned by the Items property, these are ordered.\r\n            It does not include any elements whose conditions did not evaluate to true.\r\n            It does not include any items added since the last evaluation.\r\n            ":"\r\n            评估期间遇到的项目。这些是在第三次评估通行证中读取的。\r\n            与项目属性返回的人不同，这些是订购的。\r\n            它不包括任何条件未评估为真的要素。\r\n            它不包括自上次评估以来添加的任何项目。\r\n            \r\n","The type of modification to make.":"修改的类型要进行。\r\n","\r\n            Retrieves the build parameters associated with this build.\r\n            ":"\r\n            检索与此构建关联的构建参数。\r\n            \r\n","\r\n            Whether the task item is immutable.\r\n            ":"\r\n            任务项是否不变。\r\n            \r\n","\r\n            Sets the escaped value of the metadata with the specified name.\r\n            ":"\r\n            用指定名称设置元数据的逃逸值。\r\n            \r\n","\r\n            This method computes the sources that need to be compiled based on the output files and the\r\n            full dependency graph of inputs, making the assumption that the source files are the components\r\n            of a composite rooting marker, as in the case where there is a many-to-one correspondence\r\n            between inputs and outputs.\r\n            ":"\r\n            此方法计算需要根据输出文件和\r\n            输入的完整依赖关系图，假设源文件是组件\r\n            复合生根标记，如有多一对信函的情况\r\n            在输入和输出之间。\r\n            \r\n","\r\n            Sets the environment block to the set of saved variables.\r\n            ":"\r\n            将环境块设置为一组保存的变量。\r\n            \r\n","\r\n            Gets a list of graph nodes for projects that have a project reference for this project\r\n            ":"\r\n            获取具有该项目项目参考的项目的图形节点列表\r\n            \r\n","\r\n            Clears out certain cached values. \r\n            FOR UNIT TESTING ONLY\r\n            ":"\r\n            清除某些缓存值。\r\n            仅用于单元测试\r\n            \r\n","message args":"消息args\r\n","\r\n            Throw exception if an element with a duplicate is added\r\n            ":"\r\n            如果添加了重复的元素，请抛出异常\r\n            \r\n","\r\n            Gets or sets the unescaped include, or \"name\", for the item.\r\n            ":"获取或设置该项目的UNESCAPEL包含或“名称”。\r\n            \r\n","True if the parameter is both an output and input parameter. False if the parameter is only an input parameter":"如果参数既是输出参数又是输入参数。 false如果参数仅是输入参数\r\n","\r\n            Retrieves all of the executing requests.\r\n            ":"\r\n            检索所有执行请求。\r\n            \r\n","\r\n            Gets or sets the version of the SDK.\r\n            ":"\r\n            获取或设置SDK的版本。\r\n            \r\n","\r\n            Assumes metadataValue is unescaped. \r\n            ":"\r\n            假设元数据是不渗透的。\r\n            \r\n","\r\n            This constructor allows a timestamp to be set\r\n            ":"\r\n            该构造函数允许设置时间戳\r\n            \r\n","\r\n            Retrieves a request which is currently executing.\r\n            ":"\r\n            检索当前正在执行的请求。\r\n            \r\n","\r\n            Depth first collection of InitialTargets strings declared in the main\r\n            Project and all its imported files, split on semicolons.\r\n            ":"\r\n            深度在主机中声明的初始字符串的第一批集合\r\n            项目及其所有导入的文件，分为半洛龙。\r\n            \r\n","The warning code of the message. Can be null.":"消息的警告代码。可以是零的。\r\n","\r\n            Returns the configuration ID for this result.\r\n            ":"\r\n            返回此结果的配置ID。\r\n            \r\n","\r\n            Logs that a project evaluation has started\r\n            ":"\r\n            项目评估已经开始的日志\r\n            \r\n","\r\n            Gets the global properties to use for this entry point.\r\n            ":"\r\n            获取用于此入口点的全局属性。\r\n            \r\n","\r\n            Should all properties be serialized from the child to the parent node\r\n            ":"\r\n            是否将所有属性从孩子序列化到父节点\r\n            \r\n"," to do any actual SDK resolution\r\n             because the ":" 执行任何实际的SDK分辨率\r\n             因为\r\n","Output item name (can be null)":"输出项目名称（可以为null）\r\n","\r\n            Extract only the unique inputs and outputs from all the inputs and outputs gathered\r\n            during depedency analysis\r\n            ":"\r\n            仅从收集的所有输入和输出中提取唯一的输入和输出\r\n            在分析期间\r\n            \r\n","\r\n            Create an external .ProjectImports.zip archive for the project files.\r\n            ":"\r\n            为项目文件创建外部.projectimports.zip档案。\r\n            \r\n","\r\n            Put something in the slot\r\n            ":"\r\n            放在插槽中\r\n            \r\n","Root folder for the SDK must contain a redist folder":"SDK的根文件夹必须包含一个redist文件夹\r\n","\r\n            Implementation of ITranslator for reading from a stream.\r\n            ":"\r\n            实现ITRanslator以从流读取。\r\n            \r\n","The tools version to use":"要使用的工具版本\r\n","\r\n            Items\r\n            ":"\r\n            项目\r\n            \r\n","\r\n            Collection of any schema node\r\n            ":"\r\n            收集任何模式节点\r\n            \r\n","\r\n            The location something in the registry\r\n            ":"\r\n            注册表中的位置\r\n            \r\n","\r\n            Handler for build finished events\r\n            ":"\r\n            构建完成活动的处理程序\r\n            \r\n","\r\n            Return a task registry stub for the tasks in the *.tasks file for this toolset\r\n            ":"\r\n            返回 *.tasks文件中此工具集中的任务的任务注册表存根\r\n            \r\n","\r\n            Evaluated value: stored escaped. \r\n            ":"\r\n            评估值：存储的逃脱。\r\n            \r\n","\r\n            By default we do not sort target inputs and outputs as it has significant perf impact.\r\n            But allow suites to enable this so they get consistent results.\r\n            ":"\r\n            默认情况下，我们不会对目标输入和输出进行排序，因为它具有显着的perf效果。\r\n            但是，允许套房启用此功能，以便获得一致的结果。\r\n            \r\n","\r\n            Per the previous implementation, it actually finds the last suitable item group, not the first.\r\n            ":"\r\n            根据以前的实现，它实际上找到了最后一个合适的项目组，而不是第一个。\r\n            \r\n","TaskItem implementation to return metadata from":"taskitem实施以返回元数据\r\n","The global properties of this solution.":"该解决方案的全局属性。\r\n","\r\n            Writes a line to the log, using the default indentation.\r\n            ":"\r\n            使用默认的缩进为日志写一条线。\r\n            \r\n","The build submission ID that the resolution request is for.":"解决方案请求的构建提交ID。\r\n","\r\n            A helper method for constructing conditions for a solution configuration\r\n            ":"用于构建解决方案配置条件的帮助方法\r\n            \r\n","\r\n            Load read only selectively, Eg., just when file names begin with \"Microsoft.\"\r\n            ":"\r\n            加载仅有选择地读取，例如，当文件名以“ Microsoft”开头时。\r\n            \r\n","\r\n            The UI renderer template used to display this Rule. \r\n            ":"\r\n            用来显示此规则的UI渲染器模板。\r\n            \r\n","\r\n            Reacquires the node.\r\n            ":"\r\n            重新测量节点。\r\n            \r\n","Information about what is blocking the engine.":"有关阻止发动机的内容的信息。\r\n","\r\n            Path to the file loaded if any, otherwise null.\r\n            If the XmlDocument hasn't been loaded from a file, we wouldn't have a full path.\r\n            However the project might actually have been given a path - it might even have been saved.\r\n            In order to allow created elements to be able to provide a location with at least\r\n            that path, the setter here should be called when the project is given a path.\r\n            It may be set to null.\r\n            ":"\r\n            如果有的话，加载的文件的路径，否则为空。\r\n            如果Xmldocument尚未从文件中加载，我们将不会有完整的路径。\r\n            但是，该项目实际上可能已经有了一条路径 - 甚至可以保存。\r\n            为了允许创建的元素能够提供至少具有的位置\r\n            该路径，当项目获得路径时，应该调用这里的设置器。\r\n            它可以设置为空。\r\n            \r\n","\r\n            Output cache file where MSBuild will write the contents of its build result caches during EndBuild.\r\n            Setting this also turns on isolated builds.\r\n            ":"\r\n            输出缓存文件，其中MSBuild将在Endbuild期间编写其构建结果缓存的内容。\r\n            设置这也打开孤立的构建。\r\n            \r\n","\r\n            Node representing a string\r\n            ":"表示字符串的节点\r\n            \r\n","\r\n            Regkey that we check to see whether VC Express 2010 is installed.  This will exist if it is installed, and be \r\n            properly removed after it has been uninstalled.  \r\n            ":"\r\n            我们检查是否安装了VC Express 2010。如果安装它，则将存在，并且\r\n            卸载后正确删除。\r\n            \r\n","\r\n            Any legal XML element name is allowed. We can't easily verify if the name is a legal XML element name,\r\n            so this will specifically throw XmlException if it isn't.\r\n            ":"\r\n            允许任何法律XML元素名称。我们无法轻松验证该名称是否是合法的XML元素名称，\r\n            因此，如果不是，这将特别抛出XMlexception。\r\n            \r\n","An array of targets in the project to be built.":"项目中的一系列目标。\r\n","\r\n            Allows a piece of custom metadata to be set on the item.  Assumes that the value passed\r\n            in is unescaped, and escapes the value as necessary in order to maintain its value. \r\n            ":"\r\n            允许在项目上设置一块自定义元数据。假设值通过\r\n            IN IS IS UNESCAPER，并根据需要逃脱该值以保持其价值。\r\n            \r\n","\r\n            Routes a packet to the appropriate handler.\r\n            ":"\r\n            将数据包路由到适当的处理程序。\r\n            \r\n","\r\n            toolsetProvider.Toolsets is already a readonly collection.\r\n            ":"\r\n            ToolSetProvider.toolsets已经是一个可读的集合。\r\n            \r\n","\r\n            Opaque holder of shared buffer.\r\n            ":"\r\n            共享缓冲区的不透明持有者。\r\n            \r\n","\r\n            Runtime on the task, if any\r\n            May be empty string\r\n            ":"\r\n            任务上的运行时间，如果有的话\r\n            可能是空字符串\r\n            \r\n","\r\n            Indicates whether the build plan is enabled or not.\r\n            ":"\r\n            指示是否启用了构建计划。\r\n            \r\n","\r\n                Indicates the resolution was successful.\r\n            ":"\r\n                表示该分辨率成功。\r\n            \r\n","\r\n            Location of keepMetadata, if any\r\n            ":"\r\n            keepmetadata的位置，如果有的话\r\n            \r\n","\r\n            Number of CPU cores being granted.\r\n            ":"\r\n            授予CPU核心的数量。\r\n            \r\n","ETP Project":"ETP项目\r\n","The type of the value in the list.":"列表中值的类型。\r\n","\r\n            Location of the Sdk attribute\r\n            ":"\r\n            SDK属性的位置\r\n            \r\n","\r\n            Called to terminate the functions of this component\r\n            ":"\r\n            被要求终止此组件的功能\r\n            \r\n","\r\n            Read-only wrapper around this lookup.\r\n            ":"\r\n            围绕此查找的只读包装。\r\n            \r\n","\r\n            This is a hacky method to remove the space in the \"Any CPU\" platform in project configurations.\r\n            The problem is that this platform is stored as \"AnyCPU\" in project files, but the project system\r\n            reports it as \"Any CPU\" to the solution configuration manager. Because of that all solution configurations\r\n            contain the version with a space in it, and when we try and give that name to actual projects, \r\n            they have no clue what we're talking about. We need to remove the space in project platforms so that\r\n            the platform name matches the one used in projects.\r\n            ":"\r\n            这是一种用于删除项目配置中“任何CPU”平台中的空间的方法。\r\n            问题是该平台在项目文件中存储为“ Anycpu”，但是项目系统\r\n            向解决方案配置管理器报告为“任何CPU”。因此，所有解决方案配置\r\n            包含其中包含空间的版本，当我们尝试将该名称命名为实际项目时，\r\n            他们不知道我们在说什么。我们需要删除项目平台中的空间，以便\r\n            该平台名称与项目中使用的名称匹配。\r\n            \r\n","\r\n            If the ProjectItemElement evaluated to more than one ProjectItem, replaces it with a new ProjectItemElement for each one of them.\r\n            If the ProjectItemElement did not evaluate into more than one ProjectItem, does nothing.\r\n            Returns true if a split occurred, otherwise false.\r\n            ":"\r\n            如果将ProjectItemelement评估为一个以上的ProjectItem，则将其替换为每个projectItemement，以替换每个projectItem。\r\n            如果ProjectItemelement未评估多个ProjectItem，则无能为力。\r\n            如果发生分裂，则返回true，否则为错误。\r\n            \r\n","\r\n            Determine if the event is serializable. If we are running with multiple nodes we need to make sure the logging events are serializable. If not\r\n            we need to log a warning.\r\n            ":"\r\n            确定事件是否可序列化。如果我们使用多个节点运行，则需要确保记录事件可序列化。如果不\r\n            我们需要记录警告。\r\n            \r\n","\r\n            Current element.\r\n            Throws if MoveNext() hasn't been called\r\n            ":"\r\n            当前元素。\r\n            如果尚未调用movenext（），则投掷\r\n            \r\n","\r\n            Creates a new build manager with an arbitrary distinct name.\r\n            Normally there is only one build manager in a process, and it is the default build manager.\r\n            Access it with ":"\r\n            创建一个具有任意不同名称的新构建经理。\r\n            通常，一个过程中只有一个构建管理器，它是默认的构建管理器。\r\n            访问它\r\n","\r\n            Normally this will return true, since if the item isn't in the project, it will throw.\r\n            The exception is removing an item that was only in ItemsIgnoringCondition.\r\n            ":"通常，这将返回true，因为如果项目不在项目中，它将投掷。\r\n            例外是删除仅在项目签名条件中的项目。\r\n            \r\n"," MSBuild should use for the queried project.\r\n                It is assumed that all cache hits result in a successful ":" MSBUILD应用于查询项目。\r\n                假定所有缓存命中都会成功\r\n","\r\n            Gets a dictionary containing a collection of extension SDKs and filter it based on the target platform version\r\n            if max platform version isn't set in the extension sdk manifest, add the extension sdk to the filtered list\r\n            ":"\r\n            获取包含扩展SDK集合的字典，并根据目标平台版本过滤它\r\n            如果在扩展SDK清单中未设置Max Platform版本，请将扩展SDK添加到过滤列表中\r\n            \r\n","\r\n            Semantics are those of XmlNode.InsertBeforeChild.\r\n            ":"\r\n            语义是xmlnode.insertbeforechild的语义。\r\n            \r\n","\r\n            MoreInfo as found in the sdk manifest\r\n            ":"\r\n            SDK清单中发现的MoreInfo\r\n            \r\n","\r\n            Tracks the state of the packet sent to terminate the node.\r\n            ":"\r\n            跟踪发送节点终止的数据包的状态。\r\n            \r\n","\r\n            Defines a cache for registered task objects.\r\n            ":"\r\n            为注册任务对象定义缓存。\r\n            \r\n","\r\n            A string matched against a string literal from an itemspec\r\n            ":"\r\n            与itemspec的字符串文字匹配的字符串\r\n            \r\n","\r\n            SDK version from the moniker\r\n            ":"\r\n            绰号的SDK版本\r\n            \r\n","\r\n            Properties that should be added to the evaluation.  This allows an SDK resolver to provide information to the build\r\n            ":"\r\n            应添加到评估中的属性。这允许SDK解析器为构建提供信息\r\n            \r\n","\r\n            Information for configuring child AppDomains.\r\n            ":"\r\n            用于配置儿童应用程序的信息。\r\n            \r\n","\r\n            Key to file entry list. Example usages: cache glob expansion and intermediary directory expansions during glob expansion.\r\n            ":"\r\n            关键文件条目列表。示例用法：加速范围扩展和中介目录扩展期间的扩展。\r\n            \r\n","\r\n            Sets a property derived from Xml.\r\n            Predecessor is any immediately previous property that was overridden by this one during evaluation.\r\n            This would include all properties with the same name that lie above in the logical\r\n            project file, and whose conditions evaluated to true.\r\n            If there are none above this is null.\r\n            ":"\r\n            设置从XML派生的属性。\r\n            前身是该评估期间该物业被该物业所覆盖的任何属性。\r\n            这将包括所有属性，其名称与逻辑上的同名相同\r\n            项目文件，并评估其条件为true。\r\n            如果上面没有，则无效。\r\n            \r\n","\r\n            Initialize the host with the objects required to communicate with the host process.\r\n            ":"\r\n            用与主机过程进行通信所需的对象初始化主机。\r\n            \r\n","\r\n            Listens to build evaluation finished events and collects profiling information when available\r\n            ":"\r\n            聆听以建立评估完成的事件并收集分析信息\r\n            \r\n","\r\n            The minimum version of the platform that the SDK targets\r\n            ":"\r\n            SDK目标的平台的最低版本\r\n            \r\n","\r\n            Add an entry to the cache.\r\n            ":"\r\n            在缓存中添加一个条目。\r\n            \r\n","\r\n            Add the given string to the cache or return the existing string if it is already\r\n            in the cache.\r\n            Constant time operation.\r\n            ":"\r\n            将给定的字符串添加到缓存或返回现有字符串（如果已经存在）\r\n            在缓存中。\r\n            恒定的时间操作。\r\n            \r\n","\r\n            Handler for resource request events.\r\n            ":"\r\n            资源请求事件的处理程序。\r\n            \r\n","\r\n            Evaluates a string representing a condition from a \"condition\" attribute.\r\n            If the condition is a malformed string, it throws an InvalidProjectFileException.\r\n            This method uses cached expression trees to avoid generating them from scratch every time it's called.\r\n            This method is thread safe and is called from engine and task execution module threads\r\n            ":"\r\n            评估代表“条件”属性条件的字符串。\r\n            如果条件是畸形的字符串，则会引发无效的fileException。\r\n            该方法使用缓存的表达树来避免每次调用时从头开始生成它们。\r\n            此方法是线程安全的，并从引擎和任务执行模块线程调用\r\n            \r\n","\r\n            Populates the toolset collection passed in with the toolsets read from some location.\r\n            ":"\r\n            通过从某个位置读取工具集传递的工具集集合。\r\n            \r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n            Finds first item definition group with no condition with at least one item definition of same item type, or else adds a new item definition group.\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n            查找第一个项目定义组，没有条件，至少具有同一项目类型的一个项目定义，否则添加了一个新项目定义组。\r\n            \r\n","The parameter group.":"参数组。\r\n","\r\n            Because ShouldEvaluateForDesignTime returns false, this should not be called.\r\n            ":"\r\n            因为应该返回false，因此不应调用这一点。\r\n            \r\n","\r\n            Gets an unordered collection of graph nodes for projects which this project references.\r\n            ":"\r\n            获取该项目参考的项目的无序集合节点集合。\r\n            \r\n","\r\n            The metadata value check has to be case insensitive as batching bucketing is case\r\n            insensitive.\r\n            ":"\r\n            元数据值检查必须是情况不敏感的，因为批处理桶是情况\r\n            不敏感。\r\n            \r\n","\r\n            This is ultimately for unit testing.\r\n            Do not make public: we do not wish to expose particular XML API's.\r\n            ":"\r\n            这最终用于单元测试。\r\n            不要公开：我们不希望暴露特定的XML API。\r\n            \r\n","\r\n            The IBuildEngine callback object.  \r\n            ":"\r\n            IbuildEngine回调对象。\r\n            \r\n","\r\n            Creates an instance of this exception using projectFile, targetName, taskName and inner exception.\r\n            Adds the inner exception's details to the exception message because most bug reporters don't bother\r\n            to provide the inner exception details which is typically what we care about.\r\n            ":"\r\n            使用ProjectFile，TargetName，TaskName和Inner Exception创建此异常的实例。\r\n            将内部异常的详细信息添加到异常消息，因为大多数错误记者都不会打扰\r\n            提供内部异常细节，这通常是我们关心的。\r\n            \r\n","\r\n            The managed thread id which entered this scope.\r\n            ":"\r\n            输入此范围的托管线程ID。\r\n            \r\n","\r\n            Enumerable over the unevaluated parameters on the task.\r\n            Attributes with their own properties, such as ContinueOnError, are not included in this collection.\r\n            If parameters differ only by case only the last one will be returned. MSBuild uses only this one.\r\n            Hosts can still remove the other parameters by using RemoveAllParameters().\r\n            ":"\r\n            对任务的未评估参数进行枚举。\r\n            本集合中未包含具有自己的属性的属性，例如ChistronError。\r\n            如果参数仅因情况而差异，则仅返回最后一个。 MSBUILD仅使用此。\r\n            主机仍然可以使用removeallParameters（）删除其他参数。\r\n            \r\n","\r\n            Message sent back to a node informing it about the resource that were granted by the scheduler.\r\n            ":"\r\n            发送回到节点的消息将其告知调度程序授予的资源。\r\n            \r\n","\r\n            Typeloader for taskFactories\r\n            ":"\r\n            TaskFactories的打字机\r\n            \r\n","\r\n            A container for project elements\r\n            ":"\r\n            项目元素的容器\r\n            \r\n","\r\n            Each component in the build system which is registered with the Build Manager or a Node must\r\n            implement this interface.\r\n            \r\n            REFACTOR: Maybe these could all implement IDisposable.\r\n            ":"\r\n            用构建管理器或节点注册的构建系统中的每个组件必须\r\n            实现此界面。\r\n            \r\n            重构：也许这些都可以实现IDisposable。\r\n            \r\n","\r\n            Unevaluated MatchOnMetadata value.\r\n            ":"\r\n            未评估的MatchonMetadata值。\r\n            \r\n","\r\n            ProjectItemGroupElement represents the ItemGroup element in the MSBuild project.\r\n            ":"\r\n            ProjectItemGroupElement代表MSBUILD项目中的项目组元素。\r\n            \r\n","\r\n            Builds the task specified by the XML.\r\n            ":"\r\n            构建由XML指定的任务。\r\n            \r\n","\r\n            In this mode, the task engine actually runs the task and retrieves its outputs.\r\n            ":"\r\n            在此模式下，任务引擎实际运行任务并检索其输出。\r\n            \r\n","The value of the environment variable that was read.":"读取的环境变量的值。\r\n","The exception being thrown.":"抛出了例外。\r\n","\r\n            Retrieves a request which has been assigned to a node and is in the executing, yielding, blocked, or ready states.\r\n            ":"\r\n            检索已分配给节点的请求，并在执行，屈服，阻止或已准备就绪状态中。\r\n            \r\n","\r\n            The timeout to connect to a node.\r\n            ":"\r\n            连接到节点的超时。\r\n            \r\n","\r\n            Constructor for the case where we have most or all information.\r\n            Numerical values must be 1-based, non-negative; 0 indicates unknown\r\n            File may be null or empty, indicating the file was not loaded from disk.\r\n            ":"\r\n            我们拥有大多数或所有信息的情况的构造函数。\r\n            数值必须基于1个，非负值； 0表示未知\r\n            文件可能为空或空，表明该文件未从磁盘加载。\r\n            \r\n","\r\n            Create a task item from a ProjectItemInstance.\r\n            ":"\r\n            从ProjectIteMinstance创建任务项。\r\n            \r\n","\r\n            The token used to separate a switch from its value.\r\n            ":"\r\n            代币用于将开关与其值分开。\r\n            \r\n","\r\n            Disable the NuGet-based SDK resolver.\r\n            ":"\r\n            禁用基于Nuget的SDK解析器。\r\n            \r\n","The ID of the remote node.":"远程节点的ID。\r\n","Location of the element within the project which referenced the SDK.":"引用SDK的项目中元素的位置。\r\n","\r\n            The cancellation token source for the currently-executing build request.\r\n            ":"\r\n            当前执行构建请求的取消令牌源。\r\n            \r\n","Insert()":"插入（）\r\n","\r\n            Return the string in parameter 'defaultValue' only if parameter 'conditionValue' is empty\r\n            else, return the value conditionValue\r\n            ":"仅当参数“条件value”为空时，才返回参数“ defaultvalue”中的字符串\r\n            否则，返回值条件值\r\n            \r\n","The bit mask to obtain the index within a page from an absolute index within a segmented array.":"从分段数组中的绝对索引中获得页面中的索引的位掩码。\r\n","\r\n            When this flag is present, ":"\r\n            当存在这个标志时\r\n","\r\n            Evaluation ordered list of project item elements that were evaluated by the Evaluator\r\n            It means that both the item element's condition and the item group element's conditions evaluated to true\r\n            ":"\r\n            评估订单的项目项元素清单，由评估员评估\r\n            这意味着项目元素的条件和项目组元素的条件评估为true\r\n            \r\n","True if the task was scheduled, false otherwise.":"如果安排了任务，则为the，则为false。\r\n","\r\n            ERROR_SUCCESS\r\n            ":"\r\n            error_success\r\n            \r\n","\r\n            Arguments for custom build events.\r\n            ":"\r\n            自定义构建事件的论点。\r\n            \r\n","\r\n            Arguments to pass to the transform function as parsed out of the project file\r\n            ":"\r\n            根据项目文件解析，将转换函数传递到转换函数\r\n            \r\n","\r\n            Interface for tasks which can be cancelled.\r\n            ":"\r\n            可以取消任务的接口。\r\n            \r\n","\r\n            serializes content type's metadata. Accessible via IContentType.GetMetadata()\r\n            ":"\r\n            序列化内容类型的元数据。可通过icontentType.getMetadata（）访问\r\n            \r\n","Context for resolving the SDK.":"解决SDK的上下文。\r\n","\r\n            All the state necessary for the evaluation of conditionals so that the expression tree \r\n            is stateless and reusable\r\n            ":"\r\n            评估条件的所有状态，以便表达树\r\n            无状态和可重复使用\r\n            \r\n","Root directory where the target framework will be looked for. Uses default path if this is null":"寻找目标框架的根目录。如果这是null，请使用默认路径\r\n","\r\n            Initialize an unparented ProjectItemGroupElement\r\n            ":"\r\n            初始化无与伦比的ProjectItemGroupelement\r\n            \r\n","\r\n            Creates an item node.\r\n            Caller must add it to the location of choice in the project.\r\n            ":"\r\n            创建一个项目节点。\r\n            呼叫者必须将其添加到项目中选择的位置。\r\n            \r\n","\r\n            Creates a new request and adds it to the system\r\n            ":"\r\n            创建一个新请求并将其添加到系统中\r\n            \r\n","\r\n            Gets the idenifier of the project.\r\n            ":"\r\n            获取该项目的同化器。\r\n            \r\n","\r\n            The toolsversion that was originally specified on the project's root element\r\n            ":"\r\n            最初在项目的根部元素上指定的工具verseverion\r\n            \r\n","\r\n            Regkey that we check to see whether Dev10 Professional is installed.  This will exist if it is installed, and be\r\n            properly removed after it has been uninstalled.\r\n            ":"\r\n            我们检查是否安装了Dev10 Professional。如果安装它，则将存在，并且\r\n            卸载后正确删除。\r\n            \r\n","The ToolsVersion from the project file":"项目文件中的工具库\r\n","Collection for item vectors":"项目向量的收集\r\n","Cached data from the project configuration section":"来自项目配置部分的缓存数据\r\n","\r\n            The item definitions from the parent Project.\r\n            ":"\r\n            来自父项目的项目定义。\r\n            \r\n"," if false, this is thrown if the metadata\r\n            specified does not exist when attempting to retrieve a metadata modification.":" 如果是错误的，如果元数据将抛出\r\n            试图检索元数据修饰时指定的不存在。\r\n","The created project instance.":"创建的项目实例。\r\n","\r\n            The set of active targets.\r\n            ":"\r\n            一组活动目标。\r\n            \r\n","The id of the node from which the packet is being routed.":"数据包被路由的节点的ID。\r\n","\r\n            Intrinsic function that returns only the items from itemsOfType that have distinct Item1 in the Tuple\r\n            Using a case insensitive comparison\r\n            ":"\r\n            固有函数仅返回元组中具有独特item1的项目的项目\r\n            使用案例不敏感的比较\r\n            \r\n","\r\n            A debug only helper class for tracing\r\n            ":"\r\n            仅仅进行调试的助手课程\r\n            \r\n","\r\n            description of an item vector with a transform, left hand side. \r\n            ":"\r\n            描述具有转换的项目向量，左侧。\r\n            \r\n","\r\n            The NodeManager class is responsible for marshalling data to/from the NodeProviders and organizing the \r\n            creation of new nodes on request.\r\n            ":"\r\n            NodeManager类负责将数据与NodeProviders划定并组织\r\n            根据要求创建新节点。\r\n            \r\n","\r\n             The telemetry event handler.\r\n            ":"\r\n             遥测活动处理程序。\r\n            \r\n","The exception which caused shutdown, if any.":"导致关闭的例外（如果有）。\r\n","\r\n            #############################################################################################\r\n            #### Segregated into another method to avoid loading the old Engine in the regular case. ####\r\n            ####################### Do not move back in to the main code path! ##########################\r\n            #############################################################################################\r\n             We have marked this method as NoInlining because we do not want Microsoft.Build.Engine.dll to be loaded unless we really execute this code path\r\n            ":"\r\n            ############################# #################################\r\n            ####将隔离为另一种方法，以避免在常规情况下加载旧引擎。 ####\r\n            ######################## ############################\r\n            ############################# #################################\r\n             我们将此方法标记为noinling\r\n            \r\n","The file format version of the log file being read.":"正在读取的日志文件的文件格式版本。\r\n","\r\n                If the evaluation of any project in the graph fails, the InnerException contains\r\n                ":"\r\n                如果对图中的任何项目的评估失败，则innerexception包含\r\n                \r\n","\r\n            Provide facility to ExternalProjectsProvider implementation\r\n            to create local OM objects based on the remote link.\r\n            These object are fully useful for associated Collection.\r\n            ":"\r\n            为外部项目提供设施\r\n            基于远程链接创建本地OM对象。\r\n            这些对象对于关联集合完全有用。\r\n            \r\n","\r\n            Logs an error regarding an unexpected failure using the specified resource string.\r\n            This will include a stack dump.\r\n            ":"\r\n            使用指定的资源字符串记录有关意外故障的错误。\r\n            这将包括一个堆栈转储。\r\n            \r\n","IDictionary of installed SDKS and their location. K:SDKName V:SDK installation location":"已安装的SDK及其位置的IDictionary。 K：SDKNAME V：SDK安装位置\r\n","\r\n            This cannot be set, as it is used as the key into \r\n            the project's items table.\r\n            ":"\r\n            无法设置此设置，因为它被用作键\r\n            项目的项目表。\r\n            \r\n","\r\n            Constructor which will load toolsets from the specified locations.\r\n            ":"\r\n            将从指定位置加载工具集的构造函数。\r\n            \r\n","The logging service to use.":"使用的伐木服务。\r\n","\r\n            The results transfer request id\r\n            ":"\r\n            结果传输请求ID\r\n            \r\n","\r\n                Expands the specified expression into a string.\r\n            ":"\r\n                将指定的表达式扩展到字符串中。\r\n            \r\n","\r\n            Represents the node for a particular project in a project graph.\r\n            A node is defined by (ProjectPath, ToolsVersion, GlobalProperties).\r\n            ":"\r\n            代表项目图中特定项目的节点。\r\n            节点由（Project Path，ToolsVersion，GlobalProperties）定义。\r\n            \r\n","\r\n            Creates a new table using the specified item type.\r\n            ":"\r\n            使用指定的项目类型创建一个新表。\r\n            \r\n","Item types being batched on: null indicates no batching is occurring":"正在进行批处理的项目类型：null表示没有进行批处理\r\n","\r\n            Log  warning\r\n            ":"\r\n            日志警告\r\n            \r\n","The PropertyInfo used to discover this task property.":"PropertyInfo用于发现此任务属性。\r\n","\r\n            Delegate to debug the communication utilities.\r\n            ":"\r\n            委托调试通信公用事业。\r\n            \r\n","The hashcode":"哈希码\r\n","\r\n            End the timer and update the accumulated time.\r\n            ":"\r\n            结束计时器并更新累积的时间。\r\n            \r\n","The new value to assign.":"要分配的新值。\r\n","\r\n            The source line.\r\n            ":"\r\n            源线。\r\n            \r\n","\r\n            Gets the escaped value of the metadatum with the provided name on the provided item. \r\n            ":"\r\n            获取元数据的逃脱值，并在提供的项目上提供提供的名称。\r\n            \r\n","\r\n            Gets or sets the item include value e.g. for disk-based items this would be the file path.\r\n            ":"\r\n            获取或设置项目包括值，例如对于基于磁盘的项目，这将是文件路径。\r\n            \r\n","\r\n            ITaskItem2 implementation.\r\n            ":"\r\n            ITASKITEM2实现。\r\n            \r\n","\r\n            An evaluated item definition for a particular item-type, divested of all references to XML.\r\n            Immutable.\r\n            ":"\r\n            对特定项目类型的评估项目定义，被剥离为XML的所有参考。\r\n            不变。\r\n            \r\n","\r\n            Construct over a text reader over project xml, evaluating with specified\r\n            global properties and toolset, either or both of which may be null.\r\n            Project will be added to the specified project collection when it is named.\r\n            Throws InvalidProjectFileException if the evaluation fails.\r\n            Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.\r\n            ":"\r\n            通过项目XML构造文本读取器，并用指定的\r\n            全局属性和工具集，或两者都可能为null。\r\n            命名时，项目将被添加到指定的项目集合中。\r\n            如果评估失败，则投掷无效的fileException。\r\n            如果项目集合中已经加载了等效的项目，则投掷无效的exception。\r\n            \r\n","\r\n            The default encoding to use / assume for a new project.\r\n            ":"\r\n            用于使用 /假设新项目的默认编码。\r\n            \r\n","\r\n            Called after a new parent is set. Parent may be null.\r\n            By default does nothing.\r\n            ":"\r\n            设置新父母后打电话。父母可能是无效的。\r\n            默认情况下什么都不做。\r\n            \r\n","\r\n            Logs an error event for the current task\r\n            Thread safe.\r\n            ":"\r\n            记录当前任务的错误事件\r\n            线程安全。\r\n            \r\n","\r\n            Build a target with specified loggers.\r\n            Returns true on success, false on failure.\r\n            Target may be null.\r\n            Loggers may be null.\r\n            Only valid if mutable.\r\n            ":"\r\n            用指定的记录仪构建目标。\r\n            成功返回，成功，失败。\r\n            目标可能为零。\r\n            伐木者可能是无效的。\r\n            仅有效，如果可变。\r\n            \r\n","\r\n            Get any contained properties.\r\n            ":"\r\n            获取任何包含的属性。\r\n            \r\n","\r\n            Given a TaskHostContext, returns the name of the executable we should be searching for.\r\n            ":"\r\n            给定任务主持康普特文，返回我们应该搜索的可执行文件的名称。\r\n            \r\n","The host services to use.  May be null.":"主机服务要使用。可能是无效的。\r\n","\r\n            The results of the build.\r\n            ":"\r\n            构建结果。\r\n            \r\n","\r\n            In order to setup the forwarding loggers on a node, we need to take in the logger descriptions and initialize them.\r\n            The method will create a forwarding logger, an eventRedirector which will redirect all forwarded messages to the forwardingLoggerSink.\r\n            All forwarding loggers will use the same forwardingLoggerSink.\r\n            ":"\r\n            为了在节点上设置转发记录器，我们需要对记录器描述进行初始化。\r\n            该方法将创建一个转发记录仪，这是一个事件雷达器，它将将所有转发消息重定向到exprectingLoggerGersink。\r\n            所有转发记录仪将使用相同的转发列表。\r\n            \r\n","\r\n            Intrinsic function that returns the DirectoryName of the items in itemsOfType\r\n            UNDONE: This can be removed in favor of a built-in %(DirectoryName) metadata in future.\r\n            ":"\r\n            返回项目typtype中这些项目目录名称的固有函数\r\n            撤销：将来可以将其删除，以支持内置％（目录名称）元数据。\r\n            \r\n","\r\n            The path to this project file, relative to the solution location\r\n            ":"\r\n            相对于解决方案位置的该项目文件的路径\r\n            \r\n","exception message":"异常消息\r\n","\r\n            The logger verbosity.\r\n            ":"\r\n            记录器的详细性。\r\n            \r\n","\r\n            Get or set the content of the first sub-element \r\n            with the provided name.\r\n            ":"\r\n            获取或设置第一个子元素的内容\r\n            带有提供的名称。\r\n            \r\n","\r\n            Formats a timespan for logger output.\r\n            ":"\r\n            格式为LimePAN用于Logger输出。\r\n            \r\n","\r\n            Assign an int from an environment variable. If its not present, use the default.\r\n            ":"\r\n            分配来自环境变量的INT。如果不存在，请使用默认值。\r\n            \r\n","Array of output items.":"输出项目数组。\r\n","\r\n            The console logger takes a single parameter to suppress the output of the errors\r\n            and warnings summary at the end of a build.\r\n            ":"\r\n            控制台记录器采用单个参数来抑制错误的输出\r\n            并在建筑物结束时的警告摘要。\r\n            \r\n","\r\n            version 4.5\r\n            ":"\r\n            版本4.5\r\n            \r\n","\r\n            A semicolon-delimited list of global properties to undefine\r\n            ":"\r\n            半限制的全球属性清单，不确定\r\n            \r\n","\r\n            Cleanup for the task.\r\n            ":"\r\n            清理任务。\r\n            \r\n","project file":"项目文件\r\n","\r\n            Protected constructor \r\n            ":"\r\n            受保护的构造函数\r\n            \r\n","\r\n            The explicitly requested tools version to use.\r\n            ":"\r\n            要使用的明确要求的工具版本。\r\n            \r\n","\r\n            Was the task body evaluated or not\r\n            ":"\r\n            是否评估任务主体\r\n            \r\n","The inputs which are \"changed\" and require a build":"“更改”并需要构建的输入\r\n","The host object instance (can be null).":"主机对象实例（可以为null）。\r\n","\r\n            Location of the exclude attribute, if any.\r\n            ":"\r\n            排除属性的位置（如果有）。\r\n            \r\n","file in which the task is defined":"定义任务的文件\r\n","\r\n            Initialize a parented ProjectExtensionsElement instance\r\n            ":"\r\n            初始化父母的projectExtensionsElement实例\r\n            \r\n","\r\n            Event is a TaskParameterEventArgs\r\n            ":"\r\n            事件是一个任务Parametereventargs\r\n            \r\n","\r\n            Get a read-only collection of the child targets\r\n            ":"\r\n            获取仅阅读儿童目标的收藏\r\n            \r\n","The build request entry being built":"构建构建请求条目正在构建\r\n","\r\n            Work should proceed with the next work unit.\r\n            ":"\r\n            工作应继续下一个工作单位。\r\n            \r\n","True if this project is or imports the xml file; false otherwise.":"如果此项目为或导入XML文件，则为true；否则为错误。\r\n","\r\n            Retrieves the creation pattern.\r\n            ":"\r\n            检索创建模式。\r\n            \r\n","\r\n            Assumes metadataValue is unescaped.\r\n            ":"\r\n            假设元数据是不渗透的。\r\n            \r\n","\r\n            Appends a command-line switch that takes a single string parameter, quoting the parameter if necessary.\r\n            This method appends a space to the command line (if it's not currently empty) before the switch.\r\n            ":"\r\n            附加命令行开关，该开关采用单个字符串参数，如有必要，请引用参数。\r\n            此方法在开关之前将一个空间附加到命令行（如果当前不是空）。\r\n            \r\n","A hash table of additional global properties to apply\r\n                to the child project (can be null).  The key and value should both be strings.":"额外的全局属性的哈希表\r\n                到儿童项目（可以为null）。钥匙和价值都应该是字符串。\r\n","\r\n            Gets or sets the Label value. \r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"\r\n            获取或设置标签值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n","The reason for the shutdown":"关闭的原因\r\n","\r\n            Each evaluation has a unique ID.\r\n            ":"\r\n            每个评估都有一个唯一的ID。\r\n            \r\n","\r\n            The specified request id should now resume execution\r\n            ":"\r\n            指定的请求ID现在应恢复执行\r\n            \r\n","\r\n            Calls a method on the TaskLoggingHelper to parse a single line of text to\r\n            see if there are any errors or warnings in canonical format.  This can\r\n            be overridden by the derived class if necessary.\r\n            ":"\r\n            调用TaskLoggingHelper上的方法以将一行文本行解析为\r\n            查看是否有任何错误或警告。这个可以\r\n            如有必要，被派生的类覆盖。\r\n            \r\n","\r\n            True if the request should be blocking until the resources become available. False if the request should\r\n            be responded to immediately even if the desired resources are not available.\r\n            ":"\r\n            如果请求应阻止，直到资源可用为止。错误如果请求应\r\n            即使没有所需的资源，也会立即响应。\r\n            \r\n","\r\n            Adds a result to the cache\r\n            ":"\r\n            将结果添加到缓存\r\n            \r\n","The event context to use for logging":"用于记录的事件上下文\r\n","\r\n            Reports to the scheduler than a node aborted the build.\r\n            ":"\r\n            向调度程序报告比节点中止了构建。\r\n            \r\n","\r\n            This does not allow conditions, so it should not be called.\r\n            ":"\r\n            这不允许条件，因此不应被调用。\r\n            \r\n","\r\n            The maximum number of tasks that Parallel.ForEach may use\r\n            ":"\r\n            并行的最大任务数可能会使用\r\n            \r\n","Left hand side operand":"左手操作数\r\n","\r\n            For many factories, this method is a no-op.  But some factories may have built up\r\n            an AppDomain as part of an individual task instance, and this is their opportunity\r\n            to shutdown the AppDomain.\r\n            ":"\r\n            对于许多工厂而言，此方法是一种无障碍。但是一些工厂可能已经建立了\r\n            作为单个任务实例的一部分的应用程序域，这是他们的机会\r\n            关闭AppDomain。\r\n            \r\n","\r\n            Write debugging messages to the Debug.Out stream.\r\n            ":"\r\n            将调试消息写入debug.out流。\r\n            \r\n","\r\n            Displays the text for a project started message.\r\n            ":"\r\n            显示项目启动消息的文本。\r\n            \r\n","\r\n            Whether to include evaluation metaprojects in events.\r\n            ":"\r\n            是否将评估元标记包括在事件中。\r\n            \r\n","\r\n            This class provides helper methods to adapt from ":"该课程提供了适应的辅助方法\r\n"," is a boolean parameter. It's switch is ":" 是布尔参数。它的开关是\r\n","Desired architecture, or DotNetFrameworkArchitecture.Current for the architecture this process is currently running under.":"所需的体系结构或dotnetFrameWorkArchitecture.current该架构当前正在运行。\r\n","The id of the unresolved configuration.":"未解决配置的ID。\r\n","\r\n            Causes this node to connect to the matched endpoint.\r\n            ":"\r\n            使此节点连接到匹配的端点。\r\n            \r\n","\r\n            Gets or sets the reflection-produced PropertyInfo.\r\n            ":"\r\n            获取或设置反射产生的属性info。\r\n            \r\n","The identifier of the SDK":"SDK的标识符\r\n"," to a local variable and use that for the rest of the code instead.\r\n             This effectively copies the one field in the struct to a local variable so that it is insulated from other\r\n             threads.":" 将局部变量使用，然后将其用于代码的其余部分。\r\n             这有效地将结构中的一个字段复制到局部变量，以使其与其他变量隔离\r\n             线程。\r\n","\r\n            Magic number sent by the host to the client during the handshake.\r\n            Derived from the binary timestamp to avoid mixing binary versions.\r\n            ":"\r\n            主机在握手期间发送给客户的魔术号码。\r\n            源自二进制时间戳，以避免混合二进制版本。\r\n            \r\n","\r\n            The keyword that is used to open the help page for this property.\r\n            ":"\r\n            用于打开此属性的帮助页面的关键字。\r\n            \r\n","\r\n            Gets or sets the value of ToolsVersion. If there is no ToolsVersion, returns empty string.\r\n            If the value is null or empty, removes the attribute.\r\n            ":"\r\n            获取或设置工具交换的价值。如果没有工具，请返回空字符串。\r\n            如果值为空或空为空，请删除属性。\r\n            \r\n","\r\n            The formatting parameter.\r\n            ":"\r\n            格式参数。\r\n            \r\n","The lookup used when we are inferring outputs from inputs.":"当我们从输入推断输出时使用的查找。\r\n","\r\n            If set, MSBuild will skip the targets specified in this build request if they are not defined in the\r\n            ":"\r\n            如果设置，MSBUILD将跳过本构建请求中指定的目标，如果未在\r\n            \r\n","The task execution host.":"任务执行主机。\r\n","\r\n            Allows the registering of an ICentralLogger and a forwarding logger pair\r\n            ":"\r\n            允许注册icentrallogger和转发记录器对\r\n            \r\n","\r\n            The type of provider which manages this node.\r\n            ":"\r\n            管理此节点的提供商的类型。\r\n            \r\n","\r\n            Lock for the nextProjectId\r\n            ":"\r\n            锁定nextProjectID\r\n            \r\n","\r\n            Defines a fixed-size collection with the same API surface and behavior as an \"SZArray\", which is a\r\n            single-dimensional zero-based array commonly represented in C# as ":"\r\n            定义具有与“ szarray”相同的API表面和行为的固定尺寸集合，这是一个\r\n            基于零的单维零数组通常在C＃中表示为\r\n","\r\n            Sentinel value for the latest version that this version of MSBuild is aware of. Similar\r\n            to VersionLatest except the compiled value in the calling application will not need to\r\n            change for the update in MSBuild to be used.\r\n            ":"\r\n            此版本的MSBuild所知道的最新版本的Sentinel值。相似的\r\n            除了调用应用程序中的编译值外，dodyLatest不需要\r\n            更改用于使用MSBUILD中的更新。\r\n            \r\n","\r\n            Get any metadata in the item that has the specified name,\r\n            otherwise returns null\r\n            ":"\r\n            在具有指定名称的项目中获取任何元数据，\r\n            否则返回null\r\n            \r\n","\r\n            Set to true if the execution has been cancelled.\r\n            ":"\r\n            如果执行已取消，则设置为TRUE。\r\n            \r\n","\r\n            Raised when the state changes.\r\n            ":"\r\n            当国家改变时升起。\r\n            \r\n","\r\n            Project-visible property allows the user to override the path to the executable.\r\n            ":"\r\n            项目可见属性允许用户覆盖通往可执行文件的路径。\r\n            \r\n","Target framework moniker class which contains the targetframeworkVersion":"目标框架绰号类，其中包含targetFrameWorkversion\r\n","\r\n            Constructor, for unit testing only.  \r\n            ":"\r\n            构造函数，仅用于单元测试。\r\n            \r\n","\r\n            Structure to represent the information contained in Platform.xml\r\n            ":"\r\n            结构以表示platform.xml中包含的信息\r\n            \r\n","\r\n            The maximum number of entries to keep strong references to.\r\n            This has to be strong enough to make sure that key .targets files aren't pushed\r\n            off by transient loads of non-reusable files like .user files.\r\n            \r\n            Made this as large as 50 because VC has a large number of\r\n            regularly used property sheets and other imports.\r\n            If you change this, update the unit tests.\r\n            ":"最大的条目数量可以保持强烈的参考。\r\n            这必须足够强大以确保键.targets文件不会推动\r\n            通过不可解决的文件（例如.user文件）的瞬态载荷关闭。\r\n            \r\n            使它大至50，因为VC有大量\r\n            定期使用的财产表和其他进口。\r\n            如果更改此操作，请更新单元测试。\r\n            \r\n","Information about what is blocking the current request.":"有关阻止当前请求的内容的信息。\r\n","\r\n            AssemblyContextLoader used to load DLLs outside of msbuild.exe directory\r\n            ":"\r\n            用于加载dll的gasemblyContextLoader在msbuild.exe目录之外\r\n            \r\n","\r\n                Constructs a graph starting from the given graph entry points, evaluating with the provided project collection.\r\n            ":"\r\n                从给定的图入口点开始构造图形，并通过提供的项目集合评估。\r\n            \r\n","\r\n            This class represents a single item of the project, as it is passed into a task. TaskItems do not exactly correspond to\r\n            item elements in project files, because then tasks would have access to data that wasn't explicitly passed into the task\r\n            via the project file. It's not a security issue, but more just an issue with project file clarity and transparency.\r\n            \r\n            Note: This class has to be sealed.  It has to be sealed because the engine instantiates it's own copy of this type and\r\n            thus if someone were to extend it, they would not get the desired behavior from the engine.  \r\n            ":"\r\n            此类代表项目的单个项目，因为它被传递到任务中。 TaskItems并不完全对应\r\n            项目文件中的项目元素，因为随后任务可以访问未明确传递到任务的数据\r\n            通过项目文件。这不是安全问题，而只是项目文件清晰度和透明度的问题。\r\n            \r\n            注意：该课程必须密封。它必须密封，因为引擎实例化了其自己的这种类型的副本，并且\r\n            因此，如果有人将其扩展，他们将不会从引擎中获得所需的行为。\r\n            \r\n","\r\n            Gets the last line number (if any) of a range of invalid lines in the project.\r\n            ":"\r\n            获取项目中一系列无效行的最后一行号（如果有）。\r\n            \r\n"," instances this ":" 实例\r\n","\r\n            Returns true if the provided set of task host parameters matches the current process, \r\n            and false otherwise. \r\n            ":"\r\n            如果提供的任务主机参数集与当前过程匹配，则返回true，\r\n            否则为错误。\r\n            \r\n","\r\n            The current directory for evaluation.  Null if this is being called from a task, otherwise\r\n            it should be the project's directory.\r\n            ":"\r\n            当前评估目录。 null如果是从任务调用的，否则\r\n            它应该是项目的目录。\r\n            \r\n","The project graph entry points.":"项目图入口点。\r\n","\r\n            Parse the child of a ProjectRootElement\r\n            ":"\r\n            解析项目Rootelement的孩子\r\n            \r\n","\r\n            Location of removeMetadata, if any\r\n            ":"\r\n            RemoveMetadata的位置，如果有的话\r\n            \r\n","The factory to use for creating the new instance.":"用于创建新实例的工厂。\r\n","\r\n            One of the files it causes to import\r\n            ":"它导致导入的文件之一\r\n            \r\n","\r\n            Returns true if the specified node has an executing request, false otherwise.\r\n            ":"\r\n            如果指定的节点具有执行请求，则返回true，否则为false。\r\n            \r\n","\r\n            Record the unique input and output files so that the \"up to date\" message\r\n            can list them in the log later.\r\n            ":"\r\n            记录唯一的输入和输出文件，以便“最新消息”消息\r\n            可以在日志中列出它们。\r\n            \r\n","\r\n            Bag holding host object information for a single project file.\r\n            ":"\r\n            持有单个项目文件的主机对象信息。\r\n            \r\n","Synchronous or Asynchronous":"同步或异步\r\n","\r\n            Regkey that we check to see whether Dev10 is installed.  This should exist if any SKU of Dev10 is installed,\r\n            but is not removed even when the last version of Dev10 is uninstalled, due to 10.0\\bsln sticking around.\r\n            ":"\r\n            我们检查是否安装了Dev10。如果安装了Dev10的任何SKU，则应该存在，\r\n            但是，即使最后一个版本的dev10被卸载，也不会删除，这是由于粘附了10.0 \\ bsln。\r\n            \r\n","\r\n                A callback used for constructing a ":"\r\n                用于构造的回调\r\n","\r\n            Creates an unparented ProjectOutputElement, wrapping an unparented XmlElement.\r\n            Validates the parameters.\r\n            Exactly one of item name and property name must have a value.\r\n            Caller should then ensure the element is added to a parent\r\n            ":"\r\n            创建一个无与伦比的projectOutuputement，包装无与伦比的XMLELEMENT。\r\n            验证参数。\r\n            项目名称和属性名称中的一个必须具有值。\r\n            然后，呼叫者应确保将元素添加到父\r\n            \r\n","\r\n            Table of metadata values. \r\n            Each key may be qualified (\"itemtype.name\") or unqualified (\"name\").\r\n            Unqualified are considered to apply to all item types.\r\n            May be null, if empty.\r\n            ":"\r\n            元数据值表。\r\n            每个密钥可以合格（“ itemType.name”）或不合格（“名称”）。\r\n            不合格被认为适用于所有项目类型。\r\n            如果空的话，可能是空的。\r\n            \r\n","\r\n            Event handler for the node endpoint's LinkStatusChanged event.\r\n            ":"\r\n            节点Endpoint的Linkstatuschanged事件的活动处理程序。\r\n            \r\n","\r\n            Type of handler for TaskFinished events\r\n            ":"\r\n            任务事件的处理程序类型\r\n            \r\n","\r\n            Evaluated value\r\n            Never null.\r\n            ":"\r\n            评估值\r\n            永不零。\r\n            \r\n","\r\n            This class represents the function as extracted from an expression\r\n            It is also responsible for executing the function\r\n            ":"\r\n            该类表示从表达式提取的函数\r\n            它也负责执行该功能\r\n            \r\n","\r\n            Retrieves any value we have in our metadata table for the metadata name and item type specified.\r\n            If item type is null, it is ignored.\r\n            If no value is available, returns empty string.\r\n            ":"\r\n            检索我们在元数据表中为元数据名称和指定的项目类型中的任何值。\r\n            如果项目类型为null，则将忽略。\r\n            如果没有可用的值，请返回空字符串。\r\n            \r\n","\r\n            The entry we enter when we create the bucket.\r\n            ":"\r\n            我们在创建存储桶时输入的条目。\r\n            \r\n","\r\n            The nodeID for the inproc node.\r\n            ":"\r\n            INPROC节点的节点。\r\n            \r\n","\r\n            If MSBUILDNOINPROCNODE is set, then even if there's only one node in the buildparameters, it will be an out-of-proc node.  \r\n            ":"\r\n            如果设置了MSBUILDNOINPROCNODE，那么即使在buildParameters中只有一个节点，它也将是一个偏离的节点。\r\n            \r\n","\r\n            Utility function for ExternalProjects provider\r\n            ":"\r\n            外部项目提供商的实用程序功能\r\n            \r\n","The project instance creation settings.":"项目实例创建设置。\r\n","\r\n            Valid attributes on error element\r\n            ":"\r\n            错误元素上的有效属性\r\n            \r\n","\r\n            Assumes that the value being passed in is in its escaped form. \r\n            ":"\r\n            假设要通过的值是其逃脱形式。\r\n            \r\n","\r\n            Is the system running in multi-process mode and requires events to be serializable\r\n            ":"\r\n            是以多进程模式运行的系统，需要事件是可序列化的\r\n            \r\n","\r\n            Provides an enumerator over property definitions for a specified sub-toolset version\r\n            under a specified toolset version.\r\n            ":"\r\n            提供有关指定子图案版本的属性定义的枚举器\r\n            在指定的工具集中。\r\n            \r\n","\r\n            Flag indicating we have disposed. \r\n            ":"\r\n            指示我们已处置的标志。\r\n            \r\n","\r\n            The request is yielding its control of the node.\r\n            ":"\r\n            该请求正在产生其对节点的控制。\r\n            \r\n","\r\n            Constructs an empty project item definition instance.\r\n            ":"\r\n            构造一个空项目项目定义实例。\r\n            \r\n","\r\n            Compares the target's inputs against its outputs to determine if the target needs to be built/rebuilt/skipped.\r\n            ":"\r\n            将目标的输入与其输出进行比较，以确定是否需要构建/重建/跳过目标。\r\n            \r\n","\r\n            Get a read-only collection over the child item groups, if any.\r\n            Does not include any that may not be at the root, i.e. inside Choose elements.\r\n            ":"\r\n            如果有的话，请获取有关儿童项目组（如果有）的读书收集。\r\n            不包括任何可能不在根部的内容，即内部选择元素。\r\n            \r\n","\r\n             ITaskItem implementation which copies the metadata on this item to the specified item.\r\n             Copies direct and item definition metadata.\r\n             Does not copy built-in metadata, and will not overwrite existing, non-empty metadata.\r\n             If the destination implements ITaskItem2, this avoids losing the escaped nature of values.\r\n            \r\n             When copying metadata to a task item which can be accessed from a task (Utilities task item)\r\n             this method will merge and expand any metadata originating with item definitions.\r\n             ":"\r\n             ITASKITEM实现将本项目的元数据复制到指定项目。\r\n             副本直接和项目定义元数据。\r\n             不会复制内置元数据，也不会覆盖现有的非空元数据。\r\n             如果目的地实现了itaskItem2，则避免了失去值的逃脱性质。\r\n            \r\n             将元数据复制到可以从任务访问的任务项（公用事业任务项）\r\n             此方法将合并并扩展任何源自项目定义的元数据。\r\n             \r\n","\r\n            File logger parameters delimiters.\r\n            ":"\r\n            文件记录器参数定界符。\r\n            \r\n","Type of values":"值类型\r\n"," which does not expose a\r\n            public parameterless constructor.\r\n            ":" 不暴露\r\n            公共参数构造函数。\r\n            \r\n","Properties produced by the evaluation.":"评估产生的属性。\r\n","The expander to use":"使用的扩展器\r\n","\r\n            Validate relative path of a project\r\n            ":"\r\n            验证项目的相对路径\r\n            \r\n"," != None) then this element points\r\n            to the original element which generated this implicit import.\r\n            ":" ！=无）然后这个元素\r\n            到产生此隐式导入的原始元素。\r\n            \r\n","\r\n                Default SDK resolver for compatibility with VS2017 RTM.\r\n            ":"\r\n                默认SDK解析器与VS2017 RTM兼容。\r\n            \r\n","\r\n            The target was part of the parent's AfterTargets list.\r\n            ":"\r\n            目标是父母的后目标列表的一部分。\r\n            \r\n"," // Occurrences:2; Operation: Include; Provenance: StringLiteral | Glob\r\n             ":" //出现：2;操作：包括；出处：弦乐|地球\r\n             \r\n","\r\n            Evaluated and escaped value of the metadata.\r\n            Never null.\r\n            ":"\r\n            评估和逃脱了元数据的价值。\r\n            永不零。\r\n            \r\n","\r\n            Shuts down all idle MSBuild nodes on the machine\r\n            ":"\r\n            关闭机器上的所有空闲MSBUILD节点\r\n            \r\n","The property, or ":"财产，或\r\n","\r\n            Handles the NodeShutdown packet\r\n            ":"\r\n            处理nodeShutdown数据包\r\n            \r\n","Flag indicating if the nodes should prepare for reuse.":"标志指示节点是否应该准备重复使用。\r\n","\r\n            Retrieves the minimum configuration id which can be assigned that won't conflict with those in the scheduling plan.\r\n            ":"\r\n            检索可以分配的最小配置ID与计划计划中不会发生冲突的配置ID。\r\n            \r\n","\r\n            Called when breaking up a single ProjectItemElement that evaluates into several ProjectItems.\r\n            ":"\r\n            分解单个投影仪时，将其评估为几个projectItems。\r\n            \r\n","\r\n            Property set by VS when building projects. It's an XML containing the project configurations for ALL projects in the solution for the currently selected solution configuration.\r\n            ":"\r\n            构建项目时由VS设置的属性。这是一个XML，包含用于当前选择解决方案配置解决方案中所有项目的项目配置。\r\n            \r\n","\r\n            This interface is passed to objects which might need to call back into the request builder, such as the Target and Task builders\r\n            ":"\r\n            该界面传递给可能需要回到请求构建器的对象，例如目标和任务构建器\r\n            \r\n","\r\n            The host object that can be passed to this task.  \r\n            ":"\r\n            可以传递给此任务的主机对象。\r\n            \r\n","\r\n             Tries to find a ProjectItemElement already in the project file XML that has a wildcard that would match the\r\n             item we wish to add, does not have a condition or an exclude, and is within an itemgroup without a condition.\r\n            \r\n             For perf reasons, this method does several jobs in one.\r\n             If it finds a suitable existing item element, it returns that as the out parameter, otherwise the out parameter returns null.\r\n             Otherwise, if it finds an item element suitable to be just below our new element, it returns that.\r\n             Otherwise, if it finds an item group at least that's suitable to put our element in somewhere, it returns that.\r\n            \r\n             Returns null if the include of the item being added itself has wildcards, or semicolons, as the case is too difficult.\r\n             ":"\r\n             试图在项目文件XML中找到一个具有与之匹配的通配符的项目文件XML\r\n             我们希望添加的项目，没有条件或排除，并且在没有条件的项目组中。\r\n            \r\n             出于完美的原因，该方法一项工作。\r\n             如果它找到合适的现有项目元素，则将其作为OUT参数返回，否则OUT参数返回null。\r\n             否则，如果它发现适合在我们的新元素以下的项目元素，则将其返回。\r\n             否则，如果它发现一个项目组至少适合将我们的元素放在某个地方，则将其返回。\r\n            \r\n             返回null，如果所添加的物品本身具有通配符或半隆，则返回null，因为情况太难了。\r\n             \r\n","\r\n            create project instance with some look up table that improves performance\r\n            ":"\r\n            使用一些查找表来创建项目实例，以提高性能\r\n            \r\n","\r\n            Location of the continueOnError attribute, if any\r\n            ":"\r\n            连续方属性的位置，如果有的话\r\n            \r\n","\r\n            Writes project started messages.\r\n            ":"\r\n            写入项目开始消息。\r\n            \r\n","The primary dependency":"主要依赖性\r\n","\r\n            List of items.\r\n            \r\n            Item1 represents the item string, escaped\r\n            Item2 represents the original item.\r\n            \r\n            Item1 differs from Item2's string when it is coming from a transform\r\n            \r\n            ":"\r\n            项目列表。\r\n            \r\n            item1代表项目字符串，逃脱了\r\n            item2代表原始项目。\r\n            \r\n            Item1与Item2的字符串来自转换时的不同之处\r\n            \r\n            \r\n","\r\n            Declare a new state associated with the given source location.\r\n            States should (probably) have disjoint source locations.\r\n            Define as many states as possible using this method before calling Bake().\r\n            Location must map to a unique state within the type in which it is baked.\r\n            Name of the state will showup in the callstack as if it was a method name. Must be unique within the type in which it is baked.\r\n            Early-bound locals are arbitrary types whose values will be supplied on EnterState. May be null.\r\n            ":"\r\n            声明与给定源位置关联的新状态。\r\n            状态应（可能）具有不相交的源位置。\r\n            在调用bake（）之前，使用此方法定义尽可能多的状态。\r\n            位置必须映射到烘烤类型中的唯一状态。\r\n            状态的名称将在呼叫列表中出现，就像是方法名称一样。必须在烤制的类型中是唯一的。\r\n            早期的当地人是任意类型，其价值将在遗产上提供。可能是无效的。\r\n            \r\n","\r\n            Whether or not this task or target is executing right now.\r\n            ":"\r\n            该任务或目标是否现在正在执行。\r\n            \r\n","\r\n            Ending column number of interest in associated file. \r\n            ":"\r\n            结束列的关联文件的兴趣。\r\n            \r\n","An enumeration of property definitions.":"列举财产定义。\r\n","\r\n            Constructor that takes an MSBuild error code\r\n            ":"\r\n            采用MSBUILD错误代码的构造函数\r\n            \r\n","SDK for which to find the latest installed platform":"SDK可以找到最新的安装平台\r\n","The file name to append":"要附加的文件名\r\n"," A VC++ property that exists in the project manifest\r\n            in the MSBuild property group with label ":" 项目清单中存在的VC ++属性\r\n            在带有标签的MSBUILD属性组中\r\n","\r\n            Sets or gets the string cache used by this XmlDocument.\r\n            ":"\r\n            设置或获取此Xmldocument使用的字符串缓存。\r\n            \r\n","\r\n            Constructor for the unblocker where we are blocked waiting for a target.\r\n            ":"\r\n            Unblocker的构造函数，我们被阻止等待目标。\r\n            \r\n","The node id.":"节点ID。\r\n","\r\n            Ending line number of interest in associated file. \r\n            ":"\r\n            结束行的关联文件的兴趣数。\r\n            \r\n","The cache to load the PRE into.":"缓存将PRE加载到。\r\n","If true, will follow the fallback pattern -- from requested architecture, to \r\n            current architecture, to x86.  Otherwise, if the requested architecture path doesn't exist, that's it -- no path \r\n            will be returned.":"如果为true，将遵循后备模式 - 从请求的体系结构到\r\n            当前的体系结构，x86。否则，如果不存在请求的架构路径，就是这样 - 没有路径\r\n            将退还。\r\n","\r\n            Instantiates a project collection with specified global properties and loggers and using the\r\n            specified toolset locations, node count, and setting of onlyLogCriticalEvents.\r\n            Global properties and loggers may be null.\r\n            Throws InvalidProjectFileException if any of the global properties are reserved.\r\n            May throw InvalidToolsetDefinitionException.\r\n            ":"\r\n            实例化一个带有指定全局属性和登录器的项目集合，并使用\r\n            指定的工具集位置，节点计数和仅限批判性的设置。\r\n            全局属性和登录器可能为零。\r\n            如果保留任何全局属性，则抛出无效的fileException。\r\n            可能会抛出无效的DoolsetDefinitionException。\r\n            \r\n","\r\n            Gets or sets the BeforeTargets value. \r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"\r\n            获取或设置buforetargets值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n","the Moniker used to register host object in ROT":"这个绰号用于在腐烂中注册主机对象\r\n","\r\n            Determines if the current target should be skipped, and logs the appropriate message.\r\n            ":"\r\n            确定是否应该跳过当前目标，并记录适当的消息。\r\n            \r\n","\r\n                May return null if the expression would expand to non-empty and it broke out early.\r\n                Otherwise, returns the correctly expanded expression.\r\n            ":"\r\n                如果表达式将扩展到非空的，并且早点爆发，则可能会返回null。\r\n                否则，返回正确扩展的表达式。\r\n            \r\n","\r\n            Throws an InvalidToolsetDefinitionException.\r\n            \r\n            PERF WARNING: calling a method that takes a variable number of arguments\r\n            is expensive, because memory is allocated for the array of arguments -- do\r\n            not call this method repeatedly in performance-critical scenarios\r\n            ":"\r\n            抛出无效的DoolsetDefinitionException。\r\n            \r\n            完美警告：调用一种方法，该方法采用可变数量的参数\r\n            很昂贵，因为记忆是为一系列参数分配的 - 做\r\n            在绩效至关重要的情况下不反复调用此方法\r\n            \r\n","\r\n            Tells the evaluator whether it should evaluate elements with false conditions\r\n            ":"\r\n            告诉赋值器是否应该计算具有false条件的元素\r\n            \r\n","\r\n            Compares for left < right\r\n            ":"\r\n            比较左<右\r\n            \r\n","\r\n            This method takes a string representing one of the project's unique names (guid), and\r\n            returns the corresponding relative path to this project.\r\n            ":"\r\n            此方法采用一个代表项目的唯一名称之一（GUID）的字符串，并且\r\n            返回该项目的相应相对路径。\r\n            \r\n","\r\n            Cache new style extension sdks that we've enumerated\r\n            ":"\r\n            缓存新样式的扩展SDK，我们已经枚举\r\n            \r\n","One or more directory paths to combine and normalize.":"一个或多个目录路径可以合并和归一化。\r\n","\r\n             Append the regex equivalents for character sequences in the wildcard directory part of a filespec:\r\n            \r\n             (1) The leading **\\ if existing\r\n            \r\n             (2) Each occurrence of recursive wildcard \\**\\\r\n             \r\n             (3) Common filespec characters\r\n             ":"\r\n             在FILESPEC的通配符目录部分中附加为字符序列的正则等效物：\r\n            \r\n             （1）如果存在，则领先** \\\r\n            \r\n             （2）每次出现递归通配符\\ ** \\\r\n             \r\n             （3）Common FileSpec字符\r\n             \r\n","\r\n            When this task parameter is an item list, determines whether to log item metadata. Defaults to true.\r\n            ":"\r\n            当此任务参数是项目列表时，请确定是否记录项目元数据。默认为true。\r\n            \r\n","\r\n            Get items by evaluatedInclude value\r\n            ":"\r\n            通过评估值获取物品\r\n            \r\n","\r\n            Disposes of the struct by delegating the call to the underlying ":"\r\n            通过委派给基础的呼吁来处理结构\r\n","\r\n            Adds a task which builds the @(ProjectReference) items.\r\n            ":"\r\n            添加一个构建 @（projectReferference）项目的任务。\r\n            \r\n","\r\n            Framework Identity metadata name and manifest attribute\r\n            ":"\r\n            框架身份元数据名称和清单属性\r\n            \r\n","\r\n            Logs a warning event for the current task\r\n            Thread safe.\r\n            ":"\r\n            记录当前任务的警告事件\r\n            线程安全。\r\n            \r\n","\r\n            Options for how the graph should be built.\r\n            ":"\r\n            应如何构建图形的选项。\r\n            \r\n","\r\n            Flag indicating if logging is done.\r\n            ":"\r\n            标志指示是否已完成日志记录。\r\n            \r\n","\r\n            An implementation of IComparer useful for comparing the ItemSpecs \r\n            on ITaskItem's\r\n            ":"\r\n            IComparer的实现可用于比较itemspecs\r\n            在itaskItem上\r\n            \r\n","\r\n            Scan for the end of the property expression\r\n            ":"\r\n            扫描属性表达式的结束\r\n            \r\n","\r\n            Any immediately previous property that was overridden by this one during evaluation.\r\n            Because these properties are not backed by XML, they cannot have precedessors.\r\n            ":"\r\n            在评估期间，该属性直接覆盖的任何属性。\r\n            由于这些属性不受XML的支持，因此它们不能具有先例。\r\n            \r\n","Thrown when stack is empty.":"当堆栈为空时扔掉。\r\n","\r\n            Not relevant, returns 0.\r\n            ":"\r\n            无关，返回0。\r\n            \r\n","\r\n            The logging service used for evaluation errors\r\n            ":"用于评估错误的记录服务\r\n            \r\n","The initial targets for the request's configuration.":"请求配置的初始目标。\r\n","\r\n            Used to represent the schema information for a Tool, a Custom Build Rule, a PropertyPage, etc. \r\n            ":"用于表示工具的模式信息，自定义构建规则，propertypage等。\r\n            \r\n"," attribute and the location where the project was\r\n            imported.\r\n            ":" 属性和项目所在的位置\r\n            进口。\r\n            \r\n"," containing the resolved SDKs or associated error / reason\r\n                the SDK could not be resolved.  Return ":" 包含已解决的SDK或关联的错误 /原因\r\n                SDK无法解决。返回\r\n","\r\n            Accesses the evaluated include prior to wildcard expansion\r\n            ":"\r\n            访问评估的包括通配符扩展之前\r\n            \r\n","\r\n            Raise the project started event, if necessary.\r\n            ":"\r\n            如有必要，提高项目开始活动。\r\n            \r\n","\r\n            Lazily format resource string to help avoid (in some perf critical cases) even loading\r\n            resources at all.\r\n            ":"\r\n            懒惰格式的资源字符串，以帮助避免（在某些急剧中）甚至加载\r\n            资源。\r\n            \r\n","\r\n            A value that can be used to identify a thread. The value is valid from the time the thread is created until all handles to the thread are closed and the thread object is freed; at this point, the identifier may be reused.\r\n            ":"\r\n            可用于识别线程的值。该值从创建线程的时间到螺纹的所有操作都关闭并释放线程对象是有效的。此时，标识符可以重复使用。\r\n            \r\n","\r\n            Note that we only deal in terms of ":"\r\n            请注意，我们只按照\r\n","Error message which will be displayed":"将显示的错误消息\r\n","\r\n            Retrieve all the ":"\r\n            检索所有\r\n","The SDK content folder path":"SDK内容文件夹路径\r\n","\r\n            Used to create the initial, base logging context for the node.\r\n            ":"\r\n            用于创建节点的初始基础记录上下文。\r\n            \r\n","\r\n            The toolsversion we will fall back to as a last resort if the default one cannot be found, this fallback should be the most current toolsversion known\r\n            ":"\r\n            如果找不到默认的工具，我们将回到最后一个手段，这是最新的，应该是已知的最新工具。\r\n            \r\n","The set of task identity parameters to be used to identify the \r\n            correct task record match.":"一组任务身份参数用于识别\r\n            正确的任务记录匹配。\r\n","\r\n            The context of this build (used for logging purposes).\r\n            ":"\r\n            此构建的上下文（用于记录目的）。\r\n            \r\n","\r\n            Gets the default platform name for this solution. Usually it's Mixed Platforms, unless it's not present\r\n            in which case it's the first platform name we find.\r\n            ":"\r\n            获取此解决方案的默认平台名称。通常是混合平台，除非不存在\r\n            在这种情况下，这是我们找到的第一个平台名称。\r\n            \r\n"," \r\n            Default constructor \r\n            ":" \r\n            默认构造函数\r\n            \r\n","Path to the project being built.":"要建立项目的路径。\r\n","\r\n            Checks to see if a string can be encoded in a specified code page.\r\n            ":"\r\n            检查是否可以在指定的代码页中编码字符串。\r\n            \r\n","\r\n            This interface represents an item without exposing its type.\r\n            It's convenient to not genericise the base interface, to make it easier to use\r\n            for the majority of code that doesn't call these methods.\r\n            ":"\r\n            此接口表示一个项目而不公开其类型。\r\n            很方便不通用基本界面，以使其更易于使用\r\n            对于不称这些方法的大多数代码。\r\n            \r\n","\r\n            At the end of the build, repeats the errors and warnings that occurred \r\n            during the build, and displays the error count and warning count.\r\n            Does this in a \"nested\" style.\r\n            ":"\r\n            在构建结束时，重复发生的错误和警告\r\n            在构建过程中，并显示错误计数和警告计数。\r\n            以“嵌套”风格这样做。\r\n            \r\n","\r\n            List of name, value pairs to be passed to the spawned tool's environment.\r\n            May be null.\r\n            Object is used instead of string to avoid NGen/JIT FXcop flagging.\r\n            ":"\r\n            名称列表，要传递到产卵工具的环境的值对。\r\n            可能是无效的。\r\n            使用对象代替字符串来避免NGEN/JIT FXCOP标记。\r\n            \r\n","\r\n            The caller is responsible for managing the lifetime of the returned buffer and for passing it to ":"\r\n            呼叫者负责管理返回缓冲区的寿命并将其传递给\r\n","true if the major version of right is higher than left, false otherwise":"如果right的主要版本高于left，则为true，否则为false\r\n","\r\n            The Message event handler\r\n            ":"\r\n            消息事件处理程序\r\n            \r\n","\r\n            The encoding.\r\n            ":"\r\n            编码。\r\n            \r\n","\r\n            Platform name\r\n            ":"\r\n            平台名称\r\n            \r\n","\r\n             Internal for unit testing only\r\n             ":"\r\n             仅用于单元测试的内部\r\n             \r\n","\r\n            WARNING: marking a type [Serializable] without implementing ISerializable imposes a serialization contract -- it is a\r\n            promise to never change the type's fields i.e. the type is immutable; adding new fields in the next version of the type\r\n            without following certain special FX guidelines, can break both forward and backward compatibility\r\n            ":"\r\n            警告：标记[可序列化]而不实施类型的类型会施加序列化合同 - 这是一个\r\n            承诺永远不会更改类型的字段，即类型是不变的；在类型的下一个版本中添加新字段\r\n            不遵循某些特殊的FX指南，可以使前进和向后兼容\r\n            \r\n","\r\n            This class represents all of the settings which must be specified to start a build.\r\n            ":"\r\n            该类代表必须指定的所有设置才能启动构建。\r\n            \r\n","\r\n            Cache the sdk structure as found by enumerating the disk and registry.\r\n            ":"\r\n            通过枚举磁盘和注册表来缓存SDK结构。\r\n            \r\n","The property being set.":"设置的属性。\r\n","\r\n            The status of how the disabled wave was set.\r\n            ":"\r\n            设置残疾波的方式的状态。\r\n            \r\n","The class of targets":"目标类别\r\n","\r\n                A Composite glob\r\n            ":"\r\n                复合地球\r\n            \r\n","\r\n            Initialize a parented ProjectTargetElement\r\n            ":"\r\n            初始化育儿projectTargetElement\r\n            \r\n","\r\n            Create a logger instance with a specific verbosity.  This logs to\r\n            the default console.\r\n            ":"\r\n            创建具有特定详细性的记录器实例。这将登录\r\n            默认控制台。\r\n            \r\n","\r\n            Loads a project with the specified reader and tools version, using the collection's global properties.\r\n            The project will be added to this project collection when it is named.\r\n            ":"\r\n            使用集合的全局属性，将项目加载带有指定的读取器和工具版本。\r\n            该项目命名时将添加到此项目集合中。\r\n            \r\n","\r\n            Console-based output uses the current system OEM code page by default. Note that we should not use Console.OutputEncoding\r\n            here since processes we run don't really have much to do with our console window (and also Console.OutputEncoding\r\n            doesn't return the OEM code page if the running application that hosts MSBuild is not a console application).\r\n            ":"\r\n            基于控制台的输出默认使用当前系统OEM代码页面。请注意，我们不应该使用控制台。\r\n            在这里，由于流程我们运行实际上与我们的控制台窗口没有太大关系（以及Console.OutputenCoding\r\n            如果托管MSBuild的运行应用程序不是控制台应用程序，则不会返回OEM代码页。\r\n            \r\n","Set if configurations which have been cleared.":"设置如果已清除的配置。\r\n","\r\n            Constructor for a blocker used by results-transfer requests\r\n            ":"\r\n            结果转移请求使用的阻滞剂的构造函数\r\n            \r\n","\r\n            Gets or sets the DependsOnTargets value. \r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"\r\n            获取或设置RewationSontargets值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n","\r\n            This field is optional and whether, for a ":"\r\n            该字段是可选的，是否为\r\n","\r\n            The project build event coontext for the first project started event seen, this is the root of the submission.\r\n            ":"\r\n            第一个项目启动事件的项目构建事件Coontext可以看到，这是提交的根源。\r\n            \r\n","\r\n            Enumerate all the projects\r\n            ":"\r\n            列举所有项目\r\n            \r\n","\r\n            Given a task name and a list of records which may contain the task, this helper method will ask the records to see if the task name\r\n            can be created by the factories which are wrapped by the records. (this is done by instantiating the task factory and asking it).\r\n            ":"\r\n            给定一个任务名称和可能包含任务的记录列表，此辅助方法将要求记录查看任务名称是否\r\n            可以由记录包裹的工厂创建。 （这是通过实例化任务工厂并询问它来完成的）。\r\n            \r\n","\r\n            ItemDefinitions,\r\n            ":"\r\n            itemDefinitions，\r\n            \r\n","\r\n            Specifies that an existing entry with the same key should be overwritten if encountered.\r\n            ":"\r\n            指定如果遇到相同密钥的现有条目应被覆盖。\r\n            \r\n","The translator to use as a source for packet data.":"翻译器用作数据包数据的来源。\r\n","\r\n            Create various target snapshots\r\n            ":"\r\n            创建各种目标快照\r\n            \r\n","\r\n            Ctor for deserializing from state file (custom binary serialization) using translator.\r\n            ":"\r\n            CTOR使用Translator从状态文件（自定义二进制序列化）进行挑选。\r\n            \r\n","\r\n            Gets an evaluated metadata on this item.\r\n            Potentially includes a metadata from an item definition.\r\n            Does not return built-in metadata, such as \"FullPath\".\r\n            Returns null if not found.\r\n            ":"\r\n            在此项目上获得评估的元数据。\r\n            可能包括项目定义中的元数据。\r\n            不返回内置元数据，例如“ FullPath”。\r\n            如果找不到的话，返回零。\r\n            \r\n","\r\n            Registers a factory with the component host.\r\n            ":"\r\n            用组件主机注册工厂。\r\n            \r\n","\r\n            Gets or sets the Remove value.\r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty or null.\r\n            ":"\r\n            获取或设置删除值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空或null，则删除属性。\r\n            \r\n","\r\n            The path node to add in when the output directory for a website is overridden.\r\n            ":"\r\n            当网站的输出目录被覆盖时，要添加的路径节点。\r\n            \r\n","\r\n                If the evaluation is successful but the project graph contains a circular\r\n                dependency\r\n            ":"\r\n                如果评估成功，但项目图包含一个圆形\r\n                依赖性\r\n            \r\n","\r\n            This is the lookup representing the current project items and properties 'state'.\r\n            ":"\r\n            这是代表当前项目项目和属性“状态”的查找。\r\n            \r\n","\r\n            Creates a task.\r\n            Caller must add it to the location of choice in this project.\r\n            ":"\r\n            创建一个任务。\r\n            呼叫者必须将其添加到该项目的选择位置。\r\n            \r\n","\r\n            A semi-colon delimited list of \"key[=value]\" parameter pairs.\r\n            ":"\r\n            “键[= value]”参数对的半颜色划界列表。\r\n            \r\n","\r\n            The event used to signal that this request should wake up from its wait state.\r\n            ":"\r\n            该事件用于表示该请求应从其等待状态唤醒。\r\n            \r\n","\r\n            Expected location that MSBuild tasks (v12) is picked up from if the user\r\n            references it with just a simple name, used for shimming in loading\r\n            task factory UsingTasks\r\n            ":"\r\n            如果用户从\r\n            引用它仅用一个简单的名称，用于加载时弹药\r\n            任务工厂使用任务\r\n            \r\n","\r\n            Parse a ProjectOnErrorElement\r\n            ":"\r\n            解析一个projectonOnerrelement\r\n            \r\n","\r\n            Whether or not to gather statistics\r\n            ":"\r\n            是否收集统计数据\r\n            \r\n","New deserialized collection instance.":"新的挑选集合实例。\r\n","\r\n            Throws an invalid name exception.\r\n            ":"\r\n            引发无效的名称异常。\r\n            \r\n","\r\n            Used for signalling when the tool writes to stdout.\r\n            ":"\r\n            该工具写入stdout时，用于发信号。\r\n            \r\n"," parameter can contain other mutations done at build time in targets / tasks\r\n            ":" 参数可以包含在目标 /任务中构建时间完成的其他突变\r\n            \r\n","Event context for the project.":"项目的事件上下文。\r\n","\r\n            Queue of actions to call when a resource request is responded to.\r\n            ":"\r\n            响应资源请求时要呼叫的行动队列。\r\n            \r\n","\r\n            Handle task finished\r\n            ":"\r\n            处理任务完成\r\n            \r\n","\r\n            The node logging context.\r\n            ":"\r\n            节点记录上下文。\r\n            \r\n","\r\n            Location of the Type attribute.\r\n            If there is no such attribute, returns the location of the element,\r\n            in lieu of the default value it uses for the attribute.\r\n            ":"\r\n            类型属性的位置。\r\n            如果没有此类属性，请返回元素的位置，\r\n            代替用于属性的默认值。\r\n            \r\n"," returns for various item elements.\r\n             ":" 返回各种项目元素。\r\n             \r\n","\r\n            Represents a category to which a ":"\r\n            代表一个类别\r\n","The request needing results transferred":"需要转移结果的请求\r\n","\r\n            Lightweight specialized implementation of ":"\r\n            轻量级专业实施\r\n","\r\n            Condition, if any\r\n            ":"\r\n            条件，如果有的话\r\n            \r\n","The entry to build.":"构建的条目。\r\n","\r\n            An entry in the evaluator's metadata table.\r\n            ":"\r\n            评估者元数据表中的条目。\r\n            \r\n","\r\n            Remember this TaskItem so that we can disconnect it when this Task has finished executing\r\n            Only if we're passing TaskItems to another AppDomain is this necessary. This call\r\n            Will make that determination for you.\r\n            ":"\r\n            记住此任务，以便我们可以在此任务完成后断开连接\r\n            只有当我们将任务网络传递给另一个AppDomain时，才有必要。这个电话\r\n            将为您做出决定。\r\n            \r\n","\r\n            Evaluate a single ProjectItemElement into zero or more items.\r\n            If specified, or if the condition on the item itself is false, only gathers the result into the list of items-ignoring-condition,\r\n            and not into the real list of items.\r\n            ":"\r\n            评估单个projectItemelement分为零或更多项目。\r\n            如果指定，或者项目本身的条件是错误的，则只会将结果聚集到项目处方条件列表中，\r\n            而不是进入实际项目列表。\r\n            \r\n","\r\n            Loads each MSBuild project in this solution and looks for its project-to-project references so that\r\n            we know what build order we should use when building the solution.\r\n            ":"在此解决方案中加载每个MSBUILD项目，并寻找其项目对项目的参考\r\n            我们知道在构建解决方案时应使用什么构建顺序。\r\n            \r\n","\r\n            64-bit Intel process, using the 4.0 CLR.\r\n            ":"\r\n            使用4.0 CLR，64位Intel工艺。\r\n            \r\n","\r\n            This event is raised for all BuildEventArgs objects after a more type-specific event\r\n            ":"\r\n            此事件是针对更特定类型的事件后为所有BuildEventargs对象提出的\r\n            \r\n","\r\n            Compares this object with another for equality\r\n            ":"\r\n            将此对象与另一个对象进行比较\r\n            \r\n","\r\n            The sub-toolset version that, combined with the ToolsVersion, was used to determine\r\n            the toolset properties for this project.\r\n            ":"\r\n            结合工具交换的子量表版本用于确定\r\n            该项目的工具集属性。\r\n            \r\n","\r\n            The cache for build results.\r\n            ":"\r\n            构建结果的缓存。\r\n            \r\n","\r\n            If dwFlags specifies STARTF_USECOUNTCHARS, if a new console window is created in a console process, this member specifies the screen buffer width, in character columns. Otherwise, this member is ignored.\r\n            ":"\r\n            如果DWFLAGS指定startf_usecountchars，则在控制台进程中创建新的控制台窗口，则该成员在字符列中指定屏幕缓冲区宽度。否则，该成员将被忽略。\r\n            \r\n","\r\n            This property exposes the logger id which identifies each distributed logger uniquiely\r\n            ":"\r\n            此属性公开了记录器ID，该记录器ID可以唯一标识每个分布的记录器\r\n            \r\n","\r\n            Constructor for metadata.\r\n            Does not allow item spec modifiers.\r\n            Discards the location of the original element. This is not interesting in the Execution world\r\n            as it should never be needed for any subsequent messages, and is just extra bulk.\r\n            IMMUTABLE OBJECT.\r\n            ":"\r\n            元数据的构造函数。\r\n            不允许项目规格修饰符。\r\n            丢弃原始元素的位置。这在执行世界中并不有趣\r\n            由于任何后续消息都不需要它，而且只是额外的批量。\r\n            不变的物体。\r\n            \r\n","\r\n            Required to implement Attribute access for remote element.\r\n            ":"\r\n            为远程元素实现属性访问所需。\r\n            \r\n","\r\n            Extract the value for \"RecursiveDir\", if any, from the Include.\r\n            If there is none, returns an empty string.\r\n            ":"\r\n            从包含中提取“ recursivedir”（如果有）的值。\r\n            如果没有，请返回一个空字符串。\r\n            \r\n","The name of the metadata to add (or change) in the target item.":"目标项目中要添加（或更改）的元数据的名称。\r\n","This property is thread-safe":"此属性是线程安全\r\n","\r\n            Derivation of XmlElement to implement IXmlLineInfo\r\n            ":"\r\n            XMlelement的推导以实现IxMllineInfo\r\n            \r\n","\r\n            Everything else besides the below well-known project types.\r\n            ":"\r\n            除了以下知名项目类型之外，其他所有内容。\r\n            \r\n","\r\n            This method is used by the Target Builder to indicate that a child of this target has failed and that work should not\r\n            continue in Completed / Skipped mode. We do not want to mark the state to run in ErrorExecution mode so that the\r\n            OnError targets do not run (the target was skipped due to condition so OnError targets should not run).\r\n            ":"\r\n            目标构建器使用此方法表明该目标的孩子失败了，而工作不应\r\n            继续以完成 /跳过模式。我们不想将状态标记为以errorexecution模式运行，以便\r\n            OnError目标不运行（由于条件而跳过目标，因此不应运行Onerror目标）。\r\n            \r\n","An enumerable of matching file system entries (can be empty).":"匹配文件系统条目的枚举（可以是空）。\r\n","\r\n            The small string Mru list.\r\n            ":"\r\n            小字符串MRU列表。\r\n            \r\n","\r\n            The level of detail (i.e. verbosity) of an event log is entirely controlled by the logger generating the log -- a logger\r\n            will be directed to keep its verbosity at a certain level, based on user preferences, but a logger is free to choose the\r\n            events it logs for each verbosity level.\r\n            \r\n            LOGGING GUIDELINES FOR EACH VERBOSITY LEVEL:\r\n            1) Quiet -- only display a summary at the end of build\r\n            2) Minimal -- only display errors, warnings, high importance events and a build summary\r\n            3) Normal -- display all errors, warnings, high importance events, some status events, and a build summary\r\n            4) Detailed -- display all errors, warnings, high and normal importance events, all status events, and a build summary\r\n            5) Diagnostic -- display all events, and a build summary\r\n            ":"\r\n            事件日志的细节级别（即详细）完全由生成日志的记录器控制 - 记录器\r\n            根据用户的喜好，将指示将其详细性保持在一定层面，但是记录器可以免费选择\r\n            它为每个详细级别登录的事件。\r\n            \r\n            每个详细级别的记录指南：\r\n            1）安静 - 仅在构建结束时显示摘要\r\n            2）最小值 - 仅显示错误，警告，高重要性事件和构建摘要\r\n            3）正常 - 显示所有错误，警告，高重要性事件，一些状态事件和构建摘要\r\n            4）详细 - 显示所有错误，警告，高和正常的重要性事件，所有状态事件以及构建摘要\r\n            5）诊断 - 显示所有事件和构建摘要\r\n            \r\n","\r\n            Returns the config id with the greatest value according to the comparer.\r\n            ":"\r\n            根据比较返回具有最大值的配置ID。\r\n            \r\n","\r\n            See the string overload version\r\n            ":"\r\n            查看字符串过载版本\r\n            \r\n","The task to clean up.":"清理的任务。\r\n","The build request to which these results should be associated.":"这些结果应与之关联的构建请求。\r\n","\r\n            Accessor for the yield action.\r\n            ":"\r\n            收益率动作的登录器。\r\n            \r\n","\r\n            Event source which events from the build manager will be raised on.\r\n            ":"\r\n            事件来源将提出哪些构建经理的事件。\r\n            \r\n","\r\n            Creates a metadata modification of type Update with the specified metadata value.\r\n            ":"\r\n            使用指定的元数据值创建类型更新的元数据修改。\r\n            \r\n","The logging context for the node.":"节点的记录上下文。\r\n","List containing ItemBucket objects (can be empty), each one representing an execution batch.":"列表包含ItemBucket对象（可以是空），每个对象表示执行批处理。\r\n","\r\n            32-bit Intel process, using the 2.0 CLR.\r\n            ":"\r\n            使用2.0 CLR，32位Intel工艺。\r\n            \r\n","\r\n            The in-proc node id\r\n            ":"\r\n            程序内节点ID\r\n            \r\n","\r\n            create immutable version of project instance\r\n            ":"\r\n            创建项目实例的不变版本\r\n            \r\n","\r\n            Perform a bitwise OR on the first and second (first | second)\r\n            ":"\r\n            执行按位或在第一和第二（第一/第二）\r\n            \r\n","\r\n            Handler for task finished events\r\n            ":"\r\n            任务完成事件的处理程序\r\n            \r\n","\r\n            Implementation of file system operations directly over the dot net managed layer\r\n            ":"\r\n            直接通过DOT NET管理层实施文件系统操作\r\n            \r\n","\r\n            The work unit was skipped.\r\n            ":"\r\n            工作单元被跳过。\r\n            \r\n","\r\n            Gets or sets the Condition value. \r\n            It will return empty string IFF a condition attribute is legal but it’s not present or has no value. \r\n            It will return null IFF a Condition attribute is illegal on that element.\r\n            Removes the attribute if the value to set is empty.\r\n            It is possible for derived classes to throw an ":"\r\n            获取或设置条件值。\r\n            如果条件属性是合法的，它将返回空字符串，但不存在或没有价值。\r\n            它将返回null iff条件属性在该元素上是非法的。\r\n            如果要设置的值为空，则删除属性。\r\n            派生的类可能会扔一个\r\n","\r\n            Subcategory of the error\r\n            ":"\r\n            错误子类别\r\n            \r\n","\r\n            Creates an instance of this exception using the specified error message and inner invalid project file exception.\r\n            This is used in order to wrap and exception rather than rethrow it verbatim, which would reset the callstack.\r\n            The assumption is that all the metadata for the outer exception comes from the inner exception, eg., they have the same error code.\r\n            ":"\r\n            使用指定的错误消息和内部无效的项目文件异常创建此异常的实例。\r\n            它用于包裹和异常，而不是逐字化，这将重置呼叫炉灶。\r\n            假设是外部异常的所有元数据都来自内部异常，例如，它们具有相同的错误代码。\r\n            \r\n","\r\n            Get a delegate to the given item transformation function by supplying the name and the\r\n            Item type that should be used.\r\n            ":"\r\n            通过提供名称和\r\n            应该使用的项目类型。\r\n            \r\n","\r\n            The held array\r\n            ":"\r\n            持有的阵列\r\n            \r\n","\r\n            Gets the project root element which was just changed..\r\n            ":"\r\n            获取刚刚更改的项目根元素。\r\n            \r\n","\r\n            The default character limit for logging parameters. 10k is somewhat arbitrary, see https://github.com/microsoft/msbuild/issues/4907.\r\n            ":"\r\n            记录参数的默认字符限制。 10K有些任意，请参见https://github.com/microsoft/msbuild/issues/4907。\r\n            \r\n","The array of \"child\" build requests to be issued.":"要发出的“儿童”构建请求的数组。\r\n","\r\n            Retrieves a configuration id for a configuration which has a matching path\r\n            ":"\r\n            检索具有匹配路径的配置的配置ID\r\n            \r\n","\r\n            Expected location that MSBuild tasks (v4) is picked up from if the user\r\n            references it with just a simple name, used for shimming in loading\r\n            task factory UsingTasks\r\n            ":"\r\n            如果用户从\r\n            引用它仅用一个简单的名称，用于加载时弹药\r\n            任务工厂使用任务\r\n            \r\n","\r\n            Adds the specified configuration to the cache.\r\n            ":"\r\n            将指定的配置添加到缓存。\r\n            \r\n","\r\n            name attribute\r\n            ":"\r\n            名称属性\r\n            \r\n","\r\n            The value to be assigned to the metadata for a particular project reference.  Contains only configuration and platform specified in the project configuration, evaluated.\r\n            ":"\r\n            要分配给元数据以进行特定项目参考的值。评估仅包含项目配置中指定的配置和平台。\r\n            \r\n","\r\n            Initializes a configuration from a BuildRequestData structure.  Used by the BuildManager.\r\n            Figures out the correct tools version to use, falling back to the provided default if necessary.\r\n            May throw InvalidProjectFileException.\r\n            ":"\r\n            从BuildRequestData结构初始化配置。由BuildManager使用。\r\n            计算出正确的工具版本，如有必要，请返回提供的默认版本。\r\n            可能会抛出无效的fileException。\r\n            \r\n","\r\n            Not determined\r\n            ":"\r\n            还没决定\r\n            \r\n","A positive configuration id if one exists in the plan, 0 otherwise.":"如果计划中存在一个正配置ID，则为0。\r\n"," contained in this ":" 其中包含\r\n","\r\n            Default task factory to use if one is not specified\r\n            ":"\r\n            默认任务工厂如果未指定一个\r\n            \r\n","\r\n            Indicates whether further work should be done.\r\n            ":"\r\n            指示是否应进一步完成。\r\n            \r\n","\r\n            The items for this bucket.\r\n            ":"\r\n            此桶的项目。\r\n            \r\n","The entry issuing the request.":"发出请求的条目。\r\n","\r\n            Whether there are any child metadata elements\r\n            ":"\r\n            是否有孩子元数据元素\r\n            \r\n","\r\n            Additional resolved SDK paths beyond the one specified in ":"\r\n            超出指定的其他解决的SDK路径\r\n","\r\n            The list of unresolved configurations we need to issue.\r\n            ":"\r\n            我们需要发布的未解决配置列表。\r\n            \r\n","\r\n            Get the value of the registry key from one of the RegistryView's specified\r\n            ":"\r\n            从注册表的一个指定的一个值中获取注册表密钥的值\r\n            \r\n","\r\n            A flag indicating whether only those metadata explicitly-specified should be retained on a target item.\r\n            ":"\r\n            标志指示仅应保留在目标项目上的那些明确指定的元数据。\r\n            \r\n","\r\n            Calls parseName and throws exception if the resulting name is not a valid NCName.\r\n            Returns the input string if there is no error.\r\n            ":"\r\n            如果结果名称不是有效的NCNAME，请调用parsename并引发异常。\r\n            如果没有错误，则返回输入字符串。\r\n            \r\n","/p:val1 /p:val2 /p:val3":"/p：val1 /p：val2 /p：val3\r\n","\r\n            A link pointing to more information about the warning.\r\n            ":"\r\n            指出有关警告的更多信息的链接。\r\n            \r\n","\r\n            Raised when the engine status changes.\r\n            ":"\r\n            当发动机状态变化时升高。\r\n            \r\n","\r\n            Deep clone this into another TaskItem\r\n            ":"\r\n            深克隆到另一个任务中\r\n            \r\n","\r\n            Returns true if the two dictionaries representing sets of task identity parameters match; false otherwise.\r\n            Internal so that RegisteredTaskRecord can use this function in its determination of whether the task factory \r\n            supports a certain task identity.  \r\n            ":"\r\n            如果表示任务标识参数集匹配的两个字典返回true；否则为错误。\r\n            内部以便注册的TaskRecord可以在确定任务工厂的确定时使用此功能\r\n            支持某个任务身份。\r\n            \r\n","\r\n            Helper that creates a list of ProjectItem's given an unevaluated Include and a ProjectRootElement.\r\n            Used by both Evaluator.EvaluateItemElement and by Project.AddItem.\r\n            ":"\r\n            助手创建了projectItem列表的列表，其中包括未评估的包括和一个项目首席。\r\n            由评估器和project.Additem使用。\r\n            \r\n","\r\n             This method takes a string which may contain any number of\r\n             \"$(propertyname)\" tags in it.  It replaces all those tags with\r\n             the actual property values, and returns a new string.  For example,\r\n            \r\n                 string processedString =\r\n                     propertyBag.ExpandProperties(\"Value of NoLogo is $(NoLogo).\");\r\n            \r\n             This code might produce:\r\n            \r\n                 processedString = \"Value of NoLogo is true.\"\r\n            \r\n             If the sourceString contains an embedded property which doesn't\r\n             have a value, then we replace that tag with an empty string.\r\n            \r\n             This method leaves the result typed and escaped.  Callers may need to convert to string, and unescape on their own as appropriate.\r\n             ":"\r\n             此方法采用一个可能包含任意数量的字符串\r\n             “ $（propertyName）”标签。它用\r\n             实际属性值，并返回一个新字符串。例如，\r\n            \r\n                 字符串processedString =\r\n                     propertyBag.ExpandProperties（“ nologo的值是$（nologo）。”）;\r\n            \r\n             该代码可能会产生：\r\n            \r\n                 processedstring =“ nologo的值是正确的。”\r\n            \r\n             如果源环境包含一个不嵌入的属性\r\n             有一个值，然后我们用一个空字符串替换该标签。\r\n            \r\n             该方法使结果输入并逃脱。呼叫者可能需要转换为字符串，并自行开发。\r\n             \r\n","\r\n            Maps a configuration id to the node to which it is assigned.\r\n            ":"\r\n            将配置ID映射到分配给的节点。\r\n            \r\n","\r\n            Specifies when the file was last read from, written to, or for executable files, run.\r\n            ":"\r\n            指定文件是何时最后读取，写入或为可执行文件运行的文件。\r\n            \r\n","\r\n            Get a list target platform sdks on the machine.\r\n            ":"\r\n            在计算机上获取列表目标平台SDK。\r\n            \r\n","The newly registered logger.":"新注册的记录仪。\r\n","\r\n            Gets the location of the directory used for diagnostic log files.\r\n            ":"\r\n            获取用于诊断日志文件的目录的位置。\r\n            \r\n","\r\n            Called to execute a task within a target. This method instantiates the task, sets its parameters, and executes it. \r\n            ":"\r\n            打电话给目标内执行任务。此方法实例化任务，设置其参数并执行。\r\n            \r\n","\r\n            Helper to avoid doing an expensive disk check for MSBuild.exe when\r\n            we already checked in a previous build.\r\n            This File.Exists otherwise can show up in profiles when there's a lot of \r\n            design time builds going on.\r\n            ":"\r\n            助手避免进行昂贵的磁盘检查msbuild.exe\r\n            我们已经检查了以前的构建。\r\n            此文件。否则，当有很多时\r\n            设计时间构建正在进行中。\r\n            \r\n","\r\n            INTERNAL WARNING: DO NOT USE the Log property in this class! Log points to resources in the task assembly itself, and \r\n            we want to use resources from Utilities. Use LogPrivate (for private Utilities resources) and LogShared (for shared MSBuild resources)\r\n            ":"\r\n            内部警告：请勿在此类中使用日志属性！日志指向任务组件本身中的资源，并且\r\n            我们想使用公用事业的资源。使用logprivate（用于私人公用事业资源）和日志制定（用于共享的MSBUILD资源）\r\n            \r\n","\r\n            If the value of this field  does not correspond to the ":"\r\n            如果该字段的值与\r\n","\r\n            Determines the source of a property given the variables SetProperty arguments provided. This logic follows what's in ":"\r\n            确定给定变量SetProperty参数的属性来源。这种逻辑遵循了什么\r\n","\r\n            Location of the Architecture attribute, if any\r\n            ":"\r\n            架构属性的位置，如果有的话\r\n            \r\n","\r\n            Print out the performance counter message\r\n            ":"\r\n            打印出性能计数器消息\r\n            \r\n","\r\n            If dwFlags specifies STARTF_USESIZE, this member is the height of the window if a new window is created, in pixels. Otherwise, this member is ignored.\r\n            ":"\r\n            如果DWFLAGS指定startf_asesize，则该成员是窗口的高度，如果创建了新窗口，则以像素为单位。否则，该成员将被忽略。\r\n            \r\n","\r\n            Gets child elements, ignoring whitespace and comments.\r\n            Throws InvalidProjectFileException for unexpected XML node types.\r\n            ":"\r\n            获取儿童元素，忽略空格和评论。\r\n            抛出意外XML节点类型的无效fileException。\r\n            \r\n","\r\n            An enumeration of all component types recognized by the system    \r\n            ":"\r\n            对系统认可的所有组件类型的枚举\r\n            \r\n","\r\n            The set of task identity parameters that were set on \r\n            this particular factory's UsingTask statement. \r\n            ":"\r\n            设置的任务身份参数集\r\n            这个特定工厂的使用任务语句。\r\n            \r\n","\r\n            This method generates an MSBuild project file from the list of projects and project dependencies\r\n            that have been collected from the solution file.\r\n            ":"\r\n            此方法从项目列表和项目依赖项列表中生成MSBUILD项目文件\r\n            从解决方案文件中收集的。\r\n            \r\n","True if the node was created, false otherwise.":"如果创建节点，则为fress，否则为否。\r\n","Profiler results if evaluation profiling was enabled.":"如果启用了评估分析，则结果结果。\r\n","\r\n            For a TargetStarted or a ProjectStarted event, this field tells us\r\n            the name of the *parent* project file that was responsible.\r\n            ":"\r\n            对于目标开始或项目开始的事件，该领域告诉我们\r\n            负责的 * parent *项目文件的名称。\r\n            \r\n","\r\n             and can be overridden for different contexts.  This service calls the ":"\r\n             并且可以在不同的情况下被覆盖。此服务调用\r\n","\r\n            Number of cores granted as part of running the build request.\r\n            ":"\r\n            作为运行构建请求的一部分，授予的核心数量。\r\n            \r\n"," if it was previously initialized.":" 如果以前是初始化的。\r\n","\r\n            Launch the project and gather the results, reporting them back to the BuildRequestEngine.\r\n            ":"\r\n            启动该项目并收集结果，并将其报告回BuildRequestengine。\r\n            \r\n","Timestamp when event was created":"创建事件时的时间戳\r\n","\r\n            Pull in all the environment into our property bag\r\n            ":"\r\n            将所有环境拉入我们的财产包\r\n            \r\n","\r\n            The toolsversion that was originally specified on the project's root element.\r\n            ":"\r\n            最初在项目根部元素上指定的工具vers。\r\n            \r\n","\r\n            Creates an instance of this class given the backing item.\r\n            Does not copy immutability, since there is no connection with the original.\r\n            ":"\r\n            给定背词项目创建此类的实例。\r\n            不复制不变性，因为与原件没有任何联系。\r\n            \r\n","\r\n            If we are in build-time mode, we unregister for build-time events and re-register for design-time events.\r\n            If we are in design-time mode, we unregister for design-time events and shut down the logger we are holding.\r\n            ":"\r\n            如果我们处于构建时间模式，我们将登记进行建筑时间事件，并重新注册设计时间活动。\r\n            如果我们处于设计时间模式，我们将取消注册设计时间活动，并关闭所持有的记录仪。\r\n            \r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n            Adds an item group after the last child.\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n            在最后一个孩子之后添加一个项目组。\r\n            \r\n","\r\n            The contracts contained by this manifest, if any\r\n            Item1: Contract name\r\n            Item2: Contract version\r\n            ":"\r\n            该清单所包含的合同，如果有的话\r\n            项目1：合同名称\r\n            项目2：合同版本\r\n            \r\n","An unprocessed hashtable of entries in this section":"本节中未经加工的条目可标记\r\n","The host for the component.":"组件的主机。\r\n","\r\n            Add a space or newline to the specified string if and only if it's not empty.\r\n            ":"\r\n            且仅当它不是空时，将空间或新线添加到指定的字符串。\r\n            \r\n","\r\n            List of properties which have been used but have not been initialized yet.\r\n            ":"\r\n            已使用但尚未初始化的属性列表。\r\n            \r\n","Whether this node is eligible for reuse later.":"该节点是否有资格稍后重复使用。\r\n","\r\n            The SDK's display name, or null if one is not defined. \r\n            ":"\r\n            SDK的显示名称，如果未定义，则为null。\r\n            \r\n","\r\n            The build component factories.\r\n            ":"\r\n            构建组件工厂。\r\n            \r\n","\r\n            Logs a custom event for the current task\r\n            Thread safe.\r\n            ":"\r\n            记录当前任务的自定义事件\r\n            线程安全。\r\n            \r\n","Version being targeted":"版本是针对的\r\n","\r\n            Container used to transport errors from the scheduler (issued while computing a build result)\r\n            to the TaskHost that has the proper logging context (project id, target id, task id, file location)\r\n            ":"\r\n            用于从调度程序传输错误的容器（计算构建结果时发行）\r\n            到具有适当记录上下文（项目ID，目标ID，任务ID，文件位置）的任务主机\r\n            \r\n","\r\n            Returns an enumerator that provides copies of the properties\r\n            in the backing store.\r\n            ":"\r\n            返回提供属性副本的枚举者\r\n            在后备店。\r\n            \r\n","\r\n            Creates empty dictionary, specifying a comparer\r\n            ":"\r\n            创建空词典，指定比较\r\n            \r\n","s only have their name set.\r\n            ":"S只有他们的名字集。\r\n            \r\n","\r\n            The main property table, populated with properties\r\n            that are initially visible in this scope. Does not\r\n            include sets unless it's the table in the outermost scope.\r\n            ":"\r\n            主属性表，填充属性\r\n            最初在此范围中可见。才不是\r\n            除非是最外面范围中的桌子，否则请包括集合。\r\n            \r\n","\r\n            Compare a BuildEventContext with this BuildEventContext. \r\n            A build event context is compared in the following way.\r\n            \r\n            1. If the object references are the same the contexts are equivalent\r\n            2. If the object type is the same and the Id values in the context are the same, the contexts are equivalent\r\n            ":"\r\n            将BuildEventContext与此BuildEventContext进行比较。\r\n            以下方式比较构建事件上下文。\r\n            \r\n            1.如果对象引用是相同的，则上下文是等效的\r\n            2.如果对象类型相同，并且上下文中的ID值相同，则上下文是等效的\r\n            \r\n","\r\n            Value shall be true only in case of testing. Outside QA tests it shall be false.\r\n            ":"\r\n            仅在测试的情况下，价值才是正确的。在质量检查测试之外，这是错误的。\r\n            \r\n","The configuration needing an ID":"需要ID的配置\r\n","\r\n            Initialize an in-memory, empty ProjectRootElement instance that can be saved later.\r\n            Uses the specified project root element cache.\r\n            ":"\r\n            初始化一个内存，空的项目Rootelement实例，以后可以保存。\r\n            使用指定的项目根元素缓存。\r\n            \r\n","\r\n            If set, default to the ToolsVersion from the project file (or if that doesn't isn't set, default to 2.0).  Otherwise, use Dev12+ \r\n            defaulting logic: first check the MSBUILDDEFAULTTOOLSVERSION environment variable, then check for a DefaultOverrideToolsVersion, \r\n            then if both fail, use the current ToolsVersion. \r\n            ":"\r\n            如果设置，则从项目文件中默认为工具库（或者未设置该文件，默认为2.0）。否则，使用dev12+\r\n            默认逻辑：首先检查MSBUILDDEFAULTToolSversion环境变量，然后检查DefaultoverRidetoolSversion，\r\n            然后，如果两者都失败，请使用当前的工具库。\r\n            \r\n","\r\n            Returns any and all loaded projects with the provided path.\r\n            There may be more than one, if they are distinguished by global properties\r\n            and/or tools version.\r\n            ":"\r\n            返回带有提供路径的所有和所有已加载的项目。\r\n            如果通过全球属性区分，可能会有多个\r\n            和/或工具版本。\r\n            \r\n","\r\n            Enable providing access to external [potentially remote] ProjectCollection.\r\n            ":"\r\n            启用提供对外部[潜在远程] projectCollection的访问。\r\n            \r\n","\r\n            Terminates the build request\r\n            ":"\r\n            终止构建请求\r\n            \r\n","\r\n                Gets the effective global properties for an item that will get passed to ":"\r\n                获取将传递给的项目的有效全球属性\r\n","\r\n            Modifies items in this scope with the same set of metadata modifications.\r\n            Assumes all the items in the group have the same, provided, type.\r\n            ":"\r\n            通过相同的一组元数据修改修改此范围中的项目。\r\n            假设组中的所有项目都具有相同的类型。\r\n            \r\n","\r\n            The target with which these results are associated.\r\n            ":"\r\n            这些结果相关的目标。\r\n            \r\n"," is initialized to a non-":" 被初始化为非 - \r\n","\r\n            Given an identifier and version, construct a string to use as a key for that combination. \r\n            ":"\r\n            给定标识符和版本，构造一个字符串以用作该组合的键。\r\n            \r\n","\r\n            Table of conditioned properties and their values.\r\n            Used to populate configuration lists in some project systems.\r\n            If this is null, as it is for command line builds, conditioned properties\r\n            are not recorded.\r\n            ":"\r\n            条件性能及其值表。\r\n            用于在某些项目系统中填充配置列表。\r\n            如果这是空的，则因为它是用于命令行构建的条件属性的\r\n            未记录。\r\n            \r\n","Target object.":"目标对象。\r\n","\r\n            Removes the association between this request and the one we are blocked by.\r\n            ":"\r\n            删除此请求与我们被阻止的请求之间的关联。\r\n            \r\n","The project in the solution":"解决方案中的项目\r\n","\r\n            Initializes this RegistryKeyWrapper to wrap the specified key.\r\n            Does not check for a null key.\r\n            ":"\r\n            初始化此registryKeyWrapper以包装指定的密钥。\r\n            不检查空键。\r\n            \r\n","\r\n            The toolset data used during evaluation, and which should be used for build.\r\n            ":"\r\n            评估过程中使用的工具集数据，应用于构建。\r\n            \r\n","The mode to use when executing the task.":"执行任务时要使用的模式。\r\n","\r\n            Enumeration of an existent directory succeeded.\r\n            ":"\r\n            存在目录的列举成功。\r\n            \r\n","\r\n            This property returns the list of warnings that were generated during solution parsing\r\n            ":"\r\n            该属性返回解决方案解析期间生成的警告列表\r\n            \r\n","\r\n            Verify that the project has not been unloaded from its collection.\r\n            Once it's been unloaded, it cannot be used.\r\n            ":"\r\n            验证该项目尚未从其集合中卸载。\r\n            一旦卸载，就无法使用。\r\n            \r\n","A NodeInfo describing the node created, or null if none could be created.":"描述创建的节点的nodeinfo，或者如果无法创建没有创建的节点。\r\n","\r\n            This request has been submitted but has never been scheduled so it has executed no tasks and does not currently have an\r\n            entry residing on any node.  There may be multiple requests with the same global request id in this state.\r\n            ":"\r\n            该请求已提交，但从未安排\r\n            驻留在任何节点上的条目。在此状态下，可能有多个具有相同全局请求ID的请求。\r\n            \r\n","\r\n            Process is a TaskHost\r\n            ":"\r\n            过程是任务主机\r\n            \r\n","\r\n            Changes the engine's status and raises the OnStatsChanged event.\r\n            ":"\r\n            更改引擎的状态，并提高施加汇总事件。\r\n            \r\n","\r\n            Wrapper for the COM Running Object Table.\r\n            ":"\r\n            com运行对象表的包装器。\r\n            \r\n"," of the currently executing task, if any.\r\n            Used to correlate a project's build with the parent task that spawned it\r\n            (usually the MSBuild task).\r\n            ":" 当前执行任务（如果有）\r\n            用于将项目的构建与产生该项目的父任务相关联\r\n            （通常是MSBUILD任务）。\r\n            \r\n","\r\n            We have to remove and re-add so that there's an error if there's already an equivalent\r\n            project loaded.\r\n            ":"我们必须删除并重新添加，以便如果已经存在等效的话，存在错误\r\n            项目加载。\r\n            \r\n","The message of the uninitialized property that was read.":"已阅读的非初始化属性的信息。\r\n","True if they contain the same data, false otherwise":"如果包含相同的数据，则为thue，否则为否\r\n","\r\n            contextStack is the only interesting state in the console\r\n            logger.  The context stack contains a sequence of frames\r\n            denoting current and previous containing projects and targets\r\n            ":"\r\n            ContextStack是控制台中唯一有趣的状态\r\n            记录器。上下文堆栈包含一系列帧\r\n            表示当前和以前包含的项目和目标\r\n            \r\n","The collection to be translated.":"要翻译的集合。\r\n","\r\n            Access metadata in convenient way\r\n            ":"\r\n            方便的方式访问元数据\r\n            \r\n","\r\n            Allocates shared CPU resources. Called by a task when it's about to do potentially multi-threaded/multi-process work.\r\n            ":"\r\n            分配共享的CPU资源。当任务即将完成潜在的多线程/多进程工作时。\r\n            \r\n","\r\n            Whether the node can be evaluated as a numeric: by default,\r\n            this is not allowed\r\n            ":"\r\n            是否可以将节点评估为数字：默认情况下，\r\n            这是不允许的\r\n            \r\n","The task's project file.":"任务的项目文件。\r\n","\r\n            Retrieves the global project collection object.\r\n            This is a singleton project collection with no global properties or loggers that reads toolset \r\n            information from the configuration file and registry.\r\n            May throw InvalidToolsetDefinitionException.\r\n            Thread safe.\r\n            ":"\r\n            检索全球项目收集对象。\r\n            这是一个单人项目集合，没有读取工具集的全局属性或登录器\r\n            来自配置文件和注册表的信息。\r\n            可能会抛出无效的DoolsetDefinitionException。\r\n            线程安全。\r\n            \r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n            Creates a target at the end of the project.\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n            在项目末尾创建目标。\r\n            \r\n","\r\n            Create evaluated include cache snapshot\r\n            ":"\r\n            创建评估包括缓存快照\r\n            \r\n","\r\n            When a target build fails, we don't just stop building that target; we also pop all of the other dependency targets of its \r\n            parent target off the stack. Extract that logic into a standalone method so that it can be used when dealing with targets that \r\n            are skipped-unsuccessful as well as first-time failures. \r\n            ":"\r\n            当目标构建失败时，我们不仅停止构建该目标。我们还弹出了它的所有其他依赖性目标\r\n            父级目标堆叠。将该逻辑提取到独立方法中，以便在处理目标时可以使用它\r\n            被跳过不成功的以及首次失败。\r\n            \r\n","\r\n            The platform the SDK targets.\r\n            ":"\r\n            平台SDK目标。\r\n            \r\n","\r\n            Unregisters for all events on the specified event source.\r\n            ":"\r\n            在指定事件源上的所有事件进行注册。\r\n            \r\n","\r\n            Creates a Schedule or ScheduleWithConfiguration response\r\n            ":"\r\n            创建时间表或ScheduleWithConfiguration响应\r\n            \r\n","BuildEventContext of the project who is requesting \"projectFile\" to build":"该项目的BuildEventContext要求“ ProjectFile”构建\r\n","\r\n            Holds all of the unscheduled requests.\r\n            ":"\r\n            持有所有计划中的所有请求。\r\n            \r\n","\r\n            Gets or sets the actual MSBuild property name used to read/write the value of this property.\r\n            Applicable only to ":"\r\n            获取或设置用于读取/编写此属性值的实际MSBUILD属性名称。\r\n            仅适用于\r\n","The lookup":"查找\r\n","\r\n            Constructs a BuildEventContext with a specific submission id\r\n            ":"\r\n            使用特定提交ID构建buildEventContext\r\n            \r\n","\r\n            Event raised after this project is renamed\r\n            ":"\r\n            此项目重命名后提出的活动\r\n            \r\n","File information which indicates which file the error is happening in":"文件信息，指示该错误发生在哪个文件中\r\n","\r\n            The number of out-of-proc nodes that can be created without hitting the\r\n            node limit.\r\n            ":"\r\n            可以创建的无关的范围内节点的数量，而无需击中\r\n            节点限制。\r\n            \r\n","\r\n            Events are processed synchronously\r\n            ":"\r\n            事件同步处理\r\n            \r\n","The information required to start the process.":"启动该过程所需的信息。\r\n","\r\n            Given a member of the DotNetFrameworkArchitecture enumeration, returns the equivalent ProcessorArchitecture string.\r\n            Internal for Testing Purposes Only\r\n            ":"\r\n            给定dotnetframeworkharchitecture枚举的成员，返回等效的处理划分字符串。\r\n            内部仅用于测试目的\r\n            \r\n"," is used for stand-alone evaluations where there is no build context available so caching\r\n             is not an option.\r\n            \r\n             Since this object is a registered ":" 用于独立评估，没有可用的构建上下文如此缓存\r\n             不是一个选择。\r\n            \r\n             由于此对象是注册\r\n","\r\n            Record a duplicate import, possible a duplicate import opened during evaluation.\r\n            ":"\r\n            记录重复的导入，可能在评估期间打开的重复导入。\r\n            \r\n","\r\n            The endpoint on a Node\r\n            ":"\r\n            节点上的端点\r\n            \r\n"," The list returned by this property should not be modified. ":" 该属性返回的列表不应修改。\r\n","\r\n            Gets the task name to pass to Tracker.\r\n            ":"\r\n            将任务名称传递给跟踪器。\r\n            \r\n","There are different scenarios best for ":"最适合不同的情况\r\n","\r\n            Sets a property derived from Xml.\r\n            ":"设置从XML派生的属性。\r\n            \r\n","\r\n            What the user gets when they clone off a ProjectInstance.\r\n            They can hold onto this, change/query items and properties,\r\n            and call it several times to build it.\r\n            ":"\r\n            用户克隆projectInstance时会得到什么。\r\n            他们可以坚持这个，更改/查询项目和属性，\r\n            并称其为几次来构建它。\r\n            \r\n","\r\n            Get an enumerator over any child tasks\r\n            ":"\r\n            在任何儿童任务上获取枚举者\r\n            \r\n","\r\n            The build request entry being built.\r\n            ":"\r\n            构建构建请求输入正在构建。\r\n            \r\n","Collection of logger descriptions which we would like to use to create a set of forwarding loggers on a node":"我们想使用的记录器描述集合在节点上创建一组转发记录器\r\n","\r\n            Constructor taking the first element\r\n            ":"\r\n            构造函数采用第一个元素\r\n            \r\n","\r\n            Locates the string in the page file.\r\n            ":"\r\n            在页面文件中找到字符串。\r\n            \r\n","\r\n            Retrieve the outputs from the task.\r\n            ":"\r\n            从任务中检索输出。\r\n            \r\n","\r\n            The next build id;\r\n            ":"\r\n            下一个构建ID；\r\n            \r\n","\r\n            Child items\r\n            ":"\r\n            子项目\r\n            \r\n","\r\n            Represents an admissible value of an ":"\r\n            代表一个可接受的价值\r\n","\r\n            Returns the build event context for this request, if any.\r\n            ":"\r\n            返回此请求的构建事件上下文（如果有）。\r\n            \r\n","\r\n            Simple name for the MSBuild tasks (v4), used for shimming in loading \r\n            task factory UsingTasks\r\n            ":"\r\n            MSBUILD任务的简单名称（V4），用于加载\r\n            任务工厂使用任务\r\n            \r\n","\r\n            Add a property with the specified name and value.\r\n            Overwrites any property with the same name already in the collection.\r\n            ":"\r\n            添加带有指定名称和值的属性。\r\n            覆盖集合中已经具有相同名称的任何属性。\r\n            \r\n","\r\n            Returns the paths to the reference assemblies location for the given target framework.\r\n            This method will assume the requested ReferenceAssemblyRoot path will be the ProgramFiles directory specified by Environment.SpecialFolder.ProgramFiles\r\n            In additon when the .NETFramework or .NET Framework targetFrameworkIdentifiers are seen and targetFrameworkVersion is 2.0, 3.0, 3.5 or 4.0 we will return the correctly chained reference assembly paths\r\n            for the legacy .net frameworks. This chaining will use the existing GetPathToDotNetFrameworkReferenceAssemblies to build up the list of reference assembly paths.\r\n            ":"\r\n            将路径返回给定目标框架的参考组件位置。\r\n            此方法将假设请求的ReferenCeasSemblyRoot路径将是Environment.specialfolder.programfiles指定的programFiles目录。\r\n            当看到.netFramework或.NET Framework targetFrameWorksidentifiers时，ADDITON中的目标FrameWorkversion为2.0、3.0、3.5或4.0，我们将返回正确链式的参考组件路径\r\n            对于遗产.NET框架。该链接将使用现有的GetPathTodotnetFrameWorkReferenCeaseSemblies来构建参考汇编路径列表。\r\n            \r\n","\r\n            Expand the body of the property, including any functions that it may contain\r\n            ":"\r\n            扩展财产的主体，包括可能包含的任何功能\r\n            \r\n","\r\n            Requests that a node be created on the specified machine.\r\n            ":"\r\n            请求在指定的计算机上创建节点。\r\n            \r\n","\r\n            Gets a count of all executing requests.\r\n            ":"\r\n            获取所有执行请求的计数。\r\n            \r\n","\r\n             Logs a warning using the specified resource string and other warning details.\r\n             If the message has a warning code, the code is extracted and logged with the message.\r\n             If a help keyword prefix has been provided, a help keyword for the host IDE is also logged with the message. The help\r\n             keyword is composed by appending the warning message resource string name to the prefix.\r\n            \r\n             A task can provide a help keyword prefix either via the Task (or TaskMarshalByRef) base class constructor, or the\r\n             Task.HelpKeywordPrefix (or AppDomainIsolatedTask.HelpKeywordPrefix) property.\r\n            \r\n             Thread safe.\r\n             ":"\r\n             使用指定的资源字符串和其他警告详细信息记录警告。\r\n             如果消息具有警告代码，则将提取并记录该消息。\r\n             如果提供了一个帮助关键字前缀，则该消息还记录了主机IDE的帮助关键字。帮助\r\n             关键字是通过将警告消息资源字符串名称附加到前缀中来组成的。\r\n            \r\n             任务可以通过任务（或taskmarshalbyref）基类构造函数或\r\n             task.helpkeywordprefix（或app domainisolatedTask.helpkeywordprefix）属性。\r\n            \r\n             线程安全。\r\n             \r\n","\r\n            Task Name\r\n            ":"\r\n            任务名称\r\n            \r\n","\r\n            Adds the target which validates that the tools version is supported.\r\n            ":"\r\n            添加了验证工具版本的目标。\r\n            \r\n","\r\n            A class representing a property.  Used internally by the toolset readers.\r\n            ":"\r\n            代表属性的类。由工具集读取器内部使用。\r\n            \r\n","\r\n            Project names that need to be disambiguated when forming a target name\r\n            ":"\r\n            形成目标名称时需要歧义的项目名称\r\n            \r\n","\r\n            The externally specified sub-toolset version that, combined with the ToolsVersion, is used to determine\r\n            the toolset properties for this project.  \r\n            ":"\r\n            外部指定的子模式版本与工具交换相结合来确定\r\n            该项目的工具集属性。\r\n            \r\n","\r\n            Called on the local side.\r\n            ":"\r\n            在本地派遣。\r\n            \r\n","The list of global properties to undefine":"不确定的全球属性列表\r\n","\r\n            Filename for the MSBuild tasks (v12), used for shimming in loading \r\n            task factory UsingTasks\r\n            ":"\r\n            MSBUILD任务的文件名（V12），用于加载\r\n            任务工厂使用任务\r\n            \r\n","\r\n            Contains all of the items which have been added at this level in the Lookup\r\n            ":"\r\n            包含在查找中添加在此级别的所有项目\r\n            \r\n","\r\n            Evaluated include, escaped as necessary.\r\n            ":"\r\n            评估包括，必要时逃脱。\r\n            \r\n","\r\n            Assumes that the itemType string originated in a ProjectItemDefinitionElement and therefore\r\n            was already validated.\r\n            ":"\r\n            假设itemType字符串起源于ProjectItemDefinitionElement，因此\r\n            已经得到验证。\r\n            \r\n","\r\n            Paths to imports already seen and where they were imported from; used to flag duplicate imports\r\n            ":"\r\n            通往已经看到的进口途径及其从何处进口；用于标记重复导入\r\n            \r\n","\r\n            Evaluate as numeric\r\n            ":"\r\n            评估为数字\r\n            \r\n","\r\n            Read information only once per file per ResolveAssemblyReference invocation.\r\n            ":"\r\n            每个文件仅读取每个文件一次信息一次，每个文件调用调用。\r\n            \r\n","\r\n            Make sure a node in the requested context exists.  \r\n            ":"\r\n            确保存在请求上下文中的节点。\r\n            \r\n","\r\n            ITaskItem implementation which removed the named piece of metadata.\r\n            If the metadata is not present, does nothing.\r\n            ":"\r\n            iTaskItem实现了删除了指定的元数据。\r\n            如果不存在元数据，什么也不做。\r\n            \r\n"," if the task failed to be created.\r\n            ":" 如果未能创建任务。\r\n            \r\n","\r\n            Unregisters a previously-registered task object.\r\n            ":"\r\n            解开以前注册的任务对象。\r\n            \r\n","\r\n                Path to the solution file being built, if known. May be null.\r\n            ":"\r\n                如果已知的话，要构建解决方案文件的路径。可能是无效的。\r\n            \r\n","\r\n            Reads/writes this class\r\n            ":"\r\n            阅读/写这堂课\r\n            \r\n","True if the configuration is being built somewhere, false otherwise.":"如果是在某个地方构建配置，则为false，否则为否则。\r\n","\r\n            Building with BelowNormal priority\r\n            ":"\r\n            优先建造\r\n            \r\n","\r\n            Location of the remove, if any\r\n            ":"\r\n            删除的位置，如果有的话\r\n            \r\n","The task resources.":"任务资源。\r\n","\r\n            When project instances get serialized between nodes, they need to be initialized with node specific information.\r\n            The node specific information cannot come from the constructor, because that information is not available to INodePacketTranslators\r\n            ":"\r\n            当项目实例在节点之间序列化时，需要使用节点特定信息初始化它们。\r\n            节点特定的信息不能来自构造函数，因为该信息无法用于InoDepacketTranslators\r\n            \r\n","\r\n            Returns the integer (floor) log of the specified value, base 2.\r\n            Note that by convention, input value 0 returns 0 since Log(0) is undefined.\r\n            Does not directly use any hardware intrinsics, nor does it incur branching.\r\n            ":"\r\n            返回指定值的整数（地板）日志，基数2。\r\n            请注意，由于log（0）未定义，因此输入值0返回0。\r\n            不会直接使用任何硬件固有，也不会产生分支。\r\n            \r\n","\r\n            Gets the target to perform dependency analysis on.\r\n            ":"\r\n            获取目标进行依赖分析。\r\n            \r\n","\r\n            Raised when a new build request is to be issued.\r\n            ":"\r\n            发出新的构建请求时提出。\r\n            \r\n","\r\n            Extension sdks within this platform, \r\n            ":"\r\n            该平台内的扩展SDK，\r\n            \r\n","\r\n            The global node manager\r\n            ":"\r\n            全局节点管理器\r\n            \r\n","SDK referenced by the Project.":"该项目引用的SDK。\r\n","\r\n            Flag indicating if the configuration is cached or not.\r\n            ":"\r\n            标志指示配置是否已缓存。\r\n            \r\n","\r\n            The current mutable collection this builder is operating on. This field is initialized to a copy of\r\n            ":"\r\n            该建筑商正在运行的当前可变收藏。该字段初始化为\r\n            \r\n","\r\n            This class represents the event arguments for build finished events.\r\n            ":"\r\n            此类代表构建完成事件的事件参数。\r\n            \r\n","\r\n            Condition on the output element\r\n            ":"\r\n            输出元素的条件\r\n            \r\n","\r\n            Gets or sets the unevaluated metadata value.\r\n            \r\n            As well as updating the unevaluated value, the setter updates the evaluated value, but does not affect anything else in the project until reevaluation. For example,\r\n                --if a piece of metadata named \"m\" is modified on item of type \"i\", it does not affect \"j\" which is evaluated from \"@(j->'%(m)')\" until reevaluation.\r\n                --if the unevaluated value of \"m\" is set to something that is modified by evaluation, such as \"$(p)\", the evaluated value will be set to \"$(p)\" until reevaluation.\r\n            This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state.\r\n            \r\n            Setting metadata through a ProjectItem may cause the underlying ProjectItemElement to be split, if it originated with an itemlist, wildcard, or semicolon expression,\r\n            because it was clear that the caller intended to only affect that particular item.\r\n            Setting metadata through a ProjectMetadata does not cause any splitting, because we assume the caller presumably intends to affect all items using the underlying\r\n            ProjectMetadataElement. At least, this seems a reasonable assumption, and it avoids the need for metadata to hold a pointer to their containing items.\r\n            ":"\r\n            获取或设置未评估的元数据值。\r\n            \r\n            除了更新未评估的值之外，Setter还更新了评估的值，但在重新评估之前不会影响项目中的其他任何内容。例如，\r\n                 - 如果在类型“ I”的项目上修改了一个名为“ M”的元数据，则不会影响“ J”，该元素从“@（j->'％（m）'）”中进行评估，直到重新评估为止。\r\n                 - 如果“ m”的未评估值设置为通过评估修改的东西，例如“ $（p）”，则评估值将设置为“ $（p）”，直到重新评估。\r\n            这是一种方便，可以理解，不一定会将项目处于完全一致的状态。\r\n            \r\n            通过projectItem设置元数据可能会导致基础projectitemelement拆分，如果它起源于项目列表，通配符或半元素表达式，\r\n            因为很明显，呼叫者打算仅影响该特定项目。\r\n            通过ProjectMetadata设置元数据不会引起任何分裂，因为我们假设呼叫者可能会使用基础来影响所有项目\r\n            ProjectMetadataelement。至少，这似乎是一个合理的假设，并且避免了元数据需要将其指向其包含物品的指针。\r\n            \r\n","\r\n            Gets the invalid line number (if any) in the project.\r\n            ":"\r\n            获取项目中无效的线号（如果有）。\r\n            \r\n","\r\n            The function arguments, if any, within this expression\r\n            ":"\r\n            该表达式中的函数论证（如果有）（如果有）\r\n            \r\n","\r\n            A temporary buffer we use when hashing a NameValueList record. Stores the indices of hashed strings\r\n            instead of the actual names and values.\r\n            ":"\r\n            我们在HAS NAMEVALUELIST记录时使用的临时缓冲区。存储哈希字符串的索引\r\n            而不是实际名称和值。\r\n            \r\n","\r\n            Gets the invalid column number (if any) in the project.\r\n            ":"\r\n            获取项目中无效的列号（如果有）。\r\n            \r\n","\r\n            Creates an instance-model item.\r\n            ":"\r\n            创建一个实例模型项目。\r\n            \r\n","True if the requests were satisfied, false if they were aborted.":"如果要求满足请求，则是真的，如果这些请求被中断，它们是错误的。\r\n","\r\n            Gets or sets the user-specified parameters to the logger. Derived class can ignore if it doesn't take parameters.\r\n            ":"\r\n            获取或将用户指定的参数设置为记录器。派生类可以忽略，如果不使用参数。\r\n            \r\n","The build request entry for the target.":"目标的构建请求输入。\r\n","\r\n            Retrieves a dictionary representing the global properties which should be transferred to a metaproject.\r\n            ":"\r\n            检索代表应传输到元标记的全局属性的字典。\r\n            \r\n","\r\n            Builds multiple project files in parallel. \r\n            Thread safe.\r\n            ":"\r\n            并联构建多个项目文件。\r\n            线程安全。\r\n            \r\n","\r\n            This allows an explicit typecast from a \"TaskItem\" to a \"string\", returning the ItemSpec for this item.\r\n            ":"\r\n            这允许从“ taskitem”到“字符串”的明确打字，并返回该项目的itemSpec。\r\n            \r\n","Did the target pass or fail":"目标通过还是失败了\r\n","\r\n            Returns the type of nodes managed by this provider.\r\n            ":"\r\n            返回该提供商管理的节点的类型。\r\n            \r\n","Collection was modified; enumeration operation may not execute.":"收集被修改；枚举操作可能不会执行。\r\n","Custom metadata on the item.":"物品上的自定义元数据。\r\n","\r\n            Boost the appdomain-unique version counter for this object.\r\n            This is done when it is modified, and also when it is loaded.\r\n            ":"\r\n            为此对象增强AppDomain唯一版本计数器。\r\n            这是在修改时以及加载时完成的。\r\n            \r\n","\r\n            Creates an unparented ProjectMetadataElement, wrapping an unparented XmlElement.\r\n            Caller should then ensure the element is added to a parent.\r\n            ":"\r\n            创建一个无与伦比的ProjectMetadataelement，包装了无与伦比的XMlelement。\r\n            然后，呼叫者应确保将元素添加到父。\r\n            \r\n","\r\n            The full path to this project's file.\r\n            May be null, if the project was not loaded from disk.\r\n            Setter renames the project, if it already had a name.\r\n            ":"\r\n            该项目文件的完整路径。\r\n            如果项目未从磁盘加载，则可能是零的。\r\n            设置者将项目重命名，如果已经有名。\r\n            \r\n","help keyword.":"帮助关键字。\r\n","\r\n            Remove the output graph entries for the given rooting marker\r\n            ":"\r\n            删除给定生根标记的输出图条目\r\n            \r\n","\r\n            Returns a string with those switches and other information that can go into a response file.\r\n            Called after ValidateParameters and SkipTaskExecution\r\n            ":"\r\n            返回一个带有这些开关和其他信息可以进入响应文件的字符串。\r\n            在验证参数和skiptaskexecution之后打电话\r\n            \r\n","\r\n            The set of functions that called during an item transformation, e.g. @(CLCompile->ContainsMetadata('MetaName', 'metaValue'))\r\n            ":"\r\n            在项目转换期间调用的一组函数，例如@（clcompile-> containsmetadata（'metaname'，'metavalue'））\r\n            \r\n","\r\n            Calculates the maximum number of elements of size ":"\r\n            计算大小的最大元素数量\r\n","\r\n            Create a whitespace node.\r\n            Overridden to cache attribute values.\r\n            ":"\r\n            创建一个空格节点。\r\n            覆盖为缓存属性值。\r\n            \r\n","\r\n            Gets the details of the build event (if any) that was being logged.\r\n            ":"\r\n            获取正在记录的构建事件（如果有）的详细信息。\r\n            \r\n","n0":"N0\r\n","\r\n            The fact that this is a string[] makes the following illegal:\r\n                ":"\r\n            这是字符串[]的事实使以下非法：\r\n                \r\n","\r\n            Number of times interning didn't work.\r\n            ":"\r\n            实习的次数无效。\r\n            \r\n","\r\n             The logging service is in the process of starting to shutdown.\r\n            ":"\r\n             伐木服务正在开始关闭。\r\n            \r\n","\r\n            Suppresses the display of project headers. Project headers are\r\n            displayed by default unless this property is set.\r\n            ":"\r\n            抑制项目标头的显示。项目标头是\r\n            默认情况下显示，除非设置此属性。\r\n            \r\n","\r\n            Raised for BuildStartedEventArgs instances\r\n            ":"\r\n            为buildstartedeventargs实例筹集\r\n            \r\n","\r\n            Get any contained parameters.\r\n            ":"\r\n            获取任何包含的参数。\r\n            \r\n","\r\n            ProjectRootElement (possibly imported) that contains this Xml.\r\n            Cannot be null.\r\n            ":"\r\n            包含此XML的ProjectRootelement（可能导入）。\r\n            不能无效。\r\n            \r\n","Type of the properties used":"所使用的属性类型\r\n","\r\n            Compares for left <= right\r\n            ":"\r\n            比较左<=右\r\n            \r\n","\r\n            Item used as the source of metadata.\r\n            ":"\r\n            物品用作元数据的来源。\r\n            \r\n","\r\n            Item used as the source of metadata\r\n            ":"\r\n            物品用作元数据的来源\r\n            \r\n","\r\n            Build our ancestor list then throw the circular dependency error.\r\n            ":"\r\n            构建我们的祖先列表，然后丢弃循环依赖性错误。\r\n            \r\n","\r\n            Clones this object, to create another one with its own list, but the same contents.\r\n            Then the clone can enter scope and have its own fresh primary list without affecting the other object.\r\n            ":"\r\n            克隆此对象，以创建一个具有自己列表的对象，但内容相同。\r\n            然后，克隆可以进入范围并具有自己的新主要列表，而不会影响另一个对象。\r\n            \r\n","\r\n            This method invokes the tool with the given parameters.\r\n            ":"\r\n            此方法使用给定参数调用工具。\r\n            \r\n","\r\n            Expands property expressions, like $(Configuration) and $(Registry:HKEY_LOCAL_MACHINE\\Software\\Vendor\\Tools@TaskLocation).\r\n            ":"\r\n            展开属性表达式，如$(Configuration)和$(Registry:HKEY_LOCAL_MACHINE\\Software\\Vendor\\Tools@TaskLocation)。\r\n            \r\n","\r\n            Location of the include attribute, if any.\r\n            ":"\r\n            包括属性的位置（如果有）。\r\n            \r\n","\r\n            Backing XML property.\r\n            Null because this is a global, environment, or built-in property.\r\n            ":"\r\n            支持XML属性。\r\n            无效，因为这是全球，环境或内置属性。\r\n            \r\n","PERF WARNING: this Regex is complex and tends to run slowly.":"完美警告：此正则是复杂的，并且往往会缓慢运行。\r\n","\r\n            Represents an exception that occurs when an SdkResolver throws an unhandled exception.\r\n            ":"\r\n            代表当SDKResolver抛出未手持异常时发生的例外。\r\n            \r\n","\r\n            True if a SearchData.DirectoryPattern is specified but we have not descended into a matching directory.\r\n            ":"\r\n            没错，如果指定了searchData.DirectoryPattern，但我们尚未进入匹配目录。\r\n            \r\n","\r\n            The FrameworkIdentity for the sdk, this may be a single name or a | delimited name\r\n            ":"\r\n            SDK的Frameworkidentity，这可能是一个名称或|划界名称\r\n            \r\n","\r\n            -1  if the first file/directory is older than the second;\r\n             0  if the files/directories were both last written to at the same time;\r\n            +1  if the first file/directory is newer than the second\r\n            ":"\r\n            -1如果第一个文件/目录比第二个文件大；\r\n             0如果文件/目录都是最后一次写的；\r\n            +1如果第一个文件/目录比第二个文件更新\r\n            \r\n","\r\n            no options\r\n            ":"\r\n            没有选项\r\n            \r\n","\r\n            Gets a count of all the unscheduled requests.\r\n            ":"\r\n            获取所有计划外请求的计数。\r\n            \r\n","\r\n            serializes IItemType.UpToDateCheckInput\r\n            ":"\r\n            序列化iitemtype.uptodatecheckinput\r\n            \r\n","\r\n            Creates (but does not throw) an exception for this result. The result must not be successful.\r\n            ":"\r\n            为此结果创建（但不会抛出）例外。结果一定不能成功。\r\n            \r\n","\r\n            Represents a collection of keys and values.\r\n            ":"\r\n            代表键和值的集合。\r\n            \r\n","\r\n            Evaluate the properties in the propertygroup and set the applicable ones on the data passed in\r\n            ":"\r\n            评估属性组中的属性，并将适用的属性设置为传递的数据\r\n            \r\n","\r\n            The mapping of submission IDs to the submission record.\r\n            ":"\r\n            提交ID映射到提交记录。\r\n            \r\n","\r\n            Force whether Project based evaluations should evaluate elements with false conditions.\r\n            ":"\r\n            强制基于项目的评估应评估虚假条件的元素。\r\n            \r\n","\r\n            Number of characters.\r\n            ":"\r\n            字符数。\r\n            \r\n","\r\n            Signals that no more build requests are expected (or allowed) and the BuildManager may clean up.\r\n            ":"\r\n            信号表明（或允许）不再需要构建请求，并且建筑商可以清理。\r\n            \r\n","\r\n            Gets the escaped value of the metadatum with the provided name on the provided item definition. \r\n            ":"\r\n            获取元数据的逃逸值，并在提供的项目定义上使用提供的名称。\r\n            \r\n","The request has already been started or is already complete.":"该请求已经启动或已经完成。\r\n","\r\n            Shuts down a specific singleton component.\r\n            ":"\r\n            关闭特定的单例组件。\r\n            \r\n","\r\n            Maps global request Id to a ready request.\r\n            ":"\r\n            将全局请求ID映射到现成的请求。\r\n            \r\n","\r\n            Gathers the set of platform winmds based on the assumption that they come from \r\n            an SDK that is specified solely by TPI / TPV.\r\n            ":"\r\n            基于假设它们来自\r\n            仅由TPI / TPV指定的SDK。\r\n            \r\n","\r\n            Figure out what ToolsVersion to use to actually build the project with.\r\n            ":"\r\n            找出实际构建项目的工具交换。\r\n            \r\n","\r\n            Determines equivalence with another object of the same type.\r\n            ":"\r\n            确定与同一类型的另一个对象的等效性。\r\n            \r\n","The parameter string (can be null).":"参数字符串（可以为null）。\r\n","\r\n            Initializes DebuggerManager.\r\n            Initialize definitions of locals types.\r\n            This must not be called by a static constructor, as the \r\n            time at which it is called will then be undefined, and\r\n            the debugging environment variable might not have had a \r\n            chance to be set.\r\n            ":"\r\n            初始化debuggermanager。\r\n            初始化当地人类型的定义。\r\n            静态构造函数不得将其称为\r\n            然后将其称为的时间将不确定，并且\r\n            调试环境变量可能没有\r\n            有机会设置。\r\n            \r\n","\r\n            This is the read/write accessor for the solution file which we will parse.  This\r\n            must be set before calling any other methods on this class.\r\n            ":"\r\n            这是解决方案文件的读/写入者，我们将解析。这个\r\n            必须在调用此类的任何其他方法之前设置。\r\n            \r\n","\r\n            Get the list of SDK folders which contains the references for the sdk at the sdkRoot provided\r\n            in the order in which they should be searched for references.\r\n            ":"\r\n            获取SDK文件夹的列表，其中包含提供的SDKRoot的SDK引用\r\n            按照他们应搜索参考的顺序。\r\n            \r\n","\r\n            Overridden to give tasks deriving from this class infinite lease time. Otherwise we end up with a limited\r\n            lease (5 minutes I think) and task instances can expire if they take long time processing.\r\n            ":"\r\n            重写以给从此类派生的任务无限租用时间。 否则我们最终会得到一个有限的\r\n            租约（我认为5分钟）和任务实例可能会过期，如果它们需要长时间处理。\r\n            \r\n","\r\n            The instance to be used when the new request builder is started on the main thread.\r\n            ":"\r\n            在主线程上启动新请求构建器时要使用的实例。\r\n            \r\n"," when Cancellation was requested\r\n             * in ProjectCache.CacheResult.ConstructBuildResult\r\n            ":" 何时请求取消\r\n             *在ProjectCache.cacheresult.ConstructBuildResult中\r\n            \r\n","\r\n            Escape the string according to MSBuild's escaping rules\r\n            ":"\r\n            根据MSBuild的逃避规则逃脱字符串\r\n            \r\n","\r\n            Local cache of strings for attribute values and comments. Used for testing.\r\n            ":"\r\n            属性值和注释的字符串本地缓存。用于测试。\r\n            \r\n","\r\n            Item 1 is the name of the process being searched for.\r\n            Item 2 is the list of processes themselves.\r\n            ":"\r\n            项目1是要搜索的过程的名称。\r\n            项目2是过程本身的列表。\r\n            \r\n","\r\n            Location of the keepDuplicates attribute\r\n            ":"\r\n            保留属性的位置\r\n            \r\n","\r\n            Represents an entry in the lookup list.\r\n            Class rather than a struct so that it can be modified in the list.\r\n            ":"\r\n            表示查找列表中的条目。\r\n            类而不是结构，以便可以在列表中修改。\r\n            \r\n","\r\n            declares its category to be something that is not present in this list, then we auto-generate a ":"\r\n            将其类别声明为此列表中不存在的类别，然后我们自动生成a\r\n","\r\n            Thread id\r\n            ":"\r\n            线程ID\r\n            \r\n","\r\n            The root directory for this project.\r\n            ":"\r\n            该项目的根目录。\r\n            \r\n","\r\n            Provide the list of remote projects (projects in the remote collection)\r\n            Note all returned objects will be local \"linked\" Project object proxies.\r\n            ":"\r\n            提供远程项目列表（远程集合中的项目）\r\n            注意所有返回的对象将是本地的“链接”项目对象代理。\r\n            \r\n","\r\n            Keeps track of the set of nodes for which we have not yet received shutdown notification.\r\n            ":"\r\n            跟踪我们尚未收到关闭通知的一组节点。\r\n            \r\n","Unable to sort because the IComparer.Compare() method returns inconsistent results. Either a value does not compare equal to itself, or one value repeatedly compared to another value yields different results. IComparer: '{0}'.":"由于icomparer.compare（）方法返回结果不一致，因此无法排序。值要么不等于自身，要么与另一个值相比，一个值与另一个值相比会产生不同的结果。 icomparer：'{0}'。\r\n","\r\n            MinVSVersion found in the sdk manifest\r\n            ":"\r\n            SDK清单中发现的MinvSversion\r\n            \r\n","\r\n            Adds metadata to the modification table.\r\n            ":"\r\n            将元数据添加到修改表中。\r\n            \r\n","\r\n            DefaultOverrideToolsVersion attribute on msbuildToolsets element, specifying the toolsversion that should be used by \r\n            default to build projects with this version of MSBuild.\r\n            ":"\r\n            MSBUILDToolSets元素上的DefaultoverRidetoolSversion属性，指定应通过\r\n            默认可以使用此版本的MSBuild构建项目。\r\n            \r\n","\r\n            1) it is acceptable to pass null for both ":"1）可以接受两者的null\r\n","The full file path of the binary log file":"二进制日志文件的完整文件路径\r\n","\r\n            Constructor called by Evaluator.\r\n            All parameters are in the unevaluated state.\r\n            ":"\r\n            评估器调用的构造函数。\r\n            所有参数均处于未评估状态。\r\n            \r\n","\r\n            This method contains knowledge about several logger classes used by MSBuild. The goal is to optimize common scenarios,\r\n            such as building on the command line with normal or minimum verbosity. If the user registers an external custom logger,\r\n            we will fall back to \"minimum importance\" == Low because we don't know how the logger processes messages, therefore we\r\n            must feed it everything.\r\n            ":"\r\n            此方法包含有关MSBuild使用的几个记录器类的知识。目标是优化常见场景，\r\n            例如在命令线上构建正常或最小的详细性。如果用户注册外部自定义记录器，\r\n            我们将回到“最小重要性” ==低，因为我们不知道记录器如何处理消息，因此我们\r\n            必须喂饱一切。\r\n            \r\n","Argument to be expanded":"要扩展的论点\r\n","\r\n                Get path on disk to the referenced SDK.\r\n            ":"\r\n                获取磁盘上引用的SDK的路径。\r\n            \r\n","\r\n            Event handler for the BuildEngine's OnNewRequest event.\r\n            ":"\r\n            BuildEngine的OnnewRequest活动的活动处理程序。\r\n            \r\n","\r\n            The response indicates that the request should be send to the specified node, \r\n            along with the configuration for the request.\r\n            ":"\r\n            响应表明该请求应发送到指定的节点，\r\n            以及请求的配置。\r\n            \r\n","The include":"包括\r\n","\r\n                Creates a new task instance directly.  Used for generating instances on-the-fly.\r\n            ":"\r\n                直接创建一个新的任务实例。用于即时生成实例。\r\n            \r\n","\r\n             \r\n             Below are some quoting experiments, using the /D switch with the CL and RC preprocessor.\r\n             The /D switch is a little more tricky than most switches, because it has a name=value pair.\r\n             The table below contains what the preprocessor actually embeds when passed the switch in the\r\n             first column:\r\n             \r\n                                  CL via cmd line         CL via response file       RC\r\n                 /DFOO=\"A\"                A                   A   \r\n                 /D\"FOO=\"A\"\"              A                   A                       A\r\n                 /DFOO=A                  A                   A   \r\n                 /D\"FOO=A\"                A                   A   \r\n                 /DFOO=\"\"A\"\"              A                   A                       A\r\n                     \r\n                 /DFOO=\\\"A\\\"             \"A\"                                         \"A\"\r\n                 /DFOO=\"\"\"A\"\"\"           \"A\"                broken                   \"A\"\r\n                 /D\"FOO=\\\"A\\\"\"           \"A\"                                         \"A\"\r\n                 /D\"FOO=\"\"A\"\"\"           \"A\"                                         \"A\"\r\n                     \r\n                 /DFOO=\"A B\"             A B                 A B \r\n                 /D\"FOO=A B\"             A B                 A B \r\n                     \r\n                 /D\"FOO=\"A B\"\"          broken      \r\n                 /DFOO=\\\"A B\\\"          broken      \r\n                 /D\"FOO=\\\"A B\\\"\"        \"A B\"               \"A B\"                   \"A B\"\r\n                 /D\"FOO=\"\"A B\"\"\"        \"A B\"               broken                  broken\r\n            \r\n             From my experiments (with CL and RC only) it seems that \r\n                -- Literal double quotes are most reliably written in the form \\\" not \"\"\r\n                -- Backslashes falling just before doublequotes must be doubled.\r\n                -- Values containing literal double quotes must be quoted.\r\n                -- Literal double quotes can only occur in pairs (you cannot pass a single literal double quote)\r\n                -- For /Dname=value style switches, functional double quotes (for example to handle spaces) are best put around both \r\n                       name and value (in other words, these kinds of switches don't need special treatment for their '=' signs).\r\n                -- Values containing hyphens should be quoted; RC requires this, and CL does not mind.\r\n             ":"\r\n             \r\n             下面是一些引用实验，使用/D开关与CL和RC预处理器。\r\n             /D开关比大多数开关稍微棘手一些，因为它有一个name=value对。\r\n             下表包含预处理器在传递开关时实际嵌入的内容\r\n             第一栏:\r\n             \r\n                                  CL通过cmd行CL通过响应文件RC\r\n                 /DFOO=\"A\"A A   \r\n                 /D\"FOO=\"A\"\"A A A\r\n                 /DFOO=A A A   \r\n                 /D\"FOO=A\"A A   \r\n                 /DFOO=\"\"A\"\"A A A\r\n                     \r\n                 /DFOO=\\\"A\\\"\"A\"\"A\"\r\n                 /DFOO=\"\"\"A\"\"\"a\"破\"a\"\r\n                 /D\"FOO=\\\"A\\\"\"\"A\"\"A\"\r\n                 /D\"FOO=\"\"A\"\"\"A\"\"\"A\"\r\n                     \r\n                 /DFOO=\"A B\"A B A B \r\n                 /D\"FOO=A B\"A B A B \r\n                     \r\n                 /D\"FOO=\"A B\"\"破碎      \r\n                 /DFOO=\\\"A B\\\"破      \r\n                 /D\"FOO=\\\"A B\\\"\"A B\"\"A B\"\"A B\"\r\n                 /D\"FOO=\"\"A B\"\"\"A B\"破碎破碎\r\n            \r\n             从我的实验（只有CL和RC）看来， \r\n                --字面双引号最可靠地写在形式\\\"not\"\"\r\n                --在doublequotes之前下降的反斜杠必须加倍。\r\n                --必须引用包含字面双引号的值。\r\n                --文字双引号只能成对出现（不能传递单个文字双引号）\r\n                --对于/Dname=value样式开关，功能双引号（例如处理空格）最好放在两者之间 \r\n                       名称和值（换句话说，这些类型的开关不需要对它们的'='符号进行特殊处理）。\r\n                --包含连字符的值应该被引用;RC需要这个，CL不介意。\r\n             \r\n","\r\n            Gets or sets the architecture value for the task.\r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"\r\n            获取或设置任务的体系结构值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n","\r\n            An evaluated design-time metadatum.\r\n            Parented either by a ProjectItemDefinition or a ProjectItem.\r\n            ":"\r\n            评估的设计时间元数据。\r\n            由ProjectItemDefinition或ProjectItem育儿。\r\n            \r\n"," which can pass parameters to its constructor.  Our \r\n            dependency inject cannot pass parameters to constructors so this factory is used as a middle man.\r\n            ":" 可以将参数传递给其构造函数。我们的\r\n            依赖性注入不能将参数传递给构造函数，因此该工厂被用作中间人。\r\n            \r\n"," to remove as a dependency.":" 删除作为依赖。\r\n","\r\n            Get all projects with the provided path.\r\n            Returns an empty list if there are none.\r\n            ":"\r\n            用提供的路径获取所有项目。\r\n            如果没有，则返回一个空列表。\r\n            \r\n","\r\n            Throws if the parameter has a double-quote in it. This is used to prevent parameter\r\n            injection. It's virtual so that tools can override this method if they want to have quotes escaped in filenames\r\n            ":"\r\n            如果参数中有双引号，则投掷。这用于防止参数\r\n            注射。这是虚拟的，因此，如果工具想在文件名中逃脱，则可以覆盖此方法\r\n            \r\n","TaskHostContext":"TaskShostContext\r\n","\r\n            Performs logical OR on children\r\n            Does not update conditioned properties table\r\n            ":"\r\n            表演逻辑或儿童\r\n            不更新条件属性表\r\n            \r\n","\r\n            The node-unique project request context the event was in\r\n             ":"\r\n            节点唯一的项目请求上下文事件正在\r\n             \r\n","\r\n            ProjectChooseElement represents the Choose element in the MSBuild project.\r\n            Currently it does not allow a Condition.\r\n            ":"\r\n            ProjectChooseElement代表MSBUILD项目中的选择元素。\r\n            目前，它不允许有条件。\r\n            \r\n","\r\n             This is the publicly exposed getter, that translates into a read-only dead IDictionary<string, string>.\r\n            \r\n             To be consistent with Project, setting and removing global properties is done with\r\n             ":"\r\n             这是公开暴露的getter，转化为仅读取的死idictionary <string，string>。\r\n            \r\n             为了与项目一致，设置和删除全球属性是通过\r\n             \r\n","Errors during logger shutdown may throw a LoggerException, in this case the exception is re-thrown":"记录程序关闭期间的错误可能会引发伐木感，在这种情况下，例外是重新申请\r\n","\r\n            Retrieves the references from this configuration.\r\n            ":"\r\n            从此配置中检索引用。\r\n            \r\n","\r\n            Wraps an evaluated item for build purposes\r\n            ":"\r\n            将评估的物品包装出来的构建目的\r\n            \r\n","\r\n            If you add fields to this class, add a custom serialization constructor and override GetObjectData().\r\n            ":"如果将字段添加到此类中，请添加自定义序列化构造函数和Override getObjectData（）。\r\n            \r\n","\r\n            The default tools version of this project collection. Projects use this tools version if they\r\n            aren't otherwise told what tools version to use.\r\n            This value is gotten from the .exe.config file, or else in the registry, \r\n            or if neither specify a default tools version then it is hard-coded to the tools version \"2.0\".\r\n            Setter throws InvalidOperationException if a toolset with the provided tools version has not been defined.\r\n            Always defined.\r\n            ":"\r\n            此项目集合的默认工具版本。项目使用此工具版本，如果\r\n            否则不会告诉使用哪些工具版本。\r\n            此值是从.exe.config文件中获得的，或者在注册表中获得\r\n            或者，如果没有指定默认工具版本，则将其硬编码为工具版本“ 2.0”。\r\n            如果尚未定义带有提供的工具版本的工具集，则setter抛出无效的exception。\r\n            总是定义。\r\n            \r\n","\r\n            The help file to use when the user hits F1. Must specify ":"\r\n            用户击中F1时要使用的帮助文件。必须指定\r\n","\r\n            Determines whether the given path has any wild card characters, any semicolons or any property references.\r\n            ":"\r\n            确定给定路径是否具有任何通配符字符，任何半殖民地或任何属性引用。\r\n            \r\n","The path to the file in the tools path folder of the appropriate ToolsVersion if it \r\n            exists, otherwise null.":"如果它\r\n            存在，否则为无效。\r\n","\r\n            Creates an unparented ProjectItemDefinitionGroupElement, wrapping an unparented XmlElement.\r\n            Caller should then ensure the element is added to a parent\r\n            ":"\r\n            创建一个无与伦比的ProjectItemDefinitionGroupelement，包装无与伦比的XMlelement。\r\n            然后，呼叫者应确保将元素添加到父\r\n            \r\n","\r\n            struct representing a reference to MSBuildExtensionsPath* property\r\n            ":"\r\n            代表对msbuildextensionspath*属性的引用的结构\r\n            \r\n","\r\n            This sets the function used to determine whether an item matches an item spec.\r\n            ":"\r\n            这设置了用于确定项目是否匹配项目规格的函数。\r\n            \r\n"," for a more detailed explanation.  \r\n            Returns the escaped value of the metadatum requested.  \r\n            ":" 有关更详细的解释。\r\n            返回所请求的元数据的逃逸价值。\r\n            \r\n","\r\n            This exception is thrown whenever there is a problem with the user's XML project file. The problem might be semantic or\r\n            syntactical. The latter would be of a type typically caught by XSD validation (if it was performed by the project writer).\r\n            ":"\r\n            只要用户的XML项目文件出现问题，就会抛出此例外。问题可能是语义或\r\n            句法。后者是通常由XSD验证捕获的类型（如果是由项目作者执行的）。\r\n            \r\n","\r\n            Logs a comment (BuildMessageEventArgs) with a certain MessageImportance level\r\n            ":"\r\n            记录具有一定semageimportance级别的注释（buildMessageEventargs）\r\n            \r\n","\r\n            Let A be 'this' project and B be 'blockingRequest' (the request which is going to block A.)  \r\n            An indirect circular dependency exists if there is a dependency path from B to A.  If there is no \r\n            existing blocked request B' with the same global request id as B, then there can be no path from B to A because B is a brand new \r\n            request with no other dependencies.  If there is an existing blocked request B' with the same global request ID as B, then we \r\n            walk the set of dependencies recursively searching for A.  If A is found, we have a circular dependency.\r\n            ":"\r\n            让A为“此”项目，B为“ BlockingRequest”（将要阻止A的请求A）\r\n            如果没有B到A的依赖性路径，则存在间接的循环依赖性\r\n            现有的阻止请求B'具有与B相同的全局请求ID\r\n            没有其他依赖性请求。如果存在与B相同的全局请求ID的现有阻止请求B'，那么我们\r\n            递归依靠依赖关系集，以寻找A。如果找到A，我们会有圆形依赖性。\r\n            \r\n","\r\n            Filename for the MSBuild tasks (v14+), used for shimming in loading\r\n            task factory UsingTasks\r\n            ":"\r\n            MSBUILD任务（V14+）的文件名，用于加载\r\n            任务工厂使用任务\r\n            \r\n","If logger is null":"如果记录器为null\r\n","\r\n            Location of the original task parameter attribute\r\n            ":"\r\n            原始任务参数属性的位置\r\n            \r\n","\r\n            Gets any host object for this project file matching the task and target names specified.\r\n            ":"\r\n            获取该项目文件的任何主机对象匹配任务和指定的目标名称。\r\n            \r\n","The type of items to return.":"要返回的项目类型。\r\n","\r\n            Location of element.\r\n            ":"\r\n            元素的位置。\r\n            \r\n","\r\n            Registry of usingtasks, for build.\r\n            ":"\r\n            使用任务注册表构建。\r\n            \r\n","The interned string, or the same string if it could not be interned.":"实施的字符串或相同的字符串如果无法实施。\r\n","\r\n            IDisposable implementation\r\n            ":"\r\n            IDISPOSABLE实现\r\n            \r\n","The factory method.":"工厂方法。\r\n","\r\n            Event which is signalled when a task is not executing.  Used for cancellation.\r\n            ":"\r\n            事件在任务不执行时发出信号。用于取消。\r\n            \r\n","\r\n            Whether when we read a ToolsVersion that is not equivalent to the current one on the Project tag, we \r\n            treat it as the current one.\r\n            ":"\r\n            当我们阅读不等于项目标签上当前的工具交换时，我们\r\n            将其视为当前的。\r\n            \r\n","The cloned element.":"克隆元素。\r\n","\r\n            Set this only through ":"仅通过\r\n","\r\n            The engine has not yet been initialized, and cannot accept requests.\r\n            ":"\r\n            该引擎尚未初始化，也不能接受请求。\r\n            \r\n","\r\n            Retrieves all completed work items.\r\n            ":"\r\n            检索所有完成的工作项目。\r\n            \r\n","\r\n            Whether boolean evaluation is allowed: always allowed for operators\r\n            ":"\r\n            是否允许布尔评估：始终允许运营商\r\n            \r\n","\r\n            Unregisters a packet handler.  Not used in the in-proc node.\r\n            ":"\r\n            拆下数据包处理程序。未在程序内节点中使用。\r\n            \r\n","\r\n            Interface that a task factory Instance should implement\r\n            ":"\r\n            任务工厂实例应实现的接口\r\n            \r\n","\r\n            The ToolsVersion passed on the commandline, if any.  May be null.\r\n            ":"\r\n            命令行（如果有）传递的ToolsVersion。可能是无效的。\r\n            \r\n","\r\n            Splits an expression into fragments at semicolons, except where the\r\n            semicolons are in a macro or separator expression.\r\n            Fragments are trimmed and empty fragments discarded.\r\n            ":"\r\n            除非\r\n            半隆在宏观或分离器表达中。\r\n            修剪碎片并丢弃空的碎片。\r\n            \r\n","\r\n            Assigns requests on a first-come, first-serve basis.\r\n            ":"\r\n            以先到先得的方式分配请求。\r\n            \r\n"," to still treat an unresolved MSBuild project SDK as an error.\r\n            ":" 仍将未解决的MSBUILD Project SDK视为错误。\r\n            \r\n","\r\n            Add a metadata with the specified name and value.\r\n            Overwrites any metadata with the same name already in the collection.\r\n            ":"\r\n            添加带有指定名称和值的元数据。\r\n            覆盖集合中已经具有相同名称的所有元数据。\r\n            \r\n","\r\n            Provides a way to efficiently enumerate custom metadata of an item, without built-in metadata.\r\n            ":"\r\n            提供了一种方法，可以有效地枚举物品的自定义元数据，而无需内置元数据。\r\n            \r\n","\r\n            Signals when the tool times-out. The tool timer calls this method\r\n            when the time-out period on the tool expires.\r\n            ":"\r\n            工具时间输出时的信号。工具计时器调用此方法\r\n            该工具的超时期限到期时。\r\n            \r\n","The targeted framework version (2.0, 3.0, 3.5, 4.0, etc)":"目标框架版本（2.0、3.0、3.5、4.0等）\r\n","\r\n            Allows tasks to raise custom events to all registered loggers.\r\n            The build engine may perform some filtering or\r\n            pre-processing on the events, before dispatching them.\r\n            ":"\r\n            允许任务将自定义事件提高到所有注册的登录器。\r\n            构建引擎可能会执行一些过滤或\r\n            在派遣事件之前对事件进行预处理。\r\n            \r\n","\r\n            https://github.com/microsoft/msbuild/pull/4975 started expanding qualified metadata in Update operations. Before they'd expand to empty strings.\r\n            This escape hatch turns back the old empty string behavior.\r\n            ":"\r\n            https://github.com/microsoft/msbuild/pull/4975在更新操作中开始扩展合格的元数据。在它们扩展到空字符串之前。\r\n            此逃生舱门转移回旧的空字符串行为。\r\n            \r\n","\r\n            Reports to the scheduler that a node has been created.\r\n            ":"\r\n            向调度程序报告已经创建了一个节点。\r\n            \r\n","\r\n            The route for host-aware tasks back to the host\r\n            ":"\r\n            返回主机的主机感知任务的路线\r\n            \r\n","\r\n            The component host for this collection.\r\n            ":"\r\n            此集合的组件主机。\r\n            \r\n","Returns true on success and false on failure or disabled build.":"成功返回成功，而在失败或禁用的构建方面返回。\r\n","\r\n            Initializes a new instance of the TargetSkippedEventArgs class.\r\n            ":"\r\n            初始化targetskippedeventargs类的新实例。\r\n            \r\n","\r\n            Gets or sets the escaped include, or \"name\", for the item.\r\n            ":"\r\n            获取或设置该项目的逃脱包含或“名称”。\r\n            \r\n","\r\n            version 3.0\r\n            ":"\r\n            版本3.0\r\n            \r\n","\r\n            Lazily created, as there are lots of items\r\n            that have no metadata at all.\r\n            ":"\r\n            懒洋洋地创建了很多东西\r\n            根本没有元数据。\r\n            \r\n","\r\n            Logging currently enabled only by an env var.\r\n            ":"\r\n            当前仅由ENV VAR启用日志记录。\r\n            \r\n","\r\n            The global request id of the request which spawned this one.\r\n            ":"\r\n            催生该请求的全局请求ID。\r\n            \r\n","\r\n            Called when External provider is \"disconnected\" from the local collection - aka it will be no longer used to extend\r\n            the projects list.\r\n            This is triggered by either project collection disposing or when another call to SetExternalProjectsProvider is invoked.\r\n            The purpose of this call is to allow the external provider release any associate data (caches/connections etc).\r\n            ":"\r\n            当外部提供商与本地集合“断开连接”时称为 - 又名它将不再用于扩展\r\n            项目列表。\r\n            这是由一个项目集合处置或调用SetExternalProjectSprovider的其他调用时触发的。\r\n            此调用的目的是允许外部提供商发布任何关联数据（缓存/连接等）。\r\n            \r\n","\r\n             The next ID to assign for a global request id.\r\n            ":"\r\n             为全局请求ID分配的下一个ID。\r\n            \r\n","\r\n            Returns true if a message of given importance should be logged because it is possible that a logger consuming it exists.\r\n            ":"\r\n            如果应记录给定重要性的消息，则返回为TRUE，因为可能存在消耗的记录器。\r\n            \r\n","The build request entry":"生成请求条目\r\n","\r\n            Creates an output node.\r\n            Exactly one of itemType and propertyName must be specified.\r\n            Caller must add it to the location of choice in the project.\r\n            ":"\r\n            创建一个输出节点。\r\n            必须指定ItemType和PropertyName之一。\r\n            呼叫者必须将其添加到项目中选择的位置。\r\n            \r\n","Central logger which is to receive the events created by the forwarding logger":"中央记录仪将接收转发记录器创建的事件\r\n","\r\n            Returns the internal version for this object's state.\r\n            Updated when toolsets change, indicating all contained projects are potentially invalid.\r\n            ":"\r\n            返回此对象状态的内部版本。\r\n            更新工具集更改时，表明所有包含的项目都可能无效。\r\n            \r\n","\r\n            Waits for the builders until they are terminated.\r\n            ":"\r\n            等待建筑商终止。\r\n            \r\n","\r\n            Ensures that the packet type matches the expected type\r\n            ":"确保数据包类型与预期类型匹配\r\n            \r\n","The return value indicates success (true) or failure (false) if the host object was actually called to do the work.":"返回值表示成功（true）或失败（false），如果实际要求主机对象进行工作。\r\n","\r\n            The node where this configuration's master results are stored.\r\n            ":"\r\n            存储此配置主结果的节点。\r\n            \r\n","\r\n            Gets or sets the Include value. \r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty or null.\r\n            ":"\r\n            获取或设置包含值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空或null，则删除属性。\r\n            \r\n","\r\n            Constructs a pair from an item set and metadata\r\n            ":"\r\n            从项目集和元数据中构造一对\r\n            \r\n","\r\n            Gets the F1-help keyword (if any) associated with this error, for the host IDE.\r\n            ":"\r\n            为主机IDE获取与此错误关联的F1-HELP关键字（如果有）。\r\n            \r\n","Thrown if StartBuild has not been called or if EndBuild has been called.":"如果没有调用StartBuild或拨打Endbuild，则会抛弃。\r\n","\r\n            No tracking or suspension operation is in effect as a result of this instance.\r\n            ":"\r\n            由于这种情况，没有跟踪或悬架操作生效。\r\n            \r\n","\r\n            Returns the value if it exists, null otherwise.\r\n            If item type is null, it is ignored.\r\n            ":"\r\n            返回值（如果存在），则否则为null。\r\n            如果项目类型为null，则将忽略。\r\n            \r\n","\r\n            Reserved for use by the C Run-time; must be NULL.\r\n            ":"\r\n            保留用于C运行时使用；必须为空。\r\n            \r\n","\r\n            Enumerate all the projects.\r\n            ":"\r\n            列举所有项目。\r\n            \r\n","\r\n            Stop execution\r\n            ":"\r\n            停止执行\r\n            \r\n","\r\n            Properties encountered during evaluation. These are read during the first evaluation pass.\r\n            Unlike those returned by the Properties property, these are ordered, and include any properties that\r\n            were subsequently overridden by others with the same name. It does not include any\r\n            properties whose conditions did not evaluate to true.\r\n            ":"\r\n            评估期间遇到的属性。这些是在第一次评估通行证中读取的。\r\n            与属性属性返回的人不同，这些是订购的，并包括任何属性\r\n            随后被其他人以相同名称覆盖。它不包括任何\r\n            条件未评估为真的属性。\r\n            \r\n","\r\n            Get any property in the item that has the specified name,\r\n            otherwise returns null\r\n            ":"\r\n            获取具有指定名称的项目中的任何属性，\r\n            否则返回null\r\n            \r\n","\r\n            Ignore empty targets files when evaluating the project\r\n            ":"\r\n            评估项目时忽略空目标文件\r\n            \r\n","\r\n            Dispose of the build manager. \r\n            ":"\r\n            处置构建经理。\r\n            \r\n","\r\n            Update value cached for performance\r\n            ":"\r\n            更新值缓存以进行性能\r\n            \r\n","\r\n            Creates a metadata backed by XML. \r\n            Constructed during evaluation of a project.\r\n            ":"\r\n            创建一个由XML支持的元数据。\r\n            在评估项目期间构建。\r\n            \r\n","\r\n            Gets the internal msbuild thread stack size.\r\n            ":"获取内部MSBUILD线程堆栈大小。\r\n            \r\n","Warning codes to be treated as errors for the current project.":"警告代码将被视为当前项目的错误。\r\n","\r\n            Whatever MinOSVersion we found in the manifest\r\n            ":"\r\n            我们在清单中发现的任何米斯转化\r\n            \r\n","\r\n            Show a message that cancel has not yet finished.\r\n            ":"\r\n            显示一条消息，即取消尚未完成。\r\n            \r\n","\r\n            The amount of time spent in the configuration.\r\n            ":"\r\n            在配置中花费的时间。\r\n            \r\n","\r\n            Unloads all the projects contained by this ProjectCollection.\r\n            Host should call this when they are completely done with all the projects.\r\n            ":"\r\n            卸载本项目收集的所有项目。\r\n            主持人完全完成所有项目时，应将其称为此。\r\n            \r\n","\r\n            The singleton empty element location.\r\n            ":"\r\n            Singleton空元素位置。\r\n            \r\n","\r\n            Instructs the MSBuild engine to build one or more targets in the current project.\r\n            ":"\r\n            指示MSBUILD引擎在当前项目中构建一个或多个目标。\r\n            \r\n","target name":"目标名称\r\n","\r\n            Gets the installed framework identifiers\r\n            ":"\r\n            获取已安装的框架标识符\r\n            \r\n","A collection of target names that the user requested be built.":"构建用户要求的目标名称的集合。\r\n","\r\n            Abstract base class for MSBuild construction object model elements. \r\n            ":"\r\n            MSBUILD构造对象模型元素的抽象基类。\r\n            \r\n","\r\n            Projects may set this to override a task's ToolName.\r\n            Tasks may override this to prevent that.\r\n            ":"\r\n            项目可以将其设置为覆盖任务的工具名称。\r\n            任务可能会覆盖以防止这一点。\r\n            \r\n","The lookup to be used to build these targets.":"用于构建这些目标的查找。\r\n","\r\n            TargetedSDKConfiguration metadata name\r\n            ":"\r\n            targetedsdkconfiguration元数据名称\r\n            \r\n","\r\n            Gets or sets if this import was ignored. Ignoring imports is controlled by\r\n            ":"\r\n            如果忽略了此导入，则获取或设置。忽略进口由\r\n            \r\n","\r\n             Resolves the full path to the specified SDK.\r\n            ":"\r\n             解决指定SDK的完整路径。\r\n            \r\n","\r\n            This interner works by providing a way to convert strings to integer IDs.  When used as a form of compression,\r\n            clients will intern their strings and record the set of IDs returned, then transmit those IDs instead of the\r\n            original strings.  The interner itself is also transmitted ahead of time, with the IDs, allowing\r\n            reconstruction of the original strings.  This ensures each string is transmitted exactly once.\r\n            ":"\r\n            该Interner通过提供将字符串转换为整数ID的方法来起作用。当用作压缩形式时\r\n            客户将实现他们的字符串并记录返回的ID集，然后传输这些ID而不是\r\n            原始字符串。 Interner本身还会提前传输ID，允许\r\n            原始字符串的重建。这样可以确保每个字符串被精确地发送一次。\r\n            \r\n","\r\n            Importance with which to log text from the\r\n            standard error stream.\r\n            ":"\r\n            重要的是从\r\n            标准错误流。\r\n            \r\n",").\r\n            This is especially useful during a restore since some imports might come from packages that haven't been restored yet.\r\n            ":"）。\r\n            这在还原过程中特别有用，因为一些进口可能来自尚未恢复的软件包。\r\n            \r\n","\r\n            Determines whether the file system is case sensitive.\r\n            Copied from https://github.com/dotnet/runtime/blob/73ba11f3015216b39cb866d9fb7d3d25e93489f2/src/libraries/Common/src/System/IO/PathInternal.CaseSensitivity.cs#L41-L59\r\n            ":"\r\n            确定文件系统是否敏感。\r\n            Copied from https://github.com/dotnet/runtime/blob/73ba11f3015216b39cb866d9fb7d3d25e93489f2/src/libraries/Common/src/System/IO/PathInternal.CaseSensitivity.cs#L41-L59\r\n            \r\n","The string to perform matching against.":"符合匹配的字符串。\r\n","\r\n            ITaskItem implementation\r\n            ":"\r\n            ITASCITEM实施\r\n            \r\n","\r\n            Whether we can selectively load as read-only (eg just when in program files directory)\r\n            ":"\r\n            我们是否可以选择性地加载仅作为读取（例如，在程序文件目录中）\r\n            \r\n","\r\n            Gets the number of metadata set on the item.\r\n            ":"\r\n            获取项目上设置的元数据的数量。\r\n            \r\n","\r\n            Valid attributes on import element\r\n            ":"\r\n            导入元素上的有效属性\r\n            \r\n","\r\n            Properties to draw on for expansion\r\n            ":"\r\n            要利用的属性以进行扩展\r\n            \r\n","\r\n            The targets specified when the request was made.  Doesn't include default or initial targets.\r\n            ":"\r\n            提出请求时指定的目标。不包括默认目标或初始目标。\r\n            \r\n","\r\n            The global properties to evaluate with, if any.\r\n            Can never be null.\r\n            Read-only; to use different global properties, evaluate yourself a new project.\r\n            ":"\r\n            如果有的话，可以评估的全球属性。\r\n            永远不会无效。\r\n            只读;要使用不同的全球属性，请评估一个新项目。\r\n            \r\n","Filename of the project being built.":"正在构建项目的文件名。\r\n","\r\n            Cache the results of calling the GetPathToReferenceAssemblies so that we do not recalculate it every time we call the method\r\n            ":"\r\n            缓存调用getPathToreFerenceSemblies的结果，以免每次调用该方法时都重新计算它\r\n            \r\n","\r\n            Some properties are used only by the targets and don't want to be included in the command line.\r\n            Others (like task parameters) are included in the command line in the form of the switch/value they emit.\r\n            This field is optional and has the default value of ":"某些属性仅由目标使用，不想包含在命令行中。\r\n            其他（例如任务参数）以其发出的开关/值的形式包含在命令行中。\r\n            该字段是可选的，具有默认值的\r\n","\r\n            Exits the build request callback state.\r\n            ":"\r\n            退出构建请求回调状态。\r\n            \r\n","\r\n            Gets the path to a sdk exe based on the processor architecture and the provided bin directory path. \r\n            If the fileName cannot be found in the pathToSDK after the processor architecture has been taken into account a null is returned.\r\n            ":"\r\n            根据处理器体系结构和提供的BIN目录路径进入SDK EXE的路径。\r\n            如果在考虑到处理器体系结构后返回null后，将在Pathtosdk中找到文件名。\r\n            \r\n","\r\n            The logging service completly shutdown\r\n            ":"\r\n            伐木服务完全关闭\r\n            \r\n","Equivalent to _expression.Substring(startIndex, length).Trim() or null if the trimmed substring is empty.":"相当于_expression.substring（startIndex，length）.trim（）或null如果修剪的子字符串为空。\r\n","n1":"N1\r\n","The logging context of the target":"目标的记录上下文\r\n","\r\n            Used to load information about default MSBuild tasks i.e. tasks that do not need to be explicitly declared in projects\r\n            with the <UsingTask> element. Default task information is read from special files, which are located in the same\r\n            directory as the MSBuild binaries.\r\n            ":"\r\n            用于加载有关默认MSBUILD任务的信息，即不需要在项目中明确声明的任务\r\n            使用<sustrast>元素。默认任务信息是从特殊文件中读取的，该文件位于同一文件中\r\n            目录为MSBUILD二进制文件。\r\n            \r\n","\r\n            create property snapshot\r\n            ":"创建属性快照\r\n            \r\n","The request being resumed":"恢复请求\r\n",".\r\n            Throws if the parent is not itself parented.\r\n            Throws if the reference node does not have this node as its parent.\r\n            Throws if the node to add is already parented.\r\n            Throws if the node to add was created from a different project than this node.\r\n            ":"。\r\n            如果父母本身没有父母的父母，则投掷。\r\n            如果参考节点没有此节点作为其父，则投掷。\r\n            如果要添加的节点已经归父母，请投掷。\r\n            如果要添加的节点是由与此节点不同的项目创建的。\r\n            \r\n","\r\n            MSBuild object that this meta data belong to.\r\n            Can be either ":"\r\n            此元数据属于的msbuild对象。\r\n            可以是\r\n","\r\n            Constructor creates a build result with results for each graph node.\r\n            ":"\r\n            构造函数创建一个构建结果，每个图节点的结果。\r\n            \r\n","\r\n            This is the batch file created when UseCommandProcessor is set to true.\r\n            ":"\r\n            这是当UseCommandProcessor设置为true时创建的批处理文件。\r\n            \r\n","\r\n            Console logger should show error and warning summary at the end of build?\r\n            ":"\r\n            控制台记录器应该在构建结束时显示错误和警告摘要？\r\n            \r\n","\r\n            The thread priority with which to run the in-proc node.\r\n            ":"\r\n            线程中的线程优先级。\r\n            \r\n","\r\n            Creates a metadata modification of type Keep.\r\n            ":"\r\n            创建一种类型的元数据修改。\r\n            \r\n","\r\n            Retrieves the count all of the requests scheduled to the specified node.\r\n            ":"\r\n            检索计数安排到指定节点的所有请求。\r\n            \r\n","true if right is higher than left, false otherwise":"如果右高于左，则为true，否则为false\r\n","\r\n             Since:\r\n                 - we have no proper AST and interpreter for itemspecs that we can do analysis on\r\n                 - GetItemProvenance needs to have correct counts for exclude strings (as correct as it can get while doing it after evaluation)\r\n            \r\n             The temporary hack is to use the expander to expand the strings, and if any property or item references were encountered, return Provenance.Inconclusive.\r\n             ":"\r\n             自从：\r\n                  - 我们没有适当的AST和对项目设备的解释器，我们可以对\r\n                  -  getItemProventhy需要有正确的排除字符串计数（在评估后进行时尽可能正确）\r\n            \r\n             临时黑客是使用扩展器扩展字符串，如果遇到任何属性或项目参考，请返回出处。\r\n             \r\n","The object to which this one should be compared.":"应该比较这个对象。\r\n","\r\n            The separator to use in delineating individual values of this string list property\r\n            ":"\r\n            用于描述此字符串列表属性的单个值的分离器\r\n            \r\n","List of Target Platform SDKs":"目标平台SDK列表\r\n","\r\n            Loggers that all contained projects will use for their builds.\r\n            Loggers are added with the ":"\r\n            所有包含项目的伐木者都将用于其构建。\r\n            添加了登录器\r\n","ResourceManager for shared resources.":"共享资源的ResourceManager。\r\n","A Task returning a structure containing the result of the build, success or failure and the list of target outputs per project":"返回包含构建结果，成功或失败结果以及每个项目的目标输出列表的任务\r\n","The request to build.":"构建的请求。\r\n","The exception to be logged":"记录的例外\r\n","\r\n            Line number of interest in associated file.\r\n            ":"\r\n            关联文件中的兴趣线数。\r\n            \r\n","\r\n            Set to true to notify to Break on first instruction. This helps the F11 on startup experience.\r\n            Since the islands are on a new thread, there may be no user code on the main thread and so \r\n            F11 doesn't work. Thus the new worker thread needs to fire some break event.\r\n            This gets reset after the 'startup breakpoint'.\r\n            The initial Properties can override this.\r\n            ":"\r\n            设置为true以通知以违反第一个指令。这有助于F11启动体验。\r\n            由于这些岛屿在新线程上，因此主线程可能没有用户代码，因此\r\n            F11不起作用。因此，新的工人线程需要发射一些休息事件。\r\n            这将在“启动断点”之后重置。\r\n            初始属性可以覆盖这一点。\r\n            \r\n","\r\n            Parse the multipleversions string and set supportsMultipleVersions if it can be parsed correctly.\r\n            ":"\r\n            如果可以正确解析，则解析多重文字字符串并设置支持multipleversions。\r\n            \r\n","\r\n            The size, in bytes, of this structure. Set this value to the size of the SECURITY_ATTRIBUTES structure\r\n            ":"\r\n            该结构的大小，字节。将此值设置为Security_Attributes结构的大小\r\n            \r\n","\r\n            Asserts that the entry is in the ready state.\r\n            ":"\r\n            断言该条目处于现成状态。\r\n            \r\n","\r\n            This method adds the graph build request in the specified submission to the set of requests being handled by the scheduler.\r\n            ":"\r\n            此方法将指定提交中的图形构建请求添加到调度程序正在处理的一组请求中。\r\n            \r\n","\r\n            Gets or sets the required attribute\r\n            ":"\r\n            获取或设置所需属性\r\n            \r\n","\r\n            The global properties passed under which the project should be opened. \r\n            ":"\r\n            通过该项目应开放的全球属性。\r\n            \r\n","\r\n            The directory that the project is in. \r\n            Essential for evaluating relative paths.\r\n            Is never null, even if the FullPath does not contain directory information.\r\n            If the project has not been loaded from disk and has not been given a path, returns the current-directory from \r\n            the time the project was loaded - this is the same behavior as Whidbey/Orcas.\r\n            If the project has not been loaded from disk but has been given a path, this path may not exist.\r\n            ":"\r\n            项目所在的目录。\r\n            评估相对路径必不可少的。\r\n            即使全部路径不包含目录信息，也永远不会为空。\r\n            如果该项目尚未从磁盘上加载并且没有给出路径，请从\r\n            加载项目的时间 - 这与Whidbey/orcas相同。\r\n            如果该项目尚未从磁盘上加载，但已获得一条路径，则该路径可能不存在。\r\n            \r\n","The factory to use to create packets from this node.":"用于从此节点创建数据包的工厂。\r\n","The right hand side.":"右侧。\r\n","\r\n            The directory of the project being built\r\n            Never null: If there is no project filename yet, it will use the current directory\r\n            ":"\r\n            正在构建的项目目录\r\n            永不零：如果还没有项目文件名，它将使用当前目录\r\n            \r\n","\r\n            Implementation of IKeyed exposing the item type\r\n            ":"\r\n            实施IKEYED公开项目类型\r\n            \r\n","\r\n            The escaped include for this item\r\n            ":"\r\n            逃脱的包括此项目\r\n            \r\n","The type which is created by this factory.":"该工厂创建的类型。\r\n","False if there were missing results, true otherwise.":"如果缺少结果，则为错误，否则为否。\r\n","\r\n            Adds metadata with the specified name and value to the item.\r\n            Updates an existing metadata if one already exists with the same name on the item directly, as opposed to inherited from an item definition.\r\n            Updates the evaluated project, but does not affect anything else in the project until reevaluation. For example,\r\n            if a piece of metadata named \"m\" is added on item of type \"i\", it does not affect \"j\" which is evaluated from \"@(j->'%(m)')\" until reevaluation.\r\n            Also if the unevaluated value of \"m\" is set to something that is modified by evaluation, such as \"$(p)\", the evaluated value will be set to literally \"$(p)\" until reevaluation.\r\n            This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state without a reevaluation.\r\n            Returns the new or existing metadatum.\r\n            ":"\r\n            将带有指定名称和值的元数据添加到项目中。\r\n            如果已直接在项目上的同名存在，而不是从项目定义继承，则更新现有的元数据。\r\n            更新评估的项目，但在重新评估之前不会影响项目中的其他任何内容。例如，\r\n            如果在类型的“ I”项目中添加了名为“ M”的元数据，则不会影响“ J”，该元素从“@（j->'％（m）'）”中进行评估，直到重新评估为止。\r\n            同样，如果“ m”的未评估值设置为通过评估修改的东西，例如“ $（p）”，则评估值将以字面的“ $（p）”设置为“ $（p）”，直到重新评估为止。\r\n            这是一种方便，可以理解，不一定会使项目处于完全一致的状态，而没有重新评估。\r\n            返回新的或现有的元数据。\r\n            \r\n","The task host for the task.":"任务的任务主机。\r\n","\r\n            Initialize the build component.\r\n            ":"\r\n            初始化构建组件。\r\n            \r\n","\r\n            Unevaluated exclude value\r\n            ":"\r\n            未评估的排除价值\r\n            \r\n","\r\n            Location of the Runtime attribute, if any\r\n            ":"\r\n            运行时属性的位置，如果有的话\r\n            \r\n","\r\n            Common constructor code.\r\n            Direct metadata may be null, indicating no metadata. It will be cloned.\r\n            Builtin metadata may be null, indicating it has not been populated. It will be cloned.\r\n            Inherited item definition metadata may be null. It is assumed to ALREADY HAVE BEEN CLONED.\r\n            Mutability follows the project.\r\n            ":"\r\n            通用构造函数代码。\r\n            直接元数据可能为无效，表明没有元数据。它将被克隆。\r\n            内置的元数据可能为无效，表明它尚未被填充。它将被克隆。\r\n            继承的项目定义元数据可能为null。假定已经克隆了它。\r\n            项目遵循该项目。\r\n            \r\n","\r\n            Additional attributes of the editor that are not generic enough to be made\r\n            properties on this class. This field is optional.\r\n            ":"\r\n            编辑器的其他属性不足以制作\r\n            此类的属性。该字段是可选的。\r\n            \r\n","\r\n            We are pushing normal targets.  We never ignore them.\r\n            ":"\r\n            我们正在推动正常目标。我们永远不会忽略他们。\r\n            \r\n","A list of keys for the installed platforms for the given SDK":"给定SDK的已安装平台的键列表\r\n","\r\n            Provides methods for creating a segmented dictionary that is immutable; meaning it cannot be changed once it is\r\n            created.\r\n            ":"提供了创建不变的分段字典的方法；意思是一旦它就无法更改\r\n            创建。\r\n            \r\n","\r\n            Interface that a task factory Instance should implement if it wants to be able to\r\n            use new UsingTask parameters such as Runtime and Architecture. \r\n            ":"\r\n            任务工厂实例应实现的接口，如果它想要能够\r\n            使用新的使用任务参数，例如运行时和体系结构。\r\n            \r\n","\r\n            Logs a telemetry event for the current task.\r\n            ":"\r\n            为当前任务记录遥测事件。\r\n            \r\n","\r\n            Determines equivalence of two target entries.  They are considered the same\r\n            if their names are the same.\r\n            ":"\r\n            确定两个目标条目的等效性。他们被认为是一样的\r\n            如果他们的名字相同。\r\n            \r\n","\r\n            Get the exception\r\n            ":"\r\n            得到例外\r\n            \r\n","\r\n            DependencyAnalysisResult.SkipUpToDate, if target is up-to-date;\r\n            DependencyAnalysisResult.SkipNoInputs, if target has no inputs;\r\n            DependencyAnalysisResult.SkipNoOutputs, if target has no outputs;\r\n            DependencyAnalysisResult.IncrementalBuild, if only some target outputs are out-of-date;\r\n            DependencyAnalysisResult.FullBuild, if target is out-of-date\r\n            ":"\r\n            依赖性分析。\r\n            依赖性分析。\r\n            依赖性分析。\r\n            依赖性分析。\r\n            依赖性分析。FullBuild，如果目标不在\r\n            \r\n","\r\n            Signs up the console logger for all build events.\r\n            ":"\r\n            为所有构建事件注册控制台记录仪。\r\n            \r\n","\r\n            Gets the reason for the change.\r\n            ":"\r\n            得到改变的原因。\r\n            \r\n","Swaps the values in the two references, regardless of whether the two references are the same.":"不管两个参考是否相同，都将两个引用中的值交换。\r\n","The new state for this entry.":"该条目的新状态。\r\n","\r\n            This request is currently executing tasks on its node.  In this case it will be the only task executing on the node -\r\n            all other tasks are either Ready or Blocked.  There may only ever be one request with a given global request id in this state.\r\n            ":"\r\n            此请求当前是在其节点上执行任务。在这种情况下，它将是节点 - 唯一执行的任务 - \r\n            所有其他任务都准备就绪或阻止。在此状态下，可能只有一个带有给定的全局请求ID的请求。\r\n            \r\n","\r\n            This field is optional and is culture sensitive. When this property is not set, it is assigned the same \r\n            value as the ":"该领域是可选的，对培养很敏感。当未设置此属性时，将其分配相同\r\n            值为\r\n","\r\n            The global properties passed under which the project should be opened.\r\n            ":"\r\n            通过该项目应开放的全球属性。\r\n            \r\n","The entrypoint target names for this project":"该项目的入口点目标名称\r\n","\r\n            Parse a UsingTaskBodyElement from the element\r\n            ":"\r\n            解析元素的使用taskbodylement\r\n            \r\n","\r\n            Reads the hierarchy from a plan file.\r\n            ":"\r\n            从计划文件中读取层次结构。\r\n            \r\n"," for this property indicates that this property is actually \r\n            an item array - the list of all items with the item type specified by ":" 因为此属性表明此属性实际上是\r\n            项目数组 - 所有项目的列表，其中包含由项目类型指定的项目类型\r\n","\r\n            Result types that a plugin can return for a given build request.\r\n            ":"\r\n            插件可以返回给定的构建请求的结果类型。\r\n            \r\n","\r\n            The amount of memory the build should limit itself to using, in megabytes.\r\n            ":"\r\n            构建的内存量应限制为在兆字节中使用。\r\n            \r\n","\r\n            Called when a host is completely done with the project collection.\r\n            ":"\r\n            当项目集合完全完成主机时，请致电。\r\n            \r\n","Name of target":"目标名称\r\n","\r\n            When true, indicates the in-proc node should not be used.\r\n            ":"\r\n            如果为true，则表示不应使用程序内节点。\r\n            \r\n","\r\n            The exception, if any, which caused shutdown.\r\n            ":"\r\n            导致关闭的例外（如果有）。\r\n            \r\n","\r\n            Splitter for environment variables\r\n            ":"\r\n            环境变量的分离器\r\n            \r\n","\r\n            The BuildRequestEngine is responsible for managing the building of projects on a given node.  It\r\n            receives build requests, reports results and deals with BuildRequestConfiguration transactions.\r\n            As it runs on its own thread, all BuildRequestEngine operations are asynchronous.\r\n            ":"\r\n            BuildRequestengine负责管理给定节点上的项目的构建。它\r\n            接收构建请求，报告结果以及处理BuildRequestConfiguration交易。\r\n            当它在自己的线程上运行时，所有BuildRequestengine操作都是异步的。\r\n            \r\n","\r\n            Gets the specified metadata value for the qualified item type.  Returns an empty string if none is set.\r\n            ":"\r\n            获取合格项目类型的指定元数据值。如果没有设置，则返回一个空字符串。\r\n            \r\n","\r\n              The algorithm for gathering versions from the registry is as follows:\r\n                 1) targetRuntimeVersion is the target framework version you are targeting\r\n                 2) versions is a string list from reading the registry, this list is in what ever order the registry returns \r\n                    the keys to us in, this is usually alphabetical.\r\n                 \r\n                 We will go through each version string and do the following:\r\n                     1) Check to see if the string is a version\r\n                         If the string is not a version we will check to see if the string starts with the framework we are targeting,\r\n                         if it does we will add it to a list which will be added at the end \r\n                         of the versions list, if not it gets ignored. We do this to stay compatible to what we have been doing since whidbey.\r\n                         \r\n                         If the string is a version\r\n                             We check to see if the version is a valid target framework version. Meaning.  It has a Maj.Minor version and may have \r\n                             build, Build is less than or equal to 255 and there is no revision. The reason the build number needs to be less than 255 is because\r\n                             255 is the largest build number for a target framework version that visual studio 2010 supports. The build number is supposed to \r\n                             represent a service pack on the 4.0 framework.\r\n                             \r\n                             If the string is a valid target framework version we check to see we already have a dictionary entry and if not we \r\n                             add one. \r\n                             If the string is not a valid target framework then we will ignore the part of the version which makes it invalid\r\n                             (either the build or the revision, or both) and see where that version would fit in the dictionary as a key and\r\n                             then put the original version string into the list for that entry.\r\n                             \r\n                     Since the dictionary is sorted in reverse order to generate the list to return we do the following:\r\n                     Go through the list of dictionary entries \r\n                         For each entry sort the list in reverse alphabetical order and add the entries in their internal list to the listToreturn.\r\n            \r\n                     This way we have a reverse sorted list of all of the version keys.\r\n             ":"\r\n              从注册表中收集版本的算法如下：\r\n                 1）TargetRuntimeversion是您要定位的目标框架版本\r\n                 2）版本是从阅读注册表中的字符串列表，此列表是注册表返回的顺序\r\n                    我们进入的钥匙通常是字母顺序的。\r\n                 \r\n                 我们将浏览每个版本字符串，并执行以下操作：\r\n                     1）检查字符串是否是版本\r\n                         如果字符串不是版本，我们将检查字符串是否从我们要定位的框架开始，\r\n                         如果是这样，我们将其添加到列表中，该列表将在最后添加\r\n                         在版本列表中，如果没有，它将被忽略。我们这样做是为了与自Whidbey以来所做的事情保持兼容。\r\n                         \r\n                         如果字符串是版本\r\n                             我们检查该版本是否是有效的目标框架版本。意义。它具有Maj.minor版本，可能有\r\n                             构建，构建小于或等于255，并且没有修订。构建编号需要小于255的原因是\r\n                             255是Visual Studio 2010支持的目标框架版本的最大构建编号。构建编号应该\r\n                             代表4.0框架上的服务包。\r\n                             \r\n                             如果字符串是有效的目标框架版本，我们检查以查看我们已经有一个字典条目，如果不是，我们\r\n                             加一个。\r\n                             如果字符串不是有效的目标框架，那么我们将忽略版本的一部分，这使其无效\r\n                             （要么构建或修订，要么两者兼而有之），并查看该版本将在词典中作为钥匙中的何处，并且\r\n                             然后将原始版本字符串放入该条目的列表中。\r\n                             \r\n                     由于字典以相反顺序排序以生成要返回的列表，因此我们执行以下操作：\r\n                     浏览字典条目列表\r\n                         对于每个条目，按反向字母顺序排列列表，并将其内部列表中的条目添加到ListToreturn。\r\n            \r\n                     这样，我们就有所有版本键的反向排序列表。\r\n             \r\n","\r\n            This interface is used to describe a class which can act as a factory for creating\r\n            items when the Expander expands certain expressions.\r\n            ":"\r\n            该界面用于描述一个可以充当创建工厂的类\r\n            当扩展器扩展某些表达式时，项目。\r\n            \r\n","\r\n            The directory of the project owning this TaskItem.\r\n            May be null if this is not well defined.\r\n            ":"\r\n            拥有此任务的项目目录。\r\n            如果定义不当，则可能是零的。\r\n            \r\n","\r\n            The count of items we will store before we start using compression.\r\n            ":"\r\n            在开始使用压缩之前，我们将存储的项目计数。\r\n            \r\n","The item which will receive the output.":"将接收输出的项目。\r\n"," (when ":" （什么时候\r\n","True if there is a matching global property, false otherwise.":"如果有匹配的全局属性，则为false，则为否则。\r\n","\r\n            Used when we transfer results and state from a previous node to the current one.\r\n            ":"\r\n            当我们将结果和状态从先前的节点传输到当前一个时使用。\r\n            \r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n                Adds a new ParameterGroup to the using task to the end of the using task element\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n                在使用任务的末尾向使用任务添加一个新的参数组\r\n            \r\n","The list of batchable values":"可批处理值列表\r\n","\r\n            Flag indicating if we should only log critical events.\r\n            ":"\r\n            标志指示我们是否仅应记录关键事件。\r\n            \r\n",", and returns ":"，并返回\r\n","\r\n            Represents the ARM processor architecture.\r\n            ":"代表ARM处理器架构。\r\n            \r\n","\r\n            The build request engine.\r\n            ":"\r\n            构建请求引擎。\r\n            \r\n","\r\n            The pszSpec parameter points to a single file name pattern to be matched.\r\n            ":"\r\n            PSZSPEC参数指向要匹配的单个文件名模式。\r\n            \r\n","\r\n            Generates a unique directory name in the temporary folder.\r\n            Caller must delete when finished.\r\n            ":"\r\n            在临时文件夹中生成唯一的目录名称。\r\n            完成后必须删除呼叫者。\r\n            \r\n","\r\n            Add a metadata with the specified name and value.\r\n            Overwrites any metadata with the same name already in the collection.\r\n            Does not allow built-in metadata unless allowItemSpecModifiers is set.\r\n            ":"\r\n            添加带有指定名称和值的元数据。\r\n            覆盖集合中已经具有相同名称的所有元数据。\r\n            除非设置AllowItemSpecModifiers，否则不允许内置元数据。\r\n            \r\n","\r\n            Initialize a ProjectRootElement instance by loading from the specified file path.\r\n            Assumes path is already normalized.\r\n            Uses the specified project root element cache.\r\n            May throw InvalidProjectFileException.\r\n            ":"\r\n            通过从指定的文件路径加载来初始化ProjectRootelement实例。\r\n            假设路径已经归一化。\r\n            使用指定的项目根元素缓存。\r\n            可能会抛出无效的fileException。\r\n            \r\n"," of Visual Studio.":" 视觉工作室。\r\n","\r\n            Reset temporary state\r\n            ":"\r\n            重置临时状态\r\n            \r\n","\r\n            Result of timing the evaluation of a given element at a given location\r\n            ":"\r\n            定时评估给定位置的给定元素的结果\r\n            \r\n","\r\n            Return whether or not the LoggingQueue has any events left in it\r\n            ":"\r\n            返回登录名是否剩下任何事件\r\n            \r\n","\r\n                The collection with which all projects in the graph should be associated. May not be\r\n                null.\r\n            ":"\r\n                图中所有项目都应关联的集合。未必\r\n                无效的。\r\n            \r\n","\r\n            Get a fully qualified path to a file in the latest .NET Framework SDK. Error if the .NET Framework SDK can't be found.\r\n            When targeting .NET 3.5 or above, looks in the locations associated with Visual Studio 2010.  If you wish to \r\n            target the .NET Framework SDK that ships with Visual Studio Dev11 or later, please use the override that \r\n            specifies a VisualStudioVersion. \r\n            ":"\r\n            在最新的.NET Framework SDK中获取完全合格的文件路径。如果找不到.NET Framework SDK，则错误。\r\n            定位.NET 3.5或更高时，请查看与Visual Studio 2010相关的位置。如果您想\r\n            针对以Visual Studio Dev11或更高版本发货的.NET Framework SDK，请使用该替代\r\n            指定一个VisualStudioversion。\r\n            \r\n","\r\n            Object exposing host services to tasks during builds of projects\r\n            contained by this project collection.\r\n            By default, ":"\r\n            对象将主机服务暴露于项目构建期间\r\n            该项目集合包含。\r\n            默认，\r\n","\r\n            When adding a target to build a web project, we want to put a Condition on the Target node that\r\n            effectively says \"Only build this target if the web project is active (marked for building) in the \r\n            current solution configuration.\r\n            ":"\r\n            添加目标以构建Web项目时，我们想在目标节点上放置条件\r\n            有效地说：“只有在Web项目处于活动状态（标记为构建）的目标\r\n            当前的解决方案配置。\r\n            \r\n","GL":"gl\r\n","\r\n            \r\n             It is an arbitrary number that changes when this project reevaluates.\r\n             Hosts don't know whether an evaluation actually happened in an interval, but they can compare this number to\r\n             their previously stored value to find out, and if so perhaps decide to update their own state.\r\n             Note that the number may not increase monotonically.\r\n            \r\n             This number corresponds to the ":"当该项目重新评估时，这是一个任意数字。\r\n             主持人不知道评估是否实际上是在间隔中发生的，但是他们可以将此数字与\r\n             他们先前存储的价值以找出答案，如果可以的话，可以决定更新自己的状态。\r\n             请注意，该数字可能不会单调增加。\r\n            \r\n             这个数字对应于\r\n","\r\n            This enumeration represents the kinds of context that can be\r\n            stored in the context stack.\r\n            ":"\r\n            这种枚举代表了可以成为的上下文\r\n            存储在上下文堆栈中。\r\n            \r\n","\r\n            Gets or sets the Inputs value.\r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"\r\n            获取或设置输入值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n","\r\n            Constructor allowing reverse enumeration\r\n            ":"\r\n            构建器允许反向枚举\r\n            \r\n","\r\n            This method takes a path to a solution file, parses the projects and project dependencies\r\n            in the solution file, and creates internal data structures representing the projects within\r\n            the SLN.  Used for conversion, which means it allows situations that we refuse to actually build. \r\n            ":"\r\n            此方法采取了解决方案文件的途径，解析项目和项目依赖性\r\n            在解决方案文件中，并创建代表项目中项目的内部数据结构\r\n            SLN。用于转换，这意味着它允许我们拒绝实际构建的情况。\r\n            \r\n","\r\n            Shred both items and metadata not contained in a transform.\r\n            ":"\r\n            转换中不包含两个项目和元数据。\r\n            \r\n","\r\n            Creates an unparented ProjectTargetElement, wrapping an unparented XmlElement.\r\n            Validates the name.\r\n            Caller should then ensure the element is added to a parent.\r\n            ":"\r\n            创建一个无与伦比的ProjectTargetElement，包裹无与伦比的XMLELLEMENT。\r\n            验证名称。\r\n            然后，呼叫者应确保将元素添加到父。\r\n            \r\n","\r\n            This is actually safe to call during enumeration of children, because it\r\n            doesn't bother to clear the child's NextSibling (or PreviousSibling) pointers.\r\n            To determine whether a child is unattached, check whether its parent is null,\r\n            or whether its NextSibling and PreviousSibling point back at it.\r\n            DO NOT BREAK THIS VERY USEFUL SAFETY CONTRACT.\r\n            ":"\r\n            这实际上是在孩子列举期间安全打电话的，因为它\r\n            不用费心清除孩子的下次（或先前的）指针。\r\n            要确定孩子是否无辅助，请检查其父母是否为null，\r\n            还是它的次要和上班重点是回到它。\r\n            不要打破这份非常有用的安全合同。\r\n            \r\n","\r\n            When this is true we call the engine with all the projects at once instead of \r\n            calling the engine once per project\r\n            ":"\r\n            当这是真的时，我们一次将所有项目称为引擎\r\n            每个项目一次致电一次引擎\r\n            \r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n            Adds a new property after the last property in this property group.\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n            在此属性组的最后一个属性之后添加一个新属性。\r\n            \r\n","\r\n            An evaluated design-time property \r\n            ":"\r\n            评估的设计时间属性\r\n            \r\n","\r\n            Creates a ProjectRootElement from the contents of this ProjectInstance.\r\n            ":"\r\n            从该ProjectInstance的内容中创建一个ProjectRootlement。\r\n            \r\n","\r\n            The request's configuration.\r\n            ":"\r\n            请求的配置。\r\n            \r\n","\r\n            Retrieves a built-in metadata value and caches it.\r\n            Never returns null.\r\n            ":"\r\n            检索内置的元数据值并缓存。\r\n            永远不会返回零。\r\n            \r\n"," has been called but before all existing submissions have completed.\r\n            ":" 已被调用，但在所有现有意见完成之前。\r\n            \r\n","\r\n            Maximum nesting level of Choose elements. No reasonable project needs more than this\r\n            ":"\r\n            选择元素的最大嵌套水平。没有合理的项目需要更多\r\n            \r\n","\r\n            Creates a logger for testing purposes that gathers profiling information but doesn't save a file to disk with the report\r\n            ":"\r\n            为测试目的创建记录仪，该记录仪收集分析信息，但不会将文件保存到报告中的磁盘\r\n            \r\n","\r\n            Whether ReevaluateIfNecessary is temporarily disabled.\r\n            This is useful when the host expects to make a number of reads and writes\r\n            to the project, and wants to temporarily sacrifice correctness for performance.\r\n            ":"\r\n            重新评估不必要的是暂时禁用。\r\n            当主机期望进行多个读取和写入时，这很有用\r\n            到该项目，并希望暂时牺牲绩效的正确性。\r\n            \r\n","The name of the file to search for.":"要搜索的文件的名称。\r\n","\r\n            Applies uncached item operations (include, remove, update) in order. Since Remove effectively overwrites Include or Update,\r\n            Remove operations are preprocessed (adding to globsToIgnore) to create a longer list of globs we don't need to process\r\n            properly because we know they will be removed. Update operations are batched as much as possible, meaning rather\r\n            than being applied immediately, they are combined into a dictionary of UpdateOperations that need to be applied. This\r\n            is to optimize the case in which as series of UpdateOperations, each of which affects a single ItemSpec, are applied to all\r\n            items in the list, leading to a quadratic-time operation.\r\n            ":"\r\n            按顺序应用未切换的项目操作（包括，删除，更新）。由于有效删除覆盖包括或更新，\r\n            删除操作是预处理的（添加到Globstoignore），以创建不需要处理的较长的地球列表\r\n            正确，因为我们知道它们将被删除。更新操作尽可能多地批量\r\n            除了立即应用，它们被合并为需要应用的更新操作字典。这个\r\n            是为了优化作为一系列更新操作（每种影响单个项目Spec）的情况，应用于所有情况\r\n            列表中的项目，导致二次操作。\r\n            \r\n","\r\n            Create a new process\r\n            ":"\r\n            创建一个新过程\r\n            \r\n","The ToolsVersion we should use to build this project.  Should never be null.":"我们应该用来构建该项目的工具库。永远不要无效。\r\n","\r\n            Method called when a context terminates.\r\n            ":"\r\n            当上下文终止时调用方法。\r\n            \r\n","end column number (0 if not applicable)":"末端列号（0如果不适用）\r\n","\r\n            PlatformIdentity  metadata name and manifest attribute\r\n            ":"\r\n            平台识别性元数据名称和清单属性\r\n            \r\n","\r\n            Route the build event to the correct filter or sink depending on what the sinId is in the build event. \r\n            ":"\r\n            根据构建事件中的SINID是什么，将构建事件路由到正确的过滤器或下沉。\r\n            \r\n","\r\n            This list of properties in this ":"\r\n            此属性列表\r\n","\r\n            The sub-toolset version that, combined with the ToolsVersion, was used to determine\r\n            the toolset properties for this project.  \r\n            ":"\r\n            结合工具交换的子量表版本用于确定\r\n            该项目的工具集属性。\r\n            \r\n","Streaming context":"流上下文\r\n","The request whose results we should return":"我们应该返回的结果的请求\r\n","\r\n            The actual metadata dictionary.\r\n            ":"\r\n            实际的元数据字典。\r\n            \r\n","\r\n            Type of handler for BuildStartedEvent events\r\n            ":"\r\n            用于buildStartedEvent事件的处理程序类型\r\n            \r\n","\r\n            Returns \"true\" if it's a project that's expected to be buildable, or false if it's \r\n            not (e.g. a solution folder) \r\n            ":"返回“ true”，如果是一个预期可以建立的项目，或者是错误的\r\n            没有（例如，解决方案文件夹）\r\n            \r\n","Arguments for messageResourceName":"Messageresourcename的论点\r\n","\r\n            When true the commandline message is sent\r\n            ":"\r\n            当正确发送命令行消息时\r\n            \r\n","The next build request ID.":"下一个构建请求ID。\r\n","\r\n            Message\r\n            ":"\r\n            信息\r\n            \r\n","\r\n            Read the property-group-under-target into an instance.\r\n            Do not evaluate anything: this occurs during build.\r\n            ":"\r\n            将属性组的属性组为实例。\r\n            不要评估任何内容：这发生在构建过程中。\r\n            \r\n","\r\n            Load and parse the specified project import, which may have wildcards,\r\n            into one or more ProjectRootElements.\r\n            Caches the parsed import into the provided collection, so future\r\n            requests can be satisfied without re-parsing it.\r\n            ":"\r\n            负载并解析指定的项目导入，可能具有通配符，\r\n            分为一个或多个项目。\r\n            缓存解析的导入到提供的收藏中，因此未来\r\n            可以在不重新分配的情况下满足请求。\r\n            \r\n","\r\n            Adds a configuration to this solution\r\n            ":"\r\n            在此解决方案中添加配置\r\n            \r\n","\r\n            The cancellation token\r\n            ":"取消令牌\r\n            \r\n","\r\n            Set when the events are about to be disposed, so that tardy\r\n            calls on the event handlers don't try to reset a disposed event\r\n            ":"\r\n            当事件即将被处置时设置，以便迟到\r\n            呼叫活动处理程序不会试图重置处置事件\r\n            \r\n","Encoding if specified, else null.":"编码如果指定，则null。\r\n","Command line arguments that should go into a temporary response file":"命令行参数应该进入临时响应文件\r\n","\r\n            Number of times the ginourmous string hit.\r\n            ":"\r\n            Ginourmous弦命中的次数。\r\n            \r\n","\r\n            The build engine automatically sets this property to allow tasks to call back into it.\r\n            This is a convenience property so that task authors inheriting from this class do not\r\n            have to cast the value from IBuildEngine to IBuildEngine2.\r\n            ":"\r\n            构建引擎会自动设置此属性，以允许任务回电。\r\n            这是一个便利属性，因此从本班继承的任务作者不\r\n            必须将价值从Ibuildengine到Ibuildengine2。\r\n            \r\n","\r\n            Called by the Node.  Non-overlapping with other calls from the Node.":"\r\n            由节点调用。与节点的其他呼叫的非重叠。\r\n","The instance to be registered.":"要注册的实例。\r\n","\r\n            Helper class with element names in Platform.xml\r\n            ":"\r\n            platform.xml中带有元素名称的助手类\r\n            \r\n","\r\n            Constructor overload accepting a registry wrapper for unit testing purposes only\r\n            ":"\r\n            构造函数超载仅接受注册表包装器以进行单元测试目的\r\n            \r\n","\r\n            Name of the task, possibly qualified, as it appears in the project\r\n            ":"\r\n            该任务的名称，可能是合格的，如项目中出现\r\n            \r\n","\r\n            ProjectUsingTaskBodyElement class represents the Task element under the using task element in the MSBuild project.\r\n            ":"\r\n            ProjectingTaskBodylement类代表MSBuild项目中使用任务元素下的任务元素。\r\n            \r\n","\r\n            Constructs a BuildRequestData for build requests based on project files.\r\n            ":"\r\n            构建基于项目文件的构建请求的BuildRequestData。\r\n            \r\n","The evaluation event context for the project.":"项目的评估事件上下文。\r\n","An optional list to be populated with missing targets":"一个可选的列表，该列表被丢失的目标填充\r\n","Path to the manifest xml file.":"通往清单XML文件的路径。\r\n","\r\n            Creates a Task element for use in a using task.\r\n            Caller must add it to the location of choice in the project under a using task.\r\n            ":"\r\n            创建一个任务元素以用于使用任务。\r\n            呼叫者必须在使用任务下的项目中将其添加到项目的选择位置。\r\n            \r\n",".\r\n            Cannot be changed once the project has been created.\r\n            ":"。\r\n            一旦创建项目就无法更改。\r\n            \r\n","\r\n            The time when event was raised.\r\n            ":"\r\n            活动筹集的时间。\r\n            \r\n","\r\n            The timeout for the engine to shutdown.\r\n            ":"\r\n            引擎关闭的超时。\r\n            \r\n","\r\n            Gets the names of custom metadata on the item.\r\n            If there is none, returns an empty collection.\r\n            Does not include built-in metadata.\r\n            Computed, not necessarily fast.\r\n            ":"\r\n            在项目上获取自定义元数据的名称。\r\n            如果没有，则返回一个空的集合。\r\n            不包括内置元数据。\r\n            计算，不一定快。\r\n            \r\n","\r\n            Get a read-only collection of the child item definition groups, if any, in reverse order\r\n            ":"\r\n            以相反的顺序获取儿童项目定义组（如果有的话）的只读收集\r\n            \r\n","\r\n            The list of global properties we set on each metaproject and which get passed to each project when building.\r\n            ":"\r\n            我们在每个Metaproject上设置的全局属性列表，并在构建时将其传递给每个项目。\r\n            \r\n","\r\n            these files list all default tasks and task assemblies that do not need to be explicitly declared by projects\r\n            ":"\r\n            这些文件列出了不需要通过项目明确声明的所有默认任务和任务组件\r\n            \r\n","\r\n            Creates a new metadata table aggregating the bucket and item definition tables.\r\n            ":"\r\n            创建一个新的元数据表，汇总了存储桶和项目定义表。\r\n            \r\n","\r\n            The default value for a property is set at the bottom of the project file (usually via an import of a .targets file,\r\n            where the property definition is conditional on whether the property has not already been defined.)\r\n            ":"\r\n            属性的默认值设置在项目文件底部（通常是通过.targets文件的导入，\r\n            属性定义是有条件的，是否尚未定义属性。）\r\n            \r\n","\r\n            Private constructor called by the static Evaluate method.\r\n            ":"\r\n            由静态评估方法调用的私人构造函数。\r\n            \r\n","\r\n            Actually writes and sends the packet. This can't be called in parallel\r\n            because it reuses the _writeBufferMemoryStream, and this is why we use\r\n            the _packetWriteDrainTask to serially chain invocations one after another.\r\n            ":"\r\n            实际写并发送数据包。这不能并行称呼\r\n            因为它重复了_writeBufferMorystream，这就是为什么我们使用\r\n            _packetWritedRaintask接一个地串行链条调用。\r\n            \r\n","\r\n            Returns an existing ProjectRootElement for the specified file path, if any.\r\n            If none exists, calls the provided delegate to load one, and adds that to the cache.\r\n            The reason that it calls back to do this is so that the cache is locked between determining\r\n            that the entry does not exist and adding the entry.\r\n            \r\n            If ":"\r\n            返回指定文件路径的现有projectRootelement（如果有）。\r\n            如果不存在，请调用提供的委托加载一个，并将其添加到缓存中。\r\n            它回电这样做的原因是使缓存在确定之间锁定\r\n            该条目不存在并添加条目。\r\n            \r\n            如果\r\n","\r\n            The set of properties which identify the configuration and platform to build a project with\r\n            ":"识别配置和平台以构建项目的一组属性\r\n            \r\n","\r\n            Used internally to control behavior of insertion into a ":"\r\n            内部用于控制插入到一个\r\n","\r\n            Bubbles a Project dirty notification up to the ProjectRootElementCache and ultimately to the ProjectCollection.\r\n            ":"\r\n            在ProjectRootelementCache并最终到ProjectCollection之前将项目弄脏通知。\r\n            \r\n","\r\n            Attempts to get a result from the cache to satisfy the request, and returns the appropriate response if possible.\r\n            ":"\r\n            试图从缓存中获得结果以满足请求，并在可能的情况下返回适当的响应。\r\n            \r\n","The BuildRequestEntry for which we are building targets.":"我们正在构建目标的BuildRequestEntry。\r\n","\r\n            Local collection.\r\n            ":"\r\n            本地收藏。\r\n            \r\n","\r\n            The name of the category to which this property belongs to. \r\n            ":"\r\n            该属性所属类别的名称。\r\n            \r\n","\r\n            The instantiated task class.\r\n            ":"\r\n            实例化任务类。\r\n            \r\n","\r\n            The node id.\r\n            ":"\r\n            节点ID。\r\n            \r\n","\r\n            Extension method to read a series of bytes from a stream\r\n            ":"\r\n            扩展方法可以从流中读取一系列字节\r\n            \r\n","\r\n            Gets the requests assigned to a particular configuration.\r\n            ":"\r\n            获取分配给特定配置的请求。\r\n            \r\n","\r\n            The set of intrinsic tasks mapped for this process.\r\n            ":"\r\n            为此过程映射的一组内在任务。\r\n            \r\n","\r\n            Sets the metadata value.\r\n            ":"\r\n            设置元数据值。\r\n            \r\n"," is false, the call can return\r\n            zero. Otherwise the return value is positive.":" 是错误的，通话可以返回\r\n            零。否则回报值为正。\r\n","\r\n            version 1.1\r\n            ":"\r\n            版本1.1\r\n            \r\n","Hashtable's capacity overflowed and went negative. Check load factor, capacity and the current size of the table.":"Hashtable的容量溢出并消失。检查负载因子，容量和表格的当前大小。\r\n","\r\n            The singleton comparer to use when a fuzzy match is desired.  Note that this still does an exact match on the\r\n            name, but does a fuzzy match on the task identity parameters.\r\n            ":"\r\n            需要进行模糊匹配时使用的单例比较。请注意，这仍然在\r\n            名称，但在任务身份参数上进行模糊匹配。\r\n            \r\n","\r\n            Common internal constructor\r\n            ":"\r\n            常见的内部构造函数\r\n            \r\n","\r\n            Legacy threading semantic data associated with this build manager.\r\n            ":"\r\n            与此构建管理器关联的传统线程数据。\r\n            \r\n","\r\n            Retrieves a new configuration ID\r\n            ":"\r\n            检索新的配置ID\r\n            \r\n","Key comparer":"密钥比较\r\n","\r\n            Insert the child after the reference child.\r\n            Reference child if provided must be parented by this element.\r\n            Reference child may be null, in which case this is equivalent to ":"\r\n            在参考子里插入孩子。\r\n            参考子女（如果提供）必须由此元素育儿。\r\n            参考儿童可能是无效的，在这种情况下，这等同于\r\n","\r\n            Gets or sets the full path to the project file that was imported. Will be ":"\r\n            获取或设置通往已导入的项目文件的完整路径。将会\r\n","\r\n            Parameter to be formatted into the dirty reason\r\n            ":"\r\n            要格式化为肮脏原因的参数\r\n            \r\n","\r\n            Gets or sets the identifier of the node which the forwarding logger is attached to.\r\n            ":"\r\n            获取或设置转发记录器所附加到的节点的标识符。\r\n            \r\n","The id of the node to create.":"要创建节点的ID。\r\n","\r\n            This interface extends ":"\r\n            此接口扩展\r\n","\r\n            The toolsversion that was originally on the project's Project root element\r\n            ":"\r\n            最初在项目项目根元素上\r\n            \r\n","\r\n            Returns a human readable error string for a native error code, like ":"\r\n            返回本机错误代码的人类可读错误字符串，例如\r\n","\r\n            Initialize an unparented ProjectChooseElement\r\n            ":"\r\n            初始化无与伦比的ProjectChooselement\r\n            \r\n","\r\n            This field is mandatory and culture invariant.\r\n            This field cannot be set to the empty string.\r\n            ":"\r\n            该领域是强制性的，文化不变。\r\n            该字段无法设置为空字符串。\r\n            \r\n",", but the message field contains the caller-provided part in addition\r\n            to the system-provided message (rather than replacing the system provided message).\r\n            ":"，但是消息字段还包含呼叫者提供的部分。\r\n            到系统提供的消息（而不是替换系统提供的消息）。\r\n            \r\n","\r\n            Removes the provided project from the collection.\r\n            If project was not loaded, returns false.\r\n            ":"\r\n            从集合中删除提供的项目。\r\n            如果未加载项目，则返回false。\r\n            \r\n","\r\n            Accumulated project performance information.\r\n            ":"\r\n            累积的项目绩效信息。\r\n            \r\n","\r\n            Collection of all the search paths for project imports, per OS\r\n            ":"\r\n            每个操作系统的所有搜索路径收集\r\n            \r\n","\r\n            This is sealed because it is virtual and called in a constructor; by sealing it we\r\n            satisfy FXCop that nobody will override it to do something that would rely on\r\n            unconstructed state.\r\n            Should be protected+internal.\r\n            ":"\r\n            这是密封的，因为它是虚拟的，并且在构造函数中被调用。通过密封我们\r\n            满足FXCOP，没有人会覆盖它来做一些会依靠的事情\r\n            未结构的状态。\r\n            应受到保护+内部。\r\n            \r\n","\r\n            Check to allow the inproc node to have exclusive ownership of the operating environment\r\n            ":"\r\n            检查以允许INPROC节点拥有操作环境的独家所有权\r\n            \r\n","\r\n            True to remove duplicates during the add.\r\n            ":"\r\n            在添加过程中删除重复项。\r\n            \r\n","\r\n            Cache for min Visual Studio version from manifest\r\n            ":"\r\n            Min Visual Studio版本的缓存来自清单\r\n            \r\n","The project from which this item was created":"创建此项目的项目\r\n","The tools versions to use":"要使用的工具版本\r\n","\r\n            Reset state for unit tests that want to set the env var\r\n            ":"\r\n            要设置env var的单元测试的重置状态\r\n            \r\n","\r\n            Change to the specified state.  Update internal counters.\r\n            ":"\r\n            更改为指定状态。更新内部计数器。\r\n            \r\n","This represents schema information (name, allowed values, etc) of a ":"这表示A的模式信息（名称，允许值等）\r\n","\r\n            Sets a property which is not derived from Xml.\r\n            ":"\r\n            设置未从XML派生的属性。\r\n            \r\n","\r\n            Given a TaskHostContext, returns the name of the executable we should be searching for. \r\n            ":"\r\n            给定任务主持康普特文，返回我们应该搜索的可执行文件的名称。\r\n            \r\n","\r\n            Provides an enumerator over the set of sub-toolset names available to a particular\r\n            tools version.  MSBuild config files do not currently support sub-toolsets, so\r\n            we return nothing.\r\n            ":"\r\n            在可用的一组子量表名称上提供枚举器\r\n            工具版本。 MSBUILD配置文件当前不支持子处理器，因此\r\n            我们什么都没有。\r\n            \r\n","The item to copy.":"要复制的项目。\r\n","\r\n             1) specifying a task assembly using BOTH its assembly name (strong or weak) AND its file path is not allowed\r\n             2) when specifying the assembly name, the file extension (usually \".dll\") must NOT be specified\r\n             3) when specifying the assembly file, the file extension MUST be specified\r\n             ":"\r\n             1）使用其汇编名称（强或弱）指定任务组件，并且不允许使用其文件路径\r\n             2）指定汇编名称时，不得指定文件扩展名（通常为“ .dll”）\r\n             3）指定汇编文件时，必须指定文件扩展名\r\n             \r\n","\r\n            Starts a build request\r\n            ":"\r\n            开始构建请求\r\n            \r\n","\r\n            Total accumulated time so far.\r\n            ":"\r\n            到目前为止，总累积时间。\r\n            \r\n","\r\n            Create a dictionary with standard properties.\r\n            ":"\r\n            创建具有标准属性的字典。\r\n            \r\n","Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.":"全球属性要评估。在这种情况下，将使用包含项目集合的全局属性的情况。\r\n","\r\n            The tools version this project was evaluated with, if any.\r\n            Not necessarily the same as the tools version on the Project tag, if any;\r\n            it may have been externally specified, for example with a /tv switch.\r\n            ":"\r\n            该项目的工具版本通过了，如果有的话。\r\n            不一定与项目标签上的工具版本相同（如果有）；\r\n            它可能已被外部指定，例如A /TV开关。\r\n            \r\n","\r\n            Loads the project specified by the configuration's parameters into the configuration block.\r\n            ":"\r\n            将配置参数指定的项目加载到配置块中。\r\n            \r\n","\r\n            The taskFactoryLoggingHost will log messages in the context of the target where the task is first used.\r\n            ":"\r\n            TaskFactoryLoggingHost将在首次使用任务的目标上下文中记录消息。\r\n            \r\n"," doesn't devirtualize on .NET Framework, so we always ensure\r\n            ":" 不会在.NET框架上脱颖而出，因此我们始终确保\r\n            \r\n","\r\n            Initializes this factory for instantiating tasks with a particular inline task block.\r\n            ":"\r\n            初始化此工厂以使用特定的内联任务块实例化任务。\r\n            \r\n","\r\n                Path to the project file being built.\r\n            ":"\r\n                构建项目文件的路径。\r\n            \r\n","\r\n            Given a registry location containing a property name and value, create the ToolsetPropertyDefinition that maps to it\r\n            ":"\r\n            给定一个包含属性名称和值的注册表位置，创建映射到它的toolsetPropertyDefinition\r\n            \r\n","\r\n            Appends a command-line switch that takes a ITaskItem[] parameter,\r\n            and add double-quotes around the individual filenames if necessary.\r\n            This method appends a space to the command line (if it's not currently empty) before the switch.\r\n            ":"\r\n            附加一个命令行开关，该开关将iTaskItem []参数，\r\n            并在必要时在单个文件名周围添加双重报价。\r\n            此方法在开关之前将一个空间附加到命令行（如果当前不是空）。\r\n            \r\n","\r\n            Build a list of targets with specified loggers.\r\n            Returns true on success, false on failure.\r\n            Targets may be null.\r\n            Loggers may be null.\r\n            Remote loggers may be null.\r\n            Only valid if mutable.\r\n            ":"\r\n            用指定的记录仪构建目标列表。\r\n            成功返回，成功，失败。\r\n            目标可能为无效。\r\n            伐木者可能是无效的。\r\n            远程记录器可能为空。\r\n            仅有效，如果可变。\r\n            \r\n","\r\n            The name of the property\r\n            ":"\r\n            属性的名称\r\n            \r\n","\r\n            Gets the items\r\n            ":"\r\n            获取物品\r\n            \r\n","\r\n            Initialize a parented ProjectTaskElement\r\n            ":"\r\n            初始化育儿projectTaskelement\r\n            \r\n","Switch parameters to append, quoted if necessary. If null, this method has no effect.":"切换参数以附加，如有必要。如果无效，则该方法无效。\r\n","Exception which will be used to generate the error message":"异常将用于生成错误消息\r\n"," (If Bar has globs, they will have been included when querying Bar ProjectItems for globs)\r\n            ":" （如果BAR有Globs，则在查询GAR ProjectItems的Globs时将包括在内）\r\n            \r\n","The reason the parent built this target.":"父母建立此目标的原因。\r\n","\r\n            For TargetStarted events, this stores the filename where the Target is defined\r\n            (e.g., Microsoft.Common.targets).  This is different than the project that is \r\n            being built.  \r\n            For ProjectStarted events, this is null.\r\n            ":"\r\n            对于目标启动事件，该将文件名存储在定义目标的位置\r\n            （例如Microsoft.common.targets）。这与项目不同\r\n            正在建设。\r\n            对于项目开始的事件，这是无效的。\r\n            \r\n","\r\n            Initializes a new instance of BuildEventArgsReader using a BinaryReader instance\r\n            ":"\r\n            使用BinaryReader实例初始化buildeventargsreader的新实例\r\n            \r\n","\r\n            The project instance properties we should transfer.\r\n            ":"\r\n            我们应该传输的项目实例属性。\r\n            \r\n","\r\n            Dictionary mapping submission id to projects in progress.\r\n            ":"\r\n            对正在进行的项目的字典映射提交ID。\r\n            \r\n"," to grant resources to a node.\r\n            ":" 将资源授予节点。\r\n            \r\n","\r\n            Clears out the configurations\r\n            ":"\r\n            清除配置\r\n            \r\n","\r\n            Console logger parameter value split character.\r\n            ":"\r\n            控制台记录器参数值拆分字符。\r\n            \r\n","The property which will receive the output.":"将接收输出的属性。\r\n","\r\n            The set of targets which are currently in progress for the blocked global request ID.\r\n            ":"\r\n            当前正在进行阻止全局请求ID的目标集。\r\n            \r\n","\r\n            Reads the attributes from the \"FileList\" element of the SDK manifest.\r\n            ":"\r\n            从SDK清单的“ filelist”元素中读取属性。\r\n            \r\n","\r\n            The build component host\r\n            ":"\r\n            构建组件主机\r\n            \r\n","\r\n            Cache of tasks already found using fuzzy matching,\r\n            keyed by the task name requested.\r\n            Value is a dictionary of all possible matches for that \r\n            task name, by unique identity.\r\n            ":"使用模糊匹配已找到的任务缓存，\r\n            由请求的任务名称锁定。\r\n            价值是所有可能匹配的字典\r\n            任务名称，通过唯一身份。\r\n            \r\n","\r\n            The global request id of the request which is being responded to.\r\n            ":"\r\n            正在响应的请求的全局请求ID。\r\n            \r\n","\r\n             This field is optional.\r\n            ":"\r\n             该字段是可选的。\r\n            \r\n","Larger than collection size.":"大于收藏尺寸。\r\n","\r\n            Get a read-only collection of the child items, if any, in all item groups anywhere in the project file.\r\n            Not restricted to root item groups: traverses through Choose elements.\r\n            ":"\r\n            在项目文件中任何地方的所有项目组中获取仅阅读子项（如果有）的收集。\r\n            不限于根项目组：通过选择元素进行遍历。\r\n            \r\n","\r\n            The file is excluded if it is within any of the specified excluded input paths or any subdirectory of the paths.\r\n            It also assumes the file name is already converted to Uppercase Invariant.\r\n            ":"\r\n            如果文件在任何指定的输入路径或路径的任何子目录中，则将其排除在外。\r\n            它还假设文件名已转换为大写不变。\r\n            \r\n","\r\n            The build engine automatically sets this property to allow tasks to call back into it.\r\n            ":"\r\n            生成引擎会自动设置此属性以允许任务回调到它。\r\n            \r\n","The handler for the packets.":"数据包的处理程序。\r\n","\r\n            Given a list of real configuration IDs, returns the id of the config with the largest plan time.\r\n            ":"\r\n            给定的真实配置ID列表，以最大的计划时间返回配置的ID。\r\n            \r\n","\r\n            Constants used by the Engine\r\n            ":"\r\n            引擎使用的常数\r\n            \r\n","\r\n            Build event context\r\n            ":"\r\n            构建事件上下文\r\n            \r\n","True if both references are equal, false otherwise.":"如果两个引用相等，则为fress，否则为错误。\r\n","\r\n            Task Parameter: Importance with which to log text from the\r\n            standard out stream.\r\n            ":"\r\n            任务参数：从\r\n            标准流。\r\n            \r\n","\r\n            Location of the condition, if any.\r\n            ":"\r\n            条件的位置（如果有）。\r\n            \r\n",", this field can be ":"，这个领域可以是\r\n","\r\n            Equals override.\r\n            ":"\r\n            等于覆盖。\r\n            \r\n","\r\n            The operation is only valid when there are no scheduled requests for this configuration.\r\n            ":"\r\n            该操作仅在没有计划的该配置请求时有效。\r\n            \r\n","\r\n            A queue used for enqueuing packets to write to the stream asynchronously.\r\n            ":"\r\n            一个队列用于启用数据包，以异步写入流。\r\n            \r\n","\r\n            Sends data to a specific node.\r\n            ":"\r\n            将数据发送到特定节点。\r\n            \r\n","\r\n            This field is optional and has the default value of ":"\r\n            该字段是可选的，具有默认值的\r\n","\r\n            Creates a new build configuration cache.\r\n            ":"\r\n            创建一个新的构建配置缓存。\r\n            \r\n","\r\n            Constructor for those who intend to set all properties themselves.\r\n            ":"\r\n            为那些打算设置所有属性的人的构造函数。\r\n            \r\n","\r\n            Items, properties and other project level values to display\r\n            in the debugger, if we are being debugged.\r\n            If not debugging, this is null.\r\n            ":"\r\n            要显示的项目，属性和其他项目级别值\r\n            在调试器中，如果我们被调试。\r\n            如果不调试，这是无效的。\r\n            \r\n","\r\n            Gets and sets the value of the AssemblyName attribute.\r\n            Returns empty string if it is not present.\r\n            ":"\r\n            获取并设置汇编名称属性的值。\r\n            如果不存在，则返回空字符串。\r\n            \r\n","\r\n            Writes a line from a resource string to the log, using the specified indentation.\r\n            ":"\r\n            使用指定的凹痕将从资源字符串到日志的行写入线。\r\n            \r\n","s are \r\n            immediately stripped off after loading of the xaml file.\r\n            ":"S是\r\n            加载XAML文件后立即脱掉。\r\n            \r\n","\r\n            Imports may contain references to \"projectImportSearchPaths\" defined in the app.config\r\n            toolset section. If this is the case, this method will search for the imported project\r\n            in those additional paths if the default fails.\r\n            ":"\r\n            导入可能包含对app.config中定义的“ ProjectImportSearchPaths”的引用\r\n            工具集部分。如果是这种情况，此方法将搜索导入的项目\r\n            在那些其他路径中，如果默认值失败。\r\n            \r\n","\r\n            Constructor not taking an item type.\r\n            This indicates that the user of this factory should set the item type\r\n            on it before using it to create items.\r\n            ":"\r\n            构造函数不使用项目类型。\r\n            这表明该工厂的用户应设置项目类型\r\n            在使用它之前创建项目之前。\r\n            \r\n","\r\n            Handle target started events\r\n            ":"\r\n            处理目标开始事件\r\n            \r\n","\r\n            Manages full tracking activation and suspension.\r\n            ":"\r\n            管理完整的跟踪激活和悬架。\r\n            \r\n","\r\n            Sets a property which does not come from the Xml.\r\n            ":"\r\n            设置不来自XML的属性。\r\n            \r\n","toolsVersion of the element":"元素的工具交换\r\n","\r\n            Retrieves the item-specs of all items of the specified type in the given item vector collection.\r\n            ":"\r\n            检索给定项目矢量集合中指定类型的所有项目的项目规格。\r\n            \r\n","\r\n            Number of workers to process work items.\r\n            ":"\r\n            处理工作项目的工人数量。\r\n            \r\n"," before setting the first\r\n            property and ":" 在设置第一个之前\r\n            财产和\r\n","\r\n            Maps a node id to the currently executing request, if any.\r\n            ":"\r\n            将节点ID映射到当前执行请求（如果有）。\r\n            \r\n","\r\n            Gets the global properties this project was evaluated with, if any.\r\n            Traverses project references.\r\n            ":"\r\n            获取全球属性，该项目已通过（如果有）进行了评估。\r\n            Travers项目参考。\r\n            \r\n","\r\n            Raises a telemetry event to all registered loggers.\r\n            ":"\r\n            向所有注册登记仪举办遥测活动。\r\n            \r\n","\r\n            Get the disk locations to search for sdks under. This can be overridden by an environment variable\r\n            ":"\r\n            获取磁盘位置以搜索下面的SDK。这可以被环境变量覆盖\r\n            \r\n","\r\n            Create the single dynamic module that will\r\n            contain all our types and states.\r\n            ":"\r\n            创建将会\r\n            包含我们所有类型和状态。\r\n            \r\n","The configuration the SDK is targeting. This should be Debug or Retail":"SDK的配置为目标。这应该是调试或零售\r\n","\r\n            Handle task started\r\n            ":"\r\n            处理任务开始\r\n            \r\n","\r\n            If the unique project name provided collides with one of the standard Solution project\r\n            entry point targets (Build, Rebuild, Clean, Publish), then disambiguate it by prepending the string \"Solution:\"\r\n            ":"\r\n            如果独特的项目名称与标准解决方案项目之一相撞\r\n            入口点目标（构建，重建，清洁，发布），然后通过准备字符串“解决方案：”来消除它。\r\n            \r\n",".\r\n            Since property names must be unique but need not be unique in the persisted store (due to other differences\r\n            in the data source such as item type) there may be times when Rule property names must be changed to be\r\n            unique in the XAML file, but without changing how the property is persisted in the MSBuild file.\r\n            It is in those cases where this property becomes useful.":"。\r\n            由于属性名称必须是唯一的，但在持久的商店中不必是唯一的（由于其他差异\r\n            在数据源（例如项目类型）中）有时可能必须将规则属性名称更改为\r\n            在XAML文件中唯一，但没有更改MSBUILD文件中的属性如何持续。\r\n            正是在这种属性有用的情况下。\r\n","\r\n            Get any property in the project that has the specified name,\r\n            otherwise returns null\r\n            ":"\r\n            获取具有指定名称的项目中的任何属性，\r\n            否则返回null\r\n            \r\n","\r\n            The maximum amount of memory to use.\r\n            ":"\r\n            最大使用的内存量。\r\n            \r\n"," is called.\r\n            Cancel calls may come in from any thread.  The implementation of this method should not block indefinitely.\r\n            ":" 叫做。\r\n            取消电话可能会来自任何线程。该方法的实现不应无限期阻止。\r\n            \r\n"," from it. No other operation is guaranteed to be supported.\r\n            ":" 从中。不保证支持其他操作。\r\n            \r\n","\r\n            This class implements the default logger that outputs event data\r\n            to the console (stdout). \r\n            It is a facade: it creates, wraps and delegates to a kind of BaseConsoleLogger, \r\n            either SerialConsoleLogger or ParallelConsoleLogger.\r\n            ":"\r\n            该类实现输出事件数据的默认记录器\r\n            到控制台（Stdout）。\r\n            它是一个立面：它为一种基本胶质器创建，包装和代表，\r\n            SerialConsoLogger或ParallelConsolelogger。\r\n            \r\n","\r\n            Type of delegate used to reset console color.\r\n            ":"\r\n            用于重置控制台颜色的委托类型。\r\n            \r\n","\r\n            This is a \"flags\" enum, allowing future settings to be added\r\n            in an additive, non breaking fashion.\r\n            ":"\r\n            这是一个“标志”枚举，允许添加未来的设置\r\n            以添加的，非破坏性的方式。\r\n            \r\n","\r\n            Any exception which occurs on a logging thread will go here.\r\n            ":"\r\n            记录线程上发生的任何例外都将进入此处。\r\n            \r\n","\r\n            Notifies the engine of a build result for a waiting build request.\r\n            ":"\r\n            通知等待构建请求的构建结果的引擎。\r\n            \r\n","\r\n            Whether the project has been explicitly marked as dirty. Generally this is not necessary to set; all edits affecting\r\n            this project will automatically make it dirty. However there are potential corner cases where it is necessary to mark it dirty\r\n            directly. For example, if the project has an import conditioned on a file existing on disk, and the file did not exist at\r\n            evaluation time, then someone subsequently writes the file, the project will not know that reevaluation would be productive,\r\n            and would not dirty itself. In such a case the host should help us by setting the dirty flag explicitly.\r\n            ":"\r\n            该项目是否已被明确标记为肮脏。通常，这是不需要设置的；所有影响的编辑\r\n            该项目将自动使其变得肮脏。但是，在某些潜在的角案件中有必要将其标记为脏\r\n            直接地。例如，如果该项目在磁盘上存在的文件上有导入条件，并且该文件不存在\r\n            评估时间，然后有人随后写文件，该项目不知道重新评估将是有效的，\r\n            而且不会肮脏。在这种情况下，主机应明确设置肮脏的标志来帮助我们。\r\n            \r\n","Assumes the itemspec passed in is escaped.":"假设通过ItemSpec被逃脱了。\r\n","UserFile":"Userfile\r\n","\r\n                Represents toggleable features of the MSBuild engine\r\n            ":"\r\n                表示MSBUILD引擎的可切换功能\r\n            \r\n"," to return a result.\r\n             ":" 返回结果。\r\n             \r\n","\r\n            Null if it hasn't been figured out yet; true if (some variation of) Visual Studio 2010 is installed on\r\n            the current machine, false otherwise.\r\n            ":"\r\n            如果尚未弄清楚，则无效； true if（某些变体）Visual Studio 2010已安装\r\n            当前的机器，否则为错误。\r\n            \r\n"," \r\n            This property goes along with ":" \r\n            此属性与\r\n","The context to use for evaluation.":"用于评估的上下文。\r\n","\r\n            Metadata on the item definition.\r\n            If there is no metadata, returns empty collection.\r\n            This is a read-only collection.\r\n            ":"\r\n            项目定义上的元数据。\r\n            如果没有元数据，则返回空收藏。\r\n            这是一个只读的集合。\r\n            \r\n","\r\n            Finds the LogOutProperty string to be printed in messages.\r\n            ":"\r\n            找到要在消息中打印的LogoutProperty字符串。\r\n            \r\n"," for the build request which this object is a result of, \r\n            and will be ":" 对于构建请求，此对象是\r\n            并会\r\n","\r\n            Whether or not to track ginormous strings.\r\n            ":"\r\n            是否跟踪巨大的弦。\r\n            \r\n","\r\n            The smallest size a string can be to be considered huge.\r\n            ":"\r\n            一根弦的最小尺寸可以被认为是巨大的。\r\n            \r\n","\r\n            MetadataValue is assumed to be in its escaped form. \r\n            ":"\r\n            假定元数据处于其逃脱形式。\r\n            \r\n","\r\n            The ID of the request we are blocked waiting for.\r\n            ":"\r\n            我们被阻止的请求的ID等待。\r\n            \r\n","The return value of this method is unaffected by the ":"该方法的返回值不受\r\n","\r\n            A class factory for task items.\r\n            ":"\r\n            一个班级工厂，用于任务项。\r\n            \r\n","\r\n            Indicates the request is ready to reacquire the node.\r\n            ":"\r\n            指示该请求已准备好重新召集节点。\r\n            \r\n","\r\n            this event is raised to log any build status event\r\n            ":"\r\n            此事件被提高以记录任何构建状态事件\r\n            \r\n","\r\n            Starts up the node and processes messages until the node is requested to shut down.\r\n            ":"\r\n            启动节点并处理消息，直到要求关闭节点为止。\r\n            \r\n","\r\n            Unevaluated remove\r\n            ":"\r\n            未评估的删除\r\n            \r\n","\r\n            The host object, from ITask\r\n            ":"主机对象，来自itask\r\n            \r\n","The instance as created by the constructor call.":"构造函数调用创建的实例。\r\n","\r\n            Valid attributes on usingtask element\r\n            ":"\r\n            使用TASK元素上的有效属性\r\n            \r\n","\r\n            A response from the scheduler indicating where a build request should be handled.\r\n            ":"调度程序的响应指示应在何处处理构建请求。\r\n            \r\n","\r\n             This method can be used to minimize the memory overhead\r\n             once it is known that no new elements will be added.\r\n            \r\n             To allocate minimum size storage array, execute the following statements:\r\n            \r\n             dictionary.Clear();\r\n             dictionary.TrimExcess();\r\n             ":"\r\n             此方法可用于最大程度地减少内存开销\r\n             一旦知道将不会添加新元素。\r\n            \r\n             要分配最小尺寸存储阵列，请执行以下语句：\r\n            \r\n             dictionary.clear（）;\r\n             dictionary.trimexcess（）;\r\n             \r\n","The configuration with the specified id.":"具有指定ID的配置。\r\n","\r\n                Context used by an ":"\r\n                上下文由\r\n","Project file's location.":"项目文件的位置。\r\n","\r\n            Exception subclass that ToolsetReaders should throw.\r\n            ":"\r\n            异常子类应投掷工具集。\r\n            \r\n"," containing strings that were excluded.\r\n            ":" 包含被排除在外的字符串。\r\n            \r\n","\r\n            Initialize an in-memory, empty ProjectRootElement instance that can be saved later using the specified path and ":"\r\n            初始化一个内存中空的项目Rootelement实例，以后可以使用指定的路径和\r\n","\r\n            Expand the match provided into a string, and append that to the provided InternableString.\r\n            Returns true if ExpanderOptions.BreakOnNotEmpty was passed, expression was going to be non-empty, and so it broke out early.\r\n            ":"\r\n            将提供的匹配分布到一个字符串中，并将其附加到提供的InteralableString。\r\n            如果通过扩展，breakonnotempty通过，表达将是非空的，那么返回是正确的。\r\n            \r\n","\r\n            Enters a legacy calltarget scope.\r\n            ":"\r\n            进入传统的calltarget范围。\r\n            \r\n","\r\n            Intrinsic function that returns the number of items in the list\r\n            ":"\r\n            返回列表中项目数的固有功能\r\n            \r\n","The left hand operand.":"左手操作数。\r\n","\r\n            This field is optional. Note that this field returns only the categories that were explicitly defined and do\r\n            not contain any auto-generated categories. When a ":"\r\n            该字段是可选的。请注意，此字段仅返回明确定义和执行的类别\r\n            不包含任何自动生成类别。当一个\r\n","\r\n            Handler for blocked request events.\r\n            ":"\r\n            用于阻止请求事件的处理程序。\r\n            \r\n","\r\n            Why TLDA decided this entry was out of date\r\n            ":"\r\n            为什么TLDA决定此条目已过时\r\n            \r\n","itemsByEvaluatedInclude":"totembyEvaledinclude\r\n","\r\n            Implementation of IKeyed exposing the metadatum name\r\n            ":"\r\n            实施IKEYED公开元数据名称\r\n            \r\n","\r\n            Implementation of IMetadataTable that can be passed to expander to expose only built-in metadata on this item.\r\n            Built-in metadata is stored in a separate table so it can be cleared out when the item is renamed, as this invalidates the values.\r\n            Also, more importantly, because typically the same regular metadata values can be shared by many items, \r\n            and keeping item-specific metadata out of it could allow it to be implemented as a copy-on-write table.\r\n            ":"\r\n            可以传递以扩展的imetadatatabable的实施，以仅在此项目上暴露内置元数据。\r\n            内置的元数据存储在单独的表中，因此可以在项目重命名时清除，因为这使该值无效。\r\n            此外，更重要的是，因为通常可以通过许多项目共享相同的常规元数据值，\r\n            并将特定于项目的特定元数据放在其之外，可以使其作为抄写表的复制表实现。\r\n            \r\n","The node making the report.":"节点制作报告。\r\n","\r\n            The callback used to invoke the target builder.\r\n            ":"\r\n            用于调用目标构建器的回调。\r\n            \r\n","\r\n            Creates the target result dictionary.\r\n            ":"\r\n            创建目标结果词典。\r\n            \r\n","The file information which will describe where the warning happened":"将描述警告发生在哪里的文件信息\r\n","\r\n            Name of the group matching the prefix on a metadata expression, for example \"Compile.\" in \"%(Compile.Object)\"\r\n            ":"在元数据表达式上匹配前缀的组名称，例如“编译”。在“％（compile.object）”中\r\n            \r\n","\r\n            Indicates whether we should keep duplicate target outputs\r\n            ":"\r\n            指示我们是否应该保持重复的目标输出\r\n            \r\n","\r\n            The BuildRequest this class represents.\r\n            ":"\r\n            该类代表的BuildRequest。\r\n            \r\n","\r\n            Represents a collective set of common properties on BuildEventArgs. Used for deserialization.\r\n            ":"\r\n            代表BuildEventargs上的一组共同属性集。用于避难所。\r\n            \r\n","\r\n            Execute an ItemGroup element, including each child item expression\r\n            ":"\r\n            执行项目组元素，包括每个子项目表达式\r\n            \r\n","\r\n            Gets and sets the value of the TaskFactory attribute.\r\n            ":"\r\n            获取并设置TaskFactory属性的值。\r\n            \r\n","\r\n            Waits for the child node process to exit.\r\n            ":"\r\n            等待子节点流程退出。\r\n            \r\n","\r\n            The BuildManager sent a command instructing the node to terminate.\r\n            ":"\r\n            BuildManager发送了一个指示节点终止的命令。\r\n            \r\n","\r\n            Adds a new item to the collection of all items ignoring condition\r\n            ":"\r\n            将新项目添加到所有忽略条件的项目的集合中\r\n            \r\n","\r\n            A list of LoggerDescriptions which describe how to create a forwarding logger on a node. These are\r\n            passed to each node as they are created so that the forwarding loggers can be registered on them.\r\n            ":"\r\n            loggerDescriptions的列表，描述了如何在节点上创建转发记录器。这些是\r\n            传递给每个节点创建的节点，以便可以在它们上注册转发记录器。\r\n            \r\n","\r\n            VisualStudioVersion that corresponds to this subtoolset\r\n            ":"\r\n            VisualStudioversion与此子量相对应\r\n            \r\n","\r\n            Appends a string. Quotes are added if they are needed.\r\n            This method does not append a space to the command line before executing.\r\n            ":"\r\n            附加字符串。如果需要，则添加报价。\r\n            此方法在执行之前不会将空间附加到命令行。\r\n            \r\n","\r\n            The project finished event handler\r\n            ":"\r\n            项目完成的活动处理程序\r\n            \r\n","\r\n            Grab the path to the file, for use in our location information.\r\n            ":"\r\n            抓住文件的路径，以便在我们的位置信息中使用。\r\n            \r\n","\r\n            Use this for Directory.EnumerateFileSystemEntries(path, pattern, option)\r\n            ":"\r\n            将其用于目录。\r\n            \r\n","\r\n            SubToolsets that map to this toolset.\r\n            ":"\r\n            映射到此工具集的子工具集。\r\n            \r\n","expander options.":"扩展器选项。\r\n","\r\n             Given an instantiated task, this helper method sets the specified vector parameter. Vector parameters can be composed\r\n             of multiple item vectors. The semicolon is the only separator allowed, and white space around the semicolon is\r\n             ignored. Any item separator strings are not allowed, and embedded item vectors are not allowed.\r\n             ":"\r\n             给定实例化任务，此辅助方法设置了指定的向量参数。矢量参数可以组成\r\n             多项目向量。半分离龙是唯一允许的分离器，并且在半隆周围的空白是\r\n             被忽略。不允许任何项目分离器字符串，也不允许嵌入的项目向量。\r\n             \r\n","\r\n            Name of the value of GetDotNetFrameworkRootRegistryKey that contains the SDK install root path. When \r\n            targeting .NET 3.5 or above, looks in the locations associated with Visual Studio 2010.  If you wish \r\n            to target the .NET Framework SDK that ships with Visual Studio Dev11 or later, please use the override \r\n            that specifies a VisualStudioVersion. \r\n            ":"\r\n            包含SDK安装根路径的GetDotnetFrameworkRegregistryke的值的名称。什么时候\r\n            目标.NET 3.5或以上，在与Visual Studio 2010相关的位置中查看。如果您愿意\r\n            要针对使用Visual Studio Dev11或更高版本发货的.NET框架SDK，请使用覆盖\r\n            这指定了视觉识别。\r\n            \r\n","\r\n            When buckets are being created for batching purposes, this indicates which order the \r\n            buckets were created in, so that the target/task being batched gets called with the items\r\n            in the same order as they were declared in the project file.  For example, the first\r\n            bucket created gets bucketSequenceNumber=0, the second bucket created gets \r\n            bucketSequenceNumber=1, etc.\r\n            ":"\r\n            当为批处理目的创建存储桶时，这表明 \r\n            创建了存储桶，以便与项目一起调用正在批处理的目标/任务\r\n            按照项目文件中声明的顺序。  例如，第一\r\n            创建的bucket获取bucketSequenceNumber=0，创建的第二个bucket获取 \r\n            bucketSequenceNumber=1等。\r\n            \r\n","\r\n            The backing ":"\r\n            支持\r\n","The number of times the ":"次数\r\n","\r\n            Gathers toolset data from the registry and configuration file, if any.\r\n            NOTE:  this method is internal for unit testing purposes only.\r\n            ":"\r\n            从注册表和配置文件（如果有）收集工具集数据。\r\n            注意：此方法仅用于单元测试目的。\r\n            \r\n","\r\n            Creates an instance of this class given the item-spec.\r\n            ":"\r\n            给定项目规格创建该类的实例。\r\n            \r\n","A BuildResult if there is a matching one in the cache, otherwise null.":"如果缓存中有一个匹配的构建，则否则为null。\r\n","\r\n            Return a task registry stub for the tasks in the *.tasks file for this toolset         \r\n            ":"\r\n            返回 *.tasks文件中此工具集中的任务的任务注册表存根\r\n            \r\n","\r\n            Factory for serialization\r\n            ":"\r\n            工厂序列化\r\n            \r\n","\r\n            Set the built-in properties, most of which are read-only \r\n            ":"\r\n            设置内置属性，其中大多数是只读的\r\n            \r\n","\r\n            Given a root disk location and the target platform properties find all of the SDKs installed in that location.\r\n            ":"\r\n            给定一个根磁盘位置，目标平台属性可以找到该位置中安装的所有SDK。\r\n            \r\n","\r\n            Get the list of SDK folders which contains the DesignTime files for the sdk at the sdkRoot provided\r\n            in the order in which they should be searched for references.\r\n            ":"\r\n            获取SDK文件夹的列表，该文件夹包含SDKRoot的SDK的Designtime文件\r\n            按照他们应搜索参考的顺序。\r\n            \r\n","\r\n            Allows tasks to raise warning events to all registered loggers.\r\n            The build engine may perform some filtering or\r\n            pre-processing on the events, before dispatching them.\r\n            ":"\r\n            允许任务向所有注册登录机提出警告事件。\r\n            构建引擎可能会执行一些过滤或\r\n            在派遣事件之前对事件进行预处理。\r\n            \r\n","The parser which contains the solution file.":"包含解决方案文件的解析器。\r\n","\r\n            This method is called to reset the current directory to the one appropriate for this project.  It should be called any time\r\n            the project is resumed.\r\n            If the directory does not exist, does nothing.\r\n            This is because if the project has not been saved, this directory may not exist, yet it is often useful to still be able to build the project. \r\n            No errors are masked by doing this: errors loading the project from disk are reported at load time, if necessary.\r\n            ":"\r\n            该方法被调用以将当前目录重置为适合该项目的目录。应该随时称呼\r\n            该项目已恢复。\r\n            如果目录不存在，则无能为力。\r\n            这是因为如果项目尚未保存，则可能不存在此目录，但是仍然能够构建项目通常很有用。\r\n            这样做没有掩盖错误：如有必要，在加载时间报告了从磁盘上加载项目的错误。\r\n            \r\n","\r\n            Whether the exception has already been logged. Allows the exception to be logged at the \r\n            most appropriate location, but continue to be propagated.\r\n            ":"\r\n            是否已经记录了例外。允许例外记录在\r\n            最合适的位置，但继续传播。\r\n            \r\n","\r\n            Retrieves the Lookup this target was initialized with, including any modifications which have \r\n            been made to it while running.\r\n            ":"\r\n            检索该目标是初始化的查找，包括任何具有的修改\r\n            在跑步时被制成。\r\n            \r\n","\r\n            Unevaluated removeMetadata value.\r\n            ":"\r\n            未评估的删除值。\r\n            \r\n","The request issuing the requests.":"发出请求的请求。\r\n","The results for each target.":"每个目标的结果。\r\n","Disposable XmlReaderExtension object.":"一次性XMLReadErxension对象。\r\n","\r\n            The communications mode\r\n            ":"\r\n            通信模式\r\n            \r\n","\r\n            Location of the beforeTargets\r\n            ":"\r\n            boforetargets的位置\r\n            \r\n","\r\n            This class is an event that holds which ProjectRootElement was added to the root element cache.\r\n            ":"\r\n            该类是一个事件，该事件始终添加到根元素缓存中。\r\n            \r\n","\r\n            Called by the build component host when a component is first initialized\r\n            ":"\r\n            首先初始化组件时，由构建组件主机调用\r\n            \r\n","\r\n            The peer endpoint\r\n            ":"\r\n            对等端点\r\n            \r\n"," to use for the items in the bucket.":" 以用于桶中的物品。\r\n","\r\n            Get the escaped value of the provided property\r\n            ":"\r\n            获取所提供财产的逃脱价值\r\n            \r\n","indentation level":"压痕水平\r\n","\r\n            Generate a 4.0+-style solution wrapper project.\r\n            ":"\r\n            生成4.0+式式解决方案包装器项目。\r\n            \r\n","The new status for the engine":"引擎的新状态\r\n","\r\n            A flag indicating whether or not there are any changes which might apply.\r\n            ":"\r\n            指示是否有任何更改可能适用的标志。\r\n            \r\n","\r\n            Whether this object is immutable.\r\n            An immutable object can not be made mutable.\r\n            ":"\r\n            这个对象是否不变。\r\n            不变的物体无法变形。\r\n            \r\n","\r\n            Holds one value or a list of values.\r\n            ":"\r\n            保留一个值或值列表。\r\n            \r\n","\r\n            Convenience method to add an Output Property to this task.\r\n            Adds after the last child.\r\n            ":"\r\n            便利方法将输出属性添加到此任务中。\r\n            在最后一个孩子之后添加。\r\n            \r\n","\r\n            Properties encountered during evaluation. These are read during the first evaluation pass.\r\n            Unlike those returned by the Properties property, these are ordered, and include any properties that\r\n            were subsequently overridden by others with the same name. It does not include any \r\n            properties whose conditions did not evaluate to true.\r\n            ":"\r\n            评估期间遇到的属性。这些是在第一次评估通行证中读取的。\r\n            与属性属性返回的人不同，这些是订购的，并包括任何属性\r\n            随后被其他人以相同名称覆盖。它不包括任何\r\n            条件未评估为真的属性。\r\n            \r\n","\r\n            Default constructor. Needed for property XAML deserialization.\r\n            ":"\r\n            默认构造函数。属性XAML避难所所需。\r\n            \r\n","Event context for the project spawning this target":"项目产卵的事件上下文\r\n","\r\n            Name of the group matching the prefix on a metadata expression, for example \"Compile.\" in \"%(Compile.Object)\".\r\n            ":"\r\n            在元数据表达式上匹配前缀的组名称，例如“编译”。在“％（compile.object）”中。\r\n            \r\n","\r\n            Clears out our cached values for the various task host names and paths. \r\n            FOR UNIT TESTING ONLY\r\n            ":"\r\n            清除了我们的各种任务主机名和路径的缓存值。\r\n            仅用于单元测试\r\n            \r\n","\r\n            We need access to the build component host so that we can get at the \r\n            task host node provider when running a task wrapped by TaskHostTask\r\n            ":"\r\n            我们需要访问构建组件主机，以便我们可以在\r\n            任务主机节点提供商在运行由TaskHostTask包裹的任务时\r\n            \r\n","\r\n            Get a deferred project started event based on a given event context\r\n            ":"\r\n            根据给定的事件上下文获得延期延期项目开始事件\r\n            \r\n","\r\n            Not public since the only creation scenario is setting on an item\r\n            ":"\r\n            不公开，因为唯一的创建方案是在项目上设置\r\n            \r\n","\r\n            The available sources for a property.\r\n            ":"\r\n            物业的可用来源。\r\n            \r\n","True if the central was registered. False if the central logger was already registered":"如果中央注册，则为真实。错误如果中央记录仪已经注册\r\n","\r\n            AppendFileNameIfNotNull(\"-StrangeFileName.cs\") => \".\\-StrangeFileName.cs\"\r\n            ":"\r\n            appendfilenameifnotnull（“  -  strangefilename.cs”）=>“。\r\n            \r\n"," nodes which are implicitly\r\n            referenced by the Project.\r\n            ":" 隐含的节点\r\n            该项目引用。\r\n            \r\n","\r\n            Lazily initializes ":"\r\n            懒惰的初始化\r\n","\r\n             Sets the capacity of this dictionary to what it would be if it had been originally initialized with all its entries\r\n             ":"\r\n             将本字典的能力设置为最初及其所有条目的初始初始化的能力\r\n             \r\n","\r\n            Flag indicating that an attempt has been made to read the configuration\r\n            ":"标志表示已尝试读取配置\r\n            \r\n","\r\n                Default Sdk folder will to:\r\n                    1) MSBuildSDKsPath environment variable if defined\r\n                    2) When in Visual Studio, (VSRoot)\\MSBuild\\Sdks\\\r\n                    3) Outside of Visual Studio (MSBuild Root)\\Sdks\\\r\n            ":"\r\n                默认SDK文件夹将：\r\n                    1）如果定义\r\n                    2）在Visual Studio中（VSROOT）\\ MSBUILD \\ SDK \\\r\n                    3）在Visual Studio（MSBuild root）\\ SDK \\之外\r\n            \r\n","\r\n            Gets and sets the raw XML content\r\n            ":"\r\n            获取并设置RAW XML内容\r\n            \r\n","\r\n            Event which is fired when a project root element is added to this cache.\r\n            ":"\r\n            将项目根元素添加到此缓存中时会发射的事件。\r\n            \r\n","The configuration ID to assign to this new configuration.":"配置ID分配给此新配置。\r\n","If forwardingLogger is null":"如果转发网为null\r\n","\r\n            Must be implemented by derived class.\r\n            ":"\r\n            必须由派生类实现。\r\n            \r\n","True to continue building the remaining targets if one fails.":"如果一个人失败，则可以继续构建其余目标。\r\n"," of the .NET Framework.":" .NET框架。\r\n","\r\n            The element referenced the item by a Remove.\r\n            ":"\r\n            元素通过删除引用该项目。\r\n            \r\n","\r\n            A link pointing to more information about the error\r\n            ":"\r\n            指出有关错误的更多信息的链接\r\n            \r\n","\r\n            Caches max platform version from the manifest\r\n            ":"\r\n            从清单中缓存最大平台版本\r\n            \r\n","\r\n            The sub-toolset version we should use during the build, used to determine which set of sub-toolset\r\n            properties we should merge into this toolset. \r\n            ":"我们在构建过程中应使用的子量表版本，用于确定哪一组子量表\r\n            属性我们应该合并到此工具集中。\r\n            \r\n","\r\n            This is where all the real scheduling decisions take place.  It should not be necessary to edit functions outside of this\r\n            to alter how scheduling occurs.\r\n            ":"这是所有实际的计划决策的地方。不必在此之外编辑功能\r\n            改变计划的方式。\r\n            \r\n","\r\n            ItemDictionary returns a read-only collection, so no need to wrap it here.\r\n            ":"\r\n            ItemDictionary返回只读的收藏，因此无需在此处包装。\r\n            \r\n","\r\n            Assigns a field or variable containing an immutable dictionary to the specified value if it is currently\r\n            equal to another specified value. Returns the previous value.\r\n            ":"如果当前是当前\r\n            等于另一个指定值。返回上一个值。\r\n            \r\n","\r\n            TransformFunction constructor.\r\n            ":"\r\n            转换功能构造函数。\r\n            \r\n","\r\n            Merge the current scope down into the base scope. This means applying the adds, removes, modifies, and sets\r\n            directly into the item and property tables in this scope.\r\n            ":"\r\n            将当前范围向下合并到基本范围中。这意味着应用添加，删除，修改和集合\r\n            直接进入此范围中的项目和属性表。\r\n            \r\n"," the project is added to. Default is ":" 该项目已添加到。默认为\r\n","\r\n            Arguments for task started events\r\n            ":"\r\n            任务的论点开始事件\r\n            \r\n"," issued in response to this request will\r\n            include a ":" 根据此请求发出的\r\n            包括\r\n","True if the record was retrieved from the cache.":"如果从高速缓存中检索记录，则为是真的。\r\n","\r\n            Get any metadata in the item that has the specified name,\r\n            otherwise returns null. \r\n            Includes any metadata inherited from item definitions.\r\n            Includes any built-in metadata.\r\n            ":"\r\n            在具有指定名称的项目中获取任何元数据，\r\n            否则返回null。\r\n            包括从项目定义继承的任何元数据。\r\n            包括任何内置元数据。\r\n            \r\n","\r\n            Handles a new request coming from a node.\r\n            ":"\r\n            处理来自节点的新请求。\r\n            \r\n","\r\n            Appends standard properties to a dictionary. These properties are read from\r\n            the registry under Windows (they are a part of a toolset definition).\r\n            ":"\r\n            将标准属性附加到字典中。这些属性是从中读取的\r\n            Windows下的注册表（它们是工具集定义的一部分）。\r\n            \r\n","\r\n            All the target outputs were up-to-date with respect to their inputs.\r\n            ":"\r\n            所有目标输出均相对于其输入的最新。\r\n            \r\n","\r\n            Location of the remove attribute, if any.\r\n            ":"\r\n            删除属性的位置（如果有）。\r\n            \r\n","The new value for the Environment for the task.":"任务环境的新价值。\r\n","\r\n            Expand bare custom metadata, like %(foo), but not built-in\r\n            metadata, such as %(filename) or %(identity)\r\n            ":"\r\n            扩展裸露的自定义元数据，例如％（foo），但不内置\r\n            元数据，例如％（文件名）或％（身份）\r\n            \r\n","\r\n            Raw xml representing the metaproject.\r\n            ":"\r\n            RAW XML代表MetaProject。\r\n            \r\n","\r\n            We expect tasks to override this method if they support host objects.  The implementation should\r\n            make sure that the host object is ready to perform the real work of the task.  \r\n            ":"\r\n            如果任务支持主机对象，我们希望任务覆盖此方法。实施应该\r\n            确保主机对象准备执行任务的真实工作。\r\n            \r\n","\r\n            The weak cache is never cleared, as we need it to guarantee that the appdomain never\r\n            has two ProjectRootElement's for a particular file. Attempts to clear out the weak cache\r\n            resulted in this guarantee being broken and subtle bugs popping up everywhere.\r\n            ":"\r\n            弱的缓存永远不会被清除，因为我们需要它来保证AppDomain永远不会\r\n            有两个用于特定文件的ProjectRootlement。试图清除薄弱的缓存\r\n            导致这种保证被打破，并且无处不在。\r\n            \r\n","The list of targets this request was currently building at the time it became blocked.":"该请求当前在被阻止时正在建立的目标列表。\r\n","\r\n            The target being built.\r\n            ":"\r\n            构建目标。\r\n            \r\n","\r\n            This method will register a logger on the MUX logger and then raise a build started event if the build started event has already been logged\r\n            ":"\r\n            此方法将在MUX记录器上注册一个记录器，然后如果已经记录了构建启动事件，则提出构建开始事件\r\n            \r\n","\r\n            Sets or gets a flag indicating whether or not a failure results should cause the build to fail.\r\n            ":"\r\n            设置或获得标志，指示失败结果是否应导致构建失败。\r\n            \r\n","\r\n            Lock object for startNewRequestBuilderMainThreadEventsById, since it's possible for multiple submissions to be \r\n            submitted at the same time. \r\n            ":"\r\n            锁定对象的startNewRequestBuilderMainThreadEventsById，因为有可能要进行多个提交\r\n            同时提交。\r\n            \r\n","\r\n            Location of the property name attribute, if any\r\n            ":"\r\n            属性名称属性的位置，如果有\r\n            \r\n","\r\n            Child entries of the target which refer to OnError targets\r\n            ":"\r\n            目标的儿童条目，指的是OnError目标\r\n            \r\n","\r\n            Shuts down all of the managed nodes.  This is an asynchronous method - the nodes are\r\n            not considered shut down until a NodeShutdown packet has been received.\r\n            ":"\r\n            关闭所有托管节点。这是一种异步方法 - 节点是\r\n            直到收到nodeShutdown数据包之前，才考虑关闭。\r\n            \r\n","\r\n            Lock object, since this is a shared table, and concurrent evaluation must be safe\r\n            ":"\r\n            锁定对象，因为这是一个共享表，并且并发评估必须是安全的\r\n            \r\n","column number (0 if not applicable)":"列号（0如果不适用）\r\n","\r\n             <UsingTask TaskName=\"Microsoft.Build.Tasks.Csc\"                     ==> look for the \"Csc\" task in the\r\n                        AssemblyName=\"Microsoft.Build.Tasks\"/>                       weakly-named \"Microsoft.Build.Tasks\" assembly\r\n             \r\n             <UsingTask TaskName=\"t1\"                                            ==> look for the \"t1\" task in the\r\n                        AssemblyName=\"mytasks, Culture=en, Version=1.0.0.0\"/>        strongly-named \"mytasks\" assembly\r\n            \r\n             <UsingTask TaskName=\"foo\"                                           ==> look for the \"foo\" task in the\r\n                        AssemblyFile=\"$(MyDownloadedTasks)\\utiltasks.dll\"/>          \"utiltasks\" assembly file\r\n            \r\n             <UsingTask TaskName=\"UtilTasks.Bar\"                                 ==> invalid task declaration\r\n                        AssemblyName=\"utiltasks.dll\"\r\n                        AssemblyFile=\"$(MyDownloadedTasks)\\\"/>\r\n             ":"\r\n             <\r\n                        assemblyName =“ microsoft.build.tasks”/>弱命名为“ microsoft.build.tasks”汇编\r\n             \r\n             <lustherTask taskname =“ t1” ==>在该任务中寻找“ T1”任务\r\n                        assemblyName =“ mytasks，culture = en，版本= 1.0.0.0”/>强名的“ mytasks”汇编\r\n            \r\n             <usingTask taskname =“ foo” ==>在该任务中寻找“ foo”任务\r\n                        assemblyFile =“ $（myDownloadedTasks）\\ utiltasks.dll”/>“ utiltasks”汇编文件\r\n            \r\n             <lustherTask taskname =“ utiltasks.bar” ==>无效任务声明\r\n                        assemblyName =“ utiltasks.dll”\r\n                        assemblyFile =“ $（myDownloadedTasks）\\”/>\r\n             \r\n","\r\n            Items indexed by their evaluated include value.\r\n            Useful for hosts to find an item again after reevaluation.\r\n            ":"\r\n            由其评估的项目包括价值。\r\n            对主机重新评估后再次查找项目很有用。\r\n            \r\n","\r\n            Initializes the logger, with alternate output handlers.\r\n            ":"\r\n            用替代输出处理程序初始化记录仪。\r\n            \r\n","The filename pattern to check.":"文件名模式进行检查。\r\n","\r\n            Indicates whether or not further levels in the Lookup should be consulted beyond this one\r\n            to find the actual value for the desired item or property.\r\n            ":"\r\n            指示是否应在此外咨询查找中的进一步级别\r\n            找到所需项目或属性的实际值。\r\n            \r\n","The target's outputs and result codes":"目标的输出和结果代码\r\n","\r\n            Whether the Log and LogItemMetadata properties have been assigned already.\r\n            ":"\r\n            是否已经分配了日志和logitemmetadata属性。\r\n            \r\n","\r\n            Number of times interning wasn't attempted.\r\n            ":"\r\n            未尝试实习的次数。\r\n            \r\n","\r\n             Generates the sub-toolset version to be used with this toolset.  Sub-toolset version is based on:\r\n             1. If \"VisualStudioVersion\" is set as a property on the toolset itself (global or environment),\r\n                use that.\r\n             2. Otherwise, use the default sub-toolset version for this toolset.\r\n            \r\n             The sub-toolset version returned may be null; if so, that means that no sub-toolset should be used,\r\n             just the base toolset on its own. The sub-toolset version returned may not map to an existing\r\n             sub-toolset.\r\n             ":"\r\n             生成要与此工具集一起使用的子模式版本。子量表版本基于：\r\n             1.如果“ Visual -Studioversion”设置为工具集本身（全局或环境）上的属性，则\r\n                使用。\r\n             2.否则，为此工具集使用默认的子图表版本。\r\n            \r\n             返回的子量表版本可能为null；如果是这样，这意味着不应使用不使用子图案，\r\n             只是基本工具集。返回的子模式版本可能无法映射到现有的\r\n             子模式。\r\n             \r\n","arguments.":"参数。\r\n","\r\n            The assembly information about the task factory to be instantiated. For\r\n            AssemblyTaskFactories this is the task assembly which should be loaded\r\n            ":"\r\n            有关将要实例化的任务工厂的组装信息。为了\r\n            gasseblyTaskFactories这是应加载的任务组件\r\n            \r\n","Array of project items.":"项目项目数组。\r\n","\r\n            Returns the request builder.\r\n            ":"\r\n            返回请求构建器。\r\n            \r\n","Element to check namespace.":"要检查名称空间的元素。\r\n","\r\n            Flag indicating whether to consider this target failure as having caused a build failure.\r\n            ":"\r\n            标志表明是否将这种目标故障视为导致构建故障的原因。\r\n            \r\n","\r\n            Gets or sets a semicolon-delimited list of global properties to remove.\r\n            ":"\r\n            获取或设置要删除的全局属性列表或设置半脱落的列表。\r\n            \r\n","\r\n            Extension method to read a series of bytes from a stream.\r\n            If specified, leading byte matches one in the supplied array if any, returns rejection byte and throws IOException.\r\n            ":"\r\n            扩展方法读取流中的一系列字节。\r\n            如果指定，则领先的字节匹配提供的数组中的一个，如果有的话，将返回拒绝字节并抛出IOException。\r\n            \r\n","\r\n            Read-only dictionary of item definitions in this project.\r\n            Keyed by item type\r\n            ":"\r\n            该项目中项目定义的仅阅读字典。\r\n            按项目类型锁定\r\n            \r\n","\r\n            List of values and names available in the item pass of evaluation\r\n            ":"\r\n            评估项目中可用的值和名称列表\r\n            \r\n","The results to merge in.":"结果合并。\r\n"," // Occurrences: 2; Operation: Include; Provenance: Inconclusive (it is an indirect occurrence from a referenced item)\r\n             ":" //出现：2;操作：包括；出处：没有定论（这是引用项目的间接发生）\r\n             \r\n","\r\n            Assigns a field or variable containing an immutable list to the specified value if it is has not yet been\r\n            initialized.\r\n            ":"\r\n            如果尚未为\r\n            初始化。\r\n            \r\n","\r\n            Get the When children.\r\n            Will contain at least one entry.\r\n            ":"\r\n            当孩子时得到。\r\n            将至少包含一个条目。\r\n            \r\n","\r\n             This class implements the grammar for complex conditionals.\r\n            \r\n             The usage is:\r\n                Parser p = new Parser(CultureInfo);\r\n                ExpressionTree t = p.Parse(expression, XmlNode);\r\n            \r\n             The expression tree can then be evaluated and re-evaluated as needed.\r\n             ":"\r\n             该类实现了复杂条件的语法。\r\n            \r\n             用法是：\r\n                解析器p =新解析器（cultureinfo）;\r\n                ExpressionTree t = P.Parse（表达式，XMLNODE）;\r\n            \r\n             然后可以根据需要评估并重新评估表达树。\r\n             \r\n","\r\n            Captures within this capture\r\n            ":"\r\n            在此捕获中捕获\r\n            \r\n","\r\n            The project object, representing the project to be built.\r\n            ":"\r\n            项目对象，代表要构建的项目。\r\n            \r\n","\r\n            Create an independent clone of this object, keeping ONLY the explicitly\r\n            requested project state.\r\n            ":"\r\n            创建该对象的独立克隆，仅保留明确的克隆\r\n            请求的项目状态。\r\n            \r\n","\r\n            Gets the last column number (if any) of a range of invalid columns in the project.\r\n            ":"\r\n            获取项目中一系列无效列的最后一列号（如果有）。\r\n            \r\n","\r\n            Reports a build result to the engine, allowing it to satisfy outstanding requests.  This result\r\n            is reported to each entry, allowing it the opportunity to determine for itself if the\r\n            result applies.\r\n            ":"\r\n            向引擎报告构建结果，使其满足未偿还的请求。这个结果\r\n            报告给每个条目，使其有机会自行确定\r\n            结果适用。\r\n            \r\n","\r\n            This method is called by the build engine to begin task execution. A task uses the return value to indicate\r\n            whether it was successful. If a task throws an exception out of this method, the engine will automatically\r\n            assume that the task has failed.\r\n            ":"\r\n            构建引擎调用此方法开始执行任务。一个任务使用返回值指示\r\n            是否成功。如果任务从该方法中引发异常，则引擎将自动\r\n            假设任务失败了。\r\n            \r\n","\r\n            Returns the build event context of the parent, if any.\r\n            ":"\r\n            返回父母的构建事件上下文（如果有）。\r\n            \r\n","\r\n            Delegate that represents the signature of all item transformation functions\r\n            This is used to support calling the functions by name.\r\n            ":"\r\n            代表所有项目转换功能的签名的委托\r\n            这用于支持按名称调用功能。\r\n            \r\n","\r\n            Cloning constructor, retaining same parentage.\r\n            ":"\r\n            克隆构造函数，保留相同的父母。\r\n            \r\n","s and auto-generated \r\n            ":"S和自动生成\r\n            \r\n","\r\n            Gets or sets the original value of the Project attribute.\r\n            ":"\r\n            获取或设置项目属性的原始值。\r\n            \r\n","\r\n            Gets the properties\r\n            ":"\r\n            获取属性\r\n            \r\n","\r\n            Should the operating environment such as the current directory and environment be saved and restored between project builds and task invocations\r\n            This should be defaulted to true as we should normally do this. This should be set to false for GlobalDTAR which could run at the same time in a different build manager.\r\n            ":"\r\n            是否在项目构建和任务调用之间保存并恢复诸如当前目录和环境之类的操作环境。\r\n            应该将其默认为真，因为我们通常应该这样做。对于GlobalDtar来说，应该将其设置为False，该GlobalDTAR可以同时在不同的构建管理器中运行。\r\n            \r\n","\r\n            Contains a dictionary of loggerId's and the sink which the logger (of the given Id) is expecting to consume its messages \r\n            ":"\r\n            包含Loggerid的字典和（给定ID的Logger）期望消耗其消息\r\n            \r\n","\r\n            Used for unit tests only.\r\n            ":"\r\n            仅用于单位测试。\r\n            \r\n","\r\n            Writes out the list of item specs and their metadata.\r\n            This could be done at any time during the build to show the latest\r\n            items, using the cached reference to the list from the \r\n            appropriate ProjectStarted event.\r\n            ":"\r\n            写出项目规格及其元数据的列表。\r\n            这可以在构建过程中的任何时候完成，以显示最新的\r\n            项目，使用从列表中的缓存引用\r\n            适当的项目开始。\r\n            \r\n","\r\n            If defined, it overrides the \r\n            ":"\r\n            如果定义，它覆盖了\r\n            \r\n","\r\n            Indicates an invalid evaluation identifier.\r\n            ":"\r\n            表示无效的评估标识符。\r\n            \r\n","The DateTime that should be recorded for missing file.":"丢失文件应记录的日期。\r\n","\r\n            Wraps an evaluated property for build purposes.\r\n            Added and removed via methods on the ProjectInstance object.\r\n            ":"\r\n            将评估的属性包装出来。\r\n            通过ProjectInstance对象上的方法添加并删除。\r\n            \r\n","\r\n            The target builder callback\r\n            ":"\r\n            目标构建器回调\r\n            \r\n","\r\n            Called by the build component host when the component host is about to shutdown\r\n            ":"\r\n            当组件主机即将关闭时，由构建组件主机调用\r\n            \r\n","The registry hive to examine.":"注册表要检查。\r\n","\r\n            Factory for serialization.\r\n            Custom factory is needed because this class is abstract and uses a factory pattern.\r\n            ":"\r\n            工厂序列化。\r\n            需要自定义工厂，因为此类是抽象的，并且使用了工厂模式。\r\n            \r\n","\r\n            Retrieves the configuration data from the cache.\r\n            ":"\r\n            从缓存中检索配置数据。\r\n            \r\n","\r\n            Gets or sets the startup directory.\r\n            ":"\r\n            获取或设置启动目录。\r\n            \r\n","\r\n            Determines if we have a matching request somewhere, and if so, assigns the same request ID.  Otherwise\r\n            assigns a new request id.\r\n            ":"\r\n            确定我们是否在某处有匹配请求，如果是，则分配了相同的请求ID。否则\r\n            分配新的请求ID。\r\n            \r\n","\r\n            Children below the target. The build iterates through this to get each task to execute.\r\n            This is an ordered collection.\r\n            This is a read-only list; the ProjectTargetInstance class is immutable.\r\n            This collection does not contain the OnError target references.\r\n            ":"\r\n            儿童在目标下。通过此构建迭代以使每个任务执行。\r\n            这是一个有序的集合。\r\n            这是只读列表； ProjectTargetInstance类是不可变的。\r\n            该集合不包含OnError目标参考。\r\n            \r\n","\r\n            The TaskExecutionHost is responsible for instantiating tasks, setting their parameters and gathering outputs using\r\n            reflection, and executing the task in the appropriate context.The TaskExecutionHost does not deal with any part of the task declaration or\r\n            XML.\r\n            ":"\r\n            taskexecutionhost负责实例化任务，设置其参数并使用\r\n            反思，并在适当的上下文中执行任务。taskexecutionhost不处理任务声明的任何部分或\r\n            XML。\r\n            \r\n","\r\n            Adds an MSBuild task to the specified target\r\n            ":"\r\n            将MSBuild任务添加到指定的目标\r\n            \r\n","\r\n            Handler for BuildFinished events.\r\n            ":"\r\n            建筑事件的处理程序。\r\n            \r\n","\r\n            This interface defines a \"parallel aware logger\" in the build system. A parallel aware logger \r\n            will accept a cpu count and be aware that any cpu count greater than 1 means the events will\r\n            be received from the logger from each cpu as the events are logged. \r\n            ":"\r\n            该接口在构建系统中定义了“并行意识到的记录器”。并行意识到的记录仪\r\n            将接受CPU计数，并意识到任何CPU计数大于1表示事件将\r\n            在记录事件时，请从每个CPU接收到记录仪。\r\n            \r\n","An optional directory to start the search in.  The default location is the directory\r\n            ":"用于开始搜索的可选目录。  默认位置是目录\r\n            \r\n","\r\n            Removes made in this scope or above.\r\n            ":"\r\n            在此范围或以上进行的去除。\r\n            \r\n","\r\n            The factory used to create packets from data read off the pipe.\r\n            ":"\r\n            该工厂用于从数据上读取数据的数据包。\r\n            \r\n","\r\n            Register a host object for a particular task/target pair.\r\n            Overwrites any existing host object.\r\n            ":"为特定任务/目标对注册主机对象。\r\n            覆盖任何现有的主机对象。\r\n            \r\n","\r\n            This method is used by the Target Builder to indicate that the target should run in error mode rather than normal mode.\r\n            ":"\r\n            目标构建器使用此方法表示目标应以错误模式而不是正常模式运行。\r\n            \r\n","\r\n            Attempts to parse the input string as an NCName (see the XML Namespace spec).\r\n            Quits parsing when an invalid NCName char is reached or the end of string is reached.\r\n            Returns the number of valid NCName chars that were parsed.\r\n            ":"\r\n            尝试将输入字符串解析为NCNAME（请参阅XML名称空间规范）。\r\n            当达到无效的ncname char或达到字符串的末端时，请退出。\r\n            返回解析的有效NCNAME字符的数量。\r\n            \r\n","\r\n            Same as Directory.EnumerateDirectories(...) except that files that\r\n            aren't accessible are skipped instead of throwing an exception.\r\n            \r\n            Other exceptions are passed through.\r\n            ":"\r\n            与目录相同。\r\n            跳过不可访问而不是抛出异常。\r\n            \r\n            其他例外情况通过。\r\n            \r\n","The build parameters":"构建参数\r\n","The task parameter name":"任务参数名称\r\n","\r\n            Get the disk roots to search for both platform and extension sdks in. The environment variable can \r\n            override the defaults.\r\n            ":"\r\n            使磁盘根搜索平台和扩展SDK。环境变量可以\r\n            覆盖默认值。\r\n            \r\n","\r\n            Checks if an import matches with another import in its ancestor line of imports.\r\n            ":"\r\n            检查导入是否与其祖先的进口行中的另一个导入匹配。\r\n            \r\n","\r\n            A method to use when sending packets to a remote host.\r\n            ":"\r\n            将数据包发送到远程主机时使用的方法。\r\n            \r\n","\r\n            Location of matchOnMetadata, if any.\r\n            ":"\r\n            MatchonMetadata的位置，如果有的话。\r\n            \r\n","\r\n            Intrinsic function that returns only the items from itemsOfType that have distinct Item1 in the Tuple\r\n            Using a case sensitive comparison.\r\n            ":"\r\n            固有函数仅返回元组中具有独特item1的项目的项目\r\n            使用案例敏感的比较。\r\n            \r\n","\r\n            Create an independent, deep clone of this object and everything in it.\r\n            Useful for compiling a single file; or for keeping build results between builds.\r\n            Clone has the same mutability as the original.\r\n            ":"\r\n            创建这个对象及其所有内容的独立，深的克隆。\r\n            可用于编译单个文件；或用于在构建之间保持构建结果。\r\n            克隆具有与原始相同的可突变性。\r\n            \r\n","\r\n            Find the unique name for this project, e.g. SolutionFolder\\SubSolutionFolder\\ProjectName\r\n            ":"\r\n            找到该项目的唯一名称，例如solutionFolder \\ substolutionFolder \\ projectName\r\n            \r\n","\r\n            Project-related Xml utilities\r\n            ":"\r\n            与项目有关的XML实用程序\r\n            \r\n","\r\n            Converts a member of the Microsoft.Build.Utilities.DotNetFrameworkArchitecture enum to the equivalent member of the \r\n            Microsoft.Build.Shared.DotNetFrameworkArchitecture enum. \r\n            ":"\r\n            Microsoft.build.utilities.dotnetframeworkarchitecture枚举的成员\r\n            Microsoft.build.shared.dotnetframeworkarchitecture枚举。\r\n            \r\n","\r\n            MinOSVersion metadata name\r\n            ":"\r\n            minsversion元数据名称\r\n            \r\n","\r\n            Target name cached for performance\r\n            ":"\r\n            目标名称缓存以进行性能\r\n            \r\n","\r\n            Given a ToolsVersion, return the path to the MSBuild tools for that ToolsVersion\r\n            ":"\r\n            给定工具，请返回到该工具的MSBUILD工具的路径\r\n            \r\n","\r\n            The actual importance at which standard error messages will be logged.\r\n            ":"\r\n            记录标准错误消息的实际重要性。\r\n            \r\n","\r\n            No exception is thrown if this project root element is in use by currently loaded projects\r\n            by this method.  The calling method must know that this is a safe operation.\r\n            There may of course be strong references to the project root element from customer code.\r\n            The assumption is that when they instruct the project collection to unload it, which\r\n            leads to this being called, they are releasing their strong references too (or it doesn't matter)\r\n            ":"\r\n            如果当前加载的项目正在使用此项目根元素，则没有例外\r\n            通过这种方法。调用方法必须知道这是一个安全的操作。\r\n            当然，可能会有很大的参考客户代码中的项目根元素。\r\n            假设是，当他们指示项目集合卸载时，\r\n            导致这一被称为这一点，他们也发布了强有力的参考（或没关系）\r\n            \r\n","\r\n            Shuts down the component.\r\n            ":"\r\n            关闭组件。\r\n            \r\n","SDK version for which to find the installed platforms":"SDK版本可以找到已安装的平台\r\n","The result node identifier.":"结果节点标识符。\r\n","\r\n            Storage for the left child\r\n            ":"\r\n            左孩子的存储\r\n            \r\n","True if the distributed and central logger were registered, false if they either were already registered":"是的，如果分布式和中央记录仪已注册，则错误，如果它们已经注册\r\n","\r\n            An object used to store the last response from a remote node.  Since evaluation is single threaded, this object is only set one at a time.\r\n            ":"\r\n            用于存储远程节点的最后一个响应的对象。由于评估是单线螺纹，因此此对象仅设置一个对象。\r\n            \r\n","\r\n            The smallest size a string can be to be considered small.\r\n            ":"\r\n            可以将绳子视为小的最小尺寸。\r\n            \r\n","\r\n            Returns any a ProjectRootElement in the cache with the provided full path,\r\n            otherwise null.\r\n            ":"\r\n            通过提供的完整路径，返回缓存中的任何项目Rootelement，\r\n            否则为空。\r\n            \r\n","\r\n            Returns the full path to the project file that contained the call to this task.\r\n            ":"\r\n            将完整的路径返回到包含呼叫此任务的项目文件。\r\n            \r\n","\r\n            The dedicated scheduler object.\r\n            ":"\r\n            专用调度程序对象。\r\n            \r\n","\r\n            The weight of busy nodes in GetAvailableCoresForExplicitRequests().\r\n            ":"\r\n            getavailableCoresForeforXplicrequests（）中繁忙节点的重量。\r\n            \r\n","\r\n            The implementation has to actually replace the element to do this.\r\n            ":"\r\n            实现必须实际替换元素来执行此操作。\r\n            \r\n","\r\n            A class representing a set of additions, modifications or removal of metadata from items.\r\n            ":"\r\n            一个代表一组添加，修改或从项目中删除元数据的类。\r\n            \r\n","\r\n            Override == so the  equals comparison using this operator will be the same as\r\n            .Equals\r\n            ":"\r\n            覆盖==，因此使用此操作员的平等比较将与\r\n            。等于\r\n            \r\n","Binary reader which is attached to the stream the event will be deserialized from.":"附加到流中的二进制读取器将从中心化。\r\n","\r\n            Backing item\r\n            ":"\r\n            支持项目\r\n            \r\n","\r\n            Create an independent, deep clone of this object and everything in it, with\r\n            specified mutability.\r\n            Useful for compiling a single file; or for keeping build results between builds.\r\n            ":"\r\n            创建这个对象的独立，深的克隆，其中所有内容\r\n            指定的突变性。\r\n            可用于编译单个文件；或用于在构建之间保持构建结果。\r\n            \r\n","The communications mode for the endpoints.":"端点的通信模式。\r\n","\r\n            The maximum number of nodes this build may use.\r\n            ":"\r\n            该构建可能使用的最大节点数量。\r\n            \r\n",".\r\n                The reasoning is that ":"。\r\n                原因是\r\n","\r\n            Returns the list of tools versions\r\n            ":"\r\n            返回工具版本列表\r\n            \r\n","\r\n            A build request configuration represents all of the data necessary to know which project to build\r\n            and the environment in which it should be built.\r\n            ":"\r\n            构建请求配置表示知道要构建哪个项目所需的所有数据\r\n            以及应该建立的环境。\r\n            \r\n","True if equal, false otherwise.":"如果相等，则为false，否则为错误。\r\n","\r\n            data.GetItems returns a read-only collection, so no need to re-wrap it here.\r\n            ":"\r\n            data.getItems返回只读集合，因此无需在此处重新包装它。\r\n            \r\n","Base Handshake":"基本握手\r\n","\r\n            It helps the UI display this category in an appropriate form. E.g. non command line category\r\n            properties are normally displayed in the form of a property grid.\r\n            ":"\r\n            它可以帮助UI以适当的形式显示此类别。例如。非命令行类别\r\n            属性通常以属性网格的形式显示。\r\n            \r\n","The invalid column number in the project (set to zero if not available).":"项目中的无效列号（如果不可用，则设置为零）。\r\n","\r\n            FOR UNIT TESTING ONLY\r\n            ":"\r\n            仅用于单元测试\r\n            \r\n","\r\n            Constructs a project logging contexts.\r\n            ":"\r\n            构建项目记录上下文。\r\n            \r\n"," the first time a change is made.\r\n            ":" 第一次进行更改。\r\n            \r\n","\r\n            Accessor fro _isBlocking.\r\n            ":"\r\n            FOR _ ISBLOCKING。\r\n            \r\n","\r\n            Waits for the node to be reacquired.\r\n            ":"\r\n            等待该节点重新征收。\r\n            \r\n","\r\n            Types of locals pulled in at the start - environment, global, toolset, and built-in properties\r\n            ":"\r\n            当地人的类型在开始时 - 环境，全局，工具集和内置属性\r\n            \r\n","The existing results, if any.":"现有结果（如果有）。\r\n"," if the toolset was found and removed; ":" 如果发现并卸下了工具集；\r\n","The location for this task.":"此任务的位置。\r\n","\r\n            Whether when we read a ToolsVersion that is not equivalent to the current one on the Project tag, we\r\n            treat it as the current one.\r\n            ":"\r\n            当我们阅读不等于项目标签上当前的工具交换时，我们\r\n            将其视为当前的。\r\n            \r\n","\r\n            Returns an instance based on this project, but completely disconnected.\r\n            This instance can be used to build independently.\r\n            Before creating the instance, this will reevaluate the project if necessary, so it will not be dirty.\r\n            The instance is immutable; none of the objects that form it can be modified. This makes it safe to \r\n            access concurrently from multiple threads.\r\n            ":"\r\n            返回基于此项目的实例，但完全断开了连接。\r\n            此实例可用于独立构建。\r\n            在创建实例之前，这将在必要时重新评估项目，因此不会脏。\r\n            实例是不可变的；没有一个形式的对象可以修改。这使得安全\r\n            从多个线程同时访问。\r\n            \r\n","\r\n            Appends given text to the buffer after first quoting the text if necessary.\r\n            ":"\r\n            在必要时首先引用文本后，将给定文本附加到缓冲区。\r\n            \r\n","\r\n            Gets child elements, ignoring whitespace and comments.\r\n            Throws InvalidProjectFileException for unexpected XML node types if parameter is set.\r\n            ":"\r\n            获取儿童元素，忽略空格和评论。\r\n            如果设置了参数，则将意外XML节点类型的InvalidProjectFileException抛出。\r\n            \r\n","\r\n            NOTE: defining project is ignored because we already know the ItemElement associated with \r\n            this item, and use that for where it is defined. \r\n            ":"\r\n            注意：定义项目被忽略，因为我们已经知道与\r\n            此项目，并将其用于定义的位置。\r\n            \r\n","\r\n            Returns a string representation of the object\r\n            ":"\r\n            返回对象的字符串表示\r\n            \r\n"," to allow throttling, otherwise ":" 允许节流，否则\r\n","\r\n            The lookup containing our environment.\r\n            ":"\r\n            包含我们环境的查找。\r\n            \r\n","\r\n            If dwFlags specifies STARTF_USEPOSITION, this member is the y offset of the upper left corner of a window if a new window is created, in pixels. Otherwise, this member is ignored.\r\n            ":"如果DWFLAGS指定startf_useposition，则该成员是窗口左上角的y偏移，如果创建了新窗口，则以像素为单位。否则，该成员将被忽略。\r\n            \r\n","The build request entry for this project.":"该项目的构建请求条目。\r\n","\r\n            Determines object equality\r\n            ":"\r\n            确定对象平等\r\n            \r\n","The configuration id":"配置ID\r\n","\r\n            Gathers the set of platform winmds for a particular {SDKI, SDKV, TPI, TPMinV, TPV} combination, \r\n            based on the assumption that it is an SDK that has both {SDKI, SDKV} and TP* specifiers.\r\n            ":"\r\n            收集特定{SDKI，SDKV，TPI，TPMINV，TPV}组合的平台winmds集合，\r\n            基于以下假设：它是一个具有{SDKI，SDKV}和TP* Specifiers的SDK。\r\n            \r\n","Type of metadata object.":"元数据对象的类型。\r\n","\r\n            Instructs the RequestBuilder that next Build request from a task should post its request\r\n            and immediately return so that the thread may be freed up.  May not be nested.\r\n            ":"\r\n            指示请求构建器，下一个任务中的下一个构建请求应发布其请求\r\n            并立即返回，以便可以释放线程。可能不会嵌套。\r\n            \r\n","\r\n            Simple name for the MSBuild tasks (v14+), used for shimming in loading\r\n            task factory UsingTasks\r\n            ":"\r\n            MSBUILD任务（V14+）的简单名称，用于加载\r\n            任务工厂使用任务\r\n            \r\n","\r\n            Create an enumerator from a base IEnumerable of items into an enumerable\r\n            of transformation result which includes the new itemspec and the base item\r\n            ":"\r\n            从基本的项目中创建一个枚举者，为枚举\r\n            转换结果，其中包括新项目Spec和基本项目\r\n            \r\n","\r\n            The xml attribute where this itemspec comes from\r\n            ":"\r\n            XML属性此项目Spec来自\r\n            \r\n","\r\n            Name of the group matching the item type in an item expression or metadata expression.\r\n            ":"\r\n            在项目表达式或元数据表达式中匹配项目类型的组名称。\r\n            \r\n","The specification for the target to build.":"目标构建的规范。\r\n","The object with which to compare this one.":"比较这个对象。\r\n","The result of evaluating the condition.":"评估条件的结果。\r\n","\r\n            A logging context for building a specific target within a project.\r\n            ":"\r\n            用于在项目中构建特定目标的记录上下文。\r\n            \r\n","\r\n            Location of the matchOnMetadata attribute, if any.\r\n            ":"\r\n            MATCONONMETADATA属性的位置（如果有）。\r\n            \r\n","This type should be thread-safe. As a struct, it cannot protect its own fields from being changed from one\r\n             thread while its members are executing on other threads because structs can change ":"这种类型应该是线程安全。作为一个结构，它无法保护自己的领域免于从一个领域变化\r\n             线程在其成员在其他线程上执行时，因为结构可以更改\r\n","\r\n            Encapsulates the parameters and the body of the task element for the inline task.\r\n            ":"\r\n            封装内联任务的参数和主体。\r\n            \r\n","\r\n            Writes out a temporary response file and shell-executes the tool requested.  Enables concurrent\r\n            logging of the output of the tool.\r\n            ":"\r\n            写下临时响应文件，并执行所请求的工具。启用并发\r\n            该工具输出的记录。\r\n            \r\n","String representation of the object":"对象的字符串表示\r\n","The OneCore SDK identifier that defines OnceCore SDK root":"定义Oncecore SDK根的Onecore SDK标识符\r\n","\r\n            Returns cached value for last write time of file. Update the cache if it is the first \r\n            time someone asking for that file\r\n            ":"\r\n            返回文件的最后写入时间的缓存值。如果是第一个，则更新缓存\r\n            时间有人要求该文件\r\n            \r\n","\r\n            A delegate that accepts the item type string and a list of items of that type.\r\n            Will be called for each item type in the list.\r\n            ":"\r\n            接受项目类型字符串和该类型项目列表的委托。\r\n            列表中的每个项目类型将被调用。\r\n            \r\n","\r\n            Whether when we read a ToolsVersion other than the current one in the Project tag, we treat it as the current one.\r\n            ":"\r\n            无论是当我们阅读项目标签中当前的工具交换以外的其他工具库时，我们都将其视为当前的工具。\r\n            \r\n","A boolean to determine whether the warning should be treated as an error.":"布尔值，以确定是否应将警告视为错误。\r\n",")\r\n                will get normalized against this root.\r\n                If empty, the current working directory is used.\r\n                Cannot be null, and cannot contain invalid path arguments.\r\n            ":"）\r\n                将对这个根部进行标准化。\r\n                如果为空，则使用当前的工作目录。\r\n                不能无效，也不能包含无效的路径参数。\r\n            \r\n","\r\n            The target failed to build.\r\n            ":"\r\n            目标无法构建。\r\n            \r\n","The verision of the SDK":"SDK的Verision\r\n","\r\n            An implementation of IComparer useful for comparing the keys \r\n            on DictionaryEntry's\r\n            ":"\r\n            IComparer的实现可用于比较键\r\n            在字典上\r\n            \r\n","The original build event context from when the target was first built, if available.\r\n            Non-null when creating a ":"原始构建事件上下文是从目标首次构建（如果有）的情况下。\r\n            创建一个非无效\r\n","\r\n             This class is used to programmatically read msbuildToolsets section\r\n             in from the configuration file.  An example of application config file:\r\n            \r\n             <configuration>\r\n                 <msbuildToolsets default=\"2.0\">\r\n                     <toolset toolsVersion=\"2.0\">\r\n                         <property name=\"MSBuildBinPath\" value=\"D:\\windows\\Microsoft.NET\\Framework\\v2.0.x86ret\\\"/>\r\n                         <property name=\"SomeOtherProperty\" value=\"SomeOtherPropertyValue\"/>\r\n                     </toolset>\r\n                     <toolset toolsVersion=\"3.5\">\r\n                         <property name=\"MSBuildBinPath\" value=\"D:\\windows\\Microsoft.NET\\Framework\\v3.5.x86ret\\\"/>\r\n                     </toolset>\r\n                 </msbuildToolsets>\r\n             </configuration>\r\n            \r\n             ":"\r\n             此类用于编程读取MSBUILDTOOLSETS部分\r\n             从配置文件中输入。应用程序配置文件的示例：\r\n            \r\n             <Configuration>\r\n                 <msbuildtoolsets default =“ 2.0”>\r\n                     <toolset toolsversion =“ 2.0”>\r\n                         在\r\n                         态\r\n                     </toolset>\r\n                     <toolset toolsversion =“ 3.5”>\r\n                         <property name =“ msbuildbinpath” value =“ d：\\ windows \\ microsoft.net \\ framework \\ v3.5.x86ret \\”/>\r\n                     </toolset>\r\n                 </msbuildtoolsets>\r\n             </configuration>\r\n            \r\n             \r\n","\r\n            Reevaluate the project to get it into a queryable state, if it's dirty.\r\n            This incorporates all changes previously made to the backing XML by editing this project.\r\n            Throws InvalidProjectFileException if the evaluation fails.\r\n            ":"\r\n            如果肮脏的话，将项目重新评估以使其进入可查询状态。\r\n            这结合了以前通过编辑该项目对Backing XML进行的所有更改。\r\n            如果评估失败，则投掷无效的fileException。\r\n            \r\n","Identifier for the targeted platform":"目标平台的标识符\r\n","\r\n            Update the current state of entry details for the dependency table\r\n            ":"\r\n            更新依赖项表的当前输入详细信息\r\n            \r\n","The directory to evaluate, escaped.":"评估，逃脱的目录。\r\n","\r\n            This is used by the VB/C# project system.\r\n            ":"这是由VB/C＃项目系统使用的。\r\n            \r\n","\r\n            Root element \r\n            ":"\r\n            根元素\r\n            \r\n","\r\n            Project that this metadatum lives in.\r\n            ProjectMetadata's always live in a project.\r\n            ":"预测这个元数据居住。\r\n            ProjectMetadata的始终生活在一个项目中。\r\n            \r\n","\r\n            The task instance data\r\n            ":"\r\n            任务实例数据\r\n            \r\n","\r\n            Deep clone of this object.\r\n            Useful for compiling a single file; or for keeping resolved assembly references between builds.\r\n            ":"\r\n            该物体的深克隆。\r\n            可用于编译单个文件；或用于保持构建之间的解决方案。\r\n            \r\n","WARNING: do NOT use List`1.AddRange to iterate over this collection.\r\n            CopyOnWriteDictionary from Microsoft.Build.Utilities.v4.0.dll is broken.":"警告：请勿使用List`1.Addrange在此集合上进行迭代。\r\n            来自Microsoft.build.utilities.v4.0.dll的copyOnwritedixtionary被损坏。\r\n","\r\n            Determines if the specified configuration is currently being built\r\n            ":"\r\n            确定当前是否正在构建指定的配置\r\n            \r\n","\r\n            When true, indicates that the build should emit a detailed summary at the end of the log.\r\n            ":"\r\n            如果是正确的，则表示构建应在日志末尾发出详细的摘要。\r\n            \r\n","\r\n            This state means the node has received all of the results needed to continue processing this\r\n            request.  When this state is set, the receivedResult member of this entry must be non-null.  \r\n            The request engine can continue it at some later point when it is no longer busy.\r\n            Any number of entries may be in this state.\r\n            \r\n            Transitions:\r\n                    Active: The build request engine picks this ready request to process.\r\n            ":"\r\n            该状态意味着节点已收到继续处理此处所需的所有结果\r\n            要求。设置此状态后，本条目的接收者成员必须无效。\r\n            请求引擎可以在不再忙碌的情况下继续进行。\r\n            任何数量的条目都可以在此状态。\r\n            \r\n            过渡：\r\n                    活动：构建请求引擎选择此准备的请求进行处理。\r\n            \r\n","\r\n            Returns a map of project property names / list of search paths for the specified toolsVersion and os\r\n            ":"\r\n            返回项目属性名称的地图 /指定工具交换和操作系统的搜索路径列表\r\n            \r\n","The requests being issued.":"发出的请求。\r\n","\r\n            Evaluation never creates ITaskItems, so this should never be called.\r\n            ":"\r\n            评估永远不会创建ITASCITEM，因此绝对不应被调用。\r\n            \r\n","\r\n            Creates an immutable view of this collection.\r\n            ":"\r\n            创建该系列的不变观点。\r\n            \r\n"," \r\n            This field is optional and is culture sensitive.\r\n            ":" \r\n            该领域是可选的，对培养很敏感。\r\n            \r\n","The tlog files to interpret":"tlog文件要解释\r\n","\r\n            SupportsMultipleVersions metadata name and manifest attribute\r\n            ":"\r\n            supportsmultipleversions元数据名称和表现属性\r\n            \r\n","\r\n            Will display the target started event which was deferred until the first visible message for the target is ready to be displayed\r\n            ":"\r\n            将显示目标启动事件，该事件已延期，直到准备显示目标的第一个可见消息\r\n            \r\n","\r\n            Gets the captured substring from the input string.\r\n            ":"\r\n            从输入字符串获取捕获的子字符串。\r\n            \r\n","\r\n            Clears all the caches used during the build.\r\n            ":"\r\n            清除构建过程中使用的所有缓存。\r\n            \r\n","The project to build.":"构建项目。\r\n","\r\n            Sets a property which comes from the Xml.\r\n            Predecessor is discarded as it is a design time only artefact.\r\n            Only called during evaluation, so does not check for immutability.\r\n            ":"\r\n            设置来自XML的属性。\r\n            前任被丢弃，因为这是一个仅设计时间的人工制品。\r\n            仅在评估过程中调用，因此不检查不变性。\r\n            \r\n","\r\n            Accessor for the blocked node request id.\r\n            ":"\r\n            阻塞节点请求ID的登录器。\r\n            \r\n","The prior value at the specified ":"指定的先验值\r\n","\r\n            Shuts down this component\r\n            ":"\r\n            关闭此组件\r\n            \r\n","\r\n            Leaves the specified scope, which must be the active one.\r\n            Moves all tables up one: the tertiary table becomes the secondary table, and so on. The primary\r\n            and secondary table are merged. This has the effect of \"applying\" the adds applied to the primary\r\n            table into the secondary table.\r\n            ":"\r\n            离开指定的范围，必须是活动范围。\r\n            将所有桌子移动一个：第三级表成为次级表，依此类推。首要的\r\n            和次级表合并。这具有“应用”应用于主的添加的效果\r\n            表进入辅助表。\r\n            \r\n","\r\n            Writes a line to the log, using the specified indentation.\r\n            ":"\r\n            使用指定的凹痕写入日志的行。\r\n            \r\n","Pattern, possibly with wildcard(s) to be expanded.":"模式，可能会扩大通配符。\r\n","\r\n                Creates an XmlReaderExtension with handle to an XmlReader.\r\n            ":"\r\n                创建带有XMLReader的手柄的XMLReadErxension。\r\n            \r\n","\r\n            This constructor allows event data to be initialized including timestamp.\r\n            ":"\r\n            该构造函数允许将事件数据初始化，包括时间戳。\r\n            \r\n","\r\n            Starts the thread used to build\r\n            ":"\r\n            启动用于构建的线程\r\n            \r\n","\r\n            Constructor.\r\n            Caller must then do Increment().\r\n            ":"构造函数。\r\n            然后，呼叫者必须进行增量（）。\r\n            \r\n","\r\n            The response indicates that a new node should be created rather than scheduling this request.\r\n            The request may be scheduled at a later time.\r\n            ":"\r\n            响应表明应创建一个新节点，而不是安排此请求。\r\n            请求可以在以后的时间安排。\r\n            \r\n","\r\n            Any immediately previous property that was overridden by this one during evaluation.\r\n            This would include all properties with the same name that lie above in the logical\r\n            project file, and whose conditions evaluated to true.\r\n            In this class this is null.\r\n            If the project has not been reevaluated since the last modification this value may be incorrect.\r\n            ":"\r\n            在评估期间，该属性直接覆盖的任何属性。\r\n            这将包括所有属性，其名称与逻辑上的同名相同\r\n            项目文件，并评估其条件为true。\r\n            在此课程中，这是无效的。\r\n            如果未重新评估项目，则该值可能不正确。\r\n            \r\n",".\r\n            Computed, not necessarily fast.\r\n            ":"。\r\n            计算，不一定快。\r\n            \r\n"," will get called":" 会被打电话\r\n","\r\n            Emit events for project imports.\r\n            ":"发射项目进口事件。\r\n            \r\n","\r\n            Static constructor which registers a callback to dispose of AppDomain-lifetime cache objects.\r\n            ":"\r\n            静态构造函数，该构造函数会记录回调以处理appdomain-liftime缓存对象。\r\n            \r\n","\r\n            Handler for Error events.\r\n            ":"\r\n            错误事件的处理程序。\r\n            \r\n","\r\n            Returns the schedule response as a descriptive string.\r\n            ":"\r\n            返回时间表响应作为描述性字符串。\r\n            \r\n","The result for the submission's root request.":"提交的根请求的结果。\r\n","\r\n            Kills the given process that is executing the tool, because the tool's\r\n            time-out period expired.\r\n            ":"\r\n            杀死执行工具的给定过程，因为该工具的\r\n            超时期过期。\r\n            \r\n","\r\n            Cache for min OS version from manifest\r\n            ":"\r\n            清单中的最小OS版本的缓存\r\n            \r\n","\r\n            Location of Platform.xml \r\n            ":"\r\n            platform.xml的位置\r\n            \r\n","\r\n            Changes the unique name of the project.\r\n            ":"\r\n            更改项目的唯一名称。\r\n            \r\n","\r\n            Represents a name-value pair. The name cannot be null or empty.\r\n            ":"\r\n            代表名称值对。该名称不能为空或空。\r\n            \r\n","The project file.":"项目文件。\r\n","The component type to be retrieved":"要检索的组件类型\r\n","The expander to use.":"使用的扩展器。\r\n","\r\n            Maps a node id to the set of configurations assigned to it.\r\n            ":"\r\n            将节点ID映射到分配给其的配置集。\r\n            \r\n","The entry to be built.":"要建造的条目。\r\n","\r\n            Raised for BuildWarningEventArgs instances\r\n            ":"\r\n            为buildwarningeventargs实例提出\r\n            \r\n","\r\n            Gets the metadata dictionary\r\n            Property is required so that we can access the metadata dictionary in an item from \r\n            another appdomain, as the CLR has implemented remoting policies that disallow accessing \r\n            private fields in remoted items. \r\n            ":"\r\n            获取元数据字典\r\n            需要属性，以便我们可以从项目中访问元数据字典\r\n            另一个AppDomain，因为CLR实施了远程策略，这些策略禁止访问\r\n            远处项目中的私人字段。\r\n            \r\n","The overall result for the target.":"目标的总体结果。\r\n","\r\n            Bake all unbaked states. States must be baked before calling EnterState().\r\n            Islands are created in a type with the specified name.\r\n            File name is to show up on the callstack as the type name: \"ASSEMBLYNAME!FILENAME.STATENAME(...LOCALS...)\"\r\n            If the type name is not unique, it will be appended with a unique identifier.\r\n            ":"\r\n            烘烤所有未烤状态。在调用sterstate（）之前，必须烘烤状态。\r\n            岛屿是用指定名称的类型创建的。\r\n            文件名是在呼叫列表上显示为类型名称：“ assemblyName！filename.statename（...当地人...）”\r\n            如果类型名称不是唯一的，则将附加带有唯一标识符。\r\n            \r\n","Confine search to item elements of this type.":"将搜索限制在此类型的项目元素中。\r\n","The component type to get.":"要获得的组件类型。\r\n","This class is not thread safe.":"该课程不是线程安全的。\r\n","The value, or an empty string if there is none by that name.":"值或一个空字符串，如果没有该名称。\r\n","\r\n            The ProjectItem object that indicates: the itemspec to match and the item type to constrain the search in.\r\n            The search is also constrained on item elements appearing before the item element that produced this ":"指示：要匹配的itemspec和以约束搜索的项目类型的projectItem对象。\r\n            搜索还受到限制，该项目元素出现在产生此的项目元素之前\r\n","Callback to be invoked if the configuration does not exist.":"如果不存在配置，则将调用回调。\r\n","\r\n            The build request ID on the originating node.\r\n            ":"\r\n            在原始节点上的构建请求ID。\r\n            \r\n","\r\n            A record for a task registration which also contains the factory which matches the record\r\n            ":"\r\n            任务注册的记录，该记录还包含与记录相匹配的工厂\r\n            \r\n","The persisted name will usually be the same as the property name as it appears in the ":"持久的名称通常与属性名称相同\r\n","\r\n            Remove all the children, if any.\r\n            ":"\r\n            如果有的话，请删除所有的孩子。\r\n            \r\n","\r\n            Implementation of IDisposable\r\n            ":"\r\n            实施Idisposable\r\n            \r\n","\r\n            Handle event that is fired when an entry in the project root element cache is removed \r\n            from its strong cache.\r\n            ":"\r\n            删除项目根元素缓存中的条目时发射的句柄事件\r\n            从强大的缓存。\r\n            \r\n","Task Name":"任务名称\r\n","File information where the error happened":"文件信息发生的何处\r\n","\r\n            Represents the location and grouping for a ":"\r\n            代表一个位置和分组\r\n","\r\n            Hash the string and write a String record if not already hashed.\r\n            ":"哈希字符串并编写字符串记录，如果尚未进行。\r\n            \r\n","\r\n            Parses either the $(propertyname) syntax or the %(metadataname) syntax, \r\n            and returns the parsed string beginning with the '$' or '%', and ending with the\r\n            closing parenthesis.\r\n            ":"\r\n            解析$（属性名称）语法或％（元数据）语法，\r\n            并返回以“ $”或“％”开头的解析字符串，然后以\r\n            关闭括号。\r\n            \r\n","\r\n            Constructor for non-deserialization initialization.\r\n            ":"\r\n            用于非排序初始化的构造函数。\r\n            \r\n","\r\n            Accessor which indicates if there are any registered host objects.\r\n            ":"\r\n            登录器指示是否有任何注册的主机对象。\r\n            \r\n","\r\n            Given the set of parameters that are set to the factory, and the set of parameters coming from the task invocation that we're searching for \r\n            a matching record to, determine whether the parameters match this record.  \r\n            ":"\r\n            给定设置为工厂的一组参数，以及我们正在搜索的任务调用的一组参数\r\n            匹配记录以确定参数是否匹配此记录。\r\n            \r\n"," requests against the specified project cache.\r\n            Any ":" 针对指定项目缓存的请求。\r\n            任何\r\n","\r\n            If this could be set, it would be necessary to have a callback\r\n            so that the containing collections could be updated, as they use the name as\r\n            their key.\r\n            ":"\r\n            如果可以设置此设置，则有必要进行回调\r\n            因此，可以更新包含的集合，因为它们使用名称为\r\n            他们的钥匙。\r\n            \r\n","\r\n            The request involved in the event.\r\n            ":"\r\n            活动中涉及的请求。\r\n            \r\n","\r\n            The project instance we are building\r\n            ":"\r\n            我们正在构建的项目实例\r\n            \r\n","Optional warnings to display during resolution.":"可选警告要在分辨率期间显示。\r\n","\r\n            Map of MSBuildExtensionsPath properties to their list of fallback search paths\r\n            ":"\r\n            MSBuildExtensionsPath属性的地图到其后备搜索路径列表\r\n            \r\n","\r\n            The label of the MSBuild property group/item definition group to which\r\n            a property/item definition metadata belongs to. Default value is the\r\n            empty string.\r\n            ":"\r\n            MSBUILD属性组/项目定义组的标签\r\n            属性/项目定义元数据属于。默认值是\r\n            空字符串。\r\n            \r\n","\r\n            The item type to which this metadata applies.\r\n            ":"此元数据适用的项目类型。\r\n            \r\n","The batching bucket":"批处理\r\n","\r\n            Whether the instance is immutable.\r\n            This is set permanently when the instance is created.\r\n            ":"\r\n            实例是否不变。\r\n            创建实例时将永久设置。\r\n            \r\n","\r\n            The fragments that compose an item spec string (values, globs, item references)\r\n            ":"\r\n            构成项目规格字符串的片段（值，地球，项目参考）\r\n            \r\n","\r\n            The actual importance at which standard error messages will be logged \r\n            ":"\r\n            记录标准错误消息的实际重要性\r\n            \r\n","The size of the elements in the array.":"数组中元素的大小。\r\n","\r\n            Raises an event which is raised when a project root element is removed from the strong cache.\r\n            ":"\r\n            提出一个事件，该事件是从强烈缓存中删除项目根元素时提出的。\r\n            \r\n","Xml reader to read project from":"XML阅读器从中读取项目\r\n","\r\n            Lazy-initted property for getting the architecture of the currently running process\r\n            ":"\r\n            懒惰的属性，用于获取当前运行过程的体系结构\r\n            \r\n","\r\n            DefaultTargets specified in the project, or\r\n            the logically first target if no DefaultTargets is\r\n            specified in the project.\r\n            The build builds these if no targets are explicitly specified\r\n            to build.\r\n            ":"\r\n            项目中指定的defaulttargets或\r\n            如果没有defaulttargets是，逻辑上的第一个目标是\r\n            在项目中指定。\r\n            如果未明确指定目标，则构建这些构建\r\n            建造。\r\n            \r\n","True on success, false otherwise.":"真实，成功，否则是错误的。\r\n","\r\n            This method should return immediately after signal the cancel event.\r\n            \"CancelRequest()\" is equal to call \"BeginCancel()\" and \"WaitForCancelCompletion()\".\r\n            We break \"CancelRequest()\" to 2 phases, so that we could signal cancel event\r\n            to a bunch of requests without waiting, in order to optimize the \"cancel build\" scenario.\r\n            ":"\r\n            该方法应在信号取消事件后立即返回。\r\n            “ cancelRequest（）”等于呼叫“ begincancel（）”和“ waitforcancelCompletion（）”。\r\n            我们将“ cancelRequest（）”打破到2个阶段，以便我们可以发出通知取消事件的信号\r\n            在没有等待的情况下，要进行一堆请求，以优化“取消构建”方案。\r\n            \r\n","\r\n            Private constructor for the PInvoke marshaller.\r\n            ":"\r\n            Pinvoke Manshaller的私人构造师。\r\n            \r\n","Metadata":"元数据\r\n","\r\n            The data structure which holds the data for the use of legacy threading semantics\r\n            ":"\r\n            保留使用旧线程语义的数据的数据结构\r\n            \r\n","ProjectFile":"ProjectFile\r\n","\r\n            UNDONE: (Performance) This algorithm should be modified so we don't have to iterate over all of the\r\n            requests to find a matching one.  A HashSet with proper equality semantics and a good hash code for the BuildRequest\r\n            would speed this considerably, especially for large numbers of projects in a build.\r\n            ":"\r\n            撤消：（性能）应修改此算法，以便我们不必迭代所有内容\r\n            要求找到匹配的请求。具有适当平等语义和良好哈希代码的标签\r\n            将大大加快这一速度，尤其是对于构建中的大量项目。\r\n            \r\n","\r\n            Perform a bitwise OR on the first and second (first | second) \r\n            ":"\r\n            在第一和第二（第一和第二）执行一个位置\r\n            \r\n","\r\n            The name of the uninitialized property that was read.\r\n            ":"\r\n            已阅读的非初始化属性的名称。\r\n            \r\n","\r\n            Retrieves a copy of the parameters as used during evaluation.\r\n            ":"\r\n            检索评估过程中使用的参数的副本。\r\n            \r\n","\r\n            The targets specified when the request was made.  Doesn't include default or initial targets.\r\n            Either this is null or ":"\r\n            提出请求时指定的目标。不包括默认目标或初始目标。\r\n            这是无效的\r\n","\r\n            The import was implicitly added at the bottom of the project.\r\n            ":"\r\n            该导入被隐式添加在项目的底部。\r\n            \r\n","True if the properties are equivalent, false otherwise.":"如果属性等效，则为true，否则为false。\r\n","\r\n            Sets the initial targets\r\n            Only set during evaluation, so does not check for immutability.\r\n            ":"\r\n            设置初始目标\r\n            仅在评估期间设置，因此不检查不变性。\r\n            \r\n","log output properties":"日志输出属性\r\n","\r\n            COMPAT: Whidbey used the \"current project file/targets\" directory for evaluating Import and PropertyGroup conditions\r\n            Orcas broke this by using the current root project file for all conditions\r\n            For Dev10+, we'll fix this, and use the current project file/targets directory for Import, ImportGroup and PropertyGroup\r\n            but the root project file for the rest. Inside of targets will use the root project file as always.\r\n            ":"\r\n            Compat：Whidbey使用“当前项目文件/目标”目录来评估导入和属性组条件\r\n            Orcas通过在所有条件下使用当前的根项目文件打破了此问题\r\n            对于dev10+，我们将修复此问题，并使用当前的项目文件/目标目录进行导入，importGroup和propertyGroup\r\n            但是其余的root项目文件。目标内部将一如既往地使用根项目文件。\r\n            \r\n","\r\n            Given an SDK identifier and an SDK version, return a list of installed platforms.\r\n            ":"\r\n            给定SDK标识符和SDK版本，请返回安装平台的列表。\r\n            \r\n","\r\n            Returns a list of metadata names and unescaped values, including\r\n            metadata from item definition groups, but not including built-in\r\n            metadata. Implementations should be low-overhead as the method\r\n            is used for serialization (in node packet translator) as well as\r\n            in the binary logger.\r\n            ":"\r\n            返回元数据名称和未设计值的列表，包括\r\n            项目定义组的元数据，但不包括内置\r\n            元数据。实现应为该方法低空范围\r\n            用于序列化（在节点数据包翻译器中）以及\r\n            在二进制记录仪中。\r\n            \r\n","\r\n            Returns the internal result for the target.\r\n            ":"\r\n            返回目标的内部结果。\r\n            \r\n","\r\n            List of names of the properties that, while global, are still treated as overridable\r\n            ":"\r\n            虽然全局仍然被视为填补的属性名称列表\r\n            \r\n","The type of node to create.":"创建节点的类型。\r\n","Any remote loggers to register. May be null and specified to any build instead.":"任何要注册的远程记录器。可以为null并指定为任何构建。\r\n","\r\n            Retrieves the metadata table used to collect additions.\r\n            ":"\r\n            检索用于收集添加的元数据表。\r\n            \r\n","\r\n            Raised when state is changed on this instance.\r\n            ":"\r\n            在此实例上更改状态时提出。\r\n            \r\n","\r\n            Returns true if there is a toolset defined for the specified \r\n            tools version, otherwise false.\r\n            ":"\r\n            如果有针对指定的工具集定义的工具集，则返回true\r\n            工具版本，否则为错误。\r\n            \r\n","The target SDK version.":"目标SDK版本。\r\n"," allowing the property usage to be tracked.\r\n            ":" 允许跟踪属性的使用。\r\n            \r\n","\r\n            Deals with exceptions that may be thrown when handling a submission.\r\n            ":"\r\n            处理处理提交时可能会抛出的例外。\r\n            \r\n","\r\n            Properties set in this scope or above.\r\n            ":"\r\n            在此范围或更高版本中设置的属性。\r\n            \r\n","\r\n            Gets or creates a dictionary keyed by normalized values.\r\n            ":"\r\n            获取或创建由归一化值键入的字典。\r\n            \r\n","Whether to reuse the node":"是否重复使用节点\r\n","\r\n            Character used to separate search paths specified for MSBuildExtensionsPath* in\r\n            the config file\r\n            ":"\r\n            字符用于分离为msbuildextensionspath*在\r\n            配置文件\r\n            \r\n"," represents a Build Customization, this field defines the semicolon separated list of additional inputs that are going to be evaluated\r\n            for the Build Customization target.\r\n            ":" 代表构建自定义，该字段定义了将要评估的其他输入的分离的分离列表\r\n            对于构建自定义目标。\r\n            \r\n","The resource response.":"资源响应。\r\n","\r\n            Returns the value of the attribute. \r\n            If the attribute is null, returns an empty string.\r\n            ":"\r\n            返回属性的值。\r\n            如果属性为null，请返回一个空字符串。\r\n            \r\n","\r\n            Flag set to true if an exception occurred while reading the manifest\r\n            ":"\r\n            如果在阅读清单时发生异常，则将标志设置为true\r\n            \r\n","\r\n            The latest version available at the time of major release. This\r\n            value should not be updated in minor releases as it could be a\r\n            breaking change. Use 'Latest' if possible, but note the\r\n            compatibility implications.\r\n            ":"\r\n            主要版本时可用的最新版本。这个\r\n            值不应以较小的版本更新，因为它可能是\r\n            打破变化。如果可能的话，请使用“最新”，但请注意\r\n            兼容性含义。\r\n            \r\n","\r\n                Name of the SDK resolver to be displayed in build output log.\r\n            ":"\r\n                SDK解析器的名称将显示在构建输出日志中。\r\n            \r\n","\r\n            This is the publicly exposed getter, that translates into a read-only dead IDictionary<string, string>.\r\n            \r\n            In order to easily tell when we're dirtied, setting and removing global properties is done with \r\n            ":"\r\n            这是公开暴露的getter，转化为仅读取的死idictionary <string，string>。\r\n            \r\n            为了轻松判断我们何时污垢，设置和删除全局属性已完成\r\n            \r\n","\r\n            Enumerable over a series of sibling ProjectElement objects\r\n            ":"\r\n            一系列兄弟姐妹项目电子对象枚举\r\n            \r\n","state for this stackframe":"该stackframe的状态\r\n","\r\n            UninitializedPropertyReadEventArgs\r\n            ":"\r\n            非初始化的propertyreadeventargs\r\n            \r\n","The task instance object.":"任务实例对象。\r\n","\r\n            Embed all project files directly in the log file.\r\n            ":"\r\n            将所有项目文件直接嵌入日志文件中。\r\n            \r\n","\r\n            Interface that we expect all root classes from project schema XAML files to implement\r\n            ":"\r\n            我们期望项目架构XAML文件的所有root类都可以实现的接口\r\n            \r\n","Error event arguments":"错误事件参数\r\n"," represents a Build Customization, this field represents the file extension to associate.\r\n            ":" 代表构建自定义，此字段代表为关联的文件扩展名。\r\n            \r\n","\r\n            Initialize a ProjectRootElement instance by loading from the specified file path.\r\n            Uses the global project collection.\r\n            May throw InvalidProjectFileException.\r\n            ":"\r\n            通过从指定的文件路径加载来初始化ProjectRootelement实例。\r\n            使用全球项目集合。\r\n            可能会抛出无效的fileException。\r\n            \r\n","\r\n            Delegate for event raised when a build request has completed.\r\n            ":"\r\n            构建请求完成后，提出的事件委托。\r\n            \r\n","\r\n            The binding flags that will be used during invocation of this function\r\n            ":"\r\n            在此功能调用期间将使用的绑定标志\r\n            \r\n","TargetResults":"目标恢复\r\n","\r\n            Continues a build request\r\n            ":"\r\n            继续构建请求\r\n            \r\n","\r\n            MinVSVersion metadata name\r\n            ":"\r\n            minvsversion元数据名称\r\n            \r\n","The .read. tlog files to interpret":".Read。 tlog文件解释\r\n","\r\n            APPX manifest attribute\r\n            ":"\r\n            appx清单属性\r\n            \r\n","\r\n            Event that is fired when a project is added to the ProjectRootElementCache of this project collection.\r\n            ":"\r\n            当项目添加到该项目集合的ProjectRootlementCache中时，将发射的事件。\r\n            \r\n","The left-hand argument":"左手论点\r\n","Item Type":"物品种类\r\n","\r\n            This request is currently blocked on one or more requests which must complete before it may continue.  There may only ever be one\r\n            request with a given global request id in this state.\r\n            ":"\r\n            目前，此请求被禁止在一个或多个请求中必须完成，该请求必须在其继续之前完成。可能只有一个\r\n            在此状态下具有给定的全局请求ID的请求。\r\n            \r\n","\r\n            Used to specify the targeted version of the .NET Framework for some methods of ToolLocationHelper.\r\n            ":"\r\n            用于为某些TOOllocationHelper的某些方法指定.NET框架的目标版本。\r\n            \r\n"," if the SDK name was successfully parsed, otherwise ":" 如果SDK名称已成功解析，则\r\n","\r\n            Special value indicating that all features behind all Change Waves should be enabled.\r\n            ":"\r\n            特殊值，表明应启用所有变更波背后的所有功能。\r\n            \r\n","\r\n            This method will re-write the tlogs from the current table\r\n            ":"\r\n            此方法将从当前表重新编写TLOGS\r\n            \r\n","\r\n            Handler for BuildStarted events.\r\n            ":"\r\n            建筑事件的处理程序。\r\n            \r\n"," is used.\r\n            May be set to null, but the getter will create a new instance in that case.\r\n            ":" 用来。\r\n            可以将其设置为null，但是在这种情况下，Getter将创建一个新实例。\r\n            \r\n","\r\n            Gets and sets the name of the target element.\r\n            ":"\r\n            获取并设置目标元素的名称。\r\n            \r\n","\r\n            Used to return a matched pair of endpoints for in-proc nodes to use with the Build Manager.\r\n            ":"用于返回匹配的端点，以与构建管理器一起使用的程序内节点。\r\n            \r\n","\r\n            Flag indicating if the operating environment such as the current directory and environment be saved and restored between project builds and task invocations.\r\n            This should be set to false for any other build managers running in the system so that we do not have two build managers trampling on each others environment.\r\n            ":"\r\n            标志指示在项目构建和任务调用之间保存并恢复的操作环境（例如当前目录和环境）。\r\n            对于在系统中运行的任何其他构建经理，应该将其设置为False，以便我们没有两个构建经理对彼此的环境进行践踏。\r\n            \r\n","\r\n                The global properties to use for all projects. May be null, in which case no global\r\n                properties will be set.\r\n            ":"\r\n                用于所有项目的全球属性。可能是无效的，在这种情况下没有全球\r\n                将设置属性。\r\n            \r\n","\r\n            Global collection id.\r\n            Can be used for external providers to optimize the cross-site link exchange\r\n            ":"\r\n            全球收集ID。\r\n            可以用于外部提供商来优化跨站点链接交换\r\n            \r\n","\r\n            Retrieves a previously registered task object stored with the specified key.\r\n            ":"\r\n            检索以指定密钥存储的先前注册的任务对象。\r\n            \r\n"," otherwise. Where available, it may be a non buildable-dummy object, and should only\r\n            be used to retrieve ":" 否则。在可用的地方，它可能是一个不可建造的对象，只应\r\n            被用来检索\r\n","\r\n            Get the disk roots to search for multi platform extension sdks in. The environment variable can \r\n            override the defaults.\r\n            ":"\r\n            获取磁盘根以搜索多平台扩展SDK。\r\n            覆盖默认值。\r\n            \r\n","\r\n            Constructs a standard NodeFailedToLaunchException.\r\n            ":"\r\n            构建标准的节点FailedToLaunchException。\r\n            \r\n","Creation pattern.":"创建模式。\r\n","\r\n            The global properties to evaluate with, if any.\r\n            Can never be null.\r\n            ":"\r\n            如果有的话，可以评估的全球属性。\r\n            永远不会无效。\r\n            \r\n","String index into the string.resx file":"字符串索引到String.resx文件\r\n","\r\n            Mapping of Build Request Configurations to Build Requests waiting for configuration resolution.\r\n            ":"\r\n            构建构建请求配置以构建请求，以等待配置分辨率。\r\n            \r\n","\r\n            Evaluated value of the metadatum. \r\n            Never null.\r\n            ":"\r\n            评估的元数据值。\r\n            永不零。\r\n            \r\n","\r\n            The project cache has already logged this as an error.\r\n            Should not get logged again.\r\n            ":"\r\n            项目缓存已经将其记录为错误。\r\n            不应该再次记录。\r\n            \r\n","\r\n            True if there were errors/warnings during the project or target frame.\r\n            ":"\r\n            如果在项目或目标框架期间存在错误/警告，则为thus。\r\n            \r\n","\r\n            The id of the project instance to which this event refers.\r\n            ":"\r\n            此事件引用的项目实例的ID。\r\n            \r\n","\r\n            Convenience method that picks a location based on a heuristic.\r\n            Updates the last existing property with the specified name that has no condition on itself or its property group, if any.\r\n            Otherwise, adds a new property in the first property group without a condition, creating a property group if necessary after\r\n            the last existing property group, else at the start of the project.\r\n            ":"\r\n            便利方法，根据启发式选择位置。\r\n            更新最后的现有属性，该属性具有指定的名称，该名称本身或其属性组（如果有）。\r\n            否则，在第一个属性组中添加一个新属性，没有条件，请在必要时创建一个属性组\r\n            最后一个现有的属性组，在项目开始时。\r\n            \r\n","The node for the task":"任务的节点\r\n","\r\n            The set of references.\r\n            ":"\r\n            一组参考。\r\n            \r\n","The number of elements in each page of the segmented array. Must be a power of 2.":"分段数组的每个页面中的元素数量。必须是2的力量。\r\n","\r\n            In the future, this function may fixup 'text' to handle\r\n            literal embedded quotes.\r\n            ":"\r\n            将来，此功能可能会修复“文本”以处理\r\n            字面嵌入式引号。\r\n            \r\n","IItems":"IITEMS\r\n","\r\n            Finds projects in order of expense and displays the paths leading to them.\r\n            ":"\r\n            按费用顺序找到项目，并显示导致其的路径。\r\n            \r\n","\r\n            Cancels an existing request.\r\n            ":"\r\n            取消现有请求。\r\n            \r\n","\r\n            Project to preprocess\r\n            ":"\r\n            项目预处理\r\n            \r\n","\r\n            Recurses into the provided container (such as a choose) and finds all child elements, even if nested.\r\n            Result does NOT include the element passed in.\r\n            The caller could filter these.\r\n            ":"\r\n            递归到提供的容器（例如选择）中，并找到所有子元素，即使嵌套了。\r\n            结果不包括传递的元素。\r\n            呼叫者可以过滤这些。\r\n            \r\n","\r\n            Location of the keepMetadata attribute, if any.\r\n            ":"\r\n            keepmetadata属性的位置（如果有）。\r\n            \r\n","\r\n            This property returns the union of XAML specified ":"\r\n            此属性返回指定的XAML联合\r\n","\r\n            Clones the build result (the resultsByTarget field is only a shallow copy).\r\n            ":"\r\n            克隆构建结果（ResulteByTarget字段只是浅副本）。\r\n            \r\n","\r\n            The Project with which each item should be associated.\r\n            ":"\r\n            每个项目都应关联的项目。\r\n            \r\n","\r\n            Name of the task wrapped by the task factory\r\n            ":"\r\n            任务工厂包裹的任务的名称\r\n            \r\n","The new requests to be issued.":"新请求要发出。\r\n","The file to evaluate the project from.":"从中评估项目的文件。\r\n","\r\n            Gets a buffer from the pool or creates a new one.\r\n            ":"\r\n            从游泳池中获取缓冲区或创建新的缓冲区。\r\n            \r\n","\r\n            Verify the fields are identical\r\n            ":"\r\n            验证字段相同\r\n            \r\n","\r\n            Call this method to notify listeners of the start of a build as called from the command line.\r\n            ":"\r\n            调用此方法以将命令行调用的构建开始通知听众。\r\n            \r\n","\r\n            The data source where the current value of this property is stored. \r\n            ":"\r\n            存储此属性的当前值的数据源。\r\n            \r\n","A collection of target names the user requested to be built.":"目标名称的集合，用户要求构建的用户。\r\n","\r\n            Gets or sets the name of the event.\r\n            ":"\r\n            获取或设置事件的名称。\r\n            \r\n","line number (0 if not applicable)":"行号（0如果不适用）\r\n","\r\n            An object used for locking in this class instance.\r\n            ":"\r\n            用于锁定此类实例的对象。\r\n            \r\n","\r\n            Delegate to use for writing a string to some location like\r\n            the console window or the IDE build window.\r\n            ":"\r\n            用于将字符串写入某些位置的委托\r\n            控制台窗口或IDE构建窗口。\r\n            \r\n","\r\n            Config associated with this element\r\n            ":"\r\n            与此元素关联的配置\r\n            \r\n","\r\n            Disposes the FullTracking object, causing full tracking to end, or resume,\r\n            depending on how this object was created.\r\n            ":"\r\n            处理完整的对象，导致完整的跟踪结束或恢复，\r\n            取决于该对象的创建方式。\r\n            \r\n","Timestamp when the event was created":"创建事件时的时间戳\r\n","\r\n            Submits a build request to the current build but does not start it immediately.  Allows the user to\r\n            perform asynchronous execution or access the submission ID prior to executing the request.\r\n            ":"向当前构建提交构建请求，但不会立即启动。允许用户\r\n            在执行请求之前，执行异步执行或访问提交ID。\r\n            \r\n","\r\n            Previous sibling element.\r\n            May be null.\r\n            ":"\r\n            以前的同级元素。\r\n            可能是无效的。\r\n            \r\n","\r\n            Gets or sets the Inputs value. \r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"\r\n            获取或设置输入值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n","The command line arguments that need\r\n            to go into the temporary response file.":"需要的命令行参数\r\n            进入临时响应文件。\r\n","\r\n            Delegate for event raised when a new build request needs to be issued.\r\n            ":"\r\n            当需要发出新的构建请求时提出的事件委托。\r\n            \r\n","\r\n            Regkey that we check to see whether VC Express 2010 is installed.  This will exist if it is installed, and be\r\n            properly removed after it has been uninstalled.\r\n            ":"\r\n            我们检查是否安装了VC Express 2010。如果安装它，则将存在，并且\r\n            卸载后正确删除。\r\n            \r\n","\r\n            Initialize an unparented ProjectExtensionsElement instance\r\n            ":"\r\n            初始化无与伦比的ProjectExtensionsElement实例\r\n            \r\n","\r\n            Cloning constructor\r\n            ":"\r\n            克隆构造函数\r\n            \r\n","The delimiter between file names":"文件名之间的定界符\r\n","The build request entry which is being blocked.":"被阻止的构建请求条目。\r\n","\r\n            Wraps a target element\r\n            ":"\r\n            包装目标元素\r\n            \r\n","\r\n            The data flow processor for logging events.\r\n            ":"\r\n            用于记录事件的数据流处理器。\r\n            \r\n","\r\n            Event that is fired when an entry in the Strong Cache is removed.\r\n            ":"\r\n            删除强缓存中的条目时会发射的事件。\r\n            \r\n","\r\n            Gets any existing metadatum on the item, or\r\n            else any on an applicable item definition.\r\n            ":"\r\n            在该项目上获取任何现有的元数据，或\r\n            否则适用的项目定义上的任何内容。\r\n            \r\n","Operation":"手术\r\n","\r\n            This is a simple container for ":"\r\n            这是一个简单的容器\r\n","\r\n            Gets the assembly file version in the format major.minor.\r\n            ":"\r\n            获取格式大小的汇编文件版本。\r\n            \r\n","\r\n            The current pending and active submissions.\r\n            ":"\r\n            当前的待处理和主动提交。\r\n            \r\n","\r\n            Get a read-only collection of the child item definitions, if any, in all item definition groups anywhere in the project file.\r\n            ":"\r\n            在项目文件中任何地方的所有项目定义组中，在所有项目定义组中获取只读的子项目定义（如果有）的收集。\r\n            \r\n","\r\n            Yes, we are constructing.\r\n            ":"\r\n            是的，我们正在构建。\r\n            \r\n","\r\n            Whether reevaluation is temporarily disabled on projects in this collection.\r\n            This is useful when the host expects to make a number of reads and writes \r\n            to projects, and wants to temporarily sacrifice correctness for performance.\r\n            ":"\r\n            重新评估是否在此集合中的项目上暂时禁用。\r\n            当主机期望进行多个读取和写入时，这很有用\r\n            进行项目，并希望暂时牺牲绩效的正确性。\r\n            \r\n","\r\n            Regkey that we check to see whether LightSwitch 2010 is installed.  This will exist if it is installed, and be\r\n            properly removed after it has been uninstalled.\r\n            ":"\r\n            我们检查是否安装了Lightswitch 2010。如果安装它，则将存在，并且\r\n            卸载后正确删除。\r\n            \r\n","The new engine status.":"新的引擎状态。\r\n","\r\n            Switches the binaryWriter used by the Write* methods to the direct underlying stream writer\r\n            until the disposable is disposed. Useful to bypass the currentRecordWriter to write a string,\r\n            blob or NameValueRecord that should precede the record being currently written.\r\n            ":"\r\n            切换写*方法使用的二进制作者到直接的基础流动作者\r\n            直到处置为止。对于绕过当前的recordWriter来编写字符串，很有用，\r\n            Blob或nameValueRecord应该在当前正在编写的记录之前。\r\n            \r\n","\r\n            Modulo two doubles\r\n            ":"\r\n            Modulo两个双打\r\n            \r\n","\r\n            Name of the contract\r\n            ":"\r\n            合同名称\r\n            \r\n","\r\n            The pszSpec parameter points to a semicolon-delimited list of file name patterns to be matched.\r\n            ":"\r\n            PSZSPEC参数指向要匹配的文件名称模式的半脱落列表。\r\n            \r\n","\r\n            Parses a string of the form %(itemmetadataname).\r\n            ":"\r\n            解析form％的字符串（itemmetAdatAname）。\r\n            \r\n","\r\n            The DataReceived event is raised on a separate thread from that which called SendData\r\n            ":"\r\n            DataReceived事件是在与称为senddata的单独线程上提出的\r\n            \r\n","\r\n            Path of the project the itemspec is coming from\r\n            ":"\r\n            项目的路径来自Itemspec\r\n            \r\n","\r\n            Removes a global property.\r\n            If it was set, returns true, and marks the project\r\n            as requiring reevaluation.\r\n            ":"\r\n            删除全球财产。\r\n            如果设置了，请返回真实并标记项目\r\n            需要重新评估。\r\n            \r\n","\r\n            Translates a double.\r\n            ":"\r\n            翻译双。\r\n            \r\n","\r\n            Provides a method to read a binary log file (*.binlog) and replay all stored BuildEventArgs\r\n            by implementing IEventSource and raising corresponding events.\r\n            ":"\r\n            提供了读取二进制日志文件（*.binlog）并重播所有存储的buildEventargs的方法\r\n            通过实施ieventsource并筹集相应的事件。\r\n            \r\n","The name/value pairs for the parameters.":"参数的名称/值对。\r\n","\r\n            Adds the specified logger to the set of loggers for this submission.\r\n            ":"\r\n            将指定的记录器添加到本提交的记录仪集中。\r\n            \r\n","\r\n            Unevaluated exclude\r\n            ":"\r\n            不排除\r\n            \r\n","\r\n            Gets an existing item definition, if any.\r\n            ":"\r\n            获取现有的项目定义（如果有）。\r\n            \r\n","\r\n            There should only ever be one entry in the Active state.  This is the request which is\r\n            being actively built by the engine - i.e. it has a running task thread.  All other requests\r\n            must be in one of the other states.  When in this state, the outstandingRequest and\r\n            receivedResult members must be null.\r\n            \r\n            Transitions: \r\n                Waiting:  When an msbuild callback is made the active build request needs to wait\r\n                          for the results in order to continue to process.\r\n                Complete: The build request has generated all of the required results.\r\n            ":"\r\n            在活动状态下只有一个条目。这是\r\n            由引擎积极构建 - 即它具有运行的任务线程。所有其他请求\r\n            必须位于其他州之一。在这种状态下，杰出的雷克斯和\r\n            收到的成员必须为无效。\r\n            \r\n            过渡：\r\n                等待：当MSBuild回调时，主动构建请求需要等待\r\n                          为了继续处理结果。\r\n                完成：构建请求已生成所有必需的结果。\r\n            \r\n","\r\n            Returns an iterator over the \"logical project\". The logical project is defined as\r\n            the unevaluated project obtained from the single MSBuild file that is the result \r\n            of inlining the text of all imports of the original MSBuild project manifest file.\r\n            ":"\r\n            通过“逻辑项目”返回迭代器。逻辑项目定义为\r\n            从单个msbuild文件获得的未评估项目是结果\r\n            包含原始MSBUILD项目清单文件的所有导入文本。\r\n            \r\n","\r\n            Remove the output graph entries for the given sources and corresponding outputs\r\n            ":"\r\n            删除给定来源和相应输出的输出图条目\r\n            \r\n","\r\n            Retrieves a request which is currently yielding.\r\n            ":"\r\n            检索当前产生的请求。\r\n            \r\n","\r\n            Compares the file/directory designated as \"input\" against the file/directory designated as \"output\", and indicates if\r\n            the \"output\" file/directory is out-of-date w.r.t. the \"input\" file/directory.\r\n            ":"\r\n            将指定为“输入”的文件/目录与指定为“输出”的文件/目录进行比较，并指示是否\r\n            “输出”文件/目录是过时的W.R.T. “输入”文件/目录。\r\n            \r\n","\r\n            Initialize a parented ProjectImportElement\r\n            ":"\r\n            初始化育儿projectImportelement\r\n            \r\n","\r\n            This method will re-write the tlogs from the current output table new entries will\r\n            be tracked.\r\n            ":"\r\n            此方法将重写当前输出表的TLOGS新条目将\r\n            被跟踪。\r\n            \r\n"," context for parsing.":" 解析的上下文。\r\n","\r\n            Marks this element as dirty.\r\n            The default implementation simply marks the parent as dirty.\r\n            If there is no parent, because the element has not been parented, do nothing. The parent\r\n            will be dirtied when the element is added.\r\n            Accepts a reason for debugging purposes only, and optional reason parameter.\r\n            ":"\r\n            将此元素标记为脏。\r\n            默认实现只是将父级标记为脏。\r\n            如果没有父母，因为该元素尚未获得父母，那就什么也不做。父母\r\n            添加元素时将被弄脏。\r\n            接受仅进行调试目的的原因和可选的原因参数。\r\n            \r\n","\r\n            Reserved for use by the C Run-time; must be zero.\r\n            ":"\r\n            保留用于C运行时使用；必须为零。\r\n            \r\n","\r\n            The last-write-time of the file that was read, when it was read.\r\n            This can be used to see whether the file has been changed on disk\r\n            by an external means.\r\n            ":"\r\n            读取时读取的文件的最后一个时间。\r\n            这可以用来查看文件是否已在磁盘上更改\r\n            通过外部手段。\r\n            \r\n","Name of the toolset":"工具集的名称\r\n","\r\n            A table indicating if a particular event type should be forwarded\r\n            The value is type int rather than bool to avoid the problem of JITting generics.\r\n            ":"\r\n            表明是否应该转发特定事件类型的表\r\n            该值是type int而不是bool，以避免引起通用的问题。\r\n            \r\n","\r\n            Represents the location of an implicit import.\r\n            ":"\r\n            表示隐式导入的位置。\r\n            \r\n","\r\n            A shared buffer to avoid extra allocations in InterningBinaryReader.\r\n            ":"\r\n            共享缓冲区，以避免在InderningBinareReader中进行额外的分配。\r\n            \r\n","\r\n            MaxOSVersionTestedAttribute metadata name\r\n            ":"\r\n            maxosversiontesteDattribute元数据名称\r\n            \r\n"," which can fit into an array\r\n            which has the following characteristics:\r\n            ":" 可以适合阵列\r\n            具有以下特征：\r\n            \r\n","\r\n            An item without an item type. Cast to an ITaskItem, this is\r\n            what is given to tasks. It is also used for target outputs.\r\n            ":"\r\n            没有项目类型的项目。铸造到itaskItem，这是\r\n            任务给出了什么。它也用于目标输出。\r\n            \r\n","\r\n            Given a string which may start with a \"v\" convert the string to a version object.\r\n            ":"\r\n            给定的字符串可能以“ V”开头，将字符串转换为版本对象。\r\n            \r\n","\r\n            Returns the path to the .NET Framework SDK.\r\n            ":"\r\n            返回到.NET框架SDK的路径。\r\n            \r\n","\r\n            The task must be executed in a separate AppDomain.\r\n            ":"\r\n            该任务必须在单独的AppDomain中执行。\r\n            \r\n","\r\n            The schedulable request which issued this request.\r\n            ":"\r\n            发布此请求的可计划请求。\r\n            \r\n","\r\n            Retrieves one of the arbitrary metadata on the item.\r\n            If not found, returns empty string.\r\n            ":"\r\n            检索项目上的任意元数据之一。\r\n            如果找不到，请返回空字符串。\r\n            \r\n","\r\n            List of guids, in \"{XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX}\" form, mapping to projects \r\n            that this project has a build order dependency on, as defined in the solution file. \r\n            ":"\r\n            GUID列表，在“ {xxxxxxxx-xxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxxxxxxx}”中，映射到项目\r\n            该项目具有解决方案文件中定义的构建订单依赖关系。\r\n            \r\n","If true the project will be unloaded once the \r\n                                                    operation is completed ":"如果是正确的话，该项目将在\r\n                                                    操作完成\r\n","\r\n            Help implement ItemType setter for remote objects.\r\n            ":"\r\n            帮助实现远程对象的ItemType设置程序。\r\n            \r\n","Explicit set of SdkResolvers to use for all SDK resolution.":"明确的SDKResolvers集用于所有SDK分辨率。\r\n","\r\n            Sets the first child in this container\r\n            ":"\r\n            在此容器中设置第一个孩子\r\n            \r\n","\r\n                Constructs a graph starting from the given graph entry points, evaluating with the global project collection.\r\n            ":"\r\n                从给定的图入口点开始构建图形，并通过全局项目集合进行评估。\r\n            \r\n","\r\n            Symbol used in ProjectReferenceTarget items to represent default targets\r\n            ":"\r\n            projectReferenceTarget项目中使用的符号表示默认目标\r\n            \r\n","O(1)":"o（1）\r\n","\r\n            Gets the value of an integer environment variable, or returns the default if none is set or it cannot be converted.\r\n            ":"\r\n            获取整数环境变量的值，或者如果设置了一个或无法转换，则返回默认值。\r\n            \r\n","\r\n            AppendSwitchUnquotedIfNotNull(\"/sources:\", new string[] {\"Alpha.cs\", \"Be ta.cs\"}, \";\") => \"/sources:Alpha.cs;Be ta.cs\"\r\n            ":"\r\n            appendswitchunquotedifnotnull（“/sources：”，new String [] {“ alpha.cs”，“ Be ta.cs”}，“;”）=>“）=>“/sources：alpha.cs; cs; cs; cs ta.cs”\r\n            \r\n","\r\n            The property name that this function is applied on\r\n            ":"\r\n            该功能应用于该功能的属性名称\r\n            \r\n","\r\n            The exception generated when the target ran, if any.\r\n            ":"\r\n            目标运行时产生的异常（如果有）。\r\n            \r\n","Returns the string record index as well as the hash.":"返回字符串记录索引以及哈希。\r\n","\r\n             (for diagnostic use) Whether or not this is out of proc\r\n            ":"\r\n             （用于诊断使用）是否不超出PROC\r\n            \r\n"," represents a Build Customization, this field represents the message to be displayed before executing a Build Customization during the build.\r\n            ":" 代表构建自定义，此字段表示在构建过程中执行构建自定义之前要显示的消息。\r\n            \r\n","\r\n            Retrieves the toolsets.\r\n            ":"\r\n            检索工具集。\r\n            \r\n","\r\n            The current submission id building on the main thread, if any.\r\n            ":"\r\n            主线程上的当前提交ID构建（如果有）。\r\n            \r\n"," containing the resolved SDKs or associated error / reason\r\n                the SDK could not be resolved.\r\n                ":" 包含已解决的SDK或关联的错误 /原因\r\n                SDK无法解决。\r\n                \r\n","\r\n            Stores strings for parts of a message delaying the formatting until it needs to be shown\r\n            ":"\r\n            存储消息的一部分字符串，延迟格式直到需要显示格式\r\n            \r\n","Target .NET Framework version.":"目标.NET框架版本。\r\n","\r\n            Expand only bare custom metadata and then properties\r\n            ":"\r\n            仅扩展裸露的自定义元数据，然后扩展属性\r\n            \r\n","\r\n            Given a type name and method name, try to resolve the type.\r\n            ":"\r\n            给定类型名称和方法名称，尝试解析类型。\r\n            \r\n","An optional directory to start the search in.  The default location is the directory\r\n            of the file containing the property funciton.":"可选目录以启动搜索。默认位置是目录\r\n            包含属性funciton的文件。\r\n","The list of warning codes to treat as errors.":"警告代码列表将其视为错误。\r\n","\r\n            Location of the originating file itself, not any specific content within it.\r\n            If the file has not been given a name, returns an empty location.\r\n            This is a case where it is legitimate to \"not have a location\".\r\n            ":"\r\n            原始文件本身的位置，而不是其中的任何特定内容。\r\n            如果没有给文件命名，请返回空位置。\r\n            在这种情况下，“没有位置”是合法的。\r\n            \r\n","\r\n            Gets or sets the project collection which contains this project.\r\n            Can never be null.\r\n            Cannot be modified.\r\n            ":"\r\n            获取或设置包含此项目的项目集合。\r\n            永远不会无效。\r\n            无法修改。\r\n            \r\n","\r\n            The target entry for which we are a dependency.\r\n            ":"\r\n            我们是依赖性的目标条目。\r\n            \r\n","\r\n            The set of results for each target.\r\n            ":"\r\n            每个目标的结果集。\r\n            \r\n","\r\n            Ignore invalid target files when evaluating the project\r\n            ":"\r\n            评估项目时忽略无效的目标文件\r\n            \r\n","\r\n            Indicates that the build should reset the configuration and results caches.\r\n            ":"\r\n            表示构建应重置配置并结果缓存。\r\n            \r\n","\r\n            Build default target/s with loggers of the project collection.\r\n            Returns true on success, false on failure.\r\n            Only valid if mutable.\r\n            ":"\r\n            使用项目集合的记录仪构建默认目标。\r\n            成功返回，成功，失败。\r\n            仅有效，如果可变。\r\n            \r\n","\r\n            This methods requests the BuildManager to find a matching ProjectInstance in its cache of previously-built projects.\r\n            If none exist, a new instance will be created from the specified project.\r\n            ":"\r\n            该方法要求BuildManager在其先前构建的项目中找到一个匹配的ProjectInstance。\r\n            如果不存在，将从指定的项目创建一个新实例。\r\n            \r\n","\r\n            Holds the directory pattern for globs like **/{pattern}/**, i.e. when we're looking for a matching directory name\r\n            regardless of where on the path it is. This field is used only if the wildcard directory part has this shape. In\r\n            other cases such as **/{pattern1}/**/{pattern2}/**, we don't use this optimization and instead rely on\r\n            ":"\r\n            保留诸如**/{模式}/**之类的地球的目录模式，即当我们寻找匹配目录名称时\r\n            无论路径在哪里。仅当通配符目录部分具有此形状时，才会使用此字段。在\r\n            其他情况，例如**/{pattern1}/**/{pattern2}/**，我们不使用此优化，而是依靠\r\n            \r\n","\r\n            At the end of the build, repeats the errors and warnings that occurred \r\n            during the build, and displays the error count and warning count.\r\n            Does this in a \"flat\" style, without context.\r\n            ":"\r\n            在构建结束时，重复发生的错误和警告\r\n            在构建过程中，并显示错误计数和警告计数。\r\n            以“平坦”风格这样做，没有上下文。\r\n            \r\n","The expander used to expand the value of the properties.  Ref because if we are accumulating the properties, we need to re-create the expander to account for the new property value.":"用于扩展属性值的扩展器。参考，因为如果我们累积了属性，我们需要重新创建扩展器以考虑新的属性价值。\r\n","\r\n            Maps global request Id to an executing request.\r\n            ":"\r\n            将全局请求ID映射到执行请求。\r\n            \r\n","Project instance creation settings.":"项目实例创建设置。\r\n","\r\n            Location of keepDuplicates, if any\r\n            ":"\r\n            藏匿处的位置，如果有的话\r\n            \r\n","\r\n            Shuts down the component\r\n            ":"\r\n            关闭组件\r\n            \r\n","\r\n            Holds thepreallocated buffer. \r\n            ":"\r\n            持有新的缓冲液。\r\n            \r\n","\r\n            This interface will allow us to share a single field between\r\n            ":"\r\n            该界面将使我们能够在\r\n            \r\n","\r\n            The component responsible for building targets.        \r\n            ":"\r\n            负责建筑目标的组件。\r\n            \r\n","\r\n            Searches upward for the specified file, beginning in the specified ":"\r\n            向上搜索指定的文件，从指定的文件开始 \r\n","\r\n            Location of the exclude attribute\r\n            ":"\r\n            排除属性的位置\r\n            \r\n","global properties for the current project.":"当前项目的全球属性。\r\n","A Hashset containing warning codes that should be treated as messages.":"一个包含警告代码的标签，该警告代码应被视为消息。\r\n","\r\n            Characters that need to be cleansed from a project name.\r\n            ":"\r\n            需要从项目名称清洁的字符。\r\n            \r\n","Cache to be used for all timestamp/exists comparisons, which can be shared between multiple FlatTrackingData instances.":"用于所有时间戳/存在比较的缓存，可以在多个flattrackingdata实例之间共享。\r\n","\r\n            Non null if this import was an sdk import.\r\n            ":"\r\n            non Null如果此导入是SDK导入。\r\n            \r\n","\r\n            Item type, for example \"Compile\"\r\n            Never null.\r\n            ":"\r\n            项目类型，例如“编译”\r\n            永不零。\r\n            \r\n","\r\n            This method finds all of the paths which lead to any given project\r\n            ":"\r\n            此方法找到导致任何给定项目的所有路径\r\n            \r\n","The normalized string":"标准化的字符串\r\n","The character in the position marked by index.":"由索引标记的位置的字符。\r\n","\r\n            Factory for component creation.\r\n            ":"\r\n            组件创建的工厂。\r\n            \r\n","The location from which it was referred.":"转介的位置。\r\n","\r\n            Adds data to the EventArgs of the log packet that the main node is aware of, but doesn't\r\n            get serialized for perf reasons.\r\n            ":"\r\n            将数据添加到主要节点所知道的日志数据包的事件中，但不\r\n            出于完美原因而序列化。\r\n            \r\n","\r\n            The component which is responsible for providing test data to the variour components\r\n            ":"\r\n            负责向变量组件提供测试数据的组件\r\n            \r\n"," simply by\r\n             reassigning the field containing this struct. Therefore it is extremely important that ":" 简而言之\r\n             重新分配包含此结构的字段。因此，非常重要的是\r\n","\r\n            Instantiates a project collection with specified global properties and loggers and using the\r\n            specified toolset locations.\r\n            May throw InvalidToolsetDefinitionException.\r\n            ":"\r\n            实例化一个带有指定全局属性和登录器的项目集合，并使用\r\n            指定的工具集位置。\r\n            可能会抛出无效的DoolsetDefinitionException。\r\n            \r\n","\r\n            Not presently used, but could be used for a multi-stage caching mechanism which first throws out decompressed items,\r\n            then if more space is needed, starts throwing out the compressed ones.\r\n            ":"\r\n            目前未使用，但可以用于多阶段的缓存机构，该机构首先抛出压缩的项目，\r\n            然后，如果需要更多空间，请开始扔掉压缩的空间。\r\n            \r\n","The keyword string.":"关键字字符串。\r\n","\r\n            Any object exposing host services.\r\n            May be null.\r\n            ":"\r\n            公开主机服务的任何对象。\r\n            可能是无效的。\r\n            \r\n","\r\n            The SDK resolution service.\r\n            ":"\r\n            SDK分辨率服务。\r\n            \r\n","\r\n            If the property's initial value is set, it logs a PropertyInitialValueSet event.\r\n            ":"\r\n            如果设置了属性的初始值，它将记录一个属性initialValueset事件。\r\n            \r\n","\r\n            This method is useful for the case where the host knows that all projects using this XML element\r\n            are unloaded, and desires to discard any unsaved changes.\r\n            ":"\r\n            此方法对于主机知道所有使用此XML元素的项目很有用\r\n            被卸载，并希望丢弃任何未保存的更改。\r\n            \r\n","\r\n            Message from exception thrown while reading manifest\r\n            ":"\r\n            阅读清单时引发异常的消息\r\n            \r\n","\r\n            Setting the associated environment variable to 1 restores the pre-15.8 single\r\n            threaded (slower) copy behavior. Zero implies Int32.MaxValue, less than zero\r\n            (default) uses the empirical default in Copy.cs, greater than zero can allow\r\n            perf tuning beyond the defaults chosen.\r\n            ":"\r\n            将关联的环境变量设置为1，将恢复15.8前单个单身\r\n            螺纹（较慢）复制行为。零意味着int32.maxvalue，小于零\r\n            （默认值）使用copy.cs中的经验默认值，大于零可以允许\r\n            超出选择的默认值超越。\r\n            \r\n","\r\n            Determine if the given search pattern will match loosely on Windows\r\n            ":"\r\n            确定给定的搜索模式是否会在Windows上松散匹配\r\n            \r\n","\r\n            Whether this object can be changed.\r\n            An immutable object can not be made mutable.\r\n            ":"\r\n            是否可以更改此对象。\r\n            不变的物体无法变形。\r\n            \r\n","\r\n            Are there any active nodes?\r\n            ":"\r\n            有活性节点吗？\r\n            \r\n","\r\n            Raised for TaskStartedEventArgs instances\r\n            ":"\r\n            为TaskStartedEventargs实例提出\r\n            \r\n","\r\n            Removes all parameters from the task.\r\n            Does not remove any \"special\" parameters: ContinueOnError, Condition, etc.\r\n            ":"\r\n            从任务中删除所有参数。\r\n            不会删除任何“特殊”参数：持续方，状况等。\r\n            \r\n","\r\n            Delegate used to tell the node provider that a context has terminated.\r\n            ":"\r\n            代表用来告诉节点提供商上下文已终止。\r\n            \r\n","\r\n            The default thread stack size for threads owned by MSBuild.\r\n            ":"\r\n            MSBuild拥有的线程的默认线程堆栈大小。\r\n            \r\n","\r\n            Represents an object which can build targets for a project.\r\n            ":"\r\n            代表一个可以为项目构建目标的对象。\r\n            \r\n","\r\n            The next build request configuration ID to use.\r\n            These must be unique across build managers, as they\r\n            are used as part of cache file names, for example.\r\n            ":"\r\n            要使用的下一个构建请求配置ID。\r\n            这些必须在构建经理中是独一无二的\r\n            例如，用作缓存文件名的一部分。\r\n            \r\n","BuildEventContext is null":"buildEventContext为null\r\n","\r\n            * and ? are invalid file name characters, but they occur in globs as wild cards.\r\n            ":"\r\n            * 和 ？是无效的文件名字符，但它们以通配符的形式出现在地球仪中。\r\n            \r\n","\r\n            Get a fully qualified path to a file in the .NET Framework SDK. Error if the .NET Framework SDK can't be found.\r\n            ":"\r\n            在.NET Framework SDK中获取通往文件的完全合格的路径。如果找不到.NET Framework SDK，则错误。\r\n            \r\n","\r\n            The object responsible for creating and managing task host nodes.\r\n            ":"\r\n            负责创建和管理任务主机节点的对象。\r\n            \r\n","\r\n            Get the escaped value of the provided property.\r\n            ":"\r\n            获取所提供属性的逃脱价值。\r\n            \r\n","\r\n            Shutdown method implementation of ILogger - we need to flush and close our logfile.\r\n            ":"\r\n            Ilogger的关闭方法实现 - 我们需要冲洗并关闭日志文件。\r\n            \r\n","Number of logical cores actually granted. If ":"实际授予的逻辑核心数量。如果\r\n","\r\n            We use a BindingFlags.Public flag here because the getter is public, so although the setter is internal,\r\n            it is only discoverable with Reflection using the Public flag (go figure!)\r\n            ":"\r\n            我们在此处使用bindingflags.public标志，因为getter是公开的，因此，尽管设置器是内部的，但\r\n            只有使用公共标志的反射才能发现（GO图！）\r\n            \r\n","\r\n            Remove the entry in the input dependency graph corresponding to the rooting marker \r\n            passed in. \r\n            ":"\r\n            删除与生根标记相对应的输入依赖图中的条目\r\n            传入。\r\n            \r\n","\r\n            Internal code that wants to set this to true should call ":"\r\n            想要将其设置为真的内部代码应致电\r\n","\r\n            Given a string like \"Registry:HKEY_LOCAL_MACHINE\\Software\\Vendor\\Tools@TaskLocation\", return the value at that location\r\n            in the registry. If the value isn't found, returns String.Empty.\r\n            Properties may refer to a registry location by using the syntax for example\r\n            \"$(Registry:HKEY_LOCAL_MACHINE\\Software\\Vendor\\Tools@TaskLocation)\", where \"HKEY_LOCAL_MACHINE\\Software\\Vendor\\Tools\" is the key and\r\n            \"TaskLocation\" is the name of the value.  The name of the value and the preceding \"@\" may be omitted if\r\n            the default value is desired.\r\n            ":"\r\n            给定一个字符串之类\r\n            在注册表中。如果找不到该值，请返回string.empty。\r\n            属性可以使用语法来指注册表位置\r\n            “ $（注册表：hkey_local_machine \\ software \\ vendor \\ wools@tasklocation）”，其中“ hkey_local_machine \\ software \\ software \\ vendor \\ wools \\ tools \\ tools”是关键，\r\n            “任务集”是该值的名称。值的名称和前面的“@”可能会省略\r\n            需要默认值。\r\n            \r\n","\r\n            Returns the exception generated while this result was run, if any. \r\n            ":"\r\n            在运行此结果时返回生成的异常（如果有）。\r\n            \r\n","\r\n            SubmissionId for this submission record\r\n            ":"\r\n            提交记录的提交\r\n            \r\n","\r\n            On shutdown, the profiler report is written to disk\r\n            ":"\r\n            在关闭时，剖面报告将写给磁盘\r\n            \r\n","Tools Version override (may be null).  This should be any tools version explicitly passed to the command-line or from an MSBuild ToolsVersion parameter.":"工具版本覆盖（可能为null）。这应该是任何工具版本明确传递给命令行或MSBuild ToolsVersion参数。\r\n","\r\n                Load a graph with root node at entryProjectFile\r\n                Maintain a queue of projects to be processed and evaluate projects in parallel\r\n                Returns false if loading the graph is not successful\r\n            ":"\r\n                在EntryProjectFile处加载带有根节点的图形\r\n                保持一系列要处理和评估项目的项目队列\r\n                如果加载图未成功，则返回false\r\n            \r\n","\r\n            Strings that users of this logger can pass in to enable specific events or logger output.\r\n            Also used as keys into our dictionary.\r\n            ":"\r\n            该记录器用户可以传递以启用特定事件或记录器输出的字符串。\r\n            还用作我们词典的键。\r\n            \r\n","\r\n            MSBuild calls this method after executing the task to get output parameters.\r\n            All exceptions from this method will be caught in the taskExecution host and logged as a fatal task error\r\n            ":"\r\n            执行任务以获取输出参数后，MSBUILD调用此方法。\r\n            该方法的所有例外将被捕获在taskexecution主机中，并记录为致命的任务错误\r\n            \r\n","\r\n            Registers the default factories.\r\n            ":"\r\n            注册默认工厂。\r\n            \r\n","\r\n            Locker to protect initialization\r\n            ":"\r\n            保护初始化的储物柜\r\n            \r\n","\r\n            Initializes the information required to spawn the process executing the tool.\r\n            ":"初始化产生执行工具的过程所需的信息。\r\n            \r\n","\r\n            Move a block of chars\r\n            ":"\r\n            移动一块chars\r\n            \r\n","\r\n            The configuration ID with which this result is associated.\r\n            ":"\r\n            与此结果关联的配置ID。\r\n            \r\n","\r\n            Enum describing the behavior when a project doesn't exist on disk.\r\n            ":"\r\n            枚举描述在磁盘上不存在项目时的行为。\r\n            \r\n","\r\n            External project support.\r\n            Establish a remote project link for this collection.\r\n            ":"\r\n            外部项目支持。\r\n            建立此集合的远程项目链接。\r\n            \r\n","\r\n            Accesses the inherited item definitions, if any.\r\n            Used ONLY by the ProjectInstance, when cloning a ProjectItem.\r\n            ":"\r\n            访问继承的项目定义（如果有）。\r\n            仅由ProjectInstance使用，在克隆ProjectItem时使用。\r\n            \r\n","\r\n            Detects a circular dependency.  Throws a CircularDependencyException if one exists.  Circular dependencies can occur\r\n            under the following conditions:\r\n            1. If the blocking request's global request ID appears in the ancestor chain (Direct).\r\n            2. If a request appears in the ancestor chain and has a different global request ID but has an active target that\r\n               matches one of the targets specified in the blocking request (Direct).\r\n            3. If the blocking request exists elsewhere as a blocked request with the same global request ID, and one of its children\r\n               (recursively) matches this request's global request ID (Indirect).\r\n            4. If the blocking request's configuration is part of another request elsewhere which is also blocked, and that request\r\n               is building targets this blocking request is building, and one of that blocked request's children (recursively)\r\n               matches this request's global request ID (Indirect).\r\n            ":"\r\n            检测循环依赖性。如果存在，则会引发circulardentencyException。循环依赖性可能发生\r\n            在以下条件下：\r\n            1.如果阻止请求的全局请求ID出现在祖先链（直接）中。\r\n            2.如果请求出现在祖先链中，并且具有不同的全局请求ID，但具有一个主动目标\r\n               匹配阻止请求中指定的目标之一（直接）。\r\n            3.如果阻止请求在其他地方以相同的全局请求ID的阻止请求及其一个子女\r\n               （递归）匹配此请求的全局请求ID（间接）。\r\n            4.如果阻止请求的配置是其他地方的另一个请求的一部分，该请求也被阻止，该请求\r\n               该阻止请求是建立目标，而该请求之一（递归）\r\n               匹配此请求的全局请求ID（间接）。\r\n            \r\n","\r\n            This class is the public entry point for executing builds.\r\n            ":"\r\n            此类是执行构建的公共入口点。\r\n            \r\n","\r\n            The component responsible for building targets.\r\n            ":"\r\n            负责建筑目标的组件。\r\n            \r\n","The result to add.":"结果要添加。\r\n","\r\n            Gets or sets the evaluated value, unescaped\r\n            ":"\r\n            获取或设置评估的值，未消除\r\n            \r\n","Path to the document to load.":"通往加载文档的路径。\r\n","A non-null array of property descriptions.":"属性描述的非无效阵列。\r\n","name of sender":"发件人名称\r\n","The set of task identity parameters to be used to identify the\r\n            correct task record match.":"一组任务身份参数用于识别\r\n            正确的任务记录匹配。\r\n","The task instance data":"任务实例数据\r\n","\r\n            Help diagnose tasks that log after they return.\r\n            ":"\r\n            帮助诊断返回后记录的任务。\r\n            \r\n","KeyNotFoundException is returned if the specified node doesn't exist when reading this property.":"如果在读取此属性时未存在指定的节点，则返回KeynotFoundException。\r\n","\r\n            Populates with an item. This is done before the item lookup is used in this scope.\r\n            There may or may not already be a group for it.\r\n            ":"\r\n            用一个物品填充。这是在此范围中使用项目查找之前完成的。\r\n            可能有或可能没有一个小组。\r\n            \r\n","\r\n            Encoding for the output. Defaults to ANSI.\r\n            ":"\r\n            编码输出。默认为ANSI。\r\n            \r\n","\r\n            Compares framework version strings of the format v4.1.2.3\r\n            major version and minor version are mandatory others are optional\r\n            ":"\r\n            比较格式v4.1.2.3的框架版本字符串\r\n            主要版本和次要版本是强制性的，其他是可选的\r\n            \r\n","\r\n            Flag indicating if the project in this configuration is a traversal\r\n            ":"\r\n            标志指示此配置中的项目是否为遍历\r\n            \r\n","\r\n            Whatever MaxOSVersionTested we found in the manifest.\r\n            ":"\r\n            无论我们在清单中发现的最大值测试。\r\n            \r\n","\r\n            Instantiates a Node and initializes it to unconnected.\r\n            ":"\r\n            实例化节点并将其初始化为未连接。\r\n            \r\n","\r\n            Creates an implicit ProjectImportElement as if it was in the project.\r\n            ":"\r\n            创建一个隐性的项目iMportlement，就好像它在项目中一样。\r\n            \r\n","\r\n            Change a global property after the project has been evaluated.\r\n            If the value changes, this makes the project require reevaluation.\r\n            If the value changes, returns true, otherwise false.\r\n            ":"\r\n            评估项目后，更改全球财产。\r\n            如果值改变，则该项目需要重新评估。\r\n            如果值改变，则返回true，否则为错误。\r\n            \r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n            Adds a new import after the last import in this import group.\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n            在此导入组中的最后一次导入之后，添加了一个新导入。\r\n            \r\n","\r\n            Gets or sets the after targets\r\n            Only set during evaluation, so does not check for immutability.\r\n            ":"\r\n            获取或设置后目标\r\n            仅在评估期间设置，因此不检查不变性。\r\n            \r\n","\r\n            List of items in this project. This is a live, read-only list.\r\n            ":"\r\n            该项目中的项目列表。这是一个现场读取的列表。\r\n            \r\n","\r\n            The build component host.\r\n            ":"\r\n            构建组件主机。\r\n            \r\n","\r\n            The tools version this project was evaluated with, if any.\r\n            Not necessarily the same as the tools version on the Project tag, if any;\r\n            it may have been externally specified, for example with a /tv switch.\r\n            The actual tools version on the Project tag, can be gotten from ":"\r\n            该项目的工具版本通过了，如果有的话。\r\n            不一定与项目标签上的工具版本相同（如果有）；\r\n            它可能已被外部指定，例如A /TV开关。\r\n            项目标签上的实际工具版本可以从\r\n","\r\n            The held StringBuilder\r\n            ":"\r\n            持有的弦乐器\r\n            \r\n","\r\n            The object used for thread-safe synchronization of BuildManager shared data and the Scheduler.\r\n            ":"\r\n            用于buildManager共享数据和调度程序的线程安全同步的对象。\r\n            \r\n"," pointed to by ":" 指向\r\n","List of search paths or ProjectImportPathMatch.None if empty":"搜索路径列表或ProjectImportPathMatch.NONE如果空\r\n","\r\n            Is the given task name able to be created by the task factory. In the case of an assembly task factory \r\n            this question is answered by checking the assembly wrapped by the task factory to see if it exists. \r\n            ":"\r\n            是由任务工厂创建的给定任务名称。如果是组装任务工厂\r\n            通过检查任务工厂包裹的组件以查看是否存在，可以回答这个问题。\r\n            \r\n","\r\n            Convenience method to add an Output Property to this task. \r\n            Adds after the last child. \r\n            ":"\r\n            便利方法将输出属性添加到此任务中。\r\n            在最后一个孩子之后添加。\r\n            \r\n","\r\n            In the future, this function may fixup 'textToAppend' to handle\r\n            literal embedded quotes.\r\n            ":"\r\n            将来，此功能可能会修复“ TextToAppend”以处理\r\n            字面嵌入式引号。\r\n            \r\n","\r\n            Location of the keepMetadata attribute\r\n            ":"\r\n            keepmetadata属性的位置\r\n            \r\n","\r\n            Creates an unparented ProjectImportGroupElement, wrapping an unparented XmlElement.\r\n            Caller should then ensure the element is added to a parent\r\n            ":"\r\n            创建一个无与伦比的ProjectImportGroupelement，包装无与伦比的XMLELEMENT。\r\n            然后，呼叫者应确保将元素添加到父\r\n            \r\n","\r\n            Event which is fired when a project root element in this cache is dirtied.\r\n            ":"\r\n            当此缓存中的项目根元素被弄脏时，将发射的事件。\r\n            \r\n","\r\n            Clears out our cached values for the various task host names and paths.\r\n            FOR UNIT TESTING ONLY\r\n            ":"\r\n            清除了我们的各种任务主机名和路径的缓存值。\r\n            仅用于单元测试\r\n            \r\n","\r\n             Given a project and a set of entry targets the project would get called with,\r\n             parse the project's project reference target specification and compute how the target would call its references.\r\n            \r\n             The calling code should then call ":"\r\n             给定一个项目和一组入门目标，该项目将被调用，\r\n             解析项目的项目参考目标规范，并计算目标如何调用其参考。\r\n            \r\n             然后致电呼叫代码\r\n","\r\n                A collection of useful writers\r\n            ":"\r\n                有用的作家的集合\r\n            \r\n","\r\n            Called during load, to add an attribute.\r\n            ":"\r\n            在加载过程中调用，以添加属性。\r\n            \r\n","The file to search for.":"要搜索的文件。\r\n","\r\n            Enumeration of all possible (currently supported) types of task host context.\r\n            ":"\r\n            所有可能（当前支持的）任务主机上下文的列举。\r\n            \r\n","\r\n            The solution configuration selected for this build.\r\n            ":"\r\n            为此构建选择的解决方案配置。\r\n            \r\n",", null until the second value is added.\r\n            ":"，null直到添加第二个值。\r\n            \r\n","True if the object values are not identical, false if they are identical":"如果对象值不相同，则为true，如果它们相同\r\n","The previous value of the reassigned property.":"重新分配属性的先前值。\r\n","\r\n            Total number of cores granted to the task, including the one implicit core.\r\n            ":"\r\n            授予该任务的核心总数，包括一个隐式核心。\r\n            \r\n","\r\n            The logging service.\r\n            ":"\r\n            伐木服务。\r\n            \r\n","\r\n            Constants that we want to be shareable across all our assemblies.\r\n            ":"\r\n            我们希望在所有集会中都可以共享常数。\r\n            \r\n","\r\n            Whether to log task input parameters.  Can either be set through an environment variable \r\n            or by the BuildParameters.\r\n            ":"\r\n            是否记录任务输入参数。可以通过环境变量设置\r\n            或通过构建参数。\r\n            \r\n","\r\n            Required for the ILoggerInterface\r\n            ":"\r\n            Iloggerinterface所需的\r\n            \r\n","\r\n            Column number of the task invocation in the project file\r\n            ":"\r\n            项目文件中任务调用的列号\r\n            \r\n","\r\n            Stores the TargetNames from the ProjectStarted event. Null for Target frames.\r\n            ":"\r\n            从项目开始事件中存储目标名称。目标帧为空。\r\n            \r\n","\r\n            Set to true if our peer is connected to us.\r\n            ":"\r\n            如果我们的同行连接到我们，则设置为True。\r\n            \r\n","Warning message to log":"警告消息到日志\r\n","\r\n            Determines if the submission is fully completed.\r\n            ":"\r\n            确定提交是否已完全完成。\r\n            \r\n","The current build submission ID.":"当前的构建提交ID。\r\n","\r\n            Assigns requests preferring those which are traversal projects as determined by filename.\r\n            ":"\r\n            分配请求偏爱由文件名确定的遍历项目的请求。\r\n            \r\n","\r\n            The HostServices to use during a build.\r\n            ":"\r\n            构建过程中要使用的主机服务。\r\n            \r\n","\r\n            Put all the sub-toolset's properties into our property bag.  Run after \r\n            AddToolsetProperties to ensure that, if there are any overlaps, the sub-toolset wins.\r\n            ":"\r\n            将所有子工具的属性放入我们的物业袋中。追赶\r\n            addToolsetProperties，以确保如果存在任何重叠，则子模型将获胜。\r\n            \r\n","The id of the node the logging services is on":"节点的ID登录服务已打开\r\n","\r\n            A lock object used for this class.\r\n            ":"\r\n            此类使用的锁定对象。\r\n            \r\n","\r\n            A class that evaluates an ItemGroup or PropertyGroup that is within a target.\r\n            ":"评估目标内的项目组或属性组的类。\r\n            \r\n","\r\n            Indicates that this entry is included in the given document.\r\n            Callers must verify that we were not already adreffed for this document.\r\n            ":"\r\n            指示此条目包含在给定文档中。\r\n            呼叫者必须验证我们尚未对此文档进行贴心。\r\n            \r\n","\r\n            Cancels the currently-running task.\r\n            Kick off a task to wait for the currently-running task and log the wait message.\r\n            ":"\r\n            取消当前运行的任务。\r\n            启动任务等待当前运行的任务并记录等待消息。\r\n            \r\n","The length of array which will be used in translation. This parameter is not used when reading":"阵列的长度将用于翻译。阅读时未使用此参数\r\n","\r\n            Given a target platform identifier and version, generate a reasonable default display name. \r\n            ":"\r\n            给定目标平台标识符和版本，生成合理的默认显示名称。\r\n            \r\n","The entry to be deactivated":"停用的条目\r\n","\r\n            The metadata dictionary.\r\n            The key is the possibly qualified metadata name, for example\r\n            \"EmbeddedResource.Culture\" or \"Culture\"\r\n            ":"\r\n            元数据字典。\r\n            关键是可能合格的元数据名称，例如\r\n            “嵌入式Resource.culture”或“文化”\r\n            \r\n",",\r\n            used as the basis of new dictionaries with that comparer to avoid\r\n            allocating new comparers objects.\r\n            ":"，，，，\r\n            用作与该比较的新词典的基础\r\n            分配新比较对象。\r\n            \r\n","foreground color (is ignored)":"前景颜色（被忽略）\r\n","Details on the Project and the change.":"项目和更改的详细信息。\r\n","\r\n            Cache of task names which can be created by the factory.\r\n            When ever a taskName is checked against the factory we cache the result so we do not have to\r\n            make possibly expensive calls over and over again.\r\n            ":"\r\n            可以由工厂创建的任务名称的缓存。\r\n            当对工厂检查任务名时，我们可以缓存结果，因此我们不必\r\n            一遍又一遍地打来昂贵的电话。\r\n            \r\n","\r\n            Frees shared CPU resources. Called by a task when it's finished doing multi-threaded/multi-process work.\r\n            ":"\r\n            Frees共享CPU资源。完成任务完成多线程/多进程工作时，请使用。\r\n            \r\n","The configuration to match":"匹配的配置\r\n","\r\n            Returns a read-only wrapper around this lookup\r\n            ":"\r\n            在此查找周围返回只读包装器\r\n            \r\n","\r\n            Construct a target specification.\r\n            ":"\r\n            构建目标规范。\r\n            \r\n","The help keyword of the reassignment.":"重新分配的帮助关键字。\r\n","\r\n            Parse a ProjectTaskElement\r\n            ":"\r\n            解析ProjectTaskelement\r\n            \r\n","InvalidProjectFileException is null":"InvalidProjectFileException为null\r\n","\r\n            Efficient way to retrieve metadata used by packet serialization\r\n            and binary logger.\r\n            ":"\r\n            检索数据包序列化使用的元数据的有效方法\r\n            和二进制记录仪。\r\n            \r\n","\r\n            Adds some loggers to the collection of loggers used for builds of projects in this collection.\r\n            If any logger object is already in the collection, does nothing for that logger.\r\n            May be null.\r\n            ":"\r\n            在此集合中用于构建项目的记录仪的集合中添加了一些记录仪。\r\n            如果收藏集中的任何记录器对象都对该记录器无能为力。\r\n            可能是无效的。\r\n            \r\n","\r\n            Adds CreateNode responses to satisfy all the affinities in the list of requests, with the following constraints:\r\n            \r\n            a) Issue no more than one response to create an inproc node, and aggressively issues as many requests for an out-of-proc node\r\n               as there are requests to assign to them. \r\n               \r\n            b) Don't exceed the max node count, *unless* there isn't even one node of the necessary affinity yet. (That means that even if there's a max\r\n               node count of e.g., 3, and we have already created 3 out of proc nodes, we will still create an inproc node if affinity requires it; if \r\n               we didn't, the build would jam.)\r\n               \r\n            Returns true if there is a pending response to create a new node.\r\n            ":"\r\n            添加createNode响应以满足请求列表中的所有亲和力，并具有以下约束：\r\n            \r\n            a）发出不超过一个响应来创建一个inproc节点，并积极发行，因为多个请求对一个传播节点的请求\r\n               由于有要求分配给他们。\r\n               \r\n            b）不要超过最大节点计数， *除非 *甚至还没有必要亲和力的一个节点。 （这意味着即使有最大\r\n               例如3的节点计数，并且我们已经创建了3个proc节点，如果亲和力需要它，我们仍然会创建一个inproc节点；如果\r\n               我们没有，构建会堵塞。）\r\n               \r\n            如果有待处理响应来创建新节点，则返回true。\r\n            \r\n","\r\n            Helper class with elements of SDKManifest.xml\r\n            ":"\r\n            带有sdkmanifest.xml元素的助手课\r\n            \r\n","\r\n              If set to false, the reload operation will discard any unsaved changes.\r\n              Otherwise, an ":"\r\n              如果设置为false，则重新加载操作将丢弃任何未保存的更改。\r\n              否则，一个\r\n",".\r\n            Returns an empty collection if there are no loggers.\r\n            ":"。\r\n            如果没有登记机，则返回一个空的集合。\r\n            \r\n","The configuration to be mapped.":"要映射的配置。\r\n","Destination array was not long enough. Check the destination index, length, and the array's lower bounds.":"目的地阵列还不够长。检查目标索引，长度和阵列的下限。\r\n","\r\n            Class representing the collection of toolset elements\r\n            ":"\r\n            代表工具集元素集合的类\r\n            \r\n","\r\n            The reflection-produced PropertyInfo.\r\n            ":"\r\n            反射产生的属性info。\r\n            \r\n","\r\n            Add two doubles\r\n            ":"\r\n            添加两个双打\r\n            \r\n","\r\n            The size of the structure, in bytes.\r\n            ":"\r\n            结构的大小，字节。\r\n            \r\n","\r\n            Saves a \"logical\" or \"preprocessed\" project file, that includes all the imported \r\n            files as if they formed a single file.\r\n            ":"\r\n            保存一个“逻辑”或“预处理”项目文件，其中包括所有导入的\r\n            文件好像它们形成了一个文件。\r\n            \r\n","\r\n            Requests to reacquire the node.\r\n            Thread safe, however Reaquire cannot be called unless the\r\n            last call to Yield or Reaquire was Yield.\r\n            ":"\r\n            要求重新征用节点。\r\n            线程安全，但是，除非\r\n            屈服或收获的最后一次呼吁是产量。\r\n            \r\n","Scalar result":"标量结果\r\n","The expression containing item metadata references":"包含项目元数据参考的表达式\r\n","\r\n            Implementation of IRequestBuilder\r\n            ":"Irequestbuilder的实施\r\n            \r\n","\r\n            Gets or sets a value indicating whether projects should build in isolation.\r\n            ":"\r\n            获取或设置一个值，以指示项目是否应孤立地构建。\r\n            \r\n","\r\n            An evaluated design-time item\r\n            ":"\r\n            评估的设计时间项目\r\n            \r\n","\r\n            Returns the request which originated this entry.\r\n            ":"\r\n            返回该条目发起的请求。\r\n            \r\n","\r\n            UNDONE: Review immutability. If this is not immutable, add a mechanism to notify the project collection/s owning it to increment their toolsetVersion.\r\n            ":"\r\n            撤消：审查不变性。如果这是不可变的，请添加一种机制来通知项目集合，以增加其工具集。\r\n            \r\n","\r\n            Reads in the scheduling plan if one exists and has not previously been read; returns true if the scheduling plan \r\n            both exists and is valid, or false otherwise. \r\n            ":"\r\n            如果存在并且以前没有阅读，请在调度计划中阅读；如果计划计划，则返回真实\r\n            两者都存在并且有效，或者是错误的。\r\n            \r\n","\r\n                Creates a non-parented ProjectSdkElement, wrapping an non-parented XmlElement.\r\n                Caller should then ensure the element is added to a parent\r\n            ":"\r\n                创建一个非父母的projectsdkelement，包裹非父母的XMlelement。\r\n                然后，呼叫者应确保将元素添加到父\r\n            \r\n","The root of the target platform SDK":"目标平台SDK的根\r\n","\r\n            List of items.\r\n            \r\n            Item1 represents the item string, escaped\r\n            Item2 represents the original item.\r\n            \r\n            Item1 differs from Item2's string when it is coming from a transform.\r\n            \r\n            ":"\r\n            项目列表。\r\n            \r\n            item1代表项目字符串，逃脱了\r\n            item2代表原始项目。\r\n            \r\n            Item1与Item2的字符串来自转换时不同。\r\n            \r\n            \r\n","\r\n            Constructs an entry point with the given project file and no global properties.\r\n            ":"\r\n            用给定的项目文件构建一个入口点，没有全局属性。\r\n            \r\n","\r\n            Allow node reuse of TaskHost nodes. This results in task assemblies locked past the build lifetime, preventing them from being rebuilt if custom tasks change, but may improve performance.\r\n            ":"\r\n            允许将任务主机节点的节点重复使用。这导致任务组件锁定了构建寿命，从而阻止了它们在自定义任务发生变化时被重建，但可能会提高性能。\r\n            \r\n","\r\n            Read the provided binary log file and raise corresponding events for each BuildEventArgs\r\n            ":"\r\n            阅读提供的二进制日志文件，并为每个buildeventargs提出相应的事件\r\n            \r\n","True if the warning should not be treated as a message and WarningsAsErrors is an empty set or contains the given warning code.":"如果不应将警告视为消息，并且警告是一个空的集合或包含给定的警告代码，则是事实。\r\n","\r\n            Proxy build requests ":"代理构建请求\r\n","\r\n            Character used to split InitialTargets and DefaultTargets lists\r\n            ":"\r\n            用于拆分初始字母和defaulttargets列表的字符\r\n            \r\n","\r\n            The MSBuild construction APIs keep a tree of ProjectElements and a parallel Xml tree which consists of\r\n            objects from System.Xml.  This is a helper method which adds an XmlElement or Xml attribute to the Xml\r\n            tree after the corresponding ProjectElement has been added to the construction API tree, and fixes up\r\n            whitespace as necessary.\r\n            ":"\r\n            MSBUILD构造API保留一棵大树和一个平行XML树，该树由\r\n            system.xml的对象。这是一种辅助方法，将XMLElement或XML属性添加到XML\r\n            将相应的项目元素添加到构造API树之后，并修复了\r\n            必要时空格。\r\n            \r\n","If true, then the metadata will be expressed as an attribute instead of a child element, for example\r\n            <Content CopyToOutputDirectory=\"PreserveNewest\" />\r\n            ":"如果为true，则元数据将以属性而不是子元素表示，例如\r\n            <Content copytoOutputDirectory =“ PreserveneWest” />\r\n            \r\n","\r\n            Sets a new metadata value on the ItemDefinition.\r\n            This is ONLY called during evaluation and does not affect the XML.\r\n            ":"\r\n            在ItemDefinition上设置新的元数据值。\r\n            这仅在评估过程中调用，不会影响XML。\r\n            \r\n","\r\n            Evaluated metadata.\r\n            May be null.\r\n            ":"\r\n            评估的元数据。\r\n            可能是无效的。\r\n            \r\n","\r\n            Intrinsic function that returns the items from itemsOfType with their metadata cleared, i.e. only the itemspec is retained.\r\n            ":"\r\n            固有功能可返回从项目type中返回及其元数据的项目，即仅保留itemspec。\r\n            \r\n","\r\n            Version of the class that's immutable.\r\n            Could have a single class with a boolean field, but there are large numbers of these\r\n            so it's important to avoid adding another field. Both types of objects are 16 bytes instead of 20.\r\n            ":"\r\n            班级的版本是不变的。\r\n            可以有一个带布尔字段的单一类，但是其中有很多\r\n            因此，避免添加另一个字段很重要。两种类型的对象是16个字节而不是20个字节。\r\n            \r\n","\r\n            Type of handler for CustomEventRaised events\r\n            ":"\r\n            用于CUSTOMEVENTRAIDED活动的处理程序类型\r\n            \r\n","\r\n            Returns a performance counter for a given scope (either task name or target name)\r\n            from the given table.\r\n            ":"\r\n            返回给定范围的性能计数器（任务名称或目标名称）\r\n            从给定的表格。\r\n            \r\n","Type of the items provided.":"提供的项目类型。\r\n","\r\n            Call this method to notify listeners of information of how a project file built.\r\n            ":"\r\n            调用此方法以通知听众有关项目文件构建方式的信息。\r\n            \r\n","\r\n            Enables or disables legacy threading semantics\r\n            ":"\r\n            启用或禁用遗留线程语义\r\n            \r\n","The name of the environment variable that was read.":"读取的环境变量的名称。\r\n","\r\n            A specialization of the ConsoleLogger that logs to a file instead of the console.\r\n            The output in terms of what is written and how it looks is identical. For example you can \r\n            log verbosely to a file using the FileLogger while simultaneously logging only high priority events\r\n            to the console using a ConsoleLogger.\r\n            ":"\r\n            将consolelogger的专业化登录到文件而不是控制台。\r\n            根据书面内容以及其外观的输出是相同的。例如，您可以\r\n            同时仅记录高优先级事件时，使用Filelogger言行将文件记录到文件\r\n            使用consolelogger到达控制台。\r\n            \r\n","\r\n            Applies the supplied metadata to the destination item.\r\n            ":"\r\n            将提供的元数据应用于目标项目。\r\n            \r\n","A new project item.":"一个新项目项目。\r\n","\r\n            Sender name\r\n            ":"\r\n            发件者姓名\r\n            \r\n","\r\n            Supports ":"\r\n            支持\r\n","\r\n            A sample (incomplete) section:\r\n            \r\n            GlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n            \t{6185CC21-BE89-448A-B3C0-D1C27112E595}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n            \t{6185CC21-BE89-448A-B3C0-D1C27112E595}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n            \t{6185CC21-BE89-448A-B3C0-D1C27112E595}.Debug|Mixed Platforms.ActiveCfg = Release|Any CPU\r\n            \t{6185CC21-BE89-448A-B3C0-D1C27112E595}.Debug|Mixed Platforms.Build.0 = Release|Any CPU\r\n            \t{6185CC21-BE89-448A-B3C0-D1C27112E595}.Debug|Win32.ActiveCfg = Debug|Any CPU\r\n            \t{A6F99D27-47B9-4EA4-BFC9-25157CBDC281}.Release|Any CPU.ActiveCfg = Release|Win32\r\n            \t{A6F99D27-47B9-4EA4-BFC9-25157CBDC281}.Release|Mixed Platforms.ActiveCfg = Release|Win32\r\n            \t{A6F99D27-47B9-4EA4-BFC9-25157CBDC281}.Release|Mixed Platforms.Build.0 = Release|Win32\r\n            \t{A6F99D27-47B9-4EA4-BFC9-25157CBDC281}.Release|Win32.ActiveCfg = Release|Win32\r\n            \t{A6F99D27-47B9-4EA4-BFC9-25157CBDC281}.Release|Win32.Build.0 = Release|Win32\r\n            EndGlobalSection\r\n            ":"\r\n            样本（不完整）部分：\r\n            \r\n            Globalsection（ProjectConfigurationPlatforms）= postsolution\r\n            {6185cc21-be89-448a-b3c0-d1c27112e595} .debug |任何cpu.activecfg = debug | debug |任何CPU\r\n            {6185cc21-be89-448a-b3c0-d1c27112e595} .debug |任何cpu.build.0 = debug | debug |任何CPU\r\n            {6185cc21-be89-448a-b3c0-d1c27112e595} .debug |混合platforms.activecfg =发行|任何CPU\r\n            {6185cc21-be89-448a-b3c0-d1c27112e595} .debug |混合platforms.build.0 =版本|释放|任何CPU\r\n            {6185cc21-BE89-448A-B3C0-D1C27112E595} .debug | win32.activecfg = debug |任何CPU\r\n            {A6F99D27-47B9-4EA4-BFC9-25157CBDC281} .release |任何cpu.activecfg = Release | win32\r\n            {A6F99D27-47B9-4EA4-BFC9-25157CBDC281} .release |混合platforms.activecfg = Release | Win32\r\n            {A6F99D27-47B9-4EA4-BFC9-25157CBDC281} .release |混合platforms.builds.build.0 =版本| Win32\r\n            {A6F99D27-47B9-4EA4-BFC9-25157CBDC281} .release | win32.activecfg = reparese | win32\r\n            {A6F99D27-47B9-4EA4-BFC9-25157CBDC281} .release | win32.build.0 =发行| Win32\r\n            最终漏洞\r\n            \r\n","\r\n            This constructor that allows message arguments that are lazily formatted.\r\n            ":"\r\n            这个允许懒惰格式的消息参数的构造函数。\r\n            \r\n","\r\n            Returns true if this RequestBuilder has an active build request\r\n            ":"\r\n            如果此RequestBuilder有活动构建请求，则返回true\r\n            \r\n","\r\n                Constructs a graph starting from the given project file, evaluating with the provided project collection and no\r\n                global properties.\r\n            ":"\r\n                从给定的项目文件开始构造图形，用提供的项目集合评估\r\n                全球属性。\r\n            \r\n"," state after the build. In general, it may be a non buildable-dummy object, and should only\r\n            be used to retrieve ":" 构建后的状态。通常，它可能是一个不可建造的对象，只应\r\n            被用来检索\r\n"," to load the project into.":" 将项目加载到。\r\n","The type of packet for which the handler should be unregistered.":"处理程序的数据包的类型应未注册。\r\n","\r\n            Leaves the current lookup scope.\r\n            ":"\r\n            留下当前的查找范围。\r\n            \r\n","\r\n            Returns our buffer to the pool if we were not passed one by the caller.\r\n            ":"\r\n            如果我们没有由呼叫者通过一个，则将缓冲区返回池。\r\n            \r\n","\r\n            This is a pretty obscure method and so it's only available to inherited classes.\r\n            ":"\r\n            这是一种非常晦涩的方法，因此仅用于继承类。\r\n            \r\n","\r\n            Store the path for the 32-bit MSBuild so that we don't have to keep re-calculating it. \r\n            ":"\r\n            存储32位MSBUILD的路径，以便我们不必继续重新计算它。\r\n            \r\n","ReevaluateIfNecessary()":"重新评估recession（）\r\n","\r\n            Accessor for the blocking request id, if any.\r\n            ":"\r\n            阻止请求ID的访问者（如果有）。\r\n            \r\n","\r\n            Structure to contain security attributes from the create process call represents\r\n            SECURITY_ATTRIBUTE in win32\r\n            ":"\r\n            从创建过程调用代表中包含安全属性的结构\r\n            win32中的Security_Attribute\r\n            \r\n","\r\n            If MSBUILDCUSTOMSCHEDULER = CustomSchedulerForSQL, the user may also choose to set\r\n            MSBUILDCUSTOMSCHEDULERFORSQLCONFIGURATIONLIMITMULTIPLIER to the value by which they want\r\n            the max configuration count for any one node to exceed the average configuration count.\r\n            If that env var is not set, or is set to an invalid value (negative, less than 1, non-numeric)\r\n            then we use the default value instead.\r\n            ":"\r\n            如果msbuildcustomscheduler = customschedulerforsql，则用户也可以选择设置\r\n            MSBUILDCUSTOMSCHEDULERERFORSQLCONFIGURATIONLIMITMULTIPLIER到他们想要的值\r\n            任何一个节点都超过平均配置计数的最大配置计数。\r\n            如果未设置该env var或设置为无效的值（负数，小于1，非数字）\r\n            然后，我们改用默认值。\r\n            \r\n","s that properties in this ":"在此属性\r\n","\r\n            Location in source file associated with this state.\r\n            SourceLocations for all the states should be disjoint.\r\n            ":"\r\n            与此状态关联的源文件中的位置。\r\n            所有状态的酸封闭都应是不结合的。\r\n            \r\n","\r\n            The node request id of the request which is blocked and now will either result or have results reported.\r\n            ":"\r\n            请求的节点请求ID被阻止，现在将结果或已报告结果。\r\n            \r\n","Should the target outputs be returned in the BuildEngineResult":"是否应在buildenginersult中返回目标输出\r\n","\r\n            Returns the logger we are wrapping.\r\n            ":"\r\n            返回我们正在包装的记录仪。\r\n            \r\n","left number":"左号码\r\n","\r\n            Handles all the notifications sent while the tool is executing. The\r\n            notifications can be for tool output, tool time-out, or tool completion.\r\n            ":"\r\n            处理工具执行时发送的所有通知。这\r\n            通知可以用于工具输出，工具超时或工具完成。\r\n            \r\n","Array of file paths, unescaped.":"文件路径的数组，未扫描。\r\n","\r\n            Returns the default tools version, or null if none was specified\r\n            ":"\r\n            返回默认工具版本，或者如果未指定未指定的null\r\n            \r\n","\r\n            Creates an import.\r\n            Caller must add it to the location of choice in the project.\r\n            ":"创建导入。\r\n            呼叫者必须将其添加到项目中选择的位置。\r\n            \r\n","\r\n            The captured substring from the input string.\r\n            ":"\r\n            从输入字符串捕获的子字符串。\r\n            \r\n","\r\n            This struct represents context information about a single\r\n            target or project.\r\n            ":"\r\n            该结构表示有关单个的上下文信息\r\n            目标或项目。\r\n            \r\n"," if the project is explicitly loaded, otherwise ":" 如果项目明确加载，则\r\n","\r\n            Removes all toolsets.\r\n            ":"\r\n            删除所有工具集。\r\n            \r\n","\r\n            version 4.7\r\n            ":"\r\n            版本4.7\r\n            \r\n"," is an item definition metadata or item metadata, this field\r\n            specified the item type of the item definition or the item, respectively. For common properties\r\n            this field must not be set.\r\n            ":" 是项目定义元数据或项目元数据，此字段\r\n            分别指定项目定义或项目的项目类型。对于常见特性\r\n            不得设置此字段。\r\n            \r\n","\r\n            Generates a message in the default format from a BuildWarningEventArgs object.\r\n            ":"\r\n            从buildwarningeventargs对象以默认格式生成消息。\r\n            \r\n","The target builder callback.":"目标构建器回调。\r\n","\r\n            Surprisingly few of these Utilities TaskItems are created: typically several orders of magnitude fewer than the number of engine TaskItems.\r\n            ":"\r\n            令人惊讶的是，这些实用程序任务中很少有：通常比引擎任务数的数量少几个数量级。\r\n            \r\n","\r\n            Loads a project with the specified filename and tools version, using the collection's global properties.\r\n            If a matching project is already loaded, it will be returned, otherwise a new project will be loaded.\r\n            ":"\r\n            使用集合的全局属性，将项目加载带有指定的文件名和工具版本。\r\n            如果已经加载了匹配项目，将返回，否则将加载一个新项目。\r\n            \r\n","\r\n            Not a static method so that an implementation can\r\n            override with more-specific knowledge of what backslashes\r\n            are likely to be correct.\r\n            ":"\r\n            不是静态方法，以便实现可以\r\n            覆盖更特定于反斜线的知识\r\n            可能是正确的。\r\n            \r\n","\r\n            Id of the target the event was in when the event was fired\r\n            ":"\r\n            事件发生时，事件的目标ID\r\n            \r\n","\r\n            indicates whether to ignore task execution failures\r\n            ":"\r\n            指示是否忽略任务执行失败\r\n            \r\n","\r\n            Attempts to schedule unassigned requests to free nodes.\r\n            ":"\r\n            试图安排未分配的请求以免费节点。\r\n            \r\n","\r\n            Enqueues a work item to the work set.\r\n            ":"\r\n            加入工作集的工作项目。\r\n            \r\n","\r\n            Figure out what solution configuration we are going to build, whether or not it actually exists in the solution\r\n            file.\r\n            ":"\r\n            找出我们要构建的解决方案配置，是否实际存在于解决方案中\r\n            文件。\r\n            \r\n","\r\n            This is a cache of objects which are registered to be disposed of at a specified time.\r\n            ":"\r\n            这是一个对象的缓存，这些对象被注册，要在指定的时间处置。\r\n            \r\n","\r\n            Creates a new task and adds it to the end of the list of tasks.\r\n            ":"\r\n            创建一个新任务，并将其添加到任务列表的末尾。\r\n            \r\n"," value.\r\n            Generally, no expansion occurs. This is because it would potentially result in several items, \r\n            which is not meaningful semantics when renaming a single item.\r\n            However if the item does not need to be split (which would invalidate its ProjectItemElement),\r\n            and the new value expands to exactly one item, then its evaluated include is updated\r\n            with the expanded value, rather than the unexpanded value.\r\n            ":" 价值。\r\n            通常，不会发生扩展。这是因为它可能会导致几个项目，\r\n            重命名单个项目时，这不是有意义的语义。\r\n            但是，如果不需要分开该项目（这会使其ProjectItemelement无效），则\r\n            新值扩展到一个项目，然后对其进行评估的包含已更新\r\n            具有扩展的值，而不是未表达的值。\r\n            \r\n","The metadata value, or an empty string if none exists.":"元数据值或一个空字符串（如果不存在）。\r\n","\r\n            Id of the node the logger is attached to\r\n            ":"\r\n            节点的ID将记录器附加到\r\n            \r\n","\r\n            AppendFileNamesIfNotNull(new string[] {\"Alpha.cs\", \"Beta.cs\"}, \",\") => \"Alpha.cs,Beta.cs\"\r\n            ":"\r\n            appendfilenamesifnotnull（new String [] {“ alpha.cs”，“ beta.cs”}，“”，“）=>“ alpha.cs，beta.cs”\r\n            \r\n","\r\n            Escape a string using MSBuild escaping format. For example, \"%3b\" for \";\".\r\n            Only characters that are especially significant to MSBuild parsing are escaped.\r\n            Callers can use this method to make a string safe to be parsed to other methods\r\n            that would otherwise expand it; or to make a string safe to be written to a project file.\r\n            ":"\r\n            使用MSBUILD逃脱格式逃脱字符串。例如，“％3B” for“;”。\r\n            只有对MSBuild解析特别重要的角色才能逃脱。\r\n            呼叫者可以使用此方法使字符串安全地解析为其他方法\r\n            否则会扩大它；或使字符串安全地写入项目文件。\r\n            \r\n","\r\n            Creates an item based on the provided item, but with\r\n            the project and xml of this factory and the specified include. Metadata is cloned,\r\n            but continues to point to the original ProjectMetadataElement objects.\r\n            This is to support this scenario: Include=\"@(i->'xxx')\"\r\n            ":"\r\n            根据提供的项目创建一个项目，但\r\n            该工厂和指定的项目和XML包括。元数据被克隆，\r\n            但是继续指向原始的ProjectMetadataelement对象。\r\n            这是为了支持这种情况：include =“@（i->'xxx'）”\r\n            \r\n","The configuration id to check.":"要检查的配置ID。\r\n","The bucket to which the task execution belongs.":"任务执行所属的存储桶。\r\n","The configuration to match.":"匹配的配置。\r\n","SDK Root folders":"SDK根文件夹\r\n","\r\n            Node manager for task host nodes\r\n            ":"\r\n            任务主机节点的节点管理器节点\r\n            \r\n","\r\n            Target name\r\n            ":"\r\n            目标名称\r\n            \r\n","\r\n            Collection of metadata that link the XML metadata and instance metadata\r\n            Since evaluation has occurred, this is an unordered collection.\r\n            ":"链接XML元数据和实例元数据的元数据集合\r\n            由于已经进行了评估，因此这是一个无序的集合。\r\n            \r\n","\r\n            The event source to which filters will listen to get the build events which are logged to the logging service through the\r\n            logging helper methods. Ie LogMessage and LogMessageEvent\r\n            ":"\r\n            过滤器将聆听的事件源以获取通过The Liggging Service登录的构建事件\r\n            记录辅助方法。 IE logmessage和logmessageEvent\r\n            \r\n","\r\n            Indicates if we should debug the expander.\r\n            ":"\r\n            指示我们是否应该调试扩展器。\r\n            \r\n","\r\n            Gets the endpoint shutdown timeout.\r\n            ":"\r\n            获取端点关闭超时。\r\n            \r\n","\r\n            Record an import opened during evaluation.\r\n            Does nothing: not needed for project instances.\r\n            ":"\r\n            记录在评估期间打开的导入。\r\n            什么都不做：项目实例不需要。\r\n            \r\n","\r\n            Unevaluated ContinueOnError on the task.\r\n            May be empty string.\r\n            ":"\r\n            未评估该任务的连续性。\r\n            可以是空字符串。\r\n            \r\n","\r\n            Container for results of IResultsCache.SatisfyRequest\r\n            ":"\r\n            iresultScache结果的容器。\r\n            \r\n","\r\n            Location of the remove attribute, if any\r\n            ":"\r\n            删除属性的位置，如果有的话\r\n            \r\n","\r\n            Exits the MSBuild callback state.\r\n            ":"\r\n            退出MSBUILD回调状态。\r\n            \r\n","\r\n            When true, suppresses all messages except for errors. (And possibly warnings, if showOnlyWarnings is true.)\r\n            ":"\r\n            如果是正确的，则抑制除错误以外的所有消息。 （可能是警告，如果Showonlywarnings为真。）\r\n            \r\n","\r\n            Compares for left >= right\r\n            ":"\r\n            比较左> =右\r\n            \r\n","\r\n            Comment about constructing.\r\n            ":"关于构建的评论。\r\n            \r\n","The tools path folder of the appropriate ToolsVersion if it exists, otherwise null.":"如果存在适当工具的工具路径文件夹，则否则为空。\r\n","\r\n            Intrinsic function that returns the specified built-in modifer value of the items in itemsOfType\r\n            Tuple is {current item include, item under transformation}\r\n            ":"\r\n            内在函数返回项目中指定的内置修饰符值\r\n            元组为{当前项目包括，转换下的项目}\r\n            \r\n","\r\n            This method will re-write the tlogs from the output table\r\n            ":"\r\n            此方法将从输出表重新编写TLOGS\r\n            \r\n","\r\n            Class representing the Toolset element\r\n            ":"\r\n            代表工具集元素的类\r\n            \r\n","\r\n            Creates a zip archive with all the .csproj and .targets encountered during the build.\r\n            The internal .zip file structure matches closely the layout of the original sources on disk.\r\n            The .zip file can be used to correlate the file names and positions in the build log file with the\r\n            actual sources.\r\n            ":"\r\n            使用在构建过程中遇到的所有.csproj和.targets创建一个ZIP档案。\r\n            内部.zip文件结构与磁盘上原始源的布局非常匹配。\r\n            .zip文件可用于将构建日志文件中的文件名和位置与\r\n            实际来源。\r\n            \r\n","Directly index into the underlying segmented list":"直接索引到基础分段列表\r\n","\r\n            The item xml for items in this factory.\r\n            ":"\r\n            该工厂中项目的项目XML。\r\n            \r\n","\r\n            Whether we can expect to never save this file.\r\n            In such a case, we can discard as much as possible on load, like comments and whitespace.\r\n            ":"\r\n            我们是否可以期望永远不会保存此文件。\r\n            在这种情况下，我们可以在负载上尽可能多地丢弃评论和空格。\r\n            \r\n","\r\n            MSBuildExtensionsPathReferenceKind instance for property named \"MSBuildExtensionsPath32\"\r\n            ":"\r\n            MSBUILDEXTENSIONSPATHREFERYKIND的属性实例，名为“ msbuildextensionspath32”\r\n            \r\n","\r\n            This method takes in an exception and if MSBuildDiagnostics is set then it will display the stack trace\r\n            if it is not set only the message will be displayed, this is to fix the problem where the user was getting\r\n            stack trace when a shorter message was better\r\n            ":"\r\n            此方法呈现例外，如果设置了MSBuildDiagnostics，则将显示堆栈跟踪\r\n            如果未设置仅显示消息，则是解决用户获取的问题\r\n            较短的消息更好时堆栈跟踪\r\n            \r\n","\r\n            When this field is not specified, this property is added to a\r\n            auto-generated category called ":"\r\n            当未指定此字段时，将此属性添加到\r\n            自动生成类别称为\r\n","\r\n            This code handles the *.REFRESH files that are in the \"bin\" subdirectory of \r\n            a web project.  These .REFRESH files are just text files that contain absolute or \r\n            relative paths to the referenced assemblies.  The goal of these tasks is to \r\n            search all *.REFRESH files and extract fully-qualified absolute paths for \r\n            each of the references.\r\n            ":"\r\n            此代码处理的 *.refresh文件在“ bin”子目录中\r\n            网络项目。这些.refresh文件只是包含绝对或\r\n            引用组件的相对路径。这些任务的目标是\r\n            搜索所有 *.refresh文件，并提取完全合格的绝对路径\r\n            每个参考。\r\n            \r\n","\r\n            Centralization of the common parts of construction.\r\n            ":"\r\n            共同部分的集中化。\r\n            \r\n","\r\n            Properties encountered during evaluation. These are read during the first evaluation pass.\r\n            Unlike those returned by the Properties property, these are ordered, and includes any properties that\r\n            were subsequently overridden by others with the same name. It does not include any\r\n            properties whose conditions did not evaluate to true.\r\n            ":"\r\n            评估期间遇到的属性。这些是在第一次评估通行证中读取的。\r\n            与属性属性返回的人不同，这些是订购的，并包括任何属性\r\n            随后被其他人以相同名称覆盖。它不包括任何\r\n            条件未评估为真的属性。\r\n            \r\n","\r\n            Defines the lifetime of a registered task object.\r\n            ":"\r\n            定义注册任务对象的寿命。\r\n            \r\n","\r\n            The list of metadata Remove should match on.\r\n            ":"\r\n            元数据删除的列表应符合。\r\n            \r\n","\r\n            Filename for the MSBuild tasks (v4), used for shimming in loading\r\n            task factory UsingTasks\r\n            ":"\r\n            MSBUILD任务（V4）的文件名，用于加载\r\n            任务工厂使用任务\r\n            \r\n","\r\n            What the shredder should be looking for.\r\n            ":"\r\n            粉碎机应该寻找什么。\r\n            \r\n"," // Occurences: 4; Operation: Include; Provenance: FromLiteral (direct reference in $P) | Glob (direct reference in $P) | Inconclusive (it is an indirect occurence from referenced properties and items)\r\n             ":" //发生：4;操作：包括；出处：源自文学（$ p的直接引用）| Glob（$ p的直接参考）|尚无定论（这是参考属性和项目的间接情况）\r\n             \r\n","\r\n            Gets the items of the specified type that are visible in the current scope.\r\n            If no match is found, returns an empty list.\r\n            Caller must not modify the group returned.\r\n            ":"\r\n            获取当前范围中可见的指定类型的项目。\r\n            如果找不到匹配，请返回一个空列表。\r\n            呼叫者不得修改返回的组。\r\n            \r\n","\r\n            Represents a location for different evaluation elements tracked by the EvaluationProfiler.\r\n            ":"\r\n            表示评估程序跟踪的不同评估元素的位置。\r\n            \r\n","\r\n            Running in a standalone toolset mode. All toolsets and extensions paths are relative to the app\r\n            running and not dependent on Visual Studio. (e.g. dotnet CLI, open source clone of our repo)\r\n            ":"\r\n            在独立的工具集中运行。所有工具集和扩展路径均相对于应用程序\r\n            运行，不取决于视觉工作室。 （例如，Dotnet CLI，我们的存储库的开源克隆）\r\n            \r\n","\r\n            ProjectImportGroupElement represents the ImportGroup element in the MSBuild project.\r\n            ":"\r\n            ProjectImportGroupElement代表MSBUILD项目中的ImportGroup元素。\r\n            \r\n","Service has already shutdown":"服务已经关闭\r\n","True if the task is found in the task registry false if otherwise.":"如果否则，如果在任务注册表中找到任务，则为true。\r\n","\r\n            The location of the toolset definitions.\r\n            ":"\r\n            工具集定义的位置。\r\n            \r\n","\r\n            A reload operation completely replaces the state of this ":"\r\n            重新加载操作完全替代了此的状态\r\n","\r\n            The type of nodes provided by this node provider.\r\n            ":"\r\n            该节点提供商提供的节点的类型。\r\n            \r\n","\r\n            Retrieve the matching ProjectTargetInstance from the cache and add it to the provided collection.\r\n            If it is not cached already, read it and cache it.\r\n            Do not evaluate anything: this occurs during build.\r\n            ":"\r\n            从缓存中检索匹配的ProjectTargetInstance，然后将其添加到提供的集合中。\r\n            如果还没有缓存，请阅读并缓存。\r\n            不要评估任何内容：这发生在构建过程中。\r\n            \r\n","\r\n            Compares two event contexts on ProjectContextId and NodeId only\r\n            ":"\r\n            仅在ProjectContextid和Nodeid上比较两个事件上下文\r\n            \r\n","\r\n            Whether ":"\r\n            无论\r\n","\r\n            The target builder.\r\n            ":"\r\n            目标构建器。\r\n            \r\n","\r\n            Whether this represents an output item (as opposed to an output property)\r\n            ":"\r\n            这是否代表输出项目（与输出属性相反）\r\n            \r\n","\r\n                If the evaluation of any project in the graph fails\r\n            ":"\r\n                如果图中任何项目的评估失败\r\n            \r\n","True indicates a successful build":"true表示成功的构建\r\n","\r\n            Logs that task execution has started.\r\n            ":"\r\n            记录任务执行已开始。\r\n            \r\n","MessageResourceName is null":"Messageresourcename为NULL\r\n","\r\n            Type for TaskOutputItem and TaskOutputProperty\r\n            allowing them to be used in a single collection\r\n            ":"\r\n            输入taskOutputItem和taskOutputProperty\r\n            允许它们用于单个集合\r\n            \r\n","\r\n            This method is a hack, but it needs to be called after both\r\n            Process.WaitForExit() and Process.Kill().\r\n            ":"\r\n            此方法是黑客攻击，但是两者都需要调用\r\n            process.waitforexit（）和process.kill（）。\r\n            \r\n","\r\n            The request which caused the circular dependency.\r\n            ":"\r\n            引起循环依赖性的请求。\r\n            \r\n","\r\n            Remap some common architectures to a single one that will be in the SDK.\r\n            ":"\r\n            将一些通用架构重新映射到SDK中的单个架构。\r\n            \r\n","\r\n            Whether to include task inputs in task events.\r\n            ":"\r\n            是否将任务输入包括在任务事件中。\r\n            \r\n","\r\n            Assists processing items until all the items added to the queue are processed, completes the work set, and\r\n            propagates any exceptions thrown by workers.\r\n            ":"\r\n            协助处理项目，直到处理队列中添加的所有项目，完成工作集，然后\r\n            传播工人抛出的任何例外。\r\n            \r\n","\r\n            A way to cache a byte array when writing out packets\r\n            ":"\r\n            写出数据包时缓存字节数组的一种方法\r\n            \r\n","\r\n            Used to cache strings used in attribute values and comments.\r\n            ":"用于缓存属性值和注释中使用的字符串。\r\n            \r\n","\r\n            A property with a value of empty string and no property\r\n            at all are not distinguished between by this method.\r\n            That makes it easier to use. To find out if a property is set at\r\n            all in the project, use GetProperty(name).\r\n            ":"\r\n            一个具有空字符串和无属性的属性\r\n            完全没有通过这种方法区分。\r\n            这使其更容易使用。找出是否设置了财产\r\n            全部在项目中，使用GetProperty（名称）。\r\n            \r\n","\r\n            The delegate that points to the transform function\r\n            ":"\r\n            指向转换功能的代表\r\n            \r\n","\r\n            Clears the results for a specific configuration.\r\n            ":"\r\n            清除特定配置的结果。\r\n            \r\n","Name of the item":"该项目的名称\r\n","The set of metadata modifications to merge into this one.":"一组元数据修改以合并为此。\r\n","Name of the parameter":"参数名称\r\n","\r\n            Directory enumeration failed without a well-known status (see ":"\r\n            目录枚举失败而没有众所周知的地位（请参阅\r\n","\r\n            The root element which was added to the project collection.\r\n            ":"\r\n            添加到项目集合中的根元素。\r\n            \r\n","The cached configuration.":"缓存配置。\r\n","Expand properties before breaking down fragments. Defaults to true":"在分解片段之前扩展属性。默认为true\r\n","\r\n            Convenience method to add a piece of metadata to this item definition.\r\n            Adds after any existing metadata. Does not modify any existing metadata.\r\n            ":"\r\n            在此项目定义中添加一块元数据的便利方法。\r\n            在任何现有的元数据之后添加。不会修改任何现有的元数据。\r\n            \r\n","\r\n            The properties that correspond to this particular sub-toolset. \r\n            ":"\r\n            与此特定子型相对应的属性。\r\n            \r\n","\r\n            We create our own kind of attribute, that we can give location information to.\r\n            ":"\r\n            我们创建自己的属性，可以将其提供给位置信息。\r\n            \r\n","\r\n            The worker queue.\r\n            ":"\r\n            工人队列。\r\n            \r\n","\r\n            Given a solution file, parses the header and returns the major version numbers of the solution file\r\n            and the visual studio. \r\n            Throws InvalidProjectFileException if the solution header is invalid, or if the version is less than \r\n            our minimum version. \r\n            ":"\r\n            给定解决方案文件，解析标头并返回解决方案文件的主要版本编号\r\n            和视觉工作室。\r\n            如果解决方案标头无效，或者版本小于\r\n            我们的最低版本。\r\n            \r\n","\r\n            The bit shift to apply to an array index to get the page index within ":"\r\n            位移动以适用于数组索引以获取页面索引\r\n","true, if parameter should be quoted":"是的，如果应该引用参数\r\n","null if unknown architecture or error, one of the known architectures otherwise":"null如果未知的体系结构或错误，则已知架构之一否则\r\n","\r\n            Constructor over a request.\r\n            ":"\r\n            构造函数通过请求。\r\n            \r\n","\r\n            Unevaluated ExecuteTargets value.\r\n            May be empty string.\r\n            ":"\r\n            未评估的执行程序值。\r\n            可以是空字符串。\r\n            \r\n","\r\n            NuGet Types\r\n            ":"Nuget类型\r\n            \r\n"," The VC compiler has an ":" VC编译器有一个\r\n","\r\n            An object for the two inproc endpoints to synchronize on.\r\n            ":"\r\n            两个INPROC端点要同步的对象。\r\n            \r\n","\r\n            The arguments for an uninitialized property read event.\r\n            ":"\r\n            非初始化的属性读取事件的论点。\r\n            \r\n","]\r\n             If starting at a recursive operator, the last index of a recursive sequence.\r\n             Otherwise, the last index of a directory sequence.\r\n             ":"这是给予的\r\n             如果从递归操作员开始，则是递归序列的最后索引。\r\n             否则，目录序列的最后索引。\r\n             \r\n","\r\n             Write the environment strings to the console.\r\n            ":"\r\n             将环境字符串写入控制台。\r\n            \r\n","\r\n                Get a topologically sorted collection of all project nodes in the graph.\r\n                Referenced projects appear before the referencing projects.\r\n            ":"\r\n                获取图中所有项目节点的拓扑排序集合。\r\n                引用项目出现在引用项目之前。\r\n            \r\n","\r\n            Number of nodes in the system when the system is initially started\r\n            ":"\r\n            最初启动系统时系统中的节点数量\r\n            \r\n","\r\n            The saved environment for the process.\r\n            ":"\r\n            该过程的保存环境。\r\n            \r\n","\r\n            Constructs a task logging context from a parent target context and a task node.\r\n            ":"\r\n            从父目标上下文和任务节点构建任务记录上下文。\r\n            \r\n","\r\n            toolsVersion element collection \r\n            ":"\r\n            ToolsVersion元素集合\r\n            \r\n","\r\n            Determines if the specified request is currently scheduled.\r\n            ":"\r\n            确定当前是否已安排指定的请求。\r\n            \r\n","\r\n            Creates an instance of the task.\r\n            ":"\r\n            创建任务实例。\r\n            \r\n","The tools version to use for the build.  May be null.":"用于构建的工具版本。可能是无效的。\r\n","\r\n            A set of explicitly-specified modifications.\r\n            ":"\r\n            一组明确指定的修改。\r\n            \r\n","\r\n            Sets the unevaluated value for the specified parameter.\r\n            ":"\r\n            设置指定参数的未评估值。\r\n            \r\n","\r\n            Generic exception used to wrap exceptions thrown during Registry access.\r\n            ":"\r\n            通用异常用于包装注册表访问期间抛出的异常。\r\n            \r\n","\r\n            Parent container object.\r\n            ":"\r\n            父容器对象。\r\n            \r\n","\r\n            Geta read-only collection of the child properties, if any, in all property groups anywhere in the project file.\r\n            Not restricted to root property groups: traverses through Choose elements.\r\n            ":"在项目文件中任何地方的所有属性组中，geta读取的儿童属性（如果有）（如果有的话）。\r\n            不限于根属性组：通过选择元素进行遍历。\r\n            \r\n","\r\n            data.GetItemsByEvaluatedInclude already returns a read-only collection, so no need\r\n            to wrap it further.\r\n            ":"\r\n            data.getItemsbyEvaleDinclude已经返回只读收藏集，因此无需\r\n            进一步包裹。\r\n            \r\n","\r\n            A handle to the newly created process. The handle is used to specify the process in all functions that perform operations on the process object.\r\n            ":"\r\n            新创建的过程的手柄。该句柄用于指定在进程对象上执行操作的所有函数中的过程。\r\n            \r\n","\r\n            A list of requests from remote hosts which need to be processed.\r\n            ":"\r\n            需要处理的远程主机请求列表。\r\n            \r\n","\r\n            Derivation of XmlAttribute to implement IXmlLineInfo\r\n            ":"\r\n            XMLATTRIBUTE的推导以实现IxmllineInfo\r\n            \r\n","\r\n            Reasons for a node to shutdown.\r\n            ":"\r\n            节点关闭的原因。\r\n            \r\n","\r\n            The value of the include after evaluation but before wildcard expansion.\r\n            Used to determine %(RecursiveDir)\r\n            ":"\r\n            评估后的价值，但在通配符扩展之前。\r\n            用于确定％（recursivedir）\r\n            \r\n","\r\n            This one is a bit tricky.  Orcas assumed that the value being set was escaped, but \r\n            that the value being returned was unescaped.  Maintain that behaviour here.  To get\r\n            the escaped value, use ITaskItem2.EvaluatedIncludeEscaped. \r\n            ":"\r\n            这有点棘手。 Orcas认为要设置的值已逃脱，但是\r\n            返回的价值是不渗透的。在这里保持这种行为。要得到\r\n            逃脱的价值，使用itaskItem2.evaleDincludeScapate。\r\n            \r\n","The buildEventSink which the fowarding loggers will forward their events to":"fowarding登记仪将使他们的活动将其转发给\r\n","\r\n            The asynchronous context provided to ":"\r\n            提供的异步上下文\r\n","Path to the file on disk.":"磁盘上文件的路径。\r\n","\r\n            When true, indicates the metadata should be removed from the target item.\r\n            ":"\r\n            如果为true，则指示应从目标项目中删除元数据。\r\n            \r\n","\r\n                The graph with which the plugin will be initialized.\r\n            ":"\r\n                插件将初始化的图。\r\n            \r\n","\r\n            Whether when we read a ToolsVersion that does not match the current one from the Project tag, we treat it as though it \r\n            was current.\r\n            ":"\r\n            当我们阅读不匹配项目标签当前的工具交换时，我们都会像对待它一样\r\n            是最新的。\r\n            \r\n","\r\n            The MSBuild error code corresponding with this exception.\r\n            ":"\r\n            MSBUILD错误代码与此异常相对应。\r\n            \r\n","\r\n            Helper class with attributes of SDKManifest.xml\r\n            ":"\r\n            带有sdkmanifest属性的助手类。xml\r\n            \r\n","\r\n            This is ONLY used to figure out %(RecursiveDir) when it is requested.\r\n            It's likely too expensive to figure that out if it isn't needed, so we store \r\n            the necessary material here.\r\n            ":"\r\n            这仅用于在要求时弄清楚％（recursiveir）。\r\n            如果不需要的话，这可能太贵了，所以我们存储了\r\n            这里必要的材料。\r\n            \r\n","\r\n            This class contains utility methods for the MSBuild engine.\r\n            ":"\r\n            该类包含MSBUILD引擎的实用方法。\r\n            \r\n","buildRequestEntry.ProjectRootDirectory":"buildRequestry.projectRootDirectory\r\n","\r\n            Gets or sets the Returns value. \r\n            Returns null if the attribute is not present -- empty string is an allowable \r\n            value for both getting and setting. \r\n            Removes the attribute only if the value is set to null. \r\n            ":"\r\n            获取或设置返回值。\r\n            如果不存在该属性，则返回null  - 空字符串是允许的\r\n            获得和设置的价值。\r\n            仅当将值设置为null时，才删除属性。\r\n            \r\n","\r\n            Creates an item with the specified evaluated include and defining project.\r\n            Include must not be zero length.\r\n            ":"\r\n            使用指定的评估包括和定义项目创建一个项目。\r\n            包含不得长度为零。\r\n            \r\n","The requests to be fulfilled.":"要满足的请求。\r\n","\r\n                File version based on commit height from our public git repository. This is informational\r\n                and not equal to the assembly version.\r\n            ":"\r\n                根据我们的公共GIT存储库的提交高度的文件版本。这是信息的\r\n                并且不等于汇编版本。\r\n            \r\n","\r\n            Requests CPU resources from the scheduler.\r\n            ":"\r\n            从调度程序请求CPU资源。\r\n            \r\n","\r\n            Get the value of a property in this project, or \r\n            an empty string if it does not exist.\r\n            ":"\r\n            获取该项目中财产的价值，或\r\n            如果不存在一个空字符串。\r\n            \r\n","\r\n             This class is used to track tasks used by a project. Tasks are declared in project files with the <UsingTask> tag.\r\n             Task and assembly names must be specified per .NET guidelines, however, the names do not need to be fully qualified if\r\n             they provide enough information to locate the tasks they refer to. Assemblies can also be referred to using file paths --\r\n             this is useful when it is not possible/desirable to place task assemblies in the GAC, or in the same directory as MSBuild.\r\n             ":"\r\n             此类用于跟踪项目使用的任务。任务在项目文件中使用<sustrast>标签声明。\r\n             必须根据.NET指南指定任务和汇编名称，但是，如果名称不需要充分资格\r\n             他们提供足够的信息来找到他们所指的任务。组件也可以参考使用文件路径 - \r\n             当无法/希望将任务组件放置在GAC中或与MSBuild相同的目录中时，这很有用。\r\n             \r\n","\r\n            Initialize a parented ProjectOnErrorElement\r\n            ":"\r\n            初始化育儿projectonOnerRorement\r\n            \r\n","\r\n            The cache to load the *.tasks files into\r\n            ":"\r\n            缓存将 *.tasks文件加载到\r\n            \r\n","\r\n            InitialTargets specified in the project, plus those\r\n            in all imports, gathered depth-first.\r\n            The build runs these before anything else.\r\n            ":"\r\n            项目中指定的初始标准，以及\r\n            在所有进口中，都收集了深度优先。\r\n            构建可以在其他任何东西之前运行。\r\n            \r\n"," includes the error code and a system-provided message describing it.\r\n            ":" 包括错误代码和描述它的系统提供的消息。\r\n            \r\n","True if there is an explicit modification for this metadata, false otherwise.":"如果对此元数据进行了明确的修改，则为false。\r\n","\r\n            Sets the event signaling that the build is complete.\r\n            ":"\r\n            设置事件信号，表明构建已完成。\r\n            \r\n","\r\n            Returns true if the two task identities are equal; false otherwise.\r\n            ":"\r\n            如果两个任务身份相等，则返回true；否则为错误。\r\n            \r\n","\r\n            Condition that was parsed. This does not belong here,\r\n            it belongs to the expression tree, not the condition evaluation state.\r\n            ":"\r\n            解析的条件。这不属于这里，\r\n            它属于表达树，而不是条件评估状态。\r\n            \r\n","\r\n            The parameters from the ParameterGroup from the using task element which will be passed to the task factory.\r\n            ":"\r\n            来自使用任务元素的参数组的参数将传递给任务工厂。\r\n            \r\n","\r\n            Flag indicating whether the configuration is allowed to cache.  This does not mean that the configuration will\r\n            actually cache - there are several criteria which must for that.\r\n            ":"\r\n            标志指示是否允许配置缓存。这并不意味着配置将\r\n            实际上缓存 - 必须有几个标准。\r\n            \r\n","\r\n            Flag if we have already calculated the FileVersion hashcode\r\n            ":"\r\n            标记如果我们已经计算了文件version hashCode\r\n            \r\n","\r\n            Expand and re-construct arrays of all targets and properties\r\n            ":"扩展和重建所有目标和属性的数组\r\n            \r\n","\r\n             Internal\r\n            \r\n             Note: For deeper integration of remote project we might need to expose [some] of this functionality via IProjectLink3.\r\n             ":"\r\n             内部的\r\n            \r\n             注意：要更深入地集成远程项目，我们可能需要通过iprojectLink3公开[某些]此功能。\r\n             \r\n","\r\n            Neither this class nor none of its constituents are allowed to have \r\n            references to any of the Construction or Evaluation objects.\r\n            This class is immutable except for adding instance items and setting instance properties.\r\n            It only exposes items and properties: targets, host services, and the task registry are not exposed as they are only the concern of build.\r\n            Constructors are internal in order to direct users to Project class instead; these are only createable via Project objects.\r\n            ":"\r\n            这个班级也不允许其选民拥有\r\n            引用任何构建或评估对象。\r\n            此类是不可变的，除了添加实例项目和设置实例属性。\r\n            它仅揭示项目和属性：目标，主机服务和任务注册表并未公开，因为它们仅是构建的关注点。\r\n            构造函数是内部的，以指导用户进入项目类；这些仅通过项目对象创建。\r\n            \r\n","\r\n            The children below the target which refer to OnError targets.\r\n            This is an ordered collection.\r\n            This is a read-only list; the ProjectTargetInstance class is immutable.\r\n            ":"\r\n            目标下方的孩子指的是OnError目标。\r\n            这是一个有序的集合。\r\n            这是只读列表； ProjectTargetInstance类是不可变的。\r\n            \r\n","\r\n            Completes this request.\r\n            ":"\r\n            完成此请求。\r\n            \r\n","\r\n            Sample configuration condition:\r\n            '$(Configuration)' == 'Release' and '$(Platform)' == 'Any CPU'\r\n            ":"\r\n            样本配置条件：\r\n            '$（配置）'=='发行'和'$（platform）'=='任何CPU'\r\n            \r\n","\r\n            We don't take a ProjectItemInstance to make sure we don't have one that's already\r\n            in use by another ProjectInstance.\r\n            ":"\r\n            我们不会采用一个投影仪来确保我们没有一个已经\r\n            在另一个ProjectInstance使用中。\r\n            \r\n","\r\n            The number of nodes of the requested affinity to create.\r\n            ":"\r\n            请求的亲和力的节点数量要创建。\r\n            \r\n","\r\n            Key to find it\r\n            ":"\r\n            找到它的关键\r\n            \r\n","\r\n            Writes message contextual information for each message displayed on the console\r\n            ":"\r\n            为控制台上显示的每个消息写下消息上下文信息\r\n            \r\n","\r\n            Those characters which indicate that an expression may contain expandable\r\n            expressions.\r\n            ":"\r\n            那些表示表达式可能包含可扩展的字符\r\n            表情。\r\n            \r\n"," if the field was assigned the specified value; otherwise,\r\n            ":" 如果该字段被分配了指定的值；否则，\r\n            \r\n","\r\n            Returns the number of metadata entries.\r\n            Includes any from applicable item definitions.\r\n            Includes both custom and built-in metadata.\r\n            ":"\r\n            返回元数据条目的数量。\r\n            包括适用的项目定义中的任何。\r\n            包括定制和内置元数据。\r\n            \r\n","\r\n            Modifications made in this scope or above.\r\n            ":"\r\n            在此范围或以上进行的修改。\r\n            \r\n","\r\n            The node provider for the in-proc node.\r\n            ":"\r\n            程序内节点的节点提供商。\r\n            \r\n","An array of string key-value pairs representing metadata.":"代表元数据的字符串键值对数组。\r\n","True if caches misses are allowed, false otherwise":"是真的，如果允许使用缓存，否则为错误\r\n","\r\n            Number of errors encountered in this build\r\n            ":"\r\n            此构建中遇到的错误数量\r\n            \r\n","() and ":"（） 和\r\n","\r\n            This class defines the attribute that a task writer can apply to a task's property to declare the property to be a\r\n            required property.\r\n            ":"\r\n            本类定义了任务作者可以应用于任务属性以将属性声明为一个的属性\r\n            必需的属性。\r\n            \r\n",".  The expected format is:\r\n                    SDK, SDK/Version, or SDK/min=MinimumVersion\r\n                Values are not required to specify a version or MinimumVersion.\r\n            ":"。预期格式是：\r\n                    SDK，SDK/版本或SDK/MIN =最小值\r\n                指定版本或最小值不需要值。\r\n            \r\n","\r\n            Gets the global properties.\r\n            ":"\r\n            获取全局属性。\r\n            \r\n","\r\n            Class factory for component creation.\r\n            ":"\r\n            组件创建的类工厂。\r\n            \r\n","\r\n            Copied from the BCL implementation to eliminate some expensive security asserts.\r\n            Returns key value pairs of environment variables in a new dictionary\r\n            with a case-insensitive key comparer.\r\n            ":"\r\n            从BCL实施中复制以消除一些昂贵的安全性断言。\r\n            返回新词典中环境变量的键值对\r\n            带有不敏感的密钥比较。\r\n            \r\n","\r\n            Raised when the active request needs to build new requests.\r\n            ":"\r\n            当主动请求需要构建新请求时提出。\r\n            \r\n","\r\n            ProjectItemDefinitionGroupElement represents the ItemGroup element in the MSBuild project.\r\n            ":"\r\n            ProjectItemDefinitionGroupElement代表MSBUILD项目中的项目组元素。\r\n            \r\n","\r\n            This enumeration provides three levels of importance for messages.\r\n            ":"\r\n            此枚举为消息提供了三个重要性。\r\n            \r\n","\r\n            OutOfProcNodeProvider\r\n            ":"\r\n            Outofprocnodeprovider\r\n            \r\n","\r\n            The type of response.\r\n            ":"\r\n            响应的类型。\r\n            \r\n","\r\n            Dumps the state of a request.\r\n            ":"\r\n            倾倒请求状态。\r\n            \r\n","\r\n            This controls whether or not the building of targets/tasks is enabled for this\r\n            project.  This is for security purposes in case a host wants to closely\r\n            control which projects it allows to run targets/tasks.\r\n            ":"\r\n            这控制了是否启用了目标/任务的构建\r\n            项目。这是出于安全目的，以防主机要密切\r\n            控制哪些项目允许运行目标/任务。\r\n            \r\n","\r\n            The name given to this BuildManager as the component host.\r\n            ":"\r\n            此构建管理器的名称为组件主机。\r\n            \r\n","The MSBuild runtime.":"MSBUILD运行时。\r\n","\r\n            Immutable.\r\n            ":"\r\n            不变。\r\n            \r\n","\r\n            Completely remove an entry from this cache if it exists.\r\n            ":"\r\n            如果存在此缓存，请完全删除该条目。\r\n            \r\n","\r\n            Logs a message event for the current task\r\n            ":"\r\n            记录当前任务的消息事件\r\n            \r\n","\r\n            Sets the value of an attribute, removing the attribute if the value is null, but still setting it \r\n            if the value is the empty string. Returns the attribute, or null if it was removed.\r\n            UNDONE: Make this return a bool if the attribute did not change, so we can avoid dirtying.\r\n            ":"\r\n            设置属性的值，如果值为null，则删除属性，但仍将其设置\r\n            如果值是空字符串。返回属性，如果将其删除，则将其返回。\r\n            撤消：如果属性没有更改，请将此返回bool，以免弄脏。\r\n            \r\n","Initial property list":"初始属性列表\r\n","array or error messages to log ":"数组或错误消息日志\r\n"," representing the include globs. It also takes the excludes and relevant removes into consideration.\r\n            ":" 代表包含地球。它还考虑了排除和相关的删除。\r\n            \r\n","\r\n            A modification which indicates the metadata value should be retained without modification.\r\n            ":"\r\n            表示元数据值的修改应在没有修改的情况下保留。\r\n            \r\n","SDK version which should be imported":"SDK版本应导入\r\n","\r\n            Handles the BuildResult packet.\r\n            ":"\r\n            处理BuildResult数据包。\r\n            \r\n","\r\n            Deserializes and returns BuildEventArgs-derived objects from a BinaryReader\r\n            ":"\r\n            从二进制阅读器中恢复并返回buildEventargs衍生的对象\r\n            \r\n","\r\n            May be defined if we're copying this item from a pre-existing one.  Otherwise, \r\n            we simply don't know enough to set it properly, so it will stay null. \r\n            ":"\r\n            如果我们正在从预先存在的项目中复制此项目，则可以定义。否则，\r\n            我们只是不了解足够正确的设置，因此它将保持无效。\r\n            \r\n","\r\n            The collection of projects in this solution, accessible by their guids as a \r\n            string in \"{XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX}\" form\r\n            ":"\r\n            该解决方案中的项目集合，可以由他们的指导作为一个\r\n            “ {xxxxxxxx-xxxx-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx in” form中的字符串\r\n            \r\n","\r\n            Registers a packet handler.\r\n            ":"\r\n            注册一个数据包处理程序。\r\n            \r\n","\r\n            Gets or sets the full path to the project file that was imported.  If a project was not imported, the value is ":"\r\n            获取或设置通往已导入的项目文件的完整路径。如果未进口项目，则值为\r\n","\r\n            Accessor for the blocked request id.\r\n            ":"\r\n            阻塞请求ID的登录器。\r\n            \r\n","\r\n            Special hack for web projects. It can happen that there is no Release configuration for solutions\r\n            containing web projects, yet we still want to be able to build the Release configuration for \r\n            those projects. Since the ASP.NET project configuration defaults to the solution configuration,\r\n            we allow Release even if it doesn't actually exist in the solution.\r\n            ":"\r\n            Web项目的特殊黑客。可能没有针对解决方案的释放配置\r\n            包含Web项目，但我们仍然希望能够为\r\n            那些项目。由于ASP.NET项目配置默认为解决方案配置，因此\r\n            我们允许释放解决方案中实际上不存在。\r\n            \r\n","\r\n            Returns the global properties to use to build this project.\r\n            ":"\r\n            返回用于构建此项目的全局属性。\r\n            \r\n","The id of the resolved configuration.":"已解决配置的ID。\r\n","\r\n            Handle the Build started event\r\n            ":"\r\n            处理构建开始事件\r\n            \r\n","\r\n            The configuration cache.\r\n            ":"\r\n            配置缓存。\r\n            \r\n","\r\n            Get enumerable over all the children\r\n            ":"\r\n            枚举所有孩子\r\n            \r\n","SetGlobalProperty":"setglobalproperty\r\n","\r\n            Creates an instance of this class for the given task command line.\r\n            ":"\r\n            为给定的任务命令行创建此类的实例。\r\n            \r\n","\r\n            Constructor taking the itemtype for the generated items.\r\n            ":"\r\n            构造函数为生成的项目采用ItemType。\r\n            \r\n","Flag indicating if nodes should prepare for reuse.":"标志指示节点是否应该准备重复使用。\r\n","\r\n            This class encapsulates a set of related projects, their toolsets, a default set of global properties,\r\n            and the loggers that should be used to build them.\r\n            A global version of this class acts as the default ProjectCollection.\r\n            Multiple ProjectCollections can exist within an appdomain. However, these must not build concurrently.\r\n            ":"\r\n            该类封装了一组相关项目，其工具集，一组默认的全局属性，\r\n            以及应用来建造它们的伐木者。\r\n            此类的全局版本充当默认的项目计算。\r\n            AppDomain中可以存在多个ProjectCollections。但是，这些不得同时构建。\r\n            \r\n","\r\n            Indicates whether we should dump debugging information about the expander\r\n            ":"\r\n            指示我们是否应该转储有关扩展器的调试信息\r\n            \r\n","\r\n            Gets or sets the version associated with this SDK import\r\n            ":"\r\n            获取或设置与此SDK导入相关联的版本\r\n            \r\n","\r\n            The sequence of events which have taken place during this build.\r\n            ":"\r\n            在此构建过程中发生的事件顺序。\r\n            \r\n","The results for the specified target":"指定目标的结果\r\n","\r\n            Store all the strings a document is using, so their ref count can be decremented.\r\n            ":"\r\n            存储文档所使用的所有字符串，因此可以减少其REF计数。\r\n            \r\n","\r\n            Indicates whether the specified string follows the pattern drive pattern (for example \"C:/\" or \"C:\\\").\r\n            ":"\r\n            指示指定的字符串是否遵循模式驱动模式（例如“ C：/”或“ C：\\”）。\r\n            \r\n","\r\n            Returns the build request id for the parent of the request for which this result was generated\r\n            ":"\r\n            返回为生成此结果的请求的父母的构建请求ID\r\n            \r\n","\r\n            this event is raised to log custom events\r\n            ":"\r\n            此事件被提出来记录自定义事件\r\n            \r\n","\r\n            Expected location that MSBuild tasks (v14+) is picked up from if the user\r\n            references it with just a simple name, used for shimming in loading\r\n            task factory UsingTasks\r\n            ":"\r\n            如果用户从用户那里拾取了MSBUILD任务（V14+）的预期位置\r\n            引用它仅用一个简单的名称，用于加载时弹药\r\n            任务工厂使用任务\r\n            \r\n","\r\n            Retrieves properties derived from the current\r\n            environment variables.\r\n            ":"\r\n            检索从电流得出的属性\r\n            环境变量。\r\n            \r\n"," is being created in other scenarios:\r\n             * Target that never ran because a dependency had an error\r\n             * in ":" 正在其他情况下创建：\r\n             *由于依赖性有错误而从未运行的目标\r\n             * 在\r\n","\r\n            Represents result of attempting to load imports (ExpandAndLoadImportsFromUnescapedImportExpression*)\r\n            ":"\r\n            代表尝试加载导入的结果（ExpandAndLoadImportsfromunescapedimportExpression*）\r\n            \r\n","\r\n            regular expression used to match item metadata references outside of item vector transforms\r\n            ":"\r\n            用于匹配项目元数据参考的正则表达式之外\r\n            \r\n","\r\n            Read the task into an instance.\r\n            Do not evaluate anything: this occurs during build.\r\n            ":"\r\n            将任务阅读到实例中。\r\n            不要评估任何内容：这发生在构建过程中。\r\n            \r\n","Property type":"财产种类\r\n"," with the state to use.":" 与国家一起使用。\r\n","Text color":"文字颜色\r\n","Whether to load the file in read-only mode.":"是否将文件加载到只读模式。\r\n","\r\n            Examines the provided ProjectItemElement to see if it has a wildcard that would match the\r\n            item we wish to add, and does not have a condition or an exclude.\r\n            Works conservatively - if there is anything that might cause doubt, considers the candidate to not be suitable.\r\n            Returns true if it is suitable, otherwise false.\r\n            ":"\r\n            检查提供的ProjectItemelement，以查看其是否具有与之匹配的通配符\r\n            我们希望添加的项目，没有条件或排除。\r\n            保守的工作 - 如果有任何可能引起怀疑的东西，请认为候选人不合适。\r\n            如果合适，则返回true，否则为错误。\r\n            \r\n","\r\n            Locations to search for toolsets.\r\n            ":"\r\n            搜索工具集的位置。\r\n            \r\n","\r\n            PERF NOTE: A dummy bucket is intentionally very light-weight, and it\r\n            allocates a minimum of memory compared to a real bucket.\r\n            ":"\r\n            PERF注意：一个虚拟桶故意很轻，它\r\n            与实际存储桶相比，分配最少的内存。\r\n            \r\n","\r\n            Returns the property dictionary containing the properties representing the environment.\r\n            ":"\r\n            返回包含代表环境的属性的属性字典。\r\n            \r\n","The metadata dictionary":"元数据字典\r\n","A tools version recognized by the Engine that will be used during this build (can be null).":"引擎识别的工具版本将在此构建过程中使用（可以为null）。\r\n","\r\n            Returns true in the multiproc case\r\n            REVIEW: Should this mean the same thing in the distributed build case?  If we have \r\n            a build which happens to be on a distributed cluster, but the build manager has only\r\n            alotted a single machine to this build, is this true?  Because the build manager\r\n            could later decide to add more nodes to this build.\r\n            UNDONE: This means we are building with multiple processes. If we are building on \r\n            one machine then I think the maxcpu-count is still 1. In my mind this means multiple nodes either distributed or on the same machine.\r\n            ":"\r\n            在Multiproc情况下返回true\r\n            评论：这在分布式构建案例中是否意味着同一件事？如果有\r\n            恰好在分布式群集上的构建，但构建管理器只有\r\n            为此构建倾斜了一台机器，这是真的吗？因为构建经理\r\n            稍后可以决定在此构建中添加更多节点。\r\n            撤消：这意味着我们正在使用多个过程进行构建。如果我们要建立\r\n            一台机器，然后我认为MaxCPU计数仍然是1。在我看来，这意味着要么在同一台计算机上分发多个节点。\r\n            \r\n","\r\n            Location of the task parameter attribute\r\n            ":"\r\n            任务参数属性的位置\r\n            \r\n","\r\n            Name of the property to put the output in\r\n            ":"\r\n            将输出输入的属性名称\r\n            \r\n","The configuration used to build the request.":"用于构建请求的配置。\r\n","\r\n            Dump all the named counters, if any\r\n            ":"\r\n            丢弃所有命名的计数器，如果有的话\r\n            \r\n","\r\n            The shutdown timeout for the request builder.\r\n            ":"\r\n            请求构建器的关闭超时。\r\n            \r\n","\r\n            Prints out a message event to the console\r\n            ":"\r\n            将消息事件打印到控制台\r\n            \r\n","A full path to the sdk root if the sdk exists in the targeted platform or an empty string if it does not exist.":"如果SDK存在于目标平台中，则SDK根的完整路径，如果不存在SDK或空字符串。\r\n","\r\n            Set to true if the tool process was terminated, \r\n            either because the timeout was reached or it was canceled.\r\n            ":"\r\n            如果终止工具过程，则设置为true\r\n            要么是因为超时了，要么被取消了。\r\n            \r\n","\r\n            Structure to represent the information contained in SDKManifest.xml\r\n            ":"\r\n            表示SDKManifest.xml中包含的信息的结构\r\n            \r\n","\r\n            This request may continue executing.  It already has an entry on a node.  There may only ever be one request with a given\r\n            global request id in this state.\r\n            ":"\r\n            此请求可以继续执行。它已经在节点上有一个条目。可能只有一个请求\r\n            该状态处的全局请求ID。\r\n            \r\n","\r\n            Evaluates a ProjectRootElement, updating the fresh Project.Data passed in.\r\n            Handles evaluating conditions, expanding expressions, and building up the \r\n            lists of applicable properties, items, and itemdefinitions, as well as gathering targets and tasks\r\n            and creating a TaskRegistry from the using tasks.\r\n            ":"\r\n            评估一个项目Rootelement，更新新的Project.Data通过。\r\n            处理评估条件，扩大表达方式并建立\r\n            适用的属性，项目和项目定义的列表，以及收集目标和任务\r\n            并从使用任务创建任务指定。\r\n            \r\n","\r\n            Returns true if the two dictionaries representing sets of task identity parameters match; false otherwise.\r\n            Internal so that RegisteredTaskRecord can use this function in its determination of whether the task factory\r\n            supports a certain task identity.\r\n            ":"\r\n            如果表示任务标识参数集匹配的两个字典返回true；否则为错误。\r\n            内部以便注册的TaskRecord可以在确定任务工厂的确定时使用此功能\r\n            支持某个任务身份。\r\n            \r\n","\r\n            A string matched against a glob pattern from an itemspec\r\n            ":"\r\n            与itemspec匹配的弦乐\r\n            \r\n","\r\n            Property on the task class to retrieve the outputs from\r\n            ":"\r\n            任务类上的属性以从\r\n            \r\n","\r\n            Gets the location of any attribute on this element with the specified name.\r\n            If there is no such attribute, returns null.\r\n            ":"\r\n            用指定名称获取此元素上任何属性的位置。\r\n            如果没有此类属性，请返回null。\r\n            \r\n","\r\n            Determines if there are any results for the specified target.\r\n            ":"\r\n            确定指定目标是否有任何结果。\r\n            \r\n","\r\n            Taking the opportunity to fix the property name, although this doesn't\r\n            make it obvious it's an improvement on SetMetadata.\r\n            ":"\r\n            借此机会修复了属性名称，尽管这不是\r\n            显然，这是对SetMetadata的改进。\r\n            \r\n","\r\n            Expected location that MSBuild tasks (v4) is picked up from if the user \r\n            references it with just a simple name, used for shimming in loading \r\n            task factory UsingTasks\r\n            ":"\r\n            如果用户从\r\n            引用它仅用一个简单的名称，用于加载时弹药\r\n            任务工厂使用任务\r\n            \r\n","\r\n            Gets or sets the engine shutdown timeout.\r\n            ":"\r\n            获取或设置引擎关闭超时。\r\n            \r\n","\r\n            Gets the names of all the item's metadata.\r\n            ":"\r\n            获取所有项目元数据的名称。\r\n            \r\n","\r\n            This field is optional and the default value for this\r\n            field is \"false\".\r\n            ":"\r\n            该字段是可选的，默认值\r\n            字段是“ false”。\r\n            \r\n","Confine search to item elements of this type":"将搜索限制在此类型的项目元素上\r\n","\r\n            Enum for CheckResults helper function.\r\n            ":"\r\n            枚举用于检查辅助辅助功能。\r\n            \r\n","\r\n            Instantiates a project collection with specified global properties, no loggers,\r\n            and that reads toolset information from the configuration file and registry.\r\n            May throw InvalidToolsetDefinitionException.\r\n            ":"\r\n            实例化具有指定全球属性的项目集合，没有记录器，\r\n            并从配置文件和注册表中读取工具集信息。\r\n            可能会抛出无效的DoolsetDefinitionException。\r\n            \r\n","\r\n            Logs an error regarding an unexpected task failure.\r\n            This will include a stack dump.\r\n            ":"\r\n            记录有关意外任务故障的错误。\r\n            这将包括一个堆栈转储。\r\n            \r\n","\r\n            Add a call to the ResolveAssemblyReference task to crack the pre-resolved referenced \r\n            assemblies for the complete list of dependencies, PDBs, satellites, etc.  The invoke\r\n            the Copy task to copy all these files (or at least the ones that RAR determined should\r\n            be copied local) into the web project's bin directory.\r\n            ":"\r\n            将呼叫添加到ResolveressemblyReference任务中，以破解预先分辨的引用\r\n            依赖关系，PDB，卫星等完整列表的组件。\r\n            复制任务要复制所有这些文件（或至少RAR确定的文件应\r\n            将本地复制到Web项目的bin目录中。\r\n            \r\n","\r\n            Initialize an unparented ProjectImportGroupElement\r\n            ":"\r\n            初始化无与伦比的ProjectImportGroupelement\r\n            \r\n","\r\n            Verifies that if the attribute is present on the element, its value is not empty\r\n            ":"\r\n            验证如果属性存在于元素上，其值不为空\r\n            \r\n","\r\n            File associated with event.   \r\n            ":"\r\n            与事件关联的文件。\r\n            \r\n","buildRequestEntry.RequestConfiguration.Project.PropertiesToBuildWith":"buildRequestry.RequestConfiguration.project.propertiestobuildwith\r\n","\r\n            Location of the update attribute\r\n            ":"\r\n            更新属性的位置\r\n            \r\n","List of disk roots to search for sdks within":"磁盘根列表以搜索内部的SDK\r\n","\r\n             Advance\r\n             returns true on successful advance\r\n                 and false on an erroneous token\r\n            \r\n             Doesn't return error until the bogus input is encountered.\r\n             Advance() returns true even after EndOfInput is encountered.\r\n             ":"\r\n             进步\r\n             成功的进步返回\r\n                 和错误的令牌\r\n            \r\n             在遇到虚假输入之前，不会返回错误。\r\n             即使遇到endofInput之后，Advance（）也会返回。\r\n             \r\n","\r\n            This is the original constructor.  No one should ever use this except internally for backward compatibility.\r\n            ":"\r\n            这是原始的构造函数。除内部以向后兼容外，没有人应该使用它。\r\n            \r\n","\r\n            The (possibly null) ":"\r\n            （可能为空）\r\n","\r\n            Gets a singleton instance of ":"\r\n            得到一个单身实例\r\n","\r\n            Whether or not to ignore imports that are considered empty.  See ProjectRootElement.IsEmptyXmlFile() for more info.\r\n            ":"\r\n            是否忽略被认为是空的导入。有关更多信息，请参见ProjectRootelement.isemptyxmlfile（）。\r\n            \r\n","List of metadata names.":"元数据名称列表。\r\n","\r\n            ITaskItem2 implementation which sets the literal value of metadata -- it is escaped\r\n            internally as necessary.\r\n            ":"\r\n            ITASKITEM2实现设置了元数据的字面价值 - 它被逃脱了\r\n            必要时内部。\r\n            \r\n","\r\n            Value before any item and property expressions are expanded\r\n            ":"\r\n            在扩展任何项目和属性表达式之前的价值\r\n            \r\n","\r\n            Indicates that all logging events for this submission are complete.\r\n            ":"\r\n            表示此提交的所有记录事件均已完成。\r\n            \r\n","\r\n            The maximum size, in bytes, to read at once.\r\n            ":"\r\n            最大尺寸（以字节为单位）立即读取。\r\n            \r\n","\r\n            Parse a ProjectExtensionsElement\r\n            ":"\r\n            解析projectExtensionsElement\r\n            \r\n","\r\n            Populate Toolsets with a dictionary of (toolset version, Toolset) \r\n            using information from the registry and config file, if any.  \r\n            ":"\r\n            用（工具集版本，工具集）的字典填充工具集\r\n            使用注册表和配置文件中的信息（如果有）。\r\n            \r\n","\r\n            Gets the value with name \"name\" stored under this registry key\r\n            ":"\r\n            获取以此注册表密钥存储的名称“名称”的值\r\n            \r\n","\r\n            Returns the full name of the .NET Framework SDK root registry key\r\n            ":"\r\n            返回.NET Framework SDK root注册表的全名\r\n            \r\n","\r\n            Gets or sets the full path of the project that started evaluation.\r\n            ":"\r\n            获取或设置开始评估的项目的完整路径。\r\n            \r\n"," to use to invoke targets and build projects.":" 用于调用目标并构建项目。\r\n"," to use. See ":" 使用。看\r\n","\r\n            It's unfortunate that this is derived from ConsoleLogger, which is itself a facade; it makes things more\r\n            complex -- for example, there is parameter parsing in this class, plus in BaseConsoleLogger. However we have\r\n            to derive FileLogger from ConsoleLogger because it shipped that way in Whidbey.\r\n            ":"\r\n            不幸的是，这源于consolelogger，这本身就是一个外墙。它使事情更多\r\n            复杂 - 例如，此类中有参数解析，加上BaseconSolelogger中的参数。但是我们有\r\n            从consolelogger中得出Filelogger，因为它以Whidbey的方式发货。\r\n            \r\n","The type of the item being mutated.":"该项目被突变的类型。\r\n","\r\n            Location of KeepDuplicateOutputs attribute, if any\r\n            ":"\r\n            keepduplicateOutputs属性的位置，如果有的话\r\n            \r\n","The number of cores the task wants to use.":"任务要使用的内核数。\r\n","\r\n            Add the argument in the StringBuilder to the arguments list, handling nulls\r\n            appropriately.\r\n            ":"\r\n            将StringBuilder中的参数添加到参数列表中，处理空值\r\n            适当。\r\n            \r\n","\r\n            Gets the default configuration name for this solution. Usually it's Debug, unless it's not present\r\n            in which case it's the first configuration name we find.\r\n            ":"\r\n            获取此解决方案的默认配置名称。通常是调试，除非不存在\r\n            在这种情况下，这是我们找到的第一个配置名称。\r\n            \r\n","\r\n            Internal so that unit tests can use it too.\r\n            ":"\r\n            内部，以便单位测试也可以使用它。\r\n            \r\n","\r\n            The target's dependencies need to be evaluated and pushed onto the target stack.\r\n            \r\n            Transitions:\r\n            Execution, ErrorExecution\r\n            ":"\r\n            目标的依赖项需要评估并将其推向目标堆栈。\r\n            \r\n            过渡：\r\n            执行，errorexecution\r\n            \r\n","\r\n            Creates a taskitem.\r\n            ":"\r\n            创建一个任务。\r\n            \r\n","SDK version for which to find the latest installed platform":"SDK版本可以找到最新的安装平台\r\n","\r\n            Skips slash characters in a string.\r\n            ":"\r\n            跳过字符串中的字符。\r\n            \r\n","\r\n            A helper class wrapping build components.\r\n            ":"\r\n            辅助类包装组件。\r\n            \r\n","\r\n            Handles a request from a remote node.\r\n            ":"\r\n            处理远程节点的请求。\r\n            \r\n","\r\n            Evaluate a given condition, collecting conditioned properties.\r\n            ":"\r\n            评估给定的条件，收集条件特性。\r\n            \r\n","\r\n            Name of the item type that the outputs go into\r\n            ":"\r\n            输出输入的项目类型的名称\r\n            \r\n","\r\n                The root of the glob.\r\n                The fixed directory part of the glob and the match arguments (":"\r\n                地球的根。\r\n                固定目录的全球和匹配参数（\r\n","Packet is not a NodePacketType.LogMessage":"数据包不是nodepackettype.logmessage\r\n","\r\n            Returns expanded value with '!' prepended. Useful for error messages.\r\n            ":"\r\n            返回以“！”的扩展价值扩展价值预先。对于错误消息有用。\r\n            \r\n","\r\n            This is an immutable class.\r\n            ":"\r\n            这是一个不变的班级。\r\n            \r\n","\r\n            Returns the value of the attribute. \r\n            If the attribute is not present, returns either null or an empty string, depending on the value \r\n            of nullIfNotExists.\r\n            ":"\r\n            返回属性的值。\r\n            如果不存在属性，请返回null或一个空字符串，具体取决于值\r\n            nullifnotexists。\r\n            \r\n","\r\n            Arguments for critical message events. These always have High importance.\r\n            ":"\r\n            关键消息事件的论点。这些总是很重要。\r\n            \r\n","\r\n            Text of event. \r\n            ":"\r\n            事件文字。\r\n            \r\n","\r\n            A reason why a target was skipped.\r\n            ":"\r\n            跳过目标的原因。\r\n            \r\n","\r\n            Last child, if any, otherwise null.\r\n            Cannot be set directly; use ":"\r\n            最后一个孩子（如果有的话），否则为无效。\r\n            不能直接设置；利用\r\n","\r\n            Sets the requested task parameter to the requested value. \r\n            ":"\r\n            将请求的任务参数设置为请求的值。\r\n            \r\n","\r\n            ProductFamilyName specifies the product family for the SDK. This is offered up as metadata on the resolved sdkreference and is used to detect sdk conflicts.\r\n            ":"\r\n            ProductFamilyName指定SDK的产品系列。这是在已解决的SDKReference上作为元数据提供的，用于检测SDK冲突。\r\n            \r\n","\r\n            Sets or retrieves a modification from the modifications table.\r\n            ":"\r\n            设置或从修改表中检索修改。\r\n            \r\n","\r\n            The path of the newest TLog file\r\n            ":"\r\n            最新tlog文件的路径\r\n            \r\n","\r\n             Gather the list of SDKs installed on the machine from the registry.\r\n             Do not parallelize the getting of these entries, order is important, we want the first ones in to win.\r\n            ":"\r\n             从注册表中收集机器上安装的SDK列表。\r\n             不要平行于这些条目的获得，订单很重要，我们希望第一个赢得胜利。\r\n            \r\n","This constructor is preferred over the basic constructors.":"该构造函数优于基本构造函数。\r\n","\r\n            Returns a hash code for the given task identity\r\n            ":"\r\n            返回给定任务身份的哈希代码\r\n            \r\n","\r\n            The projects to build.\r\n            ":"\r\n            要构建的项目。\r\n            \r\n","The specification to match against the provided items":"与提供项目匹配的规范\r\n","\r\n            Get any property in the project that has the specified name,\r\n            otherwise returns null.\r\n            ":"\r\n            获取具有指定名称的项目中的任何属性，\r\n            否则返回null。\r\n            \r\n","The property name":"属性名称\r\n","\r\n            Parse a UsingTaskParameterElement from the element\r\n            ":"\r\n            解析元素的使用taskParameterElement\r\n            \r\n","\r\n            Create the representation of a single state, known as an \"island\".\r\n            It is implemented as a small method in the type being baked into the dynamic module.\r\n            Returns the name of the method.\r\n            ":"\r\n            创建一个单一状态的表示，称为“岛”。\r\n            它被用作烤入动态模块的类型中的小方法。\r\n            返回该方法的名称。\r\n            \r\n","\r\n            This attribute is used to mark tasks that need to be run in their own app domains. The build engine will create a new app\r\n            domain each time it needs to run such a task, and immediately unload it when the task is finished.\r\n            ":"\r\n            此属性用于标记需要在自己的应用程序域中运行的任务。构建引擎将创建一个新应用\r\n            域每次运行此类任务时都需要域，并在完成任务完成后立即将其卸载。\r\n            \r\n","\r\n            Get the value of the registry key and value, default value is null\r\n            ":"\r\n            获取注册表密钥和值的值，默认值为null\r\n            \r\n","\r\n            Gets or sets the TrimDuplicateOutputs value.\r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty.\r\n            ":"\r\n            获取或设置trimduplicateOutputs值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空，则删除属性。\r\n            \r\n","\r\n            This interface is implemented by objects which host build components.\r\n            ":"\r\n            该界面由托管构建组件的对象实现。\r\n            \r\n","Currently O(n), but could be O(1) with a relatively large constant":"目前o（n），但可能是o（1）的常数相对较大\r\n","O(log n)":"o（log n）\r\n","\r\n            Throws an exception if the native error code could not be canonicalized (a fairly exceptional circumstance).\r\n            This is allowed when ":"\r\n            如果无法规范化本机错误代码（相当特殊的情况），则引发异常。\r\n            允许这一点\r\n","\r\n            The type loader to load types which derrive from ITask or ITask2\r\n            ":"\r\n            从ITASK或ITASK2上删除加载类型的类型加载程序2\r\n            \r\n","\r\n            Shutdown an ILogger\r\n            Rethrow LoggerExceptions\r\n            Wrap all other exceptions in an InternalLoggerException\r\n            ":"\r\n            关闭一个ilogger\r\n            rethrow loggerexceptions\r\n            将所有其他例外包装在internalloggerexception中\r\n            \r\n","The task that is using file tracker":"使用文件跟踪器的任务\r\n","\r\n            Extracts the inner XML/text of the given XML node, unescaping as necessary.\r\n            ":"\r\n            提取给定XML节点的内部XML/文本，必要时进行清除。\r\n            \r\n","\r\n            Gets the identifier of the project.\r\n            ":"\r\n            获取项目的标识符。\r\n            \r\n","The graph to build.":"要构建的图。\r\n","\r\n            GetHashCode override.\r\n            ":"\r\n            gethashcode替代。\r\n            \r\n","\r\n            Test for item equivalence.  Items are equivalent if their item specs are the same,\r\n            and they have the same custom metadata, case insensitive.\r\n            ":"\r\n            测试项目等效性。如果项目规格相同，则项目是等效的，\r\n            它们具有相同的自定义元数据，病例不敏感。\r\n            \r\n","\r\n            Initializes a ProjectImportElement instance.\r\n            ":"\r\n            初始化一个ProjectImportelement实例。\r\n            \r\n","\r\n            Returns the lookup which collects all items and properties during the run of this project.\r\n            ":"\r\n            返回该项目运行期间收集所有项目和属性的查找。\r\n            \r\n","\r\n            Instructs the RequestBuilder that it may yield its control of the node.\r\n            ":"\r\n            指示请求构造器可能会产生对节点的控制。\r\n            \r\n","\r\n            Determines if the ":"\r\n            确定是否\r\n","\r\n            Constructor for common values.\r\n            ":"\r\n            共同值的构造函数。\r\n            \r\n","\r\n            Represents the schema of an enumeration property.\r\n            ":"代表枚举属性的模式。\r\n            \r\n","The lookup used for evaluation and as a destination for these items.":"用于评估的查找，作为这些项目的目的地。\r\n","\r\n            Retrieves the build parameters for the current build.\r\n            ":"\r\n            检索当前构建的构建参数。\r\n            \r\n","\r\n            The name of the tool executable when this rule represents a tool.\r\n            ":"\r\n            当该规则代表工具时，工具可执行文件的名称。\r\n            \r\n","default:":"默认：\r\n","What processor architecture is being targeted. This determines which registry hives are searched in what order.\r\n            On a 64 bit operating system we do the following\r\n                    If you are targeting 64 bit (target x64 or ia64)\r\n                        Add in the 64 bit hive first\r\n                        Add in the 32 bit hive second\r\n                    If you are not targeting a 64 bit\r\n                       Add in the 32 bit hive first\r\n                       Add in the 64 bit hive second\r\n            On a 32 bit machine we only add in the 32 bit hive.\r\n            ":"哪种处理器体系结构是针对的。这决定了哪些注册表的搜索顺序。\r\n            在64位操作系统上，我们执行以下操作\r\n                    如果目标是64位（目标X64或IA64）\r\n                        首先加入64位蜂巢\r\n                        加入32位蜂巢秒\r\n                    如果您不瞄准64位\r\n                       首先添加32位蜂巢\r\n                       加入64位蜂巢秒\r\n            在32位机器上，我们仅添加32位Hive。\r\n            \r\n","\r\n            A BuildSubmission represents an build request which has been submitted to the BuildManager for processing.  It may be used to\r\n            execute synchronous or asynchronous build requests and provides access to the results upon completion.\r\n            ":"\r\n            buildSubmission代表已提交给BuildManager进行处理的构建请求。它可以习惯\r\n            执行同步或异步构建请求，并在完成后提供对结果的访问。\r\n            \r\n","\r\n            The URL of the help page for this property that will be opened when the user hits F1.\r\n            ":"\r\n            该属性的帮助页面的URL将在用户命中F1时打开。\r\n            \r\n","\r\n            A dictionary of all of the environment variable properties.\r\n            ":"\r\n            所有环境变量属性的字典。\r\n            \r\n","\r\n            Execute the function on the given instance.\r\n            ":"\r\n            在给定实例上执行功能。\r\n            \r\n","\r\n            The lookup representing the project's state.\r\n            ":"\r\n            代表项目状态的查找。\r\n            \r\n","The metadata to be expanded.":"要展开的元数据。\r\n"," class.\r\n            That property does not make sense for this property. Use the ":" 班级。\r\n            该属性对此属性没有意义。使用\r\n","\r\n            Collection of metadata that link the XML metadata and evaluated metadata.\r\n            Since evaluation has occurred, this is an unordered collection.\r\n            May be null.\r\n            ":"\r\n            收集XML元数据并评估元数据的元数据。\r\n            由于已经进行了评估，因此这是一个无序的集合。\r\n            可能是无效的。\r\n            \r\n","Whether to unload projects when we are done.":"我们完成后是否卸载项目。\r\n","\r\n                Gets the version of the SDK.\r\n            ":"\r\n                获取SDK的版本。\r\n            \r\n","\r\n             Holds a snapshot of the environment at the time we blocked.\r\n             ":"\r\n             在我们被阻止时，请持有环境的快照。\r\n             \r\n","\r\n            We may only wish to log critical events, record that fact so we can apply it to build requests\r\n            ":"\r\n            我们可能只希望记录关键事件，记录该事实，以便我们将其应用于构建请求\r\n            \r\n","Switch parameter to append, quoted if necessary. If null, this method has no effect.":"切换参数以附加，如有必要。如果无效，则该方法无效。\r\n","\r\n            Given a search path and a task pattern get a list of task or override task files.\r\n            ":"\r\n            给定搜索路径和任务模式获取任务列表或覆盖任务文件。\r\n            \r\n"," along with this.\r\n            ":" 随之而来。\r\n            \r\n","\r\n            This method is used to create a matched pair of endpoints used by the Node Provider and\r\n            the Node.  The inputs and outputs for each node are automatically configured.\r\n            ":"\r\n            此方法用于创建一个由节点提供商和\r\n            节点。每个节点的输入和输出自动配置。\r\n            \r\n","\r\n            The global request id of the request which is asking for resources.\r\n            ":"\r\n            要求资源的请求的全局请求ID。\r\n            \r\n","\r\n            Target outputs by project\r\n            ":"\r\n            按项目划分的目标输出\r\n            \r\n","\r\n            Will display the project started event which was deferred until the first visible message for the project is ready to be displayed\r\n            ":"\r\n            将显示项目启动事件，该事件已延期，直到准备显示该项目的第一个可见消息\r\n            \r\n","\r\n            Maps a configuration id to the number of requests in the system which are assigned to that configuration.\r\n            ":"\r\n            将配置ID映射到系统中分配给该配置的请求数。\r\n            \r\n","\r\n            Unevaluated condition value\r\n            ":"\r\n            未评估的条件值\r\n            \r\n","Wether to include items that evaluated to empty / null.":"要包括评估为空 /空评估的项目。\r\n","true, if task executes successfully":"是的，如果任务成功执行\r\n","The logging context of the node which is building this project.":"正在构建该项目的节点的记录上下文。\r\n","\r\n            Valid attributes list for item which is case-insensitive.\r\n            ":"\r\n            有效的属性列表，该列表不敏感。\r\n            \r\n","\r\n            If there are any attributes on the element, throws an InvalidProjectFileException complaining that the attribute is not valid on this element.\r\n            ":"\r\n            如果该元素上有任何属性，请抛出InvalidProjectFileException，抱怨该属性在此元素上无效。\r\n            \r\n","\r\n            It's important not to call this method merely to get a count of the items held in the collection.\r\n            Instead use ItemsCount (above) for that.\r\n            ":"\r\n            重要的是，不要仅仅以这种方法来获取收藏中保存的物品的计数。\r\n            而是为此使用ItemScount（上图）。\r\n            \r\n","Root folder for the SDK must contain a DesignTime folder":"SDK的根文件夹必须包含一个DesignTime文件夹\r\n","\r\n            When this flag is present, the existing ProjectInstance in the build will be replaced by this one.\r\n            ":"\r\n            当存在此标志时，构建中的现有ProjectInstance将被该标志所取代。\r\n            \r\n","\r\n            A list of string records we've encountered so far. If it's a small string, it will be the string directly.\r\n            If it's a large string, it will be a pointer into a temporary page file where the string content will be\r\n            written out to. This is necessary so we don't keep all the strings in memory when reading large binlogs.\r\n            We will OOM otherwise.\r\n            ":"\r\n            到目前为止，我们遇到的字符串记录列表。如果是一个小字符串，它将直接是字符串。\r\n            如果是一个大字符串，它将是一个指针到临时页面文件中\r\n            写给。这是必要的，因此在阅读大型Binlogs时，我们不会将所有字符串保留在内存中。\r\n            否则我们会。\r\n            \r\n","Binary reader which the object will be deserialized from":"二进制读者将从哪些对象从\r\n","\r\n            Constructs a project logging context.\r\n            ":"\r\n            构建项目记录上下文。\r\n            \r\n","The index of the handle which was signaled.":"发出信号的手柄索引。\r\n","True if this is afile name and the path should be normalized":"如果是afile名称，则应将路径归一化\r\n","\r\n            An exception representing the case where a BuildRequest has caused a circular project dependency.  This is used to\r\n            terminate the request builder which initiated the failure path.\r\n            ":"代表buildRequest引起循环项目依赖性的情况。这是习惯的\r\n            终止启动故障路径的请求构建器。\r\n            \r\n","\r\n            Properties encountered during evaluation. These are read during the first evaluation pass.\r\n            Unlike those returned by the Properties property, these are ordered, and includes any properties that\r\n            were subsequently overridden by others with the same name. It does not include any \r\n            properties whose conditions did not evaluate to true.\r\n            ":"\r\n            评估期间遇到的属性。这些是在第一次评估通行证中读取的。\r\n            与属性属性返回的人不同，这些是订购的，并包括任何属性\r\n            随后被其他人以相同名称覆盖。它不包括任何\r\n            条件未评估为真的属性。\r\n            \r\n","\r\n            Returns the command line switch used by the tool executable to specify the response file.\r\n            Will only be called if the task returned a non empty string from GetResponseFileCommands\r\n            Called after ValidateParameters, SkipTaskExecution and GetResponseFileCommands\r\n            ":"\r\n            返回工具可执行文件用来指定响应文件的命令行开关。\r\n            仅当任务从getResponsefilecommands返回一个非空字符串时才会调用\r\n            在验证参数，skiptaskexecution和getResponsefilecommands呼叫\r\n            \r\n"," plug-ins.\r\n            ":" 插件。\r\n            \r\n"," \r\n            Disposes of all of the cached objects registered with the specified lifetime.\r\n            ":" \r\n            处理在指定寿命中注册的所有缓存对象。\r\n            \r\n","\r\n            The queue size above which the queue will close to messages from remote nodes.\r\n            This value should be selected such that during normal builds it is never reached.\r\n            It should also be low enough that we do not accumulate enough messages to cause\r\n            virtual memory exhaustion in extremely large builds.\r\n            ":"\r\n            队列将接近远程节点的消息的队列大小。\r\n            应该选择此值，以使其在正常构建过程中永远无法达到。\r\n            它也应该足够低，以至于我们没有积累足够的消息来引起\r\n            非常大的建筑物中的虚拟记忆耗尽。\r\n            \r\n","\r\n            Initializes a new instance of the ProjectEvaluationFinishedEventArgs class.\r\n            ":"\r\n            初始化ProjectEvaluationFinedEventargs类的新实例。\r\n            \r\n","\r\n            Serializes the Errorevent to a stream through a binary writer\r\n            ":"\r\n            通过二进制作者序列到流到流的错误\r\n            \r\n","\r\n            Adds an MSBuild task to a single metaproject.  This is used in the traversal project.\r\n            ":"\r\n            将MSBUILD任务添加到单个Metaproject中。这用于遍历项目。\r\n            \r\n","\r\n            Translates a list of T using an ":"\r\n            使用一个\r\n","A LogMessagePacket":"LogMessagePacket\r\n","\r\n            The current ItemSpec of the item being matched.\r\n            ":"\r\n            匹配的项目的当前项目标记。\r\n            \r\n","\r\n            data.GetItems returns a read-only collection, so no need to re-wrap it here. \r\n            ":"\r\n            data.getItems返回只读集合，因此无需在此处重新包装它。\r\n            \r\n","\r\n            The states that the debugger may be in, indexed\r\n            by their location. All baked states are in here.\r\n            ":"\r\n            调试器可能进入的州索引\r\n            在他们的位置。所有烤制状态都在这里。\r\n            \r\n","The configuration to add.":"要添加的配置。\r\n","\r\n            The current time for events.  This is set by the scheduler when it does a scheduling cycle in response to an event.\r\n            ":"\r\n            当前活动时间。这是根据调度程序对事件进行调度周期时设置的。\r\n            \r\n","\r\n            Get enumerator\r\n            ":"\r\n            获取枚举\r\n            \r\n","The reason for shutting down.":"关闭的原因。\r\n","\r\n            Returns the internal cache for testing purposes.\r\n            ":"\r\n            返回内部缓存以进行测试。\r\n            \r\n","The build event context in which this project is being constructed.":"构建该项目的构建事件上下文。\r\n","\r\n            Constructs a response where a result should be sent or execution should be resumed.\r\n            ":"\r\n            构建响应，应在其中发送结果或应恢复执行。\r\n            \r\n","\r\n            Indicates the .NET Framework that is currently being run under.\r\n            ":"\r\n            指示当前正在运行的.NET框架。\r\n            \r\n","\r\n            Initializes the component with the component host.\r\n            ":"\r\n            用组件主机初始化组件。\r\n            \r\n","\r\n            Targets which are declared as initial targets.\r\n            ":"\r\n            被声明为初始目标的目标。\r\n            \r\n"," True, if and only if this import introduces a circularity. ":" 是的，当此导入引入圆形时，只有当时。\r\n","\r\n            Returns true if a request can be scheduled to a node, false otherwise.\r\n            ":"\r\n            如果可以将请求安排到节点，则返回true，否则为false。\r\n            \r\n","\r\n            The maximum cache entries allowed before a sweep can occur.\r\n            ":"\r\n            在扫描之前允许的最大缓存条目。\r\n            \r\n","\r\n            Constructor taking a source of metadata\r\n            ":"\r\n            构造函数采用元数据源\r\n            \r\n","\r\n            Rarer variation for when the line and column won't each fit in a ushort.\r\n            ":"\r\n            当行和列无法分别适合在ushort中时，较大的变化。\r\n            \r\n","\r\n            Whether this project is dirty such that it needs reevaluation.\r\n            This may be because its underlying XML has changed (either through this project or another)\r\n            either the XML of the main project or an imported file;\r\n            or because its toolset may have changed.\r\n            ":"\r\n            这个项目是否脏，以便需要重新评估。\r\n            这可能是因为其基础XML已更改（通过此项目或另一个项目）\r\n            主项目的XML或导入文件；\r\n            或因为其工具集可能已经改变。\r\n            \r\n","\r\n            Arguments for message events\r\n            ":"\r\n            消息事件的论点\r\n            \r\n","\r\n            Returns true if the request is for a traversal project.  Traversals are used to find more work.\r\n            ":"\r\n            如果请求是遍历项目，则返回为true。遍历用于寻找更多工作。\r\n            \r\n","\r\n            Looks for a matching global property.\r\n            ":"\r\n            寻找匹配的全球属性。\r\n            \r\n","\r\n            The current stack of targets and dependents.  The top-most entry on the stack is the target\r\n            currently being built.\r\n            ":"\r\n            目前的目标和依赖者堆栈。堆栈上最高的入口是目标\r\n            目前正在建造。\r\n            \r\n"," \r\n            Functionally, it is simply a reference to another ":" \r\n            在功能上，它只是对另一个的引用\r\n","\r\n            The project's root directory, for evaluation of relative paths and\r\n            setting the current directory during build.\r\n            Is never null.\r\n            If the project has not been loaded from disk and has not been given a path, returns the current directory from\r\n            the time the project was loaded - this is the same behavior as Whidbey/Orcas.\r\n            If the project has not been loaded from disk but has been given a path, this path may not exist.\r\n            ":"\r\n            项目的根目录，用于评估相对路径和\r\n            在构建过程中设置当前目录。\r\n            永远不会无效。\r\n            如果该项目尚未从磁盘上加载并且没有给出路径，请从\r\n            加载项目的时间 - 这与Whidbey/orcas相同。\r\n            如果该项目尚未从磁盘上加载，但已获得一条路径，则该路径可能不存在。\r\n            \r\n","\r\n            Given a target platform identifier and a target platform version search the default sdk locations for the platform sdk for the target platform.\r\n            ":"\r\n            给定目标平台标识符和目标平台版本搜索目标平台的平台SDK默认SDK位置。\r\n            \r\n","\r\n            Outside this class called ONLY from ":"\r\n            在此类课堂外只叫\r\n","The request which should resume executing.":"应恢复执行的请求。\r\n","The build parameters.":"构建参数。\r\n","Arguments for the format string in the resource file":"资源文件中格式字符串的论点\r\n","List of the contexts to be shut down":"要关闭的上下文列表\r\n","\r\n            The environment properties for the build.\r\n            ":"\r\n            构建的环境属性。\r\n            \r\n","\r\n            Deserialize the file into an SdkResolverManifest.\r\n            ":"将文件验证为sdkresolvermanifest。\r\n            \r\n","The configuration id which has been assigned to this path.":"已分配给此路径的配置ID。\r\n","Count must be positive and count must refer to a location within the string/array/collection.":"计数必须为正，计数必须参考字符串/数组/集合中的位置。\r\n","\r\n            If not specified, the command line looks like this: ":"\r\n            如果未指定，命令行看起来像这样：\r\n",".\r\n            This field is optional and culture invariant.\r\n            ":"。\r\n            该领域是可选的和文化不变的。\r\n            \r\n","\r\n            Construct from a string, but immediately construct a real AssemblyName.\r\n            This will cause an exception to be thrown up front if the assembly name\r\n            isn't well formed.\r\n            ":"\r\n            从字符串构造，但立即构造一个真实的汇编名称。\r\n            如果组件名称，这将导致例外\r\n            形成不佳。\r\n            \r\n","\r\n            A dictionary of items keyed by their normalized value.\r\n            ":"\r\n            按照其归一化值启动的项目的字典。\r\n            \r\n","\r\n            Metadata in this bucket\r\n            ":"\r\n            此存储桶中的元数据\r\n            \r\n","\r\n            The minimum message importance that must be logged because there is a possibility that a logger consumes it.\r\n            Null means that the optimization is disabled or no relevant logger has been registered.\r\n            ":"\r\n            必须记录的最小消息重要性，因为有可能会消耗它。\r\n            空表示优化是禁用的，或者没有注册相关的记录器。\r\n            \r\n","Items produced by the evaluation.":"评估产生的项目。\r\n"," instance for a given ProjectCollection.\r\n            Allows creating a local MSBuild OM objects representing externally hosted Projects.\r\n            ":" 给定的项目汇总的实例。\r\n            允许创建代表外部托管项目的本地MSBUILD OM对象。\r\n            \r\n"," for explanation of the clone table.\r\n            ":" 用于解释克隆表。\r\n            \r\n","\r\n            Creates an instance of this class for the given target.\r\n            ":"\r\n            为给定目标创建此类实例。\r\n            \r\n","\r\n            This class represents a PropertyGroup intrinsic task.\r\n            ":"\r\n            此类代表属性组的内在任务。\r\n            \r\n"," to use when resolving SDKs.":" 解决SDK时使用。\r\n","\r\n            Encoding that the project file is saved in, or will be saved in, unless\r\n            otherwise specified.\r\n            ":"\r\n            编码项目文件已保存或将保存，除非\r\n            否则指定。\r\n            \r\n","The global properties to use.":"要使用的全局属性。\r\n","\r\n            Converts the path to the logger assembly to a full path\r\n            ":"\r\n            将路径转换为记录器组件到完整的路径\r\n            \r\n","\r\n            Initial version with LogsMessagesOfImportance() and IsTaskInputLoggingEnabled as the only exposed members.\r\n            ":"\r\n            具有logSmessagesofimportance（）和istaskInputLoggingEnabled的初始版本是唯一的曝光成员。\r\n            \r\n","\r\n            Return true if the given ":"\r\n            如果给定的返回true\r\n","\r\n            Builds a single project file\r\n            Thread safe.\r\n            ":"\r\n            构建一个项目文件\r\n            线程安全。\r\n            \r\n","\r\n            Read the provided target into a target instance.\r\n            Do not evaluate anything: this occurs during build.\r\n            ":"\r\n            将提供的目标读取到目标实例中。\r\n            不要评估任何内容：这发生在构建过程中。\r\n            \r\n","The item from which to find batchable values":"从中找到可批处理值的项目\r\n","\r\n            This method will return the highest version of a target framework moniker based on the identifier. This method will only \r\n            find full frameworks, this means no profiles will be returned.\r\n            ":"\r\n            此方法将基于标识符返回目标框架绰号的最高版本。此方法只会\r\n            查找完整的框架，这意味着不会返回配置文件。\r\n            \r\n","Array of disk locations to search for SDKs that target multiple versions":"磁盘位置数组以搜索针对多个版本的SDK\r\n","\r\n            Execute this transform function with the arguments contained within this TransformFunction instance\r\n            ":"\r\n            使用此转换功能实例中包含的参数执行此转换函数\r\n            \r\n","The full path to the document to load.":"文档加载的完整路径。\r\n","\r\n            Locking object for this shared cache\r\n            ":"\r\n            此共享缓存的锁定对象\r\n            \r\n","Inner XML/text of specified node.":"指定节点的内部XML/文本。\r\n","\r\n            Initializes the component\r\n            ":"\r\n            初始化组件\r\n            \r\n","\r\n            \r\n             We now have expressed the top level reference to all projects as @(SolutionReference) and each project's\r\n             set of references as @(PROJECTNAMEReference).  We construct our target as:\r\n            \r\n             ":"\r\n            \r\n             现在，我们已将所有项目的最高级别引用为 @（solutionReference）和每个项目的\r\n             一组参考为 @（projectNameReference）。我们将目标构建为：\r\n            \r\n             \r\n","\r\n            The return code of the spawned process. If the task logged any errors, but the process \r\n            had an exit code of 0 (success), this will be set to -1.\r\n            ":"\r\n            产卵过程的返回代码。如果任务记录了任何错误，但是该过程\r\n            具有0（成功）的出口代码，将设置为-1。\r\n            \r\n","\r\n            Project,\r\n            ":"项目，\r\n            \r\n","Array of disk locations to search for sdks":"磁盘位置数组以搜索SDK\r\n"," and its\r\n            switch prefix (inherited from the parent ":" 及其\r\n            切换前缀（从父母继承\r\n","\r\n            Save off the contents of the environment variable that specifies whether we should treat all toolsversions, regardless of \r\n            whether they are higher or lower, as the current toolsversion.  (Some hosts require this.)\r\n            ":"\r\n            保存环境变量的内容，该变量指定我们是否应该处理所有工具交换\r\n            无论是较高还是更低，就像当前的工具交换一样。 （有些主机需要这个。）\r\n            \r\n","\r\n             Never needs to consult the strong cache as well, since if the item is in there, it will\r\n             not have left the weak cache.\r\n             If item is found, boosts it to the top of the strong cache.\r\n             ":"\r\n             永远不需要咨询强缓存，因为如果物品在那里，它将\r\n             没有留下薄弱的缓存。\r\n             如果找到了项目，请将其提升到强缓存的顶部。\r\n             \r\n","\r\n            Cleans up after a build but leaves the engine thread running.  Aborts\r\n            any outstanding requests.  Blocks until the engine has cleaned up\r\n            everything.  After this method is called, InitializeForBuild may be\r\n            called to start a new build, or the component may be shut down.\r\n            ":"\r\n            构建后清理，但使发动机线运行。中止\r\n            任何未偿还的请求。块直到发动机清理\r\n            一切。调用此方法后，初始化forbuild可能是\r\n            呼吁启动新构建，或者可以关闭组件。\r\n            \r\n","\r\n            Evaluate the items in the itemgroup and add the applicable ones to the data passed in\r\n            ":"\r\n            评估项目组中的项目，并将适用的项目添加到传递的数据中\r\n            \r\n","\r\n            Wraps a task element\r\n            ":"\r\n            包装任务元素\r\n            \r\n","True if all unresolved configurations have been resolved, false otherwise.":"如果已经解决了所有未解决的配置，则为否则为错误。\r\n","\r\n            Gets any existing ProjectMetadata on the item, or\r\n            else any on an applicable item definition.\r\n            This is ONLY called during evaluation.\r\n            ":"\r\n            在该项目上获取任何现有的projectMetadata，或\r\n            否则适用的项目定义上的任何内容。\r\n            这仅在评估期间被调用。\r\n            \r\n","\r\n            Name to later call GetMethod with\r\n            ":"稍后致电getMethod的名称与\r\n            \r\n","\r\n            Indicates whether to hide the command line category or not. Default value is true.\r\n            ":"\r\n            指示是否隐藏命令行类别。默认值是正确的。\r\n            \r\n","\r\n            Returns the number of configurations assigned to the specified node.\r\n            ":"\r\n            返回分配给指定节点的配置数。\r\n            \r\n","\r\n            Performs the actual translation\r\n            ":"\r\n            执行实际翻译\r\n            \r\n","\r\n            Regkey that we check to see whether Dev10 Premium is installed.  This will exist if it is installed, and be \r\n            properly removed after it has been uninstalled.  \r\n            ":"\r\n            我们检查是否安装了Dev10 Premium。如果安装它，则将存在，并且\r\n            卸载后正确删除。\r\n            \r\n","\r\n            Translates an items store.\r\n            ":"\r\n            翻译商店。\r\n            \r\n","\r\n            Leaves the lookup scope created for this bucket.\r\n            ":"\r\n            离开为此存储桶创建的查找范围。\r\n            \r\n","Any exceptions from initializing the logger which are not loggerExceptions are caught and wrapped in a InternalLoggerException":"初始化记录仪的任何例外都不会被捕获并包裹在internalloggerexception中\r\n","\r\n            The target is run using the data context of the Project, rather than the data context \r\n            of the current target.  This has the following effects:\r\n            1. Data visible to the CALLING target at the time it was first invoked is the only\r\n               data which the CALLED target can see.  No changes made between the time the CALLING\r\n               target starts and the CALLED target starts are visible to the CALLED target.\r\n            2. Items and Properties modified by the CALLED target are not visible to the CALLING\r\n               target, even after the CALLED target returns.  However, any changes made to\r\n               items and properties by the CALLING target will override any changes made by the\r\n               CALLED target.\r\n            ":"\r\n            目标是使用项目的数据上下文而不是数据上下文运行\r\n            当前目标。这具有以下效果：\r\n            1.首次调用时可见的数据可见的数据是唯一的\r\n               所谓的目标可以看到的数据。在呼叫的时间之间没有任何更改\r\n               目标启动和称为目标的目标启动对所谓的目标可见。\r\n            2.被调用目标修改的项目和属性不可见\r\n               目标，即使在呼叫目标返回之后。但是，对\r\n               调用目标的项目和属性将覆盖\r\n               称为目标。\r\n            \r\n","\r\n            The size of the huge mru list.\r\n            ":"\r\n            巨大的MRU列表的大小。\r\n            \r\n","\r\n            Returns true if the cache contains a configuration with the specified id, false otherwise.\r\n            ":"\r\n            如果缓存包含具有指定ID的配置，则返回true，否则为false。\r\n            \r\n","\r\n            Condition on the element\r\n            ":"\r\n            元素的条件\r\n            \r\n","\r\n            Sets the default targets\r\n            ":"设置默认目标\r\n            \r\n","Profile being targeted":"配置文件是针对性的\r\n"," based on the given ":" 基于给定的\r\n","\r\n            Delegate for a method that, given a ToolsVersion string, returns the matching Toolset.\r\n            ":"\r\n            委托给定工具词字符串的方法返回匹配工具集。\r\n            \r\n","\r\n            Metadata to draw on for expansion\r\n            ":"\r\n            元数据用于扩展\r\n            \r\n","\r\n            Gets the maximum number of idle request builders to retain.\r\n            ":"\r\n            获取最大数量的空闲请求构建者来保留。\r\n            \r\n","\r\n            Extracts the name, arguments, binding flags, and invocation type for an indexer\r\n            Also extracts the remainder of the expression that is not part of this indexer\r\n            ":"\r\n            提取索引器的名称，参数，绑定标志和调用类型\r\n            还提取不属于此索引器一部分的表达式的其余部分\r\n            \r\n","\r\n            Creates an unparented ProjectExtensionsElement, wrapping an unparented XmlElement.\r\n            Caller should then ensure the element is added to a parent\r\n            ":"\r\n            创建一个无与伦比的ProjectExtensionsElement，包装了无与伦比的XMlelement。\r\n            然后，呼叫者应确保将元素添加到父\r\n            \r\n","The property value":"属性值\r\n","\r\n            The TaskBuilder is one of two components related to building tasks, the other being the TaskExecutionHost.  The TaskBuilder is\r\n            responsible for all parts dealing with the XML/task declaration.  It determines if the task is intrinsic or extrinsic, \r\n            looks up the task in the task registry, determines the task parameters and requests them to be set, and requests outputs\r\n            when task execution has been completed.  It is not responsible for reflection over the task instance or anything which\r\n            requires dealing with the task instance directly - those actions are handled by the TaskExecutionHost.\r\n            ":"\r\n            TaskBuilder是与构建任务相关的两个组件之一，另一个是taskexecutionHost。 Taskbuilder是\r\n            负责涉及XML/任务声明的所有零件。它确定任务是固有的还是外在的，\r\n            查找任务注册表中的任务，确定任务参数并请求将其设置为设置，并请求输出\r\n            任务执行完成后。它对列为实例的反思或任何内容概不负责\r\n            需要直接处理任务实例 - 这些操作由taskexecutionhost处理。\r\n            \r\n","\r\n            Assumes that the evaluated include value is unescaped.\r\n            ":"\r\n            假设所评估的包括值是不渗透的。\r\n            \r\n","\r\n            Clears the file existence cache.\r\n            ":"\r\n            清除文件存在缓存。\r\n            \r\n","The name of the task to retrieve.":"检索任务的名称。\r\n","The available events that a logger can subscribe to.":"Logger可以订阅的可用事件。\r\n","\r\n            Indicates to the NodeEndpoint that all the various parts of the Handshake have been sent.\r\n            ":"\r\n            向Nodeendpoint指示已发送握手的所有各个部分。\r\n            \r\n","\r\n            Enumerates the unscheduled requests which don't have other instances scheduled already.\r\n            ":"\r\n            列举未安排其他实例的计划外请求。\r\n            \r\n","\r\n            Event signalled when all build submissions are complete.\r\n            ":"\r\n            当所有构建提交都完成时，事件发出信号。\r\n            \r\n","\r\n            Path to the platform sdk may be null if not a platform sdk.\r\n            ":"\r\n            如果不是平台SDK，则通往平台SDK的路径可能为null。\r\n            \r\n","\r\n            Lazily created, as there are huge numbers of items generated in\r\n            a build that have no metadata at all.\r\n            ":"\r\n            懒洋洋地创建，因为在\r\n            根本没有元数据的建筑物。\r\n            \r\n","\r\n                Gets the self-described resolution priority order. MSBuild will sort resolvers\r\n                by this value.\r\n            ":"\r\n                获取自称的分辨率优先顺序。 MSBUILD将对解析器进行排序\r\n                通过这个值。\r\n            \r\n","\r\n            Partial class half of LoggingService which contains the Logging methods.\r\n            ":"\r\n            loggingservice的部分类别，其中包含记录方法。\r\n            \r\n","Delimiter to put between individual parameters, may not be null (may be empty)":"在单个参数之间放置的定界符可能不为null（可能为空）\r\n","\r\n            Inserts the provided element as the first child.\r\n            Throws if the parent is not itself parented.\r\n            Throws if the node to add is already parented.\r\n            Throws if the node to add was created from a different project than this node.\r\n            ":"\r\n            插入提供的元素作为第一个孩子。\r\n            如果父母本身没有父母的父母，则投掷。\r\n            如果要添加的节点已经归父母，请投掷。\r\n            如果要添加的节点是由与此节点不同的项目创建的。\r\n            \r\n","\r\n            Starts up the node and processes messages until the node is requested to shut down.\r\n            Assumes low priority is disabled.\r\n            ":"\r\n            启动节点并处理消息，直到要求关闭节点为止。\r\n            假设低优先级是禁用的。\r\n            \r\n","\r\n            Convert the object into an MSBuild friendly string\r\n            Arrays are supported.\r\n            Will not return NULL.\r\n            ":"\r\n            将对象转换为MSBuild友好字符串\r\n            支持数组。\r\n            不会返回NULL。\r\n            \r\n","\r\n            Logs the project started/finished pair for projects which are skipped entirely because all\r\n            of their results are available in the cache.\r\n            ":"\r\n            记录项目启动/完成的项目，用于完全跳过的项目\r\n            它们的结果可在缓存中找到。\r\n            \r\n","\r\n            Uninitialized\r\n            ":"\r\n            非初始化\r\n            \r\n","\r\n            Reads the next log record from the binary reader. If there are no more records, returns null.\r\n            ":"\r\n            从二进制阅读器中读取下一个日志记录。如果没有更多记录，则返回null。\r\n            \r\n","The item to match.":"要匹配的项目。\r\n","\r\n            Since this causes synchronous I/O and a stop-the-world GC, it can be very expensive. If\r\n            something other than build results is taking up the bulk of the memory space, it may not\r\n            free any space. That's caused customer reports of VS hangs resulting from build requests\r\n            that are very slow because something in VS is taking all of the memory, but every\r\n            project build is slowed down by this codepath. To mitigate this, don't perform these\r\n            checks in devenv.exe. On the command line, 32-bit MSBuild may still need to cache build\r\n            results on very large builds, but build results are much more likely to be the bulk of\r\n            memory usage there.\r\n            ":"\r\n            由于这会导致同步I/O和一个停止世界GC，因此可能非常昂贵。如果\r\n            构建结果以外的其他东西占据了大部分记忆空间，可能不会\r\n            免费任何空间。这引起了客户报告的客户报告，造成的吊死\r\n            这很慢，因为VS中的某些东西正在占据所有记忆，但是每一个\r\n            该编码器将项目构建放慢速度。为了减轻这种情况，不要执行这些\r\n            在devenv.exe中检查。在命令行上，32位MSBUILD仍然需要缓存构建\r\n            结果很大，但是建造结果更有可能是大部分的\r\n            那里的内存使用。\r\n            \r\n","\r\n            Remove the output graph entries for the given source and corresponding outputs\r\n            ":"\r\n            删除给定源和相应输出的输出图条目\r\n            \r\n","Number of logical cores being returned.":"返回逻辑核心的数量。\r\n","Version of Visual Studio the requested SDK is associated with":"Visual Studio的版本与请求的SDK相关联\r\n","\r\n            Enables the user of autorun functionality in CMD.exe on Windows which is disabled by default in MSBuild.\r\n            ":"\r\n            在Windows上启用CMD.EXE中的Autorun功能的用户，默认情况下，MSBuild在MSBUILD中被禁用。\r\n            \r\n","The item against which to compare.":"与之比较的项目。\r\n"," is only used as a \r\n            container for more than one ":" 仅用作\r\n            容器多个\r\n","\r\n            Regkey that we check to see whether Dev10 Professional is installed.  This will exist if it is installed, and be \r\n            properly removed after it has been uninstalled.  \r\n            ":"\r\n            我们检查是否安装了Dev10 Professional。如果安装它，则将存在，并且\r\n            卸载后正确删除。\r\n            \r\n","\r\n                Initialize a parented ProjectSdkElement\r\n            ":"\r\n                初始化父母的项目dkelement\r\n            \r\n","Central logger to receive messages from the forwarding logger, This logger cannot have been registered before":"中央记录器要从转发记录器接收消息，此记录仪在\r\n","\r\n                Matches the given ":"\r\n                匹配给定\r\n","\r\n            The property value\r\n            ":"\r\n            属性值\r\n            \r\n","\r\n            Test to see if the specified file is excluded from tracked dependency checking\r\n            ":"\r\n            测试以查看指定的文件是否被排除在跟踪的依赖性检查中\r\n            \r\n","\r\n            Will provide location information for an event, this is especially \r\n            needed in a multi processor environment\r\n            ":"\r\n            将为活动提供位置信息，尤其是\r\n            在多处理器环境中需要\r\n            \r\n","\r\n            Use a private property so that we can lazy initialize the regex\r\n            ":"\r\n            使用私有财产，以便我们可以懒惰地初始化正则\r\n            \r\n","\r\n            This class wraps information about properties which have been used before they are initialized\r\n            ":"\r\n            此类包装有关在初始化之前已使用的属性的信息\r\n            \r\n","\r\n            Whether or not this is out of proc.\r\n            ":"\r\n            这是否超出了Proc。\r\n            \r\n","\r\n            This property returns the list of error codes for warnings/errors that were generated during solution parsing. \r\n            ":"\r\n            此属性返回解决方案解析过程中生成的警告/错误的错误代码列表。\r\n            \r\n","The callback to be used to handle new project build requests.":"用于处理新项目构建请求的回调。\r\n","The lookup to enter with.":"查找要输入的。\r\n","\r\n            Determines whether the specified configuration if is known to the node.\r\n            ":"确定是否为节点知道指定的配置。\r\n            \r\n"," // Occurences:2; Operation: Include; Provenance: StringLiteral | Glob\r\n             ":" //发生：2;操作：包括；出处：弦乐|地球\r\n             \r\n","\r\n            Intrinsic function that transforms expressions like the %(foo) in @(Compile->'%(foo)').\r\n            ":"\r\n            内在函数会在 @（compile->'％（foo）'）中转换诸如％（foo）之类的表达式。\r\n            \r\n"," to let tasks know if a warning\r\n            they are about to log will be converted into an error.\r\n            ":" 让任务知道是否警告\r\n            他们即将将记录转换为错误。\r\n            \r\n","\r\n            Keeps track of the processes we've already checked for nodes so we don't check them again.\r\n            ":"\r\n            跟踪我们已经检查的节点的过程，因此我们不再检查它们。\r\n            \r\n","A logger exception thrown by a logger when its initialize call is made":"记录器的原始呼叫初始化调用时，记录器异常\r\n","\r\n            Coupled together with the MSBUILDDISABLEFEATURESFROMVERSION environment variable,\r\n            this class acts as a way to make risky changes while giving customers an opt-out.\r\n            ":"\r\n            与MSBUILDDISABLEFEATURES FROMVERMION环境变量相结合，\r\n            该课程是进行风险更改的一种方式，同时让客户选择退出。\r\n            \r\n","Destination array is not long enough to copy all the items in the collection. Check array index and length.":"目标阵列不足以复制集合中的所有项目。检查阵列索引和长度。\r\n","\r\n            Regkey that we check to see whether Dev10 is installed.  This should exist if any SKU of Dev10 is installed, \r\n            but is not removed even when the last version of Dev10 is uninstalled, due to 10.0\\bsln sticking around. \r\n            ":"\r\n            我们检查是否安装了Dev10。如果安装了Dev10的任何SKU，则应该存在，\r\n            但是，即使最后一个版本的dev10被卸载，也不会删除，这是由于粘附了10.0 \\ bsln。\r\n            \r\n","\r\n            Platform version\r\n            ":"\r\n            平台版本\r\n            \r\n","\r\n            Store the path for MSBuild / MSBuildTaskHost so that we don't have to keep recalculating it. \r\n            ":"\r\n            存储MSBUILD / MSBUILDTASKHOST的路径，这样我们就不必继续重新计算它。\r\n            \r\n","\r\n            Given a subexpression, finds referenced sub transform expressions\r\n            itemName and separator will be null if they are not found\r\n            return value will be null if no transform expressions are found\r\n            ":"给定子表达，找到引用的子变换表达式\r\n            如果找不到项目名称和分离器，则将无效\r\n            如果找不到转换表达式，返回值将为null\r\n            \r\n","The item-spec of the item.":"该项目的项目规格。\r\n","\r\n            Gets and sets the value of the Runtime attribute.\r\n            ":"\r\n            获取并设置运行时属性的值。\r\n            \r\n","\r\n            The results for a completed submission.\r\n            ":"\r\n            完成提交的结果。\r\n            \r\n","\r\n            Indexer which sets or returns results for the specified node\r\n            ":"\r\n            设置或返回指定节点结果的索引器\r\n            \r\n","\r\n            The time of the newest Tlog\r\n            ":"\r\n            最新tlog的时间\r\n            \r\n"," and its overloads.\r\n            ":" 及其过载。\r\n            \r\n"," containing details of the SDKs referenced by the project.":" 包含项目引用的SDK的详细信息。\r\n","\r\n            Represents a strongly typed list of objects that can be accessed by index. Provides methods to search, sort, and\r\n            manipulate lists.\r\n            ":"\r\n            表示可以通过索引访问的对象的强烈键入列表。提供搜索，分类和\r\n            操纵列表。\r\n            \r\n","The return value indicates what steps to take next.  The default is to assume that there\r\n            is no host object provided, and therefore we should fallback to calling the command-line tool.":"返回值表示下一步要采取哪些步骤。默认值是假设那里\r\n            没有提供主机对象，因此我们应该退缩以调用命令行工具。\r\n","\r\n            This property is higher in priority that ":"\r\n            此属性优先于\r\n","\r\n            Location of the exclude, if any.\r\n            ":"\r\n            排除位置（如果有）。\r\n            \r\n","\r\n            Gets or sets the Type attribute returns \"System.String\" if not set.\r\n            If null or empty is set the attribute will be removed from the element.\r\n            ":"\r\n            获取或设置类型属性返回“ System.String”（如果未设置）。\r\n            如果设置为空或空，则将从元素中删除属性。\r\n            \r\n","\r\n            This class encapsulates the default data associated with build events. \r\n            It is intended to be extended/sub-classed.\r\n            ":"\r\n            此类封装了与构建事件关联的默认数据。\r\n            它旨在扩展/子类。\r\n            \r\n","\r\n            Maximum size of the mru list.\r\n            ":"\r\n            MRU列表的最大尺寸。\r\n            \r\n","\r\n            Gets a previously registered task object.\r\n            ":"\r\n            获取先前注册的任务对象。\r\n            \r\n"," to provide the inital items (which may get subsequently transformed, if ":" 提供iNITAT项目（如果\r\n","\r\n            Gets or sets the Update value.\r\n            ":"\r\n            获取或设置更新值。\r\n            \r\n","\r\n            This value was introduced in Visual Studio 15.1. It is incompatible with previous\r\n            versions of MSBuild.\r\n            ":"\r\n            该值是在Visual Studio 15.1中引入的。它与以前不兼容\r\n            MSBUILD的版本。\r\n            \r\n","\r\n            Get the expanded value\r\n            ":"\r\n            获取扩展的价值\r\n            \r\n","\r\n            Maximum version of the platform that the SDK supports.\r\n            ":"\r\n            SDK支持的平台的最大版本。\r\n            \r\n","\r\n            The collection of loggers to use during the build.\r\n            ":"\r\n            在构建过程中要使用的记录仪的集合。\r\n            \r\n","\r\n            The equivalence operator.\r\n            ":"\r\n            等效运算符。\r\n            \r\n","\r\n            A pointer to the central logger\r\n            ":"\r\n            指向中央记录仪的指针\r\n            \r\n","\r\n            Contains various static functions and methods for parsing and validating:\r\n                NCName (not namespace-aware, no colons allowed)\r\n                QName (prefix:local-name)\r\n            ":"\r\n            包含各种静态功能和用于解析和验证的方法：\r\n                ncname（不知道命名空间，不允许结肠）\r\n                qname（前缀：本地名称）\r\n            \r\n","\r\n            Clear all configurations\r\n            ":"\r\n            清除所有配置\r\n            \r\n","\r\n            Returns true if the specified project can be built directly, without using a metaproject.\r\n            ":"\r\n            如果可以直接构建指定的项目，则返回true，而无需使用元标记。\r\n            \r\n","\r\n            Prepares the engine for a new build and spins up the engine thread.  \r\n            The engine must be in the Idle state, and not already be initialized.\r\n            ":"\r\n            为发动机准备新的版本，并旋转发动机线。\r\n            发动机必须处于空闲状态，并且尚未初始化。\r\n            \r\n","\r\n            The project root element cache from the project collection\r\n            that began the build. This is a thread-safe object.\r\n            It's held here so it can get passed to the build.\r\n            ":"\r\n            项目收集项目的项目根元素缓存\r\n            那开始了构建。这是一个线程安全对象。\r\n            它在这里举行，因此可以传递给构建。\r\n            \r\n","\r\n            Holds a snapshot of the environment at the time we blocked.\r\n            ":"\r\n            在我们被阻止时，请持有环境的快照。\r\n            \r\n","Registry root to look for sdks within":"注册表root以在内部寻找SDK\r\n","\r\n            Framework extension SDK\r\n            ":"\r\n            框架扩展SDK\r\n            \r\n","The node ID to which the request should be sent.":"请求发送请求的节点ID。\r\n","\r\n            Ensures the path does not have a leading slash after removing the first 'start' characters but does end in a slash.\r\n            ":"\r\n            删除第一个“开始”字符后，确保路径没有领先的斜线，但确实以斜线结束。\r\n            \r\n","\r\n            Gets or sets whether this piece of metadata is expressed as an attribute.\r\n            ":"\r\n            获取或设置该元数据表示为属性。\r\n            \r\n","\r\n            This class is the filetracking log interpreter for .read. tracking logs in canonical form\r\n            or those that have been rooted (^) to make them canonical\r\n            ":"\r\n            此类是.read的Filetracking Log解释器。以规范形式跟踪日志\r\n            或那些植根的人（^）使它们成为规范\r\n            \r\n","\r\n            Maps node id to the requests scheduled on it.\r\n            ":"\r\n            映射节点ID到安排在其上的请求。\r\n            \r\n","\r\n            Architecture on the task, if any\r\n            May be empty string\r\n            ":"\r\n            关于任务的架构，如果有的话\r\n            可能是空字符串\r\n            \r\n","\r\n            Number of times the ginourmous string missed.\r\n            ":"\r\n            杜松子字符串错过的次​​数。\r\n            \r\n","True if both parts meet all conditions for a legal filespec.":"如果这两个部分都符合法律文件的所有条件，则是真的。\r\n","The entry which completed.":"完成的条目。\r\n","\r\n            Number of targets in the project.\r\n            ":"\r\n            项目中的目标数。\r\n            \r\n","The existing results.":"现有结果。\r\n","\r\n            Gets the captured itemtype.\r\n            ":"\r\n            获取捕获的项目类型。\r\n            \r\n","\r\n            The project started event handler\r\n            ":"\r\n            项目启动活动处理程序\r\n            \r\n","\r\n            Intrinsic function that returns a boolean to indicate if any of the items have the given metadata value\r\n            Using a case insensitive comparison.\r\n            ":"\r\n            返回布尔值的固有函数，以指示任何项目是否具有给定的元数据值\r\n            使用案例不敏感的比较。\r\n            \r\n","\r\n            ERROR_NO_MORE_FILES\r\n            ":"\r\n            error_no_more_files\r\n            \r\n","The project file path of the project about to be built":"即将构建项目的项目文件路径\r\n","\r\n            Default version of MaxPlatformVersion in framework extension SDKs with manifest not containing such a property\r\n            ":"\r\n            框架扩展SDK中的MaxPlatFormversion的默认版本，其明显不包含此类属性\r\n            \r\n","\r\n            The SolutionFile containing information about the solution we're generating a wrapper for.\r\n            ":"\r\n            解决方案文件包含有关我们正在生成包装器的解决方案的信息。\r\n            \r\n","\r\n            File monitor\r\n            ":"\r\n            文件监视器\r\n            \r\n","\r\n            Creates a temporary response file for the given command line arguments.\r\n            We put as many command line arguments as we can into a response file to\r\n            prevent the command line from getting too long. An overly long command\r\n            line can cause the process creation to fail.\r\n            ":"\r\n            为给定的命令行参数创建一个临时响应文件。\r\n            我们将尽可能多的命令行参数放入响应文件中\r\n            防止命令行太长。过长的命令\r\n            行可能会导致过程创建失败。\r\n            \r\n","\r\n            OutOfProcTaskHostNodeProvider\r\n            ":"\r\n            OUTOFPROCTASKHOSTNODEPROVIDER\r\n            \r\n","The task factory logging host.":"任务工厂记录主机。\r\n"," if the build submission logged an errors, otherwise ":" 如果构建提交记录错误，则\r\n","The message importance.":"消息重要性。\r\n","\r\n            This class implements the \"CallTarget\" task, which invokes other targets within the same\r\n            project file.  Marked RunInMTA because we do not want this task to ever be invoked explicitly\r\n            on the STA if the RequestBuilder is running on another thread, as this will cause thread\r\n            id validation checks to fail.\r\n            ":"\r\n            该类实现“ calltarget”任务，该任务在同一中调用其他目标\r\n            项目文件。标记为runinmta，因为我们不希望明确调用此任务\r\n            如果requestBuilder在另一个线程上运行，则在sta上，因为这将导致线程\r\n            ID验证检查失败。\r\n            \r\n","\r\n             Given an index at a directory separator or start of a recursive operator,\r\n             iteratively skip to the end of three sequences:\r\n             \r\n             (1), (2) Both sequences handled by IndexOfNextNonCollapsibleChar\r\n             \r\n             (3) \\**\\**\\ -> \\**\\\r\n                          This is an identity, so for example, these two are equivalent,\r\n            \r\n                             dir1\\**\\**\\ == dir1\\**\\\r\n             ":"\r\n             在目录分离器或递归操作员的启动下给定索引，\r\n             迭代跳到三个序列的末尾：\r\n             \r\n             （1），（2）由IndexofNextNonCollapsiblechar处理的两个序列\r\n             \r\n             （3）\\ ** \\ ** \\  - > \\ ** \\\r\n                          这是一个身份，例如，这两个是等效的，\r\n            \r\n                             dir1 \\ ** \\ ** \\ == dir1 \\ ** \\\r\n             \r\n"," state after the build. This is only provided if ":" 构建后的状态。仅当\r\n","IProperttyTypes":"iProperttytypes\r\n","\r\n            Marks the specified request and all of its ancestors as having aborted.\r\n            ":"\r\n            将指定的请求及其所有祖先标记为中止。\r\n            \r\n","\r\n            Internal helper to get the next ProjectItemElement sibling.\r\n            If there is none, returns null.\r\n            ":"\r\n            内部帮手获得下一个ProjectItemelement同胞。\r\n            如果没有，则返回null。\r\n            \r\n","\r\n            This entry is necessary to use the enum with binary math. It is never used outside \r\n            intermediate calculations.\r\n            ":"\r\n            这个条目是必要的使用枚举与二进制数学. 它从不在外面使用 \r\n            中间计算。\r\n            \r\n","\r\n            Returns the number of nodes available to create on this provider.\r\n            ":"\r\n            返回在此提供商上可以创建的节点的数量。\r\n            \r\n","\r\n            Adds a new item definition\r\n            Only called during evaluation, so does not check for immutability.\r\n            ":"\r\n            添加一个新项目定义\r\n            仅在评估过程中调用，因此不检查不变性。\r\n            \r\n","\r\n            Gets an enumeration of the ancestors which led to this circular dependency.\r\n            ":"\r\n            得到祖先的枚举，这导致了这种循环依赖。\r\n            \r\n","The .write. tlog files to interpret":".write。 tlog文件解释\r\n","\r\n            Error if the project does not exist on disk.\r\n            ":"\r\n            如果项目在磁盘上不存在，则错误。\r\n            \r\n","\r\n            The target previously built unsuccessfully.\r\n            ":"\r\n            以前的目标构建不成功。\r\n            \r\n","\r\n            The result of building this entry's request\r\n            ":"\r\n            构建本条目的要求的结果\r\n            \r\n","\r\n            Retrieve the project call stack based on the starting point of buildEventContext e\r\n            ":"\r\n            根据buildEventContext E的起点检索项目呼叫堆栈\r\n            \r\n","\r\n            If the task fails, warn and continue.\r\n            ":"\r\n            如果任务失败，请警告并继续。\r\n            \r\n","\r\n            Called by TaskHostFactory to let the task know that if it needs to do any additional cleanup steps, \r\n            now would be the time.  \r\n            ":"\r\n            由TaskShostFactory调用，让任务知道如果需要执行任何其他清理步骤，\r\n            现在是时候了。\r\n            \r\n"," of metadata names to remove.":" 元数据名称要删除。\r\n","\r\n            Raised when resources are requested.\r\n            ":"\r\n            当要求资源时筹集。\r\n            \r\n","\r\n            Let's reserve a few indices for future use.\r\n            ":"\r\n            让我们保留一些索引以备将来使用。\r\n            \r\n","\r\n            Create global properties snapshot\r\n            ":"\r\n            创建全局属性快照\r\n            \r\n","\r\n            Route the build event to the filter\r\n            ":"\r\n            将构建事件路由到过滤器\r\n            \r\n","\r\n            Reference compare target to string. If target is non-string this should return false.\r\n            ":"\r\n            参考将目标与字符串进行比较。如果目标是非弦乐，则应该返回false。\r\n            \r\n","\r\n            Location of the MSBuildArchitecture attribute, if any\r\n            ":"\r\n            MSBuildArchitecture属性的位置，如果有的话\r\n            \r\n","/>\r\n            ":"/>\r\n            \r\n","\r\n            Called by ProjectElementContainer to clear the parent when\r\n            removing an element from its parent.\r\n            ":"\r\n            ProjectElementContainer召集以清除父母\r\n            从父母那里删除元素。\r\n            \r\n","\r\n            The exception generated while this request was running, if any.\r\n            Note that this can be set if the request itself fails, or if it receives\r\n            an exception from a target or task.\r\n            ":"\r\n            此请求运行时生成的异常（如果有）。\r\n            请注意，如果请求本身失败，则可以设置此设置，或者收到\r\n            目标或任务的例外。\r\n            \r\n","\r\n                The fixed directory part match\r\n            ":"\r\n                固定目录零件匹配\r\n            \r\n","\r\n            Determines whether the current verbosity setting is at least the value\r\n            passed in.\r\n            ":"\r\n            确定当前的冗长设置至少是值\r\n            传入。\r\n            \r\n","\r\n            Number of spaces that each level of indentation is worth\r\n            ":"\r\n            每个凹痕级别值得的空间数量\r\n            \r\n","\r\n            Record an import opened during evaluation, if appropriate.\r\n            ":"\r\n            记录在评估期间打开的导入，如果适当的话。\r\n            \r\n","The build submission ID to clear from the cache.":"从缓存中清除构建提交ID。\r\n","\r\n            file extension \r\n            ":"\r\n            文件扩展名\r\n            \r\n"," // Occurences: 1; Operation: Exclude; Provenance: StringLiteral\r\n             ":" //发生：1;操作：排除；出处：字符串\r\n             \r\n","The root element to which this element will belong.":"此元素将属于的根元素。\r\n","The evaluated include for the item.":"评估包括该项目。\r\n","\r\n            Initializes this base class.\r\n            ":"\r\n            初始化此基类。\r\n            \r\n","\r\n            Parse a ProjectPropertyGroupElement from the element\r\n            ":"\r\n            解析元素的project PropertyGroupelement\r\n            \r\n","\r\n            Gets the list of names of public instance properties that have the required attribute applied.\r\n            Caches the result - since it can't change during the build.\r\n            ":"\r\n            获取具有所需属性的公共实例属性名称列表。\r\n            缓存结果 - 因为在构建过程中无法更改。\r\n            \r\n","Provides file information about where the build error happened":"提供有关构建错误发生何处的文件信息\r\n","\r\n            Collection type\r\n            This has to be public as cannot change access modifier when overriding\r\n            ":"\r\n            收集类型\r\n            这必须是公开的，因为覆盖时不能更改访问修饰符\r\n            \r\n","\r\n            When we receive a build request, we first have to determine if we already have a configuration which matches the\r\n            one used by the request.  We do this because everywhere we deal with requests and results beyond this function, we\r\n            use configuration ids, which are assigned once by the Build Manager and are global to the system.  If we do\r\n            not have a global configuration id, we can't check to see if we already have build results for the request, so we \r\n            cannot send the request out.  Thus, first we determine the configuration id.\r\n            \r\n            Assuming we don't have the global configuration id locally, we will send the configuration to the Build Manager.\r\n            It will look up or assign the global configuration id and send it back to us.\r\n            \r\n            Once we have the global configuration id, we can then look up results locally.  If we have enough results to fulfill\r\n            the request, we give them back to the request, otherwise we have to forward the request to the Build Mangager\r\n            for scheduling.\r\n            ":"\r\n            当我们收到构建请求时，我们首先必须确定我们是否已经具有与\r\n            请求使用。我们之所以这样做，是因为我们在任何地方处理此功能之外的请求和结果，我们\r\n            使用配置ID，该配置ID由Build Manager分配一次，并且是系统的全局。如果我们这样做\r\n            没有全局配置ID，我们无法检查我们是否已经为请求构建结果，因此我们\r\n            无法发送请求。因此，首先我们确定配置ID。\r\n            \r\n            假设我们在本地没有全局配置ID，我们将将配置发送到build Manager。\r\n            它将查找或分配全局配置ID并将其发送回我们。\r\n            \r\n            一旦拥有全局配置ID，我们就可以在本地查找结果。如果我们有足够的结果来实现\r\n            该请求，我们将它们还给请求，否则我们必须将请求转发给构建Mangager\r\n            用于安排。\r\n            \r\n","\r\n            Potentially Intern the given char array.\r\n            ":"\r\n            潜在实习给定的字符阵列。\r\n            \r\n","\r\n            Requests that a new node be created.\r\n            ":"\r\n            请求创建一个新节点。\r\n            \r\n","\r\n            Used only for unit tests. Expands the property expression (including any metadata expressions) and returns\r\n            the result typed (i.e. not converted into a string if the result is a function return).\r\n            ":"\r\n            仅用于单元测试。 展开属性表达式（包括任何元数据表达式）并返回\r\n            结果类型（即，如果结果是函数返回，则不转换为字符串）。\r\n            \r\n","\r\n            Helps implementation of the ":"\r\n            帮助实施\r\n","Did the task pass or fail":"任务通过还是失败了\r\n","\r\n            The store of items for the target result.  This class is responsible for the serialization of the items collection, which is \r\n            useful to keep separate as it is where we spend most of our time serializing for large projects, and these are the bits\r\n            we throw out of memory when the cache gets collected.\r\n            ":"\r\n            目标结果的商店。该课程负责项目集合的序列化，这是\r\n            对于将大部分时间用于大型项目的大部分时间，这些都是分开的，这些都是部分\r\n            收集缓存时，我们会丢掉记忆。\r\n            \r\n","\r\n            Indicates an invalid project context identifier.\r\n            ":"\r\n            表示无效的项目上下文标识符。\r\n            \r\n","\r\n            Items in this project, ordered within groups of item types\r\n            ":"\r\n            该项目中的项目，在项目类型组中订购\r\n            \r\n","\r\n            Description of this ":"\r\n            描述\r\n","\r\n            Interface representing item definition objects for use by the Evaulator.\r\n            ":"\r\n            代表项目定义对象的接口供evaulator使用。\r\n            \r\n","\r\n            The actual importance at which standard out messages will be logged \r\n            ":"\r\n            记录标准消息的实际重要性\r\n            \r\n","Identifier being targeted":"标识符是针对的\r\n","\r\n            The logger verbosity\r\n            ":"\r\n            记录器的详细性\r\n            \r\n","\r\n            Gets or sets the MatchOnMetadataOptions value.\r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty or null.\r\n            ":"\r\n            获取或设置MatchonMetadataOptions值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空或null，则删除属性。\r\n            \r\n","\r\n            Flags indicating the mode in which the task builder should operate.\r\n            ":"\r\n            指示任务生成器应操作的模式的标志。\r\n            \r\n","\r\n            Returns CPU resources to the scheduler.\r\n            ":"\r\n            将CPU资源返回调度程序。\r\n            \r\n","\r\n            Unescape a string using MSBuild escaping format. For example, \"%3b\" for \";\".\r\n            All escaped characters are unescaped.\r\n            ":"\r\n            使用MSBUILD逃脱格式取消示例字符串。例如，“％3B” for“;”。\r\n            所有逃脱的角色都不浮出水面。\r\n            \r\n","\r\n            The low-order DWORD value of the file size, in bytes.\r\n            ":"\r\n            文件大小的低阶DWord值，字节。\r\n            \r\n","A sequence number indication what order the buckets were created in.":"序列号指示存储桶的创建顺序。\r\n","\r\n            For unit-testing only.\r\n            ":"\r\n            仅用于单位测试。\r\n            \r\n",").\r\n            This flag turns off this behaviour. ":"）。\r\n            该标志关闭了此行为。\r\n","\r\n            ProjectRootElement class represents an MSBuild project, an MSBuild targets file or any other file that conforms to MSBuild\r\n            project file schema.\r\n            This class and its related classes allow a complete MSBuild project or targets file to be read and written.\r\n            Comments and whitespace cannot be edited through this model at present.\r\n            \r\n            Each project root element is associated with exactly one ProjectCollection. This allows the owner of that project collection\r\n            to control its lifetime and not be surprised by edits via another project collection.\r\n            ":"\r\n            ProjectRootelement类代表一个MSBUILD项目，MSBUILD目标文件或任何符合MSBUILD的文件\r\n            项目文件模式。\r\n            此类及其相关类允许阅读和编写一个完整的MSBUILD项目或目标文件。\r\n            目前无法通过此模型编辑评论和空格。\r\n            \r\n            每个项目的根元素都与一个projectCollection相关联。这允许该项目集合的所有者\r\n            为了控制其寿命，不要对通过另一个项目集合的编辑感到惊讶。\r\n            \r\n","\r\n            Get an enumerator over any child item groups\r\n            ":"\r\n            在任何子项目组上获取枚举者\r\n            \r\n","\r\n            Gets the configuration's accumulated time.\r\n            ":"\r\n            获取配置的累积时间。\r\n            \r\n","The path to the project file to parse.":"要解析项目文件的路径。\r\n","\r\n            The object responsible for creating and managing nodes.\r\n            ":"\r\n            负责创建和管理节点的对象。\r\n            \r\n","Did the build pass or fail":"构建是否通过或失败\r\n","\r\n            Task factory used to create CodeDom-based inline tasks.  Special-cased as one of two officially\r\n            supported task factories in Microsoft.Build.Tasks.vX.Y.dll to deal with versioning issue. \r\n            ":"\r\n            任务工厂用于创建基于编码的内联任务。作为两个正式之一的特殊赛\r\n            Microsoft.build.tasks.vx.y.dll中支持的任务工厂来处理版本化问题。\r\n            \r\n","A string":"字符串\r\n","Whether task inputs are logged.":"是否记录了任务输入。\r\n","\r\n            Base class for nodes that are operators (have children in the parse tree)\r\n            ":"\r\n            是操作员的节点的基础课程（在解析树上有孩子）\r\n            \r\n","\r\n            Scheduler\r\n            ":"\r\n            调度程序\r\n            \r\n","\r\n            Constructor for the unblocker where we are blocked waiting for results.\r\n            ":"\r\n            Unblocker的构造函数，我们被阻止等待结果。\r\n            \r\n","\r\n            Enumeration of all possible (currently supported) options for handshakes.\r\n            ":"\r\n            对握手的所有可能（当前支持）选项的枚举。\r\n            \r\n","\r\n            Get the value of the registry key and value\r\n            ":"\r\n            获取注册表密钥和价值的价值\r\n            \r\n","\r\n            Initializes the component.\r\n            ":"\r\n            初始化组件。\r\n            \r\n","\r\n            Raised when a configuration needs its ID resolved.\r\n            ":"\r\n            当配置需要解决其ID时升高。\r\n            \r\n","\r\n            A buffer typically big enough to handle a packet body.\r\n            We use this as a convenient way to manage and cache a byte[] that's resized\r\n            automatically to fit our payload.\r\n            ":"\r\n            一个缓冲区通常足够大以处理包子。\r\n            我们将其用作调整大小的字节[]的便捷方法\r\n            自动适合我们的有效载荷。\r\n            \r\n","\r\n            If dwFlags specifies STARTF_USESHOWWINDOW, this member can be any of the SW_ constants defined in Winuser.h. Otherwise, this member is ignored.\r\n            ":"\r\n            如果DWFLAGS指定startf_useshowwindow，则该成员可以是hinuser.h中定义的任何SW_常数。否则，该成员将被忽略。\r\n            \r\n"," and others\r\n             best for ":" 和别的\r\n             最好的\r\n","\r\n            Called when a ProjectInstance is created.\r\n            ":"\r\n            创建ProjectInstance时调用。\r\n            \r\n","\r\n            Initialize an unparented ProjectUsingTaskBodyElement\r\n            ":"\r\n            初始化无与伦比的项目效果\r\n            \r\n","The id of the submission which is at the root of the build.":"提交的ID处于构建的根源。\r\n","\r\n            If exactly one value is added and no concatenation takes places, this value is returned without\r\n            conversion. In other cases values are stringified and attempted to be interpreted as file paths\r\n            before concatenation.\r\n            ":"\r\n            如果恰好添加一个值并且不进行串联，则该值将在没有的情况下返回\r\n            转换。在其他情况下，值是串起的，并试图解释为文件路径\r\n            串联之前。\r\n            \r\n","\r\n            May return null if the expression would expand to non-empty and it broke out early.\r\n            Otherwise, returns the correctly expanded expression.\r\n            ":"\r\n            如果表达式将扩展到非空的，并且早点爆发，则可能会返回null。\r\n            否则，返回正确扩展的表达式。\r\n            \r\n","\r\n            Waits to reacquire control after yielding.\r\n            ":"\r\n            等待屈服后重新控制。\r\n            \r\n","\r\n            This one is a bit tricky.  Orcas assumed that the value being set was escaped, but\r\n            that the value being returned was unescaped.  Maintain that behaviour here.  To get\r\n            the escaped value, use ITaskItem2.EvaluatedIncludeEscaped.\r\n            ":"\r\n            这有点棘手。 Orcas认为要设置的值已逃脱，但是\r\n            返回的价值是不渗透的。在这里保持这种行为。要得到\r\n            逃脱的价值，使用itaskItem2.evaleDincludeScapate。\r\n            \r\n","\r\n             Adds a new project to the list of project started events which have been fired\r\n            ":"\r\n             在已解雇的项目启动事件列表中添加了一个新项目\r\n            \r\n","Delegate used to test whether a toolset exists for a given ToolsVersion.  May be null, in which\r\n            case we act as though that toolset existed.":"委托用于测试给定工具交换的工具集是否存在。可能是无效的，其中\r\n            情况我们好像该工具集存在。\r\n","\r\n            Gets the specified metadata value.  Returns an empty string if none is set.\r\n            ":"\r\n            获取指定的元数据值。如果没有设置，则返回一个空字符串。\r\n            \r\n","\r\n             The XmlCharType class is used for quick character type recognition\r\n             which is optimized for the first 127 ascii characters.\r\n            ":"\r\n             XMLchartype类用于快速字符类型识别\r\n             它针对前127个ASCII字符进行了优化。\r\n            \r\n","\r\n            Reads the settings for a specified tools version\r\n            ":"\r\n            读取指定工具版本的设置\r\n            \r\n","\r\n            This form of specifying help takes precedence over ":"\r\n            这种指定帮助的形式优先\r\n","\r\n            Get any contained ParameterGroup.\r\n            ":"\r\n            获取任何包含的参数组。\r\n            \r\n","\r\n            Called to execute a task within a target. This method instantiates the task, sets its parameters, and executes it.\r\n            ":"\r\n            打电话给目标内执行任务。此方法实例化任务，设置其参数并执行。\r\n            \r\n","The result for the request":"请求的结果\r\n","\r\n            Properties we need to serialize from the child node\r\n            ":"\r\n            我们需要从子节点序列化的属性\r\n            \r\n","\r\n            The value to be passed to the Properties attribute of the MSBuild task to build a specific project.  Contains reference to project configuration and\r\n            platform as well as the solution configuration bits.\r\n            ":"\r\n            将要传递给MSBUILD任务的属性属性以构建特定项目的值。包含对项目配置的引用和\r\n            平台以及解决方案配置位。\r\n            \r\n","A delegate to intercept GetFiles calls.  For unit testing.":"拦截getfiles呼叫的代表。用于单元测试。\r\n","\r\n            Method used for debugging purposes.\r\n            ":"\r\n            用于调试目的的方法。\r\n            \r\n","\r\n            Assigns requests preferring those with the most requests waiting on them, but only counting those requests which are\r\n            directly waiting, as opposed to the transitive closure.\r\n            ":"\r\n            分配请求偏爱那些请求最多的请求，但仅计算那些请求\r\n            直接等待，而不是及时关闭。\r\n            \r\n"," of how the item appeared in the operation.\r\n            ":" 该项目在操作中的出现方式。\r\n            \r\n","\r\n            The ID of the node.\r\n            ":"\r\n            节点的ID。\r\n            \r\n","\r\n            Sets a new metadata value.  Called by the evaluator only.\r\n            Discards predecessor as this information is only useful at design time.\r\n            ":"\r\n            设置一个新的元数据值。仅由评估者调用。\r\n            丢弃前身，因为此信息仅在设计时间有用。\r\n            \r\n","\r\n            Sets the desired thread priority for building.\r\n            ":"\r\n            设置所需的线程优先级。\r\n            \r\n","\r\n            Handle project started events\r\n            ":"\r\n            处理项目开始活动\r\n            \r\n","\r\n            The BuildManager with which this submission is associated.\r\n            ":"与此提交相关的构建管理员。\r\n            \r\n","Win32FindData":"win32finddata\r\n","\r\n            Handler which is called when a project that is part of this collection is dirtied. We then fire an event indicating that a project has been dirtied.\r\n            ":"\r\n            当属于此集合的项目的项目被弄脏时，被称为处理程序。然后，我们开火，表明一个项目已被弄脏。\r\n            \r\n","\r\n            SDK identifier\r\n            ":"\r\n            SDK标识符\r\n            \r\n","\r\n            Whether reevaluation is temporarily disabled on projects in this collection.\r\n            This is useful when the host expects to make a number of reads and writes\r\n            to projects, and wants to temporarily sacrifice correctness for performance.\r\n            ":"\r\n            重新评估是否在此集合中的项目上暂时禁用。\r\n            当主机期望进行多个读取和写入时，这很有用\r\n            进行项目，并希望暂时牺牲绩效的正确性。\r\n            \r\n","\r\n            Regkey that we check to see whether Dev10 Ultimate is installed.  This will exist if it is installed, and be \r\n            properly removed after it has been uninstalled.  \r\n            ":"\r\n            我们检查是否安装了Dev10 Ultimate。如果安装它，则将存在，并且\r\n            卸载后正确删除。\r\n            \r\n","\r\n            The value of the condition expression as it was evaluated.\r\n            ":"\r\n            评估条件表达的值。\r\n            \r\n","\r\n            2) if no targets are specified, the default targets are built\r\n            3) target outputs are returned as ":"\r\n            2）如果未指定目标，则构建默认目标\r\n            3）返回目标输出为\r\n","\r\n            We are blocked waiting on a target in progress.\r\n            ":"\r\n            我们被阻止等待正在进行的目标。\r\n            \r\n","The expression to process.":"处理的表达式。\r\n","The id of the configuration to remove.":"要删除的配置的ID。\r\n","The start location for skipping whitespace, contains the next non-whitespace character on exit.":"跳过空格的开始位置，包含出口上的下一个非Whitespace字符。\r\n","\r\n            Gets a matching configuration.  If no such configuration exists, one is created and optionally loaded.\r\n            ":"\r\n            获得匹配配置。如果不存在此类配置，则将创建并选择加载。\r\n            \r\n","The new state value.":"新状态值。\r\n","\r\n            Count of metadata on the item definition.\r\n            ":"\r\n            在项目定义上的元数据计数。\r\n            \r\n","\r\n                Find all files that are to be considered SDK Resolvers. Pattern will match\r\n                Root\\SdkResolver\\(ResolverName)\\(ResolverName).dll.\r\n            ":"\r\n                查找所有要视为SDK解析器的文件。图案将匹配\r\n                root \\ sdkresolver \\（resolvername）\\（resolvername）.dll。\r\n            \r\n","\r\n            Figures out the path to the tool (including the .exe), either by using the ToolPath\r\n            parameter, or by asking the derived class to tell us where it should be located.\r\n            ":"\r\n            通过使用工具路径来了解工具的路径（包括.EXE）\r\n            参数，或要求派生类告诉我们应该在哪里找到。\r\n            \r\n","\r\n            Adds a ProjectElement to the Xml tree\r\n            ":"\r\n            在XML树上添加一个项目电子\r\n            \r\n","\r\n            Event context information, where the event was fired from in terms of the build location\r\n            ":"\r\n            事件上下文信息，从构建位置发出事件的位置\r\n            \r\n","\r\n            Schedule a task to drain the packet write queue. We could have had a\r\n            dedicated thread that would pump the queue constantly, but\r\n            we don't want to allocate a dedicated thread per node (1MB stack)\r\n            ":"\r\n            安排一项任务以排除数据包写队列。我们本可以有一个\r\n            专用线将不断泵送队列，但是\r\n            我们不想分配每个节点的专用线程（1MB堆栈）\r\n            \r\n","Type of metadata objects.":"元数据对象的类型。\r\n","\r\n            Gets a count of all the ready requests.\r\n            ":"\r\n            获取所有现成的请求的计数。\r\n            \r\n","Instantiated logger.":"实例化记录仪。\r\n","\r\n            Implementation of the results cache.\r\n            ":"\r\n            实现结果缓存。\r\n            \r\n"," to use for evaluation.\r\n            ":" 用于评估。\r\n            \r\n","The metadata modification.":"元数据修饰。\r\n","\r\n                The file name part match\r\n            ":"\r\n                文件名零件匹配\r\n            \r\n","\r\n            Adds a new item definition\r\n            ":"\r\n            添加一个新项目定义\r\n            \r\n","\r\n            Returns the overall result for this request.\r\n            ":"返回此请求的总体结果。\r\n            \r\n","Unevaluated value is assumed to be escaped as necessary":"假定未评估的值是必要的\r\n","\r\n            Find the matching string in the cache.\r\n            Constant time operation.\r\n            ":"\r\n            在缓存中找到匹配的字符串。\r\n            恒定的时间操作。\r\n            \r\n","\r\n            Item type that items created by this factory will have.\r\n            ":"\r\n            该工厂创建的项目类型将拥有。\r\n            \r\n","\r\n            Indicates if we should enable the build plan\r\n            ":"\r\n            指示我们是否应该启用构建计划\r\n            \r\n","\r\n            Hook for subclasses to specify whether the given ":"\r\n            子类挂钩以指定是否给定\r\n","Components may declare Min and Max OSVersions in the registry this value can be used filter directories returned based on whether or not the osversion is bounded by the Min  and Max versions declared by the component. If this value is blank or null no filtering is done":"组件可以根据注册表中的最低和最大放射率声明此值可以根据滤波返回的过滤目录，该目录是否受组件声明的最小版本和最大版本界限。如果此值为空白或无效\r\n","\r\n                Table of conditioned properties and their values.\r\n                Used to populate configuration lists in some project systems.\r\n                If this is null, as it is for command line builds, conditioned properties\r\n                are not recorded.\r\n            ":"\r\n                条件性能及其值表。\r\n                用于在某些项目系统中填充配置列表。\r\n                如果这是空的，则因为它是用于命令行构建的条件属性的\r\n                未记录。\r\n            \r\n","\r\n            Id of the task the event was caused from\r\n            ":"\r\n            该事件的任务ID是由\r\n            \r\n","\r\n            Generate a string from task host context and the remote process to be used as key to lookup processes we have already\r\n            attempted to connect to or are already connected to\r\n            ":"\r\n            从任务主机上下文和远程过程中生成一个字符串，用于查找过程的关键\r\n            试图连接或已经连接到\r\n            \r\n","\r\n            Parse a ProjectItemDefinitionGroupElement\r\n            ":"\r\n            解析ProjectItemDefinitionGroupelement\r\n            \r\n","\r\n            Regular property, originating in an XML node, and with a predecessor (property with same name that was overridden during evaluation)\r\n            ":"\r\n            常规属性，起源于XML节点，并带有前身（在评估过程中被覆盖的属性相同的属性）\r\n            \r\n","\r\n            A hint to the UI client telling it whether to display this property or not.\r\n            ":"\r\n            向UI客户端的提示，告诉它是否显示此属性。\r\n            \r\n","\r\n            Taking the opportunity to fix the property name, although this doesn't\r\n            make it obvious it's an improvement on GetMetadata.\r\n            ":"\r\n            借此机会修复了属性名称，尽管这不是\r\n            很明显，这是对GetMetadata的改进。\r\n            \r\n","\r\n            Gets or sets the RemoveMetadata value.\r\n            Returns empty string if it is not present.\r\n            Removes the attribute if the value to set is empty or null.\r\n            ":"获取或设置removeMetAdata值。\r\n            如果不存在，则返回空字符串。\r\n            如果要设置的值为空或null，则删除属性。\r\n            \r\n","The name of the target being executed.":"执行目标的名称。\r\n","\r\n            Writes a single line of node utilization information.\r\n            ":"\r\n            写一系列节点利用信息。\r\n            \r\n","\r\n            Cache of PropertyInfos for this type\r\n            ":"\r\n            这种类型的PropertyInfos的缓存\r\n            \r\n","\r\n            Delegate called when the context terminates.\r\n            ":"\r\n            上下文终止时委派。\r\n            \r\n","\r\n            Always load writeable\r\n            ":"\r\n            始终可以写入\r\n            \r\n","\r\n                    Note: Use ":"\r\n                    注意：使用\r\n","\r\n            Useful constructor including the ability to set the timestamp\r\n            ":"\r\n            有用的构造函数，包括设置时间戳的能力\r\n            \r\n","\r\n            Initialize the logger.\r\n            ":"\r\n            初始化记录器。\r\n            \r\n","\r\n            The prefix to use for all property switches in this ":"\r\n            在此使用的所有属性开关的前缀\r\n","\r\n            Logs a custom event for the current task\r\n            ":"\r\n            记录当前任务的自定义事件\r\n            \r\n","\r\n            Generates the sub-toolset version to be used with this toolset.  Sub-toolset version is based on:\r\n            1. If the \"VisualStudioVersion\" global property exists in the set of properties passed to us, use it. \r\n            2. Otherwise, if \"VisualStudioVersion\" is set as a property on the toolset itself (global or environment), \r\n               use that. \r\n            3. Otherwise, use Visual Studio version from solution file if it maps to an existing sub-toolset. \r\n            4. Otherwise, use the default sub-toolset version for this toolset. \r\n            \r\n            The sub-toolset version returned may be null; if so, that means that no sub-toolset should be used, \r\n            just the base toolset on its own. The sub-toolset version returned may not map to an existing \r\n            sub-toolset.  \r\n            \r\n            The global properties dictionary may be null. \r\n            ":"\r\n            生成要与此工具集一起使用的子模式版本。子量表版本基于：\r\n            1.如果在传递给我们的属性集中存在“ Visual -Studioversion”全局属性，请使用它。\r\n            2.否则，如果“ Visual -Studioversion”设置为工具集本身（全局或环境）上的属性，则\r\n               使用。\r\n            3.否则，如果将Visual Studio版本从解决方案文件中映射到现有的子图形，则使用Visual Studio版本。\r\n            4.否则，为此工具集使用默认的子图表版本。\r\n            \r\n            返回的子量表版本可能为null；如果是这样，这意味着不应使用不使用子图案，\r\n            只是基本工具集。返回的子模式版本可能无法映射到现有的\r\n            子模式。\r\n            \r\n            全局属性字典可能为null。\r\n            \r\n","\r\n            There are four possible values:\r\n            false - Error and stop if the task fails.\r\n            true - Warn and continue if the task fails.\r\n            ErrorAndContinue - Error and continue if the task fails.\r\n            WarnAndContinue - Same as true.\r\n            ":"\r\n            有四个可能的值：\r\n            false-错误，如果任务失败，请停止。\r\n            是的 - 如果任务失败，请警告并继续。\r\n            errorAndContinue-错误，如果任务失败，请继续。\r\n            WARNANDCONTINUE-与true相同。\r\n            \r\n","\r\n            Constructor takes the token type and the string that\r\n            represents the token\r\n            ":"\r\n            构造函数采用令牌类型和字符串\r\n            代表令牌\r\n            \r\n","\r\n            Returns true if the result applies to this request.\r\n            ":"\r\n            如果结果适用于此请求，则返回true。\r\n            \r\n"," objects repeatedly. Used in scenarios that don't have a good context to attach\r\n            a shared buffer to.\r\n            ":" 反复对象。在没有良好环境的场景中使用\r\n            共享缓冲区。\r\n            \r\n","\r\n            In case the items are stored on ProjectEvaluationFinishedEventArgs\r\n            (new behavior), we first store the value per evaluation, and then\r\n            in ProjectStarted, find the value from the project's evaluation\r\n            and use that.\r\n            ":"\r\n            如果这些物品存储在ProjectEvaluationFineDedEventargs上\r\n            （新行为），我们首先存储每次评估的值，然后\r\n            在Project Started中，从项目评估中找到价值\r\n            并使用它。\r\n            \r\n","\r\n            Evaluated value of the property.  Escaped as necessary.\r\n            ":"\r\n            评估物业的价值。必要时逃脱。\r\n            \r\n","True if the items are equivalent, false otherwise.":"如果项目等效，则为fress，否则为否则。\r\n","s. The latter are created from the missing categories that are being referred to by the \r\n            properties in this Rule. The auto-generated ":"s。后者是由丢失的类别创建的\r\n            此规则中的属性。自动生成\r\n","⚠⚠ Every member\r\n             should only dereference ":"⚠⚠每个成员\r\n             只能解雇\r\n","\r\n            This class wraps information about properties which have been used before they are initialized.\r\n            ":"\r\n            此类包装有关在初始化之前已使用的属性的信息。\r\n            \r\n","\r\n            Logs a task skipped message if necessary.\r\n            ":"\r\n            如有必要，记录了一条任务跳过消息。\r\n            \r\n"," requests will also use this project cache instead of\r\n            the potential project caches described in graph node's evaluations.\r\n            ":" 请求也将使用此项目缓存而不是\r\n            图节点评估中描述的潜在项目缓存。\r\n            \r\n","\r\n            Filename for the MSBuild tasks (v14+), used for shimming in loading \r\n            task factory UsingTasks\r\n            ":"\r\n            MSBUILD任务（V14+）的文件名，用于加载\r\n            任务工厂使用任务\r\n            \r\n","\r\n            The storage location for this data source. \r\n            ":"\r\n            此数据源的存储位置。\r\n            \r\n","\r\n                The evaluation context to use in case reevaluation is required.\r\n                To avoid reevaluation use ":"\r\n                如果需要重新评估，要使用的评估上下文。\r\n                避免重新评估使用\r\n","\r\n            Expands embedded item metadata, properties, and embedded item lists (in that order) as specified in the provided options\r\n            and produces a list of items of the type for which it was specialized.\r\n            If the expression is empty, returns an empty list.\r\n            If ExpanderOptions.BreakOnNotEmpty was passed, expression was going to be non-empty, and it broke out early, returns null. Otherwise the result can be trusted.\r\n            \r\n            Use this form when the result is going to be processed further, for example by matching against the file system,\r\n            so literals must be distinguished, and you promise to unescape after that.\r\n            ":"\r\n            按照提供的选项中指定\r\n            并生产出专门的类型项目列表。\r\n            如果表达式为空，请返回一个空列表。\r\n            如果通过ExpanderOptions.breakonnotempty通过，表达将是非空的，并且早点爆发，则返回NULL。否则可以信任结果。\r\n            \r\n            当结果要进一步处理时，请使用此表格，例如，通过与文件系统匹配，\r\n            因此，必须区分文字，然后您承诺在那之后取消探索。\r\n            \r\n","\r\n            Translates a dictionary of { string, DateTime }.\r\n            ":"\r\n            翻译{string，dateTime}的字典。\r\n            \r\n","\r\n            UNDONE: Protect against overflowing the stack by having too many nested imports.\r\n            ":"\r\n            撤消：防止过多嵌套进口物，防止堆叠堆积。\r\n            \r\n","The Toolset containing the toolser task registry":"包含工具器任务注册表的工具集\r\n","\r\n            For example, with ":"\r\n            例如，\r\n","\r\n            Used to specify the version of Visual Studio from which to select associated \r\n            tools for some methods of ToolLocationHelper\r\n            ":"\r\n            用于指定可从中选择关联的Visual Studio版本\r\n            某些toollocationHelper的工具\r\n            \r\n","\r\n            The component responsible for building tasks.\r\n            ":"\r\n            负责构建任务的组件。\r\n            \r\n","\r\n            Constructor without location information\r\n            ":"\r\n            没有位置信息的构造函数\r\n            \r\n","The base registry key.":"基本注册表密钥。\r\n","\r\n            Gets the project configuration and platform values as an attribute string for an MSBuild task used to build the project.\r\n            ":"\r\n            将项目配置和平台值作为用于构建项目的MSBUILD任务的属性字符串。\r\n            \r\n","\r\n            Tells if this property is a read-only property. \r\n            ":"\r\n            告诉该属性是否是仅阅读属性。\r\n            \r\n","True if the central and forwarding loggers were registered. False if the central logger or the forwarding logger were already registered":"如果注册中央和转发登录器，则为是真的。错误如果中央记录仪或转发记录仪已经注册\r\n","\r\n            Gather task outputs in array form\r\n            ":"以数组形式收集任务输出\r\n            \r\n","\r\n            Searches upward for a directory containing the specified file, beginning in the specified directory.\r\n            ":"\r\n            向上搜索包含指定文件的目录，从指定目录开始。\r\n            \r\n","\r\n            Unevaluated condition.\r\n            May be empty string.\r\n            ":"\r\n            未评估的状况。\r\n            可以是空字符串。\r\n            \r\n","\r\n            Use this for Directory.EnumerateFiles(path, pattern, option)\r\n            ":"\r\n            将其用于目录。\r\n            \r\n","\r\n            Removes all items passed in a collection.\r\n            ":"\r\n            删除集合中通过的所有项目。\r\n            \r\n","\r\n            Creates an unparented ProjectItemGroupElement, wrapping an unparented XmlElement.\r\n            Caller should then ensure the element is added to the XmlDocument in the appropriate location.\r\n            ":"\r\n            创建一个无与伦比的ProjectItemgroupelement，包装无与伦比的XMLELEMENT。\r\n            然后，呼叫者应确保将元素添加到适当位置的xmldocument中。\r\n            \r\n","\r\n            Raised for BuildFinishedEventArgs instances\r\n            ":"\r\n            为buildfinedEventargs实例提出\r\n            \r\n","\r\n            Name of this toolset\r\n            ":"\r\n            此工具集的名称\r\n            \r\n","\r\n            This method adds a new ProjectReference item to the specified instance.  The reference will either be to its metaproject (if the project\r\n            is a web project or has reference of its own) or to the project itself (if it has no references and is a normal MSBuildable project.)\r\n            ":"\r\n            此方法将一个新的ProjectReference项目添加到指定的实例。该引用要么是指其Metaproject（如果项目\r\n            是Web项目或具有自己的参考）或对项目本身的参考（如果它没有参考并且是一个普通的MSBuild项目。）\r\n            \r\n","\r\n            Location of the TaskParameter attribute\r\n            ":"\r\n            任务参数属性的位置\r\n            \r\n","\r\n            Set the specified parameter based on its type.\r\n            ":"\r\n            根据其类型设置指定的参数。\r\n            \r\n","The project file":"项目文件\r\n","\r\n            Get an enumerator over all children, gotten recursively.\r\n            Walks the children in a depth-first manner.\r\n            ":"\r\n            对所有孩子进行枚举，并递归地获得。\r\n            以深度优先的方式行走。\r\n            \r\n","\r\n            Clears from the current environment any variables which do not exist in the saved environment\r\n            ":"\r\n            从当前环境中清除任何在保存环境中不存在的变量\r\n            \r\n","\r\n            The storage location for this data source.\r\n            ":"\r\n            此数据源的存储位置。\r\n            \r\n","\r\n            Indexer which sets or returns results for the specified target\r\n            ":"\r\n            为指定目标设置或返回结果的索引器\r\n            \r\n","\r\n            Intrinsic function that returns only the items from itemsOfType that have distinct Item1 in the Tuple\r\n            Using a case insensitive comparison.\r\n            ":"\r\n            固有函数仅返回元组中具有独特item1的项目的项目\r\n            使用案例不敏感的比较。\r\n            \r\n","\r\n            Enumerator over a series of sibling ProjectElement objects\r\n            ":"\r\n            一系列兄弟姐妹项目的枚举者\r\n            \r\n","\r\n            Whether the debugger manager has been initialized yet.\r\n            ":"\r\n            调试器经理是否已初始化。\r\n            \r\n","\r\n            Replaces the project state (":"替换项目状态（\r\n","Should the logger component created be synchronous or asynchronous":"创建的记录器组件是同步还是异步\r\n","\r\n            The specification of the target being built.\r\n            ":"\r\n            构建目标的规范。\r\n            \r\n","\r\n            Add an entry if not already present\r\n            ":"\r\n            如果尚未出现，请添加条目\r\n            \r\n","\r\n            The line number this task is on\r\n            ":"\r\n            该任务已打开的行号\r\n            \r\n","\r\n            A counter incremented every time the toolsets change which would necessitate a re-evaluation of\r\n            associated projects.\r\n            ":"\r\n            每当工具集更改时，都需要重新评估计数器\r\n            相关项目。\r\n            \r\n","\r\n            Expand the match provided into a string, and append that to the provided string builder.\r\n            Returns true if ExpanderOptions.BreakOnNotEmpty was passed, expression was going to be non-empty, and so it broke out early.\r\n            ":"\r\n            将提供的匹配显示到字符串中，并将其附加到提供的字符串构建器上。\r\n            如果通过扩展，breakonnotempty通过，表达将是非空的，那么返回是正确的。\r\n            \r\n","\r\n            Filter describing properties, items, and metadata of interest for this request.\r\n            ":"\r\n            滤波器描述此请求的属性，项目和元数据。\r\n            \r\n","\r\n            Adds a factory.\r\n            ":"\r\n            添加了工厂。\r\n            \r\n","\r\n            Use this for File.ReadAllText(path)\r\n            ":"\r\n            将其用于file.readallText（路径）\r\n            \r\n","\r\n            Creates a ProjectInstance directly.\r\n            No intermediate Project object is created.\r\n            This is ideal if the project is simply going to be built, and not displayed or edited.\r\n            Global properties may be null.\r\n            Tools version may be null.\r\n            Used by SolutionProjectGenerator so that it can explicitly pass the vsVersionFromSolution in for use in \r\n            determining the sub-toolset version. \r\n            ":"\r\n            直接创建一个ProjectInstance。\r\n            没有创建中间项目对象。\r\n            如果仅仅要构建或不显示或编辑该项目，这是理想的选择。\r\n            全局属性可能为零。\r\n            工具版本可能为空。\r\n            由solutionProjectGenerator使用\r\n            确定子量表版本。\r\n            \r\n","\r\n            The state of the request as a result of the event.\r\n            ":"\r\n            事件结果的请求状态。\r\n            \r\n"," returns for various item elements\r\n             ":" 返回各种项目元素\r\n             \r\n","\r\n            Given a target platform identifier and version, get the display name for that platform SDK. \r\n            ":"\r\n            给定目标平台标识符和版本，获取该平台SDK的显示名称。\r\n            \r\n","Right hand side operand":"右侧操作数\r\n","\r\n            The prefix for the switch representation of this value for the case when the parent ":"\r\n            当父的情况下，该值的开关表示的前缀\r\n","The entry to which we compare this one.":"我们比较这个条目。\r\n","\r\n            Structure that contains the startupinfo\r\n            Represents STARTUP_INFO in win32\r\n            ":"\r\n            包含startupinfo的结构\r\n            代表Win32中的startup_info\r\n            \r\n","\r\n            The column number this task is on\r\n            ":"\r\n            该任务已打开的列号\r\n            \r\n","\r\n            The unique target inputs.\r\n            ":"\r\n            唯一的目标输入。\r\n            \r\n","\r\n            Checks the conditions for whether or not we want ApplyChangeWave to be called again.\r\n            ":"\r\n            检查是否要再次调用ApplyChangeWave的条件。\r\n            \r\n","\r\n            This class represents property element\r\n            ":"\r\n            此类代表属性元素\r\n            \r\n","\r\n            DefaultTargets specified in the project, or\r\n            the logically first target if no DefaultTargets is\r\n            specified in the project.\r\n            ":"\r\n            项目中指定的defaulttargets或\r\n            如果没有defaulttargets是，逻辑上的第一个目标是\r\n            在项目中指定。\r\n            \r\n","\r\n            Instantiates an ItemGroup task\r\n            ":"\r\n            实例化项目组任务\r\n            \r\n","\r\n            Handles the ResourceResponse packet.\r\n            ":"\r\n            处理Resouscoresponse数据包。\r\n            \r\n",".\r\n                The glob root will be the current working directory.\r\n            ":"。\r\n                全球根将是当前的工作目录。\r\n            \r\n","\r\n            Removes any parameter on this task with the specified name.\r\n            If there is no such parameter, does nothing.\r\n            ":"\r\n            使用指定名称删除此任务上的任何参数。\r\n            如果没有这样的参数，则无能为力。\r\n            \r\n","\r\n            Handles the NodeConfiguration packet.\r\n            ":"\r\n            处理NodeConfiguration包。\r\n            \r\n","\r\n            The backing Xml project.\r\n            Can never be null.\r\n            ":"\r\n            支持XML项目。\r\n            永远不会无效。\r\n            \r\n","The primary source file to interpret dependencies for":"解释依赖关系的主要源文件\r\n","\r\n            Wraps an unevaluated itemgroup under a target.\r\n            Immutable.\r\n            ":"\r\n            在目标下包裹未评估的项目组。\r\n            不变。\r\n            \r\n","\r\n            Adds some remote loggers to the collection of remote loggers used for builds of projects in this collection.\r\n            May be null.\r\n            ":"\r\n            将一些远程记录器添加到该集合中用于构建项目的远程记录仪的集合中。\r\n            可能是无效的。\r\n            \r\n","Set to true if a circular dependency was detected.":"如果检测到循环依赖性，则将其设置为true。\r\n","\r\n            Unescape Targets, Properties (including Properties and AdditionalProperties as Project item metadata)\r\n            will be un-escaped before processing. e.g. %3B (an escaped ';') in the string for any of them will \r\n            be treated as if it were an un-escaped ';'\r\n            ":"\r\n            UNESCAPE目标，属性（包括属性和其他Properties作为项目项目元数据）\r\n            处理前将不被淘汰。例如其中任何一个中的％3B（一个逃脱的';'）将\r\n            被视为是一个未散布的';\r\n            \r\n","\r\n            Returns true if a valid plan was read, false otherwise.\r\n            ":"\r\n            如果读取有效的计划，则返回true，否则为错误。\r\n            \r\n","\r\n            Receives the build finished event.\r\n            ":"\r\n            接收构建完成的事件。\r\n            \r\n","\r\n            Gets or sets a value indicating whether the build process should run as low priority.\r\n            ":"\r\n            获取或设置一个值，以指示构建过程是否应作为低优先级运行。\r\n            \r\n","\r\n            Retrieves the minimum assignable configuration id\r\n            ":"\r\n            检索最低分配配置ID\r\n            \r\n","\r\n            Informs the system that this task has a long-running out-of-process component and other work can be done in the\r\n            build while that work completes.\r\n            ":"\r\n            告知系统此任务具有长期运行的外部组件，可以在\r\n            在工作完成时构建。\r\n            \r\n","\r\n            Event is a ProjectImportedEventArgs\r\n            ":"\r\n            活动是ProjectImportedEventargs\r\n            \r\n","\r\n            Compares this property to another for equivalence.\r\n            ":"\r\n            将此属性与另一个属性进行比较。\r\n            \r\n","\r\n            Standard output. This should be the default if verbosity level is not set\r\n            ":"\r\n            标准输出。如果未设置详细性级别，则应该是默认值\r\n            \r\n","\r\n            Parses a string of the form $(propertyname).\r\n            ":"\r\n            解析表单$（propertyName）的字符串。\r\n            \r\n","\r\n            Retrieves the central logger.\r\n            ":"\r\n            检索中央记录仪。\r\n            \r\n","\r\n            Adds an item with no metadata to the project.\r\n            Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.\r\n            Makes no effort to locate the new item near similar items.\r\n            Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.\r\n            Evaluates on a best-effort basis:\r\n                -expands with all items. Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.\r\n                -only this item is evaluated. Other items that might depend on it is not affected.\r\n            This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.\r\n            ":"在项目中添加一个没有元数据的项目。\r\n            除非是项目组中的第一个项目，否则不会努力查看现有通配符是否已经与新项目相匹配。\r\n            不用努力将新物品定位在类似物品附近。\r\n            将项目附加到没有条件的第一个项目组中，也没有孩子，或者他们的第一个孩子是相同类型的项目。\r\n            以最佳胜地进行评估：\r\n                 - 与所有项目相关。在新项目下方的XML中定义的项目也可以使用，即使在实际评估中不会。\r\n                 - 仅评估此项目。其他可能依赖它的项目不受影响。\r\n            这是一种方便，可以理解，在重新评估之前，它不一定会使项目处于完全一致的状态。\r\n            \r\n","String key to find the correct string resource":"字符串键查找正确的字符串资源\r\n","\r\n            This should be protected, but \"protected internal\" means \"OR\" not \"AND\",\r\n            so this is not possible.\r\n            ":"\r\n            这应该受到保护，但“受保护的内部”表示“或“不”和“，”，\r\n            因此，这是不可能的。\r\n            \r\n","The owning project object.":"拥有的项目对象。\r\n","\r\n            ProjectItemElement class represents the Item element in the MSBuild project.\r\n            ":"\r\n            ProjectItemelement类代表MSBUILD项目中的项目元素。\r\n            \r\n","\r\n            Dummy required implementation\r\n            ":"\r\n            虚拟需要实施\r\n            \r\n","\r\n            Location of the MatchOnMetadataOptions attribute\r\n            ":"\r\n            Matchonmetadataoptions属性的位置\r\n            \r\n","\r\n            List of values and names available initially\r\n            ":"\r\n            最初可用的价值和名称列表\r\n            \r\n","The logging context for the project.":"项目的日志记录上下文。\r\n","\r\n            Source of the metadata\r\n            ":"\r\n            元数据的来源\r\n            \r\n","\r\n            toolsVersion element collection\r\n            ":"\r\n            ToolsVersion元素集合\r\n            \r\n","\r\n            Converts a Win32 error code to HResult\r\n            ":"\r\n            将Win32错误代码转换为Hresult\r\n            \r\n","\r\n            Event indicating the node has terminated.\r\n            ":"\r\n            表示节点已终止的事件。\r\n            \r\n","\r\n            This method computes the sources that need to be compiled based on the output files and the\r\n            full dependency graph of inputs, optionally searching composite rooting markers\r\n            for subroots that may contain input files\r\n            ":"\r\n            此方法计算需要根据输出文件和\r\n            输入的完整依赖关系图，可选地搜索复合生根标记\r\n            对于可能包含输入文件的者场\r\n            \r\n","\r\n            Indicates what the action is for requests which are yielding.\r\n            ":"\r\n            指示所产生的请求的措施。\r\n            \r\n","\r\n            Gets the n character in the target string.\r\n            ":"\r\n            获取目标字符串中的n个字符。\r\n            \r\n","\r\n            This method instructs the request builder that the target builder is blocked on a target which is already in progress on the\r\n            configuration due to another request.\r\n            ":"\r\n            此方法指示请求构建器确定目标构建器被阻止在目标上正在进行的目标上\r\n            由于另一个请求，配置。\r\n            \r\n","\r\n            Handles the BuildRequestConfigurationResponse packet.\r\n            ":"\r\n            处理BuildRequestConfigurationResponse数据包。\r\n            \r\n","\r\n            The targets to build.\r\n            ":"\r\n            构建目标。\r\n            \r\n"," objects from the given ":" 给定的对象\r\n","\r\n            Indicates if the events to forward are being set by the parameters sent to the logger\r\n            if this is false the events to forward are based on verbosity else verbosity settings will be ignored\r\n            ":"\r\n            指示是否通过发送到Logger的参数设置要转发的事件\r\n            如果这是错误的，那么要转发的事件基于冗长，否则详细设置将被忽略\r\n            \r\n","\r\n            In the middle of writing the current record we may discover that we want to write another record\r\n            preceding the current one, specifically the list of names and values we want to reuse in the\r\n            future. As we are writing the current record to a MemoryStream first, it's OK to temporarily\r\n            switch to the direct underlying stream and write the NameValueList record first.\r\n            When the current record is done writing, the MemoryStream will flush to the underlying stream\r\n            and the current record will end up after the NameValueList record, as desired.\r\n            ":"\r\n            在编写当前记录的过程中，我们可能会发现我们要编写另一个记录\r\n            在当前一个，特别是我们要重复使用的名称和值列表\r\n            未来。当我们首先将当前记录写入Memorystream时，可以临时\r\n            切换到直接的基础流，然后首先编写名称Valuelist记录。\r\n            当当前记录完成编写后，内存流将冲向基础流\r\n            目前的记录将根据需要在名字Valuelist记录之后结束。\r\n            \r\n","\r\n                Constructs a graph starting from the given project file, evaluating with the provided global properties and the\r\n                provided project collection.\r\n            ":"\r\n                从给定的项目文件开始构造图形，用提供的全局属性评估\r\n                提供了项目收集。\r\n            \r\n","The targets to be built":"要建立的目标\r\n","\r\n            Subtract two longs\r\n            ":"\r\n            减去两个长\r\n            \r\n","\r\n            Evaluate the properties in the passed in XML, into the project.\r\n            Does a depth first traversal into Imports.\r\n            In the process, populates the item, itemdefinition, target, and usingtask lists as well.\r\n            ":"\r\n            将XML中传递的属性评估到项目中。\r\n            深度对进口进行深度遍历。\r\n            在此过程中，还填充项目，项目定义，目标和使用任务列表。\r\n            \r\n","\r\n            The one and only project root element cache to be used for the build.\r\n            ":"\r\n            用于构建的唯一项目根元素缓存。\r\n            \r\n","\r\n            This class represents the data which is used for legacy threading semantics for the build\r\n            ":"\r\n            该类代表用于构建的旧线程语义的数据\r\n            \r\n","A glob composite":"地球复合材料\r\n","ToolsetCollectionVersion":"ToolSetCollectionVersion\r\n","\r\n            Gets the processor architecture of the currently running process\r\n            ":"\r\n            获取当前运行过程的处理器体系结构\r\n            \r\n","\r\n            Initialize an unparented ProjectImportElement\r\n            ":"\r\n            初始化无与伦比的ProjectImportelement\r\n            \r\n","\r\n            Gathers the results from the target into the base lookup of the target.\r\n            ":"\r\n            将目标的结果聚集到目标的基本查找中。\r\n            \r\n","\r\n            Returns the TaskHostContext corresponding to this process\r\n            ":"返回与此过程相对应的TaskHostContext\r\n            \r\n","\r\n            expose mutable precalculated cache to outside so that other can take advantage of the cache as well.\r\n            ":"\r\n            将可突变的预先计算的缓存暴露于外部，以便其他可以利用缓存。\r\n            \r\n","\r\n            Evaluated include.\r\n            The original XML may have evaluated to several of these items,\r\n            each with a different include.\r\n            May be empty, for example from expanding an empty list or from a transform with undefined metadata.\r\n            Escaped as necessary\r\n            ":"评估包括。\r\n            原始XML可能已经评估了其中几个项目，\r\n            每个都不同。\r\n            可能是空的，例如，通过扩展空列表或带有未定义元数据的转换。\r\n            必要时逃脱\r\n            \r\n","\r\n            This class holds everything the logger needs to know about a particular submission, including the event source.\r\n            ":"\r\n            该课程持有记录器需要了解的有关特定提交的所有内容，包括事件源。\r\n            \r\n","\r\n            The context of this build (used for logging purposes). \r\n            ":"\r\n            此构建的上下文（用于记录目的）。\r\n            \r\n","\r\n            Gets an enumeration of all toolsets in the provider.\r\n            ":"\r\n            获取提供商中所有工具集的列举。\r\n            \r\n","\r\n            Name of the value of GetDotNetFrameworkRootRegistryKey that contains the SDK install root path\r\n            ":"\r\n            getDotnetFrameworkRootregistryKey的值的名称，该keykek instan instal install install root路径\r\n            \r\n","\r\n            This (family) constructor allows derived task classes to register their resources, as well as provide a prefix for\r\n            composing help keywords from string resource names. If the prefix is an empty string, then string resource names will\r\n            be used verbatim as help keywords. For an example of how the prefix is used, see the\r\n            TaskLoggingHelper.LogErrorWithCodeFromResources(string, object[]) method.\r\n            ":"\r\n            该（家庭）构造函数允许派生任务类注册其资源，并为\r\n            从字符串资源名称中撰写帮助关键字。如果前缀是一个空字符串，则字符串资源名称将\r\n            逐字使用作为帮助关键字。有关如何使用前缀的示例，请参见\r\n            taskLoggingHelper.logerRorwithCodeFromResources（String，Object []）方法。\r\n            \r\n","\r\n            The full name of this configuration - e.g. \"Debug|Any CPU\"\r\n            ":"\r\n            此配置的全名 - 例如“调试|任何CPU”\r\n            \r\n","The segment size to use for small object heap segmented arrays.":"用于小对象堆分段阵列的段尺寸。\r\n","\r\n            This class represents a project (or SLN folder) that is read in from a solution file.\r\n            ":"\r\n            该类代表从解决方案文件中读取的项目（或SLN文件夹）。\r\n            \r\n","Number of logical cores being requested.":"请求逻辑核心数。\r\n","\r\n            Controls where projects must be built.\r\n            ":"\r\n            控制项目必须构建的控制。\r\n            \r\n","\r\n            Type filter to make sure we only look for taskFactoryClasses\r\n            ":"\r\n            键入过滤器，以确保我们只查找TaskFactoryClasses\r\n            \r\n","\r\n            The next build submission id.\r\n            ":"\r\n            下一个构建提交ID。\r\n            \r\n","\r\n            Environment,\r\n            ":"\r\n            环境，\r\n            \r\n","\r\n            If the dwFileAttributes member includes the FILE_ATTRIBUTE_REPARSE_POINT attribute, this member specifies the reparse point tag.\r\n            ":"\r\n            如果dwfileattributes成员包括file_attribute_reparse_point属性，则此成员指定重新验证点标签。\r\n            \r\n","\r\n            Delegate to check to see if a directory exists\r\n            ":"\r\n            委托检查目录是否存在\r\n            \r\n","\r\n            This field is optional. \r\n            It returns null when this property is not set. The value of this\r\n            property must be less than or equal to the ":"\r\n            该字段是可选的。\r\n            当未设置此属性时，它将返回null。这个价值\r\n            财产必须小于或等于\r\n",".\r\n            Parameters are cloned.\r\n            ":"。\r\n            参数被克隆。\r\n            \r\n","\r\n            Flags for controlling the toolset initialization.\r\n            ":"\r\n            用于控制工具集初始化的标志。\r\n            \r\n","\r\n            The project to which this target is attached.\r\n            ":"\r\n            附加该目标的项目。\r\n            \r\n"," that was performed.\r\n            ":" 那是执行的。\r\n            \r\n","\r\n            Creates and optionally populates a new configuration.\r\n            ":"\r\n            创建并选择填充新的配置。\r\n            \r\n","\r\n            Verifies that the provided element isn't this element or a parent of it.\r\n            If it is, throws InvalidOperationException.\r\n            ":"验证提供的元素不是此元素或父母的父母。\r\n            如果是这样，请引发无效的exception。\r\n            \r\n","\r\n            Arguments for telemetry events.\r\n            ":"\r\n            遥测事件的论点。\r\n            \r\n","\r\n            Gets the next build id.\r\n            ":"\r\n            获取下一个构建ID。\r\n            \r\n","The target for which results are desired.":"需要结果的目标。\r\n","\r\n            corresponding content type\r\n            ":"\r\n            相应的内容类型\r\n            \r\n","Error message in canonical format":"典型格式的错误消息\r\n","A hash code":"哈希代码\r\n","\r\n            Set the built-in properties, most of which are read-only\r\n            ":"\r\n            设置内置属性，其中大多数是只读的\r\n            \r\n","The concatenated formatted string.":"串联格式的字符串。\r\n","\r\n            Index 0 is null, Index 1 is the empty string.\r\n            Reserve indices 2-9 for future use. Start indexing actual strings at 10.\r\n            ":"\r\n            索引0为空，索引1是空字符串。\r\n            预备指数2-9用于将来使用。开始在10点开始索引实际字符串。\r\n            \r\n","\r\n            Gets the formatted message.\r\n            ":"\r\n            获取格式的消息。\r\n            \r\n","true if starts with UNC pattern.":"如果以UNC模式开头，则为真实。\r\n","\r\n            The next action to take.\r\n            ":"\r\n            下一个要采取的行动。\r\n            \r\n","\r\n            If PMSF_NORMAL is used, ignore leading spaces in the string pointed to by pszSpec. If PMSF_MULTIPLE is used, \r\n            ignore leading spaces in each file type contained in the string pointed to by pszSpec. This flag can be combined with PMSF_NORMAL and PMSF_MULTIPLE.\r\n            ":"\r\n            如果使用PMSF_Normal，请忽略PSZSPEC指向的字符串中的前导空间。如果使用pmsf_multiple，\r\n            忽略PSZSPEC指向的字符串中包含的每个文件类型中的前导空间。该标志可以与PMSF_Normal和PMSF_Multiple结合使用。\r\n            \r\n","\r\n            This is an immutable class\r\n            ":"\r\n            这是一个不变的班级\r\n            \r\n","\r\n            Location of the outputs\r\n            ":"\r\n            输出的位置\r\n            \r\n","\r\n            Constructor for a single input source file\r\n            ":"\r\n            单个输入源文件的构造函数\r\n            \r\n","\r\n            The singleton comparer to use when an exact match is desired\r\n            ":"\r\n            需要进行确切匹配时使用的单例比较\r\n            \r\n","\r\n            Logs that a target has finished.\r\n            ":"\r\n            登录目标已经完成。\r\n            \r\n","The event arguments that indicate Project-specific details.":"事件参数指示特定于项目的详细信息。\r\n","\r\n            We use this dictionary to track whether or not we've seen a given\r\n            property definition before, since the .NET configuration classes\r\n            won't perform this check without respect for case.\r\n            ":"\r\n            我们使用此词典来跟踪我们是否看到了给定的\r\n            属性定义之前，由于.NET配置类\r\n            不会在没有案件的情况下执行此支票。\r\n            \r\n"," to use.\r\n                This parameter is compatible only with ":" 使用。\r\n                此参数仅与\r\n","\r\n            Recursively dumps the build information for the specified hierarchy\r\n            ":"\r\n            递归将指定层次结构的构建信息转储\r\n            \r\n","\r\n            When true the environment block supplied by the build started event should be printed out at the start of the build\r\n            ":"\r\n            当正确的环境块所提供的环境块应在构建开始时打印出来\r\n            \r\n","\r\n            The number of tabstops to indent this event when it is eventually displayed.\r\n            ":"\r\n            最终显示此事件时，将其缩小的TABSTOPS的数量。\r\n            \r\n","\r\n            Read toolset information from the registry (HKLM\\Software\\Microsoft\\MSBuild\\ToolsVersions).\r\n            ":"\r\n            从注册表中读取工具集信息（HKLM \\ Software \\ Microsoft \\ msbuild \\ Toolsversions）。\r\n            \r\n","\r\n            The maximum number of nodes to use.\r\n            ":"\r\n            最大使用节点数量。\r\n            \r\n","\r\n            The type of the property\r\n            ":"\r\n            属性的类型\r\n            \r\n","\r\n                An object used by the caller to extend the lifespan of evaluation caches (by passing the object on to other\r\n                evaluations).\r\n                The caller should throw away the context when the environment changes (IO, environment variables, SDK resolution\r\n                inputs, etc).\r\n                This class and its closure needs to be thread safe since API users can do evaluations in parallel.\r\n            ":"\r\n                呼叫者使用的对象延长评估缓存的寿命（通过将对象传递到其他对象\r\n                评估）。\r\n                当环境变化时，呼叫者应抛弃上下文（IO，环境变量，SDK分辨率\r\n                输入等）。\r\n                由于API用户可以并行进行评估，因此此类及其关闭需要安全。\r\n            \r\n","\r\n                Logging context and helpers for evaluation logging\r\n            ":"\r\n                记录上下文和评估记录的帮助者\r\n            \r\n","\r\n            Intrinsic function that returns the contents of the metadata in specified in argument[0]\r\n            ":"\r\n            在参数[0]中指定的元数据中返回元数据的内容的固有函数\r\n            \r\n","\r\n            The remainder of the body once the function and arguments have been extracted\r\n            ":"\r\n            剩余的身体一旦提取了功能和参数\r\n            \r\n","\r\n            Final set of items produced by this evaluation.\r\n            ":"\r\n            本评估生成的最终项目集。\r\n            \r\n","true if the project file specifies an explicit toolsversion but a different one is chosen":"如果项目文件指定了明确的工具，则选择了不同的工具\r\n","\r\n            Raised for BuildErrorEventArgs instances\r\n            ":"\r\n            为BuilderRoreventargs实例筹集\r\n            \r\n","If set to true, load all projects as read-only.":"如果设置为true，请加载所有项目，为只读。\r\n","\r\n            Normally represented on disk as XAML, only one instance of this class is maintained per XAML\r\n            file per project engine (solution).\r\n            ":"\r\n            通常在磁盘上表示为XAML，每个XAML仅维持此类的一个实例\r\n            每个项目引擎文件（解决方案）。\r\n            \r\n","\r\n            A base class for \"hosted\" ISdkResolverService implementations which are registered by an ":"\r\n            一个用于“托管” ISDKResolverservice实现的基类，由\r\n"," to use for the cloned dictionary.":" 用于克隆词典。\r\n","\r\n            The cache of registered disposable objects.\r\n            ":"\r\n            注册一次性对象的缓存。\r\n            \r\n","\r\n            Store the path for MSBuild / MSBuildTaskHost so that we don't have to keep recalculating it.\r\n            ":"\r\n            存储MSBUILD / MSBUILDTASKHOST的路径，这样我们就不必继续重新计算它。\r\n            \r\n","\r\n            Full path to the project file.\r\n            If the project has not been loaded from disk and has not been given a path, returns null.\r\n            If the project has not been loaded from disk but has been given a path, this path may not exist.\r\n            Setter renames the project, if it already had a name.\r\n            ":"\r\n            项目文件的完整路径。\r\n            如果该项目尚未从磁盘上加载，也没有给出路径，则返回null。\r\n            如果该项目尚未从磁盘上加载，但已获得一条路径，则该路径可能不存在。\r\n            设置者将项目重命名，如果已经有名。\r\n            \r\n","\r\n            Write the environment of the build as was captured on the build started event.\r\n            ":"\r\n            在构建开始活动中捕获的构建环境编写构建环境。\r\n            \r\n","\r\n            Retrieves the list of metadata names.\r\n            ":"\r\n            检索元数据名称列表。\r\n            \r\n","\r\n             Returns an existing ProjectRootElement for the specified file path, if any.\r\n             If none exists, calls the provided delegate to load one, and adds that to the cache.\r\n             The reason that it calls back to do this is so that the cache is locked between determining\r\n             that the entry does not exist and adding the entry.\r\n            \r\n             If ":"\r\n             返回指定文件路径的现有projectRootelement（如果有）。\r\n             如果不存在，请调用提供的委托加载一个，并将其添加到缓存中。\r\n             它回电这样做的原因是使缓存在确定之间锁定\r\n             该条目不存在并添加条目。\r\n            \r\n             如果\r\n","\r\n            Set of active nodes in the system.\r\n            ":"\r\n            系统中的一组活动节点。\r\n            \r\n","\r\n            Convenience method that picks a location based on a heuristic:\r\n            Adds a new item ordered by include.\r\n            ":"\r\n            便利方法根据启发式选择位置：\r\n            添加了由Inclupher订购的新项目。\r\n            \r\n","\r\n            Returns true if given cache entry exists and is outdated.\r\n            ":"\r\n            如果存在缓存输入并已过时，则返回为true。\r\n            \r\n","\r\n             \r\n             When this property is set to true, the previous item operations throw an ":"当此属性设置为true时，先前的项目操作抛出\r\n","\r\n            Root of the preprocessing.\r\n            ":"\r\n            预处理的根。\r\n            \r\n","\r\n            Handler for TargetFinished events.\r\n            ":"\r\n            针对目标事件的处理程序。\r\n            \r\n","\r\n            Expands embedded item metadata, properties, and embedded item lists (in that order) as specified in the provided options\r\n            and produces a list of TaskItems.\r\n            If the expression is empty, returns an empty list.\r\n            If ExpanderOptions.BreakOnNotEmpty was passed, expression was going to be non-empty, and it broke out early, returns null. Otherwise the result can be trusted.\r\n            ":"\r\n            按照提供的选项中指定\r\n            并产生任务列表。\r\n            如果表达式为空，请返回一个空列表。\r\n            如果通过ExpanderOptions.breakonnotempty通过，表达将是非空的，并且早点爆发，则返回NULL。否则可以信任结果。\r\n            \r\n","\r\n            Returns a string indicating why a full build is occurring.\r\n            ":"\r\n            返回一个字符串，指示为什么发生完整的构建。\r\n            \r\n","\r\n            Look up the path to the build tools directory in the registry for the requested ToolsVersion and requested architecture\r\n            ":"\r\n            查找注册表中“构建工具”目录的路径\r\n            \r\n","The end of a range of invalid columns in the project (set to zero if not available).":"项目中一系列无效列的末端（如果不可用的话，则设置为零）。\r\n"," may be called in this state.\r\n            ":" 可以在此状态下称呼。\r\n            \r\n","Message arguments.":"消息参数。\r\n","\r\n            Returns the list of targets that are AfterTargets (or AfterTargets of the AfterTargets) \r\n            of the entrypoint targets.  \r\n            ":"\r\n            返回屈从目标的目标列表（或后刻录的余额）\r\n            入口点目标。\r\n            \r\n","\r\n            This event is NOT raised for changes to global properties, or any other change that doesn't actually dirty the XML.\r\n            ":"\r\n            对于全局属性的更改或实际上并不脏XML的任何其他更改，并未提出此事件。\r\n            \r\n","\r\n            Clear our the appdomain wide caches\r\n            ":"\r\n            清除我们的AppDomain宽缓存\r\n            \r\n","\r\n            Gets the configuration's full path.\r\n            ":"\r\n            获取配置的完整路径。\r\n            \r\n","\r\n                Represents a graph of evaluated projects.\r\n            ":"\r\n                代表评估项目的图。\r\n            \r\n","Array of file paths, escaped.":"文件路径阵列，逃脱。\r\n"," which resolves SDKs.  This class is the central location for all SDK resolution and is used\r\n            directly by the main node and non-build evaluations and is used indirectly by the out-of-proc node when it sends requests to the main node.\r\n            ":" 解决了SDK。此类是所有SDK分辨率的中心位置，用于使用\r\n            直接通过主节点和非构建评估，并在将请求发送到主节点时间接使用。\r\n            \r\n","\r\n            Starts a new asynchronous read operation for this node.\r\n            ":"\r\n            为此节点启动新的异步读取操作。\r\n            \r\n","Performs a mod operation using the multiplier pre-computed with ":"使用预先计算的乘数执行mod操作\r\n","\r\n            Intrinsic function that returns the subset of items that actually exist on disk.\r\n            ":"\r\n            返回磁盘上实际存在的项目子集的固有函数。\r\n            \r\n","\r\n            Factory method for releasing.\r\n            ":"\r\n            释放的工厂方法。\r\n            \r\n","\r\n            The tools version we should use during the build, used to determine which toolset we should access.\r\n            ":"\r\n            我们在构建过程中应使用的工具版本，用于确定我们应该访问的工具集。\r\n            \r\n","The type of metadata on those items.":"这些项目上的元数据类型。\r\n","\r\n            Sets or sets the location from which this target was referred.\r\n            ":"\r\n            设置或设置该目标的位置。\r\n            \r\n","\r\n                Defines methods to support the comparison of objects for\r\n                equality over constrained inputs.\r\n            ":"\r\n                定义支持对象比较的方法\r\n                超过约束输入的平等。\r\n            \r\n","\r\n            Throw an invalid project exception indicating that the child is not valid beneath the element because it is a duplicate\r\n            ":"投掷无效的项目例外，表明孩子在元素下没有有效，因为它是重复的\r\n            \r\n","\r\n            The Target Builder is a stack machine which builds project targets.  Each time a target needs to be built, it is\r\n            pushed onto the stack.  The main loop for the Target Builder simply evaluates the top item on the stack to determine\r\n            which action to take.  These actions comprise the target state machine, as represented by the states of the\r\n            TargetEntry object.\r\n            \r\n            When a target completes, all of its outputs are available in the Lookup contained in the TargetEntry.  In fact, everything that it changed\r\n            in the global state is available by virtue of its Lookup being merged with the current Target's lookup.\r\n            \r\n            For CallTarget tasks, this behavior is not the same.  Rather the Lookup from a CallTarget call does not get merged until the calling \r\n            Target has completed.  This is considered erroneous behavior and 'normal' version of CallTarget will be implemented which does not exhibit\r\n            this.\r\n            ":"\r\n            目标构建器是构建项目目标的堆栈机。每次需要建立目标时，\r\n            推到烟囱上。目标构建器的主要循环简单地评估堆栈上的顶部项目以确定\r\n            要采取哪种行动。这些动作包括目标状态机，如\r\n            靶标对象。\r\n            \r\n            当目标完成后，其所有输出都可以在目标体中包含的查找中可用。实际上，它改变的一切\r\n            在全球状态下，可以通过将其查找与当前目标的查找合并。\r\n            \r\n            对于CallTarget任务，此行为不一样。相反，在调用电话之前，来自calltarget调用的查找不会合并\r\n            目标已经完成。这被认为是错误的行为，将实现“正常”版本的calltarget版本\r\n            这个。\r\n            \r\n","\r\n            Cached value for IsUnixLike (this method is called frequently during evaluation).\r\n            ":"\r\n            iSunixlike的缓存值（此方法在评估期间经常调用）。\r\n            \r\n","\r\n            Location of the Sdk attribute, if any\r\n            ":"\r\n            SDK属性的位置，如果有的话\r\n            \r\n","\r\n            Intrinsic function that returns all ancestor directories of the given items.\r\n            ":"\r\n            返回给定项目的所有祖先目录的内在功能。\r\n            \r\n","The default global properties to use. May be null.":"要使用的默认全局属性。可能是无效的。\r\n","\r\n            Event handler for the BuildEngine's OnResourceRequest event.\r\n            ":"\r\n            BuildEngine的OnResourcerequest活动的活动处理程序。\r\n            \r\n","\r\n            Whether the property is a global property\r\n            ":"\r\n            该物业是否是全球财产\r\n            \r\n","\r\n            Helper method to update the ":"\r\n            助手方法更新\r\n","\r\n            Given a TaskHostContext, return the appropriate location of the \r\n            executable (MSBuild or MSBuildTaskHost) that we wish to use, or null\r\n            if that location cannot be resolved.  \r\n            ":"\r\n            给定一个任务主持context，返回适当的位置\r\n            我们希望使用的可执行文件（msbuild或msbuildtaskhost）或null\r\n            如果该位置无法解决。\r\n            \r\n","\r\n            Enumerator over properties in this project\r\n            ":"\r\n            枚举该项目的属性\r\n            \r\n","\r\n            This interface defines a \"logger\" in the build system. A logger subscribes to build system events. All logger classes must\r\n            implement this interface to be recognized by the build engine.\r\n            ":"\r\n            该界面在构建系统中定义了一个“记录器”。记录器订阅以构建系统事件。所有记录器类都必须\r\n            实现此界面以由构建引擎识别。\r\n            \r\n","\r\n            The original target child instance\r\n            ":"\r\n            最初的目标儿童实例\r\n            \r\n","\r\n            Semicolon separated list of targets it runs after\r\n            ":"\r\n            半分离的目标列表之后运行的目标列表\r\n            \r\n","Switch name for error message":"切换错误消息的名称\r\n","\r\n            Items encountered during evaluation. These are read during the third evaluation pass.\r\n            Unlike those returned by the Items property, these are ordered with respect to all other items\r\n            encountered during evaluation, not just ordered with respect to items of the same item type.\r\n            In some applications, like the F# language, this complete mutual ordering is significant, and such hosts\r\n            can use this property.\r\n            It does not include any elements whose conditions did not evaluate to true.\r\n            It does not include any items added since the last evaluation.\r\n            ":"\r\n            评估期间遇到的项目。这些是在第三次评估通行证中读取的。\r\n            与项目属性返回的那些不同，这些都是针对所有其他项目的订购\r\n            在评估期间遇到的不仅是相同项目类型的项目的订购。\r\n            在某些应用程序中，例如f＃语言，这种完全的相互订购很重要，此类主机\r\n            可以使用此属性。\r\n            它不包括任何条件未评估为真的要素。\r\n            它不包括自上次评估以来添加的任何项目。\r\n            \r\n","\r\n            The build request id assigned by the node originating this request.\r\n            ":"\r\n            由节点分配的构建请求ID始于此请求。\r\n            \r\n","\r\n            Verify that the element has the specified required attribute on it and\r\n            it has a value other than empty string\r\n            ":"\r\n            验证该元素是否具有指定的所需属性，并且\r\n            除空字符串以外的值\r\n            \r\n","\r\n            Lock object to serialize access to the task host. \r\n            ":"\r\n            锁定对象以序列化对任务主机的访问。\r\n            \r\n","The global properties.":"全局属性。\r\n","\r\n            Cached values of tools version -> project import search paths table\r\n            ":"\r\n            工具版本的缓存值 - >项目导入搜索路径表\r\n            \r\n","\r\n            Returns an unused request builder if there are any, or creates a new one.\r\n            ":"\r\n            如果有的话，将返回未使用的请求构建器，或者创建新的请求构建器。\r\n            \r\n","The host used to execute the task.":"主机用于执行任务。\r\n","\r\n            description of an item vector with a transform, left hand side \r\n            ":"\r\n            具有转换的项目向量的描述\r\n            \r\n"," targets being pushed onto the stack.":" 目标被推到堆栈上。\r\n","ArgumentException is returned if the specified target already has results.":"如果指定的目标已经具有结果，则返回参数检查。\r\n","The type contained in the collection.":"集合中包含的类型。\r\n","\r\n            The factory\r\n            ":"\r\n            工厂\r\n            \r\n","\r\n            The class factory for deserialization.\r\n            ":"\r\n            班级工厂进行审理。\r\n            \r\n","The verbosity level.":"冗长的水平。\r\n","\r\n            Obtain the number of entries contained in the cache.\r\n            ":"\r\n            获取缓存中包含的条目数。\r\n            \r\n","\r\n            This property is set by the build engine to allow a task to call back into it.\r\n            ":"\r\n            该属性由构建引擎设置，以允许任务回电。\r\n            \r\n","\r\n            Get the value of a property in this project, or \r\n            an empty string if it does not exist.\r\n            Returns the unescaped value.\r\n            ":"\r\n            获取该项目中财产的价值，或\r\n            如果不存在一个空字符串。\r\n            返回Unescaper值。\r\n            \r\n","\r\n            Items to draw on for expansion.\r\n            ":"\r\n            要用于扩展的项目。\r\n            \r\n","Exception which is causing the error":"引起错误的例外\r\n"," object has ":" 对象有\r\n","\r\n            This constructor allows event data to be initialized.\r\n            ":"\r\n            该构造函数允许初始化事件数据。\r\n            \r\n","\r\n            Execute the list of transform functions\r\n            ":"\r\n            执行转换功能的列表\r\n            \r\n","\r\n            Creates an expander passing it some properties and items to use.\r\n            Either or both may be null.\r\n            ":"\r\n            创建一个传播者，传递一些属性和物品要使用。\r\n            两者都可能为null。\r\n            \r\n","\r\n            Arguments for target started events\r\n            ":"\r\n            目标开始事件的论点\r\n            \r\n","\r\n            Shuts down the build component.\r\n            ":"\r\n            关闭构建组件。\r\n            \r\n","\r\n            The settings used to load the project under build\r\n            ":"\r\n            用于在构建下加载项目的设置\r\n            \r\n","\r\n            This (family) constructor allows derived task classes to register their resources.\r\n            ":"\r\n            该（家庭）构造函数允许派生的任务类注册其资源。\r\n            \r\n","Index must be within the bounds of the List.":"索引必须在列表的范围内。\r\n","\r\n            Parse a ProjectWhenElement\r\n            ":"\r\n            解析项目\r\n            \r\n","\r\n            The engine is presently working on a build request.\r\n            ":"\r\n            该引擎目前正在处理构建请求。\r\n            \r\n","\r\n            Writes out the list of property names and their values.\r\n            This could be done at any time during the build to show the latest\r\n            property values, using the cached reference to the list from the \r\n            appropriate ProjectStarted event.\r\n            ":"\r\n            写出属性名称及其价值的列表。\r\n            这可以在构建过程中的任何时候完成，以显示最新的\r\n            属性值，使用从列表中的缓存引用\r\n            适当的项目开始。\r\n            \r\n","\r\n            Create a new unsubmitted request entry\r\n            ":"\r\n            创建一个新的未删除请求条目\r\n            \r\n"," is updated\r\n            on changes.\r\n            ":" 已更新\r\n            关于更改。\r\n            \r\n","\r\n            Returns the paths to the reference assemblies location for the given framework version relative to a given targetFrameworkRoot.\r\n            The method will not check to see if the path exists or not.\r\n            ":"\r\n            将路径返回给定框架版本相对于给定的TargetFrameWorkroot的参考组件位置。\r\n            该方法不会检查路径是否存在。\r\n            \r\n","Binary reader which is attached to the stream the event will be deserialized from":"附加到流的二进制读取器将从\r\n","\r\n            Prepares the build request engine to run a build.\r\n            ":"\r\n            准备构建请求引擎以运行构建。\r\n            \r\n"," // Occurrences: 1; Operation: Exclude; Provenance: StringLiteral\r\n             ":" //出现：1;操作：排除；出处：字符串\r\n             \r\n","\r\n            Evaluated value of the property.\r\n            Setter assumes caller has protected global properties, if necessary\r\n            SETTER ASSUMES CALLER ONLY CALLS IF PROJECTINSTANCE IS MUTABLE because it cannot always be verified.\r\n            ":"\r\n            评估物业的价值。\r\n            Setter假设呼叫者在必要时保护全局属性\r\n            Setter假设仅在ProjectInstance可变的情况下使用呼叫者，因为它不能始终进行验证。\r\n            \r\n","\r\n            Maybe used to specify a help URL. This field\r\n            is optional and is culture sensitive.\r\n            ":"\r\n            也许用来指定帮助URL。这个领域\r\n            是可选的，对培养很敏感。\r\n            \r\n","\r\n            All the items in the project of the specified\r\n            type, irrespective of whether the conditions on them evaluated to true.\r\n            This is a read-only list: use AddItem or RemoveItem to modify items in this project.\r\n            ":"\r\n            指定项目中的所有项目\r\n            类型，不论其是否对其进行评估为真。\r\n            这是一个只读列表：使用addItem或RemoveItem在此项目中修改项目。\r\n            \r\n","The set of items which are in the outputs.":"输出中的项目集。\r\n","\r\n            Value used to ensure multiple in-proc nodes which save the operating environment are not created.\r\n            ":"\r\n            用于确保未创建保存操作环境的多个程序内节点的值。\r\n            \r\n","\r\n            Create an IForwardingLogger out of the data in this description. This method may throw a variety of\r\n            reflection exceptions if the data is invalid. It is the resposibility of the caller to handle these\r\n            exceptions if desired.\r\n            ":"\r\n            在此说明中的数据中创建一个iForwardingLogger。这种方法可能会抛出各种各样的\r\n            反射异常如果数据无效。处理这些是呼叫者的呼吸性\r\n            如果需要，例外。\r\n            \r\n","\r\n            Returns the default comparer instance.\r\n            ":"\r\n            返回默认比较实例。\r\n            \r\n","\r\n            The AppDomainSetup we'll want to apply to the AppDomain that we may \r\n            want to load the OOP task into. \r\n            ":"\r\n            AppDomainSetup我们将要应用于我们可能可能的AppDomain\r\n            想要将OOP任务加载到。\r\n            \r\n","\r\n            Returns the set of unescaped targets to be built\r\n            ":"\r\n            返回要构建的无规范目标\r\n            \r\n"," is being shut down.\r\n            ":" 正在关闭。\r\n            \r\n","The output files produced by compiling this set of sources":"通过编译这组来源产生的输出文件\r\n","\r\n            List of items that link the XML items and evaluated items.\r\n            This is an ordered collection\r\n            ":"\r\n            链接XML项目和评估项目的项目列表。\r\n            这是一个有序的收藏\r\n            \r\n","\r\n            Gets the element doing the import.\r\n            Null if this is the top project\r\n            ":"\r\n            获取元素进行导入。\r\n            null如果这是顶级项目\r\n            \r\n","\r\n            Verifies that each string entry has only one instance in the system.\r\n            Enable the conditional if and while you make any modifications to the class, then disable as it is very slow.\r\n            ":"\r\n            验证每个字符串条目在系统中只有一个实例。\r\n            启用有条件的何时和对课程进行任何修改时，请禁用，因为它非常慢。\r\n            \r\n"," if this concatenator is already disposed.\r\n            ":" 如果该串联已经处置了。\r\n            \r\n","\r\n            Check the amount of memory we are using and, if we exceed the threshold, unload cacheable items.\r\n            ":"\r\n            检查我们正在使用的内存量，如果超过阈值，请卸载可缓存的项目。\r\n            \r\n","Used to specify what to expand.":"用于指定要展开的内容。\r\n","\r\n            Contains the shared pieces of code from NodeProviderOutOfProc\r\n            and NodeProviderOutOfProcTaskHost.\r\n            ":"\r\n            包含来自NodeProviderOutofProc的共享代码\r\n            和nodeproviderOutofproctaskHost。\r\n            \r\n","\r\n            List of ProjectTargetElement's traversing into imports. \r\n            Gathered during the first pass to avoid traversing again.\r\n            ":"\r\n            ProjectTargetElement的列表正在进口。\r\n            在第一次通行证中聚集，以避免再次穿越。\r\n            \r\n","\r\n            In special cases, we ignore an EnterState, and increment this counter\r\n            so that we can ignore the matching LeaveState.\r\n            ":"\r\n            在特殊情况下，我们忽略了一个遗产，并增加了此计数器\r\n            这样我们就可以忽略匹配的莱斯特酸盐。\r\n            \r\n","\r\n            Returns a property with the specified name, or null if it was not found.\r\n            ":"\r\n            返回带有指定名称的属性，如果找不到该属性，则返回null。\r\n            \r\n","\r\n            Sets a property which does not come from the Xml.\r\n            This is where global, environment, and toolset properties are added to the project instance by the evaluator, and we mark them\r\n            immutable if we are immutable.\r\n            Only called during evaluation, so does not check for immutability.\r\n            ":"\r\n            设置不来自XML的属性。\r\n            这是评估者将全局，环境和工具集属性添加到项目实例的地方，我们将其标记\r\n            如果我们不变，则不可变。\r\n            仅在评估过程中调用，因此不检查不变性。\r\n            \r\n","True if the task is instantiated, false otherwise.":"如果任务是实例化的，则为true，否则为错误。\r\n","\r\n            Removes associations with all blocking requests and throws an exception.\r\n            ":"\r\n            删除与所有阻止请求的关联，并引发异常。\r\n            \r\n","\r\n            Get the Encoding type from the XML declaration tag\r\n            ":"\r\n            从XML声明标签获取编码类型\r\n            \r\n","\r\n            An explicit version of this class. Must be incremented whenever new members are added. Derived classes should override\r\n            the property to return the version actually being implemented.\r\n            ":"\r\n            此类的明确版本。每当添加新成员时，都必须增加。派生的类应覆盖\r\n            返回实际实现的版本的属性。\r\n            \r\n","\r\n            Given a baseKey and subKey, get the default value of the subKey.\r\n            ":"\r\n            给定basekey和subkey，获取子键的默认值。\r\n            \r\n","\r\n            Creates an item factory which does not specify an item xml.  The item xml must\r\n            be specified later.\r\n            ":"\r\n            创建一个未指定项目XML的项目工厂。 XML项目必须\r\n            以后指定。\r\n            \r\n","An enumeration of strings.":"列出字符串。\r\n","\r\n            Child properties.\r\n            Not ProjectPropertyInstances, as these are evaluated during the build.\r\n            ":"\r\n            儿童财产。\r\n            不是ProjectPropertyInstances，因为它们在构建过程中进行了评估。\r\n            \r\n",".\r\n            (note can not Use Xml.Name since for global properties Xml is null;\r\n            ":"。\r\n            （注意无法使用XML.NAME，因为对于全局属性XML为null；\r\n            \r\n","If the task factory could not be properly created an InvalidProjectFileException will be thrown":"如果无法正确创建任务工厂，将抛出无效的fileException\r\n"," \r\n            from its value ":" \r\n            从其价值\r\n","\r\n            Called during load, to add an element.\r\n            ":"\r\n            在加载过程中调用，以添加一个元素。\r\n            \r\n","\r\n            Handler for Any events.\r\n            ":"\r\n            任何事件的处理程序。\r\n            \r\n","\r\n            The target was skipped because its condition was not met.\r\n            ":"\r\n            由于无法满足其状况，因此跳过了目标。\r\n            \r\n","\r\n            Adds several value to the dictionary.\r\n            ":"\r\n            为字典增加了几个值。\r\n            \r\n","\r\n            Descriptive message about what is happening - usually the command line to be executed.\r\n            ":"\r\n            关于正在发生的事情的描述性消息 - 通常是要执行的命令行。\r\n            \r\n","\r\n            Creates an instance of the UninitializedPropertyReadEventArgs class\r\n            ":"\r\n            创建一个非初始化的propertyreadeventargs类的实例\r\n            \r\n","\r\n            An alternative name for the file.\r\n            ":"\r\n            该文件的替代名称。\r\n            \r\n","\r\n            Logging service that should be used for project load and for builds\r\n            ":"\r\n            应用于项目负载和构建的日志记录服务\r\n            \r\n","left version":"左版本\r\n","\r\n            Posts a Leave instruction to the island thread.\r\n            Called by debugger manager thread\r\n            If location is provided, verifies that the state being left is the state that was entered.\r\n            Stack may already be empty, in which case it is not modified.\r\n            ":"\r\n            向岛屿线张贴请假指示。\r\n            由Debugger Manager线程调用\r\n            如果提供了位置，则验证剩下的状态是所输入的状态。\r\n            堆栈可能已经是空的，在这种情况下，它不会被修改。\r\n            \r\n","\r\n            Determines how many references a config with a particular path has.\r\n            ":"\r\n            确定具有特定路径的配置的参考文献。\r\n            \r\n","\r\n            The owning project\r\n            ":"\r\n            拥有项目\r\n            \r\n","\r\n            Data containing the ProjectRootElement to evaluate and the slots for\r\n            items, properties, etc originating from the evaluation.\r\n            ":"\r\n            包含用于评估项目的项目和插槽的数据\r\n            源自评估的项目，属性等。\r\n            \r\n","\r\n            The BuildRequestEntry to which this target invocation belongs\r\n            ":"\r\n            该目标调用所属的BuildRequestry\r\n            \r\n","The configuration metadata to match.":"配置元数据要匹配。\r\n","How important is the message, this will determine which verbosities the message will show up on.\r\n            The higher the importance the lower the verbosity needs to be for the message to be seen":"消息有多重要，这将确定消息将显示的哪些动词。\r\n            重要性越高，详细信息才能看到消息的重要性越低\r\n","\r\n            Type of handler for TelemetryLogged events\r\n            ":"\r\n            遥测事件的处理程序类型\r\n            \r\n","\r\n            Returns true if a item function subexpression begins at the specified index\r\n            and ends before the specified end index.\r\n            Leaves index one past the end of the closing paren.\r\n            ":"\r\n            如果项目函数子表达在指定的索引开始，则返回true\r\n            并在指定的端索引之前结束。\r\n            将索引叶索引在闭幕式的末端。\r\n            \r\n","\r\n            Retrieve the accumulated time.\r\n            ":"\r\n            检索累积的时间。\r\n            \r\n"," is null;\r\n            ":" 一片空白;\r\n            \r\n","\r\n            Tests to see if the expression may contain expandable expressions, i.e.\r\n            contains $, % or @\r\n            ":"\r\n            测试以查看该表达式是否包含可扩展的表达式，即\r\n            包含$，％或 @\r\n            \r\n","\r\n            Raised for ProjectFinishedEventArgs instances\r\n            ":"\r\n            为ProjectFinedEventargs实例筹集\r\n            \r\n","\r\n            This field is optional. \r\n            It returns null when this property is not set. The value of this\r\n            property must be greater than or equal to the ":"\r\n            该字段是可选的。\r\n            当未设置此属性时，它将返回null。这个价值\r\n            财产必须大于或等于\r\n","\r\n            Delegate used to determine whether a particular file should\r\n            be included in the compacted tlog.\r\n            ":"\r\n            用于确定特定文件是否应\r\n            被包含在压实的tlog中。\r\n            \r\n","\r\n            Record imports including duplicate, but not circular, imports on the ImportsIncludingDuplicates property\r\n            ":"\r\n            记录导入，包括重复但不循环的导入，包括进口属性属性\r\n            \r\n","Path string.":"路径字符串。\r\n","\r\n            Condition on the target. \r\n            Evaluated during the build.\r\n            ":"\r\n            目标的条件。\r\n            在构建过程中进行评估。\r\n            \r\n","\r\n            Verify the task host is active or not\r\n            ":"\r\n            验证任务主机是否有效\r\n            \r\n","\r\n            Unregisters a task object.\r\n            ":"\r\n            解开任务对象。\r\n            \r\n","\r\n            Tries to find a ProjectItemElement already in the project file XML that has a wildcard that would match the\r\n            item we wish to add, does not have a condition or an exclude, and is within an itemgroup without a condition.\r\n            \r\n            For perf reasons, this method does several jobs in one.\r\n            If it finds a suitable existing item element, it returns that as the out parameter, otherwise the out parameter returns null.\r\n            Otherwise, if it finds an item element suitable to be just below our new element, it returns that.\r\n            Otherwise, if it finds an item group at least that's suitable to put our element in somewhere, it returns that.\r\n            \r\n            Returns null if the include of the item being added itself has wildcards, or semicolons, as the case is too difficult.\r\n            ":"\r\n            试图在项目文件XML中找到一个具有与之匹配的通配符的项目文件XML\r\n            我们希望添加的项目，没有条件或排除，并且在没有条件的项目组中。\r\n            \r\n            出于完美的原因，该方法一项工作。\r\n            如果它找到合适的现有项目元素，则将其作为OUT参数返回，否则OUT参数返回null。\r\n            否则，如果它发现适合在我们的新元素以下的项目元素，则将其返回。\r\n            否则，如果它发现一个项目组至少适合将我们的元素放在某个地方，则将其返回。\r\n            \r\n            返回null，如果所添加的物品本身具有通配符或半隆，则返回null，因为情况太难了。\r\n            \r\n","\r\n            If requested, display a performance summary at the end of the build.  This\r\n            shows how much time (and # hits) were spent inside of each project, target,\r\n            and task.\r\n            ":"\r\n            如果要求，请在构建结束时显示性能摘要。这个\r\n            显示每个项目内花费了多少时间（和＃命中），Target，\r\n            和任务。\r\n            \r\n","\r\n            Posts an Enter instruction to the island thread.\r\n            Called by debugger manager thread\r\n            ":"\r\n            帖子输入岛屿线程。\r\n            由Debugger Manager线程调用\r\n            \r\n"," evaluate and collect elements whose conditions were false (e.g. ":" 评估和收集条件是错误的元素（例如\r\n","\r\n            Name of the factory. In this case the name is the assembly name which is wrapped by the factory\r\n            ":"\r\n            工厂的名称。在这种情况下，名称是工厂包裹的汇编名称\r\n            \r\n","\r\n            Set of environment variables for the configuration this result came from\r\n            ":"\r\n            配置的环境变量集此结果来自\r\n            \r\n","\r\n            Number of warnings encountered in this build\r\n            ":"\r\n            此构建中遇到的警告数量\r\n            \r\n","The path to the build tools folder for that ToolsVersion, if it exists, or\r\n            null otherwise":"该工具交换的构建工具文件夹的路径，如果存在或\r\n            否则为无效\r\n","\r\n            Create an instance of a LoggingService and returns is as an IBuildComponent\r\n            ":"\r\n            创建loggingservice和返回的实例是iBuildComponent\r\n            \r\n","\r\n                The wildcard directory part\r\n            ":"\r\n                通配符目录部分\r\n            \r\n","The property source":"属性源\r\n","\r\n            Retrieves all of the requests scheduled to the specified node.\r\n            ":"\r\n            检索计划到指定节点的所有请求。\r\n            \r\n","\r\n            Given a target platform identifier and version and locations in which to search, find the TargetPlatformSDK \r\n            object that matches.\r\n            ":"\r\n            给定一个目标平台标识符，版本和可以在其中搜索的位置，找到targetPlatformsdk\r\n            匹配的对象。\r\n            \r\n","Current platform":"当前平台\r\n","\r\n            Map of project import properties to their list of fall-back search paths\r\n            ":"\r\n            项目导入属性的地图到其秋季搜索路径列表\r\n            \r\n","\r\n            Returns the unescaped value of the metadata requested. \r\n            ":"\r\n            返回所请求的元数据的未阐明值。\r\n            \r\n","\r\n            Returns the fully qualified format for the given method: see typeFullName::methodName\r\n            ":"\r\n            返回给定方法的完全合格格式：请参阅Typefullname :: MethodName\r\n            \r\n",".\r\n            The message prefix (e.g. \"Can't access the log file\") is optional.\r\n            ":"。\r\n            消息前缀（例如“无法访问日志文件”）是可选的。\r\n            \r\n","\r\n            This class manages the set of schedulable requests.  In concert with SchedulableRequest, it tracks all relationships\r\n            between requests in the system, verifies state change validity and provides efficient methods for querying request relationships.\r\n            ":"\r\n            此课程管理一组可计划请求。与SchedulableRequest结合，它跟踪所有关系\r\n            在系统中的请求之间，验证状态变化有效性，并提供有效的方法来查询请求关系。\r\n            \r\n","Type of the properties used to expand the expression.":"用于展开表达式的属性的类型。\r\n","length of the match, -1 if no match.":"比赛的长度，-1如果没有匹配。\r\n","\r\n            This controls whether or not the building of targets/tasks is enabled for this\r\n            project.  This is for security purposes in case a host wants to closely\r\n            control which projects it allows to run targets/tasks.  By default, for a newly\r\n            created project, we will use whatever setting is in the parent project collection.\r\n            When build is disabled, the Build method on this class will fail. However if\r\n            the host has already created a ProjectInstance, it can still build it. (It is \r\n            free to put a similar check around where it does this.)\r\n            ":"\r\n            这控制了是否启用了目标/任务的构建\r\n            项目。这是出于安全目的，以防主机要密切\r\n            控制哪些项目允许运行目标/任务。默认情况下，对于新的\r\n            创建的项目，我们将使用父项目集合中的任何设置。\r\n            当禁用构建时，此类的构建方法将失败。但是，如果\r\n            主机已经创建了一个ProjectInstance，它仍然可以构建它。 （这是\r\n            免费在何处进行类似的检查。）\r\n            \r\n","\r\n            Whether the instance is immutable.\r\n            The object is always mutable during evaluation.\r\n            ":"\r\n            实例是否不变。\r\n            在评估过程中，该对象总是可变的。\r\n            \r\n","Project file which contains the task":"包含任务的项目文件\r\n","The node reporting the request.":"报告请求的节点。\r\n","\r\n            Indicates whether the file-spec begins with a UNC pattern and how long the match is.\r\n            ":"\r\n            指示文件规格是否以UNC模式和匹配时间开头。\r\n            \r\n","\r\n            Indicates if enumeration succeeded.\r\n            ":"\r\n            指示枚举是否成功。\r\n            \r\n","\r\n            Base class for all nodes that are operands (are leaves in the parse tree)\r\n            ":"\r\n            所有是操作数的节点的基类（是在解析树中的叶子）\r\n            \r\n","\r\n            The arguments for the function\r\n            ":"\r\n            功能的论点\r\n            \r\n","\r\n            The result code for the target run.\r\n            ":"\r\n            目标运行的结果代码。\r\n            \r\n","Desired architecture of the resultant file.":"所需文件的所需架构。\r\n","\r\n            Execute the function on the given instance\r\n            ":"\r\n            在给定实例上执行功能\r\n            \r\n","The MSBuild property name to use; or ":"使用的MSBUILD属性名称；或者\r\n","\r\n            Create an Expression Capture instance\r\n            Represents a sub expression, shredded from a larger expression\r\n            ":"\r\n            创建表达捕获实例\r\n            表示从较大表达式切碎的子表达\r\n            \r\n","\r\n            Whether the project file that this target lives in has at least one target\r\n            with a Returns attribute on it.  If so, the default behaviour for all targets\r\n            in the file without Returns attributes changes from returning the Outputs, to \r\n            returning nothing. \r\n            ":"\r\n            该目标持有的项目文件是否至少具有一个目标\r\n            带有返回属性。如果是这样，所有目标的默认行为\r\n            在没有返回属性的文件中，从返回输出的变化，\r\n            什么都没有。\r\n            \r\n"," to indicate that this PRE\r\n            should not be removed from the cache until it is explicitly unloaded by some MSBuild client.\r\n            ":" 表明这是\r\n            在某些MSBUILD客户端将其明确卸载之前，不应将其从缓存中删除。\r\n            \r\n","\r\n            Sets the given property on the task.\r\n            ":"在任务上设置给定属性。\r\n            \r\n"," appears in this fragment":" 出现在这个片段中\r\n","\r\n            Get a read-only collection of the child chooses, if any\r\n            ":"\r\n            获得只读的孩子选择的收藏，如果有的话\r\n            \r\n","\r\n            Location of the original element\r\n            ":"\r\n            原始元素的位置\r\n            \r\n","\r\n            The directory that the project is in. \r\n            Essential for evaluating relative paths.\r\n            If the project is not loaded from disk, returns the current-directory from \r\n            the time the project was loaded - this is the same behavior as Whidbey/Orcas.\r\n            ":"\r\n            项目所在的目录。\r\n            评估相对路径必不可少的。\r\n            如果该项目未从磁盘加载，请从\r\n            加载项目的时间 - 这与Whidbey/orcas相同。\r\n            \r\n","\r\n            Returns an enumerator that provides copies of the items\r\n            in the backing store.\r\n            Each dictionary entry has key of the item type and value of an ITaskItem.\r\n            Type of the enumerator is imposed by backwards compatibility for ProjectStartedEvent.\r\n            ":"\r\n            返回提供项目副本的枚举者\r\n            在后备店。\r\n            每个字典条目都有ITASCITEM的项目类型和值的密钥。\r\n            枚举的类型是通过ProjectStartedEvent的向后兼容性强加的。\r\n            \r\n","\r\n            Represents the parent of a ProjectMetadata object -\r\n            either a ProjectItem or a ProjectItemDefinition.\r\n            ":"\r\n            代表ProjectMetadata对象的父\r\n            projectItem或ProjectItemDefinition。\r\n            \r\n","\r\n            Gets the XmlElement associated with this project element.\r\n            The setter is used when adding new elements.\r\n            Never null except during load or creation.\r\n            ":"\r\n            获取与此项目元素关联的XMlelement。\r\n            添加新元素时使用二传器。\r\n            除了加载或创建期间，切勿无效。\r\n            \r\n","\r\n            The logging exception event handler\r\n            ":"\r\n            记录异常事件处理程序\r\n            \r\n","\r\n            List of items that link the XML items and evaluated items,\r\n            evaluated as if their conditions were true.\r\n            This is useful for hosts that wish to display all items regardless of their condition.\r\n            This is an ordered collection.\r\n            ":"\r\n            链接XML项目和评估项目的项目列表，\r\n            评估他们的条件是正确的。\r\n            这对于希望显示所有项目的主机都很有用，无论其状况如何。\r\n            这是一个有序的集合。\r\n            \r\n","\r\n            The mapping of build request configuration ids to project file names.\r\n            ":"\r\n            构建请求配置ID的映射到项目文件名。\r\n            \r\n","\r\n            Represents an SDK resolver request which is serialized and sent between nodes.  This is mostly a wrapper around ":"\r\n            代表SDK解析器请求，该请求已序列化并在节点之间发送。这主要是周围的包装纸\r\n","\r\n            Perform a bitwise AND on the first and second (first & second)\r\n            ":"\r\n            执行按位和第一和第二（第一和第二）\r\n            \r\n","Results so far from the target builder that's blocking":"距离目标构建器的结果很远\r\n","\r\n            Helper class for reading toolsets out of the configuration file.\r\n            ":"\r\n            用于读取工具集的助手类。\r\n            \r\n","\r\n            Retrieves the named metadata from the item definition, if any.\r\n            If it is not present, returns null.\r\n            ":"\r\n            从项目定义（如果有）中检索命名的元数据。\r\n            如果不存在，请返回null。\r\n            \r\n","\r\n            Construct an empty project, evaluating with the specified project collection and\r\n            the specified global properties and default tools version, either of which may be null.\r\n            Project will be added to the specified project collection when it is named.\r\n            ":"\r\n            构建一个空项目，用指定的项目集合评估\r\n            指定的全局属性和默认工具版本，两种版本都可能为null。\r\n            命名时，项目将被添加到指定的项目集合中。\r\n            \r\n"," == false. ":" == false。\r\n","\r\n            Holds the stdout output from the tool.\r\n            ":"\r\n            保留工具的Stdout输出。\r\n            \r\n","\r\n            Create a whitespace node. The definition of \"significant\" whitespace is obscure\r\n            and does not include whitespace in text values in element content, which we always want to keep.\r\n            Overridden to cache attribute values.\r\n            ":"\r\n            创建一个空格节点。 “重要”空间的定义晦涩难懂\r\n            并且在元素内容中不包含文本值中的空格，我们一直想保留。\r\n            覆盖为缓存属性值。\r\n            \r\n","\r\n            Looks up the file version and caches the hashcode\r\n            This file version hashcode is used in calculating the handshake\r\n            ":"\r\n            查找文件版本并缓存哈希码\r\n            此文件版本hashcode用于计算握手\r\n            \r\n","\r\n            The next node id to assign to a node.\r\n            ":"\r\n            为节点分配的下一个节点ID。\r\n            \r\n","\r\n            The prefix for the switch representation of this property for the case when this property represents a tool parameter.\r\n            ":"\r\n            此属性代表工具参数时，此属性的开关表示的前缀。\r\n            \r\n","\r\n            The externally specified tools version to evaluate with, if any.\r\n            For example, the tools version from a /tv switch.\r\n            This is not the tools version specified on the Project tag, if any.\r\n            May be null.\r\n            ":"\r\n            外部指定的工具版本可以评估（如果有）。\r\n            例如，来自A /TV Switch的工具版本。\r\n            这不是项目标签上指定的工具版本（如果有）。\r\n            可能是无效的。\r\n            \r\n","\r\n            Check if an msbuild object is local (aka not from External Project)\r\n            ":"\r\n            检查MSBUILD对象是否是本地的（也不来自外部项目的对象）\r\n            \r\n","\r\n            Creates a new MSBuild process\r\n            ":"创建一个新的MSBUILD过程\r\n            \r\n","true if the UNC pattern is a minimum length of 5 and the first two characters are be a slash, false otherwise.":"是的，如果UNC模式的最小长度为5，则前两个字符是斜线，否则为false。\r\n","\r\n            Class representing a reference to a project import path with property fall-back\r\n            ":"\r\n            代表对项目导入路径的引用的类\r\n            \r\n","\r\n            Writes a line from a resource string to the log, using the default indentation.\r\n            ":"\r\n            使用默认的凹痕将从资源字符串到日志的行写入线。\r\n            \r\n","\r\n            Indicates whether the specified string starts with the drive pattern (for example \"C:/\" or \"C:\\\").\r\n            ":"\r\n            指示指定的字符串是否从驱动器模式开始（例如“ C：/”或“ C：\\”）。\r\n            \r\n","Details on the PRE and the nature of the change.":"有关变更的性质和性质的详细信息。\r\n","\r\n            This represents an entry for a solution configuration\r\n            ":"\r\n            这代表解决方案配置的条目\r\n            \r\n","\r\n            ID used to indicate that the results for a particular configuration may at one point \r\n            have resided on this node, but currently do not and will need to be transferred back \r\n            in order to be used.  \r\n            ":"\r\n            用来指示特定配置的结果可能在某一时刻\r\n            已经居住在此节点上，但目前不在，需要转回\r\n            为了使用。\r\n            \r\n","\r\n            Retrieves the parameters dictionary as used during the build.\r\n            ":"\r\n            检索构建过程中使用的参数字典。\r\n            \r\n","\r\n            The result of the tasks, based on the last task which ran.\r\n            ":"\r\n            任务的结果，基于运行的最后一个任务。\r\n            \r\n","\r\n            Applies the supplied metadata to the destination items.\r\n            ":"\r\n            将提供的元数据应用于目的地项目。\r\n            \r\n","Name of metadata to set or change.":"设置或更改的元数据名称。\r\n","\r\n            Name of the local variable.\r\n            ":"\r\n            本地变量的名称。\r\n            \r\n","\r\n             var uberGlob = new CompositeGlob(project.GetAllGlobs().Select(r => r.MSBuildGlob).ToArray());\r\n             uberGlob.IsMatch(\"foo.cs\");\r\n             ":"\r\n             var uberglob = new compositeGlob（project.getAllglobs（）。选择（r => r.msbuildglob）.toArray（））;\r\n             uberglob.ismatch（“ foo.cs”）;\r\n             \r\n","The project file to load":"加载的项目文件\r\n","\r\n            Gets or sets the task's culture-specific resources. Derived classes should register their resources either during\r\n            construction, or via this property, if they have localized strings.\r\n            ":"\r\n            获取或设置任务的区域性特定资源。 派生类应该在\r\n            构造，或通过此属性，如果他们有本地化的字符串。\r\n            \r\n","\r\n            Current element\r\n            Returns null if MoveNext() hasn't been called\r\n            ":"\r\n            当前元素\r\n            返回null如果尚未调用movenext（）\r\n            \r\n","\r\n            Location of this element\r\n            ":"\r\n            此元素的位置\r\n            \r\n","\r\n            Assigns requests to nodes based on those which refer to the most other projects.\r\n            ":"\r\n            基于参考其他最多项目的节点，将请求分配给节点。\r\n            \r\n","\r\n            Type of handler for ProjectFinished events\r\n            ":"\r\n            项目指定活动的处理程序类型\r\n            \r\n","\r\n            Provides deduping of expensive work by a key, or modeling of a set of deduped work that\r\n            can be awaited as a unit. Completed results are kept in the collection for reuse.\r\n            ":"\r\n            通过钥匙或建模一组付出的作品来提供昂贵的工作\r\n            可以作为一个单位等待。完成的结果保存在集合中以进行重复使用。\r\n            \r\n","The expression containing item metadata references.":"包含项元数据引用的表达式。\r\n","\r\n            This class wraps information about properties which have been used before they are initialized \r\n            ":"\r\n            此类包装有关在初始化之前已使用的属性的信息\r\n            \r\n","\r\n            Location of the returns\r\n            ":"\r\n            收益的位置\r\n            \r\n","\r\n            The target has finished building.  All of the results are in the Lookup.\r\n            \r\n            Transitions:\r\n            None\r\n            ":"\r\n            目标已完成。所有结果都在查找中。\r\n            \r\n            过渡：\r\n            没有任何\r\n            \r\n","\r\n            An ID uniquely identifying this request from among other submissions within the same build.\r\n            ":"\r\n            ID独特地从同一构建中的其他提交中识别此请求。\r\n            \r\n","\r\n            The number of currently available tasks\r\n            ":"\r\n            当前可用任务的数量\r\n            \r\n"," of Microsoft.Build.dll.\r\n            ":" microsoft.build.dll\r\n            \r\n","Architecture to seek.":"要寻找的建筑。\r\n","\r\n            these files list all Override tasks and task assemblies that do not need to be explicitly declared by projects\r\n            ":"\r\n            这些文件列出了无需通过项目明确声明的所有覆盖任务和任务组件\r\n            \r\n","\r\n            Look up the path to the build tools directory for the requested ToolsVersion in the .exe.config file of this executable\r\n            ":"\r\n            查找此可执行文件中的.exe.config文件中请求的toolsversion的构建工具目录\r\n            \r\n","\r\n            Creates a new configuration which is a clone of the old one but with a new id.\r\n            ":"\r\n            创建一种新的配置，该配置是旧配置的克隆，但具有新的ID。\r\n            \r\n","\r\n            Get any child metadata definitions.\r\n            ":"\r\n            获取任何儿童元数据定义。\r\n            \r\n","TaskName is null":"taskname为null\r\n","\r\n            Instructs the logger to shut down.\r\n            ":"\r\n            指示记录器关闭。\r\n            \r\n","\r\n            The size of the large mru list.\r\n            ":"大MRU列表的大小。\r\n            \r\n","\r\n            The MSBuild error code corresponding with this exception, or\r\n            null if none was specified.\r\n            ":"\r\n            MSBUILD错误代码与此异常相对应，或\r\n            如果没有指定，则为空。\r\n            \r\n","\r\n            This empty interface is used to pass host objects from an IDE to individual\r\n            tasks.  Depending on the task itself and what kinds parameters and functionality\r\n            it exposes, the task should define its own interface that inherits from this one, \r\n            and then use that interface to communicate with the host.\r\n            ":"此空界面用于将主机对象从IDE传递到个人\r\n            任务。取决于任务本身以及哪些参数和功能\r\n            它公开了，任务应定义自己的界面，该界面从该界面继承，\r\n            然后使用该界面与主机进行通信。\r\n            \r\n","\r\n            Loads from an XmlReader, intercepting the reader.\r\n            ":"\r\n            从XMLReader加载，拦截读者。\r\n            \r\n"," since it is not overridden by ":" 因为它没有被\r\n"," if one with a matching name could not be found.":" 如果找不到一个具有匹配名称的人。\r\n","\r\n            Returns a hex representation of a byte array.\r\n            ":"\r\n            返回字节阵列的十六进制表示。\r\n            \r\n","\r\n            Override which determines the key for entry into the collection from the specified build request configuration.\r\n            ":"\r\n            覆盖，这确定了从指定的构建请求配置进入集合的密钥。\r\n            \r\n","\r\n            The char buffer.\r\n            ":"\r\n            char缓冲区。\r\n            \r\n","\r\n            Cached string\r\n            ":"\r\n            缓存的字符串\r\n            \r\n","\r\n            When set to true, the tool task will create a batch file for the command-line and execute that using the command-processor,\r\n            rather than executing the command directly.\r\n            ":"设置为true时，工具任务将为命令行创建批处理文件，并执行使用命令处理器，\r\n            而不是直接执行命令。\r\n            \r\n","\r\n            Contains information about entries in the AssemblyFoldersEx registry keys.\r\n            ":"\r\n            包含有关“汇编”注册表键中条目的信息。\r\n            \r\n","\r\n            Do not clone attributes which can be metadata. The corresponding expressed as attribute project elements are responsible for adding their attribute\r\n            ":"\r\n            请勿克隆可以是元数据的属性。表示为属性项目元素的相应表示的负责添加其属性\r\n            \r\n","\r\n            Do the evaluation.\r\n            Called by the static helper method.\r\n            ":"\r\n            进行评估。\r\n            由静态辅助方法调用。\r\n            \r\n","\r\n            Helper class with attribute names in Platform.xml\r\n            ":"\r\n            platform.xml中带有属性名称的助手类\r\n            \r\n","\r\n            Changes the item type.\r\n            ":"\r\n            更改项目类型。\r\n            \r\n","\r\n            Instructs the task to exit as soon as possible, or to immediately exit if Execute is invoked after this method.\r\n            ":"\r\n            指示任务尽快退出，或在此方法之后调用执行，请立即退出。\r\n            \r\n","\r\n            Assigns unique evaluation ids. Thread safe.\r\n            ":"\r\n            分配唯一的评估ID。线程安全。\r\n            \r\n","\r\n                Called once after all the build to let the plugin do any post build operations (log metrics, cleanup, etc).\r\n                Errors are checked via ":"\r\n                在所有构建之后，一次呼叫一次，以使插件执行任何后构建操作（日志指标，清理等）。\r\n                通过检查错误\r\n","Native: Can't access the log file (0x5: Access is denied)":"本机：无法访问日志文件（0x5：访问被拒绝）\r\n","\r\n            Cache the list of supported frameworks\r\n            ":"\r\n            缓存支持的框架列表\r\n            \r\n","\r\n            The set of build items output by the target.\r\n            These are ITaskItem's, so they have no item-type.\r\n            ":"\r\n            目标构建项目集由目标输出。\r\n            这些是itaskItem的，因此它们没有项目类型。\r\n            \r\n","\r\n            List of values and names available in the property pass of evaluation\r\n            ":"\r\n            评估属性通过中可用的价值和名称列表\r\n            \r\n","The global properties to use for this entry point. May be null.":"用于此入口点的全局属性。可能是无效的。\r\n","LeaveScope":"叶子\r\n"," this argument refers to. \r\n            ":" 该论点是指。\r\n            \r\n","\r\n            Overall status indication.\r\n            ":"\r\n            总体状态指示。\r\n            \r\n","The value of the metadata to add":"元数据的价值添加\r\n","\r\n            Gets the enumerator over the configurations in the cache.\r\n            ":"\r\n            在缓存中的配置上获取枚举器。\r\n            \r\n","\r\n            This is the default value used by newly created projects for whether or not the building\r\n            of projects is enabled.  This is for security purposes in case a host wants to closely\r\n            control which projects it allows to run targets/tasks.\r\n            ":"\r\n            这是新创建的项目使用的默认值\r\n            启用了项目。这是出于安全目的，以防主机要密切\r\n            控制哪些项目允许运行目标/任务。\r\n            \r\n","The exception, if any":"例外，如果有的话\r\n","\r\n            The event raised when a new build request should be issued.\r\n            ":"\r\n            应发出新的构建请求时提出的活动。\r\n            \r\n","\r\n                Initializes a new instance of the SdkReference class.\r\n            ":"\r\n                初始化SDKReference类的新实例。\r\n            \r\n","\r\n            The set of targets to build.\r\n            ":"\r\n            要建立的目标集。\r\n            \r\n","\r\n            Callback for event raised when there is an unhandled exception in the engine.\r\n            ":"\r\n            当发动机中没有例外的情况下，提出了事件的回调。\r\n            \r\n","\r\n            Gets the names of metadata on the item.\r\n            Includes all built-in metadata.\r\n            Computed, not necessarily fast.\r\n            ":"\r\n            在项目上获取元数据的名称。\r\n            包括所有内置元数据。\r\n            计算，不一定快。\r\n            \r\n"}