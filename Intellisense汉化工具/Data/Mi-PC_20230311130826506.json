{"Показывает, является ли данный моникер одним из классов моникеров, предоставляемых системой.":"指示给定的名字对象是否是系统提供的名字对象类之一。\r\n","Инкапсулированный объект, который должен быть маршалирован как тип VT_CY.":"要封送为 VT_CY 类型的封装对象。\r\n","Stellt zusätzliche Informationen für einen benutzerdefinierten Marshaller zur Verfügung.":"为自定义封送拆收器提供附加信息。\r\n","호출자가 응답하려고 하는 이벤트를 트리거하는 COM 개체입니다.":"触发调用方试图响应的事件的COM对象。\r\n","Der Rest, der sich aus der Division ergibt.":"除法所得的余数。\r\n","Исключение, вызванное использованием недопустимого COM-объекта.":"使用无效的 COM 对象抛出异常。\r\n","두 개의 16비트 부호 있는 정수 중 더 작은 숫자를 반환합니다.":"返回两个 16 位有符号整数中较小的一个。\r\n","-Methode wurde nicht aufgerufen.":"方法没有被调用。\r\n","Значение, которое необходимо преобразовать в тип ":"要转换为类型的值\r\n","이 메서드는 반환될 때. 송신 인터페이스 ":"当此方法返回时。出接口\r\n","코사인을 나타내는 숫자입니다. ":"表示余弦的数字。\r\n","Задает полное имя настраиваемого модуля маршалинга.":"指定自定义封送拆收器的完全限定名称。\r\n","Ruft eine Auflistung der Zugriffsregeln ab, die der angegebenen Sicherheits-ID zugeordnet sind.":"获取与指定安全 ID 关联的访问规则的集合。\r\n","Ruft die Frequenz des Zeitgebers als Anzahl der Ticks pro Sekunde ab.Dieses Feld ist schreibgeschützt.":"获取计时器的频率作为每秒滴答数。该字段是只读的。\r\n"," ist, gibt diese Methode 1 zurück.Wenn ":" 是 ，此方法返回 1。如果\r\n"," не содержит сведения о каталоге.":" 不包含目录信息。\r\n","의 부호를 나타내는 숫자입니다.반환 값 의미 -1 ":"表示值符号的数字。返回值含义 -1\r\n","Изменяет положение указателя поиска относительно начала потока, конца потока или текущего указателя поиска.":"更改搜索指针相对于流的开头、流的结尾或当前搜索指针的位置。\r\n","삼각, 로그 및 기타 일반 수학 함수에 대한 상수 및 정적 메서드를 제공합니다.이 형식에 대 한.NET Framework 소스 코드를 찾아보려면 참조는 Reference Source.":"为三角函数、对数函数和其他常用数学函数提供常量和静态方法。要浏览这些类型的 .NET Framework 源代码，请参阅参考源。\r\n","Gibt den benutzerdefinierten Elementtyp von ":"返回自定义项目类型\r\n","Представляет диспетчерские идентификаторы именованных аргументов.":"表示命名参数的分派标识符。\r\n","16비트 부호 있는 정수의 절대 값을 반환합니다.":"返回 16 位有符号整数的绝对值。\r\n","지정된 단정밀도 부동 소수점 숫자 값을 해당하는 64비트 부호 있는 정수로 변환합니다.":"将指定的单精度浮点数的值转换为等效的 64 位带符号整数。\r\n","다음 표에 나와 있는 값 중 하나입니다.+Infinity는 ":"下表中的其中一个值。+Infinity是\r\n","Предоставляет число аргументов.":"提供一些参数。\r\n","Gibt eine bestimmte Typbibliothek an und stellt Lokalisierungsunterstützung für Membernamen bereit.":"指定特定类型库并为成员名称提供本地化支持。\r\n","에 정의된 잘못된 문자가 하나 이상 포함되어 있는 경우":"包含一个或多个定义在\r\n","Знак Юникода, эквивалентный первому и единственному знаку в ":"等同于第一个也是唯一一个字符的 Unicode 字符\r\n","멤버는 속성을 가져옵니다.":"员获取属性。\r\n","Возвращает меньшее из двух 8-битовых целых чисел со знаком.":"返回两个 8 位有符号整数中较小的一个。\r\n","Среда хранения представляет собой компонент \"Интерфейс графических устройств\" (GDI) (HBITMAP).Если элемент ":"存储介质是图形设备接口 (GDI) (HBITMAP) 组件。\r\n","Смещение в байтах от начала объекта ":"从对象开头的偏移量（以字节为单位）\r\n","고객을 위한 오류를 설명합니다.":"为客户描述错误。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 16비트 부호 있는 정수 값을 해당하는 문자열 표현으로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定的 16 位有符号整数值转换为其等效的字符串表示形式。\r\n","Der Offset für diese Instanz.":"Der Offset für diese Instanz。\r\n","지정된 개체의 값을 64비트 부호 없는 정수로 변환합니다.":"将指定对象的值转换为 64 位无符号整数。\r\n","는 형식이 잘못된 인수의 인덱스를 나타냅니다.둘 이상의 인수가 오류를 반환하면 ":"指示格式错误参数的索引。如果多个参数返回错误，\r\n","Указывает способ маршалинга параметров строки для метода, а также управляет искажением имени.":"指定如何对方法的字符串参数进行封送处理，并控制名称重整。\r\n","해당 연결 지점에 대한 기존의 연결을 설명합니다.":"描述到该连接点的现有连接。\r\n"," с помощью указанного начального значения.":" 使用指定的初始值。\r\n","Die VARDESC-Struktur beschreibt eine symbolische Konstante.Es gibt keinen ihr zugeordneten Arbeitsspeicher.":"VARDESC结构描述了一个符号Konstante.Es 不给出任何与之相关联的存储器。\r\n","파일 이름에 사용할 수 없는 문자가 포함된 배열입니다.":"包含文件名中不允许的字符的数组。\r\n","Первое комплексное число для перемножения.":"第一个要相乘的复数。\r\n","10진수 값을 지정된 소수 자릿수로 반올림합니다.두 숫자의 중간에 있는 값을 반올림하는 방법을 지정하는 매개 변수입니다.":"Rounding decimal values to the specified number of decimal places. 此参数指定如何在两个数字中间舍入值。\r\n","Konvertiert den angegebenen booleschen Wert in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.":"将指定的布尔值转换为等效的 16 位带符号整数。\r\n","Знак Юникода, который эквивалентен значению, или ":"与该值等效的 Unicode 字符，或\r\n","Массив байтов, содержащий случайные числа. ":"包含随机数的字节数组。\r\n","Показывает метку окончания перечисления.":"显示枚举结束标签。\r\n"," generischen Typparameter angegeben wird. ":" 指定泛型类型参数。\r\n","Возвращает тип описания типа.":"返回类型描述的类型。\r\n","Die SDDL-Zeichenfolge, aus der das neue ":"新的 SDDL 字符串\r\n","기본 매개 변수를 지원하는 언어에서 호출할 경우 매개 변수의 기본값을 설정합니다.이 클래스는 상속될 수 없습니다.":"从支持默认参数的语言调用时设置参数的默认值。此类不能被继承。\r\n","예외 소스의 이름을 나타냅니다.일반적으로 이 이름은 응용 프로그램 이름입니다.":"指示异常源的名称。通常这是应用程序名称。\r\n","Управляет определением интерфейса IEnumString.":"管理 IEnumString 接口的定义。\r\n","При возвращении данного метода содержит структуру, содержащую атрибуты библиотеки.Этот параметр передается без инициализации.":"当此方法返回时，包含一个包含库属性的结构。此参数无需初始化即可传递。\r\n","По возможности метод должен быть встроенным.":"如果可能，该方法应该是内联的。\r\n","지정된 정수 값을 해당하는 문자열 표현으로 변환합니다.":"将指定的整数值转换为其等效的字符串表示形式。\r\n","Преобразует значение заданного объекта в эквивалентное 32-битовое целое число без знака, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用指定的区域性特定格式设置信息将指定对象的值转换为其等效的 32 位无符号整数。\r\n",", используя имя, порог начала сбора дескрипторов и порок, при котором должен быть выполнен сбор дескрипторов. ":"，使用名称，描述符收集开始阈值，以及应该执行描述符收集的 vice。\r\n","에 해당하는 32비트 부호 없는 정수이거나, ":"是一个 32 位无符号整数，等价于\r\n","Das zu konvertierende HRESULT.":"要转换的 HRESULT。\r\n"," в другой сборке. ":" 在另一个装配体中。\r\n"," не имеет значения null. ":" 不为空。\r\n","Код нейтрален по отношению к процессору и разрядности слова.":"该代码在处理器和字长方面是中性的。\r\n","두 개의 8비트 부호 있는 정수 중 더 큰 숫자를 반환합니다.":"返回两个 8 位有符号整数中较大的一个。\r\n","Hebt für das angegebene Objekt die Registrierung in der Running Object Table (ROT) auf.":"从运行对象表 (ROT) 中注销指定对象。\r\n","에서 마지막 디렉터리 문자 다음의 문자입니다.":"是中最后一个目录字符之后的字符。\r\n","S_OK, wenn die Anzahl der übersprungenen Elemente gleich dem ":"S_OK 如果跳过的项目数等于\r\n","Инкапсулирует объекты, которые необходимо маршалировать, как VT_DISPATCH.":"将要编组的对象封装为 VT_DISPATCH。\r\n","Получает из объекта ":"从对象中获取\r\n"," ist kleiner als 0 (null).":" 小于 0（零）。\r\n","Stellt einen zusammengesetzten ACE (Access Control Entry, Zugriffssteuerungseintrag) dar.":"表示复合访问控制条目 (ACE)。\r\n"," на указанное число битов влево.":" 向左指定的位数。\r\n","지정된 32비트 부호 없는 정수의 값을 해당하는 8비트 부호 없는 정수로 변환합니다.":"将指定的 32 位无符号整数的值转换为等效的 8 位无符号整数。\r\n","클래스를 구조체로 내보낼 수 없거나 필드가 공용이 아닌 경우.NET Framework 버전 2.0 이상에서는 이 필드가 private 필드일 수 있습니다.":"在 .NET Framework 2.0 及更高版本中，如果类不能作为结构导出或字段不是公共的，则此字段可以是私有的。\r\n",") дает значение null или недопустимый адрес.":") 给出空地址或无效地址。\r\n","Мнимая часть комплексного числа.":"复数的虚部。\r\n","Определяет неявное преобразование 8-битового знакового целого числа в значение ":"指定 8 位有符号整数到值的隐式转换\r\n","Das Objekt, für das ein Wrapper erstellt werden soll. ":"要环绕的对象。\r\n","Помечает интерфейс как обладающий заданным по умолчанию поведением.":"将接口标记为具有默认行为。\r\n","Объединяет три строки в путь.":"将三个字符串连接成一个路径。\r\n","기본값을 사용하여 ":"使用默认值 \r\n","serialize된 특정 스트림의 소스 및 대상에 대해 설명하고 호출자 정의 추가 컨텍스트를 제공합니다.":"描述特定序列化流的源和目标，并提供调用者定义的附加上下文。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 64비트 부호 없는 정수로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为 64 位无符号整数。\r\n","Carácter que se va a convertir. ":"Carácter que se va a convertir。\r\n","가 true이면 숫자 1을 반환하고, 그렇지 않으면 0을 반환합니다.":"如果为真，则返回数字 1，否则返回 0。\r\n",", примененным к содержащей его структуре.Для задания размера массива всегда следует использовать поле ":"应用于包含结构。您应该始终使用该字段来设置数组的大小。\r\n","에서 지정한 클래스에는 액세스할 수 있는 기본 생성자가 없습니다. ":"指定的类没有可访问的默认构造函数。\r\n","연결된 advise 싱크의 IUnknown 인터페이스에 대한 포인터를 나타냅니다.CONNECTDATA 구조체가 더 이상 필요하지 않으면 호출자는 이 포인터에서 IUnknown::Release를 호출해야 합니다.":"Represents a pointer to the IUnknown interface of the connected advise sink. 当不再需要 CONNECTDATA 结构时，调用者应在此指针上调用 IUnknown::Release。\r\n"," интерфейса получен из класса метаданных.Этот элемент можно использовать для указания точного типа интерфейса или типа интерфейса, используемого по умолчанию при применении к классу.Этот элемент определяет такое же поведение, что и ":" interface 派生自元数据类。此元素可用于指定确切的接口类型，或应用于类时要使用的默认接口类型。此元素定义与以下内容相同的行为\r\n","Der Wert, der in einen 8-Bit-Wert mit Vorzeichen konvertiert werden soll.":"要转换为 8 位有符号值的值。\r\n","Массив, содержащий требуемый элемент.":"包含所需元素的数组。\r\n"," 개체의 전체 이름을 가져옵니다.":" 获取对象的全名。\r\n",", используя имя и порог, достижение которого вызывает сбор дескрипторов. ":"，使用名称和触发描述符集合的阈值。\r\n","true와 ":"真实的\r\n","Die Identität der Klasse von Objekten, für die der neue ACE gilt.":"新 ACE 适用的对象类的标识。\r\n","Eine Gleitkommazahl mit einfacher Genauigkeit, die beginnend bei ":"Eine Gleitkommazahl mit einfacher Genauigkeit, die beginnend bei\r\n","비교할 두 개의 16비트 부호 있는 정수 중 첫 번째 숫자입니다. ":"要比较的两个 16 位有符号整数中的第一个。\r\n"," — значение из структуры ":" - 来自结构的价值\r\n","-Objekt, das den Vertrauensnehmer identifiziert, dem das System den Zugriff gewährt.Der ACE enthält außerdem eine GUID und verschiedene Flags, die die Vererbung des ACE an untergeordnete Objekte steuern.Dieser ACE-Typ enthält möglicherweise optionale Rückrufdaten.Bei den Rückrufdaten handelt es sich um ein spezifisches BLOB des Ressourcen-Managers, das nicht interpretiert wird.":"标识系统授予访问权限的受托者的对象。ACE 还包含一个 GUID 和各种标志，用于控制 ACE 对子对象的继承。这种类型的 ACE 可能包含可选的回调数据。回调数据是特定的 BLOB资源管理器，不解释。\r\n","멤버의 기본값을 serialization 스트림에서 생성해야 하면 true이고, 그렇지 않으면 false입니다.기본값은 true입니다.":"如果成员的默认值应从序列化流生成，则为 true；否则为 false。默认值为 true。\r\n","Указывает определенный пользователем тип элемента для поля ":"指定字段的用户定义元素类型\r\n"," oder die Datums- und Uhrzeitentsprechung von ":" 或等效的日期和时间\r\n","Stellt die Zeit fest, zu der ein bestimmtes Objekt geändert wurde, sodass von IMoniker::GetTimeOfLastChange eine entsprechende Änderungszeit mitgeteilt werden kann.":"确定给定对象的修改时间，以便 IMoniker::GetTimeOfLastChange 可以报告适当的修改时间。\r\n","지정된 32비트 부호 없는 정수를 실제 변환 작업 없이 반환합니다.":"返回指定的 32 位无符号整数而不进行任何实际转换。\r\n","일반 속성 액세스 구문을 통해 함수가 호출됩니다.":"该函数通过正常的属性访问语法调用。\r\n","열거형에서 건너뛸 요소 수입니다.":"枚举中要跳过的元素数。\r\n","Значение true, если текущий набор является надмножеством объекта ":"如果当前集合是对象的超集，则为真\r\n","Значение HRESULT ошибки. ":"错误的 HRESULT 值。\r\n","Десятичная константа, хранящаяся в данном атрибуте.":"存储在此属性中的十进制常量。\r\n","에 확장명이 없고 ":"没有扩展名\r\n","unsigned 정수 값을 나타냅니다.":"表示无符号整数值。\r\n","Тип отформатированной структуры.Предоставляет сведения распределения, необходимые для удаления буфера из параметра ":"格式化结构的类型。提供从参数中删除缓冲区所需的分配信息\r\n","지정된 유니코드 문자의 값을 해당하는 64비트 부호 없는 정수로 변환합니다.":"将指定 Unicode 字符的值转换为等效的 64 位无符号整数。\r\n","이 메서드는 반환될 때 현재 파일의 경로가 들어 있는 0으로 끝나는 문자열에 대한 포인터의 주소 또는 기본 파일 이름 프롬프트(예: *.txt)를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含指向包含当前文件路径的以零结尾的字符串的指针地址，或默认文件名提示（例如 *.txt）。此参数未初始化传递。\r\n","Ruft einen booleschen Wert ab, der angibt, ob die diesem ":"获取一个布尔值，指示此是否\r\n","Адрес освобождаемой строки BSTR.":"要释放的 BSTR 的地址。\r\n","-Parameter ist kleiner als der ":"参数小于那个\r\n","Возвращаемое значение Положительное число Натуральный логарифм ":"返回值 正数 自然对数\r\n","Número de punto flotante de precisión doble cuyo valor es equivalente al valor de ":"Número de punto flotante de precisión doble cuyo valor es equivalente al valor de\r\n","지정된 호출 규칙입니다.":"指定的调用约定。\r\n","Включить каталог %WinDir%\\System32 в путь поиска DLL. ":"在 DLL 搜索路径中包括 %WinDir%\\System32 目录。\r\n","Gibt einen nicht verwalteten Zeichenfolgenzeiger frei, der mit der ":"释放与关联的非托管字符串指针\r\n","При удачном возвращении содержит фактическое число байтов, считанных из источника. ":"成功返回时，包含从源读取的实际字节数。\r\n"," в кодировке Base64, начиная с позиции ":" Base64 编码起始位置\r\n","Fügt der Aufrufliste von Ereignissen, die aus einem COM-Objekt stammen, einen Delegaten hinzu.":"将委托添加到源自 COM 对象的事件调用堆栈。\r\n","Значение true, если экземпляр ":"如果实例为真\r\n","Entfernt alle Überwachungsregeln, die dieselbe Sicherheits-ID und denselben Qualifizierer wie die angegebene Überwachungsregel in der SACL (System Access Control List) enthalten, die diesem ":"删除所有包含与此匹配的 SACL（系统访问控制列表）中的指定审计规则相同的安全 ID 和限定符的审计规则\r\n","Объект, для которого нужно получить COM VARIANT.":"要为其获取 COM VARIANT 的对象。\r\n","Erhöht die aktuelle Anzahl der Handles.":"增加当前句柄数。\r\n","수집을 반드시 시작해야 하는 시점을 지정하는 값입니다.이 매개 변수에는 사용할 수 있는 최대 핸들 수를 설정해야 합니다.":"指定集合必须何时启动的值。您必须设置可用于此参数的最大句柄数。\r\n","Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.":"将指定 Unicode 字符的值转换为等效的 8 位带符号整数。\r\n",".CeroLa instancia actual es igual que ":".CeroLa instantia actual es igual que\r\n",", используя указанный открытый ключ и подпись другой стороны.":"，使用对方指定的公钥和签名。\r\n","Объект, базовый тип которого равен ":"基类型为的对象\r\n","Создает перечислитель всех точек подключения, поддерживаемых в объекте, доступном для соединения, по одной точке подключения для каждого идентификатора IID.":"创建可连接对象中支持的所有连接点的枚举，每个 IID 一个连接点。\r\n","Die 64-Bit-Ganzzahl mit Vorzeichen, die am angegebenen Offset aus dem nicht verwalteten Arbeitsspeicher gelesen wurde.":"从指定偏移量处的非托管内存中读取的 64 位有符号整数。\r\n","이 메서드는 반환될 때 현재 모니커의 축소된 형식에 대한 참조를 포함합니다. 이 참조는 오류가 발생하거나 현재 모니커가 축소되지 않을 경우 null이 될 수 있습니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含对当前名字对象的简化形式的引用。如果发生错误或当前名字对象未折叠，则此引用可以为 null。此参数未初始化传递。\r\n","Указывает, что числовая строка может содержать символ денежной единицы.Допустимые символы денежных единиц определяются свойством ":"指定数字字符串可以包含货币符号。有效的货币符号由属性确定\r\n","Die Methode gibt einen Verweis auf die von ":"该方法返回对的引用\r\n","배열의 문자열 중 하나가 null인 경우 ":"如果数组中的字符串之一为空\r\n","필수 멤버이면 true이고, 그렇지 않으면 false입니다.":"如果是必需成员，则为 true；否则为 false。\r\n","보다 작거나 같은 숫자입니다.":"小于或等于的数字。\r\n","가져올 메서드가 포함된 DLL의 이름을 사용하여 ":"使用包含要导入的方法的DLL的名称 \r\n"," не равно 2, 8, 10 или 16. -или-Значение параметра ":" 不等于 2、8、10 或 16。 - 或 - 参数值\r\n","Создает объект-перечислитель для итерации по соединениям, существующим для этой точки подключения.":"创建一个枚举器对象以循环访问此连接点存在的连接。\r\n","-Objekts ":"-目的\r\n"," keine Informationen über das Stammverzeichnis enthält.":" 不包含有关根目录的信息。\r\n","-Objekt, die dem angegebenen ":"- 指定对应的对象\r\n","Diese Methode gibt einen Verweis auf die enthaltende Typbibliothek zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回对包含类型库的引用。此参数未初始化传递。\r\n","die Memberfunktion ist nicht vorhanden.":"成员函数不存在。\r\n","-Typ wird nicht unterstützt.":"- 不支持类型。\r\n"," 인스턴스가 만든 ":" 实例创建\r\n","지정된 복소수의 아크코사인인 각도를 반환합니다.":"返回作为指定复数的反余弦的角度。\r\n","Das Array, in das kopiert werden soll.":"要复制到的数组。\r\n","Отрицательное число ":"负数\r\n","Eine Zeichenfolge aus Unicode-Zeichen, die ein Doppelbyte mit Längenpräfix ist.Sie können diesen Member, der die Standardzeichenfolge in COM darstellt, für den ":"一串以长度为前缀的双字节Unicode字符，可以使用该成员，COM中的标准字符串，用于\r\n","Второе из двух сравниваемых 64-разрядных целых чисел со знаком. ":"要比较的两个有符号 64 位整数中的第二个。\r\n"," 열거형의 끝을 나타냅니다.":" 表示枚举结束。\r\n"," не поддерживает запрошенный интерфейс.":" 不支持请求的接口。\r\n","Указывает на использование для данного метода соглашения о вызове Macintosh Programmers' Workbench (MPW) PASCAL.":"指示 Macintosh 程序员工作台 (MPW) PASCAL 调用约定用于此方法。\r\n","구조체 레이아웃이 Sequential 또는 Explicit이 아닌 경우또는 구조체가 boxed 값 형식인 경우":"结构布局不是顺序的或显式的，或者结构是装箱值类型。\r\n","Ожидает получения сигнала всеми элементами заданного массива.":"等待给定数组的所有元素接收到信号。\r\n","관리되지 않는 메모리에 싱글바이트 값을 씁니다.":"将单字节值写入非托管内存。\r\n","Ein als Verweis übergebener Bytezeiger zum Abrufen des Zeigers aus dem ":"通过引用传递的字节指针，用于从\r\n","에서 래핑한 개체입니다.":"包裹的物体。\r\n","Ruft die Variable für die benutzerdefinierten Daten ab.":"获取自定义数据的变量。\r\n","에 확장명 정보가 없는 경우 ":"如果没有分机信息\r\n","Die SDDL-Zeichenfolge, durch die die Sicherheitsbeschreibung festgelegt wird.":"指定安全描述符的 SDDL 字符串。\r\n","데이터 바인딩을 지원하는 함수입니다.":"一个支持数据绑定的函数。\r\n","Rundet einen Gleitkommawert mit doppelter Genauigkeit auf den nächsten ganzzahligen Wert.":"将双精度浮点值舍入到最接近的整数值。\r\n","Entfernt alle Überwachungsregeln, die der angegebenen Überwachungsregel genau entsprechen, aus der SACL (System Access Control List), die diesem ObjectSecurity`1-Objekt zugeordnet ist.":"从与此 ObjectSecurity`1 对象关联的 SACL（系统访问控制列表）中删除与指定审核规则完全匹配的所有审核规则。\r\n","Gibt Bytes mit Längenpräfix an.":"指定带有长度前缀的字节。\r\n","Erfolgreiche Zugriffsversuche sollen überwacht werden.":"应监视成功的访问尝试。\r\n","Возвращает идентификатор для текущего объекта ":"返回当前对象的标识符\r\n","Сравнивает данный экземпляр с другим экземпляром ":"将此实例与另一个实例进行比较\r\n","Enthält nach dem Beenden dieser Methode die Dokumentationszeichenfolge für das angegebene Element.Dieser Parameter wird nicht initialisiert übergeben.":"退出此方法后，包含指定项的文档字符串。此参数未初始化传递。\r\n","Преобразует заданное строковое представление числа в эквивалентное 8-битовое целое число без знака.":"将数字的指定字符串表示形式转换为其等效的 8 位无符号整数。\r\n"," равен null, метод возвращает пустую строку.":" 为 null，则该方法返回一个空字符串。\r\n","el miembro no está presente.":"el miembro no está presente。\r\n","Задает, что типы, видимые обычно только в пределах текущей сборки, являются видимыми для заданной сборки.":"指定通常仅在当前程序集中可见的类型对指定的程序集可见。\r\n","가 나타날 때 마샬러에서 throw하는 예외입니다.":"编组器遇到时抛出的异常。\r\n","Die reelle Komponente einer komplexen Zahl.":"复数的实部。\r\n","-Methode die ":"-方法\r\n"," равно null или пустой строке (\"\").Если значение параметра ":" 为 null 或空字符串 (\"\")。如果参数的值\r\n"," verstanden werden, und erstellt entsprechend der gelesenen Teilzeichenfolge einen Moniker.":" 理解，并根据读取的子字符串创建一个名字对象。\r\n","-Parameter zeigt. ":"——参数显示。\r\n"," 데이터 형식에 사용할 수 있습니다.":" 可用于任何数据类型。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 8 位无符号整数的值转换为等效的 64 位无符号整数。\r\n","-Objekt zugeordneten Zugriffsregeln geändert wurden, andernfalls false.":"-对象关联的访问规则已被修改，否则为假。\r\n"," не является допустимой строкой формата.":" 不是有效的格式字符串。\r\n","Возвращает указанное число, возведенное в указанную степень.":"返回指定数的指定次幂。\r\n","[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt] Gibt alle Unterstrukturen eines angegebenen Typs frei, auf die der angegebene nicht verwaltete Speicherblock zeigt. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 释放由指定的非托管内存块指向的指定类型的所有子结构。\r\n","지정된 8비트 부호 있는 정수 값을 해당하는 문자열 표현으로 변환합니다.":"将指定的 8 位带符号整数值转换为其等效的字符串表示形式。\r\n",", если преобразование выполнено успешно, или объект ":"如果转换成功，或者对象\r\n"," доступна только для чтения; в противном случае — значение false.В используемой по умолчанию реализации ":" 只读;否则为 false。在默认实现中，\r\n","Указатель на неуправляемый блок памяти, который должен быть выделен перед вызовом метода.":"指向必须在调用方法之前分配的非托管内存块的指针。\r\n","Останавливает измерение интервала времени и обнуляет затраченное время.":"停止时间间隔测量并重置经过的时间。\r\n","기본값을 사용하여 OptionalAttribute 클래스의 새 인스턴스를 초기화합니다.":"使用默认值初始化 OptionalAttribute 类的新实例。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung.":"将指定的 32 位带符号整数的值转换为其等效的字符串表示形式。\r\n"," с помощью указанного ключа метаданных и значения.":" 使用指定的元数据键和值。\r\n"," 인스턴스를 사용하려면 먼저 이 메서드를 호출해야 합니다.":" 您必须在使用实例之前调用此方法。\r\n","Инициализирует новый экземпляр класса InvalidComObjectException, используя свойства по умолчанию.":"使用默认属性初始化 InvalidComObjectException 类的新实例。\r\n","Der Teil der Ansicht, die sich geändert hat.Zurzeit ist nur -1 gültig.":"视图中发生变化的部分。目前只有 -1 有效。\r\n","-Parameter unterstützt die angeforderte Schnittstelle nicht. ":"- 参数不支持请求的接口。\r\n","-Wert an, der den Typ beschreibt.":"描述类型的值。\r\n"," 가 0 보다 작거나 28 보다 큰 경우 ":" 小于 0 或大于 28\r\n","지정된 부울 값을 해당하는 16비트 부호 없는 정수로 변환합니다.":"将指定的布尔值转换为等效的 16 位无符号整数。\r\n"," con un valor de identificador no válido especificado.":" 指定了无效的标识符值。\r\n"," предоставлял перечислитель для форматов, которые могут быть заданы в ":" 为可以在中指定的格式提供了一个枚举器\r\n","Управляет выравниванием полей данных для класса или структуры в памяти.":"控制内存中类或结构的数据字段的对齐方式。\r\n","Das bereits vorhandene Handle, das verwendet werden soll.":"要使用的预先存在的句柄。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 8비트 부호 있는 정수로 변환합니다.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的 8 位带符号整数。\r\n","지정된 64비트 부호 없는 정수의 값을 해당하는 8비트 부호 있는 정수로 변환합니다.":"将指定的 64 位无符号整数的值转换为等效的 8 位有符号整数。\r\n","의 반올림 방법에 대한 사양입니다.":"如何舍入的规范。\r\n"," aus acht Bytes gebildet wird.":" aus acht 字节 gebildet 线。\r\n","-Objekt durch die angegebene SDDL-Zeichenfolge (Security Descriptor Definition Language) fest.":"对象由指定的安全描述符定义语言 (SDDL) 字符串。\r\n",".Если дробная часть ":".如果小数部分\r\n","가장 최근에 ROT(실행 개체 테이블)에 추가된 모니커에 대한 참조입니다. ":"对最近添加到运行对象表 (ROT) 的名字对象的引用。\r\n","Gibt den CLR-Namespace und den XML-Namespace des Datenvertrags an. ":"Gibt den CLR-Namespace und den XML-Namespace des Datenvertrags an。\r\n","관리되지 않는 메모리에서 64비트 부호 있는 정수를 읽습니다.":"从非托管内存中读取一个 64 位有符号整数。\r\n","지정된 숫자의 지정된 거듭제곱을 반환합니다.":"返回指定数的指定次幂。\r\n","Значение true показывает, что необходима очистка измененного флага после сохранения; в противном случае — значение false.":"true 表示保存后应清除修改标志；否则，假的。\r\n","Obtiene el espacio de nombres de los miembros del contrato de datos.":"Obtiene el espacio de names de los miembros del contrato de datos。\r\n",", определенное при помощи LHashValOfNameSys. ":", 用 LHashValOfNameSys 定义。\r\n"," hat, wird ":" 有，将会\r\n","Stellt die verwaltete Definition der IBindCtx-Schnittstelle bereit.":"提供 IBindCtx 接口的托管定义。\r\n","CLSID가 유효한지 여부에 관계 없이 System.__ComObject를 반환합니다. ":"无论 CLSID 是否有效，都返回 System.__ComObject。\r\n","Определяет инкапсулируемый дескриптор.":"ОпределяетинкапсULируемый描述符。\r\n","Ein Handler.":"经销商。\r\n","Schreibt ein Zeichen als 16-Bit-Ganzzahl in den nicht verwalteten Speicher.":"将字符作为 16 位整数写入非托管内存。\r\n","Eine plattformabhängige char-Zeichenfolge mit Längenpräfix: ANSI unter Windows 98, Unicode in Windows NT.Dieser BSTR-ähnliche Member wird nur selten verwendet.":"A platform-dependent length-prefixed char string: ANSI on Windows 98, Unicode on Windows NT. 这个类似 BSTR 的成员很少使用。\r\n","Subtrahiert eine komplexe Zahl von einer anderen komplexen Zahl.":"从另一个复数中减去一个复数。\r\n"," 인터페이스를 구현하지 않는 경우또는":" 不实现接口；或\r\n","코사인을 적용했을 때 지정된 숫자가 나오는 각도를 반환합니다.":"返回余弦产生指定数字的角度。\r\n","변환할 부울 값입니다. ":"要转换的布尔值。\r\n","Преобразует значение заданного десятичного числа в эквивалентное 64-битовое целое число без знака.":"将指定的十进制数的值转换为其等效的 64 位无符号整数。\r\n","의 해시 값입니다. ":"是哈希值\r\n","Beendet das Messen der verstrichenen Zeit für ein Intervall.":"停止测量一个间隔的经过时间。\r\n","Ссылка на моникер слева от данного моникера, если текущий моникер является частью составного моникера. ":"如果当前名字对象是复合名字对象的一部分，则此名字对象左侧的名字对象引用。\r\n","Ein Wert, der um die angegebene Anzahl von Bits nach links verschoben wurde.":"向左移动指定位数的值。\r\n"," doit retourner true pour cette valeur.":" doit retourner true pour cette valeur。\r\n","Возвращает значение HRESULT, соответствующее последней ошибке, вызванной кодом Win32, выполняемым с использованием класса ":"返回与使用该类执行的 Win32 代码导致的最后一个错误对应的 HRESULT 值\r\n","Преобразует указанное логическое значение в эквивалентное строковое представление.":"将指定的布尔值转换为其等效的字符串表示形式。\r\n","Die zweite von zwei zu vergleichenden Gleitkommazahlen mit doppelter Genauigkeit. ":"要比较的两个双精度浮点数中的第二个。\r\n","Der zweite zu addierende Wert.":"要添加的第二个值。\r\n","-Objekt ein Containerobjekt ist.":"对象是容器对象。\r\n","Делегат, передаваемый в неуправляемый код.":"传递给非托管代码的委托。\r\n","Добавляет массив символов Юникода, начиная с указанного адреса для данного экземпляра. ":"为此实例添加一个从指定地址开始的 Unicode 字符数组。\r\n","Gibt alle Unterstrukturen frei, auf die der angegebene nicht verwaltete Speicherblock zeigt.":"释放指定的非托管内存块指向的所有子结构。\r\n","-Enumerationswerte, der die Abschnitte der Sicherheitsbeschreibung (Zugriffsregeln, Überwachungsregeln, Besitzer, primäre Gruppe) des sicherungsfähigen Objekts angibt, die gespeichert werden sollen.":"- 指定要保存的安全对象的安全描述符（访问规则、审核规则、所有者、主要组）部分的枚举值。\r\n","이벤트 인터페이스의 메서드를 구현하는 클래스를 가져옵니다.":"获取实现事件接口的方法的类。\r\n","Gibt die IID der von diesem Verbindungspunkt verwalteten Ausgangsschnittstelle zurück.":"返回由此连接点管理的传出接口的 IID。\r\n"," содержит корневую папку; в противном случае — значение false.":" 包含根文件夹；否则，假的。\r\n"," 데이터 형식에 적용하면 ":" 应用于数据类型时\r\n","Gibt eine neue Instanz der ":"返回一个新的实例\r\n","Der Besitzer des neuen ":"新的主人\r\n","Предоставляет константы и статические методы для тригонометрических, логарифмических и иных общих математических функций.Чтобы просмотреть исходный код .NET Framework для этого типа, см. Reference Source.":"为三角函数、对数函数和其他常用数学函数提供常量和静态方法。要查看此类的 .NET Framework 源代码，请参阅参考源。\r\n","비교할 두 개의 8비트 부호 없는 정수 중 첫 번째 숫자입니다. ":"要比较的两个 8 位无符号整数中的第一个。\r\n",". Возможные соотношения показаны в следующей таблице.Возвращаемое значениеОписание-1Текущий экземпляр стоит перед объектом ":".可能的关系如下表所示 返回值 说明 - 1 当前实例在对象前面\r\n"," содержит недопустимые символы, пустой или содержит только пробелы. ":" 包含无效字符、为空或仅包含空格。\r\n","디코딩할 ":"解码\r\n","Entfernt alle Zugriffsregeln, die dieselbe Sicherheits-ID wie die angegebene Zugriffsregel enthalten, aus der DACL (Discretionary Access Control List), die diesem ObjectSecurity`1-Objekt zugeordnet ist.":"从与此 ObjectSecurity`1 对象关联的自由访问控制列表 (DACL) 中删除所有包含与指定访问规则相同的安全 ID 的访问规则。\r\n","Целое число, равное единице (1).":"等于一 (1) 的整数。\r\n","Требует, чтобы ":"要求\r\n"," zurück.Ein codiertes ":" 背.A编码\r\n",", возвращается это значение.Обратите внимание, что данный метод возвращает не целочисленное значение, а значение типа ":", 返回的是这个值，注意这个方法返回的不是整数值，而是一个类型的值\r\n","Получает полное имя данного объекта ":"获取此对象的完全限定名称\r\n","에서 사용됩니다.":"用于\r\n"," не равны нулю. ":" 不等于零。\r\n"," menos 1. ":" 菜单 1.\r\n","-Klasse mit der angegebenen ":"- 具有指定的类\r\n","Der Schnittstellenzeiger, der die ":"接口指针\r\n","Инициализирует новый экземпляр класса SafeArrayRankMismatchException, используя заданное сообщение.":"使用指定消息初始化 SafeArrayRankMismatchException 类的新实例。\r\n","현재 인스턴스에 대한 데카르트 형식의 문자열 표현입니다.":"当前实例的笛卡尔形式的字符串表示形式。\r\n"," ein Verzeichnis- bzw. Volumetrennzeichen ist, gibt diese Methode ":" 是目录或卷分隔符，此方法返回\r\n","필드가 열거형 멤버이며 serialize되어야 함을 지정합니다.":"指定该字段是一个枚举成员并且应该被序列化。\r\n","Número de elementos que se van a devolver en ":"要退回的物品数目 \r\n","Die zweite zu multiplizierende komplexe Zahl.":"要相乘的第二个复数。\r\n","Implementiert ":"实施的\r\n","제공된 예외에 해당하는 HRESULT를 사용하여 ":"使用HRESULT，它对应于提供的异常 \r\n","Возвращает гиперболический синус указанного угла.":"返回指定角度的双曲正弦值。\r\n","16-разрядное знаковое целое число, которое эквивалентно значению параметра ":"与参数值等价的 16 位有符号整数\r\n"," ist negativ oder zu hoch, um den ganzen ":" 对整体而言是负面的或过高的\r\n"," не является делегатом или является универсальным.":" 不是委托或者是通用的。\r\n","Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 8-битовое целое число без знака.":"将具有指定基数的数字的字符串表示形式转换为其等效的 8 位无符号整数。\r\n","멤버의 DISPID입니다.":"员的DISPID。\r\n","Der zweite zu multiplizierende Wert.":"要相乘的第二个值。\r\n","등록할 개체입니다. ":"要注册的对象。\r\n","Возвращает логарифм с основанием 10 указанного числа.":"返回指定数字的以 10 为底的对数。\r\n","Die Ausnahme, die ausgelöst wird, wenn der Rang eines eingehenden SAFEARRAY nicht mit dem in der verwalteten Signatur angegebenen Rang übereinstimmt.":"当传入 SAFEARRAY 的等级与托管签名中指定的等级不匹配时引发的异常。\r\n","Bietet die Möglichkeit, den Zugriff auf Objekte ohne direktes Bearbeiten von Zugriffssteuerungslisten (ACLs – Access Control Lists) zu steuern.Diese Klasse ist die abstrakte Basisklasse der ":"提供无需直接操作访问控制列表 (ACL) 即可控制对对象的访问的能力。此类是\r\n"," 값과 부호 있는 정수(Long) 값이 같은지를 나타내는 값을 반환합니다.":" 返回一个值，该值指示一个值和一个带符号的长整数值是否相等。\r\n","Eine verwaltete Zeichenfolge, die eine Kopie der nicht verwalteten Zeichenfolge enthält, wenn der Wert des ":"包含非托管字符串副本的托管字符串，如果\r\n","에 해당하는 배정밀도 부동 소수점 숫자입니다.":"相当于 的双精度浮点数。\r\n","Ruft die Klasse ab, die die Methoden der Ereignisschnittstelle implementiert.":"获取实现事件接口方法的类。\r\n","Показывает идентификатор контекста для раздела справки в файле справки.":"显示帮助文件中帮助主题的上下文标识符。\r\n","Q), где Q является частным ":"Q) 其中 Q 是商\r\n","Nehmen Sie das Anwendungsverzeichnis in den DLL-Suchpfad auf. ":"在 DLL 搜索路径中包括应用程序目录。\r\n","Массив символов для вставки. ":"要插入的字符数组。\r\n","Имя данного элемента.":"此元素的名称。\r\n","Добавляет к данному экземпляру строку, возвращаемую в результате обработки строки составного формата, содержащей ноль или более элементов формата.Каждый элемент формата заменяется строковым представлением одного аргумента с использованием указанного поставщика формата.":"将处理包含零个或多个格式元素的复合格式字符串返回的字符串附加到此实例。使用指定的格式提供程序，每个格式元素都替换为一个参数的字符串表示形式。\r\n","Gibt den Tangens des angegebenen Winkels zurück.":"返回指定角度的正切值。\r\n","Die maximal zulässige Länge eines nicht transparenten Daten-BLOB für Rückruf-ACEs (Access Control Entry, Zugriffssteuerungseintrag) in Bytes.":"回调访问控制条目 (ACE) 的不透明数据 blob 的最大允许长度（以字节为单位）。\r\n","인터페이스에서 사용된 형식은 VTBL바인딩 지원을 포함하여 Automation과 완벽하게 호환됩니다.인터페이스에서 dual을 설정하면 이 플래그와 ":"接口中使用的类型完全符合自动化标准，包括对 VTBL 绑定的支持。在接口上设置双重匹配此标志和\r\n","Значение, на которое необходимо разделить.":"要除以的值。\r\n","Добавляет к данному экземпляру строку, возвращаемую в результате обработки строки составного формата, содержащей ноль или более элементов формата.Каждый элемент формата заменяется строковым представлением одного аргумента.":"将处理包含零个或多个格式元素的复合格式字符串返回的字符串附加到此实例。每个格式元素都替换为单个参数的字符串表示形式。\r\n","Преобразует значение заданного 8-разрядного целого число без знака в эквивалентное десятичное число.":"将指定的 8 位无符号整数的值转换为其等效的十进制数。\r\n","에 사용할 수 있는 형식을 지정하는 열거형 값의 비트 조합입니다.":"指定可用类型的枚举值的按位组合。\r\n","Подпись другой стороны, которая является подписью в составе ключа строгого имени.":"对方签名，即强名密钥中的签名。\r\n","Позволяет выполнять регистрацию обработчика событий с поздней привязкой.":"允许您使用后期绑定注册事件处理程序。\r\n","지정된 32비트 부호 있는 정수의 값을 해당하는 64비트 부호 없는 정수로 변환합니다.":"将指定的 32 位带符号整数的值转换为等效的 64 位无符号整数。\r\n","Символическое представление объекта.":"对象的符号表示。\r\n","10진 값을 가장 가까운 정수로 반올림합니다.두 숫자의 중간에 있는 값을 반올림하는 방법을 지정하는 매개 변수입니다.":"将小数值四舍五入为最接近的整数。此参数指定如何在两个数字之间的中间值四舍五入。\r\n","Сведения об имени компании. ":"有关公司名称的信息。\r\n","При возвращении данного метода содержит BSTR с именем заданного элемента.Если вызывающему объекту не требуется имя элемента, ":"当此方法返回时，包含一个具有指定元素名称的 BSTR。如果调用者不需要元素名称，\r\n","IAdviseSink 인터페이스의 관리되는 정의를 제공합니다.":"提供 IAdviseSink 接口的托管定义。\r\n","Преобразует значение заданного 64-битового целого числа без знака в эквивалентное 64-битовое целое число со знаком.":"将指定的 64 位无符号整数的值转换为等效的 64 位有符号整数。\r\n"," stellt eine Zahl dar, die außerhalb des Bereichs des ":" 表示超出范围的数字\r\n","COM VARIANT를 개체로 변환합니다.":"将 COM VARIANT 转换为对象。\r\n","Die Zugriffsmaske für den ACE, die entfernt werden soll.":"ACE 要删除的访问掩码。\r\n","Ruft die Dokumentationszeichenfolge der Bibliothek, den vollständigen Namen und Pfad der Hilfedatei sowie den zu verwendenden Lokalisierungskontext und die Kontext-ID des Hilfethemas für die Bibliothek in der Hilfedatei ab.":"获取库的文档字符串、帮助文件的全名和路径、要使用的本地化上下文以及帮助文件中库的帮助主题的上下文 ID。\r\n","serialization 및 deserialization 중에 ":"在序列化和反序列化期间\r\n","Konvertiert den angegebenen booleschen Wert in die entsprechende Gleitkommazahl mit einfacher Genauigkeit.":"将指定的布尔值转换为等效的单精度浮点数。\r\n","Die vom Marshaller ausgelöste Ausnahme, wenn dieser ein nicht unterstütztes ":"编组器在不受支持时抛出的异常\r\n","Konvertiert den angegebenen booleschen Wert in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.":"将指定的布尔值转换为等效的 32 位带符号整数。\r\n","가 부호 있는 64 정수 값보다 큰지를 나타내는 값을 반환합니다.":"返回一个值，该值指示是否大于带符号的 64 位整数值。\r\n","이전에 개체가 저장된 스트림에서 해당 개체를 초기화합니다.":"从先前存储对象的流中初始化对象。\r\n"," für jeden Aufruf von ":" 每次调用\r\n","Указывает, что тип с атрибутом был ранее определен в COM.":"表示具有该属性的类型先前已在 COM 中定义。\r\n","복사할 관리되는 문자열입니다.":"要复制的托管字符串。\r\n"," 열거형의 값을 지정합니다.이 클래스는 상속될 수 없습니다.":" 指定枚举的值。此类不能被继承。\r\n","При возвращении данного метода содержит индекс для ":"当此方法返回时，包含索引\r\n","Gibt den Hashcode für das ":"返回哈希码\r\n","Добавляет знак завершения строки по умолчанию в конец текущего объекта ":"将默认行终止符添加到当前对象的末尾\r\n","IEnumMoniker 인터페이스의 정의를 관리합니다.":"管理 IEnumMoniker 接口的定义。\r\n","지정된 배정밀도 부동 소수점 숫자 값을 해당하는 64비트 부호 없는 정수로 변환합니다.":"将指定的双精度浮点数的值转换为等效的 64 位无符号整数。\r\n","Die Methode gibt einen Verweis auf die Running Object Table (ROT) zurück.Dieser Parameter wird nicht initialisiert übergeben.":"该方法返回对运行对象表 (ROT) 的引用。此参数在未初始化的情况下传递。\r\n","Представляет произвольно большое целое число со знаком.":"Представляет произвольно большое целое число со знаком。\r\n","Der lokale Name des Datenvertrags.Der Standardwert ist der Name der Klasse, auf den das Attribut angewendet wird.":"数据协定的本地名称。默认值是属性适用的类的名称。\r\n"," за исключением свойства ":" 除了物业\r\n","곱할 두 번째 값입니다.":"要乘以的第二个值。\r\n","와 연결된 RCW 참조 횟수의 새 값입니다.RCW는 참조를 호출하는 관리되는 클라이언트의 수에 관계없이 래핑된 COM 개체에 대한 참조를 하나만 유지하므로 일반적으로 이 값은 0이 됩니다.":"与 RCW 关联的 RCW 引用计数的新值。通常，此值将为 0，因为 RCW 只维护一个对包装的 COM 对象的引用，而不管有多少托管客户端调用该引用。\r\n","개체를 가비지 수집하지 못하게 하는 새 ":"一种防止对象垃圾回收的新 \r\n","Указывает на использование для данного метода соглашения о вызове Pascal.":"指示此方法使用 Pascal 调用约定。\r\n","에 지정된 이름을 포함하는 형식 설명에 대한 포인터의 배열을 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"包含指向类型描述的指针数组，其中包含 中指定的名称。此参数未初始化传递。\r\n","가 형식 라이브러리에 있으면 true이고, 그렇지 않으면 false입니다.":"如果在类型库中，则为 true；否则为 false。\r\n","파일이나 디렉터리 경로 정보를 포함하는 ":"包含文件或目录路径信息。\r\n","Значение HRESULT, показывающее успешное или неуспешное выполнение операции. ":"指示操作成功或失败的 HRESULT。\r\n","Получает или задает значение в паре ключ/значение.":"获取或设置键/值对中的值。\r\n"," и возвращает целое значение, которое показывает, больше или меньше первое значение по сравнению со вторым или равно ему.":" 并返回一个整数值，指示第一个值是大于还是小于或等于第二个值。\r\n"," freigegeben werden, wenn es nicht mehr benötigt wird.":" 不再需要时释放。\r\n","0.0과 1.0 사이의 임의의 부동 소수점 숫자를 반환합니다.":"返回一个介于 0.0 和 1.0 之间的随机浮点数。\r\n","Релаксации компиляции, заданные при построении текущего объекта.Перечисление ":"构造当前对象时指定的编译放宽。枚举\r\n","Число моникеров для возвращения в ":"要返回的名字对象的数量\r\n","Enthält Informationen über ein Element. ":"包含有关项目的信息。\r\n",") im Quadranten 2, π/2 < θ≤π.Für (":") 在象限 2, π/2 < θ≤π. 对于 (\r\n"," kein Werttyp. ":" 没有值类型。\r\n","Длина массива ":"阵列长度\r\n","Возвращает большее из двух десятичных чисел.":"返回两个小数中较大的一个。\r\n","Gibt einen Zeiger auf eine DVTARGETDEVICE-Struktur an, die Informationen über das Zielgerät enthält, für das die Daten erstellt werden. ":"指定指向 DVTARGETDEVICE 结构的指针，该结构包含有关为其创建数据的目标设备的信息。\r\n","지정된 유니코드 문자의 값을 해당하는 32비트 부호 있는 정수로 변환합니다.":"将指定 Unicode 字符的值转换为等效的 32 位带符号整数。\r\n","데이터가 변경될 때까지 기다리지 않고 개체에서 ":"在对象中而不等待数据更改。\r\n","Идентификатор IID интерфейса, используемый вызывающим объектом для связи с итоговым объектом. ":"调用者用来与结果对象通信的接口 IID。\r\n","Считывает из неуправляемой памяти с указанным смещением знаковое целое число, разрядность которого соответствует собственной разрядности процессора.":"从指定偏移量的非托管内存中读取一个带符号的整数，其位宽与处理器自身的位宽相匹配。\r\n","매크로 언어에서 액세스해서는 안 됩니다.이 플래그는 시스템 수준 형식 또는 형식 브라우저가 표시하지 않는 형식을 위한 것입니다.":"它不应该从宏语言中访问。这个标志用于系统级表单或表单浏览器不显示的表单。\r\n","Eine 32-Bit-Ganzzahl mit Vorzeichen, die größer oder gleich 0 und kleiner als ":"大于或等于 0 且小于的 32 位有符号整数\r\n","COM SysFreeString 함수를 사용하여 BSTR을 해제합니다.":"使用 COM SysFreeString 函数释放 BSTR。\r\n"," weist einen nicht unterstützten Typ auf. ":" 是不受支持的类型。\r\n","Значение для записи.":"要写入的值。\r\n","Gibt an, dass der Name eines Streams folgt.":"指示后面是流的名称。\r\n","Для 32-разрядного процессора Intel — реального либо среды Windows on Windows на 64-разрядной платформе (WOW64).":"对于 32 位 Intel 处理器 - 在 64 位平台 (WOW64) 上的 Windows 上的真实或 Windows。\r\n","-Objekt unterstützt, und der Wert gleich dem aktuellen ":"- 支持的对象，值等于当前值\r\n"," stellt eine Zahl dar, die kleiner als ":" 表示小于的数\r\n","시간 간격 측정을 중지하고 경과 시간 값을 0으로 다시 설정한 다음 경과 시간 측정을 시작합니다.":"停止测量时间间隔，将经过时间值重置为 0，然后开始测量经过时间。\r\n","-Objekt zugeordnet ist, die angegebene Überwachungsregel hinzu.":"对象分配后，添加指定的监控规则。\r\n","Konvertiert den Wert des angegebenen Objekts in ein ":"将指定对象的值转换为\r\n","Gibt einen IUnknown-Zeiger an.":"指定 IUnknown 指针。\r\n","8비트 부호 없는 정수로 구성된 배열의 하위 집합을 base-64 숫자로 인코딩된 해당하는 문자열 표현으로 변환합니다.매개 변수는 하위 집합을 입력 배열의 오프셋으로 지정하고 변환할 배열의 요소 수를 지정합니다.":"将 8 位无符号整数数组的子集转换为编码为 base-64 数字的相应字符串表示形式。参数将子集指定为输入数组的偏移量以及要转换的数组中的元素数。\r\n","Das Ergebnis der bitweisen Or-Operation.":"按位或运算的结果。\r\n"," besitzt kein Format für den ":" 没有格式\r\n"," gleich sind.- oder -  Ein Nullverweis (Nothing in Visual Basic), wenn ":" 相等。- 或- 空引用（在 Visual Basic 中为 Nothing）如果\r\n","true, wenn die optimale Zuordnung aktiviert ist, andernfalls false.Die Standardeinstellung ist true.":"true, wenn die optimale Zuordnung activiert ist, andernfalls false. Die Standardeinstellung ist true.\r\n","의 이벤트 이름입니다.":"事件名称。\r\n"," 참조에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":" 包含对引用的引用。此参数未初始化传递。\r\n","Die benutzerdefinierte QueryInterface wurde nicht verwendet.Stattdessen sollte die Standardimplementierung von IUnknown::QueryInterface verwendet werden.":"未使用自定义 QueryInterface。应改用 IUnknown::QueryInterface 的默认实现。\r\n","Возвращаемый дескриптор для описания ссылочного типа. ":"描述引用类型的返回句柄。\r\n","true, если данный экземпляр и ":"如果给定的实例和\r\n","Увеличиваемое значение.":"要增加的值。\r\n","Ruft die Zugriffsmaske für diese Regel ab.":"获取此规则的访问掩码。\r\n","Определяет константы, определяющие свойства переменной.":"定义定义变量属性的常量。\r\n","Ruft einen Wert ab, der die Zahl 1 darstellt.":"获取表示数字 1 的值。\r\n"," имеется по крайней мере один общий элемент; в противном случае — значение false.":" 至少有一个共同要素；否则，假的。\r\n","Возвращает из текущего процесса значение переменной среды. ":"从当前进程返回环境变量的值。\r\n","Строка, чье значение совпадает с данным экземпляром.":"其值与此实例匹配的字符串。\r\n","Dieser Parameter gibt die IID der von diesem Verbindungspunkt verwalteten Ausgangsschnittstelle zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此参数返回此连接点管理的传出接口的 IID。此参数未初始化传递。\r\n","Eine GUID, die den Objekttyp bezeichnet, der den neuen ACE erben kann.":"标识可以继承新 ACE 的对象类型的 GUID。\r\n","Ruft die ITypeComp-Schnittstelle für die Typenbeschreibung ab, sodass ein Clientcompiler eine Bindung an die Member der Typenbeschreibung vornehmen kann.":"获取类型描述的 ITypeComp 接口，以便客户端编译器可以绑定到类型描述的成员。\r\n",", не преобразованную в escape-последовательность.":", 未转换为转义序列。\r\n","Die Ausnahme, die ausgelöst wird, wenn eine in einem DLL-Import angegebene DLL nicht gefunden werden kann.":"Die Ausnahme，die ausgelöst wird，wenn eine in einem DLL-Import angegebene DLL nicht gefunden werden kann。\r\n","Ссылка на интерфейс IMoniker другого моникера, сравниваемого с данным моникером для выявления общего префикса. ":"对另一个名字对象的 IMoniker 接口的引用，将与此名字对象进行比较以确定公共前缀。\r\n","-Klasse mit einem Namen und einem Schwellenwert, an dem die Handle-Erfassung beginnen soll. ":"具有名称和开始收集句柄的阈值的类。\r\n","16-разрядное знаковое целое число, которое эквивалентно значению ":"等于值的 16 位有符号整数\r\n","지정된 두 복소수를 곱합니다.":"将两个指定的复数相乘。\r\n"," либо null.":" 或空。\r\n","Gibt die oberen 32 Bits von FILETIME an.":"指定 FILETIME 的高 32 位。\r\n","Eine 32-Bit-Ganzzahl mit Vorzeichen mit der Anzahl von Bytes in ":"一个 32 位有符号整数，其中字节数在\r\n","Gibt den Hyperbeltangens des angegebenen Winkels zurück.":"返回指定角度的双曲正切值。\r\n","Ruft den Typ des untergeordneten Objekts ab, das das ":"获取子对象的类型\r\n","Конечные знаки-разделители не следует учитывать при разборе, за исключением знаков-разделителей, встречающихся в шаблонах формата ":"不应解析尾随定界符，格式模式中出现的定界符除外\r\n","보다 크거나 같지만 ":"大于或等于\r\n","Die zweite von zwei zu vergleichenden 32-Bit-Ganzzahlen mit Vorzeichen. ":"要比较的两个 32 位有符号整数中的第二个。\r\n","-Objekt zugeordnet ist.Geschützte SACLs erben keine Überwachungsregeln von übergeordneten Containern.":"对象。受保护的 SACL 不会从父容器继承审核规则。\r\n","이 메서드는 반환될 때 열거형 문자열에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含对枚举字符串的引用。此参数未初始化传递。\r\n","Выделяет управляемый объект типа ":"分配类型的托管对象\r\n","Возвращает указанное значение 16-битового целого числа со знаком в виде массива байтов.":"以字节数组的形式返回指定的 16 位有符号整数值。\r\n","Значение true, если сборка мусора сервера включена, в противном случае — false.":"如果启用服务器垃圾回收，则为 true；否则为 false。\r\n",", определяется аргументом ":", 由参数决定\r\n","Systemüberwachung veranlassen.":"启动系统监控。\r\n","Ein Zeiger auf das erste Element eines Arrays von COM-VARIANTs.":"指向 COM VARIANT 数组的第一个元素的指针。\r\n"," ist eine Zeichenfolge der Länge 0 oder enthält nur Leerzeichen.– oder – Die Analyseroutine hat ein Schema in einem ungültigen Formular gefunden.– oder – Der Parser hat mehr als zwei aufeinander folgende Schrägstriche in einem URI gefunden, der nicht das Schema \"file\" verwendet.– oder – \"":" 是长度为 0 的字符串或仅包含空格。- 或 - 解析例程发现格式无效的方案。 - 或 - 解析器在不使用方案“文件”的 URI 中发现超过两个连续的正斜杠。 。- 或者 - ”\r\n","true, wenn das neue Objekt ein Containerobjekt ist.":"如果新对象是容器对象，则为真。\r\n","단정밀도 부동 소수점 숫자를 복소수로 변환하는 암시적 변환을 정의합니다.":"定义从单精度浮点数到复数的隐式转换。\r\n","Negiert einen angegebenen BigInteger-Wert. ":"否定给定的 BigInteger 值。\r\n","Die Identität, auf die die Überwachungsregel angewendet wird.":"审核规则适用的身份。\r\n",", которая указывает тип среды хранения, используемой для передачи данных объекта. ":"一个 ，指定用于传输对象数据的存储介质类型。\r\n","Definiert eine Funktionsbeschreibung.":"定义函数描述。\r\n","Интерфейс или диспетчерский интерфейс предоставляет источник или приемник, используемый по умолчанию.":"接口或调度程序接口提供默认源或接收器。\r\n","Число e, возведенное в степень ":"数 e 的幂\r\n","지정된 유니코드 문자의 값을 해당하는 8비트 부호 없는 정수로 변환합니다.":"将指定 Unicode 字符的值转换为等效的 8 位无符号整数。\r\n","이 메서드는 반환될 때 개체 인터페이스 포인터를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含一个对象接口指针。此参数未初始化地传递。\r\n","을 반환하는 메서드의 이름을 사용하여 ":"使用返回的方法的名称\r\n","32-разрядное знаковое целое число.":"32-разрядное знаковое целое число。\r\n","Gibt die größere von zwei 8-Bit-Ganzzahlen mit Vorzeichen zurück.":"返回两个 8 位有符号整数中较大的一个。\r\n","Der Typ des zu erstellenden Objekts.Dieses Objekt muss eine formatierte Klasse oder eine Struktur darstellen.":"要创建的对象的类型。此对象必须表示格式化的类或结构。\r\n","Возвращает заданное 16-битовое целое число без знака; фактическое преобразование не производится.":"返回指定的 16 位无符号整数；没有执行实际的转换。\r\n","Dieser Handletyp ähnelt ":"这种手柄类型类似\r\n",", указывающее тип элемента, определенного с помощью ":"指定用 定义的元素类型的 一个\r\n"," wird unverändert zurückgegeben.":" 原样返回。\r\n","Gibt die Bytereihenfolge (Endian-Reihenfolge) an, in der Daten in dieser Computerarchitektur gespeichert werden.":"Gibt die Bytereihenfolge (Endian-Reihenfolge) an, in der Daten in dieser Computerarchitektur gespeichert werden。\r\n","Das COM-Objekt, an das der Delegat angefügt ist.":"委托附加到的 COM 对象。\r\n","와 일치하는 실수 구성 요소와 0과 일치하는 허수 구성 요소가 있는 복소수입니다. ":"实部等于 且虚部等于 0 的复数。\r\n","-Objekt durch das angegebene Array von Bytewerten fest.":"对象由指定的字节值数组组成。\r\n",", который используется более часто.":"，使用频率更高。\r\n","Kopiert Daten aus einem eindimensionalen, verwalteten Array von 8-Bit-Ganzzahlen ohne Vorzeichen in einen nicht verwalteten Speicherzeiger.":"将数据从 8 位无符号整数的一维托管数组复制到非托管内存指针。\r\n","Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.":"将指定 Unicode 字符的值转换为等效的 64 位无符号整数。\r\n","Das Handle des sicherungsfähigen Objekts, dem das ":"安全对象的句柄\r\n","Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 16-битовое целое число со знаком.":"将指定的 8 位无符号整数的值转换为等效的 16 位有符号整数。\r\n","Die Zahl, durch die ":"由哪个数字\r\n","При удачном возвращении содержит фактическое число байтов, записанных в поток назначения. ":"成功返回时，包含写入目标流的实际字节数。\r\n","COM 이벤트가 발생될 때 호출할 대리자입니다.":"COM事件发生时要调用的委托。\r\n","Gibt an, dass der Inhalt des Felds \"Reserved\" gültig ist.":"表示Reserved字段的内容有效。\r\n","Определяет соглашение о вызове, используемое для вызова методов, реализованных в неуправляемом коде.":"Определяет соглашение о вызове, используемое для вызова методов, реализованных в неуправляемом коде。\r\n","< 0(모든 값)NaN(모든 값)":"< 0（所有值）NaN（所有值）\r\n","Ein COM-IUnknown-Zeiger.Sie können diesen Member für den ":"COM IUnknown 指针。您可以将此成员用于\r\n","> 1minus unendlich":"> 1 减无穷大\r\n","Die 64-Bit-Ganzzahl mit Vorzeichen, die aus dem nicht verwalteten Speicher gelesen wurde.":"从非托管内存中读取的 64 位有符号整数。\r\n","-Klasse mit einem Objekt, das das HRESULT des Fehlers enthält.":"类的对象包含错误的 HRESULT。\r\n","Определяет конфигурацию сборки (отладочная или коммерческая версия) для сборки.":"指定构建的构建配置（调试或商业）。\r\n","Увеличивает значение ":"增加价值\r\n","Преобразует значение заданного 16-разрядного знакового целого числа в эквивалентное число с плавающей запятой двойной точности.":"将指定的 16 位带符号整数的值转换为其等效的双精度浮点数。\r\n","Значение HRESULT, показывающее, успешно ли выполнен вызов.":"指示调用是否成功的 HRESULT。\r\n","Выполняет поиск этого моникера в таблице текущих объектов (ROT) и сообщает записанное время изменения, если моникер найден.":"搜索此名字对象的当前对象表 (ROT)，如果找到名字对象，则报告记录的更改时间。\r\n","0보다 크거나 같고 ":"大于或等于 0\r\n","Gibt eine Klassen-ID an.":"指定类 ID。\r\n","Объединенные пути.":"联合路径。\r\n","ITypeLib2 인터페이스의 관리되는 정의를 제공합니다.":"提供 ITypeLib2 接口的托管定义。\r\n","과 반환할 요소 수의 합이 ":"要返回的元素数是\r\n"," umgewandelt werden, oder der ":" 被转换，或者\r\n"," Array decodiert werden.":" 要解码的数组。\r\n","Gibt den kleineren der beiden ":"给出两者中较小的一个\r\n","에 대한 비트 1의 보수입니다.":"是 bit 的补充。\r\n","Obtiene o establece un valor que indica al motor de serialización que el miembro debe estar presente durante la lectura o la deserialización.":"Obtiene o establece un valor que indica al motor de serialización que el miembro debe estar presente durante la lectura o la deserialización。\r\n","Нуль ":"零\r\n","Die Anzahl der möglichen Zugriffssteuerungseinträge (ACEs – Access Control Entries), die dieses ":"这可能的访问控制条目 (ACE) 的数量\r\n","필요한 요소가 포함된 배열입니다. ":"包含所需元素的数组。\r\n","Значение true используется для перечисления моникеров слева направо.Значение false используется для перечисления справа налево.":"True 用于从左到右枚举名字对象。False 用于从右到左枚举。\r\n","-Objekts in den Wert einer 16-Bit-Ganzzahl ohne Vorzeichen.":"对象为 16 位无符号整数的值。\r\n","При возвращении данного метода содержит строку, задающую имя заданного элемента.Этот параметр передается без инициализации.":"当此方法返回时，包含一个字符串，指定指定元素的名称。此参数无需初始化即可传递。\r\n","Die Identität der Klasse von untergeordneten Objekten, die die entfernte Zugriffssteuerungsregel erben können.":"可以继承远程访问控制规则的子对象类的标识。\r\n","При возвращении данного метода содержит ссылку на интерфейс, запрошенный ":"当此方法返回时，包含对所请求接口的引用\r\n","Предоставляет управляемое определение интерфейса IConnectionPoint.":"提供 IConnectionPoint 接口的托管定义。\r\n","-Strukturen, die in ":"- 中的结构\r\n"," denselben ":" 相同\r\n","null이 아니고 함수가 서수에 의해 정의되면 ":"如果不为空且函数由序数定义\r\n","Декодируемый массив ":"解码阵列\r\n","Die zuvor für den Bereich festgelegten Zugriffsbeschränkungen. ":"之前为空间设置的访问限制。\r\n","Добавляет элемент в интерфейс ":"向界面添加元素\r\n"," den Wert null aufweist, gibt die Methode eine NULL-Zeichenfolge zurück.":" 为 null，该方法返回 NULL 字符串。\r\n","Valor entero de 32 bits sin signo.":"Valor entero de 32 位 sin signo。\r\n","Der Typ der zurückzugebenden Schnittstelle. ":"要返回的接口类型。\r\n","Уникальная оболочка RCW для указанного интерфейса IUnknown.":"指定 IUnknown 接口的唯一 RCW 包装器。\r\n","Представляет недопустимый собственный дескриптор операционной системы.Это поле доступно только для чтения.":"表示无效的本机操作系统句柄。此字段是只读的。\r\n","멤버의 DISPID를 가져옵니다.":"获取成员的DISPID。\r\n","Преобразует значение заданного 32-разрядного целого числа без знака в эквивалентный символ Юникода.":"将指定的 32 位无符号整数的值转换为其等效的 Unicode 字符。\r\n","-Parameter überschreitet die systemdefinierte maximale Länge.":"- 参数超过系统定义的最大长度。\r\n","Указанное для заданной операции значение меньше текущей длины данного экземпляра.-или- Указанное для заданной операции значение больше, чем максимальная емкость. ":"为指定操作指定的值小于此实例的当前长度。- 或- 为指定操作指定的值大于最大容量。\r\n"," 개체를 부호 있는 64비트 정수 값으로 변환하는 명시적 변환을 정의합니다.":" 定义显式转换以将对象转换为带符号的 64 位整数值。\r\n","지정된 밑을 사용하여 지정된 숫자의 로그를 반환합니다.":"使用指定底数返回指定数字的对数。\r\n"," меньше единицы, ":" 少于一个\r\n","로그가 있는 숫자입니다. ":"具有对数的数字。\r\n","-Klasse aus einer Zeichenfolge und einem ":"来自一个字符串和一个类\r\n","숫자의 지정된 문자열 표현을 해당하는 64비트 부호 없는 정수로 변환합니다.":"将数字的指定字符串表示形式转换为其等效的 64 位无符号整数。\r\n","Erstellt einen neuen Moniker auf der Grundlage des Präfixes, das dieser Moniker mit einem anderen gemeinsam hat.":"根据此名字对象与另一个名字对象共享的前缀创建一个新的名字对象对象。\r\n"," содержит знак не из base 64, более чем два символа заполнения, или другой символ (не пробел) среди символов заполнения.":" 包含非 base 64 字符、两个以上的填充字符或填充字符中的另一个字符（不是空格）。\r\n","Eine aus ANSI-Zeichen bestehende, mit NULL beendete Einzelbyte-Zeichenfolge.Sie können diesen Member für den ":"一个单字节、以 null 结尾的 ANSI 字符字符串。您可以将此成员用于\r\n"," интерфейса-источника. ":" 源接口。\r\n","개체에 대한 인터페이스를 나타내는 인터페이스 포인터입니다.":"表示对象接口的接口指针。\r\n"," интерфейса-источника, используемого по умолчанию. ":" 默认源接口。\r\n"," ist kein gültiger Datums- und Uhrzeitwert.":" 不是有效的日期和时间值。\r\n","Вставляет строковое представление указанного символа Юникода в данный экземпляр на указанную позицию символа.":"将指定 Unicode 字符的字符串表示形式插入此实例的指定字符位置。\r\n","-Eigenschaften erstellte URI ist ungültig. ":"-Properties 构造的 URI 无效。\r\n","지정된 개체 포인터를 내부적으로 유지되는 개체 포인터 테이블에 지정된 이름으로 등록합니다.":"在内部维护的对象指针表中注册具有指定名称的指定对象指针。\r\n","Die zurückzugebende Gleitkommazahl mit einfacher Genauigkeit. ":"要返回的单精度浮点数。\r\n","Erstellt ein eindeutiges Runtime Callable Wrapper (RCW)-Objekt (RCW) für eine angegebene IUnknown-Schnittstelle.":"为给定的 IUnknown 接口创建唯一的运行时可调用包装器 (RCW) 对象 (RCW)。\r\n","Gibt eine auf NULL endende Zeichenfolge an.":"指定以 null 结尾的字符串。\r\n","두 복소수를 더합니다.":"添加两个复数。\r\n","비관리 코드에서 지정된 형식의 크기입니다.":"非托管代码中指定类型的大小。\r\n","의 아크탄젠트인 각도입니다.":"是角，它是的反正切\r\n","Die Vererbungseigenschaften der Zugriffsregel.":"访问规则的继承属性。\r\n","Eine 4-Byte-Ganzzahl ohne Vorzeichen.":"一个 4 字节无符号整数。\r\n","Возвращает указанное значение двойной точности с плавающей запятой в виде массива байтов.":"Возвращает указанное значение двойной точности с плавающей запятой в виде массива байтов。\r\n","지정된 단정밀도 부동 소수점 숫자 값을 해당하는 8비트 부호 있는 정수로 변환합니다.":"将指定的单精度浮点数的值转换为等效的 8 位带符号整数。\r\n",", исключение не создается.":", 不会抛出异常。\r\n","Первое из двух сравниваемых 32-разрядных целых чисел без знака. ":"要比较的两个无符号 32 位整数中的第一个。\r\n","지정된 64비트 부호 있는 정수의 값을 해당하는 32비트 부호 없는 정수로 변환합니다.":"将指定的 64 位带符号整数的值转换为等效的 32 位无符号整数。\r\n","Gibt einen Währungswert an.":"指定货币值。\r\n","-Wert in ein Bytearray.":"值转换为字节数组。\r\n","Создает, изменяет или удаляет переменную среды, хранящуюся в текущем процессе.":"创建、修改或删除存储在当前进程中的环境变量。\r\n","플랫폼에 종속적인 부호 있는 정수로, 32비트 Windows의 경우 4바이트이고 64비트 Windows의 경우 8바이트입니다.":"平台相关的有符号整数，在 32 位 Windows 上为 4 个字节，在 64 位 Windows 上为 8 个字节。\r\n","Преобразует заданное строковое представление числа в эквивалентное 32-битовое целое число без знака, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"给定指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的 32 位无符号整数。\r\n","\"C:\\MyFile.txt\"처럼 ":"比如“C:\\MyFile.txt”\r\n","Der Objekttyp, der dem ACE zugeordnet ist, ist vorhanden.":"与 ACE 关联的对象类型存在。\r\n","수집을 반드시 시작해야 하는 시점을 지정하는 값입니다.":"指定集合必须何时启动的值。\r\n","Die Anzahl der Moniker, die in ":"中的绰号数量\r\n","Die abzufragende Schnittstelle.":"查询的接口。\r\n","복소수의 위상(라디안 단위)입니다.":"以弧度为单位的复数相位。\r\n","IEnumString 인터페이스의 정의를 관리합니다.":"管理 IEnumString 接口的定义。\r\n","지정된 16비트 부호 없는 정수의 값을 해당하는 16비트 부호 있는 정수로 변환합니다.":"将指定的 16 位无符号整数的值转换为等效的 16 位有符号整数。\r\n","제한할 범위의 길이(바이트)입니다. ":"要限制的跨度的长度，以字节为单位。\r\n"," 형식을 위한 적절한 서식에 ":" 以适合表格的格式\r\n","Определяет конкретную библиотеку типов и предоставляет поддержку локализации имен элементов.":"定义特定类型库并提供对元素名称本地化的支持。\r\n","El nombre para aplicar a los elementos de la colección.":"El nombre para applicator a los elements de la colección。\r\n","Ein Zeichen, das beginnend bei ":"Ein Zeichen, das beginnend bei\r\n","Marshallt Daten aus einem nicht verwalteten Speicherblock zu einem verwalteten Objekt.":"将非托管内存块中的数据编组到托管对象。\r\n","Ein Divisor. ":"除数。\r\n","Gibt den Rest der Division zweier angegebener Zahlen zurück.":"返回两个指定数字相除的余数。\r\n",", возвращается это значение.":", 返回此值。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende Dezimalzahl.":"将指定的单精度浮点数的值转换为其等效的十进制数。\r\n","의 바이트 수를 포함하는 32비트 부호 있는 정수를 반환합니다.":"返回一个 32 位有符号整数，其中包含字节数\r\n"," в виде типа.":" 作为一种类型。\r\n","상수, e로 지정된 자연 로그의 밑을 나타냅니다.":"表示常数 e 指定的自然对数的底数。\r\n","Функция доступна таким же образом, как и ":"该功能的可用方式与\r\n"," имеет меньшее количество цифр дробной части, чем ":" 小数位数少于\r\n"," in den ":" 在里面\r\n","래핑 중인 개체입니다. ":"被包裹的对象。\r\n","Знаковое целое число, определяющее, как соотносятся между собой данный экземпляр и объект ":"一个有符号整数，指定给定实例和对象如何相互关联\r\n","에 해당하는 8비트 부호 없는 정수 배열입니다.":"等效于 的 8 位无符号整数数组。\r\n","지정된 배열의 지정된 인덱스에 있는 요소의 주소를 가져옵니다.":"获取指定数组中指定索引处的元素的地址。\r\n","-Argument des ":"-论点\r\n","문자열 매개 변수를 메서드로 마샬링하는 방법을 지정하고 이름 관리를 제어합니다.":"指定字符串参数如何封送到方法和控件名称管理。\r\n"," является null, и версией платформы .NET Framework является 1.0 или 1.1. ":" 为空且 .NET Framework 版本为 1.0 或 1.1。\r\n","Записывает в неуправляемую память с указанным смещением целое число, разрядность которого соответствует собственной разрядности процессора.":"在指定的偏移量处向非托管内存写入一个整数，其位宽与处理器自身的位宽相匹配。\r\n","변수의 속성을 정의하는 상수를 나타냅니다.":"表示定义变量属性的常量。\r\n"," dar (z. B. \"7F-2C-4A-00\").":" （例如“7F-2C-4A-00”）。\r\n","설명 섹션의 테이블과 같이 ":"설명 섹션의 테이블과 같이\r\n","Das sichere Handle, welches das Betriebssystem-Handle umschließt. ":"包装操作系统句柄的安全句柄。\r\n","2-байтовое целое число без знака.":"2 字节无符号整数。\r\n","Gibt einen Wert zurück, der das Vorzeichen einer 16-Bit-Ganzzahl mit Vorzeichen angibt.":"返回一个值，该值指示 16 位有符号整数的符号。\r\n","Gibt an, ob der Wert des aktuellen ":"指示当前值是否\r\n","Смещение в байтах для начала диапазона. ":"开始范围的字节偏移量。\r\n","true 또는 false이며, ":"是真还是假；\r\n","매개 변수에 사용자 지정 데이터가 있습니다.":"参数具有自定义数据。\r\n","Макет ":"布局\r\n",".Вызывающий оператор не имеет разрешения на доступ к данному члену.":".调用者没有访问该成员的权限。\r\n"," es igual a la longitud de ":" 它 igual a la longitud de\r\n","Die 16-Bit-Ganzzahl mit Vorzeichen, die am angegebenen Offset aus dem nicht verwalteten Arbeitsspeicher gelesen wurde.":"从指定偏移量处的非托管内存中读取的 16 位有符号整数。\r\n","Возвращает или задает пространство имен среды CLR для типа контракта данных. ":"Возвращает или задает пространство имен среды CLR для типа контракта данных。\r\n","관리되지 않는 메모리의 지정된 오프셋 위치에 싱글바이트 값을 씁니다.":"将单字节值写入指定偏移量的非托管内存。\r\n","Маршалирует данные из неуправляемого блока памяти в управляемый объект.":"将非托管内存块中的数据编组到托管对象。\r\n","곱할 첫 번째 숫자입니다.":"곱할첫번째숫자입니다。\r\n"," имеют разные типы и не могут сравниваться друг с другом.":" 类型不同，不能相互比较。\r\n","При возвращении данного метода содержит ссылку на интерфейс ITypeComp содержащей библиотеки типов.Этот параметр передается без инициализации.":"当此方法返回时，包含对包含类型库的 ITypeComp 接口的引用。此参数无需初始化即可传递。\r\n","Die Phase einer komplexen Zahl im Bogenmaß.":"以弧度为单位的复数相位。\r\n","Показывает, что расширения имен основных интерфейсов должны проверяться перед проверкой дочерних элементов, в отличие от поведения по умолчанию.":"指示在检查子元素之前应检查主界面的名称扩展，这与默认行为相反。\r\n","해당 클래스에 대해 클래스 인터페이스가 생성되지 않음을 나타냅니다.명시적으로 구현되는 인터페이스가 없으면 런타임에 바인딩될 때 IDispatch 인터페이스를 통해서만 클래스에 액세스할 수 있습니다.이것이 ":"指示没有为该类创建类接口。如果没有显式实现的接口，则只有在运行时绑定时才能通过IDispatch接口访问类。这是 \r\n","에 정의된 잘못된 문자가 하나 이상 포함되어 있는 경우또는 ":"包含一个或多个在或中定义的无效字符\r\n","Valor de punto flotante de precisión sencilla.":"Valor de punto flotante de precision sencilla。\r\n","Данные не передаются.":"不传输数据。\r\n","Definiert eine implizite Konvertierung einer 32-Bit-Ganzzahl ohne Vorzeichen in einen ":"定义 32 位无符号整数到\r\n"," меньше нуля.-или- ":" 小于零。-或-\r\n","Следует убедиться, что все изменения, внесенные в объект потока, открытый в режиме транзакций, отражены в родительском хранилище.":"您必须确保对以事务模式打开的流对象所做的任何更改都反映在父存储中。\r\n","수집을 시작할 시점을 지정하는 값을 가져옵니다.":"获取指定何时启动集合的值。\r\n","개체의 현재 작업 파일의 절대 경로를 검색하거나 현재 작업 파일이 없는 경우에는 개체의 기본 파일 이름 프롬프트를 검색합니다.":"获取对象当前工作文件的绝对路径，如果当前工作文件不存在则获取对象的默认文件名提示。\r\n","-Objekts eine Potenz von Zwei ist, andernfalls false.":"对象是二的幂，否则为假。\r\n","Ожидает получения сигнала любыми элементами указанного массива, используя 32-разрядное целое число со знаком для задания интервала времени.":"等待指定数组的任何元素接收信号，使用带符号的 32 位整数指定时间间隔。\r\n","Ruft die DISPID des Members ab.":"获取成员的 DISPID。\r\n","Выполните поиск в каталоге приложения, а затем вызовите функцию Win32 LoadLibraryEx с флагом LOAD_WITH_ALTERED_SEARCH_PATH.Это значение пропускается, если указано любое другое значение.Операционные системы, которые не поддерживают атрибут ":"搜索应用程序目录，然后使用 LOAD_WITH_ALTERED_SEARCH_PATH 标志调用 Win32 LoadLibraryEx 函数。如果指定任何其他值，则省略该值。不支持该属性的操作系统\r\n","Kopiert Daten aus einem nicht verwalteten Speicherzeiger in ein verwaltetes Array von 32-Bit-Ganzzahlen mit Vorzeichen.":"将数据从非托管内存指针复制到托管的 32 位带符号整数数组。\r\n","Sucht in der Running Object Table (ROT) nach diesem Moniker und teilt ggf. die aufgezeichnete Änderungszeit mit.":"在运行对象表 (ROT) 中查找此名字对象并报告记录的修改时间（如果有）。\r\n","Представляет указатель на значение, передаваемое между процессами.":"表示指向在进程之间传递的值的指针。\r\n"," 열거형에서 가져온 값이 포함되어 있습니다.":" 它包含来自枚举的值。\r\n"," в любом формате какие спецификация заменяется строковое представление ":" 以字符串表示形式替换规范的任何格式\r\n"," в системе счисления с основанием ":" 在基数系统中\r\n","Obtiene o establece el espacio de nombres del contrato de datos para el tipo.":"Obtiene o establece el espacio de nobres del contrato de datos para el tipo。\r\n","Legt die primäre Gruppe für die Sicherheitsbeschreibung fest, die diesem ":"设置与此关联的安全描述符的主要组\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 32비트 부호 있는 정수 값을 해당하는 문자열 표현으로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定的 32 位带符号整数值转换为其等效的字符串表示形式。\r\n","Devuelve el valor entero con signo de 16 bytes especificado como una matriz de bytes.":"Devuelve el valor entero con signo de 16 bytes especificado como una matrix de bytes。\r\n","Внешний указатель IUnknown.":"外部 IUnknown 指针。\r\n","-Struktur mit den angegebenen reellen und imaginären Werten.":"- 具有指定实部和虚部值的结构。\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.":"将指定的 16 位无符号整数的值转换为等效的 8 位有符号整数。\r\n","-Klasse mit der angegebenen Aufrufkonvention. ":"具有指定调用约定的类。\r\n","생성될 난수의 상한(제외)입니다.":"要生成的随机数数量的上限（不包括）。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.":"将指定的双精度浮点数的值转换为等效的 64 位带符号整数。\r\n","Der Schnittstellenzeiger, der von der ":"返回的接口指针\r\n","가 캡처하는 ":"正在捕获\r\n","Gibt an, dass eine Schnittstelle für COM als eine -Dispatchschnittstelle verfügbar gemacht wird, wodurch nur spätes Binden ermöglicht wird.":"指定接口作为调度接口公开给 COM，只允许后期绑定。\r\n","Fehlgeschlagene Zugriffsversuche werden überwacht.":"监控失败的访问尝试。\r\n","Значение true, если 64-разрядное целое число со знаком и текущий экземпляр равны; в противном случае — значение false.":"如果 64 位有符号整数与当前实例相等，则为真；否则，假的。\r\n","지정된 64비트 부호 없는 정수의 값을 해당하는 32비트 부호 있는 정수로 변환합니다.":"将指定的 64 位无符号整数的值转换为等效的 32 位有符号整数。\r\n"," 내의 위치입니다. ":" 这是里面的一个位置。\r\n","가 같지 않으면 true이고, 그렇지 않으면 false입니다.":"如果不相等则为真；否则为假。\r\n","관리되는 개체에 대한 핸들에서 만든 새 ":"在托管对象的句柄中创建的新 \r\n","-Struktur annimmt und einen HRESULT-Wert zurückgibt.Wenn ein verzögertes Ausfüllen nicht gewünscht wird, wird dieses Feld auf null festgelegt.":"结构并返回一个 HRESULT 值。如果不需要延迟完成，则此字段设置为空。\r\n"," меньше нуля или больше длины данного экземпляра.":" 小于零或大于此实例的长度。\r\n","Gibt eine vorzeichenlose 64-Bit-Ganzzahl zurück, die aus acht Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.":"返回从字节数组中指定位置的八个字节转换而来的 64 位无符号整数。\r\n","이 저장소, 스트림 또는 바이트 배열에 대한 마지막 액세스 시간을 나타냅니다. ":"指示上次访问此存储、流或字节数组的时间。\r\n","-Objekt zugeordnet ist, oder legt dieses fest.":"对象关联或设置它。\r\n","COM 멤버의 형식을 설명합니다.":"描述COM成员的类型。\r\n"," 인터페이스를 구현하지 않는 경우 또는변환이 지원되지 않는 경우":" 如果不实现接口或者不支持转换\r\n","Ein Winkel θ im Bogenmaß im Bereich 0 ≤θ≤π- oder -  ":"以弧度为单位的角度 θ 在 0 ≤θ≤π- 或 - 范围内\r\n","Ruft die Phase einer komplexen Zahl ab.":"获取复数的相位。\r\n","Das Ausgabearray, in das geschrieben werden soll.":"要写入的输出数组。\r\n"," ist und dessen Wert ":" 是和它的价值\r\n","변수가 VT_SAFEARRAY나 VT_PTR이면, lpValue 필드에 요소 형식을 지정하는 TYPEDESC에 대한 포인터가 들어 있습니다.":"如果变量是 VT_SAFEARRAY 或 VT_PTR，则 lpValue 字段包含指向指定元素类型的 TYPEDESC 的指针。\r\n","Идентификатор элемента для описания типа. ":"描述类型的元素 ID。\r\n","Запрашивает указатель на заданный интерфейс из COM-объекта.":"从 COM 对象请求指向指定接口的指针。\r\n","Gibt das zu umschließende Handle an.":"指定要换行的句柄。\r\n","Значение true, если наилучшее сопоставление включено; в противном случае — значение false.Значение по умолчанию — true.":"Значение true, если наилучшее сопоставление включено; в противном случае — значение false. Значение по умолчанию — true.\r\n","Преобразует значение заданного объекта в эквивалентное 8-разрядное знаковое целое число, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用指定的区域性特定格式设置信息将指定对象的值转换为其等效的 8 位带符号整数。\r\n","와 같으면 이 메서드는 1을 반환합니다.":"，则此方法返回 1。\r\n","Битовая комбинация флагов ":"标志位组合\r\n","Das zweite zu vergleichende ":"第二个比较\r\n","Уведомляет все зарегистрированные приемники уведомлений, что объект был сохранен.Этот метод вызывается сервером.":"通知所有已注册的通知接收者该对象已保存。该方法由服务器调用。\r\n","Initialisiert eine neue Instanz der OptionalAttribute-Klasse mit Standardwerten.":"使用默认值初始化 OptionalAttribute 类的新实例。\r\n","의 요소 중에서 변환할 요소의 수입니다. ":"要转换的元素数。\r\n","을 사용하여 할당된 메모리에 대한 포인터입니다.":"指向使用分配的内存的指针。\r\n","Die zweite von zwei zu vergleichenden 16-Bit-Ganzzahlen ohne Vorzeichen. ":"要比较的两个 16 位无符号整数中的第二个。\r\n",", округленное до ближайшего 8-разрядного целого числа без знака.Если ":", 四舍五入到最接近的无符号 8 位整数。如果\r\n"," при вызове для базового типа параметра ":" 当调用底层参数类型时\r\n","내부적으로 유지되는 컨텍스트 개체 매개 변수 테이블의 지정된 키가 현재 등록되어 있으면 해당 키 아래에 있는 개체의 등록을 취소합니다.":"如果当前已注册，则在内部维护的上下文对象参数表中取消注册指定键下的对象。\r\n","Позволяет указать, является ли этот метод методом конечного автомата.":"让您指定此方法是否为状态机方法。\r\n","Der Index des Implementierungstyps für die benutzerdefinierten Daten. ":"自定义数据的实现类型索引。\r\n","Legt fest, ob das ":"确定是否\r\n","Меньшее из значений двух параметров, ":"两个参数取值较小者，\r\n","Тип значения, считанный из памяти.":"从内存中读取的值的类型。\r\n","-Klasse verwendeten, nicht verwalteten Ressourcen frei und gibt an, ob ein normaler Freigabevorgang ausgeführt werden soll.":"class releases used unmanaged resources 表示是否进行正常的释放操作。\r\n","Значение, связанное с элементом перечисления.":"与枚举元素关联的值。\r\n"," = не число(любое значение)NaN(любое значение)":" = 不是数字（任何值）NaN（任何值）\r\n","-Schnittstelle konvertiert wurde.":"接口已转换。\r\n","Gibt an, dass das Handle nicht von untergeordneten Prozesse geerbt werden kann.":"Gibt an, dass das Handle nicht von untergeordneten Prozesse geerbt werden kann。\r\n","Предоставляет способ доступа к управляемому объекту из неуправляемой памяти.":"提供一种从非托管内存访问托管对象的方法。\r\n"," sind ungültig. ":" 无效。\r\n","숫자의 지정된 문자열 표현을 해당하는 32비트 부호 없는 정수로 변환합니다.":"将数字的指定字符串表示形式转换为其等效的 32 位无符号整数。\r\n","Gibt an, dass für die Klasse automatisch eine duale Klassenschnittstelle generiert und für COM verfügbar gemacht wird.Für die Klassenschnittstelle werden Typinformationen erstellt und in der Typbibliothek veröffentlicht.Aufgrund der unter ":"指定为该类自动生成一个双类接口并暴露给COM。为类接口创建类型信息并发布到类型库中。由于下\r\n","Gibt einen Wert zurück, der das Vorzeichen einer ganzen Zahl angibt.":"返回一个指示整数符号的值。\r\n","Преобразует массив 8-разрядных целых чисел без знака в эквивалентное строковое представление, состоящее из цифр в кодировке Base64.":"将无符号 8 位整数数组转换为其等效的 Base64 编码数字字符串表示形式。\r\n","[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt] Marshallt Daten aus einem nicht verwalteten Speicherblock zu einem verwalteten Objekt eines festgelegten Typs. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 将非托管内存块中的数据封送到指定类型的托管对象。\r\n","지정된 8비트 부호 있는 정수의 값을 해당하는 16비트 부호 없는 정수로 변환합니다.":"将指定的 8 位有符号整数的值转换为等效的 16 位无符号整数。\r\n","-Objekt für den Schreibzugriff.":"- 用于写访问的对象。\r\n"," является классом моникера, с которым текущий моникер может быть объединен каким-либо способом, кроме образования универсального объединения.Значение false показывает, что при необходимости метод может создать универсальное объединение.":" 是一个名字对象类，当前名字对象可以通过某种方式与其组合，而不是形成通用联合。值 false 表示该方法可以在必要时创建通用联合。\r\n","Ändert die Erweiterung einer Pfadzeichenfolge.":"更改路径字符串的扩展名。\r\n","Получает или задает ключ в паре ключ/значение.":"获取或设置键/值对中的键。\r\n",", поскольку клиенты могут использовать только позднее связывание с интерфейсом.":"，因为客户端只能使用后期绑定到接口。\r\n","Der nullbasierte Index im Quellarray, an dem der Kopiervorgang beginnen soll.":"源数组中从零开始的索引，从这里开始复制。\r\n","Ruft den Typ des Objekts ab, dem die Zugriffsregeln dieses ObjectSecurity’1-Objekts zugeordnet sind. ":"获取与此 ObjectSecurity'1 对象的访问规则关联的对象类型。\r\n","Возвращает или задает значение, указывающее, следует ли сериализовать значение по умолчанию сериализуемого поля или свойства. ":"获取或设置一个值，该值指示是否应序列化可序列化字段或属性的默认值。\r\n","Значение true для отслеживания объекта после финализации; значение false для отслеживания объекта только до финализации.":"true 以在完成后跟踪对象； false 仅在完成之前跟踪对象。\r\n","Недостаточно памяти для выделения буфера, необходимого для вычисления хэш-кода.":"没有足够的内存来分配计算哈希码所需的缓冲区。\r\n","Überspringt eine angegebene Anzahl von Elementen in der Enumerationsfolge.":"跳过枚举序列中指定数量的项目。\r\n","Преобразует значение заданного 32-битового целого числа без знака в эквивалентное 32-битовое целое число со знаком.":"将指定的 32 位无符号整数的值转换为等效的 32 位有符号整数。\r\n"," представляет номер, который находится вне диапазона для типа ":" 表示超出类型范围的数字\r\n"," не имеет значения null.Нуль":" 不为空。为空\r\n","Библиотека типов ограничена и не должна отображаться для пользователей.":"类型库是有限的，不应该暴露给用户。\r\n","Entfernt alle geerbten Zugriffssteuerungseinträge (ACEs) aus diesem ":"从此删除所有继承的访问控制条目 (ACE)\r\n","동일 형식에 대한 지원을 제공합니다.":"它提供对相同格式的支持。\r\n","Eine Zahl, die einen Sinus darstellt, wobei ":"代表正弦的数字，其中\r\n","마지막으로 저장된 이후 개체의 변경 사항을 검사합니다.":"检查对象自上次保存以来的变化。\r\n","IID마다 하나의 연결점이 있는 연결 가능한 개체에서 지원되는 모든 연결점의 열거자를 만듭니다.":"创建一个可连接对象支持的所有连接点的枚举器，每个 IID 有一个连接点。\r\n","Объект, действующий как контролирующий IUnknown. ":"充当 IUnknown 控制器的对象。\r\n"," не поддерживает запрошенный интерфейс. ":" 不支持请求的接口。\r\n",", этот метод возвращает 1.Если значение параметра ":", 该方法返回1.如果参数的值\r\n","Legt das Handle für das angegebene, bereits vorhandene Handle fest.":"为已存在的给定句柄设置句柄。\r\n","Размер выделяемого блока памяти.":"分配的内存块的大小。\r\n","Gibt einen Wert zurück, der angibt, ob die aktuelle Instanz und ein angegebenes Objekt über den gleichen Wert verfügen.":"返回一个值，该值指示当前实例和指定对象是否具有相同的值。\r\n","비교할 두 개의 32비트 부호 없는 정수 중 두 번째 숫자입니다. ":"要比较的两个 32 位无符号整数中的第二个。\r\n","Производный класс находится в сборке без разрешения доступа для неуправляемого кода. ":"Производный класс находится в сборке без разрешения доступа для неуправляемого кода。\r\n","Diese Methode gibt die Typbeschreibung zurück, auf die verwiesen wird.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回引用的类型描述。此参数未初始化传递。\r\n"," для кодирования.":" 用于编码。\r\n",",NaN은 ":",NaN 是\r\n","Verringert die aktuelle Anzahl der Handles.":"减少当前句柄数。\r\n","Определяет неявное преобразование 32-битового целого числа без знака в значение ":"定义 32 位无符号整数到值的隐式转换\r\n","내부적으로 유지되는 컨텍스트 개체 매개 변수 테이블의 키인 문자열을 열거합니다.":"枚举作为内部维护的上下文对象参数表中的键的字符串。\r\n","Одно из значений перечисления, определяющее, нужно ли применять пользовательскую настройку IUnknown::QueryInterface, предоставленную в интерфейсе ":"指定是否使用接口中提供的 IUnknown::QueryInterface 自定义设置的枚举值之一\r\n","Строка, содержащая подстроку, применяемую для инициализации значения этого экземпляра.Если ":"包含用于初始化此实例值的子字符串的字符串。如果\r\n","Der zweite Wert.":"第二个值。\r\n"," zum Zeigen auf die Ordnungszahl festgelegt. ":" 设置为指向原子序数。\r\n","Die Methode gibt einen Verweis auf den Moniker zurück, der aus ":"该方法返回对来自\r\n","이 메서드는 반환될 때 바인딩 대상 VARDESC, FUNCDESC 및 ITypeComp 인터페이스에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含对要绑定到的 VARDESC、FUNCDESC 和 ITypeComp 接口的引用。此参数在未初始化的情况下传递。\r\n","Предоставляет сведения о текущей среде и платформе, а также необходимые для управления ими средства.Этот класс не наследуется.":"提供有关当前环境和平台的信息，以及管理它们所需的工具。此类不被继承。\r\n",", задающего метод инициализации (параметр ":"，它指定了初始化方法（参数\r\n"," 매개 변수의 값을 가져옵니다.":" 获取参数的值。\r\n","로의 변환이 지원되지 않습니다. ":"不支持转换为。\r\n","Flags, die die Vererbungseigenschaften der Regel angeben, die entfernt werden sollen.":"指定要删除的规则的继承属性的标志。\r\n","Ruft Flags ab, die die Eigenschaften der Vererbungsweitergabe für diesen ACE (Access Control Entry, Zugriffssteuerungseintrag) angeben.":"获取指定此访问控制项 (ACE) 的继承传播属性的标志。\r\n","Rundet einen Dezimalwert auf die nächste Ganzzahl.Ein Parameter gibt an, wie der Wert gerundet wird, wenn er genau zwischen zwei Zahlen liegt.":"Rounds a decimal value to the nearest integer. 一个参数指定如果该值恰好在两个数字之间如何舍入。\r\n","Die einzuschließenden Abschnitte. ":"要包括的部分。\r\n","Возвращает перечисление TYPEKIND быстро, не выполняя распределения.":"无需任何分配即可快速返回 TYPEKIND 枚举。\r\n","Определяет исходный интерфейс и класс, реализующий методы интерфейса события, созданного при импортировании совместного класса из библиотеки COM-типов.":"定义源接口和实现通过从 COM 类型库导入共享类生成的事件接口的方法的类。\r\n","Объект для вставки или значение null. ":"要插入的对象，或 null。\r\n",", добавленное в конец ":"添加到最后\r\n","-Parameter unterschiedliche .NET Framework-Versionen darstellen, andernfalls false.":"参数表示不同的 .NET Framework 版本，否则为 false。\r\n","-Objekt ab, das die Standardschnittstelle angibt, die für COM verfügbar gemacht werden soll.":"对象指定公开给 COM 的默认接口。\r\n","Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 32-битовое целое число со знаком.":"将指定的单精度浮点数的值转换为等效的 32 位带符号整数。\r\n","При переопределении в производном классе позволяет определить, равны ли две строки.":"在派生类中重写时，确定两个字符串是否相等。\r\n","64-разрядное знаковое целое число. ":"64 位有符号整数。\r\n","Идентификатор элемента, показывающий, какие необходимы сведения о маршалинге. ":"指示需要什么编组信息的元素 ID。\r\n"," beschriebenen Versionsprobleme auf, da für Clients nur spätes Binden an die Schnittstelle möglich ist.":" 描述的版本问题，因为客户端只能晚绑定接口。\r\n","Die Zeichenfolgendarstellung von ":"的字符串表示\r\n","< 1 plus unendlich":"< 1 加上无穷大\r\n","Записывает в неуправляемую память 16-битное целое число.":"将 16 位整数写入非托管内存。\r\n"," превышает доступное место в целевом массиве ":" 超出了目标数组的可用空间\r\n","Stellt ein plattformspezifisches Volumetrennzeichen bereit.":"提供特定于平台的卷分隔符。\r\n","모니커를 왼쪽에서 오른쪽으로 열거하려면 true이고,오른쪽에서 왼쪽으로 열거하려면 false입니다.":"true 从左到右枚举名字对象；false 从右到左枚举。\r\n","Reserviert ein Handle vom angegebenen Typ für das angegebene Objekt.":"为指定对象保留指定类型的句柄。\r\n","Stellt ein Benutzerkonto dar. ":"表示一个用户帐户。\r\n","Gibt an, ob der Zustand vor der Ausnahme wiederhergestellt werden kann und ob der Code ab der Stelle, an der die Ausnahme ausgelöst wurde, weiter ausgeführt werden kann.":"表示是否可以恢复异常前的状态，代码是否可以从抛出异常的地方继续运行。\r\n",", указывающих версию платформы .NET Framework.":"，它指定 .NET Framework 的版本。\r\n"," в порядке сортировки.-или-":" 按排序顺序。-或-\r\n","32-разрядное целое число х со знаком, такое что 0 ≤ x ≤":"32 位有符号整数 x 满足 0 ≤ x ≤\r\n","Освобождает все ресурсы, связанные с дескриптором.":"Освобождает все ресурсы, связанные с десриптором。\r\n","거듭제곱을 지정하는 배정밀도 부동 소수점 숫자입니다. ":"指定幂的双精度浮点数。\r\n"," 매개 변수에 대한 오프셋(바이트)입니다. ":" 参数中的偏移量（以字节为单位）。\r\n","Die Position im Ausgabearray, an der der Schreibvorgang begonnen werden soll.":"输出数组中开始写入的位置。\r\n"," используется со свойством ":" 与财产一起使用\r\n"," с языком и региональными параметрами, поддерживаемыми сборкой с данным атрибутом.":" 具有给定属性的程序集支持的区域性。\r\n","Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 64-битовое целое число со знаком.":"将具有指定基数的数字的字符串表示形式转换为其等效的 64 位带符号整数。\r\n","바이트 배열을 URL 인코딩된 바이트 배열로 변환합니다.":"将字节数组转换为 URL 编码的字节数组。\r\n","Выполняет операции для экземпляров класса ":"对类实例执行操作\r\n","Das Objekt, das die Schnittstelle bereitstellt.":"提供接口的对象。\r\n","Преобразует значение заданного 16-битового целого числа без знака в эквивалентное 16-битовое целое число со знаком.":"将指定的 16 位无符号整数的值转换为等效的 16 位有符号整数。\r\n","변수, 함수 또는 함수 매개 변수에 대한 형식 설명과 프로세스 전달 정보를 포함합니다.":"包含变量、函数或函数参数的类型描述和进程转发信息。\r\n","-Parameter vor dem Lesen hinzugefügt wird.":"- 读取前添加参数。\r\n","Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное строковое представление.":"将指定的单精度浮点数的值转换为其等效的字符串表示形式。\r\n"," больше нуля. ":" 零以上。\r\n","개체의 아이콘 표현입니다.":"对象的图标表示。\r\n","Stellt die verwaltete Definition der IEnumFORMATETC-Schnittstelle bereit.":"提供 IEnumFORMATETC 接口的托管定义。\r\n","Получает все пользовательские данные для заданного параметра функции.":"获取给定函数参数的所有用户数据。\r\n","El espacio de nombres del contrato de datos.":"El espacio de names del contrato de datos。\r\n","Diese Methode gibt einen Verweis auf die tatsächliche Anzahl der in ":"此方法返回对实际数量的引用\r\n","의 in과 out의 값이 동일하면 이름을 포함하는 형식 설명이 더 많을 수 있습니다.":"如果 in 和 out 具有相同的值，则可能有更多包含名称的类型描述。\r\n","상수(π)로 지정된 원주율을 나타냅니다.":"表示由常数 (π) 指定的圆周长的比率。\r\n","변수가 형식의 필드 또는 멤버입니다.이 변수는 형식의 각 인스턴스 내에서 고정 오프셋 위치에 있습니다.":"变量是类型的字段或成员。它位于该类型的每个实例中的固定偏移位置。\r\n","지정된 체계 및 호스트를 사용하여 ":"使用指定的方案和主机\r\n","Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 64-Bit-Ganzzahl mit Vorzeichen.":"使用指定的区域性特定格式设置信息将指定对象的值转换为 64 位带符号整数。\r\n"," возникает при попытке задать элемент по указанному индексу.":"尝试在指定索引处设置元素时发生。\r\n","Добавляет объект в конец ":"在末尾添加一个对象\r\n","비트 And 연산의 결과입니다.":"按位与运算的结果。\r\n","При удачном возвращении содержит фактическое число байтов, записанных в объект-поток.Если вызывающий объект задает для этого указателя значение ":"成功返回时，包含写入流对象的实际字节数。如果调用者将此指针设置为\r\n","음수가 아닌 임의의 정수를 반환합니다.":"返回一个随机的非负整数。\r\n","Регистрирует заданный указатель для объекта под указанным именем в таблице внутреннего представления указателей объектов.":"在对象指针的内部表示表中为指定名称下的对象注册指定指针。\r\n","에 해당하는 단정밀도 부동 소수점 숫자입니다.":"等价于 的单精度浮点数。\r\n","지정된 64비트 부호 있는 정수의 값을 해당하는 부울 값으로 변환합니다.":"将指定的 64 位带符号整数的值转换为等效的布尔值。\r\n","Преобразует значение заданного 16-битового целого числа без знака в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"给定指定的区域性特定格式设置信息，将指定的 16 位无符号整数的值转换为其等效的字符串表示形式。\r\n","데이터를 쓸 관리되지 않는 메모리의 기본 주소입니다.":"要写入数据的非托管内存的基址。\r\n"," menos 1.":" 菜单 1.\r\n","Liest ein einzelnes Byte an einem angegebenen Offset (oder Index) aus dem nicht verwalteten Speicher.":"从非托管内存读取指定偏移量（或索引）处的单个字节。\r\n","Значение, определяющее точку, с которой должен начаться сбор.":"指定收集开始点的值。\r\n","가 전달된 경우 ":"如果通过\r\n",", für den ein ACE entfernt werden soll.":"，为此要删除一个 ACE。\r\n","Schreibt einen einzelnen Bytewert an einem angegebenen Offset in den nicht verwalteten Arbeitsspeicher.":"将单个字节值写入指定偏移量的非托管内存。\r\n","Возвращает поддерживаемые язык и региональные параметры сборки с данным атрибутом.":"获取具有给定属性的程序集的受支持区域性。\r\n","При возвращении данного метода содержит ссылку на перечисленные моникеры.Этот параметр передается без инициализации.":"当此方法返回时，包含对枚举名字对象的引用。此参数无需初始化即可传递。\r\n","부호 없는 64비트 정수로 변환할 값입니다.":"要转换为无符号 64 位整数的值。\r\n"," не является допустимым значением даты или времени.":" 不是有效的日期或时间值。\r\n","더블바이트 길이 접두사가 있는 유니코드 문자열입니다.COM의 기본 문자열인 이 멤버는 ":"带有双字节长度前缀的 Unicode 字符串。该成员是 COM 的默认字符串，\r\n","HTTP 전송을 위해 HTML 인코딩된 문자열을 디코딩된 문자열로 변환합니다.":"将 HTML 编码的字符串转换为用于 HTTP 传输的解码字符串。\r\n","Dekrementiert den Verweiszähler für die angegebene Schnittstelle.":"减少指定接口的引用计数。\r\n"," больше другого значения типа ":" 大于类型的另一个值\r\n","Die Anzahl der Elemente, die in der Enumeration übersprungen werden sollen. ":"枚举中要跳过的元素数。\r\n","[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt] Aggregiert ein verwaltetes Objekt des angegebenen Typs mit dem angegebenen COM-Objekt. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 将指定类型的托管对象与指定的 COM 对象聚合。\r\n","Модуль, который может содержать только статические функции и данные (например, динамическая библиотека DLL).":"只能包含静态函数和数据的模块（例如，动态 DLL）。\r\n","Überprüft das Objekt auf Änderungen, die nach dem letzen Speichern vorgenommen wurden.":"检查对象自上次保存以来所做的更改。\r\n","Исходный объект ":"源对象\r\n","두 개의 16비트 부호 없는 정수 중 더 작은 숫자를 반환합니다.":"返回两个 16 位无符号整数中较小的一个。\r\n"," 매개 변수의 값이 null이 아니면 관리되지 않는 문자열의 복사본이 들어 있는 관리되는 문자열이고, 그렇지 않으면 null입니다.":" 如果参数的值为非空，则包含非托管字符串副本的托管字符串，否则为空。\r\n","Stellt einen Generator für Pseudozufallszahlen dar, d. h. ein Gerät, das eine Zahlenfolge erzeugt, die bestimmte statistische Anforderungen hinsichtlich ihrer Zufälligkeit erfüllt.Weitere Informationen zum Durchsuchen des .NET Framework-Quellcodes für diesen Typ finden Sie unter Verweisquelle.":"代表伪随机数生成器； H。一种生成数字序列的设备，该序列满足有关其随机性的特定统计要求。有关浏览此类 .NET Framework 源代码的更多信息，请参阅参考源。\r\n","Имя профиля.":"配置文件名称。\r\n","Разделитель, задаваемый платформой, который используется в переменных среды для разделения строк пути.":"环境变量中用于分隔路径字符串的特定于平台的分隔符。\r\n","와 관련되어 있고 매개 변수가 내보낸 형식 라이브러리에 있는 HRESULT로 내보내지도록 하는 네이티브 형식입니다.":"与参数关联并导致参数作为导出类型库中的 HRESULT 导出的本机类型。\r\n","가 유효한 날짜 및 시간 값이 아닙니다.":"不是有效的日期和时间值。\r\n","Данное преобразование не поддерживается. -или-Параметр ":"不支持此转换。 -或-参数\r\n","-Objekt zugeordneten SACL.":"- 对象关联的 SACL。\r\n","Управляемая строка, содержащая копию собственной строки ANSI, если значение параметра ":"如果参数值，则包含本机 ANSI 字符串副本的托管字符串\r\n","Указывает, что в числовой строке может находиться одна пара скобок, в которых заключено число.Скобки означают, что анализируемая строка представляет отрицательное число.":"指定数字字符串可以包含一对括号，括号将数字括起来。括号表示解析的字符串表示负数。\r\n","Содержит сведения о способе передачи значения, возвращаемого функцией, параметром или элементом структуры между процессами.":"包含有关如何在进程之间传递函数、参数或结构成员的返回值的信息。\r\n","Stellt eine explizite ":"代表显式\r\n","내부 타이머 메커니즘의 틱 카운터 값을 나타내는 정수(Long)입니다.":"表示内部计时器机制的滴答计数器值的长整数。\r\n"," 개체의 전체 이름입니다.":" 对象的全名。\r\n","Gibt die unteren 32 Bits von FILETIME an.":"指定 FILETIME 的低 32 位。\r\n","Die Klasse kann nicht als Struktur exportiert werden, oder das Feld ist nicht öffentlich.Ab .NET Framework, Version 2.0, ist das Feld möglicherweise privat.":"该类不能作为结构导出，或者该字段不是公共的。从 .NET Framework 2.0 版开始，该字段可能是私有的。\r\n","Показывает, содержит ли переданная строка имя типа или члена, описанного в библиотеке.":"指示传递的字符串是否包含库中定义的类型或成员的名称。\r\n","STGTY 열거형의 값 중 하나인 저장소 개체의 형식을 나타냅니다.":"表示存储对象的类型，是STGTY枚举的取值之一。\r\n",", und unter Windows CE.NET ist der Standard ":", 在 Windows CE.NET 标准下\r\n","을(를) 반환합니다.":"回报\r\n","Считывает из неуправляемой памяти 64-битное целое число со знаком.":"从非托管内存中读取一个 64 位有符号整数。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.":"将指定的 32 位无符号整数的值转换为等效的双精度浮点数。\r\n","-Enumeration an.Diese Klasse kann nicht vererbt werden.":"-enumeration. 这个类不能被继承。\r\n",")의 경우, 이 플래그는 ":"), 这个标志是\r\n",", состоящий из этих трех флагов.":"，由这三个标志组成。\r\n","Значение true, если дескриптор закрыт, в противном случае — значение false.":"Значение true, если десриптор закрыт, в противном случае — значение false.\r\n"," 0 (null) entspricht, wird ":" 等于 0（零），将\r\n","문자열을 HTML로 인코딩된 문자열로 변환합니다.":"将字符串转换为 HTML 编码的字符串。\r\n","Der Name einer Umgebungsvariablen.":"环境变量的名称。\r\n",", используя указанное 32-разрядное целое число со знаком.":"，使用指定的 32 位带符号整数。\r\n","쓸 값입니다.":"要写入的值。\r\n","기존 ":"现存的\r\n","Элемент отсутствует.":"缺少元素。\r\n","숫자의 문자열 표현입니다.이 문자열은 ":"一个数字的字符串表示。这个字符串是\r\n","Значение S_OK, если файл был изменен с момента последнего сохранения; значение S_FALSE — если файл не был изменен.":"S_OK 如果文件自上次保存以来已被修改； S_FALSE 如果文件没有被修改。\r\n"," kann nicht in den Zieltyp konvertiert werden, da nicht alle erforderlichen Schnittstellen unterstützt werden. ":" 无法转换为目标类型，因为并非所有必需的接口都受支持。\r\n","Указатель на массив символов. ":"指向字符数组的指针。\r\n","-Methode eingerichtet wurde.":"方法已设置。\r\n","모니커가 시스템 모니커이면 S_OKHRESULT 값이고, 그렇지 않으면 S_FALSEHRESULT 값입니다.":"如果名字对象是系统名字对象，则值为 S_OKHRESULT；否则，值为 S_FALSEHRESULT。\r\n","두 개의 배정밀도 부동 소수점 수 중 더 작은 숫자를 반환합니다.":"返回两个双精度浮点数中较小的一个。\r\n","반환되는 난수의 상한(제외)입니다.":"返回的随机数的上限（不包括）。\r\n",", используя 32-разрядное целое число без знака.":", используя 32-разрядное целое число без знака.\r\n","Объект, в который копируются данные. ":"数据复制到的对象。\r\n","-Struktur unter Verwendung des Werts einer 32-Bit-Ganzzahl ohne Vorzeichen.":"使用 32 位无符号整数值的结构。\r\n","true, wenn die Zugriffsregel geerbt wurde, andernfalls false.":"如果继承了访问规则，则为 true，否则为 false。\r\n","Die Methode gibt einen Verweis auf die aufgelisteten Zeichenfolgen zurück.Dieser Parameter wird nicht initialisiert übergeben.":"该方法返回对列出的字符串的引用。此参数未初始化传递。\r\n","Ein den Fehler beschreibender Rückgabewert.":"描述错误的返回值。\r\n","의 숫자에 해당하는 32비트 부호 있는 정수이거나, ":"是一个 32 位有符号整数，等于\r\n","Показывает, соответствует ли указанный объект текущему объекту ":"Показывает, соответствует ли указанный объект текущему объекту\r\n","두 복소수의 곱을 반환합니다.":"返回两个复数的乘积。\r\n","Der Name der Umgebungsvariablen.":"环境变量的名称。\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为等效的 16 位无符号整数。\r\n","true, wenn das diesem ":"真的，如果这个\r\n","Преобразует значение заданного 16-битового целого числа без знака в эквивалентное 64-битовое целое число без знака.":"将指定的 16 位无符号整数的值转换为其等效的 64 位无符号整数。\r\n","변수를 마샬링하는 방법을 정의합니다.":"定义如何编组变量。\r\n","Ruft die Adressen statischer Funktionen oder Variablen ab, wie sie z. B. in einer DLL definiert sind.":"检索静态函数或变量的地址，例如B. 在 DLL 中定义。\r\n","Gibt die angegebene 32-Bit-Ganzzahl mit Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.":"返回指定的 32 位有符号整数。不执行真正的转换。\r\n"," для данных, интересующих приемник уведомлений.Приемник получает уведомление об изменениях в данных, заданных этой структурой ":" 对于通知接收者感兴趣的数据。接收者接收此结构指定的数据更改的通知\r\n","Ruft das Objekt ab, das von diesem Handle dargestellt wird, oder legt dieses fest.":"获取或设置由此句柄表示的对象。\r\n"," 매개 변수가 가리키는 데이터가 있는 관리되는 개체입니다.":" 具有参数指向的数据的托管对象。\r\n","Ein S_OKHRESULT-Wert, wenn das Objekt geändert wurde; andernfalls ein S_FALSEHRESULT-Wert.":"如果对象已被修改，则为 S_OKHRESULT 值；否则，一个 S_FALSEHRESULT 值。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 64 位无符号整数的值转换为等效的 16 位无符号整数。\r\n","Увеличиваемый счетчик ссылок интерфейса.":"可增加的接口引用计数。\r\n","Возвращает произвольное имя каталога или файла.":"返回任意目录或文件名。\r\n","-Objekt eine Zugriffssteuerungsliste (ACL) für ein Verzeichnisobjekt ist.":"object 是目录对象的访问控制列表 (ACL)。\r\n","Значение true, если объект соответствует этому массиву ":"Значение true, если объект соответствует этому массиву\r\n","Добавляет строковое представление указанного 8-разрядного целого числа без знака к данному экземпляру.":"将指定的 8 位无符号整数的字符串表示形式添加到此实例。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 32비트 부호 없는 정수로 변환합니다.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的 32 位无符号整数。\r\n","원하는 특정 클립보드 형식을 지정합니다.":"指定所需的特定剪贴板格式。\r\n","이 메서드는 반환될 때 해당 데이터를 넣을 위치를 지정하는 Object를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含一个指定数据放置位置的对象。此参数未初始化传递。\r\n"," = Plus unendlich":" =加上无穷大\r\n","Der DNS-Hostname oder die IP-Adresse des Servers.":"服务器的 DNS 主机名或 IP 地址。\r\n","Der Pfad zur Internetressource. ":"互联网资源的路径。\r\n","Адрес в неуправляемой памяти, по которому производится запись.":"进行写入的非托管内存中的地址。\r\n","절대 경로 정보를 가져올 파일 또는 디렉터리입니다. ":"要获取其绝对路径信息的文件或目录。\r\n","Die Quadratwurzel von ":"的平方根\r\n","Преобразует значение заданного 8-битового целого числа без знака в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"在给定指定的区域性特定格式设置信息的情况下，将指定的 8 位无符号整数的值转换为其等效的字符串表示形式。\r\n","COM VARIANT 배열을 개체 배열로 변환합니다. ":"将 COM VARIANT 数组转换为对象数组。\r\n","Вставляет строковое представление указанного массива символов Юникода в данный экземпляр на указанную позицию символа.":"将指定 Unicode 字符数组的字符串表示形式插入到此实例的指定字符位置。\r\n","의 숫자에 해당하는 16비트 부호 있는 정수이거나, ":"是一个 16 位有符号整数，它是\r\n","Die Variable darf dem Benutzer nicht in einem Browser angezeigt werden, obwohl sie vorhanden und bindbar ist.":"该变量不能在浏览器中显示给用户，尽管它存在并且是可绑定的。\r\n","-Klasse mit der Quellschnittstellen- und der Ereignisanbieterklasse.":"类与源接口和事件提供者类。\r\n",".Это определяет форматы, которые может перечислять результирующий перечислитель.":".这定义了生成的枚举器可以枚举的格式。\r\n","Определяет, содержат ли два экземпляра ":"确定两个实例是否包含\r\n","Вставляет строковое представление числа с плавающей запятой с удвоенной точностью в данный экземпляр на указанную позицию символа.":"将双精度浮点数的字符串表示形式插入此实例的指定字符位置。\r\n","이 모니커와 다른 모니커를 조합하여 새로운 구성 모니커를 만듭니다.":"将此绰号与另一个绰号组合以创建新的组合绰号。\r\n","Комплексное число, определяющее степень.":"定义次数的复数。\r\n"," zurück.Wenn ":" 返回.if\r\n","지정된 개체의 값을 해당하는 문자열 표현으로 변환합니다.":"将指定对象的值转换为其等效的字符串表示形式。\r\n","-Struktur mit einem ":"-Struktur mit einem\r\n","Преобразует заданное строковое представление логического значения в эквивалентное логическое значение.":"将布尔值的给定字符串表示形式转换为其等效的布尔值。\r\n","Не следует позволять пользователям отображать или программировать этот член.":"不应允许用户显示或编程该成员。\r\n","[.NET Framework 4.5.1 이상 버전에서 지원됨] COM VARIANT를 지정된 형식의 개체로 변환합니다. ":"[在 .NET Framework 4.5.1 及更高版本中支持] 将 COM VARIANT 转换为指定类型的对象。\r\n","Ссылка на приемник для получения вызовов выходящего интерфейса, управляемого с использованием этой точки подключения. ":"对接收器的引用，用于接收来自使用此连接点管理的传出接口的调用。\r\n","관리되는 서식이 지정된 클래스를 마샬링할 때 사용하는 C 스타일 구조체에 대한 포인터입니다.이 메서드는 플랫폼 호출 메서드에만 유효합니다.":"在编组托管格式化类时使用的指向 C 样式结构的指针。此方法仅对平台调用方法有效。\r\n","Декодируемая строка, закодированная как URL-адрес.":"要解码的字符串，编码为 URL。\r\n",", можно использовать в качестве результата метода IUnknown::QueryInterface.":", 可以用作 IUnknown::QueryInterface 方法的结果。\r\n","Новый объект":"新对象\r\n","다음 표에 나와 있는 값 중 하나입니다. ":"下表所列值之一。\r\n","serialize할 필드나 속성에 대한 기본값을 serialize하는지 여부를 지정하는 값을 가져오거나 설정합니다. ":"获取或设置一个值，该值指定是否序列化正在序列化的字段或属性的默认值。\r\n"," в значение 32-битового целого числа без знака.":" 为 32 位无符号整数值。\r\n","Die Zahl 1, wenn ":"数字 1 如果\r\n"," 개체가 다른지를 나타내는 값을 반환합니다.":" 返回一个值，该值指示对象是否不同。\r\n","복소수의 역수를 반환합니다.":"返回复数的倒数。\r\n"," 메서드에서 반환된 인터페이스 포인터를 IUnknown::QueryInterface의 결과로 사용할 수 있습니다.":" 可以使用方法返回的接口指针作为IUnknown::QueryInterface的结果。\r\n","Addiert zwei komplexe Zahlen.":"添加两个复数。\r\n","Der Wert, der subtrahiert werden soll (der Subtrahend).":"要减去的值（减数）。\r\n","변수는 개체를 가장 잘 표현하는 단일 속성입니다.형식 정보에 있는 유일한 변수가 이러한 특성을 가질 수 있습니다.":"变量是最能代表一个对象的单一属性，只有类型信息中的变量才能拥有这些属性。\r\n","지정된 32비트 부호 있는 정수의 값을 해당하는 16비트 부호 없는 정수로 변환합니다.":"将指定的 32 位带符号整数的值转换为等效的 16 位无符号整数。\r\n"," aus zwei Bytes gebildet wird.":" aus zwei Bytes gebildet 线。\r\n","Вставляет строковое представление 32-разрядного целого числа без знака в данный экземпляр на указанную позицию символа.":"将无符号 32 位整数的字符串表示形式插入此实例的指定字符位置。\r\n","밑을 10으로 사용하여 지정된 숫자의 로그를 반환합니다.":"返回以 10 为底的指定数字的对数。\r\n","Die Basisadresse im nicht verwalteten Speicher des Quellobjekts.":"源对象在非托管内存中的基址。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.":"将指定的 32 位带符号整数的值转换为等效的 16 位带符号整数。\r\n","Возвращает аддитивную инверсию указанного комплексного числа.":"返回指定复数的加法逆元。\r\n","Задает процессор и разрядность слова для платформы, являющейся целевой для исполняемого файла.":"指定作为可执行文件目标的平台的处理器和字宽。\r\n","Die 64-Bit-Ganzzahl ohne Vorzeichen für den Vergleich.":"要比较的 64 位无符号整数。\r\n","-Parameter die gleiche .NET Framework-Version darstellen, andernfalls false.":"参数表示相同的 .NET Framework 版本，否则为 false。\r\n","Eine 8-Bit-Ganzzahl x mit Vorzeichen im Bereich 0 ≤ x ≤":"0 ≤ x ≤ 范围内的 8 位有符号整数 x\r\n","매개 변수가 정보를 전달하는지 아니면 정보를 받는지 지정하지 않습니다.":"您不指定参数是否携带或接收信息。\r\n","Задает имя свойства, обращающегося к полю с атрибутами.":"指定访问属性字段的属性的名称。\r\n","Возвращает заданное комплексное число, возведенное в степень, заданную числом с плавающей запятой двойной точности.":"返回指定复数的指定双精度浮点数次方。\r\n","Gibt den Hyperbeltangens der angegebenen komplexen Zahl zurück.":"返回指定复数的双曲正切值。\r\n","Ein Verweis auf das als ausgeführt registrierte Objekt. ":"对注册为正在运行的对象的引用。\r\n","Benachrichtigt alle registrierten Advise-Senken, dass das Objekt gespeichert wurde.Diese Methode wird von einem Server aufgerufen.":"通知所有已注册的建议接收器该对象已保存。从服务器调用此方法。\r\n","현재 모니커를 얼마나 축소할지 지정하는 값입니다. ":"指定折叠当前名字对象的程度的值。\r\n","Записывает в неуправляемую память 64-битное целое число со знаком.":"将 64 位带符号整数写入非托管内存。\r\n"," равно четному числу; в противном случае — значение false.":" 等于偶数；否则，假的。\r\n","Преобразует значение заданного десятичного числа в эквивалентное 16-битовое целое число без знака.":"将指定十进制数的值转换为其等效的 16 位无符号整数。\r\n","Konvertiert den Wert des angegebenen Unicode-Zeichens unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.":"使用指定的区域性特定格式设置信息，将指定的 Unicode 字符的值转换为其等效的字符串表示形式。\r\n","-Wert kleiner als eine 64-Bit-Ganzzahl ohne Vorzeichen ist.":"值小于 64 位无符号整数。\r\n","Gibt alle von der ":"给出所有的\r\n","Предоставляет управляемое определение интерфейса ITypeLib.":"提供 ITypeLib 接口的托管定义。\r\n","Освобождает все объекты, зарегистрированные в текущий момент с контекстом привязки при помощи метода ":"释放当前使用该方法注册到绑定上下文的所有对象\r\n","Новый размер выделенного блока.Это не указатель; это запрашиваемое количество байтов, приведенное к типу ":"分配块的新大小。这不是指针；是请求转换为类型的字节数\r\n","Округляет десятичное значение до ближайшего целого.Параметр задает правило округления значения, если оно находится ровно посредине между двумя числами.":"Rounds a decimal value to the nearest integer. 该参数指定值恰好在两个数字的中间时的舍入规则。\r\n"," potenziert mit ":" 加强与\r\n"," должен освобождаться с помощью метода ":" 必须使用方法释放\r\n","이중 클래스 인터페이스가 클래스에 대해 자동으로 생성되고 COM에 노출됨을 나타냅니다.클래스 인터페이스에 대해 형식 정보가 생성되어 형식 라이브러리에 게시됩니다.":"指示为该类自动创建双类接口并向COM公开。为类接口生成类型信息并发布到类型库中。\r\n","멤버는 일반 메서드입니다.":"成员是常规方法。\r\n","지정된 10진수 값을 해당하는 64비트 부호 있는 정수로 변환합니다.":"将指定的十进制值转换为等效的 64 位带符号整数。\r\n","Целевой ":"目标\r\n"," в кодировке Base64.":" 在 Base64 编码中。\r\n","Число х одинарной точности с плавающей запятой, такое что 0 ≤ x ≤":"单精度浮点数 x 满足 0 ≤ x ≤\r\n","-Objekt ab oder legt diese fest.Die SACL enthält Überwachungsregeln.":"对象。SACL 包含审核规则。\r\n","-Objekts in den Wert einer 64-Bit-Ganzzahl mit Vorzeichen.":"对象为 64 位有符号整数的值。\r\n","Хэш-значение для ":"的哈希值\r\n","Die Zugriffsmaske wird an untergeordnete Containerobjekte weitergegeben.":"访问掩码传播到子容器对象。\r\n","Преобразует заданное логическое значение в эквивалентное число с плавающей запятой двойной точности.":"将指定的布尔值转换为其等效的双精度浮点数。\r\n","Der äußere IUnknown-Zeiger. ":"外部 IUnknown 指针。\r\n","Тип запрашиваемого интерфейса. ":"请求的接口类型。\r\n","-Datentyp oder einen Typ verwenden, der von einem ":"- 使用数据类型或派生自\r\n","Konvertiert den Wert einer 16-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung in einer angegebenen Basis.":"将 16 位有符号整数的值转换为其在指定基数中的等效字符串表示形式。\r\n",", для которого необходимо возвратить хэш-код.":"您要为其返回哈希码的 。\r\n","에서 지정한 형식에 따른 현재 인스턴스에 대한 데카르트 형식의 문자열 표현입니다.":"根据 指定的格式，当前实例的笛卡尔形式的字符串表示形式。\r\n"," aufgelisteten Verbindungen. ":" 列出的连接。\r\n","Поддерживает структурное сравнение объектов коллекции.":"支持集合对象的结构比较。\r\n","Показывает возврат объекта VARDESC.":"指示 VARDESC 对象的返回。\r\n","Gibt die größte Ganzzahl zurück, die kleiner oder gleich der angegebenen Gleitkommazahl mit doppelter Genauigkeit ist.":"返回小于或等于指定双精度浮点数的最大整数。\r\n","Вычисляет целую часть заданного десятичного числа. ":"计算给定十进制数的整数部分。\r\n","Mindestens ein Wert der ":"至少有一个值\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.":"将数字的指定字符串表示形式转换为等效的 64 位无符号整数。\r\n"," со значением HRESULT, которое относится к выданному исключению.":"带有引用抛出的异常的 HRESULT。\r\n","Schreibt einen einzelnen Bytewert in den nicht verwalteten Speicher.":"将单个字节值写入非托管内存。\r\n","Число ссылок IConnectionPoint, возвращаемых в ":"中返回的 IConnectionPoint 引用数\r\n","[.NET Framework 4.5.1 이상 버전에서 지원됨] 관리되지 않는 형식의 크기(바이트)를 반환합니다. ":"[在 .NET Framework 4.5.1 及更高版本中受支持] 返回非托管类型的大小（以字节为单位）。\r\n","Предоставляет быстрый способ инициализации массива данных, хранящихся в модуле.":"提供一种快速方法来初始化存储在模块中的数据数组。\r\n","Преобразует заданное строковое представление логического значения в эквивалентное логическое значение, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用指定的区域性特定格式设置信息，将布尔值的指定字符串表示形式转换为其等效的布尔值。\r\n","Возвращает меньшее из двух 64-битовых целых чисел без знака.":"返回两个 64 位无符号整数中较小的一个。\r\n","지정된 단정밀도 부동 소수점 숫자 값을 해당하는 32비트 부호 없는 정수로 변환합니다.":"将指定的单精度浮点数的值转换为等效的 32 位无符号整数。\r\n","-Objekts (in Bytes) ab.Diese Länge muss verwendet werden, bevor die ACL mithilfe der ":"对象（以字节为单位）。必须在使用\r\n",", описывающее тип.":"描述类型的 。\r\n","-Wert, der beschreibt, wie die Schnittstelle für COM verfügbar gemacht werden soll.":"-描述接口应该如何暴露给 COM 的值。\r\n",". Potenz berechnet werden soll.":".功率是要计算的。\r\n","Der Typ der Ausnahme.":"异常的类型。\r\n"," со значениями действительного и мнимого чисел, равными нулю.":" 实数和虚数的值都为零。\r\n","Das Objekt, das im Adapterobjekt enthalten ist.":"适配器对象中包含的对象。\r\n","Ссылка на структуру, содержащую массив аргументов, массив идентификаторов DISPID именованных аргументов, а также количество элементов в каждом массиве. ":"对结构的引用，该结构包含参数数组、命名参数的 DISPID 数组以及每个数组中的元素数。\r\n","Строка, состоящая из шестнадцатеричных пар, разделенных дефисами, где каждая пара предоставляет соответствующий элемент в подмассиве ":"由连字符分隔的十六进制对组成的字符串，其中每对提供子数组中的对应元素\r\n","Ранее существующий дескриптор для использования.":"Ранее существующий DESCRIPTOR для использования。\r\n","null zurück.Wenn ":"返回零。如果\r\n","가 null이 아닌 경우 ":"不为空\r\n","Копирует содержимое управляемого объекта ":"复制托管对象的内容\r\n","이 메서드는 반환될 때 이름 매핑이 저장될 배열에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含对将存储名称映射的数组的引用。此参数未初始化传递。\r\n","Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное строковое представление.":"将指定的 8 位带符号整数的值转换为其等效的字符串表示形式。\r\n","지정된 10진수 값을 해당하는 8비트 부호 있는 정수로 변환합니다.":"将指定的十进制值转换为等效的 8 位带符号整数。\r\n","지정된 8비트 부호 있는 정수의 값을 해당하는 32비트 부호 없는 정수로 변환합니다.":"将指定的 8 位有符号整数的值转换为等效的 32 位无符号整数。\r\n",".NET Framework 버전을 식별하는 문자열입니다.":"标识 .NET Framework 版本的字符串。\r\n","타이머가 고해상도 성능 카운터를 기반으로 하는지를 나타냅니다.이 필드는 읽기 전용입니다.":"指示计时器是否基于高分辨率性能计数器。此字段是只读的。\r\n","-Objekt ab, das mit den Wortvergleichsregeln der aktuellen Kultur einen Zeichenfolgenvergleich mit Berücksichtigung von Groß- und Kleinschreibung ausführt.":"使用当前区域性的单词比较规则执行区分大小写的字符串比较的对象。\r\n","Ruft das sichere Handle für ein systemeigenes Betriebssystem-Wait-Handle ab. ":"获取本机操作系统等待句柄的安全句柄。\r\n","Имя, соответствующее пользователю, получающему доступ к URI.":"访问URI 的用户对应的名称。\r\n","Возвращает заданное число с плавающей запятой двойной точности; фактическое преобразование не производится.":"返回指定的双精度浮点数；没有执行实际的转换。\r\n","모니커로 식별된 개체가 들어 있는 저장소에 대한 인터페이스 포인터를 검색합니다.":"检索指向存储的接口指针，该存储包含由名字对象标识的对象。\r\n",".(Знак операнда не изменяется.)":".（操作数的符号不变。）\r\n","Eine Ausnahme, die den Fehler darstellt, der die Beendigung verursacht hat.Dies ist in der Regel die Ausnahme in einem catch-Block.":"表示导致终止的错误的异常。这通常是 catch 块中的异常。\r\n"," со значением действительного числа, равным единице, и значением мнимого числа, равным нулю.":" 实数值等于一，虚数值等于零。\r\n","에 포함된 숫자 또는 변환에 실패한 경우 ":"一个数字或如果转换失败\r\n","Преобразует базовые типы данных в массив байтов и массив байтов в базовые типы данных.":"Преобразует базовые типы данных в массив байтов и массив байтов в базовые типы данных。\r\n","Stellt ein allgemeines Zwischenablageformat dar. ":"表示通用剪贴板格式。\r\n"," erbt.":" 继承\r\n","Gibt die kleinere von zwei 32-Bit-Ganzzahlen ohne Vorzeichen zurück.":"返回两个 32 位无符号整数中较小的一个。\r\n","Значение параметра равно ":"参数的值为\r\n","지정된 32비트 부호 없는 정수의 값을 해당하는 8비트 부호 있는 정수로 변환합니다.":"将指定的 32 位无符号整数的值转换为等效的 8 位有符号整数。\r\n","지정된 배정밀도 부동 소수점 숫자 값을 해당하는 16비트 부호 없는 정수로 변환합니다.":"将指定的双精度浮点数的值转换为等效的 16 位无符号整数。\r\n","Получает число элементов, которое в действительности содержится в ":"获取实际包含的元素个数\r\n","Ruft das umfasste Objekt ab, das als Typ VT_CY gemarshallt werden soll.":"获取要作为 VT_CY 类型封送的包含对象。\r\n","새로 만든 열거자에 대한 ":"对于新创建的枚举器\r\n","숫자의 지정된 문자열 표현을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.":"将数字的指定字符串表示形式转换为等效的双精度浮点数。\r\n","에 해당하는 단정밀도 부동 소수점 숫자이거나, ":"是一个单精度浮点数，等于\r\n","Представляет значение перечисления ":"代表一个枚举值\r\n","Die Meldung, in der die Ursache für die Ausnahme angegeben wird. ":"提供异常原因的消息。\r\n","Второе значение для перемножения.":"要相乘的第二个值。\r\n","관리되지 않는 메모리에서 프로세서의 기본 크기로 지정된 정수를 읽습니다.":"从非托管内存中读取处理器本机大小的整数。\r\n","곱할 첫 번째 복소수입니다.":"第一个要相乘的复数。\r\n","Упаковываемый тип значения. ":"要打包的值类型。\r\n","Gibt einen Wert zurück, der angibt, ob die aktuelle Instanz und ein angegebenes ":"返回一个值，该值指示当前实例和指定的\r\n","Основание логарифма.":"对数的底数。\r\n","Возвращает описание или спецификацию точки входа для функции в динамической библиотеке DLL.":"返回 DLL 中函数的描述或入口点规范。\r\n"," enthält einen Doppelpunkt (\":\"), der kein Teil eines Volumebezeichners (z. B. \"c: \\\\\") ist. ":" 包含不属于卷标识符的冒号（“:”）（例如“c:\\\\”）。\r\n","Извлекает описания типов, на которые указывают ссылки, если описание типа ссылается на другие описания типов.":"如果类型声明引用其他类型声明，则检索引用的类型声明。\r\n","Definiert eine implizite Konvertierung eines Bytewerts ohne Vorzeichen in eine komplexe Zahl.":"定义无符号字节值到复数的隐式转换。\r\n","이(가) null이면 이 메서드는 null을(를) 반환합니다.":"如果为 null，则此方法返回 null。\r\n","사용 가능한 메모리가 부족한 경우":"可用内存不足\r\n",", или дата и время, эквивалентные значению ":"，或与该值等效的日期和时间\r\n","크기가 반환되는 개체입니다.":"返回其大小的对象。\r\n","Verwirft alle Änderungen, die an einem transaktiven Stream seit dem letzten ":"丢弃自上次以来对事务流所做的所有更改\r\n","При возвращении данного метода содержит ссылку на перечисление TYPEKIND.Этот параметр передается без инициализации.":"当此方法返回时，包含对 TYPEKIND 枚举的引用。此参数无需初始化即可传递。\r\n","Gibt einen Zeiger auf eine IUnknown-Schnittstelle zurück, die die angegebene Schnittstelle für das angegebene Objekt darstellt.Der benutzerdefinierte Zugriff auf Abfrageschnittstellen ist standardmäßig aktiviert.":"返回指向 IUnknown 接口的指针，该接口表示指定对象的指定接口。默认情况下启用自定义查询接口访问。\r\n"," 값에 대해 배타적 비트 Or(XOr) 연산을 수행합니다.":" 对值执行按位异或 (XOr) 运算。\r\n","Показывает целое число short.":"显示一个整数短。\r\n","Показывает имя или порядковый номер точки входа вызываемой динамической библиотеки (DLL).":"指示被调用动态库 (DLL) 的入口点的名称或序号。\r\n","두 개의 32비트 부호 있는 정수 중 더 큰 숫자를 반환합니다.":"返回两个 32 位有符号整数中较大的一个。\r\n","Ein Zeiger, der auf die Struktur zum Empfangen der Bindungsoptionen zeigt. ":"指向用于接收绑定选项的结构的指针。\r\n"," - ( ":" -(\r\n","메모리 버퍼의 바이트 수입니다.":"内存缓冲区中的字节数。\r\n","Gibt die Verzeichnisinformationen für die angegebene Pfadzeichenfolge zurück.":"返回指定路径字符串的目录信息。\r\n","При установке все попытки прямого изменения свойства приводят к вызову IPropertyNotifySink::OnRequestEdit.Реализация OnRequestEdit определяет, принято ли изменение.":"设置后，所有直接更改属性的尝试都会导致调用 IPropertyNotifySink::OnRequestEdit。OnRequestEdit 的实现决定是否接受更改。\r\n","Преобразует заданное строковое представление числа в эквивалентное число с плавающей запятой двойной точности, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的双精度浮点数。\r\n","진행 보고서 값의 형식을 지정합니다.":"格式化进度报告值。\r\n"," не находится в соответствующем формате. ":" 格式不正确。\r\n","Содержит сведения о переменной.":"包含有关变量的信息。\r\n","Число описаний типов в библиотеке типов.":"类型库中类型声明的数量。\r\n",", и параметром HRESULT, для которого задано значение COR_E_PATHTOOLONG.":"，并将 HRESULT 参数设置为 COR_E_PATHTOOLONG。\r\n","Eine 8-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in ":"对应于中数字的 8 位无符号整数\r\n","Инициализирует новый экземпляр класса DateTimeConstantAttribute с числом 100-наносекундных импульсов, представляющим дату и время создания данного экземпляра.":"初始化 DateTimeConstantAttribute 类的新实例，其中包含多个 100 ns 刻度，表示创建此实例的日期和时间。\r\n","Сравнивает существующий экземпляр ":"比较现有实例\r\n","true, um anzugeben, dass das ":"true 表示这\r\n","Возвращает большее из двух 8-битовых целых чисел без знака.":"返回两个 8 位无符号整数中较大的一个。\r\n","Показывает, что класс поддерживает только позднюю привязку для клиентов COM.Интерфейс dispinterface класса автоматически предоставляется клиентам COM по запросу.Библиотека типов, созданная программой Tlbexp.exe (программа экспорта библиотек типов), не содержит информации о типе для интерфейса dispinterface, чтобы не допустить кэширование значений DISPID клиентами.Интерфейс dispinterface исключает возникновение проблем с версиями, рассмотренных в описании класса ":"表示该类只支持COM客户端的后期绑定。该类的调度接口接口是根据请求自动提供给COM客户端的。Tlbexp.exe（Type Library Exporter）生成的类型库不包含调度接口接口的类型信息，以防止缓存DISPID values by clients.dispinterface 消除了类定义中讨论的版本控制问题。\r\n"," с типом, используемым в качестве интерфейса-источника.":" 与用作源接口的类型。\r\n","Извлекает сведения о маршалинге.":"检索编组信息。\r\n","Enthält nach dem Beenden dieser Methode einen Verweis auf die tatsächliche Anzahl der in ":"退出此方法后，包含对实际编号的引用\r\n","Платформозависимое знаковое целое число: 4 байта в 32-разрядной Windows, 8 байт в 64-разрядной Windows.":"特定于平台的有符号整数：在 32 位 Windows 上为 4 个字节，在 64 位 Windows 上为 8 个字节。\r\n","개체를 가장 잘 표현하는 함수입니다.형식에 있는 한 함수만 이 특성을 가질 수 있습니다.":"最能代表对象的函数。类型中只有一个函数可以有这个属性。\r\n","에 해당하는 16비트 부호 있는 정수입니다. ":"一个 16 位有符号整数等同于\r\n","관리되지 않는 메모리에 부호 있는 64비트 정수 값을 씁니다.":"将带符号的 64 位整数值写入非托管内存。\r\n","Точное положение каждого члена объекта в неуправляемой памяти управляется явно в соответствии с настройкой поля ":"每个对象成员在非托管内存中的确切位置根据字段设置显式控制\r\n","숫자의 지정된 문자열 표현을 해당하는 64비트 부호 있는 정수로 변환합니다.":"将数字的指定字符串表示形式转换为其等效的 64 位带符号整数。\r\n","Ссылка на освобождаемую структуру VARDESC. ":"引用释放的 VARDESC 结构。\r\n","Stellt einen Zeichenfolgenvergleichsvorgang dar, der bestimmte Regeln zur Groß- und Kleinschreibung und kulturbasierte bzw. Ordinalvergleichsregeln verwendet.":"表示使用特定大小写和基于区域性或序号比较规则的字符串比较操作。\r\n"," 특성을 지원하지 않는 운영 체제는 이 값을 사용하고 다른 값은 무시합니다.":" 不支持该属性的操作系统使用此值并忽略其他值。\r\n","Der Ursprung der Suche.Der Ursprung kann der Dateianfang, der aktuelle Suchzeiger oder das Dateiende sein.":"搜索的起点。起点可以是文件的开头、当前搜索指针或文件的结尾。\r\n","Der Profilname dieses ":"这个的个人资料名称\r\n","형식 설명의 특성이 들어 있는 ":"包含类型描述的属性\r\n","Фаза комплексного числа в радианах.":"以弧度为单位的复数相位。\r\n"," атрибута ":" 属性\r\n","Количество цифр дробной части в возвращаемом значении. ":"返回值中的小数位数。\r\n","[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt] Umschließt das angegebene COM-Objekt mit einem Objekt des angegebenen Typs.":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 将指定的 COM 对象包装在指定类型的对象中。\r\n","Devuelve un entero de 64 bits con signo convertido a partir de ocho bytes en la posición especificada de una matriz de bytes.":"开发一个 64 位的输入，并在一个字节矩阵中指定一个字节的部分。\r\n","Присваиваемый идентификатор ":"分配的标识符\r\n"," ein Stammverzeichnis bezeichnet oder NULL ist.Gibt ":" 表示根目录或为 NULL\r\n","При возвращении данного метода содержит новый перечислитель для таблицы текущих объектов (ROT).Этот параметр передается без инициализации.":"当此方法返回时，包含当前对象表 (ROT) 的新枚举器。此参数无需初始化即可传递。\r\n","32-битовое целое число со знаком, которое задает количество процессоров на текущем компьютере.Значение по умолчанию отсутствует.Если текущий компьютер содержит несколько групп процессоров, данное свойство возвращает число логических процессоров, доступных для использования средой CLR.":"一个带符号的 32 位整数，指定当前计算机上的处理器数。没有默认值。如果当前计算机包含多个处理器组，则此属性返回可供 CLR 使用的逻辑处理器数。\r\n","Преобразует значение текущего комплексного числа в эквивалентное строковое представление в прямоугольной системе координат, используя для действительной и мнимой частей указанный формат и сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用实部和虚部的指定格式和区域性特定格式信息，将当前复数的值转换为其在直角坐标系中的等效字符串表示形式。\r\n","Добавляет к данному экземпляру строку, возвращаемую в результате обработки строки составного формата, содержащей ноль или более элементов формата.Каждый элемент формата заменяется строковым представлением любого из трех аргументов.":"将处理包含零个或多个格式元素的复合格式字符串返回的字符串附加到此实例。每个格式元素都由三个参数中的任何一个的字符串表示形式替换。\r\n","환경 변수에서 경로 문자열을 구분하는 데 사용되는 플랫폼 특정 구분 문자입니다.":"用于分隔环境变量中的路径字符串的特定于平台的定界符。\r\n","Вычитает одно комплексное число из другого и возвращает результат.":"从一个复数中减去另一个复数并返回结果。\r\n",".Необходимо присвоить этому указателю значение null, прежде чем вызывать этот метод.":".在调用此方法之前必须将此指针设置为空。\r\n","Управляет элементами операций привязки моникера.":"控制名字对象绑定操作的元素。\r\n","프로세스의 관리되지 않는 메모리에서 이전에 할당한 메모리를 해제합니다.":"从进程的非托管内存中释放先前分配的内存。\r\n","Показывает идентификатор ID класса.":"显示类的 ID。\r\n",", используя заданное описание. ":", 使用指定的描述。\r\n","-Parameter gleich null ist oder nicht in einem Format vorliegt, das mit ":"参数为空或格式不兼容\r\n","시작 범위에 대한 바이트 오프셋입니다. ":"起始范围内的字节偏移量。\r\n","Stellt eine Auflistung von":"提供了一个集合\r\n"," является универсальным типом.":" 是泛型。\r\n"," ist kleiner als 0 (null) oder größer als die Länge von ":" ist kleiner als 0 (null) 或 größer als die Länge von\r\n","Угол θ, измеренный в радианах, такой что -π≤θ≤π, и tg(θ) = ":"角度 θ，以弧度为单位，满足 -π≤θ≤π，且 tg(θ) =\r\n","Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 64-Bit-Ganzzahl ohne Vorzeichen.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为 64 位无符号整数。\r\n","지정된 개체의 값을 16비트 부호 있는 정수로 변환합니다.":"将指定对象的值转换为 16 位有符号整数。\r\n","Gibt ein SAFEARRAY an.In einem VARIANT nicht gültig.":"指定一个 SAFEARRAY。在 VARIANT 中无效。\r\n","Die Schnittstelle für eine bestimmte Schnittstellen-ID ist nicht verfügbar.In diesem Fall ist die zurückgegebene Schnittstelle null.E_NOINTERFACE wird an den Aufrufer von IUnknown::QueryInterface zurückgegeben.":"给定接口 ID 的接口不可用。在这种情况下，返回的接口为空。E_NOINTERFACE 返回给 IUnknown::QueryInterface 的调用者。\r\n","Представляет ссылку на массив аргументов.":"表示对参数数组的引用。\r\n","더할 첫 번째 복소수입니다.":"要添加的第一个复数。\r\n","변수의 인스턴스가 하나만 있습니다.":"该变量只有一个实例。\r\n","Ein Objekt des angegebenen Typs, der dem ":"对应于指定类型的对象\r\n","클라이언트 컴파일러가 라이브러리의 형식, 변수, 상수 및 전역 함수를 바인딩할 수 있도록 합니다.":"使客户端编译器能够绑定库中的类型、变量、常量和全局函数。\r\n","Der zu schreibende Wert.":"要写入的值。\r\n","Ein nicht verwalteter Zeiger auf das BSTR oder 0, wenn ":"指向 BSTR 的非托管指针，如果\r\n","Показывает соглашение о вызове для точки входа.":"显示入口点的调用约定。\r\n","부호 없는 정수(Long) 값과 ":"无符号长整数值和\r\n","IPersist와 IPersistStream의 COM 기능이 있는 IMoniker 인터페이스의 관리되는 정의를 제공합니다.":"提供具有 IPersist 和 IPersistStream 的 COM 功能的 IMoniker 接口的托管定义。\r\n","Объект, для которого необходимо возвратить хэш-код. ":"要为其返回哈希码的对象。\r\n","При возвращении данного метода содержит ссылку на перечисление IMPLTYPEFLAGS.Этот параметр передается без инициализации.":"当此方法返回时，包含对 IMPLTYPEFLAGS 枚举的引用。此参数无需初始化即可传递。\r\n"," 위치에서 시작하는 ":" 从位置开始\r\n","-Klasse unter Verwendung des angegebenen Arrays von Bytewerten.":"使用指定的字节值数组的类。\r\n"," 열거형 상수 중 하나를 지정합니다. ":" 指定枚举常量之一。\r\n",", der die ursprüngliche Quellschnittstelle aus der Typbibliothek enthält.COM verwendet diese Schnittstelle für Rückrufe an die verwaltete Klasse.":", 其中包含来自类型库的原始源接口。COM 使用此接口回调托管类。\r\n","-Objekte unterschiedliche .NET Framework-Versionen darstellen.":"- 对象代表不同的 .NET Framework 版本。\r\n","의 첫 번째 문자가 잘못된 경우 변환할 숫자가 없다는 예외 메시지가 표시되고, 그렇지 않은 경우 ":"如果第一个字符无效，则显示没有要转换的数字的异常信息；\r\n","이 메서드는 반환될 때 모니커의 열거자 개체에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含对名字对象枚举器对象的引用。此参数未初始化传递。\r\n","Возвращает или задает пользовательское имя для имени ключа словаря.":"Возвращает или задает пользовательское имя для имени ключа словаря。\r\n","Массив 8-битовых целых чисел без знака, эквивалентный числу элементов ":"8位无符号整数数组，相当于元素个数\r\n","Gibt an, dass die Aufrufkonvention Macintosh Programmers' Workbench (MPW) PASCAL für eine Methode verwendet wird.":"指定 Macintosh 程序员工作台 (MPW) PASCAL 调用约定用于方法。\r\n","지정된 32비트 부호 없는 정수의 값을 해당하는 64비트 부호 있는 정수로 변환합니다.":"将指定的 32 位无符号整数的值转换为等效的 64 位有符号整数。\r\n",", для которого ":"，为此\r\n","한 복소수에서 다른 복소수를 뺀 후 결과를 반환합니다.":"从一个复数中减去另一个复数并返回结果。\r\n","이벤트 소스 인터페이스의 정규화된 이름을 가져옵니다.":"获取事件源接口的完全限定名称。\r\n"," < -1、":" < -1、\r\n","Возвращает IID выходящего интерфейса, управляемого с использованием этой точки подключения.":"获取由此连接点管理的传出接口的 IID。\r\n","Задает способ обработки чисел, которые равноудалены от двух соседних чисел, в математических методах округления.":"指定在数学舍入方法中如何处理与两个相邻数字等距的数字。\r\n"," выходящего интерфейса.Этот параметр передается без инициализации.":" 传出接口，该参数不经初始化直接传递。\r\n","Только для 64-разрядных процессоров Intel.":"仅适用于 64 位 Intel 处理器。\r\n","보고된 각 진행률 값에 대한 콜백을 호출하는 ":"它为每个报告的进度值调用回调。\r\n"," oder gleich ":" 或相同\r\n","C 스타일 배열을 나타냅니다.":"表示 C 样式数组。\r\n","Die Zahl e hoch ":"数e高\r\n","Stellt einen ACE (Access Control Entry, Zugriffssteuerungseintrag) dar und ist die Basisklasse für alle anderen ACE-Klassen.":"表示访问控制条目 (ACE)，并且是所有其他 ACE 类的基类。\r\n","Определяет неявное преобразование 16-битового целого числа со знаком в комплексное число.":"定义从 16 位带符号整数到复数的隐式转换。\r\n","Извлекает имя типа, представленного объектом ITypeInfo.":"检索 ITypeInfo 对象表示的类型的名称。\r\n"," размещен перед первым элементом словаря или после последнего элемента. ":" 放在字典的第一个元素之前或最后一个元素之后。\r\n"," больше значения 64-битового целого числа со знаком.":" 大于 64 位有符号整数的值。\r\n"," è stato passato a ":" è stato passato a\r\n","-Objekt zugeordnete Objekt ein Verzeichnisobjekt ist.":"-Object 关联对象是一个目录对象。\r\n","Содержит указатель на связанную структуру ":"包含指向关联结构的指针\r\n","-Parameters ist 0 (null), oder der ":"- 参数为 0（零），或\r\n","Считывает один байт с указанным смещением (или индексом) из неуправляемой памяти.":"从非托管内存的指定偏移量（或索引）处读取一个字节。\r\n","не является ни последовательным, ни явным.-или-Параметр ":"既不是连续的也不是显式的。-或-参数\r\n","Целевой объект, к которому должен привязываться делегат события.":"事件委托应绑定到的目标。\r\n","Регистрирует переданный объект как один из объектов, привязка которых была выполнена во время операции моникера и которые необходимо освободить после завершения этой операции.":"将传递的对象注册为在名字对象操作期间绑定的对象之一，并且必须在名字对象操作完成时释放。\r\n"," entspricht, oder 0 (null), wenn ":" 等于，或 0（零）如果\r\n","Получает имя исходного типа с указанием сборки.":"获取具有程序集规范的源类型的名称。\r\n","Ein Objekt, das das konvertierte HRESULT darstellt.":"表示转换后的 HRESULT 的对象。\r\n",", использующий внутреннее целочисленное представление.":"一个使用内部整数表示的 。\r\n","Возвращает натуральный логарифм (по основанию e) указанного комплексного числа.":"返回指定复数的自然对数（以 e 为底）。\r\n","Инкапсулированный в обертку объект.":"包裹的对象。\r\n","-Methode eingeschränkt wurde.":"方法受到限制。\r\n","지정된 관리되지 않는 COM 개체를 나타내는 개체입니다.":"表示指定的非托管 COM 对象的对象。\r\n","숫자 0을 나타내는 값을 가져옵니다.":"获取表示数字 0 的值。\r\n","Возвращает отображаемую строку для заданного экземпляра ":"返回给定实例的显示字符串\r\n","Определяет неявное преобразование байта без знака в комплексное число.":"指定将无符号字节隐式转换为复数。\r\n"," и устанавливает свойство ":" 并设置属性\r\n","이벤트 소스 인터페이스의 정규화된 이름입니다.":"事件源接口的完全限定名称。\r\n"," utilizando los valores de una matriz de bytes.":" 使用字节矩阵的值。\r\n"," > 1이거나 ":" > 1 或\r\n","При применении к методу указывает, что метод вызывается после сериализации объекта в графе объекта.Порядок сериализации относительно других объектов на диаграмме является недетерминированным.":"当应用于方法时，指定在对象图中的对象序列化后调用该方法。相对于图中其他对象的序列化顺序是不确定的。\r\n","[.NET Framework 4.5.1 이상 버전에서 지원됨] 지정된 형식의 배열에 지정된 인덱스에 있는 요소의 주소를 가져옵니다. ":"[.NET Framework 4.5.1 及更高版本支持] 获取指定类型数组中指定索引处元素的地址。\r\n"," 요소에 대한 base 64 문자열 표현입니다.":" 元素的 base 64 字符串表示形式。\r\n"," либо если значения параметров ":" 或者如果参数值\r\n"," не поддерживает интерфейс ":" 不支持接口\r\n","Служит в качестве хэш-функции для конкретного объекта и подходит для использования в алгоритмах и структурах данных, использующих хэш-коды, например в хэш-таблице.":"用作特定对象的哈希函数，适用于使用哈希码的算法和数据结构，例如哈希表。\r\n","바인딩되는 형식 설명을 식별합니다.":"标识绑定到的类型描述。\r\n"," для маршалинга десятичного значения как типа денежной единицы COM, вместо Decimal.":" 将十进制值编组为 COM 货币类型而不是 Decimal。\r\n","Die angegebene Aufrufkonvention.":"指定的调用约定。\r\n","Ruft alle benutzerdefinierten Daten für den angegebenen Funktionsparameter ab.":"获取指定函数参数的所有自定义数据。\r\n","가 COM에 표시되지 않는 경우":"没有出现在 COM 中\r\n","Ruft die für diese Umgebung definierte Zeichenfolge für einen Zeilenumbruch ab.":"获取为此环境定义的换行符字符串。\r\n","-Wert größer oder gleich einem anderen ":"- 大于或等于另一个的值\r\n","보다 작거나 같은 최대 정수입니다.":"小于或等于的最大整数。\r\n"," меньше 64-битового целого числа со знаком.":" 小于 64 位有符号整数。\r\n","부호 없는 32비트 정수로 변환할 값입니다.":"要转换为无符号 32 位整数的值。\r\n","16-разрядное целое число х со знаком, такое что 0 ≤ x ≤":"16 位有符号整数 x 满足 0 ≤ x ≤\r\n"," das Handle während der Abschlussphase zuverlässig freigeben soll, andernfalls false (dies wird nicht empfohlen). ":" 应该在关闭阶段可靠地释放句柄，否则为 false（不推荐）。\r\n","지정된 콜백을 사용하여 ":"使用指定的回调\r\n"," является пустой строкой.":" 是一个空字符串。\r\n"," wird auf den nächsten Wert gerundet.Der Wert 2,345 wird z. B. bei einer Rundung auf zwei Dezimalziffern zu 2,34, und der Wert 2,355 wird zu 2,36.":" 四舍五入到最接近的值。例如，值 2.345 是例如，当四舍五入到两位小数时，2.34 变成 2.355，变成 2.36。\r\n","Показывает значение DATE.":"显示日期值。\r\n","Используется для встроенных массивов знаков фиксированной длины, появляющихся в структуре.Тип символов, используемый с ":"用于结构中出现的固定长度字符的内置数组。字符类型与\r\n"," равно null, возвращаемая строка содержит указанный путь без расширения.Если ":" 为空，返回的字符串包含不带扩展名的指定路径。如果\r\n","Entfernt alle Zugriffsregeln für die angegebene Sicherheits-ID aus der diesem ":"从此删除指定安全 ID 的所有访问规则\r\n","Ссылка на время последнего изменения объекта. ":"对对象上次修改时间的引用。\r\n","이 멤버를 선언하는 클래스에 대한 ":"对于声明此成员的类 \r\n"," и размера каждого элемента превышает объем доступного адресного пространства.":" 并且每个元素的大小都超过了可用的地址空间。\r\n","Gibt den Fehlercode zurück, der durch die letzte nicht verwaltete Funktion zurückgegeben wurde, die mit einem Plattformaufruf aufgerufen wurde und bei der das ":"返回由平台调用调用的最后一个非托管函数返回的错误代码，其中\r\n","-Schnittstelle nicht. - oder - Die Konvertierung wird nicht unterstützt.":"- 接口没有。 - 或 - 不支持转换。\r\n","이 바인딩 작업을 수행하는 동안 사용되는 바인드 컨텍스트 개체의 IBindCtx 인터페이스에 대한 참조입니다. ":"对该绑定操作期间使用的绑定上下文对象的 IBindCtx 接口的引用。\r\n","Führt eine Modulodivision für eine zur Potenz einer anderen Zahl erhobene Zahl aus.":"对一个数的另一个数的幂执行模除法。\r\n","true, wenn die DACL vor Vererbung geschützt werden soll.":"如果应保护 DACL 不被继承，则为 true。\r\n"," = NaNNaN(beliebiger Wert)":" = NaNNaN（任意值）\r\n","플랫폼을 호출의 검색 경로를 지정하는 열거형 값의 비트 조합입니다. ":"指定平台调用的搜索路径的枚举值的位组合。 \r\n","Указывает, что метод является методом расширения или что класс или сборка содержат методы расширения.":"指示方法是扩展方法，或者类或程序集包含扩展方法。\r\n","Преобразует заданное строковое представление числа в эквивалентное 8-битовое целое число со знаком.":"将数字的指定字符串表示形式转换为等效的 8 位带符号整数。\r\n"," ist kleiner als 0 oder größer als ":" 小于 0 或大于\r\n","이 메서드는 반환될 때 도움말 파일에 사용되는 DLL이 들어 있는 파일의 정규화된 이름이 포함된 BSTR을 포함합니다.호출자에 파일 이름이 필요하지 않은 경우 ":"当此方法返回时，包含一个 BSTR，其中包含包含帮助文件使用的 DLL 的文件的完全限定名称。如果调用者不需要文件名\r\n","Número decimal.":"十进制数。\r\n","La matriz es mayor de 2 gigabytes (GB).":"阵列大于2千兆字节(GB)。\r\n","호출 데이터 개체의 형식, 대상 장치, 렌더링 및 저장소 정보를 설명하는 ":"描述调用数据对象的格式、目标设备、呈现和存储信息。\r\n","Индекс возвращаемого интерфейса ITypeInfo. ":"返回的 ITypeInfo 接口的索引。\r\n"," конструктора.":" 构造函数。\r\n","이 필드는 예약되어 있으므로 0으로 설정해야 합니다.":"该字段是保留字段，必须设置为 0。\r\n","Gibt die größere von zwei 16-Bit-Ganzzahlen mit Vorzeichen zurück.":"返回两个 16 位有符号整数中较大的一个。\r\n","Элементы структуры STATSTG, не возвращаемые этим методом, таким образом получается сэкономить на операциях по выделению памяти. ":"此方法未返回 STATSTG 结构的元素，因此节省了内存分配操作。\r\n","Синус ":"窦\r\n","Gibt alle momentan im Bindungskontext mithilfe der ":"返回所有当前在绑定上下文中使用\r\n","지정된 범위와 식별자를 사용하여 ":"使用指定的范围和标识符\r\n","Gibt bei Anwendung auf eine Methode an, dass die Methode während der Deserialisierung eines Objekts in ein Objektdiagramm aufgerufen wird.Die Reihenfolge der Deserialisierung relativ zu anderen Objekten im Diagramm ist nicht deterministisch.":"当应用于方法时，表示在将对象反序列化到对象图期间调用该方法。反序列化相对于图上其他对象的顺序是不确定的。\r\n","Der zu inkrementierende Verweiszähler für Schnittstellen.":"要增加的接口引用计数。\r\n","Stellt SEH-Fehler (Structured Exception Handler, Strukturierter Ausnahmehandler) dar. ":"表示 SEH（结构化异常处理程序）错误。\r\n","-Enumerationskonstanten an, die den Typ des Speichermediums angibt, mit dem die Objektdaten übertragen werden. ":"- 指定传输对象数据的存储介质类型的枚举常量。\r\n","이 메서드는 반환될 때 검색된 데이터를 넣을 위치를 지정하는 Object를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含一个对象，指定将检索到的数据放在哪里。此参数未初始化传递。\r\n","Aktiviert bzw. deaktiviert das Verhalten der optimalen Zuordnung bei der Konvertierung von Unicode-Zeichen in ANSI-Zeichen.":"将 Unicode 字符转换为 ANSI 字符时启用或禁用最佳映射行为。\r\n",", но дескриптор не обнуляется при восстановлении объекта в процессе завершения.":"，但在终结期间恢复对象时句柄不会无效。\r\n","데이터와 함수의 여러 형식을 지정합니다.":"指定数据和函数的多种格式。\r\n","Объект, инкапсулированный с помощью объекта ":"用对象封装的对象\r\n","Berichtet eine Statusänderung.":"报告状态变化。\r\n","Bezeichnet die Quellschnittstelle und die Klasse zum Implementieren der Methoden der Ereignisschnittstelle, die beim Importieren einer Co-Klasse aus einer COM-Typbibliothek generiert wird.":"标识用于实现从 COM 类型库导入 coclass 时生成的事件接口的方法的源接口和类。\r\n","true, wenn die diesem ":"如果这是真的\r\n"," 매개 변수와 같으면 S_OK이고, 그렇지 않으면 S_FALSE입니다.":" 如果等于参数则为 S_OK，否则为 S_FALSE。\r\n",", используя указанный URI.":", 使用指定的 URI。\r\n","Показывает типы региональных блокировок, поддерживаемые потоком или массивом байтов.":"指示流或字节数组支持的区域锁类型。\r\n","Die primäre Gruppe für dieses ":"这个的主要组\r\n","Der neue Wert des Verweiszählers des RCWs, der dem ":"与 RCW 关联的引用计数的新值\r\n",", или null. ":"，或为空。\r\n","Ein Zeiger auf den neu reservierten Arbeitsspeicher.Dieser Speicher muss mit ":"指向新分配内存的指针\r\n","의 사인입니다.":"的签名。\r\n","두 개의 32비트 부호 있는 정수 중 더 작은 숫자를 반환합니다.":"返回两个 32 位有符号整数中较小的一个。\r\n","Предоставляет управляемое определение структуры STGMEDIUM.":"提供 STGMEDIUM 结构的托管定义。\r\n","true para mantener los datos de la referencia a objeto; de lo contrario, false.El valor predeterminado es false.":"真正的 para mantener los datos de la referencia a objeto； de lo contrario, false. El valor predeterminado es false.\r\n",", переданным как значение false.-или-Параметр ":", 作为 false.-or-Parameter 传递\r\n","Der nullbasierte Index im Quellarray, an dem der Kopiervorgang beginnen soll. ":"源数组中从零开始的索引，从这里开始复制。\r\n","지정된 대리자 형식의 인스턴스입니다.":"指定委托类型的实例。\r\n","Der innere IUnknown-Zeiger des verwalteten Objekts. ":"托管对象的内部 IUnknown 指针。\r\n"," nicht. ":" 不是。\r\n","Gibt an, ob der Aufgerufene vor dem Zurückgeben aus der attributierten Methode die Win32-API SetLastError aufruft.":"指示被调用方是否在从属性方法返回之前调用 Win32 API SetLastError。\r\n","Índice de la variable para la que se obtienen los datos personalizados. ":"获取自定义数据的变量的索引。 \r\n","Ruft die Typbibliothek ab, in der die Typenbeschreibung und der Index in der Typbibliothek enthalten ist.":"获取包含类型描述和类型库索引的类型库。\r\n","Поток, из которого загружается объект. ":"从中加载对象的流。\r\n"," в блок памяти, выделенный из неуправляемого распределителя памяти для COM-задач.":" 到从非托管内存分配器为 COM 任务分配的内存块。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 8비트 부호 없는 정수로 변환합니다.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的 8 位无符号整数。\r\n","반환할 인터페이스의 형식입니다. ":"要返回的接口类型。\r\n","이 이 ":"这个人\r\n","라디안 단위의 각도입니다. ":"以弧度表示的角度。\r\n","클래스 ID를 나타냅니다.":"类ID。\r\n","Сведения о версии сборки. ":"程序集版本信息。\r\n","Der größere der Parameter ":"较大的参数\r\n","이 메서드는 반환될 때 바인딩되는 이름이 VARDESC, FUNCDESC인지 또는 TYPECOMP인지 표시하는 DESCKIND 열거자에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含对 DESCKIND 枚举器的引用，指示绑定名称是 VARDESC、FUNCDESC 还是 TYPECOMP。此参数未初始化传递。\r\n","Возвращает число одинарной точности с плавающей запятой, преобразованное из четырех байтов с указанной позицией в массив байтов.":"返回从指定位置的四个字节转换为字节数组的单精度浮点数。\r\n","Eine Delegatinstanz, die in den entsprechenden Delegattyp umgewandelt werden kann.":"可以转换为适当委托类型的委托实例。\r\n","Объект, действующий как управляющий IUnknown. ":"充当 IUnknown 控件的对象。\r\n"," совпадают; в противном случае — значение false.":" 配对;否则，假的。\r\n","Значение метаданных.":"元数据值。\r\n","Объект, который необходимо заключить в оболочку и преобразовать в ":"要包装并转换为的对象\r\n","알려진 DISPID에 따라 멤버 이름을 알 수 없는 특정 멤버에 바인딩합니다(예: 기본 멤버에 바인딩).":"根据已知的 DISPID 将成员名称绑定到特定的未知成员，例如绑定到默认成员。\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的 8 位有符号整数。\r\n","지정된 경로 문자열에서 파일 이름과 확장명을 반환합니다.":"从给定的路径字符串返回文件名和扩展名。\r\n","Схема URI.":"URI 方案。\r\n","Berechnet eine 32-Bit-Ganzzahl anhand des inneren Zustands des Monikers.":"给定名字对象的内部状态，计算一个 32 位整数。\r\n","현재 인스턴스가 측정한 총 경과 시간을 나타내는 읽기 전용 ":"只读，表示当前实例测量的总运行时间。\r\n","Ruft die Größenordnung (oder den absoluten Wert) einer komplexen Zahl ab.":"获取复数的大小（或绝对值）。\r\n","이 메서드는 반환될 때 도움말 파일의 정규화된 이름을 나타내는 문자열을 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含一个表示帮助文件的完全限定名称的字符串。此参数未初始化传递。\r\n","Definiert, wie auf eine Funktion zugriffen werden kann.":"定义如何访问函数。\r\n","Sucht den größten gemeinsamen Divisor von zwei ":"找到两个的最大公约数\r\n","Eine Symboldarstellung eines Objekts.":"对象的图标表示。\r\n",", за исключением того, что для этой функции существует реализация.":", 除了这个函数有一个实现。\r\n","-Enumeration, kombiniert mit einer logischen OR-Operation.":"-枚举与逻辑或运算相结合。\r\n","Win32 AddDllDirectory 기능을 사용하여 프로세스 전체 검색 경로에 명시적으로 추가되었던 모든 경로를 포함합니다. ":"包括使用Win32AddDllDirectory功能显式添加到进程范围搜索路径的所有路径。 \r\n","마샬러가 VT_DISPATCH으로 마샬링할 개체를 래핑합니다.":"包装封送拆收器将使用VT_DISPATCH封送的对象。\r\n","곱할 첫 번째 값입니다.":"要乘以的第一个​​值。\r\n","Указывает, что измененный тип имеет модификатор const.Этот класс не наследуется.":"表示被修饰的类型有const修饰符，该类不被继承。\r\n","Описывает тип интерфейса, созданного для класса. ":"描述为类创建的接口类型。\r\n","Eine durch NULL getrennte Liste von voll gekennzeichneten Namen der Ereignisquellen-Schnittstellen. ":"完全限定的事件源接口名称的 NULL 分隔列表。\r\n","Целочисленное значение.":"整数值。\r\n","Gibt eine Standardschnittstelle an, die für COM verfügbar gemacht werden soll.Diese Klasse kann nicht vererbt werden.":"指定向 COM 公开的默认接口。此类不能被继承。\r\n","Объект, представляющий преобразованное значение HRESULT и сведения, полученные из параметра ":"表示转换后的 HRESULT 值和从参数中获取的信息的对象\r\n",", поиск которого осуществляется в ":", 在中搜索\r\n","문화권별 서식 지정 정보를 사용하여, 지정된 문자열의 첫째 문자를 유니코드 문자로 변환합니다.":"使用区域性特定格式设置信息将指定字符串的第一个字符转换为 Unicode 字符。\r\n","Преобразует значение заданного 16-битового целого числа без знака в эквивалентное 8-битовое целое число со знаком.":"将指定的 16 位无符号整数的值转换为等效的 8 位有符号整数。\r\n","Die Gleitkommazahl mit doppelter Genauigkeit, die ":"双精度浮点数\r\n",", указывающего версию платформы .NET Framework, и имени профиля.":"一个 ，它指定 .NET Framework 的版本和配置文件的名称。\r\n","-Felds sein und muss ein Vielfaches von vier sein.":"字段并且必须是四的倍数。\r\n","인터페이스나 dispinterface는 소스나 싱크의 기본값을 나타냅니다.":"接口或调度接口表示源或接收器的默认值。\r\n","Показывает одномерный сосчитанный массив.":"显示一维计数数组。\r\n",", не распознаваемый ":", 无法识别\r\n"," 매개 변수 레이아웃이 Sequential 또는 Explicit이 아닌 경우또는":" 如果参数布局不是 Sequential 或 Explicit，或者\r\n","지정된 범위 내의 임의의 정수를 반환합니다.":"返回指定范围内的随机整数。\r\n","Объект указанного типа, соответствующий параметру ":"与参数匹配的指定类型的对象\r\n","Bezeichnet die Funktionsmember-ID.":"标识函数成员 ID。\r\n","Devuelve un número de punto flotante de precisión doble convertido a partir de ocho bytes en la posición especificada de una matriz de bytes.":"Devuelve a número de punto flotante de precisión doble convertido a partir de ocho bytes en la posición especificada de una matrix de bytes。\r\n","Devuelve el valor entero sin signo de 32 bits especificado como una matriz de bytes.":"Devuelve el valor entero sin signo de 32 bits especificado como una matrix de bytes。\r\n","Das Ereignis besitzt keinen öffentlichen remove-Accessor.":"该事件没有公共删除访问器。\r\n","Indica que se utiliza la convención de llamada CDECL de Macintosh Programmers' Workbench (MPW) para un método.":"指示Macintosh Programmers'Workbench(MPW)CDECL调用约定用于方法。\r\n","Gibt das Ende der ":"表示结束\r\n","Obtiene o establece el nombre personalizado para un nombre de valor del diccionario.":"Obtiene o establece el nombre personalizado para un nombre de valor del diccionario。\r\n","이 변수는 데이터 바인딩을 지원합니다.":"该变量支持数据绑定。\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.":"将指定的 16 位无符号整数的值转换为等效的 32 位有符号整数。\r\n"," mit dem Wert ":" 与价值\r\n","Этот параметр возвращает сведения из вызываемого объекта в вызывающий объект.":"该参数将被调用者的信息返回给调用者。\r\n","-Array zurück.Dieser Parameter wird nicht initialisiert übergeben.":"-Array. 此参数未初始化传递。\r\n","지정된 밑을 사용하여 지정된 복소수의 로그를 반환합니다.":"使用指定底数返回指定复数的对数。\r\n","e의 ":"的\r\n","값이 S_OK인 HRESULT입니다.":"值为 S_OK 的 HRESULT。\r\n","실행 중 등록된 개체를 열거합니다.":"在运行时枚举已注册的对象。\r\n","-Objekt ab, das diesem ":"- 来自这个的对象\r\n","Ein boolescher Wert mit 4 Bytes (true != 0, false = 0).Dies ist der Win32-BOOL-Typ.":"一个 4 字节的布尔值（true != 0, false = 0）。这是 Win32 BOOL 类型。\r\n","Ein Offset in ":"偏移量\r\n","에 절대 경로가 포함되어 있으면 이 메서드는 ":"如果包含绝对路径，则此方法\r\n","64비트 정수를 나타냅니다.":"表示 64 位整数。\r\n","Entero de 32 bits con signo formado por cuatro bytes que comienzan en ":"Entero de 32 bits con signo formado por cuatro bytes que comienzan en\r\n","Определяет список интерфейсов, предоставляемых в виде источников событий COM для класса с атрибутом.":"为具有 属性的类定义公开为 COM 事件源的接口列表。\r\n","지정된 8비트 부호 있는 정수의 값을 해당하는 64비트 부호 없는 정수로 변환합니다.":"将指定的 8 位有符号整数的值转换为等效的 64 位无符号整数。\r\n"," usando un valor entero de 32 bits con signo.":" 使用 32 位 con signo 的勇气。\r\n","Преобразует значение заданного 8-битового целого числа со знаком в эквивалентный символ Юникода.":"将指定的 8 位带符号整数的值转换为其等效的 Unicode 字符。\r\n"," в значение числа с плавающей запятой одиночной точности.":" 到单精度浮点值。\r\n","Die Methode gibt den Hashwert für diesen Moniker zurück.Dieser Parameter wird nicht initialisiert übergeben.":"该方法返回此名字对象的哈希值。此参数未初始化传递。\r\n","Ruft das aktuelle Element in der ":"获取当前元素\r\n",", como se muestra en la tabla siguiente.Valor devueltoDescripciónMenor que ceroLa instancia actual es menor que ":", como se muestra en la tabla siguiente.Valor devueltoDescripciónMenor que ceroLa instancia actual es menor que\r\n","Devuelve un código hash para este tipo de valor.":"返回此类值的哈希代码。\r\n"," ist ohne Leerraumzeichen nicht 0 (null) und kein Vielfaches von 4. - oder - Das Format von ":" 在没有空白字符的情况下不为零并且不是 4 的倍数。 - 或 - 的格式\r\n","가 -1이면 라이브러리의 설명서가 반환됩니다. ":"如果是 -1，则返回库的文档。\r\n","Ruft den Wert von Flags ab, mit denen bestimmt wird, wie diese Regel von untergeordneten Objekten geerbt wird.":"获取用于确定子对象如何继承此规则的标志的值。\r\n","을 형식으로 구현합니다.":"被实现为一种形式。\r\n","-Klasse mit der angegebenen SDDL-Zeichenfolge (Security Descriptor Definition Language).":"具有指定安全描述符定义语言 (SDDL) 字符串的类。\r\n","Освобождает блок памяти, выделенный неуправляемым механизмом распределения памяти для задач COM.":"释放由非托管内存分配引擎为 COM 任务分配的内存块。\r\n","Marshallt Daten vom Typ VT_BSTR aus verwaltetem zu nicht verwaltetem Code.Diese Klasse kann nicht vererbt werden.":"Marshallt Daten vom Typ VT_BSTR aus verwaltetem zu nicht verwaltetem Code.Diese Klasse kann nicht vererbt werden。\r\n"," 호출에 사용되는 ":" 用于通话 \r\n","에는 기본 64 문자가 아닌 문자, 두 개 이상의 안쪽 여백 문자 또는 안쪽 여백 문자 중 공백 문자가 아닌 문자를 포함되어 있습니다.":"包含 base 64 字符以外的字符、两个或多个填充字符或任何不是空格字符的填充字符。\r\n","Das verwaltete Array, auf das diese Instanz verweist.":"Das verwaltete Array, auf das diese Instanz verweist。\r\n","При возвращении данного метода содержит новый объект потока.Этот параметр передается без инициализации.":"当这个方法返回时，包含一个新的线程对象。这个参数被传递而没有初始化。\r\n","base-64 숫자의 이진 데이터를 해당하는 8비트 부호 없는 정수 배열로 인코딩하는 방법으로 유니코드 문자 배열의 하위 집합을 변환합니다.매개 변수에는 입력 배열의 하위 집합과 변환할 요소 수를 지정합니다.":"通过将 base-64 数字的二进制数据编码为等效的 8 位无符号整数数组来转换 Unicode 字符数组的子集。参数指定输入数组的子集和要转换的元素数。\r\n","URI에 포함된 쿼리 정보입니다.":"URI 中包含的查询信息。\r\n","Преобразует значение заданного 16-разрядного целого числа без знака в эквивалентный символ Юникода.":"将指定的 16 位无符号整数的值转换为其等效的 Unicode 字符。\r\n","Die Ausnahme, die ausgelöst wird, wenn während der Serialisierung oder Deserialisierung ein Fehler auftritt.":"在序列化或反序列化过程中发生错误时抛出的异常。\r\n","32비트 부호 있는 정수 값을 지정된 기수의 해당하는 문자열 표현으로 변환합니다.":"将 32 位有符号整数值转换为其在指定基数中的等效字符串表示形式。\r\n","ISequentialStream 기능이 있는 IStream 인터페이스의 관리되는 정의를 제공합니다.":"提供具有 ISequentialStream 功能的 IStream 接口的托管定义。\r\n","Das aus dem nicht verwalteten Arbeitsspeicher gelesene Byte.":"从非托管内存读取的字节。\r\n","지정된 부울 값을 해당하는 64비트 부호 있는 정수로 변환합니다.":"将指定的布尔值转换为等效的 64 位带符号整数。\r\n","Число копируемых элементов массива. ":"要复制的数组元素的数量。\r\n","Der Name des zu suchenden Objekts. ":"要搜索的对象的名称。\r\n"," представляет номер, который находится вне диапазона ":" 表示超出范围的数字\r\n","При переопределении в производном классе сравнивает две строки и возвращает сведения об их относительном порядке сортировки.":"在派生类中重写时，比较两个字符串并返回有关它们的相对排序顺序的信息。\r\n","Mindestens ein Member der ":"至少一名成员\r\n","Der Wert des Fehlercodes (HRESULT), der dieser Ausnahme zugeordnet ist. ":"与此异常关联的错误代码 (HRESULT) 的值。\r\n",", представляющий -1 миллисекунду для неограниченного ожидания. ":"一个代表 -1 毫秒的无限期等待。\r\n","При применении к элементу типа указывает, что этот элемент является частью контракта данных и сериализуется ":"当应用于某个类型的元素时，表示该元素是数据协定的一部分并且是可序列化的\r\n","Gibt den Namen für die Quelle der Ausnahme an.In der Regel ist dies ein Anwendungsname.":"指定异常源的名称。通常这是一个应用程序名称。\r\n","지정된 32비트 부호 있는 정수의 값을 해당하는 16비트 부호 있는 정수로 변환합니다.":"将指定的 32 位带符号整数的值转换为等效的 16 位带符号整数。\r\n","Addiert die Werte von zwei angegebenen ":"添加两个指定的值\r\n"," (-1) в случае неограниченного времени ожидания. ":" (-1) 在无限等待时间的情况下。\r\n",", включающее строковые представления ключа и значения.":"包含键和值的字符串表示形式的 。\r\n","-Flag festgelegt wurde.":"标志已经设置。\r\n","Gibt eine long-Ganzzahl an.":"指定一个长整数。\r\n","Преобразует заданное логическое значение в эквивалентное число с плавающей запятой одиночной точности.":"将指定的布尔值转换为其等效的单精度浮点数。\r\n","Возвращает число описаний типов в библиотеке типов.":"返回类型库中类型声明的数量。\r\n","Объект, содержащий ближайшее возможное представление параметра ":"包含参数的最接近可能表示的对象\r\n"," не принимает ни значение null, ни значение ":" 既不为 null 也不为值\r\n","바이트 단위로 표현된 스트림의 새 크기입니다. ":"以字节表示的流的新大小。\r\n","Gibt den angegebenen Gleitkommawert mit einfacher Genauigkeit als Bytearray zurück.":"Gibt den angegebenen Gleitkommawert mit einfacher Genauigkeit als Bytearray zurück。\r\n"," равны. Больше нуля. Значение ":" 是平等的。零以上。意义\r\n","Удаляемый ключ. ":"要删除的密钥。\r\n","Eine 1-Byte-Ganzzahl ohne Vorzeichen.":"一个 1 字节的无符号整数。\r\n"," находится на равном расстоянии от двух целых чисел (четного и нечетного), то возвращаемое число определяется по значению параметра ":" 与两个整数（偶数和奇数）的距离相等，那么返回的数由参数的值决定\r\n","Расположение в выходном массиве, с которого начинается запись.":"输出数组中记录开始的位置。\r\n","Входной массив.":"输入数组。\r\n","Ruft einen Code ab, der den Typ der aufgetretenen Ausnahme bezeichnet.":"获取标识发生的异常类型的代码。\r\n","Возвращает угол, косинус которого равен указанному числу.":"返回余弦等于指定数字的角度。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in einen entsprechenden booleschen Wert.":"将指定的 64 位带符号整数的值转换为等效的布尔值。\r\n","해제하기 위해 등록할 개체입니다. ":"要注册释放的对象。\r\n","Только для 64-разрядных процессоров AMD.":"仅适用于 64 位 AMD 处理器。\r\n","이 클래스는 집계를 지원합니다.":"这个类支持聚合。\r\n","Возвращает или задает имя схемы URI.":"获取或设置 URI 的方案名称。\r\n","Gibt den Wert der angegebenen vorzeichenlosen 64-Bit-Ganzzahl als Bytearray zurück.":"Gibt den Wert der angegebenen vorzeichenlosen 64-Bit-Ganzzahl als Bytearray zurück。\r\n","Das freizugebende COM-Objekt.":"要释放的 COM 对象。\r\n","다른 값에서 하나의 ":"一个在另一个值\r\n","Идентификатор IID запрошенного интерфейса хранилища. ":"请求的存储接口的 IID。\r\n","2-байтовое значение типа VARIANT_BOOL, определенное OLE (true = -1, false = 0).":"由 OLE 定义的 VARIANT_BOOL 类型的 2 字节值（true = -1，false = 0）。\r\n","Ruft den Namen einer Methode ab, die eine Liste von Typen zurückgibt, die bei der Serialisierung oder Deserialisierung erkannt werden sollen. ":"获取返回类型列表以在序列化或反序列化时识别的方法的名称。\r\n","Число копируемых элементов массива.":"要复制的数组元素的数量。\r\n","Экземпляр объекта.Этот параметр не учитывается.":"对象实例。该参数被忽略。\r\n",", с дополнительными сведениями об ошибки, передаваемыми в интерфейсе IErrorInfo для объекта исключения.":"，在异常对象的 IErrorInfo 接口中传递了额外的错误信息。\r\n","Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное 8-битовое целое число без знака.":"将指定的 16 位有符号整数的值转换为等效的 8 位无符号整数。\r\n","으로, 참조로 전달됩니다.":", 这是通过引用传递的。\r\n","-Instanz die gleiche .NET Framework-Version wie ein angegebenes Objekt darstellt.":"instance 表示与指定对象相同的 .NET Framework 版本。\r\n","Führt Vorgänge für ":"执行操作\r\n",") во втором квадранте, π/2 < θ≤π.Для (":") 在第二象限，π/2 < θ≤π。对于 (\r\n","를 catch합니다.호출자에게 멤버에 액세스할 권한이 없는 경우":"接住。调用方没有访问成员的权限。\r\n","-Attribut gekennzeichnet, an das der Wert false übergeben wurde.- oder -Der ":"-传递了值 false 的属性。-或-\r\n","이름을 형식 멤버에 매핑하거나 형식 라이브러리에 있는 전역 변수와 함수를 바인딩합니다.":"将名称映射到类型成员或绑定类型库中的全局变量和函数。\r\n","Matriz de bytes cuya longitud es 8.":"矩阵 de bytes cuya longitud es 8。\r\n","지정된 형식을 사용하여 ":"使用指定格式\r\n","현재 관리되는 스레드의 고유 식별자를 가져옵니다.":"获取当前托管线程的唯一标识符。\r\n","Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in ein ":"使用指定的区域性特定格式设置信息将指定对象的值转换为\r\n","Имя контракта данных для типа коллекции.":"Имя контракта данных для типа коллекции。\r\n","Fügt einen Ereignishandler an ein COM-Objekt an.":"将事件处理程序附加到 COM 对象。\r\n"," представляет тот же экземпляр класса ":" 代表同一个类实例\r\n",", der diesem ":"这是谁\r\n","Инициализирует новый экземпляр класса ComVisibleAttribute.":"初始化 ComVisibleAttribute 类的新实例。\r\n","로그의 밑입니다. ":"它在日志下面。\r\n","지정된 32비트 부호 있는 정수 값을 해당하는 10진수로 변환합니다.":"将指定的 32 位带符号整数值转换为其等效的十进制值。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 32 位无符号整数的值转换为等效的 8 位无符号整数。\r\n","인지를 나타냅니다.":"인지를나타냅니다。\r\n","원점(x축과 y축의 교차점)에서 숫자까지의 거리인 크기입니다.":"幅度，即数字距原点（x 轴和 y 轴的交点）的距离。\r\n","Сопоставляет друг с другом имена и идентификаторы элементов и параметров.":"将元素和参数名称和 ID 相互映射。\r\n","Преобразует значение заданного 32-битового целого числа без знака в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"给定指定的区域性特定格式设置信息，将指定的 32 位无符号整数的值转换为其等效的字符串表示形式。\r\n","Делегат, удаляемый из списка вызова.":"要从调用列表中删除的委托。\r\n","Cuando se aplica al miembro de un tipo, especifica que el miembro forma parte de un contrato de datos y lo puede serializar ":"Cuando se aplica al miembro de un tipo, esspecifica que el miembro forma parte un contrato de datos y lo puede serializar\r\n","지정된 부울 값을 해당하는 64비트 부호 없는 정수로 변환합니다.":"将指定的布尔值转换为等效的 64 位无符号整数。\r\n","Konvertiert den Wert des angegebenen Objekts in ein Unicode-Zeichen.":"将指定对象的值转换为 Unicode 字符。\r\n"," возвращается без изменений.":" 返回不变。\r\n"," может закончиться успешно.Если метод инициализации рекурсивно осуществляет доступ к свойству ":" 可能会成功。如果初始化方法递归访问该属性\r\n","Объединяет массив строк в путь.":"将字符串数组连接到路径中。\r\n","Уведомляет все зарегистрированные приемники уведомлений о том, что объект перешел из состояния выполнения в состояние загруженности.  Этот метод вызывается сервером.":"通知所有已注册的通知接收器该对象已从运行状态转换为加载状态。该方法由服务器调用。\r\n","Die Identität, auf die die Überwachungsregel angewendet wird. ":"审核规则适用的身份。\r\n","4바이트 부울 값(true != 0, false = 0)입니다.Win32 BOOL 형식입니다.":"一个 4 字节的布尔值（true != 0，false = 0）。Win32 BOOL 类型。\r\n","Ein Bytearray mit der Länge 4.":"Ein Bytearray mit der Lange 4。\r\n"," с заданным сообщением об ошибке и именем файла, который не может быть загружен.":" 带有给定的错误消息和无法加载的文件名。\r\n","Der Objekttyp, der den ACE erben kann.":"可以继承 ACE 的对象类型。\r\n","Ein Wert, der den Punkt angibt, bei dem die Erfassung beginnen soll.":"一个值，指定开始捕获的点。\r\n","가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어, 4.5는 4로 변환되고 5.5는 6으로 변환됩니다.":"如果介于两个整数之间，则返回偶数。例如，4.5 转换为 4，5.5 转换为 6。\r\n","Указатель на неуправляемый блок памяти. ":"指向非托管内存块的指针。\r\n"," ist kleiner als -1 oder größer als 65.535. ":" 小于 -1 或大于 65,535。\r\n","지정된 8비트 부호 없는 정수의 값을 해당하는 유니코드 문자로 변환합니다.":"将指定的 8 位无符号整数的值转换为等效的 Unicode 字符。\r\n","수정할 경로 정보입니다.경로에는 ":"要修改的路径信息。\r\n","의 내용은 0이 됩니다.종료자가 실행되기 전에 Weak 참조가 0이 되므로 종료자가 개체를 재활용하더라도 Weak 참조는 계속 0이 됩니다.":"的内容为零。因为弱引用在终结器执行之前为零，所以即使终结器回收对象，弱引用仍然为零。\r\n","관리되지 않는 메모리 블록의 데이터를 관리되는 개체로 마샬링합니다.":"将非托管内存块中的数据编组到托管对象中。\r\n"," на другое, возвращает результат, а также возвращает остаток в виде параметра вывода.":" 到另一个，返回结果，并将余数作为输出参数返回。\r\n","-Eigenschaft ist kleiner als 0 (null).":"属性小于零。\r\n","Указывает, что в числовой строке могут находиться разделители групп, например символы, отделяющие сотни от тысяч.Если значение ":"指定数字字符串可以包含组分隔符，例如分隔数百和数千的字符。如果值\r\n","-Feld und vom ":"-场和从\r\n","비교할 두 개의 10진수 중 두 번째 숫자입니다. ":"要比较的两个十进制数中的第二个。\r\n","가 2, 8, 10 또는16이 아닌 경우 또는기수가 10이 아닌 부호 없는 숫자를 나타내는 ":"不是 2、8、10 或 16，或表示基数不是 10 的无符号数\r\n"," 값이 들어 있는 문자열입니다. ":" 包含值的字符串。\r\n","e를 복소수로 지정된 지수만큼 거듭제곱하여 반환합니다.":"返回 e 的指定复数次幂。\r\n","Число преобразуемых элементов ":"要转换的元素数\r\n","보다 크거나 같고 ":"大于或等于\r\n","Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.":"将指定基数中数字的字符串表示形式转换为等效的 16 位无符号整数。\r\n","관리되지 않는 메모리 블록에 대한 포인터로서 이 메서드가 호출되기 전에 할당되어야 합니다.":"指向非托管内存块的指针，必须在调用此方法之前分配该内存块。\r\n","Enthält die Typbeschreibung und Prozessübertragungsinformationen für eine Variable, eine Funktion oder einen Funktionsparameter.":"包含变量、函数或函数参数的类型描述和过程传输信息。\r\n","Функция, вызываемая при помощи синтаксиса обычного доступа к свойству.":"使用普通属性访问语法调用的函数。\r\n",", представляющий указанное исключение в текущей точке в коде. ":"一个 ，表示代码中当前位置的指定异常。\r\n","Функция, предоставляющая объект наилучшим образом.Только одна функция в типе может содержать этот атрибут.":"最好暴露对象的函数。一个类型中只有一个函数可以包含此属性。\r\n"," wenn ":" 如果\r\n","를 식별하는 모니커에 대한 참조입니다. ":"对标识 .\r\n","-Array, an dem mit dem Kopieren begonnen werden soll.":"- 开始复制的数组。\r\n","Die Zugriffsmaske für dieses ":"这个的访问掩码\r\n"," oder null (0), wenn die Konvertierung nicht ausgeführt werden konnte.Die Konvertierung schlägt fehl, wenn der ":" 如果无法执行转换，则为零 (0)。如果\r\n","Представляет маркер соединения, возвращаемый из вызова ":"表示从调用返回的连接句柄\r\n","Dieser Wert wird von DLL-Objektanwendungen und -Objekthandlern verwendet, die ihre Objekte selbst zeichnen.":"此值由绘制自己的对象的 DLL 对象应用程序和对象处理程序使用。\r\n","URI의 체계 이름을 가져오거나 설정합니다.":"获取或设置 URI 的方案名称。\r\n","Stellt die Anzahl der seit dem 1. Januar 1601 vergangenen 100-Nanosekundenintervalle dar.Bei dieser Struktur handelt es sich um einen 64-Bit-Wert.":"表示自 1601 年 1 月 1 日以来的 100 纳秒间隔数。此结构是一个 64 位值。\r\n","-Klasse mit dem angegebenen GUID.":"具有指定 GUID 的类。\r\n","Die Länge des Eingabearrays minus ":"输入数组的长度减去\r\n","Отображаются как отдельные связываемые свойства.":"显示为单独的可绑定属性。\r\n"," и значением HRESULT, равным COR_E_DIRECTORYNOTFOUND.":" 和 COR_E_DIRECTORYNOTFOUND 的 HRESULT 值。\r\n"," 값의 최대 공약수를 구합니다.":" 값의최대공약수를구합니다。\r\n","Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное логическое значение.":"将指定的 8 位带符号整数的值转换为其等效的布尔值。\r\n","Член возвращает свойства.":"成员返回属性。\r\n","Возвращает объект указанного типа, чье значение эквивалентно заданному объекту.Параметр предоставляет сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"返回值等同于指定对象的指定类型的对象。该参数提供特定于区域性的格式设置信息。\r\n","-Objekt umschlossene Objekt ab.":"-Object 包裹的对象。\r\n","Devuelve el valor booleano especificado como una matriz de bytes.":"Devuelve el valor booleano especificado como a matrix de bytes。\r\n","예외 정보 구조체에 대한 포인터로, DISP_E_EXCEPTION이 반환되는 경우에만 채워집니다. ":"指向异常信息结构的指针，只有在返回 DISP_E_EXCEPTION 时才会填充该结构。\r\n","Инкапсулирует связанные с операционной системой объекты, ожидающие монопольного доступа к общим ресурсам.":"封装期望独占访问共享资源的操作系统相关对象。\r\n","Представляет код ошибки, определяющий ошибку.":"表示标识错误的错误代码。\r\n","에서 가져온 정보를 나타내는 개체입니다.":"表示从中获得的信息的对象\r\n",", то есть число, остающееся после отбрасывания дробной части.":"，即舍弃小数部分后剩余的数。\r\n","Diese Methode gibt ein BSTR zurück, das den vollqualifizierten Namen der Datei enthält, die die für die Hilfedatei verwendete DLL enthält.Wenn der Aufrufer den Dateinamen nicht benötigt, kann ":"此方法返回一个 BSTR，其中包含包含用于帮助文件的 DLL 的文件的完全限定名称。如果调用者不需要文件名，它可以\r\n","지정된 16비트 부호 없는 정수의 값을 해당하는 8비트 부호 없는 정수로 변환합니다.":"将指定的 16 位无符号整数的值转换为等效的 8 位无符号整数。\r\n","Gibt die opaken Rückrufdaten zurück, die diesem ":"返回与此关联的不透明回调数据\r\n","이면 null이고, 그렇지 않으면 false입니다.":"为空，否则为假。\r\n","Ссылка на этот экземпляр после завершения операции добавления.После операции добавления этот экземпляр содержит все данные, существовавшие до операции, к которым добавляется копия параметра ":"A reference to this instance after the add operation completes. 添加操作后，此实例包含操作之前存在的所有数据，并向其中添加了参数的副本\r\n"," 배열에 이름 수를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":" 包含数组中名称的数量。此参数未初始化传递。\r\n","Die Anzahl der zu kopierenden Unicode-Zeichen.":"要复制的 Unicode 字符数。\r\n"," 개체의 값을 더합니다.":" 添加对象的值。\r\n","Die Größe des angegebenen Typs in nicht verwaltetem Code.":"非托管代码中指定类型的大小。\r\n",", рассчитанное при помощи LHashValOfNameSys. ":", 使用 LHashValOfNameSys 计算。\r\n","Это значение используется приложениями объектов DLL и дескрипторами объектов, которые выполняют рисунок своих объектов.":"此值由 DLL 对象应用程序和绘制其对象的对象句柄使用。\r\n"," 값을 지정된 값의 거듭제곱으로 변환합니다.":" 将值转换为指定值的幂。\r\n","IMPLICITAPPOBJ가 반환되었음을 나타냅니다.":"指示已返回 IMPLICITAPPOBJ。\r\n","Ruft den Schemanamen des URIs ab oder legt diesen fest.":"获取或设置 URI 的方案名称。\r\n"," mediante el mensaje de error y la excepción subyacente especificados.":" mediante el mensaje de error y la excepción subyacente especificados.\r\n","형식 라이브러리의 부 버전 번호를 나타냅니다.":"指示类型库的次要版本号。\r\n","해제할 FUNCDESC 구조체에 대한 참조입니다. ":"对 FUNCDESC 结构的引用以释放。\r\n","를 반환합니다.디코딩된 ":"返回解码\r\n","Показывает, что поток содержит объект.":"指示流包含一个对象。\r\n",", используемого для маршалинга данных.":"用于编组数据。\r\n"," 주소입니다. ":" 地址。\r\n","Инициализирует новый экземпляр класса SafeArrayTypeMismatchException значениями по умолчанию.":"使用默认值初始化 SafeArrayTypeMismatchException 类的新实例。\r\n","Die Variable ist ein Feld oder ein Member des Typs.Sie ist bei einem festen Offset innerhalb jeder Instanz des Typs vorhanden.":"变量是字段或type.It 存在于类型的每个实例内的固定偏移处。\r\n","IPersist의 기능이 있는 IPersistFile 인터페이스의 관리되는 정의를 제공합니다.":"提供具有 IPersist 功能的 IPersistFile 接口的托管定义。\r\n","Stellt Methoden für das Codieren und Decodieren von URLs beim Verarbeiten von Webanforderungen bereit. ":"提供在处理 Web 请求时对 URL 进行编码和解码的方法。\r\n","요청된 인터페이스의 형식입니다.":"请求的接口类型。\r\n","지정된 경로 문자열에서 확장명을 반환합니다.":"从指定的路径字符串返回扩展名。\r\n","응용 프로그램 디렉터리인 %WinDir%\\System32 디렉터리를 포함하고 DLL 검색 경로에 사용자 디렉터리를 포함합니다. ":"在DLL搜索路径中包括应用程序目录、%WinDir%\\System32目录和用户目录。 \r\n","Der Winkel, der der Arkustangens von ":"的反正切所对的角\r\n","Комплексное число для сравнения.":"要比较的复数。\r\n","특성 사용 클래스에 대한 COM 이벤트 소스로 노출되는 인터페이스 목록을 식별합니다.":"标识作为属性使用类的COM事件源公开的接口列表。\r\n","마샬러가 VT_UNKNOWN으로 마샬링할 개체를 래핑합니다.":"将要由封送拆收器封送的对象包装为 VT_UNKNOWN。\r\n","Diese Ausnahme wird ausgelöst, wenn eine Methode in dem ":"当一个方法在\r\n"," 메서드를 사용하여 할당된 핸들을 가능한 빨리 해제하십시오.":" 使用方法尽快释放分配的句柄。\r\n","Die Zeichenfolgendarstellung einer Zahl.Die Zeichenfolge wird unter Verwendung des durch ":"数字的字符串表示。字符串使用 by 表示\r\n",".URL-кодируемая строка.":".URL 编码的字符串。\r\n","데이터가 복사될 대상 개체입니다.이 개체는 형식이 지정된 클래스의 인스턴스여야 합니다.":"数据将被复制到的对象。该对象必须是类型化类的实例。\r\n","-Wert, der die Quelle oder das Ziel der Serialisierung für diesen ":"-表示此序列化源或目标的值\r\n","Es sind keine ACE-Flags festgelegt.":"没有设置 ACE 标志。\r\n",", преобразуя при этом указанное значение к указанному типу. В качестве контекста перевода используется нейтральные настройки языка и региональных параметров.":"，同时将指定值转换为指定类型。中性语言和文化设置用作翻译上下文。\r\n","에 가장 가까운 수입니다. ":"是最接近 的数字。\r\n","Определяет метод, реализуемый типом для сравнения двух объектов.":"定义一个类型实现的方法来比较两个对象。\r\n","특정 개체가 변경된 시간을 기록하여 IMoniker::GetTimeOfLastChange가 해당 변경 시간을 보고할 수 있도록 합니다.":"记录特定对象何时更改，以便 IMoniker::GetTimeOfLastChange 可以报告该更改的时间。\r\n","의 내용을 관리되지 않는 메모리로 복사합니다.":"将 的内容复制到非托管内存。\r\n","Преобразует заданное строковое представление числа в эквивалентное 32-битовое целое число со знаком, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"在给定指定的区域性特定格式设置信息的情况下，将数字的指定字符串表示形式转换为其等效的 32 位带符号整数。\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.":"将指定的 16 位无符号整数的值转换为等效的双精度浮点数。\r\n","지정된 8비트 부호 있는 정수의 값을 해당하는 부울 값으로 변환합니다.":"将指定的 8 位带符号整数的值转换为等效的布尔值。\r\n"," не имеет значение null, процесс назначения должен использовать IStorage::Release для освобождения компонента хранения.":" 不为空，目标进程必须使用 IStorage::Release 来释放存储组件。\r\n","지정된 개체의 값을 32비트 부호 없는 정수로 변환합니다.":"将指定对象的值转换为 32 位无符号整数。\r\n","Bei Festlegung hat jeder Aufruf einer Methode, die die Eigenschaft festlegt, zunächst einen Aufruf von IPropertyNotifySink::OnRequestEdit zur Folge.Die Implementierung von OnRequestEdit bestimmt, ob der Aufruf zum Festlegen der Eigenschaft zulässig ist.":"设置后，对设置属性的方法的任何调用都会首先调用 IPropertyNotifySink::OnRequestEdit。OnRequestEdit 的实现决定是否允许调用设置属性。\r\n"," eine Monikerklasse darstellt, mit der der aktuelle Moniker kombiniert werden kann, ohne dabei einen generisch zusammengesetzten Moniker zu bilden.false, wenn mithilfe der Methode bei Bedarf ein generisch zusammengesetzter Moniker erstellt werden kann.":" 表示一个名字对象类，当前名字对象可以与其组合而不形成通用复合名字对象。如果该方法可用于按需创建通用复合名字对象，则为 false。\r\n"," weist kein geeignetes Format auf. ":" 没有合适的格式。\r\n","Исходный класс ":"源类\r\n","사용자가 현재 모니커를 읽을 수 있도록 표현하는 표시 이름을 가져옵니다.":"获取以用户可读的方式表示当前名字对象的显示名称。\r\n","Die Größe des angegebenen Objekts in nicht verwaltetem Code.":"非托管代码中指定对象的大小。\r\n","Указывает целевую платформу операционной системы.":"指定目标操作系统平台。\r\n","지정된 개체의 ":"指定对象的\r\n","Ruft die ursprüngliche Quellschnittstelle aus der Typbibliothek ab.":"从类型库中获取原始源接口。\r\n","와 같으면, 해당 값이 반환됩니다.":"，然后返回该值。\r\n","Gibt das HRESULT für den letzten Fehler zurück, der durch einen mit ":"返回由 with 引发的最近错误的 HRESULT\r\n",". Отрицательное число ":".负数\r\n","Die Zugriffsmaske wird an untergeordnete Endobjekte weitergegeben.":"访问掩码传播到子端对象。\r\n","Показывает SCODE.":"显示 SCODE。\r\n","클래스에 대해 생성되는 클래스 인터페이스의 형식을 식별합니다.":"클래스에 대해 생성되는 클래스 인터페이스의 형식을 식별합니다.\r\n"," ist, wird dieser Wert zurückgegeben.Beachten Sie, dass diese Methode einen ":" 被返回，那个值。注意这个方法需要一个\r\n","사용자 지정 데이터를 가져올 함수의 인덱스입니다. ":"从中获取自定义数据的函数的索引。\r\n","0.0보다 크거나 같고 1.0보다 작은 부동 소수점 난수입니다.":"大于或等于 0.0 且小于 1.0 的随机浮点数。\r\n"," festlegt, gibt diese Methode nicht die tatsächliche Anzahl von geschriebenen Bytes zurück.":" , 此方法不返回实际写入的字节数。\r\n","Объект, который должен быть добавлен в конец ":"要添加到最后的对象\r\n","Desplazamiento en bytes del elemento que se va a pasar a través de una invocación de plataforma. ":"通过平台调用传递的元素的字节偏移量。 \r\n",", созданные другими потоками, удаляются.Если метод инициализации создает исключение в одном из потоков, это исключение передается за пределы свойства ":"由其他线程创建的将被处理掉。如果初始化方法在其中一个线程中抛出异常，则该异常会从属性中传递出去\r\n"," содержит имя файла с недействительным изображением или пустую ссылку, если для этого экземпляра имя файла не было передано в конструктор.":" 包含带有无效图像的文件名，或者如果没有将文件名传递给此实例的构造函数，则包含空引用。\r\n","에 볼륨 식별자(예: \"c:\\\")의 일부가 아닌 콜론(\":\")이 포함된 경우 ":"包含不属于卷标识符的冒号（“:”）（例如“c:\\”）\r\n","Возвращает идентификатор класса CLSID для объекта.":"返回对象的 CLSID。\r\n","Q) равно нулю, возвращается значение +0 при положительном ":"Q) 为零，如果为正则返回 +0\r\n","Ermöglicht Integratoren, bestimmten von ihnen erstellen Ausnahmen numerische Fehlercodes zuzuordnen.":"允许集成商将数字错误代码与他们创建的特定异常相关联。\r\n"," 값과 부호 있는 64비트 정수가 다른지를 나타내는 값을 반환합니다.":" 返回一个值，该值指示值和带符号的 64 位整数是否不同。\r\n","가 0 미만인 경우또는 ":"小于 0；或\r\n","지정된 서식을 사용하여 현재 ":"当前使用指定格式\r\n","Преобразует значение заданного объекта в число с плавающей запятой двойной точности.":"将指定对象的值转换为双精度浮点数。\r\n","Представляет строго типизированную, доступную только для чтения коллекцию элементов.":"表示元素的强类型只读集合。\r\n","-Parameter ist größer als die Länge von ":"-参数大于的长度\r\n","Einer der Enumerationswerte, der angibt, ob eine benutzerdefinierte Implementierung von IUnknown::QueryInterface verwendet wurde.":"枚举值之一，指示是否使用了 IUnknown::QueryInterface 的自定义实现。\r\n","데이터 멤버 이름을 가져오거나 설정합니다. ":"获取或设置数据成员名称。\r\n"," равен текущему объекту ":" 等于当前对象\r\n","Gibt den Winkel zurück, der der Arkussinus der angegebenen komplexen Zahl ist.":"返回作为指定复数的反正弦的角度。\r\n","Stellt die verwaltete Definition der IConnectionPointContainer-Schnittstelle bereit.":"提供 IConnectionPointContainer 接口的托管定义。\r\n","Gibt den natürlichen Logarithmus (zur Basis e) der angegebenen Zahl zurück.":"返回指定数字的自然对数（以 e 为底）。\r\n","Обратная величина значения ":"互惠价值\r\n",", используя указанное число с плавающей запятой с обычной точностью.":"，使用具有正常精度的指定浮点数。\r\n","Lässt die spät gebundene Registrierung eines Ereignishandlers zu.":"允许事件处理程序的后期绑定注册。\r\n"," 개체를 부호 없는 32비트 정수 값으로 변환하는 명시적 변환을 정의합니다.":" 定义显式转换以将对象转换为无符号 32 位整数值。\r\n",", определяющих режим отладки для JIT-компилятора.":"，它定义了 JIT 编译器的调试模式。\r\n","지정된 16비트 부호 있는 정수의 값을 해당하는 8비트 부호 없는 정수로 변환합니다.":"将指定的 16 位有符号整数的值转换为等效的 8 位无符号整数。\r\n","8-разрядное знаковое целое число, которое эквивалентно значению ":"等于值的 8 位有符号整数\r\n","Die Anzahl der aus dem Quellstream zu kopierenden Bytes. ":"要从源流中复制的字节数。\r\n"," = plus unendlichNaN":" =加上无穷大NaN\r\n","-Objekts (in Bytes) ab.Diese Länge muss verwendet werden, bevor die Zugriffssteuerungsliste (ACL) mithilfe der ":"对象（以字节为单位）。此长度必须在访问控制列表 (ACL) 使用之前使用\r\n","-Objekt zurück, das aus einem Handle für ein verwaltetes Objekt erstellt wurde.":"从托管对象句柄创建的对象。\r\n","에 대한 이후 호출에서 이 ROT 항목을 식별하는 데 사용할 수 있는 값입니다.":"可用于在后续调用中标识此 ROT 条目的值。\r\n","Die Zeichen nach dem letzten Verzeichniszeichen in ":"中最后一个目录字符之后的字符\r\n","-Objekts enthalten gültige Werte.":"-对象包含有效值。\r\n","Возвращает сведения о товарном знаке.":"返回有关商标的信息。\r\n",", возвращается это значение.Если значение параметра ":", 返回这个值。如果参数的值\r\n","도 설정되어야 합니다.":"也必须设置。\r\n","Diese Methode gibt den Schnittstellenzeiger des Enumerators zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回枚举器的接口指针。此参数未初始化传递。\r\n","Возвращает наименьшее из двух значений ":"返回两个值中的最小值\r\n"," als Base-64.":" 作为 base-64。\r\n","Die zurückzugebende 32-Bit-Ganzzahl mit Vorzeichen. ":"要返回的 32 位有符号整数。\r\n","Eine Meldung, die erklärt, warum der Prozess beendet wurde, oder null, wenn keine Erklärung gegeben wird.":"解释进程终止原因的消息，如果没有给出解释则为 null。\r\n","지정한 개체의 해시 코드입니다. ":"指定对象的哈希码。\r\n","Die Methode gibt die Zeichenfolge des Anzeigenamens zurück.Dieser Parameter wird nicht initialisiert übergeben.":"该方法返回显示名称字符串。此参数未初始化传递。\r\n","이 TYPEDESC가 설명한 항목에 대한 변형 형식을 나타냅니다.":"指示此 TYPEDESC 描述的项目的变体类型。\r\n","Вызывает метод или обращается к свойству объекта, реализующему интерфейс, описанный в описании типа.":"调用方法或访问实现类型声明中描述的接口的对象的属性。\r\n","Erstellt eine neue Instanz eines Typs, der eine Komponentenklasse (Co-Klasse) beschreibt.":"创建描述组件类 (coclass) 的类型的新实例。\r\n","Die komplexe Zahl, durch die dividiert wird.":"要除以的复数。\r\n","Erstellt ein Enumerationsobjekt zum Durchlaufen der bis zu diesem Verbindungspunkt vorhandenen Verbindungen.":"创建一个枚举对象以循环访问直到此连接点的连接。\r\n","보다 큰 숫자를 나타내는 경우 ":"如果它代表一个大于\r\n","형식 설명의 구현된 인터페이스나 기본 인터페이스에 대한 ":"对于类型描述中的已实现接口或基本接口。\r\n","-Methode vor dem Marshallen der ACL in ein binäres Array.":"在将 ACL 编组为二进制数组之前的方法。\r\n"," на другое указанное значение ":" 到另一个指定值\r\n","Строка, возвращенная методом ":"方法返回的字符串\r\n","Der Name des sicherungsfähigen Objekts, dem das ObjectSecurity`1-Objekt zugeordnet wird.":"与 ObjectSecurity`1 对象关联的安全对象的名称。\r\n"," 매개 변수의 값을 실수 부분으로 포함하고 0을 허수 부분으로 포함하는 개체입니다.":" 包含参数值作为实部和零作为虚部的对象。\r\n"," позволяет включить в разбираемую строку экспоненту, начинающуюся с символа E или e, за которым следует необязательный положительный или отрицательный знак и целое число.Другими словами, он успешно выполняет разбор строки в форме nnnexx, nnnE +xx, и nnnE -xx.Он не допускает наличия десятичного разделителя или знака в значащей части числа, или мантиссе; чтобы разрешить эти элементы в анализируемой строке, используйте флаги ":" 允许解析的字符串包含一个以字符 E 或 e 开头的指数，后跟一个可选的正号或负号和一个整数。换句话说，它成功地解析了 nnnexx、nnnE +xx 和 nnnE -xx 形式的字符串。数字的重要部分或尾数中存在小数点分隔符或符号；要在解析的字符串中允许这些元素，请使用标志\r\n","Gibt eine VARDESC-Struktur frei, die zuvor von der ":"释放先前被占用的 VARDESC 结构\r\n","Получает исключение, представляемое текущим экземпляром. ":"获取当前实例表示的异常。\r\n"," не равна положению в ":" 不等于位置\r\n","Führt mithilfe des angegebenen Namens eine dauerhafte Speicherung der Sicherheitsbeschreibung aus, die diesem ObjectSecurity`1-Objekt zugeordnet sind.":"使用指定的名称保留与此 ObjectSecurity`1 对象关联的安全描述符。\r\n","Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 64-битовое целое число со знаком.":"将指定的单精度浮点数的值转换为等效的 64 位带符号整数。\r\n",".-или-Соглашение ":".-或-公约\r\n","이벤트 처리기의 런타임 바인딩 등록을 허용합니다.":"允许为事件处理程序注册运行时绑定。\r\n","와 같으면 이 메서드는 -1을 반환하고값이 ":"，则此方法返回 -1，值为\r\n","지정된 문자열에 있는 각 환경 변수 이름을 해당 변수의 값에 해당하는 문자열로 바꾼 다음 결과 문자열을 반환합니다.":"将指定字符串中的每个环境变量名称替换为对应于该变量值的字符串并返回结果字符串。\r\n","핸들이 할당되는지를 나타내는 값을 가져옵니다.":"获取一个值，该值指示是否分配了句柄。\r\n","Eine Zahl, deren Logarithmus gesucht wird.":"求其对数的数字。\r\n","-Objekt zugeordnet ist, ist ein Verzeichnis oder eine Datei und konnte nicht gefunden werden.":"- 对象是目录或文件，无法找到。\r\n","Задает младшие 32 бита структуры FILETIME.":"指定 FILETIME 结构的低 32 位。\r\n"," меньше нуля.-или- При увеличении значения данного экземпляра будет превышено значение ":" 小于零。- 或 - 增加此实例的值将超过该值\r\n","[i].Не может иметь значение null.":"[i].不能为空。\r\n","이 개체는 반환될 때 개체가 마지막으로 변경된 시간을 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此对象返回时，它包含对象最后一次更改的时间。此参数未初始化传递。\r\n","지정된 각도의 하이퍼볼릭 사인을 반환합니다.":"返回指定角度的双曲正弦值。\r\n","Возвращаемое значение":"返回值\r\n"," am nächsten liegt und deren Anzahl von Nachkommastellen gleich ":" 最接近且小数位数相同\r\n","Возвращает идентификатор исходного совместного класса.":"返回原始共享类的 ID。\r\n","-Objekt, für das eine Überprüfung erfolgen soll.":"-要检查的对象。\r\n","지정된 변수를 설명하는 VARDESC 구조를 검색합니다.":"检索描述指定变量的 VARDESC 结构。\r\n"," задан абсолютный путь, этот метод возвращает ":" 给定绝对路径，此方法返回\r\n"," равен длине ":" 等于长度\r\n"," 필드에 사용된 상수입니다.":" 用于字段的常量。\r\n","Gibt an, dass die attributierte Methode durch eine nicht verwaltete DLL (Dynamic Link Library) als statischer Einstiegspunkt verfügbar gemacht wird.":"指示属性方法通过非托管动态链接库 (DLL) 公开为静态入口点。\r\n","Marshallt den Inhalt des ":"编组的内容\r\n","Das Objekt, das das Decimal enthält, das umfasst und als VT_CY gemarshallt werden soll. ":"包含 Decimal 的对象以跨度和编组为 VT_CY。\r\n","해시 테이블의 크기를 효율적으로 조정하는 데 필요한 형식 라이브러리에 대한 통계를 반환합니다.":"返回有关有效调整哈希表大小所需的类型库的统计信息。\r\n","Возвращает заданное 16-битовое целое число со знаком; фактическое преобразование не производится.":"返回指定的 16 位有符号整数；没有执行实际的转换。\r\n","Referencia a la secuencia de destino. ":"参照靶序列。 \r\n"," не является интерфейсом.-или- Тип недоступен для COM.-или-Параметр ":" 不是接口。- 或 - 类型不适用于 COM。- 或 - 参数\r\n","현재 프로세스에 저장되어 있는 환경 변수를 생성, 수정 또는 삭제합니다.":"创建、修改或删除存储在当前进程中的环境变量。\r\n","Gibt die nicht verwaltete Größe eines Objekts in Bytes zurück.":"返回对象的非托管大小（以字节为单位）。\r\n","Имя, используемое для регистрации ":"注册时使用的名称\r\n","Объект, длина ":"物体，长度\r\n"," = NaN(모든 값)NaN(모든 값)":" = NaN（所有值）NaN（所有值）\r\n","Имя динамической библиотеки (DLL), содержащей неуправляемый метод.Если DLL включена в сборку, это имя может включать отображаемое имя сборки.":"包含非托管方法的动态库 (DLL) 的名称。如果 DLL 包含在程序集中，则此名称可以包括程序集的显示名称。\r\n","Преобразует значение заданного знака Юникода в эквивалентное строковое представление.":"将指定 Unicode 字符的值转换为其等效的字符串表示形式。\r\n","지정된 기수로 나타낸 숫자에 대한 문자열 표현을 16비트 부호 있는 정수로 변환합니다.":"将指定基数中数字的字符串表示形式转换为 16 位有符号整数。\r\n","Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.":"将指定基数中数字的字符串表示形式转换为等效的 8 位无符号整数。\r\n",", содержащий и ключ, и значение текущего элемента словаря.":"包含字典当前元素的键和值的 。\r\n","Der zweite zu kombinierende Pfad. ":"第二条路要结合。\r\n"," auf ein BSTR fest, das den Namen der DLL enthält. ":" 到包含 DLL 名称的 BSTR。\r\n","Ruft die DACL für dieses ":"为此获取 DACL\r\n","Gibt den absoluten Pfad für die angegebene Pfadzeichenfolge zurück.":"返回给定路径字符串的绝对路径。\r\n","Имя пользователя, получающего доступ к URI.":"访问 URI 的用户的名称。\r\n","Маршалирует строки в виде 2-байтных символов Юникода.":"将字符串封送为 2 字节 Unicode 字符。\r\n","Der zu schreibende Werttyp.":"要写入的值类型。\r\n","Преобразует значение заданного десятичного числа в эквивалентное 32-битовое целое число без знака.":"将指定的十进制数的值转换为其等效的 32 位无符号整数。\r\n",") 사분면 4,-π/2 < θ < 0입니다.점이 사분면의 경계에 있는 경우 반환 값은 다음과 같습니다.y가 0이고 x가 음수가 아니면 θ = 0입니다.y가 0이고 x가 음수이면 θ = π입니다.y가 양수이고 x가 0이면 θ = π/2입니다.y가 음수이고 x가 0이면 θ = -π/2입니다.y가 0이고 x가 0이면 θ = 0입니다. ":") 象限 4, -π/2 < θ < 0。如果点位于象限的边界上，则返回值为： θ = 0 if y is 0 and x is negative. θ = π. If y is positive and x 为 0，则 θ = π/2。如果 y 为负且 x 为 0，则 θ = -π/2。如果 y 为 0 且 x 为 0，则 θ = 0。\r\n","관리되는 ":"管理\r\n","지정된 16비트 부호 없는 정수의 값을 해당하는 64비트 부호 있는 정수로 변환합니다.":"将指定的 16 位无符号整数的值转换为等效的 64 位有符号整数。\r\n","< 1) -или-(":"< 1) - 或 - (\r\n","Ein S_OKHRESULT-Wert, wenn der Moniker ein Systemmoniker ist; andernfalls ein S_FALSEHRESULT-Wert.":"如果名字对象是系统名字对象，则为 S_OKHRESULT 值；否则，一个 S_FALSEHRESULT 值。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.":"将指定的 32 位带符号整数的值转换为等效的 64 位带符号整数。\r\n","공백 문자를 제외한 ":"排除空格字符\r\n","-Objekt enthaltenen Informationen darstellt.":"- 对象表示包含的信息。\r\n","Gibt die Aktionen an, die für sicherungsfähige Objekte zulässig sind.":"Gibt die Aktionen an, die für sicherungsfähige Objekte zulässig sind。\r\n","Управляет поведением при маршалинге сигнатуры делегата, передаваемой как неуправляемый указатель на функцию в неуправляемый код или из него.Этот класс не наследуется.":"控制作为非托管函数指针传递给非托管代码或从非托管代码传递的委托签名的封送处理行为。此类不是继承的。\r\n","Число, в байтах, для декодирования из массива ":"要从数组中解码的数字（以字节为单位）\r\n","Die Zahl, deren ":"其数\r\n","Gibt den Dateinamen der angegebenen Pfadzeichenfolge ohne Erweiterung zurück.":"返回不带扩展名的指定路径字符串的文件名。\r\n","Der Name, unter dem ":"名称下\r\n","현재 모니커가 구성 모니커의 일부인 경우 현재 모니커의 왼쪽에 있는 모니커에 대한 참조입니다. ":"如果当前名字对象是组合名字对象的一部分，则对当前名字对象左侧的名字对象的引用。\r\n","Переменная сопоставляется так же, как собственные связываемые свойства.":"该变量的映射方式与本机可绑定属性的映射方式相同。\r\n","Stellt Konstanten und statische Methoden für trigonometrische, logarithmische und andere gebräuchliche mathematische Funktionen bereit.Um den .NET Framework-Quellcode für diesen Typ zu durchsuchen, finden Sie unter der Reference Source.":"为三角函数、对数函数和其他常用数学函数提供常量和静态方法。要浏览此类的 .NET Framework 源代码，请参阅参考源。\r\n","Помечает поле как изменчивое.Этот класс не наследуется.":"标记一个字段为可变的。这个类不是继承的。\r\n","Der Parameter übergibt Informationen vom Aufrufer zum Aufgerufenen.":"参数将信息从调用者传递给被调用者。\r\n","Идентификатор диспетчеризации метода исходного интерфейса.":"源接口方法的调度 ID。\r\n","Ein verwalteter Zeiger auf eine IUnknown-Schnittstelle.":"指向 IUnknown 接口的托管指针。\r\n","64-разрядное целое число без знака для сравнения.":"要比较的 64 位无符号整数。\r\n",".Wenn das letzte Zeichen von ":".如果最后一个字符\r\n","Der beim Auslösen des COM-Ereignisses aufzurufende Delegat.":"引发 COM 事件时要调用的委托。\r\n","Файл cookie соединения, возвращенный ранее из метода ":"先前从该方法返回的连接 cookie\r\n","Die zweite zu addierende komplexe Zahl.":"要添加的第二个复数。\r\n","관리되지 않는 메모리에서 32비트 부호 있는 정수를 읽습니다.":"从非托管内存中读取 32 位有符号整数。\r\n","Имя дружественной сборки.":"朋友集会的名字。\r\n","Добавляет к данному экземпляру строку, возвращаемую в результате обработки строки составного формата, содержащей ноль или более элементов формата.Каждый элемент формата заменяется строковым представлением любого из трех аргументов с помощью указанного поставщика формата.":"将处理包含零个或多个格式元素的复合格式字符串返回的字符串附加到此实例。使用指定的格式提供程序，每个格式元素都被三个参数中的任何一个的字符串表示形式替换。\r\n","Преобразует значение заданного объекта в 8-разрядное целое число без знака.":"将指定对象的值转换为 8 位无符号整数。\r\n","오류를 식별하는 오류 코드를 나타냅니다.":"指示标识错误的错误代码。\r\n","Representa una clase contenedora para un identificador de espera. ":"Representa una class contenedora para un identificador de espera.\r\n","При применении к методу указывает, что метод вызывается во время сериализации объекта в графе объекта.Порядок сериализации относительно других объектов на диаграмме является недетерминированным.":"当应用于方法时，指定在对象图中对象的序列化期间调用该方法。相对于图中其他对象的序列化顺序是不确定的。\r\n","Наименьшее целое число, которое больше или равно ":"大于或等于的最小整数\r\n","-Parameter verglichen werden soll. ":"- 参数 verglichen werden soll。\r\n","Обнаруживает экземпляры описания типа в библиотеке типов.":"在类型库中定位类型声明的实例。\r\n","Делегат события.":"事件委托。\r\n"," Array.":" 大批。\r\n"," gleich null ist, gibt die Methode null zurück.":" 为 null，则该方法返回 null。\r\n","에 지정할 수 있는 형식에 대한 열거자를 제공하도록 요청합니다.":"要求您为可以在 中指定的类型提供一个枚举器。\r\n","Eine komplexe Zahl mit einer reellen Komponente gleich ":"实数分量等于它的复数\r\n","Преобразует значение заданного объекта ":"转换给定对象的值\r\n","Идентификатор элемента интерфейса. ":"界面元素标识符。\r\n","Ссылка на интерфейс IBindCtx контекста привязки, используемый в данной операции привязки. ":"对要在此绑定操作中使用的绑定上下文的 IBindCtx 接口的引用。\r\n"," utilizando el tipo especificado y un nombre del evento en el tipo.":" 使用指定的类型和类型中的事件名称。\r\n","Записывает однобайтовое значение в неуправляемую память.":"将单个字节值写入非托管内存。\r\n","Изменяет текущий набор, содержащий все элементы, присутствующие в текущем наборе, в указанной коллекции или в обоих.":"修改当前集合，其中包含当前集合、指定集合或两者中存在的所有元素。\r\n","파생 클래스에서 재정의된 경우 두 문자열을 비교하고 상대적 정렬 순서를 나타내는 값을 반환합니다.":"在派生类中重写时，比较两个字符串并返回一个值，指示它们的相对排序顺序。\r\n","보다 작은 부호 있는 32비트 정수이므로 반환 값의 범위에는 ":"因为这是一个带符号的 32 位整数，小于\r\n"," des Besitzers durch einen Standardmechnismus abgerufen wurde.Wird nur von Ressourcen-Manager festgelegt und darf nicht durch Aufrufer festgelegt werden.":" owner 是通过标准机制获得的。只能由资源管理器设置，不能由调用者设置。\r\n","두 개의 16비트 부호 있는 정수 중 더 큰 숫자를 반환합니다.":"返回两个 16 位有符号整数中较大的一个。\r\n"," не возвращает управление.":" 不返回控制权。\r\n","의 내용을 관리되지 않는 COM 작업 할당자에서 할당된 메모리 블록으로 복사합니다.":"将非托管 COM 任务分配器的内容复制到一块已分配的内存中。\r\n"," равны или если параметры ":" 相等或如果参数\r\n","Содержит константы, определяющие бесконечные интервалы времени ожидания.Этот класс не наследуется.":"包含定义无限超时间隔的常量。此类不被继承。\r\n"," 멤버가 null이면 대상 프로세스에서 OpenFile을 사용하여 파일을 삭제해야 합니다.":" 如果该成员为空，则目标进程应使用 OpenFile 删除文件。\r\n","Die zu entfernende Regel.":"要删除的规则。\r\n","При возвращении данного метода содержит строку, представляющую полное имя файла справки.Этот параметр передается без инициализации.":"当此方法返回时，包含一个表示帮助文件全名的字符串。此参数无需初始化即可传递。\r\n","Liest eine 16-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset aus dem nicht verwalteten Arbeitsspeicher.":"从非托管内存的指定偏移量处读取一个 16 位有符号整数。\r\n","Возвращает строку документации, полное имя файла справки и путь к нему, используемый контекст локализации, а также идентификатор контекста для раздела справки библиотеки в файле справки.":"返回文档字符串、完全限定的帮助文件名和路径、要使用的本地化上下文以及帮助文件中库帮助主题的上下文标识符。\r\n","Индекс необходимого элемента в массиве ":"数组中所需元素的索引\r\n","memid로 식별되는 멤버 종류를 지정하는 ":"指定由 memid 标识的成员类型。\r\n","Блокировки позволяют потокобезопасным образом ограничить инициализацию экземпляра ":"锁允许您以线程安全的方式限制实例初始化\r\n","Доступ к функции может быть получен только при помощи IDispatch.":"只能使用 IDispatch 访问该函数。\r\n","이 메서드는 반환될 때 IMPLTYPEFLAGS 열거형에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含对 IMPLTYPEFLAGS 枚举的引用。此参数未初始化传递。\r\n","의 숫자에 해당하는 단정밀도 부동 소수점 숫자이거나, ":"是一个单精度浮点数，等于中的数\r\n","Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное 16-битовое целое число без знака.":"将指定的 64 位带符号整数的值转换为其等效的 16 位无符号整数。\r\n","Der Name des sicherungsfähigen Objekts, dem das neue ":"新的安全对象的名称\r\n","Konvertiert den Wert der angegebenen Dezimalzahl in die entsprechende Zeichenfolgendarstellung.":"将指定的十进制数的值转换为其等效的字符串表示形式。\r\n","Die Methode gibt das neue Streamobjekt zurück.Dieser Parameter wird nicht initialisiert übergeben.":"该方法返回新的流对象。此参数未初始化传递。\r\n","Das Objekt, das das HRESULT des Fehlers enthält. ":"包含错误的 HRESULT 的对象。\r\n","Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное 16-битовое целое число без знака.":"将指定的 16 位有符号整数的值转换为其等效的 16 位无符号整数。\r\n","기호화된 상수를 설명합니다.":"描述符号常量。\r\n","-Konstruktor angegebenen Aufrufkonvention.":"构造函数指定调用约定。\r\n","의사(pseudo) 난수 시퀀스의 시작 값을 계산하는 데 사용되는 숫자입니다.음수를 지정하면 이 숫자의 절대 값이 사용됩니다.":"用于计算伪随机序列起始值的数字。如果指定负数，则使用该数字的绝对值。\r\n","Определяет имя файла, содержащего пару ключей, используемую для создания строгого имени.":"指定包含用于生成强名称的密钥对的文件的名称。\r\n"," 속성을 사용하면 핸들 형식을 개별적으로 추적하는 수집기의 이름을 지정할 수 있습니다.":" 属性允许您指定单独跟踪句柄类型的收集器的名称。\r\n"," der Schnittstelle wird aus den Metadaten der Klasse ermittelt.Mit diesem Member geben Sie den genauen Schnittstellentyp oder den Standardschnittstellentyp an, wenn Sie ihn auf eine Klasse anwenden.Dieser Member bewirkt das gleiche Verhalten wie ":" 接口是从类的元数据中获取的。使用此成员指定确切的接口类型或将其应用于类时的默认接口类型。此成员具有与相同的行为\r\n","Der Index der Funktion, für die die benutzerdefinierten Daten abgerufen werden. ":"为其检索自定义数据的函数的索引。\r\n","Длина значения параметра ":"参数值长度\r\n","Объединенные пути.Если один из указанных путей является строкой нулевой длины, этот метод возвращает другой путь.Если в качестве значения параметра ":"组合路径，如果其中一个指定的路径是零长度字符串，则该方法返回另一个路径，如果参数的值为\r\n","Die Rechte der Zugriffsregel.":"访问规则的权限。\r\n","Имя контейнера, содержащего пару ключей. ":"包含密钥对的容器的名称。\r\n"," 값을 나타냅니다.":" 代表一个值。\r\n",", представляющий время ожидания в миллисекундах, или период ":"一个代表超时时间的毫秒数，或者一个周期\r\n","8-разрядное знаковое целое число, эквивалентное значению ":"相当于 value 的 8 位有符号整数\r\n"," utilizando un valor de punto flotante de precisión doble.":" 使用 valor de punto flotante de precisión doble。\r\n","Matriz administrada. ":"管理矩阵。 \r\n","Подпись другой стороны для этого ключа подписи.":"另一方对此签名密钥的签名。\r\n"," и 64-разрядное целое число без знака не равны.":" 和 64 位无符号整数不相等。\r\n"," и меньшее, чем ":" 并且小于\r\n","Ein zu decodierende URL-codiertes ":"一个 URL 编码解码\r\n","시스템의 기본 문자 크기를 나타냅니다. 유니코드 시스템의 경우 기본값이 2이고, ANSI 시스템의 경우 1입니다.이 필드는 읽기 전용입니다.":"指示系统的默认文本大小。 Unicode 系统默认为 2，ANSI 系统默认为 1。该字段是只读的。\r\n","Преобразует значение заданного десятичного числа в эквивалентное 8-битовое целое число без знака.":"将指定的十进制数的值转换为其等效的 8 位无符号整数。\r\n","Recupera las direcciones de variables o funciones estáticas, como las que se definen en un archivo DLL.":"检索静态变量或函数的地址，例如在DLL文件中定义的变量或函数。\r\n","-Arrays ist größer als der Wert des ":"-Arrays 的值大于\r\n","Schreibt die angegebene Anzahl von Werttypen an eine Speicheradresse, indem beginnend an der angegebenen Position im Eingabearray Bytes gelesen werden.":"将指定数量的值类型写入内存地址，从输入数组中的指定位置开始读取字节。\r\n",", следует создавать оболочку в виде объекта ":", 应该包装成一个对象\r\n","부울 값을 나타냅니다.":"表示一个布尔值。\r\n","Число с плавающей запятой одиночной точности, которое эквивалентно значению ":"与value等价的单精度浮点数\r\n","Делит одно указанное комплексное число на другое.":"将一个指定的复数除以另一个。\r\n","Целое число, считанное из неуправляемой памяти.На 32-разрядных компьютерах возвращается 32-битное целое число, а на 64-разрядных компьютерах — 64-битное.":"从非托管内存读取的整数。在 32 位计算机上，返回 32 位整数；在 64 位计算机上，返回 64 位整数。\r\n","Diese Methode gibt den Verbindungspunkt zurück, der die ":"此方法返回连接点\r\n","사용자 정의 메서드가 포함된 첫 번째 VTBL 슬롯입니다.IUnknown을 기준으로 하는 인터페이스의 경우 첫 번째 슬롯은 3이고, IDispatch를 기준으로 하는 인터페이스의 경우 7입니다.":"包含用户自定义方法的第一个VTBL槽，第一个槽是3个基于IUnknown的接口，7个是基于IDispatch的接口。\r\n","Пространство имен контракта.":"Пространство имен контракта。\r\n","Matriz de bytes cuya longitud es 4.":"矩阵 de bytes cuya longitud es 4。\r\n","Ruft eine Auflistung der Überwachungsregeln ab, die der angegebenen Sicherheits-ID zugeordnet sind.":"获取与指定安全 ID 关联的审核规则的集合。\r\n","Число с плавающей запятой одиночной точности, эквивалентное числу ":"相当于number的单精度浮点数\r\n",", не был удален сборщиком мусора; в противном случае — ссылка на объект, на который ссылается текущий объект ":", 还没有被垃圾收集；否则，对当前对象引用的对象的引用\r\n","형식 라이브러리에 대한 대상 운영 체제는 32비트 Windows 시스템입니다.기본적으로 데이터 필드는 저절로 맞추어지는데 예를 들면 2바이트 정수는 짝수 바이트 경계로, 4바이트 정수는 네 단어 경계 등으로 맞추어집니다.":"类型库的目标操作系统是32位的Windows系统，默认情况下，数据字段是自对齐的，例如2字节整数对齐偶字节边界，4字节整数对齐四字节边界单词边界，等等。\r\n","Для параметра определено поведение по умолчанию.":"默认行为是为参数定义的。\r\n","일반화된 클립보드 형식을 나타냅니다. ":"表示通用剪贴板格式。\r\n","Определяет размер выделяемой области памяти (в байтах).Данный метод необходимо вызвать перед использованием экземпляра ":"指定分配内存区域的大小（以字节为单位），该方法必须在使用实例前调用\r\n","특정 형식 라이브러리를 식별하고 멤버 이름에 대한 지역화 지원을 제공합니다.":"标识特定类型库并为成员名称提供本地化支持。\r\n","; 즉, ln ":";也就是说，ln\r\n","Der Wert der von ":"的价值\r\n","이 메서드는 반환될 때 지정한 함수를 설명하는 FUNCDESC 구조체에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含对描述指定函数的 FUNCDESC 结构的引用。此参数未初始化传递。\r\n","Ссылка на запрашиваемый интерфейс (когда данный метод возвращает значение).":"对请求接口的引用（当给定方法返回值时）。\r\n"," es menor que cero o mayor que la longitud de ":" es menor que cero o mayor que la longitud de\r\n","Строка пути, из которой нужно получить расширение. ":"从中获取扩展名的路径字符串。\r\n","비교할 두 개의 16비트 부호 없는 정수 중 두 번째 숫자입니다. ":"要比较的两个 16 位无符号整数中的第二个。\r\n"," 개체의 프로필 이름을 가져옵니다.":" 获取对象的配置文件名称。\r\n","Индекс функции, для которой нужно получить пользовательские данные. ":"要为其获取用户数据的函数的索引。\r\n"," 열거형 값을 나타냅니다.":" 表示一个枚举值。\r\n","지정된 개체에 특정 형식의 핸들을 할당합니다.":"将特定类型的句柄分配给指定的对象。\r\n","Исключение, которое создается модулем упаковки и передачи, когда он встречает неподдерживаемый атрибут ":"box-and-pass 模块遇到不支持的属性时抛出的异常\r\n","을 반환하는 메서드의 이름입니다.":"返回 的方法的名称。\r\n","-Struktur unter Verwendung des Werts einer 64-Bit-Ganzzahl mit Vorzeichen.":"使用 64 位带符号整数值的结构。\r\n","; в противном случае — значение S_FALSE.":";否则，值为 S_FALSE。\r\n","Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.":"将指定 Unicode 字符的值转换为等效的 16 位带符号整数。\r\n",", представляющее остаток от деления.Этот параметр передается неинициализированным.":"表示除法余数的 A。此参数未初始化传递。\r\n","Представляет значения битовой маски, описывающие элемент структуры, параметр или возвращаемое значение.":"表示描述结构元素、参数或返回值的位掩码值。\r\n","Представляет обобщенный формат буфера обмена. ":"表示通用剪贴板格式。\r\n","Gibt die größere von zwei 8-Bit-Ganzzahlen ohne Vorzeichen zurück.":"返回两个 8 位无符号整数中较大的一个。\r\n","Fügt der Auflistung ein ":"添加到集合\r\n","Уведомляет все зарегистрированные приемники уведомлений, что объект был переименован.Этот метод вызывается сервером.":"通知所有已注册的通知接收者该对象已重命名。该方法由服务器调用。\r\n"," rappresentano diverse versioni di .NET Framework.":" 在 .NET Framework 中呈现不同的版本。\r\n","Eine Gleitkommazahl mit einfacher Genauigkeit, die ":"一个单精度浮点数\r\n"," bezeichnet. ":" 指定的。\r\n","Decimal, для которого требуется выполнить инкапсуляцию, а также маршалинг как типа VT_CY. ":"要封装并封送为 VT_CY 类型的 Decimal。\r\n","Возвращает из текущего процесса имена всех переменных среды и их значения.":"从当前进程返回所有环境变量的名称及其值。\r\n","-Methode zurückgegebene Verbindungscookie. ":"方法返回连接 cookie。\r\n",". Negativ ":".消极的\r\n","지정된 8비트 부호 없는 정수의 값을 해당하는 64비트 부호 있는 정수로 변환합니다.":"将指定的 8 位无符号整数的值转换为等效的 64 位有符号整数。\r\n","Число 100-наносекундных импульсов, представляющее дату и время создания данного экземпляра. ":"表示创建此实例的日期和时间的 100 纳秒脉冲数。\r\n","Отменяет регистрацию объекта, найденного в данный момент для заданного ключа во внутренней таблице контекстных параметров объекта, если такой ключ зарегистрирован.":"在对象的内部上下文参数表中注销当前为给定键找到的对象（如果已注册此类键）。\r\n","Преобразует заданный код ошибки HRESULT в соответствующий объект ":"将给定的 HRESULT 错误代码转换为相应的对象\r\n"," especificado coincide con la instancia actual; en caso contrario, es false.":" 指定匹配当前实例；否则为false。\r\n"," в качестве выполняемого файла; в противном случае — значение false. ":" 作为可执行文件；否则，假的。\r\n","is null.-или-Значение параметра ":"为空。-或-参数值\r\n","true, wenn die neue Sicherheitsbeschreibung einem Containerobjekt zugeordnet ist.":"如果新的安全描述符与容器对象相关联，则为真。\r\n","Beendet einen Prozess sofort, nachdem eine Meldung in das Windows-Anwendungsereignisprotokoll geschrieben wurde, und schließt dann die Meldung in Fehlerberichte an Microsoft ein.":"在将消息写入 Windows 应用程序事件日志后立即终止进程，然后将消息包含在向 Microsoft 的错误报告中。\r\n"," в значение 64-битового знакового целого числа.":" 为 64 位有符号整数值。\r\n","Führt die Ganzzahldivision von zwei ":"执行整数除以二\r\n","의 숫자에 해당하는 10진수이거나, ":"是一个十进制数，对应于\r\n","지정된 유니코드 문자의 값을 해당하는 16비트 부호 있는 정수로 변환합니다.":"将指定 Unicode 字符的值转换为等效的 16 位带符号整数。\r\n"," zum ersten Mal aufruft (bei Daten- oder Ansichts-Advise-Verbindungen) oder den Zwischenspeicher aktualisiert (bei Cachingverbindungen).":" 第一次调用（用于数据或查看建议连接）或刷新缓存（用于缓存连接）。\r\n","Das zu umschließende Objekt, das als VT_BSTR gemarshallt werden soll.":"Das zu umschließende Objekt, das als VT_BSTR gemarshallt werden soll.\r\n","-Instanz, legt die Eigenschaft der verstrichenen Zeit auf 0 (null) fest und beginnt mit dem Messen der verstrichenen Zeit.":"例如，将经过时间属性设置为 0（零）并开始测量经过时间。\r\n","가 null, ":"一片空白，\r\n","결합할 두 번째 경로입니다. ":"第二条路要结合。\r\n","Возвращает или задает порядок сериализации и десериализации элемента.":"获取或设置元素的序列化和反序列化顺序。\r\n","인수 배열에 대한 참조를 나타냅니다.":"表示对参数数组的引用。\r\n","제곱근을 구할 숫자입니다. ":"求平方根的数。\r\n","Stellt einen Moniker bereit, der nicht zu einer Zusammensetzung führt, wenn er rechts an den aktuellen Moniker bzw. an einen Moniker mit ähnlicher Struktur angefügt wird.":"提供一个名字对象，该名字对象在附加到当前名字对象或具有类似结构的名字对象的右侧时不会导致合成。\r\n","Число двойной точности с плавающей запятой, которое больше или равно 0,0, и меньше 1,0.":"大于或等于 0.0 且小于 1.0 的双精度浮点数。\r\n","Konvertiert einen COM-VARIANT in ein Objekt.":"将 COM VARIANT 转换为对象。\r\n","이벤트 소스 인터페이스의 이름을 사용하여 ":"使用事件源接口的名称 \r\n","요소의 형식을 식별합니다.":"标识元素的类型。\r\n"," ungleich dem Wert von ":" 不明价值\r\n",", вставляемый в ":"插入到\r\n"," 배열의 시작 부분부터의 오프셋(바이트)입니다.":" 从数组开头开始的偏移量（以字节为单位）。\r\n","Die Funktion, die Datenbindung unterstützt.":"支持数据绑定的函数。\r\n","Извлекает интерфейс ITypeComp описания типа, позволяющий компилятору клиента выполнить привязку к элементам описания типа.":"检索允许客户端编译器绑定到类型声明的元素的类型声明的 ITypeComp 接口。\r\n","Devuelve un entero de 32 bits con signo convertido a partir de cuatro bytes en la posición especificada de una matriz de bytes.":"开发一个 32 位的输入，并在一个字节矩阵中指定一个 partir de cuatro 字节。\r\n","지정한 함수에서 사용자 지정 데이터를 가져옵니다.":"从指定函数获取自定义数据。\r\n","지정된 복소수의 탄젠트를 반환합니다.":"返回指定复数的正切值。\r\n","Gibt die größere von zwei 64-Bit-Ganzzahlen mit Vorzeichen zurück.":"返回两个 64 位有符号整数中较大的一个。\r\n","Число, в байтах, для кодирования из массива ":"要从数组编码的数字（以字节为单位）\r\n","가져올 고정 길이 배열의 요소 개수 또는 문자열의 문자 수(바이트 수가 아님)를 나타냅니다.":"表示要导入的定长数组中的元素个数或字符串中的字符个数（不是字节数）。\r\n","4바이트 부동 소수점 수입니다.":"一个 4 字节的浮点数。\r\n","Die SDDL-Darstellung der angegebenen Abschnitte der Sicherheitsbeschreibung, die diesem ":"与此对应的安全描述符的指定部分的 SDDL 表示\r\n","Espacio de nombres del contrato.":"Espacio de nombres del contrato。\r\n"," der Arrayelemente enthalten, wenn zwischen verschiedenen Zeichenfolgetypen unterschieden werden muss.Sie können diesen ":" 当你需要区分不同的字符串类型时，数组元素的组合。你可以使用这个\r\n","값이 0인 정수입니다.":"值为 0 的整数。\r\n","비트를 이동할 값입니다.":"要将位移动到的值。\r\n"," für den Zugriff festgelegt.":" 设置为访问。\r\n","Gibt die kleinere von zwei 8-Bit-Ganzzahlen ohne Vorzeichen zurück.":"返回两个 8 位无符号整数中较小的一个。\r\n","Вызовы метода IUnknown::QueryInterface должны игнорировать интерфейс ":"对 IUnknown::QueryInterface 方法的调用必须忽略接口\r\n","Der auf die Auflistungselemente anzuwendende Name.":"Der auf die Auflistungselemente anzuwendende 名称。\r\n"," существует в таблице; в противном случае — новое значение, возвращаемое делегатом ":" 存在于表中；否则，委托返回的新值\r\n"," является отрицательным.-или- ":" 是负的。-或-\r\n","Bei Festlegung hat jeder Versuch einer direkten Änderung der Eigenschaft einen Aufruf von IPropertyNotifySink::OnRequestEdit zur Folge.Die Implementierung von OnRequestEdit bestimmt, ob die Änderung angenommen wird.":"如果设置，任何直接更改属性的尝试都会导致调用IPropertyNotifySink::OnRequestEdit。OnRequestEdit的实现确定是否接受更改。\r\n","Среда CLR автоматически выбирает соответствующее размещение для членов объекта в неуправляемой памяти.Доступ к объектам, определенным при помощи этого члена перечисления, не может быть предоставлен вне управляемого кода.Попытка выполнить такую операцию вызовет исключение.":"公共语言运行时自动为非托管内存中的对象成员选择适当的位置。不能在托管代码之外授予对使用此枚举成员定义的对象的访问权限。尝试执行此类操作将引发异常。\r\n","지정된 배정밀도 부동 소수점 숫자 값을 해당하는 8비트 부호 있는 정수로 변환합니다.":"将指定的双精度浮点数的值转换为等效的 8 位带符号整数。\r\n","에 가장 가까운 정수입니다.":"是最接近 的整数。\r\n","Konvertiert die angegebene Ausnahme in ein HRESULT.":"将指定的异常转换为 HRESULT。\r\n","Значение S_OKHRESULT, если моникер выполняется, значение S_FALSEHRESULT, если моникер не выполняется, или значение E_UNEXPECTEDHRESULT.":"如果名字对象正在运行，则为 S_OKHRESULT；如果名字对象未运行，则为 S_FALSEHRESULT；或者为 E_UNEXPECTEDHRESULT。\r\n","При возвращении данного метода содержит ссылку на структуру FUNCDESC, описывающую заданную функцию.Этот параметр передается без инициализации.":"当此方法返回时，包含对描述指定函数的 FUNCDESC 结构的引用。此参数无需初始化即可传递。\r\n","64-разрядное знаковое целое число, которое эквивалентно значению ":"等同于值的 64 位有符号整数\r\n"," с указанным ключом и значением.":" 使用指定的键和值。\r\n","다른 폴더를 검색하기 전에 DLL이 위치한 폴더에서 DLL의 종속성을 검색합니다. ":"在搜索另一个文件夹之前，在DLL所在的文件夹中搜索DLL的依赖关系。 \r\n","요소에 대한 정보를 포함합니다. ":"包含有关元素的信息。\r\n","El espacio de nombres de los miembros del contrato de datos.":"El espacio de names de los miembros del contrato de datos。\r\n","지정된 32비트 부호 없는 정수 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.":"将指定的 32 位无符号整数值转换为等效的双精度浮点数。\r\n","Ein Wert, der steuert, auf welche Weise ein Commit für die Änderungen am Streamobjekt ausgeführt wird. ":"控制如何提交对流对象的更改的值。\r\n","Показывает текущие биты состояния объекта хранилища (значение чаще всего устанавливается методом IStorage::SetStateBits).":"显示存储对象的当前状态位（该值通常由 IStorage::SetStateBits 方法设置）。\r\n","При возвращении данного метода содержит моникер, который является инверсией текущего моникера.Этот параметр передается без инициализации.":"当此方法返回时，包含一个与当前名字对象相反的名字对象。此参数无需初始化即可传递。\r\n"," 메서드의 반환 값을 제공합니다.":" 提供方法的返回值。\r\n","Возвращает значение, указывающее, равны ли длинное знаковое целое число и значение ":"返回一个值，该值指示一个长符号整数和一个值是否相等\r\n","Obtiene o establece un valor que especifica si se debe serializar el valor predeterminado para un campo o propiedad que se está serializando. ":"Obtiene o establece un valor que especifica si se debe serializar el valor predeterminado para un campo o propiedad que se está serializando。\r\n"," stellt eine Zahl dar, die größer als ":" 表示大于的数\r\n","-Objekt über den gleichen Wert verfügen.":"- 对象具有相同的值。\r\n","Das Decimal, das umfasst und als VT_CY gemarshallt werden soll. ":"跨度和封送为 VT_CY 的十进制。\r\n","변수의 멤버 ID를 나타냅니다.":"表示变量的成员ID。\r\n","Новое значение счетчика ссылок для параметра ":"参数的新引用计数值\r\n","Gibt die Quadratwurzel einer angegebenen Zahl zurück.":"返回给定数字的平方根。\r\n","-Wert ab, der beschreibt, wie die Schnittstelle für COM verfügbar gemacht werden soll.":"描述应如何将接口公开给 COM 的值。\r\n","Eine abzuschneidende Zahl.":"要截断的数字。\r\n","Возвращаемое 64-разрядное целое число без знака. ":"返回的 64 位无符号整数。\r\n","Получает пользовательские данные из заданной функции.":"从给定函数获取用户数据。\r\n","Der Memberbezeichner. ":"成员标识符。\r\n",", построенный с помощью данного экземпляра класса ":", 用类的给定实例构造\r\n","Die Variable gibt ein Objekt zurück, das eine Ereignisquelle ist.":"变量返回一个作为事件源的对象。\r\n","Gibt an, dass ein Stream ein Objekt enthält.":"指示流包含对象。\r\n","Kopiert Daten aus einem nicht verwalteten Speicherzeiger in ein verwaltetes Array von 64-Bit-Ganzzahlen mit Vorzeichen.":"将数据从非托管内存指针复制到托管的 64 位带符号整数数组。\r\n","Показывает значение decimal.":"显示十进制值。\r\n","저장 미디어가 경로로 식별되는 디스크 파일입니다.STGMEDIUM":"存储介质是由path.STGMEDIUM标识的磁盘文件\r\n","지정된 16비트 부호 없는 정수 값을 해당하는 10진수로 변환합니다.":"将指定的 16 位无符号整数值转换为其等效的十进制值。\r\n","Квадратный корень значения ":"值的平方根\r\n","Возвращает размер потока, необходимого для сохранения объекта, в байтах.":"返回保存对象所需的流的大小，以字节为单位。\r\n","파생 클래스에서 재정의된 경우 두 문자열이 같은지를 나타냅니다.":"在派生类中重写时，指示两个字符串是否相等。\r\n","의 마지막 문자가 디렉터리나 볼륨 구분 문자이면 이 메서드는 ":"如果最后一个字符是目录或卷分隔符，则此方法\r\n",". Нуль ":".零\r\n"," ist.Beachten Sie, dass diese Methode einen ":" 是。请注意，此方法需要一个\r\n"," по основанию ":" 按理说\r\n","Указанное для заданной операции значение меньше нуля или больше, чем ":"为指定操作指定的值小于零或大于\r\n","바인딩 대상 ":"结合目标\r\n","Показывает возвращение IMPLICITAPPOBJ.":"显示 IMPLICITAPPOBJ 的返回。\r\n","Gibt an, ob der Zeitgeber auf einem hochauflösenden Leistungsindikator basiert.Dieses Feld ist schreibgeschützt.":"指示定时器是否基于高分辨率性能计数器。该字段是只读的。\r\n","Получает элемент с указанным индексом.":"获取指定索引处的元素。\r\n",", количество цифр дробной части которого равно ":", 其中小数部分的位数为\r\n"," 개체를 부호 있는 8비트 값으로 변환하는 명시적 변환을 정의합니다.":" 定义显式转换以将对象转换为带符号的 8 位值。\r\n","Ein Verweis auf den in diesem Bindungsvorgang zu verwendenden Bindungskontext. ":"对要在此绑定操作中使用的绑定上下文的引用。\r\n","Gibt den Tangens der angegebenen komplexen Zahl zurück.":"返回指定复数的正切值。\r\n","개체의 형식입니다. ":"对象的类型。 \r\n","Возвращаемое значение, описывающее ошибку.":"描述错误的返回值。\r\n","Der Namespace des Vertrags.":"Der Namespace des Vertrags。\r\n","Идентификатор данного объекта ":"此对象的 ID\r\n","의 로그입니다.":"의로그입니다。\r\n","비교할 두 개의 단정밀도 부동 소수점 수 중 첫 번째 숫자입니다. ":"要比较的两个单精度浮点数中的第一个。\r\n","Число с плавающей запятой с обычной точностью, являющееся значением по умолчанию. ":"作为默认值的具有正常精度的浮点数。\r\n","그 뒤에 저장소 이름이 나온다는 것을 나타냅니다.":"表示它后跟存储库名称。\r\n","설명서 문자열, 전체 도움말 파일 이름과 경로, 사용할 지역화 컨텍스트, 도움말 파일의 라이브러리 도움말 항목에 대한 컨텍스트 ID 등을 검색합니다.":"检索文档字符串、完整的帮助文件名和路径、要使用的本地化上下文以及帮助文件中库帮助主题的上下文 ID。\r\n","-Objekt der aktuellen Instanz entspricht, andernfalls false.":"-Objekt der aktuellen Instanz entspricht, andernfalls false.\r\n","매개 변수의 기본값을 나타내는 개체입니다.":"表示参数默认值的对象。\r\n","Преобразует значение заданного 16-разрядного целого числа без знака в эквивалентное число с плавающей запятой двойной точности.":"将指定的 16 位无符号整数的值转换为其等效的双精度浮点数。\r\n","Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное десятичное число.":"将指定的单精度浮点数的值转换为其等效的十进制数。\r\n","Преобразуемая строка. ":"要转换的字符串。\r\n","Освобождаемый COM-объект.":"要释放的 COM 对象。\r\n","Ссылка на этот экземпляр после завершения операции вставки.":"插入操作完成后对此实例的引用。\r\n","Ruft den Namen des Datenvertrags für den Auflistungstyp ab oder legt ihn fest.":"Ruft den Namen des Datenvertrags für den Auflistungstyp ab oder legt ihn fest。\r\n","Получает значение параметра ":"获取参数的值\r\n"," позволяет называть сборщики, независимо отслеживающие типы дескрипторов.":" 允许独立跟踪描述符类型的命名收集器。\r\n","[.NET Framework 4.5.1 이상 버전에서 지원됨] 지정된 형식의 관리되는 개체의 데이터를 관리되지 않는 메모리 블록으로 마샬링합니다. ":"[在 .NET Framework 4.5.1 及更高版本中受支持] 将指定类型的托管对象中的数据封送到非托管内存块中。\r\n"," 입니다.":" 没看到。\r\n","-Parameter und im ":"参数和在\r\n"," in das ":" 在里面\r\n"," 메서드에서 반환된 연결 쿠키입니다. ":" 方法返回的连接 cookie。\r\n","Координата y точки. ":"点的 y 坐标。\r\n","Определяет неявное преобразование 16-битового целого числа без знака в значение ":"定义 16 位无符号整数到值的隐式转换\r\n","Смещение измеряется в байтах, от начала массива ":"偏移量以字节为单位，从数组的开头开始\r\n","들어오는 SAFEARRAY의 형식이 관리되는 시그니처에서 지정된 형식과 일치하지 않을 경우 발생한 예외입니다.":"当传入 SAFEARRAY 的格式与托管签名中指定的格式不匹配时引发异常。\r\n","Gibt die größere von zwei 32-Bit-Ganzzahlen ohne Vorzeichen zurück.":"返回两个 32 位无符号整数中较大的一个。\r\n","검색 포인터를 스트림의 시작 부분, 스트림의 끝 부분 또는 현재 검색 포인터와 관련된 새 위치로 변경합니다.":"将搜索指针更改为流的开头、流的结尾或相对于当前搜索指针的新位置。\r\n","Stellt eine komplexe Zahl dar.":"表示复数。\r\n","현재 검색 포인터에서 스트림 개체 시작에 지정된 바이트 수를 씁니다.":"将指定数量的字节从当前查找指针写入到流对象的开头。\r\n","Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 8-битовое целое число без знака.":"将指定的双精度浮点数的值转换为其等效的 8 位无符号整数。\r\n",", округленное до ближайшего 32-разрядного целого числа без знака.Если ":", 四舍五入到最接近的 32 位无符号整数。如果\r\n","Mithilfe des ":"在...的帮助下\r\n","Eine plattformabhängige Ganzzahl mit Vorzeichen.: 4 Byte für 32-Bit-Windows, 8 Bytes auf 64-Bit-Windows.":"平台相关的有符号整数。在 32 位 Windows 上为 4 个字节，在 64 位 Windows 上为 8 个字节。\r\n","지정된 16비트 부호 있는 정수 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.":"将指定的 16 位带符号整数值转换为等效的双精度浮点数。\r\n","Указатель на число уникальных имен.Если вызывающему объекту не требуются эти сведения, задайте значение null.":"指向多个唯一名称的指针。如果调用者不需要此信息，则设置为 null。\r\n","래핑되고 ":"包装好的 \r\n","Строка, содержащая имя продукта.":"包含产品名称的字符串。\r\n","라이브러리에서 지정된 형식 설명을 검색합니다.":"从库中检索指定的类型描述。\r\n","Возвращает или задает длину текущего объекта ":"获取或设置当前对象的长度\r\n","Ein für Vergleichszwecke vorgesehener Verweis auf den Moniker. ":"出于比较目的对名字的引用。\r\n"," инициализация экземпляра ":" 实例初始化\r\n","Der Schnittstellenbezeichner (Interface Identifier, IID) der angeforderten Speicherschnittstelle. ":"请求的内存接口的接口标识符 (IID)。\r\n","Ein Bytearray mit der Länge 2.":"Ein Bytearray mit der Lange 2。\r\n","Gibt den Typ eines ":"返回a的类型\r\n","Возвращает неотрицательное случайное целое число, которое меньше максимально допустимого значения.":"返回小于最大允许值的非负随机整数。\r\n","Ein E/A-Fehler tritt auf, z. B. ist kein eindeutiger temporärer Dateiname verfügbar.- oder -Diese Methode konnte keine temporäre Datei erstellen.":"发生 I/O 错误，例如B. 没有唯一的临时文件名可用。-或-此方法无法创建临时文件。\r\n","의 소수 부분이 하나는 짝수이고 다른 하나는 홀수인 두 정수의 중간인 경우에는 짝수가 반환됩니다.이 메서드는 정수 계열 형식이 아니라 ":"如果 的小数部分在两个整数之间，其中一个为偶数，另一个为奇数，则返回偶数。\r\n","VT_CY 형식으로 마샬링할 래핑된 개체입니다.":"要封送到类型VT_CY中的包装对象。\r\n","Ein Internetprotokoll. ":"一种互联网协议。\r\n","에서 설명한 버전 관리 문제가 나타내지 않습니다.":"这并不表示中描述的版本控制问题。\r\n"," не равно нулю null; в противном случае — значение null.":" 不等于零 null；否则为空。\r\n"," definierten Zeichen enthalten.":" 定义的字符。\r\n","오류를 설명하는 반환 값입니다.":"描述错误的返回值。\r\n","Значение true, если текущий экземпляр получает сигнал.Пока текущий экземпляр не сигнализирует, метод ":"如果当前实例正在接收信号，则为真。当当前实例未发出信号时，该方法\r\n","결합할 세 번째 경로입니다.":"第三条路结合。\r\n","Имя файла динамической библиотеки (DLL), содержащей точку входа.":"包含入口点的动态链接库 (DLL) 文件的名称。\r\n","Задает целевой объект, на который ссылается этот объект ":"指定此对象引用的目标对象\r\n",", представляющее число без знака в системе счисления, основание которой отлично от 10, предваряется знаком минус.-или-":", 表示基数不是 10 的数字系统中的无符号数字，前面是减号。-或-\r\n","[Поддерживается только в .NET Framework 4.5.1 и более поздних версиях] Объединяет управляемый объект заданного типа с заданным COM-объектом. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 将指定类型的托管对象与指定的 COM 对象合并。\r\n","Объект, который требуется удалить из ":"要从中删除的对象\r\n","지정된 10진수보다 작거나 같은 최대 정수를 반환합니다.":"返回小于或等于指定十进制数的最大整数。\r\n","При возвращении данного метода содержит ссылку на переменную ITypeComp.Этот параметр передается без инициализации.":"当此方法返回时，包含对 ITypeComp 变量的引用。此参数无需初始化即可传递。\r\n",")를 더하면 null 또는 잘못된 주소가 생성되는 경우":") 产生空地址或无效地址。\r\n"," ist kleiner als 0 (null).– oder –":" 小于 0（零）。 - 或 -\r\n","-Eigenschaft einen gültigen Wert enthält.":"属性包含有效值。\r\n","[i] является значением MEMBERID, выполняющим индексацию в описании типа, заданном параметром ":"[i] 是一个 MEMBERID 值，索引到参数指定的类型声明中\r\n"," 매개 변수가 요청된 인터페이스를 지원하지 않는 경우 ":" 如果参数不支持请求的接口\r\n","-Felds zurück.":"场回来。\r\n"," der Klasse.":" 班上。\r\n","[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt] Gibt den Feldoffset der nicht verwalteten Form einer festgelegten verwalteten Klasse zurück.":"[仅在 .NET Framework 4.5.1 和更新版本中受支持] 返回指定托管类的非托管形式的字段偏移量。\r\n","멤버 이름과 설명서 문자열의 로캘입니다.":"成员名称和文档字符串的语言环境。\r\n"," umgewandelt werden soll und das umschlossen wird. ":" 将被转换并附上。\r\n","는 각 요소의 크기를 곱한 것으로 사용 가능한 주소 공간보다 큽니다.":"是每个元素大小的乘积，大于可用地址空间。\r\n"," больше максимальной длины, определенной системой.":" 大于系统定义的最大长度。\r\n"," перед записью.":" 录音前。\r\n","정규화된 이벤트 소스 인터페이스 이름의 null 구분 목록입니다. ":"以空分隔的完全限定事件源接口名称列表。 \r\n","-Parameters nicht null ist. Andernfalls gibt diese Methode null zurück.":"- 参数不为空。否则，此方法返回 null。\r\n"," einer Funktion an.":" 一个功能。\r\n","이 메서드는 반환될 때 이 모니커에 대한 해시 값을 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含此名字对象的哈希值。此参数未初始化传递。\r\n","La excepción que se produce cuando una unidad de datos se lee de una dirección, o se escribe en ella, que no es múltiplo del tamaño de los datos.Esta clase no puede heredarse.":"La excepción que se produce cuando unidad de datos se lee de una directción,o se escribe en ella,que no es múltiplo del tamaño de los datos.Esta clase no puede heredarse。\r\n","Зарезервировано, равно null.":"保留，空。\r\n","Сколько раз следует вставить ":"插入多少次\r\n","부호 있는 8비트 정수를 ":"带符号的 8 位整数\r\n",", der die Quellschnittstelle enthält.":"，其中包含源接口。\r\n","Die Anzahl der Bytes im Puffer.":"缓冲区中的字节数。\r\n","Первое из двух сравниваемых чисел одинарной точности с плавающей запятой. ":"要比较的两个单精度浮点数中的第一个。\r\n","Stellt eine Access Control List (ACL – Zugriffssteuerungsliste) dar.":"表示访问控制列表 (ACL)。\r\n"," verwendet. ":" 用过的。\r\n","Первый сравниваемый объект типа ":"被比较类型的第一个对象\r\n"," menos 3 y es menor o igual que la longitud de ":" menos 3 y es menor o igual que la longitud de\r\n"," ist, gibt diese Methode ":" 是，给出这个方法\r\n","Показывает тип variant элемента, описанного при помощи TYPEDESC.":"指示 TYPEDESC 描述的变体元素的类型。\r\n",", что и экземпляр ":", 这是实例\r\n","Konvertiert den angegebenen booleschen Wert in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.":"将指定的布尔值转换为等效的 64 位带符号整数。\r\n","마지막 Win32 오류 코드에 해당하는 HRESULT입니다.":"对应于最后一个 Win32 错误代码的 HRESULT。\r\n","전달된 처리기를 사용할 수 없는 경우":"如果传递的处理程序不可用\r\n","Gibt einen booleschen Wert an.":"指定一个布尔值。\r\n"," следует за ":" 跟随\r\n","Основание системы счисления, используемой для представления числа, заданного в параметре ":"用于表示参数中给定数字的数字系统的基数\r\n","0.0보다 크거나 같고 1.0보다 작은 배정밀도 부동 소수점 숫자입니다.":"大于或等于 0.0 且小于 1.0 的双精度浮点数。\r\n","Vergleicht zwei Objekte und gibt über den zurückgegebenen Wert an, ob eines der Objekte kleiner, gleich oder größer als das andere Objekt ist.":"比较两个对象并使用返回的值来指示其中一个对象是小于、等于还是大于另一个对象。\r\n","Der Typ des Objekts, das den Zugriffsregeln des aktuellen Instanz zugeordnet ist.":"与当前实例的访问规则关联的对象类型。\r\n",", oder e":", 或 e\r\n","Die primäre Gruppe für das neue ":"新的主要群体\r\n","사용자가 멤버를 표시하거나 프로그래밍할 수 없어야 합니다.":"用户不应该能够显示或程序成员。\r\n"," на вновь созданный перечислитель.":" 到新创建的枚举器。\r\n","의 탄젠트입니다.":"是的切线\r\n","제공된 개체가 실행 상태로 들어갔음을 등록합니다.":"注册提供的对象已进入运行状态。\r\n","Предоставляет управляемое определение структуры TYMED.":"提供 TYMED 结构的托管定义。\r\n","Второе из двух сравниваемых 16-разрядных целых чисел со знаком. ":"正在比较的两个有符号 16 位整数中的第二个。\r\n","구조체 요소, 매개 변수 또는 반환 값을 설명하는 비트 마스크 값을 나타냅니다.":"表示描述结构元素、参数或返回值的位掩码值。\r\n","Копирует данные из одномерного управляемого массива 64-битных целых чисел со знаком в указатель неуправляемой памяти.":"将数据从 64 位带符号整数的一维托管数组复制到非托管内存指针。\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende Gleitkommazahl mit doppelter Genauigkeit.":"将数字的指定字符串表示形式转换为等效的双精度浮点数。\r\n","Ein Ausgabearray von Unicode-Zeichen. ":"Unicode 字符的输出数组。\r\n","에 해당하는 10진수이거나, ":"是一个十进制数，相当于\r\n"," de la interfaz de origen predeterminada. ":" 的默认源接口。 \r\n","반환할 ITypeInfo 인터페이스의 인덱스입니다. ":"要返回的 ITypeInfo 接口的索引。\r\n","true, um diese Regel von einem übergeordneten Container zu erben.":"如果从父容器继承此规则，则为 true。\r\n","Gibt an, dass keine Übereinstimmung gefunden wurde.":"表示未找到匹配项。\r\n","와 같으면 이 메서드는 ":", 那么这个方法\r\n","Задает типы, которые должны распознаваться ":"指定要识别的类型\r\n",", этот метод возвращает -1.Если значение равно ":", 此方法返回-1. 如果值为\r\n","전달된 개체를 모니커 작업을 하는 동안 바인딩되고 작업이 완료되면 해제되어야 하는 개체 중 하나로 등록합니다.":"将传入的对象注册为应在名字对象操作期间绑定并在操作完成时释放的对象之一。\r\n","При возвращении данного метода содержит ссылку DWORD на TYPEFLAG.Этот параметр передается без инициализации.":"当此方法返回时，包含对 TYPEFLAG 的 DWORD 引用。此参数无需初始化即可传递。\r\n","Der Zugriffs-Typ":"访问类型\r\n","Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl ohne Vorzeichen größer als ein oder gleich einem ":"返回一个值，该值指示 64 位无符号整数是否大于或等于 1\r\n","Получает описание сборки, на которую сделана ссылка.":"获取引用程序集的说明。\r\n","Выполняет битовую операцию And для двух значений ":"对两个值执行按位与运算\r\n","8비트 부호 없는 정수 배열의 하위 집합을 base-64 숫자로 인코딩된 유니코드 문자 배열의 해당하는 하위 집합으로 변환합니다.매개 변수는 하위 집합을 입력 및 출력 배열의 오프셋으로 지정하고 변환할 입력 배열의 요소 수를 지정합니다.":"将 8 位无符号整数数组的子集转换为编码为 base-64 数字的 Unicode 字符数组的相应子集。指定元素数。\r\n","Gibt den Wert des angegebenen Unicode-Zeichens als Bytearray zurück.":"Gibt den Wert des angegebenen Unicode-Zeichens als Bytearray zurück。\r\n","Die Größe der einzelnen Elemente im Puffer.":"缓冲区中每个项目的大小。\r\n","true, um Objektverweisdaten mit Standard-XML zu behalten; andernfalls false.Die Standardeinstellung ist false.":"是的，嗯 Objektverweisdaten mit Standard-XML zu behalten； andernfalls false. Die Standardeinstellung ist false.\r\n"," меньше 64-битового целого числа без знака.":" 小于 64 位无符号整数。\r\n","Gibt einen float-Wert an.":"指定一个浮点值。\r\n","Der Name des Typs, auf den der ":"引用的类型的名称\r\n","Eine Gleitkommazahl mit doppelter Genauigkeit, die einen Exponenten darstellt. ":"表示指数的双精度浮点数。\r\n","Возвращает косинус указанного угла.":"返回指定角度的余弦值。\r\n","숫자 1을 나타내는 값을 가져옵니다.":"숫자 1을 나타내는 값을 가져옵니다。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 16비트 부호 없는 정수 값을 해당하는 문자열 표현으로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定的 16 位无符号整数值转换为其等效的字符串表示形式。\r\n","Значение true, если элемент, представленный данным атрибутом, активирован. В обратном случае — значение false. ":"如果启用此属性表示的元素，则为真。否则，该值为假。\r\n","Gibt den voll gekennzeichneten Namen eines benutzerdefinierten Marshallers an.":"指定自定义封送拆收器的完全限定名称。\r\n"," 값을 복소수로 변환하는 명시적 변환을 정의합니다. ":" 定义显式转换以将值转换为复数。\r\n",". То есть диапазон возвращаемых значений включает в себя 0, но не включает ":".即返回范围包括0但不包括\r\n","설명서가 반환되는 멤버의 ID입니다. ":"为其返回文档的成员的 ID。\r\n","При возвращении данного метода содержит строку документации для заданного элемента.Этот параметр передается без инициализации.":"当此方法返回时，包含指定元素的文档字符串。此参数无需初始化即可传递。\r\n","Определяет тип интерфейса класса, созданного для класса.":"指定为类生成的类接口的类型。\r\n",", переданный ссылкой, представляющий IID интерфейса CLSID класса, для которого требуются сведения о типе. ":"通过引用传递的 ，表示需要类型信息的类的 CLSID 的接口 IID。\r\n","Добавляет элемент в текущий набор и возвращает значение, указывающее, что элемент был добавлен успешно. ":"向当前集合添加一个元素，并返回一个值，表示该元素添加成功。\r\n","Строка, представляющая имя дружественной сборки.":"表示友元程序集名称的字符串。\r\n"," enthält keine Haupt- und Nebenversionsnummer.- oder -":" 不包含主要和次要版本号。- 或-\r\n","Сравнивает данный экземпляр с 64-разрядным знаковым целым числом и возвращает целое число, которое показывает, является ли значение данного экземпляра меньшим, большим или равным значению 64-битового знакового целого числа.":"将此实例与 64 位带符号整数进行比较，并返回一个整数，该整数指示此实例的值是小于、大于还是等于 64 位带符号整数的值。\r\n","관리되지 않는 함수 포인터로 비관리 코드에 전달하거나 비관리 코드로부터 전달된 대리자 시그니처의 마샬링 동작을 제어합니다.이 클래스는 상속될 수 없습니다.":"控制作为非托管函数指针传入和传出非托管代码的委托签名的封送处理行为。不能继承此类。\r\n","Не удается встроить метод.Встраивание — это оптимизация, при которой вызов метода заменяется телом метода.":"不能内联方法。内联是一种用方法体代替方法调用的优化。\r\n","숫자 -1을 나타내는 값을 가져옵니다.":"숫자 -1을 나타내는 값을 가져옵니다.\r\n","Преобразует заданное строковое представление числа в эквивалентное 64-битовое целое число без знака, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"给定指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的 64 位无符号整数。\r\n","Der erste zu multiplizierende Wert.":"要相乘的第一个值。\r\n","이 핸들 형식은 ":"此句柄类型为 \r\n"," 배열에서 인코딩할 개수입니다(바이트 단위).":" 数组中要编码的字节数。\r\n","Логарифм по основанию ":"底对数\r\n","Указатель памяти, из которого выполняется копирование.":"指向要从中复制的内存的指针。\r\n","-Enumerationswerte, der die Abschnitte der Sicherheitsbeschreibung (Zugriffsregeln, Überwachungsregeln, Besitzer, primäre Gruppe) des sicherungsfähigen Objekts angibt, die in das ":"枚举值，指定安全对象的安全描述符（访问规则、审核规则、所有者、主要组）中包含的部分\r\n",", начиная с индекса ":", 从索引开始\r\n","지정된 32비트 부호 있는 정수 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.":"将指定的 32 位带符号整数值转换为等效的单精度浮点数。\r\n","Считывает один байт из неуправляемой памяти.":"从非托管内存中读取一个字节。\r\n","Gibt an, ob der Zugriff gewährt oder verweigert wird.":"指示是授予还是拒绝访问。\r\n","Позволяет разработчикам предоставить собственную управляемую реализацию метода IUnknown::QueryInterface(REFIID riid, void **ppvObject) method.":"允许开发人员提供他们自己的 IUnknown::QueryInterface(REFIID riid, void **ppvObject) 方法的托管实现。\r\n","플랫폼 특정 볼륨 구분 기호 문자를 제공합니다.":"提供特定于平台的卷分隔符。\r\n","e를 지정된 수만큼 거듭제곱하여 반환합니다.":"返回 e 的指定数次方。\r\n","Возвращает перечислитель, осуществляющий перебор элементов массива ":"返回一个迭代数组元素的枚举器\r\n","HRESULT des Fehlers.":"错误的 HRESULT。\r\n",".Это значение возвращается любым другим потокам, одновременно запускающим метод инициализации, если метод инициализации не создал исключения в этих потоках.Любые экземпляры ":".此值返回给同时运行初始化方法的任何其他线程，除非初始化方法在这些线程上抛出异常。任何实例\r\n",", как показано в следующей таблице.ЗначениеУсловиеМеньше нуляЗначение параметра ":"，如下表所示。ValueCondition小于零的参数值\r\n","다시 시작할 수 있는 예외가 아직 구현되지 않았으므로 항상 false입니다.":"始终为 false，因为尚未实现可重新启动的异常。\r\n","Корневой каталог для ":"根目录为\r\n","Ein Bytewert, der die Revisionsebene von ":"表示修订级别的字节值\r\n","Показывает, возможно ли восстановление после исключения и возможно ли продолжить выполнение кода с точки возникновения этого исключения.":"指示是否可以从异常中恢复以及是否可以从发生异常的点继续执行代码。\r\n","Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 64-битовое целое число со знаком.":"将指定的双精度浮点数的值转换为等效的 64 位带符号整数。\r\n","Ein Windows-Runtime-Schnittstellenzeiger.Sie können diesen Member für den ":"Windows 运行时接口指针。您可以将此成员用于\r\n","Меньший из двух параметров, ":"两个参数中较小的一个，\r\n","-Objekt für einen Speicherblock ab.":"- 内存块的对象。\r\n","이 멤버의 이름입니다.":"此成员的名称。\r\n"," 값으로 변환하는 명시적 변환을 정의합니다.":" 定义要转换为值的显式转换。\r\n","Entfernt Zugriffsregeln, die dieselbe Sicherheits-ID und dieselbe Zugriffsmaske wie die angegebene Zugriffsregel enthalten, aus der DACL (Discretionary Access Control List), die diesem ":"从与此关联的自由访问控制列表 (DACL) 中删除包含与指定访问规则相同的安全 ID 和访问掩码的访问规则\r\n","변환할 관리되지 않는 함수 포인터입니다. ":"要转换的非托管函数指针。\r\n","-Klasse und gibt die Pfade an, die bei der Suche nach den Zielen von Plattformaufrufen zu verwenden sind. ":"类并指定在定位平台调用目标时使用的路径。\r\n","Die x-Koordinate eines Punkts. ":"点的 x 坐标。\r\n","Das Objekt, das in ":"对象在\r\n","-Feld kann optional den ":"字段可以选择 den\r\n"," ist eine negative Zahl. ":" 是一个负数。\r\n","Возвращает значение поля ":"Возвращает значение поля\r\n","Eine der Zeichenfolgen im Array ist null. ":"数组中的字符串之一为空。\r\n","마샬링될 데이터가 있는 관리되는 개체입니다.이 개체는 구조체이거나 형식이 지정된 클래스의 인스턴스여야 합니다.":"具有要封送的数据的托管对象。此对象必须是结构或类型化类的实例。\r\n","Указывает, что анализируемая строка может начинаться со знаков пробела.Допустимые знаки пробела имеют следующие значения в кодировке Юникод: U+0009, U+000A, U+000B, U+000C, U+000D и U+0020.Обратите внимание, что это подмножество символов, для которых метод ":"指定解析的字符串可以以空白字符开头。有效的空白字符具有以下 Unicode 值：U+0009、U+000A、U+000B、U+000C、U+000D 和 U+0020。请注意，这些是子集该方法所针对的字符数\r\n","개체의 모양 또는 뷰입니다.":"物体的形状或视图。\r\n","Выделяет дескриптор указанного типа для указанного объекта.":"将指定类型的句柄分配给指定的对象。\r\n","Остаток от деления.":"该部门的其余部分。\r\n","Konvertiert eine Teilmenge eines Unicode-Zeichenarrays, das Binärdaten als Base-64-Ziffern codiert, in ein entsprechendes Array von 8-Bit-Ganzzahlen ohne Vorzeichen.Parameter geben die Teilmenge im Eingabearray und die Anzahl der zu konvertierenden Elemente an.":"将 Unicode 字符数组的子集（将二进制数据编码为 base-64 数字）转换为等效的 8 位无符号整数数组。参数指定输入数组中的子集和要转换的元素数。\r\n",", переданный ссылкой, который используется для определения данных. ":"用于定义数据的按引用传递。\r\n","16-битовое знаковое целое число, образованное двумя байтами, начинающимися с ":"由两个字节组成的 16 位有符号整数\r\n","설정할 바인딩 옵션이 들어 있는 구조체입니다. ":"包含要设置的绑定选项的结构。\r\n","16-разрядное целое число со знаком, являющееся значением по умолчанию. ":"作为默认值的 16 位有符号整数。\r\n","모니커 바인딩 작업의 여러 측면을 제어합니다.":"控制名字对象绑定操作的几个方面。\r\n"," для сборки, описывающих параметры JIT-компилятора, возможность переопределить целевые объекты сборки, а также вид открытого ключа сборки — полный или измененный с использованием маркера.Этот класс не наследуется.":" 对于描述 JIT 编译器选项、覆盖构建目标的能力以及程序集的公钥是完全限定还是使用标记修改的程序集。此类不被继承。\r\n","Указывает на использование для данного метода соглашения о вызове Macintosh Programmers' Workbench (MPW) CDECL.":"指示此方法使用 Macintosh 程序员工作台 (MPW) CDECL 调用约定。\r\n","Ссылка на интерфейс IBindCtx объекта контекстной привязки, используемого в данной операции привязки. ":"对此绑定操作中使用的上下文绑定对象的 IBindCtx 接口的引用。\r\n","Ein Verweis auf die freizugebende FUNCDESC-Struktur. ":"对要释放的 FUNCDESC 结构的引用。\r\n","Der Benutzername des Benutzers, der auf den URI zugreift.":"访问 URI 的用户的用户名。\r\n","Definiert eine implizite Konvertierung eines Bytewerts mit Vorzeichen in eine komplexe Zahl.":"定义有符号字节值到复数的隐式转换。\r\n","Значение true, если байт в ":"如果字节在\r\n","Длина подстроки. ":"子串的长度。\r\n","-Wert kleiner oder gleich einem anderen ":"- 小于或等于另一个值\r\n","Ruft einen Wert ab, der angibt, ob das Handle geschlossen ist.":"获取一个值，该值指示句柄是否已关闭。\r\n","Kopiert Daten aus einem eindimensionalen, verwalteten Zeichenarray in einen nicht verwalteten Speicherzeiger.":"将数据从一维托管字符数组复制到非托管内存指针。\r\n","형식 라이브러리에 들어 있는 형식 설명의 항목을 찾습니다.":"在类型库中查找类型描述的条目。\r\n","이 메서드가 반환되면 ":"当此方法返回时\r\n","32비트 부호 있는 정수의 부호를 나타내는 값을 반환합니다.":"返回一个值，该值指示 32 位有符号整数的符号。\r\n","Der nicht verwaltete Funktionszeiger, der konvertiert werden soll. ":"要转换的非托管函数指针。\r\n","Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 8-битовое целое число со знаком.":"将指定的 8 位无符号整数的值转换为等效的 8 位有符号整数。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 ":"使用指定的文化特定格式信息，\r\n","Stellt eine Wrapperklasse für Handleressourcen dar.":"Stellt eine Wrapperklasse für Handleressourcen dar。\r\n"," 개체의 식별자를 가져옵니다.":" 获取对象的标识符。\r\n"," распознаваемом .":" 可识别的。\r\n","Ein S_OKHRESULT-Wert, wenn der Moniker ausgeführt wird; ein S_FALSEHRESULT-Wert, wenn der Moniker nicht ausgeführt wird, oder ein E_UNEXPECTEDHRESULT-Wert.":"如果名字对象正在运行，则为 S_OKHRESULT 值； S_FALSEHRESULT 值（如果名字对象未运行）或 E_UNEXPECTEDHRESULT 值。\r\n"," для любого вызова атрибута ":" 对于任何属性调用\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.":"使用指定的区域性特定格式设置信息，将指定的 32 位无符号整数的值转换为其等效的字符串表示形式。\r\n","Ein Array, das die Zeichen enthält, die in Pfadnamen nicht zulässig sind.":"包含路径名中不允许的字符的数组。\r\n","Предоставляет управляемое определение интерфейса ITypeLib2.":"提供 ITypeLib2 接口的托管定义。\r\n","부호 있는 64비트 정수와 ":"带符号的 64 位整数和\r\n","Значение S_OKHRESULT, если моникеры совпадают; в противном случае — значение S_FALSEHRESULT.  ":"S_OKHRESULT 的值（如果名字匹配）；否则，S_FALSEHRESULT 的值。\r\n"," в соответствии с заданной схемой и узлом.":" 按照给定的方案和节点。\r\n","Konvertiert den angegebenen HRESULT-Fehlercode in ein entsprechendes ":"将给定的 HRESULT 错误代码转换为等效的错误代码\r\n","Eine komplexe Zahl, die einen Exponenten angibt.":"指定指数的复数。\r\n","Значение соглашения о вызове, указанное конструктором ":"构造函数指定的调用约定值\r\n",", используют это значение и пропускают остальные значения.":"，使用该值并跳过其他值。\r\n","Сообщение, указывающее причину возникновения исключения. ":"指示异常原因的消息。\r\n","Der Tangens von ":"的切线\r\n","Возвращает неуправляемый размер объекта в байтах.":"返回对象的非托管大小，以字节为单位。\r\n","Копирует данные из одномерного управляемого массива чисел с плавающей запятой двойной точности в указатель неуправляемой памяти.":"将数据从一维托管双精度浮点数组复制到非托管内存指针。\r\n",", используя заданные для JIT-компилятора режимы отладки. ":"，使用为 JIT 编译器指定的调试模式。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.":"将指定的双精度浮点数的值转换为等效的 8 位带符号整数。\r\n","Представляет дескриптор, строку или указатель интерфейса, которые получающий процесс может использовать для доступа к передаваемым данным.":"表示接收进程可用于访问正在传递的数据的句柄、字符串或接口指针。\r\n","Необходимо использовать параметры форматирования по умолчанию.Это значение представляет стиль по умолчанию для методов ":"您必须使用默认格式设置选项。此值表示方法的默认样式\r\n","Konvertiert den Wert der angegebenen Dezimalzahl in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.":"将指定十进制数的值转换为等效的 64 位无符号整数。\r\n","Obtiene o establece el nombre del contrato de datos para el tipo de colección.":"Obtiene o establece el nombre del contrato de datos para el tipo de colección。\r\n","Предоставляет управляемое определение структуры STATDATA.":"提供 STATDATA 结构的托管定义。\r\n","-Objekts eine gerade Zahl ist.":"-object 是偶数。\r\n","Число элементов для возвращения в ":"要返回的元素数\r\n"," содержит имя файла, который не был загружен. ":" 包含未加载的文件的名称。\r\n","-Eigenschaft ermöglicht Ihnen das Benennen von Collectors, die Typen von Handles separat verfolgen.":"属性允许您命名单独跟踪句柄类型的收集器。\r\n","Ruft das umschlossene ":"Ruft das umschlossene\r\n","Этот член является обычным методом.":"该成员是常规方法。\r\n","URI의 포트 번호를 가져오거나 설정합니다.":"获取或设置 URI 的端口号。\r\n","서버의 DNS 호스트 이름 또는 IP 주소입니다.":"服务器的 DNS 主机名或 IP 地址。\r\n"," равны значению ":" 等于值\r\n","Diese Eigenschaft gibt immer null zurück.Sie ist nur implementiert, weil sie für die Implementierung der ":"此属性始终返回 null。它之所以被实现，是因为它是实现\r\n","Уменьшает счетчик ссылок для указанного интерфейса.":"减少指定接口的引用计数。\r\n","Gibt einen Winkel zurück, dessen Tangens die angegebene Zahl ist.":"返回正切为给定数字的角度。\r\n","Gibt die Richtung des Datenflusses im ":"指定数据流的方向\r\n"," wird mithilfe einer internen Ganzzahldarstellung gespeichert.":" 使用内部整数表示形式存储。\r\n"," представляет число, которое меньше ":" 表示小于的数\r\n","Исключение создается, если тип входящего SAFEARRAY не совпадает с типом, указанным в управляемой подписи.":"如果传入 SAFEARRAY 的类型与托管签名中指定的类型不匹配，则会引发异常。\r\n","Возвращает абсолютное значение числа двойной точности с плавающей запятой.":"返回双精度浮点数的绝对值。\r\n","При возвращении данного метода содержит ссылку на структуру VARDESC, описывающую заданную переменную.Этот параметр передается без инициализации.":"当此方法返回时，包含对描述指定变量的 VARDESC 结构的引用。此参数无需初始化即可传递。\r\n","Gibt an, dass die Schnittstelle für COM als duale Schnittstelle verfügbar gemacht wird. Dadurch werden sowohl frühes als auch spätes Binden ermöglicht.Der Standardwert lautet ":"指示接口将作为双重接口公开给 COM。这允许早期和晚期绑定。默认是\r\n",", соответствующий значению параметра.  ":"，对应于参数的值。\r\n","Идентификатор GUID запрашиваемого интерфейса.":"所请求界面的 GUID。\r\n","-Objekts unter Verwendung des angegebenen Formats und der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.":"使用指定的格式和特定​​于区域性的格式化信息将对象转换为其等效的字符串表示形式。\r\n","Gibt den Offset dieser Variablen in der Instanz an.":"指定实例中此变量的偏移量。\r\n"," ist nicht 2, 8, 10 oder 16. ":" 不是 2、8、10 或 16。\r\n","Initialisiert eine neue Instanz der InvalidOleVariantTypeException-Klasse mit einer angegebenen Meldung.":"使用指定消息初始化 InvalidOleVariantTypeException 类的新实例。\r\n","Указывает на использование для данного метода стандартного соглашения о вызове SYSCALL.":"指示标准 SYSCALL 调用约定用于此方法。\r\n","이 메서드가 반환될 때 도움말 파일에 사용되는 DLL이 들어 있는 파일의 정규화된 이름을 나타내는 BSTR를 포함합니다.호출자에 파일 이름이 필요하지 않은 경우 ":"当此方法返回时，包含一个 BSTR，表示包含帮助文件使用的 DLL 的文件的完全限定名称。如果调用者不需要文件名\r\n","Gibt den Offset in der VTBL für ":"指定 VTBL 中的偏移量\r\n","Преобразует значение заданного 8-битового целого числа без знака в эквивалентное логическое значение.":"将指定的 8 位无符号整数的值转换为其等效的布尔值。\r\n","Ein Währungstyp.Wird für ":"一种货币类型。用于\r\n"," для кодирования в URL.":" 用于 URL 编码。\r\n","Die Basisadresse im nicht verwalteten Speicher des Zielobjekts.":"目标对象在非托管内存中的基地址。\r\n","의 제곱근입니다.":"是的平方根\r\n",", который служит оболочкой для указанного списка.":"包装指定列表的 。\r\n","Описывает символьную константу.":"描述一个字符常量。\r\n","사용자 지정 데이터에 대한 구현 형식의 인덱스입니다. ":"自定义数据中实现类型的索引。\r\n","CLSID возвращаемого типа. ":"返回类型的 CLSID。\r\n","При возвращении этого параметра содержит IID выходящего интерфейса, управляемого с использованием данной точки подключения.Этот параметр передается без инициализации.":"返回此参数时，包含此连接点管理的传出接口的IID。此参数无需初始化即可传递。\r\n","에서 제공하는 IUnknown::QueryInterface 사용자 지정을 적용하는지 여부를 나타내는 열거형 값 중 하나입니다.":"枚举值之一，指示是否应用 IUnknown::QueryInterface 提供的自定义。\r\n","Konvertiert den Wert der aktuellen komplexen Zahl in die entsprechende Zeichenfolgendarstellung in kartesischer Form.":"将当前复数的值转换为笛卡尔形式的等效字符串表示形式。\r\n","Исключение, которое выбрасывается в случае невозможности найти библиотеку DLL, указанную при импорте DLL.":"Исключение, которое выбрасывается в случае невозможности найти библиотеку DLL, указанную при импорте DLL.\r\n","Структура VARDESC описывает символьную константу.Связанная с ней память отсутствует.":"VARDESC 结构描述了一个字符常量，没有与之关联的内存。\r\n",". -или-Соглашение ":". - 或 - 协议\r\n","Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 16-битовое целое число без знака.":"将指定的 8 位无符号整数的值转换为等效的 16 位无符号整数。\r\n","Löst eine Ausnahme mit einem bestimmten Fehler-HRESULT auf Grundlage der angegebenen IErrorInfo-Schnittstelle aus.":"根据指定的 IErrorInfo 接口，引发具有特定错误 HRESULT 的异常。\r\n","-Schnittstelle nicht.- oder - Die Konvertierung wird nicht unterstützt. ":"- 没有接口。- 或 - 不支持转换。\r\n","Obtiene o establece el espacio de nombres para el contrato de datos.":"Obtiene o establece el espacio de names para el contrato de datos。\r\n","Der Parameter des Qualifizierers enthält einen ungültigen Wert, oder die Länge der Werts für den nicht transparenten Parameter ist größer als der Rückgabewert der ":"限定符的参数包含无效值，或者不透明参数的值的长度大于\r\n",".Расшифрованный массив ":".解码数组\r\n","검사할 개체입니다.":"要扫描的对象。\r\n","Остаток от деления показателя степени":"指数除法的余数\r\n"," для добавления в интерфейс ":" 添加到界面\r\n","Длина входного массива за вычетом ":"输入数组的长度减去\r\n","을 의미합니다.":"方法。\r\n","지정된 문화권별 서식 지정 정보를 사용하여 논리 값의 지정된 문자열 표현을 해당하는 부울 값으로 변환합니다.":"使用指定的区域性特定格式设置信息将逻辑值的指定字符串表示形式转换为等效的布尔值。\r\n",", oder die Länge des ":", 或长度\r\n","При возвращении данного метода содержит ссылку на структуру, содержащую атрибуты этого описания типа.Этот параметр передается без инициализации.":"当此方法返回时，包含对包含此类型声明的属性的结构的引用。此参数在没有初始化的情况下传递。\r\n","변경된 뷰 부분입니다.현재 -1만 유효합니다.":"视图中发生变化的部分。目前只有 -1 有效。\r\n","는 반올림됩니다.예를 들어, 소수점 두 자리로 반올림하면 2.345는 2.34가 되고 2.355는 2.36이 됩니다.":"四舍五入，如2.345四舍五入为2.34，2.355四舍五入为2.36。\r\n"," 개체와 현재 ":" 对象和当前 \r\n","Управляемый массив, на который ссылается этот экземпляр.":"Управляемый массив, на который ссылается этот экземпляр。\r\n","Определяет неявное преобразование 16-битового знакового целого числа в значение ":"指定 16 位有符号整数到值的隐式转换\r\n","Bestimmt, wie eine Schnittstelle für COM verfügbar gemacht wird.":"确定接口如何向 COM 公开。\r\n","Уведомляет зарегистрированные приемники уведомлений объекта, что его представление изменилось.Этот метод вызывается сервером.":"通知对象的已注册通知接收器其表示已更改。此方法由服务器调用。\r\n","Die Member-ID, die angibt, welche Marshallinformationen erforderlich sind. ":"指定需要哪些编组信息的成员 ID。\r\n","Получает значение, указывающее, запущен ли таймер ":"获取指示计时器是否正在运行的值\r\n"," содержится строка нулевой длины или строка, состоящая только из пробелов.– или – Подпрограмма синтаксического анализа обнаружила схему в недопустимой форме.– или – Средство синтаксического анализа обнаружило более двух последовательно расположенных косых черт, для которых не используются схема File.– или – Недопустимый URI-адрес: ":" 包含零长度字符串或仅包含空格的字符串。– 或 – 解析器遇到格式无效的方案。 – 或 – 解析器遇到两个以上不使用文件方案的连续斜线。 – 或 – 无效URI-地址：\r\n","Преобразует значение заданного десятичного числа в эквивалентное 8-битовое целое число со знаком.":"将指定十进制数的值转换为其等效的 8 位带符号整数。\r\n","Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное строковое представление.":"将指定的双精度浮点数的值转换为其等效的字符串表示形式。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.":"将指定的 64 位带符号整数的值转换为等效的 16 位带符号整数。\r\n","Visual Basic에서 비관리 코드의 문자열을 변경하고 결과를 관리 코드에 반영되도록 하는 데 사용할 수 있는 값입니다.이 값은 플랫폼 호출에만 지원됩니다.":"可在 Visual Basic 中用于更改非托管代码中的字符串并将结果反映在托管代码中的值。仅平台调用支持此值。\r\n"," auf ein BSTR fest, das den Namen des Einstiegspunktes enthält. ":" 到包含入口点名称的 BSTR。\r\n","로의 형식 변환이 지원되지 않습니다.":"不支持格式转换为。\r\n","Gibt eine vorzeichenlose 32-Bit-Ganzzahl zurück, die aus vier Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.":"返回由字节数组中指定位置的四个字节转换而来的 32 位无符号整数。\r\n","크기가 반환되는 형식입니다.":"返回大小的格式。\r\n","Преобразует значение заданного объекта в 64-битовое целое число со знаком.":"将指定对象的值转换为 64 位有符号整数。\r\n","Beendet einen Prozess sofort, nachdem eine Meldung in das Windows-Anwendungsereignisprotokoll geschrieben wurde, und schließt dann die Meldung und Ausnahmeinformationen in Fehlerberichte an Microsoft ein.":"在将消息写入 Windows 应用程序事件日志后立即终止进程，然后将消息和异常信息包含在向 Microsoft 的错误报告中。\r\n","Kopiert Daten aus einem nicht verwalteten Speicherzeiger in ein verwaltetes ":"将数据从非托管内存指针复制到托管内存指针\r\n","Возвращает тип элементов, содержащихся в фиксированном буфере. ":"返回固定缓冲区中包含的元素的类型。\r\n","Speichert die Anzahl der Fehler, die eine Funktion auf einem 16-Bit-System zurückgeben kann.":"存储函数在 16 位系统上可以返回的错误数。\r\n","-Objekt ab, das Zeichenfolgenvergleiche ohne Unterscheidung der Groß- und Kleinschreibung mit den Wortvergleichsregeln der aktuellen Kultur ausführt.":"使用当前区域性的单词比较规则执行不区分大小写的字符串比较的对象。\r\n","Ссылка на интерфейс IMoniker моникера для добавления в конец данного моникера. ":"对要附加到此名字对象末尾的名字对象的 IMoniker 接口的引用。\r\n","UCOMITypeInfo의 특성을 포함합니다.":"包含 UCOMITypeInfo 的属性。\r\n","Initialisiert eine Instanz von InvalidComObjectException mit Standardeigenschaften.":"使用默认属性初始化 InvalidComObjectException 的实例。\r\n","Die zweite zu multiplizierende Zahl.":"第二个要相乘的数字。\r\n","Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende Zeichenfolgendarstellung.":"将指定 Unicode 字符的值转换为其等效的字符串表示形式。\r\n","Представляет код языка библиотеки типов.":"表示类型库语言代码。\r\n"," является отрицательным числом.":" 是一个负数。\r\n","Предоставляет методы, обеспечивающие делегаты .NET Framework, которые обрабатывают события, добавляемые в COM-объекты и удаляемые из них.":"提供提供 .NET Framework 委托的方法，这些委托处理添加到 COM 对象和从中删除的事件。\r\n","Получает абсолютное значение объекта ":"Получает абсолютное значение объекта\r\n","Определяет параметры форматирования, задающие способ разбора строки методами ":"定义指定字符串如何被方法解析的格式化选项\r\n","이 메서드는 반환될 때 static 멤버에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含对静态成员的引用。此参数未初始化地传递。\r\n","true, wenn das Handle erfolgreich freigegeben wurde, andernfalls bei Vorliegen eines schwerwiegenden Fehlers  false.In diesem Fall wird ein ReleaseHandleFailed-MDA-Assistent für verwaltetes Debuggen generiert.":"如果句柄已成功释放，则为 true；否则，如果出现致命错误，则为 false。在这种情况下，将为托管调试生成 ReleaseHandleFailed MDA 向导。\r\n"," muss größer oder gleich ":" 必须大于或等于\r\n","Ein Typ, der eine Schnittstelle darstellt.":"表示接口的类型。\r\n","모든 데이터 개체의 현재 등록된 advise 싱크에 개체의 데이터가 변경되었음을 알립니다.":"通知所有数据对象的当前注册咨询接收器对象的数据已更改。\r\n","지정된 복소수의 사인을 반환합니다.":"返回指定复数的正弦值。\r\n","메모리를 할당할 값 형식의 요소 수입니다.":"要为其分配内存的值类型的元素数。\r\n","Адрес неуправляемой памяти, откуда производится чтение.":"要读取的非托管内存的地址。\r\n","При возвращении данного метода содержит ссылку на объект перечислителя для моникера.Этот параметр передается без инициализации.":"当此方法返回时，包含对名字对象的枚举器对象的引用。此参数无需初始化即可传递。\r\n","-Klasse reserviert werden können.":"类可以保留。\r\n","Идентификатор конструктора или ":"构造函数 ID 或\r\n","Первое число для умножения.":"第一个相乘的数字。\r\n","가 음수이면 값 -0이 반환됩니다.":"如果为负数，则返回值 -0。\r\n","Der Byteoffset für den Anfang des Bereichs. ":"范围开头的字节偏移量。\r\n"," класса. ":" 班级。\r\n"," меньше 0.– или –Значение параметра ":" 小于 0.– 或 –参数值\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.":"将指定的 8 位无符号整数的值转换为等效的 32 位有符号整数。\r\n","호출자가 제네릭이 아닌 구성을 요구한다는 것을 나타내려면 true입니다.":"true 指示调用者需要非泛型构造。\r\n","Ruft die Dokumentationszeichenfolge, den vollständigen Namen und Pfad der Hilfedatei sowie die Kontext-ID des Hilfethemas für eine angegebene Typenbeschreibung ab.":"检索文档字符串、帮助文件的全名和路径，以及给定类型描述的帮助主题的上下文 ID。\r\n","Das Produkt des ":"的产品\r\n","Die Adresse im nicht verwalteten Arbeitsspeicher, an die ":"非托管内存中的地址\r\n","Преобразует значение заданного объекта в 8-битовое целое число со знаком.":"将指定对象的值转换为 8 位有符号整数。\r\n","Косинус ":"余弦\r\n","Идентификатор элемента, для которого возвращается имя (или имена). ":"返回名称的元素的 ID。\r\n","함수는 static 주소로 액세스되고 암시적인 this 포인터를 사용하지 않습니다.":"在静态地址访问函数，不使用隐式 this 指针。\r\n","-Klasse mit dem angegebenen Bereich und Bezeichner. ":"- 具有指定范围和标识符的类。\r\n","이 메서드가 반환될 때 도움말 지역화 컨텍스트를 포함합니다.호출자에 도움말 컨텍스트가 필요하지 않은 경우 ":"当此方法返回时包括帮助本地化上下文。如果调用者不需要帮助上下文\r\n","Массив, содержащий символы, которые не разрешены в именах путей.":"包含路径名中不允许的字符的数组。\r\n","Преобразуемое число. ":"Преобразуемое число。\r\n","-Objekt, das ein ":"-对象那个\r\n"," и возвращает результат.":" и возвращает результат。\r\n","[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt] Konvertiert einen Delegaten eines angegebenen Typs in einen Funktionszeiger, der aus nicht verwaltetem Code aufgerufen werden kann. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 将指定类型的委托转换为可从非托管代码调用的函数指针。\r\n"," ist, oder π/2 auf doppelte Genauigkeit gerundet (1,5707963267949), wenn ":" 是，或 π/2 四舍五入为双精度 (1.5707963267949) 如果\r\n","Gibt die Konstanten an, die die Eigenschaften einer Variablen definieren.":"指定定义变量属性的常量。\r\n","Eine zu rundende Dezimalzahl. ":"要四舍五入的小数。\r\n"," может иметь значение null.Этот параметр передается без инициализации.":" 可以为null，该参数不经初始化直接传递。\r\n","Значение true, если есть доступные для очистки вызываемые оболочки времени выполнения; в противном случае — значение false.":"如果存在可用于清理的运行时可调用包装器，则为真；否则，假的。\r\n","COM-объект, инициирующий события, на которые вызывающему объекту требуется реагировать.":"引发调用者想要响应的事件的 COM 对象。\r\n","와 비교할 문자열입니다.":"要比较的字符串。\r\n"," 는 데카르트 평면 상의 지점임).다음 사항이 적용됩니다.에 대 한 (":" 是笛卡尔平面上的一个点。以下适用：对于 (\r\n","인터페이스를 제공하는 개체입니다. ":"提供接口的对象。\r\n",", für den eine Zugriffssteuerungsregel entfernt werden soll.":"为其删除访问控制规则。\r\n","Der Typ der formatierten Struktur.Damit werden die Layoutinformationen bereitgestellt, die zum Löschen des Puffers im ":"格式化结构的类型。这提供了清除缓冲区中所需的布局信息\r\n","Показывает unsignedshort.":"显示 unsignedshort。\r\n"," содержит один или несколько недопустимых символов, определенных в ":" 包含一个或多个定义在\r\n","Интерфейс поддерживает и IDispatch, и привязку VTBL.":"该接口同时支持 IDispatch 和 VTBL 绑定。\r\n","Der Index des implementierten Typs, dessen Handle zurückgegeben wird. ":"返回其句柄的已实现类型的索引。\r\n","Указывает порядок байтов, в котором данные хранятся в архитектуре данного компьютера.":"指定数据存储在此计算机体系结构上的字节顺序。\r\n","Ein als Verweis übergebenes ":"A 通过引用传递\r\n","Этот атрибут отмечает типы и элементы как жизненно важные для безопасности, к которым прозрачный код имеет безопасный доступ.":"此属性将类型和成员标记为对安全至关重要，透明代码可以安全访问这些类型和成员。\r\n","-Objekt zugeordnet ist, und fügt anschließend die angegebene Überwachungsregel hinzu.":"对象关联，然后添加指定的审核规则。\r\n","При возвращении данного метода содержит индекс на функцию.Этот параметр передается без инициализации.":"当这个方法返回时，它包含一个函数的索引。这个参数是在没有初始化的情况下传递的。\r\n","Ruft eine Beschreibung oder Angabe eines Einstiegspunkts für eine Funktion in einer DLL ab.":"获取 DLL 中函数的说明或入口点规范。\r\n",", или 0 (нуль), если value имеет значение null.":", 或 0（零）如果值为空。\r\n","Eine Ganzzahl, die einen eindeutigen Bezeichner für diesen verwalteten Thread darstellt.":"表示此托管线程的唯一标识符的整数。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.":"将指定的 32 位带符号整数的值转换为等效的 8 位带符号整数。\r\n","Gibt einen Wert zurück, der das Vorzeichen einer 64-Bit-Ganzzahl mit Vorzeichen angibt.":"返回一个值，该值指示 64 位有符号整数的符号。\r\n","지정한 개체가 같으면 true이고, 그렇지 않으면 false입니다. ":"如果指定的对象相等，则为 true；否则为 false。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.":"将指定的双精度浮点数的值转换为等效的 16 位无符号整数。\r\n","Определяет способ маршалинга параметров или полей в неуправляемый код. ":"指定如何将参数或字段封送到非托管代码。\r\n","SAFEARRAY 포인터를 나타냅니다.":"表示一个 SAFEARRAY 指针。\r\n","Преобразует заданное логическое значение в эквивалентное 8-битовое целое число со знаком.":"将指定的布尔值转换为等效的 8 位带符号整数。\r\n","Язык и региональные параметры, поддерживаемые сборкой с данным атрибутом. ":"具有此属性的程序集支持的区域性。\r\n","Возвращает число элементов, содержащихся в экземпляре ":"返回实例中包含的元素数\r\n","Представляет номер основной версии библиотеки типов.":"表示类型库的主版本号。\r\n","Steuert den Zugriff auf Verzeichnisdienste-Objekte.Diese Klasse stellt einen ACE (Access Control Entry, Zugriffssteuerungseintrag) dar, der einem Verzeichnisobjekt zugeordnet ist.":"控制对目录服务对象的访问。此类表示与目录对象关联的访问控制条目 (ACE)。\r\n","Строка для расшифровки.":"要解密的字符串。\r\n","Объект для объединения.":"要合并的对象。\r\n"," не является классом или массивом.-или- ":" 不是类或数组。-或-\r\n",", например \"C:\\\", или null, если параметр ":"，例如“C:\\”，如果参数为 null\r\n","Значение, на которое ссылается объект.":"对象引用的值。\r\n","Возвращает угол, синус которого равен указанному числу.":"返回正弦等于指定数字的角度。\r\n","와 같은 경우또는":"或者\r\n","인터넷 액세스 프로토콜입니다. ":"它是一种互联网访问协议。\r\n","Значение true, если счетчик ссылок был успешно увеличен; в противном случае — значение false.":"Значение true, если счетчик ссылок был усpeшно увеличен; в противном случае — значение 错误。\r\n","Ein SafeArray ist ein selbstbeschreibendes Array mit dem Typ, dem Rang und den Grenzen der verknüpften Arraydaten.Sie können diesen Member mit dem ":"SafeArray 是一个自描述数组，具有关联数组数据的类型、等级和边界\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende Dezimalzahl.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为等效的十进制数。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.":"将指定的 8 位带符号整数的值转换为等效的 16 位带符号整数。\r\n","Содержит сведения, необходимые для передачи значения, возвращенного функцией, параметром или элементом структуры между процессами.":"包含在进程之间传递函数、参数或结构成员返回的值所需的信息。\r\n","Kopiert den Inhalt der Auflistung in ein Array.":"将集合的内容复制到数组中。\r\n","-Wert und eine 64-Bit-Ganzzahl ohne Vorzeichen ungleich sind.":"value 和 64 位无符号整数不相等。\r\n"," als Typ zugrunde liegt und dessen Wert ":" 作为基础类型及其值\r\n"," weist kein für einen ":" 没有一个\r\n","Die Funktion, die das Objekt am besten darstellt.Nur eine Funktion in einem Typ kann über dieses Attribut verfügen.":"最能代表对象的函数。只有一个类型中的函数才能拥有这个属性。\r\n"," заменяется на ":" 被替换为\r\n","Ruft den Wert des ":"获取值\r\n",", определяющий интерфейс по умолчанию, предоставляемый для COM.":"定义为 COM 提供的默认接口的 。\r\n","Включает и отключает возникновение исключений для неотображаемых символов Юникода, преобразующихся в знаки вопроса (\"?\") ANSI.":"Включает и отключает возникновение исключений для неотображаемых символов Юникода, преобразующихсна вреобразующихсна вз?\"\r\n","-Objekts angibt, wie in der folgenden Tabelle veranschaulicht.NummerBeschreibung-1Der Wert dieses Objekts ist negativ.0Der Wert dieses Objekts ist null (0).1Der Wert dieses Objekts ist positiv.":"对象，如下表所示。编号说明-1此对象的值为负数。0此对象的值为零 (0)。1此对象的值为正数。\r\n",", und weder beginnt ein gültiger Fragmentbezeichner mit einem Nummernzeichen (#), noch eine gültige Abfragezeichenfolge mit einem Fragezeichen (?). ":"，并且有效的片段标识符不以井号 (#) 开头，有效的查询字符串也不以问号 (?) 开头。\r\n","Stellt eine Sicherheitsbeschreibung dar.Zu einer Sicherheitsbeschreibung gehören ein Besitzer, eine primäre Gruppe, eine besitzerverwaltete Zugriffssteuerungsliste (Discretionary Access Control List, DACL) und eine System-Zugriffssteuerungsliste (System Access Control List, SACL).":"Represents a security descriptor. 安全描述符包括所有者、主要组、所有者管理的自由访问控制列表 (DACL) 和系统访问控制列表 (SACL)。\r\n","Список помещается в оболочку в новой коллекции.":"该列表包装在一个新集合中。\r\n","-Objekt, das den Vertrauensnehmer identifiziert, dem das System den Zugriff gewährt.Der ACE enthält außerdem eine GUID und verschiedene Flags, die die Vererbung des ACE an untergeordnete Objekte steuern.":"标识系统授予访问权限的受托者的对象。ACE 还包含一个 GUID 和各种标志，用于控制 ACE 对子对象的继承。\r\n","Eine Miniaturansicht eines Objekts, die das Anzeigen des Objekts in einem Browser ermöglicht.Die Miniaturansicht ist eine Bitmap mit ungefähr 120 x 120 Pixel, 16 Farben (empfohlen) und geräteunabhängig, die wahrscheinlich von einer Metadatei umschlossen ist.":"允许在浏览器中查看对象的缩略图。缩略图是大约 120 x 120 像素、16 种颜色（推荐）和设备无关的位图，可能包含在图元文件中。\r\n","Wenn eine Zahl genau zwischen zwei Zahlen liegt, wird sie auf die nächste gerade Zahl gerundet.":"如果一个数字介于两个数字之间，则将其四舍五入到最接近的偶数。\r\n","관리되지 않는 메모리의 지정된 오프셋 위치에서 읽은 32비트 부호 있는 정수입니다.":"从指定偏移量处的非托管内存中读取的 32 位有符号整数。\r\n","Возвращает обратную величину комплексного числа.":"返回复数的倒数。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 8비트 부호 있는 정수로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为 8 位有符号整数。\r\n","Eine Gruppe von implementierten Komponentenschnittstellen.":"一组实现的组件接口。\r\n","Flags, die die Weitergabeeigenschaften der Vererbung für den neuen ACE angeben.":"指定新 ACE 的继承传播属性的标志。\r\n","Der Wert, der in eine 16-Bit-Ganzzahl mit Vorzeichen konvertiert werden soll.":"要转换为 16 位有符号整数的值。\r\n","Предоставляет изменяемую строку символов.Этот класс не наследуется.Чтобы просмотреть исходный код .NET Framework для этого типа, см. ссылки на источник.":"提供可变字符串。此类不被继承。要查看此类型的 .NET Framework 源代码，请参阅源链接。\r\n","Возвращает 64-битовое целое число без знака, преобразованное из восьми байтов с указанной позицией в массив байтов.":"返回从指定位置的八个字节转换为字节数组的 64 位无符号整数。\r\n",", d. h. die Zahl, die übrig bleibt, wenn alle Dezimalstellen verworfen wurden, oder einer der Werte in der folgenden Tabelle. ":"， IE。 H。舍去所有小数后剩下的数，或者下表中的值之一。\r\n","에 주 버전 번호와 부 버전 번호가 포함되어 있지 않습니다.또는":"不包含主要和次要版本号；或\r\n","-Wert von einem anderen ":"-来自他人的价值\r\n","Равняется ":"等于\r\n","Der zu inkrementierende Wert.":"要增加的值。\r\n"," 개체의 프로필 이름입니다.":" 对象的配置文件名称。\r\n","Объект поддерживает IConnectionPointWithDefault, и для него задано поведение по умолчанию.":"该对象支持 IConnectionPointWithDefault 并设置为默认行为。\r\n"," definierten ungültigen Zeichen.- oder -  ":" 定义的无效字符。- 或-\r\n","Замещает все вхождения указанной строки в подстроке данного экземпляра на другую указанную строку.":"用另一个指定的字符串替换此实例的子字符串中所有出现的指定字符串。\r\n","임의의 폴더 이름 또는 파일 이름을 반환합니다.":"返回一个随机文件夹名或文件名。\r\n","비교할 두 개의 64비트 부호 있는 정수 중 두 번째 숫자입니다. ":"要比较的两个 64 位有符号整数中的第二个。\r\n","이 메서드는 반환될 때 지정한 변수를 설명하는 VARDESC 구조체에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含对描述指定变量的 VARDESC 结构的引用。此参数未初始化传递。\r\n","Определяет неявное преобразование 64-битного целого числа без знака в комплексное число.":"定义从 64 位无符号整数到复数的隐式转换。\r\n","При возвращении данного метода содержит ссылку на дескриптор для реализованного интерфейса.Этот параметр передается без инициализации.":"当此方法返回时，包含对已实现接口句柄的引用。此参数无需初始化即可传递。\r\n","-Schnittstelle verwenden können.":"界面可以使用。\r\n","이 메서드가 반환될 때 지정된 항목의 이름을 나타내는 문자열을 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含一个表示指定项目名称的字符串。此参数未初始化传递。\r\n","Массив WaitHandle, содержащий объекты, ожидаемые текущим экземпляром.Этот массив не может содержать несколько ссылок на один и тот же объект.":"包含当前实例正在等待的对象的 WaitHandle 数组。此数组不能包含对同一对象的多个引用。\r\n","Число элементов в фиксированном буфере.":"固定缓冲区中的元素数。\r\n","Gibt einen Wert zurück, der das Vorzeichen einer 8-Bit-Ganzzahl mit Vorzeichen angibt.":"返回一个值，该值指示 8 位有符号整数的符号。\r\n","Stellt eine Zahl bereit, die den Zeitpunkt angibt, an dem das vom aktuellen Moniker angegebene Objekt zuletzt geändert wurde.":"提供一个数字，指示上次修改当前名字对象指定的对象的时间。\r\n","Часть представления, которое изменилось.В настоящий момент действительно только значение -1.":"视图中发生变化的部分。目前只有-1 有效。\r\n","쿼리 문자열 또는 단편 식별자입니다. ":"查询字符串或片段标识符。\r\n","Gibt den größeren der beiden ":"给出两者中较大的\r\n","-Objekt, mit denen eine .NET Framework-Version identifiziert wird.":"用于标识 .NET Framework 版本的对象。\r\n","Die Basisadresse (":"基址（\r\n","값을 나눌 복소수입니다.":"将值分成的复数。\r\n","Die Fehlermeldung, in der die Ursache für die Ausnahme angegeben wird. ":"指示异常原因的错误消息。\r\n","Die zu vergleichende komplexe Zahl.":"要比较的复数。\r\n",".Универсальный код ресурса, построенный с помощью свойств класса ":".使用类属性构建的统一资源标识符\r\n","IDispatch::Invoke를 사용하여 함수를 호출하는 방법을 지정합니다.":"指定如何使用 IDispatch::Invoke 调用函数。\r\n","이 변수가 존재하고 있고 바인딩할 수 있지만 사용자의 브라우저에 표시되어서는 안 됩니다.":"这个变量存在并且可以绑定到它，但它不应该在用户的浏览器中可见。\r\n","Especifica los 32 bits superiores de FILETIME.":"指定FILETIME的前32位。\r\n","에 사용할 수 있는 서식을 지정하는 열거형 값의 비트 조합입니다.":"枚举值的按位组合，指定可供使用的格式。\r\n","Версия файла. ":"文件版本。\r\n"," в случае, когда использование автоматического идентификатора GUID нежелательно.":" 当不需要使用自动 GUID 时。\r\n",", den diese Methode zurückgibt.":"这个方法返回。\r\n"," [i] является значением MEMBERID, выполняющим индексацию в описании типа, заданном параметром ":" [i] 是一个 MEMBERID 值，索引到参数指定的类型声明中\r\n","Der zu dividierende Wert.":"要划分的值。\r\n","해제할 관리되지 않는 문자열의 주소입니다.":"要释放的非托管字符串的地址。\r\n","Возвращает номер версии сборки с соответствующими атрибутами.":"返回具有适当属性的程序集的版本号。\r\n","Управляемый объект, содержащий данные для маршалинга.Объект должен представлять собой структуру или экземпляр форматированного класса.":"包含要封送处理的数据的托管对象。该对象必须是结构或格式化类的实例。\r\n"," 매개 변수의 값입니다.":" 参数的值。\r\n","Этот член совместного класса вызывается, а не реализуется.":"共享类的这个成员被调用，而不是被实现。\r\n","Kopiert Daten aus einem eindimensionalen, verwalteten Array von Gleitkommazahlen mit einfacher Genauigkeit in einen nicht verwalteten Speicherzeiger.":"将数据从单精度浮点数的一维托管数组复制到非托管内存指针。\r\n","Gibt einen benutzerdefinierten Typ an.":"指定用户定义的类型。\r\n","Ein Gleitkommawert mit doppelter Genauigkeit.":"Ein Gleitkommawert mit doppelter Genauigkeit。\r\n","Die zweite Typäquivalenzzeichenfolge.":"第二类等价字符串。\r\n","Описание ошибки. ":"错误的描述。\r\n","등록 취소할 키입니다. ":"注销的关键。\r\n","Gibt einen unsigned-Ganzzahlwert an.":"指定无符号整数值。\r\n","Eine 64-Bit-Ganzzahl mit Vorzeichen, die ":"一个 64 位有符号整数\r\n","복소수의 허수 부분입니다.":"复数的虚部。\r\n","Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентный символ Юникода.":"将指定的 64 位无符号整数的值转换为其等效的 Unicode 字符。\r\n",".Wenn Sie einen Zeiger übergeben, wird er als Größe behandelt.":".如果你传递一个指针，它被视为一个大小。\r\n","Die exklusive obere Grenze der Zufallszahl, die generiert werden soll.":"要生成的随机数的唯一上限。\r\n","Уведомляет все зарегистрированные в данный момент приемники уведомлений объектов данных, что объект изменился.":"通知所有当前注册的数据对象通知接收器该对象已更改。\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in ein entsprechendes Datum und eine entsprechende Uhrzeit.":"使用指定的区域性特定格式设置信息将数字的指定字符串表示形式转换为等效的日期和时间。\r\n","값 형식을 읽어올 위치입니다.정렬 문제를 고려해야 할 수 있습니다.":"读取值类型的位置。可能需要考虑对齐问题。\r\n","개체를 컨테이너 내에 포함 개체로 표시하는 데 사용할 수 있는 개체 표현입니다.일반적으로 복합 문서 개체에 대해 이 값을 지정합니다.이 표시 방식은 화면 또는 프린터에 대해 제공될 수 있습니다.":"一种对象表示，可用于将对象显示为容器中的嵌入对象。通常，您为复合文档对象指定此值。可以为屏幕或打印机提供此显示。\r\n","Наименьшее целочисленное значение, которое больше или равно ":"大于或等于的最小整数值\r\n","형식 정보가 필요한 클래스에 대한 CLSID의 인터페이스 IID를 나타내는 ":"指示需要类型信息的类的 CLSID 的接口 IID。\r\n","부호 없는 64비트 정수를 ":"64 位无符号整数\r\n"," weist ein automatisch angelegtes Layout auf.Verwenden Sie stattdessen sequenzielles oder explizites Layout.":" 具有自动生成的布局。请改用顺序布局或显式布局。\r\n","Упаковывает тип значения.":"打包值类型。\r\n","Ruft die Länge der binären Darstellung des aktuellen ":"获取当前的二进制表示的长度\r\n","Число, на которое делится значение ":"可整除该值的数\r\n"," указанного типа.Этот дескриптор ":" 指定类型的。这个句柄\r\n","Для этого события не предусмотрен открытый метод доступа remove.":"此事件没有公共删除访问器。\r\n","는 오류를 포함하는 첫 번째 인수만 나타냅니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"仅指示包含错误的第一个参数。此参数未初始化传递。\r\n","Значение true, если дескриптор выделен; в противном случае — значение false.":"如果句柄已分配，则为真；否则，假的。\r\n","[Поддерживается только в .NET Framework 4.5.1 и более поздних версиях] Возвращает указатель на интерфейс IUnknown, представляющий указанный интерфейс объекта указанного типа.Доступ к настраиваемому интерфейсу запросов включен по умолчанию.":"[仅在 .NET Framework 4.5.1 及更高版本中支持] 返回指向 IUnknown 接口的指针，该接口表示指定类型对象的指定接口。默认启用自定义查询接口访问。\r\n","32-разрядное знаковое целое число, которое эквивалентно значению параметра ":"与参数值等价的 32 位有符号整数\r\n","Gibt beim Zeichnen oder Abrufen von Daten den gewünschten Aspekt für die Daten oder die Ansicht des Objekts an.":"指定绘制或检索数据时对象的数据或视图所需的方面。\r\n","부호 있는 숫자입니다. ":"一个签名的号码。\r\n"," со значением false, которое не имеет смысла в версии 2.0.":" 值为 false，在 2.0 版本中没有任何意义。\r\n","Длина развернутой строки превысит ":"展开后的字符串长度会超过\r\n","Возвращает тангенс указанного угла.":"返回指定角度的正切值。\r\n","Возвращает имя объекта ":"返回对象的名称\r\n","Der natürliche Logarithmus (Basis e) von ":"的自然对数（以 e 为底）\r\n"," или типом, поддерживающим неявное преобразование в объект ":" 或支持隐式转换为对象的类型\r\n","true, wenn diese Methode den angegebenen Zugriff erfolgreich entfernt hat, andernfalls false.":"如果此方法成功删除了指定的访问权限，则为 true，否则为 false。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为等效的单精度浮点数。\r\n","Строка пути, из которой нужно получить имя файла и расширение. ":"从中获取文件名和扩展名的路径字符串。\r\n","Die Variable wird in einem Objektkatalog, jedoch nicht in einem Eigenschaftenbrowser angezeigt.":"变量显示在对象目录中，但不显示在属性浏览器中。\r\n","32-разрядное целое значение без знака.":"32-разрядноецелоезначениебеззнака。\r\n","64-разрядное знаковое целое число для сравнения.":"要比较的 64 位有符号整数。\r\n","Compara esta instancia con un entero de 64 bits con signo y devuelve un entero que indica si el valor de esta instancia es menor, igual o mayor que el valor del entero de 64 bits con signo.":"比较 esta instantia con un entero de 64 bits con signo y devuelve un entero que indica si el valor de esta instantia es menor, igual o mayor que el valor del entero de 64 bits con signo。\r\n","Ein Winkel θ im Bogenmaß im Bereich π/2 ≤θ≤π/2 - oder -  ":"范围为 π/2 ≤θ≤π/2 - 或 - 的角度 θ（以弧度表示）\r\n",", соответствующих основному и дополнительному номерам версий, номеру сборки и номеру редакции, в котором все значения разделены точкой (.).Параметр ":"，分别对应主次版本号、内部版本号、修订号，所有值之间用点（.）隔开。\r\n"," ist (wenn ":" 是（如果\r\n","Сообщение, в котором объясняется причина завершения процесса или содержится значение null, если объяснение отсутствует.":"解释进程终止原因的消息，如果没有解释则为 null。\r\n","Копируемое количество байтов исходной строки.":"要从源字符串复制的字节数。\r\n","Q) gleich 0 ist, wird bei positivem ":"Q) 等于0时，为正\r\n","-Parameter unterstützt die angeforderte ":"-参数支持请求\r\n","Проверяет наличие изменений в объекте с момента его последнего сохранения в текущем файле.":"检查对象自上次保存到当前文件后是否发生了变化。\r\n","Stellt eine Sicherheitsbeschreibung dar.Zu einer Sicherheitsbeschreibung gehören ein Besitzer, eine primäre Gruppe, eine DACL und eine SACL.":"表示安全描述符。安全描述符包括所有者、主要组、DACL和SACL。\r\n","IUnknown 포인터를 나타냅니다.":"表示 IUnknown 指针。\r\n","오류에 대한 자세한 정보를 포함하는 도움말 파일의 정규화된 드라이브, 경로 및 파일 이름을 포함합니다.":"包含帮助文件的完全限定驱动器、路径和文件名，其中包含有关错误的详细信息。\r\n","Значение переменной среды, заданное параметром ":"参数指定的环境变量的值\r\n","Ruft den Typ des sicherungsfähigen Objekts ab, das diesem ObjectSecurity’1-Objekt zugeordnet ist.":"获取与此 ObjectSecurity'1 对象关联的安全对象的类型。\r\n","При возвращении данного метода содержит моникер, который является общим префиксом текущего моникера и ":"当此方法返回时，包含一个名字对象，它是当前名字对象的公共前缀，并且\r\n",", ссылающийся на заданный объект.":"引用指定对象的 。\r\n","BIND_OPTS 구조체의 크기를 바이트 단위로 지정합니다.":"以字节为单位指定 BIND_OPTS 结构的大小。\r\n","에 대한 serialization의 소스 또는 대상을 포함하는 ":"包含序列化的源或目标\r\n"," 개체로 암시적 변환이 가능한 형식이고 해당 값이 현재 ":" 可以隐式转换为对象的类型，当前值为\r\n"," vom angegebenen Typ.Dieses ":" 指定类型的。这\r\n","Возвращает наибольшее целое число, которое меньше или равно заданному числу двойной точности с плавающей запятой.":"返回小于或等于指定双精度浮点数的最大整数。\r\n","-Wert ab, der beschreibt, welcher Schnittstellentyp für die Klasse generiert werden soll.":"描述为类生成什么类型​​的接口的值。\r\n","Convierte el entero de 64 bits con signo especificado en un número de punto flotante de precisión doble.":"Convierte el entero de 64 bits with signo especificado en un número de punto flotante de precisión doble。\r\n","Управляемый объект, содержащий данные, на которые указывает параметр ":"包含参数指向的数据的托管对象\r\n","Получает мнимую часть текущего объекта ":"获取当前对象的虚部\r\n",".NET Framework 버전을 식별하는 문자열입니다. ":"标识 .NET Framework 版本的字符串。\r\n","Stellt eine DACL (Discretionary Access Control List, freigegebene Zugriffssteuerungsliste) dar.":"表示自由访问控制列表 (DACL)。\r\n"," 멤버가 null이면 대상 프로세스에서 GlobalFree를 사용하여 메모리를 해제해야 합니다.":" 如果该成员为空，则目标进程必须使用 GlobalFree 来释放内存。\r\n","Удаляет все объекты из списка зарегистрированных объектов, нуждающихся в освобождении.":"从需要释放的已注册对象列表中删除所有对象。\r\n","Gibt an, ob dieses ":"表示这是否\r\n","Целевая операционная система для библиотеки типов — 64-разрядные системы Windows.":"类型库的目标操作系统是 64 位 Windows 系统。\r\n"," = + 무한대":" = + 无限\r\n","부호 없는 32비트 정수를 복소수로 변환하는 암시적 변환을 정의합니다.":"定义从无符号 32 位整数到复数的隐式转换。\r\n","Einer der Enumerationswerte, die angeben, ob eine IUnknown::QueryInterface-Anpassung übernommen werden soll, die von einer ":"枚举值之一，指定是否继承一个 IUnknown::QueryInterface 自定义项，该自定义项是从\r\n","관리되지 않는 메모리에 16비트 정수 값을 씁니다.":"将 16 位整数值写入非托管内存。\r\n","부호 있는 정수(Long) 값과 ":"有符号长整数值和\r\n","지정된 64비트 부호 있는 정수의 값을 해당하는 64비트 부호 없는 정수로 변환합니다.":"将指定的 64 位带符号整数的值转换为等效的 64 位无符号整数。\r\n","Initialisiert ein Objekt aus dem Stream, in dem es zuvor gespeichert wurde.":"从先前保存对象的流中初始化对象。\r\n","Ein verwaltetes Array. ":"Ein verwaltetes 数组。\r\n","Состояние ":"状态\r\n","Die Überwachungsbedingungen.":"监测条件。\r\n","-Wert gleich sind.":"- 值相同。\r\n","Ein Wert, der es Visual Basic ermöglicht, eine Zeichenfolge in nicht verwaltetem Code zu ändern und die Ergebnisse in verwaltetem Code wiederzugeben.Dieser Wert wird nur für Plattformaufrufe unterstützt.":"允许 Visual Basic 修改非托管代码中的字符串并在托管代码中呈现结果的值。此值仅支持平台调用。\r\n","관리되지 않는 메모리의 지정된 오프셋 위치에서 프로세서의 기본 크기로 지정된 정수를 읽습니다.":"从非托管内存中的指定偏移量读取处理器本机大小的整数。\r\n","Die Länge der opaken Rückrufdaten.":"不透明回调数据的长度。\r\n"," больше, чем длина данного экземпляра.":" 大于此实例的长度。\r\n"," 이벤트에 등록된 대리자에 대해서도 호출됩니다.생성 시 ":" 还要求注册该事件的代表。创建时\r\n","Eine GUID, die den Objekttyp bezeichnet, auf den der neue ACE angewendet wird.":"一个 GUID，用于标识新 ACE 应用到的对象类型。\r\n","Wird für jeden gemeldeten Statuswert ausgelöst.":"为每个报告的状态值触发。\r\n","-Werte, der den Typ der für eine Klasse generierten Schnittstelle beschreibt. ":"- 描述为类生成的接口类型的值。\r\n","-Klasse mit dem Typ, der als Quellschnittstelle verwendet werden soll.":"- 使用用作源接口的类型进行分类。\r\n","Ruft die benutzerdefinierten Daten ab.":"获取自定义数据。\r\n","크기가 반환되는 개체입니다. ":"返回其大小的对象。\r\n","Für diesen Port kann kein geringerer Wert als -1 und keine höherer Wert als 65.535 festgelegt werden. ":"此端口不能设置为小于 -1 或大于 65,535 的值。\r\n"," или меньше значения ":" 或更少的价值\r\n","매개 변수에 정의된 기본 동작이 있습니다.":"参数中定义了默认行为。\r\n","현재 모니커의 왼쪽에 있는 모니커에 대한 참조입니다. ":"对当前名字对象左侧名字对象的引用。\r\n"," 메서드를 통해 제한한 바이트의 범위에 대한 액세스 제한을 제거합니다.":" 删除对受方法限制的字节范围的访问限制。\r\n","이벤트 인터페이스의 메서드를 구현하는 클래스를 포함하는 ":"包含实现事件接口的方法的类 \r\n","Gibt an, dass ein VARDESC zurückgegeben wurde.":"表示返回了 VARDESC。\r\n",", выполняющий сравнение строк с учетом регистра, используя правила сравнения строк по словам для текущего языка и региональных параметров.":"一个使用当前区域性的单词字符串比较规则执行区分大小写的字符串比较的 。\r\n"," 인수에 의해 결정된 ":" 由论证决定\r\n","부호 없는 16비트 정수로 변환할 값입니다.":"要转换为无符号 16 位整数的值。\r\n","Этот параметр является локальным идентификатором клиентского приложения.":"此设置是客户端应用程序的本地 ID。\r\n","연결점과 호출자의 싱크 개체 사이에 권장되는 연결을 설치합니다.":"在连接点和调用者的接收器对象之间建立推荐连接。\r\n"," для маршалинга в качестве типа VT_BSTR.":" для маршалинга в качестве типа VT_BSTR。\r\n","Указывает, что числовая строка может включать десятичный разделитель.Если значение ":"指定数字字符串可以包含小数点分隔符。如果值\r\n","앞에 마침표가 있거나 없는 새 확장명입니다.":"有或没有前置期的新扩展。\r\n","Gibt das spezielle Zwischenablageformat an.":"指定特殊的剪贴板格式。\r\n","Stellt die Flags dar, die beim Öffnen der Datei verwendet werden sollen, die das vom Moniker angegebene Objekt enthält.":"表示打开包含由名字对象指定的对象的文件时要使用的标志。\r\n","Отключает параллельную сборку мусора и подбирает объекты, используя пакетный вызов.Это режим с наибольшим уровнем вмешательства.":"禁用并发垃圾收集并使用批处理调用来拾取对象。这是最具侵入性的模式。\r\n","Gibt die angegebene Dezimalzahl zurück. Es wird keine wirkliche Konvertierung durchgeführt.":"返回指定的十进制数。不执行真正的转换。\r\n","Konvertiert das erste Zeichen einer angegebenen Zeichenfolge unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in ein Unicode-Zeichen.":"使用指定的区域性特定格式设置信息将指定字符串的第一个字符转换为 Unicode 字符。\r\n","Konvertiert den Wert einer 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung in einer angegebenen Basis.":"将 8 位无符号整数的值转换为其在指定基数中的等效字符串表示形式。\r\n","Определяет, что во время выполнения сборка может быть перенацелена на сборку от другого издателя.Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.":"指定程序集可以在运行时重定向到来自不同发布者的程序集。此值支持 .NET Framework 基础结构，不应直接在您的代码中使用。\r\n","데이터를 여러 페이지로 분할해야 할 때의 모양을 지정합니다. ":"指定数据应拆分为多页时的形状。\r\n","이 메서드는 반환될 때 ROT(실행 개체 테이블)에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含对运行对象表 (ROT) 的引用。此参数未初始化地传递。\r\n","Ein Verweis auf den Zielstream. ":"对目标流的引用。\r\n"," ist kein gültiger VARIANT-Typ. ":" 不是有效的 VARIANT 类型。\r\n","Значение даты и времени для преобразования. ":"要转换的日期和时间值。\r\n","Die exklusive obere Grenze der Zufallszahl, die zurückgegeben werden soll.":"要返回的随机数的唯一上限。\r\n","-Objekt zugeordnete DACL eine kanonische Reihenfolge aufweist, andernfalls false.":"- 对象关联的 DACL 具有规范顺序，否则为 false。\r\n","Преобразует заданное строковое представление числа в эквивалентное 64-битовое целое число без знака.":"将数字的指定字符串表示形式转换为其等效的 64 位无符号整数。\r\n","Flags, die die Weitergabeeigenschaften der Vererbung für den ACE angeben, die entfernt werden sollen.":"指定要删除的 ACE 的继承传播属性的标志。\r\n",", который является доступной только для чтения оболочкой для указанного списка.":"一个 ，它是指定列表的只读包装器。\r\n","Возвращает имя свойства, используемого для доступа к полю с атрибутами.":"返回用于访问属性字段的属性的名称。\r\n","Der Typ der Zugriffssteuerung (gewähren oder verweigern), der hinzugefügt werden soll.":"要添加的访问控制类型（授予或拒绝）。\r\n"," меньше другого значения типа ":" 小于另一种类型的值\r\n","Сохраняет 8-байтовую константу типа ":"存储一个 8 字节的类型常量\r\n","IDispatch 포인터를 나타냅니다.":"表示一个 IDispatch 指针。\r\n","Eine Zahl, die größer als ":"一个大于\r\n","감소시킬 값입니다.":"要减少的值。\r\n","-Klasse mit den angegebenen Werten.Es wird empfohlen, dass die Werte der ":"具有指定值的类。建议的值\r\n"," числа, содержащегося в параметре ":" 参数中包含的数字\r\n","Primer valor que se va a sumar.":"Primer valor que se va a sumar。\r\n","오류에 대한 설명입니다. ":"错误的描述。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in das entsprechende Unicode-Zeichen.":"将指定的 64 位无符号整数的值转换为等效的 Unicode 字符。\r\n","Die neue Erweiterung (mit oder ohne führenden Punkt).Geben Sie null an, um eine vorhandene Erweiterung aus ":"新扩展名（带或不带前导点）。指定 null 以输出现有扩展名\r\n","Возвращает большее из двух чисел двойной точности с плавающей запятой.":"返回两个双精度浮点数中较大的一个。\r\n","Devuelve un número de punto flotante de precisión sencilla convertido a partir de cuatro bytes en la posición especificada de una matriz de bytes.":"Devuelve un número de punto flotante de precisión sencilla convertido a partir de cuatro bytes en la posición especificada de una matriz de bytes。\r\n","지정된 체계, 호스트, 포트 번호 및 경로를 사용하여 ":"使用指定的方案、主机、端口号和路径。\r\n","Ruft den benutzerdefinierten Namen für einen Wörterbuchwertnamen ab oder legt ihn fest.":"Ruft den beutzerdefinierten Namen für einen Wörterbuchwertnamen ab oder legt ihn fest。\r\n","При возвращении данного метода содержит ссылку на массив, в который помещены сопоставления имен.Этот параметр передается без инициализации.":"当此方法返回时，包含对包含名称映射的数组的引用。此参数无需初始化即可传递。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in das entsprechende Unicode-Zeichen.":"将指定的 32 位带符号整数的值转换为等效的 Unicode 字符。\r\n","Der Schlüssel, dessen Registrierung aufgehoben werden soll. ":"注销的关键。\r\n",", используя указанные сообщение об ошибке и исходное исключение.":", используя указанные сообщение об ошибке и исходное исключение。\r\n",", например \"C:\\MyFile.txt\".":"，例如“C:\\MyFile.txt”。\r\n","지정된 8비트 부호 있는 정수의 값을 해당하는 유니코드 문자로 변환합니다.":"将指定的 8 位带符号整数的值转换为等效的 Unicode 字符。\r\n","Ruft den Typ des Objekts ab, dem die Überwachungsregeln dieses ObjectSecurity’1-Objekts zugeordnet sind.":"获取与此 ObjectSecurity'1 对象的审核规则关联的对象类型。\r\n","Метод не может выделить в куче достаточное количество динамической памяти, присущей данному объекту.":"该方法无法在此对象固有的堆上分配足够的动态内存。\r\n","Das Bytearray, in das der Inhalt von ":"字节数组，其中的内容\r\n","Значение true, если значение данного объекта равно значению текущего; в противном случае — значение false.":"如果此对象的值等于当前对象的值，则为真；否则，假的。\r\n","결과를 저장할 위치에 대한 참조입니다.":"对存储结果的位置的引用。\r\n","Возвращает объект, содержащийся в этой обертке.":"返回包含在此包装器中的对象。\r\n","-Parameters ab, der an den ":"- 参数发送到\r\n","Значение, задающее правило округления параметра ":"指定参数舍入规则的值\r\n","Делегат, передаваемый в неуправляемый код. ":"传递给非托管代码的委托。\r\n","Die Eigenschaft wird in einem Objektkatalog, nicht jedoch in einem Eigenschaftenbrowser angezeigt.":"该属性显示在对象浏览器中，但不显示在属性浏览器中。\r\n","Eine Zeichenfolge, die die zu konvertierende Zahl enthält.":"包含要转换的数字的字符串。\r\n","Kapselt alle derzeit von Microsoft Corporation definierten ACE-Typen (Access Control Entry, Zugriffssteuerungseinträge).Alle ":"封装当前由 Microsoft Corporation.All 定义的所有访问控制条目 (ACE) 类型\r\n","Получает значение, показывающее, является ли дескриптор закрытым.":"Получает значение, показывающее, является ли десриптор закрытым.\r\n","Преобразует заданную строку, представляющую двоичные данные в виде цифр в кодировке Base64, в эквивалентный массив 8-разрядных целых чисел без знака.":"将表示二进制数据的指定字符串转换为 Base64 编码数字的等效无符号 8 位整数数组。\r\n","В платформе .NET Framework версии 2.0 всегда генерируются сведения о JIT-отслеживании, и этот флаг дает тот же эффект, что и ":"在 .NET Framework 2.0 版本中，始终生成 JIT 跟踪信息，此标志与\r\n","Размер указанного типа в неуправляемом коде.":"非托管代码中指定类型的大小。\r\n","Die Größe, in Bytes, des Typs, der durch den ":"指定的类型的大小（以字节为单位）\r\n","Тип возвращаемого делегата.":"返回的委托的类型。\r\n","Die Anzahl von Elementen des Werttyps, für die Speicher belegt werden soll.":"要为其分配内存的值类型的元素数。\r\n","Число байтов в буфере памяти.":"内存缓冲区中的字节数。\r\n","true, wenn die angegebenen Objekte gleich sind, andernfalls false. ":"如果指定的对象相等，则为 true，否则为 false。\r\n"," 범위를 벗어나는 경우":" 超出范围\r\n","Legt die angegebenen Abschnitte der Sicherheitsbeschreibung für dieses ":"为此设置安全描述符的指定部分\r\n","Указывает причину возникновения исключения. ":"指定异常的原因。\r\n","Определяет методы для поддержки операций сравнения объектов в отношении равенства.":"定义方法以支持关于相等性的对象比较操作。\r\n","Значение true, если текущий набор равен объекту ":"如果当前集合等于对象，则为真\r\n","Der Name der Methode, die einen ":"方法的名称\r\n","보다 작거나 같은 숫자입니다. ":"小于或等于的数字。\r\n"," с помощью строки и объекта ":" 带字符串和对象\r\n"," freigegeben werden.":" 被发布。\r\n","Предоставляет дополнительный символ, задаваемый платформой, для разделения уровней каталогов в строке пути, в которой отражена иерархическая организация файловой системы.":"提供一个可选的平台指定字符来分隔路径字符串中的目录级别，该路径字符串反映了文件系统的层次结构。\r\n","Die hinzuzufügende Regel":"要添加的规则\r\n","Der Pfad, von dem Informationen über das Stammverzeichnis abgerufen werden sollen. ":"从中获取有关根目录信息的路径。\r\n","Строковое представление числа.":"数字的字符串表示形式。\r\n","Преобразует значение заданного десятичного числа в эквивалентное 64-битовое целое число со знаком.":"将指定的十进制数的值转换为其等效的 64 位带符号整数。\r\n","Указатель, получающий тип VARIANT, соответствующий параметру ":"采用与参数对应的 VARIANT 类型的指针\r\n","[Поддерживается только в .NET Framework 4.5.1 и более поздних версиях] Выполняет маршалирование данных из неуправляемого блока памяти в управляемый объекта указанного типа. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 将数据从非托管内存块封送到指定类型的托管对象。\r\n","Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine Gleitkommazahl mit einfacher Genauigkeit.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为单精度浮点数。\r\n","비교할 모니커에 대한 참조입니다. ":"对要比较的名字的引用。\r\n","배정밀도 부동 소수점 숫자를 복소수로 변환하는 암시적 변환을 정의합니다.":"定义从双精度浮点数到复数的隐式转换。\r\n","При возвращении данного метода содержит контекст локализации справки.Если вызывающему объекту не требуется контекст справки, ":"当此方法返回时，包含帮助本地化上下文。如果调用者不需要帮助上下文，\r\n","Definiert eine implizite Konvertierung einer 16-Bit-Ganzzahl mit Vorzeichen in eine komplexe Zahl.":"定义 16 位带符号整数到复数的隐式转换。\r\n","Valor de entero.":"英勇无畏。\r\n","클립보드 형식을 나타냅니다.":"指示剪贴板格式。\r\n","Элемент сведений о типе является элементом по умолчанию для отображения в пользовательском интерфейсе.":"类型信息元素是显示在用户界面中的默认元素。\r\n","Указатель интерфейса COM.Идентификатор ":"COM接口指针.标识符\r\n","Obtiene o establece el nombre personalizado para un nombre de clave del diccionario.":"Obtiene o establece el nombre personalizado para un nombre de clave del diccionario。\r\n","> 1-бесконечность":"> 1-无穷大\r\n","。)":"。)\r\n","에 열거된 실제 참조 수에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"包含对中枚举的实际引用数的引用。此参数未初始化传递。\r\n","Освобождает дескриптор ":"释放手柄\r\n","IUnknown 인터페이스가 요청되는 개체입니다.":"为其请求 IUnknown 接口的对象。\r\n","Представляет количество 100-наносекундных интервалов с 1 января 1601 г.Эта структура является 64-разрядным значением.":"表示自 1601 年 1 月 1 日以来的 100 纳秒间隔数。此结构是一个 64 位值。\r\n","Stellt die verwaltete Definition der ITypeInfo-Automatisierungsschnittstelle für Komponenten bereit.":"提供 ITypeInfo 组件自动化接口的托管定义。\r\n","Die Pfadzeichenfolge, aus der die Erweiterung abgerufen werden soll. ":"从中获取扩展名的路径字符串。\r\n","Возвращает или задает значение, указывающее модулю сериализации, что чтение и десериализация производятся при наличии элемента.":"获取或设置一个值，该值指示序列化引擎在元素存在时应读取和反序列化。\r\n","저장 미디어가 확장 메타파일입니다.":"存储介质是增强型图元文件。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 64 位带符号整数的值转换为等效的 8 位无符号整数。\r\n","거듭제곱할 배정밀도 부동 소수점 숫자입니다. ":"要提升到的双精度浮点数。\r\n","Eine Zahl, die einen Tangens darstellt. ":"表示切线的数字。\r\n","Diese Methode versucht, geerbte Regeln aus einer nicht kanonischen freigegebenen Zugriffssteuerungsliste (DACL – Discretionary Access Control List) zu entfernen.":"此方法尝试从非规范的自主访问控制列表 (DACL) 中删除继承的规则。\r\n","이 구조체가 설명하는 개체의 이름이 들어 있으며 null로 끝나는 문자열에 대한 포인터를 나타냅니다.":"表示指向包含此结构描述的对象的名称的以 null 结尾的字符串的指针。\r\n","관리되지 않는 메모리에서 값을 쓸 기본 주소입니다.":"在非托管内存中写入值的基地址。\r\n","Задает пространство имен среды CLR и пространство имен XML для контракта данных. ":"Задает пространство имен среды CLR и пространство имен XML для контракта данных。\r\n"," 인터페이스에 대한 포인터를 나타냅니다.":" 表示指向接口的指针。\r\n","IUnknown::QueryInterface 메서드 호출은 ":"Iunknown::QueryInterface方法调用为 \r\n"," ist kleiner als Null. 0 ":" 小于零。 0\r\n","Gibt an, wie Einträge für die Zugriffssteuerung (ACEs) an untergeordnete Objekte weitergegeben werden.":"指定如何将访问控制条目 (ACE) 传播到子对象。\r\n","에 해당하는 날짜와 시간입니다.":"相应的日期和时间。\r\n","Возвращает имя из атрибута.":"从属性返回名称。\r\n","COM 개체에서 발생된 이벤트의 호출 목록에서 대리자를 제거합니다.":"从COM对象上发生的事件的调用列表中删除委托。\r\n","Возвращает или задает символ на указанной позиции в данном экземпляре.":"获取或设置本实例中指定位置的字符。\r\n","Функция доступна по статическому (static) адресу и принимает неявный указатель this.":"该函数在静态地址处可用，并采用隐式 this 指针。\r\n","복소수의 위상을 가져옵니다.":"获取复数的相位。\r\n","가장 가까운 64비트 부호 없는 정수로 반올림된 ":"四舍五入到最接近的 64 位无符号整数\r\n",", используемых при сериализации или десериализации данных.":"在序列化或反序列化数据时使用。\r\n","Тип значения или форматированный ссылочный тип, указывающий управляемый класс.К классу должен применяться ":"指定托管类的值类型或格式化引用类型。该类必须应用于\r\n","Указывает, что числовая строка может включать начальный знак.Допустимые начальные знаки определяются свойствами ":"指定数字字符串可以包含前导字符。有效的前导字符由属性确定\r\n","이 형식 설명에 설명된 인터페이스에 대한 참조입니다. ":"对此类型描述中描述的接口的引用。\r\n","Получает побитовое сочетание значений перечисления, указывающих пути, по которым ищет функция LoadLibraryEx во время вызовов неуправляемого кода. ":"获取枚举值的按位组合，这些值指定 LoadLibraryEx 在平台调用期间查找的路径。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 8비트 부호 없는 정수 값을 해당하는 문자열 표현으로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定的 8 位无符号整数值转换为其等效的字符串表示形式。\r\n","Объект, представляемый дескриптором.":"句柄代表的对象。\r\n","Значение, задающее элемент интерфейса. ":"指定界面元素的值。\r\n","Возвращает знак Юникода, преобразованный из двух байтов с указанной позицией в массив байтов.":"返回从指定位置的两个字节转换为字节数组的 Unicode 字符。\r\n","Gibt den Absolutbetrag einer ":"返回 a 的绝对值\r\n","El orden numérico de serialización o deserialización.":"El orden numerico 反序列化或反序列化。\r\n","명명된 인수의 디스패치 ID를 나타냅니다.":"指示命名参数的调度 ID。\r\n","지정된 복소수의 하이퍼볼릭 탄젠트를 반환합니다.":"返回指定复数的双曲正切值。\r\n","에서 반환할 요소 수입니다. ":"要从 返回的元素数。\r\n"," не имеет доступного конструктора по умолчанию. ":" 没有可用的默认构造函数。\r\n","지정된 각도의 코사인을 반환합니다.":"返回指定角度的余弦值。\r\n","해제할 BSTR의 주소입니다. ":"要释放的 BSTR 的地址。\r\n"," 값을 바이트 배열로 변환합니다.":" 将值转换为字节数组。\r\n","-Komponenten des ":"-组件\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende Dezimalzahl.":"将指定的 16 位无符号整数的值转换为等效的十进制数。\r\n","가 값이 null인 개체인 경우 문자열 표시가 ":"如果是一个值为空的对象，则字符串表示为\r\n","가 길이가 0인 문자열이거나 공백만 포함하거나 ":"是零长度字符串，仅包含空格，或者\r\n","Schließen Sie jeden Pfad ein, der explizit im prozessweiten Suchpfad hinzugefügt wurde, indem die Win32-Funktion AddDllDirectory übergeben wurde. ":"通过传递 Win32 AddDllDirectory 函数，包括在进程范围的搜索路径中显式添加的任何路径。\r\n",", представляющее число без знака в системе счисления, основание которой отлично от 10, предваряется знаком минус. ":", 表示数字系统中的无符号数，其基数不是 10，前面有一个减号。\r\n","Ermöglicht Entwicklern das Bereitstellen einer benutzerdefinierten, verwalteten Implementierung der IUnknown::QueryInterface(REFIID riid, void **ppvObject)-Methode.":"允许开发人员提供 IUnknown::QueryInterface(REFIID riid, void **ppvObject) 方法的自定义托管实现。\r\n",", указывающее тип элемента, определенного с помощью memid.":"指示由 memid 标识的元素类型的 。\r\n","Тангенс ":"切线\r\n","등록된 모든 advise 싱크에 개체가 저장되었음을 알립니다.이 메서드는 서버에서 호출됩니다.":"通知所有已注册的建议接收器该对象已保存。在服务器上调用此方法。\r\n","Ruft die Variable mit der angegebenen Member-ID (oder den Namen der Eigenschaft bzw. Methode und deren Parameter) ab, die der angegebenen Funktions-ID entsprechen.":"获取具有与指定函数 ID 匹配的指定成员 ID（或属性或方法名称及其参数）的变量。\r\n","Definiert, wie eine Variable gemarshallt wird.":"定义变量的编组方式。\r\n","Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 8-битовое целое число со знаком.":"将指定的双精度浮点数的值转换为等效的 8 位带符号整数。\r\n","Ein Zeiger auf den neu reservierten Speicher.Dieser Speicher muss unter Verwendung der ":"指向新分配内存的指针。必须使用\r\n","반환할 함수 설명의 인덱스입니다. ":"要返回的函数描述的索引。\r\n","는 오류를 포함하는 첫 번째 인수만 나타냅니다.":"仅指示包含错误的第一个参数。\r\n","IDispatch::Invoke를 통해서만 변수에 액세스할 수 있습니다.":"只能通过 IDispatch::Invoke 访问变量。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 단정밀도 부동 소수점 숫자 값을 해당하는 문자열 표현으로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定的单精度浮点数的值转换为其等效的字符串表示形式。\r\n"," = не числоNaN(любое значение)":" = 不是数字 NaN（任意值）\r\n","Gibt an, dass die DACL durch einen Standardmechanismus abgerufen wurde.Wird nur von Ressourcen-Managern festgelegt.":"指示 DACL 是通过标准机制获得的。仅由资源管理器设置。\r\n","Объект, представляющий указанное исключение в текущей точке в коде. ":"表示代码中当前点的指定异常的对象。\r\n","Initialisiert eine neue Instanz der DispIdAttribute-Klasse mit der angegebenen DISPID.":"使用指定的 DISPID 初始化 DispIdAttribute 类的新实例。\r\n","Строка, содержащая имя ресурса версии файла.":"包含文件版本资源名称的字符串。\r\n","Освобождает структуру ":"发布结构\r\n","Определяет неявное преобразование байта со знаком в комплексное число.":"指定有符号字节到复数的隐式转换。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 해당하는 10진수로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为其等效的十进制值。\r\n","8-разрядное знаковое целое число, которое эквивалентно значению параметра ":"与参数值等价的 8 位有符号整数\r\n"," angibt, wie in der folgenden Tabelle veranschaulicht.Rückgabewert Bedeutung -1 ":" 如下表所示。返回值 含义 -1\r\n",", перехваченного ":", 拦截\r\n","Enthält nach dem Beenden dieser Methode den Lokalisierungskontext der Hilfe.Wenn der Aufrufer den Hilfekontext nicht benötigt, kann ":"包含退出此方法后帮助的本地化上下文。如果调用者不需要帮助上下文，则可以\r\n","Konvertiert eine Zeichenfolge in eine HTML-codierte Zeichenfolge.":"将字符串转换为 HTML 编码的字符串。\r\n","Языковой стандарт имен элементов и строк документации.":"元素名称和文档字符串的语言环境。\r\n","Liest ein einzelnes Byte an einem angegebenen Offset (oder Index) aus dem nicht verwalteten Speicher. ":"从非托管内存读取指定偏移量（或索引）处的单个字节。\r\n","Die 16-Bit-Ganzzahl mit Vorzeichen, die aus dem nicht verwalteten Speicher gelesen wurde.":"从非托管内存中读取的 16 位有符号整数。\r\n","Первый параметр — это указатель this, хранящийся в регистре ECX.Другие параметры помещаются в стек.Это соглашение о вызове используется для вызова методов в классах, экспортируемых из неуправляемой динамической библиотеки DLL.":"第一个参数是 this 指针，存储在 ECX 寄存器中。其他参数压入堆栈。此调用约定用于调用从非托管动态链接库 (DLL) 导出的类的方法。\r\n","-Struktur für diesen Stream ab.":"此流的结构。\r\n","32-разрядное целое число со знаком, являющееся значением по умолчанию. ":"作为默认值的 32 位有符号整数。\r\n","Задает тип возвращаемого значения для метода, не возвращающего значение.":"指定不返回值的方法的返回类型。\r\n","Die erforderliche Anzahl der Bytes im Speicher.":"内存中所需的字节数。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.":"将指定的 64 位无符号整数的值转换为等效的单精度浮点数。\r\n","현재 인스턴스가 측정한 총 타이머 틱 수를 나타내는 읽기 전용 정수(Long)입니다.":"一个只读长整数，表示当前实例测量的计时器滴答总数。\r\n"," folgende ":" 下列\r\n","동일한 바이트를 원래의 스트림으로 참조하는 자체 검색 포인터를 사용하여 새 스트림 개체를 만듭니다.":"创建一个新的流对象，它有自己的查找指针，引用与原始流相同的字节。\r\n","Получает объект типа для типа базового конечного автомата, который был создан компилятором для реализации метода конечного автомата.":"获取编译器为实现状态机方法而生成的基础状态机类型的类型对象。\r\n","Ruft die Anzahl der Millisekunden ab, die seit dem Systemstart verstrichen sind.":"获取自系统启动以来经过的毫秒数。\r\n","Die Position im Arbeitsspeicher, in die geschrieben werden soll.":"内存中要写入的位置。\r\n","При возвращении данного метода содержит ссылку на контекст справки, связанный с заданным элементом.Этот параметр передается без инициализации.":"当此方法返回时，包含对与指定元素关联的帮助上下文的引用。此参数无需初始化即可传递。\r\n","Предоставляет управляемый буфер памяти с возможностью чтения и записи.Попытки доступа к памяти за пределами управляемого буфера (выше и ниже границ его диапазона) приводят к исключениям.":"Provides a managed read/write memory buffer. 尝试访问托管缓冲区之外的内存（高于和低于其范围限制）会导致异常。\r\n","인스턴스에 있는 이 변수의 오프셋을 나타냅니다.":"表示该变量在实例中的偏移量。\r\n","Указывает, что анализируемая строка может оканчиваться знаками пробела.Допустимые знаки пробела имеют следующие значения в кодировке Юникод: U+0009, U+000A, U+000B, U+000C, U+000D и U+0020.Обратите внимание, что это подмножество символов, для которых метод ":"指定解析的字符串可以以空白字符结尾。有效的空白字符具有以下 Unicode 值：U+0009、U+000A、U+000B、U+000C、U+000D 和 U+0020。请注意，这是一个该方法所针对的字符子集\r\n",") в первом квадранте, 0 < θ < π/2.Для (":") 在第一象限中，0 < θ < π/2。对于 (\r\n","Ein Bytearray, das für Zufallszahlen vorgesehen ist. ":"用于随机数的字节数组。\r\n"," недопустимо.-или-Индекс элемента формат меньше 0 (нуля) либо больше или равен 3.":" 无效。-或-格式元素的索引小于 0（零）或大于或等于 3。\r\n","Тип значения, под который выделяется память.":"为其分配内存的值的类型。\r\n","지정된 유니코드 문자의 값을 해당하는 문자열 표현으로 변환합니다.":"将指定 Unicode 字符的值转换为其等效的字符串表示形式。\r\n"," в тип ":" 每种类型\r\n","스트림 개체에 대한 변경 사항이 커밋되는 방법을 제어하는 값입니다. ":"控制如何提交对流对象的更改的值。\r\n"," 호출과 일치하는 원본 호출에서 반환되는 핸들입니다. ":" 从与调用匹配的原始调用返回的句柄。\r\n","인터페이스를 나타내는 형식입니다.":"表示接口的类型。\r\n","Представляет структуру ":"代表一个结构\r\n"," ungültige nachfolgende Zeichen enthält.":" 包含无效的尾随字符。\r\n","Gibt an, wie Zeichenfolgenparameter an die Methode gemarshallt werden, und steuert die Namenszerlegung.":"指定如何将字符串参数编组到方法并控制名称改编。\r\n"," ist kein gültiges COM-Objekt.":" 不是有效的 COM 对象。\r\n","Ожидает получения сигнала какими-либо элементами заданного массива.":"等待给定数组的任何元素接收信号。\r\n","-Methode reserviert wurde.":"方法已保留。\r\n","Eine vorzeichenlose 64-Bit-Ganzzahl, die beginnend bei ":"一个 64 位无符号整数，起始于\r\n","Gibt den Wert der angegebenen vorzeichenlosen 32-Bit-Ganzzahl als Bytearray zurück.":"Gibt den Wert der angegebenen vorzeichenlosen 32-Bit-Ganzzahl als Bytearray zurück。\r\n"," одинаковые значения.":" 相同的值。\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的 64 位有符号整数。\r\n","지정된 배정밀도 부동 소수점 숫자를 실제 변환 작업 없이 반환합니다.":"返回指定的双精度浮点数而不进行任何实际转换。\r\n","Eine ganze Zahl, die einen Zeiger auf den für die Zeichenfolge belegten Speicherblock darstellt, oder 0, wenn ":"一个整数，表示指向为字符串分配的内存块的指针，如果是，则为 0\r\n","Führt mithilfe des angegebenen Handels eine dauerhafte Speicherung der Sicherheitsbeschreibung aus, die diesem ObjectSecurity`1-Objekt zugeordnet sind.":"使用指定句柄执行与此 ObjectSecurity`1 对象关联的安全描述符的持久存储。\r\n","Значение true, если значение объекта ":"如果对象的值为真\r\n","Eine 8-Byte-Ganzzahl mit Vorzeichen.":"一个 8 字节有符号整数。\r\n","Der voll gekennzeichnete Name der Quellschnittstelle des Ereignisses.":"事件源接口的完全限定名称。\r\n","Возвращает абсолютное значение 32-битового целого числа со знаком.":"返回 32 位有符号整数的绝对值。\r\n","지정한 함수에서 모든 사용자 지정 데이터를 가져옵니다.":"从指定函数获取任何自定义数据。\r\n","Определяет версию платформы .NET Framework, относительно которой скомпилирована определенная сборка.":"指定编译特定程序集所针对的 .NET Framework 版本。\r\n","Возвращает меньшее из двух 32-битовых целых чисел со знаком.":"返回两个 32 位有符号整数中较小的一个。\r\n","Die aus dem nicht verwaltetem Arbeitsspeicher gelesene Ganzzahl.Auf 32-Bit-Computern wird eine 32-Bit-Ganzzahl zurückgegeben und auf 64-Bit-Computern eine 64-Bit-Ganzzahl.":"从非托管内存读取的整数。在 32 位机器上返回 32 位整数，在 64 位机器上返回 64 位整数。\r\n","Вызывает исключение, которое представлено текущим объектом ":"抛出当前对象表示的异常\r\n","Definiert eine implizite Konvertierung einer 32-Bit-Ganzzahl ohne Vorzeichen in eine komplexe Zahl.":"定义 32 位无符号整数到复数的隐式转换。\r\n","Имя, используемое вместо имени ключа словаря по умолчанию.":"Имя, используемое вместо имени ключа словаря по умолчанию.\r\n","-Wert kleiner als eine 64-Bit-Ganzzahl mit Vorzeichen ist.":"值小于 64 位有符号整数。\r\n","[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt] Gibt die Größe eines nicht verwalteten Typs in Bytes zurück. ":"[仅在 .NET Framework 4.5.1 和更新版本中受支持] 返回非托管类型的大小（以字节为单位）。\r\n","Число с плавающей запятой двойной точности, которое эквивалентно значению ":"相当于一个值的双精度浮点数\r\n","Возвращает количество собранных дескрипторов.":"返回收集的句柄数。\r\n"," из другого значения ":" 另一种意义\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为等效的 32 位无符号整数。\r\n","Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 16-битовое целое число со знаком.":"将指定的单精度浮点数的值转换为等效的 16 位带符号整数。\r\n","Eine Zahl, die größer oder gleich ":"大于或等于的数字\r\n","지원되지 않는 ":"不支持\r\n",", и HRESULT, установленной в COR_E_FILENOTFOUND.":"，并将 HRESULT 设置为 COR_E_FILENOTFOUND。\r\n","Umschließt das angegebene COM-Objekt mit einem Objekt des angegebenen Typs.":"将指定的 COM 对象包装在指定类型的对象中。\r\n","-Objekt, das den Vertrauensnehmer identifiziert, dessen Zugriffe das System überwacht.Der ACE enthält außerdem eine GUID und verschiedene Flags, die die Vererbung des ACE an untergeordnete Objekte steuern.Dieser ACE-Typ enthält möglicherweise optionale Rückrufdaten.Bei den Rückrufdaten handelt es sich um ein spezifisches BLOB des Ressourcen-Managers, das nicht interpretiert wird.":"标识其访问系统监视的受托者的对象。ACE 还包含一个 GUID 和各种标志，这些标志控制 ACE 对子对象的继承。这种类型的 ACE 可能包含可选的回调数据。回调数据是资源管理器特定的 BLOB那不是解释。\r\n","Das Objekt, das von ":"Das Objekt, Das von\r\n","구문 분석할 나머지 표시 이름이 들어 있는 문자열에 대한 참조입니다. ":"对包含要解析的剩余显示名称的字符串的引用。\r\n","Die erste von zwei zu vergleichenden Dezimalzahlen. ":"要比较的两个十进制数中的第一个。\r\n","Die komplexe Zahl ":"复数\r\n","true, wenn das Handle erfolgreich freigegeben wurde, andernfalls im Fall eines schwerwiegenden Fehlers  false.In diesem Fall wird ein ReleaseHandleFailed-MDA-Assistent für verwaltetes Debuggen generiert.":"如果句柄已成功释放，则为 true，否则，如果出现致命错误，则为 false。在这种情况下，将为托管调试生成 ReleaseHandleFailed MDA 向导。\r\n",", метод возвращает null в параметре ":"，该方法在参数中返回null\r\n","Die SACL (System Access Control List).":"SACL（系统访问控制列表）。\r\n","Die Sicherheits-ID, für die Überwachungsregeln entfernt werden sollen.":"要删除审核规则的安全 ID。\r\n","Diese Methode gibt die Anzahl der Namen im ":"此方法返回名称中的名称数\r\n","-Objekt, das die Standardschnittstelle angibt, die für COM verfügbar gemacht werden soll.":"- 对象指定公开给 COM 的默认接口。\r\n",", описывающее тип интерфейса, который должен быть создать для класса.":"描述应为类创建的接口类型的 。\r\n","Возвращает имя файла, содержащего пару ключей, используемую для создания строгого имени для сборки с данным атрибутом.":"返回包含用于为具有给定属性的程序集生成强名称的密钥对的文件的名称。\r\n","두 복소수가 다른지 여부를 나타내는 값을 반환합니다.":"返回一个值，该值指示两个复数是否不相等。\r\n","이 필드는 예약되어 있으므로 null로 설정해야 합니다.":"该字段是保留字段，必须设置为空。\r\n",", das das Objekt vor der Garbage Collection schützt.Dieses ":"，它保护对象免受垃圾收集。这\r\n","Representa una clase contenedora para los recursos de identificador.":"Representa una class contenedora para los recursos de identificador.\r\n"," равно 0, то значение рассчитывается.":" 为 0，则计算该值。\r\n","모니커가 동일하면 S_OKHRESULT 값이고, 그렇지 않으면 S_FALSEHRESULT 값입니다.  ":"如果名字对象相同，则值为 S_OKHRESULT，否则值为 S_FALSEHRESULT。\r\n",", используемое для маршалинга данных.":"用于编组数据。\r\n","-Schnittstelle nicht.- oder - Die Konvertierung von ":"- 接口不。 - 或 - 的转换\r\n"," gibt einen Werttyp an.- oder - ":" 指定值类型。- 或 -\r\n","Указатель на неуправляемую функцию, который требуется преобразовать. ":"指向要转换的非托管函数的指针。\r\n","한 복소수에서 다른 복소수를 뺍니다.":"从一个复数中减去另一个复数。\r\n","Ruft einen Wert ab, der die Zahl -1 darstellt.":"获取表示数字 -1 的值。\r\n","Der vollqualifizierte Speicherort von ":"完全合格的位置\r\n",".Каждый член должен использовать атрибут ":".每个成员必须使用属性\r\n","Расширение указанного пути (включая точку \".\") или значение null или ":"指定路径的扩展名（包括点“.”）或 null，或\r\n","Возвращает целочисленное значение, представляющее сочетание флагов ":"返回表示标志组合的整数值\r\n","경로의 마지막 디렉터리 구분 문자(\\\\ 또는 /) 또는 볼륨 구분 기호 문자(:) 다음에 나오는 문자에 마침표(.)와 하나 이상의 문자가 포함되어 있으면 true이고, 그렇지 않으면 false입니다.":"如果路径中最后一个目录分隔符（\\\\ 或 /）或卷分隔符 (:) 后面的字符包含句点 (.) 和一个或多个字符，则为 true；否则为 false。\r\n","보다 크지만 ":"大于\r\n","Der Aspekt oder die Ansicht des Objekts.Enthält einen aus der ":"对象的方面或视图。包含以下之一\r\n","Ruft den Wert der Aufrufkonvention ab.":"获取调用约定的值。\r\n","형식 라이브러리의 로캘 ID를 나타냅니다.":"指示类型库的区域设置 ID。\r\n"," меньше нуля или больше текущей длины данного экземпляра. -или-Текущая длина этого объекта ":" 小于零或大于此实例的当前长度。 - 或 - 此对象的当前长度\r\n","Показывает, что для класса не создается интерфейс класса.Если интерфейсы не реализованы явно, класс может предоставить доступ только через позднее связывание при помощи интерфейса IDispatch.Это значение является рекомендованным для атрибута ":"表示不为该类生成类接口。如果没有显式实现接口，则该类只能使用 IDispatch 接口通过后期绑定提供访问。该值为推荐的属性值\r\n","El nombre del miembro de datos.El valor predeterminado es el nombre del destino al que se aplica el atributo.":"El nombre del miembro de datos.El valor predeterminado es el nombre del destino al que se aplica el atributo。\r\n"," как действительную часть и ноль как мнимую часть.":" 作为实部，零作为虚部。\r\n","가 0과 같습니다. 1 ":"等于 0。一\r\n"," 특성으로 표시된 경우또는":" 如果标记为属性或\r\n","해당 변수는 사용자에게 바인딩할 수 있는 것으로 표시됩니다.":"该变量被标记为可绑定到用户。\r\n","Gibt die angegebene 64-Bit-Ganzzahl ohne Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.":"返回指定的 64 位无符号整数。不执行真正的转换。\r\n","Zählt die optionalen Parameter.":"计算可选参数。\r\n","Преобразует значение указанного объекта в эквивалентное строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.":"使用指定的区域性特定格式设置信息将指定对象的值转换为其等效的字符串表示形式。\r\n","Отслеживает незавершенные дескрипторы и инициирует сбор мусора при достижении заданного порога.":"跟踪不完整的句柄并在达到指定阈值时启动垃圾收集。\r\n","Konvertiert den Wert der angegebenen Dezimalzahl in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.":"将指定十进制数的值转换为等效的 64 位带符号整数。\r\n","-Ausnahme verursacht.Wenn der ":"-Ausnahme verursacht.Wenn der\r\n","Die Methode gibt die vom Stream gelesenen Daten zurück.Dieser Parameter wird nicht initialisiert übergeben.":"该方法返回从流中读取的数据。此参数未初始化传递。\r\n"," unterstützt die angeforderte Schnittstelle nicht.":" 不支持请求的接口。\r\n","Добавляет копию указанной подстроки к данному экземпляру.":"将指定子字符串的副本添加到此实例。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 ":"使用指定的区域性特定格式设置信息返回指定对象的值。\r\n","Die Anzahl der zu kopierenden Arrayelemente.":"要复制的数组元素的数量。\r\n","-π2 ≤θ≤π/2 범위의 각도 θ(라디안)입니다.또는 ":"以弧度为单位的角度 θ 在 -π2 ≤θ≤π/2 范围内或\r\n","Das Layout von ":"的布局\r\n","Stellt eine Gruppe von Methoden und Eigenschaften bereit, mit denen die verstrichene Zeit exakt gemessen werden kann.Um den .NET Framework-Quellcode für diesen Typ zu durchsuchen, rufen Sie die Verweisquelle auf.":"提供一组可用于准确测量经过时间的方法和属性。要搜索此类型的 .NET Framework 源代码，请参阅参考源。\r\n","-Objekts wird der Zugriff auf ein gesichertes Objekt zugelassen.":"-Object 允许访问受保护的对象。\r\n","VARDESC 구조체는 기호화된 상수를 설명합니다.이 상수와 연결된 메모리는 없습니다.":"VARDESC 结构描述了一个符号常量，没有与这个常量相关联的内存。\r\n","Округляет десятичное значение до ближайшего целого.":"将小数值四舍五入为最接近的整数。\r\n","Возвращает большее из двух 64-битовых целых чисел со знаком.":"返回两个 64 位有符号整数中较大的一个。\r\n","Ein Verweis auf den Moniker, der der ROT (Running Object Table) zuletzt hinzugefügt wurde. ":"对最近添加到 ROT（运行对象表）的名字对象的引用。\r\n","지정된 요소 수 및 요소 크기를 사용하여 메모리 버퍼의 할당 크기를 지정합니다.":"使用指定的元素数和元素大小指定内存缓冲区的分配大小。\r\n","SAFEARRAY를 나타냅니다.VARIANT에서는 유효하지 않습니다.":"表示 SAFEARRAY。对 VARIANT 无效。\r\n","Уменьшаемое значение.":"价值下降。\r\n","복소수의 허수 구성 요소입니다.":"复数的虚部。\r\n","를 적용해야 합니다.":"应该应用。\r\n",", а количество цифр в каждой группе определяется свойством ":", 每组的位数由属性决定\r\n","Der IUnknown-Zeiger für den ":"IUnknown 指针\r\n","Das zuvor von der ":"之前的那个来自\r\n","< 1) -또는-(":"< 1) - 或 - (\r\n","Kopiert Daten aus einem nicht verwalteten Speicherzeiger in ein verwaltetes Array von Gleitkommazahlen mit doppelter Genauigkeit.":"将数据从非托管内存指针复制到双精度浮点数的托管数组。\r\n","Gibt an, dass der ":"表示\r\n","Тип объектов для сравнения.Этот параметр типа является контрвариантным. Это означает, что можно использовать либо указанный тип, либо менее производный тип. Дополнительные сведения о ковариации и контрвариации см. в разделе Ковариация и контравариация в универсальных шаблонах.":"要比较的对象类型。此类型参数是逆变的。这意味着可以使用指定的类型或派生程度较低的类型。有关协变和逆变的更多信息，请参阅通用模式中的协变和逆变。\r\n","Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентное 32-разрядное целое число без знака.":"将指定的 64 位无符号整数的值转换为其等效的 32 位无符号整数。\r\n","Beschreibt die Übertragung eines Strukturelements, Parameters oder Rückgabewerts einer Funktion zwischen Prozessen.":"描述进程之间函数的结构元素、参数或返回值的传输。\r\n","-Objekts (in Byte) ab.Diese Länge muss verwendet werden, bevor die ACL mithilfe der ":"对象（以字节为单位）。必须在使用\r\n","Показывает значение HRESULT.":"显示 HRESULT 值。\r\n"," предшествует ":" 先于\r\n","Инициализируемый массив. ":"要初始化的数组。\r\n"," 매개 변수에 대한 오프셋(바이트)입니다.":" 参数中的偏移量（以字节为单位）。\r\n"," и параметром HRESULT, определенным пользователем.":" 和一个用户定义的 HRESULT 参数。\r\n",", используя указанный объект ":", 使用指定对象\r\n","를 반환합니다.URL 인코딩된 문자열입니다.":"返回一个 URL 编码的字符串。\r\n","Преобразует значение заданного 16-битового целого числа без знака в эквивалентное строковое представление.":"将指定的 16 位无符号整数的值转换为其等效的字符串表示形式。\r\n","Количество символов в массиве. ":"数组中的字符数。\r\n"," 개체의 값이 ":" 개체의 값이\r\n","Сравнивает два объекта и возвращает значение, которое указывает, равны ли эти объекты или один из них больше другого.":"比较两个对象并返回一个值，该值指示两个对象是相等还是一个大于另一个。\r\n","true si el valor predeterminado para un miembro se debe generar en la secuencia de la serialización; de lo contrario, false.El valor predeterminado es true.":"真正的 si el 值预先确定 para un miembro se debe generar en la secuencia de la serialización; de lo contrario, false. El valor predeterminado es true.\r\n","Отсчитываемый от нуля индекс удаляемого элемента. ":"要删除的元素的从零开始的索引。\r\n","Возвращает число 100-наносекундных импульсов, представляющее дату и время создания данного экземпляра.":"返回表示创建此实例的日期和时间的 100ns 脉冲数。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.":"将指定的 32 位无符号整数的值转换为等效的 64 位有符号整数。\r\n",", содержащий ключи объекта, который реализует ":"包含实现的对象的键\r\n","COM에 노출할 기본 인터페이스를 나타내는 ":"表示要公开给COM的默认接口 \r\n","Преобразует значение заданного символа Юникода в эквивалентное 64-битовое целое число без знака.":"将指定 Unicode 字符的值转换为其等效的 64 位无符号整数。\r\n","Показывает, что интерфейс будет использовать динамическую библиотеку заглушки/прокси-сервера.Этот флаг показывает, что, если регистрация библиотеки типов удалена, не следует удалять регистрацию для прокси-сервера библиотеки типов.":"表示该接口将使用存根/代理动态库。该标志表示如果类型库注册被移除，类型库代理的注册不应该被移除。\r\n","Указывает на использование для данного метода соглашения о вызове Macintosh Pascal (MACPASCAL).":"指示 Macintosh Pascal (MACPASCAL) 调用约定用于此方法。\r\n","Das diesem ":"这个\r\n","Возвращает наибольшее из двух значений ":"返回两个值中的最大值\r\n","Zuweisungen zur Variablen sollten nicht zulässig sein.":"不应允许对变量的赋值。\r\n"," не находится в подходящем формате для типа ":" 该类型的格式不正确\r\n","Der Typ der Zugriffssteuerung (gewähren oder verweigern), der festgelegt werden soll.":"要设置的访问控制类型（授予或拒绝）。\r\n","Считывает из неуправляемой памяти с указанным смещением 64-битное целое число со знаком.":"从指定偏移量处的非托管内存中读取一个 64 位有符号整数。\r\n","-Namespace versucht, eine für diese Methode nicht verfügbare Berechtigung zu aktivieren.":"- 命名空间正在尝试启用对此方法不可用的权限。\r\n","개체가 저장되는 파일의 절대 경로가 들어 있는 0으로 끝나는 문자열입니다. ":"一个以零结尾的字符串，包含存储对象的文件的绝对路径。\r\n"," 타이머가 실행 중인지를 나타내는 값을 가져옵니다.":" 获取一个值，该值指示计时器是否正在运行。\r\n","Ruft die Größe des Puffers in Bytes ab.":"获取缓冲区的大小（以字节为单位）。\r\n","플랫폼 호출로 선언된 지정된 클래스 내의 ":"在声明为平台调用的给定类中\r\n","Сведения запроса, включенные в URI.":"URI 中包含的请求信息。\r\n","Задает размер в байтах для потока или массива байтов.":"指定流或字节数组的大小（以字节为单位）。\r\n"," dar, z. B. \"7F-2C-4A-00\".":"代表，例如“7F-2C-4A-00”。\r\n","Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное строковое представление.":"将指定的 32 位带符号整数的值转换为其等效的字符串表示形式。\r\n","Die SACL für dieses ":"为此的 SACL\r\n"," oder einem ":" 或一个\r\n","Ruft den Typ dieses ":"获取 this 的类型\r\n","이 핸들 형식은 개체를 추적하는 데 사용되지만 개체를 수집할 수 있습니다.개체가 수집되면 ":"此句柄类型用于跟踪对象，但您可以收集对象。收集对象时 \r\n",", отслеживается после финализации, или false, если этот объект отслеживается только до финализации.":", 在完成后被跟踪，如果此对象仅在完成前被跟踪，则为 false。\r\n","Если Invoke возвращает DISP_E_TYPEMISMATCH, то параметр ":"如果 Invoke 返回 DISP_E_TYPEMISMATCH，则参数\r\n","Die Basisadresse im nicht verwalteten Speicher, in die geschrieben werden soll.":"要写入的非托管内存中的基地址。\r\n"," < -1이거나 ":"< -1 或\r\n","Возвращает фазу комплексного числа.":"返回复数的相位。\r\n",", если это класс значения; в противном случае — ":"如果它是一个值类；否则 -\r\n","Entfernen Sie Autorisierungsregeln, die die gleiche SID wie die angegebene Autorisierungsregel aus der Zugriffssteuerungsliste enthalten.":"从访问控制列表中删除与指定授权规则包含相同 SID 的授权规则。\r\n","Die zweite von zwei zu vergleichenden 8-Bit-Ganzzahlen ohne Vorzeichen. ":"要比较的两个 8 位无符号整数中的第二个。\r\n","Возвращает число элементов в фиксированном буфере. ":"返回固定缓冲区中的元素数。\r\n","При переопределении в производном классе выполняет код, необходимый для освобождения дескриптора.":"При переопределении в производном классе выполняет код, необходимый для освобождения дескриптора。\r\n","IUnknown::QueryInterface-Methodenaufrufe sollten die Schnittstelle ":"IUnknown::QueryInterface 方法调用应该使用接口\r\n","Преобразует заданное строковое представление числа в эквивалентное число с плавающей запятой одиночной точности.":"将数字的指定字符串表示形式转换为其等效的单精度浮点数。\r\n","라이브러리에 설명되어 있는 형식이나 멤버의 이름이 전달된 문자열에 들어 있는지 여부를 나타냅니다.":"指示传递的字符串是否包含库中描述的类型或成员的名称。\r\n"," 클래스가 할당할 수 있는 핸들의 형식을 나타냅니다.":" 指示类可以分配的句柄类型。\r\n","Заголовок сборки. ":"装配头。\r\n","이 메서드는 반환될 때 CLSID를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它将包含 CLSID。此参数在未初始化的情况下传递。\r\n","Количество добавляемых знаков. ":"要添加的字符数。\r\n","관리되는 클래스를 지정하는 값 형식이나 서식이 지정된 참조 형식입니다.클래스에 ":"指定托管类的值类型或格式化引用类型。\r\n","Инициализирует объект из потока, в котором он был предварительно сохранен.":"从先前存储对象的流中初始化对象。\r\n","원본 coclass의 클래스 식별자를 가져옵니다.":"获取原始coclass的类标识符。\r\n","Schließt Objekte in einen Wrapper ein, die der Marshaller als VT_DISPATCH marshallen soll.":"包装封送拆收器应封送为 VT_DISPATCH 的对象。\r\n","현재 모니커에서 식별한 개체가 마지막으로 변경된 시간을 나타내는 숫자를 제공합니다.":"提供一个数字，表示上次更改由当前名字对象标识的对象的时间。\r\n","Определяет интерфейс по умолчанию, предоставляемый COM.Этот класс не наследуется.":"定义COM提供的默认接口。该类不被继承。\r\n","Возвращает или задает пользовательское имя для имени значения словаря.":"Возвращает или задает пользовательское имя для имени значения словаря。\r\n","Инкапсулируемый объект. ":"封装的对象。\r\n","Matriz administrada a la que hace referencia esta instancia.":"此实例引用的托管数组。\r\n",") 3 사분면에서-π < θ <-π/2입니다.에 대 한 (":") 在第三象限，-π < θ < -π/2。对于 (\r\n","true se il numero di riferimenti è stato incrementato correttamente; in caso contrario, false.":"如果正确增加了推荐数量，则为真；否则，假的。\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 16 位无符号整数的值转换为等效的 32 位无符号整数。\r\n","Devuelve un carácter Unicode convertido a partir de dos bytes en la posición especificada de una matriz de bytes.":"Devuelve 字符 Unicode convertido a partir de dos bytes en la posición especificada de una matrix de bytes。\r\n"," значение меньше 0 или больше 15. ":" 值小于 0 或大于 15。\r\n","Указатель памяти, из которого выполняется копирование. ":"指向要从中复制的内存的指针。\r\n","Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 8-битовое целое число без знака.":"将指定的 32 位带符号整数的值转换为等效的 8 位无符号整数。\r\n","Создает комплексное число из полярных координат точки.":"从一个点的极坐标创建一个复数。\r\n",".Использование ClassInterfaceType.None — это единственный способ предоставления функциональных возможностей при помощи интерфейсов, явно реализованных классом.":".Using ClassInterfaceType.None 是通过类显式实现的接口提供功能的唯一方法。\r\n","-Objekt zugeordnet sind.Diese Eigenschaft ist nur für Zugriffssteuerungseinträge (ACEs) mit Rückruf gültig.":"对象。此属性仅对带回调的访问控制条目 (ACE) 有效。\r\n","Ключ, представляющий объект с вложенным свойством зависимостей.":"表示具有嵌套依赖属性的对象的键。\r\n","반환할 64비트 부호 없는 정수입니다. ":"要返回的 64 位无符号整数。\r\n","의 접두사가 음수 기호인 경우또는":"以负号为前缀，或\r\n","Speichert im Bindungskontext einen Block von Parametern.Diese Parameter gelten für spätere UCOMIMoniker-Operationen, die diesen Bindungskontext verwenden.":"在绑定上下文中存储一个参数块。这些参数适用于以后使用此绑定上下文的 UCOMIMoniker 操作。\r\n","Недостаточно памяти.":"内存不足。\r\n","지정된 복소수를 다른 지정된 복소수로 나눕니다.":"将一个指定的复数除以另一个指定的复数。\r\n","을 사용하는 개체입니다. ":"用的对象。 \r\n","Полученное значение находится вне допустимого диапазона типа ":"接收到的值超出了类型允许的范围\r\n","serialization 또는 deserialization 중에 인식해야 할 형식 목록을 반환하는 메서드의 이름을 가져옵니다. ":"获取返回序列化或反序列化期间要识别的类型列表的方法的名称。\r\n","Vererbungsflags geben die Semantik der Vererbung für ACEs (Access Control Entries, Zugriffssteuerungseinträge) an.":"继承标志指定访问控制条目 (ACE) 的继承语义。\r\n","Initialisiert eine neue Instanz der SafeArrayTypeMismatchException-Klasse mit Standardwerten.":"使用默认值初始化 SafeArrayTypeMismatchException 类的新实例。\r\n","오류 코드로 변환될 예외입니다. ":"要转换为错误代码的异常。 \r\n","Гарантирует, что емкость данного экземпляра ":"确保这个实例的容量\r\n","지정된 64비트 부호 없는 정수 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.":"将指定的 64 位无符号整数值转换为等效的单精度浮点数。\r\n","Eine schreibgeschützte Long-Integer-Zahl, die die Gesamtanzahl der von der aktuellen Instanz gemessenen Zeitgeberintervalle angibt.":"一个只读长整数，表示当前实例测量的计时器间隔总数。\r\n","Ein Array von Bytewerten, das die opaken Rückrufdaten für dieses ":"包含此不透明回调数据的字节值数组\r\n","Возвращает значение, определяющее, равны ли текущий экземпляр и 64-разрядное целое число со знаком.":"获取一个值，该值指示当前实例和一个 64 位有符号整数是否相等。\r\n","Считывает из неуправляемой памяти с указанным смещением 16-битное целое число со знаком.":"从指定偏移量处的非托管内存中读取一个 16 位有符号整数。\r\n","Набор значений из перечисления STGM, показывающих режим доступа, используемый для открытия ":"来自 STGM 枚举的一组值，指示用于打开的访问模式\r\n","복소수로 변환할 값입니다.":"要转换为复数的值。\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.":"使用指定的区域性特定格式设置信息，将指定的 16 位带符号整数的值转换为其等效的字符串表示形式。\r\n","true, когда каждый элемент ":"每个元素都为真\r\n","Stellt ein plattformspezifisches Zeichen bereit, das zur Trennung von Verzeichnisebenen in einer Pfadzeichenfolge verwendet wird und eine hierarchische Dateisystemorganisation wiedergibt.":"提供一个特定于平台的字符，用于分隔路径字符串中的目录级别，表示分层文件系统组织。\r\n",", используя указанное число с плавающей запятой с удвоенной точностью.":", 使用指定的双精度浮点数。\r\n"," равны null; в противном случае — значение false.":" 为空；否则，假的。\r\n","Konvertiert die angegebene 64-Bit-Ganzzahl mit Vorzeichen in eine Gleitkommazahl mit doppelter Genauigkeit.":"Konvertiert die angegebene 64-Bit-Ganzzahl mit Vorzeichen in eine Gleitkommazahl mit doppelter Genauigkeit。\r\n"," 구조체에 지정된 데이터에 대한 변경 알림을 받습니다.":" 接收结构中指定数据更改的通知。\r\n","검색할 이름입니다.이는 in/out 매개 변수입니다.":"要检索的名称。这是一个输入/输出参数。\r\n","Gibt an, dass die DACL nicht null ist.Wird von Ressourcen-Managern oder Benutzern festgelegt.":"指示 DACL 不为空。由资源管理器或用户设置。\r\n","Определяет способ доступа к функции.":"指定函数的访问方式。\r\n","Если используются соединения с кэшем, этот флаг обновляет кэшированное представление только при сохранении объекта, содержащего кэш.":"如果使用缓存连接，则此标志仅在保存包含缓存的对象时更新缓存视图。\r\n","Массив для копирования данных. ":"复制数据的数组。\r\n","Der Pfad der Datei. ":"文件的路径。\r\n","Marshallt Daten vom Typ VT_VARIANT | VT_BYREF von verwaltetem an nicht verwalteten Code.Diese Klasse kann nicht vererbt werden.":"封送 VT_VARIANT 类型的数据 | VT_BYREF from managed to unmanaged code. 此类不能被继承。\r\n","-Werte aus.":"值。\r\n","Копирует символы из указанного сегмента этого экземпляра в указанный массив ":"将此实例的指定段中的字符复制到指定数组\r\n","Der Typ, in den die COM VARIANTE konvertiert werden soll. ":"COM VARIANT 要转换成的类型。\r\n","Die Zugriffsrechte für das Objekt.":"对象的访问权限。\r\n"," 매개 변수가 다르면 true이고, 그렇지 않으면 false입니다.":" 如果参数不同，则为true，否则为false。\r\n","가 대상에 선언되지 않은 경우":"如果未声明目标\r\n","При возвращении данного метода содержит идентификатор контекста справки, связанный с заданным элементом.Этот параметр передается без инициализации.":"当此方法返回时，包含与指定元素关联的帮助上下文标识符。此参数无需初始化即可传递。\r\n","При возвращении данного метода содержит ссылку на перечисленные соединения.Этот параметр передается без инициализации.":"当此方法返回时，包含对列出的连接的引用。此参数无需初始化即可传递。\r\n","Gibt den absoluten Wert einer 32-Bit-Ganzzahl mit Vorzeichen zurück.":"返回 32 位有符号整数的绝对值。\r\n"," nur das erste Argument mit einem Fehler an.Dieser Parameter wird nicht initialisiert übergeben.":" 只有第一个参数有错误。此参数未初始化传递。\r\n","형식 라이브러리에서 원본 소스 인터페이스를 가져옵니다.":"从类型库中获取原始源接口。\r\n","Ordnet dem Member eines Typs einen Namen zu oder bindet globale Variablen und Funktionen in einer Typbibliothek.":"为类型的成员分配名称或绑定类型库中的全局变量和函数。\r\n","Der für den URI generierte Hashcode.":"为 URI 生成的哈希码。\r\n","Возвращает идентификатор DISPID для члена.":"返回成员的 DISPID。\r\n","Ein Profilname.":"配置文件名称。\r\n"," с именем заданной дружественной сборки. ":" 使用给定的朋友程序集的名称。\r\n","Имя метода, возвращающего интерфейс типов ":"返回类型接口的方法的名称\r\n","Обеспечивает достаточный запас пространства стека для выполнения средней функции платформы .NET Framework.":"提供足够的堆栈空间来执行普通的 .NET Framework 函数。\r\n"," 구조체 또는 ITypeComp 인터페이스에 대한 포인터를 포함합니다.":" 包含指向结构或 ITypeComp 接口的指针。\r\n","Die Anzahl, in Bytes, die vom ":"数字，以字节为单位，日期\r\n",", в противном случае — значение false.":"，否则为假。\r\n","true, wenn der neue ACE vom Typ Rückruf-ACE ist.":"如果新 ACE 的类型为回调 ACE，则为真。\r\n","Массив символов для добавления. ":"要添加的字符数组。\r\n","Die kombinierten Pfade.":"组合路径。\r\n"," значением параметра по умолчанию.":" 参数的默认值。\r\n","Число, используемое для вычисления начального значения последовательности псевдослучайных чисел.Если задано отрицательное число, используется его абсолютное значение.":"用于计算伪随机数序列初值的数，如果指定负数，则取其绝对值。\r\n","Число двойной точности с плавающей запятой, образованное восемью байтами, начинающимися с ":"由八个字节组成的双精度浮点数，以\r\n",", которая может быть преобразована к указанному типу с помощью преобразователя ":", 可以使用转换器转换为指定类型\r\n","Die Ausnahme, die ausgelöst wird, wenn der Typ des eingehenden SAFEARRAY nicht mit dem in der verwalteten Signatur angegebenen Typ übereinstimmt.":"当传入的 SAFEARRAY 的类型与托管签名中指定的类型不匹配时抛出的异常。\r\n"," beschriebenen Versionseinschränkungen wird von der Verwendung von AutoDual dringend abgeraten.":" 由于上述版本限制，强烈建议不要使用 AutoDual。\r\n",".В противном случае символ десятичного разделителя определяется свойством ":".否则，小数分隔符由属性决定\r\n","Ein Unicode-Zeichen, das dem Wert entspricht, oder ":"与该值对应的 Unicode 字符，或\r\n","지정된 배정밀도 부동 소수점 숫자 값을 해당하는 32비트 부호 없는 정수로 변환합니다.":"将指定的双精度浮点数的值转换为等效的 32 位无符号整数。\r\n","-Werte, der die durch memid festgelegte Art von Member angibt.":"值指定 memid 指定的成员类型。\r\n","Enthält Informationen über eine Variable.":"包含有关变量的信息。\r\n","복소수를 나타냅니다.":"表示复数。\r\n","Ссылка на интерфейс, описанный в данном описании типа. ":"对给定类型声明中描述的接口的引用。\r\n"," als gültige, serialisierbare Auflistungen erkannt werden.":" als gültige, serialisierbare Auflistungen erkannt werden。\r\n","Логарифм ":"对数\r\n","Увеличивает текущий счетчик дескрипторов.":"增加当前句柄计数器。\r\n","IUnknown::QueryInterface-Methodenaufrufe können die Schnittstelle ":"IUnknown::QueryInterface 方法调用可以使用该接口\r\n",", но не включает ":"但不包括\r\n","При возвращении данного метода содержит ссылку на перечислитель DESCKIND, указывающий, является ли имя, к которому выполняется привязка, VARDESC, FUNCDESC или TYPECOMP.Этот параметр передается без инициализации.":"当此方法返回时，包含对 DESCKIND 枚举器的引用，指示绑定到的名称是 VARDESC、FUNCDESC 还是 TYPECOMP。此参数无需初始化即可传递。\r\n","Показывает режим доступа, заданный при открытии объекта.":"显示打开对象时设置的访问模式。\r\n","-Wert größer als der oder gleich dem Wert einer 64-Bit-Ganzzahl ohne Vorzeichen ist.":"值大于或等于 64 位无符号整数值。\r\n","형식의 멤버에 적용되는 경우 멤버가 데이터 계약의 일부이며 ":"当应用于某个类型的成员时，该成员是数据协定的一部分，并且\r\n","Указатель интерфейса, представляющий заданный интерфейс для объекта.":"表示对象的指定接口的接口指针。\r\n","Возвращает логарифм указанного числа в системе счисления с указанным основанием.":"返回指定底数的数制中指定数字的对数。\r\n","COM에 인터페이스를 노출시키는 방법을 식별합니다.":"确定如何将接口公开给COM。\r\n","Получает безопасный дескриптор для дескриптора ожидания операционной системы. ":"Получает безопасный дескриптор для десриптора ожидания операционной системы。\r\n","Произведение ":"工作\r\n","Копирует содержимое управляемого объекта типа ":"复制类型的托管对象的内容\r\n"," 참조의 수입니다.":" 参考文献的数量。\r\n","이벤트에 public remove 접근자가 없는 경우":"该事件没有公共删除访问器。\r\n","Преобразует значение заданного объекта в эквивалентное 32-битовое целое число со знаком, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用指定的区域性特定格式设置信息将指定对象的值转换为其等效的 32 位带符号整数。\r\n","Показывает двухбайтную строку, завершенную null.":"显示一个两字节的空终止字符串。\r\n","원본 coclass의 클래스 식별자를 포함하는 ":"包含原始coclass的类标识符 \r\n","Definiert eine implizite Konvertierung einer 16-Bit-Ganzzahl mit Vorzeichen in einen ":"定义 16 位有符号整数到\r\n"," ist für COM nicht sichtbar.":" 对 COM 不可见。\r\n","Возвращает 32-битовое целое число со знаком, преобразованное из четырех байтов с указанной позицией в массив байтов.":"返回从指定位置的四个字节转换为字节数组的 32 位有符号整数。\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为等效的 8 位无符号整数。\r\n","FILETIME 값을 나타냅니다.":"表示 FILETIME 值。\r\n","Liest eine 64-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset aus dem nicht verwalteten Arbeitsspeicher.":"从非托管内存的指定偏移处读取一个 64 位有符号整数。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in das entsprechende Unicode-Zeichen.":"将指定的 32 位无符号整数的值转换为等效的 Unicode 字符。\r\n","Добавляет строковое представление символа Юникода в указанном массиве к данному экземпляру.":"将指定数组中 Unicode 字符的字符串表示形式添加到此实例。\r\n","-Parameter denselben Wert aufweisen, andernfalls false.":"参数具有相同的值，否则为假。\r\n","Первое значение в вычитании.":"减法中的第一个值。\r\n","Gibt einen Ganzzahlwert an.":"指定一个整数值。\r\n","Eine Gleitkommazahl mit doppelter Genauigkeit, die beginnend bei ":"Eine Gleitkommazahl mit doppelter Genauigkeit, die beginnend bei\r\n","true, um anzugeben, dass die optimale Zuordnung aktiviert ist, andernfalls false.Die Standardeinstellung ist true.":"true, um anzugeben, dass die optimale Zuordnung activiert ist, andernfalls false. Die Standardeinstellung ist true.\r\n","단정밀도 부동 소수점 값으로 변환할 값입니다.":"要转换为单精度浮点值的值。\r\n"," минус 1. ":" 减 1。\r\n","Der Hyperbeltangens von ":"双曲正切为\r\n","Ruft die Rechte der aktuellen Instanz ab.":"获取当前实例的权限。\r\n","Ein Verweis auf die freizugebende TYPEATTR-Struktur. ":"对要释放的 TYPEATTR 结构的引用。\r\n","-Verweise.Dieser Parameter wird nicht initialisiert übergeben.":"-References. 此参数未初始化传递。\r\n"," bietet keine Unterstützung von IDispatch. ":" 不支持 IDispatch。\r\n","호출자가 바인딩 작업을 완료하도록 지정한 시간(GetTickCount 함수가 반환하는 밀리초 단위의 시간)을 나타냅니다.":"表示调用方已指定绑定操作完成的时间量（以 GetTickCount 函数返回的毫秒数为单位）。\r\n","Индекс параметра этой функции, для которой нужно получить пользовательские данные. ":"要为其获取用户数据的此函数的参数索引。\r\n","Diese Eigenschaft ist immer auf false festgelegt.Sie ist nur implementiert, weil sie für die Implementierung der ":"此属性始终设置为 false。仅在执行\r\n"," ist nicht 2, 8, 10 oder 16. - oder - ":" 不是 2、8、10 或 16。 - 或 -\r\n"," ist gleich 0 (null). 1 ":" 等于 0（零）。 1个\r\n","가 정렬 순서에서 ":"按排序顺序\r\n","관리되지 않는 메모리의 지정된 오프셋 위치에 16비트 부호 있는 정수 값을 씁니다.":"将 16 位有符号整数值写入指定偏移量处的非托管内存。\r\n"," 값이 부호 있는 64비트 정수보다 작은지를 나타내는 값을 반환합니다.":" 返回一个值，该值指示该值是否小于 64 位有符号整数。\r\n","Возвращает имя метода, который возвратит список типов, которые должны распознаваться при сериализации или десериализации. ":"返回一个方法的名称，该方法将返回在序列化或反序列化期间应识别的类型列表。\r\n"," и анализируемая строка содержит обозначение денежной единицы, допустимый разделитель группы определяется свойством ":" 并且解析的字符串包含货币名称，允许的组分隔符由属性确定\r\n","에 유효한 버전 번호가 포함되어 있지 않습니다.":"不包含有效的版本号。\r\n","; 즉, 로그 10":";即日志 10\r\n","Объединяет две строки в путь.":"将两个字符串连接成一个路径。\r\n","-Instanz hat ein ungültiges Kennwort. ":"- 实例密码无效。\r\n","지정된 8비트 부호 없는 정수의 값을 해당하는 16비트 부호 없는 정수로 변환합니다.":"将指定的 8 位无符号整数的值转换为等效的 16 位无符号整数。\r\n","형식 라이브러리에 있는 형식 설명의 수를 반환합니다.":"返回类型库中类型描述的数量。\r\n","Beschreibt eine Verbindung, die mit einem bestimmten Verbindungspunkt besteht.":"描述与特定连接点存在的连接。\r\n","Изменяет размер блока памяти, предварительно выделенного с помощью ":"更改先前分配的内存块的大小\r\n","-Klasse mit dem angegebenen ungültigen Handlewert.":"-Classse mit dem angegebenen ungültigen Handlewert。\r\n","-Felds oder kein Vielfaches von vier.":"场或不是四的倍数。\r\n"," ist kleiner als 0.- oder -  Die Summe von ":" 小于 0.- 或 - 的总和\r\n"," одну и ту же версию платформы .NET Framework.":" .NET Framework 的相同版本。\r\n","Основание системы счисления возвращаемого значения, равное 2, 8, 10 или 16. ":"返回值的基数，即 2、8、10 或 16。\r\n","Указывает на использование для данного метода соглашения о вызове CDECL. ":"指示 CDECL 调用约定用于此方法。\r\n","Определяет для манифеста сборки настраиваемый атрибут имени компании.":"为程序集清单定义自定义公司名称属性。\r\n","Задает размер выделяемого буфера памяти, используя указанное количество элементов и размер элемента.Данный метод необходимо вызвать перед использованием экземпляра ":"使用指定的元素数和元素大小设置要分配的内存缓冲区的大小。必须在使用实例之前调用此方法。\r\n","Liest so viele Zeichen des angegebenen Anzeigenamens, wie von ":"从给定的显示名称中读取尽可能多的字符\r\n","Сигнатура метода должна экспортироваться в том виде, в каком она объявлена.":"方法签名必须在声明时导出。\r\n","지정된 HRESULT 오류 코드를 해당하는 ":"对应于指定的 HRESULT 错误代码\r\n","Der Namespace des Datenvertrags.":"Der Namespace des Datenvertrags。\r\n","Ein Verweis auf den gewünschten Speicherort für das Ergebnis.Wenn ":"对结果所需位置的引用。如果\r\n","Вычисляет 32-разрядное целое число, используя внутреннее состояние моникера.":"使用名字对象的内部状态计算一个 32 位整数。\r\n","Определяет неявное преобразование числа с плавающей запятой одиночной точности в комплексное число.":"指定将单精度浮点数隐式转换为复数。\r\n","Значение true, если значение по умолчанию для элемента должно быть создано в потоке сериализации; в противном случае — значение false.Значение по умолчанию — true.":"如果应在序列化流上生成元素的默认值，则为 true；否则为 false。默认值为 true。\r\n"," weist kein geeignetes Format auf.":" 没有合适的格式。\r\n"," 매개 변수의 값이 포함된 개체입니다.":" 包含参数值的对象。\r\n","Показывает указатель IDispatch.":"显示 IDispatch 指针。\r\n","-Datentyp verwenden.":"- 使用数据类型。\r\n"," 값의 곱을 반환합니다.":" 값의 곱을 반환합니다。\r\n","Возвращает символ условной компиляции, связанный с атрибутом ":"返回与属性关联的条件编译符号\r\n","유니코드 문자를 ANSI 문자로 변환할 때 가장 적합한 매핑 동작을 활성화 또는 비활성화합니다.":"在将Unicode字符转换为ANSI字符时启用或禁用最佳映射行为。\r\n","Число байтов, которое требуется считать из объекта-потока. ":"要从流对象中读取的字节数。\r\n","IBindCtx 인터페이스의 관리되는 정의를 제공합니다.":"提供 IBindCtx 接口的托管定义。\r\n","Bindet an die Typbeschreibungen in einer Typbibliothek.":"绑定到类型库中的类型描述。\r\n",", созданный из дескриптора управляемого объекта.":"从句柄创建到托管对象。\r\n","지정된 64비트 부호 있는 정수 값을 해당하는 문자열 표현으로 변환합니다.":"将指定的 64 位带符号整数值转换为其等效的字符串表示形式。\r\n"," с параметром HRESULT, для которого задано значение COR_E_PATHTOOLONG.":" 将 HRESULT 参数设置为 COR_E_PATHTOOLONG。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.":"将指定的 32 位无符号整数的值转换为等效的单精度浮点数。\r\n","Gibt an, dass ein TYPECOMP zurückgegeben wurde.":"表示返回了 TYPECOMP。\r\n","Определяет неявное преобразование 16-битного целого числа без знака в комплексное число.":"定义从 16 位无符号整数到复数的隐式转换。\r\n","Bezeichnet eine Liste von Schnittstellen, die als COM-Ereignisquellen für die attributierte Klasse verfügbar gemacht werden.":"标识公开为属性类的 COM 事件源的接口列表。\r\n","Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное 64-битовое целое число со знаком.":"将指定的 16 位带符号整数的值转换为等效的 64 位带符号整数。\r\n"," liegt außerhalb des gültigen Bereichs.":" 超出有效范围。\r\n","는 null일 수 있습니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"可以为空。此参数未初始化传递。\r\n",", используя указанное 64-разрядное целое число со знаком.":"，使用指定的 64 位带符号整数。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in einen entsprechenden booleschen Wert.":"将指定的 64 位无符号整数的值转换为等效的布尔值。\r\n","Die neue Größe des belegten Blocks.":"分配块的新大小。\r\n","Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 16-битовое целое число со знаком.":"将指定的双精度浮点数的值转换为等效的 16 位带符号整数。\r\n","Definiert die Zuordnungsgröße des Arbeitsspeicherbereichs, indem die Anzahl der Werttypen angegeben wird.Diese Methode muss aufgerufen werden, bevor die ":"通过指定值类型的数量来定义内存分配大小。此方法必须在\r\n","의 하이퍼볼릭 탄젠트입니다.":"是双曲正切\r\n","검색할 static 멤버 주소의 멤버 ID입니다. ":"要检索的静态成员地址的成员 ID。\r\n","Flags, die Informationen zu Vererbung, Weitergabe der Vererbung und Überwachungsbedingungen für den neuen ACE angeben.":"指定有关新 ACE 的继承、继承传播和监视条件的信息的标志。\r\n","Eine zu decodierende URL-codierte Zeichenfolge.":"要解码的 URL 编码字符串。\r\n","형식 라이브러리는 디스크에서 지속된 형식으로 존재합니다.":"类型库以持久形式存在于磁盘上。\r\n","매개 변수가 호출 수신자에게서 호출자에게로 정보를 반환합니다.":"参数将信息从被调用者返回给调用者。\r\n",", описывающее метод с атрибутами.":"描述具有属性的方法的 。\r\n","El nombre que se debe usar en lugar del nombre de clave del diccionario predeterminado.":"El nombre que se debe usar en lugar del nombre de clave del diccionario predeterminado。\r\n","Считываемый тип значения.":"要读取的值类型。\r\n",", при его применении к типу данных ":", 当应用于数据类型时\r\n","Ein Objekt, das Kontextinformationen über die Quelle oder das Ziel der Ausnahme bereitstellt.":"提供有关异常源或目标的上下文信息的对象。\r\n","MPW(Macintosh Programmers' Workbench) PASCAL 호출 규칙을 메서드에 사용해야 함을 나타냅니다.":"指示该方法应使用 Macintosh Programmers' Workbench (MPW) PASCAL 调用约定。\r\n","Предоставляет моникер, добавление которого к текущему моникеру (или к одной из подобных структур) приводит к получению указанного моникера.":"提供一个名字对象，当添加到当前名字对象（或类似结构之一）时，会产生指定的名字对象。\r\n","입력 배열에서 읽어서 출력 배열에 쓸 값 형식의 수입니다.":"从输入数组读取并写入输出数组的值类型的数量。\r\n"," в соответствии с заданной схемой, узлом и портом.":" 根据给定的方案、节点和端口。\r\n","-Objekts in einen Bytewert ohne Vorzeichen.":"对象为无符号字节值。\r\n","-Parameter erbt von einem Typ, der mit einem ":"参数继承自以 a 开头的类型\r\n","Die neue Streamgröße als Anzahl von Bytes. ":"以字节数表示的新流大小。\r\n","현재 복소수 값을 데카르트 형식의 해당하는 문자열 표현으로 변환합니다.":"将当前复数的值转换为笛卡尔形式的等效字符串表示形式。\r\n","할당된 블록의 새 크기입니다.":"分配块的新大小。\r\n","-Parameters kann nicht in einen ":"- 参数不能在\r\n","Число, определяющее степень. ":"决定程度的数字。\r\n","이 메서드는 반환될 때 요청한 실행 개체를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含请求的运行对象。此参数未初始化传递。\r\n",", 또는 로그 e":", 或记录 e\r\n","Период ":"时期\r\n","-Feld die Common Language Runtime anweist, eine nicht verwaltete DLL nach anderen Einstiegspunktnamen als dem angegebenen zu durchsuchen.":"指示公共语言运行库在非托管 DLL 中搜索指定名称以外的入口点名称的字段。\r\n","지정된 개체의 값을 ":"指定对象的值\r\n","소스 스트림에서 복사할 바이트 수입니다. ":"要从源流中复制的字节数。\r\n","요청된 저장소 인터페이스의 IID(인터페이스 식별자)입니다. ":"请求的存储接口的接口标识符 (IID)。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 8비트 부호 있는 정수 값을 해당하는 문자열 표현으로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定的 8 位有符号整数值转换为其等效的字符串表示形式。\r\n","IRunningObjectTable 인터페이스의 관리되는 정의를 제공합니다.":"提供 IRunningObjectTable 接口的托管定义。\r\n","Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.Dieser Parameter wird ignoriert.":"提供区域性特定格式信息的对象。忽略此参数。\r\n","Das Objekt, dessen Größe zurückgegeben werden soll. ":"要返回其大小的对象。\r\n","Die Position, an der der Lesevorgang begonnen werden soll.":"开始阅读的位置。\r\n","Примерный начальный размер этого экземпляра. ":"此实例的近似初始大小。\r\n","통화 형식입니다.Decimal 대신 COM 통화 형식으로 10진 값을 마샬링하기 위해 ":"货币类型。将十进制值编组为 COM 货币类型而不是 Decimal。\r\n"," в соответствии с заданной схемой, узлом, номером порта и строкой запроса или идентификатором фрагмента.":" 根据给定的方案、主机、端口号和查询字符串或片段 ID。\r\n","Der Bezeichner der Quellschnittstelle, mit der das COM-Objekt Ereignisse auslöst. ":"COM 对象用于分派事件的源接口的标识符。\r\n","에 해당하는 32비트 부호 있는 정수이거나, ":"是一个 32 位有符号整数，等同于\r\n"," erkanntes Format auf.":" 公认的格式。\r\n","Die Ausnahme, die in einen Fehlercode konvertiert werden soll. ":"要转换为错误代码的异常。\r\n","Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"给定指定的区域性特定格式设置信息，将指定的 8 位带符号整数的值转换为其等效的字符串表示形式。\r\n","Размер таблицы виртуальных методов этого типа (VTBL).":"此类型的虚拟方法表 (VTBL) 的大小。\r\n","Идентификатор элемента для извлекаемого адреса элемента типа static. ":"要检索的静态类型元素地址的元素标识符。\r\n","과 같음":"等于\r\n","Die 8-Bit-Ganzzahl mit Vorzeichen, die ":"8 位有符号整数\r\n","이 메서드는 반환될 때 현재 모니커와 반대되는 모니커를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含与当前名字对象相反的名字对象。此参数未初始化传递。\r\n","형식 라이브러리의 전역 고유 라이브러리 ID를 나타냅니다.":"表示类型库的全局唯一库 ID。\r\n","Das Typ des sicherungsfähigen Objekts, das der aktuellen Instanz zugeordnet ist.":"与当前实例关联的安全对象的类型。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung.":"将指定的 32 位无符号整数的值转换为其等效的字符串表示形式。\r\n","Строка запроса или идентификатор фрагмента. ":"查询字符串或片段 ID。\r\n","Определяет флаги, применяемые к библиотекам типов.":"定义应用于类型库的标志。\r\n","Die einzuschließenden Abschnitte.":"要包括的部分。\r\n","Показывает строку BSTR.":"显示 BSTR 字符串。\r\n"," 인스턴스가 동일한 값을 포함하는지 여부를 확인합니다.":" 检查实例是否包含相同的值。\r\n","Используйте неявные точки следования MSIL, а не точки следования базы данных программы (PDB).Символьная информация обычно включает по меньшей мере одно смещение в терминах языка MSIL для каждой исходной строки.Перед компиляцией метода JIT-компилятор запрашивает у профилирующей службы список MSIL-смещений, которые необходимо сохранить.Эти MSIL-смещения называются точками следования.":"使用隐式 MSIL 序列点而不是程序数据库 (PDB) 序列点。字符信息通常包括每个源字符串的至少一个 MSIL 偏移量。在编译方法之前，JIT 编译器查询分析服务以获取 MSIL 偏移量列表，以保持. 这些 MSIL 偏移量称为序列点。\r\n","사용자에게 바인딩할 수 있는 것으로 표시되는 함수입니다.":"对用户而言可绑定的功能。\r\n","Вставляет строковое представление указанного 16-разрядного знакового целого числа в данный экземпляр на указанную позицию символа.":"将指定 16 位带符号整数的字符串表示形式插入此实例的指定字符位置。\r\n","8비트의 부호 있는 정수의 부호를 나타내는 값을 반환합니다.":"返回一个值，该值指示 8 位有符号整数的符号。\r\n","Делегат метода, который может создать значение для заданного ключа ":"可以为给定键创建值的方法委托\r\n","Stellt die Standardzeichengröße für das System dar. Der Standardwert ist 2 für Unicode-Systeme und 1 für ANSI-Systeme.Dieses Feld ist schreibgeschützt.":"表示系统默认的字符大小。Unicode系统默认为2，ANSI系统默认为1。该字段是只读的。\r\n","명명된 인수의 수를 나타냅니다. ":"指示命名参数的数量。\r\n","Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.":"开始复制的目标数组中从零开始的索引。\r\n","이 메서드는 반환될 때 참조된 형식 설명을 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含引用的类型描述。此参数未初始化传递。\r\n",", вызывающий обратные вызовы для каждого заявленного значения хода выполнения.":"为每个声明的进度值调用回调的 。\r\n","지정된 개체의 값을 8비트 부호 없는 정수로 변환합니다.":"将指定对象的值转换为 8 位无符号整数。\r\n"," элементов массива.":" 数组元素。\r\n","Ссылка на этот экземпляр после завершения операции добавления.После операции добавления этот экземпляр содержит все данные, существовавшие до операции с суффиксом копию ":"添加操作完成后对该实例的引用。添加操作后，此实例包含操作前存在的所有数据，并带有复制后缀\r\n"," unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.":" 到使用指定的区域性特定格式设置信息的等效字符串表示形式。\r\n","지정된 8비트 부호 있는 정수의 값을 해당하는 8비트 부호 없는 정수로 변환합니다.":"将指定的 8 位有符号整数的值转换为等效的 8 位无符号整数。\r\n","보다 작습니다.":"小于\r\n"," Q)가 0인 경우 ":" 如果 Q) 为 0\r\n","비교할 두 개의 배정밀도 부동 소수점 수 중 첫 번째 숫자입니다. ":"要比较的两个双精度浮点数中的第一个。\r\n",", задающий тип, к которому нужно преобразовать значение. ":"一个 ，它指定要将值转换成的类型。\r\n","Kopiert Daten aus einem eindimensionalen, verwalteten Array von 16-Bit-Ganzzahlen mit Vorzeichen in einen nicht verwalteten Speicherzeiger.":"将数据从 16 位有符号整数的一维托管数组复制到非托管内存指针。\r\n","Espacio de nombres del contrato. ":"Espacio de nombres del contrato。\r\n","Возвращает значение, определяющее равны ли текущий экземпляр и указанный объект. ":"返回一个值，该值指示当前实例和指定对象是否相等。\r\n","가 2, 8, 10 또는16이 아닌 경우 또는기수가 10이 아닌 부호 있는 숫자를 나타내는 ":"不是 2、8、10 或 16，或表示基数不是 10 的有符号数\r\n","true, wenn das Byte an der Position ":"真的，wenn das Byte an der Position\r\n","해제할 TLIBATTR 구조체입니다. ":"要释放的 TLIBATTR 结构。\r\n","Указатель интерфейса, представляющий интерфейс для объекта.":"表示对象接口的接口指针。\r\n","Указатель на первый элемент массива типа COM VARIANT.":"指向 COM VARIANT 类型数组的第一个元素的指针。\r\n"," und der Anzahl der zurückzugebenden Elemente ist größer als die Länge von ":" 并且要返回的项目数大于\r\n","Konvertiert ein Bytearray in ein URL-codiertes URL-Bytearray.":"将字节数组转换为 URL 编码的 URL 字节数组。\r\n"," наследуется от типа, помеченного атрибутом ":" 从标有属性的类型继承\r\n","해제할 BSTR의 주소입니다.":"要释放的 BSTR 的地址。\r\n"," в степень ":" 在某种程度上\r\n","Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное число с плавающей запятой двойной точности.":"将指定的单精度浮点数的值转换为等效的双精度浮点数。\r\n","Rundet einen Gleitkommawert mit doppelter Genauigkeit auf eine angegebene Anzahl von Bruchziffern.Ein Parameter gibt an, wie der Wert gerundet wird, wenn er genau zwischen zwei Zahlen liegt.":"Rounds a double-precision floating-point value to a specified number of fractional digits. 参数指定如果值恰好在两个数字之间时如何舍入。\r\n","소스 인터페이스로 사용할 형식을 사용하여 ComSourceInterfacesAttribute 클래스의 새 인스턴스를 초기화합니다.":"使用要用作源接口的类型初始化ComSourceInterfacesAttribute类的新实例。\r\n","Десятичное число со знаком. ":"带符号的十进制数。\r\n"," элементов массива ":" 数组元素\r\n","Der ACE wird nicht von untergeordneten Objekten geerbt.":"ACE 不由子对象继承。\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.":"将指定的 16 位无符号整数的值转换为等效的 64 位有符号整数。\r\n"," 개체가 같은 .NET Framework 버전을 표시하는지 여부를 나타내는 값을 반환합니다.":" 返回一个值，该值指示对象是否表示相同的 .NET Framework 版本。\r\n","Возвращает указанное значение 32-битового целого числа без знака в виде массива байтов.":"将指定的 32 位无符号整数值作为字节数组返回。\r\n","이 관리되는 스레드의 고유 식별자를 나타내는 정수입니다.":"表示此托管线程的唯一标识符的整数。\r\n","Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное число с плавающей запятой одиночной точности.":"将指定的 64 位带符号整数的值转换为其等效的单精度浮点数。\r\n","함수가 가상 함수인지 정적 함수인지 또는 디스패치 전용인지 지정합니다.":"指定函数是虚拟的、静态的还是仅分派的。\r\n","Konvertiert den Wert der angegebenen Dezimalzahl in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.":"将指定十进制数的值转换为等效的 16 位带符号整数。\r\n","При возвращении данного метода содержит время последнего изменения.Этот параметр передается без инициализации.":"当此方法返回时，包含最后修改时间。此参数无需初始化即可传递。\r\n","COM VARIANT에 대한 포인터입니다. ":"指向 COM VARIANT 的指针。\r\n","0개 이상의 환경 변수 이름이 포함된 문자열입니다.각 환경 변수는 백분율 기호(%)로 묶어야 합니다.":"包含零个或多个环境变量名称的字符串。每个环境变量必须用百分号 (%) 括起来。\r\n","FILETIME의 상위 32비트를 지정합니다.":"指定 FILETIME 的高 32 位。\r\n","가 인식해야 할 형식을 지정합니다. ":"指定应识别的格式。\r\n","Вставляет строковое представление десятичного числа в данный экземпляр на указанную позицию символа.":"将十进制数的字符串表示形式插入此实例中的指定字符位置。\r\n","Ein Objekt, das das angegebene nicht verwaltete COM-Objekt darstellt.":"表示指定的非托管 COM 对象的对象。\r\n","의 내용을 그 안에 복사합니다.":"将 的内容复制到其中。\r\n","반올림할 배정밀도 부동 소수점 수입니다. ":"要舍入的双精度浮点数。\r\n","Rückgabewert":"返回值\r\n","true, wenn RCWs zur Bereinigung verfügbar sind, andernfalls false.":"如果 RCW 可用于清理，则为 true，否则为 false。\r\n","Gibt an, ob das zugrunde liegende Handle von untergeordneten Prozessen geerbt werden kann.":"Gibt an, ob das zugrunde liegende Handle von untergeordneten Prozessen geerbt werden kann。\r\n","Показывает способ маршалинга параметров строки для метода, а также управляет искажением имени.":"显示如何为方法编组字符串参数，并控制名称改编。\r\n","Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 64-битовое целое число без знака.":"将指定的 8 位无符号整数的值转换为等效的 64 位无符号整数。\r\n","-Klasse mit den angegebenen Werten des angegebenen ":"- 用指定的指定值分类\r\n","Das Array, das Kopien der in der aktuellen ":"复制当前数组中的数组\r\n","Возвращает 32-битовое целое число без знака, преобразованное из четырех байтов с указанной позицией в массив байтов.":"返回从指定位置的四个字节转换为字节数组的 32 位无符号整数。\r\n","Ruft den ersten Slot in der VTBL (Vtable oder virtuelle Funktionstabelle) ab, der benutzerdefinierte Methoden enthält.":"获取包含用户定义方法的 VTBL（vtable 或虚函数表）中的第一个槽。\r\n","관리되지 않는 메모리에 16비트 정수 값으로 문자를 씁니다.":"将字符作为 16 位整数值写入非托管内存。\r\n"," с использованием указанных ключа и значения.":" 使用指定的键和值。\r\n","Строковое представление текущего исключения ":"当前异常的字符串表示\r\n","Добавляет строковое представление указанного дочернего массива символов Юникода к данному экземпляру.":"将指定的 Unicode 字符子数组的字符串表示形式添加到此实例。\r\n","관리 코드와 비관리 코드 간에 데이터를 마샬링하는 방법을 나타냅니다.":"指示如何在托管代码和非托管代码之间编组数据。\r\n","-Objekt zugeordneten Überwachungsregeln vor Vererbung geschützt werden sollen, false, wenn Vererbung zugelassen werden soll.":"-object 保护关联的审计规则不被继承，false 允许继承。\r\n",", округленным до ближайшего целого числа (если ":"四舍五入到最接近的整数（如果\r\n",") im Quadranten 3-π < θ <-π/2.Für (":") 在象限 3-π < θ <-π/2。对于 (\r\n","기본값으로 SafeArrayTypeMismatchException 클래스의 새 인스턴스를 초기화합니다.":"使用默认值初始化 SafeArrayTypeMismatchException 类的新实例。\r\n","Eine zu kopierende verwaltete Zeichenfolge.":"要复制的托管字符串。\r\n","Показывает формат буфера.":"显示缓冲区格式。\r\n","Nehmen Sie das Anwendungsverzeichnis, das %WinDir%\\System32-Verzeichnis und die Benutzerverzeichnisse in den DLL-Suchpfad auf. ":"在 DLL 搜索路径中包括应用程序目录、%WinDir%\\System32 目录和用户目录。\r\n","Возвращает значение, показывающее состояние атрибута.":"返回一个指示属性状态的值。\r\n"," gibt an, dass die ":" 表示\r\n"," в эквивалентное строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.":" 到使用指定的区域性特定格式设置信息的等效字符串表示形式。\r\n",".NET Framework 버전 정보가 포함된 개체입니다.":"包含 .NET Framework 版本信息的对象。\r\n","진입점의 호출 규칙을 나타냅니다.":"指示入口点的调用规则。\r\n","Возвращает имя файла указанной строки пути без расширения.":"返回不带扩展名的指定路径字符串的文件名。\r\n","와 같으면 배정밀도로 반올림된 -π/2(-1.5707963267949)이고, ":"等于 -π/2(-1.5707963267949) 四舍五入为双精度，\r\n","Fügt der SACL (System Access Control List), die diesem ObjectSecurity`1-Objekt zugeordnet ist, die angegebene Überwachungsregel hinzu.":"将指定的监控规则添加到与此 ObjectSecurity`1 对象关联的 SACL（系统访问控制列表）。\r\n","Der ACE wird von untergeordneten Containerobjekten geerbt.":"ACE 由子容器对象继承。\r\n"," 개체의 값이 다른지를 나타내는 값을 반환합니다.":" 返回一个值，表示对象的值是否不同。\r\n","Удаляемая запись в таблице текущих объектов (ROT). ":"当前对象表 (ROT) 中要删除的条目。\r\n","Liest eine 16-Bit-Ganzzahl mit Vorzeichen aus dem nicht verwalteten Speicher.":"从非托管内存中读取一个 16 位有符号整数。\r\n","Запрошенные ограничения для доступа к диапазону. ":"请求范围访问限制。\r\n"," не является типом значения. ":" 不是值类型。\r\n","이 연결점에 있는 접속을 통해 반복적으로 열거자 개체를 만듭니다.":"它通过在此连接点的连接递归地创建枚举器对象。\r\n","Этот тип дескриптора используется для отслеживания объекта, но позволяет выполнять его сбор.При сборе объекта содержимое объекта ":"这种类型的句柄用于跟踪一个对象，但允许它被收集。当一个对象被收集时，对象的内容\r\n","Der Hyperbelsinus von ":"双曲正弦为\r\n","Возвращает имя файла и расширение указанной строки пути.":"返回指定路径字符串的文件名和扩展名。\r\n","Berechnet den den ganzzahligen Teil einer angegebenen Gleitkommazahl mit doppelter Genauigkeit. ":"计算指定双精度浮点数的整数部分。\r\n"," nicht. - oder - Die Konvertierung von ":" 不是。 - 或 - 的转换\r\n","Erfolgreiche Zugriffsversuche werden überwacht.":"监视成功的访问尝试。\r\n","-Typ übersetzt werden soll.":"类型是要翻译的。\r\n"," Flag.":" 旗帜。\r\n","Der Memberbezeichner für die Typenbeschreibung. ":"类型描述的成员标识符。\r\n","부호 있는 64비트 정수를 복소수로 변환하는 암시적 변환을 정의합니다.":"定义从带符号的 64 位整数到复数的隐式转换。\r\n","스트림이 개체를 포함하고 있음을 나타냅니다.":"指示流包含对象。\r\n"," 인터페이스를 나타냅니다.":" 代表一个接口。\r\n","8비트 부호 없는 정수로 구성된 배열입니다. ":"8 位无符号整数数组。\r\n","Представляет слабую ссылку, которая указывает на объект, но позволяет удалять его сборщику мусора.":"表示指向对象但允许对其进行垃圾回收的弱引用。\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为等效的 16 位带符号整数。\r\n","매개 변수나 필드를 비관리 코드로 마샬링하는 방법을 식별합니다. ":"标识如何将参数或字段编组到非托管代码。\r\n","Возвращает первую ячейку в таблице виртуальных функций (VTBL), которая содержит методы, определенные пользователем.":"返回包含用户定义方法的虚函数表 (VTBL) 中的第一个单元格。\r\n","Показывает длину префикса в байтах.":"显示前缀的长度（以字节为单位）。\r\n","과 같으면 ":"等于\r\n","2바이트 OLE 정의 VARIANT_BOOL 형식(true = -1, false = 0)입니다.":"2 字节 OLE 定义的 VARIANT_BOOL 类型（true = -1，false = 0）。\r\n","Ruft die Typbeschreibung der implementierten Schnittstellentypen ab, wenn eine Typbeschreibung eine COM-Klasse beschreibt.":"如果类型描述描述了 COM 类，则获取已实现接口类型的类型描述。\r\n","Возвращает число двойной точности с плавающей запятой, преобразованное из восьми байтов с указанной позицией в массив байтов.":"返回从指定位置的八个字节转换为字节数组的双精度浮点数。\r\n","Преобразует значение заданного 16-битового целого числа без знака в эквивалентное число с плавающей запятой одиночной точности.":"将指定的 16 位无符号整数的值转换为其等效的单精度浮点数。\r\n","Текущая длина этого объекта ":"此对象的当前长度\r\n","Eine Zahl.":"一个号码。\r\n"," ist nicht null.Zero":" 不为空。零\r\n","Eine komplexe Zahl, die einen Kosinus darstellt.":"表示余弦的复数。\r\n","Создает новый экземпляр типа, описывающего класс компонента (совместный класс).":"创建描述组件类（共享类）的类型的新实例。\r\n","Минимальная емкость для проверки. ":"最小测试容量。\r\n","-Objekt zugeordnet sind. ":"- 对象被分配。\r\n"," が null ではありません。":" ga空\r\n","지정된 10진수를 실제 변환 작업 없이 반환합니다.":"返回指定的十进制数而不进行任何实际转换。\r\n","Значение true показывает, что вызывающему объекту требуется неуниверсальное объединение.Операция продолжается только в том случае, если параметр ":"true 表示调用者需要非泛型联合。仅当参数\r\n","Вставляет строковое представление 64-разрядного целого числа без знака в данный экземпляр на указанную позицию символа.":"将无符号 64 位整数的字符串表示形式插入此实例的指定字符位置。\r\n","Die Identität, für die diese Überwachungsregel gilt.":"此监控规则适用的身份。\r\n","Преобразует значение заданного объекта в число с плавающей запятой одиночной точности.":"将指定对象的值转换为单精度浮点数。\r\n","-Objekt ab oder legt diese fest.Die DACL enthält Zugriffsregeln.":"对象。DACL 包含访问规则。\r\n","Bezeichnet den Typ der Klassenschnittstelle, der für eine Klasse generiert wird.":"标识为类生成的类接口的类型。\r\n","Число, представляющее тангенс. ":"代表切线的数字。\r\n","Der Name des Datenmembers.Der Standardwert ist der Name des Ziels, auf das das Attribut angewendet wird.":"数据成员的名称。默认为应用该属性的目标的名称。\r\n","Die Ausnahme, die ausgelöst wird, wenn der ":"抛出异常时\r\n","보다 작은 경우, ":"如果小于\r\n","지정된 64비트 부호 있는 정수의 값을 해당하는 8비트 부호 있는 정수로 변환합니다.":"将指定的 64 位带符号整数的值转换为等效的 8 位带符号整数。\r\n","열거형에서 건너뛸 요소 수입니다. ":"枚举中要跳过的元素数。\r\n","Segundo valor que se va a sumar.":"Segundo valor que se va a sumar。\r\n","Строка, содержащая сведения о версии.":"包含版本信息的字符串。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.":"将指定的 8 位带符号整数的值转换为等效的 64 位带符号整数。\r\n","Es wird nicht angegeben, ob der Parameter Informationen weitergibt oder empfängt.":"没有指定参数是传递还是接收信息。\r\n","Меняет знак указанного значения ":"更改指定值的符号\r\n","Имеется только один экземпляр переменной.":"该变量只有一个实例。\r\n","Указатель на интерфейс IErrorInfo, предоставляющий дополнительные сведения об ошибке.Можно задать IntPtr(0), чтобы использовать текущий интерфейс IErrorInfo, или IntPtr(-1), чтобы игнорировать текущий интерфейс IErrorInfo и создать исключение только из кода ошибки.":"指向提供有关错误的附加信息的 IErrorInfo 接口的指针。您可以指定 IntPtr(0) 以使用当前 IErrorInfo 接口，或指定 IntPtr(-1) 以忽略当前 IErrorInfo 接口并仅从错误代码中抛出异常。\r\n","true, если указанные объекты равны; в противном случае — false. ":"如果指定的对象相等则为真；否则，假的。\r\n","Показывает, что далее следует имя потока.":"表示后面是流名称。\r\n","Kopiert Daten aus einem eindimensionalen, verwalteten Array von Gleitkommazahlen mit doppelter Genauigkeit in einen nicht verwalteten Speicherzeiger.":"将数据从双精度浮点数的一维托管数组复制到非托管内存指针。\r\n","Unix 이외의 플랫폼의 경우 \"\\r\\n\"을 포함하는 문자열이거나 Unix 플랫폼의 경우 \"\\n\"을 포함하는 문자열입니다.":"在非 Unix 平台上包含“\\r\\n”的字符串或在 Unix 平台上包含“\\n”的字符串。\r\n",", содержащий исходный интерфейс источника из библиотеки типов.Этот интерфейс используется в COM для обратного вызова управляемого класса.":"包含来自类型库的原始源接口。此接口在 COM 中用于回调托管类。\r\n"," angeforderte Schnittstelle zurück.Dieser Parameter wird nicht initialisiert übergeben.":" 请求的接口。此参数未初始化传递。\r\n","Замещает все вхождения указанной строки в данном экземпляре на другую указанную строку.":"用另一个指定的字符串替换此实例中所有出现的指定字符串。\r\n"," 값 중 더 작은 값을 반환합니다.":" 값중더작은 값을 반환합니다。\r\n","데이터를 식별하는 데 사용되는 ":"用于识别数据\r\n"," 매개 변수가 제네릭 형식인 경우":" 如果参数是泛型类型\r\n","Блокирует текущий поток до получения сигнала текущим экземпляром, используя значение типа ":"阻塞当前线程，直到当前实例接收到信号，使用类型的值\r\n","가 잘못된 데이터 계약을 발견한 경우 throw되는 예외입니다. ":"检测到无效数据协定时抛出异常。\r\n","관리되지 않는 메모리의 지정된 오프셋 위치에서 읽은 바이트입니다.":"在非托管内存中指定偏移处读取的字节。\r\n","이 변수는 속성 브라우저가 아니라 개체 브라우저에 나타납니다.":"该变量出现在对象浏览器中，而不是属性浏览器中。\r\n"," bezeichnet werden kann.":" 可以指定。\r\n","Ruft die GUID des Objekttyps ab, der diesem ":"获取此对象类型的 GUID\r\n","Der Member ist eine normale Methode.":"该成员是一个普通的方法。\r\n"," gibt eine Position an, die nicht in ":" 指定一个不在的位置\r\n","호출 목록에서 제거할 대리자입니다.":"要从呼叫列表中删除的委托。\r\n","가 동일한 값을 가지면 true이고, 그렇지 않으면 false입니다.":"如果具有相同的值，则为 true；否则为 false。\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 16 位有符号整数的值转换为等效的 16 位无符号整数。\r\n","승을 나눌 숫자입니다.":"승을 나눌 숫자입니다。\r\n","Ein Eingabearray von 8-Bit-Ganzzahlen ohne Vorzeichen. ":"8 位无符号整数的输入数组。\r\n",", pasada mediante referencia, que define el medio de almacenamiento (memoria global, archivo de disco, objeto de almacenamiento, objeto de secuencia, interfaz de dispositivo gráfico (GDI) o indefinido) y la propiedad de ese medio para el objeto de datos de llamada.":"，通过引用传递，其定义存储介质（全局存储器、磁盘文件、存储对象、流对象、图形设备接口（GDI)或未定义）以及该介质的属性用于调用数据对象。\r\n","개체가 열렸을때 명시된 액세스 모드를 나타냅니다.":"指示打开对象时指定的访问模式。\r\n",".Класс, представляющий значение в таблице, не определяет конструктор по умолчанию.":"表示表中值的 .class 未定义默认构造函数。\r\n","두 개의 32비트 부호 없는 정수 중 더 큰 숫자를 반환합니다.":"返回两个 32 位无符号整数中较大的一个。\r\n",", данный метод не предоставляет фактическое число записанных байтов.":"，此方法不提供实际写入的字节数。\r\n","Размер каждого элемента в буфере.":"缓冲区中每个元素的大小。\r\n","관리되지 않는 메모리에서 읽은 정수입니다.32비트 컴퓨터에서는 32비트 정수가 반환되고 64비트 컴퓨터에서는 64비트 정수가 반환됩니다.":"从非托管内存中读取的整数。在 32 位机器上返回 32 位整数，在 64 位机器上返回 64 位整数。\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 16 位无符号整数的值转换为等效的 64 位无符号整数。\r\n","지정된 16비트 부호 있는 정수의 값을 해당하는 16비트 부호 없는 정수로 변환합니다.":"将指定的 16 位有符号整数的值转换为等效的 16 位无符号整数。\r\n","Преобразует значение заданного объекта в 32-битовое целое число со знаком.":"将指定对象的值转换为 32 位有符号整数。\r\n","테스트할 문자열입니다.이는 in/out 매개 변수입니다.":"要测试的字符串。这是一个输入/输出参数。\r\n"," значение BSTR, содержащее имя точки входа. ":" 包含入口点名称的 BSTR 值。\r\n",", не указывающий метод инициализации, исключения, создаваемые конструктором по умолчанию для ":"，其中没有指定初始化方法，默认构造函数抛出的异常为\r\n","지정된 32비트 부호 있는 정수 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.":"将指定的 32 位带符号整数值转换为等效的双精度浮点数。\r\n","구성 모니커의 구성 요소를 열거할 수 있는 열거자에 대한 포인터를 제공합니다.":"提供指向枚举器的指针，该枚举器可以枚举组合名字对象的组件。\r\n","-Wert ab, der diesem ":"-由此产生的价值\r\n","Das Typ-Objekt, das den Überwachungsregeln des aktuellen Instanz zugeordnet ist.":"与当前实例的监视规则关联的类型对象。\r\n","COM에 있는 size_is와 같이 배열 요소의 수가 들어 있고 0부터 시작하는 매개 변수를 나타냅니다.":"表示一个从零开始的参数，它包含数组中元素的数量，如 COM 中的 size_is。\r\n",", используемый при сериализации или десериализации. ":"序列化或反序列化时要使用的 。\r\n","Gibt einen DATE-Wert an.":"指定日期值。\r\n","Расположение, из которого считывается тип значения.Может потребоваться продумать проблемы выравнивания.":"读取值类型的位置，可能需要考虑对齐问题。\r\n","지정된 호출 규칙을 사용하여 ":"使用指定的调用约定\r\n","8바이트 부동 소수점 수입니다.":"一个 8 字节的浮点数。\r\n","-Objekt enthält darüber hinaus Informationen zum Typ des Objekts, auf das die Regel angewendet wird, zum Typ des untergeordneten Objekts, das die Regel erben kann, zur Art und Weise, auf die die Regel von untergeordneten Objekten geerbt wird, sowie zur Übertragung der Vererbung.":"-Object 还包含有关规则适用的对象类型、可以继承规则的子对象类型、子对象如何继承规则以及继承如何传播的信息。\r\n","Der Typ, des Objekts, das konvertiert werden soll. ":"要转换的对象的类型。\r\n","16-разрядное целое число без знака, которое эквивалентно значению параметра ":"与参数值等价的 16 位无符号整数\r\n","저장 미디어가 GDI(그래픽 장치 인터페이스) 구성 요소(HBITMAP)입니다.":"存储介质是图形设备接口 (GDI) 组件 (HBITMAP)。\r\n"," gleich sind, oder wenn ":" 是相同的，或者如果\r\n"," не является потокобезопасным; если доступ к экземпляру осуществляется из нескольких потоков, его поведение является неопределенным.Этот режим рекомендуется использовать только в том случае, если важна высокая производительность и экземпляр ":" 不是线程安全的；如果实例被多个线程访问，它的行为是未定义的。仅当高性能很重要并且实例被推荐时才推荐这种模式\r\n","보다 큰 수를 나타냅니다. ":"代表一个更大的数字。\r\n","Запрашиваемый интерфейс.":"请求的接口。\r\n","Das Ergebnis der bitweisen And-Operation.":"按位与运算的结果。\r\n","의사(pseudo) 난수 생성기를 나타냅니다. 이 장치는 무작위성에 대한 통계적인 특정 요구 사항과 일치하는 숫자 시퀀스를 생성합니다.이 유형의 .NET Framework 소스 코드를 찾아보려면 참조 소스를 참조하세요.":"表示伪随机数生成器。 This device generates a sequence of numbers matching certain statistical requirements for randomness. 若要查找此类 .NET Framework 源代码，请参阅参考源。\r\n","Объект, предоставляющий интерфейс.":"提供接口的对象。\r\n","Представляет используемый по умолчанию размер символа в системе. По умолчанию для систем Юникода задается значение 2, а для систем ANSI значение 1.Это поле доступно только для чтения.":"表示系统中的默认字符大小。 Unicode 系统的默认值为 2，ANSI 系统的默认值为 1。该字段是只读的。\r\n","Ein Verweis auf die Zeichenfolge mit dem verbleibenden Anzeigenamen, der analysiert werden soll. ":"对包含要解析的剩余友好名称的字符串的引用。\r\n"," gleich null ist.":" 等于零。\r\n","Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.":"将指定 Unicode 字符的值转换为等效的 32 位无符号整数。\r\n","Новое расширение (начинающееся с точки или без нее).Задает null для удаления существующего расширения из параметра ":"新扩展名（以点或不带点开头）。设置为 null 以从参数中删除现有扩展名\r\n","Не задает, передает ли параметр сведения или получает их.":"不指定参数是传递还是接收信息。\r\n",", ранее возвращенную методом ":", 先前由方法返回\r\n","Registriert das übergebene Objekt als eines der während einer Moniker-Operation gebundenen Objekte, das nach Abschluss der Operation freigegeben werden soll.":"将传递的对象注册为名字对象操作期间绑定的对象之一，在操作完成后释放。\r\n","함수 멤버 ID를 식별합니다.":"标识函数成员 ID。\r\n","입력 배열입니다.":"输入数组。\r\n"," 구조체, ":" 结构，\r\n"," [i].Этот параметр не может иметь значение null.Этот параметр передается без инициализации.":" [i].该参数不能为null。该参数不经初始化直接传递。\r\n"," angibt, wie in der folgenden Tabelle veranschaulicht.WertBedeutungKleiner als 0 (null)":" 如下表所示。Value的含义小于零\r\n"," 메서드에서 반환한 ":" 方法返回的\r\n","진입점을 포함하는 DLL 파일의 이름을 가져옵니다.":"获取包含入口点的DLL文件的名称。\r\n"," ist, gibt diese Methode einen ":" 是的，这个方法给出了一个\r\n","[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt] Gibt einen Zeiger auf eine IUnknown-Schnittstelle zurück, die die angegebene Schnittstelle für das Objekt des angegebenen Typs darstellt.Der benutzerdefinierte Zugriff auf Abfrageschnittstellen ist standardmäßig aktiviert.":"[仅在 .NET Framework 4.5.1 及更高版本中支持] 返回指向 IUnknown 接口的指针，该接口代表指定类型对象的指定接口。默认启用自定义查询接口访问。\r\n","Возвращает угол, представляющий собой арктангенс указанного комплексного числа.":"返回作为指定复数的反正切的角度。\r\n"," vorausgeht ":" 先于\r\n","Преобразовывает строку, зашифрованную для передачи по URL-адресу, в расшифрованную строку.":"将为传输到 URL 而加密的字符串转换为解密的字符串。\r\n","URI가 참조하는 리소스에 대한 경로입니다.":"URI 引用的资源的路径。\r\n","일 수 있습니다.":"或许\r\n","Кодируемая строка.":"编码字符串。\r\n","Kopiert Daten aus einem eindimensionalen, verwalteten Array von 64-Bit-Ganzzahlen mit Vorzeichen in einen nicht verwalteten Speicherzeiger.":"将数据从 64 位带符号整数的一维托管数组复制到非托管内存指针。\r\n","Извлекает код, определяющий тип возникшего исключения.":"检索确定抛出的异常类型的代码。\r\n","Регистрирует переход предоставленного объекта в состояние выполнения.":"注册提供的对象到运行状态的转换。\r\n","Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.":"将指定基数中数字的字符串表示形式转换为等效的 16 位带符号整数。\r\n","결합할 첫 번째 경로입니다. ":"合并的第一个路径。\r\n","При возвращении данного метода содержит ссылку на таблицу текущих объектов (ROT).Этот параметр передается без инициализации.":"当此方法返回时，包含对当前对象表 (ROT) 的引用。此参数无需初始化即可传递。\r\n","-Auflistung fest.":"- 收藏固定。\r\n","Gibt den Hyperbelkosinus der angegebenen komplexen Zahl zurück.":"返回指定复数的双曲余弦值。\r\n","-Objekts in einen 8-Bit-Wert mit Vorzeichen.":"对象为带符号的 8 位值。\r\n"," weist nicht das Eigenschaftenformat für einen ":" 没有 a 的属性格式\r\n","Gibt die kleinere von zwei Gleitkommazahlen mit einfacher Genauigkeit zurück.":"返回两个单精度浮点数中较小的一个。\r\n","Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl ohne Vorzeichen kleiner als ein ":"返回一个值，该值指示一个 64 位无符号整数是否小于一个\r\n","COM VARIANT를 변환할 형식입니다. ":"要将 COM VARIANT 转换为的类型。\r\n"," возвращает ":" 回报\r\n","Изменяет текущий набор, чтобы он содержал только элементы, которые также имеются в заданной коллекции.":"修改当前集合，使其仅包含指定集合中也存在的元素。\r\n",", описывающее эти данные.":"描述此数据的 。\r\n",", равное нулю (0), если освобождение прошло успешно.":"，如果发布成功则为零 (0)。\r\n","결합된 경로입니다.":"这是一条组合路径。\r\n","ITypeInfo 개체가 나타내는 형식의 이름을 검색합니다.":"检索由 ITypeInfo 对象表示的类型的名称。\r\n"," oder null ist.":" 或为零。\r\n","-Parameter zeigt.":"——参数显示。\r\n","Legt die Sicherheitsbeschreibung für dieses ":"为此设置安全描述符\r\n","Возвращает зарегистрированный объект, если предоставленное имя объекта зарегистрировано как выполняемое.":"如果提供的对象名称已注册为可执行文件，则返回已注册的对象。\r\n","Расположение в памяти, в которое выполняется запись.":"要写入的内存位置。\r\n","Определяет идентификатор члена функции.":"指定函数成员的 ID。\r\n","Вставляет строку в данный экземпляр на указанную позицию символа.":"将字符串插入此实例中的指定字符位置。\r\n",", то ":"， 那\r\n","Die Identität der Klasse von Objekten, für die die entfernte Zugriffssteuerungsregel gilt.":"远程访问控制规则适用的对象类的标识。\r\n","Ein Modul, das nur statische Funktionen und Daten enthalten kann (z. B. eine DLL).":"只能包含静态函数和数据（例如，DLL）的模块。\r\n","Definiert, aber nicht verwendet.Wird hier nur aus Gründen der Vollständigkeit aufgeführt.":"已定义但未使用。在此列出只是为了完整性。\r\n","인터페이스가 기본 동작을 사용하는 것으로 표시합니다.":"将接口标记为使用默认行为。\r\n"," no es igual al valor de ":" 不等于 \r\n","현재 인스턴스와 지정된 개체의 값이 같은지 여부를 나타내는 값을 반환합니다. ":"返回一个值，该值指示当前实例的值与指定对象的值是否相等。\r\n","-Objekt, aus dem eine interne Ganzzahldarstellung abgerufen werden soll.":"- 从中检索内部整数表示的对象。\r\n","Получает общее затраченное время в миллисекундах, измеренное текущим экземпляром.":"获取当前实例测量的总耗用时间（以毫秒为单位）。\r\n","Ruft die SACL für dieses ":"为此获取 SACL\r\n","Kombiniert drei Zeichenfolgen zu einem Pfad.":"将三个字符串组合成一个路径。\r\n","Rundet einen Dezimalwert auf den nächsten ganzzahligen Wert.":"将小数值四舍五入为最接近的整数值。\r\n"," с указанным сообщением об ошибке и внутренним исключением. ":" 带有指定的错误消息和内部异常。\r\n"," 매개 변수에 -1을 곱한 결과입니다.":" 매개 변수에 -1을 곱한 결과입니다.\r\n",", описывающее тип интерфейса, созданного для класса. ":"描述为类生成的接口类型的 。\r\n",", ，":", ,\r\n","Gibt eine nicht negative Zufallsganzzahl zurück.":"返回一个非负随机整数。\r\n","< 1 +бесконечность":"< 1 + 无穷大\r\n","구조체 요소, 매개 변수 또는 함수 반환 값을 한 프로세스에서 다른 프로세스로 전송하는 방법을 설명합니다.":"描述如何将结构元素、参数或函数返回值从一个进程传输到另一个进程。\r\n","1씩 감소하는 ":"减少 1\r\n","경과 시간을 정확하게 측정하는 데 사용할 수 있는 일련의 메서드와 속성을 제공합니다.이 유형에 대한 .NET Framework 소스 코드를 검색하려면 참조 소스를 참조하세요.":"提供一组可用于准确测量经过时间的方法和属性。要检索此类型的 .NET Framework 源代码，请参阅参考源。\r\n","При возвращении данного метода содержит число имен в массиве ":"当此方法返回时，包含数组中的名称数\r\n","부호 있는 4바이트 정수입니다.":"一个带符号的 4 字节整数。\r\n","개체가 이미 저장되어 있는 파일의 절대 경로입니다. ":"已存储对象的文件的绝对路径。\r\n","지정된 복소수의 제곱근을 반환합니다.":"返回指定复数的平方根。\r\n","부호 있는 64비트 정수로 변환할 값입니다.":"要转换为带符号的 64 位整数的值。\r\n","Definiert eine implizite Konvertierung einer 32-Bit-Ganzzahl mit Vorzeichen in einen ":"定义 32 位有符号整数到\r\n"," Присвоено недопустимое значение. -или-":" 分配了无效值。 -或者-\r\n","Представляет указатель на интерфейс ":"表示指向接口的指针\r\n","true, wenn der Verweiszähler erfolgreich inkrementiert wurde, andernfalls false.":"如果引用计数成功递增，则为 true，否则为 false。\r\n"," равно нулю. 1 Значение параметра ":" 等于零。 1 参数值\r\n","지정된 8비트 부호 있는 정수의 값을 해당하는 64비트 부호 있는 정수로 변환합니다.":"将指定的 8 位带符号整数的值转换为等效的 64 位带符号整数。\r\n","Flags, die die Vererbungseigenschaften des ACE angeben, die entfernt werden sollen.":"指定要删除的 ACE 的继承属性的标志。\r\n"," ein Objekt ist, dessen Wert null beträgt.Wenn ":" 是一个值为 null 的对象。如果\r\n","Показывает количество элементов в массиве фиксированной длины или количество знаков (не байтов) в импортируемой строке.":"显示固定长度数组中的元素数，或导入字符串中的字符数（不是字节数）。\r\n","Преобразует заданное логическое значение в эквивалентное десятичное число.":"将给定的布尔值转换为其等效的十进制数。\r\n","Вставляет одну или более копий указанной строки в данный экземпляр на указанную позицию символа.":"将指定字符串的一份或多份副本插入此实例的指定字符位置。\r\n","Новый размер выделенного блока.":"所选块的新大小。\r\n","래핑할 개체를 사용하여 ":"使用要包装的对象 \r\n","Среда хранения представляет собой метафайл (HMETAFILE).Для доступа к данным метафайла используются функции Windows или WIN32.Если элемент ":"存储介质是一个图元文件（HMETAFILE）。使用Windows或WIN32函数访问图元文件数据。如果元素\r\n","지정된 8비트 부호 없는 정수 값을 해당하는 10진수로 변환합니다.":"将指定的 8 位无符号整数值转换为其等效的十进制值。\r\n","스트림 개체에서 읽을 바이트 수입니다. ":"要从流对象中读取的字节数。\r\n","Возвращает целевой ":"返回目标\r\n","Копирует все символы вплоть до первого пустого из неуправляемой строки ANSI в управляемый объект ":"将非托管 ANSI 字符串中直到第一个 null 的所有字符复制到托管对象\r\n"," больше, чем длина данного экземпляра. ":" 大于此实例的长度。\r\n","정수 나누기를 사용하여 지정된 ":"使用整数除法指定\r\n","[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt] Konvertiert ein COM VARIANTE in ein Objekt eines angegebenen Typs . ":"[仅在 .NET Framework 4.5.1 和更新版本中受支持] 将 COM VARIANT 转换为指定类型的对象。\r\n","Значение true, если текущий экземпляр и 64-разрядное целое число без знака равны; в противном случае — значение false.":"如果当前实例和 64 位无符号整数相等，则为真；否则，假的。\r\n","Markiert ein Handle als ungültig.":"将句柄标记为无效。\r\n","Класс, Указанный ":"指定类别\r\n","Ruft die primäre Gruppe für dieses ":"获取此的主要组\r\n","Возвращает для указанной строки пути абсолютный путь.":"返回指定路径字符串的绝对路径。\r\n","매개 변수가 멤버의 반환 값입니다.":"参数是成员的返回值。\r\n","-Entsprechung der Zahl in ":"-中的数字对应\r\n","Преобразует значение заданного 32-разрядного целого числа без знака в эквивалентное 8-разрядное целое число без знака.":"将指定的 32 位无符号整数的值转换为其等效的 8 位无符号整数。\r\n","Возвращает значение e, возведенное в указанную степень.":"返回 e 的指定幂。\r\n","-Instanz mit einer reellen Zahl gleich 1 und einer imaginären Zahl gleich 0 zurück.":"实数等于 1，虚数等于 0 的实例。\r\n","이 래퍼에 포함된 개체를 가져옵니다.":"获取此包装器包含的对象。\r\n","[Поддерживается только в .NET Framework 4.5.1 и более поздних версиях] Преобразует COM VARIANT в объект заданного типа. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 将 COM VARIANT 转换为指定类型的对象。\r\n","의 요소 형식을 지정합니다.":"指定 的元素类型。\r\n"," 멤버가 null이면 대상 프로세스에서 DeleteEnhMetaFile을 사용하여 비트맵을 삭제해야 합니다.":" 如果该成员为空，则目标进程应使用 DeleteEnhMetaFile 删除位图。\r\n","관리되지 않는 ANSI 문자열에서 첫 번째 null 문자가 나올 때까지의 모든 문자를 관리되는 ":"匹配非托管 ANSI 字符串中直到并包括第一个空字符的所有字符\r\n",", не кэшируются.В этом случае при последующем вызове свойства ":", 不被缓存。在这种情况下，下次调用该属性时\r\n","지정된 부울 값을 해당하는 16비트 부호 있는 정수로 변환합니다.":"将指定的布尔值转换为等效的 16 位带符号整数。\r\n",", и создает моникер, соответствующий считанной части.":", 并创建一个对应于读取部分的名字对象。\r\n","Описание ошибки.Содержимое параметра ":"错误描述 参数内容\r\n","Преобразует значение заданного объекта в знак Юникода.":"将指定对象的值转换为 Unicode 字符。\r\n","이 속성은 속성 브라우저가 아니라 개체 브라우저에 나타납니다.":"此属性出现在对象浏览器中，而不是属性浏览器中。\r\n","해제하기 위해 등록 취소할 개체입니다. ":"要注销释放的对象。\r\n","Получает значение, представляющее единицу (1).":"获取表示单位 (1) 的值。\r\n","Число двойной точности с плавающей запятой, возводимое в степень. ":"要进行幂运算的双精度浮点数。\r\n","Die Revisionsebene des neuen ":"新的修订级别\r\n","두 개의 배정밀도 부동 소수점 수 중 더 큰 숫자를 반환합니다.":"返回两个双精度浮点数中较大的一个。\r\n"," в строку с помощью стандартного описателя формата \"o\" или \"r\" и преобразования строки обратно в объект ":" 使用标准“o”或“r”格式说明符将字符串转换回对象\r\n","Auf die Funktion kann nur anhand von IDispatch zugegriffen werden.":"只能使用 IDispatch 访问该函数。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 16비트 부호 있는 정수로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为 16 位有符号整数。\r\n","Gibt das angeforderte Verhalten beim Einrichten einer Advise-Senke oder einer Cachingverbindung mit einem Objekt an.":"指定在与对象建立建议接收器或缓存连接时请求的行为。\r\n",".Чтобы сделать тип сериализуемым, авторы типа должны определить для него контракт данных.":".\r\n","Valeur à diviser.":"值一个除数。\r\n","Число копируемых знаков.":"要复制的字符数。\r\n"," в этом потоке.Исключение не кэшируется.Значение свойства ":" 在这个线程中.Exception 没有被缓存.Property 值\r\n","배정밀도 부동 소수점 수의 부호를 나타내는 값을 반환합니다.":"返回一个表示双精度浮点数符号的值。\r\n","는 0보다 크거나 같아야 합니다.":"必须大于或等于零。\r\n","Der RCW, der freigegeben werden soll.":"将要发布的 RCW。\r\n","에서 COM VARIANT의 수입니다. ":"中 COM VARIANT 的数量。\r\n",", если его значение находится ровно посредине между двумя другими числами.":"如果它的值恰好在其他两个数字的中间。\r\n","2바이트 null로 끝나는 유니코드 문자열입니다.":"一个 2 字节的以 null 结尾的 Unicode 字符串。\r\n",", описывающее тип интерфейса, который требуется создать для класса.":"描述要为类创建的接口类型的 。\r\n"," меньше нуля и больше или равно длине ":" 小于零且大于或等于长度\r\n","Konvertiert den Wert des angegebenen Objekts in eine 32-Bit-Ganzzahl ohne Vorzeichen.":"将指定对象的值转换为 32 位无符号整数。\r\n","Gibt die interne Ganzzahldarstellung eines ":"返回 a 的内部整数表示\r\n"," 인스턴스에 따라 이 처리기 인스턴스가 자신과 동시에 호출될 수도 있습니다.":" 根据实例，此处理程序实例可能会与其自身同时被调用。\r\n","Ein Objekt, das das konvertierte HRESULT und die aus ":"包含转换后的 HRESULT 和输出的对象\r\n"," 구성 요소에 -1을 곱한 결과입니다.":" 组件乘以 -1 的结果。\r\n"," des Arguments vom falschen Typ an.Wenn mehrere Argumente einen Fehler zurückgeben, gibt ":" 错误类型的参数。如果多个参数返回错误，则返回\r\n","Этот тип лицензирован.":"此类型已获得许可。\r\n","Показывает размер ":"显示大小\r\n","Gibt einen Wert zurück, der angibt, ob die aktuelle Instanz und ein angegebenes Objekt über den gleichen Wert verfügen. ":"返回一个值，该值指示当前实例和指定对象是否具有相同的值。\r\n","Возвращает значение, определяющее, действительно ли значение ":"返回一个值，表示该值是否有效\r\n"," имеют значение null. Больше нуля":" 为空。零以上\r\n","과 같으면 이 메서드는 ":", 那么这个方法\r\n","Ein Unicode-Zeichen, das dem ":"对应于 dem 的 Unicode 字符\r\n","Возвращает угол, представляющий собой арксинус указанного комплексного числа.":"返回作为指定复数的反正弦的角度。\r\n","지정된 임계값에 도달한 경우 사용 중인 핸들을 추적하고 가비지 수집을 강제로 수행합니다.":"如果达到指定的阈值，它将跟踪正在使用的句柄并强制垃圾回收。\r\n","Получает значение, представляющее минус единицу (-1).":"获取表示负一 (-1) 的值。\r\n","입니다(여기서 ":"在哪\r\n","뺄 값(감수)입니다.":"要减去（减去）的值。\r\n"," 내에 있지 않은 위치를 나타내는 경우 ":" 表示不在范围内的位置\r\n","Возвращает логарифм по заданному основанию указанного комплексного числа.":"返回指定复数给定底数的对数。\r\n","Gibt an, dass der Name eines Speichers folgt.":"表示后面是店铺名。\r\n","Reserviert Speicher aus dem nicht verwalteten Arbeitsspeicher des Prozesses mit der angegebenen Anzahl von Bytes.":"按指定的字节数从进程的非托管内存中分配内存。\r\n","이 핸들 형식은 불투명 핸들을 나타냅니다. 즉, 핸들을 통해 고정된 개체의 주소를 확인할 수 없습니다.이 형식은 개체를 추적하고 가비지 수집기에서 수집하지 않도록 하는 데 사용할 수 있습니다.관리되지 않는 클라이언트에 관리되는 개체에 대한 유일한 참조가 있을 경우에는 가비지 수집기에서 이러한 참조를 발견할 수 없는데, 이럴 때 이 열거형 멤버를 사용하면 편리합니다.":"此句柄类型表示不透明句柄。 这意味着无法通过句柄解析固定对象的地址。此类型可用于跟踪对象并防止它们被垃圾收集器收集。如果非托管客户端具有对托管对象的唯一引用，则垃圾回收器将无法找到这些引用，这与此枚举成员一起使用很方便。\r\n","Идентификатор DISPID для этого члена. ":"该成员的 DISPID。\r\n"," отличен от нуля; в противном случае — значение false.":" 不同于零；否则，假的。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.":"将指定的 32 位无符号整数的值转换为等效的 32 位有符号整数。\r\n","관리되지 않는 메모리에서 읽은 바이트입니다.":"从非托管内存中读取的字节数。\r\n","; то есть, параметр ":";即参数\r\n","Строка, оканчивающаяся нулем и содержащая абсолютный путь к файлу, который требуется открыть. ":"一个以 null 结尾的字符串，包含要打开的文件的绝对路径。\r\n","함수의 속성을 정의하는 상수를 나타냅니다.":"表示定义函数属性的常量。\r\n"," с объектом, заключаемым в оболочку.":" 与包裹的物体。\r\n","Определяет, содержится ли конкретное значение в списке ":"确定特定值是否包含在列表中\r\n"," числа ":" 数字\r\n","플랫폼 종속 문자열, 즉 Windows 98에서는 ANSI, Windows NT 및 Windows XP에서는 유니코드입니다.LPTStr 형식의 문자열을 내보낼 수 없으므로 이 값은 플랫폼 호출에 대해서만 지원되고 COM interop에 대해서는 지원되지 않습니다.":"依赖于平台的字符串，即 Windows 98 上的 ANSI 和 Windows NT 和 Windows XP 上的 Unicode。无法导出 LPTStr 类型的字符串，因此该值仅支持平台调用，不支持 COM 互操作。\r\n","Число символов для вставки. ":"要插入的字符数。\r\n","Beschreibt die Ausnahmen, die während IDispatch::Invoke auftreten.":"描述 IDispatch::Invoke 期间发生的异常。\r\n","Тип значения, на которое ссылается ":"引用的值的类型\r\n","Die Variable ist die einzelne Eigenschaft, die das Objekt am besten darstellt.Nur eine Variable in den Typinformationen kann über dieses Attribut verfügen.":"变量是最能代表对象的单个属性。类型信息中只有一个变量可以具有此属性。\r\n"," нового экземпляра на получение системного сообщения, описывающего ошибку, такого как \"Заданный файл не найден\". В этом сообщении учитывается текущий язык и региональные параметры системы.":" 接收描述错误的系统消息的新实例，例如“找不到指定的文件”。此消息基于系统的当前区域性。\r\n","4-байтовое целое число со знаком.":"4 字节有符号整数。\r\n","Eine komplexe Zahl.":"一个复数。\r\n","Ein Wert, der der im ":"即时通讯的价值\r\n",".NET Framework 버전의 이름을 나타냅니다.":"指示 .NET Framework 版本的名称。\r\n"," является null, метод возвращает null.":" 为 null，则该方法返回 null。\r\n","Verweigert den Zugriff auf ein Objekt, eine Gruppe von Eigenschaften oder eine Eigenschaft.Der ACE enthält eine Gruppe von Zugriffsrechten, eine GUID, die den Typ des Objekts identifiziert, und ein ":"拒绝访问一个对象、一组属性或属性。ACE 包含一组访问权限、一个标识对象类型的 GUID 和一个\r\n","지정된 배정밀도 부동 소수점 숫자 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.":"将指定的双精度浮点数的值转换为等效的单精度浮点数。\r\n","Указывает, что сборка не может вызывать расширения прав. ":"指定程序集不能调用权限扩展。\r\n","Das Eingabearray.":"输入数组。\r\n","Especifica que el controlador puede heredarse mediante procesos secundarios.":"Specifica que el controlador puede heredarse mediante procesos secundarios。\r\n","Преобразует значение заданного 32-битового целого числа без знака в эквивалентное число с плавающей запятой одиночной точности.":"将指定的 32 位无符号整数的值转换为其等效的单精度浮点数。\r\n","Stellt die Anzahl der Argumente dar.":"表示参数的数量。\r\n"," Arrays.":" 阵列。\r\n","Указывает параметры сборки мусора для текущего процесса. ":"指定当前进程的垃圾回收选项。\r\n"," zugegriffen, sofern die Funktion keine Implementierung besitzt.":" 如果函数没有实现则访问。\r\n","true, wenn das angegebene Objekt eine Instanz von ":"如果指定的对象是的实例，则为真\r\n","Das Objekt, das die Schnittstelle bereitstellt. ":"提供接口的对象。\r\n","Der Typ des zurückzugebenden Arrays. ":"要返回的数组类型。\r\n","사용자 지정 데이터에 대한 변수를 가져옵니다.":"为您的自定义数据获取一个变量。\r\n",", с которой начинается подстрока. ":"子字符串开头的 。\r\n","Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.":"使用指定的区域性特定格式设置信息将指定对象的值转换为其等效的字符串表示形式。\r\n","Подсчитывает число дополнительных параметров.":"计算附加参数的数量。\r\n","Initialisiert eine neue Instanz der MarshalDirectiveException-Klasse mit einer angegebenen Fehlermeldung.":"使用指定的错误消息初始化 MarshalDirectiveException 类的新实例。\r\n","Gibt den Winkel zurück, der der Arkuskosinus der angegebenen komplexen Zahl ist.":"返回作为指定复数的反余弦的角度。\r\n","Показывает время последнего изменения хранилища, потока или массива байтов.":"显示上次修改存储、流或字节数组的时间。\r\n"," больше, чем длина данного экземпляра.-или-Длина значения ":" 大于此实例的长度。-或-值长度\r\n","Инкапсулируемый в обертку объект. ":"包裹的对象。\r\n","Definiert eine implizite Konvertierung einer 8-Bit-Ganzzahl mit Vorzeichen in einen ":"定义 8 位有符号整数到 a 的隐式转换\r\n","Указывает, что используются стили ":"表示正在使用样式\r\n","Gibt eine BSTR-Zeichenfolge an.":"指定 BSTR 字符串。\r\n","Сохраняет значение константы типа ":"存储类型常量的值\r\n","형식 라이브러리에 대한 대상 운영 체제는 64비트 Windows 시스템입니다.":"类型库的目标操作系统是 64 位 Windows 系统。\r\n","-Struktur, eine gebundene ":"-结构，一个界限\r\n","두 개의 64비트 부호 없는 정수 중 더 작은 숫자를 반환합니다.":"返回两个 64 位无符号整数中较小的一个。\r\n","-Klasse unter Verwendung des angegebenen Typs und Namens des Ereignisses für den Typ.":"使用指定的类型和事件名称作为类型的类。\r\n","Строка, содержащая имя контейнера, который содержит соответствующую пару ключей.":"一个字符串，其中包含包含匹配密钥对的容器的名称。\r\n"," встречает недопустимый контракт данных во время сериализации или десериализации. ":" 在序列化或反序列化期间遇到无效的数据协定。\r\n","관리되지 않는 메모리의 지정된 오프셋(또는 인덱스) 위치에서 싱글바이트를 읽습니다.":"在非托管内存中的指定偏移量（或索引）位置读取单个字节。\r\n"," или значение -0 при отрицательном ":" 如果为负，则值为 -0\r\n","지정된 배정밀도 부동 소수점 숫자 값을 해당하는 부울 값으로 변환합니다.":"将指定的双精度浮点数的值转换为等效的布尔值。\r\n"," с именем контейнера, содержащего пару ключей, используемую для создания строгого имени для сборки с данным атрибутом.":" 包含用于为具有给定属性的程序集生成强名称的密钥对的容器的名称。\r\n","이 함수는 GetLastError를 지원합니다.함수에서 오류가 발생하면 호출자가 GetLastError를 호출하여 오류 코드를 검색할 수 있습니다.":"该函数支持GetLastError，当函数发生错误时，调用者可以调用GetLastError获取错误码。\r\n","Entfernt alle Überwachungsregeln, die dieselbe Sicherheits-ID wie die angegebene Überwachungsregel enthalten, aus der SACL (System Access Control List), die diesem ":"从分配给此的 SACL（系统访问控制列表）中删除所有包含与指定监控规则相同的安全 ID 的监控规则\r\n","[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt] Konvertiert einen nicht verwalteten Funktionszeiger in einen Delegaten eines angegebenen Typs. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 将非托管函数指针转换为指定类型的委托。\r\n"," mit dem Klassenbezeichner der ursprünglichen Co-Klasse.":" 与原始共同类的类标识符。\r\n","지정된 단정밀도 부동 소수점 숫자 값을 해당하는 10진수로 변환합니다.":"将指定的单精度浮点数的值转换为其等效的十进制数。\r\n"," weist einen nicht unterstützten Typ auf.":" 是不受支持的类型。\r\n"," 개체를 부호 없는 바이트 값으로 변환하는 명시적 변환을 정의합니다.":" 定义显式转换以将对象转换为无符号字节值。\r\n"," меньше нуля или больше длины данного экземпляра. ":" 小于零或大于此实例的长度。\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.":"将数字的指定字符串表示形式转换为等效的 32 位无符号整数。\r\n"," представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, как указано в ":" 是一个零长度字符串，仅包含空格或一个或多个无效字符，如在\r\n","Массив объектов для форматирования. ":"要格式化的对象数组。\r\n","호출 목록에서 제거된 대리자입니다.":"从呼叫列表中删除的委托。\r\n","-Wert durch einen anderen und gibt das Ergebnis zurück.":"与另一个值并返回结果。\r\n","-Wert für eine einzelne implementierte Schnittstelle oder Basisschnittstelle in einer Typenbeschreibung ab.":"类型描述中单个已实现接口或基接口的值。\r\n","Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 8-битовое целое число со знаком.":"将指定的 32 位带符号整数的值转换为等效的 8 位带符号整数。\r\n","-Operanden zurück.(Das Vorzeichen des Operanden wird nicht geändert.)":"- 返回操作数。（操作数的符号不变。）\r\n","포트는 -1보다 작거나 65,535보다 큰 값으로 설정할 수 없습니다. ":"不能将端口设置为小于 -1 或大于 65,535 的值。\r\n","Второе из двух сравниваемых 8-разрядных целых чисел без знака. ":"正在比较的两个无符号 8 位整数中的第二个。\r\n"," с заданными релаксациями компиляции.":" 具有给定的编译放宽。\r\n","Функция, вызываемая при помощи синтаксиса присвоения ссылки свойству.":"使用属性引用赋值语法调用的函数。\r\n","Das Zielobjekt, an das der Ereignisdelegat gebunden werden soll.":"将事件委托绑定到的目标对象。\r\n","Der Typ, dessen Größe zurückgegeben werden soll. ":"要返回其大小的类型。\r\n","루트 디렉터리 정보를 가져올 경로입니다. ":"获取根目录信息的路径。\r\n"," que se va a comparar con el parámetro ":" 其中要与参数进行比较 \r\n","Описывает исключения, происходящие в процессе IDispatch::Invoke.":"描述 IDispatch::Invoke 过程中发生的异常。\r\n","Открывает указанный файл и инициализирует объект из содержимого файла.":"打开指定的文件并根据文件的内容初始化一个对象。\r\n","이 메서드가 데이터를 복사하기 전에 ":"在此方法复制数据之前\r\n","이 인터페이스는 런타임에서 멤버를 추가할 수 없습니다.":"此接口不能在运行时添加成员。\r\n"," liegt.":" 谎言。\r\n","Имя индексатора в том виде, в каком оно представляется в других языках программирования. ":"索引器在其他编程语言中的名称。\r\n","Gibt einen BSTR mithilfe der COM-Funktion SysFreeString frei.":"使用 SysFreeString COM 函数释放 BSTR。\r\n","Die Struktur mit den festzulegenden Bindungsoptionen. ":"包含要设置的绑定选项的结构。\r\n","При возвращении данного метода содержит ссылку на моникер, построенный из ":"当此方法返回时，包含对从中构造的名字对象的引用\r\n","COM에 노출할 기본 인터페이스를 지정합니다.이 클래스는 상속될 수 없습니다.":"指定要公开给COM的默认接口。此类不能被继承。\r\n","Un número.":"联合国编号。\r\n","-Klasse mit der angegebenen Fehlermeldung und der angegebenen internen Ausnahme. ":"具有指定错误消息和内部异常的类。\r\n"," genau in der Mitte zwischen zwei Ganzzahlen liegt, von denen eine gerade und die andere ungerade ist, wird die gerade Zahl zurückgegeben.Beachten Sie, dass diese Methode einen ":" 恰好在两个整数之间，其中一个是偶数，另一个是奇数，则返回偶数。请注意，此方法有一个\r\n","Gibt an, ob es sich bei einer verwalteten Schnittstelle um eine duale, auf Dispatch beschränkte oder auf IUnknown beschränkte Schnittstelle handelt, wenn diese für COM verfügbar gemacht wird.":"指示托管接口在暴露给 COM 时是双重的、仅调度的还是仅 IUnknown 的。\r\n","Definiert die Zuordnungsgröße des Arbeitsspeicherbereichs in Bytes.Diese Methode muss aufgerufen werden, bevor die ":"以字节为单位定义内存分配大小。必须在调用之前调用此方法\r\n"," utilizando un valor de punto flotante de precisión sencilla.":" 使用 un valor de punto flotante de precisión sencilla。\r\n","수집을 반드시 시작해야 하는 시점을 지정하는 값을 가져옵니다.":"获取一个值，该值指定何时必须启动集合。\r\n","Идентификатор элемента. ":"元素 ID。\r\n","char 값을 나타냅니다.":"代表一个字符值。\r\n"," 매개 변수의 가능한 가장 가까운 표현을 포함하는 개체입니다.":" 包含最接近参数表示的对象。\r\n","Создает на диске временный пустой файл с уникальным именем и возвращает полный путь этого файла.":"在磁盘上创建一个具有唯一名称的临时空文件并返回该文件的完整路径。\r\n","Одно из значений, перечисленных в следующей таблице. Параметр ":"下表所列值之一。范围\r\n","를 나타냅니다.":"代表。\r\n",".-или-Оба параметра ":"。-或两者\r\n","Возвращает 16-битовое целое число со знаком, преобразованное из двух байтов с указанной позицией в массив байтов.":"返回从指定位置的两个字节转换为字节数组的 16 位有符号整数。\r\n","Получает оболочку ":"获取外壳\r\n","Значение true, если целевой объект был извлечен; в противном случае — значение false.":"如果检索到目标，则为真；否则，假的。\r\n"," не задает позицию в ":" 不设置位置\r\n","Die Methode gibt die Anzahl von Zeichen zurück, die bei der Analyse von ":"该方法返回解析时使用的字符数\r\n","Konvertiert den Wert des angegebenen Objekts in eine 64-Bit-Ganzzahl ohne Vorzeichen.":"将指定对象的值转换为 64 位无符号整数。\r\n","에 정의된 잘못된 문자가 하나 이상 포함되어 있는 경우 ":"包含一个或多个定义在\r\n","Одно из значений из перечисления, задающее режим задержки. ":"指定延迟模式的枚举值之一。\r\n"," 매개 변수가 유효하지 않은 문자를 포함하거나, 비어 있거나, 공백만 포함하는 경우 ":" 该参数包含无效字符、为空或仅包含空格。\r\n","Базовый адрес для записи в собственной куче.":"要写入本机堆中的基地址。\r\n","Gibt an, dass die Aufrufkonvention Macintosh Programmers' Workbench (MPW) CDECL für eine Methode verwendet wird.":"指定 Macintosh 程序员工作台 (MPW) CDECL 调用约定用于方法。\r\n","Registriert den angegebenen Objektzeiger unter dem angegebenen Namen in der intern verwalteten Tabelle von Objektzeigern.":"在内部维护的对象指针表中以指定名称注册指定对象指针。\r\n"," 매개 변수의 값이 null이 아니면 네이티브 ANSI 문자열의 복사본을 보유하는 관리되는 문자열이고, 그렇지 않으면 이 메서드에서 null을 반환합니다.":" 如果参数的值为非 null，则托管字符串保存本机 ANSI 字符串的副本，否则此方法返回 null。\r\n"," = 1을 호출할 수 있습니다.이때 인스턴스를 하나 발견하면 검색을 중지합니다.종료할 때 발견한 인스턴스의 수를 알려 줍니다.":" = 1. 当它找到一个实例时，它停止搜索。当它退出时，它告诉我们它找到了多少个实例。\r\n","Строка, содержащая номер версии сборки.":"包含程序集版本号的字符串。\r\n","Gibt den Typ des Werts des Statusberichts an.":"指定状态报告值的类型。\r\n"," и копирует в него строку BSTR, хранящуюся в неуправляемой памяти.":" 并将存储在非托管内存中的 BSTR 字符串复制到其中。\r\n","Число, представляющее синус, где значение параметра ":"代表正弦的数字，其中参数的值\r\n","Enthält nach dem Beenden dieses Objekts die Zeit der letzten Änderung für dieses Objekt.Dieser Parameter wird nicht initialisiert übergeben.":"退出此对象后，包含此对象的最后修改时间。此参数未初始化传递。\r\n","Ссылка на моникер слева от данного моникера, если моникер является частью составного моникера. ":"如果名字对象是复合名字对象的一部分，则此名字对象左侧的名字对象引用。\r\n","배정밀도 부동 소수점 값을 가장 가까운 정수 값으로 반올림합니다.":"将双精度浮点值舍入到最接近的整数值。\r\n"," in den nicht verwalteten Speicher und konvertiert ihn beim Kopieren in das ANSI-Format.":" 到非托管内存并在复制时将其转换为 ANSI 格式。\r\n","Тип возвращаемых интерфейсов. ":"要返回的接口类型。\r\n","멤버가 없는 경우":"如果没有成员\r\n","Поле даты ":"日期字段\r\n"," и длинное знаковое целое число.":" 和一个长符号整数。\r\n","Ruft beim Überschreiben in einer abgeleiteten Klasse den Hashcode für die angegebene Zeichenfolge ab.":"在派生类中重写时，获取指定字符串的哈希码。\r\n","Преобразует значение заданного 16-битового целого числа без знака в эквивалентное логическое значение.":"将指定的 16 位无符号整数的值转换为其等效的布尔值。\r\n","Ruft den Wert einer Umgebungsvariable vom aktuellen Prozess ab. ":"从当前进程获取环境变量的值。\r\n","Eine plattformabhängige Zeichenfolge, d.&nbsp;h. ANSI unter Windows&nbsp;98 und Unicode unter Windows&nbsp;NT und Windows&nbsp;XP.Dieser Wert wird nur für Plattformaufrufe und nicht für COM-Interop unterstützt, da das Exportieren einer Zeichenfolge vom Typ LPTStr nicht unterstützt wird.":"依赖于平台的字符串，即H。 Windows 98 上的 ANSI 和 Windows NT 和 Windows XP 上的 Unicode。此值仅支持平台调用而不支持 COM 互操作，因为不支持导出 LPTStr 类型的字符串。\r\n","Ein logische OR-Verknüpfung von ":"的逻辑或组合\r\n","Преобразует значение заданного объекта в число с плавающей запятой двойной точности, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用指定的区域性特定格式设置信息将指定对象的值转换为双精度浮点数。\r\n","Gibt einen decimal-Wert an.":"指定十进制值。\r\n","Путь к Интернет- ресурсу. ":"Internet 资源的路径。\r\n","Ein Hashcode für das angegebene Objekt. ":"指定对象的哈希码。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.":"将指定的 64 位带符号整数的值转换为等效的双精度浮点数。\r\n","개체의 CLSID(클래스 식별자)를 검색합니다.":"检索对象的类标识符 (CLSID)。\r\n","사용자 지정 데이터의 구현 형식을 가져옵니다.":"获取自定义数据的实现类型。\r\n","Eine Long-Integer-Zahl, die den Tickzählerwert des zugrunde liegenden Zeitgebermechanismus angibt.":"一个长整数，指定底层计时器机制的滴答计数器值。\r\n","Указатель на память, выделенную с помощью метода ":"指向方法分配的内存的指针\r\n","Управляемый тип значения или форматированный ссылочный тип.К классу должен применяться атрибут ":"托管值类型或格式化引用类型。属性必须应用于类。\r\n","Исключение, представляющее ошибку, вызвавшую завершение процесса.Обычно это исключение в блоке catch.":"表示导致进程终止的错误的异常。这通常是 catch 块中的异常。\r\n"," со строкой сообщения, установленной на ":" 消息字符串设置为\r\n","이벤트 대리자가 바인딩될 대상 개체입니다.":"事件委托将绑定到的目标对象。\r\n","이 메서드는 반환될 때 구현된 인터페이스의 핸들에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含对已实现接口句柄的引用。此参数未初始化传递。\r\n",", используя указанное 16-разрядное целое число со знаком.":", 使用指定的 16 位有符号整数。\r\n","은(는) null을(를) 반환합니다.":"返回空值。\r\n","Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование. ":"源数组中从零开始的索引，从这里开始复制。\r\n","를 지수 ":"指数\r\n","Показывает смещение переменной внутри экземпляра.":"显示实例中变量的偏移量。\r\n","이 메서드는 반환될 때 이 개체를 저장하는 데 필요한 스트림의 크기를 바이트 단위로 나타내는 long 값을 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含一个 long 值，表示存储此对象所需的流的字节大小。此参数未初始化传递。\r\n"," zurück.Eine decodierte Zeichenfolge.":" 返回一个解码后的字符串。\r\n","Возвращаемое число с плавающей запятой одиночной точности. ":"返回的单精度浮点数。\r\n","Инициализирует экземпляр типа ":"初始化一个类型的实例\r\n","Establece el identificador en el identificador preexistente.":"将标识符设置为预先存在的标识符。\r\n"," ab, für die diese Regel gilt.":" 本规则适用的。\r\n","Definiert eine implizite Konvertierung einer 64-Bit-Ganzzahl ohne Vorzeichen in einen ":"定义 64 位无符号整数到\r\n","Die Basisadresse im systemeigenen Heap, in die geschrieben werden soll.":"要写入的本机堆中的基地址。\r\n","Der zurückzugebende boolesche Wert. ":"要返回的布尔值。\r\n","Задает определенный формат буфера обмена.":"指定特定的剪贴板格式。\r\n",", определяющий версию файла.":"指定文件版本的 。\r\n","Gibt die angegebene 16-Bit-Ganzzahl ohne Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.":"返回指定的 16 位无符号整数。不执行真正的转换。\r\n","부호 있는 2바이트 정수입니다.":"有符号的 2 字节整数。\r\n"," minus 3 und ist kleiner oder gleich der Länge von ":" minus 3 und ist kleiner or gleich der Lange von\r\n","Значение 0 указывает на положительное значение, а 1 — на отрицательное. ":"值为 0 表示正值，值为 1 表示负值。\r\n","-Objekt zugeordnet wird.":"- 对象已分配。\r\n","Получает все пользовательские элементы данных для библиотеки.":"获取库的所有用户数据成员。\r\n","Nach dem Beenden der Methode ein Verweis auf die angeforderte Schnittstelle.":"方法退出后，引用请求的接口。\r\n","Преобразует заданное логическое значение в эквивалентное 64-битовое целое число со знаком.":"将指定的布尔值转换为等效的 64 位带符号整数。\r\n","Возвращает заданное логическое значение; фактическое преобразование не производится.":"返回给定的布尔值；没有执行实际的转换。\r\n","확장명을 검색할 경로입니다. ":"搜索扩展的路径。\r\n","Указывает, что используются все стили, кроме ":"指定使用所有样式，除了\r\n","Gibt die Hilfekontext-ID des Themas in der Hilfedatei an.":"指定帮助文件中主题的帮助上下文 ID。\r\n"," für das angegebene Objekt zurück.":" 对于指定的对象。\r\n"," in das angegebene Array.":" 到指定的数组中。\r\n","을 열 액세스 모드를 표시할 STGM 열거형에 있는 값의 조합입니다. ":"STGM 枚举中值的组合，表示要打开的访问模式。\r\n"," zurück.Eine URL-codierte Zeichenfolge.":" return.A URL 编码的字符串。\r\n","Если в анализируемой строке содержится только время и отсутствует дата, методами анализа подразумевается дата по григорианскому календарю, в которой значение года равно 1, месяца — 1 и дня — 1.Если это значение не используется, подразумевается текущая дата.":"如果被解析的字符串只包含时间而没有日期，则解析方法假定公历日期的年值为 1，月值为 1，日值为 1。如果不使用此值，则当前日期为假定。\r\n","Возвращает меньшее из двух 16-битовых целых чисел со знаком.":"返回两个 16 位有符号整数中较小的一个。\r\n"," со строкой сообщения, для которой задана пустая строка (\"\"), параметром HRESULT, для которого задано значение COR_E_IO, и внутренним исключением, для которого задана пустая ссылка.":" 消息字符串设置为空字符串 (\"\")，HRESULT 设置为 COR_E_IO，内部异常设置为空引用。\r\n","Ссылка на контекст привязки, используемый при выполнении данной операции привязки. ":"对执行此绑定操作时要使用的绑定上下文的引用。\r\n","Konvertiert den Wert der aktuellen komplexen Zahl unter Verwendung des angegebenen Formats und der angegebenen kulturabhängigen Formatierungsinformationen für die reellen und imaginären Teile in die entsprechende Zeichenfolgendarstellung in kartesischer Form.":"使用实部和虚部的指定格式和区域性特定格式设置信息，将当前复数的值转换为其笛卡尔形式的等效字符串表示形式。\r\n"," — ключ из структуры ":" - 来自结构的关键\r\n","Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное логическое значение.":"将指定的单精度浮点数的值转换为其等效的布尔值。\r\n","Возвращает значение, определяющее, действительно 64-разрядное целое число со знаком меньше или равно значению ":"返回一个值，该值指示有效的 64 位带符号整数是否小于或等于值\r\n","Строка, чье значение совпадает с указанной подстрокой данного экземпляра.":"一个字符串，其值与此实例的指定子字符串匹配。\r\n","Модуль, т. е. расстояние от начала координат (точки пересечения осей X и Y) до числа.":"模数，即从原点（X 轴和 Y 轴的交点）到数字的距离。\r\n","Извлекает библиотеку типов, содержащую описание этого типа и его индекс внутри этой библиотеки типов.":"检索包含此类型及其在该类型库中的索引的描述的类型库。\r\n","두 개의 복소수를 더한 후 결과를 반환합니다.":"将两个复数相加并返回结果。\r\n","\".\"(마침표)를 포함한 지정된 경로의 확장명, null 또는 ":"指定路径的扩展名，包括“.”（句点）、null 或\r\n","Дата и время возвращаются в формате универсального времени (UTC).Если строка ввода указывает на локальное время с помощью указателя часового пояса или ":"日期和时间以通用时间 (UTC) 格式返回。如果输入字符串使用时区指示符指定本地时间，或者\r\n","형식 라이브러리는 용도가 제한되어 있지 않지만 사용자에게 표시되어서는 안 됩니다.형식 라이브러리는 컨트롤에 의해 사용되어야 합니다.호스트는 확장된 속성을 사용하여 컨트롤을 래핑하는 새 형식 라이브러리를 만들어야 합니다.":"类型库的用途没有限制，但它不应该对用户可见。类型库应该由控件使用。宿主应该创建一个新的类型库，用扩展属性包装控件。\r\n"," Objekt zugeordneten DACL.":" 对象关联的 DACL。\r\n","Идентификатор интерфейса (IID), выбранного клиентом для установки соединения с объектом, который определен моникером. ":"客户端选择的接口标识符 (IID)，用于与名字对象标识的实体建立连接。\r\n"," вместе с длиной ":" 随着长度\r\n","Eine Zeichenfolge, die .NET Framework-Versionsinformationen enthält.":"包含 .NET Framework 版本信息的字符串。\r\n","가장 가까운 16비트 부호 없는 정수로 반올림된 ":"四舍五入到最接近的 16 位无符号整数\r\n","Возвращает максимальную емкость данного экземпляра.":"返回此实例的最大容量。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.":"将指定的单精度浮点数的值转换为等效的 64 位带符号整数。\r\n","메서드, 필드 또는 속성의 COM DispId(디스패치 식별자)를 지정합니다.":"指定方法、字段或属性的COM调度标识符(DispId)。\r\n","Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное 32-битовое целое число без знака.":"将指定的 64 位带符号整数的值转换为等效的 32 位无符号整数。\r\n","Konvertiert den Wert der angegebenen Dezimalzahl in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.":"将指定的十进制数的值转换为等效的 32 位带符号整数。\r\n","Número complejo que se va a dividir.":"Number complejo que se va a divider。\r\n","Diese Methode gibt den neu erstellten Enumerator zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回新创建的枚举器。此参数未初始化传递。\r\n","Собственный тип, связанный с ":"关联的本机类型\r\n","Das HRESULT, das der bereitgestellten Ausnahme zugeordnet ist.":"与提供的异常关联的 HRESULT。\r\n","클라이언트 컴파일러가 형식 설명의 멤버를 바인딩할 수 있도록 하는 형식 설명에 대한 ITypeComp 인터페이스를 검색합니다.":"检索类型描述的 ITypeComp 接口，允许客户端编译器绑定类型描述的成员。\r\n","형식 라이브러리의 대상 하드웨어 플랫폼을 나타냅니다.":"指示类型库的目标硬件平台。\r\n","반환할 배열의 형식입니다. ":"要返回的数组类型。\r\n","개체의 데이터를 전송하는 데 사용되는 저장 미디어 형식을 나타내는 ":"表示用于传输对象数据的存储介质类型。\r\n","Ruft den Namen eines ":"呼唤一个人的名字\r\n","이 스트림을 쓸 버퍼입니다. ":"将此流写入的缓冲区。\r\n","Хэш-код указанного объекта. ":"指定对象的哈希码。\r\n","-Objekt für Schreibzugriff.":"- 用于写访问的对象。\r\n","형식 라이브러리에 있는 형식 설명의 수입니다.":"类型库中类型描述的数量。\r\n","Знак Юникода, являющийся значением по умолчанию. ":"Unicode 字符，这是默认值。\r\n","Die Methode gibt einen Zeiger auf eine Ganzzahl zurück, die einen Wert aus der MKSYS-Enumeration darstellt und sich auf eine der COM-Monikerklassen bezieht.Dieser Parameter wird nicht initialisiert übergeben.":"该方法返回一个指向整数的指针，该整数表示 MKSYS 枚举中的值并引用其中一个 COM 名字对象类。此参数未初始化传递。\r\n","-Parameter ein COM-Typ ist, andernfalls false.":"参数是 COM 类型，否则为 false。\r\n","비관리 코드에서 지정된 개체의 크기(바이트)입니다. ":"非托管代码中指定对象的大小（以字节为单位）。\r\n","Definiert eine implizite Konvertierung einer 64-Bit-Ganzzahl ohne Vorzeichen in eine komplexe Zahl.":"定义 64 位无符号整数到复数的隐式转换。\r\n","지정된 64비트 부호 없는 정수 값을 해당하는 10진수로 변환합니다.":"将指定的 64 位无符号整数值转换为其等效的十进制值。\r\n","-Parameters, multipliziert mit -1.":"-参数，乘以-1。\r\n","Осуществляет поиск указанного объекта и возвращает индекс (с нуля) первого вхождения, найденного в пределах всей коллекции ":"搜索指定的对象并返回在整个集合中找到的第一个匹配项的从零开始的索引\r\n","Der auf 0 (null) basierende Index, ab dem kopiert wird.":"要从中复制的从零开始的索引。\r\n","대/소문자를 구분하는 서수 문자열을 비교하는 ":"比较区分大小写的序号字符串\r\n","Логарифм по основанию 10 для числа ":"数字的以 10 为底的对数\r\n","Значение S_OKHRESULT, если заданный ключ был успешно удален из таблицы; в противном случае — значение S_FALSEHRESULT.":"S_OKHRESULT 如果指定的键成功地从表中删除；否则，S_FALSEHRESULT 的值。\r\n","Абсолютное значение параметра ":"Абсолютное значение параметра\r\n"," и возвращает остаток.":" 并返回余数。\r\n","Это свойство или метод никогда не отображается в редакторе.":"此属性或方法永远不会显示在编辑器中。\r\n"," меньше или равно другому значению типа ":" 小于或等于另一个类型值\r\n","Преобразует значение заданного 32-битового целого числа без знака в эквивалентное 64-битовое целое число со знаком.":"将指定的 32 位无符号整数的值转换为等效的 64 位有符号整数。\r\n","Определяет параметры форматирования, задающие пользовательские настройки синтаксического анализа строки для ряда методов синтаксического анализа даты и времени.":"定义格式化选项，这些选项为许多日期和时间解析方法指定自定义字符串解析首选项。\r\n",", используя 64-разрядное знаковое целое число.":", используя 64-разрядное знаковое целое число.\r\n","При возвращении данного метода содержит экземпляр ITypeComp для ITypeLib.Этот параметр передается без инициализации.":"当此方法返回时，包含 ITypeLib 的 ITypeComp 实例。此参数无需初始化即可传递。\r\n","Gibt ein unsignedshort an.":"指定一个 unsignedshort。\r\n","Получает все пользовательские данные для заданного типа реализации.":"获取给定实现类型的所有用户数据。\r\n","Gibt ein Objekt vom angegebenen Typ zurück, dessen Wert dem angegebenen Objekt entspricht.":"返回值为指定对象的指定类型的对象。\r\n","관리되지 않는 메모리에 프로세서의 기본 크기로 지정된 정수 값을 씁니다.":"将处理器本机大小的整数值写入非托管内存。\r\n","Массив имен, которые следует сопоставить. ":"要匹配的名称数组。\r\n",", который только что начал измерять затраченное время.":"，它刚刚开始测量经过的时间。\r\n"," zu kopieren.":" 复制。\r\n","Eine Zeichenfolge mit der Länge 1, oder null. ":"长度为 1 或零的字符串。\r\n","Создает новый объект-поток с собственным указателем поиска, ссылающимся на те же байты, что и исходный поток.":"创建一个新的流对象，它自己的搜索指针指向与原始流相同的字节。\r\n","Возвращает значение, определяющее знак числа двойной точности с плавающей запятой.":"返回指定双精度浮点数符号的值。\r\n"," zurückgegebene Zeichenfolge ohne den letzten Punkt (.) und alle folgenden Zeichen.":" 返回没有最后一个句点 (.) 和所有后续字符的字符串。\r\n","Das HRESULT für den letzten Win32-Fehlercode.":"最近的 Win32 错误代码的 HRESULT。\r\n","Lässt eine Optimierung zu, bei der der Compiler im Typ \"abc\" nach dem Member \"xyz\" sucht.Wenn ein solcher Member gefunden und als Accessorfunktion für einen Member der Standardauflistung markiert wird, wird ein Aufruf dieser Memberfunktion generiert.Zulässig für Member an Dispatchschnittstellen und Schnittstellen, nicht zulässig für Module.":"允许编译器在类型“abc”中查找成员“xyz”的优化。如果找到这样的成员并将其标记为默认集合成员的访问器函数，则会生成对该成员函数的调用。允许调度接口和接口上的成员，不允许用于模块。\r\n","-Objekts angeben.":"-指定对象。\r\n","Die Meldung, in der die Ursache für die eingetretene Ausnahme angegeben wird. ":"提供发生异常的原因的消息。\r\n","지정된 단정밀도 부동 소수점 숫자 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.":"将指定的单精度浮点数的值转换为等效的双精度浮点数。\r\n","Stellt ein Verbindungstoken dar, das bei einem Aufruf von ":"表示调用时返回的连接令牌\r\n","Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"在给定指定的区域性特定格式设置信息的情况下，将指定的 64 位带符号整数的值转换为其等效的字符串表示形式。\r\n","Ein Zeiger auf eine Struktur für Ausnahmeinformationen, die nur bei Rückgabe von DISP_E_EXCEPTION aufgefüllt wird. ":"指向异常信息结构的指针，仅在 DISP_E_EXCEPTION 返回时填充。\r\n"," представляет собой объект, значение которого равно null.Если значением параметра ":" 是一个值为null的对象，如果参数的值\r\n"," ist ein Referenztyp, der keine formatierte Klasse ist. ":" 是不是格式化类的引用类型。\r\n"," 개체의 이름을 가져옵니다.":" 获取对象的名称。\r\n","Ruft einen benutzerdefinierten Namen für ein Auflistungselement ab oder legt ihn fest.":"Ruft einen beutzerdefinierten Namen für ein Auflistungselement ab oder leg t ihn fest。\r\n","은 더 이상 필요하지 않을 때 ":"当它不再是必要的 \r\n","Строка, состоящая из шестнадцатеричных пар, разделенных дефисами, где каждая пара предоставляет соответствующий элемент в ":"由连字符分隔的十六进制对组成的字符串，其中每对提供一个对应的元素\r\n","관리되지 않는 메모리의 지정된 오프셋 위치에서 32비트 부호 있는 정수를 읽습니다.":"从指定偏移量处的非托管内存中读取一个 32 位有符号整数。\r\n","Возвращает гиперболический синус указанного комплексного числа.":"返回指定复数的双曲正弦值。\r\n",", описывающий ошибку.Содержимое параметра ":", описывающий ошибку.Содержимое параметра\r\n","Копирует данные из одномерного управляемого массива чисел с плавающей запятой одинарной точности в указатель неуправляемой памяти.":"将数据从单精度浮点数的一维托管数组复制到非托管内存指针。\r\n","정수 값입니다.":"整数值。\r\n","null sein.Dieser Parameter wird nicht initialisiert übergeben.":"为空。此参数未初始化传递。\r\n","Показывает значение float.":"显示浮点值。\r\n","가 0이 아니면 true이고, 그렇지 않으면 false입니다.":"如果 非零则为真；否则为假。\r\n","Das zu vergleichende Objekt.":"要比较的对象。\r\n","Частное от деления.":"除法的商。\r\n","이 정보를 설명하는 ":"解释这个信息\r\n",".Если ошибка возвращается для нескольких аргументов, ":".如果为多个参数返回错误，\r\n","사용할 수 있는 고유한 임시 파일 이름이 없는 경우와 같은 I/O 오류가 발생한 경우또는이 메서드로 임시 파일을 만들지 못한 경우":"当发生 I/O 错误时，例如当没有可用的唯一临时文件名时，或者当此方法无法创建临时文件时。\r\n","-Objekt zugeordnet ist.Geschützte DACLs erben keine Zugriffsregeln von übergeordneten Containern.":"对象。受保护的 DACL 不从父容器继承访问规则。\r\n","-Struktur mit dem Wert einer 64-Bit-Ganzzahl ohne Vorzeichen.":"具有 64 位无符号整数值的结构。\r\n","Возвращает адрес объекта в дескрипторе ":"返回句柄中对象的地址\r\n","-Objekt zugeordnete DACL eine kanonische Reihenfolge aufweist.":"- 对象关联的 DACL 具有规范顺序。\r\n","형식 라이브러리의 원본 소스 인터페이스를 포함하는 ":"包含类型库的原始源接口 \r\n","Возвращает или задает путь к ресурсу, на который ссылается URI.":"获取或设置 URI 引用的资源的路径。\r\n","Addiert zwei ":"加两个\r\n","Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl mit Vorzeichen größer als ein oder gleich einem ":"返回一个值，该值指示 64 位有符号整数是否大于或等于 1\r\n","-Klasse und ihrer untergeordneten Klassen verwendet.":"类及其子类。\r\n","Stellt einen Verweis auf das Argumentarray dar.":"表示对参数数组的引用。\r\n","Die Variable wird als einzelne Eigenschaft zugeordnet, die gebunden werden kann.":"变量被分配为可以绑定的单个属性。\r\n","Ruft das von dem ":"从他那里得到那个\r\n","Переменная отображается по умолчанию в пользовательском интерфейсе.":"该变量默认显示在用户界面中。\r\n","Создает новый моникер на основании общего префикса, который данный моникер использует совместно с другим моникером.":"根据此名字对象与另一个名字对象共享的公共前缀创建新名字对象。\r\n","Valor entero con signo que indica la relación de esta instancia con ":"Valor entero con signo que indica la relación de esta instantia con\r\n","Строковое представление текущего экземпляра в прямоугольной системе координат.":"当前实例在直角坐标系中的字符串表示形式。\r\n","Объект, размер которого возвращается. ":"返回其大小的对象。\r\n"," 값보다 작거나 같은지를 나타내는 값을 반환합니다.":" 返回一个指示小于或等于某个值的值。\r\n"," меньше нуля или больше, чем длина ":" 小于零或大于长度\r\n","Преобразует значение заданного объекта в 64-битовое целое число без знака.":"将指定对象的值转换为无符号 64 位整数。\r\n","-Objekt ab, das einen Ordinalzeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung ausführt.":"执行不区分大小写的序号字符串比较的对象。\r\n"," и равен значению текущего экземпляра; в противном случае — false.":" 并且等于当前实例的值；否则，假的。\r\n","Die zuzuweisende ":"被分配的那个\r\n"," y devuelve el resultado.":" y devuelve el resultado。\r\n","Konvertiert den Wert des angegebenen Objekts in eine Gleitkommazahl mit doppelter Genauigkeit.":"将指定对象的值转换为双精度浮点数。\r\n","Ein plattformspezifisches Trennzeichen, das zur Trennung von Pfadzeichenfolgen in Umgebungsvariablen verwendet wird.":"用于分隔环境变量中的路径字符串的特定于平台的定界符。\r\n","Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 32-битовое целое число без знака.":"将指定的 8 位无符号整数的值转换为等效的 32 位无符号整数。\r\n","IUnknown 인터페이스에 대한 포인터입니다. ":"指向 IUnknown 接口的指针。\r\n"," utilizando un valor entero de 32 bits sin signo.":" 使用 entero de 32 位 sin signo 值。\r\n","Entfernt alle Zugriffsregeln, die dieselbe Sicherheits-ID und denselben Qualifizierer wie die angegebene Zugriffsregel in der DACL (Discretionary Access Control List) enthalten, die diesem ObjectSecurity`1-Objekt zugeordnet ist, und fügt anschließend die angegebene Zugriffsregel hinzu.":"删除所有包含与此 ObjectSecurity`1 对象关联的自由访问控制列表 (DACL) 中的指定访问规则相同的安全 ID 和限定符的访问规则，然后添加指定的访问规则。\r\n","Складывает значения двух указанных объектов ":"将两个指定对象的值相加\r\n","Число структур ":"结构数量\r\n"," ist, -π/2 auf doppelte Genauigkeit gerundet (-1,5707963267949), wenn ":" 即，-π/2 四舍五入为双精度 (-1.5707963267949) 如果\r\n"," 매개 변수로 지정된 현재 ":" 指定为参数的电流\r\n"," имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.":" 具有两个整数之间的平均值，将返回偶数；所以 4.5 转换为 4，5.5 转换为 6。\r\n","지정된 복소수의 아크탄젠트인 각도를 반환합니다.":"返回作为指定复数的反正切的角度。\r\n","이 메서드가 반환되지 않으므로 메모리 할당 작업이 없는 STATSTG 구조체의 멤버입니다. ":"没有内存分配操作的 STATSTG 结构成员，因为此方法不返回。\r\n","Componente real de un número complejo.":"Componente real de a number complejo。\r\n","부호 있는 8바이트 정수입니다.":"一个 8 字节有符号整数。\r\n"," для этого типа. Для преобразования используются язык и региональные параметры \"английский (США)\". ":" 对于这种类型。用于转换的语言和文化是英语（美国）。\r\n"," не имеет значение null, процесс назначения должен использовать IStream::Release для освобождения компонента потока.":" 不为空，目标进程必须使用 IStream::Release 来释放流组件。\r\n",", задающее свойства метода с атрибутами. ":"一个 ，它指定特性化方法的属性。\r\n","Stellt eine Kombination aus der Identität eines Benutzers und einer Zugriffsmaske dar.":"表示用户身份和访问掩码的组合。\r\n"," и возвращает целое число, которое показывает, является ли значение данного экземпляра меньшим, большим или равным значению указанного объекта.":" 并返回一个整数，指示此实例的值是小于、大于还是等于指定对象的值。\r\n"," превышает максимальную длину, разрешенную операционной системой.":"超过操作系统允许的最大长度。\r\n"," und kopiert eine angegebene Anzahl von Zeichen aus einer nicht verwalteten Unicode-Zeichenfolge hinein.":" 并将非托管 Unicode 字符串中指定数量的字符复制到其中。\r\n","Добавляет строковое представление указанного 32-разрядного целого числа со знаком к данному экземпляру.":"将指定的 32 位带符号整数的字符串表示形式添加到此实例。\r\n","Multipliziert zwei angegebene komplexe Zahlen.":"将两个指定的复数相乘。\r\n","Расположение, с которого начинается запись.Может потребоваться продумать проблемы выравнивания.":"录制开始的位置。可能需要考虑对齐问题。\r\n","), этот метод инициализации вызывает исключение (или ему не удается обработать исключение) во время первого вызова свойства ":"), 此初始化方法在第一次调用该属性期间抛出异常（或无法处理异常）\r\n","Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 32-битовое целое число без знака.":"将指定的单精度浮点数的值转换为其等效的 32 位无符号整数。\r\n","Значение, прикрепляемое к ":"附加价值\r\n","지정된 64비트 부호 있는 정수 값을 해당하는 10진수로 변환합니다.":"将指定的 64 位带符号整数值转换为其等效的十进制值。\r\n","Гиперболический тангенс ":"双曲正切\r\n","메모리 영역의 할당 크기(바이트)를 정의합니다.":"定义内存区域的分配大小（以字节为单位）。\r\n","Ein ACE wird von einem übergeordneten Container geerbt und nicht explizit für ein Objekt festgelegt.":"ACE 是从父容器继承的，并且未在对象上显式设置。\r\n","Der Name der DLL, die die nicht verwaltete Methode enthält.Dieser kann einen Assemblyanzeigenamen einschließen, wenn die DLL in einer Assembly enthalten ist.":"包含非托管方法的 DLL 的名称。如果 DLL 包含在程序集中，这可以包括程序集显示名称。\r\n","Целевая операционная система для библиотеки типов — Apple Macintosh.По умолчанию все поля данных выравниваются по границам четных байтов.":"类型库的目标操作系统是 Apple Macintosh。默认情况下，所有数据字段都在偶字节边界上对齐。\r\n","Задает требуемое поведение при настройке приемника уведомления или подключения кэширования с объектом.":"指定配置通知接收器或缓存与对象的连接时所需的行为。\r\n","Объект, на который указывает ссылка, или значение null.":"引用指向的对象，或 null。\r\n","반환할 변수 설명의 인덱스입니다. ":"要返回的变量描述的索引。\r\n"," potenziert werden soll.":" 应该加强。\r\n","Символы, следующие за последним символом каталога в пути ":"路径中最后一个目录字符之后的字符\r\n","Die Zugriffsmaske für den ACE.":"ACE 的访问掩码。\r\n","Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"给定指定的区域性特定格式设置信息，将指定的 16 位带符号整数的值转换为其等效的字符串表示形式。\r\n"," oder":" 或者\r\n","Пространство имен контракта данных.":"Пространство имен контракта данных。\r\n"," указанными целочисленными значениями без знака.":" 指定的无符号整数值。\r\n","Die Identität, für die die Zugriffsregel gilt.":"访问规则适用的身份。\r\n","Копирует данные из указателя неуправляемой памяти в управляемый массив символов.":"将数据从非托管内存指针复制到托管字符数组。\r\n","지정된 배정밀도 부동 소수점 숫자보다 작거나 같은 최대 정수를 반환합니다.":"返回小于或等于指定双精度浮点数的最大整数。\r\n","입니다.COM에서는 이 인터페이스를 사용하여 관리되는 클래스를 다시 호출합니다.":"这是一个伟大的app.COM 使用此接口再次调用托管类。\r\n","Значение true, если указанный объект ":"Значение true, если указанный объект\r\n"," заданным типом. ":" 给定的类型。\r\n","Выполняет привязку к описаниям типов, содержащимся в библиотеке типов.":"绑定到类型库中包含的类型声明。\r\n"," einen absoluten Pfad enthält, gibt diese Methode ":" 包含绝对路径，此方法返回\r\n"," если он найден в списке; в противном случае его значение равно -1.":" 如果在列表中找到；否则，它的值为-1。\r\n","Gibt den Winkel zurück, der der Arkustangens der angegebenen komplexen Zahl ist.":"返回作为指定复数的反正切的角度。\r\n","Адрес в неуправляемой памяти, куда скопирована строка ":"字符串被复制到的非托管内存中的地址\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的 32 位有符号整数。\r\n","Ruft die gesamte verstrichene Zeit, die von der aktuellen Instanz gemessen wurde, in Zeitgeberintervallen (Ticks) ab.":"获取当前实例在计时器间隔（滴答）中测量的总经过时间。\r\n","형식 설명이 COM 클래스를 설명할 경우 구현된 인터페이스 형식에 대한 형식 설명을 검색합니다.":"如果类型描述描述的是 COM 类，则检索已实现接口类型的类型描述。\r\n","< 0(beliebiger Wert)NaN(beliebiger Wert)":"< 0（任何值）NaN（任何值）\r\n","Определяет пользовательский атрибут имени продукта для манифеста сборки.":"为程序集清单定义自定义产品名称属性。\r\n","COM interop 호출 중에 발생하는 HRESULT 또는 retval 시그니처 변환을 생략해야 함을 나타냅니다.":"指示应省略在 COM 互操作调用期间发生的 HRESULT 或 retval 签名转换。\r\n","에서 생성한 URI가 포함된 ":"包含由生成的 URI\r\n","VT_CY 형식으로 마샬링할 래핑된 개체를 가져옵니다.":"获取要以VT_CY类型封送的包装对象。\r\n","비관리 코드에 전달할 대리자입니다.":"传递给非托管代码的委托。\r\n","Dieser Handletyp wird zum Überwachen eines Objekts verwendet, lässt jedoch das Sammeln zu.Beim Sammeln eines Objekts wird der Inhalt von ":"此类句柄用于监视对象，但允许收集。收集对象时，其中的内容\r\n","Строка длиной в 1 знак. ":"该字符串的长度为 1 个字符。\r\n"," 클래스의 새 인스턴스를 만들고 버퍼 핸들이 안정적으로 해제될지 여부를 지정합니다. ":" 创建该类的新实例并指定是否可靠地释放缓冲区句柄。\r\n","Получает тип реализации пользовательских данных.":"获取用户数据的实现类型。\r\n","-Objekt.Geben Sie null an, um eine leere ACL zu erstellen.":"对象。指定 null 以创建空 ACL。\r\n","Der neue Wert des Verweiszählers für den ":"引用计数的新值\r\n","인터페이스 멤버의 식별자입니다. ":"接口成员的标识符。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.":"将指定的单精度浮点数的值转换为等效的 16 位无符号整数。\r\n","에 할당할 값입니다.":"要分配给 的值。\r\n","Текст для преобразования в кодировку URL.":"要转换为 URL 编码的文本。\r\n","Запись измененного объекта в таблице текущих объектов (ROT). ":"当前对象表 (ROT) 中已更改对象的记录。\r\n","Gibt den Dateinamen und die Erweiterung der angegebenen Pfadzeichenfolge zurück.":"返回指定路径字符串的文件名和扩展名。\r\n","Gibt den Sinus der angegebenen komplexen Zahl zurück.":"返回指定复数的正弦值。\r\n","Diese Methode gibt einen Verweis auf die aufgelisteten Elemente zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回对所列项目的引用。此参数未初始化传递。\r\n","-Struktur zurückgegeben wurde.":"结构被返回。\r\n","Хэш-код, созданный для URI.":"为 URI 生成的哈希码。\r\n","Der natürliche Logarithmus (zur Basis e) von ":"的自然对数（以 e 为底）\r\n","При возвращении данного метода содержит имя (или имена), связанное с элементом.Этот параметр передается без инициализации.":"当此方法返回时，包含与元素关联的名称。此参数无需初始化即可传递。\r\n","Индекс реализованного типа, дескриптор которого возвращается. ":"返回其描述符的已实现类型的索引。\r\n","-Schnittstelle implementiert. ":"-接口实现。\r\n","지정한 함수 ID에 해당하는 지정한 멤버 ID를 가진 변수(속성, 메서드 및 해당 매개 변수의 이름)를 검색합니다.":"检索具有与指定函数 ID 对应的指定成员 ID 的变量（属性、方法及其参数的名称）。\r\n",", этот метод, тем не менее, возвращает исходное значение дескриптора, которое может быть устаревшим.":", этот метод, тем не менее, возвращает исходное значение DESCRIPTORа, которое может быть устаревшим。\r\n","Дата и время, эквивалентные значению ":"日期和时间等值\r\n","-Objekt zugeordnete Sicherheitsbeschreibung in das SDDL-Format (Security Descriptor Definition Language) umgewandelt werden kann.":"对象可以转换为安全描述符定义语言 (SDDL) 格式。\r\n","현재 프로세스에서 모든 환경 변수 이름과 해당 값을 검색합니다.":"检索当前进程中的所有环境变量名称及其值。\r\n","Полное расположение ":"完整位置\r\n","DLL 검색 경로에 %WinDir%\\System32 디렉터리를 포함합니다. ":"在DLL搜索路径中包含%WinDir%\\System32目录。 \r\n",", aber nicht ":"， 但不是\r\n"," 열거형 상수 중 하나를 지정합니다.":" 指定枚举常量之一。\r\n","Преобразует значение заданного 16-битового целого числа без знака в эквивалентное 32-битовое целое число со знаком.":"将指定的 16 位无符号整数的值转换为等效的 32 位有符号整数。\r\n","Das Array, in das kopiert werden soll. ":"要复制到的数组。\r\n"," Elementen von ":" 要点\r\n","Тип пакуемого объекта. ":"正在打包的对象的类型。\r\n","Тип, в который требуется преобразовать COM VARIANT. ":"要将 COM VARIANT 转换为的类型。\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.":"将数字的指定字符串表示形式转换为等效的 16 位带符号整数。\r\n","COM 개체에서 이벤트 처리기를 분리합니다.":"从COM对象中分离事件处理程序。\r\n","함수의 ":"功能\r\n","Die Anzahl der ACEs im aktuellen ":"当前的 ACE 数量\r\n","Идентификатор GUID информации о типе.":"键入信息 GUID。\r\n","Die Zugriffsprüfungen gelten nicht für das Objekt. Sie gelten nur für dessen untergeordnete Elemente.":"访问检查不适用于该对象。它们只适用于它的孩子。\r\n","Ruft den Namespace für den Datenvertrag ab oder legt ihn fest.":"Ruft den Namespace für den Datenvertrag ab oder leg ihn fest。\r\n"," erstellten URI.":" 创建的 URI。\r\n","을 구현하지 않는 경우 또는":"或者\r\n","При применении к типу коллекции позволяет пользователю задавать элементы коллекции.Этот атрибут может применяться только к типам, распознаваемым методом ":"При применении к типу коллекции позволяет пользователю задавать элементы коллекции。\r\n","16비트 시스템에서 함수가 반환할 수 있는 오류 수를 저장합니다.":"存储函数在 16 位系统上可以返回的错误数。\r\n","-Schnittstelle nicht. - oder - Die Konvertierung von ":"- 接口没有。 - 或 - 的转换\r\n"," в значение 8-битового числа со знаком.":" 到一个 8 位有符号数的值。\r\n","연결을 삭제하기 전에 개체에서 하나의 변경 알림만 만들거나 캐시를 업데이트하도록 요청합니다.":"请求对象在处理连接之前只创建一个更改通知或更新缓存。\r\n","부호 없는 16비트 정수를 ":"16 位无符号整数\r\n","반환이 성공적이면, 대상에 쓰여진 실제 바이트 수를 포함합니다. ":"如果返回成功，则包含写入目标的实际字节数。\r\n","비교할 두 개의 10진수 중 첫 번째 숫자입니다. ":"要比较的两个十进制数中的第一个。\r\n","Initialisiert eine neue Instanz der MarshalDirectiveException-Klasse mit Standardeigenschaften.":"使用默认属性初始化 MarshalDirectiveException 类的新实例。\r\n","-Wert durch einen anderen angegebenen ":"- 另一个指定的值\r\n","-Objekt darstellt, oder legt diese fest.":"object 表示或设置它。\r\n","Liest ein einzelnes Byte aus dem nicht verwalteten Speicher.":"从非托管内存读取单个字节。\r\n",", а его значение равняется значению текущего объекта ":", 其值等于当前对象的值\r\n","Символ Юникода в позиции ":"位置上的 Unicode 字符\r\n","Отсчитываемая с нуля позиция в данном экземпляре, с которой начинается удаление. ":"此实例中删除开始的从零开始的位置。\r\n","-Instanzen den gleichen Wert enthalten.":"-实例包含相同的值。\r\n","매개 변수 기본값을 사용하여 ":"使用参数默认值 \r\n","Возвращает значение соглашения о вызове.":"返回调用约定值。\r\n","Initialisiert eine neue Instanz der SafeArrayTypeMismatchException-Klasse mit der angegebenen Meldung.":"使用指定消息初始化 SafeArrayTypeMismatchException 类的新实例。\r\n","Stellt einen Zeiger auf die Funktion dar, die als Argument eine ":"表示指向函数的指针，以 a 作为参数\r\n","Liest eine 64-Bit-Ganzzahl mit Vorzeichen aus dem nicht verwalteten Speicher.":"从非托管内存中读取一个 64 位有符号整数。\r\n","Ein Verweis auf die Senke, die Aufrufe für die von diesem Verbindungspunkt verwaltete Ausgangsschnittstelle empfangen soll. ":"对接收器的引用，该接收器应接收对此连接点管理的出站接口的调用。\r\n","Полный путь к временному файлу.":"临时文件的完整路径。\r\n","Одно из значений перечисления, указывающих, используется ли пользовательская реализация интерфейса IUnknown::QueryInterface.":"枚举值之一，指示是否使用 IUnknown::QueryInterface 接口的自定义实现。\r\n","Gibt einen SAFEARRAY-Zeiger an.":"指定一个 SAFEARRAY 指针。\r\n","Удаляет ограничения доступа к диапазону байтов, установленные ранее с помощью метода ":"删除以前使用设置的字节范围访问限制\r\n","-Parameter verglichen werden soll.  ":"参数进行比较。\r\n","Gibt einen Wert zurück, der angibt, ob die aktuelle Instanz und eine 64-Bit-Ganzzahl mit Vorzeichen über den gleichen Wert verfügen.":"返回一个值，该值指示当前实例和一个 64 位有符号整数是否具有相同的值。\r\n","지정된 기수로 나타낸 숫자에 대한 문자열 표현을 8비트 부호 있는 정수로 변환합니다.":"将指定基数中数字的字符串表示形式转换为 8 位有符号整数。\r\n","Der Ganzzahlwert.":"整数值。\r\n","Ruft die Anzahl der ACEs im aktuellen ":"获取当前ACE的个数\r\n","변수 형식을 포함합니다.":"包括变量类型。\r\n","포인터 형식을 나타냅니다.":"表示指针类型。\r\n","지정된 64비트 부호 없는 정수의 값을 해당하는 유니코드 문자로 변환합니다.":"将指定的 64 位无符号整数的值转换为等效的 Unicode 字符。\r\n","Сохраняет блок параметров в контексте привязки.Эти параметры будут применены к последующим операциям UCOMIMoniker, которые используют этот контекст привязки.":"在绑定上下文中存储一个选项块。这些设置将应用于使用此绑定上下文的后续 UCOMIMoniker 操作。\r\n","Значение по умолчанию ":"默认值\r\n","Определяет атрибуты реализованного или унаследованного интерфейса типа.":"定义已实现或继承的类型接口的属性。\r\n","Массив больше 2 гигабайт (ГБ).":"Массив больше 2 гигабайт (ГБ)。\r\n"," 개체를 부호 없는 64비트 정수 값으로 변환하는 명시적 변환을 정의합니다.":" 定义显式转换以将对象转换为无符号 64 位整数值。\r\n","Ruft den Standardwert von ":"获取默认值\r\n","enthält keine gültige Versionsnummer.":"不包含有效的版本号。\r\n","BSTR을 할당하고 관리되는 ":"BSTR 分配和管理\r\n","반환할 단정밀도 부동 소수점 숫자입니다. ":"要返回的单精度浮点数。\r\n","Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 16-битовое целое число без знака.":"将指定的单精度浮点数的值转换为其等效的 16 位无符号整数。\r\n","Die Anzahl der Bytes im Speicherpuffer.":"内存缓冲区中的字节数。\r\n","Комплексное число-знаменатель.":"复数分母。\r\n","관리되지 않는 ANSI 문자열의 복사본을 보유하는 관리되는 문자열입니다.":"包含非托管 ANSI 字符串副本的托管字符串。\r\n"," ist größer als der verfügbare Adressbereich.":" 大于可用地址空间。\r\n","Fordert einen Zeiger auf eine angegebene Schnittstelle von einem COM-Objekt an.":"从 COM 对象请求指向指定接口的指针。\r\n","지정된 64비트 부호 없는 정수의 값을 해당하는 64비트 부호 있는 정수로 변환합니다.":"将指定的 64 位无符号整数的值转换为等效的 64 位有符号整数。\r\n","Возвращает заданное 32-битовое целое число со знаком; фактическое преобразование не производится.":"返回指定的 32 位有符号整数；没有执行实际的转换。\r\n","허용된 반환 값을 계산합니다.":"计算允许的返回值。\r\n","Это исключение возникает, если ранг входного массива SAFEARRAY не совпадает с рангом, указанным в управляемой подписи.":"如果输入 SAFEARRAY 的等级与托管签名中指定的等级不匹配，则会抛出此异常。\r\n","실수와 허수 부분에 대해 지정된 서식을 사용하여 현재 복소수 값을 데카르트 형식의 해당하는 문자열 표현으로 변환합니다.":"使用指定的实部和虚部格式，将当前复数值转换为笛卡尔形式的等效字符串表示形式。\r\n"," с помощью строки, объекта ":" 带字符串，对象\r\n","Desplazamiento para esta instancia.":"此实例的偏移量。\r\n","Ein Objekt, dessen Wert 1 ist.":"值为 1 的对象。\r\n","예외가 발생한 원인을 나타냅니다. ":"指示异常发生的原因。\r\n","항목에서 찾을 인스턴스의 수를 나타냅니다.예를 들어, 첫 번째 항목을 찾기 위해 ":"指示要在项目中查找的实例数。例如，查找第一个项目\r\n","Инвертируемое значение.":"要反转的值。\r\n","Ruft Werte ab, die das Verhalten des ":"获取决定行为的值\r\n"," для сравнения с текущим объектом ":" 与当前对象进行比较\r\n","Obtiene o establece un valor que indica si conservar los datos de referencia al objeto.":"Obtiene o establece un valor que indica si conservar los datos de referencia al objeto。\r\n"," перед записью. ":" 录音前。\r\n","이벤트 처리기를 COM 개체에 연결합니다.":"将事件处理程序连接到COM对象。\r\n","Возвращает значение, определяющее, действительно ли 64-разрядное целое число без знака больше или равно значению ":"返回一个值，该值指示无符号 64 位整数是否大于或等于 value\r\n","래퍼의 오류 코드를 가져옵니다.":"获取包装器的错误代码。\r\n","Преобразует указанное 64-битовое целое число со знаком в число двойной точности с плавающей запятой.":"将指定的 64 位带符号整数转换为双精度浮点数。\r\n","-Wert kleiner als oder gleich einer 64-Bit-Ganzzahl mit Vorzeichen ist.":"值小于或等于 64 位有符号整数。\r\n","Führt eine bitweise And-Operation für zwei ":"对两个执行按位与运算\r\n","Ein Handler, der für jeden gemeldeten Fortschrittswert aufgerufen werden soll.Dieser Handler wird zusätzlich zu allen Delegaten aufgerufen, die beim ":"为每个报告的进度值调用的处理程序。除了调用中使用的任何委托外，还会调用此处理程序\r\n","Координата х точки. ":"点的 x 坐标。\r\n","При возвращении данного метода содержит ссылку на перечисление TYPEKIND для описания типа.Этот параметр передается без инициализации.":"当此方法返回时，包含对 TYPEKIND 枚举的引用以描述类型。此参数无需初始化即可传递。\r\n","64-битное целое число со знаком, считанное из неуправляемой памяти.":"从非托管内存读取的 64 位带符号整数。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 8 位无符号整数的值转换为等效的 32 位无符号整数。\r\n","DLL 항목 설명이 반환되는 멤버 함수의 ID입니다. ":"为其返回 DLL 项描述的成员函数的 ID。\r\n","Gibt einen char-Wert an.":"指定一个字符值。\r\n","지정된 8비트 부호 없는 정수 값을 해당하는 문자열 표현으로 변환합니다.":"将指定的 8 位无符号整数值转换为其等效的字符串表示形式。\r\n","디코딩된 문자열입니다.":"解码后的字符串。\r\n","는 형식이 지정된 클래스가 아닌 참조 형식입니다. ":"是引用类型，而不是类型化类。\r\n",".Это значение обычно равно нулю, поскольку оболочка RCW хранит только одну ссылку на COM-объект в оболочке вне зависимости от количества управляемых клиентов, которые ее вызывают.":".此值通常为零，因为 RCW 包装器仅在包装器中存储一个对 COM 对象的引用，而不管调用它的托管客户端的数量。\r\n","Строка, содержащая либо не содержащая имена переменных среды.Каждая переменная среды с двух сторон окружена знаками процента (%).":"可能包含也可能不包含环境变量名称的字符串。每个环境变量两边都被百分号 (%) 包围。\r\n","Der Delegat, der aus der Aufrufliste entfernt werden soll.":"要从调用堆栈中删除的委托。\r\n","Reserviert einen BSTR und kopiert den Inhalt eines verwalteten ":"分配 BSTR 并复制托管的内容\r\n","Этот тип дескриптора подобен ":"这种类型的描述符就像\r\n"," oder null, wenn ":" 或 null 如果\r\n","Konvertiert den angegebenen booleschen Wert in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.":"将指定的布尔值转换为等效的 8 位带符号整数。\r\n","Возвращает наименьшее целое число, которое больше или равно заданному числу с плавающей запятой двойной точности.":"返回大于或等于指定双精度浮点数的最小整数。\r\n","Especifica que el controlador no se puede heredar mediante procesos secundarios.":"Specifica que el controlador no se puede heredar mediante procesos secundarios。\r\n"," y devuelve un entero que indica si el primer valor es menor, igual o mayor que el segundo.":" y devuelve un entero que indica si el primer valor es menor, igual o mayor que el segundo。\r\n","형식 라이브러리에 있는 형식 설명의 인덱스입니다. ":"类型库中类型描述的索引。\r\n","Возвращает новый экземпляр объекта ":"返回一个新的对象实例\r\n","Смещение в байтах от начала структуры до начала поля. ":"从结构开头到字段开头的偏移量（以字节为单位）。\r\n",", возвращается значение ":", 返回值\r\n","열거자 집합입니다.":"一组枚举器。\r\n",", если конструктор отсутствует.":"如果缺少构造函数。\r\n",", сравниваемый с параметром ":", сравниваемый с параметром\r\n","Инициализирует новый экземпляр класса InvalidOleVariantTypeException значениями по умолчанию.":"使用默认值初始化 InvalidOleVariantTypeException 类的新实例。\r\n","Der Wert, der in eine 16-Bit-Ganzzahl ohne Vorzeichen konvertiert werden soll.":"要转换为 16 位无符号整数的值。\r\n","Die Identität der Klasse von untergeordneten Objekten, die den neuen ACE erben können.":"可以继承新 ACE 的子对象类的标识。\r\n","Gibt eine short-Ganzzahl an.":"指定一个短整数。\r\n","이 메서드는 반환될 때 표시 이름 문자열을 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含显示名称字符串。此参数未初始化传递。\r\n","Gibt eine Gleitkommazahl mit einfacher Genauigkeit zurück, die aus vier Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.":"Gibt eine Gleitkommazahl mit einfacher Genauigkeit zurück, die aus vier Bytes an der angegebenen 在 einem Bytearray konvertiert wurde 中的位置。\r\n","Stellt eine Kombination aus der Identität eines Benutzers, einer Zugriffsmaske und Überwachungsbedingungen dar.Ein ":"表示用户身份、访问掩码和监控条件的组合\r\n","지정된 16비트 부호 있는 정수의 값을 해당하는 64비트 부호 있는 정수로 변환합니다.":"将指定的 16 位带符号整数的值转换为等效的 64 位带符号整数。\r\n","Указывает, равно ли значение текущего объекта ":"指示当前对象的值是否相等\r\n","Gibt die angegebene 32-Bit-Ganzzahl ohne Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.":"返回指定的 32 位无符号整数。不执行真正的转换。\r\n","지정된 부울 값을 해당하는 32비트 부호 있는 정수로 변환합니다.":"将指定的布尔值转换为等效的 32 位带符号整数。\r\n","Gibt an, ob IUnknown::QueryInterface-Aufrufe der ":"指示 IUnknown::QueryInterface 是否调用\r\n","Flags, die die Vererbungseigenschaften für diesen ACE angeben.":"指定此 ACE 的继承属性的标志。\r\n","Возвращает постоянное значение, хранящееся в данном атрибуте.":"返回存储在给定属性中的常量值。\r\n","Das Objekt ":"物体\r\n","Ссылка на данный экземпляр с добавленным ":"添加到此实例的链接\r\n","-Objekt zugeordnete Sicherheitsbeschreibung in das SDDL-Format (Security Descriptor Definition Language) umgewandelt werden kann, andernfalls false.":"对象可以转换为安全描述符定义语言 (SDDL) 格式，否则为 false。\r\n","길이 접두사가 있는 바이트를 나타냅니다.":"表示带有长度前缀的字节。\r\n","Гиперболический косинус ":"双曲余弦\r\n","Die Adresse im nicht verwalteten Speicher, in die geschrieben werden soll.":"要写入的非托管内存中的地址。\r\n","소스 인터페이스의 ":"源接口 \r\n","Инициализирует объект ":"初始化一个对象\r\n","Indica che un valore è un riferimento.":"表示che un valore è un riferimento.\r\n","Die y-Koordinate eines Punkts. ":"点的 y 坐标。\r\n","Gibt die größere von zwei Gleitkommazahlen mit doppelter Genauigkeit zurück.":"返回两个双精度浮点数中较大的一个。\r\n","-Parameter vor dem Schreiben hinzugefügt wird. ":"-写入前添加参数。\r\n",", где все спецификации форматирования заменяются представлением строки соответствующего аргумента объекта.":"，其中所有格式规范都替换为相应对象参数的字符串表示形式。\r\n","1씩 증가하는 ":"递增 1\r\n","Тип, содержащий виртуальные функции, каждая из которых — чистая.":"一种包含虚函数的类型，每个虚函数都是纯函数。\r\n","지정된 실수 값과 허수 값을 사용하여 ":"使用指定的实部和虚部值。\r\n","Вставляет строковое представление указанного 8-разрядного знакового целого числа в данный экземпляр на указанную позицию символа.":"将指定 8 位带符号整数的字符串表示形式插入此实例的指定字符位置。\r\n","비교할 두 개의 64비트 부호 없는 정수 중 첫 번째 숫자입니다. ":"要比较的两个 64 位无符号整数中的第一个。\r\n","Eine Zahl mit Vorzeichen. ":"一个签名的号码。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.":"使用指定的区域性特定格式设置信息，将指定的单精度浮点数的值转换为其等效的字符串表示形式。\r\n"," с именем динамической библиотеки (DLL), содержащей импортируемый метод.":" 包含导入方法的动态库 (DLL) 的名称。\r\n","두 개의 64비트 부호 없는 정수 중 더 큰 숫자를 반환합니다.":"返回两个 64 位无符号整数中较大的一个。\r\n"," меньше нуля или больше текущей длины данного экземпляра.-или- Значение параметра ":" 小于零或大于此实例的当前长度。- 或 - 参数值\r\n","-Objekt mit einer internen Ganzzahldarstellung.":"- 具有内部整数表示的对象。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.":"将指定的 64 位无符号整数的值转换为等效的 8 位有符号整数。\r\n","Gibt die angegebene 8-Bit-Ganzzahl mit Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.":"返回指定的 8 位有符号整数。不执行真正的转换。\r\n","Представляет метод, создающий значение не по умолчанию для добавления в качестве части пары \"ключ-значение\" в объект ":"表示创建非默认值以作为键/值对的一部分添加到对象的方法\r\n","Ein Dividend. ":"股息。\r\n","Выполнять поиск зависимостей библиотеки DLL в папке, где находится библиотека DLL, прежде чем в других папках. ":"在查找其他文件夹之前，先在 DLL 所在的文件夹中搜索 DLL 依赖项。\r\n"," с использованием заданных значений действительного и мнимого чисел.":" 使用实数和虚数的给定值。\r\n","Eine Dezimalzahl mit Vorzeichen. ":"带符号的十进制数。\r\n","IEnumConnectionPoints 인터페이스의 정의를 관리합니다.":"管理 IEnumConnectionPoints 接口的定义。\r\n","지정된 64비트 부호 없는 정수의 값을 해당하는 32비트 부호 없는 정수로 변환합니다.":"将指定的 64 位无符号整数的值转换为等效的 32 位无符号整数。\r\n","true, wenn die Zeichen, die auf das letzte Verzeichnistrennzeichen (\\\\ oder /) oder Volumetrennzeichen (:) im Pfad folgen, einen Punkt (.) gefolgt von einem oder mehreren Zeichen enthalten, andernfalls false.":"如果路径中最后一个目录分隔符（\\\\ 或 /）或卷分隔符 (:) 后面的字符包含句点 (.) 后跟一个或多个字符，则为 true；否则为 false。\r\n","Gibt an, ob der ROT-Verweis (Running Object Table) auf ":"指示 ROT（运行对象表）是否引用到\r\n","; например, \"7F-2C-4A-00\".":";例如，“7F-2C-4A-00”。\r\n","Структура TLIBATTR, которую следует освободить. ":"要释放的 TLIBATTR 结构。\r\n","Указывает, что интерфейс предоставляется модели COM как сдвоенный интерфейс, позволяющий выполнять раннее и позднее связывание.":"指定接口作为双重接口公开给 COM，允许早期和晚期绑定。\r\n","디스크에 크기가 0바이트인 고유한 이름의 임시 파일을 만들고 해당 파일의 전체 경로를 반환합니다.":"在磁盘上创建一个大小为 0 字节的唯一命名的临时文件，并返回该文件的完整路径。\r\n"," превышает длину массива ":" 超过数组长度\r\n"," 개체가 같은지를 나타내는 값을 반환합니다.":" 返回一个值，该值指示对象是否相同。\r\n","발생한 예외의 형식을 식별하는 코드를 검색합니다.":"检索标识抛出的异常类型的代码。\r\n","Логическое значение, которое необходимо преобразовать. ":"要转换的布尔值。\r\n","Gibt den Kosinus des angegebenen Winkels zurück.":"返回指定角度的余弦值。\r\n","-Objekte als ungleich betrachtet werden.":"-对象被认为是不平等的。\r\n"," больше, чем длина данного экземпляра.-или- Сумма значений ":" 大于此实例的长度。- 或 - 值的总和\r\n","Die neue Größe des belegten Blocks.Dies ist kein Zeiger; es ist die Byteanzahl, die Sie anfordern, umgewandelt zum Typ ":"分配块的新大小。这不是指针；这是您请求的字节数，转换为类型\r\n","Исключение, которое создается, когда политика безопасности требует строго типизированного кода, а процесс проверки не в состоянии выяснить, используется ли строго типизированный код.":"当安全策略需要强类型代码并且验证过程无法确定是否正在使用强类型代码时引发的异常。\r\n","Gibt einen booleschen Wert zurück, der aus einem Byte an der angegebenen Position eines Bytearrays konvertiert wurde.":"Gibt einen booleschen Wert zurück，der aus einem Byte an der angegebenen Position eines Bytearrays konvertiert wurde。\r\n","이 서수를 가리키도록 설정됩니다. ":"它被设置为指向这个序号。\r\n","이 메서드는 반환될 때 MKSYS 열거형의 값 중 하나이며 COM 모니커 클래스 중 하나를 참조하는 정수에 대한 포인터를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含一个指向整数的指针，该整数是 MKSYS 枚举的值之一并引用 COM 名字对象类之一。此参数未初始化传递。\r\n"," multipliziert mit der Größe der einzelnen Elemente ist größer als der verfügbare Adressbereich.":" 乘以每个元素的大小大于可用地址空间。\r\n",", содержащих сведения о пути к файлу или каталогу.Эти операции выполняются межплатформенным способом.Чтобы просмотреть исходный код .NET Framework для этого типа, см. Reference Source.":", 包含文件或目录路径信息。这些操作以跨平台的方式执行。要查看此类型的 .NET Framework 源代码，请参阅参考源。\r\n","Комплексное число ":"复数\r\n"," в настоящее время выполняется и измеряет затраченное время интервала; в противном случае — значение false.":" 当前正在运行并测量经过的间隔时间；否则，假的。\r\n",", für das die ganze Zahl erforderlich ist. ":"，这需要整数。\r\n","로 식별되는 멤버 종류를 지정하는 ":"指定由标识的成员类型\r\n","지정된 복소수를 배정밀도 부동 소수점 숫자로 지정된 지수만큼 거듭제곱하여 반환합니다.":"将指定的复数作为双精度浮点数返回指定的幂。\r\n","을 할당하고 관리되지 않는 유니코드 문자열의 지정된 문자 수를 그 안에 복사합니다.":"从非托管 Unicode 字符串中分配并复制指定数量的字符。\r\n","이 메서드는 반환될 때 지정한 항목과 연관된 도움말 컨텍스트 식별자를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含与指定项关联的帮助上下文标识符。此参数未初始化传递。\r\n","Добавляет строковое представление указанного 16-разрядного целого числа со знаком к данному экземпляру.":"将指定的 16 位带符号整数的字符串表示形式添加到此实例。\r\n","Diese Methode gibt ein Object zurück, das angibt, wo die Daten abzulegen sind.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回一个对象，指定放置数据的位置。此参数未初始化传递。\r\n","지정된 단정밀도 부동 소수점 숫자를 실제 변환 작업 없이 반환합니다.":"返回指定的单精度浮点数而不进行任何实际转换。\r\n","Die Methode gibt den Zeitpunkt der letzten Änderung zurück.Dieser Parameter wird nicht initialisiert übergeben.":"该方法返回最后一次更改的时间。此参数未初始化传递。\r\n","Полное имя данного исключения и, возможно, сообщение об ошибке, имя внутреннего исключения и трассировку стека.":"此异常的全名，以及可选的错误消息、内部异常的名称和堆栈跟踪。\r\n","Der dem Enumerationsmember zugeordnete Wert.":"与枚举成员关联的值。\r\n","Объект, заключенный в оболочку с помощью ":"Объект, заключенный в оболочку с помощью\r\n","Представляет флаги, которые должны использоваться при открытии файла, содержащего объект, определенный моникером.":"表示打开包含由名字对象指定的对象的文件时要使用的标志。\r\n","Представляет универсальную коллекцию пар \"ключ-значение\".":"表示键/值对的通用集合。\r\n"," в комплексное число.":" 成一个复数。\r\n",", никакого преобразования не происходит.Если строка ввода не указывает локальное или универсальное время, преобразования не происходит, а результирующее свойство ":", 不发生转换。如果输入字符串未指定本地或世界时间，则不发生转换，结果属性\r\n","비교할 두 개의 64비트 부호 있는 정수 중 첫 번째 숫자입니다. ":"要比较的两个 64 位有符号整数中的第一个。\r\n","На входе значение, переданное ссылкой, указывающее, сколько экземпляров следует искать.Например, если ":"作为输入，通过引用传递的值指示要查找的实例数。例如，如果\r\n","Тип возвращаемого делегата. ":"返回的委托的类型。\r\n","지정된 숫자의 제곱근을 반환합니다.":"返回指定数字的平方根。\r\n"," ist kleiner als null.- oder -":" 小于零。- 或-\r\n","에 해당하는 개체 배열입니다.":"对应于 的对象数组。\r\n"," 값을 뺀 결과를 반환합니다.":" 返回减去一个值的结果。\r\n","Der Zugriff auf die Funktion erfolgt über eine static-Adresse, und die Funktion akzeptiert einen impliziten this-Zeiger.":"通过静态地址访问该函数，该函数接受一个隐式的 this 指针。\r\n"," меньше или равно 64-разрядному целому числу без знака.":" 小于或等于 64 位无符号整数。\r\n","컴파일러가 “abc” 형식에서 이름이 “xyz”인 멤버를 찾는 최적화를 허용합니다.이러한 멤버를 발견하여 기본 컬렉션의 요소에 대한 접근자 함수로써 플래그하면, 호출은 해당 멤버 함수로 생성됩니다.모듈에서 허용되지 않고 dispinterface와 인터페이스의 멤버에서 허용됩니다.":"允许编译器优化以在类型“abc”中找到名为“xyz”的成员。如果找到这样的成员并将其标记为基础集合元素的访问器函数，则调用该成员函数。在在调度接口和接口成员上不允许和允许的模块。\r\n","Возвращает значение, определяющее знак 8-битового целого числа со знаком.":"返回一个值，该值指定 8 位有符号整数的符号。\r\n","Ein Objekt, dem ":"对象数据\r\n",", начиная с указанного индекса ":", 从指定索引开始\r\n","Управляет определением интерфейса IEnumMoniker.":"管理 IEnumMoniker 接口的定义。\r\n","Тип создаваемой оболочки. ":"要创建的外壳类型。\r\n","가 현재 모니커가 제네릭 구성을 만드는 것과 다른 방법으로 결합할 수 있는 모니커 클래스인 경우에만 작업이 진행됩니다.이 메서드가 필요한 경우 제네릭 구성을 만들 수 있음을 나타내려면 false입니다.":"仅当当前名字对象是可以以某种方式组合而不是创建通用构造的名字对象类时，该操作才会继续。为 False 表示如果需要此方法，则可以创建通用构造。\r\n","Der Speicherzeiger, in den kopiert werden soll. ":"要复制到的内存指针。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in die entsprechende Zeichenfolgendarstellung.":"将指定的双精度浮点数的值转换为其等效的字符串表示形式。\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.":"将数字的指定字符串表示形式转换为等效的 32 位带符号整数。\r\n","Enthält das Laufwerk, den vollqualifizierten Pfad und den Dateinamen einer Hilfedatei, in der Sie weitere Informationen über den Fehler finden.":"包含提供有关错误的详细信息的帮助文件的驱动器、完全限定路径和文件名。\r\n","스트림 개체의 크기를 변경합니다.":"更改流对象的大小。\r\n",". -или-Преобразование не поддерживается.":". - 或 - 不支持转换。\r\n","Ruft den Klassenbezeichner der ursprünglichen Co-Klasse ab.":"获取原始共同类的类标识符。\r\n","Массив значений типа byte в прямом порядке байтов.":"Массив значений типа byte в прямом порядке байтов。\r\n","Ermöglicht es Clients, auf das tatsächliche Objekt anstatt auf das von einem benutzerdefinierten Marshaller ausgegebene Adapterobjekt zuzugreifen.":"允许客户端访问实际对象而不是自定义封送拆收器发出的适配器对象。\r\n","Удаляет все символы из текущего экземпляра ":"从当前实例中删除所有字符\r\n","변경된 개체의 ROT(실행 개체 테이블) 항목입니다. ":"已更改对象的运行对象表 (ROT) 条目。\r\n",", переданный ссылкой, который описывает формат, целевое устройство, отрисовку и сведения о хранении для вызывающего объекта данных.":"一个 ，通过引用传递，描述调用数据对象的格式、目标设备、呈现和存储信息。\r\n","가 무시됩니다.결과가 필요하지 않으면 null로 설정합니다.":"被忽略。如果不需要结果，则设置为 null。\r\n","Valor de punto flotante de precisión doble.":"Valor de punto flotante de precision double。\r\n","Eine Zeichenfolge mit der Länge 1. ":"长度为 1 的字符串。\r\n","Преобразует заданное строковое представление числа в эквивалентное 64-битовое целое число со знаком, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"给定指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的 64 位带符号整数。\r\n","두 개의 10진수 중 더 작은 숫자를 반환합니다.":"返回两位小数中较小的一位。\r\n","지정된 복소수의 코사인을 반환합니다.":"返回指定复数的余弦值。\r\n","Показывает время создания хранилища, потока или массива байтов.":"显示存储、流或字节数组的创建时间。\r\n","Konvertiert einen Basisdatentyp in einen anderen Basisdatentyp.":"将一种基本数据类型转换为另一种基本数据类型。\r\n","Gibt den Klassenbezeichner einer Co-Klasse an, die aus einer Typbibliothek importiert wurde.":"指定从类型库导入的组件类的类标识符。\r\n","Представление объекта, позволяющее отображать объект в виде внедренного объекта внутри контейнера.Это значение обычно задается для объектов составных документов.Представление может использоваться для экрана или принтера.":"允许对象显示为容器内的嵌入对象的对象表示。通常为复合文档对象设置此值。该表示可用于屏幕或打印机。\r\n","Die imaginäre Komponente einer komplexen Zahl.":"复数的虚部。\r\n","Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное строковое представление, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用指定的区域性特定格式设置信息，将指定的单精度浮点数的值转换为其等效的字符串表示形式。\r\n","Legt den Standardwert eines Parameters beim Aufruf aus einer Sprache fest, die Standardparameter unterstützt.Diese Klasse kann nicht vererbt werden.":"从支持标准参数的语言调用时设置参数的默认值。此类不能被继承。\r\n","Die zu ":"到\r\n","Задает желаемый аспект данных или представления для объекта при рисовании или получении данных.":"指定绘制或检索数据时对象所需的数据方面或表示。\r\n","Ein Array von Bytewerten, das die opaken Daten darstellt, die diesem ":"表示与此关联的不透明数据的字节值数组\r\n","Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende Dezimalzahl.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为等效的十进制数。\r\n"," является универсальным типом. ":" 是泛型。\r\n","Исключенный верхний предел создаваемого случайного числа.Значение ":"生成的随机数的排除上限.Value\r\n","Задает указатель на структуру DVTARGETDEVICE, содержащую сведения о целевом устройстве, для которого формируются данные. ":"指定指向 DVTARGETDEVICE 结构的指针，该结构包含有关为其生成数据的目标设备的信息。\r\n"," zurück.Ein decodiertes ":" back.A解码\r\n","Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 16-битовое целое число со знаком.":"将具有指定基数的数字的字符串表示形式转换为其等效的 16 位带符号整数。\r\n","Gibt einen booleschen Wert zurück, der angibt, ob die diesem ":"返回一个布尔值，指示是否 this\r\n","Entero de 16 bits con signo formado por dos bytes que comienzan en ":"Entero de 16 bits con signo formado por dos bytes que comienzan en\r\n","Der Rest nach der Division von ":"除以后的余数\r\n","Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное десятичное число.":"将指定的双精度浮点数的值转换为其等效的十进制数。\r\n","Члены объекта располагаются последовательно, в порядке своего появления при экспортировании в неуправляемую память.Члены располагаются в соответствии с компоновкой, заданной в ":"对象的成员按顺序排列，按照它们导出到非托管内存时出现的顺序。成员根据指定的布局排列\r\n","Массив WaitHandle, содержащий объекты, ожидаемые текущим экземпляром.Данный массив не может содержать несколько ссылок на один и тот же объект (дубликатов).":"包含当前实例所需对象的 WaitHandle 数组。此数组不能包含对同一对象的多个（重复）引用。\r\n"," 개체의 실수 구성 요소를 가져옵니다.":" 获取对象的真实组件。\r\n","-Klasse unter Verwendung des angegebenen Startwerts.":"使用给定种子值的类。\r\n","-Objekt ab, das als VT_BSTR-Typ gemarshallt werden soll.":"-Objekt ab, das als VT_BSTR-Typ gemarshallt werden soll.\r\n","매개 변수는 선택 사항입니다.":"参数是可选的。\r\n","COM VARIANT 배열의 첫 번째 요소에 대한 포인터입니다. ":"指向 COM VARIANT 数组的第一个元素的指针。\r\n"," 특성을 적용해야 합니다.":" 必须应用属性。\r\n","지정된 복소수의 하이퍼볼릭 사인을 반환합니다.":"返回指定复数的双曲正弦值。\r\n"," не является интерфейсом.-или- Тип недоступен для COM. -или-Параметр ":" 不是接口。- 或 - 该类型对 COM 不可用。 -或-参数\r\n","Возвращает случайное число с плавающей запятой в диапазоне от 0,0 до 1,0.":"返回一个介于 0.0 和 1.0 之间的随机浮点数。\r\n","읽기 및 쓰기에 사용할 수 있는 제어되는 메모리 버퍼를 제공합니다.제어되는 버퍼 외부의 메모리에 액세스(언더런 및 오버런)하려고 하면 예외가 발생됩니다.":"提供可用于读取和写入的受控内存缓冲区。尝试访问（欠载和溢出）受控缓冲区之外的内存将导致异常。\r\n","Convierte los tipos de datos base en una matriz de bytes y una matriz de bytes en tipos de datos base.":"Convierte los tipos de datas base en una matrix de bytes y una matrix de bytes en tipos de datos base。\r\n","Gibt einen zufälligen Ordnernamen oder Dateinamen zurück.":"返回一个随机文件夹名或文件名。\r\n","Добавляет указанное число копий строкового представления символа Юникода к данному экземпляру.":"将 Unicode 字符的字符串表示形式的指定数量的副本添加到此实例。\r\n","-Klasse mit dem HRESULT des Fehlers.":"类与错误的 HRESULT。\r\n","Der Typinformationsmember ist der Standardmember für die Anzeige auf der Benutzeroberfläche.":"类型信息成员是显示在用户界面中的默认成员。\r\n","지정된 10진수 값을 해당하는 부울 값으로 변환합니다.":"将指定的十进制值转换为等效的布尔值。\r\n","Преобразует заданное логическое значение в эквивалентное 64-битовое целое число без знака.":"将给定的布尔值转换为其等效的 64 位无符号整数。\r\n","Das mit URL zu codierende ":"URL编码的那个\r\n"," 매개 변수가 가리키는 형식의 이름입니다.":" 参数指向的类型的名称。\r\n","Ссылка на освобождаемую структуру TYPEATTR. ":"对释放的 TYPEATTR 结构的引用。\r\n","Добавляет строковое представление указанного 16-разрядного целого числа без знака к данному экземпляру.":"将指定的 16 位无符号整数的字符串表示形式添加到此实例。\r\n","Получает ключ метаданных.":"获取元数据密钥。\r\n","Возвращает гиперболический тангенс указанного угла.":"返回指定角度的双曲正切值。\r\n","Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl ohne Vorzeichen kleiner als ein oder gleich einem ":"返回一个值，该值指示 64 位无符号整数是否小于或等于 1\r\n"," имеет фиксированный размер, в противном случае — false.":" 具有固定大小，否则为假。\r\n","Объект, содержащийся в объекте адаптера.":"适配器对象中包含的对象。\r\n","Kopiert Daten aus einem eindimensionalen, verwalteten Array von 32-Bit-Ganzzahlen mit Vorzeichen in einen nicht verwalteten Speicherzeiger.":"将数据从 32 位带符号整数的一维托管数组复制到非托管内存指针。\r\n","Добавляет строковое представление указанного символа Юникода к данному экземпляру.":"将指定 Unicode 字符的字符串表示形式添加到此实例。\r\n","에 정의된 문자가 포함될 수 없습니다.":"不能包含 中定义的任何字符。\r\n","가 올바른 형식의 날짜 및 시간 문자열이 아닌 경우 ":"不是格式正确的日期和时间字符串\r\n","При возвращении данного метода содержит ссылку на ITypeInfo типа, к которому был привязан параметр ":"当此方法返回时，包含对参数绑定到的类型的 ITypeInfo 的引用\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 날짜와 시간으로 변환합니다.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为等效的日期和时间。\r\n"," abzüglich des ":" 减去\r\n"," в значение 32-битового знакового целого числа.":" 到一个 32 位有符号整数值。\r\n","Возвращаемое значение Нуль или положительное число Положительный квадратный корень из ":"返回值 零或正数 的正平方根\r\n","Функция, вызываемая при помощи синтаксиса присвоения значения свойству.":"使用属性赋值语法调用的函数。\r\n","Возвращает или задает пароль, связанный с пользователя, получающим доступ к URI.":"获取或设置与访问 URI 的用户关联的密码。\r\n","Ein Wert, der um die angegebene Anzahl von Bits nach rechts verschoben wurde.":"一个值将指定的位数向右移动。\r\n","Выполняет битовую операцию Or для двух значений ":"对两个值执行按位或运算\r\n","이 메서드는 반환될 때 라이브러리의 특성을 포함하는 구조체를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含一个包含库属性的结构。此参数未初始化传递。\r\n","이(가) null이면, ":"如果为空，\r\n","Der Kosinus von ":"的余弦\r\n","Eine 32-Bit-Ganzzahl mit Vorzeichen.":"一个 32 位有符号整数。\r\n","Objeto cuya interfaz IUnknown se solicita.":"请求其IUnknown接口的对象。\r\n"," 지수로 사용할 숫자입니다.":" 지수로사용할숫자입니다。\r\n","의 숫자에 해당하는 8비트 부호 있는 정수이거나, value가 null이면 0입니다.":"一个 8 位有符号整数，它是 中的数字，如果值为 null，则为 0。\r\n","지정된 부울 값을 해당하는 32비트 부호 없는 정수로 변환합니다.":"将指定的布尔值转换为等效的 32 位无符号整数。\r\n"," 개체의 식별자입니다.":" 对象的标识符。\r\n","현재 검색 포인터에서 스트림 개체에서 메모리 시작까지 지정된 바이트 수를 읽습니다.":"从当前查找指针到内存开头的流对象中读取指定数量的字节。\r\n","URI의 단편 부분을 가져오거나 설정합니다.":"获取或设置 URI 的片段部分。\r\n","Дескриптор поля, указывающий расположение данных, используемых для инициализации массива. ":"指定用于初始化数组的数据位置的字段描述符。\r\n","[Поддерживается только в .NET Framework 4.5.1 и более поздних версиях] Преобразует объект заданного типа в COM VARIANT. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 将给定类型的对象转换为 COM VARIANT。\r\n"," больше 64-битового целого числа без знака.":" 大于 64 位无符号整数。\r\n","Целое число, считываемое из неуправляемой памяти с указанным смещением.":"从指定偏移量处的非托管内存中读取的整数。\r\n"," использоваться в вызовах IUnknown::QueryInterface метода ":" 用于调用 IUnknown::QueryInterface 方法\r\n"," имеет значение null, процесс назначения должен использовать DeleteObject для удаления растрового изображения.":" 为空，目标进程必须使用 DeleteObject 删除位图。\r\n","Stellt eine global eindeutige Bibliotheks-ID einer Typbibliothek dar.":"表示类型库的全局唯一库ID。\r\n","Ein COM-Schnittstellenzeiger.Die ":"一个COM接口指针。\r\n","의 쌍곡선 사인입니다.":"是双曲正弦\r\n","Первое из двух сравниваемых 8-разрядных целых чисел без знака. ":"要比较的两个无符号 8 位整数中的第一个。\r\n","Задает тип элемента неуправляемого массива ":"指定非托管数组的元素类型\r\n","Позволяет компиляторам динамически прикреплять поля к управляемым объектам.":"允许编译器将字段动态附加到托管对象。\r\n","< 1minus unendlich":"< 1 减无穷大\r\n","Enthält einen Zeiger auf eine gebundene ":"包含指向边界的指针\r\n","Возвращает структуру, содержащую атрибуты библиотеки.":"返回包含库属性的结构。\r\n","-Eigenschaft festgelegt ist.":"-Eigenschaft festgelegt ist。\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in das entsprechende Unicode-Zeichen.":"将指定的 16 位带符号整数的值转换为等效的 Unicode 字符。\r\n","Stellt einen Zugriffssteuerungseintrag (ACE – Access Control Entry) dar, der nicht durch einen der Member der ":"表示未由任何成员指定的访问控制条目 (ACE)\r\n","Указывает, какой набор знаков должны использовать маршалированные строки.":"指定编组字符串应使用的字符集。\r\n"," < -1 oder ":" < -1 或\r\n","Преобразует значение заданного 32-битового целого числа без знака в эквивалентное строковое представление.":"将指定的 32 位无符号整数的值转换为其等效的字符串表示形式。\r\n","Локальное имя контракта данных.Значение по умолчанию — это имя класса, к которому применяется атрибут.":"数据协定的本地名称。默认值是属性适用的类的名称。\r\n","Der erste zu kombinierende Pfad. ":"合并的第一个路径。\r\n",", или журнал e":", 或记录 e\r\n"," равно ByValArray, то для указания числа элементов массива следует задать поле ":" 等于ByValArray，那么要指定数组元素个数，必须指定字段\r\n","Die Basis der Zahl in ":"中数字的基数\r\n","Возвращает флаги типов без каких-либо распределений.Этот метод возвращает флаг типа DWORD, который расширяет флаги типов без увеличения TYPEATTR (атрибут type).":"Returns type flags without any allocations. 此方法返回一个 DWORD 类型标志，它扩展类型标志而不增加 TYPEATTR（类型属性）。\r\n","Define el tamaño de asignación del área de memoria en bytes.Debe llamar a este método antes de usar la instancia de ":"以字节为单位定义内存区域的分配大小。在使用 \r\n","Возвращает большее из двух 32-битовых целых чисел без знака.":"返回两个 32 位无符号整数中较大的一个。\r\n",", содержащий URI, построенный с помощью объекта ":"包含用对象构造的 URI\r\n"," 값을 복소수로 변환하는 명시적 변환을 정의합니다.":" 定义显式转换以将值转换为复数。\r\n"," в другой сборке.":" 在另一个装配体中。\r\n","의 하이퍼볼릭 코사인입니다.":"是双曲余弦\r\n","Угол θ, измеренный в радианах, такой что -π/2 ≤θ≤π/2.-или- значение ":"以弧度为单位的角度 θ，使得 -π/2 ≤θ≤π/2.- 或 - 值\r\n","Копирует данные из одномерного управляемого массива 32-битных целых чисел со знаком в указатель неуправляемой памяти.":"将数据从 32 位带符号整数的一维托管数组复制到非托管内存指针。\r\n","тип управляемого объекта для агрегации. ":"要聚合的托管对象类型。\r\n"," 매개 변수에 대해 ":" 关于参数\r\n","이 메서드가 반환될 때 찾은 항목에 대한 MEMBERID의 배열을 포함합니다. ":"当此方法返回时，包含找到的项目的 MEMBERID 数组。\r\n","이 모두 설정됩니다.dispinterface에서는 이 플래그를 사용할 수 없습니다.":"都已设置。此标志在调度接口上不可用。\r\n","이 메서드는 반환되면, 멤버와 연관된 이름을 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含与成员关联的名称。此参数未初始化传递。\r\n","Gibt den Elementtyp an.":"指定项目类型。\r\n","-Objekts in den Wert einer 16-Bit-Ganzzahl mit Vorzeichen.":"对象为 16 位有符号整数的值。\r\n","은 제네릭 형식입니다. ":"是泛型。\r\n","생성자의 ":"构造函数的\r\n","Ruft die reelle Komponente des aktuellen ":"获取当前的实部\r\n","디코딩할 URL 인코딩된 ":"URL编码解码\r\n","의 정수 부분으로, 소수 자릿수를 삭제한 후 남은 숫자입니다.":"的整数部分，去掉小数位后剩余的数。\r\n"," значение BSTR, содержащее имя динамической библиотеки DLL. ":" 包含 DLL 名称的 BSTR 值。\r\n","-Feld so festgelegt werden, dass die Anzahl der Elemente im Array angegeben wird.Das ":"要设置的字段以指示数组中的元素数。\r\n","Возвращает значение, указывающее, представляет ли данный экземпляр класса ":"返回一个值，该值指示该类的实例是否表示\r\n","Kopiert eine angegebene Anzahl von Bytes aus dem aktuellen Suchzeiger im Stream in den aktuellen Suchzeiger eines anderen Streams.":"将指定数量的字节从一个流中的当前搜索指针复制到另一个流的当前搜索指针。\r\n","Der Parameter ist der lokale Bezeichner einer Clientanwendung.":"该参数是客户端应用程序的本地标识符。\r\n",", данное исключение кэшируется и вызывается повторно при последующих вызовах свойства ":"，此异常被缓存并在后续调用该属性时重新抛出\r\n","Flags, die Informationen zu Vererbung, Vererbungsweitergabe und Überwachungsbedingungen für den neuen Zugriffssteuerungseintrag (ACE) angeben.":"指定有关新访问控制条目 (ACE) 的继承、继承传播和审核条件的信息的标志。\r\n"," является оболочкой.":" 是一个外壳。\r\n","Преобразует числовое значение каждого элемента заданного массива байтов в эквивалентное ему шестнадцатеричное строковое представление.":"将指定字节数组的每个元素的数值转换为其等效的十六进制字符串表示形式。\r\n","true, wenn der Member erforderlich ist, andernfalls false.":"如果需要该成员，则为 true，否则为 false。\r\n","인코딩된 문자열입니다.":"编码字符串。\r\n","관리되지 않는 메모리의 지정된 오프셋 위치에 64비트 부호 있는 정수 값을 씁니다.":"将 64 位有符号整数值写入指定偏移量处的非托管内存。\r\n","지정된 64비트 부호 있는 정수 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.":"将指定的 64 位带符号整数值转换为等效的单精度浮点数。\r\n","Das Schema kann nicht auf einen ungültigen Schemanamen festgelegt werden. ":"架构不能设置为无效的架构名称。\r\n","true para una operación de desecho normal; false para finalizar el identificador.":"对于正常操作为真； false 以最终确定标识符。\r\n","При возвращении данного метода содержит Object, указывающий, куда поместить извлеченные данные.Этот параметр передается без инициализации.":"当此方法返回时，包含一个对象，指示将检索到的数据放在哪里。此参数无需初始化即可传递。\r\n","8-байтовое целое число со знаком.":"一个 8 字节有符号整数。\r\n","Das Objekt, dessen IUnknown-Schnittstelle angefordert wird.":"正在请求其 IUnknown 接口的对象。\r\n","Возвращает значение, показывающее, являются ли два объекта ":"返回一个值，指示两个对象是否是\r\n",".Перечисление ":".枚举\r\n","의 숫자에 해당하는 8비트 부호 없는 정수이거나, ":"是一个 8 位无符号整数，等于\r\n","Имя элемента данных.Значение по умолчанию — это имя целевого объекта, к которому применяется атрибут.":"数据元素的名称。默认值是应用该属性的目标的名称。\r\n","부호 없는 4바이트 정수입니다.":"一个 4 字节无符号整数。\r\n","true si se libera el identificador correctamente; de lo contrario, en caso de un grave error,  false.En este caso, genera un Asistente para la depuración administrada MDA de releaseHandleFailed.":"如果句柄释放成功，则为真；否则，如果出现致命错误，则为 false。在这种情况下，生成 releaseHandleFailed 的 MDA 托管调试向导。\r\n","Указывает, что тип содержит неуправляемый массив, в котором потенциально возможно переполнение.Этот класс не наследуется.":"表示该类型包含一个可能溢出的非托管数组。此类不是继承的。\r\n"," 매개 변수가 false 값으로 전달된 ":" 传递给false值的参数 \r\n"," in die entsprechende Zeichenfolgendarstellung.":" 到相应的字符串表示中。\r\n","곱할 두 번째 숫자입니다.":"곱할두번째숫자입니다。\r\n"," недопустимо. -или-Индекс элемента формат меньше 0 (нуля) либо больше или равен 1.":" 不可接受的。 - 或 - 格式元素的索引小于 0（零）或大于或等于 1。\r\n","Die Zahl, deren Quadratwurzel bestimmt werden soll. ":"要找到其平方根的数字。\r\n","Gibt an, ob nicht verwaltete Methoden, die über HRESULT-Rückgabewerte oder retval-Rückgabewerte verfügen, direkt übersetzt werden oder ob HRESULT-Rückgabewerte oder retval-Rückgabewerte automatisch in Ausnahmen konvertiert werden.":"指定具有 HRESULT 返回值或 retval 返回值的非托管方法是直接翻译，还是 HRESULT 返回值或 retval 返回值自动转换为异常。\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 16 位带符号整数的值转换为等效的 8 位无符号整数。\r\n","-Verweise, die in ":"- 中的参考文献\r\n","지정된 32비트 부호 없는 정수의 값을 해당하는 16비트 부호 없는 정수로 변환합니다.":"将指定的 32 位无符号整数的值转换为等效的 16 位无符号整数。\r\n","-Parameter verglichen werden soll.":"- 参数 verglichen werden soll。\r\n","Ruft eine Zahl ab, die das Vorzeichen (negativ, positiv oder 0 (null)) des aktuellen ":"获取一个数字，它是当前电流的符号（负数、正数或零）\r\n",".-или- Система не может извлечь абсолютный путь. ":".- 或 - 系统无法提取绝对路径。\r\n",", используя смещение в структуре относительно начала поля.":"，使用结构中相对于字段开头的偏移量。\r\n","Die Berechtigungen, Umwandlung als Typ <T>, der aktuellen Instanz.":"当前实例的权限，转换为 Type<T>。\r\n","Определяет явное преобразование значения ":"定义显式值转换\r\n","Stellt Hilfsmethoden für die Arbeit mit einem sicheren Handle für ein Wait-Handle bereit. ":"提供在等待句柄上使用安全句柄的辅助方法。\r\n","Ссылка на поток назначения. ":"对目标流的引用。\r\n","모니커가 식별하는 개체와 통신하기 위해 클라이언트에서 사용할 인터페이스의 IID(인터페이스 식별자)입니다. ":"客户端用来与名字对象标识的对象进行通信的接口的接口标识符 (IID)。\r\n","Gibt an, dass die Standardaufrufkonvention (STDCALL) für eine Methode verwendet werden soll.":"指示标准调用约定 (STDCALL) 应该用于方法。\r\n","대리자를 비관리 코드에서 호출할 수 있는 함수 포인터로 변환합니다.":"将委托转换为可从非托管代码调用的函数指针。\r\n","버퍼의 크기(바이트)를 가져옵니다.":"获取缓冲区的大小（以字节为单位）。\r\n","Der Typ des Containersteuerelements.":"容器控件的类型。\r\n","속성 참조 할당 구문을 통해 함수가 호출됩니다.":"通过属性引用赋值语法调用函数。\r\n","관리되지 않는 메모리의 지정된 오프셋 위치에 32비트 부호 있는 정수 값을 씁니다.":"将 32 位有符号整数值写入指定偏移量的非托管内存。\r\n","Удаляет все элементы указанной коллекции из текущего набора.":"从当前集合中移除指定集合的​​所有元素。\r\n","-Wert mit einer Ganzzahldivision.":"- 具有整数除法的值。\r\n","Число объектов типа COM VARIANT в ":"中 COM VARIANT 类型的对象数\r\n","Указатель на неуправляемый блок памяти, который должен быть выделен перед вызовом метода. ":"指向必须在调用方法之前分配的非托管内存块的指针。\r\n","이 메서드는 반환될 때 열거된 모니커에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含对枚举名字对象的引用。此参数未初始化传递。\r\n","Сообщение, в котором указывается причина исключения. ":"指定异常原因的消息。\r\n","Показывает массив в стиле языка C.":"以 C 风格显示数组。\r\n","Die Zugriffsmaske für die Regel, die entfernt werden soll.":"要删除的规则的访问掩码。\r\n","Gibt den Feldoffset der nicht verwalteten Form der verwalteten Klasse zurück.":"返回托管类的非托管形式的字段偏移量。\r\n","При возвращении этого параметра содержит интерфейс IConnectionPointContainer объекта, доступного для соединения.Этот параметр передается без инициализации.":"返回此参数时，包含可用于连接的对象的 IConnectionPointContainer 接口。此参数无需初始化即可传递。\r\n","이 메서드는 반환될 때 ITypeComp 변수에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含对 ITypeComp 变量的引用。此参数在未初始化的情况下传递。\r\n",", как показано в следующей таблице.Возвращаемое значение Значение -1 Значение параметра ":"，如下表所示 Return Value Value -1 参数值\r\n","Eine Gleitkommazahl mit doppelter Genauigkeit, die potenziert werden soll. ":"要进行幂运算的双精度浮点数。\r\n","구조체 요소, 매개 변수, 프로세스간 함수 반환 값을 전달하는데 필요한 정보가 들어 있습니다.":"它包含在进程之间传递结构元素、参数和函数返回值所需的信息。\r\n","와 같으면 배정밀도로 반올림된 π/2(1.5707963267949)입니다.":"等于 π/2 (1.5707963267949) 四舍五入为双精度。\r\n",".НульЗначения параметров ":".Null参数值\r\n","Ein Verweis auf den Moniker, der bis zu diesem Punkt aus dem Anzeigenamen erstellt wurde. ":"对到目前为止从显示名称创建的名字对象的引用。\r\n","의 serialization 또는 deserialization 중에 인식해야 할 형식을 가져옵니다. ":"获取在 的序列化或反序列化期间要识别的类型。\r\n","true, wenn das Handle reserviert ist, andernfalls false.":"如果句柄已保留，则为 true，否则为 false。\r\n","Liest beginnend am Offset die angegebene Anzahl von Werttypen aus dem Arbeitsspeicher und schreibt sie beginnend am Index in ein Array. ":"从内存中读取指定数量的值类型，从偏移量开始，并将它们写入数组，从索引开始。\r\n","Одно из значений перечисления, указывающее уменьшает ли LOH полная блокирующая сборка мусора. ":"枚举值之一，指示完全阻塞垃圾回收是否减少了 LOH。\r\n"," konvertiert werden, da nicht alle erforderlichen Schnittstellen unterstützt werden. ":" 转换，因为并非所有必需的接口都受支持。\r\n","Представляет указатель на экземпляр интерфейса, который позволяет отправляющему процессу контролировать способ освобождения хранилища при вызове функции ReleaseStgMedium получающим процессом.Если ":"表示指向接口实例的指针，该接口实例允许发送进程在接收进程调用 ReleaseStgMedium 时控制如何释放存储。如果\r\n","Исключение, которое выбрасывается, когда единица данных считывается или записывается по адресу, не кратному размеру данных.Этот класс не наследуется.":"极，。\r\n","이 메서드는 반환될 때 포함하는 형식 라이브러리의 ITypeComp에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含对包含类型库中 ITypeComp 的引用。此参数在未初始化的情况下传递。\r\n","-Objekt Rückrufdaten enthält.":"- 对象包含回调数据。\r\n"," с именем метода, возвращающего интерфейс известных типов ":" 带有返回已知类型接口的方法的名称\r\n","Следует исключить доступность из макроязыков.Этот флаг предназначен для типов уровня системы или типов, которые не должны отображаться обозревателями типов.":"Exclude accessibility from macro languages. 此标志用于系统级类型或不应由类型浏览器显示的类型。\r\n"," равняется null, ReleaseStgMedium использует процедуры по умолчанию для освобождения хранилища; в противном случае ReleaseStgMedium использует заданный интерфейс IUnknown.":" 为null，ReleaseStgMedium使用默认流程释放存储；否则，ReleaseStgMedium 使用指定的 IUnknown 接口。\r\n",", описывающих способ предоставления интерфейса клиентам COM. ":"，描述如何向 COM 客户端公开接口。\r\n","일치하는 항목을 찾을 수 없음을 나타냅니다.":"表示未找到匹配项。\r\n","Копирует данные из одномерного управляемого массива символов в неуправляемый указатель памяти.":"将数据从一维托管字符数组复制到非托管内存指针。\r\n","Gibt die kleinere von zwei Gleitkommazahlen mit doppelter Genauigkeit zurück.":"返回两个双精度浮点数中较小的一个。\r\n","Der Absolutbetrag von ":"的绝对数量\r\n","Suche nach den Abhängigkeiten einer DLL in dem Ordner, in dem sich die DLL befindet, bevor nach anderen Ordnern gesucht wird. ":"在查找其他文件夹之前，先在 DLL 所在的文件夹中查找 DLL 的依赖项。\r\n"," 생성자에 전달된 ":" 传递给构造函数\r\n"," 속성이 ByValArray로 설정된 경우, ":" 如果该属性设置为 ByValArray，\r\n","Dividiert einen ":"除一\r\n","형식 설명의 속성과 특성을 정의합니다.":"定义类型描述的属性和特征。\r\n","Konvertiert den Wert einer 64-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung in einer angegebenen Basis.":"将 64 位带符号整数的值转换为其在指定基数中的等效字符串表示形式。\r\n","Der Name der Berechtigung, die von der Methode nicht aktiviert werden konnte.":"该方法无法激活的权限的名称。\r\n","-Wert ungleich sind.":"- 值不相等。\r\n","-Objekt aus den angegebenen binären Daten.":"- 来自指定二进制数据的对象。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 32 位带符号整数的值转换为等效的 8 位无符号整数。\r\n","관리되지 않는 메모리의 지정된 오프셋(또는 인덱스) 위치에서 싱글바이트를 읽습니다. ":"在非托管内存中的指定偏移量（或索引）位置读取单个字节。\r\n","Gibt einen Hashcode dieses Objekts zurück.":"返回此对象的哈希码。\r\n","이 메서드는 반환될 때 연결 쿠키를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包括连接 cookie。此参数未初始化传递。\r\n","Показывает возврат объекта TYPECOMP.":"表示返回一个 TYPECOMP 对象。\r\n","Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 64-битовое целое число без знака.":"将指定的 32 位带符号整数的值转换为等效的 64 位无符号整数。\r\n","지정된 배정밀도 부동 소수점 숫자 값을 해당하는 10진수로 변환합니다.":"将指定的双精度浮点数的值转换为其等效的十进制数。\r\n","Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 32-битовое целое число со знаком.":"将指定的双精度浮点数的值转换为等效的 32 位带符号整数。\r\n","Gibt die Größe des Streams in Bytes zurück, der für das Speichern des Objekts benötigt wird.":"返回存储对象所需的流的大小（以字节为单位）。\r\n","저장 미디어가 IStorage 포인터로 식별되는 저장소 구성 요소입니다.데이터는 이 IStorage 인스턴스에 포함된 스트림 및 저장소에 있습니다.":"一个存储组件，其存储介质由一个 IStorage 指针标识。数据驻留在该 IStorage 实例中包含的流和存储中。\r\n","Массив байтов длиной 1.":"Массив байтов длиной 1.\r\n"," 개체의 부호를 나타내는 숫자입니다.숫자설명-1이 개체의 값이 음수입니다.0이 개체의 값이 0입니다.1이 개체의 값이 양수입니다.":" 表示对象符号的数字。数字说明-1 该对象的值为负数。0 该对象的值为0.1 该对象的值为正数。\r\n","지정된 32비트 부호 있는 정수의 값을 해당하는 8비트 부호 없는 정수로 변환합니다.":"将指定的 32 位带符号整数的值转换为等效的 8 位无符号整数。\r\n",", если он найден в списке; в противном случае -1.":"如果在列表中找到；否则-1。\r\n","가 참조하는 형식을 설명하는 ITypeInfo를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"包含描述引用类型的 ITypeInfo。此参数未初始化传递。\r\n","Gibt die Aufrufkonvention einer Funktion an.":"指定函数的调用约定。\r\n","Возвращает релаксации компиляции, заданные при построении текущего объекта.":"返回构造当前对象时指定的编译放宽。\r\n","지정된 IUnknown 인터페이스에 대한 고유한 RCW입니다.":"指定 IUnknown 接口的唯一 RCW。\r\n","저장 미디어 형식을 지정합니다.마샬링 및 역마샬링 루틴에서는 이 값을 사용하여 공용 구조체 멤버가 사용되었는지를 확인합니다.이 값은 ":"指定存储介质类型。编组和解组例程使用此值来确定是否使用联合成员。此值为\r\n","Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 32-битовое целое число со знаком.":"将具有指定基数的数字的字符串表示形式转换为其等效的 32 位带符号整数。\r\n","Объект, тип которого равен ":"类型为的对象\r\n","Der vollständige Pfad der temporären Datei.":"临时文件的完整路径。\r\n","에서는 자릿수(0부터 9까지) 시퀀스에 따라 선택 신호를 구성하지 않습니다. ":"不根据数字序列（0 到 9）构造选择信号。\r\n","Ruft den Standardwert eines Parameters ab.":"获取参数的默认值。\r\n",", за которыми, если требуется различать тип строк, следует тип элементов неуправляемого массива.":", 如果要区分字符串的类型，则后跟非托管数组的元素类型。\r\n"," в значение 16-битового целого числа без знака.":" 为 16 位无符号整数值。\r\n","Предоставляет управляемое определение интерфейса IMoniker с функциональной возможностью COM из IPersist и IPersistStream.":"提供具有来自 IPersist 和 IPersistStream 的 COM 功能的 IMoniker 接口的托管定义。\r\n"," при сериализации или десериализации указанного типа. ":" 序列化或反序列化指定类型时。\r\n","값이 지정되지 않았음을 나타냅니다.":"表示没有指定值。\r\n","Требует, чтобы объект создавал только одно уведомление об изменении или обновление кэша перед удалением соединения.":"要求对象在删除连接之前只生成一个更改通知或缓存更新。\r\n"," ist kleiner als 0 oder größer als 15. ":" 小于 0 或大于 15。\r\n","Указывает, помечен ли метод в Visual Basic модификатором Iterator.":"指示 Visual Basic 中的方法是否标有 Iterator 修饰符。\r\n","[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt] Konvertiert ein Array mit COM-VARIANT in ein Array eines angegebenen Typs. ":"[仅在 .NET Framework 4.5.1 及更高版本中支持] 使用 COM-VARIANT 将数组转换为指定类型的数组。\r\n","뺄 대상 값(피감수)입니다.":"要从中减去的值（被减数）。\r\n"," с типами, используемыми в качестве интерфейсов-источников.":" 类型用作源接口。\r\n","싱글 바이트 null로 끝나는 ANSI 문자열입니다.":"单字节空终止 ANSI 字符串。\r\n","지정된 개체의 값을 64비트 부호 있는 정수로 변환합니다.":"将指定对象的值转换为 64 位有符号整数。\r\n","Второе из двух сравниваемых десятичных чисел. ":"正在比较的两个十进制数中的第二个。\r\n","Das Array, das das gewünschte Element enthält. ":"包含所需元素的数组。\r\n","지정된 16비트 부호 있는 정수를 실제 변환 작업 없이 반환합니다.":"返回指定的 16 位有符号整数而不进行任何实际转换。\r\n","Das zu umschließende Objekt. ":"要包装的对象。\r\n","Ein Objekt, das die nächstmögliche Darstellung des ":"一个对象，它是最接近的可能表示\r\n","Показывает значение ":"显示价值\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung.":"将指定的 16 位无符号整数的值转换为其等效的字符串表示形式。\r\n","Legt den Vererbungsschutz für die DACL fest, die diesem ":"为附加到此的 DACL 设置继承保护\r\n","Die freizugebende Schnittstelle.":"要发布的接口。\r\n"," 특성으로 표시된 형식에서 상속하는 경우":" 从标记为属性的类型继承\r\n"," ist ein generischer Typ. ":" 是泛型。\r\n","-Wert, als der die Daten gemarshallt werden sollen.":"- 将数据编组为的值。\r\n","Der numerische Fehlercode.":"数字错误代码。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in das entsprechende Unicode-Zeichen.":"将指定的 64 位带符号整数的值转换为等效的 Unicode 字符。\r\n","의 동의어입니다.":"是的同义词\r\n","Ein Zeiger auf eine C-Struktur, mit dem verwaltete formatierte Klassen gemarshallt werden.Dieser Member ist nur für Plattformaufrufmethoden gültig.":"A pointer to a C structure used to marshal managed formatted classes. 此成员仅对平台调用方法有效。\r\n"," 개체인 경우.이 메서드에는 ":" 如果它是一个对象。这个方法有\r\n","Объект, содержащий значение HRESULT ошибки. ":"包含错误的 HRESULT 值的对象。\r\n","인터넷 리소스의 경로입니다. ":"Internet 资源的路径。\r\n","Diese Konvertierung wird nicht unterstützt. - oder - ":"不支持此转换。 - 或者 -\r\n","Der Wert, der in eine 32-Bit-Ganzzahl mit Vorzeichen konvertiert werden soll. ":"要转换为 32 位带符号整数的值。\r\n"," не принадлежит к типу ":" 不属于类型\r\n","Произведение параметров ":"参数乘积\r\n","계층적 파일 시스템 구조를 반영하는 경로 문자열에서 디렉터리 수준을 구분하는 데 사용되는 플랫폼 특정 대체 문자를 제공합니다.":"提供特定于平台的替换字符，用于分隔反映分层文件系统结构的路径字符串中的目录级别。\r\n","변환된 HRESULT와 ":"转换后的 HRESULT 和\r\n"," недопустим, в сообщении об исключении указывается, что отсутствуют цифры для преобразования; в противном случае в этом сообщении указывается, что ":" invalid，异常提示没有需要转换的数字；否则，此消息指出\r\n","Keine Abschnitte.":"没有节。\r\n","Es sind keine Objekttypen vorhanden.":"没有对象类型。\r\n","Verwendet den Moniker zum Binden an das von ihm bestimmte Objekt.":"使用名字对象绑定到它指定的对象。\r\n","Ruft den CLR-Namespace des Datenvertragstyps ab oder legt ihn fest. ":"Ruft den CLR-Namespace des Datenvertragstyps ab oder leg ihn fest。\r\n","16비트 부호 있는 정수 값을 지정된 기수의 해당하는 문자열 표현으로 변환합니다.":"将 16 位有符号整数值转换为其在指定基数中的等效字符串表示形式。\r\n","Reserviert einen verwalteten ":"预留托管\r\n","Определяет для функции соглашение о вызове.":"定义函数的调用约定。\r\n","Преобразует значение заданного десятичного числа в эквивалентное число с плавающей запятой двойной точности.":"将指定十进制数的值转换为其等效的双精度浮点数。\r\n","-Parameter der ":"- 参数\r\n","Округляет значение двойной точности с плавающей запятой до заданного количества дробных разрядов.":"将双精度浮点值舍入到指定的小数位数。\r\n","Devuelve el valor entero con signo de 64 bytes especificado como una matriz de bytes.":"Devuelve el valor entero con signo de 64 bytes especificado como una matrix de bytes。\r\n",", описывающей имя файла, который не может быть найден, и его HRESULT, для которой задано COR_E_FILENOTFOUND.":"描述无法找到的文件的名称及其 HRESULT 的 ，它设置为 COR_E_FILENOTFOUND。\r\n","Eine URI-Zeichenfolge. ":"URI 字符串。\r\n","반환할 32비트 부호 있는 정수입니다. ":"要返回的 32 位有符号整数。\r\n","Число, которое больше или равно значению ":"大于或等于该值的数字\r\n","점의 x 좌표입니다. ":"点的 x 坐标。\r\n","싱크는 VTBL(가상 함수 테이블)을 통해 이벤트를 받습니다.":"接收器通过虚函数表 (VTBL) 接收事件。\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in das entsprechende Unicode-Zeichen.":"将指定的 16 位无符号整数的值转换为等效的 Unicode 字符。\r\n","관리되지 않는 메모리의 지정된 오프셋 위치에서 16비트 부호 있는 정수를 읽습니다.":"从指定偏移量处的非托管内存中读取一个 16 位有符号整数。\r\n","Stellt die Anzahl der benannten Argumente dar. ":"表示命名参数的数量。\r\n","소스 인터페이스로 사용할 형식을 사용하여 ":"使用要用作源接口的格式 \r\n","와(과) 일치하는 소수 자릿수가 포함된 ":"与小数位匹配\r\n","Eine 1-Byte-Ganzzahl mit Vorzeichen.Sie können mit diesem Member einen booleschen Wert in einen 1-Byte-bool im C-Format (true = 1, false = 0) transformieren.":"A 1-byte signed integer. 您可以使用此成员将布尔值转换为 1-byte C-style bool (true = 1, false = 0)。\r\n"," не является допустимым типом VARIANT.":" 不是有效的 VARIANT 类型。\r\n"," для поля или параметра.":" 对于字段或参数。\r\n","Массив, содержащий символы, которые не разрешены в именах файлов.":"包含文件名中不允许的字符的数组。\r\n","Выходной массив знаков Юникода. ":"Unicode 字符的输出数组。\r\n","После выполнения этого метода содержит эквивалент типа ":"执行此方法后，包含等效的类型\r\n","개체의 인스턴스입니다.이 매개 변수는 무시됩니다.":"一个对象的实例。这个参数被忽略。\r\n",", der bei der Serialisierung oder Deserialisierung verwendet wird. ":"，用于序列化或反序列化。\r\n","Значение для вычитания (вычитаемое).":"要减去（减去）的值。\r\n","byte를 나타냅니다.":"代表一个字节。\r\n","이(가) null이거나 빈 문자열(\"\")이면 경로 정보가 수정되지 않고 반환됩니다.":"如果为 null 或空字符串 (\"\")，则返回未修改的路径信息。\r\n"," ab, die diesem ":" 从那个这个\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.":"将指定的 16 位带符号整数的值转换为等效的 64 位带符号整数。\r\n","Значение true, если тип доступен; в противном случае — значение false.Значение по умолчанию — true.":"如果类型可用则为真；否则为 false。默认值为 true。\r\n","Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное строковое представление.":"将指定的 64 位带符号整数的值转换为其等效的字符串表示形式。\r\n"," или типа, наследуемого от ":" 或继承自的类型\r\n","Gibt die größere von zwei Gleitkommazahlen mit einfacher Genauigkeit zurück.":"返回两个单精度浮点数中较大的一个。\r\n","При возвращении данного метода содержит данные, считанные из потока.Этот параметр передается без инициализации.":"当此方法返回时，包含从流中读取的数据。此参数无需初始化即可传递。\r\n",".Больше нуляТекущий экземпляр больше значения параметра ":".greater than zero当前实例大于参数值\r\n","Указывает окончание перечисления ":"表示枚举结束\r\n","Diese Methode gibt einen Verweis auf die ITypeComp-Schnittstelle der enthaltenden Typbibliothek zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回对包含类型库的 ITypeComp 接口的引用。此参数未初始化传递。\r\n","관리되지 않는 메모리의 지정된 오프셋 위치에서 64비트 부호 있는 정수를 읽습니다.":"从指定偏移量处的非托管内存中读取一个 64 位有符号整数。\r\n","Показывает целое число unsigned.":"显示无符号整数。\r\n","Копируемая управляемая строка.":"要复制的托管字符串。\r\n","Если свойство ":"如果属性\r\n","Ein Array der Teile des Pfads.":"路径部分的数组。\r\n"," недопустимо.":" 不可接受的。\r\n"," 매개 변수가 운영 체제에서 허용되는 최대 길이를 초과하는 경우":" 参数超过操作系统允许的最大长度。\r\n"," был помечен атрибутом ":" 标有属性\r\n","지정된 8비트 부호 있는 정수의 값을 해당하는 16비트 부호 있는 정수로 변환합니다.":"将指定的 8 位带符号整数的值转换为等效的 16 位带符号整数。\r\n"," — null.-или-Значение параметра ":" - null.-or-参数值\r\n","Die zu decodierende Zeichenfolge.":"要解码的字符串。\r\n","지정된 복소수를 복소수로 지정된 지수만큼 거듭제곱하여 반환합니다.":"返回指定复数的指定复数次方。\r\n","에 대해 권장되는 설정입니다.클래스에서 명시적으로 구현한 인터페이스를 통해 기능을 노출시키는 유일한 방법은 ClassInterfaceType.None을 사용하는 것입니다.":"推荐设置。通过在类中显式实现的接口公开功能的唯一方法是ClassInterfaceType。使用无。\r\n","-Methodenüberladung wie die ":"- 像这样的方法重载\r\n","함수의 반환 형식을 포함합니다.":"包含函数的返回类型。\r\n","Der Index des Parameters dieser Funktion, wofür die benutzerdefinierten Daten abgerufen werden. ":"为其检索用户定义数据的此函数的参数索引。\r\n","지정된 복소수의 덧셈 역원을 반환합니다.":"返回指定复数的加法逆元。\r\n","지정된 32비트 부호 없는 정수 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.":"将指定的 32 位无符号整数值转换为等效的单精度浮点数。\r\n","-Objekt, das mit dieser Instanz verglichen werden soll.":"-Objekt, das mit dieser Instanz verglichen werden soll。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.":"使用指定的区域性特定格式设置信息，将指定的 64 位无符号整数的值转换为其等效的字符串表示形式。\r\n","Valor absoluto de ":"绝对的勇气\r\n","Строка для проверки.Это параметр In или Out.":"要测试的字符串。这是一个 In 或 Out 参数。\r\n","true, wenn der Standardwert für einen Member im Serialisierungsstream generiert werden sollte, andernfalls false.Die Standardeinstellung ist true.":"如果应在序列化流中生成成员的默认值，则为 true；否则为 false。默认值为 true。\r\n","Возвращает большее из двух 32-битовых целых чисел со знаком.":"返回两个 32 位有符号整数中较大的一个。\r\n","Проверяет наличие изменений в объекте с момента его последнего сохранения.":"检查对象自上次保存后是否已更改。\r\n","Возвращает заданное 8-битовое целое число со знаком; фактическое преобразование не производится.":"返回指定的 8 位有符号整数；没有执行实际的转换。\r\n","Значение S_OK, если число пропущенных элементов соответствует параметру ":"S_OK 值，如果缺失元素的数量与参数匹配\r\n","Указывает целевой ":"表示目标\r\n","Ссылка на данный экземпляр со всеми экземплярами ":"将所有实例链接到此实例\r\n","Ein zu aggregierendes Objekt.":"要聚合的对象。\r\n","이 작업에서 사용할 바인드 컨텍스트에 대한 참조입니다. ":"对此操作要使用的绑定上下文的引用。\r\n","인터페이스가 COM에 Windows 런타임 인터페이스로 노출됨을 나타냅니다. ":"指示该接口作为Windows运行时接口公开给COM。 \r\n","Преобразует первый знак заданной строки в знак Юникода, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用指定的区域性特定格式设置信息将指定字符串的第一个字符转换为 Unicode 字符。\r\n","적절한 대리자 형식으로 캐스팅될 수 있는 대리자 인스턴스입니다.":"可以转换为适当委托类型的委托实例。\r\n"," 멤버가 null이면 대상 프로세스에서 DeleteObject를 사용하여 비트맵을 삭제해야 합니다.":" 如果该成员为空，则目标进程应使用 DeleteObject 删除位图。\r\n"," especificados tienen valores distintos.":" 指定具有不同的值。\r\n",", как показано в следующей таблице.ЗначениеЗначениеМеньше нуляЗначение ":"，如下表所示。ValueValue小于零值\r\n","Beschreibt den Schnittstellentyp, der für eine Klasse generiert wird. ":"描述为类生成的接口类型。\r\n","이 메서드는 반환될 때 새 스트림 개체를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含一个新的流对象。此参数未初始化地传递。\r\n","HRESULT 또는 retval 반환 값이 있는 관리되지 않는 메서드가 직접 변환되는지 아니면 HRESULT 또는 retval 반환 값이 자동으로 예외로 변환되는지 여부를 나타냅니다.":"指示是否直接转换具有HRESULT或retval返回值的非托管方法，或者是否自动将HRESULT或retval返回值转换为异常。\r\n"," недопустим.":" 无效的。\r\n","-Objekts eine Potenz von Zwei ist.":"-object 是二的幂。\r\n","Obtiene o establece el nombre del contrato de datos para el tipo.":"Obtiene o establece el nombre del contrato de datos para el tipo。\r\n","텍스트 문자열을 URL 인코딩된 문자열로 변환합니다.":"将文本字符串转换为 URL 编码的字符串。\r\n",", а в Windows CE .NET — ":", 在 Windows CE .NET 中 -\r\n","해당 예외로 매핑되는 HRESULT입니다.":"映射到该异常的 HRESULT。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.":"将指定的 32 位无符号整数的值转换为等效的 8 位有符号整数。\r\n","지수만큼 거듭제곱할 복소수입니다.":"要计算指数次方的复数。\r\n","Значение true, если нужно надежно разрешить ":"Значение true, it is нужно надежно разрешить\r\n","8-разрядное целое число без знака, эквивалентное значению ":"相当于 value 的 8 位无符号整数\r\n","형식 라이브러리에 대한 대상 운영 체제는 Apple Macintosh입니다.기본적으로 모든 데이터 필드는 짝수 바이트 경계로 맞추어집니다.":"类型库的目标操作系统是 Apple Macintosh。默认情况下，所有数据字段都按偶字节边界对齐。\r\n","Возвращает указатель на интерфейс IUnknown, представляющий указанный интерфейс указанного объекта.Доступ к настраиваемому интерфейсу запросов контролируется указанным режимом настройки.":"返回一个指向 IUnknown 接口的指针，该接口表示指定对象的指定接口。对自定义查询接口的访问由指定的配置模式控制。\r\n"," с заданным сообщением об ошибке, именем файла, который не может быть загружен, и ссылкой на внутреннее исключение, являющееся причиной данного исключения.":" 带有指定的错误消息、无法加载的文件的名称以及对导致异常的内部异常的引用。\r\n",", и могут быть несмежными.":", 并且可能不相邻。\r\n","와 같습니다. ":"与...一样\r\n","Класс не может быть экспортирован как структура, или поле не является публичным.Начиная с версии 2.0 платформы .NET Framework поле может быть закрытым.":"该类不能作为结构导出，或者字段不是公共的。从 .NET Framework 2.0 版开始，字段可以是私有的。\r\n","Указывает тип значения отчета о ходе выполнения.":"指定进度报告值的类型。\r\n","Die zu ändernden Pfadinformationen.Der Pfad darf keines der in ":"要更改的路径信息。路径不能是其中之一\r\n","Ruft eine VARDESC-Struktur ab, die die angegebene Variable beschreibt.":"获取描述指定变量的 VARDESC 结构。\r\n","< 0(любое значение)NaN(любое значение)":"< 0（任何值）NaN（任何值）\r\n","Исключение, создаваемое, когда путь или имя файла превышает максимальную длину, определенную системой.":"当路径或文件名超过系统定义的最大长度时抛出的异常。\r\n","Создает новый перечислитель с тем же состоянием перечисления, что и текущий.":"创建与当前枚举器具有相同枚举状态的新枚举器。\r\n","Vergleicht diese Instanz mit einer 64-Bit-Ganzzahl ohne Vorzeichen und gibt eine ganze Zahl zurück, die angibt, ob der Wert dieser Instanz kleiner oder größer als der Wert der 64-Bit-Ganzzahl ohne Vorzeichen ist oder mit diesem übereinstimmt.":"将此实例与 64 位无符号整数进行比较，并返回一个整数，指示此实例的值是小于、大于还是等于 64 位无符号整数的值。\r\n"," 위치에 있는 ":" 就位\r\n"," 값이 부호 있는 64비트 정수 값보다 크거나 같은지를 나타내는 값을 반환합니다.":" 返回一个值，该值指示值是否大于或等于带符号的 64 位整数值。\r\n"," освободить дескриптор на стадии завершения; в противном случае — значение false (не рекомендуется). ":" освободить DESCRIPTOR на стадии завершения; в противном случае — значение false（不推荐）。\r\n","Einer der Werte aus der folgenden Tabelle. ":"下表中的值之一。\r\n","Символ Юникода, который необходимо добавить. ":"要添加的 Unicode 字符。\r\n","Число элементов, содержащихся в экземпляре ":"实例中包含的元素数\r\n","Когда выполнение этого метода завершается, содержит целевой объект, если он доступен.Этот параметр обрабатывается как неинициализированный.":"当此方法完成时，包含目标对象（如果可用）。此参数被视为未初始化。\r\n","Die erste von zwei zu vergleichenden 16-Bit-Ganzzahlen mit Vorzeichen. ":"要比较的两个 16 位有符号整数中的第一个。\r\n","가 지원되지 않는 형식인 경우 ":"格式不受支持\r\n","Индекс необходимого элемента в параметре ":"参数中所需元素的索引\r\n","Приемники получают события при помощи таблицы виртуальной функции (VTBL). ":"接收器使用虚函数表 (VTBL) 接收事件。\r\n","Содержит сведения об элементе. ":"包含有关元素的信息。\r\n","Konvertiert die angegebene Zeichenfolgendarstellung eines Datums und einer Uhrzeit in einen entsprechenden Datums- und Uhrzeitwert.":"将日期和时间的指定字符串表示形式转换为等效的日期和时间值。\r\n"," ist größer als 0 (null) und größer als oder gleich der Länge von ":" 大于零且大于或等于的长度\r\n","부호 있는 64비트 정수를 ":"带符号的 64 位整数\r\n","Представляет отношение длины окружности к ее диаметру, определяемое константой π.":"表示圆的周长与其直径的比率，由常数 π 定义。\r\n","Путь к ресурсу, на который ссылается URI.":"URI 引用的资源的路径。\r\n"," abgerufenen Informationen darstellt.":" 检索到的信息。\r\n","Данное преобразование не поддерживается.  -или-Параметр ":"不支持此转换。 -或-参数\r\n","Определяет, какие язык и региональные параметры поддерживает сборка.":"指定程序集支持的文化。\r\n"," 제네릭 매개 변수가 대리자가 아니거나 개방형 제네릭 형식입니다.":" 泛型参数不是委托或者是开放泛型类型。\r\n","임의의 폴더 이름 또는 파일 이름입니다.":"任意文件夹名称或文件名称。\r\n","64-разрядное знаковое целое число для преобразования. ":"要转换的 64 位有符号整数。\r\n","이 형식 설명과 해당 형식 라이브러리에 있는 인덱스를 포함하는 형식 라이브러리를 검색합니다.":"搜索包含此类型描述和该类型库中的索引的类型库。\r\n","Ein 32-Bit-Ganzzahlwert ohne Vorzeichen.":"一个 32 位无符号整数值。\r\n"," минус 1.":" 减 1。\r\n","Berechnet den ganzzahligen Teil einer angegebenen Dezimalzahl. ":"计算指定十进制数的整数部分。\r\n","Der Wert einer ganzen Zahl mit Vorzeichen, der die Beziehung dieser Instanz zu ":"与此实例相关的有符号整数的值\r\n","Gibt den Hashcode für den URI zurück.":"返回 URI 的哈希码。\r\n","Число, которое больше значения ":"数字大于值\r\n"," 매개 변수가 대리자가 아니거나 제네릭인 경우":" 如果参数不是委托或泛型\r\n","Das Strukturlayout ist weder sequenziell noch explizit. ":"结构布局既不是顺序的也不是明确的。\r\n"," 매개 변수를 현재 작업 파일로 사용하면 true이고, 그렇지 않으면 false입니다. ":" 如果参数用作当前工作文件，则为 true；否则为 false。\r\n","IDispatch::Invoke에서 발생하는 예외를 설명합니다.":"描述 IDispatch::Invoke 引发的异常。\r\n","-Objekts in den Wert einer 64-Bit-Ganzzahl ohne Vorzeichen.":"对象为 64 位无符号整数的值。\r\n","8-байтовое целое число без знака.":"一个 8 字节无符号整数。\r\n","디코딩할 문자열입니다.":"要解码的字符串。\r\n"," для указанного объекта.":" 对于指定的对象。\r\n","Объект, заключаемый в оболочку и маршалируемый как VT_BSTR.":"Объект, заключаемый в оболочку и маршалируемый как VT_BSTR.\r\n","Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 32-Bit-Ganzzahl mit Vorzeichen.":"使用指定的区域性特定格式设置信息将指定对象的值转换为 32 位带符号整数。\r\n","Die Länge der binären Darstellung des aktuellen ":"当前二进制表示的长度\r\n","Konvertiert den Wert der angegebenen Dezimalzahl in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.":"将指定十进制数的值转换为等效的 16 位无符号整数。\r\n","이 메서드는 반환될 때 지정한 항목의 이름을 나타내는 문자열을 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含一个表示指定项目名称的字符串。此参数未初始化传递。\r\n","플랫폼 호출 기능을 제공하는 DLL을 검색하는 데 사용되는 경로를 지정합니다. ":"指定用于检索提供平台调用功能的Dll的路径。 \r\n","Получает смещение в байтах к данным в указанной строке.":"获取指定字符串中数据的字节偏移量。\r\n","단정밀도 부동 소수점 수의 부호를 나타내는 값을 반환합니다.":"返回表示单精度浮点数符号的值。\r\n","Der Typ des zu konvertierenden Delegaten. ":"要转换的委托类型。\r\n","Возвращает произведение двух значений ":"返回两个值的乘积\r\n","Показывает тип, определенный пользователем.":"指示用户定义的类型。\r\n","Объект для маршалинга. ":"要封送的对象。\r\n"," ausgeführten Win32-Code ausgelöst wurde.":" 已执行的 Win32 代码被触发。\r\n","의 곱입니다.":"是产品\r\n",", auf die nächste 32-Bit-Ganzzahl mit Vorzeichen gerundet.Wenn ":", 四舍五入到最接近的 32 位有符号整数。如果\r\n","Eine 8-Bit-Ganzzahl mit Vorzeichen, die der Zahl in ":"一个 8 位有符号整数，对应于中的数字\r\n","d. h. ln ":"IE。 H。在\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.":"将指定的 8 位带符号整数的值转换为等效的双精度浮点数。\r\n"," является null или ":" 为空或\r\n","Базовый адрес в неуправляемой памяти исходного объекта.":"源对象的非托管内存中的基地址。\r\n","Показывает значение null, аналогичное значению null в SQL.":"表示null，类似于SQL中的null。\r\n","Полное имя данного объекта ":"此对象的全名\r\n",". Zero Значения параметров ":".零参数值\r\n","Ссылка на этот экземпляр после завершения операции добавления. ":"添加操作完成后对此实例的引用。\r\n","변수가 사용자 인터페이스에 기본적으로 표시됩니다.":"默认情况下，变量显示在用户界面中。\r\n","이 메서드는 반환될 때 포함하는 형식 라이브러리에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含对所属类型库的引用。此参数未初始化传递。\r\n","Делегат, удаленный из списка вызова.":"从调用列表中删除的委托。\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Gleitkommazahl mit einfacher Genauigkeit.":"将指定的 16 位无符号整数的值转换为等效的单精度浮点数。\r\n"," и преобразует каждый символ ANSI в Юникод.":" 并将每个 ANSI 字符转换为 Unicode。\r\n","-Objekt zugeordneten Zugriffsregeln geändert wurden, oder legt diesen Wert fest.":"- 对象关联的访问规则已更改或设置此值。\r\n","null ist und ":"为零且\r\n","Initialisiert eine Instanz von InvalidComObjectException mit einer Meldung.":"使用消息初始化 InvalidComObjectException 的实例。\r\n","지정된 64비트 부호 있는 정수의 값을 해당하는 16비트 부호 있는 정수로 변환합니다.":"将指定的 64 位带符号整数的值转换为等效的 16 位带符号整数。\r\n","π≤θ≤π 범위의 각도 θ(라디안) 및 tan(θ) = ":"以弧度表示的角度 θ 和范围 π≤θ≤π 中的 tan(θ) =\r\n","Освобождает все ресурсы, используемые классом ":"Освобождает все ресурсы, используемые классом\r\n","Enthält nach dem Beenden der Methode einen Verweis auf die zurückgegebene Schnittstelle.":"包含对方法退出后返回的接口的引用。\r\n","숫자의 지정된 문자열 표현을 해당하는 8비트 부호 있는 정수로 변환합니다.":"将数字的指定字符串表示形式转换为其等效的 8 位带符号整数。\r\n","지정된 32비트 부호 있는 정수를 실제 변환 작업 없이 반환합니다.":"返回指定的 32 位有符号整数而不进行任何实际转换。\r\n","Объект, представляющий значение параметра по умолчанию.":"表示参数默认值的对象。\r\n"," angegeben werden können.":" 可以指定。\r\n"," лежит в диапазоне от 0 до 4.":" 介于 0 到 4 之间。\r\n","Значение типа String, содержащее имя вызываемого члена.Это может быть конструктор, метод, свойство или поле.При вызове метода должен быть задан подходящий атрибут вызова.Член по умолчанию для класса может быть задан путем передачи пустой String в качестве имени члена.Член по умолчанию для типа помечается пользовательским атрибутом DefaultMemberAttribute или в COM-объекте обычным путем. ":"包含要调用的成员名称的字符串值。这可以是构造函数、方法、属性或字段。调用方法时必须设置适当的调用属性。可以通过传递一个类来指定默认成员空字符串作为成员名称。类型的默认成员用自定义 DefaultMemberAttribute 属性标记或以通常方式标记在 COM 对象中。\r\n","Die Zeichenfolgendarstellung eines Datums- und Uhrzeitwerts.":"日期和时间值的字符串表示形式。\r\n","Вычисляет сопряженное число комплексного числа и возвращает результат.":"计算复数的共轭并返回结果。\r\n","Der Offset des Elements, das durch Aufrufen der Plattform übergeben werden soll (in Byte). ":"Der Offset des Elements，das durch Aufrufen der Plattform übergeben werden soll（字节）。\r\n","를 등록할 이름입니다. ":"要注册的名称。\r\n","Der Hyperbelkosinus von ":"双曲余弦为\r\n","관리되는 클래스의 관리되지 않는 형식의 필드 오프셋을 반환합니다.":"返回托管类的非托管类型中字段的偏移量。\r\n","로, 참조로 전달됩니다. ":", 这是通过引用传递的。\r\n"," со значением действительного числа, равным нулю, и значением мнимого числа, равным единице.":" 实数值等于零，虚数值等于一。\r\n","Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 8-битовое целое число со знаком.":"将具有指定基数的数字的字符串表示形式转换为其等效的 8 位带符号整数。\r\n"," 값을 검색합니다.":" 检索值。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.":"使用指定的区域性特定格式设置信息，将指定的 8 位无符号整数的值转换为其等效的字符串表示形式。\r\n","Markiert die Schnittstelle als Schnittstelle mit Standardverhalten.":"将接口标记为具有默认行为。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 16비트 부호 없는 정수로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为 16 位无符号整数。\r\n"," definierten ungültigen Zeichen.":" 定义的无效字符。\r\n","Der Typ des untergeordneten Objekts, das das ":"子对象的类型\r\n","Путь к временной папке, заканчивающийся обратной косой чертой.":"临时文件夹的路径，以反斜杠结尾。\r\n","지정된 개체의 값을 해당하는 부울 값으로 변환합니다.":"将指定对象的值转换为等效的布尔值。\r\n",", die diesem ":"这是谁\r\n","파생 클래스에서 재정의된 경우 지정된 문자열의 해시 코드를 가져옵니다.":"在派生类中重写时，获取指定字符串的哈希码。\r\n","Konvertiert den Wert des angegebenen Objekts in eine 8-Bit-Ganzzahl mit Vorzeichen.":"将指定对象的值转换为 8 位有符号整数。\r\n","Diese Methode gibt den Namen der Elementmethode zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回成员方法的名称。此参数未初始化传递。\r\n","Если значение не равно null, функция задает для параметра ":"如果该值不为空，则该函数将参数设置为\r\n","Die größte Ganzzahl, die kleiner oder gleich ":"小于或等于的最大整数\r\n","Ruft einen Wert ab, der angibt, ob das Handle reserviert ist.":"获取一个值，该值指示句柄是否已保留。\r\n","Ruft den absoluten Wert (oder die Größenordnung) einer komplexen Zahl ab.":"获取复数的绝对值（或大小）。\r\n","Das Objekt, für das ein Hashcode zurückgegeben werden soll. ":"要为其返回哈希码的对象。\r\n","간격에 대한 경과 시간 측정을 시작하거나 다시 시작합니다.":"开始或恢复测量一个间隔的经过时间。\r\n","Удаляет делегат из списка вызова событий, поступающих от COM-объекта.":"从来自 COM 对象的调用事件列表中删除委托。\r\n","Преобразует заданное строковое представление числа в эквивалентное десятичное число, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"在给定指定的区域性特定格式设置信息的情况下，将数字的指定字符串表示形式转换为其等效的十进制数。\r\n","При возвращении данного метода содержит ссылку на фактическое число ссылок, перечисленных в ":"当此方法返回时，包含对中列出的实际链接数的引用\r\n","대상 개체에 대한 관리되지 않는 메모리의 기본 주소입니다.":"目标对象在非托管内存中的基地址。\r\n","Указатель на структуру в стиле языка C, используемую для маршалинга управляемых форматируемых классов.Этот член является допустимым только для методов вызова неуправляемого кода.":"指向用于编组托管格式化类的 C 样式结构的指针。此成员仅对平台调用方法有效。\r\n"," экземпляра ":" 实例\r\n",", der eine nicht zur Basis 10 gehörende Zahl ohne Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf. ":"，表示一个无符号的非 10 进制数，以负号为前缀。\r\n","Konvertiert den Wert des angegebenen Objekts in eine 8-Bit-Ganzzahl ohne Vorzeichen.":"将指定对象的值转换为 8 位无符号整数。\r\n","Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 32-битовое целое число без знака.":"将指定的双精度浮点数的值转换为其等效的 32 位无符号整数。\r\n","Konvertiert den Wert des angegebenen Objekts in eine Gleitkommazahl mit einfacher Genauigkeit.":"将指定对象的值转换为单精度浮点数。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 64비트 부호 있는 정수로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为 64 位有符号整数。\r\n","지정된 경로 문자열에 루트가 포함된지를 나타내는 값을 가져옵니다.":"获取一个值，该值指示指定的路径字符串是否包含根。\r\n"," класса.":" 班级。\r\n","Stellt ein Benutzerkonto dar.":"表示一个用户帐户。\r\n"," указывает позицию символа вне пределов данного экземпляра.-или- При увеличении значения данного экземпляра будет превышено значение ":" 指定此实例之外的字符位置。- 或 - 增加此实例的值将超过该值\r\n"," 값이 부호 있는 64비트 정수보다 작거나 같은지를 나타내는 값을 반환합니다.":" 返回一个值，该值指示值是否小于或等于 64 位有符号整数。\r\n"," 개체의 내부 정수 표현을 반환합니다.":" 返回对象的内部整数表示形式。\r\n","Entfernen Sie Autorisierungsregeln, die genau mit der angegebenen Autorisierungsregel aus der Zugriffssteuerungsliste übereinstimmen.":"从访问控制列表中删除与指定授权规则完全匹配的授权规则。\r\n","Размер в байтах указанного объекта в неуправляемом коде. ":"非托管代码中指定对象的大小（以字节为单位）。\r\n"," содержится менее двух или более трех компонентов.-или-":" 包含少于两个或多于三个组件。-或-\r\n","При переопределении в производном классе получает значение, показывающее, допустимо ли значение дескриптора.":"При переопределении в производном классе получает значение, показывающее, допустимо ли значение десриптора。\r\n","Выделяет управляемый объект ":"分配一个托管对象\r\n"," (z. B. \"C:\\\") oder null, wenn ":" （例如“C:\\”）或 null 如果\r\n","-Attributs bestimmt, das auf die enthaltende Struktur angewendet wird.Verwenden Sie immer das ":"应用于包含结构的属性。总是使用这个\r\n","Eine verwaltete Zeichenfolge, die eine Kopie der systemeigenen ANSI-Zeichenfolge enthält, wenn der Wert des ":"如果值为\r\n","Версия платформы .NET Framework, относительно которой построена сборка.":"构建程序集所针对的 .NET Framework 版本。\r\n","가 적절한 형식에 있지 않습니다.":"格式不正确。\r\n","Преобразует заданное логическое значение в эквивалентное 32-битовое целое число со знаком.":"将指定的布尔值转换为等效的 32 位带符号整数。\r\n","Diese Methode versucht, geerbte Regeln aus einer nicht kanonischen Systemzugriffssteuerungsliste (SACL – System Access Control List) zu entfernen.":"此方法尝试从非规范系统访问控制列表 (SACL) 中删除继承的规则。\r\n","Eine Windows-Runtime-Zeichenfolge.Sie können diesen Member für den ":"Windows 运行时字符串。您可以将此成员用于\r\n","Возвращает или задает объект, предоставляемый дескриптором.":"获取或设置句柄提供的对象。\r\n"," 메서드가 호출되지 않았습니다. ":" 未调用该方法。\r\n","Die Zeichenfolgendarstellung des Inhalts von ":"内容的字符串表示形式\r\n","Считывает из неуправляемой памяти с указанным смещением 32-битное целое число со знаком.":"从指定偏移量处的非托管内存中读取一个 32 位有符号整数。\r\n","Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl ohne Vorzeichen und ein ":"返回一个值，该值指示 64 位无符号整数和\r\n","-Klasse unter Verwendung eines zeitabhängigen Standardstartwerts.":"使用依赖于时间的默认种子的类。\r\n","Die Datei oder das Verzeichnis, für das die absoluten Pfadinformationen abgerufen werden sollen. ":"要获取其绝对路径信息的文件或目录。\r\n"," больше или равно длине параметра ":" 大于等于参数长度\r\n","만들려는 ":"你想创造什么 \r\n"," недопустимо. -или-Индекс элемента формат меньше 0 (нуля) или больше или равен 2 (два). ":" 不可接受的。 - 或 - 格式元素的索引小于 0（零）或大于或等于 2（二）。\r\n"," 인스턴스에서 생성된 ":" 在实例中创建\r\n","Konvertiert die angegebene Zeichenfolge, die Binärdaten als Base-64-Ziffern codiert, in ein entsprechendes Array von 8-Bit-Ganzzahlen ohne Vorzeichen.":"将指定的字符串（将二进制数据编码为 base-64 数字）转换为等效的 8 位无符号整数数组。\r\n","true mantiene los datos de referencia al objeto mediante XML estándar; de lo contrario, false.El valor predeterminado es false.":"真实的 mantiene los dates de referencia al objeto mediante XML 标准； de lo contrario, false. El valor predeterminado es false.\r\n","El nombre local del contrato de datos.El valor predeterminado es el nombre de la clase a la que se aplica el atributo.":"El nombre local del contrato de datos.El valor predeterminado es el nombre de la clase a la que se aplica el atributo。\r\n","함수는 VTBL(가상 함수 테이블)을 통해 액세스되고 암시적인 this 포인터를 사용합니다.":"通过虚函数表 (VTBL) 访问函数并使用隐式 this 指针。\r\n","배정밀도 부동 소수점 값을 지정된 소수 자릿수로 반올림합니다.":"将双精度浮点值舍入到指定的小数位数。\r\n","Константа, которая используется для задания бесконечного периода ожидания для методов управления потоками, принимающих параметр ":"一个常量，用于为采用参数的流量控制方法设置无限等待期\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 단정밀도 부동 소수점 숫자로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为单精度浮点数。\r\n","Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 8-Bit-Ganzzahl ohne Vorzeichen.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为 8 位无符号整数。\r\n","이 메서드는 반환될 때 항목 메서드의 이름을 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含项目方法的名称。此参数未初始化传递。\r\n","관리되지 않는 메모리 블록의 데이터를 지정된 형식의 새로 할당된 관리되는 개체로 마샬링합니다.":"将非托管内存块中的数据编组到新分配的指定类型的托管对象中。\r\n","Округляет десятичное значение до указанного числа дробных разрядов.":"将小数值四舍五入到指定的小数位数。\r\n","Gibt alle dem Handle zugeordneten Ressourcen frei.":"释放与句柄关联的所有资源。\r\n","에 해당하는 64비트 부호 있는 정수이거나, ":"是一个 64 位有符号整数，等同于\r\n"," меньше нуля или ":" 小于零或\r\n","가 클래스 또는 배열이 아닌 경우또는 ":"如果它不是一个类或数组或 \r\n"," не включает основной и дополнительный номера версии.-или-":" 不包括主要和次要版本号。-或-\r\n","Результат умножения частей ":"部分相乘的结果\r\n"," 값이 부호 없는 64비트 정수 값보다 크거나 같은지를 나타내는 값을 반환합니다.":" 返回一个值，该值指示值是否大于或等于无符号 64 位整数值。\r\n","Преобразует значение заданного символа Юникода в эквивалентное 8-битовое целое число со знаком.":"将指定 Unicode 字符的值转换为其等效的 8 位带符号整数。\r\n","Erstellt eine komplexe Zahl aus den Polarkoordinaten eines Punkts.":"从一个点的极坐标创建一个复数。\r\n"," gerundet werden soll, wenn der Wert genau in der Mitte zwischen zwei anderen Zahlen liegt.":" 如果该值恰好在其他两个数字的中间，则应四舍五入。\r\n","IConnectionPointContainer 인터페이스의 관리되는 정의를 제공합니다.":"提供 IConnectionPointContainer 接口的托管定义。\r\n","에 지정된 숫자의 기수로서 2, 8, 10 또는 16이어야 합니다. ":"中指定的数字的基数必须是 2、8、10 或 16。\r\n"," существует в таблице; в противном случае — новое значение, созданное конструктором класса по умолчанию, определенного параметром универсального типа ":" 存在于表中；否则，由泛型类型参数定义的默认类的构造函数创建的新值\r\n"," — null.-или- Значение параметра ":" - null.- 或 - 参数值\r\n","고유 이름의 개수에 대한 포인터입니다.호출자가 이 정보를 필요로 하지 않으면 null로 설정합니다.":"指向可分辨名称数量的指针。如果调用者不需要此信息，则设置为 null。\r\n","Член, вызываемый при помощи синтаксиса вызова обычной функции.":"使用普通函数调用语法调用的成员。\r\n","Предоставляет перечислитель, который поддерживает простой перебор элементов в указанной коллекции.Чтобы просмотреть исходный код .NET Framework для этого типа, см. ссылки на источник.":"提供支持对指定集合中的元素进行简单迭代的枚举器。若要查看此类型的 .NET Framework 源代码，请参阅源链接。\r\n","Предоставляет управляемое определение интерфейса IRunningObjectTable.":"为 IRunningObjectTable 接口提供托管定义。\r\n","Округляемое десятичное число. ":"要四舍五入的小数。\r\n","네이티브 힙에서 값을 쓸 기본 주소입니다.":"从本机堆中写入值的基地址。\r\n","Zugriff verweigern.":"拒绝访问。\r\n","Создает исключение с определенным значением ошибки HRESULT.":"抛出具有指定 HRESULT 错误值的异常。\r\n"," con el valor de identificador no válido especificado.":" 与 el valor de identificador no valido especificado。\r\n","32-разрядное знаковое целое число для преобразования. ":"要转换的 32 位有符号整数。\r\n","Der dritte zu kombinierende Pfad.":"第三条路结合。\r\n","숫자의 지정된 문자열 표현을 해당하는 8비트 부호 없는 정수로 변환합니다.":"将数字的指定字符串表示形式转换为其等效的 8 位无符号整数。\r\n","지정된 기수로 나타낸 숫자의 문자열 표현을 해당하는 32비트 부호 없는 정수로 변환합니다.":"将指定基数中数字的字符串表示形式转换为等效的 32 位无符号整数。\r\n","Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"在给定指定的区域性特定格式设置信息的情况下，将指定的 32 位带符号整数的值转换为其等效的字符串表示形式。\r\n","Diese Methode gibt den voll qualifizierten Namen der Hilfedatei zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回帮助文件的完全限定名称。此参数未初始化传递。\r\n","Возвращает указатель интерфейса на хранилище, в котором содержится объект, определенный моникером.":"返回指向包含由名字对象指定的对象的存储的接口指针。\r\n","Сведения о товарном знаке. ":"商标信息。\r\n","Die Methode gibt eine STATSTG-Struktur zurück, die dieses Streamobjekt beschreibt.Dieser Parameter wird nicht initialisiert übergeben.":"该方法返回一个描述该流对象的 STATSTG 结构。该参数在未初始化的情况下传递。\r\n","Ändert die Größe des Streamobjekts.":"调整流对象的大小。\r\n","복소수의 켤레 복소수를 계산한 후 결과를 반환합니다.":"计算复数的复共轭并返回结果。\r\n","Der ursprüngliche ":"原本的\r\n","Свойство или метод является элементом, который должен быть видимым только для опытных пользователей.Редактор может показать или скрыть такие свойства.":"属性或方法是只对高级用户可见的元素。编辑器可以显示或隐藏此类属性。\r\n","Entfernt die Zugriffsbeschränkung für einen Bereich von Bytes, der zuvor mit der ":"删除以前与关联的字节范围的访问限制\r\n","지정된 키가 테이블에서 성공적으로 제거되었으면 S_OKHRESULT 값이고, 그렇지 않으면 S_FALSEHRESULT 값입니다.":"如果从表中成功删除了指定的键，则值为 S_OKHRESULT；否则，值为 S_FALSEHRESULT。\r\n","-Datentyp anwenden.":"-应用数据类型。\r\n","Der Typ dieses ":"这个家伙\r\n"," ungültig ist, andernfalls gibt die Meldung an, dass ":" 无效，否则消息指出\r\n","Das sichere Wait-Handle, welches das systemeigene Betriebssystem-Wait-Handle umschließt. ":"安全等待句柄，它包装了本机操作系统等待句柄。\r\n"," 메서드를 호출하여 반환된 값을 반영합니다.":" 调用方法以反映返回值。\r\n"," не найден, ":" 未找到，\r\n","Ссылка на данный экземпляр с помощью ":"引用此实例\r\n","호출자가 결과 개체와 통신하기 위해 사용하는 인터페이스의 IID입니다. ":"调用者用来与结果对象通信的接口的 IID。\r\n","가 사용 가능한 주소 공간보다 큽니다.":"大于可用地址空间。\r\n","При возвращении данного метода содержит строку BSTR, задающую полное имя файла, содержащего библиотеку DLL, используемую для файла справки.Если вызывающему объекту не требуется имя файла, ":"当此方法返回时，包含一个 BSTR 字符串，该字符串指定包含用于帮助文件的 DLL 的文件的完全限定文件名。如果调用者不需要文件名，\r\n"," представляет объект, в который вкладывается свойство.":" 表示嵌套属性的对象。\r\n","Позволяет управлять физическим размещением полей данных класса или структуры в памяти.":"允许您控制类或结构的数据字段在内存中的物理位置。\r\n","Платформозависимое знаковое целое число без знака: 4 байта в 32-разрядной Windows, 8 байт в 64-разрядной Windows.":"特定于平台的无符号有符号整数：32 位 Windows 上为 4 个字节，64 位 Windows 上为 8 个字节。\r\n","Возникает ошибка ввода-вывода, например, отсутствует уникальное имя временного файла.-или-Этот метод не смог создать временный файл.":"发生 I/O 错误，例如缺少临时文件的唯一名称。 - 或 - 此方法无法创建临时文件。\r\n","관리되지 않는 ":"不受管理的\r\n","관리되지 않는 메모리에서 읽은 16비트 부호 있는 정수입니다.":"从非托管内存中读取的 16 位有符号整数。\r\n","Показатель степени, в которую будет возведено значение ":"值将提高到的指数\r\n","Адрес освобождаемой неуправляемой строки.":"要释放的非托管字符串的地址。\r\n","Результат битовой операции And.":"位运算的结果 And。\r\n","true, wenn die 64-Bit-Ganzzahl mit Vorzeichen und die aktuelle Instanz über den gleichen Wert verfügen, andernfalls false.":"如果 64 位有符号整数和当前实例具有相同的值，则为 true；否则为 false。\r\n","Выполняет инициализацию нового экземпляра класса MarshalDirectiveException с заданным сообщением об ошибке.":"使用指定的错误消息初始化 MarshalDirectiveException 类的新实例。\r\n","Возвращает значение, указывающее, равны ли два комплексных числа.":"返回一个值，该值指示两个复数是否相等。\r\n","Представляет значение, на которое ссылается ":"表示引用的值\r\n"," 개체 및 프로필 이름에서 ":" 从对象和配置文件名称\r\n","이 메서드는 반환될 때 포함하는 형식 라이브러리에 있는 형식 설명의 인덱스에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含对包含类型库中类型描述索引的引用。此参数未初始化传递。\r\n","Запрашивает у доступного для соединения объекта наличие точки подключения для определенного IID, и, если она имеется, возвращает указатель интерфейса IConnectionPoint на эту точку подключения.":"查询特定 IID 的连接点的可连接对象，如果是，则返回指向该连接点的 IConnectionPoint 接口指针。\r\n","변수로의 할당은 허용되지 않습니다.":"不允许对变量赋值。\r\n","Имя свойства, используемого для доступа к полю с атрибутами. ":"用于访问属性字段的属性的名称。\r\n","Entfernt den angegebenen ACE aus dem aktuellen ":"从当前 ACE 中删除指定的 ACE\r\n","가 적절한 형식에 있지 않습니다. ":"格式不正确。\r\n","Die Methode gibt einen Verweis auf eine ITypeComp-Variable zurück.Dieser Parameter wird nicht initialisiert übergeben.":"该方法返回对 ITypeComp 变量的引用。此参数未初始化传递。\r\n","Eine bitweise Kombination von Enumerationswerten, die Suchpfade für Plattformaufrufe angeben. ":"指定平台调用搜索路径的枚举值的按位组合。\r\n","Обработчик, который необходимо вызывать для каждого сообщаемого значения хода выполнения.Этот обработчик вызывается в дополнение ко всем делегатам, зарегистрированным с событием ":"为每个报告的进度值调用的处理程序。除了向事件注册的任何委托之外，还会调用此处理程序\r\n","Der Schnittstellenbezeichner (Interface Identifier, IID) der angeforderten Schnittstelle.":"所请求接口的接口标识符 (IID)。\r\n",".Если последним символом параметра ":".如果参数的最后一个字符\r\n"," не включает допустимый номер версии.":" 不包括有效的版本号。\r\n","Die zweite von zwei zu vergleichenden 8-Bit-Ganzzahlen mit Vorzeichen. ":"要比较的两个 8 位有符号整数中的第二个。\r\n","-Elementen an der Position ":"-位置上的元素\r\n","변환할 값을 제공하는 개체나 null입니다. ":"提供要转换的值的对象或 null。\r\n","사용자 지정 마샬러에 추가 정보를 제공합니다.":"向自定义封送拆收器提供附加信息。\r\n","비교할 두 개의 32비트 부호 없는 정수 중 첫 번째 숫자입니다. ":"要比较的两个 32 位无符号整数中的第一个。\r\n","-Werts zurück.":"-价值回归。\r\n","예외 개체에 대한 IErrorInfo 인터페이스에 전달되는 추가 오류 정보를 사용하여 지정된 HRESULT 오류 코드를 해당하는 ":"传递给异常对象的 IErrorInfo 接口的附加错误信息用于将指定的 HRESULT 错误代码转换为相应的\r\n","Stellt das Verhältnis eines Kreisumfangs zum Kreisdurchmesser durch die Konstante π dar.":"用常量 π 表示圆的周长与圆的直径之比。\r\n","지정된 배정밀도 부동 소수점 숫자 값을 해당하는 문자열 표현으로 변환합니다.":"将指定的双精度浮点数的值转换为其等效的字符串表示形式。\r\n",", aber kleiner oder gleich ":", 但小于或等于\r\n","Битовая комбинация значений перечисления, определяющих пути поиска для вызовов платформы. ":"定义平台调用搜索路径的枚举值的按位组合。\r\n","지정된 배정밀도 부동 소수점 숫자 값을 해당하는 8비트 부호 없는 정수로 변환합니다.":"将指定的双精度浮点数的值转换为等效的 8 位无符号整数。\r\n","Это свойство ":"这个性质\r\n","Gibt das Format der Zwischenablage an.":"指定剪贴板的格式。\r\n"," должен быть производным от __ComObject. -или-":" 必须派生自 __ComObject。 -或者-\r\n","Строка, оканчивающаяся нулем и содержащая абсолютный путь к файлу, в котором требуется сохранить объект. ":"一个以 null 结尾的字符串，包含存储对象的文件的绝对路径。\r\n","Число двойной точности с плавающей запятой, задающее степень. ":"指定幂的双精度浮点数。\r\n","Beendet eine Advise-Verbindung, die zuvor mit der ":"终止先前连接到\r\n","Der Index des gewünschten Elements im ":"中所需元素的索引\r\n","Diese Methode gibt das Verbindungscookie zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回连接 cookie。此参数未初始化传递。\r\n","При возвращении данного метода содержит указатель на целое число, являющееся одним из значений из перечисления MKSYS и ссылающееся на один из классов моникеров COM.Этот параметр передается без инициализации.":"当此方法返回时，包含一个指向整数的指针，该整数是 MKSYS 枚举中的值之一，并引用 COM 名字对象类之一。此参数无需初始化即可传递。\r\n","Ein Verweis auf die IID der Ausgangsschnittstelle, deren Verbindungspunkt angefragt wird. ":"对正在查询其连接点的传出接口的 IID 的引用。\r\n","지정된 64비트 부호 없는 정수의 값을 해당하는 8비트 부호 없는 정수로 변환합니다.":"将指定的 64 位无符号整数的值转换为等效的 8 位无符号整数。\r\n","Enthält Informationen, die benötigt werden, um ein Strukturelement, einen Parameter oder den Rückgabewert einer Funktion zwischen Prozessen zu übertragen.":"包含在进程之间传输结构元素、参数或函数返回值所需的信息。\r\n","64-разрядное знаковое целое число, которое эквивалентно значению параметра ":"与参数值等价的 64 位有符号整数\r\n","Eine bitweise Kombination der Enumerationswerte.Diese Kombination gibt die Überwachungsbedingungen für diese Überwachungsregel an.":"枚举值的按位组合，这个组合指定了这个监控规则的监控条件。\r\n","При возвращении данного метода содержит строку, представляющую имя заданного элемента.Этот параметр передается без инициализации.":"当此方法返回时，包含一个表示指定元素名称的字符串。此参数无需初始化即可传递。\r\n","파스칼 호출 규칙을 메서드에 사용해야 함을 나타냅니다.":"指示该方法应使用 Pascal 调用约定。\r\n","지정된 8비트 부호 있는 정수를 실제 변환 작업 없이 반환합니다.":"返回指定的 8 位有符号整数而不进行任何实际转换。\r\n","8-разрядное знаковое целое число для преобразования. ":"要转换的 8 位有符号整数。\r\n","복소수의 실수 구성 요소입니다.":"复数的实部。\r\n","COM 인터페이스 포인터.인터페이스의 ":"接口的 COM 接口指针。\r\n","가 두 정수의 중간이고, 이 숫자 중 하나는 짝수이고 다른 하나는 홀수이면, ":"是两个整数的中间值，如果其中一个为偶数，另一个为奇数，\r\n","Die erste von zwei zu vergleichenden 32-Bit-Ganzzahlen mit Vorzeichen. ":"要比较的两个 32 位有符号整数中的第一个。\r\n","Возвращает значение, определяющее знак 16-битового целого числа со знаком.":"返回一个值，该值指定 16 位有符号整数的符号。\r\n"," больше доступного адресного пространства.":" 更多的可用地址空间。\r\n","-Struktur unter Verwendung eines Gleitkommawerts mit einfacher Genauigkeit.":"使用单精度浮点值的结构。\r\n","개체가 변경되었으면 S_OKHRESULT 값이고, 그렇지 않으면 S_FALSEHRESULT 값입니다.":"如果对象已更改，则值为 S_OKHRESULT；否则，值为 S_FALSEHRESULT。\r\n"," 메서드를 사용하여 할당한 관리되지 않는 문자열 포인터를 해제합니다.":" 释放使用该方法分配的非托管字符串指针。\r\n","IEnumFORMATETC 인터페이스의 관리되는 정의를 제공합니다.":"提供 IEnumFORMATETC 接口的托管定义。\r\n","Entero de 64 bits con signo.":"输入 64 位 con signo。\r\n",", используя 32-разрядное знаковое целое число.":", используя 32-разрядное знаковое целое число.\r\n"," 메서드가 호출되지 않았습니다.":" 未调用该方法。\r\n","지정된 COM 개체와 연결된 지정된 RCW(RCW)의 참조 횟수를 감소시킵니다.":"减少与指定 COM 对象关联的指定 RCW (RCW) 的引用计数。\r\n","이 메서드는 반환될 때 요청한 ITypeInfo 인터페이스를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含请求的 ITypeInfo 接口。此参数未初始化传递。\r\n","Объект, предоставляющий интерфейс. ":"提供接口的对象。\r\n","현재 모니커가 구성 모니커의 일부인 경우 해당 모니커의 왼쪽에 있는 모니커에 대한 참조입니다. ":"对当前名字对象左侧名字对象的引用，如果它是合成名字对象的一部分。\r\n","Делегат, вызываемый при срабатывании события COM.":"触发 COM 事件时调用的委托。\r\n"," 범위의 배정밀도 부동 소수점 숫자 x입니다.":" 范围内的双精度浮点数 x。\r\n","Часть фрагмента URI.Идентификатор фрагмента (#) добавляется в начале фрагмента.":"URI的分片部分，在分片的开头添加分片标识符（#）。\r\n","에 해당하는 16비트 부호 있는 정수를 반환합니다.":"返回一个 16 位有符号整数，等价于\r\n","Библиотека типов хранится на диске.":"类型库存储在磁盘上。\r\n","Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное строковое представление.":"将指定的 16 位带符号整数的值转换为其等效的字符串表示形式。\r\n","데이터를 식별하는 데 사용되는 GUID입니다. ":"用于标识数据的 GUID。\r\n","Массив WaitHandle, содержащий объекты, ожидаемые текущим экземпляром. ":"包含当前实例正在等待的对象的 WaitHandle 数组。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende Gleitkommazahl mit einfacher Genauigkeit.":"将指定的 8 位带符号整数的值转换为等效的单精度浮点数。\r\n","Тип объекта для преобразования. ":"要转换的对象的类型。\r\n","Тип, размер которого возвращается. ":"返回其大小的类型。\r\n","라이브러리의 설명서 문자열, 전체 도움말 파일 이름과 경로, 도움말 파일의 라이브러리 도움말 항목에 대한 컨텍스트 식별자를 검색합니다.":"检索库的文档字符串、完整的帮助文件名和路径，以及帮助文件中库帮助主题的上下文标识符。\r\n","의 형식을 인식할 수 없는 경우또는":"如果 的格式无法识别，或者\r\n","Действительная часть комплексного числа.":"复数的实部。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende Zeichenfolgendarstellung.":"将指定的单精度浮点数的值转换为其等效的字符串表示形式。\r\n"," ist, wird dieser Wert zurückgegeben.Wenn ":" 是，该值被返回。如果\r\n","Библиотеки типов описывают элементы управления и не отображаются в обозревателях типов, предназначенных для невизуальных объектов.":"类型库描述控件，不会出现在为非可视对象设计的类型浏览器中。\r\n"," 개체의 문자열 표현을 반환합니다.":" 返回对象的字符串表示形式。\r\n"," und gibt eine ganze Zahl zurück, die angibt, ob der Wert dieser Instanz kleiner oder größer als der Wert des angegebenen Objekts ist oder mit diesem übereinstimmt.":" 并返回一个整数，指示此实例的值是小于、大于还是等于指定对象的值。\r\n","-Wert um eine angegebene Anzahl von Bits nach rechts.":"值向右指定的位数。\r\n","요청된 인터페이스의 형식입니다. ":"请求的接口类型。\r\n","오프셋 0이 있는 모든 멤버의 공용 구조체입니다.":"偏移量为 0 的所有成员的并集。\r\n",", представляющее число со знаком в системе счисления, основание которой отлично от 10, предваряется знаком минус. ":", 表示以除 10 以外的基数表示的有符号数，前面有一个减号。\r\n","Имя события в ":"事件的名称在\r\n","Der Typ des verwalteten Objekts. ":"管理对象的类型。\r\n","Konvertiert den angegebenen booleschen Wert in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.":"将指定的布尔值转换为等效的双精度浮点数。\r\n","Eine Zahl, die das Vorzeichen von ":"一个带有符号的数字\r\n","Значение true, если текущий набор является подмножеством объекта ":"如果当前集合是对象的子集，则为真\r\n","Eine 32-Bit-Ganzzahl mit Vorzeichen, die beginnend bei ":"Eine 32-Bit-Ganzzahl mit Vorzeichen, die beginnend bei\r\n"," имеет значение null, процесс назначения должен использовать DeleteMetaFile для удаления растрового изображения.":" 为空，目标进程必须使用 DeleteMetaFile 删除位图。\r\n","Целое число, равное нулю (0).":"一个等于零 (0) 的整数。\r\n","Управляемый массив. ":"Управляемый массив。\r\n","의 버전을 가져옵니다.":"获取版本\r\n","null, если объект, на который ссылается текущий объект ":"如果当前对象引用的对象为 null\r\n","Die zu kopierende verwaltete Zeichenfolge.":"要复制的托管字符串。\r\n","Преобразует заданное строковое представление числа в эквивалентное 32-битовое целое число без знака.":"将数字的指定字符串表示形式转换为其等效的 32 位无符号整数。\r\n","Ersetzt den Namen aller Umgebungsvariablen, die in die angegebene Zeichenfolge eingebettet sind, durch die Zeichenfolgenentsprechung für den Wert der Variablen und gibt anschließend das Ergebnis als Zeichenfolge zurück.":"将指定字符串中嵌入的任何环境变量的名称替换为变量值的等效字符串，然后将结果作为字符串返回。\r\n","Складывает два значения ":"Складывает два значения\r\n"," 개체의 숫자 값을 해당 문자열 표현으로 변환합니다.":" 将对象的数值转换为其字符串表示形式。\r\n","-Enumerationskonstanten an, die angibt, wie detailreich das Rendering erfolgen soll.":"指定渲染的详细程度的枚举常量。\r\n",", der den Klassenbezeichner der ursprünglichen Co-Klasse enthält.":"，其中包含原始共同类的类标识符。\r\n"," инкапсулируемым в обертку объектом.":" 封装在包装器中的对象。\r\n"," не является типом значения.":" 不是值类型。\r\n","Строка, содержащая сведения о конфигурации сборки.":"包含构建配置信息的字符串。\r\n"," представляет число, больше ":" 表示大于的数\r\n","Beschreibt die Quelle und das Ziel eines angegebenen serialisierten Streams und stellt einen zusätzlichen aufruferdefinierten Kontext bereit.":"描述指定序列化流的源和目标，并提供额外的调用者定义的上下文。\r\n","true, wenn das neue ":"如果新的是真的\r\n","변환할 HRESULT입니다.":"要转换的 HRESULT。\r\n"," является ссылочным типом и значение параметра ":" 是引用类型和参数的值\r\n","Die zurückzugebende 64-Bit-Ganzzahl ohne Vorzeichen. ":"要返回的 64 位无符号整数。\r\n","를 뺀 길이가 ":"减去长度\r\n","Der Sinus von ":"的正弦\r\n"," 가 0 보다 작거나 15 보다 큰 경우 ":" 小于 0 或大于 15\r\n","Объединяет текущий моникер с другим, создавая составной моникер.":"将当前名字对象与另一个组合，创建复合名字对象。\r\n",", die gerade mit dem Messen der verstrichenen Zeit begonnen hat.":"，它刚刚开始测量经过的时间。\r\n","Die Methode gibt einen Verweis auf die gebundene VARDESC, FUNCDESC oder ITypeComp-Schnittstelle zurück.Dieser Parameter wird nicht initialisiert übergeben.":"该方法返回对绑定的 VARDESC、FUNCDESC 或 ITypeComp 接口的引用。此参数未初始化传递。\r\n","Возвращает тип, связанный с заданным идентификатором класса (CLSID). ":"返回与指定类标识符 (CLSID) 关联的类型。\r\n","Значение, которое необходимо преобразовать в 16-разрядное целое число без знака.":"要转换为无符号 16 位整数的值。\r\n","요청된 인터페이스의 IID(인터페이스 식별자)입니다.":"所请求接口的接口标识符 (IID)。\r\n","null로 설정되어 예약되었습니다.":"保留设置为空。\r\n","-Objekt am angegebenen Index.":"- 指定索引处的对象。\r\n","이 함수는 이벤트의 소스인 개체를 반환합니다.":"此函数返回作为事件源的对象。\r\n","Этот тип дескриптора предоставляет непрозрачный дескриптор, то есть адрес закрепленного объекта, используемый дескриптором, нельзя разрешить с помощью дескриптора.Этот тип можно использовать для отслеживания объекта и предотвращения его уничтожения сборщиком мусора.Этот элемент перечисления используется, когда неуправляемый клиент содержит только одну ссылку на управляемый объект, которую не может обнаружить сборщик мусора.":"该句柄类型提供了一个不透明的句柄，即该句柄所使用的固定对象的地址不能被该句柄解析。该类型可用于跟踪该对象并防止其被垃圾回收。该枚举成员当非托管客户端仅包含对垃圾收集器找不到的托管对象的一个​​引用时使用。\r\n","Возвращает меньшее из двух 16-битовых целых чисел без знака.":"返回两个 16 位无符号整数中较小的一个。\r\n","Der Aufgerufene entleert den Stapel.Dies ist die Standardkonvention für das Aufrufen nicht verwalteter Funktionen mit Plattformaufruf.":"Der Aufgerufene entleert den Stapel. Dies ist die Standardconvention für das Aufrufen nicht verwalteter Funktionen mit Plattformaufruf。\r\n","Gibt an, dass Daten vom Aufrufer an den Aufgerufenen gemarshallt werden, jedoch nicht zurück an den Aufrufer.":"指定数据从调用者封送到被调用者，但不返回给调用者。\r\n","-Objekt identifizierten Vertrauensnehmer den Zugriff auf ein Objekt.":"-对象标识受托者对对象的访问。\r\n","Der Name des Datenvertrags für den Auflistungstyp.":"Der Name des Datenvertrags für den Auflistungstyp。\r\n","serialization 또는 deserialization 중에 사용하는 ":"在序列化或反序列化期间使用。\r\n"," не учитывается.Если результат не требуется, можно задать значение null.":" 不考虑。如果不需要结果，可以将该值设置为null。\r\n","Доступный только для чтения экземпляр ":"只读实例\r\n","Управляемый указатель на интерфейс IUnknown.":"指向 IUnknown 接口的托管指针。\r\n","지정된 기수로 나타낸 숫자에 대한 문자열 표현을 32비트 부호 있는 정수로 변환합니다.":"将指定基数中数字的字符串表示形式转换为 32 位有符号整数。\r\n","Определяет пути, которые используются для поиска библиотек DLL, предоставляющих функции для вызовов неуправляемого кода. ":"指定用于查找为平台调用提供函数的 DLL 的路径。\r\n"," с заданным значением перечисления ":" 具有给定的枚举值\r\n","Указатель памяти, в который выполняется копирование. ":"要复制到的内存指针。\r\n","Маршалирует строки в виде строк многобайтовых символов.":"将字符串编组为多字节字符串。\r\n","Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное логическое значение.":"将指定的 64 位带符号整数的值转换为其等效的布尔值。\r\n"," definierten ungültige Zeichen.- oder -  Das System konnte den absoluten Pfad nicht abrufen. ":" 定义的字符无效。- 或- 系统无法获取绝对路径。\r\n"," hinzugefügt wird. ":" 将被添加。\r\n","Das Objekt, das von diesem Handle dargestellt wird.":"此句柄表示的对象。\r\n","Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 8-битовое целое число со знаком.":"将指定的单精度浮点数的值转换为等效的 8 位带符号整数。\r\n","Доступ к переменной может быть получен только при помощи IDispatch::Invoke.":"只能使用 IDispatch::Invoke 访问该变量。\r\n","-Objekt eine ACL für ein Verzeichnisobjekt ist.":"object 是目录对象上的 ACL。\r\n","특성이 적용된 열거형 멤버와 연결된 값을 가져오거나 설정합니다. ":"获取或设置与应用特性的枚举成员关联的值。\r\n","지정된 바이트 배열의 요소를 난수로 채웁니다.":"用随机数填充指定字节数组的元素。\r\n","Получает и ключ, и значение текущего элемента словаря.":"获取字典当前元素的键和值。\r\n","Eine vorzeichenlose 32-Bit-Ganzzahl, die beginnend bei ":"一个 32 位无符号整数，起始于\r\n","Когда число находится посредине между двумя другими числами, оно округляется до ближайшего числа дальше от нуля.":"当一个数字介于其他两个数字之间时，它会四舍五入到离零更远的最接近的数字。\r\n","Объект для сравнения.":"要比较的对象。\r\n","Показывает идентификатор ID элемента переменной.":"显示变量的元素 ID。\r\n",",.Если значение параметра ":",.Если значение параметра\r\n"," gemarshallt wird.":" 被编组。\r\n","STGMEDIUM 구조체의 관리되는 정의를 제공합니다.":"提供 STGMEDIUM 结构的托管定义。\r\n","Stellt eine Zugriffssteuerungsliste (ACL) dar und ist die Basisklasse für die ":"表示访问控制列表 (ACL)，是\r\n",", das als Verweis übergeben wird und das Format, das Zielgerät, das Rendering und Speicherinformationen des aufrufenden Datenobjekts beschreibt.":"，它通过引用传递，描述了调用数据对象的格式、目标设备、呈现和存储信息。\r\n","인터페이스가 프록시/스텁 동적 연결 라이브러리를 사용할 것임을 나타냅니다.이 플래그는 형식 라이브러리가 등록 취소될 때에도 형식 라이브러리 프록시의 등록이 취소되지 않음을 지정합니다.":"指示接口将使用代理/存根动态链接库。此标志指定即使类型库已注销，类型库代理也不会注销。\r\n","Структура без методов.":"没有方法的结构。\r\n","Значение, которое необходимо преобразовать в 16-разрядное знаковое целое число.":"要转换为 16 位有符号整数的值。\r\n","지정된 부울 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.":"将指定的布尔值转换为等效的单精度浮点数。\r\n","Смещение в этом массиве, с которого начинается считывание.":"此数组中从其开始读取的偏移量。\r\n",", параметр HRESULT со значением COR_E_IO и внутренним исключением, для которого задано значение null.":"，一个值为 COR_E_IO 的 HRESULT 和一个设置为 null 的内部异常。\r\n","승입니다.":"这是一场胜利。\r\n","Указатель на интерфейс IUnknown. ":"指向 IUnknown 接口的指针。\r\n"," 인스턴스를 사용하여 ":" 使用实例\r\n","Второе из двух сравниваемых 8-разрядных целых чисел со знаком. ":"要比较的两个有符号 8 位整数中的第二个。\r\n","Gibt an, welche Abschnitte einer Sicherheitsbeschreibung gespeichert oder geladen werden sollen.":"指定要保存或加载安全描述符的哪些部分。\r\n","이 바인딩된 대상 형식의 ITypeInfo에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"包含对此绑定目标类型的 ITypeInfo 的引用。此参数未初始化传递。\r\n","Поле внутри параметра ":"字段内部参数\r\n"," 매개 변수의 형식입니다. ":" 参数的类型。\r\n",", как показано в следующей таблице.ЗначениеЗначениеМеньше нуля":"，如下表所示。Value值小于零\r\n","Выполняет поиск заданного ключа таблицы внутреннего представления контекстных параметров объекта и возвращает соответствующий объект, если он существует.":"在对象上下文参数的内部表示表中查找给定的key，如果存在则返回对应的对象。\r\n","Преобразует значение заданного символа Юникода в эквивалентное 16-битовое целое число со знаком.":"将指定 Unicode 字符的值转换为其等效的 16 位带符号整数。\r\n","Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 64-битовое целое число со знаком.":"将指定的 32 位带符号整数的值转换为等效的 64 位带符号整数。\r\n","Gibt an, dass der Typ einen Datenvertrag definiert oder implementiert und mit einem Serialisierer wie dem ":"Gibt an, dass der Typ einen Datenvertrag definiert or implementiert und mit einem Serialisierer wie dem\r\n"," nur für ein Array verwenden, dessen Elemente in einer Struktur in Form von Feldern angezeigt werden.":" 仅用于其元素以字段形式显示在结构中的数组。\r\n","Указывает имя, под которым индексатор известен в языках программирования, не поддерживающих индексаторы непосредственно.":"在不直接支持索引器的编程语言中指定索引器的名称。\r\n","Die Identität, für die die Zugriffsregel gilt.Dabei muss es sich um ein Objekt handeln, das in eine ":"访问规则适用的身份。这必须是包含在\r\n","Ruft den Profilnamen dieses ":"获取此的个人资料名称\r\n","-Wert, der den Rest der Division darstellt.Dieser Parameter wird nicht initialisiert übergeben.":"- 表示除法余数的值。该参数未初始化传递。\r\n","Добавляет копию указанной строки к данному экземпляру.":"将指定字符串的副本附加到此实例。\r\n","관리되지 않는 메서드를 포함하는 DLL의 이름입니다.DLL이 어셈블리에 포함되어 있는 경우 이 이름에는 어셈블리 표시 이름이 포함될 수 있습니다.":"包含非托管方法的DLL的名称。如果DLL包含在程序集中，则此名称可以包含程序集显示名称。\r\n","의 형식입니다.형식이 지정된 클래스여야 합니다.":". 的类型必须是类型化类。\r\n","Konvertiert den Wert der angegebenen ":"转换指定值\r\n","Gibt ein Array von Bytewerten zurück, das die in diesem ":"返回包含此中值的字节值数组\r\n","Значение true, если значения данного объекта ":"如果此对象的值为真\r\n","마지막 ":"最后的\r\n","다른 숫자의 승수로 거듭제곱한 숫자에 대해 모듈러스 나누기를 수행합니다.":"다른 숫자의 승수로 거듭제곱한 숫자에 대해 모듈러스 나누기를 수행합니다。\r\n","보고된 각 진행률 값에 대해 호출할 처리기입니다.이 처리기는 ":"为每个报告的进度值调用的处理程序。此处理程序\r\n",", используя указанный элемент перечисления ":", 使用指定的枚举元素\r\n"," не является числом в допустимом формате.":" 不是有效格式的数字。\r\n","을 할당하고 관리되지 않는 유니코드 문자열에서 첫 번째 null이 나올 때까지의 모든 문자를 해당 개체로 복사합니다.":"并将非托管 unicode 字符串中直到第一个 null 的所有字符复制到该对象。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 8 位有符号整数的值转换为等效的 8 位无符号整数。\r\n","Der erste Parameter ist der this-Zeiger, der im Register ECX gespeichert wird.Weitere Parameter werden in den Stapel verschoben.Diese Aufrufkonvention wird zum Aufrufen von Methoden für Klassen verwendet, die aus einer nicht verwalteten DLL exportiert wurden.":"Der erste Parameter ist der this-Zeiger, der im Register ECX gespeichert wird. Weitere Parameter werden in den Stapel verschoben.\r\n","가 같거나, ":"等于，或\r\n","Ein Bezeichner für das aktuelle ":"当前的标识符\r\n"," 구조를 검색합니다.":" 检索结构。\r\n","Тип объекта. ":"对象类型。\r\n","После выполнения данного метода содержит значение ":"执行此方法后，包含值\r\n","반올림할 10진수입니다. ":"要四舍五入的十进制数。\r\n","Позиция в данном экземпляре, с которой начинается вставка. ":"此实例中插入开始的位置。\r\n",".-или- Компонент ":".- 或 - 组件\r\n"," равно степени двух; в противном случае — значение false.":" 等于二的幂；否则，假的。\r\n"," 매개 변수 중 더 큰 값입니다.":" 매개변수중더큰값입니다。\r\n","Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентное число двойной точности с плавающей запятой.":"将指定的 64 位无符号整数的值转换为其等效的双精度浮点数。\r\n",".Größer als 0 (null)Die aktuelle Instanz ist größer als ":".Greater than zero 当前实例大于\r\n"," +0 und bei negativem ":" +0 和负面\r\n","Ein Zeiger auf einen nicht verwalteten Speicherblock, der vor dem Aufruf der Methode belegt werden muss.":"指向必须在调用方法之前分配的非托管内存块的指针。\r\n","형식의 멤버에 적용되는 경우 멤버가 데이터 계약의 일부가 아니며 serialize되지 않음을 지정합니다.":"当应用于某个类型的成员时，指定该成员不是数据协定的一部分并且未序列化。\r\n","비관리 코드에 전달할 대리자입니다. ":"传递给非托管代码的委托。\r\n","Тип элементов, содержащихся в буфере.":"缓冲区中包含的元素类型。\r\n","Der Offset im Array, bei dem der Lesevorgang begonnen werden soll.":"数组中开始读取的偏移量。\r\n","Gibt einen NULL-Wert an, der mit einem NULL-Wert in SQL vergleichbar ist.":"指定一个 NULL 值，类似于 SQL 中的 NULL 值。\r\n",", в котором основной и дополнительный номера версии равны 0, если преобразование завершилось неудачно.Если значением параметра ":", 如果转换失败则主次版本号均为0. 如果参数的值\r\n","Der Wert, durch den dividiert werden soll.":"要除以的值。\r\n","blob이 개체를 포함하고 있다는 것을 나타냅니다.":"指示 blob 包含对象。\r\n","Внутренний указатель IUnknown управляемого объекта.":"托管对象的内部 IUnknown 指针。\r\n","가장 가까운 8비트 부호 있는 정수로 반올림된 ":"四舍五入到最接近的 8 位有符号整数\r\n","Возвращает абсолютное значение числа одинарной точности с плавающей запятой.":"返回单精度浮点数的绝对值。\r\n","Если значение не равно null и функция определена порядковым номером, то параметр ":"如果值不为 null 且函数由序数定义，则参数\r\n"," в соответствии с заданной схемой, узлом, номером порта и путем.":" 根据给定的方案、主机、端口号和路径。\r\n","유니코드 문자로 구성된 출력 배열입니다. ":"Unicode 字符的输出数组。\r\n","Der zu dekrementierende Wert.":"要减少的值。\r\n","Имя переменной среды.":"环境变量的名称。\r\n","경로에 파일 확장명이 포함된지를 확인합니다.":"确保路径包含文件扩展名。\r\n","Ein Ganzzahlwert.":"一个整数值。\r\n","Расшифрованная строка.":"解码后的字符串。\r\n","Преобразует значение заданного 64-битового целого числа без знака в эквивалентное строковое представление.":"将指定的 64 位无符号整数的值转换为其等效的字符串表示形式。\r\n","가 양수이면 값 +0이, ":"是正的，值+0是\r\n","8비트 부호 없는 정수로 구성된 입력 배열입니다. ":"8 位无符号整数的输入数组。\r\n","Указывает на то, что код или сборка выполняют операции, задействующие систему безопасности.":"指示代码或程序集执行安全调用操作。\r\n","예외의 형식입니다.":"异常的类型。\r\n","Показывает, является ли ссылка таблицы текущих объектов ROT на ":"指示当前对象表引用是否ROT到\r\n"," zurückgegeben werden sollen.":" 将被退回。\r\n","지정된 32비트 부호 있는 정수의 값을 해당하는 8비트 부호 있는 정수로 변환합니다.":"将指定的 32 位带符号整数的值转换为等效的 8 位带符号整数。\r\n","이 필드는 나중에 사용되도록 예약되어 있습니다.":"该字段保留供将来使用。\r\n","Stellt einen Zugriffssteuerungseintrag (ACE) dar.":"表示访问控制条目 (ACE)。\r\n"," минус параметр ":" 负参数\r\n","지정된 GUID를 사용하는 ":"使用指定的GUID \r\n","Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.":"将指定基数中数字的字符串表示形式转换为等效的 32 位带符号整数。\r\n","Gibt keinen Zugriff an.":"指定无访问权限。\r\n","지정된 단정밀도 부동 소수점 숫자 값을 해당하는 부울 값으로 변환합니다.":"将指定的单精度浮点数的值转换为等效的布尔值。\r\n","Eine Zeichenfolge, die mit ":"以开头的字符串\r\n","지정된 16비트 부호 없는 정수의 값을 부울 값으로 변환합니다.":"将指定的 16 位无符号整数的值转换为布尔值。\r\n","Fügen Sie der Zugriffssteuerungsliste (ACL) die angegebene Autorisierungsregel hinzu.":"将指定的授权规则添加到访问控制列表 (ACL)。\r\n","Объект типа для типа базового конечного автомата, который был создан компилятором для реализации метода конечного автомата.":"编译器为实现状态机方法而生成的基础状态机类型的类型对象。\r\n","Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное 8-битовое целое число без знака.":"将指定的 8 位有符号整数的值转换为等效的 8 位无符号整数。\r\n","의 역수입니다.":"是的倒数\r\n","Массив 8-битовых целых чисел без знака. ":"8 位无符号整数数组。\r\n","Десятичное число, которое эквивалентно значению ":"等于值的十进制数\r\n","Die 16-Bit-Ganzzahl mit Vorzeichen, die ":"16 位有符号整数\r\n","-Typ, das von ":"-键入来自\r\n","Эту функцию не следует показывать пользователю, хотя она существует и является связываемой.":"这个函数不应该显示给用户，尽管它存在并且是可绑定的。\r\n","Ein Flagwort mit mindestens einem Aufrufflag, das in der INVOKEKIND-Enumeration definiert ist. ":"包含一个或多个调用标志的标志字，在 INVOKEKIND 枚举中定义。\r\n"," keine Verzeichnisinformationen enthält.":" 不包含目录信息。\r\n","Eine Zeichenfolge, die eine .NET Framework-Version identifiziert. ":"标识 .NET Framework 版本的字符串。\r\n","Marshallt Daten aus einem verwalteten Objekt zu einem nicht verwalteten Speicherblock.":"将数据从托管对象编组到非托管内存块。\r\n","Новый инкапсулированный объект, являющийся экземпляром нужного типа.":"一个新的封装对象，它是所需类型的实例。\r\n","Возвращает интерфейс, соответствующий указанному идентификатору интерфейса.":"返回指定接口 ID 对应的接口。\r\n","Kopiert Daten aus einem nicht verwalteten Speicherzeiger in ein verwaltetes Array von 8-Bit-Ganzzahlen ohne Vorzeichen.":"将数据从非托管内存指针复制到托管的 8 位无符号整数数组。\r\n","Вставляет строковое представление числа одинарной точности с плавающей запятой с обычной точностью в данный экземпляр на указанную позицию символа.":"将具有正常精度的单精度浮点数的字符串表示形式插入此实例的指定字符位置。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.":"将指定的 8 位无符号整数的值转换为等效的 8 位有符号整数。\r\n","Число с плавающей запятой одиночной точности, эквивалентное значению ":"相当于值的单精度浮点数\r\n","Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 16-Bit-Ganzzahl ohne Vorzeichen.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为 16 位无符号整数。\r\n","Ruft einen Wert auf, der das Serialisierungsmodul anweist, dass der Member beim Lesen oder Deserialisieren vorhanden sein muss, oder legt einen Wert fest.":"获取或设置一个值，该值指示序列化程序在读取或反序列化时必须存在该成员。\r\n","Dieser Wert ist für eine spätere Verwendung vorgesehen.":"该值保留供以后使用。\r\n",". То есть диапазон возвращаемых значений включает в себя ":".即返回值的范围包括\r\n","Второе из складываемых значений.":"第二个附加值。\r\n","Ruft den Typ des Objekts ab, auf das die ":"获取所引用对象的类型\r\n","Описывает члена типа, являющегося членом по умолчанию, который используется методом ":"描述方法使用的类型的默认成员。\r\n"," найден; в противном случае — значение false.":" 成立;否则，假的。\r\n"," 구조체를 검색합니다.":" 检索结构。\r\n","Показывает значение char.":"显示一个字符的值。\r\n","Значение true, если ключ найден и удален; в противном случае — значение false.":"如果找到并删除了密钥，则为真；否则，假的。\r\n",", который ссылается на указанный объект.":"引用指定对象的 。\r\n","Указывает число переменных и полей данных в интерфейсе, описанном структурой.":"指定结构描述的接口中变量和数据字段的数量。\r\n","-Parameter ist kein ":"参数为无\r\n","Ein Wert, der den Schnittstellenmember angibt. ":"指定接口成员的值。\r\n","Присоединяет обработчик событий к объекту модели COM.":"将事件处理程序附加到 COM 对象。\r\n","내부적으로 유지되는 컨텍스트 개체 매개 변수 테이블에서 지정한 키를 조회한 다음 해당하는 개체가 있으면 이를 반환합니다.":"在内部维护的上下文对象参数表中查找指定的键，如果找到则返回对应的对象。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.":"将指定的双精度浮点数的值转换为等效的 32 位无符号整数。\r\n","Значение true, если значение дескриптора является неправильным; в противном случае — значение false.":"Значение true, если значение дескриптора является неправильным; в противном случае — значение 错误。\r\n","Gibt an, dass die Standardaufrufkonvention SYSCALL für eine Methode verwendet werden soll.":"指定应将标准 SYSCALL 调用约定用于方法。\r\n","16비트 부호 있는 정수의 부호를 나타내는 값을 반환합니다.":"返回一个值，该值指示 16 位有符号整数的符号。\r\n","열거형 시퀀스에서 지정된 수의 항목을 건너뜁니다.":"从枚举序列中跳过指定数量的项目。\r\n","지정된 각도의 사인을 반환합니다.":"返回指定角度的正弦值。\r\n","Значение, преобразуемое в комплексное число.":"要转换为复数的值。\r\n"," из указанной подстроки и емкости.":" 来自指定的子串和容量。\r\n","Ein Array, in das der Inhalt der Auflistung kopiert werden soll.":"要将集合内容复制到其中的数组。\r\n","지정된 32비트 부호 있는 정수의 값을 해당하는 유니코드 문자로 변환합니다.":"将指定的 32 位带符号整数的值转换为等效的 Unicode 字符。\r\n"," 범위의 64비트 부호 있는 정수 x입니다.":" 范围内的 64 位有符号整数 x。\r\n","에서 반환할 IConnectionPoint 참조의 수입니다. ":"要返回的 IConnectionPoint 引用数。\r\n","Escribe en la memoria no administrada un valor de tipo entero cuyo tamaño en bytes es propio del procesador nativo en un desplazamiento especificado.":"向非托管内存写入整数类型的值，其字节大小与指定偏移量处的本机处理器相对应。\r\n","true или false, отражающее значение, возвращаемое методом ":"反映方法返回值的 true 或 false\r\n","Возвращает косинус указанного комплексного числа.":"返回指定复数的余弦值。\r\n"," ist keine Klasse und kein Array.- oder - ":" 不是类或数组。- 或-\r\n"," недопустимо. -или-Индекс элемента формата меньше 0 (нуля), либо больше или равен длине массива ":" 不可接受的。 - 或 - 格式元素的索引小于 0（零），或大于或等于数组的长度\r\n","Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 16-битовое целое число без знака.":"将指定的双精度浮点数的值转换为等效的 16 位无符号整数。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.":"将指定的单精度浮点数的值转换为等效的 16 位带符号整数。\r\n","Ruft die Anschlussnummer des URIs ab oder legt diese fest.":"获取或设置 URI 的端口号。\r\n","Wendet die angegebene Änderung auf die DACL an, die diesem ":"将指定的更改应用到与此关联的 DACL\r\n","Gibt einen SCODE an.":"指定一个 SCODE。\r\n"," 개체가 요청된 인터페이스를 지원하지 않는 경우":" 如果对象不支持请求的接口\r\n"," ist größer als 0 (null). ":" 大于 0（零）。\r\n","Entfernt alle Überwachungsregeln, die dieselbe Sicherheits-ID wie die angegebene Überwachungsregel enthalten, aus der SACL (System Access Control List), die diesem ObjectSecurity`1-Objekt zugeordnet ist.":"从与此 ObjectSecurity`1 对象关联的 SACL（系统访问控制列表）中删除包含与指定审核规则相同的安全 ID 的所有审核规则。\r\n","지정된 경로 문자열에 대한 디렉터리 정보를 반환합니다.":"返回指定路径字符串的目录信息。\r\n","true, если текущий набор является надлежащим подмножеством объекта ":"如果当前集合是对象的真子集则为真\r\n","확장명을 가져올 경로 문자열입니다. ":"从中获取扩展名称的路径字符串。\r\n","32-разрядное знаковое целое число, эквивалентное значению ":"相当于 value 的 32 位有符号整数\r\n"," 인스턴스에 잘못된 암호가 있습니다. ":" 该实例的密码无效。\r\n"," 값을 1씩 감소합니다.":" 将值减 1。\r\n","Gibt den Typ einer Eigenschaftsfunktion an.":"指示属性函数的类型。\r\n","Целочисленное значение, представляющее уникальный идентификатор для этого управляемого потока.":"一个整数值，表示此托管线程的唯一标识符。\r\n","Адрес параметра ":"参数地址\r\n","Одно из значений перечисления, определяющих компоновку класса или структуры. ":"决定类或结构布局的枚举值之一。\r\n","Ein im Bogenmaß angegebener Winkel. ":"以弧度指定的角度。\r\n","Gleich ":"相同的\r\n","변환할 문자열입니다. ":"要转换的字符串。\r\n","Определяет идентификатор класса для совместного класса, импортированного из библиотеки типов.":"指定从类型库导入的共享类的类标识符。\r\n"," 매개 변수가 null입니다.또는 ":" 参数为空；或\r\n","Позиция в пределах ":"位置在\r\n","부호 없는 64비트 정수를 복소수로 변환하는 암시적 변환을 정의합니다.":"定义从无符号 64 位整数到复数的隐式转换。\r\n","Entfernt das Objekt aus dem Satz freizugebender registrierter Objekte.":"从要释放的已注册对象集中删除对象。\r\n","Первое из двух сравниваемых 32-разрядных целых чисел со знаком. ":"要比较的两个 32 位有符号整数中的第一个。\r\n","Показывают, выполняется ли для методов с возвращаемыми значениями HRESULT или retval непосредственное преобразование, либо возвращаемые значения HRESULT или retval автоматически преобразуются в исключения.":"表示有HRESULT或retval返回值的方法是直接转换，还是HRESULT或retval返回值自动转换为异常。\r\n","Записывает в неуправляемую память 32-битное целое число со знаком.":"将带符号的 32 位整数写入非托管内存。\r\n","Вызывающий объект очищает стек.Это позволяет вызывать функции с varargs, чтобы использовать их для методов, работающих с переменным числом параметров, таких как Printf.":"Вызывающий объект очищает стек.Это позволяет вызывать функции с varargs, чтобы использовать их для методов, работающих с переменным числом параметров, таких как Printf.\r\n","Fehlgeschlagene Zugriffsversuche sollen überwacht werden.":"应该监视失败的访问尝试。\r\n",", возведенное в степень ":", 升为次幂\r\n","Значение true, если значения комплексного числа и ":"如果复数的值和\r\n","COM-объект, к которому прикреплен делегат.":"委托附加到的 COM 对象。\r\n","해제할 TYPEATTR 구조체에 대한 참조입니다. ":"对要释放的 TYPEATTR 结构的引用。\r\n","Eine verwaltete Zeichenfolge, die eine Kopie der nicht verwalteten ANSI-Zeichenfolge enthält.Wenn ":"包含非托管 ANSI 字符串副本的托管字符串。如果\r\n","Тип ключа.":"密钥类型。\r\n"," не является ни последовательным, ни явным.":" 既不一致也不明确。\r\n","Die Identität, für die die Zugriffsregel gilt.Dabei muss es sich um ein Objekt handeln, das in einen ":"访问规则适用的身份。这必须是包含在\r\n","메서드가 없는 구조체입니다.":"没有方法的结构。\r\n","Die Länge des Array minus Index ist kleiner als ":"数组减去索引的长度小于\r\n","등록된 모든 advise 싱크에 개체가 실행 상태에서 로드된 상태로 변경되었음을 알립니다.  이 메서드는 서버에서 호출됩니다.":"通知所有已注册的建议接收器该对象已从运行状态更改为加载状态。在服务器上调用此方法。\r\n","Der Logarithmus zur Basis ":"底数的对数\r\n"," 호출 이후 트랜잭트 스트림에서 일어난 모든 변경 내용을 삭제합니다.":" 丢弃自调用以来事务流发生的任何更改。\r\n","Steuert, ob Unicode-Zeichen in die ANSI-Zeichen konvertiert werden, die ihnen am ähnlichsten sind.":"Steuert, ob Unicode-Zeichen in die ANSI-Zeichen konvertiert werden, die ihnen am ähnlichsten sind.\r\n","Тип объектов для перечисления.Этот параметр типа является ковариантным. Это означает, что можно использовать либо указанный тип, либо более производный тип. Дополнительные сведения о ковариации и контрвариации см. в разделе Ковариация и контравариация в универсальных шаблонах.":"要枚举的对象类型。此类型参数是协变的。这意味着可以使用指定的类型或更派生的类型。有关协变和逆变的更多信息，请参阅通用模式中的协变和逆变。\r\n"," 필드는 배열에 있는 요소의 수를 나타내도록 설정되어야 합니다.":" 该字段应设置为指示数组中元素的数量。\r\n","비교할 두 개의 32비트 부호 있는 정수 중 두 번째 숫자입니다. ":"要比较的两个 32 位有符号整数中的第二个。\r\n","Предоставляет символ, задаваемый платформой, для разделения уровней папок в строке пути, в которой отражена иерархическая организация файловой системы.":"提供平台指定的字符来分隔路径字符串中的文件夹级别，该路径字符串反映文件系统的层次结构。\r\n","Параметр передает сведения из вызывающего объекта в вызываемый объект.":"参数将信息从调用者传递给被调用者。\r\n","지정된 기수로 나타낸 숫자에 대한 문자열 표현을 64비트 부호 있는 정수로 변환합니다.":"将指定基数中数字的字符串表示形式转换为 64 位有符号整数。\r\n","; false в противном случае.":";否则为假。\r\n"," erkannt werden soll. ":" 应该被认可。\r\n","래핑하여 VT_CY로 마샬링할 Decimal입니다. ":"Decimal到wrap和marshal到VT_CY。 \r\n","Возвращает описание заданного типа из библиотеки.":"从库中返回指定类型的描述。\r\n","Инкапсулирует объекты, которые необходимо маршалировать, как VT_UNKNOWN.":"将要封送的对象封装为 VT_UNKNOWN。\r\n","Ein Verweis auf den Moniker, der das ":"对绰号的引用\r\n"," 클래스의 URI를 수정합니다.":" 修改类的URI。\r\n","Представляет указатель на функцию, использующую в качестве аргумента структуру ":"表示指向以结构作为参数的函数的指针。\r\n","Legt die angegebene Zugriffssteuerung für das angegebene ":"为指定的设置指定的访问控制\r\n","Это свойство или метод всегда отображается в редакторе.":"此属性或方法始终显示在编辑器中。\r\n","Windows 런타임 문자열입니다.":"Windows 运行时字符串。\r\n","Записывает 32-битное целое число со знаком в неуправляемую память с указанным смещением.":"将带符号的 32 位整数写入指定偏移量处的非托管内存。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 64비트 부호 없는 정수 값을 해당하는 문자열 표현으로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定的 64 位无符号整数值转换为其等效的字符串表示形式。\r\n","Получает значение, представляющее 0 (нуль).":"获取表示 0（零）的值。\r\n","핸들 수집을 시작할 임계값과 이름을 사용하여 ":"使用阈值和名称开始收集句柄 \r\n","반환될 대리자의 형식입니다.":"要返回的委托类型。\r\n","매크로 언어에서 변수에 액세스해서는 안 됩니다.이 플래그는 시스템 수준 변수 또는 형식 브라우저가 표시되지 않는 변수를 위한 플래그입니다.":"不应从宏语言访问变量。此标志用于系统级变量或在类型浏览器中不可见的变量。\r\n","부호 있는 16비트 정수를 ":"带符号的 16 位整数\r\n"," должно быть больше или равно 0.":" 必须大于或等于 0。\r\n"," была возвращена.":"被退回。\r\n","Возвращает объект указанного типа, значение которого эквивалентно заданному объекту.":"返回一个指定类型的对象，其值等于指定的对象。\r\n"," 인스턴스와 같은 .NET Framework 버전을 표시하는지 여부를 나타내는 값을 반환합니다.":" 返回一个值，该值指示是否显示与实例相同的 .NET Framework 版本。\r\n","Nehmen Sie das %WinDir%\\System32-Verzeichnis in den DLL-Suchpfad auf. ":"在 DLL 搜索路径中包括 %WinDir%\\System32 目录。\r\n","Initialisiert das ":"初始化那个\r\n"," 매개 변수반환 값 양수 자연 로그 ":" 参数返回值正自然对数\r\n","Сообщает об изменении хода выполнения.":"报告正在进行的更改。\r\n",", структуру ":"， 结构\r\n","DNS-имя узла или IP-адрес сервера.":"DNS 主机名或服务器 IP 地址。\r\n","보다 작은 부호 있는 32비트 정수입니다.":"小于的有符号 32 位整数\r\n","-Klasse zurück.":"- 下课了。\r\n","Ruft die benutzerdefinierten Daten aus der angegebenen Funktion ab.":"从指定函数获取自定义数据。\r\n","Ein Wert, mit dem dieser ROT-Eintrag bei nachfolgenden Aufrufen von ":"在后续调用中与此 ROT 条目一起使用的值\r\n","-Eigenschaft für Zugriffssteuerungslisten (ACLs) zurückgegeben, die Verzeichnisdienstobjekten zugeordnet sind.":"与目录服务对象关联的访问控制列表 (ACL) 的属性。\r\n","한 복소수를 다른 복소수로 나눈 후 결과를 반환합니다.":"将一个复数除以另一个复数并返回结果。\r\n","읽기를 시작할 위치입니다.":"开始阅读的位置。\r\n"," 범위의 32비트 부호 있는 정수 x입니다.":" 范围内的 32 位带符号整数 x。\r\n","Комплексное число для возведения в степень.":"要提升为幂的复数。\r\n","При возвращении данного метода содержит строку, представляющую строку документации для заданного элемента.Этот параметр передается без инициализации.":"当此方法返回时，包含一个表示指定元素的文档字符串的字符串。此参数无需初始化即可传递。\r\n","Преобразует заданное логическое значение в эквивалентное 16-битовое целое число без знака.":"将指定的布尔值转换为其等效的 16 位无符号整数。\r\n","-Parameter ist ein offener generischer Typ.":"- 参数是一个开放的通用类型。\r\n",", который начинается с указанной емкости и может увеличиваться до указанного максимального значения.":"以指定容量开始并可以增长到指定最大值的 。\r\n","32-битное целое число со знаком, считанное из неуправляемой памяти с указанным смещением.":"从指定偏移量处的非托管内存中读取的有符号 32 位整数。\r\n","Получает число, указывающее знак (минус, плюс или нуль) текущего объекта ":"获取一个数字，指示当前对象的符号（减号、加号或零）\r\n","Führt beim Überschreiben in einer abgeleiteten Klasse den Code aus, der für das Freigeben des Handles erforderlich ist.":"在派生类中重写时，执行释放句柄所需的代码。\r\n","Первое комплексное число для сравнения.":"要比较的第一个复数。\r\n","Auf die Funktion wird über VTBL (Virtual Function Table) zugegriffen, und sie enthält einen impliziten this-Zeiger.":"该函数通过 VTBL（虚拟函数表）访问，并包含一个隐式 this 指针。\r\n","Показатель степени множителя 10, определяющий число знаков справа от десятичной запятой.Допустимые значения — от 0 до 28 включительно.":"10 的乘数的指数，它确定小数点右边的位数。有效值从 0 到 28，包括在内。\r\n","등록된 모든 advise 싱크에 개체 이름이 바뀌었음을 알립니다.이 메서드는 서버에서 호출됩니다.":"通知所有已注册的咨询接收器对象已重命名。此方法在服务器上调用。\r\n","-Objekt erstellt werden soll.":"要创建的对象。\r\n"," — это строка, которая не равна ":" 是一个不等于的字符串\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende Dezimalzahl.":"将数字的指定字符串表示形式转换为等效的十进制数。\r\n","현재 인스턴스와 부호 없는 64비트 정수의 값이 같은지를 나타내는 값을 반환합니다.":"현재 인스턴스와 부호 없는 64비트 정수의 값이 같은지를 나타내는 값을 반환합니다。\r\n","데이터 advise 연결의 경우, 데이터에 대한 액세스 가능성을 보장합니다. ":"在数据通知连接的情况下，它保证了数据的可访问性。\r\n","에 대한 ROT(실행 개체 테이블)의 참조가 약한지 강한지 여부를 지정하여 ROT에 있는 항목을 통해 개체에 액세스하는 것을 제어합니다. ":"通过指定对对象的运行对象表 (ROT) 引用是弱引用还是强引用，通过 ROT 中的条目控制对对象的访问。\r\n","Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное 64-битовое целое число без знака.":"将指定的 8 位有符号整数的值转换为等效的 64 位无符号整数。\r\n"," 값이 부호 없는 64비트 정수보다 큰지를 나타내는 값을 반환합니다.":" 返回一个值，该值指示值是否大于 64 位无符号整数。\r\n"," 핸들을 할당합니다.":" 分配一个句柄。\r\n","길이 접두사가 있는 플랫폼에 종속적인 char 문자열입니다(Windows 98의 경우 ANSI, Windows NT의 경우 유니코드).BSTR과와 비슷한 이 멤버는 거의 사용하지 않습니다.":"具有长度前缀的平台相关的 char 字符串（在 Windows 98 上为 ANSI，在 Windows NT 上为 Unicode）。与 BSTR 类似，该成员很少使用。\r\n",", содержащий класс, реализующий методы интерфейса события.":"包含实现事件接口方法的类的 。\r\n","Предпринимает попытку преобразования строкового представления номера версии в эквивалентный объект ":"尝试将版本号的字符串表示形式转换为等效对象\r\n",", используя Decimal, для инкапсуляции, а также для маршалинга как типа VT_CY.":"，使用 Decimal，用于封装，也用于封送为 VT_CY 类型。\r\n"," — ссылочный тип, который не является форматированным классом. -или-":" 是不是格式化类的引用类型。 -或者-\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为等效的双精度浮点数。\r\n","Ruft die Länge der opaken Rückrufdaten ab, die diesem ":"获取与此关联的不透明回调数据的长度\r\n","Realiza una operación exclusiva Or (XOr) bit a bit en dos valores ":"实现独有的 Or (XOr) 有点 en dos valores\r\n","El nombre del contrato de datos para el tipo de colección.":"El nombre del contrato de dates para el tipo de colección。\r\n","Schreibt einen Ganzzahlwert von prozessoreigener Größe am angegebenen Offset in den nicht verwalteten Speicher.":"将处理器本机大小的整数值写入指定偏移量处的非托管内存。\r\n",", которые будут возвращены в ":"，这将返回到\r\n"," = NaN(beliebiger Wert)NaN(beliebiger Wert)":" = NaN(任意值)NaN(任意值)\r\n",") и байта смещения (":") 和一个偏移字节 (\r\n","문자열, .NET Framework 버전을 식별하는 ":"字符串，标识 .NET Framework 版本\r\n","바인딩할 이름입니다. ":"要绑定的名称。\r\n","Строка, замещающая ":"替换字符串\r\n","Die zurückzugebende 16-Bit-Ganzzahl ohne Vorzeichen. ":"要返回的 16 位无符号整数。\r\n","Возвращает меньшее из двух чисел двойной точности с плавающей запятой.":"返回两个双精度浮点数中较小的一个。\r\n","스트림에서 지정된 바이트 범위로 액세스하는 것을 제한합니다.":"限制对流中指定范围的字节的访问。\r\n","Строковое представление ":"字符串表示\r\n","지정된 단정밀도 부동 소수점 숫자 값을 해당하는 16비트 부호 없는 정수로 변환합니다.":"将指定的单精度浮点数的值转换为等效的 16 位无符号整数。\r\n"," = 0인 경우 ":" = 0\r\n","Считывает из памяти тип значения с указанным смещением.":"从指定偏移量的内存中读取值类型。\r\n","이(가) 루트 디렉터리를 나타내거나 null인 경우 null입니다.":"表示根目录，如果为 null，则为 null。\r\n","Показывает, что интерфейс предоставляется COM как диспетчерский интерфейс, позволяющий выполнять только позднее связывание.":"指示接口作为调度程序接口公开给 COM，只允许后期绑定。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.":"将指定的 8 位无符号整数的值转换为等效的 64 位有符号整数。\r\n","Указатель на только что выделенную память.Эта память должна освобождаться при помощи метода ":"指向新分配内存的指针。必须使用以下方法释放此内存\r\n","에 두 개 미만 또는 세 개 이상의 구성 요소가 들어 있는 경우또는":"含有少于两种或多于三种成分；或\r\n","지정된 IUnknown 인터페이스에 대해 고유한 RCW(RCW) 개체를 만듭니다.":"为指定的 IUnknown 接口创建唯一的 RCW (RCW) 对象。\r\n",".В зависимости от экземпляра ":".取决于实例\r\n","Число с плавающей запятой удвоенной точности эквивалентное значению ":"相当于值的双精度浮点数\r\n","이 메서드는 반환될 때 함수에 대한 인덱스를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含函数的索引。此参数未初始化传递。\r\n"," = plus unendlich0":" =加上无穷大0\r\n","Ruft eine bitweise Kombination von Enumerationswerten ab, die die Pfade angeben, welche die LoadLibraryEx-Funktion während der Plattformaufrufe durchsuchen soll. ":"获取枚举值的按位组合，这些值指定 LoadLibraryEx 函数在平台调用期间应搜索的路径。\r\n","Возвращает имя динамической библиотеки (DLL), содержащей точку входа.":"返回包含入口点的动态库 (DLL) 的名称。\r\n",", равное 2, 8, 10 или 16. ":", 等于 2、8、10 或 16。\r\n","Valore associato al membro dell'enumerazione.":"Valore associato al membro dell'enumerazione。\r\n","의 형식이 유효하지 않은 경우":"如果格式无效\r\n","Die inklusive untere Grenze der zurückgegebenen Zufallszahl. ":"返回的随机数的下限。\r\n","Вставляет строковое представление логического значения в данный экземпляр на указанную позицию символа.":"将布尔值的字符串表示形式插入此实例的指定字符位置。\r\n","Представляет неуниверсальную коллекцию объектов с индивидуальным доступом, осуществляемым при помощи индекса.":"表示通过索引单独访问的对象的非泛型集合。\r\n","값 형식의 수를 지정하여 메모리 영역의 할당 크기를 정의합니다.":"通过指定值类型的数量来定义内存区域的分配大小。\r\n","Vergleicht diese Instanz mit einem zweiten ":"将此实例与第二个实例进行比较\r\n","Представляет наибольший размер набора двухбайтовых символов (DBCS) в байтах для текущей операционной системы.Это поле доступно только для чтения.":"表示当前操作系统的最大双字节字符集 (DBCS) 大小（以字节为单位）。此字段是只读的。\r\n","Преобразовывает строку в кодировке HTML для передачи по протоколу HTTP в расшифрованную строку.":"将用于 HTTP 传输的 HTML 编码字符串转换为解密字符串。\r\n","Включить каталог приложения в путь поиска DLL. ":"在 DLL 搜索路径中包括应用程序目录。\r\n"," 범위의 8비트 부호 있는 정수 x입니다.":" 范围内的 8 位有符号整数 x。\r\n","Модуль текущего экземпляра.":"当前实例的模块。\r\n","Определяет, является ли набор подмножеством заданной коллекции.":"确定集合是否是指定集合的​​子集。\r\n","При возвращении данного метода содержит ссылку на индекс описания типа в содержащей библиотеке типов.Этот параметр передается без инициализации.":"当此方法返回时，包含对包含类型库中类型声明索引的引用。此参数无需初始化即可传递。\r\n","Markiert ein Handle als nicht mehr verwendet.":"将句柄标记为不再使用。\r\n",", как показано в следующей таблице.ЧисловойОписание-1Этот объект имеет отрицательное значение.0Этот объект имеет значение 0 (нуль).1Этот объект имеет положительное значение.":"，如下表所示。NumericDescription-1This object has a negative value.0This object has a value of 0 (zero).1This object has a positive value.\r\n","TYPECOMP가 반환되었음을 나타냅니다.":"表示已返回 TYPECOMP。\r\n","과 동등하지 않은 문자열입니다.":"不等同于 的字符串。\r\n","Liest beginnend beim aktuellen Suchzeiger eine angegebene Anzahl von Bytes aus dem Streamobjekt in den Speicher.":"从当前搜索指针开始，将指定数量的字节从 Stream 对象读入内存。\r\n","Переданный обработчик нельзя использовать.":"无法使用传递的处理程序。\r\n","Enthält nach dem Beenden dieser Methode einen Verweis auf die aufgelisteten ":"退出此方法后，包含对列出的那些的引用\r\n","Показывает отсутствие совпадений.":"表示没有匹配项。\r\n","Der als URL zu codierende Text.":"要编码为 URL 的文本。\r\n","형식 라이브러리에서 가져온 coclass의 클래스 식별자를 지정합니다.":"指定coclass的类标识符，该标识符取自类型库。\r\n","Konvertiert den Wert des angegebenen Objekts in eine 64-Bit-Ganzzahl mit Vorzeichen.":"将指定对象的值转换为 64 位有符号整数。\r\n","Die Anzahl der Werttypen, die geschrieben werden sollen.":"要写入的值类型的数量。\r\n"," имеет формат для ":" 有一个格式\r\n","Описывает ошибку, предназначенную для заказчика.":"描述针对客户的错误。\r\n","Определяет имя контейнера ключей в CSP, который содержит пару ключей для создания строгого имени.":"指定 CSP 中包含用于生成强名称的密钥对的密钥容器的名称。\r\n","Указывает на использование для данного метода стандартного соглашения о вызове (STDCALL).":"指示该方法使用标准调用约定 (STDCALL)。\r\n","Matriz de valores de byte en orden little-endian.":"小字节序字节值矩阵。\r\n","Преобразует заданное строковое представление числа в эквивалентное 16-битовое целое число со знаком, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"给定指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的 16 位带符号整数。\r\n","Zählt die Zeichenfolgen auf, die die Schlüssel der intern verwalteten Tabelle von Kontextparametern für Objekte sind.":"枚举字符串，这些字符串是内部维护的对象上下文参数表的键。\r\n","스트림 개체에서 읽은 실제 바이트 수를 받는 ULONG 변수에 대한 포인터입니다. ":"指向接收从流对象读取的实际字节数的 ULONG 变量的指针。\r\n","Das bereits vorhandene Handle, das verwendet werden soll. ":"要使用的预先存在的句柄。\r\n"," kann nicht in ":" 进不去\r\n","부호 없는 64비트 정수를 나타냅니다.":"表示一个无符号的 64 位整数。\r\n"," 피연산자의 값입니다.":" 操作数的值。\r\n","Комплексное число-числитель.":"复数分子。\r\n"," definierten ungültigen Zeichen.  ":" 定义的无效字符。\r\n","Gibt den Sinus des angegebenen Winkels zurück.":"返回指定角度的正弦值。\r\n","-Zahl zurück.":"-偿还。\r\n","관리되지 않는 메모리에서 16비트 부호 있는 정수를 읽습니다.":"从非托管内存中读取一个 16 位有符号整数。\r\n","설명 섹션의 테이블과 같이 밑이 ":"설명 섹션의 테이블과 같이 밑이\r\n","Especifica el espacio de nombres CLR y el espacio de nombres XML del contrato de datos. ":"规范 el espacio de nombres CLR 和 el espacio de nombres XML del contrato de datos。\r\n","-Wert auf.":"- 升值。\r\n","이 반환됩니다.":"被退回。\r\n","-Klasse mit dem angegebenen Schema und dem angegebenen Host.":"具有指定架构和主机的类。\r\n","Der Ressourcentyp.":"资源类型。\r\n","Предоставляет миграцию от более старого, более простого ключа строгого имени к более длинному ключу с более сильным алгоритмом хэширования.":"提供从旧的、更简单的强名称密钥到具有更强哈希算法的更长密钥的迁移。\r\n","BSTR에 대한 관리되지 않는 포인터이거나 ":"是指向 BSTR 的非托管指针，或者\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung.":"将指定的 64 位无符号整数的值转换为其等效的字符串表示形式。\r\n","Die Anzahl der Zeichenfolgen, die in ":"中的字符串数\r\n"," для этого потока.":" 对于这个线程。\r\n"," находится на равном расстоянии от двух целых чисел, выбирается четное число).Если значение ":" 与两个整数等距，则选择偶数）。\r\n","Eine bitweise Kombination von Enumerationswerten, die die Pfade angeben, welche die LoadLibraryEx-Funktion während der Plattformaufrufe durchsuchen soll. ":"枚举值的按位组合，指定 LoadLibraryEx 函数在平台调用期间应搜索的路径。\r\n","Unterstützt die Typäquivalenz.":"支持类型等价。\r\n","Куча больших объектов (LOH) будет сжата во время следующей блокирующей сборки мусора второго поколения. ":"大对象堆 (LOH) 将在下一代 2 阻塞垃圾收集期间被压缩。\r\n","Eine Zeichenfolge aus ANSI-Zeichen, die ein Einzelbyte mit Längenpräfix ist.Sie können diesen Member für den ":"以长度为前缀的单字节 ANSI 字符字符串。您可以将此成员用于\r\n",", то данный метод возвращает ":", 然后这个方法返回\r\n","Преобразует значение заданного десятичного числа в эквивалентное строковое представление.":"将指定的十进制数的值转换为其等效的字符串表示形式。\r\n","로의 변환이 지원되지 않습니다.":"不支持转换为。\r\n","Ein Wert aus der ":"一个值来自\r\n","Возвращает заданное 64-битовое целое число со знаком; фактическое преобразование не производится.":"返回指定的 64 位有符号整数；没有执行实际的转换。\r\n","Указывает компиляторам, что при отсутствии символа условной компиляции, вызов метода или атрибут следует игнорировать.":"向编译器指示如果缺少条件编译符号，则应忽略方法调用或属性。\r\n","Addiert zwei komplexe Zahlen und gibt das Ergebnis zurück.":"将两个复数相加并返回结果。\r\n","지정된 배정밀도 부동 소수점 숫자 값을 해당하는 64비트 부호 있는 정수로 변환합니다.":"将指定的双精度浮点数的值转换为等效的 64 位带符号整数。\r\n","Задает способ вызова функции при помощи IDispatch::Invoke.":"指定如何使用 IDispatch::Invoke 调用函数。\r\n","Die erste Typäquivalenzzeichenfolge.":"第一个类型等价字符串。\r\n","Beschreibt den Typ der durchzuführenden Überwachung,.":"描述要执行的监视类型。\r\n","Указатель на COM VARIANT.":"指向 COM VARIANT 的指针。\r\n","개체가 마지막으로 변경된 시간에 대한 참조입니다. ":"对对象上次更改时间的引用。\r\n","Показывает, что в качестве статической точки входа неуправляемая динамическая библиотека (DLL) предоставляет метод с атрибутами.":"指示非托管动态库 (DLL) 提供属性方法作为静态入口点。\r\n","-Objekts in das angegebene Bytearray, wobei beim angegebenen Offset begonnen wird.":"对象到指定的字节数组，从指定的偏移量开始。\r\n","Байт, считываемый из неуправляемой памяти с указанным смещением.":"从指定偏移量处的非托管内存中读取的字节。\r\n","Указывает, что тип определяет или реализует контракт данных и может быть сериализован сериализатором, таким как ":"Указывает, что тип определяет или реализует контракт данных и может быть сериализован сериализатором, таким к\r\n","Описывает переменную, константу или элемент данных.":"描述变量、常量或数据元素。\r\n","Слово флагов, содержащее один или несколько используемых флагов, определенных в перечислении INVOKEKIND. ":"包含一个或多个要使用的标志的标志字，如 INVOKEKIND 枚举中所定义。\r\n","Включает параллельную сборку мусора и подбирает объекты во время работы приложения.Это режим по умолчанию для сборки мусора на рабочей станции, обеспечивающий меньшее вмешательство по сравнению с ":"启用并发垃圾收集并在应用程序运行时收集对象。这是工作站垃圾收集的默认模式，并且比\r\n","Dem neuen ACE zugeordnete opake Daten.Opake Daten sind nur für Rückruf-ACE-Typen zugelassen.Die Länge dieses Arrays darf nicht größer sein als der Rückgabewert der ":"与新 ACE 关联的不透明数据。不透明数据仅允许用于回调 ACE 类型。此数组的长度不能大于返回值\r\n"," сигнала, используя 32-разрядное целое число со знаком для указания интервала времени в миллисекундах.":"信号，使用带符号的 32 位整数指定以毫秒为单位的时间间隔。\r\n","-Werts in eine komplexe Zahl. ":"- 值到一个复数。\r\n","Gibt die größere von zwei 64-Bit-Ganzzahlen ohne Vorzeichen zurück.":"返回两个 64 位无符号整数中较大的一个。\r\n","Die erste von zwei zu vergleichenden 8-Bit-Ganzzahlen mit Vorzeichen. ":"要比较的两个 8 位有符号整数中的第一个。\r\n"," der Ausgangschnittstelle verwaltet.Dieser Parameter wird nicht initialisiert übergeben.":" 输出接口。此参数未初始化传递。\r\n","Ein Verweis auf die Zeit der letzten Änderung des Objekts. ":"对对象上次修改时间的引用。\r\n"," 매개 변수에 있는 인덱스입니다.":" 参数中的索引。\r\n","Показывает, маршалинг каких данных необходимо выполнить при передаче от вызывающего объекта — вызываемому, но не обратно.":"指示在从调用者传递给被调用者而不是返回时应该封送哪些数据。\r\n"," с заданным соглашением о вызове. ":" 使用给定的调用约定。\r\n","Der Zugriff auf die Funktion erfolgt über eine static-Adresse, und die Funktion akzeptiert keinen impliziten this-Zeiger.":"该函数通过静态地址访问，并且该函数不接受隐式 this 指针。\r\n","간격에 대한 경과 시간 측정을 중지합니다.":"停止测量一个间隔的经过时间。\r\n","가 길이가 0인 문자열이거나 공백만 포함하는 경우또는 구문 분석 루틴이 잘못된 형식에서 체계를 발견한 경우또는 파서가 \"file\" 체계를 사용하지 않는 URI에서 두 개 이상의 연속된 슬래시를 발견한 경우또는 ":"是零长度字符串或仅包含空格，或者解析例程遇到格式无效的方案，或者解析器在不使用“文件”方案的 URI 中遇到两个或多个连续斜杠；或者\r\n","Определяет методы для поддержки операций сравнения объектов с целью определения их структурного равенства. ":"定义方法以支持对象比较操作以确定它们的结构相等性。\r\n","Строка, в которой связанный с атрибутом символ условной компиляции задан с учетом регистра. ":"一个字符串，其中与属性关联的条件编译符号区分大小写。\r\n","Блокирует текущий поток до получения сигнала объектом ":"阻塞当前线程，直到信号被对象接收到\r\n","Número que se va a convertir. ":"Number que se va a convertir。\r\n","매개 변수 블록을 바인드 컨텍스트에 저장합니다.이러한 매개 변수는 이 바인드 컨텍스트를 사용하는 나중 UCOMIMoniker 작업에 적용됩니다.":"将参数块保存到绑定上下文。这些参数将应用于使用此绑定上下文的未来 UCOMIMoniker 操作。\r\n","is null. -или-Значение параметра ":"一片空白。 - 或 - 参数值\r\n","При возвращении данного метода содержит ссылку на перечисленные элементы.Этот параметр передается без инициализации.":"当此方法返回时，包含对枚举元素的引用。此参数无需初始化即可传递。\r\n","Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 32-битовое целое число без знака.":"将具有指定基数的数字的字符串表示形式转换为其等效的 32 位无符号整数。\r\n","Возвращает сведения о том, отслеживается ли после финализации объект, на который ссылается текущий объект ":"返回当前对象引用的对象是否在终结后被跟踪\r\n","Определяет, загружен и запущен ли в данный момент объект, определенный текущим моникером.":"确定由当前名字对象标识的对象是否已加载并且当前正在运行。\r\n","URI의 체계입니다.":"URI 方案。\r\n","의 하이퍼볼릭 사인입니다.":"是双曲正弦\r\n","[.NET Framework 4.5.1 이상 버전에서 지원됨] 지정한 형식의 개체를 COM VARIANT로 변환합니다. ":"[在 .NET Framework 4.5.1 及更高版本中支持] 将指定类型的对象转换为 COM VARIANT。\r\n"," > 1 или значение параметра ":" > 1 或参数值\r\n","IStorage::SetStateBits 메서드가 설정한 가장 최근 값인 저장소 개체의 현재 상태를 나타냅니다.":"指示存储对象的当前状态，这是 IStorage::SetStateBits 方法设置的最新值。\r\n","에서 설명하는 것처럼 버전 관리 제한 때문에 AutoDual은 사용하지 않아야 합니다.":"由于版本控制限制，不应使用AutoDual，如中所述。\r\n","Ruft einen booleschen Wert ab, der angibt, ob das diesem ":"获取一个布尔值，指示是否这\r\n","특성 사용 형식이 이미 COM에서 정의되었음을 나타냅니다.":"表示属性使用类型已在COM中定义。\r\n","-Parameters ist nicht größer als ":"-参数不大于\r\n","Освобождает память, выделенную ранее из неуправляемой памяти процесса.":"释放先前从进程的非托管内存中分配的内存。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 32비트 부호 없는 정수 값을 해당하는 문자열 표현으로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定的 32 位无符号整数值转换为其等效的字符串表示形式。\r\n","변환할 날짜 및 시간 값입니다. ":"要转换的日期和时间值。\r\n"," или составной стиль, включающий эти отдельные флаги.":" 或包含这些单独标志的复合样式。\r\n","Angabe, wie ":"指定如何\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.":"将指定的 16 位带符号整数的值转换为等效的单精度浮点数。\r\n","개체의 관리되지 않는 크기(바이트)를 반환합니다.":"返回对象的非托管大小（以字节为单位）。\r\n"," в массиве ":" 在数组中\r\n","에 있는 오프셋입니다. ":"是 中的偏移量。\r\n","-Objekt, das eine .NET Framework-Version identifiziert, und einem Profilnamen.":"标识 .NET Framework 版本和配置文件名称的对象。\r\n","현재 모니커 또는 구조가 비슷한 모니커의 오른쪽에 구성되면 구성이 이루어지지 않는 모니커를 제공합니다.":"构造在当前绰号或具有类似结构的绰号的右侧，给出未组合的绰号。\r\n","-Objekt am angegebenen Index der Auflistung ab.":"集合指定索引处的对象。\r\n"," auf dasselbe Objekt verweisen oder wenn ":" 引用同一个对象，或者如果\r\n","32-разрядное целое число без знака, которое эквивалентно значению параметра ":"与参数值等价的 32 位无符号整数\r\n","연결 가능한 개체가 특수한 하나의 IID에 대해 하나의 연결점을 가지는지 여부를 묻습니다. 연결점을 가지는 경우 해당 연결점에 대한 IConnectionPoint 인터페이스 포인터를 반환합니다.":"询问一个可附加对象是否有一个用于一个特殊 IID 的附加点。如果它有连接点，则返回指向该连接点的 IConnectionPoint 接口指针。\r\n","Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное 64-битовое целое число без знака.":"将指定的 16 位带符号整数的值转换为其等效的 64 位无符号整数。\r\n","지정된 8비트 부호 없는 정수의 값을 부울 값으로 변환합니다.":"将指定的 8 位无符号整数的值转换为布尔值。\r\n","Возвращает заданное число с плавающей запятой одиночной точности; фактическое преобразование не производится.":"返回指定的单精度浮点数；没有执行实际的转换。\r\n","Die Adresse des fixierten Objekts als ":"固定对象的地址为\r\n","Преобразует значение заданного 64-битового целого числа без знака в эквивалентное логическое значение.":"将指定的 64 位无符号整数的值转换为其等效的布尔值。\r\n","Ruft einen booleschen Wert ab, der angibt, ob sich die Zugriffssteuerungseinträge (ACEs) im aktuellen ":"获取一个布尔值，该值指示访问控制项 (ACE) 是否在当前\r\n","Определяет неявное преобразование 32-битового целого числа со знаком в комплексное число.":"定义从带符号的 32 位整数到复数的隐式转换。\r\n"," указанным сочетанием флагов ":" 指定的标志组合\r\n","지정된 형식 및 문화권별 형싣 정보를 사용하여 현재 ":"使用指定的格式和特定​​于区域性的格式设置信息来\r\n",".- oder -  Die Summe von ":".- 或 - 总和\r\n","Возвращает значение, определяющее точку, с которой должен начаться сбор.":"获取一个值，该值指示收集应开始的点。\r\n","지정된 8비트 부호 없는 정수 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.":"将指定的 8 位无符号整数值转换为等效的双精度浮点数。\r\n","Предоставляет управляемое определение интерфейса IConnectionPointContainer.":"提供 IConnectionPointContainer 接口的托管定义。\r\n","Переменная является единственным свойством, представляющим объект наилучшим образом.Только одна переменная в сведениях о типе может содержать этот атрибут.":"变量是唯一最能代表一个对象的属性，类型信息中只有一个变量可以包含这个属性。\r\n","Gibt einen Hashcode für diesen Werttyp zurück.":"Gibt einen Hashcode für diesen Werttyp zurück。\r\n","Хэш-значение для ускорения поиска, вычисленное при помощи функции LHashValOfNameSys.Если значение ":"用于加速查找的哈希值，使用 LHashValOfNameSys 函数计算。如果该值\r\n","숫자의 지정된 문자열 표현을 해당하는 16비트 부호 없는 정수로 변환합니다.":"将数字的指定字符串表示形式转换为其等效的 16 位无符号整数。\r\n","Постоянное значение, хранящееся в данном атрибуте.":"存储在此属性中的常量值。\r\n","Значение HRESULT, соответствующее последнему коду ошибки Win32.":"与最新的 Win32 错误代码对应的 HRESULT 值。\r\n","셀 수 있는 단순한 배열을 나타냅니다.":"表示一个简单的可数数组。\r\n","Gibt an, dass eine ":"表示一个\r\n","Gibt einen Wert zurück, der angibt, ob die aktuelle Instanz und eine 64-Bit-Ganzzahl ohne Vorzeichen über den gleichen Wert verfügen.":"返回一个值，该值指示当前实例和一个 64 位无符号整数是否具有相同的值。\r\n","Определяет смещение в VTBL для ":"指定 VTBL 中的偏移量\r\n","마샬링 정보가 필요함을 나타내는 멤버 ID입니다. ":"表示需要编组信息的成员 ID。\r\n"," 개체에 대한 버전 정보가 포함된 개체입니다.":" 包含有关对象的版本信息的对象。\r\n","Der Pfad der Ressource, auf die der URI verweist.":"URI 指向的资源路径。\r\n","실수와 허수 부분에 대해 지정된 서식과 문화권별 서식 정보를 사용하여 현재 복소수 값을 데카르트 형식의 해당하는 문자열 표현으로 변환합니다.":"使用指定的实部和虚部格式以及特定于区域性的格式设置信息，将当前复数值转换为其等效的笛卡尔形式字符串表示形式。\r\n","Controla si los caracteres Unicode se convierten en los caracteres ANSI coincidentes más cercanos.":"控制Unicode字符是否转换为最接近匹配的ANSI字符。\r\n","Экземпляры этого типа могут быть созданы при помощи ITypeInfo::CreateInstance.":"这种类型的实例可以使用 ITypeInfo::CreateInstance 创建。\r\n"," entspricht.- oder - Ein Nullverweis (Nothing in Visual Basic), wenn ":" 匹配。- 或- 空引用（在 Visual Basic 中为 Nothing）如果\r\n","Это свойство отображается в обозревателе объектов и не отображается в обозревателе свойств.":"该属性显示在对象浏览器中，不显示在属性浏览器中。\r\n","읽거나 deserialize할 때 멤버가 있어야 함을 serialization 엔진에 알려 주는 값을 가져오거나 설정합니다.":"获取或设置一个值，该值告诉序列化引擎在读取或反序列化时该成员必须存在。\r\n","Die Größe des zu belegenden Speicherblocks.":"要分配的内存块的大小。\r\n","Указывает, что интерфейс предоставляется модели COM как интерфейс Среда выполнения Windows. ":"指定接口作为 Windows 运行时接口公开给 COM。\r\n","Premier nombre complexe à multiplier.":"Premier nombre complex à multiplier。\r\n","를 왼쪽으로 이동할 비트 수입니다.":"要左移的位数。\r\n","Das ganzzahlige Ergebnis der Division.":"除法的整数结果。\r\n","Definiert eine implizite Konvertierung einer 64-Bit-Ganzzahl mit Vorzeichen in einen ":"定义 64 位有符号整数到\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.":"将数字的指定字符串表示形式转换为等效的 8 位带符号整数。\r\n","-Struktur oder eine gebundene ITypeComp-Schnittstelle.":"结构或绑定的 ITypeComp 接口。\r\n","Ruft alle benutzerdefinierten Datenelemente für die Bibliothek ab.":"获取库的所有自定义数据项。\r\n","구성표는 잘못된 구성표 이름으로 설정할 수 없습니다. ":"不能使用无效的方案名称设置方案。\r\n","Значение, которое было сдвинуто влево на указанное число бит.":"已左移指定位数的值。\r\n","Definiert eine explizite Konvertierung eines ":"定义 a 的显式转换\r\n","지정된 64비트 부호 없는 정수의 값을 부울 값으로 변환합니다.":"将指定的 64 位无符号整数的值转换为布尔值。\r\n","Legt die opaken Rückrufdaten fest, die diesem ":"设置与此关联的不透明回调数据\r\n","Возвращаемое 16-разрядное целое число без знака. ":"返回的 16 位无符号整数。\r\n","Возвращает число процессоров на текущем компьютере.":"返回当前计算机上的处理器数。\r\n","Der übergebene Handler kann nicht verwendet werden.":"无法使用传递的处理程序。\r\n"," enthält weniger als zwei oder mehr als drei Komponenten.- oder -":" 包含少于两个或多于三个组件。- 或-\r\n","Ein verwaltetes Objekt mit Daten, auf die der ":"包含被引用的数据的托管对象\r\n","exponent durch ":"指数\r\n","현재 응용 프로그램 도메인이 언로드되거나 CLR이 종료되는 경우 true이고, 그렇지 않으면 false.입니다.":"如果当前应用程序域已卸载或 CLR 正在关闭，则为 true；否则为 false。\r\n","Указатель IntPtr, представляющий значение поля ":"Указатель IntPtr, представляющий значение поля\r\n","При возвращении данного метода содержит только что созданный перечислитель.Этот параметр передается без инициализации.":"当此方法返回时，包含新创建的枚举器。此参数无需初始化即可传递。\r\n","Возвращает имя ресурса версии файла Win32.":"返回文件的 Win32 版本的资源名称。\r\n","Список полных имен интерфейсов-источников событий, разделенных нулями. ":"完全限定的事件源接口名称的零分隔列表。\r\n","Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 8-Bit-Ganzzahl mit Vorzeichen.":"使用指定的区域性特定格式设置信息将指定对象的值转换为 8 位带符号整数。\r\n","Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное 32-битовое целое число без знака.":"将指定的 16 位有符号整数的值转换为等效的 32 位无符号整数。\r\n","Представление объекта на экране выглядит так же, как при печати на принтере с помощью команды Печать из меню Файл.Описываемые данные могут представлять последовательность страниц.":"对象在屏幕上的表示看起来与使用“文件”菜单中的“打印”命令打印到打印机时相同。描述的数据可能表示一系列页面。\r\n","해제할 COM 개체입니다.":"要释放的 COM 对象。\r\n","-Klasse mit einem Namen, einem Schwellenwert für den Beginn der Handle-Erfassung sowie einem Schwellenwert, ab dem die Handle-Erfassung auftreten muss. ":"具有名称、开始句柄捕获的阈值以及必须发生句柄捕获的阈值的类。\r\n","Der Wert, der in eine komplexe Zahl konvertiert werden soll.":"要转换为复数的值。\r\n","Konvertiert die angegebene Zeichenfolgendarstellung eines logischen Werts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in seine boolesche Entsprechung.":"使用指定的区域性特定格式设置信息，将逻辑值的指定字符串表示形式转换为其等效的布尔值。\r\n","Представляет доступную только для чтения коллекцию элементов, доступ к которым может быть получен по индексу. ":"表示可以通过索引访问的只读元素集合。\r\n","-Wert ab, als der die Daten gemarshallt werden sollen.":"将数据编组为的值。\r\n","Объект, содержащий информацию о версии данного объекта ":"包含此对象的版本信息的对象\r\n","에 해당하는 32비트 부호 없는 정수입니다.":"一个 32 位无符号整数，等价于\r\n","Gibt die kleinere von zwei 8-Bit-Ganzzahlen mit Vorzeichen zurück.":"返回两个 8 位有符号整数中较小的一个。\r\n","Определяет понятный псевдоним по умолчанию для манифеста сборки.":"为程序集清单指定一个友好的默认别名。\r\n"," 레이아웃이 Sequential 또는 Explicit이 아닌 경우":" 如果您的布局不是 Sequential 或 Explicit\r\n"," ist, gibt diese Methode -1 zurück.Wenn \"value\" gleich ":" , 此方法返回 -1。如果 \"value\" 等于\r\n","Eine codierte Zeichenfolge.":"编码字符串。\r\n","필요한 요소가 포함된 배열입니다.":"包含所需元素的数组。\r\n","비교할 두 개의 64비트 부호 없는 정수 중 두 번째 숫자입니다. ":"要比较的两个 64 位无符号整数中的第二个。\r\n",", удаляемый из коллекции ":"要从集合中移除的\r\n","Eine schreibgeschützte Long-Integer-Zahl, die die Gesamtanzahl der von der aktuellen Instanz gemessenen Millisekunden angibt.":"一个只读长整数，表示当前实例测量的总毫秒数。\r\n","구성 요소 클래스(coclass)를 설명하는 형식의 새 인스턴스를 만듭니다.":"创建描述组件类 (coclass) 的类型的新实例。\r\n"," = + 무한대0 <":" = + 无穷大 0 <\r\n","Representa un entero con signo arbitrariamente grande.":"Representa un entero con signo arbitrariamente grande。\r\n","Ruft den Implementierungstyp der benutzerdefinierten Daten ab.":"获取自定义数据的实现类型。\r\n","부호 있는 1바이트 정수입니다.이 멤버를 사용하여 부울 값을 1바이트 C 스타일 bool(true = 1, false = 0)로 변환할 수 있습니다.":"单字节有符号整数。您可以使用此成员将布尔值转换为单字节 C 风格的布尔值（true = 1，false = 0）。\r\n","Новый размер потока в байтах. ":"以字节为单位的新流大小。\r\n",", которое содержит источник или назначение для ":"一个包含源或目标的\r\n"," и значения ":" 和价值观\r\n","Среда хранения представляет собой файл на диске, заданный с помощью пути.Если элемент STGMEDIUM":"存储介质是由路径指定的磁盘上的文件。如果 STGMEDIUM 元素\r\n","Der Werttyp, der aus dem Arbeitsspeicher gelesen wurde.":"从内存中读取的值类型。\r\n","이 구조체에서 기술하는 인터페이스의 변수 및 데이터 필드 수를 나타냅니다.":"指示此结构描述的接口中变量和数据字段的数量。\r\n","Ruft alle benutzerdefinierten Daten für den angegebenen Implementierungstyp ab.":"获取指定实现类型的所有自定义数据。\r\n"," ist ein Windows-Runtime-Typ.":" 是 Windows 运行时类型。\r\n","Der Offset, in Bytes, vom Anfang des zu decodierenden ":"从要解码的开始处的偏移量（以字节为单位）\r\n","Gibt schreibgeschützten Zugriff an.":"指定只读访问。\r\n","-Klasse am angegebenen Index ab oder legt diese fest.":"指定索引处的类或设置它。\r\n","При переопределении в производном классе освобождает неуправляемые ресурсы, используемые объектом ":"在派生类中重写时，释放对象使用的非托管资源\r\n","Возвращает значение, определяющее, равны ли текущий экземпляр и 64-разрядное целое число без знака.":"获取一个值，该值指示当前实例和一个无符号 64 位整数是否相等。\r\n","-Parameter, welche der beiden Zahlen zurückgegeben wird.":"-参数返回两个数字中的哪一个。\r\n","La clase derivada reside en un ensamblado sin el permiso de acceso a código no administrado.":"派生类驻留在 en un ensamblado sin el permiso de acceso a código no administrado。\r\n",".Каждый элемент формата в параметре ":".参数中的每个格式元素\r\n","Задает различные типы данных и функций.":"指定各种类型的数据和函数。\r\n"," nicht null ist, enthält die zurückgegebene Pfadzeichenfolge ":" 不为空，包含返回的路径字符串\r\n","Konvertiert eine Teilmenge eines Arrays von 8-Bit-Ganzzahlen ohne Vorzeichen in die entsprechende mit Base-64-Ziffern codierte Zeichenfolgendarstellung.Parameter geben die Teilmenge als Offset im Eingabearray und die Anzahl der Elemente im zu konvertierenden Array an.":"将 8 位无符号整数数组的子集转换为其等效的 base-64 数字编码字符串表示形式。参数指定子集，作为输入数组中的偏移量，以及数组中要转换的元素数。\r\n","[.NET Framework 4.5.1 이상 버전에서 지원됨] COM VARIANT의 배열을 지정된 형식의 배열로 변환합니다. ":"[在 .NET Framework 4.5.1 及更高版本中受支持] 将 COM VARIANT 数组转换为指定类型的数组。\r\n","Требует от JIT-компилятора использования поведения по умолчанию, которое включает активацию оптимизаций, отключение поддержки режима \"Изменить и продолжить\" и использование точек следования хранилища символов при его наличии.В платформе .NET Framework версии 2.0 всегда генерируются сведения об отслеживании JIT, смещении MSIL для смещения машинного кода внутри метода.":"要求 JIT 编译器使用默认行为，包括启用优化、禁用编辑和继续支持以及在存在时使用符号存储序列点。方法内的机器代码偏移量。\r\n","Stellt einen Zeiger auf eine ":"设置指向a的指针\r\n"," и анализируемая строка включает обозначение денежной единицы, символ десятичного разделителя определяется свойством ":" 解析后的字符串包含货币符号，小数点符号由属性决定\r\n","를 변경하지 않고 반환합니다.":"返回不变。\r\n","Первое комплексное число для сложения.":"要添加的第一个复数。\r\n","에 해당하는 32비트 부호 있는 정수입니다.":"一个 32 位有符号整数等同于\r\n","Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентное десятичное число.":"将指定的 64 位无符号整数的值转换为其等效的十进制数。\r\n","Возвращает или задает значение, указывающее, следует ли сохранять данные ссылки на объект.":"Возвращаетилизадаетзначение，указывающее，следуетлисохранятьданныессылкинаобъект。\r\n"," in der Sortierreihenfolge.- oder - ":" 按排序顺序。- 或 -\r\n","이 메서드는 반환될 때 CLSID에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含对 CLSID 的引用。此参数在未初始化的情况下传递。\r\n","Ruft die Informationen über das Stammverzeichnis des angegebenen Pfads ab.":"获取指定路径的根目录信息。\r\n","의 값을 해당하는 문자열 표현으로 변환합니다.":"将 的值转换为其等效的字符串表示形式。\r\n","반환할 참조된 형식 설명에 대한 핸들입니다. ":"要返回的引用类型描述的句柄。\r\n","첫 번째 동일 형식 문자열입니다.":"第一个等效格式字符串。\r\n","Во время задания символа ":"设置符号时\r\n"," имеет значение null, процесс назначения должен использовать OpenFile для удаления файла.":" 为空，目标进程必须使用 OpenFile 来删除文件。\r\n","Enthält die Argumente, die einer Methode oder Eigenschaft von IDispatch::Invoke übergeben wurden.":"包含传递给 IDispatch::Invoke 的方法或属性的参数。\r\n","Stellt eine Kombination aus der Identität eines Benutzers und einer Zugriffsmaske dar.Ein ":"表示用户身份和访问掩码的组合\r\n"," с объектом, содержащим значение HRESULT ошибки.":" 使用包含错误的 HRESULT 值的对象。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 32비트 부호 있는 정수로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为 32 位带符号整数。\r\n"," имеет значение true; в противном случае — 0.":" 是真的;否则，0。\r\n","Stellt die Dispatch-IDs der benannten Argumente dar.":"表示命名参数的调度 ID。\r\n","Преобразует значение заданного 32-битового целого числа без знака в эквивалентное логическое значение.":"将指定的 32 位无符号整数的值转换为其等效的布尔值。\r\n","Значение true, если дескриптор является допустимым, в противном случае — значение false.":"Значение true, если десриптор является допустимым, в противном случае — значение false.\r\n","Especifica que el tipo define o implementa un contrato de datos y los puede serializar un serializador como, por ejemplo ":"Specifica que el tipo define o implementa un contrato de datos y los puede serializar un serializador como, por ejemplo\r\n","Gibt das bitweise Einerkomplement eines ":"返回 a 的按位补码\r\n","[Поддерживается только в .NET Framework 4.5.1 и более поздних версиях] Возвращает неуправляемый размер объекта указанного типа в байтах. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 返回指定类型对象的非托管大小（以字节为单位）。\r\n","설명된 형식의 IDL 특성입니다.":"描述类型的 IDL 属性。\r\n","-Enumeration entnommenen Wert.":"从枚举中获取的值。\r\n","Возвращаемое значение Положительное число Основание логарифма 10 ":"返回值 正数 对数的底数 10\r\n","Абсолютный путь к файлу, в котором ранее был сохранен объект. ":"先前保存对象的文件的绝对路径。\r\n","-Klasse mit dem Namen der Quellschnittstelle des Ereignisses.":"带有事件源接口名称的类。\r\n","과 호환되지 않는 형식으로 되어 있으면 변환에 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"如果格式与 不兼容，转换将失败。此参数未初始化传递。\r\n","Включает сборку мусора, которая пытается минимизировать задержку на протяжении длительного периода.Сборщик пытается выполнять сборку только по поколению 0, поколению 1 и параллельные сборки по поколению 2.Полностью блокирующие сборки могут все равно возникать при нехватке памяти в системе.":"启用试图在长时间内尽量减少延迟的垃圾收集。收集器仅尝试收集第 0 代、第 1 代和第 2 代并发收集。当系统内存不足时，仍然会发生完全阻塞的收集。\r\n","Der Wert, von dem subtrahiert werden soll (der Minuend).":"要从中减去的值（被减数）。\r\n","논리 값의 지정된 문자열 표현을 해당하는 부울 값으로 변환합니다.":"将布尔值的指定字符串表示形式转换为其等效的布尔值。\r\n"," Q) ist, wobei Q der auf die nächste ganze Zahl gerundete Quotient ":" Q) 其中 Q 是四舍五入到最接近的整数的商\r\n","Ein Objekt, das .NET Framework-Versionsinformationen enthält.":"包含 .NET Framework 版本信息的对象。\r\n"," (для вспомогательных соединений с данными или представлениями) или обновления кэша (для соединений с кэшем).":" （用于辅助数据或视图连接）或缓存更新（用于缓存连接）。\r\n"," ist eine NULL-Zeichenfolge.":" 是一个 NULL 字符串。\r\n","。 1 ":". 1\r\n","Die Methode gibt den Moniker zurück, der das gemeinsame Präfix des aktuellen Monikers und von ":"该方法返回名字对象，它是当前名字对象和\r\n","보다 크거나 같은 최소 정수 값입니다.":"大于或等于的最小整数值。\r\n","Возвращает десятичную константу, хранящуюся в данном атрибуте.":"返回存储在此属性中的十进制常量。\r\n","에서 기존 확장명을 제거하려면 null을(를) 지정하세요.":"指定 null 以从 .\r\n"," является символ разделения тома или каталога, этот метод возвращает ":" 是卷或目录分隔符，此方法返回\r\n","Ein Objekt, das Versionsinformationen zu diesem ":"包含有关此版本信息的对象\r\n","Ruft die Anzahl von Prozessoren im aktuellen Computer ab.":"获取当前计算机中的处理器数。\r\n","ist weder sequenziell noch explizit.":"既不是顺序的也不是明确的。\r\n","Преобразует значение текущего комплексного числа в эквивалентное строковое представление в прямоугольной системе координат, используя указанный формат для действительной и мнимой частей.":"使用指定的实部和虚部格式，将当前复数的值转换为其在直角坐标中的等效字符串表示形式。\r\n","Die Größe der aktuellen Instanz.":"当前实例的大小。\r\n","Средние 32 бита 96-битного ":"中 32 位 96 位\r\n","Ruft die Überwachungsflags für diese Überwachungsregel ab.":"获取此审核规则的审核标志。\r\n","Gibt die Aufrufkonvention eines Einstiegspunktes an.":"指定入口点的调用约定。\r\n","Пространство имен контракта. ":"合约命名空间。\r\n","Ruft die gesamte verstrichene Zeit ab, die von der aktuellen Instanz gemessen wurde.":"获取当前实例测量的总运行时间。\r\n","Die zurückzugebende 8-Bit-Ganzzahl ohne Vorzeichen. ":"要返回的 8 位无符号整数。\r\n","-Klasse mit einer angegebenen Meldung.":"带有指定消息的类。\r\n","Die Größe des angegebenen Objekts in nicht verwaltetem Code in Bytes. ":"指定的非托管代码对象的大小（以字节为单位）。\r\n","Enthält Informationen über den Parameter.":"包含有关参数的信息。\r\n","Возвращает инкапсулированный объект ":"Возвращает инкапсулированный объект\r\n","Der Wert, der in eine 64-Bit-Ganzzahl ohne Vorzeichen konvertiert werden soll.":"要转换为 64 位无符号整数的值。\r\n","При возвращении данного метода содержит ссылку на уменьшенную форму текущего моникера, который может иметь значение null, если происходит ошибка или если текущий моникер уменьшен до нуля.Этот параметр передается без инициализации.":"当此方法返回时，包含对当前名字对象的缩小形式的引用，如果发生错误或当前名字对象减少为零，则该引用可能为 null。此参数无需初始化即可传递。\r\n","지정된 배정밀도 부동 소수점 숫자보다 크거나 같은 최소 정수 값을 반환합니다.":"返回大于或等于指定双精度浮点数的最小整数值。\r\n"," belegten Speicherblocks.":" 占用的内存块。\r\n","Eine ganze Zahl, die einen Zeiger auf den für die Zeichenfolge belegten Speicherblock darstellt, oder 0, wenn s gleich null ist.":"一个整数，表示指向为字符串分配的内存块的指针，如果 s 为零，则为 0。\r\n","에 루트 디렉터리 정보가 포함되어 있지 않은 경우 빈 문자열입니다.":"如果不包含根目录信息，则为空字符串。\r\n","-Klasse mit dem Standardwert eines Parameters.":"具有参数默认值的类。\r\n","Die für die Bezeichnung der Daten verwendete GUID. ":"用于标记数据的 GUID。\r\n","Beschreibt den Typ eines COM-Members.":"描述 COM 成员的类型。\r\n","Vergleicht diese Instanz mit einer 64-Bit-Ganzzahl mit Vorzeichen und gibt eine ganze Zahl zurück, die angibt, ob der Wert dieser Instanz kleiner oder größer als der Wert der 64-Bit-Ganzzahl mit Vorzeichen ist oder mit diesem übereinstimmt.":"将此实例与 64 位有符号整数进行比较，并返回一个整数，指示此实例的值是小于、大于还是等于 64 位有符号整数的值。\r\n","Die CLSID des zurückzugebenden Typs. ":"要返回的类型的 CLSID。\r\n","0과 같은 실수와 1과 같은 허수를 포함하는 새 ":"包含实数（如 0）和虚数（如 1）的新数\r\n",", выполняющий сравнение строк по порядковому номеру с учетом регистра.":"按序列号比较字符串的 ，区分大小写。\r\n","소멸자의 ID이거나, 없으면 ":"析构函数的 ID，或者如果不存在\r\n","Изменяет текущий набор, чтобы он содержал только элементы, которые имеются либо в текущем наборе, либо в указанной коллекции, но не одновременно в них обоих. ":"修改当前集，使其仅包含当前集或指定集合中的元素，但不能同时包含两者。\r\n","Десятичное число.":"Десятичное число。\r\n","Одна из строк в массиве содержит один или несколько недопустимых символов, определенных в ":"数组中的字符串之一包含一个或多个在中定义的无效字符\r\n","Отсчитываемый от нуля индекс элемента, который требуется получить. ":"要获取的元素的从零开始的索引。\r\n","Отслеживаемый объект или null. ":"被跟踪的对象，或者为空。\r\n","Когда число находится посредине между двумя другими числами, оно округляется до ближайшего четного числа.":"当一个数字介于其他两个数字之间时，它会四舍五入到最接近的偶数。\r\n","Возвращает или задает значение, связанное с элементом перечисления, к которому применяется атрибут. ":"获取或设置与应用特性的枚举元素关联的值。\r\n","Сохраняет параметры, используемые в операции привязки монкера.":"存储 monker 绑定操作中使用的选项。\r\n","Die konjugierte Zahl von ":"的共轭数\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 64비트 부호 없는 정수로 변환합니다.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的 64 位无符号整数。\r\n","Замещает все вхождения указанного символа в подстроке данного экземпляра на другой указанный символ.":"将此实例的子字符串中出现的所有指定字符替换为另一个指定字符。\r\n","Die zu dividierende komplexe Zahl.":"要除的复数。\r\n"," получил сигнал; в противном случае значение false.":" 收到信号；否则，假的。\r\n"," метода ":" 方法\r\n","지정된 64비트 부호 있는 정수 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.":"将指定的 64 位带符号整数值转换为等效的双精度浮点数。\r\n","입력 배열의 지정된 위치에서 시작하여 바이트를 읽어 메모리 위치에 지정된 수의 값 형식을 씁니다.":"从输入数组中的指定位置开始，读取字节并将指定数量的值类型写入内存位置。\r\n","long 정수를 나타냅니다.":"表示长整型。\r\n","true, если заданный объект является экземпляром ":"如果给定对象是实例，则为真\r\n","Возвращает значение, указывающее, равны ли значение ":"返回一个值，表示值是否相等\r\n","반환이 성공적이면, 스트림 개체에 쓰여진 실제 바이트 수를 포함합니다.호출자가 이 포인터를 ":"如果返回成功，则包含写入流对象的实际字节数。调用者可以使用该指针\r\n","COM IDispatch 포인터(Microsoft Visual Basic 6.0의 Object)입니다.":"COM IDispatch 指针（Microsoft Visual Basic 6.0 中的对象）。\r\n"," als Typ.":" 作为一个男人。\r\n"," < -1, ":" < -1,\r\n"," kompatibel ist.Dieser Parameter wird nicht initialisiert übergeben.":" compatible. 此参数未初始化传递。\r\n","Возвращает текущие сведения о трассировке стека.":"返回当前堆栈跟踪信息。\r\n","Ein Objekt, das den zu konvertierenden Wert angibt, oder null. ":"指定要转换的值的对象，或者为 null。\r\n","Преобразует строку в строку формата HTML.":"将字符串转换为 HTML 格式字符串。\r\n","Сообщение, содержащее причину возникновения исключения. ":"包含异常原因的消息。\r\n","Число, логарифм которого должен быть найден.":"要找到其对数的数。\r\n"," verwendet wurde.Dieser Parameter wird nicht initialisiert übergeben.":" 已使用。此参数未初始化地传递。\r\n","Dekrementiert manuell den Verweiszähler für eine ":"手动减少引用计数\r\n","Размер экземпляра этого типа.":"这种类型的实例的大小。\r\n","Имя объекта, который нужно найти. ":"要查找的对象的名称。\r\n","Добавляет строковое представление указанного числа с плавающей запятой с обычной точностью к данному экземпляру.":"将具有正常精度的指定浮点数的字符串表示形式添加到此实例。\r\n","저장 미디어가 메타파일(HMETAFILE)입니다.이 메타파일의 데이터에 액세스하려면 Windows 또는 WIN32 함수를 사용합니다.":"存储介质是一个图元文件（HMETAFILE），使用Windows或WIN32的功能可以访问这个图元文件中的数据。\r\n",".Wenn jedoch ":"。但当\r\n","Преобразует значение заданного 16-разрядного целого числа без знака в эквивалентное десятичное число.":"将指定的 16 位无符号整数的值转换为其等效的十进制数。\r\n"," ignorieren.":" 忽略。\r\n","이면 이 메서드는 ":", 那么这个方法\r\n","Die Methode gibt einen Verweis auf die ITypeInfo des Typs zurück, an den ":"该方法返回对类型的 ITypeInfo 的引用\r\n"," (-1) для неограниченного времени ожидания. ":" (-1) 无限超时。\r\n"," sind ungültig.":" 无效。\r\n","Преобразует код ошибки HRESULT в соответствующий объект ":"将 HRESULT 错误代码转换为适当的对象\r\n","에 대한 호출에서 반환되는 연결 토큰을 나타냅니다.":"表示从对 的调用返回的连接令牌。\r\n","Der um 1 dekrementierte Wert des ":"的值减 1\r\n","Число строк для возвращения в параметре ":"参数中返回的行数\r\n","Преобразует значение заданного символа Юникода в эквивалентное 8-битовое целое число без знака.":"将指定 Unicode 字符的值转换为其等效的 8 位无符号整数。\r\n","Предоставляет уникальную глобальную библиотеку идентификаторов для библиотеки типов.":"为类型库提供唯一的全局标识符库。\r\n","구현된 인터페이스나 기본 인터페이스의 인덱스입니다. ":"已实现或基本接口的索引。\r\n","Индекс описания типа, для которого возвращается документация. ":"返回文档的类型描述的索引。\r\n"," serialisierbar ist.Um ihren Typ serialisierbar zu machen, müssen die Autoren hierfür einen Datenvertrag definieren.":" serialisierbar ist.Um ihren Type serialisierbar zu machen, müssen die Autoren hierfür einen Datenvertrag definieren。\r\n","구조체 내에 나타나는 인라인 고정 길이 문자 배열에 사용됩니다.포함하는 구조체에 적용된 ":"用于出现在结构中的内联固定长度字符数组。应用于包含结构。\r\n","데이터를 마샬링할 값입니다. ":"要为其编组数据的值。\r\n","Сообщение об ошибке с указанием причин исключения. ":"指示异常原因的错误消息。\r\n","Число, равное ":"一个数字等于\r\n","Индекс объекта, удовлетворившего операцию ожидания, в массиве.":"数组中满足等待操作的对象的索引。\r\n","Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное 16-битовое целое число без знака.":"将指定的 8 位有符号整数的值转换为等效的 16 位无符号整数。\r\n"," используется в качестве ключа добавляемого элемента. ":" 用作添加元素的键。\r\n"," größer als der Wert einer 64-Bit-Ganzzahl mit Vorzeichen ist.":" 大于 64 位有符号整数的值。\r\n"," 개체를 부호 있는 32비트 정수 값으로 변환하는 명시적 변환을 정의합니다.":" 定义显式转换以将对象转换为带符号的 32 位整数值。\r\n","Die Methode gibt einen long-Wert zurück, der die Größe des Streams in Bytes zurückgibt, der für das Speichern dieses Objekts benötigt wird.Dieser Parameter wird nicht initialisiert übergeben.":"该方法返回一个 long 值，指示存储此对象所需的流的大小（以字节为单位）。此参数未初始化传递。\r\n",", содержащую сведения о заданной функции.":"包含有关指定函数的信息的 。\r\n","Преобразует значение заданного 64-битового целого числа без знака в эквивалентное 16-битовое целое число со знаком.":"将指定的 64 位无符号整数的值转换为等效的 16 位有符号整数。\r\n","Benachrichtigt die registrierten Advise-Senken eines Objekts, die seine Ansicht geändert wurde.Diese Methode wird von einem Server aufgerufen.":"通知对象的已注册通知接收器其视图已更改。此方法由服务器调用。\r\n","Возвращает значение, определяющее знак числа одинарной точности с плавающей запятой.":"返回指定单精度浮点数符号的值。\r\n",", округленное до ближайшего 8-разрядного знакового целого числа.Если ":", 四舍五入到最接近的 8 位有符号整数。如果\r\n","읽기 전에 ":"读之前\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.":"将指定的单精度浮点数的值转换为等效的双精度浮点数。\r\n"," 메서드에서 가져온 포인터를 해제합니다.":" 释放从该方法获得的指针。\r\n","Erstellt einen Enumerator aller Verbindungspunkte, die in dem verbindungsfähigen Objekt unterstützt werden, mit einem Verbindungspunkt pro IID.":"创建可连接对象中支持的所有连接点的枚举器，每个 IID 有一个连接点。\r\n","При возвращении этого метода содержит CLSID.Этот параметр передается без инициализации.":"当此方法返回时，包含 CLSID。此参数无需初始化即可传递。\r\n","Gibt die Zeitspanne an (Systemzeit in Millisekunden, wie von der GetTickCount-Funktion zurückgegeben), die der Aufrufer für die Durchführung des Bindungsvorgangs angegeben hat.":"指示调用方为要执行的绑定操作指定的时间量（以毫秒为单位的系统时间，由 GetTickCount 函数返回）。\r\n","는 포함되지 않습니다.":"不包括在内。\r\n","이 메서드가 반환될 때 검색된 데이터를 넣을 위치를 지정하는 개체를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含一个指定将检索到的数据放在哪里的对象。此参数未初始化传递。\r\n","Ein Array von zuzuordnenden Namen. ":"要映射的名称数组。\r\n","가 0보다 크고 ":"大于 0\r\n",") in Quadrant 1, 0 < θ < π/2.Für (":") 在象限 1, 0 < θ < π/2。对于 (\r\n","Преобразует значение заданного 32-битового целого числа без знака в эквивалентное 8-битовое целое число со знаком.":"将指定的 32 位无符号整数的值转换为等效的 8 位有符号整数。\r\n","Konvertiert den Wert des angegebenen Objekts in eine entsprechende Dezimalzahl.":"将指定对象的值转换为等效的十进制数。\r\n","Возвращает сведения об авторских правах.":"返回版权信息。\r\n","Die zweite von zwei zu vergleichenden Gleitkommazahlen mit einfacher Genauigkeit. ":"要比较的两个单精度浮点数中的第二个。\r\n","이 예외와 관련된 오류 코드(HRESULT) 값입니다. ":"与此异常关联的错误代码(HRESULT)值。 \r\n","이벤트 대리자입니다.":"事件委托。\r\n",".ZeroDie aktuelle Instanz ist gleich ":".Zero当前实例相等\r\n","URI에 액세스하는 사용자와 관련된 암호를 가져오거나 설정합니다.":"获取或设置与访问 URI 的用户关联的密码。\r\n","설명 섹션의 테이블과 같이 밑이 10인 ":"설명 섹션의 테이블과 같이 밑이 10인\r\n","을 사용하여 이전에 할당된 메모리 블록 크기를 조정합니다.":"调整先前分配的内存块的大小。\r\n","Es true si el objeto coincide con ":"如果对象与 \r\n","Enthält Informationen über Remoting des Elements.":"包含有关远程处理项目的信息。\r\n","Строка содержит полное имя данного исключения и, возможно, сообщение об ошибке, имя внутреннего исключения и трассировку стека, в зависимости от использованного конструктора ":"该字符串包含给定异常的完全限定名称，以及可选的错误消息、内部异常的名称和堆栈跟踪，具体取决于所使用的构造函数。\r\n","과 유사하지만 고정 개체의 주소를 사용할 수 있습니다.이렇게 되면 가비지 수집기가 개체를 이동할 수 없으므로 가비지 수집기의 효율성이 저하됩니다.":"类似，但可以使用固定对象的地址。这会降低垃圾回收器的效率，因为垃圾回收器无法移动对象。\r\n","Преобразует значение заданного объекта в 16-битовое целое число без знака.":"将指定对象的值转换为 16 位无符号整数。\r\n","Ruft einen Datenmembernamen ab oder legt diesen fest. ":"获取或设置数据成员名称。\r\n","Der Speicherzeiger, aus dem kopiert werden soll.":"要从中复制的内存指针。\r\n","Реализует поле ":"实现一个字段\r\n","Показывает флаги ":"显示标志\r\n","Eine 16-Bit-Ganzzahl ohne Vorzeichen, die ":"一个 16 位无符号整数\r\n","실행 중 등록되는 개체에 대한 참조입니다. ":"对执行期间注册的对象的引用。\r\n","Второе значение в вычитании.":"减法中的第二个值。\r\n","Значение true, чтобы использовать параметр ":"true 使用参数\r\n","Bestimmt, ob der angegebene Moniker derzeit in der Running Object Table (ROT) registriert ist.":"确定指定的名字对象当前是否已在运行对象表 (ROT) 中注册。\r\n","메모리의 지정된 오프셋 위치에서 값 형식을 읽습니다.":"从指定偏移量的内存中读取值类型。\r\n"," mediante el mensaje de error especificado.":" mediante el mensaje de error especificado.\r\n","Subtrahiert eine komplexe Zahl von einer anderen komplexen Zahl und gibt das Ergebnis zurück.":"从另一个复数中减去一个复数并返回结果。\r\n"," представляют одну и ту же версию платформы .NET Framework; в противном случае — значение false.":" 代表相同版本的 .NET Framework；否则，假的。\r\n",".Расшифрованная строка.":".解码后的字符串。\r\n","IUnknown 인터페이스에 대한 관리되는 포인터입니다.":"指向 IUnknown 接口的托管指针。\r\n","-Klasse unter Verwendung der angegebenen Werte.":"使用指定值的类。\r\n","Возвращает строку, обозначающую в данной среде начало новой строки.":"返回一个字符串，指示此环境中新行的开始。\r\n","Высвобождает все ссылки на оболочку RCW (Вызываемая оболочка времени выполнения), задавая ее счетчику ссылок значение 0.":"释放对 RCW（运行时可调用包装器）包装器的所有引用，将其引用计数设置为 0。\r\n","함수는 IDispatch를 통해서만 액세스됩니다.":"只能通过 IDispatch 访问函数。\r\n"," 구조체를 인수로 사용하고 HRESULT 값을 반환하는 함수에 대한 포인터를 나타냅니다.지연된 채우기가 적절하지 않으면 이 필드는 null로 설정됩니다.":" 表示指向函数的指针，该函数以结构作为参数并返回 HRESULT 值。如果延迟填充不合适，则此字段设置为 null。\r\n"," 매개 변수에 해당하는 VARIANT를 받을 포인터입니다.":" 接收与参数对应的 VARIANT 的指针。\r\n","Gibt einen Teil des Aspektes an, wenn die Daten über Seitenbegrenzungen hinaus verteilt werden müssen. ":"当数据需要跨页边界分布时指定问题的一部分。\r\n","-Parameter in der durch Plattformaufrufe deklarierten angegebenen Klasse.":"- 平台调用声明的指定类中的参数。\r\n","Ruft einen Wert ab, der angibt, ob der ACE Zugriff gewährt, Zugriff verweigert, Systemüberwachungen auslöst oder einen Systemalarm auslöst.":"获取一个值，该值指示 ACE 是授予访问权限、拒绝访问权限、触发系统监视器还是触发系统警报。\r\n","Преобразует значение заданного 8-разрядного целого числа со знаком в эквивалентное 16-разрядное целое число со знаком.":"将指定的 8 位带符号整数的值转换为等效的 16 位带符号整数。\r\n","Возвращает пространство имен элементов контракта данных.":"Возвращает пространство имен элементов контракта данных。\r\n","Beim Überschreiben in einer abgeleiteten Klasse wird ein Vergleich von zwei Zeichenfolgen durchgeführt und eine Angabe der relativen Sortierreihenfolge zurückgegeben.":"在派生类中重写时，执行两个字符串的比较并返回相对排序顺序的指示。\r\n","Gibt den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen als Bytearray zurück.":"Gibt den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen als Bytearray zurück。\r\n","을 구현하지 않는 경우 ":"如果你不实施\r\n","가 올바른 URI가 아닌 경우 ":"不是有效的 URI\r\n","Die Phase, d. h. der Winkel von der Linie zur horizontalen Achse, gemessen im Bogenmaß.":"阶段即H。从直线到水平轴的角度，以弧度为单位。\r\n","Преобразует значение заданного 64-разрядного знакового целого числа в эквивалентное десятичное число.":"将指定的 64 位带符号整数的值转换为其等效的十进制数。\r\n","Объект, содержащий значение параметра ":"包含参数值的对象\r\n","-Klasse mit dem Namen einer Methode, die einen ":"具有方法名称的类，该方法具有\r\n","Gibt an, dass die SACL (System Access Control List, Systemzugriffssteuerungsliste) durch einen Standardmechanismus abgerufen wurde.Wird nur von Ressourcen-Managern festgelegt.":"表明 SACL（系统访问控制列表）是通过标准机制获得的。仅由资源管理器设置。\r\n","지정된 개체의 값을 단정밀도 부동 소수점 숫자로 변환합니다.":"将指定对象的值转换为单精度浮点数。\r\n","Bietet eine Auflistung von Methoden zum Belegen von nicht verwaltetem Speicher, zum Kopieren von nicht verwalteten Speicherblöcken und zum Konvertieren von verwalteten in nicht verwaltete Typen sowie sonstige Methoden, die bei der Interaktion mit nicht verwaltetem Code verwendet werden.":"提供一组用于分配非托管内存、复制非托管内存块、将托管类型转换为非托管类型的方法，以及与非托管代码交互时使用的其他方法。\r\n"," 앞에 오는 경우또는":" 如果它出现在或之前\r\n","Копирует данные из неуправляемого указателя памяти в управляемый массив чисел с плавающей запятой двойной точности.":"将数据从非托管内存指针复制到双精度浮点数的托管数组。\r\n","Преобразует объект в COM VARIANT.":"将对象转换为 COM VARIANT。\r\n","Преобразует массив элементов типа VARIANT модели COM в массив объектов. ":"将 COM VARIANT 元素数组转换为对象数组。\r\n","Возвращает интерфейс IUnknown из управляемого объекта.":"从托管对象返回 IUnknown 接口。\r\n"," заменяется строковым представлением соответствующего аргумента объекта.":"替换为相应对象参数的字符串表示形式。\r\n","Искомый ключ.":"所需的键。\r\n","Предоставляет текстовое описание для сборки.":"为程序集提供文本描述。\r\n","Konvertiert den Wert des angegebenen Objekts in eine 16-Bit-Ganzzahl mit Vorzeichen.":"将指定对象的值转换为 16 位有符号整数。\r\n"," не является распознаваемым форматом.-или-":" 不是可识别的格式。-或-\r\n",", который приводит к экспорту параметра как значения HRESULT в экспортированной библиотеке типов.":"，这会导致参数在导出的类型库中作为 HRESULT 值导出。\r\n","Показывает 64-разрядное целое число.":"显示 64 位整数。\r\n"," enthaltenen ":" 包括\r\n","При применении к методу указывает, что метод вызывается сразу после десериализации объекта в графе объекта.Порядок десериализации относительно других объектов на диаграмме является недетерминированным.":"当应用于方法时，指定在对象图中的对象被反序列化后立即调用该方法。反序列化相对于图中其他对象的顺序是不确定的。\r\n","가장 가까운 8비트 부호 없는 정수로 반올림된 ":"四舍五入到最接近的 8 位无符号整数\r\n","Набор перечислителей.":"一组枚举器。\r\n","Номер порта IP, используемый службой. ":"服务使用的 IP 端口号。\r\n","Eine 32-Bit-Ganzzahl mit Vorzeichen, die ":"一个 32 位有符号整数\r\n","[Поддерживается только в .NET Framework 4.5.1 и более поздних версиях] Возвращает размер неуправляемого типа в байтах. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 返回非托管类型的大小（以字节为单位）。\r\n","Отсоединяет обработчик событий от объекта модели COM.":"从 COM 对象分离事件处理程序。\r\n","Добавляет строковое представление указанного 64-разрядного целого числа со знаком к данному экземпляру.":"将指定的 64 位带符号整数的字符串表示形式添加到此实例。\r\n",", описывающее тип, описанный этими данными.":"描述此数据描述的类型的 。\r\n"," ist negativ.- oder -  Die Summe von ":" 是负数。- 或 - 的总和\r\n","Die Methode konnte nicht genügend Speicher für den systemeigenen Heap belegen.":"该方法无法为本机堆分配足够的内存。\r\n","[.NET Framework 4.5.1 이상 버전에서 지원됨] 관리되지 않는 메모리 블록의 데이터를 지정된 형식의 관리되는 개체로 마샬링합니다. ":"[在 .NET Framework 4.5.1 及更高版本中受支持] 将非托管内存块中的数据封送到指定类型的托管对象中。\r\n","Возвращает большее из двух 16-битовых целых чисел со знаком.":"返回两个 16 位有符号整数中较大的一个。\r\n"," auf 0 festgelegt.Weak-Verweise werden vor dem Ausführen des Finalizers auf 0 festgelegt. Selbst wenn der Finalizer das Objekt wieder zugänglich macht, ist der Weak-Verweis immer noch auf 0 festgelegt.":" 设置为 0。弱引用在运行终结器之前设置为 0。即使终结器使对象再次可访问，弱引用仍然设置为 0。\r\n","Die Anzahl der aus dem Streamobjekt zu lesenden Bytes. ":"要从流对象中读取的字节数。\r\n"," 중 더 큰 매개 변수입니다.":" 哪个参数大。\r\n","Байт, считанный из неуправляемой памяти.":"从非托管内存中读取的字节。\r\n","보고된 각 진행률 값에 대해 발생시킵니다.":"为每个报告的进度值触发。\r\n","Синоним для ":"的同义词\r\n","지정된 8비트 부호 없는 정수의 값을 해당하는 64비트 부호 없는 정수로 변환합니다.":"将指定的 8 位无符号整数的值转换为等效的 64 位无符号整数。\r\n","Gibt die kleinere von zwei 16-Bit-Ganzzahlen mit Vorzeichen zurück.":"返回两个 16 位有符号整数中较小的一个。\r\n","При применении к элементу типа указывает, что этот элемент не является частью контракта данных и не сериализуется.":"当应用于某个类型的元素时，表示该元素不是数据协定的一部分并且不可序列化。\r\n"," сохраняется при преобразовании объекта ":" 转换对象时保留\r\n","[Поддерживается только в .NET Framework 4.5.1 и более поздних версиях] Возвращает адрес элемента по указанному индексу внутри массива заданного типа. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 返回指定类型数组中指定索引处的元素地址。\r\n","Es true si el identificador está cerrado; en caso contrario, es false.":"如果句柄关闭则为真；否则，它是错误的。\r\n","Возвращает гиперболический косинус указанного угла.":"返回指定角度的双曲余弦值。\r\n",", или false, если параметр ":", 如果参数为 false\r\n","모든 환경 변수 이름과 해당 값을 포함하는 사전이 반환되고, 환경 변수를 찾을 수 없는 경우 빈 사전이 반환됩니다.":"返回一个包含所有环境变量名称及其值的字典，如果没有找到环境变量则返回一个空字典。\r\n","Die 32-Bit-Ganzzahl mit Vorzeichen, die die Anzahl von Prozessoren im aktuellen Computer angibt.Es ist kein Standardwert vorhanden.Wenn der aktuelle Computer mehrere Prozessorgruppen enthält, gibt diese Eigenschaft die Anzahl logischer Prozessoren zurück, die für die Common Language Runtime (CLR) verfügbar sind.":"指定当前计算机中处理器数量的 32 位有符号整数。没有默认值。如果当前计算机包含多个处理器集，则此属性返回用于公共语言运行库 (CLR) 的逻辑处理器数量可用的。\r\n","Добавляет к данному экземпляру строку, возвращаемую в результате обработки строки составного формата, содержащей ноль или более элементов формата.Каждый элемент формата заменяется строковым представлением соответствующего аргумента в массиве параметров с помощью указанного поставщика формата.":"将通过处理包含零个或多个格式元素的复合格式字符串返回的字符串附加到此实例。每个格式元素都使用指定的格式提供程序替换为选项数组中相应参数的字符串表示形式。\r\n","Динамический тип, который определяет тип объекта во время выполнения и маршалирует объект как объекта данного типа.Этот член является допустимым только для методов вызова неуправляемого кода.":"一种动态类型，它在运行时确定对象的类型并将该对象封送为该类型的对象。该成员仅对平台调用方法有效。\r\n","Gibt die Member-ID einer Variablen an.":"指定变量的成员ID。\r\n","Возвращает сведения о корневом каталоге для указанного пути.":"返回有关指定路径的根目录的信息。\r\n","10진수의 부호를 나타내는 값을 반환합니다.":"返回一个指示十进制数符号的值。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 8 位有符号整数的值转换为等效的 64 位无符号整数。\r\n","지정된 문자열의 첫째 문자를 유니코드 문자로 변환합니다.":"将指定字符串的第一个字符转换为 Unicode 字符。\r\n","Ein Typ, der über rein virtuelle Funktionen verfügt.":"一个拥有纯粹虚拟功能的人。\r\n"," меньше нуля, или ":" 小于零，或\r\n","-Klasse mit dem Objekt, das umschlossen wird.":"类与被包装的对象。\r\n","탄젠트를 적용했을 때 지정된 숫자가 나오는 각도를 반환합니다.":"返回切线给出指定数字的角度。\r\n","Возвращает сведения о псевдониме по умолчанию.":"返回有关默认别名的信息。\r\n","Возвращаемое 32-разрядное знаковое целое число. ":"返回的 32 位有符号整数。\r\n"," und gleich dem Wert der aktuellen Instanz ist, andernfalls false.":" 并且等于当前实例的值，否则为假。\r\n",".-или-Преобразование не поддерживается. ":".-or-转换不受支持。\r\n","Der ROT-Eintrag (Running Object Table) des geänderten Objekts. ":"已更改对象的 ROT（运行对象表）条目。\r\n","Ссылка на контекст привязки, используемый в данной операции. ":"对此操作中使用的绑定上下文的引用。\r\n","32비트 부호 있는 정수의 절대 값을 반환합니다.":"返回 32 位有符号整数的绝对值。\r\n","-Objekt zugeordnet ist, oder legt diese fest.":"-object 被分配或设置它。\r\n","Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.":"将指定基数中数字的字符串表示形式转换为等效的 8 位带符号整数。\r\n","Keine Steuerungsflags.":"没有控制标志。\r\n","Возвращает сведения о конфигурации сборки.":"返回程序集配置信息。\r\n","Ein verwalteter Wert- oder formatierter Verweistyp.Sie müssen das ":"托管值或格式化引用类型。您必须这样做\r\n","Указатель на первый элемент массива в стиле языка C.При маршалинге из управляемого кода в неуправляемый длина массива определяется исходя из длины управляемого массива.При маршалинге из неуправляемого кода в управляемый длина массива определяется исходя из значений полей ":"指向 C 样式数组第一个元素的指针。当从托管代码编组为非托管代码时，数组的长度由托管数组的长度确定。当从非托管代码编组时，数组的长度由以下确定字段值\r\n","-Parameter ist weder ein Delegat, noch ist er generisch.":"参数不是委托，也不是通用的。\r\n","-Parameter ist keine Schnittstelle.- oder -  Der Typ ist für COM nicht sichtbar.- oder - Der ":"- 参数不是接口。- 或 - 该类型对 COM 不可见。- 或 - 的\r\n"," плюс ":" 加\r\n","에 해당하는 8비트 부호 있는 정수이거나, ":"是一个 8 位有符号整数，等价于\r\n","Stellt eine verwaltete Definition der IAdviseSink-Schnittstelle bereit.":"提供 IAdviseSink 接口的托管定义。\r\n"," 값을 부정합니다.":" 값을부정합니다。\r\n","가장 가까운 32비트 부호 있는 정수로 반올림된 ":"四舍五入到最接近的 32 位有符号整数\r\n","Выполняет модульное деление числа, возведенного в степень другого числа.":"执行一个数的模除以另一个数的幂。\r\n","Расположение, с которого начинается считывание.":"读取开始的位置。\r\n"," для извлечения внутреннего целочисленного представления.":" 提取内部整数表示。\r\n",", используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":", 使用指定的区域性特定格式设置信息。\r\n","Безопасный дескриптор для упаковки дескриптор операционной системы. ":"将句柄包装到操作系统的安全句柄。\r\n","구조체 요소, 매개 변수, 프로세스 간 함수 반환 값을 전달하는 방법에 대한 필요한 정보가 들어 있습니다.":"它包含有关如何在进程之间传递结构元素、参数和函数返回值的必要信息。\r\n","Возвращает меньшее из двух чисел одинарной точности с плавающей запятой.":"返回两个单精度浮点数中较小的一个。\r\n","-Klasse mit der angegebenen Revisionsebene.":"具有指定修订级别的类。\r\n","[i]에서 지정한 형식 설명으로 인덱스를 만드는 MEMBERID이며null일 수 없습니다.":"要使用 [i] 中指定的类型描述进行索引的 MEMBERID；不能为空。\r\n","8-разрядное целое число без знака, которое эквивалентно значению ":"等于值的 8 位无符号整数\r\n",", wobei (":", 由此 (\r\n","Определяет неявное преобразование 64-битового целого числа со знаком в комплексное число.":"定义从 64 位带符号整数到复数的隐式转换。\r\n","정적 함수와 데이터(예: DLL)만 포함할 수 있는 모듈입니다.":"只能包含静态函数和数据（例如 DLL）的模块。\r\n"," für den Zugriff zu entfernen.":" 删除访问。\r\n","현재 모니커의 끝에 추가할 모니커의 IMoniker 인터페이스에 대한 참조입니다. ":"对要追加到当前名字对象末尾的名字对象的 IMoniker 接口的引用。\r\n","복사할 유니코드 문자 수입니다.":"要复制的 Unicode 字符数。\r\n","Переменная возвращает объект, являющийся источником событий.":"该变量返回一个对象，该对象是事件的来源。\r\n","모든 사용자 지정 데이터 항목을 보유한 CUSTDATA의 포인터입니다. ":"指向包含所有自定义数据项的 CUSTDATA 的指针。\r\n","Gibt die kleinere von zwei 64-Bit-Ganzzahlen mit Vorzeichen zurück.":"返回两个 64 位有符号整数中较小的一个。\r\n"," Не может быть присвоено свойству ":" 不能分配给属性\r\n"," успешно удален, в противном случае — значение false.  Этот метод также возвращает значение false, если параметр ":" 删除成功，否则为假。如果参数\r\n","Возвращает хэш-код для объекта ":"返回对象的哈希码\r\n"," ist keine Zahl in einem gültigen Format.":" 不是有效格式的数字。\r\n","Произвольное имя каталога или файла.":"任意目录或文件名。\r\n","Число, логарифм которого требуется найти.":"要求其对数的数字。\r\n","Создает новый перечислитель с тем же состоянием перечисления, что и текущий перечислитель.":"创建与当前枚举器具有相同枚举状态的新枚举器。\r\n","-Enumeration an.":"- 枚举。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 32 位带符号整数的值转换为等效的 32 位无符号整数。\r\n"," muss auch festgelegt werden.":" 还必须指定。\r\n","Es gibt nur eine Instanz der Variable.":"变量只有一个实例。\r\n","Тип объекта, в который копируются данные.Это должен быть форматированный класс или структура.":"数据复制到的对象类型。这必须是格式化的类或结构。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.":"将指定的单精度浮点数的值转换为等效的 8 位无符号整数。\r\n"," 개체의 값이 2의 거듭제곱이면 true이고, 그렇지 않으면 false입니다.":" 개체의 값이 2의 거듭제곱이면 true이고, 그렇지 않으면 false입니다.\r\n","Пространство имен типа, разрешенное средой CLR.":"Пространство имен типа, разрешенное средой CLR。\r\n","관리되지 않는 메모리의 지정된 오프셋 위치에서 읽은 16비트 부호 있는 정수입니다.":"从指定偏移量处的非托管内存中读取的 16 位有符号整数。\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.":"使用指定的区域性特定格式设置信息，将指定的 16 位无符号整数的值转换为其等效的字符串表示形式。\r\n","Gibt den Parameterindex des nicht verwalteten iid_is-Attributs an, das von COM verwendet wird.":"指定 COM 使用的非托管 iid_is 属性的参数索引。\r\n","Gibt den Typ der Klassenschnittstelle an, die für eine für COM verfügbar gemachte Klasse generiert werden soll (sofern eine Schnittstelle erstellt wird).":"Gibt den Typ der Klassenschnittstelle an, die für eine für COM verfügbar gemachte Klasse generiert werden soll (sofern eine Schnittstelle erstellt wird)。\r\n","Преобразует указанное число двойной точности с плавающей запятой в 64-битовое целое число со знаком.":"Преобразует указанное число двойной точности с плавающей запятой в 64-битовое целое число со знаком。\r\n","이 메서드는 반환될 때 반환된 인터페이스에 대한 참조를 포함합니다.":"当此方法返回时，它包含对返回接口的引用。\r\n","형식 설명에 대한 멤버 식별자입니다. ":"类型描述的成员标识符。\r\n","검색할 이름입니다. ":"要搜索的名称。\r\n","Gibt einen Wert zurück, der angibt, ob zwei komplexe Zahlen ungleich sind.":"返回一个值，该值指示两个复数是否不相等。\r\n","ROT(실행 개체 테이블)에서 이 모니커를 검색하고 기록된 변경 시간이 있으면 이를 보고합니다.":"它在运行对象表 (ROT) 中搜索此名字对象并报告记录的更改时间（如果有）。\r\n","Описание сборки, на которую сделана ссылка. ":"引用的程序集的说明。\r\n","Возвращает значение по умолчанию ":"返回默认值\r\n","Копирует данные из одномерного управляемого массива 8-битных целых чисел без знака в указатель неуправляемой памяти.":"将数据从 8 位无符号整数的一维托管数组复制到非托管内存指针。\r\n","Задает тип среды хранения.Процедура маршалинга и процедура распаковки используют это значение, чтобы определить, какой элемент объединения использовался.Это значение должно быть одним из элементов перечисления ":"指定存储介质类型。编组过程和解组过程使用此值来确定使用了哪个联合成员。此值必须是枚举元素之一\r\n","Ein HRESULT mit dem Wert S_OK.":"值为 S_OK 的 HRESULT。\r\n","Получает пользовательские данные.":"获取用户数据。\r\n","Тип отформатированного класса.Предоставляет сведения распределения, необходимые для удаления буфера из параметра ":"格式化类的类型。提供从参数中移除缓冲区所需的分配信息\r\n",", das Handle wird jedoch nicht auf 0 festgelegt, wenn das Objekt während der Finalisierung wieder zugänglich gemacht wird.":"，但是当对象在终结期间再次可访问时，句柄不会设置为 0。\r\n","[Поддерживается только в .NET Framework 4.5.1 и более поздних версиях] Освобождает все вложенные структуры указанного типа, на которые указывает заданный блок неуправляемой памяти. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 释放由指定的非托管内存块指向的指定类型的所有嵌套结构。\r\n"," больше, чем длина текущего экземпляра. ":" 大于当前实例的长度。\r\n","-Objekt, aus dem das neue ":"- 新的对象\r\n","Массив, в который копируются символы.":"字符被复制到的数组。\r\n","Die Zugriffsmaske für diese Regel.":"此规则的访问掩码。\r\n","Возвращает указанное значение 64-битового целого числа без знака в виде массива байтов.":"将指定的 64 位无符号整数值作为字节数组返回。\r\n","Указывает, что элементы стиля, такие как начальные или конечные пробел, тысячи сепараторы или десятичного разделителя, не могут присутствовать в анализируемой строки.Анализируемая строка должна состоять только из целых десятичных чисел.":"指定样式元素，如前导或尾随空格、千位分隔符或小数点分隔符，不能出现在已分析的字符串中。已分析的字符串必须仅包含整数十进制数。\r\n","IEnumVARIANT 인터페이스의 정의를 관리합니다.":"管理 IEnumVARIANT 接口的定义。\r\n","Die zu kopierende Anzahl von Bytes aus der Eingabezeichenfolge.":"要从输入字符串中复制的字节数。\r\n","메서드에 적용될 때 메서드는 개체 그래프의 개체가 serialization 중 호출되도록 지정합니다.그래프에 있는 다른 개체에 상대적인 serialization의 순서는 명확하지 않습니다.":"当应用于方法时，该方法指定对象图中的对象在序列化期间被调用。序列化相对于图中其他对象的顺序不明确。\r\n"," 값이 다른 ":" 不同的价值\r\n",".Este método no acepta parámetros ":".此方法不接受参数 \r\n","Получает ключ текущего элемента словаря.":"获取字典当前元素的键。\r\n","이 null이면 메서드가 null 문자열을 반환합니다.":"如果为空，则该方法返回空字符串。\r\n","Инициализирует новый экземпляр класса SafeArrayTypeMismatchException, используя заданное сообщение.":"使用指定消息初始化 SafeArrayTypeMismatchException 类的新实例。\r\n","변수의 종류를 정의합니다.":"定义变量的类型。\r\n","지정된 64비트 부호 있는 정수의 값을 해당하는 32비트 부호 있는 정수로 변환합니다.":"将指定的 64 位带符号整数的值转换为等效的 32 位带符号整数。\r\n"," 제네릭 형식 매개 변수로 지정된 형식의 크기(바이트 단위)입니다. ":" 泛型类型参数指定的类型的大小（以字节为单位）。\r\n"," genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).":"恰好在两个整数之间，则返回偶数（即 4.5 转换为 4，5.5 转换为 6）。\r\n","지정된 비트 수만큼 왼쪽으로 이동한 값입니다.":"将值左移指定的位数。\r\n","Преобразует значение заданного 8-разрядного знакового целого числа в эквивалентное число с плавающей запятой двойной точности.":"将指定的 8 位带符号整数的值转换为其等效的双精度浮点数。\r\n","Gibt die in einer METHODDATA-Struktur beschriebene Aufrufkonvention einer Methode an.":"指定方法的调用约定，在 METHODDATA 结构中描述。\r\n","Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 16-битовое целое число со знаком.":"将指定的 32 位带符号整数的值转换为等效的 16 位带符号整数。\r\n","Bei erfolgreicher Rückgabe ist der Offset des Suchzeigers vom Anfang des Streams enthalten. ":"如果成功，它包括搜索指针距流开头的偏移量。\r\n","Fordert an, dass das Objekt nicht auf die Daten- oder Ansichtsänderung wartet, bevor es ":"请求对象在它之前不等待数据或视图更改\r\n","Initialisiert eine neue Instanz der AccessRule’1-Klasse unter Verwendung der angegebenen Werte.":"使用指定的值初始化 AccessRule'1 类的新实例。\r\n","Извлекает структуру VARDESC, описывающую указанную переменную.":"检索描述指定变量的 VARDESC 结构。\r\n","Die Identität, für die die Zugriffsregel gilt.  Dabei muss es sich um ein Objekt handeln, das in einen ":"访问规则适用的身份。这必须是包含在\r\n","COM 개체에서 지정된 인터페이스에 대한 포인터를 요청합니다.":"从 COM 对象请求指向指定接口的指针。\r\n","변경 알림을 받을 ":"收到更改通知\r\n","float 값을 나타냅니다.":"表示一个浮点值。\r\n","Ссылка на идентификатор IID исходящего интерфейса, для которого запрашивается точка подключения. ":"对为其请求连接点的传出接口的 IID 的引用。\r\n"," 필드는 문자열 형식 사이에서 구별을 지을 필요가 있는 경우 배열 요소의 ":" 当需要区分字符串类型时，字段是数组的元素。\r\n","Второе число для умножения.":"第二个要相乘的数字。\r\n","Инициализирует новый экземпляр класса ComSourceInterfacesAttribute с типами, используемыми в качестве интерфейсов-источников.":"使用用作源接口的类型初始化 ComSourceInterfacesAttribute 类的新实例。\r\n","Добавляемая строка. ":"要添加的行。\r\n","지정된 유니코드 문자의 값을 해당하는 8비트 부호 있는 정수로 변환합니다.":"将指定 Unicode 字符的值转换为等效的 8 位带符号整数。\r\n","Die DACL für das neue ":"新的DACL\r\n","Прибавляемое логическое значение. ":"要添加的布尔值。\r\n","이 메서드는 반환될 때 상대 모니커에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含对相关名字对象的引用。此参数未初始化传递。\r\n","Предоставляет клиентам доступ к текущему объекту вместо передачи объекта адаптера настраиваемым модулем упаковки и передачи.":"允许客户端访问当前对象，而不是通过自定义包装器和发送者传递适配器对象。\r\n","Складывает два комплексных числа и возвращает результат.":"将两个复数相加并返回结果。\r\n","모니커의 내부 상태를 사용하여 32비트 정수를 계산합니다.":"使用名字对象的内部状态计算 32 位整数。\r\n","Eine 32-Bit-Ganzzahl mit Vorzeichen, die den Hashcode für die Instanz darstellt.":"一个 32 位有符号整数，表示实例的哈希码。\r\n","변수, 상수 또는 데이터 멤버를 설명합니다.":"描述变量、常量或数据成员。\r\n","-Wert größer als der oder gleich dem Wert einer 64-Bit-Ganzzahl mit Vorzeichen ist.":"值大于或等于 64 位有符号整数值。\r\n","ITypeInfo2 인터페이스의 관리되는 정의를 제공합니다.":"提供 ITypeInfo2 接口的托管定义。\r\n","64-битовое целое число без знака, образованное восемью байтами, начинающимися с ":"由 8 个字节组成的 64 位无符号整数\r\n"," равно null или задано в неверном формате.Этот параметр передается неинициализированным.":" 为空或格式不正确。此参数未初始化传递。\r\n",") 사분면 1, 0에서에서 < θ < π/2입니다.에 대 한 (":") 在象限 1, 0 < θ < π/2。对于 (\r\n","Делит указанное значение ":"除指定值\r\n","Die diesem ACE (Access Control Entry, Zugriffssteuerungseintrag) zugeordneten Überwachungsinformationen.":"与此访问控制条目 (ACE) 关联的跟踪信息。\r\n","Это поле зарезервировано, его значение должно быть равно null.":"该字段是保留字段，必须为空。\r\n","Имя файла или значение null, если для этого экземпляра имя файла не было передано в конструктор.":"文件名，如果没有文件名传递给此实例的构造函数，则为 null。\r\n","보다 크거나 같은 최소 정수 값입니다.이 메서드는 정수 계열 형식이 아니라 ":"大于或等于的最小整数值。此方法不是整数类型。\r\n","프로세스 간에 전달되는 값에 대한 포인터를 나타냅니다.":"表示指向在进程之间传递的值的指针。\r\n","Gibt die COM DISPID (Dispatch Identifier) einer Methode, eines Felds oder einer Eigenschaft an.":"指定方法、字段或属性的 COM DISPID（调度标识符）。\r\n","Преобразует заданное строковое представление числа в эквивалентное 8-битовое целое число со знаком, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"给定指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的 8 位带符号整数。\r\n","Gibt die Länge der opaken Daten an, die diesem ":"指定不透明数据的长度，这\r\n","Значение, определяющее точку, в которой должен быть выполнен сбор.":"一个值，指定应执行收集的时间点。\r\n","serialization 또는 deserialization의 순서에 해당하는 정수입니다.":"与序列化或反序列化顺序对应的整数。\r\n","Управляемый объект, содержащий данные для маршалинга.Этот объект должен представлять собой структуру или экземпляр форматированного класса.":"包含要封送的数据的托管对象。此对象必须是结构或格式化类的实例。\r\n","Gibt eine auf null endende breite Zeichenfolge an.":"指定以 null 结尾的宽字符串。\r\n",", d. h, die Zahl, die nach dem Verwerfen der Dezimalstellen übrig bleibt.":"， IE。 h，舍去小数后剩下的数。\r\n","Показывает, что интерфейс является производным от IDispatch, прямо или косвенно.Этот флаг вычисляется: для него не существует языка описания объекта.":"指示接口直接或间接派生自 IDispatch。评估此标志：没有对象定义语言。\r\n","Вручную уменьшает счетчик ссылок для экземпляра ":"Вручную уменьшает счетчик ссылок для экземпляра\r\n","Ruft den voll gekennzeichneten Namen der Quellschnittstelle des Ereignisses ab.":"获取事件源接口的完全限定名称。\r\n","의 VTBL에 있는 오프셋을 지정합니다.":"指定 VTBL 中的偏移量\r\n",", auf die nächste 16-Bit-Ganzzahl mit Vorzeichen gerundet.Wenn ":", 四舍五入到最接近的 16 位有符号整数。如果\r\n","Gibt den Elementtyp von ":"返回元素类型\r\n","Возвращает ключ из пары \"ключ-значение\".":"从键/值对中返回键。\r\n"," usando i valori di una matrice di byte.":" usando i valori di una 矩阵 di 字节。\r\n","Объединение всех методов, смещение которых равно нулю.":"偏移量为零的所有方法的联合。\r\n","Число ссылок ":"链接数\r\n","Konvertiert ein codiertes Bytearray, das für die Übertragung in eine URL in ein codiertes Bytearray  codiert wurde.":"将已编码以在 URL 中传输的编码字节数组转换为编码字节数组。\r\n","URL로 인코딩할 텍스트입니다.":"要进行 URL 编码的文本。\r\n","-Objekt ist, andernfalls false.":"-object 否则为假。\r\n","Dem neuen ACE zugeordnete opake Daten.Dies ist nur für Rückruf-ACE-Typen zulässig.Die Länge dieses Arrays darf nicht größer sein als der Rückgabewert der ":"与新 ACE 关联的不透明数据。这仅适用于回调 ACE 类型。此数组的长度不能大于\r\n","Показывает денежное значение.":"显示货币价值。\r\n","-Objekt zugeordnet sind.Es wird empfohlen, dass die Werte der ":"-object. 建议的值\r\n","Инициализирует новый экземпляр класса MarshalDirectiveException со свойствами по умолчанию.":"使用默认属性初始化 MarshalDirectiveException 类的新实例。\r\n"," genau in der Mitte zwischen zwei Zahlen liegt, von denen eine gerade und die andere ungerade ist, bestimmt der ":" 恰好在两个数字之间，一个是偶数，另一个是奇数，决定了\r\n","Kombiniert ein Array von Zeichenfolgen zu einem Pfad.":"将字符串数组组合成路径。\r\n","-Struktur unter Verwendung eines Gleitkommawerts mit doppelter Genauigkeit.":"-Struktur unter Verwendung eines Gleitkommawerts mit doppelter Genauigkeit。\r\n","이 메서드는 반환될 때 마지막으로 변경한 시간을 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它将包含最后更改的时间。此参数未初始化传递。\r\n","Получает общее затраченное время, измеренное текущим экземпляром.":"获取当前实例测量的总运行时间。\r\n","Ein Verweis auf die IBindCtx-Schnittstelle für das Bindungskontextobjekt, das in diesem Bindungsvorgang verwendet wird. ":"对此绑定操作中使用的绑定上下文对象的 IBindCtx 接口的引用。\r\n","Gibt Typen an, die vom ":"指定日期类型\r\n","Die Abschnitte (Zugriffsregeln, Überwachungsregeln, Besitzer, primäre Gruppe) der festzulegenden Sicherheitsbeschreibung.":"要设置的安全描述符的部分（访问规则、审核规则、所有者、主要组）。\r\n",", если ни один из объектов не удовлетворил условиям ожидания и истек интервал времени, равный ":", 如果没有对象满足等待条件并且时间间隔等于\r\n","크기가 반환되는 형식입니다. ":"返回大小的格式。\r\n"," указанным сообщением.":" 指定的消息。\r\n","건너뛴 항목 수가 ":"跳过的项目数\r\n","Значение true, если ключ ":"如果键为真\r\n"," несколькими потоками все потоки могут запускать метод инициализации (или конструктор по умолчанию, если метод инициализации отсутствует).Поток, который первым завершает инициализацию, задает значение экземпляра ":" 多线程，所有线程都可以运行初始化方法（如果没有初始化方法，则运行默认构造函数）。完成初始化的线程首先设置实例值\r\n","Der Wert, der in eine 64-Bit-Ganzzahl mit Vorzeichen konvertiert werden soll.":"要转换为 64 位有符号整数的值。\r\n",".НульТекущий экземпляр равен значению параметра ":".nu​​ll当前实例等于参数的值\r\n","의 소수 자릿수가 ":"中的小数位数\r\n","-Typs liegt.":"型谎言。\r\n","Объект для удаления регистрации с целью освобождения. ":"要删除注册以释放的对象。\r\n","Предоставляет типы дескрипторов, которые могут быть выделены классом ":"提供类可以分配的描述符类型\r\n","Элемент в коллекции по указанному индексу в списке, доступном только для чтения.":"集合中位于只读列表中指定索引处的元素。\r\n","Определяет свойства переменной.":"定义变量的属性。\r\n"," ist keine gültige Formatzeichenfolge.":" 不是有效的格式字符串。\r\n","Die Größe, die die Entfernung vom Ursprung (dem Schnittpunkt der x-Achse mit der y-Achse) zur Zahl ist.":"数量，即原点（x轴和y轴的交点）到数字的距离。\r\n","-Klasse mit dem Objekt, das das Decimal enthält, das umfasst und als Typ VT_CY gemarshallt werden soll.":"包含对象的类，该对象包含要跨度和封送为 VT_CY 类型的 Decimal。\r\n","Значение S_OK, если параметр ":"S_OK 值如果参数\r\n","Wenn InvokeDISP_E_TYPEMISMATCH zurückgibt, gibt ":"如果 InvokeDISP_E_TYPEMISMATCH 返回，返回\r\n"," 핸들입니다.":" 把手。\r\n","Если часовой пояс не указан в строке разбора, подразумевается, что используется локальное время. ":"如果在解析字符串中未指定时区，则假定使用本地时间。\r\n","Ein systemeigener Typ, der mit einem ":"与一个关联的本机类型\r\n"," на -1.":" 由-1。\r\n","-Wert um 1.":"值加 1。\r\n","-Instanz mit einer reellen Zahl gleich 0 und einer imaginären Zahl gleich 0 zurück.":"实数等于0和虚数等于0的实例。\r\n","Gibt den Typ zurück, dem die angegebene Klassen-ID (CLSID) zugeordnet ist. ":"返回与指定类标识符 (CLSID) 关联的类型。\r\n","Gibt an, dass der ACE nicht an untergeordnete Objekte weitergegeben wird.":"指定 ACE 不传播到子对象。\r\n",".Der mit den ":".那个与\r\n"," ungleich null ist, andernfalls false.":" ungleich null ist，andernfalls false。\r\n","Показывает, что интерфейс предоставляется модели COM как интерфейс, унаследованный от IUnknown и позволяющий выполнять только раннее связывание.":"指示该接口作为从 IUnknown 继承的接口公开给 COM，并且只允许早期绑定。\r\n","CDECL(C 선언) 호출 규칙을 메서드에 사용해야 함을 나타냅니다. ":"指示该方法应使用 CDECL（C 声明）调用约定。\r\n",", содержащий класс, реализующий методы интерфейса события. ":"包含实现事件接口方法的类的 。\r\n","Gibt den absoluten Wert einer Gleitkommazahl mit einfacher Genauigkeit zurück.":"返回单精度浮点数的绝对值。\r\n"," keine Informationen über die Erweiterung enthält, gibt ":" 不包含有关扩展名的任何信息，那里\r\n","Gibt an, dass der ACE nur an untergeordnete Objekte weitergegeben wird.Dies schließt untergeordnete Container- und Endobjekte ein.":"指定 ACE 仅传播到子对象。这包括子容器和叶对象。\r\n","Cuando se invalida en una clase derivada, ejecuta el código necesario para liberar el identificador.":"在派生类中重写时，执行释放句柄所需的代码。\r\n","-Objekt darstellt. ":"-对象表示。\r\n","-Enumeration, kombiniert mit einem logischen Operator OR.":"-枚举与逻辑或运算符相结合。\r\n","Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl mit Vorzeichen kleiner als ein ":"返回一个值，该值指示 64 位有符号整数是否小于\r\n","Определяет соглашение о вызове, используемое методом, описанным в структуре METHODDATA.":"指定 METHODDATA 结构中描述的方法使用的调用约定。\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.":"将数字的指定字符串表示形式转换为等效的 8 位无符号整数。\r\n","다른 ":"不同的\r\n","Показывает, что BLOB-объект содержит объект.":"指示 blob 包含一个对象。\r\n","Das Objekt, das als steuernde IUnknown fungiert. ":"充当控制 IUnknown 的对象。\r\n","의 기본값을 가져옵니다.":"获取默认值。\r\n"," 매개 변수가 인터페이스가 아닌 경우또는 COM에 해당 형식이 표시되지 않는 경우또는":" 参数不是接口，或者 COM 看不到它的类型，或者\r\n","를 반환합니다.디코딩된 문자열입니다.":"返回解码后的字符串。\r\n","지정된 64비트 부호 없는 정수 값을 해당하는 문자열 표현으로 변환합니다.":"将指定的 64 位无符号整数值转换为其等效的字符串表示形式。\r\n"," на дескриптор, для которого необходимо выполнить преобразование. ":" 到要转换的句柄。\r\n","-Klasse aus einer Zeichenfolge, einem ":"来自字符串的类，a\r\n","Преобразует значение заданного 32-битового целого числа со знаком в эквивалентный символ Юникода.":"将指定的 32 位带符号整数的值转换为其等效的 Unicode 字符。\r\n","После завершения метода содержит объект ":"方法完成后，包含对象\r\n","При возвращении данного метода содержит адрес указателя на оканчивающуюся нулем строку, содержащую путь для текущего файла или используемый по умолчанию запрос имени файла (например, *.txt).Этот параметр передается без инициализации.":"当此方法返回时，包含指向包含当前文件路径或默认查询文件名（例如，*.txt）的空终止字符串的指针的地址。此参数无需初始化即可传递。\r\n","Ruft einen Wert ab, der angibt, ob diese Regel explizit festgelegt oder von einem übergeordneten Containerobjekt geerbt wird.":"获取一个值，该值指示此规则是显式设置的还是从父容器对象继承的。\r\n","Gibt den Hyperbelsinus des angegebenen Winkels zurück.":"返回指定角度的双曲正弦值。\r\n","가 0보다 작은 경우 0 ":"0 如果小于 0\r\n","의 값에 해당하는 날짜와 시간이거나, ":"是对应于值的日期和时间\r\n","1601년 1월 1일 이후 경과한 100나노초 간격의 수를 나타냅니다.이 구조체는 64비트 값입니다.":"表示自 1601 年 1 月 1 日以来经过的 100 纳秒间隔数。此结构是一个 64 位值。\r\n","Eine 64-Bit-Ganzzahl mit Vorzeichen, deren Wert ":"Eine 64-Bit-Ganzzahl mit Vorzeichen, deren Wert\r\n","Código hash para esta instancia.":"此实例的哈希代码。\r\n","-Klasse mit dem Namen der DLL, die die zu importierende Methode enthält.":"类与包含要导入的方法的 DLL 的名称。\r\n"," меньше 0.-или- ":" 小于 0.- 或 -\r\n","렌더링 상세 수준을 나타내는 ":"指示渲染细节级别。\r\n"," или значение null, если переменная среды не найдена.":" 如果未找到环境变量，则返回 null。\r\n","value에 해당하는 유니코드 문자이거나, ":"值对应的 Unicode 字符，或\r\n","만들 개체의 형식입니다.이 개체는 서식이 지정된 클래스나 구조체를 나타내야 합니다.":"要创建的对象的类型。此对象必须表示格式化的类或结构。\r\n","-Objekts in den Wert einer 32-Bit-Ganzzahl mit Vorzeichen.":"对象为 32 位有符号整数的值。\r\n","Тип преобразуемого делегата. ":"正在转换的委托的类型。\r\n","Длина этого экземпляра.":"此实例的长度。\r\n","Единым блоком выполняет поиск указанного ключа в таблице и возвращает соответствующее значение.Если ключ в таблице не существует, метод вызывает метод обратного вызова для создания значения, связанного с заданным ключом.":"在单个块中，它在表中查找指定的键并返回相应的值。如果该键在表中不存在，则该方法调用回调方法来创建与指定键关联的值。\r\n"," 매개 변수의 곱입니다.":" 매개변수의곱입니다。\r\n","현재 인스턴스가 측정한 총 경과 시간을 가져옵니다.":"获取当前实例测量的总运行时间。\r\n","Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное число с плавающей запятой одиночной точности.":"将指定的 16 位带符号整数的值转换为其等效的单精度浮点数。\r\n","Возвращает или задает имя элемента данных. ":"获取或设置数据元素的名称。\r\n",", как показано в таблице в разделе примечаний.":"，如注释部分的表格所示。\r\n","Переменная является полем или элементом типа.Она существует в фиксированном смещении в каждом экземпляре типа.":"变量是类型的一个字段或成员。它在该类型的每个实例中都以固定的偏移量存在。\r\n","Ruft den Typ ab, der bei der Serialisierung oder Deserialisierung vom ":"获取序列化或反序列化时使用的类型\r\n","Возвращает путь к временной папке текущего пользователя.":"返回当前用户临时文件夹的路径。\r\n","true, если объект, на который ссылается текущий объект ":"如果当前对象引用的对象为真\r\n","-Objekte nicht identisch sind, andernfalls false.":"-对象不相同，否则为假。\r\n","Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 64-битовое целое число без знака.":"将指定的双精度浮点数的值转换为其等效的 64 位无符号整数。\r\n","Массив объектов, соответствующий элементу ":"元素对应的对象数组\r\n"," слабой или строгой, а также управляет доступом к объекту, используя соответствующую запись в таблице ROT. ":" 弱或强，并使用 ROT 表中的适当条目控制对对象的访问。\r\n","Число одинарной точности с плавающей запятой, образованное четырьмя байтами, начинающимися с ":"由四个字节组成的单精度浮点数\r\n",", если деструктор отсутствует.":"如果析构函数丢失。\r\n","원본 coclass의 클래스 식별자를 사용하여 ":"使用原始coclass的类标识符 \r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 64 位带符号整数的值转换为等效的 32 位无符号整数。\r\n","Число, логарифм которого требуется найти. ":"要求其对数的数字。\r\n","Определяет неявное преобразование числа с плавающей запятой двойной точности в комплексное число.":"指定将双精度浮点数隐式转换为复数。\r\n","의 자연(밑 e) 로그입니다.":"是自然（以 e 为底）的对数\r\n","Значение true, если в доступном только для чтения словаре содержится элемент с указанным ключом; в противном случае — значение false.":"如果只读字典包含具有指定键的元素，则为真；否则为真。否则，假的。\r\n","Windows 응용 프로그램 이벤트 로그에 메시지를 쓴 후 프로세스를 즉시 종료한 다음 해당 메시지와 예외 정보를 Microsoft로 보내는 오류 보고에 포함시킵니다.":"将消息写入 Windows 应用程序事件日志后，它会立即终止进程，并将消息和异常信息包含在发送给 Microsoft 的错误报告中。\r\n","Завершает процесс сразу после записи сообщения в журнал событий приложений Windows, после чего включает сообщение и сведения об исключении в отчет об ошибках, отправляемый в корпорацию Майкрософт.":"在将消息写入 Windows 应用程序事件日志后立即结束进程，然后将消息和异常信息包含在发送给 Microsoft 的错误报告中。\r\n","가 null이면 0입니다.":"0 如果为空。\r\n","Gibt an, dass ein Speicher ein Objekt enthält.":"指示商店包含对象。\r\n","지정된 32비트 부호 없는 정수의 값을 해당하는 16비트 부호 있는 정수로 변환합니다.":"将指定的 32 位无符号整数的值转换为等效的 16 位有符号整数。\r\n","Объект, в который копируются данные.Он должен представлять собой экземпляр форматированного класса.":"数据复制到的对象。它必须是格式化类的实例。\r\n","Stellt ein fehlendes ":"人间的故事\r\n","Возвращает полное имя текущего исключения и, возможно, сообщение об ошибке, имя внутреннего исключения и трассировку стека.":"返回当前异常的全名和可选的错误消息、内部异常的名称和堆栈跟踪。\r\n","-Klasse.Sie können die ":"- 类。你可以使用\r\n"," из другого и возвращает результат.":" 从另一个并返回结果。\r\n","수집된 핸들의 수입니다.":"收集的句柄的数量。\r\n"," 속성에 의해 만들어진 URI가 잘못된 경우 ":" 如果属性创建的 URI 无效\r\n"," stellt eine Zahl dar, die außerhalb des Bereichs von ":" 表示超出范围的数字\r\n",", но он позволяет работать с адресом закрепленного объекта.Это не позволяет сборщику мусора переместить объект, в результате эффективность сборщика мусора снижается.Метод ":", 但它允许您使用固定对象的地址。这会阻止垃圾收集器移动对象，从而降低垃圾收集器的效率。\r\n","Das Kennwort des Benutzers, der auf den URI zugreift.":"访问 URI 的用户的密码。\r\n","Gibt den Pfad des temporären Ordners des aktuellen Benutzers zurück.":"返回当前用户临时文件夹的路径。\r\n","Определяет описание типа, к которому выполнена привязка.":"指定对其进行绑定的类型的描述。\r\n","Всегда имеет значение false, поскольку исключения с возможностью восстановления не реализованы.":"始终为 false，因为未实现可恢复的异常。\r\n","Представляет имя версии платформы .NET Framework.":"表示 .NET Framework 的版本名称。\r\n"," показывает только первый из них.Этот параметр передается без инициализации.":" 只显示第一个，这个参数没有初始化就传过去了。\r\n","-Parameter in der durch Plattformaufrufe deklarierten angegebenen Klasse. ":"- 平台调用声明的指定类中的参数。\r\n","Получает открытый ключ для строгого имени, используемого для подписывания сборки.":"获取用于对程序集进行签名的强名称的公钥。\r\n","Ein Verweis auf eine Struktur, die ein Array von Argumenten und ein Array von DISPIDs für benannte Argumente enthält und die Anzahl der Elemente in jedem Array zählt. ":"对结构的引用，该结构包含参数数组和命名参数的 DISPID 数组，并计算每个数组中的元素数。\r\n","현재 인스턴스의 크기입니다.":"当前实例的大小。\r\n","비관리 코드에서 지정된 개체의 크기입니다.":"非托管代码中指定对象的大小。\r\n","함수는 static 주소로 액세스되고 암시적인 this 포인터를 사용합니다.":"在静态地址访问函数并使用隐式 this 指针。\r\n","Преобразует значение заданного 32-разрядного целого числа без знака в эквивалентное десятичное число.":"将指定的 32 位无符号整数的值转换为其等效的十进制数。\r\n","Дескриптор ожидания ожидания безопасный дескриптор, который упаковывает исходной операционной системой. ":"Десриптор ожидания ожидания безопасный 描述符，который уPAковывает исходной операционной системой。\r\n","Verweigert einem bestimmten durch ein ":"拒绝给一个\r\n","0과 같은 실수와 0과 같은 허수를 포함하는 새 ":"包含等于 0 的实数和等于 0 的虚数的新数\r\n","Описывает тип члена COM.":"描述 COM 成员类型。\r\n","Возвращает квадратный корень из указанного комплексного числа.":"返回指定复数的平方根。\r\n"," 매개 변수가 인터페이스가 아닌 경우또는 COM에 해당 형식이 표시되지 않는 경우 또는":" 如果参数不是接口，或者 COM 看不到它的类型，或者\r\n","Значение true, если текущий домен приложения выгружается или среда CLR завершает работу; в противном случае — значение false..":"如果正在卸载当前应用程序域或正在关闭公共语言运行库，则为 true；否则为真。否则，该值为 false..\r\n","Windows 런타임 인터페이스 포인터입니다.":"Windows 运行时接口指针。\r\n"," zu registrieren ist. ":" 是要注册的。\r\n","속성 함수의 형식을 지정합니다.":"指定属性函数的类型。\r\n","Der dem neuen ACE zugeordnete ":"与新 ACE 关联的那个\r\n","Die 32-Bit-Ganzzahl mit Vorzeichen, die am angegebenen Offset aus dem nicht verwalteten Arbeitsspeicher gelesen wurde.":"从指定偏移量处的非托管内存中读取的 32 位带符号整数。\r\n","Возвращает или задает номер порта URI.":"获取或设置 URI 的端口号。\r\n","Die Länge für ":"长度为\r\n","이 형식은 허가되었습니다.":"此格式已获得许可。\r\n","Исключение для преобразования в код ошибки. ":"要转换为错误代码的异常。\r\n","반환 값의 기수로서 2, 8, 10 또는 16이어야 합니다. ":"返回值的基数，必须为 2、8、10 或 16。\r\n","Konvertiert einen nicht verwalteten Funktionszeiger in einen Delegaten.":"将非托管函数指针转换为委托。\r\n","Stellt die verwaltete Definition der IStream-Schnittstelle mit ISequentialStream-Funktionalität bereit.":"提供具有 ISequentialStream 功能的 IStream 接口的托管定义。\r\n","ITypeInfo 포인터를 나타내는 개체입니다.":"表示 ITypeInfo 指针的对象。\r\n","트랜잭트 모드에서 열려 있는 스트림 개체에 대한 변경 사항이 모두 부모 저장소에 반영되도록 합니다.":"导致在事务模式下对打开流对象的任何更改都反映在父存储中。\r\n","번 거듭제곱한 결과입니다.":"这是乘以 的结果。\r\n","Препроцессор ARM.":"ARM 预处理器。\r\n","-Objekt für die Klasse, in der dieser Member deklariert ist.":"- 声明此成员的类的对象。\r\n","읽을 값 형식입니다.":"要读取的值的类型。\r\n","Entfernt Überwachungsregeln, die dieselbe Sicherheits-ID und dieselbe Zugriffsmaske wie die angegebene Überwachungsregel enthalten, aus der SACL (System Access Control List), die diesem ObjectSecurity`1-Objekt zugeordnet ist.":"从与此 ObjectSecurity`1 对象关联的 SACL（系统访问控制列表）中删除包含与指定审核规则相同的安全 ID 和访问掩码的审核规则。\r\n","Преобразует значение заданного 16-разрядного знакового целого числа в эквивалентное десятичное число.":"将指定的 16 位带符号整数的值转换为其等效的十进制数。\r\n","Ограничивает доступ к указанному диапазону байтов в потоке.":"限制对流中指定范围的字节的访问。\r\n",", auf die nächste 64-Bit-Ganzzahl ohne Vorzeichen gerundet.Wenn ":", 四舍五入到最接近的 64 位无符号整数。如果\r\n","Bei Cachingverbindungen aktualisiert dieses Flag die zwischengespeicherte Darstellung nur dann, wenn das Objekt mit dem Cache gespeichert wird.":"对于缓存连接，此标志仅在对象与缓存一起保存时更新缓存表示。\r\n","Der Wert der 64-Bit-Ganzzahl mit Vorzeichen für den Vergleich.":"要比较的 64 位有符号整数的值。\r\n","Ruft einen Wert ab, der angibt, ob der Standardwert eines Felds oder einer Eigenschaft serialisiert werden soll, oder legt einen Wert fest. ":"获取或设置一个值，该值指示是否应序列化字段或属性的默认值。\r\n","Имя профиля данного объекта ":"此对象的配置文件名称\r\n","32-разрядное целое число со знаком, которое больше или равно нулю и меньше, чем ":"大于或等于零且小于的 32 位有符号整数\r\n","Gewährt einem bestimmten durch ein ":"授予特定通过\r\n","Указатель интерфейса Среда выполнения Windows.Этот элемент можно использовать для типа данных ":"Windows 运行时接口指针。该元素可用于数据类型\r\n"," unverändert zurückgegeben.":" 返回不变。\r\n",".В параметре ":".In参数\r\n","Исключенный верхний предел возвращаемого случайного числа.Значение ":"返回随机数的排除上限.Value\r\n"," задает DISPATCH_PROPERTYPUT или DISPATCH_PROPERTYPUTREF, то параметр ":" 指定 DISPATCH_PROPERTYPUT 或 DISPATCH_PROPERTYPUTREF，然后\r\n","-Attribut auf die Klasse anwenden.":"- 将属性应用于类。\r\n","잘라낼 숫자입니다.":"要截断的数字。\r\n","문자열 매개 변수를 메서드로 마샬링하는 방법을 지정하고 이름 변환을 제어합니다.":"指定如何将字符串参数编组到方法中并控制名称改编。\r\n","문자열 배열을 한 경로로 결합합니다.":"将一组字符串组合成一个路径。\r\n"," минус 7 и меньше или равно длине параметра ":" -7 且小于或等于参数长度\r\n","Возвращает или задает всевозможные сведения запроса, включенные в URI.":"获取或设置 URI 中包含的任何请求信息。\r\n","Definiert eine implizite Konvertierung einer Gleitkommazahl mit einfacher Genauigkeit in eine komplexe Zahl.":"定义单精度浮点数到复数的隐式转换。\r\n","반환 값의 소수 자릿수입니다. ":"返回值中的小数位数。\r\n","Benachrichtigt alle registrierten Advise-Senken, dass das Objekt umbenannt wurde.Diese Methode wird von einem Server aufgerufen.":"通知所有已注册的建议接收器该对象已重命名。此方法由服务器调用。\r\n","대리자가 연결될 COM 개체입니다.":"委托将链接到的COM对象。\r\n","Ключ метаданных.":"元数据键。\r\n",", der den Namen der Methode für den von der ":"，这是来自的方法的名称\r\n","Beschreibt eine Variable, eine Konstante oder einen Datenmember.":"描述变量、常量或数据成员。\r\n","-Wert unterstützt und wenn sein Wert gleich dem Wert des aktuellen ":"- 支持的值，如果它的值等于当前值\r\n","Der Schnittstellenbezeichner (Interface Identifier, IID) der Schnittstelle, die der Client für die Kommunikation mit dem Objekt verwenden soll, das vom Moniker angegeben wird. ":"客户端应该用来与名字对象指定的对象进行通信的接口的接口标识符 (IID)。\r\n","Gibt immer null zurück.":"总是返回空值。\r\n"," zurückgegeben.Wenn ":" 返回.if\r\n","개체에 대해 지정된 인터페이스를 나타내는 인터페이스 포인터입니다.":"表示对象的指定接口的接口指针。\r\n","Максимальное число символов, которое может содержаться в памяти, назначенной текущим экземпляром.Его значение может изменяться от ":"当前实例分配的内存中可以包含的最大字符数。它的值可以从\r\n","; то есть, ln ":";也就是说，ln\r\n","Gibt einen Zeiger auf eine IUnknown-Schnittstelle zurück, die die angegebene Schnittstelle für das angegebene Objekt darstellt.Der benutzerdefinierte Zugriff auf die Abfrageschnittstelle wird vom angegebenen Anpassungsmodus gesteuert.":"返回一个指向 IUnknown 接口的指针，该接口表示指定对象的指定接口。对查询接口的自定义访问由指定的自定义模式控制。\r\n","Возвращает гиперболический тангенс указанного комплексного числа.":"返回指定复数的双曲正切值。\r\n"," 플래그가 설정된 플랫폼 호출을 사용하여 호출된 관리되지 않는 마지막 함수에서 반환하는 오류 코드를 반환합니다.":" 返回最后一个使用带有标志集的平台调用调用的非托管函数返回的错误代码。\r\n","이 함수는 구현된다는 점을 제외하고는 ":"除了实现了这个功能\r\n","Преобразует значение заданного символа Юникода в эквивалентное 16-битовое целое число без знака.":"将指定 Unicode 字符的值转换为其等效的 16 位无符号整数。\r\n","Тип элементов в списке, доступном только для чтения. Этот параметр типа является ковариантным. Это означает, что можно использовать либо указанный тип, либо более производный тип. Дополнительные сведения о ковариации и контрвариации см. в разделе Ковариация и контравариация в универсальных шаблонах.":"只读列表中元素的类型。此类型参数是协变的。这意味着可以使用指定的类型或更派生的类型。有关协变和逆变的更多信息，请参阅通用模式中的协变和逆变。\r\n",", используя указанное значение. ":", 使用指定的值。\r\n","Suchen Sie das Anwendungsverzeichnis, und rufen Sie anschließend die Win32-Funktion LoadLibraryEx mit dem LOAD_WITH_ALTERED_SEARCH_PATH-Flag auf.Dieser Wert wird ignoriert, wenn ein anderer Wert angegeben wird.Betriebssysteme, die das ":"找到应用程序目录，然后使用 LOAD_WITH_ALTERED_SEARCH_PATH 标志调用 Win32 函数 LoadLibraryEx。如果指定了不同的值，则忽略该值。支持的操作系统\r\n","Буфер для записи потока. ":"写入流的缓冲区。\r\n","관리되지 않는 메모리에서 관리되는 개체에 액세스하기 위한 방법을 제공합니다.":"提供一种访问非托管内存中的托管对象的方法。\r\n","의 숫자에 해당하는 32비트 부호 없는 정수이거나, ":"是一个 32 位无符号整数，等于\r\n"," недопустимо.-или-Индекс элемента формат меньше 0 (нуля) либо больше или равен 2. ":" 无效。-或-格式元素的索引小于 0（零）或大于或等于 2。\r\n","[.NET Framework 4.5.1 이상 버전에서 지원됨] 지정된 관리되는 클래스의 관리되지 않는 형식의 필드 오프셋을 반환합니다.":"[.NET Framework 4.5.1 及更高版本支持] 返回指定托管类的非托管类型中字段的偏移量。\r\n"," serialisierbar ist.":" 是可序列化的。\r\n","Der erste Wert.":"第一个值。\r\n"," entspricht.- oder -  ":" 等于.- 或-\r\n","Выполняет инициализацию объекта ":"执行对象初始化\r\n","-Werte und gibt eine ganze Zahl zurück, die angibt, ob der erste Wert kleiner oder größer als der zweite Wert oder gleich dem zweiten Wert ist.":"values 并返回一个整数，表示第一个值是小于、大于还是等于第二个值。\r\n","Eine 64-Bit-Ganzzahl mit Vorzeichen.":"一个 64 位有符号整数。\r\n","Преобразует заданное строковое представление числа в эквивалентное 32-битовое целое число со знаком.":"将数字的指定字符串表示形式转换为等效的 32 位带符号整数。\r\n","Фаза, т. е. угол от прямой до горизонтальной оси в радианах.":"相位，即从直线到水平轴的角度（以弧度为单位）。\r\n","구현되는 구성 요소 인터페이스 집합입니다.":"一组已实现的组件接口。\r\n","Значение, которое необходимо преобразовать в 64-разрядное целое число без знака.":"要转换为无符号 64 位整数的值。\r\n","В схеме невозможно задать недопустимое имя схемы. ":"您不能在架构中指定无效的架构名称。\r\n","Dieses Wait-Handle kapselt ein betriebssystemspezifisches Objekt, das auf exklusiven Zugriff auf gemeinsam genutzte Ressourcen wartet. ":"此等待句柄封装了一个特定于操作系统的对象，该对象等待对共享资源的独占访问。\r\n","-Objekt zugeordnete Objekt ein Verzeichnisobjekt ist, andernfalls false.":"-Object 关联对象是目录对象，否则为 false。\r\n","Записывает 64-битное целое число со знаком в неуправляемую память с указанным смещением.":"将 64 位带符号整数写入指定偏移量的非托管内存。\r\n","Сведения об имени продукта. ":"产品名称信息。\r\n","Die in ein HRESULT zu konvertierende Ausnahme.":"要转换为 HRESULT 的异常。\r\n","Verschiebt den Suchzeiger an eine neue Position relativ zum Anfang oder zum Ende des Streams bzw. zum aktuellen Suchzeiger.":"将搜索指针移动到相对于流的开头或结尾或当前搜索指针的新位置。\r\n","선에서 가로 축까지의 각도인 위상으로서, 라디안 단위로 측정됩니다.":"相位，从直线到水平轴的角度，以弧度为单位。\r\n","Возвращает абсолютное значение (или величину) комплексного числа.":"返回复数的绝对值（或大小）。\r\n","Der Winkel, der der Arkussinus von ":"的反正弦所对的角\r\n","Сведения о псевдониме по умолчанию данной сборки. ":"有关此程序集的默认别名的信息。\r\n","Преобразует заданное строковое представление числа в эквивалентное 16-битовое целое число со знаком.":"将数字的指定字符串表示形式转换为等效的 16 位带符号整数。\r\n","Konvertiert den Wert eines angegebenen Objekts in einen entsprechenden booleschen Wert.":"将指定对象的值转换为等效的布尔值。\r\n"," dividiert wird.":" 分开的。\r\n","-Array. ":"-大批。\r\n","Die Eigenschaften der Überwachungsregel.":"监控规则的属性。\r\n","쿼리될 인터페이스입니다.":"要查询的接口。\r\n","문화권별 서식 지정 정보를 제공하는 개체입니다.이 매개 변수는 무시됩니다.":"提供区域性特定格式信息的对象。忽略此参数。\r\n","Значение S_OKHRESULT, если объект был изменен; в противном случае — значение S_FALSEHRESULT.":"如果对象已被修改，则为 S_OKHRESULT 的值；否则，S_FALSEHRESULT 的值。\r\n","Ein Winkel θ im Bogenmaß im Bereich -π/2 ≤θ≤π/2.- oder -  ":"以弧度为单位的角度 θ 在范围 -π/2 ≤θ≤π/2.- 或 -\r\n","Дескриптор ожидания, который инкапсулирует связанные с операционной системой объект, который ожидает монопольного доступа к общему ресурсу. ":"封装操作系统相关对象的等待句柄，该对象正在等待对共享资源的独占访问。\r\n","Идентификатор деструктора или ":"析构函数标识符，或\r\n"," ist.Beachten Sie, dass die Methode einen Ganzzahlwert vom Typ ":" is. 请注意，该方法采用类型的整数值\r\n","Eine 64-Bit-Ganzzahl x mit Vorzeichen im Bereich 0 ≤ x ≤":"范围为 0 ≤ x ≤ 的 64 位有符号整数 x\r\n","16-битовое целое число со знаком, эквивалентное ":"16 位有符号整数等价于\r\n","Gibt einen Wert zurück, der angibt, ob die aktuelle Instanz und eine angegebene komplexe Zahl den gleichen Wert haben.":"返回一个值，该值指示当前实例和指定的复数是否具有相同的值。\r\n","Позиция, в которую был вставлен новый элемент.":"插入新元素的位置。\r\n","Stellt Bibliotheksflags dar.":"表示库标志。\r\n","지정된 부울 값을 실제 변환 작업 없이 반환합니다.":"返回指定的布尔值而不进行任何实际转换。\r\n","Gibt die größere von zwei 32-Bit-Ganzzahlen mit Vorzeichen zurück.":"返回两个 32 位有符号整数中较大的一个。\r\n","[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt] Konvertiert ein Objekt eines angegebenen Typs in eine COM VARIANTE. ":"[仅在 .NET Framework 4.5.1 及更高版本中支持] 将指定类型的对象转换为 COM VARIANT。\r\n","Извлекает описания ссылочных типов, если описание типа ссылается на другие описания типов.":"如果类型声明引用其他类型声明，则检索引用类型声明。\r\n"," — ссылочный тип, который не является форматированным классом. ":" 是不是格式化类的引用类型。\r\n","Включить каталог приложения, каталог %WinDir%\\System32 и каталоги пользователей в путь поиска DLL. ":"在 DLL 搜索路径中包括应用程序目录、%WinDir%\\System32 目录和用户目录。\r\n","Eine ganze Zahl, die die Adresse des belegten Speicherblocks darstellt.Dieser Speicher muss mit ":"表示已分配内存块地址的整数\r\n","Возвращает смещение в байтах от начала структуры до начала поля.":"返回从结构开始到字段开始的偏移量（以字节为单位）。\r\n","Гиперболический синус ":"双曲正弦\r\n","Das COM-Objekt, das die Ereignisse auslöst, auf die der Aufrufer reagieren möchte.":"引发调用者想要响应的事件的 COM 对象。\r\n"," muss true für diesen Wert zurückgeben.":" 必须为此值返回 true。\r\n","Число байтов, копируемых из потока-источника. ":"要从源流中复制的字节数。\r\n","스트림에 있는 현재 검색 포인터에서 다른 스트림에 있는 현재 검색 포인터로 지정된 바이트 수를 복사합니다.":"将指定数量的字节从一个流上的当前搜索指针复制到另一个流上的当前搜索指针。\r\n","Ein Zeiger auf ein COM-VARIANT.":"指向 COM VARIANT 的指针。\r\n","Предоставляет указатель на интерфейс IUnknown подключенного вспомогательного приемника.Когда необходимость в структуре CONNECTDATA отпадет, Вызывающий объект должен вызвать IUnknown::Release для этого указателя.":"提供指向附加的助手接收器的 IUnknown 接口的指针。当不再需要 CONNECTDATA 结构时，调用者必须在此指针上调用 IUnknown::Release。\r\n","Указатель на неуправляемую функцию, который требуется преобразовать.":"指向要转换的非托管函数的指针。\r\n","Доступного стекового пространства для выполнения средней функции .NET Framework. недостаточно.":"可用于运行普通 .NET Framework 函数的堆栈空间。不够。\r\n","-Klasse unter Verwendung der angegebenen Ausnahme.":"使用指定异常的类。\r\n","지정된 DISPID를 사용하여 DispIdAttribute 클래스의 새 인스턴스를 초기화합니다.":"使用指定的DISPID初始化DispIdAttribute类的新实例。\r\n","Ruft einen Wert ab, der den Punkt angibt, bei dem Erfassungen auftreten müssen.":"获取一个值，该值指示采集必须发生的时间点。\r\n","Espacio de nombres CLR-legal de un tipo.":"Espacio de nombres CLR-legal de un tipo。\r\n"," в комплексное число. ":" 成一个复数。\r\n","Entfernt alle Überwachungsregeln, die dieselbe Sicherheits-ID und denselben Qualifizierer wie die angegebene Überwachungsregel in der SACL (System Access Control List) enthalten, die diesem ObjectSecurity`1-Objekt zugeordnet ist, und fügt anschließend die angegebene Überwachungsregel hinzu.":"删除与此 ObjectSecurity`1 对象关联的系统访问控制列表 (SACL) 中的指定审核规则包含相同安全 ID 和限定符的所有审核规则，然后添加指定的审核规则。\r\n"," для декодирования.":" 用于解码。\r\n","기본 소스 인터페이스의 ":"默认源接口的 \r\n","Es ist nicht genügend Speicherplatz vorhanden.":"磁盘空间不足。\r\n","Основание логарифма. ":"对数的底数。\r\n","Der zu bindende Name. ":"要绑定的名称。\r\n","Eine Gleitkommazahl mit doppelter Genauigkeit, die einen Exponenten darstellt.":"表示指数的双精度浮点数。\r\n"," 숫자의 절대값을 반환합니다.":" 返回数字的绝对值。\r\n","Задает для свойства значение по умолчанию.":"将属性设置为其默认值。\r\n","과 같은 동작이 생성됩니다.":"会产生相同的行为。\r\n","상대 경로를 사용할 모니커에 대한 참조입니다. ":"引用名字对象以使用相对路径。\r\n","이름 또는 이름들을 반환할 멤버의 ID입니다. ":"要为其返回一个或多个名称的成员的 ID。\r\n","다른 형식의 별칭인 형식입니다.":"一种类型，它是另一种类型的别名。\r\n"," bei der Serialisierung oder Deserialisierung auf einen ungültigen Datenvertrag trifft. ":" 在序列化或反序列化期间遇到无效的数据协定。\r\n","Получает или задает значение, указывающее, следует ли создавать оболочку для исключений, не являющихся производными от класса ":"获取或设置一个值，该值指示是否应包装不是从类派生的异常\r\n","Gibt die kleinere von zwei 32-Bit-Ganzzahlen mit Vorzeichen zurück.":"返回两个 32 位有符号整数中较小的一个。\r\n","Compara esta instancia con un segundo ":"比较第二个实例\r\n"," 개체를 부호 있는 16비트 정수 값으로 변환하는 명시적 변환을 정의합니다.":" 定义显式转换以将对象转换为带符号的 16 位整数值。\r\n","변수는 별개의 바인딩 가능한 속성으로 매핑됩니다.":"变量被映射为单独的可绑定属性。\r\n","수집을 시작할 시점을 지정하는 값입니다.":"指定何时开始收集的值。\r\n","Сочетание ":"组合\r\n","-Felds darstellt.Wenn das Handle mit ":"字段。如果句柄与\r\n","Маршалирует данные из неуправляемого блока памяти во вновь выделенный управляемый объект указанного типа.":"将非托管内存块中的数据编组到新分配的指定类型的托管对象。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.":"将指定的 32 位无符号整数的值转换为等效的 16 位有符号整数。\r\n","Преобразует значение заданного 64-битового целого числа со знаком в эквивалентный символ Юникода.":"将指定的 64 位带符号整数的值转换为其等效的 Unicode 字符。\r\n","Количество типов значений, считываемых из входного массива и записываемых в выходной массив.":"从输入数组读取并写入输出数组的值类型数。\r\n","Erstellt einen Wrapper für Objekte, die der Marshaller als VT_UNKNOWN marshallen soll.":"为您希望封送拆收器封送为 VT_UNKNOWN 的对象创建包装器。\r\n","Определяет постоянное значение, которое компилятор может сохранять для данного поля или параметра метода.":"指定编译器可以为给定字段或方法参数存储的常量值。\r\n"," не равно null, возвращаемая строка пути содержит ":" 不为空，返回的路径字符串包含\r\n","Win32 SetLastError 함수에 대한 호출로 설정된 마지막 오류 코드입니다.":"通过调用 Win32 SetLastError 函数设置的最后一个错误代码。\r\n","Куча больших объектов (LOH) не уплотняется.":"大型对象堆 (LOH) 未压缩。\r\n",", для которого требуется целое число. ":"需要整数的 A。\r\n",", содержащий имя метода типа, определяемого классом ":"一个包含类定义的类型的方法名\r\n","비교할 두 개의 8비트 부호 없는 정수 중 두 번째 숫자입니다. ":"要比较的两个 8 位无符号整数中的第二个。\r\n","Die erste von zwei zu vergleichenden Gleitkommazahlen mit einfacher Genauigkeit. ":"要比较的两个单精度浮点数中的第一个。\r\n","Возвращает или задает пространство имен для контракта данных.":"Возвращает или задает пространство имен для контракта данных。\r\n","управляемый объект для агрегации. ":"用于聚合的托管对象。\r\n","Stellt den Zugriff auf das zugrunde liegende Objekt bereit, das von einem benutzerdefinierten Marshaller umfasst wird.":"提供对由自定义封送拆收器包装的底层对象的访问。\r\n","Задает часть аспекта, когда данные должны быть разделены по разным страницам. ":"指定应在不同页面上拆分数据时的方面部分。\r\n","Комплексное число, вещественная часть которого равна параметру ":"实部等于参数的复数\r\n"," in der Sortierreihenfolge auf. Größer als 0 (null) Diese Instanz folgt in der Sortierreihenfolge auf ":" 在排序顺序中。大于零此实例遵循排序顺序\r\n","Trennt einen Ereignishandler von einem COM-Objekt.":"从 COM 对象分离事件处理程序。\r\n","Получает размер буфера (в байтах).":"获取缓冲区的大小（以字节为单位）。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.":"将指定的 64 位无符号整数的值转换为等效的双精度浮点数。\r\n","Имя сборщика.Этот параметр позволяет называть сборщики, независимо отслеживающие типы дескрипторов.":"收集器名称 此选项允许您命名独立跟踪句柄类型的收集器。\r\n","변수의 속성을 정의합니다.":"定义变量的属性。\r\n","Legt den Vererbungsschutz für die SACL fest, die diesem ":"为与此关联的 SACL 设置继承保护\r\n","Знак Юникода, который эквивалентен значению ":"与该值等效的 Unicode 字符\r\n","Возвращаемое 32-разрядное целое число без знака. ":"返回的 32 位无符号整数。\r\n","비교할 첫 번째 복소수입니다.":"要比较的第一个复数。\r\n","Указатель интерфейса, возвращаемый методом ":"方法返回的接口指针\r\n","Описывает способ передачи значения, возвращенного функцией, параметром или элементом структуры между процессами.":"描述如何在进程之间传递函数、参数或结构成员返回的值。\r\n","인코딩할 ":"编码\r\n","Gibt an, dass die freigegebene Zugriffsliste (SACL – System Access Control List) automatisch vom übergeordneten Element geerbt wurde.Wird nur von Ressourcen-Managern festgelegt.":"表示共享系统访问控制列表 (SACL) 是自动从父级继承的。仅由资源管理器设置。\r\n","-Methode zurückgegeben wird, kann als Ergebnis von IUnknown::QueryInterface verwendet werden.":"方法可以用作 IUnknown::QueryInterface 的结果。\r\n","Konvertiert eine Zeichenfolge, die für die HTTP-Übertragung HTML-codiert wurde, in eine decodierte Zeichenfolge.":"将已针对 HTTP 传输进行 HTML 编码的字符串转换为已解码的字符串。\r\n","При возвращении данного метода содержит строку отображаемого имени.Этот параметр передается без инициализации.":"当此方法返回时，包含显示名称字符串。此参数无需初始化即可传递。\r\n","Описывает источник и назначение данного сериализованного потока и предоставляет дополнительный, определяемый вызывающим, контекст.":"描述此序列化流的源和目标，并提供额外的调用者定义的上下文。\r\n","Число, квадратный корень которого требуется найти. ":"要求其平方根的数字。\r\n","Der imaginäre Teil der komplexen Zahl.":"复数的虚部。\r\n","Initialisiert eine neue Instanz der SafeArrayRankMismatchException-Klasse mit der angegebenen Meldung.":"使用指定消息初始化 SafeArrayRankMismatchException 类的新实例。\r\n"," gleich null ist, gibt ":" 等于零，有\r\n","Идентификатор функции элемента, для которого возвращается описание входа динамической библиотеки DLL. ":"为其返回 DLL 条目描述的元素的函数 ID。\r\n","MPW(Macintosh Programmers' Workbench) CDECL 호출 규칙을 메서드에 사용해야 함을 나타냅니다.":"指示该方法应使用 Macintosh 程序员工作台 (MPW) CDECL 调用约定。\r\n",", -бесконечность обозначает ":", -无穷大意味着\r\n","속성 값 할당 구문을 통해 함수가 호출됩니다.":"通过属性值赋值语法调用函数。\r\n","Die Datums- und Uhrzeitentsprechung des Werts von ":"From 值的等效日期和时间\r\n","Возвращает абсолютное значение 8-битового целого числа со знаком.":"返回 8 位有符号整数的绝对值。\r\n","Ссылка на моникер, для которого нужно получить относительный путь. ":"对名字对象的引用以获取其相对路径。\r\n",", возвращаемых в ":"回到\r\n",", создается исключение ":", 抛出异常\r\n","Сообщает объекту, что он может выполнять запись в файл.":"告诉对象它可以写入文件。\r\n","표시 이름에서 이 지점까지 빌드된 모니커에 대한 참조입니다. ":"对从显示名称到此时构建的名字对象的引用。\r\n","Gibt den absoluten Wert einer 64-Bit-Ganzzahl mit Vorzeichen zurück.":"返回 64 位有符号整数的绝对值。\r\n"," обнаружен в библиотеке типов; в противном случае — значение false.":" 在类型库中找到；否则，假的。\r\n","변수의 형식, 함수의 반환 형식 또는 함수 매개 변수의 형식을 설명합니다.":"描述变量的类型、函数的返回类型或函数参数的类型。\r\n","-Klasse über den angegebenen Namespace. ":"-Klasse über den angegebenen 命名空间。\r\n","지정한 두 ":"指定两个\r\n"," не может быть преобразован в ":" 不能转换为\r\n","부호 없는 1바이트 정수입니다.":"一个 1 字节的无符号整数。\r\n"," показывает индекс аргумента с неверным типом.Если ошибка возвращается для нескольких аргументов, ":" 显示错误类型参数的索引。如果为多个参数返回错误，\r\n","IEnumConnections 인터페이스의 정의를 관리합니다.":"管理 IEnumConnections 接口的定义。\r\n","Excepción que se produce cuando no se encuentra el archivo DLL especificado en una importación de DLL.":"Excepción que se produce cuando no se encuentra el archivo DLL especificado en una importación de DLL.\r\n",", определяя, нужно ли выполнять обычную операцию удаления.":", определяя, нужноливыполнятьобычнуюоперациюудаления。\r\n","Позволяет получить имя метода или свойства, вызывающего метод.":"获取调用该方法的方法或属性的名称。\r\n","가장 가까운 64비트 부호 있는 정수로 반올림된 ":"四舍五入到最接近的 64 位有符号整数\r\n","Gibt die kleinere von zwei Dezimalzahlen zurück.":"返回两个小数中较小的一个。\r\n","에 대한 디렉터리 정보이며, ":"的目录信息\r\n"," 매개 변수에 해당하는 VARIANT를 받을 포인터입니다. ":" 接收与参数对应的 VARIANT 的指针。\r\n","지정된 16비트 부호 없는 정수 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.":"将指定的 16 位无符号整数值转换为等效的单精度浮点数。\r\n","컴파일러가 “abc” 형식에서 이름이 “xyz”인 멤버를 찾는 최적화를 허용합니다.이러한 멤버를 발견하여 기본 컬렉션의 요소에 대한 접근자 함수로 플래그하면, 호출은 해당 멤버 함수로 생성됩니다.모듈에서 허용되지 않고 dispinterface와 인터페이스의 멤버에서 허용됩니다.":"允许编译器在“abc”类型中找到名为“xyz”的成员的优化。如果找到这样的成员并将其标记为基础集合元素的访问器函数，则调用该成员函数。在在调度接口和接口成员上不允许和允许的模块。\r\n","Obtiene o establece un nombre personalizado para un elemento de la colección.":"Obtiene o establece a name personalizado para an elemento de la colección.\r\n","Copia datos de un puntero de memoria no administrada a una matriz administrada de números de punto flotante de precisión doble.":"将数据从非托管内存指针复制到双精度浮点数的托管数组。\r\n","Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентное 8-разрядное целое число без знака.":"将指定的 64 位无符号整数的值转换为其等效的 8 位无符号整数。\r\n","Eine ganze Zahl mit Vorzeichen, die den relativen Wert dieser Instanz und von ":"一个有符号整数，表示此实例和的相对值\r\n","DLL 검색 경로에 응용 프로그램 디렉터리를 포함합니다. ":"在DLL搜索路径中包含应用程序目录。 \r\n"," 인터페이스를 구현하지 않는 경우 또는":" 没有实现接口，或者\r\n","URI가 참조하는 리소스에 대한 경로를 가져오거나 설정합니다.":"获取或设置 URI 引用的资源的路径。\r\n","Возвращает сведения о том, был ли удален сборщиком мусора объект, на который ссылается объект ":"返回有关对象引用的对象是否已被垃圾回收的信息\r\n","Первый путь для объединения. ":"第一种加入方式。\r\n","Определяет настраиваемый атрибут авторских прав для манифеста сборки.":"为程序集清单定义自定义版权属性。\r\n","모니커를 사용하여 모니커가 식별하는 개체에 바인딩합니다.":"您使用名字对象绑定到名字对象所标识的对象。\r\n","Определяет неявное преобразование 64-битового знакового целого числа в значение ":"指定 64 位有符号整数到值的隐式转换\r\n","-Parameter Rückgabewert 0 oder positiv Die positive Quadratwurzel von ":"-参数返回0或正的正平方根\r\n","Der Name eines Ereignisses für ":"活动名称\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 64 位无符号整数的值转换为等效的 8 位无符号整数。\r\n","Количество элементов этого типа значения, под которое выделяется память.":"要为其分配内存的此值类型的元素数。\r\n","STDCALL(표준 호출 규칙)을 메서드에 사용해야 함을 나타냅니다.":"指示标准调用约定 (STDCALL) 应该用于该方法。\r\n","-Klasse ist die abstrakte Basisklasse der ":"class 是的抽象基类\r\n","을 설정합니다. ":"设置。\r\n","Представляет дополнительный номер версии библиотеки типов.":"表示类型库的次要版本。\r\n"," an. Das heißt, der ":" 在。那就是\r\n","Преобразует заданное строковое представление числа в эквивалентное 8-разрядное целое число без знака, учитывая сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"在给定区域性特定格式设置信息的情况下，将数字的指定字符串表示形式转换为其等效的 8 位无符号整数。\r\n","Das von dem ":"那个从那个\r\n",", этот метод возвращает ":", 这个方法返回\r\n","지정된 각도의 하이퍼볼릭 탄젠트를 반환합니다.":"返回指定角度的双曲正切值。\r\n","Возвращает заданное 64-битовое целое число без знака; фактическое преобразование не производится.":"返回指定的 64 位无符号整数；没有执行实际的转换。\r\n","Die zweite von zwei zu vergleichenden 16-Bit-Ganzzahlen mit Vorzeichen. ":"要比较的两个 16 位有符号整数中的第二个。\r\n","Предоставляет коллекцию методов для выделения неуправляемой памяти, копирования блоков неуправляемой памяти и преобразования управляемых типов в неуправляемые, а также прочих разнообразных методов, используемых при взаимодействии с неуправляемым кодом.":"提供一组用于分配非托管内存、复制非托管内存块和将托管类型转换为非托管类型的方法，以及与非托管代码交互时使用的各种其他方法。\r\n","Ожидает получения сигнала любыми элементами заданного массива, используя значение типа ":"使用类型的值等待给定数组的任何元素接收到信号\r\n","-Parameter Nicht-null-Werte enthalten.":"- 参数包含非空值。\r\n","Eine Darstellung eines Objekts auf dem Bildschirm, die dem Ausdruck mit dem Drucken-Befehl im Menü Datei gleicht.Die beschriebenen Daten können auf mehreren Seiten dargestellt werden.":"一个对象的屏幕表示，相当于使用“文件”菜单上的“打印”命令将其打印出来。所描述的数据可以显示在多个页面上。\r\n","난수를 포함하는 바이트 배열입니다. ":"包含随机数的字节数组。\r\n","Определяет неявное преобразование 32-битового знакового целого числа в значение ":"指定 32 位有符号整数到值的隐式转换\r\n"," не является допустимым типом VARIANT. ":" 不是有效的 VARIANT 类型。\r\n","VARDESC가 반환되었음을 나타냅니다.":"表示已返回 VARDESC。\r\n","지정된 개체의 값을 8비트 부호 있는 정수로 변환합니다.":"将指定对象的值转换为 8 位有符号整数。\r\n","Ruft den Fragmentteil des URIs ab oder legt diesen fest.":"获取或设置 URI 的片段部分。\r\n"," меньше нуля.-или- Сумма ":" 小于零。-或- 总和\r\n","값이 참조임을 나타냅니다.":"表示该值是一个引用。\r\n",".Заданное количество обозначает число возвращаемых компонент.":".Quantity specified 表示要返回的组件数。\r\n","Flags, die den Kontext des Invoke-Aufrufs beschreiben. ":"描述 Invoke 调用上下文的标志。\r\n","Устанавливает вспомогательное соединение между точкой подключения и объектом приемника вызывающего оператора.":"在连接点和调用者的接收器对象之间建立辅助连接。\r\n","Belegt einen Speicherblock der angegebenen Größe aus der Speicherbelegungsfunktion für COM-Aufgaben.":"从 COM 任务的内存分配函数中分配指定大小的内存块。\r\n","Gibt bei Anwendung auf eine Methode an, dass die Methode während der Serialisierung eines Objektgraphs in ein Objektdiagramm aufgerufen wird.Die Reihenfolge der Serialisierung relativ zu anderen Objekten im Diagramm ist nicht deterministisch.":"当应用于方法时，表示在将对象图序列化为对象图期间调用该方法。相对于图上其他对象的序列化顺序是不确定的。\r\n","Verfolgt den maximalen definierten ACE-Typ in der Enumeration nach.":"跟踪枚举中定义的最大 ACE 类型。\r\n","멤버의 DISPID입니다. ":"员的DISPID。 \r\n","Строковое представление даты и времени.":"日期和时间的字符串表示形式。\r\n","При увеличении значения данного экземпляра будет превышено значение ":"增加此实例的值将超过该值\r\n","Строка, представляющая данный объект ":"表示此对象的字符串\r\n"," ist keine korrekt formatierte Datums- und Zeitzeichenfolge. ":" 不是格式正确的日期和时间字符串。\r\n","Diese Konvertierung wird nicht unterstützt.  - oder - ":"不支持此转换。 - 或者 -\r\n","Eine Beschreibung des Fehlers. ":"错误的描述。\r\n","Der nullbasierte Index im Zielarray, an dem der Kopiervorgang beginnen soll.":"目标数组中从零开始的索引，从这里开始复制。\r\n","Инкапсулирует массив и смещение в указанный массив.":"Инкапсулирует массив и смещение в указанный массив。\r\n","Der Objekttyp, auf den die Regel angewendet wird.":"规则适用的对象类型。\r\n","При возвращении данного метода содержит ссылку на фактическое число элементов, перечисленных в ":"当此方法返回时，包含对中列出的实际元素数的引用\r\n","Поток, в котором будет сохранен объект. ":"将存储对象的流。\r\n","Преобразует значение заданного символа Юникода в эквивалентное 64-битовое целое число со знаком.":"将指定 Unicode 字符的值转换为其等效的 64 位带符号整数。\r\n","Определяет пару метаданных ключ/значение для декорированной сборки.":"为装饰程序集定义元数据键/值对。\r\n","Значение HRESULT, показывающее успешное или неуспешное выполнение операции.":"指示操作成功或失败的 HRESULT。\r\n","Gewährt den Zugriff auf ein Objekt, eine Gruppe von Eigenschaften oder eine Eigenschaft.Der ACE enthält eine Gruppe von Zugriffsrechten, eine GUID, die den Typ des Objekts identifiziert, und ein ":"授予对对象、属性集或特性的访问权限。ACE 包含一组访问权限、标识对象类型的 GUID 和\r\n"," 값에 대한 비트 1의 보수를 반환합니다.":" 返回值的位 1 的补码。\r\n","Ein Array von 8-Bit-Ganzzahlen ohne Vorzeichen. ":"8 位无符号整数数组。\r\n","Die - Klasse, die von ":"该 - 班级\r\n","URL 인코딩할 ":"网址编码\r\n","Этот член фактически не является соглашением о вызове, а вместо этого используется стандартное соглашение о вызове платформы.Например, в Windows по умолчанию используется ":"该成员实际上不是调用约定，而是使用平台的标准调用约定。例如，在 Windows 上，默认为\r\n","Строка, содержащая \"\\r\\n\" для платформ, отличных от Unix, или строка, содержащая \"\\n\" для платформ Unix.":"对于非 Unix 平台，包含“\\r\\n”的字符串，对于 Unix 平台，包含“\\n”的字符串。\r\n","메모리에서 읽어온 값 형식입니다.":"从内存中读取的值类型。\r\n","Значение, которое необходимо преобразовать в 64-разрядное знаковое целое число.":"要转换为 64 位有符号整数的值。\r\n","Gibt einen IDispatch-Zeiger an.":"指定 IDispatch 指针。\r\n","에 정의된 잘못된 문자가 하나 이상 포함되어 있는 경우  ":"包含一个或多个定义在\r\n","Die Zahl, deren Logarithmus bestimmt werden soll. ":"要确定其对数的数。\r\n","Исключение, преобразуемое в значение HRESULT.":"转换为 HRESULT 值的异常。\r\n"," bieten Spezialisierungen für Zugriffs- und Überwachungsfunktionen.":" 提供访问和审计功能的专业化。\r\n","Der nicht verwaltete Funktionszeiger, der konvertiert werden soll.":"要转换的非托管函数指针。\r\n","저장 미디어가 IStream 포인터로 식별되는 스트림 개체입니다.이 데이터를 읽으려면 ISequentialStream::Read를 사용합니다.":"存储介质是由 IStream 指针标识的流对象。要读取此数据，请使用 ISequentialStream::Read。\r\n","Значение недопустимого дескриптора (обычно 0 или -1).Реализация ":"Значение недопустимого 描述符 (обычно 0 или -1).Реализация\r\n","2-байтовая строка символов Юникода, заканчивающаяся нулем.":"以 null 结尾的 2 字节 Unicode 字符串。\r\n","Konvertiert ein Array von 8-Bit-Ganzzahlen ohne Vorzeichen in die entsprechende mit Base-64-Ziffern codierte Zeichenfolgendarstellung.":"将 8 位无符号整数数组转换为其等效的 base-64 数字编码字符串表示形式。\r\n","과 같거나 null이면 false를 반환합니다.":"等于或 null，返回 false。\r\n","이 메서드는 반환될 때 열거자의 인터페이스 포인터를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含枚举器的接口指针。此参数未初始化传递。\r\n","Der Puffer, in den dieser Stream geschrieben werden soll. ":"将此流写入的缓冲区。\r\n","TYMED 구조체의 관리되는 정의를 제공합니다.":"提供 TYMED 结构的托管定义。\r\n","Запускает или возобновляет измерение затраченного времени для интервала.":"开始或恢复一个间隔的经过时间测量。\r\n","메서드에 적용될 때 메서드는 개체 그래프의 개체가 deserialization 후 즉시 호출되도록 지정합니다.그래프에 있는 다른 개체에 상대적인 역직렬화의 순서는 명확하지 않습니다.":"当应用于方法时，该方法指定对象图中的对象在反序列化后立即被调用。反序列化相对于图中其他对象的顺序不明确。\r\n","Initialisiert eine neue Instanz der ObjectSecurity’1-Klasse.":"初始化 ObjectSecurity'1 类的新实例。\r\n","Список, для которого создается оболочка.":"要环绕的列表。\r\n","Controlador devuelto por la llamada coincidente original a ":"原始匹配调用返回的控制器 \r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为等效的 64 位无符号整数。\r\n","SafeArray — это описывающий сам себя массив, передающий тип, ранг и границы соответствующего массива данных.Этот элемент можно использовать с полем ":"SafeArray 是一个自描述数组，它传递对应数据数组的类型、等级和边界。这个元素可以和一个字段一起使用\r\n","Количество байтов в буфере.":"缓冲区中的字节数。\r\n","Путь, из которого нужно получить сведения о корневом каталоге. ":"从中获取有关根目录信息的路径。\r\n","Indica un puntero SAFEARRAY.":"表示SAFEARRAY指针。\r\n","-Parameter angegeben ist.":"指定参数。\r\n","Возвращает отображаемое имя, являющееся представлением текущего моникера, удобным для чтения пользователем.":"返回一个显示名称，它是当前名字对象的用户可读表示。\r\n","Округляет десятичное значение до указанного числа дробных разрядов.Параметр задает правило округления значения, если оно находится ровно посредине между двумя числами.":"将小数值四舍五入到指定的小数位数。如果值刚好在两个数字的中间，则该参数指定值的舍入规则。\r\n","진행률 변경을 보고합니다.":"报告进度变化。\r\n"," перед тем, как этот метод скопирует данные.Блок должен содержать допустимые данные.Обратите внимание, что передача false, когда блок памяти уже содержит данные, может привести к утечке памяти.":" 在此方法之前复制数据。该块必须包含有效数据。请注意，当内存块已包含数据时传递 false 可能会泄漏内存。\r\n","Gibt entsprechend einer angegebenen Schnittstellen-ID eine Schnittstelle zurück.":"根据给定的接口 ID 返回一个接口。\r\n","Führt eine bitweise exklusive Or-Operation (XOr-Operation) für zwei ":"对两个执行按位异或 (XOr) 运算\r\n","Записывает 16-битное целое число со знаком в неуправляемую память с указанным смещением.":"将 16 位有符号整数写入指定偏移量处的非托管内存。\r\n","Füllt die Elemente eines angegebenen Bytearrays mit Zufallszahlen.":"用随机数填充指定字节数组的元素。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in einen entsprechenden booleschen Wert.":"将指定的双精度浮点数的值转换为等效的布尔值。\r\n","매개 변수가 클라이언트 응용 프로그램의 로컬 식별자입니다.":"该参数是客户端应用程序的本地标识符。\r\n","Имя файла, содержащего пару ключей. ":"包含密钥对的文件的名称。\r\n","호출 규칙의 값을 가져옵니다.":"获取调用约定的值。\r\n","관리되지 않는 메모리에서 읽은 32비트 부호 있는 정수입니다.":"从非托管内存中读取的 32 位有符号整数。\r\n","Die Anzahl der Bits, um die ":"其中的位数\r\n","함수의 호출 규칙을 지정합니다.":"指定函数的调用约定。\r\n","버퍼의 각 요소 크기입니다.":"缓冲区中每个元素的大小。\r\n","Преобразует значение данного экземпляра в ":"将此实例的值转换为\r\n","지정한 사용자 지정 데이터 매개 변수를 가져옵니다.":"获取指定的自定义数据参数。\r\n","Натуральный логарифм (по основанию e) значения ":"自然对数（以 e 为底）值\r\n","Libera los recursos no administrados utilizados por la clase ":"Libera los recursos 没有管理员使用 por la 类\r\n","URI의 포트 번호입니다.":"URI 的端口号。\r\n","Определяет, зарегистрирован ли заданный моникер в таблице текущих объектов (ROT).":"确定指定的名字对象是否已在当前对象表 (ROT) 中注册。\r\n","Diese Methode gibt einen Verweis auf das erstellte Objekt zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回对已创建对象的引用。此参数未初始化传递。\r\n"," также следует задать.":" 也应该设置。\r\n","Значение true, если заданный объект ":"如果给定对象为真\r\n",", выполняющий сравнения строк без учета регистра, используя правила сравнения строк по словам для текущего языка и региональных параметров.":"一个使用当前区域性的字符串比较规则执行不区分大小写的字符串比较的 。\r\n","Проверяет, преобразованы ли знаки Юникода в наиболее подходящие знаки ANSI.":"Проверяет, преобразованы ли знаки Юникода в наиболее подходящие знаки ANSI。\r\n","Legt den Schutz der Überwachungsregeln fest, die diesem ":"指定此监控规则的保护\r\n"," aus vier Bytes gebildet wird.":" 来自更多字节的数据。\r\n"," недопустимо. -или-Индекс элемента формат меньше 0 (нуля) или больше или равно 3 (три). ":" 不可接受的。 - 或 - 格式元素的索引小于 0（零）或大于或等于 3（三）。\r\n","문자열에 할당된 메모리 블록에 대한 포인터를 나타내는 정수이거나 s가 null인 경우 0입니다.":"一个整数，表示指向为字符串分配的内存块的指针，如果 s 为空，则为 0。\r\n"," равно  ":" 等于\r\n"," с помощь конструктора Version(1,3,5), ToString(2) возвращается строка \"1.3\", а метод ToString(4) вызывает исключение.":" 使用 Version(1,3,5), ToString(2) 构造函数，返回字符串“1.3”，ToString(4) 方法抛出异常。\r\n"," 개체로 래핑된 개체를 가져옵니다.":" 获取包裹在对象中的对象。\r\n","-Enumeration definiert ist.":"枚举被定义。\r\n",", используя значения свойства по умолчанию.":"，使用属性的默认值。\r\n","SCODE를 나타냅니다.":"表示 SCODE。\r\n"," используется в качестве значения добавляемого элемента. ":" 用作添加元素的值。\r\n","Массив частей пути.":"一组路径部分。\r\n","Время ожидания в миллисекундах или ":"以毫秒为单位的超时或\r\n","< 1-бесконечность":"< 1-无穷大\r\n","부호 있는 16비트 정수로 변환할 값입니다.":"要转换为带符号的 16 位整数的值。\r\n","이 메서드가 반환될 때 지정된 항목에 대한 설명서 문자열을 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含指定项目的文档字符串。此参数未初始化传递。\r\n","Значение true, если знаки, следующие за последним разделителем каталога (\\\\ или /) или разделителем тома (:) в пути, включают точку (.), за которой следует один или несколько символов. В противном случае — значение false.":"如果路径中最后一个目录分隔符（\\\\ 或 /）或卷分隔符 (:) 后面的字符包含句点 (.)，后跟一个或多个字符，则为 true。否则，该值为假。\r\n",".Если первый знак в параметре ":".如果参数中的第一个字符\r\n","Указывает, что время ожидания операции ":"指定操作超时\r\n"," 값보다 크거나 같은지를 나타내는 값을 반환합니다.":" 返回一个值，表示大于或等于一个值。\r\n","Stellt eine Wrapperklasse für Betriebssystemhandles dar.Die Klasse muss geerbt werden.":"表示操作系统句柄的包装类。该类必须被继承。\r\n","보다 작은 부호 있는 32비트 정수이므로 반환 값의 범위에는 대개 이 포함되지만 ":"由于是小于 的有符号32位整数，返回值范围通常包括\r\n","Eine Zeichenfolge, die eine .NET Framework-Version identifiziert.":"标识 .NET Framework 版本的字符串。\r\n","Konvertiert einem Array von COM-VARIANTs in ein Objektarray. ":"将 COM VARIANT 数组转换为对象数组。\r\n","Die Zahl ":"号码\r\n","-Objekt, das den Fehler beschreibt.Der Inhalt der ":"-Objekt, das den Fehler beschreibt. Der Inhalt der\r\n"," равно null, то новый ":" 为空，然后是新的\r\n","Konvertiert den angegebenen booleschen Wert in die entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.":"将指定的布尔值转换为等效的 8 位无符号整数。\r\n","래핑하여 VT_CY로 마샬링할 Decimal을 포함하는 개체입니다. ":"包含要包装和封送到VT_CY的十进制的对象。 \r\n",", wenn die Konvertierung nicht ausgeführt werden konnte.Die Konvertierung schlägt fehl, wenn der ":", 如果转换失败. 如果转换失败\r\n","Возвращает абсолютное значение 64-битового целого числа со знаком.":"返回 64 位有符号整数的绝对值。\r\n","Ein Unicode-Zeichen, das ":"一个 Unicode 字符\r\n"," 매개 변수의 값에서 계산된 32비트 부호 있는 해시 코드입니다.":" 根据参数值计算的 32 位带符号哈希代码。\r\n","Вторая строка эквивалентности типов.":"第二行类型等价。\r\n",", а нечисловое значение обозначает ":", 而一个非数值意味着\r\n","Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.":"源数组中从零开始的索引，从这里开始复制。\r\n",", auf die nächste 8-Bit-Ganzzahl mit Vorzeichen gerundet.Wenn ":", 四舍五入到最接近的 8 位有符号整数。如果\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.":"将指定的双精度浮点数的值转换为等效的 64 位无符号整数。\r\n","Определяет индекс заданного элемента в ":"确定给定元素在\r\n","true, wenn geerbte Überwachungsregeln beibehalten werden sollen, false wenn geerbte Überwachungsregeln entfernt werden sollen.Dieser Parameter wird ignoriert, wenn ":"如果应保留继承的监视规则，则为 true；如果应删除继承的监视规则，则为 false。此参数将被忽略，如果\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 64비트 부호 있는 정수 값을 해당하는 문자열 표현으로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定的 64 位有符号整数值转换为其等效的字符串表示形式。\r\n","Entfernt Zugriffsregeln, die dieselbe Sicherheits-ID und dieselbe Zugriffsmaske wie die angegebene Zugriffsregel enthalten, aus der DACL (Discretionary Access Control List), die diesem ObjectSecurity`1-Objekt zugeordnet ist.":"从与此 ObjectSecurity`1 对象关联的自由访问控制列表 (DACL) 中删除包含与指定访问规则相同的安全 ID 和访问掩码的访问规则。\r\n","래핑하여 VT_CY 형식으로 마샬링할 Decimal을 사용하여 ":"使用Decimal以VT_CY格式包装和封送 \r\n","Diese Flags wirken sich auf das Verhalten der Sicherheitsbeschreibung aus.":"这些标志影响安全描述符的行为。\r\n","Выполняет указанный метод конструктора класса.":"执行指定的类构造函数方法。\r\n","URI(Uniform Resource Indentifier)에 대한 사용자 지정 생성자를 제공하고 ":"为统一资源标识符 (URI) 和\r\n",", определяет тип, для которого данный тип является псевдонимом.":", 定义此类型为其别名的类型。\r\n","Вставляет строковое представление 64-разрядного знакового целого числа в данный экземпляр на указанную позицию символа.":"将 64 位带符号整数的字符串表示形式插入此实例中的指定字符位置。\r\n","Включает или отключает поведение наилучшего сопоставления при преобразовании знаков Юникода в знаки ANSI.":"将 Unicode 字符转换为 ANSI 字符时启用或禁用最佳归类行为。\r\n","지정된 개체의 값을 유니코드 문자로 변환합니다.":"将指定对象的值转换为 Unicode 字符。\r\n"," ту же версию платформы .NET Framework, что и указанный экземпляр класса ":" 与指定类实例相同的 .NET Framework 版本\r\n","지정된 8비트 부호 있는 정수의 값을 해당하는 32비트 부호 있는 정수로 변환합니다.":"将指定的 8 位带符号整数的值转换为等效的 32 位带符号整数。\r\n","Данное исключение создается при возникновении ошибки во время сериализации или десериализации.":"当序列化或反序列化过程中发生错误时抛出此异常。\r\n","로 변환할 값입니다.":"要转换为的值。\r\n"," ist kleiner als 0 oder größer als 28. ":" 小于 0 或大于 28。\r\n","Значение true показывает, что режим наилучшего сопоставления включен; в противном случае используется значение false.Значение по умолчанию — true.":"Значение true показывает, что режим наилучшего сопоставления включен; в противном случае используется значение false.Значение по умолчанию — true.\r\n","Значение, которое следует вставить. ":"要插入的值。\r\n","Ruft die aktuellen Stapelüberwachungsinformationen ab.":"获取当前堆栈跟踪信息。\r\n","지정된 16비트 부호 있는 정수 값을 해당하는 10진수로 변환합니다.":"将指定的 16 位带符号整数值转换为其等效的十进制值。\r\n","가 2, 8, 10 또는16이 아닌 경우 ":"不是 2、8、10 或 16\r\n","Строка Среда выполнения Windows.Этот элемент можно использовать для типа данных ":"Windows 运行时字符串。此元素可用于数据类型\r\n","Die Auflistung wurde nach dem Erstellen des Enumerators geändert.":"创建枚举器后修改了集合。\r\n"," enthält ein Nicht-Base-64-Zeichen, mehr als zwei Füllzeichen oder ein Füllzeichen, das kein Leerraumzeichen ist.":" 包含非 base-64 字符、两个以上的填充字符或非空白填充字符。\r\n","Число элементов, которое в действительности содержится в ":"实际包含的元素个数\r\n","형식 라이브러리의 주 버전 번호를 나타냅니다.":"表示类型库的主版本号。\r\n","Ruft einen Wert ab, der die Zahl null (0) darstellt.":"获取表示数字零 (0) 的值。\r\n"," 메서드에서 처음 가져온 ":" 首先从方法中导入\r\n"," 멤버가 null이면 대상 프로세스에서 DeleteMetaFile을 사용하여 비트맵을 삭제해야 합니다.":" 如果该成员为空，则目标进程应使用 DeleteMetaFile 删除位图。\r\n"," 값을 지정된 비트 수만큼 왼쪽으로 이동합니다.":" 将值向左移动指定的位数。\r\n","Возвращает значение по умолчанию для свойства, с которым связан этот атрибут.":"返回与此属性关联的属性的默认值。\r\n","예외에 대한 이유를 나타내는 메시지입니다. ":"指示异常原因的消息。 \r\n"," равняется null.":" 一片空白。\r\n","Возвращаемое 8-разрядное целое число без знака. ":"返回的 8 位无符号整数。\r\n"," 개체 내부에서 포인터를 받기 위해 참조에서 전달하는 바이트 포인터입니다.이 메서드를 호출하기 전에 이 포인터를 null로 설정해야 합니다.":" 通过引用传递的字节指针接收对象内部的指针。在调用此方法之前必须将此指针设置为空。\r\n","로, 참조로 전달됩니다.":", 这是通过引用传递的。\r\n","Считывает заданное число байтов из объекта-потока в память, начиная с текущего указателя поиска.":"从当前搜索指针开始，将指定数量的字节从流对象读入内存。\r\n","의 요소 형식을 나타냅니다.":"表示 的元素类型。\r\n","При возвращении данного метода содержит хэш-значения для этого моникера.Этот параметр передается без инициализации.":"当此方法返回时，包含此名字对象的哈希值。此参数无需初始化即可传递。\r\n","Инициализирует новый экземпляр класса DispIdAttribute, используя указанный идентификатор DISPID.":"使用指定的 DISPID 初始化 DispIdAttribute 类的新实例。\r\n","변수는 이벤트의 소스인 개체를 반환합니다.":"变量返回作为事件源的对象。\r\n"," на указанное число битов вправо.":" 右边指定的位数。\r\n","지정된 IErrorInfo 인터페이스를 기준으로 특정 오류 HRESULT를 사용하여 예외를 throw합니다.":"根据指定的 IErrorInfo 接口，引发具有特定错误 HRESULT 的异常。\r\n","Eine Zeichenfolge, die die Namen von 0 (null) oder mehr Umgebungsvariablen enthält.Jede Umgebungsvariable wird mit dem Prozentzeichen (%) angegeben.":"包含零个或多个环境变量名称的字符串。每个环境变量都用百分号 (%) 指定。\r\n","Возвращает значение, указывающее, равны ли текущий экземпляр и указанное комплексное число.":"返回一个值，该值指示当前实例和指定的复数是否相等。\r\n","-Parameters multipliziert mit -1.":"-参数乘以-1。\r\n",", указывающую, сколько сведений должно содержаться в отрисовке.":"指定渲染中应包含多少信息的 。\r\n","Преобразует заданное логическое значение в эквивалентное 16-битовое целое число со знаком.":"将指定的布尔值转换为等效的 16 位带符号整数。\r\n","파일 이름과 확장명을 가져올 경로 문자열입니다. ":"从中获取文件名和扩展名的路径字符串。\r\n","Dekrementiert einen ":"减一\r\n"," недоступен из COM.":" 无法从 COM 访问。\r\n","Для параметра заданы пользовательские данные.":"该参数设置为用户数据。\r\n","short 정수를 나타냅니다.":"short 代表一个整数。\r\n","Добавляемый объект. ":"要添加的对象。\r\n",", используя значения в массиве байтов.":", используя значения в массиве байтов.\r\n"," entspricht.- oder -  Ein Nullverweis (Nothing in Visual Basic), wenn ":" 匹配。- 或- 空引用（在 Visual Basic 中为 Nothing）如果\r\n","Экземпляр делегата, который может быть приведен к соответствующему типу делегата.":"可以转换为适当委托类型的委托实例。\r\n","복소수의 실수 부분입니다.":"复数的实部。\r\n","Der Member ruft Eigenschaften ab.":"成员检索属性。\r\n","Указатель на переменную ULONG, получающую фактическое число байтов, считанное из объекта потока. ":"指向接收从流对象读取的实际字节数的 ULONG 变量的指针。\r\n","Ruft Flags ab, die angeben, ob die ":"获取指示是否\r\n","Файл или каталог, для которых нужно получить сведения об абсолютном пути. ":"要获取其绝对路径信息的文件或目录。\r\n","제어용 IUnknown으로 작용하는 개체입니다. ":"充当控件的 IUnknown 的对象。\r\n","Высвобождает указатель, полученный методом ":"释放方法接收到的指针\r\n","매핑할 이름 배열입니다. ":"要映射的名称数组。\r\n","Die 16-Bit-Ganzzahl ohne Vorzeichen, die ":"16 位无符号整数\r\n","-Objekt identifiziert.Dieser ACE-Typ enthält möglicherweise optionale Rückrufdaten.Bei den Rückrufdaten handelt es sich um ein spezifisches BLOB des Ressourcen-Managers, das nicht interpretiert wird.":"识别的对象。此 ACE 类型可能包含可选的回调数据。回调数据是资源管理器特定的 BLOB，不被解释。\r\n","이 구조에서 설명하는 인터페이스에 관한 함수의 수를 나타냅니다.":"指示此结构描述的接口上的函数数。\r\n","보다 크거나 같아야 합니다.":"必须大于或等于。\r\n","Копирует указанное число байтов из текущего указателя поиска данного потока в текущий указатель поиска другого потока.":"将指定数量的字节从该流的当前搜索指针复制到另一个流的当前搜索指针。\r\n","Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 64-битовое целое число без знака.":"将指定的单精度浮点数的值转换为其等效的 64 位无符号整数。\r\n","Das eindimensionale Array, aus dem kopiert werden soll.":"要从中复制的一维数组。\r\n","Натуральный (по основанию e) логарифм числа ":"数字的自然（以 e 为底）对数\r\n","지정된 16비트 부호 없는 정수의 값을 해당하는 32비트 부호 없는 정수로 변환합니다.":"将指定的 16 位无符号整数的值转换为等效的 32 位无符号整数。\r\n","Ограничения доступа, заданные ранее для диапазона. ":"先前为该范围设置的访问限制。\r\n",", stattdessen.Der ":", 相反。\r\n","특정 대/소문자 및 문화권 기반 또는 서수 비교 규칙을 사용하는 문자열 비교 연산을 나타냅니다.":"表示使用特定大小写和基于区域性或序号比较规则的字符串比较操作。\r\n","Devuelve el valor de carácter Unicode especificado como una matriz de bytes.":"Devuelve el valor de carácter Unicode especificado como una matrix de bytes。\r\n","Преобразует значение заданного 64-битового целого числа без знака в эквивалентное 8-битовое целое число со знаком.":"将指定的 64 位无符号整数的值转换为等效的 8 位有符号整数。\r\n","메모리의 지정된 위치에 값 형식을 씁니다.":"将值类型写入内存中的指定位置。\r\n","Целое число со знаком, определяющее, как соотносятся между собой данный экземпляр и параметр ":"一个有符号整数，指定此实例和参数如何相互关联\r\n","원하는 요소의 ":"所需元素的\r\n","Matriz de bytes cuya longitud es 2.":"矩阵 de bytes cuya longitud es 2。\r\n"," имеет значение null, или пустая строка, если ":" 为 null，或者如果为空字符串\r\n","Предоставляет сведения о ссылке ":"提供有关链接的信息\r\n","Gibt die Anzeigezeichenfolge für die angegebene ":"返回指定的显示字符串\r\n","Преобразует значение заданного символа Юникода в эквивалентное 32-битовое целое число без знака.":"将指定 Unicode 字符的值转换为其等效的 32 位无符号整数。\r\n","Stellt einen Zugriffssteuerungseintrag (ACE – Access Control Entry) dar, der einen Qualifizierer enthält.Der durch ein ":"表示包含限定符的访问控制条目 (ACE)\r\n","-Klasse mit den Angaben für Schema, Host und Anschluss.":"包含方案、主机和端口规范的类。\r\n",", являющееся значением по умолчанию. ":", 这是默认值。\r\n","Bei Daten-Advise-Verbindungen (":"对于数据建议连接（\r\n","Eine 2-Byte-Ganzzahl mit Vorzeichen.":"一个 2 字节的有符号整数。\r\n"," 값이 다른지를 나타내는 값을 반환합니다.":" 返回一个值，表示值是否不同。\r\n"," gibt keine Position in ":" 没有给出任何位置\r\n","Записывает заданное число байтов в объект-поток, начиная с текущего указателя поиска.":"从当前搜索指针开始，将指定数量的字节写入流对象。\r\n","-Klasse definierten Typ enthält. ":"类包含定义的类型。\r\n","-Struktur frei, die zuvor von der ":"-无结构，以前由\r\n","Определяет методы, используемые для управления универсальными коллекциями.":"定义用于管理通用集合的方法。\r\n","Eine Gleitkommazahl mit doppelter Genauigkeit, die größer oder gleich 0,0 und kleiner als 1,0 ist.":"大于或等于 0.0 且小于 1.0 的双精度浮点数。\r\n",".Muss eine formatierte Klasse sein.":".必须是格式化的类。\r\n","Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное число с плавающей запятой одиночной точности.":"将指定的 32 位带符号整数的值转换为其等效的单精度浮点数。\r\n","Schreibt einen Werttyp an der angegebenen Position in den Arbeitsspeicher.":"将值类型写入内存的指定位置。\r\n","Включить любой путь, который был явно добавлен в путь поиска по всему процессу с помощью функции Win32 AddDllDirectory. ":"包括已使用 AddDllDirectory Win32 函数显式添加到进程范围搜索路径的任何路径。\r\n","-Methode freigegeben werden.":"要释放的方法。\r\n","형식을 설명하는 ":"描述格式\r\n","-Klasse mit den Typen, die als Quellschnittstellen verwendet werden sollen.":"包含用作源接口的类型的类。\r\n","-Schnittstelle erforderlich ist.":"接口是必需的。\r\n","발견된 항목에 대한 MEMBERID의 배열 ":"找到的项目的 MEMBERID 数组\r\n","Das gespeicherte ":"保存的\r\n","Ein Wert, der den Punkt angibt, bei dem Erfassungen auftreten müssen.Dieser muss auf die maximale Anzahl verfügbarer Handles festgelegt werden.":"指示采集必须发生的点的值。这必须设置为可用句柄的最大数量。\r\n","Ruft den Anzeigenamen ab, der eine für den Benutzer lesbare Darstellung des aktuellen Monikers ist.":"获取显示名称，它是当前名字对象的人类可读表示形式。\r\n","Извлекает адреса статических функций и переменных, определенных в библиотеке DLL.":"检索 DLL 中定义的静态函数和变量的地址。\r\n","이 핸들이 나타나는 개체입니다.":"显示此句柄的对象。\r\n","Konvertiert den Wert der angegebenen Dezimalzahl in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.":"将指定十进制数的值转换为等效的单精度浮点数。\r\n","Задает режим отладки для JIT-компилятора.":"指定 JIT 编译器的调试模式。\r\n","형식 라이브러리에 대한 대상 운영 체제는 16비트 Windows 시스템입니다.기본적으로 데이터 필드는 패킹됩니다.":"类型库的目标操作系统是 16 位 Windows 系统，默认情况下，数据字段是打包的。\r\n"," ohne Escapesequenzen.":" 没有转义序列。\r\n","Rundet einen Dezimalwert auf die angegebene Anzahl von Bruchziffern.Ein Parameter gibt an, wie der Wert gerundet wird, wenn er genau zwischen zwei Zahlen liegt.":"Rounds a decimal value to the specified number of fractional digits. 参数指定如果值恰好在两个数字之间时如何舍入。\r\n","Der Dispatchbezeichner der Methode für die Quellschnittstelle.":"源接口方法的调度标识符。\r\n","Значение HRESULT, сопоставленное с заданным исключением.":"与给定异常关联的 HRESULT。\r\n"," меньше или равно 64-разрядному целому числу со знаком.":" 小于或等于 64 位有符号整数。\r\n","함수에 액세스하는 방법을 정의합니다.":"定义如何访问函数。\r\n","Ссылка на этот экземпляр после завершения вставки.":"粘贴完成后对此实例的引用。\r\n",", dem ein ACE hinzugefügt werden soll.":"添加一个 ACE。\r\n","Значение true при получении сигнала текущим экземпляром; в противном случае — значение false.":"当前实例接收到信号时为真；否则，假的。\r\n","Der zu negierende Wert.":"要取反的值。\r\n","Der Name dieses Members.":"这个成员的名字。\r\n"," definiert sind. ":" 被定义。\r\n"," минус 3 и меньше или равно длине параметра ":" -3 且小于或等于参数长度\r\n"," вместе со значением длительности ":" 连同持续时间值\r\n","Ein eindeutiger RCW für die angegebene IUnknown-Schnittstelle.":"指定 IUnknown 接口的唯一 RCW。\r\n"," перед чтением.":" 读之前。\r\n"," в байтовое значение без знака.":" 到无符号字节值。\r\n","Возвращает тип, который должен распознаваться при сериализации или десериализации ":"返回在序列化或反序列化期间要识别的类型\r\n","Dividiert einen angegebenen ":"除给定\r\n","Ruft den Fehlercode des Wrappers ab.":"获取包装器的错误代码。\r\n","Это необязательный параметр.":"这是一个可选参数。\r\n","Die Anzahl der zuzuordnenden Namen. ":"要匹配的名称的数量。\r\n","Угол, представляющий собой арксинус параметра ":"表示参数反正弦的角度\r\n",", округленное до ближайшего 64-разрядного знакового целого числа.Если ":", 四舍五入到最接近的 64 位有符号整数。如果\r\n"," 참조입니다.":" 参考。\r\n","-Datentyp und den ":"- 数据类型和\r\n","복소수입니다.":"它是一个复数。\r\n","Gibt die Größe der BIND_OPTS-Struktur in Bytes an.":"指定 BIND_OPTS 结构的大小（以字节为单位）。\r\n","Der gültige CLR-Namespace eines Typs.":"Der gültige CLR-Namespace eines Types。\r\n","Предоставляет управляемое определение интерфейса IStream с функциональными возможностями ISequentialStream.":"提供具有 ISequentialStream 功能的 IStream 接口的托管定义。\r\n",", используя указанное пространство имен. ":", используя указанное пространство имен。\r\n","Тип ключей в словаре, доступном только для чтения. ":"只读字典中键的类型。\r\n","Der kleinere der Parameter ":"参数中较小的\r\n","플랫폼에 종속적인 부호 없는 정수로, 32비트 Windows의 경우 4바이트이고 64비트 Windows의 경우 8바이트입니다.":"平台相关的无符号整数，在 32 位 Windows 上为 4 个字节，在 64 位 Windows 上为 8 个字节。\r\n","Показывает SAFEARRAY.Не допустимо для значений типа VARIANT.":"指示 SAFEARRAY。对 VARIANT 值无效。\r\n","Значение true, если в текущем наборе и объекте ":"如果在当前集合和对象中则为真\r\n","Die Adresse des freizugebenden BSTR. ":"要释放的 BSTR 的地址。\r\n"," ist kein erkanntes Format.- oder - ":" 不是公认的格式。-或-\r\n","의 숫자에 해당하는 64비트 부호 있는 정수이거나, ":"是一个 64 位有符号整数，等于\r\n","Функции, поддерживающие привязку данных.":"支持数据绑定的函数。\r\n","Gibt eine Zufallsganzzahl zurück, die in einem angegebenen Bereich liegt.":"返回指定范围内的随机整数。\r\n","Gibt an, dass keine Vererbungsflags festgelegt sind.":"指示未设置继承标志。\r\n","-Parameter null ist oder nicht im korrekten Format vorliegt.Dieser Parameter wird nicht initialisiert übergeben.":"参数为空或格式不正确。此参数未初始化传递。\r\n","Указатель интерфейса, представляющий интерфейс ":"表示接口的接口指针\r\n"," Instanz und setzt die ":" 实例并设置\r\n","Verwaltet die Definition der IEnumVARIANT-Schnittstelle.":"管理 IEnumVARIANT 接口的定义。\r\n","지정된 64비트 부호 있는 정수의 값을 해당하는 16비트 부호 없는 정수로 변환합니다.":"将指定的 64 位带符号整数的值转换为等效的 16 位无符号整数。\r\n"," различные версии платформы .NET Framework.":" .NET Framework 的不同版本。\r\n","비교할 두 개의 16비트 부호 있는 정수 중 두 번째 숫자입니다. ":"要比较的两个 16 位有符号整数中的第二个。\r\n"," указывают не один и тот же объект, если параметры ":" 如果参数不指定相同的对象\r\n","Добавляет ключ в таблицу.":"向表中添加一个键。\r\n","이전에 범위에 배치된 액세스 제한입니다. ":"先前对范围设置的访问限制。\r\n","[Поддерживается только в .NET Framework 4.5.1 и более поздних версиях] Преобразует указатель на неуправляемую функцию в делегат указанного типа. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 将非托管函数指针转换为指定类型的委托。\r\n","데이터 advise 연결(":"数据建议连接（\r\n","Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 32-битовое целое число без знака.":"将指定的 32 位带符号整数的值转换为其等效的 32 位无符号整数。\r\n","Значение, которое необходимо преобразовать в 32-разрядное целое число без знака.":"要转换为无符号 32 位整数的值。\r\n","Stellt einen benutzerdefinierten Konstruktor für URIs (Uniform Resource Identifier) bereit und ändert URIs für die ":"为统一资源标识符 (URI) 提供自定义构造函数并修改 URI\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 8비트 부호 없는 정수로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为 8 位无符号整数。\r\n","Gibt den Logarithmus einer angegebenen komplexen Zahl zu einer angegebenen Basis zurück.":"返回指定底数中指定复数的对数。\r\n","값 매개 변수에 해당하는 새 ":"值参数对应的New \r\n","Vergleicht den aktuellen Moniker mit einem angegebenen Moniker und gibt an, ob diese identisch sind.":"将当前名字对象与指定名字对象进行比较，并指示它们是否相同。\r\n","COM 개체에서 이벤트를 트리거하기 위해 사용하는 소스 인터페이스의 식별자입니다. ":"COM对象用于触发事件的源接口的标识符。 \r\n","그 뒤에 스트림 이름이 나온다는 것을 나타냅니다.":"表示它后面是流名称。\r\n","Первая ячейка таблицы виртуальных функций (VTBL), содержащая методы, определенные пользователем.Первая ячейка содержит значение 3, если интерфейс основан на интерфейсе IUnknown, или значение 7, если он основан на интерфейсе IDispatch.":"包含用户定义方法的虚函数表 (VTBL) 的第一个单元格。如果接口基于 IUnknown 接口，则第一个单元格包含值 3，如果它基于 IDispatch 接口，则包含值 7。\r\n","Возвращает элемент коллекции, соответствующий текущей позиции перечислителя.":"返回对应于枚举器当前位置的集合元素。\r\n","Показывает, что требуется маршалинг данных из вызываемого объекта в вызывающий.":"指示需要将数据从被调用方封送至调用方。\r\n","지정된 수를 지정된 다른 수로 나눈 나머지를 반환합니다.":"返回指定数字除以另一个指定数字的余数。\r\n","-Parameter ist, andernfalls S_FALSE.":"否则参数为 S_FALSE。\r\n","null이 아니면 함수는 진입점의 이름을 포함하는 BSTR에 ":"如果非空，该函数将写入包含入口点名称的 BSTR。\r\n","Entfernt alle Zugriffsregeln, die dieselbe Sicherheits-ID und denselben Qualifizierer wie die angegebene Zugriffsregel in der DACL (Discretionary Access Control List) enthalten, die diesem ":"删除所有包含与此后的自由访问控制列表 (DACL) 中的指定访问规则相同的安全 ID 和限定符的访问规则\r\n","Erstellt einen neuen Enumerator, der den gleichen Enumerationszustand wie der aktuelle Enumerator enthält.":"创建一个新的枚举器，它包含与当前枚举器相同的枚举状态。\r\n","Die Rückgabe dieser Methode enthält einen ":"此方法的返回包含一个\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 64 位无符号整数的值转换为等效的 32 位无符号整数。\r\n","Diese Methode gibt einen Verweis auf die Struktur zurück, die die Attribute dieser Typbeschreibung enthält.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回对包含此类型描述的属性的结构的引用。此参数未初始化传递。\r\n","Получает подпись другой стороны для строгого имени для этой сборки.":"获取对方对此程序集强名称的签名。\r\n","Stellt die verwaltete Definition der IConnectionPoint-Schnittstelle bereit.":"提供 IConnectionPoint 接口的托管定义。\r\n","Die DACL für dieses ":"这个的DACL\r\n","개체의 새로운 전체 모니커에 있는 IMoniker 인터페이스에 대한 포인터입니다.":"指向对象的新完整名字对象上的 IMoniker 接口的指针。\r\n","인식할 수 없는 HRESULT가 COM 메서드 호출에서 반환되면 예외가 throw됩니다.":"如果从COM方法调用返回无法识别的HRESULT，则会引发异常。\r\n",", используя указанную емкость.":"使用指定的容量。\r\n","Показывает тип интерфейса класса, создаваемого для класса, представленного для COM, если интерфейс создается.":"如果生成接口，则指示为暴露给 COM 的类生成的类的接口类型。\r\n","Метка окончания перечисления.":"枚举结束标签。\r\n","1-байтовое целое число без знака.":"一个 1 字节的无符号整数。\r\n","Возвращает случайное целое число в указанном диапазоне.":"返回指定范围内的随机整数。\r\n","Die SACL für das neue ":"新的 SACL\r\n","Eine Gruppe von Enumeratoren.":"枚举器的组。\r\n","Возвращает натуральный логарифм (с основанием e) указанного числа.":"返回指定数字的自然对数（以 e 为底）。\r\n","Возвращает указанное значение с плавающей запятой с обычной точностью в виде массива байтов.":"以字节数组的形式返回具有正常精度的指定浮点值。\r\n","Entfernt alle Überwachungsregeln für die angegebene Sicherheits-ID aus der diesem ":"从此删除指定安全 ID 的所有审核规则\r\n","-Parameter übersteigt die vom Betriebssystem zugelassene maximale Länge.":"- 参数超过操作系统允许的最大长度。\r\n","Контролирует запуск поиска имен точек входа помимо заданной точки в неуправляемой динамической библиотеке (DLL), выполняемого средой CLR, полем ":"控制公共语言运行时 (CLR) 在非托管动态链接库 (DLL) 中搜索指定入口点以外的入口点是否由该字段触发\r\n","Stellt einen Zeiger auf die IUnknown-Schnittstelle für eine verbundene Advisesenke dar.Wenn die CONNECTDATA-Struktur nicht mehr benötigt wird, muss der Aufrufer für diesen Zeiger IUnknown::Release aufrufen.":"Represents a pointer to the IUnknown interface for a connected advise sink. 当不再需要 CONNECTDATA 结构时，调用者必须对该指针调用 IUnknown::Release。\r\n","는 IDispatch를 지원하지 않습니다. ":"不支持IDispatch。 \r\n","지정된 32비트 부호 있는 정수의 값을 해당하는 64비트 부호 있는 정수로 변환합니다.":"将指定的 32 位带符号整数的值转换为等效的 64 位带符号整数。\r\n","메모리를 할당할 값 형식입니다.":"要为其分配内存的值类型。\r\n","Задает направление потока данных в параметре ":"指定参数中数据流的方向\r\n","Verwaltet die Definition der IEnumMoniker-Schnittstelle.":"管理 IEnumMoniker 接口的定义。\r\n","URI용으로 생성된 해시 코드입니다.":"为 URI 生成的哈希码。\r\n","Schreibt den Wert einer 64-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset in den nicht verwalteten Speicher.":"将 64 位带符号整数的值写入指定偏移量的非托管内存。\r\n"," 값과 부호 없는 정수(Long) 값이 같은지를 나타내는 값을 반환합니다.":" 返回一个值，该值指示一个值和一个无符号长整型值是否相等。\r\n","Die zweite von zwei zu vergleichenden 64-Bit-Ganzzahlen mit Vorzeichen. ":"要比较的两个 64 位有符号整数中的第二个。\r\n","Содержит описание типа и сведения о процессе передачи для переменной, функции или параметра функции.":"包含有关变量、函数或函数参数的传递过程的类型和信息的描述。\r\n",", für die diese Regel gilt.":"，适用此规则。\r\n"," 주소입니다.":" 地址。\r\n","지정된 체계, 호스트, 포트 번호, 경로 및 쿼리 문자열이나 단편 식별자를 사용하여 ":"使用指定的方案、主机、端口号、路径和查询字符串或片段标识符。\r\n","-Objekt zugeordnete SACL eine kanonische Reihenfolge aufweist, andernfalls false.":"- 对象关联的 SACL 具有规范顺序，否则为假。\r\n","Индекс типа реализации для пользовательских данных. ":"用户数据的实现类型索引。\r\n","Gibt das Vererbungs- und Überwachungsverhalten eines Zugriffssteuerungseintrags (ACE) an.":"指定访问控制项 (ACE) 的继承和审计行为。\r\n","Eine vorzeichenlose 16-Bit-Ganzzahl, die beginnend bei ":"一个 16 位无符号整数，起始于\r\n","Строка, представляющая имя члена.":"表示成员名称的字符串。\r\n","을 구문 분석할 때 사용한 문자 수를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"包含解析时使用的字符数。此参数未初始化传递。\r\n","Преобразует значение заданного объекта в эквивалентное 64-битовое целое число со знаком, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用指定的区域性特定格式设置信息将指定对象的值转换为其等效的 64 位带符号整数。\r\n","Obtient un nombre qui indique le signe (négatif, positif ou zéro) de l'objet ":"Obtient un nombre qui indique le signe (négatif, positif ou zero) de l'objet\r\n","Преобразует значение заданного объекта в объект ":"将给定对象的值转换为对象\r\n","Die DISPID des Members.":"成员的 DISPID。\r\n"," ist eine Zeichenfolge, die nicht gleich":" 是一个不相等的字符串\r\n","Получает заданный параметр пользовательских данных.":"获取指定的用户数据设置。\r\n","Считывает из неуправляемой памяти 32-битное целое число со знаком.":"从非托管内存中读取 32 位有符号整数。\r\n","Überprüft eine vorhandene ":"检查现有的\r\n"," des sicherungsfähigen Objekts ab, das diesem ":" 这个安全对象的\r\n","지정된 64비트 부호 없는 정수의 값을 해당하는 16비트 부호 없는 정수로 변환합니다.":"将指定的 64 位无符号整数的值转换为等效的 16 位无符号整数。\r\n"," festgelegte Art von Member angibt. ":" 指定类型的成员。\r\n"," nächste Ganzzahl.Wenn ":" 下一个整数.if\r\n"," 개체에 대한 식별자입니다.":" 对象的标识符。\r\n","Gibt alle Verweise auf einen Runtime Callable Wrapper (RCW) (RCW) durch Festlegen des Verweiszählers auf 0 frei.":"通过将引用计数设置为 0，释放对运行时可调用包装器 (RCW) (RCW) 的所有引用。\r\n","-Objekts gültige Werte enthalten.":"-对象包含有效值。\r\n","Die zu schreibende Basisadresse im nicht verwalteten Speicher.":"要写入的非托管内存中的基址。\r\n","Eine zu rundende Gleitkommazahl mit doppelter Genauigkeit. ":"要舍入的双精度浮点数。\r\n","수정된 경로 정보입니다.Windows 기반 데스크톱 플랫폼에서 ":"修改的路径信息。在基于 Windows 的桌面平台上。\r\n","Начальный индекс внутри ":"里面开始索引\r\n","Ruft Marshallinformationen ab.":"获取编组信息。\r\n","Имя типа, на который указывает параметр ":"参数指向的类型的名称\r\n","Beendet die Zeitintervallmessung, setzt die verstrichene Zeit auf 0 (null) zurück, und startet die Messung der verstrichenen Zeit.":"停止时间间隔测量，将经过时间重置为 0（零），然后开始经过时间测量。\r\n","Die zu konvertierende Zahl. ":"Die zu konvertierende Zahl。\r\n","은 내부 정수 표현을 사용하여 저장됩니다.":"使用内部整数表示存储。\r\n"," 메서드를 통해 이전에 설치된 권장된 연결을 종료합니다":" 关闭之前通过方法安装的推荐连接\r\n","Тип создаваемого объекта.Этот объект должен представлять форматированный класс или структуру.":"要创建的对象的类型。此对象必须表示格式化的类或结构。\r\n","Konvertiert den Wert des angegebenen Objekts in eine 32-Bit-Ganzzahl mit Vorzeichen.":"将指定对象的值转换为 32 位有符号整数。\r\n","Описание сборки. ":"组装说明。\r\n","Значение равно true, если тип доступен для COM; в противном случае — значение false.Значение по умолчанию — true.":"如果类型对 COM 可用，则值为真；否则为 false。默认值为 true。\r\n","ITypeLib 인터페이스의 관리되는 정의를 제공합니다.":"提供 ITypeLib 接口的托管定义。\r\n","coclass의 이 멤버는 구현되는 것이 아니라 호출됩니다.":"coclass 的这个成员被调用而不是实现。\r\n","; например: \"7F-2C-4A-00\".":";例如：“7F-2C-4A-00”。\r\n","Gibt den Namen oder die Ordnungszahl des aufzurufenden DLL-Einstiegspunktes an.":"指定要调用的 DLL 入口点的名称或序号。\r\n","Значение HRESULT, соответствующее нужному исключению.":"与所需异常对应的 HRESULT。\r\n","의 사용자 정의 요소 형식을 나타냅니다.":"表示用户定义的元素类型\r\n"," возвращает null.Если параметр ":" 返回 null。如果参数\r\n","-Klasse mit dem Decimal, das umfasst und als Typ VT_CY gemarshallt werden soll.":"类与 Decimal 包含和编组为类型 VT_CY 。\r\n","의 숫자에 해당하는 8비트 부호 있는 정수이거나, ":"是一个 8 位有符号整数，等于\r\n","Die 64-Bit-Ganzzahl mit Vorzeichen für den Vergleich.":"要比较的 64 位有符号整数。\r\n","백슬래시로 끝나는 임시 폴더 경로입니다.":"以反斜杠结尾的临时文件夹路径。\r\n","에 해당하는 64비트 부호 있는 정수입니다.":"一个 64 位有符号整数等同于\r\n","검색할 개체의 이름입니다. ":"要检索的对象的名称。\r\n","Преобразует COM VARIANT в объект.":"将 COM VARIANT 转换为对象。\r\n","Возвращает значение, определяющее, равны ли текущий экземпляр и указанный объект.":"获取一个值，该值指示当前实例和指定对象是否相等。\r\n","Длинное целое число со знаком, представляющее значение счетчика тактов базового механизма таймера.":"一个带符号的长整数，表示底层定时器时钟周期计数器的值。\r\n",".Das Verwenden von ClassInterfaceType.None ist die einzige Möglichkeit, Funktionen über Schnittstellen verfügbar zu machen, die von der Klasse explizit implementiert werden.":".Using ClassInterfaceType.None 是通过类显式实现的接口公开功能的唯一方法。\r\n","Строка URI. ":"URI 字符串。\r\n","Уменьшает значение ":"降低价值\r\n","Obtiene o establece el valor asociado al miembro de enumeración al que se aplica el atributo. ":"Obtiene o establece el valor asociado al miembro de enumeración al que se aplica el atributo。\r\n"," больше или равно другому значению типа ":" 大于或等于另一个类型值\r\n"," = +бесконечностьNaN":" = +infinityNaN\r\n","При возвращении данного метода содержит строку, задающую полное имя файла справки.Этот параметр передается без инициализации.":"当此方法返回时，包含一个字符串，指定帮助文件的全名。此参数无需初始化即可传递。\r\n","Маршалирует данные из управляемого объекта в неуправляемый блок памяти.":"将数据从托管对象编组到非托管内存块。\r\n","부호 없는 64비트 정수가 ":"64 位无符号整数\r\n","Функция не должна быть доступной для макроязыков.Этот флаг предназначен для функций системного уровня или функций, которые не должны отображаться обозревателями типов.":"该函数不应该对宏语言可用。此标志用于系统级函数或不应由类型浏览器公开的函数。\r\n","Возвращает или задает максимальное число знаков, которое может содержаться в памяти, назначенной текущим экземпляром.":"获取或设置当前实例分配的内存中可以包含的最大字符数。\r\n"," больше или равно значению 64-битового целого числа со знаком.":" 大于或等于 64 位有符号整数的值。\r\n"," wurde an ":" 在\r\n","Der Wert des aktuellen, in ein Bytearray konvertierten ":"当前转换为字节数组的值\r\n","Ein Wert, der an nicht verwalteten Code übergeben werden kann, der mit diesem Wert wiederum den zugrunde liegenden verwalteten Delegaten aufrufen kann. ":"可以传递给非托管代码的值，非托管代码又可以使用该值调用基础托管委托。\r\n","Константа, используемая с полями ":"与字段一起使用的常量\r\n","Stellt eine Zugriffssteuerungsliste (ACL) dar und ist die Basisklasse für die Klassen ":"表示访问控制列表 (ACL) 并且是类的基类\r\n","과 동일한 방식으로 액세스됩니다.":"以相同的方式访问\r\n","현재 환경 및 플랫폼에 대한 정보 및 조작 방법을 제공합니다.이 클래스는 상속될 수 없습니다.":"提供有关当前环境和平台的信息和操作。此类不能被继承。\r\n"," 개체의 허수 구성 요소를 가져옵니다.":" 获取对象的虚部。\r\n","사인을 적용했을 때 지정된 숫자가 나오는 각도를 반환합니다.":"返回应用于正弦时获得指定数字的角度。\r\n","Ein S_OKHRESULT-Wert, wenn der angegebene Schlüssel erfolgreich aus der Tabelle entfernt wurde; andernfalls ein S_FALSEHRESULT-Wert.":"如果指定的键已成功从表中删除，则为 S_OKHRESULT 值；否则，一个 S_FALSEHRESULT 值。\r\n","Возвращает 64-битовое целое число со знаком, преобразованное из восьми байт с указанной позицией в массив байтов.":"返回从指定位置的八个字节转换为字节数组的 64 位有符号整数。\r\n"," 인터페이스를 구현하지 않는 경우또는변환이 지원되지 않는 경우 ":" 不实现接口或不支持转换\r\n",", в виде объекта ":", 作为一个对象\r\n","핸들이 반환되는 구현된 형식의 인덱스입니다. ":"从中返回句柄的已实现类型的索引。\r\n","Das eindimensionale Array, aus dem kopiert werden soll. ":"要从中复制的一维数组。\r\n","Возвращает смещение поля для неуправляемой формы управляемого класса.":"获取托管类的非托管形式的字段偏移量。\r\n","은(는) ":"是\r\n","При возвращении данного метода содержит ссылку на элемент static.Этот параметр передается без инициализации.":"当此方法返回时，包含对静态元素的引用。此参数无需初始化即可传递。\r\n","Stellt die Handletypen dar, die von der ":"代表使用的句柄类型\r\n","Eine Gesamtmenge aller Member, die einen Offset von 0 aufweisen.":"偏移量为0的所有成员的总集合。\r\n","Auf die Variable kann nur anhand von IDispatch::Invoke zugegriffen werden.":"该变量只能由IDispatch::Invoke访问。\r\n","Gibt die maximal zulässige Länge eines opaken Daten-BLOBs für Rückruf-ACEs (Access Control Entry – Zugriffssteuerungseintrag) zurück.":"返回回调访问控制条目 (ACE) 的不透明数据 blob 的最大允许长度。\r\n","에서 이해할 수 있을 만큼 지정된 표시 이름의 문자를 읽고, 읽은 부분에 해당하는 모니커를 빌드합니다.":"尽可能多地读取指定显示名称的字符，并构建与读取的部分对应的名字对象。\r\n","변환할 개체의 형식입니다. ":"要转换的对象类型。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.":"将指定的单精度浮点数的值转换为等效的 64 位无符号整数。\r\n","두 복소수가 같은지 여부를 나타내는 값을 반환합니다.":"返回一个值，该值指示两个复数是否相等。\r\n"," является отрицательным числом. ":" 是一个负数。\r\n","Flags, die angeben, ob der ":"标志，指示是否\r\n"," получил сигнал. В противном случае возврат из метода не происходит.":" 收到信号。否则，该方法不返回。\r\n","Ein Bytearray mit der Länge 8.":"Ein Bytearray mit der Lange 8。\r\n","데이터를 마샬링할 ":"整理数据\r\n","Вставляет строковое представление указанного подмассива символов Юникода в данный экземпляр на указанную позицию символа.":"将指定的 Unicode 字符子数组的字符串表示形式插入此实例的指定字符位置。\r\n","Legt den Enumerator auf seine anfängliche Position vor dem ersten Element in der ":"将枚举数设置到它在第一个元素之前的初始位置\r\n","Первое из двух сравниваемых чисел двойной точности с плавающей запятой. ":"要比较的两个双精度浮点数中的第一个。\r\n","Ruft zum URI gehörende Abfrageinformationen ab oder legt diese fest.":"获取或设置与 URI 关联的查询信息。\r\n","Число элементов, пропускаемых при перечислении.":"枚举中要跳过的元素数。\r\n","Typ des neuen Zugriffssteuerungseintrags (ACE).Dieser Wert muss größer als ":"新访问控制条目 (ACE) 的类型。该值必须大于\r\n","64-разрядное целое число без знака, которое эквивалентно значению параметра ":"与参数值等价的 64 位无符号整数\r\n","을 할당하고, 관리되지 않는 ANSI 문자열에서 지정된 수의 문자를 해당 개체로 복사한 다음 각 ANSI 문자를 유니코드로 확장합니다.":"，将指定数量的字符从非托管 ANSI 字符串复制到该对象中，然后将每个 ANSI 字符扩展为 Unicode。\r\n","이 메서드가 반환될 때 지정된 항목의 이름을 나타내는 BSTR를 포함합니다.호출자에 항목 이름이 필요하지 않은 경우 ":"当此方法返回时，包含一个表示指定项目名称的 BSTR。如果调用者不需要项目名称\r\n","Добавляет делегат в список вызова источника событий, поступающих из COM-объекта.":"将委托添加到来自 COM 对象的事件源的调用列表。\r\n","작업의 성공이나 실패를 나타내는 HRESULT 값입니다. ":"指示操作成功或失败的 HRESULT 值。\r\n","Schreibt den Wert einer 16-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset in den nicht verwalteten Speicher.":"将 16 位带符号整数的值写入指定偏移量处的非托管内存。\r\n","ist, d. h. der Bereich der Rückgabewerte umfasst ":"是，我。 H。包括返回值范围\r\n","Die Anzahl von Bytes, die in den Stream geschrieben werden soll. ":"要写入流的字节数。\r\n","Символ, который необходимо добавить. ":"要添加的字符。\r\n","4-байтовое логическое значение (true != 0, false = 0).Это тип BOOL платформы Win32.":"一个 4 字节的布尔值 (true != 0, false = 0)。这是 Win32 平台类型 BOOL。\r\n",".Der Aufrufer besitzt keine Zugriffsberechtigung für den Member.":".调用者没有访问成员的权限。\r\n","인터페이스가 초기 바인딩 및 런타임에 바인딩 모두를 사용하는 이중 인터페이스로 COM에 노출됨을 나타냅니다.기본값은 ":"指示该接口作为同时使用初始绑定和运行时绑定的双接口暴露给COM。默认值为 \r\n","true, wenn der Handlewert ungültig ist, andernfalls false.":"如果句柄值无效，则为 true，否则为 false。\r\n","Der vollständige Name dieses ":"这个的全名\r\n","지정된 8비트 부호 있는 정수 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.":"将指定的 8 位带符号整数值转换为等效的单精度浮点数。\r\n","Содержит статистические данные об открытом хранилище, потоке или объекте массива байтов.":"包含有关打开的存储、流或字节数组对象的统计信息。\r\n","Die 32-Bit-Ganzzahl mit Vorzeichen, die aus dem nicht verwalteten Speicher gelesen wurde.":"从非托管内存中读取的 32 位有符号整数。\r\n","데이터를 serialize 또는 deserialize할 때 사용된 형식의 ":"序列化或反序列化数据时使用的格式。\r\n","Gibt an, dass das Handle von untergeordneten Prozessen geerbt werden kann.":"Gibt an, dass das Handle von untergeordneten Prozessen geerbt werden kann。\r\n","advise 싱크에 대한 대상 데이터의 ":"建议汇的目标数据。\r\n","Ein Verweis auf den Moniker, der sich links vom aktuellen Moniker befindet, wenn der aktuelle Moniker ein Teil eines zusammengesetzten Monikers ist. ":"如果当前名字对象是复合名字对象的一部分，则对当前名字对象左侧的名字对象的引用。\r\n",", метод возвращает значение ":", 该方法返回一个值\r\n","Строка знаков, зависящая от платформы: ANSI для Windows 98 и Юникод для Windows NT и Windows XP.Это значение поддерживается только для вызова неуправляемого кода и не используется для COM-взаимодействия, поскольку экспортирование строки типа LPTStr не поддерживается.":"Platform-specific string string: ANSI for Windows 98 and Unicode for Windows NT and Windows XP. 此值仅支持平台调用，不用于 COM 互操作，因为不支持导出 LPTStr 类型的字符串。\r\n","Возвращаемое 16-разрядное знаковое целое число. ":"返回的 16 位有符号整数。\r\n","Идентификатор элемента, для которого возвращается документация. ":"返回文档的元素的 ID。\r\n","Die Zahl, deren Logarithmus bestimmt werden soll.":"要确定其对数的数。\r\n","Ein Zeiger auf ein COM-VARIANT. ":"指向 COM VARIANT 的指针。\r\n","Stellt Rückgabewerte für die ":"为\r\n"," является типом Среда выполнения Windows.":" 是 Windows 运行时类型。\r\n","Указывает на использование для данного метода соглашения о вызове MSC Pascal (MSCPASCAL).":"指示 MSC Pascal (MSCPASCAL) 调用约定用于此方法。\r\n","지정된 복소수의 하이퍼볼릭 코사인을 반환합니다.":"返回指定复数的双曲余弦值。\r\n","Der Typ des Objekts, in das die Daten kopiert werden sollen.Dies muss eine formatierte Klasse oder eine Struktur sein .":"将数据复制到的对象类型。这必须是格式化的类或结构。\r\n","Возвращает значение, указывающее, включена ли сборка мусора на сервере.":"获取一个值，该值指示是否在服务器上启用了垃圾回收。\r\n","Der Typ des Arrays. ":"数组的类型。\r\n","이 메서드가 반환될 때 도움말 파일의 정규화된 이름을 나타내는 문자열을 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含一个表示帮助文件的完全限定名称的字符串。此参数未初始化传递。\r\n","지정된 16비트 부호 있는 정수 값을 해당하는 문자열 표현으로 변환합니다.":"将指定的 16 位带符号整数值转换为其等效的字符串表示形式。\r\n","Das Objekt, das das ":"那个对象\r\n","Die Methode gibt den Objektschnittstellenzeiger zurück.Dieser Parameter wird nicht initialisiert übergeben.":"该方法返回对象接口指针。此参数未初始化传递。\r\n"," der Klasse ab.":" 班上。\r\n","Die Zeichenfolgendarstellung einer Zahl.":"数字的字符串表示形式。\r\n","Количество собранных дескрипторов.":"收集的描述符数。\r\n","별개의 바인딩 가능한 속성으로 매핑되었습니다.":"映射为单独的可绑定属性。\r\n"," 인스턴스가 지정된 개체와 같은 .NET Framework 버전을 표시하는지 여부를 나타내는 값을 반환합니다.":" 返回一个值，该值指示实例是否表示与指定对象相同的 .NET Framework 版本。\r\n","Возвращаемое число с плавающей запятой двойной точности. ":"返回的双精度浮点数。\r\n","Die ID der Memberfunktion, deren Beschreibung des DLL-Eintrags zurückgegeben werden soll. ":"要返回其 DLL 条目描述的成员函数的 ID。\r\n","Eine Zeichenfolge.":"一个字符串。\r\n","Gibt die Typbeschreibung an, an die gebunden wird.":"指定要绑定到的类型描述。\r\n","Недостаточно памяти для выполнения запроса.":"内存不足，无法完成请求。\r\n","Преобразует значение заданного 8-разрядного целого числа со знаком в эквивалентное 64-разрядное целое число со знаком.":"将指定的 8 位带符号整数的值转换为等效的 64 位带符号整数。\r\n","Eine ganze Zahl, deren Wert -1 ist.":"值为 -1 的整数。\r\n","При возвращении данного метода содержит указатель интерфейса объекта.Этот параметр передается без инициализации.":"当此方法返回时，包含对象的接口指针。此参数无需初始化即可传递。\r\n",", содержащий идентификатор исходного совместного класса.":"包含原始共享类 ID 的 。\r\n","Первое из двух сравниваемых десятичных чисел. ":"要比较的两个十进制数中的第一个。\r\n",", не является допустимым идентификатором фрагмента, начинающимся со знака решетки (#) и не является допустимой строкой запроса, начинающейся с вопросительного знака (?). ":", 不是以井号 (#) 开头的有效片段标识符，也不是以问号 (?) 开头的有效查询字符串。\r\n","Bestimmt, ob das vom aktuellen Moniker angegebene Objekt gegenwärtig geladen ist und ausgeführt wird.":"确定当前名字对象指定的对象当前是否已加载和运行。\r\n"," angegebenen Umgebungsvariablen oder null, wenn die Umgebungsvariable nicht gefunden wird.":" 指定的环境变量，如果未找到环境变量，则返回 null。\r\n","Идентификатор исходного интерфейса, с помощью которого COM-объект инициирует события. ":"COM 对象用来触发事件的源接口的标识符。\r\n","지정된 8비트 부호 없는 정수의 값을 해당하는 16비트 부호 있는 정수로 변환합니다.":"将指定的 8 位无符号整数的值转换为等效的 16 位有符号整数。\r\n"," и количество цифр в каждой группе определяется свойством ":" 每组中的位数由属性确定\r\n","두 번째 값입니다.":"두번째값입니다。\r\n"," zur Basis ":" 到基地\r\n"," 메서드를 호출하려면 true로 설정합니다.블록에는 유효한 데이터가 있어야 합니다.메모리 블록에 이미 데이터가 포함되어 있을 때 false를 전달하면 메모리 누수가 발생할 수 있습니다.":" 设置为true调用该方法。该块必须有有效数据。当内存块已经包含数据时传递false会导致内存泄漏。\r\n","복사할 입력 문자열의 바이트 수입니다.":"要复制的输入字符串的字节数。\r\n","Число, возведенное в степень ":"数的幂\r\n","Показывает указатель far типа VARIANT.":"显示类型为 VARIANT 的远指针。\r\n","경로 이름에 사용할 수 없는 문자가 포함된 배열을 가져옵니다.":"获取包含路径名中不允许的字符的数组。\r\n","Ruft ein Array ab, das die Zeichen enthält, die in Dateinamen nicht zulässig sind.":"获取包含文件名中不允许的字符的数组。\r\n",", der eine zur Basis 10 gehörende Zahl ohne Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.- oder - ":"，表示无符号的 10 进制数，以负号为前缀。- 或 -\r\n","Возвращает или задает DNS-имя узла или IP-адрес сервера.":"获取或设置服务器的 DNS 主机名或 IP 地址。\r\n","Die Funktion darf dem Benutzer nicht angezeigt werden, obwohl sie vorhanden und bindbar ist.":"该功能必须对用户不可见，即使它存在并且是可绑定的。\r\n","지정된 32비트 부호 없는 정수의 값을 해당하는 32비트 부호 있는 정수로 변환합니다.":"将指定的 32 位无符号整数的值转换为等效的 32 位有符号整数。\r\n",", являющаяся значением по умолчанию. ":", 这是默认值。\r\n","Die Identität der Klasse von untergeordneten Objekten, die den entfernten ACE erben können.":"可以继承远程 ACE 的子对象类的标识。\r\n","Alle Zugriffsversuche werden überwacht.":"所有访问尝试都会受到监控。\r\n","Matriz de bytes cuya longitud es 1.":"矩阵 de bytes cuya longitud es 1。\r\n","Gibt den kleinsten ganzzahligen Wert zurück, der größer oder gleich der angegebenen Gleitkommazahl mit doppelter Genauigkeit ist.":"返回大于或等于指定双精度浮点数的最小整数值。\r\n","Указывает, что данный параметр необязателен.":"表明该参数是可选的。\r\n","이 메서드가 반환될 때 열거된 ":"此方法返回时枚举\r\n","Округляет значение двойной точности с плавающей запятой до заданного количества дробных разрядов.Параметр задает правило округления значения, если оно находится ровно посредине между двумя числами.":"将双精度浮点值四舍五入到指定的小数位数。该参数指定正好位于两个数字中间的值的四舍五入规则。\r\n","복소수 ":"复数\r\n"," по указанному индексу.Данная реализация всегда выдает исключение ":" 在指定的索引处。此实现总是抛出异常\r\n","로 지정한 환경 변수의 값이 반환되거나, 환경 변수를 찾을 수 없는 경우 null이 반환됩니다.":"返回 指定的环境变量的值，如果找不到环境变量则返回 null。\r\n"," равен -1, возвращается документация для библиотеки. ":" 为 -1，则返回库的文档。\r\n"," zurückgegeben werden sollen. ":"将被退回。\r\n","Bestimmt, ob die angegebenen ":"确定是否指定\r\n","Richtet eine Advise-Verbindung zwischen dem Verbindungspunkt und dem Senkenobjekt des Aufrufers ein.":"在连接点和调用者的接收器对象之间建立建议连接。\r\n","의 숫자에 해당하는 배정밀도 부동 소수점 숫자이거나, ":"是一个双精度浮点数，等于中的数字\r\n","Diese Methode gibt ein BSTR zurück, das den Namen des angegebenen Elements enthält.Wenn der Aufrufer den Elementnamen nicht benötigt, kann ":"该方法返回一个包含指定元素名称的BSTR，如果调用者不需要元素名称，可以\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 16 位有符号整数的值转换为等效的 32 位无符号整数。\r\n","데이터 멤버 이름입니다.기본값은 특성이 적용되는 대상의 이름입니다.":"数据成员名称，默认为应用该属性的对象的名称。\r\n","Gibt einen Winkel zurück, dessen Tangens der Quotient zweier angegebener Zahlen ist.":"返回一个角度，其正切值是两个指定数字的商。\r\n"," aufgelisteten Zeichenfolgen zurück. ":" 列出的字符串。\r\n",".NET Framework 버전에 대한 정보가 포함된 문자열에서 ":"来自包含有关 .NET Framework 版本的信息的字符串\r\n","Kopiert jeden ":"复制所有人\r\n","-Feld, um die Größe des Arrays anzugeben.":"- 指定数组大小的字段。\r\n","Gibt eine vorzeichenlose 16-Bit-Ganzzahl zurück, die aus zwei Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.":"返回由字节数组中指定位置的两个字节转换而来的 16 位无符号整数。\r\n","Es sollen keine Zugriffsversuche überwacht werden.":"不应监视任何访问尝试。\r\n","Gibt an, dass die Aufrufkonvention C-Deklaration (DCECL) für eine Methode verwendet werden soll. ":"指示 C 声明 (DCECL) 调用约定应用于方法。\r\n","Der gültige Zugriffssteuerungstyp.":"有效的访问控制类型。\r\n","지정된 단정밀도 부동 소수점 숫자 값을 해당하는 64비트 부호 없는 정수로 변환합니다.":"将指定的单精度浮点数的值转换为其等效的 64 位无符号整数。\r\n"," 매개 변수에 지정된 숫자에 해당하는 값입니다.":" 与参数中指定的数字相对应的值。\r\n","Добавляет строковое представление указанного 8-разрядного целого числа со знаком к данному экземпляру.":"将指定的 8 位带符号整数的字符串表示形式添加到此实例。\r\n","Especifica si el controlador subyacente puede heredarse mediante procesos secundarios.":"Especifica si el controlador subyacente puede heredarse mediante procesos secundarios。\r\n","При возвращении данного метода содержит строку BSTR, задающую имя заданного элемента.Если вызывающему объекту не требуется имя элемента, ":"当此方法返回时，包含指定指定元素名称的 BSTR 字符串。如果调用者不需要元素名称，\r\n",", определяющее компоновку класса или структуры.":"定义类或结构布局的 。\r\n","Gibt bei Anwendung auf den Member eines Typs an, dass der Member nicht Teil eines Datenvertrags und nicht serialisiert ist.":"当应用于某个类型的成员时，表示该成员不是数据协定的一部分并且未序列化。\r\n","Gibt das verwaltete Array zurück, auf das von diesem ":"Gibt das verwaltete Array zurück, auf das von diesem\r\n","Строковое представление содержимого массива ":"数组内容的字符串表示\r\n","Равно значению ":"等于值\r\n","-Objekten, das ":"-对象，那\r\n","Если задано, любой вызов метод, задающего это свойство, сначала приводит к вызову IPropertyNotifySink::OnRequestEdit.Реализация OnRequestEdit определяет, разрешено ли вызову устанавливать данное свойство.":"如果设置，对设置此属性的方法的任何调用都会首先调用 IPropertyNotifySink::OnRequestEdit。OnRequestEdit 的实现决定是否允许调用设置此属性。\r\n","Представляет исключение, состояние которого захватывается в некоторой точке в коде. ":"表示在代码中的某个点捕获其状态的异常。\r\n","Devuelve el valor entero sin signo de 16 bits especificado como una matriz de bytes.":"Devuelve el valor entero sin signo de 16 bits especificado como una matrix de bytes。\r\n","Gibt eine Instanz eines Typs zurück, der ein COM-Objekt mit einem Zeiger auf die IUnknown-Schnittstelle darstellt.":"返回表示具有指向 IUnknown 接口的指针的 COM 对象的类型的实例。\r\n","Ссылка на моникер слева от текущего моникера. ":"链接到当前绰号左侧的绰号。\r\n","Строковое представление структуры ":"结构的字符串表示\r\n","호출의 성공이나 실패를 나타내는 HRESULT입니다.":"指示调用成功或失败的 HRESULT。\r\n","더할 두 번째 복소수입니다.":"要添加的第二个复数。\r\n","Gibt die maximal zulässige Länge eines nicht opaken Daten-BLOBs für dieses":"为此指定非不透明数据 BLOB 的最大允许长度\r\n"," 데이터 형식에 이 멤버를 사용할 수 있습니다.":" 您可以将此成员用于任何数据类型。\r\n","Der Delegat, der an nicht verwalteten Code übergeben werden soll. ":"要传递给非托管代码的委托。\r\n","Eine Dezimalzahl x im Bereich 0 ≤ x ≤":"0 ≤ x ≤ 范围内的十进制数 x\r\n","Среда хранения представляет собой глобальный дескриптор памяти (HGLOBAL).Глобальный дескриптор выделяется с помощью флага GMEM_SHARE.Если элемент ":"存储介质是全局存储句柄（HGLOBAL），全局句柄是使用GMEM_SHARE标志分配的。\r\n","의 길이가 범위를 벗어난 경우":"长度超出范围\r\n","-Eigenschaft für Zugriffssteuerungslisten (ACLs) zurückgegeben, die keinen Verzeichnisdienstobjekten zugeordnet sind.":"与目录服务对象无关的访问控制列表 (ACL) 的属性。\r\n","이 저장소, 스트림 또는 바이트 배열에 대한 최종 수정 시간을 나타냅니다.":"指示此存储、流或字节数组的最后修改时间。\r\n","Die zum Parameter ":"到参数\r\n",".Если используется это значение, перегруженный метод ":".如果使用这个值，重载方法\r\n","64-битовое знаковое целое число, сформированное восемью байтами, начинающимися с ":"由八个字节组成的 64 位有符号整数，以\r\n","두 개의 단정밀도 부동 소수점 수 중 더 큰 숫자를 반환합니다.":"返回两个单精度浮点数中较大的一个。\r\n","Возвращает заданное число элементов последовательности перечисления.":"返回枚举序列的指定数量的元素。\r\n","지정된 32비트 부호 없는 정수의 값을 해당하는 유니코드 문자로 변환합니다.":"将指定的 32 位无符号整数的值转换为等效的 Unicode 字符。\r\n","Возвращает значение, определяющее, равны ли текущий экземпляр и указанный объект ":"返回一个值，指示当前实例和指定对象是否相等\r\n","Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное 16-битовое целое число со знаком.":"将指定的 64 位带符号整数的值转换为等效的 16 位带符号整数。\r\n","이 바인딩 작업에 사용할 바인드 컨텍스트의 IBindCtx 인터페이스에 대한 참조입니다. ":"对用于此绑定操作的绑定上下文的 IBindCtx 接口的引用。\r\n","Записывает однобайтовое значение в неуправляемую память с указанным смещением.":"将单字节值写入指定偏移量的非托管内存。\r\n"," 구조체에 대한 포인터를 나타냅니다.":" 表示指向结构的指针。\r\n","Der Offset in Bytes für den ":"以字节为单位的偏移量\r\n"," 인터페이스를 사용할 수 있는지 여부를 나타냅니다.":" 指示接口是否可用。\r\n","Gibt an, dass die während COM-Interop-Aufrufen stattfindende HRESULT- oder retval-Signaturtransformation unterdrückt werden soll.":"指定应禁止在 COM 互操作调用期间发生的 HRESULT 或 retval 签名转换。\r\n","Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 32-битовое целое число со знаком.":"将指定的 8 位无符号整数的值转换为等效的 32 位有符号整数。\r\n","C 스타일 함수 포인터로 사용할 수 있는 정수입니다.이 멤버는 ":"可用作 C 风格函数指针的整数。此成员\r\n","지정된 기수로 나타낸 숫자의 문자열 표현을 해당하는 64비트 부호 없는 정수로 변환합니다.":"将指定基数中数字的字符串表示形式转换为等效的 64 位无符号整数。\r\n","Das aus dem nicht verwalteten Arbeitsspeicher am angegebenen Offset gelesene Byte.":"从指定偏移量处的非托管内存中读取的字节。\r\n",".Этот флаг не разрешен на диспетчерских интерфейсах.":".此标志在调度程序接口上是不允许的。\r\n","Gibt die kleinere von zwei 16-Bit-Ganzzahlen ohne Vorzeichen zurück.":"返回两个 16 位无符号整数中较小的一个。\r\n","Ermöglich bei Anwendung auf einen Auflistungstyp die benutzerdefinierte Angabe der Auflistungselemente.Dieses Attribut kann nur auf Typen angewendet werden, die vom ":"Ermöglich bei Anwendung auf einen Auflistungstyp die beutzerdefinierte Angabe der Auflistungselemente.Dieses Attribut kann nur auf Typen angewendet werden, die vom\r\n","Ein Wert, der den Punkt angibt, bei dem Erfassungen auftreten müssen.":"指定采集必须发生的点的值。\r\n",", lässt jedoch das Erfassen der Adresse des fixierten Objekts zu.Andernfalls wird das Verschieben des Objekts durch den Garbage Collector verhindert und somit dessen Effizienz verringert.Verwenden Sie die ":", 但允许捕获固定对象的地址。否则，垃圾收集器将阻止对象移动，从而降低其效率。使用\r\n","곱할 두 번째 복소수입니다.":"要相乘的第二个复数。\r\n","true, wenn geerbte Zugriffsregeln in der DACL beibehalten werden sollen, false, wenn geerbte Zugriffsregeln aus der DACL entfernt werden sollen.":"true 将继承的访问规则保留在 DACL 中，false 则从 DACL 中删除继承的访问规则。\r\n","Gibt den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen als Bytearray zurück.":"Gibt den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen als Bytearray zurück。\r\n","Преобразует значение заданного объекта в 32-битовое целое число без знака.":"将指定对象的值转换为 32 位无符号整数。\r\n","Возвращает значение, определяющее, действительно ли 64-разрядное целое число без знака меньше или равно значению ":"返回一个值，该值指示无符号 64 位整数是否小于或等于 value\r\n","-Objekte nicht den gleichen Wert haben.":"-Objekte nicht den gleichen Werthaben。\r\n"," aufgelisteten Moniker zurück. ":" 列出的绰号。\r\n","로그의 밑입니다.":"로그의밑입니다。\r\n","Сохраняет копию объекта в заданном файле.":"将对象的副本保存到指定文件。\r\n"," 메서드를 사용하여 할당된 BSTR 포인터를 해제합니다.":" 释放使用该方法分配的 BSTR 指针。\r\n","Der Index der zurückzugebenden Funktionsbeschreibung. ":"要返回的函数描述的索引。\r\n","Die erste von zwei zu vergleichenden Gleitkommazahlen mit doppelter Genauigkeit. ":"要比较的两个双精度浮点数中的第一个。\r\n"," имеют одинаковую строку, ":" 有相同的字符串\r\n","에서 반환할 ":"从\r\n","Позиция в массиве ":"数组中的位置\r\n","Die erste zu multiplizierende Zahl.":"第一个相乘的数字。\r\n","Windows 응용 프로그램 이벤트 로그에 메시지를 쓴 후 프로세스를 즉시 종료한 다음 해당 메시지를 Microsoft로 보내는 오류 보고에 포함시킵니다.":"将消息写入 Windows 应用程序事件日志后，立即终止进程并将该消息包含在发送给 Microsoft 的错误报告中。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Gleitkommazahl mit einfacher Genauigkeit.":"将指定的 8 位无符号整数的值转换为等效的单精度浮点数。\r\n","Legt fest, ob das aktuelle ":"指定当前是否\r\n","Der Zugriff auf die Funktion durch Makrosprachen darf nicht möglich sein.Dieses Flag ist für Funktionen auf Systemebene oder für Funktionen bestimmt, die von Typenbrowsern nicht angezeigt werden sollen.":"该函数不能通过宏语言访问。此标志用于系统级函数或不应由类型浏览器显示的函数。\r\n"," verwendet, um den Dezimalwert als COM-Währungstyp und nicht als Decimal zu marshallen.":" 用于将十进制值编组为 COM 货币类型而不是 Decimal。\r\n","-Methode registrierten Objekte frei.":"- 方法注册对象免费。\r\n","true, wenn das Handle gültig ist, andernfalls false.":"如果句柄有效，则为 true，否则为 false。\r\n","Контролирует точность кода, создаваемого JIT-компилятором среды CLR.":"控制由公共语言运行时 (CLR) JIT 编译器生成的代码的准确性。\r\n","지정된 부울 값을 해당하는 문자열 표현으로 변환합니다.":"将指定的布尔值转换为其等效的字符串表示形式。\r\n","Gibt ein Objekt vom angegebenen Typ zurück, dessen Wert dem angegebenen Objekt entspricht.Ein Parameter liefert kulturspezifische Formatierungsinformationen.":"返回值为指定对象的指定类型的对象。参数提供特定于区域性的格式信息。\r\n","Вычитает одно значение ":"减去一个值\r\n","-Wert kleiner als oder gleich einer 64-Bit-Ganzzahl ohne Vorzeichen ist.":"值小于或等于 64 位无符号整数。\r\n","Ein IntPtr, der den Wert des ":"包含值的 IntPtr\r\n","Eine decodierte Zeichenfolge.":"解码后的字符串。\r\n","Die zweite von zwei zu vergleichenden Dezimalzahlen. ":"要比较的两个十进制数中的第二个。\r\n","Вызывается для каждого зафиксированного значения хода выполнения.":"为每个提交的进度值调用。\r\n"," и объекта ":" 和对象\r\n","지정된 개체의 지정된 인터페이스를 나타내는 IUnknown 인터페이스에 대한 포인터를 반환합니다.사용자 지정 쿼리 인터페이스 액세스가 기본적으로 사용됩니다.":"返回指向指定对象上指定接口的 IUnknown 接口的指针。自定义查询接口访问默认启用。\r\n"," 값에 대해 비트 Or 연산을 수행합니다.":" 对值执行按位或运算。\r\n","Der Index der implementierten Schnittstelle bzw. Basisschnittstelle. ":"已实现接口或基础接口的索引。\r\n","IDispatch::Invoke를 통해 액세스할 수 있는 메서드와 속성 집합입니다.기본적으로 이중 인터페이스는 TKIND_DISPATCH를 반환합니다.":"一组可通过 IDispatch::Invoke 访问的方法和属性。默认情况下，双重接口返回 TKIND_DISPATCH。\r\n","은 구조체에서 필드로 나타나는 요소가 있는 배열에만 사용할 수 있습니다.":"只能用于元素在结构中显示为字段的数组。\r\n","관리되는 개체의 형식입니다. ":"管理对象的类型。\r\n"," недопустимо. -или-Индекс элемента формат меньше 0 (нуля) или больше или равно единице (1). ":" 不可接受的。 - 或 - 格式元素的索引小于 0（零）或大于或等于一（1）。\r\n","Преобразует значение заданного 8-разрядного целого числа без знака в эквивалентный символ Юникода.":"将指定的 8 位无符号整数的值转换为其等效的 Unicode 字符。\r\n","Die binären Daten, aus denen das neue ":"组成新的二进制数据\r\n","true, um die Moniker von links nach rechts aufzulisten.false für die Auflistung von rechts nach links.":"如果从左到右列出名字对象，则为 true；如果从右到左列出，则为 false。\r\n","Die Zählung der COM-VARIANT in ":"中 COM-VARIANT 的计数\r\n","Legt den Besitzer der Sicherheitsbeschreibung fest, die diesem ":"设置分配给此的安全描述符的所有者\r\n","검색할 원점입니다.원점은 파일의 시작, 현재 검색 포인터 또는 파일의 끝일 수 있습니다.":"要搜索的起点。起点可以是文件的开头、当前搜索指针或文件的结尾。\r\n","Eine Darstellung eines Objekts, die das Anzeigen des Objekts als eingebettetes Objekt in einem Container ermöglicht.Dieser Wert wird i. d. R. für Verbunddokumentobjekte angegeben.Die Darstellung kann für den Bildschirm oder den Drucker bereitgestellt werden.":"一个对象的表示，允许该对象作为嵌入对象显示在容器中。这个值是 i。 IE。 R. Specified for compound document objects. 可以为屏幕或打印机提供表示。\r\n","Gibt an, dass der Ressourcen-Manager eine automatische Vererbung verhindert.Wird von Ressourcen-Managern oder Benutzern festgelegt.":"指定资源管理器阻止自动继承。由资源管理器或用户设置。\r\n"," 개체를 만들 관리되는 개체에 대한 ":" 对于托管对象创建对象 \r\n","Stellt eine Wrapperklasse für ein Wait-Handle dar. ":"Stellt eine Wrapperklasse für ein Wait-Handle dar。\r\n","Die Zeichenfolgendarstellung der aktuellen Instanz in kartesischer Form.":"当前实例的字符串表示形式，采用笛卡尔形式。\r\n","Ein von LHashValOfNameSys bestimmter Hashwert für ":"由 LHashValOfNameSys 确定的哈希值\r\n","Представляет указатель на строку с завершающим нулем, содержащую имя объекта, описанного этой структурой.":"表示指向包含此结构描述的对象的名称的以 null 结尾的字符串的指针。\r\n"," 매개 변수에 대한 IUnknown 포인터입니다.":" 指向参数的 IUnknown 指针。\r\n","Преобразуемое значение HRESULT.":"要转换的 HRESULT 值。\r\n","가장 가까운 16비트 부호 있는 정수로 반올림된 ":"四舍五入到最接近的 16 位有符号整数\r\n"," implementiert ":" 实施的\r\n"," действует аналогично перегруженному методу ":" 就像一个重载方法\r\n","COM에 노출할 기본 인터페이스를 지정하는 ":"指定要公开给COM的默认接口 \r\n","true, wenn die aktuelle Anwendungsdomäne entladen oder die CLR heruntergefahren wird, andernfalls false..":"如果当前应用程序域已卸载或 CLR 已关闭，则为 true，否则为 false。\r\n",", используя целочисленное деление.":", 使用整数除法。\r\n"," verwendete Zeichentyp wird durch das ":" 使用的字符类型由\r\n","Der Besitzer des Objekts, dem dieses ":"对象的所有者\r\n","Fordert von ":"来自的要求\r\n","Immer false, da Ausnahmen mit der Möglichkeit zur Wiederaufnahme nicht implementiert sind.":"始终为 false，因为未实现可恢复的异常。\r\n",", используя значение с плавающей запятой одинарной точности.":", используя значение с плавающей запятой одинарной точности。\r\n"," 값의 속성 서식에 없는 경우":" 如果值不是属性格式\r\n","Представляет генератор псевдослучайных чисел, то есть устройство, которое выдает последовательность чисел, отвечающую определенным статистическим критериям случайности.Просмотреть исходный код .NET Framework для этого типа можно на портале Reference Source.":"表示伪随机数生成器，它是一种生成满足特定统计随机性标准的数字序列的设备。您可以在参考源门户中查看此类型的 .NET Framework 源代码。\r\n","지정된 부울 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.":"将指定的布尔值转换为等效的双精度浮点数。\r\n","모니커가 식별한 개체가 들어 있는 파일을 열 때 사용해야 하는 플래그를 나타냅니다.":"指示在打开包含由名字对象标识的对象的文件时应使用的标志。\r\n"," являются недопустимыми.":" 无效。\r\n","Значение свойства ключа.":"键属性的值。\r\n"," 값에 대해 정수 나누기를 수행합니다.":" 对值执行整数除法。\r\n","10진수 값을 지정된 소수 자릿수로 반올림합니다.":"将小数值四舍五入到指定的小数位数。\r\n","Der Speicherzeiger, aus dem kopiert werden soll. ":"要从中复制的内存指针。\r\n","Описание сборки, на которую сделана ссылка.":"引用的程序集的说明。\r\n","저장 미디어가 전역 메모리 핸들(HGLOBAL)입니다.이 전역 핸들은 GMEM_SHARE 플래그를 사용하여 할당합니다.":"存储介质是一个全局内存句柄（HGLOBAL），这个全局句柄是使用GMEM_SHARE标志分配的。\r\n","Инициализирует новый экземпляр класса AssemblyVersionAttribute с номером версии сборки, которой присваиваются атрибуты.":"使用要为其分配属性的程序集的版本号初始化 AssemblyVersionAttribute 类的新实例。\r\n","이 메서드는 반환될 때 열거된 연결에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含对枚举连接的引用。此参数未初始化传递。\r\n"," ab Position ":" 从位置\r\n","Возвращает объект, заключенный в оболочку с помощью ":"返回一个包裹着的对象\r\n",", auf die nächste 64-Bit-Ganzzahl mit Vorzeichen gerundet.Wenn ":", 四舍五入到最接近的 64 位有符号整数。如果\r\n","시스템 시작 이후 경과 시간(밀리초)을 가져옵니다.":"获取自系统启动以来经过的时间（以毫秒为单位）。\r\n"," 멤버가 null이 아니면 대상 프로세스에서 IStorage::Release를 사용하여 저장소 구성 요소를 해제해야 합니다.":" 如果该成员不为空，则目标进程必须使用 IStorage::Release 释放存储组件。\r\n","Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.":"将指定基数中数字的字符串表示形式转换为等效的 64 位带符号整数。\r\n","Возвращает указанное значение знака Юникода в виде массива байтов.":"ВозвращаетуказанноезначениезнакаЮникодаввидемассивабайтов。\r\n","URI 문자열입니다. ":"URI 字符串。\r\n","지정된 64비트 부호 있는 정수를 실제 변환 작업 없이 반환합니다.":"返回指定的 64 位带符号整数而不进行任何实际转换。\r\n",", включаемый как известный тип при сериализации или десериализации данных.":"序列化或反序列化数据时作为已知类型包含的 。\r\n","-Objekts gemarshallt wird.":"对象被编组。\r\n"," generische Parameter ist kein Delegat, oder es ist ein offener generischer Typ.":" 泛型参数不是委托，或者是开放的泛型类型。\r\n","64-разрядное знаковое целое число, эквивалентное значению ":"相当于 value 的 64 位有符号整数\r\n","Однобайтовая строка знаков ANSI, заканчивающаяся нулем.Этот член можно использовать для типов данных ":"一个空终止的单字节 ANSI 字符串。该成员可用于数据类型\r\n","METHODDATA 구조체에 설명된 메서드가 사용하는 호출 규칙을 식별합니다.":"标识 METHODDATA 结构中描述的方法使用的调用约定。\r\n","Преобразует значение заданного десятичного числа в эквивалентное логическое значение.":"将指定的十进制数的值转换为其等效的布尔值。\r\n","Позиция, в которую вставлен новый элемент, или -1 для обозначения, что элемент не был помещен в коллекцию.":"插入新元素的位置，或 -1 表示该元素尚未放入集合中。\r\n","비교할 두 번째 복소수입니다.":"要比较的第二个复数。\r\n","Преобразует указатель на неуправляемую функцию в делегат.":"将非托管函数指针转换为委托。\r\n","Die Bedingungen, für die die Regel überwacht wird.":"监视规则的条件。\r\n"," являются недопустимыми. ":" 无效。\r\n","Первое из двух сравниваемых 64-разрядных целых чисел со знаком. ":"要比较的两个有符号 64 位整数中的第一个。\r\n","가 두 수의 중간이면, 짝수가 반환됩니다.":"介于两个数字之间，则返回偶数。\r\n","두 개의 64비트 부호 있는 정수 중 더 작은 숫자를 반환합니다.":"返回两个 64 位有符号整数中较小的一个。\r\n","Копирует данные из указателя неуправляемой памяти в управляемый массив ":"将数据从非托管内存指针复制到托管数组\r\n","점의 y 좌표입니다. ":"点的 y 坐标。\r\n","지정된 32비트 부호 없는 정수 값을 해당하는 10진수로 변환합니다.":"将指定的 32 位无符号整数值转换为其等效的十进制值。\r\n","세 문자열을 한 경로로 결합합니다.":"将三个字符串组合成一个路径。\r\n",", определенных при создании этого экземпляра атрибута.":"，在创建此属性实例时定义。\r\n","Devuelve el valor entero sin signo de 64 bits especificado como una matriz de bytes.":"Devuelve el valor entero sin signo de 64 bits especificado como a matrix de bytes。\r\n","Stellt einen Zeiger auf einen Enumerator bereit, der die Komponenten eines zusammengesetzten Monikers auflisten kann.":"提供指向枚举器的指针，该枚举器可以枚举复合名字对象的组件。\r\n","지정된 URI를 사용하는 ":"使用指定的 URI\r\n"," der Gruppe durch einen Standardmechanismus abgerufen wurde.Wird nur von Ressourcen-Manager festgelegt und darf nicht durch Aufrufer festgelegt werden.":" 组的属性是通过标准机制获得的。只能由资源管理器设置，不能由调用者设置。\r\n","Die DACL (Discretionary Access Control List).":"DACL（自主访问控制列表）。\r\n","Eine Gleitkommazahl mit doppelter Genauigkeit, deren Wert ":"Eine Gleitkommazahl mit doppelter Genauigkeit, deren Wert\r\n","문자열에 할당된 메모리 블록에 대한 포인터를 나타내는 정수이거나 ":"一个整数，表示指向为字符串分配的内存块的指针，或者\r\n","Выдает исключение с определенным значением HRESULT, обозначающим сбой, в соответствии с указанным интерфейсом IErrorInfo.":"根据指定的 IErrorInfo 接口，抛出具有指示失败的特定 HRESULT 的异常。\r\n","Eine Abfragezeichenfolge oder ein Fragmentbezeichner. ":"查询字符串或片段标识符。\r\n","Выходной массив для записи.":"要写入的输出数组。\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.":"将指定的 16 位带符号整数的值转换为等效的双精度浮点数。\r\n","가 null이면 ReleaseStgMedium에서는 기본 프로시저를 사용하여 저장소를 해제하고, 그렇지 않으면 ReleaseStgMedium에서는 지정된 IUnknown 인터페이스를 사용합니다.":"如果为 null，ReleaseStgMedium 使用默认过程释放存储；否则，ReleaseStgMedium 使用指定的 IUnknown 接口。\r\n","Ein Handle für die zurückzugebende Typbeschreibung, auf die verwiesen wird. ":"要返回的引用类型描述的句柄。\r\n",", преобразованное в массив байтов.":", 转换为字节数组。\r\n","Копирует данные из указателя неуправляемой памяти в одномерный управляемый массив 32-битных целых чисел со знаком.":"将数据从非托管内存指针复制到 32 位带符号整数的一维托管数组。\r\n","Die Zahl, die ":"那个数字\r\n"," не является делегатом или является открытым универсальным типом.":" 不是委托或者是公共泛型类型。\r\n","메모리가 부족하여 해시 코드를 계산하는 데 필요한 버퍼를 할당할 수 없습니다.":"内存不足，无法分配计算哈希码所需的缓冲区。\r\n",", der bei der Serialisierung oder Deserialisierung von Daten als bekannter Typ enthalten ist.":"，在序列化或反序列化数据时作为众所周知的类型包含在内。\r\n","Возвращает объект, инкапсулированный с помощью объекта ":"返回一个用对象封装的对象\r\n","Возвращает значение, указывающее, равны ли значения двух объектов ":"返回一个值，表示两个对象的值是否相等\r\n","형식 정보가 필요한 클래스 CLSID 또는 인터페이스 IID입니다. ":"需要类型信息的类 CLSID 或接口 IID。\r\n"," muss größer oder gleich 0 sein.":" 必须大于或等于 0。\r\n","Возвращает произведение двух комплексных чисел.":"返回两个复数的乘积。\r\n"," usando un valor entero de 64 bits con signo.":" 使用 64 位 con signo 的勇气。\r\n","형식 라이브러리에 있는 형식 설명에 바인딩합니다.":"绑定到类型库中的类型描述。\r\n","Konvertiert den angegebenen booleschen Wert in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.":"将指定的布尔值转换为等效的 64 位无符号整数。\r\n","true, um anzugeben, dass der neue ACE ein Rückruftyp-ACE ist.":"true 指示新 ACE 是回调类型 ACE。\r\n"," в диапазоне от ":" 从\r\n","Stellt einen Fehlercode dar, der den Fehler bezeichnet.":"表示标识错误的错误代码。\r\n","Eine Gleitkommazahl mit doppelter Genauigkeit, die der Zahl in ":"等于中的数字的双精度浮点数\r\n","알려진 형식의 ":"以已知形式\r\n","COM VARIANT에 대한 포인터입니다.":"指向 COM VARIANT 的指针。\r\n","변환할 대리자의 형식입니다. ":"要转换的委托类型。\r\n",", представляющий значение по умолчанию. ":"表示默认值的 。\r\n","Указывает, что числовая строка может включать конечный знак.Допустимые конечные знаки определяются свойствами ":"指定数字字符串可以包含结束字符。有效的结束字符由属性确定\r\n",", который ссылается на заданный объект и использует указанное отслеживание восстановления.":"引用指定对象并使用指定恢复跟踪的 。\r\n",", der das Handle angibt, für das die Konvertierung erforderlich ist. ":", 指定需要转换的句柄。\r\n","Gibt die angegebene 16-Bit-Ganzzahl mit Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.":"返回指定的 16 位有符号整数。不执行真正的转换。\r\n"," обнуляется.Перед запуском метода завершения ссылки Weak обнуляются, поэтому даже если метод завершения восстановит объект, ссылка Weak остается обнуленной.":" 弱引用在终结器运行之前为空，因此即使终结器恢复对象，弱引用仍然为空。\r\n",", определяющее, когда приемник будет уведомлен об изменениях в данных.":"确定何时将数据更改通知接收方的 。\r\n",", является недопустимым. ":"， 是无效的。\r\n","Объект, для которого запрашивается интерфейс IUnknown.":"为其请求 IUnknown 接口的对象。\r\n","요소 원격화 정보를 포함합니다.":"包含元素远程化信息。\r\n"," 범위의 16비트 부호 있는 정수 x입니다.":" 范围内的 16 位有符号整数 x。\r\n","Освобождаемая оболочка CLR.":"可释放的 CLR 包装器。\r\n","Erstellt Zuordnungen zwischen Membernamen und Member-IDs sowie zwischen Parameternamen und Parameter-IDs.":"创建成员名称和成员 ID 之间以及参数名称和参数 ID 之间的映射。\r\n","을 해제합니다.":"把它们关掉。\r\n","Значение текущего элемента перечисления.":"当前枚举元素的值。\r\n","Описывает соединение к заданной точке подключения.":"描述与指定连接点的连接。\r\n","Ссылка на моникер, определяющий ":"链接到确定的名字\r\n"," zugeordnet ist.Dieser Wert ist in der Regel 0, da der RCW unabhängig von der Anzahl der aufrufenden verwalteten Clients genau einen Verweis auf das umschlossene COM-Objekt beibehält.":" 此值通常为 0，因为 RCW 只保留一个对包装的 COM 对象的引用，而不管调用托管客户端的数量如何。\r\n","Добавляемый ключ.Параметр ":"关键添加.Parameter\r\n","Это исключение создается, когда попытка доступа к файлу, не существующему на диске, заканчивается неудачей.":"当尝试访问磁盘上不存在的文件失败时抛出此异常。\r\n","이 연결점이 관리하는 송신 인터페이스의 호출을 받는 싱크에 대한 참조입니다. ":"对此连接点管理的传出接口上接收调用的接收器的引用。\r\n","Задает описание сборки.":"指定程序集的描述。\r\n",", если в нем больше нет необходимости.":"如果不再需要它。\r\n","-Auflistung ab.Diese Eigenschaft ruft die typfreundliche Version des Objekts ab.":"- Collection from. 此属性获取对象的类型友好版本。\r\n","Gibt einen Zeigertyp an.":"指定指针类型。\r\n","-Objekt gleich sind, andernfalls false.":"对象相等，否则为假。\r\n","Das Array ist größer als 2 Gigabyte (GB).":"Das Array ist größer als 2 Gigabyte (GB)。\r\n","Stellt die Hauptversionsnummer einer Typbibliothek dar.":"表示类型库的主版本号。\r\n","-Parameter Rückgabewert Positiv Der Logarithmus zur Basis 10 des ":"-参数 返回值 Positive 以 10 为底的对数\r\n","Gibt die kleinere von zwei 64-Bit-Ganzzahlen ohne Vorzeichen zurück.":"返回两个 64 位无符号整数中较小的一个。\r\n","-Wert durch einen anderen, gibt das Ergebnis zurück und gibt den Rest in einem Ausgabeparameter zurück.":"取另一个值，返回结果，并将余数返回到输出参数中。\r\n",", das das Speichermedium (globaler Speicher, Datenträgerdatei, Speicherobjekt, Streamobjekt, GDI (Graphics Device Interface)-Objekt oder nicht definiert) und den Besitz dieses Mediums für das aufrufende Datenobjekt definiert.":"，它为调用数据对象定义存储介质（全局内存、磁盘文件、内存对象、流对象、图形设备接口 (GDI) 对象或未定义）和该介质的所有权。\r\n","Gibt ein HRESULT an.":"指定 HRESULT。\r\n","Преобразует значение заданного 8-разрядного знакового целого числа в эквивалентное десятичное число.":"将指定的 8 位带符号整数的值转换为其等效的十进制数。\r\n","Representa un identificador, cadena o puntero de interfaz que el proceso de recepción puede utilizar para tener acceso a los datos que se transfieren.":"表示接收进程可用于访问正在传输的数据的接口标识符、字符串或指针。\r\n","Угол (в радианах), представляющий собой арккосинус параметра ":"表示参数反余弦的角度（以弧度为单位）\r\n"," und NaN für ":" 和 NaN 为\r\n","Ruft alle Namen und Werte der Umgebungsvariablen vom aktuellen Prozess ab.":"从当前进程中获取所有环境变量名称和值。\r\n","Второе из двух сравниваемых чисел одинарной точности с плавающей запятой. ":"正在比较的两个单精度浮点数中的第二个。\r\n","현재 모니커와 공통 접두사를 비교할 다른 모니커의 IMoniker 인터페이스에 대한 참조입니다. ":"对另一个名字对象的 IMoniker 接口的引用，用于将公共前缀与当前名字对象进行比较。\r\n","Целевая операционная система для библиотеки типов — 16-разрядные системы Windows.Поля данных по умолчанию упакованы.":"类型库的目标操作系统为16位Windows系统，数据字段默认打包。\r\n","При поиске зависимостей сборки включите каталог, содержащий саму сборку, и сначала выполните поиск в этом каталоге.Это значение используется платформой .NET Framework, прежде чем пути передаются в функцию Win32 LoadLibraryEx.":"搜索程序集的依赖项时，包括包含程序集本身的目录并首先搜索该目录。在将路径传递给 Win32 LoadLibraryEx 函数之前，.NET Framework 使用此值。\r\n","Строка, в которой связанный с атрибутом ":"属性关联的字符串\r\n","-Klasse mit der angegebenen Fehlermeldung. ":"带有指定错误消息的类。\r\n","지정된 형식과 해당 형식의 이벤트 이름을 사용하여 ":"使用指定的类型和该类型的事件名称 \r\n","Das Objekt, in das die Daten kopiert werden sollen. ":"要将数据复制到的对象。\r\n","멤버의 serialization 및 deserialization 순서를 가져오거나 설정합니다.":"获取或设置成员的序列化和反序列化顺序。\r\n","Извлекает структуру ":"检索结构\r\n","Liest einen Werttyp am angegebenen Offset aus dem Arbeitsspeicher.":"从指定偏移量的内存中读取值类型。\r\n","의 첫째 문자인 동시에 유일한 문자에 해당하는 유니코드 문자입니다.":"一个 Unicode 字符，既是 .\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.":"将指定的 64 位带符号整数的值转换为等效的 8 位带符号整数。\r\n","Преобразует значение заданного десятичного числа в эквивалентное 32-битовое целое число со знаком.":"将指定的十进制数的值转换为其等效的 32 位带符号整数。\r\n","Значение, которое необходимо присвоить параметру ":"要分配给参数的值\r\n","Определяет размер, перечислители и методы синхронизации для всех нестандартных коллекций.":"定义所有自定义集合的大小、枚举器和同步方法。\r\n",", используя идентификатор исходного совместного класса.":", 使用原始共享类的标识符。\r\n","시간에 따라 달라지는 시드 값을 사용하여 ":"使用随时间变化的种子值\r\n","Возвращает экземпляр типа, представляющего объект COM с помощью указателя на его интерфейс IUnknown.":"使用指向其 IUnknown 接口的指针返回表示 COM 对象的类型的实例。\r\n","의 인스턴스이고 현재 인스턴스의 값과 같으면 true이고, 그렇지 않으면 false입니다.":"是 的实例，如果它等于当前实例的值，则为 true；否则为 false。\r\n","Die zu codierende Zeichenfolge.":"要编码的字符串。\r\n","현재 컴퓨터의 프로세서 수를 지정하는 32비트 부호 있는 정수입니다.기본값은 없습니다.현재 컴퓨터에 여러 프로세서 그룹이 포함되어 있으면 이 속성을 통해 CLR(공용 언어 런타임)에서 사용할 수 있는 논리 프로세서 수가 반환됩니다.":"一个 32 位有符号整数，指定当前机器上的处理器数。没有默认值。如果当前机器包含多个处理器组，则此属性返回公共语言运行库 (CLR) 可用的逻辑处理器数。\r\n","Steuert, ob das ":"控制是否\r\n","Gibt eine Gleitkommazahl mit doppelter Genauigkeit zurück, die aus acht Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.":"Gibt eine Gleitkommazahl mit doppelter Genauigkeit zurück, die aus acht Bytes an der angegebenen 在每个字节数组中的位置。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.":"将指定的双精度浮点数的值转换为等效的 32 位带符号整数。\r\n","배정밀도 부동 소수점 값을 가장 가까운 정수로 반올림합니다.두 숫자의 중간에 있는 값을 반올림하는 방법을 지정하는 매개 변수입니다.":"Rounds double-precision floating-point values to the nearest integer number. 此参数指定如何在两个数字中间舍入值。\r\n","제공된 개체 이름이 실행 중에 등록되면 등록된 개체를 반환합니다.":"如果在执行期间注册了提供的对象名称，则返回注册的对象。\r\n","Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 64-битовое целое число без знака.":"将具有指定基数的数字的字符串表示形式转换为其等效的 64 位无符号整数。\r\n","-Objekte als gleich betrachtet werden.":"-对象被认为是平等的。\r\n","이름, 핸들 수집을 시작할 임계값 및 핸들 수집을 반드시 시작해야 하는 임계값을 사용하여 ":"使用名称、要开始收集句柄的阈值以及需要开始收集句柄的阈值 \r\n"," заменяется строковым представлением параметра ":" 替换为参数的字符串表示形式\r\n","Kombiniert den aktuellen Moniker mit einem anderen Moniker und erstellt auf diese Weise einen neuen zusammengesetzten Moniker.":"将当前名字对象与另一个名字对象组合，创建一个新的复合名字对象。\r\n","Выделяет память из неуправляемой памяти процесса, используя заданное количество байтов.":"使用指定的字节数从进程的非托管内存中分配内存。\r\n","Markierung für das Ende der Enumeration.":"标记枚举的结尾。\r\n","Die Sicherheits-ID, für die Zugriffsregeln entfernt werden sollen.":"要删除其访问规则的安全标识。\r\n","이 메서드는 반환될 때 이 형식 설명의 특성을 포함하는 구조체에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含对结构的引用，该结构包含此类型描述的属性。此参数未初始化传递。\r\n","Определяет пару \"ключ-значение\", которая может быть задана или получена.":"指定可以设置或检索的键/值对。\r\n","Diese Funktion gibt einen Index in die Funktion zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此函数返回函数的索引。此参数未初始化传递。\r\n"," указывает на корневой каталог или равен NULL.Возвращает ":" 指向根目录或为 NULL。返回\r\n","Eine Position in ":"一个位置在\r\n","-Objekts in einen ":"-物合一\r\n","При обнаружении аргумента типа variant, маршалинг которого в управляемый код выполнить невозможно, модуль маршалинга вызывает исключение.":"如果遇到无法封送到托管代码的变体参数，封送拆收器将抛出异常。\r\n"," 값이 같은지를 나타내는 값을 반환합니다.":" 返回一个值，表示值是否相等。\r\n","Возвращает уменьшенный моникер, представляющий собой другой моникер, ссылающийся на тот же объект, но который может быть привязан с такой же или большей эффективностью.":"返回一个缩小的名字对象，它是另一个引用同一对象但可以以相同或更高效率绑定的名字对象。\r\n"," 매개 변수 반환 값 양수 기본 10 로그 ":" 参数返回值正数 10 对数\r\n"," включает флаг ":" 包括标志\r\n","Ruft den Namen der DLL-Datei ab, die den Einstiegspunkt enthält.":"获取包含入口点的 DLL 文件的名称。\r\n","Fügt der DACL (Discretionary Access Control List), die diesem ":"将 DACL（自主访问控制列表）添加到此\r\n","Указывает, когда необходимо прекратить отслеживание объекта.Если true, объект отслеживается после финализации; если значение false, объект отслеживается только до финализации.":"指定何时停止跟踪对象。如果为true，则在完成后跟踪对象；如果该值为 false，则仅在完成之前跟踪对象。\r\n","Возвращает результат битовой операции дополнения до единицы для значения ":"返回对值进行按位补码运算的结果\r\n","Указывает идентификатор класса для объекта хранилища.":"指定存储对象的类标识符。\r\n","Gibt die Pfade an, die verwendet werden, um nach DLLs zu finden, die Funktionen für Plattformaufrufe bereitstellen. ":"指定用于查找提供平台调用功能的 DLL 的路径。\r\n","가 복사된 주소이거나 ":"是复制的地址或\r\n","Не следует разрешать присвоение значений этой переменной.":"不应允许分配此变量。\r\n","지정된 유니코드 문자의 값을 해당하는 16비트 부호 없는 정수로 변환합니다.":"将指定 Unicode 字符的值转换为等效的 16 位无符号整数。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.":"将指定的 8 位带符号整数的值转换为等效的 32 位带符号整数。\r\n","Показывает значение double.":"显示双精度值。\r\n","Завершает вспомогательное соединение, установленное ранее при помощи метода ":"终止先前使用该方法建立的辅助连接\r\n","Управляет определением интерфейса IEnumConnectionPoints.":"管理 IEnumConnectionPoints 接口的定义。\r\n","지정된 16비트 부호 없는 정수 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.":"将指定的 16 位无符号整数值转换为等效的双精度浮点数。\r\n","Indica si el objeto especificado coincide con el objeto ":"指示指定的对象是否与对象匹配 \r\n","Gibt an, wie Zugriffsmasken zu untergeordneten Objekten weitergegeben werden.":"指定访问掩码如何传播到子对象。\r\n","오류의 HRESULT입니다. ":"错误的后果。 \r\n",", используя строковые представления ключа и значения.":"，使用键和值的字符串表示。\r\n","Возвращает полное имя интерфейса-источника событий.":"返回事件源接口的全名。\r\n","Сопряженное число для ":"共轭数为\r\n","Указывает, доступны ли для очистки вызываемые оболочки времени выполнения (RCW) из какого-либо контекста.":"指示运行时可调用包装器 (RCW) 是否可用于从任何上下文中进行清理。\r\n"," 메서드를 사용하여 바인드 컨텍스트에 현재 등록되어 있는 모든 개체를 해제합니다.":" 方法释放当前在绑定上下文中注册的所有对象。\r\n","Идентификатор DISPID для этого члена.":"该成员的 DISPID。\r\n","Структура, содержащая задаваемые параметры привязки. ":"包含要设置的绑定选项的结构。\r\n","가 null인 경우 0입니다.":"0 如果为空。\r\n"," находится на равном расстоянии от двух целых чисел (четного и нечетного), возвращается четное число.Обратите внимание, что данный метод возвращает не целочисленное значение, а значение типа ":" 与两个整数（偶数和奇数）等距，则返回偶数。注意，此方法返回的不是整数值，而是类型的值\r\n","Библиотеку типов не следует отображать для пользователей, хотя ее использование не ограничено.Библиотеку типов не следует использовать с помощью элементов управления.узлы должны создавать новую библиотеку типов, инкапсулирующую элемент управления с расширенными свойствами.":"类型库不应暴露给用户，尽管它的使用不受限制。类型库不应与控件一起使用。宿主应创建一个新的类型库，用扩展属性封装控件。\r\n","Die zum URI gehörenden Abfrageinformationen.":"与 URI 关联的查询信息。\r\n","Указывает абсолютный размер класса или структуры.":"指定类或结构的绝对大小。\r\n","-Instanz mit einer reellen Zahl gleich 0 und einer imaginären Zahl gleich 1 zurück.":"实数为0，虚数为1的实例。\r\n","관리되지 않는 문자열의 첫 문자 주소입니다.":"非托管字符串的第一个字符的地址。\r\n","Предоставляет указатель на перечислитель, способный перечислить компоненты составного моникера.":"提供指向枚举器的指针，该枚举器可以枚举复合名字对象的组件。\r\n","Возвращает большее из двух чисел одинарной точности с плавающей запятой.":"返回两个单精度浮点数中较大的一个。\r\n","При возвращении данного метода содержит ссылку на фактическое число моникеров, перечисленных в ":"当此方法返回时，包含对中列出的名字对象的实际数量的引用\r\n","Das Produkt von ":"的产品\r\n"," 배열에서 원하는 요소의 인덱스입니다. ":" 数组中所需元素的索引。\r\n","현재 모니커에서 식별한 개체가 현재 로드되고 실행되는지 여부를 확인합니다.":"检查当前名字对象标识的对象当前是否已加载和运行。\r\n","Определяет, является ли текущий набор надмножеством заданной коллекции.":"确定当前集合是否是指定集合的​​超集。\r\n"," должна возвращать true для этого значения.":" должна возвращать true для этого значения。\r\n","Der kleinste ganzzahlige Wert, der größer oder gleich ":"大于或等于的最小整数值\r\n",", после восстановления состояния, сохраненного в момент захвата исключения. ":"，在恢复捕获异常时保存的状态后。\r\n","Diese Methode gibt einen Verweis auf ITypeComp der enthaltenden Typbibliothek zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回对包含类型库的 ITypeComp 的引用。此参数未初始化传递。\r\n","Определяет, пересекаются ли текущий набор и указанная коллекция.":"确定当前集合和指定集合是否相交。\r\n","Ein systemeigenes Betriebssystemhandle. ":"本机操作系统句柄。\r\n",", -π/2, округленное до двойной точности (-1,5707963267949), если ":", -π/2 四舍五入为双精度 (-1.5707963267949) 如果\r\n","При удачном возвращении содержит смещение указателя поиска от начала потока. ":"成功返回时，包含搜索指针距流开头的偏移量。\r\n","Ruft eine Methode auf bzw. greift auf die Eigenschaft eines Objekts zu, die bzw. das die von der Typenbeschreibung beschriebene Schnittstelle implementiert.":"调用方法或访问实现类型描述所描述的接口的对象的属性。\r\n",", wie in der Tabelle im Abschnitt \"Hinweise\" veranschaulicht.":"，如备注部分的表格所示。\r\n","Это исключение создается в случае, когда управляемая сборка найдена, но не может быть загружена.":"当找到托管程序集但无法加载时抛出此异常。\r\n","Предоставляет перечислитель, который поддерживает простой перебор элементов неуниверсальной коллекции.Просмотреть исходный код .NET Framework для этого типа можно на портале Reference Source.":"提供支持非泛型集合元素简单迭代的枚举器。您可以在参考源门户中查看此类型的 .NET Framework 源代码。\r\n","지정된 16비트 부호 있는 정수의 값을 해당하는 32비트 부호 있는 정수로 변환합니다.":"将指定的 16 位带符号整数的值转换为等效的 32 位带符号整数。\r\n","에 열거된 요소의 실제 수에 대한 참조를 포함합니다. ":"包含对 中枚举的实际元素数的引用。\r\n","Управляет доступностью отдельного управляемого типа или члена или всех типов в сборки для COM.":"控制单个托管类型或成员或 COM 程序集中所有类型的可用性。\r\n"," при конструировании, возможно, что этот экземпляр обработчика может быть вызван синхронно с самим собой.":" 在构造时，这个处理程序实例可能会与其自身同步调用。\r\n","Kombiniert zwei Zeichenfolgen zu einem Pfad.":"将两个字符串组合成一个路径。\r\n","예외를 복구할 수 있는지 여부와 예외가 throw된 위치부터 코드를 계속 진행할 수 있는지 여부를 나타냅니다.":"指示是否可以恢复异常以及代码是否可以从抛出异常的地方继续。\r\n"," belegten Speicher.":" 占用内存。\r\n","Dividiert eine angegebene komplexe Zahl durch eine andere angegebene komplexe Zahl.":"将一个指定的复数除以另一个指定的复数。\r\n","Die Anzahl von Dezimalstellen im Rückgabewert. ":"返回值中的小数位数。\r\n"," для заданного параметра ":" 对于给定的参数\r\n","현재 핸들 수를 늘립니다.":"增加当前句柄数。\r\n","Удаляет указанный диапазон символов из данного экземпляра.":"从此实例中删除指定范围的字符。\r\n","Новый целевой объект.":"新的目标。\r\n","Dividiert eine komplexe Zahl durch eine andere komplexe Zahl und gibt das Ergebnis zurück.":"将一个复数除以另一个复数并返回结果。\r\n","지정된 16비트 부호 없는 정수의 값을 해당하는 8비트 부호 있는 정수로 변환합니다.":"将指定的 16 位无符号整数的值转换为等效的 8 位有符号整数。\r\n","-Objekt dargestellten Sicherheitsbeschreibung zurück.":"- 对象返回安全描述符。\r\n","Die Variable ist die Standardanzeige auf der Benutzeroberfläche.":"变量是用户界面上的默认显示。\r\n","Reserviert, auf null festgelegt.":"保留，设置为空。\r\n","할당할 ":"分配；分配 \r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende Dezimalzahl.":"将指定的 64 位无符号整数的值转换为等效的十进制数。\r\n","Ruft die Länge der opaken Daten ab, die diesem ":"获取与此关联的不透明数据的长度\r\n"," с указанными областью и идентификатором. ":" 具有指定的范围和 ID。\r\n","에 루트가 포함되어 있으면 true이고, 그렇지 않으면 false입니다.":"如果包含根，则为真；否则为假。\r\n","-Parameter ist null.- oder - Der ":"- 参数为空。 - 或 - 的\r\n","내부 정수 표현을 검색할 ":"检索内部整数表示 \r\n","-Parameter aufgerufen werden soll, bevor diese Methode die Daten kopiert.Der Block muss gültige Daten enthalten.Beachten Sie, dass das Übergeben von false, wenn der Speicherblock bereits Daten enthält, zu einem Speicherverlust führen kann.":"参数应在此方法复制数据之前调用。该块必须包含有效数据。请注意，当内存块已包含数据时传递 false 可能会导致内存泄漏。\r\n","Gibt an, dass die Pascal-Aufrufkonvention für eine Methode verwendet werden soll.":"指示 Pascal 调用约定应该用于方法。\r\n","Diese Methode gibt einen Verweis auf den static-Member zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回对静态成员的引用。此参数未初始化传递。\r\n","Возвращает заданное десятичное число; фактическое преобразование не производится.":"返回给定的十进制数；没有执行实际的转换。\r\n","반환할 16비트 부호 있는 정수입니다. ":"要返回的 16 位有符号整数。\r\n","Вставляет строковое представление 16-разрядного целого числа без знака в данный экземпляр на указанную позицию символа.":"将无符号 16 位整数的字符串表示形式插入此实例的指定字符位置。\r\n","Интерфейс, соответствующий определенному идентификатору интерфейса, недоступен.В этом случае возвращается интерфейс null.Объекту, вызвавшему метод IUnknown::QueryInterface, возвращается значение E_NOINTERFACE.":"指定接口标识对应的接口不可用，此时返回空接口，调用IUnknown::QueryInterface方法的对象返回E_NOINTERFACE。\r\n"," zurückgegeben wird.Wenn ":" 被退回。如果\r\n"," 값과 부호 없는 64비트 정수가 다른지를 나타내는 값을 반환합니다.":" 返回一个值，该值指示一个值和一个无符号的 64 位整数是否不同。\r\n","Stellt Methoden bereit, mit denen .NET Framework-Delegaten, die Ereignisse behandeln, in COM-Objekten hinzugefügt und entfernt werden können.":"提供方法来添加和删除处理 COM 对象中事件的 .NET Framework 委托。\r\n","Возвращает значение, показывающее, доступен ли данный тип для COM.":"获取一个值，该值指示给定类型是否可用于 COM。\r\n","-Methode für den zugrunde liegenden Typ von ":"底层类型的方法\r\n","Извлекает строку документации библиотеки, полное имя файла справки и путь к нему, используемый контекст локализации и идентификатор контекста для раздела справки библиотеки в файле справки.":"检索库的文档字符串、完全限定的帮助文件名和路径、要使用的本地化上下文以及帮助文件中库帮助主题的上下文标识符。\r\n","Ein Zeiger auf eine ULONG-Variable, die die tatsächliche Anzahl der aus dem Streamobjekt gelesenen Bytes empfängt. ":"指向 ULONG 变量的指针，该变量将接收从流对象读取的实际字节数。\r\n","Если значение не равно null, функция задает для ":"如果该值不为空，则函数设置为\r\n","Преобразует заданное строковое представление числа в эквивалентное 64-битовое целое число со знаком.":"将数字的指定字符串表示形式转换为其等效的 64 位带符号整数。\r\n",", представляющих параметры JIT-компилятора, долговременность, возможность переопределить целевые объекты сборки, а также вид ее открытого ключа — полный или измененный с использованием маркера.":"表示 JIT 编译器选项、持久性、覆盖构建目标的能力以及其公钥是完整的还是使用令牌修改的。\r\n","Функция доступна при помощи таблицы виртуальных функций (VTBL) и принимает неявный указатель this.":"该函数使用虚函数表 (VTBL) 进行访问，并采用隐式 this 指针。\r\n","Указатель на структуру для получения параметров привязки. ":"指向接收绑定参数的结构的指针。\r\n"," был передан в ":" 被转移到\r\n","Преобразует значение заданного 32-разрядного знакового целого числа в эквивалентное десятичное число.":"将指定的 32 位带符号整数的值转换为其等效的十进制数。\r\n","Gibt den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen als Bytearray zurück.":"Gibt den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen als Bytearray zurück。\r\n","입니다.이 ":"这是一个伟大的应用程序。这 \r\n","인수의 수를 나타냅니다.":"指示参数的数量。\r\n","Массив объектов для форматирования.":"要格式化的对象数组。\r\n","COM 개체에 추가되거나 COM 개체에서 제거되는 이벤트를 처리하는 .NET Framework 대리자를 사용하도록 하는 메서드를 제공합니다.":"提供使.NET Framework委托能够处理添加到COM对象或从COM对象中删除的事件的方法。\r\n","Gibt einen Wert zurück, der das Vorzeichen einer Gleitkommazahl mit doppelter Genauigkeit angibt.":"返回一个值，该值指示双精度浮点数的符号。\r\n","Entfernen Sie alle Autorisierungsregeln aus der Zugriffssteuerungsliste. Fügen Sie danach der Zugriffssteuerungsliste die angegebene Autorisierungsregel hinzu.":"从访问控制列表中删除所有授权规则。然后将指定的授权规则添加到访问控制列表中。\r\n","Возвращает исходный интерфейс источника из библиотеки типов.":"从类型库返回原始源接口。\r\n","При возвращении данного метода содержит указатель на изменение числа уникальных имен.Этот параметр передается без инициализации.":"当此方法返回时，包含一个指针来更改唯一名称的数量。此参数无需初始化即可传递。\r\n","[Поддерживается только в .NET Framework 4.5.1 и более поздних версиях] Выполняет маршалирование данных в неуправляемый блока памяти из управляемого объекта указанного типа. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 将数据从指定类型的托管对象编组到非托管内存块。\r\n","Negativ ":"消极的\r\n","건너뛴 요소 수가 ":"跳过的元素数\r\n","에 열거된 연결의 실제 수에 대한 참조를 포함합니다. ":"包含对中列出的实际连接数的引用。\r\n","지수를 지정하는 복소수입니다.":"指定指数的复数。\r\n","Wenn die ":"如果\r\n","Ruft den IConnectionPointContainer-Schnittstellenzeiger auf das verbindungsfähige Objekt ab, das den Verbindungspunkt konzeptionell besitzt.":"获取指向概念上拥有连接点的可连接对象的 IConnectionPointContainer 接口指针。\r\n","Die GUID des Objekttyps, der den ACE (Access Control Entry, Zugriffssteuerungseintrag) erben kann, den dieses ":"可以继承此访问控制项 (ACE) 的对象类型的 GUID\r\n","Показывает, каким образом следует выполнять маршалирование по умолчанию для полей строковых данных в классе (как LPWSTR или как LPSTR).":"指示应如何封送类中的默认字符串数据字段（作为 LPWSTR 或 LPSTR）。\r\n","Die Funktion unterstützt GetLastError.Wenn beim Ausführen der Funktion ein Fehler auftritt, kann der Aufrufer GetLastError aufrufen, um den Fehlercode abzurufen.":"函数支持GetLastError，如果函数执行过程中发生错误，调用者可以调用GetLastError获取错误码。\r\n"," не был вызван. ":" 没有被调用。\r\n","내부 정수 표현을 사용하여 저장된 ":"使用内部整数表示形式存储 \r\n"," с заданным элементом перечисления ":" 使用给定的枚举元素\r\n"," с помощью строки, содержащей информацию о версии платформы .NET Framework.":" 带有包含有关 .NET Framework 的版本信息的字符串。\r\n","Ожидает получения сигнала всеми элементами заданного массива, используя значение ":"使用值等待给定数组的所有元素接收到信号\r\n","Указатель на интерфейс IMoniker на новом полном моникере объекта.":"指向对象的新完整名字对象上的 IMoniker 接口的指针。\r\n","라이브러리 플래그를 나타냅니다.":"表示库标志。\r\n","이 메서드는 반환될 때 새로 만든 열거자를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含新创建的枚举器。此参数未初始化传递。\r\n","개체를 지정된 스트림에 저장합니다.":"将对象保存到指定的流。\r\n","Gibt die SDDL-Darstellung (Security Descriptor Definition Language) der angegebenen Abschnitte der von diesem ":"返回此指定部分的 SDDL（安全描述符定义语言）表示\r\n","에 해당하는 16비트 부호 있는 정수이거나, ":"是一个 16 位有符号整数，等价于\r\n","Gibt an, ob diese Regel Zugriff gewährt oder Zugriff verweigert.":"指示此规则是授予访问权限还是拒绝访问权限。\r\n"," actual.Si el parámetro ":" actual.Si 埃尔*帕拉梅特罗 \r\n","부호 있는 바이트를 복소수로 변환하는 암시적 변환을 정의합니다.":"定义从有符号字节到复数的隐式转换。\r\n","Задает время последнего обращения к хранилищу, потоку или массиву байтов. ":"指定上次访问存储、流或字节数组的时间。\r\n","기준 주소(":"基址（\r\n","Преобразует значение подстроки этого экземпляра в ":"将此实例的子字符串值转换为\r\n","현재 응용 프로그램 도메인이 언로드되고 있는지 또는 CLR(공용 언어 런타임)이 종료되고 있는지를 나타내는 값을 가져옵니다. ":"获取一个值，该值指示当前应用程序域是否正在卸载或公共语言运行时 (CLR) 是否正在关闭。\r\n"," 인터페이스를 사용할 수 있습니다.이 값을 사용하면 ":" 接口可用。使用此值 \r\n","Die nicht aktivierte Berechtigung.":"权限未激活。\r\n"," muss von __ComObject abgeleitet sein. - oder - ":" 必须派生自 __ComObject。 - 或者 -\r\n","Die abgeleitete Klasse befindet sich in einer Assembly ohne Berechtigung für den Zugriff auf nicht verwalteten Code. ":"派生类位于无权访问非托管代码的程序集中。\r\n"," 매개 변수가 다른 .NET Framework 버전을 표시하면 true이고, 그렇지 않으면 false입니다.":" 如果参数指示不同的 .NET Framework 版本，则为 true；否则为 false。\r\n",", так как он не поддерживает все необходимые интерфейсы. ":"，因为它不支持所有必需的接口。\r\n"," entspricht, oder 0 (null), wenn ":" 等于，或 0（零）如果\r\n","Der Offset, bei dem das Marshallen begonnen werden soll.":"开始编组的偏移量。\r\n",") fordert dieses Flag das Datenobjekt auf, keine Daten zu senden, wenn ":") 这个标志告诉数据对象在什么时候不要发送数据\r\n","Возвращает для указанной строки пути сведения о каталоге.":"返回指定路径字符串的目录信息。\r\n","Представляет коллекцию объектов, доступ к которым может быть получен отдельно, по индексу.":"表示可以按索引单独访问的对象集合。\r\n","Индекс возвращаемого описания функции. ":"返回函数描述的索引。\r\n","Имя исходного типа с указанием сборки.":"源类型的名称，指定程序集。\r\n"," oder kleiner als ":" 或小于\r\n","Измененные сведения о пути.В настольных системах, работающих под управлением Windows, сведения о пути возвращаются без изменений, если значение параметра ":"更改路径信息。在运行 Windows 的桌面系统上，如果参数值为\r\n","Eine Gleitkommazahl mit einfacher Genauigkeit, die der Zahl in ":"一个单精度浮点数，等于中的数\r\n"," значению ":" 意义\r\n","수학적 반올림 메서드가 두 수의 중간에 있는 수를 처리하는 방식을 지정합니다.":"指定数学舍入方法如何处理介于两个数字之间的数字。\r\n","지정된 10진수 값을 해당하는 16비트 부호 없는 정수로 변환합니다.":"将指定的十进制值转换为等效的 16 位无符号整数。\r\n","Wenn dies nicht null ist und die Funktion durch eine Ordnungszahl definiert ist, ist ":"如果这是非零且函数由序数定义，则为\r\n","Получает значение заданного ключа.":"获取指定键的值。\r\n","Benachrichtigt alle aktuell registrierten Advise-Senken eines Datenobjekts, dass die Daten im Objekt geändert wurden.":"通知所有当前已注册的数据对象的建议接收器该对象中的数据已更改。\r\n","Определяет пользовательский атрибут товарного знака для манифеста сборки.":"为程序集清单定义自定义商标属性。\r\n","Строка, содержащая информацию о версии платформы .NET Framework.":"包含有关 .NET Framework 的版本信息的字符串。\r\n","Значение true, если требуется наличие элемента; в противном случае — значение false.":"如果元素是必需的，则为真；否则，假的。\r\n","Первое из двух сравниваемых 16-разрядных целых чисел со знаком. ":"要比较的两个有符号 16 位整数中的第一个。\r\n","-Objekt für das neue ":"- 新的对象\r\n","Gibt eine 64-Bit-Ganzzahl mit Vorzeichen zurück, die aus acht Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.":"Gibt eine 64-Bit-Ganzzahl mit Vorzeichen zurück, die aus acht Bytes an der angegebenen 在每个字节数组中的位置。\r\n","Возвращает проверенное имя интерфейса-источника событий.":"返回事件源接口的限定名称。\r\n",".Кодированный массив ":".encoded数组\r\n",", показывающее тип создаваемого дескриптора ":"表示正在创建的句柄类型\r\n","Число байтов для записи в поток. ":"要写入流的字节数。\r\n","Показывает byte.":"显示字节。\r\n","지정된 체계, 호스트 및 포트를 사용하여 ":"使用指定的方案、主机和端口\r\n",") erzeugen NULL oder eine ungültige Adresse.":") 产生 NULL 或无效地址。\r\n","Возвращает меньшее из двух 8-битовых целых чисел без знака.":"返回两个 8 位无符号整数中较小的一个。\r\n","。 0 ":"0\r\n","복소수의 크기 또는 절대 값을 가져옵니다.":"获取复数的大小或绝对值。\r\n","Die zurückzugebende 16-Bit-Ganzzahl mit Vorzeichen. ":"要返回的 16 位有符号整数。\r\n","Ein Zeiger auf einen nicht verwalteten Speicherblock, der vor dem Aufruf der Methode belegt werden muss. ":"指向必须在调用方法之前分配的非托管内存块的指针。\r\n","URI의 해시 코드를 반환합니다.":"返回 URI 的哈希码。\r\n"," превышает значение ":" 超过值\r\n","함수 설명을 정의합니다.":"定义函数描述。\r\n","가 유효한 COM 개체가 아닌 경우":"不是有效的 COM 对象\r\n","Возвращает внутреннее целочисленное представление объекта ":"返回对象的内部整数表示\r\n","Возвращает синус указанного комплексного числа.":"返回指定复数的正弦值。\r\n","해제할 메모리의 주소입니다. ":"要释放的内存地址。\r\n",", kopiert eine angegebene Anzahl von Zeichen aus einer nicht verwalteten ANSI-Zeichenfolge hinein und erweitert jedes ANSI-Zeichen zu einem Unicode-Zeichen.":", 从非托管 ANSI 字符串中复制指定数量的字符，并将每个 ANSI 字符扩展为 Unicode 字符。\r\n","-Wert kleiner als ein anderer ":"-价值低于另一个\r\n","현재 운영 체제에서 DBCS(더블바이트 문자 집합)의 최대 크기(바이트)를 나타냅니다.이 필드는 읽기 전용입니다.":"指示当前操作系统上双字节字符集 (DBCS) 的最大字节数。此字段是只读的。\r\n","Das zugrunde liegende ":"底层的\r\n","Gibt einen double-Wert an.":"指定双精度值。\r\n","Stellt sicher, dass alle Änderungen, die am im transaktiven Modus geöffneten Streamobjekt vorgenommen werden, im übergeordneten Speicher reflektiert werden.":"确保对以事务模式打开的流对象所做的任何更改都反映在父存储中。\r\n","Gibt einen Zeiger frei, der von der ":"释放从\r\n"," 개체에 대한 식별자를 반환합니다.":" 返回对象的标识符。\r\n","비교할 두 개의 16비트 부호 없는 정수 중 첫 번째 숫자입니다. ":"要比较的两个 16 位无符号整数中的第一个。\r\n","로 설정하면 이 메서드는 쓰여진 실제 바이트 수를 제공하지 않습니다.":"当设置为 时，此方法不提供实际写入的字节数。\r\n"," 생성자에 지정된 호출 규칙의 값입니다.":" 构造函数中指定的调用约定的值。\r\n","Номер версии сборки с соответствующими атрибутами. ":"具有适当属性的程序集的版本号。\r\n","Выключение оптимизации кода компилятором делает код более быстрым, коротким и эффективным.Оптимизация изменяет порядок строк кода в файле вывода, что может осложнить процесс отладки.Обычно во время отладки оптимизация должна быть отключена.В версии 2.0 или более поздней версии, объединять это значение по умолчанию (Default | DisableOptimizations) для включения отслеживания и отключения оптимизации JIT-компилятора.":"关闭编译器的代码优化使代码更快、更短、更高效。优化会改变输出文件中代码行的顺序，这会使调试更加困难。通常，调试时应关闭优化。在 2.0 版本中或稍后，合并此默认值（默认 | DisableOptimizations）以启用跟踪和禁用 JIT 编译器优化。\r\n","[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt] Ruft die Adresse des Elements am angegebenen Index in einem Arrays des angegebenen Typs ab. ":"[仅在 .NET Framework 4.5.1 及更高版本中支持] 获取指定类型数组中指定索引处元素的地址。\r\n","Число 1, если ":"1号如果\r\n","Reserviert Speicher aus dem nicht verwalteten Arbeitsspeicher des Prozesses mithilfe des Zeigers auf die angegebene Anzahl von Bytes.":"使用指向指定字节数的指针从进程的非托管内存中分配内存。\r\n","Gibt bei Anwendung auf eine Methode an, dass die Methode sofort nach der Serialisierung eines Objektgraphs in ein Objektdiagramm aufgerufen wird.Die Reihenfolge der Deserialisierung relativ zu anderen Objekten im Diagramm ist nicht deterministisch.":"当应用于方法时，表示在将对象图序列化为对象图后立即调用该方法。相对于图中其他对象的反序列化顺序是不确定的。\r\n","COM IUnknown 포인터":"COM I未知指针\r\n","Obtiene o establece el orden de serialización y deserialización de un miembro.":"Obtiene 或 establece 序列化和反序列化 miembro 的顺序。\r\n","Перечисляет строки, являющиеся ключами таблицы внутреннего представления контекстных параметров объекта.":"枚举作为对象上下文参数内部表示的表的键的字符串。\r\n","-Objekt umschlossene Objekt.":"-Object 包裹的对象。\r\n","Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.":"将指定 Unicode 字符的值转换为等效的 32 位带符号整数。\r\n","지정된 각도의 탄젠트를 반환합니다.":"返回指定角度的正切值。\r\n","Предоставляет управляемое определение интерфейса IAdviseSink.":"提供 IAdviseSink 接口的托管定义。\r\n","Die von diesem Delegaten erstellte ":"由该代表创建的\r\n"," genau in der Mitte zwischen zwei Ganzzahlen liegt, von denen eine gerade und die andere ungerade ist, bestimmt ":" 恰好在两个整数之间，一个是偶数，另一个是奇数\r\n","Die Position, an der der Werttyp gelesen werden soll.Möglicherweise müssen Ausrichtungsprobleme berücksichtigt werden.":"读取值类型的位置，可能需要考虑对齐问题。\r\n","Указывает исходный класс ":"指定源类\r\n"," не найден в исходном интерфейсе ":" 在源接口中找不到\r\n"," содержит значение по умолчанию.":" 包含默认值。\r\n","Ruft den Pfad der Ressource ab, auf die der URI verweist, oder legt diesen fest.":"获取或设置 URI 指向的资源的路径。\r\n","Schreibt einen Ganzzahlwert von prozessoreigener Größe in den nicht verwalteten Speicher.":"将处理器本机大小的整数值写入非托管内存。\r\n","에는 기본 64 문자가 아닌 문자, 두 개 이상의 패딩 문자 또는 패딩 문자 중 공백 문자가 아닌 문자를 포함되어 있습니다.":"包含 base 64 字符以外的字符、两个或多个填充字符或任何不是空格字符的填充字符。\r\n"," 내에 있는 인덱스를 나타냅니다.둘 이상의 인수가 오류를 반환하면 ":" 指示其中的一个索引。如果多个参数返回错误，\r\n",", содержащий идентификатор исходного совместного класса. ":"包含原始共享类 ID 的 。\r\n","지정된 32비트 부호 있는 정수의 값을 해당하는 부울 값으로 변환합니다.":"将指定的 32 位带符号整数的值转换为等效的布尔值。\r\n","Содержит сведения о параметре.":"包含有关参数的信息。\r\n","Метод не оптимизирован JIT-компилятором или службой генерирования машинного кода (см. Ngen.exe) при отладке возможных проблем с генерированием кода.":"在调试潜在的代码生成问题时，JIT 编译器或本机代码生成服务（请参阅 Ngen.exe）未优化该方法。\r\n","Строка, содержащая добавляемую подстроку. ":"包含要添加的子字符串的字符串。\r\n"," ist weder null noch ":" 既不为零也不\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为等效的单精度浮点数。\r\n","Gibt an, dass ein Wert nicht angegeben wurde.":"指示未指定值。\r\n","Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное число с плавающей запятой одиночной точности.":"将指定的 8 位带符号整数的值转换为其等效的单精度浮点数。\r\n"," en valeur d'entier 64 bits signé.":" en 值 d'entier 64 位签名。\r\n","메서드에 적용될 때 메서드는 개체 그래프의 개체가 serialization 후 호출되도록 지정합니다.그래프에 있는 다른 개체에 상대적인 serialization의 순서는 명확하지 않습니다.":"当应用于方法时，该方法指定对象图中的对象在序列化后被调用。序列化相对于图中其他对象的顺序不明确。\r\n","Entfernt die angegebene Zugriffssteuerungsregel aus dem aktuellen ":"从当前规则中删除指定的访问控制规则\r\n","Der Typ des zurückzugebenden Delegaten.":"要返回的委托类型。\r\n"," 매개 변수의 값이 같으면 true이고, 그렇지 않으면 false입니다.":" 如果参数的值相等则为真；否则为假。\r\n","Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное 8-битовое целое число без знака.":"将指定的 64 位有符号整数的值转换为等效的 8 位无符号整数。\r\n","을 사용하여 실행된 Win32 코드에서 발생한 마지막 오류에 해당하는 HRESULT를 반환합니다.":"返回与使用 执行的 Win32 代码遇到的最后一个错误对应的 HRESULT。\r\n","이 핸들이 나타나는 개체를 가져오거나 설정합니다.":"获取或设置显示此句柄的对象。\r\n","관리되지 않는 함수 포인터를 대리자로 변환합니다.":"将非托管函数指针转换为委托。\r\n","수집된 핸들의 수를 가져옵니다.":"获取收集的句柄数。\r\n","지정된 10진수 값을 해당하는 32비트 부호 있는 정수로 변환합니다.":"将指定的十进制值转换为等效的 32 位带符号整数。\r\n"," 인터페이스를 나타내는 인터페이스 포인터입니다.":" 表示接口的接口指针。\r\n","-Objekt dargestellte Qualifizierer gibt an, ob der ACE Zugriff gewährt bzw. verweigert oder ob er Systemüberwachungen oder einen Systemalarm auslöst.Die ":"对象指示 ACE 是授予还是拒绝访问，或者它是否触发系统监视器或系统警报\r\n","지정된 GUID에 해당하는 형식 설명을 검색합니다.":"检索与指定 GUID 对应的类型描述。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.":"将指定的双精度浮点数的值转换为等效的单精度浮点数。\r\n","Ein zufälliger Ordnername oder Dateiname.":"一个随机的文件夹名称或文件名。\r\n","Возвращает угол, представляющий собой арккосинус указанного комплексного числа.":"返回作为指定复数的反余弦的角度。\r\n","Показывает логическое значение (Boolean).":"显示布尔值。\r\n","32-битовое целое число со знаком, представляющее число байтов в массиве ":"32 位有符号整数，表示数组中的字节数\r\n","Ein durch OLE definierter VARIANT_BOOL-Typ mit 2 Bytes (true = -1, false = 0).":"2 个字节的 OLE 定义的 VARIANT_BOOL 类型（true = -1，false = 0）。\r\n",", minus unendlich für ":", 减去无穷大\r\n","부정할 값입니다.":"부정할값입니다。\r\n"," 값보다 큰지를 나타내는 값을 반환합니다.":" 返回一个值，表示该值是否大于\r\n"," со значениями по умолчанию.":" 具有默认值。\r\n","Ein Array, das die Zeichen enthält, die in Dateinamen nicht zulässig sind.":"包含文件名中不允许的字符的数组。\r\n","Ссылка на строку, содержащую оставшуюся часть анализируемого отображаемого имени. ":"对包含已解析显示名称其余部分的字符串的引用。\r\n"," am nächsten liegt und deren Anzahl von Dezimalstellen gleich ":" 最接近且小数位数相同\r\n"," не поддерживается. ":" 不支持。\r\n","Возвращает или задает (целевой) объект, на который ссылается текущий объект ":"获取或设置当前对象所指的（目标）对象\r\n","Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl mit Vorzeichen und ein ":"返回一个值，该值指示 64 位有符号整数和\r\n","El resultado que contiene este parámetro contiene la interfaz IConnectionPointContainer del objeto conectable.Este parámetro se pasa sin inicializar.":"包含此参数的结果包含可插入对象的IConnectionPointContainer接口。此参数在没有初始化的情况下传递。\r\n","개체의 등록된 advise 싱크에 개체 뷰가 변경되었음을 알립니다.이 메서드는 서버에서 호출됩니다.":"通知对象的已注册通知接收器对象的视图已更改。此方法在服务器上调用。\r\n","Тип данного массива. ":"此数组的类型。\r\n","이 메서드는 반환될 때, ":"当此方法返回时，\r\n","Ein Verweis auf die IMoniker-Schnittstelle für einen anderen Moniker, der mit dem aktuellen Moniker auf ein gemeinsames Präfix hin verglichen wird. ":"对另一个名字对象的 IMoniker 接口的引用，该名字对象与公共前缀的当前名字对象进行比较。\r\n","관리되지 않는 메모리 블록에 대한 포인터입니다.":"指向非托管内存块的指针。\r\n","Die Anschlussnummer des URIs.":"URI 的端口号。\r\n"," enthält in der durch ":" 包含在通过\r\n","Gibt den Wert von e hoch angegebenem Exponenten zurück.":"返回指定的 e 指数的幂值。\r\n","Eine 4-Byte-Ganzzahl mit Vorzeichen.":"一个 4 字节有符号整数。\r\n","디코딩할 URL 인코딩된 문자열입니다.":"要解码的 URL 编码字符串。\r\n","의 형식입니다. ":"是格式\r\n",", а значение эквивалентно ":", 值相当于\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 32 位无符号整数的值转换为等效的 16 位无符号整数。\r\n","Gibt true zurück, wenn die Zugriffsregel erfolgreich entfernt wurde; andernfalls false.":"如果成功删除访问规则，则返回 true；否则为假。\r\n","Начальная позиция в этом экземпляре, откуда будут скопированы символы.Индексация начинается с нуля.":"此实例中将从中复制字符的起始位置。索引从零开始。\r\n"," содержит знак, не являющийся допустимой цифрой в системе счисления, основание которой задано в параметре ":" 包含一个符号，该符号不是在参数中指定其基数的数字系统中的有效数字\r\n","Diese Methode gibt die CLSID zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回 CLSID。此参数未初始化传递。\r\n","는 형식이 지정된 클래스가 아닌 참조 형식입니다. 또는":"是引用类型，而不是类型化类。或者\r\n","Преобразует заданное строковое представление даты и времени в эквивалентное значение даты и времени.":"将日期和时间的指定字符串表示形式转换为其等效的日期和时间值。\r\n","Определяет тип переменной.":"指定变量的类型。\r\n"," указатель для блока памяти.":" 指向内存块的指针。\r\n","비교할 두 개의 32비트 부호 있는 정수 중 첫 번째 숫자입니다. ":"要比较的两个 32 位有符号整数中的第一个。\r\n","Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное 32-битовое целое число без знака.":"将指定的 8 位有符号整数的值转换为等效的 32 位无符号整数。\r\n","S_OKHRESULT 값(모니커가 실행 중인 경우), S_FALSEHRESULT 값(모니커가 실행 중이 아닌 경우) 또는 E_UNEXPECTEDHRESULT 값입니다.":"S_OKHRESULT 的值（如果名字对象正在运行）、S_FALSEHRESULT 的值（如果名字对象未运行）或 E_UNEXPECTEDHRESULT 的值。\r\n","64-разрядное знаковое целое число.":"64-разрядное знаковое целое число。\r\n","Ein Verweis auf die freizugebende VARDESC-Struktur. ":"对要发布的 VARDESC 结构的引用。\r\n","관리되지 않는 메모리에서 싱글바이트를 읽습니다.":"从非托管内存中读取单个字节。\r\n","Определяет, включает ли путь расширение имени файла.":"确定路径是否包含文件扩展名。\r\n"," que especifica si se va a realizar una operación de desecho normal.":" que especifica si se va a realizar una operación de desecho normal.\r\n","Devuelve el valor de punto flotante de precisión sencilla especificado como una matriz de bytes.":"Devuelve el valor de punto flotante de precisión sencilla especificado como una matrix de bytes。\r\n"," в значение 16-битового знакового целого числа.":" 为 16 位有符号整数值。\r\n","Число, логарифм которого должен быть найден. ":"要找到其对数的数。\r\n"," 매개 변수는 개방형 제네릭 형식입니다.":" 参数是开放的通用类型。\r\n","거듭제곱을 지정하는 배정밀도 부동 소수점 숫자입니다.":"指定幂的双精度浮点数。\r\n","SQL의 null 값과 비슷한 null 값을 나타냅니다.":"代表一个空值，类似于SQL中的空值。\r\n","Ruft das in diesem Wrapper enthaltene Objekt ab.":"获取包含在此包装器中的对象。\r\n","Если часовой пояс не указан в строке разбора, подразумевается, что используется формат UTC. ":"如果在解析字符串中未指定时区，则假定使用 UTC。\r\n","Gibt einen Winkel zurück, dessen Sinus die angegebene Zahl ist.":"返回正弦为给定数字的角度。\r\n","Получает частоту таймера в виде количества тактов в секунду.Это поле доступно только для чтения.":"以每秒滴答数的形式获取计时器的频率。此字段是只读的。\r\n","unsignedlong을 나타냅니다.":"表示一个 unsignedlong。\r\n","Gibt eine 32-Bit-Ganzzahl mit Vorzeichen zurück, die aus vier Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.":"Gibt eine 32-Bit-Ganzzahl mit Vorzeichen zurück, die aus vier Bytes an der angegebenen 在 einem Bytearray konvertiert wurde 中的位置。\r\n","관리되지 않는 DLL(동적 연결 라이브러리)에서 특성 사용 해당 메서드를 정적 진입점으로 노출함을 나타냅니다.":"在非托管动态链接库(DLL)中使用属性表示该方法作为静态入口点公开。\r\n","Der Typ, dessen Größe zurückgegeben werden soll.":"要返回其大小的类型。\r\n","Gibt an, wie Einträge für die Zugriffssteuerung (ACEs) an untergeordnete Objekte weitergegeben werden.  Diese Flags sind nur von Bedeutung, wenn Vererbungsflags vorhanden sind. ":"指定如何将访问控制条目 (ACE) 传播到子对象。这些标志仅在存在继承标志时才有意义。\r\n","HRESULT со значением S_OK.":"值为 S_OK 的 HRESULT。\r\n","로 래핑될 개체를 가져옵니다.":"获取要包装的对象。\r\n","Ruft den Namespace der Datenvertragsmember ab.":"Ruft den Namespace der Datenvertragsmember ab。\r\n","Das sicherungsfähige Objekt, dem das ":"安全对象\r\n"," Q)와 같은 숫자입니다. 여기서 Q는 가장 가까운 정수로 반올림된 ":" 它与 Q) 的数字相同。其中 Q 四舍五入为最接近的整数\r\n"," 개체의 부호(음수, 양수 또는 0)를 나타내는 숫자를 가져옵니다.":" 获取表示对象符号（负数、正数或零）的数字。\r\n"," в неуправляемую память, преобразуя его по мере копирования в формат ANSI.":" 到非托管内存，在复制时将其转换为 ANSI 格式。\r\n","Возвращает или задает имя контракта данных для типа коллекции.":"Возвращает или задает имя контракта данных для типа коллекции。\r\n","Der Speicherzeiger, in den kopiert werden soll.":"要复制到的内存指针。\r\n","현재 모니커를 지정된 모니커와 비교하여 두 모니커가 같은지 여부를 나타냅니다.":"将当前名字对象与指定名字对象进行比较，并指示这两个名字对象是否相等。\r\n","Die Methode gibt einen Verweis auf den Enumerator von Objektparametern zurück.Dieser Parameter wird nicht initialisiert übergeben.":"该方法返回对对象参数枚举器的引用。该参数未初始化传递。\r\n","데이터가 작성되는 대상 장치에 대한 정보가 들어 있는 DVTARGETDEVICE 구조체에 대한 포인터를 지정합니다. ":"指定指向 DVTARGETDEVICE 结构的指针，该结构包含有关数据正在写入的设备的信息。\r\n","LHashValOfNameSys를 사용하여 계산되는 ":"使用 LHashValOfNameSys 计算\r\n"," bereit, wenn eine automatische GUID nicht erwünscht ist.":" 如果不需要自动 GUID，则准备就绪。\r\n","Преобразует значение указанного объекта в объект ":"将指定对象的值转换为对象\r\n","Пытается извлечь целевой объект, на который ссылается текущий объект ":"尝试检索当前对象引用的目标对象\r\n"," aufgelisteten Elemente zurück. ":" 列出的项目。\r\n","Registriert, dass das bereitgestellte Objekt inzwischen ausgeführt wird.":"注册提供的对象现在正在运行。\r\n","Позволяет частично доверенному коду вызывать сборку.Без этого объявления использовать сборку может только полностью доверенный код.Этот класс не наследуется.":"允许部分受信任的代码调用程序集。如果没有此声明，则只有完全受信任的代码才能使用该程序集。此类不会被继承。\r\n","지정된 파일에 개체의 복사본을 저장합니다.":"将对象的副本保存到指定文件。\r\n","Представляет операции сравнения строк, в которых используются правила сравнения с учетом регистра, языка и региональных параметров или правил сравнения по порядковому номеру.":"表示使用区分大小写、区分区域性或序号比较规则的字符串比较操作。\r\n","구현되거나 상속된 인터페이스 형식의 특성을 정의합니다.":"定义实现或继承的接口类型的特征。\r\n","Eine 8-Byte-Ganzzahl ohne Vorzeichen.":"一个 8 字节无符号整数。\r\n","반환할 대리자의 형식입니다. ":"要返回的委托类型。\r\n","Ein Objekt, dessen Typ ":"一个对象，它的类型\r\n","При возвращении данного метода содержит BSTR с полным именем файла, содержащего библиотеку DLL, используемую для файла справки.Если вызывающему объекту не требуется имя файла, ":"当此方法返回时，包含一个 BSTR，其中包含用于帮助文件的 DLL 的文件的完全限定文件名。如果调用者不需要文件名，\r\n","Flags, die die Vererbungseigenschaften des neuen ACE angeben.":"指定新 ACE 的继承属性的标志。\r\n",", представляющее число со знаком в системе счисления, основание которой отлично от 10, предваряется знаком минус.-или-":", 表示以除 10 以外的基数表示的有符号数，前面有减号。-或-\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende Dezimalzahl.":"将指定的 32 位无符号整数的值转换为等效的十进制数。\r\n","Ruft den Typ für diesen ACE (Access Control Entry, Zugriffssteuerungseintrag) ab.":"获取此访问控制项 (ACE) 的类型。\r\n","만큼 거듭제곱한 값입니다.":"它是 的 次方值。\r\n","라이브러리의 설명서 문자열, 전체 도움말 파일 이름과 경로, 사용할 지역화 컨텍스트, 도움말 파일의 라이브러리 도움말 항목에 대한 컨텍스트 ID 등을 검색합니다.":"检索库的文档字符串、完整的帮助文件名和路径、要使用的本地化上下文以及帮助文件中库的帮助主题的上下文 ID。\r\n","Ein Wert, der ":"一个值\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.":"将指定的 8 位无符号整数的值转换为等效的双精度浮点数。\r\n","Der Bezeichner dieses ":"这个的标识符\r\n","Die Zeichenfolgendarstellung der aktuellen Instanz in kartesischer Form entsprechend den Werten von ":"当前实例的字符串表示形式，笛卡尔形式，给定的值\r\n","경로 문자열의 확장명을 변경합니다.":"更改路径字符串的扩展名。\r\n","Die Zugriffsmaske für die Zugriffssteuerungsregel, die entfernt werden soll.":"要删除的访问控制规则的访问掩码。\r\n","Значение true для обычной операции удаления и значение false для завершения работы с дескриптором.":"Значение true для обычной операции удаления и значение false для завершения работы с дескриптором。\r\n"," ist ein Windows-Runtime-Objekt. ":" 是 Windows 运行时对象。\r\n","개체가 해당 파일에 쓸 수 있다는 것을 개체에 알립니다.":"通知对象它可以写入该文件。\r\n","오류의 HRESULT가 들어 있는 개체입니다. ":"包含错误的HRESULT的对象。 \r\n","Ruft den DNS-Hostnamen (Domain Name System) oder die IP-Adresse eines Servers ab oder legt diese fest.":"获取或设置服务器的 DNS（域名系统）主机名或 IP 地址。\r\n","두 수의 중간에 있는 수는 0에서 먼 쪽의 가장 가까운 수로 반올림됩니다.":"两个数字中间的数字四舍五入到离零最近的数字。\r\n","Die Gleitkommazahl mit einfacher Genauigkeit. ":"单精度浮点数。\r\n","Открытый ключ для этой сборки.":"此程序集的公钥。\r\n","부호 있는 16비트 정수를 복소수로 변환하는 암시적 변환을 정의합니다.":"定义从有符号 16 位整数到复数的隐式转换。\r\n"," wird nicht unterstützt. ":" 不支持。\r\n","Kopiert Daten aus einem nicht verwalteten Speicherzeiger in ein verwaltetes Array von Gleitkommazahlen mit einfacher Genauigkeit.":"将数据从非托管内存指针复制到单精度浮点数的托管数组。\r\n","Dieser Parameters gibt die IConnectionPointContainer-Schnittstelle des verbindungsfähigen Objekts zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此参数返回可连接对象的 IConnectionPointContainer 接口。此参数未初始化传递。\r\n","Verfolgt ausstehende Handles und erzwingt eine Garbage Collection, wenn der angegebenen Schwellenwert erreicht wird.":"跟踪未完成的句柄并在达到指定阈值时强制进行垃圾回收。\r\n","Предоставляет метод для сравнения двух объектов.":"提供用于比较两个对象的方法。\r\n","При возвращении данного метода содержит указатель интерфейса перечислителя.Этот параметр передается без инициализации.":"当此方法返回时，包含一个枚举器接口指针。此参数无需初始化即可传递。\r\n"," vom Typ Rückruf-ACE ist.":" 属于回调 ACE 类型。\r\n","Konvertiert den angegebenen booleschen Wert in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.":"将指定的布尔值转换为等效的 16 位无符号整数。\r\n","Возвращает уникальный идентификатор текущего управляемого потока.":"返回当前托管线程的唯一 ID。\r\n","메서드에 적용될 때 메서드는 개체 그래프의 개체가 deserialization 중 호출되도록 지정합니다.그래프에 있는 다른 개체에 상대적인 역직렬화의 순서는 명확하지 않습니다.":"当应用于方法时，该方法指定在反序列化期间调用对象图中的对象。反序列化相对于图中其他对象的顺序不明确。\r\n","Eine Zeichenfolge, die den Wert ":"包含值的字符串\r\n","-Parameter zugeordnet ist. Dieser ist bei erfolgreicher Freigabe 0 (null).":"参数被赋值。如果发布成功，则为 0（零）。\r\n","Возвращает квадратный корень из указанного числа.":"返回指定数字的平方根。\r\n","При возвращении данного метода содержит ссылку на содержащую библиотеку типов.Этот параметр передается без инициализации.":"当此方法返回时，包含对包含类型库的引用。此参数在没有初始化的情况下传递。\r\n","특성 사용 메서드에서 반환하기 전에 호출 수신자가 Win32 API SetLastError를 호출할지 여부를 나타냅니다.":"指示调用接收方是否在从Use属性方法返回之前调用Win32API SetLastError。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.":"将指定的双精度浮点数的值转换为等效的 8 位无符号整数。\r\n"," 매개 변수에 추가되는 추가 바이트 오프셋입니다. ":" 添加到参数的额外字节偏移量。\r\n","Значение, эквивалентное числу, которое задается параметром ":"与参数指定的数字相等的值\r\n","현재 인스턴스가 측정한 총 밀리초 수를 나타내는 읽기 전용 정수(Long)입니다.":"一个只读长整数，表示当前实例测量的总毫秒数。\r\n","64-битное целое число со знаком, считанное из неуправляемой памяти с указанным смещением.":"从指定偏移量处的非托管内存中读取的 64 位带符号整数。\r\n","Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.":"将指定基数中数字的字符串表示形式转换为等效的 32 位无符号整数。\r\n","Gibt die additive Inverse einer angegebenen komplexen Zahl zurück.":"返回指定复数的加法逆元。\r\n","Reserviert ein ":"预留一个\r\n","자식을 확인하기 전에 기본 인터페이스의 이름을 확인을 했는지를 나타냅니다. 이것은 기본 동작과 반대입니다.":"指示在解析其子项之前是否检查基础接口的名称。这与默认行为相反。\r\n"," истекло до получения сигнала каким-либо из дескрипторов ожидания.Это поле является константой.":" 在任何等待句柄接收到信号之前经过的时间。该字段是常量。\r\n",", wenn Sie ihn auf den ":", 如果你把他放在\r\n"," или объектом типа, поддерживающего неявное преобразование к значению ":" 或支持隐式转换为值的类型的对象\r\n","Eine 64-Bit-Ganzzahl ohne Vorzeichen.":"一个 64 位无符号整数。\r\n","Значение, в виде которого будут маршалированы данные. ":"将在其中封送数据的值。\r\n"," 인터페이스를 지원하지 않는 경우 ":" 如果接口不支持\r\n","Поддерживает простой перебор элементов универсальной коллекции.":"支持通用集合元素的简单迭代。\r\n","Gibt an, ob das angegebene Objekt dem aktuellen ":"Gibt an, ob das angegebene Objekt dem aktuellen\r\n","Gibt void im Stil von C an.":"指定 C 风格的 void。\r\n","Идентификатор IID запрошенного интерфейса.":"请求接口的 IID。\r\n","Класс поддерживает агрегирование.":"该类支持聚合。\r\n","지정된 개체 값을 해당하는 10진수로 변환합니다.":"将指定的对象值转换为其等效的十进制值。\r\n","Возвращает число e, возведенное в степень, определяемую комплексным числом.":"返回数 e 的复数次方。\r\n","Ein VARIANT zum Marshallen verwalteter formatierter Klassen und Werttypen.":"用于编组托管格式化类和值类型的 VARIANT。\r\n","VARIANT far 포인터를 나타냅니다.":"VARIANT 表示远指针。\r\n","Одна из строк в массиве имеет значение null. ":"数组中的字符串之一为空。\r\n","Gibt an, ob Runtime Callable Wrappers (RCWs) aus einem beliebigen Kontext zur Bereinigung verfügbar sind.":"指示运行时可调用包装器 (RCW) 是否可用于从任何上下文中进行清理。\r\n"," 구조체의 수입니다. ":" 结构的数量。\r\n","Возвращает время, истекшее с момента загрузки системы (в миллисекундах).":"返回自系统启动以来经过的时间（以毫秒为单位）。\r\n"," является значением по умолчанию.":" 是默认值。\r\n","Маршалирует данные типа VT_VARIANT | VT_BYREF из управляемого кода в неуправляемый.Этот класс не наследуется.":"封送 VT_VARIANT 类型的数据 | VT_BYREF from managed to unmanaged code. 此类不被继承。\r\n"," округляется до ближайшего числа.Например, при округлении до второго знака после десятичной запятой значение 2,345 преобразуется в 2,34, а значение 2,355 — в 2,36.":" 四舍五入到最接近的数字。例如，四舍五入到小数点后第二位会将 2.345 转换为 2.34，将 2.355 转换为 2.36。\r\n","Тип, размер которого возвращается.":"返回其大小的类型。\r\n",", используя указанную строку и емкость.":", 使用指定的字符串和容量。\r\n","Преобразует значение заданного 32-разрядного целого числа без знака в эквивалентное число двойной точности с плавающей запятой.":"将指定的 32 位无符号整数的值转换为其等效的双精度浮点数。\r\n","Der Schnittstellenzeiger, der die angegebene Schnittstelle für das Objekt darstellt.":"表示对象的指定接口的接口指针。\r\n","Преобразует подмножество массива знаков Юникода, представляющих двоичные данные в виде цифр в кодировке Base64, в эквивалентный массив 8-разрядных целых чисел без знака.Параметры задают подмножество входного массива и количество преобразуемых элементов.":"将表示二进制数据为 Base64 编码数字的 Unicode 字符数组的子集转换为等效的无符号 8 位整数数组。参数指定输入数组的子集和要转换的元素数。\r\n","Gibt ein unsignedlong an.":"指定一个 unsignedlong。\r\n","Recupera la ruta absoluta del archivo de trabajo actual del objeto o, si no existe ningún archivo de trabajo, la extensión del nombre de archivo predeterminado del objeto.":"检索对象当前工作文件的绝对路径，如果不存在工作文件，则检索对象默认文件名的扩展名。\r\n","Доступное только для чтения длинное целое число, представляющее общее число тактов таймера, измеренное текущим экземпляром.":"一个只读长整数，表示当前实例测量的计时器滴答总数。\r\n","Der Objekttyp. ":"对象类型。\r\n","[Поддерживается только в .NET Framework 4.5.1 и более поздних версиях] Маршалирует данные из неуправляемого блока памяти во вновь выделенный управляемый объект типа, указанного параметром универсального типа. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 将非托管内存块中的数据封送到由泛型类型参数指定的类型的新分配的托管对象。\r\n","Die Zahl, die gleich":"号码一样\r\n","-Objekt, das der Auflistung hinzugefügt werden soll.":"- 要添加到集合中的对象。\r\n",", используя указанные тип и имя события в типе.":", 在类型中使用指定的类型和事件名称。\r\n","Ein Bytearray mit der Länge 1.":"Ein Bytearray mit der Lange 1。\r\n"," ignoriert.Wenn kein Ergebnis erforderlich ist, wird dies auf null festgelegt.":" 忽略。如果不需要结果，则将其设置为空。\r\n"," oder sowohl ":" 或两者\r\n","-Objekt enthalten kann.Diese Zahl sollte nur als Anhaltspunkt verwendet werden.":"-object may contain.此数字仅供参考。\r\n","является указателем null. ":"是一个空指针。\r\n","Строка, содержащая сведения об авторских правах.":"包含版权信息的字符串。\r\n"," 열거형의 요소 중 하나여야 합니다.":" 必须是枚举的元素之一。\r\n","-Enumeration definiert.":"-枚举定义。\r\n","При возвращении данного метода содержит объект, указывающий, куда поместить извлеченные данные.Этот параметр передается без инициализации.":"当此方法返回时，包含一个对象，指示将检索到的数据放在哪里。此参数无需初始化即可传递。\r\n","При возвращении данного метода содержит структуру STATSTG, описывающую этот объект потока.Этот параметр передается без инициализации.":"当这个方法返回时，包含一个描述这个线程对象的STATSTG结构。这个参数没有初始化就被传递了。\r\n","Предоставляет моникер, объединение которого с правой частью данного моникера или моникера с подобной структурой приводит к нулевому значению.":"提供一个名字对象，其与此名字对象的右侧或具有类似结构的名字对象的串联会产生空值。\r\n","Fügt dem aktuellen ":"添加当前\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.":"将指定的 16 位无符号整数的值转换为等效的 16 位有符号整数。\r\n"," уже существует.":" 已经存在。\r\n","-Objekt wird für Identitätswechsel verwendet.":"- 对象用于模拟。\r\n","두 개의 8비트 부호 없는 정수 중 더 큰 숫자를 반환합니다.":"返回两个 8 位无符号整数中较大的一个。\r\n","Der anstelle des standardmäßigen Wörterbuchwertnamens zu verwendende Name.":"Der anstelle des standardmäßigen Wörterbuchwertnamens zu verwendende 名称。\r\n","Identificador del miembro cuyo nombre o nombres se van a devolver. ":"要返回其名称的成员的标识符。 \r\n","URI에 액세스하는 사용자의 사용자 이름입니다.":"访问 URI 的用户的用户名。\r\n","Eine 32-Bit-Ganzzahl mit Vorzeichen, die die seit dem letzten Start des Computers vergangene Zeit in Millisekunden enthält. ":"一个 32 位有符号整数，包含自上次启动计算机以来的毫秒数。\r\n","Nicht genug Arbeitsspeicher ist verfügbar, um den zur Berechnung des Hashcodes erforderlichen Puffer zuzuweisen.":"没有足够的内存可用于分配计算哈希代码所需的缓冲区。\r\n","지정된 16비트 부호 없는 정수를 실제 변환 작업 없이 반환합니다.":"返回指定的 16 位无符号整数而不进行任何实际转换。\r\n"," der Quellschnittstelle. ":" 源接口。\r\n","Gibt einen Wert zurück, der das Vorzeichen einer 32-Bit-Ganzzahl mit Vorzeichen angibt.":"返回一个值，该值指示 32 位有符号整数的符号。\r\n"," не имеет расширения и значение параметра ":" 没有扩展名和参数值\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 32 位带符号整数的值转换为等效的 16 位无符号整数。\r\n","형식 라이브러리는 컨트롤을 설명하고 보이지 않는 개체용 형식 브라우저에 표시되지 않아야 합니다.":"类型库描述了一个控件，不应该在不可见对象的类型浏览器中可见。\r\n","싱글 바이트 길이 접두사가 있는 ANSI 문자열입니다.":"带有单字节长度前缀的 ANSI 字符串。\r\n"," beim Serialisieren oder Deserialisieren eines bestimmten Typs erkannt werden sollen. ":" 在序列化或反序列化特定类型时被识别。\r\n","읽을 관리되지 않는 메모리의 주소입니다.":"要读取的非托管内存中的地址。\r\n","Der erste zu addierende Wert.":"要添加的第一个值。\r\n","Заданное соглашение о вызове.":"指定的调用约定。\r\n","Возвращает большее из двух 64-битовых целых чисел без знака.":"返回两个 64 位无符号整数中较大的一个。\r\n","Gibt den absoluten Wert einer 16-Bit-Ganzzahl mit Vorzeichen zurück.":"返回 16 位有符号整数的绝对值。\r\n","이(가) 반환됩니다.":"被退回。\r\n","Die erste von zwei zu vergleichenden 64-Bit-Ganzzahlen ohne Vorzeichen. ":"要比较的两个 64 位无符号整数中的第一个。\r\n","응용 프로그램 디렉터리를 검색하고 LOAD_WITH_ALTERED_SEARCH_PATH 플래그가 있는 Win32 LoadLibraryEx 함수를 호출합니다.이 값은 다른 값이 지정되는 경우 무시됩니다.":"检索应用程序目录并使用LOAD_WITH_ALTERED_SEARCH_PATH标志调用Win32LoadLibraryEx函数。如果指定了其他值，则忽略此值。\r\n","Возвращает идентификатор ":"返回一个标识符\r\n"," представляет общее затраченное время, измеренное текущим экземпляром.":" 表示当前实例测量的总耗用时间。\r\n"," como colecciones válidas serializables.":" como collecciones validas serializables。\r\n","Инициализирует новые экземпляры ":"初始化新实例\r\n","으로 복사하고 각 ANSI 문자를 유니코드로 확장합니다.":"并将每个 ANSI 字符扩展为 Unicode。\r\n","Gibt die Aufrufkonvention für das Aufrufen von Methoden an, die in nicht verwaltetem Code implementiert sind.":"Gibt die Aufrufkonvention für das Aufrufen von Methoden an，die in nicht verwaltetem Code implementiert sind。\r\n","Число с плавающей запятой двойной точности, эквивалентное числу ":"相当于一个数字的双精度浮点数\r\n",", представляющий значение по умолчанию для свойства, с которым связан этот атрибут.":"表示与此属性关联的属性的默认值的 。\r\n","advise 싱크에서 데이터의 변경 내용에 대한 알림을 받을 시기를 결정하는 ":"advisory sink 确定何时通知数据更改。\r\n",", чтобы переопределить тип элемента, заданный по умолчанию.":"覆盖默认元素类型。\r\n","Die Anzahl der erfassten Handles.":"捕获的句柄数。\r\n","지정된 경로 문자열에 대한 절대 경로를 반환합니다.":"返回指定路径字符串的绝对路径。\r\n","Представление эскиза объекта, позволяющее отображать этот объект в средствах просмотра.Эскиз представляет собой аппаратно-независимый точечный рисунок, приблизительно 120 на 120 пикселей, 16 цветов (рекомендуется), возможно, помещенный в метафайл.":"允许在查看器中显示对象的对象的缩略图表示。缩略图是与设备无关的位图，大约 120 x 120 像素，16 种颜色（推荐），可能放置在图元文件中。\r\n",".Если передается указатель, он рассматривается как размер.":".如果传递指针，则将其视为大小。\r\n","При переопределении в производном классе возвращает хэш-код указанной строки.":"在派生类中重写时，返回指定字符串的哈希码。\r\n","null로 끝나는 와이드 문자열을 나타냅니다.":"表示以 null 结尾的宽字符串。\r\n","Управляет размещением объекта при его экспорте в неуправляемый код.":"控制对象导出到非托管代码时的放置。\r\n"," von dieser Methode zurückgegeben.":" 通过该方法返回。\r\n","-Objekt einen ACE mit den angegebenen Einstellungen hinzu.":"具有指定设置的 ACE 的对象。\r\n","현재 프로세스에서 환경 변수의 값을 검색합니다. ":"从当前进程中检索环境变量的值。\r\n","Der Kehrwert von ":"的倒数\r\n","프로필 이름입니다.":"配置文件名称。\r\n","Ruft das Objekt ab, das von ":"获取返回的对象\r\n","-Methode abgerufen wurde.":"方法被找回。\r\n","-Parameter bzw. der ":"- 参数或\r\n",".Имеет один параметр типа ":".有一个类型参数\r\n","인코딩할 문자열입니다.":"要编码的字符串。\r\n"," von Typen zurückgibt, die bei der Serialisierung oder Deserialisierung von Daten verwendet werden.":" 序列化或反序列化数据时使用的类型。\r\n","Возвращает управляемый массив, на который ссылается этот массив ":"Возвращает управляемый массив, на который ссылается этот массив\r\n","Упакованная копия ":"打包复制\r\n","Указатель COM IDispatch (Object в Microsoft Visual Basic 6.0).":"COM IDispatch 指针（Microsoft Visual Basic 6.0 中的对象）。\r\n","에 해당하는 유니코드 문자이거나, ":"是等同于的 Unicode 字符\r\n","-Parameter ist keine Schnittstelle.- oder -  Der Typ ist für COM nicht sichtbar. - oder - Der ":"- 参数不是接口。- 或 - 该类型对 COM 不可见。 - 或者\r\n","Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 16-Bit-Ganzzahl mit Vorzeichen.":"使用指定的区域性特定格式设置信息将指定对象的值转换为 16 位带符号整数。\r\n"," 매개 변수에 연결된 RCW의 새 참조 횟수 값입니다. 해제 작업을 성공적으로 마치면 값이 0입니다.":"附加到参数的 RCW 的新引用计数值。如果释放操作成功，则值为 0。\r\n","Eine Zeichenfolge aus hexadezimalen Paaren, die durch einen Bindestrich getrennt sind. Jedes Paar stellt ein Element aus der Teilmenge von ":"由连字符分隔的一串十六进制对。每对代表来自子集的一个元素\r\n","초당 틱 수로 나타낸 타이머의 빈도를 가져옵니다.이 필드는 읽기 전용입니다.":"获取计时器的频率，以每秒滴答数为单位。此字段是只读的。\r\n","Возвращает большее из двух 8-битовых целых чисел со знаком.":"返回两个 8 位有符号整数中较大的一个。\r\n","Gibt die angegebene Überwachungsregel für den angegebenen Benutzer zurück.":"返回指定用户的指定审核规则。\r\n","Возвращает параметры текущей привязки, хранящиеся в контексте этой привязки.":"获取当前绑定的设置，存储在此绑定的上下文中。\r\n","16-битовое целое число без знака, образованное двумя байтами, начинающимися с ":"由两个字节组成的 16 位无符号整数\r\n","사인을 나타내는 숫자입니다. ":"代表符号的数字。\r\n"," в неуправляемый указатель памяти.":" 到非托管内存指针。\r\n","Gibt einen BSTR-Zeiger frei, der mit der ":"释放与关联的 BSTR 指针\r\n","-Objekt ein Verzeichnisobjekt ist.":"object 是一个目录对象。\r\n","serialization 또는 deserialization 도중에 오류가 발생할 경우 throw되는 예외입니다.":"在序列化或反序列化过程中发生错误时抛出的异常。\r\n","Добавляет строковое представление указанного числа с плавающей запятой с удвоенной точностью к данному экземпляру.":"将指定浮点数的双精度字符串表示形式添加到此实例。\r\n","Исключение, создаваемое при возникновении ошибки ввода-вывода.":"发生 I/O 错误时抛出的异常。\r\n"," 개체를 바이트 배열로 변환한 값입니다.":" 对象转换为字节数组。\r\n","FILETIME의 하위 32비트를 지정합니다.":"指定 FILETIME 的低 32 位。\r\n","경로 각 부분의 배열입니다.":"路径部分的数组。\r\n","Ссылка ":"关联\r\n"," не находится в формате свойства для значения ":" 不是价值的属性格式\r\n","Gibt den Elementtyp des nicht verwalteten ":"返回非托管的项目类型\r\n","DATE 값을 나타냅니다.":"表示日期值。\r\n","Definiert eine implizite Konvertierung einer 64-Bit-Ganzzahl mit Vorzeichen in eine komplexe Zahl.":"定义 64 位带符号整数到复数的隐式转换。\r\n","Элемент с таким ключом уже существует в объекте ":"对象中已存在具有相同键的元素\r\n"," ist nicht null. ":" 不为零。\r\n","Entfernt alle Zugriffsregeln, die dieselbe Sicherheits-ID wie die angegebene Zugriffsregel enthalten, aus der DACL (Discretionary Access Control List), die diesem ":"从与此关联的自由访问控制列表 (DACL) 中删除所有包含与指定访问规则相同的安全 ID 的访问规则\r\n"," aufgerufen wird. ":" 叫做。\r\n","Преобразует подмножество массива 8-разрядных целых чисел без знака в эквивалентное подмножество массива знаков Юникода, состоящее из цифр в кодировке Base64.Подмножества задаются с помощью параметров как смещение во входном и выходном массивах и количеством преобразуемых элементов входного массива.":"将无符号 8 位整数数组的子集转换为由 Base64 编码数字组成的 Unicode 字符数组的等效子集。使用参数指定输入和输出数组中的偏移量以及输入数组元素的数量转换。\r\n",", переданным как значение false.":", 传递为假。\r\n","Der Schnittstellenzeiger, der die Schnittstelle für das Objekt darstellt.":"表示对象接口的接口指针。\r\n","Массив, содержащий требуемый элемент. ":"包含所需元素的数组。\r\n","자동 GUID가 부적당할 경우 명시적 ":"如果自动GUID不合适，则显式 \r\n","계층적 파일 시스템 구조를 반영하는 경로 문자열에서 디렉터리 수준을 구분하는 데 사용되는 플랫폼 특정 문자를 제공합니다.":"提供特定于平台的字符，用于在反映分层文件系统结构的路径字符串中分隔目录级别。\r\n"," = 1 можно использовать для поиска первого экземпляра.Поиск прекращается после обнаружения первого экземпляра.При выходе показывает число обнаруженных экземпляров.Если значения in и out параметра ":" = 1 可用于查找第一个实例。当找到第一个实例时搜索停止。退出时，它显示找到的实例数。如果 in 和 out 参数值\r\n","Das Ergebnis der Potenzierung von ":"增强的结果\r\n","를 나타내면 true이고, 그렇지 않으면 false입니다.":"为真；否则为假。\r\n","Вставляет строковое представление объекта в данный экземпляр на указанную позицию символа.":"将对象的字符串表示形式插入此实例的指定字符位置。\r\n"," представляют различные версии платформы .NET Framework; в противном случае — значение false.":" 代表 .NET Framework 的不同版本；否则，假的。\r\n","지정된 10진수 값을 해당하는 32비트 부호 없는 정수로 변환합니다.":"将指定的十进制值转换为等效的 32 位无符号整数。\r\n","Ein Winkel θ im Bogenmaß im Bereich-π≤θ≤π, und tan(θ) = ":"以弧度为单位的角度 θ 在 -π≤θ≤π 范围内，且 tan(θ) =\r\n","Gibt an, dass die Aufrufkonvention Macintosh Pascal (MACPASCAL) für eine Methode verwendet werden soll.":"指定应将 Macintosh Pascal (MACPASCAL) 调用约定用于方法。\r\n","환경 변수의 이름입니다.":"环境变量的名称。\r\n","Der Namespace der Datenvertragsmember.":"Der Namespace der Datenvertragsmember。\r\n","이 메서드는 반환될 때 이 ITypeLib에 대한 ITypeComp 인스턴스의 인스턴스를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含此 ITypeLib 的 ITypeComp 实例的实例。此参数在未初始化的情况下传递。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.":"将指定的单精度浮点数的值转换为等效的 32 位无符号整数。\r\n","관리되지 않는 메모리 블록에 대한 포인터로서 이 메서드가 호출되기 전에 할당되어야 합니다. ":"指向非托管内存块的指针，必须在调用此方法之前分配该内存块。\r\n","Второе комплексное число для сложения.":"要添加的第二个复数。\r\n"," 오버로드와 비슷하게 동작합니다.":" 行为类似于重载。\r\n"," и этот экземпляр не принадлежат к одному типу.":"和这个实例不是同一类型。\r\n","Возвращает значение, определяющее знак десятичного числа.":"返回指定十进制数符号的值。\r\n","Kapselt ein Array und einen Offset im angegebenen Array.":"Kapselt ein Array 和 einen Offset im angegebenen Array。\r\n","지정된 유니코드 문자의 값을 해당하는 64비트 부호 있는 정수로 변환합니다.":"将指定 Unicode 字符的值转换为等效的 64 位带符号整数。\r\n","Stellt bei Daten-Advise-Verbindungen den Zugriff auf die Daten sicher. ":"确保访问数据以进行数据建议连接。\r\n",".Para que hacer su tipo sea serializable, los autores del tipo deben definir un contrato de datos para dicho tipo.":".Para que hacer su tipo sea serializable, los autores del tipo deben definir un contrato de datos para dicho tipo。\r\n","Bewirkt, dass eine Überwachungsmeldung protokolliert wird, wenn ein angegebener Vertrauensnehmer versucht, den Zugriff auf ein Objekt zu erhalten.Der Vertrauensnehmer wird durch ein ":"当指定的受托者尝试访问对象时，导致记录审计消息。受托者由\r\n","쓰기 전에 ":"写作之前\r\n","Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine Gleitkommazahl mit doppelter Genauigkeit.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为双精度浮点数。\r\n","값이 -1인 정수입니다.":"값이 -1인 정수입니다.\r\n","반환되는 난수의 하한(포함)입니다. ":"返回的随机数的下限（含）。\r\n","인터페이스가 런타임에 바인딩만 사용하는 dispinterface로 COM에 노출됨을 나타냅니다.":"指示接口作为仅在运行时使用绑定的dispinterface公开给COM。\r\n","현재 사용자의 임시 폴더 경로를 반환합니다.":"返回当前用户临时文件夹的路径。\r\n","Die Verwendung des neuen ACE.":"使用新的 ACE。\r\n","Целое число, представляющее адрес выделенного блока памяти.Освобождать эту память необходимо с помощью метода ":"一个整数，表示已分配内存块的地址。必须使用以下方法释放此内存\r\n","에서 COM VARIANT의 수입니다.":"中 COM VARIANT 的数量。\r\n","Число, ближайшее к параметру ":"最接近参数的数字\r\n"," равно нулю, возвращается значение ":" 为零，返回值\r\n"," 값을 1씩 증가합니다.":" 将值增加 1。\r\n","Значение true, если дескриптор освобождается успешно, в противном случае, в случае катастрофической ошибки — значение  false.В таком случае создается управляющий помощник по отладке releaseHandleFailed MDA.":"Значение true, если дескриптор освобождается успешно, в противном случае, в случае катастрофической ошибки — значение  false.В таком случае создается управляющий помощник по отладке releaseHandleFailed MDA.\r\n","Ein Zeiger auf die IMoniker-Schnittstelle im neuen vollständigen Moniker des Objekts.":"指向对象新的完整名字对象中 IMoniker 接口的指针。\r\n","Представляет маркер, уникально определяющий вспомогательное соединение.Этот маркер возвращается методом, настраивающим вспомогательное соединение.":"表示唯一标识辅助连接的句柄。该句柄由配置辅助连接的方法返回。\r\n","-Werte, der den Typ des zu erstellenden ":"-Values代表要创建的类型\r\n","Последний код ошибки, заданный вызовом функции SetLastError платформы Win32.":"Win32 调用 SetLastError 函数指定的最后一个错误代码。\r\n"," weniger Dezimalstellen als ":" 小数位数少于\r\n","Второе из двух сравниваемых 64-разрядных целых чисел без знака. ":"正在比较的两个无符号 64 位整数中的第二个。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung.":"将指定的 8 位无符号整数的值转换为其等效的字符串表示形式。\r\n","지정된 32비트 부호 없는 정수의 값을 부울 값으로 변환합니다.":"将指定的 32 位无符号整数的值转换为布尔值。\r\n","Объект типа для типа базового конечного автомата, который используется для реализации метода конечного автомата.":"用于实现状态机方法的基础状态机类型的类型对象。\r\n","Сравнивает данный экземпляр с 64-разрядным целым числом без знака и возвращает целое число, которое показывает, является ли значение данного экземпляра меньшим или большим по сравнению со значением 64-битового целого числа без знака или равным ему.":"将此实例与无符号 64 位整数进行比较，并返回一个整数，该整数指示此实例的值是小于还是大于或等于 64 位无符号整数的值。\r\n","의 아크사인인 각도입니다.":"是角，它是的反正弦\r\n","는 포함되지 않습니다.하지만 ":"不包括在内。但是\r\n","4-байтовое целое число без знака.":"4 字节无符号整数。\r\n","의 코사인입니다.":"是的余弦\r\n","-Klasse mit Standardwerten.":"具有默认值的类。\r\n","[.NET Framework 4.5.1 이상 버전에서 지원됨] 지정된 형식의 대리자를 관리되지 않는 코드에서 호출할 수 있는 함수 포인터로 변환합니다. ":"[在 .NET Framework 4.5.1 及更高版本中支持] 将指定类型的委托转换为可从非托管代码调用的函数指针。\r\n"," ist negativ oder zu hoch, um den gesamten ":" 为负数或太高\r\n","이(가) null인 경우 null이며 ":"如果为空，则为空；\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 64비트 부호 있는 정수로 변환합니다.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的 64 位有符号整数。\r\n","두 수의 중간에 있는 수는 가장 가까운 짝수로 반올림됩니다.":"两个数字中间的数字四舍五入到最接近的偶数。\r\n","-Parameter, die an den Konstruktor übergeben werden, und die Persist-Methoden identisch sind.Weitere Informationen finden Sie in den Hinweisen.":"传递给构造函数的参数和 persist 方法是相同的。请参阅注释以获取更多信息。\r\n","Определяет размер выделяемой области памяти путем указания количества значений и их типа.Данный метод необходимо вызвать перед использованием экземпляра ":"通过指定值的数量和它们的类型来确定分配的内存区域的大小。在使用实例之前必须调用此方法\r\n","Подсчитывает полное число параметров.":"计算参数总数。\r\n"," имеет значение null, ":" 一片空白，\r\n","이 형식의 인스턴스에 대해 바이트 맞춤을 지정합니다.":"指定此类型实例的字节对齐方式。\r\n","-Objekts wird der Zugriff auf ein gesichertes Objekt verweigert.":"-object 被拒绝访问受保护的对象。\r\n","[i]에서 지정한 형식 설명으로 인덱싱하는 MEMBERID입니다.이 매개 변수는 null일 수 없습니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"由 [i] 指定的类型描述索引的 MEMBERID。此参数不能为 null。此参数未初始化传递。\r\n","Получает общее затраченное время в тактах таймера, измеренное текущим экземпляром.":"获取当前实例测量的计时器的总运行时间（以滴答为单位）。\r\n","Имя свойства, используемого для доступа к полю с атрибутами.":"用于访问属性字段的属性的名称。\r\n","Содержит возвращаемый функцией тип.":"包含函数的返回类型。\r\n","Показывает, что хранилище содержит объект.":"指示商店包含一个对象。\r\n","가 변경되지 않은 상태로 반환됩니다.":"原样返回。\r\n","-Attribut nicht unterstützen, verwenden diesen Wert und ignorieren andere Werte.":"属性，使用此值并忽略其他值。\r\n"," или интерфейс ITypeComp.":" 或 ITypeComp 接口。\r\n","Символ, замещающий ":"替换字符\r\n","При возвращении данного метода содержит Object, который указывал, куда поместить данные.Этот параметр передается без инициализации.":"当此方法返回时，包含一个 Object 指示放置数据的位置。此参数无需初始化即可传递。\r\n","1-байтовое целое число со знаком.Этот элемент можно использовать для преобразования значения типа Boolean в 1-байтовое значение bool в стиле языка C (true = 1, false = 0).":"A 1-byte signed integer. 此元素可用于将 Boolean 值转换为 1-byte C 样式 bool 值（true = 1，false = 0）。\r\n","null이 아니면 함수는 DLL의 이름을 포함하는 BSTR에 ":"如果非空，该函数将写入包含 DLL 名称的 BSTR。\r\n","Содержит тип переменной.":"包含变量的类型。\r\n","Знак, образованный двумя байтами, начинающимися с ":"由两个字节组成的字符以\r\n","Der Delegat, der an nicht verwalteten Code übergeben werden soll.":"要传递给非托管代码的委托。\r\n","Предоставляет набор статических методов и свойств для поддержки компиляторов.Этот класс не наследуется.":"为编译器支持提供一组静态方法和属性。该类不被继承。\r\n","Setzt die Enumerationsfolge auf den Anfang zurück.":"将枚举序列重置为开头。\r\n","Предоставляет удобные методы для работы с безопасный дескриптор для ожидания обработки. ":"Предоставляет удобные методы для работы с безопасный DESCRIPTOR для ожидания обработки。\r\n"," que falta.Esta clase no puede heredarse.":" 少了。此类不能被继承。\r\n","Gibt Speicherplatz frei, der zuvor aus dem nicht verwalteten Speicher des Prozesses belegt wurde.":"释放先前从进程的非托管内存中分配的内存。\r\n","매개 변수는 호출자에서 호출 수신자로 정보를 전달합니다.":"参数将信息从调用者传递给被调用者。\r\n"," oder eine Datums- und Uhrzeitentsprechung von ":" 或等效的日期和时间\r\n","Der Typ für diesen ACE.":"此 ACE 的类型。\r\n","Gibt den Logarithmus einer angegebenen Zahl zur Basis 10 zurück.":"返回指定数字的以 10 为底的对数。\r\n"," можно использовать только для массива, элементы которого отображаются как поля в структуре.":" 只能用于其元素在结构中显示为字段的数组。\r\n","Sucht den angegebenen Schlüssel in der intern verwalteten Tabelle der Kontextobjektparameter und gibt ggf. das entsprechende Objekt zurück.":"在内部维护的上下文对象参数表中查找指定键并返回相应的对象（如果有）。\r\n","При возвращении данного метода содержит полное имя файла справки.Этот параметр передается без инициализации.":"当此方法返回时，包含帮助文件的全名。此参数无需初始化即可传递。\r\n","Инициализирует новый экземпляр класса AccessedThroughPropertyAttribute с именем свойства, используемого для доступа к полю с атрибутами.":"使用用于访问属性字段的属性名称初始化 AccessedThroughPropertyAttribute 类的新实例。\r\n","Указывает, может ли интерфейс ":"表示接口是否可以\r\n","에 해당하는 10진수입니다. ":"的十进制等价物。\r\n",", или значение 0, если строка ":", 或 0 如果字符串\r\n","При возвращении данного метода содержит ссылку на созданный объект.Этот параметр передается без инициализации.":"当此方法返回时，包含对已创建对象的引用。此参数无需初始化即可传递。\r\n",") ein Punkt in der kartesischen Ebene ist.Beachten Sie dabei:Für (":") 是笛卡尔平面中的一个点。注意对于 (\r\n","Ruft einen Wert ab, der angibt, ob die angegebene Pfadzeichenfolge einen Stamm enthält.":"获取一个值，该值指示指定的路径字符串是否包含根。\r\n","Возвращает синус указанного угла.":"返回指定角度的正弦值。\r\n","Приказывает компилятору использовать определенный номер версии для ресурса версии файла Win32.Не требуется, чтобы версия файла Win32 совпадала с номером версии сборки.":"告诉编译器为 Win32 文件版本资源使用特定的版本号。Win32 文件版本不需要与程序集版本号匹配。\r\n","숫자의 지정된 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.":"将数字的指定字符串表示形式转换为其等效的 16 位带符号整数。\r\n","Die DISPID des Members. ":"成员的 DISPID。\r\n","-Schnittstelle implementiert, oder null. ":"- 已实现接口，或为空。\r\n","Ein Objekt, das den Standardwert eines Parameters darstellt.":"表示参数默认值的对象。\r\n","Gibt den nullbasierten Parameter an, der die Anzahl von Arrayelementen enthält, vergleichbar mit size_is in COM.":"指定包含数组元素数量的从零开始的参数，类似于 COM 中的 size_is。\r\n","을 할당하고 관리되지 않는 메모리에 저장된 BSTR 문자열을 그 안에 복사합니다.":"并将存储在非托管内存中的 BSTR 字符串复制到其中。\r\n","출력 배열에서 쓰기를 시작할 위치입니다.":"输出数组中开始写入的位置。\r\n","Записываемый тип значения.":"要写入的值类型。\r\n","Количество элементов в буфере.":"缓冲区中的元素数。\r\n","-Wert, der angibt, ob es sich bei dem Member um eine Eigenschaft handelt, und ggf. um welche Art von Eigenschaft es sich handelt. ":"指示成员是否为属性的值，如果是，它是什么类型的属性。\r\n","지정된 비트 수만큼 오른쪽으로 이동한 값입니다.":"将值右移指定的位数。\r\n","decimal 값을 나타냅니다.":"表示十进制值。\r\n","이 메서드는 반환될 때 지정한 항목의 이름이 들어 있는 BSTR을 포함합니다.호출자에 항목 이름이 필요하지 않은 경우 ":"当此方法返回时，包含一个包含指定项目名称的 BSTR。如果调用者不需要项目名称\r\n","Eine Dezimalzahl.":"Eine Dezimalzahl。\r\n","Исключение, которое выдается, если ":"抛出的异常如果\r\n","Das aktuelle Element in der ":"当前元素在\r\n","Записывает в неуправляемую память целое число, разрядность которого соответствует собственной разрядности процессора.":"向非托管内存写入一个整数，其位宽与处理器自身的位宽相匹配。\r\n","Преобразует заданное строковое представление числа в эквивалентное десятичное число.":"将数字的给定字符串表示形式转换为其等效的十进制数。\r\n","Rundet einen Gleitkommawert mit doppelter Genauigkeit auf die nächste Ganzzahl.Ein Parameter gibt an, wie der Wert gerundet wird, wenn er genau zwischen zwei Zahlen liegt.":"Rounds a double-precision floating-point value to the nearest integer. 参数指定如果值恰好在两个数字之间，则如何舍入。\r\n","Eine plattformabhängige Ganzzahl ohne Vorzeichen.: 4 Byte für 32-Bit-Windows, 8 Bytes auf 64-Bit-Windows.":"依赖于平台的无符号整数。例如：32 位 Windows 为 4 个字节，64 位 Windows 为 8 个字节。\r\n","Копирует данные из указателя неуправляемой памяти в одномерный управляемый массив 8-битных целых чисел без знака.":"将数据从非托管内存指针复制到无符号 8 位整数的一维托管数组。\r\n"," — null, а значения ":" 为空，并且值\r\n","와 같으면 0이 반환됩니다.":", 返回 0。\r\n",", не был удален сборщиком мусора и остается доступным; в противном случае — false.":", 没有被垃圾收集并且仍然可用；否则，假的。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in einen entsprechenden booleschen Wert.":"将指定的 32 位无符号整数的值转换为等效的布尔值。\r\n","반환이 성공적이면, 소스에서 읽은 실제 바이트 수를 포함합니다. ":"如果返回成功，则包含从源读取的实际字节数。\r\n","Eine für den Kunden bestimmte Beschreibung des Fehlers.":"针对客户的错误描述。\r\n","Ruft einen Wert ab, der den Punkt angibt, bei dem die Erfassung beginnen soll.":"获取一个值，该值指示开始捕获的点。\r\n","Der anstelle des standardmäßigen Wörterbuchschlüsselnamens zu verwendende Name.":"Der anstelle des standardmäßigen Wörterbuchschlüsselnamens zu verwendende 名称。\r\n","Возвращает указанное значение 64-битового целого числа со знаком в виде массива байтов.":"以字节数组的形式返回指定的 64 位有符号整数值。\r\n","에서 상속된 형식에 사용할 수 있습니다.":"可用于从 继承的类型。\r\n","Der Offset im ":"中的偏移量\r\n","관리되지 않는 메모리의 지정된 오프셋 위치에서 읽은 64비트 부호 있는 정수입니다.":"从指定偏移量处的非托管内存中读取的 64 位带符号整数。\r\n","Ein Zeiger auf das erste Element eines Arrays von COM-VARIANTs. ":"指向 COM VARIANT 数组的第一个元素的指针。\r\n","Eine 64-Bit-Ganzzahl mit Vorzeichen, die beginnend bei ":"Eine 64-Bit-Ganzzahl mit Vorzeichen, die beginnend bei\r\n",", в которую копируются символы.Индексация начинается с нуля.":"字符被复制到的 。索引从零开始。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende Dezimalzahl.":"将指定的 8 位带符号整数的值转换为其等效的十进制值。\r\n"," с указанным сообщением об ошибке. ":" 带有指定的错误消息。\r\n","Предоставляет явный идентификатор ":"提供明确的标识符\r\n","매개 변수의 기본값을 가져옵니다.":"获取参数的默认值。\r\n","Возвращает значение, определяющее знак 64-битового целого числа со знаком.":"返回一个值，该值指定 64 位有符号整数的符号。\r\n",", das öfter verwendet wird.":", 使用频率更高。\r\n","Возвращает или задает имя для контракта данных типа.":"获取或设置类型的数据协定的名称。\r\n"," может содержать тип ":" 可能包含类型\r\n","배열의 문자열 중 하나에 ":"到数组中的字符串之一\r\n","Konvertiert den Wert des angegebenen Objekts in die entsprechende Zeichenfolgendarstellung.":"将指定对象的值转换为其等效的字符串表示形式。\r\n","Especifica que el campo es un miembro de enumeración y se debe serializar.":"Specifica que el campo es un miembro de enumeración y se debe serializar。\r\n","Первое значение для перемножения.":"要相乘的第一个值。\r\n","-Klasse und der ":"类和\r\n"," angibt, wie in der folgenden Tabelle veranschaulicht.WertBedingungKleiner als 0 (null)":" 如下表所示。ValueCondition小于零\r\n","Показывает, что значение является ссылкой.":"表示该值是一个引用。\r\n","Der Wert, der in eine 32-Bit-Ganzzahl ohne Vorzeichen konvertiert werden soll.":"要转换为 32 位无符号整数的值。\r\n","Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.":"将指定基数中数字的字符串表示形式转换为等效的 64 位无符号整数。\r\n","Konvertiert den Wert der aktuellen komplexen Zahl unter Verwendung des angegebenen Formats für die reellen und imaginären Teile in die entsprechende Zeichenfolgendarstellung in kartesischer Form.":"使用指定的实部和虚部格式，将当前复数的值转换为笛卡尔形式的等效字符串表示形式。\r\n","Эту переменную не следует показывать пользователю в браузере, хотя она существует и является связываемой.":"这个变量不应该在浏览器中显示给用户，尽管它存在并且是可绑定的。\r\n","Базовый адрес для записи в неуправляемой памяти.":"写入非托管内存的基地址。\r\n"," ist ein Windows-Runtime-Objekt.":" 是 Windows 运行时对象。\r\n","기본 속성을 사용하여 MarshalDirectiveException 클래스의 새 인스턴스를 초기화합니다.":"使用默认属性初始化 MarshalDirectiveException 类的新实例。\r\n"," ist null. - oder - \"":" 为零。 - 或者 - ”\r\n","Ruft das Verhalten der optimalen Zuordnung bei der Konvertierung von Unicode-Zeichen in ANSI-Zeichen ab.":"Ruft das Verhalten der optimalen Zuordnung bei der Konvertierung von Unicode-Zeichen in ANSI-Zeichen ab。\r\n"," und kleiner als ":" 并且小于\r\n","Eine IP-Anschlussnummer für den Dienst. ":"服务的 IP 端口号。\r\n","Преобразует значение заданного объекта в эквивалентное десятичное число.":"将指定对象的值转换为其等效的十进制数。\r\n","현재 바인드 컨텍스트에 저장되어 있는 현재 바인딩 옵션을 반환합니다.":"返回存储在当前绑定上下文中的当前绑定选项。\r\n","32-разрядное знаковое целое число, которое эквивалентно значению ":"一个 32 位有符号整数，等于该值\r\n","Die numerische Reihenfolge der Serialisierung oder Deserialisierung.":"序列化或反序列化的数字顺序。\r\n"," не равно 2, 8, 10 или 16. ":" 不等于 2、8、10 或 16。\r\n","Der Winkel im Bogenmaß, der der Arkuskosinus von ":"的反余弦值的弧度角\r\n","Преобразует значение заданного 8-битового целого числа без знака в эквивалентное число с плавающей запятой одиночной точности.":"将指定的 8 位无符号整数的值转换为其等效的单精度浮点数。\r\n","Пространство имен элементов контракта данных.":"Пространство имен элементов контракта данных。\r\n","Der Wert der vom ":"的价值\r\n","Ruft die imaginäre Komponente des aktuellen ":"获取当前的虚部\r\n","Возвращает значение, указывающее, представляют ли два объекта ":"返回一个值，指示两个对象是否表示\r\n","Представляет флаги библиотеки.":"表示库标志。\r\n","Индекс реализованного интерфейса или базового интерфейса. ":"已实现接口或基础接口的索引。\r\n"," und einer imaginären Komponente gleich 0. ":" 和一个等于 0 的虚部。\r\n","Задает выравнивание по границе байта для экземпляра этого типа.":"指定此类型实例的字节对齐。\r\n","Führt eine dauerhafte Speicherung der angegebenen Abschnitte der Sicherheitsbeschreibung aus, die diesem ":"执行与此关联的安全描述符的指定部分的持久保存\r\n","Stellt den Namen einer .NET Framework-Version dar.":"表示 .NET Framework 版本的名称。\r\n","Удаляет ссылку на целевой объект, представленный текущим объектом ":"删除对当前对象表示的目标对象的引用\r\n","При возвращении данного метода содержит файл cookie соединения.Этот параметр передается без инициализации.":"当此方法返回时，包含连接cookie。此参数无需初始化即可传递。\r\n","Ключ, поиск которого выполняется.Параметр ":"查找的关键参数\r\n"," 필드를 사용하여 배열의 크기를 나타냅니다.":" 使用字段来指示数组的大小。\r\n","형식 라이브러리는 제한되어 있으며, 사용자에게 표시되어서는 안 됩니다.":"类型库受到限制，不应对用户可见。\r\n","Ссылка на место хранения результата.Если ":"链接到存储结果的位置。如果\r\n","과 같으면 true를 반환하고, ":"如果等于则返回真\r\n"," definierten ungültigen Zeichen. ":" 定义的无效字符。\r\n","Zählt die zulässigen Rückgabewerte.":"计算允许的返回值。\r\n","Считывает из неуправляемой памяти 16-битное целое число со знаком.":"从非托管内存中读取一个 16 位有符号整数。\r\n","현재 모니커나 구조가 비슷한 모니커에 추가될 때 지정된 모니커를 생성하는 모니커를 제공합니다.":"提供一个名字对象，当添加到当前名字对象或具有类似结构的名字对象时，会产生指定的名字对象。\r\n","Строка, содержащая сведения о псевдониме по умолчанию.":"包含有关默认别名的信息的字符串。\r\n","Только что Инкапсулированный объект. ":"新封装的对象。\r\n","지정된 16비트 부호 있는 정수의 값을 해당하는 32비트 부호 없는 정수로 변환합니다.":"将指定的 16 位有符号整数的值转换为等效的 32 位无符号整数。\r\n"," 매개 변수가 가리키는 데이터가 있는 관리되는 개체입니다. ":" 具有参数指向的数据的托管对象。\r\n",", описывающее способ предоставления интерфейса COM.":"描述如何公开 COM 接口的 。\r\n","Die Verschiebung, die ":"的转变\r\n","Eine 8-Byte-Gleitkommazahl.":"一个 8 字节的浮点数。\r\n","Показывает указатель SAFEARRAY.":"显示 SAFEARRAY 指针。\r\n","Возвращает код ошибки обертки.":"返回包装器的错误代码。\r\n","Сколько раз следует добавить ":"我应该添加多少次\r\n",") в квадранте,-π < θ <-π/2.Для (":") 在象限中，-π < θ < -π/2。对于 (\r\n","-Objekte enthalten eine 32-Bit-Zugriffsmaske und ein ":"对象包含一个 32 位访问掩码和一个\r\n","Число знаков в подстроке ":"子字符串中的字符数\r\n","Тип валюты.Используется в ":"货币类型。用于\r\n","Gibt an, dass ein IMPLICITAPPOBJ zurückgegeben wurde.":"表示返回了 IMPLICITAPPOBJ。\r\n","Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 32-Bit-Ganzzahl ohne Vorzeichen.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为 32 位无符号整数。\r\n","Число записываемых типов значений.":"要写入的值类型的数量。\r\n","Десятичное число, эквивалентное числу ":"十进制等值数\r\n","Ein 32-Bit-Hashcode mit Vorzeichen, berechnet aus dem Wert des ":"一个带符号的 32 位哈希码，由\r\n"," для заданного объекта.":" 对于给定的对象。\r\n","Ein HRESULT-Wert, der den Erfolg oder Fehler der Operation angibt.":"指示操作成功或失败的 HRESULT 值。\r\n","마샬러가 VT_CY으로 마샬링할 개체를 래핑합니다.":"包装封送拆收器将使用VT_CY封送的对象。\r\n"," 매개 변수가 null이거나 올바른 형식이 아니면 변환에 실패합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":" 如果参数为 null 或类型不正确，则转换失败。此参数未初始化传递。\r\n","Comprueba si el objeto ha sufrido cambios desde la última vez que se guardó.":"检查对象自上次保存以来是否发生了更改。\r\n","숫자의 지정된 문자열 표현을 해당하는 10진수로 변환합니다.":"将数字的指定字符串表示形式转换为其等效的十进制。\r\n","Базовый адрес конечного объекта в неуправляемой памяти.":"目标对象在非托管内存中的基地址。\r\n","이 연결점을 개념적으로 소유하는 연결 가능한 개체에 대한 IConnectionPointContainer 인터페이스 포인터를 검색합니다.":"检索指向概念上拥有此连接点的可连接对象的 IConnectionPointContainer 接口指针。\r\n","Gibt an, dass eine Schnittstelle für COM als eine von IUnknown abgeleitete Schnittstelle verfügbar gemacht wird, wodurch nur frühes Binden ermöglicht wird.":"指示接口将作为 IUnknown 派生接口公开给 COM，只允许早期绑定。\r\n","Добавляет строковое представление указанного объекта к данному экземпляру.":"将指定对象的字符串表示形式添加到此实例。\r\n","Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 16-битовое целое число без знака.":"将具有指定基数的数字的字符串表示形式转换为其等效的 16 位无符号整数。\r\n","Удаляет первое вхождение указанного объекта из ":"从中删除第一次出现的指定对象\r\n","-Handle für das angegebene Objekt.":"- 指定对象的句柄。\r\n","지정된 16비트 부호 있는 정수의 값을 해당하는 유니코드 문자로 변환합니다.":"将指定的 16 位带符号整数的值转换为等效的 Unicode 字符。\r\n","Gibt eine zufällige Gleitkommazahl zurück, die größer oder gleich 0,0 und kleiner als 1,0 ist.":"返回大于或等于 0.0 且小于 1.0 的随机浮点数。\r\n","이(가) 포함되어 있습니다.":"已经包括了。\r\n"," плюс количество возвращаемых элементов превышает длину массива ":" 加上返回的元素个数大于数组长度\r\n","의 정규화된 위치입니다.":"是标准化的位置\r\n"," имеет значение null, а ":" 为空，并且\r\n","Ключ текущего элемента перечисления.":"当前枚举元素的键。\r\n","구조체 레이아웃이 Sequential 또는 Explicit이 아닌 경우 ":"结构布局不是顺序的或显式的\r\n","Gibt die maximal zulässige Länge eines nicht transparenten Daten-BLOB für Rückruf-ACEs (Access Control Entry, Zugriffssteuerungseintrag) in Bytes zurück.":"返回回调访问控制条目 (ACE) 的不透明数据 blob 的最大允许长度（以字节为单位）。\r\n","의 기본값입니다.":"的默认值。\r\n"," находится на равном расстоянии от двух чисел (четного и нечетного), то возвращаемое число определяется по значению параметра ":" 与两个数（偶数和奇数）的距离相等，那么返回的数由参数的值决定\r\n","Die Member-ID der abzurufenden Adresse des static-Members. ":"要获取的静态成员地址的成员ID。\r\n","Die erste von zwei zu vergleichenden 16-Bit-Ganzzahlen ohne Vorzeichen. ":"要比较的两个 16 位无符号整数中的第一个。\r\n","관리되는 값 또는 formatted 참조 형식입니다.클래스에 ":"类中的托管值或格式化引用类型。\r\n","두 개의 10진수 중 더 큰 숫자를 반환합니다.":"返回两个十进制数字中较大的一个。\r\n"," находится не в формате, распознаваемом ":" 不是可识别的格式\r\n","true, wenn die neue Sicherheitsbeschreibung einem Verzeichnisobjekt zugeordnet ist.":"如果新的安全描述符与目录对象相关联，则为真。\r\n","COM VARIANT 배열의 첫 번째 요소에 대한 포인터입니다.":"指向 COM VARIANT 数组的第一个元素的指针。\r\n","Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное логическое значение.":"将指定的 16 位带符号整数的值转换为其等效的布尔值。\r\n","Указывает, что поле является элементом перечисления и должно быть сериализовано.":"指定该字段是枚举的元素并且应该被序列化。\r\n","반환할 32비트 부호 없는 정수입니다. ":"要返回的 32 位无符号整数。\r\n","[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt] Marshallt Daten aus einem verwalteten Objekt eines festgelegten Typs zu einem nicht verwalteten Speicherblock. ":"[仅在 .NET Framework 4.5.1 和更新版本中受支持] 将数据从指定类型的托管对象封送到非托管内存块。\r\n","Ruft den Wert ab, der dem Enumerationsmember, auf den das Attribut angewendet wird, zugeordnet ist, oder legt ihn fest. ":"获取或设置与应用特性的枚举成员关联的值。\r\n","Начальная позиция подстроки в пределах ":"内子串的起始位置\r\n","Целочисленный результат деления.":"除法的整数结果。\r\n"," до первого символа строки.":" 到字符串的第一个字符。\r\n","Управляет определением интерфейса IEnumConnections.":"管理 IEnumConnections 接口的定义。\r\n"," 매개 변수에 추가되는 추가 바이트 오프셋입니다.":" 添加到参数的额外字节偏移量。\r\n","Освобождает указатель на неуправляемую строку, выделенный с помощью метода ":"释放指向使用该方法分配的非托管字符串的指针\r\n","정수 값을 나타냅니다.":"表示一个整数值。\r\n","소스 인터페이스를 포함하는 ":"包含源接口 \r\n","IID интерфейса или CLSID класса, информация о типе которого запрашивается. ":"正在请求其类型信息的接口的 IID 或类的 CLSID。\r\n","Enthält nach dem Beenden dieser Methode das angeforderte ausgeführte Objekt.Dieser Parameter wird nicht initialisiert übergeben.":"退出此方法后，包含请求的运行对象。此参数未初始化传递。\r\n","Целое число, представляющее адрес повторно выделенного блока памяти.Освобождать эту память необходимо с помощью метода ":"一个整数，表示重新分配的内存块的地址。必须使用以下方法释放此内存\r\n","Длина массива за вычетом индекса меньше значения ":"数组长度减去索引小于值\r\n","Задает старшие 32 бита структуры FILETIME.":"指定 FILETIME 结构的高 32 位。\r\n","Объект, использующий дескриптор ":"使用句柄的对象\r\n","마샬링 정보를 검색합니다.":"检索编组信息。\r\n","관리되지 않는 형식의 크기(바이트)를 반환합니다.":"返回非托管类型的大小（以字节为单位）。\r\n","접선을 나타내는 숫자입니다. ":"代表切线的数字。\r\n","Записывает указанное количество типов значений в указанное расположение в памяти, считывая байты входного массива, начиная с указанного расположения.":"将指定数量的值类型写入指定的内存位置，从指定位置开始读取输入数组的字节。\r\n","-Objekt in kanonischer Reihenfolge befinden, andernfalls false.":"-object 是按规范顺序排列的，否则为 false。\r\n","Gibt an, dass das Feld ein Enumerationsmember ist und serialisiert werden sollte.":"表示该字段是一个枚举成员，应该被序列化。\r\n","웹 요청을 처리할 경우 URL의 인코딩 및 디코딩 메서드를 제공합니다. ":"提供在处理 Web 请求时对 URL 进行编码和解码的方法。\r\n","의 정수 부분으로, 소수 자릿수를 삭제한 후 남은 숫자 또는 다음 테이블에 나열된 값 중 하나입니다. ":"的整数部分，即去掉小数位后剩余的数，或下表所列数值之一。\r\n","true, wenn die SACL vor Vererbung geschützt werden soll.":"如果应保护 SACL 不被继承，则为 true。\r\n","에 정의된 잘못된 문자가 하나 이상 포함된 경우 ":"包含一个或多个定义在\r\n","Die Länge des einzuschränkenden Bereichs in Bytes. ":"要限制的范围的长度（以字节为单位）。\r\n","Ruft den Besitzer des Objekts ab, dem dieses ":"获取此对象的所有者\r\n",", используя 64-разрядное целое число без знака.":", используя 64-разрядное целое число без знака.\r\n","Предоставляет методы кодирования и расшифровки URL-адресов во время обработки веб-запросов. ":"提供在 Web 请求处理期间编码和解码 URL 的方法。\r\n","Преобразует значение заданного 64-битового целого числа без знака в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"在给定指定的区域性特定格式设置信息的情况下，将指定的 64 位无符号整数的值转换为其等效的字符串表示形式。\r\n","Diese ":"这\r\n"," 인스턴스에 대한 작업을 수행합니다.이러한 작업은 플랫폼 간에 호환되는 방식으로 수행됩니다.이 형식에 대 한.NET Framework 소스 코드를 찾아보려면 참조는 Reference Source.":" 对实例执行操作。这些操作以跨平台兼容的方式执行。要浏览此类的 .NET Framework 源代码，请参阅参考源。\r\n","Gibt einen Wert zurück, der angibt, ob der Wert einer langen ganzen Zahl ohne Vorzeichen und ein ":"返回一个值，该值指示该值是否为无符号长整数和\r\n","Смещение в байтах от начала структуры до начала поля.":"从结构开头到字段开头的偏移量（以字节为单位）。\r\n"," не меньше указанного значения.":" 不小于规定值。\r\n","이 유효한 형식 문자열이 아닙니다.":"不是有效的格式字符串。\r\n","Указывает на то, что свойство или метод отображаются в редакторе.Этот класс не наследуется.":"表示该属性或方法显示在编辑器中。该类不被继承。\r\n","-Objekts (in Bytes).":"对象（以字节为单位）。\r\n","MSCPASCAL(MSC Pascal) 호출 규칙을 메서드에 사용해야 함을 나타냅니다.":"指示该方法应使用 MSCPASCAL (MSC Pascal) 调用约定。\r\n","10진수 값을 가장 가까운 정수 값으로 반올림합니다.":"将小数值四舍五入为最接近的整数值。\r\n"," возвращает значение true.":" 返回真。\r\n","Предоставляет разделитель томов, задаваемый платформой.":"提供平台定义的卷分隔符。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 10진수 값을 해당하는 문자열 표현으로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定的十进制值转换为其等效的字符串表示形式。\r\n","Тип управляемого объекта. ":"管理对象的类型。\r\n","Количество битов, на которое необходимо сдвинуть вправо значение ":"将值右移的位数\r\n","길이가 1이거나 null인 문자열입니다. ":"长度为 1 或 null 的字符串。\r\n","Исключение, которое создается при обнаружении ошибки безопасности.":"遇到安全错误时抛出的异常。\r\n","Распределение структуры не является ни последовательным, ни явным. ":"结构分配既不是顺序的也不是显式的。\r\n","Diese Methode gibt einen Verweis auf die VARDESC-Struktur zurück, die die angegebene Variable beschreibt.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回对描述指定变量的 VARDESC 结构的引用。此参数未初始化传递。\r\n",", auf die nächste 32-Bit-Ganzzahl ohne Vorzeichen gerundet.Wenn ":", 四舍五入到最接近的 32 位无符号整数。如果\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende Dezimalzahl.":"将指定的双精度浮点数的值转换为等效的十进制数。\r\n"," 매개 변수 중에서 더 작은 수입니다.":" 参数数量较少。\r\n","Rundet einen Dezimalwert auf die angegebene Anzahl von Bruchziffern.":"将小数值四舍五入到指定的小数位数。\r\n","Возвращает наибольшее целое число, которое меньше или равно указанному десятичному числу.":"返回小于或等于指定十进制数的最大整数。\r\n","부호 있는 10진수입니다. ":"带符号的十进制数。\r\n",")에 오프셋 바이트(":") 到偏移字节 (\r\n",") этот флаг требует, чтобы объект данных не отправлял данные, когда вызывается ":") 此标志要求数据对象在调用时不发送数据\r\n","지정된 개체의 지정된 인터페이스를 나타내는 IUnknown 인터페이스에 대한 포인터를 반환합니다.사용자 지정 쿼리 인터페이스 액세스는 지정된 사용자 지정 모드에 의해 제어됩니다.":"返回指向指定对象上指定接口的 IUnknown 接口的指针。自定义查询接口访问由指定的自定义模式控制。\r\n",", а его значение равняется текущему объекту ":", 其值等于当前对象\r\n","지정된 개체의 값을 16비트 부호 없는 정수로 변환합니다.":"将指定对象的值转换为 16 位无符号整数。\r\n"," der Standard-Quellschnittstelle. ":" 默认源接口。\r\n","이 저장소, 스트림 또는 바이트 배열을 만든 시간을 나타냅니다.":"指示此存储、流或字节数组的创建时间。\r\n","지정된 8비트 부호 없는 정수의 값을 해당하는 32비트 부호 없는 정수로 변환합니다.":"将指定的 8 位无符号整数的值转换为等效的 32 位无符号整数。\r\n","Удаляет ключ и его значение из таблицы.":"从表中删除键及其值。\r\n","에 포함된 숫자 또는 변환에 실패한 경우 0에 해당하는 ":"中包含的数字，如果转换失败则为 0。\r\n","Смещение (в байтах) для параметра ":"参数的偏移量（以字节为单位）\r\n","Verwaltet die Definition der IEnumConnectionPoints-Schnittstelle.":"管理 IEnumConnectionPoints 接口的定义。\r\n","-Wert, der die Standardschnittstelle angibt, die für COM verfügbar gemacht werden soll. ":"值指定公开给 COM 的默认接口。\r\n"," находится вне границ данного экземпляра. ":" 在这个实例的范围之外。\r\n","Negiert einen angegebenen ":"否定给定的\r\n","Показывает unsignedlong.":"显示无符号长。\r\n","Значение true для вызова метода ":"true 调用方法\r\n","Массив для копирования данных.":"复制数据的数组。\r\n"," kein Werttyp.":" 没有值类型。\r\n","-Objekt ab, das einen Ordinalzeichenfolgenvergleich mit Berücksichtigung der Groß- und Kleinschreibung ausführt.":"执行区分大小写的序号字符串比较的对象。\r\n","Значение S_OKHRESULT, если моникер является моникером системы; в противном случае — значение S_FALSEHRESULT.":"如果名字对象是系统名字对象，则为 S_OKHRESULT 的值；否则，S_FALSEHRESULT 的值。\r\n","Gibt an, dass die Aufrufkonvention MSC Pascal (MSCPASCAL) für eine Methode verwendet werden soll.":"指定 MSC Pascal (MSCPASCAL) 调用约定应用于方法。\r\n","Описывает способ предоставления интерфейса клиентам COM. ":"描述如何向 COM 客户端公开接口。\r\n","Представляет комплексное число.":"表示复数。\r\n","Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in einen entsprechenden booleschen Wert.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为等效的布尔值。\r\n","-Schnittstelle darstellt.":"-接口表示。\r\n","부호 없는 16비트 정수를 복소수로 변환하는 암시적 변환을 정의합니다.":"定义从无符号 16 位整数到复数的隐式转换。\r\n"," должно быть больше или равно -1, но меньше или равно 1. ":" 必须大于或等于 -1，但小于或等于 1。\r\n"," 배열에서 디코딩할 개수입니다(바이트 단위).":" 要从数组中解码的字节数。\r\n","지정된 16비트 부호 없는 정수의 값을 해당하는 유니코드 문자로 변환합니다.":"将指定的 16 位无符号整数的值转换为等效的 Unicode 字符。\r\n","Возвращает меньшее из двух 64-битовых целых чисел со знаком.":"返回两个 64 位有符号整数中较小的一个。\r\n","해당 예외에 해당하는 HRESULT입니다.":"与异常对应的 HRESULT。\r\n","Die aus dem nicht verwalteten Arbeitsspeicher am angegebenen Offset gelesene ganze Zahl.":"从指定偏移量处的非托管内存中读取的整数。\r\n","-Objekt fest.":"-对象固定。\r\n",", или нуль, если ":", 或零如果\r\n","Ein Gleitkommawert mit einfacher Genauigkeit.":"单精度浮点值。\r\n","Kopiert Daten aus einem nicht verwalteten Speicherzeiger in ein verwaltetes Array von 16-Bit-Ganzzahlen mit Vorzeichen.":"将数据从非托管内存指针复制到 16 位带符号整数的托管数组。\r\n","밑이 ":"底部\r\n","설정 시 속성을 직접 변경하려고 하면 IPropertyNotifySink::OnRequestEdit이 호출됩니다.OnRequestEdit가 구현되면 변경 사항이 적용될지 결정됩니다.":"如果您尝试在设置时直接更改属性，则会调用 IPropertyNotifySink::OnRequestEdit。在实现 OnRequestEdit 时，它会确定是否应用更改。\r\n","Извлекает описание типа для реализованных типов интерфейсов, если в описании типа описывается класс COM.":"如果类型描述描述的是 COM 类，则检索已实现接口类型的类型描述。\r\n","32-битовое целое число со знаком, содержащее время, истекшее с момента с последней загрузки системы (в миллисекундах). ":"一个 32 位有符号整数，包含自上次系统启动以来经过的时间（以毫秒为单位）。\r\n","Указатель на COM VARIANT. ":"指向 COM VARIANT 的指针。\r\n","Der Standardwert von ":"默认值\r\n","Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное 32-битовое целое число со знаком.":"将指定的 16 位带符号整数的值转换为等效的 32 位带符号整数。\r\n","사용자 지정 마샬러의 정규화된 이름을 지정합니다.":"指定自定义封送拆收器的完全限定名称。\r\n","-Attribut gekennzeichnet ist, an das der Wert false übergeben wurde.":"向其传递值 false 的属性。\r\n","Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.":"将指定 Unicode 字符的值转换为等效的 64 位带符号整数。\r\n","의 쌍곡선 코사인입니다.":"是双曲余弦\r\n","부호 없는 8바이트 정수입니다.":"一个 8 字节无符号整数。\r\n","Gibt an, ob die Funktion virtuell, statisch oder auf Dispatch beschränkt ist.":"指示该函数是虚拟的、静态的还是仅限于分派的。\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in einen entsprechenden booleschen Wert.":"将指定的 16 位带符号整数的值转换为等效的布尔值。\r\n","-Klasse mit dem angegebenen Typ. ":"具有指定类型的类。\r\n","Доступное только для чтения длинное целое число, представляющее общее число миллисекунд, измеренное текущим экземпляром.":"一个只读长整数，表示当前实例测量的总毫秒数。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 8 位有符号整数的值转换为等效的 32 位无符号整数。\r\n","마샬러가 VT_ERROR으로 마샬링할 개체를 래핑합니다.":"包装封送拆收器将使用VT_ERROR封送的对象。\r\n","Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 16-битовое целое число без знака.":"将指定的 32 位带符号整数的值转换为等效的 16 位无符号整数。\r\n","Предоставляет доступ к базовому объекту, упакованному настраиваемым модулем упаковки и передачи.":"提供对由自定义包装器和传输包装的底层对象的访问。\r\n","Объект, соответствующий параметру ":"参数对应的对象\r\n","Исключение, выданное, когда ключ, указанный для доступа к элементу в коллекции, не соответствует ни одному ключу в коллекции.":"当指定用于访问集合中元素的键与集合中的任何键都不匹配时抛出的异常。\r\n","지정된 16비트 부호 없는 정수 값을 해당하는 문자열 표현으로 변환합니다.":"将指定的 16 位无符号整数值转换为其等效的字符串表示形式。\r\n","Показывает целочисленное значение.":"显示一个整数值。\r\n","Stellt die verwaltete Definition der ITypeComp-Schnittstelle bereit.":"提供 ITypeComp 接口的托管定义。\r\n"," не является допустимым значением объекта ":" 不是有效的对象值\r\n","Имя версии платформы .NET Framework, с помощью которой скомпилирована сборка.":"编译程序集所用的 .NET Framework 版本的名称。\r\n","При возвращении данного метода содержит точку подключения, управляющую ":"当此方法返回时，包含控制的连接点\r\n","Задает одну из констант перечисления ":"指定枚举常量之一\r\n","Indica el orden de bytes en el que se almacenan los datos en la arquitectura de este equipo, es decir, si la arquitectura es Big-endian o Little-endian.":"Indica el orden de bytes en el que se almacenan los datos en la arquitectura de este equipo，它决定，si la arquitectura es Big-endian 或 Little-endian。\r\n","IConnectionPoint 인터페이스의 관리되는 정의를 제공합니다.":"提供 IConnectionPoint 接口的托管定义。\r\n","Число с плавающей запятой двойной точности, подлежащее преобразованию. ":"要转换的双精度浮点数。\r\n","Zählt die Gesamtanzahl der Parameter.":"计算参数总数。\r\n","Ссылка на освобождаемую структуру FUNCDESC. ":"对要释放的 FUNCDESC 结构的引用。\r\n","Определяет значение по умолчанию при вызове из языка, поддерживающего параметры по умолчанию.Этот класс не наследуется.":"指定从支持默认参数的语言调用时的默认值。此类不被继承。\r\n"," 형식의 필드 이름입니다. ":" 格式的字段名称。\r\n","Stellt die verwaltete Definition der ITypeInfo2-Schnittstelle bereit.":"提供 ITypeInfo2 接口的托管定义。\r\n",", используя указанную строку ":", 使用指定的字符串\r\n","Останавливает измерение интервала времени, обнуляет затраченное время и начинает измерение затраченного времени.":"停止时间间隔测量，重置经过时间，然后开始经过时间测量。\r\n","Преобразует значение заданного объекта в эквивалентное 8-разрядное целое число без знака, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用指定的区域性特定格式设置信息将指定对象的值转换为其等效的 8 位无符号整数。\r\n","Konvertiert einen Delegaten in einen Funktionszeiger, der aus nicht verwaltetem Code aufgerufen werden kann.":"将委托转换为可从非托管代码调用的函数指针。\r\n","Gibt die größte Ganzzahl zurück, die kleiner oder gleich der angegebenen Dezimalzahl ist.":"返回小于或等于指定小数的最大整数。\r\n","Находит наибольший общий делитель двух значений ":"找到两个值的最大公约数\r\n","Исключение, состояние которого зарегистрировано, и которое представлено возвращенным объектом. ":"记录状态并由返回的对象表示的异常。\r\n","형식 정보의 GUID입니다.":"类型信息的 GUID。\r\n","어셈블리 종속성을 검색할 때 어셈블리 자체를 포함하는 디렉터리와 함께 해당 디렉터리 목록을 검색합니다.이 값은 경로가 Win32 LoadLibraryEx 함수에 전달되기 전에 .NET Framework에서 사용됩니다.":"搜索程序集依赖项时，将搜索这些目录的列表以及包含程序集本身的目录。在将路径传递给Win32LoadLibraryEx函数之前，.NET Framework会使用此值。\r\n","Carácter formado por dos bytes que comienzan en ":"由即将到来的字节组成的字符\r\n","Преобразует значение заданного числа двойной точности с плавающей запятой в эквивалентное логическое значение.":"将指定的双精度浮点数的值转换为其等效的布尔值。\r\n","지정된 10진수에서 정수 부분을 계산합니다. ":"计算指定十进制数的整数部分。\r\n","Das bitweise Einerkomplement von ":"按位的补码\r\n","호출 데이터 개체의 저장 미디어(전역 메모리, 디스크 파일, 저장소 개체, 스트림 개체, GDI(Graphics Device Interface) 개체 또는 정의되지 않은 미디어)와 해당 미디어의 소유권을 정의하는 ":"定义调用数据对象的存储介质（全局内存、磁盘文件、存储对象、流对象、图形设备接口 (GDI) 对象或未定义的媒体）以及该媒体的所有权。\r\n"," будет содержать пустую строку (то есть, он содержит ":" 将包含一个空字符串（即，它包含\r\n","Преобразует первый знак указанной строки в знак Юникода.":"将指定字符串的第一个字符转换为 Unicode 字符。\r\n","부호 없는 2바이트 정수입니다.":"一个 2 字节无符号整数。\r\n","Объект, размер которого возвращается.":"返回其大小的对象。\r\n","Der Parameter ist der Rückgabewert des Members.":"参数是成员的返回值。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 유니코드 문자의 값을 해당하는 문자열 표현으로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定的 Unicode 字符的值转换为其等效的字符串表示形式。\r\n","Der Wert, der in einen ":"一个的价值\r\n","Строка, сравниваемая с параметром ":"与参数比较的字符串\r\n","Das neu umschlossene Objekt. ":"新包装的对象。\r\n","Eine 2-Byte-Ganzzahl ohne Vorzeichen.":"一个 2 字节无符号整数。\r\n","Получает версию данного объекта ":"获取此对象的版本\r\n"," 개체입니다.  ":" 对象。  \r\n","Представляет число именованных аргументов. ":"表示命名参数的数量。\r\n","이 메서드가 반환될 때 고유 이름 개수의 변경 내용에 대한 포인터를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含一个指向可分辨名称数量变化的指针。此参数未初始化传递。\r\n","Eine Struktur ohne Methoden.":"没有方法的结构。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 64 位带符号整数的值转换为等效的 16 位无符号整数。\r\n","Копирует всю коллекцию ":"复制整个集合\r\n",", используя интерфейс источника и класс поставщика событий.":"，使用源接口和事件提供者类。\r\n","-Parameter benötigt werden.":"参数是必需的。\r\n","-Objekt eingefügt werden sollen.":"- 要插入的对象。\r\n","Объект, для которого нужно получить COM VARIANT. ":"要为其获取 COM VARIANT 的对象。\r\n"," aus verwaltetem in nicht verwalteten Code gemarshallt wird. ":" 从托管代码编组到非托管代码。\r\n"," для числа, содержащегося в параметре ":" 对于参数中包含的数字\r\n","-Objekt oder ein Typ ist, der die implizite Konvertierung in ein ":"隐式转换为 a 的对象或类型\r\n","Тип, являющийся псевдонимом для другого типа.":"一种类型，它是另一种类型的别名。\r\n","Das Strukturlayout ist weder sequenziell noch explizit.- oder -  Die Struktur ist ein geschachtelter Werttyp.":"结构布局既不是顺序的也不是显式的。- 或- 结构是嵌套值类型。\r\n",", округленное до ближайшего 64-разрядного целого числа без знака.Если ":", 四舍五入到最接近的 64 位无符号整数。如果\r\n","기수가 10이 아닌 부호 있는 숫자를 나타내는 ":"表示基数不是 10 的有符号数。\r\n","에 가장 가까운 수입니다.":"是最接近 的数字。\r\n","Строковое представление текущего экземпляра в прямоугольной системе координат, заданное ":"指定的直角坐标中当前实例的字符串表示形式\r\n","이 복소수와 ":"用这个复数\r\n","Bestimmt den Zugriff auf sicherungsfähige Objekte.Die abgeleiteten Klassen ":"确定对安全对象的访问。派生类\r\n","Возвращает значение, указывающее, выгружается ли текущий домен приложения или среда CLR завершает работу. ":"获取一个值，该值指示当前应用程序域是正在卸载还是公共语言运行时正在关闭。\r\n","Typ einer formatierten Klasse.Damit werden die Layoutinformationen bereitgestellt, die zum Löschen des Puffers im ":"格式化类的类型。这提供了清除缓冲区中所需的布局信息\r\n","Eine Ganzzahl, die als C-Funktionszeiger verwendet werden kann.Sie können diesen Member für einen ":"可用作 C 函数指针的整数\r\n","의 크기를 나타냅니다.":"代表的大小\r\n","Номер порта не может быть меньше -1 или больше 65535. ":"端口号不能小于 -1 或大于 65535。\r\n","Имя, которое требуется найти. ":"要查找的名称。\r\n"," 값에 대해 비트 And 연산을 수행합니다.":" 对值执行按位与运算。\r\n","Devuelve el valor entero con signo de 32 bytes especificado como una matriz de bytes.":"Devuelve el valor entero con signo de 32 bytes especificado como una matrix de bytes。\r\n","가상 함수가 있는 형식입니다. 이때 모든 가상 함수는 순수 가상 함수입니다.":"具有虚函数的类型。在这种情况下，所有虚函数都是纯虚函数。\r\n","멤버는 속성을 설정합니다.":"成员设置属性。\r\n","Значение true, если требуется сохранить данные ссылки на объект; в противном случае — значение false.Значение по умолчанию — false.":"Значение true, если требуется сохранить данные ссылки на объект; в противном случае — значение false. Значение по умолчанию — false.\r\n","Gibt den absoluten Wert einer 8-Bit-Ganzzahl mit Vorzeichen zurück.":"返回 8 位有符号整数的绝对值。\r\n"," меньше нуля.-или- Значение ":" 小于零。-或- 值\r\n","Смещение для этого экземпляра.":"Смещение для этого экземпляра。\r\n","-Struktur ab, in der Informationen über eine angegebene Funktion enthalten sind.":"包含有关指定函数的信息的结构。\r\n","Дескриптор, возвращенный исходным подходящим вызовом метода ":"原始限定方法调用返回的句柄\r\n","Devuelve la matriz administrada a la que hace referencia este ":"返回this引用的托管数组 \r\n","Предоставляет базовый класс для универсальных коллекций.":"为泛型集合提供基类。\r\n","Ein Array von 8-Bit-Ganzzahlen ohne Vorzeichen, das ":"一个 8 位无符号整数数组\r\n"," равны.Больше нуляЗначение ":" 等于。大于零值\r\n","Die Position, an der der Schreibvorgang begonnen werden soll.Möglicherweise müssen Ausrichtungsprobleme berücksichtigt werden.":"开始书写的位置。可能需要考虑对齐问题。\r\n",", или 0 (нуль), если ":", 或 0（零）如果\r\n",", дата и время преобразуются из локального времени в формат UTC.Если строка ввода указывает время в формате UTC с помощью указателя часового пояса или ":"，日期和时间从本地时间转换为 UTC。如果输入字符串使用时区指示符指定 UTC 时间，或者\r\n"," 값을 지정된 다른 ":" 指定的其他值\r\n","Записываемое значение.":"要写入的值。\r\n","Целое число, которое может использоваться как указатель функции в стиле языка С.Этот член можно использовать для типа данных ":"可用作C风格函数指针的整数。该成员可用于数据类型\r\n","Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование. ":"开始复制的目标数组中从零开始的索引。\r\n","사용자 정의된 형식을 나타냅니다.":"指示用户定义的格式。\r\n","Gibt die aktuellen Bindungsoptionen zurück, die im aktuellen Bindungskontext gespeichert sind.":"返回存储在当前绑定上下文中的当前绑定选项。\r\n"," mit dem von ":" 与从\r\n"," 값 중 더 큰 값을 반환합니다.":" 값중더큰값을반환합니다。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.":"将指定的单精度浮点数的值转换为等效的 8 位带符号整数。\r\n","의 루트 디렉터리(예: \"C:\\\")이며, ":"是根目录（例如“C:\\”）\r\n","Старшие 32 бита 96-битного ":"96位的高32位\r\n","Die Ausnahme, die bei Verwendung eines ungültigen COM-Objekts ausgelöst wird.":"使用无效的 COM 对象时抛出的异常。\r\n","Возвращает значение, указывающее, равно ли значение данного объекта текущему атрибуту ":"返回一个值，指示此对象的值是否等于当前属性\r\n","이 0이면 값이 계산됩니다.":"如果为 0，则计算该值。\r\n","Аспект, или представление, объекта.Содержит значение, взятое из перечисления ":"对象的一个​​方面或表示。包含从枚举中获取的值\r\n","Значение, которое можно использовать для определения записи в таблице ROT при последующих вызовах метода ":"一个值，可用于确定后续方法调用中 ROT 表中的条目\r\n","수집기의 이름입니다.이 매개 변수를 사용하면 핸들 형식을 개별적으로 추적하는 수집기의 이름을 지정할 수 있습니다.":"收集器的名称。此参数允许您指定单独跟踪句柄类型的收集器的名称。\r\n","Преобразует значение заданного знака Юникода в эквивалентное строковое представление, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用指定的区域性特定格式设置信息将指定 Unicode 字符的值转换为其等效的字符串表示形式。\r\n","Die zweite zu vergleichende komplexe Zahl.":"要比较的第二个复数。\r\n","Entfernen Sie Autorisierungsregeln, die die gleiche SID wie die angegebene Autorisierungsregel aus der Zugriffssteuerungsliste enthalten, und fügen Sie anschließend der Zugriffssteuerungsliste die angegebene Autorisierungsregel hinzu.":"从ACL中删除与指定授权规则包含相同SID的授权规则，然后将指定授权规则添加到ACL中。\r\n","부호 없는 바이트를 복소수로 변환하는 암시적 변환을 정의합니다.":"定义从无符号字节到复数的隐式转换。\r\n","Определяет стили, разрешенные в аргументах числовой строки, передаваемые методам Parse и TryParse целочисленных типов и числовых типов с плавающей запяой.":"指定传递给整数和浮点数字类型的 Parse 和 TryParse 方法的数字字符串参数中允许的样式。\r\n"," 매개 변수에 해당하는 개체입니다.":" 参数对应的对象。\r\n","ROT(실행 개체 테이블)에서 검색할 모니커에 대한 참조입니다. ":"对要从运行对象表 (ROT) 检索的名字对象的引用。\r\n","Ein zu konvertierendes Zeichen. ":"Ein zu konvertierendes Zeichen。\r\n",", округленное до ближайшего 16-разрядного целого числа без знака.Если ":", 四舍五入到最接近的无符号 16 位整数。如果\r\n","Представляет слабо типизированную ссылку, которая указывает на объект, но позволяет удалять его при сборке мусора.":"表示指向对象但允许通过垃圾回收处理的弱类型引用。\r\n"," den gleichen Wert haben, andernfalls false.":" 具有相同的值，否则为假。\r\n","Показывает время (значение в миллисекундах, возвращенное функцией GetTickCount), заданное вызывающим объектом для завершения операции привязки.":"指示调用方为完成绑定操作指定的时间（GetTickCount 函数返回的值，以毫秒为单位）。\r\n","Хэш-код для объекта, идентифицируемого по параметру ":"参数标识的对象的哈希码\r\n","지정된 경로의 루트 디렉터리 정보를 가져옵니다.":"获取指定路径的根目录信息。\r\n","Значение true, если элемент добавлен в набор; значение false, если элемент уже был в наборе.":"如果元素被添加到集合中则为真；如果元素已经在集合中则为 false。\r\n","숫자의 문자열 표현입니다.":"数字的字符串表示形式。\r\n","Изменяет генерацию кода для JIT-отладки во время выполнения.Этот класс не наследуется.":"更改运行时 JIT 调试的代码生成。此类不被继承。\r\n","의 상대 순서를 나타내는 부호 있는 정수입니다.반환 값 설명 0보다 작음 이 인스턴스가 정렬 순서에서 ":"一个有符号整数，表示 . 的相对顺序。 返回值 说明 < 0 此实例处于排序顺序中。\r\n","Преобразует значение заданного 8-разрядного целого числа без знака в эквивалентное число с плавающей запятой двойной точности.":"将指定的 8 位无符号整数的值转换为其等效的双精度浮点数。\r\n","Двухбайтовая строка символов Юникода с префиксом, обозначающим ее длину.Этот элемент, являющийся строкой, определенной в COM по умолчанию, можно использовать для типа данных ":"两个字节的 Unicode 字符串，前缀表示长度。该元素是 COM 中定义的默认字符串，可用于数据类型\r\n","현재 인스턴스와 부호 없는 64비트 정수의 값이 같으면 true이고, 그렇지 않으면 false입니다.":"현재 인스턴스와 부호 없는 64비트 정수의 값이 같으면 true이고, 그렇지 않으면 false입니다.\r\n","Определяет свойство для доступа к значению, на которое ссылается объект.":"定义一个属性以访问对象引用的值。\r\n","에 해당하는 유니코드 문자입니다.":"对应的 Unicode 字符。\r\n","Konvertiert den Wert der angegebenen Dezimalzahl in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.":"将指定十进制数的值转换为等效的 8 位带符号整数。\r\n","Gibt ein einfaches, gezähltes Array an.":"指定一个简单的计数数组。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.":"将指定的 64 位带符号整数的值转换为等效的单精度浮点数。\r\n"," в значение 64-битового целого числа без знака.":" 为 64 位无符号整数值。\r\n"," и 64-разрядное целое число со знаком не равны.":" 和 64 位有符号整数不相等。\r\n","현재 인스턴스가 측정한 밀리초 단위의 총 경과 시간을 가져옵니다.":"获取当前实例测量的总运行时间（以毫秒为单位）。\r\n","Ein Wörterbuch, das die Namen und Werte aller Umgebungsvariablen enthält, andernfalls ein leeres Wörterbuch, wenn keine Umgebungsvariablen gefunden werden.":"包含所有环境变量的名称和值的字典，否则如果没有找到环境变量则为空字典。\r\n"," -Eigenschaft für diese ":" - 这个的属性\r\n","Строка, указывающая версию платформы .NET Framework. ":"一个字符串，它指定 .NET Framework 的版本。\r\n","Первое из двух сравниваемых 8-разрядных целых чисел со знаком. ":"要比较的两个有符号 8 位整数中的第一个。\r\n","Наибольшее количество символов, которое может содержать данный экземпляр.":"此实例可以包含的最大字符数。\r\n","Es ist nicht genügend Speicherplatz vorhanden, um die Anforderung zu erfüllen.":"没有足够的磁盘空间来满足请求。\r\n","-Objekt zugeordnet sind, oder entfernt diesen.Geschützte Überwachungsregeln können von übergeordneten Objekten nicht durch Vererbung geändert werden.":"-object 或删除它。受保护的审计规则不能通过继承从父对象更改。\r\n","Eine 64-Bit-Ganzzahl ohne Vorzeichen, die ":"一个 64 位无符号整数\r\n","Eine 32-Bit-Ganzzahl mit Vorzeichen, die größer oder gleich 0 (null) und kleiner als ":"大于或等于零且小于的 32 位有符号整数\r\n","Выполняет битовую исключающую операцию Or (XOr) для двух значений ":"对两个值执行按位异或 (XOr) 运算\r\n","해제할 VARDESC 구조체에 대한 참조입니다. ":"对要释放的 VARDESC 结构的引用。\r\n","지정된 16비트 부호 있는 정수의 값을 해당하는 부울 값으로 변환합니다.":"将指定的 16 位带符号整数的值转换为等效的布尔值。\r\n","Die geänderten Pfadinformationen.Auf Desktopplattformen auf Grundlage von Windows werden die Pfadinformationen unverändert zurückgegeben, wenn ":"已更改的路径信息。在基于 Windows 的桌面平台上，返回路径信息不变，如果\r\n","> 1+бесконечность":"> 1+无穷大\r\n","전달 중인 데이터가 없습니다.":"没有数据被传递。\r\n","Тип элементов.Этот параметр типа является ковариантным. Это означает, что можно использовать либо указанный тип, либо более производный тип. Дополнительные сведения о ковариации и контрвариации см. в разделе Ковариация и контравариация в универсальных шаблонах.":"项目类型。此类型参数是协变的。这意味着可以使用指定的类型或更派生的类型。有关协变和逆变的更多信息，请参阅通用模式中的协变和逆变。\r\n","true, wenn diese Regel nicht explizit festgelegt wird, sondern von einem übergeordneten Container geerbt wird.":"如果此规则未明确设置但从父容器继承，则为 true。\r\n","Содержит сведения для удаленного взаимодействия с элементом.":"包含用于远程处理元素的信息。\r\n","При возвращении данного метода содержит массив идентификаторов MEMBERID найденных элементов; ":"当此方法返回时，包含找到的元素的 MEMBERID 数组；\r\n","고정된 개체의 주소를 나타내는 ":"表示固定对象的地址 \r\n","탄젠트를 적용했을 때 지정된 두 숫자의 몫이 나오는 각도를 반환합니다.":"返回应用正切时获得两个指定数字的商的角度。\r\n","Большее из значений двух параметров, ":"两个参数取值较大者，\r\n","-Methode an.Dieser bestimmt die Formate, die der resultierende Enumerator auflisten kann.":"方法。这决定了生成的枚举器可以枚举的格式。\r\n","exponent를 ":"指数를\r\n","Логическое значение. ":"Логическое значение。\r\n"," es distinto de cero; de lo contrario, es false.":" 它与众不同； de lo contrario，是错误的。\r\n","Das Objekt, das umschlossen wird.":"被包裹的对象。\r\n"," menos 7 y es menor o igual que la longitud de ":" menos 7 y es menor o igual que la longitud de\r\n","-Methode in ein binäres Array gemarshallt wird.":"方法被编组到一个二进制数组中。\r\n","Определяет константы, определяющие свойства функции.":"定义定义函数属性的常量。\r\n","Преобразует значение заданного десятичного числа в эквивалентное число с плавающей запятой одиночной точности.":"将指定十进制数的值转换为其等效的单精度浮点数。\r\n"," степени двух.":" 二级。\r\n","Gibt eine 64-Bit-Ganzzahl mit Vorzeichen an.":"指定一个 64 位有符号整数。\r\n",", устанавливаемое равным ":", 设等于\r\n","Entspricht ":"相当于\r\n","Gibt das Vorhandensein von Objekttypen für ACEs (Access Control Entries, Zugriffssteuerungseinträge) an.":"指示访问控制条目 (ACE) 的对象类型的存在。\r\n","현재 문화권의 단어 비교 규칙을 사용하여 대/소문자를 구분하지 않는 문자열을 비교하는 ":"使用当前区域性的单词比较规则比较不区分大小写的字符串。\r\n"," содержит двоеточие (:), которое не является частью идентификатора тома (например, \"c:\\\"). ":" 包含不属于卷标识符的冒号 (:)（例如，“c:\\”）。\r\n","Определяет способ предоставления интерфейса для COM.":"定义接口如何暴露给 COM。\r\n"," равно 0, возвращается значение ":" 为0，返回值\r\n","Возвращает объект типа для типа базового конечного автомата, который был создан компилятором для реализации метода конечного автомата.":"返回由编译器生成以实现状态机方法的基础状态机类型的类型对象。\r\n",".Mayor que ceroLa instancia actual es mayor que ":".Mayor que ceroLa instantia actual es mayor que\r\n","Преобразует заданное строковое представление числа в эквивалентное число с плавающей запятой одиночной точности, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的单精度浮点数。\r\n","Die Methode gibt einen Verweis auf die Typbeschreibung mit dem Element zurück, an das diese gebunden ist, wenn FUNCDESC oder VARDESC zurückgegeben wurde.Dieser Parameter wird nicht initialisiert übergeben.":"如果返回 FUNCDESC 或 VARDESC，该方法返回对类型描述的引用，该类型描述包含它绑定到的元素。此参数未初始化传递。\r\n","HRESULT를 나타냅니다.":"指示 HRESULT。\r\n","Devuelve un valor booleano convertido a partir de un byte en la posición especificada de una matriz de bytes.":"Devuelve a valor booleano convertido a partir de un byte en la posición especificada de una matrix de bytes。\r\n","Ruft einen Schnittstellenzeiger auf den Speicher ab, der das vom Moniker bezeichnete Objekt enthält.":"获取指向内存的接口指针，该内存包含由名字对象标识的对象。\r\n","Especifica el identificador que se va a ajustar.":"Specifica el identificador que se va a justar。\r\n"," задает тип значения.-или-Параметр ":" 指定值类型。-或-参数\r\n","Gibt das Produkt zweier komplexer Zahlen zurück.":"返回两个复数的乘积。\r\n","Das zu registrierende Objekt. ":"要注册的对象。\r\n","범위에 액세스할 때 필요한 제한입니다. ":"访问范围时所需的限制。\r\n"," umschlossen wird.":" umschlossen 线。\r\n","-Wert und eine 64-Bit-Ganzzahl mit Vorzeichen ungleich sind.":"value 和 64 位有符号整数不相等。\r\n","Преобразует значение заданного объекта в эквивалентный знак Юникода, используя указанные сведения о форматировании, связанные с языком и региональными параметрами.":"使用指定的区域性特定格式信息将指定对象的值转换为其等效的 Unicode 字符。\r\n","32-битное целое число со знаком, считанное из неуправляемой памяти.":"从非托管内存中读取的 32 位有符号整数。\r\n","Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное 8-битовое целое число со знаком.":"将指定的 64 位带符号整数的值转换为等效的 8 位带符号整数。\r\n","-Wert, der beschreibt, welcher Schnittstellentyp für die Klasse generiert werden soll.":"- 描述为类生成什么类型​​的接口的值。\r\n","Das erste zu vergleichende ":"第一个比较\r\n","Объект, содержащий значение для преобразования, или null. ":"包含要转换的值的对象，或者为 null。\r\n","Преобразует значение заданного 16-битового целого числа без знака в эквивалентное 32-битовое целое число без знака.":"将指定的 16 位无符号整数的值转换为其等效的 32 位无符号整数。\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的双精度浮点数。\r\n","Определяет тип элемента.":"指定元素类型。\r\n","Имя, используемое вместо имени значения словаря по умолчанию.":"Имя, используемое вместо имени значения словаря по умолчанию.\r\n","Преобразует заданное логическое значение в эквивалентное 8-битовое целое число без знака.":"将指定的布尔值转换为其等效的 8 位无符号整数。\r\n","[.NET Framework 4.5.1 이상 버전에서 지원됨] 지정된 형식의 개체의 관리되지 않은 크기를 반환합니다(바이트 단위). ":"[在 .NET Framework 4.5.1 及更高版本中受支持] 返回指定类型对象的非托管大小（以字节为单位）。\r\n","Определяет, равны ли значения двух указанных объектов ":"Определяет, равны ли значения двух указанных объектов\r\n"," aufgelisteten Verweise.Dieser Parameter wird nicht initialisiert übergeben.":" 列出的引用。此参数未初始化传递。\r\n","Число, которое указывает знак объекта ":"表示对象符号的数字\r\n","Индекс описания типа, документация которого должна быть возвращена; если параметр ":"要返回其文档的类型描述的索引；如果参数\r\n","의 내용에 대한 base 64 숫자의 문자열 표현입니다.":"的内容的 base 64 数字的字符串表示形式。\r\n","가 유효한 VARIANT 형식이 아닌 경우":"不是有效的 VARIANT 类型\r\n","이 메서드는 반환될 때 ":"当此方法返回时\r\n","-Instanz und den Inhalt des ":"-实例和内容\r\n","정수가 필요한 ":"需要整数 \r\n","Получает или задает значение, на которое ссылается объект.":"获取或设置对象引用的值。\r\n","Stellt ein plattformspezifisches, alternatives Zeichen bereit, das zur Trennung von Verzeichnisebenen in einer Pfadzeichenfolge verwendet wird und eine hierarchische Dateisystemorganisation wiedergibt.":"提供特定于平台的替代字符，用于分隔路径字符串中的目录级别，表示分层文件系统组织。\r\n"," не был вызван.":" 没有被调用。\r\n"," darstellt, der durch diese ":" 由此代表\r\n","Ruft die Revisionsebene der ":"获取修订级别\r\n","Auf die Funktion wird ebenso wie auf ":"在功能上以及在\r\n","Die Revisionsebene der neuen ACL.":"新ACL的修订级别。\r\n","Преобразует значение заданного объекта в эквивалентное 16-битовое целое число без знака, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用指定的区域性特定格式设置信息将指定对象的值转换为其等效的 16 位无符号整数。\r\n","Возвращает строковое представление данного объекта ":"返回给定对象的字符串表示\r\n","Указывает, следует ли создавать оболочку для выражений, не являющихся производными от класса ":"指定是否包装不是从类派生的表达式\r\n","Eine Zahl, die das Vorzeichen des ":"一个数字，它是\r\n","Показывает, является функция виртуальной, статической или диспетчерской.":"指示函数是虚拟的、静态的还是分派的。\r\n","Значение, которое было сдвинуто вправо на указанное число бит.":"已向右移动指定位数的值。\r\n","Число с плавающей запятой одиночной точности, подлежащее преобразованию. ":"要转换的单精度浮点数。\r\n","는 null 문자열입니다.":"是空字符串。\r\n","Смещение в массиве ":"数组中的偏移量\r\n","Konvertiert den Wert der angegebenen Dezimalzahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.":"使用指定的区域性特定格式设置信息，将指定的十进制数的值转换为其等效的字符串表示形式。\r\n","Das Objekt, für das ein COM-VARIANT abgerufen werden soll.":"要为其获取 COM VARIANT 的对象。\r\n","Значение с плавающей точкой одинарной точности.":"Значение с плавающей точкой одинарной точности。\r\n","Die Identität, auf die die Überwachungsregel angewendet wird.Dabei muss es sich um ein Objekt handeln, das in eine ":"审核规则适用的身份。这必须是包含在\r\n","Application 개체를 설명하는 형식 설명입니다.":"描述 Application 对象的类型描述。\r\n","Aktiviert bzw. deaktiviert das Auslösen einer Ausnahme bei einem nicht zuzuordnenden Unicode-Zeichen, das in das ANSI-Zeichen \"?\" konvertiert wird.":"活动 bzw。 deaktiviert das Auslösen einer Ausnahme bei einem nicht zuzuordnenden Unicode-Zeichen, das in das ANSI-Zeichen “?”转换线。\r\n","가 0보다 큽니다. ":"大于 0。\r\n","Копирует данные из указателя неуправляемой памяти в одномерный управляемый массив 64-битных целых чисел со знаком.":"将数据从非托管内存指针复制到 64 位带符号整数的一维托管数组。\r\n","오류에 대한 추가 정보를 제공하는 IErrorInfo 인터페이스에 대한 포인터입니다.현재 IErrorInfo 인터페이스를 사용하려면 IntPtr(0)를 지정하고, 현재 IErrorInfo 인터페이스를 무시하고 오류 코드에서만 예외를 생성하려면 IntPtr(-1)를 지정합니다.":"指向提供有关错误的附加信息的 IErrorInfo 接口的指针。指定 IntPtr(0) 以使用当前 IErrorInfo 接口，或指定 IntPtr(-1) 以忽略当前 IErrorInfo 接口并仅为错误代码生成异常。。\r\n"," доступен только для чтения, в противном случае — значение false.  В используемой по умолчанию реализации ":" 只读，否则为假。在默认实现中\r\n","Stellt die Möglichkeit bereit, Zugriff auf Objekte ohne direkte Bearbeitung von Zugriffssteuerungslisten (ACLs) zu steuern, gewährt außerdem die Möglichkeit zur Typumwandlung von Zugriffsrechten. ":"提供无需直接操作访问控制列表 (ACL) 即可控制对对象的访问的能力，还授予类型转换访问权限的能力。\r\n","При возвращении данного метода содержит ссылку на фактическое число соединений, перечисленных в ":"当此方法返回时，包含对中列出的实际连接数的引用\r\n","Новое значение счетчика ссылок вызываемой оболочки времени выполнения, связанной с параметром ":"与参数关联的运行时可调用包装器的新引用计数值\r\n","Gibt eine Markierung für das Ende der Enumeration an.":"指定枚举结束的标记。\r\n","При возвращении этот метод содержит значение вложенного свойства.Если ключ ":"返回时，此方法包含附加属性的值。如果键\r\n"," со строкой сообщения, установленной в ":" 消息字符串设置为\r\n","Количество битов, на которое необходимо сдвинуть влево значение ":"将值向左移动的位数\r\n","Начальные знаки-разделители не следует учитывать при разборе, за исключением знаков-разделителей, встречающихся в шаблонах формата ":"不应解析前导定界符，格式模式中出现的定界符除外\r\n","Преобразовывает кодированный массив байтов, кодированный для передачи в URL-адресе, в декодированный массив байтов.":"将为在 URL 中传输而编码的编码字节数组转换为解码字节数组。\r\n","Преобразует значение заданного 16-разрядного целого числа без знака в эквивалентное 8-разрядное целое число без знака.":"将指定的 16 位无符号整数的值转换为其等效的 8 位无符号整数。\r\n"," entspricht der Länge von ":" entspricht der Lange von\r\n","Возвращает значение, определяющее, действительно ли значение типа ":"返回一个值，指示类型的值是否有效\r\n"," sind, gibt die Methode ":" 是，给出方法\r\n"," darstellt.Dieser Parameter wird nicht initialisiert übergeben.":" 表示。此参数未初始化传递。\r\n","Исключение, возникающее при возвращении неизвестного значения HRESULT после вызова метода COM.":"在 COM 方法调用后返回未知 HRESULT 时引发的异常。\r\n","Замещает все вхождения указанного символа в данном экземпляре на другой указанный знак.":"将此实例中出现的所有指定字符替换为另一个指定字符。\r\n","의 접선입니다.":"是的切线\r\n","DNS 스타일의 도메인 이름 또는 IP 주소입니다. ":"DNS 样式的域名或 IP 地址。\r\n","Der Wert eines ungültigen Handles (normalerweise 0 (null) oder -1).Die Implementierung von ":"无效句柄的值（通常为 0（零）或 -1）。\r\n","Наибольший общий делитель значений ":"最大公约数\r\n","매개 변수에 대한 정보를 포함합니다.":"包含有关参数的信息。\r\n","Возвращает указанное значение 16-битового целого числа без знака в виде массива байтов.":"以字节数组的形式返回指定的 16 位无符号整数值。\r\n","보다 일반적으로 사용되는 ":"比较常用\r\n","Возвращает или задает пользовательское имя для элемента коллекции.":"Возвращает или задает пользовательское имя для элемента коллекции。\r\n","Указывает параметр, содержащий отсчитываемое от нуля количество элементов массива, аналогичный параметру size_is в COM.":"指定一个包含从零开始数量的数组元素的参数，类似于 COM 中的 size_is 参数。\r\n","При возвращении данного метода содержит имя метода элемента.Этот параметр передается без инициализации.":"当此方法返回时，包含元素方法的名称。此参数无需初始化即可传递。\r\n","Gibt an, ob die Sicherheits-ID, für die Zugriffsregeln abgerufen werden sollen, vom Typ T:System.Security.Principal.SecurityIdentifier oder vom Typ T:System.Security.Principal.NTAccount ist.Der Wert dieses Parameters muss ein Typ sein, der in den ":"指定为其检索访问规则的安全标识符是 T:System.Security.Principal.SecurityIdentifier 类型还是 T:System.Security.Principal.NTAccount 类型。此参数的值必须是\r\n","Показывает способ маршалинга элементов массива при маршалинге массива из управляемого кода в неуправляемый код как массива ":"显示将数组从托管代码封送为非托管代码时如何封送数组元素作为数组。\r\n","-Klasse mit dem Objekt, für das ein Wrapper erstellt werden soll.":"包含要包装的对象的类。\r\n","Die maximal zulässige binäre Länge eines ":"a 的最大允许二进制长度\r\n","Инициализирует новый объект StrongBox, которому можно передать значение при ссылочном вызове.":"初始化一个可以在引用调用中传递值的新 StrongBox 对象。\r\n","Die zurückzugebende 32-Bit-Ganzzahl ohne Vorzeichen. ":"要返回的 32 位无符号整数。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 64 位带符号整数的值转换为等效的 64 位无符号整数。\r\n"," не является допустимым COM-объектом.":" 不是有效的 COM 对象。\r\n","와 같은 경우 ":"像这样的情况\r\n","Entfernt alle Zugriffsregeln in der DACL, die diesem ":"删除 DACL 中与此匹配的所有访问规则\r\n","Eine der Zeichenfolgen im Array enthält eines oder mehrere der ungültigen Zeichen, die in ":"数组中的字符串之一包含一个或多个指定的无效字符\r\n"," которого равна 0 (нулю).":" 等于 0（零）。\r\n","-Handle ab.":"-把手关掉。\r\n","Bestimmt, ob ein Pfad eine Dateinamenerweiterung enthält.":"确定路径是否包含文件扩展名。\r\n","데이터를 serialize 또는 deserialize할 때 알려진 형식으로 포함되는 ":"当数据被序列化或反序列化时，它被包含在一个已知的格式中。\r\n","URL 전송을 위해 인코딩된 문자열을 디코딩된 문자열로 변환합니다.":"将编码字符串转换为解码字符串以进行 URL 传输。\r\n"," entspricht. ":" 相当于。\r\n"," соответствует текущему экземпляру; в противном случае — значение false.":" соответствует текущему экземпляру; в противном случае — значение 错误。\r\n","두 번째 동일 형식 문자열입니다.":"第二个等效格式字符串。\r\n","ITypeComp 인터페이스의 관리되는 정의를 제공합니다.":"提供 ITypeComp 接口的托管定义。\r\n","Diese Methode gibt einen Verweis auf ein Array mit Namenszuordnungen zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回对名称映射数组的引用。此参数未初始化传递。\r\n","Convierte el número de punto flotante de precisión doble especificado en un entero de 64 bits con signo.":"Convierte el número de punto flotante de precisión doble especificado en un entero de 64 bits con signo。\r\n","Усекаемое число.":"截断的数字。\r\n"," supera la longitud máxima permitida por el sistema operativo.":" 超过操作系统允许的最大长度。\r\n","보다 작거나 같은 최대 정수입니다.메서드는 형식 ":"小于或等于的最大整数。该方法的形式为\r\n"," больше, чем длина значения данного экземпляра.-или- Значение параметра ":" 大于此实例值的长度。- 或 - 参数值\r\n","Entfernt einen Delegaten aus der Aufrufliste der Ereignisse, die von einem COM-Objekt stammen.":"从源自 COM 对象的事件调用堆栈中删除委托。\r\n","Строка, содержащая описание сборки.":"包含程序集描述的字符串。\r\n","Liest eine ganze Zahl von prozessoreigener Größe an einem angegebenen Offset aus dem nicht verwalteten Speicher.":"从非托管内存的指定偏移处读取处理器本机大小的整数。\r\n",".Dieser Wert wird von der ":".这个值取自\r\n","El resultado que devuelve este método contiene un BSTR que indica el nombre completo del archivo que contiene la biblioteca DLL utilizada para el archivo de Ayuda.Si el llamador no necesita el nombre del archivo, el valor de ":"此方法返回的结果包含一个BSTR，该BSTR指示包含用于Ayuda.Si 调用者不需要文件名，值为 \r\n","음수 ":"消极的\r\n","Задает тип функции свойства.":"指定属性的函数类型。\r\n","를 관리하는 연결 지점을 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"包含管理 的连接点。此参数未初始化传递。\r\n"," остается равным false и последующие вызовы свойства ":" 保持为 false 并且随后对该属性的调用\r\n","Die IID der Schnittstelle, die der Aufrufer zur Kommunikation mit dem resultierenden Objekt verwendet. ":"调用者用来与结果对象通信的接口的 IID。\r\n","Das Array, das das gewünschte Element enthält.":"包含所需元素的数组。\r\n","-Methode für den ":"- 方法\r\n","Считывает один байт с указанным смещением (или индексом) из неуправляемой памяти. ":"从非托管内存的指定偏移量（或索引）处读取一个字节。\r\n","Beschreibt, wie die Schnittstelle für COM-Clients verfügbar gemacht werden soll. ":"描述如何向 COM 客户端公开接口。\r\n","Die erste zu vergleichende komplexe Zahl.":"要比较的第一个复数。\r\n"," на другое и возвращает результат.":" 到另一个并返回结果。\r\n","지정된 개체의 값을 배정밀도 부동 소수점 숫자로 변환합니다.":"将指定对象的值转换为双精度浮点数。\r\n","-Objekts in den Wert einer 32-Bit-Ganzzahl ohne Vorzeichen.":"对象为 32 位无符号整数的值。\r\n","Количество элементов коллекции. ":"集合中的项数。\r\n","Сравнивает текущий моникер с заданным моникером и показывает, совпадают ли они.":"将当前名字对象与给定名字对象进行比较并显示它们是否匹配。\r\n","Первое из двух сравниваемых 16-разрядных целых чисел без знака. ":"要比较的两个无符号 16 位整数中的第一个。\r\n","Der Typ der Zugriffssteuerung (gewähren oder verweigern), der entfernt werden soll.":"要删除的访问控制类型（授予或拒绝）。\r\n"," не равно null. В противном случае, этот метод возвращает значение null.":" 不为空。否则，此方法返回 null。\r\n","[i]는 ":"[我]是\r\n","Записывает время изменения определенного объекта, чтобы IMoniker::GetTimeOfLastChange мог сообщить о времени внесения изменений.":"记录特定对象的修改时间，以便 IMoniker::GetTimeOfLastChange 可以报告何时进行了更改。\r\n",", указывающее, является ли элемент свойством, и, если да, то какого типа. ":"指示元素是否为属性的 ，如果是，是什么类型。\r\n","-Struktur mit den Attributen der Typenbeschreibung ab.":"结构与类型描述的属性。\r\n","Тип поля.Это должен быть ссылочный тип.":"字段类型。这必须是引用类型。\r\n"," и длинное целое число без знака.":" 和一个无符号长整数。\r\n","Преобразует значение заданного десятичного числа в эквивалентное 16-битовое целое число со знаком.":"将指定的十进制数的值转换为其等效的 16 位带符号整数。\r\n"," по основанию 10.":" 以 10 为基数。\r\n","8비트 부호 있는 정수의 절대 값을 반환합니다.":"返回 8 位有符号整数的绝对值。\r\n"," в эквивалентное ему строковое представление, используя указанные сведения об особенностях форматирования для данного языка и региональных параметров.":" 到其等效的字符串表示形式，使用指定的区域性特定格式设置信息。\r\n"," entspricht, oder 0 (null), wenn der Wert gleich null ist.":" 等于，或者如果值等于零则为 0（零）。\r\n","Размер указанного объекта в неуправляемом коде.":"非托管代码中指定对象的大小。\r\n","Массив байтов длиной 4.":"长度为 4 的字节数组。\r\n","Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 64-битовое целое число со знаком.":"将指定的 8 位无符号整数的值转换为等效的 64 位有符号整数。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 해당하는 문자열 표현으로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为其等效的字符串表示形式。\r\n","인 10진수 x입니다.":"是十进制数 x。\r\n"," 특성의 ":" 特征\r\n","32-разрядное целое число со знаком, большее или равное ":"大于或等于的 32 位有符号整数\r\n"," con el nombre del archivo DLL que contiene el método que se va a importar.":" 具有包含要导入的方法的DLL文件的名称。\r\n","Сохраняет объект в указанном потоке.":"将对象保存到指定的流。\r\n","System.__ComObject unabhängig von der Gültigkeit der CLSID. ":"System.__ComObject 无论 CLSID 的有效性如何。\r\n","Преобразовывает массив байтов в кодированный в URL массив байтов.":"将字节数组转换为 URL 编码的字节数组。\r\n","Имя, применяемое к элементам коллекции.":"Имя, применяемое к элементам коллекции。\r\n","Erstellt ein neues Streamobjekt mit eigenem Suchzeiger, der auf dieselben Bytes wie der ursprüngliche Stream verweist.":"创建一个新的流对象，它自己的查找指针指向与原始流相同的字节。\r\n","-Parameter enthält ungültige Zeichen, ist leer oder enthält nur Leerräume. ":"- 参数包含无效字符、为空或仅包含空格。\r\n","Konvertiert ein Objekt in einen COM-VARIANT.":"将对象转换为 COM VARIANT。\r\n","Die Pfadzeichenfolge, aus der der Dateiname und die Erweiterung abgerufen werden sollen. ":"从中获取文件名和扩展名的路径字符串。\r\n","Тип исключения.":"异常的类型。\r\n",", angefügt an das Ende von ":", 附加到\r\n","Kopiert den Inhalt eines verwalteten ":"复制托管的内容\r\n","Die vollständige Sicherheitsbeschreibung.":"完整的安全描述符。\r\n","Преобразует значение заданного 32-разрядного целого числа без знака в эквивалентное 16-разрядное целое число без знака.":"将指定的 32 位无符号整数的值转换为其等效的 16 位无符号整数。\r\n","Управляемая строка, содержащая копию неуправляемой строки ANSI.Если параметр ":"包含非托管 ANSI 字符串副本的托管字符串。如果参数\r\n","true, wenn das angegebene ":"真的，wenn das angegebene\r\n","Gibt eine 16-Bit-Ganzzahl mit Vorzeichen zurück, die aus zwei Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.":"Gibt eine 16-Bit-Ganzzahl mit Vorzeichen zurück, die aus zwei Bytes an der angegebenen 在每个字节数组中的位置。\r\n"," 인스턴스가 간격의 경과 시간을 측정하면서 실행되고 있으면 true이고, 그렇지 않으면 false입니다.":" 如果实例正在运行并测量间隔的经过时间，则为 true；否则为 false。\r\n","32-разрядное целое число без знака, которое эквивалентно значению ":"相当于 value 的 32 位无符号整数\r\n"," einen Enumerator für die Formate an, die in ":" 为包含在中的格式指定一个枚举器\r\n"," в качестве интерфейса по умолчанию, предоставленного COM.":" 作为 COM 提供的默认接口。\r\n","Показывает тип элемента для поля ":"显示字段的元素类型\r\n"," sind jeweils null. Größer als 0 (null)":" 都是零。大于 0（零）\r\n"," den Index in ":" 索引到\r\n","Stellt eine Gebietsschema-ID einer Typbibliothek dar.":"表示类型库的区域设置ID。\r\n","DLL에 정의된 것과 같은 정적 함수나 변수의 주소를 검색합니다.":"检索静态函数或变量的地址，例如在 DLL 中定义的。\r\n","Initialisiert eine neue Instanz der InvalidOleVariantTypeException-Klasse mit Standardwerten.":"使用默认值初始化 InvalidOleVariantTypeException 类的新实例。\r\n","-Parameter wurde mit einem ":"-参数更改为\r\n","-Array zu kopieren.":"-复制数组。\r\n"," 매개 변수를 사용할 수 없습니다.":" 不允许使用参数。\r\n","Die angeforderten Einschränkungen beim Zugriff auf den Bereich. ":"请求的空间访问限制。\r\n",") в квадранте,-π/2 < θ < 0.Для точек за пределами указанных квадрантов возвращаемое значение указано ниже.Если y равно 0 и x не является отрицательным, θ = 0.Если y равно 0 и x не является отрицательным, θ = π.Если y — положительное число, а x равно 0, θ = π/2.Если y является отрицательным и х равно 0, θ = -π/2.Если y равен 0 и х равен 0, то θ = -π/2. Если значение параметра ":") 在一个象限内，-π/2 < θ < 0。对于指定象限外的点，返回值如下。如果y为0且x不为负，则θ = 0。如果y为0且x不为负负，θ = π。如果y为正且x为0，则θ = π/2。如果y为负且x为0，则θ = -π/2。如果y为0且x为0，则θ = - π/ 2。如果参数值\r\n","Devuelve una interfaz correspondiente a un id. de interfaz especificado.":"返回一个id对应的接口。 的指定接口。\r\n","Преобразует указанное исключение в значение HRESULT.":"将指定的异常转换为 HRESULT 值。\r\n","검색 속도를 높이기 위한 해시 값이며 LHashValOfNameSys 함수에서 계산됩니다.":"用于加快检索速度的哈希值，由 LHashValOfNameSys 函数计算得出。\r\n","다시 할당된 메모리 블록 주소를 나타내는 정수입니다.이 메모리는 ":"一个整数，表示重新分配的内存块的地址。这块内存是\r\n"," не содержит сведений о корневом каталоге.":" 不包含有关根目录的信息。\r\n","Gibt den absoluten Wert einer Gleitkommazahl mit doppelter Genauigkeit zurück.":"返回双精度浮点数的绝对值。\r\n"," bereit, das Rückrufe für jeden gemeldeten Statuswert aufruft.":" ready 为每个报告的状态值调用回调。\r\n"," entweder gleich ":" 要么一样\r\n","Bei der Suche nach Assembly-Abhängigkeiten schließen Sie das Verzeichnis ein, das die Assembly selbst enthält, und durchsuchen dieses Verzeichnis zuerst.Dieser Wert wird von .NET Framework verwendet wird, bevor die Pfade der Win32-Funktion LoadLibraryEx übergeben werden.":"搜索程序集依赖项时，包括包含程序集本身的目录并首先搜索该目录。.NET Framework 在将路径传递给 Win32 LoadLibraryEx 函数之前使用此值。\r\n","-Objekt einen ACE mit den angegebenen Einstellungen hinzu.Verwenden Sie diese Methode für ACLs für Verzeichnisobjekte, wenn Sie den Objekttyp oder den geerbten Objekttyp des neuen ACE angeben.":"具有指定设置的 ACE 的对象。在指定对象类型或新 ACE 的继承对象类型时，将此方法用于目录对象的 ACL。\r\n","Die kombinierten Pfade.Wenn einer der beiden angegebenen Pfade eine Zeichenfolge der Länge 0 ist, gibt diese Methode den anderen Pfad zurück.Wenn ":"组合路径。如果两个指定路径中的任何一个是零长度字符串，则此方法返回另一个路径。如果\r\n","Возвращает код ошибки, возвращенной последней неуправляемой функцией, вызванной при помощи вызова неуправляемого кода с установленным флагом ":"返回由设置了标志的平台调用调用的最后一个非托管函数返回的错误代码\r\n","Ruft den Wert der Weitergabeflags ab, die bestimmen, wie die Vererbung dieser Regel an untergeordnete Objekte weitergegeben wird.Diese Eigenschaft ist nur dann relevant, wenn der Wert der ":"获取传播标志的值，这些标志确定如何将此规则的继承传播到子对象。仅当\r\n","Преобразует значение текущего комплексного числа в эквивалентное строковое представление в прямоугольной системе координат.":"将当前复数的值转换为其在直角坐标中的等效字符串表示形式。\r\n","캐시 연결의 경우, 이 플래그는 캐시가 들어 있는 개체가 저장될 때만 캐시된 표현을 업데이트합니다.":"对于缓存连接，此标志仅在保存其包含的对象时更新缓存表示。\r\n","Инициализирует новый экземпляр класса InvalidOleVariantTypeException с заданным сообщением.":"使用指定的消息初始化 InvalidOleVariantTypeException 类的新实例。\r\n","Gibt eine nicht negative Zufallsganzzahl zurück, die kleiner als das angegebene Maximum ist.":"返回小于指定最大值的非负随机整数。\r\n"," 개체의 값이 짝수인지를 나타냅니다.":" 개체의 값이 짝수인지를 나타냅니다。\r\n","Одномерный массив, из которого выполняется копирование.":"要从中复制的一维数组。\r\n","는 -1보다 크거나 같지만 1보다 작거나 같아야 합니다. ":"必须大于或等于 -1 但小于或等于 1。\r\n","При применении к методу указывает, что метод вызывается во время десериализации объекта в графе объекта.Порядок десериализации относительно других объектов на диаграмме является недетерминированным.":"当应用于方法时，指定在对象图中对象的反序列化期间调用该方法。反序列化相对于图中其他对象的顺序是不确定的。\r\n","При переопределении в производном классе возвращает значение, показывающее, допустимо ли значение дескриптора.":"При переопределении в производном классе возвращает значение, показывающее, допустимо ли значение дескрапто.\r\n","총 매개 변수 수를 계산합니다.":"计算参数总数。\r\n","시간 간격 측정을 중지하고 경과 시간을 0으로 다시 설정합니다.":"停止时间间隔测量并将经过的时间重置为零。\r\n","Смещение элемента в байтах, передаваемое с помощью вызова неуправляемого кода. ":"Смещение элемента в байтах, передаваемое с помощью вызова неуправляемого кода。\r\n","-Objekten dar.":"-对象。\r\n","Представляет целевую аппаратную платформу библиотеки типов.":"表示类型库的目标硬件平台。\r\n","지정한 함수 매개 변수에 대한 모든 사용자 지정 데이터를 가져옵니다.":"获取指定函数参数的所有自定义数据。\r\n","8-разрядное целое число без знака, которое эквивалентно значению параметра ":"相当于参数值的 8 位无符号整数\r\n","Индекс переменной, для которой нужно получить пользовательские данные. ":"要为其获取用户数据的变量的索引。\r\n","Gibt ein Unicode-Zeichen zurück, das aus zwei Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.":"Gibt ein Unicode-Zeichen zurück, das aus zwei Bytes an der angegebenen 在 einem Bytearray konvertiert wurde 中的位置。\r\n","나누기의 정수 계열 결과입니다.":"除法的积分结果。\r\n","Gibt die angegebene Gleitkommazahl mit einfacher Genauigkeit zurück. Es wird keine wirkliche Konvertierung durchgeführt.":"返回指定的单精度浮点数。不执行真正的转换。\r\n","나눌 복소수입니다.":"要除的复数。\r\n","Исключение, представляемое текущим экземпляром. ":"当前实例表示的异常。\r\n","반환할 8비트 부호 있는 정수입니다. ":"要返回的 8 位有符号整数。\r\n","Dieses Feld ist reserviert und muss auf 0 (null) festgelegt werden.":"该字段是保留字段，必须设置为 0（零）。\r\n","\" ist keine gültige URI. ":"\" 不是有效的 URI。\r\n","개체가 로드되는 스트림입니다. ":"从中加载对象的流。\r\n","Gibt an, dass ein Parameter optional ist.":"指示参数是可选的。\r\n","사용자 지정 데이터를 가져올 이 함수의 매개 변수의 인덱스입니다. ":"此函数的参数索引，从中获取自定义数据。\r\n","Строка, указывающая версию платформы .NET Framework.":"一个字符串，它指定 .NET Framework 的版本。\r\n"," с именем интерфейса-источника событий.":" 带有事件源接口的名称。\r\n","두 개의 64비트 부호 있는 정수 중 더 큰 숫자를 반환합니다.":"返回两个 64 位有符号整数中较大的一个。\r\n","Преобразует значение заданного объекта в эквивалентное 16-битовое целое число со знаком, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用指定的区域性特定格式设置信息将指定对象的值转换为其等效的 16 位带符号整数。\r\n","이 형식의 VTBL(가상 메서드 테이블)의 크기입니다.":"此类型的虚拟方法表 (VTBL) 的大小。\r\n","Возвращает указатель на интерфейс IUnknown, представляющий указанный интерфейс указанного объекта.Доступ к настраиваемому интерфейсу запросов включен по умолчанию.":"返回一个指向 IUnknown 接口的指针，该接口表示指定对象的指定接口。默认情况下启用自定义查询接口访问。\r\n"," 매개 변수 값입니다.":" 参数值。\r\n","Gibt einen Wert zurück, der angibt, ob der Wert einer langen ganzen Zahl mit Vorzeichen und ein ":"返回一个值，该值指示该值是否为带符号的长整数和\r\n","Gibt an, ob dieser Moniker zu den vom System gelieferten Monikerklassen gehört.":"指示此名字对象是否属于系统提供的名字对象类。\r\n","반환할 배정밀도 부동 소수점 숫자입니다. ":"要返回的双精度浮点数。\r\n","Die zu konvertierende Zeichenfolge. ":"要转换的字符串。\r\n","지정된 최대값보다 작은 음수가 아닌 임의의 정수를 반환합니다.":"返回小于指定最大值的随机非负整数。\r\n","Преобразует значение заданного 32-битового целого числа без знака в эквивалентное 16-битовое целое число со знаком.":"将指定的 32 位无符号整数的值转换为等效的 16 位有符号整数。\r\n","[Поддерживается только в .NET Framework 4.5.1 и более поздних версиях] Возвращает смещение поля для неуправляемой формы указанного управляемого класса.":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 返回指定托管类的非托管形式的字段偏移量。\r\n","Показывает, представляет ли указанный объект COM-объект.":"指示指定的对象是否表示 COM 对象。\r\n","Возвращает массив, содержащий символы, которые не разрешены в именах файлов.":"返回包含文件名中不允许的字符的数组。\r\n","읽을 관리되지 않는 메모리의 기본 주소입니다.":"要读取的非托管内存的基址。\r\n","Количество десятичных разрядов в возвращаемом значении. ":"返回值中的小数位数。\r\n","라이브러리의 특성이 들어 있는 구조를 검색합니다.":"检索包含库属性的结构。\r\n","Возвращает сведения об имени продукта.":"返回产品名称信息。\r\n"," имеет значение null, процесс назначения должен использовать GlobalFree для освобождения памяти.":" 为空，目标进程必须使用 GlobalFree 来释放内存。\r\n","반환할 부울 값입니다. ":"要返回的布尔值。\r\n","에 정의된 하나 이상의 잘못된 문자를 포함하는 경우또는 절대 경로를 검색할 수 없는 경우 ":"包含一个或多个在 中定义的无效字符，或者无法检索到绝对路径。\r\n",", или π/2, округленное до двойной точности (1,5707963267949), если ":", 或 π/2 四舍五入为双精度 (1.5707963267949) 如果\r\n","Der Name des Felds im ":"中的字段名称\r\n","설정된 경우, 속성을 설정하는 메서드를 호출하면 먼저 IPropertyNotifySink::OnRequestEdit가 호출됩니다.OnRequestEdit를 구현하면 호출이 속성을 설정하도록 허용될지 결정됩니다.":"如果设置，调用设置属性的方法将首先调用 IPropertyNotifySink::OnRequestEdit。实现 OnRequestEdit 确定是否允许调用设置属性。\r\n","변환된 HRESULT를 나타내는 개체입니다.":"表示转换后的 HRESULT 的对象。\r\n","지정된 8비트 부호 없는 정수의 값을 해당하는 32비트 부호 있는 정수로 변환합니다.":"将指定的 8 位无符号整数的值转换为等效的 32 位有符号整数。\r\n","URI에 액세스하는 사용자의 암호입니다.":"访问 URI 的用户的密码。\r\n","입력 배열에서 ":"从输入数组\r\n","Выполняет целочисленное деление двух значений ":"执行两个值的整数除法\r\n","Вставляет строковое представление указанного 8-разрядного целого числа без знака в данный экземпляр на указанную позицию символа.":"将指定 8 位无符号整数的字符串表示形式插入此实例的指定字符位置。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.":"使用指定的区域性特定格式设置信息，将指定的 32 位带符号整数的值转换为其等效的字符串表示形式。\r\n","Второе из двух сравниваемых 32-разрядных целых чисел со знаком. ":"要比较的两个有符号 32 位整数中的第二个。\r\n","Число с плавающей запятой с удвоенной точностью, являющееся значением по умолчанию. ":"作为默认值的双精度浮点数。\r\n","Dekrementiert den Verweiszähler des dem angegebenen COM-Objekt zugeordneten angegebenen Runtime Callable Wrapper (RCW) (RCW).":"减少与指定 COM 对象关联的指定运行时可调用包装器 (RCW) (RCW) 的引用计数。\r\n","Возвращает имя контейнера, содержащего пару ключей, используемую для создания строгого имени для сборки с данным атрибутом.":"返回包含用于为具有给定属性的程序集生成强名称的密钥对的容器的名称。\r\n","Второе комплексное число для перемножения.":"要相乘的第二个复数。\r\n","Индекс объекта в массиве, удовлетворившего условиям ожидания, или значение ":"满足等待条件的对象在数组中的索引，或值\r\n",", der den Klassenbezeichner der ursprünglichen Co-Klasse enthält. ":"，其中包含原始共同类的类标识符。\r\n","Число знаков для удаления. ":"要删除的字符数。\r\n","true si el identificador es válido; en caso contrario, false.":"如果标识符有效则为真；否则，假的。\r\n"," 매개 변수 반환 값 0 또는 양수 ":" 参数返回值 0 或正数\r\n",", z. B. \"C:\\MyFile.txt\".":"，例如例如“C:\\MyFile.txt”。\r\n"," wie der ":" 再次\r\n",".В нем сбалансированы пропускная способность и время отклика приложения.":".它平衡了吞吐量和应用程序响应时间。\r\n","두 문자열을 한 경로로 결합합니다.":"将两个字符串组合成一个路径。\r\n","Ruft den Namen der nicht aktivierten Berechtigung ab.":"获取未启用权限的名称。\r\n","Показывает 64-разрядное целое число без знака.":"显示 64 位无符号整数。\r\n","Определяет сборку в качестве базовой сборки, содержащей метаданные, но не содержащей исполняемый код.":"将程序集定义为包含元数据但不包含可执行代码的基本程序集。\r\n","Возвращает гиперболический косинус указанного комплексного числа.":"返回指定复数的双曲余弦值。\r\n","Stellt eine Kombination der Identität eines Benutzers, einer Zugriffsmaske und eines Zugriffssteuerungstyps (gewähren oder verweigern) dar.Ein AccessRule`1 Objekt enthält auch Informationen darüber, wie die Regel von untergeordneten Objekten geerbt und wie die Vererbung weitergegeben wird.":"表示用户身份、访问掩码和访问控制类型（授予或拒绝）的组合。AccessRule`1 对象还包含有关子对象如何继承规则以及如何传播继承的信息。\r\n","반환 값":"返回值\r\n","-Klasse mit den Angaben für Schema, Host, Anschluss und Pfad.":"具有方案、主机、端口和路径规范的类。\r\n"," можно объединять только флаги ":"只有标志可以组合\r\n","Объект для регистрации. ":"要注册的对象。\r\n","소스 개체에 대한 관리되지 않는 메모리의 기본 주소입니다.":"源对象在非托管内存中的基地址。\r\n","에서 반환한 문자열입니다.":"返回的字符串\r\n"," keine Erweiterung besitzt und ":" 没有扩展名和\r\n","Указатель COM IUnknown.Этот элемент можно использовать для типа данных ":"COM指针IUnknown。该成员可用于数据类型\r\n","Преобразует значение заданного числа с плавающей запятой одинарной точности в эквивалентное число с плавающей запятой двойной точности.":"将指定的单精度浮点数的值转换为其等效的双精度浮点数。\r\n","Смещение, добавляемое к ":"偏移量添加到\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.":"使用指定的区域性特定格式设置信息，将指定的 8 位带符号整数的值转换为其等效的字符串表示形式。\r\n","Целое число, представляющее указатель на блок памяти, выделенный для строки, или значение 0, если строка s имеет значение null.":"一个整数，表示指向为字符串分配的内存块的指针，如果字符串 s 为空，则为 0。\r\n"," = +бесконечность0":" = +无穷大0\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in einen entsprechenden booleschen Wert.":"将指定的单精度浮点数的值转换为等效的布尔值。\r\n","Единым блоком выполняет поиск указанного ключа в таблице и возвращает соответствующее значение.Если ключ в таблице не существует, метод вызывает конструктор класса по умолчанию, представляющего значение таблицы для создания значения, связанного с заданным ключом.":"在单个块中，它在表中查找指定的键并返回相应的值。如果该键在表中不存在，则该方法调用表示表值的类的默认构造函数来创建与关联的值指定的键。\r\n","Ein Zeiger auf einen nicht verwalteten Speicherblock. ":"指向非托管内存块的指针。\r\n","Das neu umschlossene Objekt, das eine Instanz des gewünschten Typs darstellt.":"表示所需类型实例的新包装对象。\r\n","-Objekts in einen Gleitkommawert mit einfacher Genauigkeit.":"对象为单精度浮点值。\r\n","Das Handle des sicherungsfähigen Objekts, dem das neue ":"新的安全对象的句柄\r\n","Ruft die Adresse eines Objekts in einem ":"获取一个对象的地址\r\n","Возвращает значение, определяющее, действительно ли 64-разрядное целое число без знака меньше значения ":"返回一个值，表示 64 位无符号整数是否小于该值\r\n"," меньше нуля. 0 Значение параметра ":" 小于零。 0 参数值\r\n","Eine aus Unicode-Zeichen bestehende, mit NULL beendete 2-Byte-Zeichenfolge.":"一个 2 字节、以 null 结尾的 Unicode 字符字符串。\r\n","SEH(구조적 예외 처리기) 오류를 나타냅니다. ":"表示结构化异常处理程序 (SEH) 错误。\r\n","Obtiene o establece el espacio de nombres CLR del tipo de contrato de datos. ":"Obtiene o establece el espacio de nobres CLR del tipo de contrato de datos。\r\n","지정된 숫자의 자연(밑 e) 로그를 반환합니다.":"返回指定数字的自然（以 e 为底）对数。\r\n"," 핸들에서 개체의 주소를 검색합니다.":" 从句柄中检索对象的地址。\r\n","Gibt den Kosinus der angegebenen komplexen Zahl zurück.":"返回指定复数的余弦值。\r\n"," 값으로 나눕니다.":" 按价值划分。\r\n","Преобразует значение заданного 64-разрядного знакового целого числа в эквивалентное число с плавающей запятой двойной точности.":"将指定的 64 位带符号整数的值转换为其等效的双精度浮点数。\r\n","는 형식이 잘못된 인수의 ":"一个畸形的论点\r\n","null로 끝나는 문자열을 나타냅니다.":"表示以 null 结尾的字符串。\r\n",", используя пояснительное сообщение.":"使用解释性信息。\r\n","Invoke 호출의 컨텍스트를 설명하는 플래그입니다. ":"描述 Invoke 调用上下文的标志。\r\n"," verwiesen wird.":" verwiesen 野生。\r\n","가 유효한 VARIANT 형식이 아닌 경우 ":"不是有效的 VARIANT 类型\r\n","날짜 및 시간의 문자열 표현입니다.":"日期和时间的字符串表示形式。\r\n","Определяет битовую комбинацию флагов ":"指定标志的位组合\r\n","Значение, контролирующее выполнение изменений объекта потока. ":"控制是否对线程对象进行更改的值。\r\n","Объект, содержащий Decimal, для инкапсуляции, а также для маршалинга как типа VT_CY. ":"包含 Decimal 的对象，用于封装以及作为 VT_CY 类型封送处理。\r\n","Ссылка на этот экземпляр после завершения операции добавления.":"添加操作完成后对此实例的引用。\r\n","다음 테이블과 같이 ":"如下表所示\r\n","비교할 두 개의 8비트 부호 있는 정수 중 두 번째 숫자입니다. ":"要比较的两个 8 位有符号整数中的第二个。\r\n","플랫폼 대상의 검색을 호출할 때 사용할 경로를 지정하여 ":"通过指定调用平台目标的搜索时要使用的路径 \r\n"," besitzt kein Format für ":" 没有格式\r\n","Определяет, является ли текущий набор должным (строгим) подмножеством заданной коллекции.":"确定当前集合是否是指定集合的​​真（严格）子集。\r\n","가 두 숫자의 중간이고, 이 숫자 중 하나는 짝수이고 다른 하나는 홀수이면, ":"是两个数字的中间，如果这些数字中的一个是偶数，另一个是奇数，\r\n","Die Rechte der Überwachungsregel.":"监控规则的权限。\r\n","Der Wert, dessen Bits verschoben werden sollen.":"要移动其位的值。\r\n","Возвращает строку документации библиотеки, полный файл справки и путь к нему, а также идентификатор контекста для раздела справки библиотеки в файле справки.":"返回库的文档字符串、完整的帮助文件及其路径，以及帮助文件中库的帮助主题的上下文标识符。\r\n"," 형식이 아닌 경우":" 如果没有格式化\r\n","DLL에 있는 함수에 대한 진입점의 설명 또는 사양을 검색합니다.":"检索 DLL 中函数入口点的说明或规范。\r\n","32-разрядное целое число со знаком, большее или равное 0 и меньшее, чем ":"大于或等于 0 且小于的 32 位有符号整数\r\n","-Objekt.Diese Methode akzeptiert keine ":"-Object.This方法不接受\r\n"," меньше нуля. -или-При увеличении значения данного экземпляра будет превышено значение ":" 小于零。 - 或 - 增加此实例的值将超过该值\r\n","Привязывает к определенному элементу, основанному на известном идентификаторе DISPID, где имя элемента неизвестно (например, при привязке к элементу, используемому по умолчанию).":"根据元素名称未知的已知 DISPID 绑定到特定元素（例如，绑定到默认元素时）。\r\n","Перемножает два заданных комплексных числа.":"将两个给定的复数相乘。\r\n","Адрес освобождаемой строки BSTR. ":"要释放的 BSTR 的地址。\r\n","true, wenn die aktuelle Instanz und die 64-Bit-Ganzzahl ohne Vorzeichen über den gleichen Wert verfügen, andernfalls false.":"如果当前实例和 64 位无符号整数具有相同的值，则为 true；否则为 false。\r\n","Элемент с заданным ключом, или значение null, если ключ не существует.":"具有给定键的元素，如果键不存在则为 null。\r\n","Угол θ, измеренный в радианах, такой что 0 ≤θ≤π-или- значение ":"角度 θ，以弧度为单位，满足 0 ≤θ≤π-或- 值\r\n","Startet den Messvorgang der verstrichenen Zeit für ein Intervall oder nimmt diesen wieder auf.":"开始或恢复测量一个间隔的经过时间。\r\n","이 메서드는 반환될 때 지정한 항목의 설명서 문자열을 나타내는 문자열을 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含一个字符串，表示指定项目的文档字符串。此参数未初始化传递。\r\n","Позволяет получить полный путь исходного файла, содержащего вызывающий объект.Это путь к файлу во время компиляции.":"获取包含调用者的源文件的完整路径。这是编译时文件的路径。\r\n","Die dem Benutzer als bindungsfähig angezeigte Funktion.":"以可绑定的形式呈现给用户的能力。\r\n","16-разрядное целое число без знака, которое эквивалентно значению ":"相当于 value 的 16 位无符号整数\r\n"," ist ein Referenztyp, der keine formatierte Klasse ist. - oder - ":" 是不是格式化类的引用类型。 - 或者 -\r\n","Исключение, возникающее при невозможности найти часть файла или каталога.":"找不到文件或目录的一部分时抛出的异常。\r\n","Указывает, что входные данные обрабатываются как отрицательный интервал времени только при наличии отрицательного знака.":"指定仅当存在负号时才将输入视为负时间间隔。\r\n","Das Schema des URIs.":"URI 的方案。\r\n","Eine Dezimalzahl, die ":"一个十进制数\r\n","Позволяет получить номер строки в файле источника, на которой вызывается метод.":"获取调用该方法的源文件中的行号。\r\n","Die Anzahl der Elemente, die in der Enumeration übersprungen werden sollen.":"枚举中要跳过的元素数。\r\n","Этот дескриптор подобен ":"这个描述符就像\r\n","-Methode zurückgegeben wurde.":"方法被返回。\r\n","이 메서드는 반환될 때 지정한 항목과 연관된 도움말 컨텍스트에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含对与指定项关联的帮助上下文的引用。此参数未初始化传递。\r\n","Flags, die die Weitergabeeigenschaften der Vererbung für die Zugriffssteuerungsregel angeben, die entfernt werden sollen.":"指定要删除的访问控制规则的继承传播属性的标志。\r\n","[.NET Framework 4.5.1 이상 버전에서 지원됨] 지정된 형식의 개체에 지정된 인터페이스를 나타내는 IUnknown 인터페이스에 대한 포인터를 반환합니다.사용자 지정 쿼리 인터페이스 액세스가 기본적으로 사용됩니다.":"[.NET Framework 4.5.1及以后版本支持] 返回一个指向IUnknown接口的指针，表示指定类型对象上的指定接口，默认启用自定义查询接口访问。\r\n","El identificador preexistente que se va a utilizar.":"要使用的旧标识符。\r\n","Ruft die Reihenfolge der Serialisierung und Deserialisierung eines Members ab oder legt diese fest.":"获取或设置成员序列化和反序列化的顺序。\r\n","이(가) null이 아니면 반환된 경로 문자열에는 ":"如果不为空，则返回的路径字符串包含\r\n","Получает отображаемое имя версии платформы .NET Framework, относительно которой скомпилирована определенная сборка.":"获取编译指定程序集所针对的 .NET Framework 版本的显示名称。\r\n","Определяет пару ключ/значение словаря, которая может быть задана или получена.":"指定可以设置或检索的字典键/值对。\r\n","Возвращает значение, определяющее действительно ли значение ":"返回一个值，表示该值是否有效\r\n"," 인스턴스를 초기화하고 경과 시간 속성을 0으로 설정한 다음 경과 시간 측정을 시작합니다.":" 初始化实例，将经过时间属性设置为 0，然后开始测量经过时间。\r\n","Число копируемых символов Юникода.":"要复制的 Unicode 字符数。\r\n","부호 없는 32비트 정수를 ":"32 位无符号整数\r\n","Ein Objektarray, das diesem ":"与此对应的对象数组\r\n","Число преобразуемых элементов массива ":"要转换的数组元素数\r\n","Ein verwaltetes Objekt mit den zu marshallenden Daten.Dieses Objekt muss eine Struktur oder Instanz einer formatierten Klasse sein.":"包含要编组的数据的托管对象。此对象必须是结构或格式化类的实例。\r\n"," в указанном классе, объявленном вызовом неуправляемого кода. ":" 在声明为平台调用的指定类中。\r\n",", исключая пробелы, не равна нулю и не кратна 4. -или-Формат параметра ":", 不包括空格，不等于零且不是 4 的倍数。 - 或 - 参数格式\r\n","와 함께 사용된 문자 형식입니다.항상 ":"与.Always一起使用的字符类型\r\n"," 매개 변수에서 설정되는 데이터 흐름의 방향을 지정합니다.이 메서드는 결과 열거자가 열거할 수 있는 형식을 결정합니다.":" 指定数据流向，在参数中设置，该方法决定生成的枚举器可以枚举哪些类型。\r\n","Поддерживает простой перебор по неуниверсальной коллекции.":"支持对非泛型集合的简单迭代。\r\n","Gibt den Zugriff auf die ROT (Running Object Table) zurück, die für diesen Bindungsvorgang relevant ist.":"返回对与此绑定操作相关的 ROT（运行对象表）的访问。\r\n","Verzeichnisinformationen für ":"的目录信息\r\n","Entfernt alle Zugriffsregeln in der DACL (Discretionary Access Control List), die diesem ObjectSecurity`1-Objekt zugeordnet sind und fügt die festgelegte Zugriffsregel hinzu.":"删除与此 ObjectSecurity`1 对象关联的自由访问控制列表 (DACL) 中的所有访问规则，并添加指定的访问规则。\r\n","를 통해 serialize될 수 있음을 지정합니다.":"指定它可以通过序列化\r\n","true ist, andernfalls 0 (null).":"为真，否则为 0（零）。\r\n","반환할 16비트 부호 없는 정수입니다. ":"要返回的 16 位无符号整数。\r\n","Eine Gleitkommazahl x mit doppelter Genauigkeit im Bereich 0 ≤ x ≤":"0 ≤ x ≤ 范围内的双精度浮点数 x\r\n","부호 있는 32비트 정수를 복소수로 변환하는 암시적 변환을 정의합니다.":"定义从有符号 32 位整数到复数的隐式转换。\r\n","Возвращает сведения о заголовке сборки.":"返回程序集头信息。\r\n","지정된 8비트 부호 없는 정수의 값을 해당하는 8비트 부호 있는 정수로 변환합니다.":"将指定的 8 位无符号整数的值转换为等效的 8 位有符号整数。\r\n","Die Basis des Logarithmus. ":"对数的底数。\r\n","Указывает, что все закрытые члены, содержащихся в сборке типов недоступны для отражения. ":"指定程序集中包含的类型的所有私有成员不可用于反射。\r\n","Der Typ des Objekts, auf das die ":"对象的类型\r\n","Gibt die angegebene 8-Bit-Ganzzahl ohne Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.":"返回指定的 8 位无符号整数。不执行真正的转换。\r\n","Gibt die Zuordnungsgröße des Arbeitsspeicherpuffers mit der angegebenen Anzahl von Elementen und der Elementgröße an.Diese Methode muss aufgerufen werden, bevor die ":"返回给定元素数量和元素大小的内存缓冲区的分配大小。必须在调用之前调用此方法\r\n","Вручную увеличивает счетчик ссылок для экземпляров ":"Вручную увеличивает счетчик ссылок для экземпляров\r\n"," определяет количество возвращаемых компонентов.fieldCount Возвращаемое значение 0 Пустая строка (\"\"). 1 основной номер версии 2 ОсновнойНомерВерсии.ДополнительныйНомерВерсии 3 ОсновнойНомерВерсии.ДополнительныйНомерВерсии.НомерПостроения 4 ОсновнойНомерВерсии.ДополнительныйНомерВерсии.НомерПостроения.НомерРедакции Например, при создании объекта ":" 指定要返回的组件数 fieldCount 返回值 0 一个空字符串 (\"\")。 1 Major Version Number 2 MajorVersionNumber.MinorVersionNumber 3 MajorVersionNumber.MinorVersionNumber.BuildNumber 4 MajorVersionNumber.MinorVersionNumber.Buildnumber.RevisionNumber 例如创建对象时\r\n","< 1) – oder – (":"< 1) – 或 – (\r\n","배열에서 인덱스를 뺀 길이가 ":"数组的长度减去索引\r\n","-Klasse für den angegebenen ":"-给定的类\r\n","Результат возведения ":"施工成果\r\n","Der neue Wert für den Verweiszähler des RCW, der ":"RCW 的引用计数的新值\r\n","-Werte und gibt das Ergebnis zurück.":"值并返回结果。\r\n","Kopiert Daten aus einem nicht verwalteten Speicherzeiger in ein verwaltetes Zeichenarray.":"将数据从非托管内存指针复制到托管字符数组。\r\n","-Instanz erstellte ":"实例创建\r\n","Gibt an, ob geerbte Überwachungsregeln automatisch weitergegeben werden.":"指定是否自动传播继承的监视规则。\r\n","Flags, die das Verhalten des neuen ":"指示新行为的标志\r\n"," 메서드에서 반환한 VARDESC 구조체를 해제합니다.":" 释放方法返回的 VARDESC 结构。\r\n","Gibt an, dass die SACL nicht null ist.Wird von Ressourcen-Managern oder Benutzern festgelegt.":"表示SACL不为空。由资源管理器或用户设置。\r\n","Der Typ des zurückzugebenden Delegaten. ":"要返回的委托类型。\r\n","Объект, представляющий преобразованное значение HRESULT.":"表示转换后的 HRESULT 值的对象。\r\n","-Objekt enthält auch Informationen darüber, wie die Regel von untergeordneten Objekten geerbt wird und wie die Vererbung weitergegeben wird.":"-Object 还包含有关规则如何被子对象继承以及继承如何传播的信息。\r\n","문자열과 .NET Framework 버전을 식별하는 ":"标识 .NET Framework 版本的字符串\r\n","-Objekt zugeordnete ":"-对象关联\r\n","Obtiene el valor absoluto de un objeto ":"Obtiene el valor absoluto de un objeto\r\n"," 개체를 단정밀도 부동 소수점 값으로 변환하는 명시적 변환을 정의합니다.":" 定义显式转换以将对象转换为单精度浮点值。\r\n","Строковое представление числа.Строка интерпретируется с использованием стиля, указанного в ":"数字的字符串表示形式。该字符串使用中指定的样式进行解释\r\n","Systemwarnsignal auslösen.":"触发系统警告信号。\r\n","Возвращает значение, показывающее, выделен ли дескриптор.":"获取一个值，该值指示是否已分配句柄。\r\n","Ein Verweis auf den Moniker, der sich links vom aktuellen Moniker befindet, wenn der Moniker ein Teil eines zusammengesetzten Monikers ist. ":"当名字对象是复合名字对象的一部分时，对当前名字对象左侧的名字对象的引用。\r\n","Konvertiert den numerischen Wert jedes Elements im angegebenen Bytearray in die entsprechende hexadezimale Zeichenfolgendarstellung.":"Konvertiert den numerischen Wert jedes Elements im angegebenen Bytearray in die entsprechende hexadezimale Zeichenfolgendarstellung.\r\n",", округленное до ближайшего 16-разрядного знакового целого числа.Если ":", 四舍五入到最接近的 16 位有符号整数。如果\r\n","Eine Instanz vom angegebenen Delegaten.":"指定委托的实例。\r\n","Предоставляет основной интерфейс для абстракции наборов.":"提供集合抽象的主要接口。\r\n","Der rückgängig zu machende ROT-Eintrag (Running Object Table). ":"要撤消的 ROT（运行对象表）条目。\r\n","두 개의 8비트 부호 있는 정수 중 더 작은 숫자를 반환합니다.":"返回两个 8 位有符号整数中较小的一个。\r\n","Der Pfad zum temporären Ordner, endend mit einem umgekehrten Schrägstrich.":"临时文件夹的路径，以反斜杠结尾。\r\n","Показывает тип указателя.":"显示指针类型。\r\n",". -или-Преобразование из ":". - 或 - 转换自\r\n","При возвращении данного метода содержит ITypeInfo с описанием типа, на который ссылается ":"当此方法返回时，包含一个 ITypeInfo 描述引用的类型\r\n"," hoch ":" 高的\r\n","Преобразует делегат в указатель на функцию, вызываемый из неуправляемого кода.":"将委托转换为从平台代码调用的函数指针。\r\n",".-или-Пустая ссылка (Nothing в Visual Basic), если ":".-或-Null 引用（在 Visual Basic 中为 Nothing）如果\r\n","Делит одно комплексное число на другое и возвращает результат.":"将一个复数除以另一个复数并返回结果。\r\n","Копирует данные из указателя неуправляемой памяти в управляемый массив чисел с плавающей запятой одиночной точности.":"将数据从非托管内存指针复制到单精度浮点数的托管数组。\r\n","Представляет отсутствующий объект ":"Представляет отсутствующий объект\r\n","Интерфейс не может добавлять члены в процессе выполнения.":"接口不能在运行时添加成员。\r\n","64-разрядное целое число х со знаком, такое что 0 ≤ x ≤":"64 位有符号整数 x 满足 0 ≤ x ≤\r\n","Ein Zeiger auf die IUnknown-Schnittstelle. ":"指向 IUnknown 接口的指针。\r\n","이 형식의 인스턴스 크기입니다.":"此类型的实例大小。\r\n"," nächste Ganzzahl.Wenn der Nachkommawert von ":" 下一个整数。如果十进制值\r\n","-Objekts (in Byte).":"对象（以字节为单位）。\r\n","지정된 10진수 값을 해당하는 8비트 부호 없는 정수로 변환합니다.":"将指定的十进制值转换为等效的 8 位无符号整数。\r\n","Обеспечивает поддержку эквивалентности типов.":"提供对类型等价的支持。\r\n","점의 극좌표를 사용하여 복소수를 만듭니다.":"使用点的极坐标创建复数。\r\n"," или оба параметра ":" 或两个选项\r\n","При возвращении данного метода содержит ссылку на перечисленные ссылки ":"当此方法返回时，包含对列出的引用的引用\r\n","와 유사하지만 종료 중에 개체가 재활용되어도 핸들이 0이 되지 않습니다.":"类似，但在关闭期间对象被回收时句柄不为零。\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.":"将数字的指定字符串表示形式转换为等效的单精度浮点数。\r\n"," со строкой сообщения, установленной на получение системных сообщений, и HRESULT, установленной в COR_E_FILENOTFOUND.":" 消息字符串设置为接收系统消息，HRESULT 设置为 COR_E_FILENOTFOUND。\r\n","쓸 값 형식입니다.":"要写入的值类型。\r\n","Третий путь для объединения.":"第三种加入方式。\r\n","Возвращает строковое представление структуры ":"返回结构的字符串表示形式\r\n",", который является пустым.":"，这是空的。\r\n","Stellt die maximale Größe eines DBCS (Double-Byte Character Set) für das aktuelle Betriebssystem in Bytes dar.Dieses Feld ist schreibgeschützt.":"表示当前操作系统的 DBCS（双字节字符集）的最大大小（以字节为单位）。此字段是只读的。\r\n","예외의 원인을 지정하는 오류 메시지입니다. ":"指定异常原因的错误消息。\r\n"," zurückgegeben wurde. ":" 被退回。\r\n","Словарь, в котором содержатся имена всех переменных среды и их значения; в противном случае, если переменные среды не найдены, — пустой словарь.":"包含所有环境变量名称及其值的字典；否则，如果没有找到环境变量，则为空字典。\r\n","Определяет значение перечисления ":"定义一个枚举值\r\n","Определяет, принадлежит ли элемент ":"确定元素是否属于\r\n","Число возвращаемых компонентов.Значение параметра ":"返回的组件个数。参数值\r\n"," и возвращающую значение HRESULT.Чтобы избежать задержки при заполнении, этому полю присваивается значение null.":" 并返回一个 HRESULT 值。此字段设置为空以避免填充延迟。\r\n","Gibt den natürlichen Logarithmus (zur Basis e) einer komplexen Zahl zurück.":"返回复数的自然对数（以 e 为底）。\r\n","Ein Bytewert, der die Revisionsebene der ":"表示修订级别的字节值\r\n","При использовании вспомогательных соединений с данными обеспечивает доступ к данным. ":"与辅助数据连接一起使用时提供对数据的访问。\r\n","Возвращает значение, определяющее, действительно ли 64-разрядное целое число со знаком больше или равно значению ":"返回一个值，该值指示一个带符号的 64 位整数是否大于或等于 value\r\n","Gibt die Anzahl der Elemente im Array fester Länger oder die Anzahl der Zeichen (nicht der Bytes) in einer zu importierenden Zeichenfolge an.":"指定固定长度数组中的元素数，或要导入的字符串中的字符数（不是字节数）。\r\n"," con un valor entero de 64 bits sin signo.":" 具有 entero de 64 位 sin signo 值。\r\n","Показывает, соответствует ли указанный объект ":"Показывает, соответствует ли указанный объект\r\n","과 같은 경우 ":"如果喜欢\r\n","Ein Zeiger, der den VARIANT empfangen soll, der dem ":"接收对应于的 VARIANT 的指针\r\n","Строка, содержащая имя файла, где находится данная пара ключей.":"一个字符串，其中包含给定密钥对所在文件的名称。\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in eine entsprechende Dezimalzahl.":"将指定的 16 位带符号整数的值转换为等效的十进制数。\r\n"," 매개 변수에서 지정하는 인터페이스에 대한 참조 횟수의 새 값입니다.":"参数指定的接口的引用计数的新值。\r\n"," управляемого объекта для создания из него объекта ":" 托管对象从中创建对象\r\n","-Parameter entspricht. ":"-参数对应。\r\n","Marca un identificador como no válido.":"将标识符标记为无效。\r\n","Указывает, зависит ли таймер от счетчика производительности высокого разрешения.Это поле доступно только для чтения.":"定时器是否依赖高分辨率性能计数器，该字段只读。\r\n","Ein Zeiger auf den mit ":"指向 with 的指针\r\n","각 환경 변수가 해당 값으로 바뀌는 문자열입니다.":"一个字符串，其中每个环境变量都被替换为它的值。\r\n","Показывает void в стиле языка C.":"在 C 风格中显示 void。\r\n","advise 연결을 고유하게 식별하는 토큰을 나타냅니다.이 토큰은 advise 연결을 설정하는 메서드에 의해 반환됩니다.":"Represents a token that uniquely identifies an advise connection. 此令牌由建立建议连接的方法返回。\r\n","Liest eine ganze Zahl von prozessoreigener Größe aus dem nicht verwalteten Speicher.":"从非托管内存中读取处理器本机大小的整数。\r\n","Округляет заданное число с плавающей запятой двойной точности до ближайшего целого.":"将指定的双精度浮点数舍入到最接近的整数。\r\n","Ein IDispatch-Zeiger in COM (Object in Microsoft Visual Basic 6.0).":"COM 中的 IDispatch 指针（Microsoft Visual Basic 6.0 中的对象）。\r\n","S_OK, wenn der ":"S_OK 如果\r\n","Преобразует заданное строковое представление числа в эквивалентное значение даты и времени, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"在给定指定的区域性特定格式设置信息的情况下，将数字的指定字符串表示形式转换为其等效的日期和时间值。\r\n"," und erweitert die einzelnen ANSI-Zeichen zu UNICODE-Zeichen.":" 并将单个 ANSI 字符扩展为 UNICODE 字符。\r\n","숫자의 지정된 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.":"将数字的指定字符串表示形式转换为其等效的 32 位带符号整数。\r\n","가 같은 개체를 참조하거나, ":"引用同一个对象，或者\r\n"," 배열의 길이입니다. ":" 数组的长度。\r\n","Das Bytearray. ":"字节数组。\r\n","Предоставляет статический метод для создания объекта ":"提供创建对象的静态方法\r\n","지정된 64비트 부호 없는 정수 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.":"将指定的 64 位无符号整数值转换为等效的双精度浮点数。\r\n","지정된 기수로 나타낸 숫자의 문자열 표현을 해당하는 16비트 부호 없는 정수로 변환합니다.":"将指定基数中数字的字符串表示形式转换为等效的 16 位无符号整数。\r\n","Entfernt alle Zugriffsregeln, die der angegebenen Zugriffsregel genau entsprechen, aus der DACL (Discretionary Access Control List), die diesem ":"从与此关联的自由访问控制列表 (DACL) 中删除与指定访问规则完全匹配的所有访问规则\r\n","En cas d'application à une méthode, spécifie que celle-ci est appelée au cours de la sérialisation d'un objet dans un graphique d'objets.L'ordre de sérialisation par rapport à d'autres objets dans le graphique n'est pas déterministe.":"En cas d'application à une méthode, spécifie que celle-ci est appelée au cours de la sérialisation d'un objet dans un graphique d'objets. pas deterministe。\r\n"," ту же версию платформы .NET Framework, что и указанный объект.":" 与指定对象相同的 .NET Framework 版本。\r\n","Добавляемое значение. ":"要添加的值。\r\n","Отображает помечен ли метод модификатором Async (Visual Basic) или async (справочник по C#).":"显示方法是否标记有异步 (Visual Basic) 或异步（C# 参考）修饰符。\r\n","Ein Array von Bytewerten, das die opaken Rückrufdaten darstellt, die diesem ":"表示与此关联的不透明回调数据的字节值数组\r\n","При входе показывает количество разыскиваемых экземпляров.Например, если ":"在入口处，它显示正在搜索的实例数。例如，如果\r\n"," является объектом Среда выполнения Windows. ":" 是 Windows 运行时对象。\r\n","형식 정보 멤버는 사용자 인터페이스에 표시하는 기본 멤버입니다.":"类型信息成员是显示在用户界面中的默认成员。\r\n"," 뒤에 오는 경우또는":" 如果后跟或\r\n"," равняется null, а ":" 为空，并且\r\n","Dieser Handletyp stellt ein nicht transparentes Handle dar, d. h., dass die Adresse des fixierten Objekts nicht über das Handle aufgelöst werden kann.Sie können mit diesem Typ ein Objekt überwachen und verhindern, dass es vom Garbage Collector erfasst wird.Dieser Enumerationsmember ist nützlich, wenn ein nicht verwalteter Client den einzigen Verweis auf ein verwaltetes Objekt enthält, der vom Garbage Collector nicht erkannt werden kann.":"此句柄类型表示不透明句柄；也就是说，无法从句柄解析固定对象的地址。您可以使用此类型来监视对象并防止其被垃圾收集。当非托管客户端仅引用包含托管对象时，此枚举成员很有用垃圾收集器无法检测到的对象。\r\n","이 메서드는 반환될 때 열거된 요소에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含对枚举元素的引用。此参数未初始化传递。\r\n","Позволяет компилятору клиента выполнить привязку к библиотечным типам, переменным, константам и глобальным функциям.":"允许客户端编译器绑定到库类型、变量、常量和全局函数。\r\n","; то есть журнал 10":";即日志 10\r\n","Der Offset, bei dem mit dem Rückgängigmachen des Marshallens begonnen werden soll.":"开始解组的偏移量。\r\n","Die Variable unterstützt die Datenbindung.":"变量支持数据绑定。\r\n","Gibt den Hyperbelsinus der angegebenen komplexen Zahl zurück.":"返回指定复数的双曲正弦值。\r\n","Ruft einen Wert ab, der angibt, ob die derzeitige Anwendungsdomäne entladen wird oder die Common Language Runtime (CLR) heruntergefahren wird. ":"获取一个值，该值指示当前应用程序域是否正在卸载或公共语言运行时 (CLR) 是否正在关闭。\r\n",", или нуль (0), если выполнить преобразование не удалось.Преобразование не удается выполнить, если значение параметра ":", or zero (0) if the conversion failed. The conversion fails if the parameter value\r\n","Die erste zu multiplizierende komplexe Zahl.":"第一个要相乘的复数。\r\n","-Klasse.  ":"-班级。\r\n","[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt] Marshallt Daten aus einem nicht verwalteten Speicherblock zu einem neu belegten, verwalteten Objekt des von einem generischen Typparameter angegebenen Typs. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 将非托管内存块中的数据封送到泛型类型参数指定类型的重新分配的托管对象中。\r\n","Объект, содержащий информацию о версии платформы .NET Framework.":"包含有关 .NET Framework 的版本信息的对象。\r\n","매개 변수가 선택적임을 나타냅니다.":"表示该参数是可选的。\r\n","32-разрядный хэш-код, вычисленный на основе значения параметра ":"根据参数值计算的 32 位哈希码\r\n",", переданный ссылкой, который определяет среду хранения (глобальная память, файл на диске, объект хранилища, объект потока, объект интерфейса графических устройство (GDI) или неопределенная) и владение этой средой для вызывающего объекта данных.":"一个 ，通过引用传递，指定存储环境（全局内存、磁盘文件、存储对象、流对象、图形设备接口 (GDI) 对象或未指定）和数据调用者对该环境的所有权。\r\n","-Feld bestimmt, auf die optional der nicht verwaltete Typ der Elemente im Array folgt, wenn eine Unterscheidung zwischen Zeichenfolgentypen erforderlich ist.":"字段，当需要区分字符串类型时，可选地后跟数组中元素的非托管类型。\r\n"," 필드로 인해 공용 언어 런타임이 지정된 이름 이외의 진입점 이름을 관리되지 않는 DLL에서 검색할지 여부를 제어합니다.":" 该字段控制公共语言运行时是否从指定名称以外的非托管Dll检索入口点名称。\r\n","64-разрядное целое число без знака, которое эквивалентно значению ":"相当于 value 的 64 位无符号整数\r\n","Возвращает угол, тангенс которого равен указанному числу.":"返回正切等于指定数字的角度。\r\n","비교할 두 개의 8비트 부호 있는 정수 중 첫 번째 숫자입니다. ":"要比较的两个 8 位有符号整数中的第一个。\r\n","8-разрядное целое число х со знаком, такое что 0 ≤ x ≤":"一个 8 位有符号整数 x 满足 0 ≤ x ≤\r\n","URI의 단편 부분입니다.단편 시작 부분에 단편 식별자(\"#\")가 추가됩니다.":"URI 的片段部分。片段标识符（“#”）附加到片段的开头。\r\n","Das der gewünschten Ausnahme entsprechende HRESULT.":"与所需异常对应的 HRESULT。\r\n","Der innere IUnknown-Zeiger des verwalteten Objekts.":"托管对象的内部 IUnknown 指针。\r\n","Указывает, что входные данные всегда обрабатываются как отрицательный интервал времени.":"指定始终将输入处理为负时间间隔。\r\n","Konvertiert eine Teilmenge eines Arrays von 8-Bit-Ganzzahlen ohne Vorzeichen in eine entsprechende Teilmenge eines Arrays von Unicode-Zeichen, das mit Base-64-Ziffern codiert wurde.Parameter geben die Teilmengen als Offsets des Eingabe- und Ausgabearrays und die Anzahl der Elemente im zu konvertierenden Eingabearray an.":"将 8 位无符号整数数组的子集转换为用 base-64 数字编码的 Unicode 字符数组的等效子集。参数将子集指定为输入和输出数组偏移量以及要转换的输入数组中的元素数.\r\n","Die GUID der angeforderten Schnittstelle.":"所请求界面的 GUID。\r\n","Gibt den Kehrwert einer komplexen Zahl zurück.":"返回复数的倒数。\r\n","Предоставляет особый конструктор для универсальных идентификаторов ресурсов (URI), а также изменяет URI для класса ":"为统一资源标识符 (URI) 提供自定义构造函数，并修改类的 URI\r\n","메서드가 충분한 네이티브 힙 메모리를 할당할 수 없는 경우":"如果该方法无法分配足够的本机堆内存\r\n","Это поле зарезервировано для использования в будущем.":"该字段保留供将来使用。\r\n","-Objekt ein Container ist. ":"- 对象是一个容器。\r\n","Ein Verweis auf den in diesem Vorgang zu verwendenden Bindungskontext. ":"对要在此操作中使用的绑定上下文的引用。\r\n","C 스타일 void를 나타냅니다.":"表示 C 风格的 void。\r\n","64비트 부호 있는 정수의 절대 값을 반환합니다.":"返回 64 位有符号整数的绝对值。\r\n","Второе из двух сравниваемых 16-разрядных целых чисел без знака. ":"正在比较的两个无符号 16 位整数中的第二个。\r\n","Das umfasste Objekt, das als Typ VT_CY gemarshallt werden soll.":"要作为 VT_CY 类型封送的包含对象。\r\n","Entero de 64 bits sin signo.":"输入 64 位 sin signo。\r\n","Ruft einen eindeutigen Bezeichner für den aktuellen verwalteten Thread ab.":"获取当前托管线程的唯一标识符。\r\n","Число, которое указывает знак значения ":"表示值符号的数字\r\n","배열에서 읽기를 시작할 오프셋입니다.":"数组中开始读取的偏移量。\r\n","Eine Zeichenfolge für Nicht-Unix-Plattformen, die \"\\r\\n\" enthält, oder eine Zeichenfolge für Unix-Plattformen, die \"\\n\" enthält.":"对于非 Unix 平台，包含“\\r\\n”的字符串，对于 Unix 平台，包含“\\n”的字符串。\r\n","모니커가 시스템에 제공된 모니커 클래스 중의 하나인지 여부를 나타냅니다.":"指示名字对象是否是系统提供的名字对象类之一。\r\n","Преобразуемый знак. ":"Преобразуемый знак。\r\n","Указывает количество функций в интерфейсе, описанном структурой.":"指定结构描述的接口中的函数数。\r\n"," для указания интервала времени.":" 指定时间间隔。\r\n","[Поддерживается только в .NET Framework 4.5.1 и более поздних версиях] Указывает, будет ли куча больших объектов (LOH) сжата во время следующей блокирующей сборки мусора. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 指定在下一次阻塞垃圾回收期间是否压缩大对象堆 (LOH)。\r\n","Возвращает заданное комплексное число, возведенное в степень, заданную комплексным числом.":"返回给定复数的复数次幂。\r\n","Задает безопасного дескриптора для дескриптора ожидания операционной системы. ":"指定操作系统等待句柄的安全句柄。\r\n","Указатель IUnknown для параметра ":"参数的 IUnknown 指针\r\n","Ein Verweis auf den in der Running Object Table (ROT) zu suchenden Moniker. ":"对要在运行对象表 (ROT) 中查找的名字对象的引用。\r\n"," nach links verschoben werden soll.":" 应该向左移动。\r\n","Показывает, что преобразование значения HRESULT или сигнатуры retval, происходящее в процессе вызовов COM-взаимодействия, следует запретить.":"指示应禁止在 COM 互操作调用期间发生的 HRESULT 值或 retval 签名的转换。\r\n","에 해당하는 배정밀도 부동 소수점 숫자이거나, ":"是一个双精度浮点数，等价于\r\n","null ist, oder eine leere Zeichenfolge, wenn ":"为 null，或者如果为空字符串\r\n","Флаги, описывающие контекст используемого вызова. ":"描述正在使用的调用上下文的标志。\r\n","Копирует данные из одномерного управляемого массива 16-битных целых чисел со знаком в указатель неуправляемой памяти.":"将数据从 16 位有符号整数的一维托管数组复制到非托管内存指针。\r\n","Ein Verweis auf die IMoniker-Schnittstelle für einen Moniker, der am Ende des aktuellen Monikers angefügt werden soll. ":"对追加到当前名字对象末尾的名字对象的 IMoniker 接口的引用。\r\n","Die Dezimalzahl, die ":"那个十进制数\r\n","Gibt bei Anwendung auf eine Methode an, dass die Methode nach der Serialisierung eines Objektgraphs in ein Objektdiagramm aufgerufen wird.Die Reihenfolge der Serialisierung relativ zu anderen Objekten im Diagramm ist nicht deterministisch.":"当应用于方法时，表示在将对象图序列化为对象图后调用该方法。相对于图上其他对象的序列化顺序是不确定的。\r\n","Gibt an, wie die Daten zwischen verwaltetem und nicht verwaltetem Code gemarshallt werden.":"指定如何在托管代码和非托管代码之间编组数据。\r\n","32-битовое знаковое целое число, образованное четырьмя байтами, начинающимися с ":"一个 32 位有符号整数，由以 开头的四个字节组成\r\n","Возвращает модуль (или абсолютное значение) комплексного числа.":"返回复数的模数（或绝对值）。\r\n","true, wenn diese komplexe Zahl und ":"如果这个复数和\r\n","-Objekt.Verwenden Sie diese Methode für ACLs für Verzeichnisobjekte, wenn Sie den Objekttyp oder den geerbten Objekttyp angeben.":"-Object. 在指定对象类型或继承的对象类型时，将此方法用于目录对象的 ACL。\r\n"," символ условной компиляции задан с учетом регистра.":" 条件编译符号区分大小写。\r\n","Stellt eine neue Zugriffssteuerungsregel für den angegebenen Benutzer mit den angegebenen Zugriffsrechten und Flags sowie der angegebenen Zugriffssteuerung dar.":"表示具有指定访问权限和标志以及访问控制的指定用户的新访问控制规则。\r\n","Ссылка на моникер, созданный из отображаемого имени до данной точки. ":"对到目前为止从显示名称创建的名字对象的引用。\r\n","Функция поддерживает GetLastError.Если в процессе выполнения функции возникает ошибка, вызывающий объект может вызвать GetLastError, чтобы извлечь код ошибки.":"函数支持GetLastError，如果函数执行过程中发生错误，调用者可以调用GetLastError获取错误码。\r\n","배정밀도 부동 소수점 값을 지정된 소수 자릿수로 반올림합니다.두 숫자의 중간에 있는 값을 반올림하는 방법을 지정하는 매개 변수입니다.":"Rounds a double-precision floating-point value to the specified number of decimal places. 此参数指定如何在两个数字之间的中间舍入值。\r\n",", в противном случае — значение false.Этот метод также возвращает значение false, если параметр ":", 否则为 false。如果参数为\r\n"," 값이 부호 없는 64비트 정수보다 작거나 같은지를 나타내는 값을 반환합니다.":" 返回一个值，该值指示值是否小于或等于 64 位无符号整数。\r\n","COM VARIANT를 가져올 개체입니다.":"要为其获取 COM VARIANT 的对象。\r\n","쓸 값 형식의 수입니다.":"要写入的值类型的数量。\r\n","При возвращении данного метода содержит ссылку на фактическое число строк, перечисленных в ":"当此方法返回时，包含对中列出的实际行数的引用\r\n"," меньше нуля. – или –Значение параметра ":" 小于零。 –or –参数值\r\n","Der Ereignisdelegat.":"事件委托。\r\n","Адрес закрепленного объекта как указатель ":"固定对象地址作为指针\r\n","지정된 배정밀도 부동 소수점 숫자 값을 해당하는 16비트 부호 있는 정수로 변환합니다.":"将指定的双精度浮点数的值转换为等效的 16 位带符号整数。\r\n","Возвращает абсолютное значение 16-битового целого числа со знаком.":"返回 16 位有符号整数的绝对值。\r\n","Возвращает доступ к таблице текущих объектов ROT, относящейся к этому процессу привязки.":"返回对与此绑定进程关联的当前对象表 ROT 的访问。\r\n","Меняет знак указанного значения BigInteger. ":"更改指定 BigInteger 值的符号。\r\n","에서 빌드된 모니커에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"包含对从 构建的名字对象的引用。此参数未初始化传递。\r\n","Der Stream, aus dem das Objekt geladen wird. ":"从中加载对象的流。\r\n","사용자 지정 QueryInterface는 사용되지 않습니다.대신 IUnknown::QueryInterface의 기본 구현이 사용되어야 합니다.":"不使用自定义QueryInterface。相反，应该使用IUnknown::QueryInterface的默认实现。\r\n","Получает или задает значение, на которое ссылается ":"获取或设置引用的值\r\n","대상 스트림에 대한 참조입니다. ":"对目标流的引用。\r\n","버퍼의 바이트 수입니다.":"缓冲区中的字节数。\r\n"," ist kein gültiger VARIANT-Typ.":" 不是有效的 VARIANT 类型。\r\n","La excepción que es la causa de la ":"繝ｼ繧ｫ繝ｼ縺ｫ縺ｪ縺\"縺ｦ縺縺ｾ縺呐 \r\n","-Werts in eine komplexe Zahl.":"- 值到一个复数。\r\n",".Если дескриптор был помечен как недопустимый с помощью ":".Если десриптор был помечен как недопустимый с помощью\r\n","Неуправляемый указатель на строку BSTR или значение 0, если строка ":"指向 BSTR 字符串的非托管指针，如果字符串为 0\r\n"," гарантированно никогда не инициализируется больше, чем из одного потока.Если при использовании конструктора ":" 保证永远不会从多个线程中初始化。如果在使用构造函数时\r\n","지정된 기수로 나타낸 숫자의 문자열 표현을 해당하는 8비트 부호 없는 정수로 변환합니다.":"将指定基数中数字的字符串表示形式转换为等效的 8 位无符号整数。\r\n","Der Logarithmus zur Basis 10 von ":"以 10 为底的对数\r\n","Ein boolescher Wert. ":"Ein boolescher Wert。\r\n","Initialisiert eine neue Instanz der ObjectAccessRule-Klasse, die eine neue Zugriffssteuerungsregel für das zugeordnete Sicherheitsobjekt darstellt.":"初始化 ObjectAccessRule 类的新实例，该实例表示关联安全对象的新访问控制规则。\r\n","지정된 개체가 COM 개체를 나타낼지 여부를 나타냅니다.":"指示指定的对象是否表示 COM 对象。\r\n","Инициализирует новый экземпляр класса OptionalAttribute со значениями по умолчанию.":"使用默认值初始化 OptionalAttribute 类的新实例。\r\n","Der Zugriff auf die Variable durch Makrosprachen darf nicht möglich sein.Dieses Flag ist für Variablen auf Systemebene oder für Variablen bestimmt, die von Typbrowsern nicht angezeigt werden sollen.":"不能通过宏语言访问变量。此标志用于系统级变量或类型浏览器不应显示的变量。\r\n"," kopiert wurde, oder 0, wenn ":" 被复制，或者 0 如果\r\n"," в метаданных.Этот класс не наследуется.":" 在元数据中。此类不是继承的。\r\n",".Если требуется различать типы строк, поле ":".如果要区分字符串类型，字段\r\n","-Wert und der Wert einer langen ganzen Zahl ohne Vorzeichen gleich sind.":"value 和无符号长整数的值相等。\r\n","64-разрядное целое число со знаком, являющееся значением по умолчанию. ":"作为默认值的 64 位有符号整数。\r\n","При возвращении данного метода содержит требуемый интерфейс ITypeInfo.Этот параметр передается без инициализации.":"当此方法返回时，包含所需的 ITypeInfo 接口。此参数无需初始化即可传递。\r\n","Benachrichtigt alle registrierten Advise-Senken, dass das Objekt aus dem laufenden Zustand in den geladenen Zustand gewechselt ist.  Diese Methode wird von einem Server aufgerufen.":"通知所有已注册的建议接收器该对象已从运行状态更改为加载状态。从服务器调用此方法。\r\n","현재 모니커와 같은 개체를 참조하지만 더 크거나 같은 효율로 바인딩될 수 있는 다른 모니커인 축소된 모니커를 반환합니다.":"返回折叠的名字对象，另一个名字对象引用与当前名字对象相同的对象，但更大或可以以相同的效率绑定。\r\n","Der erste VTBL-Slot, der benutzerdefinierte Methoden enthält.Der erste Slot lautet 3, wenn die Schnittstelle auf IUnknown basiert. Er lautet 7, wenn die Schnittstelle auf IDispatch basiert.":"包含用户定义方法的第一个 VTBL 插槽。如果接口基于 IUnknown，则第一个插槽为 3。如果接口基于 IDispatch，则为 7。\r\n"," 피연산자의 값을 반환합니다.피연산자의 부호는 변경되지 않습니다.":" 返回操作数的值。操作数的符号不变。\r\n","Объект String, содержащий сведения о товарном знаке.":"包含商标信息的 String 对象。\r\n","Замещаемый символ. ":"要替换的字符。\r\n","При возвращении данного метода содержит значение long, показывающее размер потока, необходимого для сохранения объекта, в байтах.Этот параметр передается без инициализации.":"当此方法返回时，包含一个 long 值，指示保存对象所需的流的大小，以字节为单位。此参数无需初始化即可传递。\r\n"," для класса, объявляющего данный член.":" 对于声明此成员的类。\r\n","Переменная появляется в обозревателе объектов, но не отображается в обозревателе свойств.":"该变量出现在对象浏览器中，但未出现在属性浏览器中。\r\n",", задавая целевой ":", 设定目标\r\n",", die die gesamte, von der aktuellen Instanz gemessene verstrichene Zeit darstellt.":"，表示当前实例测量的总运行时间。\r\n","Знаковое целое число, определяющее, как соотносятся между собой текущий объект коллекции и объект ":"一个带符号的整数，指定当前集合对象和对象如何相互关联。\r\n","확장명 없이 지정된 경로 문자열의 파일 이름을 반환합니다.":"返回不带扩展名的指定路径字符串的文件名。\r\n"," меньше -1 или больше 65535. ":" 小于 -1 或大于 65535。\r\n","Der größte gemeinsame Divisor von ":"的最大公约数\r\n","관리되지 않는 COM 작업 메모리 할당자에서 할당한 메모리 블록을 해제합니다.":"释放由非托管 COM 任务内存分配器分配的内存块。\r\n","Получает элемент, имеющий указанный ключ в доступном только для чтения словаре.":"获取在只读字典中具有指定键的元素。\r\n","-Parameter enthält nicht erkannte Flagwerte.":"- 参数包含无法识别的标志值。\r\n","Eine komplexe Zahl, die mit einem Exponenten potenziert werden soll.":"要提升为指数的复数。\r\n","Das Objekt, in das die Daten kopiert werden sollen.Dabei muss es sich um eine Instanz einer formatierten Klasse handeln.":"将数据复制到的对象。这必须是格式化类的实例。\r\n","Число, представляющее косинус, где значение параметра ":"表示余弦的数字，其中参数值\r\n"," 멤버가 null이 아니면 대상 프로세스에서 IStream::Release를 사용하여 스트림 구성 요소를 해제해야 합니다.":" 如果该成员不为空，则目标进程必须使用 IStream::Release 释放流组件。\r\n","Объект, который нужно вставить.Для ссылочных типов допускается значение null.":"要插入的对象。对于引用类型，允许为 null。\r\n"," auf die Klasse anwenden.":" 适用于班级。\r\n","을 포함할 수도 있습니다.이 ":"您还可以包括 . 这\r\n","를 거듭제곱할 지수입니다.":"를 거듭제곱할 지수입니다。\r\n","표준 SYSCALL 호출 규칙을 메서드에 사용해야 함을 나타냅니다.":"指示标准 SYSCALL 调用约定应该用于该方法。\r\n"," доступен только для чтения; в противном случае — значение false.В используемой по умолчанию реализации ":" 只读;否则为 false。在默认实现中，\r\n",".Обратите внимание, что этот метод возвращает целочисленное значение типа ":".注意这个方法返回一个整型值\r\n","Целое число, определяющее возникшую ошибку. ":"一个整数，指定发生的错误。\r\n","Предоставляет управляемое определение интерфейса ITypeComp.":"提供 ITypeComp 接口的托管定义。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 8 位有符号整数的值转换为等效的 16 位无符号整数。\r\n","Der Typ der angeforderten Schnittstelle. ":"请求的接口类型。\r\n","쓸 출력 배열입니다.":"要写入的输出数组。\r\n","Уменьшает счетчик ссылок указанной оболочки RCW (Вызываемая оболочка времени выполнения), связанной с указанным COM-объектом.":"减少与指定 COM 对象关联的指定 RCW（运行时可调用包装器）包装器的引用计数。\r\n","Преобразует значение заданного символа Юникода в эквивалентное 32-битовое целое число со знаком.":"将指定 Unicode 字符的值转换为其等效的 32 位带符号整数。\r\n","와 동일한 위치에서 발생합니다. 0보다 큼 이 인스턴스가 정렬 순서에서 ":"发生在与相同的位置大于 0 此实例在排序顺序中\r\n","과 같지 않은 경우 ":"如果不等于\r\n","Gibt eine 64-Bit-Ganzzahl ohne Vorzeichen an.":"指定 64 位无符号整数。\r\n","부호 있는 8비트 값으로 변환할 값입니다.":"要转换为带符号的 8 位值的值。\r\n","-Array in einen nicht verwalteten Speicherzeiger.":"指向非托管内存指针的数组。\r\n","-Objekt, wobei zusätzliche Fehlerinformationen in eine IErrorInfo-Schnittstelle für das Ausnahmeobjekt übergeben werden.":"对象，在异常对象的 IErrorInfo 接口中传递额外的错误信息。\r\n"," nicht 0 (null) ist, andernfalls false.":" 不是 0（零），否则为假。\r\n","Целое число, равное минус единице (-1).":"等于负一 (-1) 的整数。\r\n","Angolo che costituisce l'arcoseno di ":"Angolo che 构成 l'arcoseno di\r\n","Извлекает либо абсолютный путь к текущему выполняемому файлу объекта, либо, если выполняемый файл отсутствует, выдаваемый по умолчанию запрос имени файла объекта.":"检索对象当前可执行文件的绝对路径，或者如果没有可执行文件，则检索对象文件名的默认提示。\r\n","Verwaltet die Definition der IEnumConnections-Schnittstelle.":"管理 IEnumConnections 接口的定义。\r\n","Wendet die angegebene Änderung auf die SACL (System Access Control List) an, die diesem ":"将指定的更改应用于与此关联的 SACL（系统访问控制列表）\r\n","-Aufruf vorgenommen wurden.":"-打电话了。\r\n","Предоставляет значения, возвращаемые методом ":"提供方法返回的值\r\n","Наибольшее допустимое количество знаков в текущей строке. ":"当前行允许的最大字符数。\r\n","Entero de 64 bits con signo cuyo valor es equivalente a ":"Entero de 64 bits with signo cuyo valor es equivalente a\r\n","Замещаемая строка. ":"要替换的字符串。\r\n","Gibt die Erweiterung der angegebenen Pfadzeichenfolge zurück.":"返回指定路径字符串的扩展。\r\n","Der äußere IUnknown-Zeiger.":"外部 IUnknown 指针。\r\n","Konvertiert den numerischen Wert jedes Elements in einem Teil des angegebenen Bytearrays in die entsprechende hexadezimale Zeichenfolgendarstellung.":"将指定字节数组的一部分中每个元素的数值转换为其等效的十六进制字符串表示形式。\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung.":"将指定的 16 位带符号整数的值转换为其等效的字符串表示形式。\r\n","-Ereignis registriert sind.Abhängig von der ":"- 事件已注册。取决于\r\n","Когда этот метод возвращает результаты, в них содержится ссылка на возвращенный интерфейс.":"当此方法返回结果时，它们包含对返回接口的引用。\r\n","Liest eine 32-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset aus dem nicht verwalteten Arbeitsspeicher.":"从非托管内存的指定偏移处读取一个 32 位有符号整数。\r\n","Schreibt eine 64-Bit-Ganzzahl mit Vorzeichen in den nicht verwalteten Speicher.":"将 64 位带符号整数写入非托管内存。\r\n","에 열거된 모니커의 실제 수에 대한 참조를 포함합니다. ":"包含对 中枚举的名字对象的实际数量的引用。\r\n","Сопоставляет имя с типом элемента или связывает глобальные переменные и функции, содержащиеся в библиотеке типов.":"将名称映射到元素类型或绑定类型库中包含的全局变量和函数。\r\n","Der Exponent, mit dem ":"指数与\r\n"," bei Konstruktion aufgezeichnet wird, kann es vorkommen, dass dieser Handler gleichzeitig mit sich selbst aufgerufen werden kann.":" 在构造过程中被记录下来，可能会发生这个处理程序可以与它自己同时被调用的情况。\r\n",", содержащий ключи объекта ":"A 包含对象的键\r\n","-Objekte die gleiche .NET Framework-Version darstellen.":"对象代表相同的 .NET Framework 版本。\r\n"," especificado coincide con la instancia actual.":" 指定匹配当前实例。\r\n","Copia todos los caracteres hasta el primer carácter nulo de una cadena ANSI no administrada a un ":"将非托管ANSI字符串的第一个空字符的所有字符复制到 \r\n","Verwaltet die Definition der IEnumString-Schnittstelle.":"管理 IEnumString 接口的定义。\r\n"," in den nicht verwalteten Speicher.":" 到非托管存储。\r\n"," четному числу.":" 一个偶数。\r\n","Переменная, отображаемая пользователю как связываемая.":"作为可绑定对象显示给用户的变量。\r\n","Переменную следует сделать недоступной из макроязыков.Этот флаг предназначен для переменных уровня системы или для переменных, которые не нужно отображать в обозревателях типов.":"该变量应该在宏语言中不可用。此标志用于系统级变量或不需要在类型浏览器中显示的变量。\r\n","복사할 때 ANSI 형식으로 변환하여 관리되는 ":"通过复制时转换为 ANSI 格式进行管理\r\n","Die dem Benutzer als bindungsfähig angezeigte Variable.":"向用户显示为可绑定的变量。\r\n","가 둘 다 null인 경우 0보다 큼":"如果两者都为空则大于 0\r\n","Указывает версию сборки, которой присваиваются атрибуты.":"指定要为其分配属性的程序集的版本。\r\n","Получает имя профиля данного объекта ":"获取此对象的配置文件名称\r\n","Der neue Wert des Verweiszählers für die Schnittstelle, die durch den ":"由指定的接口的引用计数的新值\r\n"," für den neuen Zugriff.":" 对于新的访问。\r\n","Diese Methode gibt einen Verweis auf den Hilfekontext zurück, der dem angegebenen Element zugeordnet ist.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回对与指定项目关联的帮助上下文的引用。此参数未初始化传递。\r\n",", выполняющий сравнение строк по порядковому номеру без учета регистра.":"以不区分大小写的方式按序列号比较字符串的 。\r\n","Определяет дополнительные сведения о версии для манифеста сборки.":"指定程序集清单的附加版本信息。\r\n","Извлекает переменную с указанным идентификатором (либо имя свойства или метода и его параметры), соответствующую заданному идентификатору функции.":"检索具有与指定函数标识符相对应的指定标识符（或属性或方法及其参数的名称）的变量。\r\n","Eine Gleitkommazahl x mit einfacher Genauigkeit im Bereich 0 ≤ x ≤":"0 ≤ x ≤ 范围内的单精度浮点数 x\r\n","의 숫자에 해당하는 16비트 부호 없는 정수이거나, ":"是一个 16 位无符号整数，等于\r\n","ROT(실행 개체 테이블)에서 지정한 개체의 등록을 취소합니다.":"从运行对象表 (ROT) 中注销指定对象。\r\n","Наибольшее целое число, меньшее или равное ":"小于或等于的最大整数\r\n","Beendet die Zeitintervallmessung und setzt die verstrichene Zeit auf 0 (null) zurück.":"停止时间间隔测量并将经过的时间重置为 0（零）。\r\n","Eine Gruppe von Methoden und Eigenschaften, auf die über IDispatch::Invoke zugegriffen werden kann.In der Standardeinstellung geben duale Schnittstellen TKIND_DISPATCH zurück.":"通过IDispatch::Invoke访问的一组方法和属性kann.In 默认情况下，双接口返回TKIND_DISPATCH。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Dezimalzahl.":"将指定的 8 位无符号整数的值转换为其等效的十进制值。\r\n","를 반환합니다.인코딩된 ":"返回编码\r\n",".-или- Пустая ссылка (Nothing в Visual Basic), если ":".- 或 - 空引用（在 Visual Basic 中为 Nothing）如果\r\n","의 이스케이프되지 않은 표시 문자열이 포함된 문자열입니다.":"包含未转义显示字符串的字符串\r\n","Schreibt beginnend am aktuellen Suchzeiger eine angegebene Anzahl von Bytes in das Streamobjekt.":"从当前搜索指针开始，将指定数量的字节写入流对象。\r\n"," ist für das Ziel nicht deklariert.":" 没有为目标声明。\r\n","지정된 부울 값을 해당하는 8비트 부호 있는 정수로 변환합니다.":"将指定的布尔值转换为等效的 8 位带符号整数。\r\n","Целое число, ближайшее к значению параметра ":"最接近参数值的整数\r\n","Значение true, если дескриптор освобождается успешно; в противном случае при катастрофическом сбое — значение  false.В таком случае создается управляемый помощник по отладке releaseHandleFailed MDA.":"Значение true, 这个描述是可用的； в противном случае при катастрофическом сбое — сначение 错误。\r\n","Ein Objekt, das einen ITypeInfo-Zeiger darstellt.":"表示 ITypeInfo 指针的对象。\r\n","Этот тип является элементом управления, из которого производятся другие типы. Он не должен отображаться для пользователей.":"此类型是从中派生其他类型的控件。它不应显示给用户。\r\n","에 의해 두 숫자 중 하나가 반환됩니다.":"将返回两个数字之一。\r\n","Definiert die verfügbaren Typen von ACEs (Access Control Entries, Zugriffssteuerungseinträge).":"定义可用类型的 ACE（访问控制条目）。\r\n","Представляет интерфейс ":"代表一个接口\r\n","Das Zielobjekt, an das der Ereignisdelegat gebunden ist.":"事件委托绑定到的目标对象。\r\n","Gibt die Größe von ":"指定大小\r\n","Gibt an, ob zum Gewähren oder Verweigern des Zugriffs ein ":"指示是授予还是拒绝访问\r\n","Возвращает смещение, предоставленное при создании этого массива ":"Возвращает смещение, предоставленное при создании этого массива\r\n","데이터가 복사될 개체의 형식입니다.이 개체는 서식이 지정된 클래스나 구조체여야 합니다.":"数据将复制到的对象类型。此对象必须是格式化的类或结构。\r\n","-Instanz verwendet wird.":"使用实例。\r\n","Gibt einen FILETIME-Wert an.":"指定 FILETIME 值。\r\n","Значение, которое необходимо преобразовать в значение числа с плавающей запятой одиночной точности.":"要转换为单精度浮点值的值。\r\n","COM 개체에서 발생된 이벤트의 호출 목록에 대리자를 추가합니다.":"将委托添加到COM对象上发生的事件的调用列表中。\r\n",", содержащий исходный интерфейс.":"包含原始接口的 。\r\n","Stellt Informationen und Veränderungsmöglichkeiten für die aktuelle Umgebung und Plattform zur Verfügung.Diese Klasse kann nicht vererbt werden.":"为当前环境和平台提供信息和操作选项。该类不能被继承。\r\n","이 인터페이스가 IDispatch에서 직접적이든 간접적이든 파생됨을 나타냅니다.이 플래그는 계산되므로 해당 플래그에 대한 ODL(Object Description Language)이 없습니다.":"表示此接口直接或间接派生自 IDispatch。此标志是计算得出的，因此该标志没有对象描述语言 (ODL)。\r\n"," 값이 부호 없는 64비트 정수보다 작은지를 나타내는 값을 반환합니다.":" 返回一个值，该值指示值是否小于 64 位无符号整数。\r\n","Eine Zeichenfolge, die Stapelüberwachungsinformationen enthält.Dieser Wert kann ":"包含堆栈跟踪信息的字符串。该值可以\r\n","advise 싱크나 개체와의 캐시 연결을 설정할 때 요청되는 동작을 지정합니다.":"指定在与咨询接收器或对象建立缓存连接时请求的操作。\r\n"," einer Quellschnittstelle. ":" 一个源接口。\r\n","변수에 대한 정보를 포함합니다.":"包含有关变量的信息。\r\n","Одномерный массив, из которого выполняется копирование. ":"要从中复制的一维数组。\r\n","При возвращении данного метода содержит ссылку на ITypeComp содержащей библиотеки типов.Этот параметр передается без инициализации.":"当此方法返回时，包含对包含类型库的 ITypeComp 的引用。此参数在没有初始化的情况下传递。\r\n","지정된 BigInteger 값을 부정합니다. ":"否定指定的 BigInteger 值。\r\n","Преобразует значение заданного объекта в эквивалентное логическое значение.":"将指定对象的值转换为其等效的布尔值。\r\n","Ruft eine angegebene Anzahl von Elementen in der Enumerationsfolge ab.":"获取枚举序列中指定数量的元素。\r\n","Gibt eine komplexe Zahl potenziert mit einem durch eine komplexe Zahl angegebenen Exponenten zurück.":"返回提高到复数指定的指数的复数。\r\n"," является объектом Среда выполнения Windows.":" 是 Windows 运行时对象。\r\n","Указатель ":"指针\r\n","Возвращает или задает текущий режим задержки для сборки мусора.":"获取或设置垃圾回收的当前延迟模式。\r\n"," und kopiert eine BSTR-Zeichenfolge aus dem nicht verwalteten Speicher hinein.":" 并从非托管内存中复制一个 BSTR 字符串。\r\n","Gibt an, dass die binäre Darstellung der Sicherheitsbeschreibung im selbstbezogenen Format vorliegt.  Dieses Flag wird immer festgelegt.":"指定安全描述符的二进制表示形式采用自引用格式。这个标志总是被设置。\r\n"," больше или равно значению 64-битового целого числа без знака.":" 大于或等于 64 位无符号整数的值。\r\n","Ранее существующий дескриптор для использования. ":"Ранее существующий DESCRIPTOR для использования。\r\n","가 모두 ":"是全部\r\n","Коллекция для сравнения с текущим набором. ":"要与当前集合进行比较的集合。\r\n","16-разрядное знаковое целое число, эквивалентное значению ":"等于 value 的 16 位有符号整数\r\n","는 클래스 메타데이터에서 얻을 수 있습니다.정확한 인터페이스 형식 또는 클래스에 적용할 경우 기본 인터페이스 형식을 지정하려면 이 멤버를 사용하세요.이 멤버를 ":"可以从类元数据中获取。使用此成员指定应用于类时的确切接口类型或默认接口类型。\r\n","Сбрасывает последовательность перечисления в начало.":"将枚举序列重置为开头。\r\n","Gibt die Bedingungen für das Überwachen von Zugriffsversuchen auf ein sicherungsfähiges Objekt an.":"指定审核访问安全对象的尝试的条件。\r\n","Массив байтов длиной 2.":"Массив байтов длиной 2.\r\n","Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное строковое представление в указанной системе счисления.":"将指定的 16 位带符号整数的值转换为其在指定基数中的等效字符串表示形式。\r\n","Ruft die Adresse des Elements am angegebenen Index des angegebenen Arrays ab.":"获取指定数组的指定索引处元素的地址。\r\n","변환할 관리되지 않는 함수 포인터입니다.":"要转换的非托管函数指针。\r\n"," хранится в виде целого числа как внутреннего представления.":" 作为内部表示存储为整数。\r\n","Инкапсулирует объекты, которые необходимо маршалировать, как VT_CY.":"将要封送的对象封装为 VT_CY。\r\n","Beschreibt eine symbolische Konstante.":"描述符号常量。\r\n","Преобразует значение заданного объекта в эквивалентное 64-битовое целое число без знака, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用指定的区域性特定格式设置信息将指定对象的值转换为其等效的 64 位无符号整数。\r\n","Steuert Aspekte von Vorgängen der Monikerbindung.":"控制名字对象绑定操作的各个方面。\r\n","Этот параметр является значением, возвращаемым членом.":"该参数是成员返回的值。\r\n","할당하지 않고 TYPEKIND 열거형을 신속하게 반환합니다.":"在没有分配的情况下快速返回 TYPEKIND 枚举。\r\n","Ссылка на моникер, используемый для поиска в таблице текущих объектов (ROT). ":"对用于搜索当前对象表 (ROT) 的名字对象的引用。\r\n","Предоставляет число, указывающее время последнего изменения объекта, определенного текущим моникером.":"提供一个数字，指示由当前名字对象标识的对象的最后修改时间。\r\n","복소수의 절대 값 또는 크기를 가져옵니다.":"获取复数的大小或绝对值。\r\n"," über den gleichen Wert verfügen, andernfalls false.":" 具有相同的值，否则为假。\r\n"," minus 7 und ist kleiner oder gleich der Länge von ":" minus 7 und ist kleiner or gleich der Lange von\r\n","HRESULT로 변환할 예외입니다.":"转换为 HRESULT 的异常。\r\n","Размер, в байтах, типа, определяемого параметром универсального типа ":"泛型类型参数指定的类型的大小（以字节为单位）\r\n","단정밀도 부동 소수점 수의 절대 값을 반환합니다.":"返回单精度浮点数的绝对值。\r\n","Указывает, что числовая строка может быть в экспоненциальном представлении.Флаг ":"指定数字字符串可以是科学计数法。\r\n","Показывает значение FILETIME.":"显示文件时间值。\r\n"," 범위의 단정밀도 부동 소수점 숫자 x입니다.":" 范围内的单精度浮点数 x。\r\n","Die Ausnahme, die die aktuelle ":"Die Ausnahme，die die actuelle\r\n","이 값은 DLL 개체 응용 프로그램과 해당 개체의 그리기를 수행하는 개체 처리기에서 사용됩니다.":"该值由 DLL 对象应用程序和绘制这些对象的对象处理程序使用。\r\n",", ссылающийся на заданный объект и использующий заданное отслеживание восстановления.":"引用指定对象并使用指定恢复跟踪的 。\r\n","Ruft die GUID des Objekttyps ab, der den ACE (Access Control Entry, Zugriffssteuerungseintrag) erben kann, den dieses ":"获取可继承此访问控制项 (ACE) 的对象类型的 GUID\r\n","Definiert die Eigenschaften einer Variablen.":"定义变量的属性。\r\n","Преобразует заданное строковое представление числа в эквивалентное 16-битовое целое число без знака.":"将数字的指定字符串表示形式转换为其等效的 16 位无符号整数。\r\n","Определяет, как маршалировать переменную.":"指定如何编组变量。\r\n","현재 파일에 마지막으로 저장된 이후 개체의 변경 사항을 검사합니다.":"检查对象自上次保存到当前文件以来的更改。\r\n","Erstellt eine Tiefenkopie von diesem ACE (Access Control Entry, Zugriffssteuerungseintrag).":"创建此 ACE（访问控制条目）的深层副本。\r\n","Набор методов и свойств, доступных с помощью IDispatch::Invoke.По умолчанию двойные интерфейсы возвращают значение TKIND_DISPATCH.":"IDispatch::Invoke 可用的一组方法和属性。默认情况下，双接口返回 TKIND_DISPATCH。\r\n","Определяет, соблюдается ли структурное равенство между объектом и текущим экземпляром.":"确定对象和当前实例之间是否保持结构相等。\r\n","Einer der Werte aus der folgenden Tabelle.(Plus unendlich steht für ":"下表中的其中一个值。（加上无穷大代表\r\n","Gibt die Quadratwurzel einer angegebenen komplexen Zahl zurück.":"返回指定复数的平方根。\r\n","Представляет основание натурального логарифма, определяемое константой e.":"表示自然对数的底数，由常数 e 定义。\r\n","Ключ, регистрацию которого необходимо удалить. ":"要删除其注册的密钥。\r\n","Возвращает расширение указанной строки пути.":"返回指定路径字符串的扩展。\r\n"," 메서드의 IUnknown::QueryInterface 호출에서 ":" 在方法的IUnknown::QueryInterface调用中 \r\n","Lässt eine Optimierung zu, bei der der Compiler im Typ \"abc\" nach dem Member \"xyz\" sucht.Wenn ein solcher Member gefunden und als Accessorfunktion für ein Element der Standardauflistung markiert wird, wird ein Aufruf dieser Memberfunktion generiert.Zulässig für Member an Dispatchschnittstellen und Schnittstellen, nicht zulässig für Module.":"允许优化，其中编译器在类型\"abc\"中搜索成员\"xyz\"。如果找到这样的成员并将其标记为标准集合的元素的访问器函数，则会生成对此成员函数的调用。允许分配接口和接口上的成员，不允许模块。\r\n"," con el espacio de nombres proporcionado. ":" 与espacio de names proporcionado。\r\n","종료의 원인이 된 오류를 나타내는 예외입니다.일반적으로 catch 블록의 예외입니다.":"指示导致终止的错误的异常。通常是 catch 块中的异常。\r\n"," меньше нуля.– или –Произведение ":" 小于零。– 或 – 乘积\r\n","Второе комплексное число для сравнения.":"要比较的第二个复数。\r\n","Konvertiert den Wert der angegebenen Dezimalzahl in die entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.":"将指定十进制数的值转换为等效的 8 位无符号整数。\r\n","이 메서드는 반환될 때 TYPEFLAG에 대한 DWORD 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含对 TYPEFLAG 的 DWORD 引用。此参数未初始化传递。\r\n","Объект, определенный в каждой паре \"ключ-значение\".":"每个键/值对中定义的对象。\r\n",", используя указанный знак Юникода.":", 使用指定的 Unicode 字符。\r\n","Definiert eine implizite Konvertierung einer Gleitkommazahl mit doppelter Genauigkeit in eine komplexe Zahl.":"定义双精度浮点数到复数的隐式转换。\r\n","Objekt, das mit dieser Instanz verglichen werden soll. ":"Objekt, das mit dieser Instanz verglichen werden soll。\r\n","Сохраненный объект ":"保存对象\r\n","서버의 DNS(Domain Name System) 호스트 이름이나 IP 주소를 가져오거나 설정합니다.":"获取或设置服务器的域名系统 (DNS) 主机名或 IP 地址。\r\n",". Возможные соотношения показаны в следующей таблице.Возвращаемое значениеОписаниеМеньше нуляТекущий экземпляр меньше значения параметра ":".可能的关系如下表所示 返回值 说明 小于零 当前实例小于参数值\r\n",", содержащий значения объекта, который реализует ":"包含实现的对象的值\r\n","Помечает дескриптор как недопустимый.":"Помечает десриптор как недопустимый。\r\n","-Wert und der Wert einer langen ganzen Zahl mit Vorzeichen gleich sind.":"value 和有符号长整数的值相等。\r\n","Объект, представляющий строку составного формата и ее аргументы. ":"表示复合格式字符串及其参数的对象。\r\n"," с указанием путей для поиска целевых объектов вызовов неуправляемого кода. ":" 具有查找平台调用目标的路径。\r\n","Содержит сведения об элементе.":"包含有关元素的信息。\r\n","오류의 HRESULT를 사용하여 ":"使用错误的HRESULT \r\n","Eine 16-Bit-Ganzzahl mit Vorzeichen, die beginnend bei ":"Eine 16-Bit-Ganzzahl mit Vorzeichen, die beginnend bei\r\n","Ruft das Kennwort des Benutzers ab, der auf den URI zugreift, oder legt dieses fest.":"获取或设置访问 URI 的用户的密码。\r\n","-Parameter ist null.- oder -  Der ":"- 参数为空。 - 或 - 的\r\n","Synonym für ":"的同义词\r\n","При использовании вспомогательных соединений с данными (":"使用辅助数据连接时 (\r\n","Возвращает хэш-код для этого типа значения.":"Возвращает хэш-код для этого типа значения。\r\n","호출할 DLL 진입점의 이름 또는 서수를 나타냅니다.":"指示要调用的DLL入口点的名称或序号。\r\n","에 해당하는 16비트 부호 없는 정수이거나, ":"是一个 16 位无符号整数，等价于\r\n","Gibt eine zufällige Gleitkommazahl zwischen 0,0 und 1,0 zurück.":"返回一个介于 0.0 和 1.0 之间的随机浮点数。\r\n","Liest eine 32-Bit-Ganzzahl mit Vorzeichen aus dem nicht verwalteten Speicher.":"从非托管内存中读取 32 位有符号整数。\r\n"," 클래스로 정의된 형식에서 해당 메서드의 이름을 포함하는 ":" 包含类定义的类型中相应方法的名称。\r\n","Gibt an, dass die Klasse nur spätes Binden für COM-Clients unterstützt.Eine dispinterface für die Klasse wird auf Anforderung automatisch für COM-Clients verfügbar gemacht.Die vom Tlbexp.exe (Type Library Exporter-Tool) erstellte Typbibliothek enthält keine Typinformationen für die dispinterface, um zu verhindern, dass Clients die DISPIDs der Schnittstelle zwischenspeichern.Bei der dispinterface treten keine der in ":"指示该类仅支持 COM 客户端的后期绑定。根据请求，该类的调度接口会自动公开给 COM 客户端。Tlbexp.exe（类型库导出器工具）创建的类型库不包含调度接口的类型信息防止客户端缓存接口的 DISPID。dispinterface 不使用任何 in\r\n","Тип запрашиваемого интерфейса.":"请求的接口类型。\r\n","Получает отображаемое имя версии платформы .NET Framework, относительно которой построена сборка.":"获取构建程序集所针对的 .NET Framework 版本的显示名称。\r\n","Ссылка на моникер, используемый для сравнения. ":"引用用于比较的名字。\r\n"," не равно нулю; в противном случае — false.":" 不等于零；否则，假的。\r\n","Извлекает указатель интерфейса IConnectionPointContainer на доступный для соединения объект, которому принадлежит эта точка подключения.":"检索指向拥有此连接点的可连接对象的 IConnectionPointContainer 接口指针。\r\n","Показывает тип объекта хранилища, являющегося одним из значений перечисления STGTY.":"表示存储对象的类型，STGTY枚举值之一。\r\n","Invoke가 DISP_E_TYPEMISMATCH를 반환하는 경우 ":"如果 Invoke 返回 DISP_E_TYPEMISMATCH\r\n","Получает значение текущего элемента словаря.":"获取字典当前元素的值。\r\n","가 0과 같으면 ":"等于 0\r\n","Указывает, что ни один из флагов не применяется.":"指定不应用任何标志。\r\n","Ссылочный тип, к которому прикрепляется поле. ":"字段附加到的引用类型。\r\n","지정된 단정밀도 부동 소수점 숫자 값을 해당하는 8비트 부호 없는 정수로 변환합니다.":"将指定的单精度浮点数的值转换为等效的 8 位无符号整数。\r\n","멤버 식별자입니다. ":"会员标识符。\r\n","가 음수인 경우또는 ":"是负的，或者\r\n","메서드가 시작될 때 참조로 전달되는 값으로, 찾을 인스턴스의 수를 나타냅니다.예를 들어, 첫 번째 항목을 찾기 위해 ":"方法启动时通过引用传递的一个值，表示要查找的实例数。例如，查找第一个\r\n",", 번호 기호(#)로 시작하는 유효한 단편 식별자 또는 물음표(?)로 시작하는 유효한 쿼리 문자열이 아닌 경우 ":"，如果它不是以数字符号 (#) 开头的有效片段标识符或以问号 (?) 开头的有效查询字符串\r\n"," no son iguales; en caso contrario, es false.":" 它们是不一样的;否则，它是假的。\r\n","Задает идентификатор диспетчеризации COM (DISPID) для метода, поля или свойства.":"指定方法、字段或属性的 COM 调度标识符 (DISPID)。\r\n","두 개체를 비교한 다음 한 개체가 다른 개체보다 작은지, 큰지 또는 두 개체가 같은지 여부를 나타내는 값을 반환합니다.":"比较两个对象并返回一个值，该值指示一个对象是小于还是大于另一个对象，或者它们是否相等。\r\n","오류의 HRESULT가 들어 있는 개체를 사용하여 ":"使用包含错误的HRESULT的对象 \r\n","true, если текущий набор является надлежащим надмножеством объекта ":"如果当前集合是对象的真超集，则为真\r\n","Gibt an, dass ein Wert ein Verweis ist.":"指示值是引用。\r\n","이 메서드는 반환될 때 FUNCDESC 또는 VARDESC가 반환된 경우 바인딩 대상 항목이 들어 있는 형식 설명에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含对类型描述的引用，如果返回 FUNCDESC 或 VARDESC，则包含要绑定到的项。此参数未初始化传递。\r\n","지정된 32비트 부호 있는 정수 값을 해당하는 문자열 표현으로 변환합니다.":"将指定的 32 位带符号整数值转换为其等效的字符串表示形式。\r\n","Изменяет расширение строки пути.":"更改路径字符串的扩展名。\r\n","Eine Zeichenfolge, bei der alle Umgebungsvariablen durch ihren Wert ersetzt wurden.":"所有环境变量都替换为它们的值的字符串。\r\n","Stellt die verwaltete Definition der IMoniker-Schnittstelle mit COM-Funktionen von IPersist und IPersistStream bereit.":"使用 IPersist 和 IPersistStream COM 函数提供 IMoniker 接口的托管定义。\r\n","Возвращает неотрицательное случайное целое число.":"返回一个非负随机整数。\r\n","-Objekt der aktuellen Instanz entspricht.":"-Objekt der aktuellen Instanz entspricht。\r\n","Die Anzahl der möglichen ACEs, die dieses ":"这可能的 ACE 数\r\n","지정한 모니커가 ROT(실행 개체 테이블)에 현재 등록되어 있는지 여부를 확인합니다.":"检查指定的名字对象当前是否已在运行对象表 (ROT) 中注册。\r\n","쓰기를 시작할 위치입니다.정렬 문제를 고려해야 할 수 있습니다.":"这是开始写的地方。可能需要考虑对齐问题。\r\n","Gibt an, wie mathematische Rundungsmethoden eine Zahl verarbeiten sollen, die genau zwischen zwei Zahlen liegt.":"指定数学舍入方法应如何处理恰好介于两个数字之间的数字。\r\n","이 매개 변수는 반환될 때, 연결 가능한 개체의 IConnectionPointContainer 인터페이스를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此参数返回时，包含可连接对象的 IConnectionPointContainer 接口。此参数未初始化传递。\r\n","-Handle für ein verwaltetes Objekt, aus dem ein ":"- 管理对象的句柄，从中\r\n","> 1plus unendlich":"> 1 加无穷大\r\n","Der zu konvertierende boolesche Wert. ":"要转换的布尔值。\r\n","Определяет в редакторе отображаемое состояние для свойства или метода.":"指定属性或方法在编辑器中的显示状态。\r\n","Преобразует текстовую строку в строку, закодированную как URL-адрес.":"将文本字符串转换为编码为 URL 的字符串。\r\n","Управляет определением интерфейса IEnumVARIANT.":"控制 IEnumVARIANT 接口的定义。\r\n"," 구조체를 나타냅니다.advise 싱크는 이 ":" 表示一个 struct.advise 接收器\r\n","Показывает, как маршалировать данных между управляемым и неуправляемым кодом.":"展示如何在托管代码和非托管代码之间编组数据。\r\n",") — это точка в декартовой системе координат.Обратите внимание на следующее.Для (":")是笛卡尔坐标系中的一个点，注意以下几点。对于(\r\n","Определяет неявное преобразование 32-битного целого числа без знака в комплексное число.":"定义从 32 位无符号整数到复数的隐式转换。\r\n","와 같으면, 해당 값이 반환됩니다.이 메서드는 정수 계열 형식이 아니라 ":", 然后返回该值。此方法不是整数类型。\r\n","Der Offset, in Bytes, vom Anfang des zu codierenden ":"从要编码的开始处的偏移量（以字节为单位）\r\n","-π/2 ≤θ≤π/2 범위의 각도 θ(라디안)입니다. 또는 ":"以弧度为单位的角度 θ 在 -π/2 ≤θ≤π/2 范围内。或者\r\n","거듭제곱을 지정하는 숫자입니다. ":"指定功率的数字。\r\n","Konvertiert den Wert der angegebenen Dezimalzahl in einen entsprechenden booleschen Wert.":"将指定的十进制数的值转换为等效的布尔值。\r\n",", закодированная как URL-адрес.":"，编码为 URL。\r\n","Примерный начальный размер ":"大约起始尺寸\r\n","지정된 파일을 열고 파일 내용에서 개체를 초기화합니다.":"打开指定的文件并根据文件的内容初始化一个对象。\r\n","Kopiert alle Zeichen bis zum ersten NULL-Zeichen aus einer nicht verwalteten ANSI-Zeichenfolge in einen verwalteten ":"将第一个 NULL 字符之前的所有字符从非托管 ANSI 字符串复制到托管字符串\r\n","8-байтовое число с плавающей запятой.":"一个 8 字节的浮点数。\r\n","Получает переменную для пользовательских данных.":"获取用户数据的变量。\r\n","Номер порта URI.":"URI 的端口号。\r\n"," имеет ненадежный пароль. ":" 有一个弱密码。\r\n","이 형식은 다른 형식을 파생시킨 컨트롤이며, 사용자에게 표시되지 않아야 합니다.":"此类型是从中派生出其他类型的控件，不应向用户显示。\r\n","Освобождаемый интерфейс.":"免费接口。\r\n"," schwach oder stark ist und steuert den Zugriff auf das Objekt über dessen Eintrag in der ROT. ":" 弱或强，并通过其在 RO​​T 中的条目控制对对象的访问。\r\n","Это поле зарезервировано, его значение должно быть равно 0.":"该字段是保留字段，必须设置为 0。\r\n"," с содержимым ":" 有内容\r\n","밑이 10인 지정된 복소수의 로그를 반환합니다.":"返回以 10 为底的指定复数的对数。\r\n","Преобразует подмножество массива 8-разрядных целых чисел без знака в эквивалентное строковое представление, состоящее из цифр в кодировке Base64.В параметрах задается подмножество как смещение во входном массиве и количество преобразуемых элементов этого массива.":"将无符号 8 位整数数组的子集转换为由 Base64 编码数字组成的等效字符串表示形式。参数将子集指定为输入数组中的偏移量以及要转换的数组元素数。\r\n"," должен указывать на порядковый номер. ":" 必须指向序列号。\r\n","Diese Methode gibt einen Verweis auf eine FUNCDESC-Struktur zurück, die die angegebene Funktion beschreibt.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回对描述指定函数的 FUNCDESC 结构的引用。此参数未初始化传递。\r\n","Если переменная равна VT_SAFEARRAY или VT_PTR, то поле lpValue содержит указатель на TYPEDESC, показывающий тип элемента.":"如果变量等于 VT_SAFEARRAY 或 VT_PTR，则 lpValue 字段包含指向 TYPEDESC 的指针，指示元素类型。\r\n","HRESULT des Fehlers. ":"错误的 HRESULT。\r\n","Gibt true zurück, wenn das Objekt entfernt wurde, andernfalls false.":"如果对象已被删除，则返回 true，否则返回 false。\r\n","지정된 8비트 부호 없는 정수를 실제 변환 작업 없이 반환합니다.":"返回指定的 8 位无符号整数而不进行任何实际转换。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.":"将指定的 32 位带符号整数的值转换为等效的 64 位无符号整数。\r\n","Diese Methode gibt einen Verweis auf die IMPLTYPEFLAGS-Enumeration zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回对 IMPLTYPEFLAGS 枚举的引用。此参数未初始化传递。\r\n",", который будет получать уведомления об изменениях.":"，它将收到更改通知。\r\n","Массив символов. ":"字符数组。\r\n","소스 인터페이스를 식별하고 COM 형식 라이브러리에서 coclass를 가져올 때 생성되는 이벤트 인터페이스의 메서드를 구현하는 클래스를 식별합니다.":"标识源接口，并标识实现从COM类型库导入coclass时生成的事件接口的方法的类。\r\n","Содержит полный путь (диск, путь и имя файла) к файлу справки, содержащему дополнительные сведения об ошибке.":"包含帮助文件的完整路径（驱动器、路径和文件名），该帮助文件包含有关错误的更多信息。\r\n","Die festzulegende primäre Gruppe.":"要设置的主要组。\r\n",", эквивалентный номеру, содержавшемуся в параметре ":", 相当于参数中包含的数字\r\n","기수가 10인 부호 없는 숫자를 나타내는 ":"表示以 10 为底的无符号数\r\n","메모리에서 쓸 위치입니다.":"内存中要写入的位置。\r\n","-Parameter vor dem Schreiben hinzugefügt wird.":"-写入前添加参数。\r\n","Wenn dies nicht null ist, legt die Funktion ":"如果这不为空，则函数设置\r\n","Konvertiert die angegebene Gleitkommazahl mit doppelter Genauigkeit in eine 64-Bit-Ganzzahl mit Vorzeichen.":"Konvertiert die angegebene Gleitkommazahl mit doppelter Genauigkeit in eine 64-Bit-Ganzzahl mit Vorzeichen。\r\n"," и копирует в него заданное число знаков неуправляемой строки Юникода.":" 并将指定数量的非托管 Unicode 字符串的字符复制到其中。\r\n"," genau in der Mitte zwischen zwei ganzen Zahlen liegt, wird die gerade ganze Zahl zurückgegeben).Wenn ":" 正好是两个整数的中间值，则返回偶数）。如果\r\n","Объект, представляющий указанный неуправляемый COM-объект.":"表示指定的非托管 COM 对象的对象。\r\n","Преобразует значение заданного 8-разрядного целого числа со знаком в эквивалентное 32-разрядное целое число со знаком.":"将指定的 8 位带符号整数的值转换为等效的 32 位带符号整数。\r\n","Останавливает измерение затраченного времени для интервала.":"停止一个间隔的经过时间测量。\r\n"," включает составной стиль ":" 包括复合样式\r\n","Flags, die die Eigenschaften der Vererbungsweitergabe für diesen ACE angeben.":"指定此 ACE 的继承传播属性的标志。\r\n","Der Wert eines ungültigen Handles (normalerweise 0 (null) oder -1).":"Der Wert eines ungültigen Handles (normalerweise 0 (null) oder -1)。\r\n","Enthält nach dem Beenden dieser Methode einen Verweis auf den neu erstellten Enumerator.Dieser Parameter wird nicht initialisiert übergeben.":"退出此方法后，包含对新创建的枚举器的引用。此参数未初始化传递。\r\n","Gibt an, dass die freigegebene Zugriffssteuerungsliste (DACL – Discretionary Access Control List) automatisch vom übergeordneten Element geerbt wurde.Wird nur von Ressourcen-Managern festgelegt.":"指定自由访问控制列表 (DACL) 自动从父级继承。仅由资源管理器设置。\r\n","Der Typ des zu erstellenden Wrappers. ":"要创建的包装器类型。\r\n","Ruft die gesamte verstrichene Zeit in Millisekunden ab, die von der aktuellen Instanz gemessen wurde.":"获取当前实例测量的总运行时间（以毫秒为单位）。\r\n","Número de punto flotante de precisión doble formado por ocho bytes que comienzan en ":"Número de punto flotante de precisión doble formado por ocho bytes que comienzan en\r\n","Bindet an einen bestimmten Member aufgrund einer bekannten DISPID, wobei der Membername nicht bekannt ist (z. B. beim Binden an einen Standardmember).":"根据成员名称未知的已知 DISPID 绑定到特定成员（例如，绑定到标准成员时）。\r\n"," 매개 변수에 해당하는 지정된 형식의 개체입니다. ":" 与参数对应的指定类型的对象。\r\n","반환할 8비트 부호 없는 정수입니다. ":"要返回的 8 位无符号整数。\r\n","Gibt den Wert der angegebenen vorzeichenlosen 16-Bit-Ganzzahl als Bytearray zurück.":"Gibt den Wert der angegebenen vorzeichenlosen 16-Bit-Ganzzahl als Bytearray zurück。\r\n",", являющееся отображаемым состоянием свойства или метода.":"A 表示属性或方法的显示状态。\r\n","지정된 부울 값을 해당하는 10진수로 변환합니다.":"将指定的布尔值转换为其等效的十进制值。\r\n","에 해당하는 64비트 부호 없는 정수입니다.":"一个 64 位无符号整数，等价于\r\n","Schreibt den Wert einer 32-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset in den nicht verwalteten Speicher.":"将 32 位带符号整数的值写入指定偏移量处的非托管内存。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 10진수로 변환합니다.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的十进制。\r\n","IUnknown 인터페이스에 대한 포인터를 사용하여 COM 개체를 나타내는 형식의 인스턴스를 반환합니다.":"使用指向 IUnknown 接口的指针返回表示 COM 对象的类型的实例。\r\n"," имеет фиксированный размер, в противном случае — значение false.  В используемой по умолчанию реализации ":" 具有固定大小；否则，值为 false。在默认实现中\r\n","LoadLibraryEx 함수가 플랫폼 호출 중에 검색하는 경로를 지정하는 열거형 값의 비트 조합입니다. ":"枚举值的位组合，用于指定LoadLibraryEx函数在平台调用期间检索的路径。 \r\n","Внешний указатель IUnknown. ":"外部 IUnknown 指针。\r\n","double 값을 나타냅니다.":"表示双精度值。\r\n","Перечисляет элементы неуниверсального словаря.":"枚举非泛型字典的元素。\r\n","Получает вещественную часть текущего объекта ":"获取当前对象的实部\r\n","Stellt die Nebenversionsnummer einer Typbibliothek dar.":"表示类型库的次要版本号。\r\n","Ruft den absoluten Wert eines ":"获取a的绝对值\r\n","8비트 부호 없는 정수로 구성된 배열을 base-64 숫자로 인코딩된 해당하는 문자열 표현으로 변환합니다.":"将 8 位无符号整数数组转换为编码为 base-64 数字的相应字符串表示形式。\r\n","의 콘텐츠가 같은지 비교합니다.":"比较内容是否相等。\r\n","Valor booleano. ":"勇敢的布尔诺。\r\n","Преобразует значение заданного 16-битового целого числа со знаком в эквивалентный символ Юникода.":"将指定的 16 位带符号整数的值转换为其等效的 Unicode 字符。\r\n","Bei erfolgreicher Rückgabe ist die tatsächliche Anzahl der in das Streamobjekt geschriebenen Bytes enthalten.Wenn der Aufrufer diesen Zeiger auf ":"成功返回时，它包含写入流对象的实际字节数。如果调用者指向此指针\r\n","-Objekt erben kann.":"-对象可以继承。\r\n","Gibt einen Speicherblock frei, der von der nicht verwalteten Speicherbelegungsfunktion für COM-Aufgaben belegt wurde.":"释放由非托管内存分配工具为 COM 任务分配的内存块。\r\n","Складывает два комплексных числа.":"添加两个复数。\r\n","Das Objekt, dessen Größe zurückgegeben werden soll.":"要返回其大小的对象。\r\n","Показывает физическое положение полей, содержащихся в неуправляемом представлении класса или структуры.":"显示包含在类或结构的非托管表示中的字段的物理位置。\r\n","Индекс описания типа внутри библиотеки типов. ":"类型库中类型声明的索引。\r\n"," 매개 변수보다 작은 경우":" 如果参数小于\r\n","매크로 언어에서 함수에 액세스해서는 안 됩니다.이 플래그는 시스템 수준 함수 또는 형식 브라우저가 표시하지 않는 함수를 위한 것입니다.":"不应从宏语言访问函数。此标志用于系统级函数或类型浏览器未公开的函数。\r\n","Representa una clase contenedora para los identificadores del sistema operativo.Se debe heredar esta clase.":"表示操作系统标识符的包装类。必须继承此类。\r\n","Der Pfad, in dem nach einer Erweiterung gesucht werden soll. ":"搜索扩展的路径。\r\n","Der Parameter gibt Informationen vom Aufgerufenen zum Aufrufer zurück.":"该参数将信息从被调用者返回给调用者。\r\n","지정된 10진수 값을 해당하는 64비트 부호 없는 정수로 변환합니다.":"将指定的十进制值转换为等效的 64 位无符号整数。\r\n","Возвращает значение, определяющее точку, в которой должен быть выполнен сбор.":"获取一个值，该值指示应执行收集的时间点。\r\n","개체를 COM VARIANT로 변환합니다.":"将对象转换为 COM VARIANT。\r\n","저장소가 개체를 포함하고 있음을 나타냅니다.":"指示存储库包含对象。\r\n","Инициализирует новый экземпляр класса AssemblyKeyFileAttribute с именем файла, содержащего пару ключей, используемую, чтобы создавать строгое имя для сборки с данным атрибутом.":"使用包含密钥对的文件名初始化 AssemblyKeyFileAttribute 类的新实例，该密钥对用于为具有给定属性的程序集创建强名称。\r\n","64-разрядное целое число со знаком для сравнения.":"要比较的 64 位有符号整数。\r\n","Пароль пользователя, получающего доступ к URI.":"访问 URI 的用户的密码。\r\n","Ein von Integratoren implementierter Delegat, der benutzerdefinierte Ausnahmen bereitstellt.":"由提供自定义异常的集成商实现的委托。\r\n","부호 있는 32비트 정수로 변환할 값입니다. ":"要转换为带符号的 32 位整数的值。\r\n","Inkrementiert den Verweiszähler für die angegebene Schnittstelle.":"增加指定接口的引用计数。\r\n"," значение меньше 0 или больше 28. ":" 值小于 0 或大于 28。\r\n","Лишние знаки-разделители в любом месте строки не следует учитывать при разборе, за исключением знаков-разделителей, встречающихся в шаблонах формата ":"解析时应忽略字符串中任何位置的额外分隔符，格式模式中出现的分隔符除外。\r\n","Das zur Freigabe zu registrierende Objekt. ":"要注册共享的对象。\r\n","가 다르면 true이고, 그렇지 않으면 false입니다.":"如果不同则为真，否则为假。\r\n","지정된 CLSID(클래스 식별자)와 연관된 형식을 반환합니다. ":"返回与指定类标识符 (CLSID) 关联的类型。\r\n"," не совпадает со значением ":" не совпадает со значением\r\n","Definiert den Typ der Variable.":"定义变量的类型。\r\n","Das zu marshallende Objekt. ":"要封送的对象。\r\n","Gibt die angegebene 64-Bit-Ganzzahl mit Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.":"返回指定的 64 位带符号整数。不执行真正的转换。\r\n","이 개체의 해시 코드를 반환합니다.":"返回此对象的哈希码。\r\n","Целочисленное значение, представляющее битовую комбинацию флагов ":"表示标志位模式的整数值\r\n","-Werte, der beschreibt, wie die Schnittstelle für COM-Clients verfügbar gemacht werden soll. ":"描述接口应该如何暴露给 COM 客户端的值。\r\n","Die Ausnahme, die ausgelöst wird, wenn ein COM-Methodenaufruf ein nicht erkanntes HRESULT zurückgibt.":"当 COM 方法调用返回无法识别的 HRESULT 时引发的异常。\r\n","-Parameter des gewünschten Elements.":"- 所需项目的参数。\r\n","Stellt die Zielhardwareplattform für eine Typbibliothek dar.":"表示类型库的目标硬件平台。\r\n","Eine Dezimalzahl, die der Zahl in ":"与中的数字相等的小数\r\n","Der ACE wird von untergeordneten Endobjekten geerbt.":"ACE 由子端对象继承。\r\n","Gibt den Offset zurück, der beim Erstellen dieses ":"Gibt den Offset zurück, der beim Erstellen dieses\r\n","Исходное положение поиска.Исходное положение может быть началом файла, текущим положением указателя поиска или концом файла.":"搜索起始位置，起始位置可以是文件开头，也可以是搜索指针的当前位置，也可以是文件结尾。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in einen entsprechenden booleschen Wert.":"将指定的 8 位无符号整数的值转换为等效的布尔值。\r\n","Угол, представляющий собой арктангенс параметра ":"表示参数反正切的角度\r\n","Gibt ein byte an.":"指定一个字节。\r\n","Возвращает сведения об имени компании.":"返回公司名称信息。\r\n","Konvertiert den angegebenen booleschen Wert in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.":"将指定的布尔值转换为等效的 32 位无符号整数。\r\n",", если выполнить преобразование не удалось.Преобразование не удается выполнить, если параметр ":"if the conversion failed. 如果参数转换失败\r\n","Получает идентификатор данного объекта ":"获取此对象的 ID\r\n"," größer oder gleich -1, aber kleiner oder gleich 1 sein muss. ":" 大于或等于 -1 但小于或等于 1。\r\n","Одно из значений, перечисленных в следующей таблице.(+бесконечность обозначает ":"下表所列数值之一。（+无穷大表示\r\n","Stellt einen gesteuerten Arbeitsspeicherpuffer bereit, der zum Lesen und Schreiben verwendet werden kann.Durch den Versuch, außerhalb des gesteuerten Puffers auf Speicher zuzugreifen (Unterläufe und Überläufe), werden Ausnahmen ausgelöst.":"提供可用于读取和写入的托管内存缓冲区。尝试访问托管缓冲区之外的内存（下溢和上溢）会引发异常。\r\n","형식이 지정된 관리되는 클래스와 값 형식을 마샬링하는 데 사용되는 VARIANT입니다.":"用于封送类型化托管类和值类型的 VARIANT。\r\n","Коллекция элементов, удаляемых из набора.":"要从集合中移除的元素集合。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 32비트 부호 없는 정수로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为 32 位无符号整数。\r\n","Encapsula una matriz y un desplazamiento dentro de la matriz especificada.":"在指定的数组内封装一个数组和一个偏移量。\r\n","Die Adresse des freizugebenden BSTR.":"要释放的 BSTR 的地址。\r\n","Die Erweiterung des angegebenen Pfads (einschließlich des Punkts \".\") oder null oder ":"指定路径的扩展名（包括句点“.”）或 null 或\r\n","Указатель на структуру сведений об исключении, заполняемую только при возвращении DISP_E_EXCEPTION. ":"指向仅在返回 DISP_E_EXCEPTION 时填充的异常详细信息结构的指针。\r\n","Показывает, что значение не задано.":"表示没有设置任何值。\r\n","Преобразует значение заданного объекта в эквивалентное строковое представление.":"将指定对象的值转换为其等效的字符串表示形式。\r\n","16-разрядное целое число без знака, эквивалентное ":"相当于 16 位无符号整数\r\n","Помечает дескриптор как больше не используемый.":"Помечает десриптор как больше не используемый。\r\n","Настраивает время вмешательства сборщика мусора в работу приложения.   ":"设置垃圾收集器干扰应用程序的时间。\r\n","가 0보다 작은 경우 또는":"小于 0 或\r\n","[.NET Framework 4.5.1 이상 버전에서 지원됨] 관리되지 않는 메모리 블록의 데이터를 제네릭 형식 매개 변수에 의해 지정된 형식의 새로 할당된 관리되는 개체로 마샬링합니다. ":"[在 .NET Framework 4.5.1 及更高版本中受支持] 将非托管内存块中的数据编组到由泛型类型参数指定的类型的新分配的托管对象中。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 배정밀도 부동 소수점 숫자로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为双精度浮点数。\r\n","Это значение зарезервировано для использования в будущем.":"该值保留供将来使用。\r\n","Entfernt alle Zugriffssteuerungseinträge (ACEs) in diesem ":"删除此中的所有访问控制条目 (ACE)\r\n","지정된 복소수의 아크사인인 각도를 반환합니다.":"返回作为指定复数的反正弦的角度。\r\n","Diese Methode gibt einen Verweis auf den Index der Typbeschreibung in der enthaltenden Typbibliothek zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回对包含类型库中类型描述索引的引用。此参数未初始化传递。\r\n","날짜와 시간의 지정된 문자열 표현을 해당하는 날짜와 시간 값으로 변환합니다.":"将日期和时间的指定字符串表示形式转换为等效的日期和时间值。\r\n","가 null이면 메서드에서 null를 반환합니다.":"如果为 null，则该方法返回 null。\r\n","8비트 부호 없는 정수의 값을 특정 기수의 해당 문자열 표현으로 변환합니다.":"将 8 位无符号整数的值转换为其特定基数的字符串表示形式。\r\n","Der Index der zurückzugebenden Variablenbeschreibung. ":"要返回的变量描述的索引。\r\n"," 개체를 COM에 노출되는 기본 인터페이스로 설정하여 ":" 将对象设置为暴露给COM的默认接口 \r\n","Gibt an, wie die Arrayelemente gemarshallt werden sollen, wenn ein Array als ":"指定当数组作为\r\n","Der um 1 inkrementierte Wert des ":"值加1\r\n","Значение 0 указывает на положительное значение, а 1 — на отрицательное.":"值为 0 表示正值，值为 1 表示负值。\r\n","이 값은 나중에 사용되도록 예약되어 있습니다.":"该值保留供将来使用。\r\n","Die Methode gibt einen Verweis auf die aufgelisteten Moniker zurück.Dieser Parameter wird nicht initialisiert übergeben.":"该方法返回对列出的名字对象的引用。此参数未初始化传递。\r\n","오류의 HRESULT입니다.":"错误的后果。\r\n"," 값을 지정된 비트 수만큼 오른쪽으로 이동합니다.":" 将值向右移动指定的位数。\r\n","Массив значений MEMBERID найденных элементов. ":"查找到的元素的 MEMBERID 值数组。\r\n","-Objekt zugeordnet ist, die angegebene Zugriffsregel hinzu.":"对象分配后，添加指定的访问规则。\r\n","Gibt an, dass eine Schnittstelle für COM als Windows-Runtime-Schnittstelle verfügbar gemacht wird. ":"指定接口作为 Windows 运行时接口公开给 COM。\r\n","Битовое дополнение значения ":"值位补码\r\n","Ein Array der Bytewerte in Little-Endian-Reihenfolge.":"Little-Endian-Reihenfolge 中的 Ein Array der Bytewerte。\r\n","Показывает строку, заканчивающуюся нулем.":"显示以 null 结尾的字符串。\r\n","이 연결점이 관리하는 송신 인터페이스의 IID를 반환합니다.":"返回由此连接点管理的传出接口的 IID。\r\n","-Objekts (in Bytes) ab.Verwenden Sie diese Länge in Verbindung mit der ":"对象（以字节为单位）。将此长度与\r\n","Результат битовой операции Or.":"位运算的结果 Or。\r\n","-Zeitgeber ausgeführt wird.":"- 计时器正在运行。\r\n","이 메서드는 반환될 때 형식 설명의 TYPEKIND 열거형에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含对类型描述中 TYPEKIND 枚举的引用。此参数未初始化地传递。\r\n","Gibt den Logarithmus einer angegebenen Zahl bezüglich einer angegebenen Basis zurück.":"返回指定底数中指定数字的对数。\r\n","Получает значение метаданных.":"获取元数据值。\r\n","Заполняет элементы указанного массива байтов случайными числами.":"用随机数填充指定字节数组的元素。\r\n","메모리의 오프셋 시작 위치에서 지정된 수의 값 형식을 읽어서 이를 배열의 인덱스 시작 위치에 씁니다. ":"从内存中的偏移量开始读取指定数量的值类型，并将它们写入数组的起始索引。\r\n","Die Methode gibt einen Moniker zurück, der das Gegenteil vom aktuellen Moniker ist.Dieser Parameter wird nicht initialisiert übergeben.":"该方法返回一个与当前名字对象相反的名字对象。此参数未初始化传递。\r\n","Entfernen Sie die Autorisierungsregeln, die die gleiche Sicherheits-ID (SID) und die gleiche Zugriffsmaske wie die angegebene Autorisierungsregel aus der Zugriffssteuerungsliste enthalten.":"从访问控制列表中删除包含与指定授权规则相同的安全标识符 (SID) 和访问掩码的授权规则。\r\n","Eine Zahl, die einen Kosinus darstellt, wobei ":"表示余弦的数字，其中\r\n","Konvertiert Basisdatentypen in ein Bytearray und ein Bytearray in Basisdatentypen.":"在字节数组中转换基础数据类型，在基础数据类型中转换字节数组。\r\n",", die 2, 8, 10 oder 16 sein muss.  ":"，它必须是 2、8、10 或 16。\r\n","Строка длиной в 1 знак или null. ":"字符串 1 个字符长或为空。\r\n","Числовой порядок сериализации или десериализации.":"序列化或反序列化的数字顺序。\r\n","Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的 32 位有符号整数。\r\n",") im Quadranten 4-π/2 < θ < 0.Für Punkte an den Begrenzungen der Quadranten wird der folgende Rückgabewert zurückgegeben:Wenn y gleich 0 und x nicht negativ ist, gilt θ = 0.Wenn y gleich 0 und x negativ ist, gilt θ = π.Wenn y positiv und x gleich 0 ist, gilt θ = π/2.Wenn y negativ ist und x gleich 0 ist, gilt θ = -π/2.Wenn y gleich 0 ist und x gleich 0 ist, gilt θ = 0. Wenn ":") 在象限 4-π/2 < θ < 0。对于象限边界上的点，返回以下返回值： 如果 y 为 0 且 x 为非负，则 θ = 0。如果 y 为 0 且 x 为负, θ = π. 当y为正且x为0时, θ = π/2. 当y为负且x为0时, θ = -π/2. 当y为0且x为0时, θ = 0 。 如果\r\n","Подсчитывает число разрешенных возвращенных значений.":"计算允许的返回值的数量。\r\n","인수의 배열, 명명된 인수에 대한 인수 DISPID의 배열 및 배열에 있는 요소의 개수가 들어 있는 구조체에 대한 참조입니다. ":"对包含参数数组、命名参数的参数 DISPID 数组以及数组中元素数的结构的引用。\r\n"," не объявлен для целевого объекта.":" 没有为目标声明。\r\n","Die Basis des Logarithmus.":"对数的底数。\r\n"," указанными целочисленными значениями со знаком. ":" 指定的有符号整数值。\r\n","Константа, которая используется для задания бесконечного периода ожидания для методов, принимающих параметр ":"一个常量，用于为采用参数的方法设置无限等待期\r\n"," имеет значение null, процесс назначения должен использовать DeleteEnhMetaFile для удаления растрового изображения.":" 为空，目标进程必须使用 DeleteEnhMetaFile 删除位图。\r\n"," имеют одинаковые значения; в противном случае — значение false.":" 具有相同的含义；否则，假的。\r\n","Devuelve el valor de punto flotante de doble precisión especificado como una matriz de bytes.":"Devuelve el valor de punto flotante de double precision especificado como a matrix de bytes。\r\n"," nach rechts verschoben werden soll.":" 应该向右移动。\r\n","Enthält nach dem Beenden der Methode einen Verweis auf die aufgelisteten Verbindungen.Dieser Parameter wird nicht initialisiert übergeben.":"包含方法退出后对列出的连接的引用。此参数未初始化传递。\r\n","에 들어 있는 경우.":"如果在。\r\n","Die Adresse der nicht verwalteten Zeichenfolge, die freigegeben werden soll.":"要释放的非托管字符串的地址。\r\n","Предоставляет управляемое определение интерфейса ITypeInfo2.":"提供 ITypeInfo2 接口的托管定义。\r\n","이면 이 형식이 별칭인 형식을 지정합니다.":"如果 ，则指定此类型为其别名的类型。\r\n","Изменяет размер объекта-потока.":"更改流对象的大小。\r\n","Инициализирует новый экземпляр класса InvalidComObjectException, используя сообщение.":"使用消息初始化 InvalidComObjectException 类的新实例。\r\n",".-или-В параметре ":".-或-In参数\r\n","Указатель на CUSTDATA, который содержит все элементы пользовательских данных. ":"指向包含所有用户数据项的 CUSTDATA 的指针。\r\n"," bereitgestellt wurde.":" bereitgestellt wurde.\r\n","Cuando se invalida en una clase derivada, obtiene un valor que indica si este identificador es no válido.":"在派生类中重写时，获取一个值，该值指示此标识符是否无效。\r\n","-Objekt.Verwenden Sie diese Methode für ACLs für Verzeichnisobjekte, wenn Sie den Objekttyp oder den geerbten Objekttyp für den ACE angeben, der entfernt werden soll.":"-object. 在为要删除的 ACE 指定对象类型或继承对象类型时，将此方法用于目录对象的 ACL。\r\n","Die Anzahl der zu konvertierenden Elemente in ":"要转换为的项目数\r\n","지정된 부울 값을 해당하는 8비트 부호 없는 정수로 변환합니다.":"将指定的布尔值转换为等效的 8 位无符号整数。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung.":"将指定的 8 位带符号整数的值转换为其等效的字符串表示形式。\r\n","지정된 유니코드 문자의 값을 해당하는 32비트 부호 없는 정수로 변환합니다.":"将指定 Unicode 字符的值转换为等效的 32 位无符号整数。\r\n","Gibt die Funktion eines Zugriffssteuerungseintrags (Access Control Entry, ACE) an.":"指定访问控制条目 (ACE) 的角色。\r\n","-ParameterRückgabewert Positiv Der natürliche Logarithmus des ":"-ParameterReturns Positive 的自然对数\r\n","Das Objekt, für das ein COM-VARIANT abgerufen werden soll. ":"要为其获取 COM VARIANT 的对象。\r\n","El nombre que se debe usar en lugar del nombre de valor del diccionario predeterminado.":"El nombre que se debe usar en lugar del nombre de valor del diccionario predeterminado。\r\n","-Objekt identifizierten Vertrauensnehmer den Zugriff auf ein Objekt.Dieser ACE-Typ enthält möglicherweise optionale Rückrufdaten.Bei den Rückrufdaten handelt es sich um ein spezifisches BLOB des Ressourcen-Managers, das nicht interpretiert wird.":"-对象，受托者识别对对象的访问。此 ACE 类型可能包含可选的回调数据。回调数据是特定于资源管理器的 BLOB，不被解释。\r\n","Konvertiert den Wert des angegebenen Objekts in eine 16-Bit-Ganzzahl ohne Vorzeichen.":"将指定对象的值转换为 16 位无符号整数。\r\n","Замещает имя каждой переменной среды, внедренной в указанную строку, строчным эквивалентом значения переменной, а затем возвращает результирующую строку.":"用变量值的等效字符串替换指定字符串中嵌入的每个环境变量的名称，然后返回结果字符串。\r\n","Добавляет копию указанной строки и знак завершения строки по умолчанию в конец текущего объекта ":"将指定字符串的副本和默认行终止符添加到当前对象的末尾\r\n","비관리 코드에 전달할 수 있는 값입니다. 비관리 코드에서는 이 값을 사용하여 관리되는 내부 대리자를 호출할 수 있습니다. ":"可以传递给非托管代码的值。非托管代码可以使用此值来调用内部托管委托。\r\n","Konvertiert den Wert der angegebenen Dezimalzahl in eine entsprechende Gleitkommazahl mit doppelter Genauigkeit.":"将指定十进制数的值转换为等效的双精度浮点数。\r\n","로 캐스팅합니다.포인터를 전달하면 크기로 처리됩니다.":"强制转换为 . 如果您传递一个指针，它将被视为一个大小。\r\n","계약의 네임스페이스입니다. ":"合约的命名空间。\r\n","Объединяет управляемый объект с заданным COM-объектом.":"将托管对象与指定的 COM 对象合并。\r\n","이 메서드는 반환될 때 이 스트림 개체를 설명하는 STATSTG 구조체를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含一个描述此流对象的 STATSTG 结构。此参数未初始化地传递。\r\n","-Parameter enthalten nicht erkannte Flagwerte.":"- 参数包含无法识别的标志值。\r\n","Добавляет строковое представление указанного логического значения к данному экземпляру.":"将指定布尔值的字符串表示形式添加到此实例。\r\n","-Wert mit einem angegebenen Wert.":"- 具有给定值的值。\r\n",".Если значением параметра ":".如果参数值\r\n","Die zurückzugebende 8-Bit-Ganzzahl mit Vorzeichen. ":"要返回的 8 位有符号整数。\r\n","Der Typ des sicherungsfähigen Objekts, das diesem ":"此安全对象的类型\r\n"," для указания положения этого поля внутри типа.":" 指示此字段在类型中的位置。\r\n","-Verweis auf den neu erstellten Enumerator.":"- 引用新创建的枚举器。\r\n","의 숫자에 해당하는 64비트 부호 없는 정수이거나, ":"是一个 64 位无符号整数，等于\r\n","Открытый ключ или ключ удостоверения.":"公钥或身份密钥。\r\n","Переменная поддерживает привязку данных.":"该变量支持数据绑定。\r\n",") und das Offsetbyte (":") 和偏移字节 (\r\n","Выделяет блок памяти указанного размера из механизма распределения памяти для задач COM.":"从 COM 任务的内存分配机制中分配指定大小的内存块。\r\n","Копирует данные из одномерного управляемого массива ":"从一维托管数组复制数据\r\n","Объект, для которого необходимо отслеживать восстановление. ":"要跟踪恢复的对象。\r\n","Преобразует значение заданного десятичного числа в эквивалентное строковое представление, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用指定的区域性特定格式设置信息将指定的十进制数的值转换为其等效的字符串表示形式。\r\n","Konvertiert eine Zeichenfolge, die für die Übertragung in eine URL codiert wurde, in eine decodierte Zeichenfolge.":"将为传输而编码的字符串转换为 URL，再转换为解码后的字符串。\r\n","Значение, которое необходимо преобразовать в 32-разрядное знаковое целое число. ":"要转换为 32 位带符号整数的值。\r\n","멤버 이름과 멤버 ID, 매개 변수 이름과 매개 변수 ID를 매핑합니다.":"映射成员名称和成员 ID、参数名称和参数 ID。\r\n","Указывает подробности реализации метода.Этот класс не наследуется.":"指定方法的实现细节。该类不被继承。\r\n","이 바인딩 프로세스와 관련된 ROT(실행 개체 테이블)에 대한 액세스를 반환합니다.":"返回对与此绑定进程关联的运行对象表 (ROT) 的访问。\r\n","현재 열거자와 열거 상태가 같은 새 열거자를 만듭니다.":"创建与当前枚举器具有相同枚举状态的新枚举器。\r\n","Stellt eine Kombination der Identität eines Benutzers, einer Zugriffsmaske und eines Zugriffssteuerungstyps (gewähren oder verweigern) dar.Ein ":"表示用户身份、访问掩码和访问控制类型（授予或拒绝）的组合。\r\n","-Struktur unter Verwendung der Werte in einem Bytearray.":"- 字节数组中的结构下的 Verwendung der Werte。\r\n","Вычисляет целую часть заданного числа двойной точности с плавающей запятой. ":"计算指定双精度浮点数的整数部分。\r\n"," einen Stamm enthält, andernfalls false.":" 包含根，否则为假。\r\n","Gibt den Logarithmus einer angegebenen komplexen Zahl zur Basis 10 zurück.":"返回指定复数的以 10 为底的对数。\r\n","При возвращении данного метода содержит запрошенный выполняемый объект.Этот параметр передается без инициализации.":"当此方法返回时，包含请求的可执行文件。此参数无需初始化即可传递。\r\n","-Parameter ist kleiner als 0 (null).":"- 参数小于 0（零）。\r\n","지정된 함수에 대한 정보가 들어 있는 ":"包含有关指定函数的信息。\r\n"," situado en ":" 情况 zh\r\n","를 반환하거나, ":"返回，或者\r\n","Ruft die von der angegebenen ":"获取指定的\r\n","Сдвигает значение ":"移动值\r\n","관리되는 개체에서 IUnknown 인터페이스를 반환합니다.":"托管对象返回 IUnknown 接口。\r\n","Возвращает логарифм по основанию 10 указанного комплексного числа.":"返回指定复数的以 10 为底的对数。\r\n","의 양의 제곱근 음수 ":"正平方根负数\r\n","함수가 존재하고 바인딩 가능하더라도 사용자에게 표시되면 안 됩니다.":"即使该函数存在并且可绑定，它也不应该对用户可见。\r\n","Преобразует значение текущего комплексного числа в эквивалентное строковое представление в прямоугольной системе координат, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用指定的区域性特定格式设置信息，将当前复数的值转换为其在直角坐标系中的等效字符串表示形式。\r\n"," меньше нуля.-или- Длина значения ":" 小于零。-或- 值长度\r\n","-Parameter ist kleiner als 0 (null).- oder -Der ":"-Parameter is less than 0 (零).-or-The\r\n","-Werts in einen ":"-价值合一\r\n","Die Anzahl der zu kopierenden Arrayelemente. ":"要复制的数组元素的数量。\r\n","Gibt ein C-Array an.":"指定一个 C 数组。\r\n"," 개체를 부호 없는 16비트 정수 값으로 변환하는 명시적 변환을 정의합니다.":" 定义显式转换以将对象转换为无符号 16 位整数值。\r\n","일반 함수 호출 구문을 통해 멤버가 호출됩니다.":"通过正常的函数调用语法调用成员。\r\n"," son idénticos, puede haber más descripciones de tipo que contengan el nombre.":" 它们是相同的，可能有更多的类型描述包含名称。\r\n",".Этот должен быть форматированный класс.":".这必须是一个格式化的类。\r\n","Ruft einen booleschen Wert ab, der angibt, ob dieser ACE (Access Control Entry, Zugriffssteuerungseintrag) geerbt oder explizit festgelegt wird.":"获取一个布尔值，该值指示此访问控制项 (ACE) 是继承的还是显式设置的。\r\n","null ist, enthält die zurückgegebene Zeichenfolge den angegebenen Pfad ohne die Erweiterung.Wenn ":"为空，返回的字符串包含指定的路径，不带扩展名。如果\r\n","URI에 액세스하는 사용자와 관련된 사용자 이름입니다.":"与访问 URI 的用户关联的用户名。\r\n","64비트 부호 있는 정수의 부호를 나타내는 값을 반환합니다.":"返回一个值，该值指示 64 位有符号整数的符号。\r\n","Dieses Feld ist für eine spätere Verwendung vorgesehen.":"此字段供以后使用。\r\n","-Werte, der die durch ":"-价值观的贯通\r\n","Zugriff zulassen.":"允许访问。\r\n","Eine 32-Bit-Ganzzahl ohne Vorzeichen, die ":"一个 32 位无符号整数\r\n","인터페이스가 초기 바인딩만 사용하는 IUnknown에서 파생된 인터페이스로 COM에 노출됨을 나타냅니다.":"指示该接口作为仅使用初始绑定的iunknown派生的接口公开给COM。\r\n","Wird für Inlinearrays mit Zeichen fester Länge verwendet, die in einer Struktur dargestellt werden.Der in ":"用于结构中表示的固定长度字符的内联数组。in\r\n","-Typ geeignetes Format auf.":"- 键入适当的格式。\r\n","Marshallt Daten aus einem nicht verwalteten Speicherblock zu einem neu belegten, verwalteten Objekt des angegebenen Typs.":"将非托管内存块中的数据封送到指定类型的重新分配的托管对象中。\r\n","Der Delegat, der aus der Aufrufliste entfernt wurde.":"从调用堆栈中删除的委托。\r\n","여기에 사용된 단어 flags는 INVOKEKIND 열거형에 정의된 하나 이상의 호출 플래그를 나타냅니다. ":"此处使用的标志一词是指在 INVOKEKIND 枚举中定义的一个或多个调用标志。\r\n",".В противном случае допустимый разделитель групп определяется свойством ":".否则，有效的组分隔符由属性决定\r\n","Berechnet die konjugierte Zahl einer komplexen Zahl und gibt das Ergebnis zurück.":"计算复数的共轭并返回结果。\r\n","지정된 16비트 부호 없는 정수의 값을 해당하는 64비트 부호 없는 정수로 변환합니다.":"将指定的 16 位无符号整数的值转换为等效的 64 位无符号整数。\r\n","Enthält Flags, die Informationen zu Vererbung, Vererbungsweitergabe und Überwachungsbedingungen für den neuen ACE angeben.":"包含指定有关新 ACE 的继承、继承传播和监视条件的信息的标志。\r\n","Дескриптор типа, определяющий метод конструктора класса, который нужно выполнить. ":"指定要执行的类构造函数方法的类型描述符。\r\n","사용자 지정 데이터를 가져올 변수의 인덱스입니다. ":"从中获取自定义数据的变量的索引。\r\n","  является открытым универсальным типом.":"  是一个开放的通用类型。\r\n","Показывает указатель IUnknown.":"显示 IUnknown 指针。\r\n","이 바인딩 작업에서 사용되는 바인딩 컨텍스트 개체의 IBindCtx 인터페이스에 대한 참조입니다. ":"对此绑定操作使用的绑定上下文对象的 IBindCtx 接口的引用。\r\n","Возвращаемое 8-разрядное знаковое целое число. ":"返回的 8 位有符号整数。\r\n","Возвращает значение, определяющее, действительно ли 64-разрядное целое число без знака и значение ":"返回一个值，该值指示无符号 64 位整数是否有效以及该值\r\n","를 사용하여 해제해야 합니다.":"您必须通过使用将其关闭。\r\n","Записывает тип значения в память в указанном расположении.":"将值类型写入指定位置的内存。\r\n","Предоставляет набор методов и свойств, которые можно использовать для точного измерения затраченного времени.Просмотреть исходный код .NET Framework для этого типа можно на портале Reference Source.":"提供一组可用于准确测量经过时间的方法和属性。您可以在参考源门户中查看此类型的 .NET Framework 源代码。\r\n",", como se muestra en la tabla siguiente.ValorCondiciónMenor que cero":", como se muestra en la tabla siguiente.ValorCondiciónMenor que cero\r\n","Gibt den Hyperbelkosinus des angegebenen Winkels zurück.":"返回指定角度的双曲余弦值。\r\n","Erstellt einen Wrapper für Objekte, die der Marshaller als VT_CY marshallen soll.":"为编组器应编组为 VT_CY 的对象创建包装器。\r\n","Функция возвращает объект, являющийся источником события.":"该函数返回一个作为事件源的对象。\r\n","두 개의 8비트 부호 없는 정수 중 더 작은 숫자를 반환합니다.":"返回两个 8 位无符号整数中较小的一个。\r\n","Распределения параметра ":"参数分布\r\n",", der abgerufen oder festgelegt werden soll.":"获取或设置。\r\n","Fordert an, dass das Objekt nur eine Änderungsbenachrichtigung oder Zwischenspeicheraktualisierung durchführt, bevor die Verbindung beendet wird.":"请求对象在终止连接之前仅执行一次更改通知或缓存更新。\r\n",", переданного конструктору ":"传递给构造函数\r\n","Ein Objekt, das den Wert des ":"具有以下值的对象\r\n","서로 다른 두 숫자 중간에 있는 ":"在两个不同的数字之间\r\n","이 환경에 대해 정의된 줄 바꿈 문자열을 가져옵니다.":"获取为此环境定义的换行符字符串。\r\n"," weist kein von ":" 显示没有\r\n","Ein Objekt, das als steuernde IUnknown fungiert. ":"充当控制 IUnknown 的对象。\r\n","컴퓨터가 마지막으로 시작된 이후 경과된 시간(밀리초)을 포함하는 부호 있는 32비트 정수입니다. ":"一个带符号的 32 位整数，包含自上次启动计算机以来的毫秒数。\r\n","Значение HRESULT ошибки.":"错误的 HRESULT 值。\r\n","저장소 개체에 대한 클래스 식별자를 나타냅니다.":"表示存储对象的类标识符。\r\n"," меньше нуля.-или- Сумма значений ":" 小于零。- 或 - 值的总和\r\n"," меньше нуля или больше длины данного экземпляра.-или- При увеличении значения данного экземпляра будет превышено значение ":" 小于零或大于此实例的长度。- 或 - 增加此实例的值将超过该值\r\n","Verbindet ein verwaltetes Objekt mit dem angegebenen COM-Objekt.":"将托管对象与指定的 COM 对象相关联。\r\n","형식 라이브러리에 해당하는 플래그를 정의합니다.":"定义与类型库对应的标志。\r\n","임시 파일의 전체 경로입니다.":"临时文件的完整路径。\r\n"," со строкой сообщения, для которой задана строка ":" 消息字符串给定字符串\r\n","받는 프로세스에서 전송 중인 데이터에 액세스하는 데 사용할 수 있는 핸들, 문자열 또는 인터페이스 포인터를 나타냅니다.":"表示接收进程可用于访问正在传输的数据的句柄、字符串或接口指针。\r\n","Steuert das Marshallingverhalten der Signatur eines Delegaten, die als nicht verwalteter Funktionszeiger an nicht verwalteten Code bzw. aus nicht verwaltetem Code übergeben wird.Diese Klasse kann nicht vererbt werden.":"控制作为非托管函数指针传入和传出非托管代码的委托签名的封送处理行为。不能继承此类。\r\n","При возвращении данного метода содержит ссылку на относительный моникер.Этот параметр передается без инициализации.":"当此方法返回时，包含对相对名字对象的引用。此参数无需初始化即可传递。\r\n",", копирует в него заданное число знаков из неуправляемой строки ANSI и преобразует каждый знак ANSI в Юникод.":"，将指定数量的字符从非托管 ANSI 字符串复制到其中，并将每个 ANSI 字符转换为 Unicode。\r\n","Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное строковое представление в указанной системе счисления.":"将指定的 32 位带符号整数的值转换为其在指定基数中的等效字符串表示形式。\r\n",", или значение null, если путь ":"，如果路径为 null\r\n","Освобождает структуру VARDESC, ранее возвращенную методом ":"释放方法先前返回的 VARDESC 结构\r\n","의 자연(기준 e) 로그입니다.":"의자연(기준 e) 로그입니다。\r\n","Die Revisionsebene der aktuellen ":"当前的修订级别\r\n","스택 추적 정보가 포함된 문자열입니다.이 값은 ":"包含堆栈跟踪信息的字符串。此值为\r\n","Атрибуты IDL описанного типа.":"所描述类型的 IDL 属性。\r\n","Представляет указатель на структуру ":"表示指向结构的指针\r\n","Массив 8-разрядных целых чисел без знака, эквивалентный ":"一个 8 位无符号整数数组，相当于\r\n","-Klasse, die auf den Wert der ":"-Klasse, die auf den Wert der\r\n","Die Adresse im nicht verwalteten Speicher, an der gelesen werden soll.":"要读取的非托管内存中的地址。\r\n"," 메서드 오버로드는 ":" 方法重载为 \r\n",", проверяя их равенство.":"，检查它们是否相等。\r\n","를 곱한 크기가 사용 가능한 주소 공간보다 큽니다.":"大小乘以大于可用地址空间。\r\n","이 모니커와 다른 모니커가 공유하는 공통 접두사를 사용하여 새 모니커를 만듭니다.":"使用此名字对象和其他名字对象共享的公共前缀创建新名字对象。\r\n","-Objekt oder ein Typ ist, der die implizite Konvertierung in einen ":"接受隐式转换为 a 的对象或类型\r\n",", то есть число, которое остается после отбрасывания всех цифр дробной части, или одно из значений, перечисленных в следующей таблице. ":"，也就是舍去所有小数位后剩下的数，或者下表所列的数值之一。\r\n","Eine 32-Bit-Ganzzahl x mit Vorzeichen im Bereich 0 ≤ x ≤":"0 ≤ x ≤ 范围内的 32 位有符号整数 x\r\n","Diese Methode gibt ein Object zurück, das angibt, wo die abgerufenen Daten abzulegen sind.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回一个对象，指定将检索到的数据放在哪里。此参数未初始化传递。\r\n",".-или- При увеличении значения данного экземпляра будет превышено значение ":".- 或 - 增加此实例的值将超过该值\r\n","Возвращает или задает часть фрагмента URI.":"获取或设置 URI 的片段部分。\r\n","Enthält den Rückgabetyp der Funktion.":"包含函数的返回类型。\r\n","진입점을 포함하는 DLL 파일의 이름입니다.":"包含入口点的DLL文件的名称。\r\n","에서 반환할 문자열의 수입니다. ":"要从 返回的字符串数。\r\n","지정한 형식을 serialize 또는 deserialize할 때 ":"序列化或反序列化指定类型时\r\n",", защищающий объект от сборщика мусора.Этот дескриптор ":"一个保护对象不受垃圾收集器影响的对象。此句柄\r\n","받는 프로세스가 ReleaseStgMedium 함수를 호출할 때 보내는 프로세스에서 저장소를 해제하는 방법을 제어할 수 있도록 하는 인터페이스 인스턴스에 대한 포인터를 나타냅니다.":"表示指向接口实例的指针，该接口实例允许发送进程在接收进程调用 ReleaseStgMedium 函数时控制如何释放存储。\r\n","Возвращает указанное значение 32-битового целого числа со знаком в виде массива байтов.":"以字节数组的形式返回指定的 32 位有符号整数值。\r\n","Konvertiert die angegebene Zeichenfolgendarstellung eines logischen Werts in seine boolesche Entsprechung.":"将逻辑值的指定字符串表示形式转换为其等效的布尔值。\r\n","-Instanz die gleiche .NET Framework-Version wie eine angegebene ":"实例与指定版本相同的 .NET Framework 版本\r\n","지정된 10진수 값을 해당하는 16비트 부호 있는 정수로 변환합니다.":"将指定的十进制值转换为等效的 16 位带符号整数。\r\n","Der Typ des zurückzugebenden Objekts. ":"要返回的对象的类型。\r\n","에 잘못된 후행 문자가 들어 있다는 메시지가 표시됩니다.":"显示一条包含无效尾随字符的消息。\r\n","Gibt einen VARIANT-far-Zeiger an.":"指定一个 VARIANT 远指针。\r\n","ID des Members, dessen Name bzw. Namen zurückgegeben werden sollen. ":"要返回其名称的成员的 ID。\r\n","사용자 지정 데이터를 가져옵니다.":"导入自定义数据。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in einen entsprechenden booleschen Wert.":"将指定的 32 位带符号整数的值转换为等效的布尔值。\r\n","Der Wert, der in einen Gleitkommawert mit einfacher Genauigkeit konvertiert werden soll.":"要转换为单精度浮点值的值。\r\n","할당된 블록의 새 크기입니다.이것은 포인터가 아니라 요청하는 바이트 수로, 형식 ":"分配块的新大小。这是请求的字节数，而不是指针，格式为\r\n","Der Werttyp, für den Speicher belegt werden soll.":"要为其分配内存的值的类型。\r\n","Значение из пары ключ/значение.":"来自键/值对的值。\r\n","문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 해당하는 유니코드 문자로 변환합니다.":"使用特定于区域性的格式设置信息，将指定对象的值转换为等效的 Unicode 字符。\r\n","1과 같은 실수와 0과 같은 허수를 포함하는 새 ":"包含实数（如 1）和虚数（如 0）的新数。\r\n","Die zulässige Länge eines opaken Daten-BLOBs.":"不透明数据 blob 的允许长度。\r\n","요소에 대한 정보를 포함합니다.":"包含有关元素的信息。\r\n"," 매개 변수가 0보다 작은 경우":" 如果参数小于0\r\n","Der Index der Variablen, für die die benutzerdefinierten Daten abgerufen werden. ":"为其检索自定义数据的变量的索引。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.":"使用指定的区域性特定格式设置信息，将指定的 64 位带符号整数的值转换为其等效的字符串表示形式。\r\n","Gibt den angegebenen Gleitkommawert mit doppelter Genauigkeit als Bytearray zurück.":"Gibt den angegebenen Gleitkommawert mit doppelter Genauigkeit als Bytearray zurück。\r\n","에 열거된 문자열의 실제 수에 대한 참조를 포함합니다. ":"包含对 中枚举的实际字符串数的引用。\r\n","의 최대 공약수입니다.":"의최대공약수입니다。\r\n","Функция, отображаемая пользователю как связываемая.":"向用户显示为可绑定的函数。\r\n","VT_VARIANT | VT_BYREF 형식의 데이터를 관리 코드에서 비관리 코드로 마샬링합니다.이 클래스는 상속될 수 없습니다.":"VT_变体 |将 VT_BYREF 类型的数据从托管代码编组到非托管代码。不能继承此类。\r\n","Konvertiert den Wert der aktuellen komplexen Zahl unter Verwendung der angegebenen kulturabhängigen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung in kartesischer Form.":"使用指定的区域性特定格式设置信息，将当前复数的值转换为其等效的笛卡尔形式字符串表示形式。\r\n","Преобразует числовое значение каждого элемента заданного подмассива байтов в эквивалентное ему шестнадцатеричное строковое представление.":"将指定字节子数组的每个元素的数值转换为其等效的十六进制字符串表示形式。\r\n","생성자의 ID이거나, 없으면 ":"构造函数的 ID，或者如果不存在\r\n","들어오는 SAFEARRAY의 순위가 관리되는 시그니처에서 지정된 순위와 일치하지 않을 경우 발생한 예외입니다.":"当传入 SAFEARRAY 的等级与托管签名中指定的等级不匹配时引发异常。\r\n","Предоставляет базовый класс для универсальной коллекции, доступной только для чтения.":"为只读泛型集合提供基类。\r\n","Добавляет строковое представление указанного 32-разрядного целого числа без знака к данному экземпляру.":"将指定的 32 位无符号整数的字符串表示形式添加到此实例。\r\n","Definiert eine implizite Konvertierung einer 32-Bit-Ganzzahl mit Vorzeichen in eine komplexe Zahl.":"定义 32 位带符号整数到复数的隐式转换。\r\n","Ruft die Instanz von ":"获取实例\r\n","이 구조에서 설명하는 인터페이스에 대해 구현된 인터페이스의 수를 나타냅니다.":"指示为此结构描述的接口实现的接口数。\r\n","Предоставляет управляемое определение интерфейса IEnumFORMATETC.":"为 IEnumFORMATETC 接口提供托管定义。\r\n","Второй путь для объединения. ":"第二种加入方式。\r\n","Элемент, имеющий указанный ключ в доступном только для чтения словаре.":"在只读字典中具有指定键的元素。\r\n"," Schnittstelle nicht. ":" 界面没有。\r\n","와 같으면 ":"等于\r\n","의 인덱스를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"包含 的索引。此参数未初始化传递。\r\n","Die Identität der Klasse von Objekten, für die der entfernte ACE gilt.":"远程 ACE 适用的对象类的标识。\r\n"," не содержит сведений о расширении, ":" 不包含有关扩展的信息，\r\n","Комплексное число.":"复数。\r\n","이 매개 변수는 반환될 때, 이 연결점이 관리하는 송신 인터페이스의 IID를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此参数返回时，它包含此连接点管理的传出接口的 IID。此参数未初始化传递。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende Dezimalzahl.":"将指定的 64 位带符号整数的值转换为等效的十进制数。\r\n"," erkannt wird.":" 被认可。\r\n","Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl mit Vorzeichen kleiner als ein oder gleich einem ":"返回一个值，该值指示 64 位有符号整数是否小于或等于 1\r\n","특정 인터페이스 ID에 대한 인터페이스는 사용할 수 없습니다.이 경우 반환되는 인터페이스는 null입니다.E_NOINTERFACE가 IUnknown::QueryInterface의 호출자에게 반환됩니다.":"特定接口Id的接口不是available.In 这种情况下，返回的接口为null。E_NOINTERFACE返回给iunknown::QueryInterface的调用者。\r\n","증가시킬 값입니다.":"要增加的值。\r\n","-Schnittstelle dar.":"界面。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 해당하는 부울 값으로 변환합니다.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为等效的布尔值。\r\n","Der Namespace des Vertrags. ":"合约的命名空间。\r\n","Указывает количество реализованных интерфейсов в интерфейсе, описанном структурой.":"指定结构描述的接口中实现的接口数。\r\n","서비스의 IP 포트 번호입니다. ":"服务的 IP 端口号。\r\n","-Objekt zugeordnete Objekt ein Containerobjekt ist, andernfalls false.":"-Object关联对象是容器对象，否则为false。\r\n","Initialisiert eine neue Instanz der ComSourceInterfacesAttribute-Klasse mit den Typen, die als Quellschnittstellen verwendet werden sollen.":"使用要用作源接口的类型初始化 ComSourceInterfacesAttribute 类的新实例。\r\n","래핑하여 VT_CY 형식으로 마샬링할 Decimal을 포함하는 개체를 사용하여 ":"包装并使用包含十进制的对象将其封送到VT_CY格式 \r\n","Возвращает размер неуправляемого типа в байтах.":"以字节为单位返回非托管类型的大小。\r\n","Возвращает значение, определяющее, действительно ли 64-разрядное целое число со знаком и значение ":"返回一个值，该值指示一个带符号的 64 位整数和值是否有效\r\n","Die zweite von zwei zu vergleichenden 64-Bit-Ganzzahlen ohne Vorzeichen. ":"要比较的两个 64 位无符号整数中的第二个。\r\n"," = 0 ist, wird ":" = 0 变成\r\n","Показывает целое число long.":"显示一个整数 long。\r\n","Der ganzzahlige Teil von ":"的整数部分\r\n","Ruft die Zugriffsmaske für dieses ":"获取此访问掩码\r\n","Der Fragmentteil des URIs.Der Fragmentbezeichner (\"#\") wird am Anfang des Fragments hinzugefügt.":"URI 的片段部分。片段标识符（“#”）被添加到片段的开头。\r\n","Использует моникер для привязки к определяемому объекту.":"使用名字对象绑定到正在定义的对象。\r\n","Сведения о каталоге для ":"目录信息\r\n","Адрес освобождаемой памяти. ":"释放内存的地址。\r\n","Имя, которое требуется найти.Это параметр In или Out.":"要查找的名称。这是 In 或 Out 参数。\r\n","Ruft den Namen des Typs ab, der durch ein ITypeInfo-Objekt dargestellt wird.":"获取由 ITypeInfo 对象表示的类型的名称。\r\n","Konvertiert den Wert der angegebenen Dezimalzahl in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.":"将指定十进制数的值转换为等效的 32 位无符号整数。\r\n"," как допустимые сериализуемые коллекции.":" как допустимые сериализуемые коллекции。\r\n","Die Anzahl der Werttypen, die aus dem Eingabearray gelesen und in das Ausgabearray geschrieben werden sollen.":"从输入数组读取并写入输出数组的值类型的数量。\r\n","Als einzelne bindbare Eigenschaften zugeordnet.":"映射为单独的可绑定属性。\r\n","-Objekt gleich dem aktuellen ":"- 对象等于当前对象\r\n","데이터가 복사될 대상 개체입니다. ":"数据将复制到的对象。\r\n","Возвращает хэш-код этого объекта.":"返回此对象的哈希码。\r\n"," ist eine Zeichenfolge der Länge 0 (null), besteht nur aus Leerraum oder enthält mindestens eines der in ":" 是一个零长度的字符串，仅由空格组成，或者至少包含一个 in\r\n","Potenziert eine angegebene Zahl mit dem angegebenen Exponenten.":"将指定的数字提高到指定的指数次方。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的 16 位带符号整数。\r\n","Ein Zeiger auf die IErrorInfo-Schnittstelle, die weitere Informationen über den Fehler bereitstellt.Sie können IntPtr(0) angeben, um die aktuelle IErrorInfo-Schnittstelle zu verwenden, oder Sie können IntPtr(-1) angeben, um die aktuelle IErrorInfo-Schnittstelle zu ignorieren und die Ausnahme direkt aus dem Fehlercode zu erstellen.":"指向提供有关错误的更多信息的 IErrorInfo 接口的指针。您可以指定 IntPtr(0) 以使用当前 IErrorInfo 接口，或者您可以指定 IntPtr(-1) 以使用当前 IErrorInfo 接口忽略并直接创建异常错误代码。\r\n","배열의 형식입니다. ":"数组的类型。\r\n","Возвращает инкапсулированный объект, который должен быть маршалирован как тип VT_CY.":"返回要作为 VT_CY 类型封送的封装对象。\r\n","-Eigenschaft auf ByValArray festgelegt wird, muss das ":"属性设置为 ByValArray，它必须\r\n","Позиция в данном экземпляре, с которой начинается подстрока. ":"此实例中子字符串开始的位置。\r\n","-Eigenschaft Werte enthalten, die gültige Objekttypen angeben, oder legt diese fest.":"属性包含或设置指示有效对象类型的值。\r\n","Definiert eine implizite Konvertierung einer 16-Bit-Ganzzahl ohne Vorzeichen in einen ":"定义 16 位无符号整数到\r\n","-Wert größer als ein anderer ":"- 价值大于另一个\r\n"," 데이터 형식 또는 ":" 数据类型或\r\n","Инкапсулирует указанный COM-объект в объекте заданного типа.":"将指定的 COM 对象封装在指定类型的对象中。\r\n","부호 없는 64비트 정수와 ":"64 位无符号整数\r\n","Der Aufrufer entleert den Stapel.Dies aktiviert Aufruffunktionen mit varargs, wodurch die Verwendung für Methoden ermöglicht wird, die eine variable Anzahl von Parametern akzeptieren, beispielsweise Printf.":"Der Aufrufer entleert den Stapel.Dies activiert Aufruffunktionen mit varargs，wodurch die Verwendung für Methoden ermöglicht wird，die eine variable\r\n","Сведения об авторских правах. ":"有关版权的信息。\r\n","Выделяет дескриптор ":"分配句柄\r\n","Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in einen entsprechenden booleschen Wert.":"将指定的 16 位无符号整数的值转换为等效的布尔值。\r\n","Valor de un identificador no válido (normalmente 0 ó -1).":"Valor de un identificador no valido（通常为 0 或 -1）。\r\n","Указатель на повторно выделенную память.Эта память должна быть освобождена при помощи метода ":"指向重新分配内存的指针。必须使用以下方法释放此内存\r\n",", der eine nicht zur Basis 10 gehörende Zahl ohne Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.- oder - ":"，表示一个无符号的非 10 进制数，以负号为前缀。- 或-\r\n"," 값보다 작은지를 나타내는 값을 반환합니다.":" 返回一个值，指示它是否小于一个值。\r\n","Преобразует значение заданного 64-битового целого числа без знака в эквивалентное число с плавающей запятой одиночной точности.":"将指定的 64 位无符号整数的值转换为其等效的单精度浮点数。\r\n","Новая емкость этого экземпляра.":"此实例的新容量。\r\n","Возвращает представление текущего исключения ":"返回当前异常的表示\r\n","Der Typ des untergeordneten Objekts, das die Regel erben kann.":"可以继承规则的子对象的类型。\r\n","관리되는 개체의 데이터를 관리되지 않는 메모리 블록으로 마샬링합니다.":"将托管对象中的数据编组到非托管内存块中。\r\n"," 제품입니다.":" 产品。\r\n"," 매개 변수 중 더 작은 값입니다.":" 매개변수중더작은값입니다。\r\n","Адрес первого символа в неуправляемой строке.":"非托管字符串中第一个字符的地址。\r\n","Объект, для которого нужно извлечь хэш-код. ":"要为其提取哈希码的对象。\r\n","오류가 있는 특정 HRESULT 값을 사용하여 예외를 throw합니다.":"引发具有特定错误 HRESULT 值的异常。\r\n",", auf die nächste 16-Bit-Ganzzahl ohne Vorzeichen gerundet.Wenn ":", 四舍五入到最接近的 16 位无符号整数。如果\r\n","Gibt eine angegebene komplexe Zahl potenziert mit einem als Gleitkommazahl mit doppelter Genauigkeit angegebenen Exponenten zurück.":"返回指定复数的指定为双精度浮点数的幂。\r\n","변환이 필요한 핸들을 나타내는 ":"指示需要转换的句柄 \r\n","Bietet die Möglichkeit, aus nicht verwaltetem Speicher auf ein verwaltetes Objekt zuzugreifen.":"提供从非托管存储访问托管对象的能力。\r\n","Пропускает заданное число элементов в последовательности перечисления.":"跳过枚举序列中指定数量的元素。\r\n"," in einen Speicherblock, der von der nicht verwalteten Speicherbelegung für COM-Aufgaben reserviert wurde.":" 到由 COM 任务的非托管内存分配保留的内存块中。\r\n","Во время получения символа ":"收到符号时\r\n"," становится равным ":" 变得平等\r\n"," gleich null sind; andernfalls false.":" 等于零；否则为假。\r\n","Второе из двух сравниваемых чисел двойной точности с плавающей запятой. ":"正在比较的两个双精度浮点数中的第二个。\r\n","지정된 8비트 부호 없는 정수 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.":"将指定的 8 位无符号整数值转换为等效的单精度浮点数。\r\n"," sind nicht vom gleichen Typ und können keinen Vergleich miteinander ausführen. ":" 不属于同一类型，不能相互比较。\r\n","Возвращает значение, присваиваемое параметру по умолчанию.":"返回分配给默认参数的值。\r\n"," = NaNNaN(모든 값)":" = NaNNaN（任意值）\r\n",", задает свойство затраченного времени равным нулю и запускает измерение затраченного времени.":", 将经过时间属性设置为零并开始经过时间测量。\r\n",", используя объект ":", 使用对象\r\n","지정한 형식의 새 ":"指定类型的新 \r\n","Ruft den Namespace des Datenvertrags für den Typ ab oder legt ihn fest.":"获取或设置类型的数据协定的命名空间。\r\n","지정된 단정밀도 부동 소수점 숫자 값을 해당하는 문자열 표현으로 변환합니다.":"将指定的单精度浮点数的值转换为其等效的字符串表示形式。\r\n","Ruft die Version dieses ":"获取此版本\r\n","Входной массив 8-битовых целых чисел без знака. ":"8 位无符号整数的输入数组。\r\n","Der Typ des zu aggregierenden verwalteten Objekts. ":"要聚合的托管对象的类型。\r\n","Строка, содержащая имя компании.":"包含公司名称的字符串。\r\n","Значение, которое необходимо разделить.":"要划分的值。\r\n","Gibt die Größe eines nicht verwalteten Typs in Bytes zurück.":"返回非托管类型的大小（以字节为单位）。\r\n","Возвращает логическое значение, преобразованное из одного байта с указанной позицией в массиве байтов.":"返回从字节数组中指定位置的单个字节转换而来的布尔值。\r\n","Das Ergebnis des ":"的结果\r\n"," относятся к разным типам и не могут сравниваться друг с другом. ":" 类型不同，不能相互比较。\r\n","Definiert eine implizite Konvertierung einer 16-Bit-Ganzzahl ohne Vorzeichen in eine komplexe Zahl.":"定义 16 位无符号整数到复数的隐式转换。\r\n","Преобразует заданное логическое значение в эквивалентное 32-битовое целое число без знака.":"将指定的布尔值转换为其等效的 32 位无符号整数。\r\n","Ein Wert, der angibt, ob der ACE Zugriff gewährt, Zugriff verweigert, Systemüberwachungen auslöst oder einen Systemalarm auslöst.":"一个值，指示 ACE 是授予访问权限、拒绝访问权限、触发系统监视器还是触发系统警报。\r\n","Новое значение счетчика ссылок оболочки среды RCW, связанной с параметром ":"与参数关联的 RCW 环境包装器的新引用计数值\r\n"," angibt, wie in der folgenden Tabelle veranschaulicht.RückgabewertBeschreibungKleiner als 0 (null)Die aktuelle Instanz ist kleiner als ":" 如下表所示。返回值说明小于零当前实例小于\r\n"," с заданным идентификатором GUID.":" 使用给定的 GUID。\r\n","true, si el miembro es necesario; en caso contrario, false.":"是的，si el miembro es necesario；相反，假的。\r\n","-Parameters kann nicht in eine ":"- 参数不能在\r\n","이 형식이 브라우저에 나타나면 안 됩니다.":"此表单不应出现在浏览器中。\r\n","Der Zugriffsrechtetyp für die Zugriffsregel.":"访问规则的访问权限类型。\r\n"," 개체의 2의 거듭제곱인지를 나타냅니다.":" 개체의 2의 거듭제곱인지를 나타냅니다。\r\n"," меньше нуля.– или –":" 小于零。– 或 –\r\n","Значение 64-битового знакового целого числа эквивалентно ":"Значение 64-битового знакового целого числа эквивалентно\r\n","Новое значение элемента по указанному индексу.Для ссылочных типов допускается значение null.":"指定索引处元素的新值。对于引用类型，允许为 null。\r\n","Число элементов, пропускаемых при перечислении. ":"枚举中要跳过的元素数。\r\n","Тип возвращаемого массива. ":"返回数组的类型。\r\n","Описание, связанное с параметром ":"与参数关联的描述\r\n","현재 컴퓨터의 프로세서 수를 가져옵니다.":"获取当前计算机的处理器数量。\r\n","-Objekt zugeordnete Objekt ein Containerobjekt ist.":"-Object关联对象是容器对象。\r\n"," с помощью зависимого от времени начального значения по умолчанию.":" 具有随时间变化的默认初始值。\r\n","를 호출할 때 데이터 개체에서 데이터를 보내지 않도록 요청합니다. ":"当您调用 时，您请求数据对象不发送数据。\r\n","При возвращении данного метода содержит ссылку на идентификатор CLSID.Этот параметр передается без инициализации.":"当此方法返回时，包含对 CLSID 的引用。此参数无需初始化即可传递。\r\n","열거형 마커의 끝을 나타냅니다.":"指示枚举标记的结束。\r\n","지정된 문화권별 서식 정보를 사용하여 현재 복소수 값을 데카르트 형식의 해당하는 문자열 표현으로 변환합니다.":"使用指定的区域性特定格式设置信息，将当前复数值转换为其等效的笛卡尔格式字符串表示形式。\r\n","Die Basis des Rückgabewerts, die 2, 8, 10 oder 16 sein muss. ":"返回值的基数，必须为 2、8、10 或 16。\r\n"," 인터페이스를 구현하는 개체나 null입니다. ":" 实现接口的对象或 null。\r\n"," в соответствии с указанным экземпляром класса ":" 根据指定的类实例\r\n","데이터를 그리거나 가져올 때 개체의 원하는 데이터 또는 뷰 모양을 지정합니다.":"指定绘制或导入数据时对象的所需数据或视图外观。\r\n","설명서를 반환할 형식 설명의 인덱스입니다. ":"要为其返回文档的类型描述的索引。\r\n",", то этот метод возвращает значение ":", 然后这个方法返回值\r\n","Führt eine bitweise Or-Operation für zwei ":"对两个执行按位或操作\r\n","Bei erfolgreicher Rückgabe ist die tatsächliche Anzahl der in das Ziel geschriebenen Bytes enthalten. ":"如果成功，将包括写入目标的实际字节数。\r\n"," 매개 변수가 COM 형식이면 true이고, 그렇지 않으면 false입니다.":" 如果参数是 COM 类型，则为 true；否则为 false。\r\n","Ein von LHashValOfNameSys berechneter Hashwert für ":"由 LHashValOfNameSys 计算的哈希值\r\n","true, wenn das Handle geschlossen ist, andernfalls false.":"如果句柄已关闭，则为 true，否则为 false。\r\n","인터페이스 멤버를 식별하는 값입니다. ":"标识接口成员的值。\r\n","Первая строка эквивалентности типов.":"第一行类型等价。\r\n","Ein Typ, der einen Alias für einen anderen Typ darstellt.":"表示另一个类型的别名的类型。\r\n","Löst eine Ausnahme mit einem bestimmten HRESULT-Fehlerwert aus.":"引发具有特定 HRESULT 错误值的异常。\r\n","열거형 시퀀스에서 지정된 수의 항목을 검색합니다.":"从枚举序列中检索指定数量的项目。\r\n","-Klasse mit dem entsprechenden HRESULT für die angegebene Ausnahme.":"具有指定异常的适当 HRESULT 的类。\r\n",", содержащую атрибуты описания типа.":"包含类型声明属性的 。\r\n","Десятичное число x, такое что 0 ≤ x ≤":"满足 0 ≤ x ≤ 的十进制数 x\r\n"," со строкой сообщения, соответствующей строке системного сообщения и значением HRESULT, равным COR_E_DIRECTORYNOTFOUND.":" 具有与系统消息字符串匹配的消息字符串和 COR_E_DIRECTORYNOTFOUND 的 HRESULT 值。\r\n","Возвращает отображаемое состояние свойства или метода.":"获取属性或方法的显示状态。\r\n","비트 Or 연산의 결과입니다.":"按位或运算的结果。\r\n","가 -1보다 작거나 65,535보다 큰 경우 ":"小于 -1 或大于 65,535\r\n"," ist null.- oder - \"":" 为零。- 或 - ”\r\n","Среда хранения представляет собой компонент хранения, заданный указателем IStorage.Данные находятся в потоках и хранилищах, содержащихся в этом экземпляре IStorage.Если элемент ":"存储介质是由 IStorage 指针指定的存储组件。数据驻留在这个 IStorage 实例包含的流和存储中。如果元素\r\n","Eine Zahl, deren Logarithmus gesucht wird. ":"求其对数的数字。\r\n","При возвращении данного метода содержит ссылку на перечислитель параметров объекта.Этот параметр передается без инициализации.":"当此方法返回时，包含对对象参数枚举器的引用。此参数无需初始化即可传递。\r\n","Значение с плавающей точкой двойной точности.":"Значение с плавающей точкой двойной точности。\r\n","Освобождает строку BSTR с помощью функции COM SysFreeString.":"使用 COM SysFreeString 函数释放 BSTR 字符串。\r\n","Stellt eine beliebig große ganze Zahl mit Vorzeichen dar.":"Stellt eine beliebig große ganze Zahl mit Vorzeichen dar。\r\n"," bekannter Typen zurückgibt. ":" 已知类型返回。\r\n","Die Methode gibt einen Verweis auf die tatsächliche Anzahl der in ":"该方法返回对实际数量的引用\r\n","Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob dieses Handle ungültig ist.":"在派生类中重写时，获取一个值，该值指示此句柄是否无效。\r\n",", кроме последней точки (.) и всех следующих за ней символов.":", 最后一个点 (.) 及其后的所有字符除外。\r\n","При попытке одновременной инициализации экземпляра ":"尝试同时初始化一个实例时\r\n","Строка, в которой каждая переменная среды замещена ее значением.":"一个字符串，其中每个环境变量都被其值替换。\r\n","-Objekt mit des angegebenen Rückrufs.":"- 具有指定回调的对象。\r\n","반환될 설명서가 있는 형식 설명의 인덱스입니다. ":"要返回的文档所在的类型描述的索引。\r\n","Значение, на которое будет ссылаться ":"参考价值\r\n","Значение, определяющее точку, в которой должен быть выполнен сбор.Оно должно быть равно максимальному числу доступных дескрипторов.":"指定应执行收集的点的值。它必须等于可用句柄的最大数量。\r\n","Die zweite von zwei zu vergleichenden 32-Bit-Ganzzahlen ohne Vorzeichen. ":"要比较的两个 32 位无符号整数中的第二个。\r\n","할당하지 않고 형식 플래그를 반환합니다.이 메서드는 TYPEATTR(형식 특성)를 증가시키지 않고 형식 플래그를 확장하는 DWORD 형식 플래그를 반환합니다.":"Returns the type flags without assignment. 此方法返回一个 DWORD 类型标志，它扩展了类型标志而不增加类型属性 (TYPEATTR)。\r\n","Bietet die Möglichkeit, Zugriff auf systemeigene Objekte ohne direkte Manipulation von Zugriffssteuerungslisten (Access Control Lists, ACLs) zu steuern.Systemeigene Objekttypen werden von der ":"提供无需直接操作访问控制列表 (ACL) 即可控制对本机对象的访问的能力。本机对象类型由\r\n","Значение, для которого необходимо выполнить побитовый сдвиг.":"要对其执行位移的值。\r\n"," enthält mindestens eines der in ":" 包含至少一个在\r\n","가 DISPATCH_PROPERTYPUT 또는 DISPATCH_PROPERTYPUTREF를 지정하는 경우에는 ":"如果指定 DISPATCH_PROPERTYPUT 或 DISPATCH_PROPERTYPUTREF\r\n","Gibt den angegebenen booleschen Wert als Bytearray zurück.":"Gibt den angegebenen booleschen Wert als Bytearray zurück。\r\n","이 메서드는 반환될 때 현재 모니커와 ":"当此方法返回时，当前名字对象和\r\n","64비트 부호 있는 정수 값을 지정된 기수의 해당하는 문자열 표현으로 변환합니다.":"将 64 位有符号整数值转换为其在指定基数中的等效字符串表示形式。\r\n","Возвращает массив, содержащий символы, которые не разрешены в именах путей.":"返回包含路径名中不允许的字符的数组。\r\n","Die erste von zwei zu vergleichenden 32-Bit-Ganzzahlen ohne Vorzeichen. ":"要比较的两个 32 位无符号整数中的第一个。\r\n",", но меньше или равно значению ":", 但小于或等于该值\r\n","Konvertiert eine Textzeichenfolge in eine URL-codierte Zeichenfolge.":"将文本字符串转换为 URL 编码的字符串。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.":"将指定的 64 位无符号整数的值转换为等效的 64 位有符号整数。\r\n","-Wert um eine angegebene Anzahl von Bits nach links.":"由指定位数留下的值。\r\n","설명서 문자열, 전체 도움말 파일 이름과 경로, 지정된 형식 설명에 대한 도움말 항목의 컨텍스트 ID를 검색합니다.":"检索文档字符串、完整的帮助文件名和路径，以及指定格式描述的帮助主题的上下文 ID。\r\n","Ein Zeiger auf das erste Element eines C-Arrays.Beim Marshallen von verwaltetem zu nicht verwalteten Code wird die Länge des Arrays anhand der Länge des verwalteten Arrays bestimmt.Beim Marshallen von nicht verwaltetem in verwalteten Code wird die Länge des Arrays vom ":"指向 C 数组第一个元素的指针。从托管代码编组到非托管代码时，数组的长度由托管数组的长度确定。从非托管代码编组到托管代码时，数组的长度由以下确定这\r\n","[Поддерживается только в .NET Framework 4.5.1 и более поздних версиях] Преобразует делегат указанного типа в указатель на функцию, вызываемый из неуправляемого кода. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 将指定类型的委托转换为平台可调用函数指针。\r\n"," frei.":" 自由的。\r\n","Значение, которое необходимо преобразовать в значение 8-разрядного знакового числа.":"要转换为带符号的 8 位值的值。\r\n","Diese Methode gibt einen Verweis auf ein Handle für die implementierte Schnittstelle zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回对已实现接口句柄的引用。此参数未初始化传递。\r\n","지정된 배정밀도 부동 소수점 숫자 값을 해당하는 32비트 부호 있는 정수로 변환합니다.":"将指定的双精度浮点数的值转换为等效的 32 位带符号整数。\r\n","16-битное целое число со знаком, считанное из неуправляемой памяти с указанным смещением.":"从指定偏移量处的非托管内存中读取的 16 位有符号整数。\r\n","-Enumeration nicht ":"-枚举不\r\n","지정된 8비트 부호 있는 정수 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.":"将指定的 8 位带符号整数值转换为等效的双精度浮点数。\r\n","부호 있는 32비트 정수를 ":"32 位有符号整数\r\n","마샬링할 개체입니다. ":"要封送的对象。\r\n","관리되지 않는 메모리의 지정된 오프셋 위치에 프로세서의 기본 크기로 지정된 정수 값을 씁니다.":"将处理器本机大小的整数值写入指定偏移量处的非托管内存。\r\n","Определяет дескриптор для заданного ранее существующего дескриптора.":"Определяет 描述符 для заданного ранее существующего 描述符。\r\n","Значение true, если эта сборка была собрана как сборка с отложенным подписанием. В обратном случае — значение false.":"如果此程序集是作为延迟签名程序集构建的，则为真。否则，该值为假。\r\n","Das zu aggregierende -Objekt. ":"要聚合的对象。\r\n","Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.":"将指定 Unicode 字符的值转换为等效的 8 位无符号整数。\r\n","Подробно определяет способ реализации метода.":"详细说明该方法是如何实现的。\r\n"," besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9). ":" 不包含可选符号和数字序列（0 到 9）。\r\n","MACPASCAL(Macintosh Pascal) 호출 규칙을 메서드에 사용해야 함을 나타냅니다.":"指示该方法应使用 MACPASCAL (Macintosh Pascal) 调用约定。\r\n","지정된 16비트 부호 없는 정수의 값을 해당하는 32비트 부호 있는 정수로 변환합니다.":"将指定的 16 位无符号整数的值转换为等效的 32 位有符号整数。\r\n","두 개의 16비트 부호 없는 정수 중 더 큰 숫자를 반환합니다.":"返回两个 16 位无符号整数中较大的一个。\r\n"," 필드와 함께 사용하여 기본 요소 형식을 재정의할 수 있습니다.":"可以与字段一起使用以覆盖基本元素类型。\r\n",".Этот метод не принимает параметры ":".此方法不带参数\r\n","Записывает в неуправляемую память символ в виде 16-битного целого числа.":"将字符作为 16 位整数写入非托管内存。\r\n"," ist ein Werttyp.- oder - ":" 是一个值类型。- 或-\r\n","지정한 배정밀도 부동 소수점 숫자의 정수 부분을 계산합니다. ":"计算指定双精度浮点数的整数部分。\r\n","Gibt einen Wert zurück, der angibt, ob die Werte von zwei ":"返回一个值，表示两个值是否\r\n","-Parameter gültige Objekt-GUIDs enthalten.":"- 参数包含有效的对象 GUID。\r\n","취소할 ROT(실행 개체 테이블) 항목입니다. ":"要取消的运行对象表 (ROT) 条目。\r\n","Указывает, что поле следует интерпретировать как содержащее фиксированное число элементов указанного примитивного типа.Этот класс не наследуется.":"指定应将字段解释为包含固定数量的指定基本类型的元素。此类不被继承。\r\n","멤버가 속성인지 여부와 속성일 경우 종류를 지정하는 ":"指定成员是否为属性，如果是，则指定其种类。\r\n","Число двойной точности с плавающей запятой, задающее степень.":"指定幂的双精度浮点数。\r\n","Число.":"Число。\r\n","다시 할당된 메모리에 대한 포인터입니다.이 메모리는 ":"指向重新分配内存的指针。此内存是\r\n","Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное логическое значение.":"将指定的 32 位带符号整数的值转换为其等效的布尔值。\r\n","Ruft die Anzahl der erfassten Handles ab.":"获取捕获的句柄数。\r\n","Задает способ синхронизации доступа в нескольких потоках экземпляром ":"指定实例如何跨多个线程同步访问\r\n","연결점이 요구되고 있는 송신 인터페이스 IID에 대한 참조입니다. ":"对为其请求连接点的传出接口 IID 的引用。\r\n","-Parameters als reellen Teil und 0 als imaginären Teil enthält.":"- 参数为实部，0 为虚部。\r\n"," 끝에 추가된 ":" 添加到最后\r\n"," и присваивает ему значение свойства ":" и присваивает ему значение свойства\r\n","Управляемая строка, хранящая копию неуправляемой строки, если значение параметра ":"存储非托管字符串副本的托管字符串，如果参数值\r\n","소스 인터페이스의 메서드에 대한 디스패치 식별자입니다.":"源接口中方法的调度标识符。\r\n","Ein Domänenname im DNS-Format oder eine IP-Adresse. ":"DNS 格式的域名或 IP 地址。\r\n","Возвращает значение из пары \"ключ-значение\".":"从键/值对返回一个值。\r\n"," 개체를 나타내는 ":" 表示对象 \r\n","Нижний предел возвращаемого случайного числа (включительно). ":"返回随机数的下限（含）。\r\n","Gibt einen Wert zurück, der das Vorzeichen einer Gleitkommazahl mit einfacher Genauigkeit angibt.":"返回一个值，该值指示单精度浮点数的符号。\r\n","Угол θ, измеренный в радианах, такой что -π/2 ≤θ≤π/2 -или- значение ":"角度 θ，以弧度测量，使得 -π/2 ≤θ≤π/2 - 或 - 值\r\n","기수가 10이 아닌 부호 없는 숫자를 나타내는 ":"表示基数不是 10 的无符号数。\r\n"," angegeben wird, hat keinen verwendbaren Standardkonstruktor. ":" 指定没有可用的默认构造函数。\r\n","Die Zugriffsregel für den neuen ACE.":"新 ACE 的访问规则。\r\n"," 요소에 해당하는 8비트 부호 없는 정수를 반환합니다.":" 返回对应于元素的 8 位无符号整数。\r\n","Ein Name für den Collector.  Dieser Parameter ermöglicht Ihnen das Benennen von Collectors, die Typen von Handles separat verfolgen.":"收藏家的名字。此参数允许您命名单独跟踪句柄类型的收集器。\r\n","true, um Objektverweisdaten zu behalten; andernfalls false.Die Standardeinstellung ist false.":"是的，嗯 Objektverweisdaten zu behalten； andernfalls false. Die Standardeinstellung ist false.\r\n"," verknüpft ist und bewirkt, dass der Parameter als ein HRESULT in die Bibliothek mit den Exporttypen exportiert wird.":" 链接并导致参数作为 HRESULT 导出到导出类型库。\r\n","의 공통 접두사인 모니커를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"包含一个名字对象，它是 的公共前缀。此参数未初始化传递。\r\n","Угол, измеряемый в радианах. ":"以弧度测量的角度。\r\n","Предоставляет дополнительные сведения для настраиваемого модуля маршалинга.":"为自定义封送拆收器提供附加信息。\r\n","해제할 RCW입니다.":"要释放的 RCW。\r\n"," одним потоком.При внутреннем использовании блокировок методом инициализации (или конструктором по умолчанию, если метод инициализации отсутствует) возможны взаимоблокировки.Если при использовании конструктора ":" 由单个线程。如果锁由初始化方法在内部使用（或者如果没有初始化方法，则由默认构造函数使用），则可能会出现死锁。如果使用构造函数\r\n","Возвращает заданное 32-битовое целое число без знака; фактическое преобразование не производится.":"返回指定的 32 位无符号整数；没有执行实际的转换。\r\n",", вместо нее.Длина параметра ":", 取而代之的是参数长度\r\n","Строка, содержащая имя поддерживаемых языка и региональных параметров.":"包含受支持区域性名称的字符串。\r\n","의 몫입니다. ":"是份额\r\n","Entfernt alle Überwachungsregeln, die der angegebenen Überwachungsregel genau entsprechen, aus der SACL, die diesem ":"从该对应的SACL中移除所有与指定监控规则完全匹配的监控规则\r\n","지정된 문화권별 서식 지정 정보를 사용하여 현재 ":"使用指定的区域性特定格式信息来\r\n","Gibt an, dass für die Klasse keine Klassenschnittstelle generiert wird.Wenn keine Schnittstellen explizit implementiert werden, kann die Klasse nur Zugriff mit spätem Binden über die IDispatch-Schnittstelle bereitstellen.Dies ist die empfohlene Einstellung für ":"指定不会为该类生成类接口。如果没有显式实现接口，则该类只能通过 IDispatch 接口提供后期绑定访问。这是推荐的设置\r\n","Eine 4-Byte-Gleitkommazahl.":"一个 4 字节的浮点数。\r\n","Schränkt den Zugriff auf einen bestimmten Bereich von Bytes im Stream ein.":"限制对流中特定范围字节的访问。\r\n"," с позиции ":" 从位置\r\n","Базовый адрес в неуправляемой памяти, относительно которого выполняется чтение.":"要从中读取的非托管内存中的基地址。\r\n","Определяет описание функции.":"指定函数的描述。\r\n","Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob Objektverweisdaten beizubehalten sind.":"Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob Objektverweisdaten beizubehalten sind。\r\n","Возвращает меньшее из двух десятичных чисел.":"返回两个小数中较小的一个。\r\n","모니커 바인딩 작업을 하는 동안 사용된 매개 변수를 저장합니다.":"存储名字对象绑定操作期间使用的参数。\r\n","Указатель байта, передаваемый по ссылке, для получения указателя из объекта ":"通过引用传递字节指针以从对象获取指针\r\n","-Objekt.Sie müssen diesen Zeiger auf null festlegen, bevor diese Methode aufgerufen werden kann.":"对象。在调用此方法之前，必须将此指针设置为空。\r\n","라이브러리에 대한 모든 사용자 지정 데이터 항목을 가져옵니다.":"获取库的所有自定义数据项。\r\n",".Это стили составного числа.":".这些是合数样式。\r\n","Протокол доступа к Интернету. ":"互联网访问协议。\r\n","STATDATA 구조체의 관리되는 정의를 제공합니다.":"提供 STATDATA 结构的托管定义。\r\n","Число одинарной точности с плавающей запятой. ":"单精度浮点数。\r\n","비교할 두 개의 배정밀도 부동 소수점 수 중 두 번째 숫자입니다. ":"要比较的两个双精度浮点数中的第二个。\r\n","Типы, используемые в данном интерфейсе, полностью совместимы с автоматизацией, включая поддержку привязки VTBL.Установка двойного интерфейса задает и этот флаг, и ":"此接口中使用的类型与自动化完全兼容，包括对 VTBL 绑定的支持。设置双接口会同时设置此标志和\r\n","이 메서드는 반환될 때 ROT(실행 개체 테이블)에 대한 새 열거자를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含一个用于运行对象表 (ROT) 的新枚举器。此参数未初始化传递。\r\n","Steuert den Zugriff auf Objekte, ohne dass ACLs (Access Control Lists, Zugriffssteuerungslisten) dabei direkt bearbeitet werden.Diese Klasse ist die abstrakte Basisklasse für die ":"在不直接操作 ACL（访问控制列表）的情况下控制对对象的访问。此类是\r\n","Fügt der DACL (Discretionary Access Control List), die diesem ObjectSecurity`1-Objekt zugeordnet ist, die angegebene Zugriffsregel hinzu.":"将指定的访问规则添加到与此 ObjectSecurity`1 对象关联的自由访问控制列表 (DACL)。\r\n",", построенный при помощи заданного экземпляра ":", 使用给定实例构建\r\n","Добавляет строковое представление указанного 64-разрядного целого числа без знака к данному экземпляру.":"将指定的 64 位无符号整数的字符串表示形式添加到此实例。\r\n","에 해당하는 64비트 부호 없는 정수이거나, ":"是一个 64 位无符号整数，等价于\r\n","지정된 16비트 부호 있는 정수의 값을 해당하는 64비트 부호 없는 정수로 변환합니다.":"将指定的 16 位有符号整数的值转换为等效的 64 位无符号整数。\r\n","Хранит число ошибок, которое функция может возвратить в 16-разрядной системе.":"存储函数在 16 位系统上可以返回的错误数。\r\n","Rundet einen Gleitkommawert mit doppelter Genauigkeit auf eine angegebene Anzahl von Bruchziffern.":"将双精度浮点值舍入到指定的小数位数。\r\n","지정된 메시지를 사용하여 SafeArrayTypeMismatchException 클래스의 새 인스턴스를 초기화합니다.":"使用指定消息初始化 SafeArrayTypeMismatchException 类的新实例。\r\n"," на основе строки составного формата и ее аргументов. ":" 基于复合格式字符串及其参数。\r\n","핸들이 할당되면 true이고, 그렇지 않으면 false입니다.":"如果分配了句柄，则为true；否则为false。\r\n","Значение типа VARIANT, используемое для маршалинга управляемых форматируемых классов и типов значений.":"用于封送托管格式化类和值类型的 VARIANT 值。\r\n","Предоставляет управляемое определение интерфейса автоматизации компонентов ITypeInfo.":"提供 ITypeInfo 组件自动化接口的托管定义。\r\n"," имеет значение null или его формат несовместим со значением ":" 为空或其格式与该值不兼容\r\n","Копирует данные из указателя неуправляемой памяти в одномерный управляемый массив 16-битных целых чисел со знаком.":"将数据从非托管内存指针复制到 16 位带符号整数的一维托管数组。\r\n","-Klasse unter Verwendung der angegebenen Berechtigung.":"使用指定权限的类。\r\n","지정된 64비트 부호 있는 정수의 값을 해당하는 8비트 부호 없는 정수로 변환합니다.":"将指定的 64 位有符号整数的值转换为等效的 8 位无符号整数。\r\n","현재 문화권의 단어 비교 규칙을 사용하여 대/소문자를 구분하는 문자열을 비교하는 ":"使用当前区域性的单词比较规则比较区分大小写的字符串。\r\n","Округляемое число двойной точности с плавающей запятой. ":"要舍入的双精度浮点数。\r\n","-Parameterlayout ist weder sequenziell noch explizit.- oder - Der ":"- 参数布局既不是顺序的也不是显式的。 - 或 - 的\r\n","Возвращает остаток от деления одного указанного числа на другое указанное число.":"返回一个指定数除以另一个指定数后的余数。\r\n","Гарантирует, что ресурсы освобождены и выполнены другие операции очистки, когда сборщик мусора ":"确保在垃圾收集器执行时释放资源并执行其他清理操作\r\n","Gibt die Zeichenfolgendarstellung dieses ":"返回此的字符串表示形式\r\n","-Werts entsprechend den Angaben im ":"- 值根据中的信息\r\n","Десятичное число, эквивалентное ":"十进制当量\r\n","Возвращает случайное число с плавающей запятой, которое больше или равно 0,0 и меньше 1,0.":"返回大于或等于 0.0 且小于 1.0 的随机浮点数。\r\n","Entero de 64 bits con signo que se va a comparar.":"Entero de 64 bits con signo que se va a comparar。\r\n","Die Adresse des ":"的地址\r\n","열려는 파일의 절대 경로가 들어 있는 0으로 끝나는 문자열입니다. ":"一个以零结尾的字符串，包含要打开的文件的绝对路径。\r\n","Ссылка на интерфейс IBindCtx объекта контекстной привязки, используемого в процессе операции привязки. ":"对绑定操作期间使用的上下文绑定对象的 IBindCtx 接口的引用。\r\n","지정된 예외를 HRESULT로 변환합니다.":"将指定的异常转换为 HRESULT。\r\n","Cuando se aplica a un tipo de colección, habilita la especificación personalizada de los elementos de elemento de colección.Este atributo sólo se puede aplicar a los tipos que son reconocidos por ":"Cuando se aplica a un tipo de colección, habilita la especificación personalizada de los elementos de elemento de colección.Este atributo sólo se puede applicar a los tipos que son reconocidos por\r\n","Уменьшает текущий счетчик дескрипторов.":"减少当前句柄数。\r\n","Ruft einen Zeiger aus einem ":"从 a 获取指针\r\n","이 형식의 인스턴스는 ITypeInfo::CreateInstance가 만들 수 있습니다.":"这种类型的实例可以由 ITypeInfo::CreateInstance 创建。\r\n"," als ungültig markiert ist, gibt diese Methode dennoch den ursprünglichen Handlewert zurück, bei dem es sich um einen veralteten Wert handeln kann.":" 被标记为无效，此方法仍返回原始句柄值，该值可能是过时值。\r\n","-Klasse mit der angegebenen Fehlermeldung und der angegebenen zugrunde liegenden Ausnahme.":"-Klasse mit der angegebenen Fehlermeldung und der angegebenen zugrunde liegenden Ausnahme。\r\n","Ссылка на объект, зарегистрированный как выполняемый. ":"对注册为可执行文件的对象的引用。\r\n","관리되지 않는 메모리에서 읽은 64비트 부호 있는 정수입니다.":"从非托管内存读取的 64 位带符号整数。\r\n","Der Typ der angeforderten Schnittstelle.":"请求的接口类型。\r\n","Конфигурация сборки. ":"构建配置。\r\n","관리되지 않는 메모리에 부호 있는 32비트 정수 값을 씁니다.":"将带符号的 32 位整数值写入非托管内存。\r\n","Ein S_OKHRESULT-Wert, wenn die Moniker identisch sind; andernfalls ein S_FALSEHRESULT-Wert.  ":"如果名字对象相同，则为 S_OKHRESULT 值；否则，一个 S_FALSEHRESULT 值。\r\n","Число 100-наносекундных импульсов, представляющее дату и время создания данного экземпляра.":"表示创建此实例的日期和时间的 100 纳秒脉冲数。\r\n","반환이 성공적이면, 스트림의 시작 부분에서 검색 포인터의 오프셋을 포함합니다. ":"如果返回成功，则包含从流开始处开始的查找指针的偏移量。\r\n","Der zu lesende Werttyp.":"要读取的值类型。\r\n","Gibt die größere von zwei Dezimalzahlen zurück.":"返回两个小数中较大的一个。\r\n","Ein Zeiger auf einen nicht verwalteten Speicherblock.":"指向非托管内存块的指针。\r\n","Преобразует значение заданного объекта в эквивалентное десятичное число, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用指定的区域性特定格式设置信息将指定对象的值转换为其等效的十进制数。\r\n","지정된 32비트 부호 있는 정수의 값을 해당하는 32비트 부호 없는 정수로 변환합니다.":"将指定的 32 位带符号整数的值转换为等效的 32 位无符号整数。\r\n","에 해당하는 16비트 부호 없는 정수를 반환합니다.":"返回一个 16 位无符号整数，等价于\r\n","Описание типа, описывающее объект Application.":"描述应用程序对象的类型声明。\r\n","Der reelle Teil der komplexen Zahl.":"复数的实部。\r\n"," 인터페이스를 무시해야 합니다.":" 您必须忽略接口。\r\n"," имеет значение null. -или-Свойство ":"一片空白。 - 或 - 财产\r\n","Wenn eine Zahl genau zwischen zwei Zahlen liegt, wird sie auf die nächste größere Zahl aufgerundet.":"如果一个数字介于两个数字之间，则将其四舍五入为最接近的较大数字。\r\n","결합된 경로입니다.지정된 경로 중 하나가 0 길이의 문자열이면 이 메서드는 다른 경로를 반환합니다.":"组合路径。如果指定路径之一是零长度字符串，则此方法返回另一个路径。\r\n","Ein Zeiger auf CUSTDATA, worin alle benutzerdefinierten Datenelemente enthalten sind. ":"指向包含所有用户定义数据成员的 CUSTDATA 的指针。\r\n"," 매개 변수에 있는 필드입니다.":" 参数中的字段。\r\n","Предоставляет управляемое определение интерфейса IPersistFile с функциональными возможностями из IPersist.":"提供具有 IPersist 功能的 IPersistFile 接口的托管定义。\r\n","지정된 복소수의 자연(밑 e) 로그를 반환합니다.":"返回指定复数的自然（以 e 为底）对数。\r\n","Преобразует значение заданного объекта в эквивалентное логическое значение, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.":"使用指定的区域性特定格式设置信息将指定对象的值转换为其等效的布尔值。\r\n"," ist kleiner als null. - oder -":" 小于零。 - 或者 -\r\n"," 개체가 다른 .NET Framework 버전을 표시하는지 여부를 나타내는 값을 반환합니다.":" 返回一个值，该值指示对象是否表示不同的 .NET Framework 版本。\r\n","Eine ganze Zahl, deren Wert 0 (null) ist.":"值为 0（零）的整数。\r\n","При возвращении данного метода содержит ссылку на перечисленные строки.Этот параметр передается без инициализации.":"当此方法返回时，包含对列出的字符串的引用。此参数无需初始化即可传递。\r\n",", -Infinity는 ":"， -无穷\r\n","Одно из значений перечисления, определяющих компоновку класса или структуры.":"决定类或结构布局的枚举值之一。\r\n"," меньше нуля или больше ":" 小于零或更多\r\n","Die erste von zwei zu vergleichenden 8-Bit-Ganzzahlen ohne Vorzeichen. ":"要比较的两个 8 位无符号整数中的第一个。\r\n","Gibt einen Wert zurück, der angibt, ob zwei komplexe Zahlen gleich sind.":"返回一个值，该值指示两个复数是否相等。\r\n","Die GUID des Objekttyps, der diesem ":"与此关联的对象类型的 GUID\r\n","에서 반환할 모니커의 수입니다. ":"要从 返回的名字对象的数量。\r\n","Освобождает все вложенные структуры, на которые указывает заданный блок неуправляемой памяти.":"释放给定非托管内存块指向的所有嵌套结构。\r\n","이(가) null이면 반환된 문자열에 확장명이 제거된 지정된 경로가 포함되어 있습니다.":"如果为 null，则返回的字符串包含删除了扩展名的指定路径。\r\n","Идентификатор GUID, используемый для определения данных. ":"用于标识数据的 GUID。\r\n",", используя указанное 8-разрядное целое число без знака.":", 使用指定的 8 位无符号整数。\r\n","DNS-имя домена или IP-адрес. ":"DNS 域名或 IP 地址。\r\n","Ruft die Typbeschreibungen ab, auf die verwiesen wird, wenn eine Typbeschreibung auf andere Typbeschreibungen verweist.":"获取当一个类型描述引用其他类型描述时所引用的类型描述。\r\n","부호 있는 64비트 정수가 ":"带符号的 64 位整数\r\n","이 인스턴스의 해시 코드를 나타내는 32비트 부호 있는 정수입니다.":"一个 32 位有符号整数，表示此实例的哈希代码。\r\n","Возвращает указанное логическое значение в виде массива байтов.":"Возвращаетуказанноелогическоезначениеввидемассивабайтов。\r\n","지정한 구현 형식에 대한 모든 사용자 지정 데이터를 가져옵니다.":"获取指定实现类型的所有自定义数据。\r\n"," функции.":" 功能。\r\n","Строка, содержащая отображаемую строку ":"包含要显示的字符串的字符串\r\n","-Instanz derzeit ausgeführt wird und die verstrichene Zeit für ein Intervall misst; andernfalls false.":"- 当前正在运行的实例并测量一个间隔的经过时间；否则为假。\r\n","Возвращает значение, указывающее, содержит ли заданный путь корневую папку.":"获取一个值，该值指示指定路径是否包含根文件夹。\r\n"," вне диапазона.":" 超出范围。\r\n","Die erste zu addierende komplexe Zahl.":"要添加的第一个复数。\r\n","Возвращает меньшее из двух 32-битовых целых чисел без знака.":"返回两个 32 位无符号整数中较小的一个。\r\n","COM VARIANT를 가져올 개체입니다. ":"要为其获取 COM VARIANT 的对象。\r\n"," übergeben. ":" 交出。\r\n","해제할 인터페이스입니다.":"要发布的接口。\r\n","unsignedshort를 나타냅니다.":"代表一个无符号短整型。\r\n",".NET Framework 버전 정보가 포함된 문자열입니다.":"包含 .NET Framework 版本信息的字符串。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.":"将指定的 64 位无符号整数的值转换为等效的 16 位有符号整数。\r\n","에 해당하는 8비트 부호 없는 정수이거나, ":"是一个 8 位无符号整数，等价于\r\n","이 메서드는 반환될 때 포함하는 형식 라이브러리의 ITypeComp 인터페이스에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含对包含类型库的 ITypeComp 接口的引用。此参数在未初始化的情况下传递。\r\n",", der die Klasse zum Implementieren der Methoden der Ereignisschnittstelle enthält. ":"，其中包含实现事件接口方法的类。\r\n","스트림 또는 바이트 배열의 크기를 바이트 단위로 나타냅니다.":"指示流或字节数组的大小（以字节为单位）。\r\n"," с заданным сообщением.":" 与给定的消息。\r\n","Die Zeichenfolge mit der Anzeigezeichenfolge des ":"包含显示字符串的字符串\r\n","Значение, на которое ссылается ":"所指的价值\r\n","Возвращаемое логическое значение. ":"返回布尔值。\r\n","Der Typ des zurückzugebenden Umbruchs. ":"要返回的中断类型。\r\n","의 아크코사인인 각도인, 라디안 단위로 측정됩니다.":"是一个角度，它是 的反余弦值，以弧度为单位。\r\n","의 길이가 0이 아니거나 4의 배수가 아닌 경우 또는":"如果的长度不为零或不是 4 的倍数，或者\r\n","32-разрядное целое число со знаком, представляющее хэш-код данного экземпляра.":"一个 32 位有符号整数，表示此实例的哈希码。\r\n","-Parameter enthält einen ungültigen Wert.":"- 参数包含无效值。\r\n","Показывает, что для класса автоматически создается сдвоенный интерфейс класса, который предоставляется COM.Сведения о типе создаются для класса интерфейса и публикуются в библиотеке типов.Использование AutoDual крайне нежелательно из-за ограничений, связанных с версиями и описанных для атрибута ":"指示为类自动生成并由 COM 提供的双重类接口。为接口类生成类型信息并发布到类型库。由于针对属性描述的版本控制限制，强烈建议不要使用 AutoDual\r\n","Младшие 32 бита 96-битного ":"96位的低32位\r\n","Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl mit Vorzeichen größer als ein ":"返回一个值，该值指示 64 位有符号整数是否大于\r\n","Konvertiert den angegebenen booleschen Wert in die entsprechende Dezimalzahl.":"将指定的布尔值转换为其等效的十进制值。\r\n"," имеет значение null или пуст.":" 为 null 或空。\r\n","Описывает тип переменной, возвращаемый тип функции или тип параметра функции.":"描述变量的类型、函数的返回类型或函数参数的类型。\r\n","프로세스가 종료된 이유를 설명하는 메시지이거나, 설명이 제공되지 않는 경우 null입니다.":"解释进程终止原因的消息，如果未提供解释则为 null。\r\n"," muss mit ":" 必须与\r\n","Logaritmo in base 10 di ":"以 10 di 为底数的对数\r\n","Inkrementiert einen ":"递增一\r\n"," и возвращает значение типа ":" 并返回一个值\r\n","Возвращает значение, показывающее, является ли дескриптор закрытым.":"Возвращает значение, pokazyvaющее, является ли дескриптор закрытым.\r\n","에서 지정한 진수법에 해당하지 않는 문자가 ":"与中指定的十进制系统不对应的字符\r\n","Член задает свойства.":"成员设置属性。\r\n","Считывает из неуправляемой памяти целое число, разрядность которого соответствует собственной разрядности процессора.":"从非托管内存中读取一个整数，其位宽与处理器自身的位宽相匹配。\r\n","Длина диапазона, доступ к которому ограничен, в байтах. ":"限制范围的长度，以字节为单位。\r\n","가 포함되지만 ":"包括在内，但是\r\n"," viene determinado por el argumento ":" 这是由论点决定的 \r\n","Возвращает сведения об описании сборки.":"返回有关程序集描述的信息。\r\n"," не может быть преобразован в конечный тип, так как он не поддерживает все необходимые интерфейсы. ":" 无法转换为最终类型，因为它不支持所有必需的接口。\r\n","-Objekts ist, andernfalls false.":"-object 否则为假。\r\n","도움말 파일 내에서 해당 항목의 도움말 컨텍스트 ID를 나타냅니다.":"指示帮助文件中主题的帮助上下文 ID。\r\n","Gibt den angegebenen booleschen Wert zurück. Es wird keine wirkliche Konvertierung durchgeführt.":"返回给定的布尔值。不执行真正的转换。\r\n","При возвращении данного метода содержит число знаков, использованных при анализе ":"当此方法返回时，包含解析中使用的字符数\r\n","Ключ из пары ключ/значение.":"来自键/值对的键。\r\n","Перечисляет объекты, зарегистрированные в данный момент как запущенные.":"列出当前注册为正在运行的对象。\r\n","Предоставляет управляемое определение интерфейса IBindCtx.":"为 IBindCtx 接口提供托管定义。\r\n","Преобразует значение заданного 8-битового целого числа без знака в эквивалентное строковое представление в указанной системе счисления.":"将指定的 8 位无符号整数的值转换为其在指定基数中的等效字符串表示形式。\r\n","Ссылка на этот экземпляр после завершения операции удаления.":"删除操作完成后对此实例的引用。\r\n","Получает имя дружественной сборки, для которой будут сделаны доступными все типы и члены типов, помеченные ключевым словом internal. ":"获取友元程序集的名称，使用 internal 关键字标记的所有类型和类型成员都将对其可用。\r\n",") 2, 사분면에 π/2 < θ≤π.에 대 한 (":") 在第 2 象限，对于 π/2 < θ≤π。 (\r\n","Gibt an, dass der Attributtyp zuvor in COM definiert war.":"指示属性类型以前在 COM 中定义过。\r\n","true, wenn dieser ACE geerbt wird, andernfalls false.":"如果此 ACE 是继承的，则为 true，否则为 false。\r\n","비교할 두 개의 단정밀도 부동 소수점 수 중 두 번째 숫자입니다. ":"要比较的两个单精度浮点数中的第二个。\r\n","true oder false. Damit wird der Wert wiedergegeben, der beim Aufrufen der ":"对或错。这反映了调用时获得的值\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.":"将指定的单精度浮点数的值转换为等效的 32 位带符号整数。\r\n","Строка, используемая для инициализации значения экземпляра.Если ":"用于初始化实例值的字符串。如果\r\n","Определяет, содержится ли в словаре, доступном только для чтения, элемент с указанным ключом.":"确定只读字典是否包含具有指定键的元素。\r\n","Указатель на неуправляемый блок памяти.":"指向非托管内存块的指针。\r\n"," zurückgegeben wird.":" 被退回。\r\n","Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung.":"将指定的 64 位带符号整数的值转换为其等效的字符串表示形式。\r\n","비교할 복소수입니다.":"要比较的复数。\r\n","Gibt e potenziert mit einer angegebenen komplexen Zahl zurück.":"返回 e 的指定复数次方。\r\n","Битовая комбинация значений перечисления, указывающих пути, по которым ищет функция LoadLibraryEx во время вызовов платформы. ":"枚举值的按位组合，指定 LoadLibraryEx 函数在平台调用期间查找的路径。\r\n","저장이 완료된 후 수정된 플래그를 지우려면 true이고, 그렇지 않으면 false입니다.":"如果在保存完成后清除修改标志，则为 true；否则为 false。\r\n","Позиция символа. ":"角色的位置。\r\n","Der letzte durch einen Aufruf der Win32-SetLastError-Funktion festgelegte Fehlercode.":"通过调用 Win32 SetLastError 函数设置的最后一个错误代码。\r\n","BSTR 문자열을 나타냅니다.":"表示 BSTR 字符串。\r\n","지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 16비트 부호 없는 정수로 변환합니다.":"使用指定的区域性特定格式设置信息，将数字的指定字符串表示形式转换为其等效的 16 位无符号整数。\r\n","Задает индекс параметра неуправляемого атрибута iid_is, используемого в COM.":"指定在 COM 中使用的 iid_is 非托管属性的参数索引。\r\n","의 쌍곡선 접선입니다.":"是双曲正切\r\n","이 메서드는 반환될 때 개체 매개 변수 열거자에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含对对象参数枚举器的引用。此参数未初始化地传递。\r\n","Gibt einen Bezeichner für das aktuelle ":"返回当前的标识符\r\n",", wenn der ":", 如果\r\n","-Objekt ab oder legt diese fest.":"对象或设置它。\r\n"," 개체로 래핑된 개체입니다.":" 包裹在对象中的对象。\r\n","Gibt an, welche Abschnitte (Zugriffsregeln, Überwachungsregeln, primäre Gruppe, Besitzer) der Sicherheitsbeschreibung abgerufen werden sollen.":"指定要检索的安全描述符的哪些部分（访问规则、审核规则、主要组、所有者）。\r\n","Тип значений в словаре, доступном только для чтения. ":"只读字典中值的类型。\r\n"," angegebenen Basis ein Zeichen, das keine gültige Ziffer ist.Die Ausnahmemeldung gibt an, dass keine zu konvertierenden Ziffern vorhanden sind, wenn das erste Zeichen in ":" specified base is a character that is not a valid digit. 异常消息表明当第一个字符在\r\n","Der Typ des sicherungsfähigen Objekts, dem das neue ":"新的安全对象的类型\r\n","지정된 시드 값을 사용하여 ":"使用指定的种子值\r\n","Включает режим сборки мусора, при котором объекты подбираются с большей осторожностью.Полная сборка происходит только в случае недостатка памяти, в то время как сборки нулевого и первого поколения могут происходить чаще.":"启用垃圾回收模式，在这种模式下对象会被更仔细地拾取。只有当内存不足时才会进行完全回收，而第 0 代和第 1 代回收会更频繁地发生。\r\n","Ссылка на моникер, который был добавлен в таблицу текущих объектов (ROT) самым последним. ":"对最近添加到当前对象表 (ROT) 的名字对象的引用。\r\n","를 오른쪽으로 이동할 비트 수입니다.":"要右移的位数。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.":"将指定的 32 位带符号整数的值转换为等效的双精度浮点数。\r\n","첫 번째 값입니다.":"첫번째값입니다。\r\n"," не находится в соответствующем формате.":" 格式不正确。\r\n","Вызовы метода IUnknown::QueryInterface могут использовать интерфейс ":"调用 IUnknown::QueryInterface 方法可以使用接口\r\n","해시 코드가 반환될 개체입니다. ":"要为其返回哈希码的对象。\r\n","배정밀도 부동 소수점 수의 절대 값을 반환합니다.":"返回双精度浮点数的绝对值。\r\n","Die Methode gibt einen Verweis auf das Enumeratorobjekt für den Moniker zurück.Dieser Parameter wird nicht initialisiert übergeben.":"该方法返回对名字对象的枚举器对象的引用。此参数未初始化传递。\r\n","Ein dynamischer Typ, der zur Laufzeit den Typ eines Objekts bestimmt und das Objekt als diesen Typ marshallt.Dieser Member ist nur für Plattformaufrufmethoden gültig.":"一种动态类型，它在运行时确定对象的类型并将对象封送为该类型。此成员仅对平台调用方法有效。\r\n","이 메서드는 반환될 때 해당 스트림에서 읽은 데이터를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，它包含从该流中读取的数据。此参数未初始化传递。\r\n","Содержит аргументы, переданные IDispatch::Invoke методу или свойству.":"包含传递给 IDispatch::Invoke 方法或属性的参数。\r\n","Второй сравниваемый объект типа ":"第二个比较对象的类型\r\n","Der Wert, als der die Daten gemarshallt werden sollen. ":"将数据编组为的值。\r\n","Ein Objekt, das mit der aktuellen Instanz verglichen werden soll. ":"要与当前实例进行比较的对象。\r\n","Количество преобразуемых элементов в массиве ":"数组中要转换的元素数\r\n","이 정보가 설명하는 형식을 설명하는 ":"其中描述了此信息描述的格式。\r\n","4-байтовое число с плавающей запятой.":"4 字节浮点数。\r\n","이 메서드가 반환될 때 새로 만들어진 열거자에 대한 참조를 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含对新创建的枚举器的引用。此参数未初始化传递。\r\n","Требует, чтобы объект не ждал изменения данных или представления до выполнения начального вызова ":"要求对象在进行初始调用之前不要等待数据或视图更改\r\n"," 문자열입니다.":" 一个字符串。\r\n","에 추가할 변위입니다. ":"添加到 的位移。\r\n","Добавляет к данному экземпляру строку, возвращаемую в результате обработки строки составного формата, содержащей ноль или более элементов формата.Каждый элемент формата заменяется строковым представлением соответствующего аргумента в массиве параметров.":"将处理包含零个或多个格式元素的复合格式字符串返回的字符串附加到此实例。每个格式元素都替换为参数数组中相应参数的字符串表示形式。\r\n","Diese Methode gibt einen Verweis auf die opcode-Zeichenfolge für das Marshallen der Felder in der Struktur zurück, die von der Typbeschreibung beschrieben wird, auf die verwiesen wird. Wenn jedoch keine zurückzugebenden Informationen vorhanden sind, wird null zurückgegeben.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回对操作码字符串的引用，用于编组引用类型描述所描述的结构中的字段。但是，如果没有信息可返回，则返回 null。此参数未初始化传递。\r\n"," содержит недействительные замыкающие знаки.":" 包含无效的尾随字符。\r\n"," тем потоком, где было создано исключение, или другими потоками вызывают метод инициализации повторно.Если метод инициализации рекурсивно осуществляет доступ к свойству ":" 抛出异常的线程或其他线程再次调用初始化方法，如果初始化方法递归访问属性\r\n","true, если для исключений, не являющихся производными от класса ":"如果对于非类派生异常则为真\r\n","지정된 개체의 값을 32비트 부호 있는 정수로 변환합니다.":"将指定对象的值转换为 32 位有符号整数。\r\n","Показывает, является ли интерфейс при предоставлении COM сдвоенным, диспетчерским или только IUnknown.":"指示接口在暴露给 COM 时是双重的、调度的还是只是 IUnknown。\r\n","형식 설명에서 다른 형식 설명을 참조할 경우 참조된 형식 설명을 검색합니다.":"如果类型描述引用另一个类型描述，则搜索引用的类型描述。\r\n","Завершает процесс сразу после записи сообщения в журнал событий приложений Windows, после чего включает сообщение в отчет об ошибках, отправляемый в корпорацию Майкрософт.":"在将消息写入 Windows 应用程序事件日志后立即终止进程，然后将消息包含在发送给 Microsoft 的错误报告中。\r\n",", используя значение с плавающей запятой двойной точности.":", используя значение с плавающей запятой двойной точности。\r\n","base-64 숫자의 이진 데이터를 해당하는 8비트 부호 없는 정수 배열로 인코딩하는 방법으로 지정된 문자열을 변환합니다.":"通过将二进制数据从 base-64 数字编码为等效的 8 位无符号整数数组来转换指定的字符串。\r\n","Definiert eine implizite Konvertierung eines Bytewerts ohne Vorzeichen in einen ":"定义一个无符号字节值到一个\r\n","Представляет класс-оболочку для дескрипторов операционной системы.Этот класс должен наследоваться.":"Представляет класс-оболочку для десрипторов операционной системы.Эот класс должен наследоваться。\r\n","Gibt die Konstanten an, die die Eigenschaften einer Funktion definieren.":"指定定义函数属性的常量。\r\n","Ein von Integratoren implementierter Delegat, der benutzerdefinierte Ausnahmen bereitstellt. ":"由提供自定义异常的集成商实现的委托。\r\n","Отображаемое имя версии платформы .NET Framework.":".NET Framework 版本的显示名称。\r\n"," gebunden ist.Dieser Parameter wird nicht initialisiert übergeben.":" 已绑定。此参数未初始化传递。\r\n","이 바인딩 작업에서 사용할 바인드 컨텍스트에 대한 참조입니다. ":"对此绑定操作要使用的绑定上下文的引用。\r\n","Ruft alle benutzerdefinierten Daten aus der angegebenen Funktion ab.":"从指定函数获取所有自定义数据。\r\n","При возвращении данного метода содержит ссылку на интерфейс VARDESC, FUNCDESC или ITypeComp, к которому выполняется привязка.Этот параметр передается без инициализации.":"当此方法返回时，包含对要绑定到的 VARDESC、FUNCDESC 或 ITypeComp 接口的引用。此参数无需初始化即可传递。\r\n","-Klasse zurück, die in eine Instanz der ":"的实例中返回的类\r\n","Eine Zahl, mit der ein Startwert für Folgen von Pseudozufallszahlen berechnet wird.Wenn eine negative Zahl angegeben wird, wird der absolute Wert der Zahl verwendet.":"用于计算伪随机数序列的种子值的数字。如果指定负数，则使用该数字的绝对值。\r\n","Die Adresse des freizugebenden Speichers. ":"要释放的内存地址。\r\n","파일 이름에 사용할 수 없는 문자가 포함된 배열을 가져옵니다.":"获取包含文件名中不允许的字符的数组。\r\n",", показывающее интерфейс по умолчанию, предоставляемый для COM. ":"显示为 COM 提供的默认接口。\r\n","Gibt an, ob ein angegebenes Objekt ein COM-Objekt darstellt.":"指示指定对象是否表示 COM 对象。\r\n","Набор реализованных интерфейсов компонентов.":"一组已实现的组件接口。\r\n","Преобразует значение заданного 8-битового целого числа без знака в эквивалентное строковое представление.":"将指定的 8 位无符号整数的值转换为其等效的字符串表示形式。\r\n","Релаксации компиляции. ":"编译放松。\r\n","Возводит значение ":"提高价值\r\n","Объект, определенный в каждой паре ключ/значение. ":"每个键/值对中定义的对象。\r\n","Die Methode gibt einen Verweis auf einen DESCKIND-Enumerator zurück, der angibt, ob es sich bei dem gebundenen Namen um VARDESC, FUNCDESC oder TYPECOMP handelt.Dieser Parameter wird nicht initialisiert übergeben.":"该方法返回对 DESCKIND 枚举器的引用，该枚举器指示绑定名称是 VARDESC、FUNCDESC 还是 TYPECOMP。此参数未初始化传递。\r\n",", используя значение ":", используя значение\r\n","Das Array von Bytes, das zum Festlegen der Sicherheitsbeschreibung verwendet wird.":"用于设置安全描述符的字节数组。\r\n"," не поддерживает IDispatch. ":" 不支持 IDispatch。\r\n","-Objekt, das dem Wertparameter entspricht.  ":"- 值参数对应的对象。\r\n","true, wenn sich die ACEs im aktuellen ":"如果 ACE 在当前，则为真\r\n","Ruft Flags ab, die die Vererbungseigenschaften für diesen ACE (Access Control Entry, Zugriffssteuerungseintrag) angeben.":"获取指示此访问控制项 (ACE) 的继承属性的标志。\r\n"," для одного реализованного интерфейса или базового интерфейса в описании типа.":" 对于类型声明中的单个已实现接口或基接口。\r\n","런타임에서 개체의 형식을 결정하고 해당 형식으로 개체를 마샬링하는 동적 형식입니다.이 메서드는 플랫폼 호출 메서드에만 유효합니다.":"一种动态类型，其中运行时确定对象的类型并将对象编组为该类型。此方法仅对平台调用的方法有效。\r\n"," с указанным обратным вызовом.":" 使用指定的回调。\r\n","[Поддерживается только в .NET Framework 4.5.1 и более поздних версиях] Преобразует массив типа COM VARIANT в массив указанного типа. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 将 COM VARIANT 类型的数组转换为指定类型的数组。\r\n","-Klasse aus einer Zeichenfolge, die Informationen zu einer Version von .NET Framework enthält.":"来自包含有关 .NET Framework 版本信息的字符串的类。\r\n","Konvertiert den angegebenen booleschen Wert in die entsprechende Zeichenfolgendarstellung.":"将指定的布尔值转换为其等效的字符串表示形式。\r\n"," является COM-типом; в противном случае — значение false.":" 是 COM 类型；否则，假的。\r\n","형식이 ":"格式\r\n","지정된 10진수 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.":"将指定的十进制值转换为等效的双精度浮点数。\r\n","지정된 64비트 부호 있는 정수의 값을 해당하는 유니코드 문자로 변환합니다.":"将指定的 64 位带符号整数的值转换为等效的 Unicode 字符。\r\n","-Objekt verwendet wird.Diese Werte sind keine Flags, und sie können nicht kombiniert werden.":"使用对象。这些值不是标志，它们不能组合。\r\n","Schreibt eine 32-Bit-Ganzzahl mit Vorzeichen in den nicht verwalteten Speicher.":"将 32 位带符号整数写入非托管内存。\r\n"," ist, wird dieser Wert zurückgegeben.":" 就是，返回这个值。\r\n","선택적인 매개 변수를 계산합니다.":"计算可选参数。\r\n","DISPATCH_PROPERTYPUT oder DISPATCH_PROPERTYPUTREF angibt, wird ":"使用 DISPATCH_PROPERTYPUT 或 DISPATCH_PROPERTYPUTREF\r\n","Представляет ошибки структурной обработки исключений (SEH). ":"表示结构化异常处理 (SEH) 错误。\r\n","관리되지 않는 메모리에서 ":"在非托管内存中\r\n","true, wenn das Objekt diesem ":"真的，wenn das Objekt diesem\r\n","-Objekt ein Container ist.":"- 对象是一个容器。\r\n"," показывает индекс аргумента с неверным типом внутри ":" 显示内部类型错误的参数索引\r\n","Die Ausnahme, die ausgelöst wird, wenn eine Dateneinheit aus einer Adresse gelesen bzw. in eine solche geschrieben wird, die kein Mehrfaches der Datengröße ist.Diese Klasse kann nicht vererbt werden.":"Die Ausnahme, die ausgelöst wird, wenn eine Dateneinheit aus einer Adresse gelesen bzw。 in eine solche geschrieben wird, die kein Mehrfaches der Datengröße ist. Diese Klasse kann nicht vererbt werden。\r\n","System.__ComObject вне зависимости от того, допустим ли код CLSID. ":"System.__ComObject 无论 CLSID 代码是否有效。\r\n","Stellt ein sicheres Handle für ein systemeigenes Betriebssystem-Wait-Handle ein. ":"为本机操作系统等待句柄设置安全句柄。\r\n","Gibt den Typ der auszuführenden Zugriffssteuerungsänderung an.Diese Enumeration wird von Methoden der ":"指定要执行的访问控制更改的类型。此枚举由\r\n","로그가 있는 숫자입니다.":"로그가있는숫자입니다。\r\n"," hinein.":" 在。\r\n","Gibt eine der ":"给出其中之一\r\n","Ein HRESULT, das den Erfolg oder Fehler des Aufrufs angibt.":"指示调用成功或失败的 HRESULT。\r\n","Возвращает абсолютное значение числа ":"返回数字的绝对值\r\n","Eine Instanz eines Objekts.Dieser Parameter wird ignoriert.":"一个对象的实例。这个参数被忽略。\r\n","의 상대 값을 나타내는 부호 있는 정수입니다.값의미0보다 작음":"表示值的相对值的有符号整数。\r\n","-Eigenschaft einen gültigen Wert enthält.Diese Werte können mit einem logischen OR kombiniert werden.":"属性包含一个有效值。这些值可以用逻辑或组合。\r\n","Ruft die diesem ACE (Access Control Entry, Zugriffssteuerungseintrag) zugeordneten Überwachungsinformationen ab.":"获取与此访问控制项 (ACE) 关联的审核信息。\r\n"," в эквивалентное строковое представление.":" 到等效的字符串表示。\r\n","해당 개체를 검색 도구에 표시할 때 사용할 수 있는 개체의 축소판 표현입니다.축소판은 메타파일에 래핑될 수 있는 약 120x120픽셀 크기의, 16색(권장) 장치 독립적 비트맵입니다.":"在搜索工具中显示该对象时可以使用的对象的缩略图表示形式。缩略图大约为 120x120 像素、16 色（推荐）、与设备无关的位图，可以包装在图元文件中。\r\n"," не состоит из необязательного знака и следующей за ним последовательности цифр (от 0 до 9). ":" 不由可选字符后跟数字序列（从 0 到 9）组成。\r\n","Eine 32-Bit-Ganzzahl mit Vorzeichen, die größer oder gleich ":"大于或等于的 32 位有符号整数\r\n","가 지원되지 않는 형식인 경우":"格式不受支持\r\n","При возвращении данного метода содержит ссылку на описание типа, содержащее элемент, с которым этот тип связан, если возвращено значение FUNCDESC или VARDESC.Этот параметр передается без инициализации.":"当此方法返回时，包含对类型声明的引用，该声明包含与此类型关联的元素（如果返回 FUNCDESC 或 VARDESC）。此参数无需初始化即可传递。\r\n","나눈 나머지입니다.":"这是该部门的其余部分。\r\n","Функция доступна по статическому (static) адресу и не принимает неявный указатель this.":"该函数在静态地址可用，不接受隐式 this 指针。\r\n","에 디렉터리 정보가 포함되어 있지 않으면 ":"不包含目录信息\r\n","При возвращении данного метода содержит ссылку на строку opcode, используемую при маршалинге полей структуры, описанной в описании ссылочного типа, либо возвращает null, если сведения отсутствуют.Этот параметр передается без инициализации.":"当此方法返回时，包含对在编组引用类型声明中描述的结构的字段时使用的操作码字符串的引用，或者如果信息丢失则返回 null。此参数在没有初始化的情况下传递。\r\n","Возвращает угол, тангенс которого равен отношению двух указанных чисел.":"返回正切为指定两个数之比的角度。\r\n","COM에서 사용하는 관리되지 않는 iid_is 특성의 매개 변수 인덱스를 지정합니다.":"指定 COM 使用的非托管 iid_is 属性的参数索引。\r\n","Erstellt eine eindeutig benannte temporäre Datei auf dem Datenträger mit einer Größe von 0 Byte und gibt den vollständigen Pfad dieser Datei zurück.":"在磁盘上创建一个大小为 0 字节的唯一命名的临时文件，并返回该文件的完整路径。\r\n"," und kopiert alle Zeichen bis zum ersten NULL-Zeichen aus einer nicht verwalteten Unicode-Zeichenfolge hinein.":" 并复制非托管 Unicode 字符串中直到第一个 NULL 字符的所有字符。\r\n","숫자의 지정된 문자열 표현을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.":"将数字的指定字符串表示形式转换为等效的单精度浮点数。\r\n",".Это значение является сочетанием значений ":".这个值是值的组合\r\n","Новый дескриптор ":"新描述符\r\n",", используя значение HRESULT ошибки.":"，使用错误的 HRESULT 值。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in das entsprechende Unicode-Zeichen.":"将指定的 8 位无符号整数的值转换为等效的 Unicode 字符。\r\n","이 메서드는 반환될 때 참조된 형식 설명에 설명된 구조체의 필드를 마샬링하는 데 사용한 opcode 문자열에 대한 참조를 포함합니다. 반환할 정보가 없으면 null을 반환합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.":"当此方法返回时，包含对操作码字符串的引用，用于编组引用类型描述中描述的结构字段。如果没有要返回的信息，则返回 null。此参数未初始化传递。\r\n","Entero de 32 bits con signo.":"输入 32 位 con signo。\r\n","이 스트림 또는 바이트 배열이 지원하는 영역 잠금 형식을 나타냅니다.":"指示此流或字节数组支持的区域锁定类型。\r\n","Kopiert Daten aus einem eindimensionalen, verwalteten ":"从一维的、托管的复制数据\r\n",", содержащему количество дробных разрядов, которое равно ":"，包含小数位数，等于\r\n","이 형식은 미리 정의됩니다.클라이언트 응용 프로그램은 이 특성을 가진 개체의 단일 인스턴스를 자동으로 만들어야 합니다.개체를 가리키는 변수의 이름은 개체의 클래스 이름과 동일합니다.":"此类型是预定义的。客户端应用程序应自动创建具有此属性的对象的单个实例。指向对象的变量与对象的类名具有相同的名称。\r\n"," со строкой сообщения, для которой задан параметр ":" 带有为其设置参数的消息字符串\r\n",", первоначально полученную из метода ":", 最初是从方法中获得的\r\n","대상 운영 체제 플랫폼을 식별합니다.":"标识目标操作系统平台。\r\n","-Objekt als für COM verfügbar gemachte Standardschnittstelle.":"对象作为暴露给 COM 的默认接口。\r\n"," является типом значения.-или-Параметр ":" 是值类型。-或-参数\r\n","Маршалирует данные типа VT_BSTR из управляемого кода в неуправляемый.Этот класс не наследуется.":"Маршалирует данные типа VT_BSTR из управляемого кода в неуправляемый.Этот класс не наследуется。\r\n","Тип элементов.":"物品种类。\r\n","Определяет, что при создании эта сборка не подписывается полностью.":"指定此程序集在创建时未完全签名。\r\n","Определяет неявное преобразование значения типа byte без знака в значение ":"定义无符号字节值到值的隐式转换\r\n","16-битное целое число со знаком, считанное из неуправляемой памяти.":"从非托管内存中读取的 16 位有符号整数。\r\n","Определяет свойства и атрибуты описания типа.":"定义类型声明的特性和特性。\r\n","Возвращает значение, показывающее, равны ли два объекта ":"返回一个值，指示两个对象是否相等\r\n","Округляет заданное значение число двойной точности с плавающей запятой до ближайшего целого.Параметр задает правило округления значения, если оно находится ровно посредине между двумя числами.":"将双精度浮点数的给定值舍入到最接近的整数。该参数指定值恰好在两个数字的中间时的舍入规则。\r\n","IDispatch::Invoke에 의해 메서드나 속성에 전달되는 인수를 포함합니다.":"包含由 IDispatch::Invoke 传递给方法或属性的参数。\r\n","Definisce una conversione implicita di un intero senza segno a 64 bit in un valore ":"在 un valore 中定义 64 位 conversione implicita di un intero senza segno\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in einen entsprechenden booleschen Wert.":"将指定的 8 位带符号整数的值转换为等效的布尔值。\r\n","Das Ergebnis der ":"的结果\r\n","지정된 64비트 부호 없는 정수의 값을 해당하는 16비트 부호 있는 정수로 변환합니다.":"将指定的 64 位无符号整数的值转换为等效的 16 位有符号整数。\r\n","지정된 8비트 부호 있는 정수 값을 해당하는 10진수로 변환합니다.":"将指定的 8 位带符号整数值转换为其等效的十进制值。\r\n","Verschiebt einen ":"移动一个\r\n",", das von ":", 那来自\r\n","Отличает генерируемый компилятором элемент от элемента, генерируемого пользователем.Этот класс не наследуется.":"区分编译器生成的元素和用户生成的元素。此类不被继承。\r\n","Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.":"将指定 Unicode 字符的值转换为等效的 16 位无符号整数。\r\n","Der Besitzer.":"主人。\r\n","Fragt das verbindungsfähige Objekt nach einem Verbindungspunkt für eine bestimmte IID. Wenn dieser vorhanden ist, wird der IConnectionPoint-Schnittstellenzeiger zurückgegeben, der auf diesen Verbindungspunkt verweist.":"向可连接对象请求特定 IID 的连接点。如果存在，则返回指向该连接点的 IConnectionPoint 接口指针。\r\n","로 마샬링될 때 배열 요소가 마샬링될 방법을 나타냅니다. ":"指示编组时将如何编组数组元素。\r\n"," -0 zurückgegeben.Wenn ":" -0 返回.If\r\n","true für einen normalen Freigabevorgang, false, um das Handle zu beenden.":"true 表示正常释放操作，false 表示结束句柄。\r\n","Удаляет регистрацию заданного объекта из таблицы текущих объектов (ROT).":"从当前对象表 (ROT) 中删除指定对象的注册。\r\n","의 켤레 복소수입니다.":"是 的复共轭。\r\n","지정된 10진수 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.":"将指定的十进制值转换为等效的单精度浮点数。\r\n","-Parameters für den Konstruktor.":"-构造函数的参数。\r\n","Код ошибки (HRESULT) — это значение, связанное с этим исключением. ":"错误代码 (HRESULT) 是与此异常关联的值。\r\n","Тип, представляющий интерфейс.":"表示接口的类型。\r\n","Первое из двух сравниваемых 64-разрядных целых чисел без знака. ":"要比较的两个无符号 64 位整数中的第一个。\r\n","Выделяет память из неуправляемой памяти процесса, используя указатель на заданное количество байтов.":"使用指向指定字节数的指针从进程的非托管内存中分配内存。\r\n",", an dem der Kopiervorgang beginnt.":", 复制开始的地方。\r\n","수집기의 이름입니다.  이 매개 변수를 사용하면 핸들 형식을 개별적으로 추적하는 수집기의 이름을 지정할 수 있습니다.":"收集器的名称。  此参数允许您指定单独跟踪句柄类型的收集器的名称。\r\n"," в заданную степень.":" 到一定程度。\r\n","64-разрядное целое число без знака.":"64-разрядное целое число без знака。\r\n","Среда хранения представляет собой расширенный метафайл.Если элемент ":"存储介质是增强型图元文件。如果项目\r\n","-Objekt, das in eine Instanz der ":"- 包含在实例中的对象\r\n","Ruft die CLSID (Klassen-ID) für ein Objekt ab.":"获取对象的 CLSID（类标识符）。\r\n","Potenziert einen ":"强化一个\r\n"," превышает объем доступного адресного пространства.":" 超出可用地址空间。\r\n","Flags, die die Vererbungseigenschaften der Zugriffssteuerungsregel angeben, die entfernt werden sollen.":"指定要删除的访问控制规则的继承属性的标志。\r\n","Указывает, что числовая строка представляет шестнадцатеричное значение.К допустимым шестнадцатеричным значениям относятся цифры 0-9 и шестнадцатеричные знаки A-F и a-f.Строки, анализируемые с использованием этого стиля, не могут иметь префикс \"0x\" или \"&h\".Строка, анализируемая с использованием стиля ":"指定一个数字字符串表示一个十六进制值。有效的十六进制值包括数字0-9和十六进制字符A-F和a-f。使用该样式解析的字符串不能以“0x”或“&h”样式为前缀。\r\n","Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.":"将指定的双精度浮点数的值转换为等效的 16 位带符号整数。\r\n","Moltiplica due numeri complessi specificati.":"Moltiplica due numeri complessi specificati。\r\n","Entfernt Überwachungsregeln, die dieselbe Sicherheits-ID und dieselbe Zugriffsmaske wie die angegebene Überwachungsregel enthalten, aus der SACL (System Access Control List), die diesem ":"从与此关联的 SACL（系统访问控制列表）中删除包含与指定审核规则相同的安全 ID 和访问掩码的审核规则\r\n","Значение, позволяющее Visual Basic изменять строку в неуправляемом коде и получать результаты, отраженные в управляемом коде.Это значение поддерживается только для вызова неуправляемого кода.":"允许 Visual Basic 修改非托管代码中的字符串并在托管代码中反映结果的值。此值仅支持调用平台代码。\r\n","Die primäre Gruppe.":"初级组。\r\n","Создает уникальный объект оболочки RCW (Вызываемая оболочка времени выполнения) для заданного интерфейса IUnknown.":"为给定的 IUnknown 接口创建一个唯一的 RCW（运行时可调用包装器）包装器对象。\r\n","Дополнительное смещение байтов, добавляемое к параметру ":"添加到参数的可选字节偏移量\r\n","Diese Methode gibt den bzw. die dem Member zugeordneten Namen zurück.Dieser Parameter wird nicht initialisiert übergeben.":"此方法返回与成员关联的一个或多个名称。此参数未初始化传递。\r\n","Der Quotient der Division.":"除法的商。\r\n"," и копирует в него все знаки до первого пустого знака из неуправляемой строки Юникода.":" 并将所有字符从非托管 Unicode 字符串复制到第一个空字符。\r\n"," > 1 oder ":" > 1 或\r\n","Dieses Feld ist reserviert und muss auf null festgelegt werden.":"该字段是保留字段，必须设置为空。\r\n","현재 인스턴스와 지정된 복소수의 값이 같은지 여부를 나타내는 값을 반환합니다.":"返回一个值，该值指示当前实例是否等于指定复数的值。\r\n","Лишние знаки-разделители в середине строки не следует учитывать при разборе, за исключением знаков-разделителей, встречающихся в шаблонах формата ":"不应解析字符串中间的额外分隔符，格式模式中出现的分隔符除外\r\n","Ein Werttyp oder formatierter Referenztyp, der die verwaltete Klasse angibt.Sie müssen das ":"指定托管类的值类型或格式化引用类型。您必须这样做\r\n","Beim Überschreiben in einer abgeleiteten Klasse wird angegeben, ob zwei Zeichenfolgen gleich sind.":"在派生类中重写时，指示两个字符串是否相等。\r\n","Возвращает большее из двух 16-битовых целых чисел без знака.":"返回两个 16 位无符号整数中较大的一个。\r\n","Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende Dezimalzahl.":"将指定的 32 位带符号整数的值转换为等效的十进制数。\r\n","[Поддерживается только в .NET Framework 4.5.1 и более поздних версиях] Получает или задает значение, которое указывает, будет ли Куча больших объектов (LOH) сжата во время полной блокирующей сборки мусора. ":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 获取或设置一个值，该值指示在完全阻塞垃圾回收期间是否压缩大对象堆 (LOH)。\r\n","형식 설명의 형식을 검색합니다.":"检索格式描述的格式。\r\n","Widerruft die Registrierung des Objekts, das momentan unter dem angegebenen Schlüssel in der intern verwalteten Tabelle von Kontextobjektparametern zu finden ist, wenn dieser Schlüssel derzeit registriert ist.":"注销当前在内部维护的上下文对象参数表中指定键下找到的对象（如果该键当前已注册）。\r\n","-Klasse und gibt an, ob das Pufferhandle zuverlässig freigegeben werden soll. ":"类并指示是否应该可靠地释放缓冲区句柄。\r\n"," в неуправляемую память.":" 进入非托管内存。\r\n"," utilizando un valor ":" 用途和价值\r\n",".Wenn entweder ":".如果\r\n","Bei erfolgreicher Rückgabe ist die tatsächliche Anzahl der aus der Quelle gelesenen Bytes enthalten. ":"如果成功，则包括从源读取的实际字节数。\r\n",", а мнимая часть равна нулю. ":", 虚部为零。\r\n","에 해당하는 16비트 부호 없는 정수입니다.":"一个 16 位无符号整数等同于\r\n","Die Adresse des ersten Zeichens der nicht verwalteten Zeichenfolge.":"非托管字符串的第一个字符的地址。\r\n","-Objekt, das mit dem ":"-Objekt, das mit dem\r\n","Среда хранения представляет собой объект потока, заданный указателем IStream.ISequentialStream::Read служит для чтения данных.Если элемент ":"存储介质为IStream.ISequentialStream::Read指针指定的流对象，读取数据。如果元素\r\n","스트림에 쓸 바이트 수입니다. ":"要写入流的字节数。\r\n","개체를 저장하는 데 필요한 스트림의 크기를 바이트 단위로 반환합니다.":"返回存储对象所需的流的大小（以字节为单位）。\r\n","LHashValOfNameSys를 사용하여 확인되는 ":"使用 LHashValOfNameSys 检查\r\n","Извлекает строку документации, полный файл справки и путь к нему, а также идентификатор контекста разделов справки для заданного описания типа.":"检索文档字符串、完整帮助文件及其路径，以及给定类型描述的帮助主题的上下文 ID。\r\n","true, wenn geerbte Überwachungsregeln in der SACL beibehalten werden sollen, false, wenn geerbte Überwachungsregeln aus der SACL entfernt werden sollen.":"true 将继承的监视规则保留在 SACL 中，false 则从 SACL 中删除继承的监视规则。\r\n","Libera todos los recursos asociados al identificador.":"Libera todos los recursos asociados al identificador。\r\n","Ändert die Größe eines bereits mit ":"调整一个已经在使用的\r\n","Определяет, содержат ли текущий набор и указанная коллекция одни и те же элементы.":"确定当前集合和指定集合是否包含相同的元素。\r\n","Inkrementiert manuell den Verweiszähler für ":"手动增加引用计数\r\n"," angibt.Rückgabewert Beschreibung Kleiner als 0 (null) Diese Instanz befindet sich in der Sortierreihenfolge vor ":"指定. 返回值 说明 小于零 该实例在排序顺序之前\r\n","Считывает столько знаков указанного отображаемого имени, сколько может воспринять ":"读取指定显示名称的尽可能多的字符\r\n","[.NET Framework 4.5.1 이상 버전에서 지원됨] 관리되지 않는 함수 포인터를 지정된 형식의 대리자로 변환합니다. ":"[在 .NET Framework 4.5.1 及更高版本中受支持] 将非托管函数指针转换为指定类型的委托。\r\n","Выделяет строку BSTR и копирует в нее содержимое управляемого объекта ":"分配一个 BSTR 并将托管对象的内容复制到其中\r\n","지정된 단정밀도 부동 소수점 숫자 값을 해당하는 32비트 부호 있는 정수로 변환합니다.":"将指定的单精度浮点数的值转换为等效的 32 位带符号整数。\r\n","Ruft den angegebenen benutzerdefinierten Datenparameter ab.":"获取指定的自定义数据参数。\r\n","-Methode in Hashalgorithmen und Datenstrukturen wie Hashtabellen verwenden.":"哈希算法和数据结构（如哈希表）中的方法。\r\n","가 null이 아닌 경우0":"0 如果不为空\r\n","의 길이보다 큰 경우또는 ":"如果大于\r\n","Das Handle, das beim ursprünglichen übereinstimmenden Aufruf von ":"原始匹配调用中使用的句柄\r\n","개체를 저장할 스트림입니다. ":"存储对象的流。\r\n","열거형 시퀀스를 처음으로 다시 설정합니다.":"将枚举序列重置为开头。\r\n","-Klasse mit den angegebenen Informationen.":"具有指定信息的类。\r\n","При возвращении данного метода содержит описание ссылочного типа.Этот параметр передается без инициализации.":"当此方法返回时，包含引用类型的描述。此参数无需初始化即可传递。\r\n",", где (":"， 在哪里 （\r\n","Задает размер структуры BIND_OPTS в байтах.":"以字节为单位指定 BIND_OPTS 结构的大小。\r\n","메서드를 호출하거나 개체의 속성에 액세스하여 형식 설명에서 설명한 인터페이스를 구현합니다.":"调用对象的方法或访问对象的属性来实现类型描述中描述的接口。\r\n","Представляет небазовую коллекцию пар \"ключ-значение\".":"表示键/值对的非基本集合。\r\n","Ruft den Bezeichner dieses ":"获取此标识符\r\n","Преобразует значение заданного 32-разрядного знакового целого числа в эквивалентное число с плавающей запятой двойной точности.":"将指定的 32 位带符号整数的值转换为其等效的双精度浮点数。\r\n","-Objekt enthält darüber hinaus Informationen zum Erben der Regel durch untergeordnete Objekte, zur Weitergabe der Vererbung sowie zu den Überwachungsbedingungen.":"-Object 还包含有关规则如何被子对象继承、继承如何传播以及监视条件的信息。\r\n","Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in das entsprechende Unicode-Zeichen.":"使用指定的区域性特定格式设置信息，将指定对象的值转换为其等效的 Unicode 字符。\r\n","Содержит атрибуты UCOMITypeInfo.":"包含 UCOMITypeInfo 属性。\r\n","Devuelve el desplazamiento proporcionado cuando se construyó este ":"返回构建时提供的偏移量 \r\n","열거형 멤버와 연결된 값입니다.":"与枚举成员关联的值。\r\n"," в указанном классе, объявленном вызовом неуправляемого кода.":" 在声明为平台调用的指定类中。\r\n","Bewirkt, dass eine Überwachungsmeldung protokolliert wird, wenn ein angegebener Vertrauensnehmer versucht, den Zugriff auf ein Objekt oder Unterobjekte wie Eigenschaften oder Gruppen von Eigenschaften zu erhalten.Der ACE enthält eine Gruppe von Zugriffsrechten, eine GUID, die den Typ des Objekts oder Unterobjekts identifiziert, und ein ":"当指定的受托者试图访问一个对象或子对象（如属性或属性组）时，导致记录审计消息。ACE 包含一组访问权限、一个标识对象或子对象类型的 GUID，以及一个\r\n","의 내부 형식에 대해 ":"关于内部格式\r\n","Значение числа двойной точности с плавающей запятой эквивалентно ":"双精度浮点数的值相当于\r\n","Отменяет все изменения, выполненные в потоке, с которым шел обмен данными, с момента последнего вызова метода ":"撤消自上次调用该方法以来对与之交换数据的线程所做的所有更改\r\n","Ruft den benutzerdefinierten Namen für einen Wörterbuchschlüsselnamen ab oder legt ihn fest.":"Ruft den beutzerdefinierten Namen für einen Wörterbuchschlüsselnamen ab oder legt ihn fest。\r\n","; das heißt, melden Sie sich 10":";即，log 10\r\n","Die erste von zwei zu vergleichenden 64-Bit-Ganzzahlen mit Vorzeichen. ":"要比较的两个 64 位有符号整数中的第一个。\r\n","Obtiene o establece un nombre de miembro de datos. ":"Obtiene o establece un nombre de miembro de datos。\r\n","Этот тип не должен отображаться для браузеров.":"此类型不应呈现给浏览器。\r\n","Инициализатор класса создает исключение. ":"类初始值设定项抛出异常。\r\n","Возвращает заданное 8-битовое целое число без знака; фактическое преобразование не производится.":"返回指定的 8 位无符号整数；没有执行实际的转换。\r\n","매핑할 이름의 수입니다. ":"要映射的名称数。\r\n","이벤트 대리자가 바인딩되어 있는 대상 개체입니다.":"事件委托绑定到的目标对象。\r\n"," 값으로 변환하는 암시적 변환을 정의합니다.":" 定义到值的隐式转换。\r\n","Es true si el byte de ":"它是真实的 si el byte de\r\n","부호 없는 바이트를 ":"无符号字节\r\n","지정된 각도의 하이퍼볼릭 코사인을 반환합니다.":"返回指定角度的双曲余弦值。\r\n","C 스타일 배열의 첫 번째 요소에 대한 포인터입니다.관리되는 코드에서 관리되지 않는 코드로 마샬링하면 배열의 길이는 관리되는 배열의 길이에 의해 결정됩니다.관리되지 않는 코드에서 관리되는 코드로 마샬링할 때 배열의 길이는 문자열 형식 사이에서 구별을 지을 필요가 있는 경우 배열 내 요소의 관리되지 않는 형식이 뒤에 나올 수도 ":"指向C风格数组第一个元素的指针。当从托管代码编组到非托管代码时，数组的长度由托管数组的长度决定。当从非托管代码编组到托管代码时，数组的长度可能如果需要区分字符串类型，则后跟数组中元素的非托管类型。\r\n","Индекс возвращаемого описания переменной. ":"返回变量描述的索引。\r\n","Gibt an, dass ein BLOB ein Objekt enthält.":"指示 BLOB 包含对象。\r\n","Gibt bei Anwendung auf den Member eines Typs an, dass der Member Teil eines Datenvertrags ist und über den ":"当应用于某个类型的成员时，表示该成员是数据协定的一部分并且具有\r\n"," показывает только первый из них.":" 只显示第一个。\r\n","Der Member legt Eigenschaften fest.":"成员设置属性。\r\n","Определяет, что открытый ключ образуется из полного открытого ключа, а не из токена открытого ключа.":"指定公钥派生自完整公钥而不是公钥令牌。\r\n","URI에 포함된 쿼리 정보를 가져오거나 설정합니다.":"获取或设置 URI 中包含的查询信息。\r\n","이 개체는 IConnectionPointWithDefault를 지원하며 기본 동작을 수행합니다.":"此对象支持 IConnectionPointWithDefault 并具有默认行为。\r\n","-Objekt ein Rückruf-ACE-Typ ist.":"object 是一个回调 ACE 类型。\r\n",", der eine nicht zur Basis 10 gehörende Zahl mit Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf. ":"，它代表一个带符号的非 10 进制数，以负号为前缀。\r\n"," angewendet wird.":" 被申请;被应用。\r\n","Число х двойной точности с плавающей запятой такое, что 0 ≤ x ≤":"满足 0 ≤ x ≤ 的双精度浮点数 x\r\n","Gibt das Produkt der beiden ":"返回两者的乘积\r\n","Gibt einen Winkel zurück, dessen Kosinus die angegebene Zahl ist.":"返回余弦为指定数字的角度。\r\n","배열이 관리 코드에서 비관리 코드로 ":"从托管代码到非托管代码的数组\r\n","마지막 마침표(.)와 그 다음에 나오는 모든 문자인 ":"最后一个句点 (.) 及其后的所有字符\r\n","URL에서 전송을 위해 인코딩된 바이트 문자열을 디코딩된 바이트 배열로 변환합니다.":"将编码字节字符串转换为解码字节数组，以便在 URL 中传输。\r\n","Значение, из которого следует вычитать (уменьшаемое).":"要减去的值（减少）。\r\n","8-разрядное целое число без знака, являющееся значением по умолчанию. ":"作为默认值的 8 位无符号整数。\r\n","Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in das entsprechende Unicode-Zeichen.":"将指定的 8 位带符号整数的值转换为等效的 Unicode 字符。\r\n","경과 시간 측정을 방금 시작한 ":"经过时间测量刚刚开始\r\n","-Instanz, die von ":"-实例\r\n","Eine Zahl, die einen Exponenten angibt. ":"指定指数的数字。\r\n","Загружает описание типа, соответствующее заданному идентификатору GUID.":"加载与给定 GUID 对应的类型描述。\r\n","Devuelve un entero de 16 bits con signo convertido a partir de dos bytes en la posición especificada de una matriz de bytes.":"Devuelve 一个 16 位输入 con signo convertido a partir de dos bytes en la posición especificada de una matrix de bytes。\r\n","Eine ganze Zahl, die die Adresse des neu belegten Speicherblocks darstellt.Dieser Speicher muss mit ":"一个整数，表示新分配的内存块的地址\r\n","null oder eine leere Zeichenfolge (\"\") ist.Wenn ":"为 null 或空字符串 (\"\")。如果\r\n","[Поддерживается только в .NET Framework 4.5.1 и более поздних версиях] Инкапсулирует указанный COM-объект в объекте заданного типа.":"[仅在 .NET Framework 4.5.1 及更高版本中受支持] 将指定的 COM 对象封装在指定类型的对象中。\r\n","두 개의 단정밀도 부동 소수점 수 중 더 작은 숫자를 반환합니다.":"返回两个单精度浮点数中较小的一个。\r\n","При возвращении данного метода содержит массив указателей на описания типов, которые содержат имя, заданное в ":"当此方法返回时，包含指向类型声明的指针数组，这些声明包含在\r\n","Исключение, являющееся причиной текущего исключения ":"Исключение, являющееся причиной текущего исключения\r\n"," 구조체를 해제합니다.":" 释放结构。\r\n"," Array codiert werden.":" 数组编码。\r\n","Возвращает тангенс указанного комплексного числа.":"返回指定复数的正切值。\r\n","true, wenn der Aufrufer eine nicht generische Zusammensetzung erfordert.Die Operation wird nur dann fortgesetzt, wenn ":"如果调用者需要非泛型组合，则为 true。只有在以下情况下，操作才会继续\r\n"," 개체의 값이 짝수이면 true이고, 그렇지 않으면 false입니다.":" 개체의 값이 짝수이면 true이고，그렇지 않으면 false입니다。\r\n","Добавляет к данному экземпляру строку, возвращаемую в результате обработки строки составного формата, содержащей ноль или более элементов формата.Каждый элемент формата заменяется строковым представлением любого из двух аргументов с помощью указанного поставщика формата.":"将处理包含零个或多个格式元素的复合格式字符串返回的字符串附加到此实例。使用指定的格式提供程序，每个格式元素都替换为两个参数之一的字符串表示形式。\r\n","구성 요소 자동화 ITypeInfo 인터페이스의 관리되는 정의를 제공합니다.":"提供组件自动化 ITypeInfo 接口的托管定义。\r\n","에 대한 초기 호출(데이터 또는 뷰 advise 연결의 경우) 또는 캐시 업데이트(캐시 연결의 경우)를 수행하도록 요청합니다.":"请求进行初始调用（用于数据或视图咨询连接）或缓存更新（用于缓存连接）\r\n","대/소문자를 구분하지 않는 서수 문자열을 비교하는 ":"比较不区分大小写的序号字符串\r\n","Возвращает значение, определяющее знак 32-битового целого числа со знаком.":"返回指定 32 位带符号整数符号的值。\r\n"," 매개 변수가 같은 .NET Framework 버전을 표시하면 true이고, 그렇지 않으면 false입니다.":" 如果参数指示相同的 .NET Framework 版本，则为 true；否则为 false。\r\n"," verwenden.Wenn Sie diesen Wert verwenden, funktioniert die ":" 使用。如果您使用此值，则\r\n","Идентификатор для текущего объекта ":"当前对象的 ID\r\n","에 해당하는 10진수입니다.":"的十进制等价物。\r\n","소스 인터페이스와 이벤트 공급자 클래스를 사용하여 ":"使用源接口和事件提供程序类 \r\n","-Objekt identifiziert.":"- 对象已识别。\r\n","Ein Name für den Collector.Dieser Parameter ermöglicht Ihnen das Benennen von Collectors, die Typen von Handles separat verfolgen.":"收集器的名称。此参数允许您命名分别跟踪句柄类型的收集器。\r\n","Объект, представляющий указатель ITypeInfo.":"表示 ITypeInfo 指针的对象。\r\n","인터페이스를 제공하는 개체입니다.":"提供接口的对象。\r\n","32-битовое целое число без знака, образованное четырьмя байтами, начинающимися с ":"由 4 个字节组成的 32 位无符号整数\r\n","변환될 8비트 부호 있는 정수입니다. ":"要转换的 8 位有符号整数。\r\n","길이가 1인 문자열입니다. ":"长度为 1 的字符串。\r\n","Показывает имя источника исключения.Обычно это имя приложения.":"显示异常源的名称。这通常是应用程序的名称。\r\n","Требуемое количество байтов памяти.":"所需的内存字节数。\r\n","Преобразует значение заданного объекта в 16-битовое целое число со знаком.":"将指定对象的值转换为 16 位有符号整数。\r\n","Die zurückzugebende Gleitkommazahl mit doppelter Genauigkeit. ":"要返回的双精度浮点数。\r\n","Возвращает значение, определяющее, действительно ли 64-разрядное целое число со знаком меньше или равно значению ":"返回一个值，该值指示一个带符号的 64 位整数是否小于或等于 value\r\n","관리되지 않는 메모리에서 값을 쓸 주소입니다.":"将值写入非托管内存中的地址。\r\n","현재 인스턴스가 측정한 총 경과 시간(타이머 틱 수)을 가져옵니다.":"获取当前实例测量的总运行时间（定时器滴答数）。\r\n","현재 스택 추적 정보를 가져옵니다.":"获取当前堆栈跟踪信息。\r\n","지정된 32비트 부호 없는 정수 값을 해당하는 문자열 표현으로 변환합니다.":"将指定的 32 位无符号整数值转换为其等效的字符串表示形式。\r\n","Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.Этот параметр не учитывается.":"为特定区域性提供格式化信息的对象。忽略此设置。\r\n","Возвращает 16-битовое целое число без знака, преобразованное из двух байтов с указанной позицией в массив байтов.":"返回从指定位置的两个字节转换为字节数组的 16 位无符号整数。\r\n","지정된 64비트 부호 없는 정수를 실제 변환 작업 없이 반환합니다.":"返回指定的 64 位无符号整数而不进行任何实际转换。\r\n","Eine 16-Bit-Ganzzahl x mit Vorzeichen im Bereich 0 ≤ x ≤":"0 ≤ x ≤ 范围内的 16 位有符号整数 x\r\n"," 인스턴스의 표시 문자열을 반환합니다.":" 返回实例的显示字符串。\r\n","래핑된 개체입니다.":"包裹的对象。\r\n","Schließt Objekte in einen Wrapper ein, die der Marshaller als VT_ERROR marshallen soll.":"包装封送拆收器应封送为 VT_ERROR 的对象。\r\n","Указатель на первый элемент массива типа COM VARIANT. ":"指向 COM VARIANT 类型数组的第一个元素的指针。\r\n","Ein zusätzlicher Byteoffset, der dem ":"一个额外的字节偏移对应于\r\n","Der Datums- und Uhrzeitwert, der konvertiert werden soll. ":"要转换的日期和时间值。\r\n","밑이 10인 ":"倒数 10\r\n"," = Plus unendlich0 <":" = 加上无穷大 0 <\r\n"," entdeckt.":" 发现。\r\n","Dieser Member stellt keine tatsächliche Aufrufkonvention dar, sondern verwendet die Standardkonvention für Plattformaufrufe.Unter Windows ist der Standard beispielsweise ":"Dieser Member stellt keine tatsächliche Aufrufkonvention dar, sondern verwendet die Standardconvention für Plattformaufrufe.Unter Windows ist der Standard beispielsweise\r\n"," для добавления. ":" 用于添加。\r\n","Получает элемент в коллекции по указанному индексу в списке, доступном только для чтения.":"获取集合中位于只读列表中指定索引处的元素。\r\n","Das Ergebnis liegt außerhalb des Bereichs von ":"结果超出范围\r\n","Целая часть ":"整个部分\r\n","Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентное 16-разрядное целое число без знака.":"将指定的 64 位无符号整数的值转换为其等效的 16 位无符号整数。\r\n"," 개체에서 메모리 블록에 대한 포인터를 가져옵니다.":" 从对象获取指向内存块的指针。\r\n","Fügt der SACL (System Access Control List), die diesem ":"将 SACL（系统访问控制列表）添加到此\r\n"}