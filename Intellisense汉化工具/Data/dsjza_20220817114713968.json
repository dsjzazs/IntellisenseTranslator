{"Create an area with specified rectangle and weight.":"创建一个具有指定矩形和重量的区域。\r\n","#SYNC_EXTRAS_IGNORE_BACKOFF":"#sync_extras_ignore_backoff\r\n","Returns the translation value for this display list on the Z axis.":"返回Z轴上此显示列表的翻译值。\r\n","Geometry and text drawn with this style will be stroked, respecting\n the stroke-related fields on the paint.":"几何和用这种样式绘制的文字将被触及，尊重\r\n 油漆上的与中风相关的田地。\r\n","Get if the query is marked as strict, as last configured by\n            ":"如果查询被标记为严格，则获取该查询的最后配置\r\n            \r\n",": The device's touch screen is capable of\n            tracking a full hand of fingers fully independently -- that is, 5 or\n            more simultaneous independent pointers.":"：设备的触摸屏能够\r\n            完全独立跟踪一只手指 - 即5或\r\n            更同时独立的指针。\r\n","android.content.ContentResolver.validateSyncExtrasBundle(android.os.Bundle)":"android.content.contentresolver.validatesyncextrasbundle（android.os.bundle）\r\n","android.hardware.Camera.setParameters(android.hardware.Parameters)":"android.hardware.camera.setParameters（android.hardware.parameters）\r\n","Returns the periodic advertising interval, in 1.":"返回定期广告间隔，1。\r\n","Activity Action: Define the meaning of the selected word(s).":"活动动作：定义选定单词的含义。\r\n","Creates a new layer drawable with the list of specified layers.":"使用指定层的列表创建一个可绘制的新图层。\r\n","android.graphics.drawable.GradientDrawable.GradientDrawable(android.graphics.drawable.GradientState, android.content.res.Resources)":"机器人。图形。可画的。GradientDrawable。GradientDrawable（android。图形。可画的。GradientState，android的。内容。资源)\r\n","ApplicationInfo#category":"ApplicationInfo＃类别\r\n","android.graphics.ImageDecoder.setPostProcessor(android.graphics.PostProcessor)":"android.graphics.imagedecoder.setpostprocessor（android.graphics.postprocessor）\r\n","Returns whether the application has requested Memtag to be enabled, disabled, or left\n            unspecified.":"返回该应用程序是否已请求启用，禁用或左派的memtag\r\n            未指定。\r\n","Creates a bitmap of the gesture with a transparent background.":"创建具有透明背景的手势的位图。\r\n","android.content.res.ColorStateList.getChangingConfigurations()":"android.content.Res.ColorStateList.GetChangingConfigurations（）\r\n","android.graphics.drawable.AdaptiveIconDrawable.getExtraInsetFraction()":"android.graphics.drawable.aptiveicondrawable.getExtrainsetFraction（）\r\n","The package that is accessing the permission protected data.":"访问权限受保护数据的软件包。\r\n","android.hardware.Camera.getCameraInfo(int, android.hardware.CameraInfo)":"android.hardware.camera.getCamerainfo（int，android.hardware.camerainfo）\r\n","android.content.pm.ConfigurationInfo.getGlEsVersion()":"android.content.pm.configurationinfo.getglesversion（）\r\n","android.content.Intent.setSourceBounds(android.graphics.Rect)":"android.content.intent.setsourcebounds（android.graphics.Rect）\r\n","android.graphics.RenderNode.getUniqueId()":"android.graphics.rendernode.getuniqueId（）\r\n","Called by a SQLiteCursor when it is released.":"释放时由SQLiteCursor调用。\r\n","Called when the DRM framework sends status or warning information during registration\n and rights acquisition.":"当DRM框架在注册期间发送状态或警告信息时调用\r\n 和权利获取。\r\n","android.graphics.drawable.LayerDrawable.setLayerWidth(int, int)":"android.graphics.drawable.layerdrawable.setlayerwidth（int，int）\r\n","Execute a single SQL statement that is NOT a SELECT\n            or any other SQL statement that returns data.":"执行不是选择的单个SQL语句\r\n            或任何其他返回数据的SQL语句。\r\n"," that allows you to specify the\n user the broadcast will be sent to.":" 这使您可以指定\r\n 用户广播将发送到。\r\n","android.content.Intent.EXTRA_SUSPENDED_PACKAGE_EXTRAS":"android.content.intent.extra_suspended_pa​​ckage_extras\r\n","android.graphics.BitmapFactory":"android.graphics.bitmapfactory\r\n","The array index of far focus distance for use with\n ":"远距离焦点距离的阵列索引\r\n \r\n","android.graphics.Bitmap.copy(android.graphics.Config, boolean)":"android.graphics.bitmap.copy（android.graphics.config，boolean）\r\n","Bit mask of the ui mode.":"Ui模式的位掩码。\r\n","android.content.Intent.ACTION_VIEW":"android.content.intent.action_view\r\n","Activity Action: Dial a number as specified by the data.":"活动动作：拨打数据指定的数字。\r\n","Returns the orientation of the gradient defined in this drawable.":"返回在此drawable中定义的渐变的方向。\r\n","android.content.Intent.METADATA_DOCK_HOME":"android.content.intent.metadata_dock_home\r\n","Callback indicating the result of a descriptor write operation.":"回调表示描述符写操作的结果。\r\n","Draws the AnimatedVectorDrawable into the given canvas.":"将AnimatedVectordRawable绘制到给定的画布中。\r\n","android.content.res.loader.AssetsProvider":"android.content.res.res.loader.assetsprovider\r\n"," if none set.":" 如果没有设置。\r\n","Returns the value of the red component in the range defined by this\n            color's color space (see ":"在此定义的范围内返回红色组件的值\r\n            颜色的颜色空间（请参阅\r\n","Callback#onGetReport(BluetoothDevice, byte, byte, int)":"回调＃OngetReport（蓝牙舞会，字节，字节，int）\r\n","android.content.pm.ApplicationInfo.largestWidthLimitDp":"android.content.pm.applicationinfo.largestwidthlimitdp\r\n","Retrieves the requested column text and stores it in the buffer provided.":"检索请求的列文本并将其存储在提供的缓冲区中。\r\n","Set the beginning of the next contour relative to the last point on the\n            previous contour.":"设置下一个轮廓的开始\r\n            先前的轮廓。\r\n","An integer representing the end of the line has Armentian hyphen (U+058A).":"代表线路末端的整数具有Armentian连字符（U+058A）。\r\n","ContextWrapper":"ContextWrapper\r\n"," extras ":" 额外\r\n","android.content.pm.FeatureInfo.getGlEsVersion()":"android.content.pm.featureinfo.getglesversion（）\r\n","Constant representing success response for Set Report.":"不断代表设定报告的成功响应。\r\n","android.graphics.Paint.setUnderlineText(boolean)":"android.graphics.paint.setunderlineetext（boolean）\r\n","android.content.Context.FILE_INTEGRITY_SERVICE":"android.content.context.file_integrity_service\r\n"," object containing the event that\n            triggered the creation of the Intent it is in.":" 包含事件的对象\r\n            触发了其意图的创造。\r\n","android.R.styleable#AndroidManifestAttribution\n            &lt;attribution&gt;":"Android.r.Stylable＃AndroidManifestAttribution\r\n            ＆lt;属性＆gt;\r\n","android.content.pm.ShortcutManager.FLAG_MATCH_DYNAMIC":"android.content.pm.shortcutmanager.flag_match_dynamic\r\n","android.content.UriMatcher":"android.content.urimatcher\r\n","android.graphics.RectF.writeToParcel(android.os.Parcel, int)":"android.graphics.Rectf.WritEtoparcel（android.os.parcel，int）\r\n","android.database.CursorWindow.isBlob(int, int)":"android.database.cursorwindow.isblob（int，int）\r\n","android.content.pm.ActivityInfo.uiOptions":"android.content.pm.activityinfo.uioptions\r\n","Interface definition for a callback that receives status messages and warnings\n during registration and rights acquisition.":"接收状态消息和警告的回调的接口定义\r\n 在注册和权利获取期间。\r\n","Canvas":"帆布\r\n","android.content.pm.PackageInfo":"android.content.pm.packageinfo\r\n","android.bluetooth.le.AdvertisingSetParameters.includeTxPower()":"android.bluetooth.le.AdvertisingsetParameters.includetxpower（）\r\n","android.content.pm.LauncherActivityInfo.getIcon(int)":"android.content.pm.launcheractivityinfo.geticon（int）\r\n","android.companion.AssociationRequest.DEVICE_PROFILE_WATCH":"android.companion.associationRequest.device_profile_watch\r\n","Return the full name for a given resource identifier.":"返回给定资源标识符的全名。\r\n","android.media.MediaSession2":"android.media.mediasession2\r\n"," to launch the gallery application.":" 启动画廊应用程序。\r\n","android.graphics.drawable.Icon.getUri()":"android.graphics.drawable.icon.geturi（）\r\n"," are stored.":" 存储。\r\n","android.graphics.drawable.ScaleDrawable":"android.graphics.drawable.scaledrawable\r\n","Set this colormatrix to identity:":"Set this colormatrix to identity:\r\n","android.graphics.Rect.toShortString()":"机器人。图形。长toShortString()\r\n","android.content.pm.ApkChecksum":"android.content.pm.apkchecksum\r\n","The SyncAdapter had a problem, most likely with the network connectivity or a timeout\n            while waiting for a network response.":"SyncAdapter有问题，很可能是网络连接或超时的\r\n            在等待网络响应的同时。\r\n","Create a new session using the given parameters, returning a unique ID\n            that represents the session.":"使用给定参数创建新的会话，返回唯一的ID\r\n            代表会话。\r\n","The names of any installed split APKs for this package.":"此软件包的任何安装拆分APK的名称。\r\n","android.content.Context.BLOB_STORE_SERVICE":"android.content.context.blob_store_service\r\n","android.content.Intent.ACTION_TIME_TICK":"android.content.intent.action_time_tick\r\n","Dispatches a change notification to the observer.":"向观察者发送更改通知。\r\n","Starts the settings activity to show the application details for a\n            package in the specified profile.":"启动设置活动以显示应用程序的详细信息\r\n            指定配置文件中的包装。\r\n","Specifies the hotspot's location within the drawable.":"指定可绘制的热点位置。\r\n","Returns the signing certificates used to sign the APK contents of this application.":"返回用于签署此应用程序的APK内容的签名证书。\r\n","android.graphics.Paint.reset()":"android.graphics.paint.reset（）\r\n","android.content.res.loader.ResourcesProvider.loadFromApk(android.os.ParcelFileDescriptor, android.content.res.loader.AssetsProvider)":"android.content.res.res.loader.resourcesprovider.loadfromapk（android.os.parcelfiledScriptor，android.content.res.res.res.res.res. loader.assetsprovider）\r\n","android.content.pm.PackageManager.FEATURE_WATCH":"android.content.pm.packagemanager.feature_watch\r\n","BluetoothProfile#STATE_CONNECTING":"BluetoothProfile＃state_connecting\r\n","android.graphics.Camera.setLocation(float, float, float)":"android.graphics.camera.setlocation（浮点，浮点，浮点）\r\n","android.database.DatabaseUtils.appendValueToSql(java.lang.StringBuilder, java.lang.Object)":"android.database.databaseutils.appendvaluetosql（java.lang.stringbuilder，java.lang.Object）\r\n","RestrictionEntry#TYPE_BOOLEAN":"限制性＃type_boolean\r\n","Retrieve all of the information we know about a particular\n            instrumentation class.":"检索我们知道的有关特定的所有信息\r\n            仪器类。\r\n","android.content.RestrictionEntry.RestrictionEntry(java.lang.String, boolean)":"android.content.grestrictionernry.gresternityentry（java.lang.string，boolean）\r\n","android.content.pm.ConfigurationInfo.INPUT_FEATURE_FIVE_WAY_NAV":"android.content.pm.configurationinfo.input_feature_five_way_nav\r\n","The canonical filename of the OBB.":"OBB的规范文件名。\r\n","android.content.pm.PackageManager.resolveContentProvider(java.lang.String, int)":"android.content.pm.PackageManager.resolveContentProvider(java.lang.String,int)\r\n","android.content.Intent.EXTRA_ALARM_COUNT":"android.content.intent.extra_alarm_count\r\n"," to access\n            ":" 访问\r\n            \r\n","PixelFormat#UNKNOWN PixelFormat.UNKNOWN":"pixelformat＃未知Pixelformat.inknown\r\n","android.content.Loader.isStarted()":"android.content.loader.isstarted（）\r\n","Used to add parameters to a ":"用于将参数添加到一个\r\n","Broadcast Action:  External media is present but cannot be mounted.":"广播动作：存在外部媒体，但不能安装。\r\n","android.content.pm.InstallSourceInfo.getInitiatingPackageSigningInfo()":"android.content.pm.installsourceinfo.getInitiatingPackagesIgningInfo（）\r\n","if you are not allowed to remove the\n given permission name.":"如果您不允许删除\r\n 给定权限名称。\r\n","Icon#createWithData(byte[], int, int)":"图标＃createWithData（byte []，int，int）\r\n","ProcessedData":"Processeddata\r\n","Radius value that specifies the ripple radius should be computed based\n            on the size of the ripple's container.":"指定波纹半径的半径值应基于计算\r\n            在涟漪容器的大小上。\r\n",", but returns the URI as an encoded\n            String.":"，但以编码为编码的URI\r\n            细绳。\r\n","Builds caches associated with the bitmap that are used for drawing it.":"构建与用于绘制它的位图关联的缓存。\r\n","android.content.pm.ApplicationInfo.compileSdkVersionCodename":"android.content.pm.applicationinfo.compilesdkversioncodeName\r\n","android.graphics.Matrix.setSinCos(float, float, float, float)":"android.graphics.matrix.setsincos（浮点，浮点，浮点，浮点）\r\n","android.content.pm.PackageManager.getPackageArchiveInfo(java.lang.String, int)":"android.content.pm.packagemanager.getpackagearchiveinfo（java.lang.string，int）\r\n",": If this feature is supported, the Vulkan\n            implementation on this device is hardware accelerated, and the Vulkan native API will\n            enumerate at least one ":"：如果支持此功能，则为Vulkan\r\n            该设备上的实现是加速的，Vulkan Native API将\r\n            枚举至少一个\r\n","The version name of this package, as specified by the &lt;manifest&gt;\n            tag's ":"该软件包的版本名称，如＆lt; subtest＆gt;\r\n            标签\r\n","android.database.AbstractCursor.mUpdatedRows":"机器人。数据库。AbstractCursor.mUpdatedRows\r\n","android.content.pm.SigningInfo.hasMultipleSigners()":"android.content.pm.signinginfo.hasmultiplesigners（）\r\n","Utility functions for gesture processing & analysis, including methods for:\n            <ul> \n            <li>feature extraction (e.":"用于手势处理和分析的实用程序功能，包括：\r\n            <ul>\r\n            <li>特征提取（e。\r\n","#ACTION_UNINSTALL_PACKAGE":"#action_uninstall_package\r\n","android.graphics.BitmapRegionDecoder.newInstance(java.lang.String)":"android.graphics.bitmapregiondecoder.newinstance（java.lang.string）\r\n","A constant CharSequence that is associated with the Intent, used with\n            ":"与意图相关的持续炭化序列\r\n            \r\n","android.content.res.Resources.getResourcePackageName(int)":"android.content.Res.Res.Resources.getResourcepackagagename（int）\r\n","Activity Action: Show activity for reporting a bug.":"活动动作：显示用于报告错误的活动。\r\n","Retrieve the resources for an application.":"检索应用程序的资源。\r\n","\n            for accessing the device vibrators, interacting with individual ones and playing synchronized\n            effects on multiple vibrators.":"\r\n            用于访问设备振动器，与单个振动器进行交互并播放同步\r\n            对多个振动器的影响。\r\n","Initializes a new instance of the Color struct.":"初始化Color结构的新实例。\r\n","android.bluetooth.BluetoothGattDescriptor.getValue()":"android.bluetooth.bluetoothgattdescriptor.getValue（）\r\n","Return the attribution tag of the caller that initiated the request being\n            processed on the current thread.":"返回启动请求的呼叫者的归因标签\r\n            在当前线程上处理。\r\n","Returns the application info for the appliction this activity belongs to.":"返回该活动所属于的申请的应用程序信息。\r\n","NotificationListenerService":"NotificationListenerService\r\n","android.R.styleable#Extra &lt;extra&gt;":"android.r.s旋转＃extra＆lt; extra＆gt;\r\n","Retrieve the identifier for this Intent.":"检索此意图的标识符。\r\n","Implement this to support refresh of content identified by ":"实施此操作以支持刷新的内容\r\n","Closes the object and release any system resources it holds.":"关闭对象并释放其持有的任何系统资源。\r\n","#ACTION_SEND":"#action_send\r\n","Holds information about a specific\n            ":"持有有关特定的信息\r\n            \r\n","android.content.Context.getSystemService(java.lang.Class)":"android.content.context.getSystemservice（java.lang.class）\r\n","Return the entry name for a given resource identifier.":"返回给定资源标识符的输入名称。\r\n","android.os.Environment#DIRECTORY_ALARMS":"android.os.Environment＃Directory_alarms\r\n","android.bluetooth.BluetoothGattService.SERVICE_TYPE_SECONDARY":"android.bluetooth.bluetoothgattservice.service_type_secondary\r\n","if the camera cannot be unlocked.\n":"如果相机无法解锁。\r\n\r\n","android.graphics.drawable.AnimationDrawable.isRunning()":"android.graphics.drawable.animationdrawable.isrunning（）\r\n","Indicates the local Bluetooth adapter is on, and ready for use.":"指示本地蓝牙适配器已打开，并可以使用。\r\n","Gets the start position of this cursor window. -or- Sets the start position of this cursor window.":"获取此光标窗口的开始位置。 - 或 - 设置此光标窗口的开始位置。\r\n","#configChanges":"#configchanges\r\n","Returns true if the operation represents an insertion, deletion, or update.":"如果操作表示插入，删除或更新，则返回true。\r\n","android.database.AbstractCursor.mClosed":"机器人。数据库。AbstractCursor.麦克洛斯\r\n","android.content.pm.ServiceInfo.FLAG_ISOLATED_PROCESS":"android.content.pm.ServiceInfo.FLAG_ISOLATED_PROCESS\r\n","android.bluetooth.BluetoothGattCharacteristic.PROPERTY_SIGNED_WRITE":"android.bluetooth.bluetoothgattcharacteristic.property_signed_write\r\n","android.graphics.Camera.getLocationZ()":"android.graphics.camera.getLocationz（）（）\r\n","Gets the supported flash modes.":"获取受支持的闪存模式。\r\n",", without\n            affecting the underlying allocation backing the bitmap.":"， 没有\r\n            影响基于备份位图的基础分配。\r\n","android.database.sqlite.SQLiteCursorDriver.cursorClosed()":"机器人。数据库。sqlite。SQLiteCursorDriver.cursorClosed（）\r\n","Broadcast Action:  The device has exited USB Mass Storage mode.":"广播动作：该设备已退出USB质量存储模式。\r\n","#ACTION_ASSIST":"#action_assist\r\n","Take a persistable URI permission grant that has been offered.":"获得已提供的持久性URI许可赠款。\r\n","android.drm.DrmInfoStatus.data":"android.drm.drminfostatus.data\r\n"," for handling management\n            of fingerprints.":" 用于处理管理\r\n            指纹。\r\n","android.content.RestrictionsManager.REQUEST_KEY_DENY_LABEL":"android.content.strictionsmanager.request_key_deny_label\r\n","android.content.pm.ApplicationInfo.appComponentFactory":"android.content.pm.applicationinfo.appcomponentFactory\r\n","Gets the minimum exposure compensation index.":"获取最低曝光补偿指数。\r\n","android.drm.DrmEvent.DRM_INFO_STATUS_OBJECT":"android.drm.drmevent.drm_info_status_object\r\n","repeat the shader's image horizontally and vertically\n":"水平和垂直重复着色器的图像\r\n\r\n","ActivityManager#isLowRamDevice() ActivityManager.isLowRamDevice()":"ActivityManager＃islowramdevice（）ActivityManager.islowramdevice（）\r\n","#openOrCreateDatabase":"#openorcreateatatabase\r\n","Verifies that the specified byte array is a valid 9-patch data chunk.":"验证指定的字节数组是有效的9点数据块。\r\n","Deletes row(s) specified by a content URI.":"删除由内容URI指定的行。\r\n","DrmManagerClient.OnEventListener":"drmmanagerclient.oneventlistener\r\n","android.bluetooth.le.ScanResult.SID_NOT_PRESENT":"android.bluetooth.le.scanresult.sid_not_present\r\n","Append a chunk to the ":"将一块添加到\r\n","android.content.SyncStats.numDeletes":"android.content.syncstats.numdeletes\r\n","Throws NotFoundException if the given ID does not exist.\n":"如果给定的ID不存在，则抛出NotFoundException。\r\n\r\n","Returns true if the receiver is currently processing an ordered\n            broadcast.":"如果接收者当前正在处理订购，则返回true\r\n            播送。\r\n","android.content.pm.ApplicationInfo.ZEROINIT_DISABLED":"android.content.pm.applicationinfo.zeroinit_disabled\r\n","SQL-escape a string.":"sql-escape a字符串。\r\n","android.content.Context.SYSTEM_HEALTH_SERVICE":"android.content.Context.System_Health_service\r\n","Retrieves the MIME type embedded in the original content.":"检索嵌入原始内容中的MIME类型。\r\n","android.R.attr#launchMode":"android.r.attr＃启动模式\r\n","android.content.pm.ApplicationInfo.isProfileableByShell()":"android.content.pm.applicationinfo.isprofilablebyshell（）\r\n","The MIME type for data whose type is otherwise unknown.":"该类型原本未知的数据的MIME类型。\r\n","Returns the ID of this color space.":"返回此颜色空间的ID。\r\n","\n            containing a ":"\r\n            包含一个\r\n","For debugging, converts an instance of the Loader's data class to\n            a string that can be printed.":"对于调试，将加载程序数据类的实例转换为\r\n            可以打印的字符串。\r\n","android.graphics.Canvas.drawTextRun(android.graphics.text.MeasuredText, int, int, int, int, float, float, boolean, android.graphics.Paint)":"android.graphics.canvas.drawtextrun（android.graphics.text.measuredText，int，int，int，int，int，int，int，float，float，float，boolean ,， graphics.graphics.paint）\r\n","Constant representing card reader subclass.":"恒定代表读卡器子类。\r\n","Return PackageManager instance to find global package information.":"返回PackageManager实例以查找全局软件包信息。\r\n"," with no options\n specified.":" 没有选择\r\n 指定的。\r\n","Preconcat the current matrix with the specified scale.":"用指定的比例预先设置当前矩阵。\r\n","The name of the package on behalf of which the initiating package requested the installation,\n            or null if not available.":"代表启动包请求安装的包裹的名称，\r\n            或null如果不可用。\r\n","\n            with the lower bits.":"\r\n            与较低的位。\r\n","ContentObserver#dispatchChange(boolean)":"ContentObserver＃dispatchchange（布尔值）\r\n","This is like ":"这就像\r\n","Registers an ":"寄存器\r\n","android.graphics.LayerRasterizer":"android.graphics.layerrasterizer\r\n","android.graphics.Paint.getTextRunAdvances(char[], int, int, int, int, boolean, float[], int)":"android.graphics.paint.gettextrunadvances（char []，int，int，int，int，int，boolean，float []，int）\r\n","Returns absolute paths to application-specific directories on all\n            shared/external storage devices where the application can place cache\n            files it owns.":"将绝对路径返回到所有方面的专用目录\r\n            该应用程序可以放置缓存的共享/外部存储设备\r\n            它拥有的文件。\r\n","android.content.pm.ResolveInfo.preferredOrder":"android.content.pm.resolveinfo.preferredorder\r\n","Advertise data packet container for Bluetooth LE advertising.":"广告蓝牙LE广告的数据包容器。\r\n","android.content.pm.PackageInfo.splitRevisionCodes":"android.content.pm.packageinfo.splitrevisioncodes\r\n","android.content.pm.PackageManager.getApplicationIcon(java.lang.String)":"android.content.pm.packagemanager.getApplicationicon（java.lang.string）\r\n","YCbCr format used for images, which uses YUYV (YUY2) encoding format.":"YCBCR格式用于图像，使用YUYV（YUY2）编码格式。\r\n","Returns the advertise mode.":"返回广告模式。\r\n","Initiate a connection to a Bluetooth GATT capable device.":"启动连接到蓝牙Gatt设备。\r\n","#getExternalFilesDir(String)":"#getExternalFilesdir（String）\r\n","The same as ":"与\r\n","No special parcel contents.":"没有特殊的包裹内容。\r\n","android.bluetooth.le.BluetoothLeAdvertiser.startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters, android.bluetooth.le.AdvertiseData, android.bluetooth.le.AdvertiseData, android.bluetooth.le.PeriodicAdvertisingParameters, android.bluetooth.le.AdvertiseData, android.bluetooth.le.AdvertisingSetCallback)":"android.bluetooth.le.BluetoothLeAdvertiser.startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters, android.bluetooth.le.AdvertiseData, android.bluetooth.le.AdvertiseData, android.bluetooth.le.PeriodicAdvertisingParameters, android.bluetooth.le.AdvertiseData, android.bluetooth.le.AdvertisingsetCallback）\r\n","android.content.ContentResolver.getCurrentSyncs()":"android.content.contentresolver.getCurrentsyncs（）\r\n","android.graphics.drawable.Drawable.setTint(int)":"机器人。图形。可画的。可画的。设置(int)\r\n","A representation of a item using ContentValues.":"使用ContentValues的项目表示。\r\n","android.graphics.Matrix.setValues(float[])":"android.graphics.matrix.setValues（float []）\r\n","The request type passed in the ":"请求类型通过\r\n","android.content.RestrictionEntry.setRestrictions(android.content.RestrictionEntry[])":"android.content.grestrictioner.setrestrictions（android.content.resterictionertry []）\r\n","The array index of optimal focus distance for use with\n ":"最佳聚焦距离的阵列索引可用于\r\n \r\n"," which are listed in ":" 在\r\n","Sets the fields in this object to those in the given Configuration.":"将此对象中的字段设置为给定配置中的字段。\r\n","android.bluetooth.le.ScanResult.isConnectable()":"android.bluetooth.le.scanresult.isconnectable（）\r\n","android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(java.io.File, android.database.sqlite.CursorFactory)":"android.database.sqlite.sqlitedatabase.openorcreateatabase（java.io.file，android.database.sqlite.cursorFactory）\r\n","android.graphics.NinePatch.draw(android.graphics.Canvas, android.graphics.Rect)":"android.graphics.ninepatch.draw（android.graphics.canvas，android.graphics.Rect）\r\n","Execute a statement that returns a 1 by 1 table with a text value.":"执行一个语句，该语句返回具有文本值的1乘1表。\r\n","android.content.res.Resources.getDrawable(int)":"android.content.res.resources.getDrawable（int）\r\n","#EXTRA_VENDOR_SPECIFIC_HEADSET_EVENT_CMD_TYPE":"#EXTRA_VENDOR_SPECIFIC_HEADSET_EVENT_CMD_TYPE\r\n","Creates a ResourcesProvider from an APK (":"从APK创建资源提供者（\r\n","The name of the package responsible for the installation (the installer of record), or null\n            if not available.":"负责安装的软件包的名称（记录的安装程序）或null\r\n            如果没有。\r\n","Bluetooth LE scan callbacks.":"蓝牙LE扫描回调。\r\n","[Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc] ":"[sa +（1 -sa）*da，rc = sc +（1 -sa）*dc]\r\n","If known, this string is set to the mimetype of the decoded image.":"如果已知，则将此字符串设置为解码图像的模拟型。\r\n","Creates a new ColorDrawable with the specified color.":"创建一个具有指定颜色的新综合性。\r\n","Long#MAX_VALUE":"长＃max_value\r\n","Apply this matrix to the array of 2D points specified by src, and write the transformed\n            points into the array of points specified by dst.":"将此矩阵应用于SRC指定的2D点的数组，并编写转换\r\n            指定DST指定的点的点。\r\n","android.content.pm.InstallSourceInfo":"android.content.pm.installsourceinfo\r\n","A rights-protected file object type.":"受版权保护的文件对象类型。\r\n",": The device's\n            ":"：设备的\r\n            \r\n","ScanSettings#CALLBACK_TYPE_ALL_MATCHES":"SCANSETTINGS＃CALLBACK_TYPE_ALL_MATCHES\r\n","android.content.Intent.CATEGORY_EMBED":"android.content.intent.category_embed\r\n","#getData()":"#getData（）\r\n","Return a String array of all the assets at the given path.":"返回给定路径上所有资源的字符串数组。\r\n","Set whether or not the provider is synced when it receives a network tickle.":"设置提供商是否在收到网络挠痒痒的情况下同步。\r\n","Secondary service (included by primary services)":"二级服务（由主要服务包括）\r\n","android.database.sqlite.SQLiteProgram.bindDouble(int, double)":"android.database.sqlite.sqliteprogram.binddouble（int，double）\r\n","Retrieve information for a particular module.":"检索特定模块的信息。\r\n","This value is defined only for continuous and on-change sensors.":"此值仅针对连续和换频传感器定义。\r\n","Throws NotFoundException if the given ID does not exist.\n\n":"如果给定的ID不存在，则抛出NotFoundException。\r\n\r\n\r\n","Activity Action: Launch an activity showing the app information.":"活动动作：启动一个显示应用程序信息的活动。\r\n","android.content.ClipData.newHtmlText(java.lang.CharSequence, java.lang.CharSequence, java.lang.String)":"android.content.clipdata.newhtmltext（java.lang.Charsequence，Java.lang.Charsequence，Java.lang.String）\r\n","android.content.res.Resources.getDimensionPixelSize(int)":"android.content.res.resources.getDimensionPixelsize（int）\r\n","Returns the type of the field at the specified row and column index.":"返回指定行和列索引处的字段类型。\r\n","Same as lineTo, but the coordinates are considered relative to the last\n            point on this contour.":"与Lineto相同，但坐标相对于最后\r\n            指向此轮廓。\r\n","android.app.Activity#RESULT_CANCELED":"android.app.Activity＃result_canceled\r\n","This extra can be used with any Intent used to launch an activity, supplying information\n            about who is launching that activity.":"此额外可以与任何用于启动活动的意图一起使用，提供信息\r\n            关于谁在发起该活动。\r\n","android.content.ContentProvider.canonicalize(android.net.Uri)":"android.content.contentprovider.caronicalize（android.net.uri）\r\n","Preconcats the matrix with the specified skew.":"用指定的偏斜将矩阵预联合。\r\n","Delete an existing private SQLiteDatabase associated with this Context's\n            application package.":"删除与此上下文关联的现有私有sqlitedatabase\r\n            应用程序包。\r\n","OnDrawableLoadedListener#onDrawableLoaded notified":"OnDrawableLoadedListener＃onDrawableLoaded通知\r\n","Get the width of the picture as passed to beginRecording.":"获取图片的宽度，以便开始进行记录。\r\n","Determine whether the given permission is allowed for a particular\n            process and user ID running in the system.":"确定是否允许给定的特定许可\r\n            系统中运行的过程和用户​​ID。\r\n","android.content.pm.PackageInfo.REQUESTED_PERMISSION_GRANTED":"android.content.pm.packageinfo.requested_permission_granted\r\n","android.graphics.RenderNode.setUseCompositingLayer(boolean, android.graphics.Paint)":"android.graphics.rendernode.setusecompositinglayer（boolean，android.graphics.paint）\r\n","android.graphics.AvoidXfermode.AvoidXfermode(int, int, android.graphics.Mode)":"android.graphics.avoidxfermode.avoidxfermode（int，int，android.graphics.mode）\r\n","android.content.pm.PackageInfo.requestedPermissionsFlags":"android.content.pm.packageinfo.Requestedpermissionsflags\r\n","android.graphics.drawable.InsetDrawable":"android.graphics.drawable.setdrable\r\n","The minimum ID value a color space can have.":"颜色空间可以拥有的最小ID值。\r\n","android.drm.DrmManagerClient.removeRights(java.lang.String)":"android.drm.drmmanagerclient.removerights（java.lang.string）\r\n","android.content.pm.ProviderInfo.pathPermissions":"android.content.pm.providerinfo.pathpermissions\r\n","Size of the code (e.":"代码的大小（e。\r\n","android.bluetooth.BluetoothHeadset.getConnectionState(android.bluetooth.BluetoothDevice)":"android.bluetooth.bluetoothheadsets.getConnectionState（android.bluetooth.bluetoothdevice）\r\n","android.content.Loader.unregisterOnLoadCanceledListener(android.content.OnLoadCanceledListener)":"android.content.loader.unregisteronloadCanceLedListener（android.content.onloadCanceLedListener）\r\n","ContentProvider#delete":"ContentProvider＃DELETE\r\n","This allows clients to request an explicit refresh of content identified\n            by ":"这使客户可以明确刷新已确定的内容\r\n            经过\r\n","android.content.res.TypedArray.getFloat(int, float)":"android.content.res.typedarray.getFloat（int，float）\r\n","Indicates the local Bluetooth adapter is off.":"指示本地蓝牙适配器已关闭。\r\n","android.graphics.drawable.ClipDrawable.ClipDrawable(android.graphics.drawable.Drawable, int, int)":"android.graphics.drawable.clipdrable.clipdrable（android.graphics.drawable.drawable.drawable，int，int）\r\n","android.graphics.Region.translate(int, int, android.graphics.Region)":"android.graphics.gregion.translate（int，int，android.graphics.region）\r\n","android.graphics.NinePatch.getTransparentRegion(android.graphics.Rect)":"android.graphics.ninepatch.getTransparentRegion（android.graphics.Rect）\r\n","#WRITE_TYPE_DEFAULT":"#WRITE_TYPE_DEFAULT\r\n","Retrieve all of the information we know about a particular receiver\n            class.":"检索我们知道的有关特定接收器的所有信息\r\n            班级。\r\n","android.content.RestrictionEntry.TYPE_NULL":"android.content.gresterriceentry.type_null\r\n","Implement this to initialize your content provider on startup.":"实施此功能以初始化您的内容提供商在启动时。\r\n"," to repeat infinitely.":" 无限重复。\r\n","android.bluetooth.BluetoothHeadset.ACTION_AUDIO_STATE_CHANGED":"android.bluetooth.bluetoothheadset.action_audio_state_changed\r\n","android.graphics.RenderNode.setCameraDistance(float)":"机器人。图形。RenderNode。setCameraDistance（浮动）\r\n"," clause of this query.":" 此查询的条款。\r\n","android.database.CursorWindow.getLong(int, int)":"android.database.cursorwindow.getlong（int，int）\r\n","Retrieve the official name associated with a uid.":"检索与UID相关的官方名称。\r\n","android.content.ContentResolver.update(android.net.Uri, android.content.ContentValues, android.os.Bundle)":"android.content.contentresolver.update（android.net.uri，android.content.contentvalues，android.os.bundle）\r\n","Broadcast Action:  A new video is recorded by the camera, and the entry\n            of the video has been added to the media store.":"广播动作：相机记录了一个新视频，条目\r\n            该视频已添加到媒体店。\r\n","Return the drawable's dirty bounds Rect.":"返回可绘制的肮脏边界。\r\n","Return the paint's color in sRGB. -or- Set the paint's color.":"在SRGB中返回油漆的颜色。 - 或 - 设置油漆的颜色。\r\n","android.hardware.Sensor.isDynamicSensor()":"android.hardware.sensor.isdynamicsensor（）\r\n","android.hardware.Camera.autoFocus(android.hardware.AutoFocusCallback)":"android.hardware.camera.autofocus（android.hardware.autofocuscallback）\r\n","An entity class that wraps the result of a \n            ":"一个包裹结果的实体课程\r\n            \r\n","This exception is thrown when a call to ":"打电话给\r\n","android.content.RestrictionsManager.META_DATA_APP_RESTRICTIONS":"android.content.strictionsmanager.meta_data_app_restrictions\r\n",": typically set\n            by a ":"：通常设置\r\n            由\r\n","android.graphics.drawable.RotateDrawable.setPivotX(float)":"android.graphics.drawable.RotatedRawable.setpivotx（float）\r\n","Descriptor permission: Allow encrypted writes":"描述符许可：允许加密写作\r\n","android.content.ContentProvider.openPipeHelper(android.net.Uri, java.lang.String, android.os.Bundle, java.lang.Object, android.content.PipeDataWriter)":"android.content.contentprovider.openpipehelper（android.net.uri，java.lang.string，android.os.bundle，java.lang.object，android.content.content.content.pipedatawriter）\r\n","Cancel any active or pending syncs that match the Uri.":"取消与URI匹配的任何活动或待处理的同步。\r\n","Feature to print a document.":"打印文档的功能。\r\n","Counter for tracking how many entries, either from the server or the local store, were\n            ignored during the sync operation.":"跟踪跟踪服务器或本地商店有多少条条目的计数器\r\n            在同步操作期间被忽略。\r\n","android.content.Intent.ACTION_SCREEN_OFF":"android.content.intent.action_screen_off\r\n","Take people pictures.":"拍照。\r\n","android.content.pm.PackageManager.getActivityIcon(android.content.Intent)":"android.content.pm.packagemanager.getActivityicon（android.content.intent）\r\n","Return a copy of the drawable's bounds in the specified Rect (allocated\n            by the caller).":"返回指定矩形中可绘制的界限的副本（分配\r\n            由呼叫者）。\r\n","android.graphics.RenderNode.getClipToBounds()":"android.graphics.rendernode.getCliptobounds（）\r\n","Value for justification mode indicating no justification.":"理由模式的价值表示没有理由。\r\n",", but for use when you do\n            not trust the stability of the target content provider.":"，但是当您这样做时使用\r\n            不相信目标内容提供商的稳定性。\r\n"," to the calling app.":" 到调用应用程序。\r\n","Close this GATT server instance.":"关闭此Gatt服务器实例。\r\n","This method begins an asynchronous query.":"此方法开始异步查询。\r\n",": attempt to sync the change\n            to the network.":"：尝试同步更改\r\n            到网络。\r\n","android.content.res.TypedArray":"android.content.Res.TypedArray\r\n","android.graphics.drawable.BitmapDrawable.BitmapDrawable(java.io.InputStream)":"android.graphics.drawable.bitmapdrable.bitmapdrable（java.io.inputstream）\r\n","android.database.sqlite.SQLiteOpenHelper.close()":"android.database.sqlite.sqliteopenhelper.close（）\r\n",":\n            The device has a full implementation of the android.":"：\r\n            该设备具有完整的Android实现。\r\n","android.content.Context.registerComponentCallbacks(android.content.ComponentCallbacks)":"android.content.context.registercomponentCallbacks（android.content.componentCallbacks）\r\n","android.R.styleable#AndroidManifest_versionName versionName":"android.r.Stylable＃androidManifest_versionName版本名称\r\n","android.content.pm.PackageManager.setApplicationEnabledSetting(java.lang.String, int, int)":"android.content.pm.packagemanager.setapplicationenabledsetting（java.lang.string，int，int）\r\n","Returns the generation ID of this bitmap.":"返回此位图的生成ID。\r\n","#SCREENLAYOUT_SIZE_SMALL":"#screenlayout_size_small\r\n","The NORMAL style of the default monospace typeface.":"默认单义字体的正常样式。\r\n",": true when the application has requested a\n large heap for its processes. ":"：true当应用程序请求\r\n 大量的过程。\r\n","Sets the flag indicating that this receiver should abort the\n            current broadcast; only works with broadcasts sent through\n            ":"设置标志，表明该接收器应中止\r\n            当前广播；仅与发送的广播一起工作\r\n            \r\n","android.graphics.drawable.ShapeDrawable":"android.graphics.drawable.shapepable\r\n","Packs the sRGB color defined by the specified red, green and blue component\n            values into an RGBA color long in the sRGB color space.":"包装由指定的红色，绿色和蓝色组件定义的SRGB颜色\r\n            在SRGB颜色空间中重视rgba颜色。\r\n","android.content.Context.createDeviceProtectedStorageContext()":"android.content.context.CreatedEdeDeviceProtectedStorageContext（）\r\n","android.content.ContentProviderClient.query(android.net.Uri, java.lang.String[], android.os.Bundle, android.os.CancellationSignal)":"android.content.contentproviderclient.query（android.net.uri，java.lang.string []，android.os.bundle，android.os.os.cancellationsignal）\r\n","Set the region to the area described by the path and clip.":"将区域设置为路径和夹子描述的区域。\r\n","Retrieve an image from a package.":"从包装中检索图像。\r\n","Return true if the specified path, after being transformed by the\n            current matrix, would lie completely outside of the current clip.":"如果指定的路径返回true，则在被转换后\r\n            当前矩阵将完全位于当前夹子外。\r\n","Creates a ColorStateList from an XML document.":"从XML文档中创建ColorStateList。\r\n","F:Android.Bluetooth.BluetoothHealthCallback.OnHealthAppConfigurationStatusChange":"F：android.bluetooth.bluetoothhealthcallback.onhealthappConfigurationStatusChange\r\n",": true when the application's window can be\n increased in size for extra large screens. ":"：true当应用程序的窗口可以\r\n 大屏幕的大小增加。\r\n","Prints the contents of a Cursor to a String.":"将光标的内容打印到字符串。\r\n","android.bluetooth.BluetoothGattCallback.onReadRemoteRssi(android.bluetooth.BluetoothGatt, int, int)":"android.bluetooth.bluetoothgattcallback.onreadremoterssi（android.bluetooth.bluetoothgatt，int，int）\r\n","Full path to the publicly available parts of ":"通往公开部分的完整道路\r\n","android.content.res.Configuration.COLOR_MODE_WIDE_COLOR_GAMUT_YES":"android.content.res.configuration.color_mode_wide_color_gamut_yes\r\n","Typeface":"字体\r\n","android.content.pm.Checksum.TYPE_WHOLE_MD5":"android.content.pm.checksum.type_whole_md5\r\n","Return the package name of this component.":"返回此组件的包装名称。\r\n","if any of the required parameters are missing.\n":"如果缺少任何必需的参数。\r\n\r\n","Callback indicating when GATT client has connected/disconnected to/from a remote\n            GATT server.":"回调指示GATT客户端何时已连接/从远程连接/断开连接\r\n            GATT服务器。\r\n","Create a BluetoothHidDeviceAppQosSettings object for the Bluetooth L2CAP channel.":"为蓝牙L2CAP通道创建一个蓝牙Hiddeviceappqostets对象。\r\n","Called when an asynchronous delete is completed.":"当异步删除完成时称为。\r\n","android.database.sqlite.SQLiteDatabase.isWriteAheadLoggingEnabled()":"android.database.sqlite.sqlitedatabase.iswriteaheadloggingEnabled（）\r\n","Removes loaders from the list of loaders.":"从加载程序列表中删除加载程序。\r\n","android.graphics.drawable.PictureDrawable.setPicture(android.graphics.Picture)":"android.graphics.drawable.picturedrawable.setpicture（android.graphics.picture）\r\n","'s layout_width and layout_height\n            attributes.":"的layout_width和layout_height\r\n            属性。\r\n","android.content.pm.PackageManager.FEATURE_KEYSTORE_LIMITED_USE_KEY":"android.content.pm.packagemanager.feature_keystore_limited_use_key\r\n"," will be throw.":" 会被扔。\r\n","Sets the type of shape used to draw the gradient.":"设置用于绘制梯度的形状类型。\r\n","android.bluetooth.le.AdvertisingSetParameters.INTERVAL_MAX":"android.bluetooth.le.AdvertisingsetParameters.interval_max\r\n","Convenience method for callers that want to have FontMetrics values as\n integers.":"想要具有字体值值的呼叫者的便利方法\r\n 整数。\r\n","android.content.pm.ApplicationInfo.compatibleWidthLimitDp":"android.content.pm.applicationinfo.com.patiblewidthlimitdp\r\n",": If this feature is supported, the device supports\n            ":"：如果支持此功能，则设备支持\r\n            \r\n","Returns a set of all of the keys":"返回一组所有密钥\r\n","Returns the string necessary for grammatically correct pluralization\n            of the given resource ID for the given quantity.":"返回语法正确多元化所需的字符串\r\n            给定数量的给定资源ID。\r\n","Create a new clip.":"创建一个新剪辑。\r\n","android.content.pm.PackageManager.getBackgroundPermissionOptionLabel()":"android.content.pm.packagemanager.getBackgroundPermissionOptionLabel（）\r\n","Get the paint's maskfilter object.":"获取油漆的口罩对象。\r\n","Thrown if the resources for application\n             matching the given intent could not be loaded.":"如果申请资源\r\n             匹配给定的意图无法加载。\r\n","android.graphics.YuvImage.getYuvFormat()":"android.graphics.yuvimage.getyuvformat（）\r\n","The default BOLD typeface object.":"默认粗体字体对象。\r\n",": The device's touch screen supports\n            multitouch sufficient for basic two-finger gesture detection.":"：设备的触摸屏支持\r\n            多点足以足以实现基本的两指手势检测。\r\n","android.graphics.Canvas.saveLayer(android.graphics.RectF, android.graphics.Paint)":"机器人。图形。帆布。saveLayer（android。图形。RectF，android的。图形。油漆)\r\n","Returns the maximum allowed height for bitmaps drawn with this canvas.":"返回使用该画布绘制的位图的最大允许高度。\r\n","An object created from a SQLiteDatabase that can be closed.":"由可以关闭的SQLitedAtabase创建的对象。\r\n","ApplicationInfo#RAW_EXTERNAL_STORAGE_ACCESS_REQUESTED":"applicationinfo＃raw_external_storage_access_requested\r\n","Retrieve the current level.":"检索当前级别。\r\n","Specifies whether or not to run this instrumentation as a functional test":"指定是否运行该仪器作为功能测试\r\n","Sets GPS timestamp.":"设置GPS时间戳。\r\n","android.bluetooth.le.BluetoothLeScanner.flushPendingScanResults(android.bluetooth.le.ScanCallback)":"android.bluetooth.le.bluetoothlethlescanner.flushpendingscanresults（android.bluetooth.le.scancallback）\r\n","DataSetObserver#onInvalidated":"DataSetobserver＃on Invalidated\r\n","android.graphics.SurfaceTexture.setOnFrameAvailableListener(android.graphics.OnFrameAvailableListener)":"android.graphics.surfaceTexture.setonframeavailablelistener（android.graphics.onframeavailablelistener）\r\n","#diff":"#差异\r\n","android.content.RestrictionEntry.getChoiceEntries()":"android.content.gresterriceentry.getChoiceentries（）\r\n","android.graphics.Matrix.setConcat(android.graphics.Matrix, android.graphics.Matrix)":"android.graphics.matrix.setConcat（android.graphics.matrix，android.graphics.matrix）\r\n","android.graphics.Region.Region(android.graphics.Region)":"android.graphics.gregion.gregion（android.graphics.region）\r\n","This instance of a SyncResult is returned by the SyncAdapter in response to a\n            sync request when a sync is already underway.":"SyncAdapter返回Syncresult的这一实例\r\n            同步已经进行时同步请求。\r\n","android.drm.DrmRights.getSubscriptionId()":"android.drm.drmrights.getSubscriptionId（）\r\n","android.graphics.Paint.isSubpixelText()":"android.graphics.paint.issubpixeltext（）\r\n","android.net.IpSecManager":"android.net.ipsecmanager\r\n","Health Profile Source Role - the health device.":"健康概况源角色 - 健康设备。\r\n","android.database.sqlite.SQLiteStatement":"android.database.sqlite.sqlitestatement\r\n","android.companion.CompanionDeviceService.SERVICE_INTERFACE":"android.companion.companiondeviceservice.service_interface\r\n","android.graphics.BitmapFactory.decodeResource(android.content.res.Resources, int)":"android.graphics.bitmapfactory.decoderesource（android.content.res.res.resources，int）\r\n","android.graphics.Canvas.drawPosText(char[], int, int, float[], android.graphics.Paint)":"android.graphics.canvas.drawpostext（char []，int，int，float []，android.graphics.paint）\r\n",": The device includes a gyroscope.":"：该设备包括陀螺仪。\r\n","android.content.Context.TEXT_CLASSIFICATION_SERVICE":"android.content.context.text_classification_service\r\n","android.graphics.Typeface.create(android.graphics.Typeface, int, boolean)":"android.graphics.typeface.create（android.graphics.typeface，int，boolean）\r\n","android.graphics.Canvas.quickReject(float, float, float, float)":"android.graphics.canvas.quickreject（浮子，浮点，浮点，浮点）\r\n","android.content.ComponentName.readFromParcel(android.os.Parcel)":"android.content.componentname.readfromparcel（android.os.parcel）\r\n","A font family class can be used for creating Typeface.":"字体家庭类可用于创建字体。\r\n","Add additional flags to the intent (or with existing flags value).":"将其他标志添加到意图（或具有现有标志值）。\r\n","android.database.sqlite.SQLiteDiskIOException":"android.database.sqlite.sqlitediskioexception\r\n","Called when an asynchronous insert is completed.":"当完成异步插入件完成时称为。\r\n","android.content.pm.PermissionGroupInfo.FLAG_PERSONAL_INFO":"android.content.pm.permissiongroupinfo.flag_personal_info\r\n","If the calling process of an IPC <em>or you</em> has not been\n            granted permission to access a specific URI, throw ":"如果IPC <em>或您</em>的调用过程尚未\r\n            授予访问特定URI的许可，投掷\r\n"," value\n            indicating that it is unknown whether or not the screen is HDR.":" 价值\r\n            表明屏幕是否为HDR是未知的。\r\n","Gets the approximate memory usage of the RenderNode for debug purposes.":"出于调试目的获取渲染的大致记忆使用量。\r\n","The document launch mode style requested by the activity.":"活动要求的文档启动模式样式。\r\n","android.graphics.Color.pack(float, float, float)":"android.graphics.color.pack（浮动，浮点，浮点）\r\n","An extension of LayerDrawables that is intended to cross-fade between\n            the first and second layer.":"旨在在\r\n            第一层和第二层。\r\n","android.gesture.GestureStroke":"android.gesture.gesturestroke\r\n","Offsets the top and bottom values for the RenderNode":"偏移RenderNode的顶部和底部值\r\n","android.content.pm.PackageInfo.sharedUserId":"android.content.pm.packageinfo.shareduserid\r\n","Activity Action: Launch application uninstaller.":"活动动作：启动应用程序卸载器。\r\n","Add a new drawable to the set of keyframes.":"在一组密钥帧中添加新的绘制。\r\n"," is at\n            least the given size.":" 在\r\n            至少给定的尺寸。\r\n","#decodeDrawable(Source, OnHeaderDecodedListener)":"#decodedrawable（来源，onheaderdecodedlistener）\r\n","Move an existing database file from the given source storage context to\n            this context.":"将现有数据库文件从给定的源存储上下文移动到\r\n            这个上下文。\r\n","if the current thread is not in a transaction or the\n transaction is already marked as successful.\n":"如果当前线不在交易中或\r\n 交易已经被标记为成功。\r\n\r\n","Returns the intrinsic width, in pixels, of this NinePatch.":"返回该尼尼点的固有宽度，以像素为单位。\r\n",": The device supports Wi-Fi RTT (IEEE 802.":"：该设备支持Wi-Fi RTT（IEEE 802。\r\n","android.graphics.Rect.intersects(android.graphics.Rect, android.graphics.Rect)":"机器人。图形。长相交（android。图形。Rect，android。图形。Rect）\r\n","android.content.pm.PackageManager.isDefaultApplicationIcon(android.graphics.drawable.Drawable)":"android.content.pm.packagemanager.isdefaultapplicationicon（android.graphics.drawable.drabable.drable）\r\n","android.graphics.Camera.applyToCanvas(android.graphics.Canvas)":"android.graphics.camera.applytocanvas（android.graphics.canvas）\r\n","android.content.res.Resources.getColor(int)":"android.content.Res.Resources.getColor（int）\r\n","Feature to view a document using system standard viewing mechanism, like\n            ":"使用系统标准查看机制查看文档的功能，例如\r\n            \r\n","#TYPE_L2CAP":"＃type_l2cap\r\n","Write this point to the specified parcel.":"将此观点写入指定的包裹。\r\n","#flattenToString":"#flattenToString\r\n","The list of observers.":"观察员名单。\r\n","Permission whitelist flag: permissions whitelisted by the system.":"许可白名单标志：系统列出了白名单的权限。\r\n","A String[] holding attribution tags when used with\n            ":"一个字符串[]保留归因标签时\r\n            \r\n","android.graphics.fonts.FontStyle.FONT_WEIGHT_LIGHT":"android.graphics.fonts.fontstyle.font_weight_light\r\n","All of the rights information associated with all DRM schemes have been successfully removed.":"与所有DRM计划相关的所有权利信息都已成功删除。\r\n","Return the full application info for this context's package.":"返回此上下文包的完整应用程序信息。\r\n","android.content.pm.PackageInfo.signatures":"android.content.pm.packageinfo.signatures\r\n","#onQueryComplete":"#onqueryComplete\r\n","android.content.pm.ApplicationInfo.getNativeHeapZeroInitialized()":"android.content.pm.applicationinfo.getNativeHeapZeroInitialization（）\r\n","android.content.pm.PackageInfo.sharedUserLabel":"android.content.pm.packageinfo.shareduserlabel\r\n","android.graphics.text.PositionedGlyphs.getDescent()":"android.graphics.text.positionedglyphs.getDescent（）\r\n","Returns true if the current invocation of ":"如果当前的调用\r\n","(Usually optional) Explicitly set the component to handle the intent.":"（通常是可选的）明确设置要处理意图的组件。\r\n","that indicates that the activity\n can itself handle changes to the screen orientation. ":"这表明活动\r\n 本身可以处理屏幕方向的更改。\r\n","android.content.Intent.Intent(java.lang.String)":"android.content.intent.intent（java.lang.string）\r\n","android.content.pm.PackageManager.PROPERTY_MEDIA_CAPABILITIES":"android.content.pm.PackageManager.PROPERTY_MEDIA_CAPABILITIES\r\n","android.graphics.drawable.BitmapDrawable.getPaint()":"android.graphics.drawable.bitmapDrawable.getPaint（）\r\n","android.bluetooth.BluetoothHeadset.stopVoiceRecognition(android.bluetooth.BluetoothDevice)":"android.bluetooth.bluetoothheadsets。\r\n",": The device's display has a touch screen.":"：设备的显示屏具有触摸屏。\r\n","android.content.Intent.ACTION_DELETE":"android.content.intent.action_delete\r\n","Sets MIME group's MIME types.":"设置Mime Group的MIME类型。\r\n","android.content.pm.PackageManager.FEATURE_SENSOR_COMPASS":"android.content.pm.packagemanager.feature_sensor_compass\r\n","android.bluetooth.BluetoothHeadset.EXTRA_VENDOR_SPECIFIC_HEADSET_EVENT_CMD_TYPE":"android.bluetooth.bluetoothheadset.extra_vendor_specific_headset_event_cmd_type\r\n","android.graphics.Typeface.SANS_SERIF":"android.graphics.typeface.sans_serif\r\n","Construct a PathEffect whose effect is to apply first the inner effect\n            and the the outer pathEffect (e.":"构建一种效果，其效果是首先应用内部效果\r\n            和外部路径效应（e。\r\n","android.graphics.drawable.NinePatchDrawable.NinePatchDrawable(android.graphics.Bitmap, byte[], android.graphics.Rect, java.lang.String)":"android.graphics.drawable.ninepatchdrawable.ninepatchdrawable（android.graphics.bitmap，byte []，android.graphics.Rect，java.lang.string）\r\n","PointF holds two float coordinates":"Pointf拥有两个浮点坐标\r\n","android.content.Intent.ACTION_SYSTEM_TUTORIAL":"android.content.intent.action_system_tutorial\r\n","android.content.pm.Checksum.TYPE_PARTIAL_MERKLE_ROOT_1M_SHA512":"android.content.pm.checksum.type_partial_merkle_root_1m_sha512\r\n","android.content.ContentResolver.getTypeInfo(java.lang.String)":"android.content.contentresolver.getTypeinfo（java.lang.string）\r\n","android.graphics.Canvas.isOpaque()":"android.graphics.canvas.isopaque（）\r\n","The resulting height of the bitmap, set independent of the state of\n inJustDecodeBounds.":"位图的结果高度，独立于状态\r\n 不公正的驱动器。\r\n","Appends a provider to the end of the provider list.":"将提供商附加到提供商列表的末尾。\r\n","Sets the projection map for the query.":"设置查询的投影映射。\r\n","Implement this interface if you want to create an animated drawable that\n extends ":"如果要创建一个动画drawable，请实现此接口\r\n 延伸；延伸 \r\n","This method will be invoked when the dialog is shown.":"显示对话框时将调用此方法。\r\n","android.graphics.Canvas.drawRoundRect(float, float, float, float, float, float, android.graphics.Paint)":"Android.graphics.CANVAS.DRAWROUNDRECT（Float，Float，Float，Float，Float，Float，Float，float，android.graphics.paint）\r\n","android.content.pm.Attribution":"android.content.pm.tribution\r\n","android.graphics.Canvas.drawTextRun(char[], int, int, int, int, float, float, boolean, android.graphics.Paint)":"android.graphics.canvas.drawtextrun（char []，int，int，int，int，int，float，float，float，boolean，android.graphics.paint）\r\n","android.content.pm.ShortcutManager.setDynamicShortcuts(java.util.List)":"android.content.pm.shortcutmanager.setdynamicshortcuts（java.util.list）\r\n","Create a new colormatrix initialized with the specified colormatrix.":"创建一个用指定的颜色矩阵初始化的新颜色矩阵。\r\n","android.content.pm.ActivityInfo.targetActivity":"android.content.pm.c.activityinfo.targetactivity\r\n","android.graphics.Canvas.clipOutRect(android.graphics.Rect)":"android.graphics.canvas.clipoutrect（android.graphics.Rect）\r\n","Apply this matrix to the array of 2D points, and write the transformed points back into the\n            array":"将此矩阵应用于2D点的数组，然后将转换点写回\r\n            大批\r\n","Class for decoding images as ":"用于解码图像的类\r\n","End a transaction.":"结束交易。\r\n","android.graphics.Color.pack(int)":"android.graphics.color.pack（int）\r\n","android.content.Intent.putExtra(java.lang.String, char[])":"android.content.intent.putextra（java.lang.string，char []）\r\n","android.content.Intent.URI_INTENT_SCHEME":"android.content.intent.uri_intent_scheme\r\n","android.graphics.drawable.DrawableWrapper.getDrawable()":"机器人。图形。可画的。DrawableWrapper。可绘制()\r\n","scanResult":"扫描\r\n","\n            \n            Your app must have an association with a device before calling this API":"\r\n            \r\n            您的应用必须在调用此API之前与设备有关联\r\n","android.content.ContentResolver.QUERY_ARG_SQL_LIMIT":"android.content.contentresolver.query_arg_sql_limit\r\n","android.drm.DrmInfoRequest":"Android.drm.drminforequest\r\n","Indicate a failed conversion status due to input data.":"指示由于输入数据而导致的转换状态失败。\r\n","android.content.Intent.getStringArrayExtra(java.lang.String)":"android.content.intent.getStringArrayExtra（java.lang.string）\r\n","android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_DATA_SYNC":"android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_DATA_SYNC\r\n","android.content.AbstractThreadedSyncAdapter.getSyncAdapterBinder()":"android.content.abstractthreadedsyncadapter.getSyncadapterBinder（）\r\n","PixelFormat#TRANSLUCENT PixelFormat.TRANSLUCENT":"Pixelformat＃半透明Pixelformat.translucent\r\n","android.bluetooth.BluetoothGattServerCallback.onDescriptorWriteRequest(android.bluetooth.BluetoothDevice, int, android.bluetooth.BluetoothGattDescriptor, boolean, boolean, int, byte[])":"android.bluetooth.bluetoothgattservercallback.ondescriptorwriterequest（android.bluetooth.bluetooth.bluetoothdevice，int，android.bluetooth.bluetooth.bluetoothgattdescriptor\r\n",": true when the application's rendering should\n be hardware accelerated.":"：thum当应用程序的渲染应\r\n 要加速硬件。\r\n","android.content.Intent.getCharSequenceArrayExtra(java.lang.String)":"android.content.intent.getChareSececearRayExtra（java.lang.string）\r\n","Creates an empty picture that is ready to record.":"创建准备记录的空图。\r\n","Returns the original image's width":"返回原始图像的宽度\r\n","android.database.DatabaseUtils.cursorShortToContentValuesIfPresent(android.database.Cursor, android.content.ContentValues, java.lang.String)":"android.database.databaseutils.cursorshorttocontentvaluesifpresent（android.database.cursor，android.content.content.content.contentvalues，java.lang.lang.string））\r\n","Returns the UUID of this descriptor.":"返回此描述符的UUID。\r\n","CompressFormat":"compressformat\r\n","android.graphics.Paint.getUnderlineThickness()":"android.graphics.paint.getunderlineThickness（）\r\n","android.content.pm.ShortcutManager.getMaxShortcutCountPerActivity()":"android.content.pm.shortcutmanager.getmaxshortcutcutcountperactivity（）\r\n","This activity allows the user to browse and download new applications.":"此活动允许用户浏览和下载新应用程序。\r\n","Releases resources associated with the current session of DrmManagerClient.":"释放与当前DRMManagerClient会话相关的资源。\r\n","Returns the Shape of this ShapeDrawable. -or- Sets the Shape of this ShapeDrawable.":"返回这种形状的形状。 - 或设置此形状的形状。\r\n","Request type for a simple question, with a possible title and icon.":"请求类型为一个简单的问题，带有可能的标题和图标。\r\n","Unregister an application configuration that has been registered using\n            ":"取消注册已注册的应用程序配置\r\n            \r\n","Broadcast Action: Wired Headset plugged in or unplugged.":"广播动作：有线耳机插入或拔下。\r\n","android.content.ComponentName.flattenToShortString()":"android.content.componentname.flattentoshortstring（）\r\n","android.drm.DrmEvent.getUniqueId()":"android.drm.drmevent.getuniqueId（）\r\n","android.content.Context.SHORTCUT_SERVICE":"android.content.context.shortcut_service\r\n","android.graphics.text.PositionedGlyphs.getOffsetY()":"android.graphics.text.positionedglyphs.getoffsety（）\r\n","Construct an iterator for all of the rectangles in a region.":"为一个区域中的所有矩形构建迭代器。\r\n","android.content.pm.LauncherApps.startPackageInstallerSessionDetailsActivity(android.content.pm.SessionInfo, android.graphics.Rect, android.os.Bundle)":"android.content.pm.launcherapps.startpackageinstallersessiondetailsactivity（android.content.pm.sessioninfo，android.graphics.Rect.Rect，android.os.os.bundle）\r\n","android.content.pm.LauncherApps.pinShortcuts(java.lang.String, java.util.List, android.os.UserHandle)":"android.content.pm.launcherapps.pinshortcuts（java.lang.string，java.util.list，android.os.userhandle）\r\n","android.graphics.drawable.LayerDrawable.setPaddingRelative(int, int, int, int)":"android.graphics.drawable.layerdrawable.setpaddingrelative（int，int，int，int）\r\n","android.bluetooth.BluetoothServerSocket.accept(int)":"android.bluetooth.bluetoothserversocket.accept（int）\r\n","Do any processing after (for example) decoding.":"进行任何处理（例如）解码之后。\r\n","The default foreground service type if not been set in manifest file.":"默认前台服务类型（如果未在清单文件中设置）。\r\n","Context#getSharedPreferences":"上下文＃getSharedPreferences\r\n","android.database.CursorWindow.allocRow()":"android.database.cursorwindow.allocrow（）\r\n","android.content.res.ColorStateList.ColorStateList(int[][], int[])":"android.content.Res.ColorStateList.ColorStateList（int [] []，int []）\r\n","android.bluetooth.le.AdvertisingSet.setScanResponseData(android.bluetooth.le.AdvertiseData)":"android.bluetooth.le..advertissetset.setscanresponsedata（android.bluetooth.le.le.aptervertisedata）\r\n","android.content.Intent.EXTRA_MIME_TYPES":"android.content.intent.extra_mime_types\r\n","The rights-protected content can be displayed.":"可以显示受权保护的内容。\r\n","Checks whether the given rights-protected content has valid rights for the specified\n            ":"检查给定权利保护的内容是否具有指定的有效权利\r\n            \r\n"," flag: return information about\n permissions in the package in\n ":" 标志：返回有关的信息\r\n 包装中的权限\r\n \r\n","Create a BitmapRegionDecoder from the file descriptor.":"从文件描述符中创建一个位映射Decoder。\r\n","android.database.sqlite.SQLiteQueryBuilder.buildUnionSubQuery(java.lang.String, java.lang.String[], java.util.Set, int, java.lang.String, java.lang.String, java.lang.String[], java.lang.String, java.lang.String)":"android.database.sqlite.sqlitequerybuilder.buildunionsubquery（java.lang.string，java.lang.string []，java.util.set，int，int，int，java.lang.lang.string，Java.lang.string，Java.string，Java.lang.lang.lang.string [[ ]，java.lang.string，java.lang.string）\r\n","Return the name of the permission required for read-only access to\n            this content provider. -or- Change the permission required to read data from the content\n            provider.":"返回仅阅读访问所需许可的名称\r\n            这个内容提供商。 - 或 - 更改从内容中读取数据所需的许可\r\n            提供者。\r\n","android.graphics.drawable.BitmapDrawable.BitmapDrawable(android.graphics.Bitmap)":"android.graphics.drawable.bitmapdrable.bitmapdrable（android.graphics.bitmap）\r\n","PixelXorXfermode implements a simple pixel xor (op ^ src ^ dst).":"PixelxorxferMode实现了简单的像素XOR（op ^ src ^ dst）。\r\n","A timed point of a gesture stroke.":"手势中风的定时点。\r\n","android.content.pm.PackageManager.FEATURE_TELEPHONY_GSM":"android.content.pm.packagemanager.feature_telephony_gsm\r\n","android.content.Intent.setAction(java.lang.String)":"android.content.intent.setaction（java.lang.string）\r\n","android.graphics.Paint.getRunAdvance(char[], int, int, int, int, boolean, int)":"android.graphics.paint.getrunadvance（char []，int，int，int，int，int，boolean，int）\r\n","android.content.pm.PackageManager.queryIntentServices(android.content.Intent, int)":"android.content.pm.PackageManager.queryIntentServices(android.content.Intent,int)\r\n","android.bluetooth.BluetoothHeadset.STATE_AUDIO_DISCONNECTED":"android.bluetooth.bluetoothheadset.state_audio_disconnected\r\n","Gets the Red component from an integer color.":"从整数颜色获取红色分量。\r\n","Returns whether the TX Power will be included.":"返回是否包括TX功率。\r\n","android.content.ContextWrapper.sendStickyBroadcast(android.content.Intent, android.os.Bundle)":"android.content.contextwrapper.sendstickybroadcast（android.content.intent，android.os.bundle）\r\n"," instance for recording\n            diagnostic logs.":" 录制的实例\r\n            诊断日志。\r\n","Starts a Main activity in the specified profile.":"在指定的配置文件中启动主要活动。\r\n","Gets the state of the auto-white balance lock.":"获取自动白余额锁的状态。\r\n","dangerous":"危险的\r\n","android.graphics.Typeface.defaultFromStyle(int)":"android.graphics.typeface.defaultfromstyle（int）\r\n","#PARCELABLE_WRITE_RETURN_VALUE":"#parcelable_write_return_value\r\n","An intent action for a service to be bound whenever this app's companion device(s)\n            are nearby.":"每当该应用程序的配备设备时，服务都需要绑定服务的意图行动\r\n            在附近。\r\n","android.content.ContentProvider.shutdown()":"android.content.contentprovider.shutdown（）\r\n","Kernel event log tag.":"内核事件日志标签。\r\n","Set the clip to the difference of the current clip and the specified path.":"将夹子设置为当前剪辑和指定路径的差。\r\n","The AssetFileDescriptor contains its own ParcelFileDescriptor, which\n            in addition to the normal FileDescriptor object also allows you to close\n            the descriptor when you are done with it.":"AssetFileDescriptor包含自己的ParcelFileDescriptor，其\r\n            除了正常的FileDescriptor对象还允许您关闭\r\n            描述符，当你完成它。\r\n","Converts the specified color long from its color space into the specified\n            destination color space.":"Converts the specified color long from its color space into the specified\r\n            destination color space.\r\n","android.database.DatabaseUtils.getHexCollationKey(java.lang.String)":"android.database.databaseutils.gethexcollat​​ionkey（java.lang.string）\r\n","android.database.ContentObserver.dispatchChange(boolean, java.util.Collection, int)":"android.database.contentobserver.dispatchchange（boolean，java.util.collection，int）\r\n","android.database.ContentObservable.notifyChange(boolean)":"android.database.contentobservable.notifychange（boolean）\r\n","android.content.pm.PackageManager.FEATURE_VULKAN_HARDWARE_VERSION":"android.content.pm.packagemanager.feature_vulkan_hardware_version\r\n","Mark this table as syncable, with the _sync_dirty residing in another\n            table.":"将此表标记为可同步的，_sync_dirty居住在另一个\r\n            桌子。\r\n","#bindService(Intent, ServiceConnection, int)":"#BindService（意图，ServiceConnection，int）\r\n",": The device supports the\n            ":"：该设备支持\r\n            \r\n","Represents a statement that can be executed against a database.":"表示可以针对数据库执行的语句。\r\n","This class enables generating a PDF document from native Android content.":"此类启用从本机Android内容生成PDF文档。\r\n","android.content.RestrictionsManager.requestPermission(java.lang.String, java.lang.String, android.os.PersistableBundle)":"android.content.strictionsManager.Requestpermisser（java.lang.string，java.lang.string，android.os.os.persistablebundle）\r\n","android.graphics.drawable.shapes.Shape.hasAlpha()":"android.graphics.drawable.shapes.shape.hasalpha（）\r\n","android.content.pm.PackageManager.Property":"android.content.pm.PackageManager.Property\r\n","android.database.sqlite.SQLiteTransactionListener.onCommit()":"android.database.sqlite.sqlitetransactionListener.oncommit（）\r\n","Return the enabled setting for a package component (activity,\n            receiver, service, provider).":"返回软件包组件的启用设置（活动，\r\n            接收者，服务，提供商）。\r\n","android.media.tv.TvInputService":"android.media.tv.tvinputservice\r\n","android.content.Context.getSharedPreferences(java.lang.String, int)":"android.content.context.getSharedPreferences（java.lang.string，int）\r\n","android.graphics.Paint.getOffsetForAdvance(char[], int, int, int, int, boolean, float)":"android.graphics.paint.getoffsetforadvance（char []，int，int，int，int，int，boolean，float）\r\n"," value should\n            be for the given package.":"值应该\r\n            是给定包裹。\r\n","android.content.pm.PackageManager.FEATURE_PRINTING":"android.content.pm.packagemanager.feature_printing\r\n","android.bluetooth.BluetoothGattService.addService(android.bluetooth.BluetoothGattService)":"android.bluetooth.bluetoothgattservice.Addservice（android.bluetooth.bluetoothgattservice）\r\n","Gets whether this matrix is affine.":"得到该矩阵是否是仿射。\r\n","android.database.sqlite.SQLiteProgram.bindLong(int, long)":"android.database.sqlite.sqliteprogram.bindlong（int，long）\r\n","Reads a Float out of a column in a Cursor and writes it to a ContentValues.":"从光标中读取列中的浮子，然后将其写入ContentValues。\r\n","Restriction of type \"choice\".":"限制“选择”类型。\r\n","Retrieve data this intent is operating on.":"检索该意图正在运行的数据。\r\n","Specifies the list of columns (stored as a ":"指定列列表（存储为一个\r\n","android.content.pm.PackageManager.FEATURE_LOCATION_NETWORK":"android.content.pm.packagemanager.feature_location_network\r\n","android.content.pm.PackageManager.hasSigningCertificate(int, byte[], int)":"android.content.pm.packagemanager.hassigningcertificate（int，byte []，int）\r\n","ColorSpace":"色彩空间\r\n","android.database.CursorWindow.putBlob(byte[], int, int)":"android.database.cursorwindow.putblob（byte []，int，int）\r\n","All kernel group-IDs that have been assigned to this package.":"已分配给此软件包的所有内核组ID。\r\n","android.graphics.drawable.LayerDrawable":"android.graphics.drawable.layerdrawable\r\n","Special function for reading an exception result from the header of\n            a parcel, to be used after receiving the result of a transaction.":"读取的特殊功能\r\n            收到交易结果后使用的包裹。\r\n","Standard CIE 1931 2° illuminant D65, encoded in xyY.":"标准CIE 1931 2°Ilumuminant D65，用XYY编码。\r\n","android.bluetooth.BluetoothHidDevice.SUBCLASS2_JOYSTICK":"android.bluetooth.bluetoothhiddevice.subclass2_joystick\r\n","[Sa * Da, Sc * Dc] ":"[SA * DA，SC * DC]\r\n","android.bluetooth.BluetoothGattServer.readPhy(android.bluetooth.BluetoothDevice)":"android.bluetooth.bluetoothgattserver.readphy（android.bluetooth.bluetoothdevice）\r\n","Canvas#drawPicture(Picture)":"画布＃drawpicture（图片）\r\n","Commit your preferences changes back from this Editor to the\n ":"提交您的偏好从本编辑器变为\r\n \r\n","A color filter that transforms colors through a 4x5 color matrix.":"A color filter that transforms colors through a 4x5 color matrix.\r\n","#close":"＃关\r\n"," for using NFC.":" 用于使用NFC。\r\n","Constants for ":"常数\r\n","android.database.sqlite.SQLiteDatabase.beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)":"android.database.sqlite.sqlitedatabase.begintransactionWithListener（android.database.sqlite.sqliteTransactionListener）\r\n","android.database.Observable.unregisterObserver(java.lang.Object)":"机器人。数据库。可观察到的。unregisterObserver（java。朗。对象)\r\n","microphone":"麦克风\r\n","The stroke projects out as a semicircle, with the center at the\n end of the path.":"中风伸出为半圆，中心在\r\n 路径的尽头。\r\n","to allow the current selector to be\n overwritten, even if it is already set.":"允许当前选择器为\r\n 即使已经设置了它，即使它已经设置了。\r\n","android.content.pm.PackageInstaller.abandonSession(int)":"android.content.pm.packageinstaller.abandressession（int）\r\n","Return the euclidian distance from (0,0) to the point":"将欧几里得距离从（0,0）返回到点\r\n","android.content.pm.ShortcutManager.FLAG_MATCH_CACHED":"android.content.pm.shortcutmanager.flag_match_cached\r\n","android.graphics.drawable.Drawable.getHotspotBounds(android.graphics.Rect)":"android.graphics.drawable.drawable.gethotspotbounds（android.graphics.Rect）\r\n"," for unknown\n            values such as ":" 对于未知\r\n            诸如\r\n","android.content.pm.SharedLibraryInfo.getVersion()":"android.content.pm.SharedLibraryInfo.getVersion（）\r\n","android.content.pm.PackageManager.FEATURE_RAM_NORMAL":"android.content.pm.packagemanager.feature_ram_normal\r\n","android.content.pm.LauncherActivityInfo":"android.content.pm.launcheractivityinfo\r\n","Activity action: Launch UI to show information about the usage of a given permission group in\n            a given period.":"活动行动：启动UI以显示有关给定许可组使用的信息\r\n            给定的时期。\r\n","Retrieve the character advances of the text.":"检索文本的角色进步。\r\n","#VERIFICATION_ALLOW":"#verification_allow\r\n","android.graphics.drawable.Drawable.setBounds(int, int, int, int)":"android.graphics.drawable.drawable.setbounds（int，int，int，int）\r\n"," for transmitting infrared\n            signals from the device.":" 用于传输红外\r\n            来自设备的信号。\r\n","android.graphics.PathMeasure.isClosed()":"android.graphics.pathmeasure.isclosed（）\r\n","android.bluetooth.le.BluetoothLeScanner.stopScan(android.app.PendingIntent)":"android.bluetooth.le.bluetoothlethlescanner.stopscan（android.app.pendendintent）\r\n",", but abbreviates the class\n            name if it is a suffix of the package.":"，但缩写班级\r\n            名称如果是包装的后缀。\r\n","android.bluetooth.BluetoothHidDevice.ERROR_RSP_INVALID_PARAM":"android.bluetooth.bluetoothhiddevice.error_rsp_invalid_param\r\n","android.content.Intent.ACTION_APP_ERROR":"android.content.intent.action_app_error\r\n","Implicitly casts a Color to an integer.":"隐式将颜色转换为整数。\r\n","Gets the write type for this characteristic. -or- Set the write type for this characteristic":"获取此特征的写入类型。 - 或 - 设置此特征的写入类型\r\n","android.graphics.drawable.Drawable.getColorFilter()":"android.graphics.drawable.drawable.getColorFilter（）\r\n","android.graphics.fonts.Font.getSourceIdentifier()":"android.graphics.fonts.font.getSourceIdentifier（）\r\n","#registerContentObserver":"#registerContentObserver\r\n","android.content.Intent.CATEGORY_TEST":"android.content.intent.category_test\r\n","android.content.pm.PackageManager.FEATURE_WIFI_DIRECT":"android.content.pm.packagemanager.feature_wifi_direct\r\n","Changes the settings for this Camera service.":"更改此相机服务的设置。\r\n","android.content.ContextWrapper.attachBaseContext(android.content.Context)":"android.content.contextwrapper.attachbasecontext（android.content.context）\r\n","android.content.ClipDescription.CLASSIFICATION_NOT_COMPLETE":"android.content.clipdescription.classification_not_complete\r\n","Retrieve the current result code, as set by the previous receiver. -or- Change the current result code of this broadcast; only works with\n            broadcasts sent through\n            ":"检索由上一个接收器设置的当前结果代码。 - 或 - 更改此广播的当前结果代码；只能使用\r\n            发送的广播\r\n            \r\n","When a constraint violation occurs, the command aborts with a return\n code SQLITE_CONSTRAINT. ":"当发生约束冲突时，命令中止并返回\r\n 代码SQLITE_CONSTRAINT。 \r\n","Represents a shortcut that can be published via ":"代表可以通过\r\n","android.print.PrintManager":"android.print.printmanager\r\n","Create a labeled intent with no intent data but supplying the label\n            and icon resources for it.":"创建一个没有意图数据的标签意图，但提供标签\r\n            和图标资源。\r\n","Gets the maximum exposure compensation index.":"获取最大曝光补偿指数。\r\n","/manifest/application/receiver":"/清单/应用程序/接收者\r\n","Response from the server cannot be handled by the DRM plug-in (agent).":"服务器的响应无法由DRM插件（代理）处理。\r\n","Broadcast Action: The current device's locale has changed.":"广播动作：当前设备的语言环境已经改变。\r\n","android.database.sqlite.SQLiteQueryBuilder.buildUnionSubQuery(java.lang.String, java.lang.String[], java.util.Set, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"android.database.sqlite.sqlitequerybuilder.buildunionsubquery（java.lang.string，java.lang.string []，java.util.set，int，int，java.lang.lang.string，java.lang.lang.string，java.string，java.lang.lang.string，Strang.string，，，，，，地java.lang.string）\r\n","android.bluetooth.BluetoothGattCallback.onReliableWriteCompleted(android.bluetooth.BluetoothGatt, int)":"android.bluetooth.bluetoothgattcallback.onreliablewritecompleted（android.bluetooth.bluetoothgatt，int）\r\n","android.content.pm.PackageManager.FEATURE_WEBVIEW":"android.content.pm.packagemanager.feature_webview\r\n","Constructor for ":"构造函数\r\n","android.graphics.Paint.getTextBounds(java.lang.String, int, int, android.graphics.Rect)":"android.graphics.paint.getTextbounds（java.lang.string，int，int，android.graphics.rect）\r\n","State for a result that is pending for a broadcast receiver.":"结果是为广播接收器待处理的结果。\r\n","Read from a split installed alongside the application, which may not have been\n            loaded initially because the application requested isolated split loading.":"从与应用程序一起安装的拆分中阅读，这可能还没有\r\n            最初加载是因为应用程序请求隔离分配加载。\r\n","Make a clone of only the parts of the Intent that are relevant for\n            filter matching: the action, data, type, component, and categories.":"仅凭意图部分的克隆\r\n            滤镜匹配：操作，数据，类型，组件和类别。\r\n","android.content.AttributionSource.getNext()":"android.content.attributionsource.getNext（）\r\n","Returns a color state list associated with a particular resource ID.":"返回与特定资源ID关联的颜色状态列表。\r\n","android.content.Intent.putExtra(java.lang.String, long[])":"android.content.intent.putextra（java.lang.string，long []）\r\n","android.content.Context.deleteFile(java.lang.String)":"android.content.context.deletefile（java.lang.string）\r\n","if all signatures on the two packages match.":"如果两个软件包上的所有签名都匹配。\r\n","If the calling process of an IPC ":"如果IPC的调用过程\r\n","RenderNode":"Rendernode\r\n","Returns a message about the parser state suitable for printing error messages.":"返回有关适合打印错误消息的解析器状态的消息。\r\n","Returns the right padding in pixels.":"返回以像素为单位的右填充物。\r\n","android.content.Intent.ACTION_MANAGED_PROFILE_UNLOCKED":"android.content.intent.action_managed_profile_unlocked\r\n","android.hardware.HardwareBuffer.writeToParcel(android.os.Parcel, int)":"android.hardware.hardwarebuffer.writetoparcel（android.os.os.parcel，int）\r\n","Gets the value of the field at the specified row and column index as a\n            <code>double</code>.":"在指定的行和列索引处获取字段的值\r\n            <code> double </code>。\r\n","Assign the src colormatrix into this matrix, copying all of its values.":"Assign the src colormatrix into this matrix, copying all of its values.\r\n","Sent when a user switch is happening, causing the process's user to be\n            brought to the foreground.":"当用户开关发生时发送，导致该过程的用户为\r\n            带到前景。\r\n","F:Android.Drm.DrmInfoRequest..ctor":"f：android.drm.drminforequest..ctor\r\n","Constant corresponding to ":"常数对应于\r\n","android.content.pm.PackageManager.getInstantAppCookie()":"android.content.pm.packagemanager.getInstantAppCookie（）\r\n","Adds a frame to the animation":"在动画中添加框架\r\n","android.content.pm.PackageManager.getApplicationLogo(java.lang.String)":"android.content.pm.packagemanager.getApplicationLogo（java.lang.string）\r\n","Gets the Uri for the target of the operation.":"获取操作目标的URI。\r\n","YuvImage contains YUV data and provides a method that compresses a region of\n            the YUV data to a Jpeg.":"Yuvimage包含YUV数据，并提供了一种压缩区域的方法\r\n            YUV数据到JPEG。\r\n","android.bluetooth.BluetoothHidDevice.SUBCLASS2_UNCATEGORIZED":"android.bluetooth.bluetoothhiddevice.subclass2_uncaterized\r\n","android.os.PowerManager":"Android.os.opermanager\r\n","android.graphics.drawable.Drawable.getLevel()":"android.graphics.drawable.drawable.getlevel（）\r\n","android.database.CursorWindow.isLong(int, int)":"android.database.cursorwindow.islong（int，int）\r\n"," once it begins running.":" 一旦开始运行。\r\n"," for accessing the launcher shortcut service.":" 用于访问启动器快捷键服务。\r\n","F:Android.Content.Res.Configuration.NeedNewResources":"F：android.content.Res.Configuration.NeedNewResources\r\n","Disconnect from an application service.":"与应用程序服务断开连接。\r\n",", across all apps, for a specified user.":"在所有应用程序中，对于指定的用户。\r\n","Return the Intent that this FilterComparison represents.":"返回此过滤器代表的意图。\r\n","Returns absolute paths to application-specific directories on all\n            shared/external storage devices where the application can place media\n            files.":"将绝对路径返回到所有方面的专用目录\r\n            该应用程序可以放置媒体的共享/外部存储设备\r\n            文件。\r\n","[Sa, Sc] ":"[SA，SC]\r\n","android.content.ContentProviderClient.uncanonicalize(android.net.Uri)":"android.content.contentproviderclient.uncanonicalize（android.net.uri）\r\n","android.graphics.Insets":"android.graphics.insets\r\n","android.database.DefaultDatabaseErrorHandler.onCorruption(android.database.sqlite.SQLiteDatabase)":"android.database.defaultdatabaseerrorhandler.oncorruption（android.database.sqlite.sqlitedatabase））\r\n","Create a default Options object, which if left unchanged will give\n the same result from the decoder as if null were passed.":"创建一个默认选项对象，如果不变，将会给出\r\n 解码器的结果与空通过。\r\n","Return whether a shortcut only contains \"key\" information only or not.":"返回快捷方式是否仅包含“密钥”信息。\r\n"," is copied to global clipboard\n            in the ":" 被复制到全球剪贴板\r\n            在里面\r\n","android.graphics.drawable.LayerDrawable.getLayerInsetStart(int)":"android.graphics.drawable.layerdrawable.getlayerinsetstart（int）\r\n","The activity or broadcast receiver that corresponds to this resolution\n            match, if this resolution is for an activity or broadcast receiver.":"与此分辨率相对应的活动或广播接收器\r\n            匹配，如果此分辨率用于活动或广播接收器。\r\n","android.bluetooth.BluetoothManager.getConnectionState(android.bluetooth.BluetoothDevice, int)":"android.bluetooth.bluetoothmanager.getConnectionState（android.bluetooth.bluetoothdevice，int）\r\n","Turn this item into text, regardless of the type of data it\n actually contains.":"无论数据类型如何\r\n 实际包含。\r\n","The identity matrix.":"身份矩阵。\r\n","Set on ":"出发\r\n","android.content.pm.PackageInfo.featureGroups":"android.content.pm.packageinfo.featuregroups\r\n","Cursor#close()":"光标＃关闭（）\r\n"," for accessing the MIDI service.":" 用于访问MIDI服务。\r\n","android.content.pm.PackageManager.FEATURE_NFC_BEAM":"android.content.pm.packagemanager.feature_nfc_beam\r\n","if the method fails.\n":"如果方法失败。\r\n\r\n","android.graphics.RenderNode.getRotationZ()":"机器人。图形。RenderNode。getRotationZ()\r\n","android.graphics.Color.blue(long)":"android.graphics.Color.blue(long)\r\n","#setChoiceValues(String[])":"#SetChoIceValues（String []）\r\n","android.content.ContextParams.getAttributionTag()":"android.content.contextparams.getAttributionTag（）\r\n","android.content.res.Configuration.isScreenHdr()":"android.content.res.configuration.isscreenhdr（）\r\n","Returns the target density of the canvas. -or- Specifies the density for this Canvas' backing bitmap.":"返回画布的目标密度。 - 或 - 指定该画布的衬板位图的密度。\r\n","Returns the maximum allowed width for bitmaps drawn with this canvas.":"返回使用该画布绘制的位图的最大允许宽度。\r\n","Return a ContentResolver instance for your application's package.":"返回应用程序包的ContentRersolver实例。\r\n",": The device includes a hardware step detector.":"：该设备包括硬件步骤检测器。\r\n","android.graphics.HardwareRenderer.setContentRoot(android.graphics.RenderNode)":"android.graphics.hardwarerenderer.setContentroot（android.graphics.rendernode）\r\n","List of included services for this service.":"此服务的随附服务列表。\r\n",": The device supports device policy enforcement via device admins.":"：该设备支持通过设备管理员的设备策略执法。\r\n","android.content.IntentFilter.hasDataScheme(java.lang.String)":"android.content.intentfilter.hasdatascheme（java.lang.string）\r\n","Set amount to throttle updates by.":"将金额设置为节气门更新。\r\n","Constant representing gamepad subclass.":"不断代表GamePad子类。\r\n","Convenience for calling ":"便利打电话\r\n","android.drm.DrmManagerClient.getDrmObjectType(android.net.Uri, java.lang.String)":"android.drm.drmmanagerclient.getdrmobjectType（android.net.uri，java.lang.string）\r\n","#requestedPermissionsFlags":"#RequestedPermissionsFlags\r\n","Activity Action: Launch application installer.":"活动操作：启动应用程序安装程序。\r\n","to allow the current categories to be\n overwritten, even if they are already set.":"允许当前类别\r\n 即使已经设置了它们，即使它们已经设置了。\r\n","android.content.pm.PackageManager.isAutoRevokeWhitelisted()":"android.content.pm.packagemanager.isautorevokewhitelisted（）\r\n","Create an empty PathMeasure object.":"创建一个空的路径measure对象。\r\n","android.graphics.Bitmap.setPixel(int, int, int)":"android.graphics.bitmap.setpixel（int，int，int）\r\n","#onChange":"#onchange\r\n","android.content.res.loader.ResourcesProvider.loadFromTable(android.os.ParcelFileDescriptor, android.content.res.loader.AssetsProvider)":"android.content.res.res.loader.resourcesprovider.loadfromtable（android.os.parcelfiledScriptor，android.content.res.res.res.res.res. loader.assetsprovider）\r\n","android.content.pm.ShortcutInfo.getCategories()":"android.content.pm.shortcutinfo.getCategories（）\r\n","android.graphics.Matrix.mapPoints(float[])":"android.graphics.matrix.mappoints（float []）\r\n","android.content.Context.DISPLAY_SERVICE":"android.content.context.display_service\r\n","android.graphics.LightingColorFilter.LightingColorFilter(int, int)":"android.graphics.lightingcolorfilter.lightingcolorfilter（int，int）\r\n","android.content.pm.PackageManager.clearInstantAppCookie()":"android.content.pm.packagemanager.clearinstantappcookie（）\r\n","android.graphics.drawable.ColorDrawable.setColorFilter(android.graphics.ColorFilter)":"android.graphics.drawable.colordrawable.setcolorfilter（android.graphics.colorfilter）\r\n","android.graphics.ColorMatrix.postConcat(android.graphics.ColorMatrix)":"android.graphics.ColorMatrix.postConcat(android.graphics.ColorMatrix)\r\n","android.content.Intent.EXTRA_SHORTCUT_ICON":"android.content.intent.extra_shortcut_icon\r\n","android.graphics.Color.green(long)":"android.graphics.color.green（long）\r\n","Retrieve the integer value for the attribute at <var>index</var>.":"检索<var> index </var>的属性的整数值。\r\n","Gets a value.":"获得价值。\r\n","android.content.AsyncTaskLoader.setUpdateThrottle(long)":"android.content.asynctaskloader.setupdatethrottle（long）\r\n","android.content.QuickViewConstants.FEATURE_PRINT":"android.content.QuickViewConstants.feature_print\r\n","android.content.pm.PackageManager.FEATURE_RAM_LOW":"android.content.pm.packagemanager.feature_ram_low\r\n","android.content.pm.ApplicationInfo.manageSpaceActivityName":"android.content.pm.applicationinfo.manages -paceactivityName\r\n","android.database.AbstractCursor.mContentResolver":"机器人。数据库。AbstractCursor.[医]溶血器\r\n","android.content.pm.PermissionInfo.PermissionInfo()":"android.content.pm.permissioninfo.permissioninfo（）\r\n",", for\n            creating a data pipe and background thread allowing you to stream\n            generated data back to the client.":"， 为了\r\n            创建数据管道和背景线程，使您可以流式传输\r\n            生成数据回到客户端。\r\n",": The device supports only leanback UI.":"：该设备仅支持Leanback UI。\r\n","\n            that services the content at uri, starting the provider if necessary.":"\r\n            该服务在URI上为内容提供服务，必要时启动提供商。\r\n","android.graphics.drawable.BitmapDrawable.getTileModeX()":"android.graphics.drawable.bitmapdrabable.gettilemodex（）\r\n","Android.Content.Context.BIND_NOT_FOREGROUND":"android.content.context.bind_not_foreground\r\n","Removes any ID from the end of the path.":"从路径末端删除任何ID。\r\n","Throws CanceledIntentException if the IntentSender\n is no longer allowing more intents to be sent through it.\n":"抛出UccutEdIntentException如果意图\r\n 不再允许通过它发送更多的意图。\r\n\r\n","Options that have been set in the service declaration in the\n            manifest.":"已在服务声明中设置的选项\r\n            清单。\r\n","android.content.pm.PackageInstaller.registerSessionCallback(android.content.pm.SessionCallback)":"android.content.pm.packageinstaller.registersessessionCallback（android.content.pm.sessioncallback）\r\n","android.graphics.NinePatch.NinePatch(android.graphics.Bitmap, byte[])":"android.graphics.ninepatch.ninepatch（android.graphics.bitmap，byte []）\r\n","The MIME type of the content.":"内容的MIME类型。\r\n","android.content.IntentSender.getCreatorUserHandle()":"android.content.intents.getCreatoruserHandle（）\r\n","android.graphics.Bitmap.getScaledHeight(int)":"android.graphics.bitmap.getScaledHeight（int）\r\n","A typed checksum.":"一个打字的校验和。\r\n","Convenience method for determining if the Sync should be rescheduled after failing for some\n            reason.":"在失败后是否应重新安排同步的便利方法\r\n            原因。\r\n","Override this to handle requests to perform a batch of operations, or the\n            default implementation will iterate over the operations and call\n            ":"覆盖此内容以处理执行一批操作的请求，或\r\n            默认实施将在操作上迭代并致电\r\n            \r\n","Returns the quality setting for the JPEG picture.":"返回JPEG图片的质量设置。\r\n","Draw array of glyphs with specified font.":"绘制带有指定字体的字形数组。\r\n","android.content.ContentProvider.openAssetFile(android.net.Uri, java.lang.String)":"android.content.contentprovider.openassetfile（android.net.uri，java.lang.string）\r\n","Bind null to an index.":"将空结合到索引。\r\n","android.graphics.Color.convert(android.graphics.ColorSpace)":"android.graphics.Color.convert(android.graphics.ColorSpace)\r\n","certificate":"证书\r\n","MATCH_UNINSTALLED_PACKAGES":"match_uninstalled_pa​​ckages\r\n","Sets the radius in pixels of the fully expanded ripple.":"将完全扩展的纹波像素的半径设置为半径。\r\n"," indicating whether the display should preferably be switched to a\n            minimal post processing mode.":" 指示显示屏是否应切换到\r\n            最小的后处理模式。\r\n","android.drm.DrmManagerClient.getDrmObjectType(java.lang.String, java.lang.String)":"android.drm.drmmanagerclient.getdrmobjectType（java.lang.string，java.lang.string）\r\n","android.content.res.TypedArray.getColor(int, int)":"android.content.res.typedarray.getColor（int，int）\r\n","Construct a new SurfaceTexture to stream images to a given OpenGL texture.":"构建一个新的SurfaceTexture将图像传输到给定的OpenGL纹理。\r\n","android.bluetooth.le.ScanCallback.onScanResult(int, android.bluetooth.le.ScanResult)":"android.bluetooth.le.scancallback.onscanresult（int，android.bluetooth.le.scanresult）\r\n","android.content.Intent.getShortArrayExtra(java.lang.String)":"android.content.intent.getShortarrayExtra（java.lang.string）\r\n","if the provided URI could not be opened.":"如果提供的URI无法打开。\r\n","Gets the maximum number of detected faces supported.":"获得最大支持的面孔数量。\r\n","Gets a value and converts it to a Byte.":"获取值并将其转换为字节。\r\n","android.drm.DrmConvertedStatus.statusCode":"android.drm.drmconvertedstatus.statuscode\r\n","android.content.ContentResolver.QUERY_ARG_GROUP_COLUMNS":"android.content.contentresolver.query_arg_group_columns\r\n","Returns the filter set on the service Solicitation uuid mask.":"返回服务招标UUID蒙版上的过滤器设置。\r\n","android.database.sqlite.SQLiteDatabaseLockedException":"android.database.sqlite.sqlitedatabaselockedexception\r\n","A remote client has requested to read a local characteristic.":"远程客户端已要求阅读本地特征。\r\n","Return a string representation of the rectangle in a well-defined format.":"以定义良好的格式返回矩形的字符串表示形式。\r\n","android.content.Intent.ACTION_DEVICE_STORAGE_OK":"android.content.intent.action_device_storage_ok\r\n","Creates a new Camera object to access the first back-facing camera on the\n            device.":"创建一个新的相机对象，以访问在\r\n            设备。\r\n","Create a new Drawable instance from its constant state.":"从其常量状态创建一个新的Drawable实例。\r\n","Create a matrix that is a (deep) copy of src":"创建一个矩阵，是SRC的（深）副本\r\n","Create a complex Item, containing multiple representations of\n text, Intent, and/or URI.":"创建一个复杂的项目，包含多个表示\r\n 文本，意图和/或URI。\r\n","Retrieve the list of all currently configured preferred packages.":"检索当前配置的所有首选软件包的列表。\r\n","android.bluetooth.BluetoothGattCallback.onPhyUpdate(android.bluetooth.BluetoothGatt, int, int, int)":"android.bluetooth.bluetoothgattcallback.onphyupdate（android.bluetooth.bluetoothgatt，int，int，int，int）\r\n","Retrieve the resources for an application for the provided configuration.":"检索提供的配置应用程序的资源。\r\n","Returns the type of attribute at the specified index.":"返回指定索引处的属性类型。\r\n","android.content.pm.ShortcutInfo.DISABLED_REASON_SIGNATURE_MISMATCH":"android.content.pm.shortcutinfo.disabled_reason_signature_mismatch\r\n","PackageManager#getApplicationInfo":"PackageManager＃getApplicationInfo\r\n","on error, for example this call was aborted, or\n                     timeout\n":"错误，例如，此呼叫被中止或\r\n                     暂停\r\n\r\n","android.content.pm.PackageManager.FEATURE_CAMERA_FLASH":"android.content.pm.packagemanager.feature_camera_flash\r\n","Returns an Intent which can be used by the default launcher to pin a shortcut containing the\n            given ":"返回默认启动器可以使用的意图，以固定包含该快捷方式\r\n            给出\r\n","A Drawable that can rotate another Drawable based on the current level value.":"可以根据当前级别值旋转另一个可绘制的可绘制。\r\n"," for tracking application operations\n            on the device.":" 用于跟踪应用程序操作\r\n            在设备上。\r\n","android.bluetooth.le.ScanFilter.getServiceUuid()":"android.bluetooth.le.scanfilter.getServiceuuid（）\r\n","M:Android.Content.BroadcastReceiver.SetResult(Android.App.Result,System.String,System.String)":"m：android.content.broadcastreceiver.setResult（android.app.result，system.String，System.String）\r\n","android.graphics.BlendModeColorFilter.getMode()":"android.graphics.blendmodecolorfilter.getmode（）\r\n","Retrieves an iterator object that you can use to iterate over the keys associated with\n            this <code>DrmInfoRequest</code> object.":"检索您可以使用与之相关的键的迭代对象\r\n            此<code> drminforequest </code>对象。\r\n"," when these methods are being used from\n            an ":" 当使用这些方法时\r\n            一个\r\n","#BIND_NOT_FOREGROUND":"#BIND_NOT_FEERGOUND\r\n","android.graphics.Paint.setXfermode(android.graphics.Xfermode)":"android.graphics.paint.setxfermode（android.graphics.xfermode）\r\n","#startUpdate":"＃开始升级\r\n",": Read sequentially, with an\n occasional forward seek.":"：顺序读取，用一个\r\n 偶尔向前寻求。\r\n","android.content.Intent.setClass(android.content.Context, java.lang.Class)":"android.content.intent.setClass（android.content.context，java.lang.class）\r\n",", corresponding to <code>immutablyRestricted</code>\n            value of ":"，对应于<code>不成熟的</code>\r\n            的价值\r\n","Gets the number of rows in this window.":"在此窗口中获取行数。\r\n","android.content.res.Configuration.COLOR_MODE_WIDE_COLOR_GAMUT_UNDEFINED":"android.content.res.configuration.color_mode_wide_color_gamut_undefined\r\n","ContentProvider#insert":"ContentProvider＃插入\r\n","Value for hyphenation frequency indicating the full amount of automatic hyphenation.":"连字符频率的值表示全部自动连字符。\r\n","Broadcast Action: This is broadcast when a user action should request a\n            temporary system dialog to dismiss.":"广播动作：这是当用户操作应要求的情况下广播\r\n            临时系统对话框要解散。\r\n","Effective descent value of this positioned glyphs.":"该位置字形的有效下降值。\r\n","Indicates whether the specified color is in a wide-gamut color space.":"指示指定的颜色是否在宽阔的颜色空间中。\r\n","Draw a series of lines.":"绘制一系列线条。\r\n","android.bluetooth.BluetoothHearingAid.getConnectionState(android.bluetooth.BluetoothDevice)":"android.bluetooth.bluetoothhearingaid.getConnectionState（android.bluetooth.bluetoothdevice）\r\n","Returns array of possible restriction entries that this entry may contain.":"返回本条目可能包含的可能限制条目的数组。\r\n","android.graphics.drawable.BitmapDrawable.getTileModeY()":"android.graphics.drawable.bitmapDrawable.getTileModey（）\r\n","android.graphics.ImageDecoder.ALLOCATOR_SOFTWARE":"android.graphics.imagedecoder.allocator_software\r\n","The row currently pointed to by the left cursor is unique ":"当前由左光标指向的行是唯一的\r\n","android.content.IntentFilter.addDataAuthority(java.lang.String, java.lang.String)":"android.content.intentfilter.adddataaauthority（java.lang.string，java.lang.string）\r\n","DrmEvent":"Drmevent\r\n","android.database.DatabaseUtils.getCollationKey(java.lang.String)":"android.database.databaseutils.getCollat​​ionKey（java.lang.string）\r\n","#close()":"#关闭()\r\n","Class":"班级\r\n","value indicating that a layout dir has been set to RTL.":"值表示布局DIR已设置为RTL。\r\n"," if text classification has not been\n            completed on the associated clip.":" 如果文本分类尚未\r\n            在关联的剪辑上完成。\r\n",": This device supports ethernet.":"：此设备支持以太网。\r\n","BluetoothGatt#writeDescriptor":"Bluetoothgatt＃写入标题\r\n","#RECEIVER_VISIBLE_TO_INSTANT_APPS":"#receiver_visible_to_instant_apps\r\n","Begin the second layer on top of the first layer.":"开始在第一层顶部的第二层。\r\n","Gets the package name.":"获取包装名称。\r\n","android.graphics.Paint.getXfermode()":"android.graphics.paint.getxfermode（）\r\n",": The device supports adding new input methods implemented\n            with the ":"：该设备支持添加实现的新输入方法\r\n            与\r\n","Copy 9 values from the array into the matrix.":"将9个值从数组复制到矩阵中。\r\n","Interface used to allow the creator of a dialog to run some code when an\n item on the dialog is clicked.":"用于允许对话框创建者的接口可以在\r\n 单击对话框上的项目。\r\n","LauncherApps":"LauncherApps\r\n","This method extracts the major and minor version of reqGLEsVersion attribute\n            and returns it as a string.":"此方法提取重新验证属性的主要版本和次要版本\r\n            并将其返回为字符串。\r\n","Interface definition for a callback to be invoked when a shared\n preference is changed.":"共享时要调用回调的接口定义\r\n 偏好已更改。\r\n","Activity Action: The user pressed the \"call\" button to go to the dialer\n            or other appropriate UI for placing a call.":"活动操作：用户按“呼叫”按钮将其转到拨号器\r\n            或其他适当的UI用于接听电话。\r\n","Starts a shortcut.":"开始快捷方式。\r\n","android.content.pm.ComponentInfo.attributionTags":"android.content.pm.com.ponentinfo.attributiontags\r\n","android.graphics.Matrix.postRotate(float, float, float)":"android.graphics.matrix.postrotate（浮点，浮点，浮点）\r\n","Constant representing HID Output Report type.":"常数表示HID输出报告类型。\r\n","android.content.Intent.ACTION_VIEW_LOCUS":"android.content.intent.action_view_locus\r\n","This is an entry for a single authority in the Iterator returned by\n ":"这是返回的迭代器中单个权限的条目\r\n \r\n","android.graphics.drawable.ColorDrawable":"android.graphics.drawable.colordrawable\r\n","android.content.res.ColorStateList.withLStar(float)":"android.content.Res.ColorStatelist.withlstar（float）\r\n","android.graphics.Canvas.clipRect(android.graphics.Rect)":"android.graphics.canvas.cleprect（android.graphics.Rect）\r\n","android.view.View#NO_ID":"android.view.view＃no_id\r\n","Returns the minimum valid value for the specified component of this\n            color space's color model.":"返回此指定组件的最小有效值\r\n            色彩空间的颜色模型。\r\n","android.content.Context.RECEIVER_VISIBLE_TO_INSTANT_APPS":"android.content.context.receiver_visible_to_instant_apps\r\n","android.app.WallpaperManager WallpaperManager":"android.app.wallpapermanager wallpapermanager\r\n","Key for request rejection button label contained in the request bundle.":"请求捆绑包中包含的请求拒绝按钮标签的键。\r\n","android.graphics.drawable.GradientDrawable.setStroke(int, android.content.res.ColorStateList, float, float)":"android.graphics.drawable.gradientdrawable.setstroke（int，android.content.res.colorStateList，float，float）\r\n","Create a hardware bitmap backed by a ":"创建一个由A支持的硬件位图\r\n","#getIndexCount()":"#getIndexCount（）\r\n","This function is called every time the cursor is successfully scrolled\n            to a new position, giving the subclass a chance to update any state it\n            may have.":"每次成功滚动光标时都会调用此函数\r\n            到一个新的位置，给子类一个更新它的任何状态的机会\r\n            可能有。\r\n","android.content.pm.PackageInfo.isApex":"android.content.pm.packageinfo.isapex\r\n","android.graphics.Bitmap.setHeight(int)":"android.graphics.bitmap.setheight（int）\r\n","android.content.res.ObbScanner":"机器人。内容。[医]ObbScanner\r\n","#screenLayout":"#screenlayout\r\n","android.R.styleable#AndroidManifest_versionCodeMajor versionCodeMajor":"android.r.Stylable＃androidManifest_versionCodemajor versionCodemajor\r\n","Draw the specified round-rect using the specified paint.":"使用指定的油漆绘制指定的圆形。\r\n","Retrieves the value of a given key.":"检索给定键的值。\r\n","android.graphics.Paint.setHinting(int)":"android.graphics.paint.sethinting（int）\r\n","Return the long description of a shortcut.":"返回快捷方式的长时间描述。\r\n","android.content.pm.PackageManager.FEATURE_AUDIO_OUTPUT":"android.content.pm.packagemanager.feature_audio_output\r\n","Move an existing shared preferences file from the given source storage\n            context to this context.":"将现有共享首选项文件从给定的源存储中移动\r\n            此上下文的上下文。\r\n","android.bluetooth.BluetoothGattServerCallback.onCharacteristicReadRequest(android.bluetooth.BluetoothDevice, int, int, android.bluetooth.BluetoothGattCharacteristic)":"android.bluetooth.bluetoothgattservercallback.oncharacteristicReadRequest（android.bluetooth.bluetooth.bluetoothdevice，int，int，int，android.bluetooth.bluetooth.bluetoothgatthgatcherictist）\r\n","Represents a Bluetooth GATT Service":"代表蓝牙Gatt服务\r\n","Creates a new inset drawable with the specified insets in pixels.":"用像素中的指定插图创建一个新的插图。\r\n","android.graphics.drawable.RotateDrawable.getPivotX()":"android.graphics.drawable.RotatedRawable.getPivotx（）\r\n","if the query returns zero rows\n":"如果查询返回零行\r\n\r\n","android.graphics.LinearGradient.LinearGradient(float, float, float, float, int, int, android.graphics.TileMode)":"android.graphics.lineargradient.lineargradient（float，float，float，float，float，int，int，int，android.graphics.tilemode）\r\n","android.content.pm.PackageManager.FEATURE_ACTIVITIES_ON_SECONDARY_DISPLAYS":"android.content.pm.packagemanager.feature_activities_on_secondary_displays\r\n","Returns true if this object represents connectable scan result.":"如果此对象表示可连接的扫描结果，则返回true。\r\n","android.graphics.RenderNode.offsetTopAndBottom(int)":"机器人。图形。RenderNode。offsetTopAndBottom（int）\r\n","android.graphics.Path.set(android.graphics.Path)":"android.graphics.path.set（android.graphics.path）\r\n","Constructs an Outline with a copy of the data in src.":"在SRC中使用数据副本构造大纲。\r\n","Compressed JPEG format.":"压缩JPEG格式。\r\n","android.graphics.drawable.Animatable2.clearAnimationCallbacks()":"android.graphics.drawable.animatable2.clearanimationcallbacks（）\r\n","android.content.AbstractThreadedSyncAdapter.LOG_SYNC_DETAILS":"android.content.AbstractthreadSyncadapter.log_sync_details\r\n"," for accessing the system's window\n            manager.":" 用于访问系统的窗口\r\n            经理。\r\n","android.bluetooth.BluetoothGattServerCallback.onDescriptorReadRequest(android.bluetooth.BluetoothDevice, int, int, android.bluetooth.BluetoothGattDescriptor)":"android.bluetooth.bluetoothgattservercallback.ondescriptorreadreeadrequest（android.bluetooth.bluetooth.bluetoothdevice，int，int，int，android.bluetooth.bluetooth.bluetoothgattdescriptor）\r\n","\n            value that corresponds to the\n            <a href=\"[TODO: @docRoot]guide/topics/resources/providing-resources.":"\r\n            对应于\r\n            <a href=\"[TODO：@docRoot]指南/主题/资源/提供-资源。\r\n","android.graphics.RenderEffect":"android.graphics.rendereffect\r\n","android.content.pm.SharedLibraryInfo.getDeclaringPackage()":"android.content.pm.SharedLibraryInfo.getDeclaringPackage()\r\n","android.content.pm.ApplicationInfo.GWP_ASAN_NEVER":"android.content.pm.applicationinfo.gwp_asan_never\r\n","Retrn the inner radius of the ring -or- Configure the inner radius of the ring.":"重新恢复环 - 或 - 配置环的内半径。\r\n","Called when a connection to the Service has been lost.":"当与服务的连接丢失时，请致电。\r\n","Creates geometric paths, utilizing the ":"创建几何路径，利用\r\n","DrmInfo":"Drminfo\r\n","android.bluetooth.BluetoothHearingAid.ACTION_CONNECTION_STATE_CHANGED":"android.bluetooth.bluetoothhearingaid.action_connection_state_changed\r\n","Preconcat the current matrix with the specified skew.":"用指定的偏斜预先设置当前矩阵。\r\n","General raw camera sensor image format, usually representing a\n            single-channel Bayer-mosaic image.":"一般的原始摄像机传感器图像格式，通常代​​表\r\n            单渠道拜耳 - 摩萨克图像。\r\n","android.content.res.Resources.updateConfiguration(android.content.res.Configuration, android.util.DisplayMetrics)":"android.content.res.resources.updateconfiguration（android.content.res.res.configuration，android.util.displaymetrics）\r\n","Mark this table as syncable.":"将此表标记为同步。\r\n","android.graphics.Canvas.drawBitmapMesh(android.graphics.Bitmap, int, int, float[], int, int[], int, android.graphics.Paint)":"android.graphics.CANVAS.DRAWBITMAPMESH（android.graphics.bitmap，int，int，float，float []，int，int，int []，int，android.graphics.paint）\r\n","android.graphics.Bitmap.getNinePatchChunk()":"android.graphics.bitmap.getninepatchchunk（）\r\n"," API.":" API。\r\n","Delete all dynamic shortcuts from the caller app.":"从呼叫者应用程序中删除所有动态快捷方式。\r\n","Returns the thickness of the underline in pixels.":"将下划线的厚度返回像素。\r\n","android.bluetooth.BluetoothGattServer.setPreferredPhy(android.bluetooth.BluetoothDevice, int, int, int)":"android.bluetooth.bluetoothgattserver.setpreferredphy（android.bluetooth.bluetoothdevice，int，int，int）\r\n","android.content.ContentProvider content provider":"android.content.ContentProvider内容提供商\r\n","android.bluetooth.BluetoothGattCallback.onMtuChanged(android.bluetooth.BluetoothGatt, int, int)":"android.bluetooth.bluetoothgattcallback.onmtuchanged（android.bluetooth.bluetoothgatt，int，int）\r\n","android.content.pm.PackageManager.getActivityInfo(android.content.ComponentName, int)":"android.content.pm.packagemanager.getActivityInfo（android.content.componentname，int）\r\n","android.database.Cursor.registerContentObserver(android.database.ContentObserver)":"android.database.Cursor.RegisterContentObserver（android.database.contentobserver）\r\n","android.content.AsyncTaskLoader.isLoadInBackgroundCanceled()":"android.content.asynctaskloader.isloadinbackgroundcanceled（）\r\n","Indicates an activity optimized for Leanback mode, and that should\n            be displayed in the Leanback launcher.":"指示针对精益模式进行优化的活动，这应该\r\n            显示在精益启动器中。\r\n","android.content.IntentFilter.hasAction(java.lang.String)":"android.content.intentfilter.hasaction（java.lang.string）\r\n","Class to scan Opaque Binary Blob (OBB) files.":"类来扫描不透明的二进制Blob(OBB)文件。\r\n","Can be set by the caller to indicate that this Intent is coming from\n a background operation, not from direct user interaction.":"可以由呼叫者设置以表明此意图来自\r\n 背景操作，而不是直接用户交互。\r\n","android.bluetooth.BluetoothHeadset.AT_CMD_TYPE_READ":"android.bluetooth.bluetoothheadset.at_cmd_type_read\r\n","android.view.LayoutInflater LayoutInflater":"android.view.layoutinflater Layoutinflater\r\n","Flag to indicate that cancel has been called on this object.":"标志表示已在此对象上调用取消。\r\n"," if the value in the indicated column is null.":" 如果指示列中的值为null。\r\n","ArcShape constructor.":"弧形构造函数。\r\n"," for\n            indexing and querying app data managed by the system.":" 为了\r\n            由系统管理的索引和查询应用数据。\r\n","ContentObserver#dispatchChange(boolean, Uri)":"ContentObserver＃dispatchchange（布尔值，uri）\r\n","Check that only values of the following types are in the Bundle:\n            <ul>\n            <li>Integer</li>\n            <li>Long</li>\n            <li>Boolean</li>\n            <li>Float</li>\n            <li>Double</li>\n            <li>String</li>\n            <li>Account</li>\n            <li>null</li>\n            </ul>":"检查以下类型的值是否在捆绑包中：\r\n            <ul>\r\n            <li>整数</li>\r\n            <li>长</li>\r\n            <li>布尔</li>\r\n            <li> float </li>\r\n            <li> double </li>\r\n            <li>字符串</li>\r\n            <li>帐户</li>\r\n            <li> null </li>\r\n            </ul>\r\n","BluetoothAdapter#getLeMaximumAdvertisingDataLength":"BluetoothAdapter＃getLemaximumAdvertisingDataLength\r\n","android.bluetooth.BluetoothGattCharacteristic.FORMAT_UINT32":"android.bluetooth.bluetoothgattcharacteristic.format_uint32\r\n","android.content.Intent.ACTION_MEDIA_UNMOUNTED":"android.content.intent.action_media_unmounted\r\n","Construct FontVariationAxis.":"构建fontvariationaxis。\r\n","Set the matrix to rotate by the specified sine and cosine values, with a pivot point at (px,\n            py).":"将矩阵设置以通过指定的正弦和余弦值旋转，并具有一个枢轴点（px，px，\r\n            PY）。\r\n","android.content.pm.ServiceInfo.permission":"android.content.pm.ServiceInfo.permission\r\n","android.graphics.drawable.BitmapDrawable.setBitmap(android.graphics.Bitmap)":"android.graphics.drawable.bitmapdrable.setbitmap（android.graphics.bitmap）\r\n","android.graphics.Paint.getTextWidths(char[], int, int, float[])":"android.graphics.paint.getTextWidths（char []，int，int，float []）\r\n","Adds a stroke to the gesture.":"为手势增加了中风。\r\n","Note: passing a ":"注意：通过\r\n","Geometry and text drawn with this style will be filled, ignoring all\n stroke-related settings in the paint.":"几何和使用这种样式绘制的文字将被填充，忽略所有\r\n 油漆中与中风相关的设置。\r\n","Return the color model of this color space.":"返回此颜色空间的颜色模型。\r\n","List of characteristics included in this service.":"此服务中包含的特征列表。\r\n","Computes the Outline of the shape and return it in the supplied Outline\n            parameter.":"计算形状的轮廓并将其返回在提供的轮廓中\r\n            范围。\r\n","Replace the contents of this Outline with the contents of src.":"用SRC的内容代替此大纲的内容。\r\n","android.graphics.Outline.Outline(android.graphics.Outline)":"android.graphics.outline.outline（android.graphics.outline）\r\n","android.graphics.NinePatch.draw(android.graphics.Canvas, android.graphics.RectF)":"android.graphics.ninepatch.draw（android.graphics.canvas，android.graphics.rectf）\r\n","DrmUtils.ExtendedMetadataParser":"drmutils.extendendendedMetadataparser\r\n","Set this colormatrix to scale by the specified values.":"Set this colormatrix to scale by the specified values.\r\n","android.database.DatabaseUtils.dumpCurrentRow(android.database.Cursor, java.io.PrintStream)":"android.database.databaseutils.dumpcurrentrow（android.database.cursor，java.io.printstream）\r\n","Create a new component identifier from a Context and class name.":"从上下文和类名创建新的组件标识符。\r\n","android.graphics.HardwareRenderer.createRenderRequest()":"android.graphics.hardwarerenderer.createrrequest（）\r\n","SQLiteStatement":"sqlitestatement\r\n","android.bluetooth.le.AdvertisingSet.setPeriodicAdvertisingParameters(android.bluetooth.le.PeriodicAdvertisingParameters)":"android.bluetooth.le.Advertisingset.setperiodicacadvertising参数（android.bluetooth.le.periodicacadecadvertistersparameters）\r\n","android.graphics.Color.alpha(int)":"android.graphics.Color.alpha(int)\r\n","Return true if the shader has a non-identity local matrix.":"如果着色器具有非身份本地矩阵，则返回true。\r\n","Drawable#setTintMode(PorterDuff.Mode)":"可绘制的＃settintmode（porterduff.mode）\r\n","android.graphics.Paint.getPathEffect()":"android.graphics.paint.getPatheffect（）\r\n","Return a new Context object for the given application name.":"返回给定应用程序名称的新上下文对象。\r\n","If this object represents a feature supported by a device, this is the\n            maximum version of this feature supported by the device.":"如果此对象表示设备支持的功能，则是\r\n            设备支持此功能的最大版本。\r\n","android.graphics.Canvas.getMatrix(android.graphics.Matrix)":"android.graphics.canvas.getmatrix（android.graphics.matrix）\r\n","Returns a list of GATT services offered by this device.":"返回此设备提供的Gatt服务列表。\r\n","ClipDescription":"剪贴画\r\n","android.content.pm.PackageManager.FEATURE_NFC_OFF_HOST_CARD_EMULATION_ESE":"android.content.pm.packagemanager.feature_nfc_off_host_card_emulation_ese\r\n","UUID of the storage volume on which this application is being hosted.":"托管此应用程序的存储量的UUID。\r\n","android.graphics.NinePatch.getWidth()":"android.graphics.ninepatch.getWidth（）\r\n","Computes an oriented, minimum bounding box of a set of points.":"计算一组点的面向最小边界框。\r\n","Key for an SQL style sort string that may be present in the query Bundle argument\n            passed to ":"查询束参数中可能存在的SQL样式排序字符串的键\r\n            传递\r\n","android.graphics.drawable.LayerDrawable.addLayer(android.graphics.drawable.Drawable)":"android.graphics.drawable.layerdrawable.addlayer（android.graphics.drawable.drawable）\r\n","Attempt to cancel the current load task.":"尝试取消当前的加载任务。\r\n","Cursor#FIELD_TYPE_NULL":"光标＃field_type_null\r\n","android.content.Intent.EXTRA_CONTENT_QUERY":"android.content.intent.extra_content_query\r\n","android.content.pm.VersionedPackage":"android.content.pm.versionedpackage\r\n","The next app to receive the permission protected data.":"接收权限受保护数据的下一个应用程序。\r\n","@empty":"@空的\r\n","android.content.Intent.EXTRA_LOCUS_ID":"android.content.intent.extra_locus_id\r\n","Move the cursor by a relative amount, forward or backward, from the\n current position.":"将光标向前或向后移动一个相对量，从\r\n 当前位置。\r\n","android.content.pm.PackageInstaller.updateSessionAppLabel(int, java.lang.CharSequence)":"android.content.pm.packageinstaller.updatesessionapplabel（int，java.lang.charsequence）\r\n","android.content.pm.PackageManager.setApplicationCategoryHint(java.lang.String, int)":"android.content.pm.packagemanager.setApplicationCategoryHint（java.lang.string，int）\r\n","Register to receive intent broadcasts, to run in the context of\n            <var>scheduler</var>.":"注册以接收意图广播，以在\r\n            <var>调度程序</var>。\r\n","android.graphics.Bitmap.compress(android.graphics.CompressFormat, int, java.io.OutputStream)":"android.graphics.bitmap.compress（android.graphics.compressformat，int，java.io.outputstream）\r\n","android.content.pm.PackageManager.FEATURE_INPUT_METHODS":"android.content.pm.packagemanager.feature_input_methods\r\n","android.content.pm.PermissionInfo.FLAG_HARD_RESTRICTED":"android.content.pm.permissioninfo.flag_hard_restricted\r\n","android.graphics.Typeface.createFromAsset(android.content.res.AssetManager, java.lang.String)":"android.graphics.typeface.createfromasset（android.content.res.res.assetmanager，java.lang.string）\r\n","android.content.pm.PackageManager.FEATURE_AUTOFILL":"android.content.pm.packagemanager.feature_autofill\r\n","android.graphics.Rect.inset(int, int, int, int)":"机器人。图形。长插页(int,int,int,int)\r\n","android.graphics.Bitmap.eraseColor(long)":"android.graphics.bitmap.erasecolor（long）\r\n",":\n            The device can perform backup and restore operations on installed applications.":"：\r\n            该设备可以在已安装的应用程序上执行备份并还原操作。\r\n","Returns the absolute path on the filesystem where a file created with\n ":"返回文件系统上创建的文件系统上的绝对路径\r\n \r\n","android.content.pm.PackageManager.getWhitelistedRestrictedPermissions(java.lang.String, int)":"android.content.pm.packagemanager.getWhiteListedRestrictrationdermissions（java.lang.string，int）\r\n","CrossProcessCursor":"交叉处理者\r\n","Retrieve all of the information we know about a particular group of\n            permissions.":"检索我们知道的有关特定组的所有信息\r\n            权限。\r\n","#restoreCallingIdentity":"#RestoreCallingIdentity\r\n","The coordinates of the center of the mouth.":"嘴中心的坐标。\r\n","This method enables parallel execution of queries from multiple threads on the\n            same database.":"此方法启用从多个线程的查询并行执行\r\n            相同的数据库。\r\n","An Intent[] describing additional, alternate choices you would like shown with\n            ":"意图[]描述您想要显示的其他选择的其他选择\r\n            \r\n","Set this object to the system defaults.":"将此对象设置为系统默认值。\r\n","Default value for ":"默认值\r\n","android.content.ContentProviderClient.refresh(android.net.Uri, android.os.Bundle, android.os.CancellationSignal)":"android.content.contentproviderclient.refresh（android.net.uri，android.os.os.bundle，android.os.os.cancellationsignal）\r\n","A long representing the start timestamp (epoch time in millis) of the permission usage\n            when used with ":"长时间代表开始使用权限的开始时间戳（时期）\r\n            使用时\r\n","ColorSpace#getMaxValue(int)":"ColorSpace#getMaxValue(int)\r\n","android.database.sqlite.SQLiteQueryBuilder.buildQuery(java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"android.database.sqlite.sqlitequerybuilder.buildquery（java.lang.string []，java.lang.string，java.lang.string，java.lang.lang.string，java.lang.lang.lang.string，java.lang.string，java.strang.string）\r\n","android.graphics.drawable.Animatable":"android.graphics.drawable.animatable\r\n","Remove a ":"删除一个\r\n","android.content.Context.VPN_MANAGEMENT_SERVICE":"android.content.context.vpn_management_service\r\n","Creates a new wrapper around the specified drawable.":"在指定的drawable周围创建一个新的包装器。\r\n","android.graphics.Bitmap.createBitmap(android.graphics.Bitmap)":"android.graphics.bitmap.createbitmap（android.graphics.bitmap）\r\n","A helper class that contains several ":"一个帮助器类，包含几个 \r\n","Abstract Loader that provides an ":"抽象加载程序提供\r\n","android.bluetooth.BluetoothHeadset.EXTRA_VENDOR_SPECIFIC_HEADSET_EVENT_ARGS":"android.bluetooth.bluetoothheadset.extra_vendor_specific_headset_event_args\r\n","android.graphics.Paint.getRunAdvance(java.lang.CharSequence, int, int, int, int, boolean, int)":"android.graphics.paint.getrunadvance（Java.lang.CharSequence，int，int，int，int，int，int，boolean，int）\r\n","Enables or disables the mipmap hint for this drawable's bitmap.":"启用或禁用此绘制的位图的MIPMAP提示。\r\n","android.drm.DrmConvertedStatus.DrmConvertedStatus(int, byte[], int)":"android.drm.drmconvertedstatus.drmconvertedstatus（int，byte []，int）\r\n","Get the type of this service (primary/secondary)":"获取此服务的类型（主要/次要）\r\n","android.graphics.LightingColorFilter.getColorMultiply()":"android.graphics.lightingcolorfilter.getColormultiply（）\r\n","android.content.Intent.EXTRA_INITIAL_INTENTS":"android.content.intent.extra_initial_intents\r\n","Return in insets the layout insets suggested by this Drawable for use with alignment\n            operations during layout.":"返回插图中的布局插图，该布局插图可用于对齐\r\n            布局期间的操作。\r\n","Start Bluetooth LE scan using a ":"使用A启动蓝牙LE扫描\r\n","android.content.Context.WIFI_AWARE_SERVICE":"android.content.context.wifi_aware_service\r\n","android.content.ContentResolver.QUERY_ARG_SORT_LOCALE":"android.content.contentresolver.query_arg_sort_locale\r\n",": The Beam API is enabled on the device.":"：在设备上启用了光束API。\r\n","android.database.Cursor.getShort(int)":"android.database.cursor.getShort（int）\r\n","Return the scheme portion of the intent's data.":"返回意图数据的方案部分。\r\n"," values from the\n preferences.":" 来自\r\n 喜好。\r\n",": The device has a CDMA telephony stack.":"：该设备具有CDMA电话堆栈。\r\n","Returns the colors used to draw the gradient, or ":"返回用于绘制渐变的颜色，或 \r\n","Each pixel is stored on 4 bytes.":"每个像素都存储在4个字节上。\r\n","Gets whether the document prefers to be scaled for printing.":"获取文档是否更喜欢缩放用于打印。\r\n","Report that there was a security exception when opening the content provider\n            prior to calling ":"报告打开内容提供商时有安全例外\r\n            在打电话之前\r\n","Returns whether this application can be profiled, either by the shell user or the system.":"返回该应用程序是否可以由Shell用户或系统介绍。\r\n","Broadcast Action: An existing application package has been completely\n            removed from the device.":"广播动作：现有的应用程序包已完全\r\n            从设备上卸下。\r\n","This is the Android platform's generic MIME type to match any MIME\n            type of the form \"":"这是Android平台的通用MIME类型，可以匹配任何MIME\r\n            形式的类型”\r\n","Retrieves the unique session identifier associated with this object.":"检索与此对象关联的唯一会话标识符。\r\n","BluetoothGattServer#readPhy":"Bluetoothgattserver＃ReadPhy\r\n","android.content.Context.createWindowContext(android.view.Display, int, android.os.Bundle)":"android.content.context.CreateWIndowContext（android.view.display，int，android.os.bundle）\r\n","Move the cursor to the last row.":"将光标移动到最后一行。\r\n","Break paragraph into lines.":"将段落分为线。\r\n","android.content.pm.ApplicationInfo.deviceProtectedDataDir":"android.content.pm.applicationinfo.deviceprotecteddatadir\r\n","Retrieve the icon associated with an activity.":"检索与活动相关的图标。\r\n","android.os.Message":"android.os.message\r\n","Defines status notifications for digital rights.":"定义数字权利的状态通知。\r\n","Take pictures on the beach.":"在海滩上拍照。\r\n","flag: include disabled components in the returned info.":"标志：在返回的信息中包含禁用组件。\r\n","android.bluetooth.le.BluetoothLeAdvertiser.startAdvertising(android.bluetooth.le.AdvertiseSettings, android.bluetooth.le.AdvertiseData, android.bluetooth.le.AdvertiseCallback)":"android.bluetooth.le.bluetoothleadvertiser.startadvertising（android.bluetooth.Le.le.Andvertisetsettings，android.bluetooth.le.le.aptervertiseata，android.bluethoit.luetooth.le.le.aptertisecallback）\r\n","Retrieve the CharSequence[] for the attribute at <var>index</var>.":"检索<var> index </var>的属性的char序列[]。\r\n","android.content.res.Resources.getFraction(int, int, int)":"android.content.res.resources.getFraction（int，int，int）\r\n","Size of cache used by the application.":"应用程序使用的缓存大小。\r\n","android.content.SyncResult.partialSyncUnavailable":"android.content.syncresult.partialsyncunavailable\r\n","android.content.IntentFilter.match(android.content.ContentResolver, android.content.Intent, boolean, java.lang.String)":"android.content.intentfilter.match（android.content.contentresolver，android.content.intent，boolean，java.lang.string）\r\n","A ConstantState that can contain several ":"一个ConstantState，可以包含几个 \r\n","android.database.ContentObserver.dispatchChange(boolean, android.net.Uri)":"android.database.contentobserver.dispatchchange（boolean，android.net.uri）\r\n","Tasks and Back\n Stack":"任务和背部\r\n 堆\r\n","Convenience method that returns the height of this bitmap divided\n            by the density scale factor.":"返回该位图的高度的便利方法\r\n            按密度尺度因子。\r\n","android.graphics.HardwareRenderer":"android.graphics.hardwarerenderer\r\n",": The device includes a barometer (air\n            pressure sensor.":"：该设备包括晴雨表（空气\r\n            压力传感器。\r\n","android.content.ContextParams":"android.content.contextparams\r\n","Intent used to broadcast the change in connection state of the Input Host profile.":"目的用于广播输入主机配置文件的连接状态的更改。\r\n","#acquireContentProviderClient(Uri)":"#acquirecontentproviderclient（URI）\r\n","android.graphics.drawable.shapes.Shape.getOutline(android.graphics.Outline)":"android.graphics.drawable.shapes.shape.getOutline（android.graphics.outline）\r\n","Characteristic value format type uint16":"特征值格式类型UINT16\r\n","android.content.PeriodicSync.authority":"android.content.periodicsync.authority\r\n","#openFileOutput":"#openfileOutput\r\n","#sendBroadcast(Intent)":"#SendBroadcast（意图）\r\n","android.content.IntentFilter.authoritiesIterator()":"android.content.intentfilter.authoritiesIterator（）\r\n","android.bluetooth.BluetoothGattServerCallback.onConnectionStateChange(android.bluetooth.BluetoothDevice, int, int)":"android.bluetooth.bluetoothgattservercallback.onconnectionstatechange（android.bluetooth.bluetoothdevice，int，int）\r\n","Use shared memory for the pixel memory.":"使用共享内存作为像素内存。\r\n","android.hardware.HardwareBuffer.YCBCR_420_888":"android.hardware.hardwarebuffer.ycbcr_420_888\r\n","Create Signature from a text representation previously returned by\n            ":"从先前由以前返回的文本表示形式创建签名\r\n            \r\n","android.content.Context.TELEPHONY_SUBSCRIPTION_SERVICE":"android.content.context.telephony_subscription_service\r\n","android.graphics.Paint.getTextLocale()":"android.graphics.paint.getTextlocale（）\r\n","android.content.pm.Signature.toChars(char[], int[])":"android.content.pm.signature.tochars（char []，int []）\r\n","android.content.Context.DROPBOX_SERVICE":"android.content.context.dropbox_service\r\n","#BIND_IMPORTANT":"#bind_important\r\n","android.bluetooth.BluetoothGattCharacteristic.WRITE_TYPE_DEFAULT":"android.bluetooth.bluetoothgattcharacteristic.write_type_default\r\n","Gets a value and converts it to a String.":"获取一个值并将其转换为字符串。\r\n","android.database.sqlite.SQLiteDatabase.replace(java.lang.String, java.lang.String, android.content.ContentValues)":"android.database.sqlite.sqlitedatabase.replace（java.lang.string，java.lang.string，android.content.contentvalues）\r\n","The group this permission is a part of, as per\n            ":"该团体此权限是一部分，根据\r\n            \r\n","Used to allow returning sub-classes of ":"用于允许返回的子类\r\n","android.telecom.TelecomManager":"android.telecom.telecommanager\r\n","Set the general action to be performed.":"设置要执行的一般操作。\r\n","android.content.pm.PackageManager.MAXIMUM_VERIFICATION_TIMEOUT":"android.content.pm.PackageManager.MAXIMUM_VERIFICATION_TIMEOUT\r\n","Intent#ACTION_QUICK_VIEW":"意图＃action_quick_view\r\n","android.graphics.Canvas.concat(android.graphics.Matrix)":"android.graphics.canvas.concat（android.graphics.matrix）\r\n","android.content.pm.PackageManager.queryInstrumentation(java.lang.String, int)":"android.content.pm.PackageManager.queryInstrumentation(java.lang.String,int)\r\n","#ACTION_REQUEST_PERMISSION":"#action_request_permission\r\n","android.content.ContentProviderClient.release()":"android.content.ContentProviderClient.Release（）\r\n","\n          A complete path identifying the data subset or subsets that\n          permission can be granted for, with possible wildcards.\n        ":"\r\n          识别数据子集或子集的完整路径\r\n          可以通过可能的通配符授予许可。\r\n        \r\n","android.bluetooth.BluetoothHidDevice.unregisterApp()":"android.bluetooth.bluetoothhiddevice.unregisterapp（）\r\n","android.graphics.drawable.LayerDrawable.getLayerInsetEnd(int)":"android.graphics.drawable.layerdrawable.getlayerinsetend（int）\r\n","android.content.ComponentCallbacks2.onTrimMemory(int)":"android.content.componentCallbacks2.Ontrimmemory（int）\r\n","Health Profile - Channel Type used - Reliable":"健康状况 - 使用的频道类型 - 可靠\r\n","An Insets instance holds four integer offsets which describe changes to the four\n            edges of a Rectangle.":"一个插图实例拥有四个整数偏移，描述了四个的更改\r\n            矩形的边缘。\r\n","Returns the column name at the given zero-based column index.":"返回给定的从零开始的列索引处的列名。\r\n","android.graphics.Paint.getFontMetricsInt(android.graphics.FontMetricsInt)":"android.graphics.paint.getFontmetricsint（android.graphics.fontmetricsint）\r\n"," or a related method, change\n            how the system manages that service's process in relation to other processes.":"或相关方法，更改\r\n            系统如何管理该服务与其他流程相关的过程。\r\n","Playback resumed.":"恢复播放。\r\n","android.graphics.drawable.Drawable.onLayoutDirectionChanged(int)":"android.graphics.drawable.drawable.onlayoutdirectionChanged（int）\r\n","Set a float value in the preferences editor, to be written back once\n ":"在首选项编辑器中设置一个浮点值，将其写回一次\r\n \r\n",", but any text that would\n be returned as HTML formatting will be returned as text with\n style spans.":"，但是任何文本都会\r\n 返回作为HTML格式作为文本的返回\r\n 风格跨度。\r\n","Pin shortcuts on a package.":"包装上的固定快捷方式。\r\n","android.content.pm.InstrumentationInfo.targetPackage":"android.content.pm.instrumentationinfo.targetpackage\r\n","Add a new Item to the overall ClipData container.":"将新项目添加到整个Clipdata容器中。\r\n","Apps that publish shortcuts should call this method whenever the user\n            selects the shortcut containing the given ID or when the user completes\n            an action in the app that is equivalent to selecting the shortcut.":"发布快捷方式的应用程序应在用户时调用此方法\r\n            选择包含给定ID的快捷方式或用户完成\r\n            应用程序中的操作等同于选择快捷方式。\r\n","Creates a cross process cursor wrapper.":"创建一个跨处理光标包装器。\r\n","android.graphics.RenderNode.getCameraDistance()":"android.graphics.rendernode.getCameradistance（）\r\n","Gets the drawable's color value. -or- Sets the drawable's color value.":"获取可绘制的颜色值。 - 或设置可绘制的颜色值。\r\n","Remove all permissions to access a particular content provider Uri\n that were previously added with ":"删除所有权限以访问特定内容提供商URI\r\n 以前添加了\r\n","Draw the specified range of text, specified by start/end, with its origin at (x,y), in the\n            specified Paint.":"绘制指定的文本范围，由start/end指定，其原点在（x，y）中\r\n            指定的油漆。\r\n","Map from the current package names in use on the device to whatever\n            the current canonical name of that package is.":"从设备上使用的当前软件包名称映射到任何\r\n            该软件包的当前规范名称是。\r\n","android.content.Intent.EXTRA_AUTO_LAUNCH_SINGLE_CHOICE":"android.content.intent.extra_auto_launch_single_choice\r\n","android.graphics.Rect.intersect(android.graphics.Rect)":"机器人。图形。长相交（android。图形。Rect）\r\n","Creates a set of values copied from the given set":"创建从给定集复制的一组值\r\n","android.content.pm.PackageManager.FEATURE_VERIFIED_BOOT":"android.content.pm.packagemanager.feature_verified_boot\r\n","Convenience method for determining if the SyncResult indicates that a soft error\n            occurred.":"确定综合是否表明软错误的便利方法\r\n            发生了。\r\n","android.graphics.ColorMatrix.setSaturation(float)":"android.graphics.ColorMatrix.setSaturation(float)\r\n","The Bluetooth Health Application Configuration that is used in conjunction with\n            the ":"结合使用的蓝牙健康应用程序配置\r\n            这\r\n","Broadcast Action:  A new picture is taken by the camera, and the entry of\n            the picture has been added to the media store.":"广播动作：相机拍摄的新图片，进入\r\n            图片已添加到媒体店。\r\n","#notifyChange(Uri, ContentObserver, int)":"#NotifyChange（URI，ContentObserver，int）\r\n","Creates a ResourcesProvider from a resources table (":"从资源表创建资源推广者（\r\n","android.content.pm.PackageManager.getResourcesForApplication(java.lang.String)":"android.content.pm.packagemanager.getResourcesForapplication（java.lang.string）\r\n","android.bluetooth.BluetoothHidDevice.SUBCLASS2_REMOTE_CONTROL":"android.bluetooth.bluetoothhiddevice.subclass2_remote_control\r\n","Returns the names of the packages that have been changed\n            [eg.":"返回已更改的软件包的名称\r\n            [例如。\r\n","Returns true if write-ahead logging has been enabled for this database.":"如果已启用了此数据库的写入记录，则返回true。\r\n"," implementation to have this Drawable\n            redrawn.":" 实施以使此绘制可绘制\r\n            重新绘制。\r\n","android.content.pm.ModuleInfo.describeContents()":"android.content.pm.moduleinfo.describecontents（）\r\n","android.content.ClipboardManager.setText(java.lang.CharSequence)":"android.content.clipboardmanager.settext（java.lang.charsequence）\r\n","android.content.Intent.setExtrasClassLoader(java.lang.ClassLoader)":"android.content.intent.setExtrasClassLoader（java.lang.classloader）\r\n","Compress a rectangle region in the YuvImage to a jpeg.":"压缩Yuvimage中的矩形区域为JPEG。\r\n","Value for break strategy indicating balanced line breaking.":"突破策略的价值表示平衡线破裂。\r\n","Font hinter option that disables font hinting.":"Font Hinter选项禁用字体提示。\r\n","Clears any pivot previously set by a call to  ":"清除以前由调用设置的任何枢轴  \r\n","Creates a typeface object that best matches the specified existing typeface and the specified\n            weight and italic style":"创建一个最能匹配指定的现有字体和指定的字体对象\r\n            重量和斜体样式\r\n","BluetoothHealth#APP_CONFIG_REGISTRATION_SUCCESS":"BluetoothHealth＃APP_CONFIG_REGISTRATION_SUCCESS\r\n","Returns the name for the activity from  android:name in the manifest.":"返回清单中的Android：名称的活动名称。\r\n","\n          The name of a permission that clients must have to launch the\n          receiver.\n        ":"\r\n          客户必须启动的许可名称\r\n          接收者。\r\n        \r\n","if you are not allowed to add the\n given permission name.":"如果不允许您添加\r\n 给定权限名称。\r\n","android.graphics.Outline.setRoundRect(int, int, int, int, float)":"android.graphics.outline.setRoundRect（int，int，int，int，float）\r\n","android.content.RestrictionsManager.ACTION_PERMISSION_RESPONSE_RECEIVED":"android.content.strictionsmanager.action_permission_response_received\r\n","Counter for tracking how many entries were affected by the sync operation, as defined\n            by the SyncAdapter.":"跟踪定义的同步操作影响多少个条目的计数器\r\n            由SyncAdapter。\r\n"," supported by the physical devices\n            that support the hardware level indicated by ":" 由物理设备支持\r\n            支持由\r\n","Constant corresponding to <code>mediaPlayback</code> in\n            the ":"常量对应于<code>mediaPlayback</code>in\r\n            该 \r\n","Return the styled text array associated with a particular resource ID.":"返回与特定资源ID关联的样式文本数组。\r\n","android.bluetooth.le.AdvertisingSetCallback.onPeriodicAdvertisingEnabled(android.bluetooth.le.AdvertisingSet, boolean, int)":"android.bluetooth.le.AdvertisingsetCallback.OnperiodicAcadvertisingEnabled（android.bluetooth.le.le..aptervertisingset，boolean，int）\r\n","Extra used to indicate that an intent can allow the user to select and\n            return multiple items.":"用于表明意图的额外用户可以允许用户选择和\r\n            返回多个项目。\r\n","android.content.Loader.onContentChanged()":"android.content.loader.oncontentchanged（）\r\n","#BIND_DEBUG_UNBIND":"#bind_debug_unbind\r\n","The minimum SDK version this application targets.":"最小SDK版本该应用程序目标。\r\n","An OutputStream you can create on a ParcelFileDescriptor, which will\n take care of calling ":"您可以在ParcelFileDescriptor上创建一个OutputStream，它将\r\n 照顾打电话 \r\n","android.bluetooth.BluetoothHealth.SOURCE_ROLE":"android.bluetooth.bluetoothhealth.source_role\r\n","android.graphics.BitmapRegionDecoder.recycle()":"android.graphics.bitmapregiondecoder.recycle（）\r\n","Return the target activity.":"返回目标活动。\r\n","Set the layout direction from a Locale.":"设置布局方向。\r\n","[Sa * Da, Sa * Dc] ":"[sa * da，sa * dc]\r\n",": The device\n            supports embedded subscriptions on eUICCs.":"： 设备\r\n            支持EUICC上的嵌入式订阅。\r\n","android.graphics.PaintFlagsDrawFilter.PaintFlagsDrawFilter(int, int)":"android.graphics.paintflagsdrawfilter.paintflagsdrawfilter（int，int）\r\n","android.content.Intent.EXTRA_ATTRIBUTION_TAGS":"android.content.intent.extra_attribution_tags\r\n","android.database.sqlite.SQLiteQueryBuilder.buildUnionQuery(java.lang.String[], java.lang.String, java.lang.String)":"android.database.sqlite.sqlitequerybuilder.buildunionquery（java.lang.string []，java.lang.string，java.lang.string）\r\n"," on a background thread and notifies the <code>\n            ":" 在背景线程上并通知<code>\r\n            \r\n","Configure the padding of the gradient shape":"配置梯度形状的填充\r\n","android.content.pm.PackageManager.resolveService(android.content.Intent, int)":"android.content.pm.PackageManager.resolveService（android.content.Intent，int）\r\n","A SQLite exception that indicates there was an error with SQL parsing or execution.":"SQLITE异常，表明SQL解析或执行存在错误。\r\n","Used as a string extra field with ":"用作字符串的额外字段\r\n","Retrieves the label for the activity.":"检索活动的标签。\r\n","android.content.pm.ActivityInfo.taskAffinity":"android.content.pm.activityinfo.taskaffility\r\n","Retrieves a map of extended data from the intent.":"从意图中检索扩展数据的地图。\r\n","Create an intent to launch the main (root) activity of a task.":"创建意图来启动任务的主要（根）活动。\r\n","Used as a boolean extra field in ":"用作布尔值额外的领域\r\n","android.content.Context.createConfigurationContext(android.content.res.Configuration)":"android.content.context.CreateConfigurationContext（android.content.res.configuration）\r\n","Throws FileNotFoundException if no\n file exists under the URI or the mode is invalid.":"如果没有\r\n 文件存在于URI或模式下的文件无效。\r\n","Constant representing error response for Set Report due to \"not ready\".":"由于“未准备就绪”而导致的设置报告的常数表示错误响应。\r\n","Set the alpha level for this drawable [0.":"设置此绘制的alpha级别[0。\r\n","android.content.pm.PackageInstaller.unregisterSessionCallback(android.content.pm.SessionCallback)":"android.content.pm.packageinstaller.unregistersessessionCallback（android.content.pm.sessioncallback）\r\n","Activity Action: List all available applications.":"活动行动：列出所有可用的应用程序。\r\n","android.graphics.drawable.Icon.TYPE_URI":"android.graphics.drawable.icon.type_uri\r\n","Size of the external data used by the application (e.":"应用程序使用的外部数据的大小（e。\r\n","android.content.ContentProvider.update(android.net.Uri, android.content.ContentValues, android.os.Bundle)":"android.content.contentprovider.update（android.net.uri，android.content.contentvalues，android.os.bundle）\r\n","android.graphics.drawable.Icon.TYPE_ADAPTIVE_BITMAP":"android.graphics.drawable.icon.type_adaptive_bitmap\r\n","android.graphics.Paint.getShader()":"android.graphics.paint.getShader（）\r\n","android.content.Intent.EXTRA_REPLACEMENT_EXTRAS":"android.content.intent.extra_replacement_extras\r\n","This method is called when the entire data set has changed,\n            most likely through a call to ":"当整个数据集都更改时，该方法被调用\r\n            最有可能通过电话\r\n","android.graphics.drawable.Drawable.setAlpha(int)":"android.graphics.drawable.drawable.setalpha（int）\r\n","Set the clip to the difference of the current clip and the specified rectangle, which is\n            expressed in local coordinates.":"将夹子设置为当前夹的差和指定的矩形，即\r\n            在本地坐标中表达。\r\n","Helper to compare two MIME types, where one may be a pattern.":"助手比较两种模拟类型，其中一种可能是模式。\r\n","android.graphics.HardwareRenderer.setName(java.lang.String)":"android.graphics.hardwarerenderer.setname（java.lang.string）\r\n","BluetoothProfile#STATE_DISCONNECTED":"BluetoothProfile＃state_disconnected\r\n","Return whether a shortcut is dynamic.":"返回捷径是动态的。\r\n","Indicates whether this Canvas uses hardware acceleration.":"指示该画布是否使用硬件加速度。\r\n","An interface to let apps define an action to take when database corruption is detected.":"一个接口，让应用程序定义在检测到数据库损坏时要采取的操作。\r\n","android.database.DefaultDatabaseErrorHandler":"android.database.defaultdatabaseerrorhandler\r\n","Add a new image/string ID to the set of images.":"将新的图像/字符串ID添加到一组图像中。\r\n","A Parcelable String array extra field in\n            ":"一个包裹的字符串阵列额外的字段\r\n            \r\n","#getMaxValue(int)":"#getMaxValue（int）\r\n","android.bluetooth.le.AdvertisingSetParameters.getTxPowerLevel()":"android.bluetooth.le.AdvertisingsetParameters.getTxPowerLevel（）\r\n","android.animation.ObjectAnimator":"android.animation.ObjectAnimator\r\n","if either of the packages are not valid.":"如果两个软件包无效。\r\n","android.graphics.drawable.LayerDrawable.getTopPadding()":"android.graphics.drawable.layerdrawable.getTopDapdding（）\r\n","android.content.pm.InstrumentationInfo.handleProfiling":"android.content.pm.instrumentationinfo.handleprofiling\r\n","Drawable container with only one child element.":"只有一个子元素的可绘制容器。\r\n","Shared library type: this library is backwards-compatible, can\n            be updated, and updates can be uninstalled.":"共享库类型：该库是向后兼容的，可以\r\n            被更新，并且更新可以被卸载。\r\n","android.content.RestrictionEntry.getSelectedString()":"android.content.resternityEntry.getSelectedString（）\r\n","Value returned by ":"返回的值\r\n","Releases a reference to the object, closing the object if the last reference\n            was released.":"释放对对象的引用，如果最后一个引用，则关闭对象\r\n            被释放。\r\n","Shortcut category for messaging related actions, such as chat.":"用于消息相关操作的快捷方式类别，例如聊天。\r\n","android.content.Intent.EXTRA_STREAM":"android.content.intent.extra_stream\r\n","android.graphics.ImageDecoder.setOnPartialImageListener(android.graphics.OnPartialImageListener)":"android.graphics.imagedecoder.setonpartialimagelistener（android.graphics.onpartialimagelistener）\r\n","Given a canonical Uri previously generated by ":"给定一个先前由\r\n","android.content.ContentProviderClient.query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, android.os.CancellationSignal)":"android.content.contentprovider.query（android.net.uri，java.lang.string []，java.lang.string，java.lang.string []\r\n"," to handle display hashes.":" 处理显示哈希。\r\n"," property will be used to\n            scale the gradient.":" 财产将用于\r\n            缩放梯度。\r\n","If the SQL string is invalid for\n         some reason\n":"如果SQL字符串无效\r\n         一些原因\r\n\r\n","This class animates properties of a ":"该课程动画属性\r\n","Broadcast intent delivered when a response is received for a permission request.":"当收到响应以供许可请求时，发表了广播意愿。\r\n","Called by a SQLiteCursor when it is requeried.":"SQLiteCursor在要求时拨打。\r\n","Retrieves the message description associated with this object.":"检索与此对象关联的消息描述。\r\n","android.drm.DrmErrorEvent.TYPE_ACQUIRE_DRM_INFO_FAILED":"android.drm.drmerrorevent.type_acquire_drm_info_failed\r\n","Load an XML resource attached to the meta-data of this item.":"加载附加到此项目元数据的XML资源。\r\n","Broadcast Action: Resources for a set of packages are currently\n            unavailable since the media on which they exist is unavailable.":"广播动作：一组包裹的资源目前正在\r\n            由于无法使用的媒体，因此无法使用。\r\n","android.content.Intent#ACTION_UID_REMOVED":"android.content.intent＃action_uid_remaved\r\n","android.content.Intent.ACTION_MANAGE_UNUSED_APPS":"android.content.intent.action_manage_unused_apps\r\n","android.content.pm.PackageManager.getActivityLogo(android.content.ComponentName)":"android.content.pm.packagemanager.getActivityLogo（android.content.componentname）\r\n","android.content.IntentFilter.hasDataAuthority(android.net.Uri)":"android.content.intentfilter.hasdataaauthority（android.net.uri）\r\n","android.content.Intent.CATEGORY_APP_BROWSER":"android.content.intent.category_app_browser\r\n","Set a String value in the preferences editor, to be written back once\n ":"在首选项编辑器中设置字符串值\r\n \r\n","Gets the maximum zoom value allowed for snapshot.":"获取快照允许的最大缩放值。\r\n","IMSI MCC (Mobile Country Code), corresponding to\n            <a href=\"[TODO: @docRoot]guide/topics/resources/providing-resources.":"IMSI MCC（移动国家代码），对应\r\n            <a href =“ [todo：@docroot]指南/主题/资源/提供资源。\r\n","attrs":"attrs\r\n","android.content.Intent.EXTRA_USER_INITIATED":"android.content.intent.extra_user_initied\r\n","Configuration":"配置\r\n","android.graphics.Insets.max(android.graphics.Insets, android.graphics.Insets)":"android.graphics.insets.max（android.graphics.insets，android.graphics.insets）\r\n","android.database.Cursor.getColumnNames()":"android.database.cursor.getColumnNames（）\r\n","android.graphics.Matrix.preRotate(float)":"android.graphics.matrix.prerotate（float）\r\n"," to\n            manage profiles for the platform built-in VPN.":" 至\r\n            管理平台内置VPN的配置文件。\r\n","android.graphics.drawable.Drawable.getDirtyBounds()":"android.graphics.drawable.drawable.getDirtyBounds（）\r\n","android.Manifest.permission#ACCESS_COARSE_LOCATION":"android.manifest.permission＃access_coarse_location\r\n","android.database.CursorWindow.putString(java.lang.String, int, int)":"android.database.cursorwindow.putstring（java.lang.string，int，int）\r\n","Gets the number of pages in the document.":"获取文档中的页数。\r\n","Helper version of saveLayer() that takes 4 values rather than a RectF.":"Savelayer()的助手版本，它采用4个值而不是一个RectF。\r\n","android.content.Intent.resolveActivity(android.content.pm.PackageManager)":"android.content.intent.ResolVeactivity（android.content.pm.packagemanager）\r\n","This method begins an asynchronous update.":"此方法开始异步更新。\r\n","android.content.Intent.putExtra(java.lang.String, android.os.Parcelable)":"android.content.intent.putextra（java.lang.string，android.os.os.ableable）\r\n"," to modify the color of\n            each pixel drawn with that paint.":" 修改颜色\r\n            用该油漆绘制的每个像素。\r\n","\n            value indicating that no mode type has been set.":"\r\n            表示未设置模式类型的值。\r\n","android.graphics.Canvas.clipOutPath(android.graphics.Path)":"android.graphics.canvas.clipoutpath（android.graphics.path）\r\n","android.security.FileIntegrityManager":"Android.security.FileIntegrityManager\r\n","android.content.ComponentName.writeToParcel(android.content.ComponentName, android.os.Parcel)":"android.content.componentname.writetoparcel（android.content.componentname，android.os.parcel）\r\n","#decodeBitmap":"#decodebitmap\r\n","Meta-data describing the contents of a ":"元数据描述了\r\n","android.graphics.PointF.set(float, float)":"android.graphics.pointf.set（float，float）\r\n","android.content.pm.PackageManager.VERIFICATION_ALLOW":"android.content.pm.packagemanager.verification_allow\r\n","android.content.ContentResolver.unregisterContentObserver(android.database.ContentObserver)":"android.content.contentresolver.unregistercontentobserver（android.database.contentobserver）\r\n","#RECTANGLE":"＃长方形\r\n","Retrieve a dimensional unit attribute at <var>index</var> for use\n            as an offset in raw pixels.":"检索<var>索引</var>的尺寸单位属性\r\n            作为原始像素的偏移。\r\n","android.content.Intent.setTypeAndNormalize(java.lang.String)":"android.content.intent.settypeandnormalize（java.lang.string）\r\n","The start time of the current sync operation in milliseconds since boot.":"自启动以来，当前同步操作的开始时间以毫秒为单位。\r\n","Returns true if (x,y) is inside the rectangle.":"如果(x,y)位于矩形内，则返回true。\r\n","android.content.IntentFilter.getDataPath(int)":"android.content.intentfilter.getDatapath（int）\r\n","Create a new colormatrix initialized to identity (as if reset() had\n            been called).":"创建一个新的colormatrix初始化为identity（好像reset（）有\r\n            被调用）。\r\n","android.drm.DrmManagerClient.setOnEventListener(android.drm.OnEventListener)":"android.drm.drmmanagerclient.setoneoneventlistener（android.drm.oneventlistener）\r\n","Return the additional flags in ":"返回其他标志\r\n","BluetoothGatt#requestMtu":"Bluetoothgatt＃requestMtu\r\n","ProviderInfo":"Providerinfo\r\n","android.content.pm.PackageInfo.activities":"android.content.pm.packageinfo.Activities\r\n","The rights-protected content can be set as output.":"可以将受权保护的内容设置为输出。\r\n","if the zoom value is invalid.":"如果缩放值无效。\r\n","android.graphics.MaskFilter":"Android.graphics.MaskFilter\r\n","android.content.pm.ChangedPackages.getPackageNames()":"android.content.pm.changedpackages.getpackagenames（）\r\n","android.content.res.loader.ResourcesLoader.addProvider(android.content.res.loader.ResourcesProvider)":"android.content.res.res.loader.resourcesloader.addprovider（android.content.res.res.loader.resourcesprovider）\r\n","Returns the ID of a shortcut.":"返回快捷方式的ID。\r\n","Add a set of extended data to the intent.":"将一组扩展数据添加到意图中。\r\n","android.database.DatabaseUtils.cursorStringToContentValuesIfPresent(android.database.Cursor, android.content.ContentValues, java.lang.String)":"android.database.databaseutils.cursorstringtocontentvaluesifpresent（android.database.cursor，android.content.content.content.contentvalues，java.lang.lang.string））\r\n","Return the label for this clip.":"返回此剪辑的标签。\r\n","Returns the remote Bluetooth device identified by the Bluetooth device address.":"返回蓝牙设备地址标识的远程蓝牙设备。\r\n","android.content.pm.PackageManager.INSTALL_SCENARIO_DEFAULT":"android.content.pm.packagemanager.install_scenario_default\r\n","android.graphics.pdf.PdfDocument":"android.graphics.pdf.pdfdocument\r\n","android.graphics.Color.getComponents(float[])":"android.graphics.color.getComponents（float []）\r\n","android.bluetooth.BluetoothHealth.CHANNEL_TYPE_STREAMING":"android.bluetooth.bluetoothhealth.channel_type_streaming\r\n","Used for receiving notifications from the SensorManager when\n            sensor values have changed.":"用于从Sensormanager接收通知时\r\n            传感器值已更改。\r\n","Return true if the device that the current layer draws into is opaque\n            (i.":"如果当前层插入的设备是不透明的，则返回true\r\n            （一世。\r\n","Set the path's fill type.":"设置路径的填充类型。\r\n","Get a list of devices that match any of the given connection\n            states.":"获取符合任何给定连接的设备列表\r\n            状态。\r\n","Broadcast Action:  A sticky broadcast for changes in the physical\n            docking state of the device.":"广播动作：粘性广播，用于改变物理的变化\r\n            对接设备的状态。\r\n","android.graphics.fonts.FontFamily":"android.graphics.fonts.fontfomily\r\n","Controls whether or not to force this RenderNode to render to an intermediate buffer.":"控制是否强迫这种渲染渲染到中间缓冲区。\r\n","Helper to setColor(), that takes a,r,g,b and constructs the color int":"助手到setColor（），占用A，R，G，B并构造颜色INT\r\n","BluetoothGatt#readPhy":"Bluetoothgatt＃Readphy\r\n","Returns the property definition for all &lt;activity&gt; and &lt;activity-alias&gt; tags.":"返回所有&lt;activity&gt;和&lt;activity-alias&gt;标签的属性定义。\r\n","Create a ":"创建一个\r\n","The actual string retrieve from <var>labelRes</var> or null if none\n            was provided.":"实际的字符串从<var> labelres </var>或null检索\r\n            提供了。\r\n","android.content.Intent.getFloatExtra(java.lang.String, float)":"android.content.intent.getfloatextra（java.lang.string，float）\r\n","Add the specified arc to the path as a new contour.":"将指定的弧添加到路径中作为新轮廓。\r\n","A color filter that can be used to tint the source pixels using a single\n            color and a specific ":"可用于使用单个的颜色过滤器\r\n            颜色和特定\r\n","Mark in the editor that a preference value should be removed, which\n will be done in the actual preferences once ":"在编辑中标记，应删除优先级值，\r\n 将在实际的偏好中完成\r\n","android.graphics.Canvas.save()":"机器人。图形。帆布。保存()\r\n","Optional name of a permission required to be able to access this\n            application's components.":"能够访问此的许可的可选名称\r\n            应用程序的组件。\r\n","android.graphics.Paint.measureText(char[], int, int)":"android.graphics.paint.measuretext（char []，int，int）\r\n","#setCornerRadius(float)":"#setCornerRadius（浮点数）\r\n","Throws NotFoundException if the given ID does not exist.\n \n":"如果给定的ID不存在，则抛出NotFoundException。\r\n \r\n\r\n","android.graphics.BitmapRegionDecoder.isRecycled()":"android.graphics.bitmapregiondecoder.isrecycled（）\r\n","Returns the color space associated with this bitmap. -or- Modifies the bitmap to have the specified ":"返回与此位图关联的颜色空间。 - 或 - 修改已指定的位图\r\n","android.graphics.Paint.getTextLocales()":"android.graphics.paint.getTextlocales（）\r\n","android.content.ContentResolver.QUERY_ARG_SORT_DIRECTION":"android.content.contentresolver.query_arg_sort_direction\r\n","android.content.pm.ApplicationInfo.RAW_EXTERNAL_STORAGE_ACCESS_NOT_REQUESTED":"android.content.pm.applicationinfo.raw_external_storage_access_not_requested\r\n","Returns the scan record, which is a combination of advertisement and scan response.":"返回扫描记录，这是广告和扫描响应的组合。\r\n","android.graphics.ImageFormat.YCBCR_P010":"android.graphics.imageformat.ycbcr_p010\r\n","android.companion.CompanionDeviceManager.disassociate(java.lang.String)":"android.companion.companiondevicemanager.disassociate（java.lang.string）\r\n","android.bluetooth.le.ScanSettings.getReportDelayMillis()":"android.bluetooth.le.scansettings.getReportDelaymillis（）\r\n","android.content.pm.PackageManager.FEATURE_LOCATION":"android.content.pm.packagemanager.feature_location\r\n","android.graphics.drawable.GradientDrawable.getColors()":"机器人。图形。可画的。GradientDrawable。getColors()\r\n","android.graphics.ImageDecoder.ALLOCATOR_DEFAULT":"android.graphics.imagedecoder.allocator_default\r\n","A Cursor implementation that exposes results from a query on a\n            ":"光标实现，该实现暴露于一个查询\r\n            \r\n","Pins distance to 0 <= distance <= getLength(), and then computes the\n corresponding position and tangent.":"引脚距离到0 <=距离<= getLength（），然后计算\r\n 相应的位置和切线。\r\n","#NO_MATCH_TYPE":"#no_match_type\r\n","Retrieve all of the information we know about a particular activity\n            class.":"检索我们知道的有关特定活动的所有信息\r\n            班级。\r\n","android.content.res.AssetFileDescriptor.close()":"机器人。内容。res.AssetFileDescriptor。关闭()\r\n","Set an explicit MIME data type.":"设置明确的MIME数据类型。\r\n","android.graphics.fonts.Font.getStyle()":"android.graphics.fonts.font.getstyle（）\r\n","SensorManager.SENSOR_STATUS_*":"sensormanager.sensor_status_*\r\n","android.graphics.Path.rLineTo(float, float)":"android.graphics.path.rlineto（浮点，浮点）\r\n","Convenience method for inserting a row into the database.":"方便方法用于将行插入数据库。\r\n","Cursor#requery()":"光标＃requery（）\r\n",": bits that encode the layout direction.":"：编码布局方向的位。\r\n","android.content.res.Configuration.COLOR_MODE_HDR_MASK":"android.content.res.configuration.color_mode_hdr_mask\r\n","if the database cannot be opened":"如果数据库无法打开\r\n","android.graphics.Bitmap.getByteCount()":"android.graphics.bitmap.getbytecount（）\r\n","Return an immutable bitmap backed by shared memory which can be\n            efficiently passed between processes via Parcelable.":"返回一个不变的位图，该位图由共享内存备份，可以是\r\n            有效地通过包裹在过程之间通过。\r\n","android.content.pm.ActivityInfo.permission":"android.content.pm.activityinfo.Permission\r\n","&lt;application&gt; level ":"&lt;应用&gt;水平 \r\n","PathShape constructor.":"路径构造器。\r\n","#setStrict(boolean)":"#SetStrict（布尔）\r\n","Health Profile Sink Role the device talking to the health device.":"健康个人资料下沉的角色，设备与健康设备交谈。\r\n","android.graphics.fonts.Font.getTtcIndex()":"android.graphics.fonts.font.gettcindex（）\r\n"," over the result set\n            with support for cancellation.":" 在结果集\r\n            支持取消。\r\n","android.content.Context#getDatabasePath(String)":"android.content.context＃getDatabasepath（string）\r\n","android.content.Intent.ACTION_GTALK_SERVICE_CONNECTED":"android.content.intent.action_gtalk_service_connected\r\n","Returns true if this bitmap has been recycled.":"如果该位图已回收，则返回true。\r\n","Broadcast Action:  External media has been removed.":"广播动作：外部媒体已被删除。\r\n","android.graphics.drawable.LayerDrawable.setLayerHeight(int, int)":"android.graphics.drawable.layerdrawable.setlayerheight（int，int）\r\n","android.content.Intent.ACTION_MANAGE_NETWORK_USAGE":"android.content.intent.action_manage_network_usage\r\n","if x, y, width, height are outside of\n         the bitmap's bounds.":"如果x，y，宽度，高度在\r\n         位图的边界。\r\n"," statements that will be joined through ":" 将加入的陈述\r\n"," to make it stateful and backed by a\n            ":" 使其陈述并得到\r\n            \r\n","Returns the absolute path on the filesystem where a database created with\n            ":"返回文件系统上的绝对路径，其中创建的数据库\r\n            \r\n","Convenience method for replacing a row in the database.":"更换数据库中的一行的便利方法。\r\n","#ACTION_VIEW":"#action_view\r\n","android.content.Context.NFC_SERVICE":"android.content.context.nfc_service\r\n","ContentValues":"内容值\r\n","android.graphics.RenderNode.setRotationY(float)":"android.graphics.rendernode.setrotationy（float）\r\n","Prints the contents of a Cursor to System.":"将光标的内容打印到系统。\r\n","This filter has specified the Intent.":"该过滤器已指定意图。\r\n","android.net.wifi.rtt.WifiRttManager":"android.net.wifi.rtt.wifirttmanager\r\n","Returns the value of the blue component in the range defined by this\n            color's color space (see ":"Returns the value of the blue component in the range defined by this\r\n            color's color space (see \r\n"," to supply the literal data to be sent.":" 提供要发送的文字数据。\r\n","android.graphics.PorterDuff":"android.graphics.porterduff\r\n","Creates a new color instance set to opaque black in the\n            ":"Creates a new color instance set to opaque black in the\r\n            \r\n","Retrieve all receivers that can handle a broadcast of the given intent.":"检索可以处理给定意图的广播的所有接收器。\r\n","android.content.Context.checkCallingUriPermission(android.net.Uri, int)":"android.content.Context.CheckCallingUripermission（android.net.uri，int）\r\n","The server rejected the renewal of rights.":"服务器拒绝了权利的更新。\r\n","Full path to the base APK for this application.":"该应用程序的基础APK的完整路径。\r\n","Cancels any auto-focus function in progress.":"取消任何正在进行的自动对焦功能。\r\n","Callback interface for face detected in the preview frame.":"在预览框架中检测到的面部的回调接口。\r\n","Prints the contents of a Cursor's current row to System.":"打印光标的当前行的内容到系统。\r\n","Constant representing unspecified HID device subclass.":"代表未指定的HID设备子类的常数。\r\n","android.R.styleable#AndroidManifestReceiver\n            &lt;receiver&gt;":"Android.r.Stylable＃AndroidManifestreceiver\r\n            ＆lt;接收器＆gt;\r\n","M:Android.Content.IntentSender.SendIntent(Android.Content.Context,Android.App.Result,Android.App.Result,Android.App.Result,Android.App.Result)":"m：android.content.intents.sendintent（android.content.context，android.app.result，android.app.result，android.app.App.Result，android.app.result）\r\n","Indicate the conversion status is successful.":"表明转换状态成功。\r\n","Copy constructor.":"复制构造函数。\r\n","Stop the animation.":"停止动画。\r\n","android.content.Context.CARRIER_CONFIG_SERVICE":"android.content.context.carrier_config_service\r\n","positionOffset":"位置OFFSET\r\n","Whether or not the renderer is set to be opaque. -or- Change the HardwareRenderer's opacity.":"渲染器是否设置为不透明。 - 或 - 更改Hardwarerender的不透明性。\r\n","android.graphics.ColorMatrix.setScale(float, float, float, float)":"android.graphics.ColorMatrix.setScale(float, float, float, float)\r\n","android.database.MatrixCursor.newRow()":"机器人。数据库。MatrixCursor.纽罗()\r\n","android.content.Intent.ACTION_PACKAGES_SUSPENDED":"android.content.intent.action_packages_suspended\r\n","android.bluetooth.le.BluetoothLeAdvertiser.stopAdvertising(android.bluetooth.le.AdvertiseCallback)":"android.bluetooth.le.bluetoothleadvertiser.stopadvertising（android.bluetooth.le.le.aptervertisecallback）\r\n","BluetoothProfile#STATE_DISCONNECTING":"BluetoothProfile＃state_disconnecting\r\n","Create a drawable from an XML document.":"从XML文档中创建可绘制的。\r\n","android.graphics.ColorMatrix.set(float[])":"android.graphics.ColorMatrix.set(float[])\r\n","android.graphics.Matrix.preRotate(float, float, float)":"android.graphics.matrix.prerotate（浮点，浮点，浮点）\r\n","android.content.Context.unregisterComponentCallbacks(android.content.ComponentCallbacks)":"android.content.context.unregistercomponentCallbacks（android.content.componentCallbacks）\r\n","Set by the SyncManager to request that the SyncAdapter initialize itself for\n            the given account/authority pair.":"由Syncmanager设置的要求SyncAdapter初始化自身\r\n            给定的帐户/授权对。\r\n","android.bluetooth.BluetoothHidDevice.sendReport(android.bluetooth.BluetoothDevice, int, byte[])":"android.bluetooth.bluetoothhiddevice.sendreport（android.bluetooth.bluetoothdevice，int，byte []）\r\n","Converts a list of restrictions to the corresponding bundle, using the following mapping:\n            <table>\n                <tr><th>RestrictionEntry</th><th>Bundle</th></tr>\n                <tr><td>":"使用以下映射将限制列表转换为相应的捆绑包：\r\n            <表>\r\n                <tr> <th>限制性</th> <th>捆绑</th> </tr>\r\n                <tr> <td>\r\n","android.content.ContentResolver.getStreamTypes(android.net.Uri, java.lang.String)":"android.content.contentresolver.getStreamTypes（android.net.uri，java.lang.string）\r\n","Determine whether the calling process and user ID has been\n granted permission to access a specific URI.":"确定通话过程和用户​​ID是否已\r\n 授予访问特定URI的许可。\r\n","A Drawable that manages a ":"一个管理的可绘图\r\n"," that allows you to\n            receive data back from the broadcast.":" 这使您能够\r\n            从广播中接收数据。\r\n","F:Android.Content.Intent.FillIn":"F：android.content.intent.fillin\r\n","android.graphics.Color.luminance()":"android.graphics.color.luminance（）\r\n","Broadcast Action: An outgoing call is about to be placed.":"广播动作：即将发出的电话。\r\n","android.graphics.Color.convert(int, android.graphics.ColorSpace)":"android.graphics.Color.convert(int, android.graphics.ColorSpace)\r\n","android.drm.DrmManagerClient.release()":"android.drm.drmmanagerclient.release（）\r\n","Make an Intent that can be used to re-launch an application's task\n            in its base state.":"做出可以用于重新发布应用程序的任务的意图\r\n            处于其基本状态。\r\n","An optional field on ":"可选字段\r\n","android.content.pm.PackageManager.getSyntheticAppDetailsActivityEnabled(java.lang.String)":"android.content.pm.packagemanager.getsyntheticappdetailsactivityEnabled（java.lang.string）\r\n","android.content.AsyncQueryHandler.onUpdateComplete(int, java.lang.Object, int)":"android.content.asyncqueryhandler.onupdatecomplete（int，java.lang.object，int）\r\n","Returns the property definition for all &lt;application&gt; tags.":"返回所有&lt;application&gt;标签的属性定义。\r\n","android.database.sqlite.SQLiteDatabase.CONFLICT_ABORT":"android.database.sqlite.sqlitedatabase.conflict_abort\r\n","Sets the location of the camera.":"设置相机的位置。\r\n","Convenience method for updating rows in the database.":"更新数据库中的行的便利方法。\r\n","android.content.Intent.setComponent(android.content.ComponentName)":"android.content.intent.setComponent（android.content.componentname）\r\n","android.graphics.RenderNode.getWidth()":"android.graphics.rendernode.getWidth（）\r\n","Returns the typeface's intrinsic style attributes":"返回字体的内在样式属性\r\n","If set to true, the decoder will return null (no bitmap), but\n the out... fields will still be set, allowing the caller to query\n the bitmap without having to allocate the memory for its pixels.":"如果设置为true，解码器将返回null（无位图），但是\r\n 外出...字段仍将设置，允许呼叫者查询\r\n 位图无需为其像素分配内存。\r\n","/manifest/provider/grant-uri-permission":"/清单/提供商/授予 - 澳大利亚授权\r\n","android.bluetooth.BluetoothSocket.getInputStream()":"android.bluetooth.bluetoothsocket.getInputstream（）\r\n","Indicates whether this color state list is opaque, which means that every\n            color returned from ":"指示此颜色状态列表是否不透明，这意味着每个\r\n            颜色从\r\n","android.graphics.ImageDecoder.ALLOCATOR_HARDWARE":"android.graphics.imagedecoder.allocator_hardware\r\n","Called when the database connection is being configured, to enable features such as\n            write-ahead logging or foreign key support.":"在配置数据库连接时调用，以启用功能，例如\r\n            写入伐木或外键支持。\r\n","Retrieve the raw text contained in this Item.":"检索本项目中包含的原始文本。\r\n","android.content.pm.PackageManager.getTargetSdkVersion(java.lang.String)":"android.content.pm.packagemanager.gettargetsdkversion（java.lang.string）\r\n"," to indicate that this notification is the\n            result of an ":"表明该通知是\r\n            结果\r\n","android.graphics.Paint":"android.graphics.paint\r\n","F:Android.App.ApplicationErrorReport.GetErrorReportReceiver":"F：android.app.ApplicationErrreport.getErrorrePorporTreceiver\r\n","android.bluetooth.BluetoothGattCharacteristic.addDescriptor(android.bluetooth.BluetoothGattDescriptor)":"android.bluetooth.bluetoothgattcharacteristic.adddescriptor（android.bluetooth.bluetoothgattdescriptor）\r\n","Preconcat the current matrix with the specified matrix.":"用指定的矩阵预联合当前矩阵。\r\n","android.content.Intent.EXTRA_REMOTE_INTENT_TOKEN":"android.content.intent.extra_remote_intent_token\r\n"," for handling management the\n            telephony features of the device.":" 用于处理管理\r\n            设备的电话功能。\r\n","Applications can expose restrictions for a restricted user on a\n            multiuser device.":"应用程序可以公开对受限用户的限制\r\n            多用户设备。\r\n","Save the gesture library":"保存手势库\r\n","Draw the text, with origin at (x,y), using the specified paint.":"使用指定的油漆绘制带有原点的文本。\r\n","Key for SQL selection string arguments list.":"SQL选择字符串参数列表的关键。\r\n","Returns the number of values in this array.":"返回此数组中的值数。\r\n","F:Android.Graphics.Drawables.GradientDrawable.SetShape":"F：android.graphics.drawables.gradientdrawable.setshape\r\n","android.content.ContentResolver.insert(android.net.Uri, android.content.ContentValues, android.os.Bundle)":"android.content.contentresolver.insert（android.net.uri，android.content.contentvalues，android.os.os.bundle）\r\n","Gets the resource used to create this icon.":"获取用于创建此图标的资源。\r\n","Returns an intent sender which can be used to start the configure activity for creating\n            custom shortcuts.":"返回一个意图发件人，可用于启动配置活动以创建\r\n            自定义快捷方式。\r\n","android.content.Intent.ACTION_EXTERNAL_APPLICATIONS_AVAILABLE":"android.content.intent.action_external_applications_available\r\n","Broadcast Action: Send information about a staged install session when its state is updated.":"广播操作：在更新状态时发送有关上演安装会话的信息。\r\n","android.content.ClipData.newUri(android.content.ContentResolver, java.lang.CharSequence, android.net.Uri)":"android.content.clipdata.newuri（android.content.contentresolver，java.lang.charsequence，android.net.uri）\r\n","android.content.pm.ProviderInfo.initOrder":"android.content.pm.providerinfo.initerder\r\n"," from its\n            ":" 从它的\r\n            \r\n","Prepare the InsertHelper for a replace.":"准备替换的插入器。\r\n","android.content.res.TypedArray.getFraction(int, int, int, float)":"android.content.res.typedarray.getFraction（int，int，int，float）\r\n","Sets the outline to be empty.":"将大纲设置为空。\r\n","key":"钥匙\r\n","Gets the right position for the RenderNode.":"获取RenderNode的正确位置。\r\n","android.content.res.TypedArray.getNonResourceString(int)":"android.content.res.typedarray.getNonResourcestring（int）\r\n",". -or- Sets the current selected state for an entry of type ":"。 - 或设置类型条目的当前选定状态\r\n","Resources#ID_NULL":"资源＃ID_NULL\r\n","android.content.pm.PackageManager.FEATURE_FAKETOUCH":"android.content.pm.packagemanager.feature_faketouch\r\n","Helper for drawPoints() for drawing a single point.":"用于绘制单点的drappoint（）的助手。\r\n","android.gesture.Gesture.getLength()":"android.gesture.gesture.getLength（）\r\n","Fills the bitmap's pixels with the specified ":"用指定的\r\n","android.content.Intent.getBooleanArrayExtra(java.lang.String)":"android.content.intent.getBooleanArrayExtra（java.lang.string）\r\n","Delete long lived shortcuts by ID.":"通过ID删除长期寿命的快捷方式。\r\n","A flag indicating whether the hard keyboard has been hidden.":"指示硬键盘是否已隐藏的标志。\r\n","android.database.sqlite.SQLiteDatabase.compileStatement(java.lang.String)":"android.database.sqlite.sqlitedatabase.compilestatement（java.lang.string）\r\n","android.bluetooth.le.ScanRecord.getBytes()":"android.bluetooth.le.scanrecord.getbytes（）\r\n","Called by a client to determine the types of data streams that this\n            content provider supports for the given URI.":"客户呼叫以确定数据流的类型\r\n            内容提供商支持给定的URI。\r\n","Returns the setting for the rate at which preview frames are\n received.":"返回预览帧的速率设置\r\n 已收到。\r\n","Implement this to handle query requests from clients with support for cancellation.":"实施此操作以处理客户的查询请求，并支持取消。\r\n","Sends a vendor-specific unsolicited result code to the headset.":"向耳机发送特定于供应商的未经请求的结果代码。\r\n","android.graphics.Rect.exactCenterX()":"机器人。图形。长exactCenterX（）\r\n","android.graphics.drawable.BitmapDrawable.BitmapDrawable(android.content.res.Resources, android.graphics.Bitmap)":"android.graphics.drawable.bitmapDrawable.bitmapDrawable（android.content.res.res.resources，android.graphics.bitmap）\r\n"," into the bitmap (assuming it is\n            mutable) at the x,y coordinate.":" 进入位图（假设是\r\n            在x，y坐标处。\r\n","Applies a translation transform on all three axis.":"在所有三个轴上都应用翻译转换。\r\n","PrintWriter":"printwriter\r\n","Used as a parcelable extra field in ":"用作包裹的额外字段\r\n","android.bluetooth.BluetoothGattCharacteristic.getService()":"android.bluetooth.bluetoothgattcharacteristic.getService（）\r\n","android.bluetooth.le.ScanRecord.getServiceData()":"android.bluetooth.le.scanrecord.getServicedata（）\r\n","android.content.ContentProvider.openFile(android.net.Uri, java.lang.String)":"android.content.contentprovider.openfile（android.net.uri，java.lang.string）\r\n","android.graphics.RectF.union(float, float, float, float)":"Android.graphics.Rectf.Union（浮子，浮点，浮点，浮点）\r\n","when installation services are unavailable,\n             such as when called from a restricted user.":"当安装服务不可用时，\r\n             例如从限制用户调用时。\r\n","Return the timestamp at which the associated ":"返回关联的时间戳\r\n","Convenience method for determining if the SyncResult indicates that a hard error\n            occurred.":"确定综合是否表明硬错误的便利方法\r\n            发生了。\r\n"," if the\n            gradient is drawn using a single color or no colors.":" 如果\r\n            渐变使用单一颜色或无颜色绘制。\r\n","Permission whitelist flag: permissions whitelisted by the installer.":"许可白名单标志：安装程序列入白名单的权限。\r\n","Return an array of heterogeneous values.":"返回异质值的数组。\r\n","Determines whether there is an attribute at <var>index</var>.":"确定在<var> index </var>上是否存在属性。\r\n","android.graphics.Canvas.drawDoubleRoundRect(android.graphics.RectF, float, float, android.graphics.RectF, float, float, android.graphics.Paint)":"android.graphics.CANVAS.DRAWDOUMEROUNDRECT（android.graphics.Rectf，float，float，float，android.graphics.Rectf，float，float，float，android.graphics.graphics.paint））\r\n","android.content.ContentProviderClient.close()":"android.content.contentproviderclient.close（）\r\n","android.content.Intent.resolveType(android.content.Context)":"android.content.intent.resolvetype（android.content.context）\r\n","android.hardware.Camera.setPreviewTexture(android.graphics.SurfaceTexture)":"android.hardware.camera.setpreviewTexture（android.graphics.surfaceTexture）\r\n","Usage: The buffer will be read by a hardware video encoder":"用法：缓冲区将由硬件视频编码器读取\r\n","Used to set periodic advertising data, must be called after setPeriodicAdvertisingParameters,\n            or after advertising was started with periodic advertising data set.":"用于设置定期广告数据，必须在setperiodicacadvertising参数之后调用\r\n            或在广告开始后，定期广告数据集。\r\n","#setClipToOutline(boolean)":"#setcliptooutline（布尔值）\r\n","android.graphics.BlendModeColorFilter":"Android.graphics.BlendModeColorFilter\r\n"," for controlling power management,\n            including \"wake locks,\" which let you keep the device on while\n            you're running long tasks.":" 用于控制电源管理，\r\n            包括“唤醒锁”，可让您保持设备的启动\r\n            您正在运行长期任务。\r\n","Used to indicate that the SyncAdapter experienced a hard error due to trying the same\n            operation too many times (as defined by the SyncAdapter).":"用于表明Syncadapter由于尝试相同而出现困难\r\n            操作太多次（由SyncAdapter定义）。\r\n","android.content.ClipDescription.MIMETYPE_UNKNOWN":"android.content.clipdescription.mimetype_unknown\r\n","Returns raw bytes of scan record.":"返回扫描记录的原始字节。\r\n","android.hardware.SensorEventListener.onAccuracyChanged(android.hardware.Sensor, int)":"android.hardware.sensoreventlistener.onaccuracychanged（android.hardware.sensor，int）\r\n","Take pictures on distant objects.":"在遥远的物体上拍照。\r\n","Used as a URI extra field with ":"用作URI额外字段\r\n","Returns the bottom padding in pixels.":"返回像素的底部填充。\r\n","android.drm.DrmInfo.keyIterator()":"android.drm.drminfo.keyiterator（）\r\n","The authority of the sync.":"同步的权威。\r\n","Broadcast Action:  User has expressed the desire to remove the external storage media.":"广播动作：用户表示希望删除外部存储媒体。\r\n","android.graphics.fonts.FontVariationAxis.FontVariationAxis(java.lang.String, float)":"android.graphics.fonts.fontvariationaxis.fontvariationaxis（java.lang.string，float）\r\n","android.graphics.Paint.isStrikeThruText()":"android.graphics.paint.isstrikethrutext（）\r\n","android.database.sqlite.SQLiteDatabase.delete(java.lang.String, java.lang.String, java.lang.String[])":"android.database.sqlite.sqlitedatabase.delete（java.lang.string，java.lang.string，java.lang.string []）\r\n","android.graphics.Bitmap.describeContents()":"android.graphics.bitmap.describecontents（）\r\n","An entity class that describes the information required to send transactions\n            between a device and an online DRM server.":"描述发送交易所需信息的实体类\r\n            在设备和在线DRM服务器之间。\r\n","if the calling package doesn't belong to the\n             calling UID.\n":"如果调用软件包不属于\r\n             打电话给uid。\r\n\r\n","A Bundle forming a mapping of potential target package names to different extras Bundles\n            to add to the default intent extras in ":"捆绑构成潜在目标包名称为不同的额外捆绑包的捆绑包\r\n            添加到默认意图中\r\n","android.content.pm.ModuleInfo.getName()":"android.content.pm.moduleinfo.getName（）\r\n","PorterDuffXfermode":"PorterDuffXfermode\r\n","Returns the ARGB color used to tint the source pixels when this filter\n            is applied.":"返回用于在此滤镜时返回用于颜色源像素的argb颜色\r\n            被申请;被应用。\r\n","android.app.Activity":"Android.App.Activity\r\n",": The device supports connecting to USB devices\n            as the USB host.":"：该设备支持连接到USB设备\r\n            作为USB主机。\r\n","android.content.IntentFilter.hasDataType(java.lang.String)":"android.content.intentfilter.hasdatatepe（java.lang.string）\r\n","Checks whether a particular permissions has been revoked for a\n            package by policy.":"检查是否已撤销特定权限\r\n            策略包。\r\n","android.content.QuickViewConstants.FEATURE_SEND":"android.content.QuickViewConstants.feature_send\r\n","android.graphics.PointF.set(android.graphics.PointF)":"android.graphics.pointf.set（android.graphics.pointf）\r\n","android.database.sqlite.SQLiteProgram.bindBlob(int, byte[])":"android.database.sqlite.sqliteprogram.bindblob（int，byte []）\r\n","android.content.BroadcastReceiver.isOrderedBroadcast()":"android.content.broadcastreceiver.isorderedBroadcast（）\r\n","android.content.pm.ComponentInfo.getBannerResource()":"android.content.pm.com.ponentinfo.getbannerresource（）\r\n","android.bluetooth.BluetoothGattCallback.onServicesDiscovered(android.bluetooth.BluetoothGatt, int)":"android.bluetooth.bluetoothgattcallback.onservicesdiscovered（android.bluetooth.bluetoothgatt，int）\r\n","android.database.Cursor.moveToNext()":"android.database.cursor.movetonext（）\r\n","that indicates that the activity\n can itself handle changes to the touchscreen type. ":"这表明活动\r\n 您可以处理触摸屏类型的更改。\r\n","Execute a query and provide access to its result set through a Cursor\n            interface.":"执行查询并通过光标提供对结果设置的访问\r\n            界面。\r\n","android.content.RestrictionEntry.RestrictionEntry(java.lang.String, int)":"android.content.restrictionernry.gresternityEntry（java.lang.string，int）\r\n","ContentObserver":"ContentObserver\r\n","android.content.Context.openFileInput(java.lang.String)":"android.content.context.openfileinput（java.lang.string）\r\n","Copies the ColorMatrix from the filter into the passed ColorMatrix.":"Copies the ColorMatrix from the filter into the passed ColorMatrix.\r\n","android.graphics.Canvas.clipOutRect(int, int, int, int)":"android.graphics.canvas.clipoutrect（int，int，int，int）\r\n","android.content.pm.PackageManager.getUserBadgedLabel(java.lang.CharSequence, android.os.UserHandle)":"android.content.pm.packagemanager.getuserbadgedlabel（java.lang.charequence，android.os.userhandle）\r\n","AT command type SET used with\n            ":"AT命令类型集与\r\n            \r\n","android.graphics.HardwareRenderer.setLightSourceAlpha(float, float)":"android.graphics.hardwarerenderer.setlightsourcealpha（float，float）\r\n","if the bitmap is not mutable.\n":"如果位图不可变。\r\n\r\n","android.content.Intent.getDoubleExtra(java.lang.String, double)":"android.content.intent.getDoubleExtra（java.lang.string，double）\r\n","android.content.pm.verify.domain.DomainVerificationManager.getDomainVerificationUserState(java.lang.String)":"android.content.pm.verify.domain.domainverificationmanager.getDomainverificationuserstate（java.lang.string）\r\n","AssetManager":"AssetManager\r\n","android.hardware.camera2.CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_MANUAL_SENSOR manual sensor":"android.hardware.camera2.camerametadata＃request_available_capabilities_manual_sensor手册传感器\r\n","android.graphics.Paint.setPathEffect(android.graphics.PathEffect)":"android.graphics.paint.setPatheffect（android.graphics.patheffect）\r\n","#disassociate":"#disassociate\r\n","Android.Content.Context.BIND_ALLOW_OOM_MANAGEMENT":"android.content.context.bind_allow_oom_management\r\n","android.drm.DrmInfoRequest.keyIterator()":"android.drm.drminforequest.keyiterator（）\r\n","Broadcast Action: A new version of your application has been installed\n            over an existing one.":"广播动作：已安装了您的应用程序的新版本\r\n            在现有的。\r\n","Start executing an ":"开始执行一个\r\n","Retrieves the processed data.":"检索处理后的数据。\r\n","Determine whether the calling process of an IPC you are handling has been\n            granted a particular permission.":"确定您正在处理的IPC的呼叫过程是否已经\r\n            授予特定的许可。\r\n","android.bluetooth.BluetoothHidDevice.PROTOCOL_REPORT_MODE":"android.bluetooth.bluetoothhiddevice.protocol_report_mode\r\n","android.database.sqlite.SQLiteQueryBuilder.getTables()":"android.database.sqlite.sqlitequerybuilder.gettables（）\r\n","If neither you nor the calling process of an IPC you are\n            handling has been granted a particular permission, throw a\n            ":"如果您和IPC的呼叫过程都不是\r\n            处理已获得特定许可，扔\r\n            \r\n","Returns true if the operation represents an assert query.":"如果操作代表断言查询，则返回true。\r\n","Sets the translation value for the display list on the Y axis.":"在Y轴上设置显示列表的翻译值。\r\n","android.content.pm.ApplicationInfo.splitNames":"android.content.pm.applicationinfo.splitnames\r\n","Point holds two integer coordinates":"点具有两个整数坐标\r\n",", or the actual\n            number to call in a ":"，或实际\r\n            打电话给\r\n","android.content.Intent.getClipData()":"android.content.intent.getClipdata（）\r\n","android.graphics.Paint.getFontSpacing()":"android.graphics.paint.getFontspacing（）\r\n","android.content.pm.SigningInfo":"android.content.pm.signinginfo\r\n","AT command type ACTION used with\n            ":"在命令类型操作中使用\r\n            \r\n","android.content.pm.ApplicationInfo.GWP_ASAN_DEFAULT":"android.content.pm.applicationinfo.gwp_asan_default\r\n","android.content.pm.PackageManager.FEATURE_MICROPHONE":"android.content.pm.packagemanager.feature_microphone\r\n","android.content.pm.ApplicationInfo.CATEGORY_ACCESSIBILITY":"android.content.pm.applicationinfo.category_accosconibility\r\n","android.content.res.Configuration.UI_MODE_NIGHT_NO":"机器人。内容。res.配置。UI_MODE_NIGHT_NO\r\n","An integer representing the end of the line has Canadian Syllabics hyphen (U+1400).":"代表线路末端的整数具有加拿大的教学大学连字符（U+1400）。\r\n","Open a new private SQLiteDatabase associated with this Context's\n application package.":"打开与此上下文相关联的新的私人sqlitedatabase\r\n 应用程序包。\r\n","Specifies how closed shapes (e.g. rects, ovals) are oriented when they\n are added to a path.":"指定封闭形状（例如，矩形，椭圆形）的定向\r\n 被添加到路径中。\r\n","Converts this color to an ARGB color int.":"将此颜色转换为argb颜色int。\r\n","android.graphics.Bitmap.getWidth()":"android.graphics.bitmap.getWidth（）\r\n","Get the input stream associated with this socket.":"获取与此套接字关联的输入流。\r\n","android.graphics.Bitmap.getPixel(int, int)":"android.graphics.bitmap.getPixel（int，int）\r\n","android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL full hardware":"android.hardware.camera2.cameracharacteristics＃info_supported_hardware_level full full Hardware\r\n","android.content.pm.PermissionGroupInfo":"android.content.pm.permissiongroupinfo\r\n","Used with ":"与\r\n","if the attribute if the TypedArray has already\n         been recycled.":"如果属性是否已经\r\n         被回收。\r\n","Headset state when SCO audio is connecting.":"SCO音频连接时耳机状态。\r\n"," for accessing and modifying\n            the contents of the global clipboard.":" 用于访问和修改\r\n            全局剪贴板的内容。\r\n","Creates a new empty cursor window.":"创建一个新的空光标窗口。\r\n","android.content.Intent.getCharSequenceArrayListExtra(java.lang.String)":"android.content.intent.getChareSececearrayListextra（java.lang.string）\r\n"," to assert a set of values as provided\n            through ":" 主张一组值\r\n            通过\r\n","Return the role associated with this application configuration.":"返回与此应用程序配置关联的角色。\r\n","Broadcast to a specific application to query any supported restrictions to impose\n            on restricted users.":"向特定应用程序广播以查询任何受支持的限制以强加\r\n            在受限制的用户上。\r\n","android.database.sqlite.SQLiteQueryBuilder.insert(android.database.sqlite.SQLiteDatabase, android.content.ContentValues)":"android.database.sqlite.sqlitequerybuilder.insert（android.database.sqlite.sqlite.sqlitedatabase，android.content.contentvalues）\r\n","Return the blue component of a color int.":"Return the blue component of a color int.\r\n","android.graphics.RenderEffect.createShaderEffect(android.graphics.Shader)":"android.graphics.rendereffect.createshadereffect（android.graphics.shader）\r\n","draw the gradient from the bottom-right to the top-left ":"将梯度从右下角绘制到左上角\r\n","android.content.Intent.EXTRA_CHANGED_UID_LIST":"android.content.intent.extra_changed_uid_list\r\n"," extra.":" 额外的。\r\n","Enable Memtag in Async mode in this application or process.":"在此应用程序或过程中以异步模式启用memtag。\r\n","android.content.Intent.ACTION_PACKAGE_REMOVED":"android.content.intent.action_package_remaved\r\n","Used to dispose of a ":"用来处置一个\r\n","android.graphics.Paint.setFontVariationSettings(java.lang.String)":"android.graphics.paint.setfontvariationsettings（java.lang.string）\r\n","android.graphics.Color.parseColor(java.lang.String)":"android.graphics.color.parsecolor（java.lang.string）\r\n","The filter matched an intent with the same data MIME type.":"该过滤器与相同的数据MIME类型的意图匹配。\r\n","android.content.Loader.commitContentChanged()":"android.content.loader.commitContentChanged（）\r\n","Broadcast Action: Sent after the system starts dreaming.":"广播动作：在系统开始做梦之后发送。\r\n","android.graphics.drawable.Animatable2":"android.graphics.drawable.animatable2\r\n","Gets the path to the database file.":"获取数据库文件的路径。\r\n","Exception thrown when a surface couldn't be created or resized\n":"当无法创建表面或调整表面时，会抛出异常\r\n\r\n","Gets the bottom position for the RenderNode.":"获取Rendernode的底部位置。\r\n","android.graphics.PathEffect":"Android.graphics.Patheffect\r\n","android.graphics.drawable.Drawable.getState()":"android.graphics.drawable.drawable.getState（）\r\n","android.bluetooth.le.ScanRecord.getManufacturerSpecificData(int)":"android.bluetooth.le.scanrecord.getManufacturersPecificdata（INT）\r\n","Match this filter against an Intent's action.":"将此过滤器与意图的动作相匹配。\r\n","Call a provider-defined method.":"调用提供商定义的方法。\r\n","android.bluetooth.BluetoothStatusCodes.SUCCESS":"android.bluetooth.bluetoothstatuscodes.success\r\n","Publish the list of dynamic shortcuts.":"发布动态快捷方式列表。\r\n","The service that corresponds to this resolution match, if this resolution\n            is for a service.":"如果此分辨率\r\n            是为了服务。\r\n","android.content.pm.PackageInstaller.getMySessions()":"android.content.pm.packageinstaller.getMysessions（）\r\n","android.graphics.BitmapRegionDecoder.getHeight()":"android.graphics.bitmapregiondecoder.getheight（）\r\n","DrmManagerClient#processDrmInfo(DrmInfo) processDrmInfo()":"drmmanagerclient＃processDrminfo（drminfo）processdrminfo（）\r\n","Caches the contents of a cursor into a Map of String->ContentValues and optionally\n            keeps the cache fresh by registering for updates on the content backing the cursor.":"将光标的内容缓存到字符串 - > ContentValues的地图中，并选择\r\n            通过注册备份光标的内容的更新来保持缓存新鲜。\r\n","android.database.sqlite.SQLiteDatabase.setVersion(int)":"android.database.sqlite.sqlitedatabase.setversion（int）\r\n","android.graphics.drawable.BitmapDrawable.getGravity()":"android.graphics.drawable.bitmapDrawable.getGravity（）\r\n","android.graphics.Paint.getStrokeMiter()":"android.graphics.paint.getstrokemiter（）\r\n","android.graphics.drawable.Icon.setTint(int)":"android.graphics.drawable.icon.settint（int）\r\n","Optional permission required for read/write access this content\n            provider.":"读/写访问所需的可选权限此内容\r\n            提供者。\r\n","android.app.job.JobInfo.Builder#setExpedited(boolean)":"android.app.job.jobinfo.builder＃setExpedited（boolean）\r\n","Set the density scale at which this drawable will be rendered.":"设置该绘制可渲染的密度尺度。\r\n","android.graphics.RectF.roundOut(android.graphics.Rect)":"android.graphics.Rectf.Roundout（android.graphics.Rect）\r\n","Retrieve the raw TypedValue for the attribute at <var>index</var>\n            and return a temporary object holding its data.":"检索<var> index </var>的属性的RAW TYPEDVALUE\r\n            并返回持有其数据的临时对象。\r\n","android.database.sqlite.SQLiteDoneException":"android.database.sqlite.sqlitedoneexception\r\n","Return a List of all application packages that are installed for the\n            current user.":"返回所有安装的应用程序包的列表\r\n            当前用户。\r\n","ComponentCallbacks2":"componentCallbacks2\r\n","android.graphics.drawable.GradientDrawable.setShape(int)":"android.graphics.drawable.gradientdrawable.setshape（int）\r\n","android.content.pm.CrossProfileApps.startMainActivity(android.content.ComponentName, android.os.UserHandle)":"android.content.pm.crossprofileapps.startmainactivity（android.content.componentname，android.os.userhandle）\r\n","android.drm.DrmInfoStatus.infoType":"android.drm.drminfostatus.infotype\r\n","Installation scenario providing the fastest “install button to launch\" experience possible.":"安装方案提供了最快的“安装按钮启动”体验。\r\n","android.content.ContentValues.getAsString(java.lang.String)":"android.content.contentvalues.getAsstring（java.lang.string）\r\n","android.gesture.GestureStore.getSequenceType()":"android.gesture.gesture.getSequenceType（）\r\n","android.content.Context.getMainExecutor()":"android.content.context.getmainexecutor（）\r\n","Constructor for specifying the type and key, with no initial value;":"用于指定类型和键的构造函数，没有初始值；\r\n","Returns the blue component encoded in the specified color long.":"Returns the blue component encoded in the specified color long.\r\n","Minimum value for advertising interval.":"广告间隔的最小值。\r\n","android.bluetooth.BluetoothManager.getConnectedDevices(int)":"android.bluetooth.bluetoothmanager.getConnectedDevices（int）\r\n","Set the matrix to skew by sx and sy, with a pivot point at (px, py).":"将矩阵设置为sx和sy偏斜，并在（px，py）上枢轴点。\r\n","android.bluetooth.BluetoothGattCallback.onDescriptorWrite(android.bluetooth.BluetoothGatt, android.bluetooth.BluetoothGattDescriptor, int)":"android.bluetooth.bluetoothgattcallback.ondescriptorwrite（android.bluetooth.bluetoothgatt，android.bluetooth.bluetooth.bluetooth.bluetoothgattdescriptor，int）\r\n","development":"发展\r\n","Add extended data to the intent.":"将扩展数据添加到意图中。\r\n",": if set, indicates that the application\n            requires a hard keyboard":"：如果设置，请指示应用程序\r\n            需要硬键盘\r\n","Take photos in a theater.":"在剧院里拍照。\r\n","An entity class that is used to pass information to an online DRM server.":"用于将信息传递到在线DRM服务器的实体类。\r\n","android.database.CursorWindow.CursorWindow(boolean)":"android.database.cursorwindow.cursorwindow（boolean）\r\n","Compute a scale that will maintain the original src aspect ratio,\n but will also ensure that src fits entirely inside dst.":"计算将保持原始SRC纵横比的量表，\r\n 但还将确保SRC完全适合DST内。\r\n","Create a new component identifier where the class name may be specified\n            as either absolute or relative to the containing package.":"创建一个可以指定类名称的新组件标识符\r\n            作为绝对或相对于包含软件包。\r\n","android.graphics.Rect.unflattenFromString(java.lang.String)":"机器人。图形。长unflattenFromString（java。朗。弦）\r\n","android.telephony.euicc.EuiccManager":"android.telephony.euicc.euiccmanager\r\n","android.content.Intent.getByteExtra(java.lang.String, byte)":"android.content.intent.getbyteextra（java.lang.string，byte）\r\n","android.database.sqlite.SQLiteCursor.SQLiteCursor(android.database.sqlite.SQLiteDatabase, android.database.sqlite.SQLiteCursorDriver, java.lang.String, android.database.sqlite.SQLiteQuery)":"android.database.sqlite.SQLiteCursor.SQLiteCursor(android.database.sqlite.SQLiteDatabase, android.database.sqlite.SQLiteCursorDriver, java.lang.String, android.database.sqlite.SQLiteQuery)\r\n","android.content.IntentFilter.hasDataPath(java.lang.String)":"android.content.intentfilter.hasdatapath（java.lang.string）\r\n","#CURSOR_ITEM_BASE_TYPE":"#cursor_item_base_type\r\n","The filter matched an intent with the same data URI scheme,\n authority, and path.":"过滤器与相同的数据URI方案的意图匹配，\r\n 权威和道路。\r\n","#addCallbackBuffer(byte[])":"#addcallbackbuffer（byte []）\r\n","Returns the translation value for this display list on the Y axis, in pixels.":"以像素为y轴上显示此显示列表的翻译值。\r\n","android.content.pm.VersionedPackage.getLongVersionCode()":"android.content.pm.versionedpackage.getlongversioncode（）\r\n","Callback interface used to notify on auto focus start and stop.":"回调接口用于自动焦点启动和停止通知。\r\n","Specifies the offset row index within a Cursor.":"指定光标内的偏移行索引。\r\n","Delete the given private file associated with this Context's\n application package.":"删除与此上下文关联的给定私人文件\r\n 应用程序包。\r\n","android.graphics.Paint.setElegantTextHeight(boolean)":"android.graphics.paint.seteleganttextheight（boolean）\r\n","android.content.pm.VersionedPackage.getVersionCode()":"android.content.pm.versionedpackage.getVersionCode（）\r\n","This call balances a previous call to save(), and is used to remove all\n            modifications to the matrix/clip state since the last save call.":"此呼叫平衡了以前的呼叫save（），并用于删除所有\r\n            自上次保存调用以来，对矩阵/剪辑状态进行了修改。\r\n","android.content.Context.removeStickyBroadcast(android.content.Intent)":"android.content.context.removestickybroadcast（android.content.intent）\r\n","Return a drawable that calling app can show to user for the semantic of profile switching --\n            launching its own activity in specified user profile.":"返回可拨打的通话应用程序可以显示给用户以获取配置文件交换的语义 - \r\n            在指定的用户配置文件中启动自己的活动。\r\n","Convenience for subclasses that wish to implement ":"希望实施的子类方便\r\n","Value for hyphenation frequency indicating a light amount of automatic hyphenation.":"连字符频率的值，表示大量自动连字符。\r\n","ContentProvider#openAssetFile ContentProvider.openAssetFile":"ContentProvider＃OpenAssetFile ContentProvider.openassetfile\r\n","An extra ":"一个额外的\r\n","android.graphics.RenderNode.setProjectBackwards(boolean)":"android.graphics.rendernode.setprojectbackwards（boolean）\r\n","A remote client has requested to write to a local descriptor.":"远程客户端已要求写入本地描述符。\r\n","The method invoked when database corruption is detected.":"检测到数据库损坏时调用的方法。\r\n","Create a new colormatrix initialized with the specified array of values.":"创建一个用指定的值数组初始化的新颜色矩阵。\r\n","android.graphics.ColorSpace.getId()":"android.graphics.colorspace.getID（）\r\n","Return the number of data paths in the filter.":"返回过滤器中的数据路径数。\r\n","Constant representing boot protocol mode used set by host.":"常数表示主机设置的启动协议模式。\r\n","Gets the instant application cookie for this app.":"获取此应用程序的即时应用程序cookie。\r\n","android.content.SyncInfo.authority":"android.content.syncinfo.authority\r\n","Key for request ID contained in the request bundle.":"请求捆绑包中包含的请求ID的键。\r\n","android.database.sqlite.SQLiteOpenHelper.onOpen(android.database.sqlite.SQLiteDatabase)":"android.database.sqlite.sqliteopenhelper.onopen（android.database.sqlite.sqlitedatabase））\r\n","android.database.CursorWindow.isNull(int, int)":"android.database.cursorwindow.isnull（int，int）\r\n","Create an xfermode that uses the specified porter-duff mode.":"创建一个使用指定的Porter-Duff模式的Xfermode。\r\n","android.graphics.drawable.LayerDrawable.setLayerSize(int, int, int)":"android.graphics.drawable.layerdrawable.setlayersize（int，int，int）\r\n","A Drawable is a general abstraction for \"something that can be drawn.":"可绘制的是“可以绘制的东西”的一般抽象。\r\n","android.graphics.drawable.Icon.createWithAdaptiveBitmapContentUri(android.net.Uri)":"android.graphics.drawable.icon.createwithadaptivebitmapcontenturi（android.net.uri）\r\n","An icon that was created using ":"使用的图标\r\n","(Usually optional) Normalize and set both the data Uri and an explicit\n            MIME data type.":"（通常是可选的）标准化并设置数据URI和显式\r\n            MIME数据类型。\r\n","android.graphics.RenderNode.setPivotX(float)":"android.graphics.rendernode.setpivotx（float）\r\n","android.database.sqlite.SQLiteDatabase.setForeignKeyConstraintsEnabled(boolean)":"android.database.sqlite.sqlitedatabase.set foreforeignkeyconstraintsenabled（boolean）\r\n","android.database.DatabaseUtils.dumpCurrentRowToString(android.database.Cursor)":"android.database.databaseutils.dumpcurrentrowtostring（android.database.cursor）\r\n","Editor":"编辑\r\n","The filter matched an intent with the same data URI scheme.":"该过滤器与相同的数据URI方案的意图匹配。\r\n","costsMoney":"成本货币\r\n","Return the MIME type of the given content URL.":"返回给定内容网址的MIME类型。\r\n","A constant string describing an uncalibrated accelerometer sensor.":"描述未校准的加速度计传感器的恒定字符串。\r\n","android.content.DialogInterface":"android.content.dialogInterface\r\n","android.content.pm.PackageInstaller.ACTION_SESSION_UPDATED":"android.content.pm.packageinstaller.action_session_updated\r\n","android.bluetooth.le.ScanResult.getRssi()":"android.bluetooth.le.scanresult.getrssi（）\r\n","Creates a new Checksum.":"创建一个新的校验和。\r\n","android.content.Intent.putStringArrayListExtra(java.lang.String, java.util.ArrayList)":"android.content.intent.putstringarraylistextra（java.lang.string，java.util.arraylist）\r\n","Determines if a new resource needs to be loaded from the bit set of\n            configuration changes returned by ":"确定是否需要从位集中加载新资源\r\n            配置更改由\r\n","Prioritization of this group, for visually sorting with other groups.":"该组的优先级，用于与其他组进行视觉分类。\r\n","Get a list of shared libraries that are available on the\n            system.":"获取在此处可用的共享库的列表\r\n            系统。\r\n","#OVAL":"＃椭圆形\r\n","android.database.AbstractWindowedCursor.hasWindow()":"android.database.abstractwindowedcursor.haswindow（）\r\n","Draw the bitmap using the specified matrix.":"使用指定的矩阵绘制位图。\r\n"," for interacting with input devices.":" 用于与输入设备进行交互。\r\n","android.graphics.Path.addArc(float, float, float, float, float, float)":"android.graphics.path.addarc（浮点，浮点，浮点，浮点，浮点，浮点）\r\n","Creates an empty unspecified CursorLoader.":"创建一个空的未指定的Cursorloader。\r\n","android.drm.DrmStore":"Android.drm.drmstore\r\n","Throws SecurityException if the caller does\n not have permission to access the data.":"如果呼叫者执行\r\n 没有权限访问数据。\r\n","Returns whether the cursor is pointing to the first row.":"返回光标是否指向第一行。\r\n","Configure the ":"配置\r\n","android.content.pm.ShortcutManager.addDynamicShortcuts(java.util.List)":"android.content.pm.shortcutmanager.adddynamicshortcuts（java.util.list）\r\n","android.content.pm.VersionedPackage.VersionedPackage(java.lang.String, int)":"android.content.pm.versionedpackage.versionedpackage（java.lang.string，int）\r\n","android.content.Context.STORAGE_STATS_SERVICE":"android.content.context.storage_stats_service\r\n","android.content.pm.PackageManager.queryContentProviders(java.lang.String, int, int)":"android.content.pm.PackageManager.queryContentProviders(java.lang.String,int,int)\r\n","\n            with the current height and config.":"\r\n            具有当前高度和配置。\r\n","android.content.pm.ShortcutInfo.getShortLabel()":"android.content.pm.shortcutinfo.getShortlabel（）\r\n","android.content.pm.ApplicationInfo.compileSdkVersion":"android.content.pm.applicationinfo.compilesdkversion\r\n","android.content.Loader.unregisterListener(android.content.OnLoadCompleteListener)":"android.content.loader.unregisterlistener（android.content.onloadCompletElistener）\r\n","Returns the minimum height suggested by this Drawable.":"返回此绘制建议的最小高度。\r\n","Bundle#putInt":"束＃putint\r\n","Return total number of columns":"返回总列数\r\n","#getCallingPackage()":"#getCallingPackage（）\r\n","when the caller does not own the session, or\n             the session is invalid.\n":"当呼叫者不拥有会话或\r\n             会话无效。\r\n\r\n","android.content.Intent.getExtras()":"android.content.intent.getExtras（）\r\n","android.content.Context.STORAGE_SERVICE":"android.content.context.storage_service\r\n","android.bluetooth.BluetoothHealthAppConfiguration.getName()":"android.bluetooth.bluetoothhealthappconfiguration.getName（）\r\n","android.drm.DrmRights.getAccountId()":"android.drm.drmrights.getaccountid（）\r\n","\n            that was specified in the request.":"\r\n            这是在请求中指定的。\r\n","android.content.Intent.getFlags()":"android.content.intent.getFlags（）\r\n","android.graphics.drawable.shapes.Shape.getHeight()":"android.graphics.drawable.shapes.shape.getheight（）\r\n","android.graphics.Paint.getUnderlinePosition()":"android.graphics.paint.getunderlineposition（）\r\n","Public API for the Bluetooth GATT Profile server role.":"蓝牙GATT配置服务器角色的公共API。\r\n","android.content.pm.ConfigurationInfo":"android.content.pm.configurationinfo\r\n","android.graphics.Paint.getShadowLayerRadius()":"android.graphics.paint.getShadowlayerradius（）\r\n","android.content.pm.ShortcutManager.disableShortcuts(java.util.List)":"android.content.pm.shortcutmanager.disableshortcuts（java.util.list）\r\n","Callback triggered as result of ":"触发了回调\r\n","Add a new Intent data path to match against.":"添加一个新的意图数据路径以匹配。\r\n","Gets the top position for the RenderNode.":"获取Rendernode的最高位置。\r\n","android.content.Context.CAMERA_SERVICE":"android.content.context.camera_service\r\n","Normalize and set an explicit MIME data type.":"标准化并设置明确的MIME数据类型。\r\n","android.content.ClipboardManager.getPrimaryClip()":"android.content.clipboardmanager.getPrimaryClip（）\r\n"," flag: include APEX packages that are currently\n            installed.":" 标志：包括当前正在的APEX软件包\r\n            安装。\r\n","android.graphics.Matrix.preSkew(float, float)":"android.graphics.matrix.preskew（float，float）\r\n","android.content.res.ObbInfo.OBB_OVERLAY":"机器人。内容。res.ObbInfo.奥布*奥弗莱\r\n","Open an asset using an explicit access mode, returning an InputStream to\n            read its contents.":"使用显式访问模式打开资产，将InputStream返回到\r\n            读其内容。\r\n","Name of the package that this item is in.":"此项目所包含的软件包的名称。\r\n","Preconcats the matrix with the specified rotation.":"用指定的旋转将矩阵预联合。\r\n","android.bluetooth.BluetoothLeAudio":"android.bluetooth.bluetoothleaudio\r\n","Gets whether or not a compositing layer is forced to be used.":"获取是否被迫使用合成层。\r\n","android.bluetooth.BluetoothGattService.getCharacteristics()":"android.bluetooth.bluetoothgattservice.getCharacteristics（）\r\n","android.content.ComponentCallbacks.onConfigurationChanged(android.content.res.Configuration)":"android.content.componentCallbacks.onconfigurationChanged（android.content.res.configuration）\r\n","android.graphics.ColorMatrix.reset()":"android.graphics.ColorMatrix.reset()\r\n","android.content.Context.setTheme(int)":"android.content.context.settheme（int）\r\n","Android.Content.Context.BIND_DEBUG_UNBIND":"android.content.context.bind_debug_unbind\r\n","Check if the provider should be synced when a network tickle is received":"在收到网络挠痒痒时检查提供商是否应同步\r\n","Return whether a shortcut is pinned.":"返回捷径是否固定。\r\n","Uninstall the given package with a specific version code, removing it\n            completely from the device.":"使用特定版本代码卸载给定的软件包，将其删除\r\n            完全来自设备。\r\n","android.graphics.drawable.LayerDrawable.getLeftPadding()":"android.graphics.drawable.layerdrawable.getLeftPadding（）\r\n","android.graphics.ImageDecoder.decodeDrawable(android.graphics.Source)":"android.graphics.imagedecoder.decodedrawable（android.graphics.source）\r\n","Unimplemented.":"未完成。\r\n","#FLAG_MATCH_DYNAMIC":"#flag_match_dynamic\r\n","The attribution tag of the app accessing the permission protected data.":"该应用程序的归因标签访问权限受保护的数据。\r\n","Processes a given ":"处理给定\r\n","android.graphics.fonts.FontStyle.getSlant()":"android.graphics.fonts.fontstyle.getslant（）\r\n","android.view.textservice.TextServicesManager":"android.view.textservice.textservicesmanager\r\n","Get a reference to the ":"获取对\r\n","android.content.res.TypedArray.getIndexCount()":"android.content.res.typedarray.getIndexCount（）\r\n","if the TypedArray has already been recycled.":"如果打字机已经被回收。\r\n","android.graphics.drawable.LayerDrawable.setLayerInsetRelative(int, int, int, int, int)":"android.graphics.drawable.layerdrawable.setlayerinestrelative（int，int，int，int，int）\r\n","android.graphics.Region.writeToParcel(android.os.Parcel, int)":"android.graphics.gregion.writetoparcel（android.os.parcel，int）\r\n"," &amp; ":" ＆amp;\r\n",": If set, the service can be bound and run in the\n            calling application's package, rather than the package in which it is\n            declared.":"：如果设置，服务可以绑定并运行在\r\n            调用应用程序的包，而不是它所在的包\r\n            宣布。\r\n",".apk":".apk\r\n","android.content.Intent.ACTION_DOCK_EVENT":"android.content.intent.action_dock_event\r\n","android.graphics.Rect.isEmpty()":"机器人。图形。长isEmpty()\r\n"," for handling searches.":" 用于处理搜索。\r\n","Query the table for the number of rows in the table.":"查询表中表中的行数。\r\n","Effective ascent value of this positioned glyphs.":"该位置字形的有效上升值。\r\n","Returns true if the clipboard contains text; false otherwise.":"如果剪贴板包含文本，则返回true；否则为错误。\r\n","Sets the current list of selected values for an entry of type ":"设置类型条目的当前选定值列表\r\n","android.graphics.drawable.GradientDrawable.getGradientType()":"android.graphics.drawable.gradientdrawable.getGradientType（）\r\n","android.content.BroadcastReceiver.getResultCode()":"android.content.broadcastreceiver.getResultCode（）\r\n","</p>Parse the color string, and return the corresponding color-int.":"</p>解析颜色字符串，然后返回相应的颜色。\r\n","android.content.res.Configuration.mnc":"android.content.Res.Configuration.mnc\r\n","android.graphics.Color.getComponent(int)":"android.graphics.color.getComponent（int）\r\n","android.content.pm.PermissionGroupInfo.loadDescription(android.content.pm.PackageManager)":"android.content.pm.permissiongroupinfo.loaddescription（android.content.pm.packagemanager）\r\n","Open an asset using ACCESS_STREAMING mode.":"使用ACCESS_STREAMING模式打开资源。\r\n","#TRUST_ALL":"#信任_ALL\r\n","android.database.CursorWindow.getType(int, int)":"android.database.cursorwindow.getType（int，int）\r\n","android.bluetooth.BluetoothManager":"android.bluetooth.bluetoothmanager\r\n","android.content.AsyncQueryHandler.cancelOperation(int)":"android.content.asyncqueryhandler.canceloperation（int）\r\n","android.database.sqlite.SQLiteDatabase.getSyncedTables()":"android.database.sqlite.sqlitedatabase.getSyncedTables（）\r\n","Return, in ctm, the current transformation matrix.":"在CTM中返回当前转换矩阵。\r\n","android.content.Intent.putIntegerArrayListExtra(java.lang.String, java.util.ArrayList)":"android.content.intent.putintegerarraylistextra（java.lang.string，java.util.arraylist）\r\n","android.bluetooth.BluetoothHidDevice.SUBCLASS2_CARD_READER":"android.bluetooth.bluetoothhiddevice.subclass2_card_reader\r\n","android.content.pm.PackageManager.VERIFICATION_REJECT":"android.content.pm.packagemanager.verification_reject\r\n","android.graphics.ImageFormat.DEPTH_POINT_CLOUD":"android.graphics.imageformat.depth_point_cloud\r\n","android.database.Cursor.isNull(int)":"android.database.cursor.isnull（int）\r\n","Activity Action: Activity to handle split installation failures.":"活动动作：处理分割安装失败的活动。\r\n","android.graphics.BitmapRegionDecoder":"android.graphics.bitmapregiondecoder\r\n","Returns true if the bitmap is marked as mutable (i.":"如果位图标记为可变的，则返回true（i。\r\n","android.database.ContentObserver.onChange(boolean)":"android.database.contentobserver.onchange（boolean）\r\n","BluetoothGatt#readRemoteRssi":"Bluetoothgatt＃ReadRemoterssi\r\n"," to launch the messaging application.":" 启动消息传递应用程序。\r\n","android.content.pm.LauncherApps.isPackageEnabled(java.lang.String, android.os.UserHandle)":"android.content.pm.launcherapps.ispackageenabled（java.lang.string，android.os.userhandle）\r\n","android.content.MutableContextWrapper":"android.content.mutableContextWrapper\r\n","android.content.Intent.getAction()":"android.content.intent.getAction（）\r\n","android.content.RestrictionEntry.setDescription(java.lang.String)":"android.content.grenterictioner.setDescription（java.lang.string）\r\n","android.graphics.YuvImage.getYuvData()":"android.graphics.yuvimage.getyuvdata（）\r\n","Temporarily end the transaction to let other threads run.":"暂时结束交易以让其他线程运行。\r\n","android.graphics.drawable.ColorStateListDrawable.clearAlpha()":"android.graphics.drawable.colorstatelistdrawable.clearalpha（）\r\n","android.content.pm.PackageManager.FEATURE_SENSOR_STEP_COUNTER":"android.content.pm.packagemanager.feature_sensor_step_counter\r\n","android.hardware.HardwareBuffer.getWidth()":"android.hardware.hardwarebuffer.getWidth（）\r\n","android.content.Context.SEARCH_SERVICE":"android.content.context.search_service\r\n","Retrieve all providers that can match the given intent.":"检索可以匹配给定意图的所有提供程序。\r\n","Retrieves the maximum of two Insets.":"检索最多两个插图。\r\n","android.graphics.drawable.Drawable.clearColorFilter()":"android.graphics.drawable.drawable.clearcolorfilter（）\r\n","android.content.pm.ShortcutInfo.getPackage()":"android.content.pm.shortcutinfo.getpackage（）\r\n","Constant representing sensing device subclass.":"常数表示传感设备子类。\r\n","The ContentValues to use.":"要使用的内容值。\r\n","android.database.sqlite.SQLiteOpenHelper.onConfigure(android.database.sqlite.SQLiteDatabase)":"android.database.sqlite.sqliteopenhelper.onconfigure（android.database.sqlite.sqlitedatabase））\r\n","android.content.res.TypedArray.getResources()":"android.content.res.typedarray.getResources（）\r\n","Retrieve the current graphical banner associated with this item.":"检索与此项目相关的当前图形横幅。\r\n","android.content.ContentResolver.SYNC_EXTRAS_IGNORE_SETTINGS":"android.content.contentresolver.sync_extras_ignore_settings\r\n"," contains styled text, i.":" 包含样式的文字，i。\r\n","Creates a new themed GradientDrawable based on the specified constant state.":"根据指定的常量状态创建一个新的主题渐变绘制。\r\n","android.content.IntentSender":"android.content.intents\r\n","Activity Action: Allow the user to pick a directory subtree.":"活动操作：允许用户选择目录子树。\r\n","android.graphics.drawable.Drawable.setHotspot(float, float)":"android.graphics.drawable.drawable.sethotspot（float，float）\r\n","An entity class that wraps the result of communication between a device\n            and an online DRM server.":"包裹设备之间通信结果的实体类\r\n            和在线DRM服务器。\r\n","android.graphics.Bitmap.getGenerationId()":"android.graphics.bitmap.getGenerityId（）\r\n","android.content.SyncResult.ALREADY_IN_PROGRESS":"android.content.syncresult.already_in_progress\r\n","android.bluetooth.BluetoothGattCharacteristic.getUuid()":"android.bluetooth.bluetoothgattcharacteristic.getuuid（）\r\n","Returns the green component encoded in the specified color long.":"返回指定颜色长的绿色组件。\r\n","android.content.IntentFilter.pathsIterator()":"android.content.intentfilter.pathsiterator（）\r\n","android.content.ContentResolver.notifyChange(java.util.Collection, android.database.ContentObserver, int)":"android.content.contentresolver.notifychange（java.util.collection，android.database.contentobserver，int）\r\n","#beginRecording(int, int)":"#BeginRecording（int，int）\r\n","android.hardware.Sensor.getMaximumRange()":"android.hardware.sensor.getMaximumrange（）\r\n","Return a mask of the configuration parameters for which this drawable\n            may change, requiring that it be re-created. -or- Set a mask of the configuration parameters for which this drawable\n            may change, requiring that it be re-created.":"返回该绘制的配置参数的掩码\r\n            可能会改变，要求重新创建它。 - 或 - 设置该绘制可绘制的配置参数的掩码\r\n            可能会改变，要求重新创建它。\r\n","android.graphics.text.PositionedGlyphs.getAdvance()":"android.graphics.text.positionedglyphs.getAdvance（）\r\n","Offset the rectangle to a specific (left, top) position,\n            keeping its width and height the same.":"将矩形偏移到特定（左，上）位置,\r\n            保持其宽度和高度相同。\r\n","Requesting the checksums for APKs within a package.":"请求包中Apk的校验和。\r\n","android.graphics.drawable.GradientDrawable.getInnerRadiusRatio()":"android.graphics.drawable.gradientdrawable.getinnerradiusratio（）\r\n","Returns an immutable bitmap from subset of the source bitmap,\n transformed by the optional matrix.":"从源位图的子集中返回不变的位图，\r\n 由可选矩阵转换。\r\n","android.content.pm.Checksum.Checksum(int, byte[])":"android.content.pm.checksum.checksum（int，byte []）\r\n","android.content.RestrictionsManager.REQUEST_KEY_MESSAGE":"android.content.strictionsmanager.request_key_message\r\n","android.content.ContentProviderClient.openTypedAssetFileDescriptor(android.net.Uri, java.lang.String, android.os.Bundle, android.os.CancellationSignal)":"android.content.ContentProviderClient.opentypedAssetFiledScriptor（android.net.uri，java.lang.string，android.os.os.bundle，android.os.os.cancellationsignal）\r\n","Retrieve a fractional unit for a particular resource ID.":"检索特定资源ID的分数单元。\r\n","Returns the transmission power level of the packet in dBm.":"返回DBM中数据包的传输功率水平。\r\n",", value corresponding to the\n physical keyboard being hidden.":"，值对应的\r\n 物理键盘被隐藏。\r\n","android.graphics.Typeface.DEFAULT":"android.graphics.typeface.default\r\n","replicate the edge color if the shader draws outside of its\n original bounds\n":"如果着色器在其外面绘制，则复制边缘颜色\r\n 原始边界\r\n\r\n",", returning either\n            a null or new object as appropriate.":"，返回\r\n            适当的null或新对象。\r\n","android.bluetooth.BluetoothHidDevice.ACTION_CONNECTION_STATE_CHANGED":"android.bluetooth.bluetoothhiddevice.action_connection_state_changed\r\n","android.content.pm.verify.domain.DomainVerificationUserState.getUser()":"android.content.pm.verify.domain.domainverificationuserstate.getuser（）\r\n","Create a memory backed SQLite database.":"创建一个存储器支持的SQLITE数据库。\r\n","android.content.pm.PackageManager.FEATURE_GAMEPAD":"android.content.pm.packagemanager.feature_gamepad\r\n","Interface used to allow the creator of a dialog to run some code when the\n dialog is shown.":"用于允许对话框创建者的接口可以在\r\n 对话框显示。\r\n","The time at which the app was last updated.":"该应用程序最后更新的时间。\r\n","android.content.res.AssetFileDescriptor.getParcelFileDescriptor()":"机器人。内容。res.AssetFileDescriptor。getParcelFileDescriptor（）\r\n","Controls how the gradient is oriented relative to the drawable's bounds\n":"控制梯度相对于可绘制的边界的定向\r\n\r\n","android.graphics.Paint.getFontMetrics()":"android.graphics.paint.getFontmetrics（）\r\n","android.content.pm.ComponentInfo.getLogoResource()":"android.content.pm.com.ponentinfo.getLogoresource（）\r\n","Return a Resources instance for your application's package.":"返回应用程序包的资源实例。\r\n"," implementation to have this Drawable\n            unscheduled.":" 实现有这个Drawable\r\n            计划外。\r\n","The one constructor to rule them all.":"一个统治它们的构造函数。\r\n","Extra field name for the result of a verification, either\n            ":"验证结果的额外字段名称\r\n            \r\n","Returns whether or not the RenderNode is clipping to its bounds.":"返回渲染是否剪切到其边界。\r\n","DisplayMetrics":"Displaymetrics\r\n","android.graphics.Shader.Shader()":"android.graphics.shader.shader（）\r\n","Gets the left position for the RenderNode.":"获取RenderNode的左侧位置。\r\n",": The heart rate sensor on this device is an Electrocardiogram.":"：该设备上的心率传感器是心电图。\r\n","if not all signatures on both packages match.":"如果并非所有包裹上的签名均匹配。\r\n","Retrieve and hold the contents of the preferences file 'name', returning\n a SharedPreferences through which you can retrieve and modify its\n values.":"检索并保留首选项文件“名称”的内容，返回\r\n 您可以通过它检索并修改其的共享限额\r\n 值。\r\n","android.database.CursorJoiner.hasNext()":"android.database.cursorjoiner.hasnext（）\r\n","android.content.pm.ModuleInfo.getPackageName()":"android.content.pm.moduleinfo.getpackagename（）\r\n","SUB_TYPE":"sub_type\r\n","Converts the specified color long to an ARGB color int.":"将指定的颜色长度转换为argb颜色int。\r\n","android.database.Cursor.getColumnName(int)":"android.database.cursor.getColumnname（int）\r\n","Returns the time at which the package was first installed.":"返回首次安装包装的时间。\r\n","Specify a bounding rectangle for the Drawable.":"为可绘制的矩形指定边界矩形。\r\n","if the method fails or the face detection is\n         already running.":"如果方法失败或面部检测是\r\n         已经运行。\r\n",", the \"standard\" action that is\n            performed on a piece of data.":"，“标准”动作\r\n            在一块数据上执行。\r\n","android.content.Context.CLIPBOARD_SERVICE":"android.content.context.clipboard_service\r\n","Gets the value of the field at the specified row and column index as a string.":"获取指定行和列索引的字段值作为字符串。\r\n","android.graphics.drawable.Animatable2.unregisterAnimationCallback(android.graphics.drawable.AnimationCallback)":"android.graphics.drawable.animatable2.unregisteranimationcallback（android.graphics.drawable.animation.animationcallback）\r\n","android.content.Intent.CATEGORY_TAB":"android.content.intent.category_tab\r\n","matchFlags":"仪表板\r\n","Called when image data is available after a picture is taken.":"拍摄图像后可用时，请致电。\r\n"," implemented in secure hardware\n            with direct access at the given feature version.":" 在安全硬件中实现\r\n            在给定的功能版本中直接访问。\r\n","Gets the name of the system-level service that is represented by the specified class.":"获取由指定类表示的系统级服务的名称。\r\n","android.database.sqlite.SQLiteDatabase.yieldIfContended()":"android.database.sqlite.sqlitedatabase.yieldifcontendended（）\r\n","android.drm.DrmErrorEvent.TYPE_RIGHTS_RENEWAL_NOT_ALLOWED":"android.drm.drmerrorevent.type_rights_renewal_not_lowered\r\n","#RING":"＃戒指\r\n","android.content.pm.PackageManager.FEATURE_FAKETOUCH_MULTITOUCH_DISTINCT":"android.content.pm.packagemanager.feature_faketouch_multitouch_distinct\r\n","The NORMAL style of the default sans serif typeface.":"默认的sans serif字体的正常样式。\r\n"," that takes the four float coordinates of the\n            bounds rectangle.":" 这需要四个浮点数坐标\r\n            边界矩形。\r\n","Set or clear the typeface object.":"设置或清除字体对象。\r\n","android.database.CursorWindow.getStartPosition()":"android.database.cursorwindow.getstartposition（）\r\n","android.bluetooth.le.ScanFilter.getManufacturerId()":"android.bluetooth.le.scanfilter.getManufacturerid（）\r\n","[Sa + (1 - Sa)*Da, Rc = Dc + (1 - Da)*Sc] ":"[sa +（1 -sa）*da，rc = dc +（1 -da）*sc]\r\n","Return the URI at which notifications of changes in this Cursor's data\n will be delivered, as previously set by ":"返回该游标数据更改通知的URI\r\n 将交付，如前所述 \r\n","Constructs an empty Outline.":"构建一个空的轮廓。\r\n","android.content.ContentResolver.openInputStream(android.net.Uri)":"android.content.contentresolver.openinputstream（android.net.uri）\r\n","android.content.ContentProvider.onLowMemory()":"android.content.contentprovider.onlowmemory（）\r\n","This method is called when the entire data becomes invalid,\n            most likely through a call to ":"当整个数据变得无效时，该方法被调用\r\n            最有可能通过电话\r\n","android.content.res.Configuration.COLOR_MODE_HDR_UNDEFINED":"android.content.res.configuration.color_mode_hdr_undefined\r\n","android.content.pm.ResolveInfo.loadLabel(android.content.pm.PackageManager)":"android.content.pm.resolveinfo.loadlabel（android.content.pm.packagemanager）\r\n","android.graphics.Paint.hasGlyph(java.lang.String)":"android.graphics.paint.hasglyph（java.lang.string）\r\n","android.content.pm.PackageInstaller.getAllSessions()":"android.content.pm.packageinstaller.getallsessions（）\r\n","Context#registerReceiver":"上下文＃registerReceiver\r\n","If there was an I/O error.\n":"如果有I/O错误。\r\n\r\n","android.content.pm.PackageManager.FEATURE_CAMERA_CAPABILITY_RAW":"android.content.pm.packagemanager.feature_camera_capibility_raw\r\n","android.content.Context.revokeUriPermission(java.lang.String, android.net.Uri, int)":"android.content.context.revokeuripermission（java.lang.string，android.net.uri，int）\r\n","android.content.res.Configuration.fontWeightAdjustment":"android.content.Res.Configuration.fontweightAdjustment\r\n","\n            intents that contains the name of the vendor-specific command.":"\r\n            包含供应商特定命令的名称的意图。\r\n","android.database.sqlite.SQLiteOpenHelper.setWriteAheadLoggingEnabled(boolean)":"android.database.sqlite.sqliteopenhelper.setwriteaheadeaheadloggingEnabled（boolean）\r\n","Begins a transaction in IMMEDIATE mode.":"在即时模式下开始交易。\r\n","android.content.IntentFilter.matchData(java.lang.String, java.lang.String, android.net.Uri)":"android.content.intentfilter.matchdata（java.lang.string，java.lang.string，android.net.uri）\r\n","if this isn't a hierarchical URI":"如果这不是分层的URI\r\n"," is no longer needed.":" 不再需要。\r\n","Restriction of type \"multi-select\".":"限制“多选”类型。\r\n","android.util.TypedValue#changingConfigurations":"android.util.typedvalue＃更改配置\r\n","Create a drawable projection from a bitmap to nine patches.":"从位图到九个补丁创建可绘制的投影。\r\n",": a value indicating that the color mode is undefined":"：表明颜色模式不确定的值\r\n","Returns the current primary clip on the clipboard. -or- Sets the current primary clip on the clipboard.":"返回剪贴板上的当前主剪辑。 - 或 - 设置剪贴板上的当前主剪辑。\r\n","The desired soft input mode for this activity's main window.":"此活动主窗口的所需软输入模式。\r\n","android.graphics.Camera.translate(float, float, float)":"android.graphics.camera.translate（浮子，浮点，浮点）\r\n","android.content.ComponentCallbacks2":"android.content.componentCallbacks2\r\n","Return list of all URI permission grants that have been persisted by the\n            calling app.":"所有URI许可赠款的返回列表已持续\r\n            调用应用程序。\r\n","android.content.pm.PackageManager.getInstallSourceInfo(java.lang.String)":"android.content.pm.packagemanager.getinstallsourceinfo（java.lang.string）\r\n","Padding mode used to stack each layer directly atop the previous layer.":"填充模式用于直接在上一层上堆叠每一层。\r\n","Returns a font file buffer.":"返回字体文件缓冲区。\r\n","#onInsertComplete":"#oninsertComplete\r\n","Returns absolute paths to application-specific directories on all\n external storage devices where the application's OBB files (if there are\n any) can be found.":"将绝对路径返回到所有方面的专用目录\r\n 应用程序的OBB文件的外部存储设备（如果有\r\n 可以找到任何）。\r\n","android.content.res.Resources.openRawResource(int)":"android.content.Res.Resources.openrawresource（int）\r\n","Change the global fade duration when a new drawable is leaving\n            the scene.":"更改新drawable离开时的全局淡出持续时间\r\n            的场景。\r\n","android.graphics.drawable.Drawable.getCallback()":"android.graphics.drawable.drawable.getCallback（）\r\n","android.graphics.RenderNode.offsetLeftAndRight(int)":"机器人。图形。RenderNode。脱脩脟茅脕麓陆脱拢潞offsetLeftAndRight(int)\r\n","is":"是\r\n","android.content.pm.LauncherApps.startMainActivity(android.content.ComponentName, android.os.UserHandle, android.graphics.Rect, android.os.Bundle)":"android.content.pm.launcherapps.startmainactivity（android.content.componentname，android.os.userhandle，android.graphics.Rect.Rect，android.os.bundle）\r\n","Returns the zero-based index for the given column name, or throws\n            ":"返回给定列名的基于零的索引或抛出\r\n            \r\n","If set, and this activity is either being started in a new task or\n bringing to the top an existing task, then it will be launched as\n the front door of the task. ":"如果设置，并且此活动要么是在新任务中启动的\r\n 将现有任务带入最高任务，然后将其启动为\r\n 任务的前门。\r\n"," instance that will offset the drawing content\n            by the provided x and y offset.":" 实例可以抵消图形内容\r\n            通过提供的X和Y偏移。\r\n","Retrieve the icon associated with an Intent.":"检索与意图相关的图标。\r\n","Return a TypedArray holding the attribute values in\n ":"返回按照属性值的打字机\r\n \r\n","The current height of the available screen space, in dp units,\n            corresponding to\n            <a href=\"[TODO: @docRoot]guide/topics/resources/providing-resources.":"可用屏幕空间的当前高度，DP单元，\r\n            对应于\r\n            <a href =“ [todo：@docroot]指南/主题/资源/提供资源。\r\n","android.content.Context.sendOrderedBroadcast(android.content.Intent, java.lang.String, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)":"android.content.Context.SendOrderedBroadcast（android.content.intent，java.lang.string，java.lang.string，android.content.broadcastreceiver，android.os.os.os.os.handler，int，int，int，int，int，java.lang.lang.string，android.os。捆）\r\n","Return a category in the filter.":"返回过滤器中的类别。\r\n","android.content.pm.PackageManager.FEATURE_CAMERA_AUTOFOCUS":"android.content.pm.packagemanager.feature_camera_autofocus\r\n","android.content.pm.ApplicationInfo.RAW_EXTERNAL_STORAGE_ACCESS_REQUESTED":"android.content.pm.applicationinfo.raw_external_storage_access_requested\r\n","android.bluetooth.le.PeriodicAdvertisingParameters.getIncludeTxPower()":"android.bluetooth.le.periodicacadvertisingparameters.getIncludetXpower（）\r\n","Broadcast Action: An existing application package has been changed (for\n            example, a component has been enabled or disabled).":"广播操作：现有的应用程序包已更改（用于\r\n            例如，已启用或禁用组件）。\r\n","android.graphics.drawable.LayerDrawable.getId(int)":"android.graphics.drawable.layerdrawable.getID（int）\r\n","android.graphics.Bitmap.getScaledHeight(android.util.DisplayMetrics)":"android.graphics.bitmap.getScaledHeight（android.util.displaymetrics）\r\n","The kind of navigation method available on the device.":"设备上可用的导航方法。\r\n"," if the app is running on a device whose default launcher supports\n            ":" 如果该应用在其默认启动器支持的设备上运行\r\n            \r\n","An entity class that wraps converted data, conversion status, and the\n            offset for appending the header and body signature to the converted data.":"包装转换数据，转换状态和的实体类\r\n            将标头和车身签名附加到转换数据的偏移。\r\n","Create a new empty RectF.":"创建一个新的空直径。\r\n","android.content.Intent.EXTRA_PERMISSION_GROUP_NAME":"android.content.intent.extra_permission_group_name\r\n"," objects and returns an array\n            of their results.":" 对象并返回数组\r\n            他们的结果。\r\n","Specifies whether or not this instrumentation will handle profiling.":"指定该仪器是否会处理分析。\r\n","android.net.nsd.NsdManager":"android.net.nsd.nsdmanager\r\n","android.database.CharArrayBuffer":"android.database.ChararrayBuffer\r\n"," permission":" 允许\r\n","Retrieve the resources associated with an application.":"检索与应用程序相关的资源。\r\n","Mark in the editor to remove ":"在编辑中标记以删除\r\n","android.graphics.Camera.getLocationX()":"android.graphics.camera.getLocationx（）\r\n",":\n            The device implements an optimized mode for virtual reality (VR) applications that handles\n            stereoscopic rendering of notifications, and disables most monocular system UI components\n            while a VR application has user focus.":"：\r\n            该设备实现了处理的虚拟现实（VR）应用程序的优化模式\r\n            立体渲染通知，并禁用大多数单眼系统UI组件\r\n            虽然VR应用程序具有用户焦点。\r\n","android.content.pm.PackageManager.FEATURE_KEYSTORE_APP_ATTEST_KEY":"android.content.pm.packagemanager.feature_keystore_app_attest_key\r\n","This is the home activity, that is the first activity that is displayed\n            when the device boots.":"这是家庭活动，这是显示的第一个活动\r\n            设备启动时。\r\n","android.content.pm.PackageManager.FEATURE_SE_OMAPI_UICC":"android.content.pm.packagemanager.feature_se_omapi_uicc\r\n","Clears the SyncResult to a clean state.":"清除同步状态。\r\n","Used as the ":"用作\r\n","android.hardware.SensorListener.onSensorChanged(int, float[])":"android.hardware.sensorlistener.sensorchanged（int，float []）\r\n","Use the following when no conflict action is specified.":"当未指定冲突操作时，请使用以下命令。\r\n","android.content.pm.verify.domain.DomainVerificationUserState.getHostToStateMap()":"android.content.pm.verify.domain.domainverificationuserstate.gethosttostatemap（）\r\n","android.content.pm.PackageInfo.versionCode":"android.content.pm.packageinfo.versioncode\r\n","android.content.pm.LauncherApps.getPinItemRequest(android.content.Intent)":"android.content.pm.launcherapps.getpinitemrequest（android.content.intent）\r\n","android.graphics.drawable.Drawable.setColorFilter(int, android.graphics.Mode)":"android.graphics.drawable.drawable.setcolorfilter（int，android.graphics.mode）\r\n","#ACTION_MAIN":"#action_main\r\n","The intent category to be used with ":"与之一起使用的意图类别\r\n","Returns the amount of X offset added to glyph position.":"返回添加到字形位置的X偏移量。\r\n","android.database.sqlite.SQLiteAbortException":"android.database.sqlite.sqliteabortexception\r\n","Returns an array of strings naming the private files associated with\n this Context's application package.":"返回一系列字符串，命名与之关联的私人文件\r\n 此上下文的应用程序包。\r\n","android.content.Intent.EXTRA_DURATION_MILLIS":"android.content.intent.extra_duration_millis\r\n"," on the given ":" 在给定\r\n","BluetoothAdapter":"蓝牙adapter\r\n","android.content.Context.checkCallingPermission(java.lang.String)":"android.content.Context.CheckCallingPermission（Java.lang.String）\r\n","BluetoothGattService#SERVICE_TYPE_SECONDARY":"bluetoothgattservice＃service_type_secondary\r\n","Write the specified ":"写指定的\r\n","android.content.Intent.getStringArrayListExtra(java.lang.String)":"android.content.intent.getStringArrayListExtra（java.lang.string）\r\n"," detects a change.":" 检测变化。\r\n","android.graphics.Paint.setLinearText(boolean)":"android.graphics.paint.setlineartext（boolean）\r\n","Detach the SurfaceTexture from the OpenGL ES context that owns the OpenGL ES texture object.":"从拥有OpenGL ES纹理对象的OpenGL ES上下文中脱离表面图。\r\n","android.content.pm.ApplicationInfo.MEMTAG_ASYNC":"android.content.pm.applicationinfo.memtag_async\r\n","A loader that queries the ":"询问的装载机\r\n","android.graphics.drawable.BitmapDrawable.setGravity(int)":"android.graphics.drawable.bitmapdrable.setgravity（int）\r\n","Remove a category from an intent.":"从意图中删除类别。\r\n","Temp storage to use for decoding.":"用于解码的温度存储。\r\n"," for interacting with\n            camera devices.":" 用于与之互动\r\n            相机设备。\r\n","android.gesture.GestureUtils":"android.gesture.gestureutils\r\n","Returns the index of the specified column.":"返回指定列的索引。\r\n","android.content.pm.Signature.toChars()":"android.content.pm.signature.tochars（）\r\n","android.content.Loader.startLoading()":"android.content.loader.startloading（）\r\n","Returns the euclidian distance from (0,0) to (x,y)":"将欧几里得距离从（0,0）返回（x，y）\r\n","android.bluetooth.BluetoothHealthAppConfiguration.CREATOR":"android.bluetooth.bluetoothhealthappconfiguration.creator\r\n","If this extra is set to true then any backoffs for the initial attempt (e.":"如果此额外设置为true，则最初尝试的任何退缩（e。\r\n","android.graphics.Canvas.drawLines(float[], int, int, android.graphics.Paint)":"android.graphics.canvas.drawlines（float []，int，int，android.graphics.paint）\r\n",": The device is\n            compatible with Android’s security model.":"：设备是\r\n            与Android的安全模型兼容。\r\n","Get the paint's rasterizer (or null).":"获取油漆的栅格器（或空）。\r\n","android.bluetooth.le.ScanRecord.getManufacturerSpecificData()":"android.bluetooth.le.scanrecord.getManufacturersPecificData（）\r\n","android.graphics.drawable.GradientDrawable.setUseLevel(boolean)":"android.graphics.drawable.gradientdrawable.setuselevel（boolean）\r\n","android.graphics.RenderNode.getBottom()":"android.graphics.rendernode.getBottom（）\r\n","\n value of ":"\r\n 的价值\r\n"," for receiving intents at a\n            time of your choosing.":" 用于接收意图\r\n            您选择的时间。\r\n",": If set, the service (which must be isolated)\n            will be spawned from an Application Zygote, instead of the regular Zygote.":"：如果设置，服务（必须隔离）\r\n            将从应用程序Zygote生成，而不是常规Zygote。\r\n","android.content.res.Configuration.UI_MODE_TYPE_APPLIANCE":"机器人。内容。res.配置。UI_MODE_TYPE_应用\r\n","Called when the database needs to be upgraded.":"当需要升级数据库时调用。\r\n","android.content.pm.ResolveInfo":"android.content.pm.resolveinfo\r\n","android.graphics.drawable.InsetDrawable.InsetDrawable(android.graphics.drawable.Drawable, float)":"android.graphics.drawable.insetdrawable.insetdrawable（android.graphics.drawable.drawable，float）\r\n","Sets the start angle for rotation.":"设置旋转的起始角度。\r\n","android.content.pm.PackageInfo.getLongVersionCode()":"android.content.pm.packageinfo.getlongversioncode（）\r\n","android.content.Intent.CATEGORY_VOICE":"android.content.intent.category_voice\r\n","android.database.sqlite.SQLiteQueryBuilder.buildQueryString(boolean, java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"android.database.sqlite.sqlitequerybuilder.buildquilderystring（boolean，java.lang.string，java.lang.string []，java.lang.string，java.lang.lang.lang.string， java.lang.string）\r\n","android.content.Context.obtainStyledAttributes(android.util.AttributeSet, int[])":"android.content.context.ObtainStyLetTributes（android.util.attributeset，int []）\r\n","Removes a provider from the provider list.":"从提供商列表中删除提供商。\r\n","Parse a name/value pair out of an XML tag holding that data.":"用XML标签符合该数据的XML标签来解析名称/值对。\r\n","android.os.Message#obj obj":"android.os.message＃obj obj\r\n","Implement this to handle query requests from clients.":"实施此操作以处理客户的查询请求。\r\n","Sets the cursor factory to be used for the query.":"将光标工厂设置为用于查询。\r\n","android.content.pm.ResolveInfo.providerInfo":"android.content.pm.resolveinfo.providerinfo\r\n","if the method fails (for example, if the surface\n     is unavailable or unsuitable).\n":"如果方法失败（例如，如果表面\r\n     不可用或不合适）。\r\n\r\n","Frees up the memory associated with this region decoder, and mark the\n            region decoder as \"dead\", meaning it will throw an exception if decodeRegion(),\n            getWidth() or getHeight() is called.":"释放与该区域解码器相关的内存，并标记\r\n            区域解码器为“死亡”，这意味着如果解码（），\r\n            getWidth（）或Getheight（）被调用。\r\n","if the SQL string is invalid\n":"如果SQL字符串无效\r\n\r\n","#ACTION_VENDOR_SPECIFIC_HEADSET_EVENT":"#action_vendor_specific_headset_event\r\n","Surface":"表面\r\n","Characteristic value format type sint8":"特征值格式类型sint8\r\n","android.content.pm.PackageManager.getInstallerPackageName(java.lang.String)":"android.content.pm.packagemanager.getinstallerpackagename（java.lang.string）\r\n","android.content.Context.checkCallingOrSelfUriPermissions(java.util.List, int)":"android.content.Context.CheckcallingorSelfuriperMissions（java.util.list，int）\r\n","Return all dynamic shortcuts from the caller app.":"返回呼叫者应用程序中的所有动态快捷方式。\r\n","android.bluetooth.BluetoothHidDeviceAppQosSettings.BluetoothHidDeviceAppQosSettings(int, int, int, int, int, int)":"android.bluetooth.bluetoothhiddeviceappqosettings.bluetoothhiddeviceappqosettings（int，int，int，int，int，int，int，int）\r\n","Adds a new row to the end and returns a builder for that row.":"将新行添加到末尾，并返回该行的构建器。\r\n","Returns true if the field at the specified row and column index\n            has type ":"如果指定的行和列索引处的字段返回true\r\n            有类型\r\n","Health Channel Connection State - Connected":"健康频道连接状态 - 连接\r\n","AT command type READ used with\n            ":"在命令类型上读取\r\n            \r\n","android.drm.DrmErrorEvent.TYPE_RIGHTS_NOT_INSTALLED":"android.drm.drmerrorevent.type_rights_not_installed\r\n","Puts a long integer into the field at the specified row and column index.":"将一个长整数放入指定的行和列索引处的字段。\r\n","android.content.ContentResolver.CURSOR_ITEM_BASE_TYPE":"android.content.contentresolver.cursor_item_base_type\r\n","Set or clear the patheffect object.":"设置或清除路径效应对象。\r\n","Helper interface for adding custom processing to an image.":"用于将自定义处理添加到图像的辅助接口。\r\n","android.graphics.Outline.setPath(android.graphics.Path)":"android.graphics.outline.setpath（android.graphics.path）\r\n","Create an Icon pointing to an image file specified by path.":"创建一个指向路径指定的图像文件的图标。\r\n","android.hardware.Sensor.STRING_TYPE_ACCELEROMETER":"android.hardware.sensor.string_type_accelerometer\r\n","android.graphics.Matrix.postTranslate(float, float)":"android.graphics.matrix.posttranslate（float，float）\r\n","Return a bit mask of the differences between this Configuration\n object and the given one.":"返回此配置之间差异的蒙版\r\n 对象和给定的。\r\n","android.content.Intent.ACTION_VIEW_PERMISSION_USAGE":"android.content.intent.action_view_permission_usage\r\n","A constant string describing an uncalibrated rotation vector sensor type.":"描述未校准旋转矢量传感器类型的常数字符串。\r\n","android.database.AbstractCursor.getWindow()":"android.database.abstractcursor.getWindow（）\r\n","android.graphics.Region.quickReject(int, int, int, int)":"android.graphics.gregion.quickreject（int，int，int，int）\r\n","android.graphics.Paint.setDither(boolean)":"android.graphics.paint.setdither（boolean）\r\n","Returns the ID of the specified layer.":"返回指定层的ID。\r\n","OnLoadCanceledListener":"OnloadCanceLedListener\r\n","android.graphics.drawable.AnimatedImageDrawable.REPEAT_INFINITE":"android.graphics.drawable.animatedimatedimatedrawable.repeat_infinite\r\n","PatternMatcher#PATTERN_SIMPLE_GLOB":"patternMatcher＃pattern_simple_glob\r\n","Returns the maximum valid value for the specified component of this\n            color space's color model.":"返回此指定组件的最大有效值\r\n            色彩空间的颜色模型。\r\n","android.bluetooth.BluetoothHidDevice.replyReport(android.bluetooth.BluetoothDevice, byte, byte, byte[])":"android.bluetooth.bluetoothhiddevice.ReplyReport（android.bluetooth.bluetoothdevice，byte，byte，byte []）\r\n","android.bluetooth.BluetoothGattDescriptor.DISABLE_NOTIFICATION_VALUE":"android.bluetooth.bluetoothgattdescriptor.disable_notification_value\r\n","Performs the chromatic adaptation of a color space from its native\n            white point to the specified white point.":"从其本地进行色彩空间的色彩改编\r\n            白点到指定的白点。\r\n","android.graphics.Bitmap.extractAlpha(android.graphics.Paint, int[])":"android.graphics.bitmap.extractalpha（android.graphics.paint，int []）\r\n","Closes this renderer.":"关闭这个渲染器。\r\n","Stops an ongoing Bluetooth LE scan started using a PendingIntent.":"停止正在进行的蓝牙LE扫描开始使用垂悬。\r\n","Return a new Context object for the current Context but whose resources\n are adjusted to match the given Configuration.":"返回当前上下文的新上下文对象，但其资源\r\n 调整以匹配给定配置。\r\n","android.database.CursorWrapper":"android.database.cursorwrapper\r\n","Returns the absolute path to the directory on the filesystem similar to\n ":"返回类似的文件系统上的目录的绝对路径\r\n \r\n","Creates a new advertising set.":"创建一个新的广告集。\r\n","android.content.ContentProviderOperation.newInsert(android.net.Uri)":"android.content.contentProvideroperation.newinsert（android.net.uri）\r\n","</li>\n                <li>for Bluetooth LE - ":"</li>\r\n                <li>蓝牙le-\r\n","Returns absolute paths to application-specific directories on all\n external storage devices where the application can place persistent files\n it owns.":"将绝对路径返回到所有方面的专用目录\r\n 应用程序可以放置持久文件的外部存储设备\r\n 它拥有。\r\n","android.graphics.drawable.TransitionDrawable.reverseTransition(int)":"android.graphics.drawable.transitiondrawable.reversetransition（int）\r\n","android.content.Context.sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)":"android.content.context.SendSendStickyOrderedBroadcastAsuser（android.content.intent，android.os.userhandle，android.content.content.broadcastreceiver，android.os.os.os.handler，int，int，int，java.lang.lang.string，android.os.os.os.os.bundle）\r\n","android.database.sqlite.SQLiteOpenHelper.onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)":"android.database.sqlite.sqliteopenhelper.onupgrade（android.database.sqlite.sqlite.sqlitedatabase，int，int）\r\n","android.content.res.loader.ResourcesLoader.clearProviders()":"android.content.res.res.loader.resourcesloader.clearproviders（）\r\n","android.content.Context.WIFI_P2P_SERVICE":"android.content.context.wifi_p2p_service\r\n","#forceLoad()":"#forceload（）\r\n","release()":"发布（）\r\n","android.bluetooth.BluetoothGattCharacteristic.FORMAT_FLOAT":"android.bluetooth.bluetoothgattcharacteristic.format_float\r\n","To be used as code under test for framework instrumentation tests.":"用作框架仪器测试的测试代码。\r\n","\n          Whether or not those who ordinarily would not have permission to\n          access the content provider's data can be granted to do so.\n        ":"\r\n          那些通常不允许的人是否\r\n          访问内容提供商的数据可以授予这样做。\r\n        \r\n","android.hardware.Sensor.STRING_TYPE_GYROSCOPE":"android.hardware.sensor.string_type_gyRoscope\r\n","android.content.IntentFilter.addCategory(java.lang.String)":"android.content.intentfilter.addcategory（java.lang.string）\r\n","Return the drawable's bounds Rect. -or- Specify a bounding rectangle for the Drawable.":"返回可绘制的边界rect。 - 或 - 为可绘制的矩形指定边界矩形。\r\n","Retrieves the information type associated with this object.":"检索与此对象关联的信息类型。\r\n","Sets the maximum size of the prepared-statement cache for this database.":"为该数据库设置准备插件缓存的最大大小。\r\n","android.content.Context.APP_SEARCH_SERVICE":"android.content.context.app_search_service\r\n","android.graphics.RenderNode.getClipToOutline()":"android.graphics.rendernode.getCliptooutline（）\r\n","PorterDuff.Mode#SRC_IN":"波特达夫。模式#SRC_IN\r\n","android.bluetooth.BluetoothManager.getDevicesMatchingConnectionStates(int, int[])":"android.bluetooth.bluetoothmanager.getDevicesMatchingConnectionStates（int，int []）\r\n","Add a cubic bezier from the last point, approaching control points\n            (x1,y1) and (x2,y2), and ending at (x3,y3).":"从最后一点添加一个立方体，接近控制点\r\n            （x1，y1）和（x2，y2），并以（x3，y3）结尾。\r\n","Public name of this item.":"此项目的公共名称。\r\n","\n          An icon representing the provider.\n        ":"\r\n          代表提供商的图标。\r\n        \r\n","#SCREENLAYOUT_SIZE_LARGE":"#screenlayout_size_large\r\n","android.graphics.Outline.setRect(int, int, int, int)":"android.graphics.outline.setRect（int，int，int，int）\r\n","android.graphics.Paint.getTextBounds(char[], int, int, android.graphics.Rect)":"android.graphics.paint.getTextbounds（char []，int，int，android.graphics.Rect）\r\n","Root SHA256 hash of a 4K Merkle tree computed over all file bytes.":"在所有文件字节上计算的4K默克树的root SHA256哈希。\r\n","Point":"观点\r\n","Additional flags about this permission as given by\n ":"有关此许可的其他标志\r\n \r\n",": The device can support having an external camera connected to it.":"：该设备可以支持将外部摄像头连接到它。\r\n","Returns the x coordinate of the glyph position at the given index.":"返回给定索引处的字形位置的X坐标。\r\n","android.graphics.drawable.RotateDrawable.isPivotYRelative()":"android.graphics.drawable.RotatedRawable.ispivotyrative（）\r\n","Create a helper object to create, open, and/or manage a database.":"创建一个辅助对象来创建，打开和/或管理数据库。\r\n","Move the cursor to the next row.":"将光标移动到下一行。\r\n","android.content.pm.ComponentInfo.splitName":"android.content.pm.com.ponentinfo.splitname\r\n","Set the rectangle to (0,0,0,0)":"将矩形设置为(0,0,0,0)\r\n","F:Android.Graphics.Pdf.PdfRenderer+Page.Render":"F：android.graphics.pdf.pdfrenderer+page.render\r\n",": bits shift to get the screen dynamic range.":"：位移动以获取屏幕动态范围。\r\n","android.graphics.drawable.Drawable.onLevelChange(int)":"android.graphics.drawable.drawable.onlevelchange（int）\r\n","android.graphics.Canvas.drawArc(float, float, float, float, float, float, boolean, android.graphics.Paint)":"android.graphics.canvas.drawarc（浮点，浮点，浮点，浮子，浮子，浮点，布尔，布尔，android.graphics.paint）\r\n","android.content.pm.PackageManager.FEATURE_BLUETOOTH_LE":"android.content.pm.packagemanager.feature_bluetooth_le\r\n","Flash will not be fired.":"闪光灯不会被解雇。\r\n","android.graphics.Rect.describeContents()":"机器人。图形。长描述()\r\n","android.graphics.drawable.LayerDrawable.getNumberOfLayers()":"android.graphics.drawable.layerdrawable.getnumberoflayers（）\r\n","Draw the specified Rect using the specified paint.":"使用指定的油漆绘制指定的矩形。\r\n","Array of all signatures read from the package file.":"所有签名的数组从软件包文件中读取。\r\n","Indicates whether the renderer responsible for drawing this\n            bitmap should attempt to use mipmaps when this bitmap is drawn\n            scaled down. -or- Set a hint for the renderer responsible for drawing this bitmap\n            indicating that it should attempt to use mipmaps when this bitmap\n            is drawn scaled down.":"指示渲染器是否负责绘制此\r\n            绘制此位图时，位图应尝试使用MIPMAP\r\n            缩小比例。 - 或 - 为负责绘制此位图的渲染器设置提示\r\n            表明该位图时应该尝试使用MIPMAP\r\n            绘制缩放。\r\n","Opaque, immutable representation of a signing certificate associated with an\n            application package.":"不透明的，不可变的代表与\r\n            应用程序包。\r\n","android.bluetooth.BluetoothGattService.mIncludedServices":"android.bluetooth.bluetoothgattservice.mincludedservices\r\n","Set the clockwise rotation of preview display in degrees.":"将预览显示的顺时针旋转以度为单位。\r\n","android.graphics.Paint.setTextAlign(android.graphics.Align)":"android.graphics.paint.setTextalign（android.graphics.align）\r\n","android.content.Intent.EXTRA_FROM_STORAGE":"android.content.intent.extra_from_storage\r\n","Sets the minimum and maximum preview fps.":"设置最小值和最大预览fps。\r\n"," to extend the default timeout for a response and declare what\n            action to perform after the timeout occurs.":" 扩展响应的默认超时并声明什么\r\n            超时发生后要执行的操作。\r\n","The required smallest screen width the application can run on.":"所需的最小屏幕宽度该应用程序可以运行。\r\n","The rights-protected content can be transferred.":"可以转移受权保护的内容。\r\n","android.content.res.Resources.getAnimation(int)":"android.content.res.resources.getAnimation（int）\r\n",": The device supports Wi-Fi Direct networking.":"：该设备支持Wi-Fi直接网络。\r\n","android.content.pm.PackageInstaller.EXTRA_STORAGE_PATH":"android.content.pm.packageinstaller.extra_storage_path\r\n","Gets a value and converts it to a Short.":"获取一个值并将其转换为简短。\r\n","The filter matched an intent with the same data URI scheme and\n authority host and port.":"过滤器与相同的数据URI方案的意图匹配，并且\r\n 权威主持人和港口。\r\n","android.content.pm.PackageInstaller.EXTRA_SESSION":"android.content.pm.packageinstaller.extra_session\r\n","PackageManager#VERIFICATION_ALLOW":"PackageManager＃verification_allow\r\n","ContentProvider#openFile ContentProvider.openFile":"ContentProvider＃OpenFile ContentProvider.openfile\r\n","Retrieve an XML file from a package.":"从软件包中检索XML文件。\r\n","Gets whether the given package is an instant app.":"获取给定的软件包是否是即时应用程序。\r\n","Sets the next column value in this row.":"设置此行中的下一列值。\r\n","android.content.ContentResolver.QUERY_ARG_SORT_COLUMNS":"android.content.contentresolver.query_arg_sort_columns\r\n","Return a copy of the drawable's bounds in a new Rect.":"返回新的矩形的可绘制范围的副本。\r\n","The name of the boolean extra used to define if the processed text will be used as read-only.":"布尔值额外的名称用于定义处理后的文本是否将用作仅阅读。\r\n","Calling this API requires a uses-feature\n            ":"调用此API需要使用功能\r\n            \r\n","android.database.sqlite.SQLiteDatabase.setMaxSqlCacheSize(int)":"android.database.sqlite.sqlitedatabase.setmaxssqlcachesize（int）\r\n","Returns the color of the shadow layer.":"返回阴影层的颜色。\r\n","android.graphics.Rect.contains(android.graphics.Rect)":"机器人。图形。长包含（android。图形。Rect）\r\n","The domain has been previously verified by the domain verification agent.":"该域先前已通过域验证剂进行了验证。\r\n","android.content.pm.FeatureInfo.flags":"android.content.pm.featureinfo.flags\r\n","Filter the clip description MIME types by the given MIME type.":"通过给定的MIME类型过滤夹描述MIME类型。\r\n","Broadcast Action:  The media scanner has finished scanning a directory.":"广播动作：媒体扫描仪完成了扫描目录。\r\n","android.content.Loader.stopLoading()":"android.content.loader.stoploading（）\r\n","Add a standalone chunk to the ":"在\r\n","android.graphics.drawable.shapes.Shape":"android.graphics.drawable.shapes.shape\r\n","scheduler":"调度程序\r\n","Draw the specified arc, which will be scaled to fit inside the specified oval.":"绘制指定的弧线，将缩放为适合指定的椭圆形内。\r\n","The NORMAL style of the default serif typeface.":"默认Serif字体的正常样式。\r\n","Register an observer that is called when changes happen to the contents\n of the this cursors data set, for example, when the data set is changed via\n ":"注册当内容发生更改时调用的观察者\r\n 例如，当数据集通过\r\n \r\n",": The device is capable of communicating with\n            consumer IR devices.":"：该设备能够与\r\n            消费者IR设备。\r\n","Alternate version of ":"替代版本的\r\n","android.bluetooth.le.AdvertisingSetParameters.INTERVAL_HIGH":"android.bluetooth.le.AdvertisingsetParameters.interval_high\r\n","PackageManager#verifyPendingInstall":"PackageManager＃verifypendingInstall\r\n","android.graphics.Paint.setSubpixelText(boolean)":"android.graphics.paint.setsubpixeltext（boolean）\r\n",", this is no longer the case.":"， 这已不再是这种情况。\r\n","Certificate input bytes: the input bytes represent the SHA256 output of an encoded X.":"证书输入字节：输入字节代表编码X的SHA256输出。\r\n"," that an operation is working with.":" 该操作正在使用。\r\n","android.graphics.Rect.readFromParcel(android.os.Parcel)":"机器人。图形。长readFromParcel（android的。操作系统。包裹)\r\n","android.drm.DrmInfo":"Android.drm.drminfo\r\n","android.content.pm.PackageManager.isAutoRevokeWhitelisted(java.lang.String)":"android.content.pm.packagemanager.isautorevokewhitelisted（java.lang.string）\r\n","android.content.ContentResolver.acquireContentProviderClient(java.lang.String)":"android.content.contentresolver.acquirecontentproviderclient（java.lang.string）\r\n","android.gesture.Gesture.getStrokes()":"android.gesture.gesture.getstrokes（）\r\n","</td></tr>\n                <tr><td>":"</td> </tr>\r\n                <tr> <td>\r\n","android.graphics.Color.red()":"android.graphics.color.red（）\r\n","Called by system whenever a device associated with this app stops being available.":"每当与此应用程序关联的设备停止可用时，由系统调用。\r\n","Interface to global information about an application environment.":"与有关应用程序环境的全局信息接口。\r\n","Provides callbacks that allow for the value of a file-based resources or assets of a\n            ":"提供回调，允许基于文件的资源或资产的价值\r\n            \r\n","subset":"子集\r\n","Inset the rectangle by (dx,dy).":"用(dx,dy)插入矩形.\r\n","Returns the quality setting for the EXIF thumbnail in Jpeg picture.":"返回JPEG图片中Exif缩略图的质量设置。\r\n","android.content.Context.BATTERY_SERVICE":"android.content.context.battery_service\r\n","WifiManager":"Wifimanager\r\n"," flag: return all attributions declared in the package manifest":" 标志：返回软件包清单中声明的​​所有属性\r\n","#CATEGORY_UNDEFINED":"#category_undefined\r\n","android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_PHONE_CALL":"android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_PHONE_CALL\r\n","Descriptor permission: Allow encrypted read operations":"描述符许可：允许加密的读取操作\r\n","Rect holds four integer coordinates for a rectangle.":"Rect保存矩形的四个整数坐标。\r\n","android.content.Intent.EXTRA_INDEX":"android.content.intent.extra_index\r\n","Named":"命名\r\n","android.content.res.ColorStateList.withAlpha(int)":"android.content.Res.ColorStatelist.withalpha（int）\r\n","Releases a reference to the object that was owned by the container of the object,\n            closing the object if the last reference was released.":"释放对对象容器拥有的对象的引用，\r\n            如果发布最后一个引用，则关闭对象。\r\n","android.graphics.Paint.END_HYPHEN_EDIT_INSERT_HYPHEN":"android.graphics.paint.end_hyphen_edit_insert_hyphen\r\n","other":"其他\r\n","Intent#ACTION_VIEW":"意图＃action_view\r\n","android.graphics.text.TextRunShaper.shapeTextRun(java.lang.CharSequence, int, int, int, int, float, float, boolean, android.graphics.Paint)":"android.graphics.text.textrunshaper.shapetextrun（Java.lang.CharSequence，int，int，int，int，int，int，int，float，float，float，boolean，boolean，android.graphics.paint）\r\n","Create a drawable by decoding a bitmap from the given input stream.":"通过从给定的输入流解码位图来创建可绘制的方法。\r\n","android.graphics.drawable.Drawable.setLevel(int)":"机器人。图形。可画的。可画的。设置级别(int)\r\n","Bundle#putBoolean":"束＃Putboolean\r\n","android.graphics.Region.isEmpty()":"android.graphics.region.isempty（）\r\n","Thrown if the resources for the given\n application could not be loaded.":"如果给定的资源\r\n 无法加载应用程序。\r\n","Called when the DRM framework sends information about a DRM processing request.":"当DRM框架发送有关DRM处理请求的信息时，请致电。\r\n","android.content.SyncStats.clear()":"android.content.syncstats.clear（）\r\n","android.graphics.RenderNode.setTranslationX(float)":"android.graphics.rendernode.settranslationx（float）\r\n","Returns true if this region decoder has been recycled.":"如果该区域解码器已回收，则返回为真。\r\n","android.bluetooth.le.ScanRecord.getServiceSolicitationUuids()":"android.bluetooth.le.ScanRecord.getServicesoliticationuuids（）\r\n","PermissionGroupInfo":"许可groupinfo\r\n","Full paths to zero or more split APKs, indexed by the same order as ":"到达零或更多拆分APK的完整路径，由与\r\n","android.graphics.drawable.GradientDrawable.getThickness()":"android.graphics.drawable.gradientdrawable.getthickness（）\r\n","Sets the type of gradient used by this drawable.":"设置此绘制可绘制的梯度类型。\r\n","Create a drawable from an inputstream":"从输入流创建可绘制的\r\n","android.graphics.drawable.Drawable.createFromPath(java.lang.String)":"android.graphics.drawable.drawable.createfrompath（java.lang.string）\r\n","android.content.Intent.ACTION_PACKAGE_RESTARTED":"android.content.intent.action_package_restarted\r\n","android.content.pm.PackageManager.FEATURE_TELEPHONY_EUICC":"android.content.pm.packagemanager.feature_telephony_euicc\r\n","that indicates that the activity\n can itself handle changes to the IMSI MCC. ":"这表明活动\r\n 本身可以处理IMSI MCC的更改。\r\n","android.graphics.BitmapFactory.decodeFileDescriptor(java.io.FileDescriptor)":"android.graphics.bitmapfactory.decodefiledescriptor（java.io.filedescriptor）\r\n","android.content.pm.Checksum.TYPE_WHOLE_SHA512":"android.content.pm.checksum.type_whole_sha512\r\n","android.content.MutableContextWrapper.setBaseContext(android.content.Context)":"android.content.mutablecontextwrapper.setbasecontext（android.content.context）\r\n"," associated with this Intent. -or- Set a ":" 与此意图相关联。 - 或设置a\r\n","Returns true if the rectangle is empty (left >= right or top >= bottom)":"如果矩形为空（left>=right或top>=bottom），则返回true\r\n","android.drm.DrmConvertedStatus.convertedData":"android.drm.drmconvertedstatus.converteddata\r\n","android.content.pm.PackageManager.PackageManager()":"android.content.pm.packagemanager.packagemanager（）\r\n","android.database.sqlite.SQLiteDatabase.CONFLICT_NONE":"android.database.sqlite.sqlitedatabase.conflict_none\r\n","The authority of the provider that is currently being synced.":"目前正在同步的提供商的权威。\r\n","Retrieve the glyph horizontal advance and bounding box.":"检索字形水平进步和边界框。\r\n","Defines a rectangle shape.":"定义矩形形状。\r\n","android.bluetooth.BluetoothGattServerCallback":"android.bluetooth.bluetoothgattservercallback\r\n","android.service.autofill.AutofillService autofill\n            providers":"Android.Service.Autofill.AutofillService Autofill\r\n            提供者\r\n","Connect to a health device which has the ":"连接到具有\r\n","#TYPE_CHOICE":"#type_choice\r\n","Retrieve the application package name this Intent is limited to.":"检索此意图的应用程序包名称。\r\n","Efficient way to pop any calls to save() that happened after the save\n            count reached saveCount.":"弹出保存后发生的任何调用save()的有效方法\r\n            计数达到saveCount。\r\n","Return details for a specific session.":"返回特定会话的详细信息。\r\n",": true when the application's window can be\n displayed on normal screens. ":"：true当应用程序的窗口可以\r\n 显示在普通屏幕上。\r\n","android.graphics.fonts.FontVariationAxis.toFontVariationSettings(android.graphics.fonts.FontVariationAxis[])":"android.graphics.fonts.fontvariationaxis.tofontvariationsettings（android.graphics.fonts.fonts.fontvariationaxis []）\r\n","The declared priority of this match.":"这场比赛的主张优先级。\r\n",".dump":"。倾倒\r\n","will be considered for\n matching. ":"将考虑\r\n 匹配。\r\n","Checks whether the calling package is allowed to request package installs through package\n            installer.":"检查是否允许调用软件包请求通过软件包请求软件包安装\r\n            安装程序。\r\n","android.graphics.drawable.Drawable.getIntrinsicWidth()":"android.graphics.drawable.drawable.getintrinsicwidth（）\r\n","Return a list of user profiles that that the caller can use when calling other APIs in this\n            class.":"返回呼叫者在此中调用其他API时可以使用的用户配置文件列表\r\n            班级。\r\n","Notify registered observers that several rows have been updated.":"通知注册的观察者，已经更新了几行。\r\n","Retrieves an iterator object that you can use to iterate over the file suffixes that\n            this DRM plug-in supports.":"检索一个迭代对象，您可以使用该对象在文件后缀上使用该对象\r\n            此DRM插件支持。\r\n","android.database.DataSetObserver":"android.database.datasetobserver\r\n","Register an application configuration that acts as a Health SINK.":"注册充当健康水槽的应用程序配置。\r\n","android.bluetooth.BluetoothHidDevice.SUBCLASS2_SENSING_DEVICE":"android.bluetooth.bluetoothhiddevice.subclass2_sensing_device\r\n"," for accessing AppWidgets.":" 用于访问AppWidgets。\r\n","android.os.Environment#DIRECTORY_MOVIES":"android.os.Environment＃Directory_movies\r\n","android.graphics.RenderNode.getTranslationZ()":"android.graphics.rendernode.getTranslationz（）（）\r\n","This class allows users to do multiple inserts into a table using\n the same statement.":"此类允许用户使用多个插入\r\n 相同的陈述。\r\n",":\n            The device supports creating secondary users and managed profiles via\n            ":"：\r\n            该设备支持创建次要用户和通过\r\n            \r\n","#ACTION_CONFIRM_PIN_SHORTCUT":"#action_confirm_pin_shortcut\r\n","android.content.Intent.ACTION_INSTALL_PACKAGE":"android.content.intent.action_install_package\r\n","Key for an SQL style selection string that may be present in the query Bundle argument\n            passed to ":"查询束参数中可能存在的SQL样式选择字符串的键\r\n            传递\r\n","android.graphics.Color.red(int)":"android.graphics.color.red（int）\r\n","android.companion.AssociationRequest":"android.companion.associationRequest\r\n",") file descriptor.":"）文件描述符。\r\n","android.graphics.Path.rMoveTo(float, float)":"android.graphics.path.rmoveto（浮点，浮点）\r\n","android.companion.CompanionDeviceService.onDeviceDisappeared(java.lang.String)":"android.companion.companiondeviceservice.ondevicedisappeared（java.lang.string）\r\n","PixelFormat#TRANSPARENT PixelFormat.TRANSPARENT":"pixelformat＃透明的pixelformat.transparent\r\n","android.drm.DrmErrorEvent.DrmErrorEvent(int, int, java.lang.String)":"android.drm.drmerrorevent.drmerrorevent（int，int，java.lang.string）\r\n","#ACTION_CHOOSER":"#action_chooser\r\n","Returns an array of strings naming the private databases associated with\n            this Context's application package.":"返回一系列字符串，命名与\r\n            此上下文的应用程序包。\r\n","This class holds the current attribute values for a particular theme.":"此类拥有特定主题的当前属性值。\r\n","Associate this app with a companion device, selected by user":"将此应用与用户选择的配套设备相关联\r\n","Returns absolute paths to application-specific directories on all\n external storage devices where the application can place cache files it\n owns.":"将绝对路径返回到所有方面的专用目录\r\n 应用程序可以放置缓存文件的外部存储设备\r\n 拥有。\r\n","android.database.CursorWindow.getFloat(int, int)":"android.database.cursorwindow.getfloat（int，int）\r\n","Called to notify the client that this proxy object has been\n disconnected from the service.":"打电话通知客户该代理对象已\r\n 与服务断开连接。\r\n","android.content.Intent.ACTION_MEDIA_UNMOUNTABLE":"android.content.intent.action_media_unmountable\r\n","android.graphics.ColorSpace.getName()":"android.graphics.colorspace.getName（）\r\n","Executes the query returning a Cursor over the result set.":"在结果集上执行查询返回光标。\r\n","android.content.ContentProvider.openTypedAssetFile(android.net.Uri, java.lang.String, android.os.Bundle)":"android.content.contentprovider.opentypedassetfile（android.net.uri，java.lang.string，android.os.bundle）\r\n","android.content.Intent.setDataAndType(android.net.Uri, java.lang.String)":"android.content.intent.setDataandType（android.net.uri，java.lang.string）\r\n","android.content.Context.TELEPHONY_SERVICE":"android.content.context.telephony_service\r\n","android.graphics.Bitmap.isPremultiplied()":"android.graphics.bitmap.ispremultiplied（）\r\n","return the collation key in hex format":"以十六进制格式返回整理键\r\n","If a sync is active returns the information about it, otherwise returns null.":"如果一个同步活动会返回有关它的信息，则返回null。\r\n","Playback stopped.":"播放停止了。\r\n","android.content.pm.ShortcutManager":"android.content.pm.shortcutmanager\r\n"," for an Activity that will be invoked when the user makes a selection\n            from the chooser activity presented by ":" 对于用户进行选择时将调用的活动\r\n            从选择者活动\r\n","android.graphics.ColorMatrix.preConcat(android.graphics.ColorMatrix)":"android.graphics.ColorMatrix.preConcat(android.graphics.ColorMatrix)\r\n","Samples a stroke temporally into a given number of evenly-distributed \n            points.":"样本将暂时的中风放入给定数量的均匀分布\r\n            点。\r\n"," value at which system low-priority\n            receivers are placed; that is, receivers that should execute after\n            application code.":" 在哪个系统低优先级的价值\r\n            接收器被放置；也就是说，应该执行的接收器\r\n            应用程序代码。\r\n","android.content.pm.PackageManager.isDeviceUpgrading()":"android.content.pm.packagemanager.isdeviceupgrading（）\r\n","android.graphics.pdf.PdfRenderer.shouldScaleForPrinting()":"android.graphics.pdf.pdfrenderer.shouldscaleforprinting（）\r\n","android.content.Intent.ACTION_DEVICE_STORAGE_LOW":"android.content.intent.action_device_storage_low\r\n","RestrictionEntry#TYPE_BUNDLE_ARRAY":"限制性＃type_bundle_array\r\n","Starts camera auto-focus and registers a callback function to run when\n            the camera is focused.":"启动摄像机自动对焦，并注册一个回调函数，以运行\r\n            相机是专注的。\r\n","Retrieve the timestamp associated with the texture image set by the most recent call to\n            ":"检索与最新呼叫设置的纹理图像相关的时间戳\r\n            \r\n","Provides the system font configurations.":"提供系统字体配置。\r\n","android.graphics.RenderNode.getSpotShadowColor()":"android.graphics.rendernode.getSpotShadowColor（）\r\n","android.drm.ProcessedData":"Android.drm.processeddata\r\n","Memory allocation failed during renewal.":"续订期间内存分配失败。\r\n","#deactivate()":"#停用()\r\n","android.database.DatabaseErrorHandler.onCorruption(android.database.sqlite.SQLiteDatabase)":"机器人。数据库。DatabaseErrorHandler.onCorruption（android。数据库。sqlite。SQLiteDatabase）\r\n","android.content.pm.PackageManager.FEATURE_VULKAN_DEQP_LEVEL":"android.content.pm.packagemanager.feature_vulkan_deqp_level\r\n","android.content.pm.ConfigurationInfo.INPUT_FEATURE_HARD_KEYBOARD":"android.content.pm.configurationinfo.input_feature_hard_keyboard\r\n","android.graphics.Paint.getTextPath(java.lang.String, int, int, float, float, android.graphics.Path)":"android.graphics.paint.getTextPath（java.lang.string，int，int，float，float，float，android.graphics.path）\r\n","An exception that indicates that the SQLite program was aborted.":"一个例外，表明SQLITE程序已中止。\r\n","Set the locally stored value of this characteristic.":"设置此特征的本地存储值。\r\n","android.database.sqlite.SQLiteQueryBuilder.isStrictColumns()":"android.database.sqlite.sqlitequerybuilder.isstrictcolumns（）\r\n","android.database.Observable.registerObserver(java.lang.Object)":"机器人。数据库。可观察到的。registerObserver（java。朗。对象)\r\n","Android.Content.Context.MODE_APPEND":"android.content.context.mode_append\r\n","android.content.pm.ActivityInfo.FLAG_PREFER_MINIMAL_POST_PROCESSING":"android.content.pm.c.activityinfo.flag_prefer_minimal_post_processing\r\n","android.content.UriPermission.isReadPermission()":"android.content.uripermession.isreadpermission（）\r\n"," to supply an alternative to ":" 提供替代方案\r\n",": bits shift to get the layout direction.":"：位移动以获取布局方向。\r\n","android.bluetooth.BluetoothLeAudio.getDevicesMatchingConnectionStates(int[])":"android.bluetooth.bluetoothleaudio.getDevicesMatchingConnectionStates（int []）\r\n","Set the matrix to rotate about (0,0) by the specified number of degrees.":"将矩阵设置为通过指定数量的度数旋转（0,0）。\r\n","Publish a single dynamic shortcut.":"发布单个动态快捷方式。\r\n","See\n ":"看\r\n \r\n","The rows pointed to by both cursors are the same ":"两个光标指向的行是相同的\r\n","ColorSpace#getMinValue(int)":"ColorSpace#getMinValue(int)\r\n","android.content.Intent.addFlags(int)":"android.content.intent.Addflags（int）\r\n","android.content.ContentProvider.insert(android.net.Uri, android.content.ContentValues, android.os.Bundle)":"android.content.contentprovider.intert（android.net.uri，android.content.contentvalues，android.os.bundle）\r\n"," for the current row this cursor is\n pointing at.":" 对于当前行，此游标是\r\n 指着。\r\n","#UI_MODE_NIGHT_MASK":"#UI_MODE_NIGHT_MASK\r\n","android.content.ContextWrapper":"android.content.ContextWrapper\r\n","Checks whether the Shape is opaque.":"检查形状是否不透明。\r\n","android.content.ContentResolver.requestSync(android.accounts.Account, java.lang.String, android.os.Bundle)":"android.content.contentresolver.requestsync（android.accounts.accounts.account，java.lang.string，android.os.bundle）\r\n","android.content.IntentFilter.setPriority(int)":"android.content.intentfilter.setPriority（int）\r\n","android.graphics.drawable.shapes.PathShape.PathShape(android.graphics.Path, float, float)":"android.graphics.drawable.shapes.pathshape.pathshapeshape（android.graphics.path，float，float）\r\n","The pixel density to use for the bitmap.":"用于位图的像素密度。\r\n","Returns the value of the specified component in the range defined by\n            this color's color space (see ":"在定义的范围内返回指定组件的值\r\n            此颜色的颜色空间（请参阅\r\n","android.graphics.pdf.PdfDocument.PdfDocument()":"android.graphics.pdf.pdfdocument.pdfdocument（）\r\n"," describing components that should be filtered out\n            and omitted from a list of components presented to the user.":" 描述应滤除的组件\r\n            并从向用户提供的组件列表中省略。\r\n","Returns true if there is currently a primary clip on the clipboard.":"如果剪贴板上有主要剪辑，则返回true。\r\n","android.content.res.Resources.parseBundleExtra(java.lang.String, android.util.AttributeSet, android.os.Bundle)":"android.content.res.res.resources.parsebundleextra（java.lang.string，android.util.attributeset，android.os.bundle）\r\n","android.graphics.ColorMatrix.set(android.graphics.ColorMatrix)":"android.graphics.ColorMatrix.set(android.graphics.ColorMatrix)\r\n","Shader used to draw a bitmap as a texture.":"着色器用来绘制位图作为纹理。\r\n",": The device has biometric hardware to detect a fingerprint.":"：该设备具有生物识别硬件以检测指纹。\r\n","android.content.ClipDescription.getClassificationStatus()":"android.content.clipdescription.getClassificationstatus（）\r\n","android.content.ClipboardManager.getPrimaryClipDescription()":"android.content.clipboardmanager.getPrimaryClipDescription（）\r\n","Create an empty path":"创建一个空的路径\r\n","RestrictionEntry#TYPE_BUNDLE":"限制性＃type_bundle\r\n","Gets the package name of this module.":"获取此模块的包装名称。\r\n","Block until a connection is established.":"阻止直到建立连接。\r\n","android.content.ContentQueryMap.ContentQueryMap(android.database.Cursor, java.lang.String, boolean, android.os.Handler)":"android.content.contentquerymap.contentquerymap（android.database.cursor，java.lang.string，boolean，android.os.handler）\r\n","android.content.res.XmlResourceParser.close()":"机器人。内容。res.XmlResourceParser.关闭()\r\n","Remove a listener that was previously added with ":"删除以前添加的听众\r\n","android.content.ContentResolver.NOTIFY_UPDATE":"android.content.contentresolver.notify_update\r\n","android.graphics.Rect.intersects(int, int, int, int)":"机器人。图形。长相交（int，int，int，int）\r\n","android.content.pm.PackageManager.isInstantApp(java.lang.String)":"android.content.pm.packagemanager.isinstantapp（java.lang.string）\r\n","Get the current connection state of the profile to the remote device.":"获取配置文件的当前连接状态到远程设备。\r\n","to represent that the phone is in a car dock.":"表示手机在汽车码头中。\r\n","android.content.ContentProviderClient":"android.content.ContentProviderClient\r\n","android.content.Intent.EXTRA_TITLE":"android.content.intent.extra_title\r\n","android.content.Context.enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)":"android.content.context.enforcecallingorselfuripermession（android.net.uri，int，java.lang.string）\r\n","Unregisters a listener that was previously added with\n            ":"取消注册的听众以前添加了\r\n            \r\n","Take photos at night.":"晚上拍照。\r\n"," and containing additional contextual\n            information supplied by the current foreground app at the time of the assist request.":" 并包含其他上下文\r\n            当前前景应用程序在辅助请求时提供的信息。\r\n","Resolve the Intent into an ":"解决意图\r\n","android.graphics.ColorMatrix.ColorMatrix(android.graphics.ColorMatrix)":"机器人。图形。颜色矩阵。ColorMatrix（android。图形。ColorMatrix）\r\n","#setProjectionMap(Map)":"#setProctivemoctionMap（地图）\r\n","Advertise on low frequency, around every 1000ms.":"低频广告，每1000毫秒左右。\r\n","Information you can retrieve about a particular application\n            activity or receiver.":"您可以检索有关特定应用程序的信息\r\n            活动或接收器。\r\n",", corresponding to <code>softRestricted</code>\n            value of ":"，对应于<code> softrestricted </code>\r\n            的价值\r\n"," for interacting with TV inputs\n            on the device.":" 用于与电视输入互动\r\n            在设备上。\r\n","Counter for tracking how many deletes were performed by the sync operation, as defined\n            by the SyncAdapter.":"按照定义的同步操作执行了多少删除的计数器\r\n            由SyncAdapter。\r\n","Execute the previously prepared insert or replace using the bound values\n since the last call to prepareForInsert or prepareForReplace.":"执行先前准备的插入或使用绑定值替换\r\n 自从上次准备准备Forforinsert或Preparforreplace以来。\r\n","#sendBroadcast(Intent, String)":"#SendBroadcast（Intent，String）\r\n","Icon#createWithContentUri":"图标＃CreateWithContenturi\r\n","android.content.ClipboardManager.setPrimaryClip(android.content.ClipData)":"android.content.ClipboardManager.setPrimaryClip（android.content.clipdata）\r\n","Characteristic value format type sint16":"特征值格式类型sint16\r\n","Copies the text of the field at the specified row and column index into\n            a ":"在指定的行和列索引中将字段的文本复制到\r\n            一个\r\n","that indicates that the activity can be moved\n between tasks based on its task affinity. ":"这表明活动可以移动\r\n 在任务之间基于其任务亲和力。\r\n","Sets a String parameter.":"设置字符串参数。\r\n","android.database.sqlite.SQLiteDatabase.setPageSize(long)":"android.database.sqlite.sqlitedatabase.setpagesize（long）\r\n","A flag you can enable for debugging: when set, log messages will be\n printed during the resolution of this intent to show you what has\n been found to create the final resolved list.":"您可以启用的标志进行调试：设置时，日志消息将为\r\n 在解决此意图的决议期间印刷了\r\n 被发现创建最终解决列表。\r\n","android.database.DatabaseUtils.appendSelectionArgs(java.lang.String[], java.lang.String[])":"android.database.databaseutils.appendselectionargs（java.lang.string []，java.lang.string []）\r\n","Specify a set of states for the drawable.":"为drawable指定一组状态。\r\n","android.bluetooth.BluetoothHidDevice.SUBCLASS1_MOUSE":"android.bluetooth.bluetoothhiddevice.subclass1_mouse\r\n","android.content.ContentUris.removeId(android.net.Uri)":"android.content.contenturis.removeid（android.net.uri）\r\n","android.content.Context.NOTIFICATION_SERVICE":"android.content.context.notification_service\r\n","android.content.BroadcastReceiver.isInitialStickyBroadcast()":"android.content.broadcastreceiver.isinitialstickybroadcast（）\r\n","Returns whether the Outline is empty.":"返回大纲是否为空。\r\n","If set and this intent is being used to launch a new activity from an\n existing one, then the reply target of the existing activity will be\n transfered to the new activity. ":"如果设置和此意图用于从一个\r\n 现有一个，然后现有活动的答复目标是\r\n 转移到新活动。\r\n","PendingResult":"pendresult\r\n","Counter for tracking how many updates were performed by the sync operation, as defined\n            by the SyncAdapter.":"跟踪同步操作执行多少更新的计数器，如定义\r\n            由SyncAdapter。\r\n","Lets you map ":"让您映射 \r\n","android.hardware.SensorEventListener2.onFlushCompleted(android.hardware.Sensor)":"android.hardware.sensoreventlistener2.onflushCompleted（android.hardware.sensor）\r\n","AvoidXfermode xfermode will draw the src everywhere except on top of the\n opColor or, depending on the Mode, draw only on top of the opColor.":"deverxfermode Xfermode将在任何地方绘制SRC\r\n Opcolor或取决于模式，仅在Opcolor的顶部绘制。\r\n","android.graphics.ColorSpace.ILLUMINANT_C":"android.graphics.colorspace.illuminant_c\r\n","Set the rectangle's coordinates to the specified values.":"将矩形的坐标设置为指定的值。\r\n","android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException":"android.database.sqlite.sqliteBindorColumnIndIndExoutOfrangeException\r\n","If a particular process and user ID has not been granted\n            permission to access a specific URI, throw ":"如果尚未授予特定过程和用户​​ID\r\n            允许访问特定URI，投掷\r\n","android.content.pm.PackageManager.FEATURE_CAMERA_ANY":"android.content.pm.packagemanager.feature_camera_any\r\n","PackageManager#setPackagesSuspended(String[], boolean, PersistableBundle,\n            PersistableBundle, String)":"PackageManager＃setPackagessuspended（字符串[]，布尔值，persistableBundle，\r\n            持久性绑架，字符串）\r\n","Returns a file path of this font.":"返回此字体的文件路径。\r\n","Sent when a user switch is happening, causing the process's user to be\n            sent to the background.":"当用户开关发生时发送，导致该过程的用户为\r\n            发送到背景。\r\n","android.content.pm.PackageManager.getApplicationBanner(android.content.pm.ApplicationInfo)":"android.content.pm.packagemanager.getapplicationbanner（android.content.pm.applicationinfo）\r\n","Builder#withValues(ContentValues)":"构建器＃withvalues（contentvalues）\r\n",": The device supports live wallpapers.":"：该设备支持实时壁纸。\r\n","PackageManager#FEATURE_COMPANION_DEVICE_SETUP":"packagemanager＃feature_companion_device_setup\r\n","Perform the operation associated with this IntentSender, allowing the\n            caller to specify information about the Intent to use and be notified\n            when the send has completed.":"执行与此意图人相关的操作，允许\r\n            呼叫者指定有关使用意图的信息并被通知\r\n            发送时。\r\n","Return the layout direction.":"返回布局方向。\r\n","android.database.sqlite.SQLiteDatabase.validateSql(java.lang.String, android.os.CancellationSignal)":"android.database.sqlite.sqlitedatabase.validatesql（java.lang.string，android.os.cancellationsIgnal）\r\n","Name of the package to which this stats applies.":"该统计数据适用的包的名称。\r\n","android.graphics.RenderNode.setScaleY(float)":"android.graphics.rendernode.setscaley（float）\r\n","Decode a bitmap from the file descriptor.":"从文件描述符中解码位图。\r\n","android.content.Loader.deliverResult(java.lang.Object)":"android.content.loader.deliverresult（java.lang.object）\r\n","android.graphics.drawable.TransitionDrawable.setCrossFadeEnabled(boolean)":"android.graphics.drawable.transitiondrawable.setCrossFadeEnabled（boolean）\r\n","android.graphics.RenderNode.beginRecording(int, int)":"android.graphics.rendernode.beginrecording（int，int）\r\n","Scene mode is off.":"场景模式关闭。\r\n","android.graphics.Region.quickReject(android.graphics.Region)":"android.graphics.gregion.quickreject（android.graphics.region）\r\n","android.graphics.RectF.intersects(float, float, float, float)":"android.graphics.Rectf.Intersects（浮动，浮点，浮点，浮点）\r\n","Prints the contents of a Cursor's current row to a PrintSteam.":"将光标的当前行的内容打印到PrintSteam。\r\n","android.graphics.Canvas.rotate(float)":"机器人。图形。帆布。旋转(浮动)\r\n","A filter for Bluetooth(non-LE) devices":"蓝牙（非LE）设备的过滤器\r\n","Optional extra specifying a time in milliseconds since the Epoch.":"自时代以来，可选的额外指定时间以毫秒为单位。\r\n","Draw the picture, stretched to fit into the dst rectangle.":"绘制图片，伸展到DST矩形。\r\n","Informs the DRM plug-in (agent) that there is no more data to convert or that an error \n            has occurred.":"告知DRM插件（代理），没有更多数据要转换或错误\r\n            已经发生了。\r\n","Modify the current clip with the specified region.":"使用指定区域修改当前剪辑。\r\n","The name of the extra used to define the name of a shortcut.":"用于定义快捷方式名称的额外名称。\r\n","Returns the rotation value for this display list around the Y axis, in degrees.":"返回此显示列表围绕Y轴的旋转值，以度为单位。\r\n","Creates an empty ResourcesProvider with no resource data.":"在没有资源数据的情况下创建一个空的ResourceProvider。\r\n","android.hardware.Camera.ACTION_NEW_PICTURE":"android.hardware.camera.action_new_picture\r\n","android.content.Intent.CATEGORY_LE_DESK_DOCK":"android.content.intent.category_le_desk_dock\r\n","android.drm.DrmEvent.getMessage()":"android.drm.drmevent.getMessage（）\r\n","android.os.BatteryManager":"android.os.batterymanager\r\n","Returns the minimum number of bytes that can be used to store this bitmap's pixels.":"返回可用于存储此位图像素的最小字节数。\r\n","android.bluetooth.BluetoothGattServerCallback.onExecuteWrite(android.bluetooth.BluetoothDevice, int, boolean)":"android.bluetooth.bluetoothgattservercallback.onexecutewrite（android.bluetooth.bluetoothdevice，int，boolean）\r\n","android.database.Cursor.getColumnIndex(java.lang.String)":"android.database.cursor.getColumnIndex（java.lang.string）\r\n","android.content.SyncInfo.startTime":"android.content.syncinfo.starttime\r\n","android.graphics.RenderNode.isPivotExplicitlySet()":"机器人。图形。RenderNode。isPivotExplicitlySet（）\r\n","android.companion.CompanionDeviceManager.getAssociations()":"android.companion.companiondevicemanager.getAssociations（）\r\n","Bitmap#DENSITY_NONE":"位图＃dense_none\r\n","android.content.Context.sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)":"android.content.Context.SendStickyBroadcastAsuser（android.content.intent，android.os.userhandle）\r\n","s to store shared constant state and data\n between Drawables.":"s存储共享常量状态和数据\r\n 之间的Drawables。\r\n","android.graphics.RenderNode.setTranslationZ(float)":"android.graphics.rendernode.settranslationz（float）\r\n"," in their manifest as a strong assertion\n            by a developer that they will never use this permission to derive the\n            physical location of the device, regardless of\n            ":" 在他们的明显主张中\r\n            开发人员将永远不会使用此权限来得出\r\n            设备的物理位置，不管\r\n            \r\n","android.hardware.HardwareBuffer.USAGE_VIDEO_ENCODE":"android.hardware.hardwarebuffer.usage_video_encode\r\n","#STATE_DISCONNECTED":"#STATE_DISCONNEDEND\r\n","android.media.metrics.MediaMetricsManager":"android.media.metrics.mediametricsmanager\r\n","Get the text locale list. -or- Set the text locale list.":"获取文本语言环境列表。 - 或 - 设置文本语言环境列表。\r\n","android.content.pm.ActivityInfo.softInputMode":"android.content.pm.activityinfo.softinputmode\r\n","Indicates that a request was successful or that no error occurred.":"表示请求成功或没有发生错误。\r\n","Returns the value of a String parameter.":"返回字符串参数的值。\r\n","Result of text shaping of the single paragraph string.":"单段字符串的文本形状的结果。\r\n","android.bluetooth.le.ScanRecord.getAdvertiseFlags()":"android.bluetooth.le.scanrecord.getAdvertiseFlags（）\r\n","Set the matrix to convert RGB to YUV":"Set the matrix to convert RGB to YUV\r\n","Represents a query that reads the resulting rows into a ":"代表一个查询，将结果行读为一个\r\n","Extras that the app can set for any purpose.":"该应用程序可以为任何目的设置的附加功能。\r\n","Constant emission of light during preview, auto-focus and snapshot.":"预览，自动对焦和快照期间的光线恒定发射。\r\n","Specifies the radius for the corners of the gradient.":"指定梯度角的半径。\r\n","android.content.res.loader.ResourcesLoader.getProviders()":"android.content.res.res.loader.resourcesloader.getProviders（）\r\n","If the attributes are not valid.\n":"如果属性无效。\r\n\r\n","android.content.Intent.putExtra(java.lang.String, java.lang.String[])":"android.content.intent.putextra（java.lang.string，java.lang.string []）\r\n","android.content.Context.revokeUriPermission(android.net.Uri, int)":"android.content.context.revokeuripermission（android.net.uri，int）\r\n","Return whether the animation is currently running.":"返回动画当前正在运行。\r\n"," color space.":" color space.\r\n","Copy the contents of ":"复制内容\r\n","Installation scenario indicating a bulk operation with the desired result of a fully\n            optimized application.":"安装方案表示批量操作，并带有完全的结果\r\n            优化应用程序。\r\n","standard":"标准\r\n","android.media.AudioManager":"android.media.audiomanager\r\n","The facing of the camera is opposite to that of the screen.":"相机的面与屏幕的面相反。\r\n","android.graphics.Matrix.mapPoints(float[], float[])":"android.graphics.matrix.mappoints（float []，float []）\r\n","android.content.res.TypedArray.getResourceId(int, int)":"android.content.res.typedarray.getResourceid（int，int）\r\n",": The device supports the OpenGL ES\n            <a href=\"http://www.":"：该设备支持OpenGL ES\r\n            <a href =“ http：//www。\r\n"," for giving the user\n            feedback for UI events through the registered event listeners.":" 给用户\r\n            UI事件的反馈通过注册活动听众。\r\n","Check if a category exists in the intent.":"检查目的中是否存在类别。\r\n","android.content.RestrictionsManager.ACTION_REQUEST_LOCAL_APPROVAL":"android.content.strictionsmanager.action_request_local_approval\r\n","to be true.":"是真实的。\r\n","android.content.ClipboardManager.hasPrimaryClip()":"android.content.clipboardmanager.hasprimaryclip（）\r\n","indicating that, when the activity is the root\n of a task, that task's stack should never be cleared when it is\n relaunched from home. ":"表明，当活动是根部时\r\n 在一个任务中，该任务的堆栈绝不应清除\r\n 从家里重新启动。\r\n","Installs a callback to be invoked for the next preview frame in\n            addition to displaying it on the screen.":"安装一个回调要为下一个预览框架调用\r\n            除了在屏幕上显示它。\r\n","Returns the y coordinate of the glyph position at the given index.":"返回给定索引处的字形位置的Y坐标。\r\n","Returns the drawable wrapped by this InsetDrawable.":"返回该插图包裹的可绘图。\r\n","Return whether this load has been started.":"返回该负载是否已开始。\r\n","android.view.inputmethod.InputMethodManager":"android.view.inputmethod.inputmethodmanager\r\n","android.content.Intent.EXTRA_ASSIST_PACKAGE":"android.content.intent.extra_assist_package\r\n","android.graphics.PostProcessor.onPostProcess(android.graphics.Canvas)":"android.graphics.postprocessor.onpostprocess（android.graphics.canvas）\r\n","ApplicationInfo":"Applicationinfo\r\n","Utility that parses extended metadata embedded in DRM constraint information.":"解析扩展元数据的实用程序嵌入了DRM约束信息中。\r\n","android.graphics.Canvas.drawBitmap(android.graphics.Bitmap, android.graphics.Rect, android.graphics.Rect, android.graphics.Paint)":"android.graphics.CANVAS.DRAWBITMAP（android.graphics.bitmap，android.graphics.Rect，android.graphics.Rect，android.graphics.paint）\r\n","android.content.pm.PackageManager.getPackageInfo(java.lang.String, int)":"android.content.pm.packagemanager.getpackageinfo（java.lang.string，int）\r\n","android.graphics.drawable.GradientDrawable.getCornerRadii()":"机器人。图形。可画的。GradientDrawable。getCornerRadii()\r\n","A style resource identifier (in the package's resources) of the\n            default visual theme of the application.":"样式资源标识符（在软件包的资源中）\r\n            应用程序的默认视觉主题。\r\n","Characteristic value format type float (32-bit float)":"特征值格式类型浮点（32位浮点）\r\n","Adds all values from the passed in ContentValues.":"添加来自ContentValues中传递的所有值。\r\n","If this matrix can be inverted, return true and if inverse is not null, set inverse to be the\n            inverse of this matrix.":"如果此矩阵可以反转\r\n            该矩阵的倒数。\r\n","#setSpotShadowColor(int)":"#setspotshadowcolor（int）\r\n","android.database.sqlite.SQLiteDatabase.getPageSize()":"android.database.sqlite.sqlitedatabase.getPagesize（）\r\n","android.content.SyncResult.moreRecordsToGet":"android.content.syncresult.morerecordstoget\r\n","android.graphics.drawable.LayerDrawable.findIndexByLayerId(int)":"android.graphics.drawable.layerdrawable.findindexbylayerid（int）\r\n","android.database.Cursor.move(int)":"android.database.cursor.move（int）\r\n"," that this RenderEffect is installed on":" 该RendereFect已安装在\r\n","android.bluetooth.BluetoothGattDescriptor.getUuid()":"android.bluetooth.bluetoothgattdescriptor.getuuid（）\r\n"," if the context is a UI context which can access UI components such as\n            ":" 如果上下文是可以访问UI组件的UI上下文，例如\r\n            \r\n","Copies this color's components in the supplied array.":"在提供的阵列中复制此颜色的组件。\r\n","android.bluetooth.le.ScanCallback":"android.bluetooth.le.Scancallback\r\n","android.graphics.drawable.Icon.createWithContentUri(android.net.Uri)":"android.graphics.drawable.icon.createwithcontenturi（android.net.uri）\r\n","Add a line from the last point to the specified point (x,y).":"添加从最后一个点到指定点（x，y）的行。\r\n","android.content.res.TypedArray.getString(int)":"android.content.res.typedarray.getstring（int）\r\n","Called by the Restrictions Provider to deliver a response to an application.":"限制提供商呼吁提供对应用程序的响应。\r\n","Installation scenario indicating a bulk operation that prioritizes minimal system health\n            impact over application optimization.":"安装方案表明批量操作优先考虑最小的系统健康\r\n            对应用程序优化的影响。\r\n","android.content.Intent.createChooser(android.content.Intent, java.lang.CharSequence, android.content.IntentSender)":"android.content.intent.CreateChooser（android.content.intent，java.lang.CharSequence，android.content.intentsender）\r\n","Offset value for the body and header signature.":"抵消身体和标头签名的值。\r\n","Sets a name for this renderer.":"为此渲染器设置名称。\r\n","android.graphics.drawable.Drawable.createFromResourceStream(android.content.res.Resources, android.util.TypedValue, java.io.InputStream, java.lang.String)":"android.graphics.drawable.drawable.createfromresourcestream（android.content.res.res.resources，android.util.typedvalue，java.io.inputStream，java.lang.lang.string）\r\n","Set or clear the paint's colorfilter, returning the parameter.":"设置或清除油漆的ColorFilter，返回参数。\r\n","If this is non-null, the decoder will try to decode into this\n internal configuration.":"如果这是非无效的，则解码器将尝试解码\r\n 内部配置。\r\n","android.graphics.Matrix.setScale(float, float)":"android.graphics.matrix.setscale（float，float）\r\n","android.content.pm.PackageManager.FEATURE_VR_MODE_HIGH_PERFORMANCE":"android.content.pm.packagemanager.feature_vr_mode_high_performance\r\n","android.content.Intent.hasCategory(java.lang.String)":"android.content.intent.hascategory（java.lang.string）\r\n","android.content.pm.PackageManager.getInstalledModules(int)":"android.content.pm.packagemanager.getinstalledmodules（int）\r\n","android.graphics.Region.set(android.graphics.Rect)":"android.graphics.gregion.set（android.graphics.Rect）\r\n","android.database.CrossProcessCursor.fillWindow(int, android.database.CursorWindow)":"android.database.crossprocesscursor.fillwindow（int，android.database.cursorwindow）\r\n","Default (unspecified) setting of GWP-ASan.":"GWP-ASAN的默认设置（未指定）设置。\r\n","android.content.Intent.CATEGORY_CAR_MODE":"android.content.intent.category_car_mode\r\n","android.bluetooth.BluetoothGattCharacteristic.FORMAT_SINT32":"android.bluetooth.bluetoothgattcharacteristic.format_sint32\r\n","Wrapper class holding an Intent and implementing comparisons on it for\n the purpose of filtering.":"包装班级持有意图并在其上实施比较\r\n 过滤的目的。\r\n","Returns a bitmap from the source bitmap.":"从源位图返回位图。\r\n","android.content.ContentResolver.SYNC_EXTRAS_IGNORE_BACKOFF":"android.content.contentresolver.sync_extras_ignore_backoff\r\n","Returns the font feature settings. -or- Set font feature settings.":"返回字体功能设置。 - 或设置字体功能设置。\r\n","When false, indicates that all components within this application are\n            considered disabled, regardless of their individually set enabled status.":"当false时，指示本应用程序中的所有组件均为\r\n            被认为是禁用的，无论其单独设置的启用状态如何。\r\n","A Drawable that clips another Drawable based on this Drawable's current\n            level value.":"可绘制的可根据此绘制的电流剪辑另一个可绘制的剪辑\r\n            级别值。\r\n","android.graphics.Paint.getShadowLayerColor()":"android.graphics.paint.getShadowlayerColor（）\r\n","android.R.attr#permissionGroupFlags":"Android.r.Attr＃encmissiongroupflags\r\n","Class for retrieving a list of launchable activities for the current user and any associated\n            managed profiles that are visible to the current user, which can be retrieved with\n            ":"用于检索当前用户和任何关联的可发射活动列表的课程\r\n            当前用户可见的托管配置文件，可以通过\r\n            \r\n","android.bluetooth.BluetoothGattServer":"android.bluetooth.bluetoothgattserver\r\n","Size of the external cache used by the application (i.":"应用程序使用的外部缓存的大小（i。\r\n","android.content.IntentFilter.SYSTEM_HIGH_PRIORITY":"android.content.intentfilter.system_high_priority\r\n","Broadcast sent to the primary user when an associated managed profile is added (the profile\n            was created and is ready to be used).":"添加了关联的托管配置文件时发送给主要用户的广播（配置文件\r\n            被创建并准备使用）。\r\n","android.content.ContentProviderClient.openAssetFile(android.net.Uri, java.lang.String)":"android.content.contentproviderclient.openassetfile（android.net.uri，java.lang.string）\r\n","android.content.pm.LauncherApps.hasShortcutHostPermission()":"android.content.pm.launcherapps.hasshortcuthostpermission（）\r\n","#MATCH_ADJUSTMENT_MASK":"#match_adjustment_mask\r\n","android.content.RestrictionsManager.RESPONSE_KEY_ERROR_CODE":"android.content.ErterctionsManager.Response_key_error_code\r\n","Retrieve the banner associated with an application.":"检索与应用程序相关的横幅。\r\n","android.net.ConnectivityManager":"android.net.connectivityManager\r\n","android.content.ContentResolver.loadThumbnail(android.net.Uri, android.util.Size, android.os.CancellationSignal)":"android.content.contentresolver.loadthumbnail（android.net.uri，android.util.util.size，android.os.os.cancellationsIgnal）\r\n","android.graphics.LightingColorFilter":"android.graphics.lightingcolorfilter\r\n","android.database.sqlite.SQLiteQueryBuilder.delete(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String[])":"android.database.sqlite.sqlitequerybuilder.delete（android.database.sqlite.sqlite.sqlitedatabase，java.lang.string，java.lang.lang.string []）\r\n","android.content.ClipData.addItem(android.content.ContentResolver, android.content.Item)":"android.content.clipdata.additem（android.content.contentresolver，android.content.item）\r\n","android.content.Intent.getPackage()":"android.content.intent.getPackage（）\r\n","android.graphics.Outline":"android.graphics.outline\r\n","android.graphics.ImageFormat.getBitsPerPixel(int)":"android.graphics.imageformat.getbitsperpixel（int）\r\n","android.content.pm.ActivityInfo.maxRecents":"android.content.pm.activityinfo.maxrencents\r\n","Create an Icon pointing to an image file specified by URI.":"创建指向URI指定的图像文件的图标。\r\n","A color filter that can be used to simulate simple lighting effects.":"可用于模拟简单照明效果的颜色过滤器。\r\n","android.content.RestrictionEntry.setIntValue(int)":"android.content.gresterriceentry.setintvalue（int）\r\n","The SyncAdapter had a problem with the data it received from the server or the storage\n            later.":"SyncAdapter与从服务器或存储中收到的数据有问题\r\n            之后。\r\n","android.content.SyncAdapterType.isAlwaysSyncable()":"android.content.syncadaptertype.isalwayssyncable（）\r\n","Return the path-based permissions required for read and/or write access to\n            this content provider.":"返回阅读和/或写入访问所需的基于路径的权限\r\n            这个内容提供商。\r\n","If inPreferQualityOverSpeed is set to true, the decoder will try to\n decode the reconstructed image to a higher quality even at the\n expense of the decoding speed.":"如果设置为true InpreferQualityOverspeed，则解码器将尝试\r\n 即使在\r\n 解码速度的费用。\r\n","android.database.AbstractCursor.isFieldUpdated(int)":"机器人。数据库。AbstractCursor.isFieldUpdated(int)\r\n","Subclasses must implement this to take care of requests to ":"子类必须实施此操作以照顾请求\r\n","defines the default method to be invoked when database corruption is detected.":"定义检测到数据库损坏时要调用的默认方法。\r\n","android.bluetooth.BluetoothHidDevice.PROTOCOL_BOOT_MODE":"android.bluetooth.bluetoothhiddevice.protocol_boot_mode\r\n","android.content.pm.PermissionInfo.PROTECTION_INTERNAL":"android.content.pm.permissioninfo.protection_internal\r\n"," to launch the calculator application.":" 启动计算器应用程序。\r\n","android.content.Intent.setClassName(java.lang.String, java.lang.String)":"android.content.intent.setClassName（java.lang.string，java.lang.string）\r\n","android.os.health.SystemHealthManager":"android.os.health.SystemHealthManager\r\n","Update this Rect to enclose itself and the [x,y] coordinate.":"更新此Rect以将自身和[x,y]坐标括起来。\r\n","Returns the shortcut icon with badging appropriate for the profile.":"返回适合配置文件的徽章的快捷方式图标。\r\n","android.content.pm.PackageManager.FLAG_PERMISSION_WHITELIST_UPGRADE":"android.content.pm.packagemanager.flag_permission_whitelist_upgrade\r\n","An exception that indicates that an integrity constraint was violated.":"一个例外，表明违反了完整性约束。\r\n","Retrieve all of the known permission groups in the system.":"检索系统中的所有已知许可组。\r\n","Set to true to have the drawable filter its bitmaps with bilinear\n            sampling when they are scaled or rotated.":"设置为true以使可绘制的过滤器使用双线性\r\n            进行缩放或旋转时进行采样。\r\n","android.content.Intent.ACTION_PACKAGE_VERIFIED":"android.content.intent.action_package_verified\r\n","android.content.Intent.ACTION_MANAGED_PROFILE_REMOVED":"android.content.intent.action_managed_profile_remaved\r\n","android.content.res.Resources.getStringArray(int)":"Android.content.Res.Res.Resources.getStringArray（int）\r\n","Binds to a service in the given ":"与给定的服务结合\r\n","'s user.":"的用户。\r\n","android.graphics.Color.isWideGamut(long)":"android.graphics.color.iswidegamut（long）\r\n","Return the handle to a system-level service by class.":"按课程将其返回到系统级服务。\r\n","Capture a scene using high dynamic range imaging techniques.":"使用高动态范围成像技术捕获场景。\r\n","android.database.sqlite.SQLiteDatabase.query(boolean, java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.os.CancellationSignal)":"android.database.sqlite.sqlitedatabase.query（boolean，java.lang.string，java.lang.string []，java.lang.string，java.lang.lang.string []，java.lang.lang.string，java.lang。字符串，java.lang.string，java.lang.string，android.os.cancellationsIgnal）\r\n","android.content.pm.PermissionGroupInfo.nonLocalizedDescription":"android.content.pm.permissiongroupinfo.no​​nlocalizedDescription\r\n","android.graphics.drawable.Icon.createWithBitmap(android.graphics.Bitmap)":"android.graphics.drawable.icon.createwithbitmap（android.graphics.bitmap）\r\n","android.graphics.Paint.setTextSkewX(float)":"android.graphics.paint.settextskewx（float）\r\n","A font weight value for the normal weight":"正常重量的字体重量值\r\n","Optional CharSequence extra to provide a search query.":"可选的CharSequence额外提供搜索查询。\r\n","Stringify the array of FontVariationAxis.":"串起fontvariationaxis的数组。\r\n","android.content.res.TypedArray.getInt(int, int)":"android.content.res.typedarray.getint（int，int）\r\n","android.content.pm.LauncherApps.getShortcutConfigActivityIntent(android.content.pm.LauncherActivityInfo)":"android.content.pm.launcherapps.getShortCutConfigactivityIntent（android.content.pm.launcheractivityinfo）\r\n","Rewinds the path: clears any lines and curves from the path but\n            keeps the internal data structure for faster reuse.":"倒带路径：清除路径的任何线条和曲线\r\n            保持内部数据结构以更快地重复使用。\r\n","#RADIAL_GRADIENT":"#radial_gradient\r\n","android.graphics.RenderNode.getAlpha()":"android.graphics.rendernode.getalpha（）\r\n","android.graphics.Outline.setOval(android.graphics.Rect)":"android.graphics.outline.setoval（android.graphics.Rect）\r\n","Return the paint's style, used for controlling how primitives'\n            geometries are interpreted (except for drawBitmap, which always assumes\n            FILL_STYLE).":"返回油漆的样式，用于控制原语的方式\r\n            解释几何形状（除了drawbitMap，始终假设\r\n            fill_style）。\r\n","android.graphics.BlurMaskFilter":"Android.graphics.BlurMaskFilter\r\n","android.graphics.Bitmap.getAllocationByteCount()":"android.graphics.bitmap.getAllocationbytecount（）\r\n","android.graphics.drawable.GradientDrawable.getUseLevel()":"android.graphics.drawable.gradientdrawable.getuselevel（）\r\n","android.content.pm.ChangedPackages":"android.content.pm.changedpackages\r\n","android.content.Intent.EXTRA_CC":"android.content.intent.extra_cc\r\n",":\n            The device has all of the inputs necessary to be considered a compatible game controller, or\n            includes a compatible game controller in the box.":"：\r\n            该设备具有被视为兼容游戏控制器的所有输入，或\r\n            在框中包括一个兼容的游戏控制器。\r\n","android.content.ContentProviderOperation.newAssertQuery(android.net.Uri)":"android.content.contentProvideroperation.newassertquery（android.net.uri）\r\n","android.graphics.Rect.contains(int, int, int, int)":"机器人。图形。长包含(int,int,int,int)\r\n","Retrieve the text boundary box and store to bounds.":"检索文本边界框并存储到边界。\r\n","Create an empty AnimatedImageDrawable.":"创建一个空的动画图像。\r\n","android.content.pm.PackageManager.FEATURE_FAKETOUCH_MULTITOUCH_JAZZHAND":"android.content.pm.packagemanager.feature_faketouch_multitouch_jazzhand\r\n","android.content.IntentSender.getCreatorUid()":"android.content.intents.getCreatoruid（）\r\n","android.database.sqlite.SQLiteProgram":"android.database.sqlite.sqlite Program\r\n","android.hardware.Sensor.STRING_TYPE_GEOMAGNETIC_ROTATION_VECTOR":"android.hardware.sensor.string_type_geomagnetic_rotation_vector\r\n","ResultReceiver":"重新估计\r\n","Starts the drawable's animation.":"启动可绘制的动画。\r\n","android.content.Context.WIFI_RTT_RANGING_SERVICE":"android.content.context.wifi_rtt_ranging_service\r\n","android.database.sqlite.SQLiteDatabaseCorruptException":"android.database.sqlite.sqlitedatabasecorrupteptection\r\n","Broadcast Action: This is broadcast once, after the user has finished\n            booting.":"广播动作：用户完成后，这是一次广播\r\n            引导。\r\n","android.graphics.drawable.PictureDrawable.PictureDrawable(android.graphics.Picture)":"android.graphics.drawable.picturedrawable.picturedrawable（android.graphics.picture）\r\n","android.graphics.RectF.RectF(android.graphics.RectF)":"android.graphics.Rectf.Rectf（android.graphics.Rectf）\r\n","Called when the database needs to be downgraded.":"当需要降级数据库时调用。\r\n","Intent#ACTION_MAIN":"意图＃action_main\r\n","Sets the translation value for the display list on the Z axis.":"在Z轴上设置显示列表的翻译值。\r\n","android.graphics.Color.pack(float, float, float, float)":"android.graphics.color.pack（浮子，浮点，浮点，浮点）\r\n","Feature to download a document to the local file system.":"功能将文档下载到本地文件系统。\r\n"," if text classification has been\n            completed.":" 如果文本分类已经\r\n            完全的。\r\n","Initializes the CursorJoiner and resets the cursors to the first row.":"初始化Cursorjoiner并将光标重置为第一行。\r\n","Creates a content observer.":"创建内容观察者。\r\n","Root SHA256 hash of a 1M Merkle tree computed over protected content.":"根据受保护的内容计算的1M默克尔树的root SHA256哈希。\r\n","Converts the last path segment to a long.":"将最后一个路径段转换为长。\r\n","An integer representing the character at the end of the line is replaced with hyphen\n            character (U+002D).":"代表字符末端角色的整数被连字符代替\r\n            字符（U+002D）。\r\n","Creates a <code>DrmRights</code> object with the given parameters.":"使用给定参数创建<code> drmrights </code>对象。\r\n","If the calling process and user ID has not been granted\n            permission to access a specific URI, throw ":"如果尚未授予通话过程和用户​​ID\r\n            允许访问特定URI，投掷\r\n","#ACTION_PICK_ACTIVITY":"#action_pick_activity\r\n","value indicating that no size has been set.":"值表示未设置尺寸。\r\n","android.hardware.Camera.cancelAutoFocus()":"android.hardware.camera.cancelautofocus（）\r\n","android.gesture.GestureStore.load(java.io.InputStream)":"android.gesture.gesturestore.load（java.io.inputstream）\r\n"," that can be used to render a new frame.":" 可以用来渲染新框架。\r\n","android.graphics.drawable.RotateDrawable.isPivotXRelative()":"android.graphics.drawable.RotatedRawable.ispivotxrelative（）\r\n","#toChars()":"#tochars（）\r\n","android.graphics.drawable.Icon.TYPE_URI_ADAPTIVE_BITMAP":"android.graphics.drawable.icon.type_uri_adaptive_bitmap\r\n","android.graphics.Camera.save()":"android.graphics.camera.save（）\r\n","android.content.pm.LauncherActivityInfo.getBadgedIcon(int)":"android.content.pm.launcheractivityinfo.getbadgedicon（int）\r\n","android.bluetooth.le.AdvertisingSetCallback":"android.bluetooth.le.AdvertisingsetCallback\r\n","android.graphics.drawable.ShapeDrawable.getShaderFactory()":"android.graphics.drawable.shapedrawable.getShaderFactory（）\r\n","#startPreview()":"#startpreview（）\r\n","Interface definition for a callback that receives information about DRM framework errors.":"接收到回调的接口定义，该回调接收有关DRM框架错误的信息。\r\n","If this extra is set to true, the sync request will be scheduled at the front of the\n            sync request queue, but it is still subject to JobScheduler quota and throttling due to\n            App Standby buckets.":"如果此额外设置为true，则同步请求将安排在\r\n            同步请求队列，但仍受到JobsCheduler配额和限制的约束\r\n            应用待机存储桶。\r\n","android.graphics.Bitmap.setHasMipMap(boolean)":"android.graphics.bitmap.sethasmipmap（布尔）\r\n","android.view.accessibility.CaptioningManager":"android.view.Accessibility.captioningmanager\r\n","Determine whether a particular process and user ID has been granted\n permission to access a specific URI.":"确定是否授予特定过程和用户​​ID\r\n 访问特定URI的许可。\r\n","android.content.Context.RESTRICTIONS_SERVICE":"android.content.Context.Ertertions_service\r\n","This lets you create a drawable based on an XML vector graphic.":"这使您可以基于XML矢量图形创建可绘制的。\r\n","Builder#setIntents(Intent[])":"构建器＃setIntents（intent []）\r\n"," method returns\n            false.":" 方法返回\r\n            错误的。\r\n","android.graphics.drawable.Icon.createWithFilePath(java.lang.String)":"android.graphics.drawable.icon.createwithfilepath（java.lang.string）\r\n","android.hardware.BatteryState":"android.hardware.batterystate\r\n","android.graphics.drawable.Drawable.getMinimumWidth()":"android.graphics.drawable.drawable.getminimumwidth（）\r\n","Helper for getFlags(), returning true if STRIKE_THRU_TEXT_FLAG bit is set -or- Helper for setFlags(), setting or clearing the STRIKE_THRU_TEXT_FLAG bit":"getflags（）的助手，如果trike_thru_text_flag位设置为-or- helper for setFlags（），设置或清除the strike_thru_text_flag lit，则返回true。\r\n","Delete dynamic shortcuts by ID.":"通过ID删除动态快捷方式。\r\n","Draw the specified Rect using the specified Paint.":"使用指定的油漆绘制指定的矩形。\r\n","Returns absolute paths to application-specific directories on all\n            shared/external storage devices where the application's OBB files (if\n            there are any) can be found.":"将绝对路径返回到所有方面的专用目录\r\n            共享/外部存储设备在该应用程序的OBB文件中（如果\r\n            可以找到任何）。\r\n","android.graphics.ColorSpace.get(int)":"android.graphics.colorspace.get（int）\r\n","android.graphics.Color.luminance(int)":"android.graphics.color.luminance（int）\r\n"," to retrieve a\n            com.":" 检索一个\r\n            com。\r\n","signature":"签名\r\n","android.graphics.drawable.TransitionDrawable":"android.graphics.drawable.transitiondrawable\r\n","Sets whether the bitmap should treat its data as pre-multiplied.":"设置位图是否应将其数据视为预先进行的。\r\n","android.content.res.Resources.getQuantityText(int, int)":"android.content.res.resources.getQuantityText（int，int）\r\n","Create a copy of a ClipDescription.":"创建一个剪贴画的副本。\r\n","android.content.pm.PackageManager.queryIntentActivities(android.content.Intent, int)":"android.content.pm.PackageManager.queryIntentActivities(android.content.Intent,int)\r\n","Specifies the known formats a bitmap can be compressed into\n":"指定已知格式可以将位图压缩到\r\n\r\n","android.content.res.Resources.openRawResourceFd(int)":"android.content.Res.Res.resources.openrawresourcefd（int）\r\n","Get connected devices for the specified profile.":"获取指定配置文件的连接设备。\r\n","Return the appropriate opacity value for two source opacities.":"返回两个源缺陷的适当不透明度值。\r\n"," for working with global\n            device policy management.":" 用于与全球合作\r\n            设备策略管理。\r\n","Returns the absolute path to the directory on the filesystem where\n files created with ":"返回文件系统上的目录的绝对路径\r\n 创建的文件\r\n","BluetoothHealth#SINK_ROLE":"BluetoothHealth＃Sink_role\r\n","Sets a list of string values that can be selected by the user, similar to\n            ":"设置用户可以选择的字符串值列表，类似于\r\n            \r\n","android.graphics.Canvas.Canvas(android.graphics.Bitmap)":"android.graphics.canvas.canvas（android.graphics.bitmap）\r\n","android.graphics.drawable.AnimatedImageDrawable.getRepeatCount()":"android.graphics.drawable.animatedimatedimatedrawable.getRawable.getRawcount（）\r\n","Return the set of all categories in the intent.":"返回意图中所有类别的集合。\r\n","Get the paint's patheffect object.":"获取涂料的理性对象。\r\n","Permission check result: this is returned by ":"权限检查结果：这是由\r\n","android.content.pm.ShortcutManager.removeDynamicShortcuts(java.util.List)":"android.content.pm.shortcutmanager.remervedynamicshortcuts（java.util.list）\r\n","android.content.Intent.EXTRA_ALLOW_REPLACE":"android.content.intent.extra_allow_replace\r\n","If set then if the number of rows affected by this operation do not match\n this count ":"如果设置，则如果该操作影响的行数不匹配\r\n 这个数量\r\n","android.content.Context.enforcePermission(java.lang.String, int, int, java.lang.String)":"android.content.context.enforcepermission（java.lang.string，int，int，java.lang.string）\r\n","if x, y, width, height exceed the\n         bounds of the bitmap, or if abs(stride) ":"如果x，y，宽度，高度超过\r\n         位图的界限，或者如果ABS（大步）\r\n","android.graphics.Paint.setShadowLayer(float, float, float, int)":"android.graphics.paint.setshadowlayer（浮点，浮点，浮点，int）\r\n","Add a new preferred activity mapping to the system.":"将新的首选活动映射添加到系统中。\r\n","Public APIs for the Bluetooth Profiles.":"蓝牙配置文件的公共API。\r\n","Unregisters a previous callback.":"解开以前的回调。\r\n","#BIND_WAIVE_PRIORITY":"#bind_waive_priority\r\n","Bit mask of kinds of configuration changes that this activity\n can handle itself (without being restarted by the system).":"位类型配置的掩码会改变此活动\r\n 可以处理自身（不受系统重新启动）。\r\n","Reconnects to the camera service after another process used it.":"在另一个过程使用后，重新连接了相机服务。\r\n","Return the paint's extra word-spacing for text. -or- Set the paint's extra word-spacing for text.":"返回涂料的额外单词间隔文本。 - 或 - 为文本设置油漆的额外单词间隔。\r\n","Return a new Rect set to the bounds of the region.":"返回新的RECT设置到该区域的边界。\r\n","This error can occur if the application creates a SQLiteStatement object and allows multiple\n            threads in the application use it at the same time.":"如果应用程序创建SQLitestatement对象并允许多个，则可能发生此错误\r\n            应用程序中的线程同时使用它。\r\n"," with executor to control\n            ServiceConnection callbacks.":" 与执行人控制\r\n            ServiceConnection回调。\r\n","android.content.ContentProvider.getPathPermissions()":"android.content.contentprovider.getPathpermissions（）\r\n","FileInputStream":"FileInputStream\r\n","This constructor exists so subclasses can avoid calling the default\n            constructor and setting up a StateListDrawable-specific constant state.":"该构造函数的存在因此可以避免调用默认值\r\n            构造函数并设置一个特定于特定的常数状态。\r\n","android.content.ContentProvider.getCallingPackageUnchecked()":"android.content.contentprovider.getCallingPackageChinked（）\r\n","Activity Action: Creates a reminder.":"活动动作：提醒。\r\n","verificationCodeAtTimeout":"验证codeattimeout\r\n","android.content.Intent.EXTRA_TEXT":"android.content.intent.extra_text\r\n","\n            operation.":"\r\n            手术。\r\n","android.content.Context.peekWallpaper()":"android.content.context.peekwallpaper（）\r\n","android.graphics.drawable.LayerDrawable.setOpacity(int)":"android.graphics.drawable.layerdrawable.setopacity（int）\r\n","android.graphics.Region.contains(int, int)":"android.graphics.gregion.contains（int，int）\r\n","android.content.RestrictionEntry.TYPE_CHOICE":"android.content.grestrictionertry.type_choice\r\n","Set if the activity should be considered as an alternative action to\n            the data the user is currently viewing.":"设置是否应将活动视为替代行动\r\n            用户当前正在查看的数据。\r\n","Constant representing mouse subclass.":"代表鼠标子类的常数。\r\n","Android.Content.Context.CONTEXT_IGNORE_SECURITY":"android.content.context.context_ignore_security\r\n","Returns the physical layer used during a scan.":"返回扫描过程中使用的物理层。\r\n","Finds the name of the first table, which is editable.":"找到第一张表的名称，这是可编辑的。\r\n","Add a new Intent data type to match against.":"添加一个新的意图数据类型以匹配。\r\n"," for accessing the hardware properties service.":" 用于访问硬件属性服务。\r\n","android.bluetooth.BluetoothGattDescriptor.getCharacteristic()":"android.bluetooth.bluetoothgattdescriptor.getCharacteristic（）\r\n","android.bluetooth.BluetoothGattCharacteristic.setWriteType(int)":"android.bluetooth.bluetoothgattcharacteristic.setwriteType（int）\r\n","android.bluetooth.BluetoothHidDevice.getDevicesMatchingConnectionStates(int[])":"android.bluetooth.bluetoothhiddevice.getDevicesMatchingConnectionStates（int []）\r\n","android.content.pm.ShortcutManager.updateShortcuts(java.util.List)":"android.content.pm.shortcutmanager.updateshortcuts（java.util.list）\r\n","android.content.pm.PackageManager.FEATURE_SENSOR_PROXIMITY":"android.content.pm.packagemanager.feature_sensor_proximity\r\n","The tag of this attribution.":"此归因的标签。\r\n","AT command type TEST used with\n            ":"在命令类型测试中使用\r\n            \r\n","Sets the Outline to a\n            ":"将大纲设置为\r\n            \r\n","Remove the specified sync.":"删除指定的同步。\r\n","Transform the points in this path by matrix.":"通过矩阵转换此路径中的点。\r\n","Converted data.":"转换数据。\r\n","Called on the main thread to abort a load in progress.":"打电话给主线程以中止正在进行的负载。\r\n","Callback":"打回来\r\n","android.content.Intent.ACTION_TRANSLATE":"android.content.intent.action_translate\r\n","Depth augmented compressed JPEG format.":"深度增强压缩JPEG格式。\r\n",", corresponding to <code>hardRestricted</code>\n            value of ":"，对应于<code>硬限制</code>\r\n            的价值\r\n","android.bluetooth.BluetoothProfile.getConnectionState(android.bluetooth.BluetoothDevice)":"android.bluetooth.bluetoothprofile.getConnectionstate（android.bluetooth.bluetoothdevice）\r\n","android.content.ContentResolver.ANY_CURSOR_ITEM_TYPE":"android.content.contentresolver.any_cursor_item_type\r\n","Another package name relevant to a status.":"另一个与状态相关的软件包名称。\r\n",": The device can communicate using Near-Field\n            Communications (NFC).":"：该设备可以使用近场进行通信\r\n            通信（NFC）。\r\n"," for accessing the performance hinting service.":" 用于访问性能提示服务。\r\n","Indicates whether a local service has been added successfully.":"指示是否已成功添加了本地服务。\r\n","android.graphics.ImageFormat.YUV_420_888":"android.graphics.imageformat.yuv_420_888\r\n","Specifies the max number of rows to include in a Cursor.":"指定在光标中包含的最大行数。\r\n","This exception is thrown by the resource APIs when a requested resource\n can not be found.":"当请求的资源时，资源API抛出了此例外\r\n 找不到。\r\n","Gets the value of the field at the specified row and column index as a\n            <code>float</code>.":"在指定的行和列索引处获取字段的值\r\n            <code> float </code>。\r\n","android.graphics.Matrix.IDENTITY_MATRIX":"android.graphics.matrix.Identity_matrix\r\n","BluetoothHealth":"蓝牙健康\r\n","android.content.pm.ActivityInfo.CONFIG_FONT_WEIGHT_ADJUSTMENT":"android.content.pm.activityinfo.config_font_weight_adjustment\r\n","android.content.Context.VIBRATOR_SERVICE":"android.content.context.vibrator_service\r\n","android.drm.DrmEvent.DrmEvent(int, int, java.lang.String)":"android.drm.drmevent.drmevent（int，int，java.lang.string）\r\n","android.database.AbstractWindowedCursor.mWindow":"android.database.abstractwindowedcursor.mwindow\r\n","Create an identity matrix":"创建一个身份矩阵\r\n","Application specified preferred configuration\n            ":"应用程序指定的首选配置\r\n            \r\n","android.net.VpnManager":"android.net.vpnmanager\r\n","android.content.pm.FeatureInfo.GL_ES_VERSION_UNDEFINED":"android.content.pm.featureinfo.gl_es_version_undefined\r\n","Return list of all known install sessions, regardless of the installer.":"无论安装程序如何，所有已知安装会话的返回列表。\r\n","android.content.pm.PackageManager.isPackageSuspended(java.lang.String)":"android.content.pm.packagemanager.ispackagesuspended（java.lang.string）\r\n","Extra sent in the intent to the BroadcastReceiver that handles\n            ":"额外发送的目的是将其处理的广播员\r\n            \r\n","android.content.ContentResolver.cancelSync(android.accounts.Account, java.lang.String)":"android.content.contentresolver.cancelsync（android.accounts.accounts.account，java.lang.string）\r\n","android.database.DatabaseUtils.cursorLongToContentValuesIfPresent(android.database.Cursor, android.content.ContentValues, java.lang.String)":"android.database.databaseutils.cursorlongtocontentvaluesifpresent（android.database.cursor，android.content.content.content.contentvalues，java.lang.lang.string））\r\n","#startActivities(Intent[], Bundle)":"#startactivities（intent []，捆绑包）\r\n","The filter didn't match due to different MIME types.":"由于不同的MIME类型，该过滤器不匹配。\r\n","android.content.pm.PackageManager.canonicalToCurrentPackageNames(java.lang.String[])":"android.content.pm.packagemanager.caronicaltocurrentpackagagenames（java.lang.string []）\r\n","android.content.Intent.putExtra(java.lang.String, android.os.Bundle)":"android.content.intent.putextra（java.lang.string，android.os.bundle）\r\n","Return a data path in the filter.":"返回过滤器中的数据路径。\r\n","android.content.Intent.EXTRA_INSTALLER_PACKAGE_NAME":"android.content.intent.extra_installer_package_name\r\n","android.content.ContentResolver.SYNC_EXTRAS_INITIALIZE":"android.content.contentresolver.sync_extras_initialize\r\n","android.content.SyncAdapterType":"android.content.SyncadapterType\r\n","Returns a characteristic with a given UUID out of the list of\n            characteristics offered by this service.":"从列表中返回具有给定的uuid的特征\r\n            此服务提供的特征。\r\n","Acquires rights information.":"获取权利信息。\r\n","personalInfo":"个人信息\r\n","android.content.pm.ApplicationInfo.className":"android.content.pm.applicationinfo.classname\r\n","android.graphics.drawable.Icon.createWithAdaptiveBitmap(android.graphics.Bitmap)":"android.graphics.drawable.icon.createwithadaptivebitmap（android.graphics.bitmap）\r\n","android.content.pm.PackageManager.EXTRA_VERIFICATION_RESULT":"android.content.pm.packagemanager.extra_verification_result\r\n","Sets TrueType or OpenType font variation settings.":"设置truetype或Opentype字体变化设置。\r\n","#loadDrawable(Context)":"#loadDrawable（上下文）\r\n","android.graphics.ImageFormat.NV16":"android.graphics.imageformat.nv16\r\n","android.content.AsyncQueryHandler.onInsertComplete(int, java.lang.Object, android.net.Uri)":"android.content.asyncqueryhandler.oninsertcomplete（int，java.lang.object，android.net.uri）\r\n","android.graphics.Xfermode":"android.graphics.xfermode\r\n","android.database.ContentObserver.onChange(boolean, java.util.Collection, int)":"android.database.contentobserver.onchange（boolean，java.util.collection，int）\r\n","Bundle#putBundle":"束＃putbundle\r\n","Sets the ripple effect color.":"设置连锁效果颜色。\r\n","Sets the base elevation of this RenderNode in pixels":"以像素为单位设置此RenderNode的基本高程\r\n","Transform the points in this path by matrix, and write the answer\n            into dst.":"通过矩阵转换此路径中的要点，然后写答案\r\n            进入DST。\r\n","Intent extra: The number of milliseconds.":"意图额外：毫秒的数量。\r\n","android.graphics.fonts.SystemFonts.getAvailableFonts()":"android.graphics.fonts.systemfonts.getavailablefonts（）\r\n","android.graphics.ColorSpace.ILLUMINANT_A":"android.graphics.colorspace.illuminant_a\r\n","android.database.sqlite.SQLiteProgram.bindString(int, java.lang.String)":"android.database.sqlite.sqliteprogram.bindstring（int，java.lang.string）\r\n","android.graphics.Path":"android.graphics.path\r\n","android.content.pm.PackageManager.INSTALL_SCENARIO_BULK":"android.content.pm.packagemanager.install_scenario_bulk\r\n","android.graphics.Paint.START_HYPHEN_EDIT_NO_EDIT":"android.graphics.paint.start_hyphen_edit_no_edit\r\n","android.graphics.BitmapRegionDecoder.newInstance(java.lang.String, boolean)":"android.graphics.bitmapregiondecoder.newinstance（java.lang.string，boolean）\r\n","android.database.CursorWindow.getNumRows()":"android.database.cursorwindow.getnumrows（）\r\n","android.content.pm.PackageManager.FEATURE_SENSOR_ACCELEROMETER":"android.content.pm.packagemanager.feature_sensor_accelerometer\r\n","Creates Bitmap objects from various sources, including files, streams,\n            and byte-arrays.":"从各种来源创建位图对象，包括文件，流，\r\n            和字节阵列。\r\n","Called when the camera auto focus completes.":"当相机自动焦点完成时打电话。\r\n","Interface used to allow the creator of a dialog to run some code when the\n dialog is dismissed.":"用于允许对话框创建者的接口可以在\r\n 对话被驳回。\r\n","#getSystemAvailableFeatures":"#getSystemavailableFeatures\r\n","Called to get the drawable to populate the Outline that defines its drawing area.":"打电话给可绘制的可绘制以填充定义其绘图区域的轮廓。\r\n","android.bluetooth.le.AdvertiseData":"android.bluetooth.le.aptervertisedata\r\n","This method exists for implementation purpose only and should not be\n            called directly.":"此方法仅用于实施目的，不应是\r\n            直接称为。\r\n","Helper for getFlags(), returning true if UNDERLINE_TEXT_FLAG bit is set -or- Helper for setFlags(), setting or clearing the UNDERLINE_TEXT_FLAG bit":"getflags（）的助手，如果usevelline_text_flag位设置为-or- helper for setFlags（），设置或清除linese_text_flag位，则返回true。\r\n","android.content.Intent.putExtra(java.lang.String, short)":"android.content.intent.putextra（java.lang.string，简称）\r\n","Optional -- if non-null, the ":"可选 - 如果非效果，\r\n","android.graphics.Canvas.getWidth()":"机器人。图形。帆布。盖特维斯()\r\n","Return the mean radius of a circle after it has been mapped by this matrix.":"通过该矩阵映射圆后的平均半径。\r\n","DrmConvertedStatus":"drmconvertedstatus\r\n","Tells if this Drawable will be automatically mirrored  when its layout direction is RTL\n            right-to-left. -or- Set whether this Drawable is automatically mirrored when its layout direction is RTL\n            (right-to left).":"告诉该绘制的布局方向是RTL时，该绘制是否会自动镜像\r\n            右到左。 - 或 - 设置该绘制的布局方向是否会自动镜像RTL\r\n            （右到左）。\r\n","Returns report delay timestamp based on the device clock.":"返回报告根据设备时钟延迟时间戳。\r\n","android.content.res.Resources.getXml(int)":"android.content.res.resources.getxml（int）\r\n","Gets the pages of the document.":"获取文档的页面。\r\n","android.graphics.Paint.getFontFeatureSettings()":"android.graphics.paint.getFontFeaturesettings（）\r\n","\n            \n            E.":"\r\n            \r\n            E.\r\n","android.bluetooth.BluetoothGattServerCallback.onNotificationSent(android.bluetooth.BluetoothDevice, int)":"android.bluetooth.bluetoothgattservercallback.onnotificationent（android.bluetooth.bluetoothdevice，int）\r\n","singleTop":"Singletop\r\n","android.graphics.SurfaceTexture.detachFromGLContext()":"android.graphics.surfacetexture.detachfromglcontext（）\r\n","ComponentName ComponentName[]":"componentName componentName []\r\n"," calls from\n            this context, so that app ops manager's uid verification will work with the name.":" 来自\r\n            此上下文，使应用程序经理的UID验证将与该名称一起使用。\r\n","Retrieve all of the information we know about a particular permission.":"检索我们知道的有关特定许可的所有信息。\r\n","android.content.IntentFilter.matchDataAuthority(android.net.Uri)":"android.content.intentfilter.matchdataaauthority（android.net.uri）\r\n","Broadcast Action: The date has changed.":"广播行动：日期已更改。\r\n","Returns the numbers of rows in the cursor.":"返回光标中的行数。\r\n","android.graphics.drawable.GradientDrawable.getGradientRadius()":"android.graphics.drawable.gradientdrawable.getgradientradius（）\r\n","android.content.ComponentName.ComponentName(java.lang.String, java.lang.String)":"android.content.componentname.componentname（java.lang.string，java.lang.string）\r\n","Set or clear the rasterizer object.":"设置或清除Rasterizer对象。\r\n","android.bluetooth.BluetoothGattCallback.onServiceChanged(android.bluetooth.BluetoothGatt)":"android.bluetooth.bluetoothgattcallback.onervicechanged（android.bluetooth.bluetoothgatt）\r\n","Create a \"clean\" SyncResult.":"创建一个“干净”的综合。\r\n","BluetoothLeAdvertiser#stopAdvertisingSet":"蓝牙光线vertiser＃potadvertisingset\r\n","\n            intents that contains the AT command type of the vendor-specific command.":"\r\n            包含供应商特定命令的AT命令类型的意图。\r\n","android.content.pm.PackageManager.getInstalledApplications(int)":"android.content.pm.packagemanager.getInstalledApplications（int）\r\n","android.content.ContentResolver.uncanonicalize(android.net.Uri)":"android.content.contentresolver.uncanonicalize（android.net.uri）\r\n","android.content.pm.PermissionInfo.loadDescription(android.content.pm.PackageManager)":"android.content.pm.permissioninfo.loaddescription（android.content.pm.packagemanager）\r\n","android.content.RestrictionEntry.getTitle()":"android.content.grestrictionertry.getTitle（）\r\n","Intent#CATEGORY_LAUNCHER":"意图＃category_launcher\r\n","android.content.IntentSender.sendIntent(android.content.Context, int, android.content.Intent, android.content.OnFinished, android.os.Handler)":"android.content.intents.sendintent（android.content.context，int，android.content.intent，android.content.onfined，android.os.handler）\r\n","This method is called when the BroadcastReceiver is receiving an Intent\n            broadcast.":"当广播员收到意图时，该方法被称为\r\n            播送。\r\n","android.content.RestrictionsManager.EXTRA_RESPONSE_BUNDLE":"android.content.strictionsmanager.extra_response_bundle\r\n","android.content.res.Configuration.MNC_ZERO":"android.content.Res.Configuration.mnc_zero\r\n","android.database.sqlite.SQLiteCursor.SQLiteCursor(android.database.sqlite.SQLiteCursorDriver, java.lang.String, android.database.sqlite.SQLiteQuery)":"android.database.sqlite.sqlitecursor.sqlitecursor（android.database.sqlite.sqlite.sqlitecursordriver，java.lang.string，android.database.sqlite.sqlite.sqlitequery）\r\n","PackageInfo":"Packageinfo\r\n","Content providers are one of the primary building blocks of Android applications, providing\n            content to applications.":"内容提供商是Android应用程序的主要构件之一，提供\r\n            内容到应用程序。\r\n","android.content.pm.ShortcutManager.removeAllDynamicShortcuts()":"android.content.pm.shortcutmanager.removealldynamicshortcuts（）\r\n",": allow parsing\n            of unsafe information.":"：允许解析\r\n            不安全的信息。\r\n",": The device\n            supports cell-broadcast reception using the MBMS APIs.":"： 设备\r\n            使用MBMS API支持细胞广播接收。\r\n","A device, returned in the activity result of the ":"一个设备，在活动结果中返回\r\n","The recommended additional space to add between lines of text.":"建议在文本行之间添加的额外空间。\r\n","Indicates whether this color color is in a wide-gamut color space.":"指示这种颜色是否在宽阔的颜色空间中。\r\n","Normalize a MIME data type.":"标准化MIME数据类型。\r\n","android.content.res.TypedArray.hasValueOrEmpty(int)":"android.content.Res.TypedArray.hasvalueOrempty（int）\r\n","android.database.sqlite.SQLiteDatabase.execPerConnectionSQL(java.lang.String, java.lang.Object[])":"android.database.sqlite.sqlitedatabase.execperconnectionsql（java.lang.string，java.lang.object []）\r\n"," to access a ":" 访问\r\n"," instance that redirects all its methods\n            to the given ":" 重定向所有方法的实例\r\n            给定\r\n","android.content.pm.PackageManager.FEATURE_LIVE_WALLPAPER":"android.content.pm.packagemanager.feature_live_wallpaper\r\n","Start Bluetooth LE scan.":"启动蓝牙LE扫描。\r\n","android.graphics.Matrix.mapVectors(float[])":"android.graphics.matrix.mapvectors（float []）\r\n","Returns the radius for the corners of the gradient, that was previously set with\n            ":"返回梯度角的半径，这是以前设置的\r\n            \r\n","Reads a Long out of a column in a Cursor and writes it to a ContentValues.":"在光标中读取长列，并将其写入ContentValues。\r\n","android.graphics.drawable.BitmapDrawable.setTileModeX(android.graphics.TileMode)":"android.graphics.drawable.bitmapdrable.settilemodex（android.graphics.tilemode）\r\n","Android dense depth image format.":"Android致密深度图像格式。\r\n","Request notification access for the given component.":"请求给定组件的通知访问。\r\n","Sets a ShaderFactory to which requests for a\n            ":"设置一个请求的阴影。\r\n            \r\n","Returns the name of this color space.":"返回此颜色空间的名称。\r\n","android.drm.DrmInfoStatus.statusCode":"android.drm.drminfostatus.statuscode\r\n","A Picture records drawing calls (via the canvas returned by beginRecording)\n            and can then play them back into Canvas (via ":"图片记录绘图呼叫（通过启动记录返回的画布）\r\n            然后可以将它们播放到画布中（通过\r\n","android.content.RestrictionEntry.TYPE_STRING":"android.content.gresterriceentry.type_string\r\n","Returns the x offset of the shadow layer.":"返回阴影层的X偏移。\r\n","android.service.chooser.ChooserTarget ChooserTarget[]":"android.service.chooser.choosertarget choosertarget []\r\n","Create a complex Item, containing multiple representations of\n text, HTML text, Intent, and/or URI.":"创建一个复杂的项目，包含多个表示\r\n 文本，HTML文本，意图和/或URI。\r\n",":\n            The device supports printing.":"：\r\n            该设备支持打印。\r\n","android.database.sqlite.SQLiteDatabase.rawQueryWithFactory(android.database.sqlite.CursorFactory, java.lang.String, java.lang.String[], java.lang.String)":"android.database.sqlite.sqlitedatabase.rawquerywithfactory（android.database.sqlite.cursorfactory，java.lang.string，java.lang.lang.string，java.lang.string []，java.lang.string）\r\n","android.hardware.Sensor.getMinDelay()":"android.hardware.sensor.getMindelay（）\r\n","android.database.sqlite.SQLiteQueryBuilder.setStrictGrammar(boolean)":"android.database.sqlite.sqlitequerybuilder.setstrictgrammar（boolean）\r\n","The domain has been selected by the user.":"该域已由用户选择。\r\n","Callback that is invoked by ":"被调用的回调\r\n","android.graphics.Matrix.mapVectors(float[], float[])":"android.graphics.matrix.mapvectors（float []，float []）\r\n","android.content.Intent.getCharArrayExtra(java.lang.String)":"android.content.intent.getChararrayExtra（java.lang.string）\r\n","android.graphics.drawable.BitmapDrawable":"android.graphics.drawable.bitmapdrable\r\n","Contains the result of the application of a ":"包含应用的结果\r\n","android.content.ContentResolver.openAssetFileDescriptor(android.net.Uri, java.lang.String)":"android.content.contentresolver.openassetfiledscriptor（android.net.uri，java.lang.string）\r\n","Set the point's coordinates from the data stored in the specified\n            parcel.":"从存储在指定的数据中设置点的坐标\r\n            包裹。\r\n","Get the highest supported direct report mode rate level of the sensor.":"获取传感器的最高支持的直接报告模式速率水平。\r\n"," to indicate\n            that you don't want to kill the app containing the component.":" 以表示\r\n            您不想杀死包含组件的应用程序。\r\n","android.content.ContentResolver.SYNC_EXTRAS_SCHEDULE_AS_EXPEDITED_JOB":"android.content.contentresolver.sync_extras_schedule_as_expedited_job\r\n","android.content.pm.ApplicationInfo.dataDir":"android.content.pm.applicationinfo.datadir\r\n","Returns the font object used for drawing the glyph at the given index.":"返回用于在给定索引上绘制字形的字体对象。\r\n","android.graphics.drawable.GradientDrawable.setColor(int)":"android.graphics.drawable.gradientdrawable.setColor（int）\r\n","android.content.pm.ApplicationInfo.sourceDir":"android.content.pm.applicationinfo.sourcedir\r\n","android.drm.DrmManagerClient.acquireDrmInfo(android.drm.DrmInfoRequest)":"android.drm.drmmanagerclient.acquiredrminfo（android.drm.drminforequest）\r\n","Include cached shortcuts in the result.":"在结果中包括缓存的快捷方式。\r\n"," for handling management the\n            telephony subscriptions of the device.":" 用于处理管理\r\n            设备的电话订阅。\r\n","android.graphics.Path.addPath(android.graphics.Path, float, float)":"android.graphics.path.addpath（android.graphics.path，float，float）\r\n","Subtract two Insets.":"减去两个插图。\r\n","android.content.pm.PackageManager.getProperty(java.lang.String, android.content.ComponentName)":"android.content.pm.packagemanager.getProperty（java.lang.string，android.content.componentname）\r\n","android.graphics.ParcelableColorSpace.ParcelableColorSpace(android.graphics.ColorSpace)":"android.graphics.parcelablecolorspace.parcelablecolorspace（android.graphics.colorspace）\r\n","#openOutputStream(Uri, String)\n            openOutputStream(uri, \"w\")":"#openoutputstream（uri，string）\r\n            OpenOutputStream（URI，“ W”）\r\n","Raw external storage was requested by this app.":"此应用程序请求原始的外部存储。\r\n","Activity Action: Deliver some data to someone else.":"活动行动：向其他人传递一些数据。\r\n","android.drm.DrmInfo.get(java.lang.String)":"android.drm.drminfo.get（java.lang.string）\r\n","android.content.Context.bindService(android.content.Intent, android.content.ServiceConnection, int)":"android.content.context.bindservice（android.content.intent，android.content.serviceconnection，int）\r\n","android.graphics.drawable.Drawable.createFromXml(android.content.res.Resources, org.xmlpull.v1.XmlPullParser)":"android.graphics.drawable.drawable.createfromxml（android.content.res.res.resources，org.xmlpull.v1.xmlpullparser）\r\n","Write a ComponentName to a Parcel, handling null pointers.":"将componentName写入包裹，处理无效指针。\r\n","For internal use, sets the hint about whether this BroadcastReceiver is\n            running in ordered mode.":"为了内部用途，请提示该广播员是否为\r\n            以有序模式运行。\r\n","Get the paint's transfer mode object.":"获取油漆的传输模式对象。\r\n","android.content.pm.PackageItemInfo.loadUnbadgedIcon(android.content.pm.PackageManager)":"android.content.pm.packageiteminfo.loadunbadgedicon（android.content.pm.packagemanager）\r\n","android.content.Context.DISPLAY_HASH_SERVICE":"android.content.context.display_hash_service\r\n","set":"放\r\n","android.content.pm.PackageManager.GET_ATTRIBUTIONS":"android.content.pm.packagemanager.get_attributions\r\n","android.graphics.Bitmap.extractAlpha()":"android.graphics.bitmap.extractalpha（）\r\n","if uri or method is null":"如果URI或方法为null\r\n","ShortcutInfo":"shortcutinfo\r\n","android.content.IntentFilter.matchCategories(java.util.Set)":"android.content.intentfilter.matchcategories（java.util.set）\r\n","#releaseReferenceFromContainer()":"#releaseerfernefromcontainer（）\r\n","android.graphics.drawable.BitmapDrawable.BitmapDrawable()":"android.graphics.drawable.bitmapdrable.bitmapdrable（）\r\n","\n            with the authority of name, starting the provider if necessary.":"\r\n            借助姓名，如有必要，请启动提供商。\r\n","Decode a file path into a bitmap.":"将文件路径解码为位图。\r\n","Retrieves the MIME type associated with this <code>DrmRights</code> object.":"检索与此<code> drmrights </code>对象关联的MIME类型。\r\n","Creates an empty set of values using the default initial size":"使用默认的初始大小创建一个空的值集\r\n","Allocates a new FontMetrics object, and then calls getFontMetrics(fm)\n            with it, returning the object.":"分配一个新的Fontmetrics对象，然后调用GetFontmetrics（FM）\r\n            与之，返回对象。\r\n","android.database.sqlite.SQLiteDatabase":"android.database.sqlite.sqlitedatabase\r\n","Set the dst integer Rect by rounding this rectangle's coordinates\n            to their nearest integer values.":"通过四舍五入来设置DST整数矩形\r\n            到他们最近的整数值。\r\n","Returns whether the legacy advertisement will be used.":"返回是否使用旧版广告。\r\n","android.content.res.ObbInfo.version":"机器人。内容。res.ObbInfo.版本\r\n","android.database.sqlite.SQLiteQueryBuilder.setStrict(boolean)":"android.database.sqlite.sqlitequerybuilder.setstrict（boolean）\r\n","#MAX_SQL_CACHE_SIZE":"#max_sql_cache_size\r\n","android.database.Cursor.getFloat(int)":"android.database.cursor.getFloat（int）\r\n","android.content.res.TypedArray.getLayoutDimension(int, int)":"android.content.res.typedarray.getlayoutdimension（int，int）\r\n","android.content.pm.PackageInfo.signingInfo":"android.content.pm.packageinfo.signinginfo\r\n","Add a closed round-rectangle contour to the path":"在路径上添加封闭的圆形轮廓\r\n","android.content.Intent.CATEGORY_HOME":"android.content.intent.category_home\r\n","Broadcast Action: A user ID has been removed from the system.":"广播操作：用户ID已从系统中删除。\r\n","Installs a callback to be invoked for every preview frame in addition\n            to displaying them on the screen.":"安装每个预览帧要调用的回调，此外\r\n            在屏幕上显示它们。\r\n","Converts the specified ARGB color int from the ":"Converts the specified ARGB color int from the \r\n","android.content.pm.PackageInfo.providers":"android.content.pm.packageinfo.providers\r\n","Receives call backs when a data set has been changed, or made invalid.":"当数据集更改或无效时，接收回电话。\r\n","android.graphics.SumPathEffect.SumPathEffect(android.graphics.PathEffect, android.graphics.PathEffect)":"android.graphics.sumpatheffect.sumpatheffect（android.graphics.patheffect，android.graphics.patheffect）\r\n","Flags associated with the input features.":"与输入功能关联的标志。\r\n","android.bluetooth.BluetoothHealth.SINK_ROLE":"android.bluetooth.bluetoothhealth.sink_role\r\n","if the TypedArray has already been recycled.\n":"如果打字机已经被回收。\r\n\r\n","android.content.ContentResolver.SYNC_EXTRAS_OVERRIDE_TOO_MANY_DELETIONS":"android.content.contentresolver.sync_extras_override_too_many_deletions\r\n","android.content.ContentResolver.wrap(android.content.ContentProviderClient)":"android.content.contentresolver.wrap（android.content.contentproviderclient）\r\n","android.graphics.Canvas.scale(float, float, float, float)":"机器人。图形。帆布。scale（浮点数，浮点数，浮点数，浮点数）\r\n","android.content.BroadcastReceiver.clearAbortBroadcast()":"android.content.broadcastreceiver.clearabortbroadcast（）\r\n","when signature is odd-length\n":"当签名为奇数时\r\n\r\n","Match this filter against an Intent's categories.":"将此过滤器与意图的类别相匹配。\r\n","android.bluetooth.BluetoothHeadset.AT_CMD_TYPE_TEST":"android.bluetooth.bluetoothheadset.at_cmd_type_test\r\n"," for handling management of\n            network connections.":" 用于处理管理\r\n            网络连接。\r\n"," for you when the stream is closed.":" 为您当流被关闭。\r\n","android.graphics.Canvas.Canvas()":"android.graphics.canvas.canvas（）\r\n","android.bluetooth.BluetoothGattDescriptor.PERMISSION_READ_ENCRYPTED":"android.bluetooth.bluetoothgattdescriptor.permission_read_encrypted\r\n","A base class for Cursors that store their data in ":"将其数据存储在存储中的光标的基类\r\n","android.content.SyncResult.hasError()":"android.content.syncresult.haserror（）\r\n","Auto-focus mode.":"自动对焦模式。\r\n","android.graphics.drawable.Drawable.setLayoutDirection(int)":"机器人。图形。可画的。可画的。setLayoutDirection(int)\r\n","Returns a bundle of extra values.":"返回一组额外值。\r\n","android.content.Context.APP_OPS_SERVICE":"android.content.Context.App_Ops_Service\r\n","android.graphics.drawable.DrawableWrapper.DrawableWrapper(android.graphics.drawable.Drawable)":"机器人。图形。可画的。DrawableWrapper。DrawableWrapper（android。图形。可画的。Drawable）\r\n"," for managing battery state.":" 用于管理电池状态。\r\n","Value for break strategy indicating high quality line breaking.":"突破策略的价值，指示高质量的线破裂。\r\n","android.content.pm.PackageManager.FEATURE_OPENGLES_EXTENSION_PACK":"android.content.pm.packagemanager.feature_opengles_extension_pack\r\n","Create an Icon pointing to a drawable resource.":"创建指向可绘制资源的图标。\r\n","Notify registered observers that a row was updated.":"通知注册的观察者，该行已更新。\r\n"," indicating\n            result of the operation.":" 指示\r\n            操作的结果。\r\n","Enumerates values returned by  several types and taken as a parameter of several methods of ":"列举以几种类型返回的值，并将其作为几种方法的参数\r\n","Called when the database is created for the first time.":"首次创建数据库时调用。\r\n","android.graphics.Matrix.preConcat(android.graphics.Matrix)":"android.graphics.matrix.preconcat（android.graphics.matrix）\r\n"," returns true,\n ":" 返回真实，\r\n \r\n","android.graphics.Matrix.preTranslate(float, float)":"android.graphics.matrix.pretranslate（float，float）\r\n","android.content.pm.PackageManager.FEATURE_PICTURE_IN_PICTURE":"android.content.pm.packagemanager.feature_picture_in_picture\r\n","Set whether the Render node should clip itself to its bounds.":"设置渲染节点是否应将自身裁剪到其边界。\r\n","Determines whether there is an attribute at <var>index</var>, returning\n            ":"确定是否存在<var>索引</var>的属性，返回\r\n            \r\n","Return a List of all modules that are installed.":"返回安装的所有模块的列表。\r\n","Dumps a human-readable shortened string of the matrix into the given\n            stream":"将矩阵的人类可读的缩短字符串倾倒到给定\r\n            溪流\r\n","Set an int value in the preferences editor, to be written back once\n ":"在首选项编辑器中设置一个int值\r\n \r\n","android.content.Loader.isAbandoned()":"android.content.loader.isabandoned（）\r\n","A constant string describing an accelerometer sensor type.":"描述加速度计传感器类型的常数字符串。\r\n","android.graphics.PointF.length()":"android.graphics.pointf.length（）\r\n","android.graphics.RectF.inset(float, float)":"Android.graphics.Rectf.Inset（float，float）\r\n","Retrieves the account ID associated with this <code>DrmRights</code> object.":"检索与此<code> drmrights </code>对象关联的帐户ID。\r\n","Permission whitelist flag: permissions whitelisted by the system\n            when upgrading from an OS version where the permission was not\n            restricted to an OS version where the permission is restricted.":"许可白名单标志：系统列出了白名单的权限\r\n            从许可证的OS版本升级时\r\n            仅限于限制权限的操作系统版本。\r\n","Computes an oriented bounding box of the stroke.":"计算中风的定向边界框。\r\n","android.bluetooth.BluetoothHeadset.sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice, java.lang.String, java.lang.String)":"android.bluetooth.bluetoothheadsets.sendvendorspecificresultcode（android.bluetooth.bluetoothdevice，java.lang.string，java.lang.string）\r\n","android.content.Intent.getDataString()":"android.content.intent.getDatastring（）\r\n","android.os.PerformanceHintManager":"Android.os.PerformanceHintManager\r\n","Cursor wrapper that implements ":"光标包装器实施\r\n","Creates a <code>DrmInfo</code> object with the given parameters.":"使用给定参数创建<code> drminfo </code>对象。\r\n","F:Android.Drm.DrmConvertedStatus..ctor":"f：android.drm.drmconvertedstatus..ctor\r\n","android.content.res.Configuration.UI_MODE_TYPE_WATCH":"机器人。内容。res.配置。UI_MODE_TYPE_WATCH\r\n"," to retrieve a\n            ":" 检索一个\r\n            \r\n","android.content.QuickViewConstants.FEATURE_EDIT":"android.content.QuickViewConstants.feature_edit\r\n","Called by a SQLiteCursor when it it closed to destroy this object as well.":"当SQLiteCursor关闭以销毁此对象时，它也被调用。\r\n","android.content.pm.Checksum.TYPE_WHOLE_SHA256":"android.content.pm.checksum.type_whole_sha256\r\n","android.Manifest.permission#HIGH_SAMPLING_RATE_SENSORS":"android.manifest.permission＃high_sampling_rate_sensors\r\n","Indicates that the sync adapter should not proceed with the delete operations,\n            if it determines that there are too many.":"表示同步适配器不应进行删除操作，\r\n            如果它确定太多了。\r\n","android.graphics.drawable.ColorStateListDrawable.getColorStateList()":"android.graphics.drawable.ColorStateListDrawable.getColorStateList（）\r\n","android.content.pm.ShortcutInfo.isDynamic()":"android.content.pm.shortcutinfo.isdynamic（）\r\n","android.content.Intent.EXTRA_SHORTCUT_ID":"android.content.intent.extra_shortcut_id\r\n","Return the package name of the caller that initiated the request being\n            processed on the current thread.":"返回启动请求的呼叫者的包装名称\r\n            在当前线程上处理。\r\n","android.graphics.drawable.ShapeDrawable.setIntrinsicHeight(int)":"android.graphics.drawable.shapetrawable.setintrinsicheight（int）\r\n","#setForceDarkAllowed(boolean)":"#setForceDarkAllowed(布尔值)\r\n","android.database.sqlite.SQLiteOpenHelper.setIdleConnectionTimeout(long)":"android.database.sqlite.sqliteopenhelper.setidleconnection timeout（long）\r\n","android.graphics.drawable.AnimationDrawable.setOneShot(boolean)":"android.graphics.drawable.animationdrawable.setoneshot（boolean）\r\n","android.bluetooth.BluetoothHealth.APP_CONFIG_REGISTRATION_FAILURE":"android.bluetooth.bluetoothhealth.app_config_registration_failure\r\n","F:Android.Bluetooth.BluetoothGatt.RequestConnectionPriority":"F：android.bluetooth.bluetoothgatt.RequestConnectionPriority\r\n","Return the paint's hinting mode. -or- Set the paint's hinting mode.":"返回油漆的提示模式。 - 或设置油漆的提示模式。\r\n","Return true if the region is a single rectangle (not complex) and it\n            contains the specified rectangle.":"如果区域是一个矩形（不复杂），则返回true\r\n            包含指定的矩形。\r\n","android.graphics.Typeface":"android.graphics.typeface\r\n","android.graphics.Rect.Rect(android.graphics.Rect)":"机器人。图形。长Rect（android。图形。Rect）\r\n","android.content.res.loader.ResourcesLoader.removeProvider(android.content.res.loader.ResourcesProvider)":"android.content.res.res.loader.resourcesloader.removeprovider（android.content.res.res.loader.resourcesprovider）\r\n","Used in the extra field in the remote intent.":"在遥控意图中的额外字段中使用。\r\n","The part of a match constant that describes the category of match\n that occurred. ":"匹配常数的一部分描述了匹配类别\r\n 发生了。\r\n","android.content.pm.PackageManager.setMimeGroup(java.lang.String, java.util.Set)":"android.content.pm.packagemanager.setmimegroup（java.lang.string，java.util.set）\r\n","android.content.res.TypedArray.getSourceResourceId(int, int)":"android.content.res.typedarray.getSourceresourceid（int，int）\r\n","Called by the system when the device configuration changes while your\n            component is running.":"当设备配置更改时，系统调用\r\n            组件正在运行。\r\n","Restriction of type \"integer\".":"类型“整数”的限制。\r\n","android.graphics.Rect.exactCenterY()":"机器人。图形。长精确的()\r\n","android.bluetooth.BluetoothHidDeviceAppSdpSettings.BluetoothHidDeviceAppSdpSettings(java.lang.String, java.lang.String, java.lang.String, byte, byte[])":"android.bluetooth.bluetoothhiddeviceappsdpsettings.bluetoothhiddeviceappsdpsettings（java.lang.string，java.lang.string，java.lang.string，java.lang.lang.lang.string，byte，byte，byte，byte，byte []）\r\n","android.content.Context.enforceCallingUriPermission(android.net.Uri, int, java.lang.String)":"android.content.context.enforcecallinguripermission（android.net.uri，int，java.lang.string）\r\n","android.drm.DrmSupportInfo":"Android.drm.drmsupportinfo\r\n","The time at which the app was first installed.":"首次安装应用程序的时间。\r\n","android.graphics.Paint.getFlags()":"android.graphics.paint.getflags（）\r\n","Returns the translation value for this display list on the X axis, in pixels.":"以像素为x轴上的此显示列表的翻译值。\r\n","android.graphics.Paint.getWordSpacing()":"android.graphics.paint.getWordSpacing（）\r\n","Assign the keyFrame (specified by index) a time value and an array of key\n            values (with an implicity blend array of [0, 0, 1, 1] giving linear\n            transition to the next set of key values).":"分配密钥帧（由索引指定）一个时间值和一个键的数组\r\n            值（具有[0，0，1，1]的意义混合阵列给出线性\r\n            过渡到下一组键值）。\r\n","android.graphics.Canvas.clipRect(float, float, float, float)":"android.graphics.CANVAS.CLIPRECT（浮子，浮点，浮点，浮点）\r\n","android.graphics.drawable.ShapeDrawable.setPadding(android.graphics.Rect)":"android.graphics.drawable.shapetrawable.setpadding（android.graphics.Rect）\r\n","Represents a Bluetooth GATT Characteristic":"代表蓝牙gatt特性\r\n","android.content.AbstractThreadedSyncAdapter.onSyncCanceled()":"android.content.abstractthreadedysyncadapter.onsynccanceled（）\r\n","Retrieve information about available instrumentation code.":"检索有关可用检测代码的信息。\r\n","If set, the recipient of this Intent will be granted permission to\n perform write operations on the Uri in the Intent's data and any URIs\n specified in its ClipData. ":"如果设定，则将获得此意图的接收者许可\r\n 在意图数据和任何URI中对URI执行写作操作\r\n 在其Clipdata中指定。\r\n"," for handling\n            biometric and PIN/pattern/password authentication.":" 用于处理\r\n            生物识别和PIN/模式/密码身份验证。\r\n","android.content.RestrictionsManager.getManifestRestrictions(java.lang.String)":"android.content.StrestrictionsManager.getManiftrictions（java.lang.string）\r\n","The default NORMAL typeface object":"默认的普通字体对象\r\n","android.graphics.Region.set(android.graphics.Region)":"android.graphics.gregion.set（android.graphics.region）\r\n","android.drm.DrmInfoEvent.TYPE_REMOVE_RIGHTS":"android.drm.drminfoevent.type_remove_rights\r\n","Converts this color from its color space to the specified color space.":"Converts this color from its color space to the specified color space.\r\n","Creates a new RenderNode that can be used to record batches of\n            drawing operations, and store / apply render properties when drawn.":"创建一个可用于记录批次的新渲染\r\n            绘制操作，并在绘制时存储 /应用渲染属性。\r\n","ScanResult for Bluetooth LE scan.":"蓝牙LE扫描扫描。\r\n","android.graphics.Paint.getShadowLayerDx()":"android.graphics.paint.getShadowlayerdx（）\r\n","Return the total length of the current contour, or 0 if no path is\n            associated with this measure object.":"返回当前轮廓的总长度，如果没有路径，则返回0\r\n            与此度量对象相关联。\r\n","android.content.Context.BUGREPORT_SERVICE":"android.content.context.bugreport_service\r\n","android.content.Context.setWallpaper(android.graphics.Bitmap)":"android.content.context.setwallpaper（android.graphics.bitmap）\r\n","android.database.sqlite.SQLiteDatabase.isDbLockedByCurrentThread()":"android.database.sqlite.sqlitedatabase.isdblockedbycurrentthread（）\r\n"," with an\n            explicit class name.":" 带着\r\n            显式班级名称。\r\n","Clears the instant application cookie for the calling app.":"清除通话应用程序的即时应用程序cookie。\r\n","Returns the end padding in pixels.":"返回像素的末端填充。\r\n","RestrictionEntry#TYPE_STRING":"限制性＃type_string\r\n"," and returns the rights information asynchronously.":" 并不同步返回权利信息。\r\n","The initial data to place in a newly created record.":"最初的数据放置在新创建的记录中。\r\n","android.hardware.camera2.CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_MOTION_TRACKING\n            MOTION_TRACKING":"android.hardware.camera2.camerametadata＃request_available_capabilities_motion_tracking\r\n            Motion_Tracking\r\n","android.graphics.drawable.Drawable.scheduleSelf(java.lang.Runnable, long)":"android.graphics.drawable.drawable.scheduleself（java.lang.runnable，long）\r\n","Information you can retrieve about a particular application\n            service.":"您可以检索有关特定应用程序的信息\r\n            服务。\r\n","Service to be implemented by apps that manage a companion device.":"服务由管理配套设备的应用程序实施。\r\n","Create a labeled intent with no intent data but supplying a textual\n            label and icon resource for it.":"创建一个没有意图数据的标签意图，但提供文本\r\n            标签和图标资源。\r\n","Fill the entire canvas' bitmap (restricted to the current clip) with the specified color,\n            using srcover porterduff mode.":"用指定的颜色填充整个画布的位图（仅限于当前夹），\r\n            使用SRCOVER PORTERDUFF模式。\r\n","android.content.Intent.ACTION_APPLICATION_PREFERENCES":"android.content.intent.action_application_preferences\r\n","Write the region and its pixels to the parcel.":"将区域及其像素写入包裹。\r\n","#startActivity(Intent, Bundle)":"#startactivity（意图，束）\r\n","android.graphics.ColorSpace.ILLUMINANT_D60":"android.graphics.colorspace.illuminant_d60\r\n","android.content.pm.Signature.Signature(byte[])":"android.content.pm.signature.signature（byte []）\r\n","android.content.pm.PermissionInfo.group":"android.content.pm.permissioninfo.group\r\n","Returns the information about a particular camera.":"返回有关特定相机的信息。\r\n","android.content.Intent.ACTION_PACKAGE_DATA_CLEARED":"android.content.intent.action_package_data_cleared\r\n","Broadcast Action:  External media was removed from SD card slot, but mount point was not unmounted.":"广播动作：外部媒体已从SD卡插槽中删除，但安装点并未卸载。\r\n","android.database.Cursor.deactivate()":"android.database.cursor.deactivate（）\r\n","#reset()":"＃重置（）\r\n","android.content.Intent.getIdentifier()":"android.content.intent.getIdentifier（）\r\n","\n            describing additional high-priority deep-link targets for the chooser to present to the user.":"\r\n            描述其他高优先级深链接目标，以使选择者向用户展示。\r\n","Gets the restricted permissions that have been whitelisted and the app\n            is allowed to have them granted in their full form.":"获取已列入白名单和应用程序的受限权限\r\n            被允许以完整的形式授予它们。\r\n","Return the paint's stroke join type. -or- Set the paint's Join.":"返回油漆的中风连接类型。 - 或 - 设置油漆的连接。\r\n","Searches the set of signing certificates by which the given package has proven to have been\n            signed.":"搜索给定软件包已证明是的签名证书集\r\n            签。\r\n","android.content.ContentQueryMap.setKeepUpdated(boolean)":"android.content.contentquerymap.setKepupdated（boolean）\r\n","android.content.pm.InstrumentationInfo.splitSourceDirs":"android.content.pm.insrumentationinfo.splitsourcedirs\r\n","android.content.pm.PackageManager.CERT_INPUT_RAW_X509":"android.content.pm.packagemanager.cert_input_raw_x509\r\n","android.graphics.RenderNode.RenderNode(java.lang.String)":"android.graphics.rendernode.rendernode（java.lang.string）\r\n","Changes the selection arguments.":"更改选择参数。\r\n","ContentProvider#call(String, String, Bundle)":"ContentProvider＃呼叫（字符串，字符串，捆绑包）\r\n","android.bluetooth.le.AdvertisingSetCallback.onAdvertisingParametersUpdated(android.bluetooth.le.AdvertisingSet, int, int)":"android.bluetooth.le.AdvertisingsetCallback.OnadvertisingParameterSuped（android.bluetooth.le.le..ledvertisingset，int，int）\r\n","android.content.Intent.EXTRA_ASSIST_INPUT_DEVICE_ID":"android.content.intent.extra_assist_input_device_id\r\n",": If set, a single instance of the provider will\n run for all users on the device. ":"：如果设置，提供商的一个实例将\r\n 为设备上的所有用户运行。\r\n","android.os.VibratorManager":"android.os.vibratormanager\r\n","android.content.pm.CrossProfileApps.canRequestInteractAcrossProfiles()":"android.content.pm.crossprofileapps.canrequestintactacrossprofiles（）\r\n","android.bluetooth.le.AdvertisingSetCallback.onAdvertisingDataSet(android.bluetooth.le.AdvertisingSet, int)":"android.bluetooth.le.AdvertisingsetCallback.OnadvertisingDataSet（android.bluetooth.le.le..advertisingset，int）\r\n","Returns the advertising interval.":"返回广告间隔。\r\n","BitmapRegionDecoder can be used to decode a rectangle region from an image.":"BitMapregionDecoder可用于从图像中解码矩形区域。\r\n","#setDebugUnregister":"#setdebugunregister\r\n","A Drawable that wraps a bitmap and can be tiled, stretched, or aligned.":"可以包裹位图并可以铺有瓷砖，拉伸或对齐的可绘图。\r\n","android.os.Parcelable.Creator":"android.os.os.parcelable.creator\r\n","android.content.Intent.CATEGORY_TYPED_OPENABLE":"android.content.intent.category_typed_openable\r\n","android.graphics.drawable.LayerDrawable.getLayerGravity(int)":"android.graphics.drawable.layerdrawable.getlayergravity（int）\r\n","android.content.pm.LauncherApps.registerPackageInstallerSessionCallback(java.util.concurrent.Executor, android.content.pm.SessionCallback)":"android.content.pm.launcherapps.registerpackageinstallersessioncallback（java.util.concurrent.executor，android.content.pmm.sessioncallback）\r\n","This mode bit configures the database to record recent queries.":"此模式位配置数据库以记录最近的查询。\r\n","android.content.ContentProviderOperation.isUpdate()":"android.content.contentProvideroperation.isupdate（）\r\n","#VERTICAL":"＃垂直的\r\n","android.graphics.ColorMatrixColorFilter.getColorMatrix(android.graphics.ColorMatrix)":"android.graphics.ColorMatrixColorFilter.getColorMatrix(android.graphics.ColorMatrix)\r\n","android.content.DialogInterface.cancel()":"android.content.dialoginterface.cancel（）\r\n","android.content.SearchRecentSuggestionsProvider.query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)":"android.content.SearchRecentsuggestionsProvider.Query（android.net.uri，java.lang.string []，java.lang.string，java.lang.string []，java.lang.lang.string）\r\n","A String[] holding e-mail addresses that should be carbon copied.":"符合应复制碳的电子邮件地址的字符串[]。\r\n","listener":"听众\r\n","Return the thickness ratio of the ring expressed as a ratio of the ring's width. -or- Configure the thickness of the ring expressed as a ratio of the ring's width.":"返回表达为环宽度比的环的厚度比。 - 或 - 配置为表格宽度比的环的厚度。\r\n","camera":"照相机\r\n","ClipDescription#MIMETYPE_TEXT_INTENT":"clipdescription＃mimetype_text_intent\r\n","Returns any additional details that can be used to interpret the\n            underlying file descriptor.":"返回可用于解释\r\n            底层文件描述符。\r\n","Information collected from the &lt;application&gt; tag, or null if\n            there was none.":"从＆lt; application＆gt;收集的信息标签或null如果\r\n            没有。\r\n","android.graphics.RectF.intersect(float, float, float, float)":"android.graphics.Rectf.Intersect（浮子，浮点，浮点，浮点）\r\n","if uri is not known\n":"如果不知道Uri\r\n\r\n","Return whether the device has been booted into safe mode.":"返回设备是否已启动到安全模式。\r\n","android.content.pm.ShortcutManager.FLAG_MATCH_PINNED":"android.content.pm.shortcutmanager.flag_match_pinned\r\n","Determine if two intents are the same for the purposes of intent\n            resolution (filtering).":"确定出于意图的目的是否相同\r\n            分辨率（过滤）。\r\n","android.content.Context.HARDWARE_PROPERTIES_SERVICE":"android.content.context.hardware_properties_service\r\n","This flag is not normally set by application code, but set for you by\n the system if this activity is being launched from history\n (longpress home key).":"此标志通常不是按应用程序代码设置的，而是通过\r\n 该系统如果从历史开始启动此活动\r\n （Longpress Home Key）。\r\n","android.database.Cursor.getString(int)":"android.database.cursor.getstring（int）\r\n"," object, obtained with ":" 对象，以\r\n","android.graphics.drawable.AnimationDrawable.getDuration(int)":"android.graphics.drawable.animationdrawable.getDuration（int）\r\n","Called if the transaction is about to be rolled back.":"如果交易即将回滚，请调用。\r\n","android.graphics.Path.isInverseFillType()":"android.graphics.path.isinversefilltype（）\r\n","Determines if this instance of a Color struct and another are the same.":"确定颜色结构的此实例和另一个实例是否相同。\r\n",", indicating that this permission has been\n            installed into the system's globally defined permissions.":"，表明此许可已\r\n            安装在系统的全球定义权限中。\r\n","android.content.ContentResolver.ContentResolver(android.content.Context)":"android.content.contentresolver.contentresolver（android.content.context）\r\n","android.content.SharedPreferences.edit()":"android.content.sharedpreferences.edit（）\r\n","android.bluetooth.BluetoothGattCallback.onDescriptorRead(android.bluetooth.BluetoothGatt, android.bluetooth.BluetoothGattDescriptor, int)":"android.bluetooth.bluetoothgattcallback.ondescriptorread（android.bluetooth.bluetoothgatt，android.bluetooth.bluetooth.bluetooth.bluetoothgattdescriptor，int）\r\n","android.content.ContentProvider.bulkInsert(android.net.Uri, android.content.ContentValues[])":"android.content.contentprovider.bulkinsert（android.net.uri，android.content.contentvalues []）\r\n","android.content.pm.verify.domain.DomainVerificationUserState.DOMAIN_STATE_VERIFIED":"android.content.pm.verify.domain.domainverificationuserstate.domain_state_verified\r\n","android.hardware.Camera.takePicture(android.hardware.ShutterCallback, android.hardware.PictureCallback, android.hardware.PictureCallback)":"android.hardware.camera.takepicture（android.hardware.shuttercallback，android.hardware.picturecallback，android.hardware.picturecallback）\r\n","Drawable containing a set of Drawable keyframes where the currently displayed\n            keyframe is chosen based on the current state set.":"可绘制包含一组可绘制的钥匙帧，其中当前显示\r\n            基于当前状态集选择密钥帧。\r\n","android.content.IntentFilter.getAction(int)":"android.content.intentfilter.getaction（int）\r\n","android.content.res.Configuration.UI_MODE_TYPE_VR_HEADSET":"机器人。内容。res.配置。UI_MODE_TYPE_VR_HEADSET\r\n","Returns the filter set on the service Solicitation uuid.":"返回服务招标上的过滤器设置。\r\n","android.content.ClipDescription.MIMETYPE_TEXT_URILIST":"android.content.clipdescription.mimetype_text_urilist\r\n","Returns the TX power level for advertising.":"返回TX功率级别用于广告。\r\n","FrameRenderRequest#syncAndDraw()":"FRAMERENDERREQUEST＃SYNCANDDRAW（）\r\n","android.bluetooth.le.PeriodicAdvertisingParameters":"android.bluetooth.le。periodicacadvertising参数\r\n","#hasSystemFeature":"#HassystemFeature\r\n","\n            intents to supply the uid the package had been assigned.":"\r\n            提供包装已分配的UID的意图。\r\n","Adds a new layer containing the specified ":"添加一个包含指定的新图层\r\n","android.graphics.ComposeShader":"android.graphics.composeshader\r\n","Utility method to run the query on the db and return the blob value in the\n            first column of the first row.":"实用程序方法可以在DB上运行查询并返回Blob值\r\n            第一行的第一列。\r\n"," Intent.":" 意图。\r\n","android.content.Context.clearWallpaper()":"android.content.context.clearwallpaper（）\r\n","android.graphics.drawable.Drawable.getOutline(android.graphics.Outline)":"android.graphics.drawable.drawable.getOutline（android.graphics.outline）\r\n","Implement this to handle query requests where the arguments are packed into a ":"实施此内容来处理查询请求，其中参数被包装到一个\r\n","android.database.sqlite.SQLiteTransactionListener.onBegin()":"android.database.sqlite.sqlitetransactionListener.onbegin（）\r\n","Class that describes the various metrics for a font at a given text size.":"在给定文本大小的字体上描述字体的各种指标的类。\r\n","android.graphics.NinePatch":"android.graphics.ninepatch\r\n","android.content.ContentProvider.setPathPermissions(android.content.pm.PathPermission[])":"android.content.contentprovider.setPathpermissions（android.content.pm.pathpatermission []）\r\n","android.content.ContentResolver.openTypedAssetFileDescriptor(android.net.Uri, java.lang.String, android.os.Bundle)":"android.content.contentresolver.opentypedAssetFiledScriptor（android.net.uri，java.lang.string，android.os.bundle）\r\n","Gets whether or not this package is hidden.":"获取该软件包是否隐藏。\r\n","Create a new drawable without supplying resources the caller\n is running in.":"创建一个新的drawable，而不向调用者提供资源\r\n 正在跑步。\r\n","Return an iterator over the filter's data authorities.":"通过过滤器的数据电源返回迭代器。\r\n","android.content.Context.getOpPackageName()":"android.content.context.getoppackagename（）\r\n","android.content.Intent.EXTRA_REFERRER_NAME":"android.content.intent.extra_referrer_name\r\n","Cursor#FIELD_TYPE_BLOB":"光标＃field_type_blob\r\n","Broadcast Action:  The current system wallpaper has changed.":"广播动作：当前的系统壁纸已更改。\r\n","The kernel user-ID that has been assigned to this application;\n            currently this is not a unique ID (multiple applications can have\n            the same uid).":"已分配给本应用程序的内核用户ID；\r\n            目前，这不是唯一的ID（多个应用程序可以拥有\r\n            相同的UID）。\r\n","Class for accessing an application's resources.":"用于访问应用程序资源的类。\r\n","android.content.pm.PackageManager.clearPackagePreferredActivities(java.lang.String)":"android.content.pm.packagemanager.clearpackagepreferredivities（java.lang.string）\r\n","Activity Action: Start Voice Command.":"活动动作：启动语音命令。\r\n","Return the max height for icons, in pixels.":"以像素为单位返回图标的最大高度。\r\n","Register a custom aggregate function that can be called from SQL\n            expressions.":"注册可以从SQL调用的自定义聚合功能\r\n            表达。\r\n","android.content.Intent.ACTION_DEFAULT":"android.content.intent.action_default\r\n","android.graphics.Canvas.clipRect(android.graphics.RectF)":"android.graphics.canvas.cleprect（android.graphics.Rectf）\r\n","The system's evaluation of how well the activity matches the\n            IntentFilter.":"系统对活动与该活动的匹配程度的评估\r\n            意图滤波器。\r\n","\n          Whether an instance of the provider can be launched into the process\n          of the component that started it.\n        ":"\r\n          是否可以将提供商的实例启动到该过程\r\n          启动它的组件。\r\n        \r\n","android.graphics.RectF.offsetTo(float, float)":"Android.graphics.Rectf.OffSetto（浮点，float）\r\n","Flag parameter for\n            ":"标志参数\r\n            \r\n","\n            color space.":"\r\n            色彩空间。\r\n","android.drm.DrmInfo.iterator()":"android.drm.drminfo.iterator（）\r\n","The version number of this package, as specified by the <manifest>\n tag's ":"此软件包的版本号，如<sustest>指定\r\n 标签\r\n","Test whether this filter matches the given <var>intent</var>.":"测试此过滤器是否匹配给定的<var>意图</var>。\r\n","android.graphics.Matrix.mapVectors(float[], int, float[], int, int)":"android.graphics.matrix.mapvectors（float []，int，float []，int，int）\r\n","This class describes all device configuration information that can\n            impact the resources the application retrieves.":"本课程描述所有可以\r\n            影响应用程序检索的资源。\r\n","android.content.Context.moveSharedPreferencesFrom(android.content.Context, java.lang.String)":"android.content.Context.MovesharedPreferencesFrom（android.content.context，java.lang.string）\r\n","android.content.Intent.EXTRA_TIMEZONE":"android.content.intent.extra_timezone\r\n",": If this feature is supported, the device implements\n            the Android Keystore backed by an isolated execution environment.":"：如果支持此功能，则设备实施\r\n            Android密钥店以孤立的执行环境为支持。\r\n","Defines DRM object types.":"定义DRM对象类型。\r\n","android.hardware.camera2.CameraManager#getConcurrentCameraIds()":"android.hardware.camera2.cameramanager＃getConcurrentCameraids（）\r\n","Continuous auto focus mode intended for video recording.":"连续自动焦点模式用于视频录制。\r\n","android.graphics.RenderNode.setRenderEffect(android.graphics.RenderEffect)":"android.graphics.rendernode.setrendereffect（android.graphics.rendereffect）\r\n","A helper function for implementing ":"用于实施的助手功能\r\n","android.content.Intent.removeFlags(int)":"android.content.intent.removeflags（int）\r\n","android.bluetooth.BluetoothGattServer.getServices()":"android.bluetooth.bluetoothgattserver.getServices（）\r\n","Copy 9 values from the matrix into the array.":"将9个值从矩阵复制到数组。\r\n"," when calling query.":" 调用查询时。\r\n","Called if the task was canceled before it was completed.":"如果任务完成之前已取消该任务，请致电。\r\n","Used to indicate that an intent filter can accept files which are not necessarily\n            openable by ":"用来表明意图过滤器可以接受不一定是的文件\r\n            可以打开\r\n","A typed checksum of an APK.":"APK的打字校验和。\r\n","android.content.pm.PackageStats":"android.content.pm.packagestats\r\n","android.hardware.Camera.getNumberOfCameras()":"android.hardware.camera.getnumberofcameras（）\r\n","android.content.Intent.ACTION_PROFILE_ACCESSIBLE":"android.content.intent.action_profile_accessible\r\n","android.bluetooth.le.AdvertisingSetParameters.getPrimaryPhy()":"android.bluetooth.le.AdvertisingsetParameters.getPrimaryphy（）\r\n","Return a list of profiles that the caller can access via the ":"返回呼叫者可以通过该列表访问的配置文件列表\r\n","android.database.CursorWindow.getShort(int, int)":"android.database.cursorwindow.getShort（int，int）\r\n","Set the dst region to the result of translating this region by [dx, dy].":"将DST区域设置为通过[DX，DY]翻译该区域的结果。\r\n","android.bluetooth.BluetoothHeadset.STATE_AUDIO_CONNECTED":"android.bluetooth.bluetoothheadset.state_audio_connected\r\n","android.graphics.drawable.GradientDrawable.setStroke(int, int, float, float)":"android.graphics.drawable.gradientdrawable.setstroke（int，int，float，float）\r\n","android.graphics.Point.equals(int, int)":"android.graphics.point.Equals（int，int）\r\n",") where the application can\n place persistent files it owns.":"）应用程序可以\r\n 将其拥有的持久文件放置。\r\n"," for managing companion devices":" 用于管理伴侣设备\r\n","android.content.res.Resources.getLayout(int)":"android.content.res.resources.getLayout（int）\r\n","android.view.ViewGroup":"android.view.ViewGroup\r\n","Sets the center of the light source.":"设置光源的中心。\r\n","android.R.styleable#AndroidManifestService\n            &lt;service&gt;":"Android.r.Stylable＃AndroidManifestService\r\n            ＆lt;服务＆gt;\r\n","Determine the best service to handle for a given Intent.":"为给定的意图确定要处理的最佳服务。\r\n","android.content.Intent.EXTRA_UID":"android.content.intent.extra_uid\r\n","A resource that manages a number of alternate Drawables, each assigned a maximum numerical value.":"管理许多替代可抽签的资源，每个可抽签分配了最大值值。\r\n","android.bluetooth.BluetoothHealth.APP_CONFIG_UNREGISTRATION_SUCCESS":"android.bluetooth.bluetoothhealth.app_config_unregistration_success\r\n","An identifier for an unique state (locus) in the application.":"应用程序中唯一状态（基因座）的标识符。\r\n","Set whether this Drawable is visible.":"设置此Drawable是否可见。\r\n","Return whether a synthetic app details activity will be generated if the app has no enabled\n            launcher activity.":"返回如果未启用该应用程序，是否将生成合成应用详细信息活动\r\n            发射器活动。\r\n","android.content.pm.PackageManager.getPackagesForUid(int)":"android.content.pm.packagemanager.getpackagesforuid（int）\r\n","#reqGlEsVersion":"#reqglesversion\r\n","Parses the \"intent\" element (and its children) from XML and instantiates\n            an Intent object.":"从XML中解析“意图”元素（及其子女）并实例化\r\n            一个意图对象。\r\n","android.graphics.Region.Region(int, int, int, int)":"android.graphics.gregion.gregion（int，int，int，int）\r\n","android.content.ContentResolver.update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])":"android.content.contentresolver.update（android.net.uri，android.content.contentvalues，java.lang.string，java.lang.string []）\r\n","android.view.View#LAYOUT_DIRECTION_LTR":"android.view.view＃layout_direction_ltr\r\n"," for controlling and managing\n            routing of media.":" 用于控制和管理\r\n            媒体路线。\r\n","Returns the drawable's intrinsic height.":"返回可绘制的固有高度。\r\n","android.graphics.BitmapShader":"android.graphics.bitmapshader\r\n","android.content.pm.PackageManager.getInstalledPackages(int)":"android.content.pm.packagemanager.getinstalledpackages（int）\r\n","PatternMatcher#PATTERN_LITERAL":"patternmatcher＃pattern_literal\r\n","android.graphics.Rect.Rect()":"机器人。图形。长校长()\r\n","android.content.res.Resources.getAssets()":"机器人。内容。资源。getAssets()\r\n","Broadcast Action: A GTalk connection has been disconnected.":"广播动作：GTALK连接已断开连接。\r\n","android.graphics.drawable.shapes.ArcShape.getSweepAngle()":"android.graphics.drawable.shapes.arcshape.getSweepangle（）\r\n","android.content.res.TypedArray.recycle()":"android.content.res.typedarray.recycle（）\r\n","android.content.Context.MEDIA_METRICS_SERVICE":"android.content.context.media_metrics_service\r\n","android.content.ContentResolver.getOutgoingPersistedUriPermissions()":"android.content.contentresolver.getout of toverpersistEduripermissions（）\r\n",": The device's touch screen is capable of\n            tracking two or more fingers fully independently.":"：设备的触摸屏能够\r\n            完全独立跟踪两个或更多手指。\r\n"," object will be made.":" 将制作对象。\r\n","android.bluetooth.BluetoothHeadset.AT_CMD_TYPE_SET":"android.bluetooth.bluetoothheadset.at_cmd_type_set\r\n","android.content.Intent.ACTION_DREAMING_STOPPED":"android.content.intent.action_dreaming_stopped\r\n","android.graphics.Canvas.drawARGB(int, int, int, int)":"android.graphics.canvas.drawargb（int，int，int，int）\r\n","Returns the Paint used to draw the shape.":"返回用于绘制形状的油漆。\r\n"," resource ID.":" 资源ID。\r\n"," objects as set with\n            ":" 设置的对象\r\n            \r\n","android.content.pm.PackageManager.getPackageInfo(android.content.pm.VersionedPackage, int)":"android.content.pm.packagemanager.getpackageinfo（android.content.pm.versionedpackage，int）\r\n","s and selects which one to use.":"s并选择使用哪一个。\r\n","Health App Configuration registration failure":"健康应用程序配置注册失败\r\n","Check both a Uri and normal permission.":"同时检查URI和正常许可。\r\n","Provides methods to load resources data from APKs (":"提供从APK加载资源数据的方法（\r\n","android.content.pm.PackageManager.queryPermissionsByGroup(java.lang.String, int)":"android.content.pm.PackageManager.queryPermissionsByGroup（java.lang.String，int）\r\n","Get if the query is marked as ":"如果查询被标记为\r\n","A representation of an activity that can belong to this user or a managed\n            profile associated with this user.":"可以属于此用户或托管的活动的代表\r\n            与此用户关联的配置文件。\r\n","Constant corresponding to <code>dataSync</code> in\n            the ":"常量对应于<code>dataSync</code>in\r\n            该 \r\n","android.content.Intent.setType(java.lang.String)":"android.content.intent.setType（java.lang.string）\r\n","Returns true if this object has the named value.":"如果此对象具有命名值，则返回true。\r\n","Set (replace) the ":"设置（替换）\r\n","android.bluetooth.BluetoothHidDevice.ERROR_RSP_UNKNOWN":"android.bluetooth.bluetoothhiddevice.Error_rsp_unknown\r\n","android.graphics.RenderNode.endRecording()":"机器人。图形。RenderNode。内测()\r\n","android.graphics.RectF.contains(float, float, float, float)":"android.graphics.Rectf.Contains（浮点，浮点，浮点，浮点）\r\n","The maximum smallest screen width the application will work on.":"该应用程序将运行的最大屏幕宽度。\r\n","android.graphics.drawable.Drawable":"android.graphics.drawable.drawable\r\n","android.drm.DrmErrorEvent.DrmErrorEvent(int, int, java.lang.String, java.util.HashMap)":"android.drm.drmerrorevent.drmerrorevent（int，int，java.lang.string，java.util.hashmap）\r\n","#requestPinShortcut(ShortcutInfo, IntentSender)":"#requestpinshortcut（shortcutinfo，Intentsender）\r\n","android.content.pm.PackageManager.FEATURE_CONSUMER_IR":"android.content.pm.packagemanager.feature_consumer_ir\r\n","Returns the RGB color used to multiply the source color when the\n            color filter is applied.":"返回用于乘以乘源颜色的RGB颜色\r\n            应用颜色过滤器。\r\n","Describes the current state, as a union of primitve states, such as\n            ":"将当前状态描述为原始国家的联合，例如\r\n            \r\n"," on each observer.":" 在每个观察者上。\r\n","android.database.CursorWindow.copyStringToBuffer(int, int, android.database.CharArrayBuffer)":"android.database.cursorwindow.copystringtobuffer（int，int，android.database.chararraybuffer）\r\n","Draw a line segment with the specified start and stop x,y coordinates, using the specified\n            paint.":"使用指定的，用指定的启动和停止X，y坐标绘制线段\r\n            画。\r\n","ClipDescription#MIMETYPE_TEXT_PLAIN":"clipdescription＃mimetype_text_plain\r\n","android.graphics.fonts.FontStyle.FONT_WEIGHT_MIN":"android.graphics.fonts.fontstyle.font_weight_min\r\n","Opens a page for rendering.":"打开一个页面供渲染。\r\n","android.content.res.Configuration.getLocales()":"android.content.res.configuration.getLocales（）\r\n","android.graphics.drawable.Drawable.draw(android.graphics.Canvas)":"android.graphics.drawable.drawable.draw（android.graphics.canvas）\r\n","Option for ":"选项\r\n","Create from inside an XML document.":"从XML文档内部创建。\r\n","android.drm.DrmInfoEvent.TYPE_ACCOUNT_ALREADY_REGISTERED":"android.drm.drminfoevent.type_account_already_registered\r\n","PeopleManager":"PeopleManager\r\n","android.content.Context.CONSUMER_IR_SERVICE":"android.content.context.consumer_ir_service\r\n","android.graphics.RenderNode.getLeft()":"机器人。图形。RenderNode。盖夫特()\r\n","android.content.pm.PackageInstaller.EXTRA_PACKAGE_NAME":"android.content.pm.packageinstaller.extra_package_name\r\n","Execute a statement that returns a 1 by 1 table with a numeric value.":"执行一个语句，该语句返回具有数字值的1乘1表。\r\n","RestrictionEntry#TYPE_MULTI_SELECT":"限制性＃type_multi_select\r\n","Retrieves the resource identifier for the attribute at\n            <var>index</var>.":"检索属性的资源标识符\r\n            <var>索引</var>。\r\n","android.content.res.TypedArray.getLayoutDimension(int, java.lang.String)":"android.content.res.typedarray.getlayoutdimension（int，java.lang.string）\r\n","android.bluetooth.BluetoothServerSocket.accept()":"android.bluetooth.bluetoothserversocket.accept（）\r\n","Set the matrix to convert from YUV to RGB":"Set the matrix to convert from YUV to RGB\r\n","android.graphics.drawable.LayerDrawable.setLayerInsetStart(int, int)":"android.graphics.drawable.layerdrawable.setlayerinsetstart（int，int）\r\n","Return the boundary of the region as a new Path.":"返回该地区的边界作为新路径。\r\n","android.content.Intent.getBundleExtra(java.lang.String)":"android.content.intent.getBundleExtra（java.lang.string）\r\n","android.graphics.drawable.AnimationDrawable.stop()":"android.graphics.drawable.animationdrawable.stop（）\r\n","android.content.pm.PackageManager.FEATURE_CAMERA":"android.content.pm.packagemanager.feature_camera\r\n","Request notifications when the different aspects of the SyncManager change.":"当Syncmanager的不同方面更改时，请求通知。\r\n","Sets whether the RenderNode should be drawn immediately after the\n            closest ancestor RenderNode containing a projection receiver.":"设置是否应立即在\r\n            最接近的祖先渲染包含投影接收器。\r\n"," for handling management of\n            Wi-Fi peer-to-peer connections.":" 用于处理管理\r\n            Wi-Fi对等连接。\r\n","Reads a Double out of a field in a Cursor and writes it to a Map.":"在光标中读取一个双字段，并将其写入地图。\r\n","Unregister a previously registered callback.":"取消注册先前注册的回调。\r\n","Basic information about a Opaque Binary Blob (OBB) that reflects the info\n            from the footer on the OBB file.":"关于反映信息的不透明二进制Blob（OBB）的基本信息\r\n            从OBB文件的页脚。\r\n","ShortcutManager#disableShortcuts":"快捷方式＃disableShortCuts\r\n","BluetoothLeAdvertiser#startAdvertising":"蓝牙光线广告＃ottaradvertising\r\n"," implemented in secure hardware\n            at the given feature version.":" 在安全硬件中实现\r\n            在给定的功能版本。\r\n","Call this to indicate to the system that the associated ":"称此为系统表示关联的系统\r\n","Return the number of data authorities in the filter.":"返回过滤器中的数据电源数量。\r\n","#splitSourceDirs":"#splitsourcedirs\r\n","Returns first active staged session, or ":"返回首次活动上演会话，或\r\n","return true if the cursor is closed":"如果光标关闭，则返回true\r\n","android.graphics.ImageFormat.HEIC":"android.graphics.imageformat.heic\r\n","Makes a deep copy suitable for modification.":"制作适合修改的深副本。\r\n","android.hardware.biometrics.BiometricManager":"android.hardware.biometrics.biometricmanager\r\n","android.hardware.SensorListener.onAccuracyChanged(int, int)":"android.hardware.sensorlistener.onaccuracychanged（int，int）\r\n","android.content.Intent.ACTION_OPEN_DOCUMENT":"android.content.intent.action_open_document\r\n","The launch mode style requested by the activity.":"活动要求的启动模式样式。\r\n","android.content.pm.PackageManager.FEATURE_BACKUP":"android.content.pm.packagemanager.feature_backup\r\n","Characteristic value format type uint32":"特征值格式类型UINT32\r\n","draw the gradient from the bottom to the top ":"从底部到顶部绘制梯度\r\n","android.bluetooth.le.AdvertiseData.getServiceUuids()":"android.bluetooth.le.partvertisedata.getServiceUuids（）\r\n","android.drm.DrmManagerClient.closeConvertSession(int)":"android.drm.drmmanagerclient.closeconvertsession（int）\r\n","android.graphics.Color.getComponents()":"android.graphics.color.getComponents（）\r\n","android.database.sqlite.SQLiteAccessPermException":"android.database.sqlite.sqliteaccesspermexception\r\n","android.content.pm.PackageManager.EXTRA_VERIFICATION_ID":"android.content.pm.packagemanager.extra_verification_id\r\n","android.R.attr#state_focused":"android.r.attr＃state_focused\r\n","Sets the distance along the Z axis (orthogonal to the X/Y plane on which\n            RenderNodes are drawn) from the camera to this RenderNode.":"设置沿Z轴（与x/Y平面正交）的距离。\r\n            Rendernode绘制）从相机到这个RenderNode。\r\n","DrmInfoRequest":"drminforequest\r\n","android.content.Context.checkPermission(java.lang.String, int, int)":"android.content.Context.Checkpermission（java.lang.string，int，int）\r\n","Execute this SQL statement and return the ID of the row inserted due to this call.":"执行此SQL语句并返回由于此调用而插入的行的ID。\r\n","android.bluetooth.BluetoothStatusCodes.ERROR_BLUETOOTH_NOT_ENABLED":"android.bluetooth.bluetoothstatuscodes.error_bluetooth_not_enabled\r\n","Specify a bitmap for the canvas to draw into.":"为画布指定要绘制的位图。\r\n","android.content.Context.startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)":"android.content.context.startintentsender（android.content.intentsender，android.content.intent.intent，int，int，int）\r\n","android.content.IntentFilter.countCategories()":"android.content.intentfilter.countcategories（）\r\n","Gets a value and converts it to a Boolean.":"获取一个值并将其转换为布尔值。\r\n","Creates a new ShortcutIconResource for the specified context and resource\n identifier.":"为指定的上下文和资源创建一个新的折射式RESOURCE\r\n 标识符。\r\n","android.database.sqlite.SQLiteDatabase.update(java.lang.String, android.content.ContentValues, java.lang.String, java.lang.String[])":"android.database.sqlite.sqlitedatabase.update（java.lang.string，android.content.content.contentvalues，java.lang.string，java.lang.lang.string []）\r\n","android.content.Context.startActivity(android.content.Intent)":"android.content.context.startactivity（android.content.intent）\r\n","Saves the current matrix and clip onto a private stack.":"保存当前矩阵并剪辑到私有堆栈上。\r\n","android.content.pm.verify.domain.DomainVerificationUserState.isLinkHandlingAllowed()":"android.content.pm.verify.domain.domainverificationuserstate.islinkhandlinglinged（）\r\n","android.content.pm.ProviderInfo.writePermission":"android.content.pm.providerinfo.writepermission\r\n","android.bluetooth.le.AdvertisingSet.setPeriodicAdvertisingData(android.bluetooth.le.AdvertiseData)":"android.bluetooth.le..Advertisingset.setperiodicacadvertisingdata（android.bluetooth.le.le.le.ledvertistisata）\r\n","android.bluetooth.BluetoothHeadset.VENDOR_SPECIFIC_HEADSET_EVENT_COMPANY_ID_CATEGORY":"android.bluetooth.bluetoothheadset.vendor_specific_headset_event_company_id_category\r\n","android.os.IBinder":"android.os.ibinder\r\n","android.graphics.drawable.shapes.ArcShape.getStartAngle()":"android.graphics.drawable.shapes.arcshape.getstartangle（）\r\n","android.content.pm.PermissionGroupInfo.PermissionGroupInfo()":"android.content.pm.permissiongroupinfo.permissiongroupinfo（）\r\n","android.graphics.drawable.LayerDrawable.setLayerInsetEnd(int, int)":"android.graphics.drawable.layerdrawable.setlayerinsetend（int，int）\r\n","android.database.sqlite.SQLiteCursor.getDatabase()":"android.database.sqlite.sqlitecursor.getDatabase（）\r\n","Subclasses implement this to take care of being abandoned.":"子类实施这一点，以照顾被遗弃。\r\n","android.graphics.drawable.PaintDrawable":"android.graphics.drawable.paxtable\r\n","Options that have been set in the activity declaration in the\n manifest.":"在活动声明中设置的选项\r\n 显现。\r\n","android.content.SyncStats.numIoExceptions":"android.content.syncstats.numioexceptions\r\n","android.graphics.Rect.flattenToString()":"机器人。图形。长flattenToString()\r\n","android.content.Intent.getIntegerArrayListExtra(java.lang.String)":"android.content.intent.getIntegerarraylistextra（java.lang.string）\r\n","android.content.Context.registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)":"android.content.Context.RegisterReceiver（android.content.broadcastreceiver，android.content.intentfilter）\r\n","Postconcats the matrix with the specified scale.":"用指定的比例将矩阵贴上矩阵。\r\n","android.bluetooth.le.ScanCallback.onBatchScanResults(java.util.List)":"android.bluetooth.le.scancallback.onbatchscanresults（java.util.list）\r\n"," that will be notified if a user successfully chooses a target\n            component to handle an action in an ":" 如果用户成功选择目标，这将被通知\r\n            处理动作的组件\r\n","android.content.pm.PackageManager.FEATURE_VULKAN_HARDWARE_COMPUTE":"android.content.pm.packagemanager.feature_vulkan_hardware_compute\r\n","android.graphics.drawable.ClipDrawable":"android.graphics.drawable.clipdrable\r\n","Retrieve the package name of the application that installed a package.":"检索安装软件包的应用程序的包装名称。\r\n","android.content.Context.sendBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String)":"android.content.Context.SendBroadcastAsuser（android.content.intent，android.os.os.userhandle，java.lang.string）\r\n","android.content.Context.startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)":"android.content.context.startinstrumentation（android.content.componentname，java.lang.string，android.os.bundle）\r\n","android.bluetooth.BluetoothLeAudio.getConnectedDevices()":"android.bluetooth.bluetoothleaudio.getConnectedDevices（）\r\n","android.bluetooth.BluetoothProfile":"android.bluetooth.bluetoothprofile\r\n","android.bluetooth.BluetoothHealth.getConnectionState(android.bluetooth.BluetoothDevice)":"android.bluetooth.bluetoothhealth.getConnectionState（android.bluetooth.bluetoothdevice）\r\n","android.bluetooth.BluetoothHidDevice.ERROR_RSP_SUCCESS":"android.bluetooth.bluetoothhiddevice.Error_rsp_success\r\n","android.graphics.RectF.isEmpty()":"android.graphics.Rectf.isempty（）\r\n","Get the current value of end hyphen edit. -or- Set a end hyphen edit on the paint.":"获取End连字符编辑的当前值。 - 或 - 在油漆上设置末端连字符编辑。\r\n","android.content.Intent.ACTION_UMS_CONNECTED":"android.content.intent.action_ums_connected\r\n","Adds a loader to the list of loaders.":"将加载器添加到加载器列表中。\r\n","android.content.ContentResolver.query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, android.os.CancellationSignal)":"android.content.contentresolver.query（android.net.uri，java.lang.string []，java.lang.string，java.lang.string []\r\n","android.bluetooth.le.ScanResult.isLegacy()":"android.bluetooth.le.scanresult.islegacy（）\r\n","if the x, y, width, height values are\n         outside of the dimensions of the source bitmap, or width is <= 0,\n         or height is <= 0\n":"如果x，y，宽度，高度值为\r\n         在源位图或宽度的尺寸之外，<= 0，\r\n         或高度为<= 0\r\n\r\n","Used to indicate that the SyncAdapter experienced a hard error due to an error it\n            received from interacting with the storage layer.":"用来表明Syncadapter由于错误而出现困难\r\n            从与存储层的交互中接收。\r\n"," annotations describing content for\n            ":" 描述内容的注释\r\n            \r\n","android.bluetooth.BluetoothGattServer.sendResponse(android.bluetooth.BluetoothDevice, int, int, int, byte[])":"android.bluetooth.bluetoothgattserver.sendresponse（android.bluetooth.bluetoothdevice，int，int，int，int，byte []）\r\n","android.content.pm.ResolveInfo.nonLocalizedLabel":"android.content.pm.resolveinfo.no​​nlocalizedlabel\r\n","#getAlpha()":"#getalpha（）\r\n"," instance for managing occasional\n            background tasks.":" 偶尔管理的实例\r\n            背景任务。\r\n","android.content.pm.PackageManager.getSystemAvailableFeatures()":"android.content.pm.packagemanager.getSystemavailableFeatures（）\r\n","android.bluetooth.le.ScanResult.getSecondaryPhy()":"android.bluetooth.le.scanresult.getSecondaryphy（）\r\n","Retrieves metadata information for rights-protected content.":"检索元数据信息以获取权利保护的内容。\r\n","This class contains the list of alpha compositing and blending modes\n            that can be passed to ":"此类包含alpha合成和混合模式的列表\r\n            可以传递给\r\n","Recognize a gesture":"认识一个手势\r\n","android.database.sqlite.SQLiteDatabase.SQLITE_MAX_LIKE_PATTERN_LENGTH":"android.database.sqlite.sqlitedatabase.sqlite_max_like_pattern_length\r\n","if the locale could not be set.  The most common reason\n for this is that there is no collator available for the locale you requested.\n In this case the database remains unchanged.\n":"如果无法设置语言环境。最常见的原因\r\n 因为这是您要求的语言环境没有可用的碰撞器。\r\n 在这种情况下，数据库保持不变。\r\n\r\n","Returns true if the operation allows yielding the database to other transactions\n            if the database is contended.":"如果操作允许将数据库产生到其他交易，则返回true\r\n            如果争夺数据库。\r\n","Intent extra: An app split name.":"意图额外：应用程序拆分名称。\r\n","Size of the external media size used by the application.":"应用程序使用的外部媒体大小的大小。\r\n","Equivalent to":"相当于\r\n","android.graphics.Camera.rotate(float, float, float)":"Android.graphics.Camera.Rotate（浮子，浮点，浮点）\r\n","android.content.pm.PackageInstaller.ACTION_SESSION_COMMITTED":"android.content.pm.packageinstaller.action_session_committen\r\n","Create a PathMeasure object associated with the specified path object\n            (already created and specified).":"创建与指定路径对象关联的pathmeasure对象\r\n            （已经创建和指定）。\r\n","Returns whether this resolution represents the intent forwarder activity.":"返回该分辨率是否代表意图转发器活动。\r\n",": The device includes an ambient temperature sensor.":"：该设备包括环境温度传感器。\r\n"," for querying network usage stats.":" 用于查询网络使用统计数据。\r\n","Move the cursor to the first row.":"将光标移动到第一行。\r\n","Returns true if the sensor is a wake-up sensor.":"如果传感器是唤醒传感器，则返回true。\r\n","android.graphics.Outline.getRect(android.graphics.Rect)":"android.graphics.outline.getRect（android.graphics.Rect）\r\n","Return an iterator over the filter's actions.":"将迭代器返回过滤器的操作。\r\n","Requeries the cursor and reads the contents into the cache":"要求光标并将内容读取到缓存中\r\n","Disable pinned shortcuts, showing the user a custom error message when they try to select\n            the disabled shortcuts.":"禁用固定快捷方式，在尝试选择时向用户显示自定义错误消息\r\n            残疾快捷方式。\r\n","#ACTION_INSTALL_PACKAGE":"#action_install_package\r\n","Flag noting that this OBB is an overlay patch for a base OBB.":"标志注意到这个OBB是一个基础OBB的复盖补丁。\r\n","android.graphics.NinePatch.getName()":"android.graphics.ninepatch.getName（）\r\n","This is a user-defined constraint.":"这是用户定义的约束。\r\n","android.graphics.ColorMatrix.getArray()":"android.graphics.ColorMatrix.getArray()\r\n","Create an empty intent.":"创建一个空的意图。\r\n","android.bluetooth.BluetoothHealth.getDevicesMatchingConnectionStates(int[])":"android.bluetooth.bluetoothhealth.getDevicesMatchingConnectionStates（int []）\r\n","android.database.DatabaseUtils.readExceptionFromParcel(android.os.Parcel)":"android.database.databaseutils.ReadExceptionfromparcel（android.os.parcel）\r\n","android.content.ContentResolver.delete(android.net.Uri, java.lang.String, java.lang.String[])":"android.content.contentresolver.delete（android.net.uri，java.lang.string，java.lang.string []）\r\n","android.content.ClipboardManager.hasText()":"android.content.clipboardmanager.hastext（）\r\n","android.content.ContentProviderClient.applyBatch(java.lang.String, java.util.ArrayList)":"android.content.ContentProviderClient.ApplyBatch（java.lang.string，java.util.arraylist）\r\n","android.app.Activity activity":"Android.App.Activity活性\r\n","If this is set to true, then the resulting bitmap will allocate its\n pixels such that they can be purged if the system needs to reclaim\n memory.":"如果将其设置为true，则结果的位图将分配其\r\n 像素，如果系统需要回收，则可以清除它们\r\n 记忆。\r\n","android.content.Intent.ACTION_PACKAGE_ADDED":"android.content.intent.action_package_added\r\n","This is a duration-based constaint.":"这是基于持续时间的宪法。\r\n","\n          A permission that clients must have to make changes to the data \n          controlled by the content provider.\n        ":"\r\n          客户必须必须对数据进行更改的许可\r\n          由内容提供商控制。\r\n        \r\n","android.database.MatrixCursor.addRow(java.lang.Iterable)":"机器人。数据库。MatrixCursor.addRow（java。朗。可迭代）\r\n","android.content.ComponentName.ComponentName(android.content.Context, java.lang.Class)":"android.content.componentname.componentname（android.content.context，java.lang.class）\r\n","android.content.SearchRecentSuggestionsProvider.onCreate()":"android.content.searchRecentsuggestionsProvider.oncreate（）\r\n","android.graphics.drawable.RotateDrawable.setPivotYRelative(boolean)":"android.graphics.drawable.RotatedRawable.setpivotylative（boolean）\r\n","android.content.Context.unbindService(android.content.ServiceConnection)":"android.content.context.unbindservice（android.content.serviceconnection）\r\n","Called when the last reference to the object was released by\n a call to ":"当对象的最后一次引用由\r\n 打电话\r\n","Returns the color space encoded in the specified color long.":"返回指定颜色长的颜色空间。\r\n","android.graphics.fonts.FontFamily.getFont(int)":"android.graphics.fonts.fontfamily.getfont（int）\r\n","Checks whether an application is exempt from having its permissions be automatically revoked\n            when the app is unused for an extended period of time.":"检查申请是否免于自动撤销其权限\r\n            当该应用程序长时间未使用时。\r\n","android.content.pm.LabeledIntent.loadIcon(android.content.pm.PackageManager)":"android.content.pm.labeledintent.loadicon（android.content.pm.packagemanager）\r\n","android.content.pm.PackageManager.getActivityIcon(android.content.ComponentName)":"android.content.pm.packagemanager.getActivityicon（android.content.componentname）\r\n","Specifies tint color for this drawable.":"指定此drawable的色调颜色。\r\n","android.graphics.ImageFormat.YUV_422_888":"android.graphics.imageformat.yuv_422_888\r\n","After being instantiated, this is called to tell the content provider\n            about itself.":"实例化后，这被要求告诉内容提供商\r\n            关于自己。\r\n","Return a single item inside of the clip data.":"返回剪辑数据中的单个项目。\r\n","android.gesture.GestureStroke.GestureStroke(android.graphics.RectF, float, float[], long[])":"android.gesture.gestroestroke.gesturestroke（android.graphics.Rectf，float，float []，long []）\r\n","Implement this to support canonicalization of URIs that refer to your\n            content provider.":"实施此项以支持URI的规范化，指的是您的\r\n            内容提供商。\r\n","Create a new transition drawable with the specified list of layers.":"使用指定的图层列表创建一个新的过渡。\r\n","android.hardware.Camera.setPreviewDisplay(android.view.SurfaceHolder)":"android.hardware.camera.setpreviewdisplay（android.view.surfaceholder）\r\n","android.content.Intent.EXTRA_CHOOSER_TARGETS":"android.content.intent.extra_chooser_targets\r\n","New IntentFilter that matches a single action with no data.":"新的IntentFilter与没有数据的单个动作匹配。\r\n","android.graphics.Bitmap.getDensity()":"android.graphics.bitmap.getDensity（）\r\n","Return the underlying bitmap's density, as per\n            ":"返回基础图的密度，根据\r\n            \r\n","android.bluetooth.le.BluetoothLeScanner.startScan(java.util.List, android.bluetooth.le.ScanSettings, android.app.PendingIntent)":"android.bluetooth.le.bluetoothlethlescanner.startscan（java.util.list，android.bluetooth.le.le.le.scansettings，android.app.app.pendendentent）\r\n","Callback invoked when a notification or indication has been sent to\n            a remote device.":"将通知或指示发送到\r\n            远程设备。\r\n","Open a raw file descriptor to access (potentially type transformed)\n            data from a \"content:\" URI.":"打开一个原始文件描述符以访问（潜在类型转换）\r\n            来自“内容：” URI的数据。\r\n","android.graphics.Canvas.getMatrix()":"android.graphics.canvas.getmatrix（）\r\n","android.graphics.Canvas.drawArc(android.graphics.RectF, float, float, boolean, android.graphics.Paint)":"android.graphics.canvas.drawarc（android.graphics.Rectf，float，float，boolean，boolean，android.graphics.paint）\r\n","Restriction of type \"bool\".":"限制“ bool”类型。\r\n","Set the data this intent is operating on.":"设置此意图正在运行的数据。\r\n","android.content.pm.PackageManager.currentToCanonicalPackageNames(java.lang.String[])":"android.content.pm.packagemanager.currenttocanonicalpackagagenames（java.lang.string []）\r\n","android.content.res.Configuration.UI_MODE_TYPE_UNDEFINED":"机器人。内容。res.配置。UI_MODE_TYPE_UNDEFINED\r\n","android.content.pm.PackageStats.externalCacheSize":"android.content.pm.packagestats.externalcachesize\r\n","android.graphics.drawable.NinePatchDrawable":"android.graphics.drawable.ninepatchable\r\n"," to indicate the URI from which the local APK in the Intent\n            data field originated from.":" 指示本地apk在意图中的URI\r\n            数据字段起源于。\r\n","android.graphics.PointF.equals(float, float)":"android.graphics.pointf.Equals（浮动，浮点）\r\n","android.content.pm.ActivityInfo.getThemeResource()":"android.content.pm.activityinfo.getThemeresource（）\r\n","Convert RGB components to HSV.":"将RGB组件转换为HSV。\r\n","android.content.pm.LauncherApps.EXTRA_PIN_ITEM_REQUEST":"android.content.pm.launcherapps.extra_pin_item_request\r\n","android.content.Context.getAttributionTag()":"android.content.context.getAttributionTag（）\r\n","android.database.CursorJoiner":"android.database.cursorjoiner\r\n","Removes the rights associated with the given rights-protected content.":"删除与给定权利保护内容相关的权利。\r\n","Create an intent for a specific component with a specified action and data.":"使用指定的操作和数据为特定组件创建意图。\r\n","Returns if the provided drawable represents the default activity icon provided by the system.":"返回如果提供的绘制可绘制表示系统提供的默认活动图标。\r\n","android.graphics.Bitmap.DENSITY_NONE":"android.graphics.bitmap.dense_none\r\n","Recycles the TypedArray, to be re-used by a later caller.":"回收打字机，由后来的呼叫者重复使用。\r\n","Activity Action: Display an activity chooser, allowing the user to pick\n            what they want to before proceeding.":"活动动作：显示活动选择器，允许用户选择\r\n            他们要在进行之前想要什么。\r\n","Last time when any of the fields was updated.":"上一次更新了任何字段。\r\n","Call endRecording when the picture is built.":"构建图片时调用EndRecorting。\r\n","DrmStore.Action":"DRMSTORE.ACTION\r\n","android.content.pm.ShortcutInfo.getId()":"android.content.pm.shortcutinfo.getID（）\r\n","android.content.pm.PackageManager.getText(java.lang.String, int, android.content.pm.ApplicationInfo)":"android.content.pm.packagemanager.getText（java.lang.string，int，android.content.pm.applicationinfo）\r\n","Return an iterator over the filter's data types.":"将迭代器返回过滤器的数据类型。\r\n","Raw external storage was not requested by this app.":"此应用程序未要求原始的外部存储。\r\n","Register an observer that is called when changes happen to the contents\n            of the this cursors data set, for example, when the data set is changed via\n            ":"注册一个观察者，当内容发生变化时被调用\r\n            例如，当数据集通过通过\r\n            \r\n","android.content.Intent#CATEGORY_LAUNCHER":"android.content.intent＃category_launcher\r\n","Gradient is a sweep.":"渐变是扫荡。\r\n","Return whether a shortcut is cached.":"返回捷径是否缓存。\r\n","Enum for the ways a path may be filled\n":"枚举可能填充路径的方式\r\n\r\n","Return the context of the single, global Application object of the\n current process.":"返回单个全局应用对象的上下文\r\n 当前过程。\r\n","android.graphics.Canvas.quickReject(android.graphics.RectF)":"android.graphics.canvas.quickreject（android.graphics.Rectf）\r\n","android.graphics.Canvas.drawPoints(float[], android.graphics.Paint)":"android.graphics.canvas.drawpoints（float []，android.graphics.paint）\r\n","Returns the activity info for a given intent and user handle, if it resolves.":"如果可以解决，则返回给定意图和用户句柄的活动信息。\r\n","\n          The initial part of a path identifying the data subset or subsets \n          that permission can be granted for.\n        ":"\r\n          识别数据子集或子集的路径的初始部分\r\n          可以授予该许可。\r\n        \r\n","Packs the 3 component color defined by the specified red, green, blue and\n            alpha component values into a color long in the specified color space.":"包装由指定的红色，绿色，蓝色和\r\n            在指定的颜色空间中，alpha组件值为颜色长。\r\n","android.content.Intent.putExtra(java.lang.String, java.lang.CharSequence[])":"android.content.intent.putextra（java.lang.string，java.lang.charsequence []）\r\n","android.graphics.text.PositionedGlyphs.getGlyphX(int)":"android.graphics.text.positionedglyphs.getglyphx（int）\r\n","android.content.Intent.ACTION_CHOOSER":"android.content.intent.action_chooser\r\n","Returns the comparison result of the next row from each cursor.":"从每个光标返回下一行的比较结果。\r\n","Adds the specified MIME type to the list of MIME types this DRM plug-in supports.":"将指定的MIME类型添加到此DRM插件支持的MIME类型列表中。\r\n","Do not use this flag unless you are implementing your own\n top-level application launcher.":"除非您自己实施，否则请勿使用此标志\r\n 顶级应用程序启动器。\r\n","If set, the recipient of this Intent will be granted permission to\n perform read operations on the Uri in the Intent's data and any URIs\n specified in its ClipData. ":"如果设定，则将获得此意图的接收者许可\r\n 在意图数据和任何URI中对URI执行读取操作\r\n 在其Clipdata中指定。\r\n","android.content.pm.PackageManager.getPackageUid(java.lang.String, int)":"android.content.pm.packagemanager.getpackageuid（java.lang.string，int）\r\n","android.gesture.GestureStroke.clearPath()":"android.gesture.gesturestroke.clearpath（）\r\n","android.content.res.Configuration.setTo(android.content.res.Configuration)":"android.content.res.configuration.setto（android.content.res.configuration）\r\n","android.content.Intent.CATEGORY_MONKEY":"android.content.intent.category_monkey\r\n","android.content.Context.LAYOUT_INFLATER_SERVICE":"android.content.context.layout_inflater_service\r\n"," for querying and monitoring launchable apps across\n            profiles of a user.":" 用于查询和监视可启动的应用程序\r\n            用户的配置文件。\r\n","android.content.Intent.ACTION_BATTERY_OKAY":"android.content.intent.action_battery_okay\r\n","Returns the ShaderFactory used by this ShapeDrawable for requesting a\n            ":"返回此形状用于请求A\r\n            \r\n","android.graphics.HardwareRenderer.setLightSourceGeometry(float, float, float, float)":"android.graphics.hardwarerenderer.setlightsourcegegeemetry（浮点，浮点，浮点，浮点）\r\n","android.content.res.Resources.getDisplayMetrics()":"机器人。内容。资源。getDisplayMetrics（）\r\n","Sets the color of the ambient shadow that is drawn when the RenderNode has a positive Z or\n            elevation value and is drawn inside of a ":"设置RenderNode具有正Z或正Z时绘制的环境阴影的颜色\r\n            高程值，并在a的内部绘制 \r\n"," suitable for building an operation that will\n            invoke ":" 适用于建造将会的操作\r\n            调用\r\n","android.content.res.Configuration.COLOR_MODE_WIDE_COLOR_GAMUT_MASK":"android.content.res.configuration.color_mode_wide_color_gamut_mask\r\n","android.database.sqlite.SQLiteDatabase.beginTransaction()":"android.database.sqlite.sqlitedatabase.begintransaction（）\r\n","The MIME type for a clip holding an Intent.":"夹子的哑剧类型保持意图。\r\n","Insets the rectangle on all sides specified by the dimensions of ":"在由 \r\n","android.bluetooth.le.AdvertisingSetCallback.onPeriodicAdvertisingDataSet(android.bluetooth.le.AdvertisingSet, int)":"android.bluetooth.le.AdvertisingsetCallback.OnperiodicAcadvertisingDataSet（android.bluetooth.le.le..le.aptersingset，int）\r\n","Computes the matrix corresponding to the current transformation\n            and copies it to the supplied matrix object.":"计算与当前转换相对应的矩阵\r\n            并将其复制到提供的矩阵对象。\r\n","android.content.Context.WIFI_SERVICE":"android.content.context.wifi_service\r\n","A font weight value for the medium weight":"中等重量的字体重量值\r\n","android.graphics.Path.addOval(float, float, float, float, android.graphics.Direction)":"android.graphics.path.addoval（浮点，浮点，浮点，浮点，android.graphics.Direction）\r\n","android.graphics.Color.alpha(long)":"android.graphics.Color.alpha(long)\r\n","android.content.pm.SigningInfo.getSigningCertificateHistory()":"android.content.pm.signinginfo.getSigningCertificateHistory（）\r\n","android.bluetooth.le.ScanSettings.getLegacy()":"android.bluetooth.le..scansettings.getlegacy（）\r\n","Context#sendOrderedBroadcast(Intent, String)\n            Context.sendOrderedBroadcast":"上下文＃sendorderedBroadcast（Intent，String）\r\n            context.sendorderedBroadcast\r\n","android.drm.DrmManagerClient.setOnInfoListener(android.drm.OnInfoListener)":"android.drm.drmmanagerclient.setoninfolistener（android.drm.oninfolistener）\r\n","</td><td>":"</td> <td>\r\n","android.companion.CompanionDeviceManager.stopObservingDevicePresence(java.lang.String)":"android.companion.companiondevicemanager.stopobservingdevicepresence（java.lang.string）\r\n","android.content.RestrictionsManager.REQUEST_KEY_ICON":"android.content.strictionsmanager.request_key_icon\r\n","android.bluetooth.BluetoothManager.openGattServer(android.content.Context, android.bluetooth.BluetoothGattServerCallback)":"android.bluetooth.bluetoothmanager.opengattserver（android.content.context，android.bluetooth.bluetooth.bluetoothgattservercallcallback）\r\n","android.graphics.drawable.Drawable.getPadding(android.graphics.Rect)":"android.graphics.drawable.drawable.getPadding（android.graphics.Rect）\r\n","Retrieve the concrete component associated with the intent.":"检索与意图关联的混凝土组件。\r\n","android.gesture.GestureStroke.toPath(float, float, int)":"android.gesture.gesturestroke.topath（float，float，int）\r\n","Equivalent to openDatabase(file.":"等效于opendatabase（文件。\r\n","Retrieve all preferred activities, previously added with\n            ":"检索所有首选活动，以前添加\r\n            \r\n","android.database.sqlite.SQLiteDatabase.isDbLockedByOtherThreads()":"android.database.sqlite.sqlitedatabase.isdblockedbybythreads（）\r\n","Gets the y location of the camera.":"获取相机的位置。\r\n","android.database.CrossProcessCursorWrapper.CrossProcessCursorWrapper(android.database.Cursor)":"android.database.crossprocesscursorwrapper.crossprocesscursorwrapper（android.database.cursor）\r\n","android.bluetooth.le.ScanFilter":"android.bluetooth.le。scanfilter\r\n","Specifies the relative insets in pixels for the drawable at the\n            specified index.":"指定在像素中的相对插图\r\n            指定索引。\r\n","#CONFLICT_IGNORE":"#conflict_ignore\r\n","android.database.DatabaseUtils.blobFileDescriptorForQuery(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String[])":"android.database.databaseutils.blobfiledescriptorforquery（android.database.sqlite.sqlite.sqlitedatabase，java.lang.string，java.lang.string []）\r\n","android.graphics.text.MeasuredText.getCharWidthAt(int)":"android.graphics.text.measuredText.getCharwidthat（int）\r\n","Called by an application to request permission for an operation.":"由申请呼叫以请求操作许可。\r\n","android.graphics.ImageFormat.JPEG":"android.graphics.imageformat.jpeg\r\n","android.content.pm.ConfigurationInfo.GL_ES_VERSION_UNDEFINED":"android.content.pm.configurationinfo.gl_es_version_undefined\r\n","The BatteryState class is a representation of a single battery on a device.":"电池状态类是设备上单个电池的表示。\r\n","Return an integer associated with a particular resource ID.":"返回与特定资源ID关联的整数。\r\n","Callback when scan could not be started.":"扫描无法启动时回调。\r\n","Starts a page using the provided ":"使用提供的页面启动页面\r\n","A String[] holding e-mail addresses that should be delivered to.":"持有应交付的电子邮件地址的字符串[]。\r\n","android.content.Intent.EXTRA_PROCESS_TEXT":"android.content.intent.extra_process_text\r\n","android.database.sqlite.SQLiteDatabase.releaseMemory()":"android.database.sqlite.sqlitedatabase.ReleAsemory（）\r\n","DELETE_KEEP_DATA":"delete_keep_data\r\n","Gets the supported jpeg thumbnail sizes.":"获取支持的JPEG缩略图大小。\r\n","android.content.Context.sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)":"android.content.context.SendOrderedBroadcastAsuser（android.content.intent，android.os.userhandle，java.lang.string，android.content.broadcastreceiver，android.os.os.handler，android.os.handler捆）\r\n","android.graphics.Paint.getTextSize()":"android.graphics.paint.getTextsize（）\r\n","android.hardware.Camera.setZoomChangeListener(android.hardware.OnZoomChangeListener)":"android.hardware.camera.setzoomchangelistener（android.hardware.onzoomchangelistener）\r\n","android.content.pm.ShortcutManager.reportShortcutUsed(java.lang.String)":"android.content.pm.shortcutmanager.reportshortcutused（java.lang.string）\r\n","Allows client to specify a hint to the provider declaring which collation\n            to use when sorting values.":"允许客户指定提示的提示，以声明哪个整理\r\n            在排序值时使用。\r\n","android.graphics.ColorMatrix":"机器人。图形。[医]颜色矩阵\r\n","android.graphics.drawable.StateListDrawable.findStateDrawableIndex(int[])":"android.graphics.drawable.statelistdrawable.findstedrawableIndex（int []）\r\n","Creates an entry of type ":"创建类型的条目\r\n","android.graphics.fonts.Font.getGlyphBounds(int, android.graphics.Paint, android.graphics.RectF)":"android.graphics.fonts.font.getglyphbounds（int，android.graphics.paint，android.graphics.rectf）\r\n","android.graphics.Canvas.skew(float, float)":"机器人。图形。帆布。歪斜（浮动，浮动）\r\n","android.content.LocusId.LocusId(java.lang.String)":"android.content.locusid.locusid（java.lang.string）\r\n","Registers a callback to be invoked when an error occurs.":"发生错误时要调用的回调。\r\n","android.content.pm.ShortcutInfo.getLongLabel()":"android.content.pm.shortcutinfo.getlonglabel（）\r\n","Write the contents of the IntentFilter as an XML stream.":"将IntentFilter的内容写入XML流。\r\n","android.content.pm.ApplicationInfo.uiOptions":"android.content.pm.applicationinfo.uioptions\r\n","Add a new category to the intent.":"将新类别添加到意图中。\r\n","android.graphics.drawable.DrawableWrapper.setDrawable(android.graphics.drawable.Drawable)":"机器人。图形。可画的。DrawableWrapper。setDrawable（android。图形。可画的。Drawable）\r\n","Returns the size of the allocated memory used to store this bitmap's pixels.":"返回用于存储此位图像素的分配内存的大小。\r\n",", this\n            flag will only launch the intent if it resolves to a result that is not a browser.":"， 这个\r\n            FLAG仅在解决不是浏览器的结果中启动意图。\r\n","android.content.res.loader.ResourcesProvider":"android.content.res.res.loader.ResourcesProvider\r\n","android.content.pm.ApplicationInfo.MEMTAG_SYNC":"android.content.pm.applicationinfo.memtag_sync\r\n"," has not been\n granted permission to access a specific URI, throw ":" 一直没有\r\n 授予访问特定URI的许可，投掷\r\n","android.graphics.YuvImage.getStrides()":"android.graphics.yuvimage.getStrides（）\r\n","android.drm.DrmEvent.TYPE_ALL_RIGHTS_REMOVED":"android.drm.drmevent.type_all_rights_remaved\r\n","Insets the rectangle on all sides specified by the insets.":"插入由插入指定的所有边上的矩形。\r\n","android.graphics.Camera.Camera()":"android.graphics.camera.camera（）\r\n","android.content.res.TypedArray.getPositionDescription()":"android.content.res.typedarray.getPositionDescription（）\r\n","Set the paint's style, used for controlling how primitives'\n            geometries are interpreted (except for drawBitmap, which always assumes\n            Fill).":"设置油漆的样式，用于控制原语的方式\r\n            解释几何形状（除了drawbitMap，始终假设\r\n            充满）。\r\n","android.hardware.SensorEventListener.onSensorChanged(android.hardware.SensorEvent)":"android.hardware.sensoreventlistener.sensorchanged（android.hardware.sensorevent）\r\n","Intent extra: A ":"意图额外：\r\n","#setProjectionGreylist":"#setproctiongreylist\r\n","#STATE_CONNECTED":"#State_Connected\r\n","android.content.res.loader.ResourcesProvider.loadFromSplit(android.content.Context, java.lang.String)":"android.content.res.res.loader.resourcesprovider.loadfromsplit（android.content.context，java.lang.string）\r\n",") that is available.":"）可用。\r\n","android.content.Context.TEXT_SERVICES_MANAGER_SERVICE":"android.content.context.text_services_manager_service\r\n","android.bluetooth.le.ScanResult.getScanRecord()":"android.bluetooth.le.scanresult.getScanRecord（）\r\n","Create a picture by making a copy of what has already been recorded in\n            src.":"通过制作已经记录的内容来创建图片\r\n            src。\r\n","android.content.pm.PackageInstaller.openSession(int)":"android.content.pm.packageinstaller.opensession（int）\r\n","Move to the next contour in the path.":"移至路径中的下一个轮廓。\r\n","android.graphics.RenderNode.getInverseMatrix(android.graphics.Matrix)":"机器人。图形。RenderNode。getInverseMatrix（android。图形。矩阵)\r\n","Returns the drawable scaled by this ScaleDrawable.":"返回该缩放尺度的可绘制缩放。\r\n","android.database.CursorWindow.getBlob(int, int)":"android.database.cursorwindow.getBlob（int，int）\r\n","Constant representing combo keyboard and mouse subclass.":"常数表示组合键盘和鼠标子类。\r\n","android.graphics.Paint.END_HYPHEN_EDIT_INSERT_MAQAF":"android.graphics.paint.end_hyphen_edit_insert_maqaf\r\n","android.graphics.Canvas.saveLayerAlpha(android.graphics.RectF, int)":"机器人。图形。帆布。saveLayerAlpha（android。图形。RectF，int）\r\n","Weight of the area.":"该区域的重量。\r\n","\n            For example, AT+VGM=<args>.":"\r\n            例如，在+vgm = <args>。\r\n","Extended depth of field (EDOF).":"扩展的景深（EDOF）。\r\n","implementation of PackageStats associated with a application package.":"与应用程序软件包关联的PackageStats的实现。\r\n","android.content.ContentProvider.refresh(android.net.Uri, android.os.Bundle, android.os.CancellationSignal)":"android.content.contentprovider.refresh（android.net.uri，android.os.bundle，android.os.os.cancellationsignal）\r\n","#getScaledWidth(int)":"#getScaledWidth（int）\r\n","#MATCH_CATEGORY_MASK":"#match_category_mask\r\n","android.content.ContentProviderOperation.isDelete()":"android.content.contentProvideroperation.isdelete（）\r\n","android.content.res.Resources.removeLoaders(android.content.res.loader.ResourcesLoader)":"android.content.res.resources.removeloaders（android.content.res.res.res.roader.resourcesloader）\r\n","Stops the face detection.":"停止面部检测。\r\n","Create FontStyle with specific weight and italic":"创建具有特定重量和斜体的Fontstyle\r\n","android.content.ContentProviderClient.delete(android.net.Uri, android.os.Bundle)":"android.content.contentproviderclient.delete（android.net.uri，android.os.bundle）\r\n","Value for break strategy indicating simple line breaking.":"突破策略的价值，表示简单的折断。\r\n","android.graphics.RectF.readFromParcel(android.os.Parcel)":"android.graphics.Rectf.ReadFromParcel（android.os.parcel）\r\n","android.gesture.GestureUtils.computeOrientedBoundingBox(java.util.ArrayList)":"android.gesture.gestureutils.computeoredboundingbox（java.util.arraylist）\r\n","android.graphics.drawable.NinePatchDrawable.NinePatchDrawable(android.content.res.Resources, android.graphics.Bitmap, byte[], android.graphics.Rect, java.lang.String)":"android.graphics.drawable.ninepatchable.ninepatchdrawable（android.content.res.res.resources，android.graphics.bitmap，byte []，android.graphics.Rect，java.lang.lang.string）\r\n","The rights-protected content can be set as a ringtone.":"可以将受权保护的内容设置为铃声。\r\n","\n            and contains a string array of all of the components that have changed.":"\r\n            并包含所有已更改的组件的字符串数组。\r\n","Callback for camera errors.":"相机错误的回调。\r\n","android.content.pm.ShortcutInfo.isDeclaredInManifest()":"android.content.pm.shortcutinfo.isdeclaredinmanifest（）\r\n","android.content.Context.UI_MODE_SERVICE":"android.content.context.ui_mode_service\r\n","android.graphics.Path.quadTo(float, float, float, float)":"android.graphics.path.quadto（浮子，浮点，浮点，浮点）\r\n","android.graphics.Paint.getColor()":"android.graphics.paint.getColor（）\r\n","android.drm.DrmEvent":"Android.drm.drmevent\r\n","android.content.res.Configuration.UI_MODE_TYPE_DESK":"机器人。内容。res.配置。UI_MODE_TYPE_DESK\r\n","android.content.pm.ApplicationInfo.isProfileable()":"android.content.pm.applicationinfo.isprofilable（）\r\n","Gets the height of the RenderNode, which is the bottom - top.":"获取RenderNode的高度，即bottom-top。\r\n","Create a new compose shader, given shaders A, B, and a combining mode.":"创建一个新的组合着色器，给定着色器A，B和一个组合模式。\r\n","Retrieve extended data from the intent.":"从意图中检索扩展数据。\r\n",": The device has biometric hardware to perform face authentication.":"：该设备具有生物识别硬件来执行面部身份验证。\r\n","android.content.Context.startActivities(android.content.Intent[])":"android.content.context.startactivities（android.content.intent []）\r\n","A color filter can be used with a ":"滤色器可与 \r\n","Return true if the region contains a single rectangle":"如果区域包含一个矩形，则返回true\r\n","android.database.sqlite.SQLiteQueryBuilder.setDistinct(boolean)":"android.database.sqlite.sqlitequerybuilder.setdistinct（boolean）\r\n","Used to indicate to the SyncManager that future sync requests that match the request's\n            Account and authority should be delayed until a time in seconds since Java epoch.":"用于向SyncManager指示未来同步请求与请求的匹配\r\n            自Java时期以来，应将帐户和权限推迟到几秒钟内的时间。\r\n","Gets the maximum number of metering areas supported.":"获得最大支持的计量区域数量。\r\n","android.graphics.drawable.Drawable.getOpticalInsets()":"android.graphics.drawable.drawable.getopticalinsets（）\r\n","Creates a new <code>Color</code> in the ":"在\r\n","android.content.Intent.CATEGORY_VR_HOME":"android.content.intent.category_vr_home\r\n","The UID that is accessing the permission protected data.":"访问权限受保护数据的UID。\r\n","if format is not support; width or height <= 0; or yuv is\n                null.\n":"如果格式不支持；宽度或高度<= 0;或Yuv是\r\n                无效的。\r\n\r\n","android.drm.DrmRights.getData()":"android.drm.drmrights.getdata（）\r\n","Reads a Integer out of a field in a Cursor and writes it to a Map.":"在光标中读取一个整数，然后将其写入地图。\r\n","Retrieve underlying AssetManager storage for these resources.":"检索这些资源的基础AssetManager存储。\r\n","Drawable subclass that wraps a Picture, allowing the picture to be used\n            wherever a Drawable is supported.":"绘制图片的可绘制子类，允许使用图片\r\n            无论支持绘制的地方。\r\n","android.content.RestrictionEntry.TYPE_BOOLEAN":"android.content.grestrictionerentry.type_boolean\r\n","A constant string describing an uncalibrated gyroscope sensor type.":"描述未校准的陀螺仪传感器类型的常数字符串。\r\n",". -or- When enabled, verify that all untrusted SQL conforms to a restricted SQL\n            grammar.":"。 - 或 - 启用后，验证所有不信任的SQL是否符合受限的SQL\r\n            语法。\r\n","android.database.DatabaseUtils.writeExceptionToParcel(android.os.Parcel, java.lang.Exception)":"android.database.databaseutils.writeexceptiontoparcel（android.os.parcel，java.lang.exception）\r\n","Returns the advertising flags indicating the discoverable mode and capability of the device.":"返回表示设备的可发现模式和功能的广告标志。\r\n","android.hardware.Camera.setPreviewCallbackWithBuffer(android.hardware.PreviewCallback)":"android.hardware.camera.setpreviewcallbackwithbuffer（android.hardware.previewcallback）\r\n","Returns the number of layers contained within this layer drawable.":"返回该层中包含的层数。\r\n","android.graphics.Path.isConvex()":"android.graphics.path.isconvex（）\r\n","Returns true if the package has declared in its manifest that it is a\n            runtime resource overlay.":"如果包裹在其清单中声明它是一个\r\n            运行时资源覆盖。\r\n","android.graphics.drawable.StateListDrawable.StateListDrawable(android.graphics.drawable.StateListState)":"android.graphics.drawable.statelistdrawable.statelistdrawable（android.graphics.drawable.stateliststate）\r\n","if the are transactions is in progress\n when this method is called.\n":"如果正在进行交易\r\n 当调用此方法时。\r\n\r\n","Open a private file associated with this Context's application package\n for writing.":"打开与此上下文的应用程序包相关的私人文件\r\n 写作。\r\n","Set the path to the boundary of the region.":"将通往区域边界的路径设置。\r\n","that indicates that the activity\n can itself handle changes to the IMSI MNC. ":"这表明活动\r\n 本身可以处理IMSI MNC的更改。\r\n","Broadcast Action: Request the media scanner to scan a file and add it to\n            the media database.":"广播操作：请求媒体扫描仪扫描文件并将其添加到\r\n            媒体数据库。\r\n","android.graphics.Paint.setTextSize(float)":"android.graphics.paint.settextsize（float）\r\n","#updateFrom(Configuration)":"#updatefrom（配置）\r\n",": enable hinting.":"：启用暗示。\r\n","Return a List of all packages that are installed for the current user.":"返回为当前用户安装的所有软件包的列表。\r\n","if the database file could not be opened.":"如果无法打开数据库文件。\r\n","android.graphics.RenderNode.setElevation(float)":"机器人。图形。RenderNode。setElevation(浮动)\r\n","Standard CIE 1931 2° illuminant C, encoded in xyY.":"标准CIE 1931 2°照明c，用XYY编码。\r\n","android.content.pm.PackageManager.getDrawable(java.lang.String, int, android.content.pm.ApplicationInfo)":"android.content.pm.packagemanager.getDrawable（java.lang.string，int，android.content.pm.applicationinfo）\r\n","android.graphics.RenderEffect.createBlendModeEffect(android.graphics.RenderEffect, android.graphics.RenderEffect, android.graphics.BlendMode)":"android.graphics.rendereffect.createblendmodeeffect（android.graphics.rendereffect，android.graphics.renderefect，android.graphics.blendmode）\r\n","neverForLocation":"永无止境\r\n","Bundle#putParcelableArray":"束＃Putparcelablearray\r\n","Create an Item consisting of an arbitrary Intent.":"创建一个由任意意图组成的项目。\r\n","android.bluetooth.le.ScanResult.getAdvertisingSid()":"android.bluetooth.le.scanresult.getAdvertisingsId（）\r\n","Return the string array associated with a particular resource ID.":"返回与特定资源ID关联的字符串数组。\r\n","Returns the rotation value for this display list around the Z axis, in degrees.":"返回此显示列表围绕Z轴的旋转值，以度为单位。\r\n","android.content.ContentResolver.cancelSync(android.content.SyncRequest)":"android.content.contentresolver.cancelsync（android.content.syncrequest）\r\n","android.graphics.Color.isWideGamut()":"android.graphics.color.iswidegamut（）\r\n","android.os.UserManager":"android.os.usermanager\r\n","android.hardware.Sensor.isDirectChannelTypeSupported(int)":"android.hardware.sensor.isdirectChannelTypesupported（int）\r\n","Sets the rotation value for the display list around the Y axis.":"设置Y轴周围显示列表的旋转值。\r\n","android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_CAMERA":"android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_CAMERA\r\n","Retrieve styled attribute information in this Context's theme.":"在此上下文主题中检索样式的属性信息。\r\n","android.content.ContentResolver.requestSync(android.content.SyncRequest)":"android.content.contentresolver.requestsync（android.content.syncrequest）\r\n","Broadcast Action:  External power has been connected to the device.":"广播动作：外部电源已连接到设备。\r\n","This is a date-based constraint.":"这是基于日期的约束。\r\n",": The device has a Global Positioning System\n            receiver and can report precise location.":"：该设备具有全球定位系统\r\n            接收器，可以报告精确的位置。\r\n","SHA256 hash computed over all file bytes.":"SHA256哈希在所有文件字节上计算。\r\n","New empty IntentFilter.":"新的空意向滤波器。\r\n","android.graphics.NinePatch.isNinePatchChunk(byte[])":"android.graphics.ninepatch.isninepatchchunk（byte []）\r\n","#UNKNOWN_LENGTH":"#UNKNOWN_LENGTH\r\n","android.gesture.GestureUtils.spatialSampling(android.gesture.Gesture, int, boolean)":"android.gesture.gestureutils.spatials采样（android.gesture.gesture，int，boolean）\r\n",", corresponding to <code>personalInfo</code>\n            value of ":"，对应于<code> personalInfo </code>\r\n            的价值\r\n","android.graphics.fonts.FontStyle.FONT_WEIGHT_BLACK":"android.graphics.fonts.fontstyle.font_weight_black\r\n","android.graphics.drawable.NinePatchDrawable.setTargetDensity(int)":"android.graphics.drawable.ninepatchable.settargetdente（int）\r\n","android.database.ContentObserver.onChange(boolean, android.net.Uri)":"android.database.contentobserver.onchange（boolean，android.net.uri）\r\n","android.content.res.AssetFileDescriptor.createInputStream()":"机器人。内容。res.AssetFileDescriptor。创建输入流()\r\n","Postconcats the matrix with the specified skew.":"用指定的偏斜后矩阵后贴上矩阵。\r\n","A filter for Bluetooth LE devices":"蓝牙LE设备的过滤器\r\n"," that indicates that the activity\n            can itself handle changes to font weight.":" 这表明活动\r\n            本身可以处理字体重量的更改。\r\n","#startQuery":"#startquery\r\n","Gets the current antibanding setting.":"获取当前的抗体设置。\r\n","ScanSettings#CALLBACK_TYPE_FIRST_MATCH":"SCANSETTINGS＃CALLBACK_TYPE_FIRST_MATCH\r\n","Called immediately before commiting the transaction.":"在进行交易之前立即打电话。\r\n"," on a ":" 在\r\n"," where the application can\n place cache files it owns.":" 应用程序可以在哪里\r\n 放置它拥有的缓存文件。\r\n","android.graphics.Matrix.Matrix(android.graphics.Matrix)":"android.graphics.matrix.matrix（android.graphics.matrix）\r\n","android.graphics.Canvas.setDensity(int)":"android.graphics.canvas.setdenty（int）\r\n","Sets the clockwise rotation angle in degrees relative to the\n orientation of the camera.":"相对于\r\n 相机的方向。\r\n","Multi-plane Android YUV 422 format":"多平面Android YUV 422格式\r\n","Creates a cursor wrapper.":"创建一个光标包装器。\r\n","android.content.Intent.ACTION_BUG_REPORT":"android.content.intent.action_bug_report\r\n","Called after flush() is completed.":"在flush（）完成后打电话完成。\r\n","android.content.pm.PackageManager.checkPermission(java.lang.String, java.lang.String)":"android.content.pm.packagemanager.checkpermission（java.lang.string，java.lang.string）\r\n","[Da, Sc * Da + (1 - Sa) * Dc] ":"[da，sc * da +（1 -sa） * dc]\r\n","android.graphics.drawable.ShapeDrawable.inflateTag(java.lang.String, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet)":"android.graphics.drawable.shapetrawable.inflatetag（java.lang.string，android.content.res.res.res.resources，org.xmlpull.v1.xmlpullparser，android.util.util.attributeset）\r\n","Save the canvas state, draw the picture, and restore the canvas state.":"保存画布状态，绘制图片并恢复画布状态。\r\n","Close this object and release any resources associated with\n it.":"关闭此对象并发布与\r\n 它。\r\n","android.content.pm.PackageManager.addPermissionAsync(android.content.pm.PermissionInfo)":"android.content.pm.packagemanager.addpermissionsasync（android.content.pm.permissioninfo）\r\n","Create a drawable from file path name.":"创建一个从文件路径名绘制的。\r\n","Indicates whether anti-aliasing is enabled for this drawable.":"指示该绘制是否启用了抗缩放。\r\n","Returns the value of the alpha component in the range \\([0.":"Returns the value of the alpha component in the range \\([0.\r\n","Returns the zero-based index for the given column name, or throws\n ":"返回给定列名的从零开始的索引，或抛出\r\n \r\n","#CLASSIFICATION_COMPLETE":"#classification_complete\r\n","Saves the camera state.":"保存相机状态。\r\n","android.bluetooth.le.ScanRecord.getServiceData(android.os.ParcelUuid)":"android.bluetooth.le.scanrecord.getServicedata（android.os.parceluuid）\r\n","android.hardware.Sensor.getMaxDelay()":"android.hardware.sensor.getmaxdelay（）\r\n","Chop the path into lines of segmentLength, randomly deviating from the\n            original path by deviation.":"将路径切成分段长度，随机偏离\r\n            偏差的原始路径。\r\n","android.content.pm.ShortcutInfo.DISABLED_REASON_VERSION_LOWER":"android.content.pm.shortcutinfo.disabled_reason_version_lower\r\n","Battery is charging.":"电池正在充电。\r\n","android.graphics.Rect.union(int, int, int, int)":"android.graphics.Rect.union（int，int，int，int）\r\n","Close the current contour.":"关闭当前轮廓。\r\n","Returns the unique ID of the source font data.":"返回源字体数据的唯一ID。\r\n","Load the gesture library":"加载手势库\r\n","android.content.res.Configuration.uiMode":"机器人。内容。res.配置。uiMode,uiMode\r\n","A String[] holding e-mail addresses that should be blind carbon copied.":"符合电子邮件地址的字符串[]应该复制盲碳地址。\r\n","Delete an existing shared preferences file.":"删除现有的共享首选项文件。\r\n","android.content.pm.ComponentInfo.exported":"android.content.pm.com.ponentinfo.exported\r\n","Thrown if the resources for application\n matching the given intent could not be loaded.":"如果申请资源\r\n 匹配给定的意图无法加载。\r\n","Set a long value in the preferences editor, to be written back once\n ":"在首选项编辑器中设置长时间的价值，将其写回一次\r\n \r\n","android.graphics.drawable.LayerDrawable.findDrawableByLayerId(int)":"android.graphics.drawable.layerdrawable.finddrawablebylayerid（int）\r\n","android.graphics.Canvas":"Android.graphics.CANVAS\r\n","Called to notify the client when the proxy object has been\n connected to the service.":"在代理对象是在何时通知客户的\r\n 连接到服务。\r\n","android.content.pm.ShortcutManager.createShortcutResultIntent(android.content.pm.ShortcutInfo)":"android.content.pm.shortcutmanager.createshortcutresultintent（android.content.pm.shortcutinfo）\r\n","#setPivotX(float)":"#setPivotX（浮点数）\r\n","Specifies the insets in pixels for the drawable at the specified index.":"指定在指定索引上绘制的像素中的插图。\r\n","#registerComponentCallbacks(ComponentCallbacks)":"#RegisterComponentCallbacks（ComponentCallbacks）\r\n","[Sa * (1 - Da), Sc * (1 - Da)] ":"[sa *（1 -da），sc *（1 -da）]\r\n","Detailed string representation of the status, including raw details that\n            are useful for debugging.":"状态的详细字符串表示，包括原始细节\r\n            对于调试很有用。\r\n",", and the feature version will indicate what\n            level of optional compute features that device supports beyond the Vulkan 1.":"，并且功能版本将指示什么\r\n            设备支持Vulkan 1以外的可选计算功能级别。\r\n","android.bluetooth.BluetoothGattDescriptor.PERMISSION_WRITE":"android.bluetooth.bluetoothgattdescriptor.permission_write\r\n","Creates a <code>DrmErrorEvent</code> object with the specified parameters.":"使用指定参数创建<code> drmerrorevent </code>对象。\r\n","This behaves the same as save(), but in addition it allocates and\n            redirects drawing to an offscreen bitmap.":"这与save()的行为相同，但除此之外，它还分配和\r\n            将绘图重定向到屏幕外位图。\r\n","Broadcast Action:  External media is present and mounted at its mount point.":"广播动作：外部媒体存在并安装在其安装点。\r\n","Key for request approval button label contained in the request bundle.":"请求捆绑包中包含的请求批准按钮标签的键。\r\n","android.content.AsyncQueryHandler.startInsert(int, java.lang.Object, android.net.Uri, android.content.ContentValues)":"android.content.asyncqueryhandler.startinsert（int，java.lang.object，android.net.uri，android.content.contentvalues）\r\n","android.graphics.Matrix.invert(android.graphics.Matrix)":"android.graphics.matrix.invert（android.graphics.matrix）\r\n","android.content.UriMatcher.addURI(java.lang.String, java.lang.String, int)":"android.content.urimatcher.adduri（java.lang.string，java.lang.string，int）\r\n"," intent.":" 意图。\r\n"," on a\n            ":" 在\r\n            \r\n","\n          A user-readable label for the provider.\n        ":"\r\n          提供商的用户可读标签。\r\n        \r\n","RestrictionEntry#TYPE_INTEGER":"限制性＃type_integer\r\n","android.database.sqlite.SQLiteStatement.simpleQueryForBlobFileDescriptor()":"android.database.sqlite.sqlitestatement.simplequeryforblobfiledescriptor（）\r\n","if the method fails (for example, if the surface\n     texture is unavailable or unsuitable).\n":"如果方法失败（例如，如果表面\r\n     纹理不可用或不合适）。\r\n\r\n","android.content.pm.ResolveInfo.isCrossProfileIntentForwarderActivity()":"android.content.pm.resolveinfo.iscrossprofileintentforwarderactivity（）\r\n","android.graphics.drawable.Drawable.copyBounds(android.graphics.Rect)":"android.graphics.drawable.drawable.copybounds（android.graphics.Rect）\r\n","android.drm.DrmInfoStatus":"Android.drm.drminfostatus\r\n","android.content.BroadcastReceiver.getDebugUnregister()":"android.content.broadcastreceiver.getdebugunregister（）\r\n","BluetoothGatt#discoverServices":"Bluetoothgatt＃Discoverservices\r\n","android.graphics.fonts.FontStyle.FONT_WEIGHT_MAX":"android.graphics.fonts.fontstyle.font_weight_max\r\n","android.content.Context.getColorStateList(int)":"android.content.context.getColorStateList（int）\r\n","Restriction of type \"bundle_array\".":"限制“ bundle_array”类型。\r\n","android.content.res.Configuration.UI_MODE_NIGHT_MASK":"机器人。内容。res.配置。UI_MODE_NIGHT_MASK\r\n","android.graphics.drawable.ShapeDrawable.setAlpha(int)":"android.graphics.drawable.shapeprawable.setalpha（int）\r\n","Completely replace the extras in the Intent with the extras in the\n            given Intent.":"用在\r\n            有意图。\r\n","android.database.sqlite.SQLiteProgram.bindNull(int)":"android.database.sqlite.sqliteprogram.bindnull（int）\r\n","Interface for monitoring the state of an application service.":"用于监视应用程序服务状态的接口。\r\n","android.drm.DrmManagerClient.acquireRights(android.drm.DrmInfoRequest)":"android.drm.drmmanagerclient.acquirerights（android.drm.drminforequest）\r\n","android.database.sqlite.SQLiteQueryBuilder.isStrict()":"android.database.sqlite.sqlitequerybuilder.isstrict（）\r\n","android.content.RestrictionEntry.setChoiceValues(android.content.Context, int)":"android.content.resterriceentry.setchoicevalues（android.content.context，int）\r\n","Implement this to handle requests to insert a new row.":"实施此操作以处理请求以插入新行。\r\n","Return the default color in this ":"在此返回默认颜色\r\n","#ACTION_TIMEZONE_CHANGED":"#action_timezone_changed\r\n","android.graphics.Matrix.preScale(float, float)":"android.graphics.matrix.prescale（float，float）\r\n","Broadcast sent to the parent user when an associated profile has stopped.":"当关联的配置文件停止时，已发送给家长用户的广播。\r\n","How frequently the sync should be scheduled, in seconds.":"在几秒钟内应安排同步的频率。\r\n","android.hardware.Sensor.isWakeUpSensor()":"android.hardware.sensor.iswakeupsensor（）\r\n","android.R.styleable#AndroidManifestUsesPermission\n            &lt;uses-permission&gt;":"Android.r.Stylable＃AndroidManifestSperspersermiss\r\n            ＆lt;用法运行＆gt;\r\n","android.content.ContentValues.ContentValues()":"android.content.contentvalues.contentvalues（）\r\n","android.hardware.BatteryState.STATUS_UNKNOWN":"android.hardware.batterystate.status_unknown\r\n","Open a GATT Server\n            The callback is used to deliver results to Caller, such as connection status as well\n            as the results of any other GATT server operations.":"打开GATT服务器\r\n            回调用于将结果传递给呼叫者，例如连接状态以及\r\n            作为任何其他Gatt服务器操作的结果。\r\n","android.database.MatrixCursor":"机器人。数据库。[医]母性动物\r\n","The Join specifies the treatment where lines and curve segments\n join on a stroked path.":"联接指定线条和曲线段的处理\r\n 加入抚摸道路。\r\n","\n            resources will be loaded from this package, rather than the one\n            containing the resolved component.":"\r\n            资源将从此软件包中加载，而不是一个\r\n            包含已解决的组件。\r\n","Override this in your subclass to change appearance if you vary based on\n            the bounds.":"如果您根据您的子类别，则在您的子类中覆盖这一点\r\n            边界。\r\n","Distance from top of the strike-through line to the baseline in pixels.":"从直线直线到基线的距离。\r\n"," for\n            interacting with the vibration hardware.":" 为了\r\n            与振动硬件交互。\r\n","A helper class to help make handling asynchronous ":"助手课，以帮助使操纵异步\r\n","Helper for getFlags(), returning true if FAKE_BOLD_TEXT_FLAG bit is set -or- Helper for setFlags(), setting or clearing the FAKE_BOLD_TEXT_FLAG bit":"getflags（）的助手，如果fack_bold_text_flag位设置为-or- helper for setFlags（），设置或清除facky_bold_text_flag lit，则返回true。\r\n","Retrieve a floating-point value for a particular resource ID.":"检索特定资源ID的浮点值。\r\n"," to indicate that the calling\n            package verifier allows the installation to proceed.":" 指示呼叫\r\n            软件包验证器允许安装继续。\r\n","android.graphics.PointF.readFromParcel(android.os.Parcel)":"android.graphics.pointf.readfromparcel（android.os.parcel）\r\n","Calculates the total length of the gesture.":"计算手势的总长度。\r\n","Return the distance below (positive) the baseline (descent) based on the\n            current typeface and text size.":"根据基线（正）返回基线（下降）的距离\r\n            当前字体和文本大小。\r\n","android.database.sqlite.SQLiteQueryBuilder.setCursorFactory(android.database.sqlite.CursorFactory)":"android.database.sqlite.sqlitequerybuilder.setCursorFactory（android.database.sqlite.cursorFactory）\r\n","Standard CIE 1931 2° illuminant D60, encoded in xyY.":"标准CIE 1931 2°照明D60，用XYY编码。\r\n","Retrieve any special flags associated with this intent.":"检索与此意图相关的任何特殊标志。\r\n","android.bluetooth.BluetoothGattCallback.onConnectionStateChange(android.bluetooth.BluetoothGatt, int, int)":"android.bluetooth.bluetoothgattcallback.onconnectionstatechange（android.bluetooth.bluetoothgatt，int，int）\r\n","A subclass of shader that returns the composition of two other shaders, combined by\n                an ":"着色器子类返回其他两个着色器的组成，结合\r\n                一个\r\n","android.content.IntentSender.getTargetPackage()":"android.content.intents.getTargetPackage（）\r\n","Gets a value and converts it to an Integer.":"获取一个值并将其转换为整数。\r\n","android.content.ContentResolver.openOutputStream(android.net.Uri, java.lang.String)":"android.content.contentresolver.openoutputstream（android.net.uri，java.lang.string）\r\n","Returns the path's convexity, as defined by the content of the path.":"返回路径的凸度，如路径的内容所定义。\r\n","\n            color space into the specified destination color space.":"\r\n            color space into the specified destination color space.\r\n","android.database.DatabaseUtils.cursorLongToContentValues(android.database.Cursor, java.lang.String, android.content.ContentValues)":"android.database.databaseutils.cursorlongtocontentvalues（android.database.cursor，java.lang.string，android.content.contentvalues）\r\n","Return all static (manifest) shortcuts from the caller app.":"返回呼叫者应用程序中的所有静态（清单）快捷方式。\r\n",". -or- Sets the integer value of the entry when the type is ":"。 - 或 - 设置类型为输入的整数值\r\n","BlendMode#SRC_IN":"BlendMode#SRC_IN\r\n","Control whether or not the SQLiteDatabase is made thread-safe by using locks\n            around critical sections.":"控制是否使用锁来制作SQLitedAtabase的线程安全\r\n            围绕关键部分。\r\n","android.graphics.Outline.canClip()":"android.graphics.outline.canclip（）\r\n","Free the native object associated with this bitmap, and clear the\n            reference to the pixel data.":"释放与此位图关联的本机对象，并清除\r\n            引用像素数据。\r\n","Concat this colormatrix with the specified postmatrix.":"Concat this colormatrix with the specified postmatrix.\r\n"," provide a way to adjust periodic\n            advertising preferences for each Bluetooth LE advertising set.":" 提供调整周期性的方法\r\n            每个蓝牙LE广告集的广告偏好。\r\n","Returns a map of service UUID and its corresponding service data.":"返回服务UUID及其相应服务数据的地图。\r\n","android.content.pm.PermissionInfo.FLAG_IMMUTABLY_RESTRICTED":"android.content.pm.permissioninfo.flag_immutasie_renter\r\n","android.content.ContentResolver.SYNC_EXTRAS_FORCE":"android.content.contentresolver.sync_extras_force\r\n","android.content.ContentProviderOperation.isAssertQuery()":"android.content.contentProvideroperation.isassertquery（）\r\n","android.graphics.drawable.GradientDrawable.setGradientRadius(float)":"android.graphics.drawable.gradientdrawable.setgradientradius（float）\r\n","android.graphics.RectF.intersect(android.graphics.RectF)":"android.graphics.Rectf.Intersect（android.graphics.Rectf）\r\n","android.graphics.RenderNode.getScaleY()":"机器人。图形。RenderNode。盖斯卡利()\r\n","Called as near as possible to the moment when a photo is captured\n from the sensor.":"捕获照片的那一刻，尽可能接近\r\n 从传感器。\r\n","Called when sensor values have changed.":"当传感器值更改时调用。\r\n","android.graphics.ColorMatrixColorFilter.ColorMatrixColorFilter(android.graphics.ColorMatrix)":"android.graphics.ColorMatrixColorFilter.ColorMatrixColorFilter(android.graphics.ColorMatrix)\r\n","Class for handling cross profile operations.":"处理交叉配置运营的课程。\r\n","android.content.Context.FINGERPRINT_SERVICE":"android.content.context.fingerprint_service\r\n","android.content.res.TypedArray.getValue(int, android.util.TypedValue)":"android.content.res.typedarray.getValue（int，android.util.typedvalue）\r\n","Retrieve the value of an attribute in the Theme.":"检索主题中属性的值。\r\n","android.content.pm.ShortcutInfo.getRank()":"android.content.pm.shortcutinfo.getrank（）\r\n","android.content.res.TypedArray.getFont(int)":"android.content.res.typedarray.getfont（int）\r\n","android.content.Intent.putExtra(java.lang.String, long)":"android.content.intent.putextra（java.lang.string，长）\r\n","Set to true if this component is available for use by other applications.":"如果此组件可供其他应用程序使用，则设置为true。\r\n","An exception for a case when a given device was not\n            ":"当给定设备不在的情况下的例外\r\n            \r\n","Base class defines a factory object that is called each time the drawable\n is resized (has a new width or height).":"基类定义了每次可绘制的工厂对象\r\n 调整大小（具有新的宽度或高度）。\r\n","android.bluetooth.BluetoothGattDescriptor.getPermissions()":"android.bluetooth.bluetoothgattdescriptor.getMissions（）\r\n","android.graphics.drawable.AnimatedImageDrawable.isRunning()":"android.graphics.drawable.animatedimatedimatedrawable.isrunning（）\r\n","android.graphics.ImageFormat.RAW12":"android.graphics.imageformat.raw12\r\n","Headset state when SCO audio is connected.":"连接SCO音频时耳机状态。\r\n","android.graphics.Region.Region()":"android.graphics.gregion.gregion（）\r\n","#getObbDir()":"#getObbdir（）\r\n","android.content.pm.PackageItemInfo.loadLabel(android.content.pm.PackageManager)":"android.content.pm.packageiteminfo.loadlabel（android.content.pm.packagemanager）\r\n","android.content.IntentFilter.actionsIterator()":"android.content.intentfilter.actionsiterator（）\r\n","Returns the dimensions for EXIF thumbnail in Jpeg picture.":"在JPEG图片中返回Exif缩略图的尺寸。\r\n","Returns a localized string from the application's package's\n            default string table.":"从应用程序软件包的返回本地化字符串\r\n            默认字符串表。\r\n","android.database.AbstractWindowedCursor.isBlob(int)":"android.database.abstractwindowedcursor.isblob（int）\r\n","Return the width for stroking. -or- Set the width for stroking.":"返回抚摸宽度。 - 或设置抚摸的宽度。\r\n","android.content.ContentResolver.QUERY_ARG_SQL_SORT_ORDER":"android.content.contentresolver.query_arg_sql_sort_order\r\n","#FEATURE_VULKAN_HARDWARE_LEVEL":"#feature_vulkan_hardware_level\r\n","Used to record various statistics about the result of a sync operation.":"用于记录有关同步操作结果的各种统计数据。\r\n","Create a new IntentFilter instance with a specified action and MIME\n            type, where you know the MIME type is correctly formatted.":"使用指定动作和MIME创建一个新的IntentFilter实例\r\n            类型，您知道正确格式的MIME类型的地方。\r\n","android.content.pm.ShortcutManager.getDynamicShortcuts()":"android.content.pm.shortcutmanager.getdynamicshortcuts（）\r\n","Returns the layer with the specified ":"用指定的\r\n","Android 12-bit raw format":"Android 12位原始格式\r\n"," should behave.":" 应该行为。\r\n","Indicate a general failed conversion status.":"指示一般失败的转换状态。\r\n","android.content.ContentValues.remove(java.lang.String)":"android.content.contentvalues.remove（java.lang.string）\r\n","A specialization of ":"专业\r\n","android.graphics.BitmapRegionDecoder.newInstance(byte[], int, int)":"android.graphics.bitmapregiondecoder.newinstance（byte []，int，int）\r\n","Removes a service from the list of services to be provided.":"从要提供的服务列表中删除服务。\r\n","Returns the current minimum and maximum preview fps.":"返回当前的最小值和最大预览fps。\r\n","Returns the number of physical cameras available on this device.":"返回此设备上可用的物理相机数量。\r\n","android.graphics.ColorSpace.match(float[], android.graphics.TransferParameters)":"android.graphics.colorspace.match（float []，android.graphics.transferparameters）\r\n","Shortcut is disabled for an unknown reason.":"捷径由于未知原因而被禁用。\r\n","android.content.Intent.EXTRA_HTML_TEXT":"android.content.intent.extra_html_text\r\n","Runs 'pragma integrity_check' on the given database (and all the attached databases)\n            and returns true if the given database (and all its attached databases) pass integrity_check,\n            false otherwise.":"在给定数据库上运行“ Pragma Integrity_Check”（以及所有附加的数据库）\r\n            如果给定数据库（及其所有附件数据库）通过Integrity_Check，则返回true，\r\n            否则为错误。\r\n","android.graphics.drawable.Drawable.inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet)":"android.graphics.drawable.drawable.inflate（android.content.res.res.resources，org.xmlpull.v1.xmlpullparser，android.util.attributeset）\r\n","android.database.CrossProcessCursor":"android.database.Crossprocesscursor\r\n"," value\n            indicating that the screen is HDR (dynamic range).":" 价值\r\n            表明屏幕为HDR（动态范围）。\r\n","android.content.ContentProvider.query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, android.os.CancellationSignal)":"android.content.contentprovider.query（android.net.uri，java.lang.string []，java.lang.string，java.lang.string []\r\n","Key for the optional timestamp of when the administrator responded to the permission\n            request.":"何时管理员回复许可的可选时间戳的钥匙\r\n            要求。\r\n","This field is part of ":"该领域是\r\n","Order of result according to the user's preference.":"根据用户的偏好顺序。\r\n","verificationCode":"验证码\r\n","Extra field name for the ID of a package pending verification.":"待处理验证的包装ID的额外字段名称。\r\n","#protectionLevel":"#ProtectionLevel\r\n","android.content.Intent.ACTION_TIMEZONE_CHANGED":"android.content.intent.action_timezone_changed\r\n","Print contents of this theme out to the log.":"将此主题的内容打印到日志中。\r\n","android.bluetooth.BluetoothGattService":"android.bluetooth.bluetoothgattservice\r\n","Write characteristic without requiring a response by the remote device":"编写特征而无需远程设备响应\r\n","android.database.sqlite.SQLiteProgram.clearBindings()":"android.database.sqlite.sqliteprogram.clearbindings（）\r\n","android.content.Intent.EXTRA_RESULT_RECEIVER":"android.content.intent.extra_result_receiver\r\n","Unlocks the camera to allow another process to access it.":"解锁相机以允许另一个进程访问它。\r\n"," in the same manner as\n            ":" 以与相同的方式\r\n            \r\n","android.content.pm.ApplicationInfo.theme":"android.content.pm.applicationinfo.theme\r\n","Descriptor permission: Allow reading with person-in-the-middle protection":"描述符许可：允许使用中间人保护的阅读\r\n","Returns list of active staged sessions.":"返回主动上演会议列表。\r\n","\n            with the current width and config.":"\r\n            使用当前宽度和配置。\r\n","Retrieve all of the information we know about a particular service class.":"检索我们知道的有关特定服务类的所有信息。\r\n","#splitNames":"#splitnames\r\n","Retrieve all services that can match the given intent.":"检索可以匹配给定意图的所有服务。\r\n","android.content.ContentResolver.QUERY_ARG_SQL_HAVING":"android.content.contentresolver.query_arg_sql_having\r\n","Find a single content provider by its authority.":"按其权限查找单个内容提供商。\r\n","android.graphics.BitmapFactory.decodeFile(java.lang.String)":"android.graphics.bitmapfactory.decodefile（java.lang.string）\r\n","android.content.res.loader.ResourcesLoader":"android.content.res.res.loader.resourcesloader\r\n","Return the full path to this context's primary Android package.":"将完整的路径返回到此上下文的主要Android软件包。\r\n","Mode for ":"模式为 \r\n","android.content.pm.PackageInfo.REQUESTED_PERMISSION_NEVER_FOR_LOCATION":"android.content.pm.packageinfo.requested_permission_never_for_location\r\n","android.content.Intent.Intent(android.content.Intent)":"android.content.intent.intent（android.content.intent）\r\n","ContentProvider#getType ContentProvider.getType":"ContentProvider＃getType contentprovider.getType\r\n","#createContext(ContextParams)":"#CreateContext（ContextParams）\r\n","android.bluetooth.BluetoothHidDevice.SUBCLASS1_KEYBOARD":"android.bluetooth.bluetoothhiddevice.subclass1_keyboard\r\n","android.content.res.AssetManager.getLocales()":"机器人。内容。res.AssetManager。getLocales()\r\n","RoundRectShape constructor.":"圆形构造构造函数。\r\n","Gets the underlying cursor that is wrapped by this instance.":"获取该实例包裹的基础光标。\r\n","android.content.Intent.ACTION_USER_PRESENT":"android.content.intent.action_user_present\r\n","android.content.pm.ApplicationInfo.GWP_ASAN_ALWAYS":"android.content.pm.applicationinfo.gwp_asan_always\r\n","YCrCb format used for images, which uses the NV21 encoding format.":"YCRCB格式用于图像，该格式使用NV21编码格式。\r\n","Re-enable pinned shortcuts that were previously disabled.":"可重新启用以前残疾的快捷方式。\r\n","android.graphics.drawable.Drawable.resolveOpacity(int, int)":"android.graphics.drawable.drawable.resolve.sopacity（int，int）\r\n","Returns the value of the requested column as a float.":"返回请求列的值作为浮点数。\r\n","Update periodic advertising parameters associated with this set.":"更新与此集合关联的定期广告参数。\r\n","android.content.pm.ConfigurationInfo.reqKeyboardType":"android.content.pm.configurationinfo.reqkeyboardtype\r\n","android.drm.DrmRights.DrmRights(android.drm.ProcessedData, java.lang.String)":"android.drm.drmrights.drmrights（android.drm.processeddata，java.lang.string）\r\n","android.R.styleable#AndroidManifestProvider_forceUriPermissions\n            forceUriPermissions":"Android.r.Stylable＃AndroidManifestProvider_forceuripermissions\r\n            武力\r\n","android.hardware.Sensor.getName()":"android.hardware.sensor.getName（）\r\n","android.database.sqlite.SQLiteQueryBuilder.appendWhere(java.lang.CharSequence)":"android.database.sqlite.sqlitequerybuilder.appendwhere（java.lang.charsequence）\r\n","Add a new Intent action to match against.":"添加一个新的意图行动以匹配。\r\n","android.bluetooth.le.AdvertisingSetParameters.INTERVAL_MEDIUM":"android.bluetooth.le.AdvertisingsetParameters.interval_medium\r\n","android.graphics.Camera.getLocationY()":"android.graphics.camera.getLocationy（）\r\n","Stop Bluetooth LE advertising.":"停止蓝牙LE广告。\r\n","android.content.pm.ShortcutManager.getIconMaxWidth()":"android.content.pm.shortcutmanager.geticonmaxwidth（）\r\n","android.graphics.drawable.Drawable.getTransparentRegion()":"机器人。图形。可画的。可画的。gettransparent区域()\r\n","Constant representing HID Input Report type.":"常数表示隐藏输入报告类型。\r\n","android.os.Environment#DIRECTORY_RINGTONES":"Android.os.Environment＃Directory_ringtones\r\n","android.content.Intent.ACTION_MANAGED_PROFILE_AVAILABLE":"android.content.intent.action_managed_profile_available\r\n","F:Android.Bluetooth.LE.ScanCallback.OnScanFailed":"F：android.bluetooth.le.scancallback.onscanfailed\r\n","android.content.CursorLoader":"android.content.cursorloader\r\n","(Usually optional) Set the data for the intent along with an explicit\n            MIME data type.":"（通常是可选的）设置意图的数据以及明确的\r\n            MIME数据类型。\r\n","Thrown if the the bind or column parameter index is out of range":"如果绑定或列参数索引超出范围，则抛出\r\n","android.content.Intent.getShortExtra(java.lang.String, short)":"android.content.intent.getShortextra（java.lang.string，简称）\r\n","android.graphics.drawable.PaintDrawable.setCornerRadii(float[])":"android.graphics.drawable.paxtrable.setcornerradii（float []）\r\n","Return whether a shortcut is static; that is, whether a shortcut is\n            published from AndroidManifest.":"返回捷径是静态的；也就是说，捷径是\r\n            从AndroidManifest出版。\r\n","android.app.role.RoleManager":"android.app.role.rolemanager\r\n","android.content.pm.LauncherApps.getShortcutConfigActivityList(java.lang.String, android.os.UserHandle)":"android.content.pm.launcherapps.getShortCutConfigactivityList（java.lang.string，android.os.userhandle）\r\n","Add a copy of src to the path":"将SRC的副本添加到路径\r\n","Optional permission required for read-only access this content\n            provider.":"仅阅读访问此内容所需的可选许可\r\n            提供者。\r\n","Returns whether attributions provided by the application are meant to be user-visible.":"返回应用程序提供的归因是否应是用户可见的。\r\n","Standard CIE 1931 2° illuminant D55, encoded in xyY.":"标准CIE 1931 2°Ilumuminant D55，用XYY编码。\r\n",": The device supports Wi-Fi Passpoint and all\n            Passpoint related APIs in ":"：该设备支持Wi-Fi Passpoint和所有\r\n            与传动点相关的API\r\n"," with the width & height set\n            to the RenderNode's own width & height.":" 宽度和高度集\r\n            到Rendernode自己的宽度和高度。\r\n","Return list of all persisted URI permission grants that are hosted by the\n            calling app.":"所有持续的URI许可赠款的返回列表，由\r\n            调用应用程序。\r\n","android.graphics.Canvas.drawOval(float, float, float, float, android.graphics.Paint)":"android.graphics.canvas.drawoval（浮点，浮点，浮点，浮点，android.graphics.paint）\r\n","Offsets the Outline by (dx,dy)":"抵消（DX，DY）的大纲\r\n","Remove a periodic sync.":"删除周期性同步。\r\n","android.content.Context.registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter, java.lang.String, android.os.Handler)":"android.content.context.RegisterReceiver（android.content.Broadcastreceiver，android.content.intentfilter，java.lang.string，android.os.handler）\r\n","android.graphics.Color.alpha()":"android.graphics.Color.alpha()\r\n","android.graphics.Color.HSVToColor(float[])":"android.graphics.color.hsvtocolor（float []）\r\n","Returns PendingIntent associated with specified shortcut.":"返回与指定快捷方式关联的依据。\r\n","android.graphics.SweepGradient.SweepGradient(float, float, long, long)":"android.graphics.sweepgradient.sweepgradient（浮动，浮动，长，长）\r\n","android.content.Intent#ACTION_EXTERNAL_APPLICATIONS_AVAILABLE":"android.content.intent＃action_external_applications_available\r\n","An exception that indicates that an IO error occured while accessing the \n            SQLite database file.":"一个例外，表明在访问该IO错误时发生IO错误\r\n            SQLITE数据库文件。\r\n","android.content.ClipDescription.getMimeType(int)":"android.content.clipdescription.getmimetype（int）\r\n","android.content.pm.PackageManager.FEATURE_SECURELY_REMOVES_USERS":"android.content.pm.packagemanager.feature_securely_removes_users\r\n","android.content.RestrictionEntry.setType(int)":"android.content.grenterictioner.settype（int）\r\n","android.content.Intent.ACTION_POWER_DISCONNECTED":"android.content.intent.action_power_disconnected\r\n","Called when a connection to the Service has been established, with\n            the ":"建立了与服务的连接时调用\r\n            这\r\n"," that applies the color filter to the provided RenderEffect":" 将颜色过滤器应用于提供的Rendereffect\r\n","Bind a double value to this statement.":"将双重值绑定到此语句。\r\n","android.graphics.fonts.FontStyle.getWeight()":"android.graphics.fonts.fontstyle.getWeight（）\r\n","android.content.pm.LabeledIntent":"android.content.pm.labeledintent\r\n","android.content.AsyncTaskLoader.loadInBackground()":"android.content.asynctaskloader.loadinbackground（）\r\n","To be used as a test (not part of the normal user experience).":"用作测试（不是普通用户体验的一部分）。\r\n","android.graphics.Shader.TileMode#REPEAT":"android.graphics.shader.tilemode＃重复\r\n"," source of recorded drawing commands.":" 记录的绘图命令的来源。\r\n","android.content.pm.PackageManager.getReceiverInfo(android.content.ComponentName, int)":"android.content.pm.packagemanager.getReceiverInfo（android.content.componentname，int）\r\n","android.content.pm.PackageItemInfo.labelRes":"android.content.pm.packageiteminfo.labelres\r\n","android.graphics.Paint.getOffsetForAdvance(java.lang.CharSequence, int, int, int, int, boolean, float)":"android.graphics.paint.getOffSetForadvance（java.lang.Charsequence，int，int，int，int，int，int，boolean，float）\r\n","android.content.Intent.putExtras(android.content.Intent)":"android.content.intent.putextras（android.content.intent）\r\n","android.content.Intent.ACTION_RUN":"android.content.intent.action_run\r\n","android.graphics.Matrix.reset()":"android.graphics.matrix.reset（）\r\n","Set to true to have the drawable dither its colors when drawn to a\n            device with fewer than 8-bits per color component.":"设置为true，将可绘制的抖动撒在\r\n            每个颜色组件少于8位的设备。\r\n","\n          The URI authorities that identify data under the perview of the\n          content provider.\n        ":"\r\n          URI主管部门在概述下识别数据\r\n          内容提供商。\r\n        \r\n",": set to true if this application would like to\n request the VM to operate under the safe mode. ":"：如果此应用程序愿意，请设置为true\r\n 请求VM在安全模式下运行。\r\n","android.content.pm.SharedLibraryInfo.TYPE_DYNAMIC":"android.content.pm.SharedLibraryInfo.TYPE_DYNAMIC\r\n","android.content.ContentProviderClient.applyBatch(java.util.ArrayList)":"android.content.ContentProviderClient.ApplyBatch（java.util.arraylist）\r\n","android.content.res.loader.AssetsProvider.loadAssetFd(java.lang.String, int)":"android.content.res.res.loader.assetsprovider.loadassetfd（java.lang.string，int）\r\n","Return the raw data associated with a particular resource ID.":"返回与特定资源ID关联的原始数据。\r\n","android.content.pm.ResolveInfo.match":"android.content.pm.resolveinfo.match\r\n","Setting this extra is the equivalent of setting both ":"设置此额外的等同于两个设置\r\n","This class provides a way to control single Bluetooth LE advertising instance.":"该课程提供了一种控制单个蓝牙LE广告实例的方法。\r\n","Return the package name of the publisher app.":"返回发布者应用程序的包装名称。\r\n","android.content.pm.PackageManager.FEATURE_NFC_HOST_CARD_EMULATION":"android.content.pm.packagemanager.feature_nfc_host_card_emulation\r\n","#BIND_AUTO_CREATE":"#bind_auto_create\r\n","Encapsulates a package and its version code.":"封装软件包及其版本代码。\r\n","Return the number of MIME types the clip is available in.":"返回MIME类型的剪辑数量。\r\n","Stops the drawable's animation.":"停止可绘制的动画。\r\n","android.content.Intent.ACTION_PACKAGES_UNSUSPENDED":"android.content.intent.action_packages_unsuspended\r\n","android.graphics.drawable.GradientDrawable.getInnerRadius()":"android.graphics.drawable.gradientdrawable.getinnerradius（）\r\n","Returns the height of the current drawing layer":"返回当前绘图层的高度\r\n","The MIME type for a clip holding one or more URIs.":"持有一个或多个URI的夹子的哑剧类型。\r\n","android.graphics.Matrix.setScale(float, float, float, float)":"android.graphics.matrix.setscale（浮点，浮点，浮点，浮点）\r\n","Return the distance above (negative) the baseline (ascent) based on the\n            current typeface and text size.":"根据基线（负）返回基线（上升）的距离\r\n            当前字体和文本大小。\r\n","android.bluetooth.BluetoothHeadset.isAudioConnected(android.bluetooth.BluetoothDevice)":"android.bluetooth.bluetoothheadset.isaudioconnected（android.bluetooth.bluetoothdevice）\r\n","android.graphics.Canvas.drawLine(float, float, float, float, android.graphics.Paint)":"android.graphics.canvas.drawline（浮点，浮点，浮点，浮点，android.graphics.paint）\r\n","Activity Action: Delete the given data from its container.":"活动动作：从其容器中删除给定数据。\r\n","android.graphics.Path.transform(android.graphics.Matrix, android.graphics.Path)":"android.graphics.path.transform（android.graphics.matrix，android.graphics.path）\r\n","android.graphics.Point.negate()":"android.graphics.point.negate（）\r\n"," associated with the locus.":" 与基因座相关。\r\n","Returns true if will map a rectangle to another rectangle.":"如果将矩形映射到另一个矩形，则返回true。\r\n","Gets the canonical ":"获取规范\r\n","#reqInputFeatures":"#reqinputfeatures\r\n","android.content.SyncStats.numInserts":"android.content.syncstats.numinserts\r\n","android.bluetooth.BluetoothHidDevice.ERROR_RSP_NOT_READY":"android.bluetooth.bluetoothhiddevice.error_rsp_not_ready\r\n","Returns the periodic advertising interval in units of 1.":"返回1个单位的定期广告间隔。\r\n","android.content.UriPermission.INVALID_TIME":"android.content.uripermession.invalid_time\r\n","android.content.Context.sendOrderedBroadcast(android.content.Intent, java.lang.String)":"android.content.Context.SendOrderedBroadcast（android.content.intent，java.lang.string）\r\n",",\n if ":"，，，，\r\n 如果\r\n","\n            for the way most applications will want to retrieve their resource data.":"\r\n            对于大多数应用程序将要检索其资源数据的方式。\r\n","android.content.Context.TELEPHONY_IMS_SERVICE":"android.content.context.telephony_ims_service\r\n","android.graphics.Paint.setMaskFilter(android.graphics.MaskFilter)":"android.graphics.paint.setMaskFilter（Android.graphics.MaskFilter）\r\n","T:Android.Graphics._Color":"t：android.graphics._color\r\n"," that is \"sticky,\" meaning the\n            Intent you are sending stays around after the broadcast is complete,\n            so that others can quickly retrieve that data through the return\n            value of ":" 那是“粘的”，意思是\r\n            您的意图您要在广播完成后发送留下来，\r\n            这样其他人就可以通过返回快速检索数据\r\n            的价值\r\n","android.graphics.RenderNode.setHasOverlappingRendering(boolean)":"机器人。图形。RenderNode。setHasOverlappingRendering(布尔值)\r\n",", which\n            represent specific tasks and actions that users can perform within your app.":"， 哪个\r\n            表示用户可以在您的应用中执行的特定任务和操作。\r\n","android.bluetooth.BluetoothGattCharacteristic.setValue(byte[])":"android.bluetooth.bluetoothgattcharacteristic.setValue（byte []）\r\n","Broadcast Action: The time was set.":"广播动作：设定时间。\r\n"," for controlling UI modes.":" 用于控制UI模式。\r\n","android.content.Intent.createChooser(android.content.Intent, java.lang.CharSequence)":"android.content.intent.createchooser（android.content.intent，java.lang.charsequence）\r\n","Runs the provided SQL and returns a cursor over the result set.":"运行提供的SQL并在结果集上返回光标。\r\n","Converts the specified ARGB color int to an RGBA color long in the sRGB\n            color space.":"将指定的argb颜色int转换为SRGB中的RGBA颜色\r\n            色彩空间。\r\n","query":"询问\r\n","android.content.Context.enforceCallingOrSelfPermission(java.lang.String, java.lang.String)":"android.content.context.enforcecallingorselfbermission（java.lang.string，java.lang.string）\r\n","Sets the orientation of the gradient defined in this drawable.":"设置该绘制中定义的梯度的方向。\r\n","android.drm.DrmInfoRequest.ACCOUNT_ID":"android.drm.drminforequest.account_id\r\n","Returns the radii for each of the 4 corners.":"返回4个角中的每个角的半径。\r\n","#getWritableDatabase":"#getWritabledatabase\r\n","Return a drawable object associated with a particular resource ID for the\n            given screen density in DPI.":"返回与特定资源ID关联的可绘制对象\r\n            给定DPI中的屏幕密度。\r\n","Retrieves the minimum of two Insets.":"检索至少两个插图。\r\n","Apply this matrix to the src rectangle, and write the transformed rectangle into dst.":"将此矩阵应用于SRC矩形，然后将转换的矩形写入DST。\r\n","BluetoothHealth#APP_CONFIG_REGISTRATION_FAILURE":"BluetoothHealth＃APP_CONFIG_REGISTRATION_FAILURE\r\n","android.graphics.drawable.BitmapDrawable.setAntiAlias(boolean)":"android.graphics.drawable.bitmapdrable.setantialias（boolean）\r\n","android.drm.DrmManagerClient.canHandle(java.lang.String, java.lang.String)":"android.drm.drmmanagerclient.canhandle（java.lang.string，java.lang.string）\r\n","Return the message that should be shown when the user attempts to start a shortcut\n            that is disabled.":"返回用户尝试启动快捷方式时应显示的消息\r\n            那是禁用的。\r\n","android.content.pm.LauncherApps.getActivityList(java.lang.String, android.os.UserHandle)":"android.content.pm.launcherapps.getActivityList（java.lang.string，android.os.userhandle）\r\n","Remove a single value.":"删除单个值。\r\n","android.content.CursorLoader.CursorLoader(android.content.Context, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)":"android.content.cursorloader.cursorloader（android.content.context，android.net.uri，java.lang.string []，java.lang.string，java.lang.lang.lang.string []，Java.lang.string）\r\n","Retrieve the logo associated with an application.":"检索与应用程序关联的徽标。\r\n","android.drm.DrmRights.getMimeType()":"android.drm.drmrights.getmimetype（）\r\n","Return the Looper for the main thread of the current process.":"返回当前过程的主线程的循环器。\r\n","Return the paint's Cap, controlling how the start and end of stroked\n            lines and paths are treated. -or- Set the paint's Cap.":"返回油漆的帽子，控制着抚摸的开始和结尾\r\n            线条和路径得到处理。 - 或设置油漆的帽子。\r\n","android.graphics.YuvImage.compressToJpeg(android.graphics.Rect, int, java.io.OutputStream)":"android.graphics.yuvimage.compresstojpeg（android.graphics.Rect，int，java.io.outputstream）\r\n","android.media.session.MediaSessionManager":"android.media.session.MediasessionManager\r\n","Applies the specified theme to this Drawable and its children.":"将指定的主题应用于该绘图及其子女。\r\n","/manifest/application/provider":"/清单/应用程序/提供商\r\n","#sourceDir":"#sourcedir\r\n","Returns the resource ID of the resource that was used to create this AttributeSet.":"返回用于创建此属性的资源的资源ID。\r\n","\n          A permission that clients must have to query the content provider.\n        ":"\r\n          客户必须必须查询内容提供商的许可。\r\n        \r\n","android.graphics.Rect.setIntersect(android.graphics.Rect, android.graphics.Rect)":"机器人。图形。长setIntersect（android的。图形。Rect，android。图形。Rect）\r\n","android.content.Context#bindService(Intent, ServiceConnection, int)":"android.content.context＃bindservice（intent，serviceConnection，int）\r\n","ClipDescription#MIMETYPE_TEXT_HTML":"剪贴画＃mimetype_text_html\r\n","android.content.ContentProvider.openTypedAssetFile(android.net.Uri, java.lang.String, android.os.Bundle, android.os.CancellationSignal)":"android.content.contentprovider.opentypedassetfile（android.net.uri，java.lang.string，android.os.bundle，android.os.cancellationsignal）\r\n","Returns the secondary Physical Layer\n            on which this advertisment was received.":"返回次要物理层\r\n            收到该广告的内容。\r\n","Returns the current settings for this Camera service.":"返回此相机服务的当前设置。\r\n","android.graphics.Paint.getMaskFilter()":"android.graphics.paint.getMaskFilter（）\r\n","Paint#setXfermode(Xfermode) transfer mode":"油漆＃setXfermode（XferMode）传输模式\r\n","Sets the Outline to a ":"将大纲设置为\r\n","One of the values returned by ":"返回的值之一 \r\n",", or as a result\n            of remote device changing the PHY.":"，或结果\r\n            远程设备更改PHY。\r\n","android.content.pm.PackageManager.queryApplicationProperty(java.lang.String)":"android.content.pm.PackageManager.queryApplicationProperty(java.lang.String)\r\n","Activity Action: Quick view the data.":"活动动作：快速查看数据。\r\n","android.graphics.RenderNode.getTop()":"android.graphics.rendernode.getTop（）\r\n","Sets the X position around which the drawable is rotated.":"设置可旋转绘制的X位置。\r\n","Health Profile - Channel Type used - Streaming":"健康状况 - 使用的频道类型 - 流媒体\r\n"," is\n called.":" 是\r\n 叫。\r\n","android.database.DatabaseUtils.cursorStringToContentValues(android.database.Cursor, java.lang.String, android.content.ContentValues, java.lang.String)":"android.database.databaseutils.cursorstringtocontentvalues（android.database.cursor，java.lang.string，android.content.content.content.contentvalues，java.lang.lang.string）\r\n","Default (unspecified) setting of Memtag.":"memtag的默认设置（未指定）设置。\r\n","android.content.Context.TELECOM_SERVICE":"android.content.context.telecom_service\r\n","Padding mode used to nest each layer inside the padding of the previous\n            layer.":"填充模式用于将每一层嵌套在上一层的填充中\r\n            层。\r\n","android.database.DatabaseUtils.dumpCurrentRow(android.database.Cursor)":"android.database.databaseutils.dumpcurrentrow（android.database.cursor）\r\n","Returns the current position of the cursor in the row set.":"返回行集中光标的当前位置。\r\n","android.database.sqlite.SQLiteCursorDriver":"机器人。数据库。sqlite。[医]SQLiteCursorDriver\r\n","android.graphics.Paint.getColorLong()":"android.graphics.paint.getColorlong（）\r\n","Exposes methods to manage a SQLite database.":"公开管理SQLite数据库的方法。\r\n","Callback to inform change in channel state.":"回调以告知通道状态的变更。\r\n","android.content.Loader.registerListener(int, android.content.OnLoadCompleteListener)":"android.content.loader.RegisterListener（int，android.content.onloadCompletElistener）\r\n","android.graphics.ColorSpace.toXyz(float, float, float)":"android.graphics.colorspace.toxyz（浮子，浮点，浮点）\r\n","C:Android.Database.Sqlite.SQLiteCursor(Android.Database.Sqlite.ISQLiteCursorDriver,System.String,System.String)":"C：android.database.sqlite.sqlitecursor（android.database.sqlite.isqlitecursordriver，system.String，System.String）\r\n","android.graphics.Region.getBoundaryPath(android.graphics.Path)":"android.graphics.gregion.getBoundaryPath（android.graphics.path）\r\n","Retrieves the type of rights-protected object (for example, content object, rights\n            object, and so on) using the specified URI or MIME type.":"检索受权保护对象的类型（例如，内容对象，权利\r\n            对象，依此类推）使用指定的URI或MIME类型。\r\n","android.content.SyncStats.numSkippedEntries":"android.content.syncstats.numskippedentries\r\n","android.database.DatabaseErrorHandler":"机器人。数据库。数据库，数据库\r\n"," only\n            contain valid columns as defined by ":" 只要\r\n            包含由定义的有效列\r\n","android.database.sqlite.SQLiteDatabase.inTransaction()":"android.database.sqlite.sqlitedatabase.intransaction（）\r\n","Reads an Integer out of a field in a Cursor and writes it to a Map.":"在光标中读取一个整数，然后将其写入地图。\r\n","android.database.AbstractWindowedCursor":"android.database.AbstractwindowedCursor\r\n","Retrieves the list of providers loaded into this instance. -or- Sets the list of providers.":"检索加载到此实例的提供商列表。 - 或设置提供商列表。\r\n","android.graphics.Bitmap.getColor(int, int)":"android.graphics.bitmap.getColor（int，int）\r\n","This can be called by an application in ":"这可以通过应用程序来调用\r\n","if the face detection is unsupported.":"如果面部检测不受支持。\r\n","Stops the animation at the current frame.":"在当前帧停止动画。\r\n","Start Bluetooth voice recognition.":"开始蓝牙语音识别。\r\n","android.graphics.drawable.AnimatedImageDrawable.stop()":"android.graphics.drawable.animatedimatedimagedrawable.stop（）\r\n","android.database.sqlite.SQLiteFullException":"android.database.sqlite.sqlitefullexception\r\n","android.bluetooth.le.ScanFilter.matches(android.bluetooth.le.ScanResult)":"android.bluetooth.le.scanfilter.matches（android.bluetooth.le.scanresult）\r\n","android.graphics.PostProcessor":"android.graphics.postprocessor\r\n","android.content.ContentResolver.canonicalize(android.net.Uri)":"android.content.contentresolver.caronicalize（android.net.uri）\r\n","android.content.pm.PackageManager.FEATURE_FACE":"android.content.pm.packagemanager.feature_face\r\n","Return the type name for a given resource identifier.":"返回给定资源标识符的类型名称。\r\n","android.database.CursorWindow.getDouble(int, int)":"android.database.cursorwindow.getDouble（int，int）\r\n","android.content.pm.PackageManager.removeWhitelistedRestrictedPermission(java.lang.String, java.lang.String, int)":"android.content.pm.PackageManager.removeWhitelistedRestrictedPermission(java.lang.String,java.朗。字符串,int)\r\n","Create an Item consisting of a single block of (possibly styled) text.":"创建一个由单个块（可能是样式）文本组成的项目。\r\n","#clearCallingIdentity":"#ClearCallingIdentity\r\n","The names of all installed split APKs, ordered lexicographically.":"在词典上订购了所有安装的拆分APK的名称。\r\n","android.graphics.drawable.DrawableContainer":"机器人。图形。可画的。DrawableContainer\r\n","android.content.Intent.CATEGORY_APP_CALENDAR":"android.content.intent.category_app_calendar\r\n","This is an abstract cursor class that handles a lot of the common code\n            that all cursors need to deal with and is provided for convenience reasons.":"这是一个抽象光标类，可以处理许多常见代码\r\n            出于方便的原因，所有光标都需要处理并提供。\r\n","android.gesture.Gesture.toBitmap(int, int, int, int)":"android.gesture.gesture.tobitmap（int，int，int，int）\r\n","F:Android.Views.Window.SetUiOptions":"F：android.views.window.setuioptions\r\n","ParcelFileDescriptor#parseMode":"parcelfiledScriptor＃parsemode\r\n","android.content.ComponentName":"android.content.componentname\r\n","android.content.res.Configuration.smallestScreenWidthDp":"android.content.Res.Configuration.SmallestScreenWidthDP\r\n","android.graphics.NinePatch.getPaint()":"android.graphics.ninepatch.getPaint（）\r\n","android.content.pm.CrossProfileApps.ACTION_CAN_INTERACT_ACROSS_PROFILES_CHANGED":"android.content.pm.crossprofileapps.action_can_interact_across_profiles_changed\r\n","android.content.IntentFilter.match(java.lang.String, java.lang.String, java.lang.String, android.net.Uri, java.util.Set, java.lang.String)":"android.content.intentfilter.match（java.lang.string，java.lang.string，java.lang.string，android.net.uri，java.util.util.set，java.lang.lang.string）\r\n","android.graphics.pdf.PdfRenderer.openPage(int)":"android.graphics.pdf.pdfrenderer.openpage（int）\r\n","Returns the number of matrix/clip states on the Canvas' private stack.":"返回画布私有堆栈上的矩阵/剪辑状态数。\r\n","that indicates that the activity\n can itself handle the smallest screen size. ":"这表明活动\r\n 本身可以处理最小的屏幕尺寸。\r\n","android.database.sqlite.SQLiteOpenHelper.SQLiteOpenHelper(android.content.Context, java.lang.String, int, android.database.sqlite.OpenParams)":"android.database.sqlite.sqliteopenhelper.sqliteopenhelper（android.content.context，java.lang.string，int，int，android.database.sqlite.openparams）\r\n","android.graphics.Shader.TileMode#MIRROR":"android.graphics.shader.tilemode＃镜子\r\n","android.R.styleable#AndroidManifestProvider\n            &lt;provider&gt;":"Android.r.Stylable＃AndroidManifestProvider\r\n            ＆lt;提供商＆gt;\r\n","android.drm.DrmInfo.DrmInfo(int, byte[], java.lang.String)":"android.drm.drminfo.drminfo（int，byte []，java.lang.string）\r\n","Retrieves the string value for the attribute at <var>index</var>, but\n            only if that string comes from an immediate value in an XML file.":"检索<var> index </var>的属性的字符串值，但是\r\n            只有该字符串来自XML文件中的即时值。\r\n","android.graphics.Bitmap.getScaledWidth(android.graphics.Canvas)":"android.graphics.bitmap.getScaledWidth（android.graphics.canvas）\r\n","android.bluetooth.BluetoothServerSocket.getPsm()":"android.bluetooth.bluetoothserversocket.getpsm（）\r\n","Indicates if this component is aware of direct boot lifecycle, and can be\n            safely run before the user has entered their credentials (such as a lock\n            pattern or PIN).":"指示此组件是否知道直接引导生命周期，并且可以是\r\n            在用户输入凭据之前安全运行（例如锁\r\n            图案或销钉）。\r\n","Returns true if the receiver is currently processing the initial\n            value of a sticky broadcast -- that is, the value that was last\n            broadcast and is currently held in the sticky cache, so this is\n            not directly the result of a broadcast right now.":"如果接收者当前正在处理初始\r\n            粘性广播的价值 - 即最后的价值\r\n            广播并目前在粘性缓存中举行，所以这是\r\n            现在不是直接的广播结果。\r\n","android.content.SyncResult.tooManyDeletions":"android.content.syncresult.toomanydeletions\r\n","Retrieve content provider information.":"检索内容提供商信息。\r\n","android.content.pm.PackageStats.dataSize":"android.content.pm.packagestats.datasize\r\n","android.telephony.TelephonyManager":"android.telephony.telephonymanager\r\n","android.content.Intent.EXTRA_NOT_UNKNOWN_SOURCE":"android.content.intent.extra_not_unknown_source\r\n","Returns the next cursor position in the run.":"返回运行中的下一个光标位置。\r\n","android.graphics.drawable.StateListDrawable.getStateDrawable(int)":"android.graphics.drawable.statelistdrawable.getStatedRawable（int）\r\n","android.graphics.Rect.centerY()":"机器人。图形。长心肠()\r\n","Starts an activity to show the details of the specified session.":"启动活动以显示指定会话的详细信息。\r\n","android.database.sqlite.SQLiteDatabase.getVersion()":"android.database.sqlite.sqlitedatabase.getVersion（）\r\n","android.content.Intent.CATEGORY_INFO":"android.content.intent.category_info\r\n","Offset the path by (dx,dy)":"将路径偏移（dx，dy）\r\n","android.content.pm.LauncherActivityInfo.getComponentName()":"android.content.pm.launcheractivityinfo.getComponentName（）\r\n","Return the short description of a shortcut.":"返回快捷方式的简短描述。\r\n","Returns the Shader to be drawn when a Drawable is drawn.":"绘制可绘制的绘制时要绘制着着色器。\r\n","android.content.Intent.EXTRA_END_TIME":"android.content.intent.extra_end_time\r\n","android.bluetooth.le.ScanFilter.getDeviceName()":"android.bluetooth.le.scanfilter.getDeviceName（）\r\n","android.content.pm.PackageInstaller.uninstall(android.content.pm.VersionedPackage, android.content.IntentSender)":"android.content.pm.packageinstaller.uninstall（android.content.pm.versionedpackage，android.content.intentsender）\r\n","Activity Action: Start action associated with long pressing on the\n            search key.":"活动行动：开始行动与长期紧迫\r\n            搜索键。\r\n","If this is an activity alias, this is the real activity class to run\n            for it.":"如果这是一个活动别名，这是要运行的真实活动类别\r\n            为了它。\r\n","#setAmbientShadowColor(int)":"#SetAmbientsHadowColor（int）\r\n","Callback indicating the MTU for a given device connection has changed.":"指示给定设备连接的MTU的回调已更改。\r\n","android.database.Cursor.requery()":"机器人。数据库。光标。请求()\r\n","\n            attribute.":"\r\n            属性。\r\n","android.bluetooth.le.AdvertiseCallback.onStartFailure(int)":"android.bluetooth.le.Advertisecallback.onstartfailure（int）\r\n","android.content.Intent.CATEGORY_BROWSABLE":"android.content.intent.category_browsable\r\n","android.graphics.drawable.GradientDrawable.getColor()":"机器人。图形。可画的。GradientDrawable。getColor()\r\n","Enforce both a Uri and normal permission.":"执行URI和正常许可。\r\n","android.content.res.AssetManager.close()":"机器人。内容。res.AssetManager。关闭()\r\n","Constant representing uncategorized HID device subclass.":"常数表示未分类的HID设备子类。\r\n","Attempts to release memory that SQLite holds but does not require to\n            operate properly.":"试图释放SQLite保留但不需要的记忆\r\n            正确操作。\r\n"," is stored.":" 被储存了。\r\n","The filter matched an intent with the same data URI scheme and\n authority host.":"过滤器与相同的数据URI方案的意图匹配，并且\r\n 权威主持人。\r\n","android.content.QuickViewConstants.FEATURE_DELETE":"android.content.QuickViewConstants.feature_delete\r\n","android.content.ClipData.ClipData(android.content.ClipData)":"android.content.clipdata.clipdata（android.content.clipdata）\r\n","android.content.Context.PERFORMANCE_HINT_SERVICE":"android.content.context.performance_hint_service\r\n","Clears all existing bindings.":"清除所有现有的绑定。\r\n"," have been\n granted a particular permission.":" 已经\r\n 授予特定的许可。\r\n","Gets the Blue component from an integer color.":"从整数颜色获取蓝色分量。\r\n"," would be called. As of\n ":" 将被称为。作为\r\n \r\n","android.graphics.Matrix.postConcat(android.graphics.Matrix)":"android.graphics.matrix.postconcat（android.graphics.matrix）\r\n",": The Connection Service API is enabled on the device.":"：在设备上启用了连接服务API。\r\n","android.graphics.Matrix.postSkew(float, float, float, float)":"android.graphics.matrix.postskew（浮点，浮点，浮点，浮点）\r\n","A CharSequence dialog title to provide to the user when used with a\n            ":"与一个符号对话框标题一起提供给用户\r\n            \r\n","Intersect the current clip with the specified path.":"将电流夹与指定路径相交。\r\n","Determine whether the calling process of an IPC ":"确定IPC的调用过程是否\r\n",": If set, the service will run in its own\n            isolated process.":"：如果设置，服务将在自己的运行\r\n            隔离的过程。\r\n","android.graphics.PathMeasure.setPath(android.graphics.Path, boolean)":"android.graphics.pathmeasure.setpath（android.graphics.path，boolean）\r\n","Additional flag for ":"其他标志\r\n","android.content.pm.LauncherActivityInfo.getFirstInstallTime()":"android.content.pm.launcheractivityinfo.getFirstInstallTime（）\r\n","Sets the dimensions for preview pictures.":"设置预览图片的尺寸。\r\n","android.R.attr#permissionGroup":"Android.r.Attr＃GERMISSERMENCEGROUP\r\n","android.bluetooth.BluetoothHeadset.VENDOR_RESULT_CODE_COMMAND_ANDROID":"android.bluetooth.bluetoothheadsets.vendor_result_code_command_android\r\n","android.graphics.Typeface.create(java.lang.String, int)":"android.graphics.typeface.create（java.lang.string，int）\r\n","Return the name of the package holding label and icon resources.":"返回包含标签和图标资源的包装名称。\r\n","android.content.ClipDescription.MIMETYPE_TEXT_PLAIN":"android.content.clipdescription.mimetype_text_plain\r\n","android.graphics.drawable.DrawableWrapper":"机器人。图形。可画的。可拉式包装机\r\n","android.graphics.Paint.END_HYPHEN_EDIT_INSERT_ZWJ_AND_HYPHEN":"android.graphics.paint.end_hyphen_edit_insert_zwj_and_hyphen\r\n"," provide a way to adjust advertising\n            preferences for each\n            Bluetooth LE advertising set.":" 提供调整广告的方法\r\n            每个的偏好\r\n            蓝牙LE广告集。\r\n","#uiMode":"#uiMode\r\n","android.graphics.Region.quickContains(android.graphics.Rect)":"android.graphics.gregion.quickcontains（android.graphics.Rect）\r\n","</li>\n                <li>for WiFi - ":"</li>\r\n                <li> wifi-\r\n","android.graphics.Paint.setStrikeThruText(boolean)":"android.graphics.paint.setstrikethrutext（boolean）\r\n","android.bluetooth.le.ScanCallback.onScanFailed(int)":"android.bluetooth.le.scancallback.onscanfailed（int）\r\n","Retrieves the boundary box of the given range":"检索给定范围的边界框\r\n","PixelFormat#OPAQUE PixelFormat.OPAQUE":"Pixelformat＃不透明Pixelformat.opaque\r\n"," value of\n ":" 的价值\r\n \r\n","Write characteristic including authentication signature":"写入包括身份验证的特征\r\n","android.R.attr#state_selected":"android.r.attr＃state_selected\r\n","android.content.ContentProvider.requireContext()":"android.content.contentprovider.requirecontext（）\r\n","if x, y exceed the bitmap's bounds\n":"如果x，y超过了位图的界限\r\n\r\n","Returns the signing certificates this package has proven it is authorized to use.":"返回签名证书此软件包已证明其已授权使用。\r\n","Create a new clip that is a copy of another clip.":"创建一个新剪辑，是另一个剪辑的副本。\r\n","A font weight value for the black weight":"黑色重量的字体重量值\r\n","Returns the character sequence necessary for grammatically correct pluralization\n            of the given resource ID for the given quantity.":"返回语法正确复数所需的字符序列\r\n            给定数量的给定资源ID。\r\n",": The device supports Open Mobile API capable UICC-based secure\n            elements.":"：该设备支持开放的移动API基于UICC的安全\r\n            元素。\r\n","FrameRenderRequest":"FramerenderRequest\r\n","android.content.pm.PackageManager.FEATURE_IRIS":"android.content.pm.packagemanager.feature_iris\r\n","The selection and arguments to use.":"要使用的选择和参数。\r\n","#acquireContentProviderClient(String)":"#acquirecontentproviderclient（String）\r\n","repeat the shader's image horizontally and vertically, alternating\n mirror images so that adjacent images always seam\n":"水平和垂直重复着色器的图像，交替\r\n 镜像图像使相邻图像总是接缝\r\n\r\n","</code> on the ":"</code>在\r\n","android.content.RestrictionEntry":"android.content.grestryctry\r\n","Returns the byte offset where this asset entry's data starts.":"返回此资源条目数据开始的字节偏移量。\r\n","Implement this to handle requests to delete one or more rows.":"实施此操作以处理请求以删除一个或多个行。\r\n","android.graphics.fonts.Font.getFile()":"android.graphics.fonts.font.getfile（）\r\n","android.os.storage.StorageManager":"android.os.storage.storagemanager\r\n","Unregisters a change observer.":"撤销变更观察者。\r\n","android.content.ContentProviderClient.call(java.lang.String, java.lang.String, java.lang.String, android.os.Bundle)":"android.content.contentproviderclient.call（java.lang.string，java.lang.string，java.lang.string，android.os.bundle）\r\n","#LINEAR_GRADIENT":"#linear_gradient\r\n","Context#startActivity(Intent) Context.startActivity()":"上下文＃startActivity（intent）context.startactivity（）\r\n","[Sa * Da, Sc * Da] ":"[sa * da，sc * da]\r\n","Captures frames from an image stream as an OpenGL ES texture.":"从图像流捕获帧作为OpenGL ES纹理。\r\n","android.content.pm.PackageManager.FLAG_PERMISSION_WHITELIST_SYSTEM":"android.content.pm.packagemanager.flag_permission_whitelist_system\r\n"," and would like to rollback\n            to the state where there is again a pending content change.":" 想回滚\r\n            到再次发生待处理内容的状态。\r\n","android.content.Intent.ACTION_SEARCH_LONG_PRESS":"android.content.intent.action_search_long_press\r\n","Error code indicating that the caller does not have the\n            ":"错误代码指示呼叫者没有\r\n            \r\n","Offsets the left and right positions for the RenderNode":"偏移RenderNode的左右位置\r\n","android.graphics.Insets.of(int, int, int, int)":"android.graphics.insets.of（int，int，int，int）\r\n","Returns the dimension setting for pictures.":"返回图片的尺寸设置。\r\n","Create a blur maskfilter.":"创建一个模糊的maskFilter。\r\n","Modify the image after decoding and scaling.":"解码和缩放后修改图像。\r\n","android.bluetooth.le.AdvertiseData.getManufacturerSpecificData()":"android.bluetooth.le.aptervertisedata.getManufacturersPecificData（）\r\n","Returns true iff the 4 specified sides of a rectangle are inside or equal\n            to this rectangle.":"如果矩形的4个指定边在内或相等，则返回true\r\n            到这个矩形。\r\n","android.bluetooth.BluetoothGattServer.cancelConnection(android.bluetooth.BluetoothDevice)":"android.bluetooth.bluetoothgattserver.cancelConnection（android.bluetooth.bluetoothdevice）\r\n","Current user preference for the scaling factor for fonts, relative\n            to the base density scaling.":"当前的用户偏好对字体，相对的缩放系数\r\n            到基础密度缩放。\r\n","android.hardware.Camera.open(int)":"android.hardware.camera.open（int）\r\n","Called from the drawable's draw() method after the canvas has been set to\n            draw the shape at (0,0).":"从绘制的画布设置为之后，请从Drawable的Draw（）方法调用\r\n            在（0,0）上绘制形状。\r\n","android.bluetooth.BluetoothGattDescriptor.PERMISSION_WRITE_ENCRYPTED":"android.bluetooth.bluetoothgattdescriptor.permission_write_encrypted\r\n","The name of the extra used to define the text to be processed, as a\n            CharSequence.":"用于定义要处理的文本的额外的名称，作为一个\r\n            魅力。\r\n","android.graphics.Bitmap.setConfig(android.graphics.Config)":"android.graphics.bitmap.setConfig（android.graphics.config）\r\n","Called when a shared preference is changed, added, or removed.":"更改，添加或删除共享偏好时调用。\r\n","android.graphics.drawable.GradientDrawable.getShape()":"android.graphics.drawable.gradientdrawable.getShape（）\r\n","BluetoothProfile#STATE_CONNECTED":"BluetoothProfile＃state_connected\r\n","A type of restriction. ":"一种限制。\r\n","android.content.RestrictionEntry.getAllSelectedStrings()":"android.content.resternityEntry.getAllSelectedStrings（）\r\n","Restriction of type \"string\".":"类型“字符串”的限制。\r\n","android.graphics.EmbossMaskFilter.EmbossMaskFilter(float[], float, float, float)":"android.graphics.embossmaskfilter.embossmaskfilter（float []，float，float，float）\r\n","Retrieves the trigger data associated with this object.":"检索与此对象关联的触发数据。\r\n","android.graphics.Canvas.setMatrix(android.graphics.Matrix)":"android.graphics.canvas.setmatrix（android.graphics.matrix）\r\n","A remote client has requested to write to a local characteristic.":"远程客户端已要求写入本地特征。\r\n","android.content.ContentQueryMap.getValues(java.lang.String)":"android.content.contentquerymap.getValues（java.lang.string）\r\n","#getTargetUserProfiles()":"#getTargetUserProfiles（）\r\n","Packages that have been changed since the last time they\n            were requested.":"自上次以来已更改的包装\r\n            被要求。\r\n","Returns the scale value for this display list on the X axis.":"返回此显示列表在X轴上的比例值。\r\n","s or ":"S或\r\n","android.content.ContentResolver.getCurrentSync()":"android.content.contentresolver.getCurrentsync（）\r\n","Returns true of the passed ":"返回通过的\r\n","android.content.Intent.Intent(android.content.Context, java.lang.Class)":"android.content.intent.intent（android.content.context，java.lang.class）\r\n","uri":"Uri\r\n","Determine whether the typeface set on the paint has a glyph supporting the string.":"确定涂料上的字体设置是否具有支持字符串的字形。\r\n","Failed to remove all the rights objects associated with all DRM schemes.":"未能删除与所有DRM计划相关的所有权利对象。\r\n","Set new bind arguments.":"设置新的绑定参数。\r\n","android.content.IntentSender.getCreatorPackage()":"android.content.intents.getCreatorPackage（）\r\n","Prints the contents of a Cursor to a PrintSteam.":"将光标的内容打印到打印机。\r\n","android.content.pm.Checksum.TYPE_WHOLE_MERKLE_ROOT_4K_SHA256":"android.content.pm.checksum.type_whole_merkle_root_4k_sha256\r\n","android.graphics.Paint.setStartHyphenEdit(int)":"android.graphics.paint.setstarthyphenedit（int）\r\n","android.graphics.Color.Color()":"android.graphics.Color.Color()\r\n","android.content.ContentProvider.getStreamTypes(android.net.Uri, java.lang.String)":"android.content.contentprovider.getStreamTypes（android.net.uri，java.lang.string）\r\n","Value returned when a permission has not been persisted.":"当尚未持续存在权限时返回的价值。\r\n","Always enable GWP-ASan in this application or process.":"始终在此应用程序或过程中启用GWP-ASAN。\r\n","Features that this application has requested.":"该应用程序要求的功能。\r\n","Returns this color's color space.":"Returns this color's color space.\r\n","Sets whether the RenderNode is a projection receiver.":"设置Rendernode是否是投影接收器。\r\n","android.bluetooth.le.BluetoothLeScanner.EXTRA_CALLBACK_TYPE":"android.bluetooth.le.bluetoothlescanner.extra_callback_type\r\n","android.graphics.drawable.BitmapDrawable.BitmapDrawable(android.content.res.Resources, java.io.InputStream)":"android.graphics.drawable.bitmapdrable.bitmapdrable（android.content.res.res.resources，java.io.inputstream）\r\n","android.graphics.Shader":"android.graphics.shader\r\n","Geometry and text drawn with this style will be both filled and\n stroked at the same time, respecting the stroke-related fields on\n the paint.":"使用这种样式绘制的几何图形和文字将既填充，又\r\n 同时抚摸，尊重与中风相关的领域\r\n 油漆。\r\n"," pending intents\n            to tell the application being invoked how many pending alarms are being\n            delivered with the intent.":" 未决意图\r\n            告诉申请被调用，有多少待处理警报\r\n            以意图交付。\r\n","android.graphics.BitmapRegionDecoder.newInstance(byte[], int, int, boolean)":"android.graphics.bitmapregiondecoder.newinstance（byte []，int，int，boolean）\r\n","android.content.Context.EUICC_SERVICE":"android.content.context.euicc_service\r\n","android.database.CursorWindow.isFloat(int, int)":"android.database.cursorwindow.isfloat（int，int）\r\n","android.database.Cursor":"android.database.Cursor\r\n","Callback that allows the value of a file-based resources or asset to be specified or\n            overridden.":"允许指定基于文件的资源或资产的价值的回调或\r\n            覆盖。\r\n","android.content.IntentFilter.countDataPaths()":"android.content.intentfilter.countdatapaths（）\r\n","Bounds of the area. (-1000, -1000) represents the top-left of the\n camera field of view, and (1000, 1000) represents the bottom-right of\n the field of view.":"该地区的边界。 （-1000，-1000）表示\r\n 摄像机视野，（1000，1000）代表\r\n 视野。\r\n","Add an included service to this service.":"在此服务中添加随附的服务。\r\n","#STATE_CONNECTING":"#STATE_CONNECTING\r\n","android.content.SyncResult.SyncResult()":"android.content.syncresult.syncresult（）\r\n","android.graphics.Matrix.setSkew(float, float, float, float)":"android.graphics.matrix.setskew（浮点，浮点，浮点，浮点）\r\n"," to manage the device eUICC (embedded SIM).":" 管理设备EUICC（嵌入式SIM）。\r\n","android.gesture.GestureStore.getGestures(java.lang.String)":"android.gesture.gesturestore.gentures（java.lang.string）\r\n","android.database.sqlite.SQLiteDatabase.openDatabase(java.io.File, android.database.sqlite.OpenParams)":"android.database.sqlite.sqlitedatabase.opendatabase（java.io.file，android.database.sqlite.openparams）\r\n","android.graphics.drawable.PictureDrawable":"android.graphics.drawable.picturedrawable\r\n","Retrieves a fractional unit attribute at <var>index</var>.":"检索<var>索引</var>的分数单位属性。\r\n","Signature check result: this is returned by ":"签名检查结果：这是由\r\n","Activity Action: Main entry point for carrier setup apps.":"活动操作：运营商设置应用程序的主要入口点。\r\n","#toUri":"#touri\r\n","Request that a given application service be started.":"请求开始给定的应用程序服务。\r\n","Returns the zero-based index for the given column name, or -1 if the column doesn't exist.":"返回给定列名的从零开始的索引，如果列不存在，则返回-1。\r\n","Bluetooth LE advertising set callbacks, used to deliver advertising operation\n            status.":"蓝牙LE广告集，用于提供广告操作\r\n            地位。\r\n","A special subclass of Intent that can have a custom label/icon\n            associated with it.":"一个特殊的意图子类，可以具有自定义标签/图标\r\n            与之相关。\r\n","A style resource identifier (in the package's resources) of the\n            description of an application.":"样式资源标识符（在软件包的资源中）\r\n            应用程序的描述。\r\n","Acquires DRM server registration information.":"获取DRM服务器注册信息。\r\n","android.content.Intent.putExtra(java.lang.String, double)":"android.content.intent.putextra（java.lang.string，double）\r\n","Retrieve, creating if needed, a new directory in which the application\n can place its own custom data files.":"检索，创建如果需要，该应用程序的新目录\r\n 可以放置自己的自定义数据文件。\r\n","android.graphics.drawable.Drawable.copyBounds()":"android.graphics.drawable.drawable.copybounds（）\r\n","Retrieve all activities that can be performed for the given intent.":"检索可针对给定意图执行的所有活动。\r\n","Generate hash code that matches semantics of filterEquals().":"生成与FilterEquals（）语义相匹配的哈希代码。\r\n","android.database.AbstractWindowedCursor.isFloat(int)":"android.database.abstractwindowedcursor.isfloat（int）\r\n",": the requested permission has\n            declared ":"：请求的许可已\r\n            宣布\r\n","Android.Content.Context.BIND_AUTO_CREATE":"android.content.context.bind_auto_create\r\n",": the requested permission\n            is required for the application to run; the user can not optionally\n            disable it.":"：请求许可\r\n            运行申请是必需的；用户无法选择\r\n            禁用它。\r\n","android.database.Cursor.setNotificationUri(android.content.ContentResolver, android.net.Uri)":"机器人。数据库。光标。setNotificationUri（android。内容。ContentResolver，android.net.Uri）\r\n","android.graphics.drawable.Drawable.applyTheme(android.content.res.Theme)":"android.graphics.drawable.drawable.applytheme（android.content.res.theme）\r\n","#hasSystemFeature(String, int)":"#hassystemfeature（字符串，int）\r\n","android.database.Cursor.getDouble(int)":"android.database.cursor.getDouble（int）\r\n","Set or clear the maskfilter object.":"设置或清除maskFilter对象。\r\n","Full path to a directory assigned to the package for its persistent data.":"通往分配给包装的目录的完整路径，以供其持久数据。\r\n","android.content.Context.getText(int)":"android.content.context.getText（int）\r\n","Callback interface for zoom changes during a smooth zoom operation.":"在光滑的缩放操作过程中，用于缩放更改的回调接口。\r\n","Write this rectangle to the specified parcel.":"将此矩形写入指定的包裹。\r\n","HAVING":"有\r\n","android.content.ContentResolver.openAssetFileDescriptor(android.net.Uri, java.lang.String, android.os.CancellationSignal)":"android.content.contentresolver.openassetfiledscriptor（android.net.uri，java.lang.string，android.os.os.cancellationsignal）\r\n","Returns true if the sensor is a dynamic sensor.":"如果传感器是动态传感器，则返回true。\r\n","android.content.Intent.getBooleanExtra(java.lang.String, boolean)":"android.content.intent.getBooleanextra（java.lang.string，boolean）\r\n","android.content.pm.PermissionInfo.FLAG_INSTALLED":"android.content.pm.permissioninfo.flag_installed\r\n","Returns a list of descriptors for this characteristic.":"返回此特征的描述符列表。\r\n","Return the paint's letter-spacing for text. -or- Set the paint's letter-spacing for text.":"返回涂料的文本字母间隔。 - 或 - 为文本设置油漆的字母间隔。\r\n","Hint to the path to prepare for adding more points.":"提示准备添加更多积分的道路。\r\n","android.database.DatabaseUtils.stringForQuery(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String[])":"android.database.databaseutils.stringforquery（android.database.sqlite.sqlitedatabase，java.lang.string，java.lang.string []）\r\n","The Style specifies if the primitive being drawn is filled, stroked, or\n both (in the same color).":"该样式指定绘制的原始性是否填充，抚摸或\r\n 两者（以相同的颜色）。\r\n","android.graphics.Paint.END_HYPHEN_EDIT_INSERT_ARMENIAN_HYPHEN":"android.graphics.paint.end_hyphen_edit_insert_armenian_hyphen\r\n","Descriptor permission: Allow signed write operations":"描述符许可：允许签名的写操作\r\n","Retrieve an int value from the preferences.":"从偏好中检索int值。\r\n","android.graphics.Bitmap.setPixels(int[], int, int, int, int, int, int)":"android.graphics.bitmap.setpixels（int []，int，int，int，int，int，int，int）\r\n","Recover a ComponentName from a String that was previously created with\n            ":"从以前创建的字符串中恢复一个componentName\r\n            \r\n","android.content.ClipData.newIntent(java.lang.CharSequence, android.content.Intent)":"android.content.clipdata.newintent（java.lang.charsequence，android.content.intent）\r\n","android.graphics.drawable.Animatable.start()":"android.graphics.drawable.animatable.start（）\r\n","android.content.Intent.getIntent(java.lang.String)":"android.content.intent.getintent（java.lang.string）\r\n","When a UNIQUE constraint violation occurs, the pre-existing rows that\n are causing the constraint violation are removed prior to inserting\n or updating the current row. ":"当唯一约束冲突发生时，预先存在的行\r\n 是否导致约束冲突在插入之前被删除\r\n 或更新当前行。 \r\n","Sets recording mode hint.":"设置记录模式提示。\r\n","android.database.sqlite.SQLiteQueryBuilder.setTables(java.lang.String)":"android.database.sqlite.sqlitequerybuilder.settables（java.lang.string）\r\n","Each sensor has exactly one reporting mode associated with it.":"每个传感器都具有与之关联的一个报告模式。\r\n","Returns a color associated with a particular resource ID and styled for\n            the current theme.":"返回与特定资源ID相关联的颜色，并为\r\n            当前主题。\r\n",": if set, this notification\n            will be skipped if it is being delivered to the root URI of a ContentObserver that is\n            using \"notify for descendants.":"：如果设置，此通知\r\n            如果将其传递到contentobserver的根URI，则会跳过\r\n            使用“为后代通知。\r\n","#TYPE_RFCOMM":"#type_rfcomm\r\n","AssetFileDescriptor":"AssetFileDescriptor\r\n","android.graphics.pdf.PdfRenderer.close()":"android.graphics.pdf.pdfrenderer.close（）\r\n","onMove() will only be called across processes if this method returns true.":"只有当此方法返回true时，onMove()才会跨进程调用。\r\n","android.graphics.Color.valueOf(float, float, float, float)":"android.graphics.color.valueof（浮子，浮子，浮点，浮点）\r\n","android.content.Context.BIOMETRIC_SERVICE":"android.content.context.biometric_service\r\n","Private raw camera sensor image format, a single channel image with\n            implementation depedent pixel layout.":"私人原始摄像机传感器图像格式，单个通道图像\r\n            实现depeedent像素布局。\r\n","if any parameter is invalid or not supported.":"如果任何参数无效或不支持。\r\n",": The device does not have a touch screen, but\n            does support touch emulation for basic events that supports tracking\n            a hand of fingers (5 or more fingers) fully independently.":"：该设备没有触摸屏，但是\r\n            确实支持触摸模仿，以支持支持跟踪的基本事件\r\n            完全独立的手指（5个或更多手指）。\r\n","android.content.pm.PackageManager.FEATURE_KEYSTORE_SINGLE_USE_KEY":"android.content.pm.packagemanager.feature_keystore_single_use_key\r\n","android.content.ContentProviderOperation.apply(android.content.ContentProvider, android.content.ContentProviderResult[], int)":"android.content.ContentProviderOperation.Apply（android.content.ContentProvider，android.content.content.contentproviderresult []，int），int）\r\n","to represent that the phone is not in any dock.":"表示手机不在任何码头中。\r\n","Fill the entire canvas' bitmap (restricted to the current clip) with the specified ARGB\n            color, using srcover porterduff mode.":"用指定的ARGB填充整个画布的位图（仅限于当前剪辑）\r\n            颜色，使用SRCOVER PORTERDUFF模式。\r\n","android.content.pm.PackageManager.FEATURE_SENSOR_AMBIENT_TEMPERATURE":"android.content.pm.packagemanager.feature_sensor_ambient_temperature\r\n","android.content.res.Resources.ID_NULL":"android.content.res.resources.id_null\r\n","Checks whether the headset supports some form of noise reduction":"检查耳机是否支持某种形式的降噪形式\r\n","android.content.IntentFilter.matchAction(java.lang.String)":"android.content.intentfilter.matchaction（java.lang.string）\r\n","Override this to handle requests to insert a set of new rows, or the\n            default implementation will iterate over the values and call\n            ":"覆盖此内容以处理请求以插入一组新行或\r\n            默认实现将迭代该值并调用\r\n            \r\n","android.hardware.BatteryState.STATUS_DISCHARGING":"android.hardware.batterystate.status_disching\r\n","Apps can query this to know if they have been suspended.":"应用程序可以查询此问题以了解它们是否已被停职。\r\n","Register a callback to watch for session lifecycle events in this user and managed profiles.":"注册回调以查看此用户和托管配置文件中的会话生命周期事件。\r\n","android.graphics.Canvas.getClipBounds()":"android.graphics.canvas.getClipBounds（）\r\n","android.content.ContentProvider.query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)":"android.content.contentprovider.query（android.net.uri，java.lang.string []，java.lang.string，java.lang.string []，java.lang.string）\r\n","F:Android.Drm.DrmInfoStatus..ctor":"f：android.drm.drminfostatus..ctor\r\n","android.graphics.drawable.Icon.setTintBlendMode(android.graphics.BlendMode)":"android.graphics.drawable.icon.settintblendmode（android.graphics.blendmode）\r\n","android.graphics.Canvas.drawBitmap(int[], int, int, int, int, int, int, boolean, android.graphics.Paint)":"android.graphics.canvas.drawbitmap（int []，int，int，int，int，int，int，int，int，boolean，android.graphics.paint）\r\n","android.content.pm.ApplicationInfo.splitSourceDirs":"android.content.pm.applicationinfo.splitsourcedirs\r\n","android.content.Intent.EXTRA_LOCAL_ONLY":"android.content.intent.extra_local_only\r\n","android.content.res.TypedArray.getColorStateList(int)":"android.content.res.typedarray.getColorStateList（int）\r\n","android.content.pm.ApplicationInfo.taskAffinity":"android.content.pm.applicationinfo.taskaffility\r\n","android.graphics.text.LineBreaker.HYPHENATION_FREQUENCY_NONE":"android.graphics.text.linebreaker.hyphenation_frequency_none\r\n","Set the matrix to affect the saturation of colors.":"Set the matrix to affect the saturation of colors.\r\n","android.content.Intent.EXTRA_ASSIST_INPUT_HINT_KEYBOARD":"android.content.intent.extra_assist_input_hint_keyboard\r\n","Broadcast Action: The timezone has changed.":"广播动作：时区已经改变。\r\n","Root SHA512 hash of a 1M Merkle tree computed over protected content.":"根据受保护的内容计算的1M默克尔树的root SHA512哈希。\r\n","android.content.AbstractThreadedSyncAdapter.onSecurityException(android.accounts.Account, android.os.Bundle, java.lang.String, android.content.SyncResult)":"android.content.AbstractThreadSyncadapter.onsecurityException（android.accounts.accounts.account，android.os.os.bundle，java.lang.string，android.content.content.syncresult）\r\n","AT command type BASIC used with\n            ":"AT命令类型基本使用\r\n            \r\n","android.drm.DrmManagerClient.checkRightsStatus(android.net.Uri, int)":"android.drm.drmmanagerclient.checkrightsstatus（android.net.uri，int）\r\n","android.content.pm.PackageManager.FEATURE_TOUCHSCREEN_MULTITOUCH_JAZZHAND":"android.content.pm.packagemanager.feature_touchscreen_multitouch_jazzhand\r\n","Retrieve the current graphical icon associated with this item without\n            the addition of a work badge if applicable.":"检索与此项目关联的当前图形图标\r\n            如果适用，则增加工作徽章。\r\n","Return an iterator over the filter's categories.":"将迭代器返回过滤器的类别。\r\n","android.graphics.fonts.FontStyle.FONT_WEIGHT_SEMI_BOLD":"android.graphics.fonts.fontstyle.font_weight_semi_bold\r\n"," instance with the\n          specified URI authorities.\n        ":" 带有的实例\r\n          指定的URI当局。\r\n        \r\n","#EXTRA_INTENT":"#extra_intent\r\n","If this Drawable does transition animations between states, ask that\n            it immediately jump to the current state and skip any active animations.":"如果此绘制可做状态之间的过渡动​​画，请要求\r\n            它立即跳到当前状态并跳过任何活动动画。\r\n"," if this feature has been required by the application.":" 如果应用程序需要此功能。\r\n"," objects\n            that use the &quot;content&quot; (content://) scheme.":" 对象\r\n            使用“内容” （内容：//）方案。\r\n","android.graphics.RectF.toShortString()":"android.graphics.Rectf.ToshortString（）\r\n","An exception that indicates there was an error with SQL parsing or execution.":"表示SQL解析或执行出错的异常。\r\n",", or as a result of\n            remote device changing the PHY.":"，或由于\r\n            远程设备更改PHY。\r\n","android.content.ContentResolver.getSyncAdapterTypes()":"android.content.contentresolver.getsyncadaptertypes（）\r\n","android.graphics.drawable.InsetDrawable.InsetDrawable(android.graphics.drawable.Drawable, int, int, int, int)":"android.graphics.drawable.insetdrawable.insetdrawable（android.graphics.drawable.drawable，int，int，int，int，int）\r\n","Set the default size of the image buffers.":"设置图像缓冲区的默认大小。\r\n",": At least one\n            of the cameras on the device supports the\n            ":"： 最后一个\r\n            设备上的摄像机支持\r\n            \r\n","Description of permissions needed to access a particular path\n            in a ":"访问特定路径所需的权限的说明\r\n            在一个\r\n","android.content.pm.PackageItemInfo.loadXmlMetaData(android.content.pm.PackageManager, java.lang.String)":"android.content.pm.packageiteminfo.loadxmlmetadata（android.content.pm.packagemanager，java.lang.string）\r\n","F:Android.OS.Build+VERSION_CODES.KitKat":"f：android.os.build+version_codes.kitkat\r\n","android.graphics.SurfaceTexture.SurfaceTexture(int)":"android.graphics.surfaceTexture.surfaceTexture（int）\r\n","android.database.ContentObserver.dispatchChange(boolean, android.net.Uri, int)":"android.database.contentobserver.dispatchchange（boolean，android.net.uri，int）\r\n","android.content.ContentResolver.call(android.net.Uri, java.lang.String, java.lang.String, android.os.Bundle)":"android.content.contentresolver.call（android.net.uri，java.lang.string，java.lang.string，android.os.os.bundle）\r\n","android.content.Context.obtainStyledAttributes(int, int[])":"android.content.context.ObtainStyLetAttributes（int，int []）\r\n","Creates a new ColorStateList that has the same states and colors as this\n            one but where each color has the specified alpha value (0-255).":"创建一个具有与此相同状态和颜色相同的状态和颜色\r\n            一个但是，每种颜色都有指定的alpha值（0-255）。\r\n","android.graphics.Paint.getColorFilter()":"android.graphics.paint.getColorFilter（）\r\n","android.content.ContentResolver.getType(android.net.Uri)":"android.content.contentresolver.getType（android.net.uri）\r\n","android.content.pm.PackageManager.FEATURE_TELEPHONY_CDMA":"android.content.pm.packagemanager.feature_telephony_cdma\r\n","android.content.pm.PackageInstaller.uninstall(java.lang.String, android.content.IntentSender)":"android.content.pm.packageinstaller.uninstall（java.lang.string，android.content.intents）\r\n","Callback invoked when the list of remote services, characteristics and descriptors\n            for the remote device have been updated, ie new services have been discovered.":"远程服务，特征和描述符列表时调用回调\r\n            对于远程设备已更新，已经发现了新服务。\r\n","Retrieve the current textual label associated with this item.":"检索与此项目关联的当前文本标签。\r\n","android.content.Intent.ACTION_REBOOT":"android.content.intent.action_reboot\r\n","android.content.res.Resources.getValue(int, android.util.TypedValue, boolean)":"android.content.Res.Res.resources.getValue（int，android.util.typedvalue，boolean）\r\n","android.content.ContentProvider.getWritePermission()":"android.content.contentprovider.getWritePermission（）\r\n","The outer edges of a join meet in a circular arc.":"连接的外边缘在圆形弧线中。\r\n","Interface that defines a dialog-type class that can be shown, dismissed, or\n            canceled, and may have buttons that can be clicked.":"定义对话类型类的接口可以显示，解散或\r\n            已取消，可能会单击可以单击的按钮。\r\n","Retrieves the subscription ID associated with this <code>DrmRights</code> object.":"检索与此<code> drmrights </code>对象关联的订阅ID。\r\n","android.content.pm.ShortcutInfo.DISABLED_REASON_NOT_DISABLED":"android.content.pm.shortcutinfo.disabled_reason_not_disabled\r\n","android.content.ComponentName.toShortString()":"android.content.componentname.toshortstring（）\r\n","android.graphics.PathMeasure.PathMeasure(android.graphics.Path, boolean)":"android.graphics.pathmeasure.pathmeasure（android.graphics.path，boolean）\r\n","Puts a double-precision floating point value into the field at the\n            specified row and column index.":"将双精度的浮点值放在\r\n            指定的行和列索引。\r\n","Get the list of information about the periodic syncs for the given account and authority.":"获取有关给定帐户和授权的定期同步的信息列表。\r\n","android.content.ContentProvider.getType(android.net.Uri)":"android.content.contentprovider.getType（android.net.uri）\r\n","android.bluetooth.BluetoothGattDescriptor.ENABLE_NOTIFICATION_VALUE":"android.bluetooth.bluetoothgattdescriptor.enable_notification_value\r\n","<strong>Note: </strong>In retrospect it would have been preferred to use\n            more inclusive terminology when naming this API.":"<strong>注意：</strong>回想起来，本来可以使用\r\n            命名此API时更具包容性的术语。\r\n","android.content.ClipDescription.getExtras()":"android.content.clipdescription.getExtras（）\r\n","Information about the sync operation that is currently underway.":"有关当前正在进行的同步操作的信息。\r\n","Register an observer that is called when changes happen to the content backing this cursor.":"注册一个观察者，当支持此游标的内容发生更改时调用该观察者。\r\n","Get the type of the underlying connection.":"获取基础连接的类型。\r\n","android.graphics.Paint.START_HYPHEN_EDIT_INSERT_HYPHEN":"android.graphics.paint.start_hyphen_edit_insert_hyphen\r\n","DrmManagerClient.OnErrorListener":"drmmanagerclient.onerrorlistener\r\n","Returns an array of manufacturer Id and the corresponding manufacturer specific data.":"返回一系列制造商ID和相应的制造商特定数据。\r\n","android.graphics.ColorSpace.MIN_ID":"android.graphics.colorspace.min_id\r\n"," provide a way to adjust advertising preferences for each\n            Bluetooth LE advertisement instance.":" 提供一种调整每个人的广告偏好的方法\r\n            蓝牙LE广告实例。\r\n","RGB format used for pictures encoded as RGB_565.":"RGB格式用于编码为RGB_565的图片。\r\n","android.content.AttributionSource":"android.content.Attributionsource\r\n","Creates a <code>DrmInfoStatus</code> object with the specified parameters.":"使用指定参数创建<code> drminfostatus </code>对象。\r\n","Macro (close-up) focus mode.":"宏（特写）焦点模式。\r\n","Return the int array associated with a particular resource ID.":"返回与特定资源ID关联的INT数组。\r\n","android.graphics.drawable.Icon.TYPE_BITMAP":"android.graphics.drawable.icon.type_bitmap\r\n","Returns whether the calling package can interact across profiles.":"返回调用软件包是否可以跨配置文件进行交互。\r\n","android.graphics.drawable.LayerDrawable.getLayerWidth(int)":"android.graphics.drawable.layerdrawable.getlayerwidth（int）\r\n","android.content.pm.PackageManager.getInstrumentationInfo(android.content.ComponentName, int)":"android.content.pm.packagemanager.getInstrumentationInfo（android.content.componentname，int）\r\n","android.content.ContentProviderClient.update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])":"android.content.contentproviderclient.update（android.net.uri，android.content.contentvalues，java.lang.string，java.lang.string []）\r\n","Query the given table, returning a ":"查询给定的表格，返回\r\n","Offers the ability to install, upgrade, and remove applications on the\n            device.":"提供安装，升级和删除应用程序的能力\r\n            设备。\r\n","An integer representing the end of the line has maqaf (Hebrew hyphen, U+05BE).":"代表线路末端的整数具有Maqaf（Hebrew Hyphen，U+05BE）。\r\n","android.content.Intent.ACTION_PACKAGE_INSTALL":"android.content.intent.action_package_install\r\n","android.graphics.fonts.FontVariationAxis":"android.graphics.fonts.fontvariationaxis\r\n","Callback interface used to notify on completion of camera auto focus.":"回调接口用于完成相机自动焦点后通知。\r\n"," for\n asynchronous broadcast handling.":" 为了\r\n 异步广播处理。\r\n","#CATEGORY_LAUNCHER":"#Category_Launcher\r\n","android.content.RestrictionsManager.REQUEST_KEY_TITLE":"android.content.strictionsmanager.request_key_title\r\n",": The device supports host-\n            based NFC card emulation.":"：该设备支持主机 - \r\n            基于NFC卡仿真。\r\n","Return the red component of a color int.":"返回颜色int的红色组件。\r\n","android.content.Intent.ACTION_MEDIA_SCANNER_FINISHED":"android.content.intent.action_media_scanner_fined\r\n","Packs this color into a color long.":"将这种颜色包装成长长的颜色。\r\n"," that applies the color filter to the contents of the\n            ":" 将颜色过滤器应用于\r\n            \r\n","android.content.Intent.EXTRA_EMAIL":"android.content.intent.extra_email\r\n","The name of the package to which the OBB file belongs.":"OBB文件所属的包的名称。\r\n","Constant corresponding to <code>phoneCall</code> in\n            the ":"常量对应于<code>phoneCall</code>in\r\n            该 \r\n","Sets an array of possible restriction entries, that this entry may contain.":"设置该条目可能包含的可能限制条目的数组。\r\n","APK Signature Scheme v3 enables packages to provide a proof-of-rotation record that the\n            platform verifies, and uses, to allow the use of new signing certificates.":"APK签名方案v3使软件包能够提供旋转的记录\r\n            平台验证和使用，以允许使用新的签名证书。\r\n","#getSystemService(String)":"#getSystemService（字符串）\r\n","android.content.Context.TV_INPUT_SERVICE":"android.content.context.tv_input_service\r\n","This xfermode draws, or doesn't draw, based on the destination's\n            distance from an op-color.":"此Xfermode根据目的地的绘制或不绘制\r\n            距离颜色的距离。\r\n","android.hardware.Camera.stopSmoothZoom()":"android.hardware.camera.stopsmoothzoom（）\r\n","Specifies that a sync should be requested with the specified the account, authority,\n            and extras at the given frequency.":"指定应与指定的帐户，权限，\r\n            和以给定频率的额外功能。\r\n","The maximum distance above the baseline for the tallest glyph in \n the font at a given text size.":"最高字形高于基线的最大距离\r\n 给定文本大小的字体。\r\n","android.content.pm.ResolveInfo.icon":"android.content.pm.resolveinfo.icon\r\n","Returns timestamp since boot when the scan record was observed.":"返回时间戳，因为观察到扫描记录时启动以来。\r\n","If set, the new activity is not kept in the history stack. ":"如果设定，新活动不会保存在历史堆栈中。\r\n","android.content.ContentResolver.addPeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle, long)":"android.content.contentresolver.addperiodicsync（android.accounts.accounts.account，java.lang.string，android.os.os.bundle，long）\r\n","android.content.Context.ALARM_SERVICE":"android.content.context.alarm_service\r\n","android.graphics.pdf.PdfDocument.writeTo(java.io.OutputStream)":"android.graphics.pdf.pdfdocument.writeto（java.io.outputstream）\r\n","Move the cursor by a relative amount, forward or backward, from the\n            current position.":"从相对数量向前或向后移动光标\r\n            当前位置。\r\n","android.content.pm.PackageManager.INSTALL_SCENARIO_FAST":"android.content.pm.packagemanager.install_scenario_fast\r\n","#screenHeightDp":"#screenheightdp\r\n","Sets GPS altitude.":"设置GPS高度。\r\n","Surface#isValid()":"表面＃iSvalid（）\r\n","android.content.pm.PackageManager.removePackageFromPreferred(java.lang.String)":"android.content.pm.PackageManager.removePackageFromPreferred(java.lang.String)\r\n","that indicates that the activity\n can itself handle the change to layout direction. ":"这表明活动\r\n 自身可以处理向布局方向的更改。\r\n","Returns the thickness of the strike-through line in pixels.":"返回以像素为单位的罢工线的厚度。\r\n","Gets the width of the RenderNode, which is the right - left.":"获取Rendernode的宽度，右 - 左。\r\n","Prior to ":"之前\r\n","android.content.res.Configuration.COLOR_MODE_WIDE_COLOR_GAMUT_NO":"android.content.res.configuration.color_mode_wide_color_gamut_no\r\n","android.bluetooth.le.BluetoothLeScanner.EXTRA_LIST_SCAN_RESULT":"android.bluetooth.le.bluetoothlescanner.extra_list_scan_result\r\n","android.content.UriPermission.isWritePermission()":"android.content.uripermession.iswritepermission（）\r\n","Perform a delete by combining all current settings and the\n            information passed into this method.":"通过组合所有当前设置和\r\n            信息传递到此方法中。\r\n","\n            transaction between a device and a DRM server.":"\r\n            设备和DRM服务器之间的交易。\r\n","ContentProvider#insert ContentProvider.insert":"ContentProvider＃insert contentprovider.insert\r\n","positions":"位置\r\n","android.graphics.Matrix.dump(java.io.PrintWriter)":"android.graphics.matrix.dump（java.io.printwriter）\r\n","Sets GPS longitude coordinate.":"设置GPS经度坐标。\r\n","Thrown if the resources for the given\n             activity could not be loaded.":"如果给定的资源\r\n             活动无法加载。\r\n","android.content.SyncStats.numEntries":"android.content.syncstats.numentries\r\n","android.graphics.drawable.LayerDrawable.setLayerInset(int, int, int, int, int)":"android.graphics.drawable.layerdrawable.setlayerinset（int，int，int，int，int）\r\n","Broadcast Action:  Indicates low memory condition notification acknowledged by user\n            and package management should be started.":"广播动作：指示用户确认的低内存条件通知\r\n            和软件包管理应该开始。\r\n","android.graphics.HardwareRenderer.SYNC_CONTEXT_IS_STOPPED":"android.graphics.hardwarerenderer.sync_context_is_stopped\r\n","android.graphics.Bitmap.hasMipMap()":"android.graphics.bitmap.hasmipmap（）\r\n","Broadcast Action: Some content providers have parts of their namespace\n            where they publish new events or items that the user may be especially\n            interested in.":"广播行动：一些内容提供商的部分名称空间\r\n            他们在哪里发布新事件或用户可能特别是\r\n            有兴趣。\r\n","YCrCb format used for images, which uses the NV21 encoding format. ":"YCRCB格式用于图像，该格式使用NV21编码格式。\r\n","If the specified rectangle intersects this rectangle, return true and set\n            this rectangle to that intersection, otherwise return false and do not\n            change this rectangle.":"如果指定的矩形与此矩形相交，则返回true并设置\r\n            这个矩形到那个交点，否则返回false，不要\r\n            更改此矩形。\r\n","Mapping of domain host to state, as defined by ":"域主机映射到状态，如\r\n","android.graphics.drawable.GradientDrawable.setThickness(int)":"android.graphics.drawable.gradientdrawable.setthickness（int）\r\n","Playback paused.":"播放暂停。\r\n","android.content.pm.PackageManager.FEATURE_SENSOR_GYROSCOPE":"android.content.pm.packagemanager.feature_sensor_gyroscope\r\n","always":"总是\r\n","android.content.RestrictionEntry.getKey()":"android.content.resterictionEntry.getKey（）\r\n","Shortcut is not disabled.":"快捷方式没有禁​​用。\r\n","android.content.RestrictionsManager.RESPONSE_KEY_MESSAGE":"android.content.ErterctionsManager.Response_key_message\r\n","Update the icon representing the app being installed in a specific\n            session.":"更新表示要在特定的应用程序的图标\r\n            会议。\r\n","android.content.pm.FeatureInfo.version":"android.content.pm.featureinfo.version\r\n","android.graphics.ParcelableColorSpace.isParcelable(android.graphics.ColorSpace)":"android.graphics.parcelablecolorspace.isparcelable（android.graphics.colorspace）\r\n","Returns the current database page size, in bytes. -or- Sets the database page size.":"返回当前数据库页面大小，字节。 - 或 - 设置数据库页面大小。\r\n","#startIntentSender(IntentSender, Intent, int, int, int, Bundle)":"#startintersender（inisentents，intent，int，int，int，bundle）\r\n","Returns true if this object represents legacy scan result.":"如果此对象表示遗留扫描结果，则返回true。\r\n","android.graphics.Picture.draw(android.graphics.Canvas)":"android.graphics.picture.draw（android.graphics.canvas）\r\n","Cursor#deactivate()":"光标＃脱照式（）\r\n","Return the paint's text size. -or- Set the paint's text size.":"返回油漆的文字大小。 - 或 - 设置油漆的文本大小。\r\n","Sets the locale for this database.":"设置此数据库的语言环境。\r\n","android.content.pm.Attribution.getLabel()":"android.content.pm.attribution.getLabel（）\r\n","android.content.ContentResolver.notifyChange(android.net.Uri, android.database.ContentObserver, int)":"android.content.contentresolver.notifyChange（android.net.uri，android.database.contentobserver，int）\r\n","\n attribute.":"\r\n 属性。\r\n","Optional extra indicating the error code, if any.":"可选的额外指示错误代码（如果有）。\r\n","android.content.pm.PackageManager.FEATURE_NFC":"android.content.pm.packagemanager.feature_nfc\r\n","android.content.pm.PackageInfo.firstInstallTime":"android.content.pm.packageinfo.firstinstalltime\r\n","android.graphics.ColorSpace.ILLUMINANT_D55":"android.graphics.colorspace.illuminant_d55\r\n","Broadcast Action:  The \"Camera Button\" was pressed.":"广播动作：按下“相机按钮”。\r\n","Sets whether foreign key constraints are enabled for the database.":"设置是否启用了数据库的外键约束。\r\n","Scale in X and Y independently, so that src matches dst exactly.":"独立地在X和Y中扩展，因此SRC与DST完全匹配。\r\n","android.graphics.RenderNode.getRotationX()":"机器人。图形。RenderNode。getRotationX()\r\n","android.drm.DrmManagerClient.close()":"android.drm.drmmanagerclient.close（）\r\n","android.content.res.AssetManager.openXmlResourceParser(int, java.lang.String)":"机器人。内容。res.AssetManager。openXmlResourceParser（int，java。朗。弦）\r\n","android.content.pm.LauncherApps.startAppDetailsActivity(android.content.ComponentName, android.os.UserHandle, android.graphics.Rect, android.os.Bundle)":"android.content.pm.launcherapps.startappdetailsactivity（android.content.componentname，android.os.userhandle，android.graphics.Rect.Rect，android.os.os.bundle）\r\n","android.content.Intent.makeMainSelectorActivity(java.lang.String, java.lang.String)":"android.content.intent.makemainselectoractivity（java.lang.string，java.lang.string）\r\n","android.graphics.Rect.inset(int, int)":"机器人。图形。长插页(int,int)\r\n","android.content.Context.AUDIO_SERVICE":"android.content.context.audio_service\r\n","android.content.Context.PRINT_SERVICE":"android.content.context.print_service\r\n","Called immediately after the transaction begins.":"交易开始后立即打电话。\r\n","Allows client to specify a hint to the provider declaring which locale to\n            use when sorting values.":"允许客户指定向提供商声明的提示\r\n            在排序值时使用。\r\n","Returns an array of strings naming the private databases associated with\n this Context's application package.":"返回一系列字符串，命名与\r\n 此上下文的应用程序包。\r\n","Groups of features that this application has requested.":"本应用程序要求的一组功能。\r\n","android.bluetooth.le.ScanResult.getPeriodicAdvertisingInterval()":"android.bluetooth.le.scanresult.getperiodicacadvertisinginterval（）\r\n","android.content.res.Configuration.UI_MODE_TYPE_NORMAL":"机器人。内容。res.配置。UI_MODE_TYPE_NORMAL\r\n","Returns the absolute path on the filesystem where a file created with\n            ":"返回文件系统上创建的文件系统上的绝对路径\r\n            \r\n","Indicates that both inquiry scan and page scan are enabled on the local\n Bluetooth adapter. ":"表示在本地启用了查询扫描和页面扫描\r\n 蓝牙适配器。\r\n","Activity Action: Provide explicit editable access to the given data.":"活动行动：提供对给定数据的明确可编辑访问。\r\n","Adjustment in text font weight.":"调整文本字体重量。\r\n","android.content.ContentResolver.getPeriodicSyncs(android.accounts.Account, java.lang.String)":"android.content.contentresolver.getperiodicsyncs（android.accounts.accounts.account，java.lang.string）\r\n","android.graphics.RectF.RectF()":"android.graphics.Rectf.Rectf（）\r\n","system":"系统\r\n","android.gesture.Gesture.getID()":"android.gesture.gestir.getID（）\r\n","Current user preference for the locale, corresponding to\n            <a href=\"[TODO: @docRoot]guide/topics/resources/providing-resources.":"当前对语言环境的用户偏好对应\r\n            <a href =“ [todo：@docroot]指南/主题/资源/提供资源。\r\n","if the width or height are <= 0\n":"如果宽度或高度为<= 0\r\n\r\n","Returns the assigned dynamic protocol/service multiplexer (PSM) value for the listening L2CAP\n            Connection-oriented Channel (CoC) server socket.":"返回侦听L2CAP的分配的动态协议/服务多路复用器（PSM）值\r\n            面向连接的通道（COC）服务器套接字。\r\n","android.graphics.drawable.LayerDrawable.PADDING_MODE_NEST":"android.graphics.drawable.layerdrawable.padding_mode_nest\r\n","android.content.ContentProvider":"android.content.ContentProvider\r\n","Set or clear the transfer mode object.":"设置或清除传输模式对象。\r\n","android.content.ContentResolver.removeStatusChangeListener(java.lang.Object)":"android.content.contentresolver.removestatuschangelistener（java.lang.object）\r\n"," \n`":"\r\n`\r\n","android.graphics.RenderNode.setClipToOutline(boolean)":"机器人。图形。RenderNode。setClipToOutline(布尔值)\r\n","android.graphics.Color.getModel()":"android.graphics.color.getmodel（）\r\n","Indicate failed communication.":"表示通信失败。\r\n","android.bluetooth.BluetoothHearingAid.getDevicesMatchingConnectionStates(int[])":"android.bluetooth.bluetoothhearingaid.getDevicesMatchingConnectionStates（int []）\r\n","Creates a new <code>Color</code> in the specified color space with the\n            specified component values.":"在指定的颜色空间中创建一个新的<code>颜色</code>\r\n            指定的组件值。\r\n","Encode the Signature as ASCII text in to an existing array.":"将签名编码为ASCII文本中的签名中，将其编码为现有数组。\r\n","android.content.RestrictionEntry.getDescription()":"android.content.gresterriceentry.getDescription（）\r\n","Source":"资源\r\n","Broadcast Action: Sent when the credential-encrypted private storage has\n            become unlocked for the target user.":"广播动作：当凭证加密的私人存储有时发送\r\n            为目标用户解锁。\r\n","Include dynamic shortcuts in the result.":"在结果中包括动态快捷方式。\r\n","</td>\n                <td>":"</td>\r\n                <td>\r\n","android.graphics.RenderNode.setClipToBounds(boolean)":"机器人。图形。RenderNode。setClipToBounds(布尔值)\r\n","Value type that represents a SyncAdapterType.":"代表SyncAdapterType的值类型。\r\n","android.content.ContentProviderClient.getStreamTypes(android.net.Uri, java.lang.String)":"android.content.contentproviderclient.getStreamTypes（android.net.uri，java.lang.string）\r\n","android.content.ContentValues.keySet()":"android.content.contentvalues.keyset（）\r\n","android.content.Intent.Intent(java.lang.String, android.net.Uri, android.content.Context, java.lang.Class)":"android.content.intent.intent（java.lang.string，android.net.uri，android.content.context，java.lang.class）\r\n","android.content.RestrictionsManager":"android.content.strictionsmanager\r\n","An integer representing the starting of the line has no modification for hyphenation.":"代表线路启动的整数没有任何连字符的修改。\r\n","android.content.BroadcastReceiver.setResultCode(int)":"android.content.broadcastreceiver.setresultcode（int）\r\n","Container for an array of values that were retrieved with\n            ":"带有一系列值的容器\r\n            \r\n","android.content.pm.PackageInfo.setLongVersionCode(long)":"android.content.pm.packageinfo.setlongversioncode（long）\r\n","Return the priority of this filter. -or- Modify priority of this filter.":"返回此过滤器的优先级。 - 或修改此过滤器的优先级。\r\n","Returns true if there is currently a sync operation for the given account or authority\n            actively being processed.":"如果当前有针对给定帐户或授权的同步操作，则返回为true\r\n            积极处理。\r\n","if the load is canceled during execution.":"如果执行期间取消负载。\r\n","Closes this document.":"关闭此文档。\r\n"," with the hotspot bounds.":" 与热点边界。\r\n","If the file requires a password or\n         the security scheme is not supported.\n":"如果文件需要密码或\r\n         不支持安全计划。\r\n\r\n","android.hardware.Camera.startSmoothZoom(int)":"android.hardware.camera.startsmoothzoom（int）\r\n","Copy the coordinates from src into this rectangle.":"将src中的坐标复制到此矩形中。\r\n","android.database.StaleDataException":"机器人。数据库。StaleDataException\r\n","Returns an instance of ":"返回一个实例\r\n","Indicates that a sync operation has been canceled.":"表示已取消同步操作。\r\n","Given an array of String bindArgs, this method binds all of them in one single call.":"给定一个字符串bindargs的数组，此方法将所有这些绑定在一个呼叫中。\r\n","The main programming interface for the DRM framework.":"DRM框架的主要编程接口。\r\n","android.database.sqlite.SQLiteDatabase.query(boolean, java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"android.database.sqlite.sqlitedatabase.query（boolean，java.lang.string，java.lang.string []，java.lang.string，java.lang.lang.string []，java.lang.lang.string，java.lang。字符串，java.lang.string，java.lang.string）\r\n"," for using Bluetooth.":" 用于使用蓝牙。\r\n","android.content.Context.COMPANION_DEVICE_SERVICE":"android.content.context.companion_device_service\r\n","android.content.Intent.CATEGORY_LEANBACK_LAUNCHER":"android.content.intent.category_leanback_launcher\r\n","Connects the specified color spaces to sRGB.":"将指定的颜色空间连接到SRGB。\r\n","The rights-protected content can be previewed.":"可以预览以权利保护的内容。\r\n","if the provided URI could not be opened.\n":"如果提供的URI无法打开。\r\n\r\n","Bluetooth LE scan settings are passed to ":"蓝牙LE扫描设置已传递给\r\n","android.bluetooth.le.AdvertisingSetParameters":"android.bluetooth.le.AdvertisingsetParameters\r\n","android.graphics.Region.translate(int, int)":"android.graphics.gregion.translate（int，int）\r\n","The NinePatch class permits drawing a bitmap in nine or more sections.":"NinePatch类允许在九个或更多部分中绘制位图。\r\n","File creation mode: the default mode, where the created file can only\n be accessed by the calling application (or all applications sharing the\n same user ID).":"文件创建模式：默认模式，其中创建的文件只能\r\n 可以通过调用申请访问（或共享的所有应用程序\r\n 相同的用户ID）。\r\n","Retrieve text from a package.":"从包装中检索文本。\r\n","android.content.Intent.CATEGORY_UNIT_TEST":"android.content.intent.category_unit_test\r\n","android.content.ClipboardManager.getText()":"android.content.clipboardmanager.getText（）\r\n","android.content.Intent.ACTION_CALL":"android.content.intent.action_call\r\n","android.content.res.Configuration.setLocales(android.os.LocaleList)":"android.content.Res.Configuration.SetLocales（android.os.localelist）\r\n","Represents a shortcut/live folder icon resource.":"代表快捷方式/实时文件夹图标资源。\r\n","android.bluetooth.BluetoothGattServerCallback.onPhyUpdate(android.bluetooth.BluetoothDevice, int, int, int)":"android.bluetooth.bluetoothgattservercallback.onphyupdate（android.bluetooth.bluetoothdevice，int，int，int，int）\r\n","T:Android.Content.ContentProviderOperation+Builder":"t：android.content.ContentProvideroperation+Builder\r\n","android.graphics.drawable.Drawable.getLayoutDirection()":"android.graphics.drawable.drawable.getlayoutdirection（）\r\n","Bitmap.Config#HARDWARE":"bitmap.config＃硬件\r\n","Return a drawable object associated with a particular resource ID.":"返回与特定资源ID关联的可绘制对象。\r\n","Retrieve the banner associated with an Intent.":"检索与意图相关的横幅。\r\n",": The device supports app widgets.":"：该设备支持应用程序小部件。\r\n","Callback indicating when a remote device has been connected or disconnected.":"回调指示何时连接或断开远程设备。\r\n","android.hardware.camera2.CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_RAW RAW":"android.hardware.camera2.camerametadata＃request_available_capabilities_raw raw\r\n","Gravity":"重力\r\n","android.graphics.Paint.Paint(int)":"android.graphics.paint.paint（int）\r\n","android.content.Context.GAME_SERVICE":"android.content.context.game_service\r\n","Used to enable/disable periodic advertising.":"用于启用/禁用定期广告。\r\n","android.content.pm.PackageManager.FEATURE_WIFI":"android.content.pm.packagemanager.feature_wifi\r\n","android.graphics.Canvas.drawBitmap(android.graphics.Bitmap, android.graphics.Rect, android.graphics.RectF, android.graphics.Paint)":"android.graphics.CANVAS.DRAWBITMAP（android.graphics.bitmap，android.graphics.Rect，android.graphics.Rectf，android.graphics.paint）\r\n","Construct a ContentProvider instance.":"构建一个ContentProvider实例。\r\n","Prints the contents of a Cursor to a StringBuilder.":"将光标的内容打印到StringBuilder。\r\n","android.content.ContentUris":"android.content.Contenturis\r\n","Create a new paint with default settings.":"创建具有默认设置的新涂料。\r\n","Determine if two Color structs have the same value.":"确定两个颜色结构是否具有相同的值。\r\n","Set the density at which this drawable will be rendered.":"设置该绘制可渲染的密度。\r\n","[Sa + Da - Sa*Da,\n             Sc*(1 - Da) + Dc*(1 - Sa) + max(Sc, Dc)] ":"[sa + da -sa*da，\r\n             sc*（1 -da） + dc*（1 -sa） + max（sc，dc）]\r\n","android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String, java.lang.String[])":"android.database.sqlite.sqlitedatabase.rawquery（java.lang.string，java.lang.string []）\r\n","android.bluetooth.le.AdvertisingSetParameters.isScannable()":"android.bluetooth.le.AdvertisingsetParameters.isscannable（）\r\n","android.graphics.ColorSpace.toXyz(float[])":"android.graphics.colorspace.toxyz（float []）\r\n","android.graphics.Camera.getMatrix(android.graphics.Matrix)":"android.graphics.camera.getmatrix（android.graphics.matrix）\r\n","#ACTION_VIEW_PERMISSION_USAGE_FOR_PERIOD":"#action_view_permission_usage_for_period\r\n","Returns the scale value for this display list on the Y axis.":"返回此显示列表在Y轴上的比例值。\r\n","Returns the number of components that form a color value according\n            to this color space's color model, plus one extra component for\n            alpha.":"Returns the number of components that form a color value according\r\n            to this color space's color model, plus one extra component for\r\n            alpha.\r\n","android.content.pm.LauncherActivityInfo.getActivityInfo()":"android.content.pm.launcheractivityInfo.getActivityInfo（）\r\n","android.graphics.drawable.LayerDrawable.getPaddingMode()":"android.graphics.drawable.layerdrawable.getPaddingmode（）\r\n","android.content.IntentFilter.getCategory(int)":"android.content.intentfilter.getCategory（int）\r\n","Registers a listener that will receive callbacks when a load is canceled.":"注册一个侦听器，该侦听器将在取消负载时会收到回调。\r\n","android.content.ServiceConnection.onBindingDied(android.content.ComponentName)":"android.content.serviceconnection.onbindingdied（android.content.componentname）\r\n","The pixel density of the actual screen that is being used.":"所使用的实际屏幕的像素密度。\r\n","New IntentFilter that matches a single action and data type.":"与单个动作和数据类型匹配的新IntentFilter。\r\n","Map from a packages canonical name to the current name in use on the device.":"从包装名称到设备上使用的当前名称的映射。\r\n","android.graphics.drawable.RotateDrawable.getPivotY()":"android.graphics.drawable.RotatedRawable.getPivoty（）\r\n","android.bluetooth.le.AdvertisingSetCallback.onAdvertisingEnabled(android.bluetooth.le.AdvertisingSet, boolean, int)":"android.bluetooth.le.AdvertisingsetCallback.OnadvertisingEnabled（android.bluetooth.le.le.Advertisingset，boolean，int）\r\n","#ALL_SAVE_FLAG":"#ALL_SAVE_FLAG\r\n","android.database.sqlite.SQLiteDatabase.yieldIfContendedSafely(long)":"android.database.sqlite.sqlitedatabase.yieldifcontendendedsafely（long）\r\n","android.content.Intent.ACTION_APPLICATION_RESTRICTIONS_CHANGED":"android.content.intent.action_application_restrictions_changed\r\n","Adds a descriptor to this characteristic.":"将描述符添加到此特征中。\r\n","android.content.ClipDescription.ClipDescription(java.lang.CharSequence, java.lang.String[])":"android.content.clipdescription.clipdescription（java.lang.charsequence，java.lang.string []）\r\n","android.content.Intent.EXTRA_KEY_EVENT":"android.content.intent.extra_key_event\r\n","Retrieve the current result extra data, as set by the previous receiver.":"根据上一个接收器设置的当前结果额外数据。\r\n","android.content.pm.PackageManager.getApplicationIcon(android.content.pm.ApplicationInfo)":"android.content.pm.packagemanager.getApplicationicon（android.content.pm.applicationinfo）\r\n","android.drm.DrmInfoEvent.TYPE_RIGHTS_INSTALLED":"android.drm.drminfoevent.type_rights_installed\r\n","android.content.res.Resources.getDimension(int)":"android.content.Res.Resources.getDimension（int）\r\n","android.content.Intent.ACTION_PACKAGE_REPLACED":"android.content.intent.action_package_rephaced\r\n","android.graphics.Canvas.drawOval(android.graphics.RectF, android.graphics.Paint)":"android.graphics.canvas.drawoval（android.graphics.Rectf，android.graphics.paint）\r\n","Pass this to ":"将此传递给\r\n","android.content.ContentResolver.insert(android.net.Uri, android.content.ContentValues)":"android.content.contentresolver.insert（android.net.uri，android.content.contentvalues）\r\n","Activity Action: For the default launcher to show the confirmation dialog to create\n            a pinned app widget.":"活动操作：默认启动器显示“确认对话框”以创建\r\n            固定的应用小部件。\r\n","Updates the instant application cookie for the calling app.":"更新有关调用应用程序的即时应用程序cookie。\r\n","android.database.Cursor.registerDataSetObserver(android.database.DataSetObserver)":"机器人。数据库。光标。registerDataSetObserver（android。数据库。DataSetObserver）\r\n","android.graphics.Camera.rotateZ(float)":"android.graphics.camera.rotatez（float）\r\n","To be used as a sample code example (not part of the normal user\n            experience).":"用作示例代码示例（不是普通用户的一部分\r\n            经验）。\r\n","Draws a double rounded rectangle using the specified paint.":"使用指定的油漆绘制双圆形矩形。\r\n","This is a convenience class that helps build SQL queries to be sent to\n            ":"这是一个便利类，可帮助构建SQL查询以发送到\r\n            \r\n","BluetoothGatt#readDescriptor":"Bluetoothgatt＃readDescriptor\r\n","Create and/or open a database that will be used for reading and writing.":"创建和/或打开将用于阅读和写作的数据库。\r\n","Specifies how layer padding should affect the bounds of subsequent\n            layers.":"指定层填充应如何影响后续的边界\r\n            层。\r\n","android.bluetooth.BluetoothGattServerCallback.onMtuChanged(android.bluetooth.BluetoothDevice, int)":"android.bluetooth.bluetoothgattservercallback.onmtuchanged（android.bluetooth.bluetoothdevice，int）\r\n","android.content.pm.Signature.toByteArray()":"android.content.pm.signature.tobytearray（）\r\n",". -or- Sets a projection greylist of columns that will be allowed through, even\n            when ":"。 - 或 - 设置一个列的投影灰色列表，即使\r\n            什么时候\r\n","android.Manifest.permission#BLUETOOTH_CONNECT":"android.manifest.permission＃bluetooth_connect\r\n","Indicates whether the specified color is in the specified color space.":"指示指定的颜色是否在指定的颜色空间中。\r\n","Remove a previously registered status change listener.":"删除先前注册的状态更改侦听器。\r\n","android.content.Context.USB_SERVICE":"android.content.context.usb_service\r\n","android.content.ContentValues.putNull(java.lang.String)":"android.content.contentvalues.putnull（java.lang.string）\r\n","android.graphics.Canvas.setBitmap(android.graphics.Bitmap)":"机器人。图形。帆布。setBitmap（android。图形。位图）\r\n","android.graphics.PointF.writeToParcel(android.os.Parcel, int)":"android.graphics.pointf.writetoparcel（android.os.parcel，int）\r\n","android.content.Intent.EXTRA_ALTERNATE_INTENTS":"android.content.intent.extra_alternate_intents\r\n","Take photos of fast moving objects.":"拍摄快速移动对象的照片。\r\n","An integer representing the starting of the line has Zero-Width-Joiner (U+200D).":"代表线路起始的整数具有零宽的加速器（U+200D）。\r\n","Postconcats the matrix with the specified matrix.":"用指定的矩阵后结合矩阵。\r\n","android.graphics.Paint.getStrokeCap()":"android.graphics.paint.getstrokecap（）\r\n","When set, the selection is verified against malicious arguments.":"设置时，选择了针对恶意论点的选择。\r\n","android.graphics.drawable.RippleDrawable.setRadius(int)":"android.graphics.drawable.rippledrawable.setradius（int）\r\n","android.graphics.drawable.GradientDrawable.setInnerRadiusRatio(float)":"android.graphics.drawable.gradientdrawable.setinnerradiusratio（float）\r\n","android.hardware.Sensor.getHighestDirectReportRateLevel()":"android.hardware.sensor.gethighestDirectRectratelevel（）\r\n","Value indicating how this activity is to be persisted across\n reboots for restoring in the Recents list.":"价值表明该活动如何持续存在\r\n 重新启动以恢复在恢复列表中。\r\n","Adds a new transition between keyframes.":"在密钥帧之间添加了新的过渡。\r\n","Set the matrix to rotate by the specified number of degrees, with a pivot point at (px, py).":"将矩阵设置为通过指定的度数旋转，并带有一个枢轴点（px，py）。\r\n","android.content.Intent.CATEGORY_ACCESSIBILITY_SHORTCUT_TARGET":"android.content.intent.category_accessibility_shortcut_target\r\n","android.drm.DrmUtils":"Android.drm.drmutils\r\n","android.content.pm.FeatureInfo.FLAG_REQUIRED":"android.content.pm.featureinfo.flag_required\r\n","Called when the database has been opened.":"打开数据库时调用。\r\n","android.graphics.drawable.AnimatedImageDrawable":"android.graphics.drawable.animatedimatedimatedrawable\r\n","Constructs a new cursor with the given initial capacity.":"构造具有给定初始容量的新游标。\r\n","android.graphics.RenderNode.setProjectionReceiver(boolean)":"android.graphics.rendernode.setproctiveRectreceiver（boolean）\r\n","[Sa + Da - Sa*Da,\n             Sc*(1 - Da) + Dc*(1 - Sa) + min(Sc, Dc)] ":"[sa + da -sa*da，\r\n             SC*（1 -DA）​​ + DC*（1 -SA） + Min（SC，DC）]\r\n","android.content.ContentResolver.cancelSync(android.net.Uri)":"android.content.contentresolver.cancelsync（android.net.uri）\r\n","android.content.pm.PackageManager.hasSigningCertificate(java.lang.String, byte[], int)":"android.content.pm.packagemanager.hassigningcertificate（java.lang.string，byte []，int）\r\n","Use the current ":"使用电流\r\n"," intents to override the default action\n            of restarting the application.":" 意图覆盖默认操作\r\n            重新启动应用程序。\r\n","Appends an SQL string to the given StringBuilder, including the opening\n            and closing single quotes.":"将SQL字符串附加到给定的StringBuilder，包括开口\r\n            并关闭单语引号。\r\n","android.graphics.Paint.setTextLocales(android.os.LocaleList)":"android.graphics.paint.settextlocales（android.os.localelist）\r\n","Utility methods useful for working with ":"实用方法可用于合作\r\n","Check if Bluetooth SCO audio is connected.":"检查是否连接蓝牙SCO音频。\r\n","android.bluetooth.le.AdvertiseSettings.isConnectable()":"android.bluetooth.le.aptervertisestings.isconnectable（）\r\n","android.media.tv.TvInputManager":"android.media.tv.tvinputmanager\r\n","Get the output stream associated with this socket.":"获取与此套接字关联的输出流。\r\n","Database open flag: when set, the database is opened with write-ahead\n logging enabled by default.":"数据库打开标志：设置时，数据库将使用Write-Ahead打开\r\n 默认情况下启用了日志记录。\r\n","android.graphics.Paint.setFilterBitmap(boolean)":"android.graphics.paint.setfilterbitmap（布尔值）\r\n","Sets the relative padding.":"设置相对填充。\r\n","A set of features that can be requested by an application.":"应用程序可以请求的一组功能。\r\n","android.bluetooth.BluetoothGattCharacteristic.PROPERTY_WRITE":"android.bluetooth.bluetoothgattcharacteristic.property_write\r\n","Sets the pivot value for the display list on the Y axis":"在y轴上设置显示列表的枢轴值\r\n","android.content.pm.SharedLibraryInfo.VERSION_UNDEFINED":"android.content.pm.sharedlibraryinfo.version_undefined\r\n","When a constraint violation occurs,no ROLLBACK is executed\n so changes from prior commands within the same transaction\n are preserved. ":"发生约束冲突时，不执行回滚\r\n 因此，从同一事务中的先前命令更改\r\n 被保存下来。 \r\n","android.content.Intent.ACTION_SHOW_APP_INFO":"android.content.intent.action_show_app_info\r\n","android.database.sqlite.SQLiteQuery":"android.database.sqlite.sqlitequery\r\n","android.drm.DrmUtils.getExtendedMetadataParser(byte[])":"android.drm.drmutils.getExtendedMetadataparser（byte []）\r\n",", and the feature version will indicate what\n            level of optional hardware features limits it supports.":"，并且功能版本将指示什么\r\n            可选硬件功能的限制限制其支持。\r\n",", corresponding to ":"，对应于\r\n","Broadcast Action: Trigger the download and eventual installation\n            of a package.":"广播动作：触发下载和最终安装\r\n            包裹。\r\n","android.graphics.fonts.FontVariationAxis.getStyleValue()":"android.graphics.fonts.fontvariationaxis.getStyleValue（）\r\n","android.graphics.Path.addPath(android.graphics.Path, android.graphics.Matrix)":"android.graphics.path.addpath（android.graphics.path，android.graphics.matrix）\r\n","android.content.pm.ShortcutInfo.hasKeyFieldsOnly()":"android.content.pm.shortcutinfo.haskeyfieldsonly（）\r\n","android.content.pm.PackageInstaller.getActiveStagedSessions()":"android.content.pm.packageInstaller.getActiveStagedSessions（）\r\n","android.content.IntentFilter.IntentFilter(java.lang.String)":"android.content.intentfilter.intentfilter（java.lang.string）\r\n","#NO_MATCH_DATA":"#no_match_data\r\n","android.content.SharedPreferences.contains(java.lang.String)":"android.content.sharedpreferences.contains（java.lang.string）\r\n","android.bluetooth.BluetoothHealth.STATE_CHANNEL_CONNECTING":"android.bluetooth.bluetoothhealth.state_channel_connecting\r\n","Creates a fully-specified CursorLoader.":"创建一个完全指定的光标加载程序。\r\n","android.graphics.Matrix.postScale(float, float)":"android.graphics.matrix.postscale（浮点，浮点）\r\n","android.content.ClipData.getItemAt(int)":"android.content.clipdata.getitemat（int）\r\n","Gets the package used to create this icon.":"获取用于创建此图标的软件包。\r\n","android.graphics.Path.transform(android.graphics.Matrix)":"android.graphics.path.transform（android.graphics.matrix）\r\n","android.graphics.RenderNode.hasOverlappingRendering()":"机器人。图形。RenderNode。hasOverlappingRendering（）\r\n"," object it is editing.":" 对象正在编辑。\r\n","android.content.Intent.ACTION_USER_BACKGROUND":"android.content.intent.action_user_background\r\n","Return the array of floats representing this colormatrix.":"Return the array of floats representing this colormatrix.\r\n","Install the given package, which already exists on the device, for the user for which this\n            installer was created.":"为用户安装设备上已经存在的给定软件包\r\n            创建了安装程序。\r\n","android.graphics.RenderNode.getPivotY()":"机器人。图形。RenderNode。getPivotY()\r\n","android.graphics.Bitmap.setHasAlpha(boolean)":"android.graphics.bitmap.sethasalpha（布尔）\r\n","Returns whether or not this application was installed as a virtual preload.":"返回该应用程序是否已安装为虚拟预紧力。\r\n","android.bluetooth.BluetoothHealth.STATE_CHANNEL_DISCONNECTING":"android.bluetooth.bluetoothhealth.state_channel_disconnecting\r\n","android.hardware.Camera.startFaceDetection()":"android.hardware.camera.startfacedetection（）\r\n","Given a start and stop distance, return in dst the intervening\n            segment(s).":"鉴于起点和停止距离，请返回DST\r\n            段（s）。\r\n","android.content.Loader.abandon()":"android.content.loader.abandon（）\r\n","android.content.pm.PermissionInfo.PermissionInfo(android.content.pm.PermissionInfo)":"android.content.pm.permissioninfo.permissioninfo（android.content.pm.permissioninfo）\r\n","Apply this matrix to the array of 2D vectors specified by src, and write the transformed\n            vectors into the array of vectors specified by dst.":"将此矩阵应用于SRC指定的2D向量的数组，并编写转换\r\n            向量插入由DST指定的向量阵列。\r\n","android.graphics.LightingColorFilter.getColorAdd()":"android.graphics.lightingcolorfilter.getColoradd（）\r\n","android.content.ContentValues.containsKey(java.lang.String)":"android.content.contentvalues.containskey（java.lang.string）\r\n","Description of a single Uri permission grant.":"单个URI许可赠款的描述。\r\n",", value corresponding to the\n physical keyboard being exposed.":"，值对应的\r\n 物理键盘被暴露。\r\n"," to retrieve approval and\n            user state for declared web domains.":" 检索批准和\r\n            声明的Web域的用户状态。\r\n","android.content.pm.PackageManager.getActivityLogo(android.content.Intent)":"android.content.pm.packagemanager.getActivityLogo（android.content.intent）\r\n","android.bluetooth.BluetoothSocket.getMaxTransmitPacketSize()":"android.bluetooth.bluetoothsocket.getMaxtransmitpacketsize（）\r\n","Take pictures on the snow.":"在雪地上拍照。\r\n","If true, always apply URI permission grants, as per the\n            ":"如果为true，请务必按照URI许可赠款\r\n            \r\n","Is the given data scheme specific part included in the filter?  Note that if the\n            filter does not include any scheme specific parts, false will <em>always</em> be\n            returned.":"过滤器中是否包含给定数据方案的特定部分？请注意，如果\r\n            过滤器不包括任何方案特定零件\r\n            回来。\r\n","\n            For example, AT+CHUP.":"\r\n            例如，在+chup。\r\n","android.content.pm.ConfigurationInfo.reqInputFeatures":"android.content.pm.configurationinfo.reqinputfeatures\r\n","s that match ":"S匹配\r\n","Creates a new PeriodicSync, copying the Bundle.":"创建一个新的时期同步，复制捆绑包。\r\n","android.graphics.Paint.measureText(java.lang.CharSequence, int, int)":"android.graphics.paint.measuretext（java.lang.charsequence，int，int）\r\n","Copies the fields from delta into this Configuration object, keeping\n            track of which ones have changed.":"将字段从delta复制到此配置对象中，保留\r\n            跟踪哪些改变了。\r\n","Broadcast the given intent to all interested BroadcastReceivers, allowing\n            an array of required permissions to be enforced.":"向所有感兴趣的广播员广播给定的意图，允许\r\n            要执行的一系列要求的权限。\r\n","Computes the chromatic adaptation transform from the specified\n            source white point to the specified destination white point.":"计算从指定的色彩适应转换\r\n            源白点到指定的目标白点。\r\n","android.content.SyncResult.fullSyncRequested":"android.content.syncresult.fullsyncrequested\r\n","Run this sync operation as an \"expedited job\"\n            (see ":"作为“加急工作”运行此同步操作\r\n            （看\r\n","Retrieves the type of rights-protected object (for example, content object, rights\n            object, and so on) using the specified path or MIME type.":"检索受权保护对象的类型（例如，内容对象，权利\r\n            对象，依此类推）使用指定的路径或MIME类型。\r\n","android.view.displayhash.DisplayHashManager":"android.view.displayhash.displayhashmanager\r\n","android.content.ContentResolver.QUERY_ARG_SORT_COLLATION":"android.content.contentresolver.query_arg_sort_collat​​ion\r\n","Create a labeled intent with no intent data but supplying a textual\n label and icon resource for it.":"创建一个没有意图数据的标签意图，但提供文本\r\n 标签和图标资源。\r\n","android.content.AbstractThreadedSyncAdapter":"android.content.AbstractthreadSyncadapter\r\n","android.drm.DrmErrorEvent.TYPE_PROCESS_DRM_INFO_FAILED":"android.drm.drmerrorevent.type_process_drm_info_failed\r\n","android.graphics.Color.rgb(int, int, int)":"android.graphics.color.rgb（int，int，int）\r\n","android.database.sqlite.SQLiteDatabase.updateWithOnConflict(java.lang.String, android.content.ContentValues, java.lang.String, java.lang.String[], int)":"android.database.sqlite.sqlitedatabase.updatewithonconflict（java.lang.string，android.content.content.contentvalues，java.lang.string，java.lang.lang.lang.string []，int），int）\r\n","SHA512 hash computed over all file bytes.":"SHA512哈希在所有文件字节上计算。\r\n","android.content.BroadcastReceiver.goAsync()":"android.content.broadcastreceiver.goasync（）\r\n","android.content.AsyncQueryHandler.startUpdate(int, java.lang.Object, android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])":"android.content.asyncqueryhandler.startupdate（int，java.lang.object，android.net.uri，android.content.content.contentvalues，java.lang.string，java.lang.lang.string []）\r\n","android.content.pm.LauncherApps.startShortcut(java.lang.String, java.lang.String, android.graphics.Rect, android.os.Bundle, android.os.UserHandle)":"android.content.pm.launcherapps.startshortcut（java.lang.string，java.lang.string，android.graphics.Rect，android.os.bundle，android.os.os.os.userhandle）\r\n","android.graphics.NinePatch.draw(android.graphics.Canvas, android.graphics.Rect, android.graphics.Paint)":"android.graphics.ninepatch.draw（android.graphics.canvas，android.graphics.Rect，android.graphics.paint）\r\n","Gets the version of the library.":"获取库的版本。\r\n","Set the matrix to scale by sx and sy, with a pivot point at (px, py).":"将矩阵设置为按SX和SY的缩放，并具有（PX，PY）的枢轴点。\r\n","Return the opacity/transparency of this Drawable.":"返回此绘制的不透明度/透明度。\r\n","if the second package is not signed but the first is.":"如果未签署第二个软件包，但第一个包是。\r\n","RGB format used for pictures encoded as RGB_565. ":"RGB格式用于编码为RGB_565的图片。\r\n","android.content.Intent.CATEGORY_APP_MARKET":"android.content.intent.category_app_market\r\n","android.hardware.Camera.open()":"android.hardware.camera.open（）\r\n","android.content.ContentProviderClient.query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)":"android.content.contentprovider.query（android.net.uri，java.lang.string []，java.lang.string，java.lang.string []，java.lang.lang.string）\r\n","if the permission has been granted to the given package.":"如果已授予给定软件包的许可。\r\n","The shared user ID label of this package, as specified by the &lt;manifest&gt;\n            tag's ":"该软件包的共享用户ID标签，如＆lt; subtest＆gt;\r\n            标签\r\n","Return a color-int from red, green, blue float components\n            in the range \\([0.":"从红色，绿色，蓝色的浮点组件中返回颜色\r\n            在范围内\\（[0。\r\n","android.content.Intent.getLongArrayExtra(java.lang.String)":"android.content.intent.getlongarrayextra（java.lang.string）\r\n","Broadcast Action: The user has switched the phone into or out of Airplane Mode.":"广播动作：用户将手机转换为飞机模式。\r\n","Return one of the possible clip MIME types.":"返回可能的夹子模拟类型之一。\r\n","Activity Action: Creates a shortcut.":"活动动作：创建快捷方式。\r\n","A Drawable that changes the size of another Drawable based on its current\n            level value.":"可绘制的可根据其电流更改另一个可绘制的大小的可绘制\r\n            级别值。\r\n","ContentResolver#QUERY_ARG_SQL_LIMIT":"contentResolver＃query_arg_sql_limit\r\n","android.content.Intent#ACTION_PACKAGE_CHANGED":"android.content.intent＃action_package_changed\r\n","If set, the new activity is not kept in the list of recently launched\n activities.":"如果设定，新活动不会保存在最近启动的列表中\r\n 活动。\r\n","Structured description of Intent values to be matched.":"意图值的结构化描述要匹配。\r\n","Utility class to aid in matching URIs in content providers.":"实用课程，以帮助与内容提供商中的URI匹配。\r\n","android.content.RestrictionsManager.EXTRA_REQUEST_BUNDLE":"android.content.strictionsmanager.extra_request_bundle\r\n","android.content.Context.createWindowContext(int, android.os.Bundle)":"android.content.context.CreateWIndowContext（int，android.os.bundle）\r\n","android.content.ContentResolver.SYNC_EXTRAS_EXPEDITED":"android.content.contentresolver.sync_extras_expedited\r\n","Prepare the InsertHelper for an insert.":"准备插入器插入器。\r\n","Register a BroadcastReceiver to be run in the main activity thread.":"注册一个在主活动线程中运行的broadcastreceiver。\r\n","Return interface that offers the ability to install, upgrade, and remove\n applications on the device.":"返回界面，提供安装、升级和删除功能\r\n 设备上的应用程序。\r\n","Indicates the local Bluetooth adapter is turning on. ":"指示本地蓝牙适配器正在打开。\r\n","Returns whether the RenderNode has a display list.":"返回RenderNode是否有显示列表。\r\n","A connected or connecting Bluetooth socket.":"连接或连接蓝牙插座。\r\n","android.graphics.Point.writeToParcel(android.os.Parcel, int)":"android.graphics.point.writetoparcel（android.os.parcel，int）\r\n","android.content.pm.LauncherApps.ACTION_CONFIRM_PIN_SHORTCUT":"android.content.pm.launcherapps.action_confirm_pin_shortcut\r\n","android.content.Intent.ACTION_USER_FOREGROUND":"android.content.intent.action_user_foreground\r\n","android.content.pm.CrossProfileApps.canInteractAcrossProfiles()":"android.content.pm.crossprofileapps.caninteractacrosprofiles（）\r\n","When a constraint violation occurs, the one row that contains\n the constraint violation is not inserted or changed.\n But the command continues executing normally. ":"发生约束冲突时，包含的一行\r\n 不插入或更改约束冲突。\r\n 但命令继续正常执行。 \r\n","android.content.Intent.CATEGORY_SELECTED_ALTERNATIVE":"android.content.intent.category_selected_alternative\r\n","ContentObserver#onChange":"ContentObserver＃Onchange\r\n","Align specifies how drawText aligns its text relative to the\n [x,y] coordinates.":"对齐指定绘制文本如何对齐其文本相对于\r\n [x，y]坐标。\r\n","Multi-plane Android YUV 444 format":"多平面Android YUV 444格式\r\n","android.database.sqlite.SQLiteDatabase.enableWriteAheadLogging()":"android.database.sqlite.sqlitedatabase.enablewriteaheadlogging（）\r\n","Finishes a started page.":"完成一个开始页面。\r\n","Return a boolean associated with a particular resource ID.":"返回与特定资源ID关联的布尔值。\r\n","android.content.RestrictionEntry.getSelectedState()":"android.content.resterictionEntry.getSelectedState（）\r\n","Gets the localized label that corresponds to the option in settings for granting\n            background access.":"获取与授予设置中的选项相对应的本地化标签\r\n            背景访问。\r\n","android.content.Context.LOCATION_SERVICE":"android.content.context.location_service\r\n","ResourcesProvider":"ResourcesProvider\r\n","android.content.ClipDescription.ClipDescription(android.content.ClipDescription)":"android.content.clipdescription.clipdescription（android.content.clipdescription）\r\n","Returns whether or not there are more rows to compare using next().":"返回是否有更多的行使用Next（）进行比较。\r\n","android.content.IntentFilter.hasDataSchemeSpecificPart(java.lang.String)":"android.content.intentfilter.hasdataschemespecificpart（java.lang.string）\r\n","Set the shader's local matrix.":"设置着色器的本地矩阵。\r\n","A base class for compiled SQLite programs.":"用于编译SQLite程序的基类。\r\n","android.graphics.drawable.shapes.PathShape":"android.graphics.drawable.shapes.pathshape\r\n","android.graphics.HardwareRenderer.SYNC_REDRAW_REQUESTED":"android.graphics.hardwarerenderer.sync_redraw_requested\r\n","android.graphics.Shader.TileMode#CLAMP":"android.graphics.shader.tilemode＃夹具\r\n","android.content.pm.PackageManager.INSTALL_SCENARIO_BULK_SECONDARY":"android.content.pm.packagemanager.install_scenario_bulk_secondary\r\n","A Drawable can call this to unschedule an action previously\n scheduled with ":"可绘制的可将其称为以前的操作\r\n 安排\r\n","[Sa, Sa * Dc + Sc * (1 - Da)] ":"[SA，SA * DC + SC *（1 -DA）​​]\r\n","Returns the distance in Z of the camera for this RenderNode":"返回相机z中的距离\r\n"," to be specified or overridden.":" 要指定或覆盖。\r\n","android.content.pm.PackageManager.getApplicationInfo(java.lang.String, int)":"android.content.pm.packagemanager.getapplicationinfo（java.lang.string，int）\r\n","ActivityInfo":"ActivityInfo\r\n","android.content.IntentFilter.create(java.lang.String, java.lang.String)":"android.content.intentfilter.create（java.lang.string，java.lang.string）\r\n","android.graphics.drawable.LayerDrawable.getBottomPadding()":"android.graphics.drawable.layerdrawable.getBottompadding（）\r\n","android.content.UriPermission.getPersistedTime()":"android.content.uripermession.getPersistedTime（）\r\n","android.content.Loader.dataToString(java.lang.Object)":"android.content.loader.datatoString（java.lang.object）\r\n","android.content.ContentResolver.openOutputStream(android.net.Uri)":"android.content.contentresolver.openoutputstream（android.net.uri）\r\n","android.content.Context.ACTIVITY_SERVICE":"android.content.context.activity_service\r\n","Descriptor permission: Allow encrypted writes with person-in-the-middle\n            protection":"描述符许可：允许与中间人的加密写作\r\n            保护\r\n","android.graphics.drawable.Drawable.setTintMode(android.graphics.Mode)":"机器人。图形。可画的。可画的。setTintMode（android。图形。模式）\r\n","android.content.pm.LauncherApps.getShortcutIntent(java.lang.String, java.lang.String, android.os.Bundle, android.os.UserHandle)":"android.content.pm.launcherapps.getShortcutintent（java.lang.string，java.lang.string，android.os.os.bundle，android.os.userhandle）\r\n"," received in\n            ":" 收到\r\n            \r\n"," for the elements in this object.":" 对于此对象中的元素。\r\n","Creates a new inset drawable with the specified inset.":"使用指定的插图创建可绘制的新插图。\r\n","android.graphics.drawable.ColorDrawable.ColorDrawable()":"android.graphics.drawable.colordrawable.colordrawable（）\r\n","Indicates whether this drawable has at least one state spec explicitly\n            specifying ":"指示此绘制是否明确具有至少一个状态规格\r\n            指定\r\n","Grant permission to access a specific Uri to another package, regardless\n            of whether that package has general permission to access the Uri's\n            content provider.":"授予有权访问特定URI到另一个软件包的权限\r\n            该软件包是否有一般允许访问URI的权限\r\n            内容提供商。\r\n","Return any resource identifier that has been given for the label text.":"返回为标签文本提供的任何资源标识符。\r\n","android.content.Intent.CATEGORY_APP_MAPS":"android.content.intent.category_app_maps\r\n","Size of the package's OBBs placed on external media.":"包装的OBB的大小放在外部媒体上。\r\n","Sets the outline to the oval defined by input rect.":"将轮廓设置为由输入rect定义的椭圆形。\r\n","android.hardware.Camera.enableShutterSound(boolean)":"android.hardware.camera.enableshuttersound（布尔值）\r\n","#SCREENLAYOUT_SIZE_NORMAL":"#screenlayout_size_normal\r\n","Change the path-based permission required to read and/or write data in\n            the content provider.":"更改读取和/或编写数据所需的基于路径的权限\r\n            内容提供商。\r\n","BluetoothDevice#PHY_LE_1M":"BluetoothDevice＃phy_le_1m\r\n","android.graphics.RectF.setEmpty()":"android.graphics.Rectf.setEmpty（）\r\n","android.content.ComponentName.ComponentName(android.os.Parcel)":"android.content.componentname.componentname（android.os.parcel）\r\n","android.content.pm.PackageManager.FEATURE_AUDIO_PRO":"android.content.pm.packagemanager.feature_audio_pro\r\n","android.graphics.drawable.ColorDrawable.setColor(int)":"android.graphics.drawable.colordrawable.setcolor（int）\r\n","android.graphics.HardwareRenderer.start()":"android.graphics.hardwarerenderer.start（）\r\n","android.graphics.fonts.FontStyle.FONT_WEIGHT_EXTRA_LIGHT":"android.graphics.fonts.fontstyle.font_weight_extra_light\r\n",": The device supports eSE-\n            based NFC card emulation.":"：该设备支持ESE-\r\n            基于NFC卡仿真。\r\n","Return whether this loader has been abandoned.":"返回该装载机是否已被放弃。\r\n","android.graphics.ImageFormat.FLEX_RGB_888":"android.graphics.imageformat.flex_rgb_888\r\n","android.graphics.Canvas.drawText(char[], int, int, float, float, android.graphics.Paint)":"android.graphics.canvas.drawText（char []，int，int，float，float，android.graphics.paint）\r\n","android.content.Intent.EXTRA_RESTRICTIONS_BUNDLE":"android.content.intent.extra_restrictions_bundle\r\n","BluetoothGattService#SERVICE_TYPE_PRIMARY":"bluetoothgattservice＃service_type_primary\r\n"," flag: return information about\n services in the package in ":" 标志：返回有关的信息\r\n 包装中的服务\r\n","android.graphics.Color.convert(float, float, float, float, android.graphics.ColorSpace, android.graphics.ColorSpace)":"android.graphics.color.convert（浮点，浮点，浮点，浮点，android.graphics.colorspace，android.graphics.colorspace）\r\n","android.drm.DrmInfoEvent.TYPE_RIGHTS_REMOVED":"android.drm.drminfoevent.type_rights_remaved\r\n","ContentProvider#refresh":"ContentProvider＃刷新\r\n","android.bluetooth.BluetoothHealthCallback.onHealthChannelStateChange(android.bluetooth.BluetoothHealthAppConfiguration, android.bluetooth.BluetoothDevice, int, int, android.os.ParcelFileDescriptor, int)":"android.bluetooth.bluetoothhealthcallback.onhealthchannelstatechange（android.bluetooth.bluetoothhealthappconfiguration，android.bluetooth.bluetooth.bluetooth.bluetoothdevice，int，int，int，int，int，int，android.os.parcelfiledscriptor，int）\r\n","android.drm.DrmRights.DrmRights(java.lang.String, java.lang.String, java.lang.String)":"android.drm.drmrights.drmrights（java.lang.string，java.lang.string，java.lang.string）\r\n","Adds a new row to the end with the given column values.":"使用给定的列值将新行添加到末尾。\r\n","Returns the density for this bitmap. -or- Specifies the density for this bitmap.":"返回此位图的密度。 - 或 - 指定该位图的密度。\r\n","android.bluetooth.le.ScanResult.ScanResult(android.bluetooth.BluetoothDevice, android.bluetooth.le.ScanRecord, int, long)":"android.bluetooth.le.scanresult.scanresult（android.bluetooth.bluetoothdevice，android.bluetooth.le.le.scanrecord，int，int，long）\r\n","android.graphics.fonts.Font.getMetrics(android.graphics.Paint, android.graphics.FontMetrics)":"android.graphics.fonts.font.getMetrics（android.graphics.paint，android.graphics.fontmetrics）\r\n","android.hardware.Sensor.STRING_TYPE_GAME_ROTATION_VECTOR":"android.hardware.sensor.string_type_game_rotation_vector\r\n","#loadInBackground":"#loadinbackground\r\n","android.bluetooth.BluetoothGattDescriptor.ENABLE_INDICATION_VALUE":"android.bluetooth.bluetoothgattdescriptor.enable_indication_value\r\n","Defines an oval shape.":"定义椭圆形形状。\r\n","android.content.res.Resources.getColorStateList(int)":"android.content.Res.Resources.GetColorStateList（INT）\r\n","android.bluetooth.BluetoothHeadset.EXTRA_VENDOR_SPECIFIC_HEADSET_EVENT_CMD":"android.bluetooth.bluetoothheadset.extra_vendor_specific_headset_event_cmd\r\n","If set in an intent passed to ":"如果设置在意图中\r\n","android.graphics.drawable.RippleDrawable.setEffectColor(android.content.res.ColorStateList)":"android.graphics.drawable.rippledrawable.seteffectcolor（android.content.res.colorstatelist）\r\n","Starts recording a display list for the render node.":"开始记录渲染节点的显示列表。\r\n",": If set, a single instance of the provider will\n            run for all users on the device.":"：如果设置，提供商的一个实例将\r\n            为设备上的所有用户运行。\r\n",": The device supports high fidelity sensor processing\n            capabilities.":"：该设备支持高保真传感器处理\r\n            功能。\r\n","android.content.pm.ServiceInfo.flags":"android.content.pm.ServiceInfo.flags\r\n"," specifying the new time zone of the device.":" 指定设备的新时区。\r\n","Key for request data contained in the request bundle.":"请求捆绑包中包含的请求数据的键。\r\n","android.content.pm.LauncherApps":"android.content.pm.launcherapps\r\n","Returns true if video stabilization is supported.":"如果支持视频稳定，则返回为真。\r\n","Draw this shape into the provided Canvas, with the provided Paint.":"用提供的油漆将此形状绘制到提供的画布中。\r\n","android.graphics.NinePatch.getBitmap()":"android.graphics.ninepatch.getBitmap（）\r\n","#SCREENLAYOUT_LAYOUTDIR_RTL":"#screenlayout_layoutdir_rtl\r\n","android.content.RestrictionEntry.createBundleArrayEntry(java.lang.String, android.content.RestrictionEntry[])":"android.content.grestriceentry.createbundlearrayerrrayentry（java.lang.string，android.content.restrictionertry []）\r\n","Static utility methods for dealing with databases and ":"用于处理数据库和的静态实用方法\r\n","android.graphics.Canvas.clipPath(android.graphics.Path)":"android.graphics.canvas.clippath（android.graphics.path）\r\n","A drawable resource identifier (in the package's resources) of this\n            component's banner.":"可绘制的资源标识符（在包装资源中）\r\n            组件的横幅。\r\n"," for handling management of network service\n            discovery":" 用于处理网络服务的管理\r\n            发现\r\n","#getColorForState(int[], int)":"#getColorForstate（int []，int）\r\n","The filter ":"过滤器\r\n","android.content.res.Configuration.UI_MODE_NIGHT_UNDEFINED":"机器人。内容。res.配置。UI_MODE_NIGHT_UNDEFINED\r\n","Returns a list of service solicitation UUIDs within the advertisement that are used to\n            identify the Bluetooth GATT services.":"返回广告中使用的服务请求列表\r\n            确定蓝牙Gatt服务。\r\n","android.database.sqlite.SQLiteStatement.simpleQueryForLong()":"android.database.sqlite.sqlitestatement.simplequeryforlong（）\r\n","android.content.Intent.EXTRA_SHORTCUT_ICON_RESOURCE":"android.content.intent.extra_shortcut_icon_resource\r\n","android.content.res.AssetFileDescriptor.UNKNOWN_LENGTH":"机器人。内容。res.AssetFileDescriptor。UNKNOWN_LENGTH\r\n","Indicates whether this collection is empty.":"指示此集合是否为空。\r\n",",\n            and contains a string array of all of the components that have changed.":"，，，，\r\n            并包含所有已更改的组件的字符串数组。\r\n"," to define the\n            parameters for the scan.":" 定义\r\n            扫描的参数。\r\n","Broadcast Action: A new version of an application package has been\n            installed, replacing an existing version that was previously installed.":"广播动作：应用程序包的新版本已经\r\n            安装，替换以前安装的现有版本。\r\n","android.content.Context.createContext(android.content.ContextParams)":"android.content.context.CreateContext（android.content.contextparams）\r\n","4x5 matrix for transforming the color and alpha components of a Bitmap.":"4x5矩阵，用于转换位图的颜色和alpha组件。\r\n","Creates a new <code>Color</code> in the specified color space with the\n            specified red, green, blue and alpha component values.":"在指定的颜色空间中创建一个新的<code>颜色</code>\r\n            指定的红色，绿色，蓝色和α分量值。\r\n","ContentProviderOperation#apply":"ContentProvideroperation＃应用\r\n","Retuns whether the configuration is in night mode":"重新调整配置是否处于夜间模式\r\n","android.graphics.Paint.setAntiAlias(boolean)":"android.graphics.paint.setantialias（boolean）\r\n","android.graphics.text.PositionedGlyphs":"android.graphics.text.positionedglyphs\r\n","if the width or height are <= 0, or if\n         the color array's length is less than the number of pixels.\n":"如果宽度或高度为<= 0，或者\r\n         颜色阵列的长度小于像素的数量。\r\n\r\n","Returns the received signal strength in dBm.":"返回DBM中接收的信号强度。\r\n","android.content.pm.PackageManager.getXml(java.lang.String, int, android.content.pm.ApplicationInfo)":"android.content.pm.packagemanager.getxml（java.lang.string，int，android.content.pm.applicationinfo）\r\n","if input cacheSize > ":"如果输入缓存>\r\n","android.graphics.drawable.Drawable.getCurrent()":"android.graphics.drawable.drawable.getCurrent（）\r\n","android.graphics.RenderNode.getHeight()":"机器人。图形。RenderNode。getHeight（）\r\n","android.graphics.HardwareRenderer.HardwareRenderer()":"android.graphics.hardwarerenderer.hardwarerenderer（）\r\n","android.net.wifi.ScanResult":"android.net.wifi.ScanResult\r\n",": The device supports landscape orientation\n            screens.":"：该设备支持景观方向\r\n            屏幕。\r\n","android.content.pm.PackageManager.getPackageGids(java.lang.String, int)":"android.content.pm.packagemanager.getPackageGids（java.lang.string，int）\r\n","Inserts a row into a table at the given URL.":"将行插入给定URL的表中。\r\n","Copy all extras in 'src' in to this intent.":"将“ SRC”中的所有额外内容复制到此意图中。\r\n","android.graphics.Canvas.drawTextRun(java.lang.CharSequence, int, int, int, int, float, float, boolean, android.graphics.Paint)":"android.graphics.canvas.drawtextrun（java.lang.CharSequence，int，int，int，int，int，int，float，float，float，boolean，boolean，android.graphics.paint）\r\n","android.database.MatrixCursor.MatrixCursor(java.lang.String[])":"机器人。数据库。MatrixCursor.MatrixCursor（java。朗。字符串[])\r\n","This exception is thrown when a given package, application, or component\n name cannot be found.":"当给定的软件包，应用程序或组件时，会抛出此例外\r\n 名称找不到。\r\n","android.graphics.Canvas.restoreToCount(int)":"机器人。图形。帆布。restoreToCount（int）\r\n","android.os.Handler Handler":"Android.os.Handler处理程序\r\n","android.graphics.ColorMatrix.setRGB2YUV()":"android.graphics.ColorMatrix.setRGB2YUV()\r\n","android.content.pm.ResolveInfo.resolvePackageName":"android.content.pm.resolveinfo.resolve packagename\r\n","Creates a <code>DrmEvent</code> object with the specified parameters.":"使用指定参数创建<code> drmevent </code>对象。\r\n","android.content.ContentProvider.restoreCallingIdentity(android.content.CallingIdentity)":"android.content.ContentProvider.RestoreCallingIdentity（android.content.CallingIdentity）\r\n","android.content.RestrictionEntry.RestrictionEntry(java.lang.String, java.lang.String[])":"android.content.resterictionEntry.resterictionertry（java.lang.string，java.lang.string []）\r\n","android.drm.DrmConvertedStatus.offset":"android.drm.drmconvertedstatus.offset\r\n","Gets a value and converts it to a Long.":"获取一个值并将其转换为长。\r\n","AdvertiseCallback":"AdvertiseCallback\r\n","Gets all MIME types contained by MIME group.":"获取MIME组包含的所有MIME类型。\r\n","android.content.ContentProvider.onCreate()":"android.content.contentprovider.oncreate（）\r\n","android.content.Intent.putParcelableArrayListExtra(java.lang.String, java.util.ArrayList)":"android.content.intent.putparcelablearraylistextra（java.lang.string，java.util.arraylist）\r\n","android.content.pm.PackageManager.FEATURE_SECURITY_MODEL_COMPATIBLE":"android.content.pm.packagemanager.feature_security_model_compatible\r\n","android.content.pm.PackageManager.VERSION_CODE_HIGHEST":"android.content.pm.packagemanager.version_code_highest\r\n","#registerOnLoadCanceledListener":"＃registeronloadCanceLedListener\r\n","Encoded formats. ":"编码格式。\r\n","#TYPE_INTEGER":"#type_integer\r\n","android.content.Context.DOWNLOAD_SERVICE":"android.content.context.download_service\r\n","Sets configuration parameters that are used for opening ":"设置用于打开的配置参数\r\n","android.content.Intent.getParcelableExtra(java.lang.String)":"android.content.intent.getParcelableExtra（java.lang.string）\r\n","#COLOR_MODE_WIDE_COLOR_GAMUT_MASK":"#COLOR_MODE_WIDE_COLOR_GAMUT_MASK\r\n","#registerSinkAppConfiguration(String, int, BluetoothHealthCallback) ":"#RegistersInkappConfiguration（字符串，int，bluetoothHealthCallback）\r\n","glyphIdOffset + glyphCount":"GlyphidOffset + Glyphcount\r\n","#reconfigure(int, int, Config)":"#reconfigure（int，int，config）\r\n","Information pertaining to the signing certificates used to sign a package.":"与用于签署软件包的签名证书有关的信息。\r\n","android.graphics.ColorMatrix.ColorMatrix()":"机器人。图形。颜色矩阵。颜色矩阵()\r\n","android.bluetooth.BluetoothHeadset.AT_CMD_TYPE_BASIC":"android.bluetooth.bluetoothheadset.at_cmd_type_basic\r\n","android.content.res.Resources.getResourceTypeName(int)":"Android.content.Res.Res.resources.getResourcetypename（int）\r\n","android.content.res.Resources.getResourceEntryName(int)":"Android.content.Res.Res.resources.getResourceentryname（int）\r\n","android.content.pm.PermissionInfo.FLAG_COSTS_MONEY":"android.content.pm.permissioninfo.flag_costs_money\r\n","Clears out the existing contents of the window, making it safe to reuse\n            for new data.":"清除窗口的现有内容，使重复使用安全\r\n            对于新数据。\r\n","ContentProviderClient":"ContentProviderClient\r\n","android.content.ContentResolver.query(android.net.Uri, java.lang.String[], android.os.Bundle, android.os.CancellationSignal)":"android.content.contentresolver.query（android.net.uri，java.lang.string []，android.os.bundle，android.os.os.cancellationsignal）\r\n","android.content.pm.ApplicationInfo.areAttributionsUserVisible()":"android.content.pm.applicationinfo.AreatTributionsuservisible（）\r\n","Parse and return the list of restrictions defined in the manifest for the specified\n            package, if any.":"解析并返回指定的清单中定义的限制列表\r\n            包，如果有的话。\r\n","android.graphics.Canvas.drawPicture(android.graphics.Picture)":"android.graphics.canvas.drawpicture（android.graphics.picture）\r\n","android.content.res.Resources.obtainAttributes(android.util.AttributeSet, int[])":"android.content.Res.Res.resources.ObtainAttributes（android.util.attributeset，int []）\r\n","Set the matrix to scale by sx and sy.":"将矩阵设置为按SX和SY缩放。\r\n","Sets the repeat behavior of this drawable on both axis.":"在两个轴上设置可绘制的重复行为。\r\n","Retrieves the type of information that is associated with this object.":"检索与此对象关联的信息类型。\r\n","Sets the maximum number of milliseconds that SQLite connection is allowed to be idle\n            before it is closed and removed from the pool.":"设置允许SQLite连接闲置的最大数量\r\n            在关闭并将其从游泳池中取出之前。\r\n","android.database.Observable.mObservers":"机器人。数据库。可观察到的。暴民服务生\r\n","Retrieve the Drawable for the attribute at <var>index</var>.":"检索<var> index </var>的属性的绘制。\r\n","A Canvas implementation that records view system drawing operations for deferred rendering.":"一个Canvas实现，用于记录延迟渲染的视图系统绘图操作。\r\n","The Paint class holds the style and color information about how to draw\n            geometries, text and bitmaps.":"油漆类拥有有关如何绘制的样式和颜色信息\r\n            几何，文本和位图。\r\n","Returns a mask of the configuration parameters for which this color\n            state list may change, requiring that it be re-created.":"返回该颜色的配置参数的掩码\r\n            状态列表可能会更改，要求重新创建它。\r\n","android.content.Intent.ACTION_PACKAGE_NEEDS_VERIFICATION":"android.content.intent.action_package_needs_verification\r\n","android.drm.DrmErrorEvent.TYPE_NOT_SUPPORTED":"android.drm.drmerrorevent.type_not_supported\r\n","android.bluetooth.BluetoothSocket.connect()":"android.bluetooth.bluetoothsocket.connect（）\r\n",": The device can report location with coarse\n            accuracy using a network-based geolocation system.":"：该设备可以粗略地报告位置\r\n            使用基于网络的地理位置系统的精度。\r\n","android.content.ContentProviderOperation.newDelete(android.net.Uri)":"android.content.contentProvideroperation.newdelete（android.net.uri）\r\n","android.graphics.Canvas.drawPatch(android.graphics.NinePatch, android.graphics.RectF, android.graphics.Paint)":"android.graphics.canvas.drawpatch（android.graphics.ninepatch，android.graphics.Rectf，android.graphics.paint.paint）\r\n","android.drm.DrmRights.DrmRights(java.lang.String, java.lang.String)":"android.drm.drmrights.drmrights（java.lang.string，java.lang.string）\r\n","android.content.ContentResolver.releasePersistableUriPermission(android.net.Uri, int)":"android.content.contentresolver.ReleasepersableSistableUipermersion（android.net.uri，int）\r\n","LevelListDrawable":"LevellistDrawable\r\n","Execute this SQL statement, if the number of rows affected by execution of this SQL\n            statement is of any importance to the caller - for example, UPDATE / DELETE SQL statements.":"执行此SQL语句，如果执行此SQL的行影响的行数\r\n            语句对呼叫者至关重要 - 例如，更新 /删除SQL语句。\r\n","Provide a binder to an already-bound service.":"为已经结合的服务提供活页夹。\r\n","This must be set to the index of the row ID column by any\n subclass that wishes to support updates.":"这必须由任何设置为行ID列的索引\r\n 希望支持更新的子类。\r\n","Completely abandon the given session, destroying all staged data and\n            rendering it invalid.":"完全放弃给定的会话，销毁所有分阶段数据，并\r\n            使其无效。\r\n","android.content.Intent.ACTION_MY_PACKAGE_REPLACED":"android.content.intent.action_my_package_rephaced\r\n","Returns the list of tables being queried -or- Sets the list of tables to query.":"返回查询 - 或 - 设置查询表列表的表格列表。\r\n","android.graphics.RenderNode.hasDisplayList()":"机器人。图形。RenderNode。hasDisplayList()\r\n","android.content.ClipData.newRawUri(java.lang.CharSequence, android.net.Uri)":"android.content.clipdata.newrawuri（java.lang.charsecence，android.net.uri）\r\n","android.bluetooth.le.AdvertisingSet":"android.bluetooth.le.aptersingsetset\r\n","Broadcast sent to the parent user when an associated profile has been started and unlocked.":"启动并解锁关联的配置文件时，已发送给父户的广播。\r\n","The list of features that are required by this group.":"该组所需的功能列表。\r\n","Theme":"主题\r\n","android.content.pm.PackageManager.FEATURE_SE_OMAPI_SD":"android.content.pm.packagemanager.feature_se_omapi_sd\r\n","A constant string describing an ambient temperature sensor type.":"描述环境温度传感器类型的恒定字符串。\r\n","Starts the face detection.":"开始面部检测。\r\n","android.graphics.Outline.offset(int, int)":"android.graphics.outline.offset（int，int）\r\n","The hardware renderer no longer has a valid ":"硬件渲染器不再有效\r\n","Returns any available set of application-specific restrictions applicable\n            to this application.":"返回任何适用的可用应用程序特定限制\r\n            到此应用程序。\r\n","Update advertising parameters associated with this AdvertisingSet.":"更新与此广告集关联的广告参数。\r\n","\n            color space with the specified red, green and blue component values.":"\r\n            带有指定的红色，绿色和蓝色组件值的彩色空间。\r\n",": a ":"： 一个\r\n","A minimum weight value for the font":"字体的最小重量值\r\n","Gets the exposure compensation step.":"获取曝光补偿步骤。\r\n","Checksum for which split.":"校验和拆分。\r\n","android.net.ConnectivityDiagnosticsManager":"android.net.connectivityDiagnosticsManager\r\n"," is not -1 this contains contains the value of\n the column at ":" 它包含的值不是-1\r\n 列于 \r\n","Specify radii for each of the 4 corners.":"为四个角中的每个角度指定半径。\r\n","An extra for ":"额外的\r\n","Gets the attribution source of the calling app.":"获取调用应用程序的归因源。\r\n","Defines a generic graphical \"shape.":"定义通用图形“形状。\r\n"," for querying device usage stats.":" 用于查询设备的使用统计。\r\n","Return the handle to a system-level service by name.":"按名称将其返回到系统级服务。\r\n","Called by a client to open a read-only stream containing data of a\n            particular MIME type.":"客户打电话给客户打开一个只读流，其中包含一个数据\r\n            特定的MIME类型。\r\n","Retrieve all of the information we know about a particular content\n            provider class.":"检索我们知道的有关特定内容的所有信息\r\n            提供者课程。\r\n","Get the height of the picture as passed to beginRecording.":"获取图片的高度，以便开始进行记录。\r\n","draw the gradient from the top-right to the bottom-left ":"将梯度从右上角绘制到左下角\r\n","Indicates whether the specified color is in the\n            ":"指示指定的颜色是否在\r\n            \r\n","Helper for drawPoints() that assumes you want to draw the entire array":"为您要绘制整个数组\r\n","outBounds":"出站\r\n","android.content.pm.PackageItemInfo.logo":"android.content.pm.packageiteminfo.logo\r\n","android.graphics.Bitmap.getColorSpace()":"android.graphics.bitmap.getColorspace（）\r\n","android.graphics.Canvas.drawPatch(android.graphics.NinePatch, android.graphics.Rect, android.graphics.Paint)":"android.graphics.canvas.drawpatch（android.graphics.ninepatch，android.graphics.Rect，android.graphics.paint）\r\n","android.drm.DrmManagerClient.removeRights(android.net.Uri)":"android.drm.drmmanagerclient.removerights（android.net.uri）\r\n","android.graphics.drawable.DrawableContainer.selectDrawable(int)":"机器人。图形。可画的。DrawableContainer。选择绘制(int)\r\n"," intents to specify\n            whether to show the chooser or not when there is only one application available\n            to choose from.":" 指定的意图\r\n            是否只有一个可用的应用程序显示，是否显示选择器\r\n            从中选择。\r\n"," that also supports\n            usage from remote processes.":" 这也支持\r\n            远程流程的使用。\r\n","android.content.res.Resources.getIntArray(int)":"Android.content.Res.Res.resources.getIntarray（int）\r\n","BluetoothGattServer":"Bluetoothgattserver\r\n","Returns the list of strings, set earlier, that will be presented as choices to the user.":"返回较早设置的字符串列表，该列表将作为选择提供给用户。\r\n","Executes a statement that returns a 1 by 1 table with a blob value.":"执行一个语句，该语句返回带有斑点值的1乘1表。\r\n","android.content.ContentValues.put(java.lang.String, byte[])":"android.content.contentvalues.put（java.lang.string，byte []）\r\n","Sets the size of the shape drawn by this drawable.":"设置该绘制的形状大小。\r\n","#cancelLoad()":"#cancelload（）\r\n","Set the matrix to skew by sx and sy.":"将矩阵设置为SX和SY偏斜。\r\n","android.graphics.drawable.Drawable.setChangingConfigurations(int)":"android.graphics.drawable.drawable.setchangingconfigurations（int）\r\n","android.content.Intent.EXTRA_DONT_KILL_APP":"android.content.intent.extra_dont_kill_app\r\n","if the attribute is defined but is\n         not a color or drawable resource.\n":"如果定义了属性，但是\r\n         不是颜色或可绘制的资源。\r\n\r\n","android.content.BroadcastReceiver.setResultExtras(android.os.Bundle)":"android.content.broadcastreceiver.setresultextras（android.os.bundle）\r\n","If the target user is a managed profile of the calling user or the caller\n            is itself a managed profile, then this returns a badged copy of the given\n            drawable allowing the user to distinguish it from the original drawable.":"如果目标用户是呼叫用户或呼叫者的托管配置文件\r\n            本身是一个托管配置文件，然后返回给定的徽章副本\r\n            可绘制的用户可以将其与原始绘制区分开。\r\n","Specify an optional color filter for the drawable.":"为可绘制的可选颜色过滤器指定可选的颜色过滤器。\r\n","if fps range is invalid.":"如果FPS范围无效。\r\n",": The device does not have a touch screen, but\n            does support touch emulation for basic events that supports distinct\n            tracking of two or more fingers.":"：该设备没有触摸屏，但是\r\n            确实支持触摸仿真，以支持不同的基本事件\r\n            跟踪两个或更多手指。\r\n","android.content.pm.PackageManager.getPermissionInfo(java.lang.String, int)":"android.content.pm.packagemanager.getpermissioninfo（java.lang.string，int）\r\n","android.content.pm.PackageManager.FEATURE_AUDIO_LOW_LATENCY":"android.content.pm.packagemanager.feature_audio_low_latency\r\n","android.content.QuickViewConstants.FEATURE_VIEW":"android.content.QuickViewConstants.feature_view\r\n","If true then the SyncManager will never issue an initialization sync to the SyncAdapter\n            and will instead automatically call\n            ":"如果是true，那么Syncmanager将永远不会向SyncAdapter发布初始化同步\r\n            并将自动致电\r\n            \r\n","Retrieve the current textual label associated with this resolution.":"检索与此分辨率关联的当前文本标签。\r\n","Convert the ARGB color to its HSV components.":"Convert the ARGB color to its HSV components.\r\n","A helper method to extract a ":"提取辅助方法\r\n","Standard CIE 1931 2° illuminant D75, encoded in xyY.":"标准CIE 1931 2°Ilumuminant D75，用XYY编码。\r\n","android.content.pm.PermissionInfo.getProtection()":"android.content.pm.permissioninfo.getProtection（）\r\n","Constructs a new ParcelableColorSpace that wraps the provided ColorSpace.":"构建了一个新的ParcelableColorspace，该空间包裹了提供的Colorspace。\r\n","This field works in conjuction with inPurgeable.":"该领域与不可行的合作作用。\r\n","android.content.pm.LabeledIntent.getIconResource()":"android.content.pm.labeledintent.geticonresource（）\r\n","android.content.Loader.registerOnLoadCanceledListener(android.content.OnLoadCanceledListener)":"android.content.loader.registeronloadCanceLedListener（android.content.onloadCanceLedListener）\r\n","If the target user is a managed profile of the calling user or the caller\n            is itself a managed profile, then this returns a copy of the label with\n            badging for accessibility services like talkback.":"如果目标用户是呼叫用户或呼叫者的托管配置文件\r\n            本身是一个托管配置文件，然后将标签的副本带有\r\n            可访问性服务等徽章。\r\n","android.content.pm.PackageManager.FEATURE_HOME_SCREEN":"android.content.pm.packagemanager.feature_home_screen\r\n","Provides conversion from a text into glyph array.":"将文本转换为字形数组。\r\n","Return the width of the text.":"返回文本的宽度。\r\n","Sets the opacity of this drawable directly instead of collecting the\n            states from the layers.":"直接设置此绘制的不透明度，而不是收集\r\n            层中的状态。\r\n","OnPartialImageListener":"OnpartialImageListener\r\n","For Installer-provided checksums, certificate of the Installer.":"对于安装程序提供的校验和安装程序证书。\r\n","High level manager used to obtain an instance of an ":"高级管理器用于获得一个实例\r\n","android.graphics.drawable.LayerDrawable.setDrawableByLayerId(int, android.graphics.drawable.Drawable)":"android.graphics.drawable.layerdrawable.setdrawablebylayerid（int，android.graphics.drawable.drabable.drabable）\r\n","Sets an explicit size for the specified layer.":"为指定层设置一个明确的大小。\r\n","Gets the library name an app defines in its manifest\n            to depend on the library.":"获取应用在其清单中定义的库名称\r\n            以依赖于图书馆。\r\n","Class representing a sensor.":"代表传感器的类。\r\n","android.graphics.BitmapShader.BitmapShader(android.graphics.Bitmap, android.graphics.TileMode, android.graphics.TileMode)":"android.graphics.bitmapshader.bitmapshader（android.graphics.bitmap，android.graphics.tilemode，android.graphics.tilemode）\r\n","Add a back references as a selection arg.":"将返回引用添加为选择arg。\r\n","android.content.res.Configuration.UI_MODE_TYPE_MASK":"机器人。内容。res.配置。UI_MODE_TYPE_MASK\r\n","android.content.IntentFilter.addDataScheme(java.lang.String)":"android.content.intentfilter.adddatascheme（java.lang.string）\r\n","android.content.Context.fileList()":"android.content.context.filelist（）\r\n","android.content.pm.ShortcutInfo.DISABLED_REASON_APP_CHANGED":"android.content.pm.shortcutinfo.disabled_reason_app_changed\r\n","android.bluetooth.BluetoothHidDevice.REPORT_TYPE_INPUT":"android.bluetooth.bluetoothhiddevice.report_type_input\r\n","Creates a new <code>Color</code> instance from a color long.":"从颜色长的情况下创建一个新的<code>颜色</code>实例。\r\n","android.graphics.Path.lineTo(float, float)":"android.graphics.path.lineto（浮点，浮点）\r\n","android.content.pm.ActivityInfo":"android.content.pm.activityinfo\r\n"," to install a\n            package.":" 安装一个\r\n            包裹。\r\n","Specifies desired sort order.":"指定所需的排序顺序。\r\n","ContentProviderResult":"ContentProviderResult\r\n","This method retrieves the metadata value associated with a given key.":"此方法检索与给定键关联的元数据值。\r\n","android.content.pm.LauncherApps.getShortcuts(android.content.pm.ShortcutQuery, android.os.UserHandle)":"android.content.pm.launcherapps.getShortcuts（android.content.pm.shortcutquery，android.os.userhandle）\r\n","android.database.DatabaseUtils.cursorIntToContentValues(android.database.Cursor, java.lang.String, android.content.ContentValues, java.lang.String)":"android.database.databaseutils.cursorinttocontentvalues（android.database.cursor，java.lang.string，android.content.content.content.contentvalues，java.lang.string）\r\n","android.hardware.Camera.Parameters#getMaxZoom":"android.hardware.camera.parameters＃getmaxzoom\r\n"," argument for\n            ":" 争论\r\n            \r\n","Context#registerReceiver(BroadcastReceiver, IntentFilter)\n            Context.registerReceiver()":"上下文＃registerReceiver（Broadcastreceiver，IntentFilter）\r\n            context.registerReceiver（）\r\n","android.content.res.Resources.newTheme()":"android.content.res.resources.newtheme（）\r\n","android.graphics.RenderNode.setOutline(android.graphics.Outline)":"机器人。图形。RenderNode。setOutline（android。图形。大纲)\r\n","Broadcast Action: The user has cleared the data of a package.":"广播操作：用户清除了包装的数据。\r\n","Interface to write a stream of data to a pipe.":"接口将数据流写入管道。\r\n","Tells if this Drawable will be automatically mirrored  when its layout direction is RTL\n right-to-left.":"告诉该绘制的布局方向是RTL时，该绘制是否会自动镜像\r\n 右到左。\r\n","android.graphics.drawable.AdaptiveIconDrawable.getBackground()":"android.graphics.drawable.aptiveicondrawable.getbackground（）\r\n","Base class containing information common to all package items held by\n            the package manager.":"基类包含所有包含的包装项目的信息\r\n            软件包管理器。\r\n"," instance that holds the shared state of this Drawable.":" 具有此绘制的共享状态的实例。\r\n","android.content.pm.PackageManager.updateInstantAppCookie(byte[])":"android.content.pm.packagemanager.updateinstantappcookie（byte []）\r\n","android.graphics.drawable.GradientDrawable.setThicknessRatio(float)":"android.graphics.drawable.gradientdrawable.setthicknessratio（float）\r\n","Query if an app is currently suspended.":"查询如果当前已暂停应用程序。\r\n","android.content.pm.PackageManager.getPreferredPackages(int)":"android.content.pm.packagemanager.getPreferredpackages（int）\r\n","android.content.ContentResolver.query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)":"android.content.contentresolver.query（android.net.uri，java.lang.string []，java.lang.string，java.lang.string []，java.lang.string）\r\n","android.content.Intent.CATEGORY_OPENABLE":"android.content.intent.category_openable\r\n","android.gesture.GestureUtils.spatialSampling(android.gesture.Gesture, int)":"android.gesture.gestureutils.spatialsmpling（android.gesture.gesture，int）\r\n","android.content.pm.PackageManager.FEATURE_LEANBACK":"android.content.pm.packagemanager.feature_leanback\r\n","android.content.Context.registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter, java.lang.String, android.os.Handler, int)":"android.content.Context.RegisterReceiver（android.content.broadcastreceiver，android.content.intentfilter，java.lang.string，android.os.os.os.handler，int）\r\n","Create an intent with a given action and for a given data url.":"用给定的操作和给定的数据URL创建意图。\r\n","Creates a rounded-corner rectangle.":"创建一个圆形的矩形。\r\n","#setComponent(ComponentName)":"#SetComponent（componentName）\r\n","android.hardware.SensorEventListener2":"android.hardware.sensoreventlistener2\r\n","Something went wrong installing the rights.":"安装权利的问题出了问题。\r\n","Return true if the current contour is closed()":"如果关闭当前轮廓，请返回TRUE（）\r\n",": The device supports live TV and can display\n            contents from TV inputs implemented with the\n            ":"：该设备支持直播电视并可以显示\r\n            来自电视输入的内容\r\n            \r\n","android.content.res.AssetFileDescriptor.getExtras()":"机器人。内容。res.AssetFileDescriptor。getExtras()\r\n","android.graphics.pdf.PdfDocument.close()":"android.graphics.pdf.pdfdocument.close（）\r\n","Key that is used to pass the unique session ID for the subscription.":"用于通过订阅的唯一会话ID的键。\r\n","android.content.pm.PackageItemInfo.nonLocalizedLabel":"android.content.pm.packageiteminfo.no​​nlocalizedlabel\r\n","Applies any/all effects (patheffect, stroking) to src, returning the\n            result in dst.":"将任何/所有效果（Patheffect，streosing）应用于SRC，返回\r\n            导致DST。\r\n","Retrieves the rights data associated with this <code>DrmRights</code> object.":"检索与此<code> drmrights </code>对象关联的权利数据。\r\n","android.bluetooth.BluetoothLeAudio.getConnectionState(android.bluetooth.BluetoothDevice)":"android.bluetooth.bluetoothleaudio.getConnectionState（android.bluetooth.bluetoothdevice）\r\n","Set the matrix such that the specified src points would map to the specified dst points.":"设置矩阵，使指定的SRC点映射到指定的DST点。\r\n","A drawable resource identifier (in the package's resources) of this\n            component's icon.":"可绘制的资源标识符（在包装资源中）\r\n            组件的图标。\r\n","#setRoundRect(int, int, int, int, float)":"#SetRoundRect（int，int，int，int，float）\r\n","This function will normally be called for you automatically by\n            ":"通常，此功能会通过\r\n            \r\n","The digital rights are valid.":"数字权利是有效的。\r\n","This class is used to communicate the results of a sync operation to the SyncManager.":"该类用于将同步操作的结果传达给SyncManager。\r\n","Indicates whether the mipmap hint is enabled on this drawable's bitmap.":"指示是否在此绘制的位图上启用了MIPMAP提示。\r\n","android.database.sqlite.SQLiteTransactionListener.onRollback()":"android.database.sqlite.sqliteTransactionListener.onrollback（）\r\n","DomainState":"域名\r\n","A long representing the end timestamp (epoch time in millis) of the permission usage when\n            used with ":"长时间代表终点的时间戳（毫里时期的时期时间）\r\n            与\r\n","Perform a ":"执行\r\n","android.content.Intent.EXTRA_USER":"android.content.intent.extra_user\r\n","counter-clockwise ":"逆时针\r\n","This draws a shadow layer below the main layer, with the specified\n            offset and color, and blur radius.":"这绘制了主层下方的阴影层，并指定\r\n            偏移和颜色，半径模糊。\r\n","Allows to defer syncing until all accounts are properly set up.":"允许推迟同步，直到正确设置所有帐户。\r\n","android.graphics.drawable.PaintDrawable.setCornerRadius(float)":"android.graphics.drawable.paxtrable.setcornerradius（float）\r\n","android.content.Intent.ACTION_HEADSET_PLUG":"android.content.intent.action_headset_plug\r\n","android.graphics.RenderNode.getElevation()":"机器人。图形。RenderNode。getElevation()\r\n","Returns the current color filter, or ":"返回当前的颜色过滤器或\r\n","android.graphics.Path path":"Android.graphics.Path Path\r\n","PorterDuff Porter-Duff composite mode":"Porterduff Porter-Duff复合模式\r\n","This exception is thrown when a Cursor contains stale data and must be\n            requeried before being used again.":"当游标包含过时的数据并且必须是\r\n            在再次使用之前重新申请。\r\n","Create a shader that draws a radial gradient given the start and end points as well as\n            starting and ending radii.":"创建一个绘制径向梯度的着色器，鉴于起点和终点以及\r\n            开始和结束半径。\r\n","android.content.pm.PackageManager.FEATURE_TOUCHSCREEN_MULTITOUCH_DISTINCT":"android.content.pm.packagemanager.feature_touchscreen_multitouch_distinct\r\n","android.content.Context.openOrCreateDatabase(java.lang.String, int, android.database.sqlite.CursorFactory)":"android.content.context.openorcreateatabase（java.lang.string，int，android.database.sqlite.cursorFactory）\r\n",": If set, the service will automatically be\n            stopped by the system if the user removes a task that is rooted\n            in one of the application's activities.":"：如果设置，服务将自动\r\n            如果用户删除根植的任务，则由系统停止\r\n            在应用程序的活动之一。\r\n","android.app.LoaderManager":"android.app.loadermanager\r\n","android.database.sqlite.SQLiteProgram.getUniqueId()":"android.database.sqlite.sqliteprogram.getuniqueId（）\r\n","PixelFormat#UNKNOWN\n                       PixelFormat.UNKNOWN":"Pixelformat＃未知\r\n                       pixelformat.inknown\r\n","android.content.pm.Checksum.TYPE_PARTIAL_MERKLE_ROOT_1M_SHA256":"android.content.pm.checksum.type_partial_merkle_root_1m_sha256\r\n","Returns the Resources object this array was loaded from.":"返回资源对象，该数组是从中加载的。\r\n","Return true if the region is empty, or if the specified region does not\n            intersect the region.":"如果区域为空，或者指定区域不返回true\r\n            相交区域。\r\n","android.graphics.Paint.END_HYPHEN_EDIT_NO_EDIT":"android.graphics.paint.end_hyphen_edit_no_edit\r\n","if the bitmap is not mutable":"如果位图不可变\r\n","Return the class name, either fully qualified or in a shortened form\n            (with a leading '.":"返回班级名称，完全合格或缩短形式\r\n            （有领先。\r\n","android.content.pm.LabeledIntent.LabeledIntent(android.content.Intent, java.lang.String, java.lang.CharSequence, int)":"android.content.pm.labeledintent.labeledintent（android.content.intent，java.lang.string，java.lang.charsequence，int）\r\n","android.bluetooth.le.BluetoothLeAdvertiser.startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters, android.bluetooth.le.AdvertiseData, android.bluetooth.le.AdvertiseData, android.bluetooth.le.PeriodicAdvertisingParameters, android.bluetooth.le.AdvertiseData, android.bluetooth.le.AdvertisingSetCallback, android.os.Handler)":"android.bluetooth.le.BluetoothLeAdvertiser.startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters, android.bluetooth.le.AdvertiseData, android.bluetooth.le.AdvertiseData, android.bluetooth.le.PeriodicAdvertisingParameters, android.bluetooth.le.AdvertiseData, android.bluetooth.le.AdvertisingsetCallback，android.os.handler）\r\n","android.hardware.Sensor.STRING_TYPE_ACCELEROMETER_UNCALIBRATED":"android.hardware.sensor.string_type_accelerometer_uncaligrated\r\n","android.graphics.Paint.setStrokeJoin(android.graphics.Join)":"android.graphics.paint.setstrokejoin（android.graphics.join）\r\n",": This is a device dedicated to showing UI\n            on a watch.":"：这是一种用于显示UI的设备\r\n            在手表上。\r\n","Returns a list with information about all the active syncs.":"返回一份列表，其中包含有关所有活动同步的信息。\r\n","android.graphics.Paint.setAlpha(int)":"android.graphics.paint.setalpha（int）\r\n","android.content.pm.PackageManager":"android.content.pm.packagemanager\r\n","android.bluetooth.le.AdvertisingSetCallback.onAdvertisingSetStarted(android.bluetooth.le.AdvertisingSet, int, int)":"android.bluetooth.le.AdvertisingsetCallback.OnAdvertisingSeSterted（android.bluetooth.le..le..advertisingset，int，int）\r\n","android.content.Intent.getIntExtra(java.lang.String, int)":"android.content.intent.getIntextra（java.lang.string，int）\r\n","android.content.Intent#CATEGORY_DEFAULT":"机器人。内容。意图#CATEGORY_DEFAULT\r\n","android.graphics.drawable.Drawable.setState(int[])":"机器人。图形。可画的。可画的。setState(int[])\r\n","android.database.CursorWindow.freeLastRow()":"android.database.cursorwindow.freelastrow（）\r\n"," will\n            be coming soon.":" 将要\r\n            即将到来。\r\n","Returns if this permission offers write access.":"如果此权限提供写入访问，则返回。\r\n"," representing the parts of the NinePatch that are\n            completely transparent.":" 代表九点的部分\r\n            完全透明。\r\n","android.content.res.AssetManager.openFd(java.lang.String)":"机器人。内容。res.AssetManager。openFd（java。朗。弦）\r\n","Length used with ":"长度与 \r\n","This function is called every time the cursor is successfully scrolled\n to a new position, giving the subclass a chance to update any state it\n may have.":"每当光标成功滚动时，此功能都会称为\r\n 到一个新职位，给子类有机会更新任何状态\r\n 可能有。\r\n","Changes this drawable to use a single color state list instead of a\n            gradient.":"更改此绘制以使用单个颜色状态列表，而不是\r\n            坡度。\r\n","android.content.Context.MEDIA_SESSION_SERVICE":"android.content.context.media_session_service\r\n","android.bluetooth.le.AdvertisingSetParameters.INTERVAL_MIN":"android.bluetooth.le.AdvertisingsetParameters.interval_min\r\n","F:Android.Graphics.Drawables.GradientDrawable.SetGradientType":"F：android.graphics.drawables.gradientdrawable.setgradienttype\r\n","Register to receive callbacks whenever the associated device comes in and out of range.":"每当关联设备进出范围时，注册以接收回调。\r\n","The array index of minimum preview fps for use with ":"最小预览fps的数组索引\r\n","Store a blending mode to use whenever this Icon is drawn.":"每当绘制此图标时，存储一个混合模式。\r\n","This behaves the same as save(), but in addition it allocates and\n            redirects drawing to an offscreen rendering target.":"这与save()的行为相同，但除此之外，它还分配和\r\n            将绘图重定向到屏幕外渲染目标。\r\n","android.content.ContentProvider.update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])":"android.content.contentprovider.update（android.net.uri，android.content.contentvalues，java.lang.string，java.lang.string []）\r\n","android.hardware.camera2.CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_MANUAL_POST_PROCESSING manual post-processing":"android.hardware.camera2.camerametadata＃request_available_capabilities_manual_manual_post_processing手册后处理\r\n","CompanionDeviceManager#associate associated":"CompanionDeviceManager＃关联\r\n"," for performing network connectivity diagnostics\n            as well as receiving network connectivity information from the system.":" 用于执行网络连接诊断\r\n            以及从系统接收网络连接信息。\r\n","android.database.DatabaseUtils.concatenateWhere(java.lang.String, java.lang.String)":"android.database.databaseutils.concatenatewhere（java.lang.string，java.lang.string）\r\n","if there are transactions in progress at the\n time this method is called.  WAL mode can only be changed when there are no\n transactions in progress.":"如果正在进行交易\r\n 时间调用此方法。 WAL模式只能在没有的情况下更改\r\n 交易正在进行中。\r\n","android.graphics.drawable.Icon.describeContents()":"android.graphics.drawable.icon.describecontents（）\r\n","android.content.res.TypedArray.close()":"android.content.res.typedarray.close（）\r\n","android.graphics.PathMeasure.nextContour()":"android.graphics.pathmeasure.nextcontour（）\r\n","Used as a boolean extra field with ":"用作布尔的额外领域\r\n"," callback, which is invoked when \n            the DRM framework sends error information.":" 回调，当\r\n            DRM框架发送错误信息。\r\n","android.graphics.Canvas.translate(float, float)":"机器人。图形。帆布。翻译（浮点数，浮点数）\r\n","Set the base context for this ContextWrapper.":"设置此上下文处理程序的基本上下文。\r\n","android.graphics.RenderEffect.createBitmapEffect(android.graphics.Bitmap)":"android.graphics.rendereffect.createbitmapeffect（android.graphics.bitmap）\r\n","android.graphics.Matrix.isIdentity()":"android.graphics.matrix.istendity（）\r\n","android.bluetooth.BluetoothHeadset.isVoiceRecognitionSupported(android.bluetooth.BluetoothDevice)":"android.bluetooth.bluetoothheadset..isvoicercognitionsupported（android.bluetooth.bluetoothdevice）\r\n","The filter matched an intent that had no data specified.":"过滤器匹配未指定数据的意图。\r\n","android.content.RestrictionEntry.setChoiceValues(java.lang.String[])":"android.content.resterriceentry.setchoicevalues（java.lang.string []）\r\n","android.content.Context.USAGE_STATS_SERVICE":"android.content.context.usage_stats_service\r\n","android.graphics.HardwareRenderer.isOpaque()":"android.graphics.hardwarerenderer.isopaque（）\r\n","Write a compressed version of the bitmap to the specified outputstream.":"将位图的压缩版本写入指定的输出流。\r\n","#TRUST_NONE":"#信任_NONE\r\n","android.content.pm.PackageManager.FEATURE_WIFI_PASSPOINT":"android.content.pm.packagemanager.feature_wifi_passpoint\r\n","android.content.pm.ShortcutInfo.SHORTCUT_CATEGORY_CONVERSATION":"android.content.pm.shortcutinfo.shortcut_category_conversation\r\n","HardwareBuffer":"硬件贝弗\r\n","android.database.sqlite.SQLiteDatabase.createInMemory(android.database.sqlite.OpenParams)":"android.database.sqlite.sqlitedatabase.createinmemory（android.database.sqlite.openparams）\r\n",": The device's main front and back cameras can stream\n            concurrently as described in ":"：设备的主要前后摄像头可以流式传输\r\n            同时如所述\r\n","PatternMatcher#PATTERN_PREFIX":"patternMatcher＃pattern_prefix\r\n","android.bluetooth.le.ScanResult":"android.bluetooth.le。scanresult\r\n","Cursor#FIELD_TYPE_FLOAT":"光标＃field_type_float\r\n","android.hardware.Camera.setFaceDetectionListener(android.hardware.FaceDetectionListener)":"android.hardware.camera.setFaceDetectionListener（android.hardware.facedetectionListener）\r\n","Indicate successful communication.":"表示成功的沟通。\r\n","android.content.Intent.ACTION_UMS_DISCONNECTED":"android.content.intent.action_ums_disconnected\r\n","android.graphics.Bitmap.getScaledHeight(android.graphics.Canvas)":"android.graphics.bitmap.getScaledHeight（android.graphics.canvas）\r\n","android.content.pm.PackageInstaller.getActiveStagedSession()":"android.content.pm.packageinstaller.getActiveStagedSession（）\r\n","android.bluetooth.BluetoothGattDescriptor.PERMISSION_READ_ENCRYPTED_MITM":"android.bluetooth.bluetoothgattdescriptor.permission_read_encrypted_mitm\r\n","android.graphics.BlurMaskFilter.BlurMaskFilter(float, android.graphics.Blur)":"android.graphics.blurmaskfilter.blurmaskfilter（float，android.graphics.blur）\r\n","Returns a immutable bitmap with the specified width and height, with each\n pixel value set to the corresponding value in the colors array.":"返回带有指定宽度和高度的不变的位图，每个图\r\n 像素值设置为颜色数组中的相应值。\r\n","ContentObserver#deliverSelfNotifications()":"ContentObserver＃deliversElfNotifications（）\r\n","android.hardware.Sensor.getPower()":"android.hardware.sensor.getPower（）\r\n","android.content.pm.PackageManager.queryIntentActivityOptions(android.content.ComponentName, android.content.Intent[], android.content.Intent, int)":"android.content.pm.PackageManager.queryIntentActivityOptions(android.content.ComponentName,android.内容。意图[]，android。内容。意图，int）\r\n","android.graphics.BitmapFactory.decodeResourceStream(android.content.res.Resources, android.util.TypedValue, java.io.InputStream, android.graphics.Rect, android.graphics.Options)":"android.graphics.bitmapfactory.decoderesourcestream（android.content.res.res.resources，android.util.typedvalue，java.io.inputstream，android.graphics.graphics.Rect，android.graphics.graphics.options.options.options）\r\n","#ACTION_VIEW_LOCUS":"#action_view_locus\r\n","ContentProvider#call":"ContentProvider＃调用\r\n","android.content.RestrictionsManager.RESPONSE_KEY_RESPONSE_TIMESTAMP":"android.content.ErterctionsManager.Response_Key_Response_timestamp\r\n","Avoid blurry pictures (for example, due to hand shake).":"避免使用模糊图片（例如，由于手摇动）。\r\n","android.content.pm.PackageInfo.packageName":"android.content.pm.packageinfo.packagename\r\n","android.content.Context.BIND_NOT_PERCEPTIBLE":"android.content.context.bind_not_perctible\r\n","android.graphics.Paint.getShadowLayerDy()":"android.graphics.paint.getShadowlayerdy（）\r\n","android.content.Intent.ACTION_CREATE_SHORTCUT":"android.content.intent.action_create_shortcut\r\n"," that is associated with this\n            client.":" 与此有关\r\n            客户。\r\n","Return an action in the filter.":"返回过滤器中的操作。\r\n","android.database.sqlite.SQLiteDatabase.markTableSyncable(java.lang.String, java.lang.String, java.lang.String)":"android.database.sqlite.sqlitedatabase.marktablesyncable（java.lang.string，java.lang.string，java.lang.string）\r\n",", which can be used to parse\n            extended metadata embedded in DRM constraint information.":"，可以用来解析\r\n            扩展的元数据嵌入了DRM约束信息中。\r\n","android.content.Intent.putExtra(java.lang.String, boolean)":"android.content.intent.putextra（java.lang.string，boolean）\r\n","android.content.RestrictionsManager.notifyPermissionResponse(java.lang.String, android.os.PersistableBundle)":"android.content.strictionsmanager.notifypermissionResponse（java.lang.string，android.os.os.persistablebundle）\r\n","Sets the wrapped drawable.":"设置包装的drawable。\r\n","\n            with devices via ":"\r\n            使用设备通过\r\n"," instance for managing\n            media projection sessions.":" 用于管理的实例\r\n            媒体投影会议。\r\n","GameManager":"GameManager\r\n","#takePicture takePicture":"#TakePicture TakePicture\r\n","Checks if the package is installed and enabled for a profile.":"检查是否安装了包装并启用了一个配置文件。\r\n","The GLES version used by an application.":"应用程序使用的GLES版本。\r\n","android.content.pm.ApkChecksum.getSplitName()":"android.content.pm.apkchecksum.getsplitname（）\r\n","Take indoor low-light shot.":"拍摄室内浅灯射击。\r\n","android.view.KeyEvent":"android.view.keyevent\r\n","Whether the package is an APEX package.":"该软件包是否为Apex软件包。\r\n","android.content.Context.checkCallingOrSelfUriPermission(android.net.Uri, int)":"android.content.Context.CheckcallingorSelfuriperMession（android.net.uri，int）\r\n","android.content.Intent.ACTION_PICK_ACTIVITY":"android.content.intent.action_pick_activity\r\n","android.bluetooth.le.AdvertisingSetParameters.getInterval()":"android.bluetooth.le.AdvertisingsetParameters.getInterval（）\r\n","\n            capability level.":"\r\n            能力水平。\r\n","android.graphics.Path.rQuadTo(float, float, float, float)":"android.graphics.path.rquadto（浮子，浮点，浮点，浮点）\r\n","android.content.pm.ConfigurationInfo.reqGlEsVersion":"android.content.pm.configurationinfo.reqglesversion\r\n","This is a date-based constaint.":"这是基于日期的宪法。\r\n","android.database.sqlite.SQLiteQueryBuilder.setStrictColumns(boolean)":"android.database.sqlite.sqlitequerybuilder.setstrictcolumns（boolean）\r\n","Get a TTC index value associated with this font.":"获取与此字体关联的TTC索引值。\r\n"," for interacting with media metrics\n            on the device.":" 用于与媒体指标互动\r\n            在设备上。\r\n","Determine whether the calling process and user ID has been\n            granted permission to access a specific URI.":"确定通话过程和用户​​ID是否已\r\n            授予访问特定URI的许可。\r\n","android.content.Context.DOMAIN_VERIFICATION_SERVICE":"android.content.context.domain_verification_service\r\n","Reads a String out of a field in a Cursor and writes it to an InsertHelper.":"从光标中读取字符串，并将其写入固定器。\r\n","Specialized implementation of ":"专门实施\r\n","android.media.MediaRouter":"android.media.mediarouter\r\n","android.graphics.pdf.PdfRenderer.PdfRenderer(android.os.ParcelFileDescriptor)":"android.graphics.pdf.pdfrenderer.pdfrenderer（android.os.parcelfiledScriptor）\r\n","AdvertisingSet#setPeriodicAdvertisingParameters":"广告网＃setperiodicadvertising参数\r\n","Returns the intrinsic height, in pixels, of this NinePatch.":"返回此九峰的内在高度，以像素为单位。\r\n","Start the animation.":"开始动画。\r\n","android.content.pm.ResolveInfo.priority":"android.content.pm.resolveinfo.priority\r\n","android.content.Intent.resolveType(android.content.ContentResolver)":"android.content.intent.resolvetype（android.content.contentresolver）\r\n","android.content.pm.ShortcutManager.isRequestPinShortcutSupported()":"android.content.pm.shortcutmanager.isrequestpinshortcutsupported（）\r\n","android.graphics.Paint.getTextWidths(java.lang.String, int, int, float[])":"android.graphics.paint.getTextWidths（java.lang.string，int，int，float []）\r\n","android.database.sqlite.SQLiteException":"android.database.sqlite.sqliteException\r\n","android.content.pm.ResolveInfo.isDefault":"android.content.pm.resolveinfo.isdefault\r\n","android.graphics.pdf.PdfDocument.getPages()":"android.graphics.pdf.pdfdocument.getpages（）\r\n","Disables Z support, preventing any RenderNodes drawn after this point from being\n            visually reordered or having shadows rendered.":"禁用Z支持，防止此点之后绘制的任何渲染\r\n            视觉重新排序或呈现阴影。\r\n",", but takes UIDs of\n the two packages to be checked.":"，但要\r\n 要检查的两个软件包。\r\n","Returns the icon for this shortcut, without any badging for the profile.":"返回此快捷方式的图标，而没有任何配置文件的徽章。\r\n","android.hardware.Camera":"android.hardware.camera\r\n","android.graphics.Canvas.drawBitmap(android.graphics.Bitmap, float, float, android.graphics.Paint)":"android.graphics.canvas.drawbitmap（android.graphics.bitmap，float，float，android.graphics.paint）\r\n","android.content.Intent.EXTRA_PACKAGE_NAME":"android.content.intent.extra_package_name\r\n","Throws SecurityException if the caller does\n not have permission to access the file.":"如果呼叫者执行\r\n 没有权限访问文件。\r\n"," wrapper for a ":" 包装器\r\n","android.content.pm.PackageInfo.attributions":"android.content.pm.packageinfo.tributions\r\n"," with the outline bounds, if set, and returns\n            ":" 使用大纲界限，如果设置并返回\r\n            \r\n","Returns the value of the requested column as an int.":"以int形式返回请求列的值。\r\n","android.content.IntentFilter.countDataSchemeSpecificParts()":"android.content.intentfilter.countdataschemespecificparts（）\r\n","Call this to remove all cached loaded layout resources from the\n            Resources object.":"调用此函数可从\r\n            资源对象。\r\n","android.content.ContentResolver.setMasterSyncAutomatically(boolean)":"android.content.contentresolver.setmastersyncautomation（布尔）\r\n","#setElevation(float)":"#setElevation(浮动)\r\n","android.content.pm.PackageManager.FEATURE_SENSOR_BAROMETER":"android.content.pm.packagemanager.feature_sensor_barometer\r\n","android.content.Intent.CATEGORY_APP_GALLERY":"android.content.intent.category_app_gallery\r\n","Enable Memtag in Sync mode in this application or process.":"在此应用程序或过程中以同步模式启用MEMTAG。\r\n","The resource name of the icon, including package, name and type.":"图标的资源名称，包括软件包，名称和类型。\r\n","The Canvas class holds the \"draw\" calls.":"帆布课程包含“绘制”呼叫。\r\n","android.content.ContentResolver.isSyncActive(android.accounts.Account, java.lang.String)":"android.content.contentresolver.issyncactive（android.accounts.accounts.account，java.lang.string）\r\n"," for handling management of volume,\n            ringer modes and audio routing.":" 用于处理数量管理，\r\n            铃声模式和音频路由。\r\n","android.database.AbstractCursor.onMove(int, int)":"机器人。数据库。AbstractCursor.onMove（int，int）\r\n","android.content.RestrictionEntry.getChoiceValues()":"android.content.gresterriceentry.getchoicevalues（）\r\n","Update all existing shortcuts with the same IDs.":"使用相同的ID更新所有现有的快捷方式。\r\n","android.content.UriMatcher.UriMatcher(int)":"android.content.urimatcher.urimatcher（int）\r\n","android.graphics.Color.argb(int, int, int, int)":"android.graphics.Color.argb(int, int, int, int)\r\n","A Parcelable[] of ":"一个包裹的[]\r\n",": The device has\n            a Keystore implementation that can only enforce limited use key in hardware with max usage\n            count equals to 1.":"：设备有\r\n            一个只能在硬件中使用最大使用的硬件中使用有限使用密钥的密钥库实现\r\n            计数等于1。\r\n",": the basic protection type.":"：基本保护类型。\r\n","Set this path to the result of applying the Op to this path and the specified path.":"将此路径设置为将OP应用于此路径和指定路径的结果。\r\n","android.graphics.SurfaceTexture.getTransformMatrix(float[])":"android.graphics.surfaceTexture.getTransformmatrix（float []）\r\n","android.graphics.Paint.setShader(android.graphics.Shader)":"android.graphics.paint.setshader（android.graphics.shader）\r\n","Get all the gestures of an entry":"获取所有条目的手势\r\n","android.content.Intent.ACTION_SHUTDOWN":"android.content.intent.action_shutdown\r\n","Returns the pivot value for this display list on the Y axis, in pixels.":"返回此显示列表在Y轴上的枢轴值，以像素为单位。\r\n","android.content.res.Configuration.locale":"android.content.Res.Configuration.locale\r\n","android.graphics.drawable.Drawable.setFilterBitmap(boolean)":"android.graphics.drawable.drawable.setfilterbitmap（boolean）\r\n","android.graphics.Region.op(int, int, int, int, android.graphics.Op)":"android.graphics.gregion.op（int，int，int，int，int，android.graphics.op）\r\n","[Da, Dc] ":"[DA，DC]\r\n","Retrieve the banner associated with an activity.":"检索与活动相关的横幅。\r\n","android.content.Context.VIBRATOR_MANAGER_SERVICE":"android.content.context.vibrator_manager_service\r\n","Activity Action: Perform a call to someone specified by the data.":"活动动作：对数据指定的人进行呼叫。\r\n","android.content.pm.PackageInstaller.installExistingPackage(java.lang.String, int, android.content.IntentSender)":"android.content.pm.packageinstaller.installexistingpackage（java.lang.string，int，android.content.intentsenders）\r\n","android.graphics.Paint.getStrokeWidth()":"android.graphics.paint.getStrokeWidth（）\r\n","android.hardware.Camera.setOneShotPreviewCallback(android.hardware.PreviewCallback)":"android.hardware.camera.setOneShotpReviewCallback（android.hardware.previewCallback）\r\n","A string resource identifier (in the package's resources) containing\n            a user-readable description of the component.":"包含的字符串资源标识符（在软件包的资源中）\r\n            组件的用户可读描述。\r\n","Update the label representing the app being installed in a specific\n            session.":"更新代表要在特定的应用程序的标签\r\n            会议。\r\n","android.graphics.Paint.getTextAlign()":"android.graphics.paint.getTextalign（）\r\n","#colorMode":"#Colormode\r\n","Implement this to handle requests for the MIME type of the data at the\n            given URI.":"实施此操作以处理对数据的MIME类型的请求\r\n            给定乌里。\r\n","Flash will be fired automatically when required.":"闪光灯将在需要时自动发射。\r\n","android.graphics.DiscretePathEffect.DiscretePathEffect(float, float)":"android.graphics.discretepatheffect.discretepatheffect（float，float）\r\n","Current status of an operation.":"操作的当前状态。\r\n","android.graphics.HardwareRenderer.SYNC_FRAME_DROPPED":"android.graphics.hardwarerenderer.sync_frame_dropped\r\n","android.drm.DrmInfoRequest.getInfoType()":"android.drm.drminforequest.getInfotype（）\r\n","Returns the bitmap used to draw this NinePatch.":"返回用于绘制此九调的位图。\r\n","android.database.sqlite.SQLiteDatabase.beginTransactionNonExclusive()":"android.database.sqlite.sqlitedatabase.begintransactionnonexclusive（）\r\n","Sent when the user taps on the clock widget in the system's \"quick settings\" area.":"当用户点击系统“快速设置”区域中的时钟小部件上时发送。\r\n","Sets GPS processing method.":"设置GPS处理方法。\r\n","android.content.pm.LabeledIntent.LabeledIntent(android.content.Intent, java.lang.String, int, int)":"android.content.pm.labeledintent.labeledintent（android.content.intent，java.lang.string，int，int）\r\n","If the rectangle specified by left,top,right,bottom intersects this\n            rectangle, return true and set this rectangle to that intersection,\n            otherwise return false and do not change this rectangle.":"如果由left,top,right,bottom指定的矩形与此相交\r\n            矩形，返回true并将此矩形设置为该交点,\r\n            否则返回false，不要更改此矩形。\r\n",": The device's camera supports auto-focus.":"：设备的摄像头支持自动对焦。\r\n","Create a new AssetFileDescriptor from the given values.":"根据给定的值创建一个新的AssetFileDescriptor。\r\n","android.bluetooth.BluetoothGattDescriptor":"android.bluetooth.bluetoothgattdescriptor\r\n","android.content.ContentResolver.takePersistableUriPermission(android.net.Uri, int)":"android.content.contentresolver.takepersistableuripermission（android.net.uri，int）\r\n","Parcelable interface methods":"包裹界面方法\r\n","Additional flags.":"附加标志。\r\n","This mode bit configures the database to include a 2nd annotation line with each entry.":"此模式位将数据库配置为在每个条目中包括第二个注释行。\r\n","android.graphics.ColorSpace.adapt(android.graphics.ColorSpace, float[])":"android.graphics.colorspace.Adapt（android.graphics.colorspace，float []）\r\n","android.graphics.drawable.BitmapDrawable.BitmapDrawable(android.content.res.Resources, java.lang.String)":"android.graphics.drawable.bitmapDrabable.bitmapDrawable（android.content.res.res.resources，java.lang.string）\r\n","An int extra field in ":"一个额外的领域\r\n",": The device has\n            a Keystore implementation that can enforce limited use key in hardware with any max usage\n            count (including count equals to 1).":"：设备有\r\n            可以在硬件中强制执行有限使用密钥的密钥库实现，并使用任何最大使用\r\n            计数（包括计数等于1）。\r\n","Retrieves a list of activities that specify ":"检索指定的活动列表\r\n","Compute the bounds of the control points of the path, and write the\n            answer into bounds.":"计算路径控制点的边界，然后写\r\n            回答范围。\r\n","ColorSpace.Rgb":"colorspace.rgb\r\n","android.content.Intent.ACTION_PROCESS_TEXT":"android.content.intent.action_process_text\r\n","android.content.pm.PermissionGroupInfo.PermissionGroupInfo(android.content.pm.PermissionGroupInfo)":"android.content.pm.permissiongroupinfo.permissiongroupinfo（android.content.pm.permissiongroupinfo）\r\n"," on which the publisher created this shortcut.":" 发布者在其上创建了此快捷方式。\r\n","android.bluetooth.BluetoothHidDevice.ERROR_RSP_INVALID_RPT_ID":"android.bluetooth.bluetoothhiddevice.error_rsp_invalid_rpt_id\r\n","\n            that provides methods for sending notifications to a list of\n            ":"\r\n            这提供了将通知发送到列表的方法\r\n            \r\n","Sets the ClassLoader that will be used when unmarshalling\n            any Parcelable values from the extras of this Intent.":"设置classloader在拆卸时将使用\r\n            来自此意图的附加物中的任何可穿戴值。\r\n","android.graphics.drawable.LayerDrawable.setPaddingMode(int)":"android.graphics.drawable.layerdrawable.setpaddingmode（int）\r\n","Constructs a new ScanResult.":"构建新的扫描仪。\r\n","[0, 0] ":"[0，0]\r\n","Key for request message contained in the request bundle.":"请求捆绑包中包含的请求消息的键。\r\n","Context Context":"上下文上下文\r\n","Draws the NinePatch.":"绘制尼尼普。\r\n","Return the time when this permission was first persisted, in milliseconds\n            since January 1, 1970 00:00:00.":"返回此权限首次持续的时间，以毫秒为单位\r\n            自1970年1月1日以来00:00:00。\r\n","android.content.Context.createContextForSplit(java.lang.String)":"android.content.context.CreateContextForsplit（java.lang.string）\r\n","android.content.ContentProviderClient.getType(android.net.Uri)":"android.content.contentproviderclient.getType（android.net.uri）\r\n","Applies a rotation transform around the Y axis.":"应用围绕y轴的旋转转换。\r\n","android.graphics.RenderNode.getScaleX()":"机器人。图形。RenderNode。getScaleX()\r\n","android.graphics.drawable.Icon.createWithResource(java.lang.String, int)":"android.graphics.drawable.icon.createwithresource（java.lang.string，int）\r\n","Returns the variable font axis tag associated to this axis.":"返回与此轴关联的可变字体轴标签。\r\n",": a value indicating that no value has been set.":":表示未设置任何值的值。\r\n","android.content.pm.PackageManager.queryIntentContentProviders(android.content.Intent, int)":"android.content.pm.PackageManager.queryIntentContentProviders(android.content.Intent,int)\r\n","A font weight value for the thin weight":"重量的字体重量值\r\n","android.content.SyncResult.clear()":"android.content.syncresult.clear（）\r\n","D":"d\r\n","Acquires the progress of the rights acquisition.":"获取权利获取的进度。\r\n","android.graphics.Interpolator.setKeyFrame(int, int, float[], float[])":"android.graphics.interpolator.setKeyframe（int，int，float []，float []）\r\n","android.content.pm.ServiceInfo.FLAG_USE_APP_ZYGOTE":"android.content.pm.ServiceInfo.FLAG_USE_APP_ZYGOTE\r\n","Gets the projection greylist for the query, as last configured by\n            ":"获取查询的投影灰列表，如上最后是由\r\n            \r\n","android.drm.DrmManagerClient.getOriginalMimeType(java.lang.String)":"android.drm.drmmanagerclient.getoriginalmimetype（java.lang.string）\r\n","Sets the ripple color.":"设置连锁颜色。\r\n","android.bluetooth.BluetoothHealth.connectChannelToSource(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration)":"android.bluetooth.bluetoothhealth.connectchanneltosource（android.bluetooth.bluetoothdevice，android.bluetooth.bluetooth.bluetoothhealthhealthappconfiguration）\r\n","Check if this account/provider is syncable.":"检查此帐户/提供商是否同步。\r\n","android.telephony.CarrierConfigManager":"android.telephony.CarrierConfigmanager\r\n","android.content.ContentResolver.addStatusChangeListener(int, android.content.SyncStatusObserver)":"android.content.contentresolver.addstatuschangelistener（int，android.content.syncstatusobserver）\r\n","android.content.pm.PackageManager.FEATURE_CAMERA_CONCURRENT":"android.content.pm.packagemanager.feature_camera_concurrent\r\n","Interface to the clipboard service, for placing and retrieving text in\n the global clipboard.":"剪贴板服务的接口，用于放置和检索文本\r\n 全局剪贴板。\r\n","#EXTRA_TEXT":"#EXTRA_TEXT\r\n","android.graphics.Point.set(int, int)":"android.graphics.point.set（int，int）\r\n","android.content.pm.ApplicationInfo.ZEROINIT_ENABLED":"android.content.pm.applicationinfo.zeroinit_enabled\r\n","This takes a mask, and blurs its edge by the specified radius.":"这是掩盖的，并用指定的半径模糊其边缘。\r\n","Class that holds information about single font variation axis.":"具有有关单字体变化轴的信息的类。\r\n","If the calling process and user ID has not been granted\n permission to access a specific URI, throw ":"如果尚未授予通话过程和用户​​ID\r\n 允许访问特定URI，投掷\r\n","android.content.SearchRecentSuggestionsProvider.getType(android.net.Uri)":"android.content.SearchRecentsuggestionsProvider.getType（android.net.uri）\r\n","android.graphics.drawable.TransitionDrawable.startTransition(int)":"android.graphics.drawable.transitiondrawable.starttransition（int）\r\n","Mask for ":"面具\r\n","Information about the signing certificates used to sign the initiating package, if available.":"有关签署启动包的签名证书的信息，如果有的话。\r\n","android.content.SyncAdapterType.allowParallelSyncs()":"android.content.syncadaptertype.allowparallelsyncs（）\r\n","android.content.Intent.parseUri(java.lang.String, int)":"android.content.intent.parseuri（java.lang.string，int）\r\n","android.content.Intent.EXTRA_PROCESS_TEXT_READONLY":"android.content.intent.extra_process_text_readonly\r\n","android.content.pm.PackageManager.FEATURE_SE_OMAPI_ESE":"android.content.pm.packagemanager.feature_se_omapi_ese\r\n","value indicating that no layout dir has been set.":"值表示未设置布局dir。\r\n","[Sa + Da - 2 * Sa * Da, Sc * (1 - Da) + (1 - Sa) * Dc] ":"[sa + da -2 * sa * da，sc *（1 -da） +（1 -sa） * dc]\r\n","android.bluetooth.BluetoothGattCharacteristic":"android.bluetooth.bluetoothgatthacteristic\r\n"," of extras for a package being suspended.":" 暂停包装的附加功能。\r\n","Completely replace the extras in the Intent with the given Bundle of\n            extras.":"用给定的捆绑包完全代替意图\r\n            额外。\r\n","Called when the operating system has determined that it is a good\n            time for a process to trim unneeded memory from its process.":"当操作系统确定它是一个好的时，请调用\r\n            是时候从其过程中缩小不需要内存的过程了。\r\n","positionOffset + 1":"位置offset + 1\r\n","android.content.pm.PackageManager.FEATURE_NFC_HOST_CARD_EMULATION_NFCF":"android.content.pm.packagemanager.feature_nfc_host_card_emulation_nfcf\r\n","android.graphics.drawable.RotateDrawable.RotateDrawable()":"android.graphics.drawable.RotatedRawable.RotatedRawable（）\r\n","Android Y8 format.":"Android Y8格式。\r\n","android.bluetooth.BluetoothGattDescriptor.PERMISSION_WRITE_ENCRYPTED_MITM":"android.bluetooth.bluetoothgattdescriptor.permission_write_encrypted_mitm\r\n","Returns the name of this NinePatch object if one was specified\n            when calling the constructor.":"如果指定了一个ninepatch对象的名称\r\n            调用构造函数时。\r\n","android.graphics.Color.valueOf(float[], android.graphics.ColorSpace)":"android.graphics.color.valueof（float []，android.graphics.colorspace）\r\n","Returns a Rect from a string of the form returned by ":"从返回的表单的字符串中返回一个Rect \r\n","android.graphics.Rect.setEmpty()":"机器人。图形。长setEmpty()\r\n","Sets the color of the spot shadow that is drawn when the RenderNode has a positive Z or\n            elevation value and is drawn inside of a ":"设置当渲染具有正Z或\r\n            高度值，并在\r\n","android.content.pm.verify.domain.DomainVerificationManager":"android.content.pm.verify.domain.domainverificationmanager\r\n","android.companion.CompanionDeviceManager.associate(android.companion.AssociationRequest, android.companion.Callback, android.os.Handler)":"android.companion.companiondevicemanager.associate（android.companion.associationRequest，android.companion.callback，android.os.handler）\r\n"," for requesting HTTP downloads.":" 请求HTTP下载。\r\n","Retrieve extended data from the clip description. -or- Add extended data to the clip description.":"从剪辑描述中检索扩展数据。 - 或 - 将扩展数据添加到剪辑描述中。\r\n","android.graphics.SurfaceTexture.releaseTexImage()":"android.graphics.surfaceTexture.ReleaseTeximage（）\r\n","android.content.ClipDescription.CLASSIFICATION_NOT_PERFORMED":"android.content.clipdescription.classification_not_performed\r\n","android.content.res.Configuration.SMALLEST_SCREEN_WIDTH_DP_UNDEFINED":"机器人。内容。res.配置。SMALLEST_SCREEN_WIDTH_DP_UNDEFINED\r\n","android.content.pm.PackageManager.getPreferredActivities(java.util.List, java.util.List, java.lang.String)":"android.content.pm.packagemanager.getPreferredivities（java.util.list，java.util.list，java.lang.string）\r\n","android.content.Intent#ACTION_NEW_OUTGOING_CALL":"android.content.intent＃action_new_outoning_call\r\n","android.content.Intent.hasFileDescriptors()":"android.content.intent.hasfiledScriptors（）\r\n","android.content.pm.ApplicationInfo.RAW_EXTERNAL_STORAGE_ACCESS_DEFAULT":"android.content.pm.applicationinfo.raw_external_storage_access_default\r\n","Return the shortcut's categories.":"返回快捷方式的类别。\r\n","If set, when sending a broadcast only registered receivers will be\n called -- no BroadcastReceiver components will be launched.":"如果设置，则在发送广播时仅注册接收器将是\r\n 称为 - 不会启动广播组件。\r\n","android.graphics.drawable.LayerDrawable.setLayerInsetBottom(int, int)":"android.graphics.drawable.layerdrawable.setlayerinsetbottom（int，int）\r\n","Create an empty face.":"创建一个空的脸。\r\n","android.graphics.Region.setEmpty()":"android.graphics.gregion.setEmpty（）\r\n","android.drm.DrmSupportInfo.getDescriprition()":"android.drm.drmsupportinfo.getdescriprition（）\r\n","F:Android.Content.Intent.ToUri":"f：android.content.intent.touri\r\n","Indicates whether this color is in the ":"指示这种颜色是否在\r\n","Antialiased: Treat edges by rounding-out, since they may be antialiased\n":"抗锯齿：通过四舍五入处理边缘，因为它们可能是抗锯齿的\r\n\r\n","Write the bitmap and its pixels to the parcel.":"将位图及其像素写入包裹。\r\n","android.database.Cursor.getType(int)":"android.database.cursor.getType（int）\r\n","android.content.BroadcastReceiver.setResultData(java.lang.String)":"android.content.broadcastreceiver.setresultdata（java.lang.string）\r\n","android.drm.DrmInfoEvent.DrmInfoEvent(int, int, java.lang.String, java.util.HashMap)":"android.drm.drminfoevent.drminfoevent（int，int，java.lang.string，java.util.hashmap）\r\n","android.content.pm.PackageManager.getUserBadgedDrawableForDensity(android.graphics.drawable.Drawable, android.os.UserHandle, android.graphics.Rect, int)":"android.content.pm.packagemanager.getUserBadgedDrawableFordsense（android.graphics.drawable.drawable.drawable，android.os.os.userhandle，android.graphics.Rect.Rect，int）int）\r\n","android.graphics.fonts.Font":"android.graphics.fonts.font\r\n","Returns the current selected state for an entry of type ":"返回类型条目的当前选定状态\r\n","An interface for notifying BluetoothProfile IPC clients when they have\n been connected or disconnected to the service.":"一个用于通知蓝牙普罗维勒IPC客户端时的界面\r\n 已连接或与服务连接。\r\n","Query the given URI, returning a ":"查询给定的URI，返回\r\n","android.graphics.drawable.Drawable.getBounds()":"android.graphics.drawable.drawable.getBounds（）\r\n","This class provides applications access to the content model.":"此类提供对内容模型的应用程序访问。\r\n","ScanSettings#CALLBACK_TYPE_MATCH_LOST":"SCANSETTINGS＃CALLBACK_TYPE_MATCH_LOST\r\n","android.graphics.Canvas.drawRenderNode(android.graphics.RenderNode)":"android.graphics.canvas.drawRendernode（android.graphics.rendernode）\r\n","Register an observer class that gets callbacks when data identified by a\n            given content URI changes.":"注册一个观察者类，该类别在数据确定时获取回调\r\n            给定内容URI更改。\r\n","android.content.Intent.putExtra(java.lang.String, boolean[])":"android.content.intent.putextra（java.lang.string，boolean []）\r\n","android.content.Intent.setClassName(android.content.Context, java.lang.String)":"android.content.intent.setClassName（android.content.context，java.lang.string）\r\n","Broadcast Action:  Indicates the battery is now okay after being low.":"广播动作：表明电池在低后可以。\r\n","android.content.Context.getExternalFilesDirs(java.lang.String)":"android.content.context.getExternalFilesdirs（java.lang.string）\r\n","android.graphics.HardwareRenderer.stop()":"android.graphics.hardwarerenderer.stop（）\r\n","android.content.pm.ShortcutInfo.isEnabled()":"android.content.pm.shortcutinfo.isenabled（）\r\n","Create a labeled intent from the given intent, supplying a textual\n            label and icon resource for it.":"从给定的意图创建标记的意图，提供文本\r\n            标签和图标资源。\r\n","android.content.Intent.getByteArrayExtra(java.lang.String)":"android.content.intent.getByTearRayExtra（java.lang.string）\r\n",": The device's\n            audio pipeline is low-latency, more suitable for audio applications sensitive to delays or\n            lag in sound input or output.":"：设备的\r\n            音调管道是低延迟的，更适合对延迟敏感的音频应用程序或\r\n            声音输入或输出中的滞后。\r\n","android.bluetooth.BluetoothGattCharacteristic.FORMAT_SFLOAT":"android.bluetooth.bluetoothgattcharacteristic.format_sfloat\r\n","android.content.ReceiverCallNotAllowedException":"android.content.ReceiverCallNotAllowedException\r\n","Broadcast Action:  External power has been removed from the device.":"广播动作：外部功率已从设备中删除。\r\n","Broadcast Action: Sent when the device wakes up and becomes interactive.":"广播动作：当设备醒来并变得互动时发送。\r\n","Return the label to use for this application.":"将标签返回到此应用程序。\r\n","android.content.ContentProvider.applyBatch(java.lang.String, java.util.ArrayList)":"android.content.contentprovider.applybatch（java.lang.string，java.util.arraylist）\r\n","Retrieve all values from the preferences.":"从偏好中检索所有值。\r\n","positionOffset + 2":"位置offset + 2\r\n","android.content.ClipDescription.getMimeTypeCount()":"android.content.clipdescription.getmimetypecount（）\r\n"," value\n            indicating that the screen is not wide gamut.":" 价值\r\n            表明屏幕不是宽域。\r\n","android.content.pm.PackageManager.removePermission(java.lang.String)":"android.content.pm.PackageManager.removePermission(java.lang.String)\r\n","android.content.AttributionSource.getUid()":"android.content.attributionsource.getuid（）\r\n",": disable hinting.":"：禁用暗示。\r\n","Reads a Integer out of a column in a Cursor and writes it to a ContentValues.":"从光标中的列中读取整数，然后将其写入内容值。\r\n","CharArrayBuffer":"Chararraybuffer\r\n","Class implementing the Application's manage space\n            functionality.":"实施应用程序管理空间的类\r\n            功能。\r\n","Send a notification or indication that a local characteristic has been\n updated.":"发送通知或迹象表明本地特征已经存在\r\n 更新。\r\n","android.content.Intent.ACTION_MEDIA_CHECKING":"android.content.intent.action_media_checking\r\n","android.content.SyncAdapterType.getSettingsActivity()":"android.content.syncadaptertype.getSetTingsActivity（）\r\n","android.content.Intent.ACTION_MEDIA_SCANNER_STARTED":"android.content.intent.action_media_scanner_started\r\n","Open a private file associated with this Context's application package\n            for reading.":"打开与此上下文的应用程序包相关的私人文件\r\n            用于阅读。\r\n","Broadcast Action:  External media is present, but is using an incompatible fs (or is blank)\n            The path to the mount point for the checking media is contained in the Intent.":"广播动作：存在外部媒体，但正在使用不兼容的FS（或空白）\r\n            意图中包含通往检查介质的安装点的路径。\r\n","Set the matrix to rotate by the specified sine and cosine values.":"将矩阵设置以通过指定的正弦和余弦值旋转。\r\n","#BIND_ABOVE_CLIENT":"#bind_above_client\r\n","Called by an application to check if there is an active Restrictions Provider.":"通过应用程序调用以检查是否有活动限制提供商。\r\n","if the method fails.":"如果方法失败。\r\n","android.content.ServiceConnection.onServiceDisconnected(android.content.ComponentName)":"android.content.serviceconnection.servicesconnected（android.content.componentname）\r\n","Returns the number of fonts in this FontFamily.":"返回该fontfamily中字体的数量。\r\n","android.content.ContentProviderOperation.isInsert()":"android.content.contentProvideroperation.isinsert（）\r\n","android.content.pm.ShortcutInfo.getLocusId()":"android.content.pm.shortcutinfo.getlocusid（）\r\n","Sets an additional clip on the RenderNode.":"在RenderNode上设置一个额外的剪辑。\r\n","Key for request title contained in the request bundle.":"请求捆绑包中包含的请求标题的键。\r\n","android.graphics.Bitmap.getHardwareBuffer()":"android.graphics.bitmap.gethardwarebuffer（）\r\n","android.drm.DrmInfoRequest.put(java.lang.String, java.lang.Object)":"android.drm.drminforequest.put（java.lang.string，java.lang.object）\r\n","android.bluetooth.BluetoothHealth.APP_CONFIG_UNREGISTRATION_FAILURE":"android.bluetooth.bluetoothhealth.app_config_unregistration_failure\r\n","android.content.pm.PackageManager.FEATURE_CAMERA_FRONT":"android.content.pm.packagemanager.feature_camera_front\r\n","#MATCH_ALL":"#匹配_ALL\r\n","android.graphics.drawable.ColorDrawable.getColor()":"android.graphics.drawable.colordrawable.getColor（）\r\n","android.content.pm.PackageManager.FEATURE_TELEVISION":"android.content.pm.packagemanager.feature_television\r\n"," about an application installed for a specific user profile.":" 关于为特定用户配置文件安装的应用程序。\r\n","To be used as a unit test (run through the Test Harness).":"用作单位测试（通过测试安全带运行）。\r\n","android.content.Intent.ACTION_USER_INITIALIZE":"android.content.intent.action_user_initialize\r\n","android.os.OperationCanceledException":"android.os.operationCanceLedException\r\n","Returns the resolved layout direction for this Drawable.":"返回可绘制的解决方向的解决方向。\r\n","Definition of a single optional hardware or software feature of an Android\n            device.":"Android的单个可选硬件或软件功能的定义\r\n            设备。\r\n","This exception is thrown from ":"这个例外是从中抛出的\r\n","android.graphics.Matrix.setPolyToPoly(float[], int, float[], int, int)":"android.graphics.matrix.setpolytopoly（float []，int，float []，int，int）\r\n","android.content.Loader.onCancelLoad()":"android.content.loader.oncancelload（）\r\n","android.content.ContentProvider.uncanonicalize(android.net.Uri)":"android.content.contentprovider.uncanonicalize（android.net.uri）\r\n","android.content.Intent.ACTION_CREATE_REMINDER":"android.content.intent.action_create_reminder\r\n","android.graphics.Canvas.drawPoint(float, float, android.graphics.Paint)":"android.graphics.canvas.drawpoint（float，float，android.graphics.paint）\r\n","Retrieve the current graphical icon associated with this item.":"检索与此项目关联的当前图形图标。\r\n",":\n            The device has professional audio level of functionality and performance.":"：\r\n            该设备具有专业的功能和性能水平。\r\n","android.content.res.Configuration.mcc":"android.content.Res.Configuration.mcc\r\n","Sets the translation value for the display list on the X axis.":"设置X轴上显示列表的翻译值。\r\n","android.content.pm.PackageManager.requestChecksums(java.lang.String, boolean, int, java.util.List, android.content.pm.OnChecksumsReadyListener)":"android.content.pm.PackageManager.requestChecksums(java.lang.String,boolean,int,java.尤蒂尔。列表，android.content.pm.OnChecksumsReadyListener）\r\n","Return a concise, localized title for the given\n            ":"返回给定的简洁，本地化标题\r\n            \r\n","Draw the specified path using the specified paint.":"使用指定的油漆绘制指定的路径。\r\n","android.graphics.RenderNode.resetPivot()":"机器人。图形。RenderNode。resetPivot()\r\n","android.content.ClipDescription.getConfidenceScore(java.lang.String)":"android.content.clipdescription.getConfidencesCore（java.lang.string）\r\n","android.content.IntentFilter.countDataTypes()":"android.content.intentfilter.countdatatypes（）\r\n","android.hardware.Sensor.getResolution()":"android.hardware.sensor.getResolution（）\r\n","android.content.pm.PackageManager.setComponentEnabledSetting(android.content.ComponentName, int, int)":"android.content.pm.packagemanager.setcomponentenabledsetting（android.content.componentname，int，int）\r\n","Add a new Intent data scheme to match against.":"添加一个新的意图数据方案以匹配。\r\n","</td></tr>\n            </table>":"</td> </tr>\r\n            </table>\r\n","android.graphics.Region.quickContains(int, int, int, int)":"android.graphics.gregion.quickcontains（int，int，int，int）\r\n","android.graphics.Paint.getStyle()":"android.graphics.paint.getStyle（）\r\n","#BIND_ADJUST_WITH_ACTIVITY":"#bind_adjust_with_activity\r\n","Returns whether this drawable's ":"返回是否可绘制\r\n","#getMinValue(int)":"#getMinvalue（int）\r\n","SensorDirectChannel#RATE_STOP":"SensorDirectChannel＃Rate​​_stop\r\n","\n            and then sends <code>andThen</code> to the same Handler when finished.":"\r\n            然后在完成后将<code>和Thens </code>发送到同一处理程序。\r\n","Make this drawable mutable.":"使这个可绘制的可变。\r\n","android.content.Context.updateServiceGroup(android.content.ServiceConnection, int, int)":"android.content.context.updateservicegroup（android.content.serviceconnection，int，int）\r\n","android.content.pm.PackageInstaller.EXTRA_STATUS":"android.content.pm.packageinstaller.extra_status\r\n","android.bluetooth.le.AdvertisingSet.enableAdvertising(boolean, int, int)":"android.bluetooth.le.Advertisingset.EnableDvertising（布尔，int，int）\r\n","android.graphics.Paint.setTypeface(android.graphics.Typeface)":"android.graphics.paint.setTypeface（android.graphics.typeface）\r\n","android.graphics.Paint.Paint()":"android.graphics.paint.paint（）\r\n","Checks if the activity exists and it enabled for a profile.":"检查活动是否存在，并启用了一个配置文件。\r\n","Sets the ID of a layer.":"设置图层的ID。\r\n","#getColorSpace()":"#getColorspace（）\r\n","android.content.IntentFilter.SYSTEM_LOW_PRIORITY":"android.content.intentfilter.system_low_priority\r\n","Puts a null value into the field at the specified row and column index.":"在指定的行和列索引处将空值放入字段中。\r\n","The status of the communication.":"沟通的状态。\r\n","The name of this package.":"此软件包的名称。\r\n","android.graphics.Canvas.getDensity()":"android.graphics.canvas.getDensity（）\r\n","Key for the optional message in the response bundle sent to the application.":"发送到应用程序的响应捆绑包中可选消息的键。\r\n","Create a new component identifier from a Context and Class object.":"从上下文和类对象创建新的组件标识符。\r\n","android.content.Intent.getDoubleArrayExtra(java.lang.String)":"android.content.intent.getDoublearrayExtra（java.lang.string）\r\n","#bindService":"#bindservice\r\n","F:Android.Bluetooth.LE.ScanCallback.OnScanResult":"F：android.bluetooth.le.scancallback.onscanresult\r\n","android.drm.DrmRights.DrmRights(java.io.File, java.lang.String)":"android.drm.drmrights.drmrights（java.io.file，java.lang.string）\r\n","If non-null, these are path-specific permissions that are allowed for\n            accessing the provider.":"如果非核武器，则这些是允许的路径特异性权限\r\n            访问提供商。\r\n","android.os.Bundle#EMPTY Bundle.EMPTY":"机器人。操作系统。捆绑#空捆绑。空的\r\n","Error code indicating that the API call was initiated by neither the system nor the active\n            Zuser":"错误代码指示API调用是由系统和活动启动的\r\n            Zuser\r\n","Returns data type of the given column's value.":"返回给定列值的数据类型。\r\n","android.database.sqlite.SQLiteStatement.execute()":"android.database.sqlite.sqlitestatement.execute（）\r\n","Returns whether the advertisement will be connectable.":"返回广告是否可以连接。\r\n","Activity intent that is optionally implemented by the Restrictions Provider package\n            to challenge for an administrator PIN or password locally on the device.":"限制提供商软件包可选实施的活动意图\r\n            挑战设备上本地的管理员PIN或密码。\r\n","android.content.Intent.CATEGORY_LAUNCHER":"android.content.intent.category_launcher\r\n","android.graphics.drawable.AnimatedStateListDrawable.addState(int[], android.graphics.drawable.Drawable, int)":"android.graphics.drawable.animatedStatElistDrawable.addstate（int []，android.graphics.drawable.drawable.drawable，int）\r\n","Get the locales that this asset manager contains data for.":"获取此资产管理器包含数据的区域设置。\r\n","File":"文件\r\n","This superclass can be used to create a simple search suggestions provider for your application.":"该超类可用于为您的应用程序创建一个简单的搜索建议提供商。\r\n","to allow the current package value to be\n overwritten, even if it is already set.":"允许当前的软件包值为\r\n 即使已经设置了它，即使它已经设置了。\r\n","android.database.sqlite.SQLiteQueryBuilder.query(android.database.sqlite.SQLiteDatabase, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String)":"android.database.sqlite.sqlitequerybuilder.query（android.database.sqlite.sqlite.sqlitedatabase，java.lang.string []字符串，java.lang.string）\r\n","Return whether the screen has a wide color gamut and wide color gamut rendering\n            is supported by this device.":"返回屏幕是否具有宽色范围和宽色范围渲染\r\n            该设备支持该设备。\r\n","android.graphics.Paint.isDither()":"android.graphics.paint.isdither（）\r\n","android.database.sqlite.SQLiteDatabase.setCustomAggregateFunction(java.lang.String, java.util.function.BinaryOperator)":"android.database.sqlite.sqlitedatabase.setcustomaggregatefunction（java.lang.string，java.util.function.binaryoperator）\r\n","android.graphics.drawable.BitmapDrawable.BitmapDrawable(android.content.res.Resources)":"android.graphics.drawable.bitmapdrable.bitmapdrawable（android.content.res.resources）\r\n","android.content.ContentResolver.bulkInsert(android.net.Uri, android.content.ContentValues[])":"android.content.contentresolver.bulkinsert（android.net.uri，android.content.contentvalues []）\r\n","Indicates whether the animation is running.":"指示动画是否正在运行。\r\n","android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_NONE":"android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_NONE\r\n","Called as preview frames are displayed.":"显示为预览帧。\r\n","Descriptor read permission":"描述符阅读权限\r\n","BluetoothHealth#APP_CONFIG_UNREGISTRATION_SUCCESS":"BluetoothHealth＃APP_CONFIG_UNREGISTRATION_SUCCESS\r\n","android.graphics.NinePatch.hasAlpha()":"android.graphics.ninepatch.hasalpha（）\r\n","android.graphics.BitmapFactory.decodeByteArray(byte[], int, int)":"android.graphics.bitmapfactory.decodebytearray（byte []，int，int）\r\n","android.graphics.Picture.Picture(android.graphics.Picture)":"android.graphics.picture.picture（android.graphics.picture）\r\n","Creates a new ripple drawable with the specified ripple color and\n            optional content and mask drawables.":"创建一个可用指定的纹波颜色绘制的新连锁反应\r\n            可选的内容和蒙版抽签。\r\n","android.graphics.Rect.writeToParcel(android.os.Parcel, int)":"android.graphics.Rect.WritEtoparcel（android.os.parcel，int）\r\n","android.database.sqlite.SQLiteDatabase.setMaximumSize(long)":"android.database.sqlite.sqlitedatabase.setmaximumsize（long）\r\n","Returns the number of glyphs stored.":"返回存储的字形数量。\r\n","android.graphics.drawable.GradientDrawable.setStroke(int, int)":"android.graphics.drawable.gradientdrawable.setstroke（int，int）\r\n","Returns the image format for preview frames got from\n ":"返回预览帧的图像格式从\r\n \r\n","Whether this drawable requests projection.":"是否可以绘制的请求投影。\r\n","android.graphics.Interpolator.reset(int, int)":"android.graphics.interpolator.reset（int，int）\r\n",": The device has a secure implementation of keyguard, meaning the\n            device supports PIN, pattern and password as defined in Android CDD":"：该设备具有关键守卫的安全实现，这意味着\r\n            设备支持Android CDD中定义的PIN，图案和密码\r\n","android.content.Context.checkUriPermission(android.net.Uri, int, int, int)":"android.content.context.checkuripermession（android.net.uri，int，int，int）\r\n","The hardware renderer has been set to a \"stopped\" state.":"硬件渲染器已设置为“停止”状态。\r\n","android.content.Context.sendBroadcast(android.content.Intent)":"android.content.Context.SendBroadcast（android.content.intent）\r\n","android.graphics.drawable.BitmapDrawable.BitmapDrawable(java.lang.String)":"android.graphics.drawable.bitmapdrable.bitmapdrable（java.lang.string）\r\n"," that is a composition of 2 other ":" 那是另外两个的组成\r\n","android.graphics.Picture.Picture()":"android.graphics.picture.picture（）\r\n","Returns whether the cursor is pointing to the last row.":"返回光标是否指向最后一行。\r\n","Return a class loader you can use to retrieve classes in this package.":"返回类加载程序，您可以用来在此软件包中检索类。\r\n","Sets whether the X pivot value represents a fraction of the drawable\n            width or an absolute value in pixels.":"设置X枢轴值是否代表可绘制的一小部分\r\n            宽度或像素中的绝对值。\r\n","android.database.AbstractWindowedCursor.isLong(int)":"android.database.AbstractwindowedCursor.islong（int）\r\n","android.content.UriPermission":"android.content.uripermsission\r\n","Is the given category included in the filter?":"过滤器中是否包含给定类别？\r\n","android.content.ContentProvider.setReadPermission(java.lang.String)":"android.content.contentprovider.setReadpermission（java.lang.string）\r\n","Same as cubicTo, but the coordinates are considered relative to the\n            current point on this contour.":"与cubicto相同，但坐标被认为相对于\r\n            此轮廓上的当前点。\r\n","android.bluetooth.BluetoothGattCallback.onCharacteristicWrite(android.bluetooth.BluetoothGatt, android.bluetooth.BluetoothGattCharacteristic, int)":"android.bluetooth.bluetoothgattcallback.oncharacteristicwrite（android.bluetooth.bluetoothgatt，android.bluetooth.bluetooth.bluetooth gluetoothgattharacteristic，int）\r\n","ContentResolver#openTypedAssetFileDescriptor(Uri, String, Bundle)":"ContentResolver＃OpentypedAssetFiledScriptor（URI，String，Bundle）\r\n","android.content.Intent.setDataAndNormalize(android.net.Uri)":"android.content.intent.setdataandnormalize（android.net.uri）\r\n","Sets the content root to render.":"将内容词根设置为渲染。\r\n","Return the picture associated with the drawable. -or- Associate a picture with this drawable.":"返回与可绘图相关的图片。 - 或将图片与此图纸相关联。\r\n",") and resources tables\n            (eg.":"）和资源表\r\n            （例如。\r\n",": bits that encode the dynamic range of the screen.":"：编码屏幕动态范围的位。\r\n","android.graphics.drawable.Drawable.setTintBlendMode(android.graphics.BlendMode)":"机器人。图形。可画的。可画的。setTintBlendMode（android。图形。BlendMode）\r\n","android.graphics.drawable.GradientDrawable.setGradientCenter(float, float)":"android.graphics.drawable.gradientdrawable.setgradientcenter（float，float）\r\n","Returns an index in the array that has data.":"返回具有数据的数组中的索引。\r\n","ScanCallback":"Scancallback\r\n","android.drm.DrmErrorEvent.TYPE_NO_INTERNET_CONNECTION":"android.drm.drmerrorevent.type_no_internet_connection\r\n","android.content.ContentValues.getAsByteArray(java.lang.String)":"android.content.contentvalues.getasbytearray（java.lang.string）\r\n","android.graphics.drawable.RotateDrawable.getFromDegrees()":"android.graphics.drawable.RotatedRawable.getFromDegrees（）\r\n","#onDowngrade":"#ondowngrade\r\n","android.content.Context.enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)":"android.content.context.enforceuripermission（android.net.uri，int，int，int，int，java.lang.string）\r\n","android.database.CursorWindow.isString(int, int)":"android.database.cursorwindow.isstring（int，int）\r\n","Copies a string into the field at the specified row and column index.":"在指定的行和列索引处将字符串复制到字段中。\r\n","android.graphics.Shader.setLocalMatrix(android.graphics.Matrix)":"android.graphics.shader.setlocalmatrix（android.graphics.matrix）\r\n","android.media.projection.MediaProjectionManager":"android.media.proctive.MediaproctiveManager\r\n","android.content.pm.ShortcutManager.getManifestShortcuts()":"android.content.pm.shortcutmanager.getManifestShortCuts（）\r\n","PeriodicAdvertisingParameters":"定期放大趋势参数\r\n","Drawable":"可绘制\r\n","android.graphics.drawable.Drawable.createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet)":"android.graphics.drawable.drawable.createfromxmlinner（android.content.res.res.resources，org.xmlpull.v1.xmlpullparser，android.util.attributeset）\r\n","Whether or not the RenderNode has an identity transform.":"RenderNode是否具有标识转换。\r\n","Used for receiving a notification when a flush() has been successfully completed.":"成功完成时，用于接收通知。\r\n","Disable zero-initialization of the native heap in this application or process.":"在此应用程序或过程中禁用本机堆的零限制。\r\n","Create a new ClipData holding an URI with MIME type\n            ":"创建一个新的Clipdata，持有带有MIME类型的URI\r\n            \r\n","Drawable ConstantState ":"可绘制的恒定态\r\n","android.content.res.TypedArray.getDimensionPixelSize(int, int)":"android.content.res.typedarray.getDimensionPixelsize（int，int）\r\n","android.graphics.HardwareRenderer.clearContent()":"android.graphics.hardwarerenderer.clearcontent（）\r\n","android.bluetooth.BluetoothGattService.getUuid()":"android.bluetooth.bluetoothgattservice.getuuid（）\r\n","android.content.AttributionSource.getPackageName()":"android.content.attributionsource.getpackagename（）\r\n","Broadcast Action: Packages have been suspended.":"广播动作：包裹已被暂停。\r\n","\n          The name of the class that implements the provider.\n        ":"\r\n          实现提供商的类的名称。\r\n        \r\n","android.database.sqlite.SQLiteConstraintException":"android.database.sqlite.sqliteconstraintexception\r\n"," to allow\n            it to keep the broadcast active after returning from that function.":" 允许\r\n            从该功能返回后，它可以使广播活动保持活跃。\r\n","#BIND_INCLUDE_CAPABILITIES":"#bind_include_capabilities\r\n","android.content.res.AssetManager.openNonAssetFd(java.lang.String)":"机器人。内容。res.AssetManager。openNonAssetFd（java。朗。弦）\r\n","android.content.pm.ShortcutInfo.DISABLED_REASON_BY_APP":"android.content.pm.shortcutinfo.disabled_reason_by_app\r\n","Interface used for modifying values in a ":"用于修改值的接口\r\n","android.content.res.Resources.getIdentifier(java.lang.String, java.lang.String, java.lang.String)":"android.content.res.res.resources.getIdentifier（java.lang.string，java.lang.string，java.lang.string）\r\n","The current width of the available screen space, in dp units,\n            corresponding to\n            <a href=\"[TODO: @docRoot]guide/topics/resources/providing-resources.":"可用屏幕空间的当前宽度，DP单元，\r\n            对应于\r\n            <a href =“ [todo：@docroot]指南/主题/资源/提供资源。\r\n","android.content.pm.SigningInfo.SigningInfo(android.content.pm.SigningDetails)":"android.content.pm.signinginfo.signinginfo（android.content.pm.signingdetails）\r\n","android.graphics.drawable.AdaptiveIconDrawable.AdaptiveIconDrawable(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)":"android.graphics.drawable.aptiveicondrawable.audaptiveicondrawable（android.graphics.drawable.drawable.drawable，android.graphics.graphics.drawable.drawable.drawable）\r\n","ColorStateList":"COLORSTATELIST\r\n","#openTypedAssetFileDescriptor":"#opentypedAssetFiledScriptor\r\n","android.content.res.TypedArray.getDimension(int, float)":"android.content.res.typedarray.getDimension（int，float）\r\n","Health App Configuration registration success":"健康应用程序配置注册成功\r\n","Returns the value of the green component in the range defined by this\n            color's color space (see ":"在此定义的范围内返回绿色组件的值\r\n            颜色的颜色空间（请参阅\r\n","android.database.sqlite.SQLiteClosable.releaseReference()":"android.database.sqlite.sqliteclosable.releasereference（）\r\n","Model":"模型\r\n","android.graphics.Rect.centerX()":"机器人。图形。长中心()\r\n","#WRITE_TYPE_SIGNED":"#write_type_signed\r\n","android.graphics.Bitmap.setDensity(int)":"android.graphics.bitmap.setdentys（int）\r\n","F:Android.Drm.DrmErrorEvent..ctor":"f：android.drm.drmerrorevent..ctor\r\n","android.content.pm.InstallSourceInfo.getOriginatingPackageName()":"android.content.pm.installsourceinfo.getoriginatingpackagename（）\r\n","Additional flags about this group as given by\n ":"关于此组的其他标志，由\r\n \r\n","Retrieve the 4x4 texture coordinate transform matrix associated with the texture image set by\n            the most recent call to ":"检索与由纹理图像关联的4x4纹理坐标转换矩阵\r\n            最近的呼吁\r\n","The flags relating to the OBB.":"与OBB有关的旗帜。\r\n","Used for receiving notifications from the SensorManager when\n            there is new sensor data.":"用于从Sensormanager接收通知时\r\n            有新的传感器数据。\r\n","Determine whether the given permission is allowed for a particular\n process and user ID running in the system.":"确定是否允许给定的特定许可\r\n 系统中运行的过程和用户​​ID。\r\n","android.content.AsyncTaskLoader.onLoadInBackground()":"android.content.asynctaskloader.onloadinbackground（）\r\n","View#LAYOUT_DIRECTION_RTL":"查看＃layout_direction_rtl\r\n","Value used for undefined start and end insets.":"用于未定义的启动和端插图的值。\r\n","Whether or not the bitmap filter is activated. -or- Helper for setFlags(), setting or clearing the FILTER_BITMAP_FLAG bit.":"是否激活了位图过滤器。 - 或助手用于setFlags（），设置或清除filter_bitmap_flag位。\r\n","Creates a new rotating drawable with no wrapped drawable.":"创建一个新的旋转绘制，没有包裹的可绘制。\r\n","Approximate the <code>Path</code> with a series of line segments.":"用一系列线段近似<code>路径</code>。\r\n","android.content.IntentFilter.getDataScheme(int)":"android.content.intentfilter.getDatascheme（int）\r\n","millisecondsToDelay":"毫秒\r\n","Set the matrix to identity":"将矩阵设置为身份\r\n","android.graphics.drawable.StateListDrawable.getStateCount()":"android.graphics.drawable.statelistdrawable.getstatecount（）\r\n","android.graphics.drawable.RotateDrawable.setPivotY(float)":"android.graphics.drawable.RotatedRawable.setpivoty（float）\r\n","android.content.IntentFilter.getDataAuthority(int)":"android.content.intentfilter.getDataAuthority（int）\r\n","A Drawable that manages an array of other Drawables.":"可绘制的可管理其他可抽签的可绘制。\r\n","android.content.res.Configuration.describeContents()":"android.content.res.configuration.describecontents（）\r\n","android.graphics.drawable.GradientDrawable.setPadding(int, int, int, int)":"android.graphics.drawable.gradientdrawable.setpadding（int，int，int，int）\r\n","#decodeResource(Resources, int, android.graphics.BitmapFactory.Options)":"#decoderesource（资源，int，android.graphics.bitmapfactory.options）\r\n","Return a label that calling app can show to user for the semantic of profile switching --\n            launching its own activity in specified user profile.":"返回调用应用程序可以向用户显示的标签以获取配置文件交换的语义 - \r\n            在指定的用户配置文件中启动自己的活动。\r\n",", convert\n            it to its local non-canonical form.":"， 兑换\r\n            它是其本地非典型形式。\r\n",": If this feature is supported, the feature version\n            specifies a date such that the device is known to pass the Vulkan dEQP test suite associated\n            with that date.":"：如果支持此功能，则功能版本\r\n            指定日期，使该设备已知可以通过Vulkan DEQP测试套件相关\r\n            与那个日期。\r\n","A constant String that is associated with the Intent, used with\n            ":"与意图关联的常数字符串，与\r\n            \r\n","android.content.pm.PackageManager.getResourcesForApplication(android.content.pm.ApplicationInfo)":"android.content.pm.packagemanager.getResourcesForapplication（android.content.pm.applicationinfo）\r\n","Broadcast Action: Indicates low storage space condition on the device no\n            longer exists\n            <p class=\"note\">\n            This is a protected intent that can only be sent by the system.":"广播动作：表示设备上的较低存储空间条件\r\n            更长的存在\r\n            <p class =“ note”>\r\n            这是一个只能由系统发送的受保护意图。\r\n","The type of DRM information processed.":"处理的DRM信息的类型。\r\n","android.graphics.Bitmap.setPremultiplied(boolean)":"android.graphics.bitmap.setpremultiplied（boolean）\r\n","android.companion.DeviceNotAssociatedException":"android.companion.deviceNotassociatedException\r\n","android.content.Intent.CATEGORY_APP_MESSAGING":"android.content.intent.category_app_messaging\r\n","Value used to enable notification for a client configuration descriptor":"用于启用客户端配置描述符通知的值\r\n","android.bluetooth.le.AdvertisingSetParameters.INTERVAL_LOW":"android.bluetooth.le.AdvertisingsetParameters.interval_low\r\n"," as a String.":" 作为字符串。\r\n","android.graphics.text.MeasuredText.getWidth(int, int)":"android.graphics.text.measuredText.getWidth（int，int）\r\n","Absolute max value that can be set by ":"可以设置的绝对最大值\r\n","Represents a Bluetooth GATT Descriptor":"代表蓝牙gatt描述符\r\n","android.bluetooth.BluetoothHearingAid":"android.bluetooth.bluetoothhearingaid\r\n","Returns the data status.":"返回数据状态。\r\n","Marks an application exempt from having its permissions be automatically revoked when\n            the app is unused for an extended period of time.":"标记申请免除其权限时会自动撤销\r\n            该应用在很长一段时间内未使用。\r\n","Used to read a ShortcutIconResource from a Parcel.":"用于阅读包裹中的折短路。\r\n","android.content.pm.PackageManager.SYNCHRONOUS":"android.content.pm.packagemanager.synchronous\r\n","android.content.res.TypedArray.hasValue(int)":"android.content.res.typedarray.hasvalue（int）\r\n","#sendStickyBroadcast(Intent)":"#sendstickybroadcast（意图）\r\n","android.content.pm.PackageManager.FEATURE_CONTROLS":"android.content.pm.packagemanager.feature_controls\r\n","android.content.ServiceConnection":"android.content.ServiceConnection\r\n"," string that may be present in the\n            query Bundle argument passed to\n            ":" 可能存在于\r\n            查询捆绑参数传递给\r\n            \r\n","Callback indicating the result of a characteristic write operation.":"回调表示特征写操作的结果。\r\n","android.content.pm.PackageManager.FEATURE_PC":"android.content.pm.packagemanager.feature_pc\r\n","android.graphics.Rect.intersect(int, int, int, int)":"机器人。图形。长intersect（int，int，int，int）\r\n","android.graphics.Color.valueOf(long)":"android.graphics.color.valueof（long）\r\n",", this\n            flag will only launch the intent if it resolves to a single result.":"， 这个\r\n            FLAG仅在解决单个结果的情况下才会启动意图。\r\n","android.hardware.Sensor.getStringType()":"android.hardware.sensor.getStringType（）\r\n","Optional name of a permission required to be able to access this\n            Service.":"能够访问此权限所需的权限的可选名称\r\n            服务。\r\n","android.graphics.ColorSpace.ILLUMINANT_D50":"android.graphics.colorspace.illuminant_d50\r\n","A font weight value for the extra-bold weight":"额外重量的字体重量值\r\n","Request that a given application service be stopped.":"要求停止给定的应用程序服务。\r\n","android.content.ContentProviderOperation.newUpdate(android.net.Uri)":"android.content.contentProvideroperation.newupdate（android.net.uri）\r\n","Create and/or open a database.":"创建和/或打开数据库。\r\n","android.graphics.text.MeasuredText.getBounds(int, int, android.graphics.Rect)":"android.graphics.text.measuredText.getBounds（int，int，android.graphics.Rect）\r\n","android.graphics.drawable.Drawable.jumpToCurrentState()":"android.graphics.drawable.drawable.jumptocurrentstate（）\r\n","android.database.sqlite.SQLiteDatabase.insert(java.lang.String, java.lang.String, android.content.ContentValues)":"android.database.sqlite.sqlitedatabase.insert（java.lang.string，java.lang.string，android.content.contentvalues）\r\n","View#LAYOUT_DIRECTION_LTR":"查看＃layout_direction_ltr\r\n","Creates a new instance of a HardwareRenderer.":"创建一个Hardwarerenderer的新实例。\r\n","android.content.res.AssetFileDescriptor.AssetFileDescriptor(android.os.ParcelFileDescriptor, long, long, android.os.Bundle)":"机器人。内容。res.AssetFileDescriptor。AssetFileDescriptor（android。操作系统。ParcelFileDescriptor，长，长，android。操作系统。束)\r\n","Add a ContentValues back reference.":"添加ContentValues返回参考。\r\n","Normalize and set the data this intent is operating on.":"标准化并设置该意图正在运行的数据。\r\n","Destroys the rendering context of this HardwareRenderer.":"破坏了这个硬化者的渲染上下文。\r\n","Encode the Signature as ASCII text.":"将签名编码为ASCII文本。\r\n","#onPerformSync":"#Onperformsync\r\n","Throws NotFoundException if the given ID does\n         not exist.\n":"如果给定的ID确实有\r\n         不存在。\r\n\r\n","android.content.pm.verify.domain.DomainVerificationUserState.DOMAIN_STATE_SELECTED":"android.content.pm.verify.domain.domainverificationuserstate.domain_state_selected\r\n","android.content.ContentProviderOperation.isReadOperation()":"android.content.contentProvideroperation.isreadoperation（）\r\n","A string resource identifier (in the package's resources) of this\n            permission's description.":"字符串资源标识符（在软件包的资源中）\r\n            权限的描述。\r\n","android.graphics.Bitmap.sameAs(android.graphics.Bitmap)":"android.graphics.bitmap.sameas（android.graphics.bitmap）\r\n","This class provides information for a shared library.":"此类提供共享库的信息。\r\n","Defines a listener callback that is invoked when the primary clip on the clipboard changes.":"定义一个侦听器回调，该回调在剪贴板上的主剪辑更改时被调用。\r\n","android.os.Environment#DIRECTORY_MUSIC":"android.os.Environment＃Directory_music\r\n","Create a drawable from an inputstream, using the given resources and\n            value to determine density information.":"使用给定资源和\r\n            确定密度信息的价值。\r\n","Initiates connection to host which is currently paired with this device.":"启动与当前与此设备配对的主机的连接。\r\n","Return whether the screen has a high dynamic range.":"返回屏幕是否具有高动态范围。\r\n","Create and return a new auto-close input stream for this asset.":"为此资源创建并返回一个新的自动关闭输入流。\r\n","android.content.pm.PackageManager.FEATURE_TOUCHSCREEN_MULTITOUCH":"android.content.pm.packagemanager.feature_touchscreen_multitouch\r\n","Intent extra: An app package name.":"意图额外：应用程序包名称。\r\n","android.content.Intent.CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST":"android.content.intent.category_framework_instrumentation_test\r\n","android.content.pm.PackageManager.queryActivityProperty(java.lang.String)":"android.content.pm.PackageManager.queryActivityProperty(java.lang.String)\r\n","android.bluetooth.BluetoothHealthAppConfiguration.getRole()":"android.bluetooth.bluetoothhealthappconfiguration.getrole（）\r\n","Representation of a clipped data on the clipboard.":"剪贴板上剪裁数据的表示。\r\n",": The receiver can receive broadcasts from Instant Apps.":"：接收器可以从即时应用程序接收广播。\r\n","Retrieve the icon associated with an application.":"检索与应用程序关联的图标。\r\n","android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_CONNECTED_DEVICE":"android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_CONNECTED_DEVICE\r\n","android.graphics.Typeface.createFromFile(java.lang.String)":"android.graphics.typeface.createfromfile（java.lang.string）\r\n","Defines constants that are used by the DRM framework.":"定义DRM框架使用的常数。\r\n","android.content.res.Configuration.COLOR_MODE_HDR_YES":"android.content.res.configuration.color_mode_hdr_yes\r\n","android.graphics.Path.arcTo(float, float, float, float, float, float, boolean)":"android.graphics.path.arcto（浮子，浮子，浮子，浮子，浮子，浮点，布尔值）\r\n","android.content.pm.PackageManager.FEATURE_APP_WIDGETS":"android.content.pm.packagemanager.feature_app_widgets\r\n","An activity to use for the launcher when the device is placed in a VR Headset viewer.":"将设备放置在VR耳机查看器中时用于发射器的活动。\r\n","Returns the X-position of the center of the gradient as a fraction of\n            the width.":"返回梯度中心的X位，一小部分\r\n            宽度。\r\n","android.content.ContentResolver.notifyChange(android.net.Uri, android.database.ContentObserver, boolean)":"android.content.contentresolver.notifyChange（android.net.uri，android.database.contentobserver，boolean）\r\n","android.content.Loader.onStartLoading()":"android.content.loader.onstartloading（）\r\n","Register to receive intent broadcasts, with the receiver optionally being\n            exposed to Instant Apps.":"注册以接收意图广播，接收器可选为\r\n            暴露于即时应用程序。\r\n","Context#bindService":"上下文＃bindservice\r\n","android.graphics.RenderNode.getTranslationY()":"android.graphics.rendernode.getTranslationy（）\r\n","Default (unspecified) setting of nativeHeapZeroInitialized.":"本地HeapZeroInitialized的默认设置（未指定）设置。\r\n","android.bluetooth.BluetoothHealthAppConfiguration.getDataType()":"android.bluetooth.bluetoothhealthappconfiguration.getDatatype（）\r\n","Build.VERSION_CODES#KITKAT":"build.version_codes＃kitkat\r\n","Maximum Length Of A LIKE Or GLOB Pattern\n            The pattern matching algorithm used in the default LIKE and GLOB implementation\n            of SQLite can exhibit O(N^2) performance (where N is the number of characters in\n            the pattern) for certain pathological cases.":"最大长度或全球图案的长度\r\n            默认类似和Glob实现中使用的模式匹配算法\r\n            sqlite可以表现出O（n^2）性能（其中n是字符的数量\r\n            对于某些病理病例的模式）。\r\n","android.content.pm.PackageManager.getAllPermissionGroups(int)":"android.content.pm.packagemanager.getallpermissiongroups（int）\r\n","The revision number of the base APK for this package, as specified by the\n            &lt;manifest&gt; tag's\n            ":"该软件包的基本APK的修订号，如\r\n            ＆lt; subtest＆gt;标签\r\n            \r\n","Open a private file associated with this Context's application package\n            for writing.":"打开与此上下文的应用程序包相关的私人文件\r\n            写作。\r\n","android.graphics.Picture.beginRecording(int, int)":"android.graphics.picture.beginrecording（int，int）\r\n","Retrieves information for registering, unregistering, or acquiring rights.":"检索注册，不注册或获取权利的信息。\r\n","Returns true iff the specified rectangle r is inside or equal to this\n            rectangle.":"如果指定的矩形r在内部或等于此，则返回true\r\n            矩形。\r\n","Draw the specified oval using the specified paint.":"使用指定的油漆绘制指定的椭圆形。\r\n","Returns whether the outline can be used to clip a View.":"返回是否可以使用大纲来剪辑视图。\r\n","Returns the advertising time limit in milliseconds.":"返回毫秒毫秒的广告时间限制。\r\n","Value for justification mode indicating the text is justified by stretching word spacing.":"通过拉伸单词间距来证明指示文本的正当模式的值。\r\n","If dither is true, the decoder will attempt to dither the decoded\n image.":"如果抖动是真的，解码器将尝试抖动解码\r\n 图片。\r\n","Creates a db and populates it with the sql statements in sqlStatements.":"创建DB并用SQLStatement中的SQL语句填充它。\r\n","android.content.ContentProviderOperation":"android.content.ContentProvideroperation\r\n","android.database.sqlite.SQLiteDatabase.yieldIfContendedSafely()":"android.database.sqlite.sqlitedatabase.yieldifcontendedsafely（）\r\n","F:Android.Bluetooth.BluetoothClass.HasService":"F：android.bluetooth.bluetoothclass.hasservice\r\n","[Da * (1 - Sa), Dc * (1 - Sa)] ":"[da *（1 -sa），dc *（1 -sa）]\r\n","Returns a string array holding the names of all of the columns in the\n            result set in the order in which they were listed in the result.":"返回一个字符串数组，保留了所有列的名称\r\n            结果以结果中列出的顺序设置。\r\n","android.content.pm.ShortcutInfo.getExtras()":"android.content.pm.shortcutinfo.getExtras（）\r\n","Get the BLUETOOTH Adapter for this device.":"获取此设备的蓝牙适配器。\r\n","Returns the secondary advertising phy.":"返回次要广告phy。\r\n","android.database.DataSetObservable.notifyChanged()":"android.database.datasetobservable.notifychanged（）\r\n","android.bluetooth.le.BluetoothLeScanner":"android.bluetooth.le.bluetoothlethlescanner\r\n","android.graphics.Picture.getWidth()":"android.graphics.picture.getWidth（）\r\n","android.graphics.Canvas.isHardwareAccelerated()":"android.graphics.canvas.ishardwareaccelerated（）\r\n","A synonym for ":"一个同义词\r\n","android.content.res.TypedArray.getBoolean(int, boolean)":"android.content.res.typedarray.getboolean（int，boolean）\r\n","Shape non-styled text.":"形成非风格的文本。\r\n","Sets the outline, defining the shape that casts a shadow, and the path to\n            be clipped if setClipToOutline is set.":"设置轮廓，定义投射阴影的形状和路径\r\n            如果设置了setClipToOutline，则被剪切。\r\n","Return a global shared Resources object that provides access to only\n            system resources (no application resources), is not configured for the\n            current screen (can not use dimension units, does not change based on\n            orientation, etc), and is not affected by Runtime Resource Overlay.":"返回一个仅提供对仅访问的全局共享资源对象\r\n            系统资源（没有应用程序资源），未为\r\n            当前屏幕（无法使用尺寸单元，不会根据\r\n            方向等），不受运行时资源覆盖的影响。\r\n","android.graphics.drawable.Drawable.setBounds(android.graphics.Rect)":"android.graphics.drawable.drawable.setbounds（android.graphics.Rect）\r\n","Specify an alpha value for the drawable. 0 means fully transparent, and\n 255 means fully opaque.":"指定可绘制的alpha值。 0表示完全透明，并且\r\n 255表示完全不透明。\r\n","Creates a Bitmap from the given ":"从给定的位图创建一个位图\r\n","Retrieve a dimensional for a particular resource ID.":"检索特定资源ID的维度。\r\n","When a constraint violation occurs, an immediate ROLLBACK occurs,\n thus ending the current transaction, and the command aborts with a\n return code of SQLITE_CONSTRAINT. ":"发生约束冲突时，会立即回滚,\r\n 从而结束当前事务，并且命令中止与\r\n 返回SQLITE_CONSTRAINT的代码。 \r\n","android.content.Intent.EXTRA_RESTRICTIONS_INTENT":"android.content.intent.extra_restrictions_intent\r\n","Returns true if the first item of the associated ":"如果关联的第一项返回true\r\n","Draw the bitmap through the mesh, where mesh vertices are evenly distributed across the\n            bitmap.":"通过网格绘制位图，在该网格上均匀分布在网格顶点\r\n            位图。\r\n","android.content.pm.PackageManager.getProviderInfo(android.content.ComponentName, int)":"android.content.pm.packagemanager.getProviderInfo（android.content.componentname，int）\r\n","android.content.res.Resources.getQuantityString(int, int)":"android.content.res.resources.getquantitystring（int，int）\r\n","Creates a new opaque <code>Color</code> in the ":"在此中创建一个新的不透明<code>颜色</code>\r\n",": The device supports Open Mobile API capable SD-based secure\n            elements.":"：该设备支持开放的移动API基于SD的安全\r\n            元素。\r\n","Change whether or not the ContentQueryMap will register with the cursor's ContentProvider \n            for change notifications.":"更改ContentQueryMap是否会在光标的ContentProvider上注册\r\n            用于更改通知。\r\n","This class provides methods to perform scan related operations for Bluetooth LE devices.":"此类提供了对蓝牙LE设备执行扫描相关操作的方法。\r\n","android.content.AsyncQueryHandler.startDelete(int, java.lang.Object, android.net.Uri, java.lang.String, java.lang.String[])":"android.content.asyncqueryhandler.startdelete（int，java.lang.object，android.net.uri，java.lang.string，java.lang.string []）\r\n","Cancel any active or pending syncs that match account and authority.":"取消匹配帐户和权限的任何活动或待处理的同步。\r\n","Register a sync with the SyncManager.":"向SyncManager注册同步。\r\n","android.content.RestrictionEntry.createBundleEntry(java.lang.String, android.content.RestrictionEntry[])":"android.content.grestriceentry.createbundleentry（java.lang.string，android.content.content.restrictionertry []）\r\n","Informs the registered ":"通知注册\r\n",": The device supports WiFi (802.":"：该设备支持WiFi（802。\r\n","#VERIFICATION_REJECT":"#verification_reject\r\n","Launch multiple new activities.":"启动多个新活动。\r\n","android.gesture.GestureStore.recognize(android.gesture.Gesture)":"android.gesture.gesturestore.Recognize（android.gesture.gesture）\r\n"," that allows you to specify the App Op to enforce restrictions on which receivers\n            the broadcast will be sent to.":" 这使您可以指定应用程序OP来强制对哪些接收器的限制\r\n            广播将发送到。\r\n","YCbCr format, used for video.":"YCBCR格式，用于视频。\r\n","Return the base permission type.":"返回基本权限类型。\r\n","#icon":"＃图标\r\n","android.graphics.Path.isRect(android.graphics.RectF)":"android.graphics.path.isrect（android.graphics.Rectf）\r\n","android.companion.DeviceFilter":"android.companion.devicefilter\r\n","SHA1 hash computed over all file bytes.":"SHA1哈希在所有文件字节上计算。\r\n","android.content.ContentUris.withAppendedId(android.net.Uri, long)":"android.content.contenturis.withappendedId（android.net.uri，long）\r\n","#insert":"＃插入\r\n","android.graphics.ImageFormat.YV12":"android.graphics.imageformat.yv12\r\n","android.graphics.Color.colorSpace(long)":"android.graphics.color.colorspace（long）\r\n","android.os.HardwarePropertiesManager":"android.os.hardwarepropertiesmanager\r\n","Stop Bluetooth Voice Recognition mode, and shut down the\n            Bluetooth audio path.":"停止蓝牙语音识别模式，并关闭\r\n            蓝牙音频路径。\r\n","The Typeface class specifies the typeface and intrinsic style of a font.":"字体类别指定字体的字体和固有样式。\r\n","Retrieve the current graphical icon associated with this resolution.":"检索与此分辨率关联的当前图形图标。\r\n","Return the package name that should be used for ":"返回应使用的包装名称\r\n","Determine whether the calling process of an IPC you are handling has been\n granted a particular permission.":"确定您正在处理的IPC的呼叫过程是否已经\r\n 授予特定的许可。\r\n","Returns <code>true</code> if the value in the indicated column is null.":"返回<code> true </code>如果指示列中的值为null。\r\n","android.graphics.Matrix.setSkew(float, float)":"android.graphics.matrix.setskew（float，float）\r\n","android.content.pm.PackageItemInfo.metaData":"android.content.pm.packageiteminfo.metadata\r\n","android.content.Intent.ACTION_PACKAGE_CHANGED":"android.content.intent.action_package_changed\r\n","Adds a value to the set.":"为集合增加一个值。\r\n","Execute a single SQL statement that is NOT a SELECT/INSERT/UPDATE/DELETE.":"执行不是SELECT/INSERT/UPDATE/DELETE的单个SQL语句。\r\n","android.content.pm.LauncherActivityInfo.getName()":"android.content.pm.launcheractivityinfo.getName（）\r\n","Characteristic property: Characteristic can be written.":"特征属性：可以编写特征。\r\n","android.content.pm.ShortcutManager.enableShortcuts(java.util.List)":"android.content.pm.shortcutmanager.enableshortcuts（java.util.list）\r\n","Xfermode is the base class for objects that are called to implement custom\n            \"transfer-modes\" in the drawing pipeline.":"Xfermode是用于实现自定义的对象的基类\r\n            绘图管道中的“转移模式”。\r\n","Return a TypedArray holding the values defined by\n ":"返回按照定义的值的打字机\r\n \r\n","android.content.pm.ResolveInfo.loadIcon(android.content.pm.PackageManager)":"android.content.pm.resolveinfo.loadicon（android.content.pm.packagemanager）\r\n","android.content.Context.getFileStreamPath(java.lang.String)":"android.content.context.getFileStreamPath（java.lang.string）\r\n","android.R.attr#permissionFlags":"Android.r.Attr＃GERMISSERFERFLAGS\r\n","A flag indicating whether any keyboard is available.":"指示是否有任何键盘的标志。\r\n","Return list of all known install sessions owned by the calling app.":"调用应用拥有的所有已知安装会话的返回列表。\r\n","Activity Action: Display an activity state associated with an unique ":"活动动作：显示与唯一的活动状态\r\n","android.graphics.Insets.subtract(android.graphics.Insets, android.graphics.Insets)":"android.graphics.insets.subtract（android.graphics.insets，android.graphics.insets）\r\n","The registration has already been done for the given account.":"注册已经为给定帐户完成。\r\n","android.content.pm.InstallSourceInfo.getInitiatingPackageName()":"android.content.pm.installsourceinfo.getInitiatingpackagename（）\r\n","Block until a connection is established, with timeout.":"封锁直到建立连接，并暂停。\r\n","Returns the style value associated to the given axis for this font.":"返回该字体的给定轴相关的样式值。\r\n","android.content.pm.ProviderInfo.authority":"android.content.pm.providerinfo.authority\r\n","android.content.RestrictionsManager.EXTRA_PACKAGE_NAME":"android.content.ErterctionsManager.extra_package_name\r\n","android.app.PendingIntent#getIntentSender()":"android.app.pendingIntent＃getIntentsEnder（）\r\n","android.graphics.Path#isConvex() convex path":"android.graphics.path＃isConvex（）凸路径\r\n","Activity Action: Pick an item from the data, returning what was selected.":"活动动作：从数据中选择一个项目，返回所选择的内容。\r\n"," to be used for live preview.":" 用于实时预览。\r\n","Returns a \"good\" intent to launch a front-door activity in a package.":"返回“良好”意图，以在包装中启动前门活动。\r\n","android.content.pm.ApplicationInfo.uid":"android.content.pm.applicationinfo.uid\r\n","android.content.pm.SharedLibraryInfo.TYPE_STATIC":"android.content.pm.SharedLibraryInfo.TYPE_STATIC\r\n","android.content.res.Configuration.isNightModeActive()":"android.content.res.configuration.isnightmodeactive（）\r\n","PackageManager#getActivityInfo(ComponentName, int)\n            PackageManager.getActivityInfo()":"PackageManager＃getActivityInfo（componentName，int）\r\n            packageManager.getActivityInfo（）\r\n","The Camera class is used to set image capture settings, start/stop preview,\n            snap pictures, and retrieve frames for encoding for video.":"相机类用于设置图像捕获设置，开始/停止预览，\r\n            拍摄图片，并检索用于视频的编码框架。\r\n","android.content.Intent.EXTRA_BUG_REPORT":"android.content.intent.extra_bug_report\r\n","android.database.ContentObserver.deliverSelfNotifications()":"android.database.contentobserver.deliverselfnotification（）\r\n","M:Android.Content.Context.GrantUriPermission(System.String,Android.Net.Uri,Android.Net.Uri)":"m：android.content.context.granturipermession（System.String，android.net.uri，android.net.uri）\r\n","android.content.Intent.FLAG_ACTIVITY_REQUIRE_NON_BROWSER":"android.content.intent.flag_activity_require_non_browser\r\n","Create an empty region":"创建一个空区域\r\n","Checks whether this attribution source can be trusted.":"检查是否可以信任此归因源。\r\n","android.graphics.Insets.min(android.graphics.Insets, android.graphics.Insets)":"android.graphics.insets.min（android.graphics.insets，android.graphics.insets）\r\n","Returns the filter set on the service uuid.":"返回服务UUID上的过滤器设置。\r\n","A DrawFilter subclass can be installed in a Canvas.":"可以在画布中安装绘图子类。\r\n","android.content.BroadcastReceiver.getResultExtras(boolean)":"android.content.broadcastreceiver.getResultextras（boolean）\r\n","#getNumberOfCameras()":"#getnumberofcameras（）\r\n","Gets the packages that depend on the library.":"获取依赖于库的包。\r\n","Retrieves information about all the DRM plug-ins (agents) that are\n            registered with the DRM framework.":"检索有关所有DRM插件（代理）的信息\r\n            在DRM框架上注册。\r\n"," to launch the email application.":" 启动电子邮件应用程序。\r\n","android.graphics.Matrix.mapRect(android.graphics.RectF, android.graphics.RectF)":"android.graphics.matrix.maprect（android.graphics.Rectf，android.graphics.Rectf）\r\n","Characteristic property: Characteristic can be written without response.":"特征属性：可以写入特征，而无需响应。\r\n",") against\n            which to sort results.":"） 反对\r\n            要排序结果。\r\n","android.content.Intent.EXTRA_ASSIST_CONTEXT":"android.content.intent.extra_assist_context\r\n","android.content.Intent.EXTRA_QUICK_VIEW_FEATURES":"android.content.intent.extra_quick_view_features\r\n","Creates a ResourcesProvider from a directory path.":"从目录路径创建资源提供者。\r\n","android.graphics.Paint.HINTING_ON":"android.graphics.paint.hinting_on\r\n"," if text classification was not and will\n            not be performed on the associated clip.":" 如果文本分类不是并且将\r\n            不在关联的剪辑上执行。\r\n","F:Android.Bluetooth.BluetoothGattDescriptor..ctor":"F：android.bluetooth.bluetoothgattdescriptor..ctor\r\n","Saves rights to a specified path and associates that path with the content path.":"将权利保存到指定的路径上，并将该路径与内容路径相关联。\r\n","Focus is fixed.":"焦点是固定的。\r\n","if an illegal extra was set or if any of the parameters\n are null.\n":"如果设置了非法额外或任何参数\r\n 为无效。\r\n\r\n","android.graphics.Point":"android.graphics.point\r\n","android.database.sqlite.SQLiteDatabase.CONFLICT_REPLACE":"android.database.sqlite.sqlitedatabase.conflict_replace\r\n","Options that have been set in the provider declaration in the\n manifest.":"在提供商声明中已设置的选项\r\n 显现。\r\n","android.graphics.drawable.Drawable.hasFocusStateSpecified()":"android.graphics.drawable.drawable.hasfocusstatespecified（）\r\n","Open a private file associated with this Context's application package\n for reading.":"打开与此上下文的应用程序包相关的私人文件\r\n 用于阅读。\r\n","Return the Theme object associated with this Context.":"返回与此上下文关联的主题对象。\r\n","Broadcast Action: An input method has been changed.":"广播动作：输入方法已更改。\r\n","android.graphics.fonts.Font.getBuffer()":"android.graphics.fonts.font.getbuffer（）\r\n","Returns the left padding in pixels.":"以像素为单位返回左填充。\r\n","Class for retrieving various kinds of information related to the application\n            packages that are currently installed on the device.":"检索与应用程序相关的各种信息的课程\r\n            当前在设备上安装的软件包。\r\n"," only if the attribute was undefined.":" 只有当属性不确定时。\r\n","Return the color associated with the given set of\n            ":"返回与给定的一组相关的颜色\r\n            \r\n","android.graphics.Bitmap.isMutable()":"android.graphics.bitmap.ismutable（）\r\n","Removes GPS latitude, longitude, altitude, and timestamp from the\n parameters.":"从The的GPS纬度，经度，高度和时间戳中去除GPS纬度\r\n 参数。\r\n","The key that is used in the <code>attributes</code> HashMap to pass the return status.":"<code>属性中使用的密钥</code> hashmap传递返回状态。\r\n","android.graphics.BlendModeColorFilter.getColor()":"android.graphics.blendmodecolorfilter.getColor（）\r\n","Get the gravity used to position/stretch the bitmap within its bounds. -or- Set the gravity used to position/stretch the bitmap within its bounds.":"获取用于将位图定位/拉伸其边界的重力。 - 或设置用于定位/拉伸位图内部的重力。\r\n","android.content.Intent.getComponent()":"android.content.intent.getComponent（）\r\n","android.inputmethodservice.InputMethodService":"android.inputmethodservice.inputmethodservice\r\n","The surface to render into.":"表面呈现。\r\n","android.content.Intent#ACTION_CALL":"android.content.intent＃action_call\r\n","android.content.pm.PackageManager.FLAG_PERMISSION_WHITELIST_INSTALLER":"android.content.pm.packagemanager.flag_permission_whitelist_installer\r\n","Gets the value of the field at the specified row and column index as an\n            <code>int</code>.":"在指定的行和列索引处获取字段的值\r\n            <code> int </code>。\r\n","that indicates that the activity\n can itself handle changes to the navigation type. ":"这表明活动\r\n 您可以处理导航类型的更改。\r\n","android.content.Intent.putExtra(java.lang.String, short[])":"android.content.intent.putextra（java.lang.string，short []）\r\n","android.graphics.drawable.AdaptiveIconDrawable":"android.graphics.drawable.aptiveicondrawable\r\n"," that allows you to\n receive data back from the broadcast.":" 这使您能够\r\n 从广播中接收数据。\r\n","outRect":"愤怒\r\n","android.content.ContentProvider.getContext()":"android.content.contentprovider.getContext（）\r\n","android.database.DatabaseUtils.bindObjectToProgram(android.database.sqlite.SQLiteProgram, int, java.lang.Object)":"android.database.databaseutils.bindobjectToprogram（android.database.sqlite.sqlite.sqlite Program，int，java.lang.object）\r\n","android.content.ClipboardManager.clearPrimaryClip()":"android.content.clipboardmanager.clearprimaryclip（）\r\n","#TYPE_BUNDLE_ARRAY":"#TYPE_BUNDLE_ARRAY\r\n","android.graphics.drawable.StateListDrawable.addState(int[], android.graphics.drawable.Drawable)":"android.graphics.drawable.statelistdrawable.addstate（int []，android.graphics.drawable.drabable.drabable）\r\n","android.content.Context.getColor(int)":"android.content.context.getColor（int）\r\n","android.content.res.Resources.getInteger(int)":"android.content.Res.Resources.getInteger（int）\r\n","Creates a new bitmap, scaled from an existing bitmap, when possible.":"在可能的情况下创建一个从现有位图缩放的新位图。\r\n","android.graphics.Paint.getAlpha()":"android.graphics.paint.getalpha（）\r\n","next":"下一个\r\n","Draw the text in the array, with each character's origin specified by the pos array.":"将文本绘制在数组中，每个字符的原点由POS数组指定。\r\n",": this is set if this application has been\n install as an update to a built-in system application.":"：如果此应用程序已经设置\r\n 作为内置系统应用程序的更新。\r\n","android.hardware.Camera.reconnect()":"android.hardware.camera.reconnect（）\r\n","android.graphics.RenderNode.setClipRect(android.graphics.Rect)":"机器人。图形。RenderNode。setClipRect（android。图形。Rect）\r\n","android.graphics.Camera":"android.graphics.camera\r\n","Constant representing HID Feature Report type.":"恒定表示HID功能报告类型。\r\n","to represent that the phone is in a analog (low end) dock.":"表示手机在模拟（低端）码头中。\r\n","The name of the extra used to define the Intent of a shortcut.":"用于定义快捷方式目的的额外的名称。\r\n","android.graphics.Canvas.getSaveCount()":"机器人。图形。帆布。getSaveCount()\r\n","Querying flag: automatically match components based on their Direct Boot\n            awareness and the current user state.":"查询标志：根据其直接引导自动匹配组件\r\n            意识和当前用户状态。\r\n","android.graphics.drawable.Icon.setTintList(android.content.res.ColorStateList)":"android.graphics.drawable.icon.settintlist（android.content.res.colorStateList）\r\n","android.bluetooth.BluetoothGattServer.addService(android.bluetooth.BluetoothGattService)":"android.bluetooth.bluetoothgattserver.addservice（android.bluetooth.bluetoothgattservice）\r\n","android.content.Intent.EXTRA_CHOSEN_COMPONENT_INTENT_SENDER":"android.content.intent.extra_chosen_component_intent_sender\r\n","android.content.ContentUris.appendId(android.net.Builder, long)":"android.content.contenturis.appendid（android.net.builder，long）\r\n","android.graphics.drawable.Drawable.setAutoMirrored(boolean)":"android.graphics.drawable.drawable.setautomirrored（boolean）\r\n","ResourcesProvider ResourcesProvider(s)":"ResourcesProvider ResourcesProvider\r\n","The version of the package to which the OBB file belongs.":"OBB文件所属包的版本。\r\n","android.content.pm.PackageInfo.versionName":"android.content.pm.packageinfo.versionname\r\n","android.content.Intent.ACTION_INSERT_OR_EDIT":"android.content.intent.action_insert_or_edit\r\n","android.graphics.HardwareRenderer.SYNC_OK":"android.graphics.hardwarerenderer.sync_ok\r\n","F:Android.Webkit.WebChromeClient.OnShowCustomView":"F：android.webkit.webchromeclient.onshowcustomview\r\n"," for controlling location\n            updates.":" 用于控制位置\r\n            更新。\r\n","Full path to the default directory assigned to the package for its\n            persistent data.":"通往分配给软件包的默认目录的完整路径\r\n            持续数据。\r\n","android.graphics.PathDashPathEffect.PathDashPathEffect(android.graphics.Path, float, float, android.graphics.Style)":"android.graphics.pathdashpatheffect.pathdashpatheffect（android.graphics.path，float，float，android.graphics.style）\r\n","android.graphics.drawable.ShapeDrawable.getShape()":"android.graphics.drawable.shapedrawable.getShape（）\r\n","Get the bounds of the sender of this intent, in screen coordinates. -or- Set the bounds of the sender of this intent, in screen coordinates.":"在屏幕坐标中获取此意图的发件人的界限。 - 或 - 在屏幕坐标中设置此意图的发件人的边界。\r\n","Creates a new clip drawable with the specified gravity and orientation.":"创建一个可以用指定的重力和方向绘制的新剪辑。\r\n","android.content.Intent.resolveActivityInfo(android.content.pm.PackageManager, int)":"android.content.intent.ResolVeactivityInfo（android.content.pm.packagemanager，int）\r\n","Computes the chromaticity coordinates of a specified correlated color\n            temperature (CCT) on the Planckian locus.":"计算指定相关颜色的色度坐标\r\n            普朗克基因座上的温度（CCT）。\r\n","android.content.ContentProviderOperation.isCall()":"android.content.contentProvideroperation.iscall（）\r\n","#getDimensionPixelSize":"#getDimensionPixelsize\r\n","An integer representing the end of the line has Zero-Width-Joiner (U+200D) followed by normal\n            hyphen character (U+002D).":"代表线路末端的整数具有零宽的加路者（U+200D），然后是正常\r\n            连字符（U+002D）。\r\n","android.graphics.Paint.Paint(android.graphics.Paint)":"android.graphics.paint.paint（android.graphics.paint）\r\n","Activity Action: Pick an activity given an intent, returning the class\n            selected.":"活动行动：选择一个意图的活动，返回课程\r\n            选定。\r\n","android.content.Context.JOB_SCHEDULER_SERVICE":"android.content.context.job_scheduler_service\r\n","Retrieve the current result data, as set by the previous receiver. -or- Change the current result data of this broadcast; only works with\n            broadcasts sent through\n            ":"检索由上一个接收器设置的当前结果数据。 - 或 - 更改此广播的当前结果数据；只能使用\r\n            发送的广播\r\n            \r\n","Convenience for calling <code>getParcelFileDescriptor().":"方便调用<code>getParcelFileDescriptor()。\r\n","Create a new ClipData holding data of the type\n            ":"创建一个新的clipdata保存该类型的数据\r\n            \r\n","Add two Insets.":"添加两个插图。\r\n","android.content.Intent.EXTRA_START_TIME":"android.content.intent.extra_start_time\r\n","android.content.Context.removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)":"android.content.context.removestickybroadcastasuser（android.content.intent，android.os.userhandle）\r\n"," in\n            the ":" 在\r\n            该 \r\n","This activity is a development preference panel.":"该活动是一个开发偏好小组。\r\n",": bits that encode the aspect ratio.":"：编码纵横比的位。\r\n","android.content.pm.PackageManager.setAutoRevokeWhitelisted(java.lang.String, boolean)":"android.content.pm.packagemanager.setautorevokewhitelisted（java.lang.string，boolean）\r\n","Activity Action: Display the data to the user.":"活动动作：向用户显示数据。\r\n","Generate a new Theme object for this set of Resources.":"为这组资源生成一个新的主题对象。\r\n","AdvertisingSet#setAdvertisingData":"广告网＃SetadvertisingData\r\n","Returns the ColorStateList backing this Drawable, or a new ColorStateList of the default\n            ColorDrawable color if one hasn't been defined yet. -or- Replace this Drawable's ColorStateList.":"返回colorStateList备份可绘制的可绘制或默认的新颜色阶段主义者\r\n            如果尚未定义，则可以颜色颜色。 - 或 - 替换此可绘制的ColorStatelist。\r\n","android.graphics.Interpolator.setRepeatMirror(float, boolean)":"android.graphics.interpolator.setrepeatmirror（浮点，布尔值）\r\n","The text is drawn centered horizontally on the x,y origin\n":"文本以x，y来源水平绘制为中心\r\n\r\n"," for handling management of\n            Wi-Fi Aware.":" 用于处理管理\r\n            Wi-Fi知道。\r\n","Returns the last known sequence number for these changes.":"返回这些更改的最后一个已知序列编号。\r\n","The filter didn't match due to different actions.":"由于动作不同，该过滤器不匹配。\r\n","android.graphics.Paint.getTextRunCursor(char[], int, int, boolean, int, int)":"android.graphics.paint.gettextruncursor（char []，int，int，boolean，int，int）\r\n",": The device includes a hardware step counter.":"：该设备包括一个硬件步骤计数器。\r\n","android.content.Intent.setClipData(android.content.ClipData)":"android.content.intent.setclipdata（android.content.clipdata）\r\n","android.content.PeriodicSync.extras":"android.content.periodicsync.extras\r\n","android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)":"android.database.sqlite.sqlitedatabase.execsql（java.lang.string）\r\n","Returns a map of 16-bit UUID and its corresponding service data.":"返回16位UUID及其相应服务数据的地图。\r\n","A value to insert or update.":"插入或更新的值。\r\n","android.content.Intent.getIntArrayExtra(java.lang.String)":"android.content.intent.getIntarrayExtra（java.lang.string）\r\n","\n            when finished.":"等结束了。\r\n","Shortcut has been disabled by the publisher app with the\n            ":"快捷方式已被发布者应用程序禁用\r\n            \r\n",": a restricted context may\n disable specific features. ":"：有限的上下文可能\r\n 禁用特定功能。\r\n","android.graphics.drawable.LayerDrawable.getStartPadding()":"android.graphics.drawable.layerdrawable.getstartpadding（）\r\n","android.content.Intent.removeExtra(java.lang.String)":"android.content.intent.removeextra（java.lang.string）\r\n","Remove a entry of gestures":"删除手势的条目\r\n","Gets the z location of the camera.":"获取相机的Z位置。\r\n","android.graphics.Path.rCubicTo(float, float, float, float, float, float)":"android.graphics.path.rcubicto（浮子，浮子，浮子，浮子，浮点，浮点）\r\n","Add a new Intent data \"scheme specific part\" to match against.":"添加一个新的意图数据“方案特定部分”以匹配。\r\n","outValue":"超出值\r\n","SurfaceTexture":"表面纹理\r\n","Returns the UUID of this characteristic":"返回此特征的UUID\r\n","android.drm.DrmManagerClient.DrmManagerClient(android.content.Context)":"android.drm.drmmanagerclient.drmmanagerclient（android.content.context）\r\n","android.content.pm.ResolveInfo.activityInfo":"android.content.pm.resolveinfo.activityinfo\r\n","Unregister an observer that has previously been registered with this\n cursor via ":"取消注册以前已在此注册的观察者\r\n 光标通过 \r\n","Restore the identity of the incoming IPC on the current thread back to a\n            previously identity that was returned by ":"恢复当前线程中传入IPC的身份返回到\r\n            以前归还的身份\r\n","android.content.CursorLoader.CursorLoader(android.content.Context)":"android.content.cursorloader.cursorloader（android.content.context）\r\n","android.content.pm.ServiceInfo.getForegroundServiceType()":"android.content.pm.ServiceInfo.getForegroundServiceType()\r\n","android.view.View":"机器人。视图。查看\r\n","Retrieve the raw TypedValue for the attribute at <var>index</var>.":"检索<var> index </var>的属性的RAW TypedValue。\r\n","Returns the paint used to draw this NinePatch.":"返回用于绘制此九调的油漆。\r\n","Sets camera auto-focus move callback.":"设置摄像头自动对焦移动回调。\r\n","Returns the blur radius of the shadow layer.":"返回阴影层的模糊半径。\r\n","android.content.Intent#ACTION_PACKAGE_REMOVED":"android.content.intent＃action_package_remaved\r\n","android.drm.DrmManagerClient.convertData(int, byte[])":"android.drm.drmmanagerclient.convertdata（int，byte []）\r\n","Change the current result extras of this broadcast; only works with\n            broadcasts sent through\n            ":"更改此广播的当前结果；只能使用\r\n            发送的广播\r\n            \r\n","Returns the property defined in the given component declaration.":"返回给定组件声明中定义的属性。\r\n","Take people pictures at night.":"晚上拍照。\r\n","#saveLayer(RectF, Paint)":"#saveLayer（RectF，油漆）\r\n","Retrieve the general action to be performed, such as\n            ":"检索要执行的一般操作，例如\r\n            \r\n","Gets the maximum number of focus areas supported.":"获得最大支持的焦点区域数量。\r\n","Create a BitmapRegionDecoder from an input stream.":"从输入流创建一个位图Decoder。\r\n","android.content.pm.PackageInfo.lastUpdateTime":"android.content.pm.packageinfo.lastupdateTime\r\n","In order to use this class, you must extend it, and call this setup function from your\n            constructor.":"为了使用此类，您必须将其扩展，并从您的\r\n            构造函数。\r\n","android.bluetooth.le.ScanRecord.getDeviceName()":"android.bluetooth.le.scanrecord.getDeviceName（）\r\n","android.content.pm.PackageManager.MATCH_APEX":"android.content.pm.packagemanager.match_apex\r\n","android.content.Intent.Intent(java.lang.String, android.net.Uri)":"android.content.intent.intent（java.lang.string，android.net.uri）\r\n","if the named package does not exist.\n":"如果不存在命名的软件包。\r\n\r\n","android.bluetooth.le.BluetoothLeAdvertiser.startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters, android.bluetooth.le.AdvertiseData, android.bluetooth.le.AdvertiseData, android.bluetooth.le.PeriodicAdvertisingParameters, android.bluetooth.le.AdvertiseData, int, int, android.bluetooth.le.AdvertisingSetCallback)":"android.bluetooth.le.BluetoothLeAdvertiser.startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters, android.bluetooth.le.AdvertiseData, android.bluetooth.le.AdvertiseData, android.bluetooth.le.PeriodicAdvertisingParameters, android.bluetooth.le.AdvertiseData, int，int，android.bluetooth.le.AdvertisingsetCallback）\r\n","android.content.pm.PackageManager.addPreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName)":"android.content.pm.packagemanager.addpreferredivelivity（android.content.intentfilter，int，android.content.componentname []，android.content.componentname）\r\n","android.content.ContentProviderClient.getLocalContentProvider()":"android.content.contentproviderclient.getLocalContentProvider（）\r\n","Broadcast Action: Packages have been unsuspended.":"广播动作：包装没有解决。\r\n","android.content.Intent.setDataAndTypeAndNormalize(android.net.Uri, java.lang.String)":"android.content.intent.setdataandtypeandnormalize（android.net.uri，java.lang.string）\r\n","Interface that drawables supporting animations should implement.":"支持动画的可抽签的接口应实现。\r\n","android.content.Intent.getFloatArrayExtra(java.lang.String)":"android.content.intent.getFloatarrayExtra（java.lang.string）\r\n","android.content.RestrictionEntry.RestrictionEntry(java.lang.String, java.lang.String)":"android.content.grestriceentry.resternityEntry（java.lang.string，java.lang.string）\r\n","Color":"颜色\r\n","Write the picture contents to a stream.":"将图片内容写入流。\r\n","Return a \"good\" intent to launch a front-door Leanback activity in a\n            package, for use for example to implement an \"open\" button when browsing\n            through packages.":"返回“良好”意图，以在A中启动前门倾斜活动\r\n            软件包，例如在浏览时使用“打开”按钮\r\n            通过软件包。\r\n","android.graphics.text.LineBreaker.HYPHENATION_FREQUENCY_NORMAL":"android.graphics.text.linebreaker.hyphenation_frequency_normal\r\n","Controls fetching of rows relative to requested position.":"控制行相对于请求的位置的提取。\r\n","android.content.res.TypedArray.getIndex(int)":"android.content.res.typedarray.getIndex（int）\r\n","android.content.Intent.toURI()":"android.content.intent.touri（）\r\n","Activity Action: Deliver multiple data to someone else.":"活动行动：向其他人传递多个数据。\r\n","Boolean that can be supplied as meta-data with a dock activity, to\n            indicate that the dock should take over the home key when it is active.":"可以作为元数据提供码头活动的布尔值，\r\n            表明码头在主动时应接管码头。\r\n","android.content.pm.SharedLibraryInfo.getName()":"android.content.pm.SharedLibraryInfo.getName（）\r\n","android.graphics.ImageDecoder.setCrop(android.graphics.Rect)":"android.graphics.imagedecoder.setcrop（android.graphics.Rect）\r\n","Return the specific selector associated with this Intent. -or- Set a selector for this Intent.":"返回与此意图关联的特定选择器。 - 或 - 为此意图设置选择器。\r\n","Android YUV format.":"Android Yuv格式。\r\n","Converts tristimulus values from the CIE XYZ space to this color\n            space's color model.":"将tristimulus值从cie xyz空间转换为这种颜色\r\n            空间的颜色模型。\r\n","Creates a <code>DrmConvertedStatus</code> object with the specified parameters.":"使用指定参数创建<code> drmconvertedstatus </code>对象。\r\n","#ACTION_GET_RESTRICTION_ENTRIES":"#ACTION_GET_RESTERTICTIOD_ENTRIE\r\n","android.database.DatabaseUtils.dumpCurrentRow(android.database.Cursor, java.lang.StringBuilder)":"android.database.databaseutils.dumpcurrentrow（android.database.cursor，java.lang.stringbuilder）\r\n","android.bluetooth.BluetoothGattCharacteristic.setValue(java.lang.String)":"android.bluetooth.bluetoothgattcharacteristic.setValue（java.lang.string）\r\n","Bind a byte array value to this statement.":"将字节数组值绑定到此语句。\r\n","android.database.AbstractCursor.mPos":"机器人。数据库。AbstractCursor.mPos\r\n","Determine the best action to perform for a given Intent.":"确定要为给定意图执行的最佳操作。\r\n","android.content.ContentResolver.acquireUnstableContentProviderClient(android.net.Uri)":"android.content.contentresolver.acquireunstablecontentproviderclient（android.net.uri）\r\n","Remove all services from the list of provided services.":"从提供的服务列表中删除所有服务。\r\n",": The device\n            supports attaching to IMS implementations using the ImsService API in telephony.":"： 设备\r\n            支持使用电话中的IMSService API附加到IMS实现。\r\n","Returns true if the current thread is holding an active connection to the database.":"如果当前线程保持与数据库的活动连接，则返回true。\r\n","Appends an Object to an SQL string with the proper escaping, etc.":"将对象附加到具有适当逃逸的SQL字符串上，等等。\r\n","android.content.ContentResolver.wrap(android.content.ContentProvider)":"android.content.contentresolver.wrap（android.content.contentprovider）\r\n","android.graphics.RenderNode.setAmbientShadowColor(int)":"机器人。图形。RenderNode。setAmbientShadowColor(int)\r\n","Helper for saveLayerAlpha() that takes 4 values instead of a RectF.":"SaveLayerAlpha()的助手，它采用4个值而不是一个RectF。\r\n","android.content.pm.PackageManager.DONT_KILL_APP":"android.content.pm.packagemanager.dont_kill_app\r\n","android.graphics.drawable.RotateDrawable.setFromDegrees(float)":"android.graphics.drawable.RotatedRawable.setfromdegrees（float）\r\n","android.graphics.drawable.Drawable.setColorFilter(android.graphics.ColorFilter)":"android.graphics.drawable.drawable.setcolorfilter（android.graphics.colorfilter）\r\n",",\n            so that it is as if the sticky broadcast had never happened.":"，，，，\r\n            因此，好像粘性广播从未发生过。\r\n","Is the given data type included in the filter?  Note that if the filter\n            does not include any type, false will <em>always</em> be returned.":"过滤器中是否包含给定的数据类型？请注意，如果过滤器\r\n            不包括任何类型，false Will <em>始终返回</em>。\r\n","Return an integer representation of the Color.":"返回颜色的整数表示。\r\n","#ACTION_CONFIRM_PIN_APPWIDGET":"#action_confirm_pin_appwidget\r\n","ContentProvider#update":"ContentProvider＃更新\r\n","Option for getTextRunCursor.":"GetTextruncursor的选项。\r\n","Take the current flag indicating whether the loader's content had\n            changed while it was stopped.":"取当前标志，指示装载机的内容是否有\r\n            停止时改变了。\r\n","android.content.Intent.ACTION_ALL_APPS":"android.content.intent.action_all_apps\r\n","android.content.Intent.CATEGORY_ALTERNATIVE":"android.content.intent.category_alternative\r\n","android.graphics.RenderEffect.createBlurEffect(float, float, android.graphics.RenderEffect, android.graphics.TileMode)":"android.graphics.rendereffect.createblureffect（float，float，android.graphics.rendereffect，android.graphics.tilemode）\r\n","Return an AssetManager instance for your application's package.":"返回应用程序包的AssetManager实例。\r\n","android.content.pm.ApplicationInfo.getMemtagMode()":"android.content.pm.applicationinfo.getmemtagmode（）\r\n","android.content.res.loader.ResourcesProvider.loadFromApk(android.os.ParcelFileDescriptor)":"android.content.res.res.loader.resourcesprovider.loadfromapk（android.os.parcelfiledScriptor）\r\n","Prints the contents of a Cursor's current row to a StringBuilder.":"将光标的当前行的内容打印到StringBuilder。\r\n","android.database.Cursor.unregisterDataSetObserver(android.database.DataSetObserver)":"机器人。数据库。光标。unregisterDataSetObserver（android。数据库。DataSetObserver）\r\n","android.R.styleable#AndroidManifest_sharedUserId sharedUserId":"Android.r.Stylable＃AndroidManifest_shareduserid shareduserid\r\n","Replaces the ":"替换\r\n",": The device does not have a touch screen, but\n            does support touch emulation for basic events.":"：该设备没有触摸屏，但是\r\n            确实支持基本事件的触摸仿真。\r\n","android.graphics.drawable.Drawable.createFromStream(java.io.InputStream, java.lang.String)":"android.graphics.drawable.drawable.createfromstream（java.io.inputstream，java.lang.string）\r\n","SensorDirectChannel#RATE_NORMAL":"sensorDirectChannel＃rate_normal\r\n","android.content.pm.Checksum.getValue()":"android.content.pm.checksum.getValue（）\r\n"," from the list of services offered\n            by this device.":" 从提供的服务列表中\r\n            通过此设备。\r\n","Bounds of the face. (-1000, -1000) represents the top-left of the\n camera field of view, and (1000, 1000) represents the bottom-right of\n the field of view.":"脸的边界。 （-1000，-1000）表示\r\n 摄像机视野，（1000，1000）代表\r\n 视野。\r\n","android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String, java.lang.String[], android.os.CancellationSignal)":"android.database.sqlite.sqlitedatabase.rawquery（java.lang.string，java.lang.string []，android.os.os.cancellationsignal）\r\n","A remote client has requested to read a local descriptor.":"远程客户端已要求阅读本地描述符。\r\n","android.graphics.RectF.set(android.graphics.RectF)":"android.graphics.Rectf.set（android.graphics.Rectf）\r\n","android.content.BroadcastReceiver.onReceive(android.content.Context, android.content.Intent)":"android.content.broadcastreceiver.onreceive（android.content.context，android.content.intent）\r\n","android.graphics.drawable.LayerDrawable.setLayerGravity(int, int)":"android.graphics.drawable.layerdrawable.setlayergravity（int，int）\r\n","android.content.pm.Signature.Signature(java.lang.String)":"android.content.pm.signature.signature（java.lang.string）\r\n","android.graphics.Paint.getStrikeThruPosition()":"android.graphics.paint.getstrikethruposition（）\r\n","android.content.RestrictionsManager.RESPONSE_KEY_RESULT":"android.content.ErterctionsManager.Response_Key_Result\r\n","Contains a response from the administrator for specific request.":"包含管理员的响应以供特定请求。\r\n","android.graphics.Movie":"android.graphics.movi​​e\r\n","android.content.Context.MEDIA_COMMUNICATION_SERVICE":"android.content.context.media_communication_service\r\n","Provides a mechanism for apps to query restrictions imposed by an entity that\n            manages the user.":"提供了一种应用程序来查询实体施加的限制的机制\r\n            管理用户。\r\n","Set this colormatrix to the concatenation of the two specified\n            colormatrices, such that the resulting colormatrix has the same effect\n            as applying matB and then applying matA.":"Set this colormatrix to the concatenation of the two specified\r\n            colormatrices, such that the resulting colormatrix has the same effect\r\n            as applying matB and then applying matA.\r\n","Returns the font variation settings.":"返回字体变化设置。\r\n","\n          Whether or not the data under the content provider's control is to\n          be synchronized with data on a server.\n        ":"\r\n          内容提供商控制下的数据是否为\r\n          与服务器上的数据同步。\r\n        \r\n","Throws FileNotFoundException if there is\n no file associated with the given URI or the mode is invalid.":"如果有\r\n 没有与给定URI或模式关联的文件无效。\r\n","#flags":"#flags\r\n","android.graphics.drawable.TransitionDrawable.TransitionDrawable(android.graphics.drawable.Drawable[])":"android.graphics.drawable.transitiondrawable.transitiondrawable（android.graphics.drawable.drabable.drabable []）\r\n","android.content.pm.SharedLibraryInfo.getDependentPackages()":"android.content.pm.SharedLibraryInfo.getDependentPackages()\r\n"," is null.\n":" 一片空白。\r\n\r\n","android.graphics.RectF.setIntersect(android.graphics.RectF, android.graphics.RectF)":"android.graphics.Rectf.setIntersect（android.graphics.Rectf，android.graphics.Rectf）\r\n","Called when the drawable needs to be redrawn.":"当需要重新绘制时调用。\r\n","android.graphics.Matrix.rectStaysRect()":"android.graphics.matrix.RectStaysRect（）\r\n",":\n            The device supports autofill of user credentials, addresses, credit cards, etc\n            via integration with ":"：\r\n            该设备支持用户凭据，地址，信用卡等的自动填充\r\n            通过与\r\n","Throws FileNotFoundException of no\n file exists under the URI or the mode is invalid.\n":"抛出否\r\n 文件存在于URI或模式下的文件无效。\r\n\r\n","BluetoothGatt#setPreferredPhy":"Bluetoothgatt＃SetPreferredphy\r\n","android.graphics.NinePatch.getDensity()":"android.graphics.ninepatch.getDensity（）\r\n","Get a list of features that are available on the\n            system.":"获取一系列功能列表\r\n            系统。\r\n","android.companion.CompanionDeviceManager.hasNotificationAccess(android.content.ComponentName)":"android.companion.companiondevicemanager.hasnotificationAccess（android.content.componentname）\r\n","Draws the given RenderNode.":"绘制给定的Rendernode。\r\n","android.graphics.Color.green(int)":"android.graphics.color.green（int）\r\n","android.content.pm.LabeledIntent.getNonLocalizedLabel()":"android.content.pm.labeledintent.getnonlocalizedlabel（）\r\n","Is the given data path included in the filter?  Note that if the\n            filter does not include any paths, false will <em>always</em> be\n            returned.":"过滤器中是否包含给定的数据路径？请注意，如果\r\n            过滤器不包括任何路径\r\n            回来。\r\n","Copy the bitmap's pixels into the specified buffer (allocated by the\n            caller).":"将位图的像素复制到指定的缓冲区（由\r\n            呼叫者）。\r\n","Icon#createWithBitmap(Bitmap)":"图标＃createWithBitMap（位图）\r\n","if this feature has been required by the application.":"如果应用程序需要此功能。\r\n","Remove the association between this app and the device with the given mac address.":"删除此应用程序与设备之间使用给定MAC地址的关联。\r\n","android.content.Context.DEVICE_POLICY_SERVICE":"android.content.context.device_policy_service\r\n","android.database.DatabaseUtils.cursorIntToContentValuesIfPresent(android.database.Cursor, android.content.ContentValues, java.lang.String)":"android.database.databaseutils.cursorinttocontentvaluesifpresent（android.database.cursor，android.content.content.contentvalues，java.lang.lang.string））\r\n","Create an intent from a URI.":"从URI创建意图。\r\n",": This is a device dedicated to be primarily used\n            with keyboard, mouse or touchpad.":"：这是专门用于主要使用的设备\r\n            使用键盘，鼠标或触摸板。\r\n","Counter for tracking how many inserts were performed by the sync operation, as defined\n            by the SyncAdapter.":"按照定义的同步操作跟踪执行了多少个插入物的计数器\r\n            由SyncAdapter。\r\n","Whether the transmission power level will be included in the advertisement packet.":"广告包中是否包含传输功率水平。\r\n","ShortcutManager":"捷径人\r\n","android.content.pm.ShortcutInfo":"android.content.pm.shortcutinfo\r\n","android.bluetooth.BluetoothSocket.getMaxReceivePacketSize()":"android.bluetooth.bluetoothsocket.getMaxReceivePacketsize（）\r\n","android.content.res.Resources.getSystem()":"android.content.res.resources.getSystem（）\r\n","android.graphics.Path.isEmpty()":"android.graphics.path.isempty（）\r\n","Determine whether a particular process and user ID has been granted\n            permission to access a specific URI.":"确定是否授予特定过程和用户​​ID\r\n            访问特定URI的许可。\r\n","android.database.sqlite.SQLiteDatabase.CONFLICT_ROLLBACK":"android.database.sqlite.sqlitedatabase.conflict_rollback\r\n","F:Android.Content.Intent.ParseUri":"F：android.content.intent.parseuri\r\n","android.graphics.PorterDuffXfermode":"android.graphics.porterduffxfermode\r\n","Paths to all shared libraries this application is linked against.":"通往所有共享库的路径此应用程序链接在一起。\r\n","android.graphics.drawable.ShapeDrawable.onDraw(android.graphics.drawable.shapes.Shape, android.graphics.Canvas, android.graphics.Paint)":"android.graphics.drawable.shapedrawable.ondraw（android.graphics.drawable.shapes.shapes.shape，android.graphics.canvas，android.graphics.paint）\r\n","This field is ignored by the SyncManager.":"Syncmanager忽略了此字段。\r\n","android.database.sqlite.SQLiteDatabase.query(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String)":"android.database.sqlite.sqlitedatabase.query（java.lang.string，java.lang.string []，java.lang.string，java.lang.string，java.lang.string []，java.lang.lang.string，Java.lang.lang.string，Java.lang.string，， java.lang.string）\r\n","Return the green component of a color int.":"返回颜色int的绿色组件。\r\n","android.content.Intent.EXTRA_ALLOW_MULTIPLE":"android.content.intent.extra_allow_multiple\r\n",": The device's camera supports flash.":"：设备的摄像头支持闪光灯。\r\n","that indicates that the activity\n can itself handle changes to the keyboard type. ":"这表明活动\r\n 您可以处理键盘类型的更改。\r\n","The facing of the camera is the same as that of the screen.":"相机的面与屏幕的面相同。\r\n","Destroys all the display lists associated with the current rendering content.":"破坏与当前渲染内容关联的所有显示列表。\r\n","PackageManager#extendVerificationTimeout":"PackageManager#extendVerificationTimeout\r\n","Postconcats the matrix with the specified rotation.":"用指定旋转后的矩阵将矩阵结合。\r\n","android.media.midi.MidiManager":"android.media.midi.Midimanager\r\n","android.content.ContentResolver.SYNC_EXTRAS_MANUAL":"android.content.contentresolver.sync_extras_manual\r\n","A font class can be used for creating FontFamily.":"字体类可用于创建fontfamily。\r\n","android.content.ContentResolver.SYNC_EXTRAS_ACCOUNT":"android.content.contentresolver.sync_extras_account\r\n","android.drm.DrmManagerClient.getMetadata(android.net.Uri)":"android.drm.drmmanagerclient.getMetadata（android.net.uri）\r\n","Retrieve the icon associated with this object.":"检索与此对象关联的图标。\r\n","Sets whether or not to allow force dark to apply to this RenderNode.":"设置是否允许force dark应用于此RenderNode。\r\n","android.content.pm.PackageInstaller.EXTRA_SESSION_ID":"android.content.pm.packageinstaller.extra_session_id\r\n","Defines a simple shape, used for bounding graphical regions.":"定义一个简单的形状，用于边界图形区域。\r\n","Called when the DRM framework sends error information.":"当DRM框架发送错误信息时调用。\r\n","android.database.sqlite.SQLiteDatabase.beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener)":"android.database.sqlite.sqlitedatabase.begintransactionWithListenernOneXclusive（android.database.sqlite.sqlitetransactionListener）\r\n","Get connected devices for this specific profile.":"获取此特定配置文件的连接设备。\r\n","Base class containing information common to all application components\n            (":"基类包含所有应用程序组件共有的信息\r\n            （（\r\n"," has an alpha\n            value of 255.":" 有一个alpha\r\n            价值255。\r\n"," for more information about tasks.\n":" 有关任务的更多信息。\r\n\r\n","Construct FontVariationAxis array from font variation settings.":"从字体变化设置构造fontvariateAxis阵列。\r\n","android.content.pm.PackageManager.canRequestPackageInstalls()":"android.content.pm.packagemanager.canrequestpackageinstalls（）\r\n","android.content.Intent.CATEGORY_SAMPLE_CODE":"android.content.intent.category_sample_code\r\n","Intent extra: ID of the shortcut used to send the share intent.":"意图额外：用于发送股票意图的快捷方式的ID。\r\n","android.graphics.Canvas.drawText(java.lang.CharSequence, int, int, float, float, android.graphics.Paint)":"android.graphics.canvas.drawText（java.lang.Charsequence，int，int，float，float，float，android.graphics.paint）\r\n","android.graphics.Path.addPath(android.graphics.Path)":"android.graphics.path.addpath（android.graphics.path）\r\n","#decodeDrawable":"#decodedrawable\r\n","android.content.pm.ResolveInfo.isInstantAppAvailable":"android.content.pm.resolveinfo.isinstantappabavailable\r\n","Return a new matrix with a copy of the canvas' current transformation\n            matrix. -or- Completely replace the current matrix with the specified matrix.":"返回带有画布当前转换的副本的新矩阵\r\n            矩阵。 - 或 - 用指定的矩阵完全替换当前矩阵。\r\n","Defines actions that can be performed on rights-protected content.":"定义可以对受权保护的内容执行的操作。\r\n","android.database.sqlite.SQLiteDatabase.getPath()":"android.database.sqlite.sqlitedatabase.getPath（）\r\n","android.content.ContentProviderOperation.getUri()":"android.content.contentProvideroperation.geturi（）\r\n","System service to access domain verification APIs.":"访问域验证API的系统服务。\r\n","Creates a new Camera object to access a particular hardware camera.":"创建一个新的相机对象来访问特定的硬件相机。\r\n","android.content.Intent.ACTION_SYNC":"android.content.intent.action_sync\r\n","android.graphics.PointF.PointF(android.graphics.PointF)":"android.graphics.pointf.pointf（android.graphics.pointf）\r\n","ApplicationInfo#RAW_EXTERNAL_STORAGE_ACCESS_DEFAULT":"applicationinfo＃raw_external_storage_access_default\r\n","android.content.Loader.isReset()":"android.content.loader.isreset（）\r\n","A camera instance can be used to compute 3D transformations and\n            generate a matrix that can be applied, for instance, on a\n            ":"相机实例可用于计算3D变换和\r\n            生成一个可以应用于一个可以应用于的矩阵\r\n            \r\n","Returns true if the new version code is greater than the current database version.":"如果新版本代码大于当前数据库版本，则返回true。\r\n","android.content.pm.FeatureGroupInfo":"android.content.pm.featuregroupinfo\r\n","This is an out-of-band way for the the user of a cursor to communicate with the cursor.":"这是光标用户与光标通信的带外方式。\r\n","Converts the specified 3 component color from the source color space to the\n            destination color space.":"将指定的3个组件颜色从源颜色空间转换为\r\n            目的地颜色空间。\r\n","#SWEEP_GRADIENT":"#sweep_gradient\r\n","Returns whether the caller can access the shortcut information.":"返回呼叫者是否可以访问快捷方式信息。\r\n","android.content.Intent.ACTION_TIME_CHANGED":"android.content.intent.action_time_changed\r\n","android.content.Intent.getLongExtra(java.lang.String, long)":"android.content.intent.getlongextra（java.lang.string，长）\r\n","Reset native resources.":"重置本地资源。\r\n","android.graphics.drawable.GradientDrawable.setOrientation(android.graphics.drawable.Orientation)":"android.graphics.drawable.gradientdrawable.setorientation（android.graphics.drawable.orientation）\r\n","Print the Loader's state into the given stream.":"将加载程序的状态打印到给定的流中。\r\n","Saturate(S + D) ":"饱和（S + D）\r\n","android.content.ClipDescription.getLabel()":"android.content.clipdescription.getLabel（）\r\n","Returns the alpha component encoded in the specified color long.":"Returns the alpha component encoded in the specified color long.\r\n","android.content.pm.ProviderInfo.uriPermissionPatterns":"android.content.pm.providerinfo.uripermessionpatterns\r\n","android.content.ContentProviderClient.openAssetFile(android.net.Uri, java.lang.String, android.os.CancellationSignal)":"android.content.contentproviderclient.openassetfile（android.net.uri，java.lang.string，android.os.os.cancellationsignal）\r\n","android.bluetooth.le.BluetoothLeScanner.startScan(java.util.List, android.bluetooth.le.ScanSettings, android.bluetooth.le.ScanCallback)":"android.bluetooth.le.bluetoothlethlescanner.startscan（java.util.list，android.bluetooth.le.le.scansettings，android.bluetooth.le.scancallback）\r\n","Create drawable from a bitmap, setting initial target density based on\n            the display metrics of the resources.":"创建可从位图绘制的，基于\r\n            资源的显示指标。\r\n","A rights information object type.":"权利信息对象类型。\r\n","android.content.Intent.putExtra(java.lang.String, byte)":"android.content.intent.putextra（java.lang.string，byte）\r\n","android.graphics.pdf.PdfDocument.startPage(android.graphics.pdf.PageInfo)":"android.graphics.pdf.pdfdocument.startpage（android.graphics.pdf.pageinfo）\r\n","android.content.res.ColorStateList.createFromXml(android.content.res.Resources, org.xmlpull.v1.XmlPullParser)":"android.content.Res.ColorStateList.CreateFromxMl（android.content.Res.Res.resources，org.xmlpull.v1.xmlpullparser）\r\n","The intervals array must contain an even number of entries (>=2), with\n            the even indices specifying the \"on\" intervals, and the odd indices\n            specifying the \"off\" intervals.":"间隔数组必须包含偶数条目（> = 2），并带有\r\n            指定“ on”间隔的均匀索引和奇数索引\r\n            指定“关闭”间隔。\r\n","Test whether this filter matches the given intent data.":"测试此过滤器是否匹配给定的意图数据。\r\n"," to provide\n            a front-door to the user without having to be shown in the all apps list.":" 提供\r\n            不必在所有应用程序列表中显示的用户的前门。\r\n",", but with an implicit promise that the\n            Service will call ":"，但有一个隐含的承诺，即\r\n            服务将致电\r\n","Android.Content.Intent.FLAG_GRANT_PREFIX_URI_PERMISSION":"android.content.intent.flag_grant_prefix_uri_permission\r\n","Returns the permissions for this descriptor.":"返回此描述符的权限。\r\n","#resize(float,float)":"#Resize（浮动，浮点）\r\n"," for accessing input\n            methods.":" 用于访问输入\r\n            方法。\r\n","Reads a Long out of a field in a Cursor and writes it to a Map.":"在光标中读取长时间的字段，并将其写入地图。\r\n","android.database.DatabaseUtils.getSqlStatementType(java.lang.String)":"android.database.databaseutils.getsqlstatementtype（java.lang.string）\r\n","Returns whether the application has requested automatic zero-initialization of native heap\n            memory allocations to be enabled or disabled.":"返回该应用程序是否已请求本机堆的自动零限制\r\n            内存分配将启用或禁用。\r\n","android.graphics.drawable.RotateDrawable":"android.graphics.drawable.RotatedRawable\r\n","android.content.ContentValues.putAll(android.content.ContentValues)":"android.content.contentvalues.putall（android.content.ContentValues）\r\n","android.content.pm.PackageItemInfo.loadBanner(android.content.pm.PackageManager)":"android.content.pm.packageiteminfo.loadbanner（android.content.pm.packagemanager）\r\n","Intent#ACTION_SEND":"意图＃action_send\r\n","Use this function to retrieve the number of bits per pixel of an\n            ImageFormat.":"使用此功能检索每个像素的位数\r\n            图像格式。\r\n","android.content.Intent.ACTION_LOCKED_BOOT_COMPLETED":"android.content.intent.action_locked_boot_completed\r\n","Returns the height of the Shape.":"返回形状的高度。\r\n","android.bluetooth.BluetoothStatusCodes.ERROR_DEVICE_NOT_BONDED":"android.bluetooth.bluetoothstatuscodes.error_device_not_bonded\r\n","The smallest screen size an application will see in normal operation,\n            corresponding to\n            <a href=\"[TODO: @docRoot]guide/topics/resources/providing-resources.":"应用程序将在正常操作中看到的最小屏幕尺寸，\r\n            对应于\r\n            <a href =“ [todo：@docroot]指南/主题/资源/提供资源。\r\n","android.graphics.Paint.isFakeBoldText()":"android.graphics.paint.isfakeboldtext（）\r\n",", but\n            at least streamable via\n            ":"， 但\r\n            至少通过\r\n            \r\n","Playback started.":"播放开始。\r\n","Sets whether the animation should play once or repeat.":"设置动画应播放一次还是重复一次。\r\n","Activity Action: Run the data, whatever that means.":"活动动作：运行数据，无论意味着什么。\r\n","Flags associated with the application.":"与应用程序关联的标志。\r\n","android.graphics.Matrix.mapRect(android.graphics.RectF)":"android.graphics.matrix.maprect（android.graphics.Rectf）\r\n","android.graphics.text.LineBreaker.JUSTIFICATION_MODE_INTER_WORD":"android.graphics.text.line breaker.justification_mode_inter_word\r\n","Returns the bitmap's width -or- Convenience method for calling ":"返回拨打位图的宽度 - 或便利方法\r\n","Sets the bounds to which the hotspot is constrained, if they should be\n            different from the drawable bounds.":"设置热点被限制的边界，如果应该是\r\n            与可绘制的界限不同。\r\n","android.graphics.Matrix.Matrix()":"android.graphics.matrix.matrix（）\r\n","android.graphics.Path.approximate(float)":"android.graphics.path.Approximate（float）\r\n","android.database.SQLException":"机器人。数据库。SQLException,SQLException\r\n","android.database.Observable.unregisterAll()":"机器人。数据库。可观察到的。取消注册()\r\n","A String extra field in ":"字符串额外的字段\r\n","#TYPE_SCO":"#type_sco\r\n","Check whether a particular package has been granted a particular\n            permission.":"检查是否已授予特定软件包\r\n            允许。\r\n","android.content.pm.PackageStats.externalObbSize":"android.content.pm.packagestats.externalobbsize\r\n","Characteristic value format type sint32":"特征值格式类型Sint32\r\n","Additional meta-data associated with this component.":"与此组件关联的附加元数据。\r\n","android.content.Intent.removeCategory(java.lang.String)":"android.content.intent.removecategory（java.lang.string）\r\n","android.content.Intent.ACTION_ATTACH_DATA":"android.content.intent.action_attach_data\r\n","android.bluetooth.BluetoothGattService.getCharacteristic(java.util.UUID)":"android.bluetooth.bluetoothgattservice.getCharacteristic（java.util.uuid）\r\n","android.content.res.TypedArray.getTextArray(int)":"android.content.res.typedarray.getTextarray（int）\r\n","android.database.MergeCursor":"机器人。数据库。合并者,合并者\r\n","android.content.Intent.CATEGORY_APP_CALCULATOR":"android.content.intent.category_app_calculator\r\n","Pins distance to 0 <= distance <= getLength(), and then computes the\n corresponding matrix.":"引脚距离到0 <=距离<= getLength（），然后计算\r\n 相应的矩阵。\r\n","Sets the rotation value for the display list around the Z axis.":"设置Z轴周围显示列表的旋转值。\r\n","android.content.Context.getAttributionSource()":"android.content.context.getAttributionsource（）\r\n","Controlls how the src rect should align into the dst rect for\n        setRectToRect().":"控制SRC RECT应该如何对齐DST rect\r\n        setRectTorect（）。\r\n","Return the maximum number of static and dynamic shortcuts that each launcher icon\n            can have at a time.":"返回每个发射器图标的最大静态和动态快捷方式\r\n            可以一次有。\r\n","\n            indicating advertising set is stopped.":"\r\n            表明广告集已停止。\r\n","#BIND_ALLOW_OOM_MANAGEMENT":"#bind_allow_oom_management\r\n","android.content.ContentResolver.getPersistedUriPermissions()":"android.content.contentresolver.getPersistEduripermissions（）\r\n","android.graphics.drawable.GradientDrawable.setColors(int[], float[])":"android.graphics.drawable.gradientdrawable.setColors（int []，float []）\r\n","android.content.Context.getExternalMediaDirs()":"android.content.context.getExternalMediadiadirs（）\r\n","Intermediate rendering step used to render drawing commands with a corresponding\n            visual effect.":"中间渲染步骤用于渲染带有相应的图形命令\r\n            视觉效果。\r\n","android.content.pm.InstrumentationInfo.splitNames":"android.content.pm.instrumentationinfo.splitnames\r\n","Returns the service this characteristic belongs to.":"返回该特征所属于的服务。\r\n","Indicates the repeat behavior of this drawable on the Y axis. -or- Sets the repeat behavior of this drawable on the Y axis.":"指示在Y轴上绘制的该绘制的重复行为。 - 或设置该绘制在Y轴上的重复行为。\r\n","android.content.pm.FeatureInfo.name":"android.content.pm.featureinfo.name\r\n","Executor":"执行人\r\n"," when restarting a Loader.":" 重新启动加载程序时。\r\n","android.content.Intent.ACTION_AUTO_REVOKE_PERMISSIONS":"android.content.intent.action_auto_revoke_permissions\r\n","Multi-plane Android RGBA format":"多平面Android RGBA格式\r\n","Decode an input stream into a bitmap.":"将输入流解码为位图。\r\n","android.content.res.Resources.getDimensionPixelOffset(int)":"Android.content.Res.Res.resources.getDimensionPixEloffset（int）\r\n","android.graphics.Paint.setColor(int)":"android.graphics.paint.setcolor（int）\r\n","android.content.Intent.ACTION_CARRIER_SETUP":"android.content.intent.action_carrier_setup\r\n","android.content.ContentResolver.SYNC_EXTRAS_DO_NOT_RETRY":"android.content.contentresolver.sync_extras_do_not_retry\r\n","android.content.ContentProviderClient.delete(android.net.Uri, java.lang.String, java.lang.String[])":"android.content.contentproviderclient.delete（android.net.uri，java.lang.string，java.lang.string []）\r\n","#putExtra(String, Parcelable[])":"#putextra（String，Parcelable []）\r\n","android.hardware.SensorEvent SensorEvent":"android.hardware.sensorevent sensorevent\r\n","android.graphics.YuvImage.getHeight()":"android.graphics.yuvimage.getheight（）\r\n","android.content.pm.ShortcutInfo.DISABLED_REASON_UNKNOWN":"android.content.pm.shortcutinfo.disabled_reason_unknown\r\n","android.content.Loader.getContext()":"android.content.loader.getContext（）\r\n","android.hardware.Camera.addCallbackBuffer(byte[])":"android.hardware.camera.addcallbackbuffer（byte []）\r\n","The user-visible SDK version (ex.":"用户可见的SDK版本（ex。\r\n","Retrieve the raw URI contained in this Item.":"检索本项目中包含的RAW URI。\r\n","\n          Whether or not the receiver can be instantiated by the system.\n        ":"\r\n          是否可以由系统实例化接收器。\r\n        \r\n","Removes the color filter for this drawable.":"删除此绘制的颜色过滤器。\r\n","android.graphics.Rect.offsetTo(int, int)":"机器人。图形。长offsetTo（int，int）\r\n","android.content.pm.PackageManager.FEATURE_OPENGLES_DEQP_LEVEL":"android.content.pm.packagemanager.feature_opengles_deqp_level\r\n","Create a new paint, initialized with the attributes in the specified\n            paint parameter.":"创建一个新的油漆，用指定的属性初始化\r\n            油漆参数。\r\n","Drawable#setTint(int)":"可绘制的＃settint（int）\r\n","android.graphics.HardwareRenderer.destroy()":"android.graphics.hardwarerenderer.destroy（）\r\n","android.content.res.Resources":"机器人。内容。资源\r\n","android.content.ContentValues":"android.content.ContentValues\r\n","android.bluetooth.BluetoothProfile.getDevicesMatchingConnectionStates(int[])":"android.bluetooth.bluetoothprofile.getDevicesMatchingConnectionStates（int []）\r\n","android.content.res.AssetFileDescriptor.getDeclaredLength()":"机器人。内容。res.AssetFileDescriptor。获得声明长度()\r\n","android.content.Loader.onAbandon()":"android.content.loader.onabandon（）\r\n","If an error occurs while writing.\n":"如果写作时发生错误。\r\n\r\n","PermissionInfo":"许可\r\n","#HORIZONTAL":"＃水平的\r\n","android.content.ServiceConnection.onServiceConnected(android.content.ComponentName, android.os.IBinder)":"android.content.serviceconnection.onerviceconnected（android.content.componentname，android.os.ibinder）\r\n","android.content.SyncRequest":"android.content.Syncrequest\r\n","OnDrawableLoadedListener#onDrawableLoaded listener":"OnDrawableLoadedListener＃on DrawbableLoaded侦听器\r\n","if the pixels array is too small\n         to receive the specified number of pixels.\n":"如果像素阵列太小\r\n         接收指定数量的像素。\r\n\r\n","android.bluetooth.BluetoothGattCharacteristic.PROPERTY_WRITE_NO_RESPONSE":"android.bluetooth.bluetoothgattcharacteristic.property_write_no_response\r\n","android.bluetooth.le.BluetoothLeScanner.startScan(android.bluetooth.le.ScanCallback)":"android.bluetooth.le.bluetoothlescanner.startscan（android.bluetooth.le.scancallback）\r\n","Sets the drawable for the layer at the specified index.":"在指定的索引处设置图层的绘制。\r\n","if the caller does not have the\n            PACKAGE_VERIFICATION_AGENT permission.\n":"如果呼叫者没有\r\n            package_verification_agent许可。\r\n\r\n","android.graphics.Region.getBounds()":"android.graphics.gregion.getBounds（）\r\n"," for interacting with the global\n            system state.":" 用于与全球互动\r\n            系统状态。\r\n","android.content.pm.PackageManager.FEATURE_SIP":"android.content.pm.packagemanager.feature_sip\r\n","Get the text's primary Locale. -or- Set the text locale list to a one-member list consisting of just the locale.":"获取文本的主要环境。 - 或 - 将文本语言环境列表设置为仅由该语言环境组成的一个成员列表。\r\n","columnValues.length !=\n  columnNames.length":"列值。长度！=\r\n  columnNames.长度\r\n","#AssetFileDescriptor(ParcelFileDescriptor, long, long)":"#AssetFileDescriptor（ParcelFileDescriptor，陇，陇）\r\n","Use the default allocation for the pixel memory.":"使用像素内存的默认分配。\r\n","android.graphics.drawable.AnimatedVectorDrawable.reset()":"android.graphics.drawable.animatedVectorDrawable.Reset（）\r\n","Retrieve the float value for the attribute at <var>index</var>.":"检索<var> index </var>的属性的浮点值。\r\n","android.graphics.Path.addRoundRect(float, float, float, float, float, float, android.graphics.Direction)":"android.graphics.path.AddRoundRect（浮点，浮点，浮点，浮点，浮点，浮点，float，android.graphics.direction）\r\n","android.content.pm.ShortcutManager.pushDynamicShortcut(android.content.pm.ShortcutInfo)":"android.content.pm.shortcutmanager.pushdynamicshortcut（android.content.pm.shortcutinfo）\r\n"," if text classification has been performed on the\n            associated ":" 如果在\r\n            联系\r\n","Broadcast Action: A GTalk connection has been established.":"广播动作：已经建立了GTALK连接。\r\n","Broadcast Action: Sent when the user is present after device wakes up (e.":"广播操作：当用户醒来后，在用户出现时发送（e。\r\n","android.graphics.Path.offset(float, float)":"android.graphics.path.offset（float，float）\r\n","android.graphics.CornerPathEffect.CornerPathEffect(float)":"android.graphics.cornerpatheffect.cornerpatheffect（float）\r\n","android.content.IntentFilter":"android.content.intentFilter\r\n","Create a new ClipData holding an Intent with MIME type\n            ":"创建一个新的Clipdata，用MIME类型持有意图\r\n            \r\n","A trigger information object type.":"触发信息对象类型。\r\n","android.content.Intent.hasExtra(java.lang.String)":"android.content.intent.hasextra（java.lang.string）\r\n","android.content.res.ColorStateList":"机器人。内容。颜色列表\r\n","Return a region set to the specified rectangle":"将设置的区域返回到指定的矩形\r\n","android.graphics.Canvas.getMaximumBitmapWidth()":"android.graphics.canvas.getMaximumBitMapWidth（）\r\n","android.content.ContentProvider.getCallingPackage()":"android.content.contentprovider.getCallingPackage（）\r\n","The package name that this data corresponds to.":"此数据对应的软件包名称。\r\n","android.content.SyncInfo":"android.content.Syncinfo\r\n","Get the paint's shader object.":"获取油漆的着色器对象。\r\n","android.content.pm.PackageManager.FEATURE_NFC_OFF_HOST_CARD_EMULATION_UICC":"android.content.pm.packagemanager.feature_nfc_off_host_card_emulation_uicc\r\n"," tags included under &lt;application&gt;,\n            or null if there were none.":" 标签包括＆gt;，\r\n            或零，如果没有。\r\n","Android.Content.Context.BIND_ABOVE_CLIENT":"android.content.context.bind_above_client\r\n","Allows a package listening to the\n            ":"允许包裹收听\r\n            \r\n","android.bluetooth.le.AdvertisingSet.setAdvertisingData(android.bluetooth.le.AdvertiseData)":"android.bluetooth.le.Advertisingset.setadvertisingdata（android.bluetooth.le.le.aptervertisedata）\r\n","Copies a byte array into the field at the specified row and column index.":"在指定的行和列索引处将字节数组复制到字段中。\r\n","The rights have been successfully downloaded and installed.":"权利已成功下载和安装。\r\n","android.database.Cursor.moveToFirst()":"android.database.cursor.movetofirst（）\r\n","Returns the maximum size the database may grow to.":"返回数据库可能会增长的最大尺寸。\r\n","android.database.CursorWindow.putDouble(double, int, int)":"android.database.cursorwindow.putdouble（double，int，int）\r\n","A drawable resource identifier (in the package's resources) of this\n            match's icon.":"可绘制的资源标识符（在包装资源中）\r\n            匹配的图标。\r\n","if uri or values are null\n":"如果URI或值为null\r\n\r\n","The result of a call to next().":"呼叫下一个（）的结果。\r\n","android.content.ComponentName.unflattenFromString(java.lang.String)":"android.content.componentname.unflattenfromstring（java.lang.string）\r\n","Array of flags of all ":"一系列的旗帜\r\n"," combined\n            together as a single long value. -or- Set the full version code in this PackageInfo, updating ":" 结合\r\n            一起作为一个长的价值。 - 或 - 在此软件包中设置完整版本代码，更新\r\n","android.content.pm.ShortcutManager.getShortcuts(int)":"android.content.pm.shortcutmanager.getShortCuts（int）\r\n","Dash the drawn path by stamping it with the specified shape.":"通过用指定的形状踩踏绘制路径。\r\n","\n            intents to indicate that this is a replacement of the package, so this\n            broadcast will immediately be followed by an add broadcast for a\n            different version of the same package.":"\r\n            意图表明这是包装的替代品，所以\r\n            广播将立即进行添加广播\r\n            同一软件包的不同版本。\r\n","Returns the local name of the BLE device.":"返回BLE设备的本地名称。\r\n","Store the newly updated configuration.":"存储新更新的配置。\r\n","The name of the process this application should run in.":"该应用程序应运行的过程名称。\r\n","Can be used as the ":"可用作 \r\n","Reset the Interpolator to have the specified number of values and an\n            implicit keyFrame count of 2 (just a start and end).":"重置插装器以具有指定的值数量和\r\n            隐式密钥帧计数为2（只是一个开始和结束）。\r\n","android.content.BroadcastReceiver.peekService(android.content.Context, android.content.Intent)":"android.content.broadcastreceiver.peekservice（android.content.context，android.content.intent）\r\n",", in addition to\n            displaying them on the screen.":"， 此外\r\n            在屏幕上显示它们。\r\n","Activity Action: For the default launcher to show the confirmation dialog to create\n            a pinned shortcut.":"活动操作：默认启动器显示“确认对话框”以创建\r\n            固定的快捷方式。\r\n","Unregisters a callback that was previously registered.":"撤销以前已注册的回调。\r\n","If you are handling an IPC and you don't trust the caller you need to validate\n            whether the attribution source is one for the calling app to prevent the caller\n            to pass you a source from another app without including themselves in the\n            attribution chain.":"如果您正在处理IPC，并且不信任您需要验证的呼叫者\r\n            归因源是否是通话应用程序的一种，以防止呼叫者\r\n            向您传递另一个应用程序的源，而无需将自己包括在内\r\n            归因链。\r\n","android.graphics.DrawFilter":"Android.graphics.DrawFilter\r\n","android.content.res.Resources.getBoolean(int)":"android.content.Res.Resources.getBoolean（int）\r\n","Get the raw value associated with a resource with associated density.":"获取与相关密度的资源相关联的原始值。\r\n","android.content.AbstractThreadedSyncAdapter.onSyncCanceled(java.lang.Thread)":"android.content.abstractthreadedsyncadapter.onsynccanceled（java.lang.thread）\r\n","Return the number of items in the clip data.":"返回剪辑数据中的项目数。\r\n","android.content.pm.PackageManager.isPackageSuspended()":"android.content.pm.packagemanager.ispackagesuspended（）\r\n","android.graphics.fonts.FontVariationAxis.fromFontVariationSettings(java.lang.String)":"android.graphics.fonts.fontvariationaxis.fromfontvariationsettings（java.lang.string）\r\n","Return the generic icon for an activity that is used when no specific\n icon is defined.":"返回无特定活动时使用的活动的通用图标\r\n 图标已定义。\r\n","T:Android.Graphics.Drawables.Drawable+ICallback":"t：android.graphics.drawables.drawable+icallback\r\n","Returns the FileDescriptor that can be used to read the data in the\n            file.":"返回可用于读取\r\n            档案。\r\n","\n            with the current height and width.":"\r\n            具有当前的高度和宽度。\r\n","This is the unique key for the restriction entry.":"这是限制条目的唯一键。\r\n","android.graphics.drawable.DrawableContainer.setEnterFadeDuration(int)":"机器人。图形。可画的。DrawableContainer。setEnterFadeDuration（int）\r\n","android.content.res.Resources.getDrawableForDensity(int, int)":"android.content.Res.Resources.getDrawableFordente（int，int）\r\n","android.content.res.Configuration.Configuration()":"android.content.res.configuration.configuration（）\r\n","android.content.ContentResolver.QUERY_ARG_SQL_SELECTION_ARGS":"android.content.contentresolver.query_arg_sql_selection_args\r\n","android.graphics.drawable.GradientDrawable.setSize(int, int)":"android.graphics.drawable.gradientdrawable.setsize（int，int）\r\n","The revision number of any split APKs for this package, as specified by\n            the &lt;manifest&gt; tag's\n            ":"此软件包的任何分端APK的修订号，如\r\n            ＆lt; subtest＆gt;标签\r\n            \r\n","This method begins an asynchronous insert.":"该方法开始异步插入。\r\n","android.content.Intent#ACTION_PACKAGES_UNSUSPENDED":"android.content.intent＃action_packages_unsuspended\r\n","Set whether this account/provider is syncable.":"设置此帐户/提供商是否同步。\r\n","android.bluetooth.BluetoothHeadset":"android.bluetooth.bluetoothhathets\r\n","#NOTIFY_SKIP_NOTIFY_FOR_DESCENDANTS":"#notify_skip_notify_for_descendants\r\n","android.graphics.drawable.RippleDrawable.getEffectColor()":"android.graphics.drawable.rippledrawable.geteffectcolor（）\r\n","Constant representing remote control subclass.":"常数表示遥控子类。\r\n","android.hardware.BatteryState.STATUS_CHARGING":"android.hardware.batterystate.status_charging\r\n","android.graphics.text.PositionedGlyphs.glyphCount()":"android.graphics.text.positionedglyphs.glyphcount（）\r\n","android.graphics.Color.valueOf(int)":"android.graphics.color.valueof（int）\r\n","Called on a worker thread to perform the actual load and to return\n the result of the load operation.":"打电话给工人线程执行实际负载并返回\r\n 负载操作的结果。\r\n","The filter didn't match due to different data URIs.":"由于不同的数据URI，该过滤器不匹配。\r\n","Removes all the rights information of every DRM plug-in (agent) associated with\n            the DRM framework.":"删除与关联的每个DRM插件（代理）的所有权利信息\r\n            DRM框架。\r\n","Returns the intent that is executed when the user selects this shortcut.":"返回用户选择此快捷方式时执行的意图。\r\n"," for retrieving\n            ":" 检索\r\n            \r\n","android.bluetooth.BluetoothGattCharacteristic.WRITE_TYPE_NO_RESPONSE":"android.bluetooth.bluetoothgattcharacteristic.write_type_no_response\r\n","The rights object is being delivered to the device. ":"权利对象正在传递到设备。\r\n","Returns the red component encoded in the specified color long.":"返回指定颜色长的红色组件。\r\n","Create a new Resources object on top of an existing set of assets in an\n            AssetManager.":"在一组现有的资源之上创建一个新的资源对象\r\n            资产管理者。\r\n","Preconcats the matrix with the specified scale.":"用指定的比例将矩阵预联合。\r\n","android.content.AsyncTaskLoader.cancelLoadInBackground()":"android.content.asynctaskloader.cancelloadinbackground（）\r\n","Binds the given Object to the given SQLiteProgram using the proper\n            typing.":"使用适当的\r\n            打字。\r\n","Sends error handshake message as reply for invalid SET_REPORT request from ":"发送错误握手消息作为无效set_report请求的回复\r\n","android.graphics.NinePatch.getHeight()":"android.graphics.ninepatch.getheight（）\r\n","android.content.Intent.ACTION_EDIT":"android.content.intent.action_edit\r\n","LIMIT":"限制\r\n","android.graphics.drawable.RippleDrawable":"android.graphics.drawable.rippledrawable\r\n","DrmStore.ConstraintsColumns":"drmstore.constraintscolumns\r\n","Returns true if an extra value is associated with the given name.":"如果与给定名称相关联，则返回true。\r\n","android.content.ContentProvider.clearCallingIdentity()":"android.content.ContentProvider.ClearCallingIdentity（）\r\n","Check whether the given feature name and version is one of the available\n            features as returned by ":"检查给定的功能名称和版本是否是可用的\r\n            返回的功能\r\n","Set or clear the shader object.":"设置或清除着色器对象。\r\n","android.graphics.Typeface.getWeight()":"android.graphics.typeface.getWeight（）\r\n","Get information about the SyncAdapters that are known to the system.":"获取有关系统已知的SyncAdapter的信息。\r\n","android.bluetooth.BluetoothGattServerCallback.onServiceAdded(int, android.bluetooth.BluetoothGattService)":"android.bluetooth.bluetoothgattservercallback.onerviceadded（int，android.bluetooth.bluetoothgattservice）\r\n","Assign a new path, or null to have none.":"分配新的路径或无效。\r\n","android.bluetooth.BluetoothHidDevice.getConnectionState(android.bluetooth.BluetoothDevice)":"android.bluetooth.bluetoothhiddevice.getConnectionState（android.bluetooth.bluetoothdevice）\r\n","that indicates that the activity\n can itself handle density changes. ":"这表明活动\r\n 自身可以处理密度变化。\r\n","Indicates the local Bluetooth adapter is turning off. ":"指示本地蓝牙适配器正在关闭。\r\n","Removes all values.":"删除所有值。\r\n","Trust any Installer to provide checksums for the package.":"信任任何安装程序，以提供包裹的校验和。\r\n","android.content.pm.PackageInstaller":"android.content.pm.packageinstaller\r\n","Construct an invalid Configuration.":"构建无效的配置。\r\n","android.bluetooth.BluetoothHealth.unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)":"android.bluetooth.bluetoothhealth.unregisterappconfiguration（android.bluetooth.bluetoothhealthhealthappconfiguration）\r\n","An integer representing the starting of the line has normal hyphen character (U+002D).":"代表线路启动的整数具有正常的连丝字符（u+002D）。\r\n","Gets the supported antibanding values.":"获取受支持的抗体值。\r\n","Returns true if the operation represents a ":"如果操作代表一个\r\n"," subclass.":" 子类。\r\n","WindowManager":"WindowManager\r\n","android.graphics.drawable.LayerDrawable.INSET_UNDEFINED":"android.graphics.drawable.layerdrawable.inset_undefined\r\n","android.content.ActivityNotFoundException":"android.content.ActivityNotFoundException\r\n","The shared user ID name of this package, as specified by the &lt;manifest&gt;\n            tag's ":"该软件包的共享用户ID名称，如＆lt; subtest＆gt;\r\n            标签\r\n","android.os.Environment#DIRECTORY_PODCASTS":"android.os.environment＃Directory_podcasts\r\n","Sends report to remote host as reply for GET_REPORT request from ":"将报告发送给远程主机作为回复get_report请求\r\n","android.graphics.drawable.RippleDrawable.RADIUS_AUTO":"android.graphics.drawable.rippledrawable.radius_auto\r\n","android.graphics.Paint.setEndHyphenEdit(int)":"android.graphics.paint.setendhyphenedit（int）\r\n","Gets the global auto-sync setting that applies to all the providers and accounts. -or- Sets the global auto-sync setting that applies to all the providers and accounts.":"获取适用于所有提供商和帐户的全局自动合成设置。 - 或设置适用于所有提供商和帐户的全局自动同步设置。\r\n","android.database.DatabaseUtils.sqlEscapeString(java.lang.String)":"android.database.databaseutils.sqlescapestring（java.lang.string）\r\n","android.content.pm.PackageManager.FEATURE_CAMERA_EXTERNAL":"android.content.pm.packagemanager.feature_camera_external\r\n",": true when the application knows how to adjust\n its UI for different screen sizes. ":"：thum当应用程序知道如何调整时\r\n 它的UI用于不同的屏幕尺寸。\r\n","android.hardware.SensorListener":"android.hardware.sensorlistener\r\n","android.graphics.Canvas.drawRGB(int, int, int)":"android.graphics.canvas.drawRGB（int，int，int）\r\n","android.content.Intent.EXTRA_INTENT":"android.content.intent.extra_intent\r\n","android.gesture.GestureStroke.computeOrientedBoundingBox()":"android.gesture.gestroke.com puteorendedboundingbox（）\r\n","android.drm.DrmSupportInfo.setDescription(java.lang.String)":"android.drm.drmsupportinfo.setdescription（java.lang.string）\r\n","#setRect(int, int, int, int)":"#setRect（int，int，int，int）\r\n","Return the paint's flags. -or- Set the paint's flags.":"返回油漆的旗帜。 - 或 - 设置油漆的旗帜。\r\n","android.bluetooth.le.ScanSettings":"android.bluetooth.le.Scansettings\r\n","android.graphics.drawable.Drawable.getIntrinsicHeight()":"android.graphics.drawable.drawable.getintrinsicheight（）\r\n","android.bluetooth.BluetoothHidDevice.REPORT_TYPE_OUTPUT":"android.bluetooth.bluetoothhiddevice.report_type_output\r\n","android.content.Intent.putExtra(java.lang.String, android.os.Parcelable[])":"android.content.intent.putextra（java.lang.string，android.os.os.parcelable []）\r\n","Gets the database version. -or- Sets the database version.":"获取数据库版本。 - 或设置数据库版本。\r\n","SQLiteQuery":"sqlitequery\r\n","Returns the number of indices in the array that actually have data.":"返回数组中实际具有数据的索引数。\r\n","android.gesture.GesturePoint":"android.gesture.gesturepoint\r\n","Gets the supported picture formats.":"获取支持的图片格式。\r\n","android.hardware.Sensor.getFifoMaxEventCount()":"android.hardware.sensor.getfifomaxeventcount（）\r\n","The rights-protected content can be played.":"可以播放受权保护的内容。\r\n","This class represents rules around how a context being created via\n            ":"该类代表围绕如何通过\r\n            \r\n","android.hardware.Sensor.isAdditionalInfoSupported()":"android.hardware.sensor.isadditionalinfosupported（）\r\n","Registers application to be used for HID device.":"寄存器应用程序用于HID设备。\r\n","android.graphics.RenderNode.setTranslationY(float)":"android.graphics.rendernode.settranslationy（float）\r\n","Returns the top padding in pixels.":"返回像素的顶部填充。\r\n","android.content.DialogInterface.dismiss()":"android.content.dialoginterface.dismiss（）（）\r\n","Draw in its bounds (set via setBounds) respecting optional effects such\n as alpha (set via setAlpha) and color filter (set via setColorFilter).":"绘制其界限（通过setbounds集）尊重可选效果\r\n 作为alpha（通过setalpha设置）和颜色过滤器（通过setColorFilter设置）。\r\n","Returns the color state list used to fill the shape, or ":"返回用于填充形状的颜色状态列表，或者 \r\n","Translate the region by [dx, dy].":"通过[DX，DY]翻译区域。\r\n","Enable or disable the default shutter sound when taking a picture.":"拍照时启用或禁用默认的快门声音。\r\n","if the attribute is defined but is\n         not a fraction.\n":"如果定义了属性，但是\r\n         不是分数。\r\n\r\n","android.content.pm.PackageItemInfo.banner":"android.content.pm.packageiteminfo.banner\r\n","Is the given data scheme included in the filter?  Note that if the\n            filter does not include any scheme, false will <em>always</em> be\n            returned.":"过滤器中是否包含给定的数据方案？请注意，如果\r\n            过滤器不包括任何方案\r\n            回来。\r\n",") against\n            which to group results.":"） 反对\r\n            要分组结果。\r\n","android.graphics.drawable.StateListDrawable.getStateSet(int)":"android.graphics.drawable.statelistdrawable.getstateset（int）\r\n","if the OBB file couldn't be found":"如果找不到OBB文件\r\n","android.content.Intent.EXTRA_CONTENT_ANNOTATIONS":"android.content.intent.extra_content_annotations\r\n","Returns the value of the requested column as a String.":"以字符串形式返回请求列的值。\r\n","android.database.CursorWrapper.CursorWrapper(android.database.Cursor)":"android.database.cursorwrapper.cursorwrapper（android.database.cursor）\r\n","Creates a new inset drawable with the specified insets in fraction of the view bounds.":"在视图边界的一小部分中，可以使用指定插图来创建一个新的插图。\r\n","android.content.res.AssetFileDescriptor.getLength()":"机器人。内容。res.AssetFileDescriptor。得到长度()\r\n","android.content.pm.PermissionInfo.nonLocalizedDescription":"android.content.pm.permissioninfo.no​​nlocalizedDescription\r\n","attribute.":"属性。\r\n","Retrieve the logo associated with an Intent.":"检索与意图关联的徽标。\r\n","Gets the value of the field at the specified row and column index as a byte array.":"获取指定行和列索引的字段值作为字节数组。\r\n","android.content.ContentProviderClient.bulkInsert(android.net.Uri, android.content.ContentValues[])":"android.content.contentproviderclient.bulkinsert（android.net.uri，android.content.contentvalues []）\r\n","android.content.pm.ApplicationInfo.processName":"android.content.pm.applicationinfo.processname\r\n","android.graphics.Outline.setEmpty()":"android.graphics.outline.setEmpty（）\r\n","android.content.res.Configuration.COLOR_MODE_UNDEFINED":"android.content.res.configuration.color_mode_undefined\r\n","android.graphics.drawable.shapes.Shape.draw(android.graphics.Canvas, android.graphics.Paint)":"android.graphics.drawable.shapes.shape.draw（android.graphics.canvas，android.graphics.paint）\r\n","\n            For example, AT+VGM?.":"\r\n            例如，在+vgm？\r\n","TypedArray#recycle() TypedArray.recycle()":"typedarray＃recycle（）typedarray.recycle（）\r\n","android.graphics.RenderEffect.createOffsetEffect(float, float, android.graphics.RenderEffect)":"android.graphics.rendereffect.createoffseteffect（float，float，android.graphics.rendereffect）\r\n","android.content.Intent.ACTION_UID_REMOVED":"android.content.intent.action_uid_remaved\r\n","android.content.OperationApplicationException":"android.content.operationApplicationException\r\n","android.content.Context.databaseList()":"android.content.context.databaselist（）\r\n","The registration has already been done by another account ID.":"注册已经由另一个帐户ID完成。\r\n","android.content.res.Configuration.UI_MODE_TYPE_TELEVISION":"机器人。内容。res.配置。UI_MODE_TYPE_TELEVISION\r\n","if the attribute is defined but is\n         not an integer.":"如果定义了属性，但是\r\n         不是整数。\r\n","Transforms geometries that are drawn (either STROKE or FILL styles) by\n            replacing any sharp angles between line segments into rounded angles of\n            the specified radius.":"通过通过绘制的几何形状（中风或填充样式）转换\r\n            将线段之间的任何锐角替换为圆角\r\n            指定的半径。\r\n","android.database.sqlite.SQLiteDatabase.CONFLICT_FAIL":"android.database.sqlite.sqlitedatabase.conflict_fail\r\n","android.content.Intent.ACTION_MAIN":"android.content.intent.action_main\r\n","Decodes a rectangle region in the image specified by rect.":"解码由RECT指定的图像中的矩形区域。\r\n",": true when the application's window can be\n reduced in size for smaller screens. ":"：true当应用程序的窗口可以\r\n 较小屏幕的大小降低。\r\n","android.content.Intent.filterEquals(android.content.Intent)":"android.content.intent.filterequals（android.content.intent）\r\n","GROUP BY":"通过...分组\r\n","\n            for the companyId":"\r\n            对于公司\r\n","Information about a camera\n":"有关相机的信息\r\n\r\n","Return the thickness of the ring -or- Configure the thickness of the ring.":"返回环 - 或 - 配置环的厚度。\r\n","android.content.Intent.ACTION_DREAMING_STARTED":"android.content.intent.action_dreaming_started\r\n","android.database.MatrixCursor.addRow(java.lang.Object[])":"机器人。数据库。MatrixCursor.addRow（java。朗。对象[])\r\n","android.content.AsyncTaskLoader.onCanceled(java.lang.Object)":"android.content.asynctaskloader.oncanceled（java.lang.object）\r\n","#getScaledHeight(int)":"#getScaledHeight（int）\r\n","android.content.Context.sendStickyBroadcast(android.content.Intent)":"android.content.Context.SendStickyBroadcast（android.content.intent）\r\n","android.graphics.Paint.CURSOR_AFTER":"android.graphics.paint.cursor_after\r\n","#getExternalCacheDir()":"#getExternalCachedir（）\r\n"," on each of them.":" 在每个人上。\r\n","A boolean value indicating whether to use the maximum padding value of \n all frames in the set (false), or to use the padding value of the frame \n being shown (true).":"一个布尔值，指示是否使用 \r\n 集合中的所有帧（false），或使用帧的填充值 \r\n 被显示（真）。\r\n","android.content.pm.ApplicationInfo.publicSourceDir":"android.content.pm.applicationinfo.publicsourcedir\r\n","android.content.res.Resources.getValueForDensity(int, int, android.util.TypedValue, boolean)":"android.content.Res.Resources.GetValueFordense（int，int，android.util.typedvalue，boolean）\r\n","android.graphics.drawable.Drawable.setTintList(android.content.res.ColorStateList)":"机器人。图形。可画的。可画的。setTintList（android。内容。res.ColorStateList)\r\n","Returns true if the bitmap's config supports per-pixel alpha, and\n            if the pixels may contain non-opaque alpha values. -or- Tell the bitmap if all of the pixels are known to be opaque (false)\n            or if some of the pixels may contain non-opaque alpha values (true).":"如果位图的配置支持每个像素alpha，则返回true，并且\r\n            如果像素可能包含非opaque alpha值。 - 或 - 告诉位图是否已知所有像素是不透明的（false）\r\n            或者，如果某些像素可能包含非opaque alpha值（true）。\r\n","android.drm.ProcessedData.getAccountId()":"android.drm.processeddata.getaccountid（）\r\n","Enables or disables the use of write-ahead logging for the database.":"启用或禁用数据库的写入记录。\r\n","android.content.BroadcastReceiver.setDebugUnregister(boolean)":"android.content.broadcastreceiver.setdebugunregister（布尔值）\r\n",": Attempt to load contents into\n memory, for fast small reads.":"：尝试将内容加载到\r\n 内存，用于快速小读取。\r\n","Broadcast Action: Sent after application restrictions are changed.":"广播操作：更改应用程序限制后发送。\r\n","Constant corresponding to <code>connectedDevice</code> in\n            the ":"常量对应于<code>connectedDevice</code>in\r\n            该 \r\n","android.content.pm.PackageManager.FEATURE_SIP_VOIP":"android.content.pm.packagemanager.feature_sip_voip\r\n","android.content.pm.PackageManager.FEATURE_USB_HOST":"android.content.pm.packagemanager.feature_usb_host\r\n",": if set, indicates that the application\n            requires a five way navigation device":"：如果设置，请指示应用程序\r\n            需要五路导航设备\r\n","Activity Action: Handle an incoming phone call.":"活动动作：处理传入的电话。\r\n","android.content.pm.ApplicationInfo.getCategoryTitle(android.content.Context, int)":"android.content.pm.applicationinfo.getCategoryTitle（android.content.context，int）\r\n","android.companion.CompanionDeviceManager":"android.companion.companiondevicemanager\r\n","android.graphics.LayerRasterizer.addLayer(android.graphics.Paint, float, float)":"android.graphics.layerrasterizer.addlayer（android.graphics.paint，float，float）\r\n","Create a color filter that uses the specified color and Porter-Duff mode.":"创建使用指定颜色和搬运工模式的颜色过滤器。\r\n","Information you can retrieve about a particular security permission\n            known to the system.":"您可以检索有关特定安全许可的信息\r\n            该系统已知。\r\n","android.content.pm.PackageManager.isPermissionRevokedByPolicy(java.lang.String, java.lang.String)":"android.content.pm.packagemanager.ispermissionrevokedbypolicy（java.lang.string，java.lang.string）\r\n","android.content.res.loader.ResourcesLoader.setProviders(java.util.List)":"android.content.res.res.loader.resourcesloader.setProviders（java.util.list）\r\n","android.content.res.Resources.getAttributeSetSourceResId(android.util.AttributeSet)":"android.content.Res.Res.resources.getAttributesEtSourCeresId（android.util.attributeset）\r\n"," for cross profile operations.":" 用于交叉概况操作。\r\n"," capability level.":" 能力水平。\r\n","Optional boolean extra indicating whether quiet mode has been switched on or off.":"可选的布尔值额外指示是否已打开还是关闭安静模式。\r\n","Sets a new cursor window for the cursor to use.":"设置一个新的光标窗口供光标使用。\r\n","Canvas#enableZ()":"画布#enableZ()\r\n","android.database.Cursor.copyStringToBuffer(int, android.database.CharArrayBuffer)":"android.database.cursor.copystringtobuffer（int，android.database.ChararrayBuffer）\r\n",", that are\n            currently registered with the system.":"，那是\r\n            目前已在系统中注册。\r\n","Reset the Interpolator to have the specified number of values and\n            keyFrames.":"重置插装器以具有指定的值数量和\r\n            关键帧。\r\n","Return the path's fill type.":"返回路径的填充类型。\r\n","Open the database according to the specified ":"根据指定的数据库打开数据库\r\n","android.graphics.drawable.shapes.RectShape":"android.graphics.drawable.shapes.RectShape\r\n","Bitmap#getDensity() Bitmap.getDensity()":"bitmap＃getDense（）bitmap.getDense（）\r\n","Checks whether the preferences contains a preference.":"检查偏好是否包含偏好。\r\n","A transparent overlay for gesture input that can be placed on top of other\n            widgets or contain other widgets.":"可以放置在其他顶部的手势输入的透明覆盖层\r\n            小部件或包含其他小部件。\r\n","Performs the query that created the cursor again, refreshing its \n            contents.":"再次执行创建游标的查询，刷新其 \r\n            内容。\r\n","android.content.ComponentName.flattenToString()":"android.content.componentname.flattentostring（）\r\n","android.bluetooth.le.BluetoothLeAdvertiser.startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters, android.bluetooth.le.AdvertiseData, android.bluetooth.le.AdvertiseData, android.bluetooth.le.PeriodicAdvertisingParameters, android.bluetooth.le.AdvertiseData, int, int, android.bluetooth.le.AdvertisingSetCallback, android.os.Handler)":"android.bluetooth.le.BluetoothLeAdvertiser.startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters, android.bluetooth.le.AdvertiseData, android.bluetooth.le.AdvertiseData, android.bluetooth.le.PeriodicAdvertisingParameters, android.bluetooth.le.AdvertiseData, int，int，android.bluetooth.le.AdvertisingsetCallback，android.os.handler）\r\n","Retrieve the Typeface for the attribute at <var>index</var>.":"在<var> index </var>上检索属性的字体。\r\n","Returns the primary Physical Layer\n            on which this advertisment was received.":"返回主要物理层\r\n            收到该广告的内容。\r\n","Storage path relevant to a status.":"与状态有关的存储路径。\r\n","android.content.PeriodicSync":"android.content.periodicsync\r\n"," or\n            one of its variants fails because an Activity can not be found to execute\n            the given Intent.":" 或者\r\n            它的一种变体失败了，因为找不到活动执行\r\n            给定的意图。\r\n","android.drm.DrmInfoEvent":"Android.drm.drminfoEvent\r\n","android.content.SearchRecentSuggestionsProvider.setupSuggestions(java.lang.String, int)":"android.content.SearchRecentsuggestionsProvider.setupsuggestions（java.lang.string，int）\r\n","Applies a rotation transform around the Z axis.":"应用围绕Z轴的旋转转换。\r\n","A flag indicating whether any 5-way or DPAD navigation available.":"指示是否可用任何5条或DPAD导航的标志。\r\n"," tags included under &lt;manifest&gt;,\n            or null if there were none.":" 标签包括在＆lt; subtest＆gt;中\r\n            或零，如果没有。\r\n","Returns true if this operation allows subsequent operations to continue\n            even if this operation throws an exception.":"如果此操作允许后续操作继续继续\r\n            即使此操作会引发异常。\r\n","android.content.Context.MEDIA_ROUTER_SERVICE":"android.content.context.media_router_service\r\n"," but instead of taking a entire Paint object\n            it takes only the ":" 但是，而不是采取整个油漆对象\r\n            它只需要 \r\n","android.content.Intent#ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE":"android.content.intent＃action_external_applications_unavailable\r\n","Return an iterator over the filter's data schemes.":"将迭代器返回过滤器的数据方案。\r\n","Gets the supported picture sizes.":"获取受支持的图片尺寸。\r\n","android.content.pm.ChangedPackages.getSequenceNumber()":"android.content.pm.changedpackages.getSequencenumber（）\r\n","android.content.pm.PackageInstaller.EXTRA_STATUS_MESSAGE":"android.content.pm.packageinstaller.extra_status_message\r\n","The MIME type for a clip holding HTML text.":"固定HTML文本的剪辑的MIME类型。\r\n","Return whether the screen has a round shape.":"返回屏幕是否具有圆形。\r\n","android.content.IntentFilter.schemesIterator()":"android.content.intentfilter.schemesiterator（）\r\n","android.content.Intent.setFlags(int)":"android.content.intent.setflags（int）\r\n","Add a new dynamic permission to the system.":"向系统添加新的动态权限。\r\n","#TYPE_BUNDLE":"#type_bundle\r\n","android.gesture.GestureStore":"android.gesture.gesturestore\r\n","android.graphics.drawable.shapes.Shape.onResize(float, float)":"android.graphics.drawable.shapes.shape.onresize（float，float）\r\n","android.drm.DrmManagerClient.getConstraints(android.net.Uri, int)":"android.drm.drmmanagerclient.getConstraints（android.net.uri，int）\r\n","This is a count-based constraint.":"这是基于计数的约束。\r\n","Gets the type of this library.":"获取此库的类型。\r\n","PinItemRequest":"pinitemrequest\r\n","android.content.AttributionSource.checkCallingUid()":"android.content.attributionsource.checkcallinguid（）\r\n","android.content.pm.ComponentInfo.applicationInfo":"android.content.pm.com.ponentinfo.applicationinfo\r\n","if rotation value is invalid.":"如果旋转值无效。\r\n","android.bluetooth.BluetoothGattService.getIncludedServices()":"android.bluetooth.bluetoothgattservice.getIncludedServices（）\r\n","An exception that indicates that the SQLite program is done.":"表明已完成SQLite程序的例外。\r\n","android.content.pm.verify.domain.DomainVerificationUserState":"android.content.pm.verify.domain.domainverificeuserstate\r\n","android.bluetooth.BluetoothHidDevice.SUBCLASS2_GAMEPAD":"android.bluetooth.bluetoothhiddevice.subclass2_gamepad\r\n","android.graphics.Picture.getHeight()":"android.graphics.picture.getheight（）\r\n","Construct a new drawable referencing the specified picture.":"构建一个新的可绘制的引用指定图片。\r\n","android.content.Context.grantUriPermission(java.lang.String, android.net.Uri, int)":"android.content.context.Granturipermession（java.lang.string，android.net.uri，int）\r\n"," tags from\n            an XML file.":" 来自\r\n            XML文件。\r\n","android.content.pm.ApkChecksum.getType()":"android.content.pm.apkchecksum.getType（）\r\n","Returns the foreground drawable managed by this class.":"返回该课程可管理的前景。\r\n",": The device supports one or more methods of\n            reporting current location.":"：该设备支持一种或多种方法\r\n            报告当前位置。\r\n","android.graphics.text.LineBreaker.BREAK_STRATEGY_SIMPLE":"android.graphics.text.linebreaker.break_strategy_simple\r\n","android.content.RestrictionsManager.REQUEST_KEY_DATA":"android.content.strictionsmanager.request_key_data\r\n","android.content.Intent.CATEGORY_CAR_DOCK":"android.content.intent.category_car_dock\r\n","F:Android.Bluetooth.BluetoothGattCharacteristic..ctor":"F：android.bluetooth.bluetoothgattharacteristic ..ctor\r\n","Return in padding the insets suggested by this Drawable for placing\n            content inside the drawable's bounds.":"在填充上返回该插入的插图，可用于放置\r\n            内容内部的内容。\r\n","android.content.ContentProvider.isTemporary()":"android.content.contentprovider.istemporary（）\r\n","android.content.ContentValues.isEmpty()":"android.content.contentvalues.isempty（）\r\n","android.graphics.drawable.AnimationDrawable.getNumberOfFrames()":"android.graphics.drawable.animationdrawable.getnumberofframes（）\r\n","android.graphics.drawable.Drawable.isProjected()":"android.graphics.drawable.drawable.isproject（）\r\n","android.content.RestrictionsManager.REQUEST_KEY_ID":"android.content.ErterctionsManager.Request_Key_ID\r\n","Sets the Y position around which the drawable is rotated.":"设置可旋转绘制的Y位置。\r\n","Gets the type of the icon provided.":"获取提供的图标的类型。\r\n","android.content.ClipDescription.getTimestamp()":"android.content.clipdescription.getTimestamp（）\r\n","android.graphics.Bitmap.writeToParcel(android.os.Parcel, int)":"android.graphics.bitmap.writetoparcel（android.os.os.parcel，int）\r\n","Indicates whether or not this component may be instantiated.":"指示该组件是否可以实例化。\r\n","android.database.sqlite.SQLiteStatement.executeUpdateDelete()":"android.database.sqlite.sqlitestatement.executeupdatedelete（）\r\n","android.content.pm.ApplicationInfo.permission":"android.content.pm.applicationinfo.permission\r\n","android.graphics.Canvas.getClipBounds(android.graphics.Rect)":"android.graphics.canvas.getClipBounds（android.graphics.Rect）\r\n","android.content.pm.PackageManager.getSuspendedPackageAppExtras()":"android.content.pm.packagemanager.getsuspackageappextras（）\r\n","System level service for managing companion devices\n            \n            See <a href=\"[TODO: @docRoot]guide/topics/connectivity/companion-device-pairing\">this guide</a>\n            for a usage example.":"管理配套设备的系统级服务\r\n            \r\n            参见<a href=\" [todo: @docroot] Guide/topics/connectivity/companion-device-pairing\">本指南</a>\r\n            用于用法示例。\r\n","Return a new Context object for the current Context but whose resources\n are adjusted to match the metrics of the given Display.":"返回当前上下文的新上下文对象，但其资源\r\n 进行调整以匹配给定显示屏的指标。\r\n","Offset the point's coordinates by dx, dy":"将点的坐标抵消到DX，Dy\r\n","android.content.res.Configuration.isScreenWideColorGamut()":"android.content.res.configuration.isscreenwidecolorgamut（）\r\n","Creates a single string with all the parameters set in\n this Parameters object.":"使用所有参数设置在\r\n 此参数对象。\r\n","android.content.pm.LabeledIntent.loadLabel(android.content.pm.PackageManager)":"android.content.pm.labeledintent.loadlabel（android.content.pm.packagemanager）\r\n","android.database.sqlite.SQLiteDatabase.needUpgrade(int)":"android.database.sqlite.sqlitedatabase.needupgrade（int）\r\n","If the cursor is backed by a ":"如果光标由一个 \r\n","ColorDrawable":"可结合\r\n","ContentProvider#getStreamTypes ContentProvider.getStreamTypes":"ContentProvider＃getStreamTypes contentprovider.getStreamTypes\r\n","android.bluetooth.BluetoothGattCharacteristic.FORMAT_UINT16":"android.bluetooth.bluetoothgattcharacteristic.format_uint16\r\n","android.hardware.Sensor Sensor":"android.hardware.sensor传感器\r\n","android.bluetooth.BluetoothHealthCallback":"android.bluetooth.bluetoothhealthcallback\r\n","android.content.res.Configuration.COLOR_MODE_HDR_NO":"android.content.res.configuration.color_mode_hdr_no\r\n","Because the default system does not include graphical task management,\n you should not use this flag unless you provide some way for a user to\n return back to the tasks you have launched.":"因为默认系统不包括图形任务管理，所以\r\n 除非您为用户提供某种方式，否则您不应使用此标志\r\n 返回到您启动的任务。\r\n","The renderer is requesting a redraw.":"渲染器要求重新绘制。\r\n","android.content.Intent.putExtra(java.lang.String, java.lang.CharSequence)":"android.content.intent.putextra（java.lang.string，java.lang.charequence）\r\n","android.graphics.drawable.RotateDrawable.getToDegrees()":"android.graphics.drawable.RotatedRawable.getTodeGrees（）\r\n","android.content.pm.CrossProfileApps.getProfileSwitchingLabel(android.os.UserHandle)":"android.content.pm.crossprofileapps.getProfilesWitchingLabel（android.os.userhandle）\r\n",": The device supports portrait orientation\n            screens.":"：该设备支持肖像方向\r\n            屏幕。\r\n","F:Android.Graphics.PathMeasure.GetMatrix":"F：android.graphics.pathmeasure.getmatrix\r\n","android.graphics.Outline.setRoundRect(android.graphics.Rect, float)":"android.graphics.outline.setRoundRect（android.graphics.Rect，float）\r\n","to allow the current data or type value\n overwritten, even if it is already set.":"允许当前数据或类型值\r\n 即使已经设置了它，即使它已经设置了。\r\n"," flag: return information about\n content providers in the package in\n ":" 标志：返回有关的信息\r\n 包装中的内容提供商\r\n \r\n","android.content.ClipDescription.MIMETYPE_TEXT_HTML":"android.content.clipdescription.mimetype_text_html\r\n","This class is used to store a set of values that the ":"此类用于存储一组值\r\n","android.content.Intent.EXTRA_BCC":"android.content.intent.extra_bcc\r\n",": set to true if this application would like to\n allow debugging of its\n code, even when installed on a non-development system. ":"：如果此应用程序愿意，请设置为true\r\n 允许调试其\r\n 即使安装在非开发系统上时，代码也是如此。\r\n","This method is provided for use by the ContentResolver.":"此方法提供了contentResolver的使用。\r\n","Broadcast Action: Explicit broadcast sent to the last known default launcher when a session\n            for a new install is committed.":"广播动作：会话时已明确发送到最后一个已知默认启动器的广播\r\n            对于新的安装而言。\r\n","#flattenToString()":"#flattentostring（）\r\n"," when loaded,\n rather than relying on the graphics system scaling it each time it\n is drawn to a Canvas.":" 加载时\r\n 而不是依靠图形系统每次缩放它\r\n 被吸引到画布上。\r\n","Called when an asynchronous update is completed.":"在完成异步更新时调用。\r\n","android.content.pm.PackageItemInfo.loadLogo(android.content.pm.PackageManager)":"android.content.pm.packageiteminfo.loadlogo（android.content.pm.packagemanager）\r\n","android.graphics.Path.reset()":"android.graphics.path.reset（）\r\n","Checks if the given ColorSpace is able to be parceled.":"检查给定的Colorspace是否能够被包裹。\r\n","Context#createContext":"上下文＃createContext\r\n","Draws this shape into the provided Canvas, with the provided Paint.":"用提供的油漆将此形状绘制到提供的画布中。\r\n","android.bluetooth.BluetoothHealthAppConfiguration":"android.bluetooth.bluetoothhealthappconfiguration\r\n","android.content.Intent.getSerializableExtra(java.lang.String)":"android.content.intent.getSerializableExtra（java.lang.string）\r\n","android.graphics.RenderNode.setForceDarkAllowed(boolean)":"机器人。图形。RenderNode。setForceDarkAllowed(布尔值)\r\n","Retrieve the user state for the given package and the ":"检索给定软件包的用户状态和\r\n","android.content.pm.ApkChecksum.getValue()":"android.content.pm.apkchecksum.getValue（）\r\n","Return a detailed description of the given MIME type, including an icon\n            and label that describe the type.":"返回给定的MIME类型的详细说明，包括图标\r\n            和描述类型的标签。\r\n","android.content.SyncResult.hasHardError()":"android.content.syncresult.hasharderror（）\r\n","Immediately close this socket, and release all associated resources.":"立即关闭此插座，并发布所有相关资源。\r\n","Intent#ACTION_EDIT":"意图＃action_edit\r\n","Sets the Outline to the rounded rect defined by the input rect, and\n            corner radius.":"将轮廓设置为由输入rect定义的圆形RECT，以及\r\n            角半径。\r\n","WHERE":"在哪里\r\n","android.hardware.Camera.ACTION_NEW_VIDEO":"android.hardware.camera.action_new_video\r\n","The rights-protected content can be executed.":"可以执行受权保护的内容。\r\n","android.graphics.drawable.LayerDrawable.setLayerInsetLeft(int, int)":"android.graphics.drawable.layerdrawable.setlayerinsetleft（int，int）\r\n","android.content.Intent.EXTRA_REFERRER":"android.content.intent.extra_referrer\r\n","The name of the extra used to define the icon, as a Bitmap, of a shortcut.":"用于将图标定义为快捷方式的图标的额外名称。\r\n","Although relatively uncommon, packages may be signed by more than one signer, in which case\n            their identity is viewed as being the set of all signers, not just any one.":"尽管相对罕见，但包裹可能由多个签名者签名，在这种情况下\r\n            他们的身份被视为所有签名者的集合，而不仅仅是任何签名者。\r\n","android.content.pm.ComponentInfo.enabled":"android.content.pm.com.ponentinfo.enabled\r\n"," for encrypting Sockets or Networks with\n            IPSec.":" 用于加密插座或网络\r\n            ipsec。\r\n","android.graphics.Typeface.getStyle()":"android.graphics.typeface.getStyle（）\r\n","Activity Action: The user pressed the \"Report\" button in the crash/ANR dialog.":"活动操作：用户按下崩溃/ANR对话框中的“报告”按钮。\r\n","android.graphics.drawable.Icon.loadDrawableAsync(android.content.Context, android.os.Message)":"android.graphics.drawable.icon.icon.loaddrawableasync（android.content.context，android.os.message）\r\n","android.graphics.Paint.setLetterSpacing(float)":"android.graphics.paint.setletterspacing（float）\r\n","SQLiteDatabase#CREATE_IF_NECESSARY":"sqlitedatabase＃create_if_nexcessare\r\n","A special value indicates to use all types set in manifest file.":"一个特殊值指示使用清单文件中设置的所有类型。\r\n","Open a stream on to the content associated with a content URI.":"打开与内容URI相关的内容的流。\r\n","Sets the scale value for the display list on the X axis.":"设置X轴上显示列表的比例值。\r\n","android.content.pm.PackageManager.FEATURE_CANT_SAVE_STATE":"android.content.pm.packagemanager.feature_cant_save_state\r\n","Gets the state of the auto-exposure lock.":"获取自动暴露锁的状态。\r\n","android.graphics.Paint.setShadowLayer(float, float, float, long)":"android.graphics.paint.setshadowlayer（浮点，浮点，浮点，长）\r\n","android.database.sqlite.SQLiteCursor":"android.database.sqlite.sqlitecursor\r\n","The affinity this activity has for another task in the system.":"该活动对系统中的另一个任务具有亲和力。\r\n","Called when the binding to this connection is dead.":"当与此连接的绑定死亡时，请调用。\r\n","Add a service to the list of services to be hosted.":"将服务添加到要托管的服务列表中。\r\n","The package name of the application containing the icon.":"包含图标的应用程序的包名称。\r\n","Activity action: Launch UI to show information about the usage\n            of a given permission group.":"活动动作：启动UI以显示有关使用情况的信息\r\n            给定的许可组。\r\n"," with 0 flags.":" 使用0标志。\r\n"," to respond to the package manager.":" 响应包装管理器。\r\n","android.content.Intent.EXTRA_QUIET_MODE":"android.content.intent.extra_quiet_mode\r\n","Called on a worker thread to perform the actual load and to return\n            the result of the load operation.":"打电话给工人线程执行实际负载并返回\r\n            负载操作的结果。\r\n","android.hardware.Sensor":"android.hardware.sensor\r\n","Sets whether the display list renders content which overlaps.":"设置显示列表是否呈现重叠的内容。\r\n","android.content.Intent.CATEGORY_APP_EMAIL":"android.content.intent.category_app_email\r\n","The rights have been removed.":"权利已被删除。\r\n","android.content.res.Configuration.SCREEN_WIDTH_DP_UNDEFINED":"android.content.res.configuration.screen_width_dp_undefined\r\n","android.graphics.drawable.AnimatedImageDrawable.setRepeatCount(int)":"android.graphics.drawable.animatedimatedimatedrawable.setrepeatcount（int）\r\n","Return the values for this operation after resolving any requested\n            back-references using the given results.":"解决任何请求后，返回此操作的值\r\n            使用给定结果的反向引用。\r\n","android.content.Context.registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter, int)":"android.content.Context.RegisterReceiver（android.content.broadcastreceiver，android.content.intentfilter，int）\r\n","Gets the horizontal angle of view in degrees.":"获得水平的视角。\r\n","android.database.sqlite.SQLiteDatabase.deleteDatabase(java.io.File)":"android.database.sqlite.sqlitedatabase.deletedatabase（java.io.file）\r\n","The string provided in the AndroidManifest file, if any.":"如果有的话，则在AndroidManifest文件中提供的字符串。\r\n","positionOffset + glyphCount * 2":"位置offset + glyphcount * 2\r\n","android.graphics.drawable.ShapeDrawable.getPaint()":"android.graphics.drawable.shapedrawable.getPaint（）\r\n","Error code indicating that the Bluetooth Device specified is not bonded":"错误代码指示指定的蓝牙设备未粘合\r\n","#stopLoading()":"#stoploading（）\r\n","android.content.pm.PackageManager.FEATURE_LEANBACK_ONLY":"android.content.pm.packagemanager.feature_leanback_only\r\n","Get the platform-defined permissions which belong to a particular permission group.":"获取属于特定权限组的平台定义的权限。\r\n","Draw this picture on the canvas.":"在画布上画这张照片。\r\n","android.content.SyncStats.numUpdates":"android.content.syncstats.numupdates\r\n","android.graphics.Bitmap.wrapHardwareBuffer(android.hardware.HardwareBuffer, android.graphics.ColorSpace)":"android.graphics.bitmap.wraphardwarebuffer（android.hardware.hardwarebuffer，android.graphics.colorspace）\r\n","\n            indicating result of the operation.":"\r\n            表示操作的结果。\r\n","Broadcast Action:  The device has entered USB Mass Storage mode.":"广播动作：该设备已输入USB质量存储模式。\r\n","android.graphics.ImageFormat.PRIVATE":"android.graphics.imageformat.private\r\n","android.content.pm.ModuleInfo":"android.content.pm.moduleinfo\r\n","android.content.pm.PackageManager.getPackagesHoldingPermissions(java.lang.String[], int)":"android.content.pm.packagemanager.getPackagesHoldingPermissions（java.lang.string []，int）\r\n","MATCH":"匹配\r\n","android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_LOCATION":"android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_LOCATION\r\n","An extra boolean describing whether a particular provider supports refresh\n            or not.":"额外的布尔人描述特定提供商是否支持刷新\r\n            或不。\r\n","Print the Provider's state into the given stream.":"将提供商的状态打印到给定的流中。\r\n","Broadcast Action: Sent to the system package verifier when a package\n            needs to be verified.":"广播动作：包装时发送到系统软件包验证仪\r\n            需要验证。\r\n","ColorFilter":"ColorFilter\r\n","android.content.Intent.addCategory(java.lang.String)":"android.content.intent.AddCategory（java.lang.string）\r\n","Returns true if the cursor has an associated cursor window.":"如果光标具有关联的光标窗口，则返回true。\r\n","value at which system low-priority\n receivers are placed; that is, receivers that should execute after\n application code. ":"在哪个系统低优先级的价值\r\n 接收器被放置；也就是说，应该执行的接收器\r\n 应用程序代码。\r\n","An InputStream you can create on a ParcelFileDescriptor, which will\n take care of calling ":"您可以在ParcelFileDescriptor上创建一个InputStream，它将\r\n 照顾打电话 \r\n","draw the gradient from the top to the bottom ":"将梯度从顶部到底部绘制\r\n","android.database.Cursor.unregisterContentObserver(android.database.ContentObserver)":"机器人。数据库。光标。unregisterContentObserver（android。数据库。ContentObserver）\r\n","Constant representing error response for Set Report due to \"invalid parameter\".":"由于“无效参数”而导致的设置报告的常数表示错误响应。\r\n","Create a labeled intent from the given intent, supplying the label\n            and icon resources for it.":"从给定的意图创建标签意图，提供标签\r\n            和图标资源。\r\n","android.graphics.Canvas.drawDoubleRoundRect(android.graphics.RectF, float[], android.graphics.RectF, float[], android.graphics.Paint)":"android.graphics.CANVAS.DRAWDOUMEROUNDRECT（android.graphics.Rectf，float []，android.graphics.Rectf，float []，android.graphics.paint）\r\n","This exception class is used when sqlite can't access the database file\n            due to lack of permissions on the file.":"当SQLite无法访问数据库文件时，使用此异常类\r\n            由于文件缺少权限。\r\n","Returns the characteristic this descriptor belongs to.":"返回该描述符所属的特征。\r\n","Creates a new empty cursor window and gives it a name.":"创建一个新的空光标窗口，并为其命名。\r\n","Call this to create a new shader that will draw with a bitmap.":"调用此功能创建一个新的着色器，该着色器将用位图绘制。\r\n","Information you can retrieve about a particular system\n            module.":"您可以检索有关特定系统的信息\r\n            模块。\r\n","android.content.Intent.EXTRA_RESTRICTIONS_LIST":"android.content.intent.extra_restrictions_list\r\n","android.content.ContentQueryMap.requery()":"android.content.contentquerymap.requery（）\r\n","android.hardware.Sensor.getReportingMode()":"android.hardware.sensor.getReportingMode（）\r\n","android.database.sqlite.SQLiteDatabase.queryWithFactory(android.database.sqlite.CursorFactory, boolean, java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"android.database.sqlite.sqlitedatabase.querywithfactory（android.database.sqlite.cursorfactory，boolean，java.lang.string，java.lang.lang.string [] lang.string，java.lang.string，java.lang.string，java.lang.string）\r\n","When a constraint violation occurs, the command aborts with a return\n            code SQLITE_CONSTRAINT.":"发生约束违规时，命令退出了返回\r\n            代码sqlite_constraint。\r\n","#releaseReference()":"#ReleAseReference（）\r\n","Interface definition for a callback to be invoked when a key event is\n dispatched to this dialog.":"当关键事件为时，要调用回调的接口定义\r\n 派遣到此对话框。\r\n","ConstantState":"恒定态\r\n","android.drm.DrmSupportInfo.getFileSuffixIterator()":"android.drm.drmsupportinfo.getfilesuffixiterator（）\r\n","Reads a String out of a column in a Cursor and writes it to a ContentValues.":"从光标中读取一根字符串，然后将其写入ContentValues。\r\n","#setDistinct(boolean)":"#setdistinct（布尔值）\r\n","android.graphics.Paint.descent()":"android.graphics.paint.descent（）\r\n","android.bluetooth.le.AdvertisingSetParameters.isConnectable()":"android.bluetooth.le.AdvertisingsetParameters.isconnectable（）\r\n","android.content.SearchRecentSuggestionsProvider.insert(android.net.Uri, android.content.ContentValues)":"android.content.SearchRecentsuggestionsProvider.Intert（android.net.uri，android.content.contentvalues）\r\n","android.graphics.drawable.Icon.getResId()":"android.graphics.drawable.icon.getresid（）\r\n","`\n            Ends the recording for this display list.":"`\r\n            结束此显示列表的录制。\r\n","android.database.sqlite.SQLiteDatabase.isReadOnly()":"android.database.sqlite.sqlitedatabase.isreadonly（）\r\n","android.content.Intent.ACTION_INPUT_METHOD_CHANGED":"android.content.intent.action_input_method_changed\r\n","Create a BitmapRegionDecoder from the specified byte array.":"从指定的字节数组创建一个bitmapregiondecoder。\r\n","Return the paint's horizontal skew factor for text. -or- Set the paint's horizontal skew factor for text.":"返回涂料的水平偏斜因子以获取文本。 - 或 - 设置涂料的水平偏斜因子以进行文本。\r\n"," that supplies the URI as a String rather\n            than a ":" 将URI作为字符串而不是\r\n            比一个\r\n","android.graphics.Canvas.saveLayer(float, float, float, float, android.graphics.Paint)":"机器人。图形。帆布。saveLayer（float，float，float，float，android。图形。油漆)\r\n","android.graphics.fonts.Font.getAxes()":"android.graphics.fonts.font.getaxes（）\r\n",": true if the application only has its\n data installed; the application package itself does not currently\n exist on the device.":"：true如果应用程序只有其\r\n 已安装数据；应用程序包本身不是当前没有\r\n 设备上存在。\r\n","to allow the current bounds rectangle to be\n overwritten, even if it is already set.":"允许当前边界矩形为\r\n 即使已经设置了它，即使它已经设置了。\r\n","android.graphics.drawable.GradientDrawable.setInnerRadius(int)":"android.graphics.drawable.gradientdrawable.setinnerradius（int）\r\n","Offset the rectangle by adding dx to its left and right coordinates, and\n            adding dy to its top and bottom coordinates.":"通过将dx添加到其左右坐标来偏移矩形，并且\r\n            将dy添加到其顶部和底部坐标。\r\n","Full path to the device-protected directory assigned to the package for\n            its persistent data.":"到分配给包裹的设备保护目录的完整路径\r\n            它的持续数据。\r\n","Applies each of the ":"适用于每个\r\n","android.content.Context.PEOPLE_SERVICE":"android.content.context.people_service\r\n","Enable zero-initialization of the native heap in this application or process.":"在本应用程序或过程中启用本机堆的零限制。\r\n","android.bluetooth.BluetoothStatusCodes.ERROR_MISSING_BLUETOOTH_CONNECT_PERMISSION":"android.bluetooth.bluetoothstatuscodes.error_missing_bluetooth_connect_permission\r\n"," value at which system high-priority\n            receivers are placed; that is, receivers that should execute before\n            application code.":" 在哪个系统上高优先级的价值\r\n            接收器被放置；也就是说，应该执行之前执行的接收器\r\n            应用程序代码。\r\n","android.graphics.Paint.setStrokeCap(android.graphics.Cap)":"android.graphics.paint.setstrokecap（android.graphics.cap）\r\n","value indicating that a layout dir has been set to LTR.":"值表示布局DIR已设置为LTR。\r\n","android.content.Intent.EXTRA_ASSIST_UID":"android.content.intent.extra_assist_uid\r\n","android.graphics.ColorFilter.ColorFilter()":"机器人。图形。滤色器。滤色器()\r\n","android.database.ContentObserver.dispatchChange(boolean)":"android.database.contentobserver.dispatchchange（boolean）\r\n","android.content.pm.PackageManager.setInstallerPackageName(java.lang.String, java.lang.String)":"android.content.pm.packagemanager.setinstallerpackagename（java.lang.string，java.lang.string）\r\n","to represent that the phone is in a digital (high end) dock.":"表示手机在数字（高端）码头中。\r\n","Intent used to broadcast the change in connection state of the Hearing Aid\n            profile.":"用于广播助听器连接状态的变化的意图\r\n            轮廓。\r\n","Enables or disables clipping to the outline.":"启用或禁用对大纲的裁剪。\r\n","DrmManagerClient.OnInfoListener":"drmmanagerclient.Oninfolistener\r\n","android.content.Intent.getParcelableArrayExtra(java.lang.String)":"android.content.intent.getParcelablearRayExtra（java.lang.string）\r\n","android.content.Context.MEDIA_PROJECTION_SERVICE":"android.content.context.media_proctiond_service\r\n","Returns the minimum width suggested by this Drawable.":"返回此绘制建议的最小宽度。\r\n","android.content.pm.PackageManager.getApplicationEnabledSetting(java.lang.String)":"android.content.pm.packagemanager.getApplicationEnabledSetting（java.lang.string）\r\n","android.graphics.fonts.FontVariationAxis.getTag()":"android.graphics.fonts.fontvariationaxis.getTag（）\r\n","#sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle)":"#SendOrderedBroadcast（Intent，String，Broadcastreceiver，Handler，int，string，Bundle）\r\n","android.graphics.drawable.shapes.OvalShape":"android.graphics.drawable.shapes.ovalshape\r\n","Information about an attribution declared by a package.":"有关包裹声明的归因的信息。\r\n","A font slant value for upright":"直立的字体倾斜值\r\n","android.bluetooth.BluetoothHealth.APP_CONFIG_REGISTRATION_SUCCESS":"android.bluetooth.bluetoothhealth.app_config_registration_success\r\n","Create a BluetoothHidDeviceAppSdpSettings object for the Bluetooth SDP record.":"为蓝牙SDP记录创建一个蓝牙HiddeviceAppsDpSettings对象。\r\n","Creates a <code>DrmInfoEvent</code> object with the specified parameters.":"使用指定参数创建<code> drminfoEvent </code>对象。\r\n","Releases resources associated with the current session of\n            DrmManagerClient.":"释放与当前会话相关的资源\r\n            drmmanagerclient。\r\n","Build.VERSION_CODES#GINGERBREAD":"build.version_codes＃姜饼\r\n","android.gesture.GestureStore.setSequenceType(int)":"android.gesture.gesturestore.setSequenceceType（int）\r\n","android.content.RestrictionsManager.EXTRA_REQUEST_ID":"android.content.strictionsmanager.extra_request_id\r\n","android.bluetooth.le.AdvertiseSettings.getMode()":"android.bluetooth.le..Advertisestestings.getMode（）\r\n","android.graphics.drawable.BitmapDrawable.setTargetDensity(int)":"android.graphics.drawable.bitmapDrawable.settargetDensity（int）\r\n","flag: return information about the\n intent filters supported by the activity.":"标志：返回有关\r\n 活动支持的意图过滤器。\r\n","android.hardware.Camera.stopPreview()":"android.hardware.camera.stoppreview（）\r\n","Retrieves an iterator object that you can use to iterate over the MIME types that \n            this DRM plug-in supports.":"检索迭代剂对象，您可以使用该对象在该迭代中迭代的MIME类型\r\n            此DRM插件支持。\r\n","Create a new BluetoothGattService.":"创建一个新的蓝牙gattservice。\r\n","android.content.SearchRecentSuggestionsProvider.delete(android.net.Uri, java.lang.String, java.lang.String[])":"android.content.searchRecentsuggestionsProvider.delete（android.net.uri，java.lang.string，java.lang.string []）\r\n",": The device can record audio via a\n            microphone.":"：该设备可以通过\r\n            麦克风。\r\n","Return any concrete text that has been given for the label text.":"返回为标签文本提供的任何具体文本。\r\n","android.graphics.SurfaceTexture.SurfaceTexture(int, boolean)":"android.graphics.surfaceTexture.surfaceTexture（INT，布尔值）\r\n","android.R.styleable#AndroidManifestApplication_requestRawExternalStorageAccess":"Android.r.Stylable＃androidManifestapplication_requestrawexternalstorageaccess\r\n","Callback triggered in response to ":"响应于\r\n","Set the Rect to the bounds of the region.":"将RECT设置为区域的边界。\r\n","android.database.sqlite.SQLiteDatabase.getMaximumSize()":"android.database.sqlite.sqlitedatabase.getMaximumsize（）\r\n","Fill the entire canvas' bitmap (restricted to the current clip) with the specified paint.":"用指定的油漆填充整个画布的位图（仅限于当前夹）。\r\n","An integer representing the end of the line has normal hyphen character (U+002D).":"代表线路末端的整数具有正常的连丝字符（U+002D）。\r\n","android.graphics.drawable.AnimatedImageDrawable.AnimatedImageDrawable()":"android.graphics.drawable.animatedimatedimatedrawable.animatedimatedimategrawable（）\r\n","android.content.pm.LauncherApps.resolveActivity(android.content.Intent, android.os.UserHandle)":"android.content.pm.launcherapps.ResolVeactivity（android.content.intent，android.os.userhandle）\r\n","android.content.SyncResult":"android.content.Syncresult\r\n","Return a copy of the specified region":"返回指定区域的副本\r\n","Extra used in the response from a BroadcastReceiver that handles\n            ":"额外用于处理的广播员的响应\r\n            \r\n","Name of the meta-data entry in the manifest that points to the XML file containing the\n            application's available restrictions.":"清单中的meta-data条目的名称指向包含XML文件的名称\r\n            应用程序可用限制。\r\n","ContentProvider#query ContentProvider.query":"ContentProvider＃QUERY CONTENTPROVIDER.QUERY\r\n","Health App Configuration un-registration failure":"健康应用程序配置未注册失败\r\n","android.bluetooth.le.AdvertisingSetParameters.isLegacy()":"android.bluetooth.le.AdvertisingsetParameters.islegacy（）\r\n","android.graphics.Region.isRect()":"android.graphics.gregion.isrect（）\r\n","The name of the application package being instrumented.":"仪器的应用程序包的名称。\r\n","#COLOR_MODE_HDR_MASK":"#COLOR_MODE_HDR_MASK\r\n","Wrapper class for Cursor that delegates all calls to the actual cursor object.":"光标的包装类别将所有调用委派给实际光标对象。\r\n","Replace the contents of this with the contents of src.":"用SRC的内容代替其中的内容。\r\n","android.graphics.Color.rgb(float, float, float)":"android.graphics.color.rgb（浮点，浮点，浮点）\r\n","android.graphics.ColorMatrix.setYUV2RGB()":"android.graphics.ColorMatrix.setYUV2RGB()\r\n","Create a new ClipData holding a URI.":"创建一个持有URI的新Clipdata。\r\n","android.content.Intent.replaceExtras(android.content.Intent)":"android.content.intent.replaceExtras（android.content.intent）\r\n","A Drawable that insets another Drawable by a specified distance or fraction of the content bounds.":"可插入另一个可通过内容界限的距离或分数绘制的可插入。\r\n","As a guiding principle:":"作为指导原则：\r\n","android.content.pm.PackageManager.FEATURE_TELEPHONY_IMS":"android.content.pm.packagemanager.feature_telephony_ims\r\n","android.content.pm.ResolveInfo.serviceInfo":"android.content.pm.resolveinfo.serviceinfo\r\n","android.database.sqlite.SQLiteDatabase.isOpen()":"android.database.sqlite.sqlitedatabase.isopen（）（）\r\n","Returns the relative luminance of this color.":"返回这种颜色的相对亮度。\r\n","The row currently pointed to by the right cursor is unique ":"当前由右光标指向的行是唯一的\r\n","android.content.pm.ShortcutInfo.isPinned()":"android.content.pm.shortcutinfo.ispinned（）\r\n","Returns the value of the requested column as a double.":"返回请求列的值作为双精度。\r\n"," fails due the specified\n            constraints.":" 由于指定的失败\r\n            约束。\r\n","Releases the the texture content.":"释放纹理内容。\r\n","Add a quadratic bezier from the last point, approaching control point\n            (x1,y1), and ending at (x2,y2).":"从最后一点添加一个二次bezzier，接近控制点\r\n            （x1，y1），并以（x2，y2）结尾。\r\n","android.graphics.ImageFormat.Y8":"android.graphics.imageformat.y8\r\n","Sets the end angle for rotation.":"设置旋转的末端角度。\r\n","Returns the alpha represented by the Outline. -or- Sets the alpha represented by the Outline - the degree to which the\n            producer is guaranteed to be opaque over the Outline's shape.":"返回以大纲为代表的alpha。 - 或 - 设置由大纲表示的α-\r\n            生产商可以保证在轮廓的形状上是不透明的。\r\n","android.content.res.Resources.getValue(java.lang.String, android.util.TypedValue, boolean)":"android.content.res.res.resources.getValue（java.lang.string，android.util.typedvalue，boolean）\r\n",": The device supports connecting to USB accessories.":"：该设备支持连接到USB配件。\r\n","android.drm.DrmEvent.getAttribute(java.lang.String)":"android.drm.drmevent.getAttribute（java.lang.string）\r\n","AdvertisingSetParameters":"AdvertisseTeTparameters\r\n","android.hardware.usb.UsbManager":"android.hardware.usb.usbmanager\r\n","android.graphics.Typeface.DEFAULT_BOLD":"android.graphics.typeface.default_bold\r\n","android.database.Cursor.close()":"android.database.cursor.close（）\r\n","Feature to view a document using system standard sending mechanism, like\n            ":"使用系统标准发送机制查看文档的功能，例如\r\n            \r\n","TextClassificationManager":"TextClassificationManager\r\n","Retrieves the string value for the attribute at <var>index</var>.":"检索<var> index </var>的属性的字符串值。\r\n","Returns true if zoom is supported.":"如果支持Zoom，则返回true。\r\n","android.graphics.Region.setPath(android.graphics.Path, android.graphics.Region)":"android.graphics.gregion.setpath（android.graphics.path，android.graphics.gregion）\r\n","SQLiteDatabase":"sqlitedatabase\r\n","android.database.sqlite.SQLiteClosable.acquireReference()":"android.database.sqlite.sqliteclosable.acquirereference（）\r\n","F:Android.Content.RestrictionEntry..ctor":"f：android.content.grestrictionerry.ctor\r\n","Deletes a database including its journal file and other auxiliary files\n            that may have been created by the database engine.":"删除一个数据库，包括其日记文件和其他辅助文件\r\n            这可能是由数据库引擎创建的。\r\n","An activity that provides a user interface for adjusting application preferences.":"提供用于调整应用程序首选项的用户界面的活动。\r\n","Value for hyphenation frequency indicating no automatic hyphenation.":"连字符频率的值表示没有自动连字符。\r\n","The provider that corresponds to this resolution match, if this\n            resolution is for a provider.":"如果这是与此分辨率匹配相对应的提供商\r\n            解决方案是针对提供商的。\r\n","Should be displayed in the top-level launcher.":"应显示在顶级启动器中。\r\n","ServiceInfo":"ServiceInfo\r\n","Characteristic property: Characteristic supports write with signature":"特征性属性：特征支持用签名写\r\n","android.content.Intent.ACTION_PICK":"android.content.intent.action_pick\r\n","android.content.pm.PackageItemInfo.icon":"android.content.pm.packageiteminfo.icon\r\n","Returns a string array holding the names of all of the columns in the\n result set in the order in which they were listed in the result.":"返回一个字符串数组，其中包含\r\n 按照它们在结果中列出的顺序进行结果集。\r\n","android.content.Context.KEYGUARD_SERVICE":"android.content.Context.Keyguard_Service\r\n","Callback interface used to signal the moment of actual image capture.":"回调界面用于发出实际图像捕获时刻。\r\n","android.graphics.BitmapRegionDecoder.newInstance(java.io.InputStream)":"android.graphics.bitmapregiondecoder.newinstance（java.io.inputstream）\r\n","android.content.SyncStats.numAuthExceptions":"android.content.syncstats.numauthexceptions\r\n","A constant string describing a geo-magnetic rotation vector.":"描述地质旋转载体的常数弦。\r\n","android.content.pm.PackageManager.FEATURE_STRONGBOX_KEYSTORE":"android.content.pm.packagemanager.feature_strongbox_keystore\r\n","The preferred screen orientation this activity would like to run in.":"首选屏幕方向该活动希望进行。\r\n",",\n            including resources and manifest.":"，，，，\r\n            包括资源和清单。\r\n","android.graphics.RectF.describeContents()":"android.graphics.Rectf.Describecontents（）\r\n","Read a ComponentName from a Parcel that was previously written\n            with ":"阅读以前编写的包裹中的componentName\r\n            和\r\n","android.content.Intent.ACTION_MEDIA_REMOVED":"android.content.intent.action_media_remaved\r\n","Gets the index of the drawable with the provided state set.":"获取带有提供的状态集的可绘制的索引。\r\n","Text shaping result object for single style text.":"单个样式文本的文本成型结果对象。\r\n","Key for an SQL style ":"SQL样式的关键\r\n","Returns whether the advertisement will be anonymous.":"返回广告是否会匿名。\r\n","The XML parsing interface returned for an XML resource.":"为XML资源返回的XML解析接口。\r\n","android.content.Context.startService(android.content.Intent)":"android.content.context.startservice（android.content.intent）\r\n","android.content.pm.ServiceInfo.FLAG_SINGLE_USER":"android.content.pm.ServiceInfo.FLAG_SINGLE_USER\r\n","An abstract implementation of a SyncAdapter that spawns a thread to invoke a sync operation.":"SyncAdapter的抽象实现，该实现会产生线程以调用同步操作。\r\n","android.content.res.Resources Resources":"Android.content.Res.Resours资源\r\n","Returns the value of the requested column as a byte array.":"以字节数组的形式返回请求列的值。\r\n","android.database.sqlite.SQLiteDatabase.insertOrThrow(java.lang.String, java.lang.String, android.content.ContentValues)":"android.database.sqlite.sqlitedatabase.insertorthrow（java.lang.string，java.lang.string，android.content.content.contentvalues）\r\n","Require a ":"需要一个\r\n","BluetoothDevice#PHY_LE_CODED":"BluetoothDevice＃phy_le_coded\r\n","Returns the color model of this color.":"返回该颜色的颜色模型。\r\n","Perform an insert by combining all current settings and the\n            information passed into this method.":"通过组合所有当前设置和\r\n            信息传递到此方法中。\r\n","android.graphics.text.LineBreaker.computeLineBreaks(android.graphics.text.MeasuredText, android.graphics.text.ParagraphConstraints, int)":"android.graphics.text.line breaker.com putineLelellebreaks（android.graphics.text.measuredText，android.graphics.text.paragraphcont.paragraphconstraints，int）\r\n","singleInstance":"单个稳定\r\n","android.drm.DrmManagerClient.canHandle(android.net.Uri, java.lang.String)":"android.drm.drmmanagerclient.canhandle（android.net.uri，java.lang.string）\r\n","Get the current value of start hyphen edit. -or- Set a start hyphen edit on the paint.":"获取开始连字符编辑的当前值。 - 或 - 在油漆上设置起始连字符编辑。\r\n",": if set, this application is installed in the\n device's system image.":"：如果设置，此应用程序已安装在\r\n 设备的系统图像。\r\n","Return foreground service type specified in the manifest.":"返回清单中指定的前台服务类型。\r\n","Returns the ActivityInfo of the activity.":"返回活动的活动。\r\n","Convert this Intent into a String holding a URI representation of it.":"将此意图转换为保留其URI表示的字符串。\r\n","Returns the list of currently selected values.":"返回当前选择值的列表。\r\n","android.content.pm.LauncherApps.isActivityEnabled(android.content.ComponentName, android.os.UserHandle)":"android.content.pm.launcherapps.isactivityEnabled（android.content.componentname，android.os.userhandle）\r\n","android.graphics.Bitmap.CompressFormat":"android.graphics.bitmap.compressformat\r\n",": The device includes at least one form of audio\n            output, as defined in the Android Compatibility Definition Document (CDD)\n            <a href=\"https://source.":"：该设备至少包含一种音频\r\n            输出，如Android兼容性定义文档（CDD）所定义\r\n            <a href =“ https：// source。\r\n","Class implementing the Application object.":"实施应用程序对象的类。\r\n","android.database.CursorWindow.putLong(long, int, int)":"android.database.cursorwindow.putlong（long，int，int）\r\n","android.content.pm.PackageManager.hasSystemFeature(java.lang.String, int)":"android.content.pm.packagemanager.hassystemfeature（java.lang.string，int）\r\n","android.drm.DrmManagerClient.getAvailableDrmEngines()":"android.drm.drmmanagerclient.getavailabledrmengines（）\r\n","android.content.pm.PackageInfo.reqFeatures":"android.content.pm.packageinfo.reqfeatures\r\n","Start Bluetooth LE scan with default parameters and no filters.":"使用默认参数且无过滤器启动蓝牙LE扫描。\r\n","android.content.Intent.EXTRA_DOCK_STATE":"android.content.intent.extra_dock_state\r\n","Set the stroke width and color state list for the drawable.":"为可绘制的可绘制设置“冲程宽度和颜色状态列表”。\r\n","android.graphics.fonts.FontStyle.FontStyle(int, int)":"android.graphics.fonts.fontstyle.fontstyle（int，int）\r\n","#WRITE_TYPE_NO_RESPONSE":"#write_type_no_response\r\n","Create a new picture (already recorded) from the data in the stream.":"从流中的数据创建新图片（已经记录）。\r\n","android.graphics.drawable.BitmapDrawable.setMipMap(boolean)":"android.graphics.drawable.bitmapdrable.setmipmap（boolean）\r\n","Callback interface for being notified that a new stream frame is available.":"通知有新的流帧可用的回调界面。\r\n","android.content.Intent.EXTRA_ORIGINATING_URI":"android.content.intent.extra_originating_uri\r\n","Get connected devices for the health profile.":"获取有关健康状况的连接设备。\r\n","Constant representing report protocol mode used set by host.":"常数表示主机设置的报告协议模式。\r\n","Gets the version code.":"获取版本代码。\r\n","android.graphics.Outline.setOval(int, int, int, int)":"android.graphics.outline.setoval（int，int，int，int）\r\n","Return the logo resource identifier to use for this component.":"返回徽标资源标识符以用于此组件。\r\n","Invalidates the cached path that is used to render the stroke.":"使用于渲染中风的缓存路径无效。\r\n","\n          Whether or not the provider can be instantiated by the system.\n        ":"\r\n          提供商是否可以由系统实例化。\r\n        \r\n","A base class that is used to send asynchronous event information from the DRM framework.":"用于从DRM框架发送异步事件信息的基类。\r\n","android.content.pm.ApplicationInfo.backupAgentName":"android.content.pm.applicationinfo.backupentname\r\n","android.graphics.Path.setFillType(android.graphics.FillType)":"android.graphics.path.setfilltype（android.graphics.filltype）\r\n","Determine whether <em>you</em> have been granted a particular permission.":"确定<em> you </em>是否已获得特定许可。\r\n","android.database.sqlite.SQLiteDatabase.create(android.database.sqlite.CursorFactory)":"android.database.sqlite.sqlitedatabase.create（android.database.sqlite.cursorfactory）\r\n","android.content.pm.PackageManager.getActivityBanner(android.content.ComponentName)":"android.content.pm.packagemanager.getActivityBanner（android.content.componentname）\r\n","Retrieve a set of basic attribute values from an AttributeSet, not\n            performing styling of them using a theme and/or style resources.":"从一个属性中检索一组基本属性值，而不是\r\n            使用主题和/或样式资源对其进行表演。\r\n","Move the cursor to the previous row.":"将光标移动到上一行。\r\n",": no specific information about how\n data will be accessed.":"：没有关于如何的具体信息\r\n 数据将被访问。\r\n","Package name that an operation is working with.":"操作正在使用的软件包名称。\r\n","#densityDpi":"#densedpi\r\n","Sets padding for the shape.":"设置形状的填充。\r\n","Retrieve the textual description of this permission.":"检索此权限的文本描述。\r\n","Returns whether or not this application can be profiled by the shell user,\n            even when running on a device that is running in user mode.":"返回该应用程序是否可以由Shell用户介绍，\r\n            即使在用户模式下运行的设备上运行。\r\n"," to do the work.":" 做这项工作。\r\n","Specifies tint color for this drawable as a color state list.":"将此drawable的着色颜色指定为颜色状态列表。\r\n","ColorSpace.Named#SRGB sRGB":"ColorSpace.Named#SRGB sRGB\r\n","ORDER BY":"顺序\r\n"," operators\n            in buildUnionQuery.":" 操作员\r\n            在buildunionquery中。\r\n","Abstract class that drawables supporting animations and callbacks should extend.":"支持动画和回调的可抽签的抽签类应扩展。\r\n","android.content.pm.LauncherApps.getShortcutBadgedIconDrawable(android.content.pm.ShortcutInfo, int)":"android.content.pm.launcherapps.getShortCutbadgedIcondrawable（android.content.pm.shortcutinfo，int）\r\n","Writes the document to an output stream.":"将文档写入输出流。\r\n","android.content.Context.startActivity(android.content.Intent, android.os.Bundle)":"android.content.context.startactivity（android.content.intent，android.os.bundle）\r\n","Returns the rotation value for this display list around the X axis, in degrees.":"返回此显示列表围绕X轴的旋转值，以度为单位。\r\n","android.content.pm.VersionedPackage.getPackageName()":"android.content.pm.versionedpackage.getpackagename（）\r\n","android.graphics.drawable.LayerDrawable.getLayerInsetBottom(int)":"android.graphics.drawable.layerdrawable.getlayerinsetbottom（int）\r\n","Retrieve the ColorStateList for the attribute at <var>index</var>.":"检索<var> index </var>属性的colorStateList。\r\n","Stores away the application context associated with context.":"存储与上下文关联的应用程序上下文。\r\n","android.bluetooth.le.ScanResult.getDataStatus()":"android.bluetooth.le.scanresult.getDatastatus（）\r\n"," but asynchronously\n            persists the package manager state after returning from the call,\n            allowing it to return quicker and batch a series of adds at the\n            expense of no guarantee the added permission will be retained if\n            the device is rebooted before it is written.":" 但是异步\r\n            从呼叫返回后，持续存在包装管理器状态，\r\n            允许它更快地返回，并在\r\n            无保证的费用，如果\r\n            在编写设备之前重新启动该设备。\r\n","Each pixel is stored as a single translucency (alpha) channel.":"每个像素都存储为单个半透明（alpha）通道。\r\n","#STATE_DISCONNECTING":"#STATE_DISCONNECTING\r\n","android.graphics.drawable.Animatable2.registerAnimationCallback(android.graphics.drawable.AnimationCallback)":"android.graphics.drawable.animatable2.RegisterAnimationCallback（android.graphics.drawable.animationcallback）\r\n","android.content.Intent.CATEGORY_DEFAULT":"android.content.intent.category_default\r\n",": If set, a single instance of the service will\n run for all users on the device. ":"：如果设置，服务的单个实例将\r\n 为设备上的所有用户运行。 \r\n","An entity class that wraps the capability of each DRM plug-in (agent),\n            such as the MIME type and file suffix the DRM plug-in can handle.":"一个包裹每个DRM插件（代理）的功能的实体类，\r\n            例如MIME类型和文件后缀DRM插件可以处理。\r\n","Constant representing error response for Set Report due to \"unsupported request\".":"由于“不支持的请求”而导致的设置报告的常数表示错误响应。\r\n","BluetoothGattServer#setPreferredPhy":"BluetoothgattServer＃SetPreferredphy\r\n","android.bluetooth.BluetoothHidDevice.SUBCLASS1_COMBO":"android.bluetooth.bluetoothhiddevice.subclass1_combo\r\n","android.content.res.AssetManager.openNonAssetFd(int, java.lang.String)":"机器人。内容。res.AssetManager。openNonAssetFd（int，java。朗。弦）\r\n","if rectangle is invalid; quality is not within [0,\n                  100]; or stream is null.\n":"如果矩形无效；质量不在[0，\r\n                  100];或流是空的。\r\n\r\n","Returns the absolute path to the application specific cache directory on\n the filesystem designed for storing cached code.":"将绝对路径返回到应用程序的特定缓存目录\r\n 设计用于存储缓存代码的文件系统。\r\n","android.content.ContentResolver.SYNC_EXTRAS_DISCARD_LOCAL_DELETIONS":"android.content.contentresolver.sync_extras_discard_local_deletions\r\n","android.content.Context.deleteDatabase(java.lang.String)":"android.content.context.deletedatabase（java.lang.string）\r\n","Get the platform-defined permission group of a particular permission, if the permission is a\n            platform-defined permission.":"如果权限为\r\n            平台定义的许可。\r\n","android.content.pm.InstrumentationInfo.splitPublicSourceDirs":"android.content.pm.insrumentationinfo.splitpublicsourcesourcedirs\r\n","android.graphics.Picture.requiresHardwareAcceleration()":"android.graphics.picture.requireshardwareacceleration（）\r\n","android.content.BroadcastReceiver.setOrderedHint(boolean)":"android.content.broadcastreceiver.setorderedhint（boolean）\r\n","android.database.Cursor.getColumnIndexOrThrow(java.lang.String)":"android.database.cursor.getColumnindexorthrow（java.lang.string）\r\n",": If this feature is supported, the device implements\n            the Android Keystore backed by a dedicated secure processor referred to as\n            <a href=\"https://source.":"：如果支持此功能，则设备实施\r\n            由专用的安全处理器支持的Android密钥库，称为\r\n            <a href =“ https：// source。\r\n","android.graphics.RecordingCanvas":"机器人。图形。录录玫搂鲁拢潞RecordingCanvas\r\n",": The device has a front facing camera.":"：该设备具有前置摄像头。\r\n","android.content.Intent.ACTION_WALLPAPER_CHANGED":"android.content.intent.action_wallpaper_changed\r\n","Bit mask of overall layout of the screen.":"屏幕整体布局的位蒙版。\r\n","#TYPE_BOOLEAN":"#type_boolean\r\n","android.bluetooth.BluetoothStatusCodes.ERROR_BLUETOOTH_NOT_ALLOWED":"android.bluetooth.bluetoothstatuscodes.error_bluetooth_not_lowered\r\n","android.graphics.RenderNode.getRotationY()":"机器人。图形。RenderNode。getRotationY（）\r\n","android.graphics.Point.describeContents()":"android.graphics.point.describecontents（）\r\n","android.content.Intent.putCharSequenceArrayListExtra(java.lang.String, java.util.ArrayList)":"android.content.intent.putchequhequarraylistextra（java.lang.string，java.util.arraylist）\r\n","android.graphics.Canvas.saveLayerAlpha(float, float, float, float, int, int)":"机器人。图形。帆布。saveLayerAlpha(float,float,float,float,int,int)\r\n","android.content.pm.PackageManager.getUserBadgedIcon(android.graphics.drawable.Drawable, android.os.UserHandle)":"android.content.pm.packagemanager.getuserbadgedicon（android.graphics.drawable.drabable.drabable，android.os.userhandle）\r\n","Read the entire contents of a cursor row and store them in a ContentValues.":"阅读光标行的全部内容，然后将它们存储在ContentValues中。\r\n","android.database.Cursor.respond(android.os.Bundle)":"机器人。数据库。光标。回应（android。操作系统。束)\r\n","Return the theme resource identifier to use for this activity.":"返回主题资源标识符以用于此活动。\r\n","Utility method to run the pre-compiled query and return the value in the\n            first column of the first row.":"实用方法运行预编译查询并返回该值\r\n            第一行的第一列。\r\n","android.content.Intent.ACTION_GET_CONTENT":"android.content.intent.action_get_content\r\n","android.graphics.Interpolator.timeToValues(int, float[])":"android.graphics.interpolator.timetovalues（int，float []）\r\n","When a constraint violation occurs, the one row that contains\n            the constraint violation is not inserted or changed.":"当发生约束时，一行包含\r\n            违反的约束未插入或更改。\r\n","android.content.Intent.cloneFilter()":"android.content.intent.clonefilter（）\r\n","Change all of the result data returned from this broadcasts; only works\n            with broadcasts sent through\n            ":"更改从此广播返回的所有结果数据；只能起作用\r\n            通过发送的广播\r\n            \r\n","Attach the SurfaceTexture to the OpenGL ES context that is current on the calling thread.":"将SurfaceTexture附加到调用线程上当前的OpenGL ES上下文。\r\n","Get a font variation settings associated with this font":"获取与此字体关联的字体变化设置\r\n","Create a typeface object that best matches the specified existing\n            typeface and the specified Style.":"创建一个最能匹配指定现有的字体对象\r\n            字体和指定样式。\r\n","Clears any current primary clip on the clipboard.":"清除剪贴板上的任何当前主要剪辑。\r\n","Key for issuing a new request, contained in the request bundle.":"发出新请求的钥匙，该请求包含在请求捆绑包中。\r\n","android.content.Intent.ACTION_INSERT":"android.content.intent.action_insert\r\n","android.content.res.Resources.getTextArray(int)":"android.content.Res.Resources.getTextarray（int）\r\n","Create a colorfilter that multiplies the RGB channels by one color,\n            and then adds a second color.":"创建一个将RGB通道乘以一种颜色的ColorFilter，\r\n            然后添加第二种颜色。\r\n","android.graphics.ColorSpace.getMaxValue(int)":"android.graphics.colorspace.getmaxvalue（int）\r\n","\n            by looking up a column named \"_data\" at the given URI.":"\r\n            通过在给定的URI上查找名为“ _data”的列。\r\n","Check whether the given feature name is one of the available features as\n            returned by ":"检查给定的功能名称是否是可用功能之一\r\n            返回\r\n","that indicates that the activity\n can itself handle changes to the font scaling factor. ":"这表明活动\r\n 自身可以处理对字体缩放系数的更改。\r\n","#onUpgrade":"#onupgrade\r\n","Called by zygote when it is done preloading resources, to change back\n            to normal Resources operation.":"当完成预加载资源时，由zygote调用，以更改回\r\n            到正常的资源运行。\r\n","Returns the value of the requested column as a short.":"返回请求列的值作为短。\r\n","android.content.pm.PackageManager.FEATURE_SENSOR_LIGHT":"android.content.pm.packagemanager.feature_sensor_light\r\n","Callback when batch results are delivered.":"批次结果交付时回调。\r\n","android.content.res.ObbInfo":"机器人。内容。res.ObbInfo的\r\n","android.hardware.Camera.stopFaceDetection()":"android.hardware.camera.stopfacedetection（）\r\n","android.content.pm.FeatureInfo":"android.content.pm.featureinfo\r\n","Configures <a href=\"https://sqlite.":"配置<a href =“ https：// sqlite。\r\n","android.content.ContentValues.size()":"android.content.contentvalues.size（）\r\n","if the attribute is defined but is\n         not a dimension or integer (enum).\n":"如果定义了属性，但是\r\n         不是尺寸或整数（枚举）。\r\n\r\n","Write characteristic, requesting acknoledgement by the remote device":"编写特征，要求远程设备要求Acknoledgenge\r\n","Key for the response result in the response bundle sent to the application, for a permission\n            request.":"响应结果的关键发送到应用程序的响应捆绑包中，以获取许可\r\n            要求。\r\n","android.content.Intent.toUri(int)":"android.content.intent.touri（int）\r\n","#saveLayerAlpha(RectF, int)":"#saveLayerAlpha(RectF,int)\r\n","android.graphics.drawable.GradientDrawable.getCornerRadius()":"机器人。图形。可画的。GradientDrawable。盖科纳拉迪乌斯(getCornerRadius)\r\n","on error, for example connection failure\n":"错误，例如连接失败\r\n\r\n","android.content.Intent.filterHashCode()":"android.content.intent.filterhashcode（）\r\n","android.graphics.drawable.Drawable.isFilterBitmap()":"android.graphics.drawable.drawable.isfilterbitmap（）\r\n","A font weight value for the extra-light weight":"超轻重量的字体重量值\r\n","android.gesture.Gesture.getBoundingBox()":"android.gesture.gesture.getBoundingBox（）\r\n","\n            For example, ATD.":"\r\n            例如，ATD。\r\n","Returns the value of the entry as an integer when the type is ":"当类型为时，将条目的值返回作为整数的值\r\n","Create drawable from raw nine-patch data, not dealing with density.":"创建可从原始的九点数据绘制的，而不是处理密度。\r\n","android.content.Intent.getStringExtra(java.lang.String)":"android.content.intent.getStringExtra（java.lang.string）\r\n","android.database.ContentObservable.dispatchChange(boolean)":"android.database.contentobservable.dispatchchange（boolean）\r\n",": The device includes a relative humidity sensor.":"：该设备包括一个相对湿度传感器。\r\n","android.bluetooth.BluetoothGattService.getType()":"android.bluetooth.bluetoothgattservice.getType（）\r\n","#registerSinkAppConfiguration":"#RegistersInkappConfiguration\r\n","Returns the start padding in pixels.":"返回以像素为单位的开始填充。\r\n","android.content.AsyncQueryHandler.startQuery(int, java.lang.Object, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)":"android.content.asyncqueryhandler.startquery（int，java.lang.object，android.net.uri，java.lang.string []，java.lang.string，java.lang.lang.lang.string []，Java.lang.string），Java.lang.string）\r\n","Draw the array of vertices, interpreted as triangles (based on mode).":"画出一系列顶点，解释为三角形（基于模式）。\r\n","android.drm.DrmManagerClient.checkRightsStatus(android.net.Uri)":"android.drm.drmmanagerclient.checkrightsstatus（android.net.uri）\r\n","android.content.pm.SharedLibraryInfo.TYPE_BUILTIN":"android.content.pm.SharedLibraryInfo.TYPE_BUILTIN\r\n"," for ranging devices with wifi.":" 用于使用WiFi的设备。\r\n","A constant string describing a gyroscope sensor type.":"描述陀螺仪传感器类型的常数字符串。\r\n","Returns whether the advertisement will be scannable.":"返回广告是否可以扫描。\r\n","Set the rectangle's coordinates from the data stored in the specified\n            parcel.":"从存储在指定的数据中设置矩形的坐标\r\n            包裹。\r\n","Returns the primary advertising phy.":"返回主要广告PHY。\r\n","Return the string value associated with a particular resource ID.":"返回与特定资源ID关联的字符串值。\r\n","android.bluetooth.le.ScanRecord.getServiceUuids()":"android.bluetooth.le.scanrecord.getServiceuuids（）\r\n","android.content.pm.ShortcutInfo.DISABLED_REASON_BACKUP_NOT_SUPPORTED":"android.content.pm.shortcutinfo.disabled_reason_backup_not_supported\r\n","Information about a face identified through camera face detection.":"有关通过摄像头检测识别的面孔的信息。\r\n","F:Android.Bluetooth.LE.AdvertiseSettings+Builder.SetAdvertiseMode":"F：android.bluetooth.le.aptervertisestings+builder.setadvertisemode\r\n","F:Android.Bluetooth.LE.AdvertiseSettings+Builder.SetTxPowerLevel":"F：android.bluetooth.le.aptervertisestings+builder.settxpowerlevel\r\n","If there was an XML parsing error.":"如果存在XML解析错误。\r\n","Sends report to remote host using interrupt channel.":"使用中断通道将报告发送到远程主机。\r\n","#canonicalize":"#caronicalize\r\n","android.graphics.ColorSpace.ILLUMINANT_D75":"android.graphics.colorspace.illuminant_d75\r\n","\n            intents to request the dock state.":"\r\n            意图要求码头状态。\r\n","[TODO: @inheritDoc]\n            This method is always called on the application main thread, and must\n            not perform lengthy operations.":"[todo：@inheritdoc]\r\n            此方法总是在应用程序主线程上调用，必须\r\n            不执行冗长的操作。\r\n","Returns true if auto-white balance locking is supported.":"如果支持自动白色余额锁定，则返回true。\r\n","Returns one of the default typeface objects, based on the specified style":"基于指定样式返回默认字体对象之一\r\n","Set the matrix to translate by (dx, dy).":"将矩阵设置为通过（DX，DY）翻译。\r\n","Returns absolute paths to application-specific directories on all\n            shared/external storage devices where the application can place\n            persistent files it owns.":"将绝对路径返回到所有方面的专用目录\r\n            应用程序可以放置的共享/外部存储设备\r\n            它拥有的持续文件。\r\n","android.content.ContentResolver.QUERY_ARG_OFFSET":"android.content.contentresolver.query_arg_offset\r\n","android.database.sqlite.SQLiteQueryBuilder.getCursorFactory()":"android.database.sqlite.sqlitequerybuilder.getCursorFactory（）\r\n"," when rate-limiting is active for the caller app.":" 当速率限制为呼叫者应用程序时。\r\n","android.database.CursorWrapper.getWrappedCursor()":"android.database.cursorwrapper.getWrappedCursor（）\r\n","android.bluetooth.BluetoothManager.getAdapter()":"android.bluetooth.bluetoothmanager.getAdapter（）\r\n","Override this to handle requests to open a file blob.":"覆盖此内容以处理请求以打开文件斑点。\r\n","Health Channel Connection State - Disconnected":"健康频道连接状态 - 断开连接\r\n","Canvas EdgeType BW":"帆布Edgetype BW\r\n","android.R.styleable#AndroidManifestApplication_appComponentFactory":"Android.r.Stylable＃androidManifestapplication_appcomponentFactory\r\n","android.bluetooth.BluetoothGattServer.close()":"android.bluetooth.bluetoothgattserver.close（）\r\n","#onDeleteComplete":"#ondeletecomplete\r\n","android.graphics.SurfaceTexture.setDefaultBufferSize(int, int)":"android.graphics.surfaceTexture.setDefaultBuffersize（int，int）\r\n","Builds a row, starting from the left-most column and adding one column\n value at a time.":"生成一行，从最左边的列开始，添加一列\r\n 一次值。\r\n","Paint":"油漆\r\n","android.content.res.TypedArray.getInteger(int, int)":"android.content.res.typedarray.getinteger（int，int）\r\n","Retrieve a long value from the preferences.":"从偏好中检索长的价值。\r\n","Creates an empty set of values using the given initial size":"使用给定的初始大小创建一组空值\r\n","\n value of OPAQUE or TRANSLUCENT.":"\r\n 不透明或半透明的价值。\r\n","android.database.DatabaseUtils.longForQuery(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String[])":"android.database.databaseutils.longforquery（android.database.sqlite.sqlite.sqlitedatabase，java.lang.string，java.lang.string []）\r\n","Get a list of shared libraries on the device.":"获取设备上共享库的列表。\r\n","indicating whether this activity is able to\n run in multiple processes. ":"指示此活动是否能够\r\n 在多个过程中运行。\r\n","android.graphics.Paint.getTextPath(char[], int, int, float, float, android.graphics.Path)":"android.graphics.paint.getTextPath（char []，int，int，float，float，android.graphics.path）\r\n","Turn this item into HTML text, regardless of the type of data it\n actually contains.":"无论数据类型如何，将此项目变成HTML文本\r\n 实际包含。\r\n","Tries to make a new bitmap based on the dimensions of this bitmap,\n            setting the new bitmap's config to the one specified, and then copying\n            this bitmap's pixels into the new bitmap.":"试图根据此位图的尺寸制作新的位图，\r\n            将新的Bitmap的配置设置为指定的配置，然后复制\r\n            该位图的像素进入了新的位图。\r\n","This class provides a way to perform Bluetooth LE advertise operations, such as starting and\n            stopping advertising.":"该课程提供了执行蓝牙le广告操作的方法，例如开始和\r\n            停止广告。\r\n","android.graphics.BitmapRegionDecoder.newInstance(java.io.FileDescriptor, boolean)":"android.graphics.bitmapregiondecoder.newinstance（java.io.filedscriptor，boolean）\r\n","The user that this data corresponds to.":"此数据对应的用户。\r\n","android.graphics.RenderNode.getUseCompositingLayer()":"android.graphics.rendernode.getusecopositinglayer（）\r\n","android.bluetooth.le.ScanFilter.getServiceSolicitationUuid()":"android.bluetooth.le.scanfilter.getServicesoliticationuuid（）\r\n"," containing the name of the current foreground\n            application package at the time the assist was invoked.":" 包含当前前景的名称\r\n            调用辅助时的申请包。\r\n","Android sparse depth point cloud format.":"Android稀疏深度点云格式。\r\n","android.graphics.drawable.shapes.ArcShape.ArcShape(float, float)":"android.graphics.drawable.shapes.arcshape.arcshape（float，float）\r\n","Sets the position of the RenderNode.":"设置渲染的位置。\r\n","This field is part of\n            ":"该领域是\r\n            \r\n","#EXTRA_SIZE":"#extra_size\r\n","android.graphics.drawable.LayerDrawable.getRightPadding()":"android.graphics.drawable.layerdrawable.getRightPadding（）\r\n","android.hardware.camera2.CameraManager":"android.hardware.camera2.cameramanager\r\n",", a specialized implementation\n            of ":"，专门的实施\r\n            的\r\n","android.content.pm.PackageManager.FEATURE_TELEPHONY":"android.content.pm.packagemanager.feature_telephony\r\n","Constant representing keyboard subclass.":"常数表示键盘子类。\r\n"," if the attribute was explicitly set to ":" 如果将属性明确设置为\r\n","Used to indicate that the SyncAdapter determined that it would need to issue\n            too many delete operations to the server in order to satisfy the request\n            (as defined by the SyncAdapter).":"用来表明SyncAdapter确定需要发行\r\n            为了满足请求，对服务器的删除操作太多\r\n            （如SyncAdapter所定义）。\r\n","android.content.BroadcastReceiver.abortBroadcast()":"android.content.broadcastreceiver.abortbroadcast（）\r\n","File descriptor of an entry in the AssetManager.":"AssetManager中条目的文件描述符。\r\n","\n            value that corresponds to\n            <a href=\"[TODO: @docRoot]guide/topics/resources/providing-resources.":"\r\n            对应于\r\n            <a href=\"[TODO：@docRoot]指南/主题/资源/提供-资源。\r\n"," being granted.":" 被授予。\r\n","#writeToParcel(ComponentName, Parcel)":"#writetoparcel（ComponentName，包裹）\r\n","android.drm.DrmInfo.DrmInfo(int, java.lang.String, java.lang.String)":"android.drm.drminfo.drminfo（int，java.lang.string，java.lang.string）\r\n","Draw the specified circle using the specified paint.":"使用指定的油漆绘制指定的圆圈。\r\n","android.drm.DrmInfoRequest.getMimeType()":"android.drm.drminforequest.getmimetype（）\r\n","MD5 hash computed over all file bytes.":"MD5哈希在所有文件字节上计算。\r\n","android.content.RestrictionEntry.TYPE_MULTI_SELECT":"android.content.resterictionEntry.type_multi_select\r\n","#setCursorFactory(android.database.sqlite.SQLiteDatabase.CursorFactory)":"#setCursorFactory（android.database.sqlite.sqlitedatabase.cursorfactory）\r\n","android.bluetooth.BluetoothGattServerCallback.onPhyRead(android.bluetooth.BluetoothDevice, int, int, int)":"android.bluetooth.bluetoothgattservercallback.onphyread（android.bluetooth.bluetoothdevice，int，int，int）\r\n","android.graphics.text.PositionedGlyphs.getAscent()":"android.graphics.text.positionedglyphs.getascent（）\r\n",": bits that encode the mode type.":"：编码模式类型的位。\r\n","android.content.pm.LauncherApps.getSuspendedPackageLauncherExtras(java.lang.String, android.os.UserHandle)":"android.content.pm.launcherapps.getsuspackagelauncherextras（java.lang.string，android.os.os.userhandle）\r\n","android.database.sqlite.SQLiteOpenHelper.onDowngrade(android.database.sqlite.SQLiteDatabase, int, int)":"android.database.sqlite.sqliteopenhelper.ondowngrade（android.database.sqlite.sqlite.sqlitedatabase，int，int）\r\n","android.graphics.text.LineBreaker.HYPHENATION_FREQUENCY_FULL":"android.graphics.text.linebreaker.hyphenation_frequency_full\r\n","android.content.Intent.ACTION_GET_RESTRICTION_ENTRIES":"android.content.intent.action_get_resteriction_entries\r\n","Bind a long value to this statement.":"将长期价值绑定到此陈述。\r\n","android.database.sqlite.SQLiteClosable.releaseReferenceFromContainer()":"android.database.sqlite.sqliteclosable.releaseerfernefromcontainer（）\r\n","Retrieve a dimensional for a particular resource ID for use\n            as a size in raw pixels.":"检索特定资源ID的维度\r\n            作为原始像素的大小。\r\n","Throws NotFoundException if the given ID does not exist.":"如果给定的ID不存在，则抛出NotFoundException。\r\n","android.drm.DrmManagerClient":"Android.drm.drmmanagerclient\r\n"," for access to USB devices (as a USB host)\n            and for controlling this device's behavior as a USB device.":" 用于访问USB设备（作为USB主机）\r\n            并用于控制该设备作为USB设备的行为。\r\n","android.content.pm.PackageItemInfo":"android.content.pm.packageiteminfo\r\n","android.graphics.Canvas.getMaximumBitmapHeight()":"android.graphics.canvas.getMaximumbitMapheight（）\r\n","android.graphics.Bitmap.copyPixelsFromBuffer(java.nio.Buffer)":"android.graphics.bitmap.copypixelsfrombuffer（java.nio.buffer）\r\n","android.content.pm.PackageManager.FEATURE_CAMERA_CAPABILITY_MANUAL_SENSOR":"android.content.pm.packagemanager.feature_camera_capibility_manual_sensor\r\n","android.content.IntentFilter.typesIterator()":"android.content.intentfilter.typesiterator（）\r\n","android.content.pm.PackageInfo.baseRevisionCode":"android.content.pm.packageinfo.baserevisioncode\r\n","android.content.RestrictionEntry.setSelectedState(boolean)":"android.content.grestriceentry.setselectedstate（boolean）\r\n","android.graphics.drawable.LayerDrawable.setLayerInsetRight(int, int)":"android.graphics.drawable.layerdrawable.setLayerInsetright（int，int）\r\n","if you try to add too many\n  values":"如果您尝试添加太多\r\n  价值\r\n","if parameters were unsatisfiable, such as lack of\n             disk space or unavailable media.":"如果参数不满意，例如缺乏\r\n             磁盘空间或不可用的媒体。\r\n","android.graphics.Canvas.drawGlyphs(int[], int, float[], int, int, android.graphics.fonts.Font, android.graphics.Paint)":"android.graphics.CANVAS.DRAWGLYPHS（int []，int，float []，int，int，android.graphics.fonts.fonts.font，android.graphics.paint）\r\n","android.content.res.loader.ResourcesProvider.close()":"android.content.res.res.loader.resourcesprovider.close（）\r\n","#hasSystemFeature(String)":"#hassystemfeature（字符串）\r\n","An activity to run when device is inserted into a analog (low end) dock.":"将设备插入模拟（低端）码头时运行的活动。\r\n","Sets the Outline to the rounded rect defined by the input rect, and corner radius.":"将轮廓设置为由输入RECT定义的圆形RECT和CORNER RADIUS。\r\n","Removes the last object returned by ":"删除最后一个返回的对象\r\n","android.content.ContentValues.ContentValues(android.content.ContentValues)":"android.content.contentvalues.contentvalues（android.content.ContentValues）\r\n","All four sides of the layers are padded with extra inset so as to provide\n            extra content to reveal within the clip path when performing affine transformations on the\n            layers.":"层的所有四个侧面都用额外的插图填充\r\n            在剪辑路径中揭示的额外内容在执行仿射转换时\r\n            层。\r\n","android.graphics.RenderNode.getMatrix(android.graphics.Matrix)":"机器人。图形。RenderNode。getMatrix（android。图形。矩阵)\r\n","Resumes rendering into the surface.":"恢复渲染到表面。\r\n","android.content.pm.PackageManager.FEATURE_TELEPHONY_MBMS":"android.content.pm.packagemanager.feature_telephony_mbms\r\n","android.graphics.SweepGradient.SweepGradient(float, float, long[], float[])":"android.graphics.sweepgradient.sweepgradient（float，float，long []，float []）\r\n","android.graphics.Canvas.drawBitmap(android.graphics.Bitmap, android.graphics.Matrix, android.graphics.Paint)":"android.graphics.canvas.drawbitmap（android.graphics.bitmap，android.graphics.matrix，android.graphics.paint）\r\n","android.database.sqlite.SQLiteQueryBuilder.appendWhereEscapeString(java.lang.String)":"android.database.sqlite.sqlitequerybuilder.appendwhereescapestring（java.lang.string）\r\n","android.graphics.Typeface.MONOSPACE":"android.graphics.typeface.monspace\r\n","AdvertisingSet":"广告网\r\n","Broadcast Action:  External media is unmounted because it is being shared via USB mass storage.":"广播动作：外部媒体被瓦解，因为它通过USB质量存储共享。\r\n","An Intent describing the choices you would like shown with\n            ":"描述您想要显示的选择的意图\r\n            \r\n","android.content.SyncStats.numConflictDetectedExceptions":"android.content.syncstats.numconflictDetectedExceptions\r\n","Advertise on medium frequency, around every 250ms.":"每250毫秒约每250毫秒就以中等频率进行广告。\r\n"," clause of the query.":" 查询的条款。\r\n","android.net.wifi.p2p.WifiP2pManager":"android.net.wifi.p2p.wifip2pmanager\r\n","The stroke ends with the path, and does not project beyond it.":"中风以路径结束，并且不会超越它。\r\n","to represent that the phone is in a desk dock.":"表示手机在桌上码头中。\r\n"," flag: return information about\n instrumentation in the package in\n ":" 标志：返回有关的信息\r\n 包装中的仪器\r\n \r\n","Return true if this region is empty":"如果此区域为空，则返回true\r\n","android.graphics.drawable.Drawable.mutate()":"android.graphics.drawable.drawable.mutate（）\r\n","This is the Android platform's base MIME type for a content: URI\n            containing a Cursor of a single item.":"这是Android平台的基础MIME类型：uri\r\n            包含单个项目的光标。\r\n","Add the names that are non-null in columns to s, separating\n            them with commas.":"添加列中非零的名称到s，分开\r\n            他们有逗号。\r\n","android.R.styleable#AndroidManifestPermission\n            &lt;permission&gt;":"Android.r.Stylable＃AndroidManifestPermission\r\n            ＆lt;许可＆gt;\r\n","android.content.pm.LauncherActivityInfo.getLoadingProgress()":"android.content.pm.launcheractivityinfo.getLoadingProgress（）\r\n","android.graphics.Color.getComponentCount()":"android.graphics.Color.getComponentCount()\r\n","#NOTIFY_SYNC_TO_NETWORK":"#notify_sync_to_network\r\n","Determine whether this AuthorityEntry matches the given data Uri.":"确定此授权内容是否匹配给定的数据URI。\r\n","android.content.ContentProviderClient.update(android.net.Uri, android.content.ContentValues, android.os.Bundle)":"android.content.contentproviderclient.update（android.net.uri，android.content.contentvalues，android.os.bundle）\r\n","Returns true if the matrix is identity.":"如果矩阵是身份，则返回true。\r\n","android.content.Intent.ACTION_GTALK_SERVICE_DISCONNECTED":"android.content.intent.action_gtalk_service_disconted\r\n","android.content.pm.LabeledIntent.LabeledIntent(java.lang.String, java.lang.CharSequence, int)":"android.content.pm.labeledintent.labeledintent（java.lang.string，java.lang.charsequence，int）\r\n","Information that is returned from resolving an intent\n            against an IntentFilter.":"从解决意图中返回的信息\r\n            反对意见。\r\n","Called when the drawable's resolved layout direction changes.":"当可绘制的解决布局方向变化时，请调用。\r\n"," of the communication channel to the\n            Service.":" 通信渠道\r\n            服务。\r\n","android.database.CursorWindow":"android.database.cursorwindow\r\n","Open a raw file descriptor to access data under a URI.":"打开一个原始文件描述符以访问URI下的数据。\r\n","Gets the cursor factory to be used for the query, as last configured by\n            ":"将光标工厂用于查询，最后由\r\n            \r\n","android.graphics.RenderNode.setAlpha(float)":"机器人。图形。RenderNode。setAlpha(浮点数)\r\n","if the column does not exist\n":"如果列不存在\r\n\r\n","Cursor#FIELD_TYPE_STRING":"光标＃field_type_string\r\n","Bind the value to an index.":"将值绑定到索引。\r\n","#MATCH_CATEGORY_HOST":"#match_category_host\r\n","Decode a new Bitmap from an InputStream.":"从输入流解码新的位图。\r\n","Returns one of the following which represent the type of the given SQL statement.":"返回以下代表给定SQL语句的类型之一。\r\n","Set the enabled setting for a package component (activity, receiver, service, provider).":"为软件包组件（活动，接收器，服务，提供商）设置启用设置。\r\n","Multi-plane Android RGB format":"多平面Android RGB格式\r\n","android.content.IntentFilter.countActions()":"android.content.intentfilter.countactions（）\r\n","Whether or not this provider is syncable.":"该提供商是否同步。\r\n","Set the base theme for this context.":"为此上下文设置基本主题。\r\n"," suggesting that the user will likely use a\n            keyboard as the primary input device for assistance.":" 建议用户可能会使用\r\n            键盘作为主要输入设备以提供帮助。\r\n","#toCharsString()":"#tocharsstring（）\r\n","Start an asynchronous sync operation.":"启动异步同步操作。\r\n","The coordinates of the center of the right eye.":"右眼中心的坐标。\r\n","Returns true if the database is opened as read only.":"如果数据库仅作为读取，则返回true。\r\n","The domain is unverified and unselected, and the application is unable to open web links\n            that resolve to the domain.":"该域未经验证和未选择，应用程序无法打开Web链接\r\n            这能解决到域。\r\n","Retrieve the logo associated with an activity.":"检索与活动相关的徽标。\r\n","Gets the current focus mode setting.":"获取当前的焦点模式设置。\r\n","ShapeDrawable constructor.":"可变形的构造函数。\r\n","android.graphics.Matrix.mapRadius(float)":"android.graphics.matrix.mapradius（float）\r\n","Retrieves the account ID associated with this object.":"检索与此对象关联的帐户ID。\r\n","android.drm.DrmInfoRequest.get(java.lang.String)":"android.drm.drminforequest.get（java.lang.string）\r\n","Convenience method that returns the width of this bitmap divided\n            by the density scale factor.":"返回该位图的宽度的便利方法\r\n            按密度尺度因子。\r\n","Retrieves a Non-Nullable Context this provider is running in, this is intended to be called\n            after ":"检索该提供商正在运行的不可删除的上下文，这旨在称为\r\n            后\r\n","Health Channel Connection State - Connecting":"健康频道连接状态 - 连接\r\n","Return the package name for a given resource identifier.":"返回给定资源标识符的软件包名称。\r\n","Return a String that unambiguously describes both the package and\n            class names contained in the ComponentName.":"返回一个明确描述软件包的字符串和\r\n            componentName中包含的类名称。\r\n","android.database.sqlite.SQLiteQueryBuilder.query(android.database.sqlite.SQLiteDatabase, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.os.CancellationSignal)":"android.database.sqlite.sqlitequerybuilder.query（android.database.sqlite.sqlite.sqlitedatabase，java.lang.string []字符串，java.lang.string，java.lang.string，android.os.cancellationsIgnal）\r\n","android.database.DataSetObservable":"android.database.datasetobservable\r\n","Return a new Context object for the current Context but whose resources\n            are adjusted to match the metrics of the given Display.":"返回当前上下文的新上下文对象，但其资源\r\n            进行调整以匹配给定显示屏的指标。\r\n","Appends one set of selection args to another.":"将一组选择附加到另一组。\r\n","Icon#createWithAdaptiveBitmapContentUri":"图标＃CreateWithAdaptiveBitmapcontenturi\r\n","Subclasses must call this method when they finish committing updates to notify all\n observers.":"子类必须在完成提交更新时调用此方法以通知所有\r\n 观察员。\r\n","Bluetooth LE advertising callbacks, used to deliver advertising operation status.":"蓝牙LE广告回调，用于提供广告操作状态。\r\n","android.content.ContentProviderClient.openFile(android.net.Uri, java.lang.String, android.os.CancellationSignal)":"android.content.contentproviderclient.openfile（android.net.uri，java.lang.string，android.os.os.cancellationsignal）\r\n","android.content.res.Configuration.setLocale(java.util.Locale)":"android.content.res.configuration.setlocale（java.util.locale）\r\n"," when the associated fragment/activity\n            is being stopped.":" 当相关的片段/活动\r\n            正在停止。\r\n","android.graphics.Matrix.set(android.graphics.Matrix)":"android.graphics.matrix.set（android.graphics.matrix）\r\n","android.graphics.Bitmap.recycle()":"android.graphics.bitmap.recycle（）\r\n","The key that is used in the <code>attributes</code> HashMap to pass the\n            ":"<code>属性中使用的键</code> hashmap通过\r\n            \r\n","Returns a description of the current primary clip on the clipboard\n            but not a copy of its data.":"返回剪贴板上当前主剪辑的描述\r\n            但不是其数据的副本。\r\n","android.database.DatabaseUtils.dumpCursor(android.database.Cursor, java.lang.StringBuilder)":"android.database.databaseutils.dumpcursor（android.database.cursor，java.lang.stringbuilder）\r\n","android.graphics.drawable.AnimatedVectorDrawable":"android.graphics.drawable.AnimatedVectorDrawable\r\n","android.content.SyncResult.hasSoftError()":"android.content.syncresult.hassofterror（）\r\n","android.graphics.Rect.union(android.graphics.Rect)":"机器人。图形。长联盟（android。图形。Rect）\r\n","Return list of all staged install sessions.":"所有上演安装会话的返回列表。\r\n","android.graphics.drawable.AnimationDrawable.getFrame(int)":"android.graphics.drawable.animationdrawable.getFrame（int）\r\n","android.content.pm.PackageManager.getNameForUid(int)":"android.content.pm.packagemanager.getnameforuid（int）\r\n","android.content.Intent.setPackage(java.lang.String)":"android.content.intent.setpackage（java.lang.string）\r\n","Throws NotFoundException if the given ID does\n             not exist.":"如果给定的ID确实有\r\n             不存在。\r\n","android.database.DataSetObservable.notifyInvalidated()":"android.database.datasetobservable.notifyInvalidated（）\r\n","android.content.Context.getDisplay()":"android.content.context.getDisplay（）\r\n","android.graphics.Canvas.clipOutRect(android.graphics.RectF)":"android.graphics.canvas.clipoutrect（android.graphics.Rectf）\r\n","Returns a color integer associated with a particular resource ID.":"返回与特定资源ID关联的颜色整数。\r\n","The recommended distance below the baseline for singled spaced text.":"单个间距文本基线以下的建议距离。\r\n","PackageManager#VERIFICATION_REJECT":"packageManager＃verification_reject\r\n","android.graphics.fonts.FontStyle":"android.graphics.fonts.fontstyle\r\n","Bitmap":"位图\r\n","android.bluetooth.le.BluetoothLeAdvertiser.stopAdvertisingSet(android.bluetooth.le.AdvertisingSetCallback)":"android.bluetooth.le.bluetoothleadvertiser.stopadvertisingset（android.bluetooth.Le.le.AdvertisingSetCallback）\r\n","android.content.Context.getString(int)":"android.content.context.getstring（int）\r\n","android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_MEDIA_PROJECTION":"android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_MEDIA_PROJECTION\r\n","android.graphics.Paint.CURSOR_AT":"android.graphics.paint.cursor_at\r\n","Possible bitmap configurations.":"可能的位图配置。\r\n","android.content.AbstractThreadedSyncAdapter.onUnsyncableAccount()":"android.content.abstractthreadedysyncadapter.onunsyncableaccount（）\r\n","indicating that no width\n has been specified.":"表明没有宽度\r\n 已指定。\r\n","android.content.Context.LAUNCHER_APPS_SERVICE":"android.content.context.launcher_apps_service\r\n","#setPivotY(float)":"#setPivotY(浮动)\r\n","Retrieve overall information about an application package defined in a\n            package archive file":"检索有关在A中定义的应用程序包的总体信息\r\n            软件包存档文件\r\n","\n            queries easier.":"\r\n            查询更容易。\r\n","android.content.pm.PermissionGroupInfo.priority":"android.content.pm.permissiongroupinfo.priority\r\n","#getConfidenceScore(String)":"#getConfidencesCore（String）\r\n","Returns the original image's height":"返回原始图像的高度\r\n","android.content.pm.FeatureInfo.reqGlEsVersion":"android.content.pm.featureinfo.reqglesversion\r\n","android.content.IntentFilter.addDataPath(java.lang.String, int)":"android.content.intentfilter.adddatapath（java.lang.string，int）\r\n","android.content.Context.CROSS_PROFILE_APPS_SERVICE":"android.content.context.cross_profile_apps_service\r\n","android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String, java.lang.Object[])":"android.database.sqlite.sqlitedatabase.execsql（java.lang.string，java.lang.object []）\r\n","android.content.res.Configuration.densityDpi":"android.content.Res.Configuration.dstensedpi\r\n","Called whenever the value of ":"每当价值\r\n","Specifies a tint blending mode for this drawable.":"为此drawable指定色调混合模式。\r\n","if width is <= 0, or height is <= 0\n":"如果宽度为<= 0，或高度为<= 0\r\n\r\n","\n            For example, AT+VGM=?.":"\r\n            例如，在+vgm =？。\r\n"," to launch the calendar application.":" 启动日历应用程序。\r\n","android.content.Context.obtainStyledAttributes(android.util.AttributeSet, int[], int, int)":"android.content.Context.ObtainStyLetAttributes（android.util.attributeset，int []，int，int，int）\r\n","singleTask":"单程\r\n","Generates a debugging string indicating the status.":"生成指示状态的调试字符串。\r\n","android.bluetooth.BluetoothSocket.getConnectionType()":"android.bluetooth.bluetoothsocket.getConnectionType（）\r\n","android.graphics.fonts.FontStyle.FONT_WEIGHT_EXTRA_BOLD":"android.graphics.fonts.fontstyle.font_weight_extra_bold\r\n","Returns a Drawable that can be used to draw the image inside this Icon, constructing it\n            if necessary.":"返回可绘制的可绘制的可绘制图像中图像的可绘制，构造它\r\n            如有必要。\r\n","Broadcast Action: Sent to a package that has been suspended by the system.":"广播动作：发送到已被系统暂停的软件包。\r\n","Returns a list of service UUIDs within the advertisement that are used to identify the\n            Bluetooth GATT services.":"返回广告中的服务uuid​​列表，用于识别\r\n            蓝牙Gatt服务。\r\n","A maximum weight value for the font":"字体的最大重量值\r\n"," value\n            indicating that it is unknown whether or not the screen is wide gamut.":" 价值\r\n            表明未知屏幕是否宽。\r\n","When called before the bound is set, the returned path is identical to\n            R.":"在设置界限之前调用时，返回的路径与\r\n            R.\r\n","Checks whether the given MIME type or path can be handled.":"检查给定的MIME类型或路径是否可以处理。\r\n","android.content.Context.WINDOW_SERVICE":"android.content.context.window_service\r\n","android.graphics.drawable.ColorDrawable.ColorDrawable(int)":"android.graphics.drawable.colordrawable.colordrawable（int）\r\n","android.graphics.Paint.getEndHyphenEdit()":"android.graphics.paint.getendhyphenedit（）\r\n","android.graphics.drawable.Drawable.setCallback(android.graphics.drawable.Callback)":"android.graphics.drawable.drawable.setCallback（android.graphics.drawable.callback）\r\n","android.content.Context.NETWORK_STATS_SERVICE":"android.content.context.network_stats_service\r\n","android.database.CrossProcessCursorWrapper":"android.database.crossprocesscursorwrapper\r\n","android.graphics.Color.RGBToHSV(int, int, int, float[])":"android.graphics.color.rgbtohsv（int，int，int，float []）\r\n","Launch a new activity.":"启动新活动。\r\n","Device profile: watch.":"设备配置文件：观看。\r\n","android.bluetooth.le.AdvertiseSettings.getTimeout()":"android.bluetooth.le..Advertisestings.getTimeOut（）\r\n","Return the number of data types in the filter.":"返回过滤器中数据类型的数量。\r\n","android.graphics.drawable.Drawable.unscheduleSelf(java.lang.Runnable)":"机器人。图形。可画的。可画的。unscheduleSelf（java。朗。可运行）\r\n","#setPosition(Rect)":"#setPosition（Rect）\r\n","Set a repeat count (which may be fractional) for the interpolator, and\n            whether the interpolator should mirror its repeats.":"为插装器设置重复计数（可能是分数），然后\r\n            插补器是否应反映其重复。\r\n","android.graphics.drawable.BitmapDrawable.hasMipMap()":"android.graphics.drawable.bitmapdrable.hasmipmap（）\r\n"," associated with this shortcut.":" 与此快捷方式相关联。\r\n","android.content.pm.ApplicationInfo.splitPublicSourceDirs":"android.content.pm.applicationinfo.splitpublicsourcedirs\r\n","OpenParams parameters":"OpenParams参数\r\n","android.content.ServiceConnection.onNullBinding(android.content.ComponentName)":"android.content.serviceconnection.onnullbinding（android.content.componentname）\r\n","#FLAG_MATCH_CACHED":"#flag_match_cached\r\n","The maximum smallest screen width the application is designed for.":"该应用程序设计的最大屏幕宽度。\r\n","android.content.res.ColorStateList.getColorForState(int[], int)":"android.content.Res.ColorStateList.getColorForState（int []，int）\r\n","android.drm.DrmInfoEvent.TYPE_ALREADY_REGISTERED_BY_ANOTHER_ACCOUNT":"android.drm.drminfoevent.type_already_registered_by_another_account\r\n","android.graphics.drawable.NinePatchDrawable.NinePatchDrawable(android.content.res.Resources, android.graphics.NinePatch)":"android.graphics.drawable.ninepatchdrawable.ninepatchdrawable（android.content.res.res.resources，android.graphics.ninepatch）\r\n","android.graphics.Canvas.drawColor(int, android.graphics.BlendMode)":"android.graphics.canvas.drawcolor（int，android.graphics.blendmode）\r\n","Indicates that both inquiry scan and page scan are disabled on the local\n Bluetooth adapter. ":"表示查询扫描和页面扫描都在本地禁用\r\n 蓝牙适配器。\r\n","Connect to an application service, creating it if needed.":"连接到应用程序服务，如果需要，创建它。\r\n","android.content.RestrictionsManager.hasRestrictionsProvider()":"android.content.strictionsmanager.hasrestrictionsprovider（）\r\n","android.content.BroadcastReceiver.getAbortBroadcast()":"android.content.broadcastreceiver.getAbortBroadcast（）\r\n","android.graphics.Bitmap.getConfig()":"android.graphics.bitmap.getConfig（）\r\n","Battery is discharging.":"电池正在排放。\r\n","android.content.Intent.ACTION_QUICK_CLOCK":"android.content.intent.action_quick_clock\r\n","Indicates whether the animation is currently running or not.":"指示动画当前正在运行。\r\n","android.database.DatabaseUtils.blobFileDescriptorForQuery(android.database.sqlite.SQLiteStatement, java.lang.String[])":"android.database.databaseutils.blobfiledescriptorforquery（android.database.sqlite.sqlitestatement，java.lang.string []）\r\n","android.graphics.Camera.rotateX(float)":"android.graphics.camera.Rotatex（float）\r\n","android.graphics.RenderNode.hasShadow()":"机器人。图形。RenderNode。哈斯沙多()\r\n","Compressed HEIC format.":"压缩HEIC格式。\r\n","Black-and-White: Treat edges by just rounding to nearest pixel boundary\n":"黑白：通过舍入到最近的像素边界来处理边缘\r\n\r\n","android.database.DatabaseUtils.dumpCursor(android.database.Cursor)":"android.database.databaseutils.dumpcursor（android.database.cursor）\r\n","android.content.RestrictionsManager.REQUEST_KEY_APPROVE_LABEL":"android.content.ErterctionsManager.request_key_approve_label\r\n","Preconcat the current matrix with the specified translation":"用指定的转换预先设置当前矩阵\r\n","The array index of near focus distance for use with\n ":"靠近焦点距离的阵列索引用于使用\r\n \r\n","SessionInfo":"SessionInfo\r\n","android.drm.ProcessedData.getSubscriptionId()":"android.drm.processeddata.getSubscriptionId（）\r\n","Information you can retrieve about a particular application.":"您可以检索有关特定应用程序的信息。\r\n","android.security.identity.IdentityCredentialStore":"Android.Security.Identity.IdentityCredentialStore\r\n","Indicates bonding (pairing) is in progress with the remote device.":"指示与远程设备进行键合（配对）正在进行中。\r\n","android.graphics.text.PositionedGlyphs.getFont(int)":"android.graphics.text.positionedglyphs.getfont（int）\r\n","StateListDrawable":"StatelistDrawable\r\n","Sets the number of columns in this window.":"设置此窗口中的列数。\r\n","android.content.Loader.cancelLoad()":"android.content.loader.cancelload（）\r\n","Activity Action: Perform a web search.":"活动动作：执行网络搜索。\r\n","The name of the extra used to define the icon, as a ShortcutIconResource, of a shortcut.":"用于将图标定义为捷径的捷径的额外名称。\r\n","Runs the provided SQL and returns a ":"运行提供的SQL并返回\r\n","android.content.pm.PackageManager.FEATURE_VR_MODE":"android.content.pm.packagemanager.feature_vr_mode\r\n","android.content.res.Resources.getResourceName(int)":"Android.content.Res.Res.Resources.GetResourCename（INT）\r\n","Android private opaque image format.":"Android私人不透明图像格式。\r\n","Create a shader that draws a linear gradient along a line.":"创建一个着色器，该着色器沿线绘制线性梯度。\r\n","Default class used to define the action to take when database corruption is reported\n            by sqlite.":"默认类用于定义数据库损坏时要采取的操作\r\n            由sqlite。\r\n","android.content.ContentResolver.EXTRA_SIZE":"android.content.contentresolver.extra_size\r\n","android.graphics.RenderNode.setRotationZ(float)":"android.graphics.rendernode.setrotationz（float）\r\n","android.bluetooth.BluetoothGattServer.connect(android.bluetooth.BluetoothDevice, boolean)":"android.bluetooth.bluetoothgattserver.connect（android.bluetooth.bluetoothdevice，boolean）\r\n","android.content.ContentResolver.QUERY_ARG_LIMIT":"android.content.contentresolver.query_arg_limit\r\n","android.content.ContentResolver.EXTRA_TOTAL_COUNT":"android.content.contentresolver.extra_total_count\r\n","android.bluetooth.BluetoothDevice":"android.bluetooth.bluetoothdevice\r\n","Broadcast Action: Sent when the device goes to sleep and becomes non-interactive.":"广播动作：当设备入睡并变得非交互式时发送。\r\n","Returns a mutable bitmap with the specified width and height.":"返回具有指定宽度和高度的可变位图。\r\n","Return an array of all of the POSIX secondary group IDs that have been\n            assigned to the given package.":"返回所有POSIX二级组ID的数组\r\n            分配给给定软件包。\r\n","The level of access this permission is protecting, as per\n ":"根据\r\n \r\n","android.content.Intent#ACTION_MAIN":"android.content.intent＃action_main\r\n","android.content.pm.ApplicationInfo.MEMTAG_OFF":"android.content.pm.applicationinfo.memtag_off\r\n","android.graphics.drawable.ShapeDrawable.setShaderFactory(android.graphics.drawable.ShaderFactory)":"android.graphics.drawable.shapedrawable.setshaderfactory（android.graphics.drawable.shaderfactory）\r\n","android.graphics.Paint.HINTING_OFF":"android.graphics.paint.hinting_off\r\n","\n          Whether or not the provider can be launched by components of other\n          applications.\n        ":"\r\n          是否可以由其他组件启动提供商\r\n          申请。\r\n        \r\n","Returns the manufacturer id.":"返回制造商ID。\r\n","Returns true if the current thread has a transaction pending.":"如果当前线程有待处理，则返回true。\r\n","Retrieve the number of times the animation will repeat. -or- Specify the number of times to repeat the animation.":"检索动画将重复的次数。 - 或 - 指定重复动画的次数。\r\n","Scan a file for OBB information.":"扫描文件以获取OBB信息。\r\n","android.graphics.Canvas.drawPicture(android.graphics.Picture, android.graphics.Rect)":"android.graphics.canvas.drawpicture（android.graphics.picture，android.graphics.Rect）\r\n","Packs the sRGB color defined by the specified red, green, blue and alpha\n            component values into an RGBA color long in the sRGB color space.":"包装由指定的红色，绿色，蓝色和alpha定义的SRGB颜色\r\n            组件值在SRGB颜色空间中为RGBA颜色长。\r\n","Cancels the dialog, invoking the ":"取消对话框，调用\r\n","android.content.pm.PackageInfo.splitNames":"android.content.pm.packageinfo.splitnames\r\n","android.database.DatabaseUtils":"android.database.databaseutils\r\n","android.content.res.Configuration.isLayoutSizeAtLeast(int)":"android.content.res.configuration.islayoutsizeatleast（int）\r\n","Subclasses override this to parse custom subelements.":"子类将其覆盖为解析自定义子元素。\r\n","android.graphics.SurfaceTexture.attachToGLContext(int)":"android.graphics.surfaceTexture.attachtoglcontext（int）\r\n","android.graphics.Rect.set(android.graphics.Rect)":"机器人。图形。长设置（android。图形。Rect）\r\n","android.companion.CompanionDeviceService":"android.companion.companiondeviceservice\r\n","#INSET_UNDEFINED":"#inset_undefined\r\n","android.graphics.SweepGradient.SweepGradient(float, float, int, int)":"android.graphics.sweepgradient.sweepgradient（float，float，int，int）\r\n","Update row(s) in a content URI.":"在内容URI中更新行。\r\n","Return true if the pending status is true of any matching authorities.":"如果任何匹配当局都是正确的，则返回true。\r\n","Receives call backs for changes to content.":"接收回电话以更改内容。\r\n","The UserHandle carried with intents.":"用户手带有意图。\r\n","android.graphics.drawable.GradientDrawable.getGradientCenterY()":"android.graphics.drawable.gradientdrawable.getGradientCentery（）\r\n","android.graphics.Canvas.drawPicture(android.graphics.Picture, android.graphics.RectF)":"android.graphics.canvas.drawpicture（android.graphics.picture，android.graphics.rectf）\r\n","Returns the value of the requested column as a long.":"返回请求列的值为long。\r\n","if neither of the two packages is signed.":"如果两个软件包都没有签名。\r\n","Activity Action: Pick an existing item, or insert a new item, and then edit it.":"活动操作：选择现有项目，或插入新项目，然后对其进行编辑。\r\n","android.drm.DrmManagerClient.checkRightsStatus(java.lang.String)":"android.drm.drmmanagerclient.checkrightsstatus（java.lang.string）\r\n","android.content.ContentProviderOperation.resolveExtrasBackReferences(android.content.ContentProviderResult[], int)":"android.content.ContentProvideroperation.ResolveExtrasBackReferences（android.content.ContentProviderResult []，int）\r\n","android.database.sqlite.SQLiteDatabase.query(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"android.database.sqlite.sqlitedatabase.query（java.lang.string，java.lang.string []，java.lang.string，java.lang.string，java.lang.string []，java.lang.lang.string，Java.lang.lang.string，Java.lang.string，， java.lang.string，java.lang.string）\r\n","android.content.Context.createAttributionContext(java.lang.String)":"android.content.Context.CreateAttributionContext（Java.lang.string）\r\n","android.graphics.Matrix.postSkew(float, float)":"android.graphics.matrix.postskew（float，float）\r\n","Return the number of categories in the filter.":"返回过滤器中的类别数。\r\n","android.content.Intent.ACTION_PASTE":"android.content.intent.action_paste\r\n","android.hardware.Camera.setDisplayOrientation(int)":"android.hardware.camera.setDisplayorientation（int）\r\n","android.graphics.Bitmap.getScaledWidth(android.util.DisplayMetrics)":"android.graphics.bitmap.getScaledWidth（android.util.displaymetrics）\r\n","Stops capturing and drawing preview frames to the surface, and\n            resets the camera for a future call to ":"停止捕获并绘制预览帧到表面，并\r\n            重置相机以使以后的电话\r\n","Descriptor permission: Allow signed write operations with\n            person-in-the-middle protection":"描述符许可：允许签名的写操作\r\n            中间人保护\r\n","android.telephony.ims.ImsManager":"android.telephony.ims.imsmanager\r\n","android.content.pm.PackageManager.FEATURE_WIFI_RTT":"android.content.pm.packagemanager.feature_wifi_rtt\r\n","Creates the root node of the URI tree.":"创建URI树的根节点。\r\n","android.bluetooth.BluetoothHealth.getMainChannelFd(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration)":"android.bluetooth.bluetoothhealth.getmainchannelfd（android.bluetooth.bluetoothdevice，android.bluetooth.bluetooth.bluetoothhealth phothealth healthappconfiguration）\r\n","Returns the number of values.":"返回值的数量。\r\n","android.graphics.NinePatch.setPaint(android.graphics.Paint)":"android.graphics.ninepatch.setpaint（android.graphics.paint）\r\n","Optional index with semantics depending on the intent action.":"可选索引具有语义的可选索引，具体取决于意图动作。\r\n","Retrieve the boolean value for the attribute at <var>index</var>.":"检索<var> index </var>属性的布尔值。\r\n","The name of the package that requested the installation, or null if not available.":"请求安装的软件包的名称，或者如果不可用的话。\r\n","Dismisses the dialog, invoking the ":"驳回对话框，调用\r\n","android.view.View#LAYOUT_DIRECTION_RTL":"android.view.view＃layout_direction_rtl\r\n","Add a copy of src to the path, offset by (dx,dy)":"将SRC的副本添加到路径上，被（DX，DY）抵消\r\n","shortcuts":"快捷方式\r\n","android.content.pm.ApplicationInfo.nativeLibraryDir":"android.content.pm.applicationinfo.nativelibrarydir\r\n","android.content.pm.PackageStats.codeSize":"android.content.pm.packagestats.codesize\r\n","Contains the user selection state for a package.":"包含软件包的用户选择状态。\r\n","android.content.PeriodicSync.period":"android.content.periodicsync.period\r\n","android.graphics.Path.setLastPoint(float, float)":"android.graphics.path.setlastpoint（float，float）\r\n","T:Android.Hardware.Camera+IPreviewCallback":"t：android.hardware.camera+ipreviewcallback\r\n"," declaration in the manifest":" 清单中的声明\r\n","Returns true if the sensor supports sensor additional information API":"如果传感器支持传感器其他信息API，则返回true\r\n","android.gesture.GestureOverlayView":"android.gesture.gestureoverlayview\r\n","android.graphics.fonts.FontFamily.getSize()":"android.graphics.fonts.fontfamily.getsize（）\r\n","android.graphics.Bitmap.getHeight()":"android.graphics.bitmap.getheight（）\r\n","#resolveActivity":"#resolveActivity\r\n","android.content.ComponentCallbacks":"android.content.componentCallbacks\r\n","Provides automatic line breaking for a <em>single</em> paragraph.":"提供A <em>单</em>段落的自动折线。\r\n","android.content.res.Configuration.updateFrom(android.content.res.Configuration)":"机器人。内容。res.配置。updateFrom（android。内容。res.配置)\r\n"," context here could lead to unexpected behavior in certain\n            ContentResolver APIs so it is highly recommended to pass a non-null context here.":" 这里的上下文可能导致某些人的意外行为\r\n            contentResolver API因此强烈建议在此处通过非零环境。\r\n","Size of the internal data size for the application.":"应用程序内部数据大小的大小。\r\n","android.content.pm.PackageManager.FEATURE_TOUCHSCREEN":"android.content.pm.packagemanager.feature_touchscreen\r\n","Headset state when SCO audio is not connected.":"当不连接SCO音频时耳机状态。\r\n","all":"全部\r\n","android.graphics.Paint.setTextLocale(java.util.Locale)":"android.graphics.paint.settextlocale（java.util.locale）\r\n","PorterDuff.Mode#DST_OVER PorterDuff.Mode.DST_OVER":"porterduff.mode＃dst_over porterduff.mode.dst_over\r\n","Return an iterator over the filter's data scheme specific parts.":"将迭代器返回过滤器的数据方案特定部分。\r\n","Returns a color state list associated with a particular resource ID and\n            styled for the current theme.":"返回与特定资源ID相关联的颜色状态列表和\r\n            为当前主题设计。\r\n","android.content.pm.PackageManager.FEATURE_LOCATION_GPS":"android.content.pm.packagemanager.feature_location_gps\r\n","android.content.pm.PackageManager.getLaunchIntentForPackage(java.lang.String)":"android.content.pm.packagemanager.getlaunchintentforpackage（java.lang.string）\r\n","Create a new BluetoothGattCharacteristic.":"创建一个新的蓝牙旁观。\r\n","RenderEffect":"Renderefect\r\n","Close this parser.":"关闭此解析器。\r\n","android.graphics.Paint.getTextRunCursor(java.lang.CharSequence, int, int, boolean, int, int)":"android.graphics.paint.gettextruncursor（Java.lang.CharSequence，int，int，int，boolean，int，int）\r\n","android.content.ComponentName.createRelative(android.content.Context, java.lang.String)":"android.content.componentname.磨损（android.content.context，java.lang.string）\r\n","An activity to run when device is inserted into a car dock.":"将设备插入汽车码头时运行的活动。\r\n","Adds optional information as key-value pairs to this object.":"将可选信息作为键值对添加到此对象。\r\n",": This is a device dedicated to showing UI\n            on a television.":"：这是一种用于显示UI的设备\r\n            在电视上。\r\n","Retrieve the raw Intent contained in this Item.":"检索本项目中包含的原始意图。\r\n","Change the installer associated with a given package.":"更改与给定软件包关联的安装程序。\r\n","#setMaxSqlCacheSize(int)":"#SetMaxsqlcachesize（int）\r\n","Convenience function for reading either a Messenger or null pointer from\n            a Parcel.":"从阅读Messenger或Null指针的便利功能\r\n            一个包裹。\r\n","android.graphics.Paint.measureText(java.lang.String)":"android.graphics.paint.measuretext（java.lang.string）\r\n","Add a copy of src to the path, transformed by matrix":"将SRC的副本添加到路径，由矩阵转换\r\n","android.content.QuickViewConstants.FEATURE_DOWNLOAD":"android.content.quickviewConstants.feature_download\r\n","\n          The name of a permission that clients must have to launch the\n          provider.\n        ":"\r\n          客户必须启动的许可名称\r\n          提供者。\r\n        \r\n"," interface with a new callback for\n finer-grained memory management.":" 与新回调的接口\r\n 细粒度的内存管理。\r\n","Return the enabled setting for an application.":"返回应用程序的启用设置。\r\n","Indicates whether this drawable will change its appearance based on\n            state.":"指示此绘制是否会根据\r\n            状态。\r\n","Get the paint's blend mode object. -or- Set or clear the blend mode.":"获取油漆的混合模式对象。 - 或设置或清除混合模式。\r\n",": bits that encode the size.":"：编码大小的位。\r\n","android.content.pm.PackageManager.verifyPendingInstall(int, int)":"android.content.pm.packagemanager.verifypendingInstall（int，int）\r\n","When a constraint violation occurs,no ROLLBACK is executed\n            so changes from prior commands within the same transaction\n            are preserved.":"发生约束违规时，未执行回滚\r\n            因此，从同一事务中的先前命令变化\r\n            保留。\r\n","Returns the pivot value for this display list on the X axis, in pixels.":"返回此显示列表在X轴上的枢轴值，以像素为单位。\r\n","android.graphics.ColorSpace.getComponentCount()":"android.graphics.colorspace.getComponentCount（）\r\n","android.hardware.ConsumerIrManager":"android.hardware.consumerirmanager\r\n","Determine whether the calling process of an IPC <em>or you</em> has been granted\n            permission to access a specific URI.":"确定是否已批准IPC <em>或您</em>的调用过程\r\n            访问特定URI的许可。\r\n","Battery is connected to power but not charging.":"电池连接到电源，但没有充电。\r\n","android.graphics.Camera.restore()":"android.graphics.camera.restore（）\r\n","System-level value for ":"系统级值\r\n","Adds a callback to listen to the animation events.":"添加回调以收听动画事件。\r\n","Return the bounds of the current clip (in local coordinates) in the\n            bounds parameter, and return true if it is non-empty.":"返回当前夹（以本地坐标）的边界\r\n            范围参数，如果它是非空的，则返回true。\r\n"," for accessing system storage\n            functions.":" 用于访问系统存储\r\n            功能。\r\n","android.database.Cursor.getBlob(int)":"android.database.cursor.getBlob（int）\r\n","value at which system high-priority\n receivers are placed; that is, receivers that should execute before\n application code. ":"在哪个系统上高优先级的价值\r\n 接收器被放置；也就是说，应该执行之前执行的接收器\r\n 应用程序代码。\r\n","Activity Action: Allow the user to select and return one or more existing\n            documents.":"活动行动：允许用户选择并返回一个或多个现有的现有\r\n            文件。\r\n","android.content.Context.createDisplayContext(android.view.Display)":"android.content.context.CreatedIsplayContext（android.view.display）\r\n","android.graphics.PorterDuffXfermode.PorterDuffXfermode(android.graphics.Mode)":"android.graphics.porterduffxfermode.porterduffxfermode（android.graphics.mode）\r\n","android.gesture.GestureUtils.computeOrientedBoundingBox(float[])":"android.gesture.gestureutils.computeoredboundingbox（float []）\r\n","The direction that the camera faces.":"相机面对的方向。\r\n","android.graphics.Canvas.drawPaint(android.graphics.Paint)":"android.graphics.canvas.drawpaint（android.graphics.paint）\r\n","Open a new private SQLiteDatabase associated with this Context's\n            application package.":"打开与此上下文相关联的新的私人sqlitedatabase\r\n            应用程序包。\r\n"," if the column doesn't exist.":" 如果列不存在。\r\n","Multi-plane Android YUV 420 format":"多平面Android YUV 420格式\r\n",":\n            The device supports secure removal of users.":"：\r\n            该设备支持安全删除用户。\r\n","android.content.Intent.CATEGORY_APP_FILES":"android.content.intent.category_app_files\r\n","android.database.ContentObservable":"android.database.ContentObservable\r\n","#SYNC_EXTRAS_IGNORE_SETTINGS":"#sync_extras_ignore_settings\r\n","Returns the distance from top of the underline to the baseline in pixels.":"返回从下划线的顶部到基线的距离。\r\n","android.content.ContentProvider.openFileHelper(android.net.Uri, java.lang.String)":"android.content.contentprovider.openfilehelper（android.net.uri，java.lang.string）\r\n","android.content.Loader.getId()":"android.content.loader.getID（）\r\n","Return the paint's Align value for drawing text. -or- Set the paint's text alignment.":"返回绘画文本的油漆对齐值。 - 或设置油漆的文本对齐。\r\n","android.content.pm.PackageItemInfo.name":"android.content.pm.packageiteminfo.name\r\n","android.content.Intent.CATEGORY_DEVELOPMENT_PREFERENCE":"android.content.intent.category_development_preference\r\n","android.content.Intent.ACTION_MEDIA_SHARED":"android.content.intent.action_media_shared\r\n","Execute the given SQL statement on all connections to this database.":"在与此数据库的所有连接上执行给定的SQL语句。\r\n","Fill the entire canvas' bitmap (restricted to the current clip) with the specified RGB color,\n            using srcover porterduff mode.":"用指定的RGB颜色填充整个画布的位图（仅限于当前夹），\r\n            使用SRCOVER PORTERDUFF模式。\r\n","Return if a shortcut is immutable, in which case it cannot be modified with any of\n            ":"返回捷径是不可变的，在这种情况下，不能使用任何一项修改\r\n            \r\n","android.graphics.drawable.Icon.TYPE_RESOURCE":"android.graphics.drawable.icon.type_resource\r\n"," flag: return information about\n intent receivers in the package in\n ":" 标志：返回有关的信息\r\n 包装中的意图接收器\r\n \r\n","Unregister an observer that has previously been registered with this\n            cursor via ":"取消注册以前已在此注册的观察者\r\n            光标通过 \r\n","android.database.DatabaseUtils.cursorDoubleToContentValuesIfPresent(android.database.Cursor, android.content.ContentValues, java.lang.String)":"android.database.databaseutils.cursordloubletocontentvaluesifpresent（android.database.cursor，android.content.content.contentvalues，java.lang.lang.string））\r\n"," to launch the music application.":" 启动音乐应用程序。\r\n","android.content.ComponentName.getPackageName()":"android.content.componentname.getpackagename（）\r\n","Constant representing error response for Set Report with unknown reason.":"以未知原因表示设置报告的不变响应。\r\n","android.graphics.drawable.LayerDrawable.PADDING_MODE_STACK":"android.graphics.drawable.layerdrawable.padding_mode_stack\r\n",": Set to true if the application is\n currently installed on external/removable/unprotected storage. ":"：如果应用程序为\r\n 当前安装在外部/可移动/未保护存储上。\r\n","Gets the Green component from an integer color.":"从整数颜色获取绿色分量。\r\n","Retrieve a dimensional unit attribute at <var>index</var>.":"检索<var>索引</var>的尺寸单位属性。\r\n","android.app.Service#startForeground(int, android.app.Notification)\n            startForeground(int, android.app.Notification)":"android.app.service＃startEfreground（int，android.app.notification）\r\n            starterforeground（int，android.app.notification）\r\n","android.content.pm.PackageManager.getResourcesForActivity(android.content.ComponentName)":"android.content.pm.packagemanager.getResourcesForActivity（android.content.componentname）\r\n","android.content.ContentProviderOperation.isWriteOperation()":"android.content.contentProvideroperation.isWriteOperation（）\r\n","android.content.pm.PermissionInfo.descriptionRes":"android.content.pm.permissioninfo.descriptionres\r\n"," value\n            indicating that the screen is wide gamut.":" 价值\r\n            表明屏幕是广泛的。\r\n","android.bluetooth.BluetoothHidDevice.ERROR_RSP_UNSUPPORTED_REQ":"android.bluetooth.bluetoothhiddevice.error_rsp_unsupported_req\r\n","Gets the focal length (in millimeter) of the camera.":"获取相机的焦距（以毫米为单位）。\r\n","Register to watch for session lifecycle events.":"注册以观看会话生命周期事件。\r\n","android.drm.DrmManagerClient.checkRightsStatus(java.lang.String, int)":"android.drm.drmmanagerclient.checkrightsstatus（java.lang.string，int）\r\n","Copies cursor data into the window.":"将光标数据复制到窗口中。\r\n","android.content.res.TypedArray.peekValue(int)":"android.content.res.typedarray.peekvalue（int）\r\n","Health Channel Connection State - Disconnecting":"健康频道连接状态 - 断开连接\r\n","android.graphics.drawable.AnimationDrawable.run()":"android.graphics.drawable.animationdrawable.run（）\r\n","Returns the total amount of advance consumed by this positioned glyphs.":"返回该位置的字形消耗的预付总量。\r\n","Return a List of all installed packages that are currently holding any of\n            the given permissions.":"返回当前持有的所有安装软件包的列表\r\n            给定的权限。\r\n","android.bluetooth.BluetoothGattServer.removeService(android.bluetooth.BluetoothGattService)":"android.bluetooth.bluetoothgattserver.removeservice（android.bluetooth.bluetoothgattservice）\r\n","android.content.SharedPreferences.registerOnSharedPreferenceChangeListener(android.content.OnSharedPreferenceChangeListener)":"android.content.sharedPreferences.RegisteronSharedPreferencechangelistener（android.content.OnsharedPreferenceChangeChangeListener）\r\n","android.database.ContentObserver":"android.database.contentobserver\r\n","android.graphics.text.TextRunShaper":"android.graphics.text.textrunshaper\r\n","Create an Item consisting of a single block of (possibly styled) text,\n with an alternative HTML formatted representation.":"创建一个由单个块（可能是样式的）文本组成的项目，\r\n 具有替代性HTML格式表示。\r\n","Activity Action: Perform a data synchronization.":"活动动作：执行数据同步。\r\n","android.graphics.drawable.GradientDrawable.getGradientCenterX()":"android.graphics.drawable.gradientdrawable.getGradientCenterx（）\r\n","android.content.Intent.ACTION_PROVIDER_CHANGED":"android.content.intent.action_provider_changed\r\n","android.graphics.Paint.CURSOR_AT_OR_AFTER":"android.graphics.paint.cursor_at_or_after\r\n","Utility method to run the query on the db and return the value in the\n            first column of the first row.":"实用方法运行DB上的查询并返回该值\r\n            第一行的第一列。\r\n","Unregister for receiving callbacks whenever the associated device comes in and out of range.":"每当关联的设备进出范围时，请取消注册。\r\n","#startInsert":"#startinsert\r\n","android.content.pm.LauncherApps.registerCallback(android.content.pm.Callback)":"android.content.pm.launcherapps.registercallback（android.content.pm.callback）\r\n","Always returns false.":"总是返回false。\r\n","Activity Action: Allow the user to create a new document.":"活动操作：允许用户创建一个新文档。\r\n","RuntimeException":"RuntimeException\r\n","Get the locale list. -or- Set the locale list.":"获取场地列表。 - 或 - 设置语言环境列表。\r\n","android.graphics.drawable.shapes.Shape.resize(float, float)":"android.graphics.drawable.shapes.shape.resize（float，float）\r\n","Icon#createWithFilePath(String)":"图标＃CreateWithFilePath（字符串）\r\n","android.database.sqlite.SQLiteDatabase.MAX_SQL_CACHE_SIZE":"android.database.sqlite.sqlitedatabase.max_sql_cache_size\r\n","Retrieve a set of activities that should be presented to the user as\n            similar options.":"检索应呈现给用户的一组活动\r\n            类似的选项。\r\n","Provides information about the package it is in; typically used if\n            a package does not contain a ":"提供有关其包装包的信息；通常使用\r\n            包装不包含\r\n","#RADIUS_AUTO":"#radius_auto\r\n","#resolveService":"#解析服务\r\n","android.graphics.RenderNode.beginRecording()":"android.graphics.rendernode.beginrecording（）\r\n","Interface used to allow the creator of a dialog to run some code when the\n dialog is canceled.":"用于允许对话框创建者的接口可以在\r\n 对话框已取消。\r\n","android.content.ContentProviderOperation.resolveValueBackReferences(android.content.ContentProviderResult[], int)":"android.content.contentProvideroperation.ResolveValueBackReferences（android.content.content.contentproviderresult []，int）\r\n","android.content.res.AssetFileDescriptor":"机器人。内容。res.AssetFileDescriptor\r\n","Returns a list of service solicitation UUIDs within the advertisement that we invite to connect.":"返回我们邀请连接的广告中的服务招标列表。\r\n","android.graphics.RenderEffect.createBitmapEffect(android.graphics.Bitmap, android.graphics.Rect, android.graphics.Rect)":"android.graphics.rendereffect.createbitmapeffect（android.graphics.bitmap，android.graphics.Rect，android.graphics.Rect）\r\n","android.content.RestrictionEntry.TYPE_BUNDLE":"android.content.gresterriceentry.type_bundle\r\n","android.content.Intent.ACTION_MEDIA_MOUNTED":"android.content.intent.action_media_mounted\r\n","#setExtras(PersistableBundle)":"#SetExtras（PersistableBundle）\r\n","A style resource identifier (in the package's resources) of this\n            activity's theme.":"样式资源标识符（在包装资源中）\r\n            活动的主题。\r\n","android.bluetooth.BluetoothGattDescriptor.BluetoothGattDescriptor(java.util.UUID, int)":"android.bluetooth.bluetoothgattdescriptor.bluetoothgattdescriptor（java.util.uuid，int）\r\n","to allow the current component value to be\n overwritten, even if it is already set.":"允许当前组件值为\r\n 即使已经设置了它，即使它已经设置了。\r\n","android.content.Intent.ACTION_MY_PACKAGE_SUSPENDED":"android.content.intent.action_my_package_suspended\r\n","android.content.Intent.resolveTypeIfNeeded(android.content.ContentResolver)":"android.content.intent.resolvetypeifneed（android.content.contentresolver）\r\n","android.app.Activity#RESULT_OK":"android.app.Activity＃result_ok\r\n","android.bluetooth.le.ScanRecord.getTxPowerLevel()":"android.bluetooth.le.scanrecord.gettxpowerlevel（）\r\n","Bit in ":"刻在\r\n","Creates a ContentQueryMap that caches the content backing the cursor":"创建一个contentquerymap，该图表缓存备份光标的内容\r\n","Throws FileNotFoundException of no\n data of the desired type exists under the URI.\n":"抛出否\r\n 所需类型的数据存在于URI下。\r\n\r\n","\n            that allows you to specify the\n            user the broadcast will be sent to.":"\r\n            这使您可以指定\r\n            用户广播将发送到。\r\n","android.graphics.drawable.Drawable.getMinimumHeight()":"android.graphics.drawable.drawable.getminimumheight（）\r\n","android.graphics.RegionIterator.RegionIterator(android.graphics.Region)":"android.graphics.gregioniterator.gregioniterator（android.graphics.region）\r\n","Removes a whitelisted restricted permission for an app.":"删除应用程序的白名单受限权限。\r\n","Sets the currently displayed drawable by index.":"按索引设置当前显示的drawable。\r\n","android.content.pm.ShortcutManager.requestPinShortcut(android.content.pm.ShortcutInfo, android.content.IntentSender)":"android.content.pm.shortcutmanager.requestpinshortcut（android.content.pm.shortcutinfo，android.content.intentsender）\r\n","android.database.Cursor.getInt(int)":"android.database.cursor.getint（int）\r\n","F:Android.Bluetooth.LE.ScanSettings+Builder.SetScanMode":"F：android.bluetooth.le.Scansettings+Builder.setscanmode\r\n","Creates a ShapeDrawable with a specified Shape.":"创建具有指定形状的形状。\r\n","DataSetObserver":"DataSetobserver\r\n","Changes this drawable to use a single color instead of a gradient.":"更改此绘制以使用单个颜色而不是渐变。\r\n","The digital rights have not been acquired for the rights-protected content.":"数字权利尚未获得受权保护的内容。\r\n","Returns the width of the character at the given offset.":"在给定偏移量下返回角色的宽度。\r\n","android.content.pm.ShortcutInfo.isImmutable()":"android.content.pm.shortcutinfo.isimmutable（）\r\n","Return an ":"返回\r\n","The package name of the application making the request.":"提出请求的应用程序的包名称。\r\n","android.bluetooth.BluetoothGattDescriptor.PERMISSION_READ":"android.bluetooth.bluetoothgattdescriptor.permission_read\r\n","android.graphics.Path.Path()":"android.graphics.path.path（）\r\n","#screenWidthDp":"#screenwidthdp\r\n","#versionCode":"#versionCode\r\n","android.graphics.text.LineBreaker":"android.graphics.text.line Breaker\r\n","android.content.ContentProviderOperation.newCall(android.net.Uri, java.lang.String, java.lang.String)":"android.content.ContentProviderOperation.newcall（android.net.uri，java.lang.string，java.lang.string）\r\n","android.content.ContentResolver":"android.content.ContentResolver\r\n","android.content.Intent.ACTION_DIAL":"android.content.intent.action_dial\r\n","android.content.ContentQueryMap":"android.content.contentquerymap\r\n","This method returns an iterator object that can be used to iterate over\n all values of the metadata.":"此方法返回一个可以用来迭代的迭代对象\r\n 元数据的所有值。\r\n","An integer session ID that an operation is working with.":"操作正在使用的整数会话ID。\r\n","android.content.Intent.ACTION_ASSIST":"android.content.intent.action_assist\r\n","android.graphics.Outline.setAlpha(float)":"android.graphics.outline.setalpha（float）\r\n",":\n            The device implements headtracking suitable for a VR device.":"：\r\n            该设备实现适用于VR设备的开头。\r\n","android.graphics.Color.isInColorSpace(long, android.graphics.ColorSpace)":"android.graphics.color.isincolorspace（long，android.graphics.colorspace）\r\n","android.graphics.Interpolator.reset(int)":"android.graphics.interpolator.reset（int）\r\n","PendingResult#finish PendingResult.finish()":"pendresult＃完成pendingresult.finish（）\r\n","android.graphics.Bitmap.hasAlpha()":"android.graphics.bitmap.hasalpha（）\r\n","android.content.pm.CrossProfileApps.createRequestInteractAcrossProfilesIntent()":"android.content.pm.crossprofileapps.createrequeaterequestractactacrossprofilesintent（）\r\n","Called when the zoom value has changed during a smooth zoom.":"在光滑变焦期间变焦值发生变化时调用。\r\n","android.content.pm.PermissionInfo.FLAG_SOFT_RESTRICTED":"android.content.pm.permissioninfo.flag_soft_rentered\r\n","android.content.Context.bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)":"android.content.context.bindserviceasuser（android.content.intent，android.content.serviceconnection，int，android.os.userhandle）\r\n","Names of the process(es) this instrumentation will run in.":"该过程的名称将在此仪器中运行。\r\n","Set a boolean value in the preferences editor, to be written back\n once ":"在首选项编辑器中设置布尔值\r\n 一次\r\n","Does a join on two cursors using the specified columns.":"使用指定的列在两个光标上加入。\r\n","Parcelable methods":"可穿戴方式\r\n","Specify a color and Porter-Duff mode to be the color filter for this\n            drawable.":"为此指定颜色和搬运工模式为颜色过滤器\r\n            可绘制。\r\n","android.net.wifi.aware.WifiAwareManager":"android.net.wifi.aware.wifiawaremanager\r\n","android.graphics.ImageFormat.RAW10":"android.graphics.imageformat.raw10\r\n","Change the global fade duration when a new drawable is entering\n            the scene.":"在进入新的可绘制对象时更改全局淡出持续时间\r\n            的场景。\r\n","The outer edges of a join meet with a straight line\n":"连接的外边缘与一条直线\r\n\r\n","android.content.IntentFilter.addAction(java.lang.String)":"android.content.intentfilter.Addaction（java.lang.string）\r\n","android.content.IntentFilter.countDataSchemes()":"android.content.intentfilter.countdataschemes（）\r\n","A convenience class that lets you present an array of Cursors as a single linear Cursor.":"一个方便类，允许您将游标数组呈现为单个线性游标。\r\n","Intent extra: The name of a permission group.":"意图额外：权限组的名称。\r\n","Helper for getFlags(), returning true if ANTI_ALIAS_FLAG bit is set\n            AntiAliasing smooths out the edges of what is being drawn, but is has\n            no impact on the interior of the shape. -or- Helper for setFlags(), setting or clearing the ANTI_ALIAS_FLAG bit\n            AntiAliasing smooths out the edges of what is being drawn, but is has\n            no impact on the interior of the shape.":"getflags（）的助手\r\n            抗血液平滑了所绘制的内容的边缘，但有\r\n            对形状的内部没有影响。 - 或助手用于setFlags（），设置或清除anti_alias_flag位\r\n            抗血液平滑了所绘制的内容的边缘，但有\r\n            对形状的内部没有影响。\r\n","android.content.Intent.putExtra(java.lang.String, byte[])":"android.content.intent.putextra（java.lang.string，byte []）\r\n","Animatable":"动画\r\n","android.database.sqlite.SQLiteDatabase.setCustomScalarFunction(java.lang.String, java.util.function.UnaryOperator)":"android.database.sqlite.sqlitedatabase.setcustomscalfunction（java.lang.string，java.util.function.unaryoperator）\r\n","android.database.AbstractCursor.mCurrentRowID":"机器人。数据库。AbstractCursor.麦克伦特罗德\r\n","Update this Rect to enclose itself and the specified rectangle.":"更新此Rect以将自身和指定的矩形括起来。\r\n","android.graphics.drawable.LayerDrawable.getLayerInsetRight(int)":"android.graphics.drawable.layerdrawable.getLayerInSetright（int）\r\n","android.graphics.Paint.isAntiAlias()":"android.graphics.paint.isantialias（）\r\n","android.content.Intent.getScheme()":"android.content.intent.getscheme（）\r\n","android.graphics.Bitmap.prepareToDraw()":"android.graphics.bitmap.preparetodraw（）\r\n","Sets the intrinsic (default) width for this shape.":"为此形状设置固有的（默认）宽度。\r\n","android.drm.DrmStore.DrmStore()":"android.drm.drmstore.drmstore（）\r\n","android.graphics.drawable.AnimationDrawable.start()":"android.graphics.drawable.animationdrawable.start（）\r\n","android.bluetooth.BluetoothServerSocket.close()":"android.bluetooth.bluetoothserversocket.close（）\r\n","#getComponentCount()":"#getComponentCount（）\r\n","Create an Item consisting of an arbitrary URI.":"创建一个由任意URI组成的项目。\r\n","android.graphics.Color.green()":"android.graphics.color.green（）\r\n","#parseUri":"#Parseuri\r\n","Sets GPS latitude coordinate.":"设置GPS纬度坐标。\r\n","android.graphics.RenderNode.isForceDarkAllowed()":"机器人。图形。RenderNode。isForceDarkAllowed()\r\n","android.graphics.RenderNode.hasIdentityMatrix()":"机器人。图形。RenderNode。hasIdentityMatrix（）\r\n","Used to indicate that the activity can be used in a car environment.":"用于表明该活动可用于汽车环境。\r\n","ContentProvider#update ContentProvider.update":"ContentProvider＃Update ContentProvider.update\r\n","Thrown if the resources for the given\n activity could not be loaded.":"如果给定的资源\r\n 活动无法加载。\r\n","android.content.Context.POWER_SERVICE":"android.content.context.power_service\r\n","Removes a previously registered observer.":"删除先前注册的观察者。\r\n","android.content.SyncResult.toDebugString()":"android.content.syncresult.todebugstring（）\r\n","If the given permission is not allowed for a particular process\n            and user ID running in the system, throw a ":"如果不允许给定权限\r\n            和在系统中运行的用户ID，投掷\r\n","android.content.ClipData.newPlainText(java.lang.CharSequence, java.lang.CharSequence)":"android.content.clipdata.newplaintext（java.lang.charsequence，java.lang.charsequence）\r\n","Get the paint's colorfilter (maybe be null).":"获取油漆的ColorFilter（也许是无效的）。\r\n","#setOval(int, int, int, int)":"#setoval（int，int，int，int）\r\n","android.content.pm.PackageInfo.instrumentation":"android.content.pm.packageinfo.Instrumentation\r\n","android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_MEDIA_PLAYBACK":"android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_MEDIA_PLAYBACK\r\n","if the image format is not supported or can not be decoded.\n":"如果不支持图像格式或无法解码。\r\n\r\n","TX power is not present in the packet.":"数据包中不存在TX功率。\r\n","android.graphics.drawable.RippleDrawable.RippleDrawable(android.content.res.ColorStateList, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)":"android.graphics.drawable.rippledrawable.rippledrawable（android.content.Res.ColorStateList，android.graphics.graphics.drawable.drawable.drawable.drawable.drawable，android.graphics.drawable.drawable.drawable.drawable））\r\n","android.drm.DrmManagerClient.getOriginalMimeType(android.net.Uri)":"android.drm.drmmanagerclient.getoriginalmimetype（android.net.uri）\r\n","android.content.pm.PackageInstaller.updateSessionAppIcon(int, android.graphics.Bitmap)":"android.content.pm.packageinstaller.updatesessionappicon（int，android.graphics.bitmap）\r\n","android.graphics.SurfaceTexture.updateTexImage()":"android.graphics.surfaceTexture.updateteximage（）\r\n","Open a data stream for reading a raw resource.":"打开数据流以读取原始资源。\r\n","Sets a list of string values that can be selected by the user.":"设置用户可以选择的字符串值列表。\r\n","android.database.Cursor.getLong(int)":"android.database.cursor.getlong（int）\r\n","Add a closed rectangle contour to the path":"在路径上添加封闭的矩形轮廓\r\n","Capable of running inside a parent activity container.":"能够在父活动容器中运行。\r\n","android.companion.BluetoothDeviceFilter":"android.companion.bluetoothdeviceficefilter\r\n","Retrieve the bounds of the current clip (in local coordinates).":"检索当前夹的边界（在局部坐标中）。\r\n"," members and taken as a parameter of  several types.":" 成员并将其作为几种类型的参数。\r\n","android.telephony.SubscriptionManager":"android.telephony.subscriptionManager\r\n","android.bluetooth.BluetoothGattService.addCharacteristic(android.bluetooth.BluetoothGattCharacteristic)":"android.bluetooth.bluetoothgattservice.addcharacteristic（android.bluetooth.bluetoothgatterictic）\r\n","android.graphics.drawable.ShapeDrawable.ShapeDrawable()":"android.graphics.drawable.shapetrawable.shapedrawable（）\r\n","android.content.RestrictionEntry.TYPE_BUNDLE_ARRAY":"android.content.resterictionEntry.type_bundle_array\r\n","Registers a callback to be invoked when a change happens to a preference.":"当更改发生偏好时，要调用一个回调。\r\n","android.content.Context.BLUETOOTH_SERVICE":"android.content.context.bluetooth_service\r\n","android.graphics.Canvas.clipOutRect(float, float, float, float)":"android.graphics.canvas.clipoutrect（浮点，浮点，浮点，浮点）\r\n","Store a color to use whenever this Icon is drawn.":"每当绘制此图标时，存储一种颜色。\r\n","android.content.ContentResolver.getMasterSyncAutomatically()":"android.content.contentresolver.getMastersyncautomation（））\r\n","AdaptiveIconDrawable":"适应性训练\r\n","android.graphics.drawable.Drawable.setDither(boolean)":"android.graphics.drawable.drawable.setdither（boolean）\r\n"," for inflating layout resources in this\n            context.":" 为了使布局资源充气\r\n            语境。\r\n","android.content.pm.InstrumentationInfo.dataDir":"android.content.pm.instrumentationinfo.datadir\r\n","android.content.Loader.Loader(android.content.Context)":"android.content.loader.loader（android.content.context）\r\n",": The device includes a light sensor.":"：该设备包括一个光传感器。\r\n"," that takes the four float coordinates of\n            the bounds rectangle.":" 这需要四个浮点数坐标\r\n            边界矩形。\r\n"," value\n            indicating that the screen is not HDR (low/standard dynamic range).":" 价值\r\n            表明屏幕不是HDR（低/标准动态范围）。\r\n","A class with constants representing possible return values for Bluetooth APIs.":"具有代表蓝牙API的可能返回值的类。\r\n","android.graphics.fonts.Font.getLocaleList()":"android.graphics.fonts.font.getLocalelist（）\r\n","Broadcast Action:  Device is shutting down.":"广播动作：设备正在关闭。\r\n","This class provides the public APIs to control the LeAudio profile.":"该课程提供了控制Leaudio个人资料的公共API。\r\n","Returns true if smooth zoom is supported.":"如果支持光滑的缩放，则返回true。\r\n","Apply this matrix to the rectangle, and write the transformed rectangle back into it.":"将此矩阵应用于矩形，然后将转换后的矩形写回其中。\r\n","Update the texture image to the most recent frame from the image stream.":"将纹理图像更新为图像流的最新帧。\r\n","Get the paint's typeface object.":"获取油漆的字体对象。\r\n","Broadcast Action: Sent to the system package verifier when a package is\n            verified.":"广播操作：包含在包的情况下，发送到系统软件包验证仪\r\n            经过验证。\r\n","The rights need to be removed completely.":"权利需要完全删除。\r\n","android.content.pm.LauncherApps.unregisterPackageInstallerSessionCallback(android.content.pm.SessionCallback)":"android.content.pm.launcherapps.unregisterpackageinstallersessioncallback（android.content.pm.sessioncallback）\r\n","Returns the instance ID for this service":"返回此服务的实例ID\r\n","Applies a rotation transform around the X axis.":"应用围绕X轴的旋转转换。\r\n","android.content.pm.PackageManager.FEATURE_FINGERPRINT":"android.content.pm.packagemanager.feature_fingerprint\r\n","android.content.pm.verify.domain.DomainVerificationUserState.getPackageName()":"android.content.pm.verify.domain.domainverificationuserstate.getpackagename（）\r\n","android.content.pm.ApkChecksum.getInstallerPackageName()":"android.content.pm.apkchecksum.getinstallerpackagename（）\r\n","android.content.ClipData.getItemCount()":"android.content.clipdata.getitemcount（）\r\n","android.graphics.Paint.setARGB(int, int, int, int)":"android.graphics.paint.setargb（int，int，int，int）\r\n","Thrown if  the database engine was unable to acquire the\n            database locks it needs to do its job.":"如果数据库引擎无法获取\r\n            数据库锁定其工作所需的工作。\r\n","Gradient is circular.":"梯度是圆形的。\r\n","Execute this SQL statement, if it is not a SELECT / INSERT / DELETE / UPDATE, for example\n            CREATE / DROP table, view, trigger, index etc.":"执行此SQL语句，例如，如果不是SELECT / INSERT / DELETE / UPDATE，则执行\r\n            创建 /删除表，视图，触发器，索引等。\r\n","Broadcast sent to the primary user when an associated managed profile has become available.":"当关联的托管配置文件可用时，发送给主要用户的广播发送给了主要用户。\r\n",": bits that encode the night mode.":"：编码夜间模式的位。\r\n","android.graphics.Insets.of(android.graphics.Rect)":"android.graphics.insets.of（android.graphics.Rect）\r\n","android.drm.DrmSupportInfo.addFileSuffix(java.lang.String)":"android.drm.drmsupportinfo.addfilesuffix（java.lang.string）\r\n","android.content.SyncResult.delayUntil":"android.content.syncresult.delayuntil\r\n"," for controlling keyguard.":" 用于控制关键。\r\n","android.content.pm.ProviderInfo.forceUriPermissions":"android.content.pm.providerinfo.forceuripermissions\r\n","Retrieve the current graphical logo associated with this item.":"检索与此项目关联的当前图形徽标。\r\n","android.content.Intent.ACTION_DATE_CHANGED":"android.content.intent.action_date_changed\r\n","The resource ID of the label of the attribution From the &lt;manifest&gt; tag's \"label\"\n            attribute":"从＆lt; subtest＆gt;标签的“标签”\r\n            属性\r\n","Indicates that an error occurred and the reason is not known.":"表明发生错误，原因尚不清楚。\r\n","ContentProvider#delete ContentProvider.delete":"ContentProvider＃delete contentprovider.delete\r\n","android.content.pm.PackageInfo.gids":"android.content.pm.packageinfo.gids\r\n","android.graphics.ColorSpace.chromaticAdaptation(android.graphics.Adaptation, float[], float[])":"android.graphics.colorspace.ChromaticAdaptation（android.graphics.Adaptation，float []，float []）\r\n","android.content.Intent.EXTRA_CHOOSER_REFINEMENT_INTENT_SENDER":"android.content.intent.extra_chooser_refinement_intent_sender\r\n","Callback when advertising could not be started.":"当广告无法启动时回调。\r\n","PatternMatcher#PATTERN_SUFFIX":"patternmatcher＃pattern_suffix\r\n"," used to return data back to the sender.":" 用于将数据返回发件人。\r\n","Extended ":"扩展\r\n","android.graphics.pdf.PdfDocument.finishPage(android.graphics.pdf.Page)":"android.graphics.pdf.pdfdocument.finishpage（android.graphics.pdf.page）\r\n","Icon#createWithAdaptiveBitmap":"图标＃CreateWithAdaptiveBitMap\r\n","android.graphics.RenderNode.setPosition(android.graphics.Rect)":"android.graphics.rendernode.setPosition（android.graphics.Rect）\r\n","Broadcast Action:  External media is present, but not mounted at its mount point.":"广播动作：存在外部媒体，但不安装在其安装点。\r\n","[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] ":"[sa + da -sa * da，sc + dc -sc * dc]\r\n","android.content.res.TypedArray.getChangingConfigurations()":"android.content.res.typedarray.getChangingConfigurations（）\r\n","Constructor used to dynamically create this drawable.":"用于动态创建此绘制的构造函数。\r\n","Set the region to the specified rectangle":"将区域设置为指定的矩形\r\n","Constant representing joystick subclass.":"不断代表操纵杆子类。\r\n","android.content.pm.PackageManager.FEATURE_COMPANION_DEVICE_SETUP":"android.content.pm.packagemanager.feature_companion_device_setup\r\n","android.graphics.Outline.setRect(android.graphics.Rect)":"android.graphics.outline.setRect（android.graphics.Rect）\r\n","DrmStore.RightsStatus":"drmstore.rightsstatus\r\n","Returns an optional array of private data, used by the UI system for\n            some bitmaps.":"返回一个可选的私人数据，UI系统使用\r\n            一些位图。\r\n","Retrieve the resources associated with an activity.":"检索与活动相关的资源。\r\n","android.graphics.RenderNode.setPosition(int, int, int, int)":"android.graphics.rendernode.setposition（int，int，int，int）\r\n","android.bluetooth.le.AdvertiseCallback":"android.bluetooth.le.Advertisecallback\r\n","Returns the width of a given range.":"返回给定范围的宽度。\r\n","Android.Content.Context.BIND_WAIVE_PRIORITY":"android.content.context.bind_waive_priority\r\n","android.content.IntentFilter.hasCategory(java.lang.String)":"android.content.intentfilter.hascategory（java.lang.string）\r\n","android.database.DatabaseUtils.cursorStringToInsertHelper(android.database.Cursor, java.lang.String, android.database.InsertHelper, int)":"android.database.databaseutils.cursorstringtoinserthelper（android.database.cursor，java.lang.string，android.database.inserthelper，int）\r\n","android.content.pm.ShortcutInfo.getDisabledReason()":"android.content.pm.shortcutinfo.getDisabledReason（）\r\n","Activity Action: Perform a search.":"活动动作：执行搜索。\r\n","Draw the specified bitmap, scaling/translating automatically to fill the destination\n            rectangle.":"绘制指定的位图，自动缩放/翻译以填充目标\r\n            长方形。\r\n","Retrieve the font metrics information.":"检索字体指标信息。\r\n","android.content.res.Resources.obtainTypedArray(int)":"android.content.Res.Resources.ObtainTypedArray（int）\r\n","android.graphics.Point.offset(int, int)":"android.graphics.point.offset（int，int）\r\n","The maximum distance below the baseline for the lowest glyph in \n the font at a given text size.":"最低字形以下的最大距离\r\n 给定文本大小的字体。\r\n"," window on the given\n            ":" 给定的窗户\r\n            \r\n","android.drm.DrmEvent.getType()":"android.drm.drmevent.getType（）\r\n","android.content.RestrictionEntry.setAllSelectedStrings(java.lang.String[])":"android.content.resternityEntry.SetAllSelectedStrings（java.lang.string []）\r\n","android.database.CursorWindow.putNull(int, int)":"android.database.cursorwindow.putnull（int，int）\r\n","android.R.styleable#AndroidManifestUsesConfiguration\n            &lt;uses-configuration&gt;":"Android.r.Stylable＃AndroidManifestusesconfiguration\r\n            ＆lt; use-configuration＆gt;\r\n","Return the name of the permission required for read/write access to\n            this content provider. -or- Change the permission required to read and write data in the content\n            provider.":"返回阅读/写入访问所需许可的名称\r\n            这个内容提供商。 - 或 - 更改在内容中读取数据所需的许可\r\n            提供者。\r\n","android.content.pm.CrossProfileApps.getTargetUserProfiles()":"android.content.pm.crossprofileapps.gettargetuserprofiles（）\r\n","android.graphics.text.PositionedGlyphs.getOffsetX()":"android.graphics.text.positionedglyphs.getoffsetx（）\r\n","android.content.Context.bindService(android.content.Intent, int, java.util.concurrent.Executor, android.content.ServiceConnection)":"android.content.context.bindservice（android.content.intent，int，java.util.concurrent.executor，android.content.content.serviceconnection）\r\n","android.graphics.Paint.CURSOR_AT_OR_BEFORE":"android.graphics.paint.cursor_at_or_before\r\n","android.graphics.ImageFormat.FLEX_RGBA_8888":"android.graphics.imageformat.flex_rgba_8888\r\n","Frees internal data structures.":"释放内部数据结构。\r\n","BluetoothHidDeviceAppSdpSettings":"蓝牙Hiddeviceappsdpsetts\r\n","android.database.DatabaseUtils.dumpCursorToString(android.database.Cursor)":"android.database.databaseutils.dumpcursortostring（android.database.cursor）\r\n","Return the MIME data type of this intent, only if it will be needed for\n            intent resolution.":"返回此意图的MIME数据类型，只有需要\r\n            意图解决。\r\n","Creates a <code>DrmManagerClient</code>.":"创建<code> drmmanagerClient </code>。\r\n","android.content.pm.ApkChecksum.getInstallerCertificate()":"android.content.pm.apkchecksum.getInstallerCertificate（）\r\n","If this extra is set to true, the sync request will be scheduled\n            only when the device is plugged in.":"如果此额外设置为true，则将安排同步请求\r\n            仅当设备被插入时。\r\n","The MIME type for a clip holding plain text.":"剪辑夹的哑剧类型持有纯文本。\r\n","Verifies that a SQL SELECT statement is valid by compiling it.":"通过编译SQL Select语句验证SQL Select语句是否有效。\r\n","android.bluetooth.BluetoothHeadset.STATE_AUDIO_CONNECTING":"android.bluetooth.bluetoothheadset.state_audio_connecting\r\n","android.graphics.RectF.offset(float, float)":"android.graphics.Rectf.Offset（float，float）\r\n","Creates a new camera, with empty transformations.":"创建一个带有空转换的新相机。\r\n","Set the point's x and y coordinates to the coordinates of p":"将点的X和Y坐标设置为P的坐标\r\n","android.content.pm.PackageManager.queryProviderProperty(java.lang.String)":"android.content.pm.PackageManager.queryProviderProperty(java.lang.String)\r\n","\n          A complete path identifying the data subset or subsets that\n          permission can be granted for.\n        ":"\r\n          识别数据子集或子集的完整路径\r\n          可以授予许可。\r\n        \r\n","ContentProviderOperation":"ContentProvideroperation\r\n","A convenience method for determining of the SyncResult indicates that an error occurred.":"确定合规的便利方法表明发生了错误。\r\n","android.content.Loader.onReset()":"android.content.loader.onreset（）\r\n","#ACTION_APP_ERROR":"#action_app_error\r\n","android.content.Context.getDir(java.lang.String, int)":"android.content.context.getdir（java.lang.string，int）\r\n","#getValue":"#getValue\r\n","Gets the launcher extras supplied to the system when the given package was suspended via\n            ":"当给定包装通过\r\n            \r\n","android.hardware.Camera.setAutoFocusMoveCallback(android.hardware.AutoFocusMoveCallback)":"android.hardware.camera.setautofocusmovecallback（android.hardware.autofocusmovecallback）\r\n","This method disables the features enabled by ":"此方法禁用由\r\n","Subclasses must implement this to take care of resetting their loader,\n            as per ":"子类必须实施此操作以照顾重置其装载器，\r\n            按照\r\n","#getConfiguration()":"#getConfiguration（）\r\n","Certificate input bytes: the input bytes represent an encoded X.":"证书输入字节：输入字节代表编码X。\r\n","android.content.res.loader.ResourcesProvider.empty(android.content.res.loader.AssetsProvider)":"android.content.res.res.loader.resourcesprovider.empty（android.content.res.res.loader.assetsprovider）\r\n","android.content.pm.LauncherApps.getShortcutIconDrawable(android.content.pm.ShortcutInfo, int)":"android.content.pm.launcherapps.getShortcuticondrawable（android.content.pm.shortcutinfo，int）\r\n",": additional flag bits.":"：附加的标志位。\r\n","android.bluetooth.BluetoothGattServer.clearServices()":"android.bluetooth.bluetoothgattserver.clearservices（）\r\n","android.content.ContentResolver.refresh(android.net.Uri, android.os.Bundle, android.os.CancellationSignal)":"android.content.contentresolver.refresh（android.net.uri，android.os.bundle，android.os.os.cancellationsignal）\r\n","android.hardware.Camera.unlock()":"android.hardware.camera.unlock（）\r\n","android.database.AbstractCursor.mRowIdColumnIndex":"机器人。数据库。AbstractCursor.mRowIdColumnIndex的\r\n"," implementation attached to this\n            Drawable.":" 随附的实施\r\n            可绘制。\r\n","android.content.Context.INPUT_METHOD_SERVICE":"android.content.context.input_method_service\r\n","android.content.pm.SharedLibraryInfo":"android.content.pm.SharedLibraryInfo\r\n","android.database.DatabaseUtils.cursorFloatToContentValuesIfPresent(android.database.Cursor, android.content.ContentValues, java.lang.String)":"android.database.databaseutils.cursorfloattoctentvaluesifpresent（android.database.cursor，android.content.content.contentvalues，java.lang.lang.string））\r\n","Failed to process ":"未能处理\r\n","android.content.Context.deleteSharedPreferences(java.lang.String)":"android.content.context.deletesharedPreferences（java.lang.string）\r\n","CancellationSignal#throwIfCanceled()":"取消字母＃throwCanceLed（）\r\n","Create an intent for a specific component.":"为特定组件创建意图。\r\n","BluetoothDevice#PHY_LE_2M":"BluetoothDevice＃phy_le_2m\r\n","android.content.pm.ProviderInfo":"android.content.pm.providerinfo\r\n","if the permission has not been granted to the given package.":"如果尚未授予给定软件包的权限。\r\n","Returns the user-visible title for the entry, if any. -or- Sets the user-visible title for the entry.":"返回条目的用户可见标题（如果有）。 - 或设置该条目的用户可见标题。\r\n","Specify the level for the drawable.":"指定可绘制的级别。\r\n","android.graphics.Matrix.setRotate(float)":"android.graphics.matrix.setrotate（float）\r\n","Broadcast signalling that the receiving app's permission to interact across profiles has\n            changed.":"广播信号表明，接收应用程序跨配置文件互动的许可已\r\n            更改。\r\n","android.graphics.Color.argb(float, float, float, float)":"android.graphics.Color.argb(float, float, float, float)\r\n","PageInfo":"pageinfo\r\n","Return an XmlResourceParser through which you can read a generic XML\n            resource for the given resource ID.":"返回Xmlresourceparser，您可以通过它阅读通用XML\r\n            给定资源ID的资源。\r\n","Check whether the given component can access the notifications via a\n            ":"检查给定的组件是否可以通过\r\n            \r\n","<code>ShortcutManager</code> executes operations on an app's set of ":"<code> shortcutmanager </code>在应用程序集上执行操作\r\n","android.content.Intent.ACTION_SCREEN_ON":"android.content.intent.action_screen_on\r\n","Indicates that the sync adapter should proceed with the delete operations,\n            even if it determines that there are too many.":"表示同步适配器应进行删除操作，\r\n            即使它决定了太多。\r\n","Indicates whether this color state list contains at least one state spec\n            and the first spec is not empty (e.":"指示此颜色状态列表是否包含至少一个状态规格\r\n            第一个规格不是空的（e。\r\n","The IntentFilter that was matched for this ResolveInfo.":"匹配此分解的IntentFilter。\r\n","android.content.Intent.ACTION_MANAGE_PACKAGE_STORAGE":"android.content.intent.action_manage_package_storage\r\n","Sets the translucency level for the display list.":"设置显示列表的半透明级别。\r\n","Maximum value for advertising interval.":"广告间隔的最大价值。\r\n","Canvas EdgeType AA":"帆布Edgetype AA\r\n","Resources.Theme#obtainStyledAttributes(AttributeSet, int[], int, int)":"resources.theme＃获取styledattributes（attributeset，int []，int，int）\r\n","BluetoothHealth#APP_CONFIG_UNREGISTRATION_FAILURE":"BluetoothHealth＃APP_CONFIG_UNREGISTRATION_FAILURE\r\n","A constant string describing a gravity sensor type.":"描述重力传感器类型的常数字符串。\r\n","Sets the color filter applied to this color.":"将应用于此颜色的颜色过滤器设置。\r\n","AdvertisingSet#setAdvertisingParameters":"广告网＃Setadvertising参数\r\n","Creates a new black ColorDrawable.":"创建一个新的黑色果酱。\r\n","Return an XmlResourceParser through which you can read an animation\n            description for the given resource ID.":"返回Xmlresourceparser，您可以通过它阅读动画\r\n            给定资源ID的描述。\r\n"," implementation to have this Drawable\n            scheduled.":" 实施以使此绘制可绘制\r\n            计划。\r\n","Full path to the directory where native JNI libraries are stored.":"通往本机JNI库存储的目录的完整路径。\r\n","android.graphics.Paint.getTextWidths(java.lang.CharSequence, int, int, float[])":"android.graphics.paint.getTextWidths（java.lang.charsequence，int，int，float []）\r\n","Returns the drawable for the layer at the specified index.":"在指定的索引处返回该图层的绘图。\r\n","android.database.ContentObservable.dispatchChange(boolean, android.net.Uri)":"android.database.contentobservable.dispatchchange（boolean，android.net.uri）\r\n","Enables or disables anti-aliasing for this drawable.":"启用或禁用可绘制的抗氧化剂。\r\n","android.database.CursorWindow.CursorWindow(java.lang.String, long)":"android.database.cursorwindow.cursorwindow（java.lang.string，long）\r\n","android.graphics.Paint.isFilterBitmap()":"android.graphics.paint.fisfilterbitmap（）\r\n","Sets the rotation value for the display list around the X axis.":"设置X轴周围显示列表的旋转值。\r\n","android.graphics.PathMeasure.PathMeasure()":"android.graphics.pathmeasure.pathmeasure（）\r\n","Sets the absolute padding.":"设置绝对填充。\r\n","Bind a NULL value to this statement.":"将零值绑定到此语句。\r\n","android.bluetooth.le.AdvertiseData.getIncludeTxPowerLevel()":"android.bluetooth.le.aptervertisedata.getIncludetXpowerLevel（）\r\n","Return the MIME data type of this intent.":"返回此意图的MIME数据类型。\r\n","android.database.DatabaseUtils.queryNumEntries(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String, java.lang.String[])":"android.database.databaseutils.querynumentries（android.database.sqlite.sqlite.sqlitedatabase，java.lang.string，java.lang.string，java.lang.lang.lang.string []\r\n","drawable":"可绘制\r\n","android.content.pm.ShortcutManager.getIconMaxHeight()":"android.content.pm.shortcutmanager.geticonmaxheight（）\r\n","Defines playback states for content.":"定义内容的播放状态。\r\n","android.content.ContentProviderClient.call(java.lang.String, java.lang.String, android.os.Bundle)":"android.content.contentproviderclient.call（java.lang.string，java.lang.string，android.os.bundle）\r\n","A filter for companion devices of type ":"类型伴侣设备的过滤器\r\n","Sets the gravity used to position or stretch the specified layer within\n            its container.":"设置用于定位或拉伸指定层的重力\r\n            它的容器。\r\n","android.graphics.drawable.shapes.RoundRectShape":"android.graphics.drawable.shapes.RoudeRectShape\r\n","Indicates that the bitmap was created for an unknown pixel density.":"表示该位图是为未知像素密度创建的。\r\n","Gets the current flash mode setting.":"获取当前的闪存模式设置。\r\n","Transform the given <var>url</var> to a canonical representation of\n            its referenced resource, which can be used across devices, persisted,\n            backed up and restored, etc.":"将给定的<var> url </var>转换为规范表示\r\n            它的引用资源，可以跨设备使用，持续存在，\r\n            备份并恢复，等等。\r\n","android.content.pm.ComponentInfo.processName":"android.content.pm.com.ponentinfo.processname\r\n","#PADDING_MODE_STACK":"#Padding_Mode_stack\r\n","Sets the maximum size the database will grow to.":"设置数据库将增长的最大尺寸。\r\n","Returns absolute paths to application-specific directories on all\n external storage devices where the application can place media files.":"将绝对路径返回到所有方面的专用目录\r\n 应用程序可以放置媒体文件的外部存储设备。\r\n","android.graphics.drawable.Drawable.getChangingConfigurations()":"android.graphics.drawable.drawable.getChangingConfigurations（）\r\n","Frees the last row in this cursor window.":"在此光标窗口中释放最后一行。\r\n","Return list of all known install sessions in this user and managed profiles, regardless\n            of the installer.":"在此用户和托管配置文件中的所有已知安装会话的返回列表，不管\r\n            安装程序。\r\n",": If set, a single instance of the service will\n            run for all users on the device.":"：如果设置，服务的单个实例将\r\n            为设备上的所有用户运行。\r\n","Return the selection arguments for this operation after resolving any\n            requested back-references using the given results.":"解决任何问题后，返回此操作的选择参数\r\n            使用给定的结果请求反向引用。\r\n","\n            describing the activity that should execute the intent.":"\r\n            描述应执行意图的活动。\r\n","android.bluetooth.BluetoothHeadset.ACTION_CONNECTION_STATE_CHANGED":"android.bluetooth.bluetoothheadset.action_connection_state_changed\r\n","Shortcut has not been restored for unknown reason.":"由于未知原因，尚未恢复快捷方式。\r\n","android.graphics.Camera.rotateY(float)":"Android.graphics.Camera.Rotatey（float）\r\n","android.database.sqlite.SQLiteCursor.setFillWindowForwardOnly(boolean)":"android.database.sqlite.sqlitecursor.setfillwindowforwardonly（boolean）\r\n","android.content.Intent.EXTRA_CHANGED_COMPONENT_NAME":"android.content.intent.extra_changed_component_name\r\n","Intent used to broadcast the change in connection state of the Headset\n            profile.":"用于广播耳机连接状态的变化的意图\r\n            轮廓。\r\n","android.database.DataSetObserver.onInvalidated()":"android.database.datasetobserver.oninvalidated（）\r\n","Return a new Context object for the current Context but whose resources\n            are adjusted to match the given Configuration.":"返回当前上下文的新上下文对象，但其资源\r\n            调整以匹配给定配置。\r\n","android.content.Context.checkUriPermissions(java.util.List, int, int, int)":"android.content.Context.Checkuripermissions（java.util.list，int，int，int）\r\n","The description string provided in the AndroidManifest file, if any.":"AndroidManifest文件中提供的描述字符串（如果有）。\r\n","UNION":"联盟\r\n","android.bluetooth.le.AdvertisingSetCallback.onScanResponseDataSet(android.bluetooth.le.AdvertisingSet, int)":"android.bluetooth.le.AdvertisingsetCallback.onscanresponsedataset（android.bluetooth.le.le..ledvertisingset，int）\r\n","Indicates that an unknown error has occurred has occurred.":"表明发生了未知错误。\r\n","android.content.pm.ActivityInfo.LAUNCH_SINGLE_INSTANCE_PER_TASK":"android.content.pm.c.activityinfo.launch_single_instance_per_task\r\n","android.content.pm.Checksum.getType()":"android.content.pm.checksum.getType（）\r\n","Periodic advertising interval is not present in the packet.":"数据包中不存在定期广告间隔。\r\n","android.database.CursorIndexOutOfBoundsException":"android.database.CursorIndexoutofBoundSexception\r\n","Append the specified arc to the path as a new contour.":"将指定的弧添加到路径上作为新轮廓。\r\n","android.content.pm.VersionedPackage.VersionedPackage(java.lang.String, long)":"android.content.pm.versionedpackage.versionedpackage（java.lang.string，long）\r\n","android.content.pm.CrossProfileApps.startActivity(android.content.Intent, android.os.UserHandle, android.app.Activity, android.os.Bundle)":"android.content.pm.crossprofileapps.startactivity（android.content.intent，android.os.userhandle，android.app.Act.Activity，android.os.bundle）\r\n","android.content.Intent.ACTION_CONFIGURATION_CHANGED":"android.content.intent.action_configuration_changed\r\n","Create a new typeface from the specified font file.":"从指定的字体文件创建一个新字体。\r\n","Delete the given private file associated with this Context's\n            application package.":"删除与此上下文关联的给定私人文件\r\n            应用程序包。\r\n","Convenience method for calling ":"通话的便利方法\r\n","Return a resource identifier for the given resource name.":"返回给定资源名称的资源标识符。\r\n",". -or- Control inclusion of debugging help for mismatched\n            calls to ":"。 - 或控制不匹配的调试帮助\r\n            打电话\r\n","android.content.Intent.EXTRA_REPLACING":"android.content.intent.extra_replacing\r\n","android.content.Context.getDrawable(int)":"android.content.context.getDrawable（int）\r\n","android.database.Cursor.moveToLast()":"android.database.cursor.movetolast（）\r\n","android.content.pm.ShortcutManager.removeLongLivedShortcuts(java.util.List)":"android.content.pm.shortcutmanager.removelonglivedshortcuts（java.util.list）\r\n","android.graphics.Canvas.drawText(java.lang.String, int, int, float, float, android.graphics.Paint)":"android.graphics.canvas.drawText（java.lang.string，int，int，float，float，float，android.graphics.paint）\r\n","android.gesture.Gesture":"android.gesture.gesture\r\n","Sets the last point of the path.":"设置路径的最后一点。\r\n","Given a set of subqueries, all of which are ":"给定一组子征服\r\n","android.graphics.drawable.GradientDrawable.setColors(int[])":"android.graphics.drawable.gradientdrawable.setcolors（int []）\r\n","android.database.DatabaseUtils.queryNumEntries(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String)":"android.database.databaseutils.querynumentries（android.database.sqlite.sqlite.sqlitedatabase，java.lang.string，java.lang.string）\r\n","A font weight value for the light weight":"重量的字体重量值\r\n","#getShortcutConfigActivityList":"#get shortcutConfigactivityList\r\n","Return the last value given to ":"将最后一个值归还给\r\n","android.graphics.Paint.getFontVariationSettings()":"android.graphics.paint.getFontvariationsettings（）\r\n","Identifier for a specific application component\n            (":"特定应用程序组件的标识符\r\n            （（\r\n","android.database.CursorWindow.getInt(int, int)":"android.database.cursorwindow.getint（int，int）\r\n"," of appropriate type asked to pin.":" 要求固定的适当类型。\r\n","serviceUuid":"serviceuuid\r\n","#loadInBackground()":"#loadinbackground（）\r\n","draw the gradient from the top-left to the bottom-right ":"将梯度从左上角绘制到右上角\r\n","Draw the text, with origin at (x,y), using the specified paint, along the specified path.":"沿指定的路径使用指定的油漆，用（x，y）的原点绘制文本。\r\n","android.content.pm.PackageManager.FEATURE_AUTOMOTIVE":"android.content.pm.packagemanager.feature_automotive\r\n","android.drm.DrmEvent.TYPE_DRM_INFO_PROCESSED":"android.drm.drmevent.type_drm_info_processed\r\n","android.hardware.BatteryState.STATUS_FULL":"android.hardware.batterystate.status_full\r\n","android.database.AbstractWindowedCursor.setWindow(android.database.CursorWindow)":"android.database.abstractwindowedcursor.setwindow（android.database.cursorwindow）\r\n","Called by system whenever a device associated with this app is available.":"每当有与此应用程序关联的设备可用时，由系统调用。\r\n"," to retrieve an\n            ":" 检索一个\r\n            \r\n","android.content.pm.PackageInfo.permissions":"android.content.pm.packageinfo.permissions\r\n","Returns the RectF that defines this rectangle's bounds.":"返回定义此矩形界限的直接。\r\n","ImageFormat":"图像格式\r\n","android.content.ComponentCallbacks.onLowMemory()":"android.content.componentcallbacks.onlowmemory（）\r\n","An implementation of a ContentObserver that takes care of connecting\n it to the Loader to have the loader re-load its data when the observer\n is told it has changed.":"contentobserver的实现\r\n 当观察者时，它将加载程序重新加载到装载机上\r\n 被告知它已经改变。\r\n","Preconcats the matrix with the specified matrix.":"用指定的矩阵预将矩阵预联合。\r\n","android.graphics.ColorSpace.getMinValue(int)":"android.graphics.colorspace.getminvalue（int）\r\n"," object to this Drawable.":" 对此可绘制的对象。\r\n","android.drm.DrmInfo.getData()":"android.drm.drminfo.getdata（）\r\n","A cross process cursor is an extension of a ":"跨过程光标是A的扩展\r\n","android.graphics.drawable.TransitionDrawable.isCrossFadeEnabled()":"android.graphics.drawable.transitiondrawable.iscrossfadeenabled（）\r\n",": The device supports a home screen that is replaceable\n            by third party applications.":"：该设备支持可更换的主屏幕\r\n            由第三方申请。\r\n","android.content.Context.sendBroadcast(android.content.Intent, java.lang.String)":"android.content.Context.SendBroadcast（android.content.intent，java.lang.string）\r\n","android.database.AbstractCursor.getUpdatedField(int)":"机器人。数据库。AbstractCursor.getUpdatedField(int)\r\n","Broadcast the given intent to all interested BroadcastReceivers, allowing\n            an optional required permission to be enforced.":"向所有感兴趣的广播员广播给定的意图，允许\r\n            执行可选的必要许可。\r\n",",\n            or null if the string is not of that form.":",\r\n            如果字符串不是这种形式，则为null。\r\n","If set the SyncManager will request an immediate sync with the same Account and authority\n            (but empty extras Bundle) as was used in the sync request.":"如果设置Syncmanager，将要求立即与同一帐户和授权进行同步\r\n            （但是空的额外捆绑包）如同步请求中所用。\r\n","android.database.sqlite.SQLiteQueryBuilder.appendColumns(java.lang.StringBuilder, java.lang.String[])":"android.database.sqlite.sqlitequerybuilder.appendcolumns（java.lang.stringbuilder，java.lang.string []）\r\n","android.bluetooth.BluetoothGattCharacteristic.FORMAT_SINT16":"android.bluetooth.bluetoothgattcharacteristic.format_sint16\r\n","android.content.ContentValues.get(java.lang.String)":"android.content.contentvalues.get（java.lang.string）\r\n","android.graphics.drawable.NinePatchDrawable.NinePatchDrawable(android.graphics.NinePatch)":"android.graphics.drawable.ninepatchdrawable.ninepatchdrawable（android.graphics.ninepatch）\r\n","android.graphics.drawable.AnimationDrawable.isOneShot()":"android.graphics.drawable.animationdrawable.ishot（）\r\n","Broadcast Action:  The media scanner has started scanning a directory.":"广播动作：媒体扫描仪已开始扫描目录。\r\n","Crop the output to ":"将产出裁剪到\r\n","Retrieves the attribute associated with the specified key.":"检索与指定密钥关联的属性。\r\n","The home activity shown on secondary displays that support showing home activities.":"辅助显示上显示的家庭活动，支持显示家庭活动。\r\n","Battery is full.":"电池已满。\r\n","Preconcats the matrix with the specified translation.":"用指定的翻译将矩阵预联合。\r\n","Set the point's x and y coordinates":"设置点的X和Y坐标\r\n","Returns the filter set the device name field of Bluetooth advertisement data.":"返回过滤器设置蓝牙广告数据的设备名称字段。\r\n"," to indicate\n            that the given user's package restrictions state will be serialised to disk after the\n            component state has been updated.":" 以表示\r\n            给定的用户的软件包限制状态将在磁盘上序列化\r\n            组件状态已更新。\r\n","android.graphics.drawable.Icon.createWithData(byte[], int, int)":"android.graphics.drawable.icon.createwithdata（byte []，int，int）\r\n","#registerReceiver(BroadcastReceiver, IntentFilter)":"#RegisterReceiver（Broadcastreceiver，IntentFilter）\r\n","#grantUriPermission":"#Granturipermission\r\n","Throws URISyntaxError if the basic URI syntax\n it bad (as parsed by the Uri class) or the Intent data within the\n URI is invalid.":"如果基本的URI语法\r\n 它不好（如URI类解析）或在此内的意图数据\r\n URI无效。\r\n","android.database.CursorWindow.CursorWindow(java.lang.String)":"android.database.cursorwindow.cursorwindow（java.lang.string）\r\n","android.content.pm.PackageManager.getLeanbackLaunchIntentForPackage(java.lang.String)":"android.content.pm.packagemanager.getleanbacklaunchintentforpackage（java.lang.string）\r\n","android.content.pm.LabeledIntent.getSourcePackage()":"android.content.pm.labeledintent.getsourcepackage（）\r\n","android.content.res.AssetFileDescriptor.getFileDescriptor()":"机器人。内容。res.AssetFileDescriptor。getFileDescriptor（）\r\n","android.drm.DrmErrorEvent.TYPE_OUT_OF_MEMORY":"android.drm.drmerrorevent.type_out_of_memory\r\n","android.companion.BluetoothLeDeviceFilter":"android.companion.bluetoothledevicefilter\r\n","android.content.pm.ActivityInfo.theme":"android.content.pm.activityinfo.theme\r\n","android.content.res.Configuration.COLOR_MODE_HDR_SHIFT":"android.content.res.configuration.color_mode_hdr_shift\r\n","android.content.Context.checkUriPermission(android.net.Uri, java.lang.String, java.lang.String, int, int, int)":"android.content.context.Checkuripermession（android.net.uri，java.lang.string，java.lang.string，int，int，int，int）\r\n","Removes all existing animation callbacks.":"删除所有现有的动画回调。\r\n","android.content.pm.ProviderInfo.isSyncable":"android.content.pm.providerinfo.issyncable\r\n","Drawable that shows a ripple effect in response to state changes.":"可绘制的可响应状态变化的连锁反应。\r\n","android.content.pm.InstallSourceInfo.getInstallingPackageName()":"android.content.pm.installsourceinfo.getinstallingpackagename（）\r\n","Get the list of included GATT services for this service.":"获取此服务中随附的Gatt服务的列表。\r\n","android.graphics.Paint.setFakeBoldText(boolean)":"android.graphics.paint.setfakeboldtext（boolean）\r\n","android.content.Context.getExternalCacheDirs()":"android.content.context.getExternalCachedirs（）\r\n","android.content.pm.PackageStats.externalMediaSize":"android.content.pm.packagestats.externalmediasize\r\n","android.graphics.drawable.AnimatedStateListDrawable.addTransition(int, int, android.graphics.drawable.Drawable, boolean)":"android.graphics.drawable.AnimatedStatElistDrawable.AddTransition（int，int，android.graphics.graphics.drabable.drabable.drabable，boolean）\r\n","android.graphics.drawable.Icon.getResPackage()":"android.graphics.drawable.icon.getRespackage（）\r\n","Hidden restriction type.":"隐藏限制类型。\r\n","#FLAG_MATCH_MANIFEST":"#flag_match_manifest\r\n","android.graphics.Path.addCircle(float, float, float, android.graphics.Direction)":"android.graphics.path.Addcircle（浮点，浮点，浮点，android.graphics.Direction）\r\n","android.graphics.drawable.StateListDrawable":"android.graphics.drawable.statelistdrawable\r\n","android.bluetooth.le.AdvertisingSetParameters.getSecondaryPhy()":"android.bluetooth.le.AdvertisingsetParameters.getSecondaryphy（）\r\n","Called when the accuracy of a sensor has changed.":"当传感器的准确性发生变化时调用。\r\n","android.graphics.drawable.Animatable.stop()":"android.graphics.drawable.animatable.stop（）\r\n","android.content.pm.ProviderInfo.FLAG_SINGLE_USER":"android.content.pm.providerinfo.flag_single_user\r\n","android.content.RestrictionsManager.convertRestrictionsToBundle(java.util.List)":"android.content.ElterctionsManager.convertrestrictionstobundle（java.util.list）\r\n","android.content.res.AssetFileDescriptor.createOutputStream()":"机器人。内容。res.AssetFileDescriptor。创建输出流()\r\n","Return string representation of this class without the class's name\n            as a prefix.":"返回此类的字符串表示，没有类的名称\r\n            作为前缀。\r\n","android.content.Context.sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)":"android.content.Context.SendBroadcastAsuser（android.content.intent，android.os.userhandle）\r\n","#EXTRA_REFERRER":"#EXTRA_REFERRER\r\n","Returns a sparse array of manufacturer identifier and its corresponding manufacturer specific\n            data.":"返回一系列稀疏的制造商标识符及其相应的制造商特定的\r\n            数据。\r\n","android.content.res.AssetFileDescriptor.AssetFileDescriptor(android.os.ParcelFileDescriptor, long, long)":"机器人。内容。res.AssetFileDescriptor。AssetFileDescriptor（android。操作系统。ParcelFileDescriptor隆陇脤玫驴卯潞脥脤玫录镁\r\n","android.content.AttributionSource.isTrusted(android.content.Context)":"android.content.attributionsource.istrusted（android.content.context）\r\n","Remove canonicalization from canonical URIs previously returned by\n            ":"从先前返回的规范URI中删除规范化\r\n            \r\n","If the bitmap's internal config is in one of the public formats, return\n            that config, otherwise return null.":"如果位图的内部配置是公共格式之一，请返回\r\n            该配置，否则返回null。\r\n","android.content.pm.PackageManager.getSharedLibraries(int)":"android.content.pm.packagemanager.getSharedLibraries（int）\r\n","android.content.Intent.ACTION_PACKAGE_FULLY_REMOVED":"android.content.intent.Action_package_louf_remaved\r\n","android.graphics.Outline.isEmpty()":"android.graphics.outline.isempty（）\r\n","android.database.CursorWindow.setNumColumns(int)":"android.database.cursorwindow.setnumcolumns（int）\r\n","android.content.Intent.ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE":"android.content.intent.action_external_applications_unavailable\r\n","android.hardware.Camera.lock()":"android.hardware.camera.lock（）\r\n",": include the application\n code with the context. ":"：包括申请\r\n 带有上下文的代码。\r\n","Returns the subscription ID associated with this object.":"返回与此对象关联的订阅ID。\r\n","DrmRights":"drmrights\r\n","android.content.Intent.ACTION_MANAGED_PROFILE_UNAVAILABLE":"android.content.intent.action_managed_profile_unavailable\r\n","Allocates a new row at the end of this cursor window.":"在此光标窗口的末尾分配新行。\r\n","Broadcast Action: Sent to a package that has been unsuspended.":"广播动作：发送到未解决的软件包。\r\n","Throws NotFoundException if the given ID does\n         not exist.":"如果给定的ID确实有\r\n         不存在。\r\n",":\n            The device supports verified boot.":"：\r\n            该设备支持经过验证的引导。\r\n","Picture":"图片\r\n","Cursor#FIELD_TYPE_INTEGER":"光标＃field_type_integer\r\n","Activity Action: Perform assist action.":"活动行动：执行辅助行动。\r\n","Activities that can be safely invoked from a browser must support this\n            category.":"可以安全地从浏览器调用的活动必须支持这一点\r\n            类别。\r\n","android.graphics.Picture":"android.graphics.picture\r\n","android.content.res.ObbInfo.packageName":"机器人。内容。res.ObbInfo.包装名称\r\n","Android.Content.Context.MODE_ENABLE_WRITE_AHEAD_LOGGING":"android.content.context.mode_enable_write_ahead_logging\r\n","android.graphics.Canvas.drawTextOnPath(java.lang.String, android.graphics.Path, float, float, android.graphics.Paint)":"android.graphics.canvas.drawtextonpath（java.lang.string，android.graphics.path，float，float，float，android.graphics.paint）\r\n","Returns the amount of Y offset added to glyph position.":"返回添加到字形位置的Y偏移量。\r\n","android.content.pm.PackageManager.getModuleInfo(java.lang.String, int)":"android.content.pm.packagemanager.getmoduleinfo（java.lang.string，int）\r\n"," over the result set.":" 在结果集上。\r\n","android.content.pm.PackageManager.FEATURE_SCREEN_LANDSCAPE":"android.content.pm.packagemanager.feature_screen_landscape\r\n","Throws IllegalArgumentException if the\n content provider does not support the requested MIME type.":"如果是\r\n 内容提供商不支持请求的MIME类型。\r\n","Indicates whether this Context is restricted.":"指示此上下文是否受到限制。\r\n","Represents a scan record from Bluetooth LE scan.":"代表蓝牙LE扫描的扫描记录。\r\n","Retrieve the color value for the attribute at <var>index</var>.":"检索<var> index </var>的属性的颜色值。\r\n","if the last segment isn't a number":"如果最后一个部分不是数字\r\n","android.graphics.drawable.NinePatchDrawable.setTargetDensity(android.graphics.Canvas)":"android.graphics.drawable.ninepatchdrawable.settargetDenty（android.graphics.canvas）\r\n","#NO_MATCH_CATEGORY":"#no_match_category\r\n","android.content.Intent.EXTRA_TIME":"android.content.intent.extra_time\r\n","Returns an immutable bitmap from the specified subset of the source\n bitmap.":"从源的指定子集中返回不变的位图\r\n 位图。\r\n"," in\n the ":" 在\r\n 这\r\n","android.bluetooth.BluetoothGattCharacteristic.FORMAT_SINT8":"android.bluetooth.bluetoothgattcharacteristic.format_sint8\r\n","Constructs a new cursor.":"构造一个新的游标。\r\n","\n          A user-readable label for the receiver.\n        ":"\r\n          接收器的用户可读标签。\r\n        \r\n","android.graphics.drawable.PictureDrawable.getPicture()":"android.graphics.drawable.picturedrawable.getPicture（）\r\n","android.graphics.BitmapRegionDecoder.newInstance(android.os.ParcelFileDescriptor)":"android.graphics.bitmapregiondecoder.newinstance（android.os.parcelfiledScriptor）\r\n","Convenience method for deleting rows in the database.":"在数据库中删除行的便利方法。\r\n","Extra sent with ":"额外发送\r\n","Observable":"可观察\r\n","Re-locks the camera to prevent other processes from accessing it.":"重新锁定相机以防止其他过程访问它。\r\n","Adds a pre-allocated buffer to the preview callback buffer queue.":"将预先分配的缓冲区添加到预览回调缓冲区队列。\r\n","android.content.Context.CONNECTIVITY_DIAGNOSTICS_SERVICE":"android.content.context.connectivity_diagnostics_service\r\n","Removes the specified animation callback.":"删除指定的动画回调。\r\n","android.content.IntentFilter.addDataSchemeSpecificPart(java.lang.String, int)":"android.content.intentfilter.adddataschemespecificpart（java.lang.string，int）\r\n","Reset the identity of the incoming IPC on the current thread.":"重置当前线程上传入IPC的身份。\r\n","Performs an insert, adding a new row with the given values.":"执行插入物，添加带有给定值的新行。\r\n","flagsMask":"旗帜mask\r\n","Applications are looking for a barcode.":"应用程序正在寻找条形码。\r\n",". -or- When enabled, verify that all projections and ":"。 - 或 - 启用时，请验证所有预测和\r\n","android.content.Context.checkSelfPermission(java.lang.String)":"android.content.Context.CheckSelfPermission（Java.lang.String）\r\n","Sets padding for this shape, defined by a Rect object.":"设置该形状的填充，由RECT对象定义。\r\n","Add a ":"添加一个\r\n","android.drm.ProcessedData.getData()":"android.drm.processeddata.getdata（）\r\n","android.content.pm.ShortcutInfo.getLastChangedTimestamp()":"android.content.pm.shortcutinfo.getlastchangedtimestamp（）\r\n","Closes this client connection, indicating to the system that the\n            underlying ":"关闭此客户端连接，向系统表明\r\n            潜在的\r\n","android.graphics.Matrix.setRotate(float, float, float)":"android.graphics.matrix.setrotate（浮点，浮点，浮点）\r\n","android.graphics.drawable.VectorDrawable.VectorDrawable(android.graphics.drawable.VectorDrawableState, android.content.res.Resources)":"android.graphics.drawable.vectordrawable.vectordrawable（android.graphics.drawable.vectordrawablestate，android.content.res.res.resources）\r\n","android.content.Context.setWallpaper(java.io.InputStream)":"android.content.context.setwallpaper（java.io.inputstream）\r\n","mediaProjection":"介导,介导\r\n","Execute all pending write operations for this device.":"执行此设备的所有待处理写操作。\r\n"," has been granted\n permission to access a specific URI.":" 已被授予\r\n 访问特定URI的许可。\r\n","Gets a value that is a byte array.":"获得一个字节数组的值。\r\n","#getProfiles":"#getProfiles\r\n","Activity Action: Create a new item in the given container, initializing it\n            from the current contents of the clipboard.":"活动动作：在给定容器中创建一个新项目，初始化它\r\n            从剪贴板的当前内容。\r\n","android.graphics.drawable.AnimationDrawable.addFrame(android.graphics.drawable.Drawable, int)":"android.graphics.drawable.animationdrawable.addframe（android.graphics.drawable.drawable，int）\r\n","Returns the bitmap's height -or- Convenience method for calling ":"返回位图的高度 - 或 - 便利性方法\r\n",":\n            The device supports ":"：\r\n            设备支持\r\n","android.graphics.drawable.AdaptiveIconDrawable.getForeground()":"android.graphics.drawable.aptiveicondrawable.getForeground（）\r\n"," to create ":" 去创造\r\n","android.content.pm.PackageManager.FEATURE_SCREEN_PORTRAIT":"android.content.pm.packagemanager.feature_screen_portrait\r\n","#MIN_ID":"#min_id\r\n"," or <em>any other</em> mechanism.":" 或<em>任何其他</em>机制。\r\n",": The device supports a system interface for the user to select\n            and bind device control services provided by applications.":"：该设备支持一个系统接口供用户选择\r\n            并绑定应用程序提供的设备控制服务。\r\n","This method is called when a content change occurs.":"当内容更改发生时，该方法被调用。\r\n"," of extras that was meant to be sent to the calling app when it was\n            suspended.":" 额外的额外功能，本来可以发送到呼叫应用程序时\r\n            暂停。\r\n","android.graphics.drawable.BitmapDrawable.hasAntiAlias()":"android.graphics.drawable.bitmapdrable.hasantialias（）\r\n","android.content.pm.PackageManager.queryServiceProperty(java.lang.String)":"android.content.pm.PackageManager.queryServiceProperty(java.lang.String)\r\n","Thrown when an application of a ":"当应用\r\n","android.content.pm.PackageInfo.applicationInfo":"android.content.pm.packageinfo.applicationinfo\r\n","Apply this matrix to the array of 2D vectors, and write the transformed vectors back into the\n            array.":"将此矩阵应用于2D向量的数组，然后将转换的向量写回\r\n            大批。\r\n","android.database.sqlite.SQLiteDatabase.disableWriteAheadLogging()":"android.database.sqlite.sqlitedatabase.disablewriteaheadlogging（）\r\n",": true if this application's package is in\n the stopped state.":"：true如果此应用程序的包在\r\n 停止状态。\r\n","android.graphics.Bitmap.setWidth(int)":"android.graphics.bitmap.setwidth（int）\r\n","android.content.RestrictionEntry.setChoiceEntries(android.content.Context, int)":"android.content.grestrictioner.setchoiceentries（android.content.context，int）\r\n","Provides access to an application's raw asset files; see ":"提供对应用程序原始资产文件的访问权限；请参阅 \r\n","android.content.pm.LauncherApps.getProfiles()":"android.content.pm.launcherapps.getProfiles（）\r\n","android.database.sqlite.SQLiteStatement.executeInsert()":"android.database.sqlite.sqlitestatement.executeinsert（）\r\n","Returns the drawable's intrinsic width.":"返回可绘制的固有宽度。\r\n"," if the SurfaceTexture was released.":" 如果释放了surfaceTexture。\r\n","ContentProvider#applyBatch ContentProvider.applyBatch":"ContentProvider＃ApplyBatch ContentProvider.ApplyBatch\r\n","android.content.pm.Checksum":"android.content.pm.checksum\r\n","ContentProvider#uncanonicalize":"ContentProvider＃无关\r\n","Returns a Region representing the part of the Drawable that is completely\n            transparent.":"返回一个表示可绘制部分的区域，该区域是完全的\r\n            透明的。\r\n","Create a drawable by opening a given file path and decoding the bitmap.":"通过打开给定的文件路径并解码位图来创建可绘制的。\r\n","Get the character offset within the string whose position is closest to the specified\n            horizontal position.":"将角色偏移量放在其位置最接近指定的字符串中\r\n            水平位置。\r\n","Return a movie object associated with the particular resource ID.":"返回与特定资源ID关联的电影对象。\r\n","android.content.ClipDescription":"android.content.ClipDescription\r\n","android.database.sqlite.SQLiteOpenHelper":"android.database.sqlite.sqliteopenhelper\r\n","android.graphics.drawable.TransitionDrawable.resetTransition()":"android.graphics.drawable.transitiondrawable.resettransition（）\r\n"," with\n            animations defined using ":" 和\r\n            使用使用的动画\r\n","android.content.pm.Signature.toCharsString()":"android.content.pm.signature.tocharsstring（）\r\n","ContentProvider#bulkInsert ContentProvider.bulkInsert":"contentprovider＃bulkinsert contentprovider.bulkinsert\r\n","android.content.ContentResolver.startSync(android.net.Uri, android.os.Bundle)":"android.content.contentresolver.startsync（android.net.uri，android.os.bundle）\r\n","Don't trust any Installer to provide checksums for the package.":"不要相信任何安装程序可以为软件包提供校验和。\r\n","Describes the kinds of special objects contained in this object.":"描述此对象中包含的特殊对象的种类。\r\n","The stroke projects out as a square, with the center at the end\n of the path.":"中风将作为一个正方形，中心在末端\r\n 路径。\r\n","android.graphics.RegionIterator.next(android.graphics.Rect)":"android.graphics.gregioniterator.next（android.graphics.Rect）\r\n","android.content.pm.InstrumentationInfo.functionalTest":"android.content.pm.instrumentationInfo.FunctionalTest\r\n","android.content.res.ObbInfo.filename":"机器人。内容。res.ObbInfo.文件名\r\n","#onUpdateComplete":"#onupdatecomplete\r\n","ScanSettings":"扫描仪\r\n","Set the stroke width and color for the drawable.":"为可绘制的可绘制设置笔触宽度和颜色。\r\n","android.graphics.drawable.Icon.getType()":"android.graphics.drawable.icon.getType（）\r\n","android.content.ContentProvider.attachInfo(android.content.Context, android.content.pm.ProviderInfo)":"android.content.contentprovider.attachinfo（android.content.context，android.content.pm.providerinfo）\r\n","This class represents a source to which access to permission protected data should be\n            attributed.":"此类代表了访问权限保护数据的来源\r\n            归因于。\r\n","android.graphics.Path.op(android.graphics.Path, android.graphics.Op)":"android.graphics.path.op（android.graphics.path，android.graphics.op）\r\n","android.graphics.Path.cubicTo(float, float, float, float, float, float)":"android.graphics.path.cubicto（浮子，浮点，浮点，浮子，浮点，浮点）\r\n","android.bluetooth.BluetoothGattService.BluetoothGattService(java.util.UUID, int)":"android.bluetooth.bluetoothgattservice.bluetoothgattservice（java.util.uuid，int）\r\n","Starts capturing and drawing preview frames to the screen.":"开始捕获并绘制预览帧到屏幕。\r\n",": The device is capable of communicating with\n            other devices via Bluetooth Low Energy radio.":"：该设备能够与\r\n            通过蓝牙低能无线电设备的其他设备。\r\n","android.graphics.Typeface.isItalic()":"android.graphics.typeface.isitalic（）\r\n","android.content.Intent.EXTRA_EXCLUDE_COMPONENTS":"android.content.intent.extra_exclude_components\r\n","Returns in pixels[] a copy of the data in the bitmap.":"以像素为单位的返回[]位图中的数据副本。\r\n",": If binding from an app that is visible or user-perceptible,\n            lower the target service's importance to below the perceptible level.":"：如果从可见或可见的应用程序绑定，\r\n            将目标服务的重要性降低到可感知的水平以下。\r\n","android.content.pm.PackageInstaller.EXTRA_OTHER_PACKAGE_NAME":"android.content.pm.packageinstaller.extra_other_package_name\r\n","Thrown if the resources for the given\n             application could not be loaded.":"如果给定的资源\r\n             无法加载应用程序。\r\n","android.content.Intent.ACTION_SEND":"android.content.intent.action_send\r\n","android.content.ComponentName.getShortClassName()":"android.content.componentname.getShortClassName（）\r\n","android.content.BroadcastReceiver.getResultData()":"android.content.broadcastreceiver.getResultdata（）\r\n","android.graphics.Typeface.createFromFile(java.io.File)":"android.graphics.typeface.createfromfile（java.io.file）\r\n","android.content.Intent.normalizeMimeType(java.lang.String)":"android.content.intent.normalizemimetype（java.lang.string）\r\n","android.content.res.Configuration.screenHeightDp":"android.content.Res.Configuration.screenheightdp\r\n","Return the icon resource identifier to use for this match.":"将图标资源标识符返回以用于此匹配项。\r\n","android.graphics.ImageFormat.DEPTH16":"android.graphics.imageformat.depth16\r\n","Sets a list of strings that will be presented as choices to the user.":"设置将向用户选择作为选择的字符串列表。\r\n","Returns the UUID of this service":"返回此服务的UUID\r\n","android.graphics.Canvas.drawText(java.lang.String, float, float, android.graphics.Paint)":"android.graphics.canvas.drawText（java.lang.string，float，float，android.graphics.paint）\r\n","Register to receive intent broadcasts, to run in the context of\n ":"注册以接收意图广播，以在\r\n \r\n","android.database.CrossProcessCursor.onMove(int, int)":"android.database.crossprocesscursor.onmove（int，int）\r\n"," to the base application of the\n            Context, which will be called at the same times as the ComponentCallbacks\n            methods of activities and other components are called.":" 到基本应用\r\n            上下文，将在与componentCallbacks的同一时间调用\r\n            调用活动和其他组件的方法。\r\n","android.graphics.drawable.Drawable.setVisible(boolean, boolean)":"机器人。图形。可画的。可画的。setVisible（布尔，布尔）\r\n","android.bluetooth.BluetoothGattCharacteristic.WRITE_TYPE_SIGNED":"android.bluetooth.bluetoothgattcharacteristic.write_type_signed\r\n","android.content.Context.openFileOutput(java.lang.String, int)":"android.content.context.openfileOutput（java.lang.string，int）\r\n","android.graphics.drawable.Icon.setTintMode(android.graphics.Mode)":"android.graphics.drawable.icon.settintmode（android.graphics.mode）\r\n","android.hardware.Sensor.getFifoReservedEventCount()":"android.hardware.sensor.getfiforeseverveventCount（）\r\n","IMSI MNC (Mobile Network Code), corresponding to\n            <a href=\"[TODO: @docRoot]guide/topics/resources/providing-resources.":"IMSI MNC（移动网络代码），与\r\n            <a href =“ [todo：@docroot]指南/主题/资源/提供资源。\r\n"," for contributing and accessing data blobs\n            from the blob store maintained by the system.":" 用于贡献和访问数据斑点\r\n            从系统维护的Blob商店中。\r\n","#MATCH_DEFAULT_ONLY":"#MATCH_DEFAULT_ONLY\r\n","android.graphics.Canvas.quickReject(android.graphics.Path)":"android.graphics.canvas.quickreject（android.graphics.path）\r\n"," for retrieving application restrictions\n            and requesting permissions for restricted operations.":" 用于检索申请限制\r\n            并要求对限制操作的许可。\r\n","Broadcast Action: An existing application package has been removed from\n            the device.":"广播动作：现有的应用程序包已从\r\n            设备。\r\n","Try to match against the path in a url.":"尝试匹配URL中的路径。\r\n","android.content.RestrictionEntry.setTitle(java.lang.String)":"android.content.grenterictioner.settitle（java.lang.string）\r\n"," for informing the user of\n            background events.":" 用于通知用户\r\n            背景事件。\r\n","\n            as HTML formatted text.":"\r\n            作为HTML格式的文本。\r\n","Return the icon resource identifier to use for this component.":"将图标资源标识符返回以用于此组件。\r\n","#openFile":"＃打开文件\r\n","android.database.CursorWindow.getString(int, int)":"android.database.cursorwindow.getstring（int，int）\r\n"," that the load has been canceled.":" 负载已取消。\r\n","android.bluetooth.le.ScanResult.TX_POWER_NOT_PRESENT":"android.bluetooth.le.scanresult.tx_power_not_present\r\n"," are not 0, the\n bitmap will be scaled to match ":" 不是0，\r\n 位图将缩放以匹配\r\n","android.graphics.Matrix.setRectToRect(android.graphics.RectF, android.graphics.RectF, android.graphics.ScaleToFit)":"android.graphics.matrix.setRectTorect（android.graphics.Rectf，android.graphics.Rectf，android.graphics.scaletofit）\r\n"," ":"\r\n","android.graphics.drawable.LayerDrawable.getLayerInsetTop(int)":"android.graphics.drawable.layerdrawable.getlayerinsettop（int）\r\n","Sets the scale value for the display list on the Y axis.":"在Y轴上设置显示列表的比例值。\r\n","Retrieves the MIME type associated with this object.":"检索与此对象关联的MIME类型。\r\n","Retrieve a dimensional unit attribute at <var>index</var> for use\n            as a size in raw pixels.":"检索<var>索引</var>的尺寸单位属性\r\n            作为原始像素的大小。\r\n","This activity may be exercised by the monkey or other automated test tools.":"猴子或其他自动化测试工具可以执行此活动。\r\n","Determine whether a particular process and user ID has been granted\n            permission to access a list of URIs.":"确定是否授予特定过程和用户​​ID\r\n            访问URI列表的权限。\r\n","Lets you assign a number of graphic images to a single Drawable and swap out the visible item by a string\n            ID value.":"让您可以将许多图形图像分配给单个可绘制的图形，并通过字符串交换可见的项目\r\n            ID值。\r\n","android.content.pm.ShortcutInfo.getDisabledMessage()":"android.content.pm.shortcutinfo.getDisabledMessage（）\r\n",": If this feature is supported, the Vulkan\n            implementation on this device is hardware accelerated, and the feature version will indicate\n            the highest ":"：如果支持此功能，则为Vulkan\r\n            该设备上的实现是加速的，功能版本将指示\r\n            最高\r\n","android.content.ContentProviderOperation.isYieldAllowed()":"android.content.contentProvideroperation.isyieldlowered（）\r\n","android.content.ContentProvider.getReadPermission()":"android.content.contentprovider.getReadpermission（）\r\n","Used to indicate that an intent only wants URIs that can be opened with\n            ":"用来表明意图只需要可以打开的uris\r\n            \r\n","The resulting width of the bitmap, set independent of the state of\n inJustDecodeBounds.":"位图的结果宽度，独立于状态\r\n 不公正的驱动器。\r\n","Remove the data previously sent with ":"删除先前发送的数据\r\n","The account to be synced.":"要同步的帐户。\r\n","android.content.Intent.FLAG_ACTIVITY_REQUIRE_DEFAULT":"android.content.intent.flag_activity_require_default\r\n","General method for inserting a row into the database.":"将行插入数据库的一般方法。\r\n","android.bluetooth.BluetoothGattCallback.onPhyRead(android.bluetooth.BluetoothGatt, int, int, int)":"android.bluetooth.bluetoothgattcallback.onphyread（android.bluetooth.bluetoothgatt，int，int，int）\r\n","android.graphics.Color.colorToHSV(int, float[])":"android.graphics.Color.colorToHSV(int, float[])\r\n","android.content.Intent.ACTION_MEDIA_BUTTON":"android.content.intent.action_media_button\r\n","Returns the advertising set id.":"返回广告集ID。\r\n","that indicates that the activity\n can itself handle changes to the screen layout. ":"这表明活动\r\n 您可以处理屏幕布局的更改。\r\n","Activity Action: Process a piece of text.":"活动动作：处理一段文本。\r\n","android.graphics.ColorSpace.ILLUMINANT_B":"android.graphics.colorspace.illuminant_b\r\n","android.content.pm.PackageInfo.requestedPermissions":"android.content.pm.packageinfo.Requestedpermissions\r\n","Uninstall the given package for the user for which this installer was created if the package\n            will still exist for other users on the device.":"卸载给定的给定包装的给定包装，如果该软件包为其创建本安装程序的用户\r\n            设备上的其他用户仍然存在。\r\n","android.content.Context.obtainStyledAttributes(int[])":"android.content.context.obtainstyledattributes（int []）\r\n","android.graphics.ImageFormat.RGB_565":"Android.graphics.imageFormat.RGB_565\r\n","#setComponentEnabledSetting(android.content.ComponentName, int, int)":"#SetComponentEnabledSetting（android.content.componentname，int，int）\r\n",", corresponding\n            to the <code>internal</code> value of\n            ":"， 相应的\r\n            到<code>内部</code>的值\r\n            \r\n","Constant for specifying the highest installed package version code.":"常量用于指定最高安装的软件包版本代码。\r\n","Query for all of the permissions associated with a particular group.":"查询与特定组关联的所有权限。\r\n","android.content.Intent.getSourceBounds()":"android.content.intent.getSourceBounds（）\r\n","android.bluetooth.le.ScanRecord":"android.bluetooth.le。scanrecord\r\n","Do not enable Memtag in this application or process.":"请勿在此应用程序或过程中启用MEMTAG。\r\n","android.graphics.RenderNode.setPivotY(float)":"android.graphics.rendernode.setpivoty（float）\r\n","android.bluetooth.BluetoothGattServerCallback.onCharacteristicWriteRequest(android.bluetooth.BluetoothDevice, int, android.bluetooth.BluetoothGattCharacteristic, boolean, boolean, int, byte[])":"android.bluetooth.bluetoothgattservercallback.oncharacteristicwriterequest（android.bluetooth.bluetooth.bluetoothdevice，int，int，android.bluetooth.bluetoothgatthgattcharacteristic\r\n","Adds an observer to the list.":"将观察者添加到列表中。\r\n","android.database.sqlite.SQLiteQueryBuilder.getProjectionMap()":"android.database.sqlite.sqlitequerybuilder.getProctoctionMap（）\r\n","Helper for getFlags(), returning true if DITHER_FLAG bit is set\n            Dithering affects how colors that are higher precision than the device\n            are down-sampled. -or- Helper for setFlags(), setting or clearing the DITHER_FLAG bit\n            Dithering affects how colors that are higher precision than the device\n            are down-sampled.":"getflags（）的助手，如果设置了dither_flag位，则返回true\r\n            抖动会影响比设备更高精度的颜色\r\n            被下采样。 - 或助手用于setFlags（），设置或清除dither_flag位\r\n            抖动会影响比设备更高精度的颜色\r\n            被下采样。\r\n",": the URI string\n            always has the \"intent:\" scheme.":"：URI字符串\r\n            总是具有“意图：”方案。\r\n","android.gesture.GestureStore.removeEntry(java.lang.String)":"android.gesture.gesturestore.removeentry（java.lang.string）\r\n","android.graphics.NinePatch.NinePatch(android.graphics.Bitmap, byte[], java.lang.String)":"android.graphics.ninepatch.ninepatch（android.graphics.bitmap，byte []，java.lang.string）\r\n","android.graphics.SurfaceTexture.release()":"android.graphics.surfaceTexture.Release（）\r\n","android.database.sqlite.SQLiteClosable.onAllReferencesReleasedFromContainer()":"android.database.sqlite.sqliteclosable.onallreferencesrelederesreaster fromContainer（）\r\n","android.database.ContentObserver.onChange(boolean, android.net.Uri, int)":"android.database.contentobserver.onchange（boolean，android.net.uri，int）\r\n","android.content.pm.SigningInfo.getApkContentsSigners()":"android.content.pm.signinginfo.getapkcontentssigners（）\r\n","Determine whether the calling process of an IPC <em>or you</em> has been granted\n            permission to access a list of URIs.":"确定是否已批准IPC <em>或您</em>的调用过程\r\n            访问URI列表的权限。\r\n","Returns true iff the two specified rectangles intersect.":"如果两个指定的矩形相交，则返回true。\r\n","Status code for the conversion.":"转换的状态代码。\r\n","android.content.Context.sendBroadcastWithMultiplePermissions(android.content.Intent, java.lang.String[])":"android.content.Context.SendBroadcastWithMultPermissions（android.content.intent，java.lang.string []）\r\n","Flash will always be fired during snapshot.":"快照期间将始终发射闪光灯。\r\n","Return a color-int from alpha, red, green, blue components.":"Return a color-int from alpha, red, green, blue components.\r\n","android.database.sqlite.SQLiteQueryBuilder.isDistinct()":"android.database.sqlite.sqlitequerybuilder.isdistinct（）（）\r\n","Set the beginning of the next contour to the point (x,y).":"将下一个轮廓的开头设置为点（x，y）。\r\n","Retrieve overall information about an application package that is\n            installed on the system.":"检索有关应用程序包的总体信息\r\n            安装在系统上。\r\n","Return the number of actions in the filter.":"返回过滤器中的操作数。\r\n","Standard CIE 1931 2° illuminant B, encoded in xyY.":"标准CIE 1931 2°照明b，用XYY编码。\r\n","An object used to create frame-by-frame animations, defined by a series of\n            Drawable objects, which can be used as a View object's background.":"用于创建逐帧动画的对象，由一系列\r\n            可绘制的对象，可以用作视图对象的背景。\r\n","android.database.CursorWindow.clear()":"android.database.cursorwindow.clear（）\r\n","android.database.AbstractWindowedCursor.isString(int)":"android.database.AbstractwindowedCursor.isstring（int）\r\n","ModuleInfo":"模块\r\n","#addStatusChangeListener":"#addstatuschangelistener\r\n","android.bluetooth.le.AdvertisingSet.setAdvertisingParameters(android.bluetooth.le.AdvertisingSetParameters)":"android.bluetooth.le.Advertisingset.setAdvertisingParameters（android.bluetooth.Le.LUETOTH.LE.ADVERTISESSETSETPARAMETERS）\r\n","android.graphics.drawable.BitmapDrawable.setTileModeY(android.graphics.TileMode)":"android.graphics.drawable.bitmapdrable.settilemodey（android.graphics.tilemode）\r\n","android.content.pm.ShortcutInfo.isCached()":"android.content.pm.shortcutinfo.iscached（）\r\n","android.content.Loader.dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])":"android.content.loader.dump（java.lang.string，java.io.filedescriptor，java.io.printwriter，java.lang.string []）\r\n","android.content.pm.PackageItemInfo.packageName":"android.content.pm.packageiteminfo.packagename\r\n","android.content.Intent.CATEGORY_HE_DESK_DOCK":"android.content.intent.category_he_desk_dock\r\n","Create a new typeface from the specified font data.":"从指定的字体数据创建新字体。\r\n","Broadcast Action: The current device ":"广播动作：当前设备\r\n","android.bluetooth.BluetoothHeadset.isNoiseReductionSupported(android.bluetooth.BluetoothDevice)":"android.bluetooth.bluetoothheadset.isnoiserereductionsupported（android.bluetooth.bluetoothdevice）\r\n","Computes the matrix corresponding to the current transformation\n            and applies it to the specified Canvas.":"计算与当前转换相对应的矩阵\r\n            并将其应用于指定的画布。\r\n","android.graphics.Canvas.saveLayerAlpha(android.graphics.RectF, int, int)":"机器人。图形。帆布。saveLayerAlpha（android。图形。RectF，int，int）\r\n","android.content.Context.MIDI_SERVICE":"android.content.context.midi_service\r\n","Gets the current scene mode setting.":"获取当前的场景模式设置。\r\n","android.content.Intent.CATEGORY_APP_MUSIC":"android.content.intent.category_app_music\r\n"," to indicate total row count of\n            recordset when paging is supported.":" 指示总数的总数\r\n            支持分页时的记录集。\r\n","android.database.sqlite.SQLiteQueryBuilder.buildQuery(java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"android.database.sqlite.sqlitequerybuilder.buildquery（java.lang.string []，java.lang.string，java.lang.string [] java.lang.string）\r\n","Sets an integer parameter.":"设置一个整数参数。\r\n","Called when there is a new sensor event.":"当有新的传感器事件时称呼。\r\n","Used to indicate that the SyncAdapter is already performing a sync operation, though\n            not necessarily for the requested account and authority and that it wasn't able to\n            process this request.":"用于表明SyncAdapter已经执行同步操作，但是\r\n            不一定是针对要求的帐户和权威的\r\n            处理此请求。\r\n","Postconcats the matrix with the specified translation.":"将矩阵带有指定的翻译。\r\n","Dump the contents of a Cursor's current row to a String.":"将光标的当前行的内容转换为字符串。\r\n","android.graphics.Bitmap.setColorSpace(android.graphics.ColorSpace)":"android.graphics.bitmap.setcolorspace（android.graphics.colorspace）\r\n","Categories for activities that can participate in voice interaction.":"可以参与语音互动的活动的类别。\r\n","Sets the position of the center of the gradient as a fraction of the\n            width and height.":"将梯度中心的位置设置为一小部分\r\n            宽度和高度。\r\n","Shader is the base class for objects that return horizontal spans of colors\n            during drawing.":"着色器是返回颜色水平跨度的物体的基类\r\n            在绘画期间。\r\n","#toChars":"#tochars\r\n","Added to ":"添加到\r\n","alpha":"阿尔法\r\n","android.database.sqlite.SQLiteStatement.simpleQueryForString()":"android.database.sqlite.sqlitestatement.simplequeryforstring（）\r\n","android.graphics.text.PositionedGlyphs.getGlyphId(int)":"android.graphics.text.positionedglyphs.getglyphid（int）\r\n","if the camera cannot be re-locked (for\n     example, if the camera is still in use by another process).\n":"如果无法重新锁定相机（因为\r\n     例如，如果相机仍在使用另一个过程中）。\r\n\r\n","android.graphics.Path.incReserve(int)":"android.graphics.path.increserve（int）\r\n","android.content.pm.PackageManager.extendVerificationTimeout(int, int, long)":"android.content.pm.packagemanager.extendverificiationTimeout（int，int，long）\r\n","Attempts to cancel operation that has not already started.":"试图取消尚未启动的操作。\r\n","android.graphics.ComposePathEffect.ComposePathEffect(android.graphics.PathEffect, android.graphics.PathEffect)":"android.graphics.composepatheffect.composepatheffect（android.graphics.patheffect，android.graphics.patheffect）\r\n","android.content.pm.ApplicationInfo.MEMTAG_DEFAULT":"android.content.pm.applicationinfo.memtag_default\r\n","android.content.Intent.ACTION_MEDIA_NOFS":"android.content.intent.action_media_nofs\r\n","android.graphics.PorterDuffColorFilter.PorterDuffColorFilter(int, android.graphics.Mode)":"android.graphics.porterduffcolorfilter.porterduffcolorfilter（int，android.graphics.mode）\r\n","android.content.ContentResolver.NOTIFY_SKIP_NOTIFY_FOR_DESCENDANTS":"android.content.contentresolver.notify_skip_notify_for_descendants\r\n","android.content.Intent.ACTION_WEB_SEARCH":"android.content.intent.action_web_search\r\n","Value for ":"价值\r\n","android.content.Intent.EXTRA_PHONE_NUMBER":"android.content.intent.extra_phone_number\r\n","android.content.ContextParams.getNextAttributionSource()":"android.content.contextparams.getNextatTattributionsource（）\r\n","android.graphics.Matrix.setSinCos(float, float)":"android.graphics.matrix.setsincos（float，float）\r\n","android.graphics.Paint.setStyle(android.graphics.Style)":"android.graphics.paint.setstyle（android.graphics.Style）\r\n","if the image format is not supported or can not be decoded.\n\n ":"如果不支持图像格式或无法解码。\r\n\r\n \r\n","android.graphics.Rect.inset(android.graphics.Insets)":"机器人。图形。长插页（android。图形。插页)\r\n","android.graphics.drawable.RotateDrawable.setPivotXRelative(boolean)":"android.graphics.drawable.RotatedRawable.setpivotxrelative（boolean）\r\n","android.content.res.XmlResourceParser":"机器人。内容。res.XmlResourceParser\r\n","android.content.Context.ACCESSIBILITY_SERVICE":"android.content.Context.Accessibility_service\r\n","Battery status is unknown.":"电池状态未知。\r\n","android.database.MatrixCursor.MatrixCursor(java.lang.String[], int)":"机器人。数据库。MatrixCursor.MatrixCursor（java。朗。字符串[],int)\r\n","android.graphics.Paint.isLinearText()":"android.graphics.paint.islineartext（）\r\n","android.content.ContentResolver.NOTIFY_SYNC_TO_NETWORK":"android.content.contentresolver.notify_sync_to_network\r\n","android.graphics.ColorFilter":"机器人。图形。彩色过滤器\r\n","android.R.attr#protectionLevel":"android.r.attr＃protectionLevel\r\n","Specify an alpha value for the drawable.":"指定可绘制的alpha值。\r\n","Helper for getFlags(), returning true if LINEAR_TEXT_FLAG bit is set -or- Helper for setFlags(), setting or clearing the LINEAR_TEXT_FLAG bit":"getflags（）的助手，如果linear_text_flag位设置为-or- helper for setFlags（），设置或清除linear_text_flag位，则返回true。\r\n","android.content.pm.ApplicationInfo.getRequestRawExternalStorageAccess()":"android.content.pm.applicationinfo.getRequestrawexternalStorageAccess（）\r\n","Activity Action: Perform text translation.":"活动动作：执行文本翻译。\r\n","Perform a sync for this account.":"为此帐户执行同步。\r\n","A helper class to manage database creation and version management.":"辅助类，用于管理数据库创建和版本管理。\r\n","android.content.pm.ApplicationInfo.loadDescription(android.content.pm.PackageManager)":"android.content.pm.applicationinfo.loaddescription（android.content.pm.packagemanager）\r\n","Include manifest shortcuts in the result.":"在结果中包括明显的快捷方式。\r\n","ContentProvider":"内容提供商\r\n","android.graphics.text.LineBreaker.BREAK_STRATEGY_BALANCED":"android.graphics.text.linebreaker.break_strategy_balenced\r\n","android.graphics.Paint.getTextBounds(java.lang.CharSequence, int, int, android.graphics.Rect)":"android.graphics.paint.getTextbounds（java.lang.CharSequence，int，int，android.graphics.Rect）\r\n","Construct a PathEffect whose effect is to apply two effects, in sequence.":"构建一种效果，其效果是在序列上应用两种效果。\r\n","android.database.DatabaseUtils.stringForQuery(android.database.sqlite.SQLiteStatement, java.lang.String[])":"android.database.databaseutils.stringforquery（android.database.sqlite.sqlitestatement，java.lang.string []）\r\n","Create an emboss maskfilter":"创建一个浮雕面具\r\n","Adds the specified file suffix to the list of file suffixes this DRM plug-in supports.":"将指定的文件后缀添加到该DRM插件支持的文件后缀列表中。\r\n","Close any open database object.":"关闭任何打开的数据库对象。\r\n","Implement this to handle requests to update one or more rows.":"实施此操作以处理请求以更新一个或多个行。\r\n","android.content.Context.getParams()":"android.content.context.getParams（）\r\n","Returns the property definition for all &lt;provider&gt; tags.":"返回所有&lt;provider&gt;标签的属性定义。\r\n","Return true if the region is empty, or if the specified rectangle does\n            not intersect the region.":"如果区域为空，或者指定的矩形返回true\r\n            不是相交的区域。\r\n","android.graphics.Region.isComplex()":"android.graphics.region.iscomplex（）\r\n"," from parcel.":" 来自包裹。\r\n","android.content.Context.moveDatabaseFrom(android.content.Context, java.lang.String)":"android.content.context.movedatabasefrom（android.content.context，java.lang.string）\r\n","android.graphics.drawable.BitmapDrawable.setTileModeXY(android.graphics.TileMode, android.graphics.TileMode)":"android.graphics.drawable.bitmapdrable.settilemodexy（android.graphics.tilemode，android.graphics.tilemode）\r\n","Create an empty drawable, not dealing with density.":"创建一个空的可绘图，不处理密度。\r\n","android.content.Context.IPSEC_SERVICE":"android.content.context.ipsec_service\r\n","android.content.ClipboardManager":"android.content.ClipboardManager\r\n","Broadcast the given intent to all interested BroadcastReceivers, delivering\n            them one at a time to allow more preferred receivers to consume the\n            broadcast before it is delivered to less preferred receivers.":"向所有感兴趣的广播员广播给定的意图，交付\r\n            他们一次一次让更多的首选接收者消耗\r\n            在将其交付给较少首选的接收器之前广播。\r\n","\n            with no options specified.":"\r\n            没有指定选项。\r\n","Activity action: Launch UI to manage auto-revoke state.":"活动动作：启动UI来管理自动诉讼状态。\r\n","android.database.sqlite.SQLiteQueryBuilder.update(android.database.sqlite.SQLiteDatabase, android.content.ContentValues, java.lang.String, java.lang.String[])":"android.database.sqlite.sqlitequerybuilder.update（android.database.sqlite.sqlite.sqlitedatabase，android.content.content.contentvalues，java.lang.lang.string，java.lang.string []）\r\n","Context#startActivity Context.startActivity()":"上下文＃startActivity context.startactivity（）\r\n","android.content.pm.ShortcutManager.getPinnedShortcuts()":"android.content.pm.shortcutmanager.getpinnedshortcuts（）\r\n","android.graphics.Paint.isElegantTextHeight()":"android.graphics.paint.iseleganttextheight（）\r\n","Extra that can be included on activity intents coming from the storage UI\n            when it launches sub-activities to manage various types of storage.":"可以包含来自存储UI的活动意图的额外\r\n            当它启动亚活动以管理各种类型的存储空间时。\r\n","android.database.sqlite.SQLiteDatabase.endTransaction()":"android.database.sqlite.sqlitedatabase.endtransaction（）\r\n","android.content.res.loader.ResourcesProvider.loadFromDirectory(java.lang.String, android.content.res.loader.AssetsProvider)":"android.content.res.res.loader.resourcesprovider.loadfromdirectory（java.lang.string，android.content.res.res.res.res.res. loader.assetsprovider）\r\n","android.content.pm.PackageManager.getPermissionGroupInfo(java.lang.String, int)":"android.content.pm.packagemanager.getpermissiongroupinfo（java.lang.string，int）\r\n","InstrumentationInfo":"InstrumentationInfo\r\n","#NO_MATCH_ACTION":"#no_match_action\r\n","Intent#ACTION_PACKAGE_NEEDS_VERIFICATION package verification\n            broadcast":"意图＃action_package_needs_verification软件包验证\r\n            播送\r\n","FileOutputStream":"fileOutputstream\r\n","android.content.ContentProvider.openFile(android.net.Uri, java.lang.String, android.os.CancellationSignal)":"android.content.contentprovider.openfile（android.net.uri，java.lang.string，android.os.os.cancellationsignal）\r\n","android.database.DatabaseUtils.createDbFromSqlStatements(android.content.Context, java.lang.String, int, java.lang.String)":"android.database.databaseutils.createdbfromsqlstatements（android.content.context，java.lang.string，int，int，java.lang.string）\r\n","android.hardware.Camera.release()":"android.hardware.camera.Release（）\r\n","android.content.pm.ApplicationInfo.targetSdkVersion":"android.content.pm.applicationinfo.targetsdkversion\r\n","Return a string representation of the rectangle in a compact form.":"以紧凑形式返回矩形的字符串表示形式。\r\n","Gets the drawable at an index.":"在索引上获取可绘制的绘制。\r\n","Reads a Short out of a column in a Cursor and writes it to a ContentValues.":"从光标中读出一小部分，并将其写入ContentValues。\r\n","android.content.Intent.putExtra(java.lang.String, double[])":"android.content.intent.putextra（java.lang.string，double []）\r\n","Return a color-int from alpha, red, green, blue float components\n            in the range \\([0.":"Return a color-int from alpha, red, green, blue float components\r\n            in the range \\([0.\r\n","to allow the current ClipData to be\n overwritten, even if it is already set.":"允许当前的clipdata为\r\n 即使已经设置了它，即使它已经设置了。\r\n","Shader":"着色器\r\n"," indicating that no width\n            has been specified.":" 表明没有宽度\r\n            已指定。\r\n","Creates a context with specific properties and behaviors.":"创建具有特定属性和行为的上下文。\r\n","android.graphics.PathMeasure.getLength()":"android.graphics.pathmeasure.getLength（）\r\n","DrmManagerClient.OnInfoListener#onInfo onInfo()":"drmmanagerclient.oninfolistener＃oninfo oninfo（）\r\n","android.graphics.Canvas.disableZ()":"android.graphics.canvas.disablez（）（）\r\n",": The device includes a proximity sensor.":"：该设备包括一个接近传感器。\r\n","Broadcast the given intent to all interested BroadcastReceivers, allowing\n an optional required permission to be enforced.":"向所有感兴趣的广播员广播给定的意图，允许\r\n 执行可选的必要许可。\r\n","android.content.AttributionSource.enforceCallingUid()":"android.content.attributionsource.enforcecallinguid（）\r\n","Installs a callback to be invoked for every preview frame, using\n            buffers supplied with ":"安装一个用于每个预览帧的回调，使用\r\n            提供的缓冲区\r\n","android.content.res.Resources.openRawResource(int, android.util.TypedValue)":"android.content.res.resources.openrawresource（int，android.util.typedvalue）\r\n","Indicates that the API call was successful":"表示API电话成功了\r\n","Notify the listener of the detected faces in the preview frame.":"在预览框架中通知检测到的面孔的听众。\r\n","android.content.RestrictionEntry.setChoiceEntries(java.lang.String[])":"android.content.restrictionerentry.setchoiceentries（java.lang.string []）\r\n","android.content.pm.ApplicationInfo.isVirtualPreload()":"android.content.pm.applicationinfo.isvirtualpreload（）\r\n","A driver for SQLiteCursors that is used to create them and gets notified\n            by the cursors it creates on significant events in their lifetimes.":"用于创建SQLiteCursors并获得通知的驱动程序\r\n            通过它在其有生之年的重大事件上创建的游标。\r\n","android.graphics.drawable.LevelListDrawable":"android.graphics.drawable.levellistdrawable\r\n","Create an Icon pointing to a bitmap in memory that follows the icon design guideline defined\n            by ":"创建一个指向记忆中的位图的图标，该图标遵循定义的图标设计准则\r\n            经过\r\n","\n            for managing roles.":"\r\n            用于管理角色。\r\n","android.content.ContentProvider.call(java.lang.String, java.lang.String, java.lang.String, android.os.Bundle)":"android.content.contentprovider.call（java.lang.string，java.lang.string，java.lang.string，android.os.bundle）\r\n","android.content.Intent.replaceExtras(android.os.Bundle)":"android.content.intent.replaceExtras（android.os.bundle）\r\n","Gets the Alpha component from an integer color.":"从整数颜色获取Alpha分量。\r\n","Retrieve the label associated with this object.":"检索与此对象关联的标签。\r\n"," state sets to colors.":" 状态设置为颜色。\r\n",": The device supports host-\n            based NFC-F card emulation.":"：该设备支持主机 - \r\n            基于NFC-F卡仿真。\r\n","Include pinned shortcuts in the result.":"在结果中包括固定快捷方式。\r\n","If this extra is set to true then the sync settings (like getSyncAutomatically())\n            are ignored by the sync scheduler.":"如果此额外设置为true，则同步设置（例如getSyncautomation（））\r\n            同步调度程序忽略了。\r\n","This is the Android platform's base MIME type for a content: URI\n            containing a Cursor of zero or more items.":"这是Android平台的基础MIME类型：uri\r\n            包含零或更多项目的光标。\r\n","Callback reporting the RSSI for a remote device connection.":"回调报告远程设备连接的RSSI。\r\n","android.content.res.Configuration.setLayoutDirection(java.util.Locale)":"android.content.res.configuration.setlayoutdirection（java.util.locale）\r\n","Broadcast Action: The current time has changed.":"广播动作：当前时间已经改变。\r\n","android.graphics.drawable.Drawable.invalidateSelf()":"android.graphics.drawable.drawable.invalidateself（）\r\n","android.graphics.Bitmap.createBitmap(android.graphics.Picture)":"android.graphics.bitmap.createbitmap（android.graphics.picture）\r\n",": The device has\n            a Keystore implementation that can create application-specific attestation keys.":"：设备有\r\n            可以创建特定于应用程序的证明密钥的密钥库实现。\r\n","android.database.DatabaseUtils.longForQuery(android.database.sqlite.SQLiteStatement, java.lang.String[])":"android.database.databaseutils.longforquery（android.database.sqlite.sqlitestatement，java.lang.string []）\r\n","Returns the Porter-Duff mode used to composite this color filter's\n            color with the source pixel when this filter is applied.":"返回用于复合此颜色过滤器的Porter-Duff模式\r\n            应用此过滤器时，用源像素颜色。\r\n","RestrictionEntry#TYPE_CHOICE":"限制性＃type_choice\r\n"," to indicate the calling\n            package verifier does not vote to allow the installation to proceed.":" 指示呼叫\r\n            软件包验证者不投票以允许安装进行。\r\n","Return the class name of this component.":"返回此组件的类名。\r\n","android.content.Intent.ACTION_CREATE_DOCUMENT":"android.content.intent.action_create_document\r\n","Returns the stored value for this descriptor":"返回此描述符的存储值\r\n","android.database.sqlite.SQLiteOpenHelper.getWritableDatabase()":"android.database.sqlite.sqliteopenhelper.getWritabledatabase（）\r\n",", but can be implemented by providers\n            that need to be able to return sub-sections of files, often assets\n            inside of their .":"，但可以由提供商实施\r\n            这需要能够返回文件的子段，通常是资产\r\n            他们的内部。\r\n"," is no\n longer needed by this ":" 没有\r\n 这需要更长的时间\r\n","Returns the number of components that form a color value according\n            to this color space's color model.":"返回形成颜色值的组件数量\r\n            对于此颜色空间的颜色模型。\r\n","android.content.Context Context":"android.content.context上下文\r\n","Returns the type of shape used by this drawable, one of ":"返回此可绘制的形状类型\r\n","android.hardware.Sensor.getId()":"android.hardware.sensor.getID（）\r\n","android.nfc.NfcManager":"android.nfc.nfcmanager\r\n","Convenience class to construct sync requests.":"便利类构建同步请求。\r\n","Called when the accuracy of the registered sensor has changed.":"当注册传感器的准确性发生变化时调用。\r\n","Activity Action: Allow the user to select a particular kind of data and\n            return it.":"活动行动：允许用户选择特定类型的数据，并且\r\n            把它返还。\r\n","Returns an array of strings naming the private files associated with\n            this Context's application package.":"返回一系列字符串，命名与之关联的私人文件\r\n            此上下文的应用程序包。\r\n","A constant string holding the desired subject line of a message.":"一个恒定的字符串，保留消息的所需主题行。\r\n","If set to a value > 1, requests the decoder to subsample the original\n image, returning a smaller image to save memory.":"如果设置为一个值> 1，请请求解码器将原始样本子样本子\r\n 图像，返回较小的图像以节省内存。\r\n","android.graphics.drawable.Icon.loadDrawableAsync(android.content.Context, android.graphics.drawable.OnDrawableLoadedListener, android.os.Handler)":"android.graphics.drawable.icon.icon.loaddrawableasync（android.content.context，android.graphics.drawable.drawable.ondrawableloadedlistener，android.os.handler）\r\n","android.graphics.drawable.GradientDrawable":"机器人。图形。可画的。渐变绘制\r\n","The desired extra UI options for this activity and its main window.":"此活动及其主窗口所需的额外UI选项。\r\n","Create a color filter that transforms colors through a 4x5 color matrix.":"Create a color filter that transforms colors through a 4x5 color matrix.\r\n","Picture#draw(Canvas)":"图片＃画（画布）\r\n","android.graphics.HardwareRenderer.setOpaque(boolean)":"android.graphics.hardwarerenderer.setopaque（boolean）\r\n","Match this intent filter against the given Intent data.":"将此意图过滤器与给定的意图数据匹配。\r\n","Return all pinned shortcuts from the caller app.":"返回呼叫者应用程序中的所有固定快捷方式。\r\n","android.R.styleable#AndroidManifest_revisionCode revisionCode":"Android.r.Stylable＃AndroidManifest_revisionCode RevisionCode\r\n","#getDeclaredLength":"#getDeclaredLength\r\n","#getDrawable(int)":"#getDrawable（int）\r\n","If set, this intent will not match any components in packages that\n are currently stopped. ":"如果设置，此意图将与包装中的任何组件都不匹配\r\n 目前已停止。\r\n","android.graphics.drawable.LayerDrawable.getDrawable(int)":"android.graphics.drawable.layerdrawable.getDrawable（int）\r\n","android.content.pm.PackageManager.FEATURE_CONNECTION_SERVICE":"android.content.pm.packagemanager.feature_connection_service\r\n","CursorWindow":"[医]弯窗\r\n","android.graphics.RadialGradient.RadialGradient(float, float, float, float, float, float, long[], float[], android.graphics.TileMode)":"android.graphics.radialgradient.radialgradient（浮点，浮点，浮点，浮点，浮点，浮点，浮点，长[]，float []，android.graphics.tilemode）\r\n","An oriented bounding box":"面向边界的框\r\n","#updateTexImage":"#updateteximage\r\n","android.graphics.Matrix.postScale(float, float, float, float)":"android.graphics.matrix.postscale（浮点，浮点，浮点，浮点）\r\n","android.bluetooth.le.AdvertiseSettings.getTxPowerLevel()":"android.bluetooth.le..Advertisestings.getTxPowerLevel（）\r\n","\n            color space with the specified red, green, blue and alpha component values.":"\r\n            带有指定的红色，绿色，蓝色和α组件值的彩色空间。\r\n","android.graphics.RectF.intersects(android.graphics.RectF, android.graphics.RectF)":"android.graphics.Rectf.Intersects（android.graphics.Rectf，android.graphics.Rectf）\r\n"," with the target\n            density of the given ":" 与目标\r\n            给定密度\r\n","Shared library type: this library is a part of the OS\n            and cannot be updated or uninstalled.":"共享库类型：此库是操作系统的一部分\r\n            并且无法更新或卸载。\r\n",": The device includes a hinge angle sensor.":"：该设备包括一个铰链角传感器。\r\n","android.graphics.drawable.InsetDrawable.InsetDrawable(android.graphics.drawable.Drawable, int)":"android.graphics.drawable.insetdrawable.insetdrawable（android.graphics.drawable.drawable，int）\r\n","android.gesture.GestureStore.save(java.io.OutputStream)":"android.gesture.gesturestore.save（java.io.outputstream）\r\n","Retrieves the DRM plug-in (agent) description.":"检索DRM插件（代理）描述。\r\n","android.content.Context.sendStickyBroadcast(android.content.Intent, android.os.Bundle)":"android.content.Context.SendStickyBroadcast（android.content.intent，android.os.bundle）\r\n","Add a closed circle contour to the path":"在路径上添加封闭的圆形轮廓\r\n","Key for the optional error code in the response bundle sent to the application.":"发送到应用程序的响应捆绑包中的可选错误代码的键。\r\n","android.content.Context.isRestricted()":"android.content.context.isrestricted（）\r\n","android.content.Context.checkCallingOrSelfPermission(java.lang.String)":"android.content.Context.CheckcallingorSelfpermisser（java.lang.string）\r\n","Open a file descriptor for reading a raw resource.":"打开文件描述符，用于读取原始资源。\r\n","android.content.ContentProvider.onConfigurationChanged(android.content.res.Configuration)":"android.content.contentprovider.onconfigurationchanged（android.content.res.configuration）\r\n","android.content.Intent.ACTION_SENDTO":"android.content.intent.action_sendto\r\n","android.content.Intent.ACTION_UNINSTALL_PACKAGE":"android.content.intent.action_uninstall_package\r\n","android.graphics.drawable.Icon.loadDrawable(android.content.Context)":"android.graphics.drawable.icon.icon.loaddrable（android.content.context）\r\n"," indicating which quick view features should be made\n            available to the user in the quick view UI while handing a\n            ":" 指示应制作哪些快速视图功能\r\n            递给快速视图UI中的用户\r\n            \r\n","android.content.Intent.ACTION_MEDIA_SCANNER_SCAN_FILE":"android.content.intent.action_media_scanner_scan_file\r\n",", as last configured by\n            ":"，最后由\r\n            \r\n","Gets the value of the field at the specified row and column index as a\n            <code>short</code>.":"在指定的行和列索引处获取字段的值\r\n            <code>简短</code>。\r\n","if the database cannot be opened\n":"如果数据库无法打开\r\n\r\n","android.graphics.Canvas.drawColor(int)":"android.graphics.canvas.drawcolor（int）\r\n","Returns a list of characteristics included in this service.":"返回此服务中包含的特征列表。\r\n","android.content.SyncResult.syncAlreadyInProgress":"android.content.syncresult.syncalreadyinprogress\r\n","android.content.Intent.ACTION_LOCALE_CHANGED":"android.content.intent.action_locale_changed\r\n","android.database.sqlite.SQLiteCursorDriver.query(android.database.sqlite.CursorFactory, java.lang.String[])":"android.database.sqlite.sqlitecursordriver.query（android.database.sqlite.cursorfactory，java.lang.string []）\r\n","Returns all available font files in the system.":"返回系统中的所有可用字体文件。\r\n","This exception is thrown when a given MIME type does not have a valid\n syntax.":"当给定的MIME类型没有有效\r\n 句法。\r\n","Returns the total number of bytes of this asset entry's data.":"返回此资产条目数据的总字节数。\r\n","android.graphics.fonts.FontStyle.FONT_WEIGHT_NORMAL":"android.graphics.fonts.fontstyle.font_weight_normal\r\n","android.graphics.Bitmap.asShared()":"android.graphics.bitmap.asshared（）\r\n","Subclasses must implement this to take care of loading their data,\n            as per ":"子类必须实施此操作以照顾加载数据，\r\n            按照\r\n","When a constraint violation occurs, an immediate ROLLBACK occurs,\n            thus ending the current transaction, and the command aborts with a\n            return code of SQLITE_CONSTRAINT.":"当发生约束违规时，会立即发生回滚，\r\n            因此结束了当前的交易，命令以\r\n            sqlite_constraint的返回代码。\r\n","android.os.Build.VERSION_CODES#Q":"android.os.build.version_codes＃q\r\n","android.graphics.drawable.shapes.Shape.getWidth()":"android.graphics.drawable.shapes.shape.getWidth（）\r\n","Remove all permissions to access a particular content provider Uri\n            that were previously added with ":"删除所有权限以访问特定内容提供商URI\r\n            以前添加了\r\n","android.content.RestrictionsManager.REQUEST_KEY_NEW_REQUEST":"android.content.strictionsmanager.request_key_new_request\r\n","android.bluetooth.BluetoothHealth":"android.bluetooth.bluetoothhealth\r\n","android.content.Intent.parseIntent(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet)":"android.content.intent.parseintent（android.content.res.res.resources，org.xmlpull.v1.xmlpullparser，android.util.attributeset）\r\n","android.content.AsyncQueryHandler.onQueryComplete(int, java.lang.Object, android.database.Cursor)":"android.content.asyncqueryhandler.onquerycomplete（int，java.lang.object，android.database.cursor）\r\n","Returns the provided user-visible description of the entry, if any. -or- Sets the user-visible description of the entry, as a possible sub-text for the title.":"返回所提供的用户可见的条目描述（如果有）。 - 或 - 设置条目的用户可见描述，作为标题的可能子文本。\r\n","android.hardware.HardwareBuffer.USAGE_SENSOR_DIRECT_DATA":"android.hardware.hardwarebuffer.usage_sensor_direct_data\r\n","Return the paint's stroke miter value. -or- Set the paint's stroke miter value.":"返回油漆的中风斜切价值。 - 或 - 设置油漆的笔划斜切值。\r\n","android.graphics.drawable.Icon.createWithContentUri(java.lang.String)":"android.graphics.drawable.icon.createwithcontenturi（java.lang.string）\r\n","Return the set of parameters which this Context was created with, if it\n            was created via ":"返回使用此上下文创建的一组参数，如果\r\n            是通过\r\n","Memory allocation failed during renewal. ":"续订期间内存分配失败。\r\n","android.content.res.ObbInfo.flags":"机器人。内容。res.ObbInfo.旗帜\r\n","Indicates whether the content of this display list overlaps.":"指示此显示列表的内容是否重叠。\r\n","Returns the y offset of the shadow layer.":"返回阴影层的Y偏移。\r\n","android.content.pm.ComponentInfo.descriptionRes":"android.content.pm.com.ponentinfo.descriptionres\r\n","A String holding the phone number originally entered in\n            ":"持有最初输入电话号码的字符串\r\n            \r\n","android.content.Intent.EXTRA_SHORTCUT_NAME":"android.content.intent.extra_shortcut_name\r\n","Bind a ":"绑定\r\n","The Matrix class holds a 3x3 matrix for transforming coordinates.":"矩阵类容纳一个3x3矩阵，用于转换坐标。\r\n","if the given ID\n         does not exist.\n":"如果给定的ID\r\n         不存在。\r\n\r\n","android.graphics.Matrix":"android.graphics.matrix\r\n","This method begins an asynchronous delete.":"此方法开始异步删除。\r\n"," for each of the two types of shortcuts (static and dynamic).":" 对于两种类型的快捷方式（静态和动态）。\r\n","Assign the array of floats into this matrix, copying all of its values.":"Assign the array of floats into this matrix, copying all of its values.\r\n","android.hardware.input.InputManager":"android.hardware.input.inputmanager\r\n","android.graphics.Rect.offset(int, int)":"机器人。图形。长偏移量(int,int)\r\n","android.graphics.drawable.InsetDrawable.InsetDrawable(android.graphics.drawable.Drawable, float, float, float, float)":"android.graphics.drawable.insetdrawable.insetdrawable（android.graphics.drawable.drawable，float，float，float，float，float）\r\n","android.content.res.Resources.getFloat(int)":"android.content.res.resources.getFloat（int）\r\n","android.companion.WifiDeviceFilter":"android.companion.wifidevicefilter\r\n","android.R.styleable#AndroidManifest_sharedUserLabel sharedUserLabel":"Android.r.Stylable＃AndroidManifest_shareduserlabel SharedUserLabel\r\n","android.database.sqlite.SQLiteClosable.onAllReferencesReleased()":"android.database.sqlite.sqliteclosable.onallreferencesrencesrencesRealaseRease（）\r\n","Error code indicating that Bluetooth is not enabled":"错误代码表示未启用蓝牙\r\n","android.content.res.Configuration.SCREEN_HEIGHT_DP_UNDEFINED":"android.content.res.configuration.screen_height_dp_undefined\r\n","android.graphics.drawable.LayerDrawable.getEndPadding()":"android.graphics.drawable.layerdrawable.getendpadding（）\r\n","android.graphics.ColorSpace.connect(android.graphics.ColorSpace)":"android.graphics.colorspace.connect（android.graphics.colorspace）\r\n","Starts the specified activity of the caller package in the specified profile.":"在指定的配置文件中启动呼叫者包的指定活动。\r\n","android.content.pm.ProviderInfo.grantUriPermissions":"android.content.pm.providerinfo.granturipermissions\r\n","Activity Action: Show settings for managing network data usage of a\n            specific application.":"活动行动：显示用于管理网络数据使用的设置\r\n            具体应用。\r\n","android.graphics.drawable.ColorDrawable.setAlpha(int)":"android.graphics.drawable.colordrawable.setalpha（int）\r\n","#registerReceiver":"#RegisterReceiver\r\n","Preconcat the current matrix with the specified rotation.":"用指定的旋转预先设置当前矩阵。\r\n","android.graphics.Color.pack(float, float, float, float, android.graphics.ColorSpace)":"android.graphics.color.pack（浮点，浮点，浮点，浮点，android.graphics.colorspace）\r\n","Return the max width for icons, in pixels.":"以像素为单位返回图标的最大宽度。\r\n","\n            for managing ":"\r\n            用于管理\r\n","android.content.Intent.EXTRA_DATA_REMOVED":"android.content.intent.extra_data_remaved\r\n","If non-null, these are the patterns that are allowed for granting URI\n            permissions.":"如果没有零，则这些是允许授予URI的模式\r\n            权限。\r\n","android.content.Intent.EXTRA_CHOSEN_COMPONENT":"android.content.intent.extra_chosen_component\r\n","Return a data authority in the filter.":"返回过滤器中的数据授权。\r\n","android.content.pm.PackageManager.FEATURE_SENSOR_HINGE_ANGLE":"android.content.pm.packagemanager.feature_sensor_hinge_angle\r\n","Returns whether the calling package can request to navigate the user to\n            the relevant settings page to request user consent to interact across profiles.":"返回调用软件包是否可以请求将用户导航到\r\n            相关设置页面要求用户同意跨配置文件进行交互。\r\n","android.graphics.Color.getColorSpace()":"android.graphics.Color.getColorSpace()\r\n","Returns the property definition for all &lt;receiver&gt; tags.":"返回所有&lt;receiver&gt;标签的属性定义。\r\n",": The device supports leanback UI.":"：该设备支持Leanback UI。\r\n","YCbCr format, used for video. ":"YCBCR格式，用于视频。\r\n","android.graphics.Color.isSrgb()":"android.graphics.color.issrgb（）\r\n","Constant representing error response for Set Report due to \"invalid report ID\".":"由于“无效的报告ID”而导致的设置报告的常数表示错误响应。\r\n","android.content.pm.PackageManager.resolveActivity(android.content.Intent, int)":"android.content.pm.PackageManager.resolveActivity(android.content.Intent,int)\r\n","A value to indicate the lack of CUJ information, disabling all installation scenario logic.":"表示缺乏CUJ信息的值，禁用所有安装方案逻辑。\r\n","android.content.pm.InstrumentationInfo.sourceDir":"android.content.pm.insrumentationinfo.sourcedir\r\n","android.bluetooth.BluetoothHeadset.getConnectedDevices()":"android.bluetooth.bluetoothheadset..getConnectedDevices（）\r\n","Measure cursor position within a run of text.":"在文本运行中测量光标位置。\r\n",": bits that encode whether the screen is wide gamut.":"：编码屏幕是否宽域的位。\r\n","android.graphics.Outline.setConvexPath(android.graphics.Path)":"android.graphics.outline.setConvexpath（android.graphics.path）\r\n","Cursors use this class to track changes others make to their URI.":"光标使用此课程来跟踪其他人对URI进行的更改。\r\n","Draw a series of points.":"画一系列要点。\r\n","Construct a canvas with the specified bitmap to draw into.":"用指定的位图构造画布。\r\n","android.content.res.Configuration.isScreenRound()":"android.content.res.configuration.isscreenround（）\r\n","Helper to getColor() that just returns the color's alpha value. -or- Helper to setColor(), that only assigns the color's alpha value,\n            leaving its r,g,b values unchanged.":"向GetColor（）的助手，刚刚返回颜色的alpha值。 - 或助手到setColor（），仅分配颜色的alpha值，\r\n            留下其R，G，B值不变。\r\n","android.bluetooth.le.BluetoothLeAdvertiser":"android.bluetooth.le.bluetoothleadvertiser\r\n","android.gesture.Gesture.toBitmap(int, int, int, int, int)":"android.gesture.gesture.tobitmap（int，int，int，int，int）\r\n","if the last reference to the object has already\n been released.\n":"如果对对象的最后一次引用\r\n 被发布。\r\n\r\n","ForceLoadContentObserver":"forceloadcontentobserver\r\n","android.content.Intent.getCharExtra(java.lang.String, char)":"android.content.intent.getCharextra（java.lang.string，char）\r\n","Returns the width of this buffer in pixels.":"以像素为单位返回此缓冲区的宽度。\r\n","Return a data scheme specific part in the filter.":"返回过滤器中的数据方案特定部分。\r\n","android.content.ContentResolver.QUERY_ARG_SQL_SELECTION":"android.content.contentresolver.query_arg_sql_selection\r\n","Get the maximum supported Transmit packet size for the underlying transport.":"获取基础运输的最大支持的发送数据包大小。\r\n","If set, this intent will always match any components in packages that\n are currently stopped. ":"如果设置，此意图将始终与包装中的任何组件匹配\r\n 目前已停止。\r\n","android.graphics.Color.pack()":"android.graphics.color.pack（）\r\n","android.content.res.Resources.getMovie(int)":"android.content.Res.Resources.GetMovie（int）\r\n"," to launch the files application.":" 启动文件应用程序。\r\n","android.graphics.Shader.getLocalMatrix(android.graphics.Matrix)":"android.graphics.shader.getlocalmatrix（android.graphics.matrix）\r\n",": The device supports Wi-Fi Aware.":"：该设备支持Wi-Fi意识。\r\n","Return a new Context object for the current Context but whose storage\n            APIs are backed by device-protected storage.":"返回当前上下文的新上下文对象，但其存储\r\n            API由设备保护的存储支持。\r\n","ContentResolver#setIsSyncable(android.accounts.Account, String, int)":"contentResolver＃setissyncable（android.accounts.accounts.account，string，int）\r\n","android.bluetooth.BluetoothHealth.disconnectChannel(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration, int)":"android.bluetooth.bluetoothhealth.disconnectChannel（android.bluetooth.bluetoothdevice，android.bluetooth.bluetooth.bluetoothhealthhealthappconfiguration，int）\r\n","android.bluetooth.le.PeriodicAdvertisingParameters.getInterval()":"android.bluetooth.le.periodicacadvertisingparameters.getInterval（）\r\n"," for managing media Sessions.":" 用于管理媒体会议。\r\n","Return in bounds (allocated by the caller) the smallest rectangle that\n            encloses all of the characters, with an implied origin at (0,0).":"返回边界（由呼叫者分配）最小的矩形\r\n            封闭所有字符，暗示为（0,0）。\r\n","Return a bit mask of configuration changes that will impact\n this drawable (and thus require completely reloading it).":"返回将影响的配置更改的位掩码\r\n 这个drawable（因此需要完全重新加载它）。\r\n","Set the region to the empty region":"将区域设置为空区域\r\n","android.graphics.Paint.getTypeface()":"android.graphics.paint.getTypeface（）\r\n","Return the UID associated with the given package name.":"返回与给定软件包名称关联的UID。\r\n","\n            \n            Type is:\n            <ul>\n                <li>for classic Bluetooth - ":"\r\n            \r\n            类型为：\r\n            <ul>\r\n                <li>用于经典蓝牙 - \r\n","Returns the resource ID of the style or layout against which the specified attribute was\n            resolved, otherwise returns defValue.":"返回指定属性为样式或布局的资源ID\r\n            已解决，否则返回defvalue。\r\n","Feature to edit a document using system standard editing mechanism, like\n            ":"使用系统标准编辑机制编辑文档的功能，例如\r\n            \r\n","Activity Action: Start the platform-defined tutorial":"活动动作：启动平台定义的教程\r\n","Retrieves information about how a package was installed or updated.":"检索有关如何安装或更新软件包的信息。\r\n","android.graphics.Paint.ascent()":"android.graphics.paint.ascent（）\r\n","android.graphics.RenderNode.setScaleX(float)":"android.graphics.rendernode.setscalex（float）\r\n","Each pixel is stored on 2 bytes.":"每个像素都存储在2个字节上。\r\n","Report that you have abandoned the processing of a content change that\n            was returned by ":"报告您已经放弃了内容更改的处理\r\n            被归还\r\n","android.content.res.Resources.getConfiguration()":"机器人。内容。资源。getConfiguration（）\r\n","Key that is used to pass the unique session ID for the account or the user.":"用于传递帐户或用户的唯一会话ID的键。\r\n","Provides methods for registering or unregistering arbitrary observers in an ":"提供在 \r\n","Creates a string representation of the Color.":"创建颜色的字符串表示形式。\r\n","android.content.Intent.ACTION_POWER_CONNECTED":"android.content.intent.action_power_connected\r\n","android.content.RestrictionsManager.ACTION_REQUEST_PERMISSION":"android.content.strictionsmanager.action_request_permission\r\n","android.graphics.ColorSpace.ILLUMINANT_D65":"android.graphics.colorspace.illuminant_d65\r\n","android.graphics.drawable.ShapeDrawable.setIntrinsicWidth(int)":"android.graphics.drawable.shapetrawable.setintrinsicwidth（int）\r\n","android.content.ContextWrapper.getBaseContext()":"android.content.contextwrapper.getbasecontext（）\r\n","android.content.pm.PackageManager.FEATURE_SENSOR_STEP_DETECTOR":"android.content.pm.packagemanager.feature_sensor_step_detector\r\n","android.bluetooth.BluetoothHidDevice.reportError(android.bluetooth.BluetoothDevice, byte)":"android.bluetooth.bluetoothhiddevice.reporterror（android.bluetooth.bluetoothdevice，byte）\r\n","Converts the stroke to a Path of a given number of points.":"将中风转换为给定数量的路径。\r\n","android.bluetooth.le.AdvertisingSet.setPeriodicAdvertisingEnabled(boolean)":"android.bluetooth.le..Advertisingset.setperiodicacadvertisingenabled（布尔）\r\n","The SyncAdapter was unable to authenticate the ":"SyncAdapter无法验证\r\n","Sets a description for the DRM plug-in (agent).":"设置DRM插件（代理）的描述。\r\n","if the attribute is defined but is\n         not a dimension.":"如果定义了属性，但是\r\n         不是尺寸。\r\n"," that is currently being synced.":" 目前正在同步。\r\n","draw the gradient from the left to the right ":"从左至右绘制梯度\r\n","android.graphics.drawable.BitmapDrawable.setTargetDensity(android.graphics.Canvas)":"android.graphics.drawable.bitmapdrable.settargetDensity（android.graphics.canvas）\r\n"," when the primary\n clip changes.":" 当主\r\n 剪辑更改。\r\n","android.content.ClipDescription.compareMimeTypes(java.lang.String, java.lang.String)":"android.content.clipdescription.com paremimetypes（java.lang.string，java.lang.string）\r\n","android.drm.DrmManagerClient.getMetadata(java.lang.String)":"android.drm.drmmanagerclient.getmetadata（java.lang.string）\r\n","android.graphics.Matrix.postRotate(float)":"android.graphics.matrix.postrotate（float）\r\n","android.database.sqlite.SQLiteTransactionListener":"android.database.sqlite.sqlitetransactionListener\r\n","Returns the activity icon with badging appropriate for the profile.":"返回适合配置文件的徽章的活动图标。\r\n","android.graphics.RenderNode.getRight()":"机器人。图形。RenderNode。特莱特()\r\n","android.graphics.Color.valueOf(float, float, float, float, android.graphics.ColorSpace)":"android.graphics.color.valueof（浮点，浮点，浮点，浮点，android.graphics.colorspace）\r\n","android.content.Intent.EXTRA_CHANGED_PACKAGE_LIST":"android.content.intent.extra_changed_pa​​ckage_list\r\n","android.content.Intent.ACTION_CLOSE_SYSTEM_DIALOGS":"android.content.intent.action_close_system_dialogs\r\n","android.graphics.BitmapRegionDecoder.newInstance(java.io.InputStream, boolean)":"android.graphics.bitmapregiondecoder.newinstance（java.io.inputstream，boolean）\r\n","Publish the list of shortcuts.":"发布快捷方式列表。\r\n","A drawable resource identifier (in the package's resources) of this\n            component's logo.":"可绘制的资源标识符（在包装资源中）\r\n            组件的徽标。\r\n","#sendStickyBroadcast":"#sendstickyBroadcast\r\n","Create a new PointF initialized with the values in the specified\n            PointF (which is left unmodified).":"在指定的\r\n            Pointf（未修改）。\r\n","android.content.Intent.EXTRA_SPLIT_NAME":"android.content.intent.extra_split_name\r\n","Updates the locally stored value of this characteristic.":"更新此特征的本地存储值。\r\n","android.content.Entity":"android.content.entity\r\n","android.drm.DrmManagerClient.getConstraints(java.lang.String, int)":"android.drm.drmmanagerclient.getConstraints（java.lang.string，int）\r\n","android.graphics.Color.blue(int)":"android.graphics.Color.blue(int)\r\n","android.content.Context.CAPTIONING_SERVICE":"android.content.context.captioning_service\r\n","android.database.sqlite.SQLiteCursor.setSelectionArguments(java.lang.String[])":"android.database.sqlite.sqlitecursor.setselectionarguments（java.lang.string []）\r\n","android.content.res.Resources.parseBundleExtras(android.content.res.XmlResourceParser, android.os.Bundle)":"android.content.Res.Res.resources.ParseBundleExtras（android.content.Res.xmlResourceparser，android.os.os.bundle）\r\n","android.content.pm.ApplicationInfo.ZEROINIT_DEFAULT":"android.content.pm.applicationinfo.zeroinit_default\r\n","ApplicationInfo#RAW_EXTERNAL_STORAGE_ACCESS_NOT_REQUESTED":"applicationinfo＃raw_external_storage_access_not_requested\r\n","android.content.Context.ROLE_SERVICE":"android.content.context.role_service\r\n","draw the gradient from the right to the left ":"从右向左画梯度\r\n"," to indicate that this notification is the\n            result of a ":" 表明该通知是\r\n            结果\r\n","android.content.Context.getSystemServiceName(java.lang.Class)":"android.content.context.getSystemserviceName（java.lang.class）\r\n","When this flag is set, if ":"设置此标志时，如果\r\n","Returns the property definition for all &lt;service&gt; tags.":"返回所有&lt;service&gt;标签的属性定义。\r\n","Create a new empty Rect.":"创建一个新的空矩形。\r\n","\n            when called by a legacy client.":"\r\n            当由旧客户端打电话时。\r\n","android.bluetooth.BluetoothStatusCodes":"android.bluetooth.bluetoothstatuscodes\r\n","This class enables rendering a PDF document.":"此类启用渲染PDF文档。\r\n","Retrieves constraint information for rights-protected content.":"检索受权保护内容的约束信息。\r\n","android.content.res.Configuration.UI_MODE_TYPE_CAR":"机器人。内容。res.配置。UI_MODE_TYPE_CAR\r\n","The request bundle passed in the ":"请求捆绑包在\r\n"," when used with\n            ":" 使用时\r\n            \r\n","android.drm.DrmRights.DrmRights(java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"android.drm.drmrights.drmrights（java.lang.string，java.lang.string，java.lang.string，java.lang.string）\r\n","android.drm.DrmManagerClient.getAvailableDrmSupportInfo()":"android.drm.drmmanagerclient.getavailabledrmsupportinfo（）\r\n","rightsPath":"RightSpath\r\n","Adds a null value to the set.":"在集合中添加一个空值。\r\n","Activity Action: Insert an empty item into the given container.":"活动动作：将一个空项目插入给定的容器中。\r\n","Continuous auto focus mode intended for taking pictures.":"连续自动焦点模式用于拍照。\r\n","If set, when sending a broadcast the recipient is allowed to run at\n foreground priority, with a shorter timeout interval. ":"如果设置，发送广播时，允许收件人在\r\n 前景优先级，较短的超时间隔。\r\n","Registers a callback for changes to packages in this user and managed profiles.":"注册一个回调，以更改此用户和托管配置文件中的软件包。\r\n","android.graphics.Path.addRect(float, float, float, float, android.graphics.Direction)":"android.graphics.path.Addect（浮点，浮点，浮点，浮点，android.graphics.Direction）\r\n","android.content.pm.InstrumentationInfo.targetProcesses":"android.content.pm.instrumentationinfo.targetProcesses\r\n","Launches a shortcut.":"推出快捷方式。\r\n","android.graphics.drawable.shapes.RoundRectShape.RoundRectShape(float[], android.graphics.RectF, float[])":"android.graphics.drawable.shapes.RoundRectShape.RoudeRectShape（float []，android.graphics.Rectf，float []）\r\n","Return the paint's horizontal scale factor for text.":"返回涂料的水平尺度因子以进行文本。\r\n","android.graphics.drawable.LayerDrawable.setPadding(int, int, int, int)":"android.graphics.drawable.layerdrawable.setpadding（int，int，int，int）\r\n","Implement this to shut down the ContentProvider instance.":"实施此操作以关闭ContentProvider实例。\r\n","Retrieves information about all the DRM plug-ins (agents) that are registered with\n            the DRM framework.":"检索有关所有注册的DRM插件（代理）的信息\r\n            DRM框架。\r\n","Bundle#putString":"束＃putstring\r\n","android.content.pm.PackageInfo.receivers":"android.content.pm.packageinfo.receivers\r\n","android.content.RestrictionEntry.getRestrictions()":"android.content.grestrictionerentry.getRestrictions（）\r\n","android.content.Intent.ACTION_USER_UNLOCKED":"android.content.intent.action_user_unlocked\r\n",":\n            The device supports picture-in-picture multi-window mode.":"：\r\n            该设备支持图片中的多窗模式。\r\n","Return the advance widths for the characters in the string.":"返回字符串中字符的前进宽度。\r\n","android.graphics.drawable.Drawable.setHotspotBounds(int, int, int, int)":"android.graphics.drawable.drawable.sethotspotbounds（int，int，int，int）\r\n","android.graphics.Matrix.preSkew(float, float, float, float)":"android.graphics.matrix.preskew（浮点，浮点，浮点，浮点）\r\n"," that matches\n            the specified RGB to CIE XYZ transform and transfer functions.":" 匹配\r\n            指定的RGB到CIE XYZ转换和传递功能。\r\n","#onReceive(Context, Intent)":"#onreceive（上下文，意图）\r\n"," suitable for building a\n            ":" 适用于建造\r\n            \r\n","Query for the possible MIME types for the representations the given\n            content URL can be returned when opened as as stream with\n            ":"查询对给定的可能的MIME类型\r\n            内容URL可以作为流以流的方式打开时返回\r\n            \r\n","android.content.IntentFilter.IntentFilter(android.content.IntentFilter)":"android.content.intentfilter.intentfilter（android.content.intentfilter）\r\n","Swap top/bottom or left/right if there are flipped (i.e. left > right\n and/or top > bottom).":"交换顶部/底部或左/右，如果有翻转（即左>右\r\n 和/或顶部>底部）。\r\n","#setStrictGrammar(boolean)":"#SetStrictGrammar（布尔值）\r\n","Create a ContentProviderOperation from this ":"从此创建一个content -provideroperation\r\n","An activity to run when device is inserted into a digital (high end) dock.":"将设备插入数字（高端）码头时运行的活动。\r\n","android.database.Cursor.moveToPrevious()":"android.database.cursor.movetoprevious（）\r\n","android.drm.DrmConvertedStatus":"Android.drm.drmconvertedstatus\r\n","android.graphics.PathMeasure.getSegment(float, float, android.graphics.Path, boolean)":"android.graphics.pathmeasure.getSegment（float，float，android.graphics.path，boolean）\r\n","android.database.sqlite.SQLiteOpenHelper.setLookasideConfig(int, int)":"android.database.sqlite.sqliteopenhelper.setlookasideconfig（int，int）\r\n","android.graphics.drawable.LayerDrawable.setId(int, int)":"android.graphics.drawable.layerdrawable.setid（int，int）\r\n","Applies a rotation transform around all three axis.":"应用所有三个轴周围的旋转转换。\r\n","android.database.sqlite.SQLiteQueryBuilder.getProjectionGreylist()":"android.database.sqlite.sqlitequerybuilder.getProctoctGreylist（）\r\n","android.bluetooth.BluetoothSocket.getRemoteDevice()":"android.bluetooth.bluetoothsocket.getRemotedevice（）\r\n","Gets a value and converts it to a Double.":"获取一个值并将其转换为双重。\r\n","android.drm.DrmInfoEvent.TYPE_WAIT_FOR_RIGHTS":"android.drm.drminfoevent.type_wait_for_rights\r\n",": true  when the application is willing to support\n RTL (right to left). ":"：当申请愿意支持时正确\r\n RTL（右至左）。\r\n","android.bluetooth.le.AdvertiseData.getServiceSolicitationUuids()":"android.bluetooth.le.aptervertisedata.getServicesoliticationuuids（）\r\n","android.drm.DrmManagerClient.processDrmInfo(android.drm.DrmInfo)":"android.drm.drmmanagerclient.processdrminfo（android.drm.drminfo）\r\n","that indicates that the activity\n can itself handle the ui mode. ":"这表明活动\r\n 本身可以处理UI模式。\r\n","Set special flags controlling how this intent is handled.":"设置特殊标志，以控制这种意图的处理方式。\r\n","Convert HSV components to an ARGB color.":"将HSV组件转换为ARGB颜色。\r\n","If a particular process and user ID has not been granted\n permission to access a specific URI, throw ":"如果尚未授予特定过程和用户​​ID\r\n 允许访问特定URI，投掷\r\n","Retrieve a float value from the preferences.":"从首选项中检索浮点值。\r\n","android.graphics.Canvas.drawPath(android.graphics.Path, android.graphics.Paint)":"android.graphics.canvas.drawpath（android.graphics.path，android.graphics.paint）\r\n","Retrieves an iterator object that you can use to iterate over the values associated with\n            this <code>DrmInfoRequest</code> object.":"检索一个迭代对象，您可以用它来迭代与之关联的值\r\n            此<code> drminforequest </code>对象。\r\n","android.graphics.SurfaceTexture.isReleased()":"android.graphics.surfaceTexture.isrealed（）\r\n","android.content.pm.PackageManager.FEATURE_IPSEC_TUNNELS":"android.content.pm.packagemanager.feature_ipsec_tunnels\r\n","android.content.IntentSender.writeIntentSenderOrNullToParcel(android.content.IntentSender, android.os.Parcel)":"android.content.intents.WriteIntentesendentsErnulltoparcel（android.content.intents，android.os.parcel）\r\n","insets":"插页,插页\r\n","The set of callback APIs that are common to all application components\n            (":"所有应用程序组件共有的回调API集\r\n            （（\r\n","android.content.pm.PackageManager.getApplicationBanner(java.lang.String)":"android.content.pm.packagemanager.getapplicationbanner（java.lang.string）\r\n","android.content.Loader.rollbackContentChanged()":"android.content.loader.RollbackContentChanged（）\r\n","Callback interface used to deliver copies of preview frames as\n they are displayed.":"回调接口用于将预览框架的副本作为\r\n 它们显示。\r\n"," frees all the buffers and puts the SurfaceTexture into the\n            'abandoned' state.":" 释放所有缓冲区，并将表面版本放入\r\n            “废弃”状态。\r\n","android.graphics.ImageFormat.RAW_PRIVATE":"android.graphics.imageformat.raw_private\r\n","Return the alpha component of a color int.":"Return the alpha component of a color int.\r\n","android.graphics.drawable.AdaptiveIconDrawable.getIconMask()":"android.graphics.drawable.aptiveicondrawable.geticonmask（）\r\n","android.content.pm.ServiceInfo.FLAG_STOP_WITH_TASK":"android.content.pm.ServiceInfo.FLAG_STOP_WITH_TASK\r\n","Draw a run of text, all in a single direction, with optional context for complex text\n            shaping.":"在一个方向上绘制一系列文本，并具有可选的复杂文本上下文\r\n            成型。\r\n","android.content.pm.LauncherActivityInfo.getLabel()":"android.content.pm.launcheractivityinfo.getLabel（）\r\n","A Drawable object that draws primitive shapes.":"绘制原始形状的可绘制对象。\r\n","android.graphics.drawable.LayerDrawable.LayerDrawable(android.graphics.drawable.Drawable[])":"android.graphics.drawable.layerdrawable.layerdrawable（android.graphics.drawable.drawable []）\r\n","android.content.res.Resources.Resources(android.content.res.AssetManager, android.util.DisplayMetrics, android.content.res.Configuration)":"机器人。内容。资源。资源（android。内容。res.AssetManager，android。尤蒂尔。DisplayMetrics，android的。内容。res.配置)\r\n","\n            can process.":"\r\n            可以处理。\r\n","Set the matrix to the scale and translate values that map the source rectangle to the\n            destination rectangle, returning true if the the result can be represented.":"将矩阵设置为刻度并转换映射源矩形的值\r\n            目标矩形，如果可以表示结果，则返回true。\r\n","android.content.Intent#ACTION_DOCK_EVENT":"android.content.intent＃action_dock_event\r\n","android.drm.DrmSupportInfo.getDescription()":"android.drm.drmsupportinfo.getDescription（）\r\n","Returns the component name of this activity.":"返回此活动的组件名称。\r\n",": true when the application knows how to\n accomodate different screen densities. ":"：thum当应用程序知道如何\r\n 可容纳不同的屏幕密度。\r\n","android.content.pm.ApplicationInfo":"android.content.pm.applicationinfo\r\n","android.content.Intent.EXTRA_RETURN_RESULT":"android.content.intent.extra_return_result\r\n","ComponentCallbacks":"组成式背back\r\n","DrmManagerClient.OnErrorListener#onError onError()":"drmmanagerclient.onerrorlistener＃onerror onerror（）\r\n","#MATCH_CATEGORY_PORT":"#match_category_port\r\n","android.hardware.Camera.setErrorCallback(android.hardware.ErrorCallback)":"android.hardware.camera.setErrorcallback（android.hardware.errcallback）\r\n","Remove the alpha override, reverting to the alpha defined on each color in the\n            ":"卸下alpha替代，恢复到在每种颜色上定义的alpha\r\n            \r\n"," whose ID matches the\n            specified ID.":" 身份证匹配\r\n            指定的ID。\r\n","A font slant value for italic":"斜体的字体倾斜值\r\n","if the attribute is defined but is\n         not an integer color or color state list.\n":"如果定义了属性，但是\r\n         不是整数颜色或颜色状态列表。\r\n\r\n","Gets the current color effect setting.":"获取当前的颜色效果设置。\r\n","Add a URI to match, and the code to return when this URI is\n            matched.":"添加一个URI匹配，并在此URI为时返回代码\r\n            匹配。\r\n","android.content.Intent.CATEGORY_PREFERENCE":"android.content.intent.category_preference\r\n","Returns this color's components as a new array.":"将该颜色的组件返回为新数组。\r\n","Determine whether the calling process and user ID has been\n            granted permission to access a list of URIs.":"确定通话过程和用户​​ID是否已\r\n            授予访问URI列表的许可。\r\n","Flush pending batch scan results stored in Bluetooth controller.":"等待批次扫描结果存储在蓝牙控制器中。\r\n","Standard CIE 1931 2° illuminant D50, encoded in xyY.":"标准CIE 1931 2°Ilumuminant D50，用XYY编码。\r\n"," over the result set\n            with optional support for cancellation.":" 在结果集\r\n            通过可选的取消支持。\r\n","android.gesture.OrientedBoundingBox":"android.gesture.IndientedBoundingBox\r\n","An intent is an abstract description of an operation to be performed.":"意图是对要执行的操作的抽象描述。\r\n"," describing the optimal size for a requested image\n            resource, in pixels.":" 描述请求图像的最佳尺寸\r\n            资源，以像素为单位。\r\n","android.database.sqlite.SQLiteQueryBuilder.isStrictGrammar()":"android.database.sqlite.sqlitequerybuilder.isstrictgrammar（）\r\n","Get the connection status of this socket, ie, whether there is an active connection with\n            remote device.":"获取此套接字的连接状态，即是否存在主动连接\r\n            远程设备。\r\n","If set, decode methods will always return a mutable Bitmap instead of\n an immutable one.":"如果设置，解码方法将始终返回可变的位图，而不是\r\n 一个不变的。\r\n","android.graphics.drawable.AnimatedImageDrawable.start()":"android.graphics.drawable.animatedimatedimatedrawable.start（）\r\n","if the OBB file couldn't be read\n":"如果OBB文件无法读取\r\n\r\n","android.graphics.Path.close()":"android.graphics.path.close（）\r\n","Return a data type in the filter.":"返回过滤器中的数据类型。\r\n","Proxying implementation of Context that simply delegates all of its calls to\n            another Context.":"代理上下文的实施，这些上下文只是将其所有调用委派给\r\n            另一个上下文。\r\n","android.graphics.Typeface.create(android.graphics.Typeface, int)":"android.graphics.typeface.create（android.graphics.typeface，int）\r\n","android.bluetooth.BluetoothHidDevice.registerApp(android.bluetooth.BluetoothHidDeviceAppSdpSettings, android.bluetooth.BluetoothHidDeviceAppQosSettings, android.bluetooth.BluetoothHidDeviceAppQosSettings, java.util.concurrent.Executor, android.bluetooth.Callback)":"android.bluetooth.BluetoothHidDevice.registerApp(android.bluetooth.BluetoothHidDeviceAppSdpSettings, android.bluetooth.BluetoothHidDeviceAppQosSettings, android.bluetooth.BluetoothHidDeviceAppQosSettings, java.util.concurrent.Executor, android.bluetooth.Callback)\r\n","android.bluetooth.le.AdvertiseData.getIncludeDeviceName()":"android.bluetooth.le.aptervertisedata.getincludedevicename（）\r\n","android.drm.DrmInfoRequest.SUBSCRIPTION_ID":"android.drm.drminforequest.subscription_id\r\n","If the calling process of an IPC you are handling has not been\n granted a particular permission, throw a ":"如果您要处理的IPC的呼叫过程\r\n 授予特定的许可，扔\r\n","android.bluetooth.BluetoothSocket.getOutputStream()":"android.bluetooth.bluetoothsocket.getOutputstream（）\r\n","Return an Insets instance with the appropriate values.":"返回具有适当值的插图实例。\r\n","A request for the user to select a companion device to associate with.":"向用户选择要与之关联的伴侣设备的请求。\r\n","Draw in its bounds (set via setBounds) respecting optional effects such\n            as alpha (set via setAlpha) and color filter (set via setColorFilter).":"绘制其界限（通过setbounds集）尊重可选效果\r\n            作为alpha（通过setalpha设置）和颜色过滤器（通过setColorFilter设置）。\r\n","value indicating that no mode type has been set.":"值表示未设置任何模式类型。\r\n","android.content.pm.PackageManager.getGroupOfPlatformPermission(java.lang.String, java.util.concurrent.Executor, java.util.function.Consumer)":"android.content.pm.packagemanager.getgroupofplatformpermission（java.lang.string，java.util.concurrent.executor，java.util.function.consumer）\r\n","android.content.Intent.ACTION_BATTERY_CHANGED":"android.content.intent.action_battery_changed\r\n","android.graphics.Canvas.rotate(float, float, float)":"机器人。图形。帆布。旋转（浮动，浮动，浮动）\r\n","android.graphics.fonts.SystemFonts":"android.graphics.fonts.systemfonts\r\n","android.bluetooth.BluetoothGattServer.getService(java.util.UUID)":"android.bluetooth.bluetoothgattserver.getService（java.util.uuid）\r\n","Create a BitmapRegionDecoder from a file path.":"从文件路径创建一个位图Decoder。\r\n","Return the current display metrics that are in effect for this resource\n            object.":"返回对此资源有效的当前显示指标\r\n            对象。\r\n","Place new attribute values into the theme.":"将新的属性值放在主题中。\r\n","If the call failed to save rights information at the given\n ":"如果呼叫未能在给定的\r\n \r\n","Called when a key is dispatched to a dialog.":"当键被派往对话框时调用。\r\n","Mark the query as ":"将查询标记为\r\n","android.content.pm.ApplicationInfo.isResourceOverlay()":"android.content.pm.applicationinfo.isresourceoverlay（）\r\n","Assign the keyFrame (specified by index) a time value and an array of key\n            values and blend array.":"分配密钥帧（由索引指定）一个时间值和一个键的数组\r\n            值和混合阵列。\r\n","The pixel density of the destination this bitmap will be drawn to.":"该位图的目的地的像素密度将被绘制为。\r\n","Return the primary external storage directory where this application's OBB\n files (if there are any) can be found.":"返回本应用程序OBB的主要外部存储目录\r\n 可以找到文件（如果有）。\r\n","android.content.res.Configuration.getLayoutDirection()":"android.content.res.configuration.getLayoutDirection（）\r\n",", corresponding to <code>costsMoney</code>\n            value of ":"，对应于<code> CODESMONEY </code>\r\n            的价值\r\n","Construct an YuvImage.":"构建一个Yuvimage。\r\n","Constant used to to represent MNC (Mobile Network Code) zero.":"常数用于表示MNC（移动网络代码）零。\r\n","Starts the specified main activity of the caller package in the specified profile.":"在指定的配置文件中启动呼叫者包的指定主要活动。\r\n","android.graphics.PointF.length(float, float)":"android.graphics.pointf.length（float，float）\r\n","android.graphics.Insets.add(android.graphics.Insets, android.graphics.Insets)":"android.graphics.insets.Add（android.graphics.insets，android.graphics.insets）\r\n","android.content.res.Resources.addLoaders(android.content.res.loader.ResourcesLoader)":"机器人。内容。资源。addLoaders（android。内容。装载机。ResourcesLoader）\r\n","android.database.sqlite.SQLiteQueryBuilder.setProjectionMap(java.util.Map)":"android.database.sqlite.sqlitequerybuilder.setproctivemap（java.util.map）\r\n","Global information about the application/package this component is a\n            part of.":"有关应用程序/软件包的全局信息此组件是\r\n            部分。\r\n","Returns whether only legacy advertisements will be returned.":"返回是否仅返回旧广告。\r\n","#registerListener":"#RegisterListener\r\n","#LINE":"＃线\r\n","Appends the given ID to the end of the path.":"将给定的ID附加到路径的尽头。\r\n","Broadcast sent to the primary user when the credential-encrypted private storage for\n            an associated managed profile is unlocked.":"当凭证加密的私人存储供主要用户发送给主要用户\r\n            关联的托管配置文件已解锁。\r\n","Intent used to broadcast the change in connection state of the LeAudio\n            profile.":"目的用于广播Leaudio连接状态的变化\r\n            轮廓。\r\n","android.content.ComponentName.ComponentName(android.content.Context, java.lang.String)":"android.content.componentname.componentname（android.content.context，java.lang.string）\r\n","The kind of touch screen attached to the device.":"设备上的那种触摸屏。\r\n","android.content.Intent.getType()":"android.content.intent.getType（）\r\n","Open a non-asset as an asset by mmapping it and returning an ":"通过mmapping将非资产作为资产打开并返回 \r\n","Returns true if the Intent's extras contain a parcelled file descriptor.":"如果意图的附加内容包含包裹的文件描述符，则返回true。\r\n","This class provides the public APIs to control the Hearing Aid profile.":"该课程为公共API提供了控制助听器的个人资料。\r\n","that indicates that the activity should not\n appear in the list of recently launched activities. ":"这表明活动不应该\r\n 出现在最近启动的活动列表中。\r\n","Sets whether this drawable's ":"设置是否可绘制\r\n","#decodeBitmap(Source, OnHeaderDecodedListener)":"#decodebitmap（源，onheaderdecodedlistener）\r\n","android.graphics.Region.quickReject(android.graphics.Rect)":"android.graphics.gregion.quickreject（android.graphics.Rect）\r\n","android.content.pm.PackageManager.getPlatformPermissionsForGroup(java.lang.String, java.util.concurrent.Executor, java.util.function.Consumer)":"android.content.pm.packagemanager.getPlatformpermissionsforgroup（java.lang.string，java.util.concurrent.executor，java.util.function.consumer）\r\n","android.content.pm.ConfigurationInfo.reqNavigation":"android.content.pm.configurationinfo.reqnavigation\r\n"," associated with this Intent.":" 与此意图相关联。\r\n","android.content.Intent.ACTION_SEARCH":"android.content.intent.action_search\r\n","Remove extended data from the intent.":"从意图中删除扩展数据。\r\n","Inserts multiple rows into a table at the given URL.":"将多行插入给定URL的表中。\r\n","AdvertisingSet#setPeriodicAdvertisingData":"广告网＃setperiodicadvertisingdata\r\n","A content: URI holding a stream of data associated with the Intent,\n            used with ":"内容：uri保留与意图相关的数据流，\r\n            与\r\n","Negate the point's coordinates":"否定点的坐标\r\n","The name of this feature, for example \"android.":"此功能的名称，例如“ Android。\r\n","android.graphics.Point.readFromParcel(android.os.Parcel)":"android.graphics.point.ReadFromParcel（android.os.parcel）\r\n","android.graphics.Path.arcTo(android.graphics.RectF, float, float)":"android.graphics.path.arcto（android.graphics.Rectf，float，float）\r\n","Return the path (outline) for the specified text.":"返回指定文本的路径（轮廓）。\r\n","Returns the absolute path to the application specific cache directory\n on the filesystem.":"将绝对路径返回到应用程序特定的高速缓存目录\r\n 在文件系统上。\r\n","android.bluetooth.BluetoothHidDevice.SUBCLASS1_NONE":"android.bluetooth.bluetoothhiddevice.subclass1_none\r\n","Gets a value and converts it to a Float.":"获取一个值并将其转换为浮子。\r\n","android.graphics.RectF.set(android.graphics.Rect)":"android.graphics.Rectf.set（android.graphics.Rect）\r\n","android.content.ContentProvider.onCallingPackageChanged()":"android.content.contentprovider.oncallingpackagechanged（）\r\n","Size of the secure container on external storage holding the\n            application's code.":"固定在外部存储上的安全容器的尺寸\r\n            应用程序的代码。\r\n","android.content.pm.PackageManager.FEATURE_FREEFORM_WINDOW_MANAGEMENT":"android.content.pm.packagemanager.feature_freeform_window_management\r\n","android.bluetooth.BluetoothSocket.isConnected()":"android.bluetooth.bluetoothsocket.isconnected（）\r\n","F:Android.Content.PM.PackageInstaller+SessionParams.SetInstallLocation":"F：android.content.pm.packageinstaller+sessionparams.setinstalllocation\r\n","Retrieve a dimensional for a particular resource ID for use\n            as an offset in raw pixels.":"检索特定资源ID的维度\r\n            作为原始像素的偏移。\r\n","Broadcast Action:  External media is present, and being disk-checked\n            The path to the mount point for the checking media is contained in the Intent.":"广播动作：存在外部媒体，并通过磁盘检查\r\n            意图中包含通往检查介质的安装点的路径。\r\n"," in to this object, but only\n where fields are not defined by this object.":" 在这个对象中，但只有\r\n 该对象未定义字段。\r\n","android.content.ContentProviderResult":"android.content.ContentProviderResult\r\n","android.content.ContentProviderClient.canonicalize(android.net.Uri)":"android.content.contentproviderclient.caronicalize（android.net.uri）\r\n","Retrieves an iterator object that you can use to iterate over the values associated with\n            this <code>DrmInfo</code> object.":"检索一个迭代对象，您可以用它来迭代与之关联的值\r\n            此<code> drminfo </code>对象。\r\n","Intent used to broadcast that the headset has posted a\n            vendor-specific event.":"用来广播耳机发布的意图\r\n            特定于供应商的事件。\r\n","Creates a new <code>Color</code> instance from an ARGB color int.":"从argb颜色int创建一个新的<code>颜色</code>实例。\r\n","android.content.pm.PackageInfo.configPreferences":"android.content.pm.packageinfo.configpreferences\r\n","android.content.Intent.CATEGORY_DESK_DOCK":"android.content.intent.category_desk_dock\r\n","Set the matrix to the concatenation of the two specified matrices and return true.":"将矩阵设置为两个指定矩阵的串联，然后返回true。\r\n","android.drm.DrmManagerClient.saveRights(android.drm.DrmRights, java.lang.String, java.lang.String)":"android.drm.drmmanagerclient.saverights（android.drm.drmrights，java.lang.string，java.lang.string）\r\n","Capture the naturally warm color of scenes lit by candles.":"捕获蜡烛点燃的场景的自然温暖色。\r\n","Gets the public name of this module.":"获取此模块的公共名称。\r\n","android.graphics.Typeface.isBold()":"android.graphics.typeface.isbold（）\r\n","Returns the unique ID that identifies this RenderNode.":"返回标识此渲染的唯一ID。\r\n","The outer edges of a join meet at a sharp angle\n":"连接的外边缘以尖锐的角度\r\n\r\n","Check whether the given content has valid rights.":"检查给定内容是否具有有效的权利。\r\n","android.graphics.drawable.Icon.createWithResource(android.content.Context, int)":"android.graphics.drawable.icon.createwithresource（android.content.context，int）\r\n","Get the database that this cursor is associated with.":"获取该光标与之关联的数据库。\r\n","Activity Action: Show details about a particular install session.":"活动动作：显示有关特定安装会话的详细信息。\r\n"," changes, giving\n            the provider an opportunity to invalidate any security related caching it\n            may be performing.":" 变化，给予\r\n            提供商有机会使任何与安全缓存无效\r\n            可能正在执行。\r\n","android.graphics.drawable.AnimatedStateListDrawable":"android.graphics.drawable.animatedStateListDrawable\r\n","android.graphics.Color.isSrgb(long)":"android.graphics.color.issrgb（long）\r\n","android.R.styleable#AndroidManifestActivity\n            &lt;activity&gt;":"Android.r.Stylable＃AndroidManifestActivity\r\n            ＆lt;活动＆gt;\r\n","Add a new layer (above any previous layers) to the rasterizer.":"将新图层（高于任何以前的层）添加到栅格器中。\r\n","android.content.PeriodicSync.PeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle, long)":"android.content.periodicsync.periodicsync（android.accounts.accounts.account，java.lang.string，android.os.os.bundle，long）\r\n","Deactivates the Cursor, making all calls on it fail until ":"停用游标，使其上的所有调用失败，直到 \r\n","Show only the first layer.":"仅显示第一层。\r\n","Return the recommend line spacing based on the current typeface and\n            text size.":"根据当前字体返回推荐行间距，并\r\n            字体大小。\r\n","android.graphics.ColorSpace.getModel()":"android.graphics.colorspace.getmodel（）\r\n","android.content.SyncResult.databaseError":"android.content.syncresult.databaseerror\r\n","Return the Activity component that should be used to handle this intent.":"返回应用于处理此意图的活动组件。\r\n"," will have the same effect on text measurement":" 将对文本测量产生相同的影响\r\n","android.graphics.Color.toArgb()":"android.graphics.color.toargb（）\r\n","android.content.ContentValues.clear()":"android.content.contentvalues.clear（）\r\n","android.content.Loader.onForceLoad()":"android.content.loader.onforceload（）\r\n","android.content.pm.PackageManager.FEATURE_MANAGED_USERS":"android.content.pm.packagemanager.feature_managed_users\r\n","android.graphics.RenderNode.computeApproximateMemoryUsage()":"android.graphics.rendernode.computeapproximatemoryusage（）\r\n","android.content.Intent.EXTRA_SUBJECT":"android.content.intent.extra_subject\r\n","Interface that is implemented to discover when a Loader has been canceled\n before it finished loading its data.":"实现的接口以发现何时取消装载器\r\n 在完成加载数据之前。\r\n","Create a new rectangle, initialized with the values in the specified\n            rectangle (which is left unmodified).":"创建一个新的矩形，用指定的值初始化\r\n            矩形（未修改）。\r\n"," indicating\n            that the advertising has been started successfully.":" 指示\r\n            广告已经成功开始。\r\n","android.bluetooth.BluetoothGattService.mCharacteristics":"android.bluetooth.bluetoothgattservice.mcharacteristics\r\n","android.graphics.Matrix.isAffine()":"android.graphics.matrix.isaffine（）\r\n","android.content.Intent.CATEGORY_APP_CONTACTS":"android.content.intent.category_app_contacts\r\n"," statements,\n            construct a query that returns the union of what those\n            subqueries return.":" 陈述，\r\n            构建一个查询，以返回那些东西的结合\r\n            子征服返回。\r\n"," when a length has not been declared.":" 未声明长度时。\r\n","android.content.res.Configuration.DENSITY_DPI_UNDEFINED":"android.content.res.configuration.dense_dpi_undefined\r\n","android.content.ContentResolver.applyBatch(java.lang.String, java.util.ArrayList)":"android.content.contentresolver.applybatch（java.lang.string，java.util.arraylist）\r\n","Return an iterator over the filter's data paths.":"将迭代器返回过滤器的数据路径。\r\n","\n            intents to indicate whether this represents a full uninstall (removing\n            both the code and its data) or a partial uninstall (leaving its data,\n            implying that this is an update).":"\r\n            意图指示这是否代表完整的卸载（删除\r\n            代码及其数据）或部分卸载（留下其数据，\r\n            暗示这是一个更新）。\r\n","Draw the specified bitmap, with its top/left corner at (x,y), using the specified paint,\n            transformed by the current matrix.":"使用指定的油漆，绘制指定的位图，其顶部/左角（x，y），\r\n            由当前矩阵转换。\r\n","android.content.Context.USER_SERVICE":"android.content.context.user_service\r\n","android.graphics.Canvas.clipRect(int, int, int, int)":"android.graphics.canvas.clecret（int，int，int，int）\r\n","android.gesture.Gesture.getStrokesCount()":"android.gesture.gesture.getstrokescount（）\r\n","Gets the package that declares the library.":"获取声明库的包。\r\n","android.graphics.Paint.getHinting()":"android.graphics.paint.gethinting（）\r\n","resid":"残留\r\n","Configures the ambient & spot shadow alphas.":"配置环境和点阴影alpha。\r\n","android.graphics.Path.moveTo(float, float)":"android.graphics.path.moveto（浮点，浮点）\r\n","Creates a Context for a non-activity window.":"为非活动性窗口创建上下文。\r\n","#ACTION_SHUTDOWN":"#action_shutdown\r\n","android.content.ContentValues.ContentValues(int)":"android.content.contentvalues.contentvalues（int）\r\n","Returns the user handle of the user profile that this activity belongs to.":"返回此活动所属于的用户配置文件的用户句柄。\r\n","android.net.Uri":"android.net.uri\r\n","android.graphics.ParcelableColorSpace":"android.graphics.parcelablecolorspace\r\n","android.bluetooth.BluetoothHealthCallback.onHealthAppConfigurationStatusChange(android.bluetooth.BluetoothHealthAppConfiguration, int)":"android.bluetooth.bluetoothhealthcallback.onhealthappconfigurationstatuschange（android.bluetooth.bluetoothhealthhealthappconfiguration，int）\r\n","android.content.SearchRecentSuggestionsProvider":"android.content.SearchRencentsuggestionsProvider\r\n"," chosen by the user to complete an action.":" 由用户选择以完成操作。\r\n","android.content.res.Configuration.Configuration(android.content.res.Configuration)":"android.content.res.configuration.configuration（android.content.res.configuration）\r\n","android.bluetooth.BluetoothGattCharacteristic.FORMAT_UINT8":"android.bluetooth.bluetoothgattcharacteristic.format_uint8\r\n","Create a new paint with the specified flags.":"用指定的标志创建新的油漆。\r\n","#DENSITY_NONE":"#dense_none\r\n","Activity Action: Show power usage information to the user.":"活动动作：向用户显示功率使用信息。\r\n","Return the result of ":"返回结果\r\n",": The device has a GSM telephony stack.":"：该设备具有GSM电话堆栈。\r\n","#labelRes":"#Labelres\r\n","android.content.pm.PackageManager.addWhitelistedRestrictedPermission(java.lang.String, java.lang.String, int)":"android.content.pm.packagemanager.addwhitelistedRentersperserion（java.lang.string，java.lang.string，int）\r\n","android.content.pm.PackageManager.FEATURE_MIDI":"android.content.pm.packagemanager.feature_midi\r\n","android.content.pm.Checksum.TYPE_WHOLE_SHA1":"android.content.pm.checksum.type_whole_sha1\r\n","An optional extra of ":"可选的额外\r\n","android.graphics.ColorSpace.ILLUMINANT_E":"android.graphics.colorspace.illuminant_e\r\n","android.content.pm.InstrumentationInfo":"android.content.pm.insrumentationinfo\r\n","android.graphics.drawable.LayerDrawable.setLayerInsetTop(int, int)":"android.graphics.drawable.layerdrawable.setlayerinsettop（int，int）\r\n","android.R.styleable#AndroidManifestInstrumentation\n            &lt;instrumentation&gt;":"Android.r.Stylable＃AndroidManifestInstrumentation\r\n            ＆lt; instrumentation＆gt;\r\n","Returns the radius of the gradient in pixels.":"返回像素中梯度的半径。\r\n","Failed to acquire ":"未能获取\r\n","android.content.Context.APPWIDGET_SERVICE":"android.content.context.Appwidget_service\r\n","android.content.res.AssetManager.open(java.lang.String)":"机器人。内容。res.AssetManager。打开（java。朗。弦）\r\n","The content was synced but the renderer has declined to produce a frame in this vsync\n            interval.":"内容已同步，但渲染器拒绝在此Vsync中产生框架\r\n            间隔。\r\n","An entity class that is passed to the \n            ":"传递给的实体类\r\n            \r\n","android.graphics.RenderNode.setSpotShadowColor(int)":"android.graphics.rendernode.setspotshadowcolor（int）\r\n"," instance with the provided x and y offset":" 带有提供的X和Y偏移的实例\r\n","android.hardware.fingerprint.FingerprintManager":"android.hardware.fingerprint.fingerprintmanager\r\n","If set, decode methods that take the Options object will attempt to\n reuse this bitmap when loading content.":"如果设置，将选项对象的解码方法解码方法将尝试\r\n 加载内容时重复使用此位图。\r\n","android.content.Intent.ACTION_NEW_OUTGOING_CALL":"android.content.intent.action_new_outonovery_call\r\n","This function throws CursorIndexOutOfBoundsException if\n the cursor position is out of bounds.":"此函数抛出CursorIndexOutOfBoundsException如果\r\n 光标位置越界。\r\n","android.graphics.RenderEffect.createOffsetEffect(float, float)":"android.graphics.rendereffect.CreateOffSeteffect（float，float）\r\n","android.drm.DrmManagerClient.removeAllRights()":"android.drm.drmmanagerclient.removeallrights（）\r\n","#enableWriteAheadLogging()":"#EnableWriteAheadLogging（）\r\n","Callback#onDeviceFound":"回调＃OnDeviceFound\r\n","Returns true if this observer is interested receiving self-change notifications.":"如果该观察者有兴趣接收自我改变通知，则返回为true。\r\n","android.database.sqlite.SQLiteOpenHelper.getReadableDatabase()":"android.database.sqlite.sqliteopenhelper.getReadabledatabase（）\r\n","Shared library type: this library is <strong>not</strong> backwards\n            -compatible, can be updated and updates can be uninstalled.":"共享库类型：此库是<strong>而不是</strong>。\r\n            -兼容，可以更新和更新可以卸载。\r\n","android.content.Intent.Intent()":"android.content.intent.intent（）\r\n","Broadcast Action: This is broadcast once, after the user has finished\n            booting, but while still in the \"locked\" state.":"广播动作：用户完成后，这是一次广播\r\n            引导，但仍处于“锁定”状态时。\r\n","#MAX_ID":"#max_id\r\n","android.content.pm.PackageInstaller.ACTION_SESSION_DETAILS":"android.content.pm.packageinstaller.action_session_details\r\n"," intents that contains\n            the arguments to the vendor-specific command.":" 包含的意图\r\n            供应商特定命令的参数。\r\n","android.location.LocationManager":"Android.Location.LocationManager\r\n","Restriction of type \"bundle\".":"限制“捆绑包”类型。\r\n","android.graphics.SurfaceTexture.getTimestamp()":"android.graphics.surfaceTexture.getTimestamp（）\r\n","Returns true if the path is empty (contains no lines or curves)":"如果路径为空，则返回true（不包含线条或曲线）\r\n","A string resource identifier (in the package's resources) of this\n            match's label.":"字符串资源标识符（在软件包的资源中）\r\n            匹配标签。\r\n"," instances\n            combined by the specified ":" 实例\r\n            由指定的合并\r\n","Returns whether the cursor is pointing to the position before the first\n row.":"返回光标是否指向第一个之前的位置\r\n 行。\r\n","Unregister a previously registered BroadcastReceiver.":"取消注册的先前注册的广播员。\r\n","android.graphics.drawable.GradientDrawable.setColor(android.content.res.ColorStateList)":"android.graphics.drawable.gradientdrawable.setColor（android.content.res.colorStateList）\r\n"," when the associated fragment/activity\n            is being started.":" 当相关的片段/活动\r\n            正在开始。\r\n","android.graphics.RectF.contains(android.graphics.RectF)":"android.graphics.Rectf.Contains（android.graphics.Rectf）\r\n","Return the name of the SQLite database being opened, as given to\n            the constructor.":"返回打开的SQLITE数据库的名称，如\r\n            构造函数。\r\n","android.content.ContentResolver.acquireUnstableContentProviderClient(java.lang.String)":"android.content.ContentResolver.AcquireunstableContentProviderClient（java.lang.string）\r\n","android.content.pm.PackageManager.FEATURE_IDENTITY_CREDENTIAL_HARDWARE_DIRECT_ACCESS":"android.content.pm.packagemanager.feature_identity_credential_hardware_direct_access\r\n","Gets the supported focus modes.":"获取受支持的焦点模式。\r\n","android.bluetooth.BluetoothHidDevice.REPORT_TYPE_FEATURE":"android.bluetooth.bluetoothhiddevice.report_type_feature\r\n","android.content.pm.PackageStats.packageName":"android.content.pm.packagestats.packagename\r\n","android.content.pm.PackageManager.getApplicationLogo(android.content.pm.ApplicationInfo)":"android.content.pm.packagemanager.getApplicationLogo（android.content.pm.applicationinfo）\r\n","android.content.Intent.getCategories()":"android.content.intent.getCategories（）\r\n","Indicates whether this color space is the sRGB color space or\n            equivalent to the sRGB color space.":"指示此颜色空间是SRGB颜色空间还是\r\n            等效于SRGB颜色空间。\r\n","BluetoothLeScanner#startScan":"Bluetoothlescanner＃startScan\r\n"," containing the InputDevice id\n            that was used to invoke the assist.":" 包含输入设施ID\r\n            用来援引助攻。\r\n","android.graphics.YuvImage.getWidth()":"android.graphics.yuvimage.getWidth（）\r\n","Broadcast Action: Have the device reboot.":"广播动作：重新启动设备。\r\n","Retrieves an iterator object that you can use to iterate over the keys associated with\n            this <code>DrmInfo</code> object.":"检索您可以使用与之相关的键的迭代对象\r\n            此<code> drminfo </code>对象。\r\n","Create Signature from an existing raw byte array.":"从现有的原始字节数组中创建签名。\r\n","Notify registered observers that a row was updated and attempt to sync\n            changes to the network.":"通知注册的观察者，一行已更新并尝试同步\r\n            更改网络。\r\n","(Usually optional) Set an explicit application package name that limits\n            the components this Intent will resolve to.":"（通常是可选的）设置一个限制的显式应用程序包名称\r\n            该意图将解决的组件。\r\n","android.graphics.Picture.endRecording()":"android.graphics.picture.endrecording（）\r\n","android.graphics.Path.rewind()":"android.graphics.path.rewind（）\r\n","#TYPE_MULTI_SELECT":"#Type_multi_Select\r\n","Returns true if getStyle() has the ITALIC bit set.":"如果GetStyle（）具有斜体位，则返回true。\r\n","This abstract class is used by ":"这个抽象类由 \r\n","android.content.pm.ShortcutManager.FLAG_MATCH_MANIFEST":"android.content.pm.shortcutmanager.flag_match_manifest\r\n","android.content.ContentProvider.getCallingAttributionSource()":"android.content.contentprovider.getCallingAttributionsource（）\r\n","android.content.pm.PackageManager.getServiceInfo(android.content.ComponentName, int)":"android.content.pm.packagemanager.getServiceInfo（android.content.componentname，int）\r\n","Retrieve a parser for a compiled XML file.":"检索已编译XML文件的解析器。\r\n","Registers a listener to be notified about the faces detected in the\n            preview frame.":"登记侦听器要通知有关检测到的面孔的听众\r\n            预览框架。\r\n","android.graphics.text.LineBreaker.JUSTIFICATION_MODE_NONE":"android.graphics.text.line breaker.justification_mode_none\r\n","android.graphics.Matrix.preScale(float, float, float, float)":"android.graphics.matrix.prescale（浮点，浮点，浮点，浮点）\r\n","Return an XmlResourceParser through which you can read a view layout\n            description for the given resource ID.":"返回Xmlresourceparser，您可以通过它阅读视图布局\r\n            给定资源ID的描述。\r\n","android.database.sqlite.SQLiteDatabase.setLocale(java.util.Locale)":"android.database.sqlite.sqlitedatabase.setlocale（java.util.locale）\r\n","Get a style associated with this font.":"获得与此字体相关的样式。\r\n","Set an identifier for this Intent.":"为此意图设置标识符。\r\n","android.content.RestrictionsManager.REQUEST_TYPE_APPROVAL":"android.content.strictionsmanager.request_type_approval\r\n","Android YUV P010 format.":"Android YUV P010格式。\r\n"," flag: return the IntentFilter that\n was matched for a particular ResolveInfo in\n ":" 标志：返回意图\r\n 在特定的分解中匹配\r\n \r\n","IllegalArgumentException":"非法征收exception\r\n","Interface for accessing and modifying preference data returned by ":"用于访问和修改首选项数据的接口\r\n","Helper for getFlags(), returning true if SUBPIXEL_TEXT_FLAG bit is set -or- Helper for setFlags(), setting or clearing the SUBPIXEL_TEXT_FLAG bit":"getflags（）的助手，如果Subpixel_text_flag位设置为-or- helper for SetFlags（），设置或清除subpixel_text_flag位，则返回true。\r\n","F:Android.Bluetooth.BluetoothGattService..ctor":"F：android.bluetooth.bluetoothgattservice..ctor\r\n","android.content.pm.ResolveInfo.filter":"android.content.pm.resolveinfo.filter\r\n","Application's input method preference.":"应用程序的输入方法偏好。\r\n","android.bluetooth.BluetoothGattDescriptor.setValue(byte[])":"android.bluetooth.bluetoothgattdescriptor.setValue（byte []）\r\n","Removes a permission that was previously added with\n            ":"删除以前添加的权限\r\n            \r\n","Return the next rectangle in the region.":"返回该地区的下一个矩形。\r\n","android.database.ContentObserver.ContentObserver(android.os.Handler)":"android.database.contentobserver.contentobserver（android.os.handler）\r\n","\"Rank\" of a shortcut, which is a non-negative, sequential value that's unique for each\n            ":"快捷方式的“等级”，这是一个非负的顺序值，每个值都是独特的\r\n            \r\n","android.graphics.Outline.Outline()":"android.graphics.outline.outline（）\r\n","android.content.pm.ComponentInfo":"android.content.pm.com.ponentinfo\r\n","BroadcastReceiver":"Broadcastreceiver\r\n","android.graphics.RectF.union(android.graphics.RectF)":"android.graphics.Rectf.union（android.graphics.Rectf）\r\n","android.drm.DrmEvent.DrmEvent(int, int, java.lang.String, java.util.HashMap)":"android.drm.drmevent.drmevent（int，int，java.lang.string，java.util.hashmap）\r\n","android.content.pm.PackageManager.getPackageGids(java.lang.String)":"android.content.pm.packagemanager.getPackageGids（java.lang.string）\r\n","android.content.Intent.ACTION_QUICK_VIEW":"android.content.intent.action_quick_view\r\n","F:Android.Graphics.Drawables.ClipDrawable..ctor":"f：android.graphics.drawables.clipdrable..ctor\r\n","android.database.CursorWindow.setStartPosition(int)":"android.database.cursorwindow.setstartposition（int）\r\n","Shape is a ring.":"形状是一个环。\r\n","Returns true if the filltype is one of the INVERSE variants":"如果filltype是逆变体之一，则返回true\r\n","Finish the broadcast.":"完成广播。\r\n","android.graphics.Paint.getBlendMode()":"android.graphics.paint.getblendmode（）\r\n","Begins a transaction in EXCLUSIVE mode.":"以独家模式开始交易。\r\n","The kind of keyboard attached to the device.":"设备附加的键盘。\r\n","if a connection cannot be re-established (for\n     example, if the camera is still in use by another process).\n":"如果无法重新建立连接（对于\r\n     例如，如果相机仍在使用另一个过程中）。\r\n\r\n",": this is set of the application has specified\n ":"：这是该应用程序已指定的\r\n \r\n"," for handling management of\n            Wi-Fi access.":" 用于处理管理\r\n            Wi-Fi访问。\r\n","android.graphics.Paint.getStartHyphenEdit()":"android.graphics.paint.getstarthyphenedit（）\r\n","android.database.DatabaseUtils.cursorDoubleToCursorValues(android.database.Cursor, java.lang.String, android.content.ContentValues)":"android.database.databaseutils.cursordbouldocursorvalues（android.database.cursor，java.lang.string，android.content.contentvalues）\r\n"," for accessing\n            text services.":" 用于访问\r\n            文本服务。\r\n"," with a\n            value of 1 for each account and provider that this sync adapter supports.":" 与\r\n            每个帐户的价值为1，并且该同步适配器支持的提供商。\r\n","Returns whether the cursor is pointing to the position after the last\n row.":"返回光标是否指向最后一个之后的位置\r\n 行。\r\n","android.app.Service#onBind(Intent) onBind()":"android.app.service＃onbind（intent）onbind（）\r\n","Set the enabled setting for an application\n            This setting will override any enabled state which may have been set by the application in\n            its manifest.":"为应用程序设置启用设置\r\n            此设置将覆盖应用程序可能已设置的任何已启用状态\r\n            它的清单。\r\n","Return the number of bytes between rows in the bitmap's pixels.":"返回位图像素中行之间的字节数。\r\n","Quality adjustment applied to the category of match that signifies\n the default, base value; higher numbers improve the quality while\n lower numbers reduce it.":"质量调整适用于表示的匹配类别\r\n 默认，基本值；较高的数字提高了质量\r\n 较低的数字减少了它。\r\n","android.graphics.Region.getBounds(android.graphics.Rect)":"android.graphics.gregion.getBounds（android.graphics.Rect）\r\n","android.content.pm.PathPermission":"android.content.pm.pathpaterpersions\r\n","Callback interface for camera error notification.":"摄像机错误通知的回调接口。\r\n","android.graphics.Canvas.drawRoundRect(android.graphics.RectF, float, float, android.graphics.Paint)":"android.graphics.canvas.drawRoundRect（android.graphics.Rectf，float，float，float，android.graphics.paint）\r\n","android.content.res.Configuration.screenWidthDp":"android.content.Res.configuration.screenwidthdp\r\n",": The device has at least one camera pointing in\n            some direction, or can support an external camera being connected to it.":"：该设备至少有一个摄像头指向\r\n            一些方向，或者可以支持与之连接的外部摄像机。\r\n","The filter didn't match because it required one or more categories\n that were not in the Intent.":"过滤器不匹配，因为它需要一个或多个类别\r\n 这不是目的。\r\n","\n          The name of the process in which the receiver should run.\n        ":"\r\n          接收器应运行的过程的名称。\r\n        \r\n","android.graphics.ColorSpace.fromXyz(float[])":"android.graphics.colorspace.fromxyz（float []）\r\n","user":"用户\r\n","#setPriority":"#setPriority\r\n","Get the file descriptor of the main channel associated with the remote device\n            and application configuration.":"获取与远程设备关联的主频道的文件描述符\r\n            和应用程序配置。\r\n","The name provider is published under content://":"名称提供商在内容下发布：//\r\n","Copy the fields from src into this paint.":"将字段从SRC复制到此油漆中。\r\n","ContentResolver#openFileDescriptor(Uri, String)":"ContentResolver＃OpenFiledScriptor（URI，String）\r\n","android.graphics.Bitmap.isRecycled()":"android.graphics.bitmap.isrecycled（）\r\n","android.database.sqlite.SQLiteQueryBuilder.setProjectionGreylist(java.util.Collection)":"android.database.sqlite.sqlitequerybuilder.setproctivegreylist（java.util.collection）\r\n","Returns the dimensions setting for preview pictures.":"返回预览图片的尺寸设置。\r\n","Perform a query by combining all current settings and the\n            information passed into this method.":"通过组合所有当前设置和\r\n            信息传递到此方法中。\r\n"," set to\n            the ":" 调成\r\n            这\r\n","The default extra UI options for activities in this application.":"此应用程序中的活动默认额外的UI选项。\r\n","#takeContentChanged()":"#TakeContentChanged（）\r\n","Description of a single item in a ClippedData.":"在cliveddata中的单个项目的描述。\r\n",": Read chunks, and seek forward and\n backward.":"：阅读大块，并寻求前进和\r\n 向后。\r\n","android.content.pm.ComponentInfo.isEnabled()":"android.content.pm.com.ponentinfo.isenabled（）\r\n","android.Manifest.permission#ACCESS_FINE_LOCATION":"android.manifest.permission＃access_fine_location\r\n","AdvertisingSet#setPeriodicAdvertisingEnabled":"Advertissetet＃setperiodicacadvertisingEnabled\r\n","android.content.ContentResolver.getSyncAutomatically(android.accounts.Account, java.lang.String)":"android.content.contentresolver.getSyncautomation（android.accounts.accounts.account，java.lang.string）\r\n","android.drm.DrmInfo.getMimeType()":"android.drm.drminfo.getmimetype（）\r\n","Uninstall the given package, removing it completely from the device.":"卸载给定包装，将其完全从设备中删除。\r\n","android.content.pm.PackageManager.addPackageToPreferred(java.lang.String)":"android.content.pm.packagemanager.addpackagetopreferred（java.lang.string）\r\n","android.content.ContentResolver.CURSOR_DIR_BASE_TYPE":"android.content.contentresolver.cursor_dir_base_type\r\n","#sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String,\n            Bundle)":"#SendOrderedBroadcast（Intent，String，Broadcastreceiver，Handler，int，string，String，\r\n            捆）\r\n","android.hardware.Sensor.STRING_TYPE_AMBIENT_TEMPERATURE":"android.hardware.sensor.string_type_ambient_temperature\r\n","android.content.pm.PackageManager.FEATURE_ETHERNET":"android.content.pm.packagemanager.feature_ethernet\r\n","PathEffect is the base class for objects in the Paint that affect\n            the geometry of a drawing primitive before it is transformed by the\n            canvas' matrix and drawn.":"Patheffect是影响涂料中对象的基类\r\n            图原始的几何形状在由\r\n            画布的矩阵和绘制。\r\n","Closes the Cursor, releasing all of its resources and making it completely invalid.":"关闭游标，释放其所有资源并使其完全无效。\r\n","Broadcast Action: Sent after the system stops dreaming.":"广播动作：在系统停止做梦之后发送。\r\n","android.content.pm.LauncherApps.getAllPackageInstallerSessions()":"android.content.pm.launcherapps.getallpackageinstallersessions（）\r\n","Return the name of the application configuration.":"返回应用程序配置的名称。\r\n","android.view.Surface":"android.view.surface\r\n","Register a callback to be invoked when a new image frame becomes available to the\n            SurfaceTexture.":"在新的图像框架可用时注册要调用的回调\r\n            表面纹理。\r\n","android.graphics.ColorSpace.fromXyz(float, float, float)":"android.graphics.colorspace.fromxyz（浮点，浮点，浮点）\r\n","android.content.RestrictionEntry.getIntValue()":"android.content.grestrictionerentry.getIntvalue（）\r\n","android.content.pm.PackageManager.FEATURE_HIFI_SENSORS":"android.content.pm.packagemanager.feature_hifi_sensors\r\n","Delete an existing private SQLiteDatabase associated with this Context's\n application package.":"删除与此上下文关联的现有私有sqlitedatabase\r\n 应用程序包。\r\n","The cursor window owned by this cursor.":"该光标拥有的光标窗口。\r\n","android.graphics.drawable.RotateDrawable.setToDegrees(float)":"android.graphics.drawable.RotatedRawable.setTodeGrees（float）\r\n","android.content.pm.ApplicationInfo.minSdkVersion":"android.content.pm.applicationinfo.minsdkversion\r\n","Health App Configuration un-registration success":"健康应用程序配置未注册成功\r\n","android.graphics.ImageFormat.DEPTH_JPEG":"android.graphics.imageformat.depth_jpeg\r\n","DrmStore.DrmObjectType":"drmstore.drmobjectType\r\n","android.content.res.TypedArray.getText(int)":"android.content.res.typedarray.getText（int）\r\n","Override this in your subclass to change appearance if you recognize the\n            specified state.":"如果您认识到\r\n            指定状态。\r\n","android.graphics.Color.blue()":"android.graphics.Color.blue()\r\n","The Path class encapsulates compound (multiple contour) geometric paths\n            consisting of straight line segments, quadratic curves, and cubic curves.":"路径类封装化合物（多个轮廓）几何路径\r\n            由直线段，二次曲线和立方曲线组成。\r\n","android.content.res.Configuration.setToDefaults()":"android.content.res.configuration.setTodeFaults（）\r\n","android.graphics.Path.toggleInverseFillType()":"android.graphics.path.toggleinversefilltype（）\r\n","android.content.Context.SENSOR_SERVICE":"android.content.Context.Sensor_service\r\n","android.content.Intent.ACTION_MEDIA_BAD_REMOVAL":"android.content.intent.action_media_bad_removal\r\n","android.content.pm.PackageManager.FEATURE_LIVE_TV":"android.content.pm.packagemanager.feature_live_tv\r\n"," that will run enqueued tasks on the main\n            thread associated with this context.":" 这将在主上运行重新任务\r\n            与此上下文关联的线程。\r\n","Return the data type associated with this application configuration.":"返回与此应用程序配置关联的数据类型。\r\n","Reads a Double out of a column in a Cursor and writes it to a ContentValues.":"在光标中读取一列的双重列，并将其写入ContentValues。\r\n","android.content.pm.PackageManager.getComponentEnabledSetting(android.content.ComponentName)":"android.content.pm.packagemanager.getComponentEnabledSetting（android.content.componentname）\r\n","android.bluetooth.BluetoothHealth.registerSinkAppConfiguration(java.lang.String, int, android.bluetooth.BluetoothHealthCallback)":"android.bluetooth.bluetoothhealth.registersinkappconfiguration（java.lang.string，int，android.bluetooth.bluetooth.bluetoothhealthcallback）\r\n","android.content.Loader.takeContentChanged()":"android.content.loader.takecontentchanged（）\r\n","Sets the colors used to draw the gradient.":"设置用于绘制梯度的颜色。\r\n","Returns true if this instance is a temporary content provider.":"如果此实例是临时内容提供商，则返回true。\r\n","Creates a new scale drawable with the specified gravity and scale\n            properties.":"使用指定的重力和比例来创建一个新的尺度\r\n            特性。\r\n","Shortcut has been disabled due to changes to the publisher app.":"由于发布者应用程序的更改，快捷方式已被禁用。\r\n","android.graphics.drawable.AnimationDrawable":"android.graphics.drawable.animationdrable\r\n","android.graphics.HardwareRenderer.notifyFramePending()":"android.graphics.hardwarerenderer.notifyframepending（）\r\n","#closeConvertSession closeConvertSession()":"#closeconvertsession colleconvertsession（）\r\n","android.content.SyncInfo.account":"android.content.syncinfo.Account\r\n","Add a new Intent category to match against.":"添加一个新的意图类别以匹配。\r\n","android.graphics.HardwareRenderer.SYNC_LOST_SURFACE_REWARD_IF_FOUND":"android.graphics.hardwarerenderer.sync_lost_surface_reward_if_found\r\n","Extra containing a list of ScanResults.":"额外包含扫描清单。\r\n","android.content.res.Configuration.needNewResources(int, int)":"android.content.Res.Configuration.NeedNewResources（int，int）\r\n","Add a closed oval contour to the path":"在路径上添加封闭的椭圆形轮廓\r\n","android.graphics.Canvas.drawRect(android.graphics.RectF, android.graphics.Paint)":"android.graphics.canvas.drawRect（android.graphics.Rectf，android.graphics.paint）\r\n","android.content.pm.ShortcutInfo.getIntent()":"android.content.pm.shortcutinfo.getintent（）\r\n","ContentProvider#canonicalize":"ContentProvider＃Canonicalize\r\n","android.graphics.drawable.ScaleDrawable.ScaleDrawable(android.graphics.drawable.Drawable, int, float, float)":"android.graphics.drawable.scaledrawable.scaledrawable（android.graphics.drawable.drawable.drawable，int，float，float）\r\n","Returns the glyph ID used for drawing the glyph at the given index.":"返回用于在给定索引上绘制字形的字形ID。\r\n","android.database.sqlite.SQLiteCursorDriver.setBindArguments(java.lang.String[])":"android.database.sqlite.sqlitecursordriver.setbindarguments（java.lang.string []）\r\n","android.content.res.TypedArray.length()":"android.content.res.typedarray.length（）\r\n","Creates a new ColorStateList that has the same states and colors as this\n            one but where each color has the specified perceived luminosity value (0-100).":"创建一个具有与此相同状态和颜色相同的状态和颜色\r\n            一个，但每种颜色都具有指定的感知光度值（0-100）。\r\n","android.companion.CompanionDeviceManager.startObservingDevicePresence(java.lang.String)":"android.companion.companiondevicemanager.startobservingdevicepresence（java.lang.string）\r\n","android.graphics.Matrix.mapPoints(float[], int, float[], int, int)":"android.graphics.matrix.mappoints（float []，int，float []，int，int）\r\n","android.content.pm.PackageManager.FEATURE_SENSOR_RELATIVE_HUMIDITY":"android.content.pm.packagemanager.feature_sensor_relative_humity\r\n","android.database.sqlite.SQLiteDatabase.markTableSyncable(java.lang.String, java.lang.String)":"android.database.sqlite.sqlitedatabase.marktablesyncable（java.lang.string，java.lang.string）\r\n","android.content.RestrictionsManager.EXTRA_REQUEST_TYPE":"android.content.strictionsmanager.extra_request_type\r\n","android.content.Context.sendOrderedBroadcast(android.content.Intent, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)":"android.content.Context.SendOrderedBroadcast（android.content.intent，java.lang.string，android.content.broadcastreceiver，android.os.os.os.handler，int，int，java.lang.lang.lang.string，android.os.bundle），android.os.bundle）\r\n","android.content.ContentResolver.removePeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle)":"android.content.contentresolver.removeperiodicsync（android.accounts.accounts.account，java.lang.string，android.os.bundle）\r\n","android.bluetooth.BluetoothHealth.getConnectedDevices()":"android.bluetooth.bluetoothhealth.getConnectedDevices（）\r\n","android.os.Vibrator":"android.os.振动器\r\n","Converts a color value from this color space's model to\n            tristimulus CIE XYZ values.":"将颜色值从此颜色空间的模型转换为\r\n            tristimulus cie xyz值。\r\n","Returns the preferred or recommended preview size (width and height)\n in pixels for video recording.":"返回首选或推荐的预览尺寸（宽度和高度）\r\n 在视频录制的像素中。\r\n","android.database.sqlite.SQLiteClosable.close()":"android.database.sqlite.sqliteclosable.close（）\r\n","Check if the Configuration's current ":"检查配置的当前\r\n","android.graphics.ImageFormat.RAW_SENSOR":"android.graphics.imageformat.raw_sensor\r\n","Sends the result of the load to the registered listener.":"将负载的结果发送给注册的侦听器。\r\n","Service to capture a bugreport.":"捕获BugReport的服务。\r\n",": If this feature is supported, the feature version\n            specifies a date such that the device is known to pass the OpenGLES dEQP test suite\n            associated with that date.":"：如果支持此功能，则功能版本\r\n            指定日期，使该设备已知可以通过OpenGles DEQP测试套件\r\n            与该日期相关联。\r\n","android.content.SharedPreferences.unregisterOnSharedPreferenceChangeListener(android.content.OnSharedPreferenceChangeListener)":"android.content.sharedPreferences.unregisteronsharedPreferencechangelistener（android.content.OnsharedPreferenceChangelistener）\r\n","#startDelete":"#startdelete\r\n"," if a shortcut is disabled with\n            ":" 如果禁用了捷径\r\n            \r\n","android.content.Intent.putExtra(java.lang.String, java.io.Serializable)":"android.content.intent.putextra（java.lang.string，java.io.serializable）\r\n","android.graphics.drawable.GradientDrawable.setGradientType(int)":"android.graphics.drawable.gradientdrawable.setgradienttype（int）\r\n","android.bluetooth.le.ScanResult.getTimestampNanos()":"android.bluetooth.le.scanresult.getTimestampnanos（）\r\n","android.graphics.drawable.NinePatchDrawable.setTargetDensity(android.util.DisplayMetrics)":"android.graphics.drawable.ninepatchable.settargetdente（android.util.displaymetrics）\r\n","android.graphics.drawable.ColorStateListDrawable.setColorStateList(android.content.res.ColorStateList)":"android.graphics.drawable.ColorStateListDrawable.setColorStateList（android.content.Res.ColorStateList）\r\n","android.database.DataSetObserver.onChanged()":"android.database.datasetobserver.onchanged（）\r\n","ScanFilter":"扫描式\r\n","Use default value for\n            ":"使用默认值\r\n            \r\n","#writeToParcel(Parcel, int)":"#writetoparcel（包裹，int）\r\n","A mutable cursor implementation backed by an array of ":"一个由 \r\n","Public API for controlling the Bluetooth Headset Service.":"用于控制蓝牙耳机服务的公共API。\r\n","android.content.res.Resources.finishPreloading()":"机器人。内容。资源。完成加载()\r\n"," that blurs the contents of the optional input RenderEffect\n            with the specified radius along the x and y axis.":" 这模糊了可选输入RendereFect的内容\r\n            沿X和Y轴指定的半径。\r\n","The recommended distance above the baseline for singled spaced text.":"在单身间隔文本的基线上方的建议距离。\r\n","\n            and to conduct overall Bluetooth Management.":"\r\n            并进行整体蓝牙管理。\r\n","or you":"或者您\r\n","The factory of this package, as specified by the &lt;manifest&gt;\n            tag's ":"该软件包的工厂，如＆lt; subtest＆gt;\r\n            标签\r\n","Return the number of data scheme specific parts in the filter.":"返回过滤器中的数据方案特定零件的数量。\r\n"," to launch the maps application.":" 启动地图应用程序。\r\n","android.graphics.fonts.FontStyle.FONT_WEIGHT_MEDIUM":"android.graphics.fonts.fontstyle.font_weight_medium\r\n","ClipDescription#MIMETYPE_TEXT_URILIST":"剪贴画＃mimetype_text_urilist\r\n","Broadcast Action: A sticky broadcast that indicates low storage space\n            condition on the device\n            <p class=\"note\">\n            This is a protected intent that can only be sent by the system.":"广播动作：粘性广播，表明存储空间较低\r\n            设备上的条件\r\n            <p class =“ note”>\r\n            这是一个只能由系统发送的受保护意图。\r\n","A specialized Drawable that fills the Canvas with a specified color.":"一种专门的绘图，可填充画布的指定颜色。\r\n","android.database.sqlite.SQLiteOpenHelper.getDatabaseName()":"android.database.sqlite.sqliteopenhelper.getDatabasename（）\r\n","Retrieve the textual description of the application.":"检索应用程序的文本描述。\r\n"," for accessing sensors.":" 用于访问传感器。\r\n","android.graphics.Paint.setFontFeatureSettings(java.lang.String)":"android.graphics.paint.setfontfeaturesettings（java.lang.string）\r\n","that indicates that the activity\n can itself handle changes to the locale. ":"这表明活动\r\n 本身可以处理对区域的更改。\r\n","#setRepeatCount":"#SetRepeatCount\r\n","The maximum number of tasks rooted at this activity that can be in the recent task list.":"植根于最近的任务列表中的该活动的最大任务数。\r\n","Returns the absolute path to the directory on the primary external filesystem\n (that is somewhere on ":"返回主要外部文件系统上的目录的绝对路径\r\n （那在某个地方\r\n","Returns true if the device is upgrading, such as first boot after OTA.":"如果设备正在升级，则返回true，例如OTA之后的第一个引导。\r\n","Create an Icon pointing to a bitmap in memory.":"创建一个指向内存中位图的图标。\r\n","android.graphics.drawable.Drawable.onBoundsChange(android.graphics.Rect)":"android.graphics.drawable.drawable.onboundschange（android.graphics.Rect）\r\n","Set the rotation on a color axis by the specified values.":"Set the rotation on a color axis by the specified values.\r\n","Concat this colormatrix with the specified prematrix.":"Concat this colormatrix with the specified prematrix.\r\n","Remove these flags from the intent.":"从意图中删除这些标志。\r\n","Looks for a layer with the given ID and returns its ":"寻找具有给定ID的图层，并返回\r\n","android.graphics.Path.arcTo(android.graphics.RectF, float, float, boolean)":"android.graphics.path.arcto（android.graphics.Rectf，float，float，boolean）\r\n"," flag: return information about\n activities in the package in ":" 标志：返回有关的信息\r\n 包装中的活动\r\n","android.graphics.drawable.LayerDrawable.setDrawable(int, android.graphics.drawable.Drawable)":"android.graphics.drawable.layerdrawable.setDrawable（int，android.graphics.drawable.drawable）\r\n","android.content.pm.PackageManager.hasSystemFeature(java.lang.String)":"android.content.pm.packagemanager.hassystemfeature（java.lang.string）\r\n","Returns the value of an integer parameter.":"返回整数参数的值。\r\n","Create a new path, copying the contents from the src path.":"创建一个新路径，从SRC路径复制内容。\r\n","android.content.pm.PackageInstaller.getSessionInfo(int)":"android.content.pm.packageinstaller.getsessioninfo（int）\r\n","android.graphics.Bitmap.getScaledWidth(int)":"android.graphics.bitmap.getScaledWidth（int）\r\n","Converts tristimulus values from the CIE XYZ space to this\n            color space's color model.":"将tristimulus值从cie xyz空间转换为此\r\n            色彩空间的颜色模型。\r\n","android.graphics.drawable.Drawable.getConstantState()":"android.graphics.drawable.drawable.getConstantState（）\r\n",": If set, the service will run in its own\n isolated process. ":"：如果设置，服务将在自己的运行\r\n 隔离的过程。 \r\n","android.content.ClipDescription.filterMimeTypes(java.lang.String)":"android.content.clipdescription.filtermimetypes（java.lang.string）\r\n","android.drm.DrmInfoRequest.iterator()":"android.drm.drminforequest.iterator（）\r\n","android.graphics.Path.addArc(android.graphics.RectF, float, float)":"android.graphics.path.addarc（android.graphics.Rectf，float，float）\r\n","android.graphics.drawable.DrawableContainer.setExitFadeDuration(int)":"机器人。图形。可画的。DrawableContainer。setExitFadeDuration（int）\r\n"," to open the settings page that allows the user to decide whether\n            the calling app can interact across profiles.":" 打开设置页面，允许用户决定是否\r\n            调用应用程序可以跨配置文件进行交互。\r\n",": The device includes a magnetometer (compass).":"：该设备包括磁力计（指南针）。\r\n","If true, this content provider allows multiple instances of itself\n             to run in different process.":"如果为true，此内容提供商允许多个实例\r\n             在不同的过程中运行。\r\n","android.content.Context.unregisterReceiver(android.content.BroadcastReceiver)":"android.content.context.unregisterreceiver（android.content.broadcastreceiver）\r\n","android.drm.DrmInfoRequest.DrmInfoRequest(int, java.lang.String)":"android.drm.drminforequest.drminforequest（int，java.lang.string）\r\n","android.net.wifi.WifiManager":"android.net.wifi.Wifimanager\r\n","android.graphics.fonts.FontStyle.FONT_SLANT_UPRIGHT":"android.graphics.fonts.fontstyle.font_slant_upright\r\n",": The device is capable of communicating with\n            other devices via Bluetooth.":"：该设备能够与\r\n            其他设备通过蓝牙。\r\n","android.graphics.RenderNode.setRotationX(float)":"android.graphics.rendernode.setrotationx（float）\r\n","Signing information read from the package file, potentially\n            including past signing certificates no longer used after signing\n            certificate rotation.":"从包装文件中读取信息，可能有可能\r\n            包括签名后不再使用的过去签名证书\r\n            旋转证书。\r\n","#startService(Intent)":"#startservice（意图）\r\n","The given DRM information has been successfully processed.":"给定的DRM信息已成功处理。\r\n","Overall information about the contents of a package.":"有关包装内容的总体信息。\r\n","android.graphics.YuvImage":"android.graphics.yuvimage\r\n","Information you can retrieve about hardware configuration preferences\n            declared by an application.":"您可以检索有关硬件配置首选项的信息\r\n            通过申请声明。\r\n","android.graphics.Region.getBoundaryPath()":"android.graphics.gregion.getBoundaryPath（）\r\n","android.graphics.HardwareRenderer.setSurface(android.view.Surface)":"android.graphics.hardwarerenderer.setsurface（android.view.surface）\r\n","android.content.pm.PackageManager.FEATURE_DEVICE_ADMIN":"android.content.pm.packagemanager.feature_device_admin\r\n","Callback method called when ":"调用何时调用\r\n"," of additional activities to place\n            a the front of the list of choices, when shown to the user with a\n            ":" 其他活动\r\n            a选项列表的正面，当向用户显示\r\n            \r\n","android.graphics.drawable.ColorStateListDrawable":"android.graphics.drawable.ColorStateListDrawable\r\n","New IntentFilter containing a copy of an existing filter.":"新的IntentFilter包含现有过滤器的副本。\r\n","android.drm.DrmInfoStatus.mimeType":"android.drm.drminfostatus.mimetype\r\n","android.content.pm.ShortcutManager.disableShortcuts(java.util.List, java.lang.CharSequence)":"android.content.pm.shortcutmanager.disableshortcuts（java.util.list，java.lang.charsequence）\r\n","Subclasses must implement this to take care of stopping their loader,\n            as per ":"子类必须实施此操作以照顾阻止其装载机，\r\n            按照\r\n","android.database.CursorJoiner.CursorJoiner(android.database.Cursor, java.lang.String[], android.database.Cursor, java.lang.String[])":"android.database.cursorjoiner.cursorjoiner（android.database.cursor，java.lang.string []，android.database.cursor，java.lang.string []）\r\n"," that allows the base context to\n            be modified after it is initially set.":" 这允许基本上下文\r\n            最初设置后进行修改。\r\n","android.drm.DrmSupportInfo.addMimeType(java.lang.String)":"android.drm.drmsupportinfo.addmimetype（java.lang.string）\r\n","If the given permission is not allowed for a particular process\n and user ID running in the system, throw a ":"如果不允许给定权限\r\n 和在系统中运行的用户ID，投掷\r\n","Returns the width of the Shape.":"返回形状的宽度。\r\n","Indicates the repeat behavior of this drawable on the X axis. -or- Sets the repeat behavior of this drawable on the X axis.":"指示在X轴上绘制的该绘制的重复行为。 - 或设置该绘制在X轴上的重复行为。\r\n","android.content.IntentFilter.getDataSchemeSpecificPart(int)":"android.content.intentfilter.getDataschemeSpecificpart（int）\r\n","android.database.sqlite.SQLiteDatabase.setLockingEnabled(boolean)":"android.database.sqlite.sqlitedatabase.setlockingenabled（boolean）\r\n","Shortcut has not been restored because the publisher app does not support backup and restore.":"快捷方式尚未恢复，因为发布者应用不支持备份和还原。\r\n","android.hardware.SensorEventListener":"android.hardware.sensoreventlistener\r\n"," that allows the sender to qualify that\n            this shutdown is only for the user space of the system, not a complete shutdown.":" 这使发件人可以限定\r\n            此关闭仅适用于系统的用户空间，而不是完整的关闭。\r\n","Retrieve a String value from the preferences.":"从首选项中检索字符串值。\r\n","Activity Action: Start as a main entry point, does not expect to\n             receive data.":"活动动作：从主要入口开始，不期望\r\n             接收数据。\r\n","If the calling process of an IPC you are handling has not been\n            granted a particular permission, throw a ":"如果您要处理的IPC的呼叫过程\r\n            授予特定的许可，扔\r\n","android.bluetooth.BluetoothStatusCodes.ERROR_UNKNOWN":"android.bluetooth.bluetoothstatuscodes.error_unknown\r\n","android.graphics.ColorMatrixColorFilter.ColorMatrixColorFilter(float[])":"android.graphics.ColorMatrixColorFilter.ColorMatrixColorFilter(float[])\r\n","if the first package is not signed but the second is.":"如果第一个软件包未签名，但第二个包是。\r\n","Returns the manufacturer specific data associated with the manufacturer id.":"返回与制造商ID相关的制造商特定数据。\r\n","android.content.pm.PackageManager.getChangedPackages(int)":"android.content.pm.packagemanager.getchangedpackages（int）\r\n"," tags included under &lt;manifest&gt;, or null if there were none.":" 标签包括在＆lt; subtest＆gt;或null下，如果没有。\r\n","The name of the process this component should run in.":"该组件应运行的过程名称。\r\n","android.bluetooth.BluetoothHeadset.ACTION_VENDOR_SPECIFIC_HEADSET_EVENT":"android.bluetooth.bluetoothheadset.action_vendor_specific_headset_event\r\n","Drawable#setTintList(ColorStateList)":"可绘制的＃settintlist（colorStateList）\r\n","Return the inner radius of the ring expressed as a ratio of the ring's width. -or- Inner radius of the ring expressed as a ratio of the ring's width.":"返回以戒指宽度比例表示的环的内半径。环的 - 或内半径表示为环的宽度比。\r\n","android.database.sqlite.SQLiteMisuseException":"android.database.sqlite.sqlitemisuseexception\r\n","Optional name of a permission required to be able to access this\n            Activity.":"能够访问此的许可的可选名称\r\n            活动。\r\n","android.content.res.TypedArray.getDimensionPixelOffset(int, int)":"android.content.res.typedarray.getDimensionPixEloffset（int，int）\r\n","android.content.Context#sendBroadcast(Intent)":"android.content.context＃sendBroadcast（Intent）\r\n","android.graphics.drawable.shapes.RectShape.rect()":"android.graphics.drawable.shapes.RectShape.Rect（）\r\n","android.graphics.Region.Region(android.graphics.Rect)":"android.graphics.gregion.gregion（android.graphics.Rect）\r\n","Add a gesture for the entry":"为条目添加一个手势\r\n","Returns the relative luminance of a color.":"返回颜色的相对亮度。\r\n","Overall orientation of the screen.":"屏幕的总体方向。\r\n","android.graphics.drawable.Drawable.onStateChange(int[])":"android.graphics.drawable.drawable.onstatechange（int []）\r\n","This method will be invoked when an item in the dialog is clicked.":"单击对话框中的项目时，将调用此方法。\r\n","Resolution and querying flag: if set, only filters that support the\n ":"分辨率和查询标志：如果设置，则仅过滤支持\r\n \r\n","Set if the activity should be an option for the default action\n            (center press) to perform on a piece of data.":"设置如果活动应该是默认操作的选项\r\n            （中心按下）执行一块数据。\r\n","Disconnect a connected health channel.":"断开连接的健康渠道。\r\n","Android.Content.Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION":"android.content.intent.flag_grant_persistable_uri_permission\r\n","Copy the pixels from the buffer, beginning at the current position,\n            overwriting the bitmap's pixels.":"从缓冲区复制像素，从当前位置开始，\r\n            覆盖位图的像素。\r\n","android.content.Intent.ACTION_SEND_MULTIPLE":"android.content.intent.action_send_multiple\r\n","Gets the x location of the camera.":"获取相机的X位置。\r\n","Bind a String value to this statement.":"将字符串值绑定到此语句。\r\n","Special version of ":"特殊版本的\r\n","android.graphics.ImageDecoder.decodeBitmap(android.graphics.Source)":"android.graphics.imagedecoder.decodebitmap（android.graphics.source）\r\n","android.content.pm.PackageStats.externalDataSize":"android.content.pm.packagestats.externaldatasize\r\n"," to the end of\n            the layer list and returns its index.":" 到达\r\n            图层列表并返回其索引。\r\n","android.content.ContentProviderClient.insert(android.net.Uri, android.content.ContentValues, android.os.Bundle)":"android.content.contentproviderclient.insert（android.net.uri，android.content.content.contentvalues，android.os.bundle）\r\n","Build an SQL query string from the given clauses.":"从给定的子句中构建一个SQL查询字符串。\r\n","Add a characteristic to this service.":"在此服务中添加一个特征。\r\n",": The device has\n            the requisite kernel support for multinetworking-capable IPsec tunnels.":"：设备有\r\n            必要的内核支持具有多项式功能的IPSEC隧道。\r\n","Check whether the clip description contains the given MIME type.":"检查剪辑描述是否包含给定的MIME类型。\r\n","Compare the signatures of two packages to determine if the same\n signature appears in both of them.":"比较两个软件包的签名以确定是否相同\r\n 签名出现在他们两个中。\r\n","Take sunset photos.":"拍摄日落照片。\r\n","android.content.pm.PermissionGroupInfo.descriptionRes":"android.content.pm.permissiongroupinfo.descriptionres\r\n","Callback invoked when a reliable write transaction has been completed.":"可靠的写入交易完成后调用回调。\r\n","android.view.accessibility.AccessibilityManager":"android.view.Accessibility.Accessibymanager\r\n","android.content.Context.isUiContext()":"android.content.context.isuicontext（）\r\n","android.content.SyncResult.madeSomeProgress()":"android.content.syncresult.madesomeprogress（）\r\n","android.content.pm.ProviderInfo.readPermission":"android.content.pm.providerinfo.ReadPermission\r\n","#EXTRA_PIN_ITEM_REQUEST":"#EXTRA_PIN_ITEM_REQUEST\r\n","Return the actual number of bytes that were declared when the\n            AssetFileDescriptor was constructed.":"返回在\r\n            构建了AssetFileDescriptor。\r\n","Sets the colors and offsets used to draw the gradient.":"设置用于绘制梯度的颜色和偏移。\r\n","android.graphics.fonts.FontStyle.FONT_SLANT_ITALIC":"android.graphics.fonts.fontstyle.font_slant_italic\r\n","Disconnects and releases the Camera object resources.":"断开并释放相机对象资源。\r\n"," to render to.":" 渲染。\r\n",": the requested permission\n            is currently granted to the application.":"：请求许可\r\n            目前已授予该应用程序。\r\n","android.content.IntentFilter.countDataAuthorities()":"android.content.intentfilter.countdataaauthorities（）\r\n","Whether the device name will be included in the advertisement packet.":"设备名称是否包含在广告包中。\r\n","Used to indicate that some piece of data should be attached to some other\n            place.":"用来表明某些数据应附加到其他数据\r\n            地方。\r\n","#requery":"#requery\r\n","An exception indicating that a cursor is out of bounds.":"一个例外，表明光标超出了边界。\r\n",":\n            The device implements an optimized mode for virtual reality (VR) applications that handles\n            stereoscopic rendering of notifications, disables most monocular system UI components\n            while a VR application has user focus and meets extra CDD requirements to provide a\n            high-quality VR experience.":"：\r\n            该设备实现了处理的虚拟现实（VR）应用程序的优化模式\r\n            立体渲染通知，禁用大多数单眼系统UI组件\r\n            虽然VR应用程序具有用户重点，并且满足了额外的CDD要求，以提供\r\n            高质量的VR经验。\r\n","Gets the weight value":"获得体重值\r\n","android.content.pm.LauncherApps.startShortcut(android.content.pm.ShortcutInfo, android.graphics.Rect, android.os.Bundle)":"android.content.pm.launcherapps.startshortcut（android.content.pm.shortcutinfo，android.graphics.Rect，android.os.bundle）\r\n","android.content.res.Configuration.UI_MODE_NIGHT_YES":"机器人。内容。res.配置。UI_MODE_NIGHT_YES\r\n","android.graphics.Paint.clearShadowLayer()":"android.graphics.paint.clearshadowlayer（）\r\n","Specifies radii for each of the 4 corners.":"为四个角中的每个角度指定半径。\r\n"," for reading carrier configuration values.":" 用于读取载体配置值。\r\n","Create a labeled intent from the given intent, supplying a textual\n label and icon resource for it.":"从给定的意图创建标记的意图，提供文本\r\n 标签和图标资源。\r\n",": If set, a single instance of the receiver will\n run for all users on the device. ":"：如果设置，接收器的一个实例将\r\n 为设备上的所有用户运行。\r\n","Return the name of this application's package.":"返回此应用程序包的名称。\r\n","android.graphics.text.LineBreaker.BREAK_STRATEGY_HIGH_QUALITY":"android.graphics.text.linebreaker.break_strategy_high_quality\r\n","Returns the RGB color that will be added to the source color\n            when the color filter is applied.":"返回将添加到源颜色的RGB颜色\r\n            应用颜色过滤器时。\r\n","android.content.pm.ConfigurationInfo.reqTouchScreen":"android.content.pm.configurationinfo.reqtouchscreen\r\n","android.hardware.Camera.getParameters()":"android.hardware.camera.getParameters（）\r\n","android.bluetooth.BluetoothHidDevice.connect(android.bluetooth.BluetoothDevice)":"android.bluetooth.bluetoothhiddevice.connect（android.bluetooth.bluetoothdevice）\r\n",".arsc":".arsc\r\n","android.content.pm.LauncherApps.getApplicationInfo(java.lang.String, int, android.os.UserHandle)":"android.content.pm.launcherapps.getapplicationinfo（java.lang.string，int，android.os.userhandle）\r\n","Replace pixels in the bitmap with the colors in the array.":"用阵列中的颜色替换位图中的像素。\r\n"," for managing users on devices that support multiple users.":" 用于在支持多个用户的设备上管理用户。\r\n","android.bluetooth.BluetoothHealth.STATE_CHANNEL_CONNECTED":"android.bluetooth.bluetoothhealth.state_channel_connected\r\n","Intent extra: ID of the context used on ":"意图额外：在上下文上使用的ID\r\n","android.content.Loader.reset()":"android.content.loader.reset（）\r\n","flag: return information about the\n signatures included in the package.":"标志：返回有关\r\n 包装中包含的签名。\r\n","Thrown if the resources for the given\n application could not be loaded (most likely because it was uninstalled).\n":"如果给定的资源\r\n 无法加载应用程序（很可能是因为它已卸载）。\r\n\r\n","Called when the last reference to the object was released by\n            a call to ":"当对象的最后一次引用由\r\n            打电话\r\n","Any extras that parameters that are to be passed to the sync adapter.":"任何要传递给同步适配器的参数的附加功能。\r\n","Characteristic value format type uint8":"特征值格式类型UINT8\r\n","android.graphics.Canvas.drawVertices(android.graphics.VertexMode, int, float[], int, float[], int, int[], int, short[], int, int, android.graphics.Paint)":"android.graphics.canvas.drawvertices（android.graphics.vertexmode，int，float []，int，float []，int，int，int []，int，int，short []，int，int，int，int，android.graphics.paint）\r\n","Category for apps which are primarily accessibility apps, such as screen-readers.":"主要是可访问性应用程序的应用程序（例如屏幕阅读器）的类别。\r\n","The digital rights have expired.":"数字权利已过期。\r\n","android.bluetooth.le.ScanResult.ScanResult(android.bluetooth.BluetoothDevice, int, int, int, int, int, int, int, android.bluetooth.le.ScanRecord, long)":"android.bluetooth.le.scanresult.scanresult（android.bluetooth.bluetoothdevice，int，int，int，int，int，int，int，int，int，int，int，int，int，android.bluetooth.le.scanrecord，long）\r\n","android.database.DatabaseUtils.cursorDoubleToContentValues(android.database.Cursor, java.lang.String, android.content.ContentValues, java.lang.String)":"android.database.databaseutils.cursordloubtocontententvalues（android.database.cursor，java.lang.string，android.content.content.content.contentvalues，java.lang.lang.string）\r\n","android.content.ContentProvider.setWritePermission(java.lang.String)":"android.content.contentprovider.setwritepermission（java.lang.string）\r\n","android.bluetooth.BluetoothHeadset.AT_CMD_TYPE_ACTION":"android.bluetooth.bluetoothheadset.at_cmd_type_action\r\n","android.graphics.Rect":"机器人。图形。校长\r\n"," to launch the browser application.":" 启动浏览器应用程序。\r\n","Remove all registered observers.":"删除所有已注册的观察者。\r\n","Gets the state set at an index.":"将状态设置为索引。\r\n","android.content.Intent.URI_ALLOW_UNSAFE":"android.content.intent.uri_allow_unsafe\r\n","Interface definition for a callback that receives information\n about DRM processing events.":"接收信息的回调的接口定义\r\n 关于DRM处理事件。\r\n","android.content.ContentProvider.insert(android.net.Uri, android.content.ContentValues)":"android.content.contentprovider.insert（android.net.uri，android.content.contentvalues）\r\n","android.content.pm.PackageManager.TRUST_ALL":"android.content.pm.packagemanager.trust_all\r\n","android.graphics.ImageDecoder":"android.graphics.imagedecoder\r\n","DataSetObserver#onChanged":"DataSetobserver＃on Changed\r\n",":\n            The device supports running activities on secondary displays.":"：\r\n            该设备支持辅助显示上的运行活动。\r\n","An integer representing the end of the line has no modification for hyphenation.":"代表线路末端的整数没有任何连字符的修改。\r\n","android.bluetooth.le.AdvertisingSetParameters.isAnonymous()":"android.bluetooth.le.AdvertisingsetParameters.isanonymous（）\r\n","Get the elegant metrics flag. -or- Set the paint's elegant height metrics flag.":"获得优雅的指标旗。 - 或 - 设置油漆的优雅高度指标标志。\r\n","An Internet connection is not available and no attempt can be made to renew rights.":"没有互联网连接，也无法尝试更新权利。\r\n","android.content.SyncResult.tooManyRetries":"android.content.syncresult.toomanyretries\r\n"," statement suitable for use in a group of\n            ":" 适用于一组\r\n            \r\n","android.content.res.AssetManager.list(java.lang.String)":"机器人。内容。res.AssetManager。列表（java。朗。弦）\r\n","Indicates whether this NinePatch contains transparent or translucent pixels.":"指示此尼置是否包含透明或半透明的像素。\r\n","android.content.pm.PackageManager.TRUST_NONE":"android.content.pm.packagemanager.trust_none\r\n","Enables Advertising.":"启用广告。\r\n","Marks the current transaction as successful.":"将当前交易标记为成功。\r\n","Grant permission to access a specific Uri to another package, regardless\n of whether that package has general permission to access the Uri's\n content provider.":"授予有权访问特定URI到另一个软件包的权限\r\n 该软件包是否有一般允许访问URI的权限\r\n 内容提供商。\r\n","Create drawable from existing nine-patch, not dealing with density.":"创建可从现有的九点绘制的，不处理密度。\r\n","android.graphics.Paint.getStrikeThruThickness()":"android.graphics.paint.getstrikethruthickness（）\r\n","android.graphics.Paint.CURSOR_BEFORE":"android.graphics.paint.cursor_before\r\n","Broadcast Action: Resources for a set of packages (which were\n            previously unavailable) are currently\n            available since the media on which they exist is available.":"广播动作：一组包裹的资源（\r\n            以前无法使用）\r\n            由于存在媒体，因此可用。\r\n",", containing\n            the bug report.":"，包含\r\n            错误报告。\r\n","Public API for Bluetooth Health Profile.":"公共API用于蓝牙健康状况。\r\n","android.drm.DrmManagerClient.openConvertSession(java.lang.String)":"android.drm.drmmanagerclient.openconvertsession（java.lang.string）\r\n","Searches the set of signing certificates by which the package(s) for the given uid has proven\n            to have been signed.":"搜索给定UID的包装已证明的签名证书集\r\n            已签名。\r\n"," for interacting with display devices.":" 用于与显示设备进行交互。\r\n","Get the remote device this socket is connecting, or connected, to.":"获取此插座正在连接或连接到的远程设备。\r\n","Unregisters application.":"Unregister申请。\r\n","android.content.RestrictionEntry.TYPE_INTEGER":"android.content.grestrictionertry.type_integer\r\n","Remove all preferred activity mappings, previously added with\n            ":"删除所有首选活动映射，以前添加了\r\n            \r\n","The Cap specifies the treatment for the beginning and ending of\n stroked lines and paths.":"上限指定了开始和结束的治疗\r\n 抚摸线和路径。\r\n","Create a typeface object given a family name, and option style information.":"创建一个给定姓名和选项样式信息的字体对象。\r\n","android.database.AbstractCursor.setNotificationUri(android.content.ContentResolver, android.net.Uri)":"机器人。数据库。AbstractCursor.setNotificationUri（android。内容。ContentResolver，android.net.Uri）\r\n","Flattens this object into the given ":"将此物体变平到给定的对象\r\n","Advertising Set ID is not present in the packet.":"数据包中不存在广告集ID。\r\n","Gets the current exposure compensation index.":"获取当前的曝光补偿指数。\r\n","android.content.res.ObbScanner.getObbInfo(java.lang.String)":"机器人。内容。res.ObbScanner.getObbInfo（java。朗。弦）\r\n","android.content.Context.getDatabasePath(java.lang.String)":"android.content.context.getDatabasepath（java.lang.string）\r\n"," of the (possibly) scaled image.":" （可能）缩放图像的图像。\r\n","Returns true if this rectangle intersects the specified rectangle.":"如果此矩形与指定矩形相交，则返回true。\r\n","android.bluetooth.BluetoothGattCharacteristic.getDescriptors()":"android.bluetooth.bluetoothgattcharacteristic.getDescriptors（）\r\n","android.content.pm.LauncherApps.ACTION_CONFIRM_PIN_APPWIDGET":"android.content.pm.launcherapps.action_confirm_pin_appwidget\r\n","android.graphics.text.MeasuredText":"android.graphics.text.measuredText\r\n","Font hinter option that enables font hinting.":"启用字体提示的字体点数选项。\r\n","android.content.ContentResolver.SYNC_EXTRAS_UPLOAD":"android.content.contentresolver.sync_extras_upload\r\n","Gets the current transform matrix":"获取当前变换矩阵\r\n","Returns the currently selected string value. -or- Sets the string value to use as the selected value for this restriction.":"返回当前选择的字符串值。 - 或 - 设置以作为此限制的选定值的字符串值。\r\n","Make an Intent for the main activity of an application, without\n            specifying a specific activity to run but giving a selector to find\n            the activity.":"对应用程序的主要活动做出意图\r\n            指定特定的活动以进行运行，但要给选择者找到\r\n            活动。\r\n","A font weight value for the semi-bold weight":"半羽重量的字体重量值\r\n","android.bluetooth.BluetoothGattService.SERVICE_TYPE_PRIMARY":"android.bluetooth.bluetoothgattservice.service_type_primary\r\n","android.graphics.drawable.ShapeDrawable.ShapeDrawable(android.graphics.drawable.shapes.Shape)":"android.graphics.drawable.shapedrawable.shapedrawable（android.graphics.drawable.shapes.shape.shape）\r\n","A font style object.":"字体样式对象。\r\n","android.content.Context.getObbDirs()":"android.content.context.getobbdirs（）\r\n","#STRIKE_THRU_TEXT_FLAG":"#strike_thru_text_flag\r\n","VkPhysicalDevice":"vkphysicaldevice\r\n","android.content.ContentProvider.getCallingAttributionTag()":"android.content.contentprovider.getCallingAttributionTag（）\r\n","\n          An icon representing the receiver.\n        ":"代表接收器的图标。\r\n        \r\n","android.hardware.Sensor.STRING_TYPE_GRAVITY":"android.hardware.sensor.string_type_gravity\r\n","A container for supplying ":"提供的容器\r\n","android.graphics.ImageDecoder.ALLOCATOR_SHARED_MEMORY":"android.graphics.imagedecoder.allocator_shared_memory\r\n","android.content.res.AssetManager.open(java.lang.String, int)":"机器人。内容。res.AssetManager。打开（java。朗。字符串,int)\r\n","For shooting firework displays.":"用于拍摄烟火陈列。\r\n","Perform high frequency, low latency advertising, around every 100ms.":"每100毫秒左右执行高频，低延迟广告。\r\n","android.content.Context.CONNECTIVITY_SERVICE":"android.content.context.connectivity_service\r\n","Same as quadTo, but the coordinates are considered relative to the last\n            point on this contour.":"与Quadto相同，但坐标相对于最后\r\n            指向此轮廓。\r\n","Returns a pre-filled window that contains the data within this cursor.":"返回一个预填充的窗口，该窗口包含该光标中的数据。\r\n","android.gesture.GestureUtils.temporalSampling(android.gesture.GestureStroke, int)":"android.gesture.gestureutils.temporalsalmpling（android.gesture.gesture.gestroke，int）\r\n","android.content.Context.stopService(android.content.Intent)":"android.content.context.stopservice（android.content.intent）\r\n","#unbindService":"#unbindservice\r\n","Return true if the region contains the specified point":"如果区域包含指定点，则返回true\r\n"," with an\n            explicit application package name and class name.":" 带着\r\n            显式应用程序包名称和类名。\r\n","#removeStickyBroadcast(Intent)":"#removestickybroadcast（意图）\r\n","Broadcast Action: Sent to the installer package of an application when\n            that application is first launched (that is the first time it is moved\n            out of the stopped state).":"广播操作：发送到应用程序的安装程序包时\r\n            该应用程序首次启动（这是第一次移动\r\n            从停止状态出发）。\r\n","Descriptor write permission":"描述符写的权限\r\n","Class implementing the Application's backup functionality.":"实现应用程序备份功能的类。\r\n","Open an uncompressed asset by mmapping it and returning an ":"通过mmapping打开未压缩的资源并返回 \r\n","android.content.Intent.ACTION_PROFILE_INACCESSIBLE":"android.content.intent.action_profile_inaccessible\r\n","Sets the radius of the gradient.":"设置梯度的半径。\r\n","android.bluetooth.BluetoothGattCharacteristic.setValue(int, int, int, int)":"android.bluetooth.bluetoothgattcharacteristic.setValue（int，int，int，int）\r\n","android.content.Context.WALLPAPER_SERVICE":"android.content.context.wallpaper_service\r\n","android.view.WindowManager":"android.view.windowmanager\r\n","android.content.Intent.CATEGORY_SECONDARY_HOME":"android.content.intent.category_secondary_home\r\n","Reverses the transition, picking up where the transition currently is.":"逆转过渡，从当前的过渡到达。\r\n","android.graphics.drawable.GradientDrawable.setCornerRadii(float[])":"android.graphics.drawable.gradientdrawable.setcornerradii（float []）\r\n"," to apply to this RenderNode.":" 应用于此渲染。\r\n","android.content.Context.ACCOUNT_SERVICE":"android.content.context.account_service\r\n","android.graphics.drawable.ColorDrawable.getAlpha()":"android.graphics.drawable.colordrawable.getalpha（）\r\n","A string resource identifier (in the package's resources) of this\n            component's label.":"字符串资源标识符（在软件包的资源中）\r\n            组件的标签。\r\n","Provides the public APIs to control the Bluetooth HID Device profile.":"提供公共API来控制蓝牙HID设备配置文件。\r\n","android.content.pm.SharedLibraryInfo.getType()":"android.content.pm.SharedLibraryInfo.getType（）\r\n","\n            using one of the stream types exposed via\n            ":"\r\n            使用通过\r\n            \r\n","Creates a <code>DrmInfoRequest</code> object with type and MIME type.":"使用类型和MIME类型创建<code> drminforequest </code>对象。\r\n","Value used to enable indication for a client configuration descriptor":"用于启用客户端配置描述符指示的值\r\n","#SOURCE_ROLE":"#source_role\r\n","android.content.Intent.ACTION_MY_PACKAGE_UNSUSPENDED":"android.content.intent.action_my_package_unsuspended\r\n","android.content.Intent.ACTION_MANAGED_PROFILE_ADDED":"android.content.intent.action_managed_profile_added\r\n","This activity is a preference panel.":"该活动是一个偏好面板。\r\n","android.graphics.Bitmap.eraseColor(int)":"android.graphics.bitmap.erasecolor（int）\r\n","Characteristic value format type sfloat (16-bit float)":"特征值格式类型Sfloat（16位浮点）\r\n","Create an empty drawable, setting initial target density based on\n            the display metrics of the resources.":"基于\r\n            资源的显示指标。\r\n","Perform the specified Op on this region and the specified rect.":"在该区域和指定的rect上执行指定的OP。\r\n","Sent the first time a user is starting, to allow system apps to\n            perform one time initialization.":"发送用户第一次启动时发送，以允许系统应用程序到达\r\n            执行一次初始化。\r\n","android.content.UriMatcher.match(android.net.Uri)":"android.content.urimatcher.match（android.net.uri）\r\n","android.content.pm.ShortcutInfo.getIntents()":"android.content.pm.shortcutinfo.getintents（）\r\n","#setComponent":"#SetComponent\r\n","Used to hold extras statistics about the sync operation.":"用于持有有关同步操作的附加统计信息。\r\n","android.graphics.ColorMatrixColorFilter":"android.graphics.ColorMatrixColorFilter\r\n","This interface provides random read-write access to the result set returned\n            by a database query.":"该界面可随机读取对返回的结果集的访问\r\n            通过数据库查询。\r\n","android.content.pm.PackageManager.getMimeGroup(java.lang.String)":"android.content.pm.packagemanager.getmimegroup（java.lang.string）\r\n","android.bluetooth.BluetoothHidDevice.SUBCLASS2_DIGITIZER_TABLET":"android.bluetooth.bluetoothhiddevice.subclass2_digitizer_tablet\r\n","Set the dst integer Rect by rounding \"out\" this rectangle, choosing the\n            floor of top and left, and the ceiling of right and bottom.":"通过将“ Out”为“ Out”矩形设置DST整数矩形，选择该矩形\r\n            顶部和左侧的地板，以及左右底部的天花板。\r\n","The text is drawn to the right of the x,y origin\n":"文本被绘制在x，y原始的右侧\r\n\r\n","if opening the camera fails (for example, if the\n     camera is in use by another process or device policy manager has\n     disabled the camera).":"如果打开相机失败（例如，如果\r\n     另一个过程或设备策略管理器已使用相机\r\n     禁用相机）。\r\n","Returns the width of the current drawing layer":"返回当前绘图图层的宽度\r\n","WindowManager.LayoutParams":"windowmanager.layoutparams\r\n","android.content.pm.PackageManager.getResourcesForApplication(android.content.pm.ApplicationInfo, android.content.res.Configuration)":"android.content.pm.packagemanager.getResourcesForapPlication（android.content.pm.applicationinfo，android.content.res.res.configuration）\r\n","android.content.pm.PackageManager.getActivityBanner(android.content.Intent)":"android.content.pm.packagemanager.getActivityBanner（android.content.intent）\r\n","android.content.pm.PackageInstaller.uninstallExistingPackage(java.lang.String, android.content.IntentSender)":"android.content.pm.packageinstaller.uninstallexistingpackage（java.lang.string，android.content.intents）\r\n",", but taking a IntentSender\n to start.":"，但要有意图人\r\n 开始。\r\n","Constant representing digitizer tablet subclass.":"代表数字化片剂子类的常数。\r\n","android.content.pm.ShortcutInfo.getActivity()":"android.content.pm.shortcutinfo.getactivity（）\r\n","android.content.pm.ModuleInfo.writeToParcel(android.os.Parcel, int)":"android.content.pm.moduleinfo.writetoparcel（android.os.os.parcel，int）\r\n","android.bluetooth.BluetoothGattDescriptor.PERMISSION_WRITE_SIGNED":"android.bluetooth.bluetoothgattdescriptor.permission_write_signed\r\n","If defined, the activity named here is the logical parent of this activity.":"如果定义，此处命名的活动是此活动的逻辑父。\r\n","android.content.res.ColorStateList.valueOf(int)":"android.content.Res.ColorStateList.Valueof（int）\r\n"," callback, which is invoked when the \n            DRM framework sends status or warning information during registration or rights acquisition.":" 回调，当\r\n            DRM框架在注册或权利获取期间发送状态或警告信息。\r\n","android.content.res.Configuration.FONT_WEIGHT_ADJUSTMENT_UNDEFINED":"android.content.res.configuration.font_weight_adjustment_undefined\r\n"," of back references.":" 背参考。\r\n","BluetoothHidDeviceAppQosSettings":"Bluetoothhiddeviceappqostets\r\n","Acquires a reference to the object.":"获取对对象的引用。\r\n","android.bluetooth.le.AdvertisingSetCallback.onAdvertisingSetStopped(android.bluetooth.le.AdvertisingSet)":"android.bluetooth.le.AdvertisingsetCallback.OnadvertisingSeTStopped（android.bluetooth.le.ledvertisingset）\r\n","android.os.Environment#DIRECTORY_NOTIFICATIONS":"android.os.Environment＃Directory_notifications\r\n","android.content.Intent.putExtra(java.lang.String, int[])":"android.content.intent.putextra（java.lang.string，int []）\r\n","Return a color-int from red, green, blue components.":"从红色，绿色的蓝色组件中返回颜色。\r\n","Set of attribution tags that should be automatically applied to this\n            component.":"应该自动应用于此的一组归因标签\r\n            零件。\r\n","android.database.DatabaseUtils.appendEscapedSQLString(java.lang.StringBuilder, java.lang.String)":"android.database.databaseutils.appendescapedsqlstring（java.lang.stringbuilder，java.lang.string）\r\n","Clears the flag indicating that this receiver should abort the current\n            broadcast.":"清除标志，表明该接收器应中止电流\r\n            播送。\r\n","Returns the service data byte array associated with the ":"返回与之关联的服务数据字节数组\r\n","Stops the smooth zoom.":"停止光滑的变焦。\r\n","PackageManager#EXTRA_VERIFICATION_ID":"PackageManager＃extra_verification_id\r\n","Start Bluetooth LE Advertising.":"开始蓝牙LE广告。\r\n","android.graphics.SurfaceTexture.SurfaceTexture(boolean)":"android.graphics.surfaceTexture.surfaceTexture（boolean）\r\n","android.graphics.Canvas.drawColor(long, android.graphics.BlendMode)":"android.graphics.canvas.drawcolor（long，android.graphics.blendmode）\r\n","android.content.SyncResult.stats":"android.content.syncresult.stats\r\n","Determine whether the calling process of an IPC <em>or you</em> have been\n            granted a particular permission.":"确定IPC <em>或您</em>的调用过程是否已\r\n            授予特定的许可。\r\n","Get the current connection state of the profile.":"获取配置文件的当前连接状态。\r\n","android.content.ContentResolver.setSyncAutomatically(android.accounts.Account, java.lang.String, boolean)":"android.content.contentresolver.setsyncautashical（android.accounts.accounts.account，java.lang.string，boolean）\r\n","android.content.res.TypedArray.getDrawable(int)":"android.content.res.typedarray.getDrawable（int）\r\n","android.content.pm.PackageManager.FEATURE_BLUETOOTH":"android.content.pm.packagemanager.feature_bluetooth\r\n","VkPhysicalDeviceProperties::apiVersion":"vkphysicaldeviceproperties :: apiversion\r\n","android.bluetooth.BluetoothHealth.STATE_CHANNEL_DISCONNECTED":"android.bluetooth.bluetoothhealth.state_channel_disconnected\r\n","android.hardware.display.DisplayManager":"android.hardware.display.displaymanager\r\n","Shortcut has been restored from the previous device, but the publisher app on the current\n            device is of a lower version.":"快捷方式已从上一个设备恢复，但是当前的发布者应用程序\r\n            设备的版本较低。\r\n"," elements within\n      ":" 内部的元素\r\n      \r\n"," to interact\n            with your published conversations.":" 互动\r\n            与您发表的对话。\r\n","Attribution can be used in complex apps to logically separate parts of the app.":"归因可以在复杂的应用程序中用于逻辑上分开应用程序的部分。\r\n","android.database.sqlite.SQLiteDatabase.findEditTable(java.lang.String)":"android.database.sqlite.sqlitedatabase.findedittable（java.lang.string）\r\n","android.graphics.drawable.VectorDrawable":"android.graphics.drawable.vectordrawable\r\n","Convenience function for creating a ":"创建一个便利功能\r\n","\n            and contains an integer array of uids of all of the components\n            that have changed.":"\r\n            并包含所有组件的UID的整数阵列\r\n            发生了变化。\r\n",": the requested permission\n is currently granted to the application.":"：请求许可\r\n 目前已授予该应用程序。\r\n","Callback interface used to supply image data from a photo capture.":"回调接口用于从照片捕获中提供图像数据。\r\n","#BIND_NOT_PERCEPTIBLE":"#bind_not_permible\r\n","The target screen density being rendered to,\n            corresponding to\n            <a href=\"[TODO: @docRoot]guide/topics/resources/providing-resources.":"目标屏幕密度被渲染到\r\n            对应于\r\n            <a href =“ [todo：@docroot]指南/主题/资源/提供资源。\r\n","Perform an update by combining all current settings and the\n            information passed into this method.":"通过组合所有当前设置和\r\n            信息传递到此方法中。\r\n",": The device has a telephony radio with data\n            communication support.":"：该设备具有带有数据的电话收音机\r\n            沟通支持。\r\n","Checks whether the given MIME type or URI can be handled.":"检查给定的MIME类型还是可以处理URI。\r\n",": The device supports Open Mobile API capable eSE-based secure\n            elements.":"：该设备支持开放的移动API基于ESE的安全\r\n            元素。\r\n","If true, additional permissions to specific Uris in this content\n            provider can be granted, as per the\n            ":"如果是真的，则在此内容中获得特定URI的额外权限\r\n            可以根据\r\n            \r\n","android.content.Intent.setData(android.net.Uri)":"android.content.intent.setdata（android.net.uri）\r\n","Indicates whether the cross fade is enabled for this transition. -or- Enables or disables the cross fade of the drawables.":"指示该过渡是否启用了交叉褪色。 - 或启用或禁用可抽知物的交叉褪色。\r\n","Check if the scan filter matches a ":"检查扫描过滤器是否匹配\r\n","For Installer-provided checksums, package name of the Installer.":"对于安装程序提供的校验和，安装程序的软件包名称。\r\n","android.content.ContentResolver.EXTRA_HONORED_ARGS":"android.content.contentresolver.extra_honored_args\r\n","Return whether this component and its enclosing application are enabled.":"返回该组件及其封闭应用程序是否启用。\r\n","android.graphics.drawable.RippleDrawable.getRadius()":"android.graphics.drawable.rippledrawable.getradius（）\r\n","android.graphics.ImageFormat.YUV_444_888":"android.graphics.imageformat.yuv_444_888\r\n","android.content.pm.InstrumentationInfo.publicSourceDir":"android.content.pm.insrumentationinfo.publicsourcedir\r\n","Initiates a new conversion session.":"启动新的转换会话。\r\n","android.graphics.Paint.getStrokeJoin()":"android.graphics.paint.getstrokejoin（）\r\n","android.content.pm.PackageManager.queryReceiverProperty(java.lang.String)":"android.content.pm.PackageManager.queryReceiverProperty(java.lang.String)\r\n","Notifies the hardware renderer that a call to ":"通知硬件渲染器\r\n","This is called when the overall system is running low on memory, and\n            actively running processes should trim their memory usage.":"当整个系统在内存上运行较低时，这就是称为\r\n            积极运行的过程应修剪其内存使用量。\r\n","An exception that indicates that the SQLite database file is corrupt.":"一个例外，表明SQLITE数据库文件已损坏。\r\n","android.graphics.Canvas.scale(float, float)":"机器人。图形。帆布。scale（浮点数，浮点数）\r\n","If rectangles a and b intersect, return true and set this rectangle to\n            that intersection, otherwise return false and do not change this\n            rectangle.":"如果矩形a和b相交，则返回true并将此矩形设置为\r\n            那个交集，否则返回false，不改变这个\r\n            矩形。\r\n","A class that performs asynchronous loading of data.":"执行数据不同步加载的类。\r\n","android.graphics.Bitmap":"android.graphics.bitmap\r\n","android.content.Intent.ACTION_AIRPLANE_MODE_CHANGED":"android.content.intent.action_airplane_mode_changed\r\n","android.content.ContentResolver.NOTIFY_INSERT":"android.content.contentresolver.notify_insert\r\n","Given another bitmap, return true if it has the same dimensions, config,\n             and pixel data as this bitmap.":"给定另一个位图，如果它具有相同的尺寸，则返回true，config，config，\r\n             和像素数据作为此位图。\r\n","ColorSpace.Model":"colorspace.model\r\n","android.content.pm.SharedLibraryInfo.getLongVersion()":"android.content.pm.SharedLibraryInfo.getLongVersion（）\r\n","Key for request icon contained in the request bundle.":"请求捆绑包中包含的请求图标的键。\r\n","android.media.MediaCommunicationManager":"android.media.MediacommunicationManager\r\n","android.graphics.fonts.FontStyle.FONT_WEIGHT_BOLD":"android.graphics.fonts.fontstyle.font_weight_bold\r\n","Criteria for filtering result from Bluetooth LE scans.":"蓝牙LE扫描导致过滤的标准。\r\n","android.graphics.Canvas.drawTextOnPath(char[], int, int, android.graphics.Path, float, float, android.graphics.Paint)":"android.graphics.canvas.drawtextonpath（char []，int，int，android.graphics.path，float，float，float，android.graphics.paint）\r\n","android.content.pm.PackageManager.getApplicationLabel(android.content.pm.ApplicationInfo)":"android.content.pm.packagemanager.getApplicationLabel（android.content.pm.applicationinfo）\r\n","Add a new Intent data authority to match against.":"添加一个新的意图数据权限以匹配。\r\n","android.content.QuickViewConstants":"android.content.QuickViewConstants\r\n"," for printing and managing\n            printers and print tasks.":" 用于打印和管理\r\n            打印机和打印任务。\r\n","Callback reporting the result of a descriptor read operation.":"回调报告描述符读取操作的结果。\r\n","android.content.Context.enforceCallingPermission(java.lang.String, java.lang.String)":"android.content.context.enforcecallingpermission（java.lang.string，java.lang.string）\r\n","Checks if the RenderNode has a shadow.":"检查RenderNode是否有阴影。\r\n","Parse a series of ":"解析一系列\r\n","android.graphics.RenderNode":"Android.graphics.Rendernode\r\n","Return true if the region contains more than one rectangle":"如果区域包含多个矩形，则返回true\r\n","AdvertiseSettings":"广告\r\n","android.content.ClipDescription.setExtras(android.os.PersistableBundle)":"android.content.clipdescription.setExtras（android.os.persistableBundle）\r\n","Whether or not an instant app is available for the resolved intent.":"是否有即时应用程序可用于解决意图。\r\n","android.graphics.Paint.setBlendMode(android.graphics.BlendMode)":"android.graphics.paint.setblendmode（android.graphics.blendmode）\r\n","android.content.pm.PackageManager.addPermission(android.content.pm.PermissionInfo)":"android.content.pm.packagemanager.addpermission（android.content.pm.permissioninfo）\r\n","Optional extra indicating the callback type, which will be one of\n            CALLBACK_TYPE_* constants in ":"可选的额外指示回调类型，这将是\r\n            callback_type_*常数\r\n","android.content.Intent.getData()":"android.content.intent.getData（）\r\n","Gets the slant value":"获取倾斜的价值\r\n","Starts the animation from the first frame, looping if necessary.":"从第一帧开始动画，如有必要。\r\n","if the attribute is defined but is\n         not an integer.\n":"如果定义了属性，但是\r\n         不是整数。\r\n\r\n","android.content.Intent.ACTION_OPEN_DOCUMENT_TREE":"android.content.intent.action_open_document_tree\r\n","Determine if two Color structs do not have the same value.":"确定两个颜色结构是否不具有相同的值。\r\n"," callback, which is invoked when the \n            DRM framework sends information about DRM processing.":" 回调，当\r\n            DRM框架发送有关DRM处理的信息。\r\n",": The device includes an accelerometer.":"：该设备包括加速度计。\r\n","android.content.Intent.ACTION_FACTORY_TEST":"android.content.intent.action_factory_test\r\n","A resizeable bitmap, with stretchable areas that you define.":"可重新设计的位图，您可以定义可伸展的区域。\r\n","android.content.ComponentName.createRelative(java.lang.String, java.lang.String)":"android.content.componentname.磨损（java.lang.string，java.lang.string）\r\n","Acquires information for unregistering the DRM server.":"获取信息以解开DRM服务器。\r\n","android.database.DatabaseUtils.cursorIntToContentValues(android.database.Cursor, java.lang.String, android.content.ContentValues)":"android.database.databaseutils.cursorinttocontentvalues（android.database.cursor，java.lang.string，android.content.contentvalues）\r\n","Returns the transmit power in dBm.":"返回DBM中的发射功率。\r\n","android.content.pm.SigningInfo.hasPastSigningCertificates()":"android.content.pm.signinginfo.haspastsigningcertificates（）\r\n","An unique id per face while the face is visible to the tracker.":"在跟踪器可见脸时，每个脸部的唯一ID。\r\n","android.content.ContentProviderOperation.resolveSelectionArgsBackReferences(android.content.ContentProviderResult[], int)":"android.content.ContentProviderOperation.ResolvesElectionargsbackReferences（android.content.content.contentproviderresult []，int），int）\r\n","Value used to disable notifications or indicatinos":"用于禁用通知或Indicatinos的值\r\n"," for accessing system health (battery, power,\n            memory, etc) metrics.":" 用于访问系统健康（电池，电源，\r\n            内存等指标。\r\n","android.os.Environment#DIRECTORY_PICTURES":"android.os.Environment＃Directory_pictures\r\n","android.graphics.BitmapRegionDecoder.getWidth()":"android.graphics.bitmapregiondecoder.getWidth（）\r\n","#addPermission(PermissionInfo)":"#addpermission（允许Info）\r\n","Returns true if getStyle() has the BOLD bit set.":"如果GetStyle（）具有粗体设置，则返回true。\r\n","A utility class that provides operations for parsing extended metadata embedded in\n            DRM constraint information.":"提供用于解析扩展元数据的操作的公用事业类\r\n            DRM约束信息。\r\n","BluetoothGatt#executeReliableWrite":"Bluetoothgatt＃executereliablewrite\r\n","Value type that contains information about a periodic sync.":"价值类型包含有关周期同步的信息。\r\n","The rights object is being delivered to the device.":"权利对象正在传递到设备。\r\n","android.content.ClipDescription.hasMimeType(java.lang.String)":"android.content.clipdescription.hasmimetype（java.lang.string）\r\n","Checks whether the headset supports voice recognition":"检查耳机是否支持语音识别\r\n","android.graphics.Paint.setFlags(int)":"android.graphics.paint.setflags（int）\r\n","android.bluetooth.le.AdvertiseCallback.onStartSuccess(android.bluetooth.le.AdvertiseSettings)":"android.bluetooth.le.Advertisecallback.onstartsuccess（android.bluetooth.le.levertisestestings）\r\n","Returns if this permission offers read access.":"如果此权限提供读取访问权限，则返回。\r\n","Feature for ":"功能\r\n","Bundle#putStringArray":"束＃putstringarray\r\n","Return the paint's color.":"返回油漆的颜色。\r\n","Return whether this load has been reset.":"返回该负载是否已重置。\r\n","Get the maximum supported Receive packet size for the underlying transport.":"获取基础运输的最大支撑接收数据包大小。\r\n","Callback indicating service changed event is received":"回调指示已收到服务更改事件的服务\r\n","android.graphics.Canvas.saveLayer(android.graphics.RectF, android.graphics.Paint, int)":"机器人。图形。帆布。saveLayer（android。图形。RectF，android的。图形。油漆，int）\r\n","Constant corresponding to <code>singleInstancePerTask</code> in\n            the ":"常数对应于<code> singlesinstancePertask </code> in\r\n            这\r\n","android.bluetooth.BluetoothGattCharacteristic.BluetoothGattCharacteristic(java.util.UUID, int, int)":"android.bluetooth.bluetoothgattcharacteristic.bluetoothgattcharacteristic（java.util.uuid，int，int）\r\n","The install location requested by the package.":"软件包请求的安装位置。\r\n","android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_MANIFEST":"android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_MANIFEST\r\n","Register a custom scalar function that can be called from SQL\n            expressions.":"注册可以从SQL调用的自定义标量功能\r\n            表达。\r\n","Returns why a shortcut has been disabled.":"返回为什么禁用快捷方式。\r\n","android.content.pm.PackageManager.FEATURE_IDENTITY_CREDENTIAL_HARDWARE":"android.content.pm.packagemanager.feature_identity_credential_hardware\r\n","#getSystemAvailableFeatures()":"#getSystemavailableFeatures（）\r\n","Is the given data authority included in the filter?  Note that if the\n            filter does not include any authorities, false will <em>always</em> be\n            returned.":"过滤器中是否包含给定的数据授权？请注意，如果\r\n            过滤器不包括任何当局\r\n            回来。\r\n","Return the banner resource identifier to use for this component.":"将横幅资源标识符返回以用于此组件。\r\n","Retrieve a boolean value from the preferences.":"从偏好中检索布尔值。\r\n","Returns a font":"返回字体\r\n","android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_MICROPHONE":"android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_MICROPHONE\r\n","android.graphics.Interpolator.setKeyFrame(int, int, float[])":"android.graphics.interpolator.setKeyframe（int，int，float []）\r\n","android.content.ContentUris.parseId(android.net.Uri)":"android.content.contenturis.parseid（android.net.uri）\r\n","Creates an instance of a hardware-accelerated renderer.":"创建一个硬件加速渲染器的实例。\r\n","android.graphics.Paint.setWordSpacing(float)":"android.graphics.paint.setWord -Spacing（float）\r\n","android.content.pm.LauncherApps.unregisterCallback(android.content.pm.Callback)":"android.content.pm.launcherapps.unregistercallback（android.content.pm.callback）\r\n","android.content.Intent.makeRestartActivityTask(android.content.ComponentName)":"android.content.intent.makerestartactivityTask（android.content.componentname）\r\n","YCbCr format used for images, which uses YUYV (YUY2) encoding format.\n This is an alternative format for camera preview images. ":"YCBCR格式用于图像，使用YUYV（YUY2）编码格式。\r\n 这是相机预览图像的替代格式。\r\n","An undefined fontWeightAdjustment.":"未定义的FontweightAdjustment。\r\n"," for accessing system storage\n            statistics.":" 用于访问系统存储\r\n            统计数据。\r\n","android.content.Intent.putExtra(java.lang.String, float[])":"android.content.intent.putextra（java.lang.string，float []）\r\n","The name of the split in which this component is declared.":"声明此组件的拆分名称。\r\n","Returns true if the point's coordinates equal (x,y)":"如果点的坐标相等，则返回true（x，y）\r\n","android.graphics.Paint.getTextWidths(java.lang.String, float[])":"android.graphics.paint.getTextWidths（java.lang.string，float []）\r\n","android.graphics.drawable.Drawable.getAlpha()":"android.graphics.drawable.drawable.getalpha（）\r\n","android.content.AsyncQueryHandler.onDeleteComplete(int, java.lang.Object, int)":"android.content.asyncqueryhandler.ondeletecomplete（int，java.lang.object，int）\r\n","android.content.Context.startForegroundService(android.content.Intent)":"android.content.context.startforegroundservice（android.content.intent）\r\n","Android 10-bit raw format":"Android 10位原始格式\r\n","Returns true if the database is currently open.":"如果数据库当前打开，则返回true。\r\n","android.graphics.Canvas.drawColor(long)":"android.graphics.canvas.drawcolor（long）\r\n"," method returns\n            true.":" 方法返回\r\n            真的。\r\n","Format: Planar YCbCr 420; must have an even width and height":"格式：平面YCBCR 420；必须具有均匀的宽度和高度\r\n","Returns the bitmap used by this drawable to render. -or- Switch to a new Bitmap object.":"返回可绘制的渲染的位图。 - 或 - 切换到新的位图对象。\r\n","android.content.pm.ShortcutInfo.DISABLED_REASON_OTHER_RESTORE_ISSUE":"android.content.pm.shortcutinfo.disabled_reason_other_restore_issue\r\n","android.bluetooth.le.ScanResult.getDevice()":"android.bluetooth.le.scanresult.getDevice（）\r\n","android.content.Loader.forceLoad()":"android.content.loader.forceload（）\r\n","android.graphics.ColorSpace.cctToXyz(int)":"android.graphics.colorspace.ccttoxyz（int）\r\n","android.content.pm.PackageManager.FEATURE_SENSOR_HEART_RATE_ECG":"android.content.pm.packagemanager.feature_sensor_heart_rate_ecg\r\n","android.drm.DrmInfo.put(java.lang.String, java.lang.Object)":"android.drm.drminfo.put（java.lang.string，java.lang.object）\r\n",": The device has a camera facing away\n            from the screen.":"：该设备有一个相机朝外\r\n            从屏幕。\r\n","android.content.ContentProvider.dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])":"android.content.contentprovider.dump（java.io.filedescriptor，java.io.printwriter，java.lang.string []）\r\n","android.graphics.drawable.Icon.createWithAdaptiveBitmapContentUri(java.lang.String)":"android.graphics.drawable.icon.createwithadaptivebitmapcontenturi（java.lang.string）\r\n","android.content.Intent.EXTRA_COMPONENT_NAME":"android.content.intent.extra_component_name\r\n","Called when the camera auto focus starts or stops.":"当相机自动焦点启动或停止时调用。\r\n","android.content.Intent.putExtra(java.lang.String, int)":"android.content.intent.putextra（java.lang.string，int）\r\n","android.content.Intent.ACTION_INSTALL_FAILURE":"android.content.intent.action_install_failure\r\n","Close this asset manager.":"关闭此资产管理器。\r\n","android.content.pm.ServiceInfo.FLAG_EXTERNAL_SERVICE":"android.content.pm.ServiceInfo.FLAG_EXTERNAL_SERVICE\r\n","to allow the current action value to be\n overwritten, even if it is already set.":"允许当前的动作值为\r\n 即使已经设置了它，即使它已经设置了。\r\n","android.content.res.AssetFileDescriptor.getStartOffset()":"机器人。内容。res.AssetFileDescriptor。getStartOffset()\r\n","android.graphics.RectF.union(float, float)":"Android.graphics.Rectf.Union（浮点，浮点）\r\n","Applies the given alpha to the underlying color.":"将给定的alpha应用于基础颜色。\r\n","Cursor#copyStringToBuffer":"光标＃copyStringTobuffer\r\n","android.content.pm.PermissionInfo.getProtectionFlags()":"android.content.pm.permissioninfo.getProtectionflags（）\r\n","android.graphics.BitmapFactory.decodeStream(java.io.InputStream)":"android.graphics.bitmapfactory.decodestream（java.io.inputstream）\r\n","android.graphics.drawable.AnimatedVectorDrawable.draw(android.graphics.Canvas)":"android.graphics.drawable.animatedVectordrawable.draw（android.graphics.canvas）\r\n","android.graphics.RectF.round(android.graphics.Rect)":"android.graphics.Rectf.Round（android.graphics.Rect）\r\n","Given a millisecond time value (msec), return the interpolated values and\n            return whether the specified time was within the range of key times\n            (NORMAL), was before the first key time (FREEZE_START) or after the last\n            key time (FREEZE_END).":"给定毫秒的时间值（MSEC），返回插值值和\r\n            返回指定的时间是否在关键时间范围内\r\n            （正常），是在第一个关键时间之前（freeze_start）或最后一次之后\r\n            关键时间（freeze_end）。\r\n","android.content.pm.CrossProfileApps":"android.content.pm.crossprofileapps\r\n","Version of\n            ":"版本的\r\n            \r\n","android.content.pm.verify.domain.DomainVerificationUserState.DOMAIN_STATE_NONE":"android.content.pm.verify.domain.domainverificationuserstate.domain_state_none\r\n","android.graphics.text.PositionedGlyphs.getGlyphY(int)":"android.graphics.text.positionedglyphs.getglyphy（int）\r\n","Set this theme to hold the same contents as the theme\n ":"将此主题设置为与主题相同的内容\r\n \r\n","Return a TypedArray holding the values defined by the style\n resource ":"返回按照样式定义的值的打字机\r\n 资源\r\n"," containing the uid of the current foreground\n            application package at the time the assist was invoked.":" 包含当前前景的UID\r\n            调用辅助时的申请包。\r\n","Broadcast Action: The user has restarted a package, and all of its\n            processes have been killed.":"广播动作：用户重新启动了一个软件包及其所有包裹\r\n            过程已被杀死。\r\n","android.content.AbstractThreadedSyncAdapter.onPerformSync(android.accounts.Account, android.os.Bundle, java.lang.String, android.content.ContentProviderClient, android.content.SyncResult)":"android.content.abstractthreadsyncadapter.onperformync（android.accounts.accounts.accounts.account，android.os.bundle，java.lang.string，android.content.content.content.contentproviderclient，android.content.content.syncresutt）\r\n","android.content.ClipDescription.isStyledText()":"android.content.clipdescription.isstyledText（）\r\n","android.database.Cursor.moveToPosition(int)":"android.database.cursor.movetoposition（int）\r\n","Broadcast Action: A new application package has been installed on the\n            device.":"广播动作：已安装了新的应用程序包\r\n            设备。\r\n","android.content.pm.ResolveInfo.labelRes":"android.content.pm.resolveinfo.labelres\r\n","android.graphics.Outline.getAlpha()":"android.graphics.outline.getalpha（）\r\n","android.database.sqlite.SQLiteOpenHelper.setOpenParams(android.database.sqlite.OpenParams)":"android.database.sqlite.sqliteopenhelper.setopenparams（android.database.sqlite.openparams）\r\n","android.graphics.drawable.ShapeDrawable.setShape(android.graphics.drawable.shapes.Shape)":"android.graphics.drawable.shapeprawable.setshape（android.graphics.drawable.shapes.shape.shape）\r\n","#TYPE_BUNDLE bundle":"#Type_Bundle捆绑包\r\n","Shortcut has not been restored because the publisher app's signature has changed.":"快捷方式尚未恢复，因为发布者应用程序的签名已更改。\r\n","android.content.pm.CrossProfileApps.getProfileSwitchingIconDrawable(android.os.UserHandle)":"android.content.pm.crossprofileapps.getProfilesWitchingIcondrawable（android.os.userhandle）\r\n","android.graphics.drawable.GradientDrawable.setStroke(int, android.content.res.ColorStateList)":"android.graphics.drawable.gradientdrawable.setstroke（int，android.content.res.colorStateList）\r\n","android.content.pm.PackageManager.getSystemSharedLibraryNames()":"android.content.pm.packagemanager.getSystemsharedLibraryNames（）\r\n","android.content.pm.PackageInstaller.getStagedSessions()":"android.content.pm.packageinstaller.getStageSessions（）\r\n","android.bluetooth.le.AdvertisingSetCallback.onPeriodicAdvertisingParametersUpdated(android.bluetooth.le.AdvertisingSet, int)":"android.bluetooth.le.AdvertisingsetCallback.OnperiodicAdiCadecadvertisingParameterSuped（android.bluetooth.le.le..le.aptersingset，int）\r\n","android.database.sqlite.SQLiteDatabase.setTransactionSuccessful()":"android.database.sqlite.sqlitedatabase.settransactionsuccessuccessful（）\r\n","The minimum SDK version this application can run on.":"该应用程序可以运行的最小SDK版本。\r\n","Return true if the specified rectangle, after being transformed by the\n            current matrix, would lie completely outside of the current clip.":"如果指定的矩形返回true，则在被转换后\r\n            当前矩阵将完全位于当前夹子外。\r\n","Override this in your subclass to change appearance if you vary based\n             on level.":"如果您基于不同\r\n             在级别上。\r\n","android.content.pm.PackageManager.FEATURE_WIFI_AWARE":"android.content.pm.packagemanager.feature_wifi_aware\r\n","android.graphics.Outline.set(android.graphics.Outline)":"android.graphics.outline.set（android.graphics.outline）\r\n","Commit that you have actually fully processed a content change that\n            was returned by ":"承诺您实际上已经完全处理了一个内容更改\r\n            被归还\r\n","Attempt to connect to a remote device.":"尝试连接到远程设备。\r\n","android.content.RestrictionEntry.getType()":"android.content.resterictionEntry.getType（）\r\n","Indicates that this sync is intended to only upload local changes to the server.":"表示此同步仅用于将本地更改上传到服务器。\r\n","android.content.pm.PackageManager.FEATURE_SENSOR_HEART_RATE":"android.content.pm.packagemanager.feature_sensor_heart_rate\r\n","Interface definition for the columns that represent DRM constraints.":"代表DRM约束的列的接口定义。\r\n","android.content.ContentResolver.notifyChange(android.net.Uri, android.database.ContentObserver)":"android.content.contentresolver.notifyChange（android.net.uri，android.database.contentobserver）\r\n","Broadcast sent to the primary user when an associated managed profile is removed.":"删除关联的托管配置文件时，已发送给主要用户的广播。\r\n","android.database.CursorJoiner.next()":"android.database.cursorjoiner.next（）\r\n","Nothing interesting to report.":"没有有趣的报告。\r\n","Dangerous value for ":"危险价值\r\n","Retrieve, creating if needed, a new directory in which the application\n            can place its own custom data files.":"检索，创建如果需要，该应用程序的新目录\r\n            可以放置自己的自定义数据文件。\r\n","android.graphics.Canvas.saveLayerAlpha(float, float, float, float, int)":"机器人。图形。帆布。saveLayerAlpha(float,float,float,float,int)\r\n","Relinquish a persisted URI permission grant.":"放弃持续的URI许可赠款。\r\n","Convenience function for writing either a IntentSender or null pointer to\n            a Parcel.":"撰写意图人或无效指针的便利功能\r\n            一个包裹。\r\n","Interface that is implemented to discover when a Loader has finished\n loading its data.":"实现的接口可以发现加载器完成何时完成\r\n 加载数据。\r\n","Intersect the current clip with the specified rectangle, which is\n            expressed in local coordinates.":"将当前夹与指定的矩形相交\r\n            在本地坐标中表达。\r\n","android.companion.CompanionDeviceManager.EXTRA_DEVICE":"android.companion.companiondevicemanager.extra_device\r\n","android.database.DatabaseUtils.cursorLongToContentValues(android.database.Cursor, java.lang.String, android.content.ContentValues, java.lang.String)":"android.database.databaseutils.cursorlongtocontentvalues（android.database.cursor，java.lang.string，android.content.content.content.contentvalues，java.lang.lang.string）\r\n",": true when the application's window can be\n increased in size for larger screens. ":"：true当应用程序的窗口可以\r\n 较大屏幕的大小增加。\r\n"," with no options\n            specified.":" 没有选择\r\n            指定的。\r\n","A faster constructor specially for cloning a stroke.":"更快的构造函数，专门用于克隆中风。\r\n","android.graphics.drawable.BitmapDrawable.setTargetDensity(android.util.DisplayMetrics)":"android.graphics.drawable.bitmapdrable.settargetDenty（android.util.displaymetrics）\r\n","Retrieves the styled string value for the attribute at <var>index</var>.":"检索<var> index </var>的属性的样式字符串值。\r\n"," with the\n            name returned by a ":" 与\r\n            名称由一个\r\n","Zooms to the requested value smoothly.":"放大到请求的值平稳。\r\n","android.graphics.BitmapRegionDecoder.decodeRegion(android.graphics.Rect, android.graphics.Options)":"android.graphics.bitmapregiondecoder.decoderegion（android.graphics.Rect，android.graphics.options）\r\n","android.content.res.AssetManager.openXmlResourceParser(java.lang.String)":"机器人。内容。res.AssetManager。openXmlResourceParser（java。朗。弦）\r\n","android.content.Intent.EXTRA_SHORTCUT_INTENT":"android.content.intent.extra_shortcut_intent\r\n","Registers a listener to be notified when the zoom value is updated by the\n            camera driver during smooth zoom.":"寄存器一个听众在缩放值更新时被通知\r\n            光滑变焦期间的相机驱动器。\r\n","android.bluetooth.le.AdvertiseData.getServiceData()":"android.bluetooth.le.ledvertisedata.getServicedata（）\r\n","android.content.IntentFilter.writeToXml(org.xmlpull.v1.XmlSerializer)":"android.content.intentfilter.writetoxml（org.xmlpull.v1.xmlserializer）\r\n",": This is a device for IoT and may not have an UI.":"：这是IoT的设备，可能没有UI。\r\n"," to supply the data being sent.":" 提供发送的数据。\r\n","Return the package name of the application that created this\n            IntentSender, that is the identity under which you will actually be\n            sending the Intent.":"返回创建此的应用程序的包名称\r\n            意图人，这就是您实际上是的身份\r\n            发送意图。\r\n","android.content.ContentResolver.EXTRA_REFRESH_SUPPORTED":"android.content.contentresolver.extra_refresh_supported\r\n","android.content.ContentProvider.openAssetFile(android.net.Uri, java.lang.String, android.os.CancellationSignal)":"android.content.contentprovider.openassetfile（android.net.uri，java.lang.string，android.os.os.cancellationsignal）\r\n","Called when the service being bound has returned ":"返回服务时打电话给\r\n","Returns a list of service UUIDs within the advertisement that are used to identify the\n            bluetooth GATT services.":"返回广告中的服务uuid​​列表，用于识别\r\n            蓝牙Gatt服务。\r\n","Allows provider to report back to client which query keys are honored in a Cursor.":"允许提供商向客户端报告哪些查询密钥在光标中受到尊重。\r\n","android.content.Context.checkCallingUriPermissions(java.util.List, int)":"android.content.Context.CheckCallingUripermissions（Java.util.list，int）\r\n","android.graphics.Color.HSVToColor(int, float[])":"android.graphics.color.hsvtocolor（int，float []）\r\n","android.content.pm.LabeledIntent.LabeledIntent(java.lang.String, int, int)":"android.content.pm.labeledintent.labeledintent（java.lang.string，int，int）\r\n","android.content.Intent.ACTION_CALL_BUTTON":"android.content.intent.action_call_button\r\n","android.content.IntentFilter.categoriesIterator()":"android.content.intentfilter.categoriesiterator（）\r\n","android.graphics.drawable.BitmapDrawable.getBitmap()":"android.graphics.drawable.bitmapdrabable.getbitmap（）\r\n","Get all the gesture entry names in the library":"在库中获取所有手势条目名称\r\n","Create and return a new auto-close output stream for this asset.":"为此资源创建并返回一个新的自动关闭输出流。\r\n","android.content.ContentProviderClient.openFile(android.net.Uri, java.lang.String)":"android.content.contentproviderclient.openfile（android.net.uri，java.lang.string）\r\n","android.content.pm.PackageManager.FEATURE_USB_ACCESSORY":"android.content.pm.packagemanager.feature_usb_accessory\r\n","The SyncAdapter detected that there was an unrecoverable version conflict when it\n            attempted to update or delete a version of a resource on the server.":"SyncAdapter检测到当时有无法恢复的版本冲突\r\n            尝试更新或删除服务器上资源的版本。\r\n","Return a data scheme in the filter.":"在过滤器中返回数据方案。\r\n","android.content.ComponentName.getClassName()":"android.content.componentname.getClassName（）\r\n","This class can also be created via XML inflation using <code>&lt;adaptive-icon></code> tag\n            in addition to dynamic creation.":"也可以使用<code>＆lt; Adaptive-Icon> </code>标签通过XML通货膨胀创建此类类\r\n            除了动态创建。\r\n","Get the current connection state of the profile":"获取个人资料的当前连接状态\r\n","ContentProvider#openTypedAssetFile ContentProvider.openTypedAssetFile":"contentprovider＃opentypedAssetfile contentprovider.opentypedAssetFile\r\n","android.content.IntentFilter.addDataType(java.lang.String)":"android.content.intentfilter.adddatatype（java.lang.string）\r\n","\n          The order in which the content provider should be instantiated.\n        ":"\r\n          内容提供商应实例化的顺序。\r\n        \r\n","Convenience method that efficiently loads a visual thumbnail for the\n            given ":"便利方法有效地加载了视觉缩略图\r\n            给出\r\n","Returns whether the advertisement will indicate connectable.":"返回广告是否表示可连接。\r\n","android.bluetooth.BluetoothGattDescriptor.PERMISSION_WRITE_SIGNED_MITM":"android.bluetooth.bluetoothgattdescriptor.permission_write_signed_mitm\r\n","Creates an arc shape.":"创建弧形。\r\n","android.graphics.PointF.describeContents()":"android.graphics.pointf.describecontents（）\r\n","android.content.pm.PermissionInfo":"android.content.pm.permissioninfo\r\n","android.graphics.ColorMatrix.setConcat(android.graphics.ColorMatrix, android.graphics.ColorMatrix)":"android.graphics.ColorMatrix.setConcat(android.graphics.ColorMatrix, android.graphics.ColorMatrix)\r\n","Drawable that draws its bounds in the given paint, with optional\n            rounded corners.":"可绘制在给定涂料中绘制其边界的可选\r\n            圆角。\r\n","android.graphics.RenderNode.getPivotX()":"机器人。图形。RenderNode。getPivotX()\r\n","android.graphics.ComposeShader.ComposeShader(android.graphics.Shader, android.graphics.Shader, android.graphics.Xfermode)":"android.graphics.composeshader.composeshader（android.graphics.shader，android.graphics.shader，android.graphics.xfermode）\r\n","android.content.pm.ProviderInfo.multiprocess":"android.content.pm.providerinfo.multiprocess\r\n","android.content.AttributionSource.getAttributionTag()":"android.content.attributionsource.getAttributionTag（）\r\n"," that renders the contents of the input ":" 这使输入的内容\r\n","The default action.":"默认操作。\r\n","android.content.pm.ResolveInfo.getIconResource()":"android.content.pm.resolveinfo.geticonresource（）\r\n","android.graphics.drawable.Drawable.isStateful()":"android.graphics.drawable.drawable.isstateful（）\r\n","Return the intent set with ":"返回意图设置\r\n","android.bluetooth.BluetoothHidDevice.getConnectedDevices()":"android.bluetooth.bluetoothhiddevice.getConnectedDevices（）\r\n","Returns a score indicating confidence that an instance of the given entity is present in the\n            first item of the clip data, if that item is plain text and text classification has been\n            performed.":"返回分数，表明在\r\n            剪辑数据的第一项，如果该项目是纯文本，并且文本分类已\r\n            执行。\r\n","android.graphics.Bitmap.copyPixelsToBuffer(java.nio.Buffer)":"android.graphics.bitmap.copypixelstobuffer（java.nio.buffer）\r\n","\n            objects.":"\r\n            对象。\r\n","android.content.Intent.ACTION_CAMERA_BUTTON":"android.content.intent.action_camera_button\r\n","android.graphics.RenderEffect.createColorFilterEffect(android.graphics.ColorFilter)":"android.graphics.rendereffect.createcolorfiltereffect（android.graphics.colorfilter）\r\n","android.graphics.Bitmap.getRowBytes()":"android.graphics.bitmap.getrowbytes（）\r\n","android.content.BroadcastReceiver.setResult(int, java.lang.String, android.os.Bundle)":"android.content.broadcastreceiver.setResult（int，java.lang.string，android.os.bundle）\r\n","android.graphics.ImageFormat.NV21":"android.graphics.imageformat.nv21\r\n","android.database.sqlite.SQLiteQueryBuilder.appendWhereStandalone(java.lang.CharSequence)":"android.database.sqlite.sqlitequerybuilder.appendwherestandalone（java.lang.charsequence）\r\n","Returns the typeface's weight value":"返回字体的重量值\r\n","Set if the activity should be considered as an alternative selection\n            action to the data the user has currently selected.":"设置如果应将活动视为替代选择\r\n            对用户当前选择的数据进行操作。\r\n","Disconnects from currently connected host.":"与当前连接的主机断开连接。\r\n","android.bluetooth.le.ScanFilter.getServiceSolicitationUuidMask()":"android.bluetooth.le.scanfilter.getServicesoliticationuuidMask（）\r\n","Change the base context for this ContextWrapper.":"更改此contextWrapper的基本上下文。\r\n","android.content.SyncStats.numParseExceptions":"android.content.syncstats.numparseExceptions\r\n","android.content.pm.ApplicationInfo.descriptionRes":"android.content.pm.applicationinfo.descriptionres\r\n"," when destroying a Loader.":" 销毁装载机时。\r\n","A Drawable can call this to schedule the next frame of its\n animation.":"可绘制的可以打电话给它安排其下一帧\r\n 动画。\r\n","Retrieve and hold the contents of the preferences file 'name', returning\n            a SharedPreferences through which you can retrieve and modify its\n            values.":"检索并保留首选项文件“名称”的内容，返回\r\n            您可以通过它检索并修改其的共享限额\r\n            值。\r\n","Create a new compose shader, given shaders A, B, and a combining PorterDuff mode.":"创建一个新的组合着色器，给定着着色器A，B和一个组合的Porterduff模式。\r\n","RectF holds four float coordinates for a rectangle.":"Rectf持有四个矩形的浮子坐标。\r\n","Broadcast the given intent to all interested BroadcastReceivers.":"向所有感兴趣的广播员广播给定的意图。\r\n","Constant corresponding to <code>location</code> in\n            the ":"常量对应于<code>location</code>in\r\n            该 \r\n","android.content.Intent.ACTION_VOICE_COMMAND":"android.content.intent.action_voice_command\r\n",", corresponding\n to the ":"， 相应的\r\n 到\r\n","android.graphics.Canvas.drawRect(android.graphics.Rect, android.graphics.Paint)":"android.graphics.canvas.drawRect（android.graphics.Rect，android.graphics.paint）\r\n","android.graphics.drawable.Icon":"android.graphics.drawable.icon\r\n","A Shader that draws a sweep gradient around a center point.":"着色器在中心点周围绘制扫描梯度。\r\n","#FLAG_MATCH_PINNED":"#flag_match_pinned\r\n","Broadcast Action:  The \"Media Button\" was pressed.":"广播动作：按下“媒体按钮”。\r\n","Standard CIE 1931 2° illuminant E, encoded in xyY.":"标准CIE 1931 2°照明E，用XYY编码。\r\n","android.content.Intent.setSelector(android.content.Intent)":"android.content.intent.setselector（android.content.intent）\r\n","android.graphics.Matrix.getValues(float[])":"android.graphics.matrix.getValues（float []）\r\n","android.content.ContentProvider.ContentProvider()":"android.content.contentprovider.contentprovider（）\r\n","Fill the entire canvas' bitmap (restricted to the current clip) with the specified color and\n            blendmode.":"用指定的颜色填充整个画布的位图（仅限于当前夹），\r\n            混合模式。\r\n","Sets the intrinsic (default) height for this shape.":"为此形状设置固有的（默认）高度。\r\n","android.bluetooth.BluetoothHidDevice.disconnect(android.bluetooth.BluetoothDevice)":"android.bluetooth.bluetoothhiddevice.disconnect（android.bluetooth.bluetoothdevice）\r\n","android.content.res.ColorStateList.isStateful()":"android.content.res.colorstatelist.isstateful（）\r\n","android.database.sqlite.SQLiteDatabase.CONFLICT_IGNORE":"android.database.sqlite.sqlitedatabase.conflict_ignore\r\n","android.database.Observable":"机器人。数据库。可观察的\r\n","Returns the alpha value of this drawable's color.":"返回该绘制的颜色的alpha值。\r\n","android.graphics.Color.red(long)":"android.graphics.color.red（long）\r\n","android.content.pm.PackageManager.CERT_INPUT_SHA256":"android.content.pm.packagemanager.cert_input_sha256\r\n","Toggles the INVERSE state of the filltype":"切换Filltype的反面状态\r\n","android.graphics.Paint.getTextScaleX()":"android.graphics.paint.getTextScalex（）\r\n","Returns the text on the clipboard.":"返回剪贴板上的文本。\r\n","If an error occurs while reading the file.":"如果在阅读文件时发生错误。\r\n","android.graphics.drawable.ShapeDrawable.setPadding(int, int, int, int)":"android.graphics.drawable.shapetrawable.setpadding（int，int，int，int）\r\n","android.content.Intent.ACTION_POWER_USAGE_SUMMARY":"android.content.intent.action_power_usage_summary\r\n","android.content.IntentFilter.IntentFilter()":"android.content.intentfilter.intentfilter（）\r\n","android.content.ContentResolver.QUERY_ARG_SQL_GROUP_BY":"android.content.contentresolver.query_arg_sql_group_by\r\n","Return a new Context object for the current Context but attribute to a different tag.":"返回当前上下文的新上下文对象，但将其归因于其他标签。\r\n","Remove a gesture from the library.":"从库中删除一个手势。\r\n","F:Android.Content.PM.PackageInstaller+SessionParams..ctor":"f：android.content.pm.packageinstaller+sessionparams..ctor\r\n","android.bluetooth.le.ScanFilter.CREATOR":"android.bluetooth.le.Scanfilter.Creator\r\n","android.drm.DrmRights":"Android.drm.drmrights\r\n","android.graphics.Paint.getShadowLayerColorLong()":"android.graphics.paint.getShadowlayerColorlong（）\r\n","A font weight value for the bold weight.":"大胆重量的字体重量值。\r\n","Returns the icon for this activity, without any badging for the profile.":"返回此活动的图标，而没有任何徽章的配置文件。\r\n","A gesture is a hand-drawn shape on a touch screen.":"手势是触摸屏上的手绘形状。\r\n","Interface used to allow the creator of a dialog to run some code when an\n item in a multi-choice dialog is clicked.":"用于允许对话框创建者的接口可以在\r\n 单击多项选择对话框中的项目。\r\n","android.view.LayoutInflater":"android.view.layoutinflater\r\n","Performs the query that created the cursor again, refreshing its \n contents.":"再次执行创建游标的查询，刷新其 \r\n 内容。\r\n","return the collation key":"返回整理键\r\n","Use a software allocation for the pixel memory.":"对像素内存使用软件分配。\r\n","android.graphics.Path.getFillType()":"android.graphics.path.getFillType（）\r\n","Returns the list of possible string values set earlier.":"返回较早设置的可能的字符串值的列表。\r\n"," for the layer with the given id.":" 对于具有给定ID的层。\r\n","Broadcast Action:  Indicates low battery condition on the device.":"广播动作：表示设备上的电池状况低。\r\n","Never enable GWP-ASan in this application or process.":"切勿在此应用程序或过程中启用GWP-ASAN。\r\n","android.content.IntentFilter.IntentFilter(java.lang.String, java.lang.String)":"android.content.intentfilter.intentfilter（java.lang.string，java.lang.string）\r\n","android.graphics.ParcelableColorSpace.getColorSpace()":"android.graphics.parcelablecolorspace.getColorspace（）\r\n","android.graphics.Paint.set(android.graphics.Paint)":"android.graphics.paint.set（android.graphics.paint）\r\n","Returns the flag indicating whether or not this receiver should\n            abort the current broadcast.":"返回标志，指示该接收器是否应\r\n            中止当前广播。\r\n","android.graphics.ImageDecoder.createSource(android.content.ContentResolver, android.net.Uri)":"android.graphics.imagedecoder.createsource（android.content.contentresolver，android.net.uri）\r\n","Applies this operation using the given provider.":"使用给定的提供商应用此操作。\r\n","Specifies a content URI to watch for changes.":"指定要监视更改的内容URI。\r\n","android.graphics.RenderNode.getAmbientShadowColor()":"android.graphics.rendernode.getAmbientsHadowColor（）\r\n","android.content.Intent.putExtras(android.os.Bundle)":"android.content.intent.putextras（android.os.bundle）\r\n"," if\n            the shape is filled with a gradient or has no fill color.":" 如果\r\n            形状用渐变填充或没有填充颜色。\r\n","Indicates whether pixels stored in this bitmaps are stored pre-multiplied.":"指示存储在此位图中的像素是否存储在杂化前。\r\n","Create a new BluetoothGattDescriptor.":"创建一个新的蓝牙GattDescriptor。\r\n","android.hardware.BatteryState.STATUS_NOT_CHARGING":"android.hardware.batterystate.status_not_charging\r\n"," for text classification services.":" 用于文本分类服务。\r\n","android.graphics.Paint.START_HYPHEN_EDIT_INSERT_ZWJ":"android.graphics.paint.start_hyphen_edit_insert_zwj\r\n","Activity Action: Send a message to someone specified by the data.":"活动操作：向数据指定的人发送消息。\r\n","android.content.RestrictionEntry.RestrictionEntry(int, java.lang.String)":"android.content.grestrictionernry.grestrictionertry（int，java.lang.string）\r\n","android.content.ContentProviderOperation.isExceptionAllowed()":"android.content.contentProvideroperation.isexceptionallowed（）\r\n","#openTypedAssetFile":"#opentypedAssetFile\r\n","android.graphics.ColorMatrix.setRotate(int, float)":"android.graphics.ColorMatrix.setRotate(int, float)\r\n","Draws the specified bitmap as an N-patch (most often, a 9-patch.":"将指定的位图绘制为n点（通常是9点绘制）。\r\n","android.content.pm.PackageStats.externalCodeSize":"android.content.pm.packagestats.externalcodesize\r\n",": The SIP API is enabled on the device.":"：在设备上启用了SIP API。\r\n","android.content.RestrictionsManager.getApplicationRestrictions()":"android.content.strictionsmanager.getApplicationRestrictions（）\r\n","android.graphics.Path.Path(android.graphics.Path)":"android.graphics.path.path（android.graphics.path）\r\n","android.graphics.Paint.END_HYPHEN_EDIT_REPLACE_WITH_HYPHEN":"android.graphics.paint.end_hyphen_edit_replace_with_hyphen\r\n","android.content.res.ColorStateList.getDefaultColor()":"android.content.res.colorstatelist.getDefaultColor（）\r\n","Specify radius for the corners of the rectangle.":"为矩形的角度指定半径。\r\n","android.content.Intent.ACTION_MEDIA_EJECT":"android.content.intent.action_media_eject\r\n","android.bluetooth.le.ScanSettings.getPhy()":"android.bluetooth.le..scansettings.getphy（）\r\n","Returns the Y-position of the center of this gradient as a fraction of\n            the height.":"返回该梯度中心的Y位置，作为一小部分\r\n            高度。\r\n","Query the given URL, returning a ":"查询给定的URL，返回\r\n","android.content.Intent.ACTION_VIEW_PERMISSION_USAGE_FOR_PERIOD":"android.content.intent.action_view_permission_usage_for_period\r\n"," tag specifying\n            the XML resource ID containing an application's media capabilities XML file\n            \n            For example:\n            &lt;application&gt;\n              &lt;property android:name=\"android.":" 标记指定\r\n            包含应用程序的媒体功能XML文件的XML资源ID\r\n            \r\n            例如:\r\n            &lt;应用&gt;\r\n              &lt;属性android:名称=\"android.\r\n","android.graphics.PointF":"android.graphics.pointf\r\n","android.graphics.PorterDuffColorFilter":"android.graphics.porterduffColorFilter\r\n","android.content.Intent.makeMainActivity(android.content.ComponentName)":"android.content.intent.makemainactivity（android.content.componentname）\r\n","android.database.DatabaseUtils.queryNumEntries(android.database.sqlite.SQLiteDatabase, java.lang.String)":"android.database.databaseutils.querynumentries（android.database.sqlite.sqlitedatabase，java.lang.string）\r\n","android.content.Intent.ACTION_BATTERY_LOW":"android.content.intent.action_battery_low\r\n","Extra used to communicate a set of acceptable MIME types.":"额外用于传达一组可接受的MIME类型。\r\n"," to manage telecom-related features\n            of the device.":" 管理与电视相关的功能\r\n            设备。\r\n","Parcelable interface":"包裹界面\r\n","android.content.ClipData.getDescription()":"android.content.clipdata.getDescription（）\r\n","An umbrella container for several serializable graphics representations, including Bitmaps,\n            compressed bitmap images (e.":"一个用于几个可序列化图形表示的雨伞容器，包括位图，\r\n            压缩位图图像（e。\r\n","Returns the type of gradient used by this drawable, one of\n            ":"返回此可绘制的梯度类型\r\n            \r\n","GestureLibrary maintains gesture examples and makes predictions on a new\n            gesture":"姿态保留手势示例，并在新的\r\n            手势\r\n","android.drm.DrmErrorEvent.TYPE_REMOVE_ALL_RIGHTS_FAILED":"android.drm.drmerrorevent.type_remove_all_rights_failed\r\n","android.database.sqlite.SQLiteDatabase.insertWithOnConflict(java.lang.String, java.lang.String, android.content.ContentValues, int)":"android.database.sqlite.sqlitedatabase.insertwithonconflict（java.lang.string，java.lang.string，android.content.content.contentvalues，int）\r\n","Processes the given DRM information based on the information type.":"根据信息类型处理给定的DRM信息。\r\n","android.content.pm.PackageManager.FEATURE_SECURE_LOCK_SCREEN":"android.content.pm.packagemanager.feature_secure_lock_screen\r\n","android.graphics.Region.set(int, int, int, int)":"android.graphics.gregion.set（int，int，int，int）\r\n","android.content.pm.ComponentInfo.directBootAware":"android.content.pm.com.ponentinfo.directbootaware\r\n","Callback to inform change in registration state of the health\n            application.":"回调以告知卫生注册状态的变更\r\n            应用。\r\n"," associated with this data, describing\n            what it contains.":" 与此数据相关联，描述\r\n            它包含的内容。\r\n","Gets the current transform inverted.":"获取当前变换反转。\r\n","android.content.IntentFilter.schemeSpecificPartsIterator()":"android.content.intentfilter.schemespecificpartsiterator（）\r\n","Region":"地区\r\n","android.hardware.SensorManager":"android.hardware.sensormanager\r\n","android.content.ContentResolver.acquireContentProviderClient(android.net.Uri)":"android.content.contentresolver.acquirecontentproviderclient（android.net.uri）\r\n","android.bluetooth.BluetoothGattService.getInstanceId()":"android.bluetooth.bluetoothgattservice.getinstanceid（）\r\n","android.content.ContentResolver.isSyncPending(android.accounts.Account, java.lang.String)":"android.content.contentresolver.issyncpending（android.accounts.accounts.account，java.lang.string）\r\n","android.content.pm.ApplicationInfo.sharedLibraryFiles":"android.content.pm.applicationinfo.sharedlibraryfiles\r\n","if the database cannot be opened for writing":"如果数据库无法打开\r\n","The text is drawn to the left of the x,y origin\n":"文本被绘制在x，y原点的左侧\r\n\r\n","android.drm.DrmManagerClient.setOnErrorListener(android.drm.OnErrorListener)":"android.drm.drmmanagerclient.setonerrorlistener（android.drm.onerrorlistener）\r\n","Retrieve any explicit MIME type included in the intent.":"检索意图中包含的任何显式MIME类型。\r\n","android.R.styleable#AndroidManifest_versionCode versionCode":"Android.r.Stylable＃AndroidManifest_versionCode版本码\r\n","Set/update data being Advertised.":"设置/更新数据正在宣传。\r\n","This is used for ":"这用于\r\n","The digital rights are invalid.":"数字权利无效。\r\n","android.database.sqlite.SQLiteOpenHelper.onCreate(android.database.sqlite.SQLiteDatabase)":"android.database.sqlite.sqliteopenhelper.oncreate（android.database.sqlite.sqlitedatabase））\r\n","Default task affinity of all activities in this application.":"本应用程序中所有活动的默认任务亲和力。\r\n","The array index of maximum preview fps for use with ":"最大预览fps的数组索引用于\r\n","A Drawable with a color gradient for buttons, backgrounds, etc.":"具有按钮，背景等颜色渐变的Drawable。\r\n","android.drm.DrmEvent.DRM_INFO_OBJECT":"android.drm.drmevent.drm_info_object\r\n","android.graphics.drawable.LayerDrawable.getLayerHeight(int)":"android.graphics.drawable.layerdrawable.getlayerheight（int）\r\n","Return the current configuration that is in effect for this resource \n            object.":"返回对此资源有效的当前配置 \r\n            对象。\r\n","Decode an immutable bitmap from the specified byte array.":"从指定的字节阵列解码不变的位图。\r\n","The accessibility shortcut is a global gesture for users with disabilities to trigger an\n            important for them accessibility feature to help developers determine whether they want to\n            make their activity a shortcut target.":"可访问性快捷方式是一个全球性手势，可用于残疾用户触发\r\n            对他们的可访问性功能很重要，以帮助开发人员确定他们是否想要\r\n            使他们的活动成为快捷目标。\r\n","The part of a match constant that applies a quality adjustment to the\n basic category of match. ":"匹配常数的一部分将质量调整适用于\r\n 匹配的基本类别。\r\n","Request to create a pinned shortcut.":"请求创建固定快捷方式。\r\n","Icon#createWithResource":"图标＃createWithResource\r\n","android.database.DatabaseUtils.dumpCursor(android.database.Cursor, java.io.PrintStream)":"android.database.databaseutils.dumpcursor（android.database.cursor，java.io.printstream）\r\n","android.graphics.Paint.isUnderlineText()":"android.graphics.paint.isunderlineText（）\r\n","Activity Action: Main entry point for factory tests.":"活动动作：出厂测试的主要切入点。\r\n","Construct an empty raster canvas.":"构建一个空的栅格画布。\r\n","android.database.sqlite.SQLiteCursorDriver.cursorRequeried(android.database.Cursor)":"android.database.sqlite.sqlitecursordriver.cursorrequeried（android.database.cursor）\r\n","android.content.pm.PackageManager.queryBroadcastReceivers(android.content.Intent, int)":"android.content.pm.PackageManager.queryBroadcastReceivers(android.content.Intent,int)\r\n","android.content.pm.ShortcutManager.isRateLimitingActive()":"android.content.pm.shortcutmanager.israteLimitingActive（）\r\n","draw the gradient from the bottom-left to the top-right ":"将梯度从左下到右上角\r\n","android.content.SyncStats":"android.content.Syncstats\r\n","thrown if either the insert fails or\n if the number of rows affected didn't match the expected count\n":"如果插入物失败或\r\n 如果受影响的行数与预期计数不符\r\n\r\n","android.content.Intent.getCharSequenceExtra(java.lang.String)":"android.content.intent.getCharsequenceExtra（java.lang.string）\r\n","Returns the image format for pictures.":"返回图片的图像格式。\r\n","Move the cursor to an absolute position.":"将光标移动到绝对位置。\r\n","Model#getComponentCount()":"型号＃getComponentCount（）\r\n","android.gesture.GestureStore.getGestureEntries()":"android.gesture.gesturestore.getgestureentries（）\r\n","Called when an asynchronous query is completed.":"当完成异步查询时致电。\r\n","Create drawable from raw nine-patch data, setting initial target density\n            based on the display metrics of the resources.":"创建可从原始九点数据绘制的，设置初始目标密度\r\n            基于资源的显示指标。\r\n","Return the Uri this permission pertains to.":"退还此权限的URI。\r\n","SELECT":"选择\r\n","Flash will be fired in red-eye reduction mode.":"闪光灯将以红眼的减少模式发射。\r\n","Information you can retrieve about a particular piece of test\n            instrumentation.":"您可以检索有关特定测试的信息\r\n            仪器。\r\n","android.content.Loader.deliverCancellation()":"android.content.loader.deliverCancellation（）\r\n",": set to true if this application has code\n associated with it. ":"：如果此应用程序有代码，则设置为true\r\n 与之相关。\r\n",": true if the application is currently\n installed for the calling user.":"：true如果应用程序当前是\r\n 为调用用户安装。\r\n","android.bluetooth.le.ScanResult.PERIODIC_INTERVAL_NOT_PRESENT":"android.bluetooth.le.scanresult.periodic_interval_not_present\r\n","When a UNIQUE constraint violation occurs, the pre-existing rows that\n            are causing the constraint violation are removed prior to inserting\n            or updating the current row.":"当发生独特的约束违规时，\r\n            在插入之前删除了违规的约束\r\n            或更新当前行。\r\n","\n            intents to signal that the application was removed with the user-initiated action.":"\r\n            意图表示使用用户启动的操作删除了应用程序。\r\n","android.R.attr#cantSaveState":"android.r.attr＃cantsavestate\r\n","This method returns an iterator object that can be used to iterate over\n all keys of the metadata.":"此方法返回一个可以用来迭代的迭代对象\r\n 元数据的所有钥匙。\r\n","android.graphics.RenderEffect.createColorFilterEffect(android.graphics.ColorFilter, android.graphics.RenderEffect)":"android.graphics.rendereffect.createcolorfiltereffect（android.graphics.colorfilter，android.graphics.rendereffect）\r\n","Broadcast intent sent to the Restrictions Provider to handle a permission request from\n            an app.":"向限制提供商发送的广播意愿，以处理从\r\n            一个应用程序。\r\n","android.graphics.Paint.measureText(java.lang.String, int, int)":"android.graphics.paint.measuretext（java.lang.string，int，int）\r\n","Converts the input data (content) that is part of a rights-protected file.":"转换是受版权保护文件的一部分的输入数据（内容）。\r\n","The development codename (ex.":"开发代号（例如\r\n","Reads a String out of a field in a Cursor and writes it to a Map.":"从光标中读取字符串，然后将其写入地图。\r\n","android.content.res.ColorStateList.isOpaque()":"android.content.res.colorstatelist.isopaque（）\r\n","Returns the translucency level of this display list.":"返回此显示列表的半透明级别。\r\n","android.content.AsyncQueryHandler":"android.content.asyncqueryhandler\r\n","android.graphics.drawable.GradientDrawable.setCornerRadius(float)":"android.graphics.drawable.gradientdrawable.setcornerradius（float）\r\n","Gets the projection map for the query, as last configured by\n            ":"获取查询的投影映射，就像最后配置\r\n            \r\n","BluetoothLeAdvertiser#startAdvertisingSet":"BluetoothLeadvertiser＃startAdvertisingset\r\n","Focus is set at infinity.":"焦点设置为无穷大。\r\n","android.graphics.Color.luminance(long)":"android.graphics.color.luminance（长）\r\n","android.content.pm.PackageInfo.services":"android.content.pm.packageinfo.Services\r\n","android.graphics.drawable.RippleDrawable.setColor(android.content.res.ColorStateList)":"android.graphics.drawable.rippledrawable.setColor（android.content.res.colorStateList）\r\n","#SCREENLAYOUT_SIZE_XLARGE":"#screenlayout_size_xlarge\r\n","Create an Icon pointing to a compressed bitmap stored in a byte array.":"创建一个指向字节数组中存储的压缩位图的图标。\r\n","Broadcast Action:  This is a <em>sticky broadcast</em> containing the\n            charging state, level, and other information about the battery.":"广播动作：这是一个<em>粘性广播</em>包含\r\n            充电状态，电平和其他有关电池的信息。\r\n","Utility method to run the pre-compiled query and return the blob value in the\n            first column of the first row.":"实用方法运行预编译查询并返回BLOB值\r\n            第一行的第一列。\r\n","android.companion.CompanionDeviceManager#associate associating":"android.companion.com paniondevicemanager＃socsociate\r\n","Whether or not this package is allowed to open links.":"是否允许此软件包打开链接。\r\n","android.bluetooth.BluetoothHidDevice":"android.bluetooth.bluetoothhiddevice\r\n","Return the extras for this operation after resolving any requested\n            back-references using the given results.":"解决任何请求后，返回此操作的附加功能\r\n            使用给定结果的反向引用。\r\n","A listener for transaction events.":"交易事件的听众。\r\n",": The device has biometric hardware to perform iris authentication.":"：该设备具有生物识别硬件以执行虹膜身份验证。\r\n","Return a mask of the configuration parameters for which the values in\n            this typed array may change.":"返回配置参数的掩码，其值\r\n            此键入的数组可能会更改。\r\n","Information about how an app was installed.":"有关如何安装应用程序的信息。\r\n","\n          The name of the class that implements the receiver.\n        ":"\r\n          实现接收器的类的名称。\r\n        \r\n","F:Android.Bluetooth.LE.AdvertiseCallback.OnStartFailure":"F：android.bluetooth.le.Advertisecallback.onstartfailure\r\n","java.lang.IllegalArgumentException":"java.lang.IllegalArgumentException\r\n","android.content.Context.sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)":"android.content.context.SendSendStickyOrderDbroadcast（android.content.intent，android.content.broadcastreceiver，android.os.os.handler，int，int，java.lang.lang.string，android.os.os.bundle）\r\n","0...getNumberOfLayers()-1":"0 ... getnumberoflayers（）-1\r\n","Used to control initialization order of single-process providers\n             running in the same process.":"用于控制单程提供商的初始化顺序\r\n             在同一过程中运行。\r\n","android.content.pm.PackageManager.FEATURE_EMBEDDED":"android.content.pm.packagemanager.feature_embedded\r\n","Intent used to broadcast the change in the Audio Connection state of the\n            HFP profile.":"目的用于广播音频连接状态的更改\r\n            HFP配置文件。\r\n","Force an asynchronous load.":"强迫异步负载。\r\n","android.database.sqlite.SQLiteProgram.bindAllArgsAsStrings(java.lang.String[])":"android.database.sqlite.sqliteprogram.bindallargsassstrings（java.lang.string []）\r\n","android.content.pm.LauncherActivityInfo.getUser()":"android.content.pm.launcheractivityinfo.getuser（）\r\n","If this extra is set to true then the request will not be retried if it fails.":"如果此额外设置为true，则如果请求失败，则不会重试。\r\n","PackageManager#MAXIMUM_VERIFICATION_TIMEOUT":"PackageManager＃maxture_verification_timeout\r\n","android.graphics.drawable.Drawable.isAutoMirrored()":"android.graphics.drawable.drawable.isautomirrored（）\r\n","Adds a whitelisted restricted permission for an app.":"添加了对应用程序的白名单限制许可。\r\n","android.content.IntentSender.readIntentSenderOrNullFromParcel(android.os.Parcel)":"android.content.intents.ReadIntentesendendEnderNullFromparcel（android.os.parcel）\r\n"," interface with a new callback for\n            finer-grained memory management.":" 与新回调的接口\r\n            细粒度的内存管理。\r\n","The coordinates of the center of the left eye.":"左眼中央的坐标。\r\n","android.drm.DrmInfo.getInfoType()":"android.drm.drminfo.getInfotype（）\r\n","An entity class that is passed to the\n            ":"传递给的实体类\r\n            \r\n","#addPreferredActivity":"#addpreferredartivity\r\n"," are called.":" 被称为。\r\n","android.app.BroadcastOptions":"Android.App.BroadCastoptions\r\n","android.content.ContentResolver.registerContentObserver(android.net.Uri, boolean, android.database.ContentObserver)":"android.content.contentresolver.registercontentobserver（android.net.uri，boolean，android.database.contentobserver）\r\n","android.graphics.Paint.equalsForTextMeasurement(android.graphics.Paint)":"android.graphics.paint.equalsfortextmeasurement（android.graphics.paint）\r\n","android.content.ClipDescription.CLASSIFICATION_COMPLETE":"android.content.clipdescription.classification_complete\r\n","ColorLong":"颜色\r\n","Updates the locally stored value of this descriptor.":"更新此描述符的本地存储值。\r\n","android.content.Intent.ACTION_BOOT_COMPLETED":"android.content.intent.action_boot_completed\r\n","Get the display this context is associated with.":"获取显示此上下文与之关联的。\r\n","android.content.Intent.getSelector()":"android.content.intent.getSelector（）\r\n","Registers a class that will receive callbacks when a load is complete.":"注册一个课程，该课程将在负载完成后接收回调。\r\n",": the requested permission\n is required for the application to run; the user can not optionally\n disable it. ":"：请求许可\r\n 运行申请是必需的；用户无法选择\r\n 禁用它。\r\n","android.graphics.fonts.FontStyle.FONT_WEIGHT_THIN":"android.graphics.fonts.fontstyle.font_weight_thin\r\n","android.graphics.Color.valueOf(float, float, float)":"android.graphics.color.valueof（浮子，浮点，浮点）\r\n","android.content.pm.ComponentInfo.getIconResource()":"android.content.pm.com.ponentinfo.geticonresource（）\r\n","Returns a drawable object associated with a particular resource ID and\n            styled for the current theme.":"返回与特定资源ID相关联的可绘制对象和\r\n            为当前主题设计。\r\n","android.content.ContentResolver.openTypedAssetFileDescriptor(android.net.Uri, java.lang.String, android.os.Bundle, android.os.CancellationSignal)":"android.content.contentresolver.opentypedAssetFiledScriptor（android.net.uri，java.lang.string，android.os.os.bundle，android.os.os.cancellationsignal）\r\n","android.app.blob.BlobStoreManager":"android.app.blob.blobstoremanager\r\n","android.bluetooth.BluetoothHealth.CHANNEL_TYPE_RELIABLE":"android.bluetooth.bluetoothhealth.channel_type_reliable\r\n","android.hardware.Camera.startPreview()":"android.hardware.camera.startpreview（）\r\n","Returns true if the path specifies a rectangle.":"如果路径指定矩形，则返回true。\r\n","An entity class that wraps the license information retrieved from the online DRM server.":"一个将从在线DRM服务器中检索的许可证信息包装的实体类。\r\n","Resizes the dimensions of this shape.":"调整这种形状的尺寸。\r\n","android.bluetooth.BluetoothGattCharacteristic.setValue(int, int, int)":"android.bluetooth.bluetoothgattcharacteristic.setValue（int，int，int）\r\n","android.graphics.drawable.Icon.TYPE_DATA":"android.graphics.drawable.icon.type_data\r\n","Android.Content.Context.CONTEXT_INCLUDE_CODE":"android.content.context.context_include_code\r\n","Is the given action included in the filter?  Note that if the filter\n            does not include any actions, false will <em>always</em> be returned.":"过滤器中是否包含给定的动作？请注意，如果过滤器\r\n            不包括任何动作，false Will <em>始终返回。\r\n","android.content.ContentProviderClient.insert(android.net.Uri, android.content.ContentValues)":"android.content.contentproviderclient.insert（android.net.uri，android.content.contentvalues）\r\n","\n            (orientation, locale, etc) has changed.":"\r\n            （方向，语言环境等）已更改。\r\n","#startLoading()":"#startloading（）\r\n","android.bluetooth.BluetoothLeAudio.ACTION_LE_AUDIO_CONNECTION_STATE_CHANGED":"android.bluetooth.bluetoothleaudio.action_le_audio_connection_state_changed\r\n","Return the font's interline spacing, given the Paint's settings for\n            typeface, textSize, etc.":"鉴于油漆的设置，返回字体的交叉线间距\r\n            字体，文字尺寸等。\r\n","Intended to be used as a tab inside of a containing TabActivity.":"打算用作包含列表的内部的选项卡。\r\n","android.graphics.Paint.setStrokeMiter(float)":"android.graphics.paint.setstrokemiter（float）\r\n","android.graphics.Canvas.drawPosText(java.lang.String, float[], android.graphics.Paint)":"android.graphics.canvas.drawpostext（java.lang.string，float []，android.graphics.paint）\r\n","\n            with null Options.":"\r\n            带有空选项。\r\n","Standard CIE 1931 2° illuminant A, encoded in xyY.":"标准CIE 1931 2°照明a，用XYY编码。\r\n","Concatenates two SQL WHERE clauses, handling empty or null values.":"连接两个SQL，其中从子句处理空或空值。\r\n","android.bluetooth.le.ScanResult.getTxPower()":"android.bluetooth.le.scanresult.gettxpower（）\r\n","#PADDING_MODE_NEST":"#PADDING_MODE_NEST\r\n","android.graphics.Paint.setColorFilter(android.graphics.ColorFilter)":"android.graphics.paint.setcolorfilter（android.graphics.colorfilter）\r\n","android.graphics.drawable.shapes.ArcShape":"android.graphics.drawable.shapes.arcshape\r\n","android.content.LocusId.getId()":"android.content.locusid.getID（）\r\n","android.database.sqlite.SQLiteClosable":"android.database.sqlite.sqliteclosable\r\n","Match this filter against an Intent's data (type, scheme and path).":"将此过滤器与意图数据（类型，方案和路径）匹配。\r\n","Clear any lines and curves from the path, making it empty.":"从路径上清除任何线条和曲线，使其空白。\r\n","#setStrictColumns(boolean)":"#SetStrictColumns（布尔值）\r\n","android.content.res.AssetManager":"机器人。内容。res.资产管理器\r\n","android.graphics.Paint.getTextSkewX()":"android.graphics.paint.getTextskewx（）\r\n","#yieldIfContendedSafely":"#yieldifcontendendedsafely\r\n","android.content.IntentFilter.getDataType(int)":"android.content.intentfilter.getDatatype（int）\r\n","Returns true if auto-exposure locking is supported.":"如果支持自动曝光锁定，则返回true。\r\n","android.content.pm.PackageManager.FEATURE_VR_HEADTRACKING":"android.content.pm.packagemanager.feature_vr_headtracking\r\n","android.graphics.Canvas.drawPoints(float[], int, int, android.graphics.Paint)":"android.graphics.canvas.drawpoints（float []，int，int，android.graphics.paint）\r\n","\n that are listed in ":"\r\n 列出\r\n","android.content.pm.Attribution.getTag()":"android.content.pm.attribution.gettag（）\r\n","android.content.Intent.putExtra(java.lang.String, char)":"android.content.intent.putextra（java.lang.string，char）\r\n",": This is a device dedicated to showing UI\n            on a vehicle headunit.":"：这是一种用于显示UI的设备\r\n            在车辆前进。\r\n","A gesture stroke started on a touch down and ended on a touch up.":"手势中风开始降低，并以修饰结束。\r\n","DISTINCT":"清楚的\r\n","android.content.Intent.ACTION_ANSWER":"android.content.intent.action_answer\r\n","android.graphics.Paint.END_HYPHEN_EDIT_INSERT_UCAS_HYPHEN":"android.graphics.paint.end_hyphen_edit_insert_ucas_hyphen\r\n","android.content.pm.CrossProfileApps.startActivity(android.content.Intent, android.os.UserHandle, android.app.Activity)":"android.content.pm.crossprofileapps.startactivity（android.content.intent，android.os.userhandle，android.app.Activity）\r\n","Return any resource identifier that has been given for the label icon.":"返回为标签图标提供的任何资源标识符。\r\n","android.content.Intent#ACTION_PACKAGES_SUSPENDED":"android.content.intent＃action_packages_suspended\r\n","Disable pinned shortcuts.":"禁用固定快捷方式。\r\n",": The device includes a heart rate monitor.":"：该设备包括心率监测器。\r\n","android.graphics.Paint.getLetterSpacing()":"android.graphics.paint.getletterspacing（）\r\n","android.graphics.DashPathEffect.DashPathEffect(float[], float)":"android.graphics.dashpatheffect.dashpatheffect（float []，float）\r\n","android.graphics.Matrix.setTranslate(float, float)":"android.graphics.matrix.settranslate（float，float）\r\n","#takeContentChanged":"#takecontentchanged\r\n","Indicates whether or not this Picture contains recorded commands that only work when\n            drawn to a hardware-accelerated canvas.":"指示此图片是否包含仅在\r\n            吸引到硬件加速的画布。\r\n","A filter for Wifi devices":"WiFi设备的过滤器\r\n","android.bluetooth.BluetoothHeadset.getDevicesMatchingConnectionStates(int[])":"android.bluetooth.bluetoothhathedset.getDevicesMatchingConnectionStates（int []）\r\n","Gets the uri used to create this icon.":"获取用于创建此图标的URI。\r\n","Returns the type for this restriction. -or- Sets the type for this restriction.":"返回此限制的类型。 - 或设置此限制的类型。\r\n","android.drm.DrmInfoStatus.DrmInfoStatus(int, int, android.drm.ProcessedData, java.lang.String)":"android.drm.drminfostatus.drminfostatus（int，int，android.drm.processeddata，java.lang.string）\r\n","android.database.DatabaseUtils.cursorStringToContentValues(android.database.Cursor, java.lang.String, android.content.ContentValues)":"android.database.databaseutils.cursorstringtocontentvalues（android.database.cursor，java.lang.string，android.content.contentvalues）\r\n","#UI_MODE_TYPE_MASK":"#UI_MODE_TYPE_MASK\r\n","Set the locale list to a list of just one locale.":"将语言环境列表设置为仅一个语言环境的列表。\r\n","ShortcutManager#disableShortcuts(List)":"折码器＃disableShortCuts（列表）\r\n","android.content.pm.PackageManager.FEATURE_CAMERA_LEVEL_FULL":"android.content.pm.packagemanager.feature_camera_level_full\r\n","Convenience for ":"方便 \r\n","android.content.pm.PackageManager.FEATURE_CAMERA_CAPABILITY_MANUAL_POST_PROCESSING":"android.content.pm.packagemanager.feature_camera_capability_manual_post_processing\r\n","android.content.ContentProviderClient.openTypedAssetFileDescriptor(android.net.Uri, java.lang.String, android.os.Bundle)":"android.content.contentproviderclient.opentypedAssetFiledScriptor（android.net.uri，java.lang.string，android.os.bundle）\r\n","android.graphics.pdf.PdfRenderer.getPageCount()":"android.graphics.pdf.pdfrenderer.getPageCount（）\r\n","android.content.Context.INPUT_SERVICE":"android.content.context.input_service\r\n","clockwise ":"顺时针\r\n","android.content.pm.ApplicationInfo.storageUuid":"android.content.pm.applicationinfo.storageuuid\r\n","android.content.pm.PackageStats.cacheSize":"android.content.pm.packagestats.cachesize\r\n","android.content.ClipDescription.MIMETYPE_TEXT_INTENT":"android.content.clipdescription.mimetype_text_intent\r\n","Test if a sensor supports a specified direct channel type.":"测试传感器是否支持指定的直接通道类型。\r\n","android.graphics.Path.computeBounds(android.graphics.RectF, boolean)":"android.graphics.path.computebounds（android.graphics.Rectf，boolean）\r\n","Create drawable from a bitmap, not dealing with density.":"创建可从位图绘制的，而不是处理密度。\r\n","android.content.UriPermission.getUri()":"android.content.uripermession.geturi（）\r\n","android.graphics.SweepGradient.SweepGradient(float, float, int[], float[])":"android.graphics.sweepgradient.sweepgradient（float，float，int []，float []）\r\n","android.content.Intent.EXTRA_TEMPLATE":"android.content.intent.extra_template\r\n","android.graphics.RenderNode.getTranslationX()":"android.graphics.rendernode.getTranslationx（）\r\n","Deprecated.":"弃用。\r\n","Feature to delete an individual document.":"删除单个文档的功能。\r\n","is.mark(1024)":"IS.Mark（1024）\r\n","android.bluetooth.BluetoothHeadset.startVoiceRecognition(android.bluetooth.BluetoothDevice)":"android.bluetooth.bluetoothheadsets.startvoicercognition（android.bluetooth.bluetoothdevice）\r\n","Throws NotFoundException if the given ID does\n             not exist.\n":"如果给定的ID确实有\r\n             不存在。\r\n\r\n","Intersect the current clip with the specified region.":"将电流夹与指定区域相交。\r\n","Instantiate a new ComponentName from the data in a Parcel that was\n            previously written with ":"从包裹中的数据实例化一个新的componentName\r\n            以前用\r\n","android.graphics.Canvas.saveLayer(float, float, float, float, android.graphics.Paint, int)":"机器人。图形。帆布。saveLayer（float，float，float，float，android。图形。油漆，int）\r\n","android.bluetooth.le.BluetoothLeScanner.EXTRA_ERROR_CODE":"android.bluetooth.le.bluetoothlescanner.extra_error_code\r\n","android.bluetooth.BluetoothHearingAid.getConnectedDevices()":"android.bluetooth.bluetoothhearingaid.getConnectedDevices（）\r\n","Activity action: Launch UI to manage unused apps (hibernated apps).":"活动操作：启动UI管理未使用的应用程序（Hibernated Apps）。\r\n","android.bluetooth.le.AdvertiseSettings":"android.bluetooth.le.aptervertisestings\r\n","android.content.Intent.putExtra(java.lang.String, float)":"android.content.intent.putextra（java.lang.string，float）\r\n"," for drawing animated images (like GIF).":" 用于绘制动画图像（例如GIF）。\r\n","Clear the shadow layer.":"清除阴影层。\r\n","android.graphics.ComposeShader.ComposeShader(android.graphics.Shader, android.graphics.Shader, android.graphics.BlendMode)":"android.graphics.composeshader.composeshader（android.graphics.shader，android.graphics.shader，android.graphics.blendmode）\r\n","Gets the value of the field at the specified row and column index as a <code>long</code>.":"以<code> long </code>的形式获取指定行和列索引的字段值。\r\n","android.os.DropBoxManager":"android.os.dropboxmanager\r\n","android.companion.CompanionDeviceManager.requestNotificationAccess(android.content.ComponentName)":"android.companion.companiondevicemanager.requestnotificationAccess（android.content.componentname）\r\n","android.graphics.Canvas.getHeight()":"android.graphics.canvas.getheight（）\r\n"}