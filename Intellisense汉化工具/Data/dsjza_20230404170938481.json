{"Create an IntArrayEvaluator that reuses ":"创建一个重用的 IntArrayEvaluator\r\n","android.app.appsearch.AppSearchSchema.StringPropertyConfig.TOKENIZER_TYPE_PLAIN":"android.app.appsearch.AppSearchSchema.StringPropertyConfig.TOKENIZER_TYPE_PLAIN\r\n","singleInstancePerTask":"单个实例每个任务\r\n","Enables Z support which defaults to disabled.":"启用默认禁用的 Z 支持。\r\n","android.provider.ContactsContract.ContactNameColumns":"android.provider.ContactsContract.ContactNameColumns\r\n","exposure compensation step. Applications can get EV by\n                    multiplying the exposure compensation index and step. Ex: if\n                    exposure compensation index is -6 and step is 0.333333333, EV\n                    is -2.":"曝光补偿步骤。应用程序可以通过\r\n                    乘以曝光补偿指数和步长。例如：如果\r\n                    曝光补偿指数为-6，步长为0.333333333，EV\r\n                    是-2。\r\n","android.hardware.Camera.Face.Camera$Face()":"android.hardware.Camera.Face.Camera$Face()\r\n","android.app.assist.AssistStructure.WindowNode":"android.app.assist.AssistStructure.WindowNode\r\n","This class represents a PDF document page.":"此类表示 PDF 文档页面。\r\n","The base OS build the product is based on.":"构建产品所基于的基础操作系统。\r\n","Get the list of inputs to be collected from the user that ONLY accept data when this\n            action is sent.":"获取要从用户那里收集的输入列表，这些输入仅在此时接受数据\r\n            动作被发送。\r\n","android.app.admin.DevicePolicyManager.InstallSystemUpdateCallback.UPDATE_ERROR_FILE_NOT_FOUND":"android.app.admin.DevicePolicyManager.InstallSystemUpdateCallback.UPDATE_ERROR_FILE_NOT_FOUND\r\n","Based on saveFlags, can save the current matrix and clip onto a private\n            stack.":"基于saveFlags，可以将当前矩阵和clip保存到一个private\r\n            堆。\r\n","android.media.Session2Command.Result.getResultData()":"android.media.Session2Command.Result.getResultData()\r\n","android.app.Notification.CarExtender.Notification$CarExtender(android.app.Notification)":"android.app.Notification.CarExtender.Notification$CarExtender(android.app.Notification)\r\n","This class represents a connection between the output port of one device\n            and the input port of another.":"此类表示一个设备的输出端口之间的连接\r\n            和另一个的输入端口。\r\n","android.provider.Settings.Panel.ACTION_NFC":"android.provider.Settings.Panel.ACTION_NFC\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityPostStopped(android.app.Activity)":"android.app.Application.ActivityLifecycleCallbacks.onActivityPostStopped(android.app.Activity)\r\n","Number of times the service's process has crashed while the service\n            is running.":"服务进程崩溃的次数\r\n            在跑。\r\n","android.provider.ContactsContract.Directory.ENTERPRISE_LOCAL_INVISIBLE":"android.provider.ContactsContract.Directory.ENTERPRISE_LOCAL_INVISIBLE\r\n","#DIRECTORY_DOWNLOADS":"#DIRECTORY_DOWNLOADS\r\n","Get the bound port of the wrapped socket.":"获取包装套接字的绑定端口。\r\n","android.provider.Settings.Secure.LOCK_PATTERN_ENABLED":"android.provider.Settings.Secure.LOCK_PATTERN_ENABLED\r\n","android.media.MediaRouter2.RoutingController.release()":"android.media.MediaRouter2.RoutingController.release()\r\n"," instance combining all the information gathered\n            by this ":" 结合所有收集到的信息的实例\r\n            这样\r\n","android.inputmethodservice.Keyboard.Key.sticky":"android.inputmethodservice.Keyboard.Key.sticky\r\n","A incremental builder for IKEv2 VPN profiles":"IKEv2 VPN 配置文件的增量构建器\r\n","Domain-specific data for recording request.":"用于记录请求的域特定数据。\r\n","android.media.MediaMetadata.Builder.MediaMetadata$Builder(android.media.MediaMetadata)":"android.media.MediaMetadata.Builder.MediaMetadata$Builder(android.media.MediaMetadata)\r\n","the track type. It must be one of ":"轨道类型。它必须是其中之一\r\n","A resource identifier of a style resource that\n                               supplies default values for the TypedArray,\n                               used only if defStyleAttr is 0 or can not be found\n                               in the theme.  Can be 0 to not look for defaults.":"样式资源的资源标识符\r\n                               为 TypedArray 提供默认值，\r\n                               仅在 defStyleAttr 为 0 或无法找到时使用\r\n                               在主题中。可以为 0 以不查找默认值。\r\n"," that composes 'inner' with 'outer', such that the results of\n            'inner' are treated as the source bitmap passed to 'outer', i.":" 将“内部”与“外部”组合在一起，这样的结果\r\n            “内部”被视为传递给“外部”的源位图，即。\r\n","android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession, int, long)":"android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession, int, long)\r\n","#getPasswordComplexity()":"#getPasswordComplexity()\r\n","android.bluetooth.le.AdvertiseSettings.Builder":"android.bluetooth.le.AdvertiseSettings.Builder\r\n","Message box: drafts.":"消息框：草稿。\r\n","android.os.DropBoxManager.Entry.getText(int)":"android.os.DropBoxManager.Entry.getText(int)\r\n",". The\n                provided ":".这\r\n                假如\r\n"," if the input method specified is not installed, not enabled, or\n                    otherwise not available to become the current IME":" 如果指定的输入法未安装、未启用或\r\n                    否则无法成为当前的 IME\r\n","android.provider.ContactsContract.QuickContact.showQuickContact(android.content.Context, android.graphics.Rect, android.net.Uri, java.lang.String[], java.lang.String)":"android.provider.ContactsContract.QuickContact.showQuickContact(android.content.Context, android.graphics.Rect, android.net.Uri, java.lang.String[], java.lang.String)\r\n","android.provider.Settings.System.LOGGING_ID":"android.provider.Settings.System.LOGGING_ID\r\n"," state of any\n            ":" 任何状态\r\n            \r\n","android.app.appsearch.AppSearchSchema.PropertyConfig.CARDINALITY_REPEATED":"android.app.appsearch.AppSearchSchema.PropertyConfig.CARDINALITY_REPEATED\r\n","android.app.Notification.DecoratedMediaCustomViewStyle":"android.app.Notification.DecoratedMediaCustomViewStyle\r\n","android.provider.Contacts.OrganizationColumns.TYPE":"android.provider.Contacts.OrganizationColumns.TYPE\r\n","a database cursor containing a list of start and end days for\n                    events":"包含开始和结束日期列表的数据库游标\r\n                    事件\r\n","a socket representing the new connection.":"代表新连接的套接字。\r\n","android.appwidget.AppWidgetProvider.onRestored(android.content.Context, int[], int[])":"android.appwidget.AppWidgetProvider.onRestored(android.content.Context, int[], int[])\r\n","android.provider.ContactsContract.DataColumns.RES_PACKAGE":"android.provider.ContactsContract.DataColumns.RES_PACKAGE\r\n","Seekable ParcelFileDescriptor.":"可搜索的 ParcelFileDescriptor。\r\n","android.inputmethodservice.Keyboard.Key.onReleased(boolean)":"android.inputmethodservice.Keyboard.Key.onReleased(boolean)\r\n","Interface definition for a callback to be invoked when the unhandled input event is received.":"接收到未处理的输入事件时要调用的回调的接口定义。\r\n","MIME type of the original content, such as ":"原始内容的 MIME 类型，例如\r\n","android.provider.CalendarContract.EventsColumns.IS_ORGANIZER":"android.provider.CalendarContract.EventsColumns.IS_ORGANIZER\r\n","android.media.MediaCodecInfo.CodecCapabilities.isFormatSupported(android.media.MediaFormat)":"android.media.MediaCodecInfo.CodecCapabilities.isFormatSupported(android.media.MediaFormat)\r\n","A new array of 3 floats containing non-linear RGB values":"包含非线性 RGB 值的 3 个浮点数的新数组\r\n"," will return\n                             the certificate used to create signature.\n                             Binary format for checksums:\n                             <pre>":" 将返回\r\n                             用于创建签名的证书。\r\n                             校验和的二进制格式：\r\n                             <前>\r\n","Base class for derived classes to implement to provide a TV input recording session.":"派生类的基类，以实现提供电视输入录制会话。\r\n","android.media.MediaDrm.MetricsConstants.EVENT_SESSION_RECLAIMED_COUNT":"android.media.MediaDrm.MetricsConstants.EVENT_SESSION_RECLAIMED_COUNT\r\n","android.media.AudioManager.OnCommunicationDeviceChangedListener.onCommunicationDeviceChanged(android.media.AudioDeviceInfo)":"android.media.AudioManager.OnCommunicationDeviceChangedListener.onCommunicationDeviceChanged(android.media.AudioDeviceInfo)\r\n","#A2DP":"#A2DP\r\n","CA system id of the CAS used to scramble the track.":"用于加扰轨道的 CAS 的 CA 系统 ID。\r\n","android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureCompleted(android.hardware.camera2.CameraCaptureSession, android.hardware.camera2.CaptureRequest, android.hardware.camera2.TotalCaptureResult)":"android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureCompleted（android.hardware.camera2.CameraCaptureSession，android.hardware.camera2.CaptureRequest，android.hardware.camera2.TotalCaptureResult）\r\n","A single output frame and its associated metadata.":"单个输出帧及其关联的元数据。\r\n","android.content.pm.LauncherApps.ShortcutQuery.FLAG_MATCH_PINNED_BY_ANY_LAUNCHER":"android.content.pm.LauncherApps.ShortcutQuery.FLAG_MATCH_PINNED_BY_ANY_LAUNCHER\r\n","android.graphics.fonts.Font.Builder.Font$Builder(android.graphics.fonts.Font)":"android.graphics.fonts.Font.Builder.Font$Builder(android.graphics.fonts.Font)\r\n","Constructs a new Builder with the defaults:":"使用默认值构造一个新的 Builder：\r\n","android.media.AudioFocusRequest":"android.media.AudioFocusRequest\r\n","The RSSI value for the remote device as reported by the Bluetooth hardware. 0\n            if no RSSI value is available.":"蓝牙硬件报告的远程设备的 RSSI 值。 0\r\n            如果没有可用的 RSSI 值。\r\n"," for writing to the blob file.":" 用于写入 blob 文件。\r\n","android.provider.FontsContract.Columns.VARIATION_SETTINGS":"android.provider.FontsContract.Columns.VARIATION_SETTINGS\r\n","The binary representation of the photo.":"照片的二进制表示。\r\n","Thrown to indicate user operation failed.":"抛出表示用户操作失败。\r\n","android.media.MediaCodec.CryptoException.ERROR_INSUFFICIENT_SECURITY":"android.media.MediaCodec.CryptoException.ERROR_INSUFFICIENT_SECURITY\r\n","#STAY_ON_WHILE_PLUGGED_IN":"#STAY_ON_WHILE_PLUGGED_IN\r\n","android.media.MediaRouter.UserRouteInfo.getRemoteControlClient()":"android.media.MediaRouter.UserRouteInfo.getRemoteControlClient()\r\n","an intent that can be used to show or edit details of\n                                   the alarm clock.":"可用于显示或编辑详细信息的意图\r\n                                   闹钟。\r\n","android.preference.Preference.OnPreferenceChangeListener":"android.preference.Preference.OnPreferenceChangeListener\r\n"," elements. You can call this on any thread.":" 元素。您可以在任何线程上调用它。\r\n","android.app.Notification.Action.getRemoteInputs()":"android.app.Notification.Action.getRemoteInputs()\r\n","index of the route to remove":"要删除的路由索引\r\n","android.os.Debug.MemoryInfo.getOtherSharedDirty(int)":"android.os.Debug.MemoryInfo.getOtherSharedDirty(int)\r\n","a file path to the font file":"字体文件的文件路径\r\n","android.app.ActivityManager.TaskDescription.getIcon()":"android.app.ActivityManager.TaskDescription.getIcon()\r\n","The unique media size id. It is unique amongst other media sizes\n                   supported by the printer.":"唯一的媒体尺寸 ID。它在其他介质尺寸中是独一无二的\r\n                   打印机支持。\r\n","the frequency band that has most effect on the given frequency.":"对给定频率影响最大的频带。\r\n","android.provider.Telephony.CarrierId":"android.provider.Telephony.CarrierId\r\n","The type of status":"状态类型\r\n","LineBreaker":"换行符\r\n","Builds a routing session info.":"构建路由会话信息。\r\n","android.media.MediaDrm.PlaybackComponent.getLogSessionId()":"android.media.MediaDrm.PlaybackComponent.getLogSessionId()\r\n","the output Surface for which buffers should be pre-allocated. Must be one of\n            the output Surfaces used to create this session.":"应为其预分配缓冲区的输出 Surface。必须是其中之一\r\n            用于创建此会话的输出表面。\r\n","compressor threshold in decibels (dB)":"以分贝为单位的压缩机阈值 (dB)\r\n","android.media.MediaRouter.RouteGroup.removeRoute(int)":"android.media.MediaRouter.RouteGroup.removeRoute(int)\r\n","Override to handle requests to play an item with a given id from the\n            play queue.":"重写以处理播放具有给定 id 的项目的请求\r\n            播放队列。\r\n"," had this wrong value\n            before ":" 有这个错误的价值\r\n            前\r\n","#ERROR_NAME_UNSUPPORTED":"#ERROR_NAME_UNSUPPORTED\r\n","android.bluetooth.le.AdvertiseData.Builder.build()":"android.bluetooth.le.AdvertiseData.Builder.build()\r\n","The timestamp of the initial creation of the session.":"会话初始创建的时间戳。\r\n","android.provider.ContactsContract.SyncState.get(android.content.ContentProviderClient, android.accounts.Account)":"android.provider.ContactsContract.SyncState.get(android.content.ContentProviderClient, android.accounts.Account)\r\n","Constant indicating that no error occurred during the preparation or the activation of\n            this staged session.":"常量表示在准备或激活过程中没有发生错误\r\n            这个分阶段的会议。\r\n","android.media.FaceDetector.Face.pose(int)":"android.media.FaceDetector.Face.pose(int)\r\n","android.app.blob.BlobStoreManager.Session.abandon()":"android.app.blob.BlobStoreManager.Session.abandon()\r\n","android.opengl.ETC1Util.ETC1Texture.getHeight()":"android.opengl.ETC1Util.ETC1Texture.getHeight()\r\n","The partial output metadata from the capture, which\n            includes a subset of the ":"来自捕获的部分输出元数据，其中\r\n            包括的一个子集\r\n",": This process is empty of any\n            actively running code.":": 这个过程是空的\r\n            主动运行代码。\r\n","This method is called when an image (or images in case of multi-frame\n            capture) is captured and device-specific extension\n            processing is triggered.":"当图像（或多帧情况下的图像）时调用此方法\r\n            capture) 被捕获和设备特定的扩展\r\n            处理被触发。\r\n","Event indicating the ParcelFileDescriptor to which this listener was\n            attached has been closed.":"指示此侦听器所在的 ParcelFileDescriptor 的事件\r\n            附件已关闭。\r\n","If this setting is set (to anything), then all references\n            to Gmail on the device must change to Google Mail.":"如果此设置被设置（任何），那么所有引用\r\n            设备上的 Gmail 必须更改为 Google Mail。\r\n","android.content.pm.PackageInstaller.SessionInfo.getInstallReason()":"android.content.pm.PackageInstaller.SessionInfo.getInstallReason()\r\n","android.app.ActivityManager.ProcessErrorStateInfo.tag":"android.app.ActivityManager.ProcessErrorStateInfo.tag\r\n","#FILL_IN_CLIP_DATA":"#FILL_IN_CLIP_DATA\r\n","android.provider.ContactsContract.FullNameStyle.CJK":"android.provider.ContactsContract.FullNameStyle.CJK\r\n","android.media.session.MediaController.PlaybackInfo.getVolumeControlId()":"android.media.session.MediaController.PlaybackInfo.getVolumeControlId()\r\n"," as its input":" 作为其输入\r\n","android.media.tv.TvContract.Channels.TYPE_ATSC_T":"android.media.tv.TvContract.Channels.TYPE_ATSC_T\r\n","android.opengl.GLSurfaceView.setEGLConfigChooser(boolean)":"android.opengl.GLSurfaceView.setEGLConfigChooser(boolean)\r\n","the bounds of the area.":"该地区的边界。\r\n","android.net.UrlQuerySanitizer.ParameterValuePair.mParameter":"android.net.UrlQuerySanitizer.ParameterValuePair.mParameter\r\n","android.media.MediaCodecInfo.CodecCapabilities.getMimeType()":"android.media.MediaCodecInfo.CodecCapabilities.getMimeType()\r\n","Sends the list of all audio/video/subtitle tracks.":"发送所有音频/视频/字幕轨道的列表。\r\n","A parcelable class encapsulating account data for contacts that originate from a SIM card.":"一个可打包的类，封装来自 SIM 卡的联系人的帐户数据。\r\n","android.accessibilityservice.AccessibilityService.SoftKeyboardController.getShowMode()":"android.accessibilityservice.AccessibilityService.SoftKeyboardController.getShowMode()\r\n","Compose all of the added primitives together into a single ":"将所有添加的图元组合成一个\r\n","Returns the cardinality of the property (whether it is optional, required or repeated).":"返回属性的基数（无论是可选的、必需的还是重复的）。\r\n","IntentFilter#MATCH_CATEGORY_PORT":"IntentFilter#MATCH_CATEGORY_PORT\r\n","android.graphics.text.LineBreaker.Result.getEndLineHyphenEdit(int)":"android.graphics.text.LineBreaker.Result.getEndLineHyphenEdit(int)\r\n",", which may be used\n            to determine where the app will be staged.":", 可以使用\r\n            以确定应用程序的暂存位置。\r\n","android.provider.Settings.Secure.WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS":"android.provider.Settings.Secure.WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS\r\n","android.media.audiofx.EnvironmentalReverb.setDensity(short)":"android.media.audiofx.EnvironmentalReverb.setDensity（短）\r\n","android.provider.Contacts.Intents.SHOW_OR_CREATE_CONTACT":"android.provider.Contacts.Intents.SHOW_OR_CREATE_CONTACT\r\n","android.hardware.Camera.Parameters.setFocusMode(java.lang.String)":"android.hardware.Camera.Parameters.setFocusMode(java.lang.String)\r\n","android.media.MediaRouter.UserRouteInfo.setIconResource(int)":"android.media.MediaRouter.UserRouteInfo.setIconResource(int)\r\n","The allDay status (true or false) of the original recurring event\n            for which this event is an exception.":"原始重复事件的 allDay 状态（true 或 false）\r\n            此事件是一个例外。\r\n","android.media.MediaRouter2.RoutingController":"android.media.MediaRouter2.RoutingController\r\n","Saved state bundle for the fragment":"片段的保存状态包\r\n","android.content.pm.PackageManager.Property.getPackageName()":"android.content.pm.PackageManager.Property.getPackageName()\r\n","android.content.ContextWrapper.createContextForSplit(java.lang.String)":"android.content.ContextWrapper.createContextForSplit(java.lang.String)\r\n","android.provider.Settings.System.getLong(android.content.ContentResolver, java.lang.String, long)":"android.provider.Settings.System.getLong（android.content.ContentResolver，java.lang.String，长）\r\n","android.app.UiAutomation.AccessibilityEventFilter.accept(android.view.accessibility.AccessibilityEvent)":"android.app.UiAutomation.AccessibilityEventFilter.accept(android.view.accessibility.AccessibilityEvent)\r\n"," to indicate that a call was blocked because the user\n            has chosen to block all calls from pay phones.":" 表示呼叫被阻止，因为用户\r\n            已选择阻止来自公用电话的所有呼叫。\r\n","#release()":"＃发布（）\r\n"," when the torch mode has become on and available to be turned\n                           off. ":" 当手电筒模式已打开并可以打开时\r\n                           离开。\r\n"," providing a directory of\n            contact directories.":" 提供一个目录\r\n            联系人目录。\r\n","android.app.ApplicationErrorReport.CrashInfo.throwMethodName":"android.app.ApplicationErrorReport.CrashInfo.throwMethodName\r\n","Whether this is a modifier key, such as Shift or Alt":"这是否是修改键，例如 Shift 或 Alt\r\n","the new expiration time for the keys in the session.\n                The time is in milliseconds, relative to the Unix epoch.  A time of\n                0 indicates that the keys never expire.":"会话中密钥的新到期时间。\r\n                时间以毫秒为单位，相对于 Unix 纪元。一个时间\r\n                0 表示密钥永不过期。\r\n","android.graphics.BitmapFactory.Options.inPreferQualityOverSpeed":"android.graphics.BitmapFactory.Options.inPreferQualityOverSpeed\r\n","android.graphics.ColorSpace.Named":"android.graphics.ColorSpace.Named\r\n","Builder class to help create new GnssStatus instances.":"帮助创建新 GnssStatus 实例的生成器类。\r\n","android.provider.CallLog.Calls.BLOCK_REASON_PAY_PHONE":"android.provider.CallLog.Calls.BLOCK_REASON_PAY_PHONE\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format24bitARGB1887":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format24bitARGB1887\r\n","android.net.IpSecAlgorithm.AUTH_CRYPT_AES_GCM":"android.net.IpSecAlgorithm.AUTH_CRYPT_AES_GCM\r\n","An interface for notifying clients of MediaScannerConnection\n            when a connection to the MediaScanner service has been established\n            and when the scanning of a file has completed.":"用于通知客户端 MediaScannerConnection 的接口\r\n            当与 MediaScanner 服务的连接已建立时\r\n            以及文件扫描完成的时间。\r\n","The content:// style URL for querying an instance range by Julian\n            Day in the managed profile.":"Julian 查询实例范围的 content:// 样式 URL\r\n            托管个人资料中的日期。\r\n","android.media.metrics.PlaybackMetrics.Builder.build()":"android.media.metrics.PlaybackMetrics.Builder.build()\r\n","The setting's current value, or 'def' if it is not defined\n            or not a valid integer.":"设置的当前值，如果未定义则为 'def'\r\n            或不是有效整数。\r\n","The resource name of the label describing the source of the status update, e.":"描述状态更新来源的标签的资源名称，例如。\r\n","A haptic effect that simulates downwards movement with gravity.":"模拟重力向下运动的触觉效果。\r\n","android.database.sqlite.SQLiteDatabase.OpenParams.getOpenFlags()":"android.database.sqlite.SQLiteDatabase.OpenParams.getOpenFlags()\r\n"," of raw contacts when they are inserted\n            without a value for this column.":" 插入时的原始联系人\r\n            此列没有值。\r\n","android.app.Notification.Action.actionIntent":"android.app.Notification.Action.actionIntent\r\n","android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile2HDR":"android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile2HDR\r\n","When #":"什么时候 ＃\r\n","android.media.MediaRecorder.OnInfoListener":"android.media.MediaRecorder.OnInfoListener\r\n","android.provider.VoicemailContract.Status.DATA_CHANNEL_STATE_SERVER_ERROR":"android.provider.VoicemailContract.Status.DATA_CHANNEL_STATE_SERVER_ERROR\r\n","android.provider.CalendarContract.EventsColumns.SELF_ATTENDEE_STATUS":"android.provider.CalendarContract.EventsColumns.SELF_ATTENDEE_STATUS\r\n","the drawable to add":"要添加的可绘制对象\r\n","the session ID to remove from this multi-package session.":"要从此多包会话中删除的会话 ID。\r\n","android.hardware.biometrics.BiometricManager.Strings.getPromptMessage()":"android.hardware.biometrics.BiometricManager.Strings.getPromptMessage()\r\n","android.provider.ContactsContract.Directory.notifyDirectoryChange(android.content.ContentResolver)":"android.provider.ContactsContract.Directory.notifyDirectoryChange(android.content.ContentResolver)\r\n","android.app.ActionBar.OnNavigationListener":"android.app.ActionBar.OnNavigationListener\r\n","previously written as part of this session.\n                             ":"以前作为本次会议的一部分编写。\r\n                             \r\n","The current metadata for the session or null if none.":"会话的当前元数据，如果没有则为 null。\r\n"," subdirectory of an aggregation exception":" 聚合异常的子目录\r\n","android.content.pm.ActivityInfo#CONFIG_MCC\n            PackageManager.ActivityInfo.CONFIG_MCC":"android.content.pm.ActivityInfo#CONFIG_MCC\r\n            PackageManager.ActivityInfo.CONFIG_MCC\r\n","The channel type for NTSC.":"NTSC 的频道类型。\r\n","Type of the thread, either ":"线程的类型，要么\r\n","non-zero if this photo is known to exist on the server":"如果已知此照片存在于服务器上则为非零\r\n","#PRESET_SMALLROOM":"#PRESET_SMALLROOM\r\n","The destination array passed as a parameter":"作为参数传递的目标数组\r\n","android.provider.ContactsContract.Profile.CONTENT_RAW_CONTACTS_URI":"android.provider.ContactsContract.Profile.CONTENT_RAW_CONTACTS_URI\r\n","Creates a new Builder with the given interval.":"以给定的时间间隔创建一个新的 Builder。\r\n","#VARIANT_FAVOR_TIME_RESOLUTION":"#VARIANT_FAVOR_TIME_RESOLUTION\r\n","Trigger a dialog that lists the various methods of interacting with\n            the requested ":"触发一个对话框，列出各种交互方法\r\n            所要求的\r\n","An Exception was thrown reading the ":"异常被抛出读取\r\n","android.database.DatabaseUtils.InsertHelper.getColumnIndex(java.lang.String)":"android.database.DatabaseUtils.InsertHelper.getColumnIndex(java.lang.String)\r\n","android.media.MediaCodec.CodecException":"android.media.MediaCodec.CodecException 异常\r\n","android.provider.DocumentsContract.Document.FLAG_SUPPORTS_SETTINGS":"android.provider.DocumentsContract.Document.FLAG_SUPPORTS_SETTINGS\r\n","android.provider.Contacts.People.markAsContacted(android.content.ContentResolver, long)":"android.provider.Contacts.People.markAsContacted（android.content.ContentResolver，长）\r\n","android.app.appsearch.RemoveByDocumentIdRequest.Builder.RemoveByDocumentIdRequest$Builder(java.lang.String)":"android.app.appsearch.RemoveByDocumentIdRequest.Builder.RemoveByDocumentIdRequest$Builder(java.lang.String)\r\n","android.provider.CalendarContract.Events":"android.provider.CalendarContract.Events\r\n","The callback class associated with the status change of hardware monitors\n            in ":"硬件监视器状态变化关联的回调类\r\n            在\r\n","android.provider.CalendarContract.EventsColumns.CAN_INVITE_OTHERS":"android.provider.CalendarContract.EventsColumns.CAN_INVITE_OTHERS\r\n","android.media.MediaScannerConnection.OnScanCompletedListener.onScanCompleted(java.lang.String, android.net.Uri)":"android.media.MediaScannerConnection.OnScanCompletedListener.onScanCompleted(java.lang.String, android.net.Uri)\r\n","android.inputmethodservice.KeyboardView.OnKeyboardActionListener":"android.inputmethodservice.KeyboardView.OnKeyboardActionListener\r\n","Exception thrown when a SurfaceTexture couldn't be created or resized.":"无法创建或调整 SurfaceTexture 大小时抛出异常。\r\n","android.provider.CallLog.Calls.FEATURES_HD_CALL":"android.provider.CallLog.Calls.FEATURES_HD_CALL\r\n","android.location.GnssAntennaInfo.PhaseCenterOffset.getZOffsetMm()":"android.location.GnssAntennaInfo.PhaseCenterOffset.getZOffsetMm()\r\n","#MEDIA_INFO_BUFFERING_START":"#MEDIA_INFO_BUFFERING_START\r\n","android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback.onClicked(android.accessibilityservice.AccessibilityButtonController)":"android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback.onClicked(android.accessibilityservice.AccessibilityButtonController)\r\n","#MEDIA_ERROR_SERVER_DIED":"#MEDIA_ERROR_SERVER_DIED\r\n","a list of supported picture sizes. This method will always\n                    return a list with at least one element.":"支持的图片尺寸列表。这个方法会一直\r\n                    返回包含至少一个元素的列表。\r\n","#CONTENT_VCARD_URI":"#CONTENT_VCARD_URI\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivitySaveInstanceState(android.app.Activity, android.os.Bundle)":"android.app.Application.ActivityLifecycleCallbacks.onActivitySaveInstanceState(android.app.Activity, android.os.Bundle)\r\n","the unscaled screen-relative X coordinate of the center of\n                    the magnified region":"中心的未缩放屏幕相对 X 坐标\r\n                    放大区域\r\n","Called when routes are removed.":"删除路由时调用。\r\n","android.provider.Telephony.BaseMmsColumns.DATE_SENT":"android.provider.Telephony.BaseMmsColumns.DATE_SENT\r\n","the file name of the font data in the asset directory":"资产目录中字体数据的文件名\r\n","android.provider.Settings.Secure.TTS_DEFAULT_LANG":"android.provider.Settings.Secure.TTS_DEFAULT_LANG\r\n","android.net.sip.SipSession.State":"android.net.sip.SipSession.State\r\n","android.app.SearchManager.OnDismissListener":"android.app.SearchManager.OnDismissListener\r\n","Called on the listener to notify it that the previously set marker has been reached\n            by the recording head.":"调用侦听器以通知它已达到先前设置的标记\r\n            由录音头。\r\n","android.graphics.Path.Op":"android.graphics.Path.Op\r\n","A comma separated list of availability types supported for this\n            calendar in the format \"#,#,#\".":"为此支持的可用性类型的逗号分隔列表\r\n            格式为“#,#,#”的日历。\r\n","android.provider.ContactsContract.BaseSyncColumns":"android.provider.ContactsContract.BaseSyncColumns\r\n","android.app.ActivityManager.TaskDescription.getPrimaryColor()":"android.app.ActivityManager.TaskDescription.getPrimaryColor()\r\n","Returns the media id in the ":"返回中的媒体 ID\r\n","The _SYNC_VERSION of the photo that was last downloaded":"最后下载的照片的 _SYNC_VERSION\r\n","this must be one of the the preset constants defined in this class.\n            e.g. ":"这必须是此类中定义的预设常量之一。\r\n            例如\r\n","android.provider.ContactsContract.StatusColumns.STATUS_RES_PACKAGE":"android.provider.ContactsContract.StatusColumns.STATUS_RES_PACKAGE\r\n","android.animation.Animator.AnimatorListener.onAnimationStart(android.animation.Animator)":"android.animation.Animator.AnimatorListener.onAnimationStart(android.animation.Animator)\r\n","android.graphics.ColorSpace.Connector.transform(float, float, float)":"android.graphics.ColorSpace.Connector.transform（浮动，浮动，浮动）\r\n","android.media.session.MediaSession.Callback.onPlayFromSearch(java.lang.String, android.os.Bundle)":"android.media.session.MediaSession.Callback.onPlayFromSearch(java.lang.String, android.os.Bundle)\r\n","android.provider.Settings.Global.SHOW_PROCESSES":"android.provider.Settings.Global.SHOW_PROCESSES\r\n","android.inputmethodservice.InputMethodService.Insets.contentTopInsets":"android.inputmethodservice.InputMethodService.Insets.contentTopInsets\r\n","The minimum valid value in this color space's RGB range":"此颜色空间的 RGB 范围内的最小有效值\r\n","Gets the media height in mils (thousandths of an inch).":"获取以密耳（千分之一英寸）为单位的介质高度。\r\n","android.media.tv.TvContract.Channels":"android.media.tv.TvContract.Channels\r\n","android.provider.CalendarContract.EventsColumns.SYNC_DATA8":"android.provider.CalendarContract.EventsColumns.SYNC_DATA8\r\n","android.provider.Browser.clearHistory(android.content.ContentResolver)":"android.provider.Browser.clearHistory(android.content.ContentResolver)\r\n","android.inputmethodservice.Keyboard.Key.isInside(int, int)":"android.inputmethodservice.Keyboard.Key.isInside(int, int)\r\n","A newly constructed instance.":"一个新构造的实例。\r\n"," failed to sniff the input\n            content.":" 嗅探输入失败\r\n            内容。\r\n","android.provider.Telephony.TextBasedSmsColumns.SERVICE_CENTER":"android.provider.Telephony.TextBasedSmsColumns.SERVICE_CENTER\r\n","the desired preview picture format, defined by\n              one of the ":"所需的预览图片格式，由\r\n              中的一个\r\n","Interface definition for a callback to be invoked when the audio focus of the system is\n            updated.":"当系统的音频焦点被调用时回调的接口定义\r\n            更新。\r\n","volumeHandling":"体积处理\r\n","Is this calendar synced and are its events stored on the device?\n            0 - Do not sync this calendar or store events for this calendar.":"这个日历是否同步，它的事件是否存储在设备上？\r\n            0 - 不同步此日历或​​存储此日历的事件。\r\n","Called when a Typeface request done via ":"通过完成字体请求时调用\r\n","Unique ID of a document.":"文档的唯一 ID。\r\n","android.app.NotificationChannel.setConversationId(java.lang.String, java.lang.String)":"android.app.NotificationChannel.setConversationId(java.lang.String, java.lang.String)\r\n","android.app.KeyguardManager.OnKeyguardExitResult":"android.app.KeyguardManager.OnKeyguardExitResult\r\n"," if access has been allowed for packages signed with the same\n            certificate as the caller by using ":" 如果允许访问使用相同签名的包\r\n            使用证书作为调用者\r\n","Number of bytes received during the bucket's time interval.":"在桶的时间间隔内收到的字节数。\r\n","android.provider.CalendarContract.EventsColumns.ORIGINAL_ID":"android.provider.CalendarContract.EventsColumns.ORIGINAL_ID\r\n","android.provider.Settings.Secure.LOCATION_MODE":"android.provider.Settings.Secure.LOCATION_MODE\r\n","android.provider.ContactsContract.Contacts#CONTENT_LOOKUP_URI":"android.provider.ContactsContract.Contacts#CONTENT_LOOKUP_URI\r\n","Send a session event to a CA system.":"向 CA 系统发送会话事件。\r\n","frequency band whose center frequency is requested. The numbering of the bands\n            starts from 0 and ends at (number of bands - 1).":"请求中心频率的频带。乐队的编号\r\n            从 0 开始到（波段数 - 1）结束。\r\n","android.provider.CalendarContract.CalendarColumns.CAL_ACCESS_OVERRIDE":"android.provider.CalendarContract.CalendarColumns.CAL_ACCESS_OVERRIDE\r\n","s。\r\n        \r\n\r\ns。\r\n        \r\n\r\ns。\r\n        \r\n\r\ns.\n        ":"s。\r\n        \r\n\r\ns。\r\n        \r\n\r\ns。\r\n        \r\n\r\n秒。\r\n        \r\n","android.provider.CalendarContract.EventsColumns.HAS_ALARM":"android.provider.CalendarContract.EventsColumns.HAS_ALARM\r\n","android.provider.Telephony.Carriers.PASSWORD":"android.provider.Telephony.Carriers.PASSWORD\r\n",") in the capture sequence.":") 在捕获序列中。\r\n",", indicating the desired dialog size,\n                       when supported.":", 指示所需的对话框大小，\r\n                       支持时。\r\n","Key to extract the MIME type of the audio track\n            from the ":"提取音轨 MIME 类型的键\r\n            来自\r\n","The current network selection mode.":"当前网络选择模式。\r\n","Confirms whether or not this is an ultra high resolution stream.":"确认这是否是超高分辨率流。\r\n","android.content.pm.PackageInstaller.SessionParams.setWhitelistedRestrictedPermissions(java.util.Set<java.lang.String>)":"android.content.pm.PackageInstaller.SessionParams.setWhitelistedRestrictedPermissions(java.util.Set<java.lang.String>)\r\n","The address of the other party.":"对方地址。\r\n","Returns the type of validation error associated with this exception.":"返回与此异常关联的验证错误类型。\r\n","BackupAgent#TYPE_DIRECTORY":"备份代理#TYPE_DIRECTORY\r\n","android.location.GnssStatus.Builder":"android.location.GnssStatus.Builder\r\n","android.app.NotificationManager.Policy.SUPPRESSED_EFFECT_STATUS_BAR":"android.app.NotificationManager.Policy.SUPPRESSED_EFFECT_STATUS_BAR\r\n","android.media.session.MediaController.TransportControls.stop()":"android.media.session.MediaController.TransportControls.stop()\r\n","android.app.ActivityManager.RunningAppProcessInfo.importance":"android.app.ActivityManager.RunningAppProcessInfo.importance\r\n","CallLog.Calls#BLOCKED_TYPE":"CallLog.Calls#BLOCKED_TYPE\r\n","android.provider.CalendarContract.ColorsColumns.TYPE_EVENT":"android.provider.CalendarContract.ColorsColumns.TYPE_EVENT\r\n","Certificate has not been set.":"尚未设置证书。\r\n","CaptureFailure#getFrameNumber":"捕获失败#getFrameNumber\r\n","android.provider.Contacts.PhonesColumns.ISPRIMARY":"android.provider.Contacts.PhonesColumns.ISPRIMARY\r\n","android.media.tv.TvContract.Channels.VIDEO_FORMAT_720P":"android.media.tv.TvContract.Channels.VIDEO_FORMAT_720P\r\n","android.app.Notification.Action":"android.app.Notification.Action\r\n","the number of lines that applies the firstWidth":"应用 firstWidth 的行数\r\n","android.media.MediaFeature.HdrType.DOLBY_VISION":"android.media.MediaFeature.HdrType.DOLBY_VISION\r\n","android.app.VoiceInteractor.CommandRequest.onCommandResult(boolean, android.os.Bundle)":"android.app.VoiceInteractor.CommandRequest.onCommandResult（布尔值，android.os.Bundle）\r\n","id that can be used to autofill the view contents, or ":"可用于自动填充视图内容的 ID，或\r\n","Setting to allow mock locations and location provider status to be injected into the\n            LocationManager service for testing purposes during application development.":"设置允许将模拟位置和位置提供者状态注入到\r\n            LocationManager 服务，用于在应用程序开发期间进行测试。\r\n","android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.revokeSelf()":"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.revokeSelf()\r\n","Returns the effective size of the ":"返回的有效大小\r\n","Interface for callback invocation for service discovery":"用于服务发现的回调调用接口\r\n","android.hardware.Camera.Parameters.FOCUS_DISTANCE_OPTIMAL_INDEX":"android.hardware.Camera.Parameters.FOCUS_DISTANCE_OPTIMAL_INDEX\r\n","the ID of the root. May be null.":"根的ID。可能为空。\r\n","android.os.Build.VERSION_CODES.S":"android.os.Build.VERSION_CODES.S\r\n","Callback called when application registration state changes.":"应用程序注册状态更改时调用的回调。\r\n","\n            to notify caller of thermal status has changed.":"\r\n            通知呼叫者热状态已更改。\r\n","android.app.usage.NetworkStats.Bucket.getTxBytes()":"android.app.usage.NetworkStats.Bucket.getTxBytes()\r\n","The type of the message defined by MMS spec.":"MMS 规范定义的消息类型。\r\n","EF type identifier for the SDN partition.":"SDN 分区的 EF 类型标识符。\r\n","android.provider.CalendarContract.CalendarColumns.CALENDAR_DISPLAY_NAME":"android.provider.CalendarContract.CalendarColumns.CALENDAR_DISPLAY_NAME\r\n","android.media.MediaPlayer.OnInfoListener":"android.media.MediaPlayer.OnInfoListener\r\n","Gets the current scene mode setting. -or- Sets the scene mode.":"获取当前场景模式设置。 - 或 - 设置场景模式。\r\n","android.app.NotificationManager.Policy.SUPPRESSED_EFFECT_SCREEN_ON":"android.app.NotificationManager.Policy.SUPPRESSED_EFFECT_SCREEN_ON\r\n","android.database.DatabaseUtils.InsertHelper.bind(int, long)":"android.database.DatabaseUtils.InsertHelper.bind(int, long)\r\n","android.content.SharedPreferences.Editor.commit()":"android.content.SharedPreferences.Editor.commit()\r\n","android.media.MediaRouter.RouteCategory":"android.media.MediaRouter.RouteCategory\r\n","android.hardware.biometrics.BiometricManager.Strings.getButtonLabel()":"android.hardware.biometrics.BiometricManager.Strings.getButtonLabel()\r\n","android.media.MediaRouter.RouteInfo.getVolume()":"android.media.MediaRouter.RouteInfo.getVolume()\r\n","Create a new IpSecTransform.":"创建一个新的 IpSecTransform。\r\n","Interface for receiving information about a ":"用于接收有关 a 的信息的接口\r\n","android.media.MediaDescription.Builder.MediaDescription$Builder()":"android.media.MediaDescription.Builder.MediaDescription$Builder()\r\n","error code:\n            <ul>\n            <li>":"错误代码：\r\n            <ul>\r\n            <李>\r\n","Fragment#onResume()":"片段#onResume()\r\n","Releases this controller and the corresponding session.":"释放此控制器和相应的会话。\r\n","android.app.assist.AssistStructure.ViewNode.getIdEntry()":"android.app.assist.AssistStructure.ViewNode.getIdEntry()\r\n","android.provider.CallLog.Calls.AUTO_MISSED_EMERGENCY_CALL":"android.provider.CallLog.Calls.AUTO_MISSED_EMERGENCY_CALL\r\n"," to indicate that a error has occurred in the data\n             channel while communicating with the server":" 表明数据中发生了错误\r\n             与服务器通信时的通道\r\n","Called on the listener to notify it that the effect engine control\n            has been taken or returned.":"调用监听器通知它效果引擎控制\r\n            已被带走或退回。\r\n","android.provider.Contacts.ExtensionsColumns":"android.provider.Contacts.ExtensionsColumns\r\n","android.app.appsearch.RemoveByDocumentIdRequest.Builder.build()":"android.app.appsearch.RemoveByDocumentIdRequest.Builder.build()\r\n","the database name the matched document belongs to.":"匹配文档所属的数据库名称。\r\n","android.media.MediaCodec.LinearBlock.isMappable()":"android.media.MediaCodec.LinearBlock.isMappable()\r\n","android.provider.Settings.Secure.USE_GOOGLE_MAIL":"android.provider.Settings.Secure.USE_GOOGLE_MAIL\r\n","android.media.session.MediaController.TransportControls.playFromSearch(java.lang.String, android.os.Bundle)":"android.media.session.MediaController.TransportControls.playFromSearch(java.lang.String, android.os.Bundle)\r\n","Selects the audio device that should be used for communication use cases, for instance voice\n            or video calls.":"选择应该用于通信用例的音频设备，例如语音\r\n            或视频通话。\r\n","android.media.metrics.PlaybackStateEvent.Builder":"android.media.metrics.PlaybackStateEvent.Builder\r\n","android.provider.ContactsContract.Contacts":"android.provider.ContactsContract.Contacts\r\n","Get the array of additional pages of content for displaying this notification.":"获取用于显示此通知的附加内容页面的数组。\r\n","android.app.blob.BlobStoreManager.Session.allowPackageAccess(java.lang.String, byte[])":"android.app.blob.BlobStoreManager.Session.allowPackageAccess(java.lang.String, byte[])\r\n","The flag indicating whether this TV channel is scrambled or not.":"指示该电视频道是否加扰的标志。\r\n","android.media.AudioTrack.pause()":"android.media.AudioTrack.pause()\r\n","The type of the track to select. The type can be\n                       ":"要选择的轨道类型。类型可以是\r\n                       \r\n","Informs the application that the video is now available for watching.":"通知应用程序视频现在可以观看了。\r\n","\n            and then sends ":"\r\n            然后发送\r\n","android.media.ImageWriter.OnImageReleasedListener":"android.media.ImageWriter.OnImageReleasedListener\r\n","\n            in case of failure.":"\r\n            万一失败。\r\n","android.media.MediaRecorder.MetricsConstants.FRAMERATE":"android.media.MediaRecorder.MetricsConstants.FRAMERATE\r\n","android.hardware.Camera.AutoFocusMoveCallback.onAutoFocusMoving(boolean, android.hardware.Camera)":"android.hardware.Camera.AutoFocusMoveCallback.onAutoFocusMoving（布尔值，android.hardware.Camera）\r\n","android.provider.CalendarContract.EventsColumns.AVAILABILITY_TENTATIVE":"android.provider.CalendarContract.EventsColumns.AVAILABILITY_TENTATIVE\r\n","AccessibilityService#takeScreenshot":"无障碍服务#takeScreenshot\r\n"," flag in the root\n            Intent of this AppTask.":" 根中的标志\r\n            此 AppTask 的意图。\r\n","CallLog.Calls#MISSED_TYPE":"CallLog.Calls#MISSED_TYPE\r\n","android.inputmethodservice.InputMethodService.Insets.visibleTopInsets":"android.inputmethodservice.InputMethodService.Insets.visibleTopInsets\r\n","android.app.NotificationChannel.EDIT_LAUNCHER":"android.app.NotificationChannel.EDIT_LAUNCHER\r\n","RenderNode is used to build hardware accelerated rendering hierarchies.":"RenderNode 用于构建硬件加速渲染层次结构。\r\n","the currently ready offline session":"当前准备好的离线会话\r\n","android.provider.CalendarContract.CalendarAlertsColumns.END":"android.provider.CalendarContract.CalendarAlertsColumns.END\r\n","the start time for this stroke.":"此行程的开始时间。\r\n","android.os.PowerManager.WakeLock.release(int)":"android.os.PowerManager.WakeLock.release(int)\r\n","Returns the weight value for this font.":"返回此字体的权重值。\r\n","android.media.AudioManager.AudioPlaybackCallback.onPlaybackConfigChanged(java.util.List<android.media.AudioPlaybackConfiguration>)":"android.media.AudioManager.AudioPlaybackCallback.onPlaybackConfigChanged(java.util.List<android.media.AudioPlaybackConfiguration>)\r\n","android.content.pm.PackageInstaller.SessionCallback.onCreated(int)":"android.content.pm.PackageInstaller.SessionCallback.onCreated(int)\r\n","Reports that the current interaction was successfully completed with voice, so the\n            application can report the final status to the user.":"报告当前交互已通过语音成功完成，因此\r\n            应用程序可以向用户报告最终状态。\r\n","android.provider.ContactsContract.Intents.SHOW_OR_CREATE_CONTACT":"android.provider.ContactsContract.Intents.SHOW_OR_CREATE_CONTACT\r\n","uid of the controller":"控制器的uid\r\n","Called when the availability of the accessibility button in the system's\n            navigation area has changed.":"当系统的辅助功能按钮可用时调用\r\n            导航区域已更改。\r\n","android.media.tv.TvView.TimeShiftPositionCallback.onTimeShiftStartPositionChanged(java.lang.String, long)":"android.media.tv.TvView.TimeShiftPositionCallback.onTimeShiftStartPositionChanged(java.lang.String, long)\r\n","android.app.Notification.Action.isContextual()":"android.app.Notification.Action.isContextual()\r\n","android.provider.CalendarContract.EventsColumns.ACCESS_CONFIDENTIAL":"android.provider.CalendarContract.EventsColumns.ACCESS_CONFIDENTIAL\r\n","This is called when the current program content turns out to be not allowed to watch\n            since its content rating is blocked by parental controls.":"当当前节目内容不允许观看时调用\r\n            因为其内容评级被家长控制阻止。\r\n","android.app.VoiceInteractor.Prompt.countVoicePrompts()":"android.app.VoiceInteractor.Prompt.countVoicePrompts()\r\n","The printer id. Cannot be null.":"打印机标识。不能为空。\r\n","Defines the constants used in a response from a Font Provider.":"定义在来自字体提供程序的响应中使用的常量。\r\n","android.hardware.biometrics.BiometricPrompt.CryptoObject.getMac()":"android.hardware.biometrics.BiometricPrompt.CryptoObject.getMac()\r\n","android.companion.WifiDeviceFilter.Builder.build()":"android.companion.WifiDeviceFilter.Builder.build()\r\n","android.hardware.Camera.ShutterCallback":"android.hardware.Camera.ShutterCallback\r\n"," or auxiliary\n             category ":" 或辅助\r\n             类别\r\n","Called when the keys in a session change status, such as when the license\n            is renewed or expires.":"当会话中的密钥更改状态时调用，例如许可证\r\n            已续订或过期。\r\n","android.app.ApplicationErrorReport.RunningServiceInfo.dump(android.util.Printer, java.lang.String)":"android.app.ApplicationErrorReport.RunningServiceInfo.dump(android.util.Printer, java.lang.String)\r\n","android.media.EncoderProfiles.VideoProfile.getProfile()":"android.media.EncoderProfiles.VideoProfile.getProfile()\r\n","android.provider.CallLog.Calls.PRIORITY":"android.provider.CallLog.Calls.PRIORITY\r\n","android.content.res.Resources.Theme.applyStyle(int, boolean)":"android.content.res.Resources.Theme.applyStyle(int, boolean)\r\n","The cached number label, for a custom number type, associated with the\n            phone number, if it exists.":"缓存的数字标签，用于自定义数字类型，与\r\n            电话号码（如果存在）。\r\n","attack time for limiter compressor in milliseconds (ms)":"限制器压缩器的启动时间，以毫秒 (ms) 为单位\r\n","android.app.appsearch.PutDocumentsRequest.Builder":"android.app.appsearch.PutDocumentsRequest.Builder\r\n","android.provider.ContactsContract.RawContacts":"android.provider.ContactsContract.RawContacts\r\n","android.provider.CallLog.Calls.FEATURES_VIDEO":"android.provider.CallLog.Calls.FEATURES_VIDEO\r\n","Returns extras which provide additional application-specific information about the\n            action, or null if none.":"返回 extras 提供额外的应用程序特定信息\r\n            动作，如果没有则为 null。\r\n","Create a new builder.":"创建一个新的构建器。\r\n","isInPictureInPictureMode":"画中画模式\r\n","android.provider.ContactsContract.PresenceColumns.DATA_ID":"android.provider.ContactsContract.PresenceColumns.DATA_ID\r\n"," this request is associated with. If null,\n            this function returns a list of configurations for all admins that declare\n            ":" 此请求与关联。如果为空，\r\n            此函数返回所有声明的管理员的配置列表\r\n            \r\n","Activity Action: Show a settings dialog containing all volume streams.":"活动操作：显示包含所有卷流的设置对话框。\r\n","android.provider.ContactsContract.SyncState.CONTENT_URI":"android.provider.ContactsContract.SyncState.CONTENT_URI\r\n","monitoringType":"监控类型\r\n","android.content.IntentSender.OnFinished":"android.content.IntentSender.OnFinished\r\n","Title of the action.":"动作的标题。\r\n","android.media.MediaCodecInfo.CodecCapabilities.FEATURE_MultipleFrames":"android.media.MediaCodecInfo.CodecCapabilities.FEATURE_MultipleFrames\r\n","#RELEASE":"＃发布\r\n","Returns true if this node is something the user can perform a long click/press on.":"如果此节点是用户可以执行长按/长按的节点，则返回 true。\r\n","android.media.tv.TvContract.Channels.COLUMN_GLOBAL_CONTENT_ID":"android.media.tv.TvContract.Channels.COLUMN_GLOBAL_CONTENT_ID\r\n","Whether the image is animated.":"图片是否动画。\r\n","android.hardware.lights.LightState.Builder.LightState$Builder()":"android.hardware.lights.LightState.Builder.LightState$Builder()\r\n","An error happened within the crypto library used by the drm plugin.":"drm 插件使用的加密库中发生错误。\r\n","android.media.AudioManager.AudioPlaybackCallback":"android.media.AudioManager.AudioPlaybackCallback\r\n","desired for the limiter compressor (N:1)":"限制器压缩器 (N:1) 所需\r\n","Information you can retrieve about a particular Service that is\n            currently running in the system.":"您可以检索的有关特定服务的信息是\r\n            当前在系统中运行。\r\n","a list of supported flash modes. null if flash mode setting\n                    is not supported.":"支持的闪光灯模式列表。如果闪光模式设置为空\r\n                    不支持。\r\n"," event masks.":" 事件掩码。\r\n","android.media.audiofx.Visualizer.getWaveForm(byte[])":"android.media.audiofx.Visualizer.getWaveForm(byte[])\r\n","Encapsulates the profiles available for a codec component.":"封装可用于编解码器组件的配置文件。\r\n","Thrown to indicate that a requested SPI is in use.":"抛出以指示请求的 SPI 正在使用中。\r\n","android.media.JetPlayer.OnJetEventListener.onJetEvent(android.media.JetPlayer, short, byte, byte, byte, byte)":"android.media.JetPlayer.OnJetEventListener.onJetEvent（android.media.JetPlayer，短，字节，字节，字节，字节）\r\n"," if a request is valid and ":" 如果请求有效并且\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format24bitBGR888":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format24bitBGR888\r\n","android.hardware.lights.LightsRequest.Builder.build()":"android.hardware.lights.LightsRequest.Builder.build()\r\n","android.provider.ContactsContract.QuickContact.EXTRA_EXCLUDE_MIMES":"android.provider.ContactsContract.QuickContact.EXTRA_EXCLUDE_MIMES\r\n","Configuration for a property containing another Document.":"包含另一个文档的属性的配置。\r\n","android.provider.Telephony.Carriers.APN":"android.provider.Telephony.Carriers.APN\r\n"," if it should be displayed in ambient, false otherwise\n            otherwise. The default value is ":" 如果它应该在环境中显示，否则为 false\r\n            否则。默认值为\r\n","android.provider.Settings.System.WIFI_STATIC_IP":"android.provider.Settings.System.WIFI_STATIC_IP\r\n","android.app.job.JobInfo.Builder.JobInfo$Builder(int, android.content.ComponentName)":"android.app.job.JobInfo.Builder.JobInfo$Builder(int, android.content.ComponentName)\r\n","android.preference.PreferenceActivity.Header.intent":"android.preference.PreferenceActivity.Header.intent\r\n","Boolean parameter that may be used with ":"可以使用的布尔参数\r\n","Open a stream to write an APK file into the session.":"打开流以将 APK 文件写入会话。\r\n","android.provider.CallLog.Calls.VOICEMAIL_URI":"android.provider.CallLog.Calls.VOICEMAIL_URI\r\n","android.provider.Settings.System.HTTP_PROXY":"android.provider.Settings.System.HTTP_PROXY\r\n","android.provider.Settings.Secure.LOCATION_MODE_OFF":"android.provider.Settings.Secure.LOCATION_MODE_OFF\r\n"," (with a value\n                 expressed in milliseconds),\n                 ":" （有一个值\r\n                 以毫秒表示），\r\n                 \r\n","Sets the install scenario for this session, which describes the expected user journey.":"设置此会话的安装方案，描述预期的用户旅程。\r\n","#setOutboundProxy":"#setOutboundProxy\r\n",", and fill in\n            ":", 并填写\r\n            \r\n","Create a VPN interface using the parameters supplied to this\n            builder.":"使用提供给此的参数创建 VPN 接口\r\n            建设者。\r\n","Bring this task to the foreground.":"将此任务置于前台。\r\n","android.provider.FontsContract.FontRequestCallback.onTypefaceRetrieved(android.graphics.Typeface)":"android.provider.FontsContract.FontRequestCallback.onTypefaceRetrieved(android.graphics.Typeface)\r\n","android.bluetooth.BluetoothSocket":"android.bluetooth.BluetoothSocket\r\n","android.net.sip.SipSession.Listener.onRegistrationTimeout(android.net.sip.SipSession)":"android.net.sip.SipSession.Listener.onRegistrationTimeout(android.net.sip.SipSession)\r\n","android.content.ContextParams.Builder":"android.content.ContextParams.Builder\r\n","android.hardware.lights.LightsRequest.Builder":"android.hardware.lights.LightsRequest.Builder\r\n","Number is not specified or unknown by network.":"号码未指定或网络未知。\r\n"," buffer\n            that the application writes to.":" 缓冲\r\n            应用程序写入。\r\n"," for the recording source definitions.":" 用于记录源定义。\r\n","boolean Whether animators are currently enabled. The default value is\n            ":"boolean 当前是否启用了动画师。默认值为\r\n            \r\n","android.media.audiofx.DynamicsProcessing.Limiter.setReleaseTime(float)":"android.media.audiofx.DynamicsProcessing.Limiter.setReleaseTime（浮动）\r\n","android.provider.Settings.System.RADIO_WIFI":"android.provider.Settings.System.RADIO_WIFI\r\n","This method will not be called in ":"这个方法不会被调用\r\n","android.media.DrmInitData.SchemeInitData.mimeType":"android.media.DrmInitData.SchemeInitData.mimeType\r\n","android.hardware.Camera.Parameters.setGpsLatitude(double)":"android.hardware.Camera.Parameters.setGpsLatitude（双）\r\n","The video format for 576i.":"576i 的视频格式。\r\n","android.media.MediaController2.ControllerCallback.onPlaybackActiveChanged(android.media.MediaController2, boolean)":"android.media.MediaController2.ControllerCallback.onPlaybackActiveChanged(android.media.MediaController2, boolean)\r\n","The MIME type of a single TV channel.":"单个电视频道的 MIME 类型。\r\n","true if video stabilization is enabled":"如果启用了视频稳定，则为真\r\n","Returns the number of different voice prompts.":"返回不同语音提示的数量。\r\n","MediaCodec.CryptoInfo":"媒体编解码器.CryptoInfo\r\n","android.media.MediaCodec.Callback":"android.media.MediaCodec.Callback\r\n","android.media.audiofx.AudioEffect.Descriptor":"android.media.audiofx.AudioEffect.Descriptor\r\n","VmPolicy.Builder#penaltyListener":"VmPolicy.Builder#penaltyListener\r\n","the MediaPlayer for which the discontinuity has occured.":"发生中断的 MediaPlayer。\r\n","Popup characters":"弹出字符\r\n","The string to add to the searches database.":"要添加到搜索数据库的字符串。\r\n","Returns the z-axis offset of the phase center from the origin of the Android sensor\n            coordinate system, in millimeters.":"返回相位中心相对于 Android 传感器原点的 z 轴偏移量\r\n            坐标系，以毫米为单位。\r\n","android.hardware.Camera.Parameters.setAntibanding(java.lang.String)":"android.hardware.Camera.Parameters.setAntibanding(java.lang.String)\r\n","android.provider.Settings.System.DEFAULT_NOTIFICATION_URI":"android.provider.Settings.System.DEFAULT_NOTIFICATION_URI\r\n","#DISPLAY_NAME_ALTERNATIVE":"#DISPLAY_NAME_ALTERNATIVE\r\n","android.provider.Settings.System.WIFI_SLEEP_POLICY_DEFAULT":"android.provider.Settings.System.WIFI_SLEEP_POLICY_DEFAULT\r\n","HardwareBuffer wraps a native ":"HardwareBuffer 包装了一个原生的\r\n","Encapsulates the information needed to display a notification as a bubble.":"封装将通知显示为气泡所需的信息。\r\n","android.provider.ContactsContract.DataColumns.SYNC2":"android.provider.ContactsContract.DataColumns.SYNC2\r\n","SemanticAction":"语义动作\r\n","number of bands configured for the Mbc stage.":"为 Mbc 阶段配置的频段数。\r\n","newState":"新状态\r\n","android.provider.Telephony.CarrierId.getSpecificCarrierIdUriForSubscriptionId(int)":"android.provider.Telephony.CarrierId.getSpecificCarrierIdUriForSubscriptionId(int)\r\n"," if the name could not be encoded.":" 如果无法对名称进行编码。\r\n","android.os.DropBoxManager.Entry.DropBoxManager$Entry(java.lang.String, long, java.io.File, int)":"android.os.DropBoxManager.Entry.DropBoxManager$Entry(java.lang.String, long, java.io.File, int)\r\n","android.hardware.lights.LightsManager.LightsSession.requestLights(android.hardware.lights.LightsRequest)":"android.hardware.lights.LightsManager.LightsSession.requestLights(android.hardware.lights.LightsRequest)\r\n","package name of the client app which uses this session.\n                                     If is is unknown, then just use an empty string.":"使用此会话的客户端应用程序的包名称。\r\n                                     如果是未知的，则只需使用一个空字符串。\r\n","This is invoked when the video size has been changed.":"当视频大小更改时调用此方法。\r\n","android.provider.Telephony.Carriers.MVNO_TYPE":"android.provider.Telephony.Carriers.MVNO_TYPE\r\n","android.hardware.camera2.CameraExtensionSession.StateCallback.onClosed(android.hardware.camera2.CameraExtensionSession)":"android.hardware.camera2.CameraExtensionSession.StateCallback.onClosed(android.hardware.camera2.CameraExtensionSession)\r\n","Result code represents that call is ended with an unknown error.":"结果代码表示调用因未知错误而结束。\r\n","android.media.MediaMuxer":"android.media.MediaMuxer\r\n"," if the activity does not\n                    exist, or is not searchable.":" 如果活动不\r\n                    存在，或不可搜索。\r\n","If something went wrong with a staged session, clients can check this error code to\n            understand which kind of failure happened.":"如果暂存会话出现问题，客户可以检查此错误代码以\r\n            了解发生了哪种故障。\r\n","The version number of this row entry used by TV input services.":"电视输入服务使用的此行条目的版本号。\r\n","android.media.audiofx.DynamicsProcessing.MbcBand.setPostGain(float)":"android.media.audiofx.DynamicsProcessing.MbcBand.setPostGain（浮动）\r\n","The UUID associated with this scheme initialization data.":"与此方案初始化数据关联的 UUID。\r\n","Check whether this session has been enabled by the system. -or- Change the enabled state of the session.":"检查系统是否启用了该会话。 - 或 - 更改会话的启用状态。\r\n","android.hardware.camera2.CameraExtensionSession.ExtensionCaptureCallback.onCaptureStarted(android.hardware.camera2.CameraExtensionSession, android.hardware.camera2.CaptureRequest, long)":"android.hardware.camera2.CameraExtensionSession.ExtensionCaptureCallback.onCaptureStarted（android.hardware.camera2.CameraExtensionSession，android.hardware.camera2.CaptureRequest，长）\r\n","android.inputmethodservice.AbstractInputMethodService.isUiContext()":"android.inputmethodservice.AbstractInputMethodService.isUiContext()\r\n","android.app.assist.AssistStructure.ViewNode.getAutofillId()":"android.app.assist.AssistStructure.ViewNode.getAutofillId()\r\n","Called when taking screenshot has failed.":"截图失败时调用。\r\n","The unique identifier of the disconnected camera.":"断开连接的相机的唯一标识符。\r\n","android.graphics.drawable.Animatable2.AnimationCallback.onAnimationStart(android.graphics.drawable.Drawable)":"android.graphics.drawable.Animatable2.AnimationCallback.onAnimationStart(android.graphics.drawable.Drawable)\r\n","android.provider.FontsContract.FontFamilyResult":"android.provider.FontsContract.FontFamilyResult\r\n","android.graphics.Paint.Align":"android.graphics.Paint.Align\r\n","android.inputmethodservice.InputMethodService.InputMethodImpl.attachToken(android.os.IBinder)":"android.inputmethodservice.InputMethodService.InputMethodImpl.attachToken(android.os.IBinder)\r\n","#SEARCHES_URI":"#SEARCHES_URI\r\n","The OnParameterChangeListener interface defines a method called by the PresetReverb\n            when a parameter value has changed.":"OnParameterChangeListener 接口定义了 PresetReverb 调用的方法\r\n            当参数值改变时。\r\n","android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener":"android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener\r\n","Sets the clockwise rotation angle in degrees relative to the\n            orientation of the camera.":"设置相对于的顺时针旋转角度（以度为单位）\r\n            相机的方向。\r\n","android.media.MediaDrm.ErrorCodes.ERROR_LICENSE_REQUEST_REJECTED":"android.media.MediaDrm.ErrorCodes.ERROR_LICENSE_REQUEST_REJECTED\r\n","#RATING_KEY_BY_OTHERS":"#RATING_KEY_BY_OTHERS\r\n","android.media.MediaDrm.SessionException":"android.media.MediaDrm.SessionException\r\n","android.appwidget.AppWidgetHost.onAppWidgetRemoved(int)":"android.appwidget.AppWidgetHost.onAppWidgetRemoved(int)\r\n","the unscaled screen-relative X coordinate on which to\n                           center the viewport":"未缩放的屏幕相对 X 坐标\r\n                           将视口居中\r\n","android.print.PrintDocumentAdapter.WriteResultCallback.onWriteCancelled()":"android.print.PrintDocumentAdapter.WriteResultCallback.onWriteCancelled()\r\n","a new controller":"一个新的控制器\r\n","whether this bubble should auto expand when it is posted.":"此气泡在发布时是否应自动展开。\r\n","Table that contains information on location data sent via call composer.":"包含有关通过调用编写器发送的位置数据的信息的表。\r\n","Message type: queued to send later.":"消息类型：排队稍后发送。\r\n","android.provider.CalendarContract.EventDays":"android.provider.CalendarContract.EventDays\r\n","android.provider.ContactsContract.StreamItemPhotosColumns":"android.provider.ContactsContract.StreamItemPhotosColumns\r\n","Key to extract the count of\n            ":"提取计数的键\r\n            \r\n","android.animation.PropertyValuesHolder.setEvaluator(android.animation.TypeEvaluator)":"android.animation.PropertyValuesHolder.setEvaluator(android.animation.TypeEvaluator)\r\n","the options that can be used to autofill this view, or ":"可用于自动填充此视图的选项，或\r\n"," to be\n            performed.":" 成为\r\n            执行。\r\n","android.app.admin.SecurityLog.SecurityEvent.getLogLevel()":"android.app.admin.SecurityLog.SecurityEvent.getLogLevel()\r\n","android.app.Notification.BubbleMetadata":"android.app.Notification.BubbleMetadata\r\n","android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentStopped(android.app.FragmentManager, android.app.Fragment)":"android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentStopped(android.app.FragmentManager, android.app.Fragment)\r\n","android.graphics.drawable.Drawable.ConstantState.newDrawable()":"android.graphics.drawable.Drawable.ConstantState.newDrawable()\r\n","Human readable effect name":"人类可读的效果名称\r\n","the ServiceState field to receive updates on":"接收更新的 ServiceState 字段\r\n","Gets the start point (inclusive).":"获取起点（含）。\r\n","This is called when the information about an existing TV input has been updated.":"当有关现有电视输入的信息已更新时调用此方法。\r\n","android.provider.Contacts.ContactMethods.CONTENT_POSTAL_TYPE":"android.provider.Contacts.ContactMethods.CONTENT_POSTAL_TYPE\r\n","android.accessibilityservice.GestureDescription.StrokeDescription.getDuration()":"android.accessibilityservice.GestureDescription.StrokeDescription.getDuration()\r\n","android.app.VoiceInteractor.Request.onCancel()":"android.app.VoiceInteractor.Request.onCancel()\r\n","An InputStream you can create on a ParcelFileDescriptor, which will\n            take care of calling ":"您可以在 ParcelFileDescriptor 上创建的 InputStream，它将\r\n            照顾电话\r\n","android.provider.Contacts.SettingsColumns.VALUE":"android.provider.Contacts.SettingsColumns.VALUE\r\n","android.graphics.Path.Direction":"android.graphics.Path.Direction\r\n","android.provider.Contacts.Photos.CONTENT_DIRECTORY":"android.provider.Contacts.Photos.CONTENT_DIRECTORY\r\n","The key of the preference that was changed, added, or removed. Apps targeting\n                       ":"已更改、添加或删除的首选项键。应用定位\r\n                       \r\n","Returns a map of the names/values of the memory statistics\n            that ":"返回内存统计信息的名称/值的映射\r\n            那\r\n","android.inputmethodservice.KeyboardView.OnKeyboardActionListener.onRelease(int)":"android.inputmethodservice.KeyboardView.OnKeyboardActionListener.onRelease(int)\r\n","Whether the setup wizard has been run before (on first boot), or if\n            it still needs to be run.":"安装向导之前是否运行过（首次启动时），或者是否\r\n            它仍然需要运行。\r\n","The video format for 2160p.":"视频格式为 2160p。\r\n","a list of current metering areas":"当前计量区域列表\r\n","true if the calling app can write to system settings, false otherwise":"如果调用应用程序可以写入系统设置，则为 true，否则为 false\r\n","android.os.Build.VERSION_CODES.ECLAIR_0_1":"android.os.Build.VERSION_CODES.ECLAIR_0_1\r\n","BluetoothManager#getDevicesMatchingConnectionStates(int, int[])":"BluetoothManager#getDevicesMatchingConnectionStates(int, int[])\r\n","android.provider.CalendarContract.EventsColumns.ALL_DAY":"android.provider.CalendarContract.EventsColumns.ALL_DAY\r\n","The name of the device":"设备名称\r\n","android.provider.SimPhonebookContract.ElementaryFiles.PHONE_NUMBER_MAX_LENGTH":"android.provider.SimPhonebookContract.ElementaryFiles.PHONE_NUMBER_MAX_LENGTH\r\n","BluetoothDeviceFilter":"蓝牙设备过滤器\r\n","PhoneLookup#ENTERPRISE_CONTENT_FILTER_URI":"PhoneLookup#ENTERPRISE_CONTENT_FILTER_URI\r\n","\",\n            \"":"\",\r\n            “\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityPostResumed(android.app.Activity)":"android.app.Application.ActivityLifecycleCallbacks.onActivityPostResumed(android.app.Activity)\r\n","android.app.appsearch.SearchResult.Builder.build()":"android.app.appsearch.SearchResult.Builder.build()\r\n","File#mkdirs File.mkdirs()":"文件#mkdirs 文件.mkdirs()\r\n","android.media.session.MediaSessionManager.OnSession2TokensChangedListener.onSession2TokensChanged(java.util.List<android.media.Session2Token>)":"android.media.session.MediaSessionManager.OnSession2TokensChangedListener.onSession2TokensChanged(java.util.List<android.media.Session2Token>)\r\n","AssociationRequest":"关联请求\r\n","android.content.pm.PackageInstaller.SessionParams.setAutoRevokePermissionsMode(boolean)":"android.content.pm.PackageInstaller.SessionParams.setAutoRevokePermissionsMode（布尔值）\r\n","android.hardware.Camera.Parameters.FOCUS_DISTANCE_FAR_INDEX":"android.hardware.Camera.Parameters.FOCUS_DISTANCE_FAR_INDEX\r\n","android.content.pm.PackageInstaller.Session.abandon()":"android.content.pm.PackageInstaller.Session.abandon()\r\n","Rate the current content.":"评价当前内容。\r\n","android.media.EncoderProfiles.VideoProfile.getCodec()":"android.media.EncoderProfiles.VideoProfile.getCodec()\r\n","android.provider.CalendarContract.EventsColumns.DTEND":"android.provider.CalendarContract.EventsColumns.DTEND\r\n","android.media.AudioAttributes.Builder.build()":"android.media.AudioAttributes.Builder.build()\r\n","android.provider.Contacts.People.openContactPhotoInputStream(android.content.ContentResolver, android.net.Uri)":"android.provider.Contacts.People.openContactPhotoInputStream（android.content.ContentResolver，android.net.Uri）\r\n","the offset into the project array where the project\n                   matrix data starts.":"项目数组中的偏移量\r\n                   矩阵数据开始。\r\n","Name for query parameter specifying the type of data usage.":"指定数据使用类型的查询参数的名称。\r\n","android.media.tv.TvInputService.Session.onRelease()":"android.media.tv.TvInputService.Session.onRelease()\r\n","Combine all of the added effects into a ":"将所有添加的效果组合成一个\r\n"," where each element is an interpolation between\n                    the same index in startValue and endValue.":" 其中每个元素是之间的插值\r\n                    startValue 和 endValue 中的相同索引。\r\n","android.provider.Contacts.Intents.Contacts$Intents()":"android.provider.Contacts.Intents.Contacts$Intents()\r\n","android.media.tv.TvContract.Channels.COLUMN_BROWSABLE":"android.media.tv.TvContract.Channels.COLUMN_BROWSABLE\r\n","#putLong(int, long)":"#putLong（整数，长）\r\n","Called when all the buffers of an offloaded track that were queued in the audio system\n            (e.":"当在音频系统中排队的卸载轨道的所有缓冲区时调用\r\n            （即。\r\n","Fragment#instantiate(Context, String, Bundle)":"片段#instantiate（上下文，字符串，捆绑包）\r\n","android.app.ActivityManager.RunningServiceInfo.FLAG_FOREGROUND":"android.app.ActivityManager.RunningServiceInfo.FLAG_FOREGROUND\r\n","the session received during\n                              ":"期间收到的会话\r\n                              \r\n","Called when the fingerprint sensor detects gestures.":"当指纹传感器检测到手势时调用。\r\n","android.provider.ContactsContract.Intents.EXTRA_FORCE_CREATE":"android.provider.ContactsContract.Intents.EXTRA_FORCE_CREATE\r\n","Set the subsample count, clear/encrypted sizes, key, IV and mode fields of\n            a ":"设置子样本计数、清除/加密大小、密钥、IV 和模式字段\r\n            A\r\n","android.provider.Contacts.GroupMembership.GROUP_SYNC_ACCOUNT_TYPE":"android.provider.Contacts.GroupMembership.GROUP_SYNC_ACCOUNT_TYPE\r\n","Get a visual hint that only the background image of this notification should be\n            displayed, and other semantic content should be hidden.":"得到一个视觉提示，只有这个通知的背景图片应该是\r\n            显示，其他语义内容应该隐藏。\r\n","The date the row is last inserted, updated, or marked as deleted, in milliseconds\n            since the epoch.":"该行最后一次插入、更新或标记为已删除的日期，以毫秒为单位\r\n            纪元以来。\r\n"," if no\n                       encryption was used on the OBB.":" 如果不\r\n                       OBB 上使用了加密。\r\n","The mimeType of the image.":"图像的 mimeType。\r\n","\n            entries should be visible in any user interface.":"\r\n            条目应该在任何用户界面中可见。\r\n","android.provider.CallLog.Calls.BLOCK_REASON_BLOCKED_NUMBER":"android.provider.CallLog.Calls.BLOCK_REASON_BLOCKED_NUMBER\r\n","Called when a biometric is valid but not recognized.":"当生物识别有效但未被识别时调用。\r\n","the ideal height, in DPs, for the floating window that app content defined by\n            ":"应用程序内容定义的浮动窗口的理想高度，以 DP 为单位\r\n            \r\n","Update the visited history to acknowledge that a site has been\n             visited.":"更新访问历史记录以确认网站已被访问\r\n             访问过。\r\n","MediaRecorder.AudioSource":"MediaRecorder.AudioSource\r\n","a list of supported preview fps ranges. This method returns a\n                    list with at least one element. Every element is an int array\n                    of two values - minimum fps and maximum fps. The list is\n                    sorted from small to large (first by maximum fps and then\n                    minimum fps).":"支持的预览 fps 范围列表。这个方法返回一个\r\n                    至少包含一个元素的列表。每个元素都是一个 int 数组\r\n                    两个值 - 最小 fps 和最大 fps。清单是\r\n                    从小到大排序（首先按最大 fps，然后\r\n                    最低帧率）。\r\n","a list containing searchable information for all searchable activities\n                    that have the ":"包含所有可搜索活动的可搜索信息的列表\r\n                    有\r\n","android.content.SyncRequest.Builder.build()":"android.content.SyncRequest.Builder.build()\r\n","android.provider.Settings.Global.WIFI_WATCHDOG_ON":"android.provider.Settings.Global.WIFI_WATCHDOG_ON\r\n","Interface definition for a callback to be invoked when a drm event\n            occurs":"drm 事件时调用回调的接口定义\r\n            发生\r\n","Returns any content description associated with the node, which semantically describes\n            its purpose for accessibility and other uses.":"返回与节点关联的任何内容描述，它在语义上描述\r\n            它的可访问性和其他用途的目的。\r\n","android.app.ActivityManager.AppTask.setExcludeFromRecents(boolean)":"android.app.ActivityManager.AppTask.setExcludeFromRecents（布尔值）\r\n","Flags indicating which wallpaper(s) to configure with the new imagery":"指示要使用新图像配置哪些墙纸的标志\r\n","Reference to the row in the RawContacts table holding the contact name.":"引用 RawContacts 表中保存联系人姓名的行。\r\n","android.media.audiofx.BassBoost.getRoundedStrength()":"android.media.audiofx.BassBoost.getRoundedStrength()\r\n","Checks if the specified app can modify system settings.":"检查指定的应用程序是否可以修改系统设置。\r\n","The printer id. Cannot be ":"打印机标识。不可能是\r\n","android.media.audiofx.DynamicsProcessing.MbcBand":"android.media.audiofx.DynamicsProcessing.MbcBand\r\n"," can be used to extend the capabilities of\n            the standard transport controls by exposing app specific actions to\n            ":" 可用于扩展功能\r\n            通过将应用程序的特定操作暴露给标准传输控制\r\n            \r\n","android.media.tv.TvContract.PreviewPrograms":"android.media.tv.TvContract.PreviewPrograms\r\n","android.provider.ContactsContract.Profile.CONTENT_URI":"android.provider.ContactsContract.Profile.CONTENT_URI\r\n","android.hardware.input.InputManager.InputDeviceListener.onInputDeviceRemoved(int)":"android.hardware.input.InputManager.InputDeviceListener.onInputDeviceRemoved(int)\r\n","android.media.MediaDescription.Builder":"android.media.MediaDescription.Builder\r\n","A fragment that displays a dialog window, floating on top of its\n            activity's window.":"显示对话框窗口的片段，浮动在其顶部\r\n            活动的窗口。\r\n","android.provider.ContactsContract.DataColumns.SYNC4":"android.provider.ContactsContract.DataColumns.SYNC4\r\n","android.print.PrintAttributes.Resolution":"android.print.PrintAttributes.分辨率\r\n","android.app.usage.NetworkStats.Bucket.getEndTimeStamp()":"android.app.usage.NetworkStats.Bucket.getEndTimeStamp()\r\n"," explaining\n            why the filter matched the contact.":" 解释\r\n            为什么过滤器与联系人匹配。\r\n","the request for the capture that just begun":"刚刚开始的捕获请求\r\n","android.media.tv.TvContract.Channels.TYPE_DVB_T2":"android.media.tv.TvContract.Channels.TYPE_DVB_T2\r\n","the controller used to register for this callback":"用于注册此回调的控制器\r\n","android.drm.DrmStore.RightsStatus.DrmStore$RightsStatus()":"android.drm.DrmStore.RightsStatus.DrmStore$RightsStatus()\r\n","Opens an InputStream for the contacts's photo and returns the\n            photo as a byte stream.":"为联系人的照片打开一个 InputStream 并返回\r\n            照片作为字节流。\r\n","android.graphics.BitmapFactory.Options.requestCancelDecode()":"android.graphics.BitmapFactory.Options.requestCancelDecode()\r\n","Sets the vibration pattern for notifications posted to this channel.":"设置发布到此频道的通知的振动模式。\r\n","android.appwidget.AppWidgetManager.EXTRA_APPWIDGET_ID":"android.appwidget.AppWidgetManager.EXTRA_APPWIDGET_ID\r\n","The resource ID of a style resource from which to\n                         obtain attribute values.":"从中获取样式资源的资源 ID\r\n                         获取属性值。\r\n","#setAudioSessionId(int)":"#setAudioSessionId(int)\r\n"," new values for keys that can be edited.":" 可以编辑的键的新值。\r\n"," to indicate that there was an error while\n            trying to install an update.":" 表明有一个错误，而\r\n            尝试安装更新。\r\n","android.provider.ContactsContract.QuickContact.EXTRA_PRIORITIZED_MIMETYPE":"android.provider.ContactsContract.QuickContact.EXTRA_PRIORITIZED_MIMETYPE\r\n","android.provider.CalendarContract.CalendarAlerts":"android.provider.CalendarContract.CalendarAlerts\r\n","The season number of this TV program for episodic TV shows.":"此电视节目的剧季号。\r\n","The v array passed as a parameter, containing the specified color\n                    transformed from the source space to the destination space":"作为参数传递的 v 数组，包含指定的颜色\r\n                    从源空间转换到目标空间\r\n","android.media.browse.MediaBrowser.ConnectionCallback.onConnectionFailed()":"android.media.browse.MediaBrowser.ConnectionCallback.onConnectionFailed()\r\n","Returns the integer value set for the property.":"返回为属性设置的整数值。\r\n","ReportSystemUsageRequest":"报告系统使用请求\r\n","android.provider.Settings.System.USB_MASS_STORAGE_ENABLED":"android.provider.Settings.System.USB_MASS_STORAGE_ENABLED\r\n","A wake lock is a mechanism to indicate that your application needs\n            to have the device stay on.":"唤醒锁是一种指示您的应用程序需要的机制\r\n            让设备保持开启状态。\r\n","android.media.tv.TvInputManager.TvInputCallback.onTvInputInfoUpdated(android.media.tv.TvInputInfo)":"android.media.tv.TvInputManager.TvInputCallback.onTvInputInfoUpdated(android.media.tv.TvInputInfo)\r\n","an immutable VcnGatewayConnectionConfig instance":"一个不可变的 VcnGatewayConnectionConfig 实例\r\n"," wants a ":" 想要一个\r\n","android.app.VoiceInteractor.Prompt.getVoicePromptAt(int)":"android.app.VoiceInteractor.Prompt.getVoicePromptAt(int)\r\n","The right margin in mils (thousandths of an inch).":"以密耳（千分之一英寸）为单位的右边距。\r\n","android.media.ApplicationMediaCapabilities.Builder.build()":"android.media.ApplicationMediaCapabilities.Builder.build()\r\n"," if channel is valid.":" 如果通道有效。\r\n","SessionParams#USER_ACTION_UNSPECIFIED":"会话参数#USER_ACTION_UNSPECIFIED\r\n","android.app.admin.DevicePolicyManager.PASSWORD_COMPLEXITY_LOW":"android.app.admin.DevicePolicyManager.PASSWORD_COMPLEXITY_LOW\r\n","android.os.Build.VERSION_CODES#R":"android.os.Build.VERSION_CODES#R\r\n","the view associated with this listener":"与此侦听器关联的视图\r\n","The video format for 360p.":"视频格式为 360p。\r\n","android.media.MediaCodecInfo.CodecProfileLevel.profile":"android.media.MediaCodecInfo.CodecProfileLevel.profile\r\n","android.provider.Settings.Global.BOOT_COUNT":"android.provider.Settings.Global.BOOT_COUNT\r\n","The content:// style URL for the table that holds the deleted\n            groups.":"包含已删除内容的表的 content:// 样式 URL\r\n            团体。\r\n","android.app.AppOpsManager.OnOpNotedCallback.onSelfNoted(android.app.SyncNotedAppOp)":"android.app.AppOpsManager.OnOpNotedCallback.onSelfNoted(android.app.SyncNotedAppOp)\r\n","Called when colors change.":"当颜色改变时调用。\r\n","Whether the Wi-Fi watchdog is enabled for background checking even\n            after it thinks the user has connected to a good access point.":"Wi-Fi看门狗是否启用后台检查甚至\r\n            在它认为用户已经连接到一个好的接入点之后。\r\n","android.media.AudioAttributes.Builder.AudioAttributes$Builder()":"android.media.AudioAttributes.Builder.AudioAttributes$Builder()\r\n","Default value for the pinned position of an unpinned contact.":"未固定联系人的固定位置的默认值。\r\n","True if the event is accepted, false to filter it out.":"如果事件被接受，则为 True，如果将其过滤掉，则为 false。\r\n","Declares that the last write() operation on this track provided the last buffer of this\n            stream.":"声明此轨道上的最后一个 write() 操作提供了此轨道的最后一个缓冲区\r\n            溪流。\r\n","Width of the key, not including the gap":"键的宽度，不包括间隙\r\n","android.provider.Settings.System.WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED":"android.provider.Settings.System.WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED\r\n","android.media.MediaMuxer.OutputFormat.MUXER_OUTPUT_3GPP":"android.media.MediaMuxer.OutputFormat.MUXER_OUTPUT_3GPP\r\n","The date at which the thread was created.":"创建线程的日期。\r\n","android.media.AudioMetadata.Format":"android.media.AudioMetadata.Format\r\n","android.app.assist.AssistStructure.ViewNode.isClickable()":"android.app.assist.AssistStructure.ViewNode.isClickable()\r\n","android.print.PrintAttributes.MediaSize.getHeightMils()":"android.print.PrintAttributes.MediaSize.getHeightMils()\r\n","android.media.audiofx.PresetReverb.OnParameterChangeListener":"android.media.audiofx.PresetReverb.OnParameterChangeListener\r\n","scheme-only part of the document. For example, if the full URL is\n            ":"scheme-only 文档的一部分。例如，如果完整的 URL 是\r\n            \r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV422Flexible":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV422Flexible\r\n","InputReader":"输入阅读器\r\n","android.graphics.Paint.FontMetricsInt":"android.graphics.Paint.FontMetricsInt\r\n","android.app.Activity.startActivityIfNeeded(android.content.Intent, int, android.os.Bundle)":"android.app.Activity.startActivityIfNeeded(android.content.Intent, int, android.os.Bundle)\r\n","android.media.EncoderProfiles.VideoProfile.getMediaType()":"android.media.EncoderProfiles.VideoProfile.getMediaType()\r\n","an index of the line.":"行的索引。\r\n",". If you are running at a\n                       non-native density, you need to manually adjust using\n                       ":".如果你正在跑步\r\n                       非本机密度，您需要使用手动调整\r\n                       \r\n","android.media.MediaRouter.RouteInfo.DEVICE_TYPE_SPEAKER":"android.media.MediaRouter.RouteInfo.DEVICE_TYPE_SPEAKER\r\n","DrmErrorEvent":"Drm错误事件\r\n","3x3 column-major transform matrix from RGB to the profile\n                         connection space CIE XYZ as an array of 9 floats, cannot be null":"从 RGB 到配置文件的 3x3 列主变换矩阵\r\n                         连接空间 CIE XYZ 作为 9 个浮点数的数组，不能为空\r\n","The plugin was unable to write data to the filesystem.":"插件无法将数据写入文件系统。\r\n","The component name of the account used to place or receive the call; in string form.":"用于拨打或接听电话的帐户的组件名称；以字符串形式。\r\n","Contacts-specific settings for various ":"各种联系人的特定设置\r\n","android.location.GnssAntennaInfo.Builder.GnssAntennaInfo$Builder()":"android.location.GnssAntennaInfo.Builder.GnssAntennaInfo$Builder()\r\n","Builds a row of values using either of these approaches:\n            <ul>\n            <li>Values can be added with explicit column ordering using\n            ":"使用以下任一方法构建一行值：\r\n            <ul>\r\n            <li>可以使用显式列顺序添加值\r\n            \r\n"," if the stroke is to be continued.":" 如果要继续中风。\r\n","android.app.AlarmManager.OnAlarmListener.onAlarm()":"android.app.AlarmManager.OnAlarmListener.onAlarm()\r\n","android.provider.CalendarContract.CalendarAlertsColumns.STATE_SCHEDULED":"android.provider.CalendarContract.CalendarAlertsColumns.STATE_SCHEDULED\r\n","android.app.appsearch.SearchSpec.Builder":"android.app.appsearch.SearchSpec.Builder\r\n","android.os.Debug.MemoryInfo.dalvikSharedDirty":"android.os.Debug.MemoryInfo.dalvikSharedDirty\r\n","android.hardware.Camera.Parameters.setMeteringAreas(java.util.List<android.hardware.Camera.Area>)":"android.hardware.Camera.Parameters.setMeteringAreas(java.util.List<android.hardware.Camera.Area>)\r\n","VP9 Profile 3 4:2:2 10-bit HDR":"VP9 配置文件 3 4:2:2 10 位 HDR\r\n","android.app.VoiceInteractor.ConfirmationRequest":"android.app.VoiceInteractor.ConfirmationRequest\r\n"," that will be used by the Builder to construct the\n                       RemoteViews. The Context will not be held past the lifetime of this Builder\n                       object.":" Builder 将使用它来构建\r\n                       远程视图。上下文将不会保留到此构建器的生命周期之后\r\n                       目的。\r\n","android.content.pm.LauncherApps.ShortcutQuery":"android.content.pm.LauncherApps.ShortcutQuery\r\n","the dialog that received the click":"收到点击的对话框\r\n","The content:// style URI for this table, which handles social network stream\n            updates for the user's contacts.":"此表的 content:// 样式 URI，用于处理社交网络流\r\n            用户联系人的更新。\r\n","The file descriptor.":"文件描述符。\r\n"," in the array contains the speaker\n                     identification (e.g. ":" 数组中包含扬声器\r\n                     识别（例如\r\n","AbstractInputMethodSessionImpl#revokeSelf()\n            AbstractInputMethodSessionImpl.setEnabled()":"AbstractInputMethodSessionImpl#revokeSelf()\r\n            AbstractInputMethodSessionImpl.setEnabled()\r\n","#PARAM_ROOM_LEVEL":"#PARAM_ROOM_LEVEL\r\n","ParcelFileDescriptor#MODE_WRITE_ONLY":"包裹文件描述符#MODE_WRITE_ONLY\r\n","An installation that is being actively staged.":"正在积极上演的安装。\r\n","android.provider.Contacts.People":"android.provider.Contacts.People\r\n","java.lang.system.SidentityHashcode（）\r\n\r\njava.lang.System.identityHashCode()\r\n\r\njava.lang.system.SidentityHashcode（）\r\n\r\njava.lang.System.identityHashCode()":"java.lang.system.SidentityHashcode（）\r\n\r\njava.lang.System.identityHashCode()\r\n\r\njava.lang.system.SidentityHashcode（）\r\n\r\njava.lang.System.identityHashCode()\r\n","android.provider.VoicemailContract.Status.CONFIGURATION_STATE_DISABLED":"android.provider.VoicemailContract.Status.CONFIGURATION_STATE_DISABLED\r\n","Gets the value of the field at the specified row and column index as a ":"获取指定行和列索引处的字段值作为\r\n","android.app.appsearch.SearchResult.MatchRange":"android.app.appsearch.SearchResult.MatchRange\r\n","Called when the gesture has completed successfully":"手势成功完成时调用\r\n","android.net.LocalServerSocket.close()":"android.net.LocalServerSocket.close()\r\n","android.app.Activity.startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int, android.os.Bundle)":"android.app.Activity.startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int, android.os.Bundle)\r\n","android.provider.Contacts.Photos.DEFAULT_SORT_ORDER":"android.provider.Contacts.Photos.DEFAULT_SORT_ORDER\r\n","setJniIdentityHashCode\r\n\r\nSetJniIdentityHashCode\r\n\r\nsetJniIdentityHashCode\r\n\r\nSetJniIdentityHashCode":"setJniIdentityHashCode\r\n\r\n设置JniIdentityHashCode\r\n\r\nsetJniIdentityHashCode\r\n\r\n设置JniIdentityHashCode\r\n","AudioPlaybackCaptureConfiguration":"AudioPlaybackCaptureConfiguration\r\n","android.content.pm.PackageInstaller.SessionInfo.getInstallLocation()":"android.content.pm.PackageInstaller.SessionInfo.getInstallLocation()\r\n","IntentFilter#MATCH_CATEGORY_HOST":"IntentFilter#MATCH_CATEGORY_HOST\r\n","Returns true if this node can take input focus.":"如果此节点可以获取输入焦点，则返回 true。\r\n","android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureProgressed(android.hardware.camera2.CameraCaptureSession, android.hardware.camera2.CaptureRequest, android.hardware.camera2.CaptureResult)":"android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureProgressed（android.hardware.camera2.CameraCaptureSession，android.hardware.camera2.CaptureRequest，android.hardware.camera2.CaptureResult）\r\n","android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC4":"android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC4\r\n","Returns the bridge tag of the notification.":"返回通知的桥标记。\r\n","android.os.Build.VERSION_CODES.LOLLIPOP_MR1":"android.os.Build.VERSION_CODES.LOLLIPOP_MR1\r\n","a new drawable object based on this constant state":"基于此常量状态的新可绘制对象\r\n","android.hardware.camera2.CaptureRequest.Builder.addTarget(android.view.Surface)":"android.hardware.camera2.CaptureRequest.Builder.addTarget(android.view.Surface)\r\n","android.app.appsearch.AppSearchSchema.StringPropertyConfig.INDEXING_TYPE_NONE":"android.app.appsearch.AppSearchSchema.StringPropertyConfig.INDEXING_TYPE_NONE\r\n","android.app.DownloadManager.Request.DownloadManager$Request(android.net.Uri)":"android.app.DownloadManager.Request.DownloadManager$请求(android.net.Uri)\r\n","android.app.Notification.setLatestEventInfo(android.content.Context, java.lang.CharSequence, java.lang.CharSequence, android.app.PendingIntent)":"android.app.Notification.setLatestEventInfo（android.content.Context，java.lang.CharSequence，java.lang.CharSequence，android.app.PendingIntent）\r\n","android.provider.ContactsContract.DataColumns.DATA10":"android.provider.ContactsContract.DataColumns.DATA10\r\n",", which can be queried\n             with ":"，可以查询\r\n             和\r\n","android.inputmethodservice.Keyboard.Key.x":"android.inputmethodservice.Keyboard.Key.x\r\n","android.provider.CallLog.Calls.USER_MISSED_CALL_SCREENING_SERVICE_SILENCED":"android.provider.CallLog.Calls.USER_MISSED_CALL_SCREENING_SERVICE_SILENCED\r\n","android.provider.Telephony.Carriers.MCC":"android.provider.Telephony.Carriers.MCC\r\n","android.provider.ContactsContract.Contacts.CONTENT_LOOKUP_URI":"android.provider.ContactsContract.Contacts.CONTENT_LOOKUP_URI\r\n","android.app.job.JobInfo.TriggerContentUri.getFlags()":"android.app.job.JobInfo.TriggerContentUri.getFlags()\r\n","#MEDIA_ERROR_UNSUPPORTED":"#MEDIA_ERROR_UNSUPPORTED\r\n","DataOutputStream dos;\n                             dos.writeInt(checksum.getType());\n                             dos.writeInt(checksum.getValue().length);\n                             dos.write(checksum.getValue());":"数据输出流 dos;\r\n                             dos.writeInt(checksum.getType());\r\n                             dos.writeInt(checksum.getValue().length);\r\n                             dos.write(checksum.getValue());\r\n","The pages that were written. Cannot be ":"所写的页面。不可能是\r\n","android.hardware.fingerprint.FingerprintManager.AuthenticationCallback.onAuthenticationError(int, java.lang.CharSequence)":"android.hardware.fingerprint.FingerprintManager.AuthenticationCallback.onAuthenticationError(int, java.lang.CharSequence)\r\n","android.provider.UserDictionary.Words.FREQUENCY":"android.provider.UserDictionary.Words.FREQUENCY\r\n","android.provider.CalendarContract.EventsColumns.ACCESS_PUBLIC":"android.provider.CalendarContract.EventsColumns.ACCESS_PUBLIC\r\n","android.media.AudioRecord.MetricsConstants.ENCODING":"android.media.AudioRecord.MetricsConstants.ENCODING\r\n","android.app.Fragment.onMultiWindowModeChanged(boolean, android.content.res.Configuration)":"android.app.Fragment.onMultiWindowModeChanged（布尔值，android.content.res.Configuration）\r\n","android.os.Build.Partition.PARTITION_NAME_SYSTEM":"android.os.Build.Partition.PARTITION_NAME_SYSTEM\r\n","the pages for this notification":"此通知的页面\r\n","android.media.MediaController2.Builder.build()":"android.media.MediaController2.Builder.build()\r\n","android.media.tv.TvInputService.Session.onSurfaceChanged(int, int, int)":"android.media.tv.TvInputService.Session.onSurfaceChanged(int, int, int)\r\n","android.provider.Telephony.MmsSms.NO_ERROR":"android.provider.Telephony.MmsSms.NO_ERROR\r\n","android.content.pm.LauncherApps.PinItemRequest.getExtras()":"android.content.pm.LauncherApps.PinItemRequest.getExtras()\r\n","android.provider.ContactsContract.RawContacts.getLocalAccountType(android.content.Context)":"android.provider.ContactsContract.RawContacts.getLocalAccountType(android.content.Context)\r\n","\n            for a set of AppWidgets.":"\r\n            对于一组 AppWidget。\r\n","a list of Size object. This method will always return a list\n                    with at least two elements. Size 0,0 (no thumbnail) is always\n                    supported.":"Size 对象的列表。此方法将始终返回一个列表\r\n                    至少有两个元素。大小 0,0（无缩略图）始终\r\n                    支持的。\r\n","the frame rate setting (frames per second)":"帧速率设置（每秒帧数）\r\n",", determine what application content\n            needs to be backed up, write it to ":", 确定申请内容\r\n            需要备份，写入\r\n","This indicates that the key used for decryption is no longer\n            valid due to license term expiration.":"这表明用于解密的密钥不再是\r\n            由于许可期限到期而有效。\r\n","android.provider.Contacts.PresenceColumns.IM_HANDLE":"android.provider.Contacts.PresenceColumns.IM_HANDLE\r\n","the locale type for this word. It should be one of\n             ":"这个词的语言环境类型。它应该是其中之一\r\n             \r\n","android.inputmethodservice.Keyboard.Key.y":"android.inputmethodservice.Keyboard.Key.y\r\n","android.media.session.MediaSession.QueueItem.UNKNOWN_ID":"android.media.session.MediaSession.QueueItem.UNKNOWN_ID\r\n","android.inputmethodservice.InputMethodService.InputMethodSessionImpl.updateExtractedText(int, android.view.inputmethod.ExtractedText)":"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.updateExtractedText(int, android.view.inputmethod.ExtractedText)\r\n","retrieve-status":"检索状态\r\n","media format with optional feature directives.":"具有可选功能指令的媒体格式。\r\n","android.provider.ContactsContract.ContactOptionsColumns":"android.provider.ContactsContract.ContactOptionsColumns\r\n","android.hardware.camera2.params.MandatoryStreamCombination.MandatoryStreamInformation.isInput()":"android.hardware.camera2.params.MandatoryStreamCombination.MandatoryStreamInformation.isInput()\r\n"," was not able to complete successfully.":" 无法成功完成。\r\n","android.hardware.Camera.Parameters.isZoomSupported()":"android.hardware.Camera.Parameters.isZoomSupported()\r\n"," setting that indicates that the directory\n            can only produce small size thumbnails of contact photos.":" 指示目录的设置\r\n            只能生成联系人照片的小尺寸缩略图。\r\n","Whether this group should be synced if the SYNC_EVERYTHING settings is false\n            for this group's account.":"如果 SYNC_EVERYTHING 设置为 false，是否应该同步该组\r\n            对于这个组的帐户。\r\n","Mode to render the content for display on a screen.":"呈现内容以在屏幕上显示的模式。\r\n","Queries the virtual speaker angles (azimuth and elevation) for a combination of a channel\n            mask and virtualization mode.":"查询通道组合的虚拟扬声器角度（方位角和仰角）\r\n            屏蔽和虚拟化模式。\r\n","android.graphics.pdf.PdfRenderer.Page.close()":"android.graphics.pdf.PdfRenderer.Page.close()\r\n","android.app.appsearch.AppSearchSchema.StringPropertyConfig.TOKENIZER_TYPE_NONE":"android.app.appsearch.AppSearchSchema.StringPropertyConfig.TOKENIZER_TYPE_NONE\r\n","Constant indicating that an unknown error occurred while processing this staged session.":"常量，指示在处理此暂存会话时发生未知错误。\r\n","\n               will still be able to process content with a mask of\n               ":"\r\n               仍将能够处理带有掩码的内容\r\n               \r\n","android.media.MediaRouter.RouteInfo.PLAYBACK_TYPE_LOCAL":"android.media.MediaRouter.RouteInfo.PLAYBACK_TYPE_LOCAL\r\n","android.app.ActivityManager.RunningTaskInfo.id":"android.app.ActivityManager.RunningTaskInfo.id\r\n","android.provider.ContactsContract.RawContactsEntity":"android.provider.ContactsContract.RawContactsEntity\r\n","Called to notify the client that this proxy object has been\n            disconnected from the service.":"调用以通知客户端此代理对象已被\r\n            与服务断开连接。\r\n","android.app.NotificationChannel.EDIT_ZEN":"android.app.NotificationChannel.EDIT_ZEN\r\n","android.media.MediaRouter.RouteInfo.getVolumeMax()":"android.media.MediaRouter.RouteInfo.getVolumeMax()\r\n","android.media.metrics.PlaybackStateEvent.Builder.PlaybackStateEvent$Builder()":"android.media.metrics.PlaybackStateEvent.Builder.PlaybackStateEvent$Builder()\r\n","android.provider.ContactsContract.PhoneLookupColumns.DATA_ID":"android.provider.ContactsContract.PhoneLookupColumns.DATA_ID\r\n","android.provider.CalendarContract.EventsColumns.AVAILABILITY":"android.provider.CalendarContract.EventsColumns.AVAILABILITY\r\n","the route to create a controller with":"创建控制器的路径\r\n","android.media.RemoteControlClient.OnMetadataUpdateListener":"android.media.RemoteControlClient.OnMetadataUpdateListener\r\n","The episode number of this TV program for episodic TV shows.":"此电视节目的剧集编号。\r\n"," MIME-types\n                       to exclude when showing this dialog. For example, when\n                       already viewing the contact details card, this can be used\n                       to omit the details entry from the dialog.":" MIME 类型\r\n                       显示此对话框时排除。例如，当\r\n                       已经查看了联系人详细信息卡片，可以使用\r\n                       从对话框中省略详细信息条目。\r\n","current gain of band in decibels (dB)":"频带的当前增益，以分贝 (dB) 为单位\r\n","A string associated with an ":"与一个关联的字符串\r\n","android.media.session.MediaSession.Callback.onSetPlaybackSpeed(float)":"android.media.session.MediaSession.Callback.onSetPlaybackSpeed(浮动)\r\n","Called when the accessibility button in the system's navigation area is clicked.":"单击系统导航区域中的辅助功能按钮时调用。\r\n"," tag\n            in addition to dynamic creation.":" 标签\r\n            除了动态创建。\r\n","android.app.appsearch.StorageInfo.Builder":"android.app.appsearch.StorageInfo.Builder\r\n","android.os.SystemClock#elapsedRealtime()":"android.os.SystemClock#elapsedRealtime()\r\n","the session returned by ":"返回的会话\r\n","android.os.PowerManager.WakeLock.release()":"android.os.PowerManager.WakeLock.release()\r\n","the system time at which the state change was reported,\n                expressed in ms. Based on ":"报告状态更改的系统时间，\r\n                以毫秒表示基于\r\n","android.provider.CalendarContract.CalendarAlertsColumns.STATE_FIRED":"android.provider.CalendarContract.CalendarAlertsColumns.STATE_FIRED\r\n","Gets the volume level of the early reflections. -or- Sets the volume level of the early reflections.":"获取早期反射的音量级别。 - 或 - 设置早期反射的音量级别。\r\n","a list of Size object. This method will always return a list\n                    with at least one element.":"Size 对象的列表。此方法将始终返回一个列表\r\n                    至少有一个元素。\r\n","android.media.MediaParser.SeekMap.getSeekPoints(long)":"android.media.MediaParser.SeekMap.getSeekPoints(长)\r\n","Content type for the location table.":"位置表的内容类型。\r\n","Array representing corrections on a spherical mapping.":"表示球面映射校正的数组。\r\n","android.media.MediaPlayer.OnPreparedListener":"android.media.MediaPlayer.OnPreparedListener\r\n"," returns the\n              actual size in frames of the buffer created, which\n              determines the minimum frequency to write\n              to the streaming ":" 返回\r\n              创建的缓冲区的实际大小（以帧为单位），\r\n              确定写入的最低频率\r\n              到流媒体\r\n"," to indicate that the server reported an internal\n             error to the data channel.":" 表明服务器报告了一个内部\r\n             数据通道错误。\r\n","H MR2.":"H MR2。\r\n","android.media.MediaRouter.RouteInfo.PLAYBACK_VOLUME_VARIABLE":"android.media.MediaRouter.RouteInfo.PLAYBACK_VOLUME_VARIABLE\r\n","android.provider.ContactsContract.DataColumns.SYNC1":"android.provider.ContactsContract.DataColumns.SYNC1\r\n","An optional extra used with ":"一个可选的额外使用\r\n","Time to wait in milliseconds before the activity is created.":"创建活动之前等待的时间（以毫秒为单位）。\r\n","android.content.ContentResolver.MimeTypeInfo.getIcon()":"android.content.ContentResolver.MimeTypeInfo.getIcon()\r\n","HardwareSession":"硬件会议\r\n"," object that contains new information.":" 包含新信息的对象。\r\n","android.os.MessageQueue.OnFileDescriptorEventListener":"android.os.MessageQueue.OnFileDescriptorEventListener\r\n","android.graphics.ImageDecoder.DecodeException.getError()":"android.graphics.ImageDecoder.DecodeException.getError()\r\n","android.content.pm.ActivityInfo#CONFIG_TOUCHSCREEN\n            PackageManager.ActivityInfo.CONFIG_TOUCHSCREEN":"android.content.pm.ActivityInfo#CONFIG_TOUCHSCREEN\r\n            PackageManager.ActivityInfo.CONFIG_TOUCHSCREEN\r\n","#MEDIA_RECORDER_INFO_UNKNOWN":"#MEDIA_RECORDER_INFO_UNKNOWN\r\n","android.app.appsearch.AppSearchSchema.PropertyConfig":"android.app.appsearch.AppSearchSchema.PropertyConfig\r\n"," if this icon should not be displayed, false otherwise.\n            The default value is ":" 如果不应显示此图标，则为 false。\r\n            默认值为\r\n","Execute the previously prepared insert or replace using the bound values\n            since the last call to prepareForInsert or prepareForReplace.":"使用绑定值执行先前准备的插入或替换\r\n            自上次调用 prepareForInsert 或 prepareForReplace 以来。\r\n","A Drawable can call this to schedule the next frame of its\n            animation.":"Drawable 可以调用它来安排其下一帧\r\n            动画片。\r\n","android.provider.Telephony.BaseMmsColumns.REPORT_ALLOWED":"android.provider.Telephony.BaseMmsColumns.REPORT_ALLOWED\r\n","android.app.ActivityManager.ProcessErrorStateInfo.longMsg":"android.app.ActivityManager.ProcessErrorStateInfo.longMsg\r\n","android.provider.CalendarContract.CalendarEntity.CONTENT_URI":"android.provider.CalendarContract.CalendarEntity.CONTENT_URI\r\n","writeMode":"写模式\r\n","android.os.UserManager.UserOperationException":"android.os.UserManager.UserOperationException\r\n","Encodes an RGB value from linear space to this color space's\n            \"gamma space\".":"将 RGB 值从线性空间编码到此颜色空间的\r\n            “伽马空间”。\r\n","android.provider.Settings.System.DTMF_TONE_WHEN_DIALING":"android.provider.Settings.System.DTMF_TONE_WHEN_DIALING\r\n","Indicates that the entry is Video Telephony (VT) capable on the\n            current carrier.":"表示该条目支持视频电话 (VT)\r\n            当前运营商。\r\n","Callback for receiving ":"接收回调\r\n","Additional column returned by\n            ":"返回的附加列\r\n            \r\n","android.provider.CalendarContract.Instances.CONTENT_SEARCH_URI":"android.provider.CalendarContract.Instances.CONTENT_SEARCH_URI\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityResumed(android.app.Activity)":"android.app.Application.ActivityLifecycleCallbacks.onActivityResumed(android.app.Activity)\r\n","The total output metadata from the capture, including the\n            final capture parameters and the state of the camera system during\n            capture.":"捕获的总输出元数据，包括\r\n            最终捕获参数和相机系统的状态\r\n            捕获。\r\n","android.media.audiofx.Visualizer.getFft(byte[])":"android.media.audiofx.Visualizer.getFft(byte[])\r\n","Confirms an operation with the user via the trusted system\n            VoiceInteractionService.":"通过可信系统与用户确认操作\r\n            语音交互服务。\r\n","android.app.ActivityManager.TaskDescription":"android.app.ActivityManager.TaskDescription\r\n","the dismissal id of the notification or null if it has not been set.":"通知的解雇 ID，如果尚未设置，则为 null。\r\n","Get the opaque message data":"获取不透明消息数据\r\n","android.app.ActivityManager.ProcessErrorStateInfo.condition":"android.app.ActivityManager.ProcessErrorStateInfo.condition\r\n","Callback called when SET_REPORT is received from remote host.":"从远程主机接收到 SET_REPORT 时调用的回调。\r\n","android.nfc.NdefRecord.NdefRecord(short, byte[], byte[], byte[])":"android.nfc.NdefRecord.NdefRecord（短，字节[]，字节[]，字节[]）\r\n","Parameters for creating a new ":"新建参数\r\n","a list of supported preview formats. This method will always\n                    return a list with at least one element.":"支持的预览格式列表。这个方法会一直\r\n                    返回包含至少一个元素的列表。\r\n","Thrown when an error occurs while parsing a media stream.":"解析媒体流时发生错误时抛出。\r\n","Column definitions for the mixed bookmark and history items available\n            at ":"可用的混合书签和历史项目的列定义\r\n            在\r\n","TvContract.RecordedPrograms":"电视合同.RecordedPrograms\r\n","android.net.vcn.VcnGatewayConnectionConfig.Builder":"android.net.vcn.VcnGatewayConnectionConfig.Builder\r\n","AppSearchSchema objects":"AppSearchSchema 对象\r\n","Whether or not the call has been acknowledged":"呼叫是否已被确认\r\n","android.provider.Telephony.ThreadsColumns":"android.provider.Telephony.ThreadsColumns\r\n","android.drm.DrmStore.Action":"android.drm.DrmStore.Action\r\n","#MODE_LARGE":"#MODE_LARGE\r\n","event number for this notification":"此通知的事件编号\r\n","Number is blocked by user.":"号码被用户屏蔽。\r\n","android.os.Build.VERSION_CODES.R":"android.os.Build.VERSION_CODES.R\r\n","android.provider.Contacts.ContactMethods.encodePredefinedImProtocol(int)":"android.provider.Contacts.ContactMethods.encodePredefinedImProtocol(int)\r\n","android.media.session.MediaController.Callback.onSessionDestroyed()":"android.media.session.MediaController.Callback.onSessionDestroyed()\r\n","whether the finger was released inside the key. Works only on Android M and\n            later. See the method document for details.":"手指是否在键内松开。仅适用于 Android M 和\r\n            之后。详见方法文档。\r\n","android.os.VibrationEffect.Composition.PRIMITIVE_QUICK_FALL":"android.os.VibrationEffect.Composition.PRIMITIVE_QUICK_FALL\r\n","android.inputmethodservice.InputMethodService.InputMethodSessionImpl.updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)":"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)\r\n","The remote control key preset number that is assigned to this channel.":"分配给该频道的遥控钥匙预设编号。\r\n","android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentViewCreated(android.app.FragmentManager, android.app.Fragment, android.view.View, android.os.Bundle)":"android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentViewCreated(android.app.FragmentManager, android.app.Fragment, android.view.View, android.os.Bundle)\r\n","The protocol to use to connect to this APN.":"用于连接到此 APN 的协议。\r\n","android.location.GnssStatus.Callback.onStopped()":"android.location.GnssStatus.Callback.onStopped()\r\n","android.media.browse.MediaBrowser.ConnectionCallback.onConnected()":"android.media.browse.MediaBrowser.ConnectionCallback.onConnected()\r\n","android.provider.CallLog.Calls.CALL_SCREENING_COMPONENT_NAME":"android.provider.CallLog.Calls.CALL_SCREENING_COMPONENT_NAME\r\n","android.hardware.display.DisplayManager#getDisplay DisplayManager.getDisplay()":"android.hardware.display.DisplayManager#getDisplay DisplayManager.getDisplay()\r\n","android.app.RemoteInput.Builder.build()":"android.app.RemoteInput.Builder.build()\r\n","android.hardware.camera2.CaptureRequest.Key.CaptureRequest$Key(java.lang.String, java.lang.Class<T>)":"android.hardware.camera2.CaptureRequest.Key.CaptureRequest$Key(java.lang.String, java.lang.Class<T>)\r\n","Called when the controller is successfully connected to the session.":"当控制器成功连接到会话时调用。\r\n","AudioRecord#setNotificationMarkerPosition(int)":"AudioRecord#setNotificationMarkerPosition(int)\r\n",": This process does not exist.":": 这个进程不存在。\r\n","The drawable finished the animation.":"drawable 完成了动画。\r\n","audioAdjustMode":"音频调整模式\r\n","android.media.Session2Command.Result.RESULT_ERROR_UNKNOWN_ERROR":"android.media.Session2Command.Result.RESULT_ERROR_UNKNOWN_ERROR\r\n","android.preference.PreferenceActivity.Header.getTitle(android.content.res.Resources)":"android.preference.PreferenceActivity.Header.getTitle(android.content.res.Resources)\r\n"," for managing\n            one or more ":" 用于管理\r\n            一个或多个\r\n","android.media.tv.TvInputService.RecordingSession.onTune(android.net.Uri)":"android.media.tv.TvInputService.RecordingSession.onTune(android.net.Uri)\r\n","android.media.audiofx.PresetReverb.Settings.PresetReverb$Settings(java.lang.String)":"android.media.audiofx.PresetReverb.Settings.PresetReverb$Settings(java.lang.String)\r\n","android.hardware.biometrics.BiometricPrompt.AuthenticationResult":"android.hardware.biometrics.BiometricPrompt.AuthenticationResult\r\n","android.provider.CalendarContract.AttendeesColumns.ATTENDEE_IDENTITY":"android.provider.CalendarContract.AttendeesColumns.ATTENDEE_IDENTITY\r\n","android.preference.PreferenceActivity.Header.breadCrumbTitleRes":"android.preference.PreferenceActivity.Header.breadCrumbTitleRes\r\n","android.app.blob.BlobStoreManager.Session.close()":"android.app.blob.BlobStoreManager.Session.close()\r\n","bufferSizeInBytes":"bufferSizeInBytes\r\n","android.provider.Settings.System.putConfiguration(android.content.ContentResolver, android.content.res.Configuration)":"android.provider.Settings.System.putConfiguration（android.content.ContentResolver，android.content.res.Configuration）\r\n","android.media.tv.TvInputService.RecordingSession.onTune(android.net.Uri, android.os.Bundle)":"android.media.tv.TvInputService.RecordingSession.onTune(android.net.Uri, android.os.Bundle)\r\n","#TYPE_INPUT":"#TYPE_INPUT\r\n","android.os.Build.VERSION.RELEASE_OR_CODENAME":"android.os.Build.VERSION.RELEASE_OR_CODENAME\r\n",". To use a NotificationChannel, it must first be\n                       created using ":".要使用 NotificationChannel，它必须首先是\r\n                       使用创建\r\n","This class provides access to a UDP encapsulation Socket.":"此类提供对 UDP 封装 Socket 的访问。\r\n"," to indicate that the notification channel\n            connection is not working.":" 表示通知通道\r\n            连接不工作。\r\n","android.os.MessageQueue.OnFileDescriptorEventListener.onFileDescriptorEvents(java.io.FileDescriptor, int)":"android.os.MessageQueue.OnFileDescriptorEventListener.onFileDescriptorEvents(java.io.FileDescriptor, int)\r\n","#MODE":"＃模式\r\n","android.app.assist.AssistStructure.ViewNode.TEXT_COLOR_UNDEFINED":"android.app.assist.AssistStructure.ViewNode.TEXT_COLOR_UNDEFINED\r\n","android.provider.Settings.System.TIME_12_24":"android.provider.Settings.System.TIME_12_24\r\n","Returns true if the route is in the process of connecting and is not\n            yet ready for use.":"如果路由处于连接过程中而不是，则返回 true\r\n            尚未准备好使用。\r\n","android.print.PrinterInfo.Builder.PrinterInfo$Builder(android.print.PrinterId, java.lang.String, int)":"android.print.PrinterInfo.Builder.PrinterInfo$Builder(android.print.PrinterId, java.lang.String, int)\r\n","Rethrow this exception when we know it came from the system server.":"当我们知道它来自系统服务器时重新抛出这个异常。\r\n","android.media.audiofx.DynamicsProcessing.Stage.setEnabled(boolean)":"android.media.audiofx.DynamicsProcessing.Stage.setEnabled（布尔值）\r\n","android.provider.Telephony.BaseMmsColumns.CONTENT_CLASS":"android.provider.Telephony.BaseMmsColumns.CONTENT_CLASS\r\n","\n            calls of type VENDOR_DEFINED.":"\r\n            VENDOR_DEFINED 类型的调用。\r\n","android.media.EncoderProfiles.AudioProfile.getBitrate()":"android.media.EncoderProfiles.AudioProfile.getBitrate()\r\n","android.media.MediaController2.ControllerCallback.onConnected(android.media.MediaController2, android.media.Session2CommandGroup)":"android.media.MediaController2.ControllerCallback.onConnected(android.media.MediaController2, android.media.Session2CommandGroup)\r\n","Key to extract the number of tracks in the container\n            from the ":"提取容器中轨道数的键\r\n            来自\r\n","the desired picture format\n                                (<var>ImageFormat.NV21</var>,\n                                 <var>ImageFormat.RGB_565</var>, or\n                                 <var>ImageFormat.JPEG</var>)":"所需的图片格式\r\n                                (<var>ImageFormat.NV21</var>,\r\n                                 <var>ImageFormat.RGB_565</var>，或\r\n                                 <var>图像格式.JPEG</var>)\r\n","the new ContentProviderOperation that assigns the data array as the\n            account's sync state":"将数据数组指定为新的 ContentProviderOperation\r\n            帐户的同步状态\r\n","TvInputManager#TIME_SHIFT_STATUS_UNSUPPORTED":"TvInputManager#TIME_SHIFT_STATUS_UNSUPPORTED\r\n","Get a hint that this notification's content intent will launch an ":"得到提示，该通知的内容意图将启动一个\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityPostDestroyed(android.app.Activity)":"android.app.Application.ActivityLifecycleCallbacks.onActivityPostDestroyed(android.app.Activity)\r\n","android.provider.Settings.Global.getInt(android.content.ContentResolver, java.lang.String)":"android.provider.Settings.Global.getInt(android.content.ContentResolver, java.lang.String)\r\n","android.media.MediaCodecInfo.VideoCapabilities.getSupportedHeights()":"android.media.MediaCodecInfo.VideoCapabilities.getSupportedHeights()\r\n","Immutable description of stroke that can be part of a gesture.":"笔划的不可变描述可以是手势的一部分。\r\n","Flag that reflects whether this contact represents the user's\n            personal profile entry.":"反映此联系人是否代表用户的标志\r\n            个人资料条目。\r\n","This class represents meta-data that describes a PDF ":"此类表示描述 PDF 的元数据\r\n","#RECORD_NUMBER":"＃记录编号\r\n","android.graphics.drawable.Drawable.Callback.scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)":"android.graphics.drawable.Drawable.Callback.scheduleDrawable（android.graphics.drawable.Drawable，java.lang.Runnable，长）\r\n","Return the total number of method-invocation instructions\n            executed globally.":"返回方法调用指令的总数\r\n            全局执行。\r\n","android.media.audiofx.DynamicsProcessing.Stage.isEnabled()":"android.media.audiofx.DynamicsProcessing.Stage.isEnabled()\r\n","android.content.pm.LauncherApps.Callback.onPackagesSuspended(java.lang.String[], android.os.UserHandle, android.os.Bundle)":"android.content.pm.LauncherApps.Callback.onPackagesSuspended(java.lang.String[], android.os.UserHandle, android.os.Bundle)\r\n","Gets the value of this view.":"获取此视图的值。\r\n","A user facing carrier name.":"面向用户的运营商名称。\r\n","the mask of the measurements,\n                ":"测量的掩码，\r\n                \r\n","Called as the first step of the Activity being resumed.":"作为恢复 Activity 的第一步调用。\r\n","\n            to another device.":"\r\n            到另一个设备。\r\n","Build information for a particular device partition.":"特定设备分区的构建信息。\r\n","android.provider.CalendarContract.CalendarCacheColumns.VALUE":"android.provider.CalendarContract.CalendarCacheColumns.VALUE\r\n","android.os.Debug.MemoryInfo.getTotalPrivateClean()":"android.os.Debug.MemoryInfo.getTotalPrivateClean()\r\n","android.media.MediaRouter.UserRouteInfo.setIconDrawable(android.graphics.drawable.Drawable)":"android.media.MediaRouter.UserRouteInfo.setIconDrawable(android.graphics.drawable.Drawable)\r\n","supported picture formats. This method will always return a\n                    list with at least one element.":"支持的图片格式。此方法将始终返回一个\r\n                    至少包含一个元素的列表。\r\n","Called when the application requests to stop TV program recording.":"当应用程序请求停止电视节目录制时调用。\r\n","android.hardware.Camera.Parameters.getAntibanding()":"android.hardware.Camera.Parameters.getAntibanding()\r\n","The global content ID of this TV channel, as a URI.":"此电视频道的全局内容 ID，作为 URI。\r\n","android.hardware.location.GeofenceHardwareCallback":"android.hardware.location.GeofenceHardwareCallback\r\n","The MediaSync object.":"媒体同步对象。\r\n"," for\n            all device admins.":" 为了\r\n            所有设备管理员。\r\n","number of bands for Mbc stage. This can't be changed later.":"Mbc 阶段的条带数。这以后无法更改。\r\n","This class is used to retrieved various statistics about the memory mappings for this\n            process.":"此类用于检索有关此内存映射的各种统计信息\r\n            过程。\r\n","android.media.browse.MediaBrowser.ConnectionCallback.onConnectionSuspended()":"android.media.browse.MediaBrowser.ConnectionCallback.onConnectionSuspended()\r\n","The content:// style URL for querying an instance range in the managed profile.":"用于在托管配置文件中查询实例范围的 content:// 样式 URL。\r\n","The desired command to perform.":"要执行的所需命令。\r\n","android.provider.Settings.System.SCREEN_BRIGHTNESS":"android.provider.Settings.System.SCREEN_BRIGHTNESS\r\n","android.media.MediaController2.ControllerCallback":"android.media.MediaController2.ControllerCallback\r\n","A constructor that constructs a gesture stroke from a list of gesture points.":"从手势点列表构造手势笔划的构造函数。\r\n","Returns the range of supported video heights.":"返回支持的视频高度范围。\r\n","Constructs a RectEvaluator that modifies and returns ":"构造一个修改并返回的 RectEvaluator\r\n","android.net.LocalSocket.getAncillaryFileDescriptors()":"android.net.LocalSocket.getAncillaryFileDescriptors()\r\n","android.media.audiofx.AudioEffect.OnEnableStatusChangeListener":"android.media.audiofx.AudioEffect.OnEnableStatusChangeListener\r\n","android.media.tv.TvInputService.Session.onKeyMultiple(int, int, android.view.KeyEvent)":"android.media.tv.TvInputService.Session.onKeyMultiple(int, int, android.view.KeyEvent)\r\n","I.":"我。\r\n","If set to true, the decoder will return null (no bitmap), but\n            the ":"如果设置为 true，解码器将返回 null（无位图），但是\r\n            这\r\n","android.media.tv.TvInputService.Session.onSetStreamVolume(float)":"android.media.tv.TvInputService.Session.onSetStreamVolume(浮动)\r\n","android.app.Activity.onPictureInPictureModeChanged(boolean, android.content.res.Configuration)":"android.app.Activity.onPictureInPictureModeChanged（布尔值，android.content.res.Configuration）\r\n","Represents the battery being too low to apply an update.":"表示电池电量太低，无法应用更新。\r\n"," is less than the\n              minimum buffer size for the output sink, it is increased to the minimum\n              buffer size.\n              The method ":" 小于\r\n              输出接收器的最小缓冲区大小，它增加到最小值\r\n              缓冲区大小。\r\n              方法\r\n","VP9 Profile 2 4:2:0 10-bit HDR10Plus":"VP9 配置文件 2 4:2:0 10 位 HDR10Plus\r\n","AppWidgetManager#ACTION_APPWIDGET_DISABLED":"AppWidgetManager#ACTION_APPWIDGET_DISABLED\r\n"," if public access has been allowed by using\n            ":" 如果通过使用允许公共访问\r\n            \r\n","Indicates that a package was removed from the specified profile.":"指示已从指定配置文件中删除包。\r\n","android.media.audiofx.DynamicsProcessing.MbcBand.setRatio(float)":"android.media.audiofx.DynamicsProcessing.MbcBand.setRatio（浮动）\r\n","Returns true if the buffer is mappable.":"如果缓冲区是可映射的，则返回 true。\r\n","The attributes at the tag where the fragment is\n            being created.":"片段所在标签的属性\r\n            正在创建。\r\n","android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentAttached(android.app.FragmentManager, android.app.Fragment, android.content.Context)":"android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentAttached(android.app.FragmentManager, android.app.Fragment, android.content.Context)\r\n","android.provider.ContactsContract.Contacts.CONTENT_TYPE":"android.provider.ContactsContract.Contacts.CONTENT_TYPE\r\n","#PROPERTY_DEVICE_UNIQUE_ID":"#PROPERTY_DEVICE_UNIQUE_ID\r\n","An exception class that represents various validation errors thrown from\n            ":"一个异常类，表示从中抛出的各种验证错误\r\n            \r\n","#setResource(int)":"#setResource（整数）\r\n","#resume() resumed":"#resume() 恢复\r\n","Special UID value for data usage by tethering.":"网络共享数据使用的特殊 UID 值。\r\n","Called when the DRM framework sends status or warning information during registration\n            and rights acquisition.":"当 DRM 框架在注册期间发送状态或警告信息时调用\r\n            和权利收购。\r\n",", but taking a IntentSender\n            to start.":", 但采用 IntentSender\r\n            开始。\r\n","android.provider.VoicemailContract.Status.CONFIGURATION_STATE_CONFIGURING":"android.provider.VoicemailContract.Status.CONFIGURATION_STATE_CONFIGURING\r\n","android.app.Notification.MessagingStyle.Notification$MessagingStyle(android.app.Person)":"android.app.Notification.MessagingStyle.Notification$MessagingStyle(android.app.Person)\r\n","Returns the minimum number of input channels supported.":"返回支持的最小输入通道数。\r\n"," parameter in ":" 参数输入\r\n","android.app.ListFragment.setSelection(int)":"android.app.ListFragment.setSelection(int)\r\n","android.provider.Settings.Global.DEBUG_APP":"android.provider.Settings.Global.DEBUG_APP\r\n","A Face contains all the information identifying the location\n            of a face in a bitmap.":"人脸包含识别位置的所有信息\r\n            位图中的一张脸。\r\n",", this will be a\n                   ":"，这将是一个\r\n                   \r\n","Return if this session is sealed.":"如果此会话已密封，则返回。\r\n","RouteInfo#PLAYBACK_TYPE_LOCAL":"路线信息#PLAYBACK_TYPE_LOCAL\r\n","android.media.MediaRouter.RouteInfo.getName()":"android.media.MediaRouter.RouteInfo.getName()\r\n","android.app.ApplicationErrorReport.AnrInfo.ApplicationErrorReport$AnrInfo(android.os.Parcel)":"android.app.ApplicationErrorReport.AnrInfo.ApplicationErrorReport$AnrInfo(android.os.Parcel)\r\n","android.hardware.Camera.OnZoomChangeListener.onZoomChange(int, boolean, android.hardware.Camera)":"android.hardware.Camera.OnZoomChangeListener.onZoomChange(int, boolean, android.hardware.Camera)\r\n","#getFocusDistances(float[])":"#getFocusDistances（浮动[]）\r\n","Constructs a builder from an asset manager and a file path in an asset directory.":"从资产管理器和资产目录中的文件路径构造构建器。\r\n"," instance that wraps the status information or \n            warnings.":" 包装状态信息的实例或\r\n            警告。\r\n"," if the underlying content provider returns ":" 如果基础内容提供者返回\r\n",", or since\n                ":", 或者因为\r\n                \r\n","Convenience function for updating a secure settings value as a long\n            integer.":"更新安全设置值的便捷功能\r\n            整数。\r\n"," to indicate that while there is a suitable network,\n             the data channel is unable to establish a connection with the server.":" 表示虽然有合适的网络，\r\n             数据通道无法与服务器建立连接。\r\n","Message box: all messages.":"消息框：所有消息。\r\n","StorageInfo":"存储信息\r\n","android.media.MediaExtractor.CasInfo.getSystemId()":"android.media.MediaExtractor.CasInfo.getSystemId()\r\n","Returns a URI associated to this record.":"返回与该记录关联的 URI。\r\n","Gets the type of the receiver device associated with this route.":"获取与此路由关联的接收器设备的类型。\r\n","Sets the included pages.":"设置包含的页面。\r\n","The Area class is used for choosing specific metering and focus areas for\n            the camera to use when calculating auto-exposure, auto-white balance, and\n            auto-focus.":"Area 类用于选择特定的测光和聚焦区域\r\n            在计算自动曝光、自动白平衡和\r\n            自动对焦。\r\n","android.content.pm.PackageInstaller.SessionInfo.getReferrerUri()":"android.content.pm.PackageInstaller.SessionInfo.getReferrerUri()\r\n","android.os.Debug.MemoryInfo.getOtherPrivateDirty(int)":"android.os.Debug.MemoryInfo.getOtherPrivateDirty(int)\r\n","The new volume value between 0 and ":"介于 0 和之间的新音量值\r\n","Query whether codec supports a given ":"查询编解码器是否支持给定的\r\n","The class represents a post-migrated ":"该类代表迁移后\r\n","android.media.DrmInitData.SchemeInitData.uuid":"android.media.DrmInitData.SchemeInitData.uuid\r\n","android.print.PrintJobInfo.Builder.setAttributes(android.print.PrintAttributes)":"android.print.PrintJobInfo.Builder.setAttributes(android.print.PrintAttributes)\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format18bitRGB666":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format18bitRGB666\r\n","May be null. The new rasterizer to be installed in\n                              the paint.":"可能为空。要安装的新光栅器\r\n                              油漆。\r\n","position within data where the ECM data begins.":"数据中 ECM 数据开始的位置。\r\n","Query codec feature capabilities.":"查询编解码器功能。\r\n","Map window coordinates to object coordinates.":"将窗口坐标映射到对象坐标。\r\n","android.media.browse.MediaBrowser.SubscriptionCallback.onChildrenLoaded(java.lang.String, java.util.List<android.media.browse.MediaBrowser.MediaItem>)":"android.media.browse.MediaBrowser.SubscriptionCallback.onChildrenLoaded(java.lang.String, java.util.List<android.media.browse.MediaBrowser.MediaItem>)\r\n","The device reporting the error":"报错的设备\r\n","android.media.session.MediaSessionManager.RemoteUserInfo.getUid()":"android.media.session.MediaSessionManager.RemoteUserInfo.getUid()\r\n","Called when it is ready for calling app to show UI, showing any extra UI before this\n            callback can interfere with bugreport generation.":"准备好调用应用程序显示 UI 时调用，在此之前显示任何额外的 UI\r\n            回调会干扰错误报告的生成。\r\n","android.hardware.Camera.Parameters.setColorEffect(java.lang.String)":"android.hardware.Camera.Parameters.setColorEffect(java.lang.String)\r\n","Base class for a TV input session which represents an external device connected to a\n            hardware TV input.":"电视输入会话的基类，表示连接到\r\n            硬件电视输入。\r\n","android.provider.Settings.Secure.WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON":"android.provider.Settings.Secure.WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON\r\n",") will\n                have been advanced to reflect the amount of data that was successfully written to\n                the AudioTrack.":"） 将要\r\n                已提前反映成功写入的数据量\r\n                音轨。\r\n","moveTo()":"搬去（）\r\n","android.provider.CalendarContract.EventsColumns.SYNC_DATA7":"android.provider.CalendarContract.EventsColumns.SYNC_DATA7\r\n","The device supports reprocessing from the ":"该设备支持从\r\n","android.provider.CalendarContract.Calendars":"android.provider.CalendarContract.日历\r\n","#availMem":"#availMem\r\n","Returns the top edge of the window, in pixels, relative to the top\n            edge of the screen.":"返回窗口的顶部边缘，以像素为单位，相对于顶部\r\n            屏幕的边缘。\r\n","android.app.appsearch.SetSchemaRequest.Builder":"android.app.appsearch.SetSchemaRequest.Builder\r\n","Get the stroke's duration":"获取笔划的持续时间\r\n","android.media.midi.MidiReceiver.onSend(byte[], int, int, long)":"android.media.midi.MidiReceiver.onSend(byte[], int, int, long)\r\n","Gets the master volume level of the environmental reverb effect. -or- Sets the master volume level of the environmental reverb effect.":"获取环境混响效果的主音量级别。 - 或 - 设置环境混响效果的主音量级别。\r\n","The id of the input device that changed.":"更改的输入设备的 ID。\r\n","android.os.Debug.MemoryInfo.dalvikPrivateDirty":"android.os.Debug.MemoryInfo.dalvikPrivateDirty\r\n","android.content.pm.PackageInstaller.SessionInfo.getAppIcon()":"android.content.pm.PackageInstaller.SessionInfo.getAppIcon()\r\n","android.hardware.camera2.params.MandatoryStreamCombination.MandatoryStreamInformation.getAvailableSizes()":"android.hardware.camera2.params.MandatoryStreamCombination.MandatoryStreamInformation.getAvailableSizes()\r\n","Crates a new ":"板条箱一个新的\r\n","android.app.usage.NetworkStats.Bucket.getTag()":"android.app.usage.NetworkStats.Bucket.getTag()\r\n","This extra specifies a content provider uri(s) for the contact(s) (if the contacts were\n            located in the Contacts Provider), used with ":"这个 extra 为联系人指定了一个内容提供者 uri（如果联系人是\r\n            位于 Contacts Provider 中），与\r\n","Gets the state of the auto-exposure lock. -or- Sets the auto-exposure lock state.":"获取自动曝光锁的状态。 - 或 - 设置自动曝光锁定状态。\r\n","Notifies that layout was cancelled as a result of a cancellation request.":"通知布局因取消请求而被取消。\r\n","android.provider.Settings.Global.CONTACT_METADATA_SYNC_ENABLED":"android.provider.Settings.Global.CONTACT_METADATA_SYNC_ENABLED\r\n","android.provider.CallLog.Locations.LATITUDE":"android.provider.CallLog.Locations.LATITUDE\r\n","android.media.tv.TvInputService.Session.onCreateOverlayView()":"android.media.tv.TvInputService.Session.onCreateOverlayView()\r\n","android.graphics.ColorSpace.Rgb.fromLinear(float, float, float)":"android.graphics.ColorSpace.Rgb.fromLinear（浮动，浮动，浮动）\r\n","android.provider.Settings.Secure.TTS_ENABLED_PLUGINS":"android.provider.Settings.Secure.TTS_ENABLED_PLUGINS\r\n","Release this session object.":"释放这个会话对象。\r\n","android.media.audiofx.Virtualizer.canVirtualize(int, int)":"android.media.audiofx.Virtualizer.canVirtualize(int, int)\r\n","android.media.MediaDrm.ErrorCodes.ERROR_CRYPTO_LIBRARY":"android.media.MediaDrm.ErrorCodes.ERROR_CRYPTO_LIBRARY\r\n","android.content.pm.PackageInstaller.Session.close()":"android.content.pm.PackageInstaller.Session.close()\r\n","A class representing service information for network service discovery\n            ":"表示用于网络服务发现的服务信息的类\r\n            \r\n","\n            style ":"\r\n            风格\r\n","android.provider.ContactsContract.ContactOptionsColumns.TIMES_CONTACTED":"android.provider.ContactsContract.ContactOptionsColumns.TIMES_CONTACTED\r\n","android.media.session.MediaController.TransportControls.fastForward()":"android.media.session.MediaController.TransportControls.fastForward()\r\n","android.provider.Settings.Secure.WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS":"android.provider.Settings.Secure.WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS\r\n","K for watches.":"K代表手表。\r\n","Return an Intent that can be started to view details about this install\n            session.":"返回一个可以启动以查看有关此安装的详细信息的 Intent\r\n            会议。\r\n","Base columns for tables that contain text-based SMSs.":"包含基于文本的 SMS 的表的基列。\r\n","android.app.blob.BlobStoreManager.Session.isSameSignatureAccessAllowed()":"android.app.blob.BlobStoreManager.Session.isSameSignatureAccessAllowed()\r\n","Constructs a new Builder from a given ":"从给定的构建一个新的 Builder\r\n","android.hardware.Camera.Parameters.setJpegQuality(int)":"android.hardware.Camera.Parameters.setJpegQuality(int)\r\n","android.print.PrintAttributes.Builder":"android.print.PrintAttributes.Builder\r\n","Convenience function for retrieving a single system settings value\n            as a floating point number.":"检索单个系统设置值的便捷功能\r\n            作为浮点数。\r\n","android.provider.CallLog.Calls.DURATION":"android.provider.CallLog.Calls.DURATION\r\n","android.app.ActivityManager.RunningServiceInfo":"android.app.ActivityManager.RunningServiceInfo\r\n",") or \"remote\"\n               (":") 或“远程”\r\n               (\r\n","The method called when a camera device has been closed with\n            ":"关闭相机设备时调用的方法\r\n            \r\n","android.hardware.Camera.Parameters.FOCUS_MODE_MACRO":"android.hardware.Camera.Parameters.FOCUS_MODE_MACRO\r\n","android.provider.Contacts.GroupMembership.DEFAULT_SORT_ORDER":"android.provider.Contacts.GroupMembership.DEFAULT_SORT_ORDER\r\n","32 bits per pixel, little-endian Y color format.":"每像素 32 位，little-endian Y 颜色格式。\r\n","android.media.MediaSession2Service.MediaNotification.MediaSession2Service$MediaNotification(int, android.app.Notification)":"android.media.MediaSession2Service.MediaNotification.MediaSession2Service$MediaNotification(int, android.app.Notification)\r\n","android.provider.Settings.System.HAPTIC_FEEDBACK_ENABLED":"android.provider.Settings.System.HAPTIC_FEEDBACK_ENABLED\r\n",", otherwise it returns null.":"，否则返回 null。\r\n","A reference to the location that was sent via call composer.":"对通过调用作曲家发送的位置的引用。\r\n","the array of pixels of tap stopping position":"点击停止位置的像素数组\r\n","android.provider.Telephony.CarrierId.CARRIER_NAME":"android.provider.Telephony.CarrierId.CARRIER_NAME\r\n","\n            Note that the audio session ID is 0 only if a problem occured when the MediaPlayer was contructed.":"\r\n            请注意，仅当构造 MediaPlayer 时出现问题时，音频会话 ID 才为 0。\r\n","\n                will be zero.":"\r\n                将为零。\r\n","the AudioAttributes object whose data will be reused in the new Builder.":"AudioAttributes 对象，其数据将在新的 Builder 中重复使用。\r\n","Flexible 16 bits per pixel, subsampled YUV color format with 8-bit chroma and luma\n            components.":"灵活的每像素 16 位，具有 8 位色度和亮度的二次采样 YUV 颜色格式\r\n            成分。\r\n","android.hardware.Camera.Parameters.setPictureSize(int, int)":"android.hardware.Camera.Parameters.setPictureSize(int, int)\r\n","Carriers class contains information about APNs, including MMSC information.":"Carriers 类包含有关 APN 的信息，包括 MMSC 信息。\r\n","#onWrite":"#onWrite\r\n","android.media.MediaPlayer.NoDrmSchemeException":"android.media.MediaPlayer.NoDrmSchemeException\r\n","android.media.RoutingSessionInfo.Builder.RoutingSessionInfo$Builder(android.media.RoutingSessionInfo)":"android.media.RoutingSessionInfo.Builder.RoutingSessionInfo$Builder(android.media.RoutingSessionInfo)\r\n","AbstractInputMethodSessionImpl#revokeSelf()\n            AbstractInputMethodSessionImpl.revokeSelf()":"AbstractInputMethodSessionImpl#revokeSelf()\r\n            AbstractInputMethodSessionImpl.revokeSelf()\r\n","android.media.MediaDrm.MetricsConstants.KEY_STATUS_INTERNAL_ERROR_COUNT":"android.media.MediaDrm.MetricsConstants.KEY_STATUS_INTERNAL_ERROR_COUNT\r\n","android.os.Build.VERSION_CODES.JELLY_BEAN_MR1":"android.os.Build.VERSION_CODES.JELLY_BEAN_MR1\r\n","true if Limiter stage is in use;":"如果正在使用 Limiter 阶段，则为 true；\r\n","android.media.MediaPlayer.OnBufferingUpdateListener.onBufferingUpdate(android.media.MediaPlayer, int)":"android.media.MediaPlayer.OnBufferingUpdateListener.onBufferingUpdate(android.media.MediaPlayer, int)\r\n","3GPP media file format":"3GPP 媒体文件格式\r\n","An optional bundle of app-specific arguments to send to the provider,\n                    or ":"一个可选的应用程序特定参数包，用于发送给提供者，\r\n                    或者\r\n","Cannot access the calendar":"无法访问日历\r\n","android.app.admin.DevicePolicyManager.InstallSystemUpdateCallback.UPDATE_ERROR_INCORRECT_OS_VERSION":"android.app.admin.DevicePolicyManager.InstallSystemUpdateCallback.UPDATE_ERROR_INCORRECT_OS_VERSION\r\n"," in an error case.":" 在错误情况下。\r\n"," of\n            the view associated with this node.":" 的\r\n            与此节点关联的视图。\r\n","android.media.MediaRouter.RouteInfo.getPresentationDisplay()":"android.media.MediaRouter.RouteInfo.getPresentationDisplay()\r\n","android.provider.ContactsContract.SimContacts.getSimAccounts(android.content.ContentResolver)":"android.provider.ContactsContract.SimContacts.getSimAccounts(android.content.ContentResolver)\r\n","android.media.DrmInitData.SchemeInitData.DrmInitData$SchemeInitData(java.util.UUID, java.lang.String, byte[])":"android.media.DrmInitData.SchemeInitData.DrmInitData$SchemeInitData(java.util.UUID, java.lang.String, byte[])\r\n","android.provider.Contacts.People.PRIMARY_PHONE_ID":"android.provider.Contacts.People.PRIMARY_PHONE_ID\r\n","The search query.":"搜索查询。\r\n","android.provider.Telephony.TextBasedSmsColumns.SUBJECT":"android.provider.Telephony.TextBasedSmsColumns.SUBJECT\r\n","android.provider.Contacts.Phones.getDisplayLabel(android.content.Context, int, java.lang.CharSequence, java.lang.CharSequence[])":"android.provider.Contacts.Phones.getDisplayLabel(android.content.Context, int, java.lang.CharSequence, java.lang.CharSequence[])\r\n"," value pairs.":" 值对。\r\n","Gets the decay time. -or- Sets the time taken for the level of reverberation to decay by 60 dB.":"获取衰减时间。 - 或 - 设置混响级别衰减 60 dB 所用的时间。\r\n","Construct a RemoteViews for the final 1U notification layout.":"为最终的 1U 通知布局构造 RemoteViews。\r\n","android.graphics.text.LineBreaker.Result.getStartLineHyphenEdit(int)":"android.graphics.text.LineBreaker.Result.getStartLineHyphenEdit(int)\r\n","Notify the listener that the cas plugin status is updated.":"通知监听器 cas 插件状态已更新。\r\n","The channel type for ATSC3.":"ATSC3 的信道类型。\r\n","android.hardware.Camera.Parameters.setPictureFormat(int)":"android.hardware.Camera.Parameters.setPictureFormat(int)\r\n","android.provider.Telephony.Sms.CONTENT_URI":"android.provider.Telephony.Sms.CONTENT_URI\r\n","android.hardware.Camera.CameraInfo.CAMERA_FACING_BACK":"android.hardware.Camera.CameraInfo.CAMERA_FACING_BACK\r\n","android.os.Build.VERSION.MEDIA_PERFORMANCE_CLASS":"android.os.Build.VERSION.MEDIA_PERFORMANCE_CLASS\r\n","android.net.sip.SipSession.Listener.onCallEstablished(android.net.sip.SipSession, java.lang.String)":"android.net.sip.SipSession.Listener.onCallEstablished(android.net.sip.SipSession, java.lang.String)\r\n","Offline license is in an invalid state for the attempted operation.":"对于尝试的操作，脱机许可证处于无效状态。\r\n","byte array of the ECM data.":"ECM 数据的字节数组。\r\n","android.media.tv.TvInputService.RecordingSession.notifyTuned(android.net.Uri)":"android.media.tv.TvInputService.RecordingSession.notifyTuned(android.net.Uri)\r\n","gets the gain applied to the signal BEFORE the compression. -or- sets the gain to be applied to the signal BEFORE the compression, measured in decibels\n            (dB), where 0 dB means no level change.":"获取压缩前应用于信号的增益。 - 或 - 设置压缩前应用于信号的增益，以分贝为单位\r\n            (dB)，其中 0 dB 表示电平没有变化。\r\n","android.inputmethodservice.Keyboard.Key.text":"android.inputmethodservice.Keyboard.Key.text\r\n","audioFallbackMode":"音频回退模​​式\r\n","android.hardware.camera2.CaptureRequest.Key.hashCode()":"android.hardware.camera2.CaptureRequest.Key.hashCode()\r\n","An invalid EF type identifier.":"无效的 EF 类型标识符。\r\n","android.app.ApplicationErrorReport.RunningServiceInfo.ApplicationErrorReport$RunningServiceInfo(android.os.Parcel)":"android.app.ApplicationErrorReport.RunningServiceInfo.ApplicationErrorReport$RunningServiceInfo(android.os.Parcel)\r\n"," setting that indicates that the directory\n            has full-size contact photos, but cannot provide scaled thumbnails.":" 指示目录的设置\r\n            有全尺寸的联系人照片，但不能提供缩放的缩略图。\r\n","android.app.RemoteInput":"android.app.RemoteInput\r\n","android.app.assist.AssistStructure.WindowNode.getTop()":"android.app.assist.AssistStructure.WindowNode.getTop()\r\n","Class providing the position range of matching information.":"提供匹配信息位置范围的类。\r\n","PowerManager#addThermalStatusListener":"PowerManager#addThermalStatusListener\r\n","android.graphics.ColorSpace.Connector.transform(float[])":"android.graphics.ColorSpace.Connector.transform(float[])\r\n","android.media.AudioManager.OnAudioFocusChangeListener":"android.media.AudioManager.OnAudioFocusChangeListener\r\n","android.database.DatabaseUtils.InsertHelper.bind(int, boolean)":"android.database.DatabaseUtils.InsertHelper.bind(int, boolean)\r\n","The weight of the preview program within the channel.":"预览节目在频道内的权重。\r\n","android.drm.DrmUtils.ExtendedMetadataParser.get(java.lang.String)":"android.drm.DrmUtils.ExtendedMetadataParser.get(java.lang.String)\r\n","android.provider.ContactsContract.Directory.SHORTCUT_SUPPORT_NONE":"android.provider.ContactsContract.Directory.SHORTCUT_SUPPORT_NONE\r\n","ID of audio session the AudioTrack must be attached to, or\n              ":"AudioTrack 必须附加到的音频会话的 ID，或者\r\n              \r\n","Caches HTTP and HTTPS responses to the filesystem so they may be reused,\n            saving time and bandwidth.":"将 HTTP 和 HTTPS 响应缓存到文件系统，以便它们可以被重用，\r\n            节省时间和带宽。\r\n","android.provider.CallLog.Locations.CONTENT_URI":"android.provider.CallLog.Locations.CONTENT_URI\r\n","desired gain value in decibels (dB)":"以分贝 (dB) 为单位的所需增益值\r\n","android.media.MediaCodec.CryptoException.ERROR_KEY_EXPIRED":"android.media.MediaCodec.CryptoException.ERROR_KEY_EXPIRED\r\n","android.provider.Telephony.MmsSms.ERR_TYPE_GENERIC_PERMANENT":"android.provider.Telephony.MmsSms.ERR_TYPE_GENERIC_PERMANENT\r\n","android.provider.Settings.Global.WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED":"android.provider.Settings.Global.WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED\r\n","android.media.MediaFormat.KEY_SLOW_MOTION_MARKERS":"android.media.MediaFormat.KEY_SLOW_MOTION_MARKERS\r\n","Creates a new Builder.":"创建一个新的构建器。\r\n","The key used for decryption is no longer valid due to license term\n            expiration.":"由于许可期限，用于解密的密钥不再有效\r\n            到期。\r\n","android.media.MediaCodec.MetricsConstants.MIME_TYPE":"android.media.MediaCodec.MetricsConstants.MIME_TYPE\r\n","android.content.ContentProviderOperation.Builder.build()":"android.content.ContentProviderOperation.Builder.build()\r\n","android.media.audiofx.Visualizer.MeasurementPeakRms.mPeak":"android.media.audiofx.Visualizer.MeasurementPeakRms.mPeak\r\n","The license server detected an error in the license request.":"许可服务器在许可请求中检测到错误。\r\n","android.media.MediaCodec.MetricsConstants.HEIGHT":"android.media.MediaCodec.MetricsConstants.HEIGHT\r\n","The type of the receiver device associated with this route:\n            ":"与该路由关联的接收设备类型：\r\n            \r\n","android.content.ClipData.Item.ClipData$Item(android.net.Uri)":"android.content.ClipData.Item.ClipData$Item(android.net.Uri)\r\n","android.database.DatabaseUtils.InsertHelper.TABLE_INFO_PRAGMA_DEFAULT_INDEX":"android.database.DatabaseUtils.InsertHelper.TABLE_INFO_PRAGMA_DEFAULT_INDEX\r\n","Exception thrown when trying to send through a PendingIntent that\n            has been canceled or is otherwise no longer able to execute the request.":"尝试通过 PendingIntent 发送时抛出异常\r\n            已被取消或不再能够执行请求。\r\n","The content:// style URL for querying Events table in the managed profile.":"content:// 样式 URL，用于查询托管配置文件中的事件表。\r\n","android.content.IntentFilter.AuthorityEntry":"android.content.IntentFilter.AuthorityEntry\r\n","android.app.appsearch.SetSchemaResponse.MigrationFailure.getSchemaType()":"android.app.appsearch.SetSchemaResponse.MigrationFailure.getSchemaType()\r\n","android.media.audiofx.Visualizer.getScalingMode()":"android.media.audiofx.Visualizer.getScalingMode()\r\n","Returns true if video snapshot is supported.":"如果支持视频快照，则返回 true。\r\n","Implement this interface if you want to create an animated drawable that\n            extends ":"如果您想创建一个动画可绘制对象，请实现此接口\r\n            延伸\r\n","Mobile Network Code (MNC).":"移动网络代码 (MNC)。\r\n","\n            category, providing finer-grained information about the relative\n            utility of processes within a category.":"\r\n            类别，提供有关相关的更细粒度的信息\r\n            一个类别中流程的效用。\r\n","android.media.session.MediaSession.QueueItem.getQueueId()":"android.media.session.MediaSession.QueueItem.getQueueId()\r\n","#cancel":"＃取消\r\n"," is enabled, the listener is called on the\n            provided executor when a Thread violation occurs.":" 启用时，将调用侦听器\r\n            发生线程冲突时提供执行程序。\r\n"," to indicate that visual voicemail still is being\n            configured.":" 表示可视语音邮件仍在\r\n            配置。\r\n","Interface for callback invocation for service registration":"服务注册回调调用接口\r\n"," type.  Null otherwise.":" 类型。否则为空。\r\n","Returns whether this item is playable.":"返回此项目是否可播放。\r\n","android.app.Notification.WearableExtender.getHintShowBackgroundOnly()":"android.app.Notification.WearableExtender.getHintShowBackgroundOnly()\r\n","android.provider.Contacts.People.CONTENT_FILTER_URI":"android.provider.Contacts.People.CONTENT_FILTER_URI\r\n","AV1 Main profile 4:2:0 10-bit\n            \n            See definition in\n            ":"AV1 主要配置文件 4:2:0 10 位\r\n            \r\n            见定义\r\n            \r\n","android.provider.SimPhonebookContract.ElementaryFiles":"android.provider.SimPhonebookContract.ElementaryFiles\r\n","The shared dirty pages used by dalvik heap.":"dalvik 堆使用的共享脏页。\r\n","android.provider.Settings.Secure.LOCATION_MODE_SENSORS_ONLY":"android.provider.Settings.Secure.LOCATION_MODE_SENSORS_ONLY\r\n","android.media.MediaCas.Session":"android.media.MediaCas.Session\r\n","android.app.assist.AssistStructure.ViewNode.getAutofillOptions()":"android.app.assist.AssistStructure.ViewNode.getAutofillOptions()\r\n","RouteDiscoveryPreference":"路由发现偏好\r\n","android.provider.Settings.Secure.WIFI_WATCHDOG_PING_DELAY_MS":"android.provider.Settings.Secure.WIFI_WATCHDOG_PING_DELAY_MS\r\n","Interface definition for a callback to be invoked when colors change on a wallpaper.":"当墙纸颜色发生变化时调用回调的接口定义。\r\n","The initialization data.":"初始化数据。\r\n","} was called for this\n            session.":"} 被要求这样做\r\n            会议。\r\n","#MODE_SMALL":"#MODE_SMALL\r\n","android.media.midi.MidiManager.DeviceCallback.onDeviceStatusChanged(android.media.midi.MidiDeviceStatus)":"android.media.midi.MidiManager.DeviceCallback.onDeviceStatusChanged(android.media.midi.MidiDeviceStatus)\r\n","android.bluetooth.BluetoothProfile.ServiceListener.onServiceConnected(int, android.bluetooth.BluetoothProfile)":"android.bluetooth.BluetoothProfile.ServiceListener.onServiceConnected(int, android.bluetooth.BluetoothProfile)\r\n"," for authentication.":" 用于身份验证。\r\n","android.provider.CalendarContract.EventsColumns.CUSTOM_APP_URI":"android.provider.CalendarContract.EventsColumns.CUSTOM_APP_URI\r\n","android.provider.Contacts.PeopleColumns.TIMES_CONTACTED":"android.provider.Contacts.PeopleColumns.TIMES_CONTACTED\r\n","android.provider.CalendarContract.CalendarColumns.CAL_ACCESS_NONE":"android.provider.CalendarContract.CalendarColumns.CAL_ACCESS_NONE\r\n","android.provider.SimPhonebookContract.SimRecords.ERROR_NAME_UNSUPPORTED":"android.provider.SimPhonebookContract.SimRecords.ERROR_NAME_UNSUPPORTED\r\n","DisplayMetrics#density":"DisplayMetrics#密度\r\n","Convenience function to write a batch of configuration-related\n            settings from a ":"方便函数写一个批量配置相关\r\n            设置从\r\n","android.content.Intent.FilterComparison":"android.content.Intent.FilterComparison\r\n","This API is no longer supported as of O.":"从 O 开始不再支持此 API。\r\n","android.provider.Settings.System.RINGTONE":"android.provider.Settings.System.RINGTONE\r\n","Description of a single item in a ClipData.":"ClipData 中单个项目的描述。\r\n","android.nfc.NfcAdapter.OnTagRemovedListener":"android.nfc.NfcAdapter.OnTagRemovedListener\r\n","Callback interface for discovering when a thread is going to block\n            waiting for more messages.":"用于发现线程何时阻塞的回调接口\r\n            等待更多消息。\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatCrYCbY":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatCrYCbY\r\n","android.provider.Contacts.GroupMembership.GROUP_ID":"android.provider.Contacts.GroupMembership.GROUP_ID\r\n","Sets the number of copies.":"设置份数。\r\n"," if the property is a boolean type.":" 如果属性是布尔类型。\r\n"," or later, will receive\n                       a ":" 或稍后，将收到\r\n                       A\r\n","Represents an ongoing session.":"表示正在进行的会话。\r\n","\n                          (inclusive).":"\r\n                          （包括的）。\r\n","\n            on.  If you don't care, just call it like this, although your thread\n            will have to be a Looper thread.\n            ":"\r\n            在。如果你不在乎，就这样称呼它，尽管你的线程\r\n            必须是 Looper 线程。\r\n            \r\n","android.provider.CalendarContract.EventsColumns.UID_2445":"android.provider.CalendarContract.EventsColumns.UID_2445\r\n","android.provider.CallLog.Calls.CONTENT_TYPE":"android.provider.CallLog.Calls.CONTENT_TYPE\r\n","android.hardware.Camera.Parameters.SCENE_MODE_BEACH":"android.hardware.Camera.Parameters.SCENE_MODE_BEACH\r\n","android.drm.DrmManagerClient.OnEventListener.onEvent(android.drm.DrmManagerClient, android.drm.DrmEvent)":"android.drm.DrmManagerClient.OnEventListener.onEvent(android.drm.DrmManagerClient, android.drm.DrmEvent)\r\n","Calendars#_ID":"日历#_ID\r\n","android.provider.ContactsContract.Directory":"android.provider.ContactsContract.Directory\r\n","android.media.MediaMetadataRetriever#METADATA_KEY_YEAR":"android.media.MediaMetadataRetriever#METADATA_KEY_YEAR\r\n","A wrapper class for the crypto objects supported by FingerprintManager.":"FingerprintManager 支持的加密对象的包装类。\r\n","android.provider.Telephony.TextBasedSmsColumns.MESSAGE_TYPE_QUEUED":"android.provider.Telephony.TextBasedSmsColumns.MESSAGE_TYPE_QUEUED\r\n","\n            calls of type KEY_NEEDED occured.":"\r\n            发生了 KEY_NEEDED 类型的调用。\r\n","BroadcastReceiver#getResultData()\n            BroadcastReceiver.getResultData()":"广播接收器#getResultData()\r\n            BroadcastReceiver.getResultData() 方法\r\n","android.media.DrmInitData.SchemeInitData.data":"android.media.DrmInitData.SchemeInitData.data\r\n","the autofill value of this view, or ":"此视图的自动填充值，或\r\n","android.provider.FontsContract.Columns.WEIGHT":"android.provider.FontsContract.Columns.WEIGHT\r\n","Key to extract the flag indicating whether the codec is running\n            as an encoder or decoder from the ":"提取指示编解码器是否正在运行的标志的键\r\n            作为编码器或解码器\r\n","android.hardware.Camera.Face.score":"android.hardware.Camera.Face.score\r\n","android.provider.DocumentsContract.Root.COLUMN_SUMMARY":"android.provider.DocumentsContract.Root.COLUMN_SUMMARY\r\n","String representation of the key name":"键名的字符串表示\r\n","Retrieves the rights data associated with this ":"检索与此关联的权限数据\r\n","Either the key was not loaded from the license before attempting the\n            operation, or the key ID parameter provided by the app is incorrect.":"在尝试之前未从许可证加载密钥\r\n            操作，或者应用提供的key ID参数不正确。\r\n","android.hardware.Camera.Parameters.SCENE_MODE_STEADYPHOTO":"android.hardware.Camera.Parameters.SCENE_MODE_STEADYPHOTO\r\n","Uri to tag for this slice.":"用于标记此切片的 Uri。\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityCreated(android.app.Activity, android.os.Bundle)":"android.app.Application.ActivityLifecycleCallbacks.onActivityCreated(android.app.Activity, android.os.Bundle)\r\n","android.provider.CallLog.Calls.DEFAULT_SORT_ORDER":"android.provider.CallLog.Calls.DEFAULT_SORT_ORDER\r\n","android.media.MediaPlayer.OnTimedTextListener":"android.media.MediaPlayer.OnTimedTextListener\r\n","the Surface that was used with the ":"与\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format25bitARGB1888":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format25bitARGB1888\r\n","android.media.audiofx.DynamicsProcessing.MbcBand.getKneeWidth()":"android.media.audiofx.DynamicsProcessing.MbcBand.getKneeWidth()\r\n","AudioEffect#EFFECT_TYPE_AGC":"音频效果#EFFECT_TYPE_AGC\r\n","android.inputmethodservice.KeyboardView.OnKeyboardActionListener.onKey(int, int[])":"android.inputmethodservice.KeyboardView.OnKeyboardActionListener.onKey(int, int[])\r\n","Comma-separated list of location providers that are enabled.":"已启用的位置提供程序的逗号分隔列表。\r\n","android.media.MediaRecorder.MetricsConstants.VIDEO_BITRATE":"android.media.MediaRecorder.MetricsConstants.VIDEO_BITRATE\r\n","android.media.FaceDetector.Face.getMidPoint(android.graphics.PointF)":"android.media.FaceDetector.Face.getMidPoint(android.graphics.PointF)\r\n"," to animate values along.":" 为值设置动画。\r\n","An item in the list":"列表中的项目\r\n","Key to extract the count of video frames dropped\n            from the ":"提取视频丢帧数的关键\r\n            来自\r\n","Called when taking bugreport finishes successfully.":"错误报告成功完成时调用。\r\n","android.provider.Telephony.Threads.getOrCreateThreadId(android.content.Context, java.util.Set<java.lang.String>)":"android.provider.Telephony.Threads.getOrCreateThreadId(android.content.Context, java.util.Set<java.lang.String>)\r\n","android.provider.Telephony.MmsSms.TYPE_DISCRIMINATOR_COLUMN":"android.provider.Telephony.MmsSms.TYPE_DISCRIMINATOR_COLUMN\r\n","android.media.MediaDrm.SessionException.getErrorCode()":"android.media.MediaDrm.SessionException.getErrorCode()\r\n","android.media.MediaDrm.MetricsConstants.PROVIDE_KEY_RESPONSE_ERROR_COUNT":"android.media.MediaDrm.MetricsConstants.PROVIDE_KEY_RESPONSE_ERROR_COUNT\r\n","Action used to launch the system contacts application and bring up a QuickContact dialog\n            for the provided ":"用于启动系统联系人应用程序并调出 QuickContact 对话框的操作\r\n            对于所提供的\r\n","android.media.MediaDrm.LogMessage.getMessage()":"android.media.MediaDrm.LogMessage.getMessage()\r\n","android.provider.ContactsContract.PhoneLookupColumns":"android.provider.ContactsContract.PhoneLookupColumns\r\n","android.media.tv.TvContract.Channels.TYPE_DVB_S":"android.media.tv.TvContract.Channels.TYPE_DVB_S\r\n","android.media.MediaDrm.MetricsConstants.EVENT_PROVISION_REQUIRED_COUNT":"android.media.MediaDrm.MetricsConstants.EVENT_PROVISION_REQUIRED_COUNT\r\n","android.provider.ContactsContract.DataUsageFeedback.DELETE_USAGE_URI":"android.provider.ContactsContract.DataUsageFeedback.DELETE_USAGE_URI\r\n","android.media.MediaDrm.SessionException.ERROR_RESOURCE_CONTENTION":"android.media.MediaDrm.SessionException.ERROR_RESOURCE_CONTENTION\r\n","the unmodifiable list of selectable routes for the session.":"会话的可选路由的不可修改列表。\r\n"," value of\n            ":" 的价值\r\n            \r\n","android.database.DatabaseUtils.InsertHelper":"android.database.DatabaseUtils.InsertHelper\r\n","android.provider.DocumentsContract.Document.COLUMN_DISPLAY_NAME":"android.provider.DocumentsContract.Document.COLUMN_DISPLAY_NAME\r\n","the new desired duration in nanoseconds":"新的所需持续时间（以纳秒为单位）\r\n","android.provider.Telephony.BaseMmsColumns.READ_STATUS":"android.provider.Telephony.BaseMmsColumns.READ_STATUS\r\n","Block until an Activity is created that matches this monitor, \n            returning the resulting activity.":"阻塞，直到创建与此监视器匹配的 Activity，\r\n            返回结果活动。\r\n","android.content.res.AssetFileDescriptor.AutoCloseInputStream":"android.content.res.AssetFileDescriptor.AutoCloseInputStream\r\n","android.provider.Contacts.Phones":"android.provider.Contacts.Phones\r\n","android.provider.Settings.Secure.putString(android.content.ContentResolver, java.lang.String, java.lang.String)":"android.provider.Settings.Secure.putString（android.content.ContentResolver，java.lang.String，java.lang.String）\r\n","android.app.admin.DevicePolicyManager.PASSWORD_COMPLEXITY_HIGH":"android.app.admin.DevicePolicyManager.PASSWORD_COMPLEXITY_HIGH\r\n","BluetoothManager#getConnectedDevices(int)":"蓝牙管理器#getConnectedDevices(int)\r\n","android.media.MediaCodecInfo.CodecCapabilities.FEATURE_FrameParsing":"android.media.MediaCodecInfo.CodecCapabilities.FEATURE_FrameParsing\r\n","Interface definition of a callback that is notified when the audio mode changes":"音频模式改变时通知的回调的接口定义\r\n"," using the\n            given ":" 使用\r\n            给予\r\n","android.provider.CalendarContract.CalendarCache":"android.provider.CalendarContract.CalendarCache\r\n","read-report":"阅读报告\r\n","A render intent determines how a ":"渲染意图决定了如何\r\n","reflections delay in milliseconds. The valid range is [0, 300].":"以毫秒为单位的反射延迟。有效范围是 [0, 300]。\r\n","#RELEASE_FLAG_WAIT_FOR_NO_PROXIMITY":"#RELEASE_FLAG_WAIT_FOR_NO_PROXIMITY\r\n","android.media.MediaRouter2.OnGetControllerHintsListener.onGetControllerHints(android.media.MediaRoute2Info)":"android.media.MediaRouter2.OnGetControllerHintsListener.onGetControllerHints(android.media.MediaRoute2Info)\r\n","Indicates whether the packages are about to be\n                       replaced with new versions.":"指示包裹是否即将被\r\n                       替换为新版本。\r\n","The in-memory or loaded icon that represents the current state of this task.":"表示此任务当前状态的内存中或加载图标。\r\n","Indicates that a package was modified in the specified profile.":"表示在指定的配置文件中修改了包。\r\n","This is the top part of the UI that is visibly covering the\n            application behind it.":"这是 UI 的顶部，明显覆盖了\r\n            它背后的应用程序。\r\n","android.view.View#getScrollX() View.getScrollX()":"android.view.View#getScrollX() 视图.getScrollX()\r\n","Callback method that is invoked by the system when the alarm time is reached.":"到达闹钟时间时系统调用的回调方法。\r\n","Concrete MIME type of a document.":"文档的具体 MIME 类型。\r\n","optional shortcut spelling for this word. When the shortcut\n             is typed, the word may be suggested by applications that support it. May be null.":"这个词的可选快捷拼写。当捷径\r\n             键入时，支持该词的应用程序可能会建议该词。可能为空。\r\n","android.provider.DocumentsContract.Root.COLUMN_MIME_TYPES":"android.provider.DocumentsContract.Root.COLUMN_MIME_TYPES\r\n","android.media.MediaDrm.OnExpirationUpdateListener.onExpirationUpdate(android.media.MediaDrm, byte[], long)":"android.media.MediaDrm.OnExpirationUpdateListener.onExpirationUpdate(android.media.MediaDrm, byte[], long)\r\n","Settings classname to launch when Settings is clicked from All\n            Applications.":"从“全部”中单击“设置”时要启动的设置类名\r\n            应用程序。\r\n","android.os.Debug.MemoryInfo.nativePss":"android.os.Debug.MemoryInfo.nativePss\r\n","android.os.BugreportManager.BugreportCallback.onFinished()":"android.os.BugreportManager.BugreportCallback.onFinished()\r\n","obtained event":"获得的事件\r\n"," if the session isn't known at construction\n              time. See also ":" 如果会话在构建时未知\r\n              时间。也可以看看\r\n","android.app.WallpaperManager.setBitmap(android.graphics.Bitmap, android.graphics.Rect, boolean, int)":"android.app.WallpaperManager.setBitmap(android.graphics.Bitmap, android.graphics.Rect, boolean, int)\r\n","android.provider.Settings.System.VOLUME_BLUETOOTH_SCO":"android.provider.Settings.System.VOLUME_BLUETOOTH_SCO\r\n","android.provider.CallLog.Calls.BLOCK_REASON_NOT_BLOCKED":"android.provider.CallLog.Calls.BLOCK_REASON_NOT_BLOCKED\r\n"," if the property is a float type.":" 如果属性是 float 类型。\r\n","Describe a CAS plugin with its CA_system_ID and string name.":"使用 CA_system_ID 和字符串名称描述 CAS 插件。\r\n","android.graphics.text.LineBreaker.ParagraphConstraints":"android.graphics.text.LineBreaker.ParagraphConstraints\r\n","GNSS Measurements are successfully being tracked, it will receive updates once they are\n            available.":"已成功跟踪 GNSS 测量值，它将在完成后收到更新\r\n            可用的。\r\n","The context of the application":"应用程序的上下文\r\n","android.media.tv.TvContract.Channels.COLUMN_SEARCHABLE":"android.media.tv.TvContract.Channels.COLUMN_SEARCHABLE\r\n","Called to update status in buffering a media stream received through\n            progressive HTTP download.":"调用以更新缓冲通过接收的媒体流的状态\r\n            渐进式 HTTP 下载。\r\n","current focus mode. This method will always return a non-null\n                    value. Applications should call ":"当前对焦模式。此方法将始终返回一个非空值\r\n                    价值。应用程序应该调用\r\n",": set if this service has been\n            explicitly started.":": 设置此服务是否已经\r\n            明确开始。\r\n","android.media.MediaCodec.LinearBlock.recycle()":"android.media.MediaCodec.LinearBlock.recycle()\r\n","PlaybackMetrics":"回放指标\r\n","android.graphics.ImageDecoder.DecodeException.SOURCE_INCOMPLETE":"android.graphics.ImageDecoder.DecodeException.SOURCE_INCOMPLETE\r\n","Request that the player start playback for a specific ":"请求播放器开始播放特定的\r\n","the number of segments in the JET queue":"JET 队列中的段数\r\n","android.net.Uri.Builder.build()":"android.net.Uri.Builder.build()\r\n","android.media.MediaSession2.ControllerInfo.getPackageName()":"android.media.MediaSession2.ControllerInfo.getPackageName()\r\n","Returns the image format for pictures. -or- Sets the image format for pictures.":"返回图片的图像格式。 - 或 - 设置图片的图像格式。\r\n","Content in this property should be returned for queries that are either exact matches or\n            query matches of the tokens appearing in this property.":"对于完全匹配或完全匹配的查询，应返回此属性中的内容\r\n            查询此属性中出现的标记的匹配项。\r\n","android.media.tv.TvView.TvInputCallback.onTracksChanged(java.lang.String, java.util.List<android.media.tv.TvTrackInfo>)":"android.media.tv.TvView.TvInputCallback.onTracksChanged(java.lang.String, java.util.List<android.media.tv.TvTrackInfo>)\r\n","InputMethodService#onUpdateExtractedText\n            InputMethodService.onUpdateExtractedText()":"InputMethodService#onUpdateExtractedText\r\n            InputMethodService.onUpdateExtractedText()\r\n","android.location.GnssCapabilities.Builder":"android.location.GnssCapabilities.Builder\r\n","true if this stage is set to be used. False otherwise. Stages that are not\n            set \"inUse\" at initialization time are not available to be used at any time.":"如果此阶段设置为使用，则为真。否则为假。不属于的阶段\r\n            在初始化时设置为“inUse”在任何时候都不可使用。\r\n","focus distances in meters. output must be a float\n                   array with three elements. Near focus distance, optimal focus\n                   distance, and far focus distance will be filled in the array.":"以米为单位的焦点距离。输出必须是浮点数\r\n                   包含三个元素的数组。近焦距，最佳对焦\r\n                   distance 和 far focus distance 将填充到数组中。\r\n","Constructs a builder from existing Font instance.":"从现有的 Font 实例构造一个构建器。\r\n","The SDK version of the software currently running on this hardware\n            device.":"当前在此硬件上运行的软件的 SDK 版本\r\n            设备。\r\n","true if this category supports":"如果此类别支持，则为真\r\n","A Cursor containing all instances in the given range":"包含给定范围内所有实例的 Cursor\r\n","android.content.pm.LauncherApps.PinItemRequest.isValid()":"android.content.pm.LauncherApps.PinItemRequest.isValid()\r\n","android.hardware.camera2.CameraExtensionSession.ExtensionCaptureCallback.onCaptureProcessStarted(android.hardware.camera2.CameraExtensionSession, android.hardware.camera2.CaptureRequest)":"android.hardware.camera2.CameraExtensionSession.ExtensionCaptureCallback.onCaptureProcessStarted（android.hardware.camera2.CameraExtensionSession，android.hardware.camera2.CaptureRequest）\r\n","A new array of 3 floats containing linear RGB values":"包含线性 RGB 值的 3 个浮点数的新数组\r\n","Called when more audio data can be written without blocking on an offloaded track.":"当可以写入更多音频数据而不会阻塞卸载轨道时调用。\r\n","android.provider.ContactsContract.Contacts.CONTENT_URI":"android.provider.ContactsContract.Contacts.CONTENT_URI\r\n","android.provider.Telephony.Threads":"android.provider.Telephony.Threads\r\n","android.provider.ContactsContract.RawContactsColumns.DELETED":"android.provider.ContactsContract.RawContactsColumns.DELETED\r\n","Gets if Limiter stage is in use":"获取限制器阶段是否正在使用\r\n","android.media.AudioTrack.Builder.AudioTrack$Builder()":"android.media.AudioTrack.Builder.AudioTrack$Builder()\r\n","The target video output bitrate in bits per second":"目标视频输出比特率（以比特每秒为单位）\r\n","This is called when the track information has been changed.":"当曲目信息已更改时将调用此方法。\r\n","android.opengl.GLSurfaceView.Renderer.onSurfaceCreated(javax.microedition.khronos.opengles.GL10, javax.microedition.khronos.egl.EGLConfig)":"android.opengl.GLSurfaceView.Renderer.onSurfaceCreated（javax.microedition.khronos.opengles.GL10，javax.microedition.khronos.egl.EGLConfig）\r\n","A session ID that does not exist or is invalid.":"不存在或无效的会话 ID。\r\n","android.hardware.SensorManager.DynamicSensorCallback.onDynamicSensorDisconnected(android.hardware.Sensor)":"android.hardware.SensorManager.DynamicSensorCallback.onDynamicSensorDisconnected(android.hardware.Sensor)\r\n","Interface that PreferenceFragment's containing activity should\n            implement to be able to process preference items that wish to\n            switch to a new fragment.":"PreferenceFragment 的包含活动应该的接口\r\n            实现能够处理希望的偏好项\r\n            切换到一个新片段。\r\n","android.companion.CompanionDeviceManager.Callback.onFailure(java.lang.CharSequence)":"android.companion.CompanionDeviceManager.Callback.onFailure(java.lang.CharSequence)\r\n"," instance by copying a ":" 例如通过复制一个\r\n","android.accessibilityservice.GestureDescription.Builder":"android.accessibilityservice.GestureDescription.Builder\r\n","android.opengl.GLUtils.texSubImage2D(int, int, int, int, android.graphics.Bitmap)":"android.opengl.GLUtils.texSubImage2D(int, int, int, int, android.graphics.Bitmap)\r\n","This method is called if a single buffer for a capture could not be sent to its\n            destination surface.":"如果无法将用于捕获的单个缓冲区发送到其\r\n            目标表面。\r\n","android.net.sip.SipProfile.Builder.SipProfile$Builder(android.net.sip.SipProfile)":"android.net.sip.SipProfile.Builder.SipProfile$Builder(android.net.sip.SipProfile)\r\n","android.graphics.Typeface.CustomFallbackBuilder":"android.graphics.Typeface.CustomFallbackBuilder\r\n","android.os.Build.VERSION_CODES.O":"android.os.Build.VERSION_CODES.O\r\n","Message type: outbox.":"消息类型：发件箱。\r\n","Called when taking bugreport resulted in an error.":"错误报告导致错误时调用。\r\n","android.hardware.camera2.CameraCaptureSession.StateCallback.onSurfacePrepared(android.hardware.camera2.CameraCaptureSession, android.view.Surface)":"android.hardware.camera2.CameraCaptureSession.StateCallback.onSurfacePrepared(android.hardware.camera2.CameraCaptureSession, android.view.Surface)\r\n","android.provider.Settings.System.TEXT_SHOW_PASSWORD":"android.provider.Settings.System.TEXT_SHOW_PASSWORD\r\n","android.content.pm.PackageInstaller.SessionInfo.STAGED_SESSION_NO_ERROR":"android.content.pm.PackageInstaller.SessionInfo.STAGED_SESSION_NO_ERROR\r\n","android.net.IpSecManager.UdpEncapsulationSocket.getPort()":"android.net.IpSecManager.UdpEncapsulationSocket.getPort()\r\n","android.provider.DocumentsContract.Document.MIME_TYPE_DIR":"android.provider.DocumentsContract.Document.MIME_TYPE_DIR\r\n","#accept(Bundle)":"#接受（捆绑）\r\n","Puts an advanced (printer specific) option.":"放置一个高级（特定于打印机）选项。\r\n","Notification style for custom views that are decorated by the system":"系统修饰的自定义视图的通知样式\r\n"," class contains curve\n            and duration information.":" 类包含曲线\r\n            和持续时间信息。\r\n","The ID of the TV channel that provides this TV program.":"提供该电视节目的电视频道ID。\r\n","Called when session state has lost state, to inform the app\n            about the condition so it can close the session and open a new\n            one to resume operation.":"当会话状态丢失时调用，通知应用程序\r\n            关于条件，以便它可以关闭会话并打开一个新的\r\n            一是恢复运营。\r\n","Content Uri for the specific SIM record with the provided ":"特定 SIM 记录的内容 URI\r\n","the MediaSyncEvent the method is called on.":"调用该方法的 MediaSyncEvent。\r\n","android.provider.FontsContract.FontInfo.getAxes()":"android.provider.FontsContract.FontInfo.getAxes()\r\n","android.provider.DocumentsContract.Document.FLAG_SUPPORTS_RENAME":"android.provider.DocumentsContract.Document.FLAG_SUPPORTS_RENAME\r\n","android.print.PrintJobInfo.Builder.setPages(android.print.PageRange[])":"android.print.PrintJobInfo.Builder.setPages(android.print.PageRange[])\r\n","android.app.ActivityManager.RunningServiceInfo.activeSince":"android.app.ActivityManager.RunningServiceInfo.activeSince\r\n","android.provider.SimPhonebookContract.SimRecords.getContentUri(int, int)":"android.provider.SimPhonebookContract.SimRecords.getContentUri(int, int)\r\n","new effect state.":"新效果状态。\r\n","A builder class for creating ":"用于创建的构建器类\r\n","An icon that represents the current state of this activity.":"表示此活动当前状态的图标。\r\n",", set this bit when\n            this call rang for a short period of time.":", 设置此位时\r\n            这个电话响了很短的时间。\r\n","android.app.Notification.WearableExtender.getHintScreenTimeout()":"android.app.Notification.WearableExtender.getHintScreenTimeout()\r\n","On Android 8.":"在安卓 8 上。\r\n","The expiration time for this recorded program, in milliseconds since the epoch.":"此录制节目的过期时间，自纪元以来以毫秒为单位。\r\n","android.os.BugreportManager.BugreportCallback.BUGREPORT_ERROR_USER_CONSENT_TIMED_OUT":"android.os.BugreportManager.BugreportCallback.BUGREPORT_ERROR_USER_CONSENT_TIMED_OUT\r\n"," subdirectory of a single\n            group.":" 单个子目录\r\n            团体。\r\n","MVNO type:\n            ":"移动虚拟运营商类型：\r\n            \r\n","android.content.AsyncTaskLoader":"android.content.AsyncTaskLoader\r\n","the context object to use.":"要使用的上下文对象。\r\n","BackupAgent#TYPE_FILE":"备份代理#TYPE_FILE\r\n","Interface that is implemented to discover when a Loader has finished\n            loading its data.":"为发现 Loader 何时完成而实现的接口\r\n            加载它的数据。\r\n","Value to specify if the device's UTC system clock should be set automatically, e.":"指定是否应自动设置设备的 UTC 系统时钟的值，例如。\r\n","android.provider.ContactsContract.Contacts.markAsContacted(android.content.ContentResolver, long)":"android.provider.ContactsContract.Contacts.markAsContacted（android.content.ContentResolver，长）\r\n","android.opengl.GLSurfaceView":"android.opengl.GLSurfaceView\r\n","The current time shift status. Should be one of the followings.\n            <ul>\n            <li>":"当前时移状态。应该是以下之一。\r\n            <ul>\r\n            <李>\r\n","The content URI for this table":"此表的内容 URI\r\n","gets the gain applied to the signal AFTER limiting. -or- sets the gain to be applied to the siganl AFTER the limiter.":"获取在限制后应用于信号的增益。 - 或 - 设置在限制器之后应用于信号的增益。\r\n","android.media.MediaDrm.ErrorCodes.ERROR_LICENSE_STATE":"android.media.MediaDrm.ErrorCodes.ERROR_LICENSE_STATE\r\n","The width of the video.":"视频的宽度。\r\n","the pending intent used to populate the floating window for this bubble, or\n            null if this bubble is created via ":"用于填充此气泡的浮动窗口的未决意图，或\r\n            如果此气泡是通过创建的，则为 null\r\n","android.app.assist.AssistStructure.ViewNode.isFocused()":"android.app.assist.AssistStructure.ViewNode.isFocused()\r\n","android.hardware.Camera.Parameters.setVideoStabilization(boolean)":"android.hardware.Camera.Parameters.setVideoStabilization（布尔值）\r\n","android.app.Instrumentation.ActivityMonitor.getFilter()":"android.app.Instrumentation.ActivityMonitor.getFilter()\r\n","android.provider.CallLog.Calls.FEATURES_WIFI":"android.provider.CallLog.Calls.FEATURES_WIFI\r\n","android.app.assist.AssistStructure.ViewNode.isChecked()":"android.app.assist.AssistStructure.ViewNode.isChecked()\r\n","Persistent unique id for each raw_contact within its account.":"其帐户中每个 raw_contact 的持久唯一 ID。\r\n","The package name of the remote user":"远程用户的包名\r\n","Query whether the sample rate is supported by the codec.":"查询编解码器是否支持该采样率。\r\n","#CONTENT_STREQUENT_URI":"#CONTENT_STREQUENT_URI\r\n","#STANDBY_BUCKET_CHANGED":"#STANDBY_BUCKET_CHANGED\r\n","ContentResolver#openAssetFileDescriptor(Uri, String)":"ContentResolver#openAssetFileDescriptor（Uri，字符串）\r\n","Sends a request to modify the states of multiple lights.":"发送请求以修改多个灯的状态。\r\n","HDR type for hdr10+.":"hdr10+ 的 HDR 类型。\r\n","android.provider.CallLog.Locations.AUTHORITY":"android.provider.CallLog.Locations.AUTHORITY\r\n","A human-readable string that can be shown in UI":"可以在 UI 中显示的人类可读字符串\r\n","android.media.session.MediaController.TransportControls.prepareFromUri(android.net.Uri, android.os.Bundle)":"android.media.session.MediaController.TransportControls.prepareFromUri(android.net.Uri, android.os.Bundle)\r\n","android.media.audiofx.DynamicsProcessing.Mbc":"android.media.audiofx.DynamicsProcessing.Mbc\r\n","android.hardware.location.GeofenceHardware":"android.hardware.location.GeofenceHardware\r\n","the volume control ID for this session or ":"此会话的音量控制 ID 或\r\n","android.media.tv.TvInputService.Session.onKeyUp(int, android.view.KeyEvent)":"android.media.tv.TvInputService.Session.onKeyUp(int, android.view.KeyEvent)\r\n","android.graphics.ImageDecoder.ImageInfo.isAnimated()":"android.graphics.ImageDecoder.ImageInfo.isAnimated()\r\n","Called as the first step of the Activity being stopped.":"作为要停止的 Activity 的第一步调用。\r\n","android.app.AlertDialog.Builder.AlertDialog$Builder(android.content.Context, int)":"android.app.AlertDialog.Builder.AlertDialog$Builder(android.content.Context, int)\r\n"," for\n            the single property being animated. If there are several properties being animated\n            (specified by several PropertyValuesHolder objects in the constructor), this function\n            returns the animated value for the first of those objects.":" 为了\r\n            正在动画的单个属性。如果有多个属性正在动画\r\n            （由构造函数中的几个 PropertyValuesHolder 对象指定），此函数\r\n            返回第一个对象的动画值。\r\n","android.app.ActivityManager.TaskDescription.getLabel()":"android.app.ActivityManager.TaskDescription.getLabel()\r\n","android.provider.ContactsContract.PinnedPositions.DEMOTED":"android.provider.ContactsContract.PinnedPositions.DEMOTED\r\n","android.net.IpSecManager.SecurityParameterIndex.getSpi()":"android.net.IpSecManager.SecurityParameterIndex.getSpi()\r\n","Get the gravity that this notification should have within the available viewport space.":"获取此通知在可用视口空间内应具有的重力。\r\n","android.provider.DocumentsContract.Root.FLAG_SUPPORTS_SEARCH":"android.provider.DocumentsContract.Root.FLAG_SUPPORTS_SEARCH\r\n"," if this session is an active staged session.":" 如果此会话是活动的暂存会话。\r\n","Returned by ":"返回者\r\n","android.os.VibrationEffect.Composition.PRIMITIVE_QUICK_RISE":"android.os.VibrationEffect.Composition.PRIMITIVE_QUICK_RISE\r\n","android:targetSdkVersion":"机器人：targetSdkVersion\r\n","The target Surface that the buffer will not be produced for":"不会为其生成缓冲区的目标 Surface\r\n","android.provider.CallLog.Calls.PRIORITY_NORMAL":"android.provider.CallLog.Calls.PRIORITY_NORMAL\r\n","android.media.audiofx.DynamicsProcessing.Mbc.DynamicsProcessing$Mbc(boolean, boolean, int)":"android.media.audiofx.DynamicsProcessing.Mbc.DynamicsProcessing$Mbc（布尔值，布尔值，整数）\r\n","ParcelFileDescriptor#MODE_READ_ONLY":"包裹文件描述符#MODE_READ_ONLY\r\n","android.graphics.Path.FillType":"android.graphics.Path.FillType\r\n","android.content.pm.PackageInstaller.Session.commit(android.content.IntentSender)":"android.content.pm.PackageInstaller.Session.commit(android.content.IntentSender)\r\n","android.net.UrlQuerySanitizer.ParameterValuePair.mValue":"android.net.UrlQuerySanitizer.ParameterValuePair.mValue\r\n"," package.":" 包裹。\r\n","Called to notify the client when the media scanner has finished\n            scanning a file.":"当媒体扫描器完成时调用以通知客户端\r\n            扫描文件。\r\n","Represents a range of carrier frequencies (inclusive) on which the\n            infrared transmitter can transmit":"表示载波频率范围（含），在该范围内\r\n            红外发射器可以发射\r\n","Creates an initially empty state builder.":"创建一个最初为空的状态生成器。\r\n","optional; may be ":"选修的;或许\r\n","Return a Bundle containing optional vendor-specific extension information.":"返回包含可选供应商特定扩展信息的 Bundle。\r\n","android.hardware.camera2.CameraManager.AvailabilityCallback.onCameraAccessPrioritiesChanged()":"android.hardware.camera2.CameraManager.AvailabilityCallback.onCameraAccessPrioritiesChanged()\r\n","the focus areas":"重点领域\r\n","android.provider.Telephony.BaseMmsColumns.MESSAGE_BOX_INBOX":"android.provider.Telephony.BaseMmsColumns.MESSAGE_BOX_INBOX\r\n","Special UID value for aggregate/unspecified.":"聚合/未指定的特殊 UID 值。\r\n","android.appwidget.AppWidgetManager.bindAppWidgetId(int, android.content.ComponentName)":"android.appwidget.AppWidgetManager.bindAppWidgetId(int, android.content.ComponentName)\r\n","android.hardware.Camera.Parameters.setGpsTimestamp(long)":"android.hardware.Camera.Parameters.setGpsTimestamp（长）\r\n","setNameY":"设置名称Y\r\n","bitmask of categories of notifications that can bypass DND.":"可以绕过 DND 的通知类别的位掩码。\r\n","The base set of attribute values.":"基本属性值集。\r\n","android.media.MediaCodecInfo.VideoCapabilities.getSupportedWidths()":"android.media.MediaCodecInfo.VideoCapabilities.getSupportedWidths()\r\n","android.location.GnssStatus.Callback":"android.location.GnssStatus.Callback\r\n","android.media.tv.TvContract.Channels.SERVICE_TYPE_AUDIO":"android.media.tv.TvContract.Channels.SERVICE_TYPE_AUDIO\r\n","Callback used to receive time shift position changes.":"用于接收时移位置变化的回调。\r\n","android.media.tv.TvContract.Channels.COLUMN_DISPLAY_NUMBER":"android.media.tv.TvContract.Channels.COLUMN_DISPLAY_NUMBER\r\n","android.net.nsd.NsdServiceInfo":"android.net.nsd.NsdServiceInfo\r\n","android.provider.Settings.System.DEBUG_APP":"android.provider.Settings.System.DEBUG_APP\r\n","android.graphics.ColorSpace":"android.graphics.ColorSpace\r\n","android.graphics.drawable.ShapeDrawable.ShaderFactory":"android.graphics.drawable.ShapeDrawable.ShaderFactory\r\n","The result of the sync operation.":"同步操作的结果。\r\n","Is this the current APN?":"这是当前的 APN 吗？\r\n","android.app.LoaderManager.LoaderCallbacks":"android.app.LoaderManager.LoaderCallbacks\r\n","android.app.Application.OnProvideAssistDataListener":"android.app.Application.OnProvideAssistDataListener\r\n","android.provider.Contacts.ContactMethods.CONTENT_EMAIL_ITEM_TYPE":"android.provider.Contacts.ContactMethods.CONTENT_EMAIL_ITEM_TYPE\r\n","android.media.MediaCodec.CryptoException.ERROR_INSUFFICIENT_OUTPUT_PROTECTION":"android.media.MediaCodec.CryptoException.ERROR_INSUFFICIENT_OUTPUT_PROTECTION\r\n","the subtitle data":"字幕数据\r\n","android.app.VoiceInteractor.Request.getName()":"android.app.VoiceInteractor.Request.getName()\r\n","Default network status.":"默认网络状态。\r\n","The TypeEvaluator will be automatically determined based on the type of values\n            supplied to PropertyValuesHolder.":"TypeEvaluator 将根据值的类型自动确定\r\n            提供给 PropertyValuesHolder。\r\n","android.provider.Contacts.PeopleColumns.NOTES":"android.provider.Contacts.PeopleColumns.NOTES\r\n","CallLog.Calls#MISSED_REASON":"CallLog.Calls#MISSED_REASON\r\n","android.media.MediaCodecInfo.VideoCapabilities.areSizeAndRateSupported(int, int, double)":"android.media.MediaCodecInfo.VideoCapabilities.areSizeAndRateSupported(int, int, double)\r\n","android.graphics.text.MeasuredText.Builder.MeasuredText$Builder(android.graphics.text.MeasuredText)":"android.graphics.text.MeasuredText.Builder.MeasuredText$Builder(android.graphics.text.MeasuredText)\r\n","android.app.assist.AssistStructure.ViewNode.getReceiveContentMimeTypes()":"android.app.assist.AssistStructure.ViewNode.getReceiveContentMimeTypes()\r\n","PackageInfo#installLocation":"PackageInfo#installLocation\r\n","SearchColumns#_ID":"搜索列#_ID\r\n","android.app.Notification.Style.internalSetSummaryText(java.lang.CharSequence)":"android.app.Notification.Style.internalSetSummaryText(java.lang.CharSequence)\r\n","An opaque value that contains hints on how to find the contact if\n            its row id changed as a result of a sync or aggregation.":"一个不透明的值，其中包含有关如何查找联系人的提示\r\n            它的行 ID 由于同步或聚合而更改。\r\n","android.provider.DocumentsContract.Document.FLAG_DIR_PREFERS_GRID":"android.provider.DocumentsContract.Document.FLAG_DIR_PREFERS_GRID\r\n","the button that was clicked (ex.\n                         ":"单击的按钮（例如\r\n                         \r\n","android.media.audiofx.PresetReverb.PresetReverb(int, int)":"android.media.audiofx.PresetReverb.PresetReverb(int, int)\r\n","android.provider.CallLog.Calls.CACHED_NUMBER_LABEL":"android.provider.CallLog.Calls.CACHED_NUMBER_LABEL\r\n","android.provider.ContactsContract.StreamItemPhotos":"android.provider.ContactsContract.StreamItemPhotos\r\n","true if this stage is currently used to process sound. When disabled,\n            the stage is bypassed and the sound is copied unaltered from input to output.":"如果此阶段当前用于处理声音，则为真。禁用时，\r\n            舞台被绕过，声音从输入端原封不动地复制到输出端。\r\n","android.media.MediaDrm.KeyRequest.getRequestType()":"android.media.MediaDrm.KeyRequest.getRequestType()\r\n","android.media.session.MediaController.TransportControls.prepareFromMediaId(java.lang.String, android.os.Bundle)":"android.media.session.MediaController.TransportControls.prepareFromMediaId(java.lang.String, android.os.Bundle)\r\n","android.app.Instrumentation.ActivityResult.getResultCode()":"android.app.Instrumentation.ActivityResult.getResultCode()\r\n","an end hyphen edit for the line.":"该行的结束连字符编辑。\r\n"," if the property is a resource id type.":" 如果该属性是资源 ID 类型。\r\n","to perform the undemote operation on.":"执行取消降级操作。\r\n","android.media.EncoderProfiles.VideoProfile.getWidth()":"android.media.EncoderProfiles.VideoProfile.getWidth()\r\n","android.content.ContentResolver.openFileDescriptor(android.net.Uri, java.lang.String, android.os.CancellationSignal)":"android.content.ContentResolver.openFileDescriptor(android.net.Uri, java.lang.String, android.os.CancellationSignal)\r\n","Returns the inverse transform of this color space as a new array.":"将此颜色空间的逆变换作为新数组返回。\r\n","true if the processing mode is supported, and it is successfully set, or\n                forcing was successfully disabled, false otherwise.":"如果支持处理模式，并且设置成功，则为 true，或者\r\n                强制已成功禁用，否则为假。\r\n","android.accessibilityservice.AccessibilityService.SoftKeyboardController.setShowMode(int)":"android.accessibilityservice.AccessibilityService.SoftKeyboardController.setShowMode(int)\r\n","'s subscription group. This value will be one of VCN_STATUS_CODE_*.":"的订阅组。该值将是 VCN_STATUS_CODE_* 之一。\r\n","android.content.pm.PackageManager.Property.getBoolean()":"android.content.pm.PackageManager.Property.getBoolean()\r\n","android.net.sip.SipAudioCall.Listener":"android.net.sip.SipAudioCall.Listener\r\n","android.provider.DocumentsContract.Document.COLUMN_LAST_MODIFIED":"android.provider.DocumentsContract.Document.COLUMN_LAST_MODIFIED\r\n","inputGain value in decibels (dB). 0 dB means no change.":"inputGain 值以分贝 (dB) 为单位。 0 dB 表示没有变化。\r\n","android.content.ClipboardManager.OnPrimaryClipChangedListener.onPrimaryClipChanged()":"android.content.ClipboardManager.OnPrimaryClipChangedListener.onPrimaryClipChanged()\r\n","android.provider.ContactsContract.Contacts.ENTERPRISE_CONTENT_FILTER_URI":"android.provider.ContactsContract.Contacts.ENTERPRISE_CONTENT_FILTER_URI\r\n","the type of error that has occurred:\n            <ul>\n            <li>":"发生的错误类型：\r\n            <ul>\r\n            <李>\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV422PackedPlanar":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV422PackedPlanar\r\n","#TRACK_TYPE_TEXT":"#TRACK_TYPE_TEXT\r\n","android.graphics.ColorSpace.Rgb.getInverseTransform(float[])":"android.graphics.ColorSpace.Rgb.getInverseTransform(float[])\r\n","android.animation.LayoutTransition.TransitionListener.endTransition(android.animation.LayoutTransition, android.view.ViewGroup, android.view.View, int)":"android.animation.LayoutTransition.TransitionListener.endTransition(android.animation.LayoutTransition, android.view.ViewGroup, android.view.View, int)\r\n","android.graphics.ColorSpace.Rgb.getTransform(float[])":"android.graphics.ColorSpace.Rgb.getTransform(float[])\r\n","android.provider.Settings.System.MUTE_STREAMS_AFFECTED":"android.provider.Settings.System.MUTE_STREAMS_AFFECTED\r\n","Flag indicating that this root is currently empty.":"指示此根当前为空的标志。\r\n","Flags that apply to a root.":"适用于根的标志。\r\n","Returns the array of tab stops in pixels.":"返回以像素为单位的制表位数组。\r\n","Newly created Typeface. May return null if some parameters are invalid.":"新创建的字体。如果某些参数无效，可能会返回 null。\r\n","MIME type for HEIF still image data encoded in HEVC.":"以 HEVC 编码的 HEIF 静止图像数据的 MIME 类型。\r\n","Construct a new Key with a given name and type.":"构造一个具有给定名称和类型的新密钥。\r\n","Key to extract the number of audio channels\n            from the ":"提取音频通道数的键\r\n            来自\r\n","This URI allows the caller to query for the maximum dimensions of a display photo\n            or thumbnail.":"此 URI 允许调用者查询显示照片的最大尺寸\r\n            或缩略图。\r\n","android.media.AudioManager.AudioRecordingCallback.onRecordingConfigChanged(java.util.List<android.media.AudioRecordingConfiguration>)":"android.media.AudioManager.AudioRecordingCallback.onRecordingConfigChanged(java.util.List<android.media.AudioRecordingConfiguration>)\r\n"," to indicate that visual voicemail is disabled by\n            the user.":" 指示可视语音邮件已被禁用\r\n            用户。\r\n","android.media.MediaRouter2.TransferCallback":"android.media.MediaRouter2.TransferCallback\r\n","A thumbnail for the specified icon or the icon itself if the\n                    thumbnail could not be created.":"指定图标的缩略图或图标本身（如果\r\n                    无法创建缩略图。\r\n","Create a new trigger description.":"创建新的触发器描述。\r\n","Returns the timestamp in nano seconds when this event was logged.":"返回记录此事件时的时间戳（以纳秒为单位）。\r\n","<b>video decoder only</b>: codec supports queuing partial frames.":"<b>仅视频解码器</b>：编解码器支持对部分帧进行排队。\r\n","whether the audio should loop forever.\n                     (see ":"音频是否应该永远循环。\r\n                     （看\r\n","android.provider.CallLog.Calls.PRESENTATION_ALLOWED":"android.provider.CallLog.Calls.PRESENTATION_ALLOWED\r\n",": one of the application's\n            content providers is being used by another process.":": 应用程序之一\r\n            另一个进程正在使用内容提供者。\r\n","AudioRouting":"音频路由\r\n","AV1 Main profile 4:2:0 8-bit\n            \n            See definition in\n            ":"AV1 主要配置文件 4:2:0 8 位\r\n            \r\n            见定义\r\n            \r\n"," to request that user action not be required for this install.":" 请求此安装不需要用户操作。\r\n","android.provider.Settings.Global.RADIO_CELL":"android.provider.Settings.Global.RADIO_CELL\r\n","Skip to the next item.":"跳到下一个项目。\r\n","the picker associated with the dialog":"与对话框关联的选择器\r\n","android.provider.CalendarContract.EventsColumns.CUSTOM_APP_PACKAGE":"android.provider.CalendarContract.EventsColumns.CUSTOM_APP_PACKAGE\r\n","the position of the item in the list that was clicked":"项目在列表中被点击的位置\r\n","InputMethodService#onAppPrivateCommand\n            InputMethodService.onAppPrivateCommand()":"InputMethodService#onAppPrivateCommand\r\n            InputMethodService.onAppPrivateCommand()\r\n","android.hardware.biometrics.BiometricPrompt.AuthenticationCallback.onAuthenticationError(int, java.lang.CharSequence)":"android.hardware.biometrics.BiometricPrompt.AuthenticationCallback.onAuthenticationError(int, java.lang.CharSequence)\r\n"," is non-null, this is where the current selection starts.":" 非空，这是当前选择开始的地方。\r\n","android.media.MediaParser.SeekMap.getDurationMicros()":"android.media.MediaParser.SeekMap.getDurationMicros()\r\n","android.hardware.Camera.Parameters.isAutoExposureLockSupported()":"android.hardware.Camera.Parameters.isAutoExposureLockSupported()\r\n","android.media.tv.TvInputService.HardwareSession.onSetSurface(android.view.Surface)":"android.media.tv.TvInputService.HardwareSession.onSetSurface(android.view.Surface)\r\n","android.animation.LayoutTransition#DISAPPEARING":"android.animation.LayoutTransition#消失\r\n","android.app.FragmentManager.FragmentLifecycleCallbacks":"android.app.FragmentManager.FragmentLifecycleCallbacks\r\n","The setting's current value.":"设置的当前值。\r\n","android.provider.ContactsContract.SyncState.getWithUri(android.content.ContentProviderClient, android.accounts.Account)":"android.provider.ContactsContract.SyncState.getWithUri(android.content.ContentProviderClient, android.accounts.Account)\r\n"," setting that indicates that the directory\n            allow creation of shortcuts for contact as well as their constituent elements.":" 指示目录的设置\r\n            允许创建联系人的快捷方式及其组成元素。\r\n","android.provider.Contacts.Organizations.CONTENT_DIRECTORY":"android.provider.Contacts.Organizations.CONTENT_DIRECTORY\r\n","The priority of the call, as delivered via call composer.":"呼叫的优先级，通过呼​​叫作曲家提供。\r\n","Listener passed to\n            ":"听众传递给\r\n            \r\n","Returns the volumes (y) coordinate array of the volume curve points.":"返回体积曲线点的体积 (y) 坐标数组。\r\n","#coerceToHtmlText(Context)":"#coerceToHtmlText（上下文）\r\n","android.provider.Settings.System.WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY":"android.provider.Settings.System.WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY\r\n","Sets the parameters that can be used to control a render request for a\n            ":"设置可用于控制渲染请求的参数\r\n            \r\n","Callback that is called when an input Image is released back to\n            ImageWriter after the data consumption.":"当输入图像被释放回时调用的回调\r\n            数据消费后的ImageWriter。\r\n","android.provider.Contacts.Phones.CONTENT_ITEM_TYPE":"android.provider.Contacts.Phones.CONTENT_ITEM_TYPE\r\n","android.media.tv.TvContract.Channels.TYPE_T_DMB":"android.media.tv.TvContract.Channels.TYPE_T_DMB\r\n","android.media.RemoteController.setArtworkConfiguration(int, int)":"android.media.RemoteController.setArtworkConfiguration(int, int)\r\n","MEDIA_INFO_NETWORK_BANDWIDTH (703)":"MEDIA_INFO_NETWORK_BANDWIDTH (703)\r\n","android.provider.Telephony.BaseMmsColumns.THREAD_ID":"android.provider.Telephony.BaseMmsColumns.THREAD_ID\r\n","the unmodifiable list of deselectable routes for the session.":"会话的可取消选择路由的不可修改列表。\r\n","The bundle of service-specific arguments sent to the media\n                       browser service.":"发送到媒体的特定于服务的参数包\r\n                       浏览器服务。\r\n","android.app.NotificationManager.Policy.SUPPRESSED_EFFECT_SCREEN_OFF":"android.app.NotificationManager.Policy.SUPPRESSED_EFFECT_SCREEN_OFF\r\n","number of bands for PostEq stage. This can't be changed later.":"PostEq 阶段的频段数。这以后无法更改。\r\n","\n            Annex A.":"\r\n            附件 A。\r\n","android.net.Proxy.EXTRA_PROXY_INFO":"android.net.Proxy.EXTRA_PROXY_INFO\r\n","Creates a new builder for ":"为创建一个新的构建器\r\n","android.media.MediaSession2.ControllerInfo.getConnectionHints()":"android.media.MediaSession2.ControllerInfo.getConnectionHints()\r\n","Called when the MediaProjection session is no longer valid.":"当 MediaProjection 会话不再有效时调用。\r\n"," instance from an ARGB color int.":" 来自 ARGB 颜色整数的实例。\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatL4":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatL4\r\n"," and was bound with the flag\n            ":" 并被旗帜束缚\r\n            \r\n","the data type to be loaded.":"要加载的数据类型。\r\n","android.media.MediaCodecInfo.CodecProfileLevel.AV1ProfileMain8":"android.media.MediaCodecInfo.CodecProfileLevel.AV1ProfileMain8\r\n","#CONTENT_FILTER_URI":"#CONTENT_FILTER_URI\r\n","A non-null array of linear RGB values, its length\n                     must be at least 3":"线性 RGB 值的非空数组，其长度\r\n                     必须至少为 3\r\n","The Style specifies if the primitive being drawn is filled, stroked, or\n            both (in the same color).":"Style 指定正在绘制的图元是填充的、描边的还是\r\n            两者（颜色相同）。\r\n","the diffusion level. See ":"扩散水平。看\r\n","android.os.Build.VERSION_CODES.Q":"android.os.Build.VERSION_CODES.Q\r\n","\n                        is never called, the default will be the YCbCr_420_SP\n                        (NV21) format.":"\r\n                        永远不会被调用，默认为 YCbCr_420_SP\r\n                        (NV21) 格式。\r\n","android.bluetooth.le.AdvertisingSetParameters.Builder":"android.bluetooth.le.AdvertisingSetParameters.Builder\r\n","Callback interface for listening to fragment state changes that happen\n            within a given FragmentManager.":"监听片段状态变化的回调接口\r\n            在给定的 FragmentManager 中。\r\n","android.app.AppOpsManager.OnOpNotedCallback.onNoted(android.app.SyncNotedAppOp)":"android.app.AppOpsManager.OnOpNotedCallback.onNoted(android.app.SyncNotedAppOp)\r\n","Convenience function for retrieving a single secure settings value\n            as a ":"检索单个安全设置值的便捷功能\r\n            作为一个\r\n","android.provider.FontsContract.FontInfo.getTtcIndex()":"android.provider.FontsContract.FontInfo.getTtcIndex()\r\n","Notifies that all the data was written.":"通知所有数据已写入。\r\n","android.graphics.drawable.Drawable.ConstantState":"android.graphics.drawable.Drawable.ConstantState\r\n","android.media.tv.TvInputService.Session.onTimeShiftPlay(android.net.Uri)":"android.media.tv.TvInputService.Session.onTimeShiftPlay(android.net.Uri)\r\n","Radio Access Technology info.":"无线电接入技术信息。\r\n","The caller's Context, from which its ContentResolver\n            and other things can be retrieved.":"调用者的上下文，其 ContentResolver\r\n            和其他东西可以检索。\r\n","#pause() paused":"#pause() 暂停\r\n","The Julian end day of the instance, relative to the local time\n            zone.":"实例的 Julian 结束日期，相对于本地时间\r\n            区。\r\n","Gets the timestamp of taking the screenshot.":"获取截图的时间戳。\r\n","android.database.sqlite.SQLiteDatabase.OpenParams":"android.database.sqlite.SQLiteDatabase.OpenParams\r\n","android.media.audiofx.EnvironmentalReverb.setRoomLevel(short)":"android.media.audiofx.EnvironmentalReverb.setRoomLevel（短）\r\n","android.opengl.GLSurfaceView.GLWrapper.wrap(javax.microedition.khronos.opengles.GL)":"android.opengl.GLSurfaceView.GLWrapper.wrap(javax.microedition.khronos.opengles.GL)\r\n","android.graphics.Paint.FontMetricsInt.descent":"android.graphics.Paint.FontMetricsInt.descent\r\n","android.media.MediaCodecInfo.CodecProfileLevel.AVCProfileHigh":"android.media.MediaCodecInfo.CodecProfileLevel.AVCProfileHigh\r\n","Optionally set an icon representing the app being installed.":"（可选）设置代表正在安装的应用程序的图标。\r\n","android.media.audiofx.Visualizer.OnDataCaptureListener.onFftDataCapture(android.media.audiofx.Visualizer, byte[], int)":"android.media.audiofx.Visualizer.OnDataCaptureListener.onFftDataCapture(android.media.audiofx.Visualizer, byte[], int)\r\n","Typeface The Typeface data associated with the resource.":"字体 与资源关联的字体数据。\r\n","android.provider.Browser.SearchColumns":"android.provider.Browser.SearchColumns\r\n","Server address.":"服务器地址。\r\n"," used to receive updates on a specific field in the\n            ServiceState provider.":" 用于接收关于特定字段的更新\r\n            服务状态提供者。\r\n","android.provider.Settings.System.LOCATION_PROVIDERS_ALLOWED":"android.provider.Settings.System.LOCATION_PROVIDERS_ALLOWED\r\n","android.companion.AssociationRequest.Builder":"android.companion.AssociationRequest.Builder\r\n","android.content.ContentProviderOperation.Builder":"android.content.ContentProviderOperation.Builder\r\n"," when the primary\n            clip changes.":" 当初级\r\n            剪辑变化。\r\n","A comma separated list of reminder methods supported for this\n            calendar in the format \"#,#,#\".":"此支持的提醒方法的逗号分隔列表\r\n            格式为“#,#,#”的日历。\r\n","android.nfc.NfcAdapter.CreateNdefMessageCallback.createNdefMessage(android.nfc.NfcEvent)":"android.nfc.NfcAdapter.CreateNdefMessageCallback.createNdefMessage(android.nfc.NfcEvent)\r\n","android.media.MediaSession2Service.MediaNotification.getNotification()":"android.media.MediaSession2Service.MediaNotification.getNotification()\r\n","android.os.storage.StorageManager.openProxyFileDescriptor(int, android.os.ProxyFileDescriptorCallback, android.os.Handler)":"android.os.storage.StorageManager.openProxyFileDescriptor(int, android.os.ProxyFileDescriptorCallback, android.os.Handler)\r\n","Builds the configuration instance.":"构建配置实例。\r\n","android.provider.Contacts.Extensions":"android.provider.Contacts.Extensions\r\n","Create a default BitmapParams object.":"创建一个默认的 BitmapParams 对象。\r\n","android.os.CombinedVibration.ParallelCombination":"android.os.CombinedVibration.ParallelCombination\r\n","Interface for notifying clients of the result of scanning a\n            requested media file.":"通知客户端扫描结果的接口\r\n            请求的媒体文件。\r\n","the String GatewayConnection name for the GatewayConnection\n                encountering an error. This will match the name for exactly one ":"GatewayConnection 的字符串 GatewayConnection 名称\r\n                遇到错误。这将完全匹配一个名称\r\n","android.provider.CalendarContract.EventDaysColumns.ENDDAY":"android.provider.CalendarContract.EventDaysColumns.ENDDAY\r\n","android.provider.ContactsContract.DataUsageFeedback.USAGE_TYPE_LONG_TEXT":"android.provider.ContactsContract.DataUsageFeedback.USAGE_TYPE_LONG_TEXT\r\n","The object whose properties are to be animated. This object should\n                          have public methods on it called ":"其属性要设置动画的对象。这个对象应该\r\n                          上面有公共方法\r\n","android.hardware.Camera.Parameters.getSupportedAntibanding()":"android.hardware.Camera.Parameters.getSupportedAntibanding()\r\n",": Mute the content associated with the notification.":"：静音与通知相关的内容。\r\n","android.hardware.camera2.params.MandatoryStreamCombination.MandatoryStreamInformation":"android.hardware.camera2.params.MandatoryStreamCombination.MandatoryStreamInformation\r\n"," or\n                              ":" 或者\r\n                              \r\n","android.provider.ContactsContract.ContactStatusColumns.CONTACT_STATUS_LABEL":"android.provider.ContactsContract.ContactStatusColumns.CONTACT_STATUS_LABEL\r\n","The subscription ID of the SIM the record is from.":"记录来自的 SIM 卡的订阅 ID。\r\n","The ID of the TV input service that provides this TV channel.":"提供此电视频道的电视输入服务的 ID。\r\n","android.provider.Settings.Global.WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY":"android.provider.Settings.Global.WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY\r\n"," style URL for undelivered messages in this table.":" 此表中未送达消息的样式 URL。\r\n"," that allows the caller\n            to specify which of the supported wallpaper categories to set.":" 允许调用者\r\n            指定要设置哪些受支持的墙纸类别。\r\n","The time elapsed since the previous frame, in milliseconds.":"自上一帧以来经过的时间，以毫秒为单位。\r\n","Flag indicating that a document can be removed from a parent.":"指示可以从父文档中删除文档的标志。\r\n","android.media.MediaScannerConnection.MediaScannerConnectionClient.onMediaScannerConnected()":"android.media.MediaScannerConnection.MediaScannerConnectionClient.onMediaScannerConnected()\r\n","android.graphics.HardwareRenderer.FrameRenderRequest":"android.graphics.HardwareRenderer.FrameRenderRequest\r\n","android.media.audiofx.DynamicsProcessing.MbcBand.setReleaseTime(float)":"android.media.audiofx.DynamicsProcessing.MbcBand.setReleaseTime(浮动)\r\n","android.media.MediaCodecInfo.VideoCapabilities.getSupportedWidthsFor(int)":"android.media.MediaCodecInfo.VideoCapabilities.getSupportedWidthsFor(int)\r\n","#DEVICE_TYPE_BLUETOOTH":"#DEVICE_TYPE_BLUETOOTH\r\n","android.app.ActivityManager.AppTask":"android.app.ActivityManager.AppTask\r\n","android.opengl.GLSurfaceView.Renderer.onSurfaceChanged(javax.microedition.khronos.opengles.GL10, int, int)":"android.opengl.GLSurfaceView.Renderer.onSurfaceChanged(javax.microedition.khronos.opengles.GL10, int, int)\r\n","android.app.assist.AssistStructure.ViewNode.getTextColor()":"android.app.assist.AssistStructure.ViewNode.getTextColor()\r\n","Base class for stages that hold bands":"举办乐队的舞台的基类\r\n","android.provider.Contacts.OrganizationColumns.TITLE":"android.provider.Contacts.OrganizationColumns.TITLE\r\n","If set to 1 this causes events on this calendar to be duplicated with\n            ":"如果设置为 1，这会导致此日历上的事件与\r\n            \r\n","android.nfc.NfcAdapter.getDefaultAdapter()":"android.nfc.NfcAdapter.getDefaultAdapter()\r\n","True if no further handling is desired":"如果不需要进一步处理则为真\r\n","Error type: generic transient error.":"错误类型：一般瞬态错误。\r\n","Data#MIMETYPE":"数据#MIMETYPE\r\n","android.provider.Telephony.MmsSms.ERR_TYPE_SMS_PROTO_PERMANENT":"android.provider.Telephony.MmsSms.ERR_TYPE_SMS_PROTO_PERMANENT\r\n","android.media.MediaRouter.UserRouteInfo.setVolumeHandling(int)":"android.media.MediaRouter.UserRouteInfo.setVolumeHandling(int)\r\n","is a ":"是一个\r\n","Listener for events relating to a SIP call, such as when a call is being\n            recieved (\"on ringing\") or a call is outgoing (\"on calling\").":"与 SIP 呼叫相关的事件的侦听器，例如呼叫何时进行\r\n            收到（“正在响铃”）或正在拨出电话（“正在呼叫”）。\r\n","Tag of the bucket.":"桶的标签。\r\n","Retrieves the system id of the conditional access system.":"检索条件访问系统的系统 ID。\r\n","the namespace to set for the ":"为\r\n","TvInputManager#RECORDING_ERROR_UNKNOWN":"TvInputManager#RECORDING_ERROR_UNKNOWN\r\n","android.provider.ContactsContract.DataColumns.DATA11":"android.provider.ContactsContract.DataColumns.DATA11\r\n","android.media.FaceDetector.Face.confidence()":"android.media.FaceDetector.Face.confidence()\r\n","android.bluetooth.le.ScanSettings.Builder.build()":"android.bluetooth.le.ScanSettings.Builder.build()\r\n"," to indicate that visual voicemail has failed to\n            be configured.":" 表示可视语音邮件未能\r\n            被配置。\r\n","android.os.BugreportManager.BugreportCallback.BUGREPORT_ERROR_INVALID_INPUT":"android.os.BugreportManager.BugreportCallback.BUGREPORT_ERROR_INVALID_INPUT\r\n","schemaType":"架构类型\r\n","the plugin status which is updated.":"更新的插件状态。\r\n","The MIME type of a directory of TV channels.":"电视频道目录的 MIME 类型。\r\n","A value of type T, converted from ":"类型 T 的值，从\r\n","android.app.ActivityManager.RunningAppProcessInfo.pkgList":"android.app.ActivityManager.RunningAppProcessInfo.pkgList\r\n","The video resolution for ultra high-definition.":"超高清的视频分辨率。\r\n","Flexible 12 bits per pixel, subsampled YUV color format with 8-bit chroma and luma\n            components.":"灵活的每像素 12 位，具有 8 位色度和亮度的二次采样 YUV 颜色格式\r\n            成分。\r\n","android.media.audiofx.DynamicsProcessing.BandStage.DynamicsProcessing$BandStage(boolean, boolean, int)":"android.media.audiofx.DynamicsProcessing.BandStage.DynamicsProcessing$BandStage（布尔值，布尔值，整数）\r\n","android.content.pm.PackageInstaller.SessionInfo.STAGED_SESSION_ACTIVATION_FAILED":"android.content.pm.PackageInstaller.SessionInfo.STAGED_SESSION_ACTIVATION_FAILED\r\n","android.media.MediaCodecInfo.EncoderCapabilities.getQualityRange()":"android.media.MediaCodecInfo.EncoderCapabilities.getQualityRange()\r\n","android.app.ActivityManager.MemoryInfo.threshold":"android.app.ActivityManager.MemoryInfo.threshold\r\n","#getMetrics":"#getMetrics\r\n","an entier font ascent of the line in pixels.":"以像素为单位的线的整个字体上升。\r\n","android.provider.ContactsContract.StreamItemPhotosColumns.SORT_INDEX":"android.provider.ContactsContract.StreamItemPhotosColumns.SORT_INDEX\r\n","the route info which was used for the transfer":"用于转移的路线信息\r\n","android.provider.DocumentsContract.Document.COLUMN_SUMMARY":"android.provider.DocumentsContract.Document.COLUMN_SUMMARY\r\n","android.content.pm.ActivityInfo#CONFIG_MNC\n            PackageManager.ActivityInfo.CONFIG_MNC":"android.content.pm.ActivityInfo#CONFIG_MNC\r\n            PackageManager.ActivityInfo.CONFIG_MNC\r\n","If true, values in the style resource will always be\n                         used in the theme; otherwise, they will only be used\n                         if not already defined in the theme.":"如果为真，样式资源中的值将始终为\r\n                         用于主题；否则，它们只会被使用\r\n                         如果尚未在主题中定义。\r\n","android.print.PrinterCapabilitiesInfo.Builder.PrinterCapabilitiesInfo$Builder(android.print.PrinterId)":"android.print.PrinterCapabilitiesInfo.Builder.PrinterCapabilitiesInfo$Builder(android.print.PrinterId)\r\n","android.graphics.fonts.Font.Builder.Font$Builder(android.content.res.AssetManager, java.lang.String)":"android.graphics.fonts.Font.Builder.Font$Builder(android.content.res.AssetManager, java.lang.String)\r\n","Called as the last step of the Activity being destroyed.":"在被销毁的 Activity 的最后一步调用。\r\n","android.provider.CallLog.Calls.AUTO_MISSED_MAXIMUM_DIALING":"android.provider.CallLog.Calls.AUTO_MISSED_MAXIMUM_DIALING\r\n","Once the user has dismissed the notification the alert's state should\n            be set to dismissed so it is not fired again.":"一旦用户关闭了通知，警报的状态应该\r\n            设置为 dismissed，这样它就不会被再次触发。\r\n","The standard text shown as the contact's display name, based on the best\n            available information for the contact (for example, it might be the email address\n            if the name is not available).":"显示为联系人显示名称的标准文本，基于最佳\r\n            联系人的可用信息（例如，它可能是电子邮件地址\r\n            如果名称不可用）。\r\n","<b>decoder only</b>If true, the codec supports partial (including multiple) access units\n            per input buffer.":"<b>decoder only</b>如果为true，编解码器支持部分（包括多个）访问单元\r\n            每个输入缓冲区。\r\n","high frequency attenuation level in millibels. The valid range is [-9000, 0].":"以毫贝为单位的高频衰减水平。有效范围是 [-9000, 0]。\r\n","Returns the supported range of quality values.":"返回支持的质量值范围。\r\n","android.provider.ContactsContract.PresenceColumns.IM_HANDLE":"android.provider.ContactsContract.PresenceColumns.IM_HANDLE\r\n","Create a Builder using a ":"使用\r\n","For an incoming call, the secondary line number the call was received via.":"对于传入呼叫，接收呼叫的辅助线路号码。\r\n","KeyguardManager#exitKeyguardSecurely":"KeyguardManager#exitKeyguard安全\r\n","android.provider.Settings.Secure.WIFI_WATCHDOG_MAX_AP_CHECKS":"android.provider.Settings.Secure.WIFI_WATCHDOG_MAX_AP_CHECKS\r\n","The minutes prior to the event that the alarm should ring.":"警报应响起的事件发生前的分钟数。\r\n","L MR1.":"大号 MR1。\r\n","The modification time of the file when it was backed up, suitable to\n                be assigned to the file after its data is written.":"文件备份时的修改时间，适合于\r\n                在写入数据后分配给文件。\r\n"," of the raw contact that the rule\n            applies to.":" 规则的原始联系\r\n            适用于。\r\n",": always returns false (doesn't handle the event).":": 总是返回 false（不处理事件）。\r\n","android.provider.ContactsContract.GroupsColumns.GROUP_IS_READ_ONLY":"android.provider.ContactsContract.GroupsColumns.GROUP_IS_READ_ONLY\r\n","android.media.MediaCodec.Callback.onInputBufferAvailable(android.media.MediaCodec, int)":"android.media.MediaCodec.Callback.onInputBufferAvailable(android.media.MediaCodec, int)\r\n"," if the content intent will launch an activity and transitions should\n            be generated, false otherwise. The default value is ":" 如果内容意图将启动一个活动并且转换应该\r\n            生成，否则为假。默认值为\r\n","android.media.metrics.PlaybackMetrics.Builder":"android.media.metrics.PlaybackMetrics.Builder\r\n","android.media.tv.TvContract.Channels.TYPE_DVB_C2":"android.media.tv.TvContract.Channels.TYPE_DVB_C2\r\n","android.app.Notification.Action.getSemanticAction()":"android.app.Notification.Action.getSemanticAction()\r\n","android.media.MediaRouter.RouteInfo.getDeviceType()":"android.media.MediaRouter.RouteInfo.getDeviceType()\r\n","android.app.job.JobInfo.TriggerContentUri.FLAG_NOTIFY_FOR_DESCENDANTS":"android.app.job.JobInfo.TriggerContentUri.FLAG_NOTIFY_FOR_DESCENDANTS\r\n",", or send a\n            ":", 或发送\r\n            \r\n","Base class for voice interaction requests that can be submitted to the interactor.":"可以提交给交互器的语音交互请求的基类。\r\n","android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC9":"android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC9\r\n","Number is allowed to display for caller id.":"允许显示来电显示号码。\r\n","android.location.GnssAntennaInfo.SphericalCorrections.getCorrectionUncertaintiesArray()":"android.location.GnssAntennaInfo.SphericalCorrections.getCorrectionUncertaintiesArray()\r\n","Returns the parent multi-package session ID if this session belongs to one,\n            ":"如果此会话属于一个，则返回父多包会话 ID，\r\n            \r\n","the list of routes that have been changed. It's never empty.":"已更改的路由列表。它永远不会是空的。\r\n","Called when a fragment is being created as part of a view layout\n            inflation, typically from setting the content view of an activity.":"在创建片段作为视图布局的一部分时调用\r\n            通货膨胀，通常来自设置活动的内容视图。\r\n","android.provider.CalendarContract.CalendarEntity":"android.provider.CalendarContract.CalendarEntity\r\n","android.provider.Contacts.GroupMembership.PERSON_ID":"android.provider.Contacts.GroupMembership.PERSON_ID\r\n","-style interface of ":"风格的界面\r\n"," providing a directory of\n            people.":" 提供一个目录\r\n            人们。\r\n"," setting that indicates that the directory\n            allow its data copied only to the account specified by\n            ":" 指示目录的设置\r\n            允许其数据仅复制到指定的帐户\r\n            \r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format24BitABGR6666":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format24BitABGR6666\r\n","The extras that can include other information associated with the\n                          ":"附加信息可以包括与\r\n                          \r\n","Defines the maximum volume at which the playback associated with this route is performed\n            (for user feedback purposes).":"定义执行与此路由关联的播放的最大音量\r\n            （用于用户反馈目的）。\r\n","android.provider.CalendarContract.EventsColumns.LAST_SYNCED":"android.provider.CalendarContract.EventsColumns.LAST_SYNCED\r\n","android.media.session.MediaController.TransportControls.setRating(android.media.Rating)":"android.media.session.MediaController.TransportControls.setRating(android.media.Rating)\r\n","android.graphics.text.LineBreaker.ParagraphConstraints.setIndent(float, int)":"android.graphics.text.LineBreaker.ParagraphConstraints.setIndent(float, int)\r\n","This class represents a match objects for any Snippets that might be present in ":"此类表示可能存在于中的任何片段的匹配对象\r\n","the reference signature which will be compared with the\n                   computed signature":"将与比较的参考签名\r\n                   计算签名\r\n","android.provider.CalendarContract.SyncColumns.CAN_PARTIALLY_UPDATE":"android.provider.CalendarContract.SyncColumns.CAN_PARTIALLY_UPDATE\r\n","HEIF media file format":"HEIF 媒体文件格式\r\n","The ID of the input method to make current. This IME must be installed and\n                         enabled.":"成为当前输入法的ID。这个 IME 必须安装并且\r\n                         启用。\r\n","android.graphics.Paint.FontMetrics.ascent":"android.graphics.Paint.FontMetrics.ascent\r\n"," refers to a network file the\n            ":" 指的是一个网络文件\r\n            \r\n","the buffer that holds the data to write, starting at the position reported\n                by ":"保存要写入的数据的缓冲区，从报告的位置开始\r\n                经过\r\n","Class constructor for Equalizer (Eq) stage":"均衡器 (Eq) 阶段的类构造函数\r\n","android.animation.ValueAnimator":"android.animation.ValueAnimator\r\n","android.provider.ContactsContract.PinnedPositions.undemote(android.content.ContentResolver, long)":"android.provider.ContactsContract.PinnedPositions.undemote（android.content.ContentResolver，长）\r\n",".\n             If ":".\r\n             如果\r\n","Sets installer-provided checksums for the APK file in session.":"为会话中的 APK 文件设置安装程序提供的校验和。\r\n","android.app.appsearch.AppSearchSchema.BytesPropertyConfig":"android.app.appsearch.AppSearchSchema.BytesPropertyConfig\r\n","android.graphics.drawable.Drawable.ConstantState.canApplyTheme()":"android.graphics.drawable.Drawable.ConstantState.canApplyTheme()\r\n","the Uri used to observe specific carrier identity changes":"用于观察特定运营商身份变化的Uri\r\n","android.provider.CalendarContract.EventsColumns.GUESTS_CAN_SEE_GUESTS":"android.provider.CalendarContract.EventsColumns.GUESTS_CAN_SEE_GUESTS\r\n","C.":"C。\r\n","android.app.ActivityManager.MemoryInfo.totalMem":"android.app.ActivityManager.MemoryInfo.totalMem\r\n","android.media.MediaCodecInfo.CodecCapabilities.FEATURE_AdaptivePlayback":"android.media.MediaCodecInfo.CodecCapabilities.FEATURE_AdaptivePlayback\r\n","android.net.sip.SipAudioCall.Listener.onCallBusy(android.net.sip.SipAudioCall)":"android.net.sip.SipAudioCall.Listener.onCallBusy(android.net.sip.SipAudioCall)\r\n","android.provider.ContactsContract.GroupsColumns.AUTO_ADD":"android.provider.ContactsContract.GroupsColumns.AUTO_ADD\r\n","android.inputmethodservice.Keyboard.Key.iconPreview":"android.inputmethodservice.Keyboard.Key.iconPreview\r\n","android.provider.Contacts.Phones.PERSON_ID":"android.provider.Contacts.Phones.PERSON_ID\r\n","android.media.MediaPlayer.OnVideoSizeChangedListener":"android.media.MediaPlayer.OnVideoSizeChangedListener\r\n","density specified using a permille scale. The valid range is [0, 1000].\n            A value of 1000 o/oo indicates a natural sounding reverberation. Values below this level\n            produce a more colored effect.":"使用千分尺指定的密度。有效范围是 [0, 1000]。\r\n            值 1000 o/oo 表示自然的混响。低于此水平的值\r\n            产生更显色的效果。\r\n","android.media.audiofx.AudioEffect.Descriptor.name":"android.media.audiofx.AudioEffect.Descriptor.name\r\n","android.print.PrintDocumentAdapter.LayoutResultCallback":"android.print.PrintDocumentAdapter.LayoutResultCallback\r\n","Class constructor for stage":"阶段的类构造函数\r\n","#putString(int, String)":"#putString（整数，字符串）\r\n","The blue component to encode from linear space":"从线性空间编码的蓝色分量\r\n","android.provider.Telephony.Carriers.USER":"android.provider.Telephony.Carriers.USER\r\n","the new requested position in the current media, expressed in ms.":"当前媒体中新要求的职位，以女士表示。\r\n","android.os.DropBoxManager.Entry.getTimeMillis()":"android.os.DropBoxManager.Entry.getTimeMillis()\r\n","flag bits that specify which parts of the Canvas state\n                             to save/restore":"指定 Canvas 状态的哪些部分的标志位\r\n                             保存/恢复\r\n","android.media.MediaRecorder.MetricsConstants.VIDEO_IFRAME_INTERVAL":"android.media.MediaRecorder.MetricsConstants.VIDEO_IFRAME_INTERVAL\r\n","Callback called when SET_PROTOCOL is received from remote host.":"从远程主机接收到 SET_PROTOCOL 时调用的回调。\r\n","Information you can set and retrieve about the current activity within the recent task list.":"您可以在最近的任务列表中设置和检索有关当前活动的信息。\r\n","android.app.appsearch.AppSearchSchema.StringPropertyConfig.getTokenizerType()":"android.app.appsearch.AppSearchSchema.StringPropertyConfig.getTokenizerType()\r\n","android.provider.Telephony.MmsSms.ERR_TYPE_GENERIC":"android.provider.Telephony.MmsSms.ERR_TYPE_GENERIC\r\n"," if server either has unlimited quota or does not provide quota\n            information.":" 如果服务器有无限配额或不提供配额\r\n            信息。\r\n","Optionally indicate whether user action should be required when the session is\n            committed.":"可选地指示在会话进行时是否需要用户操作\r\n            坚定的。\r\n","Build the ":"建立\r\n","android.provider.Telephony.TextBasedSmsColumns.MESSAGE_TYPE_SENT":"android.provider.Telephony.TextBasedSmsColumns.MESSAGE_TYPE_SENT\r\n","The tag object previously set by the application":"应用程序先前设置的标记对象\r\n","android.media.tv.TvContract.WatchNextPrograms.COLUMN_WATCH_NEXT_TYPE":"android.media.tv.TvContract.WatchNextPrograms.COLUMN_WATCH_NEXT_TYPE\r\n","android.app.ApplicationErrorReport.BatteryInfo.durationMicros":"android.app.ApplicationErrorReport.BatteryInfo.durationMicros\r\n","android.media.tv.TvInputService.RecordingSession.onAppPrivateCommand(java.lang.String, android.os.Bundle)":"android.media.tv.TvInputService.RecordingSession.onAppPrivateCommand(java.lang.String, android.os.Bundle)\r\n","android.provider.Telephony.BaseMmsColumns.READ_REPORT":"android.provider.Telephony.BaseMmsColumns.READ_REPORT\r\n","The flag indicating whether this TV channel is locked or not.":"指示此电视频道是否锁定的标志。\r\n","android.media.MediaPlayer.MetricsConstants.FRAMES_DROPPED":"android.media.MediaPlayer.MetricsConstants.FRAMES_DROPPED\r\n","android.provider.CallLog.Calls.BLOCK_REASON_DIRECT_TO_VOICEMAIL":"android.provider.CallLog.Calls.BLOCK_REASON_DIRECT_TO_VOICEMAIL\r\n","android.os.Build.VERSION_CODES.CUR_DEVELOPMENT":"android.os.Build.VERSION_CODES.CUR_DEVELOPMENT\r\n","Returns the total height of the window in pixels.":"以像素为单位返回窗口的总高度。\r\n","Constructs a policy for Do Not Disturb priority mode behavior.":"构建“请勿打扰”优先模式行为的策略。\r\n","android.hardware.display.VirtualDisplay.Callback.onStopped()":"android.hardware.display.VirtualDisplay.Callback.onStopped()\r\n","android.graphics.Typeface.Builder.Typeface$Builder(android.content.res.AssetManager, java.lang.String)":"android.graphics.Typeface.Builder.Typeface$Builder(android.content.res.AssetManager, java.lang.String)\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatL24":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatL24\r\n","android.media.MediaCodecInfo.CodecCapabilities.isFeatureSupported(java.lang.String)":"android.media.MediaCodecInfo.CodecCapabilities.isFeatureSupported(java.lang.String)\r\n","Sets the dimensions for pictures.":"设置图片的尺寸。\r\n",": set if the service has asked to\n            run as a foreground process.":": 设置服务是否要求\r\n            作为前台进程运行。\r\n","the data for which a signature is to be computed":"要计算签名的数据\r\n","Configuration for a video encoder.":"视频编码器的配置。\r\n","whether smooth zoom is stopped. If the value is true,\n                           this is the last zoom update for the application.":"平滑缩放是否停止。如果值为真，\r\n                           这是应用程序的最后一次缩放更新。\r\n","android.app.DirectAction.Builder.build()":"android.app.DirectAction.Builder.build()\r\n","android.content.Context.startActivities(android.content.Intent[], android.os.Bundle)":"android.content.Context.startActivities(android.content.Intent[], android.os.Bundle)\r\n","android.media.DrmInitData.SchemeInitData.UUID_NIL":"android.media.DrmInitData.SchemeInitData.UUID_NIL\r\n","Contains the description of the upload or download error from\n            the previous attempt.":"包含上传或下载错误的描述\r\n            之前的尝试。\r\n","This is invoked when an error occurred while establishing a connection to the underlying\n            TV input.":"当建立与底层的连接时发生错误时调用\r\n            电视输入。\r\n","CarExtender":"汽车加长器\r\n","android.net.sip.SipSession.State.NOT_DEFINED":"android.net.sip.SipSession.State.NOT_DEFINED\r\n","The frame number for the request":"请求的帧号\r\n","The intent to launch when the user clicks the expanded notification.\n            If this is an activity, it must include the\n            ":"当用户单击展开的通知时启动的意图。\r\n            如果这是一个活动，它必须包括\r\n            \r\n","android.app.Notification.Action.SEMANTIC_ACTION_REPLY":"android.app.Notification.Action.SEMANTIC_ACTION_REPLY\r\n","android.media.MediaRouter2.RoutingController.setVolume(int)":"android.media.MediaRouter2.RoutingController.setVolume(int)\r\n","An operation was attempted that could not be supported by the crypto\n            system of the device in its current configuration.":"尝试了加密不支持的操作\r\n            设备当前配置的系统。\r\n","android.media.MediaPlayer.ProvisioningServerErrorException":"android.media.MediaPlayer.ProvisioningServerErrorException\r\n","cutoffFrequency for this band in Hertz (Hz)":"该频段的截止频率，以赫兹 (Hz) 为单位\r\n"," objects that represent the notification":" 表示通知的对象\r\n","Gets the current focus mode setting. -or- Sets the focus mode.":"获取当前的焦点模式设置。 - 或 - 设置焦点模式。\r\n","ContactsContract.StreamItems#CONTENT_LIMIT_URI":"联系人合同.StreamItems#CONTENT_LIMIT_URI\r\n","All the key codes (unicode or custom code) that this key could generate, zero'th \n            being the most important.":"此密钥可以生成的所有密钥代码（unicode 或自定义代码），第零\r\n            是最重要的。\r\n","which visual interruptions should be suppressed from\n                                           notifications that are filtered by DND.":"应该抑制哪些视觉干扰\r\n                                           被免打扰过滤的通知。\r\n","android.media.audiofx.AudioEffect.getEnabled()":"android.media.audiofx.AudioEffect.getEnabled()\r\n","android.provider.ContactsContract.ContactStatusColumns.CONTACT_STATUS":"android.provider.ContactsContract.ContactStatusColumns.CONTACT_STATUS\r\n","Called when a file descriptor receives events.":"当文件描述符接收事件时调用。\r\n","android.app.Notification.WearableExtender.getContentIcon()":"android.app.Notification.WearableExtender.getContentIcon()\r\n","Constructs a builder from resources.":"从资源构造一个构建器。\r\n","android.content.pm.PackageInstaller.SessionCallback.onBadgingChanged(int)":"android.content.pm.PackageInstaller.SessionCallback.onBadgingChanged(int)\r\n","android.provider.Settings.Global.INSTALL_NON_MARKET_APPS":"android.provider.Settings.Global.INSTALL_NON_MARKET_APPS\r\n","android.hardware.camera2.CameraManager.AvailabilityCallback":"android.hardware.camera2.CameraManager.AvailabilityCallback\r\n","This function returns the result of linearly interpolating the start and end values, with\n            ":"此函数返回对开始值和结束值进行线性插值的结果，其中\r\n            \r\n","Adds a word to the dictionary, with the given frequency and the specified\n             locale type.":"向字典中添加一个词，具有给定的频率和指定的\r\n             语言环境类型。\r\n","PinnedPositions#UNPINNED":"固定位置#UNPINNED\r\n","Whether the request code was handled (in which case\n                    subsequent listeners will not be called.":"请求代码是否被处理（在这种情况下\r\n                    随后的听众将不会被调用。\r\n","Job services must be protected with this permission:":"必须使用此权限保护作业服务：\r\n","The MIME type of a single preview TV program.":"单个预览电视节目的 MIME 类型。\r\n","android.app.NotificationManager.Policy.SUPPRESSED_EFFECT_AMBIENT":"android.app.NotificationManager.Policy.SUPPRESSED_EFFECT_AMBIENT\r\n","android.os.DropBoxManager.Entry.getFlags()":"android.os.DropBoxManager.Entry.getFlags()\r\n"," is\n            clicked.":" 是\r\n            点击。\r\n","android.os.VibrationEffect.Composition":"android.os.VibrationEffect.Composition\r\n","android.media.tv.TvTrackInfo.Builder.build()":"android.media.tv.TvTrackInfo.Builder.build()\r\n","android.hardware.Camera.Parameters.isVideoStabilizationSupported()":"android.hardware.Camera.Parameters.isVideoStabilizationSupported()\r\n","android.content.DialogInterface.OnClickListener":"android.content.DialogInterface.OnClickListener\r\n","Returns the transformation that has been applied to this view, such as a translation\n            or scaling.":"返回已应用于此视图的转换，例如翻译\r\n            或缩放。\r\n","android.graphics.BitmapFactory.Options.inDensity":"android.graphics.BitmapFactory.Options.inDensity\r\n","android.net.sip.SipSession.Listener.onCallChangeFailed(android.net.sip.SipSession, int, java.lang.String)":"android.net.sip.SipSession.Listener.onCallChangeFailed(android.net.sip.SipSession, int, java.lang.String)\r\n","Override to handle changes to the current metadata.":"覆盖以处理对当前元数据的更改。\r\n","D.":"D.\r\n","android.net.sip.SipAudioCall.Listener.onCalling(android.net.sip.SipAudioCall)":"android.net.sip.SipAudioCall.Listener.onCalling(android.net.sip.SipAudioCall)\r\n"," is used to do capture result field lookups with\n            ":" 用于捕获结果字段查找\r\n            \r\n"," if error is unknown.":" 如果错误未知。\r\n","byte array, containing zero to 255 bytes, or null":"字节数组，包含 0 到 255 个字节，或 null\r\n","android.media.browse.MediaBrowser.ItemCallback":"android.media.browse.MediaBrowser.ItemCallback\r\n","a String of parameters (key-value paired) that\n                             are semi-colon delimited":"一串参数（键值对）\r\n                             以分号分隔\r\n","android.net.IpSecManager.ResourceUnavailableException":"android.net.IpSecManager.ResourceUnavailableException异常\r\n","android.provider.DocumentsContract.Path":"android.provider.DocumentsContract.Path\r\n","Handles a request to toggle the IME visibility.":"处理切换 IME 可见性的请求。\r\n"," to supply the recipient(s).":" 供应收件人。\r\n","the color space":"色彩空间\r\n","android.hardware.Camera.Face":"android.hardware.Camera.Face\r\n","android.provider.ContactsContract.Settings.CONTENT_ITEM_TYPE":"android.provider.ContactsContract.Settings.CONTENT_ITEM_TYPE\r\n","android.provider.ContactsContract.RawContactsColumns.RAW_CONTACT_IS_READ_ONLY":"android.provider.ContactsContract.RawContactsColumns.RAW_CONTACT_IS_READ_ONLY\r\n","True if an action bar menu is now visible, false if no action bar\n                             menus are visible.":"如果操作栏菜单现在可见，则为 True；如果没有操作栏，则为 false\r\n                             菜单是可见的。\r\n","android.media.tv.TvContract.Programs.COLUMN_CHANNEL_ID":"android.media.tv.TvContract.Programs.COLUMN_CHANNEL_ID\r\n","Mark this block as ready to be recycled by the framework once it is\n            no longer in use.":"将此块标记为准备好由框架回收\r\n            不再使用。\r\n","The package name of the source of this event.":"此事件源的包名称。\r\n","android.provider.Settings.Secure.LOCATION_MODE_HIGH_ACCURACY":"android.provider.Settings.Secure.LOCATION_MODE_HIGH_ACCURACY\r\n","android.provider.DocumentsContract.Path.getPath()":"android.provider.DocumentsContract.Path.getPath()\r\n","#EVENT_ERROR":"#EVENT_ERROR\r\n","android.media.tv.TvContract.Programs.CONTENT_TYPE":"android.media.tv.TvContract.Programs.CONTENT_TYPE\r\n","android.bluetooth.BluetoothHidDevice.Callback.onSetReport(android.bluetooth.BluetoothDevice, byte, byte, byte[])":"android.bluetooth.BluetoothHidDevice.Callback.onSetReport（android.bluetooth.BluetoothDevice，字节，字节，字节[]）\r\n","This field was accidentally exposed in earlier versions of the platform\n            so we can hide it but we can't remove it.":"该字段在平台早期版本中意外暴露\r\n            所以我们可以隐藏它但我们不能删除它。\r\n"," among the channels of the mask:\n               <ul>\n                 <li>the element at index ":" 掩码的通道中：\r\n               <ul>\r\n                 <li>索引处的元素\r\n","android.print.PrintJobInfo.Builder.putAdvancedOption(java.lang.String, int)":"android.print.PrintJobInfo.Builder.putAdvancedOption(java.lang.String, int)\r\n","the ID of the controller. It is globally unique.":"控制器的 ID。它是全球独一无二的。\r\n","Gets the property path corresponding to the given entry.":"获取对应于给定条目的属性路径。\r\n","android.provider.Settings.System.SCREEN_BRIGHTNESS_MODE_AUTOMATIC":"android.provider.Settings.System.SCREEN_BRIGHTNESS_MODE_AUTOMATIC\r\n","android.provider.Contacts.ContactMethods.CONTENT_TYPE":"android.provider.Contacts.ContactMethods.CONTENT_TYPE\r\n","rasterizer":"光栅器\r\n","android.accessibilityservice.AccessibilityService.GestureResultCallback.onCancelled(android.accessibilityservice.GestureDescription)":"android.accessibilityservice.AccessibilityService.GestureResultCallback.onCancelled(android.accessibilityservice.GestureDescription)\r\n","android.provider.Settings.System.SETUP_WIZARD_HAS_RUN":"android.provider.Settings.System.SETUP_WIZARD_HAS_RUN\r\n","android.media.MediaRecorder.VideoSource":"android.media.MediaRecorder.VideoSource\r\n","android.opengl.Matrix.orthoM(float[], int, float, float, float, float, float, float)":"android.opengl.Matrix.orthoM(float[], int, float, float, float, float, float, float)\r\n","android.content.Intent.ShortcutIconResource.packageName":"android.content.Intent.ShortcutIconResource.packageName\r\n","Callback structure provided to ":"回调结构提供给\r\n","An address used in MMS or SMS.":"MMS 或 SMS 中使用的地址。\r\n",": This process is running something\n            that is actively visible to the user, though not in the immediate\n            foreground.":": 这个进程正在运行一些东西\r\n            对用户来说是主动可见的，但不是立即可见的\r\n            前景。\r\n","android.provider.Telephony.TextBasedSmsColumns.READ":"android.provider.Telephony.TextBasedSmsColumns.READ\r\n","A 16-byte initialization vector":"一个 16 字节的初始化向量\r\n","android.provider.SyncStateContract.Helpers.newSetOperation(android.net.Uri, android.accounts.Account, byte[])":"android.provider.SyncStateContract.Helpers.newSetOperation(android.net.Uri, android.accounts.Account, byte[])\r\n","url to remove.":"要删除的网址。\r\n","android.bluetooth.BluetoothGattServer.notifyCharacteristicChanged(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothGattCharacteristic, boolean)":"android.bluetooth.BluetoothGattServer.notifyCharacteristicChanged（android.bluetooth.BluetoothDevice，android.bluetooth.BluetoothGattCharacteristic，布尔值）\r\n","The desired attributes. These attribute IDs must be sorted in ascending\n                         order.":"所需的属性。这些属性 ID 必须按升序排序\r\n                         命令。\r\n","android.media.tv.TvInputService.Session.onTune(android.net.Uri, android.os.Bundle)":"android.media.tv.TvInputService.Session.onTune(android.net.Uri, android.os.Bundle)\r\n","android.media.MediaDrm.MetricsConstants.GET_KEY_REQUEST_ERROR_LIST":"android.media.MediaDrm.MetricsConstants.GET_KEY_REQUEST_ERROR_LIST\r\n","The included pages.":"包含的页面。\r\n","secret used to encrypt the OBB; may be ":"用于加密 OBB 的秘密；或许\r\n","android.media.MediaSyncEvent.setAudioSessionId(int)":"android.media.MediaSyncEvent.setAudioSessionId(int)\r\n","The Loader that is being reset.":"正在重置的加载程序。\r\n","android.hardware.Camera.Parameters.SCENE_MODE_AUTO":"android.hardware.Camera.Parameters.SCENE_MODE_AUTO\r\n","This method is called when the session is closed.":"当会话关闭时调用此方法。\r\n","ContactsContract.CommonDataKinds.Identity#NAMESPACE":"ContactsContract.CommonDataKinds.Identity#名称空间\r\n","android.content.BroadcastReceiver.PendingResult.abortBroadcast()":"android.content.BroadcastReceiver.PendingResult.abortBroadcast()\r\n","Removes GPS latitude, longitude, altitude, and timestamp from the\n            parameters.":"从中删除 GPS 纬度、经度、高度和时间戳\r\n            参数。\r\n","Not supported - please use\n            ":"不支持 - 请使用\r\n            \r\n","</li>\n                <li>":"</li>\r\n                <李>\r\n","the dialog that was shown will be passed into the\n                          method":"显示的对话框将被传递到\r\n                          方法\r\n","android.media.tv.TvContract.Channels.VIDEO_FORMAT_2160P":"android.media.tv.TvContract.Channels.VIDEO_FORMAT_2160P\r\n","the resources of the context in which the drawable will\n                       be displayed":"drawable 所在上下文的资源\r\n                       被显示\r\n","android.media.session.MediaSessionManager.OnSession2TokensChangedListener":"android.media.session.MediaSessionManager.OnSession2TokensChangedListener\r\n","The state that the torch mode of the camera has been changed to.\n                           ":"相机的手电筒模式已更改为的状态。\r\n                           \r\n","Contains information about position and size of the activity on the display.":"包含有关显示器上活动的位置和大小的信息。\r\n","android.provider.Settings.System.WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS":"android.provider.Settings.System.WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS\r\n","Returns the scheme of the HTML document represented by this view.":"返回此视图表示的 HTML 文档的方案。\r\n","android.os.Debug.MemoryInfo.getTotalPrivateDirty()":"android.os.Debug.MemoryInfo.getTotalPrivateDirty()\r\n","Callback used to receive various status updates on the ":"用于接收各种状态更新的回调\r\n","Called to respond to a ":"被要求回应\r\n","android.inputmethodservice.InputMethodService.InputMethodImpl":"android.inputmethodservice.InputMethodService.InputMethodImpl\r\n","android.content.pm.PackageInstaller.SessionInfo.getInstallerAttributionTag()":"android.content.pm.PackageInstaller.SessionInfo.getInstallerAttributionTag()\r\n","The preferred presentation display to use when this route is\n            selected or null if none.":"这条路线是时使用的首选演示显示\r\n            如果没有，则选择或 null。\r\n","android.media.metrics.TrackChangeEvent.Builder.TrackChangeEvent$Builder(int)":"android.media.metrics.TrackChangeEvent.Builder.TrackChangeEvent$Builder(int)\r\n","whether permissions should be auto-revoked.":"是否应自动撤销权限。\r\n","android.provider.ContactsContract.Directory.CONTENT_ITEM_TYPE":"android.provider.ContactsContract.Directory.CONTENT_ITEM_TYPE\r\n","android.content.res.Resources.Theme.resolveAttribute(int, android.util.TypedValue, boolean)":"android.content.res.Resources.Theme.resolveAttribute（int，android.util.TypedValue，布尔值）\r\n","gets the noise gate threshold in decibels (dB) from 0 dB Full Scale (dBFS). -or- sets noise gate threshod in decibels (dB).":"从 0 dB 满量程 (dBFS) 获取以分贝 (dB) 为单位的噪声门阈值。 - 或 - 以分贝 (dB) 为单位设置噪声门阈值。\r\n","#getMemoryStat(String)":"#getMemoryStat（字符串）\r\n","android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC6":"android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC6\r\n","android.media.MediaCodecInfo.CodecProfileLevel.AVCProfileHigh10":"android.media.MediaCodecInfo.CodecProfileLevel.AVCProfileHigh10\r\n","A geocoded location for the number associated with this call.":"与此呼叫关联的号码的地理编码位置。\r\n","attack time for compressor in milliseconds (ms)":"压缩器的启动时间，以毫秒 (ms) 为单位\r\n"," to the same Handler when finished.":" 完成后到同一个处理程序。\r\n","MediaSync#queueAudio":"MediaSync#queueAudio\r\n","android.media.session.MediaSessionManager.RemoteUserInfo.getPid()":"android.media.session.MediaSessionManager.RemoteUserInfo.getPid()\r\n","Flag that reflects whether the contact exists inside the default directory.":"反映联系人是否存在于默认目录中的标志。\r\n"," when the camera device failed\n            to produce the required input for the device-specific extension.":" 当相机设备出现故障时\r\n            为特定于设备的扩展生成所需的输入。\r\n","Get the default URL to use when sending the key request message to a\n            server, if known.":"获取将密钥请求消息发送到\r\n            服务器，如果知道的话。\r\n","reverb delay in milliseconds. The valid range is [0, 100].":"以毫秒为单位的混响延迟。有效范围是 [0, 100]。\r\n","android.provider.CalendarContract.ExtendedProperties":"android.provider.CalendarContract.ExtendedProperties\r\n","android.media.audiofx.DynamicsProcessing.MbcBand.getAttackTime()":"android.media.audiofx.DynamicsProcessing.MbcBand.getAttackTime()\r\n","android.app.ApplicationErrorReport.BatteryInfo.ApplicationErrorReport$BatteryInfo()":"android.app.ApplicationErrorReport.BatteryInfo.ApplicationErrorReport$BatteryInfo()\r\n","The MIME type of the original content, such as ":"原始内容的 MIME 类型，例如\r\n","Return TRUE if a contact ID is from the contacts provider on the enterprise profile.":"如果联系人 ID 来自企业资料中的联系人提供者，则返回 TRUE。\r\n","android.media.MediaCodec.OutputFrame.getHardwareBuffer()":"android.media.MediaCodec.OutputFrame.getHardwareBuffer()\r\n","Optional extras that can include extra information about the media item\n                          to be prepared.":"可选的额外内容，可以包括有关媒体项目的额外信息\r\n                          做好准备。\r\n","Sets the dimensions for EXIF thumbnail in Jpeg picture.":"设置 Jpeg 图片中 EXIF 缩略图的尺寸。\r\n","The video format for 480p.":"视频格式为480p。\r\n","\n            with ":"\r\n            和\r\n","android.app.Activity.onMultiWindowModeChanged(boolean, android.content.res.Configuration)":"android.app.Activity.onMultiWindowModeChanged（布尔值，android.content.res.Configuration）\r\n"," instance from a color long.":" 颜色长的实例。\r\n","Notification policy configuration.":"通知策略配置。\r\n","Human readable effect implementor name":"人类可读的效果实现者名称\r\n","Get additional metadata carried around with this Action.":"获取此操作携带的其他元数据。\r\n","Take care of enabling or disabling an existing session by calling its\n            ":"通过调用它来启用或禁用现有会话\r\n            \r\n","Activity#startActivity(Intent, Bundle)":"活动#startActivity（意图，捆绑包）\r\n","android.provider.FontsContract.FontInfo.getWeight()":"android.provider.FontsContract.FontInfo.getWeight()\r\n","\n            who don't have a Person associated with it will be displayed as if they were sent\n            by this user. The user also needs to have a valid name associated with it, which will\n            be enforced starting in Android P.":"\r\n            谁没有与之关联的人将显示为好像他们被发送一样\r\n            由该用户。用户还需要有一个与之关联的有效名称，这将\r\n            从 Android P 开始强制执行。\r\n"," buffer in frames.":" 以帧为单位缓冲。\r\n","Returns the name of this property.":"返回此属性的名称。\r\n"," is in a closed state,\n                    false otherwise.":" 处于关闭状态，\r\n                    否则为假。\r\n","Returns the prompt to use for visual display.":"返回用于视觉显示的提示。\r\n","android.app.Notification.Action.SEMANTIC_ACTION_UNMUTE":"android.app.Notification.Action.SEMANTIC_ACTION_UNMUTE\r\n","new TokenWatcher(new Handler())":"新 TokenWatcher（新处理程序（））\r\n","android.provider.ContactsContract.DataColumns.DATA4":"android.provider.ContactsContract.DataColumns.DATA4\r\n"," table that describes the newly\n            recorded program.":" 描述新的表\r\n            录制的节目。\r\n","syncSource":"同步源\r\n","android.provider.Settings.System.WIFI_SLEEP_POLICY_NEVER":"android.provider.Settings.System.WIFI_SLEEP_POLICY_NEVER\r\n","android.provider.ContactsContract.DisplayPhoto":"android.provider.ContactsContract.DisplayPhoto\r\n","android.provider.ContactsContract.Data.CONTENT_URI":"android.provider.ContactsContract.Data.CONTENT_URI\r\n","android.provider.ContactsContract.ContactNameColumns.DISPLAY_NAME_SOURCE":"android.provider.ContactsContract.ContactNameColumns.DISPLAY_NAME_SOURCE\r\n","android.media.tv.TvContract.Programs.COLUMN_EPISODE_NUMBER":"android.media.tv.TvContract.Programs.COLUMN_EPISODE_NUMBER\r\n","android.media.Session2Command.Result":"android.media.Session2Command.Result\r\n","The new configuration of the activity with the state\n                             ":"具有状态的活动的新配置\r\n                             \r\n","android.hardware.camera2.CameraDevice.StateCallback.onError(android.hardware.camera2.CameraDevice, int)":"android.hardware.camera2.CameraDevice.StateCallback.onError(android.hardware.camera2.CameraDevice, int)\r\n"," calls with the\n            ":" 与\r\n            \r\n","android.media.audiofx.Virtualizer.setStrength(short)":"android.media.audiofx.Virtualizer.setStrength（短）\r\n","android.media.session.MediaController.TransportControls.skipToPrevious()":"android.media.session.MediaController.TransportControls.skipToPrevious()\r\n","gets current gain of band in decibels (dB) -or- sets current gain of band in decibels (dB)":"以分贝 (dB) 为单位获取频带的当前增益 - 或 - 以分贝 (dB) 为单位设置频带的当前增益\r\n","android.provider.Browser.BookmarkColumns.CREATED":"android.provider.Browser.BookmarkColumns.CREATED\r\n","The array to modify and return from ":"要修改和返回的数组\r\n","Called when the compressed codec format changes.":"当压缩编解码器格式更改时调用。\r\n","android.media.tv.TvInputService.Session.onKeyDown(int, android.view.KeyEvent)":"android.media.tv.TvInputService.Session.onKeyDown(int, android.view.KeyEvent)\r\n","The media id of the media item which could not be loaded.":"无法加载的媒体项的媒体 ID。\r\n","SessionParams":"会话参数\r\n","android.provider.DocumentsContract.Document.FLAG_PARTIAL":"android.provider.DocumentsContract.Document.FLAG_PARTIAL\r\n","#CAMERA_ERROR_SERVER_DIED":"#CAMERA_ERROR_SERVER_DIED\r\n","android.net.UrlQuerySanitizer.ParameterValuePair":"android.net.UrlQuerySanitizer.ParameterValuePair\r\n","android.provider.Telephony.TextBasedSmsColumns.MESSAGE_TYPE_OUTBOX":"android.provider.Telephony.TextBasedSmsColumns.MESSAGE_TYPE_OUTBOX\r\n","the MediaPlayer that reached the end of the file":"到达文件末尾的 MediaPlayer\r\n","android.provider.Settings.System.TRANSITION_ANIMATION_SCALE":"android.provider.Settings.System.TRANSITION_ANIMATION_SCALE\r\n","Activity Action: Show a settings dialog containing NFC-related settings.":"活动操作：显示包含 NFC 相关设置的设置对话框。\r\n","android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureFailed(android.hardware.camera2.CameraCaptureSession, android.hardware.camera2.CaptureRequest, android.hardware.camera2.CaptureFailure)":"android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureFailed（android.hardware.camera2.CameraCaptureSession，android.hardware.camera2.CaptureRequest，android.hardware.camera2.CaptureFailure）\r\n","android.provider.Contacts.PhotosColumns":"android.provider.Contacts.PhotosColumns\r\n","android.app.ActivityManager.RunningServiceInfo.crashCount":"android.app.ActivityManager.RunningServiceInfo.crashCount\r\n","android.provider.Settings.Global.CONTENT_URI":"android.provider.Settings.Global.CONTENT_URI\r\n","The attributes for this session.":"此会话的属性。\r\n","Contacts#KIND_IM":"联系人#KIND_IM\r\n","android.net.IpSecManager.SecurityParameterIndex":"android.net.IpSecManager.SecurityParameterIndex\r\n","android.provider.Contacts.People.queryGroups(android.content.ContentResolver, long)":"android.provider.Contacts.People.queryGroups（android.content.ContentResolver，长）\r\n","android.media.browse.MediaBrowser.MediaItem.isPlayable()":"android.media.browse.MediaBrowser.MediaItem.isPlayable()\r\n","android.provider.ContactsContract.Directory.LOCAL_INVISIBLE":"android.provider.ContactsContract.Directory.LOCAL_INVISIBLE\r\n","Return a visual representation of this MIME type.":"返回此 MIME 类型的可视化表示。\r\n","Create a LightsRequest object used to override lights on the device.":"创建一个 LightsRequest 对象，用于覆盖设备上的灯光。\r\n","android.app.usage.NetworkStats.Bucket.getState()":"android.app.usage.NetworkStats.Bucket.getState()\r\n","android.content.DialogInterface.OnShowListener":"android.content.DialogInterface.OnShowListener\r\n","android.location.GnssNavigationMessage.Callback.STATUS_NOT_SUPPORTED":"android.location.GnssNavigationMessage.Callback.STATUS_NOT_SUPPORTED\r\n","android.media.AudioAttributes.Builder.AudioAttributes$Builder(android.media.AudioAttributes)":"android.media.AudioAttributes.Builder.AudioAttributes$Builder(android.media.AudioAttributes)\r\n","android.provider.CalendarContract.EventDaysColumns.STARTDAY":"android.provider.CalendarContract.EventDaysColumns.STARTDAY\r\n"," if the tuning was successful, ":" 如果调整成功，\r\n","Validates, builds and provisions the VpnProfile.":"验证、构建和配置 VpnProfile。\r\n","SPN (Service Provider Name), IMSI, GID (Group Identifier Level 1)":"SPN（服务提供商名称）、IMSI、GID（组标识符级别 1）\r\n","android.app.Notification.Action.getIcon()":"android.app.Notification.Action.getIcon()\r\n","#clearApplicationUserData":"#clearApplicationUserData\r\n"," URI for this table.":" 此表的 URI。\r\n","Callback indicating that a ParcelFileDescriptor has been closed.":"指示 ParcelFileDescriptor 已关闭的回调。\r\n","android.provider.Settings.Panel.ACTION_VOLUME":"android.provider.Settings.Panel.ACTION_VOLUME\r\n","android.media.MediaPlayer.TrackInfo.getFormat()":"android.media.MediaPlayer.TrackInfo.getFormat()\r\n","android.graphics.ImageDecoder.OnHeaderDecodedListener":"android.graphics.ImageDecoder.OnHeaderDecodedListener\r\n","Returns the audio session ID. -or- Sets the audio session ID.":"返回音频会话 ID。 - 或 - 设置音频会话 ID。\r\n","android.content.BroadcastReceiver.PendingResult.finish()":"android.content.BroadcastReceiver.PendingResult.finish()\r\n","android.app.ActivityManager.RunningAppProcessInfo.REASON_UNKNOWN":"android.app.ActivityManager.RunningAppProcessInfo.REASON_UNKNOWN\r\n","whether the codec capabilities support the given format\n                    and feature requests.":"编解码器功能是否支持给定格式\r\n                    和功能请求。\r\n","android.provider.ContactsContract.DataColumns.CARRIER_PRESENCE":"android.provider.ContactsContract.DataColumns.CARRIER_PRESENCE\r\n","true if the apps intend to record videos using\n                        ":"如果应用打算使用录制视频，则为真\r\n                        \r\n",", or\n            empty string if no error was encountered.":"， 或者\r\n            如果没有遇到错误，则为空字符串。\r\n","a list of supported antibanding values. null if antibanding\n                    setting is not supported.":"支持的反带值列表。如果反绑定则为 null\r\n                    不支持设置。\r\n","Key to extract the list of error codes that were returned from\n            ":"用于提取从中返回的错误代码列表的键\r\n            \r\n","android.provider.ContactsContract.Groups":"android.provider.ContactsContract.Groups\r\n","android.provider.Settings.Secure.INPUT_METHOD_SELECTOR_VISIBILITY":"android.provider.Settings.Secure.INPUT_METHOD_SELECTOR_VISIBILITY\r\n","android.media.MediaCasException.UnsupportedCasException":"android.media.MediaCasException.UnsupportedCasException\r\n","AudioRecord#setPositionNotificationPeriod(int)":"AudioRecord#setPositionNotificationPeriod(int)\r\n","A callback objects for receiving updates about the state of a camera device.":"用于接收有关相机设备状态更新的回调对象。\r\n","android.content.pm.PackageInstaller.SessionParams.setOriginatingUri(android.net.Uri)":"android.content.pm.PackageInstaller.SessionParams.setOriginatingUri(android.net.Uri)\r\n","android.media.browse.MediaBrowser.SubscriptionCallback.onChildrenLoaded(java.lang.String, java.util.List<android.media.browse.MediaBrowser.MediaItem>, android.os.Bundle)":"android.media.browse.MediaBrowser.SubscriptionCallback.onChildrenLoaded(java.lang.String, java.util.List<android.media.browse.MediaBrowser.MediaItem>, android.os.Bundle)\r\n","This is the intent that is fired when the user clicks the \"invite to the network\" button\n            on a contact.":"这是当用户单击“邀请加入网络”按钮时触发的意图\r\n            在联系人上。\r\n","android.print.PrintAttributes.Resolution.getVerticalDpi()":"android.print.PrintAttributes.Resolution.getVerticalDpi()\r\n"," will\n            contain this column, with the value indicating the maximum number of\n            stream items that will be stored under any single raw contact.":" 将要\r\n            包含此列，其值表示最大数量\r\n            将存储在任何单个原始联系人下的流项目。\r\n","The channel type for DVB-S (satellite).":"DVB-S（卫星）的频道类型。\r\n","A Cursor of instances matching the search terms in the given\n                    time range":"与给定中的搜索词匹配的实例游标\r\n                    时间范围\r\n","android.provider.CalendarContract.CalendarColumns.CALENDAR_COLOR":"android.provider.CalendarContract.CalendarColumns.CALENDAR_COLOR\r\n","The template class that applications use to call callback functions on events from the HID\n            host.":"应用程序用于调用来自 HID 事件的回调函数的模板类\r\n            主持人。\r\n"," if shared storage is not currently available.":" 如果共享存储当前不可用。\r\n","android.graphics.text.LineBreaker.Result.getLineBreakOffset(int)":"android.graphics.text.LineBreaker.Result.getLineBreakOffset(int)\r\n","Copies the primaries of this color space in specified array.":"将此颜色空间的原色复制到指定数组中。\r\n","BroadcastReceiver#setResultCode(int)\n            BroadcastReceiver.setResultCode(int)":"BroadcastReceiver#setResultCode(int)\r\n            BroadcastReceiver.setResultCode(int)\r\n","The cached phone number, formatted with formatting rules based on the country the\n            user was in when the call was made or received.":"缓存的电话号码，根据所在国家/地区的格式规则进行格式化\r\n            拨打或接听电话时用户在。\r\n","GestureDescription":"手势描述\r\n"," activity\n            describing ":" 活动\r\n            描述\r\n","returns inUse state of the stage.":"返回阶段的使用状态。\r\n","Returns whether a given video size (":"返回给定的视频大小 (\r\n","Returns total number of lookaside memory slots per database connection or -1 if not\n            set.":"返回每个数据库连接的后备内存插槽总数，否则返回 -1\r\n            放。\r\n","android.graphics.SurfaceTexture.OnFrameAvailableListener":"android.graphics.SurfaceTexture.OnFrameAvailableListener\r\n","A callback for camera flash torch modes becoming unavailable, disabled, or enabled.":"相机闪光灯手电筒模式变得不可用、禁用或启用的回调。\r\n"," when a specific\n            ID value is not provided, and multiple raw contacts may be returned.":" 当一个特定的\r\n            未提供 ID 值，可能会返回多个原始联系人。\r\n"," if the specified shared memory type is supported.":" 如果支持指定的共享内存类型。\r\n","android.media.MediaRouter2.RoutingController.isReleased()":"android.media.MediaRouter2.RoutingController.isReleased()\r\n","TP-Status":"TP状态\r\n","android.location.GnssMeasurementRequest.Builder.GnssMeasurementRequest$Builder()":"android.location.GnssMeasurementRequest.Builder.GnssMeasurementRequest$Builder()\r\n","A new camera has become available to use.":"一个新的相机已经可以使用了。\r\n","android.media.MediaRouter.UserRouteInfo.setStatus(java.lang.CharSequence)":"android.media.MediaRouter.UserRouteInfo.setStatus(java.lang.CharSequence)\r\n","android.opengl.GLSurfaceView.EGLContextFactory":"android.opengl.GLSurfaceView.EGLContextFactory\r\n","Key to extract the intended playback frame rate\n            from the ":"提取预期播放帧率的关键\r\n            来自\r\n","android.hardware.Camera.Parameters.getZoomRatios()":"android.hardware.Camera.Parameters.getZoomRatios()\r\n","Key to extract the attribute content type for this track\n            from the ":"提取此曲目的属性内容类型的键\r\n            来自\r\n","android.drm.DrmUtils.ExtendedMetadataParser.keyIterator()":"android.drm.DrmUtils.ExtendedMetadataParser.keyIterator()\r\n","android.app.NotificationManager.Policy.SUPPRESSED_EFFECT_LIGHTS":"android.app.NotificationManager.Policy.SUPPRESSED_EFFECT_LIGHTS\r\n","android.media.RoutingSessionInfo.Builder.RoutingSessionInfo$Builder(java.lang.String, java.lang.String)":"android.media.RoutingSessionInfo.Builder.RoutingSessionInfo$Builder(java.lang.String, java.lang.String)\r\n","VP9 Profile 1 4:2:2 8-bit":"VP9 配置文件 1 4:2:2 8 位\r\n","android.net.vcn.VcnManager.VcnStatusCallback.onStatusChanged(int)":"android.net.vcn.VcnManager.VcnStatusCallback.onStatusChanged(int)\r\n"," to indicate that the returned\n            vcard should not contain a photo.":" 表示返回的\r\n            vcard 不应包含照片。\r\n","android.hardware.camera2.CaptureRequest.Builder.removeTarget(android.view.Surface)":"android.hardware.camera2.CaptureRequest.Builder.removeTarget(android.view.Surface)\r\n"," framework\n            or vendor plugin.":" 框架\r\n            或供应商插件。\r\n","android.media.tv.TvContract.Channels.TYPE_OTHER":"android.media.tv.TvContract.Channels.TYPE_OTHER\r\n","InputMethodService#onUpdateSelection\n            InputMethodService.onUpdateSelection()":"InputMethodService#onUpdateSelection\r\n            InputMethodService.onUpdateSelection()\r\n","The most specific Common-name (CN) component of this name":"此名称的最具体的通用名称 (CN) 组件\r\n","android.provider.ContactsContract.ProfileSyncState.getWithUri(android.content.ContentProviderClient, android.accounts.Account)":"android.provider.ContactsContract.ProfileSyncState.getWithUri(android.content.ContentProviderClient, android.accounts.Account)\r\n","Specifies how closed shapes (e.":"指定如何闭合形状（例如\r\n","android.bluetooth.BluetoothHidDeviceAppSdpSettings":"android.bluetooth.BluetoothHidDeviceAppSdpSettings\r\n","content-class":"内容类\r\n","Boot count since the device starts running API level 24.":"自设备开始运行 API 级别 24 以来的启动计数。\r\n","android.content.Loader.OnLoadCompleteListener":"android.content.Loader.OnLoadCompleteListener\r\n","The cached phone number of the contact which matches this entry, if it exists.":"与此条目匹配的联系人的缓存电话号码（如果存在）。\r\n","MediaBrowser#connect()":"媒体浏览器#connect()\r\n"," array representing the rights data.":" 表示权限数据的数组。\r\n","Builder#Builder(String)":"建造者#建造者（字符串）\r\n","Return a camelCase, period separated name formatted like:\n            ":"返回驼峰式、句点分隔的名称，格式如下：\r\n            \r\n","The type of encryption that has been applied,\n            see ":"已应用的加密类型，\r\n            看\r\n","android.provider.ContactsContract.StreamItemsColumns.ACCOUNT_TYPE":"android.provider.ContactsContract.StreamItemsColumns.ACCOUNT_TYPE\r\n","Create a builder which will construct a ":"创建一个构建器，它将构建一个\r\n","android.content.pm.ActivityInfo#CONFIG_SCREEN_LAYOUT\n            PackageManager.ActivityInfo.CONFIG_SCREEN_LAYOUT":"android.content.pm.ActivityInfo#CONFIG_SCREEN_LAYOUT\r\n            PackageManager.ActivityInfo.CONFIG_SCREEN_LAYOUT\r\n","android.preference.PreferenceActivity.Header.getBreadCrumbTitle(android.content.res.Resources)":"android.preference.PreferenceActivity.Header.getBreadCrumbTitle(android.content.res.Resources)\r\n"," submitted to the\n            camera device.":" 提交给\r\n            相机设备。\r\n","A callback to be invoked when the system finds a tag while the foreground activity is\n            operating in reader mode.":"当系统在前台活动时找到标签时调用的回调\r\n            在阅读器模式下运行。\r\n","android.media.tv.TvContract.Channels.CONTENT_ITEM_TYPE":"android.media.tv.TvContract.Channels.CONTENT_ITEM_TYPE\r\n","android.media.MediaParser.SeekPoint.position":"android.media.MediaParser.SeekPoint.position\r\n","Returns whether seeking is supported.":"返回是否支持查找。\r\n","android.graphics.Paint.getRasterizer()":"android.graphics.Paint.getRasterizer()\r\n","Keys are already loaded and are available for use.":"密钥已加载并可供使用。\r\n","#MEDIA_RECORDER_ERROR_UNKNOWN":"#MEDIA_RECORDER_ERROR_UNKNOWN\r\n","android.media.tv.TvInputService.Session.notifyTimeShiftStatusChanged(int)":"android.media.tv.TvInputService.Session.notifyTimeShiftStatusChanged(int)\r\n","android.provider.CallLog.Calls.FEATURES_ASSISTED_DIALING_USED":"android.provider.CallLog.Calls.FEATURES_ASSISTED_DIALING_USED\r\n","system wide unique audio session identifier. If audioSession\n             is not 0, the PresetReverb will be attached to the MediaPlayer or AudioTrack in the\n             same audio session. Otherwise, the PresetReverb will apply to the output mix.\n             As the PresetReverb is an auxiliary effect it is recommended to instantiate it on\n             audio session 0 and to attach it to the MediaPLayer auxiliary output.":"系统范围的唯一音频会话标识符。如果是audioSession\r\n             不为 0，则 PresetReverb 将附加到 MediaPlayer 或 AudioTrack 中\r\n             相同的音频会话。否则，PresetReverb 将应用于输出混音。\r\n             由于 PresetReverb 是一种辅助效果，因此建议将其实例化\r\n             音频会话 0 并将其附加到 MediaPLayer 辅助输出。\r\n","android.provider.SimPhonebookContract.SimRecords.getItemUri(int, int, int)":"android.provider.SimPhonebookContract.SimRecords.getItemUri(int, int, int)\r\n","true if there is no selected RemoteControlClient and no information\n                is available.":"如果没有选定的 RemoteControlClient 并且没有信息，则为 true\r\n                可用。\r\n","Number of packets.":"数据包的数量。\r\n","android.provider.ContactsContract.SimContacts":"android.provider.ContactsContract.SimContacts\r\n","release time for limiter compressor in milliseconds (ms)":"限制器压缩器的释放时间，以毫秒 (ms) 为单位\r\n","Constructs a new Builder with all the supports default to false.":"构造一个新的 Builder，所有支持默认为 false。\r\n","true if counting was started":"如果开始计数则为真\r\n","setNameX()":"设置名称X()\r\n","android.provider.Settings.Global.USB_MASS_STORAGE_ENABLED":"android.provider.Settings.Global.USB_MASS_STORAGE_ENABLED\r\n"," for the removed device":" 对于移除的设备\r\n","the dialog that was canceled will be passed into the\n                          method":"被取消的对话框将被传递到\r\n                          方法\r\n","Called periodically to report GNSS satellite status.":"定期调用以报告 GNSS 卫星状态。\r\n","android.hardware.Camera.CameraInfo.orientation":"android.hardware.Camera.CameraInfo.orientation\r\n","Set the private data for a session.":"为会话设置私有数据。\r\n","android.app.ActivityManager.RecentTaskInfo":"android.app.ActivityManager.RecentTaskInfo\r\n","android.provider.ContactsContract.DataColumns.PREFERRED_PHONE_ACCOUNT_ID":"android.provider.ContactsContract.DataColumns.PREFERRED_PHONE_ACCOUNT_ID\r\n","android.content.pm.PackageInstaller.SessionParams.RESTRICTED_PERMISSIONS_ALL":"android.content.pm.PackageInstaller.SessionParams.RESTRICTED_PERMISSIONS_ALL\r\n","android.hardware.camera2.CameraCaptureSession.StateCallback.onConfigureFailed(android.hardware.camera2.CameraCaptureSession)":"android.hardware.camera2.CameraCaptureSession.StateCallback.onConfigureFailed(android.hardware.camera2.CameraCaptureSession)\r\n","android.net.sip.SipSession.Listener.onRegistering(android.net.sip.SipSession)":"android.net.sip.SipSession.Listener.onRegistering(android.net.sip.SipSession)\r\n","android.media.MediaMetadataEditor.getLong(int, long)":"android.media.MediaMetadataEditor.getLong(int, long)\r\n","Base class for bands":"乐队的基类\r\n","android.provider.DocumentsContract.Document.FLAG_SUPPORTS_COPY":"android.provider.DocumentsContract.Document.FLAG_SUPPORTS_COPY\r\n","Flag indicating that a document supports writing.":"指示文档支持写入的标志。\r\n","true if bands is enabled for processing, false otherwise":"如果启用带进行处理，则为 true，否则为 false\r\n","Returns the current X scroll offset of this view, as per\n            ":"返回此视图的当前 X 滚动偏移量，按照\r\n            \r\n","retrieve-text":"检索文本\r\n","android.media.MediaSession2.Builder":"android.media.MediaSession2.Builder\r\n","the HTTP or HTTPS URI to download.":"要下载的 HTTP 或 HTTPS URI。\r\n","android.provider.Settings.Secure.SELECTED_INPUT_METHOD_SUBTYPE":"android.provider.Settings.Secure.SELECTED_INPUT_METHOD_SUBTYPE\r\n","The content:// style URI for this table, which requests a directory of\n            raw contact rows matching the selection criteria.":"此表的 content:// 样式 URI，它请求目录\r\n            符合选择标准的原始联系人行。\r\n","android.media.tv.TvInputService.Session.onTimeShiftResume()":"android.media.tv.TvInputService.Session.onTimeShiftResume()\r\n","android.net.UrlQuerySanitizer.ValueSanitizer.sanitize(java.lang.String)":"android.net.UrlQuerySanitizer.ValueSanitizer.sanitize(java.lang.String)\r\n","VolumeShaper.Builder#setCurve(float[], float[])":"VolumeShaper.Builder#setCurve(float[], float[])\r\n","android.hardware.fingerprint.FingerprintManager.AuthenticationCallback.onAuthenticationHelp(int, java.lang.CharSequence)":"android.hardware.fingerprint.FingerprintManager.AuthenticationCallback.onAuthenticationHelp(int, java.lang.CharSequence)\r\n"," setting that indicates that the directory\n            does not provide any photos.":" 指示目录的设置\r\n            不提供任何照片。\r\n"," when the\n            camera device failed to produce a ":" 当。。。的时候\r\n            相机设备未能产生\r\n","android.app.appsearch.AppSearchSchema.DocumentPropertyConfig.shouldIndexNestedProperties()":"android.app.appsearch.AppSearchSchema.DocumentPropertyConfig.shouldIndexNestedProperties()\r\n","Timestamp (milliseconds since epoch) of when the provider's database was created.":"创建提供者数据库时的时间戳（自纪元以来的毫秒数）。\r\n","The content:// style URL for the table that holds the deleted\n            contacts.":"包含已删除内容的表的 content:// 样式 URL\r\n            联系人。\r\n","android.provider.SimPhonebookContract.ElementaryFiles.EF_SDN":"android.provider.SimPhonebookContract.ElementaryFiles.EF_SDN\r\n","The device has been in a freeze period and some new freeze period to be set is less\n            than 60 days from the end of the last freeze period the device went through.":"设备一直处于冻结期，需要设置的新冻结期少了\r\n            设备经历的最后一次冻结期结束后超过 60 天。\r\n","android.provider.CalendarContract.Calendars.NAME":"android.provider.CalendarContract.Calendars.NAME\r\n","android.graphics.Canvas.EdgeType":"android.graphics.Canvas.EdgeType\r\n","android.media.MediaCodec.BufferInfo.offset":"android.media.MediaCodec.BufferInfo.offset\r\n","Releases the wake lock with flags to modify the release behavior.":"释放带有标志的唤醒锁以修改释放行为。\r\n","android.provider.Settings.Secure.isLocationProviderEnabled(android.content.ContentResolver, java.lang.String)":"android.provider.Settings.Secure.isLocationProviderEnabled(android.content.ContentResolver, java.lang.String)\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatL2":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatL2\r\n","android.provider.CalendarContract.RemindersColumns.MINUTES_DEFAULT":"android.provider.CalendarContract.RemindersColumns.MINUTES_DEFAULT\r\n","This indicates that decryption was attempted on a session that is\n            not opened, which could be due to a failure to open the session,\n            closing the session prematurely, or the session being reclaimed\n            by the resource manager.":"这表明解密是在一个会话上尝试的\r\n            未打开，这可能是由于未能打开会话，\r\n            过早关闭会话，或会话被回收\r\n            由资源管理器。\r\n","Option flags.":"选项标志。\r\n","Called when the first output frame has been decoded and is ready to be\n            rendered.":"当第一个输出帧已解码并准备好时调用\r\n            呈现。\r\n","Certificate is malformed or is of the wrong type.":"证书格式不正确或类型错误。\r\n","android.media.tv.TvContract.RecordedPrograms.COLUMN_END_TIME_UTC_MILLIS":"android.media.tv.TvContract.RecordedPrograms.COLUMN_END_TIME_UTC_MILLIS\r\n","Constructs a builder with a font family.":"构造具有字体系列的构建器。\r\n","The unique identifier of the camera whose torch mode has been changed.":"手电筒模式已更改的相机的唯一标识符。\r\n","android.provider.Settings.System.SOUND_EFFECTS_ENABLED":"android.provider.Settings.System.SOUND_EFFECTS_ENABLED\r\n","Return the package name this session is working with.":"返回此会话正在使用的包名称。\r\n","Number is a pay phone.":"号码是公用电话。\r\n","android.location.GnssAntennaInfo.SphericalCorrections":"android.location.GnssAntennaInfo.SphericalCorrections\r\n","Report Type.":"报告类型。\r\n","android.provider.ContactsContract.GroupsColumns":"android.provider.ContactsContract.GroupsColumns\r\n","StreamItems#_ID":"流项目#_ID\r\n","android.app.appsearch.GetByDocumentIdRequest.Builder.GetByDocumentIdRequest$Builder(java.lang.String)":"android.app.appsearch.GetByDocumentIdRequest.Builder.GetByDocumentIdRequest$Builder(java.lang.String)\r\n","The number of tracks in the stream.":"流中的曲目数。\r\n","Interface definition for a callback to be invoked when a key event is\n            dispatched to this dialog.":"按键事件触发时回调的接口定义\r\n            发送到这个对话框。\r\n","scene mode.":"场景模式。\r\n","SoundPool":"音池\r\n","android.content.pm.PackageInstaller.SessionInfo.getRequireUserAction()":"android.content.pm.PackageInstaller.SessionInfo.getRequireUserAction()\r\n","The protocol identifier code.":"协议标识符代码。\r\n","\n            events that occured.":"\r\n            发生的事件。\r\n","#TYPE_KEEP_TOGETHER":"#TYPE_KEEP_TOGETHER\r\n","The audio encoder profile being used for the audio track":"用于音轨的音频编码器配置文件\r\n","android.media.MediaCodecInfo.CodecProfileLevel":"android.media.MediaCodecInfo.CodecProfileLevel\r\n","android.provider.Settings.Global.putLong(android.content.ContentResolver, java.lang.String, long)":"android.provider.Settings.Global.putLong（android.content.ContentResolver，java.lang.String，长）\r\n","android.media.audiofx.DynamicsProcessing.EqBand.setGain(float)":"android.media.audiofx.DynamicsProcessing.EqBand.setGain（浮动）\r\n","Gets the page index.":"获取页面索引。\r\n","android.os.Debug.MemoryInfo.getTotalPss()":"android.os.Debug.MemoryInfo.getTotalPss()\r\n","android.provider.ContactsContract.ContactsColumns.CONTACT_LAST_UPDATED_TIMESTAMP":"android.provider.ContactsContract.ContactsColumns.CONTACT_LAST_UPDATED_TIMESTAMP\r\n","android.media.MediaCodec.QueueRequest":"android.media.MediaCodec.QueueRequest\r\n","AV1 Specification":"AV1规格\r\n","Required steps were not performed before provisioning was attempted.":"在尝试配置之前未执行必需的步骤。\r\n","A\n                       ":"A\r\n                       \r\n","android.app.assist.AssistStructure.ViewNode.getTextSelectionStart()":"android.app.assist.AssistStructure.ViewNode.getTextSelectionStart()\r\n","InputMethodService#onUpdateCursor\n            InputMethodService.onUpdateCursor()":"InputMethodService#onUpdateCursor\r\n            InputMethodService.onUpdateCursor()\r\n","android.accessibilityservice.FingerprintGestureController.FingerprintGestureCallback":"android.accessibilityservice.FingerprintGestureController.FingerprintGestureCallback\r\n","android.provider.ContactsContract.GroupsColumns.SUMMARY_WITH_PHONES":"android.provider.ContactsContract.GroupsColumns.SUMMARY_WITH_PHONES\r\n","android.provider.Browser.SEARCHES_PROJECTION":"android.provider.Browser.SEARCHES_PROJECTION\r\n"," on success. ":" 在成功。\r\n","Returns the total width of the window in pixels.":"以像素为单位返回窗口的总宽度。\r\n","android.media.MediaDrm.OnExpirationUpdateListener":"android.media.MediaDrm.OnExpirationUpdateListener\r\n","android.os.Build.VERSION_CODES.GINGERBREAD_MR1":"android.os.Build.VERSION_CODES.GINGERBREAD_MR1\r\n","android.location.GnssMeasurementsEvent.Callback.STATUS_READY":"android.location.GnssMeasurementsEvent.Callback.STATUS_READY\r\n","android.media.MediaDrm.MetricsConstants.GET_DEVICE_UNIQUE_ID_ERROR_COUNT":"android.media.MediaDrm.MetricsConstants.GET_DEVICE_UNIQUE_ID_ERROR_COUNT\r\n","A setting that is used to indicate if we should sync down all groups for the\n            specified account.":"用于指示我们是否应该同步所有组的设置\r\n            指定帐户。\r\n","android.media.tv.TvInputService.Session.onTimeShiftGetCurrentPosition()":"android.media.tv.TvInputService.Session.onTimeShiftGetCurrentPosition()\r\n","android.hardware.camera2.CameraCharacteristics.Key.CameraCharacteristics$Key(java.lang.String, java.lang.Class<T>)":"android.hardware.camera2.CameraCharacteristics.Key.CameraCharacteristics$Key(java.lang.String, java.lang.Class<T>)\r\n","Creates a new builder.":"创建一个新的构建器。\r\n","android.os.PowerManager.WakeLock.acquire(long)":"android.os.PowerManager.WakeLock.acquire(长)\r\n","android.media.audiofx.AudioEffect.Descriptor.AudioEffect$Descriptor(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"android.media.audiofx.AudioEffect.Descriptor.AudioEffect$Descriptor(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)\r\n","The ID associated with audioBuffer as passed into\n                ":"传入的与 audioBuffer 关联的 ID\r\n                \r\n","android.provider.VoicemailContract.Status.CONFIGURATION_STATE_NOT_CONFIGURED":"android.provider.VoicemailContract.Status.CONFIGURATION_STATE_NOT_CONFIGURED\r\n","android.app.appsearch.AppSearchBatchResult.Builder":"android.app.appsearch.AppSearchBatchResult.Builder\r\n","Key to extract the number of successful ":"密钥提取成功次数\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format32bitBGRA8888":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format32bitBGRA8888\r\n","The start of the time range to query in UTC millis since\n                       epoch":"以 UTC 毫秒为单位查询的时间范围的开始时间\r\n                       时代\r\n","android.content.pm.PackageInstaller.SessionInfo":"android.content.pm.PackageInstaller.SessionInfo\r\n"," to indicate that a call was blocked by a\n            CallScreeningService.":" 表示呼叫被阻止\r\n            呼叫筛选服务。\r\n","android.hardware.camera2.CameraExtensionSession.ExtensionCaptureCallback":"android.hardware.camera2.CameraExtensionSession.ExtensionCaptureCallback\r\n","android.media.MediaParser.SeekableInputReader":"android.media.MediaParser.SeekableInputReader\r\n","android.provider.CalendarContract.Calendars.CALENDAR_LOCATION":"android.provider.CalendarContract.Calendars.CALENDAR_LOCATION\r\n","android.provider.Settings.System.WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS":"android.provider.Settings.System.WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS\r\n","android.app.Notification.Action.isAuthenticationRequired()":"android.app.Notification.Action.isAuthenticationRequired()\r\n","android.provider.ContactsContract.SimAccount.FDN_EF_TYPE":"android.provider.ContactsContract.SimAccount.FDN_EF_TYPE\r\n","android.media.session.MediaSession.Callback.onMediaButtonEvent(android.content.Intent)":"android.media.session.MediaSession.Callback.onMediaButtonEvent(android.content.Intent)\r\n",": This process contains services\n            that should remain running.":"：此进程包含服务\r\n            那应该继续运行。\r\n","android.provider.CalendarContract.EventsColumns.ORGANIZER":"android.provider.CalendarContract.EventsColumns.ORGANIZER\r\n","The channel type for PAL.":"PAL 的频道类型。\r\n","True to update the state of the Preference with the new value.":"True 使用新值更新首选项的状态。\r\n","The package of the new owner. Needs to hold the INSTALL_PACKAGES\n                               permission.":"新主人的包裹。需要持有 INSTALL_PACKAGES\r\n                               允许。\r\n","android.provider.ContactsContract.StreamItemsColumns.COMMENTS":"android.provider.ContactsContract.StreamItemsColumns.COMMENTS\r\n","Key to extract the MIME type of the video track\n            from the ":"提取视频轨道 MIME 类型的键\r\n            来自\r\n","android.media.AudioTrack.MetricsConstants.CHANNELMASK":"android.media.AudioTrack.MetricsConstants.CHANNELMASK\r\n"," of the track.":" 的轨道。\r\n"," if returned by the system. May also be\n                          a positive value greater than 0 defined by the font provider as an\n                          additional error code. Refer to the provider's documentation for more\n                          information on possible returned error codes.":" 如果系统返回。也可能是\r\n                          字体提供者定义为大于 0 的正值\r\n                          额外的错误代码。有关更多信息，请参阅提供者的文档\r\n                          有关可能返回的错误代码的信息。\r\n","android.media.audiofx.DynamicsProcessing.Limiter.setAttackTime(float)":"android.media.audiofx.DynamicsProcessing.Limiter.setAttackTime(浮动)\r\n","android.media.tv.TvContract.Channels.COLUMN_INTERNAL_PROVIDER_ID":"android.media.tv.TvContract.Channels.COLUMN_INTERNAL_PROVIDER_ID\r\n","android.media.session.MediaSessionManager.RemoteUserInfo":"android.media.session.MediaSessionManager.RemoteUserInfo\r\n","Returns the region of the screen currently active for magnification.":"返回当前用于放大的屏幕区域。\r\n","android.provider.ContactsContract.GroupsColumns.NOTES":"android.provider.ContactsContract.GroupsColumns.NOTES\r\n","Install a config chooser which will choose a config\n            as close to 16-bit RGB as possible, with or without an optional depth\n            buffer as close to 16-bits as possible.":"安装一个配置选择器，它将选择一个配置\r\n            尽可能接近 16 位 RGB，有或没有可选深度\r\n            缓冲区尽可能接近 16 位。\r\n","the non-null URI to play.  (see ":"要播放的非空 URI。 （看\r\n","Start timestamp of the bucket's time interval.":"桶的时间间隔的开始时间戳。\r\n","android.app.appsearch.GenericDocument.Builder":"android.app.appsearch.GenericDocument.Builder\r\n","Called when the session is released.":"释放会话时调用。\r\n","android.media.RouteDiscoveryPreference.Builder":"android.media.RouteDiscoveryPreference.Builder\r\n","Whether notification intercepted by DND are prevented from appearing in notification\n            list views like the notification shade or lockscreen on devices that support those\n            views.":"是否阻止免打扰拦截的通知出现在通知中\r\n            列出支持这些视图的设备上的通知栏或锁屏视图\r\n            意见。\r\n","android.provider.Telephony.TextBasedSmsColumns.SEEN":"android.provider.Telephony.TextBasedSmsColumns.SEEN\r\n","android.content.pm.PackageManager.NameNotFoundException":"android.content.pm.PackageManager.NameNotFoundException\r\n","The intent URI of the app link for this channel.":"此频道的应用程序链接的意图 URI。\r\n","The type of account to which this row belongs, which when paired with\n            ":"此行所属的帐户类型，当与\r\n            \r\n","android.graphics.ImageDecoder.DecodeException.SOURCE_EXCEPTION":"android.graphics.ImageDecoder.DecodeException.SOURCE_EXCEPTION\r\n","android.media.MediaMuxer.addTrack(android.media.MediaFormat)":"android.media.MediaMuxer.addTrack(android.media.MediaFormat)\r\n","Per buffer metadata includes an offset and size specifying\n            the range of valid data in the associated codec (output) buffer.":"每个缓冲区元数据包括指定的偏移量和大小\r\n            相关编解码器（输出）缓冲区中的有效数据范围。\r\n","android.content.DialogInterface.OnCancelListener":"android.content.DialogInterface.OnCancelListener\r\n","android.app.appsearch.SearchResult.MatchInfo.getSnippet()":"android.app.appsearch.SearchResult.MatchInfo.getSnippet()\r\n","android.graphics.Paint.FontMetricsInt.top":"android.graphics.Paint.FontMetricsInt.top\r\n","Determines whether remote devices may discover and/or connect to\n            this device.":"确定远程设备是否可以发现和/或连接到\r\n            这个设备。\r\n","android.provider.DocumentsContract.Root.MIME_TYPE_ITEM":"android.provider.DocumentsContract.Root.MIME_TYPE_ITEM\r\n","The video format for 1080i.":"1080i 的视频格式。\r\n","Is this APN enabled?":"这个 APN 是否启用？\r\n","ContactsContract.Data":"ContactsContract.Data\r\n","A status update is linked to a ":"状态更新链接到\r\n","Wrapper for configuration parameters that are used for opening ":"用于打开的配置参数的包装器\r\n","TvInputManager#RECORDING_ERROR_RESOURCE_BUSY":"TvInputManager#RECORDING_ERROR_RESOURCE_BUSY\r\n","android.provider.ContactsContract.ProfileSyncState.CONTENT_URI":"android.provider.ContactsContract.ProfileSyncState.CONTENT_URI\r\n","one of SCENE_MODE_XXX string constant. null if scene mode\n                    setting is not supported.":"SCENE_MODE_XXX 字符串常量之一。如果场景模式为空\r\n                    不支持设置。\r\n","android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.isEnabled()":"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.isEnabled()\r\n","the session ID to add to this multi-package session.":"要添加到此多包会话的会话 ID。\r\n","Return per-line offsets into the text returned by ":"将每行偏移量返回到返回的文本中\r\n","android.media.EncoderProfiles.VideoProfile.getHeight()":"android.media.EncoderProfiles.VideoProfile.getHeight()\r\n"," that this dialog should be\n                       centered around, in screen coordinates. In particular, if\n                       the dialog has a \"callout\" arrow, it will be pointed and\n                       centered around this ":" 这个对话框应该是\r\n                       以屏幕坐标为中心。特别是，如果\r\n                       该对话框有一个“标注”箭头，它将被指向并且\r\n                       以这个为中心\r\n","android.provider.DocumentsContract.Document.FLAG_VIRTUAL_DOCUMENT":"android.provider.DocumentsContract.Document.FLAG_VIRTUAL_DOCUMENT\r\n","KeyStatus#STATUS_EXPIRED":"KeyStatus#STATUS_EXPIRED\r\n","android.os.Parcelable.ClassLoaderCreator":"android.os.Parcelable.ClassLoaderCreator\r\n","android.media.AudioTrack.Builder.build()":"android.media.AudioTrack.Builder.build()\r\n","Called when the application requests to pause TV program recording.":"当应用程序请求暂停电视节目录制时调用。\r\n","This is called when an error occurred while establishing a connection to the recording\n            session for the corresponding TV input.":"当建立与记录的连接时发生错误时调用\r\n            相应电视输入的会话。\r\n","Abandon this session and delete any data that was written to this session so far.":"放弃此会话并删除到目前为止写入此会话的所有数据。\r\n","android.media.MediaSync.OnErrorListener":"android.media.MediaSync.OnErrorListener\r\n","Key to extract the codec being used to decode the video track\n            from the ":"提取用于解码视频轨道的编解码器的键\r\n            来自\r\n","Called when the receiver is instructed to discard all pending MIDI data.":"当指示接收器丢弃所有待处理的 MIDI 数据时调用。\r\n","Returns the maximum number of input channels supported.":"返回支持的最大输入通道数。\r\n","The typical video format for programs from this TV channel.":"该电视频道节目的典型视频格式。\r\n","android.content.DialogInterface.OnShowListener.onShow(android.content.DialogInterface)":"android.content.DialogInterface.OnShowListener.onShow(android.content.DialogInterface)\r\n","Can only see free/busy information about the calendar":"只能查看有关日历的忙/闲信息\r\n","Interface definition for a callback to be invoked when a drm session\n            expiration update occurs":"drm 会话时要调用的回调的接口定义\r\n            发生过期更新\r\n","Returns the start position for time shifting, in milliseconds since the epoch.":"返回时移的起始位置，以纪元以来的毫秒数为单位。\r\n","The desired attributes to be retrieved. These attribute IDs must be sorted\n                         in ascending order.":"要检索的所需属性。这些属性 ID 必须排序\r\n                         按升序排列。\r\n","android.content.pm.PackageInstaller.SessionCallback.onProgressChanged(int, float)":"android.content.pm.PackageInstaller.SessionCallback.onProgressChanged(int, float)\r\n","android.provider.Settings.System.WIFI_NUM_OPEN_NETWORKS_KEPT":"android.provider.Settings.System.WIFI_NUM_OPEN_NETWORKS_KEPT\r\n","android.provider.Contacts.GroupMembership.CONTENT_DIRECTORY":"android.provider.Contacts.GroupMembership.CONTENT_DIRECTORY\r\n","Interface definition for a callback to be invoked when an error\n            occurs while recording.":"错误时调用回调的接口定义\r\n            录制时发生。\r\n","android.provider.ContactsContract.StreamItems":"android.provider.ContactsContract.StreamItems\r\n","True if the media size is in portrait, false if\n            it is in landscape.":"如果媒体尺寸为纵向，则为 True，如果为 false\r\n            它在风景中。\r\n","A list of items in the current play queue. It should\n                       include the currently playing item as well as previous and\n                       upcoming items if applicable.":"当前播放队列中的项目列表。它应该\r\n                       包括当前播放的项目以及之前和\r\n                       即将到来的项目（如果适用）。\r\n","the height of the video":"视频的高度\r\n","android.provider.Telephony.BaseMmsColumns.SUBJECT":"android.provider.Telephony.BaseMmsColumns.SUBJECT\r\n","android.provider.ContactsContract.BaseSyncColumns.SYNC1":"android.provider.ContactsContract.BaseSyncColumns.SYNC1\r\n","android.app.Notification.Action.getDataOnlyRemoteInputs()":"android.app.Notification.Action.getDataOnlyRemoteInputs()\r\n","Called as the first step of the Activity being destroyed.":"作为被销毁的 Activity 的第一步调用。\r\n","android.content.Context#getAttributionTag attribution tag":"android.content.Context#getAttributionTag 属性标签\r\n","android.provider.Telephony.TextBasedSmsColumns.SUBSCRIPTION_ID":"android.provider.Telephony.TextBasedSmsColumns.SUBSCRIPTION_ID\r\n","android.app.appsearch.SearchResult.MatchRange.getStart()":"android.app.appsearch.SearchResult.MatchRange.getStart()\r\n","Key to extract the average time in microseconds of calls to\n            ":"提取调用的平均时间（以微秒为单位）的键\r\n            \r\n","android.app.ApplicationErrorReport.CrashInfo.dump(android.util.Printer, java.lang.String)":"android.app.ApplicationErrorReport.CrashInfo.dump(android.util.Printer, java.lang.String)\r\n","android.provider.CallLog.Calls.NUMBER":"android.provider.CallLog.Calls.NUMBER\r\n","android.media.MediaDrm.MediaDrmStateException.getErrorCode()":"android.media.MediaDrm.MediaDrmStateException.getErrorCode()\r\n","the offset of the first byte of the data in the array to be processed":"待处理数组中数据首字节的偏移量\r\n","android.os.Build.Partition.getBuildTimeMillis()":"android.os.Build.Partition.getBuildTimeMillis()\r\n","a non-null array whose length is 3 times the number of channels in the channel\n               mask.\n               If the method indicates the configuration is supported, the array will contain upon return\n               triplets of values: for each channel ":"一个非空数组，其长度是通道中通道数的 3 倍\r\n               面具。\r\n               如果该方法指示支持配置，则返回时数组将包含\r\n               值的三元组：对于每个通道\r\n","android.media.audiofx.Equalizer.getNumberOfPresets()":"android.media.audiofx.Equalizer.getNumberOfPresets()\r\n","the URI of the group membership row":"组成员资格行的 URI\r\n","The system does not support tracking of GNSS Navigation Messages.":"系统不支持跟踪 GNSS 导航消息。\r\n","Additional arguments to control execution of the command.":"控制命令执行的附加参数。\r\n","The type of the selected track. The type can be\n                       ":"所选轨道的类型。类型可以是\r\n                       \r\n","android.os.ParcelFileDescriptor.OnCloseListener.onClose(java.io.IOException)":"android.os.ParcelFileDescriptor.OnCloseListener.onClose(java.io.IOException)\r\n","android.provider.Settings.System.putInt(android.content.ContentResolver, java.lang.String, int)":"android.provider.Settings.System.putInt(android.content.ContentResolver, java.lang.String, int)\r\n","the maximum number of detected face supported by the camera.":"相机支持的最大检测人脸数。\r\n","the application's asset manager":"应用程序的资产管理器\r\n","android.hardware.Camera.PreviewCallback":"android.hardware.Camera.PreviewCallback\r\n","android.graphics.text.LineBreaker.Result.getLineDescent(int)":"android.graphics.text.LineBreaker.Result.getLineDescent(int)\r\n","android.provider.Browser.truncateHistory(android.content.ContentResolver)":"android.provider.Browser.truncateHistory(android.content.ContentResolver)\r\n","#SCALING_MODE_NORMALIZED":"#SCALING_MODE_NORMALIZED\r\n","android.media.MediaDrm.ErrorCodes.ERROR_KEY_EXPIRED":"android.media.MediaDrm.ErrorCodes.ERROR_KEY_EXPIRED\r\n","The URI of a recorded TV program.":"录制的电视节目的 URI。\r\n","#setAllowedNetworkTypes":"#setAllowedNetworkTypes\r\n","Whether autolock is enabled (0 = false, 1 = true)":"是否启用自动锁定（0 = 假，1 = 真）\r\n","android.provider.DocumentsContract.Root.COLUMN_ICON":"android.provider.DocumentsContract.Root.COLUMN_ICON\r\n","android.provider.ContactsContract.ContactNameColumns.DISPLAY_NAME_PRIMARY":"android.provider.ContactsContract.ContactNameColumns.DISPLAY_NAME_PRIMARY\r\n","android.media.MediaDrm.MetricsConstants.GET_DEVICE_UNIQUE_ID_ERROR_LIST":"android.media.MediaDrm.MetricsConstants.GET_DEVICE_UNIQUE_ID_ERROR_LIST\r\n","The resource id of the icon in the ":"中图标的资源id\r\n","android.mtp.MtpObjectInfo.Builder.build()":"android.mtp.MtpObjectInfo.Builder.build()\r\n"," if the sensor is supported and successfully enabled.":" 如果传感器受支持并成功启用。\r\n","Returns the maximum capacity of custom fallback families.":"返回自定义后备系列的最大容量。\r\n","#FILL_IN_PACKAGE":"#FILL_IN_PACKAGE\r\n","android.net.Ikev2VpnProfile.Builder.build()":"android.net.Ikev2VpnProfile.Builder.build()\r\n","android.app.appsearch.GenericDocument.Builder.GenericDocument$Builder(java.lang.String, java.lang.String, java.lang.String)":"android.app.appsearch.GenericDocument.Builder.GenericDocument$Builder(java.lang.String, java.lang.String, java.lang.String)\r\n","AbstractInputMethodService.AbstractInputMethodImpl":"AbstractInputMethodService.AbstractInputMethodImpl\r\n","Creates a new HardwareSession.":"创建一个新的 HardwareSession。\r\n","A haptic effect that simulates quick upward movement against gravity.":"模拟逆重力快速向上运动的触觉效果。\r\n","The identifier for the account used to place or receive the call.":"用于拨打或接听电话的帐户的标识符。\r\n","Key to extract the video encoding level\n            from the ":"提取视频编码级别的关键\r\n            来自\r\n","android.media.tv.TvInputService.HardwareSession.onHardwareVideoUnavailable(int)":"android.media.tv.TvInputService.HardwareSession.onHardwareVideoUnavailable(int)\r\n","android.os.BugreportManager.BugreportCallback.BUGREPORT_ERROR_ANOTHER_REPORT_IN_PROGRESS":"android.os.BugreportManager.BugreportCallback.BUGREPORT_ERROR_ANOTHER_REPORT_IN_PROGRESS\r\n","android.media.audiofx.DynamicsProcessing.Stage.isInUse()":"android.media.audiofx.DynamicsProcessing.Stage.isInUse()\r\n","android.hardware.Camera.Parameters.getVideoStabilization()":"android.hardware.Camera.Parameters.getVideoStabilization()\r\n","linkGroup index.":"链接组索引。\r\n","the identifier of a the metadata field to set. Valid keys for a:\n                <ul>\n                <li>":"要设置的元数据字段的标识符。有效密钥：\r\n                <ul>\r\n                <李>\r\n","android.provider.ContactsContract.SyncColumns.SOURCE_ID":"android.provider.ContactsContract.SyncColumns.SOURCE_ID\r\n","Interface definition for a callback to be invoked when playback of\n            a media source has completed.":"播放时调用回调的接口定义\r\n            媒体源已完成。\r\n","Combines all of the attributes that have been set and returns a new\n            ":"组合所有已设置的属性并返回一个新的\r\n            \r\n","android.hardware.camera2.CameraCharacteristics.Key.getName()":"android.hardware.camera2.CameraCharacteristics.Key.getName()\r\n","android.app.Notification.WearableExtender.getHintContentIntentLaunchesActivity()":"android.app.Notification.WearableExtender.getHintContentIntentLaunchesActivity()\r\n","TP-Status: failed.":"TP-状态：失败。\r\n","the decay HF ration. See ":"衰变的 HF 比值。看\r\n","The request is being detached from an activity.":"请求正在从活动中分离。\r\n"," that may be used as the\n                       parent for this dialog.":" 可以用作\r\n                       此对话框的父项。\r\n","android.media.MediaParser.SeekPoint.timeMicros":"android.media.MediaParser.SeekPoint.timeMicros\r\n","Returns the configured ":"返回配置的\r\n","android.app.ActionBar.OnMenuVisibilityListener.onMenuVisibilityChanged(boolean)":"android.app.ActionBar.OnMenuVisibilityListener.onMenuVisibilityChanged(boolean)\r\n","Builder for ":"建设者\r\n","Adds a file to the downloads database system, so it could appear in Downloads App\n            (and thus become eligible for management by the Downloads App).":"将文件添加到下载数据库系统，以便它可以出现在下载应用程序中\r\n            （因此有资格通过下载应用程序进行管理）。\r\n","Notifies that the animation was resumed, after being\n            previously paused.":"通知动画已恢复，在\r\n            之前暂停。\r\n","#DIRECTORY_PODCASTS":"#DIRECTORY_PODCASTS\r\n","android.app.job.JobInfo.Builder":"android.app.job.JobInfo.Builder\r\n","A table that represents the result of looking up a phone number, for\n            example for caller ID.":"表示查找电话号码结果的表格，例如\r\n            例如来电显示。\r\n","android.provider.Settings.Secure.DEVICE_PROVISIONED":"android.provider.Settings.Secure.DEVICE_PROVISIONED\r\n","android.provider.Contacts.ContactMethods.POSTAL_LOCATION_LATITUDE":"android.provider.Contacts.ContactMethods.POSTAL_LOCATION_LATITUDE\r\n","Interface definition for a callback to be invoked when the keys in a drm\n            session change states.":"当 drm 中的键被调用时回调的接口定义\r\n            会话更改状态。\r\n","android.media.MediaRecorder.MetricsConstants.AUDIO_BITRATE":"android.media.MediaRecorder.MetricsConstants.AUDIO_BITRATE\r\n","the user for which the given packages were suspended.":"暂停给定包的用户。\r\n","android.provider.CallLog.Calls.CACHED_NAME":"android.provider.CallLog.Calls.CACHED_NAME\r\n","#HEADSET":"＃耳机\r\n","Returns the type of the parameter.":"返回参数的类型。\r\n","PrintAttributes":"打印属性\r\n","The logical operations that can be performed when combining two paths.":"组合两条路径时可以执行的逻辑操作。\r\n","android.hardware.Camera.Parameters.getSupportedPreviewFormats()":"android.hardware.Camera.Parameters.getSupportedPreviewFormats()\r\n","F.":"F。\r\n","android.provider.Contacts.ContactMethods.CONTENT_POSTAL_ITEM_TYPE":"android.provider.Contacts.ContactMethods.CONTENT_POSTAL_ITEM_TYPE\r\n","Constants related to a document, including ":"与文档相关的常量，包括\r\n"," for the specified seek time in microseconds.":" 对于以微秒为单位的指定寻道时间。\r\n","The data generated by the Loader.":"Loader生成的数据。\r\n","android.media.FaceDetector.Face":"android.media.FaceDetector.Face\r\n","android.drm.DrmStore.ConstraintsColumns.MAX_REPEAT_COUNT":"android.drm.DrmStore.ConstraintsColumns.MAX_REPEAT_COUNT\r\n","the resource of this application.":"这个应用程序的资源。\r\n","android.hardware.Camera.Face.id":"android.hardware.Camera.Face.id\r\n","android.content.pm.PackageInstaller.SessionInfo.getCreatedMillis()":"android.content.pm.PackageInstaller.SessionInfo.getCreatedMillis()\r\n","android.location.GnssAntennaInfo.PhaseCenterOffset.getYOffsetUncertaintyMm()":"android.location.GnssAntennaInfo.PhaseCenterOffset.getYOffsetUncertaintyMm()\r\n","Return TRUE if a directory ID is from the contacts provider on the enterprise profile.":"如果目录 ID 来自企业配置文件上的联系人提供程序，则返回 TRUE。\r\n","android.media.audiofx.PresetReverb.getPreset()":"android.media.audiofx.PresetReverb.getPreset()\r\n","android.content.DialogInterface.OnKeyListener":"android.content.DialogInterface.OnKeyListener\r\n","Document which is a directory that represents the top directory of\n            this root.":"Document 是一个目录，代表的顶级目录\r\n            这个根。\r\n","android.provider.Contacts.ExtensionsColumns.NAME":"android.provider.Contacts.ExtensionsColumns.NAME\r\n","Interface definition of a callback to be invoked when the\n            video size is first known or updated":"调用回调的接口定义\r\n            视频大小首先已知或更新\r\n","index of channel of interest":"兴趣频道索引\r\n"," objects for\n            this data row.":" 对象\r\n            这个数据行。\r\n","Key to extract the stream type for this track\n            from the ":"提取此曲目的流类型的键\r\n            来自\r\n","android.provider.Settings.System.AIRPLANE_MODE_ON":"android.provider.Settings.System.AIRPLANE_MODE_ON\r\n","android.location.GnssMeasurementsEvent.Callback.onStatusChanged(int)":"android.location.GnssMeasurementsEvent.Callback.onStatusChanged(int)\r\n"," id} of the generic channel that notifications of\n                                   this type would be posted to in absence of a specific conversation id.\n                                   For example, if this channel represents 'Messages from Person A', the\n                                   parent channel would be 'Messages.'":" 通知的通用频道的 id}\r\n                                   在没有特定对话 ID 的情况下，将发布此类型。\r\n                                   例如，如果此频道表示“来自 A 的消息”，则\r\n                                   父频道将是“消息”。\r\n","android.provider.SimPhonebookContract.ElementaryFiles.SUBSCRIPTION_ID":"android.provider.SimPhonebookContract.ElementaryFiles.SUBSCRIPTION_ID\r\n"," for units.":" 对于单位。\r\n","android.provider.UserDictionary.Words.CONTENT_TYPE":"android.provider.UserDictionary.Words.CONTENT_TYPE\r\n","android.media.tv.TvContract.Channels.COLUMN_INTERNAL_PROVIDER_FLAG2":"android.media.tv.TvContract.Channels.COLUMN_INTERNAL_PROVIDER_FLAG2\r\n","android.app.job.JobInfo.TriggerContentUri":"android.app.job.JobInfo.TriggerContentUri\r\n","android.media.AudioTrack.MetricsConstants.CONTENTTYPE":"android.media.AudioTrack.MetricsConstants.CONTENTTYPE\r\n","Called when a RINGING response is received for the INVITE request\n            sent.":"当收到 INVITE 请求的 RINGING 响应时调用\r\n            发送。\r\n","#PACKAGE_NAME":"＃包裹名字\r\n","android.provider.Telephony.TextBasedSmsColumns.MESSAGE_TYPE_INBOX":"android.provider.Telephony.TextBasedSmsColumns.MESSAGE_TYPE_INBOX\r\n","android.provider.Contacts.GroupMembership.CONTENT_TYPE":"android.provider.Contacts.GroupMembership.CONTENT_TYPE\r\n","android.media.AudioRouting.OnRoutingChangedListener":"android.media.AudioRouting.OnRoutingChangedListener\r\n","android.location.GnssMeasurementRequest.Builder":"android.location.GnssMeasurementRequest.Builder\r\n","If 1, the activity manager will aggressively finish activities and\n            processes as soon as they are no longer needed.":"如果为 1，活动管理器将积极结束活动，并且\r\n            不再需要时立即处理。\r\n","android.provider.DocumentsContract.Document.FLAG_SUPPORTS_DELETE":"android.provider.DocumentsContract.Document.FLAG_SUPPORTS_DELETE\r\n","android.provider.CallLog.Calls.FEATURES_VOLTE":"android.provider.CallLog.Calls.FEATURES_VOLTE\r\n","android.app.usage.NetworkStats.Bucket.getDefaultNetworkStatus()":"android.app.usage.NetworkStats.Bucket.getDefaultNetworkStatus()\r\n","android.app.AlertDialog.Builder.AlertDialog$Builder(android.content.Context)":"android.app.AlertDialog.Builder.AlertDialog$Builder(android.content.Context)\r\n","android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC10":"android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC10\r\n",",\n            indicates factors which may have lead the user to miss the call.":",\r\n            指示可能导致用户错过呼叫的因素。\r\n"," can cause phone numbers to be\n                        displayed more prominently in QuickContacts.":" 可能会导致电话号码\r\n                        在 QuickContacts 中显示得更突出。\r\n","desired linkGroup index":"所需的链接组索引\r\n","android.opengl.GLSurfaceView.EGLConfigChooser.chooseConfig(javax.microedition.khronos.egl.EGL10, javax.microedition.khronos.egl.EGLDisplay)":"android.opengl.GLSurfaceView.EGLConfigChooser.chooseConfig(javax.microedition.khronos.egl.EGL10, javax.microedition.khronos.egl.EGLDisplay)\r\n","E MR1.":"E MR1。\r\n","The listener used to indicate the user has finished selecting a date.":"用于指示用户已完成选择日期的侦听器。\r\n","Prototype to use as a starting point.\n            Can be ":"用作起点的原型。\r\n            可\r\n","android.provider.VoicemailContract.Status.PHONE_ACCOUNT_COMPONENT_NAME":"android.provider.VoicemailContract.Status.PHONE_ACCOUNT_COMPONENT_NAME\r\n","android.print.PrintAttributes.Margins.getRightMils()":"android.print.PrintAttributes.Margins.getRightMils()\r\n","View#getId() View.getId()":"查看#getId() 查看.getId()\r\n","the paint's rasterizer (or null)":"油漆的光栅器（或空）\r\n","android.os.DropBoxManager.Entry.DropBoxManager$Entry(java.lang.String, long, java.lang.String)":"android.os.DropBoxManager.Entry.DropBoxManager$Entry(java.lang.String, long, java.lang.String)\r\n","CameraCaptureSession":"CameraCaptureSession\r\n","android.media.MediaDrm.ErrorCodes.ERROR_INSUFFICIENT_SECURITY":"android.media.MediaDrm.ErrorCodes.ERROR_INSUFFICIENT_SECURITY\r\n","android.media.AudioTrack.OnPlaybackPositionUpdateListener.onMarkerReached(android.media.AudioTrack)":"android.media.AudioTrack.OnPlaybackPositionUpdateListener.onMarkerReached(android.media.AudioTrack)\r\n","android.media.tv.TvContract.Channels.TYPE_ISDB_S3":"android.media.tv.TvContract.Channels.TYPE_ISDB_S3\r\n","Constructs and returns an ObjectAnimator that animates the target using a multi-int setter\n            along the given ":"构造并返回一个 ObjectAnimator，它使用多整数设置器为目标设置动画\r\n            沿着给定的\r\n","android.app.job.JobService.onBind(android.content.Intent)":"android.app.job.JobService.onBind(android.content.Intent)\r\n","android.location.GnssAntennaInfo.PhaseCenterOffset":"android.location.GnssAntennaInfo.PhaseCenterOffset\r\n","Data#CONTENT_URI":"数据#CONTENT_URI\r\n","android.provider.ContactsContract.Contacts.CONTENT_FREQUENT_URI":"android.provider.ContactsContract.Contacts.CONTENT_FREQUENT_URI\r\n","android.drm.DrmStore.RightsStatus":"android.drm.DrmStore.RightsStatus\r\n","android.provider.ContactsContract.RawContacts.CONTENT_ITEM_TYPE":"android.provider.ContactsContract.RawContacts.CONTENT_ITEM_TYPE\r\n","The class name to set, equivalent to\n                       ":"要设置的类名，相当于\r\n                       \r\n","android.media.audiofx.BassBoost.Settings":"android.media.audiofx.BassBoost.设置\r\n","android.content.BroadcastReceiver.PendingResult.setResultData(java.lang.String)":"android.content.BroadcastReceiver.PendingResult.setResultData(java.lang.String)\r\n"," set to 1 whenever the event\n            transitions from non-dirty to dirty.":" 每当事件发生时设置为 1\r\n            从非脏到脏的过渡。\r\n","MIME type of a document which is a directory that may contain\n            additional documents.":"一个文件的 MIME 类型，它是一个可能包含的目录\r\n            附加的文件。\r\n","android.media.tv.TvContract.RecordedPrograms.COLUMN_RECORDING_DATA_BYTES":"android.media.tv.TvContract.RecordedPrograms.COLUMN_RECORDING_DATA_BYTES\r\n","android.provider.Contacts.PhonesColumns.NUMBER":"android.provider.Contacts.PhonesColumns.NUMBER\r\n","the gain in millibels of the given band.":"给定波段的增益（以毫贝为单位）。\r\n","android.content.pm.PackageInstaller.SessionParams":"android.content.pm.PackageInstaller.SessionParams\r\n","android.content.ClipData.Item.coerceToText(android.content.Context)":"android.content.ClipData.Item.coerceToText(android.content.Context)\r\n","android.app.admin.DeviceAdminReceiver.onEnabled(android.content.Context, android.content.Intent)":"android.app.admin.DeviceAdminReceiver.onEnabled(android.content.Context, android.content.Intent)\r\n","android.opengl.ETC1Util.loadTexture(int, int, int, int, int, java.io.InputStream)":"android.opengl.ETC1Util.loadTexture(int, int, int, int, int, java.io.InputStream)\r\n","android.app.Notification.WearableExtender.SCREEN_TIMEOUT_LONG":"android.app.Notification.WearableExtender.SCREEN_TIMEOUT_LONG\r\n","android.graphics.fonts.Font.Builder.Font$Builder(android.os.ParcelFileDescriptor, long, long)":"android.graphics.fonts.Font.Builder.Font$Builder（android.os.ParcelFileDescriptor，长，长）\r\n","This very short low frequency effect should produce a light crisp sensation\n            intended to be used repetitively for dynamic feedback.":"这种非常短的低频效果应该会产生轻脆的感觉\r\n            旨在重复使用动态反馈。\r\n","the corresponding video resolution string. ":"相应的视频分辨率字符串。\r\n","android.provider.ContactsContract.Intents.INVITE_CONTACT":"android.provider.ContactsContract.Intents.INVITE_CONTACT\r\n","android.graphics.Paint.Style":"android.graphics.Paint.Style\r\n","android.os.Build.Partition.getName()":"android.os.Build.Partition.getName()\r\n","AudioEffect#EFFECT_TYPE_BASS_BOOST":"音频效果#EFFECT_TYPE_BASS_BOOST\r\n","android.media.MediaDrm.CryptoSession.decrypt(byte[], byte[], byte[])":"android.media.MediaDrm.CryptoSession.decrypt(byte[], byte[], byte[])\r\n","android.graphics.drawable.Animatable2.AnimationCallback.onAnimationEnd(android.graphics.drawable.Drawable)":"android.graphics.drawable.Animatable2.AnimationCallback.onAnimationEnd(android.graphics.drawable.Drawable)\r\n","android.media.MediaDrm.SessionException.ERROR_UNKNOWN":"android.media.MediaDrm.SessionException.ERROR_UNKNOWN\r\n","Called when the user is done setting a new time and the dialog has\n            closed.":"当用户完成设置新时间并且对话框出现时调用\r\n            关闭。\r\n","android.hardware.biometrics.BiometricPrompt.CryptoObject":"android.hardware.biometrics.BiometricPrompt.CryptoObject\r\n","the id of the contact to undemote.":"要取消降级的联系人的 ID。\r\n","#TEXT_STYLE_BOLD":"#TEXT_STYLE_BOLD\r\n","Set indent for this paragraph.":"设置本段的缩进。\r\n","android.media.session.MediaSession.Callback.onSkipToQueueItem(long)":"android.media.session.MediaSession.Callback.onSkipToQueueItem(长)\r\n","xPropertyName":"x属性名称\r\n","android.opengl.ETC1Util.ETC1Texture":"android.opengl.ETC1Util.ETC1Texture\r\n","The content:// style URI for this table, which requests the contact entry\n            representing the user's personal profile data.":"此表的 content:// 样式 URI，它请求联系人条目\r\n            表示用户的个人资料数据。\r\n","android.provider.CalendarContract.CalendarColumns.ALLOWED_AVAILABILITY":"android.provider.CalendarContract.CalendarColumns.ALLOWED_AVAILABILITY\r\n","non-null; peer credentials":"非空；对等凭据\r\n","Called to notify the client when a connection to the\n            MediaScanner service has been established.":"当连接到\r\n            MediaScanner 服务已建立。\r\n","Retrieves an iterator object that you can use to iterate over the keys associated with\n            this ":"检索可用于迭代与关联的键的迭代器对象\r\n            这\r\n","android.provider.Settings.System.BLUETOOTH_DISCOVERABILITY_TIMEOUT":"android.provider.Settings.System.BLUETOOTH_DISCOVERABILITY_TIMEOUT\r\n","android.graphics.Matrix.ScaleToFit":"android.graphics.Matrix.ScaleToFit\r\n","android.app.usage.NetworkStats.Bucket.getTxPackets()":"android.app.usage.NetworkStats.Bucket.getTxPackets()\r\n","Callbacks for the projection session.":"投影会话的回调。\r\n","#QUOTA_UNAVAILABLE":"#QUOTA_UNAVAILABLE\r\n","A required crypto resource was not able to be allocated while\n            attempting the requested operation.":"无法分配所需的加密资源，同时\r\n            尝试请求的操作。\r\n","Internal integer flag used by individual TV input services.":"个别电视输入服务使用的内部整数标志。\r\n","list containing the results of\n                 ":"包含结果的列表\r\n                 \r\n","Returns the times (x) coordinate array of the volume curve points.":"返回体积曲线点的时间 (x) 坐标数组。\r\n","Returns the quality setting for the EXIF thumbnail in Jpeg picture. -or- Sets the quality of the EXIF thumbnail in Jpeg picture.":"返回 Jpeg 图片中 EXIF 缩略图的质量设置。 - 或 - 设置 Jpeg 图片中 EXIF 缩略图的质量。\r\n","android.app.Instrumentation.ActivityMonitor.Instrumentation$ActivityMonitor()":"android.app.Instrumentation.ActivityMonitor.Instrumentation$ActivityMonitor()\r\n"," corresponding to the given entry.":" 对应于给定的条目。\r\n","android.media.MediaSession2.Builder.build()":"android.media.MediaSession2.Builder.build()\r\n","an integer whose meaning is specific to the status to be updated.":"一个整数，其含义特定于要更新的​​状态。\r\n","android.media.MediaRouter.RouteGroup":"android.media.MediaRouter.RouteGroup\r\n","android.app.PictureInPictureParams.Builder.build()":"android.app.PictureInPictureParams.Builder.build()\r\n","#CONTENT_MULTI_VCARD_URI":"#CONTENT_MULTI_VCARD_URI\r\n","android.media.MediaRouter2.RoutingController.getControlHints()":"android.media.MediaRouter2.RoutingController.getControlHints()\r\n","Return if this session is currently active.":"如果此会话当前处于活动状态，则返回。\r\n","Full access to the calendar":"完全访问日历\r\n","Gets the distances from the camera to where an object appears to be\n            in focus.":"获取从相机到对象出现位置的距离\r\n            焦点。\r\n","android.media.MediaRouter2.ControllerCallback":"android.media.MediaRouter2.ControllerCallback\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYCrYCb":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYCrYCb\r\n"," if this is a wake-up sensor, ":" 如果这是一个唤醒传感器，\r\n","Indicates that one or more packages have been suspended.":"表示一个或多个包已暂停。\r\n","android.media.tv.TvInputService.Session.notifyChannelRetuned(android.net.Uri)":"android.media.tv.TvInputService.Session.notifyChannelRetuned(android.net.Uri)\r\n","Override to handle requests to play a specific media item represented by a URI.":"重写以处理播放由 URI 表示的特定媒体项的请求。\r\n","Summary for this root, which may be shown to a user.":"此根的摘要，可以向用户显示。\r\n","This method is called when an image capture makes partial forward progress; some\n            (but not all) results from an image capture are available.":"当图像捕获进行部分前进时调用此方法；一些\r\n            （但不是全部）图像捕获的结果可用。\r\n","A class representing a security event log entry.":"表示安全事件日志条目的类。\r\n","android.media.MediaRouter.UserRouteInfo.setDescription(java.lang.CharSequence)":"android.media.MediaRouter.UserRouteInfo.setDescription(java.lang.CharSequence)\r\n","android.provider.CalendarContract.EventsColumns.ORIGINAL_ALL_DAY":"android.provider.CalendarContract.EventsColumns.ORIGINAL_ALL_DAY\r\n","android.media.audiofx.AudioEffect.Descriptor.implementor":"android.media.audiofx.AudioEffect.Descriptor.implementor\r\n","android.provider.ContactsContract.QuickContact":"android.provider.ContactsContract.QuickContact\r\n","android.provider.ContactsContract.StreamItems.MAX_ITEMS":"android.provider.ContactsContract.StreamItems.MAX_ITEMS\r\n","android.app.usage.NetworkStats.Bucket.ROAMING_YES":"android.app.usage.NetworkStats.Bucket.ROAMING_YES\r\n","Message box: sent messages.":"消息框：已发送消息。\r\n","Creates a new opaque ":"创建一个新的不透明\r\n","The names of the packages that have become\n                       unavailable.":"已成为的包的名称\r\n                       不可用。\r\n","android.content.pm.PackageInstaller.Session.openWrite(java.lang.String, long, long)":"android.content.pm.PackageInstaller.Session.openWrite(java.lang.String, long, long)\r\n","android.provider.Settings.Secure.CONTENT_URI":"android.provider.Settings.Secure.CONTENT_URI\r\n"," representing the blob.":" 代表斑点。\r\n","Key to extract the container MIME type\n            from the ":"提取容器 MIME 类型的密钥\r\n            来自\r\n","android.provider.FontsContract.Columns.ITALIC":"android.provider.FontsContract.Columns.ITALIC\r\n","Returns the value of a particular memory statistic or ":"返回特定内存统计信息的值或\r\n","null if the surface cannot be constructed.":"如果无法构造曲面，则为 null。\r\n","android.provider.Telephony.CanonicalAddressesColumns.ADDRESS":"android.provider.Telephony.CanonicalAddressesColumns.ADDRESS\r\n","android.media.MediaCodec.BufferInfo.size":"android.media.MediaCodec.BufferInfo.size\r\n","android.animation.LayoutTransition.TransitionListener":"android.animation.LayoutTransition.TransitionListener\r\n","glyphIds":"字形\r\n","android.hardware.Camera.Parameters.SCENE_MODE_THEATRE":"android.hardware.Camera.Parameters.SCENE_MODE_THEATRE\r\n","android.os.Debug.InstructionCount.globalMethodInvocations()":"android.os.Debug.InstructionCount.globalMethodInvocations()\r\n","android.app.ActivityManager.MemoryInfo.lowMemory":"android.app.ActivityManager.MemoryInfo.lowMemory\r\n","android.app.assist.AssistStructure.ViewNode.getTextStyle()":"android.app.assist.AssistStructure.ViewNode.getTextStyle()\r\n","Gets preferred frame duration in milliseconds (ms).":"获取以毫秒 (ms) 为单位的首选帧持续时间。\r\n"," subdirectory of a single\n            phone.":" 单个子目录\r\n            电话。\r\n","The package performing the operation.":"执行操作的包。\r\n","android.provider.Contacts.ContactMethods":"android.provider.Contacts.ContactMethods\r\n","\n            table.":"\r\n            桌子。\r\n","Called when a media button is pressed and this session has the\n            highest priority or a controller sends a media button event to the\n            session.":"当按下媒体按钮并且此会话具有\r\n            最高优先级或控制器发送媒体按钮事件到\r\n            会议。\r\n","audioData.remaining()":"audioData.remaining()\r\n","android.provider.SimPhonebookContract.SimRecords.ELEMENTARY_FILE_TYPE":"android.provider.SimPhonebookContract.SimRecords.ELEMENTARY_FILE_TYPE\r\n","android.app.ApplicationErrorReport.AnrInfo.ApplicationErrorReport$AnrInfo()":"android.app.ApplicationErrorReport.AnrInfo.ApplicationErrorReport$AnrInfo()\r\n","android.net.vcn.VcnManager.VcnStatusCallback.onGatewayConnectionError(java.lang.String, int, java.lang.Throwable)":"android.net.vcn.VcnManager.VcnStatusCallback.onGatewayConnectionError(java.lang.String, int, java.lang.Throwable)\r\n","The video encoder profile being used for the video track.":"用于视频轨道的视频编码器配置文件。\r\n","#MEDIASYNC_ERROR_SURFACE_FAIL":"#MEDIASYNC_ERROR_SURFACE_FAIL\r\n","android.gesture.Gesture.addStroke(android.gesture.GestureStroke)":"android.gesture.Gesture.addStroke（android.gesture.GestureStroke）\r\n","android.app.assist.AssistStructure.ViewNode.getAutofillHints()":"android.app.assist.AssistStructure.ViewNode.getAutofillHints()\r\n","Called when dismissing Keyguard has succeeded and the device is now unlocked.":"当成功关闭 Keyguard 并且设备现在已解锁时调用。\r\n"," in its namespace.":" 在它的命名空间中。\r\n","android.provider.DocumentsContract.Document.FLAG_DIR_BLOCKS_OPEN_DOCUMENT_TREE":"android.provider.DocumentsContract.Document.FLAG_DIR_BLOCKS_OPEN_DOCUMENT_TREE\r\n","Events#_ID":"事件#_ID\r\n","The authority string for the ServiceStateProvider":"ServiceStateProvider 的权限字符串\r\n","android.bluetooth.le.ScanSettings.Builder":"android.bluetooth.le.ScanSettings.Builder\r\n","android.provider.ContactsContract.Directory.EXPORT_SUPPORT_SAME_ACCOUNT_ONLY":"android.provider.ContactsContract.Directory.EXPORT_SUPPORT_SAME_ACCOUNT_ONLY\r\n","android.provider.CallLog.Locations":"android.provider.CallLog.Locations\r\n"," kbps)\n            <li>":" 每秒）\r\n            <李>\r\n","android.provider.UserDictionary.Words.DEFAULT_SORT_ORDER":"android.provider.UserDictionary.Words.DEFAULT_SORT_ORDER\r\n","android.provider.SimPhonebookContract.SimRecords.RECORD_NUMBER":"android.provider.SimPhonebookContract.SimRecords.RECORD_NUMBER\r\n","android.media.midi.MidiDeviceInfo.PortInfo.getPortNumber()":"android.media.midi.MidiDeviceInfo.PortInfo.getPortNumber()\r\n","Callback for determining whether an event is accepted or\n            it is filtered out.":"用于确定事件是否被接受或\r\n            它被过滤掉了。\r\n","android.media.tv.TvContract.Channels.VIDEO_FORMAT_576P":"android.media.tv.TvContract.Channels.VIDEO_FORMAT_576P\r\n","Returns true if this controller is released, false otherwise.":"如果释放此控制器，则返回 true，否则返回 false。\r\n","Common configuration for a single property (field) in a Document.":"文档中单个属性（字段）的通用配置。\r\n","android.provider.ContactsContract.DataColumns.DATA3":"android.provider.ContactsContract.DataColumns.DATA3\r\n","A key response is received from the license server by the app, then it is\n            provided to the DRM engine plugin using provideKeyResponse.":"应用程序从许可证服务器接收到密钥响应，然后\r\n            使用 provideKeyResponse 提供给 DRM 引擎插件。\r\n"," object whose data will be reused in the new Builder.":" 其数据将在新 Builder 中重用的对象。\r\n","android.provider.CalendarContract.CalendarColumns.SYNC_EVENTS":"android.provider.CalendarContract.CalendarColumns.SYNC_EVENTS\r\n","Key to extract the rotation (in degrees) to properly orient the video\n            from the ":"提取旋转（以度为单位）以正确定位视频的关键\r\n            来自\r\n","#PREPARE_DRM_STATUS_SUCCESS":"#PREPARE_DRM_STATUS_SUCCESS\r\n","Flags for the observer.":"观察者的标志。\r\n","Reference white as an array of 2 (xy) or 3 (XYZ) floats":"将白色引用为 2 (xy) 或 3 (XYZ) 浮点数的数组\r\n","SeekPoint SeekPoints":"搜索点搜索点\r\n","android.media.session.MediaSessionManager.RemoteUserInfo.MediaSessionManager$RemoteUserInfo(java.lang.String, int, int)":"android.media.session.MediaSessionManager.RemoteUserInfo.MediaSessionManager$RemoteUserInfo(java.lang.String, int, int)\r\n","android.provider.ContactsContract.QuickContact.showQuickContact(android.content.Context, android.graphics.Rect, android.net.Uri, int, java.lang.String[])":"android.provider.ContactsContract.QuickContact.showQuickContact(android.content.Context, android.graphics.Rect, android.net.Uri, int, java.lang.String[])\r\n","android.provider.ContactsContract.StreamItems.CONTENT_PHOTO_URI":"android.provider.ContactsContract.StreamItems.CONTENT_PHOTO_URI\r\n","Returns the port type of the port (either ":"返回端口的端口类型（或者\r\n","android.media.MediaDrm.MetricsConstants.GET_PROVISION_REQUEST_ERROR_COUNT":"android.media.MediaDrm.MetricsConstants.GET_PROVISION_REQUEST_ERROR_COUNT\r\n","The comma-separated genre string of this TV program.":"此电视节目的逗号分隔流派字符串。\r\n","Override to handle the item being rated.":"覆盖以处理被评级的项目。\r\n","#openBluetoothDevice":"#openBluetoothDevice\r\n","android.media.MediaCasException.ResourceBusyException":"android.media.MediaCasException.ResourceBusyException\r\n","AudioMetadata":"音频元数据\r\n","android.app.LoaderManager.LoaderCallbacks.onLoadFinished(android.content.Loader<D>, D)":"android.app.LoaderManager.LoaderCallbacks.onLoadFinished(android.content.Loader<D>, D)\r\n","android.provider.Settings.Secure.TTS_DEFAULT_PITCH":"android.provider.Settings.Secure.TTS_DEFAULT_PITCH\r\n","Popup keyboard close button clicked.":"单击弹出键盘关闭按钮。\r\n"," object from the contents of this ":" this 内容中的对象\r\n","android.media.MediaRouter2.RouteCallback.onRoutesChanged(java.util.List<android.media.MediaRoute2Info>)":"android.media.MediaRouter2.RouteCallback.onRoutesChanged(java.util.List<android.media.MediaRoute2Info>)\r\n","android.app.Notification.WearableExtender.getContentIntentAvailableOffline()":"android.app.Notification.WearableExtender.getContentIntentAvailableOffline()\r\n","android.provider.Settings.Secure.putFloat(android.content.ContentResolver, java.lang.String, float)":"android.provider.Settings.Secure.putFloat(android.content.ContentResolver, java.lang.String, float)\r\n","Returns the video resolution (definition) for a given video format.":"返回给定视频格式的视频分辨率（定义）。\r\n"," using either\n            ":" 使用\r\n            \r\n","android.media.tv.TvInputService.Session.onSetCaptionEnabled(boolean)":"android.media.tv.TvInputService.Session.onSetCaptionEnabled(boolean)\r\n","android.hardware.camera2.CaptureResult.Key.getName()":"android.hardware.camera2.CaptureResult.Key.getName()\r\n","android.provider.Settings.System.getShowGTalkServiceStatus(android.content.ContentResolver)":"android.provider.Settings.System.getShowGTalkServiceStatus(android.content.ContentResolver)\r\n","Notifies listeners of the occurrence of another frame of the animation,\n            along with information about the elapsed time.":"通知听众另一帧动画的发生，\r\n            以及有关经过时间的信息。\r\n","The identity of the attendee as referenced in\n            ":"与会者的身份，如在\r\n            \r\n","android.view.KeyEvent.Callback#onKeyDown(int, KeyEvent)\n            KeyEvent.Callback.onKeyDown()":"android.view.KeyEvent.Callback#onKeyDown（int，KeyEvent）\r\n            按键事件回调.onKeyDown()\r\n","android.provider.ContactsContract.Contacts.openContactPhotoInputStream(android.content.ContentResolver, android.net.Uri, boolean)":"android.provider.ContactsContract.Contacts.openContactPhotoInputStream（android.content.ContentResolver，android.net.Uri，布尔值）\r\n","The content:// style URL for accessing Attendees data":"用于访问与会者数据的 content:// 样式 URL\r\n","android.provider.ContactsContract.Contacts.getLookupUri(long, java.lang.String)":"android.provider.ContactsContract.Contacts.getLookupUri(long, java.lang.String)\r\n","android.app.VoiceInteractor.CommandRequest":"android.app.VoiceInteractor.CommandRequest\r\n","android.provider.Contacts.PhotosColumns.LOCAL_VERSION":"android.provider.Contacts.PhotosColumns.LOCAL_VERSION\r\n","android.media.tv.TvInputService.RecordingSession.onStartRecording(android.net.Uri, android.os.Bundle)":"android.media.tv.TvInputService.RecordingSession.onStartRecording(android.net.Uri, android.os.Bundle)\r\n","android.media.MediaParser.SeekMap":"android.media.MediaParser.SeekMap\r\n","Thrown to indicate that an IPsec resource is unavailable.":"抛出以指示 IPsec 资源不可用。\r\n","the size of the blob file so far.":"到目前为止 blob 文件的大小。\r\n","Error type: permanent error (along with all higher error values).":"错误类型：永久错误（以及所有更高的错误值）。\r\n","buffer flags associated with the buffer.  This\n            should be a combination of  ":"与缓冲区关联的缓冲区标志。这\r\n            应该是以下的组合\r\n","android.media.MediaExtractor.MetricsConstants.TRACKS":"android.media.MediaExtractor.MetricsConstants.TRACKS\r\n","IntentFilter#NO_MATCH_DATA":"IntentFilter#NO_MATCH_DATA\r\n","android.provider.CallLog.Calls.BLOCK_REASON":"android.provider.CallLog.Calls.BLOCK_REASON\r\n","Opens a file descriptor to read the blob content already written into this session.":"打开文件描述符以读取已写入此会话的 blob 内容。\r\n","An info object describing the document. Cannot be ":"描述文档的信息对象。不可能是\r\n","Gets the reverb level. -or- Sets the volume level of the late reverberation.":"获取混响电平。 - 或 - 设置后期混响的音量级别。\r\n","the new show mode for the soft keyboard":"软键盘的新显示模式\r\n","A read only ":"一个只读\r\n","android.provider.Settings.System.DATA_ROAMING":"android.provider.Settings.System.DATA_ROAMING\r\n","android.media.MediaCodecInfo.VideoCapabilities.getSupportedHeightsFor(int)":"android.media.MediaCodecInfo.VideoCapabilities.getSupportedHeightsFor(int)\r\n","android.media.MediaRecorder.OutputFormat":"android.media.MediaRecorder.OutputFormat\r\n","TelephonyNetworkSpecifier":"电话网络说明符\r\n","Has the message been read?":"是否已阅读消息？\r\n","SearchColumns#SEARCH":"搜索列#SEARCH\r\n","Given a set of recipients return its thread ID.":"给定一组收件人，返回其线程 ID。\r\n","timeout in milliseconds or -1 if the value wasn't set.":"以毫秒为单位的超时，如果未设置该值，则为 -1。\r\n","android.hardware.camera2.CameraDevice.StateCallback":"android.hardware.camera2.CameraDevice.StateCallback\r\n"," parameter\n                       provides the name of nullable column name to explicitly insert a NULL into\n                       in the case where your ":" 范围\r\n                       提供可空列名称以显式插入 NULL\r\n                       如果你的\r\n","NotificationChannel#shouldShowLights() notification lights":"NotificationChannel#shouldShowLights() 通知灯\r\n","android.media.MediaCodec.CryptoException.ERROR_SESSION_NOT_OPENED":"android.media.MediaCodec.CryptoException.ERROR_SESSION_NOT_OPENED\r\n","Application-provided id for this job. Subsequent calls to cancel, or\n            jobs created with the same jobId, will update the pre-existing job with\n            the same id.  This ID must be unique across all clients of the same uid\n            (not just the same package).  You will want to make sure this is a stable\n            id across app updates, so probably not based on a resource ID.":"应用程序为此作业提供的 ID。随后调用取消，或\r\n            使用相同的 jobId 创建的作业，将更新预先存在的作业\r\n            同一个身份证。此 ID 在同一 uid 的所有客户端中必须是唯一的\r\n            （不仅仅是同一个包）。你会想确保这是一个稳定的\r\n            跨应用程序更新的 ID，因此可能不基于资源 ID。\r\n"," row and captures\n            the user's latest status update via the corresponding source, e.":" 行和捕获\r\n            用户通过相应来源的最新状态更新，例如。\r\n"," return 0,\n                    exposure compensation is not supported.":" 返回 0，\r\n                    不支持曝光补偿。\r\n","Fragment#onDestroyView()":"片段#onDestroyView()\r\n","android.media.tv.TvInputService.Session.onAppPrivateCommand(java.lang.String, android.os.Bundle)":"android.media.tv.TvInputService.Session.onAppPrivateCommand(java.lang.String, android.os.Bundle)\r\n","#PARAM_STRENGTH":"#PARAM_STRENGTH\r\n","android.net.IpSecAlgorithm.CRYPT_AES_CBC":"android.net.IpSecAlgorithm.CRYPT_AES_CBC\r\n","focus mode.":"对焦模式。\r\n","android.database.sqlite.SQLiteDatabase.OpenParams.getLookasideSlotCount()":"android.database.sqlite.SQLiteDatabase.OpenParams.getLookasideSlotCount()\r\n","#PHOTO_SUPPORT_THUMBNAIL_ONLY":"#PHOTO_SUPPORT_THUMBNAIL_ONLY\r\n","android.provider.Telephony.Carriers.PORT":"android.provider.Telephony.Carriers.PORT\r\n","android.print.PrinterCapabilitiesInfo.Builder.build()":"android.print.PrinterCapabilitiesInfo.Builder.build()\r\n","android.hardware.camera2.CameraCaptureSession.StateCallback.onReady(android.hardware.camera2.CameraCaptureSession)":"android.hardware.camera2.CameraCaptureSession.StateCallback.onReady(android.hardware.camera2.CameraCaptureSession)\r\n","android.graphics.pdf.PdfRenderer.Page.getWidth()":"android.graphics.pdf.PdfRenderer.Page.getWidth()\r\n","Constructor for builder to create ":"构建器创建的构造函数\r\n"," if no action was selected.":" 如果未选择任何操作。\r\n","Events#LAST_SYNCED":"活动#LAST_SYNCED\r\n","The URI of the newly recorded program.":"新录制节目的URI。\r\n","Override to handle changes to items in the queue.":"覆盖以处理对队列中项目的更改。\r\n","Groups#GROUP_VISIBLE":"群组#GROUP_VISIBLE\r\n","TP-Status: pending.":"TP-状态：待处理。\r\n","android.provider.CallLog.Calls.LOCATION":"android.provider.CallLog.Calls.LOCATION\r\n","android.inputmethodservice.InputMethodService.InputMethodImpl.startInput(android.view.inputmethod.InputConnection, android.view.inputmethod.EditorInfo)":"android.inputmethodservice.InputMethodService.InputMethodImpl.startInput(android.view.inputmethod.InputConnection, android.view.inputmethod.EditorInfo)\r\n","Handle the confirmation result.":"处理确认结果。\r\n","response-text":"响应文本\r\n","Notifies that the animation was paused.":"通知动画已暂停。\r\n","android.graphics.Paint.FontMetrics.leading":"android.graphics.Paint.FontMetrics.leading\r\n","Called on the thread that created the Loader when the load is complete.":"加载完成时在创建加载程序的线程上调用。\r\n","Constructs a builder with a file descriptor.":"构造一个带有文件描述符的构建器。\r\n","android.provider.Contacts.GroupMembership":"android.provider.Contacts.GroupMembership\r\n","AppWidgetManager#ACTION_APPWIDGET_DELETED":"AppWidgetManager#ACTION_APPWIDGET_DELETED\r\n","android.content.Context.startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int, android.os.Bundle)":"android.content.Context.startIntentSender（android.content.IntentSender，android.content.Intent，int，int，int，android.os.Bundle）\r\n","I MR1.":"我是 MR1。\r\n"," returned by a\n            ":" 由一个返回\r\n            \r\n","the device that has been disconnected":"已断开连接的设备\r\n","android.graphics.Paint.FontMetricsInt.ascent":"android.graphics.Paint.FontMetricsInt.ascent\r\n"," (when no measurements are performed)\n                or ":" （未进行测量时）\r\n                或者\r\n","android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener.onParameterChange(android.media.audiofx.EnvironmentalReverb, int, int, int)":"android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener.onParameterChange(android.media.audiofx.EnvironmentalReverb, int, int, int)\r\n","Returns the dismissal id of the notification.":"返回通知的解除 ID。\r\n"," information for the track.":" 轨道的信息。\r\n","android.media.MediaDrm.CryptoSession.sign(byte[], byte[])":"android.media.MediaDrm.CryptoSession.sign(byte[], byte[])\r\n","android.media.tv.TvContract.Channels.COLUMN_NETWORK_AFFILIATION":"android.media.tv.TvContract.Channels.COLUMN_NETWORK_AFFILIATION\r\n","android.app.Fragment.onPictureInPictureModeChanged(boolean, android.content.res.Configuration)":"android.app.Fragment.onPictureInPictureModeChanged（布尔值，android.content.res.Configuration）\r\n"," into the AppSearch index\n                using ":" 进入 AppSearch 索引\r\n                使用\r\n","#applyStyle(int, boolean)":"#applyStyle（整数，布尔值）\r\n","The column to distinguish SMS and MMS messages in query results.":"查询结果中区分短信和彩信的列。\r\n","#importance":"＃重要性\r\n","The RMS value in mB.":"以 mB 为单位的 RMS 值。\r\n","Return a TypedArray holding the values defined by the style\n            resource <var>resid</var> which are listed in <var>attrs</var>.":"返回一个 TypedArray，其中包含由样式定义的值\r\n            资源 <var>resid</var> 列在 <var>attrs</var> 中。\r\n","android.media.RemoteControlClient.OnPlaybackPositionUpdateListener":"android.media.RemoteControlClient.OnPlaybackPositionUpdateListener\r\n","android.os.VibrationEffect.Composition.PRIMITIVE_SPIN":"android.os.VibrationEffect.Composition.PRIMITIVE_SPIN\r\n","Interface definition for a class that will be called when the container's activity\n            is destroyed.":"容器活动时将调用的类的接口定义\r\n            被摧毁。\r\n","android.provider.Contacts.PeopleColumns.SEND_TO_VOICEMAIL":"android.provider.Contacts.PeopleColumns.SEND_TO_VOICEMAIL\r\n"," if the resolution string\n                    is not defined for the given video format.":" 如果解析字符串\r\n                    没有为给定的视频格式定义。\r\n","android.companion.BluetoothLeDeviceFilter.Builder":"android.companion.BluetoothLeDeviceFilter.Builder\r\n","android.preference.PreferenceActivity.Header.breadCrumbShortTitleRes":"android.preference.PreferenceActivity.Header.breadCrumbShortTitleRes\r\n","Description of the recorded event.":"记录事件的描述。\r\n"," to avoid underrun.\n              See ":" 以避免欠载。\r\n              看\r\n","non-null parameters to be combined with previously set parameters when entering\n            picture-in-picture.":"输入时要与先前设置的参数组合的非空参数\r\n            画中画。\r\n","android.provider.CalendarContract.AttendeesColumns.EVENT_ID":"android.provider.CalendarContract.AttendeesColumns.EVENT_ID\r\n"," subdirectory of a single\n            person.":" 单个子目录\r\n            人。\r\n","a map of the names/values of the supported memory statistics.":"支持的内存统计信息的名称/值的映射。\r\n","android.media.audiofx.DynamicsProcessing.Limiter.getAttackTime()":"android.media.audiofx.DynamicsProcessing.Limiter.getAttackTime()\r\n","android.provider.Browser.deleteFromHistory(android.content.ContentResolver, java.lang.String)":"android.provider.Browser.deleteFromHistory(android.content.ContentResolver, java.lang.String)\r\n","Called when a previously created loader is being reset, and thus\n            making its data unavailable.":"在重置先前创建的加载程序时调用，因此\r\n            使其数据不可用。\r\n","Attack Time for limiter compressor in milliseconds (ms)":"限制器压缩器的起音时间，以毫秒 (ms) 为单位\r\n","TvInputManager#TIME_SHIFT_STATUS_AVAILABLE":"TvInputManager#TIME_SHIFT_STATUS_AVAILABLE\r\n","Mobile Country Code (MCC).":"移动国家代码 (MCC)。\r\n","android.provider.Settings.Global.WINDOW_ANIMATION_SCALE":"android.provider.Settings.Global.WINDOW_ANIMATION_SCALE\r\n","Can be used to construct a bitmap of the screenshot or any other operations for\n            ":"可用于构建屏幕截图的位图或任何其他操作\r\n            \r\n","android.provider.ContactsContract.SettingsColumns.UNGROUPED_COUNT":"android.provider.ContactsContract.SettingsColumns.UNGROUPED_COUNT\r\n"," to indicate that a call was blocked because the user\n            has chosen to block all calls from unknown numbers.":" 表示呼叫被阻止，因为用户\r\n            已选择阻止来自未知号码的所有呼叫。\r\n","Gets the density level. -or- Controls the modal density of the late reverberation decay.":"获取密度级别。 - 或 - 控制后期混响衰减的模态密度。\r\n","android.provider.Settings.Secure.LOCK_PATTERN_VISIBLE":"android.provider.Settings.Secure.LOCK_PATTERN_VISIBLE\r\n","android.database.MatrixCursor.RowBuilder":"android.database.MatrixCursor.RowBuilder\r\n","android.media.MediaDrm.KeyRequest.REQUEST_TYPE_NONE":"android.media.MediaDrm.KeyRequest.REQUEST_TYPE_NONE\r\n","void someFunction(out Parcelable)":"void someFunction(out Parcelable)\r\n","The number of access points required for a network in order for the\n            watchdog to monitor it.":"网络所需的接入点数量，以便\r\n            看门狗来监视它。\r\n","Error codes that may be returned from ":"可能返回的错误代码\r\n","android.provider.Settings.System.getConfiguration(android.content.ContentResolver, android.content.res.Configuration)":"android.provider.Settings.System.getConfiguration（android.content.ContentResolver，android.content.res.Configuration）\r\n","Implement this interface to receive a callback when\n            ":"实现该接口接收回调\r\n            \r\n","android.accessibilityservice.FingerprintGestureController.FingerprintGestureCallback.onGestureDetected(int)":"android.accessibilityservice.FingerprintGestureController.FingerprintGestureCallback.onGestureDetected(int)\r\n",", corresponding\n            to the ":"， 相应的\r\n            到\r\n"," style URL for the ServiceStateProvider":" ServiceStateProvider 的样式 URL\r\n","Call this method during or after the OnSharedElementsReadyListener has been received\n            in ":"在收到 OnSharedElementsReadyListener 期间或之后调用此方法\r\n            在\r\n","The access mode to be assigned to the destination after its data is\n                written.  This is in the standard format used by ":"在其数据被分配给目的地之后的访问模式\r\n                书面。这是使用的标准格式\r\n","android.net.IpSecManager.UdpEncapsulationSocket.close()":"android.net.IpSecManager.UdpEncapsulationSocket.close()\r\n","android.media.browse.MediaBrowser.MediaItem.getDescription()":"android.media.browse.MediaBrowser.MediaItem.getDescription()\r\n","This class is used to incrementally build ":"该类用于增量构建\r\n","Called when the id doesn't exist or other errors in subscribing.":"当 id 不存在或其他订阅错误时调用。\r\n","android.hardware.Camera.Parameters.isAutoWhiteBalanceLockSupported()":"android.hardware.Camera.Parameters.isAutoWhiteBalanceLockSupported()\r\n","android.provider.ContactsContract.Directory.CALLER_PACKAGE_PARAM_KEY":"android.provider.ContactsContract.Directory.CALLER_PACKAGE_PARAM_KEY\r\n","android.provider.Contacts.PeopleColumns.PHONETIC_NAME":"android.provider.Contacts.PeopleColumns.PHONETIC_NAME\r\n","android.provider.CalendarContract.EventsColumns.GUESTS_CAN_INVITE_OTHERS":"android.provider.CalendarContract.EventsColumns.GUESTS_CAN_INVITE_OTHERS\r\n","android.provider.CallLog.Calls.LIMIT_PARAM_KEY":"android.provider.CallLog.Calls.LIMIT_PARAM_KEY\r\n","the number of presets the equalizer supports.":"均衡器支持的预设数量。\r\n","KeyStatus#STATUS_INTERNAL_ERROR":"KeyStatus#STATUS_INTERNAL_ERROR\r\n","android.content.res.Resources.Theme.getDrawable(int)":"android.content.res.Resources.Theme.getDrawable(int)\r\n","true if the stream is a maximum size stream.":"如果流是最大大小的流，则为真。\r\n","the Bundle key that refers to this input when collected from the user":"从用户收集时引用此输入的 Bundle 键\r\n","Key request type is license release":"密钥请求类型是许可证发布\r\n","Switches the current IME for the user for whom the service is enabled.":"为启用服务的用户切换当前 IME。\r\n","#MEDIA_ERROR_UNKNOWN":"#MEDIA_ERROR_UNKNOWN\r\n","Constructs and returns an ObjectAnimator that animates coordinates along a ":"构造并返回一个 ObjectAnimator，它沿 a 对坐标进行动画处理\r\n","android.media.MediaRouter.RouteGroup.getRouteCount()":"android.media.MediaRouter.RouteGroup.getRouteCount()\r\n","android.provider.ContactsContract.Intents.METADATA_ACCOUNT_TYPE":"android.provider.ContactsContract.Intents.METADATA_ACCOUNT_TYPE\r\n","Confirms whether or not this is a maximum size stream.":"确认这是否是最大大小的流。\r\n","ContactsContract.Contacts":"ContactsContract.联系人\r\n","Implement this method to handle touch screen motion events on the current input session.":"实现此方法以处理当前输入会话中的触摸屏运动事件。\r\n","android.app.job.JobInfo.Builder.build()":"android.app.job.JobInfo.Builder.build()\r\n","android.app.ApplicationErrorReport.CrashInfo.throwFileName":"android.app.ApplicationErrorReport.CrashInfo.throwFileName\r\n","Gets the value of the field at the specified row and column index as an\n            ":"获取指定行和列索引处的字段值作为\r\n            \r\n","Columns for the \"canonical_addresses\" table used by MMS and SMS.":"MMS 和 SMS 使用的“canonical_addresses”表的列。\r\n","The subscription to which the message belongs to.":"消息所属的订阅。\r\n","limiter compressor ratio (N:1)":"限制器压缩比 (N:1)\r\n","android.provider.ContactsContract.DeletedContactsColumns.CONTACT_ID":"android.provider.ContactsContract.DeletedContactsColumns.CONTACT_ID\r\n"," with a series of line segments.":" 与一系列的线段。\r\n","android.provider.CalendarContract.EventsColumns.AVAILABILITY_FREE":"android.provider.CalendarContract.EventsColumns.AVAILABILITY_FREE\r\n","android.content.pm.PackageInstaller.SessionInfo.isSealed()":"android.content.pm.PackageInstaller.SessionInfo.isSealed()\r\n","android.app.usage.UsageEvents.Event.getClassName()":"android.app.usage.UsageEvents.Event.getClassName()\r\n"," calls were made with the\n            ":" 打电话给\r\n            \r\n","true if zoom is supported.":"如果支持缩放，则为真。\r\n","android.animation.Animator.AnimatorListener.onAnimationRepeat(android.animation.Animator)":"android.animation.Animator.AnimatorListener.onAnimationRepeat(android.animation.Animator)\r\n","android.hardware.Camera.Parameters.setFocusAreas(java.util.List<android.hardware.Camera.Area>)":"android.hardware.Camera.Parameters.setFocusAreas(java.util.List<android.hardware.Camera.Area>)\r\n","#CONTENT_LOOKUP_URI":"#CONTENT_LOOKUP_URI\r\n","Call was pulled externally.":"呼叫已从外部拉出。\r\n","must be set for a ":"必须设置为\r\n","android.app.AlarmManager.AlarmClockInfo":"android.app.AlarmManager.AlarmClockInfo\r\n","android.provider.SimPhonebookContract.ElementaryFiles.NAME_MAX_LENGTH":"android.provider.SimPhonebookContract.ElementaryFiles.NAME_MAX_LENGTH\r\n","android.app.LoaderManager.LoaderCallbacks.onLoaderReset(android.content.Loader<D>)":"android.app.LoaderManager.LoaderCallbacks.onLoaderReset(android.content.Loader<D>)\r\n","android.content.IntentSender.SendIntentException":"android.content.IntentSender.SendIntentException\r\n","#CONTENT_URI":"#CONTENT_URI\r\n","Creates a builder with the same initial values as those in the from\n            state.":"创建一个具有与 from 中相同初始值的构建器\r\n            状态。\r\n","android.graphics.ColorSpace.Connector.getSource()":"android.graphics.ColorSpace.Connector.getSource()\r\n","android.app.ActivityManager.TaskDescription.ActivityManager$TaskDescription(java.lang.String)":"android.app.ActivityManager.TaskDescription.ActivityManager$TaskDescription(java.lang.String)\r\n","The horizontal gap before this key":"此键前的水平间隙\r\n","which message senders can bypass DND.":"哪些消息发件人可以绕过免打扰。\r\n","android.hardware.Camera.Parameters.getExposureCompensation()":"android.hardware.Camera.Parameters.getExposureCompensation()\r\n","android.print.PrintJobInfo.Builder":"android.print.PrintJobInfo.Builder\r\n","android.provider.Telephony.ServiceStateTable.DUPLEX_MODE":"android.provider.Telephony.ServiceStateTable.DUPLEX_MODE\r\n","Called when the virtual display video projection has been\n            stopped by the system.":"虚拟显示视频投影完成时调用\r\n            被系统停止了。\r\n","mOffset":"m偏移量\r\n","android.media.tv.TvContract.Channels.COLUMN_DISPLAY_NAME":"android.media.tv.TvContract.Channels.COLUMN_DISPLAY_NAME\r\n","gets Expander ratio (1:N) for signals below the Noise Gate Threshold. -or- sets Expander ratio (1:N) for signals below the Noise Gate Threshold.":"获取低于噪声门阈值的信号的扩展器比率 (1:N)。 - 或 - 为低于噪声门阈值的信号设置扩展器比率 (1:N)。\r\n","android.provider.DocumentsContract.Path.DocumentsContract$Path(java.lang.String, java.util.List<java.lang.String>)":"android.provider.DocumentsContract.Path.DocumentsContract$Path(java.lang.String, java.util.List<java.lang.String>)\r\n","android.content.pm.LauncherApps.PinItemRequest.accept()":"android.content.pm.LauncherApps.PinItemRequest.accept()\r\n","android.provider.Telephony.ServiceStateTable.CONTENT_URI":"android.provider.Telephony.ServiceStateTable.CONTENT_URI\r\n","An indicator of whether this contact has at least one phone number.":"此联系人是否至少有一个电话号码的指示器。\r\n"," for an existing TV input.":" 对于现有的电视输入。\r\n","Builder#Builder(PendingIntent, Icon)":"Builder#Builder（PendingIntent，图标）\r\n","android.accessibilityservice.AccessibilityService.MagnificationController.getCenterY()":"android.accessibilityservice.AccessibilityService.MagnificationController.getCenterY()\r\n","android.media.MediaRecorder.setAuxiliaryOutputFile(java.lang.String)":"android.media.MediaRecorder.setAuxiliaryOutputFile(java.lang.String)\r\n","Retrieves an iterator object that you can use to iterate over the values associated with\n            this ":"检索可用于迭代关联值的​​迭代器对象\r\n            这\r\n","Request that the player start its playback at its current position.":"请求播放器在其当前位置开始播放。\r\n","An integer value indicating the current data service state.":"指示当前数据服务状态的整数值。\r\n","android.inputmethodservice.Keyboard.Key.edgeFlags":"android.inputmethodservice.Keyboard.Key.edgeFlags\r\n","android.inputmethodservice.Keyboard.Row.rowEdgeFlags":"android.inputmethodservice.Keyboard.Row.rowEdgeFlags\r\n","Requests to unblock the content according to the given rating.":"请求根据给定的评级取消阻止内容。\r\n","Gets the bottom margin in mils (thousandths of an inch).":"获取以密耳（千分之一英寸）为单位的底部边距。\r\n","TvInputService.Session#notifyVideoAvailable()":"TvInputService.Session#notifyVideoAvailable()\r\n","Result code representing that the command is skipped or canceled.":"表示命令被跳过或取消的结果代码。\r\n","android.media.tv.TvInputInfo.Builder":"android.media.tv.TvInputInfo.Builder\r\n","android.media.audiofx.EnvironmentalReverb.setReverbDelay(int)":"android.media.audiofx.EnvironmentalReverb.setReverbDelay(int)\r\n"," is a resource identifier, this is the type name of that\n            identifier.":" 是一个资源标识符，这是那个的类型名称\r\n            标识符。\r\n","The left margin in mils (thousandths of an inch).":"以密耳（千分之一英寸）为单位的左边距。\r\n","android.content.pm.PackageInstaller.SessionInfo.getUser()":"android.content.pm.PackageInstaller.SessionInfo.getUser()\r\n","android.app.usage.UsageEvents.Event.getTimeStamp()":"android.app.usage.UsageEvents.Event.getTimeStamp()\r\n","A resource identifier of an explicit style resource.":"显式样式资源的资源标识符。\r\n","android.media.tv.TvContract.Channels.COLUMN_TRANSIENT":"android.media.tv.TvContract.Channels.COLUMN_TRANSIENT\r\n","android.media.MediaDrm.SecurityLevel":"android.media.MediaDrm.SecurityLevel\r\n","Returns the show mode of the soft keyboard.":"返回软键盘的显示模式。\r\n","Requests \"key\" fields only.":"仅请求“关键”字段。\r\n","Creates a builder on a copy of an existing object info.":"在现有对象信息的副本上创建构建器。\r\n","ijavapaperable\r\n\r\nIJavaPeerable\r\n\r\nijavapaperable\r\n\r\nIJavaPeerable":"ijava可纸化\r\n\r\nIJavaPeerable\r\n\r\nijava可纸化\r\n\r\nIJavaPeerable\r\n","android.provider.CalendarContract.Events.ENTERPRISE_CONTENT_URI":"android.provider.CalendarContract.Events.ENTERPRISE_CONTENT_URI\r\n","android.app.Person.Builder.Person$Builder()":"android.app.Person.Builder.Person$Builder()\r\n","android.media.tv.TvContract.Channels.COLUMN_SCRAMBLED":"android.media.tv.TvContract.Channels.COLUMN_SCRAMBLED\r\n","#DATA_CHANNEL_STATE":"#DATA_CHANNEL_STATE\r\n","Usage that occurs on a home, non-roaming network.":"在家庭、非漫游网络上发生的使用。\r\n","Returns whether this font is italic.":"返回此字体是否为斜体。\r\n","android.drm.DrmManagerClient.OnInfoListener.onInfo(android.drm.DrmManagerClient, android.drm.DrmInfoEvent)":"android.drm.DrmManagerClient.OnInfoListener.onInfo(android.drm.DrmManagerClient, android.drm.DrmInfoEvent)\r\n",". 0 means exposure is not\n                    adjusted.":". 0表示没有曝光\r\n                    调整。\r\n","#EVENT_COLOR":"#EVENT_COLOR\r\n","The pipe where data should be written.  This will be\n            closed for you upon returning from this function.":"应写入数据的管道。这会是\r\n            从此功能返回后为您关闭。\r\n","Returns a bit mask indicating which configuration\n            values has changed, containing any combination of\n            ":"返回指示哪个配置的位掩码\r\n            值已更改，包含以下任意组合\r\n            \r\n","android.app.ActivityManager.ProcessErrorStateInfo.shortMsg":"android.app.ActivityManager.ProcessErrorStateInfo.shortMsg\r\n","android.provider.Contacts.Extensions.CONTENT_ITEM_TYPE":"android.provider.Contacts.Extensions.CONTENT_ITEM_TYPE\r\n","Keys have been loaded but an additional license request is needed\n            to update their values.":"已加载密钥，但需要额外的许可请求\r\n            更新他们的价值观。\r\n","Create the Typeface based on the configured values.":"根据配置的值创建字体。\r\n","BiometricPrompt":"生物识别提示\r\n","Construct a builder.":"构建一个生成器。\r\n","the server that the VPN should connect to":"VPN 应连接到的服务器\r\n","Called when the fingerprint sensor's gesture detection becomes available or unavailable.":"当指纹传感器的手势检测可用或不可用时调用。\r\n","Special version of starting an activity, for use when you are replacing\n            other activity components.":"启动活动的特殊版本，供您更换时使用\r\n            其他活动成分。\r\n"," from these JobParameters associated with their\n            currently running job.":" 来自与他们相关联的这些 JobParameters\r\n            当前正在运行的作业。\r\n","true, if the notification has been triggered successfully":"true，如果通知已成功触发\r\n","android.app.Fragment.startActivity(android.content.Intent, android.os.Bundle)":"android.app.Fragment.startActivity(android.content.Intent, android.os.Bundle)\r\n","originalPoints":"原创积分\r\n"," if the request was accepted, ":" 如果请求被接受，\r\n","The start time of the original TV program, in milliseconds since the epoch.":"原始电视节目的开始时间，自纪元以来的毫秒数。\r\n","android.media.MediaDrm.MetricsConstants.GET_PROVISION_REQUEST_ERROR_LIST":"android.media.MediaDrm.MetricsConstants.GET_PROVISION_REQUEST_ERROR_LIST\r\n","android.graphics.drawable.Drawable.Callback.invalidateDrawable(android.graphics.drawable.Drawable)":"android.graphics.drawable.Drawable.Callback.invalidateDrawable(android.graphics.drawable.Drawable)\r\n","android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureStarted(android.hardware.camera2.CameraCaptureSession, android.hardware.camera2.CaptureRequest, long, long)":"android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureStarted（android.hardware.camera2.CameraCaptureSession，android.hardware.camera2.CaptureRequest，长，长）\r\n","Closes this page.":"关闭此页面。\r\n","android.hardware.Camera.CameraInfo.facing":"android.hardware.Camera.CameraInfo.facing\r\n","android.media.tv.TvContract.Channels.VIDEO_FORMAT_480P":"android.media.tv.TvContract.Channels.VIDEO_FORMAT_480P\r\n","android.provider.Settings.Global.STAY_ON_WHILE_PLUGGED_IN":"android.provider.Settings.Global.STAY_ON_WHILE_PLUGGED_IN\r\n","android.app.DialogFragment":"android.app.DialogFragment\r\n","android.os.Debug.MemoryInfo.otherSharedDirty":"android.os.Debug.MemoryInfo.otherSharedDirty\r\n","Channels":"频道\r\n"," style\n                       ":" 风格\r\n                       \r\n","android.app.assist.AssistStructure.ViewNode.getLocaleList()":"android.app.assist.AssistStructure.ViewNode.getLocaleList()\r\n","android.media.ApplicationMediaCapabilities.Builder.ApplicationMediaCapabilities$Builder()":"android.media.ApplicationMediaCapabilities.Builder.ApplicationMediaCapabilities$Builder()\r\n","Whether applying ramping ringer on incoming phone call ringtone.":"是否在来电铃声上应用渐变铃声。\r\n","The content:// style URI for showing a list of frequently contacted people.":"content:// 样式的 URI，用于显示经常联系的人的列表。\r\n"," with result code ":" 结果代码\r\n","Returns the id for the key":"返回密钥的 ID\r\n","Returns the 1-sigma uncertainty of the y-axis offset of the phase center from the origin\n            of the Android sensor coordinate system, in millimeters.":"返回相位中心距原点的 y 轴偏移量的 1-sigma 不确定性\r\n            Android 传感器坐标系的坐标系，以毫米为单位。\r\n","Represents corrections on a spherical mapping.":"表示对球面映射的校正。\r\n","#CRYPTO_MODE_AES_CTR":"#CRYPTO_MODE_AES_CTR\r\n","Columns from the ContactMethods table that other tables join into\n            themseleves.":"其他表加入的 ContactMethods 表中的列\r\n            他们自己。\r\n","This class provides access to the blob store managed by the system.":"此类提供对系统管理的 blob 存储的访问。\r\n"," if the provider\n            should stay in sync with the device's time zone.":" 如果提供者\r\n            应与设备的时区保持同步。\r\n","Returns the range of supported video widths for a video height.":"返回视频高度支持的视频宽度范围。\r\n","J.":"J.\r\n","android.provider.ContactsContract.StreamItemsColumns.DATA_SET":"android.provider.ContactsContract.StreamItemsColumns.DATA_SET\r\n","the room HF level in millibels.":"以毫贝为单位的室内高频电平。\r\n","Returns the number of lines in the paragraph.":"返回段落中的行数。\r\n"," to avoid underrun.\n              You can write data into this buffer in smaller chunks than this size.\n              See ":" 以避免欠载。\r\n              您可以以小于此大小的块将数据写入此缓冲区。\r\n              看\r\n","#CONTENT_EMAIL_URI":"#CONTENT_EMAIL_URI\r\n","android.location.GnssAntennaInfo.PhaseCenterOffset.getXOffsetMm()":"android.location.GnssAntennaInfo.PhaseCenterOffset.getXOffsetMm()\r\n","android.provider.ContactsContract.ContactStatusColumns.CONTACT_CHAT_CAPABILITY":"android.provider.ContactsContract.ContactStatusColumns.CONTACT_CHAT_CAPABILITY\r\n","Gets the media width in mils (thousandths of an inch).":"获取以密耳（千分之一英寸）为单位的介质宽度。\r\n","android.media.MediaDrm.KeyStatus.getKeyId()":"android.media.MediaDrm.KeyStatus.getKeyId()\r\n","android.media.MediaParser.SeekMap.UNKNOWN_DURATION":"android.media.MediaParser.SeekMap.UNKNOWN_DURATION\r\n","android.provider.CalendarContract.Attendees.query(android.content.ContentResolver, long, java.lang.String[])":"android.provider.CalendarContract.Attendees.query(android.content.ContentResolver, long, java.lang.String[])\r\n","Create a new instance of the Parcelable class, instantiating it\n            from the given Parcel whose data had previously been written by\n            ":"创建 Parcelable 类的新实例，实例化它\r\n            来自给定的 Parcel，其数据先前已被写入\r\n            \r\n","the type of info or warning that has occurred\n            <ul>\n            <li>":"发生的信息或警告的类型\r\n            <ul>\r\n            <李>\r\n","android.provider.CalendarContract.CalendarColumns.CALENDAR_ACCESS_LEVEL":"android.provider.CalendarContract.CalendarColumns.CALENDAR_ACCESS_LEVEL\r\n","The object whose property is to be animated. This object may\n            have a public method on it called ":"其属性要设置动画的对象。这个对象可能\r\n            有一个公共方法叫做\r\n","android.content.pm.PackageInstaller.SessionInfo.isStagedSessionReady()":"android.content.pm.PackageInstaller.SessionInfo.isStagedSessionReady()\r\n","Wallpaper color info":"壁纸颜色信息\r\n","android.content.pm.ShortcutInfo.Builder":"android.content.pm.ShortcutInfo.Builder\r\n","android.provider.Telephony.CarrierId.SPECIFIC_CARRIER_ID":"android.provider.Telephony.CarrierId.SPECIFIC_CARRIER_ID\r\n","Value of pinned position for a contact that a user has indicated should be considered\n            of the lowest priority.":"应考虑用户已指示的联系人固定位置的值\r\n            最低优先级的。\r\n","StorageVolume#getState()":"存储卷#getState()\r\n","android.provider.Settings.System.ANIMATOR_DURATION_SCALE":"android.provider.Settings.System.ANIMATOR_DURATION_SCALE\r\n","Special UID value for removed apps.":"已删除应用程序的特殊 UID 值。\r\n","#UNSET_ACTION_INDEX":"#UNSET_ACTION_INDEX\r\n","android.media.audiofx.EnvironmentalReverb.getDiffusion()":"android.media.audiofx.EnvironmentalReverb.getDiffusion()\r\n","android.provider.CallLog.Calls.USER_MISSED_LOW_RING_VOLUME":"android.provider.CallLog.Calls.USER_MISSED_LOW_RING_VOLUME\r\n","Return a textual representation of this MIME type.":"返回此 MIME 类型的文本表示。\r\n","Returns the interpolator type.":"返回插值器类型。\r\n","Create a new ActivityMonitor that can be used for intercepting any activity to be\n            started.":"创建一个新的 ActivityMonitor 可用于拦截任何活动\r\n            开始了。\r\n","android.opengl.GLUtils.texImage2D(int, int, int, android.graphics.Bitmap, int)":"android.opengl.GLUtils.texImage2D(int, int, int, android.graphics.Bitmap, int)\r\n","android.hardware.fingerprint.FingerprintManager.CryptoObject.getMac()":"android.hardware.fingerprint.FingerprintManager.CryptoObject.getMac()\r\n","Called when the active state of an app-op changes.":"当应用程序的活动状态发生变化时调用。\r\n","android.content.pm.PackageInstaller.Session.getNames()":"android.content.pm.PackageInstaller.Session.getNames()\r\n","android.provider.ContactsContract.Directory.ACCOUNT_NAME":"android.provider.ContactsContract.Directory.ACCOUNT_NAME\r\n","The appWidgetIds for which an update is needed.  Note that this\n                             may be all of the AppWidget instances for this provider, or just\n                             a subset of them.":"需要更新的 appWidgetIds。请注意，这\r\n                             可能是这个提供者的所有 AppWidget 实例，或者只是\r\n                             它们的一个子集。\r\n","Returns true if this node represents something that is checkable by the user.":"如果此节点表示用户可检查的内容，则返回 true。\r\n","android.telephony.SubscriptionInfo#getSimSlotIndex()":"android.telephony.SubscriptionInfo#getSimSlotIndex()\r\n","android.media.MediaCodec.CryptoInfo.set(int, int[], int[], byte[], byte[], int)":"android.media.MediaCodec.CryptoInfo.set(int, int[], int[], byte[], byte[], int)\r\n","KeyguardManager#requestDismissKeyguard(Activity, KeyguardDismissCallback)":"KeyguardManager#requestDismissKeyguard（活动，KeyguardDismissCallback）\r\n","optional byte array of data that may be associated with the event":"可能与事件关联的数据的可选字节数组\r\n","android.content.pm.LauncherApps.PinItemRequest.getAppWidgetProviderInfo(android.content.Context)":"android.content.pm.LauncherApps.PinItemRequest.getAppWidgetProviderInfo(android.content.Context)\r\n","Full class name of the fragment to display when this header is\n            selected.":"当此标头是时要显示的片段的完整类名\r\n            选择。\r\n","android.net.nsd.NsdManager.RegistrationListener":"android.net.nsd.NsdManager.RegistrationListener\r\n","android.media.MediaDrm.MetricsConstants.KEY_STATUS_USABLE_COUNT":"android.media.MediaDrm.MetricsConstants.KEY_STATUS_USABLE_COUNT\r\n","Get the gravity that the content icon should have within the notification display.":"获取内容图标在通知显示中应具有的重力。\r\n","android.bluetooth.BluetoothGatt.getConnectedDevices()":"android.bluetooth.BluetoothGatt.getConnectedDevices()\r\n","Interface definition of a callback to be invoked when a\n            track has timed metadata available.":"调用回调的接口定义\r\n            曲目有可用的定时元数据。\r\n","android.media.tv.TvContract.RecordedPrograms.CONTENT_ITEM_TYPE":"android.media.tv.TvContract.RecordedPrograms.CONTENT_ITEM_TYPE\r\n","android.print.PrintAttributes.Resolution.getId()":"android.print.PrintAttributes.Resolution.getId()\r\n","The current location mode of the device.":"设备的当前定位模式。\r\n","The ID of the selected track.":"所选轨道的 ID。\r\n"," instance to receive callbacks on every animation\n            frame, after the current frame's values have been calculated for that\n            ":" 接收每个动画回调的实例\r\n            帧，在为该帧计算当前帧的值之后\r\n            \r\n","The mimeType of the initialization data.":"初始化数据的 mimeType。\r\n","The provisioning server detected an error in the provisioning\n            request.":"配置服务器在配置中检测到错误\r\n            要求。\r\n","AVC High profile.":"AVC 高调。\r\n","android.provider.Settings.Secure.WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED":"android.provider.Settings.Secure.WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED\r\n","android.provider.Settings.Secure.TTS_USE_DEFAULTS":"android.provider.Settings.Secure.TTS_USE_DEFAULTS\r\n","Waits for the accessibility event stream to become idle, which is not to\n            have received an accessibility event within ":"等待可访问性事件流变为空闲，这不是\r\n            已收到辅助功能事件\r\n","Whether notifications intercepted by DND are prevented from appearing in the status bar,\n            on devices that support status bars.":"是否阻止免打扰拦截的通知出现在状态栏中，\r\n            在支持状态栏的设备上。\r\n","Get the custom height in pixels for the display of this notification's content.":"获取此通知内容显示的自定义高度（以像素为单位）。\r\n","android.graphics.ColorSpace.Rgb.ColorSpace$Rgb(java.lang.String, float[], float[], java.util.function.DoubleUnaryOperator, java.util.function.DoubleUnaryOperator, float, float)":"android.graphics.ColorSpace.Rgb.ColorSpace$Rgb(java.lang.String, float[], float[], java.util.function.DoubleUnaryOperator, java.util.function.DoubleUnaryOperator, float, float)\r\n","The file name of the font data in the asset directory":"asset目录下字体数据的文件名\r\n","the presentation timestamp in microseconds.":"以微秒为单位的演示文稿时间戳。\r\n","Controls how the src rect should align into the dst rect for setRectToRect().":"控制 setRectToRect() 的 src rect 应如何与 dst rect 对齐。\r\n","android.media.session.MediaController.TransportControls.playFromMediaId(java.lang.String, android.os.Bundle)":"android.media.session.MediaController.TransportControls.playFromMediaId(java.lang.String, android.os.Bundle)\r\n","android.provider.Settings.Global.USE_GOOGLE_MAIL":"android.provider.Settings.Global.USE_GOOGLE_MAIL\r\n","android.provider.Telephony.BaseMmsColumns.MESSAGE_CLASS":"android.provider.Telephony.BaseMmsColumns.MESSAGE_CLASS\r\n","Convenience function for retrieving a single secure settings value\n            as a float.":"检索单个安全设置值的便捷功能\r\n            作为浮动。\r\n","Content URI for getting MMS report status.":"用于获取 MMS 报告状态的内容 URI。\r\n","android.app.AppOpsManager.OnOpActiveChangedListener.onOpActiveChanged(java.lang.String, int, java.lang.String, boolean)":"android.app.AppOpsManager.OnOpActiveChangedListener.onOpActiveChanged(java.lang.String, int, java.lang.String, boolean)\r\n","android.hardware.Camera.ErrorCallback":"android.hardware.Camera.ErrorCallback\r\n","android.media.MediaCodecInfo.CodecProfileLevel.AVCProfileMain":"android.media.MediaCodecInfo.CodecProfileLevel.AVCProfileMain\r\n","android.os.Build.VERSION_CODES.LOLLIPOP":"android.os.Build.VERSION_CODES.LOLLIPOP\r\n","android.provider.DocumentsContract.Document.COLUMN_SIZE":"android.provider.DocumentsContract.Document.COLUMN_SIZE\r\n","android.media.MediaRouter.RouteInfo.isEnabled()":"android.media.MediaRouter.RouteInfo.isEnabled()\r\n","android.app.assist.AssistStructure.ViewNode.getTextIdEntry()":"android.app.assist.AssistStructure.ViewNode.getTextIdEntry()\r\n"," was successful.":" 那是成功的。\r\n","#EVENT_OUTPUT":"#EVENT_OUTPUT\r\n","android.os.Build.VERSION_CODES.JELLY_BEAN_MR2":"android.os.Build.VERSION_CODES.JELLY_BEAN_MR2\r\n","android.media.tv.TvContract.Channels.SERVICE_TYPE_OTHER":"android.media.tv.TvContract.Channels.SERVICE_TYPE_OTHER\r\n","Combined usage for this network regardless of default network status.":"无论默认网络状态如何，此网络的组合使用。\r\n","If non-zero, this service is not currently running, but scheduled to\n            restart at the given time.":"如果非零，则该服务当前未运行，但计划\r\n            在给定的时间重新启动。\r\n","android.database.DatabaseUtils.InsertHelper.bind(int, float)":"android.database.DatabaseUtils.InsertHelper.bind(int, float)\r\n","android.provider.Telephony.CarrierId.CONTENT_URI":"android.provider.Telephony.CarrierId.CONTENT_URI\r\n","Gets the volume control ID for this session.":"获取此会话的音量控制 ID。\r\n",". If any admin declares\n            ":".如果任何管理员声明\r\n            \r\n","Called on the listener to periodically notify it that the playback head has reached\n            a multiple of the notification period.":"调用侦听器定期通知它播放头已到达\r\n            通知期的倍数。\r\n"," setting that indicates that the directory\n            does not allow any data to be copied out of it.":" 指示目录的设置\r\n            不允许从中复制任何数据。\r\n","Class for Equalizer stage":"均衡器阶段类\r\n","The flag indicating whether this TV channel is searchable or not.":"指示此电视频道是否可搜索的标志。\r\n","Called as the first step of the Activity saving its instance state.":"作为 Activity 保存其实例状态的第一步调用。\r\n","android.provider.DocumentsContract.Document":"android.provider.DocumentsContract.Document\r\n","android.media.metrics.PlaybackErrorEvent.Builder.PlaybackErrorEvent$Builder()":"android.media.metrics.PlaybackErrorEvent.Builder.PlaybackErrorEvent$Builder()\r\n","Specific icon resource ID for a document.":"文档的特定图标资源 ID。\r\n","android.media.tv.TvContract.Channels.VIDEO_FORMAT_240P":"android.media.tv.TvContract.Channels.VIDEO_FORMAT_240P\r\n","android.app.assist.AssistStructure.ViewNode.getWebScheme()":"android.app.assist.AssistStructure.ViewNode.getWebScheme()\r\n"," if either the\n                       input parameter ":" 如果\r\n                       输入参数\r\n","Indicates that this event is free time and will not conflict with\n            other events.":"表示本次活动是空闲时间，不会与\r\n            其他事件。\r\n","android.media.MediaScannerConnection.OnScanCompletedListener":"android.media.MediaScannerConnection.OnScanCompletedListener\r\n","android.provider.ContactsContract.Groups.CONTENT_SUMMARY_URI":"android.provider.ContactsContract.Groups.CONTENT_SUMMARY_URI\r\n","android.net.sip.SipAudioCall.Listener.onReadyToCall(android.net.sip.SipAudioCall)":"android.net.sip.SipAudioCall.Listener.onReadyToCall(android.net.sip.SipAudioCall)\r\n","android.provider.ContactsContract.Contacts.lookupContact(android.content.ContentResolver, android.net.Uri)":"android.provider.ContactsContract.Contacts.lookupContact(android.content.ContentResolver, android.net.Uri)\r\n","android.media.tv.TvContract.Channels.COLUMN_INTERNAL_PROVIDER_FLAG4":"android.media.tv.TvContract.Channels.COLUMN_INTERNAL_PROVIDER_FLAG4\r\n"," if this was never set.":" 如果从未设置过。\r\n","android.database.DatabaseUtils.InsertHelper.replace(android.content.ContentValues)":"android.database.DatabaseUtils.InsertHelper.replace(android.content.ContentValues)\r\n","Sends the type and ID of a selected track.":"发送所选轨道的类型和 ID。\r\n","android.provider.ContactsContract.Directory.ACCOUNT_TYPE":"android.provider.ContactsContract.Directory.ACCOUNT_TYPE\r\n","android.content.pm.PackageInstaller.SessionInfo.getStagedSessionErrorMessage()":"android.content.pm.PackageInstaller.SessionInfo.getStagedSessionErrorMessage()\r\n","number of bands configured for the PostEq stage.":"为 PostEq 阶段配置的频段数。\r\n","\", or\n            \"":"“， 或者\r\n            “\r\n","android.provider.Settings.System.WIFI_STATIC_GATEWAY":"android.provider.Settings.System.WIFI_STATIC_GATEWAY\r\n","android.app.usage.NetworkStats.Bucket.getUid()":"android.app.usage.NetworkStats.Bucket.getUid()\r\n","video/mpeg":"视频/mpeg\r\n","android.app.usage.NetworkStats.Bucket.ROAMING_NO":"android.app.usage.NetworkStats.Bucket.ROAMING_NO\r\n","A callback to be invoked when another NFC device capable of NDEF push (Android Beam)\n            is within range.":"当另一个支持 NDEF 推送的 NFC 设备 (Android Beam) 时调用的回调\r\n            在范围内。\r\n",": Archive the content associated with the notification.":"：存档与通知相关的内容。\r\n","android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile2HDR10Plus":"android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile2HDR10Plus\r\n","android.provider.Contacts.Intents.SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED":"android.provider.Contacts.Intents.SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED\r\n","android.provider.CalendarContract.SyncColumns.ACCOUNT_TYPE":"android.provider.CalendarContract.SyncColumns.ACCOUNT_TYPE\r\n",": Mark content as read.":"：将内容标记为已读。\r\n","the SQLiteDatabase to insert into":"要插入的 SQLiteDatabase\r\n","android.content.ContentResolver.MimeTypeInfo.getContentDescription()":"android.content.ContentResolver.MimeTypeInfo.getContentDescription()\r\n","android.os.Debug.MemoryInfo.otherPss":"android.os.Debug.MemoryInfo.otherPss\r\n","When a contacts is marked as a favorites it will be automatically added\n            to the groups that have this flag set, and when it is removed from favorites\n            it will be removed from these groups.":"当联系人被标记为收藏夹时，它将自动添加\r\n            到设置了此标志的组，以及何时将其从收藏夹中删除\r\n            它将从这些组中删除。\r\n","android.app.ActivityManager.RunningAppProcessInfo.pid":"android.app.ActivityManager.RunningAppProcessInfo.pid\r\n","Return the reason for installing this package.":"返回安装此包的原因。\r\n","oldState":"旧状态\r\n","the URI string as \"sip:<user_name>":"URI 字符串为“sip:<user_name>\r\n","Configuration for a property of type String in a Document.":"文档中字符串类型属性的配置。\r\n","android.hardware.Camera.Parameters.getMeteringAreas()":"android.hardware.Camera.Parameters.getMeteringAreas()\r\n","android.provider.CalendarContract.CalendarAlertsColumns.STATE":"android.provider.CalendarContract.CalendarAlertsColumns.STATE\r\n","android.media.AudioRecord.AudioRecord(int, int, int, int, int)":"android.media.AudioRecord.AudioRecord（整数，整数，整数，整数，整数）\r\n","Numeric operator ID (as String).":"数字运算符 ID（作为字符串）。\r\n","Called whenever the playback state has changed.":"每当播放状态发生变化时调用。\r\n","android.app.NotificationManager.Policy.SUPPRESSED_EFFECT_PEEK":"android.app.NotificationManager.Policy.SUPPRESSED_EFFECT_PEEK\r\n","Override to handle requests to fast forward.":"覆盖以处理快进请求。\r\n","Timing of the recorded event measured in milliseconds since the Epoch,\n            1970-01-01 00:00:00 +0000 (UTC).":"自纪元以来以毫秒为单位测量的记录事件的时间，\r\n            1970-01-01 00:00:00 +0000（UTC）。\r\n","android.provider.ContactsContract.Contacts.CONTENT_VCARD_TYPE":"android.provider.ContactsContract.Contacts.CONTENT_VCARD_TYPE\r\n","Returns the tag of this log entry, which specifies entry's semantics.":"返回此日志条目的标记，它指定条目的语义。\r\n","Helper class for generating large-format notifications that include multiple back-and-forth\n            messages of varying types between any number of people.":"用于生成包含多个来回通知的大型通知的帮助程序类\r\n            任意数量的人之间的不同类型的消息。\r\n","android.app.KeyguardManager.KeyguardDismissCallback.onDismissSucceeded()":"android.app.KeyguardManager.KeyguardDismissCallback.onDismissSucceeded()\r\n","MediaExtractor#getMetrics":"媒体提取器#getMetrics\r\n"," if the provider\n            should use a fixed time zone set by the user.":" 如果提供者\r\n            应该使用用户设置的固定时区。\r\n","a list of supported scene modes. null if scene mode setting\n                    is not supported.":"支持的场景模式列表。如果场景模式设置为空\r\n                    不支持。\r\n","android.os.Debug.MemoryInfo.getMemoryStat(java.lang.String)":"android.os.Debug.MemoryInfo.getMemoryStat(java.lang.String)\r\n","android.content.res.Resources.Theme.getAttributeResolutionStack(int, int, int)":"android.content.res.Resources.Theme.getAttributeResolutionStack(int, int, int)\r\n","android.provider.Telephony.ThreadsColumns.DATE":"android.provider.Telephony.ThreadsColumns.DATE\r\n","The content:// style URL for accessing Calendars":"用于访问日历的 content:// 样式 URL\r\n","android.bluetooth.BluetoothGatt.getConnectionState(android.bluetooth.BluetoothDevice)":"android.bluetooth.BluetoothGatt.getConnectionState（android.bluetooth.BluetoothDevice）\r\n","yPropertyName":"y属性名称\r\n","android.media.MediaCodecInfo.CodecProfileLevel.DolbyVisionProfileDvav110":"android.media.MediaCodecInfo.CodecProfileLevel.DolbyVisionProfileDvav110\r\n","the position to pin the contact at. To unpin a contact, use\n                    ":"固定联系人的位置。要取消固定联系人，请使用\r\n                    \r\n","Pronunciation of the full name in the phonetic alphabet specified by\n            ":"全名按指定拼音发音\r\n            \r\n","RemoveByDocumentIdRequest.Builder":"RemoveByDocumentIdRequest.Builder\r\n","android.companion.BluetoothDeviceFilter.Builder":"android.companion.BluetoothDeviceFilter.Builder\r\n",".\n                    Never ":".\r\n                    绝不\r\n","android.provider.Contacts.Groups":"android.provider.Contacts.Groups\r\n","android.provider.Telephony.BaseMmsColumns.SUBJECT_CHARSET":"android.provider.Telephony.BaseMmsColumns.SUBJECT_CHARSET\r\n","android.hardware.Camera.Parameters.SCENE_MODE_HDR":"android.hardware.Camera.Parameters.SCENE_MODE_HDR\r\n",", and specifies how audio focus\n            will be requested.":", 并指定音频如何聚焦\r\n            将被要求。\r\n","android.media.JetPlayer.OnJetEventListener":"android.media.JetPlayer.OnJetEventListener\r\n","android.provider.ContactsContract.CommonDataKinds":"android.provider.ContactsContract.CommonDataKinds\r\n"," when the\n            codec is a audio codec.":" 当。。。的时候\r\n            编解码器是一种音频编解码器。\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV444Interleaved":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV444Interleaved\r\n","android.provider.ContactsContract.Directory.SHORTCUT_SUPPORT_FULL":"android.provider.ContactsContract.Directory.SHORTCUT_SUPPORT_FULL\r\n","Called to notify when a MIDI device has been removed":"当 MIDI 设备被移除时调用以通知\r\n","The cached URI to look up the contact associated with the phone number, if it exists.":"缓存的 URI，用于查找与电话号码关联的联系人（如果存在）。\r\n","android.provider.ContactsContract.PhoneLookup.ENTERPRISE_CONTENT_FILTER_URI":"android.provider.ContactsContract.PhoneLookup.ENTERPRISE_CONTENT_FILTER_URI\r\n","#getIntent()":"#getIntent()\r\n","true if video snapshot is supported.":"如果支持视频快照，则为真。\r\n","Interface that must be implemented and provided as a public CREATOR\n            field that generates instances of your Parcelable class from a Parcel.":"必须作为公共 CREATOR 实现和提供的接口\r\n            从 Parcel 生成 Parcelable 类实例的字段。\r\n","Gets the current exposure compensation index. -or- Sets the exposure compensation index.":"获取当前曝光补偿指数。 - 或 - 设置曝光补偿指数。\r\n","SearchResult#getPackageName":"搜索结果#getPackageName\r\n","android.provider.CalendarContract.CalendarAlertsColumns.STATE_DISMISSED":"android.provider.CalendarContract.CalendarAlertsColumns.STATE_DISMISSED\r\n","android.app.ActionBar.TabListener":"android.app.ActionBar.TabListener\r\n","the Object storing the new value for the key.":"存储键的新值的对象。\r\n","Transcription of the call or voicemail entry.":"呼叫或语音邮件条目的转录。\r\n","android.provider.CalendarContract.Instances.END_MINUTE":"android.provider.CalendarContract.Instances.END_MINUTE\r\n","android.hardware.Camera.Parameters.flatten()":"android.hardware.Camera.Parameters.flatten()\r\n","android.media.MediaDrm.MetricsConstants.OPEN_SESSION_ERROR_LIST":"android.media.MediaDrm.MetricsConstants.OPEN_SESSION_ERROR_LIST\r\n","android.app.RemoteInput.Builder.RemoteInput$Builder(java.lang.String)":"android.app.RemoteInput.Builder.RemoteInput$Builder(java.lang.String)\r\n","A human-readable error string that can be shown on an UI":"可以在 UI 上显示的人类可读错误字符串\r\n","android.app.NotificationManager.Policy.NotificationManager$Policy(int, int, int, int, int)":"android.app.NotificationManager.Policy.NotificationManager$Policy(int, int, int, int, int)\r\n","agent":"代理人\r\n","android.provider.Settings.Global.WIFI_DEVICE_OWNER_CONFIGS_LOCKDOWN":"android.provider.Settings.Global.WIFI_DEVICE_OWNER_CONFIGS_LOCKDOWN\r\n"," to use.\n                     (see ":" 使用。\r\n                     （看\r\n","android.graphics.pdf.PdfRenderer.Page.render(android.graphics.Bitmap, android.graphics.Rect, android.graphics.Matrix, int)":"android.graphics.pdf.PdfRenderer.Page.render（android.graphics.Bitmap，android.graphics.Rect，android.graphics.Matrix，int）\r\n","android.media.audiofx.DynamicsProcessing.MbcBand.setNoiseGateThreshold(float)":"android.media.audiofx.DynamicsProcessing.MbcBand.setNoiseGateThreshold（浮动）\r\n","android.content.pm.PackageManager.Property.getInteger()":"android.content.pm.PackageManager.Property.getInteger()\r\n",", but allowing you\n            to use a IntentSender to describe the activity to be started.":", 但允许你\r\n            使用 IntentSender 来描述要启动的活动。\r\n","A result receiver to which a result may be sent by the command, may be null.":"命令可以向其发送结果的结果接收器可以为空。\r\n","android.app.appsearch.AppSearchSchema.StringPropertyConfig.getIndexingType()":"android.app.appsearch.AppSearchSchema.StringPropertyConfig.getIndexingType()\r\n","android.app.Notification.MessagingStyle.isGroupConversation()":"android.app.Notification.MessagingStyle.isGroupConversation()\r\n","android.provider.CallLog.Calls.CONTENT_URI":"android.provider.CallLog.Calls.CONTENT_URI\r\n","android.hardware.biometrics.BiometricPrompt.Builder.build()":"android.hardware.biometrics.BiometricPrompt.Builder.build()\r\n","ShortcutInfo#getId()":"快捷信息#getId()\r\n","End timestamp of the bucket's time interval.":"桶的时间间隔的结束时间戳。\r\n","android.graphics.Canvas.clipRegion(android.graphics.Region)":"android.graphics.Canvas.clipRegion(android.graphics.Region)\r\n","Builds the object info instance.":"构建对象信息实例。\r\n","android.media.MediaDrm.MetricsConstants.KEY_STATUS_PENDING_COUNT":"android.media.MediaDrm.MetricsConstants.KEY_STATUS_PENDING_COUNT\r\n","android.graphics.text.LineBreaker.Result.getLineCount()":"android.graphics.text.LineBreaker.Result.getLineCount()\r\n","android.database.DatabaseUtils.InsertHelper.bind(int, byte[])":"android.database.DatabaseUtils.InsertHelper.bind(int, byte[])\r\n","android.provider.Settings.Secure.INSTALL_NON_MARKET_APPS":"android.provider.Settings.Secure.INSTALL_NON_MARKET_APPS\r\n","The id of the logical display that was removed.":"已删除的逻辑显示的 ID。\r\n","android.media.AsyncPlayer.play(android.content.Context, android.net.Uri, boolean, android.media.AudioAttributes)":"android.media.AsyncPlayer.play(android.content.Context, android.net.Uri, boolean, android.media.AudioAttributes)\r\n","android.content.pm.PackageInstaller.SessionInfo.isStaged()":"android.content.pm.PackageInstaller.SessionInfo.isStaged()\r\n","Returns the image format for preview frames got from\n            ":"返回从中获取的预览帧的图像格式\r\n            \r\n","Returns the default tab stops in pixels.":"以像素为单位返回默认制表位。\r\n","RawContacts#ACCOUNT_TYPE":"原始联系人#ACCOUNT_TYPE\r\n","#MEDIA_ERROR_TIMED_OUT":"#MEDIA_ERROR_TIMED_OUT\r\n","android.media.AudioTrack.OnRoutingChangedListener":"android.media.AudioTrack.OnRoutingChangedListener\r\n","android.provider.ContactsContract.GroupsColumns.SYSTEM_ID":"android.provider.ContactsContract.GroupsColumns.SYSTEM_ID\r\n"," is supported.\n            Passing 0 is equivalent to calling ":" 被支持。\r\n            传0相当于调用\r\n","Section of memory that represents a linear block.":"表示线性块的内存部分。\r\n","android.hardware.Camera.Parameters.PREVIEW_FPS_MIN_INDEX":"android.hardware.Camera.Parameters.PREVIEW_FPS_MIN_INDEX\r\n","android.content.pm.LauncherApps.ShortcutQuery.FLAG_GET_KEY_FIELDS_ONLY":"android.content.pm.LauncherApps.ShortcutQuery.FLAG_GET_KEY_FIELDS_ONLY\r\n","android.provider.Telephony.BaseMmsColumns":"android.provider.Telephony.BaseMmsColumns\r\n","android.net.nsd.NsdManager.ResolveListener":"android.net.nsd.NsdManager.ResolveListener\r\n","android.app.PendingIntent.OnFinished":"android.app.PendingIntent.OnFinished\r\n","android.provider.Telephony.Carriers.SERVER":"android.provider.Telephony.Carriers.SERVER\r\n","android.provider.ContactsContract.QuickContact.showQuickContact(android.content.Context, android.view.View, android.net.Uri, java.lang.String[], java.lang.String)":"android.provider.ContactsContract.QuickContact.showQuickContact(android.content.Context, android.view.View, android.net.Uri, java.lang.String[], java.lang.String)\r\n","android.os.RemoteException.rethrowAsRuntimeException()":"android.os.RemoteException.rethrowAsRuntimeException()\r\n","Value to specify if the device's time zone system property should be set automatically,\n            e.":"指定是否应自动设置设备的时区系统属性的值，\r\n            e.\r\n","the long value for the key, or the supplied default value if the key is not present":"键的长值，或者如果键不存在则提供的默认值\r\n","Removes a session ID from the set of sessions that will be committed\n            atomically when this session is committed.":"从将提交的会话集中删除一个会话 ID\r\n            提交此会话时自动执行。\r\n","android.provider.CallLog.Calls.USER_MISSED_CALL_FILTERS_TIMEOUT":"android.provider.CallLog.Calls.USER_MISSED_CALL_FILTERS_TIMEOUT\r\n","Request that the player start playback for a specific search query.":"请求播放器开始播放特定搜索查询。\r\n","android.provider.VoicemailContract.Status.DATA_CHANNEL_STATE_NO_CONNECTION_CELLULAR_REQUIRED":"android.provider.VoicemailContract.Status.DATA_CHANNEL_STATE_NO_CONNECTION_CELLULAR_REQUIRED\r\n","a mask of the measurements to perform. The valid values are\n                ":"要执行的测量掩码。有效值为\r\n                \r\n","GenericDocument#getId":"通用文档#getId\r\n","Whether something went wrong and the staged session is declared as failed, meaning that\n            it will be ignored at next reboot.":"是否出现问题并且暂存会话被声明为失败，这意味着\r\n            它将在下次重新启动时被忽略。\r\n","android.provider.Settings.Panel":"android.provider.Settings.Panel\r\n","android.media.tv.TvContract.PreviewPrograms.CONTENT_ITEM_TYPE":"android.media.tv.TvContract.PreviewPrograms.CONTENT_ITEM_TYPE\r\n","Represents the Service Discovery Protocol (SDP) settings for a Bluetooth HID Device application.":"表示蓝牙 HID 设备应用程序的服务发现协议 (SDP) 设置。\r\n"," object with type and MIME type.":"类型和 MIME 类型的对象。\r\n","the JPEG quality of captured picture. The range is 1\n                           to 100, with 100 being the best.":"捕获图片的 JPEG 质量。范围是 1\r\n                           到 100，100 是最好的。\r\n","The media type of the video encoder being used for the video track":"用于视频轨道的视频编码器的媒体类型\r\n","#MEDIA_INFO_UNKNOWN":"#MEDIA_INFO_UNKNOWN\r\n","TvInputManager#VIDEO_UNAVAILABLE_REASON_TUNING":"TvInputManager#VIDEO_UNAVAILABLE_REASON_TUNING\r\n","android.provider.CalendarContract.EventsColumns.ACCESS_DEFAULT":"android.provider.CalendarContract.EventsColumns.ACCESS_DEFAULT\r\n","The current development codename, or the string \"REL\" if this is\n            a release build.":"当前的开发代号，如果是，则为字符串“REL”\r\n            发布版本。\r\n","android.media.MediaPlayer.OnMediaTimeDiscontinuityListener":"android.media.MediaPlayer.OnMediaTimeDiscontinuityListener\r\n","Appended to various volume related settings to record the previous\n            values before they the settings were affected by a silent/vibrate\n            ringer mode change.":"追加各种音量相关设置，记录之前\r\n            在设置受到静音/振动影响之前的值\r\n            铃声模式改变。\r\n","android.print.PrintDocumentAdapter.WriteResultCallback":"android.print.PrintDocumentAdapter.WriteResultCallback\r\n","Usage that occurs on a roaming network.":"在漫游网络上发生的使用。\r\n","Called when the user has clicked on a Preference that has\n            a fragment class name associated with it.":"当用户单击具有的首选项时调用\r\n            与之关联的片段类名。\r\n","Check whether this monitor blocks activity starts (not allowing the \n            actual activity to run) or allows them to execute normally.":"检查此监视器是否阻止活动启动（不允许\r\n            要运行的实际活动）或允许它们正常执行。\r\n","CryptoException":"加密异常\r\n","android.app.ApplicationErrorReport.CrashInfo.ApplicationErrorReport$CrashInfo(java.lang.Throwable)":"android.app.ApplicationErrorReport.CrashInfo.ApplicationErrorReport$CrashInfo(java.lang.Throwable)\r\n","There exists at least one freeze period whose length exceeds 90 days.":"至少存在一个超过90天的冻结期。\r\n","the timestamp at start of capture for a regular request, or\n                             the timestamp at the input image's start of capture for a\n                             reprocess request, in nanoseconds.":"常规请求捕获开始时的时间戳，或\r\n                             输入图像开始捕获时的时间戳\r\n                             重新处理请求，以纳秒为单位。\r\n","The current position for time shifting, in milliseconds since the epoch.":"时移的当前位置，自纪元以来的毫秒数。\r\n","AsyncTask":"异步任务\r\n","The default receiver device type of the route indicating the type is unknown.":"指示类型的路由的默认接收方设备类型未知。\r\n","The Typeface object retrieved.":"检索到的字体对象。\r\n","android.content.pm.PackageManager.OnChecksumsReadyListener.onChecksumsReady(java.util.List<android.content.pm.ApkChecksum>)":"android.content.pm.PackageManager.OnChecksumsReadyListener.onChecksumsReady(java.util.List<android.content.pm.ApkChecksum>)\r\n","The effect descriptor contains information on a particular effect implemented in the\n            audio framework:<br>\n            <ul>\n             <li>type: UUID identifying the effect type.":"效果描述符包含有关在\r\n            音频框架：<br>\r\n            <ul>\r\n             <li>type：标识效果类型的 UUID。\r\n","Return the number of lines to apply the first line's width.":"返回应用第一行宽度的行数。\r\n","#setHintScreenTimeout":"#setHintScreenTimeout\r\n","android.media.AudioFormat.Builder.build()":"android.media.AudioFormat.Builder.build()\r\n","android.os.Build.VERSION_CODES.N_MR1":"android.os.Build.VERSION_CODES.N_MR1\r\n","Represents the type of a request, which is one of the ":"表示请求的类型，是其中的一种\r\n","android.provider.Settings.Global.AUTO_TIME_ZONE":"android.provider.Settings.Global.AUTO_TIME_ZONE\r\n","Processes a private command sent from the application to the TV input.":"处理从应用程序发送到电视输入的私有命令。\r\n","Key request type is license renewal.":"密钥请求类型是许可证更新。\r\n","A listener interface to send optional app-specific hints when creating a\n            ":"创建时发送可选的应用程序特定提示的侦听器界面\r\n            \r\n","Returns maximum number of milliseconds that SQLite connection is allowed to be idle\n            before it is closed and removed from the pool.":"返回允许 SQLite 连接空闲的最大毫秒数\r\n            在它关闭并从池中移除之前。\r\n","android.app.assist.AssistStructure.ViewNode.getTextSize()":"android.app.assist.AssistStructure.ViewNode.getTextSize()\r\n"," if\n            the current layout is for a print preview, ":" 如果\r\n            当前布局用于打印预览，\r\n","android.app.LocalActivityManager.startActivity(java.lang.String, android.content.Intent)":"android.app.LocalActivityManager.startActivity(java.lang.String, android.content.Intent)\r\n","android.media.tv.TvContract.Channels.TYPE_S_DMB":"android.media.tv.TvContract.Channels.TYPE_S_DMB\r\n","An integer value indicating the current duplex mode if the radio technology is LTE,\n            LTE-CA or NR.":"如果无线电技术是 LTE，则指示当前双工模式的整数值，\r\n            LTE-CA 或 NR。\r\n","android.provider.Contacts.ContactMethodsColumns.TYPE":"android.provider.Contacts.ContactMethodsColumns.TYPE\r\n","android.app.admin.SecurityLog.SecurityEvent.getId()":"android.app.admin.SecurityLog.SecurityEvent.getId()\r\n"," is non-null, this is the main text style associated\n            with it, containing a bit mask of ":" 非空，这是关联的主要文本样式\r\n            与它一起，包含一个位掩码\r\n","android.media.audiofx.Equalizer.getBandLevel(short)":"android.media.audiofx.Equalizer.getBandLevel（短）\r\n","Gets the end point (exclusive).":"获取终点（不包括）。\r\n","J MR1.":"J MR1。\r\n","android.graphics.fonts.FontFamily.Builder.build()":"android.graphics.fonts.FontFamily.Builder.build()\r\n"," is used to do camera characteristics field lookups with\n            ":" 用于进行相机特征字段查找\r\n            \r\n"," on failure":" 失败时\r\n","android.graphics.Paint.FontMetricsInt.bottom":"android.graphics.Paint.FontMetricsInt.底部\r\n","Cancel this active request.":"取消此活动请求。\r\n","Called when the gesture was cancelled":"手势取消时调用\r\n","android.media.Session2Command.Result.getResultCode()":"android.media.Session2Command.Result.getResultCode()\r\n","android.print.PrintAttributes.Resolution.PrintAttributes$Resolution(java.lang.String, java.lang.String, int, int)":"android.print.PrintAttributes.Resolution.PrintAttributes$Resolution（java.lang.String，java.lang.String，int，int）\r\n","Constants for the contacts table, which contains a record per aggregate\n            of raw contacts representing the same person.":"contacts 表的常量，每个聚合包含一条记录\r\n            代表同一个人的原始联系人。\r\n","Called when GNSS system has started.":"GNSS 系统启动时调用。\r\n","An implementation of SurfaceView that uses the dedicated surface for\n            displaying OpenGL rendering.":"使用专用表面的 SurfaceView 的实现\r\n            显示 OpenGL 渲染。\r\n","android.bluetooth.le.ScanFilter.Builder.build()":"android.bluetooth.le.ScanFilter.Builder.build()\r\n","android.print.PrintJobInfo.Builder.PrintJobInfo$Builder(android.print.PrintJobInfo)":"android.print.PrintJobInfo.Builder.PrintJobInfo$Builder(android.print.PrintJobInfo)\r\n","android.media.JetPlayer.OnJetEventListener.onJetPauseUpdate(android.media.JetPlayer, int)":"android.media.JetPlayer.OnJetEventListener.onJetPauseUpdate(android.media.JetPlayer, int)\r\n","Convenience function for retrieving a single secure settings value\n            as a floating point number.":"检索单个安全设置值的便捷功能\r\n            作为浮点数。\r\n","android.provider.ContactsContract.DeletedContacts.DAYS_KEPT_MILLISECONDS":"android.provider.ContactsContract.DeletedContacts.DAYS_KEPT_MILLISECONDS\r\n","android.provider.ContactsContract.ContactsColumns.NAME_RAW_CONTACT_ID":"android.provider.ContactsContract.ContactsColumns.NAME_RAW_CONTACT_ID\r\n","Key to extract the MIME type\n            from the ":"提取 MIME 类型的键\r\n            来自\r\n","LineBreaker#computeLineBreaks line breaking algorithm":"LineBreaker#computeLineBreaks 换行算法\r\n","android.provider.Settings.System.ANDROID_ID":"android.provider.Settings.System.ANDROID_ID\r\n","android.provider.VoicemailContract.Status.DATA_CHANNEL_STATE_OK":"android.provider.VoicemailContract.Status.DATA_CHANNEL_STATE_OK\r\n","A pause listener receives notifications from an animation when the\n            animation is ":"暂停侦听器在\r\n            动画是\r\n","TvTrackInfo":"电视轨道信息\r\n","android.print.PrintAttributes.MediaSize":"android.print.PrintAttributes.MediaSize\r\n","Key to extract the number of failed ":"提取失败次数的关键\r\n","android.hardware.Camera.Parameters.getHorizontalViewAngle()":"android.hardware.Camera.Parameters.getHorizo​​ntalViewAngle()\r\n","android.provider.ContactsContract.ContactNameColumns.SORT_KEY_ALTERNATIVE":"android.provider.ContactsContract.ContactNameColumns.SORT_KEY_ALTERNATIVE\r\n","Retrieves the MIME type associated with this ":"检索与此关联的 MIME 类型\r\n","Interface used to allow the creator of a dialog to run some code when the\n            dialog is shown.":"用于允许对话框的创建者运行一些代码的接口\r\n            显示对话框。\r\n","K.":"K.\r\n","Callback interface you can use when instantiating a Handler to avoid\n            having to implement your own subclass of Handler.":"实例化 Handler 时可以使用的回调接口，以避免\r\n            必须实现您自己的 Handler 子类。\r\n","InputMethodService#onUpdateCursorAnchorInfo\n            InputMethodService.onUpdateCursorAnchorInfo()":"InputMethodService#onUpdateCursorAnchorInfo\r\n            InputMethodService.onUpdateCursorAnchorInfo()\r\n","the MediaRecorder the info pertains to":"信息所属的 MediaRecorder\r\n","android.media.audiofx.PresetReverb.OnParameterChangeListener.onParameterChange(android.media.audiofx.PresetReverb, int, int, short)":"android.media.audiofx.PresetReverb.OnParameterChangeListener.onParameterChange(android.media.audiofx.PresetReverb, int, int, short)\r\n","number of bands this stage will handle. If stage is not inUse, bandcount\n            is set to 0":"这个阶段将处理的波段数。如果阶段未使用，则 bandcount\r\n            设置为 0\r\n","SyncRequest":"同步请求\r\n","Sets the center of the magnified viewport.":"设置放大视口的中心。\r\n","Profile proxy object":"配置文件代理对象\r\n","android.provider.DocumentsContract.Document.FLAG_DIR_PREFERS_LAST_MODIFIED":"android.provider.DocumentsContract.Document.FLAG_DIR_PREFERS_LAST_MODIFIED\r\n","Flag indicating that this root offers content that is strictly local\n            on the device.":"指示此根提供严格本地内容的标志\r\n            在设备上。\r\n","android.provider.ContactsContract.StreamItems.CONTENT_LIMIT_URI":"android.provider.ContactsContract.StreamItems.CONTENT_LIMIT_URI\r\n","android.app.Fragment.onInflate(android.content.Context, android.util.AttributeSet, android.os.Bundle)":"android.app.Fragment.onInflate(android.content.Context, android.util.AttributeSet, android.os.Bundle)\r\n","the effect target gain expressed in mB.":"以 mB 表示的效果目标增益。\r\n","Return additional hint text associated with the node; this is typically used with\n            a node that takes user input, describing to the user what the input means.":"返回与节点关联的附加提示文本；这通常与\r\n            接受用户输入的节点，向用户描述输入的含义。\r\n","Call was HD.":"通话是高清的。\r\n","android.provider.ContactsContract.PhoneticNameStyle.PINYIN":"android.provider.ContactsContract.PhoneticNameStyle.PINYIN\r\n","A class that supports querying the encoding capabilities of a codec.":"一个支持查询编解码器编码能力的类。\r\n","one of the playback states authorized\n                in ":"授权的播放状态之一\r\n                在\r\n","android.media.MediaDrm.KeyRequest":"android.media.MediaDrm.KeyRequest\r\n","android.media.MediaDrm.MetricsConstants.PROVIDE_PROVISION_RESPONSE_OK_COUNT":"android.media.MediaDrm.MetricsConstants.PROVIDE_PROVISION_RESPONSE_OK_COUNT\r\n","android.media.tv.TvInputService.Session.onSelectTrack(int, java.lang.String)":"android.media.tv.TvInputService.Session.onSelectTrack(int, java.lang.String)\r\n","#DIRECTORY_NOTIFICATIONS":"#DIRECTORY_NOTIFICATIONS\r\n","android.media.session.MediaSession.Callback.onSetRating(android.media.Rating)":"android.media.session.MediaSession.Callback.onSetRating(android.media.Rating)\r\n","android.provider.Telephony.ThreadsColumns.ARCHIVED":"android.provider.Telephony.ThreadsColumns.ARCHIVED\r\n","android.provider.DocumentsContract.Root.FLAG_SUPPORTS_RECENTS":"android.provider.DocumentsContract.Root.FLAG_SUPPORTS_RECENTS\r\n","#PREPARE_DRM_STATUS_PROVISIONING_NETWORK_ERROR":"#PREPARE_DRM_STATUS_PROVISIONING_NETWORK_ERROR\r\n","For special services that are bound to by system code, this is\n            a string resource providing a user-visible label for who the\n            client is.":"对于系统代码绑定的特殊服务，这是\r\n            为谁提供用户可见标签的字符串资源\r\n            客户群岛\r\n","Selects a given track.":"选择给定的轨道。\r\n","android.os.MessageQueue.IdleHandler":"android.os.MessageQueue.IdleHandler\r\n","android.media.MediaPlayer.TrackInfo.describeContents()":"android.media.MediaPlayer.TrackInfo.describeContents()\r\n","Returns the supported range of encoder complexity values.":"返回支持的编码器复杂度值范围。\r\n","Returns the number of bytes required to encode the specified name when it is stored\n            on the SIM.":"返回存储时对指定名称进行编码所需的字节数\r\n            在 SIM 卡上。\r\n","Callback for receiving updates from the session.":"用于从会话接收更新的回调。\r\n","synchronous mode":"同步模式\r\n","android.provider.ContactsContract.ContactsColumns.PHOTO_THUMBNAIL_URI":"android.provider.ContactsContract.ContactsColumns.PHOTO_THUMBNAIL_URI\r\n","The unique identifier of the new camera.":"新相机的唯一标识符。\r\n","The start offset into ":"起始偏移量为\r\n","，，，，\r\n             \r\n\r\n,\r\n             \r\n\r\n，，，，\r\n             \r\n\r\n, \n             ":"，，，，\r\n             \r\n\r\n,\r\n             \r\n\r\n，，，，\r\n             \r\n\r\n,\r\n             \r\n","android.provider.Contacts.Settings.setSetting(android.content.ContentResolver, java.lang.String, java.lang.String, java.lang.String)":"android.provider.Contacts.Settings.setSetting（android.content.ContentResolver，java.lang.String，java.lang.String，java.lang.String）\r\n","android.provider.Telephony.Carriers.MMSPORT":"android.provider.Telephony.Carriers.MMSPORT\r\n","android.provider.CalendarContract.ColorsColumns.COLOR_TYPE":"android.provider.CalendarContract.ColorsColumns.COLOR_TYPE\r\n","G MR1.":"G MR1。\r\n","the unscaled screen-relative Y coordinate of the center of\n                    the magnified region":"中心的未缩放屏幕相对 Y 坐标\r\n                    放大区域\r\n","Inform the default EGLContextFactory and default EGLConfigChooser\n            which EGLContext client version to pick.":"通知默认的 EGLContextFactory 和默认的 EGLConfigChooser\r\n            选择哪个 EGLContext 客户端版本。\r\n","Called when a controller has sent a command to this session.":"当控制器向该会话发送命令时调用。\r\n","android.provider.ContactsContract.Directory.DISPLAY_NAME":"android.provider.ContactsContract.Directory.DISPLAY_NAME\r\n","android.provider.Telephony.ThreadsColumns.HAS_ATTACHMENT":"android.provider.Telephony.ThreadsColumns.HAS_ATTACHMENT\r\n","android.app.AlarmManager.AlarmClockInfo.getShowIntent()":"android.app.AlarmManager.AlarmClockInfo.getShowIntent()\r\n","This method is called instead of ":"调用此方法而不是\r\n","android.provider.Settings.Global.DEVICE_PROVISIONED":"android.provider.Settings.Global.DEVICE_PROVISIONED\r\n","Adds a session ID to the set of sessions that will be committed atomically\n            when this session is committed.":"将会话 ID 添加到将以原子方式提交的会话集中\r\n            提交此会话时。\r\n","android.media.MediaCodec.MetricsConstants.CODEC":"android.media.MediaCodec.MetricsConstants.CODEC\r\n","android.content.pm.ActivityInfo#CONFIG_KEYBOARD\n            PackageManager.ActivityInfo.CONFIG_KEYBOARD":"android.content.pm.ActivityInfo#CONFIG_KEYBOARD\r\n            PackageManager.ActivityInfo.CONFIG_KEYBOARD\r\n","android.app.ActivityManager.RunningAppProcessInfo.importanceReasonComponent":"android.app.ActivityManager.RunningAppProcessInfo.importanceReasonComponent\r\n","the shortcut id used for this bubble if created via\n            ":"如果通过创建，则用于此气泡的快捷方式 ID\r\n            \r\n","android.provider.Settings.System.putLong(android.content.ContentResolver, java.lang.String, long)":"android.provider.Settings.System.putLong（android.content.ContentResolver，java.lang.String，长）\r\n","Returns an intent that can be used to show or edit details of the alarm clock in\n            the application that scheduled it.":"返回可用于显示或编辑闹钟详细信息的 Intent\r\n            安排它的应用程序。\r\n","android.preference.PreferenceActivity.Header":"android.preference.PreferenceActivity.Header\r\n"," to animate from the current viewport\n                           center or ":" 从当前视口制作动画\r\n                           中心或\r\n","a file descriptor":"文件描述符\r\n","android.provider.Telephony.Threads.COMMON_THREAD":"android.provider.Telephony.Threads.COMMON_THREAD\r\n","The predefined service type of this TV channel.":"此电视频道的预定义服务类型。\r\n","Builder to create ":"生成器创建\r\n","TvInputManager#VIDEO_UNAVAILABLE_REASON_AUDIO_ONLY":"TvInputManager#VIDEO_UNAVAILABLE_REASON_AUDIO_ONLY\r\n","android.media.tv.TvContract.PreviewPrograms.COLUMN_WEIGHT":"android.media.tv.TvContract.PreviewPrograms.COLUMN_WEIGHT\r\n","android.app.Notification.Action.SEMANTIC_ACTION_MARK_AS_UNREAD":"android.app.Notification.Action.SEMANTIC_ACTION_MARK_AS_UNREAD\r\n","android.media.MediaPlayer.MetricsConstants.ERROR_CODE":"android.media.MediaPlayer.MetricsConstants.ERROR_CODE\r\n","The cached number type (Home, Work, etc) associated with the\n            phone number, if it exists.":"与关联的缓存号码类型（家庭、工作等）\r\n            电话号码（如果存在）。\r\n","The desired style resource.":"所需的样式资源。\r\n","android.os.ParcelFileDescriptor.AutoCloseOutputStream":"android.os.ParcelFileDescriptor.AutoCloseOutputStream\r\n","Columns in the Data_Usage_Stat table":"Data_Usage_Stat 表中的列\r\n","appWidgetId":"appWidgetId\r\n"," and\n            using the given ClassLoader.":" 和\r\n            使用给定的类加载器。\r\n","Retrieves the private data in the CA_Descriptor associated with a track.":"检索与轨道关联的 CA_Descriptor 中的私有数据。\r\n","android.provider.Settings.Secure.TTS_DEFAULT_SYNTH":"android.provider.Settings.Secure.TTS_DEFAULT_SYNTH\r\n"," to get the latest.":" 获取最新信息。\r\n","Returns whether this is a contextual Action, i.":"返回这是否是上下文操作，即。\r\n","Required - the name to be displayed for any replies sent by the\n            user before the posting app reposts the notification with those messages after they've\n            been actually sent and in previous messages sent by the user added in\n            ":"必填 - 要显示的任何回复的名称\r\n            用户在发布应用程序之前重新发布带有这些消息的通知\r\n            已实际发送，并且在用户添加的先前发送的消息中\r\n            \r\n","The blue component to decode to linear space":"要解码到线性空间的蓝色分量\r\n"," when the name\n            length could not be determined because the name could not be encoded.":" 当名字\r\n            无法确定长度，因为无法对名称进行编码。\r\n","android.content.pm.PackageInstaller.SessionParams.setMultiPackage()":"android.content.pm.PackageInstaller.SessionParams.setMultiPackage()\r\n","Listener to be called after ":"之后要调用的侦听器\r\n","Called when the Activity calls\n            ":"Activity 调用时调用\r\n            \r\n","android.provider.ContactsContract.DataColumns.DATA12":"android.provider.ContactsContract.DataColumns.DATA12\r\n","Ends the current hint session.":"结束当前提示会话。\r\n","android.media.AudioRecord.OnRecordPositionUpdateListener.onPeriodicNotification(android.media.AudioRecord)":"android.media.AudioRecord.OnRecordPositionUpdateListener.onPeriodicNotification(android.media.AudioRecord)\r\n","android.media.metrics.PlaybackStateEvent.Builder.build()":"android.media.metrics.PlaybackStateEvent.Builder.build()\r\n","android.content.pm.PackageInstaller.SessionInfo.getParentSessionId()":"android.content.pm.PackageInstaller.SessionInfo.getParentSessionId()\r\n","volume":"体积\r\n","android.provider.ContactsContract.Groups.CONTENT_ITEM_TYPE":"android.provider.ContactsContract.Groups.CONTENT_ITEM_TYPE\r\n","android.provider.Telephony.ServiceStateTable.DATA_NETWORK_TYPE":"android.provider.Telephony.ServiceStateTable.DATA_NETWORK_TYPE\r\n","android.content.pm.PackageInstaller.Session":"android.content.pm.PackageInstaller.Session\r\n"," of deleted schema types.":" 删除的模式类型。\r\n","android.provider.Settings.Secure.SETTINGS_CLASSNAME":"android.provider.Settings.Secure.SETTINGS_CLASSNAME\r\n","Invoked when the client is disconnected from the media browser.":"当客户端与媒体浏览器断开连接时调用。\r\n","Provides a localized string that can be used as the label for a button that invokes\n            ":"提供可用作调用按钮标签的本地化字符串\r\n            \r\n"," of a  ":" 的\r\n","Returns true if this session is a staged session.":"如果此会话是暂存会话，则返回 true。\r\n","Magic value for text color that has not been defined, which is very unlikely\n            to be confused with a real text color.":"尚未定义的文本颜色的魔法值，这种可能性很小\r\n            与真实的文本颜色混淆。\r\n"," has been changed by the user and is\n            about to be set and/or persisted.":" 已被用户更改并且是\r\n            即将被设置和/或持久化。\r\n","Whether the staged session is ready to be applied at next reboot.":"暂存会话是否已准备好在下次重新启动时应用。\r\n","whether or not the point falls inside the key. If the key is attached to an edge,\n            it will assume that all points between the key and the edge are considered to be inside\n            the key.":"该点是否落在键内。如果键连接到边缘，\r\n            它将假定键和边缘之间的所有点都被认为在内部\r\n            钥匙。\r\n","android.provider.ContactsContract.SyncState.set(android.content.ContentProviderClient, android.accounts.Account, byte[])":"android.provider.ContactsContract.SyncState.set(android.content.ContentProviderClient, android.accounts.Account, byte[])\r\n","Provides localized strings for an application that uses ":"为使用的应用程序提供本地化字符串\r\n","android.provider.ContactsContract.SyncColumns.VERSION":"android.provider.ContactsContract.SyncColumns.VERSION\r\n","android.hardware.Camera.Size":"android.hardware.Camera.Size\r\n","\n            value of ":"\r\n            的价值\r\n","android.inputmethodservice.Keyboard.Row.defaultHeight":"android.inputmethodservice.Keyboard.Row.defaultHeight\r\n","android.provider.DocumentsContract.QUERY_ARG_MIME_TYPES":"android.provider.DocumentsContract.QUERY_ARG_MIME_TYPES\r\n","android.media.MediaRouter.RouteInfo.getStatus()":"android.media.MediaRouter.RouteInfo.getStatus()\r\n","Represents the update file being wrong; e.":"代表更新文件有误； e.\r\n","Returns the ID of a ":"返回一个的ID\r\n","the standby bucket associated with the event.":"与事件关联的备用存储桶。\r\n","A class to store peak and RMS values.":"用于存储峰值和 RMS 值的类。\r\n","Call was on RTT at some point":"通话在某个时间点在 RTT 上\r\n","android.media.MediaPlayer.DrmInfo.getSupportedSchemes()":"android.media.MediaPlayer.DrmInfo.getSupportedSchemes()\r\n","Creates a new RGB color space using a specified set of primaries\n            and a specified white point.":"使用一组指定的原色创建新的 RGB 颜色空间\r\n            和指定的白点。\r\n","android.provider.Settings.System.AUTO_TIME":"android.provider.Settings.System.AUTO_TIME\r\n","a 3-bit TNF constant":"一个 3 位的 TNF 常量\r\n","android.app.Notification.WearableExtender.getBridgeTag()":"android.app.Notification.WearableExtender.getBridgeTag()\r\n","android.provider.SyncStateContract.Helpers.get(android.content.ContentProviderClient, android.net.Uri, android.accounts.Account)":"android.provider.SyncStateContract.Helpers.get(android.content.ContentProviderClient, android.net.Uri, android.accounts.Account)\r\n","Override to handle requests to prepare playback.":"重写以处理准备播放的请求。\r\n","android.provider.CallLog.Calls.USER_MISSED_DND_MODE":"android.provider.CallLog.Calls.USER_MISSED_DND_MODE\r\n","android.media.MediaDrm.KeyRequest.REQUEST_TYPE_INITIAL":"android.media.MediaDrm.KeyRequest.REQUEST_TYPE_INITIAL\r\n","AudioEffect#EFFECT_TYPE_EQUALIZER":"音频效果#EFFECT_TYPE_EQUALIZER\r\n","android.media.tv.TvInputService.Session.onTune(android.net.Uri)":"android.media.tv.TvInputService.Session.onTune(android.net.Uri)\r\n","android.media.MediaRecorder.MetricsConstants.HEIGHT":"android.media.MediaRecorder.MetricsConstants.HEIGHT\r\n","android.provider.Settings.Secure.BACKGROUND_DATA":"android.provider.Settings.Secure.BACKGROUND_DATA\r\n"," and these characters themselves.":" 以及这些角色本身。\r\n"," for this\n                        custom action.":" 为了这\r\n                        自定义操作。\r\n","android.media.tv.TvView.TvInputCallback.onConnectionFailed(java.lang.String)":"android.media.tv.TvView.TvInputCallback.onConnectionFailed(java.lang.String)\r\n","Configuration for a property containing a byte array.":"包含字节数组的属性的配置。\r\n","android.provider.ContactsContract.DataColumns.CARRIER_PRESENCE_VT_CAPABLE":"android.provider.ContactsContract.DataColumns.CARRIER_PRESENCE_VT_CAPABLE\r\n","Builder for creating device light change requests.":"用于创建设备灯更改请求的生成器。\r\n","Creates a new instance with the given values.":"使用给定的值创建一个新实例。\r\n","android.app.ApplicationErrorReport.AnrInfo.info":"android.app.ApplicationErrorReport.AnrInfo.info\r\n","android.net.sip.SipSession.State.REGISTERING":"android.net.sip.SipSession.State.REGISTERING\r\n","The value returned for the key ":"为键返回的值\r\n","android.app.ApplicationErrorReport.BatteryInfo.dump(android.util.Printer, java.lang.String)":"android.app.ApplicationErrorReport.BatteryInfo.dump(android.util.Printer, java.lang.String)\r\n","The type of the account that was used to sync the entry to the\n            device.":"用于将条目同步到的帐户类型\r\n            设备。\r\n","Constructs a new builder for ":"为\r\n","The end value; should be of type ":"终值；应该是类型\r\n","#setTorchMode":"#setTorchMode\r\n","android.provider.Settings.Global.getInt(android.content.ContentResolver, java.lang.String, int)":"android.provider.Settings.Global.getInt(android.content.ContentResolver, java.lang.String, int)\r\n","android.net.IpSecAlgorithm.CRYPT_AES_CTR":"android.net.IpSecAlgorithm.CRYPT_AES_CTR\r\n","android.hardware.camera2.CameraCaptureSession.prepare(android.view.Surface)":"android.hardware.camera2.CameraCaptureSession.prepare(android.view.Surface)\r\n","android.media.EncoderProfiles.VideoProfile":"android.media.EncoderProfiles.VideoProfile\r\n","Extra used to specify size of QuickContacts.":"Extra 用于指定 QuickContacts 的大小。\r\n","android.provider.DocumentsContract.Document.FLAG_SUPPORTS_REMOVE":"android.provider.DocumentsContract.Document.FLAG_SUPPORTS_REMOVE\r\n","android.provider.Settings.Secure.LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED":"android.provider.Settings.Secure.LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED\r\n","#LOCALE_TYPE_ALL":"#LOCALE_TYPE_ALL\r\n","android.hardware.Camera.Parameters.getSupportedColorEffects()":"android.hardware.Camera.Parameters.getSupportedColorEffects()\r\n","This class provides a simple timing engine for running animations\n            which calculate animated values and set them on target objects.":"此类为运行动画提供了一个简单的计时引擎\r\n            它计算动画值并将它们设置在目标对象上。\r\n","Gamma to use as the transfer function":"Gamma 用作传递函数\r\n","android.provider.ContactsContract.SyncState.newSetOperation(android.accounts.Account, byte[])":"android.provider.ContactsContract.SyncState.newSetOperation(android.accounts.Account, byte[])\r\n","android.provider.CallLog.Calls.IS_READ":"android.provider.CallLog.Calls.IS_READ\r\n","android.content.pm.PackageInstaller.Session.setStagingProgress(float)":"android.content.pm.PackageInstaller.Session.setStagingProgress(浮动)\r\n","The time at which this event occurred, measured in milliseconds since the epoch.":"此事件发生的时间，自纪元以来以毫秒为单位测量。\r\n","BroadcastReceiver#setResultExtras(Bundle)\n            BroadcastReceiver.setResultExtras(Bundle)":"BroadcastReceiver#setResultExtras（捆绑包）\r\n            BroadcastReceiver.setResultExtras（捆绑包）\r\n","android.media.tv.TvContract.Channels.COLUMN_INTERNAL_PROVIDER_FLAG3":"android.media.tv.TvContract.Channels.COLUMN_INTERNAL_PROVIDER_FLAG3\r\n","the pending intent to send when the bubble is dismissed by a user, if one exists.":"当气泡被用户消除时发送的未决意图（如果存在）。\r\n","android.content.pm.PackageInstaller.SessionCallback.onFinished(int, boolean)":"android.content.pm.PackageInstaller.SessionCallback.onFinished(int, boolean)\r\n","#getDefaultAdapter(Context)":"#getDefaultAdapter（上下文）\r\n","android.provider.Telephony.BaseMmsColumns.DELIVERY_TIME":"android.provider.Telephony.BaseMmsColumns.DELIVERY_TIME\r\n"," if the sensor is supported and successfully\n                    enabled":" 如果传感器得到支持并成功\r\n                    启用\r\n","android.media.MediaPlayer.OnPreparedListener.onPrepared(android.media.MediaPlayer)":"android.media.MediaPlayer.OnPreparedListener.onPrepared(android.media.MediaPlayer)\r\n","Creates a builder for ":"为创建一个构建器\r\n","Indicates the call underwent Assisted Dialing.":"表示呼叫进行了辅助拨号。\r\n","android.app.Notification.Builder.Notification$Builder(android.content.Context)":"android.app.Notification.Builder.Notification$Builder(android.content.Context)\r\n","android.provider.Settings.Secure.TTS_DEFAULT_RATE":"android.provider.Settings.Secure.TTS_DEFAULT_RATE\r\n","Expander ratio (1:N)":"膨胀比 (1:N)\r\n","Provides a localized string that can be shown while the user is authenticating with\n            ":"提供一个本地化的字符串，可以在用户进行身份验证时显示\r\n            \r\n","#PRESENCE":"＃在场\r\n","android.print.PrintAttributes.Margins.getLeftMils()":"android.print.PrintAttributes.Margins.getLeftMils()\r\n","android.hardware.biometrics.BiometricPrompt.CryptoObject.getSignature()":"android.hardware.biometrics.BiometricPrompt.CryptoObject.getSignature()\r\n","DataColumns#MIMETYPE":"数据列#MIMETYPE\r\n","android.media.session.MediaController.TransportControls.playFromUri(android.net.Uri, android.os.Bundle)":"android.media.session.MediaController.TransportControls.playFromUri(android.net.Uri, android.os.Bundle)\r\n","This table stores all non-phone contact methods and a reference to the\n            person that the contact method belongs to.":"此表存储所有非电话联系方式和对\r\n            联系方式所属的人。\r\n","android.provider.SimPhonebookContract.ElementaryFiles.EF_FDN":"android.provider.SimPhonebookContract.ElementaryFiles.EF_FDN\r\n","Whether the staged session has been applied successfully, meaning that all of its\n            packages have been activated and no further action is required.":"staged session 是否已经应用成功，意味着它的所有\r\n            套餐已激活，无需进一步操作。\r\n","android.media.tv.TvContract.BaseTvColumns.COLUMN_PACKAGE_NAME":"android.media.tv.TvContract.BaseTvColumns.COLUMN_PACKAGE_NAME\r\n","The default playback type, \"local\", indicating the presentation of the media is happening\n            on the same device (e&#46;g&#46; a phone, a tablet) as where it is controlled from.":"默认播放类型，“本地”，表示正在播放媒体\r\n            在与其控制位置相同的设备（例如手机、平板电脑）上。\r\n","For a shortcut request, this method always return null.  For an AppWidget\n            request, this method returns the extras passed to the\n            ":"对于快捷方式请求，此方法始终返回 null。对于 AppWidget\r\n            请求，此方法返回传递给\r\n            \r\n","A haptic effect that simulates spinning momentum.":"模拟旋转动量的触觉效果。\r\n","grainy":"粒状的\r\n","android.media.ApplicationMediaCapabilities.Builder":"android.media.ApplicationMediaCapabilities.Builder\r\n"," intent\n            respectively to the default launcher app.":" 意图\r\n            分别到默认启动器应用程序。\r\n","android.provider.Contacts.PhotosColumns.EXISTS_ON_SERVER":"android.provider.Contacts.PhotosColumns.EXISTS_ON_SERVER\r\n","Build#TIME":"构建#TIME\r\n","Get a hint that this notification's background should not be clipped if possible,\n            and should instead be resized to fully display on the screen, retaining the aspect\n            ratio of the image.":"提示如果可能，不应剪裁此通知的背景，\r\n            并且应该调整大小以完全显示在屏幕上，保留纵横比\r\n            图像的比例。\r\n","instance of GnssAntennaInfo":"GnssAntennaInfo 的实例\r\n","android.location.GnssMeasurementsEvent.Callback.onGnssMeasurementsReceived(android.location.GnssMeasurementsEvent)":"android.location.GnssMeasurementsEvent.Callback.onGnssMeasurementsReceived(android.location.GnssMeasurementsEvent)\r\n","android.graphics.text.LineBreaker.ParagraphConstraints.getTabStops()":"android.graphics.text.LineBreaker.ParagraphConstraints.getTabStops()\r\n","Optional extras specified by the ":"指定的可选附加项\r\n"," with all the properties of the ":" 具有的所有属性\r\n","android.net.Ikev2VpnProfile.Builder":"android.net.Ikev2VpnProfile.Builder\r\n","android.app.Notification.WearableExtender.getCustomSizePreset()":"android.app.Notification.WearableExtender.getCustomSizePreset()\r\n","</pre>\n                             If using <b>openssl cms</b>, make sure to specify -binary -nosmimecap.":"</pre>\r\n                             如果使用 <b>openssl cms</b>，请确保指定 -binary -nosmimecap。\r\n","SubscriptionInfo#getSubscriptionId()":"订阅信息#getSubscriptionId()\r\n","The resource ID of the label describing the source of the status update, e.":"描述状态更新来源的标签的资源 ID，例如。\r\n","android.media.MediaCodec.ParameterDescriptor":"android.media.MediaCodec.ParameterDescriptor\r\n","android.provider.CalendarContract.Colors.CONTENT_URI":"android.provider.CalendarContract.Colors.CONTENT_URI\r\n","android.hardware.location.GeofenceHardwareRequest":"android.hardware.location.GeofenceHardwareRequest\r\n","Builds a new GnssCapabilities.":"构建新的 GnssCapabilities。\r\n","GPS provider or Location is disabled, updates will not be received until they are\n            enabled.":"GPS 供应商或位置被禁用，更新将不会被接收，直到它们被\r\n            启用。\r\n","The file object refers to the font file.":"文件对象指的是字体文件。\r\n"," to\n            specify whether user action should be required for the install.":" 到\r\n            指定安装是否需要用户操作。\r\n","android.provider.Settings.System.RADIO_BLUETOOTH":"android.provider.Settings.System.RADIO_BLUETOOTH\r\n","Gets the resolution human readable label.":"获取人类可读的分辨率标签。\r\n","android.net.sip.SipAudioCall.Listener.onRingingBack(android.net.sip.SipAudioCall)":"android.net.sip.SipAudioCall.Listener.onRingingBack(android.net.sip.SipAudioCall)\r\n","The identifier of a ":"的标识符\r\n","Can read all event details":"可以阅读所有活动详情\r\n","android.media.AudioTrack.stop()":"android.media.AudioTrack.stop()\r\n","#getSupportedPreviewFpsRange()":"#getSupportedPreviewFpsRange()\r\n","android.graphics.ColorSpace.Connector.getDestination()":"android.graphics.ColorSpace.Connector.getDestination()\r\n","PackageManager#requestChecksums":"包管理器#requestChecksums\r\n","android.app.blob.BlobStoreManager.Session.commit(java.util.concurrent.Executor, java.util.function.Consumer<java.lang.Integer>)":"android.app.blob.BlobStoreManager.Session.commit(java.util.concurrent.Executor, java.util.function.Consumer<java.lang.Integer>)\r\n","The amount of time in milliseconds before the device goes to sleep or begins\n            to dream after a period of inactivity.":"设备进入睡眠或开始之前的时间量（以毫秒为单位）\r\n            在一段时间不活动后做梦。\r\n","The channel type for ISDB-C (cable).":"ISDB-C 的频道类型（电缆）。\r\n","android.app.ActionBar.Tab.select()":"android.app.ActionBar.Tab.select()\r\n","_ID of the work profile default directory, which represents locally stored contacts.":"工作配置文件默认目录的_ID，代表本地存储的联系人。\r\n","the JPEG quality of the EXIF thumbnail. The range is 1\n                           to 100, with 100 being the best.":"EXIF 缩略图的 JPEG 质量。范围是 1\r\n                           到 100，100 是最好的。\r\n","The channel type for ISDB-S (satellite).":"ISDB-S（卫星）的频道类型。\r\n","ViewStructure#setElevation\n            ViewStructure.setElevation(float)":"查看结构#setElevation\r\n            ViewStructure.setElevation（浮动）\r\n","android.provider.Telephony.MmsSms.ERR_TYPE_MMS_PROTO_PERMANENT":"android.provider.Telephony.MmsSms.ERR_TYPE_MMS_PROTO_PERMANENT\r\n","android.hardware.camera2.CameraCharacteristics.Key.equals(java.lang.Object)":"android.hardware.camera2.CameraCharacteristics.Key.equals(java.lang.Object)\r\n","The pid of this process; 0 if none":"这个进程的pid； 0 如果没有\r\n","android.provider.Contacts.Groups.CONTENT_URI":"android.provider.Contacts.Groups.CONTENT_URI\r\n","android.app.Notification.BubbleMetadata.isBubbleSuppressed()":"android.app.Notification.BubbleMetadata.isBubbleSuppressed()\r\n",", e.":"，即。\r\n","android.os.VibrationEffect.Composition.PRIMITIVE_SLOW_RISE":"android.os.VibrationEffect.Composition.PRIMITIVE_SLOW_RISE\r\n","Called when an unrecoverable error has been encountered and the operation is complete.":"当遇到不可恢复的错误并且操作完成时调用。\r\n","The user-visible SDK version of the framework in its raw String\n            representation; use ":"原始字符串中用户可见的框架 SDK 版本\r\n            表示;使用\r\n","android.media.audiofx.BassBoost.OnParameterChangeListener":"android.media.audiofx.BassBoost.OnParameterChangeListener\r\n","android.media.tv.TvInputService.RecordingSession.notifyError(int)":"android.media.tv.TvInputService.RecordingSession.notifyError(int)\r\n","android.provider.DocumentsContract.Document.COLUMN_ICON":"android.provider.DocumentsContract.Document.COLUMN_ICON\r\n","android.provider.ContactsContract.StreamItemPhotosColumns.SYNC1":"android.provider.ContactsContract.StreamItemPhotosColumns.SYNC1\r\n","FingerprintManager#authenticate(CryptoObject,\n            CancellationSignal, int, AuthenticationCallback, Handler)":"FingerprintManager#authenticate(加密对象，\r\n            CancellationSignal、int、AuthenticationCallback、处理程序）\r\n","one of the flags authorized\n                in ":"授权的旗帜之一\r\n                在\r\n","android.media.MediaRouter.UserRouteInfo":"android.media.MediaRouter.UserRouteInfo\r\n","Construct a RemoteViews for the final heads-up notification layout.":"为最终的抬头通知布局构建 RemoteViews。\r\n","android.provider.Settings.System.RADIO_CELL":"android.provider.Settings.System.RADIO_CELL\r\n","android.app.KeyguardManager.KeyguardLock.reenableKeyguard()":"android.app.KeyguardManager.KeyguardLock.reenableKeyguard()\r\n","android.provider.Settings.Global.WIFI_NUM_OPEN_NETWORKS_KEPT":"android.provider.Settings.Global.WIFI_NUM_OPEN_NETWORKS_KEPT\r\n","Called when the application sets playback parameters containing the speed and audio mode.":"当应用程序设置包含速度和音频模式的播放参数时调用。\r\n","The channel type for ATSC-M/H (mobile/handheld).":"ATSC-M/H（移动/手持）的信道类型。\r\n",", and/or\n            ":", 和/或\r\n            \r\n","Skip to the previous item.":"跳到上一项。\r\n","android.media.MediaRouter.RouteInfo.setTag(java.lang.Object)":"android.media.MediaRouter.RouteInfo.setTag(java.lang.Object)\r\n","the path of the file, or the http URL\n            \n            <p>When ":"文件的路径，或 http URL\r\n            \r\n            <p>什么时候\r\n","Returns the port number of the port":"返回端口的端口号\r\n","android.provider.DocumentsContract.Root.COLUMN_ROOT_ID":"android.provider.DocumentsContract.Root.COLUMN_ROOT_ID\r\n","android.provider.ContactsContract.Contacts.CONTENT_VCARD_URI":"android.provider.ContactsContract.Contacts.CONTENT_VCARD_URI\r\n","Message box: outbox.":"留言箱：发件箱。\r\n","All shortcuts from the package (dynamic, manifest and/or pinned).\n               Only \"key\" information will be provided, as defined in\n               ":"包中的所有快捷方式（动态、清单和/或固定）。\r\n               将仅提供“关键”信息，如中所定义\r\n               \r\n","Key to extract the source type for this track\n            from the ":"提取此曲目的源类型的键\r\n            来自\r\n","The Intent describing the new activity to be launched on the task.":"描述要在任务上启动的新活动的意图。\r\n"," that track the user's\n            preferences for, or interactions with, the contact.":" 跟踪用户的\r\n            联系人的偏好或互动。\r\n","android.provider.Settings.Global.ALWAYS_FINISH_ACTIVITIES":"android.provider.Settings.Global.ALWAYS_FINISH_ACTIVITIES\r\n","NsdManager":"NsdManager\r\n","Display the user's times, e.":"显示用户的时间，e。\r\n","Constructs a new Builder with the default values as described above.":"如上所述，使用默认值构造一个新的 Builder。\r\n","Combines all of the format characteristics that have been set and return a new\n            ":"组合所有已设置的格式特征并返回一个新的\r\n            \r\n","The encoded data contained an error.":"编码数据包含错误。\r\n","android.graphics.Paint.Cap":"android.graphics.Paint.Cap\r\n","android.provider.Contacts.PresenceColumns":"android.provider.Contacts.PresenceColumns\r\n","This method is called when the offline session encounters an unexpected error.":"当离线会话遇到意外错误时调用此方法。\r\n","MediaCodec class can be used to access low-level media codecs, i.":"MediaCodec 类可用于访问低级媒体编解码器，即。\r\n","array of checksums.":"校验和数组。\r\n","android.hardware.camera2.CameraOfflineSession.CameraOfflineSessionCallback.onIdle(android.hardware.camera2.CameraOfflineSession)":"android.hardware.camera2.CameraOfflineSession.CameraOfflineSessionCallback.onIdle(android.hardware.camera2.CameraOfflineSession)\r\n"," with default options.":" 使用默认选项。\r\n","android.provider.CalendarContract.EventsColumns.RDATE":"android.provider.CalendarContract.EventsColumns.RDATE\r\n","android.media.audiofx.DynamicsProcessing.MbcBand.getExpanderRatio()":"android.media.audiofx.DynamicsProcessing.MbcBand.getExpanderRatio()\r\n","android.app.admin.DevicePolicyManager.InstallSystemUpdateCallback.onInstallUpdateError(int, java.lang.String)":"android.app.admin.DevicePolicyManager.InstallSystemUpdateCallback.onInstallUpdateError(int, java.lang.String)\r\n","android.provider.Browser.SearchColumns.SEARCH":"android.provider.Browser.SearchColumns.SEARCH\r\n","android.app.ApplicationErrorReport.CrashInfo.writeToParcel(android.os.Parcel, int)":"android.app.ApplicationErrorReport.CrashInfo.writeToParcel(android.os.Parcel, int)\r\n","Returns true if the codec cannot proceed further,\n            but can be recovered by stopping, configuring,\n            and starting again.":"如果编解码器无法继续，则返回 true，\r\n            但可以通过停止、配置、\r\n            并重新开始。\r\n","ReportSystemUsageRequest.Builder":"ReportSystemUsageRequest.Builder\r\n","android.provider.Telephony.Sms.getDefaultSmsPackage(android.content.Context)":"android.provider.Telephony.Sms.getDefaultSmsPackage(android.content.Context)\r\n","android.content.pm.PackageInstaller.SessionParams.setRequireUserAction(int)":"android.content.pm.PackageInstaller.SessionParams.setRequireUserAction(int)\r\n","The byte offset of the seek point.":"查找点的字节偏移量。\r\n","Sensor placement.":"传感器放置。\r\n","mediaPlayback":"媒体播放\r\n","the sync state or null if there is no sync state associated with the account":"同步状态，如果没有与帐户关联的同步状态，则为 null\r\n","The human readable label.":"人类可读的标签。\r\n","android.media.audiofx.Equalizer.Settings":"android.media.audiofx.Equalizer.Settings\r\n","Called on a thread policy violation.":"在违反线程策略时调用。\r\n","android.media.MediaPlayer.OnDrmConfigHelper":"android.media.MediaPlayer.OnDrmConfigHelper\r\n","Maximum amount of time in milliseconds to hold a wakelock while waiting for mobile\n            data connectivity to be established after a disconnect from Wi-Fi.":"等待移动时保持唤醒锁的最长时间（以毫秒为单位）\r\n            与 Wi-Fi 断开连接后要建立的数据连接。\r\n","android.provider.FontsContract.FontInfo.isItalic()":"android.provider.FontsContract.FontInfo.isItalic()\r\n","android.provider.ContactsContract.RawContacts.getLocalAccountName(android.content.Context)":"android.provider.ContactsContract.RawContacts.getLocalAccountName(android.content.Context)\r\n","Exactly one value [1].":"正好一个值 [1]。\r\n","A Context of the application package implementing this class.":"实现此类的应用程序包的上下文。\r\n","The ID of the TV input bound to this view.":"绑定到此视图的电视输入 ID。\r\n","Release an SPI that was previously reserved.":"释放先前保留的 SPI。\r\n","android.media.tv.TvContract.Channels.VIDEO_RESOLUTION_ED":"android.media.tv.TvContract.Channels.VIDEO_RESOLUTION_ED\r\n","android.content.pm.PackageManager.Property.getName()":"android.content.pm.PackageManager.Property.getName()\r\n","android.provider.Contacts.PresenceColumns.IM_PROTOCOL":"android.provider.Contacts.PresenceColumns.IM_PROTOCOL\r\n","\n            that involve contacts.":"\r\n            涉及联系人。\r\n","android.media.MediaParser.TrackData.mediaFormat":"android.media.MediaParser.TrackData.mediaFormat\r\n","Intent to send when the user invokes this action.":"意图在用户调用此操作时发送。\r\n"," to indicate that data channel received incorrect\n             settings or credentials to connect to the server":" 表示接收到的数据通道不正确\r\n             连接到服务器的设置或凭据\r\n","android.provider.ContactsContract.Intents.ATTACH_IMAGE":"android.provider.ContactsContract.Intents.ATTACH_IMAGE\r\n","A prompt to display on the screen. Must not be null.":"提示显示在屏幕上。不得为空。\r\n"," that describes a specific contact to feature\n                       in this dialog. A work lookup uri is supported here,\n                       see ":" 描述特定联系人的功能\r\n                       在这个对话框中。此处支持工作查找 uri，\r\n                       看\r\n","android.provider.ContactsContract.DataUsageFeedback":"android.provider.ContactsContract.DataUsageFeedback\r\n","The channel name that is displayed to the user.":"显示给用户的频道名称。\r\n","An integer representing the precedence, 0 being the lowest.":"表示优先级的整数，0 为最低。\r\n","Full access to modify the calendar, but not the access control\n            settings":"完全访问修改日历，但不是访问控制\r\n            设置\r\n","Called whenever the properties of an input device have changed since they\n            were last queried.":"每当输入设备的属性发生变化时调用\r\n            被最后查询。\r\n","ParcelFileDescriptor#detachFd()":"包裹文件描述符#detachFd()\r\n","Transforms the specified color from the source color space\n            to a color in the destination color space.":"从源颜色空间转换指定颜色\r\n            到目标颜色空间中的颜色。\r\n","Returns the preference value if it exists, or defValue.  Throws\n            ClassCastException if there is a preference with this name that is not\n            an int.":"返回首选项值（如果存在）或 defValue。投掷\r\n            ClassCastException 如果存在具有此名称的首选项不是\r\n            一个整数。\r\n","Called as the last step of the Activity saving its instance state.":"作为 Activity 保存其实例状态的最后一步调用。\r\n","android.media.FaceDetector.Face.eyesDistance()":"android.media.FaceDetector.Face.eyesDistance()\r\n","The MIME type of CONTENT_URI providing a directory of SIM records.":"CONTENT_URI 的 MIME 类型提供 SIM 记录目录。\r\n","Optional listener supplied to ":"可选的侦听器提供给\r\n","android.hardware.camera2.CameraCaptureSession.CaptureCallback":"android.hardware.camera2.CameraCaptureSession.CaptureCallback\r\n","This is a request to pin app widget.":"这是固定应用小部件的请求。\r\n","The name of the package that has the shortcuts.":"具有快捷方式的包的名称。\r\n","The content:// style URI for this table, which requests a directory of raw contact rows\n            matching the selection criteria.":"此表的 content:// 样式 URI，它请求原始联系人行的目录\r\n            匹配选择标准。\r\n","android.provider.Contacts.Phones.getDisplayLabel(android.content.Context, int, java.lang.CharSequence)":"android.provider.Contacts.Phones.getDisplayLabel(android.content.Context, int, java.lang.CharSequence)\r\n","android.provider.Contacts.ContactMethods.CONTENT_URI":"android.provider.Contacts.ContactMethods.CONTENT_URI\r\n","The URI of the requested media.":"请求媒体的 URI。\r\n","The OnParameterChangeListener interface defines a method called by the BassBoost when a\n            parameter value has changed.":"OnParameterChangeListener 接口定义了 BassBoost 在\r\n            参数值已更改。\r\n","android.provider.Settings.Secure.BLUETOOTH_ON":"android.provider.Settings.Secure.BLUETOOTH_ON\r\n","android.media.AudioTrack.OnCodecFormatChangedListener.onCodecFormatChanged(android.media.AudioTrack, android.media.AudioMetadataReadMap)":"android.media.AudioTrack.OnCodecFormatChangedListener.onCodecFormatChanged(android.media.AudioTrack, android.media.AudioMetadataReadMap)\r\n","the loader that completed the load":"完成加载的loader\r\n","android.content.ComponentCallbacks2#onTrimMemory(int)\n            ComponentCallbacks2.onTrimMemory(int)":"android.content.ComponentCallbacks2#onTrimMemory(int)\r\n            ComponentCallbacks2.onTrimMemory(int)\r\n","Flag indicating that this root can be ejected.":"指示可以弹出此根的标志。\r\n","android.media.MediaDrm.MetricsConstants.PROVIDE_KEY_RESPONSE_ERROR_LIST":"android.media.MediaDrm.MetricsConstants.PROVIDE_KEY_RESPONSE_ERROR_LIST\r\n","Constants related to a root of documents, including ":"与文档根相关的常量，包括\r\n","android.provider.Settings.Secure.RTT_CALLING_MODE":"android.provider.Settings.Secure.RTT_CALLING_MODE\r\n","android.media.tv.TvView.TvInputCallback.onContentBlocked(java.lang.String, android.media.tv.TvContentRating)":"android.media.tv.TvView.TvInputCallback.onContentBlocked(java.lang.String, android.media.tv.TvContentRating)\r\n","android.net.UrlQuerySanitizer.ValueSanitizer":"android.net.UrlQuerySanitizer.ValueSanitizer\r\n","the name of the package which should be allowed to access the blob.":"允许访问 blob 的包的名称。\r\n","android.provider.ContactsContract.SyncState":"android.provider.ContactsContract.SyncState\r\n","Gets the size of the blob file that was written to the session so far.":"获取到目前为止写入会话的 blob 文件的大小。\r\n","Builder for ProviderProperties.":"ProviderProperties 的生成器。\r\n","Whether lock pattern will vibrate as user enters (0 = false, 1 =\n            true)":"锁定图案是否会在用户输入时振动（0 = false，1 =\r\n            真的）\r\n","} fails.":"} 失败。\r\n","#DIRECTORY_MOVIES":"#DIRECTORY_MOVIES\r\n","android.provider.Browser.SearchColumns.DATE":"android.provider.Browser.SearchColumns.DATE\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV411PackedPlanar":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV411PackedPlanar\r\n","android.provider.Settings.Global.NETWORK_PREFERENCE":"android.provider.Settings.Global.NETWORK_PREFERENCE\r\n","Represents the Quality of Service (QoS) settings for a Bluetooth HID Device application.":"表示蓝牙 HID 设备应用程序的服务质量 (QoS) 设置。\r\n","android.graphics.ColorSpace.Model.getComponentCount()":"android.graphics.ColorSpace.Model.getComponentCount()\r\n","android.app.FragmentManager.BackStackEntry":"android.app.FragmentManager.BackStackEntry\r\n","This function returns the result of linearly interpolating the start and\n            end Rect values, with ":"此函数返回线性插值开始和的结果\r\n            结束 Rect 值，与\r\n","android.provider.CalendarContract.CalendarCache.URI":"android.provider.CalendarContract.CalendarCache.URI\r\n","android.accessibilityservice.AccessibilityService.TakeScreenshotCallback.onFailure(int)":"android.accessibilityservice.AccessibilityService.TakeScreenshotCallback.onFailure(int)\r\n","android.provider.Settings.Secure.WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS":"android.provider.Settings.Secure.WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS\r\n","android.content.ContentResolver.MimeTypeInfo.getLabel()":"android.content.ContentResolver.MimeTypeInfo.getLabel()\r\n","android.provider.ContactsContract.Directory.PHOTO_SUPPORT_FULL_SIZE_ONLY":"android.provider.ContactsContract.Directory.PHOTO_SUPPORT_FULL_SIZE_ONLY\r\n","A bundle extra of the result of ":"一束额外的结果\r\n","android.media.MediaExtractor.CasInfo":"android.media.MediaExtractor.CasInfo\r\n","android.hardware.biometrics.BiometricPrompt.CryptoObject.getIdentityCredential()":"android.hardware.biometrics.BiometricPrompt.CryptoObject.getIdentityCredential()\r\n","android.media.MediaRouter2.RoutingController.getVolumeMax()":"android.media.MediaRouter2.RoutingController.getVolumeMax()\r\n","android.provider.Telephony.BaseMmsColumns.TEXT_ONLY":"android.provider.Telephony.BaseMmsColumns.TEXT_ONLY\r\n","android.content.ClipData.Item.coerceToStyledText(android.content.Context)":"android.content.ClipData.Item.coerceToStyledText(android.content.Context)\r\n","Activity#onCreate super.onCreate()":"活动#onCreate super.onCreate()\r\n","Interface for controlling media playback on a session.":"用于控制会话中媒体播放的界面。\r\n","android.content.pm.PackageManager.Property.isBoolean()":"android.content.pm.PackageManager.Property.isBoolean()\r\n","android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureBufferLost(android.hardware.camera2.CameraCaptureSession, android.hardware.camera2.CaptureRequest, android.view.Surface, long)":"android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureBufferLost（android.hardware.camera2.CameraCaptureSession，android.hardware.camera2.CaptureRequest，android.view.Surface，长）\r\n","The URI of the new channel.":"新频道的 URI。\r\n","android.media.Session2CommandGroup.Builder.build()":"android.media.Session2CommandGroup.Builder.build()\r\n","#MEDIA_INFO_BAD_INTERLEAVING":"#MEDIA_INFO_BAD_INTERLEAVING\r\n","Setting to record the visibility of input method selector":"设置记录输入法选择器的可见性\r\n","Gets the supported video frame sizes that can be used by\n            MediaRecorder.":"获取可以使用的支持的视频帧大小\r\n            媒体记录器。\r\n","reverb level in millibels. The valid range is [-9000, 2000].":"以毫贝为单位的混响级别。有效范围是 [-9000, 2000]。\r\n","android.provider.ContactsContract.SimAccount.getAccountName()":"android.provider.ContactsContract.SimAccount.getAccountName()\r\n","android.location.GnssMeasurementsEvent.Callback.STATUS_LOCATION_DISABLED":"android.location.GnssMeasurementsEvent.Callback.STATUS_LOCATION_DISABLED\r\n","android.hardware.Camera.ShutterCallback.onShutter()":"android.hardware.Camera.ShutterCallback.onShutter()\r\n","android.media.AudioFocusRequest.Builder.build()":"android.media.AudioFocusRequest.Builder.build()\r\n"," providing a directory of\n            settings.":" 提供一个目录\r\n            设置。\r\n","android.app.people.ConversationStatus.Builder.ConversationStatus$Builder(java.lang.String, int)":"android.app.people.ConversationStatus.Builder.ConversationStatus$Builder(java.lang.String, int)\r\n","the SIP server domain; if the network address\n                 is different from the domain, use ":"SIP 服务器域；如果网络地址\r\n                 与域不同，使用\r\n","android.media.tv.TvContract.WatchNextPrograms.CONTENT_TYPE":"android.media.tv.TvContract.WatchNextPrograms.CONTENT_TYPE\r\n","android.app.VoiceInteractor.CompleteVoiceRequest":"android.app.VoiceInteractor.CompleteVoiceRequest\r\n","Flag indicating that a document can be renamed.":"指示文档可以重命名的标志。\r\n","true if Eq stage will be used, false otherwise.":"如果将使用 Eq 阶段，则为 true，否则为 false。\r\n","Subclasses must call this method when they finish committing updates to notify all\n            observers.":"子类完成提交更新时必须调用此方法通知所有\r\n            观察员。\r\n","android.app.usage.NetworkStatsManager.UsageCallback":"android.app.usage.NetworkStatsManager.UsageCallback\r\n"," this builder represents.":" 这个建设者代表。\r\n","android.inputmethodservice.InputMethodService.InputMethodImpl.restartInput(android.view.inputmethod.InputConnection, android.view.inputmethod.EditorInfo)":"android.inputmethodservice.InputMethodService.InputMethodImpl.restartInput(android.view.inputmethod.InputConnection, android.view.inputmethod.EditorInfo)\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatL8":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatL8\r\n","An icon that represents the current state of this task.":"表示此任务当前状态的图标。\r\n","#FILL_IN_DATA":"#FILL_IN_DATA\r\n","android.media.session.MediaSession.Callback.onSkipToNext()":"android.media.session.MediaSession.Callback.onSkipToNext()\r\n","android.app.Notification.BubbleMetadata.getDesiredHeight()":"android.app.Notification.BubbleMetadata.getDesiredHeight()\r\n","android.media.MediaDrm.ErrorCodes.ERROR_LICENSE_RELEASE":"android.media.MediaDrm.ErrorCodes.ERROR_LICENSE_RELEASE\r\n","Returns the output hardware graphic buffer, or null if this frame is empty.":"返回输出硬件图形缓冲区，如果此帧为空，则返回 null。\r\n","android.media.MediaDrm.ErrorCodes.ERROR_UNKNOWN":"android.media.MediaDrm.ErrorCodes.ERROR_UNKNOWN\r\n","android.provider.CallLog.Locations.CONTENT_ITEM_TYPE":"android.provider.CallLog.Locations.CONTENT_ITEM_TYPE\r\n","android.media.audiofx.Equalizer.OnParameterChangeListener":"android.media.audiofx.Equalizer.OnParameterChangeListener\r\n"," HashMap to pass the\n            ":" HashMap 来传递\r\n            \r\n","android.provider.ContactsContract.SettingsColumns.UNGROUPED_VISIBLE":"android.provider.ContactsContract.SettingsColumns.UNGROUPED_VISIBLE\r\n","android.content.res.Resources.Theme.getChangingConfigurations()":"android.content.res.Resources.Theme.getChangingConfigurations()\r\n","delivery-time":"交货时间\r\n","Returns true if this node has currently been selected by the user.":"如果用户当前已选择此节点，则返回 true。\r\n","android.media.audiofx.EnvironmentalReverb.setRoomHFLevel(short)":"android.media.audiofx.EnvironmentalReverb.setRoomHFLevel（短）\r\n","android.provider.ContactsContract.PhoneticNameStyle.KOREAN":"android.provider.ContactsContract.PhoneticNameStyle.KOREAN\r\n","Indicates whether there is a transmission error in the thread.":"表示线程中是否存在传输错误。\r\n","Constants for the user's profile data, which is represented as a single contact on\n            the device that represents the user.":"用户个人资料数据的常量，表示为\r\n            代表用户的设备。\r\n","android.provider.CalendarContract.CalendarColumns.ALLOWED_REMINDERS":"android.provider.CalendarContract.CalendarColumns.ALLOWED_REMINDERS\r\n","Gets the page width in points (1/72\").":"获取以磅为单位的页面宽度 (1/72\")。\r\n","Get Session Id.":"获取会话 ID。\r\n","\n                       output stream.":"\r\n                       输出流。\r\n","Opens a seekable ":"打开一个可搜索的\r\n","Construct a builder with existing MeasuredText.":"使用现有的 MeasuredText 构建构建器。\r\n","android.graphics.fonts.Font.Builder.Font$Builder(android.os.ParcelFileDescriptor)":"android.graphics.fonts.Font.Builder.Font$Builder(android.os.ParcelFileDescriptor)\r\n","Create a new MediaItem for use in browsing media.":"创建一个新的 MediaItem 用于浏览媒体。\r\n","A haptic effect that simulates quick downwards movement with gravity.":"模拟重力作用下快速向下运动的触觉效果。\r\n","Returns the x-axis offset of the phase center from the origin of the Android sensor\n            coordinate system, in millimeters.":"返回相位中心相对于 Android 传感器原点的 x 轴偏移量\r\n            坐标系，以毫米为单位。\r\n","android.media.session.MediaSession.QueueItem":"android.media.session.MediaSession.QueueItem\r\n","android.graphics.drawable.Drawable.Callback.unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)":"android.graphics.drawable.Drawable.Callback.unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)\r\n","The action that was originally sent in the\n                          ":"最初发送的动作\r\n                          \r\n","android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentCreated(android.app.FragmentManager, android.app.Fragment, android.os.Bundle)":"android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentCreated(android.app.FragmentManager, android.app.Fragment, android.os.Bundle)\r\n","Preview version of the icon, for the preview popup":"图标的预览版本，用于预览弹出窗口\r\n"," for opened device, or null if opening failed":" 对于打开的设备，如果打开失败则为 null\r\n","Describes the content of a view so that a autofill service can fill in the appropriate\n            data.":"描述视图的内容，以便自动填充服务可以填写适当的内容\r\n            数据。\r\n","session Id of the session.":"会话的会话 ID。\r\n","The default print job attributes or ":"默认打印作业属性或\r\n","Returns the window of the activity.  The caller needs to take\n            care of adding this window to a view hierarchy, and likewise dealing\n            with removing the old window if the activity has changed.":"返回活动的窗口。来电者需要接\r\n            关心将此窗口添加到视图层次结构，同样处理\r\n            如果活动已更改，则删除旧窗口。\r\n","android.provider.Settings.System.WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON":"android.provider.Settings.System.WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON\r\n","SessionParams#setSize(long)":"SessionParams#setSize（长）\r\n","Callbacks for package changes to this and related managed profiles.":"对此和相关托管配置文件的包更改的回调。\r\n","android.os.AsyncTask.Status":"android.os.AsyncTask.Status\r\n","android.media.session.MediaController.Callback.onExtrasChanged(android.os.Bundle)":"android.media.session.MediaController.Callback.onExtrasChanged(android.os.Bundle)\r\n","Called whenever the properties of a logical ":"每当一个逻辑的属性被调用\r\n","Returns the ID associated with this view, as per ":"返回与此视图关联的 ID，按照\r\n","android.app.assist.AssistStructure.ViewNode.isAccessibilityFocused()":"android.app.assist.AssistStructure.ViewNode.isAccessibilityFocused()\r\n","This indicates that the requested key was not found when trying to\n            perform a decrypt operation.":"这表明在尝试时未找到请求的密钥\r\n            执行解密操作。\r\n","android.provider.Telephony.TextBasedSmsColumns.STATUS":"android.provider.Telephony.TextBasedSmsColumns.STATUS\r\n","the amount of data (in bytes) in the buffer.":"缓冲区中的数据量（以字节为单位）。\r\n","android.provider.UserDictionary.Words.CONTENT_ITEM_TYPE":"android.provider.UserDictionary.Words.CONTENT_ITEM_TYPE\r\n","The bottom margin.":"底部边距。\r\n","total size of the file being written, used to\n                               preallocate the underlying disk space, or -1 if unknown.\n                               The system may clear various caches as needed to allocate\n                               this space.":"正在写入的文件的总大小，用于\r\n                               预分配底层磁盘空间，如果未知则为 -1。\r\n                               系统可能会根据需要清除各种缓存以分配\r\n                               这个空间。\r\n","Set the reason for installing this package.":"设置安装此包的原因。\r\n","Fragment#onDetach()":"片段#onDetach()\r\n"," is thrown if a camera device could not\n            be queried or opened by the ":"如果相机设备不能，则抛出\r\n            被查询或打开\r\n"," submitted to the camera device.":" 提交给相机设备。\r\n","android.hardware.SensorEvent.values":"android.hardware.SensorEvent.values\r\n","android.media.tv.TvContract.Channels.COLUMN_APP_LINK_ICON_URI":"android.media.tv.TvContract.Channels.COLUMN_APP_LINK_ICON_URI\r\n","android.provider.Contacts.Intents.SEARCH_SUGGESTION_CLICKED":"android.provider.Contacts.Intents.SEARCH_SUGGESTION_CLICKED\r\n","PlaybackState.CustomAction":"PlaybackState.CustomAction\r\n","android.media.AudioRecord.OnRoutingChangedListener":"android.media.AudioRecord.OnRoutingChangedListener\r\n","android.inputmethodservice.Keyboard.Row.defaultHorizontalGap":"android.inputmethodservice.Keyboard.Row.defaultHorizo​​ntalGap\r\n","android.net.sip.SipSession.State.OUTGOING_CALL_CANCELING":"android.net.sip.SipSession.State.OUTGOING_CALL_CANCELING\r\n","true if Mbc stage is in use;":"如果正在使用 Mbc 阶段，则为真；\r\n","android.app.appsearch.SetSchemaResponse.MigrationFailure.getDocumentId()":"android.app.appsearch.SetSchemaResponse.MigrationFailure.getDocumentId()\r\n","defined in ":"定义于\r\n","android.app.admin.SystemUpdatePolicy.ValidationFailedException":"android.app.admin.SystemUpdatePolicy.ValidationFailedException\r\n"," if the session's playback is active.\n                                  ":" 如果会话的播放处于活动状态。\r\n                                  \r\n","Sets the inputGain value in decibels (dB) for the channel indicated by channelIndex.":"为 channelIndex 指示的通道设置以分贝 (dB) 为单位的 inputGain 值。\r\n","#provideProvisionResponse":"#provideProvisionResponse\r\n","When the number of open networks exceeds this number, the\n            least-recently-used excess networks will be removed.":"当打开的网络数量超过这个数量时，\r\n            最近最少使用的多余网络将被删除。\r\n","android.hardware.camera2.CameraDevice.createCaptureSession(android.hardware.camera2.params.SessionConfiguration)":"android.hardware.camera2.CameraDevice.createCaptureSession(android.hardware.camera2.params.SessionConfiguration)\r\n","android.app.usage.NetworkStats.Bucket.getRoaming()":"android.app.usage.NetworkStats.Bucket.getRoaming()\r\n","android.provider.Telephony.BaseMmsColumns.EXPIRY":"android.provider.Telephony.BaseMmsColumns.EXPIRY\r\n","android.media.MediaCodec.BufferInfo":"android.media.MediaCodec.BufferInfo\r\n","Listener class used for receiving the results of ":"用于接收结果的侦听器类\r\n","The namespace of the document which failed to be migrated.":"迁移失败文档的命名空间。\r\n","android.provider.ContactsContract.DataUsageFeedback.FEEDBACK_URI":"android.provider.ContactsContract.DataUsageFeedback.FEEDBACK_URI\r\n","The value of the field as a ":"该字段的值作为\r\n","android.media.MediaDrm.MetricsConstants.CLOSE_SESSION_ERROR_LIST":"android.media.MediaDrm.MetricsConstants.CLOSE_SESSION_ERROR_LIST\r\n"," constants)\n            that best describes this Notification.":" 常数）\r\n            最能描述此通知。\r\n","Passing this as a minutes value will use the default reminder\n            minutes.":"将其作为分钟值传递将使用默认提醒\r\n            分钟。\r\n","android.print.PrintAttributes.MediaSize.isPortrait()":"android.print.PrintAttributes.MediaSize.isPortrait()\r\n","android.net.sip.SipSession.State.INCOMING_CALL_ANSWERING":"android.net.sip.SipSession.State.INCOMING_CALL_ANSWERING\r\n","android.media.tv.TvContract.Programs.COLUMN_END_TIME_UTC_MILLIS":"android.media.tv.TvContract.Programs.COLUMN_END_TIME_UTC_MILLIS\r\n","Requested Report Type.":"请求的报告类型。\r\n","The Network Service Discovery Manager class provides the API to discover services\n            on a network.":"Network Service Discovery Manager 类提供 API 来发现服务\r\n            在网络上。\r\n"," to force creating a new\n            contact if no matching contact found.":" 强制创建一个新的\r\n            如果找不到匹配的联系人，请联系。\r\n","The priority of the message.":"消息的优先级。\r\n"," contains its corresponding azimuth angle\n                     expressed in degrees, where 0 is the direction the listener faces, 180 is behind\n                     the listener, and -90 is to her/his left,</li>\n                 <li>the element at index ":" 包含其对应的方位角\r\n                     以度数表示，其中 0 是听者面向的方向，180 是后面\r\n                     听众，-90 在她/他的左边，</li>\r\n                 <li>索引处的元素\r\n","Convenience function to read all of the current\n            configuration-related settings into a\n            ":"读取当前所有内容的便捷功能\r\n            配置相关的设置成\r\n            \r\n","\n                              family of functions.":"\r\n                              函数族。\r\n","the session instance that failed during configuration":"配置期间失败的会话实例\r\n","URI used for getting all directories from primary and managed profile.":"用于从主要配置文件和托管配置文件获取所有目录的 URI。\r\n","android.provider.DocumentsContract.Root.COLUMN_TITLE":"android.provider.DocumentsContract.Root.COLUMN_TITLE\r\n","true if auto-exposure lock is supported.":"如果支持自动曝光锁定，则为真。\r\n","android.app.Service.setForeground(boolean)":"android.app.Service.setForeground（布尔值）\r\n","Called when this app noted an app-op for its own package,":"当这个应用程序注意到它自己的包的应用程序操作时调用，\r\n","android.provider.Settings.System.putString(android.content.ContentResolver, java.lang.String, java.lang.String)":"android.provider.Settings.System.putString（android.content.ContentResolver，java.lang.String，java.lang.String）\r\n","The start time of this TV program, in milliseconds since the epoch.":"此电视节目的开始时间，自纪元以来的毫秒数。\r\n","android.media.tv.TvInputService.Session.onSetSurface(android.view.Surface)":"android.media.tv.TvInputService.Session.onSetSurface(android.view.Surface)\r\n","android.media.RemoteControlClient.MetadataEditor":"android.media.RemoteControlClient.MetadataEditor\r\n","TvInputInfo containing information about this TV input.":"TvInputInfo 包含有关此电视输入的信息。\r\n"," for this item.":" 对于这个项目。\r\n","Get the mode of the session as set in the constructor of the ":"获取在构造函数中设置的会话模式\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format16bitRGB565":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format16bitRGB565\r\n"," broadcast when\n            one or more AppWidget instances have been deleted.":" 播出时间\r\n            一个或多个 AppWidget 实例已被删除。\r\n","android.hardware.camera2.CameraOfflineSession.CameraOfflineSessionCallback.onError(android.hardware.camera2.CameraOfflineSession, int)":"android.hardware.camera2.CameraOfflineSession.CameraOfflineSessionCallback.onError(android.hardware.camera2.CameraOfflineSession, int)\r\n","If set, decode methods will always return a mutable Bitmap instead of\n            an immutable one.":"如果设置，解码方法将始终返回可变位图而不是\r\n            一个不变的。\r\n","Request that the player prepare playback for a specific ":"请求播放器为特定的播放器准备播放\r\n",", set this bit when\n            this call rings with a low ring volume.":", 设置此位时\r\n            此呼叫以较低的响铃音量响铃。\r\n","absolute pathname to the file. The file should be world-readable, so that it can\n            be managed by the Downloads App and any other app that is used to read it (for example,\n            Gallery app to display the file, if the file contents represent a video/image).":"文件的绝对路径名。该文件应该是世界可读的，这样它就可以\r\n            由下载应用程序和用于阅读它的任何其他应用程序管理（例如，\r\n            图库应用程序显示文件，如果文件内容代表视频/图像）。\r\n","\n            or since ":"\r\n            或者自从\r\n"," for referencing multiple ":" 用于引用多个\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityPreCreated(android.app.Activity, android.os.Bundle)":"android.app.Application.ActivityLifecycleCallbacks.onActivityPreCreated(android.app.Activity, android.os.Bundle)\r\n","android.preference.PreferenceManager.OnActivityDestroyListener":"android.preference.PreferenceManager.OnActivityDestroyListener\r\n","If the thread is archived":"如果线程已存档\r\n","android.appwidget.AppWidgetManager.EXTRA_CUSTOM_EXTRAS":"android.appwidget.AppWidgetManager.EXTRA_CUSTOM_EXTRAS\r\n","android.graphics.fonts.Font.Builder.build()":"android.graphics.fonts.Font.Builder.build()\r\n","android.media.MediaCas.Session.processEcm(byte[], int, int)":"android.media.MediaCas.Session.processEcm(byte[], int, int)\r\n","The namespace of the document that was used (e.g. from ":"使用的文档的名称空间（例如来自\r\n","android.media.tv.TvInputService.HardwareSession.TvInputService$HardwareSession(android.content.Context)":"android.media.tv.TvInputService.HardwareSession.TvInputService$HardwareSession(android.content.Context)\r\n","android.provider.CalendarContract.EventsColumns.SYNC_DATA6":"android.provider.CalendarContract.EventsColumns.SYNC_DATA6\r\n","android.database.AbstractCursor.checkPosition()":"android.database.AbstractCursor.checkPosition()\r\n","android.hardware.Camera.Parameters.getJpegThumbnailQuality()":"android.hardware.Camera.Parameters.getJpegThumbnailQuality()\r\n","Default access is controlled by the server and will be treated as\n            public on the device.":"默认访问由服务器控制，将被视为\r\n            在设备上公开。\r\n"," to indicate the visual voicemail is not\n            yet configured on this device.":" 指示可视语音邮件不是\r\n            尚未在此设备上配置。\r\n","android.provider.Contacts.SettingsColumns":"android.provider.Contacts.SettingsColumns\r\n","Extra: mapped to a boolean value that is ":"额外：映射到一个布尔值是\r\n","the width of the texture in pixels.":"纹理的宽度（以像素为单位）。\r\n","Data#_ID":"数据#_ID\r\n","android.media.MediaCodec.MetricsConstants.SECURE":"android.media.MediaCodec.MetricsConstants.SECURE\r\n","android.media.MediaRouter2.RoutingController.getVolumeHandling()":"android.media.MediaRouter2.RoutingController.getVolumeHandling()\r\n","#fetchFonts":"#fetchFonts\r\n","android.content.Intent#FLAG_ACTIVITY_NEW_TASK":"android.content.Intent#FLAG_ACTIVITY_NEW_TASK\r\n","android.media.tv.TvContract.RecordedPrograms.CONTENT_URI":"android.media.tv.TvContract.RecordedPrograms.CONTENT_URI\r\n","android.app.AlertDialog.Builder.show()":"android.app.AlertDialog.Builder.show()\r\n","android.provider.ContactsContract.StreamItemsColumns.RES_LABEL":"android.provider.ContactsContract.StreamItemsColumns.RES_LABEL\r\n","android.app.usage.NetworkStats.Bucket":"android.app.usage.NetworkStats.Bucket\r\n","The bundle of service-specific arguments sent to the media\n                       browser service. The contents of this bundle may affect the\n                       information returned when browsing.":"发送到媒体的特定于服务的参数包\r\n                       浏览器服务。此捆绑包的内容可能会影响\r\n                       浏览时返回的信息。\r\n","android.provider.VoicemailContract.Status.NOTIFICATION_CHANNEL_STATE_MESSAGE_WAITING":"android.provider.VoicemailContract.Status.NOTIFICATION_CHANNEL_STATE_MESSAGE_WAITING\r\n","android.provider.CalendarContract.CalendarColumns.OWNER_ACCOUNT":"android.provider.CalendarContract.CalendarColumns.OWNER_ACCOUNT\r\n","GnssMeasurementRequest":"Gnss测量请求\r\n","Represents a query passed to ":"表示传递给的查询\r\n","The horizontal resolution in DPI (dots per inch).":"DPI 中的水平分辨率（每英寸点数）。\r\n","android.animation.FloatArrayEvaluator":"android.animation.FloatArrayEvaluator\r\n","android.app.DatePickerDialog.OnDateSetListener":"android.app.DatePickerDialog.OnDateSetListener\r\n","Builds the instance.":"构建实例。\r\n","value in decibels (dB) of level change applied to the audio before\n            processing. A value of 0 dB means no change.":"之前应用于音频的电平变化的分贝值 (dB)\r\n            加工。值 0 dB 表示没有变化。\r\n","android.provider.ContactsContract.ContactStatusColumns.CONTACT_PRESENCE":"android.provider.ContactsContract.ContactStatusColumns.CONTACT_PRESENCE\r\n","android.content.pm.PackageManager.Property.isFloat()":"android.content.pm.PackageManager.Property.isFloat()\r\n","Used to control, query, and listen for changes to the soft keyboard show mode.":"用于控制、查询、监听软键盘显示模式的变化。\r\n","Override to handle requests to begin playback from a search query.":"覆盖以处理从搜索查询开始播放的请求。\r\n","room level in millibels. The valid range is [-9000, 0].":"以毫贝为单位的房间级别。有效范围是 [-9000, 0]。\r\n","android.hardware.Camera.Parameters.setAutoWhiteBalanceLock(boolean)":"android.hardware.Camera.Parameters.setAutoWhiteBalanceLock（布尔值）\r\n","A class that supports querying the video capabilities of a codec.":"一个支持查询编解码器视频功能的类。\r\n","android.app.assist.AssistStructure.ViewNode.getTextBackgroundColor()":"android.app.assist.AssistStructure.ViewNode.getTextBackgroundColor()\r\n","gets the gain applied to the signal AFTER compression. -or- sets the gain to be applied to the siganl AFTER the compression.":"获取压缩后应用于信号的增益。 - 或 - 设置压缩后应用于信号的增益。\r\n","Used to control and query the state of display magnification.":"用于控制和查询显示放大的状态。\r\n","Returns the left edge of the window, in pixels, relative to the left\n            edge of the screen.":"返回窗口的左边缘，以像素为单位，相对于左边\r\n            屏幕的边缘。\r\n","android.hardware.Camera.Parameters.setRecordingHint(boolean)":"android.hardware.Camera.Parameters.setRecordingHint（布尔值）\r\n","android.os.Debug.MemoryInfo.getMemoryStats()":"android.os.Debug.MemoryInfo.getMemoryStats()\r\n","android.app.appsearch.GetByDocumentIdRequest.Builder":"android.app.appsearch.GetByDocumentIdRequest.Builder\r\n","android.app.ActivityManager.RunningServiceInfo.clientCount":"android.app.ActivityManager.RunningServiceInfo.clientCount\r\n","Extra used to indicate a list of specific MIME-types to exclude and not display in the\n            QuickContacts dialog.":"Extra 用于指示要排除且不显示在中的特定 MIME 类型的列表\r\n            快速联系人对话框。\r\n","the icon representing this route or null if no icon is available":"表示此路线的图标，如果没有可用图标，则为 null\r\n","Modify the ":"修改\r\n"," when the duration is unknown.":" 当持续时间未知时。\r\n","android.drm.DrmManagerClient.OnErrorListener.onError(android.drm.DrmManagerClient, android.drm.DrmErrorEvent)":"android.drm.DrmManagerClient.OnErrorListener.onError(android.drm.DrmManagerClient, android.drm.DrmErrorEvent)\r\n","android.content.pm.PackageInstaller.Session.removeSplit(java.lang.String)":"android.content.pm.PackageInstaller.Session.removeSplit(java.lang.String)\r\n"," indicates that all pages that were\n                   requested as the ":" 表示所有页面是\r\n                   要求作为\r\n"," object specifies input to be collected from a user to be passed along with\n            an intent inside a ":" object 指定要从用户那里收集的输入，并与一起传递\r\n            一个意图\r\n","android.media.MediaSync.OnErrorListener.onError(android.media.MediaSync, int, int)":"android.media.MediaSync.OnErrorListener.onError(android.media.MediaSync, int, int)\r\n","Definitions for the metrics that are reported via the\n            ":"通过报告的指标的定义\r\n            \r\n","android.provider.ContactsContract.StreamItemsColumns":"android.provider.ContactsContract.StreamItemsColumns\r\n","android.database.DatabaseUtils.InsertHelper.close()":"android.database.DatabaseUtils.InsertHelper.close()\r\n","android.media.MediaMetadataRetriever#METADATA_KEY_CD_TRACK_NUMBER":"android.media.MediaMetadataRetriever#METADATA_KEY_CD_TRACK_NUMBER\r\n","android.app.Notification.WearableExtender.getDisplayIntent()":"android.app.Notification.WearableExtender.getDisplayIntent()\r\n","android.location.GnssAntennaInfo.PhaseCenterOffset.getXOffsetUncertaintyMm()":"android.location.GnssAntennaInfo.PhaseCenterOffset.getXOffsetUncertaintyMm()\r\n","android.os.Debug.InstructionCount.resetAndStart()":"android.os.Debug.InstructionCount.resetAndStart()\r\n"," that provides\n            all of the standard behavior for an input method.":" 提供\r\n            输入法的所有标准行为。\r\n","android.media.tv.TvContract.RecordedPrograms.COLUMN_BROADCAST_GENRE":"android.media.tv.TvContract.RecordedPrograms.COLUMN_BROADCAST_GENRE\r\n","android.graphics.drawable.ShapeDrawable.ShaderFactory.resize(int, int)":"android.graphics.drawable.ShapeDrawable.ShaderFactory.resize(int, int)\r\n","Resource ID of the name to display to the user to describe this route":"显示给用户以描述此路由的名称的资源 ID\r\n","First Android update.":"第一次安卓更新。\r\n","android.content.pm.LauncherApps.PinItemRequest.accept(android.os.Bundle)":"android.content.pm.LauncherApps.PinItemRequest.accept(android.os.Bundle)\r\n","android.content.pm.PackageInstaller.SessionInfo.isMultiPackage()":"android.content.pm.PackageInstaller.SessionInfo.isMultiPackage()\r\n","android.provider.ContactsContract.GroupsColumns.DELETED":"android.provider.ContactsContract.GroupsColumns.DELETED\r\n","android.app.Notification.Builder.createHeadsUpContentView()":"android.app.Notification.Builder.createHeadsUpContentView()\r\n","the spec for this slice.":"此切片的规范。\r\n","android.media.MediaRouter.UserRouteInfo.setName(int)":"android.media.MediaRouter.UserRouteInfo.setName(int)\r\n","Returns the visibility mode of this view, as per\n            ":"返回此视图的可见性模式，按照\r\n            \r\n","android.provider.Contacts.Groups.CONTENT_TYPE":"android.provider.Contacts.Groups.CONTENT_TYPE\r\n","android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentResumed(android.app.FragmentManager, android.app.Fragment)":"android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentResumed(android.app.FragmentManager, android.app.Fragment)\r\n","#allowSameSignatureAccess()":"#allowSameSignatureAccess()\r\n","android.app.Notification.WearableExtender.getGravity()":"android.app.Notification.WearableExtender.getGravity()\r\n","android.app.usage.UsageEvents.Event.getPackageName()":"android.app.usage.UsageEvents.Event.getPackageName()\r\n","A haptic effect that simulates slow upward movement against gravity.":"模拟逆重力缓慢向上运动的触觉效果。\r\n","The full URI to query, including a row ID (if a specific\n                       record is requested).":"要查询的完整 URI，包括行 ID（如果特定\r\n                       要求记录）。\r\n","android.media.MediaDrm.KeyRequest.REQUEST_TYPE_RENEWAL":"android.media.MediaDrm.KeyRequest.REQUEST_TYPE_RENEWAL\r\n","Builder for construction of DirectAction.":"用于构造 DirectAction 的生成器。\r\n","Reports the latest status of the GNSS Measurements sub-system.":"报告 GNSS 测量子系统的最新状态。\r\n","Updates this session's target duration for each cycle of work.":"为每个工作周期更新此会话的目标持续时间。\r\n","readLength":"读取长度\r\n","android.provider.Settings.Secure.LOCATION_MODE_BATTERY_SAVING":"android.provider.Settings.Secure.LOCATION_MODE_BATTERY_SAVING\r\n","In addition to supporting decryption of DASH Common Encrypted Media, the\n            MediaDrm APIs provide the ability to securely deliver session keys from\n            an operator's session key server to a client device, based on the factory-installed\n            root of trust, and then perform encrypt, decrypt, sign and verify operations\n            with the session key on arbitrary user data.":"除了支持解密 DASH Common Encrypted Media 外，\r\n            MediaDrm API 提供了从\r\n            运营商的会话密钥服务器到客户端设备，基于工厂安装\r\n            信任根，然后执行加密、解密、签名和验证操作\r\n            使用任意用户数据的会话密钥。\r\n","KeyguardManager#newKeyguardLock":"KeyguardManager#newKeyguardLock\r\n","Dolby Vision AV1 profile":"杜比视界 AV1 配置文件\r\n","MMSC URL.":"MMSC 网址。\r\n","android.media.VolumeShaper.Configuration.getDuration()":"android.media.VolumeShaper.Configuration.getDuration()\r\n","android.media.AudioFocusRequest.Builder":"android.media.AudioFocusRequest.Builder\r\n","android.provider.CallLog.Calls.COUNTRY_ISO":"android.provider.CallLog.Calls.COUNTRY_ISO\r\n","android.provider.Settings.Secure.getLong(android.content.ContentResolver, java.lang.String, long)":"android.provider.Settings.Secure.getLong（android.content.ContentResolver，java.lang.String，长）\r\n"," to set the center immediately":" 立即设置中心\r\n","The OnParameterChangeListener interface defines a method called by the Virtualizer when a\n            parameter value has changed.":"OnParameterChangeListener 接口定义了 Virtualizer 在\r\n            参数值已更改。\r\n","android.app.Notification.WearableExtender.getStartScrollBottom()":"android.app.Notification.WearableExtender.getStartScrollBottom()\r\n","An interface describing the callback for bugreport progress and status.":"描述错误报告进度和状态的回调的接口。\r\n","This method is called independently of the others in CaptureCallback,\n            when a capture sequence aborts before any ":"此方法在 CaptureCallback 中独立于其他方法调用，\r\n            当捕获序列在任何之前中止时\r\n","frequency band whose gain is requested. The numbering of the bands starts\n            from 0 and ends at (number of bands - 1).":"要求增益的频段。乐队的编号开始\r\n            从 0 到（波段数 - 1）结束。\r\n","android.media.MediaPlayer.MetricsConstants.MIME_TYPE_VIDEO":"android.media.MediaPlayer.MetricsConstants.MIME_TYPE_VIDEO\r\n","Is the ":"是个\r\n","Set this session to be the parent of a multi-package install.":"将此会话设置为多包安装的父级。\r\n","android.media.browse.MediaBrowser.MediaItem.isBrowsable()":"android.media.browse.MediaBrowser.MediaItem.isBrowsable()\r\n","Whether the clearing succeeded. Clearing fails for device administrator\n                             apps and protected system packages.":"清算是否成功。设备管理员清除失败\r\n                             应用程序和受保护的系统包。\r\n","android.location.LocationRequest.Builder.LocationRequest$Builder(long)":"android.location.LocationRequest.Builder.LocationRequest$Builder(长)\r\n","TvInputManager#VIDEO_UNAVAILABLE_REASON_WEAK_SIGNAL":"TvInputManager#VIDEO_UNAVAILABLE_REASON_WEAK_SIGNAL\r\n","android.provider.Contacts.Groups.GROUP_MY_CONTACTS":"android.provider.Contacts.Groups.GROUP_MY_CONTACTS\r\n","Key request type is initial license request.":"密钥请求类型是初始许可请求。\r\n","android.provider.Contacts.People.addToGroup(android.content.ContentResolver, long, java.lang.String)":"android.provider.Contacts.People.addToGroup（android.content.ContentResolver，长，java.lang.String）\r\n","android.provider.CalendarContract.CalendarColumns.CAL_ACCESS_READ":"android.provider.CalendarContract.CalendarColumns.CAL_ACCESS_READ\r\n","android.drm.DrmStore.ConstraintsColumns":"android.drm.DrmStore.ConstraintsColumns\r\n","Informs the application that this recording session has stopped recording and created a\n            new data entry in the ":"通知应用程序此记录会话已停止记录并创建了一个\r\n            中的新数据输入\r\n","Returns result code.":"返回结果代码。\r\n","android.media.audiofx.DynamicsProcessing.Channel.setInputGain(float)":"android.media.audiofx.DynamicsProcessing.Channel.setInputGain（浮动）\r\n","android.app.ActivityManager.RunningAppProcessInfo.processName":"android.app.ActivityManager.RunningAppProcessInfo.processName\r\n","desired for limiter compressor in milliseconds (ms)":"限制器压缩器所需的毫秒数 (ms)\r\n","android.provider.ContactsContract.SearchSnippets.SNIPPET":"android.provider.ContactsContract.SearchSnippets.SNIPPET\r\n","android.os.Build.VERSION.SECURITY_PATCH":"android.os.Build.VERSION.SECURITY_PATCH\r\n","android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_TOP_SLEEPING":"android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_TOP_SLEEPING\r\n","android.app.Notification.Builder.createBigContentView()":"android.app.Notification.Builder.createBigContentView()\r\n","android.net.sip.SipSession.State.toString(int)":"android.net.sip.SipSession.State.toString(int)\r\n","android.location.GnssStatus.Callback.onStarted()":"android.location.GnssStatus.Callback.onStarted()\r\n","icon drawable to use to represent this route":"图标可绘制用于表示这条路线\r\n","android.provider.Contacts.PresenceColumns.PRESENCE_STATUS":"android.provider.Contacts.PresenceColumns.PRESENCE_STATUS\r\n","android.media.MediaRecorder.MetricsConstants.AUDIO_TIMESCALE":"android.media.MediaRecorder.MetricsConstants.AUDIO_TIMESCALE\r\n","android.provider.Settings.System.getFloat(android.content.ContentResolver, java.lang.String)":"android.provider.Settings.System.getFloat(android.content.ContentResolver, java.lang.String)\r\n","Return the user associated with this session.":"返回与此会话关联的用户。\r\n"," representing a memory buffer of the screenshot.":" 代表屏幕截图的内存缓冲区。\r\n","android.provider.Settings.System.PARENTAL_CONTROL_ENABLED":"android.provider.Settings.System.PARENTAL_CONTROL_ENABLED\r\n","android.provider.Telephony.ServiceStateTable.getUriForSubscriptionIdAndField(int, java.lang.String)":"android.provider.Telephony.ServiceStateTable.getUriForSubscriptionIdAndField(int, java.lang.String)\r\n","android.drm.DrmStore.Action.DrmStore$Action()":"android.drm.DrmStore.Action.DrmStore$Action()\r\n","android.provider.Contacts.People.DEFAULT_SORT_ORDER":"android.provider.Contacts.People.DEFAULT_SORT_ORDER\r\n","Sets the relative stream volume of the current TV input session.":"设置当前电视输入会话的相对流音量。\r\n","android.media.tv.TvInputService.HardwareSession.onHardwareVideoAvailable()":"android.media.tv.TvInputService.HardwareSession.onHardwareVideoAvailable()\r\n","android.provider.DocumentsContract.Root.FLAG_SUPPORTS_EJECT":"android.provider.DocumentsContract.Root.FLAG_SUPPORTS_EJECT\r\n","android.media.audiofx.EnvironmentalReverb.getDensity()":"android.media.audiofx.EnvironmentalReverb.getDensity()\r\n","android.app.PendingIntent.FLAG_MUTABLE":"android.app.PendingIntent.FLAG_MUTABLE\r\n","Key to extract an (optional) error code detected while\n            playing the media\n            from the ":"提取检测到的（可选）错误代码的键\r\n            播放媒体\r\n            来自\r\n","android.bluetooth.le.AdvertisingSetParameters.Builder.build()":"android.bluetooth.le.AdvertisingSetParameters.Builder.build()\r\n","android.media.MediaDrm.KeyRequest.getDefaultUrl()":"android.media.MediaDrm.KeyRequest.getDefaultUrl()\r\n","AVC Main profile.":"AVC 主要配置文件。\r\n","android.media.MediaScannerConnection.MediaScannerConnectionClient":"android.media.MediaScannerConnection.MediaScannerConnectionClient\r\n","The security level of the device is not sufficient to meet the\n            requirements set by the content owner in the license policy.":"设备的安全级别不足以满足\r\n            内容所有者在许可政策中设定的要求。\r\n","Host FragmentManager":"主机片段管理器\r\n","android.provider.DocumentsContract.Document.FLAG_SUPPORTS_MOVE":"android.provider.DocumentsContract.Document.FLAG_SUPPORTS_MOVE\r\n","android.provider.ContactsContract.StatusColumns.OFFLINE":"android.provider.ContactsContract.StatusColumns.OFFLINE\r\n","Gets the room HF level. -or- Sets the volume level at 5 kHz relative to the volume level at low frequencies of the\n            overall reverb effect.":"获取房间的高频电平。 - 或 - 将音量级别设置为 5 kHz 相对于低频音量级别\r\n            整体混响效果。\r\n"," indicating which fields were\n            changed.":" 指示哪些字段是\r\n            变了。\r\n","The current pressed state of this key":"该键的当前按下状态\r\n","A builder for capture requests.":"捕获请求的构建器。\r\n","android.media.MediaCodec.CryptoException.ERROR_LOST_STATE":"android.media.MediaCodec.CryptoException.ERROR_LOST_STATE\r\n","android.opengl.GLU.gluOrtho2D(javax.microedition.khronos.opengles.GL10, float, float, float, float)":"android.opengl.GLU.gluOrtho2D（javax.microedition.khronos.opengles.GL10，浮动，浮动，浮动，浮动）\r\n","AppWidgetManager#ACTION_APPWIDGET_UPDATE":"AppWidgetManager#ACTION_APPWIDGET_UPDATE\r\n","Interface definition of a callback to be invoked when there\n            has been an error during an asynchronous operation (other errors\n            will throw exceptions at method call time).":"回调函数的接口定义\r\n            在异步操作期间一直出错（其他错误\r\n            将在方法调用时抛出异常）。\r\n","Callback interface for discovering when a send operation has\n            completed.":"用于发现发送操作何时发生的回调接口\r\n            完全的。\r\n","Call had video.":"通话有视频。\r\n"," objects that are currently\n            listening for events on this ":" 当前的对象\r\n            监听事件\r\n","android.media.MediaRecorder.OnInfoListener.onInfo(android.media.MediaRecorder, int, int)":"android.media.MediaRecorder.OnInfoListener.onInfo(android.media.MediaRecorder, int, int)\r\n","android.accessibilityservice.AccessibilityService.ScreenshotResult.getHardwareBuffer()":"android.accessibilityservice.AccessibilityService.ScreenshotResult.getHardwareBuffer()\r\n","android.provider.Contacts.ContactMethodsColumns.AUX_DATA":"android.provider.Contacts.ContactMethodsColumns.AUX_DATA\r\n","Describes a single view in the assist data.":"描述辅助数据中的单个视图。\r\n","Used for receiving GNSS satellite Navigation Messages from the GNSS engine.":"用于从 GNSS 引擎接收 GNSS 卫星导航消息。\r\n","The type of storage directory to return. Should be one of\n                       ":"要返回的存储目录的类型。应该是其中之一\r\n                       \r\n","Left position in pixels, relative to the overlay view.":"相对于叠加视图的左侧位置（以像素为单位）。\r\n","android.media.audiofx.Equalizer.getCurrentPreset()":"android.media.audiofx.Equalizer.getCurrentPreset()\r\n","android.provider.Settings.Global.WIFI_SLEEP_POLICY":"android.provider.Settings.Global.WIFI_SLEEP_POLICY\r\n","android.graphics.pdf.PdfDocument.PageInfo.getPageWidth()":"android.graphics.pdf.PdfDocument.PageInfo.getPageWidth()\r\n","ColorSpace.Connector connector":"ColorSpace.Connector 连接器\r\n","Request that the player start playback for a specific media id.":"请求播放器开始播放特定媒体 ID。\r\n","android.print.PrintAttributes.Margins.getTopMils()":"android.print.PrintAttributes.Margins.getTopMils()\r\n","android.provider.Settings.System.WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED":"android.provider.Settings.System.WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED\r\n","android.media.MediaDrm.PlaybackComponent":"android.media.MediaDrm.PlaybackComponent\r\n","android.database.sqlite.SQLiteDatabase.OpenParams.getIdleConnectionTimeout()":"android.database.sqlite.SQLiteDatabase.OpenParams.getIdleConnectionTimeout()\r\n","SessionParams#USER_ACTION_NOT_REQUIRED":"会话参数#USER_ACTION_NOT_REQUIRED\r\n","The content:// style URI for this table joined with details data from\n            ":"此表的 content:// 样式 URI 与来自的详细数据相结合\r\n            \r\n","the Uri used to observe carrier identity changes":"用于观察运营商身份变化的Uri\r\n","If this event counts as busy time or is still free time that can be\n            scheduled over.":"如果此事件算作忙碌时间或仍然是空闲时间，则可以\r\n            预定结束。\r\n","The most specific Organizational Unit (OU) component of this name":"此名称的最具体的组织单位 (OU) 组件\r\n","android.media.tv.TvRecordingClient.RecordingCallback.onError(int)":"android.media.tv.TvRecordingClient.RecordingCallback.onError(int)\r\n","android.media.audiofx.DynamicsProcessing.MbcBand.setExpanderRatio(float)":"android.media.audiofx.DynamicsProcessing.MbcBand.setExpanderRatio(浮动)\r\n","android.app.Notification.Action.SEMANTIC_ACTION_ARCHIVE":"android.app.Notification.Action.SEMANTIC_ACTION_ARCHIVE\r\n","android.app.Notification.WearableExtender.getCustomContentHeight()":"android.app.Notification.WearableExtender.getCustomContentHeight()\r\n","android.hardware.camera2.CameraCharacteristics.Key.hashCode()":"android.hardware.camera2.CameraCharacteristics.Key.hashCode()\r\n"," instance successfully initialized with all\n                the parameters set on this ":" 实例已成功初始化所有\r\n                在此设置的参数\r\n","android.app.appsearch.AppSearchSchema.DocumentPropertyConfig.getSchemaType()":"android.app.appsearch.AppSearchSchema.DocumentPropertyConfig.getSchemaType()\r\n","android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl.setSessionEnabled(android.view.inputmethod.InputMethodSession, boolean)":"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl.setSessionEnabled(android.view.inputmethod.InputMethodSession, 布尔值)\r\n","Called whenever the device recording configuration has changed.":"每当设备记录配置发生更改时调用。\r\n","android.provider.ContactsContract.ContactsColumns.IN_VISIBLE_GROUP":"android.provider.ContactsContract.ContactsColumns.IN_VISIBLE_GROUP\r\n","Returns the supported performance points.":"返回支持的性能点。\r\n"," to use the default policy when\n            the device is on battery, and never go to sleep when the device is\n            plugged in.":" 使用默认策略时\r\n            该设备使用电池供电，并且永远不会在设备处于休眠状态时进入睡眠状态\r\n            插入。\r\n","Additional options for how the Activity should be started.\n            See ":"应如何启动活动的其他选项。\r\n            看\r\n","android.os.Build.VERSION_CODES":"android.os.Build.VERSION_CODES\r\n","Notify the listener that the session resources was lost.":"通知侦听器会话资源丢失。\r\n","android.provider.ContactsContract.PinnedPositions.UNPINNED":"android.provider.ContactsContract.PinnedPositions.UNPINNED\r\n","android.provider.ContactsContract.AggregationExceptions.RAW_CONTACT_ID2":"android.provider.ContactsContract.AggregationExceptions.RAW_CONTACT_ID2\r\n","android.location.GpsStatus.Listener":"android.location.GpsStatus.Listener\r\n","android.media.browse.MediaBrowser.SubscriptionCallback.onError(java.lang.String)":"android.media.browse.MediaBrowser.SubscriptionCallback.onError(java.lang.String)\r\n","android.provider.ContactsContract.SimAccount.SDN_EF_TYPE":"android.provider.ContactsContract.SimAccount.SDN_EF_TYPE\r\n","android.app.Notification.WearableExtender.SCREEN_TIMEOUT_SHORT":"android.app.Notification.WearableExtender.SCREEN_TIMEOUT_SHORT\r\n","Called if there was an error looking for device(s)":"查找设备时出错时调用\r\n","NDEF message to push, or null to not provide a message":"要推送的 NDEF 消息，或 null 不提供消息\r\n","Surface to use as an output target for this request":"用作此请求的输出目标的表面\r\n","A convenience builder for creating ":"用于创建的便利生成器\r\n","android.net.TelephonyNetworkSpecifier.Builder":"android.net.TelephonyNetworkSpecifier.Builder\r\n","android.app.VoiceInteractor.CommandRequest.VoiceInteractor$CommandRequest(java.lang.String, android.os.Bundle)":"android.app.VoiceInteractor.CommandRequest.VoiceInteractor$CommandRequest(java.lang.String, android.os.Bundle)\r\n","A transfer function that converts from \"gamma space\" to linear space":"从“伽玛空间”转换到线性空间的传递函数\r\n","The name of the package that was added.":"添加的包的名称。\r\n","AudioTrack#getMetrics":"AudioTrack#getMetrics\r\n","API for inquiring about the general status of the provider.":"提供者一般状态查询接口。\r\n","AudioManager#AUDIOFOCUS_LOSS":"音频管理器#AUDIOFOCUS_LOSS\r\n","android.media.tv.TvContract.Channels.TYPE_SECAM":"android.media.tv.TvContract.Channels.TYPE_SECAM\r\n","One of the predefined notification categories (see the ":"预定义的通知类别之一（请参阅\r\n","android.app.Notification.WearableExtender.getActions()":"android.app.Notification.WearableExtender.getActions()\r\n","android.content.pm.PackageInstaller.SessionCallback.onActiveChanged(int, boolean)":"android.content.pm.PackageInstaller.SessionCallback.onActiveChanged(int, boolean)\r\n","MediaSession.QueueItem":"MediaSession.QueueItem\r\n","android.media.tv.TvContract.Channels.COLUMN_INTERNAL_PROVIDER_FLAG1":"android.media.tv.TvContract.Channels.COLUMN_INTERNAL_PROVIDER_FLAG1\r\n"," of values which contains decoded format\n                changes reported by the codec.  Not all hardware\n                codecs indicate codec format changes. Acceptable keys are taken from\n                ":" 包含解码格式的值\r\n                编解码器报告的更改。并非所有硬件\r\n                编解码器指示编解码器格式更改。可接受的密钥取自\r\n                \r\n","the user to be displayed for any replies sent by the user":"显示用户发送的任何回复的用户\r\n","android.provider.Settings.System.DEVICE_PROVISIONED":"android.provider.Settings.System.DEVICE_PROVISIONED\r\n","The channel type for preview videos.":"预览视频的频道类型。\r\n","A callback object for tracking the progress of a\n            ":"用于跟踪进度的回调对象\r\n            \r\n","The identity of the sender of a sent message.":"已发送消息的发送者的身份。\r\n","android.hardware.biometrics.BiometricPrompt.AuthenticationResult.getAuthenticationType()":"android.hardware.biometrics.BiometricPrompt.AuthenticationResult.getAuthenticationType()\r\n","android.provider.CalendarContract.EventsColumns.EVENT_TIMEZONE":"android.provider.CalendarContract.EventsColumns.EVENT_TIMEZONE\r\n","android.inputmethodservice.Keyboard.Key.popupCharacters":"android.inputmethodservice.Keyboard.Key.popupCharacters\r\n","android.media.audiofx.DynamicsProcessing.MbcBand.getThreshold()":"android.media.audiofx.DynamicsProcessing.MbcBand.getThreshold()\r\n","Returns an unmodifiable set of the names of entries that has changed from\n            the previous frame.":"返回一组不可修改的条目名称，这些条目已从\r\n            前一帧。\r\n","The ID of the route. Must not be empty.":"路由的 ID。不得为空。\r\n","This is called when the current position for time shifting has changed.":"当时移的当前位置发生变化时调用。\r\n","android.provider.Settings.Secure.getString(android.content.ContentResolver, java.lang.String)":"android.provider.Settings.Secure.getString(android.content.ContentResolver, java.lang.String)\r\n","android.media.MediaController2.ControllerCallback.onDisconnected(android.media.MediaController2)":"android.media.MediaController2.ControllerCallback.onDisconnected(android.media.MediaController2)\r\n","The method called when a camera device has encountered a serious error.":"当相机设备遇到严重错误时调用的方法。\r\n","the object info of the newly created file, or NULL in case\n                    of an error.":"新创建文件的对象信息，或 NULL 以防万一\r\n                    的一个错误。\r\n","The policy for deciding when Wi-Fi should go to sleep (which will in\n            turn switch to using the mobile data as an Internet connection).":"决定 Wi-Fi 何时进入休眠状态的策略（将在\r\n            转为使用移动数据作为互联网连接）。\r\n","Key of the bucket.":"桶的钥匙。\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV420Planar":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV420Planar\r\n","This method is called whenever a navigation item in your action bar\n            is selected.":"每当操作栏中的导航项时调用此方法\r\n            被选中。\r\n","android.provider.Telephony.MmsSms.CONTENT_UNDELIVERED_URI":"android.provider.Telephony.MmsSms.CONTENT_UNDELIVERED_URI\r\n","#FILL_IN_SELECTOR":"#FILL_IN_SELECTOR\r\n","android.app.assist.AssistStructure.ViewNode.getId()":"android.app.assist.AssistStructure.ViewNode.getId()\r\n","android.app.Notification.Builder":"android.app.Notification.Builder\r\n"," if the structure was created for assist purposes.":" 如果该结构是出于辅助目的而创建的。\r\n","the room level in millibels.":"以毫贝为单位的房间水平。\r\n","android.print.PrintJobInfo.Builder.build()":"android.print.PrintJobInfo.Builder.build()\r\n","android.provider.ContactsContract.Directory.PHOTO_SUPPORT_NONE":"android.provider.ContactsContract.Directory.PHOTO_SUPPORT_NONE\r\n","The vertical resolution in DPI (dots per inch).":"DPI 中的垂直分辨率（每英寸点数）。\r\n","Gets the accent color.":"获取强调色。\r\n","android.media.MediaPlayer.OnSubtitleDataListener":"android.media.MediaPlayer.OnSubtitleDataListener\r\n","android.provider.CalendarContract.Instances":"android.provider.CalendarContract.Instances\r\n","android.provider.CalendarContract.EventsColumns.HAS_EXTENDED_PROPERTIES":"android.provider.CalendarContract.EventsColumns.HAS_EXTENDED_PROPERTIES\r\n","This id is reserved.":"此 ID 已保留。\r\n","android.hardware.ConsumerIrManager.CarrierFrequencyRange.getMaxFrequency()":"android.hardware.ConsumerIrManager.CarrierFrequencyRange.getMaxFrequency()\r\n","android.content.Intent.ShortcutIconResource":"android.content.Intent.ShortcutIconResource\r\n","android.media.AudioRecord.getBufferSizeInFrames()":"android.media.AudioRecord.getBufferSizeInFrames()\r\n","#PHONETIC_NAME":"#PHONETIC_NAME\r\n","android.media.tv.TvInputService.Session":"android.media.tv.TvInputService.Session\r\n","ContactOptionsColumns":"联系人选项列\r\n","android.app.ActivityManager.RunningServiceInfo.started":"android.app.ActivityManager.RunningServiceInfo.started\r\n","An identifier for this item. It must be unique within the\n                       play queue and cannot be ":"此项目的标识符。它必须在\r\n                       播放队列，不能\r\n","android.content.pm.PackageManager.Property.getString()":"android.content.pm.PackageManager.Property.getString()\r\n","high frequency decay ratio using a permille scale. The valid range is\n            [100, 2000]. A ratio of 1000 indicates that all frequencies decay at the same rate.":"使用千分率标度的高频衰减率。有效范围是\r\n            [100, 2000]。比率为 1000 表示所有频率都以相同的速率衰减。\r\n","AVC Extended profile.":"AVC 扩展配置文件。\r\n","android.provider.Telephony.BaseMmsColumns.RETRIEVE_STATUS":"android.provider.Telephony.BaseMmsColumns.RETRIEVE_STATUS\r\n","VirtualDisplay":"虚拟显示\r\n","Encapsulates the DRM properties of the source.":"封装源的 DRM 属性。\r\n"," on which the event happened.":" 事件发生的时间。\r\n","the frame rate (frames per second)":"帧速率（每秒帧数）\r\n"," of the SIM for this row.":" 该行的 SIM 卡。\r\n","android.provider.CalendarContract.AttendeesColumns.ATTENDEE_RELATIONSHIP":"android.provider.CalendarContract.AttendeesColumns.ATTENDEE_RELATIONSHIP\r\n","number of bands held in this stage":"本阶段举办的乐队数量\r\n","android.media.MediaPlayer.ProvisioningNetworkErrorException":"android.media.MediaPlayer.ProvisioningNetworkErrorException\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_TI_FormatYUV420PackedSemiPlanar":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_TI_FormatYUV420PackedSemiPlanar\r\n","android.inputmethodservice.Keyboard.Key":"android.inputmethodservice.Keyboard.Key\r\n","android.app.ApplicationErrorReport.CrashInfo.exceptionClassName":"android.app.ApplicationErrorReport.CrashInfo.exceptionClassName\r\n","The animation being assigned. A value of ":"正在分配的动画。的价值\r\n","Returns the visual elevation of the view, used for shadowing and other visual\n            characterstics, as set by ":"返回视图的视觉高度，用于阴影和其他视觉\r\n            特征，由\r\n","the uncompressed text contents of the entry, null if the entry is not text.":"条目的未压缩文本内容，如果条目不是文本，则为 null。\r\n","Flags that specify the anchoring to edges of the keyboard for detecting touch events\n            that are just out of the boundary of the key.":"指定锚定到键盘边缘以检测触摸事件的标志\r\n            刚好超出键的边界。\r\n","android.media.MediaDrm.KeyStatus":"android.media.MediaDrm.KeyStatus\r\n"," that failed to be saved by\n            ":" 未能被保存\r\n            \r\n","desired in decibels (dB)":"所需的分贝 (dB)\r\n","android.media.MediaCodec.QueueRequest.queue()":"android.media.MediaCodec.QueueRequest.queue()\r\n","android.app.admin.DevicePolicyManager.InstallSystemUpdateCallback.UPDATE_ERROR_UNKNOWN":"android.app.admin.DevicePolicyManager.InstallSystemUpdateCallback.UPDATE_ERROR_UNKNOWN\r\n","The request to get user consent timed out.":"获取用户同意的请求超时。\r\n","an ID for the download entry added to the downloads app, unique across the system\n            This ID is used to make future calls related to this download.":"添加到下载应用程序的下载条目的 ID，在整个系统中是唯一的\r\n            此 ID 用于进行与此下载相关的未来调用。\r\n","android.preference.PreferenceActivity.Header.breadCrumbShortTitle":"android.preference.PreferenceActivity.Header.breadCrumbShortTitle\r\n","AHardwareBuffer":"硬件缓冲区\r\n","android.provider.Settings.System.TEXT_AUTO_PUNCTUATE":"android.provider.Settings.System.TEXT_AUTO_PUNCTUATE\r\n","android.provider.CallLog.Calls.CACHED_PHOTO_URI":"android.provider.CallLog.Calls.CACHED_PHOTO_URI\r\n","requested ":"要求\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatRawBayer8bit":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatRawBayer8bit\r\n","Called on the listener to indicate that the audio mode has changed":"调用侦听器以指示音频模式已更改\r\n","android.graphics.Bitmap.Config":"android.graphics.Bitmap.Config\r\n","android.media.tv.TvContract.RecordedPrograms.COLUMN_RECORDING_EXPIRE_TIME_UTC_MILLIS":"android.media.tv.TvContract.RecordedPrograms.COLUMN_RECORDING_EXPIRE_TIME_UTC_MILLIS\r\n","boolean  True if the history can be cleared.":"boolean 如果可以清除历史记录则为真。\r\n","Constructs a PointFEvaluator that modifies and returns ":"构造一个修改并返回的 PointFEvaluator\r\n","android.app.ActivityManager.AppTask.finishAndRemoveTask()":"android.app.ActivityManager.AppTask.finishAndRemoveTask()\r\n","The database in which the document that was used resides (e.g. from\n                ":"使用的文档所在的数据库（例如来自\r\n                \r\n","android.graphics.ColorSpace.Adaptation":"android.graphics.ColorSpace.Adaptation\r\n"," class accessible through the provider.":" 可通过提供者访问的类。\r\n","android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback":"android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback\r\n","android.provider.ContactsContract.Directory.isEnterpriseDirectoryId(long)":"android.provider.ContactsContract.Directory.isEnterpriseDirectoryId（长）\r\n","Magic version number for a current development build, which has\n            not yet turned into an official release.":"当前开发版本的魔法版本号，它有\r\n            还没有变成正式版。\r\n","android.os.Build.VERSION_CODES.M":"android.os.Build.VERSION_CODES.M\r\n","android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC7":"android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC7\r\n","android.provider.Browser.canClearHistory(android.content.ContentResolver)":"android.provider.Browser.canClearHistory(android.content.ContentResolver)\r\n","android.content.pm.ShortcutInfo.Builder.ShortcutInfo$Builder(android.content.Context, java.lang.String)":"android.content.pm.ShortcutInfo.Builder.ShortcutInfo$Builder(android.content.Context, java.lang.String)\r\n","Invoked after ":"之后调用\r\n","A class to encapsulate information about an audio focus request.":"封装有关音频焦点请求的信息的类。\r\n","The ID of the track that uniquely identifies the current track among all the\n                       other tracks in the same TV program.":"在所有曲目中唯一标识当前曲目的曲目ID\r\n                       同一电视节目中的其他曲目。\r\n","android.media.audiofx.DynamicsProcessing.Limiter.getPostGain()":"android.media.audiofx.DynamicsProcessing.Limiter.getPostGain()\r\n","android.media.MediaDrm.ErrorCodes.ERROR_STORAGE_READ":"android.media.MediaDrm.ErrorCodes.ERROR_STORAGE_READ\r\n","The array index of far focus distance for use with\n            ":"远焦距数组索引配合使用\r\n            \r\n","android.provider.ContactsContract.RawContactsColumns.METADATA_DIRTY":"android.provider.ContactsContract.RawContactsColumns.METADATA_DIRTY\r\n","#MEDIA_INFO_SUBTITLE_TIMED_OUT":"#MEDIA_INFO_SUBTITLE_TIMED_OUT\r\n","android.media.MediaPlayer":"android.media.MediaPlayer\r\n","android.media.RemoteControlClient.OnGetPlaybackPositionListener.onGetPlaybackPosition()":"android.media.RemoteControlClient.OnGetPlaybackPositionListener.onGetPlaybackPosition()\r\n","android.content.Intent.URI_ANDROID_APP_SCHEME":"android.content.Intent.URI_ANDROID_APP_SCHEME\r\n","android.media.MediaDrm.LogMessage.getPriority()":"android.media.MediaDrm.LogMessage.getPriority()\r\n","24\r\n\r\n24\r\n\r\n24\r\n\r\n24":"24\r\n\r\n24\r\n\r\n24\r\n\r\n24\r\n","android.provider.ContactsContract.QuickContact.showQuickContact(android.content.Context, android.view.View, android.net.Uri, int, java.lang.String[])":"android.provider.ContactsContract.QuickContact.showQuickContact(android.content.Context, android.view.View, android.net.Uri, int, java.lang.String[])\r\n","URI of the voicemail entry.":"语音邮件条目的 URI。\r\n","Called after the fragment has returned from the FragmentManager's call to\n            ":"在片段从 FragmentManager 的调用返回后调用\r\n            \r\n","Informs the application that there is an error and this recording session is no longer\n            able to start or continue recording.":"通知应用程序出现错误，此记录会话不再\r\n            能够开始或继续录制。\r\n","\n            that this data belongs to.":"\r\n            该数据属于。\r\n","android.graphics.Typeface.Builder":"android.graphics.Typeface.Builder\r\n","The width in points.":"以磅为单位的宽度。\r\n","Pins a contact at a provided position, or unpins a contact.":"在提供的位置固定联系人，或取消固定联系人。\r\n","whether this bubble should suppress the notification when it is posted.":"此气泡在发布时是否应抑制通知。\r\n","android.accessibilityservice.AccessibilityService.ScreenshotResult":"android.accessibilityservice.AccessibilityService.ScreenshotResult\r\n","This indicates that a required crypto resource was not able to be\n            allocated while attempting the requested operation.":"这表明无法获得所需的加密资源\r\n            在尝试请求的操作时分配。\r\n","quickReject()":"快速拒绝（）\r\n","Key to extract the value for how often video iframes are generated\n            from the ":"提取视频 iframe 生成频率的值的关键\r\n            来自\r\n","android.provider.ContactsContract.RawContactsEntity.PROFILE_CONTENT_URI":"android.provider.ContactsContract.RawContactsEntity.PROFILE_CONTENT_URI\r\n","The description of the gesture that completed.":"完成手势的描述。\r\n","android.media.SubtitleData":"android.media.SubtitleData\r\n","End of interval.":"间隔结束。\r\n","android.media.VolumeShaper.Configuration.getMaximumCurvePoints()":"android.media.VolumeShaper.Configuration.getMaximumCurvePoints()\r\n","The id of the document which failed to be migrated.":"迁移失败的文档id。\r\n","android.provider.CalendarContract.EventsColumns.SYNC_DATA3":"android.provider.CalendarContract.EventsColumns.SYNC_DATA3\r\n","current context":"当前上下文\r\n","android.provider.ContactsContract.StatusColumns.STATUS":"android.provider.ContactsContract.StatusColumns.STATUS\r\n","Returns true if this session is a multi-package session containing references to other\n            sessions.":"如果此会话是包含对其他引用的多包会话，则返回 true\r\n            会议。\r\n","android.hardware.fingerprint.FingerprintManager.AuthenticationResult":"android.hardware.fingerprint.FingerprintManager.AuthenticationResult\r\n","android.hardware.display.DisplayManager.DisplayListener":"android.hardware.display.DisplayManager.DisplayListener\r\n","\n                                array.":"\r\n                                大批。\r\n","android.media.MediaDrm.ErrorCodes.ERROR_MEDIA_FRAMEWORK":"android.media.MediaDrm.ErrorCodes.ERROR_MEDIA_FRAMEWORK\r\n","Called as near as possible to the moment when a photo is captured\n            from the sensor.":"尽可能接近拍摄照片的那一刻调用\r\n            从传感器。\r\n","android.os.Build.VERSION_CODES.N":"android.os.Build.VERSION_CODES.N\r\n"," at which we consider memory to be\n            low and start killing background services and other non-extraneous\n            processes.":" 我们认为记忆是\r\n            低并开始杀死后台服务和其他非无关的\r\n            过程。\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatMonochrome":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatMonochrome\r\n","#ACTION_DEVICE_ADMIN_ENABLED":"#ACTION_DEVICE_ADMIN_ENABLED\r\n","The content:// style URL for querying Calendars table in the managed profile.":"用于在托管配置文件中查询日历表的 content:// 样式 URL。\r\n","Class constructor for BandStage":"BandStage 的类构造器\r\n","android.provider.Telephony.MmsSms.MMS_PROTO":"android.provider.Telephony.MmsSms.MMS_PROTO\r\n","Information you can retrieve about the available memory through\n            ":"您可以通过以下方式检索有关可用内存的信息\r\n            \r\n","Pass in a query parameter called \"pattern\" which is the text to search for.":"传入一个名为“pattern”的查询参数，它是要搜索的文本。\r\n","android.hardware.camera2.CameraExtensionSession.StateCallback":"android.hardware.camera2.CameraExtensionSession.StateCallback\r\n","The SessionException has an unknown error code.":"SessionException 有一个未知的错误代码。\r\n","android.app.Notification.BubbleMetadata.getIcon()":"android.app.Notification.BubbleMetadata.getIcon()\r\n","android.app.Notification.WearableExtender.UNSET_ACTION_INDEX":"android.app.Notification.WearableExtender.UNSET_ACTION_INDEX\r\n","API allowing applications to send usage information for each ":"API 允许应用程序发送每个应用程序的使用信息\r\n"," object representing host device which connection\n                state was changed.":" 表示连接的主机设备的对象\r\n                状态改变了。\r\n","android.provider.CalendarContract.RemindersColumns.EVENT_ID":"android.provider.CalendarContract.RemindersColumns.EVENT_ID\r\n","android.animation.Animator.AnimatorPauseListener.onAnimationPause(android.animation.Animator)":"android.animation.Animator.AnimatorPauseListener.onAnimationPause(android.animation.Animator)\r\n","android.media.audiofx.AudioEffect.Descriptor.connectMode":"android.media.audiofx.AudioEffect.Descriptor.connectMode\r\n","Called when returning an audio buffer which has been consumed.":"返回已消耗的音频缓冲区时调用。\r\n","SessionParams#setOriginatingUid(int)":"会话参数#setOriginatingUid(int)\r\n","android.animation.TimeAnimator.TimeListener":"android.animation.TimeAnimator.TimeListener\r\n","Interface for classes whose instances can be written to\n            and restored from a ":"可写入其实例的类的接口\r\n            并从一个恢复\r\n","the URL of the newly created row. May return ":"新创建行的 URL。可能会回来\r\n","android.media.tv.TvInputInfo.Builder.build()":"android.media.tv.TvInputInfo.Builder.build()\r\n","android.app.AppOpsManager.OnOpNotedCallback":"android.app.AppOpsManager.OnOpNotedCallback\r\n"," can capture gestures performed on a device's fingerprint\n            sensor, as long as the device has a sensor capable of detecting gestures.":" 可以捕获在设备指纹上执行的手势\r\n            传感器，只要设备具有能够检测手势的传感器即可。\r\n"," is guaranteed\n              to work on all devices.":" 有保证\r\n              在所有设备上工作。\r\n","the unicode of the key being pressed. If the touch is not on a valid\n            key, the value will be zero.":"被按下的键的 unicode。如果触摸无效\r\n            键，该值将为零。\r\n","android.net.LocalSocketAddress.Namespace":"android.net.LocalSocketAddress.命名空间\r\n","android.media.MediaDrm.MetricsConstants.GET_PROVISION_REQUEST_OK_COUNT":"android.media.MediaDrm.MetricsConstants.GET_PROVISION_REQUEST_OK_COUNT\r\n"," or any\n            ":" 或任何\r\n            \r\n","#CONFIGURATION_CHANGE":"#CONFIGURATION_CHANGE\r\n","android.app.appsearch.AppSearchSchema.PropertyConfig.CARDINALITY_REQUIRED":"android.app.appsearch.AppSearchSchema.PropertyConfig.CARDINALITY_REQUIRED\r\n"," to indicate that there are messages waiting\n            on the server but the details are not known.":" 表示有消息等待\r\n            在服务器上，但细节未知。\r\n","android.location.GnssNavigationMessage.Callback.STATUS_LOCATION_DISABLED":"android.location.GnssNavigationMessage.Callback.STATUS_LOCATION_DISABLED\r\n","android.inputmethodservice.InputMethodService.InputMethodImpl.unbindInput()":"android.inputmethodservice.InputMethodService.InputMethodImpl.unbindInput()\r\n"," objects for\n            this group.":" 对象\r\n            这个组。\r\n","The channel type for SECAM.":"SECAM 的通道类型。\r\n","Send the id and args from a custom action back for the ":"从自定义操作发回 id 和 args\r\n","android.provider.ContactsContract.StatusColumns.CHAT_CAPABILITY":"android.provider.ContactsContract.StatusColumns.CHAT_CAPABILITY\r\n","android.media.tv.TvContract.Channels.VIDEO_FORMAT_480I":"android.media.tv.TvContract.Channels.VIDEO_FORMAT_480I\r\n","android.provider.ContactsContract.AggregationExceptions.CONTENT_TYPE":"android.provider.ContactsContract.AggregationExceptions.CONTENT_TYPE\r\n","SipProfile":"简介\r\n","android.content.pm.ActivityInfo#CONFIG_NAVIGATION\n            PackageManager.ActivityInfo.CONFIG_NAVIGATION":"android.content.pm.ActivityInfo#CONFIG_NAVIGATION\r\n            PackageManager.ActivityInfo.CONFIG_NAVIGATION\r\n","Usage that occurs while this network is not a default network.":"此网络不是默认网络时发生的使用情况。\r\n","android.hardware.fingerprint.FingerprintManager.CryptoObject":"android.hardware.fingerprint.FingerprintManager.CryptoObject\r\n"," value pairs used\n            for ":" 使用的值对\r\n            为了\r\n","android.provider.CalendarContract.EventsColumns.EXRULE":"android.provider.CalendarContract.EventsColumns.EXRULE\r\n","This class represents a PDF document page for rendering.":"此类表示要呈现的 PDF 文档页面。\r\n","android.content.pm.PackageInstaller.SessionInfo.getSize()":"android.content.pm.PackageInstaller.SessionInfo.getSize()\r\n"," are not 0, the\n            bitmap will be scaled to match ":" 不为 0，则\r\n            位图将被缩放以匹配\r\n"," is used to do capture request field lookups with\n            ":" 用于捕获请求字段查找\r\n            \r\n","android.app.blob.BlobStoreManager.Session.allowSameSignatureAccess()":"android.app.blob.BlobStoreManager.Session.allowSameSignatureAccess()\r\n","android.os.PerformanceHintManager.Session":"android.os.PerformanceHintManager.Session\r\n","The names of the packages that have just been\n                       unsuspended.":"刚才的包名\r\n                       未暂停。\r\n","android.provider.ContactsContract.ProviderStatus.STATUS":"android.provider.ContactsContract.ProviderStatus.STATUS\r\n","android.provider.Contacts.Intents.SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED":"android.provider.Contacts.Intents.SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED\r\n","the stream over which the playback associated with this route is performed":"执行与此路由关联的播放的流\r\n","android.print.PrintAttributes.MediaSize.getWidthMils()":"android.print.PrintAttributes.MediaSize.getWidthMils()\r\n","android.drm.DrmStore.ConstraintsColumns.REMAINING_REPEAT_COUNT":"android.drm.DrmStore.ConstraintsColumns.REMAINING_REPEAT_COUNT\r\n","<b>video decoder only</b>: codec supports secure decryption.":"<b>仅视频解码器</b>：编解码器支持安全解密。\r\n","android.provider.Telephony.Mms.REPORT_REQUEST_URI":"android.provider.Telephony.Mms.REPORT_REQUEST_URI\r\n"," that this\n            data belongs to.":" 这个\r\n            数据属于。\r\n","The cached photo URI of the picture associated with the phone number, if it exists.":"与电话号码关联的图片的缓存照片 URI（如果存在）。\r\n","Get the SPI that caused a collision.":"获取导致冲突的 SPI。\r\n","boolean Returns true if the attribute was found and\n                    <var>outValue</var> is valid, else false.":"布尔值 如果找到该属性则返回 true 并且\r\n                    <var>outValue</var> 有效，否则为假。\r\n","Callback that is called when a new image is available from ImageReader.":"当 ImageReader 中有新图像可用时调用的回调。\r\n","android.media.MediaMuxer.OutputFormat.MUXER_OUTPUT_OGG":"android.media.MediaMuxer.OutputFormat.MUXER_OUTPUT_OGG\r\n","android.provider.Telephony.ServiceStateTable.VOICE_OPERATOR_NUMERIC":"android.provider.Telephony.ServiceStateTable.VOICE_OPERATOR_NUMERIC\r\n","android.provider.ContactsContract.DisplayPhoto.CONTENT_MAX_DIMENSIONS_URI":"android.provider.ContactsContract.DisplayPhoto.CONTENT_MAX_DIMENSIONS_URI\r\n","android.provider.Telephony.TextBasedSmsColumns.TYPE":"android.provider.Telephony.TextBasedSmsColumns.TYPE\r\n","android.provider.Telephony.TextBasedSmsColumns.STATUS_NONE":"android.provider.Telephony.TextBasedSmsColumns.STATUS_NONE\r\n","android.app.Notification.CarExtender":"android.app.Notification.CarExtender\r\n","android.media.MediaDrm.ErrorCodes.ERROR_LOST_STATE":"android.media.MediaDrm.ErrorCodes.ERROR_LOST_STATE\r\n","Returns the item's textual representation.":"返回项目的文本表示。\r\n","android.media.MediaDescription.Builder.build()":"android.media.MediaDescription.Builder.build()\r\n","Gets the flags of the item.":"获取项目的标志。\r\n","the timed metadata sample associated with this event":"与此事件关联的定时元数据示例\r\n","Container for callback data from ":"回调数据的容器\r\n","#ACCOUNT_NAME":"＃帐户名称\r\n","android.os.ParcelFileDescriptor.AutoCloseInputStream":"android.os.ParcelFileDescriptor.AutoCloseInputStream\r\n","android.media.RoutingSessionInfo.Builder":"android.media.RoutingSessionInfo.Builder\r\n","Gets whether this media size is in portrait which is the\n            height is greater or equal to the width.":"获取此媒体大小是否为纵向，即\r\n            高度大于或等于宽度。\r\n","android.media.tv.TvContract.RecordedPrograms.COLUMN_CHANNEL_ID":"android.media.tv.TvContract.RecordedPrograms.COLUMN_CHANNEL_ID\r\n","#EXTRA_STATUS":"#EXTRA_STATUS\r\n","the absolute path to application-specific directory. May return\n                    ":"应用程序特定目录的绝对路径。可能会回来\r\n                    \r\n","android.inputmethodservice.Keyboard.Row.verticalGap":"android.inputmethodservice.Keyboard.Row.verticalGap\r\n","android.media.MediaCodec.CryptoInfo.key":"android.media.MediaCodec.CryptoInfo.key\r\n","Individual sensors not listed in ":"未列出的个别传感器\r\n","Whether the operation became active or inactive.":"操作是激活还是非激活。\r\n","CaptureFailure":"捕获失败\r\n","android.inputmethodservice.InputMethodService.Insets.touchableRegion":"android.inputmethodservice.InputMethodService.Insets.touchableRegion\r\n","A value of type V, converted from ":"类型 V 的值，从\r\n","The maximum distance below the baseline for the lowest glyph in\n            the font at a given text size.":"中最低字形的基线以下的最大距离\r\n            给定文本大小的字体。\r\n","android.location.provider.ProviderProperties.Builder.build()":"android.location.provider.ProviderProperties.Builder.build()\r\n","android.provider.Telephony.TextBasedSmsColumns.BODY":"android.provider.Telephony.TextBasedSmsColumns.BODY\r\n","Called when the application requests to create an overlay view.":"当应用程序请求创建覆盖视图时调用。\r\n","android.media.tv.TvRecordingClient.RecordingCallback.onDisconnected(java.lang.String)":"android.media.tv.TvRecordingClient.RecordingCallback.onDisconnected(java.lang.String)\r\n"," is INFINITE\n            or a positive value, the animation restarts from the beginning.":" 是无限的\r\n            或正值，动画从头重新开始。\r\n","android.provider.Contacts.PeopleColumns.NAME":"android.provider.Contacts.PeopleColumns.NAME\r\n"," in the stream.":" 在流中。\r\n","android.graphics.PixelXorXfermode":"android.graphics.PixelXorXfermode\r\n","Obtains ":"获得\r\n","android.provider.UserDictionary.Words":"android.provider.UserDictionary.Words\r\n","android.provider.CalendarContract.ExtendedPropertiesColumns.EVENT_ID":"android.provider.CalendarContract.ExtendedPropertiesColumns.EVENT_ID\r\n","android.hardware.Camera.Parameters.SCENE_MODE_PORTRAIT":"android.hardware.Camera.Parameters.SCENE_MODE_PORTRAIT\r\n","Gets the unique resolution id.":"获取唯一的分辨率 ID。\r\n","android.media.session.MediaController.PlaybackInfo.getMaxVolume()":"android.media.session.MediaController.PlaybackInfo.getMaxVolume()\r\n","#installSystemUpdate":"#installSystemUpdate\r\n","android.media.MediaDrm.MediaDrmStateException":"android.media.MediaDrm.MediaDrmStateException\r\n","android.app.assist.AssistStructure.ViewNode.getScrollX()":"android.app.assist.AssistStructure.ViewNode.getScrollX()\r\n","Display name comes from a structured name that only has phonetic components.":"显示名称来自仅包含语音成分的结构化名称。\r\n","The EGLContext client version to choose. Use 2 for OpenGL ES 2.0":"要选择的 EGLContext 客户端版本。将 2 用于 OpenGL ES 2.0\r\n"," is non-null, this is the main text background color associated\n            with it.":" 非空，这是关联的主要文本背景颜色\r\n            用它。\r\n","android.app.LauncherActivity.ListItem":"android.app.LauncherActivity.ListItem\r\n","android.app.blob.BlobStoreManager.Session.isPackageAccessAllowed(java.lang.String, byte[])":"android.app.blob.BlobStoreManager.Session.isPackageAccessAllowed(java.lang.String, byte[])\r\n","ViewStructure#setAlpha\n            ViewStructure.setAlpha(float)":"查看结构#setAlpha\r\n            ViewStructure.setAlpha（浮动）\r\n"," instance initialized with all the parameters set\n            on this ":" 使用所有参数集初始化的实例\r\n            在这\r\n","true if preEq stage is in use;":"如果 preEq 阶段正在使用，则为真；\r\n","android.app.appsearch.SearchResult.MatchRange.getEnd()":"android.app.appsearch.SearchResult.MatchRange.getEnd()\r\n","Interface definition for a callback to be invoked when an AudioRecord has\n            reached a notification marker set by ":"当 AudioRecord 被调用时回调的接口定义\r\n            到达了设置的通知标记\r\n","The pid of the remote user":"远程用户的pid\r\n","android.media.midi.MidiManager.OnDeviceOpenedListener.onDeviceOpened(android.media.midi.MidiDevice)":"android.media.midi.MidiManager.OnDeviceOpenedListener.onDeviceOpened(android.media.midi.MidiDevice)\r\n","android.provider.ContactsContract.Intents.EXTRA_RECIPIENT_CONTACT_NAME":"android.provider.ContactsContract.Intents.EXTRA_RECIPIENT_CONTACT_NAME\r\n","Construct a RemoteViews for the final big notification layout.":"为最终的大通知布局构造一个 RemoteViews。\r\n","android.graphics.ColorSpace.Rgb.getWhitePoint(float[])":"android.graphics.ColorSpace.Rgb.getWhitePoint(float[])\r\n","Creates the TaskDescription to the specified values.":"创建具有指定值的 TaskDescription。\r\n","android.media.MediaDrm.MetricsConstants.EVENT_KEY_EXPIRED_COUNT":"android.media.MediaDrm.MetricsConstants.EVENT_KEY_EXPIRED_COUNT\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV420SemiPlanar":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV420SemiPlanar\r\n","android.provider.ContactsContract.Contacts.CONTENT_FILTER_URI":"android.provider.ContactsContract.Contacts.CONTENT_FILTER_URI\r\n","android.content.pm.LauncherApps.Callback.onPackageChanged(java.lang.String, android.os.UserHandle)":"android.content.pm.LauncherApps.Callback.onPackageChanged(java.lang.String, android.os.UserHandle)\r\n","Get the wearable actions present on this notification.":"获取此通知上显示的可穿戴操作。\r\n","android.media.session.MediaSession.Callback.onRewind()":"android.media.session.MediaSession.Callback.onRewind()\r\n","The name of the package that owns the current row.":"拥有当前行的包的名称。\r\n","android.media.audiofx.DynamicsProcessing.Limiter.getLinkGroup()":"android.media.audiofx.DynamicsProcessing.Limiter.getLinkGroup()\r\n","android.provider.ContactsContract.PresenceColumns.IM_ACCOUNT":"android.provider.ContactsContract.PresenceColumns.IM_ACCOUNT\r\n","S.":"S.\r\n"," value for the message, or -1 if no status has been received.":" 消息的值，如果未收到任何状态，则为 -1。\r\n","Get the value set in ":"获取设置的值\r\n","Wrapper class holding an Intent and implementing comparisons on it for\n            the purpose of filtering.":"持有 Intent 并对其进行比较的包装类\r\n            过滤的目的。\r\n","The slot index of the SIM card this account maps to. See\n            ":"此帐户映射到的 SIM 卡的插槽索引。看\r\n            \r\n","#SHOW_OR_CREATE_CONTACT":"#SHOW_OR_CREATE_CONTACT\r\n","android.app.appsearch.AppSearchSchema.StringPropertyConfig.INDEXING_TYPE_PREFIXES":"android.app.appsearch.AppSearchSchema.StringPropertyConfig.INDEXING_TYPE_PREFIXES\r\n","android.view.KeyEvent.Callback#onKeyMultiple(int, int, KeyEvent)\n            KeyEvent.Callback.onKeyMultiple()":"android.view.KeyEvent.Callback#onKeyMultiple（int，int，KeyEvent）\r\n            KeyEvent.Callback.onKeyMultiple()\r\n","android.media.MediaRecorder.MetricsConstants.CAPTURE_FPS":"android.media.MediaRecorder.MetricsConstants.CAPTURE_FPS\r\n","android.provider.CalendarContract.SyncColumns.MUTATORS":"android.provider.CalendarContract.SyncColumns.MUTATORS\r\n","android.hardware.camera2.CameraManager.AvailabilityCallback.onPhysicalCameraUnavailable(java.lang.String, java.lang.String)":"android.hardware.camera2.CameraManager.AvailabilityCallback.onPhysicalCameraUnavailable(java.lang.String, java.lang.String)\r\n","Called when the application requests to play a given recorded TV program.":"当应用程序请求播放给定的录制电视节目时调用。\r\n","android.content.res.Resources.Theme.getExplicitStyle(android.util.AttributeSet)":"android.content.res.Resources.Theme.getExplicitStyle(android.util.AttributeSet)\r\n","android.media.midi.MidiDeviceInfo.PortInfo.getName()":"android.media.midi.MidiDeviceInfo.PortInfo.getName()\r\n","android.provider.ContactsContract.DataUsageStatColumns.LAST_TIME_USED":"android.provider.ContactsContract.DataUsageStatColumns.LAST_TIME_USED\r\n","Fragment changing state":"片段改变状态\r\n","android.content.pm.PackageInstaller.Session.openRead(java.lang.String)":"android.content.pm.PackageInstaller.Session.openRead(java.lang.String)\r\n","Key to extract the count of errors encountered while\n            playing the media\n            from the ":"提取遇到的错误计数的键\r\n            播放媒体\r\n            来自\r\n","android.provider.ContactsContract.SimAccount":"android.provider.ContactsContract.SimAccount\r\n","android.provider.ContactsContract.StreamItemPhotosColumns.PHOTO_FILE_ID":"android.provider.ContactsContract.StreamItemPhotosColumns.PHOTO_FILE_ID\r\n","SessionParams#setInstallLocation(int)":"会话参数#setInstallLocation(int)\r\n","android.graphics.ImageDecoder.Source":"android.graphics.ImageDecoder.Source\r\n","android.app.ActivityManager.RunningAppProcessInfo.REASON_SERVICE_IN_USE":"android.app.ActivityManager.RunningAppProcessInfo.REASON_SERVICE_IN_USE\r\n","\n            Context.startActivity(Intent, Bundle)} for more details.  If options\n            have also been supplied by the IntentSender, options given here will\n            override any that conflict with those given by the IntentSender.":"\r\n            Context.startActivity(Intent, Bundle)} 了解更多详情。如果选项\r\n            IntentSender 也已提供，此处给出的选项将\r\n            覆盖任何与 IntentSender 给出的冲突的内容。\r\n","the elementary file on the SIM that this Uri will reference":"此 Uri 将引用的 SIM 上的基本文件\r\n","Called when the application requests to start TV program recording.":"当应用程序请求开始录制电视节目时调用。\r\n","the session ID of the multi-package session that this belongs to or\n            ":"这属于或的多包会话的会话 ID\r\n            \r\n","android.media.AudioMetadata.Key":"android.media.AudioMetadata.Key\r\n","Called when there is a progress update.":"有进度更新时调用。\r\n","android.provider.Contacts.Organizations":"android.provider.Contacts.Organizations\r\n","Called when the size of the overlay view is changed by the application.":"当应用程序更改覆盖视图的大小时调用。\r\n","android.bluetooth.le.BluetoothLeScanner.stopScan(android.bluetooth.le.ScanCallback)":"android.bluetooth.le.BluetoothLeScanner.stopScan(android.bluetooth.le.ScanCallback)\r\n","Intent#FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS":"意图#FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS\r\n","android.content.pm.PackageInstaller.SessionInfo.STAGED_SESSION_VERIFICATION_FAILED":"android.content.pm.PackageInstaller.SessionInfo.STAGED_SESSION_VERIFICATION_FAILED\r\n","Creates a new builder with the basic parameters of an IKEv2/IPsec VPN.":"使用 IKEv2/IPsec VPN 的基本参数创建新构建器。\r\n","A receiver device type of the route indicating the presentation of the media is happening\n            on a bluetooth device such as a bluetooth speaker.":"指示正在呈现媒体的路由的接收器设备类型\r\n            在蓝牙设备（如蓝牙扬声器）上。\r\n","a view attached to the overlay window":"附加到覆盖窗口的视图\r\n","Returns a MediaFormat object with default values for configurations that have\n            defaults.":"返回具有配置默认值的 MediaFormat 对象\r\n            默认值。\r\n","android.media.MediaDrm.MetricsConstants.PROVIDE_KEY_RESPONSE_OK_TIME_MICROS":"android.media.MediaDrm.MetricsConstants.PROVIDE_KEY_RESPONSE_OK_TIME_MICROS\r\n","Whether haptic feedback (Vibrate on tap) is enabled.":"是否启用触觉反馈（点击时振动）。\r\n","The install reason.":"安装原因。\r\n","idleTimeoutMillis":"idleTimeoutMillis\r\n","android.net.http.SslCertificate.DName.getUName()":"android.net.http.SslCertificate.DName.getUName()\r\n","android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.setEnabled(boolean)":"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.setEnabled(boolean)\r\n","android.content.Intent.fillIn(android.content.Intent, int)":"android.content.Intent.fillIn(android.content.Intent, int)\r\n","Method invoked when clearing the application user data has completed.":"清除应用程序用户数据已完成时调用的方法。\r\n","nameY":"姓名Y\r\n","android.print.PrinterInfo.Builder":"android.print.PrinterInfo.Builder\r\n","android.app.Notification.BubbleMetadata.getDeleteIntent()":"android.app.Notification.BubbleMetadata.getDeleteIntent()\r\n","android.media.tv.TvTrackInfo.Builder":"android.media.tv.TvTrackInfo.Builder\r\n","#LOOKUP_KEY":"#LOOKUP_KEY\r\n","android.provider.Settings.Secure.ENABLED_INPUT_METHODS":"android.provider.Settings.Secure.ENABLED_INPUT_METHODS\r\n","android.provider.ContactsContract.PresenceColumns.PROTOCOL":"android.provider.ContactsContract.PresenceColumns.PROTOCOL\r\n","android.provider.Settings.System.DTMF_TONE_TYPE_WHEN_DIALING":"android.provider.Settings.System.DTMF_TONE_TYPE_WHEN_DIALING\r\n","android.provider.Contacts.GroupMembership.RAW_CONTENT_URI":"android.provider.Contacts.GroupMembership.RAW_CONTENT_URI\r\n","Creates the font based on the configured values.":"根据配置的值创建字体。\r\n","android.os.DropBoxManager.Entry.getTag()":"android.os.DropBoxManager.Entry.getTag()\r\n","android.content.pm.LauncherApps.Callback.onPackagesAvailable(java.lang.String[], android.os.UserHandle, boolean)":"android.content.pm.LauncherApps.Callback.onPackagesAvailable(java.lang.String[], android.os.UserHandle, boolean)\r\n","Called when an offloaded track is no longer valid and has been discarded by the system.":"当卸载的轨道不再有效并已被系统丢弃时调用。\r\n","android.provider.Settings.Secure.WIFI_WATCHDOG_WATCH_LIST":"android.provider.Settings.Secure.WIFI_WATCHDOG_WATCH_LIST\r\n","Launch an activity for which you would like a result when it finished.":"启动一项活动，您希望在活动结束时获得结果。\r\n","Constructs a new Builder from a given VibrationAttributes.":"从给定的 VibrationAttributes 构造一个新的 Builder。\r\n","android.media.MediaPlayer.DrmInfo.getPssh()":"android.media.MediaPlayer.DrmInfo.getPssh()\r\n","android.app.ActivityManager.RunningServiceInfo.flags":"android.app.ActivityManager.RunningServiceInfo.flags\r\n","Return the title to be displayed on this conversation.":"返回要在此对话中显示的标题。\r\n","The green component to encode from linear space":"从线性空间编码的绿色分量\r\n","android.content.ContentProvider.PipeDataWriter":"android.content.ContentProvider.PipeDataWriter\r\n","android.net.VpnService.Builder":"android.net.VpnService.Builder\r\n"," flag set?":" 标志设置？\r\n","android.provider.Settings.Global.WIFI_MAX_DHCP_RETRY_COUNT":"android.provider.Settings.Global.WIFI_MAX_DHCP_RETRY_COUNT\r\n","android.content.pm.PackageInstaller.Session.getChildSessionIds()":"android.content.pm.PackageInstaller.Session.getChildSessionIds()\r\n","#MEDIA_INFO_BUFFERING_END":"#MEDIA_INFO_BUFFERING_END\r\n","The channel type for DVB-T (terrestrial).":"DVB-T（地面）的频道类型。\r\n","The setting's current value, or 'def' if it is not defined\n            or not a valid float.":"设置的当前值，如果未定义则为 'def'\r\n            或不是有效的浮点数。\r\n","android.provider.Contacts.Extensions.PERSON_ID":"android.provider.Contacts.Extensions.PERSON_ID\r\n","MediaRecorder#getMetrics":"媒体记录器#getMetrics\r\n","AudioEffect#EFFECT_TYPE_AEC":"音频效果#EFFECT_TYPE_AEC\r\n","android.provider.Settings.Secure.DEVELOPMENT_SETTINGS_ENABLED":"android.provider.Settings.Secure.DEVELOPMENT_SETTINGS_ENABLED\r\n","android.provider.CallLog.Calls.USER_MISSED_NO_ANSWER":"android.provider.CallLog.Calls.USER_MISSED_NO_ANSWER\r\n","android.media.MediaCodec.Callback.onOutputFormatChanged(android.media.MediaCodec, android.media.MediaFormat)":"android.media.MediaCodec.Callback.onOutputFormatChanged(android.media.MediaCodec, android.media.MediaFormat)\r\n","Setting that specifies whether display color inversion is enabled.":"指定是否启用显示颜色反转的设置。\r\n","android.inputmethodservice.Keyboard.Key.label":"android.inputmethodservice.Keyboard.Key.label\r\n"," constants.  (E.g.,\n              <var>ImageFormat.NV21</var> (default), or\n              <var>ImageFormat.YV12</var>)":" 常数。 （例如。，\r\n              <var>ImageFormat.NV21</var>（默认），或\r\n              <var>ImageFormat.YV12</var>)\r\n","Currently not implemented.":"目前没有实施。\r\n","android.app.ActivityManager.RunningTaskInfo":"android.app.ActivityManager.RunningTaskInfo\r\n","android.media.MediaDrm.LogMessage.getTimestampMillis()":"android.media.MediaDrm.LogMessage.getTimestampMillis()\r\n","The right margin.":"右边距。\r\n","android.media.MediaRouter.RouteInfo.requestSetVolume(int)":"android.media.MediaRouter.RouteInfo.requestSetVolume(int)\r\n","android.app.appsearch.SearchResult.Builder.SearchResult$Builder(java.lang.String, java.lang.String)":"android.app.appsearch.SearchResult.Builder.SearchResult$Builder(java.lang.String, java.lang.String)\r\n","android.view.KeyEvent.Callback.onKeyUp(int, android.view.KeyEvent)":"android.view.KeyEvent.Callback.onKeyUp(int, android.view.KeyEvent)\r\n","android.provider.SimPhonebookContract.ElementaryFiles.CONTENT_TYPE":"android.provider.SimPhonebookContract.ElementaryFiles.CONTENT_TYPE\r\n","#RES_PACKAGE":"#RES_PACKAGE\r\n","android.provider.CalendarContract.Instances.query(android.content.ContentResolver, java.lang.String[], long, long)":"android.provider.CalendarContract.Instances.query（android.content.ContentResolver，java.lang.String[]，长，长）\r\n","Called when overall thermal throttling status changed.":"当整体热节流状态发生变化时调用。\r\n","android.app.assist.AssistStructure.ViewNode.getMinTextEms()":"android.app.assist.AssistStructure.ViewNode.getMinTextEms()\r\n","android.media.tv.TvInputInfo.Builder.TvInputInfo$Builder(android.content.Context, android.content.ComponentName)":"android.media.tv.TvInputInfo.Builder.TvInputInfo$Builder(android.content.Context, android.content.ComponentName)\r\n","the package name the matched document belongs to":"匹配文档所属的包名\r\n","Setting to record the input method used by default, holding the ID\n            of the desired method.":"设置记录默认使用的输入法，持有ID\r\n            所需的方法。\r\n","Based on ":"基于\r\n","Exception thrown when an attempt is made to construct a MediaCas object\n            using a CA_system_id that is not supported by the device":"尝试构造 MediaCas 对象时抛出异常\r\n            使用设备不支持的 CA_system_id\r\n","android.hardware.camera2.CameraOfflineSession.CameraOfflineSessionCallback.onReady(android.hardware.camera2.CameraOfflineSession)":"android.hardware.camera2.CameraOfflineSession.CameraOfflineSessionCallback.onReady(android.hardware.camera2.CameraOfflineSession)\r\n","the ImageWriter the callback is associated with.":"与回调关联的 ImageWriter。\r\n"," that can be used to launch the\n            main activity in the package. Returns ":" 可以用来启动\r\n            包中的主要活动。退货\r\n","android.provider.Settings.Global.getLong(android.content.ContentResolver, java.lang.String, long)":"android.provider.Settings.Global.getLong（android.content.ContentResolver，java.lang.String，长）\r\n","Interface definition for a class that will be called when the container's activity\n            receives an activity result.":"容器活动时将调用的类的接口定义\r\n            收到活动结果。\r\n","indicates if a key has been added that is usable,\n                which may trigger an attempt to resume playback on the media stream\n                if it is currently blocked waiting for a key.":"指示是否已添加可用的密钥，\r\n                这可能会触发尝试在媒体流上恢复播放\r\n                如果它当前被阻止等待密钥。\r\n","A callback object for receiving updates about the state of a camera extension session.":"用于接收有关相机扩展会话状态更新的回调对象。\r\n","android.hardware.Sensor\n            sensors":"android.hardware.Sensor\r\n            传感器\r\n","android.provider.ContactsContract.SettingsColumns.ACCOUNT_TYPE":"android.provider.ContactsContract.SettingsColumns.ACCOUNT_TYPE\r\n","android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl.revokeSession(android.view.inputmethod.InputMethodSession)":"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl.revokeSession(android.view.inputmethod.InputMethodSession)\r\n","android.provider.Browser.BookmarkColumns.FAVICON":"android.provider.Browser.BookmarkColumns.FAVICON\r\n","the duration in milliseconds if > 0, or either one of the sentinel values\n                ":"如果 > 0 或任一标记值，则以毫秒为单位的持续时间\r\n                \r\n","Top position in pixels, relative to the overlay view.":"相对于叠加视图的顶部位置（以像素为单位）。\r\n","Extra used to specify which mimetype should be prioritized in the QuickContacts UI.":"Extra 用于指定在 QuickContacts UI 中应优先处理哪种 mimetype。\r\n","android.provider.CalendarContract.Colors":"android.provider.CalendarContract.Colors\r\n","android.media.MediaCodecInfo.AudioCapabilities.getBitrateRange()":"android.media.MediaCodecInfo.AudioCapabilities.getBitrateRange()\r\n","android.os.StrictMode.OnVmViolationListener.onVmViolation(android.os.strictmode.Violation)":"android.os.StrictMode.OnVmViolationListener.onVmViolation(android.os.strictmode.Violation)\r\n","#SHOULD_SYNC":"#SHOULD_SYNC\r\n","\n                instances indicating the status for each key in the session":"\r\n                指示会话中每个键状态的实例\r\n","Get the value as set in ":"获取设置的值\r\n","android.hardware.camera2.CameraManager.AvailabilityCallback.onCameraUnavailable(java.lang.String)":"android.hardware.camera2.CameraManager.AvailabilityCallback.onCameraUnavailable(java.lang.String)\r\n","android.media.audiofx.DynamicsProcessing.Config":"android.media.audiofx.DynamicsProcessing.Config\r\n","android.app.appsearch.SetSchemaResponse.getDeletedTypes()":"android.app.appsearch.SetSchemaResponse.getDeletedTypes()\r\n","Builder class for a ":"生成器类\r\n","The accent color of the app link template for this channel.":"此频道的应用程序链接模板的强调色。\r\n","android.provider.CalendarContract.CalendarAlerts.CONTENT_URI":"android.provider.CalendarContract.CalendarAlerts.CONTENT_URI\r\n","Return the Uri this trigger was created for.":"返回创建此触发器的 Uri。\r\n","android.accessibilityservice.AccessibilityService.GestureResultCallback":"android.accessibilityservice.AccessibilityService.GestureResultCallback\r\n","A class with information on a single media item for use in browsing/searching media.":"一个包含单个媒体项信息的类，用于浏览/搜索媒体。\r\n","A user facing carrier name for specific carrier id ":"面向特定运营商 ID 的运营商名称的用户\r\n","Called whenever the receiver is passed new MIDI data.":"每当接收器传递新的 MIDI 数据时调用。\r\n","Returns the preference values if they exist, or defValues.\n            Throws ClassCastException if there is a preference with this name\n            that is not a Set.":"返回首选项值（如果存在）或 defValues。\r\n            如果存在具有此名称的首选项，则抛出 ClassCastException\r\n            那不是一个集合。\r\n","android.provider.Settings.System.WAIT_FOR_DEBUGGER":"android.provider.Settings.System.WAIT_FOR_DEBUGGER\r\n","Set to true if the system considers itself to currently be in a low\n            memory situation.":"如果系统认为自己当前处于低位，则设置为真\r\n            内存情况。\r\n","s in the notification.":"s 在通知中。\r\n","android.content.pm.ActivityInfo#CONFIG_FONT_SCALE\n            PackageManager.ActivityInfo.CONFIG_FONT_SCALE":"android.content.pm.ActivityInfo#CONFIG_FONT_SCALE\r\n            PackageManager.ActivityInfo.CONFIG_FONT_SCALE\r\n","android.app.ActivityManager.TaskDescription.ActivityManager$TaskDescription()":"android.app.ActivityManager.TaskDescription.ActivityManager$TaskDescription()\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityPostCreated(android.app.Activity, android.os.Bundle)":"android.app.Application.ActivityLifecycleCallbacks.onActivityPostCreated(android.app.Activity, android.os.Bundle)\r\n"," to attempt refreshing.":" 尝试刷新。\r\n","android.location.GnssMeasurementRequest.Builder.build()":"android.location.GnssMeasurementRequest.Builder.build()\r\n","Gets the right margin in mils (thousandths of an inch).":"获取以密耳（千分之一英寸）为单位的右边距。\r\n"," subdirectory of a single\n            status update detail.":" 单个子目录\r\n            状态更新细节。\r\n","android.media.MediaRecorder.MetricsConstants.AUDIO_CHANNELS":"android.media.MediaRecorder.MetricsConstants.AUDIO_CHANNELS\r\n","-style\n            interface of ":"-风格\r\n            的界面\r\n","android.provider.VoicemailContract.Status.CONTENT_URI":"android.provider.VoicemailContract.Status.CONTENT_URI\r\n","android.bluetooth.BluetoothAdapter.LeScanCallback.onLeScan(android.bluetooth.BluetoothDevice, int, byte[])":"android.bluetooth.BluetoothAdapter.LeScanCallback.onLeScan(android.bluetooth.BluetoothDevice, int, byte[])\r\n","HDR type for hdr10.":"hdr10 的 HDR 类型。\r\n","android.provider.CallLog.Calls.CACHED_MATCHED_NUMBER":"android.provider.CallLog.Calls.CACHED_MATCHED_NUMBER\r\n","android.app.appsearch.PutDocumentsRequest.Builder.build()":"android.app.appsearch.PutDocumentsRequest.Builder.build()\r\n","android.inputmethodservice.KeyboardView.OnKeyboardActionListener.swipeRight()":"android.inputmethodservice.KeyboardView.OnKeyboardActionListener.swipeRight()\r\n","android.media.audiofx.EnvironmentalReverb.EnvironmentalReverb(int, int)":"android.media.audiofx.EnvironmentalReverb.EnvironmentalReverb(int, int)\r\n","android.media.tv.TvContract.Programs.COLUMN_GLOBAL_CONTENT_ID":"android.media.tv.TvContract.Programs.COLUMN_GLOBAL_CONTENT_ID\r\n"," contains its corresponding elevation angle\n                     where +90 is directly above the listener, 0 is the horizontal plane, and -90 is\n                     directly below the listener.</li>":" 包含其对应的仰角\r\n                     其中 +90 是听者的正上方，0 是水平面，-90 是\r\n                     直接在听者下方。</li>\r\n"," with the arguments supplied to this\n            builder.":" 提供给这个的参数\r\n            建设者。\r\n","android.os.RecoverySystem.ProgressListener.onProgress(int)":"android.os.RecoverySystem.ProgressListener.onProgress(int)\r\n","Key to extract the video bitrate from being used\n            from the ":"从使用中提取视频比特率的关键\r\n            来自\r\n","android.provider.Contacts.Groups.DELETED_CONTENT_URI":"android.provider.Contacts.Groups.DELETED_CONTENT_URI\r\n","The most specific Organization (O) component of this name":"此名称的最具体的组织 (O) 组件\r\n","Request that the player prepare playback for a specific search query.":"请求播放器为特定搜索查询准备播放。\r\n","the density level. See ":"密度水平。看\r\n","android.hardware.fingerprint.FingerprintManager.CryptoObject.getSignature()":"android.hardware.fingerprint.FingerprintManager.CryptoObject.getSignature()\r\n","pid of the controller":"控制器的pid\r\n","android.provider.VoicemailContract.Status.DATA_CHANNEL_STATE_COMMUNICATION_ERROR":"android.provider.VoicemailContract.Status.DATA_CHANNEL_STATE_COMMUNICATION_ERROR\r\n","android.app.Notification.WearableExtender.getDismissalId()":"android.app.Notification.WearableExtender.getDismissalId()\r\n","android.media.MediaCodecInfo.CodecCapabilities.getDefaultFormat()":"android.media.MediaCodecInfo.CodecCapabilities.getDefaultFormat()\r\n","Does the message have only a text part (can also have a subject) with\n            no picture, slideshow, sound, etc.":"消息是否只有文本部分（也可以有主题）\r\n            没有图片、幻灯片、声音等。\r\n","android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_PERCEPTIBLE":"android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_PERCEPTIBLE\r\n","android.provider.Contacts.PeopleColumns.DISPLAY_NAME":"android.provider.Contacts.PeopleColumns.DISPLAY_NAME\r\n"," to describe the\n            way colors can be represented as tuples of numbers.":" 来描述\r\n            颜色可以表示为数字元组的方式。\r\n","The large icon for the car notification.":"汽车通知的大图标。\r\n","android.provider.CallLog.Calls.CONTENT_URI_WITH_VOICEMAIL":"android.provider.CallLog.Calls.CONTENT_URI_WITH_VOICEMAIL\r\n","RouteInfo#PLAYBACK_TYPE_REMOTE":"路线信息#PLAYBACK_TYPE_REMOTE\r\n","android.provider.ContactsContract.Directory.PHOTO_SUPPORT_THUMBNAIL_ONLY":"android.provider.ContactsContract.Directory.PHOTO_SUPPORT_THUMBNAIL_ONLY\r\n","android.os.Parcelable.ClassLoaderCreator.createFromParcel(android.os.Parcel, java.lang.ClassLoader)":"android.os.Parcelable.ClassLoaderCreator.createFromParcel(android.os.Parcel, java.lang.ClassLoader)\r\n","android.provider.CalendarContract.Instances.START_DAY":"android.provider.CalendarContract.Instances.START_DAY\r\n"," - low-level system error.\n            </ul>":" - 低级系统错误。\r\n            </ul>\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format16bitARGB4444":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format16bitARGB4444\r\n","The number of failed password attempts at which point the device or profile will\n                       be wiped.":"密码尝试失败的次数，此时设备或配置文件将\r\n                       被擦掉。\r\n","android.provider.ContactsContract.StatusUpdates.getPresenceIconResourceId(int)":"android.provider.ContactsContract.StatusUpdates.getPresenceIconResourceId(int)\r\n","android.media.audiofx.DynamicsProcessing.MbcBand.setAttackTime(float)":"android.media.audiofx.DynamicsProcessing.MbcBand.setAttackTime(浮动)\r\n","Constants for the contact records on a SIM card.":"SIM 卡上联系人记录的常量。\r\n","Returns the Intent held by the FilterComparison.  Do\n            not modify!":"返回 FilterComparison 持有的 Intent。做\r\n            不修改！\r\n","#EFFECT_INSERT":"#EFFECT_INSERT\r\n","android.mtp.MtpObjectInfo.Builder":"android.mtp.MtpObjectInfo.Builder\r\n","Creates a MeasuredText.":"创建一个 MeasuredText。\r\n","android.provider.ContactsContract.StreamItemsColumns.SYNC2":"android.provider.ContactsContract.StreamItemsColumns.SYNC2\r\n","android.media.MediaRouter.UserRouteInfo.setRemoteControlClient(android.media.RemoteControlClient)":"android.media.MediaRouter.UserRouteInfo.setRemoteControlClient(android.media.RemoteControlClient)\r\n","android.provider.CalendarContract.EventsColumns.ACCESS_LEVEL":"android.provider.CalendarContract.EventsColumns.ACCESS_LEVEL\r\n","android.inputmethodservice.InputMethodService.InputMethodSessionImpl.appPrivateCommand(java.lang.String, android.os.Bundle)":"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.appPrivateCommand(java.lang.String, android.os.Bundle)\r\n","ParcelFileDescriptor#MODE_READ_WRITE":"包裹文件描述符#MODE_READ_WRITE\r\n","desired value in decibels (dB).":"以分贝 (dB) 为单位的期望值。\r\n","android.provider.VoicemailContract.Status.NOTIFICATION_CHANNEL_STATE":"android.provider.VoicemailContract.Status.NOTIFICATION_CHANNEL_STATE\r\n","android.provider.ContactsContract.DataUsageStatColumns":"android.provider.ContactsContract.DataUsageStatColumns\r\n","Message type: inbox.":"消息类型：收件箱。\r\n","android.app.appsearch.SetSchemaResponse.Builder.build()":"android.app.appsearch.SetSchemaResponse.Builder.build()\r\n","Called when GNSS system has stopped.":"GNSS 系统停止时调用。\r\n","android.media.midi.MidiDeviceInfo.PortInfo":"android.media.midi.MidiDeviceInfo.PortInfo\r\n","A new array of 9 floats":"一个由 9 个浮点数组成的新数组\r\n","android.location.LocationRequest.Builder":"android.location.LocationRequest.Builder\r\n","android.provider.Telephony.MmsSms.CONTENT_CONVERSATIONS_URI":"android.provider.Telephony.MmsSms.CONTENT_CONVERSATIONS_URI\r\n","Notifies the cancellation of the animation.":"通知取消动画。\r\n"," + 1. The list is sorted from small to large. The\n                    first element is always 100. The last element is the zoom\n                    ratio of the maximum zoom value.":" + 1.列表从小到大排序。这\r\n                    第一个元素总是 100。最后一个元素是缩放\r\n                    最大缩放值的比率。\r\n","Called when the list of children is loaded or updated.":"在加载或更新子列表时调用。\r\n","android.media.tv.TvInputManager.TvInputCallback.onInputAdded(java.lang.String)":"android.media.tv.TvInputManager.TvInputCallback.onInputAdded(java.lang.String)\r\n","android.provider.Contacts.PeopleColumns.PHOTO_VERSION":"android.provider.Contacts.PeopleColumns.PHOTO_VERSION\r\n","The number of initial pings to perform that *may* be ignored if they\n            fail.":"执行该操作的初始 ping 次数*可能*会被忽略，如果它们\r\n            失败。\r\n","android.media.EncoderProfiles.AudioProfile.getProfile()":"android.media.EncoderProfiles.AudioProfile.getProfile()\r\n","The cached normalized(E164) version of the phone number, if it exists.":"电话号码的缓存规范化 (E164) 版本（如果存在）。\r\n","android.hardware.Camera.Parameters.setAutoExposureLock(boolean)":"android.hardware.Camera.Parameters.setAutoExposureLock（布尔值）\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format32bitARGB8888":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format32bitARGB8888\r\n","MIME type for a root.":"根的 MIME 类型。\r\n","conflictAlgorithm":"冲突算法\r\n","A single item that is part of the play queue.":"作为播放队列一部分的单个项目。\r\n","The time (in milliseconds) to run.  The timebase is\n                        ":"运行的时间（以毫秒为单位）。时基是\r\n                        \r\n","android.preference.PreferenceActivity.Header.getBreadCrumbShortTitle(android.content.res.Resources)":"android.preference.PreferenceActivity.Header.getBreadCrumbShortTitle(android.content.res.Resources)\r\n","#PROXY_CHANGE_ACTION":"#PROXY_CHANGE_ACTION\r\n","android.hardware.Camera.AutoFocusCallback.onAutoFocus(boolean, android.hardware.Camera)":"android.hardware.Camera.AutoFocusCallback.onAutoFocus（布尔值，android.hardware.Camera）\r\n","android.location.LocationRequest.Builder.build()":"android.location.LocationRequest.Builder.build()\r\n","android.provider.CalendarContract.AttendeesColumns.ATTENDEE_ID_NAMESPACE":"android.provider.CalendarContract.AttendeesColumns.ATTENDEE_ID_NAMESPACE\r\n","true if PreEq stage will be used, false otherwise. This can't be\n            changed later.":"如果将使用 PreEq 阶段，则为 true，否则为 false。这不可能\r\n            后来改了。\r\n","android.media.MediaCodecInfo.CodecProfileLevel.AVCProfileHigh422":"android.media.MediaCodecInfo.CodecProfileLevel.AVCProfileHigh422\r\n","DrmInfoStatus":"DrmInfo状态\r\n","android.app.Notification.Action.getExtras()":"android.app.Notification.Action.getExtras()\r\n","android.location.GnssNavigationMessage.Callback.onGnssNavigationMessageReceived(android.location.GnssNavigationMessage)":"android.location.GnssNavigationMessage.Callback.onGnssNavigationMessageReceived(android.location.GnssNavigationMessage)\r\n","android.provider.Settings.Global.RADIO_NFC":"android.provider.Settings.Global.RADIO_NFC\r\n","Key to extract the video capture frame rate\n            from the ":"关键提取视频采集帧率\r\n            来自\r\n","android.net.IpSecManager.SpiUnavailableException":"android.net.IpSecManager.SpiUnavailableException异常\r\n","Called when an app-op was ":"当应用操作被调用时调用\r\n","Retrieves the days with events for the Julian days starting at\n            \"startDay\" for \"numDays\".":"检索开始于 Julian 日的事件的日子\r\n            “numDays”的“startDay”。\r\n","The array index of optimal focus distance for use with\n            ":"最佳焦距数组索引\r\n            \r\n","android.content.ClipData.Item.ClipData$Item(android.content.Intent)":"android.content.ClipData.Item.ClipData$Item(android.content.Intent)\r\n","android.media.tv.TvContract.Programs.COLUMN_BROADCAST_GENRE":"android.media.tv.TvContract.Programs.COLUMN_BROADCAST_GENRE\r\n","android.os.StrictMode.OnThreadViolationListener.onThreadViolation(android.os.strictmode.Violation)":"android.os.StrictMode.OnThreadViolationListener.onThreadViolation(android.os.strictmode.Violation)\r\n"," field to be a view with the standard \"Latest Event\"\n            layout.":" 字段是具有标准“最新事件”的视图\r\n            布局。\r\n","current size in frames of the ":"帧中的当前大小\r\n","android.content.BroadcastReceiver.PendingResult.getResultCode()":"android.content.BroadcastReceiver.PendingResult.getResultCode()\r\n"," of the VPN interface, or\n                    ":" VPN 接口，或\r\n                    \r\n","#MIMETYPE":"#MIME类型\r\n"," to indicate that a call was automatically rejected by\n            system because an ongoing emergency call.":" 表示呼叫被自动拒绝\r\n            系统因为正在进行紧急呼叫。\r\n","Gets the control hints used to control routing session if available.":"获取用于控制路由会话的控制提示（如果可用）。\r\n","ContactsContract.Data#_ID":"ContactsContract.Data#_ID\r\n","#loadDrawableAsync(Context, OnDrawableLoadedListener, Handler) loadDrawableAsync":"#loadDrawableAsync（上下文，OnDrawableLoadedListener，处理程序）loadDrawableAsync\r\n","android.hardware.Camera.Parameters.getSupportedPictureSizes()":"android.hardware.Camera.Parameters.getSupportedPictureSizes()\r\n","Holds information associated with a track.":"保存与轨道关联的信息。\r\n","android.media.audiofx.DynamicsProcessing.Config.isPostEqInUse()":"android.media.audiofx.DynamicsProcessing.Config.isPostEqInUse()\r\n","Builder-like class for queue requests.":"用于队列请求的类似生成器的类。\r\n","android.media.tv.TvInputService.Session.notifyTracksChanged(java.util.List<android.media.tv.TvTrackInfo>)":"android.media.tv.TvInputService.Session.notifyTracksChanged(java.util.List<android.media.tv.TvTrackInfo>)\r\n","android.media.MediaDrm.KeyRequest.getData()":"android.media.MediaDrm.KeyRequest.getData()\r\n","some combination of the XXX_OK flags.":"XXX_OK 标志的一些组合。\r\n","Session2CommandGroup":"Session2Command组\r\n","android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_CACHED":"android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_CACHED\r\n","#FAIL_REASON_FONT_LOAD_ERROR":"#FAIL_REASON_FONT_LOAD_ERROR\r\n","android.media.MediaCasException.NotProvisionedException":"android.media.MediaCasException.NotProvisionedException\r\n"," for the given Uri.":" 对于给定的 Uri。\r\n","android.provider.Contacts.SettingsColumns.KEY":"android.provider.Contacts.SettingsColumns.KEY\r\n","#CAMERA_ERROR_UNKNOWN":"#CAMERA_ERROR_UNKNOWN\r\n","android.content.pm.PackageInstaller.SessionInfo.isStagedSessionFailed()":"android.content.pm.PackageInstaller.SessionInfo.isStagedSessionFailed()\r\n","True if this route is in the process of connecting.":"如果此路由正在连接过程中，则为真。\r\n","android.app.assist.AssistStructure.ViewNode.getTextLineCharOffsets()":"android.app.assist.AssistStructure.ViewNode.getTextLineCharOffsets()\r\n","Returns the maximum size of the ":"返回的最大尺寸\r\n","android.media.MediaCodec.MetricsConstants.ENCODER":"android.media.MediaCodec.MetricsConstants.ENCODER\r\n","android.app.Notification.Builder.getExtras()":"android.app.Notification.Builder.getExtras()\r\n","SharedElementCallback#onSharedElementsArrived(List, List, OnSharedElementsReadyListener)":"SharedElementCallback#onSharedElementsArrived（列表，列表，OnSharedElementsReadyListener）\r\n","android.media.audiofx.DynamicsProcessing.Stage.DynamicsProcessing$Stage(boolean, boolean)":"android.media.audiofx.DynamicsProcessing.Stage.DynamicsProcessing$Stage（布尔值，布尔值）\r\n","android.graphics.text.LineBreaker.Builder.build()":"android.graphics.text.LineBreaker.Builder.build()\r\n","A new non-null array of 2 floats":"2 个浮点数的新非空数组\r\n","android.nfc.tech.MifareClassic":"android.nfc.tech.MifareClassic\r\n","android.hardware.fingerprint.FingerprintManager.CryptoObject.getCipher()":"android.hardware.fingerprint.FingerprintManager.CryptoObject.getCipher()\r\n","android.app.usage.NetworkStats.Bucket.UID_REMOVED":"android.app.usage.NetworkStats.Bucket.UID_REMOVED\r\n","android.os.BugreportManager.BugreportCallback.onEarlyReportFinished()":"android.os.BugreportManager.BugreportCallback.onEarlyReportFinished()\r\n","The <strong>localized</strong> error message.\n            shown to the user. May be ":"<strong>本地化</strong>错误信息。\r\n            显示给用户。或许\r\n","android.provider.FontsContract.FontRequestCallback":"android.provider.FontsContract.FontRequestCallback\r\n","android.media.audiofx.DynamicsProcessing.Limiter.getRatio()":"android.media.audiofx.DynamicsProcessing.Limiter.getRatio()\r\n","android.provider.CalendarContract.ColorsColumns.TYPE_CALENDAR":"android.provider.CalendarContract.ColorsColumns.TYPE_CALENDAR\r\n","#getMaxExposureCompensation":"#getMaxExposureCompensation\r\n"," resulting from the composition of the primitives.":" 由图元的组合产生。\r\n","#authoritiesIterator()":"#authoritiesIterator()\r\n","android.graphics.BitmapFactory.Options.outHeight":"android.graphics.BitmapFactory.Options.outHeight\r\n","Total resource in the visual voicemail inbox that can be used, or\n            ":"可使用的可视语音信箱收件箱中的总资源，或\r\n            \r\n","android.os.MessageQueue.IdleHandler.queueIdle()":"android.os.MessageQueue.IdleHandler.queueIdle()\r\n","Map the memory and return the mapped region.":"映射内存并返回映射区域。\r\n","android.provider.Settings.System.getInt(android.content.ContentResolver, java.lang.String)":"android.provider.Settings.System.getInt(android.content.ContentResolver, java.lang.String)\r\n","android.media.MediaParser.SeekMap.isSeekable()":"android.media.MediaParser.SeekMap.isSeekable()\r\n","The maximum allowed volume where this session is playing.":"此会话正在播放的最大允许音量。\r\n","BluetoothProfile":"蓝牙配置文件\r\n","#onCaptureProcessStarted":"#onCaptureProcessStarted\r\n","android.provider.ContactsContract.GroupsColumns.RES_PACKAGE":"android.provider.ContactsContract.GroupsColumns.RES_PACKAGE\r\n","android.appwidget.AppWidgetProvider.onEnabled(android.content.Context)":"android.appwidget.AppWidgetProvider.onEnabled(android.content.Context)\r\n","android.provider.Telephony.TextBasedSmsColumns.STATUS_FAILED":"android.provider.Telephony.TextBasedSmsColumns.STATUS_FAILED\r\n","android.graphics.ColorSpace.RenderIntent":"android.graphics.ColorSpace.RenderIntent\r\n","android.media.session.PlaybackState.CustomAction":"android.media.session.PlaybackState.CustomAction\r\n","This extra specifies a messaging app’s unique ID(s) for the contact(s), used with ":"这个 extra 为联系人指定消息应用程序的唯一 ID，与\r\n","android.media.MediaCodec.IncompatibleWithBlockModelException":"android.media.MediaCodec.IncompatibleWithBlockModelException\r\n","android.content.pm.ActivityInfo#CONFIG_LOCALE\n            PackageManager.ActivityInfo.CONFIG_LOCALE":"android.content.pm.ActivityInfo#CONFIG_LOCALE\r\n            PackageManager.ActivityInfo.CONFIG_LOCALE\r\n"," if the property is an integer type.":" 如果属性是整数类型。\r\n","android.inputmethodservice.Keyboard.Key.gap":"android.inputmethodservice.Keyboard.Key.gap\r\n","android.provider.ContactsContract.Directory.EXPORT_SUPPORT":"android.provider.ContactsContract.Directory.EXPORT_SUPPORT\r\n","Interface definition of a callback to be invoked when the app\n            can do DRM configuration (get/set properties) before the session\n            is opened.":"应用程序调用时调用的回调的接口定义\r\n            可以在会话之前进行 DRM 配置（获取/设置属性）\r\n            被打开。\r\n","android.os.VibrationEffect.Composition.PRIMITIVE_CLICK":"android.os.VibrationEffect.Composition.PRIMITIVE_CLICK\r\n","android.provider.CalendarContract.AttendeesColumns.ATTENDEE_NAME":"android.provider.CalendarContract.AttendeesColumns.ATTENDEE_NAME\r\n","human readable effect implementor name":"人类可读的效果实现者名称\r\n"," that provides\n            all of the standard behavior for an input method session.":" 提供\r\n            输入法会话的所有标准行为。\r\n","android.app.assist.AssistStructure.ViewNode.getVisibility()":"android.app.assist.AssistStructure.ViewNode.getVisibility()\r\n","error status":"错误状态\r\n","Base class defines a factory object that is called each time the drawable\n            is resized (has a new width or height).":"基类定义了一个工厂对象，每次绘制时都会调用该对象\r\n            调整大小（具有新的宽度或高度）。\r\n"," that is to be used to communicate\n            with the ":" 那是用来交流的\r\n            与\r\n","android.media.MediaCodecInfo.CodecCapabilities.FEATURE_PartialFrame":"android.media.MediaCodecInfo.CodecCapabilities.FEATURE_PartialFrame\r\n","android.os.Build.VERSION.CODENAME":"android.os.Build.VERSION.CODENAME\r\n","android.media.session.PlaybackState.Builder.PlaybackState$Builder(android.media.session.PlaybackState)":"android.media.session.PlaybackState.Builder.PlaybackState$Builder(android.media.session.PlaybackState)\r\n","the chosen configuration.":"选择的配置。\r\n","android.app.admin.SystemUpdatePolicy.ValidationFailedException.ERROR_DUPLICATE_OR_OVERLAP":"android.app.admin.SystemUpdatePolicy.ValidationFailedException.ERROR_DUPLICATE_OR_OVERLAP\r\n","Retrieve the error code associated with the SessionException":"检索与 SessionException 关联的错误代码\r\n","Get the index of the notification action, if any, that was specified as the primary\n            action.":"获取指定为主要通知操作的索引（如果有）\r\n            行动。\r\n","the notification id":"通知编号\r\n","Configuration for a property containing a double-precision decimal number.":"包含双精度十进制数的属性的配置。\r\n","android.hardware.Camera.PictureCallback.onPictureTaken(byte[], android.hardware.Camera)":"android.hardware.Camera.PictureCallback.onPictureTaken(byte[], android.hardware.Camera)\r\n","an extra code, specific to the error type":"一个额外的代码，特定于错误类型\r\n","android.provider.ContactsContract.ProviderStatus.CONTENT_TYPE":"android.provider.ContactsContract.ProviderStatus.CONTENT_TYPE\r\n","The value of the field as an ":"该字段的值作为\r\n","Start fast forwarding.":"开始快进。\r\n","#openWrite":"#openWrite\r\n","The color long to create a ":"颜色长创造一个\r\n","An integer value indicating the current voice service state.":"指示当前语音服务状态的整数值。\r\n"," to indicate that a call was blocked because the user\n            configured a contact to be sent directly to voicemail.":" 表示呼叫被阻止，因为用户\r\n            配置联系人直接发送到语音信箱。\r\n","Indicates whether the bubble should be visually suppressed from the bubble stack if the\n            user is viewing the same content outside of the bubble.":"指示是否应在视觉上从气泡堆栈中抑制气泡\r\n            用户正在气泡外查看相同的内容。\r\n","android.provider.Settings.Global.WIFI_ON":"android.provider.Settings.Global.WIFI_ON\r\n","android.net.sip.SipProfile.Builder":"android.net.sip.SipProfile.Builder\r\n","Called when dismissing Keyguard has been cancelled, i.":"当解雇 Keyguard 已被取消时调用，i。\r\n","android.provider.Telephony.BaseMmsColumns.MESSAGE_ID":"android.provider.Telephony.BaseMmsColumns.MESSAGE_ID\r\n","#POSITION_SYNCHRONIZATION_NONE":"#POSITION_SYNCHRONIZATION_NONE\r\n","BluetoothHeadset":"蓝牙耳机\r\n","Execute a vendor-specific command using the trusted system VoiceInteractionService.":"使用可信系统 VoiceInteractionService 执行特定于供应商的命令。\r\n","android.provider.Settings.System.canWrite(android.content.Context)":"android.provider.Settings.System.canWrite(android.content.Context)\r\n","Describes the conditional access system used to scramble a track.":"描述用于加扰轨道的条件访问系统。\r\n","android.media.MediaDrm.ErrorCodes.ERROR_GENERIC_PLUGIN":"android.media.MediaDrm.ErrorCodes.ERROR_GENERIC_PLUGIN\r\n","#onSetSurface":"#onSetSurface\r\n","android.provider.CalendarContract.Calendars.CONTENT_URI":"android.provider.CalendarContract.Calendars.CONTENT_URI\r\n"," if the\n            structure was created for assist purposes.":" 如果\r\n            结构是为协助目的而创建的。\r\n","android.media.MediaMetadataEditor.putObject(int, java.lang.Object)":"android.media.MediaMetadataEditor.putObject(int, java.lang.Object)\r\n","Ogg media file format":"Ogg 媒体文件格式\r\n","android.provider.CalendarContract.EventsColumns.SYNC_DATA10":"android.provider.CalendarContract.EventsColumns.SYNC_DATA10\r\n","android.media.audiofx.Equalizer.Settings.Equalizer$Settings(java.lang.String)":"android.media.audiofx.Equalizer.Settings.Equalizer$Settings(java.lang.String)\r\n","android.content.pm.LauncherApps.ShortcutQuery.FLAG_MATCH_CACHED":"android.content.pm.LauncherApps.ShortcutQuery.FLAG_MATCH_CACHED\r\n","a start hyphen edit for the line.":"该行的开始连字符编辑。\r\n","Activity Action: Show a settings dialog containing settings to enable internet\n            connection.":"活动操作：显示一个设置对话框，其中包含启用互联网的设置\r\n            联系。\r\n","android.provider.ContactsContract.Settings.CONTENT_TYPE":"android.provider.ContactsContract.Settings.CONTENT_TYPE\r\n","android.provider.ContactsContract.QuickContact.EXTRA_MODE":"android.provider.ContactsContract.QuickContact.EXTRA_MODE\r\n","android.app.TaskStackBuilder.startActivities(android.os.Bundle)":"android.app.TaskStackBuilder.startActivities(android.os.Bundle)\r\n","android.drm.DrmStore.Playback.DrmStore$Playback()":"android.drm.DrmStore.Playback.DrmStore$Playback()\r\n","android.provider.Telephony.ServiceStateTable.DATA_REG_STATE":"android.provider.Telephony.ServiceStateTable.DATA_REG_STATE\r\n","Indicates that one or more packages have become unavailable.":"表示一个或多个包已变得不可用。\r\n","MidiDevice":"Midi设备\r\n","AudioManager#AUDIO_SESSION_ID_GENERATE":"音频管理器#AUDIO_SESSION_ID_GENERATE\r\n","Represents that the file could not be found.":"表示找不到文件。\r\n","Authentication type.":"身份验证类型。\r\n","Version number that is updated whenever this row or its related data\n            changes.":"每当此行或其相关数据更新时的版本号\r\n            变化。\r\n","android.media.audiofx.DynamicsProcessing.MbcBand.getPostGain()":"android.media.audiofx.DynamicsProcessing.MbcBand.getPostGain()\r\n","android.content.pm.PackageInstaller.SessionInfo.getAppLabel()":"android.content.pm.PackageInstaller.SessionInfo.getAppLabel()\r\n"," -\n                bandwidth information is available (as ":" -\r\n                带宽信息可用（如\r\n","height of the picture":"图片的高度\r\n","android.provider.VoicemailContract.Status.CONFIGURATION_STATE_CAN_BE_CONFIGURED":"android.provider.VoicemailContract.Status.CONFIGURATION_STATE_CAN_BE_CONFIGURED\r\n"," that corresponds to a ":" 对应于\r\n","android.provider.FontsContract.Columns.RESULT_CODE":"android.provider.FontsContract.Columns.RESULT_CODE\r\n","\n                          are the value of the ":"\r\n                          是的价值\r\n","The operation that changed.":"改变的操作。\r\n","android.hardware.biometrics.BiometricPrompt.AuthenticationCallback.onAuthenticationHelp(int, java.lang.CharSequence)":"android.hardware.biometrics.BiometricPrompt.AuthenticationCallback.onAuthenticationHelp(int, java.lang.CharSequence)\r\n","android.provider.ContactsContract.StatusColumns.CAPABILITY_HAS_CAMERA":"android.provider.ContactsContract.StatusColumns.CAPABILITY_HAS_CAMERA\r\n","android.net.sip.SipSession.State.INCOMING_CALL":"android.net.sip.SipSession.State.INCOMING_CALL\r\n",", or\n                ":"， 或者\r\n                \r\n","#REQUEST_TYPE_SHORTCUT":"#REQUEST_TYPE_SHORTCUT\r\n","android.media.MediaDrm.MetricsConstants.CLOSE_SESSION_ERROR_COUNT":"android.media.MediaDrm.MetricsConstants.CLOSE_SESSION_ERROR_COUNT\r\n","AudioManager#AUDIOFOCUS_LOSS_TRANSIENT":"音频管理器#AUDIOFOCUS_LOSS_TRANSIENT\r\n","MediaCodec#getMetrics":"媒体编解码器#getMetrics\r\n","android.provider.Browser.getAllBookmarks(android.content.ContentResolver)":"android.provider.Browser.getAllBookmarks(android.content.ContentResolver)\r\n","Contains all MMS and SMS messages.":"包含所有彩信和短信。\r\n","Required - The person displayed for any messages that are sent by the\n            user. Any messages added with ":"必需 - 显示的人发送的任何消息\r\n            用户。添加的任何消息\r\n","android.provider.SimPhonebookContract.SimRecords.SUBSCRIPTION_ID":"android.provider.SimPhonebookContract.SimRecords.SUBSCRIPTION_ID\r\n","AvoidXfermode xfermode will draw the src everywhere except on top of the\n            opColor or, depending on the Mode, draw only on top of the opColor.":"AvoidXfermode xfermode 将在除顶部之外的任何地方绘制 src\r\n            opColor 或者，根据模式，仅在 opColor 之上绘制。\r\n","Columns for the \"threads\" table used by MMS and SMS.":"MMS 和 SMS 使用的“线程”表的列。\r\n","The constructed Notification will be posted on this\n                       ":"构造好的Notification会发布到这个\r\n                       \r\n","Get a top-level shared/external storage directory for placing files of a\n            particular type.":"获取顶级共享/外部存储目录，用于放置文件\r\n            特定类型。\r\n","Adds the drawable to the end of the list of contained drawables.":"将可绘制对象添加到包含的可绘制对象列表的末尾。\r\n","android.media.metrics.TrackChangeEvent.Builder":"android.media.metrics.TrackChangeEvent.Builder\r\n","android.media.session.MediaSession.Callback.onFastForward()":"android.media.session.MediaSession.Callback.onFastForward()\r\n","Returns the result code.":"返回结果代码。\r\n","android.hardware.camera2.CaptureRequest.Key.equals(java.lang.Object)":"android.hardware.camera2.CaptureRequest.Key.equals(java.lang.Object)\r\n","android.app.ActivityManager.RunningTaskInfo.numRunning":"android.app.ActivityManager.RunningTaskInfo.numRunning\r\n","android.provider.Contacts.Extensions.DEFAULT_SORT_ORDER":"android.provider.Contacts.Extensions.DEFAULT_SORT_ORDER\r\n","human readable effect name":"人类可读的效果名称\r\n","The metadata value associated with the given key. Returns null\n            if the key is not found.":"与给定键关联的元数据值。返回空\r\n            如果找不到密钥。\r\n","android.content.ClipData.Item":"android.content.ClipData.Item\r\n"," broadcast\n            when instances of this AppWidget provider have been restored from backup.":" 播送\r\n            当此 AppWidget 提供程序的实例已从备份中恢复时。\r\n","the current offline session":"当前离线会话\r\n","android.app.admin.SecurityLog.SecurityEvent.getTag()":"android.app.admin.SecurityLog.SecurityEvent.getTag()\r\n","android.provider.Contacts.PresenceColumns.PRESENCE_CUSTOM_STATUS":"android.provider.Contacts.PresenceColumns.PRESENCE_CUSTOM_STATUS\r\n","android.provider.ContactsContract.Groups.CONTENT_URI":"android.provider.ContactsContract.Groups.CONTENT_URI\r\n","The character set of the subject, if present.":"主题的字符集（如果存在）。\r\n","The id of the requested media.":"请求媒体的 ID。\r\n","android.provider.CalendarContract.Instances.ENTERPRISE_CONTENT_BY_DAY_URI":"android.provider.CalendarContract.Instances.ENTERPRISE_CONTENT_BY_DAY_URI\r\n","Create a default Options object, which if left unchanged will give\n            the same result from the decoder as if null were passed.":"创建一个默认的 Options 对象，如果保持不变，它将给出\r\n            来自解码器的结果与传递 null 的结果相同。\r\n","android.media.projection.MediaProjection.Callback":"android.media.projection.MediaProjection.Callback\r\n","android.accessibilityservice.AccessibilityService.SoftKeyboardController.switchToInputMethod(java.lang.String)":"android.accessibilityservice.AccessibilityService.SoftKeyboardController.switchToInputMethod(java.lang.String)\r\n","The media performance class of the device or 0 if none.":"设备的媒体性能等级，如果没有则为 0。\r\n","android.location.GpsStatus.Listener.onGpsStatusChanged(int)":"android.location.GpsStatus.Listener.onGpsStatusChanged(int)\r\n","android.graphics.BitmapFactory.Options.inTempStorage":"android.graphics.BitmapFactory.Options.inTempStorage\r\n","Threads#COMMON_THREAD":"线程#COMMON_THREAD\r\n","android.bluetooth.BluetoothLeAudio.close()":"android.bluetooth.BluetoothLeAudio.close()\r\n","SetSchemaResponse":"设置架构响应\r\n","android.app.slice.Slice.Builder.Slice$Builder(android.net.Uri, android.app.slice.SliceSpec)":"android.app.slice.Slice.Builder.Slice$Builder(android.net.Uri, android.app.slice.SliceSpec)\r\n","android.content.pm.PackageInstaller.SessionInfo.isCommitted()":"android.content.pm.PackageInstaller.SessionInfo.isCommitted()\r\n","PackageInstaller.Session":"PackageInstaller.Session\r\n","ContactsContract.Contacts#_ID":"联系人Contract.Contacts#_ID\r\n","android.location.GnssMeasurementsEvent.Callback.STATUS_NOT_ALLOWED":"android.location.GnssMeasurementsEvent.Callback.STATUS_NOT_ALLOWED\r\n","Provides a localized string that can be shown as the title for an app setting that\n            enables authentication with ":"提供可显示为应用设置标题的本地化字符串\r\n            启用身份验证\r\n","android.media.MediaMuxer.OutputFormat.MUXER_OUTPUT_WEBM":"android.media.MediaMuxer.OutputFormat.MUXER_OUTPUT_WEBM\r\n","Called when the animation ends.":"动画结束时调用。\r\n","The channel type for DTMB (terrestrial).":"DTMB（地面）的频道类型。\r\n","the resource ID for the proper presence icon":"正确存在图标的资源 ID\r\n","android.media.AudioManager.OnCommunicationDeviceChangedListener":"android.media.AudioManager.OnCommunicationDeviceChangedListener\r\n","android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_FOREGROUND_SERVICE":"android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_FOREGROUND_SERVICE\r\n","User denied consent to share the bugreport.":"用户拒绝同意共享错误报告。\r\n","The authority of the Directory Provider.":"目录提供者的权限。\r\n","android.app.Fragment.InstantiationException":"android.app.Fragment.InstantiationException\r\n","Override to handle requests to stop playback.":"覆盖以处理停止播放的请求。\r\n",". 0 means the camera is not zoomed.":". 0 表示相机不缩放。\r\n","The date the call occured, in milliseconds since the epoch":"呼叫发生的日期，自纪元以来的毫秒数\r\n","android.provider.CalendarContract.RemindersColumns.MINUTES":"android.provider.CalendarContract.RemindersColumns.MINUTES\r\n","android.provider.BlockedNumberContract.BlockedNumbers.COLUMN_ORIGINAL_NUMBER":"android.provider.BlockedNumberContract.BlockedNumbers.COLUMN_ORIGINAL_NUMBER\r\n","Sets which restricted permissions to be allowlisted for the app.":"设置要为应用列入白名单的受限权限。\r\n","Contains information about how to create the search session.":"包含有关如何创建搜索会话的信息。\r\n","Flag indicating that a document can be copied to another location\n            within the same document provider.":"指示文档可以复制到另一个位置的标志\r\n            在同一个文档提供者中。\r\n","PageRange#ALL_PAGES":"页面范围#ALL_PAGES\r\n","android.provider.ContactsContract.Directory.DEFAULT":"android.provider.ContactsContract.Directory.DEFAULT\r\n","Constants and helpers for the Calendars table, which contains details for\n            individual calendars.":"Calendars 表的常量和助手，其中包含有关的详细信息\r\n            个人日历。\r\n","This method returns an iterator object that can be used to iterate over\n            all values of the metadata.":"此方法返回可用于迭代的迭代器对象\r\n            元数据的所有值。\r\n","the fully constructed Notification.":"完全构建的通知。\r\n","android.provider.ContactsContract.Directory.PHOTO_SUPPORT_FULL":"android.provider.ContactsContract.Directory.PHOTO_SUPPORT_FULL\r\n","void someFunction(inout Parcelable)":"void someFunction(inout Parcelable)\r\n","android.media.EncoderProfiles.VideoProfile.getBitrate()":"android.media.EncoderProfiles.VideoProfile.getBitrate()\r\n","android.opengl.ETC1Util.ETC1Texture.getData()":"android.opengl.ETC1Util.ETC1Texture.getData()\r\n","current white balance. null if white balance setting is not\n                    supported.":"当前的白平衡。如果白平衡设置不是 null\r\n                    支持的。\r\n","android.provider.Contacts.PhotosColumns.SYNC_ERROR":"android.provider.Contacts.PhotosColumns.SYNC_ERROR\r\n","android.app.assist.AssistStructure.ViewNode.getInputType()":"android.app.assist.AssistStructure.ViewNode.getInputType()\r\n","android.media.MediaCodecInfo.AudioCapabilities.getSupportedSampleRates()":"android.media.MediaCodecInfo.AudioCapabilities.getSupportedSampleRates()\r\n","RemoteControlClient#setPlaybackState(int)":"RemoteControlClient#setPlaybackState(int)\r\n"," when a request is of the\n            ":" 当一个请求是\r\n            \r\n","android.provider.CalendarContract.CalendarAlerts.CONTENT_URI_BY_INSTANCE":"android.provider.CalendarContract.CalendarAlerts.CONTENT_URI_BY_INSTANCE\r\n","android.media.MediaCas.EventListener.onPluginStatusUpdate(android.media.MediaCas, int, int)":"android.media.MediaCas.EventListener.onPluginStatusUpdate(android.media.MediaCas, int, int)\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format16bitBGR565":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format16bitBGR565\r\n","Interface definition for a callback to be invoked when the value of this\n            ":"当 this 的值被调用时回调的接口定义\r\n            \r\n","android.provider.ContactsContract.GroupsColumns.DATA_SET":"android.provider.ContactsContract.GroupsColumns.DATA_SET\r\n","If this is true and the contact has a higher resolution photo\n            available, it is returned. If false, this function always tries to get the thumbnail":"如果这是真的并且联系人有更高分辨率的照片\r\n            可用，它被返回。如果为 false，此函数总是尝试获取缩略图\r\n","android.media.MediaMetadata.Builder":"android.media.MediaMetadata.Builder\r\n","android.media.audiofx.EnvironmentalReverb.getReverbLevel()":"android.media.audiofx.EnvironmentalReverb.getReverbLevel()\r\n","Gets the page width in PostScript points (1/72th of an inch).":"获取以 PostScript 点（1/72 英寸）为单位的页面宽度。\r\n","Align specifies how drawText aligns its text relative to the\n            [x,y] coordinates.":"Align 指定 drawText 如何相对于\r\n            [x,y] 坐标。\r\n"," has changed, and this row needs\n            to be synchronized by its owning account.":" 已经改变，这一行需要\r\n            由其拥有的帐户同步。\r\n","android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentActivityCreated(android.app.FragmentManager, android.app.Fragment, android.os.Bundle)":"android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentActivityCreated(android.app.FragmentManager, android.app.Fragment, android.os.Bundle)\r\n","The private dirty pages used by dalvik heap.":"dalvik 堆使用的私有脏页。\r\n","phoneCall":"电话\r\n","android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl":"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl\r\n","the list of routes that have been added. It's never empty.":"已添加的路由列表。它永远不会是空的。\r\n","android.media.MediaSession2.SessionCallback":"android.media.MediaSession2.SessionCallback\r\n","android.provider.ContactsContract.Intents.METADATA_MIMETYPE":"android.provider.ContactsContract.Intents.METADATA_MIMETYPE\r\n","The description of this TV channel.":"这个电视频道的描述。\r\n","Gets the current flash mode setting. -or- Sets the flash mode.":"获取当前的闪光灯模式设置。 - 或 - 设置闪光灯模式。\r\n","android.app.appsearch.AppSearchManager.SearchContext.getDatabaseName()":"android.app.appsearch.AppSearchManager.SearchContext.getDatabaseName()\r\n","Constant for the camera":"相机常数\r\n","the port type":"端口类型\r\n","android.provider.Contacts.People.PRIMARY_ORGANIZATION_ID":"android.provider.Contacts.People.PRIMARY_ORGANIZATION_ID\r\n","android.net.sip.SipSession.Listener.onRingingBack(android.net.sip.SipSession)":"android.net.sip.SipSession.Listener.onRingingBack(android.net.sip.SipSession)\r\n","android.provider.Settings.System.VIBRATE_ON":"android.provider.Settings.System.VIBRATE_ON\r\n","an intent containing the KeyEvent as an\n                       extra":"包含 KeyEvent 作为\r\n                       额外的\r\n","StateCallback#onConfigured(CameraExtensionSession)":"StateCallback#onConfigured（CameraExtensionSession）\r\n","Performs validation over the request and throws the runtime exception\n            ":"对请求执行验证并抛出运行时异常\r\n            \r\n","android.app.backup.BackupAgent.onRestoreFile(android.os.ParcelFileDescriptor, long, java.io.File, int, long, long)":"android.app.backup.BackupAgent.onRestoreFile（android.os.ParcelFileDescriptor，长，java.io.File，int，长，长）\r\n","Sets the UID that initiated the package installation.":"设置启动包安装的 UID。\r\n","number of bands for this MBC stage. Can't be changed while effect is\n            running":"此 MBC 阶段的频段数。效果期间无法更改\r\n            跑步\r\n","android.media.session.MediaController.TransportControls.sendCustomAction(java.lang.String, android.os.Bundle)":"android.media.session.MediaController.TransportControls.sendCustomAction(java.lang.String, android.os.Bundle)\r\n","bound file descriptor":"绑定文件描述符\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV420PackedPlanar":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV420PackedPlanar\r\n","The content:// style URI for this table":"此表的 content:// 样式 URI\r\n","AttributionSource":"归因来源\r\n"," if dynamic sensor discovery is supported, ":" 如果支持动态传感器发现，\r\n","android.media.audiofx.DynamicsProcessing.Limiter.setRatio(float)":"android.media.audiofx.DynamicsProcessing.Limiter.setRatio（浮动）\r\n","android.provider.Settings.Secure.ACCESSIBILITY_ENABLED":"android.provider.Settings.Secure.ACCESSIBILITY_ENABLED\r\n","android.opengl.GLU.gluProject(float, float, float, float[], int, float[], int, int[], int, float[], int)":"android.opengl.GLU.gluProject（浮动、浮动、浮动、浮动[]、整数、浮动[]、整数、整数[]、整数、浮动[]、整数）\r\n","android.database.sqlite.SQLiteDatabase.OpenParams.getErrorHandler()":"android.database.sqlite.SQLiteDatabase.OpenParams.getErrorHandler()\r\n","android.inputmethodservice.KeyboardView.OnKeyboardActionListener.onPress(int)":"android.inputmethodservice.KeyboardView.OnKeyboardActionListener.onPress(int)\r\n","android.content.pm.LauncherApps.PinItemRequest.REQUEST_TYPE_APPWIDGET":"android.content.pm.LauncherApps.PinItemRequest.REQUEST_TYPE_APPWIDGET\r\n","Returns a bit mask of ":"返回位掩码\r\n","android.provider.Telephony.Carriers":"android.provider.Telephony.Carriers\r\n","The server version of the photo":"照片的服务器版本\r\n","android.hardware.Camera.Parameters.getSupportedPreviewSizes()":"android.hardware.Camera.Parameters.getSupportedPreviewSizes()\r\n",",\n              this should be the desired buffer size\n              for the ":",\r\n              这应该是所需的缓冲区大小\r\n              为了\r\n","android.provider.ContactsContract.ContactStatusColumns":"android.provider.ContactsContract.ContactStatusColumns\r\n","the HTTP Referer for the download":"下载的 HTTP Referer\r\n","android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC8":"android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC8\r\n","The data usage of the call in bytes.":"调用的数据使用量（以字节为单位）。\r\n","android.media.MediaCodec.MetricsConstants.MODE_VIDEO":"android.media.MediaCodec.MetricsConstants.MODE_VIDEO\r\n","UUID identifying the effect type. May be one of:\n            ":"标识效果类型的 UUID。可能是以下之一：\r\n            \r\n","android.provider.Contacts.ExtensionsColumns.VALUE":"android.provider.Contacts.ExtensionsColumns.VALUE\r\n","android.media.MediaDrm.MetricsConstants.KEY_STATUS_EXPIRED_COUNT":"android.media.MediaDrm.MetricsConstants.KEY_STATUS_EXPIRED_COUNT\r\n","Returns true if this node currently had input focus at the time that the\n            structure was collected.":"如果此节点当前具有输入焦点，则返回 true\r\n            结构被收集。\r\n","android.app.NotificationManager.Policy.CONVERSATION_SENDERS_IMPORTANT":"android.app.NotificationManager.Policy.CONVERSATION_SENDERS_IMPORTANT\r\n","android.os.RecoverySystem.ProgressListener":"android.os.RecoverySystem.ProgressListener\r\n","the unmodifiable list of currently selected routes":"当前选定路线的不可修改列表\r\n","android.provider.CallLog.Calls.getLastOutgoingCall(android.content.Context)":"android.provider.CallLog.Calls.getLastOutgoingCall(android.content.Context)\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV422SemiPlanar":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV422SemiPlanar\r\n","android.app.ActivityManager.RunningServiceInfo.FLAG_PERSISTENT_PROCESS":"android.app.ActivityManager.RunningServiceInfo.FLAG_PERSISTENT_PROCESS\r\n","the Uri used to observe ":"用于观察的Uri\r\n","android.media.tv.TvContract.Channels.VIDEO_RESOLUTION_FHD":"android.media.tv.TvContract.Channels.VIDEO_RESOLUTION_FHD\r\n","android.media.audiofx.EnvironmentalReverb.setReflectionsDelay(int)":"android.media.audiofx.EnvironmentalReverb.setReflectionsDelay(int)\r\n"," if the underlying\n                    content provider returns ":" 如果基础\r\n                    内容提供商返回\r\n","Constructs a new Builder with the defaults.":"使用默认值构造一个新的 Builder。\r\n","autofill type as defined by ":"定义的自动填充类型\r\n","android.app.appsearch.StorageInfo.Builder.build()":"android.app.appsearch.StorageInfo.Builder.build()\r\n","android.provider.Telephony.ThreadsColumns.READ":"android.provider.Telephony.ThreadsColumns.READ\r\n","android.provider.ContactsContract.Directory.PACKAGE_NAME":"android.provider.ContactsContract.Directory.PACKAGE_NAME\r\n","android.provider.Settings.Secure.ACCESSIBILITY_SPEAK_PASSWORD":"android.provider.Settings.Secure.ACCESSIBILITY_SPEAK_PASSWORD\r\n","The destination array, cannot be null, its length\n                              must be >= 2":"目标数组，不能为空，它的长度\r\n                              必须 >= 2\r\n","android.provider.Telephony.BaseMmsColumns.MESSAGE_BOX_DRAFTS":"android.provider.Telephony.BaseMmsColumns.MESSAGE_BOX_DRAFTS\r\n","Turn this item into text, regardless of the type of data it\n            actually contains.":"将此项目转换为文本，无论它的数据类型如何\r\n            实际上包含。\r\n","The session state has been invalidated.":"会话状态已失效。\r\n","android.provider.Telephony.Carriers.CONTENT_URI":"android.provider.Telephony.Carriers.CONTENT_URI\r\n","android.provider.Settings.System.ALARM_ALERT":"android.provider.Settings.System.ALARM_ALERT\r\n","android.provider.CalendarContract.CalendarAlertsColumns.RECEIVED_TIME":"android.provider.CalendarContract.CalendarAlertsColumns.RECEIVED_TIME\r\n","android.app.KeyguardManager.KeyguardLock.disableKeyguard()":"android.app.KeyguardManager.KeyguardLock.disableKeyguard()\r\n","android.graphics.ColorSpace.Rgb.toLinear(float[])":"android.graphics.ColorSpace.Rgb.toLinear(float[])\r\n","TvView":"电视视窗\r\n","android.accessibilityservice.AccessibilityService.GestureResultCallback.onCompleted(android.accessibilityservice.GestureDescription)":"android.accessibilityservice.AccessibilityService.GestureResultCallback.onCompleted(android.accessibilityservice.GestureDescription)\r\n","android.app.ActivityManager.RunningServiceInfo.foreground":"android.app.ActivityManager.RunningServiceInfo.foreground\r\n"," events\n            that occured.":" 事件\r\n            那发生了。\r\n"," if this session will be staged and applied at next reboot.":" 如果此会话将在下次重新启动时上演和应用。\r\n","android.media.audiofx.AudioEffect.OnEnableStatusChangeListener.onEnableStatusChange(android.media.audiofx.AudioEffect, boolean)":"android.media.audiofx.AudioEffect.OnEnableStatusChangeListener.onEnableStatusChange(android.media.audiofx.AudioEffect, 布尔值)\r\n","android.media.MediaCodec.CodecException.getDiagnosticInfo()":"android.media.MediaCodec.CodecException.getDiagnosticInfo()\r\n","android.app.slice.Slice.Builder.build()":"android.app.slice.Slice.Builder.build()\r\n","An implementation of a ContentObserver that takes care of connecting\n            it to the Loader to have the loader re-load its data when the observer\n            is told it has changed.":"负责连接的 ContentObserver 的实现\r\n            它给加载器让加载器在观察者重新加载它的数据\r\n            被告知它已经改变了。\r\n","Creates a new RecordingSession.":"创建一个新的 RecordingSession。\r\n","the approximate percentage of the\n                   verification that has been completed, ranging from 0\n                   to 100 (inclusive).":"的大约百分比\r\n                   已经完成的验证，取值范围为0\r\n                   到 100（含）。\r\n","#onCaptureCompleted":"#onCaptureCompleted\r\n","VcnStatusCallback is the interface for Carrier apps to receive updates for their VCNs.":"VcnStatusCallback 是运营商应用接收其 VCN 更新的接口。\r\n","android.media.tv.TvInputService.Session.notifyContentBlocked(android.media.tv.TvContentRating)":"android.media.tv.TvInputService.Session.notifyContentBlocked(android.media.tv.TvContentRating)\r\n","Called as the last step of the Activity being paused.":"在暂停的 Activity 的最后一步调用。\r\n","android.os.Build.VERSION":"android.os.Build.VERSION\r\n","Sets this channel as being converastion-centric.":"将此频道设置为以对话为中心。\r\n","Groups#SHOULD_SYNC":"群组#SHOULD_SYNC\r\n","android.media.audiofx.DynamicsProcessing.BandBase.getCutoffFrequency()":"android.media.audiofx.DynamicsProcessing.BandBase.getCutoffFrequency()\r\n","android.provider.Telephony.Carriers.CURRENT":"android.provider.Telephony.Carriers.CURRENT\r\n","android.media.MediaDrm.OnEventListener":"android.media.MediaDrm.OnEventListener\r\n","android.media.tv.TvContract.BaseTvColumns":"android.media.tv.TvContract.BaseTvColumns\r\n","android.media.MediaRouter.RouteInfo.isConnecting()":"android.media.MediaRouter.RouteInfo.isConnecting()\r\n","android.content.pm.ActivityInfo#CONFIG_ORIENTATION\n            PackageManager.ActivityInfo.CONFIG_ORIENTATION":"android.content.pm.ActivityInfo#CONFIG_ORIENTATION\r\n            PackageManager.ActivityInfo.CONFIG_ORIENTATION\r\n","The returned audio buffer.":"返回的音频缓冲区。\r\n","<b>video encoder only</b>: codec supports quantization parameter bounds.":"<b>仅视频编码器</b>：编解码器支持量化参数范围。\r\n","true if the values were set, false on database errors":"如果设置了值，则为 true，如果出现数据库错误，则为 false\r\n","android.provider.Settings.Secure.putLong(android.content.ContentResolver, java.lang.String, long)":"android.provider.Settings.Secure.putLong（android.content.ContentResolver，java.lang.String，长）\r\n","This is a single-recipient version of ":"这是单一收件人版本\r\n","State of the auto-exposure lock. Returns true if\n                    auto-exposure is currently locked, and false otherwise.":"自动曝光锁定的状态。返回真如果\r\n                    自动曝光当前已锁定，否则为 false。\r\n","android.app.KeyguardManager.KeyguardDismissCallback.onDismissCancelled()":"android.app.KeyguardManager.KeyguardDismissCallback.onDismissCancelled()\r\n","android.provider.DocumentsContract.Document.FLAG_DIR_SUPPORTS_CREATE":"android.provider.DocumentsContract.Document.FLAG_DIR_SUPPORTS_CREATE\r\n","android.provider.CallLog.Calls.FEATURES_PULLED_EXTERNALLY":"android.provider.CallLog.Calls.FEATURES_PULLED_EXTERNALY\r\n","Gets the page height in PostScript points (1/72th of an inch).":"获取以 PostScript 点（1/72 英寸）为单位的页面高度。\r\n","android.app.Notification.DecoratedCustomViewStyle":"android.app.Notification.DecoratedCustomViewStyle\r\n","android.hardware.Camera.CameraInfo":"android.hardware.Camera.CameraInfo\r\n","android.provider.ContactsContract.DataColumns.DATA15":"android.provider.ContactsContract.DataColumns.DATA15\r\n","android.os.Debug.MemoryInfo.getTotalSharedClean()":"android.os.Debug.MemoryInfo.getTotalSharedClean()\r\n","android.media.MediaCodec.ParameterDescriptor.getType()":"android.media.MediaCodec.ParameterDescriptor.getType()\r\n","android.provider.CallLog.Calls.VIA_NUMBER":"android.provider.CallLog.Calls.VIA_NUMBER\r\n","number of lines":"行数\r\n","RoutingSessionInfo":"路由会话信息\r\n","android.app.ActivityManager.RunningAppProcessInfo.lastTrimLevel":"android.app.ActivityManager.RunningAppProcessInfo.lastTrimLevel\r\n","reuseRect":"重用Rect\r\n","AppWidgetManager#updateAppWidget":"AppWidgetManager#updateAppWidget\r\n","The MIME type of a CONTENT_URI subdirectory of a single SIM record.":"单个 SIM 记录的 CONTENT_URI 子目录的 MIME 类型。\r\n","android.graphics.RenderEffect.createChainEffect(android.graphics.RenderEffect, android.graphics.RenderEffect)":"android.graphics.RenderEffect.createChainEffect(android.graphics.RenderEffect, android.graphics.RenderEffect)\r\n","android.media.MediaDrm.ErrorCodes.ERROR_CERTIFICATE_MISSING":"android.media.MediaDrm.ErrorCodes.ERROR_CERTIFICATE_MISSING\r\n","Optional listener supplied to the ImageDecoder.":"提供给 ImageDecoder 的可选侦听器。\r\n","android.inputmethodservice.Keyboard.Key.popupResId":"android.inputmethodservice.Keyboard.Key.popupResId\r\n","android.inputmethodservice.Keyboard.Key.pressed":"android.inputmethodservice.Keyboard.Key.pressed\r\n","android.provider.Telephony.TextBasedSmsColumns.MESSAGE_TYPE_DRAFT":"android.provider.Telephony.TextBasedSmsColumns.MESSAGE_TYPE_DRAFT\r\n","The ID of the TV input service that is associated with this recorded program.":"与此录制节目关联的电视输入服务的 ID。\r\n","The identity name space of the attendee as referenced in\n            ":"在中引用的与会者的身份名称空间\r\n            \r\n","Builder for the immutable ":"不可变的建造者\r\n","Thrown when a crypto error occurs while queueing a secure input buffer.":"在排队安全输入缓冲区时发生加密错误时抛出。\r\n","android.media.MediaDrm.ErrorCodes.ERROR_LICENSE_POLICY":"android.media.MediaDrm.ErrorCodes.ERROR_LICENSE_POLICY\r\n","true if the effect is enabled, false otherwise.":"如果启用效果，则为 true，否则为 false。\r\n","android.media.MediaCodecInfo.VideoCapabilities.getSupportedPerformancePoints()":"android.media.MediaCodecInfo.VideoCapabilities.getSupportedPerformancePoints()\r\n","This is called when the connection to the current recording session is lost.":"当与当前记录会话的连接丢失时调用此方法。\r\n","The video resolution for high-definition.":"视频分辨率为高清。\r\n","android.app.appsearch.ReportSystemUsageRequest.Builder.build()":"android.app.appsearch.ReportSystemUsageRequest.Builder.build()\r\n","ValueAnimator":"值动画师\r\n","android.content.pm.PackageInstaller.SessionParams.setInstallScenario(int)":"android.content.pm.PackageInstaller.SessionParams.setInstallScenario(int)\r\n","Bucket tag.":"桶标签。\r\n","android.appwidget.AppWidgetProvider.onDisabled(android.content.Context)":"android.appwidget.AppWidgetProvider.onDisabled(android.content.Context)\r\n","android.media.MediaDrm.MetricsConstants.OPEN_SESSION_OK_COUNT":"android.media.MediaDrm.MetricsConstants.OPEN_SESSION_OK_COUNT\r\n","#MEDIASYNC_ERROR_AUDIOTRACK_FAIL":"#MEDIASYNC_ERROR_AUDIOTRACK_FAIL\r\n","Called when the output format has changed":"当输出格式改变时调用\r\n","android.app.NotificationManager.Policy.NotificationManager$Policy(int, int, int, int)":"android.app.NotificationManager.Policy.NotificationManager$Policy(int, int, int, int)\r\n","Create a new builder that inherits all sub-parameters by default.":"创建一个默认继承所有子参数的新构建器。\r\n","PowerManager#removeThermalStatusListener":"PowerManager#removeThermalStatusListener\r\n","android.media.session.MediaSession.Callback.onCommand(java.lang.String, android.os.Bundle, android.os.ResultReceiver)":"android.media.session.MediaSession.Callback.onCommand(java.lang.String, android.os.Bundle, android.os.ResultReceiver)\r\n","the output vector {winX, winY, winZ}, that returns the\n                   computed window coordinates.":"输出向量 {winX, winY, winZ}，返回\r\n                   计算的窗口坐标。\r\n","AudioManager#getActivePlaybackConfigurations()":"音频管理器#getActivePlaybackConfigurations()\r\n","android.provider.ContactsContract.ContactsColumns.IS_USER_PROFILE":"android.provider.ContactsContract.ContactsColumns.IS_USER_PROFILE\r\n","SetSchemaRequest":"设置架构请求\r\n","android.inputmethodservice.InputMethodService.InputMethodImpl.hideSoftInput(int, android.os.ResultReceiver)":"android.inputmethodservice.InputMethodService.InputMethodImpl.hideSoftInput(int, android.os.ResultReceiver)\r\n","android.provider.ContactsContract.SettingsColumns.DATA_SET":"android.provider.ContactsContract.SettingsColumns.DATA_SET\r\n","android.provider.Contacts.OrganizationColumns.PERSON_ID":"android.provider.Contacts.OrganizationColumns.PERSON_ID\r\n","android.media.MediaDrm.CryptoSession.verify(byte[], byte[], byte[])":"android.media.MediaDrm.CryptoSession.verify(byte[], byte[], byte[])\r\n"," is a resource identifier, this is the package name of that\n            identifier.":" 是一个资源标识符，这是那个的包名\r\n            标识符。\r\n","android.media.tv.TvContract.Channels.TYPE_DVB_C":"android.media.tv.TvContract.Channels.TYPE_DVB_C\r\n","android.media.session.MediaController.Callback":"android.media.session.MediaController.Callback\r\n","The display title of this group to load as a resource from\n            ":"要作为资源加载的该组的显示标题\r\n            \r\n","android.app.ActivityManager.RecentTaskInfo.id":"android.app.ActivityManager.RecentTaskInfo.id\r\n","Send a notification or indication that a local characteristic has been\n            updated.":"发送通知或指示，表明本地特征已被\r\n            更新。\r\n","android.provider.ContactsContract.Contacts.isEnterpriseContactId(long)":"android.provider.ContactsContract.Contacts.isEnterpriseContactId（长）\r\n","Called to notify the app that prepareDrm is finished and ready for key request/response":"调用以通知应用程序 prepareDrm 已完成并准备好进行密钥请求/响应\r\n","Called after any structural changes (format or size) have been made to the surface passed\n            in ":"在对传递的表面进行任何结构更改（格式或大小）后调用\r\n            在\r\n","android.app.appsearch.GetSchemaResponse.Builder":"android.app.appsearch.GetSchemaResponse.Builder\r\n","android.media.MediaCodec.CryptoException.getErrorCode()":"android.media.MediaCodec.CryptoException.getErrorCode() 方法\r\n","android.provider.ContactsContract.Presence":"android.provider.ContactsContract.Presence\r\n"," from the CarExtender options of an existing Notification.":" 来自现有通知的 CarExtender 选项。\r\n","The user-visible name of a media route.  This is the string presented\n            to users who may select this as the active route.":"媒体路由的用户可见名称。这是显示的字符串\r\n            给可能选择此作为活动路线的用户。\r\n","VP9 Profile 2 4:2:0 10-bit HDR":"VP9 配置文件 2 4:2:0 10 位 HDR\r\n","The width of the overlay view.":"叠加视图的宽度。\r\n","Callback used to receive various status updates on the\n            ":"用于接收各种状态更新的回调\r\n            \r\n","Get the intent to launch inside of an activity view when displaying this\n            notification.":"显示此内容时获取在活动视图内启动的意图\r\n            通知。\r\n","Exception thrown when the provisioning server or key server denies a\n            license for a device.":"当供应服务器或密钥服务器拒绝\r\n            设备的许可证。\r\n","android.media.tv.TvContract.Channels.COLUMN_APP_LINK_INTENT_URI":"android.media.tv.TvContract.Channels.COLUMN_APP_LINK_INTENT_URI\r\n","android.media.tv.TvContract.Channels.COLUMN_VERSION_NUMBER":"android.media.tv.TvContract.Channels.COLUMN_VERSION_NUMBER\r\n","Create a complex Item, containing multiple representations of\n            text, Intent, and/or URI.":"创建一个复杂的项目，包含多个表示\r\n            文本、意图和/或 URI。\r\n","android.provider.ContactsContract.SyncColumns.DIRTY":"android.provider.ContactsContract.SyncColumns.DIRTY\r\n",": no password.":": 没有密码。\r\n","android.provider.ContactsContract.PhoneLookup.CONTENT_FILTER_URI":"android.provider.ContactsContract.PhoneLookup.CONTENT_FILTER_URI\r\n"," were written.":" 被写了。\r\n","android.hardware.Camera.Parameters.getFlashMode()":"android.hardware.Camera.Parameters.getFlashMode()\r\n","Open a stream to read an APK file from the session.":"打开流以从会话中读取 APK 文件。\r\n","android.provider.Telephony.MmsSms.CONTENT_DRAFT_URI":"android.provider.Telephony.MmsSms.CONTENT_DRAFT_URI\r\n","android.app.admin.DevicePolicyManager.InstallSystemUpdateCallback":"android.app.admin.DevicePolicyManager.InstallSystemUpdateCallback\r\n","android.database.sqlite.SQLiteDatabase.CursorFactory":"android.database.sqlite.SQLiteDatabase.CursorFactory\r\n",",\n                    or if it crashes.":",\r\n                    或者如果它崩溃了。\r\n","android.hardware.Camera.Parameters.setGpsAltitude(double)":"android.hardware.Camera.Parameters.setGpsAltitude（双）\r\n","android.provider.Contacts.Extensions.CONTENT_TYPE":"android.provider.Contacts.Extensions.CONTENT_TYPE\r\n","android.provider.Settings.System.WIFI_ON":"android.provider.Settings.System.WIFI_ON\r\n","Defines the interface by which applications can receive notifications of routing\n            changes for the associated ":"定义应用程序可以接收路由通知的接口\r\n            相关的变化\r\n","android.media.MediaCodecInfo.VideoCapabilities.getHeightAlignment()":"android.media.MediaCodecInfo.VideoCapabilities.getHeightAlignment()\r\n","the priority level requested by the application for controlling the\n            PresetReverb engine. As the same engine can be shared by several applications, this\n            parameter indicates how much the requesting application needs control of effect parameters.\n            The normal priority is 0, above normal is a positive number, below normal a negative number.":"应用程序请求控制的优先级\r\n            预设混响引擎。由于同一个引擎可以被多个应用程序共享，这\r\n            parameter 表示请求应用程序需要多少控制效果参数。\r\n            正常优先级为0，高于正常为正数，低于正常为负数。\r\n","Colors":"颜色\r\n","android.app.DirectAction.Builder":"android.app.DirectAction.Builder\r\n","This class is used to build ":"该类用于构建\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityPreSaveInstanceState(android.app.Activity, android.os.Bundle)":"android.app.Application.ActivityLifecycleCallbacks.onActivityPreSaveInstanceState(android.app.Activity, android.os.Bundle)\r\n","android.view.KeyEvent.Callback#onKeyUp(int, KeyEvent)\n            KeyEvent.Callback.onKeyUp()":"android.view.KeyEvent.Callback#onKeyUp(int, KeyEvent)\r\n            KeyEvent.Callback.onKeyUp()\r\n","PlaybackErrorEvent":"回放错误事件\r\n","Return the first line's width for this paragraph in pixel.":"以像素为单位返回此段落的第一行宽度。\r\n","android.provider.Contacts.GroupMembership.GROUP_SYNC_ACCOUNT":"android.provider.Contacts.GroupMembership.GROUP_SYNC_ACCOUNT\r\n","the offset into the obj array where the obj vector data\n                   starts.":"obj 数组中的偏移量，其中 obj 矢量数据\r\n                   开始。\r\n","#PHOTO_SUPPORT":"#PHOTO_SUPPORT\r\n","android.os.BugreportManager.BugreportCallback":"android.os.BugreportManager.BugreportCallback\r\n","The started animation.":"开始的动画。\r\n","A receiver device type of the route indicating the presentation of the media is happening\n            on a speaker.":"指示正在呈现媒体的路由的接收器设备类型\r\n            在扬声器上。\r\n","Receives media buttons, transport controls, and commands from controllers\n            and the system.":"从控制器接收媒体按钮、传输控制和命令\r\n            和系统。\r\n","The date the message was received.":"收到消息的日期。\r\n","Creates an initially empty builder.":"创建一个最初为空的构建器。\r\n","#allowPublicAccess()":"#allowPublicAccess()\r\n","Builder for creating of a ":"用于创建的生成器\r\n","android.gesture.GestureStore.addGesture(java.lang.String, android.gesture.Gesture)":"android.gesture.GestureStore.addGesture(java.lang.String, android.gesture.Gesture)\r\n","the current zoom value. The range is 0 to ":"当前缩放值。范围是 0 到\r\n","Has the message been seen by the user? The \"seen\" flag determines\n            whether we need to show a new message notification.":"消息是否已被用户看到？ “看到”标志决定\r\n            我们是否需要显示新消息通知。\r\n","When the response is for a release request, keySetId identifies\n            the saved key associated with the release request (i.e., the same keySetId\n            passed to the earlier {@ link # getKeyRequest} call. It MUST be null when the\n            response is for either streaming or offline key requests.":"当响应是针对释放请求时，keySetId 标识\r\n            与释放请求关联的已保存密钥（即相同的 keySetId\r\n            传递给较早的 {@link #getKeyRequest} 调用。当\r\n            响应用于流式传输或离线密钥请求。\r\n"," on the Builder this Style is\n            attached to.":" 在 Builder 上，此样式是\r\n            附于。\r\n","A list with the routes in this category that have been added to the MediaRouter.":"此类别中已添加到 MediaRouter 的路由列表。\r\n","_ID of the work profile directory that represents locally stored invisible contacts.":"代表本地存储的不可见联系人的工作配置文件目录的 _ID。\r\n","android.app.admin.SystemUpdatePolicy.ValidationFailedException.ERROR_UNKNOWN":"android.app.admin.SystemUpdatePolicy.ValidationFailedException.ERROR_UNKNOWN\r\n","android.graphics.ColorSpace.Rgb.ColorSpace$Rgb(java.lang.String, float[], double)":"android.graphics.ColorSpace.Rgb.ColorSpace$Rgb(java.lang.String, float[], double)\r\n","android.database.sqlite.SQLiteDatabase.OpenParams.getSynchronousMode()":"android.database.sqlite.SQLiteDatabase.OpenParams.getSynchronousMode()\r\n","#SCREEN_TIMEOUT_LONG":"#SCREEN_TIMEOUT_LONG\r\n","The column with longitude data for postal locations":"包含邮政位置经度数据的列\r\n","the sequence of characters to be displayed.":"要显示的字符序列。\r\n","android.os.Build.VERSION_CODES.KITKAT_WATCH":"android.os.Build.VERSION_CODES.KITKAT_WATCH\r\n","android.app.blob.BlobStoreManager.Session.openWrite(long, long)":"android.app.blob.BlobStoreManager.Session.openWrite（长，长）\r\n","android.accessibilityservice.GestureDescription.StrokeDescription.getStartTime()":"android.accessibilityservice.GestureDescription.StrokeDescription.getStartTime()\r\n","),</li>\n                 <li>the element at index ":"),</li>\r\n                 <li>索引处的元素\r\n","android.companion.BluetoothLeDeviceFilter.Builder.build()":"android.companion.BluetoothLeDeviceFilter.Builder.build()\r\n","android.media.AudioManager.OnModeChangedListener.onModeChanged(int)":"android.media.AudioManager.OnModeChangedListener.onModeChanged(int)\r\n","Convenience method for callers that want to have FontMetrics values as\n            integers.":"想要将 FontMetrics 值作为调用者的便捷方法\r\n            整数。\r\n","Type for accessing records in the \"fixed dialing number\" (FDN) elementary file on the\n            SIM.":"用于访问“固定拨号号码”(FDN) 基本文件中记录的类型\r\n            SIM卡。\r\n","The factory reset protection policy determines which accounts can unlock a device that\n            has gone through untrusted factory reset.":"恢复出厂设置保护策略决定哪些帐户可以解锁设备\r\n            已通过不受信任的出厂重置。\r\n","The package manager for loading the label.":"用于加载标签的包管理器。\r\n","Get the duration, in milliseconds, that the screen should remain on for\n            when this notification is displayed.":"获取屏幕应保持打开的持续时间（以毫秒为单位）\r\n            显示此通知时。\r\n","\n            using two properties.":"\r\n            使用两个属性。\r\n","android.app.ActivityManager.ProcessErrorStateInfo.stackTrace":"android.app.ActivityManager.ProcessErrorStateInfo.stackTrace\r\n","the weight of the area.":"区域的权重。\r\n","The AppTask allows you to manage your own application's tasks.":"AppTask 允许您管理您自己的应用程序的任务。\r\n","android.app.usage.NetworkStats.Bucket.getRxBytes()":"android.app.usage.NetworkStats.Bucket.getRxBytes()\r\n","android.provider.Settings.NameValueTable":"android.provider.Settings.NameValueTable\r\n",",\n            starting at index ":",\r\n            从索引开始\r\n","android.provider.ContactsContract.RawContactsColumns.AGGREGATION_MODE":"android.provider.ContactsContract.RawContactsColumns.AGGREGATION_MODE\r\n","GetSchemaResponse":"获取架构响应\r\n","The height in points.":"以磅为单位的高度。\r\n","Delta to apply to the current volume":"应用于当前音量的增量\r\n","android.provider.CallLog.Calls.GEOCODED_LOCATION":"android.provider.CallLog.Calls.GEOCODED_LOCATION\r\n"," columns when queried, or returns the\n            user's profile contact formatted as a vCard when opened through\n            ":" 查询时的列，或返回\r\n            通过以下方式打开时，用户的个人资料联系人格式为 vCard\r\n            \r\n","android.drm.DrmStore.ConstraintsColumns.LICENSE_START_TIME":"android.drm.DrmStore.ConstraintsColumns.LICENSE_START_TIME\r\n","android.drm.DrmUtils.ExtendedMetadataParser.iterator()":"android.drm.DrmUtils.ExtendedMetadataParser.iterator()\r\n","android.provider.CalendarContract.Reminders":"android.provider.CalendarContract.Reminders\r\n","SearchColumns#DATE":"搜索列#DATE\r\n","android.media.tv.TvInputManager.TvInputCallback.onInputRemoved(java.lang.String)":"android.media.tv.TvInputManager.TvInputCallback.onInputRemoved(java.lang.String)\r\n"," to query mime types is matched.":" 查询 mime 类型是否匹配。\r\n","The thread ID of the message.":"消息的线程 ID。\r\n","android.net.sip.SipSession.Listener.onCalling(android.net.sip.SipSession)":"android.net.sip.SipSession.Listener.onCalling(android.net.sip.SipSession)\r\n",") or can modified\n            (":") 或者可以修改\r\n            (\r\n","android.app.appsearch.AppSearchSchema.BooleanPropertyConfig":"android.app.appsearch.AppSearchSchema.BooleanPropertyConfig\r\n","android.app.blob.BlobStoreManager.Session.isPublicAccessAllowed()":"android.app.blob.BlobStoreManager.Session.isPublicAccessAllowed()\r\n","The name of the app which blocked a call.":"阻止呼叫的应用程序的名称。\r\n","android.provider.Telephony.ServiceStateTable.AUTHORITY":"android.provider.Telephony.ServiceStateTable.AUTHORITY\r\n","android.media.MediaRouter2.RouteCallback":"android.media.MediaRouter2.RouteCallback\r\n","android.provider.CallLog.Calls.TYPE":"android.provider.CallLog.Calls.TYPE\r\n","Override to handle requests to prepare a specific media item represented by a URI.":"覆盖以处理准备由 URI 表示的特定媒体项的请求。\r\n","the offset into the model array where the modelview\n                   maxtrix data starts.":"模型视图所在模型数组的偏移量\r\n                   maxtrix 数据开始。\r\n"," that should be used by the application to show\n            a ":" 应用程序应该使用它来显示\r\n            A\r\n","address for socket":"套接字地址\r\n","The character set of the retrieve-text.":"检索文本的字符集。\r\n","android.media.MediaRoute2Info.Builder.build()":"android.media.MediaRoute2Info.Builder.build()\r\n","android.media.audiofx.DynamicsProcessing.Limiter.setLinkGroup(int)":"android.media.audiofx.DynamicsProcessing.Limiter.setLinkGroup(int)\r\n","CombinedVibration":"组合振动\r\n"," to be used when entering or updating\n            the activity in picture-in-picture.":" 输入或更新时使用\r\n            画中画活动。\r\n","android.provider.CalendarContract.EventsColumns.ORIGINAL_SYNC_ID":"android.provider.CalendarContract.EventsColumns.ORIGINAL_SYNC_ID\r\n",") supported by the audio device.\n            ":") 由音频设备支持。\r\n            \r\n","android.provider.Settings.System.getUriFor(java.lang.String)":"android.provider.Settings.System.getUriFor(java.lang.String)\r\n","setName()":"设置名称()\r\n"," from\n            notifications intercepted by DND are blocked on devices that support badging.":" 从\r\n            DND 拦截的通知在支持徽章的设备上被阻止。\r\n","exposure compensation index. The valid value range is\n                   from ":"曝光补偿指数。有效值范围是\r\n                   从\r\n","Convenience function for updating a single settings value as a long\n            integer.":"将单个设置值更新为 long 的便捷功能\r\n            整数。\r\n","#prepare":"＃准备\r\n","Returns the status code for the key":"返回密钥的状态代码\r\n","android.media.audiofx.EnvironmentalReverb.setDecayTime(int)":"android.media.audiofx.EnvironmentalReverb.setDecayTime(int)\r\n","android.media.session.MediaController.TransportControls.setPlaybackSpeed(float)":"android.media.session.MediaController.TransportControls.setPlaybackSpeed(浮动)\r\n","android.os.Build.VERSION_CODES.HONEYCOMB_MR1":"android.os.Build.VERSION_CODES.HONEYCOMB_MR1\r\n","Type of usage for text interaction involving longer messages, which includes email.":"涉及较长消息（包括电子邮件）的文本交互的使用类型。\r\n","Gets the identifier used to set the hint associated with this view.":"获取用于设置与此视图关联的提示的标识符。\r\n","The animation which was canceled.":"被取消的动画。\r\n","Constant used to request data from a font provider.":"用于从字体提供程序请求数据的常量。\r\n","android.media.MediaCas.EventListener.onEvent(android.media.MediaCas, int, int, byte[])":"android.media.MediaCas.EventListener.onEvent(android.media.MediaCas, int, int, byte[])\r\n","android.app.Notification.BubbleMetadata.getAutoExpandBubble()":"android.app.Notification.BubbleMetadata.getAutoExpandBubble()\r\n","android.provider.Telephony.Threads.BROADCAST_THREAD":"android.provider.Telephony.Threads.BROADCAST_THREAD\r\n","android.print.PrintJobInfo.Builder.setCopies(int)":"android.print.PrintJobInfo.Builder.setCopies(int)\r\n","android.media.audiofx.DynamicsProcessing.MbcBand.setThreshold(float)":"android.media.audiofx.DynamicsProcessing.MbcBand.setThreshold（浮动）\r\n","android.media.MediaPlayer.OnSeekCompleteListener":"android.media.MediaPlayer.OnSeekCompleteListener\r\n","android.media.tv.TvContract.Channels.COLUMN_APP_LINK_TEXT":"android.media.tv.TvContract.Channels.COLUMN_APP_LINK_TEXT\r\n","Whether the shutter sound can be disabled.":"快门音是否可以关闭。\r\n","android.provider.Settings.Secure.WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY":"android.provider.Settings.Secure.WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY\r\n","#getDurationMicros()":"#getDurationMicros()\r\n","This indicates that the security level of the device is not\n            sufficient to meet the requirements set by the content owner\n            in the license policy.":"这表明设备的安全级别不\r\n            足以满足内容所有者设定的要求\r\n            在许可政策中。\r\n","time at which the underlying alarm is triggered in wall time\n                               milliseconds since the epoch":"以挂钟时间为单位触发底层警报的时间\r\n                               自纪元以来的毫秒数\r\n","android.provider.Telephony.BaseMmsColumns.MESSAGE_BOX":"android.provider.Telephony.BaseMmsColumns.MESSAGE_BOX\r\n","android.media.audiofx.DynamicsProcessing.BandStage.getBandCount()":"android.media.audiofx.DynamicsProcessing.BandStage.getBandCount()\r\n","android.app.assist.AssistStructure.ViewNode.getMaxTextLength()":"android.app.assist.AssistStructure.ViewNode.getMaxTextLength()\r\n",": This process process contains\n            cached code that is expendable, not actively running any app components\n            we care about.":"：这个过程过程包含\r\n            可消耗的缓存代码，不主动运行任何应用程序组件\r\n            我们关心。\r\n","android.content.pm.LauncherApps.Callback.onPackageLoadingProgressChanged(java.lang.String, android.os.UserHandle, float)":"android.content.pm.LauncherApps.Callback.onPackageLoadingProgressChanged(java.lang.String, android.os.UserHandle, float)\r\n","arbitrary, unique name of your choosing to identify the\n                       APK being written. You can open a file again for\n                       additional writes (such as after a reboot) by using the\n                       same name. This name is only meaningful within the context\n                       of a single install session.":"您选择的任意唯一名称来标识\r\n                       正在编写 APK。您可以再次打开一个文件\r\n                       通过使用额外的写入（如重启后）\r\n                       一样的名字。此名称仅在上下文中有意义\r\n                       单个安装会话。\r\n","android.provider.Telephony.TextBasedSmsColumns.ERROR_CODE":"android.provider.Telephony.TextBasedSmsColumns.ERROR_CODE\r\n","RemoteController#editMetadata()":"远程控制器#editMetadata()\r\n","android.provider.Telephony.Carriers.PROTOCOL":"android.provider.Telephony.Carriers.PROTOCOL\r\n","Last memory trim level reported to the process: corresponds to\n            the values supplied to ":"上次报告给进程的内存调整级别：对应于\r\n            提供给的值\r\n","android.media.MediaDrm.ErrorCodes.ERROR_CERTIFICATE_MALFORMED":"android.media.MediaDrm.ErrorCodes.ERROR_CERTIFICATE_MALFORMED\r\n","MediaRouter.Callback":"MediaRouter.Callback\r\n","android.app.WallpaperManager.setResource(int, int)":"android.app.WallpaperManager.setResource(int, int)\r\n","Type of usage for voice interaction, which includes phone call, voice chat, and\n            video chat.":"语音交互的使用类型，包括电话呼叫、语音聊天和\r\n            视频聊天。\r\n","android.provider.Telephony.Carriers.ROAMING_PROTOCOL":"android.provider.Telephony.Carriers.ROAMING_PROTOCOL\r\n","android.hardware.Camera.Parameters.set(java.lang.String, int)":"android.hardware.Camera.Parameters.set(java.lang.String, int)\r\n","android.provider.Contacts.Settings.CONTENT_URI":"android.provider.Contacts.Settings.CONTENT_URI\r\n","#getPreviewFpsRange(int[])":"#getPreviewFpsRange(int[])\r\n","android.companion.BluetoothDeviceFilter.Builder.build()":"android.companion.BluetoothDeviceFilter.Builder.build()\r\n","android.provider.BlockedNumberContract.BlockedNumbers.CONTENT_TYPE":"android.provider.BlockedNumberContract.BlockedNumbers.CONTENT_TYPE\r\n","android.hardware.Camera.Parameters.setGpsProcessingMethod(java.lang.String)":"android.hardware.Camera.Parameters.setGpsProcessingMethod(java.lang.String)\r\n","android.hardware.Camera.Parameters.setJpegThumbnailSize(int, int)":"android.hardware.Camera.Parameters.setJpegThumbnailSize(int, int)\r\n","Gets the type of value that can be used to autofill the view contents.":"获取可用于自动填充视图内容的值类型。\r\n","A query parameter that's passed to directory providers which indicates the client\n            package name that has made the query requests.":"传递给目录提供程序的查询参数，指示客户端\r\n            发出查询请求的包名。\r\n","android.app.VoiceInteractor.AbortVoiceRequest":"android.app.VoiceInteractor.AbortVoiceRequest\r\n","Flag set describing the route types supported by this category":"描述该类别支持的路由类型的标志集\r\n","), the stroke is a touch that doesn't move.":"), 笔画是不动的触摸。\r\n","android.app.appsearch.AppSearchSchema.StringPropertyConfig.INDEXING_TYPE_EXACT_TERMS":"android.app.appsearch.AppSearchSchema.StringPropertyConfig.INDEXING_TYPE_EXACT_TERMS\r\n","Interface definition of a callback to be invoked indicating\n            the completion of a seek operation.":"要调用的回调的接口定义指示\r\n            一个寻道操作的完成。\r\n",",\n            yielding a subdirectory of a single person.":",\r\n            产生一个人的子目录。\r\n","Error loading the provisioned certificate.":"加载提供的证书时出错。\r\n","android.provider.CallLog.Calls.POST_DIAL_DIGITS":"android.provider.CallLog.Calls.POST_DIAL_DIGITS\r\n"," that have both\n            ":" 两者都有\r\n            \r\n","new color effect.":"新的颜色效果。\r\n","The video format for 1080p.":"视频格式为1080p。\r\n","The type of transition that is ending,\n            ":"即将结束的过渡类型，\r\n            \r\n","android.content.ClipboardManager.OnPrimaryClipChangedListener":"android.content.ClipboardManager.OnPrimaryClipChangedListener\r\n","android.provider.ContactsContract.ContactsColumns.LOOKUP_KEY":"android.provider.ContactsContract.ContactsColumns.LOOKUP_KEY\r\n","android.app.ApplicationErrorReport.RunningServiceInfo.durationMillis":"android.app.ApplicationErrorReport.RunningServiceInfo.durationMillis\r\n","Callback used in ":"回调用在\r\n","android.provider.ContactsContract.StreamItemsColumns.SYNC4":"android.provider.ContactsContract.StreamItemsColumns.SYNC4\r\n","Class for Limiter Stage\n            Limiter is a single band compressor at the end of the processing chain, commonly used to\n            protect the signal from overloading and distortion.":"限制器级类\r\n            限制器是处理链末端的单频段压缩器，通常用于\r\n            保护信号免受过载和失真。\r\n","android.graphics.AvoidXfermode":"android.graphics.AvoidXfermode\r\n","a callback to receive the commit result. when the result is\n                                  ":"接收提交结果的回调。当结果是\r\n                                  \r\n","android.content.pm.ShortcutInfo.Builder.build()":"android.content.pm.ShortcutInfo.Builder.build()\r\n","a list of Size object if camera has separate preview and\n                    video output; otherwise, null is returned.":"如果相机有单独的预览和\r\n                    视频输出；否则，返回 null。\r\n","Returns how this property is tokenized (split into words).":"返回此属性的标记方式（拆分为单词）。\r\n","android.provider.Contacts.PhonesColumns.LABEL":"android.provider.Contacts.PhonesColumns.LABEL\r\n","The flag indicating whether this TV channel is browsable or not.":"指示此电视频道是否可浏览的标志。\r\n","android.media.tv.TvContract.Channels.COLUMN_ORIGINAL_NETWORK_ID":"android.media.tv.TvContract.Channels.COLUMN_ORIGINAL_NETWORK_ID\r\n","the corresponding value, or null if not present":"相应的值，如果不存在则为 null\r\n","true if MBC stage is enabled/disabled. This can be changed while effect\n            is running":"如果启用/禁用 MBC 阶段，则为真。这可以在效果时更改\r\n            在跑\r\n","android.provider.ContactsContract.RawContactsColumns.RAW_CONTACT_IS_USER_PROFILE":"android.provider.ContactsContract.RawContactsColumns.RAW_CONTACT_IS_USER_PROFILE\r\n","android.app.admin.SystemUpdatePolicy.ValidationFailedException.ERROR_NEW_FREEZE_PERIOD_TOO_LONG":"android.app.admin.SystemUpdatePolicy.ValidationFailedException.ERROR_NEW_FREEZE_PERIOD_TOO_LONG\r\n","android.provider.ContactsContract.DataColumns.DATA8":"android.provider.ContactsContract.DataColumns.DATA8\r\n","android.provider.Settings.System.TEXT_AUTO_REPLACE":"android.provider.Settings.System.TEXT_AUTO_REPLACE\r\n","android.provider.CallLog.Calls.FEATURES":"android.provider.CallLog.Calls.FEATURES\r\n","android.provider.Settings.Global.getFloat(android.content.ContentResolver, java.lang.String)":"android.provider.Settings.Global.getFloat(android.content.ContentResolver, java.lang.String)\r\n","android.provider.Contacts.People.CONTENT_URI":"android.provider.Contacts.People.CONTENT_URI\r\n","The relative importance level that the system places on this process.":"系统对此进程的相对重要性级别。\r\n","android.content.pm.PackageInstaller.SessionInfo.hasParentSessionId()":"android.content.pm.PackageInstaller.SessionInfo.hasParentSessionId()\r\n","android.view.KeyEvent.Callback#onKeyLongPress(int, KeyEvent)\n            KeyEvent.Callback.onKeyLongPress()":"android.view.KeyEvent.Callback#onKeyLongPress（int，KeyEvent）\r\n            按键事件回调.onKeyLongPress()\r\n","android.media.MediaDrm.MetricsConstants.GET_KEY_REQUEST_OK_COUNT":"android.media.MediaDrm.MetricsConstants.GET_KEY_REQUEST_OK_COUNT\r\n","android.media.audiofx.Visualizer.setScalingMode(int)":"android.media.audiofx.Visualizer.setScalingMode(int)\r\n","A class to control media routing session in media route provider.":"用于控制媒体路由提供程序中的媒体路由会话的类。\r\n","android.app.appsearch.AppSearchSchema.DoublePropertyConfig":"android.app.appsearch.AppSearchSchema.DoublePropertyConfig\r\n","The notification from which to copy options.":"从中复制选项的通知。\r\n","AppWidgetManager#ACTION_APPWIDGET_OPTIONS_CHANGED":"AppWidgetManager#ACTION_APPWIDGET_OPTIONS_CHANGED\r\n","android.provider.Settings.System.END_BUTTON_BEHAVIOR":"android.provider.Settings.System.END_BUTTON_BEHAVIOR\r\n","a size of the font data. If -1 is passed, use until end of the file.":"字体数据的大小。如果传递 -1，则使用直到文件末尾。\r\n","android.app.ApplicationErrorReport.AnrInfo":"android.app.ApplicationErrorReport.AnrInfo\r\n","android.app.appsearch.AppSearchSchema.Builder.build()":"android.app.appsearch.AppSearchSchema.Builder.build()\r\n","android.app.ActivityManager.ProcessErrorStateInfo.crashData":"android.app.ActivityManager.ProcessErrorStateInfo.crashData\r\n","Assigns a size and position to the surface passed in ":"为传入的表面分配大小和位置\r\n","near":"靠近\r\n","The action identifier of the ":"的动作标识符\r\n","Interface for receiving update notifications about the playback activity on the system.":"用于接收有关系统播放活动的更新通知的接口。\r\n","android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.isRevoked()":"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.isRevoked()\r\n","android.provider.Settings.System.WIFI_MAX_DHCP_RETRY_COUNT":"android.provider.Settings.System.WIFI_MAX_DHCP_RETRY_COUNT\r\n","True if the click was handled.":"如果处理了点击，则为真。\r\n","Callback interface used to deliver copies of preview frames as\n            they are displayed.":"用于传递预览帧副本的回调接口\r\n            它们被显示出来。\r\n","Any newly created contacts will automatically be added to groups that have this\n            flag set to true.":"任何新创建的联系人都将自动添加到具有此功能的组中\r\n            标志设置为真。\r\n","android.app.ActivityManager.RunningServiceInfo.clientLabel":"android.app.ActivityManager.RunningServiceInfo.clientLabel\r\n","android.provider.ContactsContract.ProfileSyncState":"android.provider.ContactsContract.ProfileSyncState\r\n","A sequence ID returned by the ":"返回的序列 ID\r\n","android.app.Instrumentation.ActivityMonitor.isBlocking()":"android.app.Instrumentation.ActivityMonitor.isBlocking()\r\n","android.content.Loader.OnLoadCompleteListener.onLoadComplete(android.content.Loader<D>, D)":"android.content.Loader.OnLoadCompleteListener.onLoadComplete(android.content.Loader<D>, D)\r\n","Optional extras that can include extra information\n                          about the query.":"可包含额外信息的可选附加项\r\n                          关于查询。\r\n","TelecomManager#DTMF_CHARACTER_PAUSE":"电信管理器#DTMF_CHARACTER_PAUSE\r\n","username of the SIP account":"SIP 帐号的用户名\r\n","the unique identifier for the ":"的唯一标识符\r\n","The mimeType of ":"的 mimeType\r\n","Optional transformation to apply when rendering.":"渲染时要应用的可选转换。\r\n","android.location.GnssAntennaInfo.PhaseCenterOffset.getYOffsetMm()":"android.location.GnssAntennaInfo.PhaseCenterOffset.getYOffsetMm()\r\n","android.provider.CallLog.Calls.PRIORITY_URGENT":"android.provider.CallLog.Calls.PRIORITY_URGENT\r\n","Whether or not to dim the screen.":"是否调暗屏幕。\r\n","android.app.Instrumentation.ActivityMonitor.getHits()":"android.app.Instrumentation.ActivityMonitor.getHits()\r\n","\n            for this ":"\r\n            为了这\r\n","android.view.View#getVisibility() View.getVisibility()":"android.view.View#getVisibility() 视图.getVisibility()\r\n","android.graphics.text.LineBreaker.ParagraphConstraints.getFirstWidth()":"android.graphics.text.LineBreaker.ParagraphConstraints.getFirstWidth()\r\n","android.media.RemoteControlClient.OnPlaybackPositionUpdateListener.onPlaybackPositionUpdate(long)":"android.media.RemoteControlClient.OnPlaybackPositionUpdateListener.onPlaybackPositionUpdate(长)\r\n","content resolver to query.":"要查询的内容解析器。\r\n","An interface for choosing an EGLConfig configuration from a list of\n            potential configurations.":"从列表中选择 EGLConfig 配置的接口\r\n            潜在的配置。\r\n","Generates new Typeface from specified configuration.":"从指定的配置生成新的字体。\r\n","android.graphics.text.LineBreaker.Result.hasLineTab(int)":"android.graphics.text.LineBreaker.Result.hasLineTab(int)\r\n","android.content.res.Resources.getText(int)":"android.content.res.Resources.getText(int)\r\n","android.provider.Settings.System.BLUETOOTH_DISCOVERABILITY":"android.provider.Settings.System.BLUETOOTH_DISCOVERABILITY\r\n","android.content.pm.PackageInstaller.SessionInfo.getInstallerPackageName()":"android.content.pm.PackageInstaller.SessionInfo.getInstallerPackageName()\r\n","android.content.pm.PackageInstaller.SessionInfo.getOriginatingUid()":"android.content.pm.PackageInstaller.SessionInfo.getOriginatingUid()\r\n","Return a TypedArray holding the attribute values in\n            <var>set</var>\n            that are listed in <var>attrs</var>.":"返回一个包含属性值的 TypedArray\r\n            <var>设置</var>\r\n            在 <var>attrs</var> 中列出。\r\n","#TEXT_STYLE_STRIKE_THRU":"#TEXT_STYLE_STRIKE_THRU\r\n","A seek time in microseconds.":"以微秒为单位的寻道时间。\r\n","Returns the setting for the rate at which preview frames are\n            received. -or- Sets the rate at which preview frames are received.":"返回预览帧速率的设置\r\n            已收到。 - 或 - 设置接收预览帧的速率。\r\n","android.media.audiofx.AudioEffect.hasControl()":"android.media.audiofx.AudioEffect.hasControl()\r\n","The document name which may be shown to the user and\n            is the file name if the content it describes is saved as a PDF.\n            Cannot be empty.":"可以向用户显示的文档名称和\r\n            是文件名，如果它描述的内容被保存为 PDF。\r\n            不能为空。\r\n","Whether the layout changed.":"布局是否改变。\r\n","android.app.ApplicationErrorReport.CrashInfo.ApplicationErrorReport$CrashInfo()":"android.app.ApplicationErrorReport.CrashInfo.ApplicationErrorReport$CrashInfo()\r\n","The label for a button that invokes ":"调用按钮的标签\r\n","Reports the latest collected GNSS Measurements.":"报告最新收集的 GNSS 测量值。\r\n","android.graphics.ImageDecoder.ImageInfo":"android.graphics.ImageDecoder.ImageInfo\r\n","GPS longitude coordinate.":"GPS 经度坐标。\r\n","android.app.SearchManager.OnDismissListener.onDismiss()":"android.app.SearchManager.OnDismissListener.onDismiss()\r\n","Gets current reverb preset. -or- Enables a preset on the reverb.":"获取当前混响预设。 - 或 - 启用混响预设。\r\n","android.media.MediaPlayer.OnVideoSizeChangedListener.onVideoSizeChanged(android.media.MediaPlayer, int, int)":"android.media.MediaPlayer.OnVideoSizeChangedListener.onVideoSizeChanged(android.media.MediaPlayer, int, int)\r\n","Constructs a new Builder with none of the format characteristics set.":"构造一个没有任何格式特征集的新 Builder。\r\n","android.graphics.fonts.Font.Builder.Font$Builder(java.nio.ByteBuffer)":"android.graphics.fonts.Font.Builder.Font$Builder(java.nio.ByteBuffer)\r\n","an arbitrary Object to store with this request":"与此请求一起存储的任意对象\r\n","ID of the session. Must not be empty.":"会话的 ID。不得为空。\r\n","Returns the 1-sigma uncertainty of the x-axis offset of the phase center from the origin\n            of the Android sensor coordinate system, in millimeters.":"返回相位中心距原点的 x 轴偏移量的 1-sigma 不确定性\r\n            Android 传感器坐标系的坐标系，以毫米为单位。\r\n","Key to extract the end times of sessions.":"提取会话结束时间的键。\r\n","Number of packets transmitted during the bucket's time interval.":"在桶的时间间隔内传输的数据包数。\r\n","android.media.session.MediaSession.Callback.onPrepare()":"android.media.session.MediaSession.Callback.onPrepare()\r\n","android.app.Instrumentation.ActivityMonitor":"android.app.Instrumentation.ActivityMonitor\r\n","#CODENAME":"＃代码名称\r\n","This very short effect should produce a light crisp sensation intended\n            to be used repetitively for dynamic feedback.":"这种非常短的效果应该会产生一种轻脆的感觉\r\n            重复使用动态反馈。\r\n","android.provider.Settings.Secure.getFloat(android.content.ContentResolver, java.lang.String)":"android.provider.Settings.Secure.getFloat(android.content.ContentResolver, java.lang.String)\r\n","android.media.MediaCodecInfo.CodecProfileLevel.AV1ProfileMain10HDR10Plus":"android.media.MediaCodecInfo.CodecProfileLevel.AV1ProfileMain10HDR10Plus\r\n","The license response was empty, fields are missing or otherwise\n            unable to be parsed or decrypted.":"许可证响应为空，字段丢失或其他\r\n            无法解析或解密。\r\n","android.provider.CalendarContract.AttendeesColumns.ATTENDEE_TYPE":"android.provider.CalendarContract.AttendeesColumns.ATTENDEE_TYPE\r\n","android.media.audiofx.Equalizer.getBandFreqRange(short)":"android.media.audiofx.Equalizer.getBandFreqRange（短）\r\n","Returns true if the codec exception is a transient issue,\n            perhaps due to resource constraints, and that the method\n            (or encoding/decoding) may be retried at a later time.":"如果编解码器异常是暂时性问题，则返回 true，\r\n            可能是由于资源限制，而该方法\r\n            （或编码/解码）可能会在稍后重试。\r\n","android.provider.ContactsContract.Directory.PHOTO_SUPPORT":"android.provider.ContactsContract.Directory.PHOTO_SUPPORT\r\n","a byte array containing the barcode":"包含条形码的字节数组\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityPostStarted(android.app.Activity)":"android.app.Application.ActivityLifecycleCallbacks.onActivityPostStarted(android.app.Activity)\r\n","Convenience function for retrieving a single system settings value\n            as an integer.":"检索单个系统设置值的便捷功能\r\n            作为一个整数。\r\n","android.media.tv.TvContract.Channels.VIDEO_FORMAT_1080P":"android.media.tv.TvContract.Channels.VIDEO_FORMAT_1080P\r\n","android.app.ApplicationErrorReport.CrashInfo.exceptionMessage":"android.app.ApplicationErrorReport.CrashInfo.exceptionMessage\r\n","android.provider.Telephony.TextBasedSmsColumns":"android.provider.Telephony.TextBasedSmsColumns\r\n","The ID of a ":"一个的ID\r\n","android.app.admin.SystemUpdatePolicy.ValidationFailedException.ERROR_NEW_FREEZE_PERIOD_TOO_CLOSE":"android.app.admin.SystemUpdatePolicy.ValidationFailedException.ERROR_NEW_FREEZE_PERIOD_TOO_CLOSE\r\n","android.media.MediaCodec.BufferInfo.flags":"android.media.MediaCodec.BufferInfo.flags\r\n","android.media.Session2CommandGroup.Builder":"android.media.Session2CommandGroup.Builder\r\n","android.media.tv.TvInputService.RecordingSession":"android.media.tv.TvInputService.RecordingSession\r\n","android.provider.Settings.Global.ANIMATOR_DURATION_SCALE":"android.provider.Settings.Global.ANIMATOR_DURATION_SCALE\r\n","android.hardware.Camera.Parameters.getPreviewFormat()":"android.hardware.Camera.Parameters.getPreviewFormat()\r\n","Activity Action: Show a settings dialog containing controls for Wifi.":"活动操作：显示包含 Wifi 控件的设置对话框。\r\n","android.hardware.fingerprint.FingerprintManager.AuthenticationCallback.onAuthenticationFailed()":"android.hardware.fingerprint.FingerprintManager.AuthenticationCallback.onAuthenticationFailed()\r\n","Information about a camera":"关于相机的信息\r\n","Returns the unscaled screen-relative X coordinate of the focal\n            center of the magnified region.":"返回焦点的未缩放的屏幕相对 X 坐标\r\n            放大区域的中心。\r\n","android.provider.Settings.System.MODE_RINGER_STREAMS_AFFECTED":"android.provider.Settings.System.MODE_RINGER_STREAMS_AFFECTED\r\n","Builder class for GnssAntennaInfo.":"GnssAntennaInfo 的生成器类。\r\n","android.app.appsearch.SearchResult.MatchRange.SearchResult$MatchRange(int, int)":"android.app.appsearch.SearchResult.MatchRange.SearchResult$MatchRange(int, int)\r\n"," if the flush is initiated successfully on all the sensors\n                    registered for this listener, false if no sensor is previously registered for this\n                    listener or flush on one of the sensors fails.":" 如果在所有传感器上成功启动冲洗\r\n                    为此侦听器注册，如果之前没有为此注册传感器则为 false\r\n                    一个传感器上的侦听器或冲洗器失败。\r\n","android.app.admin.DevicePolicyManager.setMaximumFailedPasswordsForWipe(android.content.ComponentName, int)":"android.app.admin.DevicePolicyManager.setMaximumFailedPasswordsForWipe(android.content.ComponentName, int)\r\n","token of the session to connect to":"要连接到的会话的令牌\r\n","#KEY_TIMEZONE_TYPE":"#KEY_TIMEZONE_TYPE\r\n","android.graphics.text.LineBreaker.Result.getLineAscent(int)":"android.graphics.text.LineBreaker.Result.getLineAscent（整数）\r\n","android.media.AudioRecord.startRecording()":"android.media.AudioRecord.startRecording()\r\n","#getEncodedNameLength(ContentResolver, String)":"#getEncodedNameLength（ContentResolver，字符串）\r\n","A color model is required by a ":"需要一个颜色模型\r\n","android.media.MediaPlayer.OnErrorListener":"android.media.MediaPlayer.OnErrorListener\r\n","android.hardware.Camera.Parameters.FOCUS_MODE_CONTINUOUS_VIDEO":"android.hardware.Camera.Parameters.FOCUS_MODE_CONTINUOUS_VIDEO\r\n","Constructs a prompt set.":"构建提示集。\r\n","An integer value representing the authentication method used.":"表示所使用的身份验证方法的整数值。\r\n","android.hardware.camera2.CameraExtensionSession.ExtensionCaptureCallback.onCaptureSequenceCompleted(android.hardware.camera2.CameraExtensionSession, int)":"android.hardware.camera2.CameraExtensionSession.ExtensionCaptureCallback.onCaptureSequenceCompleted(android.hardware.camera2.CameraExtensionSession, int)\r\n","android.provider.VoicemailContract.Status.ITEM_TYPE":"android.provider.VoicemailContract.Status.ITEM_TYPE\r\n","the identifier of the updated metadata field.":"更新的元数据字段的标识符。\r\n","Depending on the mode defined by the sync-adapter, this flag controls\n            the top-level sync behavior for this data source.":"根据同步适配器定义的模式，该标志控制\r\n            此数据源的顶级同步行为。\r\n","android.provider.Telephony.BaseMmsColumns.MESSAGE_BOX_ALL":"android.provider.Telephony.BaseMmsColumns.MESSAGE_BOX_ALL\r\n","android.provider.Settings.System.WIFI_WATCHDOG_MAX_AP_CHECKS":"android.provider.Settings.System.WIFI_WATCHDOG_MAX_AP_CHECKS\r\n","android.media.tv.TvInputService.Session.onTimeShiftPause()":"android.media.tv.TvInputService.Session.onTimeShiftPause()\r\n","android.media.audiofx.EnvironmentalReverb.setDiffusion(short)":"android.media.audiofx.EnvironmentalReverb.setDiffusion（短）\r\n","BluetoothA2dp":"蓝牙A2dp\r\n","Thrown when the codec is configured for block model and an incompatible API is called.":"当为块模型配置编解码器并调用不兼容的 API 时抛出。\r\n","#LOCALE_TYPE_CURRENT":"#LOCALE_TYPE_CURRENT\r\n","android.provider.Telephony.MmsSms.ERR_TYPE_SMS_PROTO_TRANSIENT":"android.provider.Telephony.MmsSms.ERR_TYPE_SMS_PROTO_TRANSIENT\r\n","android.content.SharedPreferences.OnSharedPreferenceChangeListener.onSharedPreferenceChanged(android.content.SharedPreferences, java.lang.String)":"android.content.SharedPreferences.OnSharedPreferenceChangeListener.onSharedPreferenceChanged(android.content.SharedPreferences, java.lang.String)\r\n",", this\n            is the name of the component that is being used in this process.":"， 这\r\n            是在此过程中使用的组件的名称。\r\n","android.media.MediaDrm.LogMessage":"android.media.MediaDrm.LogMessage\r\n","The maximum length supported for the name of a record in the elementary file.":"基本文件中记录名称支持的最大长度。\r\n","android.provider.CalendarContract.CalendarCacheColumns.KEY":"android.provider.CalendarContract.CalendarCacheColumns.KEY\r\n","android.provider.Contacts.OrganizationColumns.ISPRIMARY":"android.provider.Contacts.OrganizationColumns.ISPRIMARY\r\n","android.provider.Settings.Global.MODE_RINGER":"android.provider.Settings.Global.MODE_RINGER\r\n","Notifies that an error occurred while laying out the document.":"通知在布置文档时发生错误。\r\n","android.app.ActionBar.LayoutParams":"android.app.ActionBar.LayoutParams\r\n","Copies the inverse transform of this color space in specified array.":"在指定数组中复制此颜色空间的逆变换。\r\n","android.app.KeyguardManager.KeyguardDismissCallback":"android.app.KeyguardManager.KeyguardDismissCallback\r\n","Create a builder object for ":"为创建构建器对象\r\n","android.provider.CalendarContract.SyncColumns._SYNC_ID":"android.provider.CalendarContract.SyncColumns._SYNC_ID\r\n","an extra code, specific to the error. Typically\n            implementation dependent.":"特定于错误的额外代码。通常\r\n            实施依赖。\r\n","android.companion.AssociationRequest.Builder.build()":"android.companion.AssociationRequest.Builder.build()\r\n"," on failure (for\n                    instance, if the device is in free fall). Free fall is defined as\n                    condition when the magnitude of the gravity is less than 1/10 of\n                    the nominal value. On failure the output matrices are not modified.":" 失败时（对于\r\n                    例如，如果设备处于自由落体状态）。自由落体定义为\r\n                    当重力的大小小于 1/10 时的情况\r\n                    标称值。失败时不修改输出矩阵。\r\n","android.provider.CallLog.Calls.BLOCK_REASON_RESTRICTED_NUMBER":"android.provider.CallLog.Calls.BLOCK_REASON_RESTRICTED_NUMBER\r\n","android.net.http.SslCertificate.DName.getDName()":"android.net.http.SslCertificate.DName.getDName()\r\n","A string encoding of the recipient IDs of the recipients of\n            the message, in numerical order and separated by spaces.":"收件人的收件人 ID 的字符串编码\r\n            消息，按数字顺序并用空格分隔。\r\n","android.provider.CalendarContract.SyncColumns.DIRTY":"android.provider.CalendarContract.SyncColumns.DIRTY\r\n","The plugin was unable to read data from the filesystem.":"插件无法从文件系统读取数据。\r\n","ParcelFileDescriptor#close\n            ParcelFileDescriptor.close()":"包裹文件描述符#close\r\n            ParcelFileDescriptor.close()\r\n","E incremental update.":"E增量更新。\r\n","Generates a content ":"生成内容\r\n","Column definitions for the preview TV programs table.":"预览电视节目表的列定义。\r\n","android.hardware.input.InputManager.InputDeviceListener.onInputDeviceChanged(int)":"android.hardware.input.InputManager.InputDeviceListener.onInputDeviceChanged(int)\r\n"," intent action that\n            indicates the action result of the saved ":" 意图行动\r\n            表示保存的动作结果\r\n","Request that the player stop its playback; it may clear its state in\n            whatever way is appropriate.":"请求播放器停止播放；它可能会清除它的状态\r\n            无论哪种方式都是合适的。\r\n","android.provider.ContactsContract.StreamItemsColumns.SYNC3":"android.provider.ContactsContract.StreamItemsColumns.SYNC3\r\n","Activity#onDestroy super.onDestroy()":"活动#onDestroy super.onDestroy()\r\n","true to request confirmation from the client (indication), false to send a\n            notification":"true 请求客户端确认（指示），false 发送\r\n            通知\r\n","android.provider.Settings.System.VOLUME_MUSIC":"android.provider.Settings.System.VOLUME_MUSIC\r\n","NfcEvent":"Nfc事件\r\n","CaptureResult#getFrameNumber":"捕获结果#getFrameNumber\r\n","android.provider.Settings.System.ADB_ENABLED":"android.provider.Settings.System.ADB_EN​​ABLED\r\n","The channel type for ATSC (cable).":"ATSC（有线）的频道类型。\r\n","android.media.MediaCodec.OnFirstTunnelFrameReadyListener.onFirstTunnelFrameReady(android.media.MediaCodec)":"android.media.MediaCodec.OnFirstTunnelFrameReadyListener.onFirstTunnelFrameReady(android.media.MediaCodec)\r\n","android.media.midi.MidiManager.DeviceCallback":"android.media.midi.MidiManager.DeviceCallback\r\n","Activity#onResume super.onResume()":"活动#onResume super.onResume()\r\n","android.media.audiofx.DynamicsProcessing.Limiter.getReleaseTime()":"android.media.audiofx.DynamicsProcessing.Limiter.getReleaseTime()\r\n","the non-null ":"非空\r\n","android.provider.CallLog.Calls.CACHED_NORMALIZED_NUMBER":"android.provider.CallLog.Calls.CACHED_NORMALIZED_NUMBER\r\n","The unique resolution id. It is unique amongst other resolutions\n                   supported by the printer.":"唯一的分辨率 ID。它在其他决议中是独一无二的\r\n                   打印机支持。\r\n","Constants for the stream_items table, which contains social stream updates from\n            the user's contact list.":"stream_items 表的常量，其中包含来自\r\n            用户的联系人列表。\r\n","The subject of the call, as delivered via call composer.":"呼叫的主题，通过呼叫作曲家提供。\r\n","android.provider.Telephony.CanonicalAddressesColumns":"android.provider.Telephony.CanonicalAddressesColumns\r\n","android.app.ActivityManager.TaskDescription.ActivityManager$TaskDescription(java.lang.String, int, int)":"android.app.ActivityManager.TaskDescription.ActivityManager$TaskDescription(java.lang.String, int, int)\r\n","BroadcastReceiver#abortBroadcast()\n            BroadcastReceiver.abortBroadcast()":"广播接收器#abortBroadcast()\r\n            BroadcastReceiver.abortBroadcast()\r\n","android.bluetooth.BluetoothGattServer.getConnectionState(android.bluetooth.BluetoothDevice)":"android.bluetooth.BluetoothGattServer.getConnectionState(android.bluetooth.BluetoothDevice)\r\n","android.app.admin.SecurityLog.SecurityEvent.getData()":"android.app.admin.SecurityLog.SecurityEvent.getData()\r\n","Type of usage for text interaction involving shorter messages, which includes SMS,\n            text chat with email addresses.":"涉及较短消息的文本交互的使用类型，包括 SMS、\r\n            与电子邮件地址的文本聊天。\r\n","ContactsContract.DisplayPhoto#CONTENT_MAX_DIMENSIONS_URI":"联系人合同.DisplayPhoto#CONTENT_MAX_DIMENSIONS_URI\r\n","android.provider.ContactsContract.DataColumns.DATA2":"android.provider.ContactsContract.DataColumns.DATA2\r\n","The flattened ":"扁平化的\r\n","ShortcutInfo#hasKeyFieldsOnly()":"快捷信息#hasKeyFieldsOnly()\r\n","android.app.ActivityManager.RunningAppProcessInfo.REASON_PROVIDER_IN_USE":"android.app.ActivityManager.RunningAppProcessInfo.REASON_PROVIDER_IN_USE\r\n","the input bytes representing a certificate of type\n                               ":"表示类型证书的输入字节\r\n                               \r\n","the Font object":"字体对象\r\n","The time (ms since epoch), at which this partition was built, see ":"构建此分区的时间（自纪元以来的毫秒数），请参见\r\n","android.media.MediaCas.Session.close()":"android.media.MediaCas.Session.close()\r\n","android.provider.SimPhonebookContract.ElementaryFiles.MAX_RECORDS":"android.provider.SimPhonebookContract.ElementaryFiles.MAX_RECORDS\r\n","The Nil UUID, as defined in RFC 4122, section 4.":"Nil UUID，如 RFC 4122 第 4 节中所定义。\r\n","android.provider.CalendarContract.Instances.CONTENT_BY_DAY_URI":"android.provider.CalendarContract.Instances.CONTENT_BY_DAY_URI\r\n","android.provider.ContactsContract.SearchSnippets.DEFERRED_SNIPPETING_KEY":"android.provider.ContactsContract.SearchSnippets.DEFERRED_SNIPPETING_KEY\r\n"," if it is not null; otherwise, this will be\n            ":" 如果它不为空；否则，这将是\r\n            \r\n","android.app.TimePickerDialog.OnTimeSetListener.onTimeSet(android.widget.TimePicker, int, int)":"android.app.TimePickerDialog.OnTimeSetListener.onTimeSet(android.widget.TimePicker, int, int)\r\n","android.media.MediaDrm.ErrorCodes.ERROR_KEY_NOT_LOADED":"android.media.MediaDrm.ErrorCodes.ERROR_KEY_NOT_LOADED\r\n","#ACCOUNT_TYPE":"＃帐户类型\r\n","android.provider.Contacts.Groups.CONTENT_ITEM_TYPE":"android.provider.Contacts.Groups.CONTENT_ITEM_TYPE\r\n","Commit the file that was written so far to this session to the blob store maintained by\n            the system.":"将到目前为止写入此会话的文件提交到由维护的 blob 存储\r\n            系统。\r\n","android.inputmethodservice.Keyboard.Key.width":"android.inputmethodservice.Keyboard.Key.width\r\n","android.media.session.MediaController.TransportControls.prepare()":"android.media.session.MediaController.TransportControls.prepare()\r\n","android.provider.ContactsContract.ContactOptionsColumns.LAST_TIME_CONTACTED":"android.provider.ContactsContract.ContactOptionsColumns.LAST_TIME_CONTACTED\r\n"," for the corresponding Contacts Provider\n            implementation.":" 对于相应的联系人提供者\r\n            执行。\r\n","the dialog the key has been dispatched to":"密钥已发送到的对话框\r\n","android.content.DialogInterface.OnDismissListener.onDismiss(android.content.DialogInterface)":"android.content.DialogInterface.OnDismissListener.onDismiss(android.content.DialogInterface)\r\n","An interface for notifying BluetoothProfile IPC clients when they have\n            been connected or disconnected to the service.":"用于通知 BluetoothProfile IPC 客户端的接口\r\n            已连接或断开服务。\r\n","android.bluetooth.BluetoothAdapter":"android.bluetooth.BluetoothAdapter\r\n","The acceptable packet loss percentage (range 0 - 100) before trying\n            another AP on the same network.":"尝试前可接受的丢包百分比（范围 0 - 100）\r\n            同一网络上的另一个 AP。\r\n","Message type: drafts.":"消息类型：草稿。\r\n","Set tab stops for this paragraph.":"为该段落设置制表位。\r\n","Number of bytes available in this root.":"此根中可用的字节数。\r\n","android.media.audiofx.DynamicsProcessing.Channel.DynamicsProcessing$Channel(float, boolean, int, boolean, int, boolean, int, boolean)":"android.media.audiofx.DynamicsProcessing.Channel.DynamicsProcessing$Channel（浮动，布尔值，整数，布尔值，整数，布尔值，整数，布尔值）\r\n","android.provider.ContactsContract.StatusUpdates.PROFILE_CONTENT_URI":"android.provider.ContactsContract.StatusUpdates.PROFILE_CONTENT_URI\r\n","android.graphics.text.LineBreaker.Builder":"android.graphics.text.LineBreaker.Builder\r\n","Provide value of ":"提供价值\r\n","flash mode.":"闪光模式。\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityPostSaveInstanceState(android.app.Activity, android.os.Bundle)":"android.app.Application.ActivityLifecycleCallbacks.onActivityPostSaveInstanceState(android.app.Activity, android.os.Bundle)\r\n","android.media.session.MediaSession.Callback.onPlay()":"android.media.session.MediaSession.Callback.onPlay()\r\n","Returns the quality setting for the JPEG picture. -or- Sets Jpeg quality of captured picture.":"返回 JPEG 图片的质量设置。 - 或 - 设置捕获图片的 Jpeg 质量。\r\n","a new successfully initialized ":"一个新的成功初始化\r\n","A new array of 3 floats containing the specified color\n                    transformed from the source space to the destination space":"包含指定颜色的 3 个浮点数的新数组\r\n                    从源空间转换到目标空间\r\n","A builder class for ":"一个构建器类\r\n","The ID of the sender of the conversation, if present.":"会话发件人的 ID（如果存在）。\r\n","android.provider.Telephony.TextBasedSmsColumns.THREAD_ID":"android.provider.Telephony.TextBasedSmsColumns.THREAD_ID\r\n","android.hardware.camera2.CameraExtensionSession.StateCallback.onConfigured(android.hardware.camera2.CameraExtensionSession)":"android.hardware.camera2.CameraExtensionSession.StateCallback.onConfigured(android.hardware.camera2.CameraExtensionSession)\r\n","Message type: failed outgoing message.":"消息类型：失败的传出消息。\r\n","android.provider.Telephony.Carriers.DEFAULT_SORT_ORDER":"android.provider.Telephony.Carriers.DEFAULT_SORT_ORDER\r\n","the tag originally attached to the entry.":"最初附在条目上的标签。\r\n","android.provider.DocumentsContract.Root.COLUMN_CAPACITY_BYTES":"android.provider.DocumentsContract.Root.COLUMN_CAPACITY_BYTES\r\n","PreviewCallback":"预览回调\r\n","Gets if Mbc stage is in use":"获取 Mbc 阶段是否正在使用\r\n","android.provider.Settings.System.APPEND_FOR_LAST_AUDIBLE":"android.provider.Settings.System.APPEND_FOR_LAST_AUDIBLE\r\n","android.media.MediaRecorder.setAuxiliaryOutputFile(java.io.FileDescriptor)":"android.media.MediaRecorder.setAuxiliaryOutputFile(java.io.FileDescriptor)\r\n","Flag indicating that a raw contact's metadata has changed, and its metadata\n            needs to be synchronized by the server.":"指示原始联系人的元数据已更改的标志，及其元数据\r\n            需要服务器同步。\r\n"," in the specified color space with the\n            specified component values.":" 在指定的色彩空间与\r\n            指定的组件值。\r\n","android.app.Activity.startActivityForResult(android.content.Intent, int, android.os.Bundle)":"android.app.Activity.startActivityForResult(android.content.Intent, int, android.os.Bundle)\r\n","A unique carrier id":"唯一的运营商 ID\r\n","android.provider.Settings.Global.DEVELOPMENT_SETTINGS_ENABLED":"android.provider.Settings.Global.DEVELOPMENT_SETTINGS_ENABLED\r\n","Get whether the content intent is available when the wearable device is not connected\n            to a companion device.":"获取可穿戴设备未连接时内容意图是否可用\r\n            到配套设备。\r\n","EF type identifier for the ADN partition.":"ADN 分区的 EF 类型标识符。\r\n","android.media.midi.MidiManager.DeviceCallback.onDeviceAdded(android.media.midi.MidiDeviceInfo)":"android.media.midi.MidiManager.DeviceCallback.onDeviceAdded(android.media.midi.MidiDeviceInfo)\r\n","android.content.pm.PackageInstaller.SessionInfo.getStagedSessionErrorCode()":"android.content.pm.PackageInstaller.SessionInfo.getStagedSessionErrorCode()\r\n","android.print.PrintDocumentAdapter.LayoutResultCallback.onLayoutFinished(android.print.PrintDocumentInfo, boolean)":"android.print.PrintDocumentAdapter.LayoutResultCallback.onLayoutFinished（android.print.PrintDocumentInfo，布尔值）\r\n","android.app.Notification.Action.Notification$Action(int, java.lang.CharSequence, android.app.PendingIntent)":"android.app.Notification.Action.Notification$Action(int, java.lang.CharSequence, android.app.PendingIntent)\r\n","Gets the state of the auto-white balance lock. -or- Sets the auto-white balance lock state.":"获取自动白平衡锁定的状态。 - 或 - 设置自动白平衡锁定状态。\r\n","The transport stream ID of this channel.":"该通道的传输流 ID。\r\n","android.media.AudioRecord.MetricsConstants.SAMPLERATE":"android.media.AudioRecord.MetricsConstants.SAMPLERATE\r\n","This class represents a reserved SPI.":"此类代表保留的 SPI。\r\n","A formatted string of the next alarm that is set, or the empty string\n            if there is no alarm set.":"设置的下一个警报的格式化字符串，或空字符串\r\n            如果没有设置闹钟。\r\n","android.app.Notification.BubbleMetadata.isNotificationSuppressed()":"android.app.Notification.BubbleMetadata.isNotificationSuppressed()\r\n","Called on the listener to notify it that the previously set marker has been reached\n            by the playback head.":"调用侦听器以通知它已达到先前设置的标记\r\n            由播放头。\r\n","Returns whether the OS should only send this action's ":"返回操作系统是否应该只发送此操作的\r\n","The endpoint that you implement that will receive the callback from the\n            JobScheduler.":"您实现的端点将从\r\n            作业调度程序。\r\n","the selected year":"选择的年份\r\n","android.media.MediaRouter.RouteCategory.getSupportedTypes()":"android.media.MediaRouter.RouteCategory.getSupportedTypes()\r\n","android.provider.Settings.Secure.LOCATION_PROVIDERS_ALLOWED":"android.provider.Settings.Secure.LOCATION_PROVIDERS_ALLOWED\r\n","android.content.Loader.OnLoadCanceledListener.onLoadCanceled(android.content.Loader<D>)":"android.content.Loader.OnLoadCanceledListener.onLoadCanceled(android.content.Loader<D>)\r\n","android.os.Parcelable.Creator.createFromParcel(android.os.Parcel)":"android.os.Parcelable.Creator.createFromParcel(android.os.Parcel)\r\n","Listener that gets notified when checksums are available.":"当校验和可用时收到通知的侦听器。\r\n","The content:// style URI for this class, which allows access to full-size photos,\n            given a key.":"此类的 content:// 样式 URI，允许访问全尺寸照片，\r\n            给了一把钥匙。\r\n","android.os.PowerManager.OnThermalStatusChangedListener.onThermalStatusChanged(int)":"android.os.PowerManager.OnThermalStatusChangedListener.onThermalStatusChanged(int)\r\n","An unblocked content rating":"畅通无阻的内容评级\r\n","The developer preview revision of a prerelease SDK.":"预发布 SDK 的开发者预览版。\r\n","the elementary file type containing the record. If the specified\n                                  SIM doesn't support this elementary file then it will be treated\n                                  as a non-existent record.":"包含记录的基本文件类型。如果指定\r\n                                  SIM 不支持这个基本文件，那么它将被处理\r\n                                  作为一个不存在的记录。\r\n","#CONTENT_TYPE Calls.CONTENT_TYPE":"#CONTENT_TYPE 调用.CONTENT_TYPE\r\n","android.content.pm.PackageInstaller.SessionInfo.getOriginatingUri()":"android.content.pm.PackageInstaller.SessionInfo.getOriginatingUri()\r\n","absolute path to mounted OBB image data or ":"已安装的 OBB 图像数据的绝对路径或\r\n","A new state instance.":"一个新的状态实例。\r\n","android.app.RemoteInput.Builder.getExtras()":"android.app.RemoteInput.Builder.getExtras()\r\n","android.provider.ContactsContract.RawContacts.CONTENT_URI":"android.provider.ContactsContract.RawContacts.CONTENT_URI\r\n"," from a specific source that have\n            no ":" 来自特定的来源\r\n            不\r\n","android.net.IpSecManager.SecurityParameterIndex.close()":"android.net.IpSecManager.SecurityParameterIndex.close()\r\n","GPS latitude coordinate.":"GPS 纬度坐标。\r\n","If this boolean parameter is set to true, then the appended query is treated as a\n            SIP address and the lookup will be performed against SIP addresses in the user's\n            contacts.":"如果此布尔参数设置为 true，则附加查询将被视为\r\n            SIP 地址和查找将针对用户的 SIP 地址执行\r\n            联系人。\r\n","The channel type for DVB-C (cable).":"DVB-C（电缆）的频道类型。\r\n","Takes a flattened string of parameters and adds each one to\n            this Parameters object.":"采用扁平化的参数字符串并将每个参数添加到\r\n            这个参数对象。\r\n","Flag indicating that a document is a directory that wants to block itself\n            from being selected when the user launches an ":"Flag 表示一个文档是一个目录，它想要阻塞自己\r\n            在用户启动时被选中\r\n","android.hardware.Camera.Parameters.getVerticalViewAngle()":"android.hardware.Camera.Parameters.getVerticalViewAngle()\r\n","Message box: failed.":"消息框：失败。\r\n","android.provider.Contacts.ContactMethods.encodeCustomImProtocol(java.lang.String)":"android.provider.Contacts.ContactMethods.encodeCustomImProtocol(java.lang.String)\r\n","android.net.http.SslCertificate.DName":"android.net.http.SslCertificate.DName\r\n","gets the compressor threshold measured in decibels (dB) from 0 dB Full Scale (dBFS). -or- sets the compressor threshold measured in decibels (dB) from 0 dB Full Scale (dBFS).":"从 0 dB Full Scale (dBFS) 获取以分贝 (dB) 为单位测量的压缩器阈值。 - 或 - 设置从 0 dB Full Scale (dBFS) 以分贝 (dB) 测量的压缩器阈值。\r\n","android.provider.Settings.System.PARENTAL_CONTROL_LAST_UPDATE":"android.provider.Settings.System.PARENTAL_CONTROL_LAST_UPDATE\r\n","The fixed theta angle separation between successive rows.":"连续行之间的固定 theta 角分隔。\r\n","Builds a new ":"建立一个新的\r\n","true if Limiter stage will be used, false otherwise. This can't be\n            changed later.":"如果将使用 Limiter 阶段，则为 true，否则为 false。这不可能\r\n            后来改了。\r\n","AVC High 4:4:4 profile.":"AVC 高 4:4:4 配置文件。\r\n","Flexible 24 bits per pixel YUV color format with 8-bit chroma and luma\n            components.":"灵活的每像素 24 位 YUV 颜色格式，具有 8 位色度和亮度\r\n            成分。\r\n","Flexible 32 bits per pixel RGBA color format with 8-bit red, green, blue, and alpha\n            components.":"灵活的每像素 32 位 RGBA 颜色格式，具有 8 位红色、绿色、蓝色和 alpha\r\n            成分。\r\n","android.os.Debug.MemoryInfo.nativePrivateDirty":"android.os.Debug.MemoryInfo.nativePrivateDirty\r\n","example.com":"例子.com\r\n","Proxy address.":"代理地址。\r\n","android.provider.Settings.Secure":"android.provider.Settings.Secure\r\n","android.provider.CallLog.Calls.PHONE_ACCOUNT_ID":"android.provider.CallLog.Calls.PHONE_ACCOUNT_ID\r\n","android.media.AudioTrack.OnCodecFormatChangedListener":"android.media.AudioTrack.OnCodecFormatChangedListener\r\n","android.media.MediaCodecInfo.VideoCapabilities.getSupportedFrameRatesFor(int, int)":"android.media.MediaCodecInfo.VideoCapabilities.getSupportedFrameRatesFor(int, int)\r\n","#TRACK_TYPE_AUDIO":"#TRACK_TYPE_AUDIO\r\n","APN password.":"接入点密码。\r\n"," column\n            names and flags.":" 柱子\r\n            名字和旗帜。\r\n","android.provider.ContactsContract.Intents.SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED":"android.provider.ContactsContract.Intents.SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED\r\n","The id of the input device that was added.":"添加的输入设备的 ID。\r\n","#MEDIA_INFO_METADATA_UPDATE":"#MEDIA_INFO_METADATA_UPDATE\r\n","android.provider.Contacts.Groups.GROUP_ANDROID_STARRED":"android.provider.Contacts.Groups.GROUP_ANDROID_STARRED\r\n","android.provider.Telephony.BaseMmsColumns.CONTENT_TYPE":"android.provider.Telephony.BaseMmsColumns.CONTENT_TYPE\r\n"," for the\n            current thread.":" 为了\r\n            当前线程。\r\n","android.content.pm.PackageInstaller.Session.isStaged()":"android.content.pm.PackageInstaller.Session.isStaged()\r\n","android.provider.Telephony.ServiceStateTable.IS_MANUAL_NETWORK_SELECTION":"android.provider.Telephony.ServiceStateTable.IS_MANUAL_NETWORK_SELECTION\r\n","Returns the set of session IDs that will be committed when this session is commited if\n            this session is a multi-package session.":"如果提交此会话，则返回将提交的会话 ID 集\r\n            本届会议是一个多包会议。\r\n","MediaDrmStateException":"MediaDrmStateException\r\n","android.provider.ContactsContract.DataColumns.DATA13":"android.provider.ContactsContract.DataColumns.DATA13\r\n","android.media.Session2Command.Result.RESULT_SUCCESS":"android.media.Session2Command.Result.RESULT_SUCCESS\r\n","VP9 Profile 2 4:2:0 10-bit":"VP9 配置文件 2 4:2:0 10 位\r\n","android.app.assist.AssistStructure.ViewNode.getIdPackage()":"android.app.assist.AssistStructure.ViewNode.getIdPackage()\r\n","Request that the player pause its playback and stay at its current\n            position.":"请求播放器暂停播放并保持当前状态\r\n            位置。\r\n","android.hardware.Camera.Size.height":"android.hardware.Camera.Size.height\r\n","true if the combination of channel mask and virtualization mode is supported, false\n               otherwise.":"如果支持通道掩码和虚拟化模式的组合，则为 true，否则为 false\r\n               否则。\r\n","gets attack time for limiter compressor in milliseconds (ms) -or- sets attack time for limiter compressor in milliseconds (ms)":"以毫秒 (ms) 为单位获取限制器压缩器的启动时间 - 或 - 以毫秒 (ms) 为单位设置限制器压缩器的启动时间\r\n","android.provider.CalendarContract.EventsColumns.HAS_ATTENDEE_DATA":"android.provider.CalendarContract.EventsColumns.HAS_ATTENDEE_DATA\r\n","Interface definition for a class that will be called when the container's activity\n            is stopped.":"容器活动时将调用的类的接口定义\r\n            停止了。\r\n","\n            to indicate that the clearing of an application's user data is done.":"\r\n            表示已完成应用程序用户数据的清除。\r\n","android.graphics.fonts.FontFamily.Builder.FontFamily$Builder(android.graphics.fonts.Font)":"android.graphics.fonts.FontFamily.Builder.FontFamily$Builder(android.graphics.fonts.Font)\r\n","android.provider.Contacts.PhotosColumns.DATA":"android.provider.Contacts.PhotosColumns.DATA\r\n","android.app.ApplicationErrorReport.CrashInfo.stackTrace":"android.app.ApplicationErrorReport.CrashInfo.stackTrace\r\n","#TRACK_TYPE_VIDEO":"#TRACK_TYPE_VIDEO\r\n","android.provider.ContactsContract.AggregationExceptions.CONTENT_URI":"android.provider.ContactsContract.AggregationExceptions.CONTENT_URI\r\n","ActivityManager#getMemoryInfo":"活动管理器#getMemoryInfo\r\n","android.provider.ContactsContract.PhoneticNameStyle.JAPANESE":"android.provider.ContactsContract.PhoneticNameStyle.JAPANESE\r\n","android.media.MediaSync.Callback":"android.media.MediaSync.Callback\r\n","android.content.pm.PackageInstaller.SessionParams.USER_ACTION_UNSPECIFIED":"android.content.pm.PackageInstaller.SessionParams.USER_ACTION_UNSPECIFIED\r\n","UUID for this particular implementation":"此特定实现的 UUID\r\n","android.app.Notification.BubbleMetadata.getShortcutId()":"android.app.Notification.BubbleMetadata.getShortcutId()\r\n"," when there is an entity ready for consumption from the\n               restore stream, ":" 当有一个实体准备好从\r\n               恢复流，\r\n","android.content.pm.ActivityInfo.WindowLayout.heightFraction":"android.content.pm.ActivityInfo.WindowLayout.heightFraction\r\n","Turn this item into HTML text, regardless of the type of data it\n            actually contains.":"将此项目转换为 HTML 文本，而不管它的数据类型如何\r\n            实际上包含。\r\n","android.media.SoundPool.Builder.SoundPool$Builder()":"android.media.SoundPool.Builder.SoundPool$Builder()\r\n","the MediaPlayer that issued the seek operation":"发出搜索操作的 MediaPlayer\r\n","android.app.DownloadManager.Query":"android.app.DownloadManager.Query\r\n","android.app.ActivityManager.RunningServiceInfo.uid":"android.app.ActivityManager.RunningServiceInfo.uid\r\n","The setting's current value, or 'def' if it is not defined\n            or not a valid ":"设置的当前值，如果未定义则为 'def'\r\n            或无效\r\n","android.content.BroadcastReceiver.PendingResult.setResultExtras(android.os.Bundle)":"android.content.BroadcastReceiver.PendingResult.setResultExtras(android.os.Bundle)\r\n","The init data parameter passed to ":"传递给的初始化数据参数\r\n","Opto-electronic transfer function, cannot be null":"光电传递函数，不能为空\r\n","OnEventListener#onEvent":"OnEventListener#onEvent\r\n","android.app.ApplicationErrorReport.BatteryInfo.usageDetails":"android.app.ApplicationErrorReport.BatteryInfo.usageDetails\r\n"," if this validation fails.":" 如果此验证失败。\r\n","Public makes the contents visible to anyone with access to the\n            calendar.":"公共使任何有权访问的人都可以看到内容\r\n            日历。\r\n","android.media.MediaRecorder.MetricsConstants.MOVIE_TIMESCALE":"android.media.MediaRecorder.MetricsConstants.MOVIE_TIMESCALE\r\n","android.media.MediaParser.SeekableInputReader.seekToPosition(long)":"android.media.MediaParser.SeekableInputReader.seekToPosition(长)\r\n","A camera's torch mode has become enabled or disabled and can be changed via\n            ":"相机的手电筒模式已启用或禁用，可以通过以下方式更改\r\n            \r\n","android.app.ActivityManager.RunningServiceInfo.FLAG_STARTED":"android.app.ActivityManager.RunningServiceInfo.FLAG_STARTED\r\n","The MIME type of a directory of \"watch next\" TV programs.":"“接下来看”电视节目目录的 MIME 类型。\r\n","The device has been in a freeze period and when combining with the new freeze period\n            to be set, it will result in the total freeze period being longer than 90 days.":"该设备已处于冻结期，并与新的冻结期结合使用\r\n            设置，将导致总冻结期超过90天。\r\n","android.content.ContextParams.Builder.build()":"android.content.ContextParams.Builder.build()\r\n","android.provider.CallLog.Calls.LAST_MODIFIED":"android.provider.CallLog.Calls.LAST_MODIFIED\r\n","android.os.DropBoxManager.Entry.DropBoxManager$Entry(java.lang.String, long)":"android.os.DropBoxManager.Entry.DropBoxManager$Entry(java.lang.String, long)\r\n","Thrown when an internal codec error occurs.":"发生内部编解码器错误时抛出。\r\n","android.net.http.HttpResponseCache":"android.net.http.HttpResponseCache\r\n","android.app.appsearch.SetSchemaResponse.MigrationFailure.getNamespace()":"android.app.appsearch.SetSchemaResponse.MigrationFailure.getNamespace()\r\n","android.app.blob.BlobStoreManager.Session.allowPublicAccess()":"android.app.blob.BlobStoreManager.Session.allowPublicAccess()\r\n","android.media.AudioRecord.OnRoutingChangedListener.onRoutingChanged(android.media.AudioRecord)":"android.media.AudioRecord.OnRoutingChangedListener.onRoutingChanged(android.media.AudioRecord)\r\n","android.media.MediaCodecInfo.CodecProfileLevel.AV1ProfileMain10HDR10":"android.media.MediaCodecInfo.CodecProfileLevel.AV1ProfileMain10HDR10\r\n","The \"deleted\" flag: \"0\" by default, \"1\" if the row has been marked\n            for deletion.":"“已删除”标志：默认为“0”，如果该行已被标记为“1”\r\n            删除。\r\n","android.app.assist.AssistStructure.ViewNode.isCheckable()":"android.app.assist.AssistStructure.ViewNode.isCheckable()\r\n","PrinterCapabilitiesInfo":"打印机能力信息\r\n","evaluate":"评价\r\n"," extras.":" 演员。\r\n","android.provider.ContactsContract.BaseSyncColumns.SYNC2":"android.provider.ContactsContract.BaseSyncColumns.SYNC2\r\n","This method is called when the camera device has finished configuring itself, and the\n            session can start processing capture requests.":"当相机设备完成自身配置时调用此方法，并且\r\n            会话可以开始处理捕获请求。\r\n","Returns the minimum width in ems of the text associated with this node, or ":"返回与此节点关联的文本的最小宽度（以 em 为单位），或者\r\n","android.provider.Telephony.TextBasedSmsColumns.STATUS_PENDING":"android.provider.Telephony.TextBasedSmsColumns.STATUS_PENDING\r\n",": The requested operation cannot be\n            completed due to a problem that does not fit under any other error codes, or the error code\n            for the problem is defined on the higher version than application's\n            ":": 请求的操作不能\r\n            由于不属于任何其他错误代码或错误代码的问题而完成\r\n            因为问题是在比应用程序更高的版本上定义的\r\n            \r\n","android.provider.ContactsContract.SimAccount.ADN_EF_TYPE":"android.provider.ContactsContract.SimAccount.ADN_EF_TYPE\r\n"," that allows you to receive the\n            ClassLoader the object is being created in.":" 让你收到\r\n            正在创建对象的 ClassLoader。\r\n","android.provider.FontsContract.FontRequestCallback.onTypefaceRequestFailed(int)":"android.provider.FontsContract.FontRequestCallback.onTypefaceRequestFailed(int)\r\n","CaptureResult#get":"捕获结果#get\r\n",", set as the default value when a call was\n            not missed.":", 调用时设置为默认值\r\n            没有错过。\r\n","android.content.Loader.ForceLoadContentObserver":"android.content.Loader.ForceLoadContentObserver\r\n","Retrieve the most recent activity class that was seen by this \n            monitor.":"检索此最近看到的活动类\r\n            监视器。\r\n","android.media.MediaPlayer.OnDrmPreparedListener":"android.media.MediaPlayer.OnDrmPreparedListener\r\n","An attribute in the current theme that contains a\n                                reference to a style resource that supplies\n                                defaults values for the TypedArray.  Can be\n                                0 to not look for defaults.":"当前主题中的一个属性，包含\r\n                                引用提供的样式资源\r\n                                TypedArray 的默认值。可\r\n                                0 不寻找默认值。\r\n","Called when the routing of an AudioRecord changes from either and\n            explicit or policy rerouting.":"当 AudioRecord 的路由从 和\r\n            显式或策略重新路由。\r\n","android.content.BroadcastReceiver.PendingResult.getAbortBroadcast()":"android.content.BroadcastReceiver.PendingResult.getAbortBroadcast()\r\n","new state of the auto-exposure lock. True means that\n                   auto-exposure is locked, false means that the auto-exposure\n                   routine is free to run normally.":"自动曝光锁的新状态。真意味着\r\n                   自动曝光被锁定，false 表示自动曝光\r\n                   routine是可以正常运行的。\r\n","Message type: sent messages.":"消息类型：已发送消息。\r\n","android.content.ContentProvider.delete(android.net.Uri, android.os.Bundle)":"android.content.ContentProvider.delete(android.net.Uri, android.os.Bundle)\r\n","android.provider.VoicemailContract.Status.DATA_CHANNEL_STATE_SERVER_CONNECTION_ERROR":"android.provider.VoicemailContract.Status.DATA_CHANNEL_STATE_SERVER_CONNECTION_ERROR\r\n","Whether this key repeats itself when held down":"按住此键时是否重复\r\n","android.net.sip.SipAudioCall.Listener.onCallEstablished(android.net.sip.SipAudioCall)":"android.net.sip.SipAudioCall.Listener.onCallEstablished(android.net.sip.SipAudioCall)\r\n","Interface definition for the callbacks to be invoked whenever media events, metadata\n            and playback status are available.":"每当媒体事件、元数据时调用回调的接口定义\r\n            和播放状态可用。\r\n","android.provider.ContactsContract.Contacts.CONTENT_STREQUENT_URI":"android.provider.ContactsContract.Contacts.CONTENT_STREQUENT_URI\r\n","\n            set to  ":"\r\n            设置\r\n","android.provider.ContactsContract.PhoneLookupColumns.TYPE":"android.provider.ContactsContract.PhoneLookupColumns.TYPE\r\n","Returns the a resource id set for the property.":"返回为该属性设置的资源 ID。\r\n","Notifies that write was cancelled as a result of a cancellation request.":"通知写入因取消请求而被取消。\r\n","Called when a user's interaction with an analog control, such as\n            flinging a trackball, generates simulated down/up events for the same\n            key multiple times in quick succession.":"当用户与模拟控件交互时调用，例如\r\n            扔一个轨迹球，生成相同的模拟向下/向上事件\r\n            快速连续多次按键。\r\n","android.provider.UserDictionary.Words.WORD":"android.provider.UserDictionary.Words.WORD\r\n","Gets the reflections delay. -or- Sets the delay time for the early reflections.":"获取反射延迟。 - 或 - 设置早期反射的延迟时间。\r\n","android.content.pm.LauncherApps.Callback.onPackagesUnsuspended(java.lang.String[], android.os.UserHandle)":"android.content.pm.LauncherApps.Callback.onPackagesUnsuspended(java.lang.String[], android.os.UserHandle)\r\n","a string containing the name of the given preset.":"包含给定预设名称的字符串。\r\n","android.content.DialogInterface.OnKeyListener.onKey(android.content.DialogInterface, int, android.view.KeyEvent)":"android.content.DialogInterface.OnKeyListener.onKey(android.content.DialogInterface, int, android.view.KeyEvent)\r\n","result code":"结果代码\r\n","The profile of the media content.":"媒体内容的概况。\r\n","android.media.audiofx.EnvironmentalReverb.getDecayHFRatio()":"android.media.audiofx.EnvironmentalReverb.getDecayHFRatio()\r\n","#getMaxZoom":"#getMaxZoom\r\n","The type of transition that is beginning,\n            ":"开始的过渡类型，\r\n            \r\n","android.hardware.Camera.Area.Camera$Area(android.graphics.Rect, int)":"android.hardware.Camera.Area.Camera$Area(android.graphics.Rect, int)\r\n","The <strong>localized</strong> human readable label.":"<strong>本地化</strong>人类可读标签。\r\n","android.media.AudioTrack.MetricsConstants.STREAMTYPE":"android.media.AudioTrack.MetricsConstants.STREAMTYPE\r\n","android.media.MediaCodecInfo.CodecProfileLevel.AVCProfileConstrainedBaseline":"android.media.MediaCodecInfo.CodecProfileLevel.AVCProfileConstrainedBaseline\r\n","Sentinel value for use with ":"使用的哨兵值\r\n","android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_BACKGROUND":"android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_BACKGROUND\r\n","A return value of GL10.GL_TRUE indicates success, a return value\n                    of GL10.GL_FALSE indicates failure.":"返回值为GL10.GL_TRUE表示成功，返回值\r\n                    GL10.GL_FALSE 表示失败。\r\n","android.provider.CalendarContract.EventsColumns.CALENDAR_ID":"android.provider.CalendarContract.EventsColumns.CALENDAR_ID\r\n","android.app.assist.AssistStructure.ViewNode.isOpaque()":"android.app.assist.AssistStructure.ViewNode.isOpaque()\r\n","Returns whether fields in the nested document should be indexed according to that\n            document's schema.":"返回嵌套文档中的字段是否应该根据该索引\r\n            文档的架构。\r\n","The URI of the recording data for this recorded program.":"此录制节目的录制数据的 URI。\r\n","Internal data used by individual TV input services.":"个别电视输入服务使用的内部数据。\r\n","Listener to be called when an output frame has rendered on the output surface":"当输出帧在输出表面上呈现时调用的侦听器\r\n","Start an activity in this task.":"在此任务中启动一项活动。\r\n","android.provider.SyncStateContract.Helpers.newUpdateOperation(android.net.Uri, byte[])":"android.provider.SyncStateContract.Helpers.newUpdateOperation(android.net.Uri, byte[])\r\n","android.provider.ContactsContract.Intents.SEARCH_SUGGESTION_CLICKED":"android.provider.ContactsContract.Intents.SEARCH_SUGGESTION_CLICKED\r\n","the port name":"端口名称\r\n","android.animation.Animator.AnimatorListener.onAnimationEnd(android.animation.Animator)":"android.animation.Animator.AnimatorListener.onAnimationEnd(android.animation.Animator)\r\n"," HashMap to pass the return status.":" HashMap 来传递返回状态。\r\n","Returns the name of the property.":"返回属性的名称。\r\n","ContactsContract.CommonDataKinds.Identity#IDENTITY":"联系人合同.CommonDataKinds.Identity#IDENTITY\r\n","Has the message been seen by the user? The \"seen\" flag determines\n            whether we need to show a notification.":"消息是否已被用户看到？ “看到”标志决定\r\n            我们是否需要显示通知。\r\n",", it indicates success. Otherwise, failure.":"，表示成功。否则，失败。\r\n","android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile1":"android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile1\r\n","The priority to run the thread at. The value supplied must be from \n            ":"运行线程的优先级。提供的值必须来自\r\n            \r\n","android.media.tv.TvContract.Programs.COLUMN_START_TIME_UTC_MILLIS":"android.media.tv.TvContract.Programs.COLUMN_START_TIME_UTC_MILLIS\r\n","Whether this is the primary phone number":"这是否是主要电话号码\r\n","android.app.Notification.MessagingStyle.getConversationTitle()":"android.app.Notification.MessagingStyle.getConversationTitle()\r\n","android.os.Debug.MemoryInfo.dalvikPss":"android.os.Debug.MemoryInfo.dalvikPss\r\n","Limiter Compressor ratio (N:1) (input:output)":"限制器压缩比 (N:1)（输入：输出）\r\n","Where to place the configuration settings.":"放置配置设置的位置。\r\n","android.inputmethodservice.Keyboard.Row.mode":"android.inputmethodservice.Keyboard.Row.mode\r\n","Gets the top margin in mils (thousandths of an inch).":"获取以密耳（千分之一英寸）为单位的顶部边距。\r\n","Gets inputGain value in decibels (dB) for channel indicated by channelIndex":"获取 channelIndex 指示的通道的以分贝 (dB) 为单位的 inputGain 值\r\n","android.media.tv.TvContract.Channels.VIDEO_RESOLUTION_HD":"android.media.tv.TvContract.Channels.VIDEO_RESOLUTION_HD\r\n","Interface that is implemented to discover when a Loader has been canceled\n            before it finished loading its data.":"为发现 Loader 何时被取消而实现的接口\r\n            在它完成加载数据之前。\r\n","#FINGERPRINT_GESTURE_SWIPE_RIGHT":"#FINGERPRINT_GESTURE_SWIPE_RIGHT\r\n","Create a LocalServerSocket from a file descriptor that's already\n            been created and bound.":"从已经存在的文件描述符创建一个 LocalServerSocket\r\n            被创建和绑定。\r\n","Called when the checksums are available.":"当校验和可用时调用。\r\n","android.hardware.Camera.Parameters.getSupportedPictureFormats()":"android.hardware.Camera.Parameters.getSupportedPictureFormats()\r\n"," pointing to the\n                       last backup state provided by the application. May be\n                       ":" 指向\r\n                       应用程序提供的最后备份状态。或许\r\n                       \r\n","android.provider.Settings.System.NOTIFICATION_SOUND":"android.provider.Settings.System.NOTIFICATION_SOUND\r\n","The post-dial portion of a dialed number, including any digits dialed after a\n            ":"已拨号码的拨号后部分，包括在\r\n            \r\n","android.media.tv.TvInputService.RecordingSession.onStopRecording()":"android.media.tv.TvInputService.RecordingSession.onStopRecording()\r\n","android.gesture.GestureStroke.GestureStroke(java.util.ArrayList<android.gesture.GesturePoint>)":"android.gesture.GestureStroke.GestureStroke(java.util.ArrayList<android.gesture.GesturePoint>)\r\n","android.provider.Settings.System.getString(android.content.ContentResolver, java.lang.String)":"android.provider.Settings.System.getString(android.content.ContentResolver, java.lang.String)\r\n","Builds and validates the VcnConfig.":"构建并验证 VcnConfig。\r\n","android.graphics.BitmapFactory.Options.inBitmap":"android.graphics.BitmapFactory.Options.inBitmap\r\n","The ID of the TV channel that provides this recorded program.":"提供此录制节目的电视频道的 ID。\r\n","a SyncRequest with the information contained within this\n                    builder.":"包含此信息的 SyncRequest\r\n                    建设者。\r\n","android.app.usage.UsageEvents.Event.getConfiguration()":"android.app.usage.UsageEvents.Event.getConfiguration()\r\n","ERROR_UNKNOWN is used where no other defined error code is applicable\n            to the current failure.":"ERROR_UNKNOWN 用于没有其他定义的错误代码适用的地方\r\n            到目前的失败。\r\n","The amount of data (in bytes) in the buffer.":"缓冲区中的数据量（以字节为单位）。\r\n","android.provider.Telephony.BaseMmsColumns.LOCKED":"android.provider.Telephony.BaseMmsColumns.LOCKED\r\n","#MODE_INHERIT_EXISTING":"#MODE_INHERIT_EXISTING\r\n","android.media.session.MediaSession.Callback.onPlayFromMediaId(java.lang.String, android.os.Bundle)":"android.media.session.MediaSession.Callback.onPlayFromMediaId(java.lang.String, android.os.Bundle)\r\n","android.app.AlertDialog.Builder.getContext()":"android.app.AlertDialog.Builder.getContext()\r\n","android.media.tv.TvContract.Channels.VIDEO_RESOLUTION_SD":"android.media.tv.TvContract.Channels.VIDEO_RESOLUTION_SD\r\n"," to indicate that you have not handled\n            this event and it should continue to be propagated.":" 表明你还没有处理\r\n            这个事件，它应该继续传播。\r\n","Returns the current magnification scale.":"返回当前的放大比例。\r\n","android.provider.CalendarContract.Calendars.DEFAULT_SORT_ORDER":"android.provider.CalendarContract.Calendars.DEFAULT_SORT_ORDER\r\n"," if the accessibility button is available to this\n                             service, ":" 如果可访问性按钮对此可用\r\n                             服务，\r\n","android.provider.SyncStateContract.Columns.ACCOUNT_NAME":"android.provider.SyncStateContract.Columns.ACCOUNT_NAME\r\n","WEBM media file format":"WEBM 媒体文件格式\r\n","android.media.audiofx.DynamicsProcessing.Limiter.getThreshold()":"android.media.audiofx.DynamicsProcessing.Limiter.getThreshold()\r\n","android.accessibilityservice.GestureDescription.StrokeDescription.willContinue()":"android.accessibilityservice.GestureDescription.StrokeDescription.willContinue()\r\n","Optional launch options.":"可选的启动选项。\r\n","android.provider.ContactsContract.RawContactsColumns.CONTACT_ID":"android.provider.ContactsContract.RawContactsColumns.CONTACT_ID\r\n","android.provider.Browser.clearSearches(android.content.ContentResolver)":"android.provider.Browser.clearSearches(android.content.ContentResolver)\r\n","the notification":"通知\r\n","android.inputmethodservice.InputMethodService.InputMethodSessionImpl":"android.inputmethodservice.InputMethodService.InputMethodSessionImpl\r\n","android.media.MediaCodecInfo.CodecProfileLevel.AVCProfileBaseline":"android.media.MediaCodecInfo.CodecProfileLevel.AVCProfileBaseline\r\n","android.os.PowerManager.WakeLock.acquire()":"android.os.PowerManager.WakeLock.acquire()\r\n","Task affiliation for grouping with other tasks.":"与其他任务分组的任务隶属关系。\r\n","The callback to send the action list. The actions list cannot\n                contain ":"发送动作列表的回调。动作列表不能\r\n                包含\r\n",". If you want to allow the event to\n                    be handled by the next receiver, return ":".如果你想让事件发生\r\n                    由下一个接收者处理，返回\r\n","android.media.MediaCas.Session.processEcm(byte[])":"android.media.MediaCas.Session.processEcm(byte[])\r\n","android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl":"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl\r\n","android.media.MediaRouter.RouteInfo.requestUpdateVolume(int)":"android.media.MediaRouter.RouteInfo.requestUpdateVolume(int)\r\n","android.media.MediaCodecInfo.CodecProfileLevel.AVCProfileHigh444":"android.media.MediaCodecInfo.CodecProfileLevel.AVCProfileHigh444\r\n","android.content.ClipData.Item.ClipData$Item(java.lang.CharSequence)":"android.content.ClipData.Item.ClipData$Item(java.lang.CharSequence)\r\n","SMIA 10-bit Bayer format.":"SMIA 10 位拜耳格式。\r\n","android.media.tv.TvContract.Channels.COLUMN_LOCKED":"android.media.tv.TvContract.Channels.COLUMN_LOCKED\r\n","android.provider.ContactsContract.DisplayNameSources.STRUCTURED_PHONETIC_NAME":"android.provider.ContactsContract.DisplayNameSources.STRUCTURED_PHONETIC_NAME\r\n","RemoteControlClient associated with this route":"与此路由关联的 RemoteControlClient\r\n","android.provider.BlockedNumberContract.BlockedNumbers.COLUMN_E164_NUMBER":"android.provider.BlockedNumberContract.BlockedNumbers.COLUMN_E164_NUMBER\r\n","immutablyRestricted":"不可变的限制\r\n","BroadcastReceiver#getResultCode()\n            BroadcastReceiver.getResultCode()":"广播接收器#getResultCode()\r\n            BroadcastReceiver.getResultCode() 方法\r\n","android.media.MediaRouter2.RoutingController.getId()":"android.media.MediaRouter2.RoutingController.getId()\r\n","android.provider.CalendarContract.EventsColumns.EXDATE":"android.provider.CalendarContract.EventsColumns.EXDATE\r\n","Remove a surface from the list of targets for this request.":"从此请求的目标列表中删除表面。\r\n","Build the font family":"构建字体系列\r\n","android.app.Notification.MessagingStyle.Notification$MessagingStyle(java.lang.CharSequence)":"android.app.Notification.MessagingStyle.Notification$MessagingStyle(java.lang.CharSequence)\r\n","the name of this route category":"此路线类别的名称\r\n","android.content.ClipData.Item.ClipData$Item(java.lang.CharSequence, android.content.Intent, android.net.Uri)":"android.content.ClipData.Item.ClipData$Item(java.lang.CharSequence, android.content.Intent, android.net.Uri)\r\n","The network affiliation for this TV channel.":"此电视频道的网络隶属关系。\r\n","android.provider.Telephony.TextBasedSmsColumns.REPLY_PATH_PRESENT":"android.provider.Telephony.TextBasedSmsColumns.REPLY_PATH_PRESENT\r\n","Called when the Activity calls ":"Activity 调用时调用\r\n","android.content.pm.PackageInstaller.Session.addChildSessionId(int)":"android.content.pm.PackageInstaller.Session.addChildSessionId(int)\r\n","Invoked when status of the VCN for this callback's subscription group changes.":"当此回调的订阅组的 VCN 状态更改时调用。\r\n","android.app.SharedElementCallback.OnSharedElementsReadyListener.onSharedElementsReady()":"android.app.SharedElementCallback.OnSharedElementsReadyListener.onSharedElementsReady()\r\n","android.hardware.camera2.CameraCaptureSession.StateCallback.onConfigured(android.hardware.camera2.CameraCaptureSession)":"android.hardware.camera2.CameraCaptureSession.StateCallback.onConfigured(android.hardware.camera2.CameraCaptureSession)\r\n"," to indicate that a call was blocked because it is\n            in the BlockedNumbers provider.":" 表示呼叫被阻止，因为它是\r\n            在 BlockedNumbers 提供商中。\r\n","Called when a session expiration update occurs, to inform the app\n            about the change in expiration time":"当会话过期更新发生时调用，以通知应用程序\r\n            关于到期时间的变化\r\n","Optional arguments for the ":"的可选参数\r\n","android.provider.CalendarContract.CalendarCache.TIMEZONE_TYPE_AUTO":"android.provider.CalendarContract.CalendarCache.TIMEZONE_TYPE_AUTO\r\n","android.hardware.Camera.Parameters.getInt(java.lang.String)":"android.hardware.Camera.Parameters.getInt(java.lang.String)\r\n","response-status":"响应状态\r\n","android.drm.DrmStore.DrmObjectType":"android.drm.DrmStore.DrmObjectType\r\n","android.provider.DocumentsContract.Root.COLUMN_AVAILABLE_BYTES":"android.provider.DocumentsContract.Root.COLUMN_AVAILABLE_BYTES\r\n","android.provider.CalendarContract.EventsColumns.SYNC_DATA1":"android.provider.CalendarContract.EventsColumns.SYNC_DATA1\r\n","the background image":"背景图片\r\n","android.inputmethodservice.Keyboard.Key.getCurrentDrawableState()":"android.inputmethodservice.Keyboard.Key.getCurrentDrawableState()\r\n","android.os.CountDownTimer":"android.os.CountDownTimer\r\n","android.provider.Browser.deleteHistoryTimeFrame(android.content.ContentResolver, long, long)":"android.provider.Browser.deleteHistoryTimeFrame（android.content.ContentResolver，长，长）\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatL16":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatL16\r\n","Returns true if it is possible to allocate a linear block that can be\n            passed to all listed codecs as input buffers without copying the\n            content.":"如果可以分配一个线性块，则返回 true\r\n            传递给所有列出的编解码器作为输入缓冲区而不复制\r\n            内容。\r\n","An ObjectAnimator object that is set up to animate along ":"一个 ObjectAnimator 对象，它被设置为沿着动画\r\n","If the file to be downloaded is to be scanned by MediaScanner, this method\n            should be called before ":"如果要下载的文件是用MediaScanner扫描的，这个方法\r\n            应该在之前调用\r\n","android.app.usage.NetworkStats.Bucket.UID_ALL":"android.app.usage.NetworkStats.Bucket.UID_ALL\r\n","android.media.audiofx.EnvironmentalReverb.setReverbLevel(short)":"android.media.audiofx.EnvironmentalReverb.setReverbLevel（短）\r\n","This download is visible but only shows in the notifications\n            while it's in progress.":"此下载可见，但仅显示在通知中\r\n            在进行中。\r\n","android.provider.Contacts.People.setPhotoData(android.content.ContentResolver, android.net.Uri, byte[])":"android.provider.Contacts.People.setPhotoData(android.content.ContentResolver, android.net.Uri, byte[])\r\n","Return total shared clean memory usage in kB.":"以 kB 为单位返回共享干净内存的总使用量。\r\n","Returns true if this node is in an enabled state.":"如果此节点处于启用状态，则返回 true。\r\n","android.provider.VoicemailContract.Status.NOTIFICATION_CHANNEL_STATE_OK":"android.provider.VoicemailContract.Status.NOTIFICATION_CHANNEL_STATE_OK\r\n","The left margin.":"左边距。\r\n","#UNKNOWN_DURATION":"#UNKNOWN_DURATION\r\n","Callback for notification of changes to operation active state.":"操作活动状态更改通知的回调。\r\n","android.provider.ContactsContract.PhoneLookupColumns.CONTACT_ID":"android.provider.ContactsContract.PhoneLookupColumns.CONTACT_ID\r\n","the dialog where the selection was made":"做出选择的对话框\r\n","android.gesture.GestureStore.removeGesture(java.lang.String, android.gesture.Gesture)":"android.gesture.GestureStore.removeGesture(java.lang.String, android.gesture.Gesture)\r\n","Indicates whether the device is under restricted secure FRP mode.":"指示设备是否处于受限安全 FRP 模式下。\r\n","android.provider.Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL":"android.provider.Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL\r\n","android.provider.Contacts.Phones.CONTENT_TYPE":"android.provider.Contacts.Phones.CONTENT_TYPE\r\n","Get the current metadata Bundle used by this notification Builder.":"获取此通知生成器使用的当前元数据包。\r\n","android.hardware.camera2.CameraCaptureSession.StateCallback":"android.hardware.camera2.CameraCaptureSession.StateCallback\r\n","android.provider.CalendarContract.EventsColumns.SYNC_DATA9":"android.provider.CalendarContract.EventsColumns.SYNC_DATA9\r\n","android.app.appsearch.RemoveByDocumentIdRequest.Builder":"android.app.appsearch.RemoveByDocumentIdRequest.Builder\r\n","android.provider.Telephony.MmsSms.ERR_TYPE_TRANSPORT_FAILURE":"android.provider.Telephony.MmsSms.ERR_TYPE_TRANSPORT_FAILURE\r\n","android.os.DropBoxManager.Entry.DropBoxManager$Entry(java.lang.String, long, android.os.ParcelFileDescriptor, int)":"android.os.DropBoxManager.Entry.DropBoxManager$Entry(java.lang.String, long, android.os.ParcelFileDescriptor, int)\r\n","signal for cancellation":"取消信号\r\n","true if the system successfully put this activity into picture-in-picture mode or was\n            already in picture-in-picture mode (see ":"如果系统成功地将此 Activity 置于画中画模式或者是\r\n            已经处于画中画模式（参见\r\n","Return whether a request is still valid.":"返回请求是否仍然有效。\r\n","android.media.ImageWriter.OnImageReleasedListener.onImageReleased(android.media.ImageWriter)":"android.media.ImageWriter.OnImageReleasedListener.onImageReleased(android.media.ImageWriter)\r\n","Enables or disables the caption.":"启用或禁用标题。\r\n","android.provider.ContactsContract.RawContactsEntity.CONTENT_URI":"android.provider.ContactsContract.RawContactsEntity.CONTENT_URI\r\n","android.hardware.Camera.Size.width":"android.hardware.Camera.Size.width\r\n"," for this frame.":" 对于这个框架。\r\n","Q.":"问。\r\n","the region of the screen currently active for magnification, or an empty region\n            if magnification is not active.":"当前用于放大的屏幕区域，或空白区域\r\n            如果放大未激活。\r\n","Flag indicating that a document has available metadata that can be read\n            using DocumentsContract#getDocumentMetadata":"指示文档具有可以读取的可用元数据的标志\r\n            使用 DocumentsContract#getDocumentMetadata\r\n","android.provider.Contacts.ContactMethods.getDisplayLabel(android.content.Context, int, int, java.lang.CharSequence)":"android.provider.Contacts.ContactMethods.getDisplayLabel(android.content.Context, int, int, java.lang.CharSequence)\r\n","android.media.tv.TvInputManager.TvInputCallback":"android.media.tv.TvInputManager.TvInputCallback\r\n","Returns true if this node is something the user can perform a context click on.":"如果此节点是用户可以执行上下文单击的节点，则返回 true。\r\n"," if none. The contents of this bundle may affect the result of\n                    controller creation.":" 如果没有。这个包的内容可能会影响结果\r\n                    控制器创建。\r\n","The flags for this item.":"这个项目的标志。\r\n","The track index for this newly added track, and it should be used\n            in the ":"这个新添加的轨道的轨道索引，应该使用它\r\n            在里面\r\n","CaptureRequest.Builder#set(Key, Object)":"CaptureRequest.Builder#set（键，对象）\r\n","width of the line in pixels":"线条的宽度（以像素为单位）\r\n","the offset into the win array where the win vector data\n                   starts.":"win 数组中的偏移量，其中 win 向量数据\r\n                   开始。\r\n","AudioEffect#EFFECT_TYPE_ENV_REVERB":"音频效果#EFFECT_TYPE_ENV_REVERB\r\n","android.media.MediaCodec.CryptoInfo.numSubSamples":"android.media.MediaCodec.CryptoInfo.numSubSamples\r\n","android.app.WallpaperManager.OnColorsChangedListener":"android.app.WallpaperManager.OnColorsChangedListener\r\n","Summary information about the stream item, for example to indicate how\n            many people have reshared it, how many have liked it, how many thumbs\n            up and/or thumbs down it has, what the original source was, etc.":"有关流项目的摘要信息，例如指示如何\r\n            多少人转发，多少人点赞，多少人点赞\r\n            赞和/或反对，原始来源是什么，等等。\r\n","Authority for the locations content provider.":"位置内容提供者的权限。\r\n","The new playback state of the session":"会话的新播放状态\r\n","android.provider.CalendarContract.EventsColumns.LAST_DATE":"android.provider.CalendarContract.EventsColumns.LAST_DATE\r\n","android.provider.CalendarContract.EventsColumns.EVENT_END_TIMEZONE":"android.provider.CalendarContract.EventsColumns.EVENT_END_TIMEZONE\r\n","the codes for all the possible alternative keys\n            with the primary code being the first. If the primary key code is\n            a single character such as an alphabet or number or symbol, the alternatives\n            will include other characters that may be on the same key or adjacent keys.\n            These codes are useful to correct for accidental presses of a key adjacent to\n            the intended key.":"所有可能的替代键的代码\r\n            主要代码是第一个。如果主键代码是\r\n            单个字符，例如字母表或数字或符号，替代品\r\n            将包括可能位于同一键或相邻键上的其他字符。\r\n            这些代码可用于纠正意外按下相邻的键\r\n            预期的关键。\r\n","android.net.Uri.Builder.Uri$Builder()":"android.net.Uri.Builder.Uri$Builder()\r\n","android.app.Notification.BigPictureStyle":"android.app.Notification.BigPictureStyle\r\n","Returns the range of supported video heights for a video width":"返回视频宽度支持的视频高度范围\r\n","android.media.tv.TvView.TimeShiftPositionCallback":"android.media.tv.TvView.TimeShiftPositionCallback\r\n","android.app.Notification.WearableExtender.getContentIconGravity()":"android.app.Notification.WearableExtender.getContentIconGravity()\r\n"," that proxies all low-level\n            I/O requests back to the given ":" 代理所有低级别\r\n            I/O 请求返回给定\r\n","android.provider.ContactsContract.Intents.EXTRA_CREATE_DESCRIPTION":"android.provider.ContactsContract.Intents.EXTRA_CREATE_DESCRIPTION\r\n","android.media.AudioPresentation.Builder":"android.media.AudioPresentation.Builder\r\n"," that failed to be migrated.":" 迁移失败。\r\n","android.media.MediaRouter.UserRouteInfo.setPlaybackType(int)":"android.media.MediaRouter.UserRouteInfo.setPlaybackType(int)\r\n"," instance with the specified fields.":" 具有指定字段的实例。\r\n","The autofill hints for this view, or ":"此视图的自动填充提示，或\r\n","Called from a background thread to stream data out to a pipe.":"从后台线程调用以将数据流式传输到管道。\r\n","android.print.PrintDocumentAdapter.WriteResultCallback.onWriteFailed(java.lang.CharSequence)":"android.print.PrintDocumentAdapter.WriteResultCallback.onWriteFailed(java.lang.CharSequence)\r\n"," if the quota has never been updated before.":" 如果以前从未更新过配额。\r\n","Key to extract the audio timescale\n            from the ":"提取音频时间刻度的关键\r\n            来自\r\n","The name of the split to include, as declared in the split's\n                             ":"要包含的拆分的名称，如拆分的声明\r\n                             \r\n","Get the list of inputs to be collected from the user when this action is sent.":"获取发送此操作时要从用户收集的输入列表。\r\n","android.media.tv.TvContract.Channels.VIDEO_FORMAT_1080I":"android.media.tv.TvContract.Channels.VIDEO_FORMAT_1080I\r\n","android.app.FragmentManager.OnBackStackChangedListener.onBackStackChanged()":"android.app.FragmentManager.OnBackStackChangedListener.onBackStackChanged()\r\n","Default text-to-speech engine pitch.":"默认文本到语音引擎音高。\r\n","Sort key that takes into account locale-based traditions for sorting\n            names in address books.":"排序键考虑了基于语言环境的排序传统\r\n            地址簿中的姓名。\r\n"," to indicate the visual voicemail is not\n            yet configured on this device but can be configured by the user.":" 指示可视语音邮件不是\r\n            尚未在此设备上配置，但可以由用户配置。\r\n","android.app.Notification.BigTextStyle":"android.app.Notification.BigTextStyle\r\n","android.provider.ContactsContract.SettingsColumns.UNGROUPED_WITH_PHONES":"android.provider.ContactsContract.SettingsColumns.UNGROUPED_WITH_PHONES\r\n","android.app.Notification.Action.SEMANTIC_ACTION_NONE":"android.app.Notification.Action.SEMANTIC_ACTION_NONE\r\n","Called by the receiving launcher app when the user accepts the request.":"当用户接受请求时由接收启动器应用程序调用。\r\n","Callback for receiving events on media transfer.":"用于接收媒体传输事件的回调。\r\n","#MEDIA_INFO_UNSUPPORTED_SUBTITLE":"#MEDIA_INFO_UNSUPPORTED_SUBTITLE\r\n","Return per-line baselines into the text returned by ":"将每行基线返回到返回的文本中\r\n","Initialize a new Builder to construct a ":"初始化一个新的Builder来构造一个\r\n","android.inputmethodservice.Keyboard.Key.height":"android.inputmethodservice.Keyboard.Key.height\r\n",": Mark content with a thumbs up.":"：用大拇指标记内容。\r\n","android.media.MediaParser.TrackData":"android.media.MediaParser.TrackData\r\n","Returns size in bytes of each lookaside slot or -1 if not set.":"返回每个后备插槽的大小（以字节为单位），如果未设置则返回 -1。\r\n","android.graphics.BitmapFactory.Options.inJustDecodeBounds":"android.graphics.BitmapFactory.Options.inJustDecodeBounds\r\n","android.location.GnssStatus.Builder.build()":"android.location.GnssStatus.Builder.build()\r\n","android.animation.LayoutTransition.TransitionListener.startTransition(android.animation.LayoutTransition, android.view.ViewGroup, android.view.View, int)":"android.animation.LayoutTransition.TransitionListener.startTransition(android.animation.LayoutTransition, android.view.ViewGroup, android.view.View, int)\r\n","android.preference.PreferenceManager.OnActivityResultListener":"android.preference.PreferenceManager.OnActivityResultListener\r\n","android.provider.CalendarContract.EventsColumns.EVENT_COLOR_KEY":"android.provider.CalendarContract.EventsColumns.EVENT_COLOR_KEY\r\n","android.app.DownloadManager.addCompletedDownload(java.lang.String, java.lang.String, boolean, java.lang.String, java.lang.String, long, boolean, android.net.Uri, android.net.Uri)":"android.app.DownloadManager.addCompletedDownload（java.lang.String，java.lang.String，布尔值，java.lang.String，java.lang.String，长，布尔值，android.net.Uri，android.net.Uri）\r\n","android.provider.CalendarContract.CalendarColumns.ALLOWED_ATTENDEE_TYPES":"android.provider.CalendarContract.CalendarColumns.ALLOWED_ATTENDEE_TYPES\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format24BitARGB6666":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format24BitARGB6666\r\n","android.app.DownloadManager.Request":"android.app.DownloadManager.Request\r\n","TvInputManager#INPUT_STATE_CONNECTED_STANDBY":"TvInputManager#INPUT_STATE_CONNECTED_STANDBY\r\n","android.media.tv.TvContract.Channels.TYPE_ATSC_C":"android.media.tv.TvContract.Channels.TYPE_ATSC_C\r\n","RAW_SENSOR":"原始传感器\r\n","android.provider.Settings.Secure.getUriFor(java.lang.String)":"android.provider.Settings.Secure.getUriFor(java.lang.String)\r\n","Gets the snippet corresponding to the given entry.":"获取与给定条目对应的片段。\r\n"," at which data should be written.":" 在哪些数据应该被写入。\r\n","android.graphics.SurfaceTexture.OutOfResourcesException":"android.graphics.SurfaceTexture.OutOfResourcesException异常\r\n","android.provider.DocumentsContract.Root.FLAG_SUPPORTS_CREATE":"android.provider.DocumentsContract.Root.FLAG_SUPPORTS_CREATE\r\n"," representing the proportion\n            between the start and end values.":" 代表比例\r\n            在开始值和结束值之间。\r\n","#getShortcuts(ShortcutQuery, UserHandle)":"#getShortcuts（快捷方式查询，用户句柄）\r\n","RawContacts#ACCOUNT_NAME":"RawContacts#ACCOUNT_NAME\r\n","Key to extract the estimated latency through the recording pipeline\n            from the ":"通过记录管道提取估计延迟的关键\r\n            来自\r\n"," and returns the same\n            columns.":" 并返回相同的\r\n            列。\r\n","#MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED":"#MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED\r\n","the list of routes that have been removed. It's never empty.":"已删除的路由列表。它永远不会是空的。\r\n","Indicates whether these packages are replacing\n                       existing ones.":"指示这些包是否正在替换\r\n                       现有的。\r\n","android.app.ApplicationErrorReport.RunningServiceInfo.ApplicationErrorReport$RunningServiceInfo()":"android.app.ApplicationErrorReport.RunningServiceInfo.ApplicationErrorReport$RunningServiceInfo()\r\n"," row to the\n            Contacts Provider.":" 排到\r\n            联系人提供商。\r\n","ThreadPolicy.Builder#penaltyListener":"ThreadPolicy.Builder#penaltyListener\r\n","android.media.MediaCodec.CryptoException":"android.media.MediaCodec.CryptoException\r\n","android.provider.ContactsContract.RawContacts.getContactLookupUri(android.content.ContentResolver, android.net.Uri)":"android.provider.ContactsContract.RawContacts.getContactLookupUri(android.content.ContentResolver, android.net.Uri)\r\n","the contact whose photo should be used. This can be used with\n            either a ":"应使用其照片的联系人。这可以与\r\n            要么\r\n","android.media.audiofx.DynamicsProcessing.MbcBand.getNoiseGateThreshold()":"android.media.audiofx.DynamicsProcessing.MbcBand.getNoiseGateThreshold()\r\n","Timestamp when a document was last modified, in milliseconds since\n            January 1, 1970 00:00:00.":"上次修改文档的时间戳，以毫秒为单位\r\n            1970 年 1 月 1 日 00:00:00。\r\n","android.provider.SimPhonebookContract.ElementaryFiles.SLOT_INDEX":"android.provider.SimPhonebookContract.ElementaryFiles.SLOT_INDEX\r\n"," from\n            notifications intercepted by DND are blocked.":" 从\r\n            被 DND 截获的通知被阻止。\r\n","android.media.session.MediaController.TransportControls.skipToQueueItem(long)":"android.media.session.MediaController.TransportControls.skipToQueueItem(长)\r\n","android.content.Context.createPackageContext(java.lang.String, int)":"android.content.Context.createPackageContext(java.lang.String, int)\r\n","android.provider.ContactsContract.PinnedPositions":"android.provider.ContactsContract.PinnedPositions\r\n","AudioEffect#EFFECT_TYPE_NS":"音频效果#EFFECT_TYPE_NS\r\n","android.media.MediaRoute2Info.Builder":"android.media.MediaRoute2Info.Builder\r\n","Any number of items (including zero) [0.":"任意数量的项目（包括零）[0。\r\n","The kind of file system object being restored.  This will be either\n                ":"正在恢复的文件系统对象的种类。这将是\r\n                \r\n","android.os.Build.VERSION.PREVIEW_SDK_INT":"android.os.Build.VERSION.PREVIEW_SDK_INT\r\n","Returns true if this node is currently in a checked state.":"如果此节点当前处于检查状态，则返回 true。\r\n","An OutputStream you can create on a ParcelFileDescriptor, which will\n            take care of calling ":"您可以在 ParcelFileDescriptor 上创建的 OutputStream，它将\r\n            照顾电话\r\n","\"root.section[.subsections].name\"":"“root.section[.subsections].name”\r\n","android.media.tv.TvContract.Programs.CONTENT_URI":"android.media.tv.TvContract.Programs.CONTENT_URI\r\n","android.os.Environment.getExternalStoragePublicDirectory(java.lang.String)":"android.os.Environment.getExternalStoragePublicDirectory(java.lang.String)\r\n","Returns the source color space this connector will convert from.":"返回此连接器将从中转换的源颜色空间。\r\n","Display name of a document, used as the primary title displayed to a\n            user.":"文档的显示名称，用作显示给\r\n            用户。\r\n","android.media.audiofx.DynamicsProcessing.Config.setInputGainByChannelIndex(int, float)":"android.media.audiofx.DynamicsProcessing.Config.setInputGainByChannelIndex(int, float)\r\n","android.content.AttributionSource.Builder.AttributionSource$Builder(int)":"安卓.content.AttributionSource.Builder.AttributionSource$Builder(int)\r\n","android.hardware.Camera.Parameters.FLASH_MODE_TORCH":"android.hardware.Camera.Parameters.FLASH_MODE_TORCH\r\n","android.app.VoiceInteractor.Request.getActivity()":"android.app.VoiceInteractor.Request.getActivity()\r\n","An animation listener receives notifications from an animation.":"动画侦听器接收来自动画的通知。\r\n","android.media.RemoteController.MetadataEditor.apply()":"android.media.RemoteController.MetadataEditor.apply()\r\n","android.provider.VoicemailContract.Status.DIR_TYPE":"android.provider.VoicemailContract.Status.DIR_TYPE\r\n"," returned by a ":" 由一个返回\r\n","Callbacks for subscription related events.":"订阅相关事件的回调。\r\n","The method called when a camera device is no longer available for\n            use.":"当相机设备不再可用时调用的方法\r\n            使用。\r\n","Controls how the gradient is oriented relative to the drawable's bounds":"控制渐变如何相对于可绘制对象的边界定向\r\n","The rotation angle in degrees relative to the\n                            orientation of the camera. Rotation can only be 0,\n                            90, 180 or 270.":"相对于的旋转角度（以度为单位）\r\n                            相机的方向。旋转只能为0，\r\n                            90、180 或 270。\r\n","android.net.http.SslCertificate.DName.getCName()":"android.net.http.SslCertificate.DName.getCName()\r\n","Returns the alpha transformation of the view, used to reduce the overall opacity\n            of the view's contents, as set by ":"返回视图的 alpha 变换，用于降低整体不透明度\r\n            视图的内容，由\r\n","Returns font ascent of the line in pixels.":"以像素为单位返回行的字体上升。\r\n","android.media.browse.MediaBrowser.SubscriptionCallback":"android.media.browse.MediaBrowser.SubscriptionCallback\r\n","android.provider.ContactsContract.ProviderStatus.DATABASE_CREATION_TIMESTAMP":"android.provider.ContactsContract.ProviderStatus.DATABASE_CREATION_TIMESTAMP\r\n","a family object":"一个家庭对象\r\n","The request is now attached to an activity, or being re-attached to a new activity\n            after a configuration change.":"该请求现在附加到一个活动，或重新附加到一个新的活动\r\n            配置更改后。\r\n","android.hardware.camera2.CameraManager.AvailabilityCallback.onCameraAvailable(java.lang.String)":"android.hardware.camera2.CameraManager.AvailabilityCallback.onCameraAvailable(java.lang.String)\r\n","Called as the last step of the Activity being resumed.":"作为正在恢复的 Activity 的最后一步调用。\r\n","android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile3HDR":"android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile3HDR\r\n","the EGLConfig of the created surface. Can be used\n            to create matching pbuffers.":"创建的表面的 EGLConfig。可以使用\r\n            创建匹配的 pbuffer。\r\n","android.media.AudioFocusRequest.Builder.AudioFocusRequest$Builder(int)":"android.media.AudioFocusRequest.Builder.AudioFocusRequest$Builder(int)\r\n","android.media.metrics.NetworkEvent.Builder.NetworkEvent$Builder()":"android.media.metrics.NetworkEvent.Builder.NetworkEvent$Builder()\r\n","android.provider.Settings.Global.getFloat(android.content.ContentResolver, java.lang.String, float)":"android.provider.Settings.Global.getFloat(android.content.ContentResolver, java.lang.String, float)\r\n"," on success":" 成功时\r\n","desired for compressor in decibels(dB)":"压缩机所需的分贝数 (dB)\r\n","A class that supports querying the audio capabilities of a codec.":"支持查询编解码器音频功能的类。\r\n","android.net.Uri.Builder":"android.net.Uri.Builder\r\n","which callers can bypass DND.":"哪些呼叫者可以绕过免打扰。\r\n","the set of session IDs that will be committed atomically when this session is\n            committed if this is a multi-package session or null if none exist.":"当这个会话被执行时，将自动提交的一组会话 ID\r\n            如果这是一个多包会话，则提交；如果不存在，则为空。\r\n"," added to them.":" 添加到他们。\r\n","The destination array, cannot be null, its length\n                             must be >= 6":"目标数组，不能为空，它的长度\r\n                             必须 >= 6\r\n","GNSS Navigation Messages are successfully being tracked, it will receive updates once\n            they are available.":"GNSS Navigation Messages 正在成功跟踪，它将收到一次更新\r\n            他们可用。\r\n","android.provider.ContactsContract.GroupsColumns.SUMMARY_COUNT":"android.provider.ContactsContract.GroupsColumns.SUMMARY_COUNT\r\n","The start position for time shifting, in milliseconds since the epoch.":"时移的起始位置，自纪元以来的毫秒数。\r\n","A session configuration (see ":"会话配置（见\r\n","android.media.tv.TvInputService.RecordingSession.onRelease()":"android.media.tv.TvInputService.RecordingSession.onRelease()\r\n","android.media.audiofx.PresetReverb.setPreset(short)":"android.media.audiofx.PresetReverb.setPreset（短）\r\n","Interface definition of a callback to be invoked when the\n            DRM info becomes available":"调用回调的接口定义\r\n            DRM 信息可用\r\n","android.media.JetPlayer.OnJetEventListener.onJetUserIdUpdate(android.media.JetPlayer, int, int)":"android.media.JetPlayer.OnJetEventListener.onJetUserIdUpdate(android.media.JetPlayer, int, int)\r\n","The job object to hand to the JobScheduler. This object is immutable.":"要交给 JobScheduler 的作业对象。这个对象是不可变的。\r\n","#SHORTCUT_SUPPORT":"#SHORTCUT_SUPPORT\r\n","the successfully configured session instance":"成功配置的会话实例\r\n","android.content.SyncInfo.describeContents()":"android.content.SyncInfo.describeContents()\r\n","Minimal width of activity in pixels to be able to display its content.":"能够显示其内容的活动的最小宽度（以像素为单位）。\r\n","DownloadManager#enqueue(Request)":"下载管理器#enqueue（请求）\r\n","Y coordinate of the key in the keyboard layout":"键盘布局中按键的 Y 坐标\r\n","Key to extract the codec being used\n            from the ":"提取正在使用的编解码器的密钥\r\n            来自\r\n","a list of supported focus modes. This method will always\n                    return a list with at least one element.":"支持的对焦模式列表。这个方法会一直\r\n                    返回包含至少一个元素的列表。\r\n","android.media.MediaMuxer.OutputFormat.MUXER_OUTPUT_HEIF":"android.media.MediaMuxer.OutputFormat.MUXER_OUTPUT_HEIF\r\n","android.hardware.ConsumerIrManager.CarrierFrequencyRange.getMinFrequency()":"android.hardware.ConsumerIrManager.CarrierFrequencyRange.getMinFrequency()\r\n","Gets the value of the field at the specified row and column index as a\n            ":"获取指定行和列索引处的字段值作为\r\n            \r\n","#FAIL_REASON_FONT_UNAVAILABLE":"#FAIL_REASON_FONT_UNAVAILABLE\r\n","android.hardware.display.DisplayManager.DisplayListener.onDisplayChanged(int)":"android.hardware.display.DisplayManager.DisplayListener.onDisplayChanged(int)\r\n","A camera's torch mode has become unavailable to set via ":"相机的手电筒模式无法通过以下方式设置\r\n","android.net.sip.SipSession.State.OUTGOING_CALL_RING_BACK":"android.net.sip.SipSession.State.OUTGOING_CALL_RING_BACK\r\n","Interface definition of a callback to be invoked to communicate some\n            info and/or warning about the recording.":"回调的接口定义被调用来传达一些\r\n            有关录音的信息和/或警告。\r\n","android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer":"android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer\r\n","Returns the schema type of the ":"返回的模式类型\r\n","Returns the alignment requirement for video height (in pixels).":"返回视频高度（以像素为单位）的对齐要求。\r\n","Content type for the location entries.":"位置条目的内容类型。\r\n","android.drm.DrmStore.ConstraintsColumns.LICENSE_AVAILABLE_TIME":"android.drm.DrmStore.ConstraintsColumns.LICENSE_AVAILABLE_TIME\r\n","android.provider.Settings.Global.putFloat(android.content.ContentResolver, java.lang.String, float)":"android.provider.Settings.Global.putFloat(android.content.ContentResolver, java.lang.String, float)\r\n","android.provider.Telephony.Mms":"android.provider.Telephony.Mms\r\n","android.provider.Contacts.Photos.CONTENT_URI":"android.provider.Contacts.Photos.CONTENT_URI\r\n","android.media.MediaRouter.VolumeCallback":"android.media.MediaRouter.VolumeCallback\r\n","Defines whether volume for the playback associated with this route is fixed\n            (":"定义与此路由关联的播放音量是否固定\r\n            (\r\n","android.provider.Contacts.GroupsColumns.NAME":"android.provider.Contacts.GroupsColumns.NAME\r\n","android.app.admin.DeviceAdminReceiver":"android.app.admin.DeviceAdminReceiver\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format32bitABGR8888":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format32bitABGR8888\r\n","android.provider.ContactsContract.Intents.ACTION_VOICE_SEND_MESSAGE_TO_CONTACTS":"android.provider.ContactsContract.Intents.ACTION_VOICE_SEND_MESSAGE_TO_CONTACTS\r\n","android.app.Presentation":"android.app.Presentation\r\n"," when the torch mode has becomes off and available to\n                           be turned on.":" 当手电筒模式关闭并可供使用时\r\n                           被打开。\r\n","android.media.audiofx.Visualizer.MeasurementPeakRms":"android.media.audiofx.Visualizer.MeasurementPeakRms\r\n","Interface definition for a callback to be invoked regularly as\n            verification proceeds.":"定期调用回调的接口定义为\r\n            验证收益。\r\n"," (inclusive). 0 means exposure is\n                   not adjusted. Application should call\n                   getMinExposureCompensation and getMaxExposureCompensation to\n                   know if exposure compensation is supported.":" （包括的）。 0表示曝光是\r\n                   没有调整。应用程序应该调用\r\n                   getMinExposureCompensation 和 getMaxExposureCompensation 到\r\n                   知道是否支持曝光补偿。\r\n","Whether or not the sensor's gesture detection is now available.":"传感器的手势检测现在是否可用。\r\n","android.media.MediaCodecInfo.CodecCapabilities.FEATURE_SecurePlayback":"android.media.MediaCodecInfo.CodecCapabilities.FEATURE_SecurePlayback\r\n","Get the default URL to use when sending the provision request\n            message to a server, if known.":"获取发送供应请求时使用的默认 URL\r\n            消息到服务器，如果知道的话。\r\n","SessionParams#setReferrerUri(Uri)":"会话参数#setReferrerUri(Uri)\r\n","android.app.usage.NetworkStats.Bucket.ROAMING_ALL":"android.app.usage.NetworkStats.Bucket.ROAMING_ALL\r\n","Returns the display name of this action.":"返回此操作的显示名称。\r\n","android.media.MediaParser.TrackData.drmInitData":"android.media.MediaParser.TrackData.drmInitData\r\n","the format in which the audio data is to be returned.\n              See ":"返回音频数据的格式。\r\n              看\r\n","returns enabled state of the stage -or- sets enabled state of the stage":"返回阶段的启用状态 - 或 - 设置阶段的启用状态\r\n","Holds ":"举行\r\n","Exception thrown when an operation on a MediaCas object is attempted\n            before it's provisioned successfully.":"尝试对 MediaCas 对象进行操作时抛出异常\r\n            在配置成功之前。\r\n","AppWidgetManager#ACTION_APPWIDGET_RESTORED":"AppWidgetManager#ACTION_APPWIDGET_RESTORED\r\n","android.provider.CallLog.Calls.COMPOSER_PHOTO_URI":"android.provider.CallLog.Calls.COMPOSER_PHOTO_URI\r\n","android.media.tv.TvContract.RecordedPrograms":"android.media.tv.TvContract.RecordedPrograms\r\n","android.provider.CallLog.Calls.CONTENT_ITEM_TYPE":"android.provider.CallLog.Calls.CONTENT_ITEM_TYPE\r\n","android.database.DatabaseUtils.InsertHelper.DatabaseUtils$InsertHelper(android.database.sqlite.SQLiteDatabase, java.lang.String)":"android.database.DatabaseUtils.InsertHelper.DatabaseUtils$InsertHelper(android.database.sqlite.SQLiteDatabase, java.lang.String)\r\n","android.provider.Telephony.TextBasedSmsColumns.MESSAGE_TYPE_ALL":"android.provider.Telephony.TextBasedSmsColumns.MESSAGE_TYPE_ALL\r\n","android.media.tv.TvInputService.Session.notifyContentAllowed()":"android.media.tv.TvInputService.Session.notifyContentAllowed()\r\n"," that indicates why the post-migration ":" 这表明为什么迁移后\r\n","Interface used to allow the creator of a dialog to run some code when the\n            dialog is canceled.":"用于允许对话框的创建者运行一些代码的接口\r\n            对话框被取消。\r\n","android.media.MediaSession2.Builder.MediaSession2$Builder(android.content.Context)":"android.media.MediaSession2.Builder.MediaSession2$Builder(android.content.Context)\r\n","The channel type for DVB-C2 (cable).":"DVB-C2（电缆）的频道类型。\r\n","If true (which is the default), the resulting bitmap will have its\n            color channels pre-multipled by the alpha channel.":"如果为真（这是默认值），生成的位图将有其\r\n            由 alpha 通道预乘的颜色通道。\r\n",": This process is running a foreground\n            service, for example to perform music playback even while the user is\n            not immediately in the app.":": 这个进程在前台运行\r\n            服务，例如即使在用户正在播放音乐时\r\n            不立即在应用程序中。\r\n","android.provider.Settings.Global.ADB_ENABLED":"android.provider.Settings.Global.ADB_EN​​ABLED\r\n","Activity Action: Initiate a message to someone by voice.":"活动操作：通过语音向某人发送消息。\r\n","android.media.audiofx.DynamicsProcessing.Eq.DynamicsProcessing$Eq(boolean, boolean, int)":"android.media.audiofx.DynamicsProcessing.Eq.DynamicsProcessing$Eq（布尔值，布尔值，整数）\r\n","android.content.pm.PackageInstaller.SessionInfo.getMode()":"android.content.pm.PackageInstaller.SessionInfo.getMode()\r\n","android.app.ActivityManager.ProcessErrorStateInfo.processName":"android.app.ActivityManager.ProcessErrorStateInfo.processName\r\n","android.content.pm.PackageInstaller.SessionParams.USER_ACTION_REQUIRED":"android.content.pm.PackageInstaller.SessionParams.USER_ACTION_REQUIRED\r\n","The number of bytes of file content to be restored to the given\n                destination.  If the file system object being restored is a directory, ":"要恢复到给定的文件内容的字节数\r\n                目的地。如果被恢复的文件系统对象是一个目录，\r\n","The children which were loaded.":"加载的子项。\r\n"," configured for this callback's\n                subscription group":" 为此回调配置的\r\n                订阅组\r\n","16 bits per pixel, little-endian Y color format.":"每像素 16 位，小端 Y 颜色格式。\r\n","android.graphics.pdf.PdfDocument.PageInfo.getPageNumber()":"android.graphics.pdf.PdfDocument.PageInfo.getPageNumber()\r\n","android.media.metrics.TrackChangeEvent.Builder.build()":"android.media.metrics.TrackChangeEvent.Builder.build()\r\n","android.provider.Contacts.GroupsColumns.SYSTEM_ID":"android.provider.Contacts.GroupsColumns.SYSTEM_ID\r\n","MediaPlayer class can be used to control playback of audio/video files and streams.":"MediaPlayer 类可用于控制音频/视频文件和流的播放。\r\n"," for it have been returned via this listener.":" 因为它已通过此侦听器返回。\r\n","SearchManager#setOnCancelListener":"搜索管理器#setOnCancelListener\r\n","32 bits per pixel RGBA color format, with 8-bit red, green, blue, and alpha components.":"每像素 32 位 RGBA 颜色格式，具有 8 位红色、绿色、蓝色和 alpha 分量。\r\n","android.app.UiAutomation.OnAccessibilityEventListener.onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)":"android.app.UiAutomation.OnAccessibilityEventListener.onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)\r\n","the initialization vector to use for the cipher":"用于密码的初始化向量\r\n","Creates a new Session.":"创建一个新会话。\r\n","android.provider.Telephony.CarrierId.SPECIFIC_CARRIER_ID_NAME":"android.provider.Telephony.CarrierId.SPECIFIC_CARRIER_ID_NAME\r\n","android.provider.SimPhonebookContract.ElementaryFiles.EF_TYPE":"android.provider.SimPhonebookContract.ElementaryFiles.EF_TYPE\r\n"," is enabled, the listener is called on the\n            provided executor when a VM violation occurs.":" 启用时，将调用侦听器\r\n            当发生 VM 违规时提供执行程序。\r\n","android.app.KeyguardManager.KeyguardDismissCallback.onDismissError()":"android.app.KeyguardManager.KeyguardDismissCallback.onDismissError()\r\n","The message count of the thread.":"线程的消息计数。\r\n","android.media.audiofx.EnvironmentalReverb.setReflectionsLevel(short)":"android.media.audiofx.EnvironmentalReverb.setReflectionsLevel（短）\r\n","android.os.CancellationSignal.OnCancelListener.onCancel()":"android.os.CancellationSignal.OnCancelListener.onCancel()\r\n",",\n            such as size and density, have changed.":",\r\n            例如大小和密度，都发生了变化。\r\n","android.app.blob.BlobStoreManager.Session.openRead()":"android.app.blob.BlobStoreManager.Session.openRead()\r\n","Returns the latest collected GNSS Navigation Message.":"返回最新收集的 GNSS 导航消息。\r\n","android.inputmethodservice.KeyboardView.OnKeyboardActionListener.swipeLeft()":"android.inputmethodservice.KeyboardView.OnKeyboardActionListener.swipeLeft()\r\n","Returns the item's representation as HTML text.":"将项目的表示形式返回为 HTML 文本。\r\n","The ID of the track selected.":"所选轨道的 ID。\r\n","The account_type of this SIM account. See ":"此 SIM 帐户的帐户类型。看\r\n","The final extras collected by a broadcast.":"广播收集的最后群众演员。\r\n","The _sync_id of the original recurring event for which this event is\n            an exception.":"此事件针对的原始重复事件的 _sync_id\r\n            一个例外。\r\n","android.app.ActivityManager.RunningServiceInfo.pid":"android.app.ActivityManager.RunningServiceInfo.pid\r\n","transaction-id":"事务编号\r\n","Gets if PostEq stage is in use":"获取是否正在使用 PostEq 阶段\r\n","op noted":"操作注意\r\n","Thrown when the device requires DRM provisioning but the provisioning attempt has\n            failed due to a network error (Internet reachability, timeout, etc.":"当设备需要 DRM 配置但配置尝试失败时抛出\r\n            由于网络错误（Internet 可达性、超时等）而失败。\r\n","O.":"欧。\r\n","android.hardware.Camera.Parameters.setPreviewFormat(int)":"android.hardware.Camera.Parameters.setPreviewFormat(int)\r\n","android.app.Notification.InboxStyle":"android.app.Notification.InboxStyle\r\n","android.media.MediaRouter.RouteInfo.getName(android.content.Context)":"android.media.MediaRouter.RouteInfo.getName(android.content.Context)\r\n","a new session":"一个新的会话\r\n","android.provider.Settings.System.getFloat(android.content.ContentResolver, java.lang.String, float)":"android.provider.Settings.System.getFloat(android.content.ContentResolver, java.lang.String, float)\r\n","android.media.tv.TvContract.Channels.COLUMN_APP_LINK_POSTER_ART_URI":"android.media.tv.TvContract.Channels.COLUMN_APP_LINK_POSTER_ART_URI\r\n","android.media.tv.TvContract.RecordedPrograms.CONTENT_TYPE":"android.media.tv.TvContract.RecordedPrograms.CONTENT_TYPE\r\n","A MediaProjection that supports audio projection.":"支持音频投影的 MediaProjection。\r\n","android.bluetooth.BluetoothClass.Service":"android.bluetooth.BluetoothClass.Service\r\n","the row ID of the newly inserted row OR ":"新插入行的行 ID 或\r\n","android.hardware.Camera.OnZoomChangeListener":"android.hardware.Camera.OnZoomChangeListener\r\n","android.media.tv.TvView.TvInputCallback.onChannelRetuned(java.lang.String, android.net.Uri)":"android.media.tv.TvView.TvInputCallback.onChannelRetuned(java.lang.String, android.net.Uri)\r\n","android.media.MediaRouter2.RoutingController.getSelectedRoutes()":"android.media.MediaRouter2.RoutingController.getSelectedRoutes()\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format18bitARGB1665":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format18bitARGB1665\r\n","RoutingController#getVolumeMax":"路由控制器#getVolumeMax\r\n","Called when an input buffer becomes available.":"当输入缓冲区可用时调用。\r\n","android.media.MediaRouter2.RoutingController.getVolume()":"android.media.MediaRouter2.RoutingController.getVolume()\r\n","extra":"额外的\r\n","android.media.MediaRoute2Info.Builder.MediaRoute2Info$Builder(java.lang.String, java.lang.CharSequence)":"android.media.MediaRoute2Info.Builder.MediaRoute2Info$Builder(java.lang.String, java.lang.CharSequence)\r\n","The position at which the contact is pinned.":"联系人固定的位置。\r\n","android.print.PrinterCapabilitiesInfo.Builder":"android.print.PrinterCapabilitiesInfo.Builder\r\n","android.app.DownloadManager.Request.allowScanningByMediaScanner()":"android.app.DownloadManager.Request.allowScanningByMediaScanner()\r\n","A media type flag set describing which types this route supports.":"描述此路由支持哪些类型的媒体类型标志集。\r\n","android.media.MediaRecorder.MetricsConstants.AUDIO_SAMPLERATE":"android.media.MediaRecorder.MetricsConstants.AUDIO_SAMPLERATE\r\n"," style URL for draft messages in this table.":" 此表中草稿消息的样式 URL。\r\n","Called when a previously created loader has finished its load.":"当先前创建的加载器完成加载时调用。\r\n","android.content.pm.PackageInstaller.SessionParams.setInstallLocation(int)":"android.content.pm.PackageInstaller.SessionParams.setInstallLocation(int)\r\n","android.appwidget.AppWidgetProvider.onUpdate(android.content.Context, android.appwidget.AppWidgetManager, int[])":"android.appwidget.AppWidgetProvider.onUpdate(android.content.Context, android.appwidget.AppWidgetManager, int[])\r\n","120\r\n\r\n120\r\n\r\n120\r\n\r\n120":"120\r\n\r\n120\r\n\r\n120\r\n\r\n120\r\n","The ID of the TV input bound to the current TvRecordingClient.":"当前TvRecordingClient绑定的TV输入ID。\r\n","Resource ID of an icon drawable to use to represent this route":"用于表示此路线的可绘制图标的资源 ID\r\n","android.provider.ContactsContract.StatusColumns.PRESENCE_CUSTOM_STATUS":"android.provider.ContactsContract.StatusColumns.PRESENCE_CUSTOM_STATUS\r\n","The name of the account instance to which this row belongs, which when paired with\n            ":"此行所属的帐户实例的名称，当与\r\n            \r\n","Key to extract the audio samplerate\n            from the ":"提取音频采样率的关键\r\n            来自\r\n","Builds a new ProviderProperties.":"构建一个新的 ProviderProperties。\r\n","Reads an event from the device.":"从设备读取事件。\r\n","A property value set within the manifest.":"清单中设置的属性值。\r\n","The current data network type.":"当前数据网络类型。\r\n","android.provider.ContactsContract.DataColumns":"android.provider.ContactsContract.DataColumns\r\n","The content rating for the current TV program. Can be\n                       ":"当前电视节目的内容分级。可\r\n                       \r\n","android.media.tv.TvContract.Channels.COLUMN_VIDEO_FORMAT":"android.media.tv.TvContract.Channels.COLUMN_VIDEO_FORMAT\r\n","android.media.session.PlaybackState.CustomAction.getName()":"android.media.session.PlaybackState.CustomAction.getName()\r\n","Constructs a new Builder with the defaults format values.":"使用默认格式值构造一个新的 Builder。\r\n","android.provider.ContactsContract.DataUsageFeedback.USAGE_TYPE":"android.provider.ContactsContract.DataUsageFeedback.USAGE_TYPE\r\n"," style URL for locked messages in this table.":" 此表中锁定消息的样式 URL。\r\n"," updates.":" 更新。\r\n","Copies the transform of this color space in specified array.":"在指定数组中复制此颜色空间的变换。\r\n","RawContacts#_ID":"原始联系人#_ID\r\n","the timestamp of the message (based on ":"消息的时间戳（基于\r\n","Called when the session refuses the controller or the controller is disconnected from\n            the session.":"当会话拒绝控制器或控制器与控制器断开连接时调用\r\n            会议。\r\n","Presence Status definition":"在场状态定义\r\n"," for\n                configuring the audio format parameters such as encoding, channel mask and sample rate.":" 为了\r\n                配置音频格式参数，如编码、通道掩码和采样率。\r\n"," to indicate that the shared elements are ready to be\n            hidden in the source and shown in the destination Activity.":" 指示共享元素已准备好\r\n            隐藏在源中并显示在目标活动中。\r\n","The names of the packages that have just been\n                       suspended.":"刚才的包名\r\n                       暂停。\r\n","Whether the user confirmed or rejected the operation.":"用户是确认还是拒绝操作。\r\n","Key to extract the video encoding profile\n            from the ":"提取视频编码配置文件的密钥\r\n            来自\r\n","android.provider.Settings.Global.RADIO_BLUETOOTH":"android.provider.Settings.Global.RADIO_BLUETOOTH\r\n","android.app.assist.AssistStructure.ViewNode.getWebDomain()":"android.app.assist.AssistStructure.ViewNode.getWebDomain()\r\n","CATEGORY_*":"类别_*\r\n","android.preference.PreferenceActivity.Header.id":"android.preference.PreferenceActivity.Header.id\r\n","android.provider.Telephony.BaseMmsColumns.RESPONSE_STATUS":"android.provider.Telephony.BaseMmsColumns.RESPONSE_STATUS\r\n","number of bytes to write.  It is recommended but not enforced\n                that the number of bytes requested be a multiple of the frame size (sample size in\n                bytes multiplied by the channel count).\n                <BR>Note this may differ from ":"要写入的字节数。建议但不强制执行\r\n                请求的字节数是帧大小的倍数（样本大小在\r\n                字节数乘以通道数）。\r\n                <BR>请注意，这可能不同于\r\n","BroadcastReceiver#setResult(int, String, Bundle)\n            BroadcastReceiver.setResult(int, String, Bundle)":"BroadcastReceiver#setResult(int, String, Bundle)\r\n            BroadcastReceiver.setResult(int, String, Bundle)\r\n","Gets the reverb delay. -or- Sets the time between the first reflection and the reverberation.":"获取混响延迟。 - 或 - 设置第一次反射和混响之间的时间。\r\n","android.media.tv.TvView.OnUnhandledInputEventListener.onUnhandledInputEvent(android.view.InputEvent)":"android.media.tv.TvView.OnUnhandledInputEventListener.onUnhandledInputEvent(android.view.InputEvent)\r\n","android.media.MediaDrm.MetricsConstants.PROVIDE_PROVISION_RESPONSE_ERROR_COUNT":"android.media.MediaDrm.MetricsConstants.PROVIDE_PROVISION_RESPONSE_ERROR_COUNT\r\n","android.media.MediaRouter.RouteCategory.getName()":"android.media.MediaRouter.RouteCategory.getName()\r\n","android.animation.LayoutTransition#CHANGE_DISAPPEARING":"android.animation.LayoutTransition#CHANGE_DISAPPEARING\r\n","android.content.Intent.FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPS":"android.content.Intent.FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPS\r\n","ReportUsageRequest":"报告使用请求\r\n","android.provider.CalendarContract.EventsColumns.DURATION":"android.provider.CalendarContract.EventsColumns.DURATION\r\n","PictureInPictureParams":"画中画参数\r\n","Callback called when report data is received over interrupt channel.":"通过中断通道接收到报告数据时调用的回调。\r\n","android.net.sip.SipAudioCall.Listener.onRinging(android.net.sip.SipAudioCall, android.net.sip.SipProfile)":"android.net.sip.SipAudioCall.Listener.onRinging(android.net.sip.SipAudioCall, android.net.sip.SipProfile)\r\n","#VIRTUALIZATION_MODE_AUTO":"#VIRTUALIZATION_MODE_AUTO\r\n","android.graphics.pdf.PdfDocument.PageInfo":"android.graphics.pdf.PdfDocument.PageInfo\r\n","android.app.RemoteInput.Builder":"android.app.RemoteInput.Builder\r\n","Legacy NfcAdapter getter, always use ":"遗留 NfcAdapter getter，总是使用\r\n","Notifies that an error occurred while writing the data.":"通知写入数据时发生错误。\r\n","Override to handle requests to seek to a specific position in ms.":"重写以处理请求以寻求 ms 中的特定位置。\r\n","Object represent a font entry in the family returned from ":"对象表示从返回的系列中的字体条目\r\n","android.media.MediaDrm.OnKeyStatusChangeListener.onKeyStatusChange(android.media.MediaDrm, byte[], java.util.List<android.media.MediaDrm.KeyStatus>, boolean)":"android.media.MediaDrm.OnKeyStatusChangeListener.onKeyStatusChange(android.media.MediaDrm, byte[], java.util.List<android.media.MediaDrm.KeyStatus>, boolean)\r\n","android.os.StrictMode.OnVmViolationListener":"android.os.StrictMode.OnVmViolationListener\r\n"," for\n            asynchronous broadcast handling. -or- Version of ":" 为了\r\n            异步广播处理。 - 或 - 的版本\r\n","android.app.ActionBar.OnMenuVisibilityListener":"android.app.ActionBar.OnMenuVisibilityListener\r\n","Finishes all activities in this task and removes it from the recent tasks list.":"完成此任务中的所有活动并将其从最近的任务列表中删除。\r\n","Creates a new alarm clock description.":"创建一个新的闹钟描述。\r\n","android.provider.Settings.System.WALLPAPER_ACTIVITY":"android.provider.Settings.System.WALLPAPER_ACTIVITY\r\n","android.graphics.ColorSpace.Rgb.getPrimaries()":"android.graphics.ColorSpace.Rgb.getPrimaries()\r\n","The account_name of this SIM account. See ":"此 SIM 帐户的帐户名。看\r\n","The channel type for ISDB-T (terrestrial).":"ISDB-T（地面）的频道类型。\r\n","android.drm.DrmUtils.ExtendedMetadataParser":"android.drm.DrmUtils.ExtendedMetadataParser\r\n","A special variation to launch an activity only if a new activity\n            instance is needed to handle the given Intent.":"仅当有新活动时才启动活动的特殊变体\r\n            需要实例来处理给定的 Intent。\r\n","android.content.BroadcastReceiver.PendingResult.getResultData()":"android.content.BroadcastReceiver.PendingResult.getResultData()\r\n","An interface registered by the caller to ":"调用者注册的接口\r\n","Bottom position in pixels, relative to the overlay view.":"相对于叠加视图的底部位置（以像素为单位）。\r\n","android.content.AttributionSource.Builder":"android.content.AttributionSource.Builder\r\n","android.provider.CallLog.Calls.PHONE_ACCOUNT_COMPONENT_NAME":"android.provider.CallLog.Calls.PHONE_ACCOUNT_COMPONENT_NAME\r\n","The names of the packages that have become\n                       available.":"已成为的包的名称\r\n                       可用的。\r\n","android.os.PowerManager.OnThermalStatusChangedListener":"android.os.PowerManager.OnThermalStatusChangedListener\r\n","android.provider.ContactsContract.SimAccount.getSimSlotIndex()":"android.provider.ContactsContract.SimAccount.getSimSlotIndex()\r\n"," will\n            contain this column, populated with the maximum height and width (in pixels)\n            that will be stored for a display photo.":" 将要\r\n            包含此列，填充有最大高度和宽度（以像素为单位）\r\n            将存储用于显示照片。\r\n","android.content.ContentResolver.MimeTypeInfo":"android.content.ContentResolver.MimeTypeInfo\r\n","VcnStatusCallback":"Vcn状态回调\r\n","Helper methods to display QuickContact dialogs that display all the information belonging to\n            a specific ":"显示 QuickContact 对话框的帮助程序方法，该对话框显示属于的所有信息\r\n            一个特定的\r\n","android.provider.ContactsContract.Data.CONTENT_TYPE":"android.provider.ContactsContract.Data.CONTENT_TYPE\r\n","Called as the first step of the Activity being paused.":"作为暂停 Activity 的第一步调用。\r\n","Reports that the current interaction can not be complete with voice, so the\n            application will need to switch to a traditional input UI.":"报告称目前无法通过语音完成交互，因此\r\n            应用程序将需要切换到传统的输入 UI。\r\n","Configuration for an audio encoder.":"音频编码器的配置。\r\n"," that have\n            ":" 具有\r\n            \r\n","android.app.admin.DevicePolicyManager.PASSWORD_COMPLEXITY_NONE":"android.app.admin.DevicePolicyManager.PASSWORD_COMPLEXITY_NONE\r\n","O MR1.":"哦，MR1。\r\n","the preset that is set at the moment.":"当前设置的预设。\r\n","Listener to be called when the first output frame has been decoded\n            and is ready to be rendered for a codec configured for tunnel mode with\n            ":"第一个输出帧解码后调用的侦听器\r\n            并准备好为配置为隧道模式的编解码器呈现\r\n            \r\n"," if the sensor is a dynamic sensor (sensor added at runtime).":" 如果传感器是动态传感器（在运行时添加的传感器）。\r\n","the volume at which the playback associated with this route is performed":"执行与此路由关联的播放的音量\r\n","Creates a new RGB color space using a 3x3 column-major transform matrix.":"使用 3x3 列主变换矩阵创建新的 RGB 颜色空间。\r\n","android.hardware.camera2.CaptureResult.Key.CaptureResult$Key(java.lang.String, java.lang.Class<T>)":"android.hardware.camera2.CaptureResult.Key.CaptureResult$Key(java.lang.String, java.lang.Class<T>)\r\n","android.provider.CalendarContract.Instances.ENTERPRISE_CONTENT_SEARCH_URI":"android.provider.CalendarContract.Instances.ENTERPRISE_CONTENT_SEARCH_URI\r\n"," if this stroke will be continued by one in the\n            next gesture ":" 如果这一笔画将继续由一个在\r\n            下一个手势\r\n","android.hardware.biometrics.BiometricPrompt.CryptoObject.getCipher()":"android.hardware.biometrics.BiometricPrompt.CryptoObject.getCipher()\r\n","android.app.ActivityManager.MemoryInfo":"android.app.ActivityManager.MemoryInfo\r\n","Constants for the stream_item_photos table, which contains photos associated with\n            social stream updates.":"stream_item_photos 表的常量，其中包含与\r\n            社交流更新。\r\n","android.bluetooth.BluetoothHidDevice.Callback.onConnectionStateChanged(android.bluetooth.BluetoothDevice, int)":"android.bluetooth.BluetoothHidDevice.Callback.onConnectionStateChanged(android.bluetooth.BluetoothDevice, int)\r\n","android.bluetooth.BluetoothGattService.describeContents()":"android.bluetooth.BluetoothGattService.describeContents()\r\n","android.app.VoiceInteractor.ConfirmationRequest.onConfirmationResult(boolean, android.os.Bundle)":"android.app.VoiceInteractor.ConfirmationRequest.onConfirmationResult(boolean, android.os.Bundle)\r\n","The type of error that has occurred:\n            <ul>\n            <li>":"发生的错误类型：\r\n            <ul>\r\n            <李>\r\n","FingerprintManager#authenticate(CryptoObject,\n                CancellationSignal, int, AuthenticationCallback, Handler)":"FingerprintManager#authenticate(加密对象，\r\n                CancellationSignal、int、AuthenticationCallback、处理程序）\r\n","android.media.EncoderProfiles.AudioProfile.getSampleRate()":"android.media.EncoderProfiles.AudioProfile.getSampleRate()\r\n","The MediaSync the error pertains to":"错误所属的 MediaSync\r\n","android.provider.Settings.Secure.setLocationProviderEnabled(android.content.ContentResolver, java.lang.String, boolean)":"android.provider.Settings.Secure.setLocationProviderEnabled（android.content.ContentResolver，java.lang.String，布尔值）\r\n","android.media.MediaDrm.ErrorCodes.ERROR_PROVISIONING_CONFIG":"android.media.MediaDrm.ErrorCodes.ERROR_PROVISIONING_CONFIG\r\n",": Reply to a conversation, chat, group, or wherever replies\n            may be appropriate.":"：回复对话、聊天、群组或任何回复\r\n            可能是合适的。\r\n","The OnDataCaptureListener interface defines methods called by the Visualizer to periodically\n            update the audio visualization capture.":"OnDataCaptureListener 接口定义了 Visualizer 定期调用的方法\r\n            更新音频可视化捕获。\r\n","android.media.MediaRouter.UserRouteInfo.setVolumeMax(int)":"android.media.MediaRouter.UserRouteInfo.setVolumeMax(int)\r\n"," executes operations on an app's set of ":" 对应用程序的集合执行操作\r\n","The unique identifier of the camera whose torch mode has become\n                            unavailable.":"火炬模式变为相机的唯一标识符\r\n                            不可用。\r\n","Is the contact starred?":"联系人是否已加星标？\r\n","Sensors":"传感器\r\n","RGB primaries as an array of 6 (xy) or 9 (XYZ) floats":"RGB 原色作为 6 (xy) 或 9 (XYZ) 浮点数的数组\r\n","android.os.PerformanceHintManager.Session.reportActualWorkDuration(long)":"android.os.PerformanceHintManager.Session.reportActualWorkDuration（长）\r\n","HDR type for hlg.":"hlg 的 HDR 类型。\r\n","android.app.KeyguardManager.OnKeyguardExitResult.onKeyguardExitResult(boolean)":"android.app.KeyguardManager.OnKeyguardExitResult.onKeyguardExitResult(boolean)\r\n"," if the restore stream has been fully consumed.":" 如果恢复流已被完全消耗。\r\n","The Uri for querying calendar alert information":"查询日历提醒信息的Uri\r\n","MediaPlayer#setAudioAttributes(AudioAttributes)":"媒体播放器#setAudioAttributes(AudioAttributes)\r\n"," to\n            authenticate the user.":" 到\r\n            验证用户。\r\n","imeId":"时间流逝\r\n","android.hardware.Camera.Parameters.getFocusAreas()":"android.hardware.Camera.Parameters.getFocusAreas()\r\n","The client is not allowed to register for GNSS Measurements in general or in the\n            requested mode.":"不允许客户在一般情况下或在\r\n            要求的模式。\r\n","android.provider.ContactsContract.PresenceColumns.CUSTOM_PROTOCOL":"android.provider.ContactsContract.PresenceColumns.CUSTOM_PROTOCOL\r\n"," at which the bitmap data starts":" 位图数据开始的位置\r\n","android.provider.SimPhonebookContract.ElementaryFiles.EF_ADN":"android.provider.SimPhonebookContract.ElementaryFiles.EF_ADN\r\n","the call object that is ready to make another call":"准备好进行另一个调用的调用对象\r\n","Implement this method to handle trackball events on the current input session.":"实现此方法以处理当前输入会话中的轨迹球事件。\r\n","The output protection levels supported by the device are not\n            sufficient to meet the requirements set by the content owner in the\n            license policy.":"该设备支持的输出保护级别不\r\n            足以满足内容所有者在\r\n            许可证政策。\r\n","android.media.audiofx.DynamicsProcessing.Config.isMbcInUse()":"android.media.audiofx.DynamicsProcessing.Config.isMbcInUse()\r\n","Returns the result data.":"返回结果数据。\r\n","android.content.pm.ActivityInfo#CONFIG_SMALLEST_SCREEN_SIZE\n            PackageManager.ActivityInfo.CONFIG_SMALLEST_SCREEN_SIZE":"android.content.pm.ActivityInfo#CONFIG_SMALLEST_SCREEN_SIZE\r\n            PackageManager.ActivityInfo.CONFIG_SMALLEST_SCREEN_SIZE\r\n","AudioMetadataReadMap":"音频元数据读取地图\r\n","android.media.audiofx.AudioEffect.OnControlStatusChangeListener":"android.media.audiofx.AudioEffect.OnControlStatusChangeListener\r\n","The current registered operator numeric id.":"当前注册的操作员数字 ID。\r\n","MediaRoute2Info media route info":"MediaRoute2Info 媒体路由信息\r\n","android.media.MediaCodec.MetricsConstants.MODE":"android.media.MediaCodec.MetricsConstants.MODE\r\n","android.media.MediaPlayer.MetricsConstants.FRAMES":"android.media.MediaPlayer.MetricsConstants.FRAMES\r\n","InputMethodService#onDisplayCompletions\n            InputMethodService.onDisplayCompletions()":"InputMethodService#onDisplayCompletions\r\n            InputMethodService.onDisplayCompletions()\r\n","android.net.vcn.VcnGatewayConnectionConfig.Builder.build()":"android.net.vcn.VcnGatewayConnectionConfig.Builder.build()\r\n","Callback used to monitor status of the TV inputs.":"用于监视电视输入状态的回调。\r\n","android.app.assist.AssistStructure.ViewNode.getAutofillType()":"android.app.assist.AssistStructure.ViewNode.getAutofillType()\r\n","android.media.audiofx.PresetReverb.Settings":"android.media.audiofx.PresetReverb.Settings\r\n","the RemoteControlClient associated with this route":"与此路由关联的 RemoteControlClient\r\n","the locale to insert the word for, or null to insert the word\n             for all locales.":"要插入单词的语言环境，或为 null 以插入单词\r\n             对于所有语言环境。\r\n","android.provider.CalendarContract.CalendarSyncColumns":"android.provider.CalendarContract.CalendarSyncColumns\r\n","android.provider.CallLog.Calls.BLOCK_REASON_CALL_SCREENING_SERVICE":"android.provider.CallLog.Calls.BLOCK_REASON_CALL_SCREENING_SERVICE\r\n","android.hardware.camera2.CameraExtensionSession.StateCallback.onConfigureFailed(android.hardware.camera2.CameraExtensionSession)":"android.hardware.camera2.CameraExtensionSession.StateCallback.onConfigureFailed(android.hardware.camera2.CameraExtensionSession)\r\n","android.media.RemoteControlClient.OnMetadataUpdateListener.onMetadataUpdate(int, java.lang.Object)":"android.media.RemoteControlClient.OnMetadataUpdateListener.onMetadataUpdate(int, java.lang.Object)\r\n","android.app.NotificationManager.Policy.SUPPRESSED_EFFECT_BADGE":"android.app.NotificationManager.Policy.SUPPRESSED_EFFECT_BADGE\r\n","postGain value in decibels (dB)":"以分贝 (dB) 为单位的后增益值\r\n","android.provider.DocumentsContract.Root.COLUMN_FLAGS":"android.provider.DocumentsContract.Root.COLUMN_FLAGS\r\n","The proportional set size for dalvik heap.":"dalvik 堆的比例设置大小。\r\n","Called when the underlying hardware TV input session calls\n            ":"当底层硬件电视输入会话调用时调用\r\n            \r\n","android.provider.Contacts.ContactMethodsColumns.KIND":"android.provider.Contacts.ContactMethodsColumns.KIND\r\n","android.media.RemoteControlClient.OnGetPlaybackPositionListener":"android.media.RemoteControlClient.OnGetPlaybackPositionListener\r\n","Called as the last step of the Activity being created.":"作为正在创建的活动的最后一步调用。\r\n","android.print.PrintAttributes.MediaSize.getId()":"android.print.PrintAttributes.MediaSize.getId()\r\n","This exception is thrown when a given MIME type does not have a valid\n            syntax.":"当给定的 MIME 类型没有有效的\r\n            句法。\r\n","android.media.MediaCodec.MetricsConstants.MODE_AUDIO":"android.media.MediaCodec.MetricsConstants.MODE_AUDIO\r\n","Returns true if this node has currently been activated by the user.":"如果此节点当前已被用户激活，则返回 true。\r\n","The duration, in milliseconds, the stroke takes to traverse the path.\n            Must be positive.":"笔划穿过路径所需的持续时间（以毫秒为单位）。\r\n            必须是积极的。\r\n","android.provider.DocumentsContract.Document.COLUMN_FLAGS":"android.provider.DocumentsContract.Document.COLUMN_FLAGS\r\n","an extra code, specific to the error. Typically\n            implementation dependent.\n            <ul>\n            <li>":"特定于错误的额外代码。通常\r\n            实施依赖。\r\n            <ul>\r\n            <李>\r\n","android.accessibilityservice.AccessibilityService.ScreenshotResult.getTimestamp()":"android.accessibilityservice.AccessibilityService.ScreenshotResult.getTimestamp()\r\n","What happens when the user presses the end call button if they're not\n            on a call.":"当用户按下结束通话按钮时会发生什么\r\n            在通话中。\r\n","android.os.Build.VERSION_CODES.GINGERBREAD":"android.os.Build.VERSION_CODES.GINGERBREAD\r\n","gl":"gl\r\n","android.net.http.SslCertificate.DName.getOName()":"android.net.http.SslCertificate.DName.getOName()\r\n","Information you can retrieve about a particular task that is currently\n            \"running\" in the system.":"您可以检索的有关当前正在执行的特定任务的信息\r\n            在系统中“运行”。\r\n","LogMessage":"日志消息\r\n","android.app.LauncherActivity.IconResizer":"android.app.LauncherActivity.IconResizer\r\n","android.hardware.Camera.Parameters.getSupportedFocusModes()":"android.hardware.Camera.Parameters.getSupportedFocusModes()\r\n","read-status":"读取状态\r\n","the cause of the error":"错误的原因\r\n","Threads#BROADCAST_THREAD":"线程#BROADCAST_THREAD\r\n","android.provider.Settings.Global.WIFI_SLEEP_POLICY_NEVER":"android.provider.Settings.Global.WIFI_SLEEP_POLICY_NEVER\r\n","the timestamp at start of capture for repeating\n                             request or the timestamp at start of capture of the\n                             first frame in a multi-frame capture.":"重复捕获开始时的时间戳\r\n                             请求或捕获开始时的时间戳\r\n                             多帧捕获中的第一帧。\r\n","android.media.MediaCas.PluginDescriptor":"android.media.MediaCas.PluginDescriptor\r\n","android.media.MediaCodec.MetricsConstants.ROTATION":"android.media.MediaCodec.MetricsConstants.ROTATION\r\n","Build.VERSION_CODES#O":"构建.VERSION_CODES#O\r\n","android.media.audiofx.DynamicsProcessing.EqBand":"android.media.audiofx.DynamicsProcessing.EqBand\r\n","the DRM session ID on which the event occurred,\n                   or ":"事件发生的 DRM 会话 ID，\r\n                   或者\r\n","Flag indicating that a document is not complete, likely its\n            contents are being downloaded.":"指示文档不完整的标志，可能是它的\r\n            正在下载内容。\r\n","android.media.AudioFocusRequest.Builder.AudioFocusRequest$Builder(android.media.AudioFocusRequest)":"android.media.AudioFocusRequest.Builder.AudioFocusRequest$Builder(android.media.AudioFocusRequest)\r\n"," otherwise. Continued strokes keep their pointers down when\n            the gesture completes.":" 否则。连续的笔画使他们的指针向下时\r\n            手势完成。\r\n","The channel list ID of this TV channel.":"该电视频道的频道列表 ID。\r\n","true if the artwork dimension was successfully set.":"如果图稿尺寸已成功设置，则为真。\r\n","#getPropertyByteArray":"#getPropertyByteArray\r\n","android.media.audiofx.Equalizer.getNumberOfBands()":"android.media.audiofx.Equalizer.getNumberOfBands()\r\n","Sentinel value for an action index that is unset.":"未设置的操作索引的标记值。\r\n","Result code representing that the command is successfully completed.":"表示命令已成功完成的结果代码。\r\n","android.provider.VoicemailContract.Status.CONFIGURATION_STATE_OK":"android.provider.VoicemailContract.Status.CONFIGURATION_STATE_OK\r\n","This function throws CursorIndexOutOfBoundsException if\n            the cursor position is out of bounds.":"此函数抛出 CursorIndexOutOfBoundsException 如果\r\n            光标位置越界。\r\n"," changes, such as\n            changing to the ":" 变化，例如\r\n            更改为\r\n","android.content.pm.PackageManager.Property.getClassName()":"android.content.pm.PackageManager.Property.getClassName()\r\n","#MEDIA_INFO_VIDEO_TRACK_LAGGING":"#MEDIA_INFO_VIDEO_TRACK_LAGGING\r\n","The media id of the parent media item.":"父媒体项的媒体 ID。\r\n","Return a bit mask of the differences between this Configuration\n            object and the given one.":"返回此配置之间差异的位掩码\r\n            对象和给定的对象。\r\n","#capture":"＃捕获\r\n","android.database.DatabaseUtils.InsertHelper.insert(android.content.ContentValues)":"android.database.DatabaseUtils.InsertHelper.insert(android.content.ContentValues)\r\n","PutDocumentsRequest":"PutDocuments请求\r\n","android.media.MediaDrm.KeyRequest.REQUEST_TYPE_UPDATE":"android.media.MediaDrm.KeyRequest.REQUEST_TYPE_UPDATE\r\n","Flag indicating that a document can be moved to another location\n            within the same document provider.":"指示文档可以移动到另一个位置的标志\r\n            在同一个文档提供者中。\r\n","android.app.UiAutomation.AccessibilityEventFilter":"android.app.UiAutomation.AccessibilityEventFilter\r\n","uid of the controller. Can be a negative value if the uid cannot be obtained.":"控制器的 uid。如果无法获取 uid，则可以为负值。\r\n","android.inputmethodservice.KeyboardView.OnKeyboardActionListener.onText(java.lang.CharSequence)":"android.inputmethodservice.KeyboardView.OnKeyboardActionListener.onText(java.lang.CharSequence)\r\n","android.provider.CallLog.Calls.DATA_USAGE":"android.provider.CallLog.Calls.DATA_USAGE\r\n","the number of bytes of MIDI data in the array to be processed":"要处理的数组中 MIDI 数据的字节数\r\n","android.media.MediaPlayer.OnTimedTextListener.onTimedText(android.media.MediaPlayer, android.media.TimedText)":"android.media.MediaPlayer.OnTimedTextListener.onTimedText(android.media.MediaPlayer, android.media.TimedText)\r\n","SipErrorCode":"错误代码\r\n","android.provider.CalendarContract.Instances.END_DAY":"android.provider.CalendarContract.Instances.END_DAY\r\n","RouteInfo#PLAYBACK_VOLUME_FIXED":"路线信息#PLAYBACK_VOLUME_FIXED\r\n","Gets the full text corresponding to the given entry.":"获取与给定条目对应的全文。\r\n","android.media.tv.TvContract.Channels.TYPE_DVB_S2":"android.media.tv.TvContract.Channels.TYPE_DVB_S2\r\n","Gets the options that can be used to autofill this view.":"获取可用于自动填充此视图的选项。\r\n","android.media.audiofx.Visualizer.setCaptureSize(int)":"android.media.audiofx.Visualizer.setCaptureSize(int)\r\n","BiometricPrompt#authenticate(CryptoObject,\n            CancellationSignal, Executor, AuthenticationCallback)":"BiometricPrompt#authenticate(CryptoObject,\r\n            取消信号、执行器、AuthenticationCallback）\r\n","Enables or disables the overlay view.":"启用或禁用叠加视图。\r\n","#COLUMN_MIME_TYPE":"#COLUMN_MIME_TYPE\r\n","android.media.audiofx.BassBoost.Settings.BassBoost$Settings(java.lang.String)":"android.media.audiofx.BassBoost.Settings.BassBoost$Settings(java.lang.String)\r\n","The original instance time of the recurring event for which this\n            event is an exception.":"此重复事件的原始实例时间\r\n            事件是一个例外。\r\n","H.":"H。\r\n","android.media.tv.TvContract.Channels.COLUMN_APP_LINK_COLOR":"android.media.tv.TvContract.Channels.COLUMN_APP_LINK_COLOR\r\n","Constructs a new Builder from a given AudioAttributes":"从给定的 AudioAttributes 构造一个新的 Builder\r\n","Returns the number of components for this color model.":"返回此颜色模型的分量数。\r\n","android.content.pm.PackageInstaller.SessionParams.setAppIcon(android.graphics.Bitmap)":"android.content.pm.PackageInstaller.SessionParams.setAppIcon(android.graphics.Bitmap)\r\n","Build ":"建造\r\n","android.hardware.Camera.Parameters.getSupportedPreviewFpsRange()":"android.hardware.Camera.Parameters.getSupportedPreviewFpsRange()\r\n","This method indicates that the offline switch call\n            ":"该方法表示离线切换调用\r\n            \r\n","This is the superclass for classes which provide basic support for animations which can be\n            started, ended, and have ":"这是为动画提供基本支持的类的超类\r\n            开始、结束和有\r\n","#IMPORTANCE_PERCEPTIBLE":"#IMPORTANCE_PERCEPTIBLE\r\n","android.os.ParcelFileDescriptor.FileDescriptorDetachedException":"android.os.ParcelFileDescriptor.FileDescriptorDetachedException\r\n","The request that was given to the CameraDevice":"提供给 CameraDevice 的请求\r\n","Listener registered by client to be notified upon communication audio device change.":"客户端注册的侦听器，在通信音频设备更改时收到通知。\r\n","android.provider.ContactsContract.ContactsColumns.HAS_PHONE_NUMBER":"android.provider.ContactsContract.ContactsColumns.HAS_PHONE_NUMBER\r\n","android.hardware.SensorPrivacyManager.Sensors.MICROPHONE":"android.hardware.SensorPrivacyManager.Sensors.MICROPHONE\r\n","Notify the listener of a scheme-specific event from the CA system.":"从 CA 系统通知监听器特定于方案的事件。\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV422PackedSemiPlanar":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV422PackedSemiPlanar\r\n","android.hardware.Camera.Parameters.getMaxZoom()":"android.hardware.Camera.Parameters.getMaxZoom()\r\n","the MediaSyncEvent created.":"创建的 MediaSyncEvent。\r\n","The original, first, version of Android.":"Android 的原始版本。\r\n","android.app.NotificationManager.Policy.PRIORITY_CATEGORY_CONVERSATIONS":"android.app.NotificationManager.Policy.PRIORITY_CATEGORY_CONVERSATIONS\r\n","android.provider.SimPhonebookContract.SimRecords.NAME":"android.provider.SimPhonebookContract.SimRecords.NAME\r\n","android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC3":"android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC3\r\n","android.media.session.MediaController.TransportControls.play()":"android.media.session.MediaController.TransportControls.play()\r\n","android.app.VoiceInteractor.PickOptionRequest":"android.app.VoiceInteractor.PickOptionRequest\r\n","Optional arguments to supply to the fragment when it is\n            instantiated.":"提供给片段的可选参数\r\n            实例化。\r\n","android.media.tv.TvContract.Channels.TYPE_1SEG":"android.media.tv.TvContract.Channels.TYPE_1SEG\r\n","android.provider.CallLog.Calls.PRESENTATION_UNKNOWN":"android.provider.CallLog.Calls.PRESENTATION_UNKNOWN\r\n","android.content.Loader.OnLoadCanceledListener":"android.content.Loader.OnLoadCanceledListener\r\n","android.accessibilityservice.GestureDescription.StrokeDescription.GestureDescription$StrokeDescription(android.graphics.Path, long, long)":"android.accessibilityservice.GestureDescription.StrokeDescription.GestureDescription$StrokeDescription(android.graphics.Path, long, long)\r\n","android.media.audiofx.Virtualizer.OnParameterChangeListener":"android.media.audiofx.Virtualizer.OnParameterChangeListener\r\n"," to monitor the app-ops the\n            system has tracked for it.":" 监控应用程序操作\r\n            系统已经追踪到了。\r\n","#authenticate(CryptoObject, CancellationSignal, Executor,\n            AuthenticationCallback)":"#authenticate(CryptoObject, CancellationSignal, Executor,\r\n            身份验证回调）\r\n","android.media.AudioRecord.stop()":"android.media.AudioRecord.stop()\r\n","Get a background image to be displayed behind the notification content.":"获取要显示在通知内容后面的背景图像。\r\n","#NOTIFICATION_CHANNEL_STATE":"#NOTIFICATION_CHANNEL_STATE\r\n","android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_FOREGROUND":"android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_FOREGROUND\r\n"," for\n            asynchronous broadcast handling.":" 为了\r\n            异步广播处理。\r\n","Construct the slice.":"构建切片。\r\n","The path to follow. Must have exactly one contour. The bounds of the path\n            must not be negative. The path must not be empty. If the path has zero length\n            (for example, a single ":"要遵循的路径。必须只有一个轮廓。路径的边界\r\n            不得为负。路径不能为空。如果路径长度为零\r\n            （例如，单个\r\n","android.app.ActivityManager.RunningServiceInfo.lastActivityTime":"android.app.ActivityManager.RunningServiceInfo.lastActivityTime\r\n","the sanitized value":"消毒后的价值\r\n","android.provider.ContactsContract.SimAccount.getEfType()":"android.provider.ContactsContract.SimAccount.getEfType()\r\n","\n            to receives scheme-specific notifications from a MediaCas instance.":"\r\n            从 MediaCas 实例接收特定于方案的通知。\r\n","get Knee Width in decibels (dB) around compressor threshold point. -or- sets knee width in decibels (dB).":"以压缩器阈值点附近的分贝 (dB) 为单位获取拐点宽度。 - 或 - 以分贝 (dB) 为单位设置拐点宽度。\r\n","android.app.VoiceInteractor.Request.onAttached(android.app.Activity)":"android.app.VoiceInteractor.Request.onAttached(android.app.Activity)\r\n","Returns the description of the media.":"返回媒体的描述。\r\n","The received event.":"收到的事件。\r\n","android.inputmethodservice.Keyboard.Row":"android.inputmethodservice.Keyboard.Row\r\n","android.app.ActivityManager.RunningAppProcessInfo.lru":"android.app.ActivityManager.RunningAppProcessInfo.lru\r\n","Creates an empty TaskDescription.":"创建一个空的 TaskDescription。\r\n","android.media.audiofx.EnvironmentalReverb.setDecayHFRatio(short)":"android.media.audiofx.EnvironmentalReverb.setDecayHFRatio（短）\r\n","android.content.ClipData.Item.getIntent()":"android.content.ClipData.Item.getIntent()\r\n","android.media.audiofx.DynamicsProcessing.MbcBand.setKneeWidth(float)":"android.media.audiofx.DynamicsProcessing.MbcBand.setKneeWidth（浮动）\r\n","android.graphics.BitmapFactory.Options.inScaled":"android.graphics.BitmapFactory.Options.inScaled\r\n","android.media.MediaDrm.ErrorCodes.ERROR_SECURE_STOP_RELEASE":"android.media.MediaDrm.ErrorCodes.ERROR_SECURE_STOP_RELEASE\r\n","android.os.ParcelFileDescriptor.OnCloseListener":"android.os.ParcelFileDescriptor.OnCloseListener\r\n","android.provider.Telephony.Carriers.MNC":"android.provider.Telephony.Carriers.MNC\r\n","Is read report allowed?":"是否允许阅读报告？\r\n","Optional clip in the bitmap bounds.":"位图边界中的可选剪辑。\r\n","The minimum confidence factor of good face recognition":"良好人脸识别的最小置信度\r\n","android.app.assist.AssistStructure.ViewNode.getTextSelectionEnd()":"android.app.assist.AssistStructure.ViewNode.getTextSelectionEnd()\r\n","android.content.pm.LauncherApps.PinItemRequest":"android.content.pm.LauncherApps.PinItemRequest\r\n","A Service is an application component representing either an application's desire\n            to perform a longer-running operation while not interacting with the user\n            or to supply functionality for other applications to use.":"服务是一个应用程序组件，代表应用程序的需求\r\n            在不与用户交互的情况下执行运行时间更长的操作\r\n            或为其他应用程序提供功能以供使用。\r\n","If known, the color space the decoded bitmap will have.":"如果已知，解码位图将具有的颜色空间。\r\n","android.provider.Telephony.Carriers.PROXY":"android.provider.Telephony.Carriers.PROXY\r\n","Interface definition for a callback to be invoked when one of the metadata values has\n            been updated.":"当其中一个元数据值具有时调用回调的接口定义\r\n            已更新。\r\n"," associated with this callback":" 与此回调关联\r\n","#PREPARE_DRM_STATUS_PROVISIONING_SERVER_ERROR":"#PREPARE_DRM_STATUS_PROVISIONING_SERVER_ERROR\r\n","android.provider.Settings.System.VOLUME_RING":"android.provider.Settings.System.VOLUME_RING\r\n","android.graphics.ColorSpace.Rgb.fromLinear(float[])":"android.graphics.ColorSpace.Rgb.fromLinear(float[])\r\n","Map object coordinates into window coordinates.":"将对象坐标映射到窗口坐标。\r\n","The color format for the media.":"媒体的颜色格式。\r\n","Searchable information, or ":"可搜索信息，或\r\n","Get the audio attributes for this session.":"获取此会话的音频属性。\r\n","android.net.LocalServerSocket.accept()":"android.net.LocalServerSocket.accept()\r\n","MediaDrm.ErrorCodes":"MediaDrm.ErrorCodes\r\n","Get a hint that this notification's icon should not be displayed.":"获得不应显示此通知图标的提示。\r\n","android.app.Fragment":"android.app.Fragment\r\n","Phone number to block.":"要阻止的电话号码。\r\n","Removes a split.":"删除拆分。\r\n","Called when the application requests to resume TV program recording.":"当应用程序请求恢复电视节目录制时调用。\r\n","android.provider.ContactsContract.Groups.CONTENT_TYPE":"android.provider.ContactsContract.Groups.CONTENT_TYPE\r\n","android.provider.ContactsContract.GroupsColumns.FAVORITES":"android.provider.ContactsContract.GroupsColumns.FAVORITES\r\n","android.provider.ContactsContract.RawContactsColumns.DATA_SET":"android.provider.ContactsContract.RawContactsColumns.DATA_SET\r\n","The unique identifier of the logical multi-camera.":"逻辑多摄像头的唯一标识。\r\n","#SHORTCUT_SUPPORT_FULL":"#SHORTCUT_SUPPORT_FULL\r\n","Represents the update file being intended for different OS version.":"表示用于不同操作系统版本的更新文件。\r\n","android.provider.ContactsContract.StreamItemsColumns.ACCOUNT_NAME":"android.provider.ContactsContract.StreamItemsColumns.ACCOUNT_NAME\r\n","android.provider.ContactsContract.Contacts.getLookupUri(android.content.ContentResolver, android.net.Uri)":"android.provider.ContactsContract.Contacts.getLookupUri(android.content.ContentResolver, android.net.Uri)\r\n","Contacts":"联系人\r\n","Set the photo for this person.":"为这个人设置照片。\r\n","android.media.RemoteControlClient.MetadataEditor.BITMAP_KEY_ARTWORK":"android.media.RemoteControlClient.MetadataEditor.BITMAP_KEY_ARTWORK\r\n","There exists some freeze period which starts within 60 days of the preceding period's\n            end time.":"存在一些冻结期，从上一期的 60 天内开始\r\n            时间结束。\r\n","android.provider.CallLog.Calls.AUTO_MISSED_MAXIMUM_RINGING":"android.provider.CallLog.Calls.AUTO_MISSED_MAXIMUM_RINGING\r\n","android.provider.Settings.System.PARENTAL_CONTROL_REDIRECT_URL":"android.provider.Settings.System.PARENTAL_CONTROL_REDIRECT_URL\r\n","#MODE_MEDIUM":"#MODE_MEDIUM\r\n","android.provider.Settings.Global.RADIO_WIFI":"android.provider.Settings.Global.RADIO_WIFI\r\n","android.app.appsearch.SetSchemaResponse.Builder":"android.app.appsearch.SetSchemaResponse.Builder\r\n","#SDK_INT":"#SDK_INT\r\n",". -or- Sets the image format for preview pictures.":". - 或 - 设置预览图片的图像格式。\r\n","Callbacks for connection related events.":"连接相关事件的回调。\r\n","Comma-delimited list of APN types.":"逗号分隔的 APN 类型列表。\r\n","The array index of near focus distance for use with\n            ":"近焦距数组索引配合使用\r\n            \r\n","android.provider.Browser.getAllVisitedUrls(android.content.ContentResolver)":"android.provider.Browser.getAllVisitedUrls(android.content.ContentResolver)\r\n","Key to extract the count of video frames played\n            from the ":"提取视频播放帧数的关键\r\n            来自\r\n","android.provider.ContactsContract.DataColumns.RAW_CONTACT_ID":"android.provider.ContactsContract.DataColumns.RAW_CONTACT_ID\r\n","android.provider.ContactsContract.StreamItemsColumns.TIMESTAMP":"android.provider.ContactsContract.StreamItemsColumns.TIMESTAMP\r\n","A non-null array of non-linear RGB values, its length\n                     must be at least 3":"非线性 RGB 值的非空数组，其长度\r\n                     必须至少为 3\r\n","android.provider.ContactsContract.Contacts.openContactPhotoInputStream(android.content.ContentResolver, android.net.Uri)":"android.provider.ContactsContract.Contacts.openContactPhotoInputStream(android.content.ContentResolver, android.net.Uri)\r\n","Constants to interact with the blocked numbers list.":"与阻止号码列表交互的常量。\r\n","The description of the route, or null if none.":"路线的描述，如果没有则为 null。\r\n","Location mode is off.":"位置模式已关闭。\r\n","android.provider.Telephony.BaseMmsColumns.DELIVERY_REPORT":"android.provider.Telephony.BaseMmsColumns.DELIVERY_REPORT\r\n","The maximum distance above the baseline for the tallest glyph in\n            the font at a given text size.":"中最高字形的基线以上的最大距离\r\n            给定文本大小的字体。\r\n","android.provider.Telephony.TextBasedSmsColumns.DATE":"android.provider.Telephony.TextBasedSmsColumns.DATE\r\n","android.provider.CalendarContract.EventsColumns.ORIGINAL_INSTANCE_TIME":"android.provider.CalendarContract.EventsColumns.ORIGINAL_INSTANCE_TIME\r\n","android.app.assist.AssistStructure.ViewNode.isActivated()":"android.app.assist.AssistStructure.ViewNode.isActivated()\r\n","A string of space separated search terms. Segments\n                       enclosed by double quotes will be treated as a single\n                       term.":"一串空格分隔的搜索词。段\r\n                       用双引号括起来将被视为单引号\r\n                       学期。\r\n","The action being unscheduled.":"行动计划外。\r\n","The color override on the theme's primary color.":"主题主色的颜色覆盖。\r\n","android.provider.Telephony.BaseMmsColumns.RETRIEVE_TEXT":"android.provider.Telephony.BaseMmsColumns.RETRIEVE_TEXT\r\n","android.media.midi.MidiDevice.MidiConnection":"android.media.midi.MidiDevice.MidiConnection\r\n","android.media.MediaCodecInfo.CodecProfileLevel.AVCProfileConstrainedHigh":"android.media.MediaCodecInfo.CodecProfileLevel.AVCProfileConstrainedHigh\r\n","The top margin in mils (thousandths of an inch).":"以密耳（千分之一英寸）为单位的上边距。\r\n","android.os.VibrationAttributes.Builder.build()":"android.os.VibrationAttributes.Builder.build()\r\n","android.provider.Telephony.MmsSms.CONTENT_LOCKED_URI":"android.provider.Telephony.MmsSms.CONTENT_LOCKED_URI\r\n","Returns the alignment requirement for video width (in pixels).":"返回视频宽度（以像素为单位）的对齐要求。\r\n"," is a resource identifier, this is the entry name of that\n            identifier.":" 是一个资源标识符，这是那个的条目名称\r\n            标识符。\r\n","the hour that was set":"设定的时间\r\n","Flags indicating which wallpaper(s) to configure with the new imagery.":"指示要使用新图像配置哪些墙纸的标志。\r\n","android.provider.ContactsContract.Intents.EXTRA_RECIPIENT_CONTACT_URI":"android.provider.ContactsContract.Intents.EXTRA_RECIPIENT_CONTACT_URI\r\n","This is called when a TV input is added to the system.":"当电视输入添加到系统时调用。\r\n","TvInputManager#VIDEO_UNAVAILABLE_REASON_BUFFERING":"TvInputManager#VIDEO_UNAVAILABLE_REASON_BUFFERING\r\n","The height of the overlay view.":"叠加视图的高度。\r\n","android.media.MediaRouter.UserRouteInfo.setPlaybackStream(int)":"android.media.MediaRouter.UserRouteInfo.setPlaybackStream(int)\r\n","Receives extracted media sample data and metadata from ":"从中接收提取的媒体样本数据和元数据\r\n","android.provider.Settings.System.NETWORK_PREFERENCE":"android.provider.Settings.System.NETWORK_PREFERENCE\r\n","The result code to propagate back to the\n            originating activity, often RESULT_CANCELED or RESULT_OK":"传播回的结果代码\r\n            发起活动，通常是 RESULT_CANCELED 或 RESULT_OK\r\n","Gets if preEq stage is in use":"获取是否正在使用 preEq 阶段\r\n","The end time of this TV program, in milliseconds since the epoch.":"此电视节目的结束时间，自纪元以来的毫秒数。\r\n","android.provider.Telephony.BaseMmsColumns.TRANSACTION_ID":"android.provider.Telephony.BaseMmsColumns.TRANSACTION_ID\r\n","The MediaCodec object.":"媒体编解码器对象。\r\n","The rating to set for the current content":"为当前内容设置的评级\r\n","android.provider.ContactsContract.ContactNameColumns.PHONETIC_NAME_STYLE":"android.provider.ContactsContract.ContactNameColumns.PHONETIC_NAME_STYLE\r\n","android.provider.ContactsContract.SimAccount.UNKNOWN_EF_TYPE":"android.provider.ContactsContract.SimAccount.UNKNOWN_EF_TYPE\r\n","android.preference.PreferenceActivity.Header.iconRes":"android.preference.PreferenceActivity.Header.iconRes\r\n","android.provider.SimPhonebookContract.SimRecords.getEncodedNameLength(android.content.ContentResolver, java.lang.String)":"android.provider.SimPhonebookContract.SimRecords.getEncodedNameLength(android.content.ContentResolver, java.lang.String)\r\n","desired expander ratio (1:N)":"所需的膨胀比 (1:N)\r\n","Returns the width of this view, in pixels.":"返回此视图的宽度，以像素为单位。\r\n","Get the underlying SPI held by this object.":"获取此对象持有的基础 SPI。\r\n","android.media.tv.TvContract.Channels.TYPE_ATSC3_T":"android.media.tv.TvContract.Channels.TYPE_ATSC3_T\r\n","android.hardware.Camera.Parameters.setSceneMode(java.lang.String)":"android.hardware.Camera.Parameters.setSceneMode(java.lang.String)\r\n","Decodes an RGB value to linear space.":"将 RGB 值解码为线性空间。\r\n","android.hardware.camera2.params.MandatoryStreamCombination.MandatoryStreamInformation.getFormat()":"android.hardware.camera2.params.MandatoryStreamCombination.MandatoryStreamInformation.getFormat()\r\n","value between 0 and getVolumeMax":"介于 0 和 getVolumeMax 之间的值\r\n","android.app.appsearch.AppSearchSchema.Builder":"android.app.appsearch.AppSearchSchema.Builder\r\n","android.hardware.Camera.Parameters.getAutoExposureLock()":"android.hardware.Camera.Parameters.getAutoExposureLock()\r\n","Intent#ACTION_INSTALL_PACKAGE":"意图#ACTION_INSTALL_PACKAGE\r\n","android.provider.ContactsContract.Directory.ENTERPRISE_DEFAULT":"android.provider.ContactsContract.Directory.ENTERPRISE_DEFAULT\r\n","android.media.audiofx.DynamicsProcessing.Config.getInputGainByChannelIndex(int)":"android.media.audiofx.DynamicsProcessing.Config.getInputGainByChannelIndex(int)\r\n"," is non-null, this is the main text color associated with it.":" 非空，这是与之关联的主要文本颜色。\r\n","The default value used for ":"默认值用于\r\n","AVC Constrained Baseline profile.":"AVC 约束基线配置文件。\r\n","android.provider.CalendarContract.CalendarColumns.CAN_MODIFY_TIME_ZONE":"android.provider.CalendarContract.CalendarColumns.CAN_MODIFY_TIME_ZONE\r\n","android.content.SyncInfo.writeToParcel(android.os.Parcel, int)":"android.content.SyncInfo.writeToParcel(android.os.Parcel, int)\r\n","Other info from which to start building.":"从中开始构建的其他信息。\r\n","android.provider.Telephony.ThreadsColumns.RECIPIENT_IDS":"android.provider.Telephony.ThreadsColumns.RECIPIENT_IDS\r\n"," is\n                       empty, no column names are known and an empty row can't be inserted.\n                       If not set to null, the ":" 是\r\n                       空，没有已知的列名并且不能插入空行。\r\n                       如果不设置为 null，则\r\n","The printer name. Cannot be empty.":"打印机名称。不能为空。\r\n","animatedValue The value most recently calculated by this ":"animatedValue 最近计算的值\r\n","Check if this stroke is marked to continue in the next gesture.":"检查此笔划是否标记为在下一个手势中继续。\r\n","android.media.MediaRecorder.MetricsConstants.CAPTURE_FPS_ENABLE":"android.media.MediaRecorder.MetricsConstants.CAPTURE_FPS_ENABLE\r\n","android.database.sqlite.SQLiteDatabase.OpenParams.getLookasideSlotSize()":"android.database.sqlite.SQLiteDatabase.OpenParams.getLookasideSlotSize()\r\n","The content:// style URL for querying an instance range with a search\n            term.":"用于通过搜索查询实例范围的 content:// 样式 URL\r\n            学期。\r\n","range the minimum and maximum preview fps (scaled by 1000).":"范围最小和最大预览 fps（按 1000 缩放）。\r\n","android.accessibilityservice.AccessibilityService.MagnificationController.reset(boolean)":"android.accessibilityservice.AccessibilityService.MagnificationController.reset(boolean)\r\n","Bucket key.":"桶钥匙。\r\n","android.app.Instrumentation.ActivityMonitor.getLastActivity()":"android.app.Instrumentation.ActivityMonitor.getLastActivity()\r\n","indicates whether JET is paused (1) or not (0)":"指示 JET 是否暂停 (1) 或 (0)\r\n","#TEXT_STYLE_UNDERLINE":"#TEXT_STYLE_UNDERLINE\r\n","Metadata describing the structure of an encrypted input sample.":"描述加密输入样本结构的元数据。\r\n","Returns the streaming start threshold of the ":"返回的流媒体开始阈值\r\n","N MR1.":"NMR1。\r\n","Create an Item consisting of a single block of (possibly styled) text,\n            with an alternative HTML formatted representation.":"创建一个由单个（可能有样式的）文本块组成的项目，\r\n            使用替代的 HTML 格式表示。\r\n","Events for observing session lifecycle.":"观察会话生命周期的事件。\r\n","android.widget.RemoteViews RemoteViews":"android.widget.RemoteViews 远程视图\r\n","#SHORTCUT_SUPPORT_DATA_ITEMS_ONLY":"#SHORTCUT_SUPPORT_DATA_ITEMS_ONLY\r\n","android.media.MediaPlayer.OnCompletionListener.onCompletion(android.media.MediaPlayer)":"android.media.MediaPlayer.OnCompletionListener.onCompletion(android.media.MediaPlayer)\r\n","android.content.pm.ActivityInfo.WindowLayout.height":"android.content.pm.ActivityInfo.WindowLayout.height\r\n","android.media.RemoteController.OnClientUpdateListener.onClientChange(boolean)":"android.media.RemoteController.OnClientUpdateListener.onClientChange(boolean)\r\n","android.media.MediaCodec.CodecException.getErrorCode()":"android.media.MediaCodec.CodecException.getErrorCode()\r\n","the requested audio device.":"请求的音频设备。\r\n","android.media.MediaExtractor.MetricsConstants.MIME_TYPE":"android.media.MediaExtractor.MetricsConstants.MIME_TYPE\r\n","AudioMetadata.Key":"音频元数据.Key\r\n","android.media.midi.MidiDeviceInfo.PortInfo.getType()":"android.media.midi.MidiDeviceInfo.PortInfo.getType()\r\n","CommonDataKinds.GroupMembership":"通用数据类型.GroupMembership\r\n","\n            or for periodic updates on the progress of the record head, as set by\n            ":"\r\n            或定期更新记录头的进度，由\r\n            \r\n"," of extras for the launcher, if provided to the\n                                 system, ":" 发射器的附加功能，如果提供给\r\n                                 系统，\r\n","GenericDocument.Builder":"通用文档生成器\r\n","android.hardware.camera2.params.MandatoryStreamCombination.MandatoryStreamInformation.isUltraHighResolution()":"android.hardware.camera2.params.MandatoryStreamCombination.MandatoryStreamInformation.isUltraHighResolution()\r\n","android.media.tv.TvContract.PreviewPrograms.COLUMN_CHANNEL_ID":"android.media.tv.TvContract.PreviewPrograms.COLUMN_CHANNEL_ID\r\n","android.app.ActivityManager.AppTask.startActivity(android.content.Context, android.content.Intent, android.os.Bundle)":"android.app.ActivityManager.AppTask.startActivity(android.content.Context, android.content.Intent, android.os.Bundle)\r\n","A wrapper class for the cryptographic operations supported by BiometricPrompt.":"BiometricPrompt 支持的加密操作的包装类。\r\n"," if the property is a String type.":" 如果属性是 String 类型。\r\n","android.content.pm.PackageInstaller.SessionParams.setAppLabel(java.lang.CharSequence)":"android.content.pm.PackageInstaller.SessionParams.setAppLabel(java.lang.CharSequence)\r\n","android.app.usage.NetworkStats.Bucket.getRxPackets()":"android.app.usage.NetworkStats.Bucket.getRxPackets()\r\n","The type of directory captured as a resource ID in the context of the\n            package ":"在上下文中作为资源 ID 捕获的目录类型\r\n            包裹\r\n","The type of the track selected. The type can be\n                       ":"所选轨道的类型。类型可以是\r\n                       \r\n","android.provider.Settings.Panel.ACTION_INTERNET_CONNECTIVITY":"android.provider.Settings.Panel.ACTION_INTERNET_CONNECTIVITY\r\n","android.media.MediaPlayer.MetricsConstants.PLAYING":"android.media.MediaPlayer.MetricsConstants.PLAYING\r\n","Application#registerOnProvideAssistDataListener":"应用#registerOnProvideAssistDataListener\r\n","Called when the state of the session changes. Intents\n                                  sent to this receiver contain ":"当会话状态改变时调用。意图\r\n                                  发送给这个接收者包含\r\n","Returns the preference value if it exists, or defValue.  Throws\n            ClassCastException if there is a preference with this name that is not\n            a String.":"返回首选项值（如果存在）或 defValue。投掷\r\n            ClassCastException 如果存在具有此名称的首选项不是\r\n            一个字符串。\r\n","android.print.PrintJobInfo.Builder.putAdvancedOption(java.lang.String, java.lang.String)":"android.print.PrintJobInfo.Builder.putAdvancedOption(java.lang.String, java.lang.String)\r\n"," setting that indicates that the directory\n            allow its data copied to any contacts account.":" 指示目录的设置\r\n            允许其数据复制到任何联系人帐户。\r\n"," containing the\n            ":" 包含\r\n            \r\n","android.provider.Settings.System.VOLUME_SYSTEM":"android.provider.Settings.System.VOLUME_SYSTEM\r\n","True if the method handled the error, false if it didn't.\n            Returning false, or not having an OnErrorListener at all, will\n            cause the OnCompletionListener to be called.":"如果方法处理了错误，则为 True，否则为 false。\r\n            返回 false，或者根本没有 OnErrorListener，将会\r\n            导致调用 OnCompletionListener。\r\n","android.provider.Telephony.Carriers.SUBSCRIPTION_ID":"android.provider.Telephony.Carriers.SUBSCRIPTION_ID\r\n","android.media.MediaSession2Service.MediaNotification.getNotificationId()":"android.media.MediaSession2Service.MediaNotification.getNotificationId()\r\n","AdvertiseData":"广告数据\r\n","This download is visible and shows in the notifications while\n            in progress and after completion.":"此下载可见并显示在通知中\r\n            进行中和完成后。\r\n","Build a request using the current target Surfaces and settings.":"使用当前目标表面和设置构建请求。\r\n"," identifying a specific organization of colors of the\n            screenshot.":" 识别颜色的特定组织\r\n            截屏。\r\n","WifiDeviceFilter":"Wifi设备过滤器\r\n","the progress in [0.0, 100.0]":"[0.0, 100.0] 的进度\r\n","#VARIANT_FAVOR_FREQUENCY_RESOLUTION":"#VARIANT_FAVOR_FREQUENCY_RESOLUTION\r\n","android.media.EncoderProfiles.AudioProfile":"android.media.EncoderProfiles.AudioProfile\r\n","a String with all values from this Parameters object, in\n                    semi-colon delimited key-value pairs":"包含此 Parameters 对象的所有值的字符串，位于\r\n                    分号分隔的键值对\r\n","android.media.tv.TvContract.Channels.TYPE_PREVIEW":"android.media.tv.TvContract.Channels.TYPE_PREVIEW\r\n","android.provider.Contacts.ContactMethodsColumns.DATA":"android.provider.Contacts.ContactMethodsColumns.DATA\r\n","android.accessibilityservice.FingerprintGestureController":"android.accessibilityservice.FingerprintGestureController\r\n","BroadcastReceiver#getResultExtras(boolean)\n            BroadcastReceiver.getResultExtras(boolean)":"BroadcastReceiver#getResultExtras（布尔值）\r\n            BroadcastReceiver.getResultExtras（布尔值）\r\n","android.media.VolumeShaper.Configuration.getInterpolatorType()":"android.media.VolumeShaper.Configuration.getInterpolatorType()\r\n","Used to determine the currently configured default SMS package.":"用于判断当前配置的默认短信包。\r\n","the start-offset of the data in the buffer.":"缓冲区中数据的起始偏移量。\r\n","AsyncTask was intended to enable proper and easy use of the UI thread.":"AsyncTask 旨在使 UI 线程的使用变得正确和容易。\r\n","android.provider.Contacts.PhotosColumns.DOWNLOAD_REQUIRED":"android.provider.Contacts.PhotosColumns.DOWNLOAD_REQUIRED\r\n","android.provider.ContactsContract.DataColumns.MIMETYPE":"android.provider.ContactsContract.DataColumns.MIMETYPE\r\n"," with default\n            options.":" 默认\r\n            选项。\r\n","android.media.MediaExtractor.getTrackFormat(int)":"android.media.MediaExtractor.getTrackFormat(int)\r\n","Creates a new immutable range.":"创建一个新的不可变范围。\r\n","android.app.ApplicationErrorReport.BatteryInfo.checkinDetails":"android.app.ApplicationErrorReport.BatteryInfo.checkinDetails\r\n"," map.":" 地图。\r\n","android.provider.Telephony.TextBasedSmsColumns.STATUS_COMPLETE":"android.provider.Telephony.TextBasedSmsColumns.STATUS_COMPLETE\r\n","android.content.SharedPreferences.getStringSet(java.lang.String, java.util.Set<java.lang.String>)":"android.content.SharedPreferences.getStringSet(java.lang.String, java.util.Set<java.lang.String>)\r\n","The cached photo id of the picture associated with the phone number, if it exists.":"与电话号码关联的图片的缓存照片 ID（如果存在）。\r\n","MediaCodec#queueSecureInputBuffer":"MediaCodec#queueSecureInputBuffer\r\n","android.media.VolumeShaper.Configuration.getVolumes()":"android.media.VolumeShaper.Configuration.getVolumes()\r\n","Global system settings, containing preferences that always apply identically\n            to all defined users.":"全局系统设置，包含始终适用的首选项\r\n            给所有定义的用户。\r\n","Returns the preference value if it exists, or defValue.  Throws\n            ClassCastException if there is a preference with this name that is not\n            a boolean.":"返回首选项值（如果存在）或 defValue。投掷\r\n            ClassCastException 如果存在具有此名称的首选项不是\r\n            一个布尔值。\r\n"," or to set fields with\n            ":" 或设置字段\r\n            \r\n","android.drm.DrmStore.DrmObjectType.DrmStore$DrmObjectType()":"android.drm.DrmStore.DrmObjectType.DrmStore$DrmObjectType()\r\n","android.provider.ContactsContract.Contacts#LOOKUP_KEY":"android.provider.ContactsContract.Contacts#LOOKUP_KEY\r\n","android.app.SharedElementCallback.OnSharedElementsReadyListener":"android.app.SharedElementCallback.OnSharedElementsReadyListener\r\n","Called after the fragment has been attached to its host.":"在片段附加到其主机后调用。\r\n","the loader that canceled the load":"取消加载的加载器\r\n","android.os.Build.VERSION_CODES.JELLY_BEAN":"android.os.Build.VERSION_CODES.JELLY_BEAN\r\n","android.media.audiofx.EnvironmentalReverb.getRoomLevel()":"android.media.audiofx.EnvironmentalReverb.getRoomLevel()\r\n","The protocol to use to connect to this APN when roaming.":"漫游时用于连接到此 APN 的协议。\r\n","android.accounts.AccountManager.setAuthToken(android.accounts.Account, java.lang.String, java.lang.String)":"android.accounts.AccountManager.setAuthToken(android.accounts.Account, java.lang.String, java.lang.String)\r\n"," subdirectory of a single\n            person group.":" 单个子目录\r\n            人组。\r\n","android.media.MediaCodecInfo.CodecCapabilities.isFeatureRequired(java.lang.String)":"android.media.MediaCodecInfo.CodecCapabilities.isFeatureRequired(java.lang.String)\r\n","Specifies the known formats a bitmap can be compressed into":"指定位图可以压缩成的已知格式\r\n","A non-null array of 3 floats containing the value to transform\n                       and that will hold the result of the transform":"包含要转换的值的 3 个浮点数的非空数组\r\n                       这将保存转换的结果\r\n","android.os.storage.StorageManager.StorageVolumeCallback.onStateChanged(android.os.storage.StorageVolume)":"android.os.storage.StorageManager.StorageVolumeCallback.onStateChanged(android.os.storage.StorageVolume)\r\n","SystemUpdatePolicy#setFreezePeriods":"SystemUpdatePolicy#setFreezePeriods\r\n","The operation (e.":"操作（例如\r\n","android.provider.CalendarContract.CalendarColumns.CAN_ORGANIZER_RESPOND":"android.provider.CalendarContract.CalendarColumns.CAN_ORGANIZER_RESPOND\r\n","android.app.blob.BlobStoreManager.Session.getSize()":"android.app.blob.BlobStoreManager.Session.getSize()\r\n","The channel type for CMMB (handheld).":"CMMB（手持设备）的频道类型。\r\n","android.media.RemoteControlClient.MetadataEditor.clear()":"android.media.RemoteControlClient.MetadataEditor.clear()\r\n","The method called when a camera device has finished opening.":"相机设备完成打开时调用的方法。\r\n","android.media.MediaRouter.RouteCategory.getRoutes(java.util.List<android.media.MediaRouter.RouteInfo>)":"android.media.MediaRouter.RouteCategory.getRoutes(java.util.List<android.media.MediaRouter.RouteInfo>)\r\n","android.provider.CalendarContract.EventsColumns.GUESTS_CAN_MODIFY":"android.provider.CalendarContract.EventsColumns.GUESTS_CAN_MODIFY\r\n"," that allows the caller to specify which\n            of the supported wallpaper categories to set.":" 允许调用者指定哪个\r\n            要设置的支持的墙纸类别。\r\n","android.print.PrintAttributes.Builder.build()":"android.print.PrintAttributes.Builder.build()\r\n","Key to extract the duration (in milliseconds) of the\n            media being played\n            from the ":"提取持续时间（以毫秒为单位）的密钥\r\n            正在播放的媒体\r\n            来自\r\n","android.graphics.Canvas.save(int)":"android.graphics.Canvas.save(int)\r\n","This is invoked when the existing connection to the underlying TV input is lost.":"当与底层电视输入的现有连接丢失时，将调用此方法。\r\n",") is supported.":") 得到支持。\r\n"," if the input\n                    parameters are incorrect, for instance if X and Y define the same\n                    axis. Or if inR and outR don't have the same length.":" 如果输入\r\n                    参数不正确，例如，如果 X 和 Y 定义相同\r\n                    轴。或者如果 inR 和 outR 的长度不同。\r\n","Called when an error occurs during session initialization and\n            termination.":"在会话初始化期间发生错误时调用，并且\r\n            终止。\r\n","android.content.SharedPreferences.getString(java.lang.String, java.lang.String)":"android.content.SharedPreferences.getString(java.lang.String, java.lang.String)\r\n","\n            calls of type KEY_EXPIRED occured.":"\r\n            发生了 KEY_EXPIRED 类型的调用。\r\n","android.media.MediaRouter.SimpleCallback":"android.media.MediaRouter.SimpleCallback\r\n","Details for an active install session.":"活动安装会话的详细信息。\r\n","android.media.AudioRecord.Builder.build()":"android.media.AudioRecord.Builder.build()\r\n","android.opengl.GLSurfaceView.Renderer":"android.opengl.GLSurfaceView.Renderer\r\n","Message-ID":"消息ID\r\n","the Uri for the file if the scanning operation succeeded\n            and the file was added to the media database, or null if scanning failed.":"如果扫描操作成功，文件的 URI\r\n            并且文件已添加到媒体数据库，如果扫描失败则为 null。\r\n","android.hardware.Camera.AutoFocusMoveCallback":"android.hardware.Camera.AutoFocusMoveCallback\r\n","android.provider.CallLog.Calls.PRESENTATION_RESTRICTED":"android.provider.CallLog.Calls.PRESENTATION_RESTRICTED\r\n","android.provider.ContactsContract.AggregationExceptions.RAW_CONTACT_ID1":"android.provider.ContactsContract.AggregationExceptions.RAW_CONTACT_ID1\r\n","android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession, int)":"android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession, int)\r\n","android.provider.ContactsContract.DisplayPhoto.THUMBNAIL_MAX_DIM":"android.provider.ContactsContract.DisplayPhoto.THUMBNAIL_MAX_DIM\r\n"," to build a duplicate from.":" 从中构建副本。\r\n","android.media.MediaCodecInfo.CodecProfileLevel.level":"android.media.MediaCodecInfo.CodecProfileLevel.level\r\n","android.hardware.display.DisplayManager.DisplayListener.onDisplayAdded(int)":"android.hardware.display.DisplayManager.DisplayListener.onDisplayAdded(int)\r\n","#SCALING_MODE_AS_PLAYED":"#SCALING_MODE_AS_PLAYED\r\n","android.media.tv.TvContract.Channels.TYPE_DVB_T":"android.media.tv.TvContract.Channels.TYPE_DVB_T\r\n","android.app.ApplicationErrorReport.RunningServiceInfo.writeToParcel(android.os.Parcel, int)":"android.app.ApplicationErrorReport.RunningServiceInfo.writeToParcel(android.os.Parcel, int)\r\n"," if there is one pending, otherwise null.\n            If null is returned, the system will also stop the job if all work has also been completed.\n            (This means that for correct operation, you must always call dequeueWork() after you have\n            completed other work, to check either for more work or allow the system to stop the job.)":" 如果有一个未决，否则为空。\r\n            如果返回 null，如果所有工作也已完成，系统也会停止作业。\r\n            （这意味着为了正确的操作，你必须总是在你有\r\n            完成其他工作，检查更多工作或允许系统停止工作。）\r\n","android.net.Ikev2VpnProfile.Builder.Ikev2VpnProfile$Builder(java.lang.String, java.lang.String)":"android.net.Ikev2VpnProfile.Builder.Ikev2VpnProfile$Builder(java.lang.String, java.lang.String)\r\n","The system time when the frame was rendered.":"渲染帧时的系统时间。\r\n","android.provider.Telephony.BaseMmsColumns.MESSAGE_SIZE":"android.provider.Telephony.BaseMmsColumns.MESSAGE_SIZE\r\n","android.media.audiofx.Visualizer.OnDataCaptureListener":"android.media.audiofx.Visualizer.OnDataCaptureListener\r\n","android.provider.ContactsContract.StreamItemsColumns.SYNC1":"android.provider.ContactsContract.StreamItemsColumns.SYNC1\r\n","android.media.MediaRouter.UserRouteInfo.setName(java.lang.CharSequence)":"android.media.MediaRouter.UserRouteInfo.setName(java.lang.CharSequence)\r\n","TvInputManager#INPUT_STATE_DISCONNECTED":"TvInputManager#INPUT_STATE_DISCONNECTED\r\n","android.hardware.SensorAdditionalInfo.TYPE_SENSOR_PLACEMENT":"android.hardware.SensorAdditionalInfo.TYPE_SENSOR_PLACEMENT\r\n","Interface definition for a callback that receives status messages and warnings\n            during registration and rights acquisition.":"接收状态消息和警告的回调的接口定义\r\n            在注册和权利获取期间。\r\n","The provisioning response was empty, fields are missing or otherwise\n            unable to be parsed.":"配置响应为空，字段丢失或其他\r\n            无法解析。\r\n","android.graphics.pdf.PdfRenderer.Page.getIndex()":"android.graphics.pdf.PdfRenderer.Page.getIndex()\r\n","Combined usage across all roaming states.":"所有漫游状态的组合使用。\r\n","android.accessibilityservice.AccessibilityService.ScreenshotResult.getColorSpace()":"android.accessibilityservice.AccessibilityService.ScreenshotResult.getColorSpace()\r\n",": This process is running the foreground\n            UI, but the device is asleep so it is not visible to the user.":": 这个进程在前台运行\r\n            UI，但设备处于休眠状态，因此用户不可见。\r\n","Create a LightState object used to control lights on the device.":"创建一个 LightState 对象，用于控制设备上的灯光。\r\n","android.content.DialogInterface.OnClickListener.onClick(android.content.DialogInterface, int)":"android.content.DialogInterface.OnClickListener.onClick(android.content.DialogInterface, int)\r\n","AES-CTR Encryption/Ciphering Algorithm.":"AES-CTR 加密/加密算法。\r\n","desired in decibels (db)":"所需的分贝 (db)\r\n","android.content.res.Resources.Theme.obtainStyledAttributes(android.util.AttributeSet, int[], int, int)":"android.content.res.Resources.Theme.obtainStyledAttributes(android.util.AttributeSet, int[], int, int)\r\n","Selects a route for the remote session.":"选择远程会话的路由。\r\n","android.provider.CalendarContract.EventsColumns.TITLE":"android.provider.CalendarContract.EventsColumns.TITLE\r\n","Status to display to the user to describe what the endpoint\n            of this route is currently doing":"向用户显示的状态描述端点是什么\r\n            这条路线目前正在做\r\n","android.hardware.camera2.CaptureResult.Key":"android.hardware.camera2.CaptureResult.Key\r\n","android.bluetooth.BluetoothProfile.ServiceListener.onServiceDisconnected(int)":"android.bluetooth.BluetoothProfile.ServiceListener.onServiceDisconnected(int)\r\n","android.media.MediaPlayer.provideKeyResponse(byte[], byte[])":"android.media.MediaPlayer.provideKeyResponse(byte[], byte[])\r\n"," if the package\n            does not contain such an activity, or if <em>packageName</em> is not\n            recognized.":" 如果包裹\r\n            不包含这样的活动，或者如果 <em>packageName</em> 不是\r\n            认可。\r\n","Throwable to provide additional information about the error, or ":"Throwable 以提供有关错误的其他信息，或者\r\n","android.preference.PreferenceActivity.Header.fragmentArguments":"android.preference.PreferenceActivity.Header.fragmentArguments\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format18BitBGR666":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format18BitBGR666\r\n","android.content.pm.LauncherApps.ShortcutQuery.FLAG_MATCH_MANIFEST":"android.content.pm.LauncherApps.ShortcutQuery.FLAG_MATCH_MANIFEST\r\n","android.media.ImageReader.OnImageAvailableListener.onImageAvailable(android.media.ImageReader)":"android.media.ImageReader.OnImageAvailableListener.onImageAvailable(android.media.ImageReader)\r\n","android.app.Notification.WearableExtender.getHintAmbientBigPicture()":"android.app.Notification.WearableExtender.getHintAmbientBigPicture()\r\n","android.media.MediaCodecInfo.CodecCapabilities.getMaxSupportedInstances()":"android.media.MediaCodecInfo.CodecCapabilities.getMaxSupportedInstances()\r\n","The canvas if the page is not finished, null otherwise.":"如果页面未完成则为 canvas，否则为 null。\r\n","KeyStatus#STATUS_OUTPUT_NOT_ALLOWED":"KeyStatus#STATUS_OUTPUT_NOT_ALLOWED\r\n","the playback speed":"播放速度\r\n","android.app.assist.AssistStructure.ViewNode.isFocusable()":"android.app.assist.AssistStructure.ViewNode.isFocusable()\r\n","android.media.audiofx.DynamicsProcessing.BandStage":"android.media.audiofx.DynamicsProcessing.BandStage\r\n","android.provider.VoicemailContract.Status.DATA_CHANNEL_STATE_NO_CONNECTION":"android.provider.VoicemailContract.Status.DATA_CHANNEL_STATE_NO_CONNECTION\r\n"," style URL for this table, by conversation.":" 此表的样式 URL，按会话。\r\n","android.app.VoiceInteractor.Prompt.getVisualPrompt()":"android.app.VoiceInteractor.Prompt.getVisualPrompt()\r\n","Thrown when a general failure occurs during a MediaDrm operation.":"在 MediaDrm 操作期间发生一般故障时抛出。\r\n","android.app.appsearch.SetSchemaResponse.MigrationFailure":"android.app.appsearch.SetSchemaResponse.MigrationFailure\r\n",", set this bit when\n            this call is silenced by the call screening service.":", 设置此位时\r\n            此呼叫已被呼叫筛选服务静音。\r\n","Called then a Typeface request done via ":"然后调用通过完成的字体请求\r\n","The MIME type of a CONTENT_URI subdirectory of a single ADN-like elementary file.":"单个类似 ADN 的基本文件的 CONTENT_URI 子目录的 MIME 类型。\r\n","android.app.assist.AssistStructure.WindowNode.getTitle()":"android.app.assist.AssistStructure.WindowNode.getTitle()\r\n","android.media.MediaDrm.HdcpLevel":"android.media.MediaDrm.HdcpLevel\r\n","android.provider.Settings.Secure.ENABLED_ACCESSIBILITY_SERVICES":"android.provider.Settings.Secure.ENABLED_ACCESSIBILITY_SERVICES\r\n","Combination of flag values to modify the release behavior.\n            Currently only ":"标志值的组合以修改发布行为。\r\n            目前仅\r\n","Resource ID of an icon drawable to use to represent this group":"用于表示该组的可绘制图标的资源 ID\r\n","android.provider.CalendarContract.CalendarAlertsColumns.NOTIFY_TIME":"android.provider.CalendarContract.CalendarAlertsColumns.NOTIFY_TIME\r\n","android.content.res.Resources.Theme.getResources()":"android.content.res.Resources.Theme.getResources()\r\n","the maximum number of metering areas supported by the camera.":"相机支持的最大测光区域数。\r\n","Return a drawable object associated with a particular resource ID\n            and styled for the Theme.":"返回与特定资源 ID 关联的可绘制对象\r\n            并为主题设计风格。\r\n"," if the surface was set successfully, ":" 如果表面设置成功，\r\n"," that will point to the current default notification\n            sound at any given time.":" 这将指向当前的默认通知\r\n            在任何给定时间发出声音。\r\n","android.app.usage.NetworkStats.Bucket.UID_TETHERING":"android.app.usage.NetworkStats.Bucket.UID_TETHERING\r\n","android.app.assist.AssistStructure.ViewNode.getScrollY()":"android.app.assist.AssistStructure.ViewNode.getScrollY()\r\n","the action index or ":"行动指数或\r\n","Ensure that any outstanding data for given stream has been committed\n            to disk.":"确保已提交给定流的任何未完成数据\r\n            到磁盘。\r\n","android.provider.ContactsContract.PhoneLookupColumns.NUMBER":"android.provider.ContactsContract.PhoneLookupColumns.NUMBER\r\n","android.net.sip.SipSession.State.OUTGOING_CALL":"android.net.sip.SipSession.State.OUTGOING_CALL\r\n","android.media.session.MediaSession.Callback.onStop()":"android.media.session.MediaSession.Callback.onStop()\r\n","The installer did not call ":"安装程序没有调用\r\n","Whether this is the primary entry of its kind for the aggregate\n            contact it belongs to.":"这是否是聚合的同类主要条目\r\n            联系它属于。\r\n","X coordinate of the key in the keyboard layout":"键盘布局中按键的 X 坐标\r\n","The subscription to which the APN belongs to":"APN所属订阅\r\n","\n            will result in linear interpolation.":"\r\n            将导致线性插值。\r\n","android.bluetooth.BluetoothDevice.ACTION_CLASS_CHANGED":"android.bluetooth.BluetoothDevice.ACTION_CLASS_CHANGED\r\n","android.media.MediaPlayer.OnDrmInfoListener":"android.media.MediaPlayer.OnDrmInfoListener\r\n","android.media.RemoteController.seekTo(long)":"android.media.RemoteController.seekTo（长）\r\n","true if the value was set, false on database errors":"如果设置了该值，则为 true，如果出现数据库错误，则为 false\r\n","android.graphics.drawable.DrawableContainer.DrawableContainerState.addChild(android.graphics.drawable.Drawable)":"android.graphics.drawable.DrawableContainer.DrawableContainerState.addChild(android.graphics.drawable.Drawable)\r\n","android.provider.ContactsContract.PhoneLookup.QUERY_PARAMETER_SIP_ADDRESS":"android.provider.ContactsContract.PhoneLookup.QUERY_PARAMETER_SIP_ADDRESS\r\n"," or\n                          ":" 或者\r\n                          \r\n","android.media.tv.TvView.TimeShiftPositionCallback.onTimeShiftCurrentPositionChanged(java.lang.String, long)":"android.media.tv.TvView.TimeShiftPositionCallback.onTimeShiftCurrentPositionChanged(java.lang.String, long)\r\n","This is called when an issue has occurred.":"发生问题时调用此方法。\r\n","android.provider.UserDictionary.Words.SHORTCUT":"android.provider.UserDictionary.Words.SHORTCUT\r\n","android.media.MediaDrm.MediaDrmStateException.getDiagnosticInfo()":"android.media.MediaDrm.MediaDrmStateException.getDiagnosticInfo()\r\n","android.media.MediaPlayer.OnDrmConfigHelper.onDrmConfig(android.media.MediaPlayer)":"android.media.MediaPlayer.OnDrmConfigHelper.onDrmConfig(android.media.MediaPlayer)\r\n","android.provider.ContactsContract.DisplayPhoto.CONTENT_URI":"android.provider.ContactsContract.DisplayPhoto.CONTENT_URI\r\n"," to animate from the current scale and\n                           center or ":" 从当前比例动画和\r\n                           中心或\r\n","android.hardware.Camera.Parameters.FOCUS_MODE_AUTO":"android.hardware.Camera.Parameters.FOCUS_MODE_AUTO\r\n","Called when the number of tracks is found.":"当找到曲目数时调用。\r\n","the selected day of the month (1-31, depending on\n                              month)":"一个月中的选定日期（1-31，取决于\r\n                              月）\r\n","android.app.DatePickerDialog.OnDateSetListener.onDateSet(android.widget.DatePicker, int, int, int)":"android.app.DatePickerDialog.OnDateSetListener.onDateSet(android.widget.DatePicker, int, int, int)\r\n","This mimetype should be prioritized in the QuickContacts UI.\n                        For example, passing the value\n                        ":"此 mimetype 应在 QuickContacts UI 中设置优先级。\r\n                        例如，传递值\r\n                        \r\n","The session returned by ":"返回的会话\r\n","android.hardware.Camera.Parameters.setPreviewFpsRange(int, int)":"android.hardware.Camera.Parameters.setPreviewFpsRange(int, int)\r\n","The type of the track.":"轨道的类型。\r\n","audioData.position()":"audioData.position()\r\n","android.content.pm.PackageInstaller.SessionInfo.getUpdatedMillis()":"android.content.pm.PackageInstaller.SessionInfo.getUpdatedMillis()\r\n","android.provider.Settings.System.INSTALL_NON_MARKET_APPS":"android.provider.Settings.System.INSTALL_NON_MARKET_APPS\r\n","The presentation ID of this audio presentation.":"此音频演示文稿的演示文稿 ID。\r\n","Flag that reflects whether this raw contact belongs to the user's\n            personal profile entry.":"反映此原始联系人是否属于用户的标志\r\n            个人资料条目。\r\n","object info of an existing entry":"现有条目的对象信息\r\n","Sets the print job attributes.":"设置打印作业属性。\r\n","android.app.DownloadManager.Request.VISIBILITY_HIDDEN":"android.app.DownloadManager.Request.VISIBILITY_HIDDEN\r\n","android.provider.Contacts.ContactMethods.POSTAL_LOCATION_LONGITUDE":"android.provider.Contacts.ContactMethods.POSTAL_LOCATION_LONGITUDE\r\n","android.provider.Settings.System.WIFI_WATCHDOG_ON":"android.provider.Settings.System.WIFI_WATCHDOG_ON\r\n","desired for limiter compressor in decibels(dB)":"限制器压缩器所需的分贝数（dB）\r\n","Returns the electro-optical transfer function (EOTF) of this color space.":"返回此颜色空间的电光传递函数 (EOTF)。\r\n","Get the stroke's start time":"获取笔画的开始时间\r\n","Callback passed to\n            ":"回调传递给\r\n            \r\n","The content rating of the blocked program.":"被阻止程序的内容分级。\r\n","android.media.MediaCodec.CryptoException.ERROR_NO_KEY":"android.media.MediaCodec.CryptoException.ERROR_NO_KEY\r\n","Returns the maximum width in ems of the text associated with this node, or ":"返回与此节点关联的文本的最大宽度（以 em 为单位），或者\r\n","android.hardware.Camera.Parameters.getMaxNumDetectedFaces()":"android.hardware.Camera.Parameters.getMaxNumDetectedFaces()\r\n","Defines tye type of HDR(high dynamic range) video.":"定义 HDR（高动态范围）视频的类型。\r\n","Key to extract the height (in pixels) of the video track\n            from the ":"提取视频轨道高度（以像素为单位）的键\r\n            来自\r\n","android.provider.ContactsContract.ContactOptionsColumns.CUSTOM_RINGTONE":"android.provider.ContactsContract.ContactOptionsColumns.CUSTOM_RINGTONE\r\n","H MR1.":"HMR1。\r\n","Fragment#onSaveInstanceState(Bundle)":"片段#onSaveInstanceState（捆绑包）\r\n","android.media.MediaRecorder.OnErrorListener":"android.media.MediaRecorder.OnErrorListener\r\n"," that is unique to a specified component.":" 这对指定的组件是唯一的。\r\n","android.media.MediaCodec.CryptoException.ERROR_UNSUPPORTED_OPERATION":"android.media.MediaCodec.CryptoException.ERROR_UNSUPPORTED_OPERATION\r\n","The height in mils (thousandths of an inch).":"以密耳（千分之一英寸）为单位的高度。\r\n","Returns the y-axis offset of the phase center from the origin of the Android sensor\n            coordinate system, in millimeters.":"返回相位中心相对于 Android 传感器原点的 y 轴偏移量\r\n            坐标系，以毫米为单位。\r\n","The error code of this operation.":"此操作的错误代码。\r\n","Returns the logical schema-type of the contents of this document property.":"返回此文档属性内容的逻辑模式类型。\r\n","android.app.assist.AssistStructure.ViewNode.isEnabled()":"android.app.assist.AssistStructure.ViewNode.isEnabled()\r\n",": Mark content as unread.":"：将内容标记为未读。\r\n","android.app.appsearch.ReportUsageRequest.Builder.ReportUsageRequest$Builder(java.lang.String, java.lang.String)":"android.app.appsearch.ReportUsageRequest.Builder.ReportUsageRequest$Builder(java.lang.String, java.lang.String)\r\n","#DEVICE_TYPE_SPEAKER":"#DEVICE_TYPE_SPEAKER\r\n","android.provider.Browser.BookmarkColumns.URL":"android.provider.Browser.BookmarkColumns.URL\r\n","android.media.MediaDrm.MetricsConstants.OPEN_SESSION_ERROR_COUNT":"android.media.MediaDrm.MetricsConstants.OPEN_SESSION_ERROR_COUNT\r\n","The key that is used in the ":"中使用的密钥\r\n","android.provider.ContactsContract.DataColumns.DATA9":"android.provider.ContactsContract.DataColumns.DATA9\r\n","the current magnification scale":"当前放大比例\r\n","Flag indicating that a document is virtual, and doesn't have byte\n            representation in the MIME type specified as ":"标志表示文档是虚拟的，没有字节\r\n            指定为 MIME 类型的表示\r\n","android.content.Intent.ShortcutIconResource.resourceName":"android.content.Intent.ShortcutIconResource.resourceName\r\n","android.media.MediaFeature.HdrType":"android.media.MediaFeature.HdrType\r\n","A callback object for tracking the progress of a ":"用于跟踪进度的回调对象\r\n","the frequency range in millHertz in an array of integers. The first element is the\n            lower limit of the range, the second element the upper limit.":"整数数组中以毫赫兹为单位的频率范围。第一个元素是\r\n            范围的下限，第二个元素的上限。\r\n","android.app.assist.AssistStructure.ViewNode.getLeft()":"android.app.assist.AssistStructure.ViewNode.getLeft()\r\n","Conversations are allowed through DND.":"允许通过 DND 进行对话。\r\n","The auth token to add to the cache":"添加到缓存的授权令牌\r\n","android.app.FragmentManager.OnBackStackChangedListener":"android.app.FragmentManager.OnBackStackChangedListener\r\n","android.media.MediaRecorder.AudioSource":"android.media.MediaRecorder.AudioSource\r\n","View returned by the fragment":"片段返回的视图\r\n"," (to cancel any measurement)\n                or ":" （取消任何测量）\r\n                或者\r\n","Approximate the ":"近似于\r\n"," helper\n            object that aggregates all supported parameters.":" 帮手\r\n            聚合所有支持参数的对象。\r\n","android.hardware.Camera.Parameters.getSupportedWhiteBalance()":"android.hardware.Camera.Parameters.getSupportedWhiteBalance()\r\n","android.content.Intent.ShortcutIconResource.describeContents()":"android.content.Intent.ShortcutIconResource.describeContents()\r\n","Called to notify the client when the proxy object has been\n            connected to the service.":"当代理对象被调用时通知客户端\r\n            连接到服务。\r\n","android.hardware.Camera.Parameters.FOCUS_MODE_EDOF":"android.hardware.Camera.Parameters.FOCUS_MODE_EDOF\r\n","android.hardware.camera2.CaptureRequest.Builder.build()":"android.hardware.camera2.CaptureRequest.Builder.build()\r\n","an offset to of the font data in the file":"文件中字体数据的偏移量\r\n","android.media.RemoteControlClient.MetadataEditor.apply()":"android.media.RemoteControlClient.MetadataEditor.apply()\r\n","Thread type: common thread.":"螺纹类型：普通螺纹。\r\n","android.media.session.MediaController.PlaybackInfo.getCurrentVolume()":"android.media.session.MediaController.PlaybackInfo.getCurrentVolume()\r\n","android.net.sip.SipAudioCall.Listener.onCallEnded(android.net.sip.SipAudioCall)":"android.net.sip.SipAudioCall.Listener.onCallEnded(android.net.sip.SipAudioCall)\r\n","The mandatory action id which must be unique in the\n                current application state.":"必须在\r\n                当前应用程序状态。\r\n","Get the encapsulation socket's file descriptor.":"获取封装套接字的文件描述符。\r\n","android.provider.ContactsContract.RawContactsEntity.CONTENT_TYPE":"android.provider.ContactsContract.RawContactsEntity.CONTENT_TYPE\r\n","android.graphics.drawable.Icon.OnDrawableLoadedListener":"android.graphics.drawable.Icon.OnDrawableLoadedListener\r\n","android.preference.PreferenceManager.OnActivityStopListener":"android.preference.PreferenceManager.OnActivityStopListener\r\n","The maximum number of messages that will be retained in the Notification itself (the\n            number displayed is up to the platform).":"将保留在通知本身中的最大消息数（\r\n            显示的数字取决于平台）。\r\n","android.provider.UserDictionary.Words.addWord(android.content.Context, java.lang.String, int, int)":"android.provider.UserDictionary.Words.addWord（android.content.Context，java.lang.String，int，int）\r\n","Called when a fingerprint is valid but not recognized.":"当指纹有效但未被识别时调用。\r\n"," to supply the recipient.":"供应收件人。\r\n","Right position in pixels, relative to the overlay view.":"相对于叠加视图的正确位置（以像素为单位）。\r\n","android.inputmethodservice.InputMethodService.InputMethodSessionImpl.updateSelection(int, int, int, int, int, int)":"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.updateSelection(int, int, int, int, int, int)\r\n","android.net.sip.SipSession.Listener.onRegistrationFailed(android.net.sip.SipSession, int, java.lang.String)":"android.net.sip.SipSession.Listener.onRegistrationFailed(android.net.sip.SipSession, int, java.lang.String)\r\n","Class for an open session with the CA system.":"与 CA 系统的开放会话类。\r\n","android.content.pm.PackageInstaller.SessionInfo.STAGED_SESSION_UNKNOWN":"android.content.pm.PackageInstaller.SessionInfo.STAGED_SESSION_UNKNOWN\r\n","\n            providing a directory of calls.":"\r\n            提供电话目录。\r\n","android.media.session.MediaController.PlaybackInfo.getPlaybackType()":"android.media.session.MediaController.PlaybackInfo.getPlaybackType()\r\n","android.provider.Settings.System.WIFI_STATIC_NETMASK":"android.provider.Settings.System.WIFI_STATIC_NETMASK\r\n","AppWidgetManager#ACTION_APPWIDGET_ENABLED":"AppWidgetManager#ACTION_APPWIDGET_ENABLED\r\n"," for this bubble. A value of 0 indicates a desired height has\n            not been set.":" 对于这个泡沫。值为 0 表示所需的高度有\r\n            没有被设置。\r\n","android.provider.Settings.System.WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS":"android.provider.Settings.System.WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS\r\n","android.provider.Settings.System.DATE_FORMAT":"android.provider.Settings.System.DATE_FORMAT\r\n","Copy the contents of <var>other</var> in to this object, but only\n            where fields are not defined by this object.":"将 <var>other</var> 的内容复制到这个对象中，但只\r\n            其中字段未由此对象定义。\r\n","android.media.AudioMetadataReadMap":"android.media.AudioMetadataReadMap\r\n","Is the message locked?":"消息被锁定了吗？\r\n","the center frequency in milliHertz":"以毫赫兹为单位的中心频率\r\n","Return an icon representing the app being installed.":"返回代表正在安装的应用程序的图标。\r\n","android.media.MediaDrm.CryptoSession":"android.media.MediaDrm.CryptoSession\r\n","android.provider.Settings.Secure.WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT":"android.provider.Settings.Secure.WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT\r\n","Returns the destination color space this connector will convert to.":"返回此连接器将转换到的目标颜色空间。\r\n","gets the limiter compressor ratio (N:1) -or- sets limiter compressor ratio (N:1)":"获取限制器压缩比 (N:1) - 或 - 设置限制器压缩比 (N:1)\r\n","android.app.appsearch.SearchResult.MatchInfo.getFullText()":"android.app.appsearch.SearchResult.MatchInfo.getFullText()\r\n","android.hardware.Camera.Parameters.SCENE_MODE_FIREWORKS":"android.hardware.Camera.Parameters.SCENE_MODE_FIREWORKS\r\n","\n            calls of type SESSION_RECLAIMED.":"\r\n            SESSION_RECLAIMED 类型的调用。\r\n","android.hardware.Camera.FaceDetectionListener":"android.hardware.Camera.FaceDetectionListener\r\n","Called when the virtual display video projection has been\n            paused by the system or when the surface has been detached\n            by the application by calling setSurface(null).":"虚拟显示视频投影完成时调用\r\n            由系统暂停或当表面已分离时\r\n            由应用程序调用 setSurface(null)。\r\n","This method returns an iterator object that can be used to iterate over\n            all keys of the metadata.":"此方法返回可用于迭代的迭代器对象\r\n            元数据的所有键。\r\n","Returns true if the new values were successfully written\n            to persistent storage.":"如果成功写入新值，则返回 true\r\n            到持久存储。\r\n","Returns the presentation timestamp in microseconds.":"以微秒为单位返回演示文稿时间戳。\r\n","android.os.PowerManager.WakeLock":"android.os.PowerManager.WakeLock\r\n","the maximum zoom value supported by the camera.":"相机支持的最大缩放值。\r\n","MVNO data.":"移动虚拟运营商数据。\r\n","android.app.Notification.Builder.getNotification()":"android.app.Notification.Builder.getNotification()\r\n","android.provider.Settings.System.BLUETOOTH_ON":"android.provider.Settings.System.BLUETOOTH_ON\r\n"," broadcast, which\n            is sent when the last AppWidget instance for this provider is deleted.":" 广播，哪个\r\n            当此提供者的最后一个 AppWidget 实例被删除时发送。\r\n","to perform the pinning operation on.":"执行固定操作。\r\n","android.app.DirectAction.Builder.DirectAction$Builder(java.lang.String)":"android.app.DirectAction.Builder.DirectAction$Builder(java.lang.String)\r\n","The printer status. Must be a valid status.":"打印机状态。必须是有效状态。\r\n","android.content.pm.PackageInstaller.SessionInfo.createDetailsIntent()":"android.content.pm.PackageInstaller.SessionInfo.createDetailsIntent()\r\n","Key to extract what the codec mode\n            from the ":"关键提取什么编解码模式\r\n            来自\r\n","android.content.ContentProvider.PipeDataWriter.writeDataToPipe(android.os.ParcelFileDescriptor, android.net.Uri, java.lang.String, android.os.Bundle, T)":"android.content.ContentProvider.PipeDataWriter.writeDataToPipe(android.os.ParcelFileDescriptor, android.net.Uri, java.lang.String, android.os.Bundle, T)\r\n","PointF":"F点\r\n","Rebases the theme against the parent Resource object's current\n            configuration by re-applying the styles passed to\n            ":"根据父资源对象的当前主题重新设置主题\r\n            通过重新应用传递给的样式进行配置\r\n            \r\n","Sets whether permissions should be auto-revoked if this package is unused for an\n            extended periodd of time.":"设置如果此包未用于某个时间，是否应自动撤销权限\r\n            延长的时间。\r\n","#DIRECTORY_RINGTONES":"#DIRECTORY_RINGTONES\r\n","Listener that is called periodically as progress is made.":"在取得进展时定期调用的侦听器。\r\n","android.provider.Settings.Secure.getLong(android.content.ContentResolver, java.lang.String)":"android.provider.Settings.Secure.getLong(android.content.ContentResolver, java.lang.String)\r\n","Key to extract the native channel mask information for this track\n            from the ":"提取此轨道的本机通道掩码信息的键\r\n            来自\r\n","The installer called ":"安装程序调用\r\n","android.provider.ContactsContract.DataColumns.IS_SUPER_PRIMARY":"android.provider.ContactsContract.DataColumns.IS_SUPER_PRIMARY\r\n","android.os.DropBoxManager.Entry.close()":"android.os.DropBoxManager.Entry.close()\r\n","android.hardware.Camera.Parameters.getExposureCompensationStep()":"android.hardware.Camera.Parameters.getExposureCompensationStep()\r\n","android.provider.Browser.SearchColumns.URL":"android.provider.Browser.SearchColumns.URL\r\n","BluetoothLeDeviceFilter":"BluetoothLeDeviceFilter\r\n","android.media.MediaCodec.CryptoInfo.numBytesOfEncryptedData":"android.media.MediaCodec.CryptoInfo.numBytesOfEncryptedData\r\n","#queueInputBuffer":"#queueInputBuffer\r\n","Returns the float value set for the property.":"返回为属性设置的浮点值。\r\n","android.media.MediaDrm.MetricsConstants.KEY_STATUS_OUTPUT_NOT_ALLOWED_COUNT":"android.media.MediaDrm.MetricsConstants.KEY_STATUS_OUTPUT_NOT_ALLOWED_COUNT\r\n","A linear interpolation between the start and end values, given the\n                    ":"给定的起始值和结束值之间的线性插值\r\n                    \r\n"," entry,\n            Provides ":" 入口，\r\n            提供\r\n","Creates and returns a ContentProviderOperation that assigns the data array as the\n            sync state for the given account.":"创建并返回一个 ContentProviderOperation，它将数据数组指定为\r\n            给定帐户的同步状态。\r\n","The set of events that occurred: a combination of the\n            ":"发生的事件集：\r\n            \r\n","android.media.MediaDrm.MetricsConstants.EVENT_VENDOR_DEFINED_COUNT":"android.media.MediaDrm.MetricsConstants.EVENT_VENDOR_DEFINED_COUNT\r\n","android.hardware.Camera.Parameters.setExposureCompensation(int)":"android.hardware.Camera.Parameters.setExposureCompensation(int)\r\n","android.media.audiofx.DynamicsProcessing.MbcBand.getPreGain()":"android.media.audiofx.DynamicsProcessing.MbcBand.getPreGain()\r\n","android.accessibilityservice.FingerprintGestureController.FingerprintGestureCallback.onGestureDetectionAvailabilityChanged(boolean)":"android.accessibilityservice.FingerprintGestureController.FingerprintGestureCallback.onGestureDetectionAvailabilityChanged（布尔值）\r\n","A label and description of the current state of this activity.":"此活动当前状态的标签和描述。\r\n","android.graphics.Paint.FontMetrics.bottom":"android.graphics.Paint.FontMetrics.底部\r\n","Identifier for this header, to correlate with a new list when\n            it is updated.":"此标头的标识符，用于在以下情况下与新列表相关联\r\n            它已更新。\r\n","the code for the status change encountered by this ":"此遇到的状态更改的代码\r\n","Constants for the raw contacts entities table, which can be thought of as\n            an outer join of the raw_contacts table with the data table.":"原始联系人实体表的常量，可以认为是\r\n            raw_contacts 表与数据表的外部连接。\r\n","android.print.PrintAttributes.Margins":"android.print.PrintAttributes.边距\r\n","non-modifiable ascending list of available sizes.":"可用大小的不可修改的升序列表。\r\n","android.media.audiofx.DynamicsProcessing.BandBase.isEnabled()":"android.media.audiofx.DynamicsProcessing.BandBase.isEnabled()\r\n","Exception thrown when an operation on a MediaCas object is attempted\n            and hardware resources are not sufficient to allocate, due to client's lower priority.":"尝试对 MediaCas 对象进行操作时抛出异常\r\n            由于客户端的优先级较低，硬件资源不足以分配。\r\n","android.provider.ContactsContract.PhoneLookup":"android.provider.ContactsContract.PhoneLookup\r\n","View#AUTOFILL_TYPE_NONE":"查看#AUTOFILL_TYPE_NONE\r\n","android.database.sqlite.SQLiteDatabase.CursorFactory.newCursor(android.database.sqlite.SQLiteDatabase, android.database.sqlite.SQLiteCursorDriver, java.lang.String, android.database.sqlite.SQLiteQuery)":"android.database.sqlite.SQLiteDatabase.CursorFactory.newCursor(android.database.sqlite.SQLiteDatabase, android.database.sqlite.SQLiteCursorDriver, java.lang.String, android.database.sqlite.SQLiteQuery)\r\n","The requested key was not found when trying to perform a decrypt\n            operation.":"尝试执行解密时未找到请求的密钥\r\n            手术。\r\n"," set this bit when\n            this call rings without vibration.":" 设置此位时\r\n            此呼叫无振动地响铃。\r\n","android.os.VibrationEffect.Composition.PRIMITIVE_LOW_TICK":"android.os.VibrationEffect.Composition.PRIMITIVE_LOW_TICK\r\n"," with\n            existing ":" 和\r\n            现存的\r\n","android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.sanitize(java.lang.String)":"android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.sanitize(java.lang.String)\r\n","android.location.GnssAntennaInfo.Builder.build()":"android.location.GnssAntennaInfo.Builder.build()\r\n","android.media.MediaDrm.ErrorCodes.ERROR_UNSUPPORTED_OPERATION":"android.media.MediaDrm.ErrorCodes.ERROR_UNSUPPORTED_OPERATION\r\n","the JPEG picture quality setting.":"JPEG 图片质量设置。\r\n","This exception is thrown when a given package, application, or component\n            name cannot be found.":"当给定的包、应用程序或组件时抛出此异常\r\n            找不到名称。\r\n","android.app.appsearch.AppSearchSchema.DocumentPropertyConfig":"android.app.appsearch.AppSearchSchema.DocumentPropertyConfig\r\n","MediaDrm#getKeyRequest":"MediaDrm#getKeyRequest\r\n","A callback that is invoked when a tag is removed from the field.":"从字段中删除标签时调用的回调。\r\n","Returns character offset of the break for a given line.":"返回给定行的中断字符偏移量。\r\n","The video resolution for enhanced-definition.":"增强清晰度的视频分辨率。\r\n","reuseArray":"重用数组\r\n","#PHOTO_SUPPORT_NONE":"#PHOTO_SUPPORT_NONE\r\n","newWidgetIds":"newWidgetIds\r\n","android.provider.Telephony.Threads.OBSOLETE_THREADS_URI":"android.provider.Telephony.Threads.OBSOLETE_THREADS_URI\r\n","The snippet of the latest message in the thread.":"线程中最新消息的片段。\r\n","android.provider.Telephony.Carriers.MVNO_MATCH_DATA":"android.provider.Telephony.Carriers.MVNO_MATCH_DATA\r\n","android.provider.ContactsContract.StatusColumns.AVAILABLE":"android.provider.ContactsContract.StatusColumns.AVAILABLE\r\n","Key to extract the number of failed\n            ":"提取失败次数的关键\r\n            \r\n","android.app.NotificationManager.Policy.SUPPRESSED_EFFECT_FULL_SCREEN_INTENT":"android.app.NotificationManager.Policy.SUPPRESSED_EFFECT_FULL_SCREEN_INTENT\r\n","PlaybackStateEvent":"播放状态事件\r\n","xHE-AAC (includes USAC)":"xHE-AAC（包括 USAC）\r\n","A human-readable error string that can be shown in UI":"可以在 UI 中显示的人类可读错误字符串\r\n","android.provider.ContactsContract.ContactNameColumns.PHONETIC_NAME":"android.provider.ContactsContract.ContactNameColumns.PHONETIC_NAME\r\n"," under this account have been marked as\n            unsynced.":" 此帐户下已标记为\r\n            不同步。\r\n","android.app.NotificationManager.Policy.SUPPRESSED_EFFECT_NOTIFICATION_LIST":"android.app.NotificationManager.Policy.SUPPRESSED_EFFECT_NOTIFICATION_LIST\r\n","The version string we show to the user; may be ":"我们向用户显示的版本字符串；或许\r\n","Optional arguments to supply to the ":"提供给的可选参数\r\n","android.opengl.ETC1Util.ETC1Texture.getWidth()":"android.opengl.ETC1Util.ETC1Texture.getWidth()\r\n","Key to extract the video capture framerate enable value\n            from the ":"提取视频捕获帧率启用值的关键\r\n            来自\r\n","Interface used to allow the creator of a dialog to run some code when the\n            dialog is dismissed.":"用于允许对话框的创建者运行一些代码的接口\r\n            对话框被关闭。\r\n","android.os.BugreportManager.BugreportCallback.onProgress(float)":"android.os.BugreportManager.BugreportCallback.onProgress(浮动)\r\n","android.app.ApplicationErrorReport.CrashInfo":"android.app.ApplicationErrorReport.CrashInfo\r\n","The normalized phone number":"标准化电话号码\r\n","android.media.MediaSession2.ControllerInfo":"android.media.MediaSession2.ControllerInfo\r\n","android.media.FaceDetector.Face.CONFIDENCE_THRESHOLD":"android.media.FaceDetector.Face.CONFIDENCE_THRESHOLD\r\n"," style URL for this table, by phone number.":" 此表的样式 URL，按电话号码。\r\n"," if\n                    not mounted or exception encountered trying to read status":" 如果\r\n                    未安装或尝试读取状态时遇到异常\r\n","android.preference.Preference.OnPreferenceClickListener.onPreferenceClick(android.preference.Preference)":"android.preference.Preference.OnPreferenceClickListener.onPreferenceClick(android.preference.Preference)\r\n"," from the contents of this builder.":" 从这个构建器的内容。\r\n","This method is called when a capture sequence aborts.":"当捕获序列中止时调用此方法。\r\n","android.media.tv.TvInputService.RecordingSession.onPauseRecording(android.os.Bundle)":"android.media.tv.TvInputService.RecordingSession.onPauseRecording(android.os.Bundle)\r\n","android.media.session.MediaSession.Callback.onPause()":"android.media.session.MediaSession.Callback.onPause()\r\n","the audio session ID.\n            The audio session ID is a system wide unique identifier for the audio stream played by\n            this MediaPlayer instance.\n            The primary use of the audio session ID  is to associate audio effects to a particular\n            instance of MediaPlayer: if an audio session ID is provided when creating an audio effect,\n            this effect will be applied only to the audio content of media players within the same\n            audio session and not to the output mix.\n            When created, a MediaPlayer instance automatically generates its own audio session ID.\n            However, it is possible to force this player to be part of an already existing audio session\n            by calling this method.\n            This method must be called before one of the overloaded ":"音频会话 ID。\r\n            音频会话 ID 是系统范围内播放的音频流的唯一标识符\r\n            这个 MediaPlayer 实例。\r\n            音频会话 ID 的主要用途是将音频效果关联到特定的\r\n            MediaPlayer 的实例：如果在创建音频效果时提供了音频会话 ID，\r\n            此效果将仅应用于同一媒体播放器中的音频内容\r\n            音频会话而不是输出混合。\r\n            创建时，MediaPlayer 实例会自动生成自己的音频会话 ID。\r\n            但是，可以强制此播放器成为现有音频会话的一部分\r\n            通过调用此方法。\r\n            必须在重载之一之前调用此方法\r\n","android.media.MediaCodec.CryptoInfo.mode":"android.media.MediaCodec.CryptoInfo.mode\r\n","android.media.MediaDrm.MetricsConstants.PROVIDE_PROVISION_RESPONSE_ERROR_LIST":"android.media.MediaDrm.MetricsConstants.PROVIDE_PROVISION_RESPONSE_ERROR_LIST\r\n","android.app.appsearch.AppSearchBatchResult.Builder.build()":"android.app.appsearch.AppSearchBatchResult.Builder.build()\r\n","android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.UrlQuerySanitizer$IllegalCharacterValueSanitizer(int)":"android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.UrlQuerySanitizer$IllegalCharacterValueSanitizer(int)\r\n","android.app.admin.FactoryResetProtectionPolicy.Builder.FactoryResetProtectionPolicy$Builder()":"android.app.admin.FactoryResetProtectionPolicy.Builder.FactoryResetProtectionPolicy$Builder()\r\n","android.provider.CalendarContract.EventsColumns.SYNC_DATA4":"android.provider.CalendarContract.EventsColumns.SYNC_DATA4\r\n"," if closed cleanly.\n                   If the close event was the result of\n                   ":" 如果关闭干净。\r\n                   如果关闭事件是\r\n                   \r\n","android.provider.Contacts.PresenceColumns.OFFLINE":"android.provider.Contacts.PresenceColumns.OFFLINE\r\n","android.media.tv.TvContract.RecordedPrograms.COLUMN_START_TIME_UTC_MILLIS":"android.media.tv.TvContract.RecordedPrograms.COLUMN_START_TIME_UTC_MILLIS\r\n","android.provider.Settings.System.AUTO_TIME_ZONE":"android.provider.Settings.System.AUTO_TIME_ZONE\r\n","Exception thrown when an operation on a MediaCas object is attempted\n            and hardware resources are not available, due to being in use.":"尝试对 MediaCas 对象进行操作时抛出异常\r\n            由于正在使用中，硬件资源不可用。\r\n","Resources to which this theme belongs.":"该主题所属的资源。\r\n","android.hardware.Camera.Parameters.SCENE_MODE_PARTY":"android.hardware.Camera.Parameters.SCENE_MODE_PARTY\r\n","android.app.ActivityManager.ProcessErrorStateInfo.uid":"android.app.ActivityManager.ProcessErrorStateInfo.uid\r\n","android.provider.Settings.Secure.WIFI_WATCHDOG_ON":"android.provider.Settings.Secure.WIFI_WATCHDOG_ON\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityPreStarted(android.app.Activity)":"android.app.Application.ActivityLifecycleCallbacks.onActivityPreStarted(android.app.Activity)\r\n","android.content.IntentFilter.MalformedMimeTypeException":"android.content.IntentFilter.MalformedMimeTypeException\r\n","android.media.AudioManager.AudioRecordingCallback":"android.media.AudioManager.AudioRecordingCallback\r\n","android.app.ActivityManager.RunningAppProcessInfo":"android.app.ActivityManager.RunningAppProcessInfo\r\n","android.content.pm.PackageInstaller.Session.getParentSessionId()":"android.content.pm.PackageInstaller.Session.getParentSessionId()\r\n","android.provider.Telephony.ThreadsColumns.MESSAGE_COUNT":"android.provider.Telephony.ThreadsColumns.MESSAGE_COUNT\r\n","android.media.tv.TvContract.Channels.VIDEO_FORMAT_360P":"android.media.tv.TvContract.Channels.VIDEO_FORMAT_360P\r\n","android.media.session.MediaSessionManager.RemoteUserInfo.getPackageName()":"android.media.session.MediaSessionManager.RemoteUserInfo.getPackageName()\r\n","AppSearchSession#put":"AppSearchSession#put\r\n","android.hardware.Camera.Area.weight":"android.hardware.Camera.Area.weight\r\n","Tasks and Back\n            Stack":"任务和返回\r\n            堆\r\n","OpenableColumns":"可打开的列\r\n","The type of playback this session is using.":"此会话正在使用的播放类型。\r\n","Get whether the scrolling position for the contents of this notification should start\n            at the bottom of the contents instead of the top when the contents are too long to\n            display within the screen.":"获取此通知内容的滚动位置是否应该开始\r\n            当内容太长而不是在内容的底部而不是顶部\r\n            显示在屏幕内。\r\n","android.provider.Telephony.BaseMmsColumns.MESSAGE_BOX_OUTBOX":"android.provider.Telephony.BaseMmsColumns.MESSAGE_BOX_OUTBOX\r\n","Mode to render the content for printing.":"呈现打印内容的模式。\r\n","Activity#onSaveInstanceState super.onSaveInstanceState()":"活动#onSaveInstanceState super.onSaveInstanceState()\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatRGBAFlexible":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatRGBAFlexible\r\n","android.net.TelephonyNetworkSpecifier.Builder.build()":"android.net.TelephonyNetworkSpecifier.Builder.build()\r\n","android.content.res.AssetManager.AssetInputStream.getAssetInt()":"android.content.res.AssetManager.AssetInputStream.getAssetInt()\r\n","Failed to generate a release request because a field in the offline\n            license is empty or malformed.":"无法生成发布请求，因为离线中的字段\r\n            许可证为空或格式错误。\r\n","\n            that this stream item belongs to.":"\r\n            这个流项目属于。\r\n","#PHONETIC_NAME_STYLE":"#PHONETIC_NAME_STYLE\r\n","gets the limiter compressor threshold measured in decibels (dB) from 0 dB Full Scale\n            (dBFS). -or- sets the limiter compressor threshold measured in decibels (dB) from 0 dB Full Scale\n            (dBFS).":"从 0 dB Full Scale 获取以分贝 (dB) 为单位测量的限制器压缩器阈值\r\n            （dBFS）。 - 或 - 从 0 dB Full Scale 设置以分贝 (dB) 测量的限制器压缩器阈值\r\n            （dBFS）。\r\n","The URI for the app badge icon of the app link template for this channel.":"此频道的应用链接模板的应用徽章图标的 URI。\r\n","Type of subclass who extends this.":"扩展它的子类的类型。\r\n","the original HTTP URI of the download":"下载的原始 HTTP URI\r\n","Called when the session's playback activeness is changed.":"当会话的播放活动发生变化时调用。\r\n","DrmInitData":"Drm初始化数据\r\n","the type of playback associated with this route":"与此路线关联的播放类型\r\n","android.media.MediaCodecInfo.CodecCapabilities":"android.media.MediaCodecInfo.CodecCapabilities\r\n","Content URI for the ADN-like elementary files available on the device.":"设备上可用的类似 ADN 的基本文件的内容 URI。\r\n","android.provider.CallLog.Calls.CALL_SCREENING_APP_NAME":"android.provider.CallLog.Calls.CALL_SCREENING_APP_NAME\r\n"," or to one of the URI's ancestors in the path\n                       hierarchy. When true, the observer will also be notified\n                       whenever a change occurs to the URI's descendants in the path\n                       hierarchy.":" 或路径中 URI 的祖先之一\r\n                       等级制度。为真时，观察者也会收到通知\r\n                       每当路径中 URI 的后代发生更改时\r\n                       等级制度。\r\n","android.app.ApplicationErrorReport.BatteryInfo.usagePercent":"android.app.ApplicationErrorReport.BatteryInfo.usagePercent\r\n","AudioFormat#CHANNEL_OUT_FRONT_LEFT":"音频格式#CHANNEL_OUT_FRONT_LEFT\r\n","Interface definition for a callback to be invoked when a shared\n            preference is changed.":"共享时调用回调的接口定义\r\n            偏好已更改。\r\n","android.graphics.Typeface.Builder.Typeface$Builder(java.io.File)":"android.graphics.Typeface.Builder.Typeface$Builder(java.io.File)\r\n","Flags that apply to a document.":"适用于文档的标志。\r\n","android.app.Notification.BubbleMetadata.getDesiredHeightResId()":"android.app.Notification.BubbleMetadata.getDesiredHeightResId()\r\n","the preview format.":"预览格式。\r\n","android.media.MediaCodecInfo.VideoCapabilities.getSupportedFrameRates()":"android.media.MediaCodecInfo.VideoCapabilities.getSupportedFrameRates()\r\n","A Cursor containing all attendees for the event":"包含事件的所有与会者的 Cursor\r\n","android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_CANT_SAVE_STATE":"android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_CANT_SAVE_STATE\r\n","android.print.PrintAttributes.MediaSize.PrintAttributes$MediaSize(java.lang.String, java.lang.String, int, int)":"android.print.PrintAttributes.MediaSize.PrintAttributes$MediaSize(java.lang.String, java.lang.String, int, int)\r\n","android.content.pm.PackageInstaller.SessionParams.setInstallReason(int)":"android.content.pm.PackageInstaller.SessionParams.setInstallReason(int)\r\n","android.drm.DrmManagerClient.OnInfoListener":"android.drm.DrmManagerClient.OnInfoListener\r\n","The target audio output bitrate in bits per second":"目标音频输出比特率（以比特每秒为单位）\r\n","Opaque token representing the identity of an incoming IPC.":"表示传入 IPC 身份的不透明令牌。\r\n","android.provider.Telephony.BaseMmsColumns.STATUS":"android.provider.Telephony.BaseMmsColumns.STATUS\r\n"," or null if created\n            via ":" 如果创建则为 null\r\n            通过\r\n","android.os.Handler.Callback":"android.os.Handler.Callback\r\n","\n            entry of the given ":"\r\n            给定的条目\r\n","The unencoded parameter":"未编码的参数\r\n","#COLUMN_LAST_MODIFIED":"#COLUMN_LAST_MODIFIED\r\n","android.bluetooth.BluetoothHidDevice.Callback.onInterruptData(android.bluetooth.BluetoothDevice, byte, byte[])":"android.bluetooth.BluetoothHidDevice.Callback.onInterruptData(android.bluetooth.BluetoothDevice, byte, byte[])\r\n","Key to extract the flag indicating whether the codec is running\n            in secure (DRM) mode from the ":"提取指示编解码器是否正在运行的标志的键\r\n            在安全（DRM）模式下\r\n","A comma separated list of attendee types supported for this calendar\n            in the format \"#,#,#\".":"此日历支持的与会者类型的逗号分隔列表\r\n            格式为“#,#,#”。\r\n","android.app.appsearch.ReportUsageRequest.Builder.build()":"android.app.appsearch.ReportUsageRequest.Builder.build()\r\n","android.app.Instrumentation.ActivityMonitor.waitForActivity()":"android.app.Instrumentation.ActivityMonitor.waitForActivity()\r\n","how long the thread group took to complete its last task in\n                nanoseconds":"线程组用了多长时间来完成它的最后一个任务\r\n                纳秒\r\n","android.media.MediaRecorder.MetricsConstants.VIDEO_TIMESCALE":"android.media.MediaRecorder.MetricsConstants.VIDEO_TIMESCALE\r\n","Contains all text-based SMS messages.":"包含所有基于文本的 SMS 消息。\r\n","MediaCodec callback interface.":"MediaCodec 回调接口。\r\n","true if the provider is enabled":"如果提供程序已启用，则为真\r\n","The maximum number of times we will retry a connection to an access\n            point for which we have failed in acquiring an IP address from DHCP.":"我们将重试访问连接的最大次数\r\n            我们无法从 DHCP 获取 IP 地址的点。\r\n","android.app.assist.AssistStructure.ViewNode.getClassName()":"android.app.assist.AssistStructure.ViewNode.getClassName()\r\n","The time when there was last activity in the service (either\n            explicit requests to start it or clients binding to it).":"服务中最后一次活动的时间（要么\r\n            显式请求启动它或客户端绑定到它）。\r\n","Returns the current position for time shifting, in milliseconds since the epoch.":"返回时移的当前位置，以纪元以来的毫秒数为单位。\r\n","android.hardware.Camera.Parameters.SCENE_MODE_CANDLELIGHT":"android.hardware.Camera.Parameters.SCENE_MODE_CANDLELIGHT\r\n","Undemotes a formerly demoted contact.":"取消降级以前降级的联系人。\r\n","Builds a location request from this builder.":"构建来自此构建器的位置请求。\r\n","android.media.MediaCodecInfo.AudioCapabilities.getMinInputChannelCount()":"android.media.MediaCodecInfo.AudioCapabilities.getMinInputChannelCount()\r\n","android.app.ApplicationErrorReport.AnrInfo.activity":"android.app.ApplicationErrorReport.AnrInfo.activity\r\n","The \"watch next\" type of this program content.":"此节目内容的“接下来观看”类型。\r\n","android.provider.Settings.Secure.PARENTAL_CONTROL_ENABLED":"android.provider.Settings.Secure.PARENTAL_CONTROL_ENABLED\r\n","android.media.tv.TvContract.Channels.COLUMN_INTERNAL_PROVIDER_DATA":"android.media.tv.TvContract.Channels.COLUMN_INTERNAL_PROVIDER_DATA\r\n","New position to move to, in milliseconds.":"要移动到的新位置，以毫秒为单位。\r\n","android.location.GnssNavigationMessage.Callback.STATUS_READY":"android.location.GnssNavigationMessage.Callback.STATUS_READY\r\n","Callback for notification of changes to operation state.":"操作状态更改通知的回调。\r\n","android.app.appsearch.AppSearchSchema.PropertyConfig.getName()":"android.app.appsearch.AppSearchSchema.PropertyConfig.getName()\r\n","android.provider.Telephony":"android.provider.电话\r\n","android.app.usage.NetworkStats.Bucket.DEFAULT_NETWORK_NO":"android.app.usage.NetworkStats.Bucket.DEFAULT_NETWORK_NO\r\n","android.media.audiofx.DynamicsProcessing.Channel":"android.media.audiofx.DynamicsProcessing.Channel\r\n","android.preference.PreferenceActivity.Header.summary":"android.preference.PreferenceActivity.Header.summary\r\n","TP-Status: no status received.":"TP-Status：没有收到状态。\r\n","android.media.audiofx.Virtualizer.forceVirtualizationMode(int)":"android.media.audiofx.Virtualizer.forceVirtualizationMode(int)\r\n","If set, the broadcast will be visible to receivers in Instant Apps.":"如果设置，广播将对 Instant Apps 中的接收者可见。\r\n","android.provider.ContactsContract.Settings":"android.provider.ContactsContract.Settings\r\n","android.hardware.Camera.AutoFocusCallback":"android.hardware.Camera.AutoFocusCallback\r\n"," events that occured.":" 发生的事件。\r\n","android.app.Notification.Action.SEMANTIC_ACTION_MUTE":"android.app.Notification.Action.SEMANTIC_ACTION_MUTE\r\n","android.content.pm.PackageInstaller.SessionParams.setSize(long)":"android.content.pm.PackageInstaller.SessionParams.setSize(长)\r\n","android.graphics.ImageDecoder.DecodeException.SOURCE_MALFORMED_DATA":"android.graphics.ImageDecoder.DecodeException.SOURCE_MALFORMED_DATA\r\n","。\r\n.\r\n            \r\n\r\n。\r\n.\n            ":"。\r\n.\r\n            \r\n\r\n。\r\n.\r\n            \r\n","android.hardware.location.GeofenceHardwareMonitorCallback":"android.hardware.location.GeofenceHardwareMonitorCallback\r\n","Schedule a countdown until a time in the future, with\n            regular notifications on intervals along the way.":"安排一个倒计时直到未来的某个时间，\r\n            沿途的定期通知。\r\n","PrinterInfo":"打印机信息\r\n","android.database.DatabaseUtils.InsertHelper.bind(int, java.lang.String)":"android.database.DatabaseUtils.InsertHelper.bind(int, java.lang.String)\r\n","android.provider.CalendarContract.EventsColumns.RRULE":"android.provider.CalendarContract.EventsColumns.RRULE\r\n","android.provider.ContactsContract.ContactOptionsColumns.PINNED":"android.provider.ContactsContract.ContactOptionsColumns.PINNED\r\n"," will\n            be set; otherwise, it will be cleared.":" 将要\r\n            被设置；否则，它将被清除。\r\n","android.hardware.Camera.Parameters.getWhiteBalance()":"android.hardware.Camera.Parameters.getWhiteBalance()\r\n"," for configuring your activity to monitor\n            search UI state.":" 用于配置要监控的活动\r\n            搜索界面状态。\r\n","Called when the GNSS system has received its first fix since starting.":"当 GNSS 系统收到自启动以来的第一个定位时调用。\r\n","android.os.DropBoxManager.Entry.DropBoxManager$Entry(java.lang.String, long, byte[], int)":"android.os.DropBoxManager.Entry.DropBoxManager$Entry(java.lang.String, long, byte[], int)\r\n","Callback called when GET_REPORT is received from remote host.":"从远程主机接收到 GET_REPORT 时调用的回调。\r\n","installer intends to make available via\n                             ":"安装程序打算通过\r\n                             \r\n","android.hardware.Camera.Parameters.setGpsLongitude(double)":"android.hardware.Camera.Parameters.setGpsLongitude（双）\r\n","android.provider.Settings.Global.getString(android.content.ContentResolver, java.lang.String)":"android.provider.Settings.Global.getString(android.content.ContentResolver, java.lang.String)\r\n","android.media.browse.MediaBrowser.ConnectionCallback":"android.media.browse.MediaBrowser.ConnectionCallback\r\n","Associates all the metadata that has been set since the MetadataEditor instance was\n                created with ":"关联自 MetadataEditor 实例创建以来设置的所有元数据\r\n                创建于\r\n","Key to extract the number of successful\n            ":"密钥提取成功次数\r\n            \r\n","The time that the alarm broadcast was received by the Calendar app,\n            in UTC.":"日历应用程序收到警报广播的时间，\r\n            在协调世界时。\r\n","Query codec feature requirements.":"查询编解码器功能要求。\r\n","android.hardware.Camera.Parameters.FLASH_MODE_RED_EYE":"android.hardware.Camera.Parameters.FLASH_MODE_RED_EYE\r\n","Construct the content URI for a particular name/value pair,\n            useful for monitoring changes with a ContentObserver.":"为特定名称/值对构造内容 URI，\r\n            对于使用 ContentObserver 监视更改很有用。\r\n","android.provider.ContactsContract.AggregationExceptions.CONTENT_ITEM_TYPE":"android.provider.ContactsContract.AggregationExceptions.CONTENT_ITEM_TYPE\r\n","android.media.tv.TvContract.Channels.TYPE_ATSC_M_H":"android.media.tv.TvContract.Channels.TYPE_ATSC_M_H\r\n","android.drm.DrmStore.ConstraintsColumns.LICENSE_EXPIRY_TIME":"android.drm.DrmStore.ConstraintsColumns.LICENSE_EXPIRY_TIME\r\n","Called as the last step of the Activity being stopped.":"作为被停止的 Activity 的最后一步调用。\r\n","Called after the administrator is first enabled, as a result of\n            receiving ":"在首次启用管理员后调用，因为\r\n            接收\r\n","android.net.LocalServerSocket.LocalServerSocket(java.io.FileDescriptor)":"android.net.LocalServerSocket.LocalServerSocket(java.io.FileDescriptor)\r\n","Returns the buffer flags.":"返回缓冲区标志。\r\n",". After detach the\n                   remote side may continue reading/writing to the underlying\n                   ":".分离后\r\n                   远程端可以继续读/写底层\r\n                   \r\n","android.provider.CalendarContract.EventsColumns.ACCESS_PRIVATE":"android.provider.CalendarContract.EventsColumns.ACCESS_PRIVATE\r\n","android.provider.Settings.Secure.ACCESSIBILITY_DISPLAY_INVERSION_ENABLED":"android.provider.Settings.Secure.ACCESSIBILITY_DISPLAY_INVERSION_ENABLED\r\n","android.media.metrics.PlaybackMetrics.Builder.PlaybackMetrics$Builder()":"android.media.metrics.PlaybackMetrics.Builder.PlaybackMetrics$Builder()\r\n","the Euler axis to retrieve an angle from \n                         (<var>EULER_X</var>, <var>EULER_Y</var> or \n                         <var>EULER_Z</var>)":"要从中检索角度的欧拉轴\r\n                         （<var>EULER_X</var>、<var>EULER_Y</var> 或\r\n                         <var>EULER_Z</var>)\r\n","android.net.sip.SipSession.Listener.onRinging(android.net.sip.SipSession, android.net.sip.SipProfile, java.lang.String)":"android.net.sip.SipSession.Listener.onRinging(android.net.sip.SipSession, android.net.sip.SipProfile, java.lang.String)\r\n","android.content.ContentProvider.CallingIdentity":"android.content.ContentProvider.CallingIdentity\r\n","Called on the implementer to notify that the metadata field for the given key has\n            been updated to the new value.":"调用实现者通知给定键的元数据字段已经\r\n            已更新为新值。\r\n","initialValues":"初始值\r\n","android.media.MediaPlayer.OnMediaTimeDiscontinuityListener.onMediaTimeDiscontinuity(android.media.MediaPlayer, android.media.MediaTimestamp)":"android.media.MediaPlayer.OnMediaTimeDiscontinuityListener.onMediaTimeDiscontinuity(android.media.MediaPlayer, android.media.MediaTimestamp)\r\n","android.inputmethodservice.Keyboard.Key.codes":"android.inputmethodservice.Keyboard.Key.codes\r\n","Called when the application requests to release all the resources held by this recording\n            session.":"当应用程序请求释放此录音占用的所有资源时调用\r\n            会议。\r\n","android.provider.ContactsContract.QuickContact.ACTION_QUICK_CONTACT":"android.provider.ContactsContract.QuickContact.ACTION_QUICK_CONTACT\r\n",".\r\n      \r\n.\r\n      \r\n\r\n.\n      \r\n.\n      ":".\r\n      \r\n.\r\n      \r\n\r\n.\r\n      \r\n.\r\n      \r\n","android.accessibilityservice.AccessibilityService.MagnificationController":"android.accessibilityservice.AccessibilityService.MagnificationController\r\n","android.media.MediaPlayer.OnBufferingUpdateListener":"android.media.MediaPlayer.OnBufferingUpdateListener\r\n","Interface definition of a callback to be invoked when a player subtitle track has new\n            subtitle data available.":"播放器字幕轨道有新消息时回调的接口定义\r\n            字幕数据可用。\r\n","the result of DRM preparation which can be\n            ":"DRM准备的结果可以是\r\n            \r\n","Constructs a builder.":"构造一个生成器。\r\n","#getSimAccounts(ContentResolver)":"#getSimAccounts（内容解析器）\r\n","android.os.Build.VERSION_CODES.ECLAIR_MR1":"android.os.Build.VERSION_CODES.ECLAIR_MR1\r\n","android.provider.Settings.System.WIFI_WATCHDOG_PING_DELAY_MS":"android.provider.Settings.System.WIFI_WATCHDOG_PING_DELAY_MS\r\n","The input options were invalid.":"输入选项无效。\r\n","android.provider.ContactsContract.StreamItemPhotosColumns.PHOTO_URI":"android.provider.ContactsContract.StreamItemPhotosColumns.PHOTO_URI\r\n"," of the shortcut representing this\n                                  channel's conversation.":" 代表这个的快捷方式\r\n                                  频道的对话。\r\n","RemoteControlClient#PLAYSTATE_ERROR":"RemoteControlClient#PLAYSTATE_ERROR\r\n","Creates a Path.":"创建路径。\r\n","Columns that appear when each row of a table belongs to a specific\n            account, including sync information that an account may need.":"当表格的每一行都属于特定的列时出现的列\r\n            帐户，包括帐户可能需要的同步信息。\r\n","The non-zero number of bytes read, or -1 if no data is available because the end\n                of the input has been reached.":"读取的非零字节数，如果没有可用数据则为 -1，因为结束\r\n                的输入已经达到。\r\n","Returns the preference value if it exists, or defValue.  Throws\n            ClassCastException if there is a preference with this name that is not\n            a long.":"返回首选项值（如果存在）或 defValue。投掷\r\n            ClassCastException 如果存在具有此名称的首选项不是\r\n            沿着。\r\n","android.provider.Telephony.Carriers.TYPE":"android.provider.Telephony.Carriers.TYPE\r\n","Configuration for a property containing a boolean.":"包含布尔值的属性的配置。\r\n","The MIME type of a blocked phone number under ":"下被阻止的电话号码的 MIME 类型\r\n","android.media.MediaPlayer.TrackInfo.writeToParcel(android.os.Parcel, int)":"android.media.MediaPlayer.TrackInfo.writeToParcel(android.os.Parcel, int)\r\n","android.media.session.MediaController.Callback.onQueueChanged(java.util.List<android.media.session.MediaSession.QueueItem>)":"android.media.session.MediaController.Callback.onQueueChanged(java.util.List<android.media.session.MediaSession.QueueItem>)\r\n"," depending on the key value, or the supplied default value if the key is\n                not present":" 取决于键值，或者如果键是提供的默认值\r\n                不存在\r\n","android.provider.Settings.System.MODE_RINGER":"android.provider.Settings.System.MODE_RINGER\r\n","android.media.MediaRouter.Callback":"android.media.MediaRouter.Callback\r\n","android.provider.CalendarContract.Attendees":"android.provider.CalendarContract.Attendees\r\n","android.content.res.Resources.getFont(int)":"android.content.res.Resources.getFont(int)\r\n","android.app.usage.NetworkStats.Bucket.getStartTimeStamp()":"android.app.usage.NetworkStats.Bucket.getStartTimeStamp()\r\n","Builder for creating ":"用于创建的生成器\r\n","Start of interval.":"间隔开始。\r\n","android.provider.FontsContract.FontInfo":"android.provider.FontsContract.FontInfo\r\n","android.media.AudioTrack.StreamEventCallback":"android.media.AudioTrack.StreamEventCallback\r\n","android.provider.CalendarContract.CalendarColumns.CAL_ACCESS_RESPOND":"android.provider.CalendarContract.CalendarColumns.CAL_ACCESS_RESPOND\r\n","android.app.Notification.MessagingStyle.getMessages()":"android.app.Notification.MessagingStyle.getMessages()\r\n","the Euler angle of the of the face, for the given axis":"对于给定的轴，面的欧拉角\r\n","Get the minimum (inclusive) frequency in this range segment.":"获取此范围段中的最小（含）频率。\r\n","The unencoded value":"未编码的值\r\n","Called whenever all information, previously received through the other\n            methods of the listener, is no longer valid and is about to be refreshed.":"每当所有信息被调用时，以前通过其他接收\r\n            侦听器的方法不再有效，即将刷新。\r\n","android.media.MediaFeature.HdrType.HDR10_PLUS":"android.media.MediaFeature.HdrType.HDR10_PLUS\r\n","android.media.tv.TvContract.Channels.COLUMN_SERVICE_ID":"android.media.tv.TvContract.Channels.COLUMN_SERVICE_ID\r\n","This is called when the current recording session has stopped recording and created a\n            new data entry in the ":"当当前录制会话停止录制并创建一个\r\n            中的新数据输入\r\n"," or the system is about to request\n            a media route provider service to create a controller with the given route.":" 或者系统即将请求\r\n            媒体路由提供者服务，用于创建具有给定路由的控制器。\r\n","android.media.session.MediaController.TransportControls.seekTo(long)":"android.media.session.MediaController.TransportControls.seekTo（长）\r\n","android.provider.CalendarContract.ColorsColumns.COLOR":"android.provider.CalendarContract.ColorsColumns.COLOR\r\n","android.hardware.Camera.Parameters.isVideoSnapshotSupported()":"android.hardware.Camera.Parameters.isVideoSnapshotSupported()\r\n","Interface for callback invocation for service resolution":"服务解析回调调用接口\r\n","gets the compressor ratio (N:1) -or- sets compressor ratio (N:1)":"获取压缩比 (N:1) - 或 - 设置压缩比 (N:1)\r\n","android.media.tv.TvContract.Channels.COLUMN_INPUT_ID":"android.media.tv.TvContract.Channels.COLUMN_INPUT_ID\r\n","Validation failed with unknown error.":"验证失败，出现未知错误。\r\n","android.provider.Settings.System.SCREEN_BRIGHTNESS_MODE":"android.provider.Settings.System.SCREEN_BRIGHTNESS_MODE\r\n","Key to extract the count of ":"提取计数的键\r\n","GetByDocumentIdRequest.Builder":"GetByDocumentIdRequest.Builder\r\n","android.os.Build.VERSION.SDK":"android.os.Build.VERSION.SDK\r\n","android.provider.ContactsContract.BaseSyncColumns.SYNC3":"android.provider.ContactsContract.BaseSyncColumns.SYNC3\r\n",": the object being written\n            is a return value, that is the result of a function such as\n            \"":": 正在写入的对象\r\n            是一个返回值，即函数的结果，例如\r\n            “\r\n","the number of bands":"乐队的数量\r\n","Text description of the error code returned by ":"返回错误码的文字说明\r\n","#SHORTCUT_SUPPORT_NONE":"#SHORTCUT_SUPPORT_NONE\r\n","Builds and validates the VcnGatewayConnectionConfig.":"构建并验证 VcnGatewayConnectionConfig。\r\n","android.app.NotificationChannel.setVibrationPattern(long[])":"android.app.NotificationChannel.setVibrationPattern(long[])\r\n","VP9 Profile 3 4:2:2 10-bit":"VP9 配置文件 3 4:2:2 10 位\r\n","android.content.pm.PackageInstaller.SessionParams.PackageInstaller$SessionParams(int)":"android.content.pm.PackageInstaller.SessionParams.PackageInstaller$SessionParams(int)\r\n","the square of the distance of the point from the center of the key":"点到键中心的距离的平方\r\n","Type for accessing records in the \"service dialing number\" (SDN) elementary file on the\n            SIM.":"在“服务拨号”(SDN) 基本文件中访问记录的类型\r\n            SIM卡。\r\n","android.media.session.MediaController.Callback.onQueueTitleChanged(java.lang.CharSequence)":"android.media.session.MediaController.Callback.onQueueTitleChanged(java.lang.CharSequence)\r\n","Returns true if this node currently had accessibility focus at the time that the\n            structure was collected.":"如果此节点当前具有可访问性焦点，则返回 true\r\n            结构被收集。\r\n","the sanitized unencoded value":"清理后的未编码值\r\n","android.provider.Settings.Global.WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON":"android.provider.Settings.Global.WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON\r\n"," means to use a route-dependent value\n              which is usually the sample rate of the source.\n              ":" 意味着使用依赖于路由的值\r\n              这通常是源的采样率。\r\n              \r\n","the player that reports the new subtitle data":"上报新字幕数据的播放器\r\n","android.app.ActivityManager.ProcessErrorStateInfo.NO_ERROR":"android.app.ActivityManager.ProcessErrorStateInfo.NO_ERROR\r\n",", set this bit when\n            this call is silenced because the phone is in 'do not disturb mode'.":", 设置此位时\r\n            由于手机处于“请勿打扰模式”，此呼叫被静音。\r\n","android.app.VoiceInteractor.Prompt.VoiceInteractor$Prompt(java.lang.CharSequence)":"android.app.VoiceInteractor.Prompt.VoiceInteractor$Prompt(java.lang.CharSequence)\r\n","Information about a content URI modification that a job would like to\n            trigger on.":"有关作业想要修改的内容 URI 的信息\r\n            触发。\r\n","android.provider.CalendarContract.Instances.ENTERPRISE_CONTENT_SEARCH_BY_DAY_URI":"android.provider.CalendarContract.Instances.ENTERPRISE_CONTENT_SEARCH_BY_DAY_URI\r\n","True to make the wake lock reference counted, false to\n            make the wake lock non-reference counted.":"True 使唤醒锁引用计数，false 使\r\n            使唤醒锁非引用计数。\r\n","a byte buffer of a font data":"字体数据的字节缓冲区\r\n","android.companion.WifiDeviceFilter.Builder":"android.companion.WifiDeviceFilter.Builder\r\n","Failed to generate a secure stop request because a field in the\n            stored license is empty or malformed.":"无法生成安全停止请求，因为\r\n            存储的许可证为空或格式错误。\r\n",". -or- Gets the ":". - 或 - 获取\r\n","android.provider.ContactsContract.Contacts#_ID":"android.provider.ContactsContract.Contacts#_ID\r\n","android.provider.Telephony.ServiceStateTable":"android.provider.Telephony.ServiceStateTable\r\n","APN username.":"APN 用户名。\r\n","Invoked when the connection to the media browser failed.":"当与媒体浏览器的连接失败时调用。\r\n","Class for Channel configuration parameters.":"通道配置参数的类。\r\n","android.content.Context.getExternalFilesDir(java.lang.String)":"android.content.Context.getExternalFilesDir(java.lang.String)\r\n","Indicates whether all messages of the thread have been read.":"指示线程的所有消息是否已被读取。\r\n","Get the current volume for this session.":"获取此会话的当前音量。\r\n","AudioMetadata.Format.KEY_*":"音频元数据.格式.KEY_*\r\n","android.media.Session2Command.Result.RESULT_INFO_SKIPPED":"android.media.Session2Command.Result.RESULT_INFO_SKIPPED\r\n"," failed to be indexed.":" 无法编入索引。\r\n","android.provider.Settings.System.DEFAULT_RINGTONE_URI":"android.provider.Settings.System.DEFAULT_RINGTONE_URI\r\n","android.nfc.NfcAdapter.CreateNdefMessageCallback":"android.nfc.NfcAdapter.CreateNdefMessageCallback\r\n","android.provider.Contacts.Photos":"android.provider.Contacts.Photos\r\n","MediaRoute2Info":"媒体路由信息\r\n","If 1, when launching DEBUG_APP it will wait for the debugger before\n            starting user code.":"如果为 1，启动 DEBUG_APP 时会等待调试器\r\n            开始用户代码。\r\n","android.media.MediaPlayer.OnSubtitleDataListener.onSubtitleData(android.media.MediaPlayer, android.media.SubtitleData)":"android.media.MediaPlayer.OnSubtitleDataListener.onSubtitleData(android.media.MediaPlayer, android.media.SubtitleData)\r\n","android.app.DownloadManager.Request.NETWORK_MOBILE":"android.app.DownloadManager.Request.NETWORK_MOBILE\r\n","android.provider.CallLog.Calls":"android.provider.CallLog.Calls\r\n","Gets the unique media size id.":"获取唯一的媒体大小 ID。\r\n","android.hardware.camera2.CameraCaptureSession.StateCallback.onCaptureQueueEmpty(android.hardware.camera2.CameraCaptureSession)":"android.hardware.camera2.CameraCaptureSession.StateCallback.onCaptureQueueEmpty(android.hardware.camera2.CameraCaptureSession)\r\n","android.graphics.HardwareRenderer.FrameRenderRequest.syncAndDraw()":"android.graphics.HardwareRenderer.FrameRenderRequest.syncAndDraw()\r\n","android.provider.ContactsContract.SyncColumns.ACCOUNT_NAME":"android.provider.ContactsContract.SyncColumns.ACCOUNT_NAME\r\n"," providing a directory of\n            groups.":" 提供一个目录\r\n            团体。\r\n","android.media.AudioRecord.OnRecordPositionUpdateListener.onMarkerReached(android.media.AudioRecord)":"android.media.AudioRecord.OnRecordPositionUpdateListener.onMarkerReached(android.media.AudioRecord)\r\n","android.provider.ContactsContract.StatusColumns.PRESENCE_STATUS":"android.provider.ContactsContract.StatusColumns.PRESENCE_STATUS\r\n","AlertDialog":"警报对话框\r\n","The current audio mode":"当前音频模式\r\n","Usage state.":"使用状态。\r\n","android.provider.CalendarContract.CalendarColumns.CAL_ACCESS_EDITOR":"android.provider.CalendarContract.CalendarColumns.CAL_ACCESS_EDITOR\r\n","android.mtp.MtpObjectInfo.Builder.MtpObjectInfo$Builder(android.mtp.MtpObjectInfo)":"android.mtp.MtpObjectInfo.Builder.MtpObjectInfo$Builder(android.mtp.MtpObjectInfo)\r\n","android.media.MediaDrm.ProvisionRequest":"android.media.MediaDrm.ProvisionRequest\r\n","Helper class to add wearable extensions to notifications.":"向通知添加可穿戴扩展的助手类。\r\n","android.accounts.AuthenticatorDescription.describeContents()":"android.accounts.AuthenticatorDescription.describeContents()\r\n","The level of access that the user has for the calendar":"用户对日历的访问级别\r\n","Returns the duration of the volume shape in milliseconds.":"以毫秒为单位返回音量形状的持续时间。\r\n"," to specify an exact\n            description to be shown when prompting user about creating a new\n            contact.":" 指定一个确切的\r\n            提示用户创建新的时显示的描述\r\n            接触。\r\n","URI used for the \"enterprise caller-id\".":"用于“企业来电显示”的 URI。\r\n","\n            to notify caller of result.":"\r\n            通知调用者结果。\r\n","The media width.":"介质宽度。\r\n","Callback reporting an LE device found during a device scan initiated\n            by the ":"回调报告在启动设备扫描期间找到的 LE 设备\r\n            由\r\n","android.content.pm.PackageInstaller.Session.transfer(java.lang.String)":"android.content.pm.PackageInstaller.Session.transfer(java.lang.String)\r\n","The maximum length supported for the phone number of a record in the elementary file.":"基本文件中记录的电话号码支持的最大长度。\r\n","android.media.MediaPlayer.DrmInfo":"android.media.MediaPlayer.DrmInfo\r\n","android.app.assist.AssistStructure.ViewNode.getTop()":"android.app.assist.AssistStructure.ViewNode.getTop()\r\n","The end of the time range to query in UTC millis since\n                       epoch":"以 UTC 毫秒为单位查询的时间范围的结束时间\r\n                       时代\r\n","android.provider.SimPhonebookContract.ElementaryFiles.RECORD_COUNT":"android.provider.SimPhonebookContract.ElementaryFiles.RECORD_COUNT\r\n","android.hardware.Camera.Parameters.setZoom(int)":"android.hardware.Camera.Parameters.setZoom(int)\r\n","android.app.ApplicationErrorReport.BatteryInfo.writeToParcel(android.os.Parcel, int)":"android.app.ApplicationErrorReport.BatteryInfo.writeToParcel(android.os.Parcel, int)\r\n","android.provider.ContactsContract.ContactsColumns.PHOTO_FILE_ID":"android.provider.ContactsContract.ContactsColumns.PHOTO_FILE_ID\r\n","android.provider.ContactsContract.StatusColumns.CAPABILITY_HAS_VOICE":"android.provider.ContactsContract.StatusColumns.CAPABILITY_HAS_VOICE\r\n","android.graphics.drawable.GradientDrawable.Orientation":"android.graphics.drawable.GradientDrawable.Orientation\r\n","android.provider.VoicemailContract.Status.buildSourceUri(java.lang.String)":"android.provider.VoicemailContract.Status.buildSourceUri(java.lang.String)\r\n","android.provider.Contacts.People.DELETED_CONTENT_URI":"android.provider.Contacts.People.DELETED_CONTENT_URI\r\n","Returns the non-adapted CIE xyY white point of this color space as\n            a new array of 2 floats.":"返回此颜色空间的非自适应 CIE xyY 白点作为\r\n            一个由 2 个浮点数组成的新数组。\r\n","android.media.MediaCodecInfo.CodecCapabilities.colorFormats":"android.media.MediaCodecInfo.CodecCapabilities.colorFormats\r\n","android.drm.DrmStore.Playback":"android.drm.DrmStore.Playback\r\n","android.provider.Telephony.MmsSms.SEARCH_URI":"android.provider.Telephony.MmsSms.SEARCH_URI\r\n","android.provider.CalendarContract.EventsColumns.SYNC_DATA5":"android.provider.CalendarContract.EventsColumns.SYNC_DATA5\r\n","This is invoked when the channel of this TvView is changed by the underlying TV input\n            without any ":"当底层电视输入更改此 TvView 的频道时调用此方法\r\n            没有任何\r\n","A container class for AudioMetadata Format keys.":"音频元数据格式密钥的容器类。\r\n","android.media.MediaDrm.ErrorCodes.ERROR_PROVISIONING_CERTIFICATE":"android.media.MediaDrm.ErrorCodes.ERROR_PROVISIONING_CERTIFICATE\r\n","The EF type of the contacts stored in this account.":"此帐户中存储的联系人的 EF 类型。\r\n","android.content.pm.PackageManager.Property.getFloat()":"android.content.pm.PackageManager.Property.getFloat()\r\n","android.app.admin.FactoryResetProtectionPolicy.Builder":"android.app.admin.FactoryResetProtectionPolicy.Builder\r\n","The Loader that has finished.":"已完成的 Loader。\r\n","android.animation.ValueAnimator.AnimatorUpdateListener.onAnimationUpdate(android.animation.ValueAnimator)":"android.animation.ValueAnimator.AnimatorUpdateListener.onAnimationUpdate(android.animation.ValueAnimator)\r\n","Hiragana and Katakana are two common styles of writing out the pronunciation\n            of a Japanese names.":"平假名和片假名是两种常见的发音写法\r\n            的一个日本名字。\r\n","android.media.audiofx.DynamicsProcessing.Config.isPreEqInUse()":"android.media.audiofx.DynamicsProcessing.Config.isPreEqInUse()\r\n","android.appwidget.AppWidgetManager.EXTRA_APPWIDGET_IDS":"android.appwidget.AppWidgetManager.EXTRA_APPWIDGET_IDS\r\n","If true, the codec supports multiple access units (for decoding, or to output for\n            encoders).":"如果为真，则编解码器支持多个访问单元（用于解码，或输出\r\n            编码器）。\r\n","android.app.slice.Slice.Builder":"android.app.slice.Slice.Builder\r\n","the name of the table to insert into":"要插入的表的名称\r\n","android.graphics.Paint.setRasterizer(android.graphics.Rasterizer)":"android.graphics.Paint.setRasterizer(android.graphics.Rasterizer)\r\n","24 bits per pixel RGB color format, with 8-bit red, green & blue components.":"每像素 24 位 RGB 颜色格式，具有 8 位红色、绿色和蓝色分量。\r\n","android.provider.Telephony.BaseMmsColumns.MESSAGE_BOX_SENT":"android.provider.Telephony.BaseMmsColumns.MESSAGE_BOX_SENT\r\n","A generic channel type.":"通用通道类型。\r\n","VolumeShaper.Configuration":"VolumeShaper.配置\r\n","android.media.tv.TvInputManager.TvInputCallback.onInputUpdated(java.lang.String)":"android.media.tv.TvInputManager.TvInputCallback.onInputUpdated(java.lang.String)\r\n","SessionException":"会话异常\r\n","Called to indicate avaliable timed metadata":"调用以指示可用的定时元数据\r\n","android.content.ClipData.Item.ClipData$Item(java.lang.CharSequence, java.lang.String, android.content.Intent, android.net.Uri)":"android.content.ClipData.Item.ClipData$Item(java.lang.CharSequence, java.lang.String, android.content.Intent, android.net.Uri)\r\n","android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_SERVICE":"android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_SERVICE\r\n","The data size (in bytes) for this recorded program.":"此录制节目的数据大小（以字节为单位）。\r\n","android.opengl.GLSurfaceView.Renderer.onDrawFrame(javax.microedition.khronos.opengles.GL10)":"android.opengl.GLSurfaceView.Renderer.onDrawFrame(javax.microedition.khronos.opengles.GL10)\r\n","）\r\n            \r\n\r\n)\r\n            \r\n\r\n）\r\n            \r\n\r\n)\n            ":"）\r\n            \r\n\r\n)\r\n            \r\n\r\n）\r\n            \r\n\r\n)\r\n            \r\n","This indicates that apps using MediaDrm sessions are\n            temporarily exceeding the capacity of available crypto\n            resources.":"这表明使用 MediaDrm 会话的应用程序是\r\n            暂时超过可用加密货币的容量\r\n            资源。\r\n","Key to extract the sink sample rate for this record track in Hz\n            from the ":"以 Hz 为单位提取此记录轨道的接收器采样率的键\r\n            来自\r\n","android.hardware.Camera.PreviewCallback.onPreviewFrame(byte[], android.hardware.Camera)":"android.hardware.Camera.PreviewCallback.onPreviewFrame(byte[], android.hardware.Camera)\r\n","android.media.AudioRecord.MetricsConstants.SOURCE":"android.media.AudioRecord.MetricsConstants.SOURCE\r\n","android.accounts.AuthenticatorDescription.writeToParcel(android.os.Parcel, int)":"android.accounts.AuthenticatorDescription.writeToParcel(android.os.Parcel, int)\r\n","\n            Note: This value will only be non-null for the owner of the session.":"\r\n            注意：此值仅对于会话所有者是非空的。\r\n","android.provider.Contacts.PeopleColumns.STARRED":"android.provider.Contacts.PeopleColumns.STARRED\r\n","Returns the frame count of the native ":"返回本机的帧数\r\n","Convenience function for updating a single settings value as a\n            floating point number.":"将单个设置值更新为\r\n            浮点数。\r\n","android.media.MediaRouter.RouteInfo.getIconDrawable()":"android.media.MediaRouter.RouteInfo.getIconDrawable()\r\n","android.app.WallpaperManager.OnColorsChangedListener.onColorsChanged(android.app.WallpaperColors, int)":"android.app.WallpaperManager.OnColorsChangedListener.onColorsChanged(android.app.WallpaperColors, int)\r\n","android.provider.Contacts.ContactMethods.CONTENT_EMAIL_TYPE":"android.provider.Contacts.ContactMethods.CONTENT_EMAIL_TYPE\r\n","android.provider.Settings.Global.DEVICE_NAME":"android.provider.Settings.Global.DEVICE_NAME\r\n"," as\n                          specified by the ":" 作为\r\n                          指定的\r\n","AVC High 4:2:2 profile.":"AVC 高 4:2:2 配置文件。\r\n","android.media.tv.TvContract.Channels.TYPE_ISDB_T":"android.media.tv.TvContract.Channels.TYPE_ISDB_T\r\n","Returns the id of the ":"返回的ID\r\n","android.os.VibrationEffect.Composition.PRIMITIVE_THUD":"android.os.VibrationEffect.Composition.PRIMITIVE_THUD\r\n","android.media.tv.TvInputService.Session.TvInputService$Session(android.content.Context)":"android.media.tv.TvInputService.Session.TvInputService$Session(android.content.Context)\r\n","android.app.AppOpsManager.OnOpChangedListener":"android.app.AppOpsManager.OnOpChangedListener\r\n","android.provider.ContactsContract.Directory.ENTERPRISE_CONTENT_URI":"android.provider.ContactsContract.Directory.ENTERPRISE_CONTENT_URI\r\n","Invoked on a change to GNSS antenna info.":"在更改 GNSS 天线信息时调用。\r\n","Get a hint that this notification's ":"得到这个通知的提示\r\n","Whether applications can be installed for this user via the system's\n            ":"是否可以通过系统的\r\n            \r\n","Create an empty Builder.":"创建一个空的构建器。\r\n","android.provider.Telephony.Carriers.NAME":"android.provider.Telephony.Carriers.NAME\r\n"," that is consumed as input by ":" 作为输入消耗的\r\n","The current volume where this session is playing.":"此会话正在播放的当前音量。\r\n","android.provider.Contacts.Settings":"android.provider.Contacts.Settings\r\n","the position of the drawable within the container":"drawable 在容器中的位置\r\n","android.media.MediaDrm.ErrorCodes.ERROR_INIT_DATA":"android.media.MediaDrm.ErrorCodes.ERROR_INIT_DATA\r\n","the subscription ID of the SIM containing the record. If no SIM\n                                  with this subscription ID exists then it will be treated as a\n                                  non-existent record":"包含该记录的 SIM 卡的订阅 ID。如果没有 SIM\r\n                                  如果存在此订阅 ID，则它将被视为\r\n                                  不存在的记录\r\n","RemoteControlClient#setTransportControlFlags(int)":"RemoteControlClient#setTransportControlFlags(int)\r\n"," object for the thread on which to execute\n            the callback. If ":" 要在其上执行的线程的对象\r\n            回调。如果\r\n","VcnConfig":"虚拟机配置\r\n","\n                          are the value of ":"\r\n                          是价值\r\n","android.os.PowerManager.WakeLock.setReferenceCounted(boolean)":"android.os.PowerManager.WakeLock.setReferenceCounted(布尔值)\r\n","Returns severity level for the event.":"返回事件的严重级别。\r\n","This is a request to pin shortcut.":"这是固定快捷方式的请求。\r\n","Override to handle requests to begin playback.":"重写以处理开始播放的请求。\r\n"," resulting from combining the added effects to\n            be played in parallel.":" 将添加的效果组合到\r\n            并行播放。\r\n","android.os.Build.VERSION_CODES.DONUT":"android.os.Build.VERSION_CODES.DONUT\r\n","android.media.audiofx.DynamicsProcessing.Limiter.DynamicsProcessing$Limiter(boolean, boolean, int, float, float, float, float, float)":"android.media.audiofx.DynamicsProcessing.Limiter.DynamicsProcessing$Limiter(boolean, boolean, int, float, float, float, float, float)\r\n","#setDiffusion(short)":"#setDiffusion（短）\r\n","android.graphics.BitmapFactory.Options.outColorSpace":"android.graphics.BitmapFactory.Options.outColorSpace\r\n","android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentDetached(android.app.FragmentManager, android.app.Fragment)":"android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentDetached(android.app.FragmentManager, android.app.Fragment)\r\n","android.provider.Telephony.Carriers.CARRIER_ID":"android.provider.Telephony.Carriers.CARRIER_ID\r\n",": Call a contact, group, etc.":"：呼叫联系人、群组等。\r\n","android.provider.Telephony.BaseMmsColumns.MMS_VERSION":"android.provider.Telephony.BaseMmsColumns.MMS_VERSION\r\n","Override to handle requests to pause playback.":"重写以处理暂停播放的请求。\r\n","The render mode.":"渲染模式。\r\n","android.provider.CalendarContract.SyncState":"android.provider.CalendarContract.SyncState\r\n","android.app.ActivityManager.RecentTaskInfo.affiliatedTaskId":"android.app.ActivityManager.RecentTaskInfo.affiliatedTaskId\r\n","Failure in the media framework.":"媒体框架的失败。\r\n","MIME types supported by this root.":"此根支持的 MIME 类型。\r\n","android.media.MediaRouter.RouteInfo.getPlaybackStream()":"android.media.MediaRouter.RouteInfo.getPlaybackStream()\r\n","A human-readable string that can be shown on an UI":"可以在 UI 上显示的人类可读字符串\r\n","This method is called instead of\n            ":"调用此方法而不是\r\n            \r\n","android.provider.Settings.System.USE_GOOGLE_MAIL":"android.provider.Settings.System.USE_GOOGLE_MAIL\r\n","android.os.VibrationEffect.Composition.PRIMITIVE_TICK":"android.os.VibrationEffect.Composition.PRIMITIVE_TICK\r\n","android.provider.Settings.Secure.WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE":"android.provider.Settings.Secure.WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE\r\n","android.media.tv.TvContract.Channels.CONTENT_TYPE":"android.media.tv.TvContract.Channels.CONTENT_TYPE\r\n","Send a received ECM packet to the specified session of the CA system.":"将接收到的 ECM 数据包发送到 CA 系统的指定会话。\r\n","android.graphics.BitmapFactory.Options.inScreenDensity":"android.graphics.BitmapFactory.Options.inScreenDensity\r\n"," when there is just one\n            property being animated.":" 当只有一个\r\n            正在动画的属性。\r\n","android.provider.ContactsContract.Contacts.QUERY_PARAMETER_VCARD_NO_PHOTO":"android.provider.ContactsContract.Contacts.QUERY_PARAMETER_VCARD_NO_PHOTO\r\n","A color to override the theme's primary color.  This color must be\n                                opaque.":"覆盖主题主色的颜色。这个颜色必须\r\n                                不透明。\r\n","This specifies that an attendee is a resource, like a room, a\n            cabbage, or something and not an actual person.":"这指定与会者是一种资源，如房间、\r\n            卷心菜之类的东西，而不是真实的人。\r\n","android.provider.Telephony.Carriers.NUMERIC":"android.provider.Telephony.Carriers.NUMERIC\r\n","android.app.Activity.setPersistent(boolean)":"android.app.Activity.setPersistent(boolean)\r\n"," indicates the device supports more\n            than 16 bits of integer precision.  As there is no AudioFormat constant\n            specifically defined for 24-bit PCM, the value ":" 表示设备支持更多\r\n            超过 16 位整数精度。因为没有 AudioFormat 常量\r\n            专门为 24 位 PCM 定义的，该值\r\n"," to\n            test if the interface supports GL11 or higher interfaces.":" 到\r\n            测试接口是否支持GL11以上接口。\r\n","Renders a page to a bitmap.":"将页面呈现为位图。\r\n","AudioEffect#EFFECT_TYPE_VIRTUALIZER":"音频效果#EFFECT_TYPE_VIRTUALIZER\r\n","Called when an app-op was noted for this package which cannot be delivered via the other\n            two mechanisms.":"当注意到此包的应用操作无法通过其他包交付时调用\r\n            两种机制。\r\n","android.hardware.Camera.Parameters.getMaxExposureCompensation()":"android.hardware.Camera.Parameters.getMaxExposureCompensation()\r\n","android.app.Notification.MessagingStyle.getUserDisplayName()":"android.app.Notification.MessagingStyle.getUserDisplayName()\r\n","PrintDocumentAdapter#onWrite(PageRange[], ParcelFileDescriptor, CancellationSignal,\n            WriteResultCallback)":"PrintDocumentAdapter#onWrite(PageRange[], ParcelFileDescriptor, CancellationSignal,\r\n            写入结果回调）\r\n","context of the requesting application":"请求应用程序的上下文\r\n","android.media.MediaCodecInfo.VideoCapabilities.getAchievableFrameRatesFor(int, int)":"android.media.MediaCodecInfo.VideoCapabilities.getAchievableFrameRatesFor(int, int)\r\n","The box which the message belongs to, e.":"消息所属的框，e。\r\n","android.provider.ContactsContract.ContactsColumns":"android.provider.ContactsContract.ContactsColumns\r\n","android.graphics.drawable.Drawable.Callback":"android.graphics.drawable.Drawable.Callback\r\n","Get an icon that goes with the content of this notification.":"获取与此通知内容相匹配的图标。\r\n","Override to handle changes in playback state.":"覆盖以处理播放状态的更改。\r\n","android.hardware.Camera.Area":"android.hardware.Camera.Area\r\n","The number of times a person has been contacted":"一个人被联系的次数\r\n","True if the method handled the info, false if it didn't.\n            Returning false, or not having an OnInfoListener at all, will\n            cause the info to be discarded.":"如果该方法处理了信息，则为 True，否则为 false。\r\n            返回 false，或者根本没有 OnInfoListener，将会\r\n            导致信息被丢弃。\r\n","android.app.Notification.Action.SEMANTIC_ACTION_CALL":"android.app.Notification.Action.SEMANTIC_ACTION_CALL\r\n","the path of the file, or the http URL of the stream\n            \n            <p>When ":"文件的路径，或流的 http URL\r\n            \r\n            <p>什么时候\r\n","android.content.pm.LauncherApps.PinItemRequest.REQUEST_TYPE_SHORTCUT":"android.content.pm.LauncherApps.PinItemRequest.REQUEST_TYPE_SHORTCUT\r\n","Information you can retrieve about tasks that the user has most recently\n            started or visited.":"您可以检索有关用户最近执行的任务的信息\r\n            开始或参观。\r\n","Flag indicating that this root supports search.":"表示此根支持搜索的标志。\r\n","android.media.session.MediaSession.Callback.onPrepareFromUri(android.net.Uri, android.os.Bundle)":"android.media.session.MediaSession.Callback.onPrepareFromUri(android.net.Uri, android.os.Bundle)\r\n","Buffer flags associated with the buffer.":"与缓冲区关联的缓冲区标志。\r\n","android.content.BroadcastReceiver.PendingResult":"android.content.BroadcastReceiver.PendingResult\r\n","vertical angle of view. Returns -1.0 when the device\n                    doesn't report view angle information.":"垂直视角。当设备返回 -1.0\r\n                    不报告视角信息。\r\n","android.provider.Contacts.Phones.CONTENT_URI":"android.provider.Contacts.Phones.CONTENT_URI\r\n","Confirms whether or not this is an input stream.":"确认这是否是输入流。\r\n","android.hardware.Camera.Parameters.removeGpsData()":"android.hardware.Camera.Parameters.removeGpsData()\r\n","android.media.MediaDrm.MetricsConstants.SESSION_START_TIMES_MS":"android.media.MediaDrm.MetricsConstants.SESSION_START_TIMES_MS\r\n","Condition codes":"条件代码\r\n","ImageWriter callback interface, used to to asynchronously notify the\n            application of various ImageWriter events.":"ImageWriter回调接口，用于异步通知\r\n            各种ImageWriter事件的应用。\r\n"," if the current input method was successfully switched to the input\n                    method by ":" 当前输入法是否成功切换为输入法\r\n                    方法\r\n","android.bluetooth.le.AdvertiseSettings.Builder.build()":"android.bluetooth.le.AdvertiseSettings.Builder.build()\r\n","The file descriptor. The passed fd must be mmap-able.":"文件描述符。传递的 fd 必须是可映射的。\r\n","android.media.MediaCodecInfo.CodecCapabilities.FEATURE_DynamicTimestamp":"android.media.MediaCodecInfo.CodecCapabilities.FEATURE_DynamicTimestamp\r\n"," if application is registered, ":" 如果申请已注册，\r\n","android.media.tv.TvRecordingClient.RecordingCallback.onTuned(android.net.Uri)":"android.media.tv.TvRecordingClient.RecordingCallback.onTuned(android.net.Uri)\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatCbYCrY":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatCbYCrY\r\n","Gets the current white balance setting. -or- Sets the white balance.":"获取当前的白平衡设置。 - 或 - 设置白平衡。\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatL32":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatL32\r\n","android.media.audiofx.AudioEffect.getId()":"android.media.audiofx.AudioEffect.getId()\r\n","android.media.MediaParser.OutputConsumer.onTrackCountFound(int)":"android.media.MediaParser.OutputConsumer.onTrackCountFound(int)\r\n","android.media.metrics.PlaybackErrorEvent.Builder":"android.media.metrics.PlaybackErrorEvent.Builder\r\n"," instance successfully initialized\n            with all the parameters set on this ":" 实例成功初始化\r\n            在此设置所有参数\r\n","android.app.Notification.CarExtender.getLargeIcon()":"android.app.Notification.CarExtender.getLargeIcon()\r\n","Override to handle changes to the ":"覆盖以处理对\r\n","Allow ":"允许\r\n","android.content.pm.PackageInstaller.SessionCallback":"android.content.pm.PackageInstaller.SessionCallback\r\n","#getSession2Tokens()":"#getSession2Tokens()\r\n","Returns the unscaled screen-relative Y coordinate of the focal\n            center of the magnified region.":"返回焦点的未缩放屏幕相对 Y 坐标\r\n            放大区域的中心。\r\n","android.provider.Settings.System.VOLUME_VOICE":"android.provider.Settings.System.VOLUME_VOICE\r\n"," used to receive updates on specific carrier identity\n            change on the given subscriptionId returned by\n            ":" 用于接收特定运营商身份的更新\r\n            更改由返回的给定 subscriptionId\r\n            \r\n","android.graphics.fonts.FontFamily.Builder":"android.graphics.fonts.FontFamily.Builder\r\n",": This process is not something the user\n            is directly aware of, but is otherwise perceptible to them to some degree.":": 这个过程不是用户的事情\r\n            直接意识到，但在某种程度上可以被他们感知到。\r\n","the non-null application's context.":"非空应用程序的上下文。\r\n","android.inputmethodservice.KeyboardView.onClick(android.view.View)":"android.inputmethodservice.KeyboardView.onClick(android.view.View)\r\n","#FILL_IN_COMPONENT":"#FILL_IN_COMPONENT\r\n","android.provider.ContactsContract.ContactsColumns.PHOTO_ID":"android.provider.ContactsContract.ContactsColumns.PHOTO_ID\r\n","android.media.audiofx.DynamicsProcessing.Config.setInputGainAllChannelsTo(float)":"android.media.audiofx.DynamicsProcessing.Config.setInputGainAllChannelsTo（浮动）\r\n","#FAIL_REASON_PROVIDER_NOT_FOUND":"#FAIL_REASON_PROVIDER_NOT_FOUND\r\n","Override to handle the playback speed change.":"覆盖以处理播放速度变化。\r\n",": the URI string\n            always has the \"android-app:\" scheme.":": URI 字符串\r\n            始终具有“android-app:”方案。\r\n"," instance with these\n            values.":" 这些实例\r\n            值。\r\n","AudioManager#getActiveRecordingConfigurations()":"音频管理器#getActiveRecordingConfigurations()\r\n","android.print.PrintAttributes.Margins.getBottomMils()":"android.print.PrintAttributes.Margins.getBottomMils()\r\n","USB Mass Storage Enabled":"启用 USB 大容量存储\r\n","Returns handler for database corruption errors":"返回数据库损坏错误的处理程序\r\n","android.media.MediaCas.Session.sendSessionEvent(int, int, byte[])":"android.media.MediaCas.Session.sendSessionEvent(int, int, byte[])\r\n","android.graphics.text.LineBreaker.ParagraphConstraints.getWidth()":"android.graphics.text.LineBreaker.ParagraphConstraints.getWidth()\r\n","The URI of the channel.":"频道的 URI。\r\n","android.media.session.MediaSession.Callback.onPlayFromUri(android.net.Uri, android.os.Bundle)":"android.media.session.MediaSession.Callback.onPlayFromUri(android.net.Uri, android.os.Bundle)\r\n","android.app.AlertDialog.Builder.create()":"android.app.AlertDialog.Builder.create()\r\n","android.provider.Settings.System.VOLUME_NOTIFICATION":"android.provider.Settings.System.VOLUME_NOTIFICATION\r\n","android.app.Instrumentation.ActivityResult.Instrumentation$ActivityResult(int, android.content.Intent)":"android.app.Instrumentation.ActivityResult.Instrumentation$ActivityResult(int, android.content.Intent)\r\n","CDMA only settings\n            DTMF tone type played by the dialer when dialing.":"仅 CDMA 设置\r\n            拨号时拨号器播放的 DTMF 音类型。\r\n","the audio session ID. ":"音频会话 ID。\r\n","android.hardware.Camera.Parameters.getMaxNumMeteringAreas()":"android.hardware.Camera.Parameters.getMaxNumMeteringAreas()\r\n","android.provider.DocumentsContract.Document.FLAG_SUPPORTS_METADATA":"android.provider.DocumentsContract.Document.FLAG_SUPPORTS_METADATA\r\n","android.media.audiofx.DynamicsProcessing.BandBase.setEnabled(boolean)":"android.media.audiofx.DynamicsProcessing.BandBase.setEnabled（布尔值）\r\n","android.provider.Settings.Global.AIRPLANE_MODE_ON":"android.provider.Settings.Global.AIRPLANE_MODE_ON\r\n","Get the maximum volume that may be set for this session.":"获取可能为此会话设置的最大音量。\r\n","android.media.tv.TvContract.Channels.TYPE_NTSC":"android.media.tv.TvContract.Channels.TYPE_NTSC\r\n","android.animation.TimeAnimator.TimeListener.onTimeUpdate(android.animation.TimeAnimator, long, long)":"android.animation.TimeAnimator.TimeListener.onTimeUpdate(android.animation.TimeAnimator, 长, 长)\r\n","android.hardware.camera2.CameraDevice.StateCallback.onClosed(android.hardware.camera2.CameraDevice)":"android.hardware.camera2.CameraDevice.StateCallback.onClosed(android.hardware.camera2.CameraDevice)\r\n","android.media.session.MediaSessionManager.OnActiveSessionsChangedListener":"android.media.session.MediaSessionManager.OnActiveSessionsChangedListener\r\n","android.app.ActivityManager.RunningServiceInfo.restarting":"android.app.ActivityManager.RunningServiceInfo.restarting\r\n","android.provider.Contacts.PeopleColumns":"android.provider.Contacts.PeopleColumns\r\n","android.provider.ContactsContract.Intents.CONTACTS_DATABASE_CREATED":"android.provider.ContactsContract.Intents.CONTACTS_DATABASE_CREATED\r\n","android.provider.Contacts.OrganizationColumns.COMPANY":"android.provider.Contacts.OrganizationColumns.COMPANY\r\n","CommonDataKinds.Im":"通用数据类型.Im\r\n","Column definitions for the \"watch next\" TV programs table.":"“接下来观看”电视节目表的列定义。\r\n","Source of the encoded image data.":"编码图像数据的来源。\r\n","android.provider.DocumentsContract.Root":"android.provider.DocumentsContract.Root\r\n","android.os.Parcelable.Creator.newArray(int)":"android.os.Parcelable.Creator.newArray(int)\r\n"," (if present) should be\n            converted to low-bit and displayed in ambient mode, especially useful for barcodes and\n            qr codes, as well as other simple black-and-white tickets.":" （如果存在）应该是\r\n            转换为低位并以环境模式显示，特别适用于条形码和\r\n            二维码，以及其他简单的黑白票。\r\n","android.provider.VoicemailContract.Status.CONFIGURATION_STATE_FAILED":"android.provider.VoicemailContract.Status.CONFIGURATION_STATE_FAILED\r\n","the recipient to send to.":"要发送到的收件人。\r\n","android.provider.CallLog.Calls.PRESENTATION_PAYPHONE":"android.provider.CallLog.Calls.PRESENTATION_PAYPHONE\r\n","android.media.midi.MidiReceiver.onFlush()":"android.media.midi.MidiReceiver.onFlush()\r\n","android.companion.CompanionDeviceManager.Callback":"android.companion.CompanionDeviceManager.Callback\r\n"," if the\n            duration is unknown.":" 如果\r\n            持续时间未知。\r\n","#MEDIA_RECORDER_INFO_MAX_DURATION_REACHED":"#MEDIA_RECORDER_INFO_MAX_DURATION_REACHED\r\n","android.media.session.PlaybackState.CustomAction.getExtras()":"android.media.session.PlaybackState.CustomAction.getExtras()\r\n","android.media.MediaRouter2.RoutingController.getSelectableRoutes()":"android.media.MediaRouter2.RoutingController.getSelectableRoutes()\r\n"," objects corresponding to the audio devices\n            currently connected to the system and meeting the criteria specified in the\n            ":" 音频设备对应的对象\r\n            当前连接到系统并满足\r\n            \r\n","N.":"N.\r\n","android.media.MediaPlayer.MetricsConstants.DURATION":"android.media.MediaPlayer.MetricsConstants.DURATION\r\n","Offset into ":"抵消成\r\n","android.app.NotificationManager.Policy.NotificationManager$Policy(int, int, int)":"android.app.NotificationManager.Policy.NotificationManager$Policy(int, int, int)\r\n","Immutable class to store available mandatory stream information.":"用于存储可用的强制流信息的不可变类。\r\n","android.net.VpnService.Builder.establish()":"android.net.VpnService.Builder.establish()\r\n","The name of the package that has changed.":"已更改的包的名称。\r\n","Creates a new Builder with all parameters copied from the given location request.":"使用从给定位置请求复制的所有参数创建一个新的构建器。\r\n",", set as the default value when a call was\n            not blocked by a CallScreeningService or any other system call blocking method.":", 调用时设置为默认值\r\n            未被 CallScreeningService 或任何其他系统调用阻止方法阻止。\r\n"," describing how the session\n                       should interact with an existing app.":" 描述会话如何\r\n                       应该与现有应用程序交互。\r\n","Gets the left margin in mils (thousandths of an inch).":"获取以密耳（千分之一英寸）为单位的左边距。\r\n","android.media.JetPlayer.OnJetEventListener.onJetNumQueuedSegmentUpdate(android.media.JetPlayer, int)":"android.media.JetPlayer.OnJetEventListener.onJetNumQueuedSegmentUpdate(android.media.JetPlayer, int)\r\n","Returns the payload contained in this log entry or ":"返回此日志条目中包含的有效负载或\r\n","The end point (exclusive)":"终点（不包括）\r\n","Flag indicating that the created PendingIntent should be mutable.":"指示创建的 PendingIntent 应该是可变的标志。\r\n","android.graphics.ColorSpace.Rgb.getPrimaries(float[])":"android.graphics.ColorSpace.Rgb.getPrimaries(float[])\r\n","Setting to always use the default text-to-speech settings regardless\n            of the application settings.":"设置为始终使用默认的文本到语音设置，无论\r\n            的应用程序设置。\r\n","Opens a file descriptor to write a blob into the session.":"打开文件描述符以将 blob 写入会话。\r\n","android.provider.Telephony.MmsSms.CONTENT_URI":"android.provider.Telephony.MmsSms.CONTENT_URI\r\n","android.media.AudioRecord.Builder.AudioRecord$Builder()":"android.media.AudioRecord.Builder.AudioRecord$Builder()\r\n","the newly connected sensor. See ":"新连接的传感器。看\r\n","the type of audio focus gain that will be requested":"将请求的音频聚焦增益类型\r\n","android.hardware.display.DisplayManager.DisplayListener.onDisplayRemoved(int)":"android.hardware.display.DisplayManager.DisplayListener.onDisplayRemoved(int)\r\n","The video format for 4320p.":"视频格式为4320p。\r\n","android.provider.Settings.Global.HTTP_PROXY":"android.provider.Settings.Global.HTTP_PROXY\r\n","The id of the logical display that changed.":"已更改的逻辑显示的 ID。\r\n","android.provider.Settings.System.SCREEN_OFF_TIMEOUT":"android.provider.Settings.System.SCREEN_OFF_TIMEOUT\r\n","android.provider.Telephony.Mms.CONTENT_URI":"android.provider.Telephony.Mms.CONTENT_URI\r\n","The user-visible security patch level.":"用户可见的安全补丁级别。\r\n","internalformat":"内部格式\r\n",": set if the service is running in a\n            persistent process.":": 设置服务是否运行在\r\n            持久的过程。\r\n","android.provider.ContactsContract.DataUsageFeedback.USAGE_TYPE_SHORT_TEXT":"android.provider.ContactsContract.DataUsageFeedback.USAGE_TYPE_SHORT_TEXT\r\n","the identifier of a the metadata field to set. Valid values are\n                 ":"要设置的元数据字段的标识符。有效值为\r\n                 \r\n","android.accessibilityservice.AccessibilityService.SoftKeyboardController":"android.accessibilityservice.AccessibilityService.SoftKeyboardController\r\n","android.inputmethodservice.Keyboard.Row.defaultWidth":"android.inputmethodservice.Keyboard.Row.defaultWidth\r\n","android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_GONE":"android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_GONE\r\n","android.hardware.lights.LightsManager.LightsSession":"android.hardware.lights.LightsManager.LightsSession\r\n","Interface for receiving update notifications about the recording configuration.":"用于接收有关录制配置的更新通知的接口。\r\n","android.provider.Settings.Global.AIRPLANE_MODE_RADIOS":"android.provider.Settings.Global.AIRPLANE_MODE_RADIOS\r\n","The id of the input device that was removed.":"被删除的输入设备的 ID。\r\n","android.media.AudioTrack.Builder":"android.media.AudioTrack.Builder\r\n","android.provider.ContactsContract.SettingsColumns.ACCOUNT_NAME":"android.provider.ContactsContract.SettingsColumns.ACCOUNT_NAME\r\n","Returns the results of text classification run on the raw text contained in this item,\n            if it was performed, and if any entities were found in the text.":"返回对此项中包含的原始文本运行的文本分类结果，\r\n            它是否被执行，以及是否在文本中发现任何实体。\r\n","android.provider.Browser.TRUNCATE_HISTORY_PROJECTION_ID_INDEX":"android.provider.Browser.TRUNCATE_HISTORY_PROJECTION_ID_INDEX\r\n","android.media.MediaCasException.DeniedByServerException":"android.media.MediaCasException.DeniedByServerException\r\n","android.os.StrictMode.OnThreadViolationListener":"android.os.StrictMode.OnThreadViolationListener\r\n","android.media.MediaCodecInfo.VideoCapabilities.isSizeSupported(int, int)":"android.media.MediaCodecInfo.VideoCapabilities.isSizeSupported(int, int)\r\n","TimeAnimator":"时间动画师\r\n","android.app.VoiceInteractor.Request":"android.app.VoiceInteractor.请求\r\n"," that will be used to build the prompt.":" 将用于构建提示。\r\n","The content:// style URL for querying an instance range by Julian\n            Day.":"Julian 查询实例范围的 content:// 样式 URL\r\n            天。\r\n","The video format for 480i.":"视频格式为 480i。\r\n","android.provider.Contacts.Intents":"android.provider.Contacts.Intents\r\n","Returns width of a given line in pixels.":"返回给定线的宽度（以像素为单位）。\r\n","The description of the media, which must include a\n                       media id.":"媒体的描述，其中必须包括\r\n                       媒体编号。\r\n","android.hardware.Camera.Parameters.SCENE_MODE_LANDSCAPE":"android.hardware.Camera.Parameters.SCENE_MODE_LANDSCAPE\r\n","android.media.MediaCodecInfo.EncoderCapabilities.isBitrateModeSupported(int)":"android.media.MediaCodecInfo.EncoderCapabilities.isBitrateModeSupported(int)\r\n","Duration in microseconds over which the process used the above\n            percentage of battery.":"过程使用上述内容的持续时间（以微秒为单位）\r\n            电池的百分比。\r\n","android.net.sip.SipSession.Listener.onRegistrationDone(android.net.sip.SipSession, int)":"android.net.sip.SipSession.Listener.onRegistrationDone(android.net.sip.SipSession, int)\r\n","Called when routes are added.":"添加路由时调用。\r\n","android.provider.ContactsContract.StreamItemsColumns.RAW_CONTACT_SOURCE_ID":"android.provider.ContactsContract.StreamItemsColumns.RAW_CONTACT_SOURCE_ID\r\n","a notification to make session service run in the foreground. Media\n                   style notification is recommended here.":"使会话服务在前台运行的通知。媒体\r\n                   这里推荐样式通知。\r\n","android.provider.CalendarContract.CalendarAlertsColumns.EVENT_ID":"android.provider.CalendarContract.CalendarAlertsColumns.EVENT_ID\r\n","android.app.VoiceInteractor.Request.getContext()":"android.app.VoiceInteractor.Request.getContext()\r\n","Key to extract the codec being used to decode the audio track\n            from the ":"提取用于解码音轨的编解码器的键\r\n            来自\r\n","Constant bitrate mode with frame drops":"帧丢失的恒定比特率模式\r\n","android.media.SoundPool.Builder":"android.media.SoundPool.Builder\r\n","android.provider.Settings.Global.AUTO_TIME":"android.provider.Settings.Global.AUTO_TIME\r\n","whether this bubble should be suppressed when the same content is visible\n            outside of the bubble.":"当相同的内容可见时是否应抑制此气泡\r\n            泡泡之外。\r\n","android.bluetooth.BluetoothHidDevice.Callback.onAppStatusChanged(android.bluetooth.BluetoothDevice, boolean)":"android.bluetooth.BluetoothHidDevice.Callback.onAppStatusChanged（android.bluetooth.BluetoothDevice，布尔值）\r\n","dataSync":"数据同步\r\n","android.inputmethodservice.InputMethodService.Insets":"android.inputmethodservice.InputMethodService.Insets\r\n","android.provider.Settings.Secure.WIFI_ON":"android.provider.Settings.Secure.WIFI_ON\r\n","Thrown when a DRM method is called before preparing a DRM scheme through prepareDrm().":"在通过 prepareDrm() 准备 DRM 方案之前调用 DRM 方法时抛出。\r\n","android.content.pm.ActivityInfo.WindowLayout.width":"android.content.pm.ActivityInfo.WindowLayout.width\r\n"," with the complete state as it exists now.":" 具有现在存在的完整状态。\r\n","Called to indicate an info or a warning during recording.":"在录制期间调用以指示信息或警告。\r\n","android.media.tv.TvView.TvInputCallback.onDisconnected(java.lang.String)":"android.media.tv.TvView.TvInputCallback.onDisconnected(java.lang.String)\r\n","android.provider.ContactsContract.DataColumns.IS_PRIMARY":"android.provider.ContactsContract.DataColumns.IS_PRIMARY\r\n","android.net.LocalSocket.getPeerCredentials()":"android.net.LocalSocket.getPeerCredentials()\r\n"," to indicate that a call was blocked because the user\n            has chosen to block all calls from numbers not in their contacts.":" 表示呼叫被阻止，因为用户\r\n            已选择阻止来自不在其联系人中的号码的所有呼叫。\r\n","android.provider.Contacts.PeopleColumns.LAST_TIME_CONTACTED":"android.provider.Contacts.PeopleColumns.LAST_TIME_CONTACTED\r\n"," and\n                          ":" 和\r\n                          \r\n","Allow any app on the device to access this blob data once it is committed using\n            a ":"使用提交后，允许设备上的任何应用访问此 blob 数据\r\n            A\r\n","Defines at what volume the playback associated with this route is performed (for user\n            feedback purposes).":"定义与此路由关联的播放以什么音量执行（对于用户\r\n            反馈目的）。\r\n","android.provider.CalendarContract.CalendarAlertsColumns.DEFAULT_SORT_ORDER":"android.provider.CalendarContract.CalendarAlertsColumns.DEFAULT_SORT_ORDER\r\n","A 16-byte key id":"一个 16 字节的密钥 ID\r\n","android.app.DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION":"android.app.DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION\r\n","number of bands configured for the PreEq stage.":"为 PreEq 阶段配置的频段数。\r\n","#PARAM_BAND_LEVEL":"#PARAM_BAND_LEVEL\r\n","Called to notify when a new MIDI device has been added":"添加新的 MIDI 设备时调用以通知\r\n","android.location.GnssMeasurementRequest.Builder.GnssMeasurementRequest$Builder(android.location.GnssMeasurementRequest)":"android.location.GnssMeasurementRequest.Builder.GnssMeasurementRequest$Builder(android.location.GnssMeasurementRequest)\r\n","android.hardware.camera2.CaptureRequest.Builder":"android.hardware.camera2.CaptureRequest.Builder\r\n","android.media.MediaCodecInfo.AudioCapabilities.getMaxInputChannelCount()":"android.media.MediaCodecInfo.AudioCapabilities.getMaxInputChannelCount()\r\n","the row ID of the newly inserted row, or -1 if an\n            error occurred":"新插入行的行 ID，如果是 -1\r\n            发生了错误\r\n"," bits of this structure.":" 这种结构的位。\r\n","android.media.audiofx.EnvironmentalReverb.getRoomHFLevel()":"android.media.audiofx.EnvironmentalReverb.getRoomHFLevel()\r\n","Class constructor for Limiter Stage":"Limiter Stage 的类构造器\r\n","android.app.UiAutomation.OnAccessibilityEventListener":"android.app.UiAutomation.OnAccessibilityEventListener\r\n"," is non-null, this is the main text size (in pixels) associated\n            with it.":" 非空，这是关联的主要文本大小（以像素为单位）\r\n            用它。\r\n","android.provider.CalendarContract.CalendarColumns.CALENDAR_COLOR_KEY":"android.provider.CalendarContract.CalendarColumns.CALENDAR_COLOR_KEY\r\n","android.media.MediaPlayer.MetricsConstants.CODEC_VIDEO":"android.media.MediaPlayer.MetricsConstants.CODEC_VIDEO\r\n","android.provider.Telephony.Threads.getOrCreateThreadId(android.content.Context, java.lang.String)":"android.provider.Telephony.Threads.getOrCreateThreadId(android.content.Context, java.lang.String)\r\n","android.provider.Settings.System.WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT":"android.provider.Settings.System.WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT\r\n","android.location.GnssAntennaInfo.PhaseCenterOffset.getZOffsetUncertaintyMm()":"android.location.GnssAntennaInfo.PhaseCenterOffset.getZOffsetUncertaintyMm()\r\n","android.app.NotificationManager.Policy":"android.app.NotificationManager.Policy\r\n","android.content.ClipData.Item.getText()":"android.content.ClipData.Item.getText()\r\n","android.media.MediaPlayer.MetricsConstants.WIDTH":"android.media.MediaPlayer.MetricsConstants.WIDTH\r\n","android.provider.ContactsContract.DeletedContacts.CONTENT_URI":"android.provider.ContactsContract.DeletedContacts.CONTENT_URI\r\n","Return the package name of the app that owns this session.":"返回拥有此会话的应用程序的包名称。\r\n","nameX":"名字X\r\n","android.app.ActivityManager.ProcessErrorStateInfo.pid":"android.app.ActivityManager.ProcessErrorStateInfo.pid\r\n","android.graphics.fonts.Font.Builder":"android.graphics.fonts.Font.Builder\r\n","android.provider.Telephony.Carriers.AUTH_TYPE":"android.provider.Telephony.Carriers.AUTH_TYPE\r\n","Sets the playback speed.":"设置播放速度。\r\n","android.provider.Settings.Global.DATA_ROAMING":"android.provider.Settings.Global.DATA_ROAMING\r\n","android.provider.ContactsContract.StreamItemsColumns.RES_ICON":"android.provider.ContactsContract.StreamItemsColumns.RES_ICON\r\n","This method is called when the offline session is closed.":"当离线会话关闭时调用此方法。\r\n","Query arguments supported by this root.":"此根支持的查询参数。\r\n","the decay time in milliseconds.":"以毫秒为单位的衰减时间。\r\n","Called when the application requests to tune to a given channel for TV program recording.":"当应用程序请求调谐到给定频道以录制电视节目时调用。\r\n","android.provider.Browser.BookmarkColumns.VISITS":"android.provider.Browser.BookmarkColumns.VISITS\r\n","android.bluetooth.le.PeriodicAdvertisingParameters.Builder.build()":"android.bluetooth.le.PeriodicAdvertisingParameters.Builder.build()\r\n","android.provider.CallLog.Calls.USER_MISSED_NO_VIBRATE":"android.provider.CallLog.Calls.USER_MISSED_NO_VIBRATE\r\n","android.media.MediaRouter2.RouteCallback.onRoutesAdded(java.util.List<android.media.MediaRoute2Info>)":"android.media.MediaRouter2.RouteCallback.onRoutesAdded(java.util.List<android.media.MediaRoute2Info>)\r\n","This method is called independently of the others in CaptureCallback,\n            when a capture sequence finishes and all ":"此方法在 CaptureCallback 中独立于其他方法调用，\r\n            当捕获序列完成并且所有\r\n","android.media.tv.TvContract.Channels.getVideoResolution(java.lang.String)":"android.media.tv.TvContract.Channels.getVideoResolution(java.lang.String)\r\n","Session has completely finished, either with success or failure.":"会话已完全结束，无论是成功还是失败。\r\n","Return whether the platform should automatically generate possible replies for this\n            ":"返回平台是否应为此自动生成可能的回复\r\n            \r\n","android.provider.Telephony.Carriers.MMSPROXY":"android.provider.Telephony.Carriers.MMSPROXY\r\n","android.app.ActivityManager.RunningAppProcessInfo.importanceReasonPid":"android.app.ActivityManager.RunningAppProcessInfo.importanceReasonPid\r\n","Report from voice interaction service: this operation has been canceled, typically\n            as a completion of a previous call to ":"来自语音交互服务的报告：此操作已被取消，通常\r\n            作为先前调用的完成\r\n","Sets the soft keyboard show mode.":"设置软键盘显示模式。\r\n","Retrieve the reason that decoding was interrupted.":"检索解码中断的原因。\r\n","android.provider.ContactsContract.ContactsColumns.DISPLAY_NAME":"android.provider.ContactsContract.ContactsColumns.DISPLAY_NAME\r\n","android.provider.ContactsContract.GroupsColumns.TITLE":"android.provider.ContactsContract.GroupsColumns.TITLE\r\n","The last UTC time that the user engaged in this TV program, in milliseconds since the\n            epoch.":"用户参与此电视节目的最后一次 UTC 时间，以毫秒为单位\r\n            时代。\r\n","width of the picture":"图片的宽度\r\n","getActivity().getResources()":"getActivity().getResources()\r\n","Mac":"苹果\r\n","android.graphics.Typeface.Builder.Typeface$Builder(java.lang.String)":"android.graphics.Typeface.Builder.Typeface$Builder(java.lang.String)\r\n","Application#unregisterOnProvideAssistDataListener":"应用#unregisterOnProvideAssistDataListener\r\n","android.content.pm.PackageInstaller.SessionInfo.getAppPackageName()":"android.content.pm.PackageInstaller.SessionInfo.getAppPackageName()\r\n"," for the\n            request.":" 为了\r\n            要求。\r\n",", this\n            is the process ID of the other process that is a client of this\n            process.":"， 这\r\n            是作为此客户端的另一个进程的进程 ID\r\n            过程。\r\n","android.provider.ContactsContract.Profile":"android.provider.ContactsContract.Profile\r\n","android.content.SharedPreferences.OnSharedPreferenceChangeListener":"android.content.SharedPreferences.OnSharedPreferenceChangeListener\r\n","Builder for GnssCapabilities.":"GnssCapabilities 的生成器。\r\n","android.provider.Contacts.SettingsColumns._SYNC_ACCOUNT":"android.provider.Contacts.SettingsColumns._SYNC_ACCOUNT\r\n","diffusion specified using a permille scale. The diffusion valid range is\n            [0, 1000]. A value of 1000 o/oo indicates a smooth reverberation decay.\n            Values below this level give a more ":"使用千分率标度指定的扩散。扩散有效范围为\r\n            [0, 1000]。值 1000 o/oo 表示混响衰减平滑。\r\n            低于此水平的值会提供更多\r\n","android.hardware.display.VirtualDisplay.Callback":"android.hardware.display.VirtualDisplay.Callback\r\n","android.media.MediaCodecInfo.CodecCapabilities.FEATURE_QpBounds":"android.media.MediaCodecInfo.CodecCapabilities.FEATURE_QpBounds\r\n","android.os.StrictMode.VmPolicy":"android.os.StrictMode.VmPolicy\r\n","Finish building a queue request and queue the buffers with tunings.":"完成构建队列请求并使用调整对缓冲区进行排队。\r\n","This mode no longer has any distinct meaning, but is interpreted as the location mode is\n            on.":"该模式不再具有任何明确的含义，而是被解释为位置模式是\r\n            在。\r\n","android.provider.CalendarContract.EventsColumns.SYNC_DATA2":"android.provider.CalendarContract.EventsColumns.SYNC_DATA2\r\n","android.media.tv.TvContract.Channels.COLUMN_VIDEO_RESOLUTION":"android.media.tv.TvContract.Channels.COLUMN_VIDEO_RESOLUTION\r\n","android.content.BroadcastReceiver.PendingResult.clearAbortBroadcast()":"android.content.BroadcastReceiver.PendingResult.clearAbortBroadcast()\r\n","android.app.Instrumentation.ActivityResult":"android.app.Instrumentation.ActivityResult\r\n","android.companion.CompanionDeviceManager.Callback.onDeviceFound(android.content.IntentSender)":"android.companion.CompanionDeviceManager.Callback.onDeviceFound(android.content.IntentSender)\r\n"," enforcing that all\n            required properties have been specified.":" 强制执行所有\r\n            已指定所需的属性。\r\n","Height of activity in pixels.":"以像素为单位的活动高度。\r\n","Class for Multi-Band compressor bands\n            MBC bands have multiple controllable parameters: enabled/disabled, cutoffFrequency,\n            attackTime, releaseTime, ratio, threshold, kneeWidth, noiseGateThreshold, expanderRatio,\n            preGain and postGain.":"多频段压缩器频段类\r\n            MBC 频段有多个可控参数：enabled/disabled、cutoffFrequency、\r\n            attackTime, releaseTime, ratio, threshold, kneeWidth, noiseGateThreshold, expanderRatio,\r\n            前增益和后增益。\r\n","The URI to observe.  Must be non-null.":"要观察的 URI。必须是非空的。\r\n","the number of bytes required by the encoded name or\n            ":"编码名称所需的字节数或\r\n            \r\n","The Uri for querying color information":"查询颜色信息的Uri\r\n","Interface definition for a callback to be invoked when the media\n            source is ready for playback.":"媒体播放时调用回调的接口定义\r\n            源已准备好播放。\r\n","reflection level in millibels. The valid range is [-9000, 1000].":"以毫贝为单位的反射水平。有效范围是 [-9000, 1000]。\r\n","If this is a sticky key, is it on?":"如果这是一个粘滞键，它是打开的吗？\r\n","desired value in decibels (dB)":"以分贝 (dB) 为单位的期望值\r\n","android.hardware.Camera.Parameters.getSupportedPreviewFrameRates()":"android.hardware.Camera.Parameters.getSupportedPreviewFrameRates()\r\n","android.provider.CallLog.Calls.CACHED_PHOTO_ID":"android.provider.CallLog.Calls.CACHED_PHOTO_ID\r\n","Dequeue the next pending ":"出队下一个未决\r\n","Return current overall progress of this session, between 0 and 1.":"返回当前会话的整体进度，介于 0 和 1 之间。\r\n","An open, read/write ParcelFileDescriptor pointing to an\n                       empty file. The application should record the final backup\n                       state here after restoring its data from the ":"一个打开的、读/写的 ParcelFileDescriptor 指向一个\r\n                       空的文件。应用程序应记录最终备份\r\n                       从恢复其数据后在此处说明\r\n","The maximum number of records supported by the elementary file.":"基本文件支持的最大记录数。\r\n","android.database.AbstractCursor.SelfContentObserver":"android.database.AbstractCursor.SelfContentObserver\r\n","android.provider.CalendarContract.CalendarColumns":"android.provider.CalendarContract.CalendarColumns\r\n","This is called when the recording session has been tuned to the given channel and is\n            ready to start recording.":"当录制会话已调谐到给定频道并且是\r\n            准备开始录音。\r\n","android.media.tv.TvInputManager.TvInputCallback.onInputStateChanged(java.lang.String, int)":"android.media.tv.TvInputManager.TvInputCallback.onInputStateChanged(java.lang.String, int)\r\n","The buffer into which the read data should be stored.":"应存储读取数据的缓冲区。\r\n","the frame number for this capture":"此捕获的帧编号\r\n","android.app.Notification.Builder#build()":"android.app.Notification.Builder#build()\r\n","Constants for interfacing with the ServiceStateProvider and the different fields of the\n            ":"与 ServiceStateProvider 和 ServiceStateProvider 的不同字段接口的常量\r\n            \r\n","Close the session.":"关闭会话。\r\n","#MEDIA_INFO_VIDEO_RENDERING_START":"#MEDIA_INFO_VIDEO_RENDERING_START\r\n","The event from the session.":"来自会话的事件。\r\n","MediaParser":"媒体解析器\r\n"," if the track selection was successful, ":" 如果曲目选择成功，\r\n","Whether ADB over USB is enabled.":"是否启用 ADB over USB。\r\n","the metering areas":"计量区\r\n","Connection state as defined in ":"中定义的连接状态\r\n","Structure to encapsulate a named action that can be shown as part of this notification.":"用于封装可作为此通知的一部分显示的命名操作的结构。\r\n"," if the sensor supports sensor additional information API":" 传感器是否支持传感器附加信息API\r\n","This table stores phone numbers and a reference to the person that the\n            contact method belongs to.":"此表存储电话号码和对联系人的引用\r\n            联系方式属于。\r\n","android.app.appsearch.ReportSystemUsageRequest.Builder.ReportSystemUsageRequest$Builder(java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"android.app.appsearch.ReportSystemUsageRequest.Builder.ReportSystemUsageRequest$Builder(java.lang.String, java.lang.String, java.lang.String, java.lang.String)\r\n","android.os.Environment.getExternalStorageDirectory()":"android.os.Environment.getExternalStorageDirectory()\r\n","Called on the thread that created the Loader when the load is canceled.":"取消加载时在创建加载程序的线程上调用。\r\n","pages":"页数\r\n","Helper class to add Android Auto extensions to notifications.":"用于向通知添加 Android Auto 扩展的帮助程序类。\r\n","android.provider.Settings.Panel.ACTION_WIFI":"android.provider.Settings.Panel.ACTION_WIFI\r\n","android.graphics.ImageDecoder.ImageInfo.getMimeType()":"android.graphics.ImageDecoder.ImageInfo.getMimeType()\r\n","android.media.tv.TvTrackInfo.Builder.TvTrackInfo$Builder(int, java.lang.String)":"android.media.tv.TvTrackInfo.Builder.TvTrackInfo$Builder(int, java.lang.String)\r\n","This method is called when camera device's input capture queue becomes empty,\n            and is ready to accept the next request.":"当相机设备的输入捕获队列变空时调用此方法，\r\n            并准备好接受下一个请求。\r\n","MMS protocol type.":"彩信协议类型。\r\n","the list of document ID from the parent document at\n                     position 0 to the child document.":"来自父文档的文档 ID 列表\r\n                     位置 0 到子文档。\r\n","android.net.IpSecManager.SpiUnavailableException.getSpi()":"android.net.IpSecManager.SpiUnavailableException.getSpi()\r\n","Flag indicating that a document is deletable.":"指示文档可删除的标志。\r\n","current flash mode. null if flash mode setting is not\n                    supported.":"当前闪光灯模式。如果闪光灯模式设置不是 null\r\n                    支持的。\r\n"," value for the key, or the supplied default value if the key is\n                not present":" 键的值，或者如果键是提供的默认值\r\n                不存在\r\n","A builder class for creating new Font.":"用于创建新字体的构建器类。\r\n","android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentStarted(android.app.FragmentManager, android.app.Fragment)":"android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentStarted(android.app.FragmentManager, android.app.Fragment)\r\n","A single color plane of image data.":"图像数据的单色平面。\r\n","android.app.assist.AssistStructure.WindowNode.getHeight()":"android.app.assist.AssistStructure.WindowNode.getHeight()\r\n",".</li>\n                </ul>":".</li>\r\n                </ul>\r\n","\n            calls from the ":"\r\n            来自\r\n",": Mark content with a thumbs down.":"：用大拇指朝下标记内容。\r\n","android.provider.ContactsContract.StatusColumns.INVISIBLE":"android.provider.ContactsContract.StatusColumns.INVISIBLE\r\n","android.net.sip.SipProfile.Builder.build()":"android.net.sip.SipProfile.Builder.build()\r\n","android.media.MediaDrm.ErrorCodes.ERROR_PROVISIONING_PARSE":"android.media.MediaDrm.ErrorCodes.ERROR_PROVISIONING_PARSE\r\n","Implementors of this interface can add themselves as update listeners\n            to an ":"此接口的实现者可以将自己添加为更新侦听器\r\n            到一个\r\n","needDepth":"需要深度\r\n","android.media.MediaDrm.KeyRequest.REQUEST_TYPE_RELEASE":"android.media.MediaDrm.KeyRequest.REQUEST_TYPE_RELEASE\r\n","Returns the 1-sigma uncertainty of the z-axis offset of the phase center from the origin\n            of the Android sensor coordinate system, in millimeters.":"返回相位中心相对于原点的 z 轴偏移量的 1-sigma 不确定性\r\n            Android 传感器坐标系的坐标系，以毫米为单位。\r\n","Contains all MMS messages.":"包含所有彩信。\r\n","android.app.appsearch.SetSchemaResponse.MigrationFailure.SetSchemaResponse$MigrationFailure(java.lang.String, java.lang.String, java.lang.String, android.app.appsearch.AppSearchResult<?>)":"android.app.appsearch.SetSchemaResponse.MigrationFailure.SetSchemaResponse$MigrationFailure(java.lang.String, java.lang.String, java.lang.String, android.app.appsearch.AppSearchResult<?>)\r\n","Contains information about an input or output port.":"包含有关输入或输出端口的信息。\r\n","android.media.tv.TvContract.Channels.COLUMN_REMOTE_CONTROL_KEY_PRESET_NUMBER":"android.media.tv.TvContract.Channels.COLUMN_REMOTE_CONTROL_KEY_PRESET_NUMBER\r\n","android.hardware.Camera.Face.rect":"android.hardware.Camera.Face.rect\r\n","#putObject(int, Object)":"#putObject（整数，对象）\r\n","an integer whose meaning is scheme-specific.":"一个整数，其含义是特定于方案的。\r\n"," with a particular signing certificate to access this blob\n            data once it is committed using a ":" 使用特定的签名证书访问此 blob\r\n            数据一旦使用\r\n","an immutable VcnConfig instance":"一个不可变的 VcnConfig 实例\r\n","android.provider.CalendarContract.Instances.query(android.content.ContentResolver, java.lang.String[], long, long, java.lang.String)":"android.provider.CalendarContract.Instances.query(android.content.ContentResolver, java.lang.String[], long, long, java.lang.String)\r\n","android.inputmethodservice.Keyboard.Key.modifier":"android.inputmethodservice.Keyboard.Key.modifier\r\n","android.provider.Settings.Secure.ALLOWED_GEOLOCATION_ORIGINS":"android.provider.Settings.Secure.ALLOWED_GEOLOCATION_ORIGINS\r\n","android.media.MediaMetadataEditor.getString(int, java.lang.String)":"android.media.MediaMetadataEditor.getString(int, java.lang.String)\r\n","delivery-report":"送货报告\r\n","#setStream(InputStream, Rect, boolean)":"#setStream（输入流，矩形，布尔值）\r\n","The default sort order for this alerts queries":"此警报查询的默认排序顺序\r\n","Called as the last step of the Activity being started.":"作为正在启动的 Activity 的最后一步调用。\r\n","android.media.tv.TvContract.Channels.TYPE_DVB_SH":"android.media.tv.TvContract.Channels.TYPE_DVB_SH\r\n","android.net.sip.SipAudioCall.Listener.onError(android.net.sip.SipAudioCall, int, java.lang.String)":"android.net.sip.SipAudioCall.Listener.onError(android.net.sip.SipAudioCall, int, java.lang.String)\r\n","Update the buffer metadata information.":"更新缓冲区元数据信息。\r\n","android.media.RemoteController.MetadataEditor":"android.media.RemoteController.MetadataEditor\r\n","android.animation.Animator.AnimatorPauseListener.onAnimationResume(android.animation.Animator)":"android.animation.Animator.AnimatorPauseListener.onAnimationResume(android.animation.Animator)\r\n","android.provider.CalendarContract.EventsColumns.DTSTART":"android.provider.CalendarContract.EventsColumns.DTSTART\r\n"," broadcasts when this AppWidget\n            provider is being asked to provide ":" 当这个 AppWidget 广播\r\n            供应商被要求提供\r\n"," array of DRM plug-in descriptions.":" DRM 插件描述数组。\r\n","a byte array containing the private data. A null return value\n                    indicates that the private data is unavailable. An empty array,\n                    on the other hand, indicates that the private data is empty\n                    (zero in length).":"包含私有数据的字节数组。空返回值\r\n                    表示私有数据不可用。一个空数组，\r\n                    另一方面，表示私有数据为空\r\n                    （长度为零）。\r\n","Creates a builder for an alert dialog that uses an explicit theme\n            resource.":"为使用显式主题的警报对话框创建构建器\r\n            资源。\r\n","Position to move to, in milliseconds.":"要移动到的位置，以毫秒为单位。\r\n","A generic service type.":"通用服务类型。\r\n","android.provider.DocumentsContract.Document.COLUMN_MIME_TYPE":"android.provider.DocumentsContract.Document.COLUMN_MIME_TYPE\r\n","android.media.MediaCas.Session.getSessionId()":"android.media.MediaCas.Session.getSessionId()\r\n","Key to extract the recorded video time units\n            from the ":"提取录制视频时间单位的关键\r\n            来自\r\n","android.hardware.Camera.Face.mouth":"android.hardware.Camera.Face.mouth\r\n","Pre-allocate all buffers for an output Surface.":"为输出表面预分配所有缓冲区。\r\n","android.provider.Telephony.TextBasedSmsColumns.PERSON":"android.provider.Telephony.TextBasedSmsColumns.PERSON\r\n","Returns a prompt to use for voice interactions.":"返回用于语音交互的提示。\r\n","The duration of the call in seconds":"通话时长（以秒为单位）\r\n","Called on the listener to notify it that the effect engine has been\n            enabled or disabled.":"调用侦听器通知它效果引擎已经\r\n            启用或禁用。\r\n","android.content.ContextParams.Builder.ContextParams$Builder()":"android.content.ContextParams.Builder.ContextParams$Builder()\r\n","Returns the range of supported frame rates.":"返回支持的帧率范围。\r\n","This URI is for grouping the query results by event_id and begin\n            time.":"此 URI 用于按 event_id 和 begin 对查询结果进行分组\r\n            时间。\r\n","The bottom margin in mils (thousandths of an inch).":"以密耳（千分之一英寸）为单位的底部边距。\r\n","android.net.sip.SipSession.Listener.onError(android.net.sip.SipSession, int, java.lang.String)":"android.net.sip.SipSession.Listener.onError(android.net.sip.SipSession, int, java.lang.String)\r\n","android.print.PrintAttributes.Resolution.getHorizontalDpi()":"android.print.PrintAttributes.Resolution.getHorizo​​ntalDpi()\r\n","android.provider.ContactsContract.Directory.CONTENT_URI":"android.provider.ContactsContract.Directory.CONTENT_URI\r\n","android.media.RemoteController.OnClientUpdateListener.onClientPlaybackStateUpdate(int)":"android.media.RemoteController.OnClientUpdateListener.onClientPlaybackStateUpdate(int)\r\n","android.media.tv.TvView.TvInputCallback.onVideoUnavailable(java.lang.String, int)":"android.media.tv.TvView.TvInputCallback.onVideoUnavailable(java.lang.String, int)\r\n","android.hardware.camera2.CameraManager.AvailabilityCallback.onPhysicalCameraAvailable(java.lang.String, java.lang.String)":"android.hardware.camera2.CameraManager.AvailabilityCallback.onPhysicalCameraAvailable(java.lang.String, java.lang.String)\r\n","\n                bytes of file data.":"\r\n                字节的文件数据。\r\n","Used if the name is written in Hanzi/Kanji/Hanja and we could not determine\n            which specific language it belongs to: Chinese, Japanese or Korean.":"如果名称是用汉字/汉字/汉字书写的，我们无法确定时使用\r\n            它属于哪种特定语言：中文、日文或韩文。\r\n","#onConfigured":"#onConfigured\r\n","Amount of resource that is used by existing voicemail in the visual voicemail inbox,\n            or ":"可视语音邮件收件箱中现有语音邮件使用的资源量，\r\n            或者\r\n","android.os.Build.VERSION.BASE_OS":"android.os.Build.VERSION.BASE_OS\r\n","android.app.ActivityManager.RunningAppProcessInfo.uid":"android.app.ActivityManager.RunningAppProcessInfo.uid\r\n","the reverb level in millibels.":"以毫贝为单位的混响级别。\r\n","Indicates that one or more shortcuts of any kind (dynamic, pinned, or manifest)\n            have been added, updated or removed.":"表示一个或多个任何类型的快捷方式（动态、固定或清单）\r\n            已添加、更新或删除。\r\n","android.provider.Telephony.BaseMmsColumns.RETRIEVE_TEXT_CHARSET":"android.provider.Telephony.BaseMmsColumns.RETRIEVE_TEXT_CHARSET\r\n","android.provider.SyncStateContract.Columns.ACCOUNT_TYPE":"android.provider.SyncStateContract.Columns.ACCOUNT_TYPE\r\n","It supports the similar semantics as ":"它支持与以下类似的语义\r\n","android.media.session.MediaSession.QueueItem.MediaSession$QueueItem(android.media.MediaDescription, long)":"android.media.session.MediaSession.QueueItem.MediaSession$QueueItem(android.media.MediaDescription, 长)\r\n","android.graphics.BitmapFactory.Options.inPurgeable":"android.graphics.BitmapFactory.Options.inPurgeable\r\n","Called by the receiving launcher app when the user accepts the request, with no options.":"当用户接受请求时由接收启动器应用程序调用，没有任何选项。\r\n","Used for receiving GNSS antenna info from the GNSS engine.":"用于从 GNSS 引擎接收 GNSS 天线信息。\r\n","Returns the intersection of the data source and the device DRM schemes.":"返回数据源和设备 DRM 方案的交集。\r\n","android.provider.Settings.Secure.PARENTAL_CONTROL_LAST_UPDATE":"android.provider.Settings.Secure.PARENTAL_CONTROL_LAST_UPDATE\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityPreStopped(android.app.Activity)":"android.app.Application.ActivityLifecycleCallbacks.onActivityPreStopped(android.app.Activity)\r\n","android.preference.Preference.OnPreferenceChangeListener.onPreferenceChange(android.preference.Preference, java.lang.Object)":"android.preference.Preference.OnPreferenceChangeListener.onPreferenceChange(android.preference.Preference, java.lang.Object)\r\n","android.graphics.text.LineBreaker.Result":"android.graphics.text.LineBreaker.Result\r\n","android.provider.Settings.System.WIFI_USE_STATIC_IP":"android.provider.Settings.System.WIFI_USE_STATIC_IP\r\n","a list of supported white balance. null if white balance\n                    setting is not supported.":"支持的白平衡列表。如果是白平衡则为 null\r\n                    不支持设置。\r\n","Get the current state of video stabilization. -or- Enables and disables video stabilization.":"获取视频稳定的当前状态。 - 或 - 启用和禁用视频稳定性。\r\n"," value when preferences are cleared.":" 清除首选项时的值。\r\n","An intent extra (int) that contains one appWidgetId.":"包含一个 appWidgetId 的 intent extra (int)。\r\n","the drawable state of the key.":"键的可绘制状态。\r\n","android.provider.Settings.Secure.DATA_ROAMING":"android.provider.Settings.Secure.DATA_ROAMING\r\n","android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback":"android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback\r\n","preferred frame duration in milliseconds (ms)":"以毫秒 (ms) 为单位的首选帧持续时间\r\n","android.inputmethodservice.InputMethodService.InputMethodImpl.showSoftInput(int, android.os.ResultReceiver)":"android.inputmethodservice.InputMethodService.InputMethodImpl.showSoftInput(int, android.os.ResultReceiver)\r\n","android.media.audiofx.Equalizer.OnParameterChangeListener.onParameterChange(android.media.audiofx.Equalizer, int, int, int, int)":"android.media.audiofx.Equalizer.OnParameterChangeListener.onParameterChange(android.media.audiofx.Equalizer, int, int, int, int)\r\n"," specific":" 具体的\r\n","android.provider.Browser.BookmarkColumns.BOOKMARK":"android.provider.Browser.BookmarkColumns.BOOKMARK\r\n","Returns whether this item is browsable.":"返回此项是否可浏览。\r\n","android.gesture.GestureStore.setOrientationStyle(int)":"android.gesture.GestureStore.setOrientationStyle(int)\r\n","VP9 Profile 0 4:2:0 8-bit":"VP9 配置文件 0 4:2:0 8 位\r\n","android.media.tv.TvInputService.Session.onTimeShiftSeekTo(long)":"android.media.tv.TvInputService.Session.onTimeShiftSeekTo(长)\r\n","This method is called when an image capture has fully completed and all the\n            result metadata is available.":"当图像捕获完全完成并且所有的\r\n            结果元数据可用。\r\n","Constant indicating that an error occurred during the verification phase (pre-reboot) of\n            this staged session.":"表示在验证阶段（预重启）期间发生错误的常量\r\n            这个分阶段的会议。\r\n"," if no\n            such memory statistic exists.":" 如果不\r\n            这样的内存统计存在。\r\n","The maximum valid value in this color space's RGB range":"此颜色空间的 RGB 范围内的最大有效值\r\n","Get the custom size preset for the display of this notification out of the available\n            presets found in ":"从可用的中获取此通知显示的自定义大小预设\r\n            中找到的预设\r\n","Roaming state.":"漫游状态。\r\n","android.provider.Contacts.Extensions.CONTENT_URI":"android.provider.Contacts.Extensions.CONTENT_URI\r\n","android.provider.Contacts.ContactMethods.decodeImProtocol(java.lang.String)":"android.provider.Contacts.ContactMethods.decodeImProtocol(java.lang.String)\r\n","numSample":"样本数\r\n"," if there is no session ID associated with the event.":" 如果没有与事件关联的会话 ID。\r\n","android.provider.Settings.System.WIFI_SLEEP_POLICY":"android.provider.Settings.System.WIFI_SLEEP_POLICY\r\n","android.media.RemoteControlClient.MetadataEditor.clone()":"android.media.RemoteControlClient.MetadataEditor.clone()\r\n"," if this session will commit more than one package when it is\n            committed.":" 如果此会话将在提交时提交多个包\r\n            坚定的。\r\n","#autoFocus(AutoFocusCallback)":"#autoFocus（AutoFocusCallback）\r\n","android.content.pm.PackageManager.Property.getResourceId()":"android.content.pm.PackageManager.Property.getResourceId()\r\n","android.provider.Settings.Global.putString(android.content.ContentResolver, java.lang.String, java.lang.String)":"android.provider.Settings.Global.putString（android.content.ContentResolver，java.lang.String，java.lang.String）\r\n","android.hardware.SensorManager.DynamicSensorCallback.onDynamicSensorConnected(android.hardware.Sensor)":"android.hardware.SensorManager.DynamicSensorCallback.onDynamicSensorConnected(android.hardware.Sensor)\r\n","android.provider.Settings.System.WIFI_STATIC_DNS2":"android.provider.Settings.System.WIFI_STATIC_DNS2\r\n","Called whenever the transport control flags have changed.":"每当传输控制标志发生更改时调用。\r\n",". May not be null.":".不能为空。\r\n","TrackChangeEvent":"TrackChangeEvent\r\n","android.app.Notification.CarExtender.Notification$CarExtender()":"android.app.Notification.CarExtender.Notification$CarExtender()\r\n","android.media.audiofx.EnvironmentalReverb.getReverbDelay()":"android.media.audiofx.EnvironmentalReverb.getReverbDelay()\r\n","Defines the status of a key.":"定义键的状态。\r\n","Retrieve the mandatory stream ":"检索强制流\r\n","The id of the logical display that was added.":"添加的逻辑显示的 ID。\r\n","android.media.tv.TvInputService.Session.onGenericMotionEvent(android.view.MotionEvent)":"android.media.tv.TvInputService.Session.onGenericMotionEvent(android.view.MotionEvent)\r\n","Returns the current Y scroll offset of this view, as per\n            ":"返回此视图的当前 Y 滚动偏移量，按照\r\n            \r\n","android.media.MediaPlayer.OnTimedMetaDataAvailableListener.onTimedMetaDataAvailable(android.media.MediaPlayer, android.media.TimedMetaData)":"android.media.MediaPlayer.OnTimedMetaDataAvailableListener.onTimedMetaDataAvailable(android.media.MediaPlayer, android.media.TimedMetaData)\r\n","android.provider.ContactsContract.SimContacts.ACTION_SIM_ACCOUNTS_CHANGED":"android.provider.ContactsContract.SimContacts.ACTION_SIM_ACCOUNTS_CHANGED\r\n","integer format.":"整数格式。\r\n","The drawable that is requesting the update.":"请求更新的可绘制对象。\r\n","android.media.MediaCodec.OutputFrame.getPresentationTimeUs()":"android.media.MediaCodec.OutputFrame.getPresentationTimeUs()\r\n","content://":"内容：//\r\n","android.provider.Browser.BookmarkColumns.TITLE":"android.provider.Browser.BookmarkColumns.TITLE\r\n"," if the structure was created\n            for assist purposes.":" 如果结构被创建\r\n            用于协助目的。\r\n","android.content.pm.PackageManager.Property.isString()":"android.content.pm.PackageManager.Property.isString()\r\n","The intent that should be set as the result for the calling activity, or\n                ":"应设置为调用活动结果的意图，或\r\n                \r\n","Whether bluetooth is enabled/disabled\n            0=disabled.":"蓝牙是否启用/禁用\r\n            0=禁用。\r\n","Provides input data to ":"提供输入数据\r\n","current color effect. null if color effect\n                    setting is not supported.":"当前颜色效果。如果颜色效果为 null\r\n                    不支持设置。\r\n","android.content.pm.LauncherApps.Callback.onPackageAdded(java.lang.String, android.os.UserHandle)":"android.content.pm.LauncherApps.Callback.onPackageAdded(java.lang.String, android.os.UserHandle)\r\n","NfcEvent#nfcAdapter":"NfcEvent#nfcAdapter\r\n","android.app.ActionBar.Tab":"android.app.ActionBar.Tab\r\n","android.media.MediaMetadata.Builder.build()":"android.media.MediaMetadata.Builder.build()\r\n","MediaCodec.CryptoException#getErrorCode()":"MediaCodec.CryptoException#getErrorCode() 方法\r\n","This is called when the time shift status is changed.":"当时移状态改变时调用。\r\n","Called when the application requests to seek to a specified time position.":"当应用程序请求查找指定时间位置时调用。\r\n","android.content.IntentSender.OnFinished.onSendFinished(android.content.IntentSender, android.content.Intent, int, java.lang.String, android.os.Bundle)":"android.content.IntentSender.OnFinished.onSendFinished(android.content.IntentSender, android.content.Intent, int, java.lang.String, android.os.Bundle)\r\n","Include all pinned shortcuts by any launchers, not just by the caller,\n            in the result.":"包括任何启动器的所有固定快捷方式，而不仅仅是调用者，\r\n            在结果中。\r\n","The time, in milliseconds, from the time the gesture starts to the\n            time the stroke should start. Must not be negative.":"时间，以毫秒为单位，从手势开始到\r\n            中风应该开始的时间。不得为负。\r\n","A key for retrieving the slow-motion marker information associated with a video track.":"用于检索与视频轨道关联的慢动作标记信息的键。\r\n","android.media.AudioPlaybackCaptureConfiguration.Builder.build()":"android.media.AudioPlaybackCaptureConfiguration.Builder.build()\r\n","MMS proxy port.":"彩信代理端口。\r\n","android.media.audiofx.DynamicsProcessing.Limiter.setPostGain(float)":"android.media.audiofx.DynamicsProcessing.Limiter.setPostGain（浮动）\r\n","android.app.ActivityManager.RecentTaskInfo.description":"android.app.ActivityManager.RecentTaskInfo.description\r\n","android.media.AudioPlaybackCaptureConfiguration.Builder.AudioPlaybackCaptureConfiguration$Builder(android.media.projection.MediaProjection)":"android.media.AudioPlaybackCaptureConfiguration.Builder.AudioPlaybackCaptureConfiguration$Builder(android.media.projection.MediaProjection)\r\n","Listens for changes to the list of active sessions.":"侦听对活动会话列表的更改。\r\n","SMIA 8-bit compressed Bayer format.":"SMIA 8 位压缩拜耳格式。\r\n",", but they can no longer deliver\n                   reliable close/error events.":"，但他们无法再交付\r\n                   可靠的关闭/错误事件。\r\n"," is a misnomer because it may occur in methods\n            <b>without</b> a session context.":" 是用词不当，因为它可能出现在方法中\r\n            <b>没有</b>会话上下文。\r\n","GNSS provider or Location is disabled, updated will not be received until they are\n            enabled.":"GNSS 提供商或位置已禁用，更新后才会收到\r\n            启用。\r\n","Called when the animation starts.":"动画开始时调用。\r\n","android.app.AlarmManager.OnAlarmListener":"android.app.AlarmManager.OnAlarmListener\r\n","This method is called if the session cannot be configured as requested.":"如果无法按请求配置会话，则调用此方法。\r\n","CommonDataKinds.Phone#CONTENT_ITEM_TYPE":"CommonDataKinds.Phone#CONTENT_ITEM_TYPE\r\n","android.app.admin.DevicePolicyManager.InstallSystemUpdateCallback.UPDATE_ERROR_UPDATE_FILE_INVALID":"android.app.admin.DevicePolicyManager.InstallSystemUpdateCallback.UPDATE_ERROR_UPDATE_FILE_INVALID\r\n"," API.  See ":"应用程序接口。看\r\n","android.provider.Contacts.ContactMethodsColumns":"android.provider.Contacts.ContactMethodsColumns\r\n","android.provider.ContactsContract.Intents":"android.provider.ContactsContract.Intents\r\n","A physical camera has become available for use again.":"物理相机再次可供使用。\r\n","android.provider.Telephony.TextBasedSmsColumns.CREATOR":"android.provider.Telephony.TextBasedSmsColumns.CREATOR\r\n","android.media.MediaPlayer.TrackInfo.getTrackType()":"android.media.MediaPlayer.TrackInfo.getTrackType()\r\n","Call was VoLTE":"通话是 VoLTE\r\n","android.provider.CallLog.Locations.CONTENT_TYPE":"android.provider.CallLog.Locations.CONTENT_TYPE\r\n"," when the request has successfully completed.":" 当请求成功完成时。\r\n","The id of the gesture that was detected. For example,\n            ":"检测到的手势的 ID。例如，\r\n            \r\n","configuration for the given trust agent.":"给定信任代理的配置。\r\n","Called when there is a dynamic sensor being connected to the system.":"当有动态传感器连接到系统时调用。\r\n","\n                and ":"\r\n                和\r\n","Override to handle requests to prepare playback from a search query.":"覆盖以处理从搜索查询准备播放的请求。\r\n","the JPEG quality setting of the EXIF thumbnail.":"EXIF 缩略图的 JPEG 质量设置。\r\n"," is\n            empty or invalid.":" 是\r\n            空或无效。\r\n","android.provider.Telephony.TextBasedSmsColumns.MESSAGE_TYPE_FAILED":"android.provider.Telephony.TextBasedSmsColumns.MESSAGE_TYPE_FAILED\r\n"," to keep the screen on\n            for a longer amount of time when this notification is displayed on the screen.":" 保持屏幕亮着\r\n            当此通知显示在屏幕上时，会持续更长的时间。\r\n",", or if it crashes.":"，或者如果它崩溃了。\r\n","Encapsulates a session that can be used to control device lights and represents the lifetime\n            of the requests.":"封装一个session，可以用来控制设备灯，代表生命周期\r\n            的请求。\r\n","android.provider.CallLog.Calls.SUBJECT":"android.provider.CallLog.Calls.SUBJECT\r\n","The video format for 720p.":"视频格式为720p。\r\n","android.app.assist.AssistStructure.ViewNode.getAlpha()":"android.app.assist.AssistStructure.ViewNode.getAlpha()\r\n","frameRate":"帧率\r\n","android.provider.Browser.addSearchUrl(android.content.ContentResolver, java.lang.String)":"android.provider.Browser.addSearchUrl(android.content.ContentResolver, java.lang.String)\r\n","android.provider.ContactsContract.StatusColumns.AWAY":"android.provider.ContactsContract.StatusColumns.AWAY\r\n","Called when an input event was not handled by the bound TV input.":"当绑定的电视输入未处理输入事件时调用。\r\n","FactoryResetProtectionPolicy":"FactoryResetProtectionPolicy\r\n","android.animation.LayoutTransition#APPEARING":"android.animation.LayoutTransition#APPEARING\r\n","android.os.Debug.MemoryInfo.getOtherLabel(int)":"android.os.Debug.MemoryInfo.getOtherLabel(int)\r\n","Return a label representing the app being installed.":"返回表示正在安装的应用程序的标签。\r\n","android.app.ListActivity":"android.app.ListActivity\r\n"," if there is no payload.":" 如果没有有效载荷。\r\n","android.media.MediaCodec.CryptoInfo.iv":"android.media.MediaCodec.CryptoInfo.iv\r\n","android.preference.Preference.OnPreferenceClickListener":"android.preference.Preference.OnPreferenceClickListener\r\n","Interface used to report status of taking screenshot.":"用于报告截屏状态的接口。\r\n","true if the provider should be enabled":"如果应启用提供程序，则为真\r\n","android.provider.Settings.EXTRA_WIFI_NETWORK_RESULT_LIST":"android.provider.Settings.EXTRA_WIFI_NETWORK_RESULT_LIST\r\n","android.app.TimePickerDialog.OnTimeSetListener":"android.app.TimePickerDialog.OnTimeSetListener\r\n","Information of a remote user of ":"远程用户的信息\r\n","The MIME type of a single TV program.":"单个电视节目的 MIME 类型。\r\n","android.hardware.Camera.Parameters.getZoom()":"android.hardware.Camera.Parameters.getZoom()\r\n","android.hardware.Camera.Parameters.getJpegQuality()":"android.hardware.Camera.Parameters.getJpegQuality()\r\n","A callback to receive once at least one suitable device is found, or the search failed\n            (e.":"一旦找到至少一个合适的设备或搜索失败，就会收到回调\r\n            （即。\r\n","android.hardware.biometrics.BiometricPrompt.AuthenticationCallback.onAuthenticationFailed()":"android.hardware.biometrics.BiometricPrompt.AuthenticationCallback.onAuthenticationFailed()\r\n","android.bluetooth.BluetoothGattServer.getDevicesMatchingConnectionStates(int[])":"android.bluetooth.BluetoothGattServer.getDevicesMatchingConnectionStates(int[])\r\n","android.media.AudioTrack.setOffloadEndOfStream()":"android.media.AudioTrack.setOffloadEndOfStream()\r\n"," records an event in the ":" 记录一个事件在\r\n","android.provider.Settings.System.CONTENT_URI":"android.provider.Settings.System.CONTENT_URI\r\n","A drawable resource of an icon that represents the current state of this\n                           activity.":"表示当前状态的图标的可绘制资源\r\n                           活动。\r\n","Key to extraact the count of ":"提取计数的键\r\n","android.provider.CalendarContract.SyncState.CONTENT_URI":"android.provider.CalendarContract.SyncState.CONTENT_URI\r\n","android.graphics.text.MeasuredText.Builder":"android.graphics.text.MeasuredText.Builder\r\n","Listener for events relating to a SIP session, such as when a session is being registered\n            (\"on registering\") or a call is outgoing (\"on calling\").":"与 SIP 会话相关的事件的侦听器，例如注册会话时\r\n            （“正在注册”）或呼叫正在拨出（“正在呼叫”）。\r\n","android.provider.Settings.Secure.SKIP_FIRST_USE_HINTS":"android.provider.Settings.Secure.SKIP_FIRST_USE_HINTS\r\n","android.content.pm.ActivityInfo#CONFIG_SCREEN_SIZE\n            PackageManager.ActivityInfo.CONFIG_SCREEN_SIZE":"android.content.pm.ActivityInfo#CONFIG_SCREEN_SIZE\r\n            PackageManager.ActivityInfo.CONFIG_SCREEN_SIZE\r\n","The video format for 576p.":"视频格式为576p。\r\n","android.hardware.SensorPrivacyManager.Sensors":"android.hardware.SensorPrivacyManager.Sensors\r\n","android.hardware.Camera.Parameters.FOCUS_MODE_INFINITY":"android.hardware.Camera.Parameters.FOCUS_MODE_INFINITY\r\n","The MIME type of a directory of preview TV programs.":"预览电视节目目录的 MIME 类型。\r\n","android.accessibilityservice.AccessibilityService.MagnificationController.getScale()":"android.accessibilityservice.AccessibilityService.MagnificationController.getScale()\r\n","Builds a new object info instance.":"构建一个新的对象信息实例。\r\n","the zoom ratios in 1/100 increments. Ex: a zoom of 3.2x is\n                    returned as 320. The number of elements is ":"缩放比例以 1/100 为增量。例如：3.2 倍的变焦是\r\n                    返回为 320。元素的数量是\r\n"," in the specified color space with the\n            specified red, green, blue and alpha component values.":" 在指定的色彩空间与\r\n            指定红色、绿色、蓝色和 alpha 分量值。\r\n","Returns the range of supported video widths.":"返回支持的视频宽度范围。\r\n",", but any text that would\n            be returned as HTML formatting will be returned as text with\n            style spans.":", 但任何文本\r\n            作为 HTML 格式返回 将作为文本返回\r\n            风格跨越。\r\n","android.media.audiofx.DynamicsProcessing.MbcBand.setPreGain(float)":"android.media.audiofx.DynamicsProcessing.MbcBand.setPreGain（浮动）\r\n","the MediaCas object to receive this event.":"接收此事件的 MediaCas 对象。\r\n","TrackType which indicates if the track is video, audio, timed text.":"TrackType 指示轨道是视频、音频还是定时文本。\r\n","android.graphics.BitmapFactory.Options.inPremultiplied":"android.graphics.BitmapFactory.Options.inPremultiplied\r\n","\n            broadcast when this widget has been layed out at a new size.":"\r\n            当此小部件以新尺寸布局时广播。\r\n","Builds a new GnssStatus based on the satellite information in the Builder.":"根据 Builder 中的卫星信息新建一个 GnssStatus。\r\n","This error indicates that session state has been\n            invalidated.":"此错误表明会话状态已\r\n            无效。\r\n","android.provider.Settings.Global.putInt(android.content.ContentResolver, java.lang.String, int)":"android.provider.Settings.Global.putInt(android.content.ContentResolver, java.lang.String, int)\r\n","Progress for given session has been updated.":"给定会话的进度已更新。\r\n","Convenience function for retrieving a single system settings value\n            as a float.":"检索单个系统设置值的便捷功能\r\n            作为浮动。\r\n","true if auto-white balance lock is supported.":"如果支持自动白平衡锁定，则为真。\r\n","isInMultiWindowMode":"isInMultiWindowMode\r\n","android.hardware.camera2.CameraCaptureSession.StateCallback.onActive(android.hardware.camera2.CameraCaptureSession)":"android.hardware.camera2.CameraCaptureSession.StateCallback.onActive(android.hardware.camera2.CameraCaptureSession)\r\n","android.app.ApplicationErrorReport.AnrInfo.dump(android.util.Printer, java.lang.String)":"android.app.ApplicationErrorReport.AnrInfo.dump(android.util.Printer, java.lang.String)\r\n","android.media.AudioTrack.OnRoutingChangedListener.onRoutingChanged(android.media.AudioTrack)":"android.media.AudioTrack.OnRoutingChangedListener.onRoutingChanged(android.media.AudioTrack)\r\n","The new height of the surface.":"表面的新高度。\r\n","Size of a document, in bytes, or ":"文档的大小，以字节为单位，或\r\n","The start minute of the instance measured from midnight in the\n            local time zone.":"实例的开始分钟从午夜开始计算\r\n            本地时区。\r\n","the session instance that failed to configure":"配置失败的会话实例\r\n","#ACTION_VOICE_SEND_MESSAGE_TO_CONTACTS":"#ACTION_VOICE_SEND_MESSAGE_TO_CONTACTS\r\n","android.provider.CalendarContract.CalendarAlertsColumns.MINUTES":"android.provider.CalendarContract.CalendarAlertsColumns.MINUTES\r\n"," that will point to the current default alarm alert at\n            any given time.":" 这将指向当前的默认警报警报\r\n            任何给定时间。\r\n","Configuration for a property containing a 64-bit integer.":"包含 64 位整数的属性的配置。\r\n","Holds information about the current playback and how audio is handled for\n            this session.":"保存有关当前播放以及音频处理方式的信息\r\n            本届会议。\r\n"," will\n            contain this column, populated with the height and width (in pixels) for photo\n            thumbnails.":"将要\r\n            包含此列，其中填充了照片的高度和宽度（以像素为单位）\r\n            缩略图。\r\n","android.media.MediaDrm.queryKeyStatus(byte[])":"android.media.MediaDrm.queryKeyStatus(byte[])\r\n","android.app.VoiceInteractor.Request.onDetached()":"android.app.VoiceInteractor.Request.onDetached()\r\n","#CRYPTO_MODE_AES_CBC":"#CRYPTO_MODE_AES_CBC\r\n","The service type for radio channels that have audio only.":"仅具有音频的无线电频道的服务类型。\r\n","android.content.pm.PackageInstaller.SessionParams.setAppPackageName(java.lang.String)":"android.content.pm.PackageInstaller.SessionParams.setAppPackageName(java.lang.String)\r\n","android.provider.DocumentsContract.Root.FLAG_EMPTY":"android.provider.DocumentsContract.Root.FLAG_EMPTY\r\n","The resulting width of the bitmap.":"位图的结果宽度。\r\n","This method is called when the camera device has started\n            capturing the initial input image of the device-specific extension\n            post-process request.":"当相机设备启动时调用此方法\r\n            捕获设备特定扩展的初始输入图像\r\n            后处理请求。\r\n","android.media.browse.MediaBrowser.MediaItem.getFlags()":"android.media.browse.MediaBrowser.MediaItem.getFlags()\r\n","android.provider.BlockedNumberContract.BlockedNumbers":"android.provider.BlockedNumberContract.BlockedNumbers\r\n","If true, resource references will be walked; if\n                               false, <var>outValue</var> may be a\n                               TYPE_REFERENCE.  In either case, it will never\n                               be a TYPE_ATTRIBUTE.":"如果为真，将遍历资源引用；如果\r\n                               false，<var>outValue</var> 可能是一个\r\n                               TYPE_REFERENCE。在任何一种情况下，它永远不会\r\n                               是一个 TYPE_ATTRIBUTE。\r\n","An alternative representation of the display name, such as \"family name first\"\n            instead of \"given name first\" for Western names.":"显示名称的替代表示，例如“姓氏优先”\r\n            而不是西方名字的“名字在前”。\r\n",": Delete the content associated with the notification.":"：删除与通知关联的内容。\r\n","android.provider.CalendarContract.RemindersColumns.METHOD":"android.provider.CalendarContract.RemindersColumns.METHOD\r\n"," instance describing the format of the data\n                that will be played through this AudioTrack. See ":" 描述数据格式的实例\r\n                将通过此 AudioTrack 播放。看\r\n","android.media.AudioFormat.AudioFormat()":"android.media.AudioFormat.AudioFormat()\r\n","the controller for this event":"此事件的控制器\r\n","android.provider.SimPhonebookContract.ElementaryFiles.getItemUri(int, int)":"android.provider.SimPhonebookContract.ElementaryFiles.getItemUri(int, int)\r\n","Unique ID of a root.":"根的唯一 ID。\r\n","android.media.tv.TvInputService.Session.onTimeShiftGetStartPosition()":"android.media.tv.TvInputService.Session.onTimeShiftGetStartPosition()\r\n","android.graphics.text.LineBreaker.Result.getLineWidth(int)":"android.graphics.text.LineBreaker.Result.getLineWidth(int)\r\n","This class specifies a supported media size.":"此类指定支持的媒体大小。\r\n","android.opengl.GLSurfaceView.EGLConfigChooser":"android.opengl.GLSurfaceView.EGLConfigChooser\r\n","Applies all of the metadata changes that have been set since the MediaMetadataEditor\n            instance was created with ":"应用自 MediaMetadataEditor 以来设置的所有元数据更改\r\n            实例创建于\r\n","android.app.ActivityManager.RunningServiceInfo.clientPackage":"android.app.ActivityManager.RunningServiceInfo.clientPackage\r\n","the strength of the effect. The valid range for strength is [0, 1000], where 0 per\n            mille designates the mildest effect and 1000 per mille the strongest":"效果的强度。强度的有效范围是 [0, 1000]，其中 0\r\n            mille 指定最温和的效果，1000 per mille 指定最强的\r\n"," bytes of data and stores them into ":" 字节的数据并将它们存储到\r\n","The kind of data that is used as the display name for the contact, such as\n            structured name or email address.":"用作联系人显示名称的数据类型，例如\r\n            结构化名称或电子邮件地址。\r\n","android.media.tv.TvInputService.Session.onTimeShiftSetPlaybackParams(android.media.PlaybackParams)":"android.media.tv.TvInputService.Session.onTimeShiftSetPlaybackParams(android.media.PlaybackParams)\r\n","android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC5":"android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC5\r\n",": set if the service is running in a\n            core system process.":": 设置服务是否运行在\r\n            核心系统进程。\r\n","the status of the load operation (0 = success)":"加载操作的状态（0 = 成功）\r\n","android.database.sqlite.SQLiteDatabase.OpenParams.getJournalMode()":"android.database.sqlite.SQLiteDatabase.OpenParams.getJournalMode()\r\n","\n                prior to inserting a document of this ":"\r\n                在插入此文档之前\r\n","the early reflections delay in milliseconds.":"以毫秒为单位的早期反射延迟。\r\n","Constructs and returns an ObjectAnimator that animates the target using a multi-float setter\n            along the given ":"构造并返回一个 ObjectAnimator，它使用多浮点数设置器为目标设置动画\r\n            沿着给定的\r\n","The Context that is inflating this fragment.":"膨胀此片段的上下文。\r\n","Callback called when connection state with remote host was changed.":"更改与远程主机的连接状态时调用的回调。\r\n","The playback speed":"播放速度\r\n","#FAIL_REASON_MALFORMED_QUERY":"#FAIL_REASON_MALFORMED_QUERY\r\n","android.print.PrintDocumentInfo.Builder.PrintDocumentInfo$Builder(java.lang.String)":"android.print.PrintDocumentInfo.Builder.PrintDocumentInfo$Builder(java.lang.String)\r\n","android.media.browse.MediaBrowser.MediaItem.MediaBrowser$MediaItem(android.media.MediaDescription, int)":"android.media.browse.MediaBrowser.MediaItem.MediaBrowser$MediaItem(android.media.MediaDescription, int)\r\n","The level of the media content.":"媒体内容的水平。\r\n","android.hardware.Camera.PictureCallback":"android.hardware.Camera.PictureCallback\r\n","reuse":"重用\r\n",",</li>\n                <li>":",</li>\r\n                <李>\r\n","The channel type for T-DMB (terrestrial).":"T-DMB（地面）的频道类型。\r\n","android.app.PendingIntent.CanceledException":"android.app.PendingIntent.CanceledException\r\n","android.os.Debug.InstructionCount.collect()":"android.os.Debug.InstructionCount.collect()\r\n","Class for Equalizer Bands\n            Equalizer bands have three controllable parameters: enabled/disabled, cutoffFrequency and\n            gain":"均衡器频段类\r\n            均衡器频段具有三个可控参数：启用/禁用、截止频率和\r\n            获得\r\n","The kernel user-ID that has been assigned to this process;\n            currently this is not a unique ID (multiple applications can have\n            the same uid).":"已分配给此进程的内核用户 ID；\r\n            目前这不是一个唯一的 ID（多个应用程序可以有\r\n            相同的 uid）。\r\n","android.provider.Settings.Global.TRANSITION_ANIMATION_SCALE":"android.provider.Settings.Global.TRANSITION_ANIMATION_SCALE\r\n","android.media.session.MediaController.TransportControls.rewind()":"android.media.session.MediaController.TransportControls.rewind()\r\n","The package name of the app which owns the document that was used\n                (e.g. from ":"拥有所使用文档的应用程序的包名称\r\n                （例如来自\r\n"," or calls it with a null configuration, null is returned.":" 或者使用 null 配置调用它，返回 null。\r\n","android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentViewDestroyed(android.app.FragmentManager, android.app.Fragment)":"android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentViewDestroyed(android.app.FragmentManager, android.app.Fragment)\r\n","the texture data.":"纹理数据。\r\n","Called on a VM policy violation.":"在违反 VM 策略时调用。\r\n","Whether this is the primary organization":"这是否是主要组织\r\n","android.provider.DocumentsContract.Document.FLAG_WEB_LINKABLE":"android.provider.DocumentsContract.Document.FLAG_WEB_LINKABLE\r\n","android.app.ActivityManager.TaskDescription.ActivityManager$TaskDescription(java.lang.String, android.graphics.Bitmap)":"android.app.ActivityManager.TaskDescription.ActivityManager$TaskDescription(java.lang.String, android.graphics.Bitmap)\r\n","android.app.job.JobParameters.dequeueWork()":"android.app.job.JobParameters.dequeueWork()\r\n","#PREPARE_DRM_STATUS_PREPARATION_ERROR":"#PREPARE_DRM_STATUS_PREPARATION_ERROR\r\n","android:includeInGlobalSearch":"android:includeInGlobalSearch\r\n","android.media.Session2Command.Result.Session2Command$Result(int, android.os.Bundle)":"android.media.Session2Command.Result.Session2Command$Result(int, android.os.Bundle)\r\n","android.media.AudioAttributes.Builder":"android.media.AudioAttributes.Builder\r\n","#VERSION":"＃版本\r\n","android.media.tv.TvContract.RecordedPrograms.COLUMN_RECORDING_DURATION_MILLIS":"android.media.tv.TvContract.RecordedPrograms.COLUMN_RECORDING_DURATION_MILLIS\r\n","zNear":"近\r\n","Override to handle requests to skip to the next media item.":"覆盖以处理跳到下一个媒体项目的请求。\r\n","android.graphics.ImageDecoder.OnPartialImageListener":"android.graphics.ImageDecoder.OnPartialImageListener\r\n","android.media.MediaRecorder.MetricsConstants.VIDEO_LEVEL":"android.media.MediaRecorder.MetricsConstants.VIDEO_LEVEL\r\n","android.media.audiofx.DynamicsProcessing.Config.getPreferredFrameDuration()":"android.media.audiofx.DynamicsProcessing.Config.getPreferredFrameDuration()\r\n","Start rewinding.":"开始倒带。\r\n","android.provider.VoicemailContract.Status.DATA_CHANNEL_STATE_BAD_CONFIGURATION":"android.provider.VoicemailContract.Status.DATA_CHANNEL_STATE_BAD_CONFIGURATION\r\n","android.bluetooth.BluetoothGatt.getDevicesMatchingConnectionStates(int[])":"android.bluetooth.BluetoothGatt.getDevicesMatchingConnectionStates(int[])\r\n","android.provider.ContactsContract.ProviderStatus":"android.provider.ContactsContract.ProviderStatus\r\n","The package name of the custom app that can provide a richer\n            experience for the event.":"可以提供更丰富的自定义应用的包名\r\n            事件的经验。\r\n","android.provider.Contacts.Phones.DEFAULT_SORT_ORDER":"android.provider.Contacts.Phones.DEFAULT_SORT_ORDER\r\n","Optionally set the URI that referred you to install this package.":"（可选）设置推荐您安装此包的 URI。\r\n","PlaybackState.CustomAction CustomActions":"PlaybackState.CustomAction 自定义操作\r\n","Key to extract the height (in pixels) of the captured video\n            from the ":"提取捕获视频的高度（以像素为单位）的键\r\n            来自\r\n","This is called when a TV input is updated on the system.":"当系统上的电视输入更新时调用此方法。\r\n","The callback interface used to indicate the user is done filling in\n            the time (e.":"用于提示用户填写完成的回调接口\r\n            时间（例如\r\n","android.provider.Settings.Global.WIFI_SLEEP_POLICY_DEFAULT":"android.provider.Settings.Global.WIFI_SLEEP_POLICY_DEFAULT\r\n","android.media.MediaPlayer.OnSeekCompleteListener.onSeekComplete(android.media.MediaPlayer)":"android.media.MediaPlayer.OnSeekCompleteListener.onSeekComplete(android.media.MediaPlayer)\r\n","android.graphics.Canvas.enableZ()":"android.graphics.Canvas.enableZ()\r\n","The name of the package that was removed.":"已删除的包的名称。\r\n","android.os.PowerManager.WakeLock.setWorkSource(android.os.WorkSource)":"android.os.PowerManager.WakeLock.setWorkSource(android.os.WorkSource)\r\n"," combination is supported.":" 支持组合。\r\n","State of the TV input. The value is one of the following:\n            <ul>\n            <li>":"电视输入的状态。该值为以下之一：\r\n            <ul>\r\n            <李>\r\n","Fragment#onDestroy()":"片段#onDestroy()\r\n","ProxyFileDescriptorCallback":"代理文件描述符回调\r\n","android.media.MediaDrm.MetricsConstants.GET_KEY_REQUEST_OK_TIME_MICROS":"android.media.MediaDrm.MetricsConstants.GET_KEY_REQUEST_OK_TIME_MICROS\r\n","#MEASUREMENT_MODE_PEAK_RMS":"#MEASUREMENT_MODE_PEAK_RMS\r\n"," to reset the scale and center\n                           immediately":" 重置比例和中心\r\n                           立即地\r\n","Base columns for tables that contain MMSs.":"包含 MMS 的表的基列。\r\n","android.provider.CalendarContract.Calendars.ENTERPRISE_CONTENT_URI":"android.provider.CalendarContract.Calendars.ENTERPRISE_CONTENT_URI\r\n","Indicates that one or more packages have become available.":"表示一个或多个包已可用。\r\n",", which may be localized.":"，这可能是本地化的。\r\n","This is an entry for a single authority in the Iterator returned by\n            ":"这是 Iterator 返回的单个权限的条目\r\n            \r\n","Combines all of the attributes that have been set on this ":"组合所有已设置的属性\r\n"," using\n            ":" 使用\r\n            \r\n","The title that should be displayed along with the play queue such as\n                         \"Now Playing\". May be null if there is no such title.":"应与播放队列一起显示的标题，例如\r\n                         “正在播放”。如果没有这样的标题，则可能为空。\r\n","android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_TOP_SLEEPING_PRE_28":"android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_TOP_SLEEPING_PRE_28\r\n","android.provider.CalendarContract.Instances.CONTENT_URI":"android.provider.CalendarContract.Instances.CONTENT_URI\r\n","Returns an array of the Parcelable class, with every entry\n            initialized to null.":"返回 Parcelable 类的数组，其中包含每个条目\r\n            初始化为空。\r\n","android.media.MediaDrm.ErrorCodes.ERROR_LICENSE_PARSE":"android.media.MediaDrm.ErrorCodes.ERROR_LICENSE_PARSE\r\n","the offset into the view array where the view vector\n                   data starts.":"视图向量中视图数组的偏移量\r\n                   数据开始。\r\n","android.provider.CalendarContract.AttendeesColumns":"android.provider.CalendarContract.AttendeesColumns\r\n","#getInputStream()":"#getInputStream()\r\n","android.provider.CallLog.Calls.MISSED_REASON_NOT_MISSED":"android.provider.CallLog.Calls.MISSED_REASON_NOT_MISSED\r\n","There is currently a bugreport running.":"当前有一个错误报告正在运行。\r\n","android.provider.Telephony.TextBasedSmsColumns.DATE_SENT":"android.provider.Telephony.TextBasedSmsColumns.DATE_SENT\r\n"," for this event\n            if the event is of type ":" 对于这次活动\r\n            如果事件是类型\r\n","android.graphics.Paint.FontMetrics":"android.graphics.Paint.FontMetrics\r\n","android.provider.CalendarContract.EventDays.query(android.content.ContentResolver, int, int, java.lang.String[])":"android.provider.CalendarContract.EventDays.query(android.content.ContentResolver, int, int, java.lang.String[])\r\n","Gets the human readable media size label.":"获取人类可读的媒体大小标签。\r\n","Key to extract the container format\n            from the ":"提取容器格式的关键\r\n            来自\r\n","true if the file is to be scanned by MediaScanner. Files\n            scanned by MediaScanner appear in the applications used to view media (for example,\n            Gallery app).":"如果文件要由 MediaScanner 扫描，则为真。文件\r\n            由 MediaScanner 扫描的内容出现在用于查看媒体的应用程序中（例如，\r\n            图库应用程序）。\r\n","limiter compressor threshold in decibels (dB)":"以分贝为单位的限制器压缩器阈值 (dB)\r\n","android.net.sip.SipSession.State.DEREGISTERING":"android.net.sip.SipSession.State.注销\r\n","android.app.AppOpsManager.OnOpNotedCallback.onAsyncNoted(android.app.AsyncNotedAppOp)":"android.app.AppOpsManager.OnOpNotedCallback.onAsyncNoted(android.app.AsyncNotedAppOp)\r\n","The content of the advertisement record offered by the remote device.":"远程设备提供的广告记录的内容。\r\n","android.os.Build.VERSION_CODES.ECLAIR":"android.os.Build.VERSION_CODES.ECLAIR\r\n","Callback an app can ":"回调应用程序可以\r\n","android.media.tv.TvContract.Programs":"android.media.tv.TvContract.Programs\r\n","Return total PSS memory usage in kB mapping a file of one of the following extension:\n            .":"返回以 kB 为单位的总 PSS 内存使用量，映射具有以下扩展名之一的文件：\r\n            .\r\n","android.content.pm.PackageManager.Property.isResourceId()":"android.content.pm.PackageManager.Property.isResourceId()\r\n","Object returned from ":"返回的对象\r\n","android.provider.Contacts.Settings.CONTENT_DIRECTORY":"android.provider.Contacts.Settings.CONTENT_DIRECTORY\r\n","android.provider.CallLog.Calls.OFFSET_PARAM_KEY":"android.provider.CallLog.Calls.OFFSET_PARAM_KEY\r\n","android.provider.CallLog.Calls.BLOCK_REASON_NOT_IN_CONTACTS":"android.provider.CallLog.Calls.BLOCK_REASON_NOT_IN_CONTACTS\r\n"," on success, ":" 成功时，\r\n","android.provider.ContactsContract.StatusUpdates.CONTENT_URI":"android.provider.ContactsContract.StatusUpdates.CONTENT_URI\r\n","android.hardware.camera2.CameraDevice.StateCallback.onOpened(android.hardware.camera2.CameraDevice)":"android.hardware.camera2.CameraDevice.StateCallback.onOpened(android.hardware.camera2.CameraDevice)\r\n","inUse state of the stage. True if this stage is currently used to process sound.\n            When false, the stage is bypassed and the sound is copied unaltered from input to output.":"阶段的 inUse 状态。如果此阶段当前用于处理声音，则为真。\r\n            当为 false 时，舞台被绕过并且声音从输入到输出被原封不动地复制。\r\n","Called whenever the playback activity and configuration has changed.":"每当播放活动和配置发生更改时调用。\r\n","#FILL_IN_SOURCE_BOUNDS":"#FILL_IN_SOURCE_BOUNDS\r\n","android.media.MediaPlayer.OnCompletionListener":"android.media.MediaPlayer.OnCompletionListener\r\n","android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile2":"android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile2\r\n","android.media.MediaPlayer.MetricsConstants.HEIGHT":"android.media.MediaPlayer.MetricsConstants.HEIGHT\r\n","android.provider.Settings.System.DIM_SCREEN":"android.provider.Settings.System.DIM_SCREEN\r\n","Whether the device has been provisioned (0 = false, 1 = true).":"设备是否已配置（0 = 假，1 = 真）。\r\n","android.hardware.Camera.Parameters.SCENE_MODE_NIGHT":"android.hardware.Camera.Parameters.SCENE_MODE_NIGHT\r\n","EF type identifier for the FDN partition.":"FDN 分区的 EF 类型标识符。\r\n","Indicates that the loading progress of an installed package has changed.":"指示已安装包的加载进度已更改。\r\n","The channel type for ISDB-S3 (satellite).":"ISDB-S3（卫星）的频道类型。\r\n"," to link\n            back to specific ":" 链接\r\n            回到具体\r\n","android.app.ApplicationErrorReport.AnrInfo.writeToParcel(android.os.Parcel, int)":"android.app.ApplicationErrorReport.AnrInfo.writeToParcel(android.os.Parcel, int)\r\n","android.provider.ContactsContract.Intents.EXTRA_RECIPIENT_CONTACT_CHAT_ID":"android.provider.ContactsContract.Intents.EXTRA_RECIPIENT_CONTACT_CHAT_ID\r\n","android.media.audiofx.Virtualizer.getRoundedStrength()":"android.media.audiofx.Virtualizer.getRoundedStrength()\r\n","#DIRECTORY_DOCUMENTS":"#DIRECTORY_DOCUMENTS\r\n"," stream.\n                       When a full-backup dataset is being restored, this will be ":" 溪流。\r\n                       恢复完整备份数据集时，这将是\r\n"," that allows setting the read position.":" 允许设置读取位置。\r\n","android.media.MediaParser.SeekPoint":"android.media.MediaParser.SeekPoint\r\n","android.hardware.Camera.Parameters.getFocusMode()":"android.hardware.Camera.Parameters.getFocusMode()\r\n","android.provider.ContactsContract.StatusColumns.IDLE":"android.provider.ContactsContract.StatusColumns.IDLE\r\n","android.media.MediaRouter.RouteInfo.getPlaybackType()":"android.media.MediaRouter.RouteInfo.getPlaybackType()\r\n","AES-GCM Authentication/Integrity + Encryption/Ciphering Algorithm.":"AES-GCM 身份验证/完整性 + 加密/加密算法。\r\n","new white balance.":"新的白平衡。\r\n","android.net.vcn.VcnConfig.Builder.build()":"android.net.vcn.VcnConfig.Builder.build()\r\n","AudioEffect#EFFECT_TYPE_PRESET_REVERB":"音频效果#EFFECT_TYPE_PRESET_REVERB\r\n","android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile3HDR10Plus":"android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile3HDR10Plus\r\n","An integer identifying the error message":"标识错误消息的整数\r\n","Called when the application requests to resume playback.":"当应用程序请求恢复播放时调用。\r\n","android.media.audiofx.EnvironmentalReverb.getReflectionsLevel()":"android.media.audiofx.EnvironmentalReverb.getReflectionsLevel()\r\n","This status code indicates unexpected and fatal internal camera error.":"此状态代码表示意外和致命的内部相机错误。\r\n","android.media.tv.TvInputService.RecordingSession.onStartRecording(android.net.Uri)":"android.media.tv.TvInputService.RecordingSession.onStartRecording(android.net.Uri)\r\n","android.app.ApplicationErrorReport.CrashInfo.ApplicationErrorReport$CrashInfo(android.os.Parcel)":"android.app.ApplicationErrorReport.CrashInfo.ApplicationErrorReport$CrashInfo(android.os.Parcel)\r\n","The number presenting rules set by the network.":"网络设定的号码呈现规则。\r\n","android.media.tv.TvContract.Channels.TYPE_DVB_H":"android.media.tv.TvContract.Channels.TYPE_DVB_H\r\n","#POSITION_SYNCHRONIZATION_CHECK":"#POSITION_SYNCHRONIZATION_CHECK\r\n","android.net.LocalServerSocket.LocalServerSocket(java.lang.String)":"android.net.LocalServerSocket.LocalServerSocket(java.lang.String)\r\n","android.graphics.pdf.PdfRenderer.Page.RENDER_MODE_FOR_PRINT":"android.graphics.pdf.PdfRenderer.Page.RENDER_MODE_FOR_PRINT\r\n","android.app.Notification.BubbleMetadata.isBubbleSuppressable()":"android.app.Notification.BubbleMetadata.isBubbleSuppressable()\r\n","android.app.DownloadManager.Request.VISIBILITY_VISIBLE":"android.app.DownloadManager.Request.VISIBILITY_VISIBLE\r\n","Copies the non-adapted CIE xyY white point of this color space in\n            specified array.":"复制此色彩空间的非自适应 CIE xyY 白点\r\n            指定数组。\r\n","android.provider.Settings.Global.WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS":"android.provider.Settings.Global.WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS\r\n","android.provider.ContactsContract.ContactsColumns.IN_DEFAULT_DIRECTORY":"android.provider.ContactsContract.ContactsColumns.IN_DEFAULT_DIRECTORY\r\n","Content URI for getting MMS report requests.":"用于获取 MMS 报告请求的内容 URI。\r\n","Returns the transform of this color space as a new array.":"将此颜色空间的转换作为新数组返回。\r\n","Capacity of a root in bytes.":"根的容量（以字节为单位）。\r\n","the presentation time (media time) of the frame rendered.\n                     This is usually the same as specified in ":"渲染帧的呈现时间（媒体时间）。\r\n                     这通常与中指定的相同\r\n","android.provider.SimPhonebookContract.ElementaryFiles.CONTENT_ITEM_TYPE":"android.provider.SimPhonebookContract.ElementaryFiles.CONTENT_ITEM_TYPE\r\n","android.media.MediaParser.ParsingException":"android.media.MediaParser.ParsingException\r\n","the word to add to the dictionary. This should not be null or\n             empty.":"要添加到词典中的单词。这不应该为空或\r\n             空的。\r\n","The video format for 240p.":"视频格式为240p。\r\n","android.provider.Contacts.OrganizationColumns":"android.provider.Contacts.OrganizationColumns\r\n","android.provider.DocumentsContract.Document.FLAG_SUPPORTS_THUMBNAIL":"android.provider.DocumentsContract.Document.FLAG_SUPPORTS_THUMBNAIL\r\n","android.inputmethodservice.KeyboardView.OnKeyboardActionListener.swipeDown()":"android.inputmethodservice.KeyboardView.OnKeyboardActionListener.swipeDown()\r\n","android.hardware.Camera.Parameters.getSupportedFlashModes()":"android.hardware.Camera.Parameters.getSupportedFlashModes()\r\n","android.app.Notification.Builder.Notification$Builder(android.content.Context, java.lang.String)":"android.app.Notification.Builder.Notification$Builder(android.content.Context, java.lang.String)\r\n","android.media.MediaPlayer.OnInfoListener.onInfo(android.media.MediaPlayer, int, int)":"android.media.MediaPlayer.OnInfoListener.onInfo(android.media.MediaPlayer, int, int)\r\n","android.app.assist.AssistStructure.ViewNode.isSelected()":"android.app.assist.AssistStructure.ViewNode.isSelected()\r\n"," sent by the requesting app.":" 由请求应用程序发送。\r\n","Icon resource ID for a root.":"根的图标资源 ID。\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV411Planar":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV411Planar\r\n","A list which includes track information.":"包含曲目信息的列表。\r\n","android.media.session.PlaybackState.Builder":"android.media.session.PlaybackState.Builder\r\n","SearchResult#getDatabaseName":"搜索结果#getDatabaseName\r\n"," that refer to intrinsic\n            properties of the contact, as opposed to the user-specified options\n            found in ":" 指的是内在的\r\n            联系人的属性，而不是用户指定的选项\r\n            在发现\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityStarted(android.app.Activity)":"android.app.Application.ActivityLifecycleCallbacks.onActivityStarted(android.app.Activity)\r\n","getStagedSessionErrorCode":"getStagedSessionErrorCode\r\n","，，，，\r\n,\r\n\r\n，，，，\r\n, ":"，，，，\r\n,\r\n\r\n，，，，\r\n,\r\n","Get the type of playback which affects volume handling.":"获取影响音量处理的播放类型。\r\n","LightState.Builder":"LightState.Builder\r\n","android.graphics.Paint.FontMetricsInt.leading":"android.graphics.Paint.FontMetricsInt.leading\r\n","If true, the timestamp of each output buffer is derived from the timestamp of the input\n            buffer that produced the output.":"如果为真，则每个输出缓冲区的时间戳都来自输入的时间戳\r\n            产生输出的缓冲区。\r\n","android.provider.Contacts.GroupMembership.CONTENT_ITEM_TYPE":"android.provider.Contacts.GroupMembership.CONTENT_ITEM_TYPE\r\n","gets cutoffFrequency for this band in Hertz (Hz)":"以赫兹 (Hz) 为单位获取该频段的截止频率\r\n","Entry name.":"条目名称。\r\n","SMS protocol type.":"短信协议类型。\r\n","Holds the result of the ":"持有的结果\r\n","A content:// style URI for the photos stored in a sub-table underneath\n            stream items.":"存储在下方子表中的照片的 content:// 样式 URI\r\n            流项目。\r\n"," fields will still be set, allowing the caller to\n            query the bitmap without having to allocate the memory for its pixels.":" 字段仍将被设置，允许调用者\r\n            查询位图而不必为其像素分配内存。\r\n","android.media.MediaCodecInfo.VideoCapabilities.getWidthAlignment()":"android.media.MediaCodecInfo.VideoCapabilities.getWidthAlignment()\r\n","Any extras sent by the requesting app.":"请求应用程序发送的任何额外内容。\r\n","true in case the stream is ultra high resolution, false otherwise.":"如果流是超高分辨率，则为 true，否则为 false。\r\n","android.media.session.MediaController.TransportControls.skipToNext()":"android.media.session.MediaController.TransportControls.skipToNext()\r\n","The elementary file type for this row.":"此行的基本文件类型。\r\n","Constant for the microphone":"麦克风常数\r\n","Returns the class name of the node's implementation, indicating its behavior.":"返回节点实现的类名，指示其行为。\r\n","The priority, an integer, used by XMPP presence":"XMPP presence 使用的优先级，一个整数\r\n","Optionally set the URI where this package was downloaded from.":"（可选）设置从中下载此包的 URI。\r\n","android.media.tv.TvContract.PreviewPrograms.CONTENT_TYPE":"android.media.tv.TvContract.PreviewPrograms.CONTENT_TYPE\r\n","Used for receiving GNSS satellite measurements from the GNSS engine.":"用于从 GNSS 引擎接收 GNSS 卫星测量值。\r\n","#INVALID_ID":"#无效_ID\r\n"," setting that indicates that the directory\n            allow creation of shortcuts for data items like email, phone or postal address,\n            but not the entire contact.":" 指示目录的设置\r\n            允许为电子邮件、电话或邮政地址等数据项创建快捷方式，\r\n            但不是整个接触。\r\n","android.hardware.Camera.Parameters#getPreviewFormat()":"android.hardware.Camera.Parameters#getPreviewFormat()\r\n"," if the click checked the item, else\n                             ":" 如果点击检查了该项目，否则\r\n                             \r\n","android.net.sip.SipSession.Listener.onCallBusy(android.net.sip.SipSession)":"android.net.sip.SipSession.Listener.onCallBusy(android.net.sip.SipSession)\r\n","The index of the available input buffer.":"可用输入缓冲区的索引。\r\n","Whether lock pattern is visible as user enters (0 = false, 1 = true)":"用户输入时锁定图案是否可见（0 = false，1 = true）\r\n","Instructs the receiver to discard all pending MIDI data.":"指示接收器丢弃所有挂起的 MIDI 数据。\r\n","android.app.ActivityManager.MemoryInfo.availMem":"android.app.ActivityManager.MemoryInfo.availMem\r\n","android.provider.ContactsContract.DataColumns.SYNC3":"android.provider.ContactsContract.DataColumns.SYNC3\r\n","android.media.session.MediaController.PlaybackInfo":"android.media.session.MediaController.PlaybackInfo\r\n","android.media.MediaRouter.RouteInfo.PLAYBACK_VOLUME_FIXED":"android.media.MediaRouter.RouteInfo.PLAYBACK_VOLUME_FIXED\r\n","android.provider.CalendarContract.CalendarAlertsColumns.BEGIN":"android.provider.CalendarContract.CalendarAlertsColumns.BEGIN\r\n","Text to prefix each line printed.":"每行打印的前缀文本。\r\n","\n                   or empty. <br />\n                   Returning ":"\r\n                   或空。 <br />\r\n                   回归\r\n","android.media.MediaCodec.OutputFrame.getFormat()":"android.media.MediaCodec.OutputFrame.getFormat()\r\n","Column definitions for the TV programs table.":"电视节目表的列定义。\r\n","android.media.MediaRouter.UserRouteInfo.setVolume(int)":"android.media.MediaRouter.UserRouteInfo.setVolume(int)\r\n","Indicates that a package was added to the specified profile.":"指示包已添加到指定的配置文件。\r\n","is the ":"是个\r\n","android.content.DialogInterface.OnMultiChoiceClickListener.onClick(android.content.DialogInterface, int, boolean)":"android.content.DialogInterface.OnMultiChoiceClickListener.onClick(android.content.DialogInterface, int, boolean)\r\n","android.content.BroadcastReceiver.PendingResult.getResultExtras(boolean)":"android.content.BroadcastReceiver.PendingResult.getResultExtras(boolean)\r\n","android.content.pm.PackageInstaller.SessionParams.setOriginatingUid(int)":"android.content.pm.PackageInstaller.SessionParams.setOriginatingUid(int)\r\n","android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback.onPreferenceStartFragment(android.preference.PreferenceFragment, android.preference.Preference)":"android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback.onPreferenceStartFragment(android.preference.PreferenceFragment, android.preference.Preference)\r\n","Return the Typeface value associated with a particular resource ID.":"返回与特定资源 ID 关联的字体值。\r\n","Called when the message queue has run out of messages and will now\n            wait for more.":"当消息队列用完消息时调用，现在将\r\n            等待更多。\r\n","The presentation timestamp in microseconds for the buffer.":"缓冲区的呈现时间戳（以微秒为单位）。\r\n","Returns the title associated with the window, if it has one.":"返回与窗口关联的标题（如果有的话）。\r\n","Whether notification intercepted by DND are prevented from appearing on ambient displays\n            on devices that support ambient display.":"是否阻止 DND 拦截的通知出现在环境显示器上\r\n            在支持环境显示的设备上。\r\n","#MEDIA_ERROR_MALFORMED":"#MEDIA_ERROR_MALFORMED\r\n","android.graphics.Paint.FontMetrics.descent":"android.graphics.Paint.FontMetrics.descent\r\n","the icon that will be displayed for this bubble when it is collapsed, or null\n            if the bubble is created via ":"折叠时将为此气泡显示的图标，或 null\r\n            如果气泡是通过\r\n","The UserHandle of the profile that generated the change.":"生成更改的配置文件的 UserHandle。\r\n","E.":"E、\r\n","android.os.UserManager.UserOperationException.getUserOperationResult()":"android.os.UserManager.UserOperationException.getUserOperationResult()\r\n","android.graphics.pdf.PdfDocument.PageInfo.getContentRect()":"android.graphics.pdf.PdfDocument.PageInfo.getContentRect()\r\n","android.provider.Settings.Secure.TOUCH_EXPLORATION_ENABLED":"android.provider.Settings.Secure.TOUCH_EXPLORATION_ENABLED\r\n","Context that the Fragment is being attached to":"片段附加到的上下文\r\n","android.provider.ContactsContract.SettingsColumns.ANY_UNSYNCED":"android.provider.ContactsContract.SettingsColumns.ANY_UNSYNCED\r\n","android.media.MediaCasException.InsufficientResourceException":"android.media.MediaCasException.InsufficientResourceException异常\r\n","android.provider.Settings.System.getInt(android.content.ContentResolver, java.lang.String, int)":"android.provider.Settings.System.getInt(android.content.ContentResolver, java.lang.String, int)\r\n","A reference to the picture that was sent via call composer.":"对通过调用作曲家发送的图片的引用。\r\n","android.media.tv.TvInputService.Session.notifyVideoAvailable()":"android.media.tv.TvInputService.Session.notifyVideoAvailable()\r\n","android.provider.CallLog.Calls.BLOCK_REASON_UNKNOWN_NUMBER":"android.provider.CallLog.Calls.BLOCK_REASON_UNKNOWN_NUMBER\r\n","android.os.Build.VERSION_CODES.ICE_CREAM_SANDWICH":"android.os.Build.VERSION_CODES.ICE_CREAM_SANDWICH\r\n","HDR type for dolby-vision.":"杜比视界的 HDR 类型。\r\n","android.content.pm.LauncherApps.PinItemRequest.getShortcutInfo()":"android.content.pm.LauncherApps.PinItemRequest.getShortcutInfo()\r\n","Return the primary shared/external storage directory.":"返回主共享/外部存储目录。\r\n","android.provider.Browser.BookmarkColumns.DATE":"android.provider.Browser.BookmarkColumns.DATE\r\n","android.os.StrictMode.ThreadPolicy":"android.os.StrictMode.ThreadPolicy\r\n","android.provider.CalendarContract.CalendarColumns.CAL_ACCESS_FREEBUSY":"android.provider.CalendarContract.CalendarColumns.CAL_ACCESS_FREEBUSY\r\n","android.media.audiofx.DynamicsProcessing.EqBand.getGain()":"android.media.audiofx.DynamicsProcessing.EqBand.getGain()\r\n","android.provider.Settings.Secure.getFloat(android.content.ContentResolver, java.lang.String, float)":"android.provider.Settings.Secure.getFloat(android.content.ContentResolver, java.lang.String, float)\r\n","android.nfc.NfcAdapter.OnNdefPushCompleteCallback.onNdefPushComplete(android.nfc.NfcEvent)":"android.nfc.NfcAdapter.OnNdefPushCompleteCallback.onNdefPushComplete(android.nfc.NfcEvent)\r\n","MeasuredText":"测量文本\r\n","android.hardware.Camera.Parameters.FLASH_MODE_OFF":"android.hardware.Camera.Parameters.FLASH_MODE_OFF\r\n","android.provider.Contacts.Settings.SYNC_EVERYTHING":"android.provider.Contacts.Settings.SYNC_EVERYTHING\r\n","This indicates that the video frame being decrypted exceeds\n            the size of the device's protected output buffers.":"这表明正在解密的视频帧超过\r\n            设备的受保护输出缓冲区的大小。\r\n","android.app.admin.DevicePolicyManager.getTrustAgentConfiguration(android.content.ComponentName, android.content.ComponentName)":"android.app.admin.DevicePolicyManager.getTrustAgentConfiguration(android.content.ComponentName, android.content.ComponentName)\r\n","android.provider.Settings.System.TEXT_AUTO_CAPS":"android.provider.Settings.System.TEXT_AUTO_CAPS\r\n","android.media.MediaDrm.ErrorCodes.ERROR_NO_KEY":"android.media.MediaDrm.ErrorCodes.ERROR_NO_KEY\r\n","android.location.LocationRequest.Builder.LocationRequest$Builder(android.location.LocationRequest)":"android.location.LocationRequest.Builder.LocationRequest$Builder(android.location.LocationRequest)\r\n","android.provider.ContactsContract.StreamItems.CONTENT_ITEM_TYPE":"android.provider.ContactsContract.StreamItems.CONTENT_ITEM_TYPE\r\n"," to require user action for the install to complete.":" 要求用户操作才能完成安装。\r\n","the identity string to be used for IKEv2 authentication":"用于 IKEv2 身份验证的身份字符串\r\n","android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_EMPTY":"android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_EMPTY\r\n","Returns the index to be used to access this font when accessing a TTC file.":"返回访问 TTC 文件时用于访问此字体的索引。\r\n","android.provider.ContactsContract.StreamItemPhotos.PHOTO":"android.provider.ContactsContract.StreamItemPhotos.PHOTO\r\n","android.provider.Settings.Secure.ADB_ENABLED":"android.provider.Settings.Secure.ADB_EN​​ABLED\r\n","The internal ID used by individual TV input services.":"个别电视输入服务使用的内部 ID。\r\n","android.hardware.camera2.CaptureRequest.Key.getName()":"android.hardware.camera2.CaptureRequest.Key.getName()\r\n","android.media.audiofx.Equalizer.getBand(int)":"android.media.audiofx.Equalizer.getBand(int)\r\n","android.os.Handler.Handler()":"android.os.Handler.Handler()\r\n","A Context for built Dialogs.":"构建对话框的上下文。\r\n","The channel type for ATSC (terrestrial).":"ATSC（地面）的频道类型。\r\n","android.animation.AnimatorSet.Builder":"android.animation.AnimatorSet.Builder\r\n","android.media.tv.TvContract.Channels.TYPE_ISDB_C":"android.media.tv.TvContract.Channels.TYPE_ISDB_C\r\n","Gets the large icon used in this car notification, or null if no icon has been set.":"获取此汽车通知中使用的大图标，如果未设置图标，则为 null。\r\n","Flag indicating that this root supports testing parent child\n            relationships.":"Flag 表明这个根支持测试父子\r\n            关系。\r\n","android.provider.CalendarContract.EventsColumns.AVAILABILITY_BUSY":"android.provider.CalendarContract.EventsColumns.AVAILABILITY_BUSY\r\n","Message box: inbox.":"留言箱：收件箱。\r\n","android.provider.VoicemailContract.Status.QUOTA_OCCUPIED":"android.provider.VoicemailContract.Status.QUOTA_OCCUPIED\r\n","android.hardware.Camera.Parameters.getAutoWhiteBalanceLock()":"android.hardware.Camera.Parameters.getAutoWhiteBalanceLock()\r\n","index of group assigned to this Limiter. Only limiters that share the\n            same linkGroup index will react together.":"分配给此限制器的组索引。只有共享的限制器\r\n            相同的 linkGroup 索引将一起反应。\r\n","android.hardware.SensorPrivacyManager.Sensors.CAMERA":"android.hardware.SensorPrivacyManager.Sensors.CAMERA\r\n","android.hardware.camera2.CameraManager.TorchCallback.onTorchModeUnavailable(java.lang.String)":"android.hardware.camera2.CameraManager.TorchCallback.onTorchModeUnavailable(java.lang.String)\r\n","the profile object created":"创建的配置文件对象\r\n","Gets the horizontal resolution in DPI (dots per inch).":"获取以 DPI（每英寸点数）为单位的水平分辨率。\r\n"," if the current launcher doesn't support shortcuts.":" 如果当前启动器不支持快捷方式。\r\n","The start point (inclusive)":"起点（含）\r\n","android.provider.CalendarContract.Events.CONTENT_EXCEPTION_URI":"android.provider.CalendarContract.Events.CONTENT_EXCEPTION_URI\r\n","android.media.MediaCodecInfo.AudioCapabilities":"android.media.MediaCodecInfo.AudioCapabilities\r\n","android.app.Notification.MessagingStyle.getHistoricMessages()":"android.app.Notification.MessagingStyle.getHistoricMessages()\r\n"," must be defined using ":" 必须使用定义\r\n","android.provider.Telephony.Carriers.BEARER":"android.provider.Telephony.Carriers.BEARER\r\n","Fragment#onActivityCreated(Bundle)":"片段#onActivityCreated（捆绑包）\r\n","android.provider.Settings.Secure.LOGGING_ID":"android.provider.Settings.Secure.LOGGING_ID\r\n","android.app.Notification.Builder.createContentView()":"android.app.Notification.Builder.createContentView()\r\n"," for the changed device":" 对于更改的设备\r\n","The video frame being decrypted exceeds the size of the device's\n            protected output buffers.":"正在解密的视频帧超出设备的大小\r\n            受保护的输出缓冲区。\r\n","Returns the array of supported sample rates if the codec\n            supports only discrete values.":"如果编解码器返回支持的采样率数组\r\n            仅支持离散值。\r\n","Value returned from ":"返回值\r\n","android.app.ActivityManager.AppTask.moveToFront()":"android.app.ActivityManager.AppTask.moveToFront()\r\n","Domain admin":"域管理员\r\n","android.net.sip.SipAudioCall.Listener.onCallHeld(android.net.sip.SipAudioCall)":"android.net.sip.SipAudioCall.Listener.onCallHeld(android.net.sip.SipAudioCall)\r\n","android.provider.Contacts.GroupsColumns":"android.provider.Contacts.GroupsColumns\r\n","Informs the application that the current program content is blocked by parent controls.":"通知应用程序当前程序内容被父控件阻止。\r\n","android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_VISIBLE":"android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_VISIBLE\r\n","android.provider.BlockedNumberContract.BlockedNumbers.COLUMN_ID":"android.provider.BlockedNumberContract.BlockedNumbers.COLUMN_ID\r\n","Holds a path from a document to a particular document under it.":"保存从文档到其下的特定文档的路径。\r\n","KeyStatus#STATUS_USABLE":"KeyStatus#STATUS_USABLE\r\n","android.media.MediaDrm.ErrorCodes.ERROR_STORAGE_WRITE":"android.media.MediaDrm.ErrorCodes.ERROR_STORAGE_WRITE\r\n","android.content.res.Resources.Theme.rebase()":"android.content.res.Resources.Theme.rebase()\r\n","android.os.Build.Partition.getFingerprint()":"android.os.Build.Partition.getFingerprint()\r\n","android.media.tv.TvContract.WatchNextPrograms.CONTENT_URI":"android.media.tv.TvContract.WatchNextPrograms.CONTENT_URI\r\n","The size of the message.":"消息的大小。\r\n","Whether the phone vibrates when it is ringing due to an incoming call.":"来电响铃时手机是否振动。\r\n","If true, this is an actual visit, and should add to the\n                         number of visits.  If false, the user entered it manually.":"如果为真，则这是一次实际访问，应该添加到\r\n                         访问次数。如果为假，则用户手动输入。\r\n","android.content.IntentFilter.AuthorityEntry.match(android.net.Uri)":"android.content.IntentFilter.AuthorityEntry.match(android.net.Uri)\r\n","android.provider.Contacts.People.PRIMARY_EMAIL_ID":"android.provider.Contacts.People.PRIMARY_EMAIL_ID\r\n","android.media.audiofx.DynamicsProcessing.Config.getPreEqBandCount()":"android.media.audiofx.DynamicsProcessing.Config.getPreEqBandCount()\r\n","android.media.tv.TvRecordingClient.RecordingCallback":"android.media.tv.TvRecordingClient.RecordingCallback\r\n","android.provider.Telephony.BaseMmsColumns.DATE":"android.provider.Telephony.BaseMmsColumns.DATE\r\n","android.media.AudioRecord.Builder":"android.media.AudioRecord.Builder\r\n","android.app.ApplicationErrorReport.CrashInfo.throwLineNumber":"android.app.ApplicationErrorReport.CrashInfo.throwLineNumber\r\n","android.app.DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED":"android.app.DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED\r\n","android.os.BugreportManager.BugreportCallback.BUGREPORT_ERROR_USER_DENIED_CONSENT":"android.os.BugreportManager.BugreportCallback.BUGREPORT_ERROR_USER_DENIED_CONSENT\r\n","android.mtp.MtpDevice.readEvent(android.os.CancellationSignal)":"android.mtp.MtpDevice.readEvent(android.os.CancellationSignal)\r\n",".\n            \n            <p>When ":".\r\n            \r\n            <p>什么时候\r\n","android.media.MediaRouter.RouteInfo.PLAYBACK_TYPE_REMOTE":"android.media.MediaRouter.RouteInfo.PLAYBACK_TYPE_REMOTE\r\n","Called when data usage has reached the given threshold.":"当数据使用量达到给定阈值时调用。\r\n","Key to extract the sample rate for this track in Hz\n            from the ":"以 Hz 为单位提取此轨道的采样率的键\r\n            来自\r\n","android.provider.Settings.Secure.TTS_DEFAULT_COUNTRY":"android.provider.Settings.Secure.TTS_DEFAULT_COUNTRY\r\n","A combination of haptic effects that should be played in multiple vibrators in parallel.":"应在多个振动器中并行播放的触觉效果组合。\r\n","Client context.":"客户端上下文。\r\n","android.provider.CalendarContract.SyncColumns.DELETED":"android.provider.CalendarContract.SyncColumns.DELETED\r\n","android.provider.CalendarContract.CalendarColumns.CAL_ACCESS_ROOT":"android.provider.CalendarContract.CalendarColumns.CAL_ACCESS_ROOT\r\n","J MR2.":"J MR2。\r\n","A set of voice prompts to use with the voice interaction system to confirm an action, select\n            an option, or do similar operations.":"一组语音提示与语音交互系统一起使用以确认操作，选择\r\n            一个选项，或做类似的操作。\r\n","android.preference.PreferenceManager.OnActivityDestroyListener.onActivityDestroy()":"android.preference.PreferenceManager.OnActivityDestroyListener.onActivityDestroy()\r\n","android.media.tv.TvInputService.Session.setOverlayViewEnabled(boolean)":"android.media.tv.TvInputService.Session.setOverlayViewEnabled(boolean)\r\n","Contains the opaque data an app uses to request a certificate from a provisioning\n            server":"包含应用程序用于从配置中请求证书的不透明数据\r\n            服务器\r\n","#obtainStyledAttributes(AttributeSet, int[], int, int)":"#obtainStyledAttributes(AttributeSet, int[], int, int)\r\n","A value for an elementary file that is not recognized.":"无法识别的基本文件的值。\r\n","android.provider.ContactsContract.ContactNameColumns.SORT_KEY_PRIMARY":"android.provider.ContactsContract.ContactNameColumns.SORT_KEY_PRIMARY\r\n","android.provider.Contacts.ContactMethodsColumns.LABEL":"android.provider.Contacts.ContactMethodsColumns.LABEL\r\n","android.content.ClipData.Item.getHtmlText()":"android.content.ClipData.Item.getHtmlText()\r\n","A Builder used to construct ":"A Builder 用于构建\r\n"," instance associated with the codec.":" 与编解码器关联的实例。\r\n"," for referencing the raw contacts that make up the user's profile\n            ":" 用于引用构成用户个人资料的原始联系人\r\n            \r\n","android.graphics.ColorSpace.Rgb.ColorSpace$Rgb(java.lang.String, float[], float[], double)":"android.graphics.ColorSpace.Rgb.ColorSpace$Rgb(java.lang.String, float[], float[], double)\r\n","The duration (in milliseconds) of this recorded program.":"此录制节目的持续时间（以毫秒为单位）。\r\n","Returns the name of the database to create or open.":"返回要创建或打开的数据库的名称。\r\n","Gets the identifier used to set the text associated with this view.":"获取用于设置与此视图关联的文本的标识符。\r\n","android.os.Debug.MemoryInfo":"android.os.Debug.MemoryInfo\r\n","Gets configuration for the given trust agent based on aggregating all calls to\n            ":"根据对所有调用的聚合获取给定信任代理的配置\r\n            \r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatRawBayer8bitcompressed":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatRawBayer8bitcompressed\r\n","android.provider.Telephony.ServiceStateTable.VOICE_REG_STATE":"android.provider.Telephony.ServiceStateTable.VOICE_REG_STATE\r\n","The ID of this group if it is a System Group, i.":"如果是系统组，则为该组的 ID，即。\r\n","android.media.MediaFormat.MIMETYPE_IMAGE_ANDROID_HEIC":"android.media.MediaFormat.MIMETYPE_IMAGE_ANDROID_HEIC\r\n","Returns all known SIM accounts.":"返回所有已知的 SIM 帐户。\r\n","The absolute time in milliseconds when the latest status was\n            inserted/updated.":"最新状态的绝对时间（以毫秒为单位）\r\n            插入/更新。\r\n","android.bluetooth.BluetoothGattServer.getConnectedDevices()":"android.bluetooth.BluetoothGattServer.getConnectedDevices()\r\n","AV1 Main profile 4:2:0 10-bit with HDR10Plus.":"AV1 主配置文件 4:2:0 10 位，带 HDR10Plus。\r\n","android.media.MediaDrm.MetricsConstants.PROVIDE_KEY_RESPONSE_OK_COUNT":"android.media.MediaDrm.MetricsConstants.PROVIDE_KEY_RESPONSE_OK_COUNT\r\n","android.content.pm.PackageInstaller.SessionInfo.isStagedSessionActive()":"android.content.pm.PackageInstaller.SessionInfo.isStagedSessionActive()\r\n","Requested Report Id, can be 0 if no Report Id are defined in descriptor.":"请求的报告 ID，如果没有在描述符中定义报告 ID，则可以为 0。\r\n","android.app.AlarmManager.AlarmClockInfo.getTriggerTime()":"android.app.AlarmManager.AlarmClockInfo.getTriggerTime()\r\n","android.graphics.BitmapFactory.Options.mCancel":"android.graphics.BitmapFactory.Options.mCancel\r\n"," object or null if this doesn't contain one.":" object 或 null（如果不包含）。\r\n","Saved instance bundle from a previous instance":"从上一个实例保存的实例包\r\n","#isInPictureInPictureMode()":"#isInPictureInPictureMode()\r\n","The reason why the TV input stopped the playback:\n            <ul>\n            <li>":"电视输入停止播放的原因：\r\n            <ul>\r\n            <李>\r\n","android.hardware.camera2.CaptureRequest.Key":"android.hardware.camera2.CaptureRequest.Key\r\n","Special constant to refer to all restricted permissions.":"引用所有受限权限的特殊常量。\r\n","android.provider.ContactsContract.StreamItemsColumns.RAW_CONTACT_ID":"android.provider.ContactsContract.StreamItemsColumns.RAW_CONTACT_ID\r\n","android.media.MediaRouter2.RoutingController.getDeselectableRoutes()":"android.media.MediaRouter2.RoutingController.getDeselectableRoutes()\r\n"," to start the focus if focus\n                    mode is FOCUS_MODE_AUTO or FOCUS_MODE_MACRO.":" 如果焦点开始焦点\r\n                    模式是 FOCUS_MODE_AUTO 或 FOCUS_MODE_MACRO。\r\n","The Julian start day of the instance, relative to the local time\n            zone.":"实例的 Julian 开始日期，相对于本地时间\r\n            区。\r\n","android.os.Temperature":"android.os.温度\r\n","android.hardware.input.InputManager.InputDeviceListener":"android.hardware.input.InputManager.InputDeviceListener\r\n","Usage that occurs while this network is a default network.":"此网络是默认网络时发生的使用情况。\r\n","Completely abandon this session, destroying all staged data and\n            rendering it invalid.":"完全放弃这个会话，销毁所有暂存数据和\r\n            使其无效。\r\n","android.media.MediaCodec.CryptoException.ERROR_FRAME_TOO_LARGE":"android.media.MediaCodec.CryptoException.ERROR_FRAME_TOO_LARGE\r\n","android.media.RemoteController.OnClientUpdateListener":"android.media.RemoteController.OnClientUpdateListener\r\n","android.provider.DocumentsContract.Path.getRootId()":"android.provider.DocumentsContract.Path.getRootId()\r\n","Priority of the recorded event.":"记录事件的优先级。\r\n","android.app.assist.AssistStructure.ViewNode.getAutofillValue()":"android.app.assist.AssistStructure.ViewNode.getAutofillValue()\r\n","android.provider.ContactsContract.ProfileSyncState.newSetOperation(android.accounts.Account, byte[])":"android.provider.ContactsContract.ProfileSyncState.newSetOperation(android.accounts.Account, byte[])\r\n","This method indicates that all pending offline requests were processed.":"此方法表示已处理所有挂起的脱机请求。\r\n","android.media.MediaRecorder.MetricsConstants.WIDTH":"android.media.MediaRecorder.MetricsConstants.WIDTH\r\n","android.app.Notification.WearableExtender.getContentAction()":"android.app.Notification.WearableExtender.getContentAction()\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_QCOM_FormatYUV420SemiPlanar":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_QCOM_FormatYUV420SemiPlanar\r\n","android.media.MediaCodecInfo.EncoderCapabilities":"android.media.MediaCodecInfo.EncoderCapabilities\r\n","android.hardware.Camera.Parameters.setRotation(int)":"android.hardware.Camera.Parameters.setRotation(int)\r\n","android.app.admin.DevicePolicyManager.InstallSystemUpdateCallback.UPDATE_ERROR_BATTERY_LOW":"android.app.admin.DevicePolicyManager.InstallSystemUpdateCallback.UPDATE_ERROR_BATTERY_LOW\r\n","The Join specifies the treatment where lines and curve segments\n            join on a stroked path.":"Join 指定直线和曲线段的处理方式\r\n            加入描边路径。\r\n","VP9 Profile 3 4:2:2 10-bit HDR10Plus":"VP9 配置文件 3 4:2:2 10 位 HDR10Plus\r\n"," object, which is a low-level object\n            representing a memory buffer accessible by various hardware units.":" 对象，这是一个低级对象\r\n            表示可由各种硬件单元访问的内存缓冲区。\r\n","pixels of the default tab stopping position":"默认制表符停止位置的像素\r\n","android.content.pm.ActivityInfo.WindowLayout.minWidth":"android.content.pm.ActivityInfo.WindowLayout.minWidth\r\n","The MIME type of CONTENT_URI providing a directory of ADN-like elementary files.":"CONTENT_URI 的 MIME 类型提供类似 ADN 的基本文件目录。\r\n","android.inputmethodservice.Keyboard.Key.icon":"android.inputmethodservice.Keyboard.Key.icon\r\n","This class allows users to do multiple inserts into a table using\n            the same statement.":"此类允许用户使用\r\n            同样的说法。\r\n","android.database.CursorJoiner.Result":"android.database.CursorJoiner.Result\r\n","android.content.SharedPreferences.Editor":"android.content.SharedPreferences.Editor\r\n","android.media.MediaCodec.LinearBlock":"android.media.MediaCodec.LinearBlock\r\n","android.hardware.Camera.Parameters.getSupportedJpegThumbnailSizes()":"android.hardware.Camera.Parameters.getSupportedJpegThumbnailSizes()\r\n","offset into the file to begin writing at, or 0 to\n                               start at the beginning of the file.":"在文件中开始写入的偏移量，或 0 到\r\n                               从文件的开头开始。\r\n","Thrown if all parser implementations provided to ":"如果所有解析器实现都提供给\r\n","Parcelable someFunction()":"Parcelable someFunction()\r\n","android.content.pm.LauncherApps.Callback.onShortcutsChanged(java.lang.String, java.util.List<android.content.pm.ShortcutInfo>, android.os.UserHandle)":"android.content.pm.LauncherApps.Callback.onShortcutsChanged(java.lang.String, java.util.List<android.content.pm.ShortcutInfo>, android.os.UserHandle)\r\n","android.app.Person.Builder":"android.app.Person.Builder\r\n","android.provider.ContactsContract.StreamItemsColumns.CONTACT_ID":"android.provider.ContactsContract.StreamItemsColumns.CONTACT_ID\r\n","system wide unique audio session identifier. If audioSession\n             is not 0, the EnvironmentalReverb will be attached to the MediaPlayer or AudioTrack in the\n             same audio session. Otherwise, the EnvironmentalReverb will apply to the output mix.\n             As the EnvironmentalReverb is an auxiliary effect it is recommended to instantiate it on\n             audio session 0 and to attach it to the MediaPLayer auxiliary output.":"系统范围的唯一音频会话标识符。如果是audioSession\r\n             不为 0，则 EnvironmentalReverb 将附加到 MediaPlayer 或 AudioTrack 中\r\n             相同的音频会话。否则，EnvironmentalReverb 将应用于输出混音。\r\n             由于 EnvironmentalReverb 是一种辅助效果，因此建议将其实例化\r\n             音频会话 0 并将其附加到 MediaPLayer 辅助输出。\r\n"," to indicate that a call was blocked because the user\n            has chosen to block all calls from restricted numbers.":" 表示呼叫被阻止，因为用户\r\n            已选择阻止来自受限号码的所有呼叫。\r\n","android.provider.Telephony.Carriers.SIM_APN_URI":"android.provider.Telephony.Carriers.SIM_APN_URI\r\n","android.provider.CallLog.Calls.TRANSCRIPTION":"android.provider.CallLog.Calls.TRANSCRIPTION\r\n"," of the page.":" 页面的。\r\n","the camera device that has become closed":"已关闭的相机设备\r\n","android.os.PowerManager.WakeLock.isHeld()":"android.os.PowerManager.WakeLock.isHeld()\r\n","Constants and helpers for the Events table, which contains details for\n            individual events.":"Events 表的常量和助手，其中包含有关的详细信息\r\n            个别事件。\r\n","android.app.Instrumentation.ActivityResult.getResultData()":"android.app.Instrumentation.ActivityResult.getResultData()\r\n","android.media.tv.TvView.TvInputCallback.onTrackSelected(java.lang.String, int, java.lang.String)":"android.media.tv.TvView.TvInputCallback.onTrackSelected(java.lang.String, int, java.lang.String)\r\n","). If the device\n            does not support picture-in-picture, return false.":").如果设备\r\n            不支持画中画，返回false。\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityPrePaused(android.app.Activity)":"android.app.Application.ActivityLifecycleCallbacks.onActivityPrePaused(android.app.Activity)\r\n","This is the intent that is fired when a search suggestion for dialing a number\n            is clicked on.":"这是在拨打号码的搜索建议时触发的意图\r\n            被点击。\r\n","Create a NetworkSpecifier for the cellular network request.":"为蜂窝网络请求创建一个 NetworkSpecifier。\r\n","the duration for this stroke":"这次中风的持续时间\r\n","The resource identifier of the desired theme\n                         attribute.":"所需主题的资源标识符\r\n                         属性。\r\n","Move to a new location in the media stream.":"移动到媒体流中的新位置。\r\n","android.media.browse.MediaBrowser.ItemCallback.onError(java.lang.String)":"android.media.browse.MediaBrowser.ItemCallback.onError(java.lang.String)\r\n"," if not a final release build.":" 如果不是最终发布版本。\r\n","android.provider.ContactsContract.StatusColumns.STATUS_LABEL":"android.provider.ContactsContract.StatusColumns.STATUS_LABEL\r\n","Key interface for the ":"关键接口为\r\n","A composition of haptic primitives that, when combined, create a single haptic effect.":"触觉原语的组合，组合后会产生单一的触觉效果。\r\n","android.provider.ContactsContract.ContactStatusColumns.CONTACT_STATUS_TIMESTAMP":"android.provider.ContactsContract.ContactStatusColumns.CONTACT_STATUS_TIMESTAMP\r\n","The keyboard mode for this row":"该行的键盘模式\r\n","android.hardware.Camera.Face.rightEye":"android.hardware.Camera.Face.rightEye\r\n","android.media.MediaCodecInfo.CodecCapabilities.FEATURE_TunneledPlayback":"android.media.MediaCodecInfo.CodecCapabilities.FEATURE_TunneledPlayback\r\n","android.media.MediaCodec.OnFirstTunnelFrameReadyListener":"android.media.MediaCodec.OnFirstTunnelFrameReadyListener\r\n","The error code. Should be one of the followings.\n            <ul>\n            <li>":"错误代码。应该是以下之一。\r\n            <ul>\r\n            <李>\r\n","The build fingerprint of this partition, see ":"该分区的构建指纹，请参见\r\n"," necessary to acquire keys associated with the track, or null if\n            the track has no encryption data.":" 获取与轨道关联的密钥所必需的，如果\r\n            该曲目没有加密数据。\r\n","Callback for interaction with and changes to state of the accessibility button\n            within the system's navigation area.":"与辅助功能按钮交互和更改辅助功能按钮状态的回调\r\n            在系统的导航区域内。\r\n","android.media.AudioPlaybackCaptureConfiguration.Builder":"android.media.AudioPlaybackCaptureConfiguration.Builder\r\n","android.provider.ContactsContract.SettingsColumns":"android.provider.ContactsContract.SettingsColumns\r\n","Whether this group should be synced if the SYNC_EVERYTHING settings\n            is false for this group's account.":"如果 SYNC_EVERYTHING 设置是否应该同步这个组\r\n            对于该组的帐户是错误的。\r\n","android.app.Notification.WearableExtender.getHintHideIcon()":"android.app.Notification.WearableExtender.getHintHideIcon()\r\n","android.graphics.pdf.PdfRenderer.Page.RENDER_MODE_FOR_DISPLAY":"android.graphics.pdf.PdfRenderer.Page.RENDER_MODE_FOR_DISPLAY\r\n","android.media.MediaRouter2.TransferCallback.onTransferFailure(android.media.MediaRoute2Info)":"android.media.MediaRouter2.TransferCallback.onTransferFailure(android.media.MediaRoute2Info)\r\n",": No semantic action defined.":": 没有定义语义动作。\r\n","android.media.RouteDiscoveryPreference.Builder.build()":"android.media.RouteDiscoveryPreference.Builder.build()\r\n","Error type: no error.":"错误类型：无错误。\r\n","android.provider.Settings.System.LOCK_PATTERN_VISIBLE":"android.provider.Settings.System.LOCK_PATTERN_VISIBLE\r\n","Informs the application that the video became unavailable for some reason.":"通知应用程序视频由于某种原因变得不可用。\r\n","android.content.Intent Intents":"android.content.Intent 意图\r\n","android.app.TaskStackBuilder.getPendingIntent(int, int, android.os.Bundle)":"android.app.TaskStackBuilder.getPendingIntent(int, int, android.os.Bundle)\r\n","Badging details for an existing session has changed.":"现有会话的徽章详细信息已更改。\r\n","android.app.Notification.WearableExtender.getPages()":"android.app.Notification.WearableExtender.getPages()\r\n","android.accessibilityservice.AccessibilityService.MagnificationController.getCenterX()":"android.accessibilityservice.AccessibilityService.MagnificationController.getCenterX()\r\n","android.app.appsearch.AppSearchSchema.Builder.AppSearchSchema$Builder(java.lang.String)":"android.app.appsearch.AppSearchSchema.Builder.AppSearchSchema$Builder(java.lang.String)\r\n","android.media.tv.TvView.TvInputCallback.onVideoSizeChanged(java.lang.String, int, int)":"android.media.tv.TvView.TvInputCallback.onVideoSizeChanged(java.lang.String, int, int)\r\n","android.media.MediaDrm.KeyStatus.getStatusCode()":"android.media.MediaDrm.KeyStatus.getStatusCode()\r\n","android.provider.CalendarContract.Attendees.CONTENT_URI":"android.provider.CalendarContract.Attendees.CONTENT_URI\r\n","Indicates that one or more packages have been unsuspended.":"指示一个或多个包已取消挂起。\r\n","Use to build MediaMetadata objects.":"用于构建 MediaMetadata 对象。\r\n","android.provider.Contacts.Intents.EXTRA_FORCE_CREATE":"android.provider.Contacts.Intents.EXTRA_FORCE_CREATE\r\n","the priority level requested by the application for controlling the\n            EnvironmentalReverb engine. As the same engine can be shared by several applications, this\n            parameter indicates how much the requesting application needs control of effect parameters.\n            The normal priority is 0, above normal is a positive number, below normal a negative number.":"应用程序请求控制的优先级\r\n            环境混响引擎。由于同一个引擎可以被多个应用程序共享，这\r\n            parameter 表示请求应用程序需要多少控制效果参数。\r\n            正常优先级为0，高于正常为正数，低于正常为负数。\r\n","The video resolution for full high-definition.":"全高清的视频分辨率。\r\n","The 1-based offset of the record in the elementary file that contains it.":"包含它的基本文件中记录的从 1 开始的偏移量。\r\n","android.media.MediaExtractor.MetricsConstants.FORMAT":"android.media.MediaExtractor.MetricsConstants.FORMAT\r\n","The flag indicating whether this TV channel is transient or not.":"指示此电视频道是否为瞬态的标志。\r\n","android.media.MediaPlayer.MetricsConstants.MIME_TYPE_AUDIO":"android.media.MediaPlayer.MetricsConstants.MIME_TYPE_AUDIO\r\n"," but doesn't call\n            ":" 但不打电话\r\n            \r\n","android.media.SoundPool.OnLoadCompleteListener.onLoadComplete(android.media.SoundPool, int, int)":"android.media.SoundPool.OnLoadCompleteListener.onLoadComplete(android.media.SoundPool, int, int)\r\n","Optionally set a label representing the app being installed.":"（可选）设置代表正在安装的应用程序的标签。\r\n"," sub-directory of\n            multiple ":" 的子目录\r\n            多种的\r\n","android.media.tv.TvContract.Channels.COLUMN_TYPE":"android.media.tv.TvContract.Channels.COLUMN_TYPE\r\n","CancellationSignal#cancel":"取消信号#cancel\r\n","android.hardware.Camera.Parameters.FOCUS_DISTANCE_NEAR_INDEX":"android.hardware.Camera.Parameters.FOCUS_DISTANCE_NEAR_INDEX\r\n","android.provider.SimPhonebookContract.ElementaryFiles.EF_UNKNOWN":"android.provider.SimPhonebookContract.ElementaryFiles.EF_UNKNOWN\r\n","android.app.appsearch.ReportUsageRequest.Builder":"android.app.appsearch.ReportUsageRequest.Builder\r\n","the interpolator to be used by this animation. A value of ":"此动画要使用的插值器。的价值\r\n","android.media.audiofx.AudioEffect.Descriptor.uuid":"android.media.audiofx.AudioEffect.Descriptor.uuid\r\n","Error type: SMS protocol permanent error.":"错误类型：短信协议永久性错误。\r\n","Called whenever camera access priorities change.":"每当相机访问优先级发生变化时调用。\r\n","android.content.pm.PackageInstaller.Session.removeChildSessionId(int)":"android.content.pm.PackageInstaller.Session.removeChildSessionId(int)\r\n","Returns an end hyphen edit for the line.":"返回该行的结束连字符编辑。\r\n","android.media.session.PlaybackState.Builder.build()":"android.media.session.PlaybackState.Builder.build()\r\n","Informs the key that it has been pressed, in case it needs to change its appearance or\n            state.":"通知键它已被按下，以防它需要改变它的外观或\r\n            状态。\r\n","android.app.ActionBar.Tab.INVALID_POSITION":"android.app.ActionBar.Tab.INVALID_POSITION\r\n","android.app.ApplicationErrorReport.AnrInfo.cause":"android.app.ApplicationErrorReport.AnrInfo.cause\r\n","MediaMetadata":"媒体元数据\r\n","android.media.session.MediaController.Callback.onSessionEvent(java.lang.String, android.os.Bundle)":"android.media.session.MediaController.Callback.onSessionEvent(java.lang.String, android.os.Bundle)\r\n","android.inputmethodservice.InputMethodService.InputMethodSessionImpl.updateCursor(android.graphics.Rect)":"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.updateCursor(android.graphics.Rect)\r\n","SearchSpec objects":"SearchSpec 对象\r\n","Base class for usage callbacks.":"使用回调的基类。\r\n","Request that the player prepare its playback.":"请求播放器准备播放。\r\n","Message type: all messages.":"消息类型：所有消息。\r\n","android.app.Fragment.SavedState":"android.app.Fragment.SavedState\r\n","android.content.pm.LauncherApps.Callback.onPackageRemoved(java.lang.String, android.os.UserHandle)":"android.content.pm.LauncherApps.Callback.onPackageRemoved(java.lang.String, android.os.UserHandle)\r\n","android.app.AlarmManager.AlarmClockInfo.AlarmManager$AlarmClockInfo(long, android.app.PendingIntent)":"android.app.AlarmManager.AlarmClockInfo.AlarmManager$AlarmClockInfo(long, android.app.PendingIntent)\r\n","android.media.metrics.NetworkEvent.Builder":"android.media.metrics.NetworkEvent.Builder\r\n","The name of this partition, e.":"该分区的名称，e。\r\n","Resets magnification scale and center to their default (e.":"将放大比例和中心重置为默认值（例如\r\n","The encoded data was incomplete.":"编码数据不完整。\r\n","PlaybackState":"回放状态\r\n","android.graphics.BitmapFactory.Options.inDither":"android.graphics.BitmapFactory.Options.inDither\r\n","android.content.pm.PackageInstaller.SessionInfo.getProgress()":"android.content.pm.PackageInstaller.SessionInfo.getProgress()\r\n","#MODE_FULL_INSTALL":"#MODE_FULL_INSTALL\r\n"," if access has been allowed for a ":" 如果允许访问\r\n"," is a transient\n            issue, perhaps due to resource constraints, and that the operation\n            (e.":" 是一个瞬态\r\n            问题，可能是由于资源限制，并且该操作\r\n            （即。\r\n","the name of the package to check the access for.":"要检查其访问权限的包的名称。\r\n","android.provider.FontsContract.Columns.TTC_INDEX":"android.provider.FontsContract.Columns.TTC_INDEX\r\n","android.media.MediaRouter.RouteInfo":"android.media.MediaRouter.RouteInfo\r\n","android.media.MediaCodecInfo.VideoCapabilities":"android.media.MediaCodecInfo.VideoCapabilities\r\n","#CRYPTO_MODE_UNENCRYPTED":"#CRYPTO_MODE_UNENCRYPTED\r\n","The start value; should be of type ":"起始值；应该是类型\r\n","Error type: SMS protocol transient error.":"错误类型：SMS 协议暂时性错误。\r\n","The internal value used by the underlying source control to\n            represent this build.":"底层源代码管理使用的内部值\r\n            代表这个构建。\r\n","android.app.appsearch.SetSchemaRequest.Builder.build()":"android.app.appsearch.SetSchemaRequest.Builder.build()\r\n","Returns the duration of the stream in microseconds or ":"以微秒为单位返回流的持续时间或\r\n","New session has been created.":"已创建新会话。\r\n","compressor ratio (N:1)":"压缩比 (N:1)\r\n","preGain value in decibels (dB)":"以分贝 (dB) 为单位的预增益值\r\n","The time when the service was first made active, either by someone\n            starting or binding to it.":"服务首次激活的时间，或者由某人\r\n            开始或绑定到它。\r\n","Return TRUE if it is a remote stored directory.":"如果它是远程存储目录，则返回 TRUE。\r\n","android.media.audiofx.Equalizer.getPresetName(short)":"android.media.audiofx.Equalizer.getPresetName（短）\r\n","commands that's allowed by the session.":"会话允许的命令。\r\n","android.provider.Browser.BOOKMARKS_URI":"android.provider.Browser.BOOKMARKS_URI\r\n","android.net.LocalSocket.shutdownOutput()":"android.net.LocalSocket.shutdownOutput()\r\n","android.print.PrintAttributes.Margins.PrintAttributes$Margins(int, int, int, int)":"android.print.PrintAttributes.Margins.PrintAttributes$Margins(int, int, int, int)\r\n","The last frame number (returned by ":"最后一帧编号（由返回\r\n","Is the calendar selected to be displayed?\n            0 - do not show events associated with this calendar.":"是否选择要显示的日历？\r\n            0 - 不显示与此日历关联的事件。\r\n","Sets the read position at the given ":"设置给定的读取位置\r\n","The orientation of the camera image.":"相机图像的方向。\r\n","android.inputmethodservice.InputMethodService.InputMethodImpl.changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)":"android.inputmethodservice.InputMethodService.InputMethodImpl.changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)\r\n","android.media.MediaMetadataRetriever#METADATA_KEY_DISC_NUMBER":"android.media.MediaMetadataRetriever#METADATA_KEY_DISC_NUMBER\r\n","Returns the File path for the directory. Note that this directory\n                    may not yet exist, so you must make sure it exists before using\n                    it such as with ":"返回目录的文件路径。注意这个目录\r\n                    可能还不存在，所以你必须在使用前确保它存在\r\n                    它就像\r\n"," may also\n            be the case-sensitive complete name of the public setter method.":" 也可能\r\n            是公共 setter 方法的区分大小写的完整名称。\r\n","The action of the ":"的行动\r\n","android.app.AppOpsManager.OnOpActiveChangedListener":"android.app.AppOpsManager.OnOpActiveChangedListener\r\n","Limiter Compressor threshold measured in decibels (dB) from 0 dB Full\n            Scale (dBFS).":"限制器压缩器阈值，以分贝 (dB) 为单位，从 0 dB 开始\r\n            比例（dBFS）。\r\n","android.media.MediaPlayer.MetricsConstants.CODEC_AUDIO":"android.media.MediaPlayer.MetricsConstants.CODEC_AUDIO\r\n","android.provider.CallLog.Calls.DATE":"android.provider.CallLog.Calls.DATE\r\n","android.content.pm.LauncherApps.PinItemRequest.getRequestType()":"android.content.pm.LauncherApps.PinItemRequest.getRequestType()\r\n","GetByDocumentIdRequest":"GetByDocumentId请求\r\n","Returns the primaries of this color space as a new array of 6 floats.":"将此颜色空间的原色作为 6 个浮点数的新数组返回。\r\n","android.media.audiofx.Virtualizer.Settings":"android.media.audiofx.Virtualizer.Settings\r\n","R.":"R。\r\n","Class containing utility methods around determine what accounts in the ContactsProvider are\n            related to the SIM cards in the device.":"包含实用程序方法的类确定 ContactsProvider 中的帐户是什么\r\n            与设备中的 SIM 卡有关。\r\n","Reports the actual duration for the last cycle of work.":"报告最后一个工作周期的实际持续时间。\r\n","The video format defined in ":"定义的视频格式\r\n","Activity#onStop super.onStop()":"活动#onStop super.onStop()\r\n","FileDescriptorDetachedException":"文件描述符分离异常\r\n","ReportUsageRequest.Builder":"ReportUsageRequest.Builder\r\n","android.media.MediaDrm.MetricsConstants.GET_DEVICE_UNIQUE_ID_OK_COUNT":"android.media.MediaDrm.MetricsConstants.GET_DEVICE_UNIQUE_ID_OK_COUNT\r\n","android.provider.ContactsContract.PhoneLookupColumns.LABEL":"android.provider.ContactsContract.PhoneLookupColumns.LABEL\r\n","android.media.AudioFormat.Builder.AudioFormat$Builder(android.media.AudioFormat)":"android.media.AudioFormat.Builder.AudioFormat$Builder(android.media.AudioFormat)\r\n","Convenience function for retrieving a single secure settings value\n            as an integer.":"检索单个安全设置值的便捷功能\r\n            作为一个整数。\r\n","android.content.ClipData.Item.getUri()":"android.content.ClipData.Item.getUri()\r\n","android.provider.Settings.Global.BLUETOOTH_ON":"android.provider.Settings.Global.BLUETOOTH_ON\r\n","android.net.sip.SipSession.Listener.onCallEnded(android.net.sip.SipSession)":"android.net.sip.SipSession.Listener.onCallEnded(android.net.sip.SipSession)\r\n","android.provider.ContactsContract.GroupsColumns.TITLE_RES":"android.provider.ContactsContract.GroupsColumns.TITLE_RES\r\n","android.media.MediaRouter.RouteInfo.DEVICE_TYPE_TV":"android.media.MediaRouter.RouteInfo.DEVICE_TYPE_TV\r\n","android.preference.PreferenceActivity.Header.titleRes":"android.preference.PreferenceActivity.Header.titleRes\r\n","a negative value if the current playback position (or the last valid playback\n                position) is not known, or a zero or positive value expressed in ms indicating the\n                current position, or the last valid known position.":"如果当前播放位置（或上次有效播放\r\n                位置）未知，或者以毫秒表示的零值或正值表示\r\n                当前位置，或最后一个有效的已知位置。\r\n","android.app.usage.NetworkStats.Bucket.DEFAULT_NETWORK_ALL":"android.app.usage.NetworkStats.Bucket.DEFAULT_NETWORK_ALL\r\n","android.provider.Telephony.BaseMmsColumns.READ":"android.provider.Telephony.BaseMmsColumns.READ\r\n","android.provider.ContactsContract.StreamItemPhotosColumns.SYNC2":"android.provider.ContactsContract.StreamItemPhotosColumns.SYNC2\r\n","#getItem":"#getItem\r\n","Defines a seek point in a media stream.":"定义媒体流中的搜索点。\r\n","a list of supported color effects. null if color effect\n                    setting is not supported.":"支持的颜色效果列表。如果颜色效果为 null\r\n                    不支持设置。\r\n","android.app.Notification.Action.SEMANTIC_ACTION_THUMBS_DOWN":"android.app.Notification.Action.SEMANTIC_ACTION_THUMBS_DOWN\r\n","Called when the virtual display video projection has been\n            resumed after having been paused.":"虚拟显示视频投影完成时调用\r\n            暂停后恢复。\r\n","android.provider.Settings.System.VIBRATE_WHEN_RINGING":"android.provider.Settings.System.VIBRATE_WHEN_RINGING\r\n","the time from start to first fix in milliseconds.":"从开始到第一次修复的时间，以毫秒为单位。\r\n","android.media.audiofx.LoudnessEnhancer.setTargetGain(int)":"android.media.audiofx.LoudnessEnhancer.setTargetGain(int)\r\n","android.location.GnssMeasurementsEvent.Callback":"android.location.GnssMeasurementsEvent.Callback\r\n","Contains the opaque data an app uses to request keys from a license server.":"包含应用程序用于从许可证服务器请求密钥的不透明数据。\r\n","Gets the current focus areas. -or- Sets focus areas.":"获取当前的焦点区域。 - 或 - 设置焦点区域。\r\n","android.media.MediaFeature.HdrType.HDR10":"android.media.MediaFeature.HdrType.HDR10\r\n","android.app.appsearch.AppSearchManager.SearchContext":"android.app.appsearch.AppSearchManager.SearchContext\r\n","CommonDataKinds.Email#ENTERPRISE_CONTENT_LOOKUP_URI":"CommonDataKinds.Email#ENTERPRISE_CONTENT_LOOKUP_URI\r\n","android.provider.CalendarContract.AttendeesColumns.ATTENDEE_STATUS":"android.provider.CalendarContract.AttendeesColumns.ATTENDEE_STATUS\r\n","android.hardware.Camera.Parameters":"android.hardware.Camera.Parameters\r\n","Class for Config object, used by DynamicsProcessing to configure and update the audio effect.":"Config 对象的类，由 DynamicsProcessing 用于配置和更新音频效果。\r\n","android.provider.CalendarContract.EventsColumns":"android.provider.CalendarContract.EventsColumns\r\n","MEDIA_ERROR_SYSTEM (-2147483648)":"MEDIA_ERROR_SYSTEM (-2147483648)\r\n","<b>decoder only</b>: codec supports low latency decoding.":"<b>仅解码器</b>：编解码器支持低延迟解码。\r\n","AudioEffect#EFFECT_TYPE_DYNAMICS_PROCESSING":"音频效果#EFFECT_TYPE_DYNAMICS_PROCESSING\r\n","android.app.ApplicationErrorReport.RunningServiceInfo.serviceDetails":"android.app.ApplicationErrorReport.RunningServiceInfo.serviceDetails\r\n","android.provider.Settings.System.STAY_ON_WHILE_PLUGGED_IN":"android.provider.Settings.System.STAY_ON_WHILE_PLUGGED_IN\r\n","the break offset.":"中断偏移量。\r\n","True if this route is enabled.":"如果启用此路由，则为真。\r\n","android.media.session.MediaSession.Callback.onSkipToPrevious()":"android.media.session.MediaSession.Callback.onSkipToPrevious()\r\n","gets attack time for compressor in milliseconds (ms) -or- sets attack time for compressor in milliseconds (ms)":"以毫秒 (ms) 为单位获取压缩器的启动时间 - 或 - 以毫秒 (ms) 为单位设置压缩器的启动时间\r\n","The green component to decode to linear space":"解码到线性空间的绿色分量\r\n","android.media.tv.TvContract.Channels.COLUMN_SERVICE_TYPE":"android.media.tv.TvContract.Channels.COLUMN_SERVICE_TYPE\r\n","android.provider.ContactsContract.StatusUpdates":"android.provider.ContactsContract.StatusUpdates\r\n","android.media.audiofx.LoudnessEnhancer.getTargetGain()":"android.media.audiofx.LoudnessEnhancer.getTargetGain()\r\n","android.hardware.camera2.params.MandatoryStreamCombination.MandatoryStreamInformation.isMaximumSize()":"android.hardware.camera2.params.MandatoryStreamCombination.MandatoryStreamInformation.isMaximumSize()\r\n","Results for CommandRequest can be returned in partial chunks.":"CommandRequest 的结果可以部分块的形式返回。\r\n","the timed text sample which contains the text\n                                  needed to be displayed and the display format.":"包含文本的定时文本样本\r\n                                  需要显示和显示格式。\r\n","android.media.AudioTrack.OnPlaybackPositionUpdateListener":"android.media.AudioTrack.OnPlaybackPositionUpdateListener\r\n","Key to extract the recorded movies time units\n            from the ":"提取录制的电影时间单位的关键\r\n            来自\r\n","Return the total number of instructions executed globally (i.":"返回全局执行的指令总数（i。\r\n","android.media.MediaMetadataEditor.getObject(int, java.lang.Object)":"android.media.MediaMetadataEditor.getObject(int, java.lang.Object)\r\n","android.graphics.Picture.createFromStream(java.io.InputStream)":"android.graphics.Picture.createFromStream(java.io.InputStream)\r\n","MediaSession MediaSession's":"MediaSession 媒体会话的\r\n","android.provider.ContactsContract.GroupsColumns.SHOULD_SYNC":"android.provider.ContactsContract.GroupsColumns.SHOULD_SYNC\r\n","android.media.tv.TvContract.RecordedPrograms.COLUMN_INPUT_ID":"android.media.tv.TvContract.RecordedPrograms.COLUMN_INPUT_ID\r\n","The surface to be used for video rendering. Can be ":"用于视频渲染的表面。可\r\n","android.hardware.Camera.Parameters.SCENE_MODE_SPORTS":"android.hardware.Camera.Parameters.SCENE_MODE_SPORTS\r\n","new antibanding value.":"新的反带值。\r\n","android.provider.Settings.Secure.USB_MASS_STORAGE_ENABLED":"android.provider.Settings.Secure.USB_MASS_STORAGE_ENABLED\r\n","notification id to be used for\n                   ":"通知ID用于\r\n                   \r\n","android.media.tv.TvContract.Channels.TYPE_DTMB":"android.media.tv.TvContract.Channels.TYPE_DTMB\r\n","Interface definition for a listener for codec format changes.":"编解码器格式更改侦听器的接口定义。\r\n","android.hardware.Camera.Parameters.PREVIEW_FPS_MAX_INDEX":"android.hardware.Camera.Parameters.PREVIEW_FPS_MAX_INDEX\r\n","Handle the data delivered via the given file descriptor during a full restore\n            operation.":"在完全恢复期间处理通过给定文件描述符传送的数据\r\n            手术。\r\n","android.hardware.display.VirtualDisplay.Callback.onPaused()":"android.hardware.display.VirtualDisplay.Callback.onPaused()\r\n","android.media.MediaCodec.ParameterDescriptor.getName()":"android.media.MediaCodec.ParameterDescriptor.getName()\r\n","android.provider.ContactsContract.PresenceColumns":"android.provider.ContactsContract.PresenceColumns\r\n","a bit mask of configuration changes, as defined by\n                    ":"配置更改的位掩码，定义为\r\n                    \r\n","android.app.Notification.Builder.build()":"android.app.Notification.Builder.build()\r\n","android.hardware.Camera.Parameters.SCENE_MODE_BARCODE":"android.hardware.Camera.Parameters.SCENE_MODE_BARCODE\r\n","the current soft keyboard show mode":"当前软键盘显示模式\r\n","android.media.MediaDrm.OnSessionLostStateListener":"android.media.MediaDrm.OnSessionLostStateListener\r\n","Implementors of this interface can set themselves as update listeners\n            to a ":"该接口的实现者可以将自己设置为更新监听器\r\n            到一个\r\n","Base class for derived classes to implement to provide a TV input session.":"派生类的基类，以实现提供电视输入会话。\r\n","Whether to enable contacts metadata syncing or not\n            The value 1 - enable, 0 - disable":"是否启用联系人元数据同步\r\n            值 1 - 启用，0 - 禁用\r\n","android.media.MediaDrm.MetricsConstants.EVENT_KEY_NEEDED_COUNT":"android.media.MediaDrm.MetricsConstants.EVENT_KEY_NEEDED_COUNT\r\n"," is\n            the value of the ":" 是\r\n            的价值\r\n","16 bits per pixel RGB color format, with 5-bit red & blue and 6-bit green component.":"每像素 16 位 RGB 颜色格式，具有 5 位红色和蓝色以及 6 位绿色分量。\r\n","The unique identifier of the physical camera.":"物理相机的唯一标识。\r\n","android.media.MediaDrm.ErrorCodes.ERROR_FRAME_TOO_LARGE":"android.media.MediaDrm.ErrorCodes.ERROR_FRAME_TOO_LARGE\r\n","android.content.BroadcastReceiver.PendingResult.setResultCode(int)":"android.content.BroadcastReceiver.PendingResult.setResultCode(int)\r\n"," that will point to the current default ringtone at any\n            given time.":" 这将指向当前的默认铃声\r\n            给定的时间。\r\n","android.provider.BlockedNumberContract.BlockedNumbers.CONTENT_URI":"android.provider.BlockedNumberContract.BlockedNumbers.CONTENT_URI\r\n","android.os.BugreportManager.BugreportCallback.onError(int)":"android.os.BugreportManager.BugreportCallback.onError(int)\r\n","Control whether the accelerometer will be used to change screen\n            orientation.":"控制是否使用加速度计换屏\r\n            方向。\r\n","android.content.SharedPreferences.getInt(java.lang.String, int)":"android.content.SharedPreferences.getInt(java.lang.String, int)\r\n"," pointing to an\n                       empty file. The application should record the final backup\n                       state here after writing the requested data to the ":" 指向一个\r\n                       空的文件。应用程序应记录最终备份\r\n                       在将请求的数据写入\r\n","Return the list of available sizes for this mandatory stream.":"返回此强制流的可用大小列表。\r\n","Fragment#onCreateView(LayoutInflater, ViewGroup, Bundle)":"片段#onCreateView（LayoutInflater、ViewGroup、Bundle）\r\n","The start-offset of the data in the buffer.":"缓冲区中数据的起始偏移量。\r\n","Width of activity in pixels.":"以像素为单位的活动宽度。\r\n","android.hardware.Camera.Parameters.SCENE_MODE_SNOW":"android.hardware.Camera.Parameters.SCENE_MODE_SNOW\r\n","Bit-mask describing features of the call (e.":"描述调用特征的位掩码（例如\r\n","android.hardware.Camera.Parameters.get(java.lang.String)":"android.hardware.Camera.Parameters.get(java.lang.String)\r\n","getParcelFileDescriptor().close()":"getParcelFileDescriptor().close()\r\n"," column names\n            and flags.":" 列名\r\n            和旗帜。\r\n",". Refer to the\n                                  individual status codes on how to handle them.":".请参阅\r\n                                  有关如何处理它们的个人状态代码。\r\n","s to store shared constant state and data\n            between Drawables.":"s 存储共享常量状态和数据\r\n            在可绘制对象之间。\r\n","android.app.usage.NetworkStats.Bucket.getMetered()":"android.app.usage.NetworkStats.Bucket.getMetered()\r\n","android.graphics.Typeface.CustomFallbackBuilder.getMaxCustomFallbackCount()":"android.graphics.Typeface.CustomFallbackBuilder.getMaxCustomFallbackCount()\r\n",".\n                       SQL doesn't allow inserting a completely empty row without\n                       naming at least one column name.  If your provided ":".\r\n                       SQL 不允许插入一个完全空的行\r\n                       命名至少一个列名称。如果您提供\r\n","android.media.AudioRecord.OnRecordPositionUpdateListener":"android.media.AudioRecord.OnRecordPositionUpdateListener\r\n","a new media description.":"一种新的媒体描述。\r\n","base class for the different stages.":"不同阶段的基类。\r\n","Return the width for this paragraph in pixels. -or- Set width for this paragraph.":"以像素为单位返回此段落的宽度。 - 或 - 设置该段落的宽度。\r\n","The end time of the original TV program, in milliseconds since the epoch.":"原始电视节目的结束时间，自纪元以来的毫秒数。\r\n","A builder for ":"一个建设者\r\n","true if video stabilization is supported":"如果支持视频稳定，则为真\r\n","android.print.PrinterInfo.Builder.build()":"android.print.PrinterInfo.Builder.build()\r\n","TvInputManager#RECORDING_ERROR_INSUFFICIENT_SPACE":"TvInputManager#RECORDING_ERROR_INSUFFICIENT_SPACE\r\n","android.media.MediaDrm.ErrorCodes.ERROR_SESSION_NOT_OPENED":"android.media.MediaDrm.ErrorCodes.ERROR_SESSION_NOT_OPENED\r\n","DevicePolicyManager#setSystemUpdatePolicy":"DevicePolicyManager#setSystemUpdatePolicy\r\n","The \"read-only\" flag: \"0\" by default, \"1\" if the row cannot be modified or\n            deleted except by a sync adapter.":"“只读”标志：默认为“0”，如果行不能修改则为“1”或\r\n            除了被同步适配器删除。\r\n","An integer representing the current status of the provider.":"表示提供程序当前状态的整数。\r\n","Concrete implementation of\n            ":"具体实现\r\n            \r\n","Returns true if this node is clickable by the user.":"如果此节点可由用户单击，则返回 true。\r\n","android.provider.CalendarContract.Instances.CONTENT_SEARCH_BY_DAY_URI":"android.provider.CalendarContract.Instances.CONTENT_SEARCH_BY_DAY_URI\r\n","android.hardware.Camera.Parameters.setWhiteBalance(java.lang.String)":"android.hardware.Camera.Parameters.setWhiteBalance(java.lang.String)\r\n","android.app.Notification.BubbleMetadata.getIntent()":"android.app.Notification.BubbleMetadata.getIntent()\r\n","android.media.tv.TvContract.WatchNextPrograms.CONTENT_ITEM_TYPE":"android.media.tv.TvContract.WatchNextPrograms.CONTENT_ITEM_TYPE\r\n","Select a single option from multiple potential options with the user via the trusted system\n            VoiceInteractionService.":"通过可信系统与用户从多个潜在选项中选择一个选项\r\n            语音交互服务。\r\n","Notification senders to prioritize for conversations.":"通知发件人确定对话的优先级。\r\n","The specified array":"指定数组\r\n","android.media.tv.TvContract.Programs.COLUMN_RECORDING_PROHIBITED":"android.media.tv.TvContract.Programs.COLUMN_RECORDING_PROHIBITED\r\n","the timestamp that correlates media time, system time and clock rate,\n                or ":"关联媒体时间、系统时间和时钟频率的时间戳，\r\n                或者\r\n","android.provider.Telephony.Mms.REPORT_STATUS_URI":"android.provider.Telephony.Mms.REPORT_STATUS_URI\r\n","#TYPE_OUTPUT":"#TYPE_OUTPUT\r\n","Gets the page height in points (1/72\").":"获取以磅为单位的页面高度 (1/72\")。\r\n","the maximum number of focus areas supported by the camera.":"相机支持的最大对焦区域数。\r\n","Description of a Activity execution result to return to the original\n            activity.":"一个Activity执行结果返回原样的说明\r\n            活动。\r\n","Returns any text associated with the node that is displayed to the user, or null\n            if there is none.":"返回与向用户显示的节点关联的任何文本，或者返回 null\r\n            如果没有。\r\n","android.provider.ContactsContract.DataColumns.DATA6":"android.provider.ContactsContract.DataColumns.DATA6\r\n","Returns the maximum number of curve points allowed for\n            ":"返回允许的最大曲线点数\r\n            \r\n","android.provider.ContactsContract.Directory.isRemoteDirectoryId(long)":"android.provider.ContactsContract.Directory.isRemoteDirectoryId(长)\r\n","The timeout after which to release the wake lock, in milliseconds.":"释放唤醒锁的超时时间，以毫秒为单位。\r\n","android.content.res.Resources.Theme.obtainStyledAttributes(int[])":"android.content.res.Resources.Theme.obtainStyledAttributes(int[])\r\n","android.print.PrintDocumentInfo.Builder.build()":"android.print.PrintDocumentInfo.Builder.build()\r\n","The phone number for this record.":"此记录的电话号码。\r\n","android.provider.CalendarContract.EventsColumns.EVENT_COLOR":"android.provider.CalendarContract.EventsColumns.EVENT_COLOR\r\n","flags describing the content returned by ":"描述返回内容的标志\r\n","Returns the opto-electronic transfer function (OETF) of this color space.":"返回此颜色空间的光电传递函数 (OETF)。\r\n","android.app.admin.SecurityLog.SecurityEvent.getTimeNanos()":"android.app.admin.SecurityLog.SecurityEvent.getTimeNanos()\r\n","android.provider.ContactsContract.StatusColumns.STATUS_ICON":"android.provider.ContactsContract.StatusColumns.STATUS_ICON\r\n","The unique resolution id.":"唯一的分辨率 ID。\r\n","oldWidgetIds":"旧的WidgetIds\r\n","android.preference.PreferenceActivity.Header.summaryRes":"android.preference.PreferenceActivity.Header.summaryRes\r\n","\n            if not supported by the node.":"\r\n            如果节点不支持。\r\n","The description of the gesture that was cancelled.":"被取消手势的描述。\r\n","android.provider.Contacts.Organizations.CONTENT_URI":"android.provider.Contacts.Organizations.CONTENT_URI\r\n","android.provider.SimPhonebookContract.ElementaryFiles.CONTENT_URI":"android.provider.SimPhonebookContract.ElementaryFiles.CONTENT_URI\r\n",",\n            indicates the reason why a call is blocked.":",\r\n            指示呼叫被阻止的原因。\r\n","android.app.appsearch.AppSearchSchema.PropertyConfig.getCardinality()":"android.app.appsearch.AppSearchSchema.PropertyConfig.getCardinality()\r\n","The URI for the newly recorded program.":"新录制节目的 URI。\r\n","android.media.audiofx.DynamicsProcessing.Config.getVariant()":"android.media.audiofx.DynamicsProcessing.Config.getVariant()\r\n","android.media.MediaRouter.RouteInfo.getSupportedTypes()":"android.media.MediaRouter.RouteInfo.getSupportedTypes()\r\n","Returns the list of locales associated with this view.":"返回与此视图关联的语言环境列表。\r\n","the percentage (0-100) of the content\n                           that has been buffered or played thus far":"内容的百分比（0-100）\r\n                           到目前为止已被缓冲或播放\r\n","SensorManager lets you access the device's ":"SensorManager 允许您访问设备的\r\n","Detailed description of a specific MIME type, including an icon and label\n            that describe the type.":"特定 MIME 类型的详细描述，包括图标和标签\r\n            描述类型的。\r\n","android.provider.Contacts.PhonesColumns.TYPE":"android.provider.Contacts.PhonesColumns.TYPE\r\n","GeofenceHardware":"地理围栏硬件\r\n","Class for Multi-Band Compressor (MBC) stage":"多频带压缩器 (MBC) 阶段的类\r\n","android.graphics.BitmapFactory.Options.inTargetDensity":"android.graphics.BitmapFactory.Options.inTargetDensity\r\n","android.provider.CalendarContract.SyncColumns.ACCOUNT_NAME":"android.provider.CalendarContract.SyncColumns.ACCOUNT_NAME\r\n","The global content ID of this TV program, as a URI.":"此电视节目的全局内容 ID，作为 URI。\r\n","android.provider.Telephony.BaseMmsColumns.CONTENT_LOCATION":"android.provider.Telephony.BaseMmsColumns.CONTENT_LOCATION\r\n","A content:// style URI for this table that should be used to create\n            shortcuts or otherwise create long-term links to contacts.":"应该用于创建此表的 content:// 样式 URI\r\n            快捷方式或以其他方式创建指向联系人的长期链接。\r\n","The object whose property is to be animated. This object should\n            have a public method on it called ":"其属性要设置动画的对象。这个对象应该\r\n            有一个公共方法叫做\r\n","android.media.audiofx.EnvironmentalReverb.Settings.EnvironmentalReverb$Settings(java.lang.String)":"android.media.audiofx.EnvironmentalReverb.Settings.EnvironmentalReverb$Settings(java.lang.String)\r\n"," on an\n            unlocked device.":" 在一个\r\n            解锁设备。\r\n","The channel type for DVB-H (handheld).":"DVB-H（手持设备）的频道类型。\r\n","Contacts#KIND_POSTAL":"联系人#KIND_POSTAL\r\n","APN name.":"接入点名称。\r\n","This is called when the video is not available, so the TV input stops the playback.":"当视频不可用时调用此函数，因此电视输入停止播放。\r\n","android.media.MediaPlayer.OnTimedMetaDataAvailableListener":"android.media.MediaPlayer.OnTimedMetaDataAvailableListener\r\n","For special services that are bound to by system code, this is\n            the package that holds the binding.":"对于系统代码绑定的特殊服务，这是\r\n            持有绑定的包。\r\n","android.graphics.BitmapFactory.Options.inMutable":"android.graphics.BitmapFactory.Options.inMutable\r\n","android.provider.Telephony.TextBasedSmsColumns.ADDRESS":"android.provider.Telephony.TextBasedSmsColumns.ADDRESS\r\n","android.provider.VoicemailContract.Status.DATA_CHANNEL_STATE":"android.provider.VoicemailContract.Status.DATA_CHANNEL_STATE\r\n","Special TAG value for total data across all tags":"所有标签的总数据的特殊 TAG 值\r\n","android.provider.ContactsContract.StreamItemPhotosColumns.SYNC3":"android.provider.ContactsContract.StreamItemPhotosColumns.SYNC3\r\n","android.provider.Telephony.ThreadsColumns.SNIPPET":"android.provider.Telephony.ThreadsColumns.SNIPPET\r\n","android.media.tv.TvInputService.RecordingSession.TvInputService$RecordingSession(android.content.Context)":"android.media.tv.TvInputService.RecordingSession.TvInputService$RecordingSession(android.content.Context)\r\n","android.app.assist.AssistStructure.ViewNode.getText()":"android.app.assist.AssistStructure.ViewNode.getText()\r\n"," to keep the screen on for a\n            short amount of time when this notification is displayed on the screen.":" 保持屏幕打开一段时间\r\n            此通知显示在屏幕上的时间很短。\r\n","Last date to remove. If -1, all dates after begin.\n                         Non-inclusive.":"最后删除日期。如果 -1，则所有日期之后开始。\r\n                         非包容性。\r\n","Handler that invokes callback methods.":"调用回调方法的处理程序。\r\n","android.media.midi.MidiManager.DeviceCallback.onDeviceRemoved(android.media.midi.MidiDeviceInfo)":"android.media.midi.MidiManager.DeviceCallback.onDeviceRemoved(android.media.midi.MidiDeviceInfo)\r\n","The channel type for 1seg (handheld).":"1seg（手持设备）的通道类型。\r\n","This class specifies content margins.":"此类指定内容边距。\r\n","android.content.pm.PackageInstaller.Session.setChecksums(java.lang.String, java.util.List<android.content.pm.Checksum>, byte[])":"android.content.pm.PackageInstaller.Session.setChecksums(java.lang.String, java.util.List<android.content.pm.Checksum>, byte[])\r\n","Gets the current antibanding setting. -or- Sets the antibanding.":"获取当前的反绑定设置。 - 或 - 设置 antibanding。\r\n","the recording source.\n              See ":"录音源。\r\n              看\r\n","android.os.Build.VERSION.INCREMENTAL":"android.os.Build.VERSION.INCREMENTAL\r\n","Set an application-specific tag object for this route.":"为此路由设置特定于应用程序的标记对象。\r\n","ID of the shortcut.":"快捷方式的 ID。\r\n","The type of the elementary file the record is from.":"记录来自的基本文件的类型。\r\n","android.provider.SimPhonebookContract.SimRecords.CONTENT_TYPE":"android.provider.SimPhonebookContract.SimRecords.CONTENT_TYPE\r\n","#FILL_IN_ACTION":"#FILL_IN_ACTION\r\n","android.content.AttributionSource.Builder.build()":"android.content.AttributionSource.Builder.build()\r\n"," describing the\n            requested ":" 描述\r\n            要求\r\n","android.media.RoutingSessionInfo.Builder.build()":"android.media.RoutingSessionInfo.Builder.build()\r\n","an extra code, specific to the info. Typically\n            implementation dependent.":"特定于信息的额外代码。通常\r\n            实施依赖。\r\n","Returns the list of axes associated to this font.":"返回与此字体关联的轴列表。\r\n","A new capture request instance, ready for submission to the\n            camera device.":"一个新的捕获请求实例，准备提交给\r\n            相机设备。\r\n","maximum size in frames of the ":"帧中的最大尺寸\r\n","android.media.tv.TvContract.Programs.COLUMN_EVENT_ID":"android.media.tv.TvContract.Programs.COLUMN_EVENT_ID\r\n","AVC Baseline profile.":"AVC 基线配置文件。\r\n","State of the auto-white balance lock. Returns true if\n                    auto-white balance is currently locked, and false\n                    otherwise.":"自动白平衡锁定状态。返回真如果\r\n                    auto-white balance 当前已锁定，并且为 false\r\n                    否则。\r\n","TelephonyNetworkSpecifier object.":"TelephonyNetworkSpecifier 对象。\r\n","the effect identifier.":"效果标识符。\r\n","A return value of GL_TRUE indicates success, a return value of\n                    GL_FALSE indicates failure.":"返回值为 GL_TRUE 表示成功，返回值为\r\n                    GL_FALSE 表示失败。\r\n","android.media.audiofx.BassBoost.OnParameterChangeListener.onParameterChange(android.media.audiofx.BassBoost, int, int, short)":"android.media.audiofx.BassBoost.OnParameterChangeListener.onParameterChange(android.media.audiofx.BassBoost, int, int, short)\r\n","Returns a new instance of the Parcelable class.":"返回 Parcelable 类的新实例。\r\n","Flag indicating that this root can be queried to provide recently\n            modified documents.":"flag表示最近可以查询到这个root提供\r\n            修改的文件。\r\n","android.media.MediaFeature.HdrType.HLG":"android.media.MediaFeature.HdrType.HLG\r\n","A Directory represents a contacts corpus, e.":"目录代表联系人语料库，例如。\r\n","Combines all of the attributes that have been set and return a new\n            ":"组合所有已设置的属性并返回一个新的\r\n            \r\n","AppWidgetManager":"AppWidgetManager\r\n","the number of frames available to write without blocking.\n              Note that the frame size of a compressed stream is 1 byte.":"可在不阻塞的情况下写入的帧数。\r\n              请注意，压缩流的帧大小为 1 个字节。\r\n","Name of the color space, cannot be null, its length must be >= 1":"颜色空间的名称，不能为空，其长度必须 >= 1\r\n"," if the item hasn't been pinned, for example, because the request had\n            already been canceled, in which case the launcher must not pin the requested item.":" 如果项目没有被固定，例如，因为请求有\r\n            已经被取消，在这种情况下，启动器不得固定所请求的项目。\r\n","Returns the maximum length of the text associated with this node, or ":"返回与此节点关联的文本的最大长度，或者\r\n","#TYPE_AUTOMATIC":"#TYPE_AUTOMATIC\r\n","android.os.Build.VERSION_CODES.ICE_CREAM_SANDWICH_MR1":"android.os.Build.VERSION_CODES.ICE_CREAM_SANDWICH_MR1\r\n","Page":"页\r\n","android.media.tv.TvContract.Channels.VIDEO_FORMAT_576I":"android.media.tv.TvContract.Channels.VIDEO_FORMAT_576I\r\n","This is called when the current program content turns out to be allowed to watch since\n            its content rating is not blocked by parental controls.":"当当前节目内容被允许观看时调用此方法，因为\r\n            其内容评级未被家长控制阻止。\r\n","android.provider.CalendarContract.CalendarCache.KEY_TIMEZONE_INSTANCES":"android.provider.CalendarContract.CalendarCache.KEY_TIMEZONE_INSTANCES\r\n","desired for the compressor (N:1)":"压缩机所需 (N:1)\r\n","\n                          parameters, respectively.":"\r\n                          参数，分别。\r\n","android.media.audiofx.DynamicsProcessing.MbcBand.getReleaseTime()":"android.media.audiofx.DynamicsProcessing.MbcBand.getReleaseTime()\r\n"," for this package inside of a synchronous\n            API call, i.":" 对于同步内的这个包\r\n            API调用，我。\r\n","）\r\n        \r\n\r\n)\r\n        \r\n\r\n）\r\n        \r\n\r\n)\n        ":"）\r\n        \r\n\r\n)\r\n        \r\n\r\n）\r\n        \r\n\r\n)\r\n        \r\n","android.provider.VoicemailContract.Status.PHONE_ACCOUNT_ID":"android.provider.VoicemailContract.Status.PHONE_ACCOUNT_ID\r\n","Latitude in degrees.":"以度为单位的纬度。\r\n","the int value of the parameter":"参数的int值\r\n","android.bluetooth.le.ScanFilter.Builder":"android.bluetooth.le.ScanFilter.Builder\r\n","android.provider.SimPhonebookContract.SimRecords":"android.provider.SimPhonebookContract.SimRecords\r\n","Retrieve a copy of the path for this stroke":"检索此笔划的路径副本\r\n","the font instance.":"字体实例。\r\n"," for this event if the event is of type\n            ":" 对于这个事件，如果事件是类型\r\n            \r\n","android.net.LocalSocket.close()":"android.net.LocalSocket.close()\r\n","Convenience function for retrieving a single system settings value\n            as a ":"检索单个系统设置值的便捷功能\r\n            作为一个\r\n","the existing instance to copy data from.":"要从中复制数据的现有实例。\r\n","android.media.MediaDrm.ErrorCodes.ERROR_GENERIC_OEM":"android.media.MediaDrm.ErrorCodes.ERROR_GENERIC_OEM\r\n","stroke":"中风\r\n","Indicates whether this thread contains any attachments.":"指示此线程是否包含任何附件。\r\n","android.provider.ContactsContract.Intents.SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED":"android.provider.ContactsContract.Intents.SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED\r\n","android.provider.ContactsContract.DataColumns.IS_READ_ONLY":"android.provider.ContactsContract.DataColumns.IS_READ_ONLY\r\n","android.media.MediaSession2.ControllerInfo.getUid()":"android.media.MediaSession2.ControllerInfo.getUid()\r\n","android.inputmethodservice.InputMethodService.InputMethodSessionImpl.toggleSoftInput(int, int)":"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.toggleSoftInput(int, int)\r\n","current antibanding. null if antibanding setting is not\n                    supported.":"当前抗带。 null 如果反带设置不是\r\n                    支持的。\r\n","Notifies the system of a change in the list of directories handled by\n            a particular directory provider.":"通知系统处理的目录列表发生变化\r\n            一个特定的目录提供者。\r\n","Gets variant for effect engine See ":"获取效果引擎的变体 请参见\r\n","android.app.assist.AssistStructure.ViewNode.getTextLineBaselines()":"android.app.assist.AssistStructure.ViewNode.getTextLineBaselines()\r\n","android.provider.Telephony.TextBasedSmsColumns.PROTOCOL":"android.provider.Telephony.TextBasedSmsColumns.PROTOCOL\r\n","This setting controls whether WiFi configurations created by a Device Owner app\n            should be locked down (that is, be editable or removable only by the Device Owner App,\n            not even by Settings app).":"此设置控制是否由设备所有者应用程序创建的 WiFi 配置\r\n            应该被锁定（也就是说，只能由设备所有者应用程序编辑或删除，\r\n            甚至不通过设置应用程序）。\r\n","AVC Constrained High profile.":"AVC 约束高调。\r\n","android.provider.Contacts.GroupMembership.GROUP_SYNC_ID":"android.provider.Contacts.GroupMembership.GROUP_SYNC_ID\r\n","android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener":"android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener\r\n","Error type: transport failure.":"错误类型：传输失败。\r\n","android.provider.ContactsContract.DataColumns.DATA5":"android.provider.ContactsContract.DataColumns.DATA5\r\n","M.":"M.\r\n","android.hardware.camera2.CaptureRequest.Builder.setTag(java.lang.Object)":"android.hardware.camera2.CaptureRequest.Builder.setTag(java.lang.Object)\r\n","Rethrow this as an unchecked runtime exception.":"将此作为未经检查的运行时异常重新抛出。\r\n","android.app.SearchManager.OnCancelListener":"android.app.SearchManager.OnCancelListener\r\n","Return the name this request was submitted through\n            ":"返回提交此请求的名称\r\n            \r\n","Returns the boolean value set for the property.":"返回为属性设置的布尔值。\r\n","android.graphics.Typeface.CustomFallbackBuilder.build()":"android.graphics.Typeface.CustomFallbackBuilder.build()\r\n","android.provider.CalendarContract.EventsEntity":"android.provider.CalendarContract.EventsEntity\r\n","android.media.tv.TvContract.PreviewPrograms.CONTENT_URI":"android.media.tv.TvContract.PreviewPrograms.CONTENT_URI\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityPreDestroyed(android.app.Activity)":"android.app.Application.ActivityLifecycleCallbacks.onActivityPreDestroyed(android.app.Activity)\r\n","#EVENT_INPUT":"#EVENT_INPUT\r\n"," may be called.":" 可能会被调用。\r\n","android.os.Build.VERSION_CODES.P":"android.os.Build.VERSION_CODES.P\r\n","android.hardware.camera2.CameraManager.TorchCallback.onTorchModeChanged(java.lang.String, boolean)":"android.hardware.camera2.CameraManager.TorchCallback.onTorchModeChanged(java.lang.String, boolean)\r\n","Returns the operation result code.":"返回操作结果代码。\r\n","android.app.Fragment.postponeEnterTransition()":"android.app.Fragment.postponeEnterTransition()\r\n","android.media.tv.TvInputService.HardwareSession":"android.media.tv.TvInputService.HardwareSession\r\n","Content in this property should only be returned for queries matching the exact tokens\n            appearing in this property.":"此属性中的内容应仅针对与确切标记匹配的查询返回\r\n            出现在这个属性中。\r\n","Create a new generic command request.":"创建一个新的通用命令请求。\r\n","the type of info or warning.\n            <ul>\n            <li>":"信息或警告的类型。\r\n            <ul>\r\n            <李>\r\n","android.provider.CalendarContract.ExtendedPropertiesColumns.NAME":"android.provider.CalendarContract.ExtendedPropertiesColumns.NAME\r\n","android.media.browse.MediaBrowser.SubscriptionCallback.onError(java.lang.String, android.os.Bundle)":"android.media.browse.MediaBrowser.SubscriptionCallback.onError(java.lang.String, android.os.Bundle)\r\n","Build#FINGERPRINT":"建造#指纹\r\n","android.graphics.pdf.PdfDocument.PageInfo.getPageHeight()":"android.graphics.pdf.PdfDocument.PageInfo.getPageHeight()\r\n","Determines which streams are affected by ringer and zen mode changes.":"确定哪些流受铃声和禅宗模式更改的影响。\r\n","Returns how the property is indexed.":"返回属性的索引方式。\r\n"," for every evaluate() call.":" 对于每个 evaluate() 调用。\r\n","Filled in with the ultimate resource value supplied\n                            by the attribute.":"填写最终提供的资源值\r\n                            由属性。\r\n","android.media.MediaMuxer.OutputFormat":"android.media.MediaMuxer.OutputFormat\r\n","Interface for receiving a callback when the process hosting an IBinder\n            has gone away.":"当进程托管 IBinder 时接收回调的接口\r\n            已经走了。\r\n","The search snippet constructed by SQLite snippeting functionality.":"由 SQLite 片段功能构建的搜索片段。\r\n","android.media.MediaDrm.MetricsConstants.SESSION_END_TIMES_MS":"android.media.MediaDrm.MetricsConstants.SESSION_END_TIMES_MS\r\n","Report Id.":"报告编号。\r\n","android.content.pm.LauncherApps.ShortcutQuery.FLAG_MATCH_DYNAMIC":"android.content.pm.LauncherApps.ShortcutQuery.FLAG_MATCH_DYNAMIC\r\n","android.app.Instrumentation.ActivityMonitor.waitForActivityWithTimeout(long)":"android.app.Instrumentation.ActivityMonitor.waitForActivityWithTimeout(长)\r\n","android.media.midi.MidiReceiver.flush()":"android.media.midi.MidiReceiver.flush()\r\n","android.provider.UserDictionary.Words.APP_ID":"android.provider.UserDictionary.Words.APP_ID\r\n","The peak value in mB.":"以 mB 为单位的峰值。\r\n","SessionInfo#INVALID_ID":"会话信息#INVALID_ID\r\n","the uncompressed contents of the entry, or null if the contents were lost":"条目的未压缩内容，如果内容丢失则为 null\r\n","android.content.res.Resources.getString(int)":"android.content.res.Resources.getString(int)\r\n","A class to read the metadata published by a ":"读取由 a 发布的元数据的类\r\n","android.media.MediaDrm.OnEventListener.onEvent(android.media.MediaDrm, byte[], int, int, byte[])":"android.media.MediaDrm.OnEventListener.onEvent(android.media.MediaDrm, byte[], int, int, byte[])\r\n","android.hardware.biometrics.BiometricManager.Strings":"android.hardware.biometrics.BiometricManager.Strings\r\n","SMIA 8-bit Bayer format.":"SMIA 8 位拜耳格式。\r\n","android.graphics.Paint.FontMetrics.top":"android.graphics.Paint.FontMetrics.top\r\n","android.os.Debug.MemoryInfo.otherPrivateDirty":"android.os.Debug.MemoryInfo.otherPrivateDirty\r\n","android.os.IBinder.DeathRecipient":"android.os.IBinder.DeathRecipient\r\n","the picture format":"图片格式\r\n","The ISO 3166-1 two letters country code of the country where the\n            user received or made the call.":"ISO 3166-1 所在国家的两个字母国家代码\r\n            用户接听或拨打电话。\r\n"," range, with the associated value type.":" 范围，具有关联的值类型。\r\n"," instance to receive callbacks on every animation\n            frame to receive the total time since the animator started and the delta time\n            since the last frame.":" 接收每个动画回调的实例\r\n            frame 接收自动画师开始以来的总时间和增量时间\r\n            从上一帧开始。\r\n","AudioEffect#EFFECT_TYPE_HAPTIC_GENERATOR":"音频效果#EFFECT_TYPE_HAPTIC_GENERATOR\r\n","android.provider.ContactsContract.Directory.EXPORT_SUPPORT_ANY_ACCOUNT":"android.provider.ContactsContract.Directory.EXPORT_SUPPORT_ANY_ACCOUNT\r\n","android.provider.ContactsContract.Directory.EXPORT_SUPPORT_NONE":"android.provider.ContactsContract.Directory.EXPORT_SUPPORT_NONE\r\n","android.media.MediaDrm.OnKeyStatusChangeListener":"android.media.MediaDrm.OnKeyStatusChangeListener\r\n","Sets the inputGain value in decibels (dB) for ALL channels":"为所有通道设置以分贝 (dB) 为单位的 inputGain 值\r\n","android.provider.Telephony.MmsSms.SMS_PROTO":"android.provider.Telephony.MmsSms.SMS_PROTO\r\n","android.os.PerformanceHintManager.Session.close()":"android.os.PerformanceHintManager.Session.close()\r\n","android.content.SharedPreferences.getFloat(java.lang.String, float)":"android.content.SharedPreferences.getFloat(java.lang.String, float)\r\n","Summary of a document, which may be shown to a user.":"可以向用户显示的文档摘要。\r\n","android.media.tv.TvInputService.Session.onOverlayViewSizeChanged(int, int)":"android.media.tv.TvInputService.Session.onOverlayViewSizeChanged(int, int)\r\n","android.provider.Contacts.Settings.DEFAULT_SORT_ORDER":"android.provider.Contacts.Settings.DEFAULT_SORT_ORDER\r\n","android.provider.CalendarContract.CalendarCache.KEY_TIMEZONE_INSTANCES_PREVIOUS":"android.provider.CalendarContract.CalendarCache.KEY_TIMEZONE_INSTANCES_PREVIOUS\r\n","android.app.assist.AssistStructure.ViewNode.getWidth()":"android.app.assist.AssistStructure.ViewNode.getWidth()\r\n","connectedDevice":"连接设备\r\n","The drawable started the animation.":"可绘制对象启动了动画。\r\n","android.os.health.TimerStat.describeContents()":"android.os.health.TimerStat.describeContents()\r\n","android.content.Context#startActivity(Intent, Bundle)":"android.content.Context#startActivity（意图，捆绑包）\r\n","android.provider.ContactsContract.Directory.SHORTCUT_SUPPORT":"android.provider.ContactsContract.Directory.SHORTCUT_SUPPORT\r\n","android.hardware.Camera.Parameters.setPreviewFrameRate(int)":"android.hardware.Camera.Parameters.setPreviewFrameRate(int)\r\n","The uid of the remote user":"远程用户的uid\r\n","selfChange":"自我改变\r\n","android.location.GnssStatus.Callback.onFirstFix(int)":"android.location.GnssStatus.Callback.onFirstFix(int)\r\n","android.graphics.text.LineBreaker.ParagraphConstraints.getDefaultTabStop()":"android.graphics.text.LineBreaker.ParagraphConstraints.getDefaultTabStop()\r\n","#setBandLevel(short,short)":"#setBandLevel（短，短）\r\n","Notifies the start of the animation.":"通知动画开始。\r\n","the caller's session description":"调用者的会话描述\r\n","Content uri used to access call log entries, including voicemail records.":"内容 uri 用于访问通话记录条目，包括语音邮件记录。\r\n","android.media.AudioTrack.attachAuxEffect(int)":"android.media.AudioTrack.attachAuxEffect(int)\r\n","This method is called when the buffer pre-allocation for an output Surface is complete.":"当输出表面的缓冲区预分配完成时，将调用此方法。\r\n"," style URL for this table, for obsolete threads.":" 此表的样式 URL，用于过时的线程。\r\n","android.app.admin.FactoryResetProtectionPolicy.Builder.build()":"android.app.admin.FactoryResetProtectionPolicy.Builder.build()\r\n","android.media.tv.TvContract.Channels.TYPE_ISDB_TB":"android.media.tv.TvContract.Channels.TYPE_ISDB_TB\r\n","android.provider.FontsContract.Columns":"android.provider.FontsContract.Columns\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityStopped(android.app.Activity)":"android.app.Application.ActivityLifecycleCallbacks.onActivityStopped(android.app.Activity)\r\n","android.provider.Contacts.Phones.CONTENT_FILTER_URL":"android.provider.Contacts.Phones.CONTENT_FILTER_URL\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityPreResumed(android.app.Activity)":"android.app.Application.ActivityLifecycleCallbacks.onActivityPreResumed(android.app.Activity)\r\n","The name of the property being animated. Can also be the\n                                case-sensitive name of the entire setter method. Should not be null.\n                                The setter must take exactly two ":"正在动画的属性的名称。也可以是\r\n                                整个 setter 方法的名称区分大小写。不应为空。\r\n                                二传手必须正好拿两个\r\n","android.provider.Contacts.People.CONTENT_ITEM_TYPE":"android.provider.Contacts.People.CONTENT_ITEM_TYPE\r\n","Returns true if this node is opaque.":"如果此节点不透明，则返回 true。\r\n","android.media.MediaDrm.ErrorCodes.ERROR_ZERO_SUBSAMPLES":"android.media.MediaDrm.ErrorCodes.ERROR_ZERO_SUBSAMPLES\r\n","android.provider.ContactsContract.Settings.CONTENT_URI":"android.provider.ContactsContract.Settings.CONTENT_URI\r\n","android.provider.SyncStateContract.Helpers.set(android.content.ContentProviderClient, android.net.Uri, android.accounts.Account, byte[])":"android.provider.SyncStateContract.Helpers.set(android.content.ContentProviderClient, android.net.Uri, android.accounts.Account, byte[])\r\n","android.os.Debug.MemoryInfo.getTotalSharedDirty()":"android.os.Debug.MemoryInfo.getTotalSharedDirty()\r\n","The OnParameterChangeListener interface defines a method called by the EnvironmentalReverb\n            when a parameter value has changed.":"OnParameterChangeListener 接口定义了一个由 EnvironmentalReverb 调用的方法\r\n            当参数值改变时。\r\n","Contains carrier identification information for the current subscriptions.":"包含当前订阅的运营商标识信息。\r\n","the MediaPlayer that is ready for playback":"准备播放的 MediaPlayer\r\n","Activity#onStart super.onStart()":"活动#onStart super.onStart()\r\n","android.provider.ContactsContract.AggregationExceptions.TYPE":"android.provider.ContactsContract.AggregationExceptions.TYPE\r\n","the corresponding content URI, or null if not present":"相应的内容 URI，如果不存在则为 null\r\n","android.preference.PreferenceActivity.Header.getSummary(android.content.res.Resources)":"android.preference.PreferenceActivity.Header.getSummary(android.content.res.Resources)\r\n","android.provider.Settings.Secure.HTTP_PROXY":"android.provider.Settings.Secure.HTTP_PROXY\r\n","#DIRECTORY_ALARMS":"#DIRECTORY_ALARMS\r\n"," with existing\n            ":" 与现有的\r\n            \r\n","Returns the height of this view, in pixels.":"返回此视图的高度，以像素为单位。\r\n","desired for compressor in milliseconds (ms)":"压缩机所需的毫秒数 (ms)\r\n","Play an item with a specific id in the play queue.":"在播放队列中播放具有特定 id 的项目。\r\n"," of the context\n            that created this session":" 上下文的\r\n            创建此会话\r\n","A label and description of the current state of this task.":"此任务当前状态的标签和描述。\r\n","android.hardware.Camera.Parameters.getMaxNumFocusAreas()":"android.hardware.Camera.Parameters.getMaxNumFocusAreas()\r\n","returns enabled state of the band -or- sets enabled state of the band":"返回带的启用状态 - 或 - 设置带的启用状态\r\n","android.provider.ContactsContract.StatusColumns.CAPABILITY_HAS_VIDEO":"android.provider.ContactsContract.StatusColumns.CAPABILITY_HAS_VIDEO\r\n","android.media.tv.TvView.TvInputCallback.onContentAllowed(java.lang.String)":"android.media.tv.TvView.TvInputCallback.onContentAllowed(java.lang.String)\r\n","android.media.MediaCodecInfo.EncoderCapabilities.BITRATE_MODE_CBR_FD":"android.media.MediaCodecInfo.EncoderCapabilities.BITRATE_MODE_CBR_FD\r\n","android.provider.Telephony.BaseMmsColumns.CREATOR":"android.provider.Telephony.BaseMmsColumns.CREATOR\r\n","android.provider.Settings.Secure.ANDROID_ID":"android.provider.Settings.Secure.ANDROID_ID\r\n","GenericDocument#getNamespace":"通用文档#getNamespace\r\n","Decryption was attempted on a session that is not opened, which could\n            be due to a failure to open the session, closing the session\n            prematurely, the session being reclaimed by the resource manager, or\n            a non-existent session id.":"在未打开的会话上尝试解密，这可能\r\n            是由于打开session失败，关闭session\r\n            过早地，会话被资源管理器回收，或者\r\n            一个不存在的会话 ID。\r\n","BroadcastReceiver#clearAbortBroadcast()\n            BroadcastReceiver.clearAbortBroadcast()":"广播接收器#clearAbortBroadcast()\r\n            BroadcastReceiver.clearAbortBroadcast()\r\n","android.media.MediaDrm.CryptoSession.encrypt(byte[], byte[], byte[])":"android.media.MediaDrm.CryptoSession.encrypt（字节[]，字节[]，字节[]）\r\n"," to\n            call the contact with.":"到\r\n            打电话给联系人。\r\n","the Typeface object":"字体对象\r\n","android.media.MediaDrm.MetricsConstants":"android.media.MediaDrm.MetricsConstants\r\n","android.graphics.pdf.PdfRenderer.Page.getHeight()":"android.graphics.pdf.PdfRenderer.Page.getHeight()\r\n","android.media.MediaParser.InputReader.read(byte[], int, int)":"android.media.MediaParser.InputReader.read(byte[], int, int)\r\n","android.provider.Telephony.Threads.CONTENT_URI":"android.provider.Telephony.Threads.CONTENT_URI\r\n","android.provider.CalendarContract.EventsColumns.EVENT_LOCATION":"android.provider.CalendarContract.EventsColumns.EVENT_LOCATION\r\n","The red component to encode from linear space":"从线性空间编码的红色分量\r\n","android.media.tv.TvContract.Channels.VIDEO_FORMAT_4320P":"android.media.tv.TvContract.Channels.VIDEO_FORMAT_4320P\r\n","Close this socket.":"关闭这个套接字。\r\n","persistAcrossReboots":"坚持跨重启\r\n","Defines whether playback associated with this route is \"local\"\n               (":"定义与此路由关联的播放是否为“本地”\r\n               (\r\n","android.provider.ContactsContract.StreamItemsColumns.CONTACT_LOOKUP_KEY":"android.provider.ContactsContract.StreamItemsColumns.CONTACT_LOOKUP_KEY\r\n","android.hardware.Camera.CameraInfo.CAMERA_FACING_FRONT":"android.hardware.Camera.CameraInfo.CAMERA_FACING_FRONT\r\n","Key to extract the start times of sessions.":"提取会话开始时间的键。\r\n","android.content.pm.PackageInstaller.SessionInfo.getSessionId()":"android.content.pm.PackageInstaller.SessionInfo.getSessionId()\r\n","android.graphics.ColorSpace.Rgb.ColorSpace$Rgb(java.lang.String, float[], java.util.function.DoubleUnaryOperator, java.util.function.DoubleUnaryOperator)":"android.graphics.ColorSpace.Rgb.ColorSpace$Rgb(java.lang.String, float[], java.util.function.DoubleUnaryOperator, java.util.function.DoubleUnaryOperator)\r\n","android.app.Notification.Style.internalSetBigContentTitle(java.lang.CharSequence)":"android.app.Notification.Style.internalSetBigContentTitle(java.lang.CharSequence)\r\n","android.drm.DrmManagerClient.OnErrorListener":"android.drm.DrmManagerClient.OnErrorListener\r\n","The reason why the video became unavailable:\n                       <ul>\n                       <li>":"视频不可用的原因：\r\n                       <ul>\r\n                       <李>\r\n","android.hardware.biometrics.BiometricPrompt.AuthenticationCallback":"android.hardware.biometrics.BiometricPrompt.AuthenticationCallback\r\n","android.provider.ContactsContract.Data.getContactLookupUri(android.content.ContentResolver, android.net.Uri)":"android.provider.ContactsContract.Data.getContactLookupUri(android.content.ContentResolver, android.net.Uri)\r\n","byte array, containing zero to (2 ** 32 - 1) bytes,\n                           or null":"字节数组，包含零到 (2 ** 32 - 1) 个字节，\r\n                           或空\r\n","#REQUEST_TYPE_APPWIDGET":"#REQUEST_TYPE_APPWIDGET\r\n","android.hardware.Camera.Parameters.setFlashMode(java.lang.String)":"android.hardware.Camera.Parameters.setFlashMode(java.lang.String)\r\n","true for enabled, false otherwise":"启用时为 true，否则为 false\r\n","android.media.MediaCodec.BufferInfo.set(int, int, long, int)":"android.media.MediaCodec.BufferInfo.set(int, int, long, int)\r\n","android.media.tv.TvContract.RecordedPrograms.COLUMN_RECORDING_DATA_URI":"android.media.tv.TvContract.RecordedPrograms.COLUMN_RECORDING_DATA_URI\r\n","Called when the application sets the surface.":"当应用程序设置表面时调用。\r\n","Callback that delivers ":"传递的回调\r\n","android.net.LocalSocket.bind(android.net.LocalSocketAddress)":"android.net.LocalSocket.bind(android.net.LocalSocketAddress)\r\n",".\r\n        \r\n.\r\n        \r\n\r\n.\n        \r\n.\n        ":".\r\n        \r\n.\r\n        \r\n\r\n.\r\n        \r\n.\r\n        \r\n","Callback for receiving the result of ":"接收结果的回调\r\n",", but cannot exceed it.":"，但不能超过。\r\n","DER PKCS#7 detached signature bytes over binary serialized checksums\n                             to enable integrity checking for the checksums or null for no integrity\n                             checking. ":"DER PKCS#7 通过二进制序列化校验和分离签名字节\r\n                             为校验和启用完整性检查或为无完整性启用 null\r\n                             检查。\r\n","android.media.tv.TvContract.Channels.COLUMN_CHANNEL_LIST_ID":"android.media.tv.TvContract.Channels.COLUMN_CHANNEL_LIST_ID\r\n","the subscriptionId to receive updates on":"用于接收更新的 subscriptionId\r\n","android.print.PrinterInfo.Builder.PrinterInfo$Builder(android.print.PrinterInfo)":"android.print.PrinterInfo.Builder.PrinterInfo$Builder(android.print.PrinterInfo)\r\n","true if this instance has control of effect engine, false\n                    otherwise.":"如果此实例控制效果引擎，则为 true，否则为 false\r\n                    否则。\r\n","android.net.IpSecManager.UdpEncapsulationSocket.getFileDescriptor()":"android.net.IpSecManager.UdpEncapsulationSocket.getFileDescriptor()\r\n","android.app.ActivityManager.RunningServiceInfo.FLAG_SYSTEM_PROCESS":"android.app.ActivityManager.RunningServiceInfo.FLAG_SYSTEM_PROCESS\r\n","android.graphics.text.MeasuredText.Builder.build()":"android.graphics.text.MeasuredText.Builder.build()\r\n","android.media.MediaPlayer.getAudioSessionId()":"android.media.MediaPlayer.getAudioSessionId()\r\n","The content:// style URL for filtering this table on phone numbers":"用于根据电话号码过滤此表的 content:// 样式 URL\r\n","android.provider.CalendarContract.ExtendedPropertiesColumns.VALUE":"android.provider.CalendarContract.ExtendedPropertiesColumns.VALUE\r\n","android.media.MediaRouter.RouteGroup.setIconDrawable(android.graphics.drawable.Drawable)":"android.media.MediaRouter.RouteGroup.setIconDrawable(android.graphics.drawable.Drawable)\r\n","android.provider.Settings.System.VOLUME_ALARM":"android.provider.Settings.System.VOLUME_ALARM\r\n","the disconnected sensor. See ":"断开的传感器。看\r\n","android.os.Debug.MemoryInfo.getTotalSwappablePss()":"android.os.Debug.MemoryInfo.getTotalSwappablePss()\r\n","android.content.pm.PackageInstaller.SessionInfo.isActive()":"android.content.pm.PackageInstaller.SessionInfo.isActive()\r\n","android.hardware.Camera.Parameters.getSceneMode()":"android.hardware.Camera.Parameters.getSceneMode()\r\n","android.provider.ContactsContract.DataUsageStatColumns.TIMES_USED":"android.provider.ContactsContract.DataUsageStatColumns.TIMES_USED\r\n","#FAIL_REASON_FONT_NOT_FOUND":"#FAIL_REASON_FONT_NOT_FOUND\r\n",": Unmute the content associated with the notification.":"：取消静音与通知相关的内容。\r\n","The channel number that is displayed to the user.":"显示给用户的频道号。\r\n","An optional name that can be used in the UI to represent this directory,\n            e.":"可在 UI 中用于表示此目录的可选名称，\r\n            e.\r\n","android.media.audiofx.DynamicsProcessing.Eq":"android.media.audiofx.DynamicsProcessing.Eq\r\n","android.provider.Telephony.ThreadsColumns.SNIPPET_CHARSET":"android.provider.Telephony.ThreadsColumns.SNIPPET_CHARSET\r\n","android.provider.Contacts.SettingsColumns._SYNC_ACCOUNT_TYPE":"android.provider.Contacts.SettingsColumns._SYNC_ACCOUNT_TYPE\r\n","android.provider.CallLog.Locations.LONGITUDE":"android.provider.CallLog.Locations.LONGITUDE\r\n","android.content.pm.PackageInstaller.Session.isMultiPackage()":"android.content.pm.PackageInstaller.Session.isMultiPackage()\r\n","android.content.ClipData.Item.coerceToHtmlText(android.content.Context)":"android.content.ClipData.Item.coerceToHtmlText(android.content.Context)\r\n","android.media.AudioMetadataMap":"android.media.AudioMetadataMap\r\n","\n            passed as parameter.":"\r\n            作为参数传递。\r\n","android.media.Image.Plane":"android.media.Image.Plane\r\n","android.media.MediaCodec.MetricsConstants.WIDTH":"android.media.MediaCodec.MetricsConstants.WIDTH\r\n","package name of the controller.":"控制器的包名。\r\n","android.provider.CalendarContract.CalendarColumns.CAL_ACCESS_OWNER":"android.provider.CalendarContract.CalendarColumns.CAL_ACCESS_OWNER\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatRawBayer10bit":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatRawBayer10bit\r\n"," providing a directory of\n            phones.":" 提供一个目录\r\n            电话。\r\n","The reason why the document failed to be indexed.":"文档未能被索引的原因。\r\n","android.graphics.text.LineBreaker.ParagraphConstraints.setWidth(float)":"android.graphics.text.LineBreaker.ParagraphConstraints.setWidth(浮动)\r\n","The Cap specifies the treatment for the beginning and ending of\n            stroked lines and paths.":"上限指定了开始和结束的处理方式\r\n            描边线和路径。\r\n","Returns error code associated with this ":"返回与此关联的错误代码\r\n","#EXPORT_SUPPORT_NONE":"#EXPORT_SUPPORT_NONE\r\n","An additional ordering within a particular ":"特定范围内的额外排序\r\n","NotificationManager#notify(int, Notification)":"NotificationManager#notify(int, 通知)\r\n","package name for the default SMS package or null":"默认 SMS 包的包名或 null\r\n","android.content.DialogInterface.OnDismissListener":"android.content.DialogInterface.OnDismissListener\r\n","A comma separated list of radios that need to be disabled when airplane mode\n            is on.":"飞行模式下需要禁用的以逗号分隔的无线电列表\r\n            是。\r\n","android.content.res.Configuration.diff(android.content.res.Configuration)":"android.content.res.Configuration.diff（android.content.res.Configuration）\r\n","android.media.ImageReader.OnImageAvailableListener":"android.media.ImageReader.OnImageAvailableListener\r\n","the session received during\n                             ":"期间收到的会话\r\n                             \r\n","android.provider.CallLog.Calls.FEATURES_RTT":"android.provider.CallLog.Calls.FEATURES_RTT\r\n","android.app.DownloadManager.Request.NETWORK_WIFI":"android.app.DownloadManager.Request.NETWORK_WIFI\r\n","VcnGatewayConnectionConfig":"VcnGatewayConnectionConfig\r\n"," itself providing a directory of blocked phone\n            numbers.":" 本身提供被阻止电话的目录\r\n            数字。\r\n","the URI of the contact, or null if the operation fails":"联系人的 URI，如果操作失败则返回 null\r\n","android.media.audiofx.Equalizer.getCenterFreq(short)":"android.media.audiofx.Equalizer.getCenterFreq（短）\r\n","android.media.tv.TvView.TvInputCallback":"android.media.tv.TvView.TvInputCallback\r\n","Tokenization for plain text.":"纯文本的标记化。\r\n","android.provider.CalendarContract.Instances.END":"android.provider.CalendarContract.Instances.END\r\n","android.app.KeyguardManager.KeyguardLock":"android.app.KeyguardManager.KeyguardLock\r\n","one of the ":"中的一个\r\n","fraction":"分数\r\n","android.provider.ContactsContract.ContactOptionsColumns.STARRED":"android.provider.ContactsContract.ContactOptionsColumns.STARRED\r\n"," instance that wraps the error type and message.":" 包装错误类型和消息的实例。\r\n","android.media.AudioTrack.AudioTrack(android.media.AudioAttributes, android.media.AudioFormat, int, int, int)":"android.media.AudioTrack.AudioTrack(android.media.AudioAttributes, android.media.AudioFormat, int, int, int)\r\n","android.content.SharedPreferences.getBoolean(java.lang.String, boolean)":"android.content.SharedPreferences.getBoolean(java.lang.String, boolean)\r\n","android.inputmethodservice.Keyboard.Key.onPressed()":"android.inputmethodservice.Keyboard.Key.onPressed()\r\n","The user-visible name of the route.":"路由的用户可见名称。\r\n","the PointF coordinates (float values) of the \n                         face's mid-point":"的 PointF 坐标（浮点值）\r\n                         脸的中点\r\n","Interface definition of a callback to be invoked when discontinuity in the normal progression\n            of the media time is detected.":"正常进程中断时调用的回调的接口定义\r\n            检测到媒体时间。\r\n","Constants for the data table, which contains data points tied to a raw\n            contact.":"数据表的常量，其中包含与原始数据相关联的数据点\r\n            接触。\r\n","android.app.Notification.Style.build()":"android.app.Notification.Style.build()\r\n","true if Mbc stage will be used, false otherwise. This can't be changed\n            later.":"如果将使用 Mbc 阶段，则为 true，否则为 false。这无法更改\r\n            之后。\r\n","#MEASUREMENT_MODE_NONE":"#MEASUREMENT_MODE_NONE\r\n","Defines how the event shows up for others when the calendar is\n            shared.":"定义事件在日历结束时如何显示给其他人\r\n            共享。\r\n","Failed to restore an offline license because a field in the offline\n            license is empty or malformed.":"无法恢复离线许可证，因为离线中的字段\r\n            许可证为空或格式错误。\r\n","The red component to decode to linear space":"解码到线性空间的红色分量\r\n","android.provider.ContactsContract.RawContactsEntity.DATA_ID":"android.provider.ContactsContract.RawContactsEntity.DATA_ID\r\n","the code of the key that was released":"释放的密钥的代码\r\n","android.app.appsearch.GenericDocument.Builder.build()":"android.app.appsearch.GenericDocument.Builder.build()\r\n","The key to ask the provider to defer the formatting of the snippet to the client if\n            possible, for performance reasons.":"要求提供者将代码段的格式设置推迟给客户端的关键，如果\r\n            可能，出于性能原因。\r\n","android.provider.DocumentsContract.Root.COLUMN_DOCUMENT_ID":"android.provider.DocumentsContract.Root.COLUMN_DOCUMENT_ID\r\n","Create a complex Item, containing multiple representations of\n            text, HTML text, Intent, and/or URI.":"创建一个复杂的项目，包含多个表示\r\n            文本、HTML 文本、意图和/或 URI。\r\n","android.opengl.GLSurfaceView.EGLWindowSurfaceFactory.createWindowSurface(javax.microedition.khronos.egl.EGL10, javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object)":"android.opengl.GLSurfaceView.EGLWindowSurfaceFactory.createWindowSurface（javax.microedition.khronos.egl.EGL10，javax.microedition.khronos.egl.EGLDisplay，javax.microedition.khronos.egl.EGLConfig，java.lang.Object）\r\n","If you handled the event, return true.  If you want to allow\n                    the event to be handled by the next receiver, return false.":"如果您处理了该事件，则返回 true。如果你想允许\r\n                    下一个接收者要处理的事件，返回 false。\r\n","Return all APK names contained in this session.":"返回此会话中包含的所有 APK 名称。\r\n","Invoked when a VCN Gateway Connection corresponding to this callback's subscription group\n            encounters an error.":"当一个 VCN 网关连接对应于此回调的订阅组时调用\r\n            遇到错误。\r\n","#TYPE_KEEP_SEPARATE":"#TYPE_KEEP_SEPARATE\r\n","android.os.Build.VERSION.RELEASE":"android.os.Build.VERSION.RELEASE\r\n","Optional parameters for the command, may be null.":"命令的可选参数，可以为空。\r\n","android.graphics.BitmapFactory.Options.outMimeType":"android.graphics.BitmapFactory.Options.outMimeType\r\n","android.provider.Contacts.PhonesColumns":"android.provider.Contacts.PhonesColumns\r\n","#DIRECTORY_PICTURES":"#DIRECTORY_PICTURES\r\n","android.media.MediaMuxer.OutputFormat.MUXER_OUTPUT_MPEG_4":"android.media.MediaMuxer.OutputFormat.MUXER_OUTPUT_MPEG_4\r\n","The media type of the audio encoder being used for the video track":"用于视频轨道的音频编码器的媒体类型\r\n","Checks if the combination of a channel mask and virtualization mode is supported by this\n            virtualizer.":"检查此通道掩码和虚拟化模式的组合是否受支持\r\n            虚拟器。\r\n","android.provider.SyncStateContract.Columns.DATA":"android.provider.SyncStateContract.Columns.DATA\r\n","Name to display to the user to describe this route":"显示给用户以描述此路线的名称\r\n","sampling rate of the visualized audio.":"可视化音频的采样率。\r\n","android.os.BugreportManager.BugreportCallback.BUGREPORT_ERROR_RUNTIME":"android.os.BugreportManager.BugreportCallback.BUGREPORT_ERROR_RUNTIME\r\n","android.media.MediaRouter2.RoutingController.deselectRoute(android.media.MediaRoute2Info)":"android.media.MediaRouter2.RoutingController.deselectRoute(android.media.MediaRoute2Info)\r\n","Thread type: broadcast thread.":"线程类型：广播线程。\r\n","android.provider.Contacts.ContactMethods.addPostalLocation(android.content.Context, long, double, double)":"android.provider.Contacts.ContactMethods.addPostalLocation（android.content.Context，长，双，双）\r\n","#DIRTY":"＃肮脏的\r\n","The work source, or null if none.":"工作来源，如果没有则为 null。\r\n","android.hardware.Camera.Parameters.getPreviewFpsRange(int[])":"android.hardware.Camera.Parameters.getPreviewFpsRange(int[])\r\n","Protocol Mode.":"协议模式。\r\n","A playback type indicating the presentation of the media is happening on\n            a different device (i&#46;e&#46; the remote device) than where it is controlled from.":"表示媒体呈现的播放类型发生在\r\n            与控制它的地方不同的设备（即远程设备）。\r\n","android.media.tv.TvInputService.Session.notifyVideoUnavailable(int)":"android.media.tv.TvInputService.Session.notifyVideoUnavailable(int)\r\n","The video resolution for standard-definition.":"标准清晰度的视频分辨率。\r\n","android.provider.Contacts.People.addToMyContactsGroup(android.content.ContentResolver, long)":"android.provider.Contacts.People.addToMyContactsGroup（android.content.ContentResolver，长）\r\n","A previously-available physical camera has become unavailable for use.":"以前可用的物理相机已无法使用。\r\n","The timestamp of the last update that occurred to the session, including changing of\n            states in case of staged sessions.":"会话发生的最后一次更新的时间戳，包括更改\r\n            在分阶段会议的情况下的状态。\r\n","This is called when the start position for time shifting has changed.":"当时移的开始位置发生变化时调用。\r\n","android.provider.CalendarContract.AttendeesColumns.ATTENDEE_EMAIL":"android.provider.CalendarContract.AttendeesColumns.ATTENDEE_EMAIL\r\n","android.accessibilityservice.GestureDescription.StrokeDescription.getPath()":"android.accessibilityservice.GestureDescription.StrokeDescription.getPath()\r\n","'s configuration methods.":"的配置方法。\r\n","Setting to record the input method subtype used by default, holding the ID\n            of the desired method.":"设置记录默认使用的输入法子类型，持有ID\r\n            所需的方法。\r\n","https://example.com/login?user=my_user":"https://example.com/login?user=my_user\r\n","Returns a socket factory (also named SSLSocketFactory, but in a different\n            namespace) for use with the Apache HTTP stack.":"返回套接字工厂（也称为 SSLSocketFactory，但在不同的\r\n            命名空间）用于 Apache HTTP 堆栈。\r\n","Called on the implementer to notify it that the playback head should be set at the given\n            position.":"调用实现者通知它播放头应该设置在给定的位置\r\n            位置。\r\n","time when the entry was originally created.":"最初创建条目的时间。\r\n","offset into the file to begin writing at, or 0 to\n                       start at the beginning of the file.":"在文件中开始写入的偏移量，或 0 到\r\n                       从文件的开头开始。\r\n","either the input argument or another GL object that wraps the input argument.":"输入参数或包装输入参数的另一个 GL 对象。\r\n","An array of one or more voice prompts. Must not be empty or null.":"一组一个或多个语音提示。不得为空或 null。\r\n","The channel type for ISDB-Tb (Brazil).":"ISDB-Tb（巴西）的频道类型。\r\n","android.provider.CalendarContract.Instances.ENTERPRISE_CONTENT_URI":"android.provider.CalendarContract.Instances.ENTERPRISE_CONTENT_URI\r\n",", set this bit when\n            the call was missed just because user didn't answer it.":", 设置此位时\r\n            电话被错过只是因为用户没有接听。\r\n","Returns the action of the ":"返回的动作\r\n","an entier font descent of the line in pixels.":"以像素为单位的线的整个字体下降。\r\n","Gets inputGain value in decibels (dB). -or- Sets inputGain value in decibels (dB).":"获取以分贝 (dB) 为单位的 inputGain 值。 - 或 - 以分贝 (dB) 为单位设置 inputGain 值。\r\n","Whether user action was required by the installer.":"安装程序是否需要用户操作。\r\n","getOrCreateThreadId":"getOrCreateThreadId\r\n","android.app.usage.UsageEvents.Event.getEventType()":"android.app.usage.UsageEvents.Event.getEventType()\r\n","Returns a start hyphen edit for the line.":"返回该行的开始连字符编辑。\r\n","#MEDIA_INFO_NOT_SEEKABLE":"#MEDIA_INFO_NOT_SEEKABLE\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format12bitRGB444":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format12bitRGB444\r\n","android.provider.Telephony.Carriers.MMSC":"android.provider.Telephony.Carriers.MMSC\r\n","Represents an unknown error while trying to install an update.":"表示尝试安装更新时出现未知错误。\r\n","Another Intent whose values are to be used to fill in\n            the current one.":"另一个 Intent，其值将用于填充\r\n            当前的。\r\n","Auto-generated ID field which monotonically increases.":"自动生成的单调递增的 ID 字段。\r\n","android.provider.SimPhonebookContract.SimRecords.PHONE_NUMBER":"android.provider.SimPhonebookContract.SimRecords.PHONE_NUMBER\r\n","android.os.AsyncTask":"android.os.AsyncTask\r\n","The green component of the color to transform":"要变换的颜色的绿色分量\r\n","android.hardware.Camera.Parameters.getColorEffect()":"android.hardware.Camera.Parameters.getColorEffect()\r\n","android.hardware.camera2.CameraCharacteristics.Key":"android.hardware.camera2.CameraCharacteristics.Key\r\n","&lt;adaptive-icon>":"<自适应图标>\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV422Planar":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV422Planar\r\n","android.provider.ContactsContract.Data":"android.provider.ContactsContract.Data\r\n","Arbitrary, app-specific data for this route to hold for later use":"此路由的任意特定于应用程序的数据以供以后使用\r\n","android.app.assist.AssistStructure.WindowNode.getLeft()":"android.app.assist.AssistStructure.WindowNode.getLeft()\r\n","Electro-optical transfer function, cannot be null":"电光传递函数，不能为空\r\n","The ARGB color int to create a ":"ARGB color int 创建一个\r\n","android.location.GnssAntennaInfo.SphericalCorrections.getCorrectionsArray()":"android.location.GnssAntennaInfo.SphericalCorrections.getCorrectionsArray()\r\n","#SPECIFIC_CARRIER_ID":"#SPECIFIC_CARRIER_ID\r\n","Create a FloatArrayEvaluator that reuses ":"创建一个重用的 FloatArrayEvaluator\r\n","an InputStream of the photo, or null if no photo is present":"照片的 InputStream，如果没有照片则为 null\r\n",". Otherwise, the document will be rejected by\n                ":".否则，文件将被拒绝\r\n                \r\n","android.provider.Telephony.ServiceStateTable.getUriForSubscriptionId(int)":"android.provider.Telephony.ServiceStateTable.getUriForSubscriptionId(int)\r\n","CalendarCache stores some settings for calendar including the current\n            time zone for the instances.":"CalendarCache 存储日历的一些设置，包括当前\r\n            实例的时区。\r\n","android.provider.Telephony.MmsSms.CONTENT_FILTER_BYPHONE_URI":"android.provider.Telephony.MmsSms.CONTENT_FILTER_BYPHONE_URI\r\n","Gain applied to the signal AFTER compression.":"压缩后应用于信号的增益。\r\n","android.content.ClipData.Item.getTextLinks()":"android.content.ClipData.Item.getTextLinks()\r\n","Gets number of bands configured for the Mbc stage.":"获取为 Mbc 阶段配置的波段数。\r\n","Returns true if the line has a TAB character.":"如果该行有 TAB 字符，则返回 true。\r\n","CustomAction":"自定义动作\r\n"," return.":" 返回。\r\n","Gets the id of the notification.":"获取通知的 ID。\r\n","Interface definition of a callback to be invoked indicating buffering\n            status of a media resource being streamed over the network.":"要调用的回调的接口定义指示缓冲\r\n            通过网络流式传输的媒体资源的状态。\r\n","true if the combination of channel mask and virtualization mode is supported, false\n               otherwise.\n               <br>An indication that a certain channel mask is not supported doesn't necessarily mean\n               you cannot play content with that channel mask, it more likely implies the content will\n               be downmixed before being virtualized. For instance a virtualizer that only supports a\n               mask such as ":"如果支持通道掩码和虚拟化模式的组合，则为 true，否则为 false\r\n               否则。\r\n               <br>表示不支持某个通道掩码并不一定意味着\r\n               您不能使用该频道掩码播放内容，这更可能意味着该内容将\r\n               在被虚拟化之前被缩混。例如，仅支持一个虚拟器\r\n               面具如\r\n"," if the shortcut or the AppWidget has actually been pinned.\n            ":" 如果快捷方式或 AppWidget 实际上已被固定。\r\n            \r\n","Called when the app widget is removed for appWidgetId":"当为 appWidgetId 移除应用小部件时调用\r\n","Gets the current volume of the session. -or- Requests a volume change for the remote session asynchronously.":"获取会话的当前音量。 - 或 - 异步请求远程会话的音量更改。\r\n","#closeSession":"#closeSession\r\n","android.graphics.Typeface.CustomFallbackBuilder.Typeface$CustomFallbackBuilder(android.graphics.fonts.FontFamily)":"android.graphics.Typeface.CustomFallbackBuilder.Typeface$CustomFallbackBuilder(android.graphics.fonts.FontFamily)\r\n","android.preference.PreferenceManager.OnActivityResultListener.onActivityResult(int, int, android.content.Intent)":"android.preference.PreferenceManager.OnActivityResultListener.onActivityResult(int, int, android.content.Intent)\r\n","Called right before the fragment's ":"在片段的之前调用\r\n","journal mode":"日志模式\r\n","NotificationManager#createNotificationChannel":"NotificationManager#createNotificationChannel\r\n","maximum exposure compensation index (>=0). If both this\n                    method and ":"最大曝光补偿指数（>=0）。如果这两个\r\n                    方法和\r\n"," ":"\r\n","The names of the packages that have just been suspended.":"刚刚暂停的包的名称。\r\n","Returns the root id or null if the calling package doesn't have\n            permission to access root information.":"如果调用包没有，则返回根 ID 或 null\r\n            访问根信息的权限。\r\n","android.provider.CalendarContract.CalendarColumns.VISIBLE":"android.provider.CalendarContract.CalendarColumns.VISIBLE\r\n","android.media.MediaCodec.OnFrameRenderedListener":"android.media.MediaCodec.OnFrameRenderedListener\r\n","\n            when the shared elements are ready to be hidden in the source Activity and shown in the\n            destination Activity.":"\r\n            当共享元素准备好隐藏在源 Activity 中并显示在\r\n            目的地活动。\r\n","Creates a new Drawable instance from its constant state using the\n            specified resources.":"使用\r\n            指定的资源。\r\n","The processing method to get this location.":"获取此位置的处理方法。\r\n","The name for this record.":"此记录的名称。\r\n","android.media.audiofx.EnvironmentalReverb.getDecayTime()":"android.media.audiofx.EnvironmentalReverb.getDecayTime()\r\n","#addMessage(Notification.MessagingStyle.Message)":"#addMessage(Notification.MessagingStyle.Message)\r\n","android.provider.ContactsContract.StreamItems.CONTENT_TYPE":"android.provider.ContactsContract.StreamItems.CONTENT_TYPE\r\n","The new output format.":"新的输出格式。\r\n","android.os.Build.VERSION_CODES#R Android R":"android.os.Build.VERSION_CODES#R 安卓 R\r\n","Attempt to commit everything staged in this session.":"尝试提交在此会话中上演的所有内容。\r\n","A Drawable can call this to unschedule an action previously\n            scheduled with ":"Drawable 可以调用它来取消之前的动作\r\n            预定与\r\n","Contact-specific information about whether or not a contact has been pinned by the user\n            at a particular position within the system contact application's user interface.":"有关联系人是否已被用户固定的联系人特定信息\r\n            在系统联系人应用程序用户界面内的特定位置。\r\n","android.provider.Browser.TRUNCATE_HISTORY_PROJECTION":"android.provider.Browser.TRUNCATE_HISTORY_PROJECTION\r\n","android.app.admin.SystemUpdatePolicy.ValidationFailedException.ERROR_COMBINED_FREEZE_PERIOD_TOO_LONG":"android.app.admin.SystemUpdatePolicy.ValidationFailedException.ERROR_COMBINED_FREEZE_PERIOD_TOO_LONG\r\n","android.provider.Contacts.PeopleColumns.CUSTOM_RINGTONE":"android.provider.Contacts.PeopleColumns.CUSTOM_RINGTONE\r\n","The list of tasks associated with the application making this call.":"与进行此调用的应用程序关联的任务列表。\r\n","Flag for trigger: also trigger if any descendants of the given URI change.":"触发器标志：如果给定 URI 的任何后代更改，也会触发。\r\n","Key to extract the width (in pixels) of the video track\n            from the ":"提取视频轨道宽度（以像素为单位）的键\r\n            来自\r\n","Called to indicate the video size":"调用以指示视频大小\r\n","android.hardware.Camera.Parameters.FOCUS_MODE_FIXED":"android.hardware.Camera.Parameters.FOCUS_MODE_FIXED\r\n","Interface definition for a callback that receives information\n            about DRM processing events.":"接收信息的回调的接口定义\r\n            关于 DRM 处理事件。\r\n","Get the maximum (inclusive) frequency in this range segment.":"获取此范围段中的最大（含）频率。\r\n","Method called when new subtitle data is available":"新字幕数据可用时调用的方法\r\n"," when the\n            codec is a video codec.":" 当。。。的时候\r\n            编解码器是一种视频编解码器。\r\n","android.media.Session2CommandGroup.Builder.Session2CommandGroup$Builder(android.media.Session2CommandGroup)":"android.media.Session2CommandGroup.Builder.Session2CommandGroup$Builder(android.media.Session2CommandGroup)\r\n","android.media.AudioRecord.MetricsConstants.LATENCY":"android.media.AudioRecord.MetricsConstants.LATENCY\r\n","RemoteControlClient#editMetadata(boolean)":"RemoteControlClient#editMetadata（布尔值）\r\n","Flexible 24 bits per pixel RGB color format with 8-bit red, green and blue\n            components.":"灵活的每像素 24 位 RGB 颜色格式，具有 8 位红色、绿色和蓝色\r\n            成分。\r\n","A builder that collects arguments to be shown on the system-provided biometric dialog.":"一个构建器，用于收集要在系统提供的生物识别对话框中显示的参数。\r\n","android.content.DialogInterface.OnMultiChoiceClickListener":"android.content.DialogInterface.OnMultiChoiceClickListener\r\n","Notifies that the layout finished and whether the content changed.":"通知布局已完成以及内容是否已更改。\r\n","android.hardware.camera2.CameraOfflineSession.CameraOfflineSessionCallback.STATUS_INTERNAL_ERROR":"android.hardware.camera2.CameraOfflineSession.CameraOfflineSessionCallback.STATUS_INTERNAL_ERROR\r\n","android.provider.ContactsContract.Contacts.CONTENT_ITEM_TYPE":"android.provider.ContactsContract.Contacts.CONTENT_ITEM_TYPE\r\n","Encapsulates the capabilities of a given codec component.":"封装给定编解码器组件的功能。\r\n","android.print.PrintAttributes.Resolution.getLabel()":"android.print.PrintAttributes.Resolution.getLabel()\r\n","Take care of killing an existing session by calling its\n            ":"小心通过调用其终止现有会话\r\n            \r\n","Uri#withAppendedPath(Uri, String)":"Uri#withAppendedPath(Uri, 字符串)\r\n","android.content.ClipData.Item.ClipData$Item(java.lang.CharSequence, java.lang.String)":"android.content.ClipData.Item.ClipData$Item(java.lang.CharSequence, java.lang.String)\r\n","android.content.pm.PackageInstaller.Session.fsync(java.io.OutputStream)":"android.content.pm.PackageInstaller.Session.fsync(java.io.OutputStream)\r\n","Which component to get enabled features for.":"为哪个组件获取启用的功能。\r\n"," to force a particular processing mode, or\n                ":" 强制特定的处理模式，或\r\n                \r\n","The included pages or ":"包含的页面或\r\n","android.media.tv.TvContract.WatchNextPrograms.COLUMN_LAST_ENGAGEMENT_TIME_UTC_MILLIS":"android.media.tv.TvContract.WatchNextPrograms.COLUMN_LAST_ENGAGEMENT_TIME_UTC_MILLIS\r\n","android.content.pm.PackageInstaller.SessionInfo.isStagedSessionApplied()":"android.content.pm.PackageInstaller.SessionInfo.isStagedSessionApplied()\r\n","Returns the name of the port, or empty string if the port has no name":"返回端口的名称，如果端口没有名称则返回空字符串\r\n","android.bluetooth.BluetoothHidDeviceAppQosSettings":"android.bluetooth.BluetoothHidDeviceAppQosSettings\r\n","true if stage is enabled for processing, false otherwise":"如果为处理启用阶段，则为 true，否则为 false\r\n","mapped memory region as ":"映射内存区域为\r\n","android.media.audiofx.Visualizer.getMeasurementMode()":"android.media.audiofx.Visualizer.getMeasurementMode()\r\n","android.app.admin.SystemUpdatePolicy.ValidationFailedException.getErrorCode()":"android.app.admin.SystemUpdatePolicy.ValidationFailedException.getErrorCode()\r\n","This class specifies a supported resolution in DPI (dots per inch).":"此类以 DPI（每英寸点数）为单位指定受支持的分辨率。\r\n","android.media.MediaRouter.RouteCategory.isGroupable()":"android.media.MediaRouter.RouteCategory.isGroupable()\r\n","the resId of ideal height for the floating window that app content defined by\n            ":"应用内容定义的悬浮窗理想高度的resId\r\n            \r\n","Line breaking constraints for single paragraph.":"单个段落的换行约束。\r\n","android.net.sip.SipSession.State.IN_CALL":"android.net.sip.SipSession.State.IN_CALL\r\n","android.provider.Settings.Secure.getInt(android.content.ContentResolver, java.lang.String)":"android.provider.Settings.Secure.getInt(android.content.ContentResolver, java.lang.String)\r\n","The blue component of the color to transform":"要变换的颜色的蓝色分量\r\n"," parameters at the time of configuration.":" 配置时的参数。\r\n","If there are more than MAX_HISTORY_COUNT non-bookmark history\n            items in the bookmark/history table, delete TRUNCATE_N_OLDEST\n            of them.":"如果有超过 MAX_HISTORY_COUNT 个非书签历史记录\r\n            书签/历史表中的项目，删除 TRUNCATE_N_OLDEST\r\n            他们中的。\r\n","android.os.Build.VERSION_CODES.BASE_1_1":"android.os.Build.VERSION_CODES.BASE_1_1\r\n","android.media.MediaCodec.LinearBlock.map()":"android.media.MediaCodec.LinearBlock.map()\r\n","#EXPORT_SUPPORT":"#EXPORT_SUPPORT\r\n","Returns the content Uri for the specified elementary file on the specified SIM.":"返回指定 SIM 上指定基本文件的内容 Uri。\r\n","android.os.VibrationEffect.Composition.compose()":"android.os.VibrationEffect.Composition.compose()\r\n","AnimatorListeners":"动画师听众\r\n","Column definitions for the recorded TV programs table.":"录制的电视节目表的列定义。\r\n","Builder#extend":"建设者#extend\r\n","android.provider.Telephony.Sms":"android.provider.Telephony.Sms\r\n","Implement this method to handle generic motion events on the current input session.":"实现此方法以处理当前输入会话中的一般运动事件。\r\n","android.media.MediaPlayer.OnDrmPreparedListener.onDrmPrepared(android.media.MediaPlayer, int)":"android.media.MediaPlayer.OnDrmPreparedListener.onDrmPrepared(android.media.MediaPlayer, int)\r\n","android.media.session.MediaController.TransportControls":"android.media.session.MediaController.TransportControls\r\n","#startPostponedEnterTransition()":"#startPostponedEnterTransition()\r\n","Error type: MMS protocol transient error.":"错误类型：MMS 协议瞬态错误。\r\n","android.app.appsearch.SearchResult.MatchInfo":"android.app.appsearch.SearchResult.MatchInfo\r\n","ContactsContract.Contacts#CONTENT_LOOKUP_URI":"联系人Contract.Contacts#CONTENT_LOOKUP_URI\r\n","android.media.tv.TvRecordingClient.RecordingCallback.onRecordingStopped(android.net.Uri)":"android.media.tv.TvRecordingClient.RecordingCallback.onRecordingStopped(android.net.Uri)\r\n","android.app.Notification.CarExtender.getColor()":"android.app.Notification.CarExtender.getColor()\r\n","android.provider.Telephony.Sms.DEFAULT_SORT_ORDER":"android.provider.Telephony.Sms.DEFAULT_SORT_ORDER\r\n","SessionParams#setRequireUserAction(int)":"会话参数#setRequireUserAction(int)\r\n","Calendars#CALENDAR_COLOR":"日历#CALENDAR_COLOR\r\n","The MIME type of a single recorded TV program.":"单个录制的电视节目的 MIME 类型。\r\n","current exposure compensation index. The range is ":"当前曝光补偿指数。范围是\r\n","The name of the package which had its user data cleared.":"已清除其用户数据的包的名称。\r\n","ENCODING_PCM_FLOAT":"编码_PCM_FLOAT\r\n","android.bluetooth.BluetoothClass.Device":"android.bluetooth.BluetoothClass.Device\r\n","android.media.AudioPresentation.Builder.build()":"android.media.AudioPresentation.Builder.build()\r\n","android.graphics.BitmapFactory.Options.inPreferredColorSpace":"android.graphics.BitmapFactory.Options.inPreferredColorSpace\r\n","android.provider.ContactsContract.SyncColumns.ACCOUNT_TYPE":"android.provider.ContactsContract.SyncColumns.ACCOUNT_TYPE\r\n","android.media.tv.TvContract.Channels.TYPE_ISDB_S":"android.media.tv.TvContract.Channels.TYPE_ISDB_S\r\n","android.provider.Settings.System.USER_ROTATION":"android.provider.Settings.System.USER_ROTATION\r\n","android.provider.Settings.System.SHOW_PROCESSES":"android.provider.Settings.System.SHOW_PROCESSES\r\n","String The string data associated with the resource,\n                    stripped of styled text information.":"String 与资源关联的字符串数据，\r\n                    剥离样式文本信息。\r\n","android.media.audiofx.Equalizer.getBandLevelRange()":"android.media.audiofx.Equalizer.getBandLevelRange()\r\n","Called whenever the playback state has changed, and playback position\n            and speed are known.":"每当播放状态和播放位置发生变化时调用\r\n            和速度是众所周知的。\r\n","android.app.usage.NetworkStats.Bucket.TAG_NONE":"android.app.usage.NetworkStats.Bucket.TAG_NONE\r\n","android.media.MediaRouter.RouteCategory.getName(android.content.Context)":"android.media.MediaRouter.RouteCategory.getName(android.content.Context)\r\n","Return the number of children this node has.":"返回此节点的子节点数。\r\n","ContextParams":"上下文参数\r\n","#getText()":"#getText()\r\n","Contains information about the encoded image.":"包含有关编码图像的信息。\r\n","Maps seek positions to ":"地图寻找位置\r\n","The content:// style URI for this table joined with useful data from\n            ":"此表的 content:// 样式 URI 与来自\r\n            \r\n","Class that is called back when fingerprint gestures are being used for accessibility.":"当指纹手势用于辅助功能时回调的类。\r\n","android.provider.Settings.Secure.WIFI_WATCHDOG_AP_COUNT":"android.provider.Settings.Secure.WIFI_WATCHDOG_AP_COUNT\r\n","a List to fill with the routes in this category. If this parameter is\n                       non-null, it will be cleared, filled with the current routes with this\n                       category, and returned. If this parameter is null, a new List will be\n                       allocated to report the category's current routes.":"一个列表来填充这个类别中的路线。如果这个参数是\r\n                       非空，将被清除，用当前路由填充\r\n                       类别，并返回。如果此参数为 null，则将创建一个新的 List\r\n                       分配报告类别的当前路线。\r\n","android.provider.CallLog.Calls.CONTENT_FILTER_URI":"android.provider.CallLog.Calls.CONTENT_FILTER_URI\r\n","android.app.blob.BlobStoreManager.Session":"android.app.blob.BlobStoreManager.Session\r\n","android.preference.PreferenceActivity.Header.title":"android.preference.PreferenceActivity.Header.title\r\n","Returns the mime type for which this codec-capability object was created.":"返回为其创建此编解码器功能对象的 mime 类型。\r\n","android.provider.Settings.System.DEFAULT_ALARM_ALERT_URI":"android.provider.Settings.System.DEFAULT_ALARM_ALERT_URI\r\n","Overrides ContentTitle in the big form of the template.":"在模板的大表单中覆盖 ContentTitle。\r\n","Number of activities that are currently running (not stopped and persisted) in this task.":"此任务中当前正在运行（未停止和持续）的活动数。\r\n"," that received the change.":" 收到更改。\r\n","android.drm.DrmManagerClient.OnEventListener":"android.drm.DrmManagerClient.OnEventListener\r\n","android.media.audiofx.Virtualizer.Settings.Virtualizer$Settings(java.lang.String)":"android.media.audiofx.Virtualizer.Settings.Virtualizer$Settings(java.lang.String)\r\n","android.media.AudioTrack.MetricsConstants.USAGE":"android.media.AudioTrack.MetricsConstants.USAGE\r\n","android.provider.VoicemailContract.Status":"android.provider.VoicemailContract.Status\r\n","package name of the controller":"控制器的包名\r\n","android.graphics.drawable.Drawable Drawable":"android.graphics.drawable.Drawable 可绘制\r\n",", set this bit when\n            the call filters timed out.":", 设置此位时\r\n            呼叫过滤器超时。\r\n","This method is called independently of the others in\n            ExtensionCaptureCallback, when a capture sequence finishes.":"此方法独立于其他方法调用\r\n            ExtensionCaptureCallback，当捕获序列完成时。\r\n","android.provider.Settings.System.putFloat(android.content.ContentResolver, java.lang.String, float)":"android.provider.Settings.System.putFloat(android.content.ContentResolver, java.lang.String, float)\r\n","Representation of an entry on the fragment back stack, as created\n            with ":"创建时片段返回堆栈上条目的表示\r\n            和\r\n","android.app.Activity.enterPictureInPictureMode(android.app.PictureInPictureParams)":"android.app.Activity.enterPictureInPictureMode(android.app.PictureInPictureParams)\r\n","Constant indicating that an error occurred during the activation phase (post-reboot) of\n            this staged session.":"表示在激活阶段（重启后）发生错误的常量\r\n            这个分阶段的会议。\r\n","result data":"结果数据\r\n","AbstractInputMethodService.AbstractInputMethodSessionImpl":"AbstractInputMethodService.AbstractInputMethodSessionImpl\r\n","android.inputmethodservice.Keyboard.Key.squaredDistanceFrom(int, int)":"android.inputmethodservice.Keyboard.Key.squaredDistanceFrom(int, int)\r\n","Whether the sounds effects (key clicks, lid open .":"是否有声音效果（按键声、盖子打开。\r\n","android.app.assist.AssistStructure.ViewNode.isContextClickable()":"android.app.assist.AssistStructure.ViewNode.isContextClickable()\r\n",", set when ":", 设置时\r\n","android.app.ActivityManager.TaskDescription.ActivityManager$TaskDescription(java.lang.String, int)":"android.app.ActivityManager.TaskDescription.ActivityManager$TaskDescription(java.lang.String, int)\r\n","Phonetic equivalent of the person's name, in a locale-dependent\n            character set (e.":"与语言环境相关的人名的拼音\r\n            字符集（例如\r\n","Override to handle changes to the queue title.":"覆盖以处理对队列标题的更改。\r\n","android.print.PrintDocumentAdapter.LayoutResultCallback.onLayoutCancelled()":"android.print.PrintDocumentAdapter.LayoutResultCallback.onLayoutCancelled()\r\n","android.media.tv.TvContract.Channels.VIDEO_RESOLUTION_UHD":"android.media.tv.TvContract.Channels.VIDEO_RESOLUTION_UHD\r\n","android.provider.ContactsContract.DataColumns.DATA_VERSION":"android.provider.ContactsContract.DataColumns.DATA_VERSION\r\n","the reverb delay in milliseconds.":"以毫秒为单位的混响延迟。\r\n","Builder class for constructing ":"用于构建的构建器类\r\n","android.graphics.ColorSpace.Connector":"android.graphics.ColorSpace.Connector\r\n","android.media.VolumeShaper.Operation":"android.media.VolumeShaper.Operation\r\n","android.app.assist.AssistStructure.ViewNode.getExtras()":"android.app.assist.AssistStructure.ViewNode.getExtras()\r\n","android.media.AudioManager.OnAudioFocusChangeListener.onAudioFocusChange(int)":"android.media.AudioManager.OnAudioFocusChangeListener.onAudioFocusChange(int)\r\n","new state of the auto-white balance lock. True means\n                   that auto-white balance is locked, false means that the\n                   auto-white balance routine is free to run normally.":"自动白平衡锁定的新状态。真实的意思\r\n                   自动白平衡被锁定，false 表示\r\n                   自动白平衡程序可以正常运行。\r\n",", which starts from the left-most column and adds one\n            column value at a time.":", 它从最左边的列开始并添加一个\r\n            列值一次。\r\n","android.provider.ContactsContract.ContactOptionsColumns.SEND_TO_VOICEMAIL":"android.provider.ContactsContract.ContactOptionsColumns.SEND_TO_VOICEMAIL\r\n","android.media.MediaController2.Builder":"android.media.MediaController2.Builder\r\n","SharedElementCallback#onSharedElementsArrived(List, List,\n            OnSharedElementsReadyListener)":"SharedElementCallback#onSharedElementsArrived（列表，列表，\r\n            OnSharedElementsReadyListener)\r\n","android.media.MediaCodecInfo.CodecProfileLevel.AACObjectXHE":"android.media.MediaCodecInfo.CodecProfileLevel.AACObjectXHE\r\n","frequency band whose frequency range is requested. The numbering of the bands\n            starts from 0 and ends at (number of bands - 1).":"要求其频率范围的频带。乐队的编号\r\n            从 0 开始到（波段数 - 1）结束。\r\n","android.content.pm.PackageManager.Property.isInteger()":"android.content.pm.PackageManager.Property.isInteger()\r\n",", determine which of the files from the\n            application's data directory need to be backed up, write them to the data\n            stream, and fill in ":", 确定哪些文件来自\r\n            application的data目录需要备份，写入data\r\n            流，并填写\r\n","android.media.audiofx.Visualizer.MeasurementPeakRms.mRms":"android.media.audiofx.Visualizer.MeasurementPeakRms.mRms\r\n","android.content.pm.ActivityInfo.WindowLayout.minHeight":"android.content.pm.ActivityInfo.WindowLayout.minHeight\r\n","the subscriptionId of the SIM card that this Uri will reference":"此 Uri 将引用的 SIM 卡的 subscriptionId\r\n","Indicates that this event takes up time and will conflict with other\n            events.":"表示该事件占用时间，会与其他事件发生冲突\r\n            事件。\r\n","Called when there is a dynamic sensor being disconnected from the system.":"当动态传感器与系统断开连接时调用。\r\n"," class is used to specify operations\n            to the ":" 类用于指定操作\r\n            到\r\n","android.media.MediaRouter.RouteInfo.getDescription()":"android.media.MediaRouter.RouteInfo.getDescription()\r\n","A Cursor containing all reminders for the event":"包含事件所有提醒的 Cursor\r\n","AudioFormat.Builder":"AudioFormat.Builder\r\n","android.provider.Telephony.Mms.DEFAULT_SORT_ORDER":"android.provider.Telephony.Mms.DEFAULT_SORT_ORDER\r\n","android.provider.CalendarContract.Reminders.query(android.content.ContentResolver, long, java.lang.String[])":"android.provider.CalendarContract.Reminders.query(android.content.ContentResolver, long, java.lang.String[])\r\n","android.database.DatabaseUtils.InsertHelper.prepareForInsert()":"android.database.DatabaseUtils.InsertHelper.prepareForInsert()\r\n","Key to extract the attribute usage for this track\n            from the ":"提取此曲目的属性用法的键\r\n            来自\r\n","android.graphics.BitmapFactory.Options.inInputShareable":"android.graphics.BitmapFactory.Options.inInputShareable\r\n","android.hardware.Camera.Parameters#setPreviewFormat(int)":"android.hardware.Camera.Parameters#setPreviewFormat(int)\r\n","The display name of this ":"这个的显示名称\r\n","android.provider.ContactsContract.SettingsColumns.SHOULD_SYNC":"android.provider.ContactsContract.SettingsColumns.SHOULD_SYNC\r\n","Return a TypedArray holding the values defined by\n            <var>Theme</var> which are listed in <var>attrs</var>.":"返回一个 TypedArray 保存由定义的值\r\n            <var>Theme</var> 列在 <var>attrs</var> 中。\r\n","#setEventListener":"#setEventListener\r\n","the MediaCodec instance":"MediaCodec 实例\r\n","The fixed phi angle separation between successive columns.":"连续列之间的固定 phi 角分隔。\r\n","android.provider.DocumentsContract.Root.FLAG_SUPPORTS_IS_CHILD":"android.provider.DocumentsContract.Root.FLAG_SUPPORTS_IS_CHILD\r\n","Interface definition of a callback to be invoked when a\n            timed text is available for display.":"调用回调的接口定义\r\n            可以显示定时文本。\r\n","Creates a new Drawable instance from its constant state.":"从其常量状态创建一个新的 Drawable 实例。\r\n","Called there was an error retrieving it or the connected service doesn't support\n            ":"调用有检索错误或连接的服务不支持\r\n            \r\n","#inTargetDensity":"#inTargetDensity\r\n","Notifies the repetition of the animation.":"通知动画的重复。\r\n","android.media.browse.MediaBrowser.MediaItem.getMediaId()":"android.media.browse.MediaBrowser.MediaItem.getMediaId()\r\n","User-selected RTT mode.":"用户选择的 RTT 模式。\r\n","android.view.KeyEvent.Callback.onKeyMultiple(int, int, android.view.KeyEvent)":"android.view.KeyEvent.Callback.onKeyMultiple(int, int, android.view.KeyEvent)\r\n","android.provider.ContactsContract.StatusColumns":"android.provider.ContactsContract.StatusColumns\r\n","android.media.MediaCodec.BufferInfo.presentationTimeUs":"android.media.MediaCodec.BufferInfo.presentationTimeUs\r\n","android.app.ActivityManager.ProcessErrorStateInfo":"android.app.ActivityManager.ProcessErrorStateInfo\r\n","Returns the path.":"返回路径。\r\n","android.provider.ContactsContract.ContactsColumns.PHOTO_URI":"android.provider.ContactsContract.ContactsColumns.PHOTO_URI\r\n","'s state changes.":"的状态改变。\r\n","The resource ID of the label describing the source of contact\n            status, e.":"描述联系人来源的标签的资源 ID\r\n            状态，e。\r\n","android.hardware.Camera.Parameters.SCENE_MODE_SUNSET":"android.hardware.Camera.Parameters.SCENE_MODE_SUNSET\r\n","android.media.audiofx.Visualizer.setEnabled(boolean)":"android.media.audiofx.Visualizer.setEnabled（布尔值）\r\n","Returns the preference value if it exists, or defValue.  Throws\n            ClassCastException if there is a preference with this name that is not\n            a float.":"返回首选项值（如果存在）或 defValue。投掷\r\n            ClassCastException 如果存在具有此名称的首选项不是\r\n            一个花车。\r\n","android.app.appsearch.SearchSpec.Builder.build()":"android.app.appsearch.SearchSpec.Builder.build()\r\n","android.location.GnssAntennaInfo.Builder":"android.location.GnssAntennaInfo.Builder\r\n","android.provider.Contacts.GroupMembership.CONTENT_URI":"android.provider.Contacts.GroupMembership.CONTENT_URI\r\n","variant of effect engine":"效果引擎的变体\r\n","Creates a builder for an alert dialog that uses the default alert\n            dialog theme.":"为使用默认警报的警报对话框创建构建器\r\n            对话主题。\r\n","Creates a single string with all the parameters set in\n            this Parameters object.":"创建一个字符串，其中设置了所有参数\r\n            这个参数对象。\r\n","android.hardware.fingerprint.FingerprintManager.AuthenticationCallback":"android.hardware.fingerprint.FingerprintManager.AuthenticationCallback\r\n","android.media.tv.TvContract.WatchNextPrograms":"android.media.tv.TvContract.WatchNextPrograms\r\n","android.hardware.biometrics.BiometricPrompt.Builder":"android.hardware.biometrics.BiometricPrompt.Builder\r\n","Constructs and returns an ObjectAnimator that animates a property along a ":"构造并返回一个 ObjectAnimator，它沿着\r\n","AudioFormat#CHANNEL_OUT_5POINT1":"音频格式#CHANNEL_OUT_5POINT1\r\n","android.media.tv.TvContract.Programs.COLUMN_SEASON_NUMBER":"android.media.tv.TvContract.Programs.COLUMN_SEASON_NUMBER\r\n","android.drm.DrmStore.ConstraintsColumns.EXTENDED_METADATA":"android.drm.DrmStore.ConstraintsColumns.EXTENDED_METADATA\r\n","android.graphics.fonts.Font.Builder.Font$Builder(java.io.File)":"android.graphics.fonts.Font.Builder.Font$Builder(java.io.File)\r\n","The position to seek to, in bytes.":"要查找的位置，以字节为单位。\r\n","android.inputmethodservice.Keyboard.Key.repeatable":"android.inputmethodservice.Keyboard.Key.repeatable\r\n","android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile3":"android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile3\r\n","SoundPool object from the load() method":"来自 load() 方法的 SoundPool 对象\r\n","Commit your preferences changes back from this Editor to the\n            ":"将您的首选项更改从该编辑器提交回\r\n            \r\n","android.media.AudioTrack.OnPlaybackPositionUpdateListener.onPeriodicNotification(android.media.AudioTrack)":"android.media.AudioTrack.OnPlaybackPositionUpdateListener.onPeriodicNotification(android.media.AudioTrack)\r\n","android.provider.CalendarContract.EventsColumns.DESCRIPTION":"android.provider.CalendarContract.EventsColumns.DESCRIPTION\r\n","This method is called when the camera device has started capturing\n            the output image for the request, at the beginning of image exposure, or\n            when the camera device has started processing an input image for a reprocess\n            request.":"当相机设备开始拍摄时调用此方法\r\n            请求的输出图像，在图像曝光开始时，或\r\n            当相机设备开始处理输入图像以进行再处理时\r\n            要求。\r\n","MediaDrm.KeyStatus":"MediaDrm.KeyStatus\r\n","milliseconds of non-sleep uptime before screenshot since boot and it's from\n            ":"自启动以来屏幕截图之前的非睡眠正常运行时间毫秒数，它来自\r\n            \r\n","android.media.audiofx.Visualizer.OnDataCaptureListener.onWaveFormDataCapture(android.media.audiofx.Visualizer, byte[], int)":"android.media.audiofx.Visualizer.OnDataCaptureListener.onWaveFormDataCapture(android.media.audiofx.Visualizer, byte[], int)\r\n","Type for accessing records in the \"abbreviated dialing number\" (ADN) elementary file on\n            the SIM.":"用于访问“缩拨号码”(ADN) 基本文件中记录的类型\r\n            SIM 卡。\r\n","the settings for lights that should change":"应该改变的灯光设置\r\n"," instance as specified by this builder.":" 此构建器指定的实例。\r\n","android.media.MediaDrm.MetricsConstants.GET_KEY_REQUEST_ERROR_COUNT":"android.media.MediaDrm.MetricsConstants.GET_KEY_REQUEST_ERROR_COUNT\r\n","#FILL_IN_CATEGORIES":"#FILL_IN_CATEGORIES\r\n","android.os.Handler.Callback.handleMessage(android.os.Message)":"android.os.Handler.Callback.handleMessage(android.os.Message)\r\n","android.view.KeyEvent.Callback.onKeyDown(int, android.view.KeyEvent)":"android.view.KeyEvent.Callback.onKeyDown(int, android.view.KeyEvent)\r\n","The version of the specification that this message conforms to.":"此消息符合的规范版本。\r\n","The name of the application component to be used for the\n                       ":"要用于的应用程序组件的名称\r\n                       \r\n","An activity that displays a list of items by binding to a data source such as\n            an array or Cursor, and exposes event handlers when the user selects an item.":"通过绑定到数据源来显示项目列表的活动，例如\r\n            数组或游标，并在用户选择项目时公开事件处理程序。\r\n","Callback class used for clients to receive MIDI device added and removed notifications":"用于客户端接收 MIDI 设备添加和删除通知的回调类\r\n","android.app.ApplicationErrorReport.BatteryInfo.ApplicationErrorReport$BatteryInfo(android.os.Parcel)":"android.app.ApplicationErrorReport.BatteryInfo.ApplicationErrorReport$BatteryInfo(android.os.Parcel)\r\n","android.provider.CalendarContract.CalendarColumns.IS_PRIMARY":"android.provider.CalendarContract.CalendarColumns.IS_PRIMARY\r\n","android.media.MediaCodec.OutputFrame.getChangedKeys()":"android.media.MediaCodec.OutputFrame.getChangedKeys()\r\n"," from your layout that this dialog\n                       should be centered around. In particular, if the dialog\n                       has a \"callout\" arrow, it will be pointed and centered\n                       around this ":" 从你的布局来看，这个对话框\r\n                       应该以周围为中心。特别是，如果对话框\r\n                       有一个“标注”箭头，它将指向并居中\r\n                       围绕这个\r\n","android.media.MediaRouter.RouteGroup.setIconResource(int)":"android.media.MediaRouter.RouteGroup.setIconResource(int)\r\n","#SCREEN_TIMEOUT_SHORT":"#SCREEN_TIMEOUT_SHORT\r\n","Fragment#onStart()":"片段#onStart()\r\n","Active state for session has been changed.":"会话的活动状态已更改。\r\n","android.hardware.biometrics.BiometricPrompt.Builder.BiometricPrompt$Builder(android.content.Context)":"android.hardware.biometrics.BiometricPrompt.Builder.BiometricPrompt$Builder(android.content.Context)\r\n","SubscriptionInfo#getSimSlotIndex()":"订阅信息#getSimSlotIndex()\r\n","android.hardware.Camera.Parameters.isSmoothZoomSupported()":"android.hardware.Camera.Parameters.isSmoothZoomSupported()\r\n","MediaSync callback interface.":"MediaSync 回调接口。\r\n","Postpone the entering Fragment transition until ":"将进入的 Fragment 过渡推迟到\r\n","Context that the Fragment was attached to":"片段附加到的上下文\r\n","android.provider.Settings.Secure.WIFI_MAX_DHCP_RETRY_COUNT":"android.provider.Settings.Secure.WIFI_MAX_DHCP_RETRY_COUNT\r\n","android.provider.Settings.System.WIFI_WATCHDOG_AP_COUNT":"android.provider.Settings.System.WIFI_WATCHDOG_AP_COUNT\r\n","android.bluetooth.BluetoothHidDevice.Callback.onGetReport(android.bluetooth.BluetoothDevice, byte, byte, int)":"android.bluetooth.BluetoothHidDevice.Callback.onGetReport（android.bluetooth.BluetoothDevice，字节，字节，整数）\r\n","android.animation.Animator.AnimatorListener.onAnimationCancel(android.animation.Animator)":"android.animation.Animator.AnimatorListener.onAnimationCancel(android.animation.Animator)\r\n","android.provider.CallLog.Calls.USER_MISSED_SHORT_RING":"android.provider.CallLog.Calls.USER_MISSED_SHORT_RING\r\n","Retrieve the error code associated with a CodecException":"检索与 CodecException 关联的错误代码\r\n","AuthenticationsCheme.unsupport\r\n\r\nAuthenticationScheme.Unsupported\r\n\r\nAuthenticationsCheme.unsupport\r\n\r\nAuthenticationScheme.Unsupported":"AuthenticationsCheme.不支持\r\n\r\nAuthenticationScheme.Unsupported 不支持\r\n\r\nAuthenticationsCheme.不支持\r\n\r\nAuthenticationScheme.Unsupported 不支持\r\n","android.media.audiofx.AudioEffect.setEnabled(boolean)":"android.media.audiofx.AudioEffect.setEnabled(boolean)\r\n","The service type for regular TV channels that have both audio and video.":"具有音频和视频的常规电视频道的服务类型。\r\n","A transfer function that converts from linear space to \"gamma space\"":"从线性空间转换为“伽玛空间”的传递函数\r\n"," if this notification represents a group conversation, otherwise\n            ":" 如果此通知代表群组对话，否则\r\n            \r\n","android.media.MediaCodecInfo.CodecProfileLevel.AVCProfileExtended":"android.media.MediaCodecInfo.CodecProfileLevel.AVCProfileExtended\r\n","android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC2":"android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC2\r\n","the scaling mode, see ":"缩放模式，见\r\n","MediaDrmStateException#getErrorCode()":"MediaDrmStateException#getErrorCode()\r\n","Optionally set the package name of the app being installed.":"（可选）设置正在安装的应用程序的包名称。\r\n","android.app.appsearch.AppSearchSchema.LongPropertyConfig":"android.app.appsearch.AppSearchSchema.LongPropertyConfig\r\n","Class constructor with ":"类构造函数\r\n","android.content.res.Resources.Theme.obtainStyledAttributes(int, int[])":"android.content.res.Resources.Theme.obtainStyledAttributes(int, int[])\r\n","android.provider.CalendarContract.CalendarAlertsColumns.CREATION_TIME":"android.provider.CalendarContract.CalendarAlertsColumns.CREATION_TIME\r\n","android.app.usage.UsageEvents.Event.getShortcutId()":"android.app.usage.UsageEvents.Event.getShortcutId()\r\n","Error type: MMS protocol permanent error.":"错误类型：彩信协议永久性错误。\r\n","The unique media size id.":"唯一的媒体尺寸 ID。\r\n"," style URI for this provider.":" 此提供程序的样式 URI。\r\n","android.provider.Contacts.ContactMethods.CONTENT_IM_ITEM_TYPE":"android.provider.Contacts.ContactMethods.CONTENT_IM_ITEM_TYPE\r\n","the hardware buffer":"硬件缓冲区\r\n","android.provider.Settings.System.SETTINGS_CLASSNAME":"android.provider.Settings.System.SETTINGS_CLASSNAME\r\n","android.provider.Browser.saveBookmark(android.content.Context, java.lang.String, java.lang.String)":"android.provider.Browser.saveBookmark（android.content.Context，java.lang.String，java.lang.String）\r\n","android.bluetooth.BluetoothServerSocket":"android.bluetooth.BluetoothServerSocket\r\n"," setting that indicates that the directory\n            can produce thumbnails as well as full-size contact photos.":" 指示目录的设置\r\n            可以生成缩略图以及全尺寸联系人照片。\r\n","Called when dismissing Keyguard is currently not feasible, i.":"当关闭 Keyguard 目前不可行时调用，i。\r\n","#scheduleDrawable":"#scheduleDrawable\r\n","#PRIORITY":"＃优先事项\r\n","Represents an ongoing session of a blob's contribution to the blob store managed by the\n            system.":"表示 blob 对 blob 存储的贡献的持续会话\r\n            系统。\r\n","android.provider.Settings.Secure.PARENTAL_CONTROL_REDIRECT_URL":"android.provider.Settings.Secure.PARENTAL_CONTROL_REDIRECT_URL\r\n","#noteOp noted":"#noteOp 注意到\r\n","If enabled, apps should try to skip any introductory hints on first launch.":"如果启用，应用程序应尝试在首次启动时跳过任何介绍性提示。\r\n","android.content.pm.LauncherApps.ShortcutQuery.FLAG_MATCH_PINNED":"android.content.pm.LauncherApps.ShortcutQuery.FLAG_MATCH_PINNED\r\n","Called on the listener to periodically notify it that the record head has reached\n            a multiple of the notification period.":"调用侦听器定期通知它记录头已到达\r\n            通知期的倍数。\r\n","android.media.MediaRouter.RouteInfo.DEVICE_TYPE_BLUETOOTH":"android.media.MediaRouter.RouteInfo.DEVICE_TYPE_BLUETOOTH\r\n","The media format for the track.  This must not be an empty\n                          MediaFormat.":"轨道的媒体格式。这不能为空\r\n                          媒体格式。\r\n","android.media.MediaCodecInfo.CodecCapabilities.FEATURE_LowLatency":"android.media.MediaCodecInfo.CodecCapabilities.FEATURE_LowLatency\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatRGBFlexible":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatRGBFlexible\r\n","android.provider.Telephony.TextBasedSmsColumns.LOCKED":"android.provider.Telephony.TextBasedSmsColumns.LOCKED\r\n","android.provider.ContactsContract.Data.VISIBLE_CONTACTS_ONLY":"android.provider.ContactsContract.Data.VISIBLE_CONTACTS_ONLY\r\n"," that allows\n            you to disable / reenable the keyguard.":" 这允许\r\n            你禁用/重新启用键盘锁。\r\n","android.provider.Contacts.ContactMethods.DEFAULT_SORT_ORDER":"android.provider.Contacts.ContactMethods.DEFAULT_SORT_ORDER\r\n","An open, read/write ParcelFileDescriptor pointing to an\n                       empty file. The application should record the final backup\n                       state here after writing the requested data to the ":"一个打开的、读/写的 ParcelFileDescriptor 指向一个\r\n                       空的文件。应用程序应记录最终备份\r\n                       在将请求的数据写入\r\n","This indicates that the output protection levels supported by the\n            device are not sufficient to meet the requirements set by the\n            content owner in the license policy.":"这表明所支持的输出保护级别\r\n            设备不足以满足所设定的要求\r\n            许可政策中的内容所有者。\r\n","Constants for the raw contacts table, which contains one row of contact\n            information for each person in each synced account.":"原始联系人表的常量，其中包含一行联系人\r\n            每个同步帐户中每个人的信息。\r\n","android.provider.ContactsContract.RawContactsColumns.BACKUP_ID":"android.provider.ContactsContract.RawContactsColumns.BACKUP_ID\r\n","android.content.res.Resources.NotFoundException":"android.content.res.Resources.NotFoundException\r\n","Constant indicating that the session was in conflict with another staged session and had\n            to be sacrificed for resolution.":"常量表示该会话与另一个暂存会话冲突并且已\r\n            为解决而牺牲。\r\n","android.provider.ContactsContract.ContactNameColumns.DISPLAY_NAME_ALTERNATIVE":"android.provider.ContactsContract.ContactNameColumns.DISPLAY_NAME_ALTERNATIVE\r\n","State information that has been retrieved from a fragment instance\n            through ":"从片段实例中检索到的状态信息\r\n            通过\r\n"," request":" 要求\r\n","android.provider.CallLog.Calls.CACHED_FORMATTED_NUMBER":"android.provider.CallLog.Calls.CACHED_FORMATTED_NUMBER\r\n"," to indicate that a call was automatically rejected by\n            system because the system cannot support any more dialing calls.":" 表示呼叫被自动拒绝\r\n            系统，因为系统不能再支持任何拨号呼叫。\r\n","android.app.Notification.WearableExtender":"android.app.Notification.WearableExtender\r\n","Build and return the ":"构建并返回\r\n","android.app.Notification.WearableExtender.Notification$WearableExtender()":"android.app.Notification.WearableExtender.Notification$WearableExtender()\r\n",") or the position\n                         of the item clicked":") 或位置\r\n                         单击的项目\r\n","The most recent value calculated by this ":"由此计算出的最新值\r\n","Constructs a prompt set with single prompt used for all interactions.":"使用用于所有交互的单个提示构建提示集。\r\n","A reference to the name of the account to which this data belongs":"对该数据所属帐户名称的引用\r\n"," with the state as it exists\n            now.":" 与存在的状态\r\n            现在。\r\n","android.media.MediaExtractor.CasInfo.getPrivateData()":"android.media.MediaExtractor.CasInfo.getPrivateData()\r\n","android.provider.Settings.Secure.WIFI_WATCHDOG_PING_TIMEOUT_MS":"android.provider.Settings.Secure.WIFI_WATCHDOG_PING_TIMEOUT_MS\r\n","Defines the interface by which applications can receive notifications of\n            routing changes for the associated ":"定义应用程序可以接收通知的接口\r\n            关联的路由更改\r\n","Get the content rectangle in PostScript points (1/72th of an inch).":"获取以 PostScript 点（1/72 英寸）为单位的内容矩形。\r\n","android.provider.CalendarContract.CalendarAlertsColumns.ALARM_TIME":"android.provider.CalendarContract.CalendarAlertsColumns.ALARM_TIME\r\n","TelecomManager#DTMF_CHARACTER_WAIT":"电信管理器#DTMF_CHARACTER_WAIT\r\n","android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentSaveInstanceState(android.app.FragmentManager, android.app.Fragment, android.os.Bundle)":"android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentSaveInstanceState(android.app.FragmentManager, android.app.Fragment, android.os.Bundle)\r\n","true if PostEq stage will be used, false otherwise. This can't be\n            changed later.":"如果将使用 PostEq 阶段，则为 true，否则为 false。这不可能\r\n            后来改了。\r\n","Default text-to-speech engine speech rate.":"默认文本到语音引擎语速。\r\n","android.print.PrintDocumentAdapter.WriteResultCallback.onWriteFinished(android.print.PageRange[])":"android.print.PrintDocumentAdapter.WriteResultCallback.onWriteFinished(android.print.PageRange[])\r\n","TvInputManager#INPUT_STATE_CONNECTED":"TvInputManager#INPUT_STATE_CONNECTED\r\n"," broadcast when\n            the a AppWidget for this provider is instantiated.":" 播出时间\r\n            该提供程序的 AppWidget 已实例化。\r\n","Whether or not data roaming is enabled.":"是否启用数据漫游。\r\n","android.media.MediaPlayer.TrackInfo.getLanguage()":"android.media.MediaPlayer.TrackInfo.getLanguage()\r\n","android.graphics.pdf.PdfDocument.Page.getCanvas()":"android.graphics.pdf.PdfDocument.Page.getCanvas()\r\n","android.nfc.NfcAdapter.ReaderCallback":"android.nfc.NfcAdapter.ReaderCallback\r\n","android.location.GpsStatus.NmeaListener":"android.location.GpsStatus.NmeaListener\r\n","the code for the physical key that was pressed":"按下的物理键的代码\r\n"," objects for\n            this stream item.":" 对象\r\n            这个流项目。\r\n","#EXPORT_SUPPORT_ANY_ACCOUNT":"#EXPORT_SUPPORT_ANY_ACCOUNT\r\n","android.provider.ContactsContract.ContactStatusColumns.CONTACT_STATUS_RES_PACKAGE":"android.provider.ContactsContract.ContactStatusColumns.CONTACT_STATUS_RES_PACKAGE\r\n","Constructor of ":"的构造函数\r\n","android.hardware.Camera.Parameters.getPreviewFrameRate()":"android.hardware.Camera.Parameters.getPreviewFrameRate()\r\n","The label and description of the current state of this task.":"此任务当前状态的标签和描述。\r\n","android.hardware.biometrics.BiometricManager.Strings.getSettingName()":"android.hardware.biometrics.BiometricManager.Strings.getSettingName()\r\n","Class containing information about the antenna phase center offset (PCO).":"包含有关天线相位中心偏移 (PCO) 信息的类。\r\n"," for this bubble. A value of 0 indicates a res value has not\n            been provided for the desired height.":" 对于这个泡沫。值为 0 表示 res 值没有\r\n            已提供所需的高度。\r\n","android.provider.Telephony.ThreadsColumns.ERROR":"android.provider.Telephony.ThreadsColumns.ERROR\r\n","android.os.VibrationAttributes.Builder":"android.os.VibrationAttributes.Builder\r\n","#PARAM_PRESET":"#PARAM_PRESET\r\n","android.content.ContextParams.Builder.ContextParams$Builder(android.content.ContextParams)":"android.content.ContextParams.Builder.ContextParams$Builder(android.content.ContextParams)\r\n","android.provider.Telephony.ThreadsColumns.TYPE":"android.provider.Telephony.ThreadsColumns.TYPE\r\n","The event ID of this TV program.":"此电视节目的事件 ID。\r\n","android.hardware.camera2.CameraExtensionSession.ExtensionCaptureCallback.onCaptureFailed(android.hardware.camera2.CameraExtensionSession, android.hardware.camera2.CaptureRequest)":"android.hardware.camera2.CameraExtensionSession.ExtensionCaptureCallback.onCaptureFailed(android.hardware.camera2.CameraExtensionSession, android.hardware.camera2.CaptureRequest)\r\n","L.":"L.\r\n","android.nfc.tech.NfcBarcode.getBarcode()":"android.nfc.tech.NfcBarcode.getBarcode()\r\n","android.net.vcn.VcnConfig.Builder":"android.net.vcn.VcnConfig.Builder\r\n","android.bluetooth.le.AdvertiseData.Builder":"android.bluetooth.le.AdvertiseData.Builder\r\n","android.os.DropBoxManager.Entry":"android.os.DropBoxManager.Entry\r\n","Override to handle requests to rewind.":"重写以处理倒回请求。\r\n","android.provider.Settings.System.LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED":"android.provider.Settings.System.LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED\r\n"," style URL for this table.":" 此表的样式 URL。\r\n","android.app.PictureInPictureParams.Builder":"android.app.PictureInPictureParams.Builder\r\n","#setOnOpNotedCallback set":"#setOnOpNotedCallback 设置\r\n","android.media.metrics.PlaybackErrorEvent.Builder.build()":"android.media.metrics.PlaybackErrorEvent.Builder.build()\r\n","the minute that was set":"设定的那一刻\r\n","Adds a word to the dictionary, with the given frequency and the specified\n             specified locale type.":"向字典中添加一个词，具有给定的频率和指定的\r\n             指定的语言环境类型。\r\n","android.provider.SimPhonebookContract.SimRecords.CONTENT_ITEM_TYPE":"android.provider.SimPhonebookContract.SimRecords.CONTENT_ITEM_TYPE\r\n","android.media.audiofx.DynamicsProcessing.Stage":"android.media.audiofx.DynamicsProcessing.Stage\r\n","android.content.BroadcastReceiver.PendingResult.setResult(int, java.lang.String, android.os.Bundle)":"android.content.BroadcastReceiver.PendingResult.setResult(int, java.lang.String, android.os.Bundle)\r\n","android.media.MediaRecorder.AudioEncoder":"android.media.MediaRecorder.AudioEncoder\r\n","Returns the resource id of the icon in the ":"返回图标中图标的资源 ID\r\n","android.graphics.ColorSpace.Rgb.toLinear(float, float, float)":"android.graphics.ColorSpace.Rgb.toLinear（浮动，浮动，浮动）\r\n","android.app.assist.AssistStructure.WindowNode.getWidth()":"android.app.assist.AssistStructure.WindowNode.getWidth()\r\n","android.media.AudioPresentation.Builder.AudioPresentation$Builder(int)":"android.media.AudioPresentation.Builder.AudioPresentation$Builder(int)\r\n","a new SocketFactory with the specified parameters":"具有指定参数的新 SocketFactory\r\n","android.preference.PreferenceActivity.Header.breadCrumbTitle":"android.preference.PreferenceActivity.Header.breadCrumbTitle\r\n","The name identifying the system partition.":"标识系统分区的名称。\r\n","<b>video decoder only</b>: codec supports seamless resolution changes.":"<b>仅视频解码器</b>：编解码器支持无缝分辨率更改。\r\n","Content URI for the blocked numbers.":"被阻止号码的内容 URI。\r\n","the String value of the parameter":"参数的字符串值\r\n","Can the organizer respond to the event?  If no, the status of the\n            organizer should not be shown by the UI.":"主办方能否回应活动？如果不是，状态\r\n            用户界面不应显示组织者。\r\n","android.provider.ContactsContract.DataColumns.DATA14":"android.provider.ContactsContract.DataColumns.DATA14\r\n","Get the metadata Bundle used by this Builder.":"获取此 Builder 使用的元数据 Bundle。\r\n","android.content.Intent.FilterComparison.getIntent()":"android.content.Intent.FilterComparison.getIntent()\r\n","The OnEnableStatusChangeListener interface defines a method called by the AudioEffect\n            when the enabled state of the effect engine was changed by the controlling application.":"OnEnableStatusChangeListener 接口定义了由 AudioEffect 调用的方法\r\n            当效果引擎的启用状态被控制应用程序更改时。\r\n"," on devices running OS versions\n                       ":" 在运行操作系统版本的设备上\r\n                       \r\n","android.media.MediaMetadataRetriever.BitmapParams.MediaMetadataRetriever$BitmapParams()":"android.media.MediaMetadataRetriever.BitmapParams.MediaMetadataRetriever$BitmapParams()\r\n","android.appwidget.AppWidgetHost.onCreateView(android.content.Context, int, android.appwidget.AppWidgetProviderInfo)":"android.appwidget.AppWidgetHost.onCreateView(android.content.Context, int, android.appwidget.AppWidgetProviderInfo)\r\n","Whether notifications suppressed by DND should not interrupt visually when the screen\n            is on (e.":"当屏幕显示时，DND 抑制的通知是否不应在视觉上中断\r\n            在（例如\r\n","a list of supported preview frame rates. null if preview\n                    frame rate setting is not supported.":"支持的预览帧速率列表。如果预览为 null\r\n                    不支持帧率设置。\r\n","Column definitions for the TV channels table.":"电视频道表的列定义。\r\n","Optional parameters for the event, may be null.":"事件的可选参数，可以为空。\r\n","bits as defined by ":"位定义为\r\n","Returns the PSSH info of the data source for each supported DRM scheme.":"返回每个支持的 DRM 方案的数据源的 PSSH 信息。\r\n","The state to use for initializing the builder.":"用于初始化构建器的状态。\r\n","the new parameter value.":"新的参数值。\r\n","android.media.SyncParams":"android.media.SyncParams\r\n","android.os.Build.VERSION_CODES.HONEYCOMB_MR2":"android.os.Build.VERSION_CODES.HONEYCOMB_MR2\r\n","The class name of the source of this event.":"此事件源的类名。\r\n","android.provider.Settings.System.AIRPLANE_MODE_RADIOS":"android.provider.Settings.System.AIRPLANE_MODE_RADIOS\r\n","Return a new Loader instance that is ready to start loading.":"返回一个准备开始加载的新 Loader 实例。\r\n","gets release time for limiter compressor in milliseconds (ms) -or- sets release time for limiter compressor in milliseconds (ms)":"以毫秒 (ms) 为单位获取限制器压缩器的释放时间 - 或 - 以毫秒 (ms) 为单位设置限制器压缩器的释放时间\r\n","A table provided for sync adapters to use for storing private sync state data for the\n            user's personal profile.":"为同步适配器提供的表，用于存储私有同步状态数据\r\n            用户的个人资料。\r\n","The charset of the snippet.":"片段的字符集。\r\n","Returns the left edge of this view, in pixels, relative to the left edge of its parent.":"返回此视图的左边缘，以像素为单位，相对于其父级的左边缘。\r\n","android.provider.ContactsContract.SearchSnippets":"android.provider.ContactsContract.SearchSnippets\r\n","Retrieve the RemoteControlClient associated with this route, if one has been set. -or- Set the RemoteControlClient responsible for reporting playback info for this\n            user route.":"检索与此路由关联的 RemoteControlClient（如果已设置）。 - 或 - 设置负责报告播放信息的 RemoteControlClient\r\n            用户路线。\r\n","android.media.session.MediaController.PlaybackInfo.getAudioAttributes()":"android.media.session.MediaController.PlaybackInfo.getAudioAttributes()\r\n","android.app.ActivityManager.RunningServiceInfo.service":"android.app.ActivityManager.RunningServiceInfo.service\r\n","android.provider.Settings.System.getLong(android.content.ContentResolver, java.lang.String)":"android.provider.Settings.System.getLong(android.content.ContentResolver, java.lang.String)\r\n","Class constructor for Channel configuration.":"Channel 配置的类构造函数。\r\n","Returns the absolute path to the directory on the primary shared/external\n            storage device where the application can place persistent files it owns.":"返回主共享/外部目录的绝对路径\r\n            应用程序可以在其中放置它拥有的持久文件的存储设备。\r\n","android.content.pm.PackageInstaller.SessionParams.USER_ACTION_NOT_REQUIRED":"android.content.pm.PackageInstaller.SessionParams.USER_ACTION_NOT_REQUIRED\r\n","android.app.job.JobInfo.TriggerContentUri.JobInfo$TriggerContentUri(android.net.Uri, int)":"android.app.job.JobInfo.TriggerContentUri.JobInfo$TriggerContentUri(android.net.Uri, int)\r\n","android.media.MediaCodec.OutputFrame":"android.media.MediaCodec.OutputFrame\r\n","Transfer the session to a new owner.":"将会话转移给新所有者。\r\n","BiometricPrompt#authenticate(CancellationSignal,\n            Executor, AuthenticationCallback)":"BiometricPrompt#authenticate（取消信号，\r\n            执行者，AuthenticationCallback）\r\n","android.graphics.text.LineBreaker.ParagraphConstraints.setTabStops(float[], float)":"android.graphics.text.LineBreaker.ParagraphConstraints.setTabStops(float[], float)\r\n","The type of the document which failed to be migrated.":"迁移失败的文档类型。\r\n","android.provider.Contacts.People.CONTENT_TYPE":"android.provider.Contacts.People.CONTENT_TYPE\r\n","android.net.IpSecManager.UdpEncapsulationSocket":"android.net.IpSecManager.UdpEncapsulationSocket\r\n","android.media.audiofx.BassBoost.setStrength(short)":"android.media.audiofx.BassBoost.setStrength（短）\r\n","the Shader to be drawn":"要绘制的着色器\r\n","MediaTimestamp#TIMESTAMP_UNKNOWN":"媒体时间戳#TIMESTAMP_UNKNOWN\r\n","Gets the id that can be used to autofill the view contents.":"获取可用于自动填充视图内容的 ID。\r\n","Create a new remote user information.":"创建一个新的远程用户信息。\r\n","android.os.Build.VERSION_CODES.BASE":"android.os.Build.VERSION_CODES.BASE\r\n","A distinguished name helper class: a 3-tuple of:\n            <ul>\n              <li>the most specific common name (CN)</li>\n              <li>the most specific organization (O)</li>\n              <li>the most specific organizational unit (OU)</li>\n            <ul>":"专有名称帮助器类：一个 3 元组：\r\n            <ul>\r\n              <li>最具体的通用名称 (CN)</li>\r\n              <li>最具体的组织 (O)</li>\r\n              <li>最具体的组织单位 (OU)</li>\r\n            <ul>\r\n","Provisioning failed in a way that is likely to succeed on a\n            subsequent attempt.":"配置失败的方式可能会成功\r\n            随后的尝试。\r\n","android.hardware.Camera.Parameters.SCENE_MODE_NIGHT_PORTRAIT":"android.hardware.Camera.Parameters.SCENE_MODE_NIGHT_PORTRAIT\r\n","android.provider.CalendarContract.Instances.EVENT_ID":"android.provider.CalendarContract.Instances.EVENT_ID\r\n","Can reply yes/no/maybe to an event":"可以对事件回答是/否/也许\r\n","the current zoom value. In smooth zoom mode, camera\n                             calls this for every new zoom value.":"当前缩放值。在平滑变焦模式下，相机\r\n                             为每个新的缩放值调用它。\r\n","android.media.MediaCodecInfo.EncoderCapabilities.getComplexityRange()":"android.media.MediaCodecInfo.EncoderCapabilities.getComplexityRange()\r\n","android.provider.Settings.Global.getUriFor(java.lang.String)":"android.provider.Settings.Global.getUriFor(java.lang.String)\r\n","This is called when a TV input is removed from the system.":"当电视输入从系统中移除时调用。\r\n"," means that no\n            animation will be run for the specified transitionType.":" 意味着没有\r\n            动画将为指定的 transitionType 运行。\r\n","Returns the name of the package where this this property was defined.":"返回定义此属性的包的名称。\r\n","Base class for implementing a callback for the result of ":"实现结果回调的基类\r\n","android.provider.Settings.Secure.WIFI_WATCHDOG_PING_COUNT":"android.provider.Settings.Secure.WIFI_WATCHDOG_PING_COUNT\r\n","true if Eq stage is enabled/disabled. This can be changed while effect is\n            running":"如果启用/禁用 Eq 阶段，则为真。这可以在效果发生时更改\r\n            跑步\r\n","Provides the type of authentication (e.":"提供身份验证类型（例如\r\n","android.net.sip.SipAudioCall.Listener.onChanged(android.net.sip.SipAudioCall)":"android.net.sip.SipAudioCall.Listener.onChanged(android.net.sip.SipAudioCall)\r\n","android.provider.Telephony.CarrierId.getUriForSubscriptionId(int)":"android.provider.Telephony.CarrierId.getUriForSubscriptionId(int)\r\n","android.provider.Settings.System.NEXT_ALARM_FORMATTED":"android.provider.Settings.System.NEXT_ALARM_FORMATTED\r\n","#importanceReasonCode":"#importanceReasonCode\r\n","#CHAT_CAPABILITY":"#CHAT_CAPABILITY\r\n","The absolute time (milliseconds since epoch) when this stream item was\n            inserted/updated.":"此流项被执行时的绝对时间（自纪元以来的毫秒数）\r\n            插入/更新。\r\n","AudioManager#AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK":"音频管理器#AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK\r\n","Called as the first step of the Activity being started.":"作为正在启动的 Activity 的第一步调用。\r\n"," when loaded,\n            rather than relying on the graphics system scaling it each time it\n            is drawn to a Canvas.":" 加载时，\r\n            而不是依赖图形系统每次缩放它\r\n            被绘制到画布上。\r\n","Contacts#KIND_EMAIL":"联系人#KIND_EMAIL\r\n","android.hardware.Camera.ErrorCallback.onError(int, android.hardware.Camera)":"android.hardware.Camera.ErrorCallback.onError(int, android.hardware.Camera)\r\n","android.app.assist.AssistStructure.ViewNode.getIdType()":"android.app.assist.AssistStructure.ViewNode.getIdType()\r\n","xoffset":"x偏移量\r\n","android.nfc.NfcAdapter.OnNdefPushCompleteCallback":"android.nfc.NfcAdapter.OnNdefPushCompleteCallback\r\n","android.media.MediaRouter2.RoutingController.selectRoute(android.media.MediaRoute2Info)":"android.media.MediaRouter2.RoutingController.selectRoute(android.media.MediaRoute2Info)\r\n","android.net.IpSecTransform.Builder.IpSecTransform$Builder(android.content.Context)":"android.net.IpSecTransform.Builder.IpSecTransform$Builder(android.content.Context)\r\n","android.app.PendingIntent.OnFinished.onSendFinished(android.app.PendingIntent, android.content.Intent, int, java.lang.String, android.os.Bundle)":"android.app.PendingIntent.OnFinished.onSendFinished（android.app.PendingIntent，android.content.Intent，int，java.lang.String，android.os.Bundle）\r\n","android.animation.LayoutTransition#CHANGE_APPEARING":"android.animation.LayoutTransition#CHANGE_APPEARING\r\n","android.graphics.ColorSpace.Rgb.getEotf()":"android.graphics.ColorSpace.Rgb.getEotf()\r\n","Called to give the app the opportunity to configure DRM before the session is created":"调用以让应用有机会在创建会话之前配置 DRM\r\n","An immutable description of a scheduled \"alarm clock\" event.":"计划的“闹钟”事件的不可变描述。\r\n",".\n                <BR>Note that upon return, the buffer position (":".\r\n                <BR>请注意，返回时，缓冲区位置 (\r\n","Callback interface for being notified that a new image is available.":"用于通知有新图像可用的回调接口。\r\n","android.media.MediaRouter.RouteInfo.DEVICE_TYPE_UNKNOWN":"android.media.MediaRouter.RouteInfo.DEVICE_TYPE_UNKNOWN\r\n","<b>video encoder only</b>: codec supports intra refresh.":"<b>仅视频编码器</b>：编解码器支持帧内刷新。\r\n","The freeze periods contains duplicates, periods that overlap with each\n            other or periods whose start and end joins.":"冻结期包含重复项，与每个冻结期重叠\r\n            其他或开始和结束加入的时期。\r\n","android.provider.Contacts.Intents.ATTACH_IMAGE":"android.provider.Contacts.Intents.ATTACH_IMAGE\r\n","SyncParams":"同步参数\r\n","android.media.tv.TvView.OnUnhandledInputEventListener":"android.media.tv.TvView.OnUnhandledInputEventListener\r\n","android.media.session.MediaController.TransportControls.pause()":"android.media.session.MediaController.TransportControls.pause()\r\n","android.media.MediaSyncEvent.createEvent(int)":"android.media.MediaSyncEvent.createEvent(int)\r\n","android.media.MediaDrm.ProvisionRequest.getDefaultUrl()":"android.media.MediaDrm.ProvisionRequest.getDefaultUrl()\r\n","android.media.MediaCodec.OutputFrame.getFlags()":"android.media.MediaCodec.OutputFrame.getFlags()\r\n","Flag indicating that a document can be represented as a thumbnail.":"指示文档可以表示为缩略图的标志。\r\n","true if MBC stage will be used, false otherwise.":"如果将使用 MBC 阶段，则为 true，否则为 false。\r\n","android.app.SearchManager.OnCancelListener.onCancel()":"android.app.SearchManager.OnCancelListener.onCancel()\r\n","android.provider.Contacts.Organizations.DEFAULT_SORT_ORDER":"android.provider.Contacts.Organizations.DEFAULT_SORT_ORDER\r\n"," setting that indicates that the directory\n            does not allow any shortcuts created for its contacts.":" 指示目录的设置\r\n            不允许为其联系人创建任何快捷方式。\r\n","The flag indicating whether recording of this program is prohibited.":"表示是否禁止录制该节目的标志。\r\n","Builder for a ":"建造者\r\n","android.net.sip.SipSession.Listener":"android.net.sip.SipSession.Listener\r\n","This method is called when the session starts actively processing capture requests.":"当会话开始主动处理捕获请求时调用此方法。\r\n"," entry,\n            created by appending ":" 入口，\r\n            通过附加创建\r\n","the repetition count for the segment (0 means it plays once)":"片段的重复次数（0 表示播放一次）\r\n","domain-only part of the document. For example, if the full URL is\n            ":"domain-only 文档的一部分。例如，如果完整的 URL 是\r\n            \r\n",", otherwise returns 0.":"，否则返回 0。\r\n","Whether this key is sticky, i.":"这个key是否有粘性，i。\r\n"," to\n                 set server address":" 到\r\n                 设置服务器地址\r\n","android.content.pm.LauncherApps.Callback.onPackagesSuspended(java.lang.String[], android.os.UserHandle)":"android.content.pm.LauncherApps.Callback.onPackagesSuspended(java.lang.String[], android.os.UserHandle)\r\n","gesture":"手势\r\n","SessionParams#USER_ACTION_REQUIRED":"会话参数#USER_ACTION_REQUIRED\r\n","android.provider.Settings.Global.getLong(android.content.ContentResolver, java.lang.String)":"android.provider.Settings.Global.getLong(android.content.ContentResolver, java.lang.String)\r\n","android.provider.Settings.System.ACCELEROMETER_ROTATION":"android.provider.Settings.System.ACCELEROMETER_ROTATION\r\n","\n            intent.":"\r\n            意图。\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV420Flexible":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV420Flexible\r\n","android.os.Build.VERSION_CODES.FROYO":"android.os.Build.VERSION_CODES.FROYO\r\n","number of bands for this Equalizer stage. Can't be changed while effect\n            is running":"此均衡器阶段的频段数。生效时不能更改\r\n            在跑\r\n","android.media.RemoteController.OnClientUpdateListener.onClientTransportControlUpdate(int)":"android.media.RemoteController.OnClientUpdateListener.onClientTransportControlUpdate(int)\r\n","android.provider.ContactsContract.StreamItemPhotosColumns.SYNC4":"android.provider.ContactsContract.StreamItemPhotosColumns.SYNC4\r\n","android.media.tv.TvView.TvInputCallback.onTimeShiftStatusChanged(java.lang.String, int)":"android.media.tv.TvView.TvInputCallback.onTimeShiftStatusChanged(java.lang.String, int)\r\n","android.media.tv.TvContract.Channels.COLUMN_BROADCAST_GENRE":"android.media.tv.TvContract.Channels.COLUMN_BROADCAST_GENRE\r\n","Get the queue id for this item.":"获取此项目的队列 ID。\r\n","#authenticate(CancellationSignal, Executor,\n            AuthenticationCallback)":"#authenticate（取消信号，执行者，\r\n            身份验证回调）\r\n","android.provider.ContactsContract.Directory.CONTENT_TYPE":"android.provider.ContactsContract.Directory.CONTENT_TYPE\r\n","true if smooth zoom is supported.":"如果支持平滑缩放，则为真。\r\n","Override to handle the session being destroyed.":"重写以处理正在销毁的会话。\r\n","Interface definition of a callback to notify the app when the\n            DRM is ready for key request/response":"接口定义回调通知应用程序时\r\n            DRM 已准备好密钥请求/响应\r\n","The content:// style URL for querying an instance range with a search\n            term in the managed profile.":"用于通过搜索查询实例范围的 content:// 样式 URL\r\n            托管配置文件中的术语。\r\n","android.app.WallpaperManager.setStream(java.io.InputStream, android.graphics.Rect, boolean, int)":"android.app.WallpaperManager.setStream(java.io.InputStream, android.graphics.Rect, boolean, int)\r\n","This class can also be created via XML inflation using ":"此类也可以通过 XML 膨胀创建，使用\r\n","android.os.DropBoxManager.Entry.getInputStream()":"android.os.DropBoxManager.Entry.getInputStream()\r\n","Buckets are the smallest elements of a query result.":"桶是查询结果中最小的元素。\r\n","android.net.sip.SipProfile.Builder.SipProfile$Builder(java.lang.String, java.lang.String)":"android.net.sip.SipProfile.Builder.SipProfile$Builder(java.lang.String, java.lang.String)\r\n","Common base for the tables of TV channels/programs.":"电视频道/节目表的通用基础。\r\n","android.os.PerformanceHintManager.Session.updateTargetWorkDuration(long)":"android.os.PerformanceHintManager.Session.updateTargetWorkDuration（长）\r\n","android.media.DrmInitData.SchemeInitData":"android.media.DrmInitData.SchemeInitData\r\n","android.provider.Settings.System.WIFI_STATIC_DNS1":"android.provider.Settings.System.WIFI_STATIC_DNS1\r\n","A previously-available camera has become unavailable for use.":"以前可用的相机已无法使用。\r\n","Name of the command to be performed. This <em>must</em> be a scoped name,\n                       i.e. prefixed with a package name you own, so that different developers will\n                       not create conflicting commands.":"要执行的命令的名称。这<em>必须</em>是一个作用域名称，\r\n                       即以您拥有的包名称为前缀，以便不同的开发人员将\r\n                       不会创建冲突的命令。\r\n","android.media.tv.TvInputService.Session.onTrackballEvent(android.view.MotionEvent)":"android.media.tv.TvInputService.Session.onTrackballEvent(android.view.MotionEvent)\r\n","android.media.session.MediaSession.Callback.onPrepareFromMediaId(java.lang.String, android.os.Bundle)":"android.media.session.MediaSession.Callback.onPrepareFromMediaId(java.lang.String, android.os.Bundle)\r\n","android.provider.Telephony.MmsSms":"android.provider.Telephony.MmsSms\r\n","Sets the streaming start threshold for an ":"设置流媒体开始阈值\r\n","Constructs a builder with a byte buffer.":"构造一个带有字节缓冲区的构建器。\r\n","android.app.job.JobInfo.TriggerContentUri.getUri()":"android.app.job.JobInfo.TriggerContentUri.getUri()\r\n","android.provider.CallLog.Calls.EXTRA_CALL_TYPE_FILTER":"android.provider.CallLog.Calls.EXTRA_CALL_TYPE_FILTER\r\n","android.net.SSLCertificateSocketFactory.getHttpSocketFactory(int, android.net.SSLSessionCache)":"android.net.SSLCertificateSocketFactory.getHttpSocketFactory(int, android.net.SSLSessionCache)\r\n","android.media.MediaRecorder.VideoEncoder":"android.media.MediaRecorder.VideoEncoder\r\n","The channel type for DVB-T2 (terrestrial).":"DVB-T2（地面）的频道类型。\r\n","Carrier presence information.":"运营商存在信息。\r\n","\n            maps colors from one color space to another.":"\r\n            将颜色从一个颜色空间映射到另一个颜色空间。\r\n","android.os.Build.VERSION.SDK_INT":"android.os.Build.VERSION.SDK_INT\r\n","the selected month (0-11 for compatibility with\n                         ":"所选月份（0-11 兼容\r\n                         \r\n","android.app.ActionBar.OnNavigationListener.onNavigationItemSelected(int, long)":"android.app.ActionBar.OnNavigationListener.onNavigationItemSelected(int, long)\r\n","number of bands for PreEq stage. This can't be changed later.":"PreEq 阶段的频段数。这以后无法更改。\r\n","the audio device requested for communication use cases.\n                          Can be null on platforms not supporting\n                          ":"请求通信用例的音频设备。\r\n                          在不支持的平台上可以为空\r\n                          \r\n"," to indicate that the notification channel is\n            working fine.":" 表示通知通道是\r\n            工作正常。\r\n","a new location request":"一个新的位置请求\r\n","\r\n          （（（\r\n\r\n\r\n          (\r\n\r\n\r\n          （（\r\n\r\n\n          (":"\r\n          （（（\r\n\r\n\r\n          (\r\n\r\n\r\n          （（\r\n\r\n\r\n          (\r\n","android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback.onAvailabilityChanged(android.accessibilityservice.AccessibilityButtonController, boolean)":"android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback.onAvailabilityChanged(android.accessibilityservice.AccessibilityButtonController, boolean)\r\n","android.media.MediaCodecInfo.AudioCapabilities.isSampleRateSupported(int)":"android.media.MediaCodecInfo.AudioCapabilities.isSampleRateSupported(int)\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV444Flexible":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV444Flexible\r\n","Called to indicate a time discontinuity has occured.":"调用以指示发生了时间不连续性。\r\n","Constructs a builder with a file path.":"构造具有文件路径的构建器。\r\n","android.preference.PreferenceManager.OnActivityStopListener.onActivityStop()":"android.preference.PreferenceManager.OnActivityStopListener.onActivityStop()\r\n","Retrieve a set of String values from the preferences.":"从首选项中检索一组字符串值。\r\n","android.media.tv.TvContract.Channels.TYPE_CMMB":"android.media.tv.TvContract.Channels.TYPE_CMMB\r\n","The broadcast system type of this TV channel.":"该电视频道的广播系统类型。\r\n","TvView#tune":"电视视图#tune\r\n","Get the description for this item.":"获取此项目的描述。\r\n","A runtime error occurred.":"发生运行时错误。\r\n","android.app.usage.NetworkStats.Bucket.DEFAULT_NETWORK_YES":"android.app.usage.NetworkStats.Bucket.DEFAULT_NETWORK_YES\r\n","android.os.Build.VERSION_CODES.O_MR1":"android.os.Build.VERSION_CODES.O_MR1\r\n","android.provider.UserDictionary.Words.CONTENT_URI":"android.provider.UserDictionary.Words.CONTENT_URI\r\n","Block until an Activity is created that matches this monitor, \n            returning the resulting activity or till the timeOut period expires.":"阻塞，直到创建与此监视器匹配的 Activity，\r\n            返回结果活动或直到超时期限到期。\r\n","A Cursor object, which is positioned before the first entry. May return\n                    ":"位于第一个条目之前的 Cursor 对象。可能会回来\r\n                    \r\n","android.provider.Telephony.BaseMmsColumns.SUBSCRIPTION_ID":"android.provider.Telephony.BaseMmsColumns.SUBSCRIPTION_ID\r\n","Returns a content uri for a specific elementary file.":"返回特定基本文件的内容 uri。\r\n","Fragment that created and owns the view":"创建并拥有视图的片段\r\n","android.hardware.Camera.Parameters.setPreviewSize(int, int)":"android.hardware.Camera.Parameters.setPreviewSize(int, int)\r\n","Method invoked when there was an error while installing an update.":"安装更新时出错时调用的方法。\r\n","android.media.MediaDrm.ErrorCodes.ERROR_INSUFFICIENT_OUTPUT_PROTECTION":"android.media.MediaDrm.ErrorCodes.ERROR_INSUFFICIENT_OUTPUT_PROTECTION\r\n","SessionParams#MODE_FULL_INSTALL":"会话参数#MODE_FULL_INSTALL\r\n","android.os.Build.VERSION_CODES.CUPCAKE":"android.os.Build.VERSION_CODES.CUPCAKE\r\n","android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentPreCreated(android.app.FragmentManager, android.app.Fragment, android.os.Bundle)":"android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentPreCreated(android.app.FragmentManager, android.app.Fragment, android.os.Bundle)\r\n","android.provider.ContactsContract.DeletedContacts":"android.provider.ContactsContract.DeletedContacts\r\n","AudioRecord#getMetrics":"音频记录#getMetrics\r\n","android.provider.UserDictionary.Words.addWord(android.content.Context, java.lang.String, int, java.lang.String, java.util.Locale)":"android.provider.UserDictionary.Words.addWord（android.content.Context，java.lang.String，int，java.lang.String，java.util.Locale）\r\n","true if PostEq stage is in use;":"如果正在使用 PostEq 阶段，则为真；\r\n"," sub-directory of a single\n            call.":" 单个子目录\r\n            称呼。\r\n"," attribute set\n                    in their searchable meta-data.":" 属性集\r\n                    在他们可搜索的元数据中。\r\n","KeyStatus#STATUS_PENDING":"关键状态#STATUS_PENDING\r\n","android.provider.ContactsContract.StreamItems.CONTENT_URI":"android.provider.ContactsContract.StreamItems.CONTENT_URI\r\n","android.graphics.ColorSpace.Model":"android.graphics.ColorSpace.Model\r\n","android.app.assist.AssistStructure.ViewNode.getTransformation()":"android.app.assist.AssistStructure.ViewNode.getTransformation()\r\n","a list of current focus areas":"当前重点领域列表\r\n","android.media.AudioTrack.StreamEventCallback.onDataRequest(android.media.AudioTrack, int)":"android.media.AudioTrack.StreamEventCallback.onDataRequest(android.media.AudioTrack, int)\r\n","android.provider.Settings.Secure.getInt(android.content.ContentResolver, java.lang.String, int)":"android.provider.Settings.Secure.getInt(android.content.ContentResolver, java.lang.String, int)\r\n","android.appwidget.AppWidgetProvider.onDeleted(android.content.Context, int[])":"android.appwidget.AppWidgetProvider.onDeleted(android.content.Context, int[])\r\n","A builder class for creating new FontFamily.":"用于创建新 FontFamily 的构建器类。\r\n","android.provider.ContactsContract.StatusUpdates.CONTENT_TYPE":"android.provider.ContactsContract.StatusUpdates.CONTENT_TYPE\r\n","If this key pops up a mini keyboard, this is the resource id for the XML layout for that\n            keyboard.":"如果此键弹出迷你键盘，则这是该键盘的 XML 布局的资源 ID\r\n            键盘。\r\n","This URI allows the caller to query for the maximum number of stream items\n            that will be stored under any single raw contact.":"此 URI 允许调用者查询最大流项数\r\n            将存储在任何单个原始联系人下。\r\n","android.provider.CalendarContract.Events.CONTENT_URI":"android.provider.CalendarContract.Events.CONTENT_URI\r\n","A concatenation of the account type and data set (delimited by a forward\n            slash) - if the data set is empty, this will be the same as the account\n            type.":"帐户类型和数据集的串联（由正向分隔\r\n            slash) - 如果数据集为空，这将与帐户相同\r\n            类型。\r\n"," object which represents host that currently\n                has Virtual Cable established with device. Only valid when application is registered,\n                can be ":" 代表当前主机的对象\r\n                已与设备建立虚拟电缆。仅在申请注册时有效，\r\n                可\r\n","Returns true if assist data has been blocked starting at this node in the hierarchy.":"如果辅助数据已从层次结构中的此节点开始被阻止，则返回 true。\r\n","android.graphics.fonts.Font.Builder.Font$Builder(android.content.res.Resources, int)":"android.graphics.fonts.Font.Builder.Font$Builder(android.content.res.Resources, int)\r\n","When false, the observer will be notified\n                       whenever a change occurs to the exact URI specified by\n                       ":"为false时，会通知观察者\r\n                       每当由指定的确切 URI 发生更改时\r\n                       \r\n","null or file descriptor array":"空或文件描述符数组\r\n","Height of the key, not including the gap":"键的高度，不包括间隙\r\n","android.app.ActivityManager.RunningServiceInfo.process":"android.app.ActivityManager.RunningServiceInfo.process\r\n","android.media.MediaRecorder.MetricsConstants.ROTATION":"android.media.MediaRecorder.MetricsConstants.ROTATION\r\n","Returns the resources to which this theme belongs.":"返回该主题所属的资源。\r\n","Called once at least one suitable device is found":"一旦找到至少一个合适的设备就调用\r\n","the executor on which result callback will be invoked.":"调用结果回调的执行器。\r\n","Interface used to allow the creator of a dialog to run some code when an\n            item on the dialog is clicked.":"用于允许对话框的创建者在出现问题时运行一些代码的接口\r\n            单击对话框上的项目。\r\n","The desired attributes in the style. These attribute IDs must be sorted in\n                         ascending order.":"样式中所需的属性。这些属性 ID 必须排序\r\n                         升序。\r\n","android.os.Build.VERSION_CODES.KITKAT":"android.os.Build.VERSION_CODES.KITKAT\r\n","android.preference.PreferenceActivity.Header.fragment":"android.preference.PreferenceActivity.Header.fragment\r\n","android.media.MediaController2.Builder.MediaController2$Builder(android.content.Context, android.media.Session2Token)":"android.media.MediaController2.Builder.MediaController2$Builder(android.content.Context, android.media.Session2Token)\r\n","android.media.MediaRoute2Info.Builder.MediaRoute2Info$Builder(android.media.MediaRoute2Info)":"android.media.MediaRoute2Info.Builder.MediaRoute2Info$Builder(android.media.MediaRoute2Info)\r\n","android.provider.Contacts.ContactMethodsColumns.ISPRIMARY":"android.provider.Contacts.ContactMethodsColumns.ISPRIMARY\r\n","Allow packages which are signed with the same certificate as the caller to access this\n            blob data once it is committed using a ":"允许使用与调用者相同的证书签名的包访问此\r\n            使用 a 提交后的 blob 数据\r\n","android.provider.Contacts.OrganizationColumns.LABEL":"android.provider.Contacts.OrganizationColumns.LABEL\r\n","android.media.MediaDrm.ErrorCodes.ERROR_RESOURCE_BUSY":"android.media.MediaDrm.ErrorCodes.ERROR_RESOURCE_BUSY\r\n","android.appwidget.AppWidgetManager.EXTRA_APPWIDGET_OLD_IDS":"android.appwidget.AppWidgetManager.EXTRA_APPWIDGET_OLD_IDS\r\n","android.media.EncoderProfiles.AudioProfile.getCodec()":"android.media.EncoderProfiles.AudioProfile.getCodec()\r\n","android.graphics.text.MeasuredText.Builder.MeasuredText$Builder(char[])":"android.graphics.text.MeasuredText.Builder.MeasuredText$Builder(字符[])\r\n"," to specify that the presented list of calls should be\n            filtered for a particular call type.":" 指定显示的呼叫列表应该是\r\n            针对特定呼叫类型进行过滤。\r\n","android.media.MediaRecorder.OnErrorListener.onError(android.media.MediaRecorder, int, int)":"android.media.MediaRecorder.OnErrorListener.onError(android.media.MediaRecorder, int, int)\r\n"," if it uses local playback\n            or not set.":" 如果它使用本地播放\r\n            或未设置。\r\n"," to launch the UI for user to select a\n                                   device":" 启动 UI 供用户选择\r\n                                   设备\r\n","#allowPackageAccess(String, byte[])":"#allowPackageAccess（字符串，字节[]）\r\n","android.media.MediaDrm.ErrorCodes.ERROR_LICENSE_RESTORE":"android.media.MediaDrm.ErrorCodes.ERROR_LICENSE_RESTORE\r\n","HardwareRenderer":"硬件渲染器\r\n","#DIRECTORY_MUSIC":"#DIRECTORY_MUSIC\r\n"," that consumes the output of ":" 消耗的输出\r\n","android.provider.Settings.Secure.NETWORK_PREFERENCE":"android.provider.Settings.Secure.NETWORK_PREFERENCE\r\n","Returns the a String value set for the property.":"返回为属性设置的字符串值。\r\n","android.provider.CalendarContract.EventsColumns.DISPLAY_COLOR":"android.provider.CalendarContract.EventsColumns.DISPLAY_COLOR\r\n","android.view.KeyEvent.Callback.onKeyLongPress(int, android.view.KeyEvent)":"android.view.KeyEvent.Callback.onKeyLongPress(int, android.view.KeyEvent)\r\n","android.provider.CallLog.Calls.NEW":"android.provider.CallLog.Calls.NEW\r\n","android.app.LoaderManager.LoaderCallbacks.onCreateLoader(int, android.os.Bundle)":"android.app.LoaderManager.LoaderCallbacks.onCreateLoader(int, android.os.Bundle)\r\n","android.media.MediaCodec.OnFrameRenderedListener.onFrameRendered(android.media.MediaCodec, long, long)":"android.media.MediaCodec.OnFrameRenderedListener.onFrameRendered（android.media.MediaCodec，长，长）\r\n","RawContacts":"原始联系人\r\n","android.content.SharedPreferences.Editor.apply()":"android.content.SharedPreferences.Editor.apply()\r\n","android.media.tv.TvInputService.RecordingSession.notifyRecordingStopped(android.net.Uri)":"android.media.tv.TvInputService.RecordingSession.notifyRecordingStopped(android.net.Uri)\r\n","android.provider.Contacts.Intents.EXTRA_CREATE_DESCRIPTION":"android.provider.Contacts.Intents.EXTRA_CREATE_DESCRIPTION\r\n","release time for compressor in milliseconds (ms)":"压缩机的释放时间，以毫秒 (ms) 为单位\r\n",".\n            android.content.pm.ActivityInfo#CONFIG_FONT_WEIGHT_ADJUSTMENT\n             PackageManager.ActivityInfo.CONFIG_FONT_WEIGHT_ADJUSTMENT.":".\r\n            android.content.pm.ActivityInfo#CONFIG_FONT_WEIGHT_ADJUSTMENT\r\n             PackageManager.ActivityInfo.CONFIG_FONT_WEIGHT_ADJUSTMENT。\r\n","strength of the effect. The valid range for strength strength is [0, 1000],\n            where 0 per mille designates the mildest effect and 1000 per mille designates the strongest.":"效果的强度。强度强度的有效范围是 [0, 1000]，\r\n            其中千分之 0 表示最温和的效果，千分之 1000 表示最强。\r\n","android.accessibilityservice.GestureDescription.StrokeDescription.GestureDescription$StrokeDescription(android.graphics.Path, long, long, boolean)":"android.accessibilityservice.GestureDescription.StrokeDescription.GestureDescription$StrokeDescription(android.graphics.Path, long, long, boolean)\r\n","android.print.PrintDocumentAdapter.LayoutResultCallback.onLayoutFailed(java.lang.CharSequence)":"android.print.PrintDocumentAdapter.LayoutResultCallback.onLayoutFailed(java.lang.CharSequence)\r\n","android.media.MediaRouter2.RouteCallback.onRoutesRemoved(java.util.List<android.media.MediaRoute2Info>)":"android.media.MediaRouter2.RouteCallback.onRoutesRemoved(java.util.List<android.media.MediaRoute2Info>)\r\n","MatchRange":"匹配范围\r\n","android.provider.Contacts.ContactMethods.PERSON_ID":"android.provider.Contacts.ContactMethods.PERSON_ID\r\n","The reason that the hardware TV input stopped the playback:\n            <ul>\n            <li>":"硬件电视输入停止播放的原因：\r\n            <ul>\r\n            <李>\r\n","android.media.tv.TvContract.Channels.CONTENT_URI":"android.media.tv.TvContract.Channels.CONTENT_URI\r\n","android.os.Build.VERSION_CODES.HONEYCOMB":"android.os.Build.VERSION_CODES.HONEYCOMB\r\n","Flag indicating that a document is a directory that supports creation\n            of new files within it.":"flag表示一个文档是一个支持创建的目录\r\n            其中的新文件。\r\n","Informs the application that the current channel is re-tuned for some reason and the\n            session now displays the content from a new channel.":"通知应用程序当前频道由于某种原因被重新调谐，并且\r\n            会话现在显示来自新频道的内容。\r\n","Informs the application that the time shift status is changed.":"通知应用程序时移状态已更改。\r\n","Returns the classname of the component where this property was defined.":"返回定义此属性的组件的类名。\r\n","android.bluetooth.BluetoothHidDevice.Callback":"android.bluetooth.BluetoothHidDevice.Callback\r\n","android.graphics.pdf.PdfRenderer.Page":"android.graphics.pdf.PdfRenderer.Page\r\n","android.app.NotificationManager.Policy.CONVERSATION_SENDERS_ANYONE":"android.app.NotificationManager.Policy.CONVERSATION_SENDERS_ANYONE\r\n"," for reading from the blob file.":" 用于从 blob 文件中读取。\r\n","android.provider.CalendarContract.EventsEntity.CONTENT_URI":"android.provider.CalendarContract.EventsEntity.CONTENT_URI\r\n","Fragment#onStop()":"片段#onStop()\r\n","android.app.Application.OnProvideAssistDataListener.onProvideAssistData(android.app.Activity, android.os.Bundle)":"android.app.Application.OnProvideAssistDataListener.onProvideAssistData(android.app.Activity, android.os.Bundle)\r\n","The original network ID of this TV channel.":"此电视频道的原始网络 ID。\r\n","android.net.sip.SipSession.State.READY_TO_CALL":"android.net.sip.SipSession.State.READY_TO_CALL\r\n","The date the message was sent.":"消息发送的日期。\r\n","Interface used to receive asynchronously fetched typefaces.":"用于接收异步获取字体的接口。\r\n","android.graphics.BitmapFactory.Options.outWidth":"android.graphics.BitmapFactory.Options.outWidth\r\n","The content:// style URI for this table, which requests a directory\n            of data rows matching the selection criteria.":"此表的 content:// 样式 URI，它请求一个目录\r\n            符合选择标准的数据行。\r\n","The media id of the parent media item whose children could\n                       not be loaded.":"其子项可以的父媒体项的媒体 ID\r\n                       不被加载。\r\n","Returns the user-wide restrictions imposed on the user specified by ":"返回对指定用户施加的用户范围限制\r\n","gets number of bands held in this stage":"获取在此阶段举行的乐队数量\r\n","FragmentTransaction#addToBackStack(String)\n            FragmentTransaction.addToBackStack()":"FragmentTransaction#addToBackStack（字符串）\r\n            FragmentTransaction.addToBackStack()\r\n","android.media.MediaCodec.CryptoInfo.numBytesOfClearData":"android.media.MediaCodec.CryptoInfo.numBytesOfClearData\r\n","android.provider.Settings.System.SHOW_WEB_SUGGESTIONS":"android.provider.Settings.System.SHOW_WEB_SUGGESTIONS\r\n","A Fragment is a piece of an application's user interface or behavior\n            that can be placed in an ":"片段是应用程序的用户界面或行为的一部分\r\n            可以放在一个\r\n","#MEDIA_ERROR_IO":"#MEDIA_ERROR_IO\r\n","Interface definition of a callback to be invoked to communicate some\n            info and/or warning about the media or its playback.":"回调的接口定义被调用来传达一些\r\n            有关媒体或其播放的信息和/或警告。\r\n","Returns flags to control database access mode.":"返回标志以控制数据库访问模式。\r\n","GPS altitude in meters.":"以米为单位的 GPS 高度。\r\n","android.media.AudioRecord.MetricsConstants.CHANNELS":"android.media.AudioRecord.MetricsConstants.CHANNELS\r\n","A builder class for creating new Typeface instance.":"用于创建新字体实例的构建器类。\r\n","The new MediaMetadata instance":"新的 MediaMetadata 实例\r\n","android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile0":"android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile0\r\n","android.media.MediaParser.UnrecognizedInputFormatException":"android.media.MediaParser.UnrecognizedInputFormatException\r\n","android.media.audiofx.DynamicsProcessing.Limiter":"android.media.audiofx.DynamicsProcessing.Limiter\r\n"," providing a directory of all\n            person groups.":" 提供所有的目录\r\n            人组。\r\n","Close this object and release any resources associated with\n            it.":"关闭此对象并释放与之关联的所有资源\r\n            它。\r\n","Build GnssAntennaInfo object.":"构建 GnssAntennaInfo 对象。\r\n","android.media.audiofx.Virtualizer.getSpeakerAngles(int, int, int[])":"android.media.audiofx.Virtualizer.getSpeakerAngles(int, int, int[])\r\n","android.provider.ContactsContract.Profile.MIN_ID":"android.provider.ContactsContract.Profile.MIN_ID\r\n","The channel type for S-DMB (satellite).":"S-DMB（卫星）的频道类型。\r\n"," calls from the\n            ":" 来自\r\n            \r\n","android.os.Debug.InstructionCount":"android.os.Debug.InstructionCount\r\n","SessionParams#MODE_INHERIT_EXISTING":"会话参数#MODE_INHERIT_EXISTING\r\n","android.bluetooth.BluetoothHidDevice.Callback.onSetProtocol(android.bluetooth.BluetoothDevice, byte)":"android.bluetooth.BluetoothHidDevice.Callback.onSetProtocol（android.bluetooth.BluetoothDevice，字节）\r\n","This method is called every time the session has no more capture requests to process.":"每次会话没有更多的捕获请求要处理时，都会调用此方法。\r\n","Proxy port.":"代理端口。\r\n","android.provider.CallLog.Calls.CACHED_NUMBER_TYPE":"android.provider.CallLog.Calls.CACHED_NUMBER_TYPE\r\n","android.preference.Preference.BaseSavedState":"android.preference.Preference.BaseSavedState\r\n","Return the ID for this session.":"返回此会话的 ID。\r\n","android.provider.ContactsContract.StreamItemPhotosColumns.STREAM_ITEM_ID":"android.provider.ContactsContract.StreamItemPhotosColumns.STREAM_ITEM_ID\r\n","Called after the fragment has returned a non-null view from the FragmentManager's\n            request to ":"在片段从 FragmentManager 返回非空视图后调用\r\n            请求\r\n","android.media.tv.TvContract.Channels.COLUMN_TRANSPORT_STREAM_ID":"android.media.tv.TvContract.Channels.COLUMN_TRANSPORT_STREAM_ID\r\n","android.location.GnssStatus.Callback.onSatelliteStatusChanged(android.location.GnssStatus)":"android.location.GnssStatus.Callback.onSatelliteStatusChanged(android.location.GnssStatus)\r\n","Creates a builder for a ":"为 a 创建一个构建器\r\n","android.provider.ContactsContract.Directory.TYPE_RESOURCE_ID":"android.provider.ContactsContract.Directory.TYPE_RESOURCE_ID\r\n","out...":"出去...\r\n","Call was WIFI call.":"通话是WIFI通话。\r\n","True if the user was able to authenticate, false if\n              not.":"如果用户能够进行身份验证，则为真，否则为假\r\n              不是。\r\n","The comma-separated genre string of this recorded TV program.":"此录制的电视节目的逗号分隔流派字符串。\r\n","decay time in milliseconds. The valid range is [100, 20000].":"以毫秒为单位的衰减时间。有效范围是 [100, 20000]。\r\n","android.provider.Settings.System.WIFI_WATCHDOG_PING_TIMEOUT_MS":"android.provider.Settings.System.WIFI_WATCHDOG_PING_TIMEOUT_MS\r\n","android.media.MediaCodec.CryptoException.ERROR_RESOURCE_BUSY":"android.media.MediaCodec.CryptoException.ERROR_RESOURCE_BUSY\r\n","TvInputManager#VIDEO_UNAVAILABLE_REASON_UNKNOWN":"TvInputManager#VIDEO_UNAVAILABLE_REASON_UNKNOWN\r\n"," flag, which requires\n            that you take care of task management as described in the\n            ":" 标志，这需要\r\n            您按照\r\n            \r\n","Represents a \"pin shortcut\" or a \"pin appwidget\" request made by an app, which is sent with\n            an ":"表示应用程序发出的“pin 快捷方式”或“pin appwidget”请求，该请求与\r\n            一个\r\n","android.provider.CalendarContract.Instances.BEGIN":"android.provider.CalendarContract.Instances.BEGIN\r\n","Stops an ongoing Bluetooth LE scan.":"停止正在进行的蓝牙 LE 扫描。\r\n","Override to handle custom events sent by the session owner without a\n            specified interface.":"重写以处理会话所有者发送的自定义事件，无需\r\n            指定接口。\r\n","android.app.Notification.MessagingStyle.getUser()":"android.app.Notification.MessagingStyle.getUser()\r\n","android.media.audiofx.DynamicsProcessing.Limiter.setThreshold(float)":"android.media.audiofx.DynamicsProcessing.Limiter.setThreshold（浮动）\r\n","#setBitmap(Bitmap, Rect, boolean)":"#setBitmap（位图，矩形，布尔值）\r\n","Abstract class to receive event notifications about the stream playback in offloaded mode.":"在卸载模式下接收有关流播放的事件通知的抽象类。\r\n","Callback called when Virtual Cable is removed.":"移除虚拟电缆时调用的回调。\r\n","android.inputmethodservice.Keyboard.Key.on":"android.inputmethodservice.Keyboard.Key.on\r\n","This effect should produce a sharp, crisp click sensation.":"这种效果应该会产生尖锐、清脆的点击感。\r\n",", but will downmix the content to stereo first, and\n               then will virtualize, as opposed to virtualizing each channel individually.":"，但会先将内容缩混为立体声，并且\r\n               然后将虚拟化，而不是单独虚拟化每个通道。\r\n","The name of the process that this object is associated with":"与此对象关联的进程的名称\r\n","a language code in either way of ISO-639-1 or ISO-639-2.\n            When the language is unknown or could not be determined,\n            ISO-639-2 language code, \"und\", is returned.":"ISO-639-1 或 ISO-639-2 中任一方式的语言代码。\r\n            当语言不明或无法确定时，\r\n            返回 ISO-639-2 语言代码“und”。\r\n","android.provider.CalendarContract.EventsColumns.STATUS":"android.provider.CalendarContract.EventsColumns.STATUS\r\n","A Settings panel is floating UI that contains a fixed subset of settings to address a\n                particular user problem.":"设置面板是浮动 UI，其中包含固定的设置子集以解决\r\n                特定用户问题。\r\n","Optional extras that can include extra information about the media item\n                          to be played.":"可选的额外内容，可以包括有关媒体项目的额外信息\r\n                          被播放。\r\n","Retrieves a set of file descriptors that a peer has sent through\n            an ancillary message.":"检索对等方已发送的一组文件描述符\r\n            一条辅助信息。\r\n"," object with the given parameters.":" 具有给定参数的对象。\r\n","The expiry time of the message.":"消息的到期时间。\r\n","Returns the range of achievable video frame rates for a video size.":"返回视频大小可实现的视频帧速率范围。\r\n","android.app.assist.AssistStructure.ViewNode.getMaxTextEms()":"android.app.assist.AssistStructure.ViewNode.getMaxTextEms()\r\n","Gets the vertical resolution in DPI (dots per inch).":"获取以 DPI 为单位的垂直分辨率（每英寸点数）。\r\n","This class contains the Drm session ID and log session ID":"此类包含 Drm 会话 ID 和日志会话 ID\r\n","Set to true to enable video stabilization, and false to\n            disable video stabilization.":"设置为 true 以启用视频稳定，设置为 false 以启用\r\n            禁用视频稳定。\r\n","android.media.AudioManager.OnModeChangedListener":"android.media.AudioManager.OnModeChangedListener\r\n","Notifies the occurrence of another frame of the animation.":"通知动画另一帧的出现。\r\n","android.provider.Settings.Secure.WIFI_NUM_OPEN_NETWORKS_KEPT":"android.provider.Settings.Secure.WIFI_NUM_OPEN_NETWORKS_KEPT\r\n","gets release time for compressor in milliseconds (ms) -or- sets release time for compressor in milliseconds (ms)":"以毫秒 (ms) 为单位获取压缩器的释放时间 - 或 - 以毫秒 (ms) 为单位设置压缩器的释放时间\r\n","If not 0, the activity manager will aggressively finish activities and\n            processes as soon as they are no longer needed.":"如果不为 0，则活动管理器将积极结束活动并\r\n            不再需要时立即处理。\r\n","softRestricted":"软限制\r\n"," with the arguments supplied to this\n            builder and immediately displays the dialog.":" 提供给这个的参数\r\n            生成器并立即显示对话框。\r\n","android.app.Notification.Action.SEMANTIC_ACTION_DELETE":"android.app.Notification.Action.SEMANTIC_ACTION_DELETE\r\n","android.provider.Contacts.PhonesColumns.NUMBER_KEY":"android.provider.Contacts.PhonesColumns.NUMBER_KEY\r\n","android.app.Activity.startNextMatchingActivity(android.content.Intent, android.os.Bundle)":"android.app.Activity.startNextMatchingActivity(android.content.Intent, android.os.Bundle)\r\n","android.os.Debug.MemoryInfo.getOtherPss(int)":"android.os.Debug.MemoryInfo.getOtherPss(int)\r\n","Return whether this constant state can have a theme applied.":"返回此常量状态是否可以应用主题。\r\n","true if the command to set the playback position was successfully sent.":"如果设置播放位置的命令已成功发送，则为真。\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityDestroyed(android.app.Activity)":"android.app.Application.ActivityLifecycleCallbacks.onActivityDestroyed(android.app.Activity)\r\n","Extender interface for use with ":"扩展器接口用于\r\n","android.hardware.Camera.Parameters.unflatten(java.lang.String)":"android.hardware.Camera.Parameters.unflatten(java.lang.String)\r\n","Used as a value in the ":"用作值\r\n","android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentDestroyed(android.app.FragmentManager, android.app.Fragment)":"android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentDestroyed(android.app.FragmentManager, android.app.Fragment)\r\n","Flag indicating if the contacts belonging to this group should be\n            visible in any user interface.":"标志指示属于该组的联系人是否应该\r\n            在任何用户界面中可见。\r\n","android.nfc.NfcAdapter.CreateBeamUrisCallback":"android.nfc.NfcAdapter.CreateBeamUrisCallback\r\n","true if the resulting is non-empty":"如果结果非空则为真\r\n","android.media.RemoteController.setSynchronizationMode(int)":"android.media.RemoteController.setSynchronizationMode(int)\r\n","the peer's session description":"对方的会话描述\r\n","android.hardware.lights.LightState.Builder.build()":"android.hardware.lights.LightState.Builder.build()\r\n","android.hardware.camera2.CameraDevice.StateCallback.onDisconnected(android.hardware.camera2.CameraDevice)":"android.hardware.camera2.CameraDevice.StateCallback.onDisconnected(android.hardware.camera2.CameraDevice)\r\n","android.app.Notification.Action.SEMANTIC_ACTION_MARK_AS_READ":"android.app.Notification.Action.SEMANTIC_ACTION_MARK_AS_READ\r\n","android.media.AudioTrack.StreamEventCallback.onTearDown(android.media.AudioTrack)":"android.media.AudioTrack.StreamEventCallback.onTearDown(android.media.AudioTrack)\r\n","Gets number of bands configured for the PreEq stage.":"获取为 PreEq 阶段配置的频段数。\r\n","android.provider.ContactsContract.PinnedPositions.pin(android.content.ContentResolver, long, int)":"android.provider.ContactsContract.PinnedPositions.pin(android.content.ContentResolver, long, int)\r\n","This is the intent that is fired when a search suggestion for creating a contact\n            is clicked on.":"这是创建联系人的搜索建议时触发的意图\r\n            被点击。\r\n","Clears all the metadata that has been set since the MetadataEditor instance was created\n            (with ":"清除自创建 MetadataEditor 实例以来设置的所有元数据\r\n            （和\r\n","android.app.appsearch.AppSearchSchema.StringPropertyConfig":"android.app.appsearch.AppSearchSchema.StringPropertyConfig\r\n","android.media.session.MediaSession.Callback.onSeekTo(long)":"android.media.session.MediaSession.Callback.onSeekTo(长)\r\n","android.media.AudioFormat.Builder":"android.media.AudioFormat.Builder\r\n","android.provider.ContactsContract.PhoneLookupColumns.NORMALIZED_NUMBER":"android.provider.ContactsContract.PhoneLookupColumns.NORMALIZED_NUMBER\r\n","android.media.MediaCodec.CodecException.isRecoverable()":"android.media.MediaCodec.CodecException.isRecoverable()\r\n","android.provider.Settings.Secure.DEFAULT_INPUT_METHOD":"android.provider.Settings.Secure.DEFAULT_INPUT_METHOD\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format19bitARGB1666":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format19bitARGB1666\r\n","Returns the ordered list of resource ID that are considered when resolving attribute\n            values when making an equivalent call to\n            ":"返回解析属性时考虑的资源 ID 的有序列表\r\n            进行等效调用时的值\r\n            \r\n","android.provider.Telephony.BaseMmsColumns.MESSAGE_TYPE":"android.provider.Telephony.BaseMmsColumns.MESSAGE_TYPE\r\n","android.graphics.pdf.PdfDocument.Page":"android.graphics.pdf.PdfDocument.Page\r\n","SessionParams#setOriginatingUri(Uri)":"会话参数#setOriginatingUri(Uri)\r\n","The last phone number dialed (outgoing) or an empty\n            string if none exist yet.":"最后拨打的电话号码（拨出）或空\r\n            字符串（如果尚不存在）。\r\n","android.hardware.camera2.CameraCaptureSession.StateCallback.onClosed(android.hardware.camera2.CameraCaptureSession)":"android.hardware.camera2.CameraCaptureSession.StateCallback.onClosed(android.hardware.camera2.CameraCaptureSession)\r\n"," if not\n            supported by the node or not set.":" 如果不\r\n            节点支持或未设置。\r\n","android.accessibilityservice.AccessibilityService.TakeScreenshotCallback":"android.accessibilityservice.AccessibilityService.TakeScreenshotCallback\r\n","true if the synchronization mode was successfully set.":"如果成功设置了同步模式，则为真。\r\n"," refers to a local file, the file may actually be opened by a\n            process other than the calling application.  This implies that the pathname\n            should be an absolute path (as any other process runs with unspecified current working\n            directory), and that the pathname should reference a world-readable file.\n            As an alternative, the application could first open the file for reading,\n            and then use the file descriptor form ":" 指的是本地文件，该文件实际上可能是由\r\n            调用应用程序以外的进程。这意味着路径名\r\n            应该是绝对路径（因为任何其他进程以未指定的当前工作方式运行\r\n            目录），并且路径名应该引用一个世界可读的文件。\r\n            作为替代方案，应用程序可以先打开文件进行读取，\r\n            然后使用文件描述符形式\r\n","The request that was given to the CameraExtensionSession":"提供给 CameraExtensionSession 的请求\r\n","android.media.tv.TvInputService.Session.layoutSurface(int, int, int, int)":"android.media.tv.TvInputService.Session.layoutSurface(int, int, int, int)\r\n","MediaPlayer.OnSubtitleDataListener":"MediaPlayer.OnSubtitleDataListener\r\n","android.provider.ContactsContract.ProfileSyncState.get(android.content.ContentProviderClient, android.accounts.Account)":"android.provider.ContactsContract.ProfileSyncState.get(android.content.ContentProviderClient, android.accounts.Account)\r\n","android.media.audiofx.EnvironmentalReverb.getReflectionsDelay()":"android.media.audiofx.EnvironmentalReverb.getReflectionsDelay()\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format8bitRGB332":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format8bitRGB332\r\n","The user-visible status for a media route. This may include a description\n            of the currently playing media, if available.":"媒体路由的用户可见状态。这可能包括描述\r\n            当前播放的媒体（如果有）。\r\n","android.media.session.MediaSession.Callback.onPrepareFromSearch(java.lang.String, android.os.Bundle)":"android.media.session.MediaSession.Callback.onPrepareFromSearch(java.lang.String, android.os.Bundle)\r\n","android.media.MediaRouter2.OnGetControllerHintsListener":"android.media.MediaRouter2.OnGetControllerHintsListener\r\n","If set, decode methods that take the Options object will attempt to\n            reuse this bitmap when loading content.":"如果设置，采用 Options 对象的解码方法将尝试\r\n            加载内容时重用此位图。\r\n","An event representing a state change for a component.":"表示组件状态更改的事件。\r\n","android.media.audiofx.AudioEffect.Descriptor.type":"android.media.audiofx.AudioEffect.Descriptor.type\r\n","Creator":"造物主\r\n","The builder class for ":"构建器类\r\n","android.provider.CalendarContract.CalendarColumns.CAL_ACCESS_CONTRIBUTOR":"android.provider.CalendarContract.CalendarColumns.CAL_ACCESS_CONTRIBUTOR\r\n","#getMinExposureCompensation":"#getMinExposureCompensation\r\n","android.hardware.display.VirtualDisplay.Callback.onResumed()":"android.hardware.display.VirtualDisplay.Callback.onResumed()\r\n","android.media.MediaPlayer.TrackInfo":"android.media.MediaPlayer.TrackInfo\r\n","Scheme initialization data.":"方案初始化数据。\r\n","android.app.ApplicationErrorReport.RunningServiceInfo":"android.app.ApplicationErrorReport.RunningServiceInfo\r\n","android.provider.ContactsContract.DataColumns.PREFERRED_PHONE_ACCOUNT_COMPONENT_NAME":"android.provider.ContactsContract.DataColumns.PREFERRED_PHONE_ACCOUNT_COMPONENT_NAME\r\n","android.graphics.Typeface.Builder.build()":"android.graphics.Typeface.Builder.build()\r\n","android.graphics.ColorSpace.Rgb.getTransform()":"android.graphics.ColorSpace.Rgb.getTransform()\r\n","The output failure from the capture, including the failure reason\n                       and the frame number.":"抓包失败的输出，包括失败原因\r\n                       和帧数。\r\n","android.provider.Telephony.BaseMmsColumns.RESPONSE_TEXT":"android.provider.Telephony.BaseMmsColumns.RESPONSE_TEXT\r\n","Opens an InputStream for the contacts's thumbnail photo and returns the\n            photo as a byte stream.":"为联系人的缩略图打开一个 InputStream 并返回\r\n            照片作为字节流。\r\n","The channel type for DVB-SH (satellite).":"DVB-SH（卫星）的频道类型。\r\n","android.provider.ContactsContract.StreamItemsColumns.RES_PACKAGE":"android.provider.ContactsContract.StreamItemsColumns.RES_PACKAGE\r\n","android.provider.FontsContract.Columns.FILE_ID":"android.provider.FontsContract.Columns.FILE_ID\r\n","Returns the range of supported bitrates in bits/second.":"以位/秒为单位返回支持的比特率范围。\r\n","A unique carrier id associated with this APN\n            ":"与此 APN 关联的唯一运营商 ID\r\n            \r\n","android.graphics.text.LineBreaker.ParagraphConstraints.getFirstWidthLineCount()":"android.graphics.text.LineBreaker.ParagraphConstraints.getFirstWidthLineCount()\r\n","An open, read-only ParcelFileDescriptor pointing to the\n                       last backup state provided by the application. May be\n                       ":"一个打开的、只读的 ParcelFileDescriptor 指向\r\n                       应用程序提供的最后备份状态。或许\r\n                       \r\n","Flag indicating that a directory prefers its contents be sorted by\n            ":"指示目录更喜欢其内容排序的标志\r\n            \r\n","android.media.MediaMetadataEditor.putLong(int, long)":"android.media.MediaMetadataEditor.putLong(int, long)\r\n","android.media.tv.TvContract.Channels.SERVICE_TYPE_AUDIO_VIDEO":"android.media.tv.TvContract.Channels.SERVICE_TYPE_AUDIO_VIDEO\r\n","Whether notifications suppressed by DND should not interrupt visually (e.":"被 DND 抑制的通知是否不应在视觉上中断（例如\r\n","the resource ID of font file.":"字体文件的资源 ID。\r\n","android.media.audiofx.Virtualizer.OnParameterChangeListener.onParameterChange(android.media.audiofx.Virtualizer, int, int, short)":"android.media.audiofx.Virtualizer.OnParameterChangeListener.onParameterChange(android.media.audiofx.Virtualizer, int, int, short)\r\n","Set current progress of staging this session.":"设置暂存此会话的当前进度。\r\n","horizontal angle of view. Returns -1.0 when the device\n                    doesn't report view angle information.":"水平视角。当设备返回 -1.0\r\n                    不报告视角信息。\r\n","android.animation.IntArrayEvaluator":"android.animation.IntArrayEvaluator\r\n","android.media.MediaCodecInfo.CodecCapabilities.FEATURE_IntraRefresh":"android.media.MediaCodecInfo.CodecCapabilities.FEATURE_IntraRefresh\r\n","Whether notifications intercepted by DND are prevented from peeking.":"是否禁止窥视被免打扰拦截的通知。\r\n","android.provider.ContactsContract.StatusUpdates.getPresencePrecedence(int)":"android.provider.ContactsContract.StatusUpdates.getPresencePrecedence(int)\r\n","android.content.pm.PackageInstaller.SessionInfo.INVALID_ID":"android.content.pm.PackageInstaller.SessionInfo.INVALID_ID\r\n","android.provider.ContactsContract.StatusColumns.PRESENCE":"android.provider.ContactsContract.StatusColumns.PRESENCE\r\n","Report data.":"报告数据。\r\n","android.provider.Contacts.People.addToGroup(android.content.ContentResolver, long, long)":"android.provider.Contacts.People.addToGroup（android.content.ContentResolver，长，长）\r\n","Used to indicate that a row is not a real event but an original copy of a locally\n            modified event.":"用于指示某行不是真实事件，而是本地事件的原始副本\r\n            修改事件。\r\n","Override to handle requests to play a specific mediaId that was\n            provided by your app's ":"覆盖以处理播放特定 mediaId 的请求\r\n            由您的应用程序提供\r\n","the record number of the record this Uri should reference. This\n                                  must be greater than 0. If there is no record with this record\n                                  number in the specified entity file then it will be treated as a\n                                  non-existent record.":"此 Uri 应引用的记录的记录号。这\r\n                                  必须大于0。如果没有记录有这条记录\r\n                                  指定实体文件中的编号，则它将被视为\r\n                                  不存在的记录。\r\n","the set of values with which to populate the\n            new row":"用于填充的一组值\r\n            新行\r\n","Delete all entries from the bookmarks/history table which are\n             not bookmarks.":"从书签/历史表中删除所有条目\r\n             不是书签。\r\n","Width of activity as a fraction of available display width.":"活动宽度占可用显示宽度的一部分。\r\n","Setting this to a value greater than zero enables a built-in policy that will perform a\n            device or profile wipe after too many incorrect device-unlock passwords have been entered.":"将此设置为大于零的值会启用一个内置策略，该策略将执行\r\n            在输入过多错误的设备解锁密码后擦除设备或配置文件。\r\n","android.provider.ContactsContract.BaseSyncColumns.SYNC4":"android.provider.ContactsContract.BaseSyncColumns.SYNC4\r\n","animatedValue The value most recently calculated for the named property\n            by this ":"animatedValue 最近为命名属性计算的值\r\n            这样\r\n","android.provider.BlockedNumberContract.BlockedNumbers.CONTENT_ITEM_TYPE":"android.provider.BlockedNumberContract.BlockedNumbers.CONTENT_ITEM_TYPE\r\n","android.provider.Settings.Global.APPLY_RAMPING_RINGER":"android.provider.Settings.Global.APPLY_RAMPING_RINGER\r\n","android.app.LauncherActivity.IconResizer.createIconThumbnail(android.graphics.drawable.Drawable)":"android.app.LauncherActivity.IconResizer.createIconThumbnail(android.graphics.drawable.Drawable)\r\n","Return a content description for this MIME type.":"返回此 MIME 类型的内容描述。\r\n","Flag indicating that a Web link can be obtained for the document.":"表示可以获得文档的 Web 链接的标志。\r\n","Security level indicates the robustness of the device's DRM\n            implementation.":"安全级别表示设备 DRM 的稳健性\r\n            执行。\r\n","The service center (SC) through which to send the message, if present.":"发送消息的服务中心 (SC)（如果存在）。\r\n","AudioMetadataMap is a writeable ":"AudioMetadataMap 是可写的\r\n"," for the newly added device":" 对于新添加的设备\r\n","A boolean value indicating whether to use the maximum padding value\n            of all frames in the set (false), or to use the padding value of the\n            frame being shown (true).":"一个布尔值，指示是否使用最大填充值\r\n            集合中的所有帧（假），或使用的填充值\r\n            正在显示的框架 (true)。\r\n"," to prevent this event from being propagated\n            further, or ":" 以防止此事件被传播\r\n            进一步，或\r\n","SQLiteCursor#SQLiteCursor(SQLiteCursorDriver, String, SQLiteQuery)":"SQLiteCursor#SQLiteCursor（SQLiteCursorDriver，字符串，SQLiteQuery）\r\n","inset":"插图\r\n","android.hardware.Camera.Parameters.FOCUS_MODE_CONTINUOUS_PICTURE":"android.hardware.Camera.Parameters.FOCUS_MODE_CONTINUOUS_PICTURE\r\n","true if the application has been granted control of the effect\n            engine, false otherwise.":"如果应用程序已被授予对效果的控制，则为真\r\n            引擎，否则为假。\r\n","android.provider.Telephony.Carriers.CARRIER_ENABLED":"android.provider.Telephony.Carriers.CARRIER_ENABLED\r\n","Gets number of bands configured for the PostEq stage.":"获取为 PostEq 阶段配置的频段数。\r\n","android.provider.Contacts.GroupsColumns.SHOULD_SYNC":"android.provider.Contacts.GroupsColumns.SHOULD_SYNC\r\n","The top margin.":"上边距。\r\n"," providing a directory of\n            status update details.":"提供一个目录\r\n            状态更新详情。\r\n","android.hardware.camera2.CaptureResult.Key.equals(java.lang.Object)":"android.hardware.camera2.CaptureResult.Key.equals(java.lang.Object)\r\n","android.content.pm.PackageInstaller.SessionInfo.getChildSessionIds()":"android.content.pm.PackageInstaller.SessionInfo.getChildSessionIds()\r\n","android.app.assist.AssistStructure.ViewNode.getChildCount()":"android.app.assist.AssistStructure.ViewNode.getChildCount()\r\n","android.provider.ContactsContract.SimAccount.getAccountType()":"android.provider.ContactsContract.SimAccount.getAccountType()\r\n","android.media.AudioTrack.StreamEventCallback.onPresentationEnded(android.media.AudioTrack)":"android.media.AudioTrack.StreamEventCallback.onPresentationEnded(android.media.AudioTrack)\r\n","android.provider.UserDictionary.Words.LOCALE":"android.provider.UserDictionary.Words.LOCALE\r\n","android.provider.Browser.updateVisitedHistory(android.content.ContentResolver, java.lang.String, boolean)":"android.provider.Browser.updateVisitedHistory（android.content.ContentResolver，java.lang.String，布尔值）\r\n","android.provider.Settings.System.WINDOW_ANIMATION_SCALE":"android.provider.Settings.System.WINDOW_ANIMATION_SCALE\r\n","android.provider.ContactsContract.AggregationExceptions":"android.provider.ContactsContract.AggregationExceptions\r\n","android.provider.Contacts.ContactMethods.CONTENT_EMAIL_URI":"android.provider.Contacts.ContactMethods.CONTENT_EMAIL_URI\r\n","android.provider.Telephony.BaseMmsColumns.PRIORITY":"android.provider.Telephony.BaseMmsColumns.PRIORITY\r\n","android.provider.CalendarContract.SyncColumns":"android.provider.CalendarContract.SyncColumns\r\n","A receiver device type of the route indicating the presentation of the media is happening\n            on a TV.":"指示正在呈现媒体的路由的接收器设备类型\r\n            在电视上。\r\n","Class encapsulating subtitle data, as received through the\n            ":"封装字幕数据的类，通过\r\n            \r\n","android.media.MediaMetadataEditor.getBitmap(int, android.graphics.Bitmap)":"android.media.MediaMetadataEditor.getBitmap(int, android.graphics.Bitmap)\r\n","android.app.ActivityManager.RunningAppProcessInfo.importanceReasonCode":"android.app.ActivityManager.RunningAppProcessInfo.importanceReasonCode\r\n","StatusColumns":"状态栏\r\n","android.graphics.drawable.DrawableContainer.DrawableContainerState":"android.graphics.drawable.DrawableContainer.DrawableContainerState\r\n","android.provider.CalendarContract.CalendarColumns.MAX_REMINDERS":"android.provider.CalendarContract.CalendarColumns.MAX_REMINDERS\r\n","android.provider.Telephony.BaseMmsColumns.MESSAGE_BOX_FAILED":"android.provider.Telephony.BaseMmsColumns.MESSAGE_BOX_FAILED\r\n","android.hardware.lights.LightState.Builder":"android.hardware.lights.LightState.Builder\r\n","Key to extract the playing time (in milliseconds) of the\n            media being played\n            from the ":"提取key的播放时间（毫秒）\r\n            正在播放的媒体\r\n            来自\r\n","a font":"一种字体\r\n","the object for the key, as a ":"键的对象，作为\r\n","Constants for metadata about the elementary files of the SIM cards in the phone.":"关于手机中 SIM 卡基本文件的元数据常量。\r\n","android.app.assist.AssistStructure.ViewNode.getHeight()":"android.app.assist.AssistStructure.ViewNode.getHeight()\r\n","Gets the current metering areas. -or- Sets metering areas.":"获取当前的计量区域。 - 或 - 设置计量区域。\r\n","android.provider.ContactsContract.DataColumns.DATA1":"android.provider.ContactsContract.DataColumns.DATA1\r\n","android.media.MediaPlayer.MetricsConstants.ERRORS":"android.media.MediaPlayer.MetricsConstants.ERRORS\r\n","android.media.MediaParser.OutputConsumer":"android.media.MediaParser.OutputConsumer\r\n",", filtered to include only starred contacts.":", 筛选为仅包含加星标的联系人。\r\n","android.location.provider.ProviderProperties.Builder":"android.location.provider.ProviderProperties.Builder\r\n","True if the wake lock is held.":"如果持有唤醒锁，则为真。\r\n","Key to extract the width (in pixels) of the captured video\n            from the ":"提取捕获视频的宽度（以像素为单位）的键\r\n            来自\r\n","Sets the capture size, i.":"设置捕获大小，i。\r\n","The unique id for this status":"此状态的唯一 ID\r\n","android.provider.CallLog.Calls.NUMBER_PRESENTATION":"android.provider.CallLog.Calls.NUMBER_PRESENTATION\r\n","android.app.ActivityManager.RunningTaskInfo.description":"android.app.ActivityManager.RunningTaskInfo.description\r\n","android.app.Notification.Extender":"android.app.Notification.Extender\r\n","error state, or ":"错误状态，或\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV420PackedSemiPlanar":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV420PackedSemiPlanar\r\n","android.database.DatabaseUtils.InsertHelper.prepareForReplace()":"android.database.DatabaseUtils.InsertHelper.prepareForReplace()\r\n","Called when an output frame has rendered on the output surface.":"当输出帧在输出表面上呈现时调用。\r\n","android.os.Debug.InstructionCount.globalTotal()":"android.os.Debug.InstructionCount.globalTotal()\r\n","android.hardware.Camera.Parameters.SCENE_MODE_ACTION":"android.hardware.Camera.Parameters.SCENE_MODE_ACTION\r\n","The URI for the poster art used as the background of the app link template for this\n            channel.":"用作此应用程序链接模板背景的海报艺术的 URI\r\n            渠道。\r\n","android.media.session.MediaSession.QueueItem.getDescription()":"android.media.session.MediaSession.QueueItem.getDescription()\r\n","Returns the name to be displayed for any replies sent by the user":"返回要为用户发送的任何回复显示的名称\r\n","true if the line has a TAB character":"如果该行有制表符则为真\r\n","android.media.audiofx.DynamicsProcessing.MbcBand.getRatio()":"android.media.audiofx.DynamicsProcessing.MbcBand.getRatio()\r\n","The new progress value, between [0, 1].":"新的进度值，介于 [0, 1] 之间。\r\n","android.provider.Settings.System.WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE":"android.provider.Settings.System.WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE\r\n","android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentPaused(android.app.FragmentManager, android.app.Fragment)":"android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentPaused(android.app.FragmentManager, android.app.Fragment)\r\n","android.content.pm.ActivityInfo.WindowLayout":"android.content.pm.ActivityInfo.WindowLayout\r\n","Session#commit(IntentSender)":"会话#commit（IntentSender）\r\n","AES-CBC Encryption/Ciphering Algorithm.":"AES-CBC 加密/加密算法。\r\n","The ID of document that was used (e.g. from ":"使用的文档的 ID（例如来自\r\n","Set the currently selected list item to the specified\n            position with the adapter's data":"将当前选中的列表项设置为指定的\r\n            适配器数据的位置\r\n","android.bluetooth.BluetoothAdapter.LeScanCallback":"android.bluetooth.BluetoothAdapter.LeScanCallback\r\n","android.app.Notification.Action.title":"android.app.Notification.Action.title\r\n","android.media.session.PlaybackState.CustomAction.getAction()":"android.media.session.PlaybackState.CustomAction.getAction()\r\n","android.media.MediaCodec.LinearBlock.isCodecCopyFreeCompatible(java.lang.String[])":"android.media.MediaCodec.LinearBlock.isCodecCopyFreeCompatible(java.lang.String[])\r\n","android.provider.Contacts.Settings.getSetting(android.content.ContentResolver, java.lang.String, java.lang.String)":"android.provider.Contacts.Settings.getSetting（android.content.ContentResolver，java.lang.String，java.lang.String）\r\n","the current status of all satellites.":"所有卫星的当前状态。\r\n","The comma-separated genre string of this TV channel.":"此电视频道的逗号分隔流派字符串。\r\n","android.provider.ContactsContract.ContactStatusColumns.CONTACT_STATUS_ICON":"android.provider.ContactsContract.ContactStatusColumns.CONTACT_STATUS_ICON\r\n","android.provider.ContactsContract.StreamItemsColumns.TEXT":"android.provider.ContactsContract.StreamItemsColumns.TEXT\r\n","userHandle":"用户句柄\r\n","RouteInfo#PLAYBACK_VOLUME_VARIABLE":"RouteInfo#PLAYBACK_VOLUME_VARIABLE\r\n","A fine-grained carrier id.":"细粒度的运营商 ID。\r\n"," in which this receiver is\n                             running.":" 这个接收器在其中\r\n                             跑步。\r\n","true if the event was successfully sent, false otherwise.":"如果事件已成功发送，则为 true，否则为 false。\r\n","the line width of the starting of the paragraph":"段落开头的线宽\r\n","android.content.SyncRequest.Builder":"android.content.SyncRequest.Builder\r\n","android.media.AudioFormat.Builder.AudioFormat$Builder()":"android.media.AudioFormat.Builder.AudioFormat$Builder()\r\n","TvInputManager#TIME_SHIFT_STATUS_UNAVAILABLE":"TvInputManager#TIME_SHIFT_STATUS_UNAVAILABLE\r\n","AV1 Main profile 4:2:0 10-bit with HDR10.":"AV1 主要配置文件 4:2:0 10 位，带 HDR10。\r\n","This indicates that an operation was attempted that could not be\n            supported by the crypto system of the device in its current\n            configuration.":"这表示尝试了无法执行的操作\r\n            由设备的加密系统在其当前支持\r\n            配置。\r\n","android.app.appsearch.SearchResult.Builder":"android.app.appsearch.SearchResult.Builder\r\n","#PHOTO_SUPPORT_FULL":"#PHOTO_SUPPORT_FULL\r\n"," that affect the volume change.":" 影响体积变化。\r\n","the sample rate expressed in Hertz. 44100Hz is currently the only\n              rate that is guaranteed to work on all devices, but other rates such as 22050,\n              16000, and 11025 may work on some devices.\n              ":"以赫兹表示的采样率。 44100Hz是目前唯一\r\n              保证在所有设备上工作的速率，但其他速率，如 22050，\r\n              16000 和 11025 可能适用于某些设备。\r\n              \r\n","android.provider.VoicemailContract.Status.CONFIGURATION_STATE":"android.provider.VoicemailContract.Status.CONFIGURATION_STATE\r\n","android.media.MediaSync.Callback.onAudioBufferConsumed(android.media.MediaSync, java.nio.ByteBuffer, int)":"android.media.MediaSync.Callback.onAudioBufferConsumed(android.media.MediaSync, java.nio.ByteBuffer, int)\r\n","Zero or one value [0,1].":"零个或一个值 [0,1]。\r\n"," if you want to enable the overlay view. ":" 如果你想启用覆盖视图。\r\n","android.hardware.Camera.Face.leftEye":"android.hardware.Camera.Face.leftEye\r\n","android.hardware.SensorManager.DynamicSensorCallback":"android.hardware.SensorManager.DynamicSensorCallback\r\n","Longitude in degrees.":"以度为单位的经度。\r\n","android.media.MediaDrm.ErrorCodes.ERROR_PROVISIONING_REQUEST_REJECTED":"android.media.MediaDrm.ErrorCodes.ERROR_PROVISIONING_REQUEST_REJECTED\r\n","android.media.projection.MediaProjection.Callback.onStop()":"android.media.projection.MediaProjection.Callback.onStop()\r\n","android.provider.ContactsContract.StatusColumns.DO_NOT_DISTURB":"android.provider.ContactsContract.StatusColumns.DO_NOT_DISTURB\r\n","android.media.EncoderProfiles.AudioProfile.getMediaType()":"android.media.EncoderProfiles.AudioProfile.getMediaType()\r\n","\n            directly, telling the platform that it can generate the appropriate transitions":"\r\n            直接告诉平台它可以生成适当的转换\r\n","android.media.AudioTrack.MetricsConstants.SAMPLERATE":"android.media.AudioTrack.MetricsConstants.SAMPLERATE\r\n","android.media.audiofx.DynamicsProcessing.Config.isLimiterInUse()":"android.media.audiofx.DynamicsProcessing.Config.isLimiterInUse()\r\n","android.hardware.Camera.Parameters.getFocusDistances(float[])":"android.hardware.Camera.Parameters.getFocusDistances(float[])\r\n","android.provider.Settings.System.WIFI_WATCHDOG_PING_COUNT":"android.provider.Settings.System.WIFI_WATCHDOG_PING_COUNT\r\n","android.database.DatabaseUtils.InsertHelper.execute()":"android.database.DatabaseUtils.InsertHelper.execute()\r\n"," if it does not belong to a multi-package session.":" 如果它不属于多包会话。\r\n","Returns the range of supported video frame rates for a video size.":"返回视频大小支持的视频帧速率范围。\r\n","android.provider.DocumentsContract.Document.FLAG_SUPPORTS_WRITE":"android.provider.DocumentsContract.Document.FLAG_SUPPORTS_WRITE\r\n","The content:// style URI used for \"type-to-filter\" functionality on the\n            ":"用于“type-to-filter”功能的 content:// 样式 URI\r\n            \r\n","android.app.assist.AssistStructure.ViewNode.getHint()":"android.app.assist.AssistStructure.ViewNode.getHint()\r\n","android.os.storage.StorageManager.StorageVolumeCallback":"android.os.storage.StorageManager.StorageVolumeCallback\r\n","android.app.appsearch.SetSchemaResponse.MigrationFailure.getAppSearchResult()":"android.app.appsearch.SetSchemaResponse.MigrationFailure.getAppSearchResult()\r\n","Gets the linkGroup index for this Limiter Stage. -or- Sets the linkGroup index for this limiter Stage.":"获取此 Limiter Stage 的 linkGroup 索引。 - 或 - 设置此限制器阶段的 linkGroup 索引。\r\n","android.net.IpSecTransform.Builder":"android.net.IpSecTransform.Builder\r\n","android.media.tv.TvContract.Programs.CONTENT_ITEM_TYPE":"android.media.tv.TvContract.Programs.CONTENT_ITEM_TYPE\r\n","Metered state.":"计量状态。\r\n","android.media.tv.TvView.TvInputCallback.onVideoAvailable(java.lang.String)":"android.media.tv.TvView.TvInputCallback.onVideoAvailable(java.lang.String)\r\n","hardRestricted":"硬限制\r\n","android.graphics.drawable.DrawableContainer.DrawableContainerState.setVariablePadding(boolean)":"android.graphics.drawable.DrawableContainer.DrawableContainerState.setVariablePadding(boolean)\r\n","Limits the effective size of the ":"限制了有效尺寸\r\n"," of the original recurring event for which this\n            event is an exception.":" 的原始重复事件\r\n            事件是一个例外。\r\n","android.media.MediaDrm.SessionException.isTransient()":"android.media.MediaDrm.SessionException.isTransient()\r\n","android.app.usage.UsageEvents.Event.getAppStandbyBucket()":"android.app.usage.UsageEvents.Event.getAppStandbyBucket()\r\n","android.app.Notification.Action.SEMANTIC_ACTION_THUMBS_UP":"android.app.Notification.Action.SEMANTIC_ACTION_THUMBS_UP\r\n","android.media.tv.TvInputService.Session.onTouchEvent(android.view.MotionEvent)":"android.media.tv.TvInputService.Session.onTouchEvent(android.view.MotionEvent)\r\n","#DEVICE_TYPE_TV":"#DEVICE_TYPE_TV\r\n","Interface definition for a callback to be invoked when the\n            session state has been lost and is now invalid":"调用回调的接口定义\r\n            会话状态已丢失，现在无效\r\n","\n            calls of type PROVISION_REQUIRED occured.":"\r\n            发生了 PROVISION_REQUIRED 类型的调用。\r\n","android.app.assist.AssistStructure.ViewNode.getImportantForAutofill()":"android.app.assist.AssistStructure.ViewNode.getImportantForAutofill()\r\n","android.app.appsearch.SearchResult.MatchInfo.getPropertyPath()":"android.app.appsearch.SearchResult.MatchInfo.getPropertyPath()\r\n","The subject of the message, if present.":"消息的主题（如果存在）。\r\n","the early reflections level in millibels.":"以毫贝为单位的早期反射水平。\r\n","AVC High 10 profile.":"AVC 高 10 配置文件。\r\n","android.location.GnssMeasurementsEvent.Callback.STATUS_NOT_SUPPORTED":"android.location.GnssMeasurementsEvent.Callback.STATUS_NOT_SUPPORTED\r\n","CallLog.Calls#TYPE":"通话记录.Calls#TYPE\r\n","The link text of the app link template for this channel.":"此频道的应用程序链接模板的链接文本。\r\n","android.media.AudioManager.setCommunicationDevice(android.media.AudioDeviceInfo)":"android.media.AudioManager.setCommunicationDevice(android.media.AudioDeviceInfo)\r\n"," to satisfy the application's\n              latency requirements.\n              If ":" 以满足应用的\r\n              延迟要求。\r\n              如果\r\n","android.location.GnssCapabilities.Builder.build()":"android.location.GnssCapabilities.Builder.build()\r\n","android.provider.ContactsContract.Profile.CONTENT_VCARD_URI":"android.provider.ContactsContract.Profile.CONTENT_VCARD_URI\r\n","#BOOKMARKS_URI":"#BOOKMARKS_URI\r\n","The ComponentName of the CallScreeningService which blocked this call.":"阻止此调用的 CallScreeningService 的 ComponentName。\r\n","android.app.Person.Builder.build()":"android.app.Person.Builder.build()\r\n","Build a new LineBreaker with given parameters.":"使用给定参数构建一个新的 LineBreaker。\r\n","android.media.MediaRecorder.MetricsConstants.VIDEO_PROFILE":"android.media.MediaRecorder.MetricsConstants.VIDEO_PROFILE\r\n","TP-Reply-Path":"TP回复路径\r\n",", in which case no prior state is being\n                       provided and the application should perform a full backup.":"，在这种情况下，没有先前的状态\r\n                       提供，应用程序应执行完整备份。\r\n","Add a surface to the list of targets for this request":"为此请求将表面添加到目标列表\r\n","Sort key based on the alternative representation of the full name,\n            ":"根据全名的替代表示对键进行排序，\r\n            \r\n","android.media.audiofx.DynamicsProcessing.Config.getMbcBandCount()":"android.media.audiofx.DynamicsProcessing.Config.getMbcBandCount()\r\n","Retrieves the subscription ID associated with this ":"检索与此关联的订阅 ID\r\n","android.accessibilityservice.AccessibilityService.MagnificationController.getMagnificationRegion()":"android.accessibilityservice.AccessibilityService.MagnificationController.getMagnificationRegion()\r\n","Used for receiving notifications when GNSS events happen.":"用于在 GNSS 事件发生时接收通知。\r\n","android.location.GnssAntennaInfo.SphericalCorrections.getDeltaPhi()":"android.location.GnssAntennaInfo.SphericalCorrections.getDeltaPhi()\r\n","Informs the application that the user is allowed to watch the current program content.":"通知应用程序允许用户观看当前节目内容。\r\n","android.database.AbstractCursor.onChange(boolean)":"android.database.AbstractCursor.onChange(boolean)\r\n","android.media.audiofx.DynamicsProcessing.BandBase":"android.media.audiofx.DynamicsProcessing.BandBase\r\n","android.media.EncoderProfiles.AudioProfile.getChannels()":"android.media.EncoderProfiles.AudioProfile.getChannels()\r\n","android.provider.Contacts.PresenceColumns.IM_ACCOUNT":"android.provider.Contacts.PresenceColumns.IM_ACCOUNT\r\n","android.media.MediaDrm.ErrorCodes.ERROR_PROVISIONING_RETRY":"android.media.MediaDrm.ErrorCodes.ERROR_PROVISIONING_RETRY\r\n","android.os.Debug.MemoryInfo.nativeSharedDirty":"android.os.Debug.MemoryInfo.nativeSharedDirty\r\n","android.hardware.Camera.Parameters.FLASH_MODE_ON":"android.hardware.Camera.Parameters.FLASH_MODE_ON\r\n","icon drawable to use to represent this group":"用于表示该组的可绘制图标\r\n","android.hardware.Camera.Parameters.FLASH_MODE_AUTO":"android.hardware.Camera.Parameters.FLASH_MODE_AUTO\r\n","Called when the application requests to pause playback.":"当应用程序请求暂停播放时调用。\r\n"," to use the default Wi-Fi sleep\n            policy, which is to sleep shortly after the turning off\n            according to the ":" 使用默认的 Wi-Fi 睡眠\r\n            政策，这是在关闭后不久休眠\r\n            根据\r\n","Combine all of the options that have been set and return a new ":"组合所有已设置的选项并返回一个新的\r\n","Called to notify when the status of a MIDI device has changed":"当 MIDI 设备的状态改变时被调用以通知\r\n","The animation which was repeated.":"重复的动画。\r\n","Number of packets received during the bucket's time interval.":"在桶的时间间隔内收到的数据包数。\r\n","#setTrustAgentConfiguration(ComponentName, ComponentName, PersistableBundle)":"#setTrustAgentConfiguration（ComponentName，ComponentName，PersistableBundle）\r\n","android.app.ListActivity.setSelection(int)":"android.app.ListActivity.setSelection(int)\r\n","Returns the time at which the alarm is going to trigger.":"返回警报将要触发的时间。\r\n","android.content.pm.LauncherApps.Callback.onPackagesUnavailable(java.lang.String[], android.os.UserHandle, boolean)":"android.content.pm.LauncherApps.Callback.onPackagesUnavailable(java.lang.String[], android.os.UserHandle, boolean)\r\n","android.media.VolumeShaper.Configuration":"android.media.VolumeShaper.配置\r\n","ContactsContract.Contacts#CONTENT_FILTER_URI Contacts.CONTENT_FILTER_URI":"ContactsContract.Contacts#CONTENT_FILTER_URI 联系人.CONTENT_FILTER_URI\r\n","android.net.nsd.NsdManager.DiscoveryListener":"android.net.nsd.NsdManager.DiscoveryListener\r\n","android.provider.Settings.System.FONT_SCALE":"android.provider.Settings.System.FONT_SCALE\r\n"," instance qualified by all the properties set\n              on this ":" 由所有属性集限定的实例\r\n              在这\r\n","the maximum number of font families for the custom fallback":"自定义回退的最大字体系列数\r\n","Parcelable#writeToParcel Parcelable.writeToParcel()":"Parcelable#writeToParcel Parcelable.writeToParcel()\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityPostPaused(android.app.Activity)":"android.app.Application.ActivityLifecycleCallbacks.onActivityPostPaused(android.app.Activity)\r\n","android.media.tv.TvContract.Channels.COLUMN_DESCRIPTION":"android.media.tv.TvContract.Channels.COLUMN_DESCRIPTION\r\n"," if the application is not prepared.":" 如果应用程序没有准备好。\r\n"," used to receive updates on carrier identity change\n            on the given subscriptionId":" 用于接收有关运营商身份更改的更新\r\n            在给定的 subscriptionId 上\r\n","The OnParameterChangeListener interface defines a method called by the Equalizer when a\n            parameter value has changed.":"OnParameterChangeListener 接口定义均衡器调用的方法\r\n            参数值已更改。\r\n","#CONFIGURATION_STATE":"#CONFIGURATION_STATE\r\n","8 bits per pixel Y color format.":"每像素 8 位 Y 颜色格式。\r\n","android.media.audiofx.Visualizer.setMeasurementMode(int)":"android.media.audiofx.Visualizer.setMeasurementMode(int)\r\n","the camera device that has become opened":"已打开的相机设备\r\n","Minimal height of activity in pixels to be able to display its content.":"能够显示其内容的最小活动高度（以像素为单位）。\r\n","The data to propagate back to the originating\n            activity.":"要传播回原始数据的数据\r\n            活动。\r\n","#WIFI_SLEEP_POLICY":"#WIFI_SLEEP_POLICY\r\n","CameraCharacteristics#get":"相机特性#get\r\n","an error code defined in ":"中定义的错误代码\r\n","Specify how the gesture library will handle orientation.":"指定手势库将如何处理方向。\r\n","android.media.MediaDrm.ProvisionRequest.getData()":"android.media.MediaDrm.ProvisionRequest.getData()\r\n","android.bluetooth.BluetoothHidDevice.Callback.onVirtualCableUnplug(android.bluetooth.BluetoothDevice)":"android.bluetooth.BluetoothHidDevice.Callback.onVirtualCableUnplug(android.bluetooth.BluetoothDevice)\r\n","android.media.audiofx.DynamicsProcessing.Config.getPostEqBandCount()":"android.media.audiofx.DynamicsProcessing.Config.getPostEqBandCount()\r\n","Indicates whether the bubble is currently visually suppressed from the bubble stack.":"指示气泡当前是否在视觉上从气泡堆栈中被抑制。\r\n","android.accessibilityservice.AccessibilityService.MagnificationController.setCenter(float, float, boolean)":"android.accessibilityservice.AccessibilityService.MagnificationController.setCenter(float, float, boolean)\r\n","First date to remove.  If -1, all dates before end.\n                         Inclusive.":"要删除的第一个日期。如果为 -1，则结束之前的所有日期。\r\n                         包括的。\r\n","Builder for creating a ":"用于创建一个\r\n","the code to indicate the error that occurred. This value will be one of\n                VCN_ERROR_CODE_*.":"指示发生的错误的代码。该值将是其中之一\r\n                VCN_ERROR_CODE_*。\r\n","#setDecayHFRatio(short)":"#setDecayHFRatio（短）\r\n","android.provider.ContactsContract.GroupsColumns.GROUP_VISIBLE":"android.provider.ContactsContract.GroupsColumns.GROUP_VISIBLE\r\n","The channel type for DVB-S2 (satellite).":"DVB-S2（卫星）的频道类型。\r\n","android.hardware.Camera.Parameters.getPictureFormat()":"android.hardware.Camera.Parameters.getPictureFormat()\r\n","Activity#onPause super.onPause()":"活动#onPause super.onPause()\r\n","android.provider.CalendarContract.CalendarColumns.CALENDAR_TIME_ZONE":"android.provider.CalendarContract.CalendarColumns.CALENDAR_TIME_ZONE\r\n","android.app.admin.SecurityLog.SecurityEvent":"android.app.admin.SecurityLog.SecurityEvent\r\n","android.media.MediaMetadata.Builder.MediaMetadata$Builder()":"android.media.MediaMetadata.Builder.MediaMetadata$Builder()\r\n","android.provider.CalendarContract.CalendarCache.KEY_TIMEZONE_TYPE":"android.provider.CalendarContract.CalendarCache.KEY_TIMEZONE_TYPE\r\n","This function returns the result of linearly interpolating the start and\n            end PointF values, with ":"此函数返回线性插值开始和的结果\r\n            结束 PointF 值，与\r\n","android.provider.CalendarContract.CalendarCache.TIMEZONE_TYPE_HOME":"android.provider.CalendarContract.CalendarCache.TIMEZONE_TYPE_HOME\r\n","android.app.appsearch.AppSearchSchema.PropertyConfig.CARDINALITY_OPTIONAL":"android.app.appsearch.AppSearchSchema.PropertyConfig.CARDINALITY_OPTIONAL\r\n","Constant values used as parameters to ":"用作参数的常量值\r\n","andThen":"进而\r\n","android.provider.Settings.Secure.TTS_DEFAULT_VARIANT":"android.provider.Settings.Secure.TTS_DEFAULT_VARIANT\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format24bitRGB888":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format24bitRGB888\r\n","StrictMode":"严格模式\r\n","Interface definition for a callback to be invoked when the media playback position is\n            queried.":"媒体播放位置为回调的接口定义\r\n            查询。\r\n"," to obtain a session ID before\n              construction.":" 之前获取会话ID\r\n              建造。\r\n","Size of the image, without scaling or cropping.":"图像的大小，没有缩放或裁剪。\r\n","android.graphics.PorterDuff.Mode":"android.graphics.PorterDuff.Mode\r\n","Array representing uncertainty on corrections on a spherical mapping.":"表示球面映射校正不确定性的数组。\r\n","the maximum volume at which the playback associated with this route is performed":"执行与此路由关联的播放的最大音量\r\n","Interface used to allow the creator of a dialog to run some code when an\n            item in a multi-choice dialog is clicked.":"用于允许对话框的创建者在出现问题时运行一些代码的接口\r\n            单击多选对话框中的项目。\r\n","android.provider.ContactsContract.RawContactsColumns.ACCOUNT_TYPE_AND_DATA_SET":"android.provider.ContactsContract.RawContactsColumns.ACCOUNT_TYPE_AND_DATA_SET\r\n","android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentPreAttached(android.app.FragmentManager, android.app.Fragment, android.content.Context)":"android.app.FragmentManager.FragmentLifecycleCallbacks.onFragmentPreAttached(android.app.FragmentManager, android.app.Fragment, android.content.Context)\r\n","If this is non-null, the decoder will try to decode into this\n            color space.":"如果这是非空的，解码器将尝试解码成这个\r\n            色彩空间。\r\n","the contents of the preview frame in the format defined\n             by ":"定义格式的预览框架的内容\r\n             经过\r\n","android.database.DatabaseUtils.InsertHelper.bind(int, int)":"android.database.DatabaseUtils.InsertHelper.bind(int, int)\r\n","Constructor for Multi-Band Compressor (MBC) stage":"多频带压缩器 (MBC) 阶段的构造函数\r\n","android.appwidget.AppWidgetProvider.onAppWidgetOptionsChanged(android.content.Context, android.appwidget.AppWidgetManager, int, android.os.Bundle)":"android.appwidget.AppWidgetProvider.onAppWidgetOptionsChanged(android.content.Context, android.appwidget.AppWidgetManager, int, android.os.Bundle)\r\n","\n            is finished and your Drawable is ready.":"\r\n            已完成，您的 Drawable 已准备就绪。\r\n","the ImageReader the callback is associated with.":"与回调关联的 ImageReader。\r\n","android.content.pm.ActivityInfo.WindowLayout.widthFraction":"android.content.pm.ActivityInfo.WindowLayout.widthFraction\r\n","android.content.DialogInterface.OnCancelListener.onCancel(android.content.DialogInterface)":"android.content.DialogInterface.OnCancelListener.onCancel(android.content.DialogInterface)\r\n","The new set of events to watch, or 0 to unregister the listener.":"要监视的新事件集，或 0 以注销侦听器。\r\n","The system does not support tracking of GNSS Measurements.":"系统不支持跟踪 GNSS 测量值。\r\n","android.media.MediaDrm.MetricsConstants.CLOSE_SESSION_OK_COUNT":"android.media.MediaDrm.MetricsConstants.CLOSE_SESSION_OK_COUNT\r\n","android.provider.ContactsContract.Directory.DIRECTORY_AUTHORITY":"android.provider.ContactsContract.Directory.DIRECTORY_AUTHORITY\r\n","android.app.Notification.MessagingStyle.MAXIMUM_RETAINED_MESSAGES":"android.app.Notification.MessagingStyle.MAXIMUM_RETAINED_MESSAGES\r\n","Return the current list of routes in this category that have been added\n            to the MediaRouter.":"返回此类别中已添加的当前路由列表\r\n            到 MediaRouter。\r\n","Unexpected internal failure in ":"意外的内部故障\r\n","Constructs and returns a PropertyValuesHolder with a given property name and\n            set of ":"构造并返回具有给定属性名称的 PropertyValuesHolder 和\r\n            一组\r\n","android.provider.Settings.System.RADIO_NFC":"android.provider.Settings.System.RADIO_NFC\r\n","Gets current zoom value. -or- Sets current zoom value.":"获取当前缩放值。 - 或 - 设置当前缩放值。\r\n","Broadcast Action: SIM accounts have changed, call\n            ":"Broadcast Action: SIM 账户已经改变，调用\r\n            \r\n","Key to extract the number of channels being recorded in this record track\n            from the ":"提取此记录轨道中正在记录的通道数的键\r\n            来自\r\n","Noise Gate Threshold in decibels (dB)":"以分贝 (dB) 为单位的噪声门阈值\r\n","android.media.session.MediaController.Callback.onPlaybackStateChanged(android.media.session.PlaybackState)":"android.media.session.MediaController.Callback.onPlaybackStateChanged(android.media.session.PlaybackState)\r\n","android.hardware.Camera.Area.rect":"android.hardware.Camera.Area.rect\r\n","android.media.audiofx.DynamicsProcessing.Channel.getInputGain()":"android.media.audiofx.DynamicsProcessing.Channel.getInputGain()\r\n","MediaDescription":"媒体描述\r\n","android.provider.Telephony.Carriers.NETWORK_TYPE_BITMASK":"android.provider.Telephony.Carriers.NETWORK_TYPE_BITMASK\r\n","A listener which is invoked when file descriptor related events occur.":"发生文件描述符相关事件时调用的侦听器。\r\n","Flag indicating that at least one directory under this root supports\n            creating content.":"Flag 表示该根目录下至少有一个目录支持\r\n            创建内容。\r\n","android.provider.Settings.System.setShowGTalkServiceStatus(android.content.ContentResolver, boolean)":"android.provider.Settings.System.setShowGTalkServiceStatus（android.content.ContentResolver，布尔值）\r\n","android.hardware.Camera.Parameters.getFocalLength()":"android.hardware.Camera.Parameters.getFocalLength()\r\n","Called when a recoverable error has been encountered during authentication.":"在身份验证期间遇到可恢复的错误时调用。\r\n","android.provider.Contacts.Groups.DEFAULT_SORT_ORDER":"android.provider.Contacts.Groups.DEFAULT_SORT_ORDER\r\n","The end minute of the instance measured from midnight in the\n            local time zone.":"实例的结束分钟从午夜开始计算\r\n            本地时区。\r\n","#inDensity":"#inDensity\r\n","android.opengl.GLSurfaceView.EGLWindowSurfaceFactory":"android.opengl.GLSurfaceView.EGLWindowSurfaceFactory\r\n","android.provider.Telephony.BaseMmsColumns.SEEN":"android.provider.Telephony.BaseMmsColumns.SEEN\r\n","#data":"＃数据\r\n","how volume is handling on the route":"路线上的音量如何处理\r\n","the bridge tag or null if not present.":"桥标记或 null（如果不存在）。\r\n","The key for updating the time zone used by the provider when it\n            generates the instances table.":"更新提供者使用的时区的密钥\r\n            生成实例表。\r\n","android.view.View#getScrollX() View.getScrollY()":"android.view.View#getScrollX() 查看.getScrollY()\r\n","android.content.res.Resources.Theme.dump(int, java.lang.String, java.lang.String)":"android.content.res.Resources.Theme.dump(int, java.lang.String, java.lang.String)\r\n"," to determine the minimum\n              required buffer size for the successful creation of an AudioRecord instance. Using values\n              smaller than getMinBufferSize() will result in an initialization failure.":" 确定最小值\r\n              成功创建 AudioRecord 实例所需的缓冲区大小。使用值\r\n              小于 getMinBufferSize() 将导致初始化失败。\r\n","android.provider.Browser.BookmarkColumns":"android.provider.Browser.BookmarkColumns\r\n","Requested buffer size, application shall respond with at least given\n                number of bytes.":"请求的缓冲区大小，应用程序应至少响应给定\r\n                字节数。\r\n","android.app.appsearch.GetByDocumentIdRequest.Builder.build()":"android.app.appsearch.GetByDocumentIdRequest.Builder.build()\r\n","This is called when there is a change on the selected tracks.":"当所选轨道发生变化时调用此方法。\r\n","Enum for the ways a path may be filled.":"路径可能被填充的方式的枚举。\r\n","The destination array, cannot be null, its length\n                             must be >= 9":"目标数组，不能为空，它的长度\r\n                             必须 >= 9\r\n","the output vector {objX, objY, objZ, objW}, that returns the\n                   computed homogeneous object coordinates.":"输出向量 {objX, objY, objZ, objW}，返回\r\n                   计算齐次对象坐标。\r\n","android.media.MediaRouter.RouteInfo.getVolumeHandling()":"android.media.MediaRouter.RouteInfo.getVolumeHandling()\r\n","android.hardware.camera2.CameraOfflineSession.CameraOfflineSessionCallback.onClosed(android.hardware.camera2.CameraOfflineSession)":"android.hardware.camera2.CameraOfflineSession.CameraOfflineSessionCallback.onClosed(android.hardware.camera2.CameraOfflineSession)\r\n","android.graphics.ColorSpace.Rgb.getInverseTransform()":"android.graphics.ColorSpace.Rgb.getInverseTransform()\r\n","android.app.appsearch.GetSchemaResponse.Builder.build()":"android.app.appsearch.GetSchemaResponse.Builder.build()\r\n","android.hardware.Camera.Parameters.getSupportedSceneModes()":"android.hardware.Camera.Parameters.getSupportedSceneModes()\r\n","android.app.assist.AssistStructure.WindowNode.getDisplayId()":"android.app.assist.AssistStructure.WindowNode.getDisplayId()\r\n","BroadcastReceiver#getAbortBroadcast()\n            BroadcastReceiver.getAbortBroadcast()":"广播接收器#getAbortBroadcast()\r\n            BroadcastReceiver.getAbortBroadcast()\r\n","#openDevice":"#打开设备\r\n","android.os.CancellationSignal.OnCancelListener":"android.os.CancellationSignal.OnCancelListener\r\n","android.app.Application.ActivityLifecycleCallbacks.onActivityPaused(android.app.Activity)":"android.app.Application.ActivityLifecycleCallbacks.onActivityPaused(android.app.Activity)\r\n","the KeyEvent object containing full information about\n                         the event":"包含有关的完整信息的 KeyEvent 对象\r\n                         事件\r\n","android.animation.Animator.AnimatorPauseListener":"android.animation.Animator.AnimatorPauseListener\r\n","android.provider.DocumentsContract.Document.COLUMN_DOCUMENT_ID":"android.provider.DocumentsContract.Document.COLUMN_DOCUMENT_ID\r\n","Exception that indicates that the file descriptor was detached.":"指示文件描述符已分离的异常。\r\n","the dialog that was dismissed will be passed into the\n                          method":"被关闭的对话框将被传递到\r\n                          方法\r\n","android.media.MediaCas.EventListener":"android.media.MediaCas.EventListener\r\n","Height of activity as a fraction of available display height.":"活动高度占可用显示高度的一部分。\r\n","android.app.assist.AssistStructure.ViewNode.getHintIdEntry()":"android.app.assist.AssistStructure.ViewNode.getHintIdEntry()\r\n","android.app.Notification.WearableExtender.getHintAvoidBackgroundClipping()":"android.app.Notification.WearableExtender.getHintAvoidBackgroundClipping()\r\n","#requestFonts":"#requestFonts\r\n",": This process is running an\n            application that can not save its state, and thus can't be killed\n            while in the background.":": 这个进程正在运行\r\n            无法保存其状态的应用程序，因此无法终止\r\n            在后台时。\r\n","Set a tag for this request.":"为此请求设置标签。\r\n","android.location.GnssAntennaInfo.SphericalCorrections.getDeltaTheta()":"android.location.GnssAntennaInfo.SphericalCorrections.getDeltaTheta()\r\n","the unscaled screen-relative Y coordinate on which to\n                           center the viewport":"未缩放的屏幕相对 Y 坐标\r\n                           将视口居中\r\n","android.media.RemoteController.OnClientUpdateListener.onClientPlaybackStateUpdate(int, long, long, float)":"android.media.RemoteController.OnClientUpdateListener.onClientPlaybackStateUpdate(int, long, long, float)\r\n","android.app.appsearch.ReportSystemUsageRequest.Builder":"android.app.appsearch.ReportSystemUsageRequest.Builder\r\n"," from query.":" 从查询。\r\n"," or when the user explicitly\n            cancelled.":" 或者当用户明确\r\n            取消。\r\n","android.graphics.Picture.writeToStream(java.io.OutputStream)":"android.graphics.Picture.writeToStream(java.io.OutputStream)\r\n","android.os.FileUtils.ProgressListener":"android.os.FileUtils.ProgressListener\r\n","A callback for camera devices becoming available or unavailable to open.":"相机设备可用或不可打开的回调。\r\n","The resulting height of the bitmap.":"位图的结果高度。\r\n","Override to handle requests to skip to the previous media item.":"覆盖以处理跳至上一个媒体项目的请求。\r\n","android.media.MediaCodecInfo.CodecProfileLevel.AV1ProfileMain10":"android.media.MediaCodecInfo.CodecProfileLevel.AV1ProfileMain10\r\n","android.opengl.GLSurfaceView.setEGLContextClientVersion(int)":"android.opengl.GLSurfaceView.setEGLContextClientVersion(int)\r\n","Notification style for media custom views that are decorated by the system":"系统修饰的媒体自定义视图的通知样式\r\n","android.media.MediaCas.Session.setPrivateData(byte[])":"android.media.MediaCas.Session.setPrivateData(字节[])\r\n","The distinguished name (normally includes CN, O, and OU names)":"专有名称（通常包括 CN、O 和 OU 名称）\r\n","android.media.MediaDrm.OnSessionLostStateListener.onSessionLostState(android.media.MediaDrm, byte[])":"android.media.MediaDrm.OnSessionLostStateListener.onSessionLostState(android.media.MediaDrm, byte[])\r\n","Returns the array of supported sample rate ranges.":"返回支持的采样率范围数组。\r\n","android.provider.ContactsContract.Contacts.CONTENT_STREQUENT_FILTER_URI":"android.provider.ContactsContract.Contacts.CONTENT_STREQUENT_FILTER_URI\r\n",": This process is running the\n            foreground UI; that is, it is the thing currently at the top of the screen\n            that the user is interacting with.":": 这个进程正在运行\r\n            前台用户界面；也就是说，它是当前在屏幕顶部的东西\r\n            用户正在与之交互。\r\n","The media height.":"媒体高度。\r\n","android.app.ActivityManager.RunningTaskInfo.thumbnail":"android.app.ActivityManager.RunningTaskInfo.thumbnail\r\n","#EFFECT_AUXILIARY":"#EFFECT_AUXILIARY\r\n","android.content.pm.PackageManager.OnChecksumsReadyListener":"android.content.pm.PackageManager.OnChecksumsReadyListener\r\n","Radio technology (network type) bitmask.":"无线电技术（网络类型）位掩码。\r\n","android.app.admin.DevicePolicyManager.OnClearApplicationUserDataListener.onApplicationUserDataCleared(java.lang.String, boolean)":"android.app.admin.DevicePolicyManager.OnClearApplicationUserDataListener.onApplicationUserDataCleared(java.lang.String, boolean)\r\n","PrintDocumentAdapter#onLayout(PrintAttributes, PrintAttributes,\n            CancellationSignal, LayoutResultCallback, Bundle)":"PrintDocumentAdapter#onLayout(PrintAttributes, PrintAttributes,\r\n            取消信号、LayoutResultCallback、捆绑包）\r\n","android.provider.Browser.SEARCHES_URI":"android.provider.Browser.SEARCHES_URI\r\n","The number of times a contact has been contacted.":"联系联系人的次数。\r\n","android.content.pm.PackageInstaller.SessionParams.setReferrerUri(android.net.Uri)":"android.content.pm.PackageInstaller.SessionParams.setReferrerUri(android.net.Uri)\r\n","list of codecs that the client wants to use a\n                               linear block without copying. Null entries are\n                               ignored.":"客户端想要使用的编解码器列表\r\n                               无需复制的线性块。空条目是\r\n                               忽略。\r\n"," used to receive updates on every field in the\n            ServiceState provider.":" 用于接收每个字段的更新\r\n            服务状态提供者。\r\n","android.provider.ContactsContract.DeletedContactsColumns.CONTACT_DELETED_TIMESTAMP":"android.provider.ContactsContract.DeletedContactsColumns.CONTACT_DELETED_TIMESTAMP\r\n","android.graphics.ColorSpace.Rgb.getOetf()":"android.graphics.ColorSpace.Rgb.getOetf()\r\n","whether user action should be required.":"是否需要用户操作。\r\n","android.os.VibrationAttributes.Builder.VibrationAttributes$Builder(android.os.VibrationAttributes)":"android.os.VibrationAttributes.Builder.VibrationAttributes$Builder(android.os.VibrationAttributes)\r\n","setClassName(context, cls.getName())":"setClassName（上下文，cls.getName（））\r\n","android.inputmethodservice.InputMethodService.InputMethodSessionImpl.displayCompletions(android.view.inputmethod.CompletionInfo[])":"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.displayCompletions(android.view.inputmethod.CompletionInfo[])\r\n","Returns the top edge of this view, in pixels, relative to the top edge of its parent.":"返回此视图的上边缘，以像素为单位，相对于其父视图的上边缘。\r\n","android.provider.ContactsContract.StatusColumns.STATUS_TIMESTAMP":"android.provider.ContactsContract.StatusColumns.STATUS_TIMESTAMP\r\n","REQUEST_TYPE_":"请求类型_\r\n","android.provider.Contacts.People.createPersonInMyContactsGroup(android.content.ContentResolver, android.content.ContentValues)":"android.provider.Contacts.People.createPersonInMyContactsGroup（android.content.ContentResolver，android.content.ContentValues）\r\n","android.hardware.Camera.CameraInfo.canDisableShutterSound":"android.hardware.Camera.CameraInfo.canDisableShutterSound\r\n","android.media.MediaParser.InputReader":"android.media.MediaParser.InputReader\r\n","android.provider.CalendarContract.ColorsColumns.COLOR_KEY":"android.provider.CalendarContract.ColorsColumns.COLOR_KEY\r\n","Deselects a route from the remote session.":"从远程会话中取消选择路由。\r\n","android.media.tv.TvInputService.Session.onUnblockContent(android.media.tv.TvContentRating)":"android.media.tv.TvInputService.Session.onUnblockContent(android.media.tv.TvContentRating)\r\n","commandGroup":"命令组\r\n","android.net.sip.SipProfile.Builder.SipProfile$Builder(java.lang.String)":"android.net.sip.SipProfile.Builder.SipProfile$Builder(java.lang.String)\r\n","A copy of the path":"路径副本\r\n","A convenience method to build status URI specific to a source package by appending\n            ":"通过附加来构建特定于源包的状态 URI 的便捷方法\r\n            \r\n","TP-Status: complete.":"TP-状态：完成。\r\n","android.media.MediaDrm.PlaybackComponent.setLogSessionId(android.media.metrics.LogSessionId)":"android.media.MediaDrm.PlaybackComponent.setLogSessionId(android.media.metrics.LogSessionId)\r\n"," when\n            there is an instantiation failure.":" 什么时候\r\n            存在实例化失败。\r\n","The time that the notification was created by the Calendar app,\n            in UTC.":"日历应用程序创建通知的时间，\r\n            在协调世界时。\r\n","The MIME type of a directory of recorded TV programs.":"录制的电视节目目录的 MIME 类型。\r\n","Syncs the RenderNode tree to the render thread and requests a frame to be drawn.":"将 RenderNode 树同步到渲染线程并请求绘制一帧。\r\n","android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_PERCEPTIBLE_PRE_26":"android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_PERCEPTIBLE_PRE_26\r\n","Interface definition for a callback to be invoked when the media playback position is\n            requested to be updated.":"媒体播放位置为回调的接口定义\r\n            要求更新。\r\n","GPS timestamp (UTC in seconds since January 1,\n                             1970).":"GPS 时间戳（自 1 月 1 日起以秒为单位的 UTC，\r\n                             1970）。\r\n","android.graphics.ImageDecoder.ImageInfo.getSize()":"android.graphics.ImageDecoder.ImageInfo.getSize()\r\n","Flag indicating that a document has settings that can be configured by user.":"指示文档具有可由用户配置的设置的标志。\r\n","android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC1":"android.provider.CalendarContract.CalendarSyncColumns.CAL_SYNC1\r\n","AppSearchSchema.Builder":"AppSearchSchema.Builder\r\n","android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format16bitARGB1555":"android.media.MediaCodecInfo.CodecCapabilities.COLOR_Format16bitARGB1555\r\n"," to indicate that data channel failed to find a\n             suitable network to connect to the server, and the carrier requires using cellular\n             data network to connect to the server.":" 表示数据通道找不到\r\n             合适的网络连接到服务器，并且运营商需要使用蜂窝\r\n             数据网络连接到服务器。\r\n","android.provider.Settings.Secure.SECURE_FRP_MODE":"android.provider.Settings.Secure.SECURE_FRP_MODE\r\n","#SHORTCUT_INVOCATION":"#SHORTCUT_INVOCATION\r\n","volumeMax":"音量最大\r\n","android.accessibilityservice.GestureDescription.StrokeDescription":"android.accessibilityservice.GestureDescription.StrokeDescription\r\n","a positive value for the current media playback position expressed\n                in ms, a negative value if the position is temporarily unknown.":"表示当前媒体播放位置的正值\r\n                以毫秒为单位，如果位置暂时未知，则为负值。\r\n","android.graphics.Typeface.Builder.Typeface$Builder(java.io.FileDescriptor)":"android.graphics.Typeface.Builder.Typeface$Builder(java.io.FileDescriptor)\r\n","Returns a bit mask of configuration changes that will impact this\n            theme (and thus require completely reloading it).":"返回将影响此配置更改的位掩码\r\n            主题（因此需要完全重新加载）。\r\n","android.provider.Contacts.Organizations.getDisplayLabel(android.content.Context, int, java.lang.CharSequence)":"android.provider.Contacts.Organizations.getDisplayLabel(android.content.Context, int, java.lang.CharSequence)\r\n","Unexpected error reported by the device OEM subsystem.":"设备 OEM 子系统报告的意外错误。\r\n","Thrown when the device requires DRM provisioning but the provisioning attempt has\n            failed due to the provisioning server denying the request.":"当设备需要 DRM 配置但配置尝试失败时抛出\r\n            由于供应服务器拒绝请求而失败。\r\n","android.content.pm.ActivityInfo#CONFIG_LAYOUT_DIRECTION\n            PackageManager.ActivityInfo.CONFIG_LAYOUT_DIRECTION":"android.content.pm.ActivityInfo#CONFIG_LAYOUT_DIRECTION\r\n            PackageManager.ActivityInfo.CONFIG_LAYOUT_DIRECTION\r\n"," representing the proportion between the start and end values.":" 表示开始值和结束值之间的比例。\r\n","android.media.midi.MidiManager.OnDeviceOpenedListener":"android.media.midi.MidiManager.OnDeviceOpenedListener\r\n","Contains description of a parameter.":"包含参数的描述。\r\n","true in case the stream is input, false otherwise.":"如果输入流，则为 true，否则为 false。\r\n","nullColumnHack":"nullColumnHack\r\n","android.provider.FontsContract.FontInfo.getUri()":"android.provider.FontsContract.FontInfo.getUri()\r\n","android.media.tv.TvInputService.RecordingSession.onResumeRecording(android.os.Bundle)":"android.media.tv.TvInputService.RecordingSession.onResumeRecording(android.os.Bundle)\r\n","android.app.assist.AssistStructure.ViewNode.getElevation()":"android.app.assist.AssistStructure.ViewNode.getElevation()\r\n","Additional result information or null.":"附加结果信息或空。\r\n","Callback for receiving events about media route discovery.":"用于接收有关媒体路由发现的事件的回调。\r\n","android.provider.ContactsContract.ProfileSyncState.set(android.content.ContentProviderClient, android.accounts.Account, byte[])":"android.provider.ContactsContract.ProfileSyncState.set(android.content.ContentProviderClient, android.accounts.Account, byte[])\r\n","Callback to process file operation requests issued on\n                       returned file descriptor.":"回调以处理发出的文件操作请求\r\n                       返回的文件描述符。\r\n","This exception is thrown by the resource APIs when a requested resource\n            can not be found.":"当请求资源时，资源 API 抛出此异常\r\n            无法找到。\r\n","The time of the seek point, in microseconds.":"搜索点的时间，以微秒为单位。\r\n"," instance that wraps the information being\n            conveyed, such as the information type and message.":" 包装信息的实例\r\n            传达，例如信息类型和消息。\r\n","CallLog.Calls#BLOCK_REASON":"通话记录.通话#BLOCK_REASON\r\n","android.net.sip.SipSession.State.PINGING":"android.net.sip.SipSession.State.PINGING\r\n","This value indicates that no tokens should be extracted from this property.":"此值表示不应从此属性中提取任何标记。\r\n","android.provider.CalendarContract.Instances.START_MINUTE":"android.provider.CalendarContract.Instances.START_MINUTE\r\n","android.app.VoiceInteractor.Prompt.VoiceInteractor$Prompt(java.lang.CharSequence[], java.lang.CharSequence)":"android.app.VoiceInteractor.Prompt.VoiceInteractor$Prompt(java.lang.CharSequence[], java.lang.CharSequence)\r\n","android.app.NotificationManager.Policy.priorityConversationSenders":"android.app.NotificationManager.Policy.priorityConversationSenders\r\n","a byte array of data whose format and meaning are\n            scheme-specific.":"数据的字节数组，其格式和含义是\r\n            计划特定的。\r\n","android.media.session.PlaybackState.Builder.PlaybackState$Builder()":"android.media.session.PlaybackState.Builder.PlaybackState$Builder()\r\n","android.provider.Settings.Secure.ALLOW_MOCK_LOCATION":"android.provider.Settings.Secure.ALLOW_MOCK_LOCATION\r\n","android.inputmethodservice.KeyboardView.OnKeyboardActionListener.swipeUp()":"android.inputmethodservice.KeyboardView.OnKeyboardActionListener.swipeUp()\r\n","CameraDevice#close":"相机设备#close\r\n","android.location.GnssAntennaInfo.Listener":"android.location.GnssAntennaInfo.Listener\r\n","android.print.PrintAttributes.MediaSize.getLabel(android.content.pm.PackageManager)":"android.print.PrintAttributes.MediaSize.getLabel(android.content.pm.PackageManager)\r\n","Bounds of the area.":"区域的边界。\r\n"," called with 0 subsamples.":" 用 0 个子样本调用。\r\n"," to indicate that a call was automatically rejected by\n            system because the system cannot support any more ringing calls.":" 表示呼叫被自动拒绝\r\n            系统，因为系统无法支持任何更多的振铃呼叫。\r\n","Title for a root, which will be shown to a user.":"根的标题，将显示给用户。\r\n","Class used to report status of dispatched gestures":"用于报告派遣手势状态的类\r\n","Number of bytes transmitted during the bucket's time interval.":"在桶的时间间隔内传输的字节数。\r\n","android.media.session.PlaybackState.CustomAction.getIcon()":"android.media.session.PlaybackState.CustomAction.getIcon()\r\n","android.provider.VoicemailContract.Status.NOTIFICATION_CHANNEL_STATE_NO_CONNECTION":"android.provider.VoicemailContract.Status.NOTIFICATION_CHANNEL_STATE_NO_CONNECTION\r\n","android.app.ApplicationErrorReport.BatteryInfo":"android.app.ApplicationErrorReport.BatteryInfo\r\n","the total size (in bytes) of the buffer where audio data is written\n              to during the recording. New audio data can be read from this buffer in smaller chunks\n              than this size. See ":"写入音频数据的缓冲区的总大小（以字节为单位）\r\n              在录制过程中。新的音频数据可以以更小的块从这个缓冲区中读取\r\n              比这个尺寸。看\r\n","A valid extension session":"有效的扩展会话\r\n","android.provider.Settings.Global.WAIT_FOR_DEBUGGER":"android.provider.Settings.Global.WAIT_FOR_DEBUGGER\r\n","Construct parameters for a new package install session.":"为新的包安装会话构造参数。\r\n","android.app.admin.FactoryResetProtectionPolicy":"android.app.admin.FactoryResetProtectionPolicy\r\n","android.provider.ContactsContract.Contacts.CONTENT_MULTI_VCARD_URI":"android.provider.ContactsContract.Contacts.CONTENT_MULTI_VCARD_URI\r\n"," instance to set the\n            initial values.":" 实例设置\r\n            初始值。\r\n"," calls\n            from the ":" 打电话\r\n            来自\r\n","android.media.MediaDrm.MediaDrmStateException.isTransient()":"android.media.MediaDrm.MediaDrmStateException.isTransient()\r\n","VoicemailContract#PARAM_KEY_SOURCE_PACKAGE":"语音邮件合同#PARAM_KEY_SOURCE_PACKAGE\r\n","android.database.DatabaseUtils.InsertHelper.bind(int, double)":"android.database.DatabaseUtils.InsertHelper.bind(int, double)\r\n","Called when the routing of an AudioTrack changes from either and\n            explicit or policy rerouting.":"当 AudioTrack 的路由从和\r\n            显式或策略重新路由。\r\n","connection hints sent from controller.":"从控制器发送的连接提示。\r\n","The column with latitude data for postal locations":"包含邮政位置纬度数据的列\r\n","Gets the notification.":"获取通知。\r\n","android.provider.ContactsContract.Directory.SHORTCUT_SUPPORT_DATA_ITEMS_ONLY":"android.provider.ContactsContract.Directory.SHORTCUT_SUPPORT_DATA_ITEMS_ONLY\r\n","Structure for common A/V sync params.":"通用 A/V 同步参数的结构。\r\n","an extra code, specific to the info type":"一个额外的代码，特定于信息类型\r\n","android.os.RemoteException.rethrowFromSystemServer()":"android.os.RemoteException.rethrowFromSystemServer()\r\n"," format with a bayer pattern\n            given by ":" 具有拜耳模式的格式\r\n            由\r\n","android.provider.DocumentsContract.Root.FLAG_LOCAL_ONLY":"android.provider.DocumentsContract.Root.FLAG_LOCAL_ONLY\r\n","android.app.ActivityManager.getAppTasks()":"android.app.ActivityManager.getAppTasks()\r\n","Informs the application that this recording session has been tuned to the given channel\n            and is ready to start recording.":"通知应用程序此录制会话已调谐到给定频道\r\n            并准备开始录制。\r\n","Returns the standby bucket of the app, if the event is of type\n            ":"返回应用程序的待机桶，如果事件是类型\r\n            \r\n","android.app.assist.AssistStructure.ViewNode.isAssistBlocked()":"android.app.assist.AssistStructure.ViewNode.isAssistBlocked()\r\n","android.media.session.MediaSession.Callback.onCustomAction(java.lang.String, android.os.Bundle)":"android.media.session.MediaSession.Callback.onCustomAction(java.lang.String, android.os.Bundle)\r\n","Callback method called upon communication audio device change.":"通信音频设备改变时调用的回调方法。\r\n","android.media.tv.TvInputService.Session.notifyTrackSelected(int, java.lang.String)":"android.media.tv.TvInputService.Session.notifyTrackSelected(int, java.lang.String)\r\n","android.media.VolumeShaper.Configuration.getTimes()":"android.media.VolumeShaper.Configuration.getTimes()\r\n","android.hardware.camera2.CameraOfflineSession.CameraOfflineSessionCallback.onSwitchFailed(android.hardware.camera2.CameraOfflineSession)":"android.hardware.camera2.CameraOfflineSession.CameraOfflineSessionCallback.onSwitchFailed(android.hardware.camera2.CameraOfflineSession)\r\n","Destination bitmap to which to render.":"要渲染到的目标位图。\r\n","android.provider.Contacts.PhotosColumns.PERSON_ID":"android.provider.Contacts.PhotosColumns.PERSON_ID\r\n","Builds ":"构建\r\n"," object is a utility class to facilitate adding animations to a\n            ":" object 是一个实用程序类，可以方便地向\r\n            \r\n","The OnControlStatusChangeListener interface defines a method called by the AudioEffect\n            when control of the effect engine is gained or lost by the application":"OnControlStatusChangeListener 接口定义了一个由 AudioEffect 调用的方法\r\n            当应用程序获得或失去对效果引擎的控制时\r\n","android.provider.FontsContract.FontInfo.getResultCode()":"android.provider.FontsContract.FontInfo.getResultCode()\r\n","android.media.session.MediaController.TransportControls.prepareFromSearch(java.lang.String, android.os.Bundle)":"android.media.session.MediaController.TransportControls.prepareFromSearch(java.lang.String, android.os.Bundle)\r\n","android.graphics.ColorSpace.Rgb":"android.graphics.ColorSpace.Rgb\r\n","Returns the domain of the HTML document represented by this view.":"返回此视图表示的 HTML 文档的域。\r\n","FragmentManager#executePendingTransactions()":"FragmentManager#executePendingTransactions()\r\n","the offline session that failed to switch to ready state":"未能切换到就绪状态的离线会话\r\n","Gets the current color effect setting. -or- Sets the current color effect setting.":"获取当前颜色效果设置。 - 或 - 设置当前颜色效果设置。\r\n","android.content.ContentProvider.delete(android.net.Uri, java.lang.String, java.lang.String[])":"android.content.ContentProvider.delete(android.net.Uri, java.lang.String, java.lang.String[])\r\n","android.app.Notification.WearableExtender.getBackground()":"android.app.Notification.WearableExtender.getBackground()\r\n","android.provider.ContactsContract.DataUsageFeedback.USAGE_TYPE_CALL":"android.provider.ContactsContract.DataUsageFeedback.USAGE_TYPE_CALL\r\n","the band level range in an array of short integers. The first element is the lower\n            limit of the range, the second element the upper limit.":"短整数数组中的波段级别范围。第一个元素是较低的\r\n            范围的极限，第二个元素的上限。\r\n","MediaBrowserService":"媒体浏览器服务\r\n","Gets diffusion level. -or- Sets the echo density in the late reverberation decay.":"获取扩散水平。 - 或 - 设置后期混响衰减中的回声密度。\r\n","android.app.VoiceInteractor.Request.cancel()":"android.app.VoiceInteractor.Request.cancel()\r\n","android.app.admin.DevicePolicyManager.OnClearApplicationUserDataListener":"android.app.admin.DevicePolicyManager.OnClearApplicationUserDataListener\r\n","The typical video resolution.":"典型的视频分辨率。\r\n","<b>video or audio decoder only</b>: codec supports tunneled playback.":"<b>仅视频或音频解码器</b>：编解码器支持隧道播放。\r\n","Direct-notification alarms: the requester must be running continuously from the\n            time the alarm is set to the time it is delivered, or delivery will fail.":"直接通知警报：请求者必须从\r\n            报警时间设置为送达时间，否则送达失败。\r\n","Retrieves the account ID associated with this ":"检索与此关联的帐户 ID\r\n","android.hardware.camera2.CameraExtensionSession.ExtensionCaptureCallback.onCaptureSequenceAborted(android.hardware.camera2.CameraExtensionSession, int)":"android.hardware.camera2.CameraExtensionSession.ExtensionCaptureCallback.onCaptureSequenceAborted(android.hardware.camera2.CameraExtensionSession, int)\r\n","android.opengl.GLU.gluUnProject(float, float, float, float[], int, float[], int, int[], int, float[], int)":"android.opengl.GLU.gluUnProject（浮动、浮动、浮动、浮动[]、整数、浮动[]、整数、整数[]、整数、浮动[]、整数）\r\n","Query whether a bitrate mode is supported.":"查询是否支持码率模式。\r\n"}