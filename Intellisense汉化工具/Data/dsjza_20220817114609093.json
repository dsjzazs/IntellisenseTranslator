{"android.app.Activity.addContentView(android.view.View, android.view.LayoutParams)":"android.app.activity.AddContentView（android.view.view，android.view.layoutparams））\r\n","Returns whether bubbles are enabled at the feature level for the current user.":"返回是否在当前用户的功能级别启用气泡。\r\n","#confirmCredentials":"#confirmcredentials\r\n","android.app.admin.DeviceAdminInfo.DeviceAdminInfo(android.content.Context, android.content.pm.ResolveInfo)":"android.app.admin.deviceadmininfo.deviceadmininfo（android.content.context，android.content.pm.resolveinfo）\r\n","The locale of the subtype.":"亚型的位置。\r\n","\n          The path part of a URI.\n        ":"\r\n          URI的路径部分。\r\n        \r\n","android.app.ActivityOptions.getLaunchBounds()":"android.app.activityOptions.getLaunchBounds（）\r\n","Must be required by a ":"必须由\r\n","Get the controller for fingerprint gestures.":"获取指纹手势的控制器。\r\n","android.app.admin.DevicePolicyManager.setPackagesSuspended(android.content.ComponentName, java.lang.String[], boolean)":"android.app.admin.devicepolicymanager.setpackagessuspended（android.content.componentname，java.lang.string []，boolean）\r\n","Perform calling of an activity's ":"执行活动的呼唤\r\n","android.app.Dialog.onSaveInstanceState()":"android.app.dialog.onsaveinstancestate（）\r\n","Report that an application has started executing a long-running operation on behalf of\n            another application when handling an IPC.":"报告说，申请已开始代表执行长期运行\r\n            处理IPC时的另一个应用程序。\r\n","android.app.Dialog.setTitle(java.lang.CharSequence)":"android.app.dialog.settitle（java.lang.charsequence）\r\n","Runs the specified action on the UI thread.":"在UI线程上运行指定的操作。\r\n","android.app.LocalActivityManager.dispatchPause(boolean)":"android.app.localactivitymanager.dispatchpause（boolean）\r\n","android.app.UiModeManager.disableCarMode(int)":"android.app.uimodemanager.disablecarmode（int）\r\n","android.app.admin.DevicePolicyManager.setPreferentialNetworkServiceEnabled(boolean)":"android.app.admin.devicepolicymanager.setPreferentialNetworkServiceEnabled（boolean）\r\n","android.app.admin.DevicePolicyManager.OPERATION_SAFETY_REASON_DRIVING_DISTRACTION":"android.app.admin.devicepolicymanager.operation_safety_reason_driving_distraction\r\n","android.app.DownloadManager.getRecommendedMaxBytesOverMobile(android.content.Context)":"android.app.downloadmanager.getRecommendedmaxbytesovermobile（android.content.context）\r\n","Selects the class loader which will be used by the platform to instantiate app components.":"选择平台将使用的类加载程序实例化应用程序组件。\r\n","android.view.LayoutInflater.Factory#onCreateView":"android.view.layoutinflater.factory＃oncreateview\r\n","Called when the instrumentation is starting, before any application code\n            has been loaded.":"在仪器启动时，请在任何应用程序代码之前调用\r\n            已加载。\r\n","#startForeground(int, Notification)":"#startforeground（int，通知）\r\n","#startManagingCursor":"#StartManagingCursor\r\n","A layout to be used as the content View for the dialog.":"用于对话框的内容视图的布局。\r\n"," C function\n        which returns a JNI Local Reference (":" C功能\r\n        返回JNI本地参考（\r\n","android.app.WallpaperInfo.getSettingsSliceUri()":"android.app.wallpaperinfo.getSettingssliceuri（）\r\n","Return information about who launched this activity.":"返回有关谁启动此活动的信息。\r\n","android.app.Dialog.dispatchTouchEvent(android.view.MotionEvent)":"android.app.dialog.dispatchTouchEvent（android.view.motionevent）\r\n","Return the approximate per-application memory class of the current\n            device when an application is running with a large heap.":"返回当前的近似每个应用记忆类\r\n            当应用程序运行大量堆时，设备。\r\n","Returns the magnification controller, which may be used to query and\n            modify the state of display magnification.":"返回放大器控制器，可用于查询和\r\n            修改显示器的状态。\r\n","android.app.SearchableInfo.shouldRewriteQueryFromText()":"android.app.searchableInfo.shouldrewritequeryFromText（）\r\n","android.appwidget.AppWidgetManager.getInstalledProvidersForProfile(android.os.UserHandle)":"android.appwidget.appwidgetManager.getInstalledProvidersFrofile（android.os.userhandle）\r\n","Activity#getLastNonConfigurationInstance()\n            Activity.getLastNonConfigurationInstance()":"活动＃getlastnonConfigurationInstance（）\r\n            Activity.getLastnonConfigurationInstance（）\r\n","android.app.admin.DeviceAdminReceiver.ACTION_NETWORK_LOGS_AVAILABLE":"android.app.admin.deviceadminreceiver.action_network_logs_available\r\n","android.bluetooth.BluetoothAdapter.getState()":"android.bluetooth.bluetoothadapter.getstate（）\r\n","Query network usage statistics summaries.":"查询网络使用统计摘要。\r\n","android.bluetooth.BluetoothAdapter.ACTION_SCAN_MODE_CHANGED":"android.bluetooth.bluetoothadapter.action_scan_mode_changed\r\n","\n        property contains an advisory value of the number of\n        JNI Weak Global References which Java.Interop has created.\n        These counts are incremented whenever a JNI reference is created,\n        e.g. from ":"\r\n        属性包含一个数量的咨询价值\r\n        JNI弱的java.Interop创建的全局参考。\r\n        每当创建JNI参考时，这些计数就会增加\r\n        例如从\r\n","android.app.ActivityOptions.toBundle()":"android.app.activityOptions.tobundle（）\r\n","Open a downloaded file for reading.":"打开下载的文件供阅读。\r\n","Horizontal offset of the shadow.":"阴影的水平偏移。\r\n","Flag indicating whether the application requests the VM to operate in\n         the safe mode.":"指示该应用程序是否请求VM运行的标志\r\n         安全模式。\r\n","Declare that this application requires an account of a certain\n             type.":"声明此申请需要一个帐户\r\n             类型。\r\n","android.app.Notification.CATEGORY_PROGRESS":"android.app.notification.category_progress\r\n","Report the key associated with the current entity in the restore stream":"报告与还原流中当前实体关联的密钥\r\n","android.accessibilityservice.AccessibilityServiceInfo.getCanRetrieveWindowContent()":"Android.AccessibilityService.Accessibilityserviceinfo.getCanreveRieveWindowContent（）\r\n","A preview of what the AppWidget will look like after it's configured.":"AppWidget配置后的AppWidget的预览。\r\n","The app was used recently and/or likely to be used in the next few hours.":"该应用程序最近被使用和/或可能在接下来的几个小时内使用。\r\n","android.bluetooth.BluetoothDevice.connectGatt(android.content.Context, boolean, android.bluetooth.BluetoothGattCallback)":"android.bluetooth.bluetoothdevice.connectgatt（android.content.context，boolean，android.bluetooth.bluetooth.bluetoothgattcallback）\r\n","Formerly, a view showing the ":"以前，显示了\r\n"," object to use instead of the platform template.":" 对象使用而不是平台模板。\r\n","android.app.AlertDialog.setIcon(int)":"Android.App.Alertdialog.Seticon（INT）\r\n","Starts an app widget provider configure activity for result on behalf of the caller.":"启动一个应用程序小部件提供商配置活动，以代表呼叫者进行结果。\r\n","android.accounts.AbstractAccountAuthenticator.startAddAccountSession(android.accounts.AccountAuthenticatorResponse, java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle)":"android.accounts.abstractaccountauthenticator.startaddaccountsession（android.accounts.accountauthenticatorestorsponse，java.lang.string，java.lang.lang.string，java.lang.lang.lang.string []，android.os.bundle）\r\n","android.app.Instrumentation.callActivityOnSaveInstanceState(android.app.Activity, android.os.Bundle, android.os.PersistableBundle)":"android.app.instrumentation.callactivityonsaveinstancestate（android.app.Activity，android.os.bundle，android.os.os.persistablebundle）\r\n","GenericDocument[]":"genericdocument []\r\n","note that this may be null":"请注意，这可能是无效的\r\n","Change the current system wallpaper to the bitmap in the given resource.":"将当前的系统壁纸更改为给定资源中的位图。\r\n","Honeycomb holographic theme (light version).":"蜂窝全息主题（轻版本）。\r\n","android.app.admin.DevicePolicyManager.grantKeyPairToWifiAuth(java.lang.String)":"android.app.admin.devicepolicymanager.grantkeypairtowifiauth（java.lang.string）\r\n"," is enabled, this\n            function requests that touch interactions starting in the specified region of the screen\n            bypass the touch explorer and go straight to the view hierarchy.":" 已启用，这个\r\n            功能请求从屏幕的指定区域开始触摸交互的功能请求\r\n            绕过触摸探险家，直接转到视图层次结构。\r\n"," was not\n            called.":" 不是\r\n            叫。\r\n","Called by a device owner or a profile owner of an organization-owned managed profile to\n            control whether the user can change networks configured by the admin.":"由设备所有者或组织拥有的托管资料的个人资料所有者拨打\r\n            控制用户是否可以更改管理员配置的网络。\r\n","android.app.admin.DeviceAdminReceiver.ACTION_PASSWORD_SUCCEEDED":"android.app.admin.deviceadminreceiver.action_password_succeeded\r\n","Container of data passed to the ":"数据容器传递给\r\n","android.app.Fragment.equals(java.lang.Object)":"Android.App.Fragment.Equals（Java.lang.Object）\r\n","Returns whether notifications posted to this channel always vibrate.":"返回通知是否始终振动。\r\n","/manifest/application/service":"/清单/应用程序/服务\r\n","android.util.DisplayMetrics#densityDpi":"android.util.displaymetrics＃densedpi\r\n","For example, ATD. ":"例如，ATD。\r\n","There is no reason the job is stopped.":"没有理由停止工作。\r\n","android.accounts.AbstractAccountAuthenticator.finishSession(android.accounts.AccountAuthenticatorResponse, java.lang.String, android.os.Bundle)":"android.accounts.abstractaccontauthenticator.finishsession（android.accounts.accountauthenticatorestorsonsess，java.lang.string，android.os.bundle）\r\n","Returns a Bundle that contains whatever is required to clone the account on a different\n            user.":"返回一个包含在不同的帐户克隆帐户所需的内容的捆绑包\r\n            用户。\r\n","android.app.Instrumentation.sendPointerSync(android.view.MotionEvent)":"android.app.Instrumentation.sendPointersync（android.view.motionevent）\r\n","android.app.SearchableInfo.autoUrlDetect()":"android.app.searchableInfo.autourldetect（）\r\n","android.app.ProgressDialog.incrementProgressBy(int)":"android.app.progressdialog.incrementprogressby（int）\r\n","android.appwidget.AppWidgetManager":"android.appwidget.AppwidgetManager\r\n","android.app.DirectAction.getId()":"android.app.directaction.getID（）\r\n","Contains the package name of the app that stored the ":"包含存储的应用程序的包名称\r\n","This is called when the user is requesting an assist, to provide references\n            to content related to the current activity.":"当用户请求辅助时，这就是称为参考\r\n            与当前活动有关的内容。\r\n","NotificationChannel":"NotificationChannel\r\n","android.app.SearchManager.INTENT_GLOBAL_SEARCH_ACTIVITY_CHANGED":"android.app.searchmanager.intent_global_search_activity_changed\r\n","android.app.Fragment.onStart()":"android.app.fragment.onstart（）\r\n","LayoutParams#FLAG_SHOW_WHEN_LOCKED":"layoutparams＃flag_show_when_locked\r\n","\n          Whether or not the activity can be killed and successfully restarted\n          without having saved its state.\n        ":"\r\n          该活动是否可以杀死并成功重新开始\r\n          没有保存其状态。\r\n        \r\n","\n              Dispose of the current instance. ":"\r\n              处理当前实例。\r\n","android.app.job.JobServiceEngine":"android.app.job.JobserviceEngine\r\n","android.app.ActivityOptions.setLockTaskEnabled(boolean)":"android.app.activityOptions.setlocktaskEnabled（boolean）\r\n","Called to process generic motion events.":"打电话处理通用运动事件。\r\n","A unique name for the given item.":"给定项目的唯一名称。\r\n","android.app.WallpaperColors.fromDrawable(android.graphics.drawable.Drawable)":"android.app.wallpapercolors.fromdrabable（android.graphics.drawable.drawable）\r\n","android.app.Activity.finish()":"android.app.activity.finish（）\r\n","android.bluetooth.BluetoothGattCharacteristic.PROPERTY_EXTENDED_PROPS":"android.bluetooth.bluetoothgattcharacteristic.property_extended_props\r\n","android.bluetooth.BluetoothDevice.EXTRA_RSSI":"android.bluetooth.bluetoothdevice.extra_rssi\r\n","Action to open the quick settings.":"操作以打开快速设置。\r\n","android.Manifest.permission#SCHEDULE_EXACT_ALARM":"android.manifest.permission＃scheduy_exact_alarm\r\n","android.app.backup.BackupDataInputStream.getKey()":"android.app.backup.backupdatainputstream.getKey（）\r\n","Returns the database in which the document that was used resides.":"返回所使用文档所居住的数据库。\r\n","\n      JNI Reference-related functionality.\n    ":"\r\n      JNI参考相关功能。\r\n    \r\n","Return the identifier this fragment is known by.":"返回标识符，该片段已知。\r\n","Return the application that owns this activity.":"返回拥有此活动的应用程序。\r\n","F:Android.Resource+Style.ThemeDeviceDefault":"F：android.resource+样式。\r\n","android.app.admin.DeviceAdminReceiver.ACTION_PROFILE_PROVISIONING_COMPLETE":"android.app.admin.deviceadminreceiver.action_profile_provisioning_complete\r\n","android.accounts.AccountManager.hasFeatures(android.accounts.Account, java.lang.String[], android.accounts.AccountManagerCallback, android.os.Handler)":"android.accounts.accountmanager.hasfeatures（android.accounts.accounts.account，java.lang.string []，android.accounts.accountmanagercallback，android.os.os.handler）\r\n","An intent extra that contains multiple appWidgetIds.":"一个包含多个AppWidgetID的意图。\r\n","android.app.FragmentManager.executePendingTransactions()":"android.app.fragmentManager.executependingTransactions（）\r\n","\n          The value of the meta-data.\n        ":"\r\n          元数据的值。\r\n        \r\n","android.app.WallpaperManager.ACTION_CROP_AND_SET_WALLPAPER":"android.app.wallpapermanager.action_crop_and_set_wallpaper\r\n","Return true if LE Extended Advertising feature is supported.":"如果支持扩展广告功能，则返回true。\r\n","android.app.ApplicationExitInfo.getDescription()":"android.app.applicationexitinfo.getDescription（）\r\n","Callback for determining whether an event is accepted or\n it is filtered out.":"确定是否接受事件的回调或\r\n 它被过滤了。\r\n","The order for the Preference (lower values are to be ordered first).":"偏好的顺序（要首先订购较低的值）。\r\n","Determine whether or not screen capture has been disabled by the calling\n            admin, if specified, or all admins.":"确定是否通过调用屏幕截图已禁用屏幕截图\r\n            管理员，如果指定或所有管理员。\r\n"," value type that contains information about an account authenticator.":" 价值类型包含有关帐户身份验证者的信息。\r\n","android.app.admin.DevicePolicyManager.MIME_TYPE_PROVISIONING_NFC":"android.app.admin.devicepolicymanager.mime_type_provisioning_nfc\r\n","android.app.FragmentHostCallback.onShouldSaveFragmentState(android.app.Fragment)":"Android.App.FragmentHostCallback.onshouldsaveFragmentState（Android.App.Fragment）\r\n"," when some possibly transient error occurred but we can't\n            resume the download.":" 当某些可能发生瞬态错误时，我们不能\r\n            恢复下载。\r\n","android.app.Instrumentation.REPORT_KEY_STREAMRESULT":"android.app.instrumentation.report_key_streamresult\r\n","\n              Start measuring time. If ":"\r\n              开始测量时间。如果\r\n","android.app.Activity.setFeatureDrawableUri(int, android.net.Uri)":"android.app.activity.setFeaturedRawableuri（int，android.net.uri）\r\n","android.annotation.SuppressLint.value()":"android.annotation.suppresslint.value（）\r\n","android.app.WallpaperManager.setDisplayPadding(android.graphics.Rect)":"android.app.wallpapermanager.setdisplaypadding（android.graphics.Rect）\r\n","android.app.SearchManager.SUGGEST_COLUMN_RATING_SCORE":"android.app.searchmanager.suggest_column_rating_score\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_PHASE2_AUTH":"android.app.admin.devicepolicymanager.extra_provisioning_wifi_phase2_auth\r\n","NotificationManager#createNotificationChannelGroup(NotificationChannelGroup)":"NotificationManager＃createNotificationChannelGroup（NotificationChannelGroup）\r\n","The kernel user identifier of the process, most of the time the system uses this\n            to do access control checks.":"该过程的内核用户标识符，大多数时候系统使用此\r\n            进行访问控制检查。\r\n","android.app.backup.BackupAgent.onCreate()":"android.app.backup.backupent.oncreate（）\r\n","android.R.styleable#Searchable_includeInGlobalSearch":"Android.r.Stylable＃searchable_includeinglobalsearch\r\n","Allows applications to access information about networks \n":"允许应用程序访问有关网络的信息\r\n\r\n","Hearing Aid Device":"助听器设备\r\n","The duration (in milliseconds) of a medium-length animation.":"中型动画的持续时间（以毫秒为单位）。\r\n","android.app.Fragment.onRequestPermissionsResult(int, java.lang.String[], int[])":"android.app.fragment.onrequestpermissionsresult（int，java.lang.string []，int []）\r\n","Called after the user has failed at entering their device or profile challenge password,\n            as a result of receiving ":"用户未能输入其设备或配置文件挑战密码后打电话，\r\n            由于接受\r\n","Set this notification to be part of a group of notifications sharing the same key.":"将此通知设置为共享相同密钥的一组通知的一部分。\r\n","Set a hint for whether this fragment's menu should be visible.":"为是否应该可见此片段的菜单设置提示。\r\n","android.bluetooth.BluetoothGattCharacteristic.PERMISSION_READ_ENCRYPTED_MITM":"android.bluetooth.bluetoothgattcharacteristic.permission_read_encrypted_mitm\r\n","android.app.RemoteInput.isDataOnly()":"android.app.remoteinput.isdataonly（）\r\n"," object, which is used to\n set up playing constraints.":" 对象，曾经用来\r\n 设置播放约束。\r\n","Default theme with an Action Bar.":"带有动作栏的默认主题。\r\n","When the animation reaches the end and ":"当动画到达末端时\r\n"," to manage the backup of a set of\n            files.":" 管理一组\r\n            文件。\r\n","Constructs a BackupManager object through which the application can\n            communicate with the Android backup system.":"构造应用程序可以通过的备份对象\r\n            与Android备份系统进行通信。\r\n","android.appwidget.AppWidgetHostView.prepareView(android.view.View)":"android.appwidget.appwidgethostview.prepareview（android.view.view）\r\n","android.app.WallpaperColors.HINT_SUPPORTS_DARK_TEXT":"android.app.wallpapercolors.hint_supports_dark_text\r\n","android.app.AppOpsManager.permissionToOp(java.lang.String)":"android.app.appopsmanager.permissiontoop（java.lang.string）\r\n","android.app.NotificationManager.addAutomaticZenRule(android.app.AutomaticZenRule)":"android.app.notificationmanager.addautomaticzenrule（android.app.automaticzenrule）\r\n","Called by a profile owner or device owner to grant permission to a package to manage\n            application restrictions for the calling user via ":"由配置文件所有者或设备所有者拨打授予包裹的权限以管理\r\n            通过\r\n","android.app.Instrumentation.callActivityOnSaveInstanceState(android.app.Activity, android.os.Bundle)":"android.app.instrumentation.callactivityonsaveinstancestate（android.app.Activity，android.os.bundle）\r\n","android.app.admin.DevicePolicyManager.isAdminActive(android.content.ComponentName)":"android.app.admin.devicepolicymanager.isadminactive（android.content.componentname）\r\n"," with no action bar and no status bar.":" 没有动作栏，没有状态栏。\r\n","android.app.slice.Slice":"android.app.slice.slice\r\n","#ENCRYPTION_STATUS_ACTIVE_PER_USER":"#encryption_status_active_per_user\r\n","android.R.attr#persistableMode":"android.r.attr＃PersistableMode\r\n","Set to the interval between occurrences of this job.":"设置为该作业的发生之间的间隔。\r\n","DeviceAdminInfo":"Deviceadmininfo\r\n","android.app.Fragment.isHidden()":"android.app.fragment.ishidden（）\r\n","android.app.NotificationManager.notifyAsPackage(java.lang.String, java.lang.String, int, android.app.Notification)":"android.app.notificationmanager.notifyaspackage（java.lang.string，java.lang.string，int，android.app.notification）\r\n","android.app.job.JobInfo.isRequireStorageNotLow()":"android.app.job.jobinfo.isrequirestoragenotlow（）\r\n","\n            A convenience wrapper around ":"\r\n            便利包装纸\r\n","android.app.slice.SliceItem.getFormat()":"android.app.slice.sliceitem.getFormat（）\r\n","Returns whether the activity associated with this AssistStructure was the home activity\n            (Launcher) at the time the assist data was acquired.":"返回与此协助结构相关的活动是否为家庭活动\r\n            （发射器）在获取辅助数据时。\r\n","if the authenticator returned an error response that indicates\n that it encountered an IOException while communicating with the authentication server\n":"如果身份验证者返回了指示的错误响应\r\n 它在与身份验证服务器进行通信时遇到了IOException\r\n\r\n","Context#startActivity":"上下文＃开始行为\r\n","#priority":"＃优先\r\n","Sets the device owner information to be shown on the lock screen.":"设置要在锁定屏幕上显示的设备所有者信息。\r\n","android.app.appsearch.GenericDocument.getPropertyStringArray(java.lang.String)":"android.app.appsearch.genericdocument.getPropertystringarray（java.lang.string）\r\n","android.app.admin.SecurityLog.TAG_CAMERA_POLICY_SET":"android.app.admin.securitylog.tag_camera_policy_set\r\n","android.app.Activity.getIntent()":"android.app.activity.getIntent（）\r\n","Unregisters callbacks on data usage.":"在数据使用情况下进行注册回调。\r\n","android.app.LocalActivityManager.destroyActivity(java.lang.String, boolean)":"android.app.localactivitymanager.destroyactivity（java.lang.string，boolean）\r\n","android.app.Fragment.isInLayout()":"android.app.fragment.isinlayout（）\r\n","android.app.ActionBar.setHideOnContentScrollEnabled(boolean)":"Android.App.ActionBar.SethideonContentsCrollenabled（布尔值）\r\n","Allows an application to add voicemails into the system.":"允许应用程序将语音邮件添加到系统中。\r\n","android.app.LocalActivityManager.dispatchResume()":"android.app.localactivitymanager.dispatchresume（）\r\n","Specify whether a component is allowed to have multiple instances\n         of itself running in different processes.":"指定是否允许组件具有多个实例\r\n         自身在不同的过程中运行。\r\n","Whether the text is allowed to be wider than the view (and\n             therefore can be scrolled horizontally).":"是否允许文本比视图宽（和\r\n             因此可以水平滚动）。\r\n","Permits an application to erase its own data from disk.":"允许应用程序从磁盘上删除自己的数据。\r\n","when the download is waiting to start.":"下载等待开始时。\r\n","android.animation.ValueAnimator.getStartDelay()":"android.animation.valueAnimator.getStartDelay（）\r\n","Submit a new ":"提交新\r\n","android.app.job.JobWorkItem.getEstimatedNetworkUploadBytes()":"android.app.job.jobworkitem.getEstimatednetworkuploadbytes（）\r\n","Returns the number of alive documents in the current session.":"返回当前会话中活着文档的数量。\r\n","android.app.ProgressDialog.ProgressDialog(android.content.Context)":"android.app.progressdialog.progressdialog（android.content.context）\r\n","android.app.appsearch.GenericDocument.getProperty(java.lang.String)":"android.app.app.appsearch.genericdocument.getProperty（java.lang.string）\r\n","android.app.SearchManager.onDismiss(android.content.DialogInterface)":"android.app.searchmanager.ondismiss（android.content.dialogInterface）\r\n","Maximum numerical value that will be shown in a status bar\n         notification icon or in the notification itself.":"将在状态栏中显示的最大数值\r\n         通知图标或通知本身。\r\n","Get the activity's list view widget.":"获取活动的列表视图小部件。\r\n","android.app.admin.SecurityLog.TAG_SYNC_RECV_FILE":"android.app.admin.securitylog.tag_sync_recv_file\r\n","android.app.Instrumentation.getProcessName()":"android.app.instrumentation.getProcessName（）\r\n","Min notification importance: only shows in the shade, below the fold.":"最小通知重要性：仅在阴影中显示，折叠以下。\r\n",",\n             set when a pointer is hovering over the view.":"，，，，\r\n             当指针悬停在视图上时设置。\r\n","android.app.ProgressDialog.setMax(int)":"android.app.progressdialog.setmax（int）\r\n","BluetoothDevice#TRANSPORT_LE":"BluetoothDevice＃Transport_le\r\n","android.app.AutomaticZenRule.getOwner()":"android.app.automaticzenrule.getowner（）\r\n","android.app.people.PeopleManager":"Android.App.People.PeopleManager\r\n","This flag requests that accessibility shortcut warning dialog has spoken feedback when\n            dialog is shown.":"此标志要求访问性快捷方式警告对话框在\r\n            对话框显示。\r\n","Callback that allows an accessibility service to observe the key events\n            before they are passed to the rest of the system.":"允许可访问性服务观察关键事件的回调\r\n            在传递到系统的其余部分之前。\r\n","Test whether an existing ":"测试是否存在\r\n","Called when the instrumented application is stopping, after all of the\n            normal application cleanup has occurred.":"仪器应用程序停止时调用\r\n            正常的申请清理已经发生。\r\n","android.app.appsearch.AppSearchResult.RESULT_UNKNOWN_ERROR":"android.app.appsearch.appsearchresult.result_unknown_error\r\n","android.accounts.AccountManager.get(android.content.Context)":"android.accounts.accountmanager.get（android.content.context）\r\n","NullPointerException":"空指针异常\r\n","Constructs and returns a PropertyValuesHolder with a given property name and\n            set of float values.":"构建并返回具有给定属性名称的财产价值持有人\r\n            一组浮点值。\r\n","Schema type to be used in ":"用于使用的模式类型\r\n","android.app.ActivityManager.moveTaskToFront(int, int)":"android.app.activityManager.movetasktofront（int，int）\r\n","Enable the keyguard during LockTask mode.":"在LockTask模式下启用KeyGuard。\r\n","android.bluetooth.BluetoothDevice.getBondState()":"android.bluetooth.bluetoothdevice.getBondstate（）\r\n","android.app.AlertDialog.AlertDialog(android.content.Context)":"android.app.alertdialog.alertdialog（android.content.context）\r\n","#getHistoricalProcessExitReasons":"#GethistoricalProcessExitreactor\r\n","android.app.usage.ConfigurationStats.getLastTimeStamp()":"android.app.usage.configurationstats.getlasttimestamp（）\r\n","The color for the week numbers.":"一周数的颜色。\r\n","Set the activity content from a layout resource.":"从布局资源设置活动内容。\r\n","Called by a profile or device owner to set a user restriction specified by the key.":"由配置文件或设备所有者调用以设置密钥指定的用户限制。\r\n","android.app.AlarmManager.setAlarmClock(android.app.AlarmClockInfo, android.app.PendingIntent)":"android.app.alarmmanager.setalarmclock（android.app.alarmclockinfo，android.app.pendingIntent）\r\n","Reference to a the wallpaper's thumbnail bitmap.":"引用墙纸的缩略图位图。\r\n","android.app.Fragment.startPostponedEnterTransition()":"Android.App.Fragment.StartPostPoStponEdenterTransition（）\r\n","Associates the given animator with the provided drawable state specs so that it will be run\n            when the View's drawable state matches the specs.":"将给定的动画师与提供的可绘制状态规格相关联，以便运行它\r\n            当视图的绘制状态与规格匹配时。\r\n","#KEYGUARD_DISABLE_UNREDACTED_NOTIFICATIONS":"#keyguard_disable_unredacted_notifications\r\n"," parameter. If\n               message is not specified, the Xamarin.Android runtime will use the default message, ":" 范围。如果\r\n               消息未指定，xamarin.android运行时将使用默认消息，\r\n","android.app.ExpandableListActivity.setListAdapter(android.widget.ExpandableListAdapter)":"android.app.expandableStactivity.SetListAdapter（android.widget.expandableListAdapter）\r\n","Get the primary colors of a wallpaper.":"获取墙纸的原色。\r\n"," privilege), to revoke an application's\n            grant to a KeyChain key pair.":" 特权），撤销应用程序的\r\n            授予钥匙扣密钥对。\r\n","Group of permissions that are related to system clock.":"与系统时钟相关的一组权限。\r\n","Allows applications to connect to paired bluetooth devices \n":"允许应用程序连接到配对的蓝牙设备\r\n\r\n","Activity action: Starts the provisioning flow which sets up a managed profile.":"活动动作：开始设置托管配置文件的配置流。\r\n",": one of the application's\n content providers is being used by another process.":"：该应用程序之一\r\n 另一个过程正在使用内容提供商。\r\n","#describeContents()":"#DescribeContents（）\r\n","This class provides a simple callback mechanism to listeners that is synchronized with all\n            other animators in the system.":"该课程为听众提供了一个简单的回调机制，该机制与所有人同步\r\n            系统中的其他动画师。\r\n","Generate a new thumbnail for this activity.":"为此活动生成新的缩略图。\r\n","android.app.admin.SecurityLog.TAG_KEY_INTEGRITY_VIOLATION":"android.app.admin.securitylog.tag_key_integrity_violation\r\n","on error, for example Bluetooth not available, or\n                     insufficient permissions\n":"错误，例如蓝牙不可用，或\r\n                     权限不足\r\n\r\n","android.accessibilityservice.AccessibilityService.GESTURE_SWIPE_RIGHT":"Android.AccessibilityService.Accessibilityservice.gesture_swipe_right\r\n"," provides.":" 提供。\r\n"," with a 0 containerViewId.":" 使用0 containerviewID。\r\n","Message associated with the noteOp.":"与NoteOp关联的消息。\r\n","Called to process key events.":"打电话处理关键事件。\r\n","android.app.slice.Slice.getHints()":"android.app.slice.slice.gethints（）\r\n","android.app.ApplicationErrorReport.TYPE_CRASH":"Android.App.ApplicationErroreport.type_crash\r\n","android.app.SearchManager.SUGGEST_COLUMN_PURCHASE_PRICE":"android.app.searchmanager.suggest_column_purchase_price\r\n","android.app.admin.DevicePolicyManager.DELEGATION_PACKAGE_ACCESS":"android.app.admin.devicepolicymanager.delegation_package_access\r\n",", but only returns events for the calling package.":"，但仅返回通话软件包的事件。\r\n","android.app.backup.BackupAgent.onBackup(android.os.ParcelFileDescriptor, android.app.backup.BackupDataOutput, android.os.ParcelFileDescriptor)":"android.app.backup.backup.onbackup（android.os.parcelfiledScriptor，android.app.backup.backup.backup.backup.updataoutput，android.os.os.parcelfiledescriptor）\r\n","Set this if the view will serve as a scrolling container, meaing\n             that it can be resized to shrink its overall window so that there\n             will be space for an input method.":"如果视图用作滚动容器，则设置此此设置\r\n             可以调整大小以缩小其整体窗口，以便在那里\r\n             将是输入方法的空间。\r\n","Returns the current ActionBar subtitle in standard mode.":"在标准模式下返回当前的动作栏字幕。\r\n","android.app.AppOpsManager.startOpNoThrow(java.lang.String, int, java.lang.String, java.lang.String, java.lang.String)":"android.app.appopsmanager.startopnothrow（java.lang.string，int，java.lang.string，java.lang.string，java.lang.string）\r\n","Defines the length of the fading edges.":"定义褪色边缘的长度。\r\n","This class gives information about, and interacts\n            with, activities, services, and the containing\n            process.":"该课程提供有关和互动的信息\r\n            与活动，服务和包含\r\n            过程。\r\n","\n            wrapped as a ":"\r\n            包裹为一个\r\n",", this searchable activity will be invoked for all\n             queries in a particular session.":"，将为所有人调用此可搜索活动\r\n             在特定会话中查询。\r\n","An optional argument to supply a maximum width for this view.":"可选的论点，可为此视图提供最大宽度。\r\n","Notification category: incoming direct message (SMS, instant message, etc.":"通知类别：传入直接消息（SMS，即时消息等。\r\n","Dump of various info impacting battery use.":"各种信息影响电池使用的转储。\r\n","A smaller, sleeker list item height.":"较小，更时尚的列表项目高度。\r\n","Delegation for installing existing packages.":"用于安装现有软件包的委托。\r\n","The drawable to be drawn above the text.":"可以在文本上方绘制的绘制。\r\n","android.app.admin.DeviceAdminReceiver.ACTION_PASSWORD_CHANGED":"android.app.admin.deviceadminreceiver.action_password_changed\r\n","Whether this service can retrieve the current window's content.":"此服务是否可以检索当前窗口的内容。\r\n","#PASSWORD_QUALITY_ALPHABETIC":"#password_quality_alphabetic\r\n","A request to report usage of a document.":"报告文件使用情况的请求。\r\n","s.\n        ":"s。\r\n        \r\n","android.app.ApplicationErrorReport.time":"Android.App.ApplicationErrreReport.Time\r\n"," to which\n            the presentation is attached have changed.":" 到底\r\n            演示文稿已更改。\r\n","android.app.appsearch.AppSearchResult.newSuccessfulResult(java.lang.Object)":"android.app.appsearch.appsearchresult.newsuccessfulresult（java.lang.object）\r\n","SliceSpec":"slicespec\r\n","Represents a document unit.":"代表文件单元。\r\n","android.app.ActionBar.getThemedContext()":"android.app.actionbar.getThemedContext（）\r\n","Higher notification importance: shows everywhere, makes noise and peeks.":"更高的通知重要性：到处显示，发出噪音和窥视。\r\n","android.animation.PropertyValuesHolder.ofMultiInt(java.lang.String, int[][])":"android.animation.propertyvaluesholder.ofmultiint（java.lang.string，int [] [] []）\r\n","#getPackageUid":"#getPackageUID\r\n","Application process died because of a native code crash.":"申请过程由于本地代码崩溃而死。\r\n","android.app.SearchManager.EXTRA_NEW_SEARCH":"android.app.searchmanager.extra_new_search\r\n","android.app.admin.DevicePolicyManager.setNearbyNotificationStreamingPolicy(int)":"android.app.admin.devicepolicymanager.setNearbyNotificationStreamingPolicy（INT）\r\n","AccessibilityServiceInfo":"AccessibilityServiceInfo\r\n"," key: this is a bitmap to be shown in ":"键：这是一个要显示的位图\r\n"," this fragment is currently associated with.":" 此片段目前与之相关。\r\n","android.app.NotificationManager.getAutomaticZenRules()":"android.app.notificationmanager.getautomaticzenrules（）\r\n","android.app.RemoteInput.getEditChoicesBeforeSending()":"android.app.remoteinput.geteditchoicesbeforesgending（）\r\n","android.app.appsearch.SearchResults":"android.app.appsearch.searchresults\r\n","Makes the TextView be at most this many lines tall.":"使文本视图最多高这么多线。\r\n","android.app.Notification.EXTRA_TEXT_LINES":"android.app.notification.extra_text_lines\r\n","Moves all Fragments managed by the controller's FragmentManager\n            into the resume state.":"移动由控制器的FragmentManager管理的所有片段\r\n            进入简历状态。\r\n","android.app.admin.DevicePolicyManager.setPermissionGrantState(android.content.ComponentName, java.lang.String, java.lang.String, int)":"android.app.admin.devicepolicymanager.setpermissiongrantstate（android.content.componentname，java.lang.string，java.lang.string，int）\r\n","Name under which an AccessibilityService component publishes information\n            about itself.":"根据该名称，可访问性服务组件发布信息\r\n            关于自己。\r\n","android.app.Fragment.onViewStateRestored(android.os.Bundle)":"android.app.fragment.onviewstaterestored（android.os.bundle）\r\n","Called by a profile owner of a managed profile to set whether bluetooth devices can access\n            enterprise contacts.":"由托管配置文件的个人资料所有者调用，以设置蓝牙设备是否可以访问\r\n            企业联系人。\r\n","ParcelFileDescriptor":"包裹式记录\r\n","Called when a user or profile is created.":"创建用户或配置文件时调用。\r\n","android.app.Activity.managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)":"android.app.activity.managedquery（android.net.uri，java.lang.string []，java.lang.string，java.lang.string []，java.lang.string）\r\n","Create a host view.":"创建主机视图。\r\n"," bundles provided by a\n            ":" 由\r\n            \r\n","Specify a specific process that the associated code is to run in.":"指定关联代码要运行的特定过程。\r\n","android.app.usage.NetworkStatsManager.querySummary(int, java.lang.String, long, long)":"android.app.usage.networkstatsmanager.querysummary（int，java.lang.string，长，长）\r\n","The number of milliseconds for the LED to be on while it's flashing.":"LED在闪烁时会启动的毫秒数。\r\n","Notification category: system or device status update.":"通知类别：系统或设备状态更新。\r\n","Disable the camera on secure keyguard screens (e.":"禁用安全钥匙屏幕上的相机（e。\r\n","android.app.Dialog.dispatchGenericMotionEvent(android.view.MotionEvent)":"android.app.dialog.dispatchGenericMotionEvent（android.view.motionevent）\r\n","android.app.usage.UsageStatsManager.STANDBY_BUCKET_WORKING_SET":"android.app.usage.usagestatsmanager.standby_bucket_working_set\r\n","The left bound for a child's indicator.":"左边是孩子的指标。\r\n","Search results will be returned in a descending order.":"搜索结果将以降序返回。\r\n","android.bluetooth.BluetoothDevice.ACTION_ACL_DISCONNECTED":"android.bluetooth.bluetoothdevice.action_acl_disconted\r\n","android.app.admin.DeviceAdminInfo.USES_POLICY_EXPIRE_PASSWORD":"android.app.admin.deviceadmininfo.uses_policy_expire_password\r\n"," - the given rule has been\n            deleted.":"  - 给定的规则是\r\n            删除。\r\n","android.app.Application.onCreate()":"android.app.application.oncreate（）\r\n","android.app.AlertDialog.setIconAttribute(int)":"android.app.Alertdialog.SeticonAttribute（int）\r\n","The fragment that is displayed when the user selects this item.":"用户选择此项目时显示的片段。\r\n","android.app.Service.stopForeground(int)":"Android.App.Service.StopForeground（int）\r\n","android.accessibilityservice.AccessibilityServiceInfo.FLAG_RETRIEVE_INTERACTIVE_WINDOWS":"Android.AccessibilityService.Accessibilityserviceinfo.flag_retrieve_interactive_windows\r\n","Extra offset for the handle at the top of the SlidingDrawer.":"额外的偏移量，用于滑动抽屉顶部的手柄。\r\n","android.app.Notification.CATEGORY_MESSAGE":"android.app.notification.category_message\r\n","Specifies how an object should position its content, on both the X and Y axes,\n         within its own bounds.":"指定对象应如何将其内容定位在x和y轴上，\r\n         在自己的范围内。\r\n","android.accessibilityservice.GestureDescription.getMaxGestureDuration()":"android.accosconibilityservice.gestruedescription.getmaxgesturation（）\r\n","Sets whether this UiAutomation to run in a \"monkey\" mode.":"设置该uiAutomation是否以“猴子”模式运行。\r\n","android.app.Dialog.setFeatureDrawableResource(int, int)":"android.app.dialog.setfeaturedrawablereSource（int，int）\r\n"," results are ready.":" 结果准备就绪。\r\n","android.appwidget.AppWidgetManager.EXTRA_APPWIDGET_PROVIDER":"android.appwidget.appwidgetManager.extra_appwidget_provider\r\n","(wall clock time in UTC). ":"（UTC中的壁时钟时间）。\r\n","\n          Whether or not the application contains any code.\n        ":"\r\n          该应用程序是否包含任何代码。\r\n        \r\n","android.os.Build.VERSION_CODES#HONEYCOMB":"android.os.build.version_codes＃honeycomb\r\n","Perform the query to determine which results to show and return a list of them.":"执行查询以确定要显示哪些结果并返回它们的列表。\r\n","Supply a custom ":"提供习俗\r\n","DeviceDefault light theme for a window that will be displayed either full-screen on smaller\n    screens (small, normal) or as a dialog on larger screens (large, xlarge).":"窗口的Devicedefault Light主题将显示在较小的较小屏幕上\r\n    屏幕（小，正常）或在较大屏幕上作为对话框（大，Xlarge）。\r\n","android.app.appsearch.SearchSpec.getFilterNamespaces()":"android.app.app.appsearch.searchspec.getfilternamespaces（）\r\n","android.app.Instrumentation.callActivityOnResume(android.app.Activity)":"android.app.instrumentation.callactivityonresume（android.app.Activity）\r\n","\n            Gets the authentication scheme. If instance of AuthenticationData comes from the ":"\r\n            获取身份验证方案。如果authenticationdata的实例来自\r\n","\n          implementation which returns\n          a non-":"\r\n          返回的实现\r\n          非 - \r\n","The height that is used when creating thumbnails of applications.":"创建应用程序缩略图时使用的高度。\r\n","Specify a URI path that must exactly match, as per\n             ":"指定必须完全匹配的URI路径\r\n             \r\n","android.app.slice.SliceProvider.onSlicePinned(android.net.Uri)":"android.app.slice.sliceprovider.onslicepinned（android.net.uri）\r\n","\n            The native Java client supports two separate timeouts - one for reading from the connection (":"\r\n            本机Java客户端支持两个单独的超时 - 一个用于从连接中读取（\r\n"," for the activity.":" 为活动。\r\n","android.app.FragmentHostCallback.onStartActivityFromFragment(android.app.Fragment, android.content.Intent, int, android.os.Bundle)":"android.app.FragmentHostCallback.OnstartactivityFromFragment（android.app.Fragment，android.content.intent，int，android.os.bundle）\r\n","Default holographic (dark) for windows that want to have the user's selected\n         wallpaper appear behind them.":"想要选择用户选择的窗口的默认全息图（深色）\r\n         墙纸出现在他们身后。\r\n","android.appwidget.AppWidgetHostView.setColorResources(android.util.SparseIntArray)":"android.appwidget.appwidgethostview.setColorResources（android.util.sparseintarray）\r\n","android.animation.LayoutTransition.setAnimateParentHierarchy(boolean)":"android.animation.layouttransition.SetanimateParentherextrarchy（布尔值）\r\n","As of Android 11 this value is no longer respected.":"从Android 11开始，该值不再被尊重。\r\n","Checks if the removal of this account is allowed.":"检查是否允许删除此帐户。\r\n","if the request was canceled for any\n reason (including if it is forbidden\n by policy to modify an account (of that type))":"如果取消了任何请求\r\n 原因（包括禁止\r\n 通过修改帐户（该类型）的策略）\r\n","Cursor#getExtras":"光标＃getExtras\r\n","Indicator shown beside the child View.":"指示灯在儿童视图旁边显示。\r\n","android.content.Loader":"android.content.loader\r\n","Clear a heap watch limit previously set by ":"清除先前设置的堆手表限制\r\n","Set the pin during pairing when the pairing method is ":"配对方法在配对期间设置销钉\r\n","android.app.Notification.CATEGORY_WORKOUT":"android.app.notification.category_workout\r\n","Called by an application that is administering the device to set the minimum number of\n            numerical digits required in the password.":"由管理设备的应用程序调用以设置最小数量\r\n            密码中需要数字数字。\r\n"," populated by this method\n            will be passed to both).":" 通过这种方法填充\r\n            将传递给两者）。\r\n","android.content.DialogInterface.BUTTON_NEUTRAL":"android.content.dialoginterface.button_neutral\r\n","android.app.WallpaperInfo.loadLabel(android.content.pm.PackageManager)":"android.app.wallpaperinfo.loadlabel（android.content.pm.packagemanager）\r\n","The step size of the rating.":"等级的步骤。\r\n","android.accessibilityservice.AccessibilityService.GESTURE_3_FINGER_SINGLE_TAP_AND_HOLD":"Android.AccessibilityService.Accessibilityservice.gesture_3_finger_single_tap_and_hold\r\n","android.animation.AnimatorSet":"android.animation.animatortatorset\r\n","Default PopupMenu style.":"默认的弹出窗口样式。\r\n","Specifies the id of a view for which this view serves as a label for\n             accessibility purposes.":"指定此视图作为标签的视图的ID\r\n             可访问性目的。\r\n","android.app.appsearch.SetSchemaRequest":"android.app.appsearch.setschemarequest\r\n","Obtain a drawable for the specified built-in static system wallpaper.":"获取适用于指定的内置静态系统壁纸的绘图。\r\n","A boolean extra for ":"布尔额外\r\n"," describing this UiAutomation. -or- Sets the ":" 描述了这种uiautomation。 - 或设置\r\n","subscriberId":"订户\r\n","android.app.Fragment.onDestroyView()":"android.app.fragment.ondestroyview（）\r\n","Bit to be bitwise-ored into the ":"钻头被放入\r\n","The selected mode has been set successfully.":"所选模式已成功设置。\r\n","android.app.Notification.getGroup()":"android.app.notification.getGroup（）\r\n","M:Android.App.AppOpsManager.CheckOp(System.String,System.Int32,System.Int32)":"m：android.app.appopsmanager.checkop（System.String，System.int32，System.int32）\r\n","android.app.admin.DevicePolicyManager.getSystemUpdatePolicy()":"android.app.admin.devicepolicymanager.getSystemupDatePolicy（）\r\n","android.animation.ObjectAnimator.setProperty(android.util.Property)":"android.animation.ObjectAnimator.setProperty（android.util.property）\r\n","android.app.SearchableInfo.getSuggestPath()":"android.app.searchableInfo.getSuggestpath（）\r\n","android.app.FragmentTransaction.addToBackStack(java.lang.String)":"Android.App.FragmentTransaction.AddtoBackStack（java.lang.string）\r\n","Constructs and returns a PropertyValuesHolder with a given property and\n            a Path along which the values should be animated.":"用给定财产构建和返回财产价值持有人\r\n            值应动画的路径。\r\n"," property will\n             contain all the authentication information gathered from the server. The application must then fill in the blanks (i.e. the credentials) and re-send\n             the request configured to perform pre-authentication. The reason for this manual process is that the underlying Java HTTP client API supports only a \n             single, VM-wide, authentication handler which cannot be configured to handle credentials for several requests. AndroidClientHandler, therefore, implements\n             the authentication in managed .NET code. Message handler supports both Basic and Digest authentication. If an authentication scheme that's not supported\n             by AndroidClientHandler is requested by the server, the application can provide its own authentication module (":" 财产将\r\n             包含从服务器收集的所有身份验证信息。然后，申请必须填写空白（即凭据）并重新归还\r\n             该请求配置为执行预授权。此手动过程的原因是基础Java HTTP客户端API仅支持一个\r\n             单个，VM范围内的身份验证处理程序，无法配置以处理多个请求的凭据。因此，AndroidClientHandler实施\r\n             托管.NET代码中的身份验证。消息处理程序支持基本和消化性身份验证。如果不支持的身份验证方案\r\n             服务器请求AndroidClientHandler，该应用程序可以提供其自己的身份验证模块（\r\n","android.animation.AnimatorListenerAdapter.onAnimationPause(android.animation.Animator)":"android.animation.animatorListenerAdapter.OnanimationPause（android.animation.animator）\r\n","Available inexact recurrence interval recognized by\n            ":"可用的不精确复发间隔\r\n            \r\n","The resource id of the initial layout for this AppWidget when it is displayed on keyguard.":"此AppWidget的初始布局的资源ID显示在KeyGuard上。\r\n","Where to ellipsize text.":"椭圆形的文字在哪里。\r\n","android.animation.AnimatorSet.getCurrentPlayTime()":"android.animation.animatorset.getCurrentPlayTime（）\r\n","Draws the thumb on a seekbar.":"将拇指绘制在sequbar上。\r\n","Get the ListAdapter associated with this activity's ListView. -or- Provide the cursor for the list view.":"获取与此活动的ListView关联的ListAdapter。 - 或 - 为列表视图提供光标。\r\n","android.app.Application.onTerminate()":"android.app.application.onterminate（）\r\n","android.appwidget.AppWidgetProviderInfo.label":"android.appwidget.AppwidgetProviderInfo.Label\r\n","Constant representing that the conversation user's birthday is approaching soon.":"不断表示对话用户的生日即将到来。\r\n","Set a custom title for the bread crumbs.":"为面包屑设置自定义标题。\r\n","android.app.ListFragment.getListView()":"android.app.listFragment.getListView（）\r\n","SearchSpec":"searchspec\r\n","Constructor to initialize AppWidgetProvider.":"初始化AppWidgetProvider的构造函数。\r\n"," instances associated with it.":" 与之相关的实例。\r\n","Wrapper around\n            ":"包装器\r\n            \r\n","android.app.admin.DevicePolicyManager.setSecurityLoggingEnabled(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setsecurityloggingEnabled（android.content.componentname，boolean）\r\n","AndroidClientHandler also supports requests to servers with \"invalid\" (e.g. self-signed) SSL certificates. Since this process is a bit convoluted using\n             the Java APIs, AndroidClientHandler defines two ways to handle the situation. First, easier, is to store the necessary certificates (either CA or server certificates)\n             in the ":"AndroidClientHandler还支持对服务器的请求，该服务器具有“无效”（例如自签名）SSL证书。由于此过程有点令人费解\r\n             Java API，AndroidClientHandler定义了处理情况的两种方法。首先，更容易的是存储必要的证书（CA或服务器证书）\r\n             在里面\r\n","Used to package this object into a ":"用于将此对象包装到一个\r\n","view":"看法\r\n","The category applied to all items within this group.":"该类别应用于该组中的所有项目。\r\n","android.app.slice.SliceItem.FORMAT_LONG":"android.app.slice.sliceitem.format_long\r\n","#onRequestPermissionsResult(int, String[], int[])":"#onrequestpermissionsresult（int，string []，int []）\r\n","android.app.ActivityManager.isLowRamDevice()":"android.app.activitymanager.islowramdevice（）\r\n","android.app.Fragment.setExitTransition(android.transition.Transition)":"Android.App.Fragment.SetExitTransition（Android.transition.transition）\r\n","Activity action: launch the DPC to check policy compliance.":"活动行动：启动DPC检查策略合规性。\r\n","Perform query on package manager for list items.":"在包装管理器上对列表项目进行查询。\r\n","android.app.admin.DevicePolicyManager.getMaximumFailedPasswordsForWipe(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getmaximumfailedpasswordsforwipe（android.content.componentname）\r\n","android.bluetooth.BluetoothGatt.requestMtu(int)":"android.bluetooth.bluetoothgatt.requestmtu（int）\r\n","android.app.backup.BackupAgent.onQuotaExceeded(long, long)":"android.app.backup.backupent.onquo​​taexceeded（长，长）\r\n"," on the requested storage volume.":" 在请求的存储量上。\r\n","android.app.admin.DelegatedAdminReceiver.onReceive(android.content.Context, android.content.Intent)":"android.app.admin.delegatedadminreceiver.onreceive（android.content.context，android.content.intent）\r\n","When set to true, the list will always show the fast scroll interface.":"设置为true时，列表将始终显示快速滚动接口。\r\n","android.app.SearchManager.USER_QUERY":"android.app.searchmanager.user_query\r\n","android.app.LocalActivityManager.getActivity(java.lang.String)":"android.app.localactivitymanager.getactivity（java.lang.string）\r\n","android.app.Notification.CallStyle":"android.app.notification.callstyle\r\n","android.appwidget.AppWidgetProviderInfo.AppWidgetProviderInfo(android.os.Parcel)":"android.appwidget.AppWidgetProviderInfo.AppWidgetProviderInfo（android.os.parcel）\r\n","/manifest/application/activity":"/清单/应用程序/活动\r\n","\n            created using the ":"\r\n            使用\r\n","#PERSONAL_APPS_NOT_SUSPENDED":"#personal_apps_not_suspended\r\n","android.app.FragmentTransaction.add(android.app.Fragment, java.lang.String)":"Android.App.FragmentTransaction.Add（Android.App.Fragment，Java.lang.String）\r\n","Fills the recycled bucket with data of the next bin in the enumeration.":"在枚举中使用下一个垃圾箱的数据填充回收存储桶。\r\n","Connect to GATT Server hosted by this device.":"连接到该设备托管的GATT服务器。\r\n","Called to notify a profile owner of an organization-owned device that it needs to acknowledge\n            device compliance to allow the user to turn the profile off if needed according to the\n            maximum profile time off policy.":"打电话通知组织拥有的设备的个人资料所有者需要确认\r\n            设备符合性，以允许用户在需要的情况下关闭配置文件\r\n            最大档案休假政策。\r\n","Grants a runtime permission to a package.":"将运行时许可授予软件包。\r\n"," if the client desires the\n            same menu for this Dialog.":" 如果客户希望\r\n            此对话框的同一菜单。\r\n","android.bluetooth.BluetoothGatt.requestConnectionPriority(int)":"android.bluetooth.bluetoothgatt.RequestConnectionPriority（INT）\r\n","android.app.Instrumentation.onStart()":"android.app.instrumentation.onstart（）\r\n","Removes an account directly.":"直接删除帐户。\r\n","An int extra holding the proxy port for the wifi network in\n            ":"一个额外的额外持有WiFi网络代理端口\r\n            \r\n","android.app.job.JobInfo.getTriggerContentUpdateDelay()":"android.app.job.jobinfo.getTriggerContentupDatedElay（）\r\n","Default quickcontact badge style with large quickcontact window.":"默认的QuickContact徽章样式带有大型快速窗口。\r\n","android.app.admin.DeviceAdminInfo.loadIcon(android.content.pm.PackageManager)":"android.app.admin.deviceadmininfo.loadicon（android.content.pm.packagemanager）\r\n","android.app.slice.SliceManager.CATEGORY_SLICE":"android.app.slice.slicemanager.category_slice\r\n","Gets the controller which should be receiving media key and volume events\n            while this activity is in the foreground. -or- Sets a ":"获取应该接收媒体密钥和卷事件的控制器\r\n            虽然这项活动在前景。 - 或设置a\r\n","Designates a specific service component as the provider for making permission requests of a\n            local or remote administrator of the user.":"将特定的服务组件指定为提供的提供商\r\n            用户的本地或远程管理员。\r\n","android.app.people.PeopleManager.getStatuses(java.lang.String)":"android.app.people.peoplemanager.getstatuses（java.lang.string）\r\n","Returns true if the final ":"如果决赛返回\r\n","android.app.NotificationManager.isNotificationListenerAccessGranted(android.content.ComponentName)":"android.app.notificationmanager.isnotificationListenerAccesscessgranted（android.content.componentname）\r\n","Intent used to broadcast the change in connection state of the local\n            Bluetooth adapter to a profile of the remote device.":"目的用于广播本地的连接状态变化\r\n            蓝牙适配器到远程设备的配置文件。\r\n","Called by any application to find out whether it has been granted permission via\n            ":"任何申请都要求查明是否已通过\r\n            \r\n","\n with no options.":"\r\n 没有选择。\r\n","Fragment#setExitSharedElementCallback(SharedElementCallback)":"fragment＃setExitsharedElementCallback（sharedElementCallback）\r\n","Gets the resource id of the spoken language to recognize in voice search.":"获取口语的资源ID，以在语音搜索中识别。\r\n","android.app.admin.DevicePolicyManager.clearDeviceOwnerApp(java.lang.String)":"android.app.admin.devicepolicymanager.cleardeviceownerapp（java.lang.string）\r\n","The app has not be used for several days and/or is unlikely to be used for several days.":"该应用程序已经几天没有使用和/或不可能使用几天了。\r\n","android.appwidget.AppWidgetHostView.updateAppWidgetOptions(android.os.Bundle)":"android.appwidget.appwidgethostview.updateappwidgetoptions（android.os.bundle）\r\n","Broadcast Action: The local Bluetooth adapter has finished the device\n            discovery process.":"广播动作：本地蓝牙适配器已经完成了设备\r\n            发现过程。\r\n","#isSecurityLoggingEnabled":"#issecurityLoggingEnabled\r\n","duration,":"期间，\r\n","android.app.DatePickerDialog.DatePickerDialog(android.content.Context, int)":"android.app.datepickerdialog.datepickerdialog（android.content.context，int）\r\n","android.bluetooth.BluetoothDevice.PAIRING_VARIANT_PIN":"android.bluetooth.bluetoothdevice.pairing_variant_pin\r\n","Notification category: running stopwatch.":"通知类别：运行秒表。\r\n","android.app.backup.BackupHelper.restoreEntity(android.app.backup.BackupDataInputStream)":"android.app.backup.backuphelper.restoreentity（android.app.backup.backup.backupdatainputstream）\r\n","Allows a set of packages to access cross-profile calendar APIs.":"允许一组软件包访问跨核日历API。\r\n","android.app.Activity.onCreatePanelView(int)":"android.app.activity.oncreatepanelview（int）\r\n","Radius of the bottom right corner.":"右下角的半径。\r\n","Return the total bytes used by all video files in the shared/external\n            storage hosted on this volume.":"返回共享/外部所有视频文件使用的总字节\r\n            存储在此卷上。\r\n","Base class for a service that device owner/profile owners can optionally have.":"设备所有者/配置文件所有者可以选择拥有的服务的基类。\r\n","View#INVISIBLE":"查看＃隐形\r\n","android.app.admin.DeviceAdminInfo.getComponent()":"android.app.admin.deviceadmininfo.getComponent（）\r\n","android.content.Context#BIND_EXTERNAL_SERVICE":"android.content.context＃bind_external_service\r\n","Returns the list of ":"返回列表\r\n","android.bluetooth.BluetoothDevice.ACTION_BOND_STATE_CHANGED":"android.bluetooth.bluetoothdevice.action_bond_state_changed\r\n","Adds an account of the specified accountType.":"添加了指定帐户类型的帐户。\r\n","id":"ID\r\n","android.app.ApplicationErrorReport.systemApp":"Android.App.ApplicationErroreport.SystemApp\r\n"," will be detached from the service.":" 将与服务分离。\r\n","Return a localized, styled CharSequence from the application's package's\n            default string table.":"从应用程序包的包裹中返回本地化的式炭化\r\n            默认字符串表。\r\n","android.accessibilityservice.AccessibilityService.GESTURE_3_FINGER_SWIPE_RIGHT":"Android.AccessibilityService.Accessibilityservice.gesture_3_finger_swipe_right\r\n","android.appwidget.AppWidgetProviderInfo.loadLabel(android.content.pm.PackageManager)":"android.appwidget.appwidgetProviderInfo.loadlabel（android.content.pm.packagemanager）\r\n","Gets time when the update was first available in milliseconds since midnight, January 1,\n            1970 UTC.":"从1月1日午夜以来，该更新首先以毫秒为单位获得时间\r\n            1970 UTC。\r\n"," coming in as an update from the\n            AppWidget provider.":" 作为来自\r\n            AppWidget提供商。\r\n","android.app.admin.DevicePolicyManager.setCommonCriteriaModeEnabled(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setCommoncriteriamodeenabled（android.content.componentname，boolean）\r\n","android.app.admin.DevicePolicyManager.DELEGATION_NETWORK_LOGGING":"android.app.admin.devicepolicymanager.delegation_network_logging\r\n","android.bluetooth.BluetoothDevice.ACTION_NAME_CHANGED":"android.bluetooth.bluetoothdevice.action_name_changed\r\n","Returns the database overall schema version.":"返回数据库总架构版本。\r\n","android.animation.PropertyValuesHolder.ofMultiInt(java.lang.String, android.animation.TypeConverter, android.animation.TypeEvaluator, android.animation.Keyframe)":"android.animation.propertyvaluesholder.ofmultiint（java.lang.string，android.animation.typeconverter，android.animation.typeevaluator，android.animation.animation.keyframe）\r\n","android.app.Activity.getLoaderManager()":"android.app.activity.getLoadermanager（）\r\n"," and\n            thus the connection uses whatever host name verification mechanism the operating system defaults to.\n            Override in your class to define custom host name verification behavior. The overriding class should\n            not set the ":" 和\r\n            因此，该连接使用操作系统默认设置的任何主机名验证机制。\r\n            覆盖您的班级以定义自定义主机名验证行为。覆盖班应该\r\n            未设置\r\n","Text color, typeface, size, and style for \"small\" text.":"“小”文本的文本颜色，字体，大小和样式。\r\n","#KEYGUARD_DISABLE_SECURE_CAMERA":"#keyguard_disable_secure_camera\r\n","android.app.AppOpsManager.OPSTR_WRITE_SETTINGS":"android.app.appopsmanager.opptr_write_settings\r\n","Get the remote input text results bundle from an intent.":"从意图中获取远程输入文本结果捆绑包。\r\n","Defines whether the horizontal scrollbar track should always be drawn.":"定义是否应始终绘制水平滚动轨道。\r\n"," representing this window's current content.":" 表示此窗口的当前内容。\r\n","Returns the TTL (time-to-live) of the ":"返回的TTL（寿命时间）\r\n","android.app.usage.UsageStats":"android.app.usage.usagestats\r\n","State identifier indicating that the object is currently checked.":"状态标识符，指示当前检查对象。\r\n","Default theme for dialog windows and activities (on API level 10 and lower),\n         which is used by the\n         ":"对话框窗口和活动的默认主题（在API级别10及以下），\r\n         这是由\r\n         \r\n","The type of navigation to use.":"使用的导航类型。\r\n","android.app.appsearch.SetSchemaRequest.getSchemasNotDisplayedBySystem()":"android.app.AppSearch.Setschemarequest.getSchemasnotdisplayedBysystem（）\r\n","Allows application to override the creation of services.":"允许应用程序覆盖服务的创建。\r\n","Defines the maximum weight sum.":"定义最大重量总和。\r\n"," broadcast, which\n is sent when the last AppWidget instance for this provider is deleted.":" 广播，哪个\r\n 当删除此提供商的最后一个AppWidget实例时发送。\r\n"," Intent with all of the context of the current\n            application.":" 目的是当前的所有上下文\r\n            应用。\r\n","android.app.TaskStackBuilder.getIntentCount()":"android.app.taskStackBuilder.getIntentCount（）\r\n","android.app.AlertDialog.getListView()":"android.app.alertdialog.getListView（）\r\n","Return whether the backup service is enabled by the device owner or profile owner for the\n            current user, as previously set by ":"返回设备所有者还是配置文件所有者启用备份服务的备份服务\r\n            当前用户，如前所述\r\n","Returns flags with additional information about the backup transport.":"返回标志，并提供有关备份运输的其他信息。\r\n","Sets an executor which can be used for asynchronously inflating.":"设置可用于异步膨胀的执行器。\r\n","Returns the expiry time in milliseconds of the blob that this object is representing, in\n                    ":"返回该对象代表的斑点中的到期时间，在\r\n                    \r\n","android.app.Service.onBind(android.content.Intent)":"android.app.service.onbind（android.content.intent）\r\n","android.animation.Animator.setupEndValues()":"android.animation.animator.setupendvalues（）\r\n","Called to inform an app that a slice has been pinned.":"叫通知应用程序已将切片固定。\r\n","android.app.admin.DeviceAdminReceiver.onUserSwitched(android.content.Context, android.content.Intent, android.os.UserHandle)":"android.app.admin.deviceadminreceiver.onuserswitched（android.content.context，android.content.intent，android.os.userhandle）\r\n","Accessibility services with the\n            ":"可访问性服务\r\n            \r\n","This field represents a set of flags used for configuring an\n            ":"该字段表示一组用于配置的标志\r\n            \r\n","Add the activity parent chain as specified by the\n            ":"按照指定的添加活动父链\r\n            \r\n","android.view.LayoutInflater.Factory2#onCreateView(View, String, Context, AttributeSet)":"android.view.layoutinflater.factory2＃oncreateview（视图，字符串，上下文，属性）\r\n","DialogInterface.OnDismissListener":"DialogInterface.ondismisslistener\r\n","android.app.Dialog.onKeyShortcut(int, android.view.KeyEvent)":"android.app.dialog.onkeyshortcut（int，android.view.keyevent）\r\n","android.app.ActionBar.setDisplayHomeAsUpEnabled(boolean)":"android.app.actionbar.setDisplayHomeAsupeNabled（布尔值）\r\n","#onRestoreInstanceState":"#onrestoreinstancestate\r\n","android.app.blob.BlobHandle.createWithSha256(byte[], java.lang.CharSequence, long, java.lang.String)":"android.app.blob.blobhandle.createwithsha256（byte []，java.lang.CharSequence，long，java.lang.string）\r\n","SecurityEvent":"SecurityEvent\r\n","android.app.WallpaperManager.peekDrawable()":"android.app.wallpapermanager.peekdrawable（）\r\n","android.animation.LayoutTransition":"android.animation.layouttransition\r\n","PendingIntent#FLAG_ONE_SHOT PendingIntent.FLAG_ONE_SHOT":"pendingIntent＃flag_one_shot pendingIntent.flag_one_shot\r\n","android.app.Dialog.onRestoreInstanceState(android.os.Bundle)":"android.app.dialog.onrestoreInstancestate（android.os.bundle）\r\n","android.app.usage.NetworkStatsManager.querySummaryForUser(int, java.lang.String, long, long)":"android.app.usage.networkstatsmanager.querysummaryforuser（int，java.lang.string，长，长）\r\n","android.app.job.JobInfo.getMaxExecutionDelayMillis()":"android.app.job.jobinfo.getmaxexecutiondelaymillis（）\r\n","The total memory accessible by the kernel.":"内核可访问的总内存。\r\n","byte[][]":"字节[][]\r\n","android.app.ActivityOptions.makeCustomAnimation(android.content.Context, int, int)":"android.app.activityOptions.makeCustomanimation（android.content.context，int，int）\r\n","Dispatch a trackball event.":"派遣轨迹球活动。\r\n","android.app.usage.ConfigurationStats.getActivationCount()":"android.app.usage.configurationstats.getActivationCount（）\r\n","android.app.job.JobInfo.getService()":"android.app.job.jobinfo.getservice（）\r\n","Default disabled alpha for widgets that set enabled/disabled alpha programmatically.":"默认禁用alpha用于通过编程设置启用/禁用alpha设置的小部件。\r\n","This method is a part of the ":"此方法是该方法的一部分\r\n","A type of policy that this device admin can use: require encryption of stored data.":"该设备管理员可以使用的一种策略：需要对存储数据的加密。\r\n","#onCreateSnapshotView(android.content.Context, android.os.Parcelable)":"#oncreatesnapshotview（android.content.context，android.os.os.ableable）\r\n","android.app.usage.UsageStatsManager":"android.app.usage.usagestatsmanager\r\n"," of the given downloaded file id, if the file is\n            downloaded successfully.":" 如果文件为，则给定下载的文件ID\r\n            成功下载。\r\n","Sets the selection to the specified group.":"将选择设置为指定组。\r\n","android.app.Activity.getMenuInflater()":"android.app.activity.getMenuinflater（）\r\n","When opening a new activity, this is the animation that is\n              run on the next activity (which is entering the screen).":"打开新活动时，这是动画\r\n              在下一个活动（正在输入屏幕）上运行。\r\n","\n      Generates a ":"\r\n      生成a\r\n","#FORMAT_ACTION":"#format_action\r\n","Returns the complete component name of this activity.":"返回此活动的完整组件名称。\r\n"," that contains a long.":" 其中包含很长的时间。\r\n"," methods.\n        ":" 方法。\r\n        \r\n"," it\n returns ":" 它\r\n 返回\r\n","\n          How the activity should be launched.\n        ":"\r\n          应该如何启动活动。\r\n        \r\n","\n            Implement this interface in order to provide support for HTTP authentication scheme not supported by ":"\r\n            实现此接口，以提供对不支持HTTP身份验证方案的支持\r\n","An int extra holding a minimum required version code for the device admin package.":"设备管理程序包的INT额外持有最低要求的版本代码。\r\n","An activity is a single, focused thing that the user can do.":"一项活动是用户可以做的单一专注的事情。\r\n","Intent#FLAG_ACTIVITY_SINGLE_TOP":"意图＃flag_activity_single_top\r\n","android.animation.Keyframe.ofInt(float, int)":"android.animation.keyframe.ofint（float，int）\r\n","android.app.slice.SliceProvider.SLICE_TYPE":"android.app.slice.sliceprovider.slice_type\r\n","android.app.admin.DeviceAdminReceiver.onReadyForUserInitialization(android.content.Context, android.content.Intent)":"android.app.admin.deviceadminreceiver.onreadyforuserinitialization（android.content.context，android.content.intent）\r\n","XX:XX:XX:XX:XX:XX":"xx：xx：xx：xx：xx：xx\r\n","android.content.DialogInterface.BUTTON1":"android.content.dialoginterface.button1\r\n","Set the action bar into custom navigation mode, supplying a view\n            for custom navigation.":"将操作栏设置为自定义导航模式，提供视图\r\n            用于自定义导航。\r\n","android.app.Service.STOP_FOREGROUND_DETACH":"android.app.service.stop_foreground_detach\r\n","android.appwidget.AppWidgetProviderInfo.WIDGET_FEATURE_CONFIGURATION_OPTIONAL":"android.appwidget.AppWidgetProviderInfo.widget_feature_configuration_optional\r\n","Set the icon displayed on this tab.":"将显示在此选项卡上的图标设置。\r\n","#setApplicationRestrictionsManagingPackage":"#SetApplicationRestrictionsManagingPackage\r\n","Notifies the Android backup system that your application wishes to back up\n            new changes to its data.":"通知您的应用程序希望备份的Android备份系统\r\n            其数据的新更改。\r\n","Sets the id of the display where the activity should be launched.":"设置显示活动应启动的显示的ID。\r\n"," that should be used to inflate the layout of this presentation.":" 应该用来夸大该演示文稿的布局。\r\n","Gets the component name of the searchable activity.":"获取可搜索活动的组件名称。\r\n","Returns the annotation type of this annotation.":"返回此注释的注释类型。\r\n","Delegation of application restrictions management.":"应用程序限制管理的委派。\r\n","Return true if this fragment is currently being removed from its\n            activity.":"如果目前正在从其片段中删除此片段，则返回true\r\n            活动。\r\n","android.app.AppOpsManager.checkOpNoThrow(java.lang.String, int, java.lang.String)":"android.app.appopsmanager.checkopnothrow（java.lang.string，int，java.lang.string）\r\n","Called by an application that is administering the device to\n            determine the current encryption status of the device.":"通过将设备管理为\r\n            确定设备的当前加密状态。\r\n","android.app.admin.DevicePolicyManager.isUsbDataSignalingEnabled()":"android.app.admin.devicepolicymanager.isusbdatasignalingeNabled（）\r\n","Indicates whether the application supports smaller screen form-factors.":"指示该应用程序是否支持较小的屏幕形式因子。\r\n","Set which notification properties will be inherited from system defaults.":"设置哪些通知属性将从系统默认值继承。\r\n"," so\n            that LocalActivityManager can perform the corresponding action on the\n            activities it holds.":" 所以\r\n            localactivityManager可以在\r\n            它举办的活动。\r\n","android.app.Instrumentation.sendCharacterSync(int)":"Android.App.Instrumentation.sendcharactersync（int）\r\n","Resources":"资源\r\n","android.app.SyncNotedAppOp.getAttributionTag()":"android.app.syncnotedappop.getAttributionTag（）\r\n","Perform the operation associated with this PendingIntent, allowing the\n            caller to specify information about the Intent to use.":"执行与此悬浮仪相关的操作，允许\r\n            呼叫者指定有关使用意图的信息。\r\n","android.app.admin.DevicePolicyManager.addOverrideApn(android.content.ComponentName, android.telephony.data.ApnSetting)":"android.app.admin.devicepolicymanager.addoverrideapn（android.content.componentname，android.telephony.data.apnsetting）\r\n","android.app.NotificationChannel.getDescription()":"android.app.notificationChannel.getDescription（）\r\n","The types of media routes the button and its resulting\n             chooser will filter by.":"媒体的类型路由按钮及其结果\r\n             选择器将过滤。\r\n","android.app.slice.SliceProvider.onCreatePermissionRequest(android.net.Uri)":"android.app.slice.sliceprovider.oncreatepermessionrequest（android.net.uri）\r\n","android.bluetooth.BluetoothGatt.setPreferredPhy(int, int, int)":"android.bluetooth.bluetoothgatt.setpreferredphy（int，int，int）\r\n"," object specifies input to be collected from a user to be passed along with\n an intent inside a ":" 对象指定要从用户收集的输入\r\n 内部的意图\r\n","The user has performed an down and left gesture on the touch screen.":"用户在触摸屏上执行了一个下降和左手势。\r\n","android.app.backup.BackupDataOutput.writeEntityHeader(java.lang.String, int)":"android.app.backup.backupdataoutput.writeentityheader（java.lang.string，int）\r\n","Activity action: ask the user to add a new device administrator to the system.":"活动操作：要求用户向系统添加新的设备管理员。\r\n","\n         retained in order to be restarted.":"\r\n         保留以重新启动。\r\n","#PAIRING_VARIANT_PIN":"#pairing_variant_pin\r\n","Prepare the given view to be shown.":"准备要显示的给定视图。\r\n","Sets the length of time to delay between starting each animation during one of the\n            change animations.":"设定时间长度延迟在一个过程中启动每个动画之间的时间\r\n            更改动画。\r\n","If non-zero, this service is not currently running, but scheduled to\n restart at the given time.":"如果非零，则目前尚未运行此服务，而是安排\r\n 在给定时间重新启动。\r\n","Color of text (usually same as colorForeground).":"文本的颜色（通常与颜色前景相同）。\r\n"," objects by document IDs in a namespace from the ":" 从命名空间中的文档ID对象\r\n","android.app.Fragment.onStop()":"android.app.fragment.onstop（）\r\n","Create an instance of CrashInfo initialized from a Parcel.":"创建一个从包裹初始化的crashinfo实例。\r\n","Contains usage statistics for an event type for a specific\n            time range.":"包含针对特定事件类型的使用统计信息\r\n            时间范围。\r\n","android.accounts.AccountManager.blockingGetAuthToken(android.accounts.Account, java.lang.String, boolean)":"android.accounts.accountmanager.blockinggetauthtoken（android.accounts.accounts.account，java.lang.string，boolean）\r\n","If this flag is set the system will regard views that are not important\n            for accessibility in addition to the ones that are important for accessibility.":"如果设置了此标志，系统将考虑不重要的视图\r\n            除了对可访问性很重要的访问权限外。\r\n","Enable the global actions dialog during LockTask mode.":"在LockTask模式下启用全局操作对话框。\r\n","activatable":"可激活\r\n","Disable all current and future keyguard customizations.":"禁用所有当前和未来的关键守卫自定义。\r\n","UnsafeStateException":"UnsafeStateException\r\n","Called by the system when the device configuration changes while your\n component is running.":"当设备配置更改时，系统调用\r\n 组件正在运行。\r\n","Creates a new SyncNotedAppOp.":"创建一个新的SyncnotedAppop。\r\n","Finds the first descendant view with the given ID or ":"找到具有给定ID或的第一个后代视图或\r\n","Called by a device owner to create a user with the specified name.":"由设备所有者打电话给用指定名称创建用户。\r\n","When set to true, the list uses a drawing cache during scrolling.":"设置为true时，列表在滚动过程中使用绘图缓存。\r\n","Last resident set size of the memory that the process had used in kB.":"该过程在KB中使用的最后一个居民设置的内存大小。\r\n","Set the full title to show as a bread crumb when this transaction\n            is on the back stack, as used by ":"当这笔交易时，将完整标题设置为面包屑\r\n            在后堆上，如\r\n"," object\n to play when the given amount of time elapses.":" 目的\r\n 在给定的时间段时播放。\r\n","Return whether this activity is the root of a task.":"返回此活动是否是任务的根源。\r\n","android.app.SearchManager.getSearchableInfo(android.content.ComponentName)":"android.app.searchmanager.getSearchableInfo（android.content.componentname）\r\n","\n            which allows them to provide a custom large icon associated with this action.":"\r\n            这使他们能够提供与此操作相关的自定义大图标。\r\n","Commits this transaction synchronously.":"同步进行此交易。\r\n",". -or- Enable hiding the action bar on content scroll.":"。 - 或允许在内容滚动上隐藏动作栏。\r\n","The caller supplied invalid arguments to the call.":"呼叫者向呼叫提供了无效的论点。\r\n","PRIVATE_DNS_MODE_OPPORTUNISTIC":"private_dns_mode_opportunistic\r\n","android.app.admin.DevicePolicyManager.PROVISIONING_MODE_MANAGED_PROFILE_ON_PERSONAL_DEVICE":"android.app.admin.devicepolicymanager.provisioning_mode_managed_profile_on_personal_device\r\n","Indicates that an admin has set a maximum screen lock timeout.":"指示管理员设置了最大屏幕锁定超时。\r\n","android.app.appsearch.AppSearchSession.close()":"android.app.appsearch.appsearchsession.close（）\r\n","Report the total number of bytes of data available for the current entity.":"报告当前实体可用的数据字节总数。\r\n","android.app.ActivityManager.getProcessMemoryInfo(int[])":"android.app.activityManager.getProcessMemoryInfo（int []）\r\n","Display the dialog, adding the fragment to the given FragmentManager.":"显示对话框，将片段添加到给定的FragmentManager中。\r\n","android.app.blob.BlobHandle":"android.app.blob.blobhandle\r\n","android.app.RemoteInput.getDataResultsFromIntent(android.content.Intent, java.lang.String)":"android.app.remoteinput.getDataresultsfromintent（android.content.intent，java.lang.string）\r\n","Called to have the fragment instantiate its user interface view.":"称为片段实例化其用户界面视图。\r\n","Default holo dark theme for panel windows.":"面板窗口的默认Holo Dark主题。\r\n","android.app.appsearch.AppSearchSession.getNamespaces(java.util.concurrent.Executor, java.util.function.Consumer)":"android.app.appsearch.appsearchsession.getnamespaces（java.util.concurrent.executor，java.util.function.consumer）\r\n"," objects to mix in to the list of AppWidgets that are\n            installed.":" 将对象混合到appwidgets的列表\r\n            安装。\r\n","A grouping of related notification channels.":"相关通知渠道的分组。\r\n","This permission can be used on content providers to allow the global\n         search system to access their data.":"该许可可以用于内容提供商允许全局\r\n         搜索系统以访问其数据。\r\n","android.content.ComponentCallbacks2.TRIM_MEMORY_RUNNING_MODERATE":"android.content.componentCallbacks2.trim_memory_running_moderate\r\n","This download is visible and shows in the notifications while\n in progress and after completion.":"此下载是可见的，并在通知中显示\r\n 正在进行和完成后。\r\n","Returns whether the specified transitionType is enabled for this LayoutTransition object.":"返回是否启用了该布局传输对象指定的TransitionType。\r\n","android.animation.LayoutTransition.getInterpolator(int)":"android.animation.layouttransition.getInterpolator（int）\r\n","#INFINITE":"＃无穷\r\n","#BUGREPORT_FAILURE_FILE_NO_LONGER_AVAILABLE":"#BUGREPORT_FAILURE_FILE_NO_LONGER_AVAILABLE\r\n","android.bluetooth.BluetoothGattCharacteristic.PROPERTY_READ":"android.bluetooth.bluetoothgattcharacteristic.property_read\r\n","#onStartJob(JobParameters)":"#onstartjob（JobParameters）\r\n","#setWatchHeapLimit(long)":"#setWatchHeaplimit（长）\r\n","android.app.ApplicationErrorReport.ApplicationErrorReport()":"Android.App.ApplicationErroreport.ApplicationErrreReport（）\r\n","android.animation.LayoutTransition.addChild(android.view.ViewGroup, android.view.View)":"android.animation.layouttransition.addchild（android.view.viewgroup，android.view.view）\r\n","Return true if the given administrator component is currently active (enabled) in the system.":"如果给定的管理员组件当前处于活动状态（启用），则返回true。\r\n","android.app.PendingIntent.getBroadcast(android.content.Context, int, android.content.Intent, int)":"android.app.pendingIntent.getBroadcast（android.content.context，int，android.content.intent，int）\r\n","Creates a notification channel.":"创建一个通知渠道。\r\n","android.app.ActivityOptions.setLaunchDisplayId(int)":"android.app.activityOptions.setlaunchdisplayid（int）\r\n","ActionMode#TYPE_PRIMARY":"ActionMode＃type_primary\r\n","Exit the keyguard securely.":"安全退出密钥守卫。\r\n","android.app.Notification.largeIcon":"android.app.notification.largeicon\r\n",",\n             this is the new way to specify the minimum screen size an application is\n             compatible with.":"，，，，\r\n             这是指定应用程序的最小屏幕大小的新方法\r\n             与。\r\n","Specifies extra space on the left, top, right and bottom\n              sides of this view.":"指定左，顶，右和底部的额外空间\r\n              这种观点的一面。\r\n","Create an insecure L2CAP Connection-oriented Channel (CoC) ":"创建一个不安全的L2CAP连接通道（COC）\r\n",": the process is nearing the end\n            of the background LRU list, and if more memory isn't found soon it will\n            be killed.":"：该过程即将结束\r\n            在背景LRU列表中，如果未找到更多内存，它将\r\n            被杀死。\r\n","\n          Whether or not the activity should be removed from the activity\n          stack and finished when the user navigates away.\n        ":"\r\n          是否应从活动中删除活动\r\n          用户导航时堆叠并完成。\r\n        \r\n","alias":"别名\r\n","android.accessibilityservice.AccessibilityServiceInfo.getResolveInfo()":"Android.AccessibilityService.Accessibilityserviceinfo.getResolveInfo（）\r\n","android.appwidget.AppWidgetHost.allocateAppWidgetId()":"android.appwidget.appwidgethost.alocateappwidgetid（）\r\n","android.app.ActionBar.isHideOnContentScrollEnabled()":"android.app.actionbar.ishideoncontentsCrollenabled（）\r\n","Used for permissions that change the status bar \n":"用于更改状态栏的权限\r\n\r\n","The action name to assign to the Intent, as per\n            ":"根据意图分配的动作名称\r\n            \r\n"," intents,\n            Contains the ":" 意图，\r\n            包含\r\n","Returns the ranking signal of the ":"返回的排名信号\r\n","android.app.admin.DevicePolicyManager.POLICY_DISABLE_CAMERA":"android.app.admin.devicepolicymanager.policy_disable_camera\r\n","AccountManagerFuture#getResult()":"AccountManagerFuture＃getResult（）\r\n","The accessibility service id.":"可访问性服务ID。\r\n","Number of times the service's process has crashed while the service\n is running.":"服务过程中服务过程崩溃的次数\r\n 在跑。\r\n","Default Gallery style.":"默认画廊样式。\r\n","Sets the animation used during one of the transition types that may run.":"设置在可能运行的过渡类型之一中使用的动画。\r\n","The time when there was last activity in the service (either\n explicit requests to start it or clients binding to it).":"服务中最后一个活动的时间（要么\r\n 明确要求启动它或绑定到它的客户）。\r\n"," socket ready to start an insecure\n            outgoing connection to this remote device using SDP lookup of uuid.":" 插座准备开始不安全\r\n            使用UUID的SDP查找到该远程设备的传出连接。\r\n","#onCaptureSharedElementSnapshot(android.view.View, android.graphics.Matrix,\n            android.graphics.RectF)":"#onca​​pturesharedelementsnapshot（android.view.view，android.graphics.matrix，\r\n            android.graphics.Rectf）\r\n","\n            that gives the resulting ":"\r\n            这给了最终的\r\n","android.animation.ObjectAnimator.ofInt(java.lang.Object, android.util.Property, int[])":"android.animation.ObjectAnimator.ofint（java.lang.object，android.util.property，int []）\r\n","android.accounts.AccountManager.KEY_AUTHTOKEN":"android.accounts.accountmanager.key_authtoken\r\n","Give the Activity a chance to control the UI for an action mode requested\n            by the system.":"给活动一个机会，以控制UI的操作模式\r\n            由系统。\r\n","Dispatch a gesture to the touch screen.":"将手势分配到触摸屏。\r\n","State identifier indicating the group is empty (has no children).":"表明该组为空的状态标识符（没有孩子）。\r\n","android.app.FragmentTransaction.setPrimaryNavigationFragment(android.app.Fragment)":"Android.App.FragmentTransaction.SetPrimaryNavigationFragment（Android.App.Fragment）\r\n","Set if the app is on the system image.":"如果应用程序在系统图像上，请设置。\r\n","A Drawable resource providing a graphical representation of its\n         associated item.":"可绘制的资源，提供其图形表示\r\n         关联项目。\r\n"," is to be shown in the collapsed state\n            of a ":" 要以折叠状态显示\r\n            一个\r\n","The app is restricted from running in the background.":"该应用程序不受后台运行的限制。\r\n","If the app has been configured to crash on this op.\n":"如果该应用程序已配置为在此OP上崩溃。\r\n\r\n","Control whether a container should automatically close itself if\n             the user touches outside of it.":"控制一个容器是否应自动关闭，如果\r\n             用户在外面触摸。\r\n","android.appwidget.AppWidgetProviderInfo.minWidth":"android.appwidget.appwidgetProviderInfo.minwidth\r\n","when the animation cannot be loaded\n":"当动画无法加载时\r\n\r\n","Constructs and returns an ObjectAnimator that animates over float values for a multiple\n            parameters setter.":"构造并返回一个对objectanimator，该对象映射器在float值上为多个浮点数动画\r\n            参数设置器。\r\n","android.app.SearchManager.SUGGEST_URI_PATH_SHORTCUT":"android.app.searchmanager.suggest_uri_path_shortcut\r\n","Returns the id of the channel this notification posts to.":"将此通知帖子的频道ID返回。\r\n","Theme for translucent activities (on API level 10 and lower).":"半透明活动的主题（在API级别10及较低）。\r\n","Set the logo to display in the 'home' section of the action bar.":"将徽标设置为在动作栏的“家庭”部分中显示。\r\n","SearchContext":"searchContext\r\n","android.app.Instrumentation.start()":"android.app.instrumentation.start（）\r\n","android.app.appsearch.BatchResultCallback.onResult(android.app.appsearch.AppSearchBatchResult)":"android.app.appsearch.batchresultcallback.onresult（android.app.appsearch.appsearchbatchresult）\r\n","Indicates that an admin has set disabled keyguard features.":"指示管理员设置了禁用的钥匙守护功能。\r\n","android.animation.TimeInterpolator.getInterpolation(float)":"android.animation.timeinterpolator.getInterpolation（float）\r\n","android.app.admin.DevicePolicyManager.PRIVATE_DNS_MODE_UNKNOWN":"android.app.admin.devicepolicymanager.private_dns_mode_unknown\r\n","Indicates that only notifications selected by the user will appear as bubbles.":"表明只有用户选择的通知才会显示为气泡。\r\n","android.bluetooth.BluetoothGatt.setCharacteristicNotification(android.bluetooth.BluetoothGattCharacteristic, boolean)":"android.bluetooth.bluetoothgatt.setcharacteristicnotification（android.bluetooth.bluetoothgattcharacteristic，boolean）\r\n","Broadcast Action: Indicates the friendly name of a remote device has\n            been retrieved for the first time, or changed since the last retrieval.":"广播动作：指示远程设备的友好名称\r\n            自上次检索以来是第一次检索或更改。\r\n","Called by a profile or device owner to set the permitted\n            ":"由配置文件或设备所有者调用以设置允许的\r\n            \r\n","Reference to an array resource that will populate a list/adapter.":"引用将填充列表/适配器的数组资源。\r\n","The most recent value calculated by this <code>ValueAnimator</code> for <code>propertyName</code>.":"此<code> valueAnimator </code> <code> propertyname </code>计算出的最新值。\r\n","Called by an application that is administering the device to disable keyguard customizations,\n            such as widgets.":"由管理设备的应用程序调用以禁用keyguard自定义，\r\n            例如小部件。\r\n","This hook is called whenever the content view of the screen changes\n (due to a call to\n ":"每当屏幕的内容视图更改时，此钩被称为\r\n （由于打电话\r\n \r\n","Default highlight color for items in multiple selection\n             mode.":"默认的多个选择中项目的颜色\r\n             模式。\r\n","#DELEGATION_NETWORK_LOGGING":"#delegation_network_logging\r\n"," object\n to start when the animation supplied in this method call ends.":" 目的\r\n 从此方法调用中提供的动画结束时开始。\r\n","Return the state data set by calling\n            ":"通过调用返回状态数据集\r\n            \r\n","A Boolean extra that can be used by the mobile device management application to skip the\n            disabling of system apps during provisioning when set to ":"移动设备管理应用程序可以使用的布尔值额外来跳过\r\n            设置为\r\n","Called when the main window associated with the activity has been\n            detached from the window manager.":"当与活动相关联的主窗口是\r\n            与窗口管理器分离。\r\n","Constructor.":"构造函数。\r\n","/manifest/application":"/清单/应用程序\r\n","android.app.RecoverableSecurityException":"Android.App.RecoverablesEcurityException\r\n","android.app.Dialog.requestWindowFeature(int)":"android.app.dialog.requestwindowfeature（int）\r\n","Prevents a context menu to be shown for the given view.":"防止给定视图显示上下文菜单。\r\n","Used for permissions that are associated with accessing\n         microphone audio from the device.":"用于与访问相关的权限\r\n         设备的麦克风音频。\r\n","android.app.Activity.onStop()":"android.app.activity.onstop（）\r\n","android.animation.LayoutTransition.setStartDelay(int, long)":"android.animation.layouttransition.setstartdelay（int，long）\r\n","#CHANGING":"＃改变\r\n","The default install location defined by an application.":"应用程序定义的默认安装位置。\r\n","#addResultsToIntent":"#addresultstointent\r\n","android.bluetooth.BluetoothGattCharacteristic.PROPERTY_NOTIFY":"android.bluetooth.bluetoothgattcharacteristic.property_notify\r\n","ActionBar":"动作栏\r\n"," key: An arrayList of ":" 钥匙：一个阵列列表\r\n","android.app.job.JobInfo.getEstimatedNetworkUploadBytes()":"android.app.job.jobinfo.getEstimatednetworkuploadbytes（）\r\n","android.app.appsearch.SearchResult.getGenericDocument()":"android.app.appsearch.searchresult.getGenericDocument（）\r\n","If provided, this string will be used to describe the searchable item in the\n             searchable items settings within system search settings.":"如果提供，此字符串将用于描述在\r\n             在系统搜索设置中可搜索的项目设置。\r\n","android.app.admin.DevicePolicyManager.uninstallCaCert(android.content.ComponentName, byte[])":"android.app.admin.devicepolicymanager.uninstallcacert（android.content.componentname，byte []）\r\n"," provided was of a valid hostname but that host was found\n            to not support DNS-over-TLS.":" 前提是有效的主机名，但发现了那个主机\r\n            不支持DNS-Over-TLS。\r\n","android.app.slice.SliceItem.getText()":"android.app.slice.sliceitem.getText（）\r\n","android.app.appsearch.SetSchemaRequest.getMigrators()":"android.app.appsearch.setschemarequest.getmigrators（）\r\n","android.app.appsearch.AppSearchSession.getByDocumentId(android.app.appsearch.GetByDocumentIdRequest, java.util.concurrent.Executor, android.app.appsearch.BatchResultCallback)":"android.app.app.appsearch.appsearchsession.getByDocumentId（android.app.appsearch.getbydocumentidrequest，java.util.concurrent.executor，android.app.app.app.app.app.app.app.app.app.app.appsearch.batchresultcallcallback）\r\n","android.app.Activity.dismissDialog(int)":"android.app.Activity.dismissdialog（int）\r\n","Default highlight color for items that are pressed.":"默认的突出显示的颜色是按下的项目。\r\n","boolean[]":"布尔人[]\r\n","The style resource to use for an ImageButton that is an image well.":"用于图像良好的ImageButton的样式资源。\r\n","android.app.Service.onTaskRemoved(android.content.Intent)":"Android.App.Service.OntaskRemaved（android.content.intent）\r\n","Tertiary text color.":"三级文字颜色。\r\n","Defines whether the gesture will automatically fade out after being recognized.":"定义手势是否在被识别后会自动消失。\r\n","android.bluetooth.BluetoothAdapter.isLe2MPhySupported()":"android.bluetooth.bluetoothadapter.isle2mphysupported（）\r\n","#IMPORTANCE_LOW":"#importance_low\r\n","Default text typeface.":"默认文本字体。\r\n","android.app.UiAutomation.clearWindowAnimationFrameStats()":"android.app.uiautomation.clearwindowanimationframestats（）\r\n","android.app.admin.DeviceAdminInfo.USES_POLICY_DISABLE_KEYGUARD_FEATURES":"android.app.admin.deviceadmininfo.uses_policy_disable_keyguard_features\r\n","This flag indicates to the system that the accessibility service wants\n            to access content of all interactive windows.":"此标志向系统指示可访问性服务想要\r\n            访问所有交互式窗口的内容。\r\n","Creates a ProgressDialog with a circular, spinning progress\n bar. ":"创建一个具有圆形，旋转进度的进度模型\r\n 酒吧。\r\n","android.app.TaskStackBuilder.startActivities()":"android.app.taskstackbuilder.startactivities（）\r\n","android.app.FragmentController.saveAllState()":"Android.App.FragmentController.SaveAllState（）\r\n","android.accounts.AccountManager.getAuthTokenByFeatures(java.lang.String, java.lang.String, java.lang.String[], android.app.Activity, android.os.Bundle, android.os.Bundle, android.accounts.AccountManagerCallback, android.os.Handler)":"android.accounts.accountmanager.getauthtokenbyfeatures（java.lang.string，java.lang.string，java.lang.string []，android.app.act.acterivity，android.os.os.bundle，bundle，bundle，android.os.os.os.os.bundle，android.account.Android.accounts。 AccountManagerCallback，android.os.handler）\r\n","The media route action provider displays a ":"媒体路线行动提供商显示\r\n","Parcelable":"可穿衣\r\n","Replacement version of this notification whose content will be shown\n            in an insecure context such as atop a secure keyguard.":"该通知的替换版本将显示其内容\r\n            在不安全的环境中，例如安全的钥匙守卫。\r\n","android.accounts.AccountAuthenticatorResponse":"android.accounts.accountauthenticatoresponse\r\n","Called when a send operation as completed.":"发送操作为完成时调用。\r\n","Specify a label for the shared user UID of this package.":"为此包的共享用户UID指定标签。\r\n","Set to true if the service has asked to run as a foreground process.":"如果该服务已要求运行为前景过程，则设置为TRUE。\r\n","Constructs and returns an ObjectAnimator that animates over values for a multiple int\n            parameters setter.":"构造并返回一个对objectanimator，该对象映射器对多个int的值进行动画\r\n            参数设置器。\r\n","android.app.appsearch.SearchResult":"android.app.appsearch.searchresult\r\n","Dispose(bool)":"处置（布尔）\r\n","#STYLE_NO_FRAME":"#Style_no_frame\r\n","Return the major device class component of this ":"返回此的主要设备类组件\r\n","Defines how columns should stretch to fill the available empty space, if any.":"定义列应如何拉伸以填充可用的空白空间（如果有）。\r\n",": a basic,\n normal dialog.":"：基本，\r\n 普通对话框。\r\n","A version of ":"一个版本\r\n","android.app.backup.BackupManager":"android.app.backup.backupmanager\r\n"," does not contain at least one item.\n        ":" 不包含至少一项。\r\n        \r\n","android.app.backup.BackupAgent.FLAG_CLIENT_SIDE_ENCRYPTION_ENABLED":"android.app.backup.backupent.flag_client_side_encryption_enabled\r\n","android.accessibilityservice.GestureDescription.getStroke(int)":"android.accosconibilityservice.gestreadescription.getstroke（int）\r\n","Allows an application to monitor incoming MMS messages, to record\n         or perform processing on them.":"允许应用程序监视传入的MMS消息，以记录\r\n         或对它们进行处理。\r\n","The platform's desired minimum size for a dialog's width when it\n         is along the minor axis (that is the screen is portrait).":"平台的最小尺寸，用于对话框的宽度\r\n         是沿次要轴（即屏幕是肖像）。\r\n","android.app.admin.DevicePolicyManager.getInstalledCaCerts(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getinstalledcacerts（android.content.componentname）\r\n","android.app.LocalActivityManager.dispatchCreate(android.os.Bundle)":"android.app.localactivitymanager.dispatchcreate（android.os.bundle）\r\n","Allows an application to modify the current configuration, such\n         as locale.":"允许应用程序修改当前配置，例如\r\n         作为地方。\r\n","android.app.SharedElementCallback.onSharedElementsArrived(java.util.List, java.util.List, android.app.OnSharedElementsReadyListener)":"android.app.sharedelementcallback.onsharedelements（java.util.list，java.util.list，android.app.onsharedelementsreadylistener）\r\n","android.app.AppOpsManager.OPSTR_CAMERA":"android.app.appopsmanager.opptr_camera\r\n","android.app.FragmentManager.popBackStack(java.lang.String, int)":"android.app.fragmentmanager.popbackstack（java.lang.string，int）\r\n","Unpublishes a given status from the given conversation.":"未发表给定对话中给定的身份。\r\n","The text appearance for the week day abbreviation of the calendar header.":"日历标题的工作日缩写的文字外观。\r\n","Base class for implementing an Activity that is used to help implement an\n            AbstractAccountAuthenticator.":"用于实施用于帮助实施的活动的基础类\r\n            AbstractAcccountauthenticator。\r\n"," extra field in ":" 额外的字段\r\n","Installs the given certificate as a user CA.":"将给定证书安装为用户CA。\r\n","Get the activity's expandable list view widget.":"获取活动的可扩展列表视图小部件。\r\n","android.security.KeyChain#getCertificateChain":"android.security.keychain＃getCertificatechain\r\n","android.app.FragmentTransaction.setBreadCrumbTitle(java.lang.CharSequence)":"android.app.FragmentTransaction.setbreadcrumbtitle（java.lang.charsequence）\r\n","Returns the estimated size of the session's database in bytes.":"在字节中返回会话数据库的估计大小。\r\n","callback":"打回来\r\n","android.app.UiModeManager.setApplicationNightMode(int)":"android.app.uimodemanager.setapplicationnightmode（int）\r\n","android.app.ActivityOptions.requestUsageTimeReport(android.app.PendingIntent)":"android.app.activityOptions.Requestusagetimereport（android.app.pendingIntent）\r\n","android.app.admin.DeviceAdminReceiver.ACTION_SECURITY_LOGS_AVAILABLE":"android.app.admin.deviceadminreceiver.action_security_logs_available\r\n","Callable by device owner or profile owner of an organization-owned device, to retrieve\n            the current factory reset protection (FRP) policy set previously by\n            ":"设备所有者或组织拥有设备的个人资料所有者可召唤，以检索\r\n            当前的工厂重置保护（FRP）策略先前设定\r\n            \r\n"," method of the activity\n            specified and the ":" 活动方法\r\n            指定和\r\n","android.app.usage.NetworkStatsManager":"android.app.usage.networkstatsmanager\r\n","Returns whether notifications from the calling package are blocked.":"返回是否阻止了调用包中的通知。\r\n","Disable all biometric authentication on keyguard secure screens (e.":"禁用KeyGuard安全屏幕上的所有生物识别验证（e。\r\n","Relative priority for this notification.":"此通知的相对优先级。\r\n"," in the primary user to\n            see notifications from the managed profile.":" 在主要用户中\r\n            请参阅托管配置文件中的通知。\r\n","android.app.PendingIntent":"android.app.pendendintent\r\n","Required to access phone state related information.":"访问电话状态相关的信息所需。\r\n","android.accessibilityservice.AccessibilityServiceInfo.FLAG_REQUEST_2_FINGER_PASSTHROUGH":"Android.AccessibilityService.Accessibilityserviceinfo.flag_request_2_finger_passthrough\r\n","Constructs and returns a PropertyValuesHolder with a given property name and\n            set of <code>int[]</code> values.":"构建并返回具有给定属性名称的财产价值持有人\r\n            集<Code> int [] </code>值。\r\n","Request to put this activity in a mode where the user is locked to a restricted set of\n            applications.":"请求将此活动置于用户锁定到受限集的模式下\r\n            申请。\r\n","android.app.appsearch.SearchSpec.RANKING_STRATEGY_DOCUMENT_SCORE":"android.app.appsearch.searchspec.ranking_strategy_document_score\r\n","android.app.VoiceInteractor.supportsCommands(java.lang.String[])":"android.app.voiceinteractor.supportscommands（java.lang.string []）\r\n","Allows formatting file systems for removable storage.":"允许格式化文件系统用于可移动存储。\r\n","android.app.UiAutomation.ROTATION_UNFREEZE":"android.app.uiautomation.rotation_unfreeze\r\n","Return the estimated size of upload traffic that will be performed by\n            this job work item, in bytes.":"返回将执行的上传流量的估计大小\r\n            此工作工作项目，字节。\r\n","android.app.PendingIntent.cancel()":"android.app.pendingIntent.cancel（）\r\n","The string of characters to output when this key is pressed.":"按下此键时要输出的字符串。\r\n","Holds information about the content an application is viewing, to hand to an\n            assistant at the user's request.":"保留有关应用程序正在查看内容的信息\r\n            根据用户的要求。\r\n","android.bluetooth.BluetoothA2dp.getConnectionState(android.bluetooth.BluetoothDevice)":"android.bluetooth.bluetootha2dp.getConnectionState（android.bluetooth.bluetoothdevice）\r\n","Construct a helper for backing up and restoring the\n            ":"构建一个助手来备份并恢复\r\n            \r\n","When set to true, the animation transformation is applied after the animation is\n             over.":"当设置为true时，动画是在动画之后应用的动画转换\r\n             超过。\r\n","#onSharedElementEnd(java.util.List, java.util.List, java.util.List)":"#onsharedelementend（java.util.list，java.util.list，java.util.list）\r\n","Control whether a system notification is posted by the download manager while this\n download is running.":"控制下载经理是否发布系统通知\r\n 下载正在运行。\r\n","java.lang.System#currentTimeMillis":"Java.lang.System＃CurrentTimeMillis\r\n","Makes the end edge of this view match the end edge of the given anchor view ID.":"使此视图的端边缘与给定锚视图ID的端边缘匹配。\r\n","The name of the activity this alias should launch.":"该别名应启动的活动名称。\r\n","android.app.Activity.isTaskRoot()":"android.app.activity.istaskroot（）\r\n"," after AppWidget state related to that provider has\n            been restored from backup.":" 在与该提供商有关的AppWidget状态之后\r\n            已从备份恢复。\r\n","android.app.appsearch.StorageInfo.getSizeBytes()":"android.app.app.appsearch.storageinfo.getsizebytes（）\r\n",":\n            always run in night mode.":"：\r\n            始终以夜间模式运行。\r\n","delegatedPackage":"委托书\r\n","UiAutomation#FLAG_DONT_SUPPRESS_ACCESSIBILITY_SERVICES":"uiautomation＃flag_dont_suppress_accessibility_services\r\n","\n            Contains the full authentication challenge (full value of the WWW-Authenticate HTTP header). This information can be used by the custom\n            authentication module (":"\r\n            包含完整的身份验证挑战（www-authenticate HTTP标头的全价值）。该信息可以由自定义使用\r\n            身份验证模块（\r\n","Returns true if this activity's <em>main</em> window currently has window focus.":"如果此活动的<em> main </em>窗口当前具有窗口焦点，则返回true。\r\n","Called when the fragment is visible to the user and actively running.":"当用户可见片段并积极运行时调用。\r\n","When triggering on content URI changes, this is the maximum delay we will\n            use before scheduling the job.":"当触发内容URI更改时，这是我们将最大的延迟\r\n            安排工作之前使用。\r\n","Notifies the specified collection view in all the specified AppWidget instances\n            to invalidate their data.":"在所有指定的AppWidget实例中通知指定的集合视图\r\n            使其数据无效。\r\n","Whether the spinners are shown.":"是否显示旋转器。\r\n","IJavaPeerable":"ijavapaperable\r\n",", according to the ranking strategy\n            set in ":"，根据排名策略\r\n            设置\r\n","android.app.admin.DevicePolicyManager.LOCK_TASK_FEATURE_KEYGUARD":"android.app.admin.devicepolicymanager.lock_task_feature_keyguard\r\n","\n            A more performant equivalent of `Assembly.GetName().Name`\n            ":"\r\n            更具性能等效于`ressembly.getName（）。名称`\r\n            \r\n","AudioAttributes audio attributes":"AudioAttribus Audio属性\r\n","#getAllowFreeFormInput":"#getallowfreeforminput\r\n","Perform an incremental update or command on the widget specified by appWidgetId.":"在AppWidgetID指定的小部件上执行增量更新或命令。\r\n","Returns the name of this schema type, e.":"返回此模式类型的名称，e。\r\n","android.app.AppComponentFactory.instantiateClassLoader(java.lang.ClassLoader, android.content.pm.ApplicationInfo)":"android.app.appcomponentfactory.instantiateclassloader（java.lang.classloader，android.content.pm.applicationinfo）\r\n","Performs a global action.":"执行全球动作。\r\n","\n              A class which uses the native Xamarin.Android runtime to accurately measure (to the nanosecond level) time\n              spent executing a portion of code bracketed with calls to ":"\r\n              使用本机Xamarin.android运行时的类，以准确测量（到纳秒级）时间\r\n              用来执行一部分代码，并带有调用的电话\r\n","FullBackupDataOutput#getTransportFlags()":"FullbackupDataOutput＃getTransportflags（）\r\n","Start a new activity and wait for it to begin running before returning.":"开始新的活动，然后等待它在返回之前开始运行。\r\n","Return short message describing the issue for end user audiences, which\n            may be shown in a notification or dialog.":"返回简短消息，描述最终用户受众的问题，\r\n            可以在通知或对话框中显示。\r\n","Access to coarse location information.":"访问粗糙的位置信息。\r\n","android.appwidget.AppWidgetManager.partiallyUpdateAppWidget(int, android.widget.RemoteViews)":"android.appwidget.appwidgetManager.partalyupdateappwidget（int，android.widget.remoteviews）\r\n","android.bluetooth.BluetoothAdapter.ACTION_LOCAL_NAME_CHANGED":"android.bluetooth.bluetoothadapter.action_local_name_changed\r\n","this":"这个\r\n","Called to ask the fragment to save its current dynamic state, so it\n            can later be reconstructed in a new instance of its process is\n            restarted.":"打电话要求片段保存其当前的动态状态，因此\r\n            以后可以在其过程的新实例中重建\r\n            重新启动。\r\n","Sets up the given animation to play when the animation supplied in the\n ":"设置给定动画以播放的动画\r\n \r\n","Add a Runnable to this transaction that will be run after this transaction has\n            been committed.":"添加可运行的交易可运行的，该交易将在此交易具有后运行\r\n            被犯下。\r\n","TransitionManager":"过渡管理器\r\n","Flag indicating that an Instrumentation class wants to take care of starting/stopping profiling itself, rather than relying on the default behavior of profiling the complete time it is running.":"标志表明仪器类希望要照顾启动/停止分析本身，而不是依靠默认行为的默认行为。\r\n","This evaluator can be used to perform type interpolation between integer\n            values that represent ARGB colors.":"该评估器可用于执行整数之间的插值\r\n            代表argb颜色的值。\r\n","android.app.admin.DevicePolicyManager.setRestrictionsProvider(android.content.ComponentName, android.content.ComponentName)":"android.app.admin.devicepolicymanager.setRestrictionsProvider（android.content.componentname，android.content.componentname）\r\n","Dump an AnrInfo instance to a Printer.":"将Anrinfo实例倒入打印机。\r\n","\n      Member access and invocation support.\n    ":"\r\n      会员访问和调用支持。\r\n    \r\n","if the id was not previously shown via\n   ":"如果以前没有通过\r\n   \r\n","android.app.ActivityManager.isBackgroundRestricted()":"android.app.activityManager.isbackgroundRestricter（）\r\n","android.app.admin.DevicePolicyManager.getLockTaskFeatures(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getlocktaskfeatures（android.content.componentname）\r\n","Returns whether Common Criteria mode is currently enabled.":"返回当前是否启用通用标准模式。\r\n","Run the restore process on each of the configured handlers.":"在每个配置的处理程序上运行还原过程。\r\n","Allows an application to read the user's calendar data.":"允许应用程序读取用户的日历数据。\r\n","android.app.usage.NetworkStatsManager.registerUsageCallback(int, java.lang.String, long, android.app.usage.UsageCallback)":"android.app.usage.networkstatsmanager.registerusagecallback（int，java.lang.string，long，android.app.usage.usage.usagecallback）\r\n","#saveInstanceState":"#saveinstancestate\r\n","Called when the user has asked to disable the administrator, as a result of\n            receiving ":"当用户要求禁用管理员时，请致电\r\n            接收\r\n","StorageManager#UUID_DEFAULT":"StorageManager＃uuid_default\r\n","android.app.Fragment.onDestroyOptionsMenu()":"android.app.fragment.ondestroyoptionsmenu（）\r\n","android.app.job.JobParameters.STOP_REASON_DEVICE_STATE":"android.app.job.jobparameters.stop_reason_device_state\r\n","android.app.admin.DevicePolicyManager.setRequiredStrongAuthTimeout(android.content.ComponentName, long)":"android.app.admin.devicepolicymanager.setRequiredstrongauthtimeout（android.content.componentname，long）\r\n","The attribute that holds a Base64-encoded public key.":"具有基本64编码的公钥的属性。\r\n","android.app.slice.Slice.HINT_ERROR":"android.app.slice.slice.hint_error\r\n","Return an title representing the action.":"返回代表动作的标题。\r\n","Intent#ACTION_SET_WALLPAPER":"意图＃action_set_wallpaper\r\n","If set along with Intent.":"如果有意图设置。\r\n","A boolean extra indicating whether device encryption can be skipped as part of device owner\n            or managed profile provisioning.":"布尔值额外指示是否可以跳过设备加密作为设备所有者的一部分\r\n            或托管个人资料供应。\r\n","android.app.DownloadManager.COLUMN_DESCRIPTION":"android.app.downloadmanager.column_description\r\n","Lets the loaders know the host is ready to receive notifications.":"让装载机知道主机准备接收通知。\r\n","android.app.NotificationManager.ACTION_AUTOMATIC_ZEN_RULE":"android.app.notificationmanager.action_automatic_zen_rule\r\n","Set the animated values for this object to this set of Keyframes.":"将此对象的动画值设置为这组密钥帧。\r\n","android.app.admin.SecurityLog.TAG_KEYGUARD_DISMISS_AUTH_ATTEMPT":"android.app.admin.securitylog.tag_keyguard_dismiss_auth_attempt\r\n","Called by a profile or device owner to check if the current reset password token is active.":"由配置文件或设备所有者调用以检查当前重置密码令牌是否活动。\r\n","android.accounts.AccountManager.KEY_ACCOUNT_SESSION_BUNDLE":"android.accounts.accountmanager.key_account_session_bundle\r\n","Subtype to tag an item as representing the max int value for a ":"亚型标记项目代表一个最大int值\r\n"," was thrown because the operation would distract\n            the driver of the vehicle.":" 被扔了，因为手术会分散注意力\r\n            车辆的驾驶员。\r\n","Called by a device or profile owner to update ":"由设备或配置文件所有者拨打更新\r\n","Called by device owner or a profile owner of an organization-owned managed profile to\n            control the security logging feature.":"由设备所有者或组织拥有的托管资料的个人资料所有者拨打\r\n            控制安全记录功能。\r\n","android.app.ActionBar.addTab(android.app.Tab)":"android.app.actionbar.addtab（android.app.tab）\r\n","android.app.admin.SecurityLog.TAG_ADB_SHELL_CMD":"android.app.admin.securitylog.tag_adb_shell_cmd\r\n"," members and taken as a parameter of the ":" 成员并将其作为参数\r\n","Required to be able to access the camera device.":"需要能够访问相机设备。\r\n","android.app.Activity.onProvideAssistContent(android.app.assist.AssistContent)":"android.app.activity.onprovideassistContent（android.app.assist.assistContent）\r\n","android.app.Notification.CATEGORY_REMINDER":"android.app.notification.category_reminder\r\n","Re-enable a system app that was disabled by default when the user was initialized.":"重新启用一个系统应用程序，该应用默认情况下是在用户初始化时被禁用的。\r\n"," represents the result of an asynchronous\n            ":" 代表异步的结果\r\n            \r\n","android.accessibilityservice.AccessibilityButtonController.isAccessibilityButtonAvailable()":"android.accosconibilityservice.AccosconibilitybuttonController.isaccosconibilitybuttonavailable（）\r\n","android.app.DownloadManager.STATUS_RUNNING":"android.app.downloadmanager.status_running\r\n","SharedPreferences":"共享流程\r\n","android.accessibilityservice.AccessibilityService.GESTURE_4_FINGER_SWIPE_UP":"Android.AccessibilityService.Accessibilityservice.gesture_4_finger_swipe_up\r\n","android.accessibilityservice.AccessibilityServiceInfo.getCapabilities()":"Android.AccessibilityService.Accessibilityserviceinfo.getCapabilities（）\r\n","Change the format of the small text showing current and maximum units\n            of progress.":"更改显示电流和最大单元的小文本的格式\r\n            进步。\r\n","android.app.Notification.Notification()":"android.app.notification.notification（）\r\n","android.bluetooth.BluetoothGatt.GATT_INSUFFICIENT_ENCRYPTION":"android.bluetooth.bluetoothgatt.gatt_insuffication_encryption\r\n","android.app.admin.DeviceAdminReceiver.onPasswordFailed(android.content.Context, android.content.Intent)":"android.app.admin.deviceadminreceiver.onpasswordfailed（android.content.context，android.content.intent）\r\n","Specifies the basic width of the view.":"指定视图的基本宽度。\r\n","#setShowsDialog(boolean)":"#SetShowsDialog（布尔值）\r\n","Get an intent to prompt the user to confirm credentials (pin, pattern, password or biometrics\n            if enrolled) for the current user of the device.":"有意图提示用户确认凭据（PIN，图案，密码或生物识别技术）\r\n            如果注册）设备的当前用户。\r\n","#noteOpNoThrow":"#noteopnothrow\r\n","Returns the Activity that owns this Dialog. -or- Sets the Activity that owns this dialog.":"返回拥有此对话框的活动。 - 或设置拥有此对话框的活动。\r\n","Constructs a PointFEvaluator that modifies and returns <code>reuse</code>\n            in ":"构建一个修改和返回<code>重复使用</code>的PointFevaluator\r\n            在\r\n","android.app.usage.ExternalStorageStats.getImageBytes()":"android.app.usage.externalstoragestats.getImageBytes（）\r\n","Add a timestamp pertaining to the notification (usually the time the event occurred).":"添加与通知有关的时间戳（通常是事件发生的时间）。\r\n","Allows applications to write the sync settings \n":"允许应用程序编写同步设置\r\n\r\n","Add a large icon to the notification (and the ticker on some devices).":"在通知中添加一个大图标（以及某些设备上的股票）。\r\n","Represents a abstract action that can be perform on this app.":"表示可以在此应用程序上执行的抽象操作。\r\n","Lowest ":"最低\r\n","#onCreate":"#oncreate\r\n","android.app.FragmentController.restoreAllState(android.os.Parcelable, android.app.FragmentManagerNonConfig)":"android.app.FragmentController.RestoreAllstate（android.os.os.parcelable，android.app.fragmentManagernonConfig）\r\n","android.app.Activity.isFinishing()":"android.app.Activity.Isfinishing（）\r\n","Not supported - please use\n ":"不支持 - 请使用\r\n \r\n"," and\n            assign a dynamic protocol/service multiplexer (PSM) value.":" 和\r\n            分配动态协议/服务多路复用器（PSM）值。\r\n","Extract the next entity header from the restore stream.":"从还原流中提取下一个实体标头。\r\n","android.app.ActivityOptions.makeSceneTransitionAnimation(android.app.Activity, android.view.View, java.lang.String)":"android.app.activityOptions.makesCenetransitionAnimation（android.app.Activity，android.view.view，java.lang.string）\r\n","android.app.ActionBar.getHideOffset()":"android.app.actionbar.gethideoffset（）\r\n","The localized summary of the accessibility service.":"可访问性服务的本地摘要。\r\n","This is called whenever the system captures an unhandled exception that\n            was thrown by the application.":"每当系统捕获一个未经治疗的例外时，这就是称为\r\n            被应用程序抛出。\r\n"," that interacts with\n            ":" 与之互动\r\n            \r\n","Start the task stack constructed by this builder.":"启动该构建器构建的任务堆栈。\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DEVICE_ADMIN_SIGNATURE_CHECKSUM":"android.app.admin.devicepolicymanager.extra_provisioning_device_admin_signature_checksum\r\n","android.app.admin.DevicePolicyManager.isUniqueDeviceAttestationSupported()":"android.app.admin.devicepolicymanager.isuniquedeviceattestationsupported（）\r\n","android.app.admin.SecurityLog.TAG_MAX_PASSWORD_ATTEMPTS_SET":"android.app.admin.securitylog.tag_max_password_atperword_attempts_set\r\n","#onStart":"#onstart\r\n","android.app.PendingIntent.send()":"android.app.pendingIntent.send（）\r\n"," that must be declared as handled by the service.":" 这必须按照服务处理。\r\n","android.app.admin.DnsEvent.getInetAddresses()":"android.app.admin.dnsevent.getInetAddresses（）\r\n","If provided, this will be inserted in the suggestions query Uri, after the authority\n            you have provide but before the standard suggestions path.":"如果提供，将在当局之后将其插入建议uri建议。\r\n            您已经提供，但在标准建议路径之前。\r\n","Name of the method in this View's context to invoke when the view is\n             clicked.":"该视图的上下文中的方法的名称要在视图为时调用\r\n             点击。\r\n"," will specify the cause given by the system.":" 将指定系统给出的原因。\r\n","autoCancel controls whether an ObjectAnimator will be canceled automatically\n            when any other ObjectAnimator with the same target and properties is started.":"AutoCancel控制是否会自动取消对象启示仪\r\n            当启动具有相同目标和属性的任何其他对象映射器时。\r\n","android.app.Presentation.getResources()":"android.app.presentation.getResources（）\r\n","Returns the id of this channel.":"返回此频道的ID。\r\n","Asks the user to enter a new password for the account but not updating the\n            saved credentials for the account until ":"要求用户输入该帐户的新密码，但不要更新\r\n            保存了该帐户的凭据直到\r\n","android.app.ProgressDialog.setProgress(int)":"android.app.progressdialog.setprogress（int）\r\n","Default Star style.":"默认的星形样式。\r\n","Constructs and returns a PropertyValuesHolder with a given property and\n            set of int values.":"用给定财产构建和返回财产价值持有人\r\n            集合值集。\r\n","Perform a system dump of various state associated with the given application\n            package name.":"执行与给定应用程序相关的各种状态的系统转储\r\n            包裹名字。\r\n","\n[JniTypeSignature (\"my/Example\")]\npartial class ExampleBinding : IJavaPeerable {\n\n\tpublic void DisposeUnlessReferenced ()\n\t{\n        JniEnvironment.Runtime.ValueManager.DisposeUnlessReferenced (this);\n\t}\n}\n        ":"\r\n[jnitypesignature（“我/示例”）]\r\n部分类示例示例：\r\n\r\n公共无效disposeunlessed（）\r\n{\r\n        jnienvironment.runtime.valuemanager.disposeunlessredected（this）;\r\n}\r\n}\r\n        \r\n","RestrictionsReceiver":"限制者\r\n","android.app.VoiceInteractor.isDestroyed()":"android.app.voiceinteractor.isdestroyed（）\r\n"," that triggered the callback, if it exists.":" 如果存在，那就触发了回调。\r\n","Sets how long a transition animation should run (in milliseconds)\n             when layout has changed.":"设置过渡动画应运行多长时间（以毫秒为单位）\r\n             当布局更改时。\r\n","android.accessibilityservice.AccessibilityService.onKeyEvent(android.view.KeyEvent)":"android.accosconibilityservice.Accesseribilityservice.onkeyevent（android.view.keyevent）\r\n","Called when a user or profile is stopped.":"停止用户或配置文件时调用。\r\n","android.content.Context\n            Context":"android.content.context\r\n            语境\r\n","Connection parameter update - Request low power, reduced data rate connection parameters.":"连接参数更新 - 请求低功率，减少数据速率连接参数。\r\n","The row boundary delimiting the top of the group of cells\n        occupied by this view.":"划定单元组顶部的行边界\r\n        被这种观点所占据。\r\n","android.app.admin.DeviceAdminReceiver.onUserStarted(android.content.Context, android.content.Intent, android.os.UserHandle)":"android.app.admin.deviceadminreceiver.onuserstarted（android.content.context，android.content.intent，android.os.userhandle）\r\n","Indicates whether the application supports extra large screen form-factors.":"指示该应用程序是否支持大型屏幕形式因子。\r\n","android.app.AlertDialog.getButton(int)":"android.app.alertdialog.getButton（int）\r\n","Removes a pause listener from the set listening to this animation.":"从集合中删除暂停侦听器听取此动画。\r\n","A really bright Holo shade of blue \n":"一个非常明亮的蓝色整体阴影\r\n\r\n","Lets all Fragments managed by the controller's FragmentManager know the multi-window mode of\n            the activity changed.":"让控制器的FragmentManager管理的所有片段知道\r\n            活动改变了。\r\n","Fraction of the animation duration used to delay the beginning of\n         the animation of each child.":"动画持续时间的一部分用于延迟\r\n         每个孩子的动画。\r\n","android.app.LocalActivityManager.saveInstanceState()":"android.app.localactivitymanager.saveinstancestate（）\r\n","android.app.NotificationChannelGroup.isBlocked()":"android.app.notificationChannelGroup.isblocked（）\r\n","Provides access to device usage history and statistics.":"提供对设备使用历史记录和统计信息的访问。\r\n","android.app.Notification.sound":"android.app.notification.sound\r\n","android.app.ProgressDialog.getSecondaryProgress()":"android.app.progressdialog.getSecondaryProgress（）\r\n","Called when a fragment is first attached to its context.":"首先将片段附在其上下文上时称为。\r\n","android.animation.FloatArrayEvaluator.FloatArrayEvaluator(float[])":"android.animation.floatarrayevaluator.floatarrayevaluator（float []）\r\n","The requested battery-not-low constraint is no longer satisfied.":"不再满足请求的电池非低约束。\r\n","Allows an application to clear user data \n":"允许应用程序清除用户数据\r\n\r\n","android.app.Dialog.onCreateOptionsMenu(android.view.Menu)":"android.app.dialog.oncreateoptionsmenu（android.view.menu）\r\n"," for this wallpaper.":" 对于此墙纸。\r\n","Override to build your own custom Dialog container.":"覆盖以构建您自己的自定义对话框容器。\r\n","Set the \"ticker\" text which is displayed in the status bar when the notification first\n arrives.":"首先设置在通知时显示在状态栏中的“股票”文本\r\n 到达。\r\n"," which internally uses ":" 内部使用的\r\n","Sets the TimeInterpolator for all current ":"为所有当前设置TimeInterPolator\r\n"," that has a nice minimum\n    width for a regular dialog.":" 最低限度\r\n    定期对话框的宽度。\r\n","Must be required by an ":"必须由\r\n","Show the ActionBar if it is not currently showing.":"显示动作栏如果目前不显示的话。\r\n",", if an external service has the\n            ":"，如果外部服务具有\r\n            \r\n","android.app.appsearch.AppSearchResult.RESULT_SECURITY_ERROR":"android.app.appsearch.appsearchresult.result_security_error\r\n"," uses\n            when dispatching backup and restore operations to the installed helpers.":" 用途\r\n            分发备份并将操作还原到安装的助手时。\r\n","The URI to the corresponding entry in MediaProvider for this downloaded entry.":"此下载的条目中的MediaProvider中的相应条目的URI。\r\n","Called by a profile owner of a managed profile to retrieve the name of the organization under\n            management.":"由托管个人资料的个人资料所有者调用以检索组织的名称\r\n            管理。\r\n"," to notify Java.Interop that a\n        JNI Local Reference has been created externally, so that the\n        JNI Local Reference accounting doesn't generate future assertions.\n      ":" 通知java.interop\r\n        JNI本地参考已在外部创建，因此\r\n        JNI本地参考会计不会产生未来的断言。\r\n      \r\n","android.app.admin.DevicePolicyManager.isBackupServiceEnabled(android.content.ComponentName)":"android.app.admin.devicepolicymanager.isbackupserviceenabled（android.content.componentname）\r\n","The animation used when a window is being added.":"添加窗口时使用的动画。\r\n","android.app.SearchManager.INTENT_ACTION_WEB_SEARCH_SETTINGS":"android.app.searchmanager.intent_action_web_search_settings\r\n","Called by a profile or device owner to provision a token which can later be used to reset the\n            device lockscreen password (if called by device owner), or managed profile challenge (if\n            called by profile owner), via ":"由配置文件或设备所有者称为“配置”令牌，以后可以使用该令牌\r\n            设备锁定密码（如果由设备所有者调用）或托管个人资料挑战（如果\r\n            由个人资料所有者称为），通过\r\n","Action to toggle docking the current app's window":"切换停靠当前应用程序的窗口的操作\r\n","The package names an ":"包装名称为\r\n","android.app.admin.DnsEvent.getHostname()":"android.app.admin.dnsevent.gethostname（）\r\n","android.app.Fragment.setHasOptionsMenu(boolean)":"Android.App.Fragment.Sethasoptionsmenu（布尔）\r\n","android.app.Notification.PRIORITY_LOW":"android.app.notification.priority_low\r\n","android.app.Activity.onOptionsItemSelected(android.view.MenuItem)":"android.app.activity.onoptionsitemselected（android.view.menuitem）\r\n","The width of the big icons in notifications.":"通知中大图标的宽度。\r\n","android.app.NotificationManager.META_DATA_AUTOMATIC_RULE_TYPE":"android.app.notificationmanager.meta_data_automatic_rule_type\r\n","Override to generate the desired referrer for the content currently being shown\n            by the app.":"覆盖以生成当前显示的内容的所需推荐子\r\n            通过应用程序。\r\n","android.accessibilityservice.AccessibilityService.getFingerprintGestureController()":"Android.AccessibilityService.Accesseribilityservice.getFingerPrintEntureController（）\r\n"," is\n            non-null and not empty.":" 是\r\n            非效果而不是空。\r\n","android.app.FragmentTransaction.runOnCommit(java.lang.Runnable)":"Android.App.FragmentTransaction.RunonCommit（Java.lang.runnable）\r\n","android.app.TabActivity":"Android.App.Tabactivity\r\n","Gets the length of time to delay between starting each animation during one of the\n            change animations.":"在其中一个过程中启动每个动画之间的时间长度延迟\r\n            更改动画。\r\n","Convenience for implementing an activity that will be implemented\n            purely in native code.":"实施将要实施的活动的便利性\r\n            纯粹是本机代码。\r\n","android.app.slice.Slice.HINT_SUMMARY":"android.app.slice.slice.hint_summary\r\n","android.app.job.JobInfo.getTriggerContentUris()":"android.app.job.jobinfo.getTriggerContenturis（）\r\n"," that this notification supersedes, if any.":" 该通知取代（如果有）。\r\n"," instance which will\n        be managing the ":" 实例将要\r\n        管理\r\n","Allows an application to write (but not read) the user's\n         social stream data.":"允许应用程序写入（但不阅读）用户的\r\n         社交流数据。\r\n","Positions the bottom edge of this view above the given anchor view ID.":"位于给定的锚视图ID上方的此视图的底部边缘。\r\n","android.bluetooth.BluetoothGatt.GATT_FAILURE":"android.bluetooth.bluetoothgatt.gatt_failure\r\n","android.app.appsearch.GenericDocument.getPropertyNames()":"android.app.app.appsearch.genericdocument.getPropertynames（）\r\n","android.app.admin.DevicePolicyManager.canUsbDataSignalingBeDisabled()":"android.app.admin.devicepolicymanager.canusbdatasignalingbedisabled（）\r\n","Retrieve a PendingIntent that will start a service, like calling\n            ":"检索将启动服务的悬而未决的人，例如致电\r\n            \r\n","The actual process name it was running with.":"它正在运行的实际过程名称。\r\n","android.app.UiModeManager.setNightMode(int)":"android.app.uimodemanager.setnightmode（int）\r\n","android.app.admin.DevicePolicyManager.clearApplicationUserData(android.content.ComponentName, java.lang.String, java.util.concurrent.Executor, android.app.admin.OnClearApplicationUserDataListener)":"android.app.admin.devicepolicymanager.clearapplicationuserdata（android.content.componentname，java.lang.string，java.util.concurrent.executor，android.app.app.App.App.App.App.Admin.App.Admin.onclearapplicationUserdatalistAtalistAtalistAlistenerer））\r\n","Executes a shell command.":"执行一个shell命令。\r\n","Defines the relationship between the ViewGroup and its descendants\n             when looking for a View to take focus.":"定义ViewGroup及其后代之间的关系\r\n             当寻找要重点的观点时。\r\n","Duration in microseconds over which the process used the above\n percentage of battery.":"该过程使用上述过程中的微秒持续时间\r\n 电池百分比。\r\n","#DEVICE_TYPE_CLASSIC":"#device_type_classic\r\n","Action sent to a device administrator to notify that the device is entering\n            lock task mode.":"发送给设备管理员的操作通知设备正在输入\r\n            锁任务模式。\r\n","#getApplicationRestrictions":"#getApplicationRestrictions\r\n","android.app.usage.ExternalStorageStats.getTotalBytes()":"android.app.usage.externalstoragestats.getTotalBytes（）\r\n","android.app.appsearch.GlobalSearchSession.search(java.lang.String, android.app.appsearch.SearchSpec)":"android.app.appsearch.globalsearchsession.search（java.lang.string，android.app.app.appsearch.searchspec）\r\n","Return primary action that will initiate the authorization.":"返回将启动授权的主要行动。\r\n","android.animation.LayoutTransition.getStagger(int)":"android.animation.layouttransition.getstagger（int）\r\n",", stop the activity's management of that\n            cursor.":"，停止活动的管理\r\n            光标。\r\n","Clears the window animation rendering statistics.":"清除窗口动画渲染统计信息。\r\n","#onPause":"#onpause\r\n","android.content.DialogInterface.BUTTON_POSITIVE":"android.content.dialoginterface.button_positive\r\n","AccountManager":"客户经理\r\n","Defines the number of characters that the user must type before\n         completion suggestions are displayed in a drop down menu.":"定义用户必须键入的字符数\r\n         完成建议显示在下拉菜单中。\r\n","Deletes the automatic zen rule with the given id.":"使用给定ID删除自动ZEN规则。\r\n","#getDrawable()":"#getDrawable（）\r\n","android.app.Instrumentation.callActivityOnCreate(android.app.Activity, android.os.Bundle)":"android.app.instrumentation.callactivityoncreate（android.app.activity，android.os.bundle）\r\n","Sets float values that will be animated between.":"设置将在两者之间进行动画的浮点值。\r\n","android.app.Service.stopSelf()":"android.app.service.stopself（）\r\n","android.app.admin.DeviceAdminInfo.CREATOR":"android.app.admin.deviceadmininfo.Creator\r\n","android.app.AlarmManager.INTERVAL_DAY":"android.app.alarmmanager.interval_day\r\n","android.accounts.AuthenticatorDescription.customTokens":"android.accounts.authenticatordescription.customtokens\r\n","Set visibility value of given account to certain package.":"将给定帐户的可视性值设置为某些软件包。\r\n"," instance with the\n          specified actions.\n        ":" 带有的实例\r\n          指定的动作。\r\n        \r\n","#stopLocalVoiceInteraction()":"#StoplocalVoiceInteraction（）\r\n","Bundle key used for the auth token value in results\n            from ":"捆绑密钥用于结果中的身份令牌值\r\n            从\r\n","android.app.job.JobInfo.getExtras()":"android.app.job.jobinfo.getExtras（）\r\n","android.app.FragmentController.dispatchConfigurationChanged(android.content.res.Configuration)":"android.app.FragmentController.disPatchConfigurationChanged（android.content.res.configuration）\r\n","android.app.blob.BlobHandle.getLabel()":"android.app.blob.blobhandle.getLabel（）\r\n","Delegation for enabling system apps.":"启用系统应用程序的委托。\r\n","Report that this fragment would like to participate in populating\n            the options menu by receiving a call to ":"报告说这个片段想参加人口\r\n            通过接收到的选项菜单\r\n","Return the LoaderManager for this fragment, creating it if needed.":"返回此片段的LoaderManager，如果需要，可以创建它。\r\n","Create a listening, secure RFCOMM Bluetooth socket with Service Record.":"使用服务记录创建一个聆听，安全的RFCOMM蓝牙插座。\r\n","The zero-based index of the columns to stretch.":"列的零基索引拉伸。\r\n","This is the same as ":"这与\r\n","When set to false, the ListView will not draw the divider before each footer view.":"设置为false时，ListView不会在每个页脚视图之前绘制分隔线。\r\n","Interface for interacting with ":"与之交互的接口\r\n","android.app.FragmentContainer":"Android.App.FragmentContainer\r\n","android.app.Notification.EXTRA_TITLE_BIG":"android.app.notification.extra_title_big\r\n","Return the XML tag name for the given policy identifier.":"返回给定策略标识符的XML标签名称。\r\n","A boolean extra indicating if the user consent steps from the provisioning flow should be\n            skipped.":"布尔值额外指示用户同意是否应从供应流程中\r\n            跳过。\r\n","Create ":"创造\r\n","0.0":"0.0\r\n","Color used to draw the user's strokes until we are sure it's a gesture.":"颜色用于绘制用户的笔触，直到我们确定这是一种手势。\r\n","android.app.admin.DevicePolicyManager.setAccountManagementDisabled(android.content.ComponentName, java.lang.String, boolean)":"android.app.admin.devicepolicymanager.setaccountmanagementdisabled（android.content.componentname，java.lang.string，boolean）\r\n",",\n            for the current user. -or- Sets a minimum password complexity requirement for the user's screen lock.":"，，，，\r\n            对于当前用户。 - 或 - 设置用户屏幕锁定的最小密码复杂性要求。\r\n","android.R.attr#windowIsFloating":"android.r.attr＃windowsisfloing\r\n","Asks the user to authenticate with an account of a specified type.":"要求用户使用指定类型的帐户进行身份验证。\r\n","Method which the exception was thrown from.":"例外的方法。\r\n","android.accessibilityservice.AccessibilityServiceInfo.loadDescription(android.content.pm.PackageManager)":"android.accosconibilityservice.Accessibilityserviceinfo.loaddescription（android.content.pm.packagemanager）\r\n","Set the small icon resource, which will be used to represent the notification in the\n status bar.":"设置小图标资源，该资源将用于表示该通知\r\n 状态栏。\r\n","android.app.AppOpsManager.OPSTR_MONITOR_HIGH_POWER_LOCATION":"android.app.appopsmanager.opptr_monitor_high_power_location\r\n","Default ExpandableListView style.":"默认扩展AbtivablElistView样式。\r\n","Gets the AppWidget providers for the given user profile.":"获取给定用户配置文件的AppWidget提供商。\r\n","android.app.admin.DevicePolicyManager.EXTRA_DELEGATION_SCOPES":"android.app.admin.devicepolicymanager.extra_delegation_scopes\r\n","#getNextAlarmClock()":"#getNextalarmClock（）\r\n","Allows an app to access approximate location derived from network location\n         sources such as cell towers and Wi-Fi.":"允许应用程序访问从网络位置得出的大约位置\r\n         诸如细胞塔和Wi-Fi之类的来源。\r\n"," to set the value of ":" 设置价值\r\n","android.app.admin.FreezePeriod":"android.app.admin.freezeperiod\r\n","#PASSWORD_QUALITY_NUMERIC_COMPLEX":"#password_quality_numeric_complex\r\n","android.app.slice.SliceProvider.onSliceUnpinned(android.net.Uri)":"android.app.slice.sliceprovider.onsliceunpinned（android.net.uri）\r\n","Remove all tabs from the action bar and deselect the current tab.":"从操作栏中删除所有选项卡，并取消选择当前选项卡。\r\n","Display the dialog, adding the fragment using an existing transaction\n            and then committing the transaction.":"显示对话框，使用现有交易添加片段\r\n            然后进行交易。\r\n","Creates multiple notification channels that different notifications can be posted to.":"创建多个通知渠道，可以将不同的通知发布到。\r\n","android.view.WindowManager.InvalidDisplayException":"android.view.windowmanager.invaliddisplayException\r\n","Fragment#onCreate(Bundle)":"片段＃oncreate（捆绑包）\r\n","Application process exit normally by itself, for example,\n            via ":"申请流程正常自行退出\r\n            通过\r\n","AccountManager#KEY_CALLER_UID":"AccountManager＃key_caller_uid\r\n","Text for error alert when a video cannot be played. it can be used by any app.":"当无法播放视频时，文本以获取错误警报。任何应用都可以使用它。\r\n","#onSaveInstanceState(Bundle, PersistableBundle)":"#onsaveinstancestate（捆绑，持久式捆绑）\r\n","Resource identifier to assign to this piece of named meta-data.":"资源标识符分配给这件命名的元数据。\r\n","android.app.ListFragment.getSelectedItemPosition()":"android.app.listFragment.GetSelectedItemPosition（）\r\n","android.app.admin.DevicePolicyManager.hasCaCertInstalled(android.content.ComponentName, byte[])":"android.app.admin.devicepolicymanager.hascacertinstalled（android.content.componentname，byte []）\r\n","android.app.admin.DevicePolicyManager.getDeviceOwnerLockScreenInfo()":"android.app.admin.devicepolicymanager.getDeviceownerlockscreeninfo（）\r\n","Creates a new successful ":"创造一个新的成功\r\n","#setShortSupportMessage(ComponentName, CharSequence)":"#SetShortsupportMessage（componentName，char sequence）\r\n","android.app.appsearch.GenericDocument.getScore()":"android.app.appsearch.genericdocument.getScore（）\r\n","A string containing the name of the package entering lock task mode.":"包含输入锁定任务模式的软件包名称的字符串。\r\n","#tickerText":"#tickertext\r\n","Executes a reliable write transaction for a given remote device.":"为给定的远程设备执行可靠的写入事务。\r\n"," with the appropriate theme for dialogs created by this Builder.":" 具有适当的对话主题，由该建筑商创建。\r\n","ProxyInfo":"Proxyinfo\r\n","android.app.admin.DevicePolicyManager.ACTION_APPLICATION_DELEGATION_SCOPES_CHANGED":"android.app.admin.devicepolicymanager.action_application_delegation_scopes_changed\r\n","Boolean that controls whether a view should have haptic feedback\n             enabled for events such as long presses.":"控制视图是否应该具有触觉反馈的布尔值\r\n             启用了诸如长压力之类的活动。\r\n","Check whether this instrumentation was started with profiling enabled.":"检查该仪器是否启动了启用分析。\r\n","#SECURITY_PATCH_STATE_FALSE":"#security_patch_state_false\r\n","android.app.TaskInfo.taskDescription":"Android.App.TaskInfo.TaskDescription\r\n","Create a FloatArrayEvaluator that does not reuse the animated value.":"创建一个不重用动画值的FloatarrayEvaluator。\r\n","Default dark theme for panel windows (on API level 10 and lower).":"面板窗口的默认深色主题（在API级别10及较低）。\r\n","The numeric shortcut key.":"数字快捷键。\r\n","android.app.admin.DevicePolicyManager.addUserRestriction(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.adduserrterction（android.content.componentname，java.lang.string）\r\n","Height of the key press feedback popup.":"钥匙按反馈弹出的高度。\r\n","Show the ":"显示\r\n","#PERMISSION_GRANT_STATE_DENIED":"#permission_grant_state_denied\r\n","android.app.admin.SecurityLog.TAG_CERT_AUTHORITY_INSTALLED":"android.app.admin.securitylog.tag_cert_authority_installed\r\n","\n            Returns a custom host name verifier for a HTTPS connection. By default it returns ":"\r\n            返回HTTPS连接的自定义主机名验证符。默认情况下它返回\r\n"," containing the new blocked\n            state as a boolean.":" 包含新的阻塞\r\n            陈述为布尔人。\r\n","Interpolates the value at each index by the fraction.":"通过分数将每个索引处的值插值。\r\n","No title bar, but Action Mode bars will overlay application content\n         instead of pushing it down to make room.":"没有标题栏，但是动作模式栏将覆盖应用程序内容\r\n         而不是将其推下来腾出空间。\r\n","Allows an application to set the maximum number of (not needed)\n         application processes that can be running.":"允许应用程序设置最大数量（不需要）\r\n         可以运行的应用程序。\r\n","The user has performed a swipe right gesture on the touch screen.":"用户在触摸屏上执行了正确的滑动手势。\r\n","\n        when the tracked JNI Local Reference count becomes negative.\n      ":"\r\n        当跟踪的JNI本地参考计数变为负数时。\r\n      \r\n","Write the value of a given descriptor to the associated remote device.":"将给定描述符的值写入关联的远程设备。\r\n","android.appwidget.AppWidgetHost.onProviderChanged(int, android.appwidget.AppWidgetProviderInfo)":"android.appwidget.appwidgethost.onproviderchanged（int，android.appwidget.appwidgetProviderInfo）\r\n","Creates a new ValueAnimator object.":"创建一个新的ValueAnimator对象。\r\n","Describes an application not responding error.":"描述一个不响应错误的应用程序。\r\n","Hint indicating an item representing when the content was created or last updated.":"提示指示一个代表内容何时创建或最后更新的项目。\r\n","PendingIntent#FLAG_ONE_SHOT":"pendingIntent＃flag_one_shot\r\n","Context":"语境\r\n","Called by an application that is administering the device to set the minimum number of lower\n            case letters required in the password.":"通过管理设备设置最小数量的应用程序调用\r\n            密码中需要的案例信件。\r\n","Called by device owner, profile owner of a managed profile or delegated app with\n            ":"由设备所有者，托管配置文件或委派应用的个人资料所有者调用\r\n            \r\n","Return the class name of an activity that provides a settings UI for\n            the wallpaper.":"返回提供设置UI的活动的类名称\r\n            墙纸。\r\n","android.app.FragmentManager.unregisterFragmentLifecycleCallbacks(android.app.FragmentLifecycleCallbacks)":"Android.App.FragmentManager.unregisterFragmentLifeCyClecallbacks（android.app.fragmentLifeCyClecallbacks）\r\n","android.app.Activity.startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int, android.os.Bundle)":"android.app.activity.startintersenderfromchild（android.app.activity，android.content.intentsender，int，android.content.intent，int，int，int，int，int，int，android.os.bundle）\r\n","OnOpNotedCallback":"OnOpnotedCallback\r\n","android.app.Notification.getSettingsText()":"android.app.notification.getSetTingStext（）\r\n","#requestPinAppWidget(ComponentName, Bundle, PendingIntent)":"#requestpinappwidget（componentName，bundle，pendingIntent）\r\n"," with the arguments supplied to this builder.":" 随着该建筑商提供的论点。\r\n","android.app.Activity.openContextMenu(android.view.View)":"android.app.activity.opencontextmenu（android.view.view）\r\n","Retrieve the current ":"检索电流\r\n","android.animation.Animator.resume()":"android.animation.animator.resume（）\r\n","Set specific animation resources to run for the fragments that are\n            entering and exiting in this transaction.":"将特定的动画资源设置为运行的片段\r\n            进入并退出此交易。\r\n","Creative Commons 2.5 Attribution License.":"Creative Commons 2.5归因许可证。\r\n"," methods used to configure a custom trust manager which is\n            then used to create a default socket factory.\n            Deriving class must perform all the key manager and trust manager configuration to ensure proper\n            operation of the returned socket factory.\n            ":" 用于配置自定义信任管理器的方法\r\n            然后用于创建默认套接字工厂。\r\n            派生类必须执行所有关键经理和信任管理器配置，以确保正确\r\n            返回插座工厂的操作。\r\n            \r\n","Called when a bread crumb is clicked.":"点击面包屑时打电话。\r\n","Schedule an alarm to be delivered precisely at the stated time.":"安排一个警报，以便在规定的时间确切发出。\r\n"," to send when the notification is cleared explicitly by the user.":" 当用户明确清除通知时发送。\r\n","RunningTaskInfo":"RunningTaskInfo\r\n","Gets the AppWidget providers for the given package and user profile.":"获取给定软件包和用户配置文件的AppWidget提供商。\r\n","Defines the hint displayed in the drop down menu.":"定义下拉菜单中显示的提示。\r\n","An activity that displays an expandable list of items by binding to a data\n            source implementing the ExpandableListAdapter, and exposes event handlers\n            when the user selects an item.":"通过与数据结合来显示可扩展项目列表的活动\r\n            来源实施扩展空白列表，并公开事件处理程序\r\n            当用户选择项目时。\r\n","android.app.admin.DeviceAdminInfo.loadLabel(android.content.pm.PackageManager)":"android.app.admin.deviceadmininfo.loadlabel（android.content.pm.packagemanager）\r\n","Close this Bluetooth GATT client.":"关闭此蓝牙GATT客户端。\r\n"," when\n            the activity had been stopped, but is now again being displayed to the\n            user.":" 什么时候\r\n            该活动已停止，但现在再次显示\r\n            用户。\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_LOCALE":"android.app.admin.devicepolicymanager.extra_provisioning_locale\r\n","Returns how the query terms should match terms in the index.":"返回查询条款应如何匹配索引中的条款。\r\n","android.animation.ValueAnimator.removeAllUpdateListeners()":"android.animation.valueAnimator.RemoveAllupDateListeners（）\r\n","Returns how many documents to generate snippets for.":"返回多少个文档来生成片段。\r\n","120":"120\r\n","Used with to map a View from a removed or hidden Fragment to a View from a shown\n            or added Fragment.":"用于将视图从删除或隐藏的片段映射到从显示的视图到视图\r\n            或添加片段。\r\n","DeviceDefault style for input methods, which is used by the\n         ":"输入方法的Devicedefault样式，该样式由\r\n         \r\n","Broadcast Action: Indicates a low level (ACL) disconnection from a\n            remote device.":"广播动作：指示低水平（ACL）与\r\n            远程设备。\r\n","android.app.admin.DeviceAdminReceiver.onPasswordSucceeded(android.content.Context, android.content.Intent, android.os.UserHandle)":"android.app.admin.deviceadminreceiver.onpasswordsucceeded（android.content.context，android.content.intent，android.os.os.userhandle）\r\n","This hook is called whenever an item in a context menu is selected.":"This hook is called whenever an item in a context menu is selected.\r\n","Text color, typeface, size, and style for \"medium\" text.":"文本颜色，字体，大小和样式的“中等”文本。\r\n","Retrieve the DevicePolicyManager interface for this administrator to work\n            with the system.":"检索devicepolicymanager界面供该管理员工作\r\n            与系统。\r\n","android.app.ProgressDialog.getProgress()":"android.app.progressdialog.getProgress（）\r\n","android.app.slice.SliceItem":"android.app.slice.sliceitem\r\n","android.app.Dialog.onTouchEvent(android.view.MotionEvent)":"android.app.dialog.ontouchevent（android.view.motionevent）\r\n","Load the user-displayed icon for this device admin.":"为此设备管理加载用户播放的图标。\r\n","on error, for example Bluetooth not available, or\n                     insufficient permissions, or channel in use.\n":"错误，例如蓝牙不可用，或\r\n                     使用权限不足或使用中的通道。\r\n\r\n","The user has performed a left and up gesture on the touch screen.":"用户在触摸屏上执行了左右手势。\r\n","android.app.appsearch.SearchResults.getNextPage(java.util.concurrent.Executor, java.util.function.Consumer)":"android.app.appsearch.searchresults.getNextpage（java.util.concurrent.executor，java.util.function.consumer）\r\n","Text color, typeface, size, and style for system search result subtitle.":"用于系统搜索结果字幕的文本颜色，字体，大小和样式。\r\n","This method is called by ViewGroup when a child view is about to be made visible in the\n            container.":"当要使儿童视图在\r\n            容器。\r\n","android.app.admin.DevicePolicyManager.getUserControlDisabledPackages(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getusercontroldisabledpackages（android.content.componentname）\r\n","Text for error alert when a video container is not valid for progressive download/playback.":"当视频容器无效用于渐进下载/播放时，用于错误警报的文本警报。\r\n","android.app.FragmentManager.saveFragmentInstanceState(android.app.Fragment)":"Android.App.FragmentManager.SaveFragmentInstancestate（Android.App.Fragment）\r\n","android.app.Fragment.onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)":"android.app.fragment.oncreateview（android.view.layoutinflater，android.view.viewgroup，android.os.os.bundle）\r\n","#onDestroy()":"#ondestroy（）\r\n","ValueAnimator#setEvaluator(TypeEvaluator)":"valueAnimator＃setevaluator（typeevaluator）\r\n","#setResetPasswordToken":"#SetResetPasswordToken\r\n","Clears the active profile owner.":"清除主动配置文件所有者。\r\n","Remove a listener for layout changes.":"删除听众进行布局更改。\r\n","This method will start profiling if isProfiling() returns true.":"如果ISProfiling（）返回true，则此方法将开始分析。\r\n","android.app.slice.Slice.HINT_SHORTCUT":"android.app.slice.slice.hint_shortcut\r\n","Icon drawable to use for alerts \n         ":"可用于警报的图标可用于使用\r\n         \r\n","#getAccountVisibility":"#getaccountibility\r\n","Drawable to use as the overall window background.":"可以用作整体窗口背景。\r\n","Positions the right edge of this view to the left of the given anchor view ID.":"将此视图的右边缘定位在给定锚视图ID的左侧。\r\n","android.app.people.ConversationStatus.ACTIVITY_OTHER":"android.app.people.conversationstatus.activity_other\r\n","Get the total time this configuration was active, measured in milliseconds.":"获取以毫秒为单位的该配置活性的总时间。\r\n",", for your activity to start interacting with the user.":"，让您的活动开始与用户互动。\r\n","android.accounts.AccountManager.getPackagesAndVisibilityForAccount(android.accounts.Account)":"android.accounts.accountmanager.getPackagesandvisibilityforaccount（android.accounts.account）\r\n","android.appwidget.AppWidgetManager.EXTRA_CUSTOM_INFO":"android.appwidget.appwidgetManager.extra_custom_info\r\n","android.app.Fragment.getText(int)":"android.app.fragment.getText（int）\r\n","New version of ":"新版本的\r\n","android.accounts.AccountManager.getAccountsByTypeForPackage(java.lang.String, java.lang.String)":"android.accounts.accountmanager.getaccountsbytypeforpackage（java.lang.string，java.lang.string）\r\n","android.app.admin.DelegatedAdminReceiver.onSecurityLogsAvailable(android.content.Context, android.content.Intent)":"android.app.admin.delegatedadminreceiver.onsecuritylogsavailable（android.content.context，android.content.intent）\r\n"," key: this is a third line of text, as supplied to\n            ":" 键：这是第三行，提供给\r\n            \r\n","android.app.SearchManager.SUGGEST_COLUMN_FORMAT":"android.app.searchmanager.suggest_column_format\r\n","The service ":"服务\r\n","android.app.WallpaperManager.setWallpaperOffsets(android.os.IBinder, float, float)":"android.app.wallpapermanager.setwallpapersoffsets（android.os.ibinder，float，float）\r\n","#instantiate(Context, String, Bundle)":"#Instantiate（上下文，字符串，捆绑包）\r\n"," account type in results\n            from methods which return information about a particular account.":" 帐户类型的结果\r\n            从返回有关特定帐户的信息的方法。\r\n","The timestamp of the process's death, in milliseconds since the epoch,\n            as returned by ":"自时代以来，该过程死亡的时间戳以毫秒为单位\r\n            如归还\r\n","Allows an application to use location features in hardware,\n         such as the geofencing api\n         Protected by signature|system protection level \n":"允许应用程序使用硬件中的位置功能，\r\n         例如Geipencing API\r\n         受签名保护|系统保护级别\r\n\r\n","android.app.Activity.requestPermissions(java.lang.String[], int)":"android.app.activity.requestpermissions（java.lang.string []，int）\r\n","Determine whether or not features have been disabled in keyguard either by the calling\n            admin, if specified, or all admins that set restrictions on this user and its participating\n            profiles.":"通过调用来确定在KeyGuard中已禁用功能的功能\r\n            管理员（如果指定）或所有对该用户及其参与的限制的管理员\r\n            个人资料。\r\n","android.accessibilityservice.AccessibilityService.GESTURE_3_FINGER_DOUBLE_TAP":"Android.AccessibilityService.Accessibilityservice.gesture_3_finger_double_tap\r\n","Return storage statistics for a specific ":"返回特定的存储统计信息\r\n","android.app.DialogFragment.show(android.app.FragmentManager, java.lang.String)":"android.app.dialogfragment.show（android.app.fragmentmanager，java.lang.string）\r\n","A String extra holding the package name of the mobile device management application that\n            will be set as the profile owner or device owner.":"字符串额外保留移动设备管理应用程序的包装名称\r\n            将设置为个人资料所有者或设备所有者。\r\n","An identifier for a particular download, unique across the system.":"特定下载的标识符，整个系统中唯一。\r\n","Called by a device owner to switch the specified secondary user to the foreground.":"由设备所有者调用以将指定的二级用户切换到前景。\r\n","PackageManager#queryIntentActivities(Intent, int)":"PackageManager＃QueryIntEntActivities（Intent，int）\r\n","The identifier for the negative button.":"负按钮的标识符。\r\n","Create an instance of RunningServiceInfo initialized from a Parcel.":"创建一个从包裹初始化的RunningServiceInfo的实例。\r\n","Subtype to indicate that this item indicates the layout direction for content\n            in the slice.":"亚型表示该项目指示内容的布局方向\r\n            在切片中。\r\n","android.app.ActionBar.setHomeAsUpIndicator(int)":"Android.App.ActionBar.SethomeAsupIndicator（INT）\r\n",": this process is running the\n foreground UI.":"：此过程正在运行\r\n 前景UI。\r\n","Moves all Fragments managed by the controller's FragmentManager\n            into the pause state.":"移动由控制器的FragmentManager管理的所有片段\r\n            进入暂停状态。\r\n","SearchResults":"搜索结果\r\n","Sets up this AnimatorSet to play each of the supplied animations when the\n            previous animation ends.":"在\r\n            先前的动画结束。\r\n"," initialized with this Person's data.":" 用此人的数据初始化。\r\n","java.util.TimeZone#getAvailableIDs":"java.util.TimeZone＃getavailableIds\r\n","Duration, in milliseconds, of the fade out effect after the user is done\n             drawing a gesture.":"用户完成后的淡出效果的持续时间，以毫秒为单位\r\n             画一个手势。\r\n","android.app.DownloadManager.PAUSED_QUEUED_FOR_WIFI":"android.app.downloadmanager.paused_queued_for_wifi\r\n","when no external storage device was found. ":"当找不到外部存储设备时。\r\n"," previously returned by\n            ":" 先前返回\r\n            \r\n","android.app.job.JobParameters.getClipData()":"android.app.job.jobparameters.getClipdata（）\r\n","android.bluetooth.BluetoothDevice.DEVICE_TYPE_LE":"android.bluetooth.bluetoothdevice.device_type_le\r\n","android.app.Activity.shouldShowRequestPermissionRationale(java.lang.String)":"android.app.activity.shouldshowrequestperpermissionrationale（java.lang.string）\r\n","android.app.admin.SecurityLog.TAG_LOG_BUFFER_SIZE_CRITICAL":"android.app.admin.securitylog.tag_log_buffer_size_critical\r\n","Sets the length of each of the current child animations of this AnimatorSet.":"设置该动画集的每个儿童动画的长度。\r\n","DeviceDefault theme for a window without an action bar that will be displayed either\n    full-screen on smaller screens (small, normal) or as a dialog on larger screens (large,\n    xlarge).":"窗口的Devicedefault主题，没有动作栏，该主题将显示\r\n    较小的屏幕上的全屏（小，正常）或较大屏幕上的对话框（大，\r\n    Xlarge）。\r\n","Extra options for an activity's UI.":"活动UI的额外选择。\r\n","android.animation.ObjectAnimator.getTarget()":"android.animation.ObjectAnimator.getTarget（）\r\n","android.app.Notification.Style":"Android.App.Notification.Style\r\n","android.app.admin.SecurityLog.LEVEL_WARNING":"android.app.admin.securitylog.level_warning\r\n","android.app.NotificationManager.BUBBLE_PREFERENCE_ALL":"android.app.notificationmanager.bubble_preference_all\r\n","A constructor used when creating managed representations of JNI objects; called by the runtime.":"创建JNI对象的托管表示时使用的构造函数；由运行时间拨打。\r\n","Stop the service, if it was previously started.":"如果以前开始，请停止服务。\r\n","android.animation.ValueAnimator.setStartDelay(long)":"android.animation.valueAnimator.setstartdelay（long）\r\n","Light widget styles \n":"轻型小部件样式\r\n\r\n","A flag indicating the animation that runs on those items that are changing\n            due to an item disappearing from the container.":"指示动画在那些正在更改的项目上运行的旗帜\r\n            由于一项从容器中消失的物品。\r\n","Called by a profile owner of a managed profile to remove the cross-profile intent filters\n            that go from the managed profile to the parent, or from the parent to the managed profile.":"由托管配置文件的个人资料所有者调用以删除跨核心意图过滤器\r\n            从托管个人资料到父母，或从父母到托管配置文件。\r\n"," call were incompatible with the pre-existing schema.":" 呼叫与现有模式不兼容。\r\n","android.app.LocalActivityManager.LocalActivityManager(android.app.Activity, boolean)":"android.app.localactivitymanager.localactivitymanager（android.app.Activity，boolean）\r\n","Utility class for constructing synthetic back stacks for cross-task navigation\n            on Android 3.":"用于构建合成背堆栈的实用课程用于交叉任务导航\r\n            在Android 3上。\r\n","Defines the delay in milliseconds that a scrollbar takes to fade out.":"定义了滚动栏淡入淡出的毫秒的延迟。\r\n","\n          Whether or not the activity should be the main launcher for an\n          application.\n        ":"\r\n          该活动是否应该是一个主要发射器\r\n          应用。\r\n        \r\n","Return the short bread crumb title for the entry, or null if it\n does not have one.":"返回短面包面包屑标题，或者返​​回该条目\r\n 没有一个。\r\n","android.app.admin.DevicePolicyManager.setLongSupportMessage(android.content.ComponentName, java.lang.CharSequence)":"android.app.admin.devicepolicymanager.setlongsupportmessage（android.content.componentname，java.lang.charsequence）\r\n"," wrapper class that automatically manages\n            heterogeneous data sets within the backup data, each identified by a unique\n            key prefix.":" 自动管理的包装班\r\n            备份数据中的异构数据集，每个数据集由唯一的\r\n            密钥前缀。\r\n","The platform will determine whether choices will be edited before being sent to the app.":"该平台将确定是否将在发送到应用程序之前进行编辑。\r\n","Broadcast action: notify that a new local system update policy has been set by the device\n            owner.":"广播动作：通知设备已设定了新的本地系统更新策略\r\n            所有者。\r\n","android.app.admin.DevicePolicyManager.setAutoTimeEnabled(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setautotimenabled（android.content.componentname，boolean）\r\n","The download manager is a system service that handles long-running HTTP downloads.":"下载管理器是一项系统服务，可处理长期运行的HTTP下载。\r\n",": the given caller is\n            allowed to perform the given operation.":"：给定的来电者是\r\n            允许执行给定的操作。\r\n","Reference to an array resource that be used as description for the targets around the circle.":"引用数组资源，该数组资源可作为圆圈周围目标的描述。\r\n","The user has performed a two-finger single tap gesture on the touch screen.":"用户在触摸屏上执行了两指单击单击手势。\r\n","Hint that this content is a title of other content in the slice.":"暗示此内容是切片中其他内容的标题。\r\n","\n            Indicates whether authentication performed using data in this instance should be done for the end server or a proxy. If instance of \n            AuthenticationData comes from the ":"\r\n            指示在此实例中使用数据执行的身份验证应为最终服务器还是代理进行。如果实例\r\n            authenticationdata来自\r\n","Reference to a style that will be used for the window containing a text\n             selection anchor.":"引用将用于包含文本的窗口的样式\r\n             选择锚。\r\n","Field for the manifest meta-data tag.":"清单元数据标签的字段。\r\n","Get the list of tasks associated with the calling application.":"获取与调用应用程序关联的任务列表。\r\n","Constructs and returns a PropertyValuesHolder with a given property name and\n            a Path along which the values should be animated.":"构建并返回具有给定属性名称的财产价值持有人\r\n            值应动画的路径。\r\n","For special services that are bound to by system code, this is\n a string resource providing a user-visible label for who the\n client is.":"对于由系统代码绑定的特殊服务，这是\r\n 字符串资源为谁提供了用户可见的标签\r\n 客户是。\r\n","AppWidgetProviderInfo":"AppWidgetProviderInfo\r\n","Called to do initial creation of a fragment.":"叫做片段的初始创建。\r\n","android.app.Activity.setShowWhenLocked(boolean)":"android.app.activity.setshowwhenlocked（boolean）\r\n","Activity#onSaveInstanceState":"活动＃OnSaveInstancestate\r\n","Called when the view previously created by ":"当先前创建的视图时调用\r\n","Allows an application to write (but not read) the user's\n         contacts data.":"允许应用程序写入（但不阅读）用户的\r\n         联系人数据。\r\n","android.app.ApplicationExitInfo.REASON_DEPENDENCY_DIED":"android.app.applicationexitinfo.reason_dependency_died\r\n","The original Intent used to launch the task.":"最初的意图用于启动任务。\r\n","android.app.ActivityManager.getRunningServiceControlPanel(android.content.ComponentName)":"android.app.activityManager.getRunningServiceControlpanel（android.content.componentname）\r\n","android.app.SearchableInfo.getSuggestThreshold()":"android.app.searchableInfo.getSuggestThreshold（）\r\n"," but actually fires off the search query after invoking\n            the search dialog.":" 但是实际上在调用后开发了搜索查询\r\n            搜索对话框。\r\n","android.app.Fragment.getParentFragment()":"android.app.fragment.getParentFragment（）\r\n",", for more important notifications or alerts. ":"，有关更重要的通知或警报。\r\n","Default style for PreferenceScreen.":"percencesCreen的默认样式。\r\n","The background color for the selected week.":"选定周的背景颜色。\r\n","Returns the names of all properties defined in this document.":"返回本文档中定义的所有属性的名称。\r\n","Gets the list of ":"获取清单\r\n","\n        property provides an advisory value of the number of\n        JNI Local References which Java.Interop has created. The\n        ":"\r\n        属性提供了数量的咨询价值\r\n        JNI java.interop创建的本地参考。这\r\n        \r\n","Context#startService Context.startService()":"上下文＃startervice context.startservice（）\r\n","Returns whether the user has chosen the sound of this channel.":"返回用户是否选择了此频道的声音。\r\n","No animation for transition.":"没有动画进行过渡。\r\n","Returns the user visible description of this channel. -or- Sets the user visible description of this channel.":"返回此通道的用户可见描述。 - 或 - 设置此通道的用户可见描述。\r\n","Window#setType(int) #getWindow#setType(int)":"窗口＃setType（int）＃getwindow＃settype（int）\r\n","The user has performed a three-finger single tap gesture on the touch screen.":"用户在触摸屏上执行了三指单击单击手势。\r\n","Called when a user or profile is removed.":"删除用户或配置文件时调用。\r\n","This class allows interaction with conversation and people data.":"该课程允许与对话和人员数据进行互动。\r\n","#getNightMode()":"#getnightmode（）\r\n","android.app.DirectAction":"Android.App.Directaction\r\n","android.accessibilityservice.AccessibilityServiceInfo.getId()":"android.accosconibilityservice.Accessibilityserviceinfo.getID（）\r\n","if the request was canceled for any\n     reason, including the user canceling a credential request":"如果取消了任何请求\r\n     原因，包括取消凭据请求的用户\r\n","Enable the Home button during LockTask mode.":"在LockTask模式下启用主按钮。\r\n","This class is used to specify meta information of a device administrator\n            component.":"此类用于指定设备管理员的元信息\r\n            零件。\r\n","Sets whether the widget is being displayed on a light/white background and use an\n            alternate UI if available.":"设置小部件是否在轻/白色背景上显示并使用\r\n            如果有的话，请替代UI。\r\n"," when the user performs a specific\n            gesture on the default display.":" 当用户执行特定\r\n            默认显示屏上的手势。\r\n","android.app.slice.SliceMetrics":"Android.App.Slice.SliceMetrics\r\n","M:Android.App.PendingIntent.GetBroadcast(Android.Content.Context,System.Int32,System.Int32,System.Int32)":"m：android.app.pendingIntent.getBroadcast（android.content.context，system.int32，system.int32，system.int32）\r\n","Return the name of the activity that invoked this activity.":"返回调用此活动的活动的名称。\r\n","Called during provisioning of a managed device to allow the device initializer to perform\n            user setup steps.":"在配置托管设备时调用以允许设备初始化器执行\r\n            用户设置步骤。\r\n","Application process was killed due to a runtime permission change.":"申请流程因运行时的许可而被杀死。\r\n","android.app.SearchManager.SHORTCUT_MIME_TYPE":"android.app.searchmanager.shortcut_mime_type\r\n","Show a dialog managed by this activity.":"显示由此活动管理的对话框。\r\n","#getWindowNodeCount()":"#getWindownodeCount（）\r\n","Broadcast Action: Sent after the value returned by\n            ":"广播动作：在返回的值后发送\r\n            \r\n","Throwable":"可投掷\r\n","android.app.job.JobParameters.getExtras()":"android.app.job.jobparameters.getExtras（）\r\n","android.app.Service.onStartCommand(android.content.Intent, int, int)":"android.app.service.onstartcommand（android.content.intent，int，int）\r\n","Button to close error alert when a video cannot be played \n":"当无法播放视频时，按钮要关闭错误警报\r\n\r\n","android.app.backup.BackupManager.dataChanged(java.lang.String)":"android.app.backup.backupmanager.datachanged（java.lang.string）\r\n","android.app.admin.DevicePolicyManager.PRIVATE_DNS_MODE_PROVIDER_HOSTNAME":"android.app.admin.devicepolicymanager.private_dns_mode_provider_hostname\r\n","Creates a new date picker dialog for the current date using the parent\n            context's default date picker dialog theme.":"为当前日期创建一个新的日期选择器对话框\r\n            上下文的默认日期选择器对话框主题。\r\n","Hint to indicate that this content should not be tinted.":"提示表明不应引起此内容。\r\n","The job was stopped to run a higher priority job of the app.":"该工作被停止执行该应用程序的更高优先级。\r\n","android.app.WallpaperManager.FLAG_LOCK":"android.app.wallpapermanager.flag_lock\r\n","android.app.blob.BlobStoreManager.acquireLease(android.app.blob.BlobHandle, int, long)":"android.app.blob.blobstoremanager.acquirelease（android.app.blob.blobhandle，int，long）\r\n","Set a custom style resource that will be used for resolving transit\n            animations.":"设置将用于解决运输的自定义样式资源\r\n            动画。\r\n","android.animation.Keyframe.getFraction()":"android.animation.keyframe.getFraction（）\r\n","android.app.FragmentController.dispatchStart()":"android.app.fragmentController.disPatchStart（）\r\n"," in results from methods that\n            may require the caller to interact with the user.":" 在方法的结果中\r\n            可能要求呼叫者与用户互动。\r\n","the authority of a content provider.":"内容提供商的权威。\r\n","android.app.Fragment.setEnterSharedElementCallback(android.app.SharedElementCallback)":"Android.App.Fragment.SetenterSharedElementCallback（android.app.sharedelementCallback）\r\n","Returns what group this channel belongs to. -or- Sets what group this channel belongs to.":"返回此频道所属的组。 - 或设置此频道所属的组。\r\n","Subclasses can not override equals().":"子类不能覆盖等于（）。\r\n","Called by an application that is administering the device to set the minimum number of\n            non-letter characters (numerical digits or symbols) required in the password.":"由管理设备的应用程序调用以设置最小数量\r\n            密码中需要的非字母字符（数字数字或符号）。\r\n","\n          The proscribed implementation template is:\n        ":"\r\n          禁止的实施模板是：\r\n        \r\n","android.accessibilityservice.AccessibilityServiceInfo.FLAG_REQUEST_FINGERPRINT_GESTURES":"Android.AccessibilityService.Accessibilityserviceinfo.flag_request_fingerprint_gestures\r\n","A slice is a piece of app content and actions that can be surfaced outside of the app.":"切片是可以在应用程序之外浮出水面的应用程序内容和操作。\r\n","android.app.appsearch.AppSearchSchema":"android.app.appsearch.appsearchschema\r\n","android.bluetooth.BluetoothGatt.GATT_REQUEST_NOT_SUPPORTED":"android.bluetooth.bluetoothgatt.gatt_request_not_supported\r\n","android.app.NotificationChannel.getGroup()":"android.app.notificationChannel.getGroup（）\r\n","android.app.appsearch.AppSearchSession.reportUsage(android.app.appsearch.ReportUsageRequest, java.util.concurrent.Executor, java.util.function.Consumer)":"android.app.app.appsearch.appsearchsession.reportusage（android.app.appsearch.reportusagerequest，java.util.concurrent.executor，java.util.function.consumer）\r\n","android.Manifest.permission#DUMP":"android.manifest.permission＃dump\r\n","Called when activity resume is complete (after ":"当活动简历完成时调用（之后\r\n","android.app.Instrumentation.sendTrackballEventSync(android.view.MotionEvent)":"android.app.Instrumentation.SendTrackBalleventsync（android.view.motionevent）\r\n"," Activity.":"活动。\r\n","Bundle key used for the ":"捆绑密钥用于\r\n","android.app.DownloadManager.COLUMN_TITLE":"android.app.downloadmanager.column_title\r\n","android.app.admin.DevicePolicyManager.getFactoryResetProtectionPolicy(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getFactoryResetProtectionpolicy（android.content.componentname）\r\n","android.app.FragmentTransaction.add(int, android.app.Fragment)":"Android.App.FragmentTransaction.Add（int，android.app.Fragment）\r\n","android.app.WallpaperColors.fromBitmap(android.graphics.Bitmap)":"android.app.wallpapercolors.frombitmap（android.graphics.bitmap）\r\n","#onStop":"#onstop\r\n","Used as a Parcelable ":"用作包裹\r\n","This is called immediately after any structural changes (format or\n size) have been made to the surface.":"在任何结构性更改（格式或格式）之后，这是立即调用的\r\n 大小）已成为表面。\r\n","Set this notification to be the group summary for a group of notifications.":"将此通知设置为一组通知的组摘要。\r\n","android.app.assist.AssistContent.setStructuredData(java.lang.String)":"android.app.assist.AssistContent.SetsstructuredData（java.lang.string）\r\n",": use\n            the holographic alert theme with a light background.":"： 利用\r\n            具有光背景的全息警报主题。\r\n","android.accessibilityservice.AccessibilityService.onSystemActionsChanged()":"Android.AccessibilityService.Accessibilityservice.onsystemactionsChanged（）\r\n","A large-format version of ":"大型版本的\r\n","Obsolete flag indicating high-priority notifications; use the priority field instead.":"过时的标志表示高优先性通知；改用优先字段。\r\n","android.content.Context#createAttributionContext attribution tag":"android.content.context＃CreateAttributionContext属性标签\r\n","Called by the system when the activity changes from fullscreen mode to multi-window mode and\n            visa-versa.":"当活动从全屏模式变为多窗口模式时，系统调用\r\n            反之亦然。\r\n","android.app.TaskInfo":"android.app.taskinfo\r\n","android.app.ProgressDialog.setIndeterminateDrawable(android.graphics.drawable.Drawable)":"android.app.progressdialog.setIndeterminedrawable（android.graphics.drawable.drabable）\r\n","TabWidget":"TabWidget\r\n"," key: this is the longer text shown in the big form of a\n            ":" 关键：这是以大型形式显示的较长文字\r\n            \r\n","android.app.job.JobWorkItem.getDeliveryCount()":"android.app.job.jobworkitem.getDeliveryCount（）\r\n","android.app.ActivityManager.getDeviceConfigurationInfo()":"android.app.activityManager.getDeviceConfigurationInfo（）\r\n","#startActivity(Intent)":"#startactivity（意图）\r\n","Directly launch live wallpaper preview, allowing the user to immediately\n            confirm to switch to a specific live wallpaper.":"直接启动实时壁纸预览，允许用户立即\r\n            确认切换到特定的实时墙纸。\r\n","\"Managed\n               Timing\"":"“管理\r\n               定时”\r\n","android.app.Fragment.getChildFragmentManager()":"Android.App.Fragment.GetChildFragmentManager（）\r\n"," to manage\n         backup and restore of the application's data on external storage.":" 管理\r\n         备份和还原应用程序在外部存储上的数据。\r\n","\n          The host part of a URI authority.\n        ":"\r\n          URI权威的主机部分。\r\n        \r\n","Sets the length of the animation.":"设置动画的长度。\r\n","BigPictureStyle#setContentDescription(CharSequence)":"bigpicturestyle＃setContentDescription（charsequence）\r\n","F:Android.App.UiModeManager.DisableCarMode":"F：android.app.uimodemanager.disableCarmode\r\n","android.app.job.JobInfo.MAX_BACKOFF_DELAY_MILLIS":"android.app.job.jobinfo.max_backoff_delay_millis\r\n"," objects containing the people that\n            this notification relates to.":" 包含人民的对象\r\n            该通知与。\r\n","Returns the current standby bucket of the calling app.":"返回调用应用程序的当前待机桶。\r\n","android.app.SearchableInfo.getVoiceSearchLaunchRecognizer()":"android.app.searchableInfo.getVoicesearchLaunchRecognizer（）\r\n","android.app.WallpaperManager.forgetLoadedWallpaper()":"android.app.wallpapermanager.forgetloadedwallpaper（）\r\n","android.os.UserHandle":"android.os.userhandle\r\n","android.app.appsearch.AppSearchManager":"Android.app.AppSearch.AppSearchManager\r\n",", but if there is no wallpaper set,\n            a null pointer is returned.":"，但是如果没有壁纸设置，\r\n            返回了无效指针。\r\n","android.app.admin.DelegatedAdminReceiver.onChoosePrivateKeyAlias(android.content.Context, android.content.Intent, int, android.net.Uri, java.lang.String)":"android.app.admin.delegateDadMinreCeiver.OnchoosePrivateKeyalias（android.content.context，android.content.intent，int，int，android.net.uri，java.lang.lang.string）\r\n","Creates an alert dialog that uses an explicit theme resource.":"创建使用明确主题资源的警报对话框。\r\n","Maximum backoff we allow for a job, in milliseconds.":"我们允许的最大退缩，以毫秒为单位。\r\n"," still.":" 仍然。\r\n","false":"错误的\r\n","Based on <code>oldState</code>, determine which of the files from the\n            application's data directory need to be backed up, write them to the data\n            stream, and fill in <code>newState</code> with the state as it exists\n            now.":"基于<code> Oldstate </code>，确定来自该文件的哪些文件\r\n            应用程序的数据目录需要备份，将其写入数据\r\n            流，并用状态填充<code> newstate </code>\r\n            现在。\r\n","Activity action: Starts the administrator to get the mode for the provisioning.":"活动动作：启动管理员以获取配置模式。\r\n","android.accounts.AccountManager.KEY_ACCOUNT_STATUS_TOKEN":"android.accounts.accountmanager.key_account_status_token\r\n","Return the current value of ":"返回当前值\r\n","android.app.usage.UsageStats.getTotalTimeVisible()":"android.app.usage.usagestats.getTotalTimeVisible（）\r\n","android.app.ActivityManager.clearWatchHeapLimit()":"android.app.activityManager.ClearWatchHeaPlimit（）\r\n","android.accessibilityservice.AccessibilityServiceInfo.describeContents()":"Android.AccessibilityService.Accessibilityserviceinfo.describectents（）\r\n","Message stored in the exception.":"存储在异常中的消息。\r\n","A hint to indicate that the contents of this subslice represent a list of keywords\n            related to the parent slice.":"暗示该子层的内容表示关键字列表\r\n            与父片有关。\r\n","android.app.people.ConversationStatus.getStartTimeMillis()":"android.app.people.conversationstatus.getstarttimemillis（）\r\n","android.bluetooth.BluetoothGatt.readPhy()":"android.bluetooth.bluetoothgatt.readphy（）\r\n","Sets the converter to convert from the values type to the setter's parameter type.":"将转换器设置为从值类型转换为设置器的参数类型。\r\n","Column in data table that contains details for this data.":"数据表中包含此数据详细信息的列。\r\n","#commitNow":"#commitnow\r\n","Action to trigger the Accessibility Button":"触发可访问性按钮的操作\r\n","Capability: This accessibility service can perform gestures.":"功能：此可访问性服务可以执行手势。\r\n","android.app.Activity.stopLocalVoiceInteraction()":"android.app.activity.stoplocalvoiceinteraction（）\r\n","ConversationStatus#getId() id":"对话status＃getID（）ID\r\n","Information you can retrieve about any processes that are in an error condition.":"您可以检索有关在错误条件下的任何过程的信息。\r\n","android.os.ParcelUuid":"android.os.parceluuid\r\n","Descriptor bit used with ":"描述符位与\r\n","android.app.Activity.getRequestedOrientation()":"android.app.activity.getRequestEdorientation（）\r\n","Set the local destination for the downloaded file to a path within\n the application's external files directory (as returned by\n ":"将下载文件的本地目的地设置为路径\r\n 应用程序的外部文件目录（如\r\n \r\n","android.accounts.AbstractAccountAuthenticator.isCredentialsUpdateSuggested(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String)":"android.accounts.abstractaccountauthenticator.iscredentialsupdatesuggested（android.accounts.accountauthenticatorestorsponse，android.accounts.accounts.accounts.accounts.accounts.account，java.lang.string）\r\n","The string that uniquely identifies an authenticator":"唯一标识身份验证者的字符串\r\n","android.app.admin.DevicePolicyManager.RESET_PASSWORD_DO_NOT_ASK_CREDENTIALS_ON_BOOT":"android.app.admin.devicepolicymanager.reset_password_do_do_not_ask_credentials_on_boot\r\n","Used for permissions that provide access to the user\n         bookmarks and browser history.":"用于为用户访问的权限\r\n         书签和浏览器历史记录。\r\n","Add this transaction to the back stack.":"将此交易添加到后堆栈中。\r\n","android.app.Activity.setContentView(int)":"android.app.activity.setContentView（int）\r\n","Get the upper limit for the number of strokes a gesture may contain.":"获取手势可能包含的中风数的上限。\r\n","android.accessibilityservice.AccessibilityService.GLOBAL_ACTION_ACCESSIBILITY_BUTTON":"Android.AccessibilityService.Accesseribilityservice.global_action_accessibility_button\r\n","String[]":"细绳[]\r\n","android.animation.AnimatorSet.getDuration()":"android.animation.animatortatorset.getDuration（）\r\n","Registers to receive notifications about data usage on specified networks.":"寄存器以接收有关指定网络数据使用情况的通知。\r\n","android.app.appsearch.exceptions.AppSearchException.AppSearchException(int, java.lang.String)":"android.app.appsearch.exceptions.appsearchexception.appsearchexception（int，java.lang.string）\r\n","Remove an ":"删除一个\r\n","Sets the padding, in pixels, of the bottom edge; see ":"将填充物设置为底部边缘的填充物；看\r\n","android.app.FragmentController.doLoaderStop(boolean)":"Android.App.FragmentController.doloaderstop（布尔）\r\n","The type evaluator to be used when calculating the animated values of this animation.":"计算此动画的动画值时要使用的类型评估器。\r\n","Enables or disables antialiasing.":"启用或禁用抗逆念。\r\n"," interface and which understands the authentication challenge contained\n            in the ":" 界面以及了解所包含的身份验证挑战\r\n            在里面\r\n","Returns the inverse of this converter, where the from and to classes are reversed.":"返回此转换器的倒数，在该转换器的逆转中，从中和类逆转。\r\n"," is blocked\n            (when ":" 被阻止\r\n            （什么时候\r\n","Clears the current device owner.":"清除当前的设备所有者。\r\n","KeyEvent.Callback#onKeyMultiple(int, int, KeyEvent)\n            KeyEvent.Callback.onKeyMultiple()":"keyevent.callback＃onkeymultiple（int，int，keyevent）\r\n            keyevent.callback.onkeymultiple（）\r\n","Stop listening to changes for this AppWidget.":"停止收听此AppWidget的更改。\r\n","android.app.admin.DeviceAdminInfo.loadDescription(android.content.pm.PackageManager)":"android.app.admin.deviceadmininfo.loaddescription（android.content.pm.packagemanager）\r\n","Returns the current list of child Animator objects controlled by this\n            AnimatorSet.":"返回由此控制的儿童动画对象的当前列表\r\n            Animatorset。\r\n","android.app.SearchableInfo.shouldRewriteQueryFromData()":"android.app.searchableInfo.shouldrewritequeryfromdata（）\r\n","Removes a listener from the set listening to frame updates for this animation.":"从集合中删除侦听器收听此动画的帧更新。\r\n","android.content.pm.PackageManager#FEATURE_AUTOMOTIVE automotive builds":"android.content.pm.packagemanager＃feature_automotive汽车构建\r\n","Specifies which values should be taken from the defaults.":"指定应从默认值中获取哪些值。\r\n","android.bluetooth.BluetoothGattCallback":"android.bluetooth.bluetoothgattcallback\r\n","\n          The task that the activity has an affinity for.\n        ":"\r\n          活动具有亲和力的任务。\r\n        \r\n","MSCHAPV2":"MSCHAPV2\r\n","#getActivity(Context, int, Intent, int)":"#getactivity（上下文，int，intent，int）\r\n","BluetoothDevice#TRANSPORT_BREDR":"BluetoothDevice＃Transport_bredr\r\n","android.app.SyncNotedAppOp.getOp()":"android.app.syncnotedappop.getop（）\r\n","Flag indicating that this window should allow touches to be split\n             across other windows that also support split touch.":"指示此窗口应允许触摸拆分的标志\r\n             在其他也支持拆分触摸的窗口中。\r\n","android.app.people.ConversationStatus.ACTIVITY_NEW_STORY":"android.app.people.conversationstatus.activity_new_story\r\n","Acceleration curve matching a cubic ease in function.":"加速曲线匹配功能的立方体易于曲线。\r\n","Similar to ":"如同\r\n","Constructs and returns an ObjectAnimator that animates the target using a multi-float setter\n            along the given <code>Path</code>.":"构建并返回使用多浮动设置器来动画目标的对象启示器\r\n            沿给定的<code>路径</code>。\r\n","MatchInfo":"Matchinfo\r\n"," key: this is the resource ID of the notification's main small icon, as\n            supplied to ":" 关键：这是通知主要小图标的资源ID，\r\n            提供给\r\n","android.app.WallpaperManager.setBitmap(android.graphics.Bitmap)":"android.app.wallpapermanager.setbitmap（android.graphics.bitmap）\r\n","android.app.DownloadManager.STATUS_PENDING":"android.app.downloadmanager.status_pending\r\n","android.app.ActivityManager.dumpPackageState(java.io.FileDescriptor, java.lang.String)":"android.app.activityManager.dumppackageState（java.io.filedescriptor，java.lang.string）\r\n","Permissions for direct access to the accounts managed\n         by the Account Manager.":"直接访问管理帐户的权限\r\n         由客户经理。\r\n","android.app.RemoteAction.getContentDescription()":"android.app.remoteaction.getContentDescription（）\r\n","Return true if the layout is included as part of an activity view\n            hierarchy via the &lt;fragment&gt; tag.":"如果包含布局作为活动视图的一部分，则返回true\r\n            层次结构通过＆lt; fragment＆gt;标签。\r\n","Bundle key used for a ":"捆绑密钥用于\r\n"," if this task completed.":" 如果完成此任务。\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_DOMAIN":"android.app.admin.devicepolicymanager.extra_provisioning_wifi_domain\r\n"," privilege), to allow using a KeyChain key\n            pair for authentication to Wifi networks.":" 特权），允许使用键链密钥\r\n            配对进行身份验证与WiFi网络。\r\n","android.accessibilityservice.AccessibilityServiceInfo.CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION":"Android.AccessibilityService.AccessibilityserviceInfo.capibility_can_request_touch_exploration\r\n","android.app.admin.DevicePolicyManager.setTime(android.content.ComponentName, long)":"android.app.admin.devicepolicymanager.settime（android.content.componentname，long）\r\n","android.app.backup.RestoreObserver.onUpdate(int, java.lang.String)":"android.app.backup.restoreobserver.onupdate（int，java.lang.string）\r\n","android.bluetooth.BluetoothAdapter.EXTRA_LOCAL_NAME":"android.bluetooth.bluetoothadapter.extra_local_name\r\n"," associated with the blob this object is representing.":" 与斑点相关联，该对象表示。\r\n"," types that are part of this request.":" 是此请求的一部分的类型。\r\n","Used as a String extra field in ":"用作字符串的额外字段\r\n","android.app.DownloadManager":"android.app.downloadmanager\r\n"," lifecycle and is\n            called after the system has successfully bound to the service.":" 生命周期和\r\n            在系统成功绑定到服务之后。\r\n","android.app.ActivityManager.ACTION_REPORT_HEAP_LIMIT":"android.app.activityManager.action_report_heap_limit\r\n","The amount of time the JobScheduler will wait before rescheduling a failed job.":"Jobscheduler将等待的时间才能重新安排失败的工作。\r\n","Run as a manufacturer test application, running as the root user.":"作为制造商测试应用程序运行，作为根用户运行。\r\n","#FLAG_EVICT_CREDENTIAL_ENCRYPTION_KEY":"#flag_evict_credential_encryption_key\r\n","android.app.MediaRouteButton.showDialog()":"android.app.mediaroutebutton.showdialog（）\r\n","Merge additional metadata into this notification.":"将额外的元数据合并到该通知中。\r\n","Called by a device admin to get the long support message.":"由设备管理员拨打以获取长的支持消息。\r\n","Gets an authtoken for an account.":"获得帐户的身份。\r\n","android.app.admin.DevicePolicyManager.enableSystemApp(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.enablesystemapp（android.content.componentname，java.lang.string）\r\n","(time since boot, including sleep),\n which will wake up the device when it goes off.":"（自启动以来的时间，包括睡眠），\r\n 该设备关闭时会唤醒。\r\n","android.app.Instrumentation.callApplicationOnCreate(android.app.Application)":"android.app.instrumentation.callapplicationoncreate（android.app.application）\r\n","Utility class to resize icons to match default icon size.":"实用程序类以调整图标大小以匹配默认图标大小。\r\n","Returns the notification channel settings for a given channel id.":"返回给定通道ID的通知通道设置。\r\n","android.app.FragmentBreadCrumbs.setOnBreadCrumbClickListener(android.app.OnBreadCrumbClickListener)":"android.app.fragmentbreadcrumbs.setonbreadcrimbclicklistener（android.app.onbreadcrumbclicklistener）\r\n","android.app.slice.SliceItem.getSubType()":"android.app.slice.sliceitem.getSubType（）\r\n","android.app.appsearch.Migrator":"Android.App.AppSearch.Migrator\r\n","android.app.admin.DevicePolicyManager.setPermissionPolicy(android.content.ComponentName, int)":"android.app.admin.devicepolicymanager.setpermissionpolicy（android.content.componentname，int）\r\n","Set the ActionBar's background.":"设置动作栏的背景。\r\n","NotificationManager#ACTION_AUTOMATIC_ZEN_RULE":"NotificationManager＃action_automatic_zen_rule\r\n","android.appwidget.AppWidgetManager.OPTION_APPWIDGET_SIZES":"android.appwidget.appwidgetManager.option_appwidget_sizes\r\n","UserHandle":"用户手\r\n","OnCancelListener":"Oncancellistener\r\n","Update the locally stored credentials for an account.":"更新帐户本地存储的凭据。\r\n","android.app.NotificationManager.notify(java.lang.String, int, android.app.Notification)":"android.app.notificationmanager.notify（java.lang.string，int，android.app.notification）\r\n","Reference to a style resource holding\n             the set of window animations to use, which can be\n             any of the attributes defined by\n             ":"参考样式资源保存\r\n             可以使用的一组窗口动画\r\n             任何定义的属性\r\n             \r\n","Event severity level indicating that the event requires urgent admin action.":"事件严重程度表明该事件需要紧急行动。\r\n","Internet Media Type of the downloaded file.":"下载文件的互联网媒体类型。\r\n","android.app.NotificationManager.EXTRA_AUTOMATIC_RULE_ID":"android.app.notificationmanager.extra_automatic_rule_id\r\n","Create an ActivityOptions to transition between Activities using cross-Activity scene\n animations.":"创建一个活动的活动，以使用交叉活动场景在活动之间过渡\r\n 动画。\r\n","Return the LoaderManager for this activity, creating it if needed.":"返回此活动的LoaderManager，如果需要，请创建它。\r\n","#FLAG_LOCK":"#flag_lock\r\n","android.bluetooth.BluetoothAdapter.isLeCodedPhySupported()":"android.bluetooth.bluetoothadapter.islecodedphysupported（）\r\n","This flag requests from the system to enable web accessibility enhancing\n extensions.":"此标志从系统请求启用Web可访问性增强\r\n 扩展。\r\n","Schedule an alarm that represents an alarm clock, which will be used to notify the user\n            when it goes off.":"安排一个表示闹钟的警报，该闹钟将用于通知用户\r\n            当它熄灭时。\r\n","BigPictureStyle#bigPicture(Bitmap) big picture":"bigpicturestyle＃bigpicture（位图）大图\r\n",":\n            Also get reports if the foreground state of an op's uid changes.":"：\r\n            如果OP UID的前景状态发生变化，还可以获得报告。\r\n","android.app.Activity.startLocalVoiceInteraction(android.os.Bundle)":"android.app.activity.startlocalvoiceinteraction（android.os.bundle）\r\n","when the download is waiting to retry or resume.":"当下载等待重试或恢复时。\r\n","An intent extra which points to a bundle of extra information for a particular widget id.":"特定的意图，指向特定小部件ID的额外信息。\r\n","Creates a notification channel group.":"创建一个通知渠道组。\r\n"," will specify the exit code.":" 将指定退出代码。\r\n","android.app.NotificationManager.getNotificationChannels()":"android.app.notificationmanager.getNotificationChannels（）\r\n","android.app.backup.BackupAgent.onDestroy()":"android.app.backup.backupent.ondestroy（）\r\n","android.app.SearchManager.startSearch(java.lang.String, boolean, android.content.ComponentName, android.os.Bundle, boolean)":"android.app.searchmanager.startsearch（java.lang.string，boolean，android.content.componentname，android.os.os.bundle，boolean）\r\n"," requesting that only\n            device password requirement is enforced during the parent profile password enrolment flow.":" 只要求\r\n            设备密码要求在父个人资料密码注册流程期间执行。\r\n"," if no specific kind of network is required.":" 如果不需要特定类型的网络。\r\n","Bit for {@link #flags): set if the service is running in a\n core system process.":"位for {@link #flags）：设置如果服务在A中运行\r\n 核心系统过程。\r\n","android.accessibilityservice.AccessibilityGestureEvent.getMotionEvents()":"android.accosconibilityservice.Accessibility gestureevent.getMotionEvents（）\r\n","android.app.Fragment.onViewCreated(android.view.View, android.os.Bundle)":"android.app.fragment.onviewCreated（android.view.view，android.os.bundle）\r\n","The end bound for an item's indicator.":"末端绑定了项目的指示器。\r\n","android.app.ActionBar.setDisplayOptions(int, int)":"android.app.actionbar.setDisplayOptions（int，int）\r\n","A SliceProvider allows an app to provide content to be displayed in system spaces.":"SliceProvider允许应用程序提供可以在系统空间中显示的内容。\r\n","Get the sub-type of this SliceItem.":"获取此切片的子类型。\r\n","DeviceDefault light theme for panel windows.":"面板窗口的Devicedefault Light主题。\r\n","DialogInterface#BUTTON_NEGATIVE":"DialogInterface＃button_negative\r\n","Indicates that an ADB interactive shell was opened via \"adb shell\".":"表示通过“ ADB壳”打开ADB交互式外壳。\r\n","Indicates that an admin has set a maximum number of failed password attempts before wiping\n            data.":"表示管理员在擦拭之前设置了最大数量的密码尝试数量\r\n            数据。\r\n","The app was used very recently, currently in use or likely to be used very soon.":"该应用程序最近被使用，目前正在使用或可能很快使用。\r\n","android.app.UiModeManager.ACTION_ENTER_CAR_MODE":"android.app.uimodemanager.action_enter_car_mode\r\n","SliceProvider":"SliceProvider\r\n","android.appwidget.AppWidgetProvider.AppWidgetProvider()":"android.appwidget.appwidgetProvider.appwidgetProvider（）\r\n","android.app.appsearch.SearchSpec.TERM_MATCH_PREFIX":"android.app.app.appsearch.searchspec.term_match_prefix\r\n","android.app.appsearch.BatchResultCallback.onSystemError(java.lang.Throwable)":"android.app.appsearch.batchresultcallback.onsystemerror（java.lang.throwable）\r\n","android.app.ActivityManager.restartPackage(java.lang.String)":"android.app.activityManager.restartpackage（java.lang.string）\r\n",", this property must be set to an instance of\n            a class that implements the ":"，必须将此属性设置为\r\n            实现\r\n","Read previously received cell broadcast messages.":"阅读先前收到的单元广播消息。\r\n","Retrieve the result associated with this ActivityMonitor, or null if \n none.":"检索与此ActivityMonitor相关的结果，或者null如果\r\n 没有任何。\r\n","Allows applications to RW to diagnostic resources.":"允许应用程序到RW来诊断资源。\r\n","android.app.Activity.onResume()":"android.app.activity.onresume（）\r\n","Gets the most visually representative color of the wallpaper.":"获得墙纸最具视觉代表性的颜色。\r\n"," that has a nice minimum width for a\n    regular dialog.":" 对于A有一个不错的最小宽度\r\n    定期对话。\r\n","The duration (in milliseconds) of a long animation.":"长时间动画的持续时间（以毫秒为单位）。\r\n","Removes a listener from the set listening to this animation.":"从集合中删除听众听取此动画。\r\n","Defines the default vertical spacing between rows.":"定义行之间的默认垂直间距。\r\n","Person":"人\r\n","Event severity level indicating that the event may require admin attention.":"事件严重程度表明该事件可能需要管理员注意。\r\n","Text color, typeface, size, and style for the text inside of a button.":"文本颜色，字体，大小和样式，用于按钮内部的文本。\r\n","android.animation.ValueAnimator.ofInt(int[])":"android.animation.valueAnimator.ofint（int []）\r\n","#enableCarMode(int)":"#enablecarmode（int）\r\n","android.app.Activity.setFinishOnTouchOutside(boolean)":"android.app.activity.setfinishontouchoutside（布尔值）\r\n","Small ProgressBar style.":"小型进度栏样式。\r\n","android.app.admin.DeviceAdminInfo.USES_ENCRYPTED_STORAGE":"android.app.admin.deviceadmininfo.uses_encrypted_storage\r\n","Creates a new date picker dialog for the current date.":"为当前日期创建一个新的日期选择器对话框。\r\n","android.animation.Animator.getTotalDuration()":"android.animation.animator.getTotallation（）\r\n","#FORMAT_IMAGE":"#format_image\r\n","android.app.RemoteInput.getExtras()":"android.app.remoteinput.getExtras（）\r\n","android.appwidget.AppWidgetHostView.getDefaultView()":"android.appwidget.appwidgethostview.getDefaultView（）\r\n"," key: whether the  ":" 关键：是否\r\n","Background that can be used behind parts of a UI that provide\n             details on data the user is selecting.":"可以在UI部分背后使用的背景\r\n             用户选择的数据详细信息。\r\n","#createSession(BlobHandle)":"#Createsession（Blobhandle）\r\n","Activity action: have the user enter a new password.":"活动动作：用户输入新密码。\r\n","android.appwidget.AppWidgetProviderInfo.descriptionRes":"android.appwidget.AppwidgetProviderInfo.DescriptionRes\r\n","android.app.backup.BackupManager.dataChanged()":"android.app.backup.backupmanager.datachanged（）\r\n"," attributes\n            of each successive activity (or activity-alias) element in the application's manifest\n            to the task stack builder.":" 属性\r\n            应用程序清单中的每个连续活动（或活动 - 阿里亚亚利亚）元素的\r\n            到任务堆栈构建器。\r\n","android.app.admin.DeviceAdminReceiver.onDisabled(android.content.Context, android.content.Intent)":"android.app.admin.deviceadminreceiver.ondisabled（android.content.context，android.content.intent）\r\n","A String extra that, holds the email address of the account which a managed profile is\n created for.":"额外的字符串，该字符串包含托管个人资料的帐户的电子邮件地址\r\n 为。\r\n"," of the remote device after it\n            has been fetched.":" 远程设备之后\r\n            被取出了。\r\n","android.app.Activity.onCreatePanelMenu(int, android.view.Menu)":"android.app.activity.oncreatepanelmenu（int，android.view.menu）\r\n","Gets the position (in packed position representation) of the currently\n            selected group or child.":"获取当前的位置（以包装的位置表示）\r\n            选定的小组或孩子。\r\n","Enables the fast scroll thumb that can be dragged to quickly scroll through\n             the list.":"启用可以拖动的快速滚动拇指以快速滚动\r\n             名单。\r\n"," was used to start an Activity, <var>callback</var>\n            will be called to handle shared elements on the ":" 用于启动活动，<var>回调</var>\r\n            将被调用以处理在\r\n","IDisposable":"iDisposable\r\n","Callback method to be invoked when the global layout state or the visibility of views\n within the view tree changes\n":"全局布局状态或视图的可见性时要调用回调方法\r\n 在视图中改变\r\n\r\n","\n            Configure and return a custom ":"\r\n            配置并返回自定义\r\n","#INTENT_CATEGORY_NOTIFICATION_PREFERENCES":"#intent_category_notification_preferences\r\n","AT command type BASIC used with\n ":"AT命令类型基本使用\r\n \r\n","android.animation.IntArrayEvaluator.IntArrayEvaluator(int[])":"android.animation.intarrayevaluator.intarrayevaluator（int []）\r\n","Ask the authenticator for a localized label for the given authTokenType.":"向验证者询问给定的authtokentype的局部标签。\r\n","android.animation.ValueAnimator.getRepeatMode()":"android.animation.valueAnimator.getRepeatMode（）\r\n","Create a policy object and set it to install update automatically as soon as one is\n            available.":"创建一个策略对象并将其设置为在一个人之后立即自动安装更新\r\n            可用的。\r\n","Returns a PendingIntent you can start to show a control panel for the\n            given running service.":"返回悬念的人，您可以开始显示一个控制面板\r\n            给定的运行服务。\r\n","Returns the duration from posting after which this notification should be canceled by the\n            system, if it's not canceled already.":"返回发布的持续时间，之后应取消此通知\r\n            系统，如果尚未取消。\r\n","Called when a panel's menu item has been selected by the user.":"用户选择面板菜单项时致电。\r\n","android.app.RemoteInput.EDIT_CHOICES_BEFORE_SENDING_DISABLED":"android.app.remoteinput.edit_choices_before_sending_disabled\r\n","android.app.NativeActivity.META_DATA_LIB_NAME":"android.app.nativeactivity.meta_data_lib_name\r\n","Get the current connection state of a profile.":"获取配置文件的当前连接状态。\r\n","Creates a new presentation that is attached to the specified display\n            using the default theme.":"创建一个附加到指定显示的新演示文稿\r\n            使用默认主题。\r\n","#onRestart":"#onrestart\r\n","#getMessage()":"#getMessage（）\r\n","\n          How the main window of the activity interacts with the window\n          containing hte on-screen soft keyboard.\n        ":"\r\n          活动的主窗口如何与窗口相互作用\r\n          包含HTE屏幕上软键盘。\r\n        \r\n","Returns performed gesture id.":"返回执行的手势ID。\r\n","android.accessibilityservice.AccessibilityService.GESTURE_SWIPE_LEFT_AND_DOWN":"Android.AccessibilityService.Accessibilityservice.gesture_swipe_left_and_down\r\n","android.app.appsearch.SearchSpec.getSnippetCountPerProperty()":"android.app.appsearch.searchspec.getsnippetcountperproperty（）\r\n","android.app.appsearch.RemoveByDocumentIdRequest":"android.app.appsearch.removebydocumentidrequest\r\n","Drawable used as a background for activated items.":"可绘制用作激活项目的背景。\r\n","Creates multiple notification channel groups.":"创建多个通知渠道组。\r\n","Retrieve the window manager for showing custom windows.":"检索显示自定义窗口的窗口管理器。\r\n","Finds and returns a remote input and its corresponding action.":"查找并返回远程输入及其相应的操作。\r\n","Width of the stroke used to draw the gesture.":"用来绘制手势的中风的宽度。\r\n","Indicates what shape to fill with a gradient.":"指示用梯度填充的形状。\r\n","android.app.LauncherActivity.itemForPosition(int)":"android.app.launcheractivity.itemforposition（int）\r\n","If true, makes the bottom edge of this view match the bottom edge of the parent.":"如果为true，则使此视图的底部边缘与父底边缘匹配。\r\n","android.app.NotificationChannel.setSound(android.net.Uri, android.media.AudioAttributes)":"android.app.notificationChannel.setsound（android.net.uri，android.media.audioAttributes）\r\n","Retrieve the current height of the ActionBar.":"检索动作栏的当前高度。\r\n","Get the recommended timeout for non-interactive controls. -or- Set the recommended time that non-interactive controls need to remain on the screen to\n            support the user.":"获取针对非相互作用控件的推荐超时。 - 或 - 设置非交互控制需要保留在屏幕上的建议时间\r\n            支持用户。\r\n","android.bluetooth.BluetoothGatt.readCharacteristic(android.bluetooth.BluetoothGattCharacteristic)":"android.bluetooth.bluetoothgatt.ReadCharacteristic（android.bluetooth.bluetoothgattcharacteristic）\r\n","The GameManager allows system apps to modify and query the game mode of apps.":"GameManager允许系统应用程序修改和查询应用程序的游戏模式。\r\n","Retrieve a local system update policy set previously by ":"检索以前设置的本地系统更新策略\r\n","Updates the info for the supplied AppWidget provider.":"更新提供的AppWidget提供商的信息。\r\n","android.app.appsearch.SetSchemaResponse.getIncompatibleTypes()":"android.app.appsearch.setschemaresponse.getIncompatibletypes（）\r\n","AccessibilityButtonCallback":"可访问性ButtonCallback\r\n","Array of all ":"所有的数组\r\n","The data URI to assign to the Intent, as per\n            ":"根据指定的数据URI，根据\r\n            \r\n","AppSearchResult#RESULT_NOT_FOUND":"AppSearchResult＃result_not_found\r\n","#ENCRYPTION_STATUS_ACTIVATING":"#encryption_status_activating\r\n","\n      Generates the ":"\r\n      生成\r\n"," that is sent.":" 这是发送的。\r\n","android.accounts.AuthenticatorDescription.CREATOR":"android.accounts.authenticatordescription.creator\r\n","android.app.ProgressDialog.getMax()":"android.app.progressdialog.getmax（）\r\n","Activity Action: Show settings for choosing wallpaper.":"活动动作：显示选择墙纸的设置。\r\n",", or throws an IllegalArgumentException if the ID is invalid, or there is\n            no matching view in the hierarchy.":"，如果ID无效或有\r\n            层次结构中没有匹配的视图。\r\n","Activity#onDestroy":"活动＃ondestroy\r\n","BigPictureStyle#bigLargeIcon(android.graphics.Bitmap)":"bigpicturestyle＃biglargeicon（android.graphics.bitmap）\r\n","android.app.DownloadManager.ERROR_DEVICE_NOT_FOUND":"android.app.downloadmanager.error_device_not_found\r\n","\n          A MIME media type, such as ":"\r\n          MIME媒体类型，例如\r\n","AT command type READ used with\n ":"在命令类型上读取\r\n \r\n",", though if the process gets an ANR\n            but recovers, and dies for another reason later, this trace will be included\n            in the record of ":"，尽管如果该过程获得ANR\r\n            但是恢复，死于另一个原因，稍后将包括此痕迹\r\n            记录\r\n","Delegation of application uninstall block.":"申请卸载块的委托。\r\n","android.app.KeyguardManager.createConfirmDeviceCredentialIntent(java.lang.CharSequence, java.lang.CharSequence)":"android.app.keyguardmanager.createconfirmdevicecredentertent（java.lang.charsequence，java.lang.charsequence）\r\n","Allows an application to watch and control how activities are\n         started globally in the system.":"允许应用程序观看和控制活动的方式\r\n         从系统开始。\r\n",". -or- Controls whether this fragment should be shown in a dialog.":"。 - 或 - 控制该片段是否应在对话框中显示。\r\n","Encapsulates a request to retrieve documents by namespace and IDs from the ":"封装了通过名称空间检索文档的请求和从\r\n","The user has performed a four-finger swipe down gesture on the touch screen.":"用户在触摸屏上进行了四指滑动手势。\r\n","Set the view to display in that dialog, specifying the spacing to appear around that\n            view.":"设置要在该对话框中显示的视图，指定围绕该的间距\r\n            看法。\r\n","android.app.FragmentManager.registerFragmentLifecycleCallbacks(android.app.FragmentLifecycleCallbacks, boolean)":"android.app.fragmentManager.RegisterFragmentLifeCyClecallbacks（android.app.FragmentLifeCyClecallbacks，boolean）\r\n","Context menu ID for the \"Copy\" menu item to copy the currently\n       selected (or all) text in a text view to the clipboard.":"“复制”菜单项的上下文菜单ID用于复制当前\r\n       在剪贴板的文本视图中选择（或所有）文本。\r\n","to turn off default handling of\n keys.":"关闭默认处理\r\n 钥匙。\r\n","Callback interface used to deliver LE scan results.":"回调接口用于提供LE扫描结果。\r\n","The application's restore operation has completed.":"应用程序的还原操作已经完成。\r\n","), but is not audibly intrusive.":"），但没有听到侵入性。\r\n","Definitions":"定义\r\n","android.accounts.AccountManager.confirmCredentials(android.accounts.Account, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)":"android.accounts.accountmanager.confirmcredentials（android.accounts.accounts.account，android.os.bundle，android.app.Activity，android.accounts.accountmanagercallback，android.os.handler）\r\n","Results should be grouped together by package for the purpose of enforcing a limit on the\n            number of results returned per package.":"结果应按包组合在一起，以实施限制\r\n            每个软件包返回的结果数。\r\n","Removes any internal references to a dialog managed by this Activity.":"删除该活动管理的对话框的任何内部引用。\r\n","Notification category: social network or sharing update.":"通知类别：社交网络或共享更新。\r\n","android.app.appsearch.SearchSpec.ORDER_ASCENDING":"android.app.appsearch.searchspec.order_ascending\r\n","If true, the animation will only run a single time and then\n             stop.":"如果是真的，动画只会运行一次，然后\r\n             停止。\r\n","android.app.appsearch.SearchSpec.getFilterSchemas()":"android.app.appsearch.searchspec.getFilterschemas（）\r\n","Column name for suggestions cursor.":"建议光标的列名。\r\n","Saves the state for all Fragments.":"为所有碎片保存状态。\r\n","Set to true to tell the SyncManager that this SyncAdapter supports\n             multiple simultaneous syncs for the same account type and authority.":"设置为TRUE告诉SyncManager此SyncAdapter支持\r\n             多个同时同步的同一账户类型和权限。\r\n","AppWidgetHost provides the interaction with the AppWidget service for apps,\n            like the home screen, that want to embed AppWidgets in their UI.":"AppWidgethost提供了与应用程序的AppWidget服务的交互，\r\n            就像主屏幕一样，想要将AppWidgets嵌入UI中。\r\n","Callback interface for a client to interact with the manager.":"可供客户端与经理交互的回调接口。\r\n","Called by a profile owner or device owner to retrieve the certificate installer for the user,\n            or ":"由配置文件所有者或设备所有者调用以检索用户的证书安装程序，\r\n            或者\r\n","\n            to obtain the query string from Intent.":"\r\n            从意图获取查询字符串。\r\n","Creates a new presentation that is attached to the specified display\n            using the optionally specified theme.":"创建一个附加到指定显示的新演示文稿\r\n            使用可选的指定主题。\r\n","android.app.SearchableInfo.getSuggestIntentAction()":"android.app.searchableInfo.getSuggestIntEntAction（）\r\n","replaceable":"可更换\r\n","android.app.FragmentManager":"Android.App.FragmentManager\r\n","android.app.Activity.onContextItemSelected(android.view.MenuItem)":"android.app.activity.oncontextitemselected（android.view.menuitem）\r\n","android.app.AutomaticZenRule.setInterruptionFilter(int)":"android.app.automaticzenrule.setInterruptionFilter（int）\r\n","Intent action to launch an activity to display all downloads.":"意图行动启动活动以显示所有下载。\r\n","#setSchema":"#setschema\r\n","The minimum width the window is allowed to be, along the minor\n             axis of the screen.":"允许窗户的最小宽度沿未成年人\r\n             屏幕的轴。\r\n","Activity#onPause":"活动＃onpause\r\n","The icon to display for this AppWidget in the AppWidget picker.":"在AppWidget Picker中显示此AppWidget的图标。\r\n"," and taken as a parameter of several methods of ":" 并作为几种方法的参数\r\n","android.app.appsearch.PutDocumentsRequest":"android.app.appsearch.putdocumentsRequest\r\n"," of keys mapped to instances of the value type for all successful\n            individual results.":" 映射到所有成功的价值类型实例的键\r\n            个人结果。\r\n","Called by a device or profile owner to retrieve the list of packages which are restricted\n            by the admin from using metered data.":"由设备或配置文件所有者调用以检索限制的软件包列表\r\n            通过使用计量数据的管理员。\r\n","android.app.Activity.showDialog(int)":"android.app.Activity.showdialog（int）\r\n","android.app.ActivityManager#setProcessStateSummary(byte[])\n            ActivityManager.setProcessStateSummary(byte[])":"android.app.ActivityManager＃setProcessStatesummary（byte []）\r\n            ActivityManager.setProcessStatesummary（byte []）\r\n","Destroys the loaders and, if their state is not being retained, removes them.":"摧毁装载机，如果没有保留其状态，请将其删除。\r\n","Called by device owner or profile owner of an organization-owned managed profile to retrieve\n            all new security logging entries since the last call to this API after device boots.":"由设备所有者或组织拥有的托管个人资料的所有者调用以检索\r\n            自上次拨打设备启动后的API以来，所有新的安全记录条目。\r\n","android.app.AlertDialog.AlertDialog(android.content.Context, int)":"android.app.alertdialog.alertdialog（android.content.context，int）\r\n","android.app.WallpaperManager.getBuiltInDrawable(int, int, boolean, float, float, int)":"android.app.wallpapermanager.getBuiltIndrawable（int，int，boolean，float，float，int）\r\n","Allows an application to open windows using the type\n         ":"允许应用程序使用该类型打开窗口\r\n         \r\n","\n            Pre-authenticate using the specified credentials.\n            ":"\r\n            使用指定的凭据进行预验证。\r\n            \r\n","Disable text entry into notifications on secure keyguard screens (e.":"禁用文本输入到安全钥匙屏幕上的通知（e。\r\n","The rules by which a widget can be resized.":"可以调整小部件的规则。\r\n","android.app.admin.DevicePolicyManager.getPersonalAppsSuspendedReasons(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getPersonalappsssuspendedreasons（android.content.componentname）\r\n","android.app.TaskStackBuilder.addParentStack(android.content.ComponentName)":"android.app.taskstackbuilder.addparentstack（android.content.componentname）\r\n","Action to lock the screen":"锁定屏幕的动作\r\n"," with a result code, message and cause.":" 带有结果代码，消息和原因。\r\n","Grants a runtime permission to a package for a user.":"将运行时许可授予用户的软件包。\r\n","Defines the maximum number of rows displayed.":"定义显示的最大行数。\r\n","Controls whether links such as urls and email addresses are\n         automatically found and converted to clickable links.":"控制URL和电子邮件地址等链接是否为\r\n         自动找到并转换为可单击的链接。\r\n","Constructs and returns a PropertyValuesHolder with a given property name to use\n            as a multi-float setter.":"构建并返回具有给定属性名称的属性值持有人\r\n            作为多浮力设置器。\r\n","Label used to denote the clip data type used for remote input transport":"用于表示用于远程输入传输的剪辑数据类型的标签\r\n","A flag indicating the animation that runs on those items that are changing\n due to a new item appearing in the container.":"指示动画在那些正在更改的项目上运行的旗帜\r\n 由于新项目出现在容器中。\r\n","android.app.NotificationManager.getImportance()":"android.app.notificationmanager.getimportance（）\r\n","Large ProgressBar style.":"大型Progressbar风格。\r\n","Gets the duration on one of the animation objects used by this transition.":"在此过渡使用的动画对象之一上获取持续时间。\r\n","Characteristic permission: Allow encrypted writes":"特征许可：允许加密写作\r\n","Retrieve a IntentSender object that wraps the existing sender of the PendingIntent":"检索包裹悬浮物现有发件人的意图人对象\r\n","Start receiving onAppWidgetChanged calls for your AppWidgets.":"开始接收您的AppWidgets的onappwidgetChanged呼叫。\r\n","android.app.appsearch.exceptions.AppSearchException.toAppSearchResult()":"android.app.appsearch.exceptions.appsearchexception.toappsearchresult（）\r\n","android.app.usage.NetworkStats.hasNextBucket()":"android.app.usage.networkstats.hasnextbucket（）\r\n","Finds a view that was  identified by the ":"找到一个由\r\n","#getActiveRequest":"#getactiverequest\r\n","A constructor for a full AuthenticatorDescription":"完整的AuthenTicatorDescription的构造函数\r\n","\n            for activities.":"\r\n            进行活动。\r\n"," fields are defined as follows: ":" 字段定义如下：\r\n","android.accessibilityservice.AccessibilityService.SHOW_MODE_HIDDEN":"Android.AccessibilityService.Accesseribilityservice.show_mode_hidden\r\n","The user has performed a three-finger triple tap gesture on the touch screen.":"用户在触摸屏上执行了三指三重水龙头手势。\r\n","android.app.admin.NetworkEvent.getPackageName()":"android.app.admin.networkevent.getpackagename（）\r\n","android.app.admin.DevicePolicyManager.isOverrideApnEnabled(android.content.ComponentName)":"android.app.admin.devicepolicymanager.isoverrideapnenabled（android.content.componentname）\r\n","Defines whether the ViewGroup will clip its drawing surface so as to exclude\n             the padding area.":"定义ViewGroup是否将其绘图表面夹住以排除\r\n             填充区。\r\n","PRIVATE_DNS_MODE_PROVIDER_HOSTNAME":"private_dns_mode_provider_hostname\r\n","Returns the namespace of the ":"返回名称空间\r\n","android.accounts.AccountManager.renameAccount(android.accounts.Account, java.lang.String, android.accounts.AccountManagerCallback, android.os.Handler)":"android.accounts.accountmanager.renameaccount（android.accounts.accounts.account，java.lang.string，android.accounts.accountmanagercallback，android.os.os.handler）\r\n","Indicates that keyguard has been dismissed.":"表示关键人物已被驳回。\r\n","android.app.blob.BlobHandle.getExpiryTimeMillis()":"android.app.blob.blobhandle.getExpiryTimeMillis（）\r\n","android.app.UiAutomation.takeScreenshot()":"android.app.uiautomation.takescreenshot（）\r\n","Whether the item is capable of displaying a check mark.":"该项目是否能够显示复选标记。\r\n","android.app.usage.UsageStats.getLastTimeStamp()":"android.app.usage.usagestats.getlasttimestamp（）\r\n","android.app.usage.UsageStatsManager.STANDBY_BUCKET_RESTRICTED":"android.app.usage.usagestatsmanager.standby_bucket_restricted\r\n","F:Android.Accounts.AccountAuthenticatorResponse.OnError":"F：android.accounts.accountauthenticatoresponse.onerror\r\n","The user has performed a two-finger double tap and hold gesture on the touch screen.":"用户已经执行了两指双击，并在触摸屏上保持手势。\r\n","An interpolator where the change starts backward then flings forward and\n       overshoots the target value and finally goes back to the final value.":"变更后向后启动然后向前飞行的插装器和\r\n       超出目标值并最终回到最终值。\r\n"," parameter is set to the\n            return value of the ":" 参数设置为\r\n            返回值\r\n"," and\n            related APIs for placing tabs within their action bar area.":" 和\r\n            相关的API用于将选项卡放置在其动作栏区域中。\r\n","#onSaveInstanceState":"#onsaveinstancestate\r\n","android.app.Notification.number":"android.app.notification.number\r\n","Specifies a background drawable for the bottom component of a split action bar.":"指定可为拆分操作栏的底部组件绘制的背景。\r\n","The amount of time, in milliseconds, to delay starting the animation after\n            ":"以毫秒为单位的时间延迟开始动画\r\n            \r\n","android.app.FragmentManagerNonConfig":"Android.App.FragmentManagernonConfig\r\n","Set a list of items to be displayed in the dialog as the content, you will be notified of the\n selected item via the supplied listener.":"设置要在对话框中显示的项目列表作为内容，将通知您\r\n 通过提供的听众选择的项目。\r\n","Provides the interface through which a ":"提供通过\r\n","AppSearchBatchResult#getSuccesses":"AppSearchBatchResult＃getuccesses\r\n","android.app.WallpaperColors.getPrimaryColor()":"android.app.wallpapercolors.getPrimaryColor（）\r\n",": the\n            given caller is not allowed to perform the given operation, and this attempt should\n            cause it to have a fatal error, typically a ":"： 这\r\n            给定调用者不允许执行给定的操作，此尝试应\r\n            导致它发生致命错误，通常是\r\n","Returns true if the app should recreate the task when navigating 'up' from this activity\n            by using targetIntent.":"如果应用程序应在此活动中“向上”导航时，请返回true。\r\n            通过使用targetintent。\r\n","android.bluetooth.BluetoothAdapter.getBluetoothLeScanner()":"android.bluetooth.bluetoothadapter.getBluetoothlescanner（）\r\n","Flag to specify that the entry can be used for query refinement, i.":"标志以指定该条目可用于查询细化，i。\r\n","If this flag is set the system will regard views that are not important for accessibility in addition to the ones that are important for accessibility.":"如果设置了此标志，则系统将考虑对于可访问性而对可访问性的视图，这些视图对于可访问性很重要。\r\n","android.app.Activity.onCreate(android.os.Bundle, android.os.PersistableBundle)":"android.app.activity.oncreate（android.os.bundle，android.os.persistablebundle）\r\n"," on the Notification Builder that this Style is attached to.":" 在通知构建器上，该样式已附加到。\r\n","android.app.AppOpsManager.OPSTR_CALL_PHONE":"android.app.appopsmanager.opptr_call_phone\r\n","BackupDataInputStream":"BackupDatainputStream\r\n","Returns whether or not notifications posted to ":"返回是否发布通知\r\n","Return primary action that will initiate the recovery.":"返回将启动恢复的主要操作。\r\n","Allows an application to retrieve private information about\n         the current top activity, such as any assist context it can provide.":"允许应用程序检索有关的私人信息\r\n         当前的顶级活动，例如它可以提供的任何辅助上下文。\r\n","android.animation.StateListAnimator.addState(int[], android.animation.Animator)":"android.animation.statelistanimator.addstate（int []，android.animation.animator）\r\n","android.app.Dialog.Dialog(android.content.Context)":"android.app.dialog.dialog（android.content.context）\r\n","Write an entire file as part of a full-backup operation.":"将整个文件写为全方位操作的一部分。\r\n","Builder#setProgress(int, int, boolean)":"构建器＃setProgress（int，int，boolean）\r\n","#setSecurityLoggingEnabled":"#setsecurityLoggingEnabled\r\n","android.app.Activity.onRestart()":"android.app.activity.onrestart（）\r\n","Constructs and returns a PropertyValuesHolder with a given property name to use\n            as a multi-int setter.":"构建并返回具有给定属性名称的属性值持有人\r\n            作为多INT二阶。\r\n","Select the default key handling for this activity.":"选择此活动的默认键处理。\r\n","android.app.RemoteAction.getIcon()":"android.app.remoteaction.geticon（）\r\n","#getAuthToken(Account, String, boolean, AccountManagerCallback, Handler)":"#getauthtoken（帐户，字符串，布尔值，AccountManagerCallback，处理程序）\r\n","Allows for an adjustment of the Z ordering of the content being\n             animated for the duration of the animation.":"允许调整内容的z顺序\r\n             动画在动画的持续时间内进行动画。\r\n","Results should be grouped together by namespace for the purpose of enforcing a limit on the\n            number of results returned per namespace.":"结果应按名称空间组合在一起，以实施限制\r\n            每个名称空间返回的结果数。\r\n","Flag indicating whether action modes should overlay window content\n             when there is not reserved space for their UI (such as an Action Bar).":"指示操作模式是否应覆盖窗口内容的标志\r\n             当没有为其UI的保留空间时（例如动作栏）。\r\n","Account":"帐户\r\n","#EXTRA_PROVISIONING_WIFI_SSID":"#EXTRA_PROVISIONING_WIFI_SSID\r\n","ContentResolver#query(android.net.Uri , String[], String, String[], String)":"contentResolver＃query（android.net.uri，string []，string，string []，string）\r\n","android.app.Activity.recreate()":"android.app.activity.recreate（）\r\n"," call has been made\n            on the Activity, so this instance is now dead.":" 已经打了电话\r\n            在活动上，因此此实例现在已经死了。\r\n","Forgets a saved password.":"忘记了保存的密码。\r\n","will not":"将不会\r\n","\n          Whether an instance of the activity can be launched into the process\n          of the component that started it.\n        ":"\r\n          是否可以将活动实例启动到该过程中\r\n          启动它的组件。\r\n        \r\n","Return a content description representing the action.":"返回代表动作的内容描述。\r\n","android.app.AsyncNotedAppOp.getOp()":"android.app.asyncnotedappop.getop（）\r\n","A Bundle in the extras delivered by ":"由\r\n","Present the text in ALL CAPS.":"将文本呈现在所有帽子上。\r\n","Returns the timestamp of the event being reported in milliseconds, the difference between\n            the time the event was reported and midnight, January 1, 1970 UTC.":"返回以毫秒为单位报告的事件的时间戳\r\n            据报道，该活动的时间以及1970年1月1日UTC的午夜。\r\n","android.app.ActionBar.setHomeButtonEnabled(boolean)":"Android.App.ActionBar.SethomeButtonEnabled（布尔值）\r\n","android.app.Dialog.unregisterForContextMenu(android.view.View)":"android.app.dialog.unregisterforcontextmenu（android.view.view）\r\n","android.app.Activity.stopLockTask()":"android.app.activity.stoplocktask（）\r\n","Flag indicating whether the given application component is available\n         to other applications.":"指示给定应用程序组件是否可用的标志\r\n         到其他应用程序。\r\n","android.accessibilityservice.AccessibilityServiceInfo.getDescription()":"Android.AccessibilityService.Accessibilityserviceinfo.getDescription（）\r\n","Displayed when a web request failed because the protocol of the server is not supported.":"由于不支持服务器的协议，因此在Web请求失败时显示。\r\n","Get the cursor row ID of the currently selected list item.":"获取当前选择的列表项目的光标行ID。\r\n","JobWorkItem":"JobWorkitem\r\n","android.app.Fragment.getActivity()":"android.app.fragment.getactivity（）\r\n","Give this Tab an arbitrary object to hold for later use.":"将此选项卡作为任意对象，以供以后使用。\r\n","The maximum level allowed for this item.":"此项目允许的最大级别。\r\n","Drawable to use as the \"track\" that the switch thumb slides within.":"可以用作开关拇指在其中滑动的“轨道”。\r\n","#set(int, long, PendingIntent)":"#set（int，long，pendendintent）\r\n","Called when the dialog is starting.":"对话框启动时调用。\r\n","android.app.DialogFragment.show(android.app.FragmentTransaction, java.lang.String)":"android.app.dialogfragment.show（android.app.FragmentTransaction，java.lang.string）\r\n","\n            intents to request the local Bluetooth name.":"\r\n            意图要求本地蓝牙名称。\r\n","android.app.SyncNotedAppOp":"Android.App.SyncnotedAppop\r\n","The preferred right bound for an expandable list item's indicator.":"首选的可扩展列表项目指标的权利绑定。\r\n",",\n             indicating that the Drawable is in a view that is hardware accelerated.":"，，，，\r\n             表明该绘制可在硬件加速的视图中。\r\n","android.app.NotificationManager.BUBBLE_PREFERENCE_NONE":"android.app.notificationmanager.bubble_preference_none\r\n","Action to bring up the Accessibility Button's chooser menu":"采取行动来提出可访问性按钮的选择器菜单\r\n","android.app.Fragment.onPause()":"android.app.fragment.onpause（）\r\n","Stub activity that launches another activity (and then finishes itself)\n            based on information in its component's manifest meta-data.":"启动另一个活动的存根活动（然后完成）\r\n            基于其组件清单元数据中的信息。\r\n","when a storage issue arises which doesn't fit under any\n other error code. ":"当出现存储问题时，任何不适合\r\n 其他错误代码。\r\n","A write operation exceeds the maximum length of the attribute":"写操作超过属性的最大长度\r\n","Control whether the list is being displayed.":"控制列表是否正在显示。\r\n",".\n            All the instances of ":"。\r\n            所有实例\r\n","Allows an application to get information about the currently\n         or recently running tasks.":"允许应用程序获取有关当前的信息\r\n         或最近运行的任务。\r\n","A result returned from ":"结果从\r\n","Get the upper limit on a gesture's duration.":"获取手势持续时间的上限。\r\n","The standard size (both width and height) of an application icon that\n         will be displayed in the app launcher and elsewhere.":"应用程序图标的标准尺寸（宽度和高度）\r\n         将显示在应用程序启动器和其他地方。\r\n","F:Android.App.DownloadManager+Request.SetNotificationVisibility":"F：android.app.downloadmanager+request.setNotification Visibility\r\n","Configuration#UI_MODE_TYPE_TELEVISION":"配置＃ui_mode_type_television\r\n","Return the count of the number of times this work item has been delivered\n            to the job.":"返回该工作项目已交付的次数的计数\r\n            工作。\r\n","android.accessibilityservice.AccessibilityServiceInfo.FLAG_SEND_MOTION_EVENTS":"Android.AccessibilityService.Accessibilityserviceinfo.flag_send_motion_events\r\n","DeviceDefault light theme for dialog windows and activities.":"Devicedefault Light主题用于对话窗口和活动。\r\n","android.app.slice.SliceManager.getPinnedSpecs(android.net.Uri)":"android.app.slice.slicemanager.getpinnedspecs（android.net.uri）\r\n","android.app.admin.DevicePolicyManager.getCameraDisabled(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getCamerAdisabled（android.content.componentname）\r\n","Check if it is possible to ask for a next bucket in the enumeration.":"检查是否可以在枚举中要求下一个桶。\r\n","android.accessibilityservice.AccessibilityService.getServiceInfo()":"Android.AccessibilityService.Accesseribilityservice.getServiceInfo（）\r\n"," for the user that has ":" 对于具有\r\n","android.app.WallpaperInfo.getPackageName()":"android.app.wallpaperinfo.getpackagename（）\r\n","Specifies padding that should be applied to the left and right sides of\n             system-provided items in the bar.":"指定应应用于的填充\r\n             栏中的系统提供的项目。\r\n","Gets the set of ":"得到一组\r\n","android.app.admin.SystemUpdatePolicy.getFreezePeriods()":"android.app.admin.systemupdatepolicy.getFreezeperiods（）\r\n",": reported by the wallpaper\n            host when the user releases a secondary pointer on an empty area\n            (not performing an action in the host).":"：由墙纸报道\r\n            当用户在空区域上释放辅助指针时主机\r\n            （不在主机中执行动作）。\r\n","Cancels a previously posted notification.":"取消先前发布的通知。\r\n","MIME type for suggestions data.":"建议数据的MIME类型。\r\n","#POLICY_DISABLE_CAMERA":"#policy_disable_camera\r\n","android.app.people.PeopleManager.clearStatus(java.lang.String, java.lang.String)":"android.app.people.peoplemanager.clearstatus（java.lang.string，java.lang.string）\r\n","Base class for implementing a device administration component.":"用于实现设备管理组件的基类。\r\n","Default width of a key, in pixels or percentage of display width.":"键的默认宽度，以像素或显示宽度的百分比为单位。\r\n","android.animation.LayoutTransition.getAnimator(int)":"android.animation.layouttransition.getAnimator（int）\r\n","android.app.admin.DevicePolicyManager.setPasswordMinimumLetters(android.content.ComponentName, int)":"android.app.admin.devicepolicymanager.setpasswordwordwordminemletters（android.content.componentname，int）\r\n","android.app.RemoteInput.SOURCE_FREE_FORM_INPUT":"Android.App.RemoteInput.Source_free_form_input\r\n","Called by a profile or device owner to set the permitted input methods services for this\n            user.":"由配置文件或设备所有者调用以设置允许的输入方法服务\r\n            用户。\r\n","Initialize the contents of the menu for panel 'featureId'.":"初始化面板“功能ID”菜单的内容。\r\n","android.app.LauncherActivity.onSetContentView()":"android.app.launcheractivity.ontcontentview（）\r\n","android.app.FragmentHostCallback.onGetHost()":"Android.App.FragmentHostCallback.ongethost（）\r\n","android.app.ListFragment.setListAdapter(android.widget.ListAdapter)":"android.app.listfragment.setlistadapter（android.widget.listadapter）\r\n","#startActivity":"#startactivity\r\n","android.app.AlarmManager.setExactAndAllowWhileIdle(int, long, android.app.PendingIntent)":"android.app.alarmmanager.setexactandallowwhileidle（int，long，android.app.pendendintent）\r\n","UserManager#USER_OPERATION_ERROR_MANAGED_PROFILE":"USERMANAGER＃user_operation_error_managed_profile\r\n","Programmatically opens the options menu.":"以编程方式打开选项菜单。\r\n","android.bluetooth.BluetoothGatt.GATT_INVALID_ATTRIBUTE_LENGTH":"android.bluetooth.bluetoothgatt.gatt_invalid_attribute_length\r\n","#startUpdateCredentialsSession":"#startupdatecredentialssessess\r\n","Context#startActivity(Intent, android.os.Bundle)\n            Context.startActivity(Intent, Bundle)":"上下文＃startActivity（意图，android.os.bundle）\r\n            context.startactivity（意图，束）\r\n","Schedule an alarm to be delivered within a given window of time.":"安排在给定时间窗口内发出的警报。\r\n","The text used on the switch itself when in the \"on\" state.":"在“ ON”状态中，开关本身上使用的文本。\r\n","android.app.ListFragment.getListAdapter()":"android.app.listfragment.getListAdapter（）\r\n","Returns the list of permitted accessibility services set by this device or profile owner.":"返回该设备或配置文件所有者设置的允许可访问性服务列表。\r\n","The user has performed a swipe up gesture on the touch screen.":"用户在触摸屏上进行了滑动手势。\r\n","android.app.UiModeManager.ACTION_ENTER_DESK_MODE":"android.app.uimodemanager.action_enter_desk_mode\r\n","#AlertDialog(Context, int)":"#alertdialog（上下文，int）\r\n","Action sent to a device administrator when the user has successfully entered their device\n            or profile challenge password, after failing one or more times.":"用户成功输入其设备时发送给设备管理员的操作发送给设备管理员\r\n            或配置挑战密码，失败了一次或多次。\r\n","Sent to an ":"发送到一个\r\n","android.app.admin.DeviceAdminInfo.isVisible()":"android.app.admin.deviceadmininfo.isvisible（）\r\n"," to manage the backup of\n            ":" 管理备份\r\n            \r\n","The first day of week according to ":"一周的第一天\r\n","android.app.admin.DevicePolicyManager.installExistingPackage(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.installexistingpackage（android.content.componentname，java.lang.string）\r\n","android.app.WallpaperInfo.getShowMetadataInPreview()":"android.app.wallpaperinfo.getShowmetadatainpreview（）\r\n","Called by a device owner to request a bugreport.":"由设备所有者拨打要求BugReport。\r\n","android.app.FragmentManager.dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])":"android.app.fragmentManager.dump（java.lang.string，java.io.filedescriptor，java.io.printwriter，java.lang.string []）\r\n","android.bluetooth.BluetoothGattCallback.onCharacteristicChanged(android.bluetooth.BluetoothGatt, android.bluetooth.BluetoothGattCharacteristic)":"android.bluetooth.bluetoothgattcallback.oncharacteristicchanged（android.bluetooth.bluetoothgatt，android.bluetooth.bluetooth.bluetooth gluetoothgattharacteristic）\r\n","Widget is resizable in the vertical axis only.":"小部件仅在垂直轴上重新分配。\r\n","Returns the ID of document that was used.":"返回使用的文档ID。\r\n","android.app.Presentation.onDisplayRemoved()":"android.app.presentation.ondisplayRemaved（）\r\n","Radius of the top left corner.":"左上角的半径。\r\n","Called by an application that is administering the device to\n determine the requested setting for secure storage.":"通过将设备管理为\r\n 确定要求的安全存储设置。\r\n"," with no action bar and no status bar\n    and extending in to overscan region.":" 没有动作栏，没有状态栏\r\n    并延伸到扫描区域。\r\n","android.appwidget.AppWidgetHost.getAppWidgetIds()":"android.appwidget.appwidgethost.getappwidgetids（）\r\n","LocusId":"基因座\r\n","android.app.Fragment.getContext()":"android.app.fragment.getContext（）\r\n","android.app.slice.SliceManager":"android.app.slice.slicemanager\r\n","#ENCRYPTION_STATUS_INACTIVE":"#encryption_status_inactive\r\n","Default color of foreground panel imagery.":"前景面板图像的默认颜色。\r\n","Provides an immutable reference to an entity that appears repeatedly on different surfaces of the\n            platform.":"提供了一个不可变的引用，该实体反复出现在该实体上的不同表面\r\n            平台。\r\n","An intent extra attached to the ":"意图附加到\r\n","android.accounts.AbstractAccountAuthenticator.KEY_CUSTOM_TOKEN_EXPIRY":"android.accounts.abstractaccountauthenticator.key_custom_token_expiry\r\n","android.app.admin.DevicePolicyManager.DELEGATION_CERT_SELECTION":"android.app.admin.devicepolicymanager.delegation_cert_selection\r\n","android.app.admin.DevicePolicyManager.setCrossProfileContactsSearchDisabled(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setCrossprofilecontactsssearchdisabled（android.content.componentname，boolean）\r\n","#ENCRYPTION_STATUS_UNSUPPORTED":"#encryption_status_unsupported\r\n","android.media.AudioAttributes#USAGE_ASSISTANCE_ACCESSIBILITY":"android.media.audioAttributes＃USAGE_ASSISTANCE_ACCOSSIBLY\r\n","Does a conversion from the target type back to the source type.":"将目标类型转换回源类型。\r\n","android.app.Fragment.startActivityForResult(android.content.Intent, int, android.os.Bundle)":"android.app.fragment.startactivityForresult（android.content.intent，int，android.os.bundle）\r\n","android.app.Fragment.getView()":"android.app.fragment.getView（）\r\n","Allows an application to find out the space used by any package.":"允许应用程序找出任何软件包使用的空间。\r\n","Menu ID to perform a \"start selecting text\" operation.":"菜单ID执行“开始选择文本”操作。\r\n","Retrieve the current password history length for a particular admin or all admins that\n            set restrictions on this user and its participating profiles.":"检索特定管理员或所有管理员的当前密码历史记录长度\r\n            设置该用户及其参与资料的限制。\r\n","Constant value for ":"恒定值\r\n","M:Android.App.AppOpsManager.StartOp(System.String,System.Int32,System.Int32)":"m：android.app.appopsmanager.startop（System.String，System.int32，System.int32）\r\n","android.app.usage.NetworkStats":"android.app.usage.networkstats\r\n","This is the superclass for classes which provide basic support for animations which can be\n            started, ended, and have <code>AnimatorListeners</code> added to them.":"这是为动画提供基本支持的课程的超类\r\n            启动，结束并具有<code> AnimatorListeners </code>添加到他们中。\r\n"," class exposes JNI Global, Local,\n        Weak-Global-related functionality which is not exposed by the\n        ":" 班级公开JNI Global，本地，\r\n        与全球相关的弱功能，并未暴露\r\n        \r\n","android.animation.Animator.isStarted()":"android.animation.animator.isstarted（）\r\n","android.app.Activity.dispatchGenericMotionEvent(android.view.MotionEvent)":"android.app.activity.dispatchGenericMotionEvent（android.view.motionevent）\r\n","android.app.SearchableInfo.getSuggestSelection()":"android.app.searchableInfo.getSuggestSelection（）\r\n","android.app.Instrumentation.getComponentName()":"android.app.instrumentation.getComponentname（）\r\n","Show the context menu for the currently focused view and executes a\n            particular context menu item.":"显示当前重点视图的上下文菜单并执行\r\n            特定上下文菜单项。\r\n","A dark Holo shade of orange \n":"橙色的深色整体阴影\r\n\r\n","Default vertical divider between menu items.":"菜单项之间的默认垂直分隔线。\r\n","Makes the bottom edge of this view match the bottom edge of the given anchor view ID.":"使此视图的底部边缘与给定锚视图ID的底部边缘匹配。\r\n","android.app.admin.DeviceAdminInfo.USES_POLICY_RESET_PASSWORD":"android.app.admin.deviceadmininfo.uses_policy_reset_password\r\n","#unsafeCheckOpNoThrow(String, int, String)":"#unsafecheckopnothrow（字符串，int，string）\r\n"," natively.\n            ":" 本地。\r\n            \r\n","java.util.Map":"java.util.map\r\n","android.app.slice.SliceItem.getRemoteInput()":"android.app.slice.sliceitem.getRemoteInput（）\r\n","Exception thrown when trying to send through a PendingIntent that\n has been canceled or is otherwise no longer able to execute the request.":"试图发送悬浮物的例外\r\n 已被取消或不再能够执行请求。\r\n","android.accounts.AbstractAccountAuthenticator.editProperties(android.accounts.AccountAuthenticatorResponse, java.lang.String)":"android.accounts.abstractaccountauthenticator.editproperties（android.accounts.accountauthenticatorestorsponse，java.lang.lang.string）\r\n","Lets you define a number of Animators that will run on the attached View depending on the View's\n            drawable state.":"让您定义许多动画师，这些动画师将根据视图的视图运行\r\n            可绘制的状态。\r\n","android.app.Dialog.dismiss()":"android.app.dialog.dismiss（）\r\n"," for a conversation.":" 进行对话。\r\n","Text color, typeface, size, and style for small text inside of a popup menu.":"弹出菜单中的小文本的文本颜色，字体，大小和样式。\r\n","Specify a URI authority port that is handled, as per\n             ":"指定所处理的URI权限端口\r\n             \r\n","android.accessibilityservice.AccessibilityServiceInfo.getNonInteractiveUiTimeoutMillis()":"android.accosconibilityservice.Accessibilityserviceinfo.getNonInteractiveUitimeTimeTmillis（）\r\n","android.app.backup.BackupManager.requestRestore(android.app.backup.RestoreObserver)":"android.app.backup.backupmanager.requestrestore（android.app.backup.restoreobserver）\r\n","This sets the target api level for the type.":"这为类型设置了目标API级别。\r\n","android.animation.LayoutTransition.APPEARING":"android.animation.layouttransition.Pappearch\r\n"," or a subcomponent.":" 或子组件。\r\n","android.app.Service.onDestroy()":"android.app.service.ondestroy（）\r\n",",\n             set when the user is pressing down in a view.":"，，，，\r\n             当用户在视图中按下时设置。\r\n","android.app.UiModeManager.ENABLE_CAR_MODE_GO_CAR_HOME":"android.app.uimodemanager.enable_car_mode_go_car_home\r\n","#startOp":"#startop\r\n","android.accounts.AccountManager.KEY_PASSWORD":"android.accounts.accountmanager.key_password\r\n","Returns all CA certificates that are currently trusted, excluding system CA certificates.":"返回当前信任的所有CA证书，不包括系统CA证书。\r\n","Gets the current list of listeners for layout changes.":"获取当前用于布局更改的侦听器列表。\r\n","Gets whether the update is a security patch.":"获取更新是否为安全补丁。\r\n","android.app.Fragment.getReturnTransition()":"Android.App.Fragment.GetReturnTransition（）\r\n"," - the current status of the\n            rule is unknown at your target sdk version, and you should continue to provide state changes\n            via ":"  - 当前状态\r\n            您的目标SDK版本未知规则，您应该继续提供状态更改\r\n            通过\r\n","when the download is paused for some other reason.":"当下载暂停时，出于某些其他原因。\r\n","An intent extra that contains one appWidgetId.":"一个包含一个AppWidgetID的意图。\r\n","android.app.ProgressDialog.show(android.content.Context, java.lang.CharSequence, java.lang.CharSequence)":"android.app.progressdialog.show（android.content.context，java.lang.charsequence，java.lang.CharSequence）\r\n","Load user-visible description associated with this device admin.":"加载与此设备管理员关联的用户可见描述。\r\n","android.app.admin.DevicePolicyManager.getActiveAdmins()":"android.app.admin.devicepolicymanager.getactiveadmins（）\r\n","android.app.admin.DevicePolicyManager.ACTION_PROVISIONING_SUCCESSFUL":"android.app.admin.devicepolicymanager.action_provisioning_successful\r\n"," objects that are currently\n            listening for events on this <code>Animator</code> object.":" 当前的对象\r\n            在此<code> Animator </code>对象上聆听事件。\r\n","android.app.RemoteInput.EDIT_CHOICES_BEFORE_SENDING_AUTO":"android.app.remoteinput.edit_choices_before_sending_auto\r\n","android.app.NativeActivity":"android.app.nativeactivity\r\n","Display#DEFAULT_DISPLAY":"显示＃default_display\r\n","android.app.Activity.onDestroy()":"android.app.activity.ondestroy（）\r\n","The XML keyboard layout of any popup keyboard.":"任何弹出键盘的XML键盘布局。\r\n","A String extra holding the URL-safe base64 encoded SHA-256 hash of the file at download\n            location specified in ":"一个字符串额外持有下载时文件的URL-SAFE BASE64编码的sha-256哈希\r\n            指定的位置\r\n","Called by a profile owner or device owner to grant access to privileged certificate\n            manipulation APIs to a third-party certificate installer app.":"由个人资料所有者或设备所有者拨打授予特权证书的访问权限\r\n            操作第三方证书安装程序应用程序。\r\n","This method is called whenever the user chooses to navigate Up within your application's\n            activity hierarchy from the action bar.":"每当用户选择在您的应用程序中导航时，此方法都会调用\r\n            活动栏的活动层次结构。\r\n","android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_REMOTE_INPUT":"android.app.admin.devicepolicymanager.keyguard_disable_remote_input\r\n","#startSearch":"＃开始寻找\r\n","#WIPE_EXTERNAL_STORAGE":"#wipe_external_storage\r\n","android.app.slice.SliceItem.getHints()":"android.app.slice.sliceitem.gethints（）\r\n"," seconds.\n            ":" 秒。\r\n            \r\n","Request an MTU size used for a given connection.":"请求用于给定连接的MTU尺寸。\r\n","android.animation.ValueAnimator.addUpdateListener(android.animation.AnimatorUpdateListener)":"android.animation.valueAnimator.AddupDateListener（android.animation.animatorupdateListener）\r\n"," key: An array of CharSequences to show in ":" 钥匙：一系列char序列显示\r\n","F:Android.App.Activity.SetDefaultKeyMode":"F：android.app.activity.setDefaultKeymode\r\n","android.app.admin.DevicePolicyManager.NEARBY_STREAMING_SAME_MANAGED_ACCOUNT_ONLY":"android.app.admin.devicepolicymanager.nearby_streaming_same_managed_account_only\r\n","Return the application that owns this service.":"返回拥有此服务的应用程序。\r\n","BluetoothGatt#CONNECTION_PRIORITY_HIGH":"Bluetoothgatt＃Connection_priority_high\r\n","TLS":"TLS\r\n","android.app.Activity.onAttachedToWindow()":"android.app.activity.onattachedtowindow（）\r\n","Defines whether this view reacts to click events.":"定义此视图是否反应单击事件。\r\n","android.app.job.JobInfo.getMinFlexMillis()":"android.app.job.jobinfo.getminflexmillis（）\r\n","android.app.Fragment.isVisible()":"android.app.fragment.isvisible（）\r\n"," be controlled by the\n            ":" 由\r\n            \r\n","android.app.admin.DeviceAdminInfo.writeToParcel(android.os.Parcel, int)":"android.app.admin.deviceadmininfo.writetoparcel（android.os.os.parcel，int）\r\n","android.animation.ValueAnimator.reverse()":"android.animation.valueAnimator.REDVERSE（）\r\n","android.app.FragmentController.retainNestedNonConfig()":"android.app.fragmentController.RetainNestedNonConfig（）\r\n","Called by any app to display a support dialog when a feature was disabled by an admin.":"当管理员禁用功能时，任何应用都将任何应用程序称为支持对话框。\r\n","android.app.ServiceStartNotAllowedException":"android.app.servicestartnotallowedException\r\n","android.app.NotificationManager.createNotificationChannelGroups(java.util.List)":"Android.App.NotificationManager.CreatenotificationChannelGroups（java.util.list）\r\n","Indicates that the widget can be displayed within a space reserved for the search box.":"指示小部件可以显示在为搜索框保留的空间中。\r\n","android.app.Notification.when":"android.app.notification\r\n","Constructs and returns a PropertyValuesHolder with a given property and\n            set of float values.":"用给定财产构建和返回财产价值持有人\r\n            一组浮点值。\r\n","Called when a user or profile is switched to.":"切换用户或配置文件时调用。\r\n","Called by the container activity in its ":"由容器活动在其中调用\r\n","Ranked by number of usages, as reported by the app.":"按照应用报告，按使用数量排名。\r\n","default(JniObjectReference)":"默认（jniobjectReference）\r\n","Called to notify the state of operations that can be unsafe to execute has changed.":"打电话通知无法执行的不安全的操作状态已更改。\r\n","Continually monitoring location data.":"不断监视位置数据。\r\n","android.accounts.AccountManager.addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener, android.os.Handler, boolean, java.lang.String[])":"android.accounts.accountmanager.addonaccountsupdatedlistener（android.accounts.onaccountsupdateListener，android.os.os.handler，boolean，java.lang.lang.string []\r\n","when the requested destination file already exists (the\n download manager will not overwrite an existing file).":"当请求的目标文件已经存在时（\r\n 下载管理器不会覆盖现有文件）。\r\n","android.accessibilityservice.AccessibilityService.GESTURE_4_FINGER_DOUBLE_TAP_AND_HOLD":"Android.AccessibilityService.Accessibilityservice.gesture_4_finger_doubl_double_tap_and_hold\r\n"," intents.":" 意图。\r\n","This method is mostly deprecated.":"此方法主要是弃用的。\r\n"," with the arguments supplied to this builder and\n ":" 与该建筑商一起提供的论点\r\n \r\n","This method allows the activity to take care of managing the given\n            ":"这种方法允许活动照顾管理给定的\r\n            \r\n","android.app.KeyguardManager.isKeyguardSecure()":"android.app.keyguardmanager.iskeyguardsecure（）\r\n","When the animation reaches the end and <code>repeatCount</code> is INFINITE\n            or a positive value, the animation restarts from the beginning.":"当动画到达末端时，<code>重复</code>是无限的\r\n            或一个正值，动画从一开始就重新开始。\r\n","\n            intents to request the previous power state.":"\r\n            意图要求先前的电力状态。\r\n","MIME type for shortcut validation.":"快捷方式验证的MIME类型。\r\n","android.app.job.JobParameters.getJobId()":"android.app.job.jobparameters.getjobid（）\r\n","MigrationFailure":"迁移\r\n","android.app.admin.DevicePolicyManager.getOverrideApns(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getoverrideapns（android.content.componentname）\r\n","Returns the user specified importance e. -or- Sets the level of interruption of this notification channel.":"返回用户指定的重要性e。 - 或设置此通知通道的中断级别。\r\n"," when there were too many redirects.":" 当重定向太多时。\r\n","#IMPORTANCE_NONE":"#importance_none\r\n","Reference to a style that will be used for the window containing a list of possible\n             text suggestions in an EditText.":"引用将用于包含可能列表的窗口的样式\r\n             文本建议以诚信为单位。\r\n","android.animation.ValueAnimator.setIntValues(int[])":"android.animation.valueAnimator.SetIntValues（int []）\r\n","android.app.admin.DevicePolicyManager.ID_TYPE_IMEI":"android.app.admin.devicepolicymanager.id_type_imei\r\n","#ACTION_FOUND":"#action_found\r\n","ShortcutInfo#getId() id":"shortcutinfo＃getid（）ID\r\n","android.bluetooth.BluetoothGatt.CONNECTION_PRIORITY_BALANCED":"android.bluetooth.bluetoothgatt.connection_priority_balenced\r\n","A flag indicating the animation that runs on those items that are changing\n            due to a layout change not caused by items being added to or removed\n            from the container.":"指示动画在那些正在更改的项目上运行的旗帜\r\n            由于布局更改不是由添加或删除的项目引起的\r\n            从容器中。\r\n"," corresponding to the data blobs that\n            the calling app currently has a lease on.":" 对应于数据斑点\r\n            该通话应用程序目前已租用。\r\n"," to be access virtually to permit caching\n          of constructor ":" 几乎可以访问以允许缓存\r\n          构造函数\r\n","android.app.DialogFragment.dismissAllowingStateLoss()":"android.app.dialogfragment.dismissallowingstateloss（）\r\n","<a href=\"[TODO: @docRoot]guide/topics/manifest/meta-data-element.":"<a href =“ [todo：@docroot]指南/主题/清单/元数据元素。\r\n","android.appwidget.AppWidgetProviderInfo.icon":"android.appwidget.appwidgetProviderInfo.icon\r\n"," into a failed ":" 变成失败\r\n","Create a new ActivityMonitor that looks for a particular kind of \n intent to be started.":"创建一个新的ActivityMonitor，以寻找一种特定的\r\n 意图开始。\r\n","Get the list of currently pinned slices for this app.":"获取此应用程序当前固定的切片的列表。\r\n","Returns the string representation of a flag.":"返回标志的字符串表示。\r\n","Class providing enumeration over buckets of network usage statistics.":"班级提供网络使用统计数据的枚举。\r\n","Obtain a ":"获得\r\n","The array to find the value to save for a preference when an entry from\n             entries is selected.":"在从\r\n             选择条目。\r\n","Constructs and returns a ValueAnimator that animates between Object values.":"构造并返回一个在对象值之间进行动画的估值。\r\n","Notification category: promotion or advertisement.":"通知类别：促销或广告。\r\n","The overall theme to use for an activity.":"活动的总体主题。\r\n",",\n         shown on top of all other applications.":"，，，，\r\n         显示在所有其他应用程序的顶部。\r\n","Action to send the KEYCODE_HEADSETHOOK KeyEvent, which is used to answer/hang up calls and\n            play/stop media":"发送keyocode_headsethook keyevent的操作，该keyevent用于接听/挂断电话和\r\n            播放/停止媒体\r\n","Based on <code>oldState</code>, determine what application content\n            needs to be backed up, write it to <code>data</code>, and fill in\n            <code>newState</code> with the complete state as it exists now.":"基于<code> Oldstate </code>，确定哪个应用程序内容\r\n            需要备份，将其写入<code>数据</code>，然后填写\r\n            <code> Newstate </code>现在存在完整状态。\r\n"," \n The last year (inclusive), for example \"2010\".":" \r\n 去年（包括），例如“ 2010年”。\r\n","#getChildAnimations() child animations":"#getChildanimations（）儿童动画\r\n","Returns the LayoutInflater used to inflate Views of this Fragment.":"返回用于膨胀该片段视图的布局。\r\n","android.widget.DatePicker":"android.widget.datepicker\r\n","android.app.Person.toBuilder()":"android.app.person.tobuilder（）\r\n","The exit status argument of exit() if the application calls it, or the signal\n            number if the application is signaled.":"如果应用程序调用exit（）的退出状态参数或信号\r\n            数字如果应用程序发出信号。\r\n","Color that matches (as closely as possible) the panel background.":"与面板背景匹配（尽可能紧密的）颜色。\r\n"," activity.":" 活动。\r\n","android.bluetooth.BluetoothAdapter.getBluetoothLeAdvertiser()":"android.bluetooth.bluetoothadapter.getBlueToothleadvertiser（）\r\n","When closing the current activity, this is the animation that is\n              run on the next activity (which is entering the screen).":"关闭当前活动时，这是动画\r\n              在下一个活动（正在输入屏幕）上运行。\r\n","Called by device owner to remove an override APN.":"由设备所有者拨打以删除覆盖APN。\r\n","Creates a dialog window that uses a custom dialog style.":"创建一个使用自定义对话框样式的对话框窗口。\r\n","Allows an application to broadcast an Intent to set an alarm for the\n         user.":"允许应用程序广播的意图，以设置\r\n         用户。\r\n","The anonymous identity of the wifi network in ":"WiFi网络的匿名身份\r\n","E:Android.App.ActionBar+Tab.TabUnselected":"E：Android.app.ActionBar+Tab.tabunselected\r\n","android.app.usage.StorageStats.getCacheBytes()":"android.app.usage.storagestats.getCachebytes（）\r\n","The amount of time, in milliseconds, to delay processing the animation\n after ":"以毫秒为单位的时间延迟处理动画\r\n 后\r\n","android.app.Dialog.setOnDismissListener(android.content.OnDismissListener)":"android.app.dialog.setondismisslistener（android.content.ondismisslistener）\r\n","android.app.RemoteInput.getChoices()":"android.app.remoteinput.getChoices（）\r\n","FragmentController":"fragmentController\r\n","Called when the information about a pending system update is available.":"当有关待处理系统更新的信息可用时，请致电。\r\n","\n        This method should only be invoked by the\n        ":"\r\n        此方法仅应由\r\n        \r\n","Returns whether you are allowed to post notifications on behalf of a given package, with\n            ":"退货是否允许您代表给定包裹发布通知，\r\n            \r\n","Indicates that a file was pulled from the device via the adb daemon, for example via\n            ":"表示通过ADB守护程序从设备中拉出文件，例如通过\r\n            \r\n","android.app.SearchManager.SUGGEST_COLUMN_QUERY":"android.app.searchmanager.suggest_column_query\r\n","android.app.Notification.CATEGORY_SYSTEM":"android.app.notification.category_system\r\n","Connection parameter update - Use the connection parameters recommended by the\n            Bluetooth SIG.":"连接参数更新 - 使用由\r\n            蓝牙信号。\r\n","\n            pointing to an image that can be displayed in the background when the notification is\n            selected.":"\r\n            指向通知为时可以在背景中显示的图像\r\n            选定。\r\n","Checks if the account supports all the specified authenticator specific features.":"检查帐户是否支持所有指定的身份验证者特定功能。\r\n","#startLocalVoiceInteraction(Bundle)":"#startlocalvoiceInteraction（捆绑）\r\n","android.app.admin.DelegatedAdminReceiver.onNetworkLogsAvailable(android.content.Context, android.content.Intent, long, int)":"android.app.admin.delegatedadminreceiver.onnetworklogsavailable（android.content.context，android.content.intent.intent，long，int）\r\n",", if any. -or- Supply the construction arguments for this fragment.":"，如果有的话。 - 或为此片段提供构建论点。\r\n"," instance with no flags set.":" 没有标志设置的实例。\r\n","android.bluetooth.BluetoothDevice.DEVICE_TYPE_DUAL":"android.bluetooth.bluetoothdevice.device_type_dual\r\n",")\n        ":"）\r\n        \r\n","android.app.NotificationManager.ACTION_NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED":"android.app.notificationmanager.action_notification_policy_access_granted_changed\r\n","android.app.UiAutomation.executeShellCommandRw(java.lang.String)":"android.app.uiautomation.executeshellcommandrw（java.lang.string）\r\n","Return the user id of the record on a multi-user system.":"返回多用户系统上记录的用户ID。\r\n","Sets whether this activity is finished when touched outside its window's\n            bounds.":"设置该活动是否完成时触摸其窗户的窗口\r\n            边界。\r\n","android.app.admin.DevicePolicyManager.setApplicationHidden(android.content.ComponentName, java.lang.String, boolean)":"android.app.admin.devicepolicymanager.setapplicationhidden（android.content.componentname，java.lang.string，boolean）\r\n","Allows an application to initiate a phone call.":"允许应用程序启动电话。\r\n","android.app.AuthenticationRequiredException.getUserAction()":"android.app.authenticationRequiredException.getUseraction（）\r\n","When true, automatically start animating \n         ":"如果是真的，请自动开始动画\r\n         \r\n","android.app.Notification.audioAttributes":"android.app.notification.AudioAttributes\r\n","Extra in ":"额外\r\n","android.animation.ValueAnimator.setCurrentPlayTime(long)":"android.animation.valueAnimator.setCurrentPlayTime（长）\r\n","A String extra holding the proxy auto-config (PAC) URL for the wifi network in\n            ":"一根额外的额外保留wifi网络的代理自动config（PAC）URL\r\n            \r\n","FragmentTransaction#add(Fragment, String) FragmentTransaction.add":"fragmentTransaction＃add（fragment，string）fragmentTransaction.add\r\n","\n          The task that the application has an affinity for.\n        ":"\r\n          应用程序具有亲和力的任务。\r\n        \r\n","#RESTART":"＃重新开始\r\n","Used to create the object from a parcel.":"用于从包裹中创建对象。\r\n","This class provides access to a centralized registry of the user's\n            online accounts.":"此类提供对用户的集中注册表的访问权限\r\n            在线帐户。\r\n","JobInfo":"Jobinfo\r\n","As of ICE_CREAM_SANDWICH we are automatically adding padding to widgets targeting\n            ICE_CREAM_SANDWICH and higher.":"与iCe_cream_sandwich一起，我们将自动向定位的小部件添加填充物\r\n            ICE_CREAM_SANDWICH及更高。\r\n"," on any that are currently instantiated.":" 在当前实例化的任何内容上。\r\n","android.app.admin.DevicePolicyManager.getLockTaskPackages(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getlocktaskpackages（android.content.componentname）\r\n","android.animation.PropertyValuesHolder.ofFloat(java.lang.String, float[])":"android.animation.propertyvaluesholder.offloat（java.lang.string，float []）\r\n","android.animation.Animator.pause()":"android.animation.animator.pause（）\r\n","Retrieve a PendingIntent that will start a foreground service, like calling\n            ":"检索将启动前景服务的悬而未决的人，例如致电\r\n            \r\n","\n          User-readable text about the application, longer and more descriptive\n          than the application label.\n        ":"\r\n          有关应用程序的用户可读文本，更长，更具描述性\r\n          比应用程序标签。\r\n        \r\n","android.app.NotificationManager.createNotificationChannel(android.app.NotificationChannel)":"Android.App.NotificationManager.CreatenotificationChannel（Android.App.NotificationChannel）\r\n","#setAlwaysOnVpnPackage(ComponentName, String, boolean)":"#SetAlwaysOnvpnPackage（ComponentName，String，boolean）\r\n","#getActiveRequests":"#getactiverequests\r\n","android.app.Instrumentation.onCreate(android.os.Bundle)":"android.app.instrumentation.oncreate（android.os.bundle）\r\n","Flag indicating that an Instrumentation class should be run as a\n         functional test.":"指示仪器类应作为一个\r\n         功能测试。\r\n","android.app.NotificationManager.AUTOMATIC_RULE_STATUS_DISABLED":"android.app.notificationmanager.automatic_rule_status_disabled\r\n","Change the title associated with this activity.":"更改与此活动相关的标题。\r\n","Enable blocking of non-allowlisted activities from being started into a locked task.":"启用阻止非允许活动的工作，从而开始陷入锁定任务。\r\n","android.app.usage.NetworkStatsManager.queryDetailsForUidTagState(int, java.lang.String, long, long, int, int, int)":"android.app.usage.networkstatsmanager.querydetailsforuidtagstate（int，java.lang.string，long，long，long，int，int，int，int）\r\n","#SOURCE_FREE_FORM_INPUT":"#source_free_form_input\r\n","android.app.LauncherActivity.getTargetIntent()":"android.app.launcheractivity.getTargetIntent（）\r\n","Application's requirement for a hard keyboard \n         ":"应用程序对硬键盘的要求\r\n         \r\n","Name of the service endpoint that will be called back into by the JobScheduler.":"服务端点的名称将由JobsCheduler返回。\r\n","android.app.admin.DevicePolicyManager.setOverrideApnsEnabled(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setoverrideapnsenabled（android.content.componentname，boolean）\r\n","Constructs and returns an ObjectAnimator that animates over values for a multiple float\n            parameters setter.":"构造并返回一个对objectanimator，该对象映射器可以通过多个浮点的值进行动画\r\n            参数设置器。\r\n","Allows an application to read from the user's social stream.":"允许应用程序从用户的社交流中读取。\r\n",", requests the Keyguard to\n            be dismissed.":"，请求关键守卫\r\n            被解雇。\r\n"," tag for activities that handle\n            ":" 用于处理活动的标签\r\n            \r\n","android.app.FragmentTransaction.setReorderingAllowed(boolean)":"Android.App.FragmentTransaction.setRordorderingAllowed（布尔）\r\n","Intent that is broadcast when the state of getNotificationPolicy() changes.":"当getNotificationPolicy（）变化时，它的意图是广播。\r\n","android.appwidget.AppWidgetProviderInfo.loadPreviewImage(android.content.Context, int)":"android.appwidget.appwidgetProviderInfo.loadpreviewimage（android.content.context，int）\r\n","\n          The scheme part of a URI.\n        ":"\r\n          URI的计划部分。\r\n        \r\n","android.app.RemoteInput.RESULTS_CLIP_LABEL":"Android.App.RemoteInput.Results_Clip_label\r\n","M:Android.App.Application.OnTrimMemory":"m：android.app.application.ontrimmemory\r\n","Starts this animation.":"开始这个动画。\r\n","DeviceDefault theme for a window that will be displayed either full-screen on smaller\n    screens (small, normal) or as a dialog on larger screens (large, xlarge).":"窗口的Devicedefault主题将显示在较小的较小屏幕上\r\n    屏幕（小，正常）或在较大屏幕上作为对话框（大，Xlarge）。\r\n"," on a single\n            storage volume.":" 在一个\r\n            存储量。\r\n","android.provider.Settings.System":"android.provider.settings.system\r\n","android.app.NotificationManager.setNotificationDelegate(java.lang.String)":"android.app.notificationmanager.setnotificationdelegate（java.lang.string）\r\n","Returns the color hints for this instance.":"返回此实例的颜色提示。\r\n","#STYLE_NO_TITLE":"#Style_no_title\r\n","Specifies the basic height of the dropdown.":"指定下拉列表的基本高度。\r\n","This method tells the object to use appropriate information to extract\n            starting values for the animation.":"此方法告诉对象使用适当的信息提取\r\n            动画的启动值。\r\n"," from different version of ":" 来自不同版本的\r\n"," parameter\n            ":" 范围\r\n            \r\n","android.app.backup.BackupDataOutput.writeEntityData(byte[], int)":"android.app.backup.backupdataoutput.writeentitydata（byte []，int）\r\n","Return the total bytes used by all audio files in the shared/external\n            storage hosted on this volume.":"返回共享/外部所有音频文件使用的总字节\r\n            存储在此卷上。\r\n","SliceItem":"切片\r\n","Returns the unique identifier of the ":"返回唯一标识符\r\n"," instance with the\n          specified meta-data name.\n        ":" 带有的实例\r\n          指定的元数据名称。\r\n        \r\n","Context#createAttributionContext attribution tag":"上下文＃CreateAttributionContext归因标签\r\n","Default icon for applications that don't specify an icon.":"对于未指定图标的应用程序的默认图标。\r\n","android.app.AppOpsManager.OPSTR_READ_EXTERNAL_STORAGE":"android.app.appopsmanager.opptr_read_external_storage\r\n","Constructs and returns a PropertyValuesHolder with a given property and\n            set of Object values.":"用给定财产构建和返回财产价值持有人\r\n            一组对象值。\r\n","android.appwidget.AppWidgetProviderInfo.updatePeriodMillis":"android.appwidget.appwidgetProviderInfo.updateperiodmillis\r\n","Return the .":"返回。\r\n"," if the container holds any view.":" 如果容器保留任何视图。\r\n","android.animation.ValueAnimator.setFloatValues(float[])":"android.animation.valueAnimator.setFloatValues（float []）\r\n","The provisioning mode for fully managed device.":"完全管理设备的配置模式。\r\n","android.app.PictureInPictureParams":"Android.App.PictureInPictureParams\r\n","Called by an application that is administering the device to set the password restrictions it\n            is imposing.":"由管理设备设置密码限制的应用程序调用\r\n            强烈。\r\n","android.app.Dialog.closeOptionsMenu()":"android.app.dialog.closeoptionsmenu（）\r\n","Get the profile proxy object associated with the profile.":"获取与配置文件关联的配置文件代理对象。\r\n","android.accessibilityservice.AccessibilityServiceInfo.CAPABILITY_CAN_REQUEST_FILTER_KEY_EVENTS":"Android.AccessibilityService.AccessibilityServiceInfo.capibility_can_request_filter_key_events\r\n","Constant representing that the conversation user and the device user are celebrating\n            and anniversary today.":"不断表示对话用户和设备用户正在庆祝对话\r\n            和周年纪念日。\r\n","Send an arbitrary command to the current active wallpaper.":"将任意命令发送到当前的活动墙纸。\r\n","android.app.DownloadManager.COLUMN_BYTES_DOWNLOADED_SO_FAR":"android.app.downloadmanager.column_bytes_downloaded_so_far\r\n","Defines the direction of the text.":"定义文本的方向。\r\n","Gets the second most preeminent color of the wallpaper.":"获得墙纸的第二大颜色。\r\n","Size of the text for character keys.":"字符键的文本大小。\r\n","android.app.NotificationChannel.hasUserSetImportance()":"Android.App.NotificationChannel.hasusersetimportance（）\r\n","x location of the pivot point around which the view will rotate and scale.":"X位置的位置将围绕该枢轴点旋转和缩放。\r\n","android.app.Activity.onContextMenuClosed(android.view.Menu)":"android.app.activity.oncontextmenuclosed（android.view.menu）\r\n","android.app.Dialog.getSearchEvent()":"android.app.dialog.getSearchEvent（）\r\n","Called from layout when this view should\n assign a size and position to each of its children.":"从布局调用此视图\r\n 为每个孩子分配大小和位置。\r\n","Constructs a LayoutTransition object.":"构建一个布局传输对象。\r\n","A String extra holding the ":"绳子额外握住\r\n","android.app.AppOpsManager.setOnOpNotedCallback(java.util.concurrent.Executor, android.app.OnOpNotedCallback)":"android.app.appopsmanager.setonopnopnotedcallback（java.util.concurrent.executor，android.app.onopnopnotedCallback）\r\n","android.app.AutomaticZenRule.getZenPolicy()":"android.app.automationzenrule.getzenpolicy（）\r\n","android.accessibilityservice.AccessibilityServiceInfo.AccessibilityServiceInfo()":"Android.Accessibilityservice.Accessibilityserviceinfo.AccessibilityserviceInfo（）\r\n","android.app.Fragment.dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])":"android.app.fragment.dump（java.lang.string，java.io.filedescriptor，java.io.printwriter，java.lang.string []）\r\n","Save a BatteryInfo instance to a parcel.":"将电池实例保存到包裹中。\r\n","Activity Action: Launch an Automatic Zen Rule configuration screen":"活动动作：启动自动ZEN规则配置屏幕\r\n","android.app.NotificationChannel.setGroup(java.lang.String)":"android.app.notificationChannel.setGroup（java.lang.string）\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DISCLAIMER_CONTENT":"android.app.admin.devicepolicymanager.extra_provisioning_disclaimer_content\r\n","Fraction of the animation duration used to delay the beginning of\n         the animation of each row.":"动画持续时间的一部分用于延迟\r\n         每一行的动画。\r\n","The name of the application package that an Instrumentation object\n         will run against.":"仪器对象的应用程序包的名称\r\n         会遇到的。\r\n","android.app.admin.DevicePolicyManager.setPasswordMinimumUpperCase(android.content.ComponentName, int)":"android.app.admin.devicepolicymanager.setpasswordwordwordminminuppercase（android.content.componentname，int）\r\n","Flag indicating whether the application can be debugged, even when\n         running on a device that is running in user mode.":"标志指示是否可以调试应用程序，即使\r\n         在用户模式下运行的设备上运行。\r\n","F:Android.App.Notification+Builder.SetVisibility":"F：android.app.notification+Builder.setvisisible\r\n","The maxmimum number of rows to create when automatically positioning children.":"自动定位儿童时，最大行数要创建。\r\n","Returns whether or not the current Intent was explicitly provided in\n            ":"退货是否明确提供了当前意图\r\n            \r\n","android.app.Fragment.getResources()":"android.app.fragment.getResources（）\r\n","Returns whether the calling package is allowed to set the wallpaper for the calling user.":"返回是否允许调用软件包为调用用户设置墙纸。\r\n","AccountManager#KEY_ACCOUNT_TYPE":"AccountManager＃key_account_type\r\n","Called by a profile owner of an organization-owned managed profile to get maximum time\n            the profile is allowed to be turned off.":"由组织拥有的托管个人资料的个人资料所有者拨打以获取最大时间\r\n            允许关闭配置文件。\r\n",":\n never run in night mode.":"：\r\n 切勿在夜间模式下运行。\r\n","Low notification importance: Shows in the shade, and potentially in the status bar\n            (see ":"低通知重要性：在阴影中显示，并有可能在状态栏中\r\n            （看\r\n","SetJniIdentityHashCode":"setJniIdentityHashCode\r\n","Checkin details.":"检查详细信息。\r\n","The phase 2 authentication of the wifi network in ":"WiFi网络的2阶段身份验证\r\n","Amount of time (in milliseconds) to display this frame.":"显示此框架的时间（以毫秒为单位）。\r\n","Returns whether notifications from this package are temporarily hidden.":"返回此软件包中的通知是否暂时隐藏。\r\n","Activity action: This activity action is sent to indicate that provisioning of a managed\n            profile or managed device has completed successfully.":"活动行动：发送此活动动作以表明托管的配置\r\n            配置文件或托管设备已成功完成。\r\n","android.app.RemoteInput.EDIT_CHOICES_BEFORE_SENDING_ENABLED":"android.app.remoteinput.edit_choices_before_sending_enabled\r\n","android.bluetooth.BluetoothDevice.ACTION_ALIAS_CHANGED":"android.bluetooth.bluetoothdevice.action_alias_changed\r\n"," on the\n            Window if this Activity to return the currently focused view.":" 在\r\n            窗口如果此活动返回当前的关注视图。\r\n"," when\n            transferring shared elements in.":" 什么时候\r\n            转移共享元素。\r\n","android.animation.ValueAnimator.getValues()":"android.animation.valueAnimator.getValues（）\r\n","Called when a generic motion event was not handled by any of the\n            views inside of the activity.":"当没有任何一个通用运动事件处理时称为\r\n            活动内部的视图。\r\n","android.app.Fragment.onDetach()":"android.app.fragment.ondetach（）\r\n","android.app.backup.RestoreObserver.restoreFinished(int)":"android.app.backup.restoreobserver.restorefined（int）\r\n","Return a ":"返回\r\n","sessionId":"SessionID\r\n","android.app.FragmentController.dispatchActivityCreated()":"android.app.FragmentController.disPatchActivityCreated（）\r\n","android.app.usage.ExternalStorageStats.getAppBytes()":"android.app.usage.externalstoragestats.getappbytes（）\r\n"," if it the native peer was\n        constructed first and a forthcoming constructor invocation is\n        assumed to be forthcoming.\n      ":" 如果是本地同龄人\r\n        首先构造的，即将发布的构造函数调用是\r\n        假定即将到来。\r\n      \r\n",": the given caller should\n            use its default security check.":"：给定的来电者应该\r\n            使用其默认安全检查。\r\n","Intent#getData()":"意图＃getData（）\r\n","Report the key string associated with this entity within the backup data set.":"在备份数据集中报告与该实体关联的键字符串。\r\n","android.bluetooth.BluetoothAdapter.isOffloadedFilteringSupported()":"android.bluetooth.bluetoothadapter.isoffloadedfilteringsupported（）\r\n","Event severity level indicating that the event corresponds to normal workflow.":"事件严重程度表明事件对应于普通工作流程。\r\n","android.bluetooth.BluetoothProfile.EXTRA_PREVIOUS_STATE":"android.bluetooth.bluetoothprofile.extra_previous_state\r\n","\n[JniTypeSignature (\"my/Example\")]\npartial class ExampleBinding {\n    static readonly JniPeerMembers _members = new JniPeerMembers (\"my/Example\", typeof (ExampleBinding));\n    public override JniPeerMembers JniPeerMembers {\n        get {return _members;}\n    }\n}\n        ":"\r\n[jnitypesignature（“我/示例”）]\r\n部分类示例binding {\r\n    静态读取jnipeerMembers _members = new jnipeerMembers（“ my/示例”，typeof（示例binding））;\r\n    公共覆盖jnipeermbers jnipeerMembers {\r\n        获取{返回_members;}\r\n    }\r\n}\r\n        \r\n",", for items that are less important. ":"，对于不太重要的项目。\r\n","If keyguard screen is showing or in restricted key input mode (i.":"如果键guard屏幕显示或以限制的键输入模式显示（i。\r\n","android.app.appsearch.GenericDocument.getPropertyDocumentArray(java.lang.String)":"android.app.appsearch.genericdocument.getPropertydocumentarray（java.lang.string）\r\n","android.view.Window#setFeatureDrawableAlpha":"android.view.window＃setfeaturedrawablealpha\r\n","Flags indicating more context for a permission.":"标志指示更多的许可上下文。\r\n","Theme for a window without a title bar that will be displayed either\n         full-screen on smaller screens (small, normal) or as a dialog on larger screens\n         (large, xlarge).":"没有标题栏的窗口的主题将显示\r\n         较小的屏幕上的全屏（小，正常）或较大屏幕上的对话框\r\n         （大，Xlarge）。\r\n","android.animation.AnimatorListenerAdapter.onAnimationEnd(android.animation.Animator)":"android.animation.animatorListenerAdapter.OnanimationEnd（android.animation.animator）\r\n","An intent extra that contains the component name of a AppWidget provider.":"包含AppWidget提供商的组件名称的意图额外。\r\n","JobScheduler#cancel(int)":"Jobscheduler＃取消（int）\r\n","android.view.Window.Callback#onPreparePanel":"android.view.window.callback＃onpreparepanel\r\n"," that describes how this\n            UiAutomation will be handled by the platform accessibility layer.":" 描述了如何\r\n            UIAUTomation将通过平台可访问性层来处理。\r\n","android.app.admin.SecurityLog.TAG_WIPE_FAILURE":"android.app.admin.securitylog.tag_wipe_failure\r\n","android.app.SearchManager.SUGGEST_COLUMN_AUDIO_CHANNEL_CONFIG":"android.app.searchmanager.suggest_column_audio_channel_config\r\n","android.app.job.JobInfo.isPrefetch()":"android.app.job.jobinfo.isprefetch（）\r\n","Get the total time this package's activity is visible in the UI, measured in milliseconds.":"在以毫秒为单位测量的UI中可见此包的活动的总时间。\r\n","#releaseLease(BlobHandle)":"#Releaselease（BlobHandle）\r\n","android.accessibilityservice.AccessibilityService.performGlobalAction(int)":"Android.AccessibilityService.Accessibilityservice.performglobalaction（INT）\r\n","F:Android.App.ActivityManager.GetRecentTasks":"F：android.app.activityManager.getRecentTasks\r\n","Indicates that a new root certificate has been installed into system's trusted credential\n            storage.":"表示已将新的根证书安装到系统的可信赖凭据中\r\n            贮存。\r\n","Return the identifier of the task this activity is in.":"返回该活动所在的任务的标识符。\r\n","if the authenticator failed to respond":"如果身份验证者未能响应\r\n","android.app.admin.DevicePolicyManager.logoutUser(android.content.ComponentName)":"android.app.admin.devicepolicymanager.logoutuser（android.content.componentname）\r\n","android.app.admin.DevicePolicyManager.LOCK_TASK_FEATURE_HOME":"android.app.admin.devicepolicymanager.lock_task_feature_home\r\n","Lists all accounts visible to the caller regardless of type.":"列出了呼叫者可见的所有帐户，无论类型如何。\r\n","\n          The name of the class that implements the service.\n        ":"\r\n          实施服务的类名称。\r\n        \r\n","android.app.assist.AssistContent.isAppProvidedWebUri()":"android.app.assist.assistcontent.isappprovidedweburi（）\r\n","android.animation.ArgbEvaluator":"android.animation.argbevaluator\r\n","android.app.UiModeManager.MODE_NIGHT_AUTO":"android.app.uimodemanager.mode_night_auto\r\n","android.app.SearchManager.SUGGEST_COLUMN_FLAGS":"android.app.searchmanager.suggest_column_flags\r\n","android.app.SearchManager.SUGGEST_COLUMN_LAST_ACCESS_HINT":"android.app.searchmanager.suggest_column_last_access_hint\r\n","#checkOpNoThrow":"#checkopnothrow\r\n","android.app.admin.DevicePolicyManager.DELEGATION_SECURITY_LOGGING":"android.app.admin.devicepolicymanager.delegation_security_logging\r\n","Deletes the given notification channel.":"删除给定的通知渠道。\r\n","android.app.Notification.audioStreamType":"Android.App.Notification.AudioStreamType\r\n","Represents the usage statistics of a device ":"表示设备的使用统计信息\r\n","android.animation.PropertyValuesHolder.ofMultiInt(java.lang.String, android.animation.TypeConverter, android.animation.TypeEvaluator, java.lang.Object[])":"android.animation.propertyvaluesholder.ofmultiint（java.lang.string，android.animation.typeconverter，android.animation.typeevaluator，java.lang.object []）\r\n","Used for permissions that can be used to make the user spend money\n         without their direct involvement.":"用于用于使用户花钱的权限\r\n         没有他们直接参与。\r\n","when the download is paused because some network error\n occurred and the download manager is waiting before retrying the request.":"当下载暂停时，因为某些网络错误\r\n 发生，下载管理器正在等待，然后再重试请求。\r\n","android.app.FragmentController.reportLoaderStart()":"Android.App.FragmentController.ReportLoaderStart（）\r\n","The user has performed a two-finger swipe up gesture on the touch screen.":"用户在触摸屏上执行了两指滑动手势。\r\n","Drawable to use for single choice indicators.":"可用于单个选择指标。\r\n","Indicates that a cryptographic key was destroyed.":"表明加密密钥被破坏了。\r\n","Return the stored value of this characteristic.":"返回此特征的存储值。\r\n","Context menu ID for the \"Select All\" menu item to select all text\n       in a text view.":"“选择所有”菜单项的上下文菜单ID选择所有文本\r\n       在文本视图中。\r\n","Provide the longer text to be displayed in the big form of the template in place of the content text.":"提供较长的文本，以模板的大型形式代替内容文本。\r\n","\n[JniTypeSignature (\"my/Example\")]\npartial class ExampleBinding : IJavaPeerable {\n\n\tpublic void UnregisterFromRuntime ()\n\t{\n        JniEnvironment.Runtime.ValueManager.UnRegisterObject (this);\n\t}\n}\n        ":"\r\n[jnitypesignature（“我/示例”）]\r\n部分类示例示例：\r\n\r\n公共void unregisterfromruntime（）\r\n{\r\n        jnienvironment.runtime.valuemanager.unregisterobject（this）;\r\n}\r\n}\r\n        \r\n","android.app.ActivityManager.getHistoricalProcessExitReasons(java.lang.String, int, int)":"android.app.activityManager.gethistoricalProcessExitreasons（java.lang.string，int，int）\r\n","Sets the grant state of a runtime permission for a specific application.":"为特定应用程序设置运行时许可的赠款状态。\r\n","android.accounts.AbstractAccountAuthenticator.addAccount(android.accounts.AccountAuthenticatorResponse, java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle)":"android.accounts.abstractaccountauthenticator.addaccount（android.accounts.accountauthenticatorestorsonsess，java.lang.string，java.lang.string，java.lang.lang.lang.string []，android.os.bundle）\r\n","Dismiss this dialog, removing it from the screen.":"解散此对话框，将其从屏幕上删除。\r\n","Extra added to a clip data intent object to hold the text results bundle.":"额外添加到剪辑数据意图对象中，以保留文本结果捆绑包。\r\n"," in the big form of the template.":" 以模板的大型形式。\r\n","android.app.ApplicationErrorReport.TYPE_BATTERY":"Android.App.ApplicationErrreReport.Type_Battery\r\n",", or by scheduling a\n            new job with the same job ID.":"，或通过安排\r\n            具有相同工作ID的新工作。\r\n","Gets which system features are enabled for LockTask mode.":"获取启用locktask模式的系统功能。\r\n","Broadcast Action: The local Bluetooth adapter has started the remote\n            device discovery process.":"广播动作：本地蓝牙适配器已经启动了遥控器\r\n            设备发现过程。\r\n","Makes the TextView be at least this many lines tall.":"使文本视图至少要高这么多线。\r\n","android.app.Activity.onActionModeStarted(android.view.ActionMode)":"android.app.activity.onactionmodestarted（android.view.actionMode）\r\n","Time at which the error occurred.":"发生错误的时间。\r\n","Sets the name of the profile.":"设置配置文件的名称。\r\n",": this process is running something\n that is actively visible to the user, though not in the immediate\n foreground.":"：这个过程正在运行某些东西\r\n 这对用户来说是积极可见的，尽管不是立即\r\n 前景。\r\n","Java documentation for ":"Java文档\r\n","Returns the namespace of the document that was used.":"返回所使用的文档的名称空间。\r\n","android.app.ProgressDialog.setSecondaryProgress(int)":"android.app.progressdialog.setsecondaryprogress（int）\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_LEAVE_ALL_SYSTEM_APPS_ENABLED":"android.app.admin.devicepolicymanager.extra_provisioning_leave_all_system_apps_enabled\r\n"," expanded\n            notifications, supplied to ":" 扩展\r\n            通知，提供给\r\n","Called by device owner to add an override APN.":"设备所有者称为添加覆盖APN。\r\n","List navigation mode. ":"列表导航模式。\r\n","android.app.admin.DeviceAdminReceiver.onTransferOwnershipComplete(android.content.Context, android.os.PersistableBundle)":"android.app.admin.deviceadminreceiver.ontransferownhipcomplete（android.content.context，android.os.persistablebundle）\r\n","android.app.Instrumentation.getAllocCounts()":"android.app.instrumentation.getAlloccounts（）\r\n","Cancels the animation.":"取消动画。\r\n","Whether or not this channel represents a conversation.":"这个频道是否代表对话。\r\n","Indicates the opacity of the layer.":"指示层的不透明度。\r\n","Denotes haptic feedback.":"表示触觉反馈。\r\n","Set a listener to be invoked when the dialog is canceled.":"取消对话框时，设置侦听器将被调用。\r\n","Builder#setColorized(boolean)":"构建器＃setColorized（布尔值）\r\n","Uid that noted the op":"指出OP的UID\r\n","android.app.Activity.unregisterForContextMenu(android.view.View)":"android.app.activity.unregisterforcontextmenu（android.view.view）\r\n","\n          An icon representing the activity.\n        ":"代表活动的图标。\r\n        \r\n","View#GONE":"查看＃走了\r\n","android.app.SearchManager.SUGGEST_COLUMN_TEXT_2":"android.app.searchmanager.suggest_column_text_2\r\n","Sets a drawable as the content of this ImageView.":"设置可绘制作为此imageView的内容。\r\n","Sets which packages may enter lock task mode.":"设置哪些软件包可以输入锁定任务模式。\r\n","android.animation.Animator.start()":"android.animation.animator.start（）\r\n","Default TextView style.":"默认文本视图样式。\r\n","android.app.slice.SliceItem.getIcon()":"android.app.slice.sliceitem.geticon（）\r\n","\n          The name of the meta-data to generate.\n        ":"\r\n          元数据的名称生成。\r\n        \r\n","Amount to offset the touch Y coordinate by, for bias correction.":"以弥补偏差校正，以抵消触摸y坐标。\r\n","Scale height, expressed as a percentage of the drawable's bound.":"比例高度，表示为可绘制的界限的百分比。\r\n"," (see ":" （看\r\n","android.app.FragmentTransaction.detach(android.app.Fragment)":"Android.App.FragmentTransaction.Detach（Android.App.Fragment）\r\n","android.animation.ValueAnimator.ofPropertyValuesHolder(android.animation.PropertyValuesHolder)":"android.animation.valueAnimator.propertyvaluesholder（android.animation.propertyvaluesholdholdhorder）\r\n","Checks whether the given op for a package is active, i.":"检查给定的软件包是否处于活动状态，i。\r\n","android.app.Fragment.setReturnTransition(android.transition.Transition)":"Android.App.Fragment.SetReturntransition（Android.transition.transition）\r\n","android.app.admin.DevicePolicyManager.setTrustAgentConfiguration(android.content.ComponentName, android.content.ComponentName, android.os.PersistableBundle)":"android.app.admin.devicepolicymanager.settrustagentConfiguration（android.content.componentname，android.content.content.componentname，android.os.persistablebundle）\r\n","android.app.Activity.navigateUpTo(android.content.Intent)":"android.app.activity.navigateUpto（android.content.intent）\r\n","android.app.admin.DevicePolicyManager.getWifiMacAddress(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getwifimacaddress（android.content.componentname）\r\n","Allows an application to call\n        ":"允许应用程序致电\r\n        \r\n"," privilege), to query whether a KeyChain key\n            pair can be used for authentication to Wifi networks.":" 特权），查询是否键链密钥\r\n            对可用于身份验证进行WiFi网络。\r\n","android.accounts.AccountManager.newChooseAccountIntent(android.accounts.Account, java.util.ArrayList, java.lang.String[], boolean, java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle)":"android.accounts.accountmanager.newchooseaccountintent（android.accounts.accounts.account，java.util.arraylist，java.lang.string [] android.os.bundle）\r\n","Returns a list of LoaderManagers that have opted to retain their instance across\n            configuration changes.":"返回选择保留其实例的LoaderManager列表\r\n            配置更改。\r\n"," in which case the\n            native Java client defaults are used.\n            ":" 在这种情况下\r\n            使用本机Java客户端默认值。\r\n            \r\n","Get the list of appWidgetIds that have been bound to the given AppWidget\n            provider.":"获取已绑定到给定AppWidget的AppWidgetID列表\r\n            提供者。\r\n","android.app.NotificationChannel.shouldVibrate()":"android.app.notificationChannel.shouldVibrate（）\r\n","android.app.ZygotePreload.doPreload(android.content.pm.ApplicationInfo)":"android.app.zygotepreload.dopreload（android.content.pm.applicationinfo）\r\n","and\n            selected":"和\r\n            选定\r\n","Checks whether the searchable should be included in global search.":"检查是否应包含在全局搜索中的可搜索。\r\n","android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_IRIS":"android.app.admin.devicepolicymanager.keyguard_disable_iris\r\n","android.app.ListActivity.onListItemClick(android.widget.ListView, android.view.View, int, long)":"android.app.listactivity.onlistitemclick（android.widget.listview，android.view.view，int，int，long）\r\n","Asks user to re-authenticate for an account but defers updating the\n            locally stored credentials.":"要求用户对帐户进行重新认证，但为更新\r\n            本地存储的凭据。\r\n","android.app.appsearch.Migrator.shouldMigrate(int, int)":"android.app.appsearch.migrator.shouldmigrate（int，int）\r\n","android.app.Activity.isVoiceInteractionRoot()":"android.app.activity.isvoiceInteractionRoot（）\r\n","Text color, typeface, size, and style for \"large\" inverse text.":"文本颜色，字体，大小和样式，用于“大”逆文本。\r\n","Gets the array of accounts for which account management is disabled by the profile owner\n            or device owner.":"获取个人资料所有者禁用帐户管理的一系列帐户\r\n            或设备所有者。\r\n","Disable all keyguard widgets.":"禁用所有关键小部件。\r\n","Returns \"true\" if device is running in a test harness.":"如果设备在测试安全带中运行，则返回“ true”。\r\n","Allows an application to update device statistics.":"允许应用程序更新设备统计信息。\r\n"," method is invoked after the finalizer\n        has been invoked on the instance.\n        The ":" 最终制度后调用方法\r\n        已在实例上调用。\r\n        这\r\n","AccountManager#KEY_PASSWORD":"AccountManager＃key_password\r\n","android.app.ActionBar.setElevation(float)":"android.app.actionbar.setelevation（float）\r\n","Version of ":"版本的\r\n","android.accessibilityservice.AccessibilityService.GESTURE_2_FINGER_SWIPE_DOWN":"Android.AccessibilityService.Accessibilityservice.gesture_2_finger_swipe_down\r\n","android.accessibilityservice.AccessibilityService.GLOBAL_ACTION_KEYCODE_HEADSETHOOK":"Android.AccessibilityService.Accessibilityservice.global_action_keycode_headsethook\r\n","Restore a state that was previously returned by ":"还原以前由\r\n"," when it's not allowed to\n            do so.":" 当不允许\r\n            这样做。\r\n","android.app.admin.DevicePolicyManager.generateKeyPair(android.content.ComponentName, java.lang.String, android.security.keystore.KeyGenParameterSpec, int)":"android.app.admin.devicepolicymanager.generateKeypair（android.content.componentname，java.lang.string，android.security.keystore.keystore.keystore.keygenparameterspec，int）\r\n","android.app.admin.DevicePolicyManager.setNetworkLoggingEnabled(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setnetworkloggingEnabled（android.content.componentname，boolean）\r\n","android.app.ActionBar.removeOnMenuVisibilityListener(android.app.OnMenuVisibilityListener)":"android.app.ActionBar.RemoveonMenuvisibilitibilitibilitibilitibilitibilitibilitibilityListener（android.app.onmenuvisibilityListener）\r\n","Context#sendBroadcast(Intent) Context.sendBroadcast()":"上下文＃sendBroadcast（intent）Context.SendBroadcast（）\r\n","Called by a device owner, or alternatively a profile owner from Android 8.":"由设备所有者或Android 8的配置文件所有者拨打。\r\n","In Activity Transitions, onSharedElementStart is called immediately before\n            capturing the start of the shared element state on enter and reenter transitions and\n            immediately before capturing the end of the shared element state for exit and return\n            transitions.":"在活动过渡中，onsharedelementStart立即调用\r\n            捕获Enter和Reenter Transitions和Reenter Transitions的共享元素状态的开始\r\n            在捕获共享元素状态的结束之前，立即退出并返回\r\n            过渡。\r\n","android.animation.AnimatorInflater":"android.animation.animatorinflater\r\n","android.view.Window#getLayoutInflater":"android.view.window＃getlayoutinflater\r\n","#postponeEnterTransition()":"#postPoneenterTransition（）\r\n","Allows low-level access to setting the orientation (actually\n         rotation) of the screen.":"允许低级访问设置方向（实际上\r\n         屏幕的旋转）。\r\n","android.bluetooth.BluetoothDevice.createInsecureL2capChannel(int)":"android.bluetooth.bluetoothdevice.CreateInseCurel2CapChannel（INT）\r\n","android.app.ForegroundServiceStartNotAllowedException":"Android.App.ForegroundServicEstartNotAllowEdexception\r\n","Manifest entry for activities that respond to ":"对响应的活动的明显进入\r\n"," to manage application restrictions\n            for the calling user.":" 管理应用程序限制\r\n            适用于调用用户。\r\n","Amount of top padding inside the gradient shape.":"梯度形状内部的顶部填充量。\r\n","android.view.Window#setFeatureDrawable(int, Drawable)":"android.view.window＃setFeaturedRawable（int，drawable）\r\n","A dark Holo shade of green \n":"绿色的深色整体阴影\r\n\r\n","Returns whether notifications posted to this channel can appear as badges in a Launcher\n            application.":"返回发布到此频道的通知是否可以作为徽章出现在启动器中\r\n            应用。\r\n","android.app.admin.DevicePolicyManager.isApplicationHidden(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.isapplicationhidden（android.content.componentname，java.lang.string）\r\n","android.app.Notification.EXTRA_AUDIO_CONTENTS_URI":"android.app.notification.extra_audio_contents_uri\r\n","R styleable WindowAnimation":"r风格的窗户启示\r\n","android.view.View.OnClickListener":"android.view.view.onclicklistener\r\n","Builder#addAction(int, CharSequence, PendingIntent)":"构建器＃addAction（int，charsequence，pegendIntent）\r\n","\n            intents to indicate pairing method used.":"\r\n            指示使用的配对方法的意图。\r\n","android.app.AppOpsManager.startOp(java.lang.String, int, java.lang.String)":"android.app.appopsmanager.startop（java.lang.string，int，java.lang.string）\r\n","android.accessibilityservice.GestureDescription.getStrokeCount()":"Android.AccessibilityService.gestruedescription.getstrokecount（）\r\n","android.app.Activity.getLastNonConfigurationInstance()":"android.app.activity.getLastnonConfigurationInstance（）\r\n","android.app.usage.NetworkStats.getNextBucket(android.app.usage.Bucket)":"android.app.usage.networkstats.getnextbucket（android.app.usage.bucket）\r\n","This class provides access to the system search services.":"此类提供对系统搜索服务的访问。\r\n","android.app.DownloadManager.INTENT_EXTRAS_SORT_BY_SIZE":"android.app.downloadmanager.intent_extras_sort_by_size\r\n","android.app.job.JobInfo.isRequireDeviceIdle()":"android.app.job.jobinfo.isrequiredeviceidle（）\r\n","android.app.Instrumentation.onException(java.lang.Object, java.lang.Throwable)":"android.app.instrumentation.onexception（java.lang.Object，java.lang.throwable）\r\n","android.app.Fragment.onResume()":"android.app.fragment.onresume（）\r\n","Gets the maximum allowed progress value. -or- Sets the maximum allowed progress value.":"获取最大允许的进度值。 - 或设置最大允许的进度值。\r\n","android.app.appsearch.SearchSpec.RANKING_STRATEGY_NONE":"android.app.appsearch.searchspec.ranking_strategy_none\r\n",", for items that are less important.":"，对于不太重要的项目。\r\n"," is interested in.":" 感兴趣。\r\n","android.app.Notification.PRIORITY_DEFAULT":"android.app.notification.priority_default\r\n","A light Holo shade of green \n":"绿色的浅色阴影\r\n\r\n","Add a new Intent to the task stack.":"在任务堆栈中添加新意图。\r\n","Drawable used to draw the left part of the strip underneath the tabs.":"可绘制用于在标签下方绘制条带的左侧的左侧。\r\n","The summary for the Preference in a PreferenceActivity screen when the\n             CheckBoxPreference is checked.":"当偏好性屏幕中偏好的摘要\r\n             检查了CheckboxPreference。\r\n","java.lang.System.identityHashCode()":"java.lang.system.SidentityHashcode（）\r\n"," to call\n            ":" 打电话\r\n            \r\n","android.app.AppOpsManager.MODE_FOREGROUND":"android.app.appopsmanager.mode_foreground\r\n","Gets an auth token of the specified type for a particular account,\n            optionally raising a notification if the user must enter credentials.":"获取特定帐户指定类型的验证令牌，\r\n            如果用户必须输入凭据，则可以选择提高通知。\r\n","android.app.Activity.onNewIntent(android.content.Intent)":"android.app.activity.onnewintent（android.content.intent）\r\n","Create an uninitialized instance of RunningServiceInfo.":"创建RunningServiceInfo的非初始化实例。\r\n","Returns the quota in bytes for the application's current backup operation.":"返回应用程序当前备份操作的字节中的配额。\r\n","Get the name that was supplied to\n ":"获取所提供的名称\r\n \r\n","Boolean that controls whether a view should have sound effects\n             enabled for events such as clicking and touching.":"控制视图是否应具有声音效果的布尔值\r\n             启用了诸如点击和触摸之类的事件。\r\n","android.app.Activity.onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)":"android.app.activity.oncreatenavigateUptaskStack（android.app.taskStackBuilder）\r\n","android.app.SearchableInfo.getSearchActivity()":"android.app.searchableInfo.getSearchActivity（）\r\n","F:Android.Views.Accessibility.AccessibilityManager.GetEnabledAccessibilityServiceList":"f：android.views.accosconibility.Accessibilitymanager.getEnabledAcccesseribilityservicelist\r\n","android.app.Activity.onRetainNonConfigurationInstance()":"android.app.Activity.NretainNonnonConfigurationInstance（）\r\n","The widget is added directly by the app, and the host may hide this widget when providing\n            the user with the list of available widgets to choose from.":"小部件直接由应用程序添加，主机在提供时可能会隐藏此窗口小部件\r\n            用户列表可供选择的可用小部件。\r\n","Resumes a paused animation, causing the animator to pick up where it left off\n            when it was paused.":"恢复一个暂停的动画，导致动画师接下来\r\n            当它暂停时。\r\n","#STOP_REASON_UNDEFINED":"#stop_reason_undefined\r\n","Change the current system wallpaper to a specific byte stream, specifying a\n            hint about which subrectangle of the full image is to be visible.":"将当前系统壁纸更改为特定的字节流，指定\r\n            暗示要可见整个图像的哪个子区域。\r\n","F:Android.App.ProgressDialog.SetProgressStyle":"F：android.app.progressdialog.setprogressstyle\r\n","android.app.ActivityManager.getLargeMemoryClass()":"android.app.activityManager.getLargeMemoryClass（）\r\n","android.app.AppOpsManager.OPSTR_READ_SMS":"android.app.appopsmanager.opptr_read_sms\r\n","Allows an application to manage (create, destroy,\n         Z-order) application tokens in the window manager.":"允许应用程序管理（创建，销毁，\r\n         Z-order）应用程序令牌在窗口管理器中。\r\n","#DISPLAY_HOME_AS_UP":"#display_home_as_up\r\n","Pauses a running animation.":"暂停运行动画。\r\n","android.accessibilityservice.AccessibilityService.GESTURE_SWIPE_UP":"Android.AccessibilityService.Accessibilityservice.gesture_swipe_up\r\n","android.bluetooth.BluetoothAdapter.getRemoteDevice(byte[])":"android.bluetooth.bluetoothadapter.getRemotedevice（byte []）\r\n","android.app.Dialog.onKeyDown(int, android.view.KeyEvent)":"android.app.dialog.onkeydown（int，android.view.keyevent）\r\n","android.app.Activity.setVolumeControlStream(int)":"android.app.activity.setVolumecontrolstream（int）\r\n","android.app.ActivityOptions#makeSceneTransitionAnimation(Activity,\n            android.view.View, String)":"android.app.ActivityOptions＃makeCenetransitionAnimation（活动，\r\n            android.view.view，字符串）\r\n","android.app.AppOpsManager.unsafeCheckOpNoThrow(java.lang.String, int, java.lang.String)":"android.app.appopsmanager.unsafecheckopnothrow（java.lang.string，int，java.lang.string）\r\n","Allows applications to set the system time \n":"允许应用程序设置系统时间\r\n\r\n","android.app.people.ConversationStatus.getIcon()":"android.app.people.conversationstatus.geticon（）（）\r\n","android.app.admin.DevicePolicyManager.setProfileName(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.setProfileName（android.content.componentname，java.lang.string）\r\n"," for the passed HTTPS ":" 对于传递的https\r\n","android.app.Activity.setActionBar(android.widget.Toolbar)":"android.app.activity.setactionbar（android.widget.toolbar）\r\n","android.app.admin.DeviceAdminReceiver.BUGREPORT_FAILURE_FILE_NO_LONGER_AVAILABLE":"android.app.admin.deviceadminreceiver.bugreport_failure_file_no_longer_available\r\n","Returns the timestamp in milliseconds of the usage report (the time at which the document was\n            used).":"返回用法报告的毫秒毫秒（文档的时间）\r\n            用过的）。\r\n","android.app.SearchManager.SUGGEST_URI_PATH_QUERY":"android.app.searchmanager.suggest_uri_path_query\r\n","Finalized":"最终确定\r\n","android.app.SearchManager.setOnCancelListener(android.content.OnCancelListener)":"android.app.searchmanager.setoncancellistener（android.content.oncancellistener）\r\n","android.app.ListFragment.onListItemClick(android.widget.ListView, android.view.View, int, long)":"android.app.listFragment.OnlistItemClick（android.widget.listview，android.view.view，int，int，long）\r\n"," to the voice interaction service.":" 到语音交互服务。\r\n","android.app.ApplicationExitInfo.getTimestamp()":"android.app.applicationexitinfo.getTimestamp（）\r\n","android.bluetooth.BluetoothGattCallback.onCharacteristicRead(android.bluetooth.BluetoothGatt, android.bluetooth.BluetoothGattCharacteristic, int)":"android.bluetooth.bluetoothgattcallback.oncharacteristicRead（android.bluetooth.bluetoothgatt，android.bluetooth.bluetooth.bluetoothgatteristic togertical int int）\r\n","Returns the set of document IDs attached to the request.":"返回请求附加的文档ID集。\r\n","Drawable to use for the Paste action button in Contextual Action Bar \n         ":"可用于上下文动作栏中的粘贴动作按钮\r\n         \r\n","Indicates whether the drawer can be opened/closed by a single tap\n             on the handle.":"指示是否可以通过单个水龙头打开/关闭抽屉\r\n             在手柄上。\r\n","If true, centers this child vertically within its parent.":"如果是真的，则将这个孩子垂直以父母的身份为中心。\r\n","android.app.DialogFragment.dismiss()":"android.app.dialogfragment.dismiss（）\r\n","Query for events in the given time range.":"查询给定时间范围内的事件。\r\n","When called by a profile owner of a managed profile returns true if the profile uses unified\n            challenge with its parent user.":"当个人资料的配置文件所有者调用时，如果配置文件使用统一，则返回true\r\n            与其父用户挑战。\r\n","Loads a preview of what the AppWidget will look like after it's configured.":"加载AppWidget配置后的AppWidget的预览。\r\n","android.accessibilityservice.AccessibilityService.GESTURE_SWIPE_RIGHT_AND_DOWN":"Android.AccessibilityService.Accessibilityservice.gesture_swipe_right_and_down\r\n","A large bitmap to be shown in the notification content area.":"通知内容区域中要显示的大量位图。\r\n","Allows an application to record audio \n":"允许应用程序记录音频\r\n\r\n"," that will be checked whenever an \n            activity is started.":" 每当只有\r\n            活动开始。\r\n","Alignment constants.":"对齐常数。\r\n","Class to notify the user of events that happen.":"课程以通知用户发生的事件。\r\n","Default font family.":"默认字体家庭。\r\n","This flag indicates to the system that the accessibility service requests that an\n            accessibility button be shown within the system's navigation area, if available.":"此标志向系统指示可访问性服务要求\r\n            如果有的话，请在系统导航区域中显示可访问性按钮。\r\n"," after the instance\n        has been disposed.\n      ":" 实例之后\r\n        已经处置了。\r\n      \r\n","android.app.admin.SecurityLog.TAG_PASSWORD_HISTORY_LENGTH_SET":"android.app.admin.securitylog.tag_password_history_length_set\r\n","android.app.Activity.onStateNotSaved()":"android.app.activity.onstatenotsaved（）\r\n","Takes a screenshot of the specified display and returns it via an\n            ":"在指定的显示器上屏幕截图并通过\r\n            \r\n","GTC":"GTC\r\n",", it's the kernel user identifier that is assigned at the\n            package installation time.":"，这是分配的内核用户标识符\r\n            包装安装时间。\r\n","Definitions for working with security logs.":"使用安全日志的定义。\r\n","Enumerates values returned by several methods of ":"列举通过多种方法返回的值\r\n","android.animation.AnimatorListenerAdapter.onAnimationCancel(android.animation.Animator)":"android.animation.animatorListenerAdapter.OnanimationCancel（android.animation.animator）\r\n","Bundle key used for an ":"捆绑密钥用于\r\n","android.app.admin.DevicePolicyManager.setPermittedAccessibilityServices(android.content.ComponentName, java.util.List)":"android.app.admin.devicepolicymanager.setpermittyAccesconibilityservices（android.content.componentname，java.util.list）\r\n","android.app.appsearch.SearchSpec.getProjections()":"android.app.appsearch.searchspec.getProject（）\r\n","android.app.AppOpsManager.stopWatchingMode(android.app.OnOpChangedListener)":"android.app.appopsmanager.stopwatchingmode（android.app.onopchangedlistener）\r\n","android.app.SearchManager.SUGGEST_COLUMN_INTENT_EXTRA_DATA":"android.app.searchmanager.suggest_column_intent_extra_data\r\n","android.bluetooth.BluetoothGatt.getService(java.util.UUID)":"android.bluetooth.bluetoothgatt.getService（java.util.uuid）\r\n","android.app.FragmentTransaction.commitNowAllowingStateLoss()":"android.app.fragmentTransaction.commitnowallowingstateloss（）\r\n"," payload containing the shell command, accessible\n            via ":" 有效载荷包含shell命令，可访问\r\n            通过\r\n","\n        This accounting assumes a worldview in which Java.Interop can intervene\n        wherever a JNI Local Reference can be created. This is not the case,\n        as there are some scenarios where JNI Local References can be created\n        without Java.Interop knowing about it. One such notable example is when\n        using Platform Invoke to invoke a native ":"\r\n        该会计假设是一个世界观，java.interop可以干预\r\n        可以创建JNI本地参考的任何地方。不是这种情况，\r\n        因为在某些情况下可以创建JNI本地参考\r\n        没有Java.interop知道它。一个这样一个值得注意的例子是什么时候\r\n        使用平台调用本地\r\n","android.app.Dialog.onSearchRequested()":"android.app.dialog.onearchrequested（）\r\n","Retrieve the ID of the activity that is currently running.":"检索当前正在运行的活动的ID。\r\n","Set whether to include the application home affordance in the action bar.":"设置是否将应用程序房屋负担得起在动作栏中。\r\n","#SUGGEST_COLUMN_INTENT_EXTRA_DATA":"#suggest_column_intent_extra_data\r\n"," activity when you want to bind\n            an AppWidget to display and bindAppWidgetIdIfAllowed returns false.":" 当您想绑定时的活动\r\n            显示和bindappWidgetIffalowed的AppWidget返回false。\r\n","Enable notifications during LockTask mode.":"在LockTask模式下启用通知。\r\n","Reference to a drawable that will be used to display a text selection\n             anchor on the right side of a selection region.":"引用可绘制的可用于显示文本选择的可绘图\r\n             锚定在选择区域的右侧。\r\n","Update the current values in this ActivityOptions from those supplied\n            in <var>otherOptions</var>.":"从所提供的活动中更新此活动中的当前值\r\n            在<var>其他访问中</var>。\r\n","NetworkEvent":"Networkevent\r\n","android.app.admin.DeviceAdminInfo.getTagForPolicy(int)":"android.app.admin.deviceadmininfo.gettagforpolicy（int）\r\n","The intent to execute when the notification is explicitly dismissed by the user, either with\n            the \"Clear All\" button or by swiping it away individually.":"用户明确驳回通知时执行的意图，要么\r\n            “清除全部”按钮或单独刷掉它。\r\n","Default style for Preference.":"偏好的默认样式。\r\n","Replace an existing fragment that was added to a container.":"更换添加到容器中的现有片段。\r\n","Called by a profile or device owner to get user restrictions set with\n            ":"由配置文件或设备所有者调用以获取用户限制\r\n            \r\n","The user has performed a swipe down gesture on the touch screen.":"用户在触摸屏上进行了滑动手势。\r\n","android.accounts.AccountManager.isCredentialsUpdateSuggested(android.accounts.Account, java.lang.String, android.accounts.AccountManagerCallback, android.os.Handler)":"android.accounts.accountmanager.iscredentialsupdatesuggested（android.accounts.accounts.account，java.lang.string，android.accounts.accountmanagercallback，android.os.os.handler）\r\n","#setNotificationDelegate(String) delegate":"#SetNotificationDelegate（String）委托\r\n","android.animation.ObjectAnimator.ofMultiInt(java.lang.Object, java.lang.String, android.graphics.Path)":"android.animation.ObjectAnimator.ofmultiint（java.lang.object，java.lang.string，android.graphics.path）\r\n","android.app.admin.DevicePolicyManager.ACTION_SET_NEW_PASSWORD":"android.app.admin.devicepolicymanager.action_set_new_password\r\n","Call this when your activity is done and should be closed.":"当您的活动完成并应关闭时，请致电。\r\n","android.app.ApplicationExitInfo":"Android.App.ApplicationExitinfo\r\n","android.app.Notification.EXTRA_NOTIFICATION_ID":"android.app.notification.extra_notification_id\r\n"," used when\n            inflating with the LayoutInflater returned by ":" 在何时使用\r\n            与返回的layoutinflater充气\r\n","The requested charging constraint is no longer satisfied.":"不再满足请求的充电约束。\r\n","android.animation.LayoutTransition.addTransitionListener(android.animation.TransitionListener)":"android.animation.layouttransition.AddTransitionListener（android.animation.transitionListener）\r\n","Encapsulates results of a search operation.":"封装搜索操作的结果。\r\n",": don't ask for user\n            credentials on device boot.":"：不要要求用户\r\n            设备引导上的凭据。\r\n","android.app.Instrumentation.acquireLooperManager(android.os.Looper)":"android.app.instrumentation.acquireloopermanager（android.os.looper）\r\n","\n[JniTypeSignature (\"my/Example\")]\npartial class ExampleBinding : IJavaPeerable {\n\n\t~ExampleBinding ()\n\t{\n        JniEnvironment.Runtime.ValueManager.TryCollectObject (this);\n\t}\n\n\tprotected virtual void Dispose (bool disposing)\n\t{\n\t}\n\n\tvoid IJavaPeerable.Finalized ()\n\t{\n\t    Dispose (disposing: false);\n\t}\n}\n        ":"\r\n[jnitypesignature（“我/示例”）]\r\n部分类示例示例：\r\n\r\n〜示例binding（）\r\n{\r\n        jnienvironment.runtime.valuemanager.trycollectobject（this）;\r\n}\r\n\r\n受保护的虚拟空隙处置（布尔处置）\r\n{\r\n}\r\n\r\nvoid ijavapeer.finalized（）\r\n{\r\n处置（处置：false）;\r\n}\r\n}\r\n        \r\n","Launch search UI.":"启动搜索UI。\r\n","android.app.Notification.Notification(int, java.lang.CharSequence, long)":"android.app.notification.notification（int，java.lang.CharSequence，long）\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_KEEP_ACCOUNT_ON_MIGRATION":"android.app.admin.devicepolicymanager.extra_provisioning_keep_account_on_migration\r\n","android.appwidget.AppWidgetProviderInfo.previewLayout":"android.appwidget.appwidgetProviderInfo.previewlayout\r\n","android.accessibilityservice.AccessibilityService.GESTURE_SWIPE_LEFT_AND_RIGHT":"Android.AccessibilityService.Accessibilityservice.gesture_swipe_left_and_right\r\n","If the parameters are outside of their\n                                  specified range.\n":"如果参数不在其之外\r\n                                  指定范围。\r\n\r\n","Indicates a failed cryptographic key integrity check.":"指示失败的加密密钥完整性检查。\r\n","Gets the id of the display where activity should be launched.":"获取应启动活动的显示屏ID。\r\n","android.app.LoaderManager.destroyLoader(int)":"android.app.loadermanager.destroyloader（int）\r\n","android.app.Dialog.setCancelable(boolean)":"android.app.dialog.setcallable（布尔值）\r\n","Called by the system when the user performs a specific gesture on the\n            specific touch screen.":"当用户在\r\n            特定的触摸屏。\r\n","android.app.AppOpsManager.noteProxyOpNoThrow(java.lang.String, java.lang.String, int)":"android.app.appopsmanager.noteproxyopnothrow（java.lang.string，java.lang.string，int）\r\n","android.app.admin.DevicePolicyManager.retrieveNetworkLogs(android.content.ComponentName, long)":"android.app.admin.devicepolicymanager.trievenetworklogs（android.content.componentname，long）\r\n","Apps can use this method to find out if the device was provisioned as\n            organization-owend device with a managed profile.":"应用程序可以使用此方法来找出是否将设备提供为\r\n            带有托管配置文件的组织 - 装置设备。\r\n","Attach the bread crumbs to their activity.":"将面包屑固定在其活动中。\r\n","\n            Server authentication response indicates that the request to authorize comes from a proxy if this property is ":"\r\n            服务器身份验证响应表明，如果此属性为，则授权请求来自代理\r\n","android.app.Activity.isInPictureInPictureMode()":"android.app.activity.isinpictureinpicturemode（）\r\n","android.animation.LayoutTransition.showChild(android.view.ViewGroup, android.view.View)":"android.animation.layouttransition.showchild（android.view.viewgroup，android.view.view）\r\n","Clear the list of Views that have been created by this AppWidgetHost.":"清除此AppWidgethost创建的视图列表。\r\n","android.app.appsearch.AppSearchSchema.getProperties()":"android.app.app.appsearch.appsearchschema.getProperties（）\r\n","android.app.NotificationManager.BUBBLE_PREFERENCE_SELECTED":"android.app.notificationmanager.bubble_preference_selected\r\n","android.app.slice.Slice.HINT_KEYWORDS":"android.app.slice.slice.hint_keywords\r\n","android.app.FragmentTransaction.commitAllowingStateLoss()":"android.app.FragmentTransaction.commitallowingstateloss（）\r\n","android.app.admin.DevicePolicyManager.installSystemUpdate(android.content.ComponentName, android.net.Uri, java.util.concurrent.Executor, android.app.admin.InstallSystemUpdateCallback)":"android.app.admin.devicepolicymanager.installsystemupdate（android.content.componentname，android.net.uri，java.util.concurrent.executor，android.app.App.admin.InstallSalsyStallsypatemupdatecallback）\r\n","Return the total bytes used by all files in the shared/external storage\n            hosted on this volume.":"返回共享/外部存储中所有文件使用的总字节\r\n            在此卷上托管。\r\n","Whether do show week numbers.":"是否表演周的数字。\r\n","android.app.Activity.onLocalVoiceInteractionStopped()":"android.app.activity.onlocalvoiceInteractionstopped（）\r\n",", this searchable activity will be\n             included in any global lists of search targets.":"，这项可搜索的活动将是\r\n             包括在搜索目标的任何全局列表中。\r\n","android.app.admin.DevicePolicyManager.ID_TYPE_SERIAL":"android.app.admin.devicepolicymanager.id_type_serial\r\n","Set the RemoteViews to use for the specified appWidgetIds.":"设置用于指定AppWidgetIDS的远程视图。\r\n"," to control the network logging feature.":" 控制网络记录功能。\r\n","Checks whether ":"检查是否\r\n"," to configure the connection. \n            If, however, the application requires finer control over the SSL configuration (e.g. it implements its own TrustManager) then\n            it should leave this property empty and instead derive a custom class from AndroidClientHandler and override, as needed, the \n            ":" 配置连接。\r\n            但是，如果应用程序需要对SSL配置进行更精细的控制（例如，它实现了自己的信任者）\r\n            它应该使该属性空白，而是根据需要从AndroidClientHandler和覆盖中得出自定义类\r\n            \r\n","Gets the password complexity requirement set by ":"获取密码复杂性要求设置\r\n","android.R.attr#windowIsTranslucent":"android.r.attr＃windowsistranslucent\r\n"," object with the information needed to have a status bar icon without the standard expanded view.":" 对象具有所需的信息，即具有不带标准扩展视图的状态栏图标。\r\n","#onActivityResult(int, int, Intent)":"#OnactivityResult（INT，INT，意图）\r\n","#popBackStack()":"#popbackstack（）\r\n","Defines whether the ViewGroup should always draw its children using their\n             drawing cache or not.":"定义ViewGroup是否应始终使用他们的孩子吸引孩子\r\n             是否绘制缓存。\r\n"," when the download is waiting for network connectivity to\n            proceed.":" 下载正在等待网络连接到\r\n            继续。\r\n","android.app.FragmentManager.popBackStack()":"android.app.fragmentmanager.popbackstack（）\r\n","android.app.AppOpsManager.OPSTR_SEND_SMS":"android.app.appopsmanager.opptr_send_sms\r\n","android.app.UiAutomation.grantRuntimePermissionAsUser(java.lang.String, java.lang.String, android.os.UserHandle)":"android.app.uiautomation.grantruntimepermissionaser（java.lang.string，java.lang.string，android.os.userhandle）\r\n","android.app.AutomaticZenRule.getName()":"android.app.automationzenrule.getName（）\r\n","#acquireLease(BlobHandle, int)":"#AcquiRelease（BlobHandle，int）\r\n","This class is used to instantiate animator XML files into Animator objects.":"该类用于将动画剂XML文件实例化为动画剂对象。\r\n","Returns the availability of the people behind this conversation while this activity is\n            happening.":"在此活动是\r\n            发生。\r\n","Called by the device owner or profile owner to clear application user data of a given\n            package.":"设备所有者或配置文件所有者拨打以清除给定的应用程序用户数据\r\n            包裹。\r\n","Flag used by ":"使用的标志\r\n","android.app.AlarmManager.canScheduleExactAlarms()":"android.app.alarmmanager.canscheduleexactalarms（）\r\n","Returns whether animators are currently enabled, system-wide.":"返回动画师当前是否启用了系统范围。\r\n","Select this tab.":"选择此选项卡。\r\n","Interface to watch for changes to the back stack.":"接口要注意更改后堆栈。\r\n",": allow sleep mode while in car mode.":"：在汽车模式下允许睡眠模式。\r\n","AccessibilityNodeInfo":"可访问性Nodeinfo\r\n","When opening a new activity that hides the wallpaper, while currently showing the wallpaper, this is the animation that is run on the old wallpaper activity (which is exiting the screen).":"当打开隐藏墙纸的新活动时，目前显示墙纸时，这是在旧墙纸活动（正在退出屏幕）上运行的动画。\r\n","int[]":"int []\r\n","Handler":"处理程序\r\n"," but called for those activities created with\n            the attribute ":" 但呼吁创建的那些活动\r\n            属性\r\n","android.app.ExpandableListActivity.getExpandableListView()":"android.app.expandableListactivity.getExpandableListView（）\r\n","android.app.UiAutomation.ROTATION_FREEZE_CURRENT":"android.app.uiautomation.rotation_freeze_current\r\n","android.bluetooth.BluetoothGatt.GATT_INVALID_OFFSET":"android.bluetooth.bluetoothgatt.gatt_invalid_offset\r\n","\n            is hidden or not.":"\r\n            是否隐藏。\r\n","android.animation.PropertyValuesHolder.ofMultiInt(java.lang.String, android.graphics.Path)":"android.animation.propertyvaluesholder.ofmultiint（java.lang.string，android.graphics.path）\r\n","#writeToParcel":"#writetoparcel\r\n"," is being attached to this host, immediately\n            after the call to its ":" 立即被附加到这个主机上\r\n            打电话给它\r\n","Disable showing all notifications on secure keyguard screens (e.":"禁用显示安全钥匙屏幕上的所有通知（e。\r\n","Change the color of the title associated with this activity.":"更改与此活动相关的标题的颜色。\r\n","Set the large number at the right-hand side of the notification.":"将大量设置在通知的右侧。\r\n","#onSearchRequested":"#OnsearchRequested\r\n","Returns a list of the searchable activities that can be included in global search.":"返回可以包含在全球搜索中的可搜索活动列表。\r\n","Resource representing the term \"All Contacts\" (e.g.":"代表“所有联系人”一词的资源（例如\r\n","The TypeEvaluator will be automatically determined based on the type of values\n supplied to PropertyValuesHolder.":"TypeeValuator将根据值的类型自动确定\r\n 提供给财产价值持有人。\r\n","android.app.Activity.onLocalVoiceInteractionStarted()":"android.app.activity.onlocalvoiceInteractionStarted（）\r\n","Return storage statistics for a specific package on the requested storage\n            volume.":"返回请求存储的特定软件包的存储统计信息\r\n            体积。\r\n","android.app.ActivityOptions.getLaunchDisplayId()":"android.app.activityOptions.getLaunchDisplayid（）\r\n","The navigation device preferred by an application.":"应用程序首选的导航设备。\r\n","android.accessibilityservice.AccessibilityService.GESTURE_DOUBLE_TAP_AND_HOLD":"Android.AccessibilityService.Accessibilityservice.gesture_double_tap_and_hold\r\n"," when the notification is\n            shown in its expanded form, as supplied to\n            ":" 当通知是\r\n            以扩展形式显示，如\r\n            \r\n","android.app.Service.getApplication()":"android.app.service.getApplication（）\r\n","android.app.people.ConversationStatus.ACTIVITY_AUDIO":"android.app.people.conversationstatus.activity_audio\r\n","Specifies the time zone to use.":"指定使用时区。\r\n","Returns the permissions for this characteristic.":"返回此特征的权限。\r\n","android.bluetooth.BluetoothAdapter.getBondedDevices()":"android.bluetooth.bluetoothadapter.getBondedDevices（）\r\n","android.bluetooth.BluetoothAdapter.listenUsingInsecureRfcommWithServiceRecord(java.lang.String, java.util.UUID)":"android.bluetooth.bluetoothadapter.listenusinginsecurerfcommwithservicerecord（java.lang.string，java.util.uuid）\r\n","Indicates that an Activity should be excluded from the list of\n         recently launched activities.":"表明应将活动排除在\r\n         最近启动了活动。\r\n"," but returns the <em>raw</em>\n            mode associated with the op.":" 但返回<em> raw </em>\r\n            与OP相关联的模式。\r\n","Exception thrown when an app tries to start a ":"当应用程序试图启动一个时，会引发异常\r\n","Invoked when the garbage collector has detected that this instance is no longer reachable.":"当垃圾收集器检测到此实例不再可以到达时被调用。\r\n","android.app.AppOpsManager.startOpNoThrow(java.lang.String, int, java.lang.String)":"android.app.appopsmanager.startopnothrow（java.lang.string，int，java.lang.string）\r\n","Notifies the system that the account has just been authenticated.":"通知系统刚刚验证该帐户。\r\n","Activity action: begin the process of encrypting data on the device.":"活动动作：开始在设备上加密数据的过程。\r\n","Get an open, readable file descriptor to the given wallpaper image file.":"获取给定壁纸图像文件的打开，可读的文件描述符。\r\n","android.app.SearchManager.EXTRA_DATA_KEY":"android.app.searchmanager.extra_data_key\r\n","android.app.Notification.CATEGORY_STOPWATCH":"android.app.notification.category_stopwatch\r\n","android.app.WallpaperManager.clearWallpaper()":"android.app.wallpapermanager.clearwallpaper（）\r\n","Broadcast Action: The local Bluetooth adapter has changed its friendly\n            Bluetooth name.":"广播动作：本地蓝牙适配器改变了其友好\r\n            蓝牙名称。\r\n"," property by path.":" 路径属性。\r\n","#FORMAT_LONG":"#format_long\r\n","android.view.Window.Callback#onPanelClosed(int, Menu)":"android.view.window.callback＃OnPanelClosed（int，菜单）\r\n","Constructs a new object from three colors, where hints can be specified.":"从三种颜色中构造一个新对象，可以在其中指定提示。\r\n","Used for permissions that provide access to the user voicemail box.":"用于提供对用户语音邮件框的权限。\r\n","Prepare the Screen's standard options menu to be displayed.":"准备要显示的屏幕标准选项菜单。\r\n","#queryEvents(long, long)":"#queryevents（长，长）\r\n","Return the full bread crumb title resource identifier for the entry,\n or 0 if it does not have one.":"返回该条目的完整面包面包屑标题标识符，\r\n 或0如果没有一个。\r\n"," to this Notification.":" 通知。\r\n","android.app.assist.AssistContent.getWebUri()":"android.app.assist.AssistContent.GetWeburi（）\r\n"," but instead of throwing a ":" 但是不要扔\r\n","Specifies the formatting pattern used to show the time and/or date\n             in 24-hour mode.":"指定用于显示时间和/或日期的格式模式\r\n             在24小时模式下。\r\n","If set, specifies that this TextView has a textual input method\n             and should automatically capitalize what the user types.":"如果设置，请指定此文本视图具有文本输入方法\r\n             并应自动资本化用户类型。\r\n","DeviceDefault light theme for a window without an action bar that will be displayed either\n    full-screen on smaller screens (small, normal) or as a dialog on larger screens (large,\n    xlarge).":"窗户的Devicedefault Light主题，没有动作栏，该主题将显示\r\n    较小的屏幕上的全屏（小，正常）或较大屏幕上的对话框（大，\r\n    Xlarge）。\r\n","android.app.admin.DevicePolicyManager.isLockTaskPermitted(java.lang.String)":"android.app.admin.devicepolicymanager.islocktaskpernited（java.lang.string）\r\n","#start()":"＃开始（）\r\n","android.app.SearchManager.SUGGEST_COLUMN_TEXT_1":"android.app.searchmanager.suggest_column_text_1\r\n","android.app.Activity.setLocusContext(android.content.LocusId, android.os.Bundle)":"android.app.activity.setlocuscontext（android.content.locusid，android.os.bundle）\r\n","android.accounts.AccountManager.getAccountsAndVisibilityForPackage(java.lang.String, java.lang.String)":"android.accounts.accountmanager.getaccountsandvisibilityforpackage（java.lang.string，java.lang.string）\r\n","Honeycomb holographic theme (dark version).":"蜂窝全息主题（深色版本）。\r\n",": go to the car\n            home activity as part of the enable.":"：去车\r\n            家庭活动作为启用的一部分。\r\n"," with\n            no options.":" 和\r\n            没有选项。\r\n"," to be used in ":" 在\r\n","android.app.usage.UsageStats.getTotalTimeForegroundServiceUsed()":"android.app.usage.usagestats.getTotalTimeForegroundServiceused（）\r\n","#startWatchingMode":"#startwatchingmode\r\n","Thickness of the ring expressed as a ratio of the ring's width.":"环的厚度表示为环的宽度比。\r\n","Constructs a Keyframe object with the given time and value.":"用给定的时间和值构造一个关键帧对象。\r\n","android.app.AppOpsManager.OPSTR_FINE_LOCATION":"android.app.appopsmanager.opptr_fine_location\r\n","UsageStats":"Usagestats\r\n","#lockNow(int)":"#locknow（int）\r\n","\n            in the application's ":"\r\n            在应用程序中\r\n"," of all failed ":" 所有失败\r\n","Returns the string representation of a capability.":"返回功能的字符串表示。\r\n","Defines the animation behavior when it reaches the end and the repeat count is\n             greater than 0 or infinite.":"定义动画行为到达末尾，重复计数为\r\n             大于0或无限。\r\n","android.app.WallpaperManager.clear()":"android.app.wallpapermanager.clear（）\r\n","Gets the optional interpolator for this Keyframe. -or- Sets the optional interpolator for this Keyframe.":"获取此密钥帧的可选插装器。 - 或 - 为此密钥帧设置可选的插值器。\r\n",", but allows an\n            array of Intents to be supplied.":"，但允许\r\n            要提供的一系列意图。\r\n","android.accessibilityservice.AccessibilityService.onInterrupt()":"Android.AccessibilityService.Accessibilityservice.oninterrupt（）\r\n","android.app.AppOpsManager.OPSTR_MONITOR_LOCATION":"android.app.appopsmanager.opptr_monitor_location\r\n","android.appwidget.AppWidgetManager.bindAppWidgetIdIfAllowed(int, android.content.ComponentName)":"android.appwidget.appwidgetmanager.bindappwidgetidifallowed（int，android.content.componentname）\r\n","android.app.Fragment.setUserVisibleHint(boolean)":"Android.App.Fragment.SetuservisibleHint（boolean）\r\n","android.app.usage.ExternalStorageStats.getVideoBytes()":"android.app.usage.externalstoragestats.getVideobytes（）\r\n","Return the estimated size of upload traffic that will be performed by\n            this job, in bytes.":"返回将执行的上传流量的估计大小\r\n            这项工作，字节。\r\n","Access to body sensors such as heart rate, etc.":"访问身体传感器，例如心率，等等。\r\n"," that\n            allows a mobile device management application or NFC programmer application which starts\n            managed provisioning to pass data to the management application instance after provisioning.":" 那\r\n            允许启动的移动设备管理应用程序或NFC程序员应用程序\r\n            托管供应后，将数据传递给管理应用程序实例。\r\n","android.app.AlertDialog.setView(android.view.View)":"android.app.alertdialog.setView（android.view.view）\r\n","#ACTION_DOWNLOAD_COMPLETE":"#action_download_complete\r\n","Allows an application to read or write the system settings.":"允许应用程序读取或编写系统设置。\r\n","android.app.Fragment.getSharedElementEnterTransition()":"android.app.fragment.getSharedElementEnterTransition（）\r\n","BackupAgentHelper":"备用款项\r\n","Start the remote device discovery process.":"启动远程设备发现过程。\r\n","BluetoothProfile#HEARING_AID":"BluetoothProfile＃fall_aid\r\n","Characteristic write permission":"特征写的权限\r\n","android.animation.AnimatorSet.playTogether(android.animation.Animator)":"android.animation.animatorset.playtogether（android.animation.animator）\r\n","android.app.ActionBar.selectTab(android.app.Tab)":"Android.App.ActionBar.SelectTab（android.app.tab）\r\n","; these items might not be shown to the user except under special\n circumstances, such as detailed notification logs.":";除非特殊\r\n 情况，例如详细的通知日志。\r\n","android.app.usage.StorageStats.getAppBytes()":"android.app.usage.storagestats.getappbytes（）\r\n","#onResume()":"#onresume（）\r\n","android.app.job.JobParameters.STOP_REASON_QUOTA":"android.app.job.jobparameters.stop_reason_quota\r\n","Get the position of the selected navigation item in list or tabbed navigation modes.":"获取所选导航项目在列表或选项卡式导航模式中的位置。\r\n","Flag to specify if this application needs to be present for all users.":"标志以指定是否需要为所有用户提供此应用程序。\r\n","\n          Whether or not the state of the task that the activity is in will\n          always be maintained by the system.\n        ":"\r\n          活动中的任务状态是否处于意愿\r\n          始终由系统维护。\r\n        \r\n","Indicates what view should not be affected by gravity.":"指示不应受重力影响什么视图。\r\n","android.animation.ValueAnimator.getAnimatedValue(java.lang.String)":"android.animation.valueAnimator.getAnimatedValue（java.lang.string）\r\n","Activity action: Starts the administrator to show policy compliance for the provisioning.":"活动行动：启动管理员以显示策略合规性。\r\n","#FLAG_SYSTEM":"#FLAG_SYSTEM\r\n","Base class for the ":"基础课\r\n","Get the ID of the current wallpaper of the given kind.":"获取给定类型的当前墙纸的ID。\r\n"," writes entire files\n            to a full backup data set, via its ":" 写整个文件\r\n            通过其完整的备份数据集\r\n","Force device into car mode, like it had been placed in the car dock.":"将设备施加到汽车模式，就像将其放置在汽车码头中一样。\r\n","Default style for PreferenceCategory.":"peferenceCategory的默认样式。\r\n","android.app.AppOpsManager.OPSTR_READ_CONTACTS":"android.app.appopsmanager.opptr_read_contacts\r\n"," that contains the\n       views for interacting with the user in extraction mode.":" 其中包含\r\n       在提取模式下与用户互动的视图。\r\n","android.app.admin.DevicePolicyManager.ACTION_DEVICE_OWNER_CHANGED":"android.app.admin.devicepolicymanager.action_device_owner_changed\r\n","Create an uninitialized instance of CrashInfo.":"创建一个crashinfo的非初始化实例。\r\n","Characteristic property: Characteristic has extended properties":"特征属性：特征具有扩展属性\r\n","Make note of an application performing an operation.":"记下执行操作的应用程序。\r\n","Intent#fillIn Intent.fillIn()":"意图＃fillin intent.fillin（）\r\n","A class containing information about a pending system update.":"包含有关待处理系统更新的信息的类。\r\n","If provided, and not overridden by an action in the selected suggestion, this\n            string will be placed in the data field of the ":"如果提供的，并且不被选定建议中的诉讼覆盖，那么\r\n            字符串将放置在数据字段中\r\n","Change the current system wallpaper to a bitmap, specifying a hint about\n            which subrectangle of the full image is to be visible.":"将当前的系统壁纸更改为位图，并指定有关\r\n            完整图像的哪个子区域是可见的。\r\n","Set the RemoteViews to use for all AppWidget instances for the supplied AppWidget provider.":"为提供的AppWidget提供商设置用于所有AppWidget实例的远程视频。\r\n","Retrieve the current minimum password length for a particular admin or all admins that set\n            restrictions on this user and its participating profiles.":"检索特定管理员或所有设置的所有管理员的当前最小密码长度\r\n            对该用户及其参与资料的限制。\r\n","Used for permissions that provide access to other devices through Bluetooth.":"用于通过蓝牙访问其他设备的权限。\r\n","#PASSWORD_QUALITY_COMPLEX":"#password_quality_complex\r\n","android.app.appsearch.GetByDocumentIdRequest.getProjections()":"android.app.appsearch.getbydocumentidrequest.getProjections（）\r\n","Broadcast action: notify that some app is attempting to choose a KeyChain key.":"广播动作：通知某些应用程序正在尝试选择一个键链密钥。\r\n","Default style for CheckBoxPreference.":"CheckboxPreference的默认样式。\r\n"," to act as the ":" 充当\r\n","The initial vertical scroll offset, in pixels.":"初始的垂直滚动偏移，以像素为单位。\r\n","Loads the icon to display for this AppWidget in the AppWidget picker.":"加载在AppWidget Picker中显示此AppWidget的图标。\r\n","DevicePolicyManager#resetPassword":"DevicePolicyManager＃resetPassword\r\n","AccountManager#KEY_ACCOUNT_SESSION_BUNDLE":"AccountManager＃key_account_session_bundle\r\n","Checks whether this searchable activity has auto URL detection turned on.":"检查此可搜索活动是否已自动检测到。\r\n","The process name in which the crash or error occurred.":"发生崩溃或错误的过程名称。\r\n","android.app.slice.SliceManager.unpinSlice(android.net.Uri)":"android.app.slice.slicemanager.unpinslice（android.net.uri）\r\n","Called when an action mode is being started for this window.":"为此窗口启动动作模式时调用。\r\n","android.app.admin.DevicePolicyManager.setBackupServiceEnabled(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setbackupserviceEnabled（android.content.componentname，boolean）\r\n","android.appwidget.AppWidgetHostView.AppWidgetHostView(android.content.Context)":"android.appwidget.appwidgethostview.appwidgethostview（android.content.context）\r\n","Load the thumbnail image for this wallpaper.":"为此墙纸加载缩略图图像。\r\n","#FLAG_CANCEL_CURRENT":"#flag_cancel_current\r\n","android.app.slice.Slice.SUBTYPE_MILLIS":"android.app.slice.slice.subtype_millis\r\n","Set a list of items, which are supplied by the given ":"设置一个项目列表，由给定提供\r\n","The icon to display on the key instead of the label.":"要在钥匙上显示的图标，而不是标签。\r\n","android.app.job.JobWorkItem.getIntent()":"android.app.job.jobworkitem.getintent（）\r\n","android.app.usage.StorageStatsManager.queryExternalStatsForUser(java.util.UUID, android.os.UserHandle)":"android.app.usage.storagestatsmanager.queryexternalstatsforuser（java.util.uuid，android.os.os.userhandle）\r\n"," with additional\n            foregroundServiceType parameter.":" 还有其他\r\n            ForegroundServiceType参数。\r\n","An issue occurred reading or writing to storage.":"发生了一个问题，是阅读或写入存储。\r\n","Allows an application to write to the user's calendar data.":"允许应用程序写入用户的日历数据。\r\n","A factory method for creating an AuthenticatorDescription that can be used as a key\n            to identify the authenticator by its type.":"一种创建AuthentIcatordescription的工厂方法，可以用作钥匙\r\n            通过其类型识别身份验证者。\r\n","android.app.admin.DevicePolicyManager.hasGrantedPolicy(android.content.ComponentName, int)":"android.app.admin.devicepolicymanager.hasgrantedpolicy（android.content.componentname，int）\r\n","Called by a profile owner or device owner to retrieve the application restrictions managing\n            package for the current user, or ":"由配置文件所有者或设备所有者拨打以检索管理限制管理\r\n            当前用户的包装，或\r\n","Fragment should simply fade in or out; that is, no strong navigation associated\n with it except that it is appearing or disappearing for some reason.":"碎片应简单地淡出或淡出；也就是说，没有强大的导航\r\n 除了出现或出于某种原因而出现或消失。\r\n","Cancel the dialog.":"取消对话框。\r\n","android.app.Notification.EXTRA_SHOW_WHEN":"android.app.notification.extra_show_when\r\n","android.app.job.JobInfo.isImportantWhileForeground()":"android.app.job.jobinfo.isimportantwhileforeground（）\r\n","Return a string indicating the author(s) of this wallpaper.":"返回指示此墙纸作者的字符串。\r\n","android.app.Fragment.onPrepareOptionsMenu(android.view.Menu)":"android.app.fragment.onprepareoptionsmenu（android.view.menu）\r\n","android.view.accessibility.AccessibilityEvent":"android.view.Accessibility.AccessibilityEvent\r\n","The column span: the difference between the right and left\n        boundaries delimiting the group of cells occupied by this view.":"列跨度：左右之间的差\r\n        边界划定了这种观点所占据的单元组。\r\n","Called to inform an app that a slices is no longer pinned.":"叫通知应用程序不再固定切片。\r\n","A report from a user to a developer about a running service that the\n            user doesn't think should be running.":"用户向开发人员的报告，涉及运行服务\r\n            用户认为不应该运行。\r\n","android.app.NotificationChannel":"Android.App.NotificationChannel\r\n","android.app.FragmentHostCallback.onAttachFragment(android.app.Fragment)":"Android.App.FragmentHostCallback.OnattachFragment（Android.App.Fragment）\r\n","android.app.admin.DevicePolicyManager.getNearbyAppStreamingPolicy()":"android.app.admin.devicepolicymanager.getNearbyAppStreamingPolicy（）\r\n","NumberFormat":"NumberFormat\r\n","android.app.admin.DeviceAdminReceiver.BUGREPORT_FAILURE_FAILED_COMPLETING":"android.app.admin.deviceadminreceiver.bugreport_failure_failed_completing\r\n","android.app.LocalActivityManager.dispatchStop()":"android.app.localactivitymanager.dispatchstop（）\r\n","Maps a value representing the elapsed fraction of an animation to a value that represents\n            the interpolated fraction.":"映射一个代表动画的经过比例的值\r\n            插值分数。\r\n","Notification category: calendar event.":"通知类别：日历事件。\r\n","java.util.Locale":"java.util.locale\r\n","android.app.NotificationManager.getBubblePreference()":"android.app.notificationmanager.getBubblePreference（）\r\n","android.app.Fragment.getAllowReturnTransitionOverlap()":"Android.App.Fragment.GetAllowReTurnTransitionOverLap（）\r\n","android.app.job.JobScheduler.cancel(int)":"android.app.job.jobscheduler.cancel（int）\r\n","Default style for YesNoPreference.":"YesnopReference的默认样式。\r\n","android.accessibilityservice.AccessibilityServiceInfo.DEFAULT":"Android.AccessibilityService.Accessibilityserviceinfo.default\r\n","Get the total time this event was active, measured in milliseconds.":"获得此事件活跃的总时间，以毫秒为单位。\r\n","Context#startActivity(Intent) Context.startActivity(Intent)":"上下文＃startActivity（意图）context.startactivity（意图）\r\n","#ACTION_DEVICE_ADMIN_DISABLE_REQUESTED":"#action_device_admin_disable_requested\r\n","Returns whether it is possible for the caller to initiate provisioning of a managed profile\n            or device, setting itself as the device or profile owner.":"返回呼叫者是否有可能启动托管配置文件的配置\r\n            或设备，将自己设置为设备或配置文件所有者。\r\n","Moves all Fragments managed by the controller's FragmentManager\n            into the start state.":"移动由控制器的FragmentManager管理的所有片段\r\n            进入开始状态。\r\n","Default background dim amount when a menu, dialog, or something similar pops up.":"当菜单，对话框或类似内容弹出时，默认背景昏暗金额。\r\n","android.app.admin.DevicePolicyManager.LOCK_TASK_FEATURE_SYSTEM_INFO":"android.app.admin.devicepolicymanager.lock_task_feature_system_info\r\n","F:Android.App.Admin.DevicePolicyManager.AddCrossProfileIntentFilter":"f：android.app.admin.devicepolicymanager.addcrossprofileintentfilter\r\n","Add an additional content view to the activity.":"在活动中添加其他内容视图。\r\n","android.accounts.AuthenticatorDescription":"android.accounts.authenticatordescription\r\n","android.app.admin.DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE":"android.app.admin.devicepolicymanager.action_provision_managed_profile\r\n","An item in the list\n":"列表中的项目\r\n\r\n","android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_FEATURES_NONE":"android.app.admin.devicepolicymanager.keyguard_disable_features_none\r\n","Remove a current administration component.":"删除当前的管理组件。\r\n","Variant on ":"变体\r\n","This class may be used to filter download manager queries.":"该类可用于过滤下载管理器查询。\r\n","The CA certificate of the wifi network in ":"WiFi网络的CA证书\r\n","Determines whether the strip under the tab indicators is drawn or not.":"确定是否绘制了标签指示器下的条带。\r\n","AT command type ACTION used with\n ":"在命令类型操作中使用\r\n \r\n","android.app.appsearch.GenericDocument.getNamespace()":"android.app.app.appsearch.genericdocument.getnamespace（）\r\n","Read a stroke from the gesture":"从手势中读取中风\r\n","android.app.KeyguardManager.isKeyguardLocked()":"android.app.keyguardmanager.iskeyguardlocked（）\r\n","Sent when an instance of an AppWidget is added to a host for the first time.":"首次将AppWidget实例添加到主机时发送。\r\n","android.bluetooth.BluetoothAssignedNumbers":"android.bluetooth.bluetoothAssignedNumbers\r\n","Creates a snapshot of a shared element to be used by the remote Activity and reconstituted\n            with ":"创建一个共享元素的快照，要由远程活动使用并重组\r\n            和\r\n","android.app.AutomaticZenRule.isEnabled()":"android.app.automationzenrule.isenabled（）\r\n","Characteristic permission: Allow signed write operations":"特征许可：允许签名的写操作\r\n","Constructs and returns a PropertyValuesHolder with a given property name and\n            set of int values.":"构建并返回具有给定属性名称的财产价值持有人\r\n            集合值集。\r\n","android.app.job.JobInfo.getTransientExtras()":"android.app.job.jobinfo.getTransientExtras（）\r\n","Returns the user visible name of this channel. -or- Sets the user visible name of this channel.":"返回此通道的用户可见名称。 - 或 - 设置此通道的用户可见名称。\r\n","Gets all hints associated with this SliceItem.":"获取与此片段相关的所有提示。\r\n","Provide the adapter for the expandable list.":"为可扩展列表提供适配器。\r\n","Unflatten the notification from a parcel.":"取消包裹中的通知。\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DEVICE_ADMIN_MINIMUM_VERSION_CODE":"android.app.admin.devicepolicymanager.extra_provisioning_device_admin_minimum_version_code\r\n","Must be called by a device owner or a profile owner of an organization-owned managed profile\n            to set the default SMS application.":"必须由设备所有者或组织拥有的托管个人资料的个人资料所有者调用\r\n            设置默认的SMS应用程序。\r\n","Indicates whether this keyframe has a valid value.":"指示此密钥帧是否具有有效值。\r\n","Removes an auth token from the AccountManager's cache.":"从AccountManager的高速缓存中删除身份令牌。\r\n","android.app.appsearch.PackageIdentifier.PackageIdentifier(java.lang.String, byte[])":"android.app.appsearch.packageidendifier.packageidentifier（java.lang.string，byte []）\r\n","android.app.AppOpsManager.MODE_DEFAULT":"android.app.appopsmanager.mode_default\r\n","Removes all published statuses for the given conversation.":"删除给定对话的所有已发布状态。\r\n","If true, the image view will be baseline aligned with based on its\n             bottom edge.":"如果为true，则图像视图将基于基准对齐\r\n             底部边缘。\r\n","Small ProgressBar in title style.":"标题风格的小进度栏。\r\n","android.app.AppOpsManager.OPSTR_GET_USAGE_STATS":"android.app.appopsmanager.opptr_get_usage_stats\r\n","android.view.Window":"android.view.window\r\n","Called by a device owner to specify the user session end message.":"设备所有者打电话给用户会话结束消息。\r\n"," from a drawable.":" 来自可绘制的。\r\n","Query the minimum flex time allowed for periodic scheduled jobs.":"查询定期安排的作业允许的最小弹性时间。\r\n","android.app.job.JobInfo.getInitialBackoffMillis()":"android.app.job.jobinfo.getinitialbackoffmillis（）\r\n","#onConfigurationChanged(Configuration)":"#onconfigurationchanged（配置）\r\n"," fields to set the icon and time fields in the view.":"在视图中设置图标和时间字段的字段。\r\n",": indicates that\n            the Parcelable object's flattened representation includes a file descriptor.":"：表示\r\n            包裹对象的扁平表示包含文件描述符。\r\n","Amount of padding on either side of text within the switch thumb.":"开关拇指中文本两侧的填充量。\r\n","Flag indicating that detail should be built from SocialProvider.":"标志表明应由社交推广者构建细节。\r\n","#KEYGUARD_DISABLE_FINGERPRINT":"#keyguard_disable_fingerprint\r\n"," but for setting data results.":" 但是用于设置数据结果。\r\n","The most prominent text color.":"最突出的文字颜色。\r\n","#ACTION_PASSWORD_CHANGED":"#action_password_changed\r\n","Construct a PointFEvaluator that returns a new PointF on every evaluate call.":"构建一个PointFevaluator，在每个评估呼叫中都返回一个新的PointF。\r\n","android.app.Dialog.isShowing()":"android.app.dialog.isshowing（）\r\n","android.app.Instrumentation.addResults(android.os.Bundle)":"android.app.instrumentation.Addresults（android.os.bundle）\r\n","android.app.admin.DevicePolicyManager.lockNow()":"android.app.admin.devicepolicymanager.locknow（）\r\n","android.app.PendingIntent.getCreatorUid()":"android.app.pendingIntent.getCreatoruid（）\r\n","Application process was killed by the system for various other reasons which are\n            not by problems in apps and not actionable by apps, for example, the system just\n            finished updates; ":"由于其他各种原因，申请过程被系统杀死\r\n            不是通过应用程序中的问题，而不是应用程序可行的，例如，系统只是\r\n            完成的更新；\r\n","android.app.FragmentManager.putFragment(android.os.Bundle, java.lang.String, android.app.Fragment)":"android.app.fragmentManager.putfragment（android.os.bundle，java.lang.string，android.app.fragment）\r\n","This is called when the system action list is changed.":"当更改系统操作列表时，这就是调用。\r\n","android.app.appsearch.GenericDocument.getPropertyLongArray(java.lang.String)":"android.app.appsearch.genericdocument.getPropertylongarray（java.lang.string）\r\n","Return the text of this tab.":"返回此选项卡的文本。\r\n","A class that represents one freeze period which repeats <em>annually</em>.":"一个代表一个冻结期的类，每年重复<em> </em>。\r\n","Search results will be returned in an ascending order.":"搜索结果将以升序返回。\r\n","Indicates that the admin has set policy to disable camera.":"表示管理员已设置策略以禁用相机。\r\n","android.accessibilityservice.AccessibilityService.GESTURE_3_FINGER_DOUBLE_TAP_AND_HOLD":"Android.AccessibilityService.Accessibilityservice.gesture_3_finger_doubl_touble_tap_and_hold\r\n","android.accessibilityservice.AccessibilityServiceInfo.CAPABILITY_CAN_PERFORM_GESTURES":"Android.AccessibilityService.AccessibilityserviceInfo.capibility_can_perform_gestures\r\n","The text for the button when it is checked.":"检查按钮时的文本。\r\n","java.lang.annotation.Annotation.annotationType()":"java.lang.annotation.annotation.annotationType（）\r\n","#addListener(android.animation.Animator.AnimatorListener) listeners":"#addlistener（android.animation.animator.animatorListener）听众\r\n","android.app.admin.SecurityLog.TAG_ADB_SHELL_INTERACTIVE":"android.app.admin.securitylog.tag_adb_shell_interactive\r\n","Return whether any users are currently set to use the wallpaper\n            with the given resource ID.":"返回当前是否设置任何用户使用墙纸\r\n            使用给定的资源ID。\r\n","Builder#addPerson(String)":"建筑商＃addperson（字符串）\r\n","#generateKeyPair":"#generateKeypair\r\n","android.app.AlarmManager.cancel(android.app.OnAlarmListener)":"android.app.alarmmanager.cancel（android.app.onalarmlistener）\r\n","Broadcast Action: Sent after application delegation scopes are changed.":"广播操作：更改应用程序委托范围后发送。\r\n","The response class of ":"响应类别\r\n","Abstract base class used convert type T to another type V and back again.":"抽象基类使用的类型T将T型转换为另一类V，然后再次返回。\r\n","android.app.Person.getKey()":"android.app.person.getKey（）\r\n","android.app.usage.UsageStatsManager.STANDBY_BUCKET_RARE":"android.app.usage.usagestatsmanager.standby_bucket_rare\r\n","BigTextStyle":"BigTextstyle\r\n","android.annotation.TargetApi.value()":"android.annotation.targetapi.value（）\r\n","android.app.AlarmManager.INTERVAL_HALF_HOUR":"android.app.alarmmanager.interval_half_hour\r\n","Indicates that nearby streaming is enabled.":"表示启用了附近的流媒体。\r\n","Defines whether to animate the current View when the ViewAnimation\n             is first displayed.":"定义在视图时是否为当前视图进行动画\r\n             首先显示。\r\n","android.app.admin.DevicePolicyManager.PRIVATE_DNS_SET_ERROR_HOST_NOT_SERVING":"android.app.admin.devicepolicymanager.private_dns_set_error_host_not_serving\r\n","Text to use when the number in a notification info is too large\n         (greater than status_bar_notification_info_maxnum, defined in\n         values/config.xml) and must be truncated.":"通知信息中的数字太大时要使用的文本\r\n         （大于status_bar_notification_info_maxnum，在\r\n         值/config.xml），必须截断。\r\n","android.bluetooth.BluetoothA2dp.ACTION_PLAYING_STATE_CHANGED":"android.bluetooth.bluetootha2dp.action_playing_state_changed\r\n","android.app.AlarmManager.setRepeating(int, long, long, android.app.PendingIntent)":"android.app.alarmmanager.setRepeating（int，long，long，android.app.pendendIntent）\r\n","android.app.job.JobParameters.STOP_REASON_TIMEOUT":"android.app.job.jobparameters.stop_reason_timeout\r\n","Attach a ":"附加\r\n","Gets the app-op name associated with a given permission.":"获取与给定权限关联的应用程序名称。\r\n"," pairing.":" 配对。\r\n"," of the wrapped\n      Java object instance.\n    ":" 包裹的\r\n      Java对象实例。\r\n    \r\n","android.accounts.AccountManager.removeAccountExplicitly(android.accounts.Account)":"android.accounts.accountmanager.removeaccountexplicly（android.accounts.account）\r\n","android.app.appsearch.AppSearchResult.RESULT_INTERNAL_ERROR":"android.app.appsearch.appsearchresult.result_internal_error\r\n","Returns the namespace to remove documents from.":"返回名称空间以删除文档。\r\n","#addOnAccountsUpdatedListener":"#addonaccountsupdatedListener\r\n","android.app.admin.DevicePolicyManager.isDeviceIdAttestationSupported()":"android.app.admin.devicepolicymanager.isdeviceidattestationsupported（）\r\n"," has been hit.":" 受到打击。\r\n","android.accessibilityservice.AccessibilityService.GESTURE_2_FINGER_DOUBLE_TAP":"Android.AccessibilityService.Accessibilityservice.gesture_2_finger_double_tap\r\n","android.app.Fragment.getTag()":"android.app.fragment.getTag（）\r\n","android.app.Activity.onNavigateUp()":"android.app.activity.onnavigateup（）\r\n","android.app.Fragment.shouldShowRequestPermissionRationale(java.lang.String)":"Android.App.Fragment.ShouldShouldShowRequestpermissionrationale（java.lang.string）\r\n","Default ProgressBar style.":"默认progressbar样式。\r\n","Text to display.":"要显示的文字。\r\n","android.app.admin.SystemUpdatePolicy.createAutomaticInstallPolicy()":"android.app.admin.SystemupDatePolicy.CreateAutomaticInstallPolicy（）\r\n","Get the format of this SliceItem.":"获取此切片的格式。\r\n","android.app.Activity.finishActivity(int)":"Android.App.Activity.FinishActivity（int）\r\n","android.appwidget.AppWidgetManager.OPTION_APPWIDGET_MIN_WIDTH":"android.appwidget.appwidgetManager.option_appwidget_min_width\r\n","Restores one entity from the restore data stream to its proper shared\n            preferences file store.":"将一个实体从还原数据流恢复到其适当共享的\r\n            首选项文件存储。\r\n","Registers the provided ":"注册提供的\r\n","This download shows in the notifications after completion ONLY.":"此下载仅在完成后在通知中显示。\r\n","Call ":"称呼\r\n","android.animation.ValueAnimator.getDuration()":"android.animation.valueAnimator.getDuration（）\r\n","Makes the TextView be at most this many ems wide.":"使文本视图最多可以宽大。\r\n","#startAddAccountSession":"#startaddaccountsession\r\n","android.R.attr#parentActivityName parentActivityName":"android.r.attr＃parentActivityName parentActivityName\r\n","if there was an error communicating with\n the authenticator or if the authenticator returned an invalid response":"如果有错误通信\r\n 身份验证者或身份验证者返回了无效的响应\r\n","If the text is selectable, select it all when the view takes\n             focus.":"如果可以选择文本，请在视图时选择所有内容\r\n             重点。\r\n","android.app.admin.DevicePolicyManager.LOCK_TASK_FEATURE_NONE":"android.app.admin.devicepolicymanager.lock_task_feature_none\r\n","android.app.Activity.onWindowFocusChanged(boolean)":"android.app.activity.onwindowfocuschanged（boolean）\r\n","Sets the bounds (window size and position) that the activity should be launched in.":"设置应启动活动的边界（窗口大小和位置）。\r\n"," is provided (or if the constructor was\n              passed a message to use when starting) it will be output to the log, otherwise the measurement\n              start is silent. The method does anything only if no measurement is active.\n            ":" 提供（或构造函数是\r\n              传递一条启动时使用的消息）将输出到日志，否则测量\r\n              开始是沉默的。该方法仅在没有测量活动的情况下才能执行任何操作。\r\n            \r\n","BluetoothDevice#PHY_OPTION_S2":"BluetoothDevice＃phy_option_s2\r\n","android.accessibilityservice.AccessibilityService.GESTURE_SWIPE_RIGHT_AND_LEFT":"Android.AccessibilityService.Accessibilityservice.gesture_swipe_right_and_left\r\n","Action to take a screenshot":"截图的动作\r\n","android.accounts.AccountManager.getUserData(android.accounts.Account, java.lang.String)":"android.accounts.accountmanager.getuserdata（android.accounts.accounts.account，java.lang.string）\r\n","android.app.RemoteAction.setEnabled(boolean)":"android.app.remoteaction.setEnabled（boolean）\r\n","android.app.Fragment.instantiate(android.content.Context, java.lang.String, android.os.Bundle)":"android.app.fragment.instantiate（android.content.context，java.lang.string，android.os.bundle）\r\n","android.app.admin.DevicePolicyManager.ACTION_ADD_DEVICE_ADMIN":"android.app.admin.devicepolicymanager.action_add_device_admin\r\n","Called by a device owner to start the specified secondary user in background.":"设备所有者在后台启动指定的辅助用户。\r\n","Set a message to be sent when a button is pressed.":"按下按钮时设置要发送的消息。\r\n","android.app.Notification.EXTRA_LARGE_ICON":"android.app.notification.extra_large_icon\r\n"," to which the presentation\n            is attached has been removed.":" 演示文稿\r\n            已连接已被删除。\r\n","JobService#onStopJob(JobParameters)":"Jobservice＃onstopjob（JobParameters）\r\n","android.app.AppOpsManager.noteOp(java.lang.String, int, java.lang.String, java.lang.String, java.lang.String)":"android.app.appopsmanager.noteop（java.lang.string，int，java.lang.string，java.lang.string，java.lang.string）\r\n","android.app.AutomaticZenRule.getConditionId()":"android.app.automationzenrule.getConditionId（）\r\n","Called by a profile owner of a managed profile to set whether contacts search from the\n            managed profile will be shown in the parent profile, for incoming calls.":"由托管个人资料的个人资料所有者调用，以设置是否从\r\n            托管配置文件将显示在父个人资料中，以进行传入呼叫。\r\n","\n             (or its HTTPS incarnation) to send HTTP requests.\n             ":"\r\n             （或其HTTPS化身）发送HTTP请求。\r\n             \r\n","Mark the beginning of one record in the backup data stream.":"在备份数据流中标记一个记录的开始。\r\n","Default highlight color for items that are long-pressed.":"默认的突出显示长期压力的项目的颜色。\r\n","(wall clock time in UTC), which will wake up the device when\n it goes off.":"（UTC中的壁时钟时间），它将唤醒设备\r\n 它熄灭了。\r\n","Minimum height (in dp) which the widget can be resized to.":"最小高度（以DP为单位）可以调整小部件的大小。\r\n","Call this when your activity is done and should be closed and the task should be completely\n            removed as a part of finishing the root activity of the task.":"当您的活动完成并应关闭时，请致电此任务，任务应完全\r\n            作为完成任务的根活动的一部分。\r\n","\n               The ":"\r\n               这\r\n","android.accessibilityservice.AccessibilityService.takeScreenshot(int, java.util.concurrent.Executor, android.accessibilityservice.TakeScreenshotCallback)":"Android.AccessibilityService.Accessibilityservice.takescreenshot（int，java.util.concurrent.executor，android.accesseribilityservice.takescreenshotcallback）\r\n","android.app.admin.DevicePolicyManager.setCertInstallerPackage(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.setcertinstallerpackage（android.content.componentname，java.lang.string）\r\n","android.animation.LayoutTransition.LayoutTransition()":"android.animation.layouttransition.layouttransition（）\r\n","android.bluetooth.BluetoothDevice.EXTRA_PAIRING_KEY":"android.bluetooth.bluetoothdevice.extra_pairing_key\r\n","Remove all records about all hosts for your package.":"删除有关包装的所有主机的所有记录。\r\n","android.app.NotificationChannel.NotificationChannel(java.lang.String, java.lang.CharSequence, int)":"Android.App.NotificationChannel.NotificationChannel（Java.lang.String，Java.lang.CharSequence，int）\r\n","Retrieves whether the accessibility button in the system's navigation area is\n            available to the calling service.":"检索系统导航区域中的可访问性按钮是否为\r\n            可用于通话服务。\r\n","android.app.FragmentController.onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)":"android.app.FragmentController.OnCreateview（android.view.view，java.lang.string，android.content.context，android.util.attributeset）\r\n","#setBreadCrumbShortTitle(int)":"#setbreadcrumbshorttitle（int）\r\n","android.app.PendingIntent.send(int)":"android.app.pendingIntent.Send（int）\r\n","Bit indicating that this activity is \"immersive\" and should not be\n            interrupted by notifications if possible. -or- Adjust the current immersive mode setting.":"一点表明此活动是“沉浸式的”，不应是\r\n            如果可能的话，被通知中断。 - 或 - 调整当前的沉浸式模式设置。\r\n","android.app.slice.SliceItem.FORMAT_REMOTE_INPUT":"android.app.slice.sliceitem.format_remote_input\r\n","Returns the bubble metadata that will be used to display app content in a floating window\n            over the existing foreground activity.":"返回将用于在浮动窗口中显示应用程序内容的气泡元数据\r\n            在现有的前景活动上。\r\n","android.app.slice.Slice.SUBTYPE_TOGGLE":"android.app.slice.slice.subtype_toggle\r\n","#setInexactRepeating(int, long, long, PendingIntent)":"#setinexactrepeating（int，long，long，pendentintent）\r\n","android.app.backup.BackupDataInput":"android.app.backup.backupdatainput\r\n","This is the primary action that a device administrator must implement to be\n            allowed to manage a device.":"这是设备管理员必须实现的主要操作\r\n            允许管理设备。\r\n","android.bluetooth.BluetoothProfile.HEARING_AID":"android.bluetooth.bluetoothprofile.hearing_aid\r\n","android.app.ActivityOptions.setAppVerificationBundle(android.os.Bundle)":"android.app.activityOptions.setAppverificationBundle（android.os.bundle）\r\n","Characteristic read permission":"特征读取许可\r\n","android.app.usage.StorageStatsManager.getFreeBytes(java.util.UUID)":"android.app.usage.storagestatsmanager.getfreebytes（java.util.uuid）\r\n","Access to detailed storage statistics.":"访问详细的存储统计信息。\r\n","Gets aggregated event stats for the given time range, aggregated by the specified interval.":"获得给定时间范围的汇总事件统计数据，由指定间隔汇总。\r\n","android.view.Window#setFeatureDrawableResource":"android.view.window＃setFeaturedRawablerEsource\r\n","Allows an application to use SIP service \n":"允许应用程序使用SIP服务\r\n\r\n","android.app.admin.DevicePolicyManager.LEAVE_ALL_SYSTEM_APPS_ENABLED":"android.app.admin.devicepolicymanager.leave_all_system_apps_enabled\r\n","android.accounts.AccountManager.clearPassword(android.accounts.Account)":"android.accounts.accountmanager.clearpassword（android.accounts.account）\r\n","The default theme for apps on API level 10 and lower.":"API级别10及更低的应用程序的默认主题。\r\n","Called prior to the administrator being disabled, as a result of\n            receiving ":"由于\r\n            接收\r\n"," when the download has failed (and will not be retried).":" 下载失败后（不会重述）。\r\n","List of descriptors included in this characteristic.":"此特征中包含的描述符列表。\r\n","android.app.Dialog.takeKeyEvents(boolean)":"android.app.dialog.takekeyevents（boolean）\r\n","android.app.ListActivity.getSelectedItemId()":"android.app.listactivity.getSelectedItemid（）\r\n","android.app.SearchManager.SUGGEST_COLUMN_SPINNER_WHILE_REFRESHING":"android.app.searchmanager.suggest_column_spinner_while_refreshing\r\n","android.accessibilityservice.AccessibilityService.GESTURE_2_FINGER_TRIPLE_TAP":"Android.AccessibilityService.Accessibilityservice.gesture_2_finger_triple_tap\r\n","Post a notification to be shown in the status bar.":"发布将在状态栏中显示的通知。\r\n","Gets whether tapping on a choice should let the user edit the input before it is sent to the\n            app.":"得到选择是否应让用户在发送到输入之前编辑输入\r\n            应用程序。\r\n","This is called if the service is currently running and the user has\n            removed a task that comes from the service's application.":"如果服务当前正在运行并且用户具有\r\n            删除了来自服务应用程序的任务。\r\n","Allows read only access to phone state.":"允许仅阅读电话状态。\r\n","Defines whether the animator loops to the first view once it\n        has reached the end of the list.":"定义动画师是否循环到第一个视图\r\n        已达到列表的结尾。\r\n"," that has a nice minimum width\n    for a regular dialog.":"最小宽度很好\r\n    定期对话。\r\n","android.app.AlertDialog.THEME_HOLO_LIGHT":"android.app.alertdialog.theme_holo_light\r\n","Builder#setResultGrouping":"构建器＃setResultGrouping\r\n","SearchSpec.Builder#addProjection":"searchspec.builder＃addProvoction\r\n","#setApplicationRestrictions":"#SetApplicationRestrictions\r\n","Game mode is not supported for this application.":"此应用程序不支持游戏模式。\r\n","Encapsulates a request to remove documents by namespace and IDs from the ":"封装了通过名称空间和ID删除文档的请求\r\n","android.app.ActionBar.setHomeActionContentDescription(int)":"Android.App.ActionBar.SethomeactionContentDescription（int）\r\n",":\n            never run in night mode.":"：\r\n            切勿在夜间模式下运行。\r\n"," if this is also the root\n            of a voice interaction.":" 如果这也是根\r\n            语音互动。\r\n"," value providing\n        the state of the current Managed Peer instance.\n        ":" 价值提供\r\n        当前托管对等实例的状态。\r\n        \r\n","The padding between the drawables and the text.":"抽签和文本之间的填充。\r\n","ResolveInfo":"ResolveInfo\r\n","Ends the animation.":"结束动画。\r\n","Specify a URI path that matches a simple pattern, as per\n             ":"指定与简单模式匹配的URI路径，根据\r\n             \r\n"," when creating this entry.":" 创建此条目时。\r\n","Allows an application to retrieve the current state of keys and\n         switches.":"允许应用程序检索键的当前状态和\r\n         开关。\r\n","android.app.appsearch.AppSearchBatchResult.getSuccesses()":"android.app.appsearch.appsearchbatchresult.getsuccesses（）\r\n","Called by a device or profile owner to read the name of the package administering an\n            always-on VPN connection for the current user.":"由设备或配置文件所有者拨打以阅读管理包的名称\r\n            当前用户的始终为ON VPN连接。\r\n","View to anchor the auto-complete dropdown to.":"查看以将自动完整的下拉列表固定到。\r\n","Public API for the Bluetooth GATT Profile.":"公共API用于蓝牙GATT配置文件。\r\n","android.app.admin.DevicePolicyManager.isEphemeralUser(android.content.ComponentName)":"android.app.admin.devicepolicymanager.isephemeraluser（android.content.componentname）\r\n","android.app.Activity.onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)":"android.app.activity.onsaveinstancestate（android.os.bundle，android.os.osistablebundle）\r\n","android.app.admin.DeviceAdminReceiver.onReceive(android.content.Context, android.content.Intent)":"android.app.admin.deviceadminreceiver.onreceive（android.content.context，android.content.intent）\r\n","android.app.ListFragment.getSelectedItemId()":"android.app.listFragment.getSelectedItemid（）\r\n","Returns whether the platform is allowed (by the app developer) to generate contextual actions\n            for this notification.":"返回是否允许平台（由应用程序开发人员）生成上下文操作\r\n            为此通知。\r\n","Describes a battery usage report.":"描述电池使用报告。\r\n","android.app.Dialog.setTitle(int)":"android.app.dialog.settitle（int）\r\n","UiAutomation suppresses accessibility services by default.":"UIAUTomation默认情况下抑制可访问性服务。\r\n","Characteristic property: Characteristic supports indication":"特征属性：特征支持指示\r\n","android.app.backup.BackupDataOutput":"android.app.backup.backupdataoutput\r\n","android.bluetooth.BluetoothGatt.disconnect()":"android.bluetooth.bluetoothgatt.disconnect（）\r\n"," to an older version of ":" 到较旧的版本的\r\n","Default dropdown Spinner style.":"默认下拉旋转器样式。\r\n","android.app.backup.BackupDataInput.skipEntityData()":"android.app.backup.backupdatainput.skipentitydata（）\r\n"," key: this is the progress value supplied to\n            ":" 关键：这是提供给的进度值\r\n            \r\n","An integer indicating the complexity level of the new password an app would like the user to\n            set when launching the action ":"一个整数，指示应用程序希望用户到达新密码的复杂性级别\r\n            启动动作时设置\r\n","Return the action intent.":"返回动作意图。\r\n","#DEVICE_TYPE_UNKNOWN":"#device_type_unknown\r\n","When this attribute is set to true, the view gets its drawable state\n             (focused, pressed, etc.) from its direct parent rather than from itself.":"当此属性设置为true时，视图获取可绘制的状态\r\n             （集中，按压等）来自其直接父母，而不是自身。\r\n","v12.0":"v12.0\r\n","android.app.Notification.iconLevel":"android.app.notification.iconlevel\r\n","Subtype to tag an item as representing a range.":"亚型标记一个代表范围的项目。\r\n","android.appwidget.AppWidgetManager.OPTION_APPWIDGET_MAX_WIDTH":"android.appwidget.appwidgetManager.option_appwidget_max_width\r\n","Called when the given InputQueue is no longer associated with\n the thread and thus not dispatching events.":"当给定的输入不再与\r\n 线程，因此没有派遣事件。\r\n","Android platform documentation":"Android平台文档\r\n","android.accounts.AccountManager.newChooseAccountIntent(android.accounts.Account, java.util.List, java.lang.String[], java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle)":"android.accounts.accountmanager.newchooseaccountintent（android.accounts.accounts.account，java.util.list，java.lang.string [] OS.Bundle）\r\n","F:Android.OS.Build+VERSION_CODES.HoneycombMr2":"F：android.os.build+version_codes.honeycombmr2\r\n","Specifies a layout to use for the \"home\" section of the action bar.":"指定用于操作栏的“家”部分的布局。\r\n","Increments the current progress value.":"增加当前进度值。\r\n","android.app.FragmentController.getFragmentManager()":"Android.App.FragmentController.getFragmentManager（）\r\n",": go to the car\n home activity as part of the enable. ":"：去车\r\n 家庭活动作为启用的一部分。\r\n","Broadcast Action: Indicates a change in the bond state of a remote\n            device.":"广播行动：表示遥控器的债券状态发生变化\r\n            设备。\r\n","android.app.SearchManager.EXTRA_SELECT_QUERY":"android.app.searchmanager.extra_select_query\r\n","android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_FACE":"android.app.admin.devicepolicymanager.keyguard_disable_face\r\n","The pattern with which to vibrate.":"振动的模式。\r\n","This method creates a ":"此方法创建一个\r\n","android.app.backup.BackupDataInputStream.size()":"android.app.backup.backupdatainputstream.size（）\r\n","Defines the secondary progress value, between 0 and max.":"定义次要进度值，在0和最大之间。\r\n","#bindDeviceAdminServiceAsUser":"#binddeviceadminserviceasuser\r\n","Called when an app requests a slice it does not have write permission\n            to the uri for.":"当应用要求切片时打电话给没有写许可\r\n            到Uri。\r\n","\n          A reference to a style resource defining an overall theme for the\n          activity.\n        ":"\r\n          对样式资源定义整体主题的引用\r\n          活动。\r\n        \r\n"," property\n            set to ":" 财产\r\n            调成\r\n","Small Button style.":"小按钮样式。\r\n","BigPictureStyle#bigPicture(Bitmap)":"bigpicturestyle＃bigpicture（位图）\r\n"," object for Bluetooth LE Advertising operations.":" 蓝牙LE广告操作的对象。\r\n","Add an HTTP header to be included with the download request.":"添加下载请求中包含的HTTP标头。\r\n","Returns how complex the current user's screen lock is.":"返回当前用户的屏幕锁定的复杂程度。\r\n","android.app.Activity.getPreferences(int)":"android.app.activity.getPreferences（int）\r\n","android.app.Person.getUri()":"android.app.person.geturi（）\r\n","#hasFeatures":"#hasfeatures\r\n","android.app.Activity.hasWindowFocus()":"android.app.activity.haswindowfocus（）\r\n"," that specifies the\n            ComponentName of a live wallpaper that should be shown as a preview,\n            for the user to confirm.":" 指定\r\n            现场壁纸的组件名，应显示为预览，\r\n            供用户确认。\r\n","android.app.admin.DeviceAdminInfo.getPackageName()":"android.app.admin.deviceadmininfo.getpackagename（）\r\n","AccessibilityNodeInfo#FOCUS_INPUT":"访问性nodeinfo＃focus_input\r\n","Android.App.PendingIntent.FLAG_IMMUTABLE":"android.app.pendingIntent.flag_immutable\r\n","android.app.appsearch.exceptions.AppSearchException.getResultCode()":"android.app.appsearch.exceptions.appsearchexception.getResultCode（）\r\n","A flag indicating the animation that runs on those items that are disappearing\n            from the container.":"指示动画在那些消失的项目上运行的旗帜\r\n            从容器中。\r\n","This hook is called whenever the options menu is being closed (either by the user canceling\n            the menu with the back/menu button, or when an item is selected).":"只要关闭选项菜单（用户取消\r\n            带有背面/菜单按钮的菜单，或者选择项目时）。\r\n","Sets the visibility of the progress bar in the title.":"设置标题中进度栏的可见性。\r\n"," property may be accessed before the\n          constructor has executed, as common behavior is for the\n          ":" 可以在\r\n          构造函数已执行，因为共同行为是针对的\r\n          \r\n","android.animation.IntEvaluator":"android.animation.Intevaluator\r\n","Called when a user or profile is started.":"启动用户或配置文件时调用。\r\n","Return the Intent associated with this work.":"返回与这项工作相关的意图。\r\n","Drawable to use for the close action mode button \n         ":"可用于关闭动作模式按钮\r\n         \r\n","Action to open the recent apps.":"操作以打开最近的应用程序。\r\n"," that match a given query\n            string and type of search provided.":" 符合给定查询\r\n            提供的字符串和类型。\r\n","Angle of the gradient.":"梯度的角度。\r\n","F:Android.App.Job.JobInfo+Builder.SetRequiredNetworkType":"f：android.app.job.jobinfo+builder.setrequirednetworktype\r\n","Default horizontal divider between rows of menu items.":"菜单项行之间的默认水平分隔线。\r\n","android.app.FragmentTransaction.addSharedElement(android.view.View, java.lang.String)":"android.app.fragmentTransaction.AddSharedElement（android.view.view，java.lang.string）\r\n","#HINT_LIST_ITEM":"#hint_list_item\r\n","Set an icon as supplied by a theme attribute.":"设置由主题属性提供的图标。\r\n","Return whether the keyguard is currently locked.":"返回钥匙守卫当前是否锁定。\r\n","If true, makes the right edge of this view match the right edge of the parent.":"如果为true，则使此视图的正确边缘与父的右边缘匹配。\r\n","android.app.Notification.EXTRA_SUB_TEXT":"android.app.notification.extra_sub_text\r\n","android.appwidget.AppWidgetManager.bindAppWidgetIdIfAllowed(int, android.os.UserHandle, android.content.ComponentName, android.os.Bundle)":"android.appwidget.appwidgetManager.bindappwidgetIffolowered（int，android.os.userhandle，android.content.content.componentname，android.os.bundle）\r\n","android.app.PendingIntent.getCreatorUserHandle()":"android.app.pendingIntent.getCreatoruserHandle（）\r\n","Pop all back stack states up to the one with the given identifier.":"弹出所有背堆状态，直到带有给定标识符的堆栈。\r\n","#onCreateView":"#oncreateview\r\n","Create an ActivityOptions specifying an animation where the new\n            activity is scaled from a small originating area of the screen to\n            its final full representation.":"创建一个活动，以指定新的动画\r\n            活动从屏幕的小原始区域缩放到\r\n            它的最终完整表示。\r\n","Indicates whether the drawer should be opened/closed with an animation\n             when the user clicks the handle.":"指示是否应使用动画打开/关闭抽屉\r\n             当用户单击句柄时。\r\n"," that contains the\n       views for displaying candidates for what the user has entered.":" 其中包含\r\n       用于显示用户输入内容的候选人的视图。\r\n","android.bluetooth.BluetoothGattCharacteristic.PERMISSION_WRITE":"android.bluetooth.bluetoothgattcharacteristic.permission_write\r\n","#PERMISSION_POLICY_PROMPT":"#permission_policy_prompt\r\n","android.bluetooth.BluetoothGatt.abortReliableWrite(android.bluetooth.BluetoothDevice)":"android.bluetooth.bluetoothgatt.abortrelablewrite（android.bluetooth.bluetoothdevice）\r\n","android.app.Instrumentation.finish(int, android.os.Bundle)":"android.app.instrumentation.finish（int，android.os.bundle）\r\n","android.animation.FloatEvaluator.evaluate(float, java.lang.Number, java.lang.Number)":"android.animation.floatevaluator.evaluate（float，java.lang.number，java.lang.number）\r\n","Broadcast Action: Bluetooth class of a remote device has changed.":"广播动作：远程设备的蓝牙类已更改。\r\n","Additional info, including CPU stats.":"其他信息，包括CPU统计数据。\r\n","\n              CRC64 variant: crc-64-jones 64-bit\n                * Poly: 0xad93d23594c935a9\n            \n              Changes beyond initial implementation:\n                * Starting Value: ulong.MaxValue\n                * XOR length in HashFinal()\n                * Using spliced table for faster processing\n             ":"\r\n              CRC64变体：CRC-64-Jones 64位\r\n                * poly：0xad93d23594c935a9\r\n            \r\n              超出初始实施的变化：\r\n                *起始值：ulong.maxvalue\r\n                * hashfinal（）中的xor长度\r\n                *使用剪接表进行更快的处理\r\n             \r\n","Application process was killed by the system due to excessive resource usage.":"由于资源过多，申请过程被系统杀死。\r\n",". Time is reported in the following format:\n            \n             ":"。以下格式报告时间：\r\n            \r\n             \r\n","android.app.Notification.tickerView":"android.app.notification.tickerview\r\n","The layout for the controllable widget portion of a Preference.":"首选项的可控小部件部分的布局。\r\n","Hint that list items within this slice or subslice would appear better\n            if organized horizontally.":"提示该切片或子层中的列表项目看起来更好\r\n            如果水平组织。\r\n","android.app.FragmentManager.removeOnBackStackChangedListener(android.app.OnBackStackChangedListener)":"android.app.fragmentManager.RemoveOnbackStackChangedListener（android.app.onback.onbackstackchangedlistener）\r\n","\n          A reference to a resource to use as the value.\n        ":"\r\n          对用于值的资源的引用。\r\n        \r\n","Returns the hardware address of this BluetoothDevice.":"返回此蓝牙词汇的硬件地址。\r\n","android.app.backup.SharedPreferencesBackupHelper":"android.app.backup.sharedPreferencesBackupHelper\r\n","android.app.admin.DevicePolicyManager.setEndUserSessionMessage(android.content.ComponentName, java.lang.CharSequence)":"android.app.admin.devicepolicymanager.setendusersessessionMessage（android.content.componentname，java.lang.charsequence）\r\n","android.app.Dialog.onCreate(android.os.Bundle)":"android.app.dialog.oncreate（android.os.bundle）\r\n","android.app.AppOpsManager.stopWatchingActive(android.app.OnOpActiveChangedListener)":"android.app.appopsmanager.stoppoptingingactive（android.app.onopactivechangedlistener）\r\n","Specifies the basic height of the view.":"指定视图的基本高度。\r\n","android.app.AppOpsManager.OPSTR_WRITE_EXTERNAL_STORAGE":"android.app.appopsmanager.opptr_write_external_storage\r\n","android.app.Notification.EXTRA_CALL_IS_VIDEO":"android.app.notification.extra_call_is_video\r\n","#setRepeatCount(int)":"#SetRepeatCount（int）\r\n","Subtype to tag an item as representing a color.":"亚型标记一个代表颜色的项目。\r\n","android.app.UiAutomation.grantRuntimePermission(java.lang.String, java.lang.String)":"android.app.uiautomation.grantruntimepermission（java.lang.string，java.lang.string）\r\n","android.app.NotificationChannel.DEFAULT_CHANNEL_ID":"Android.App.NotificationChannel.default_channel_id\r\n","android.appwidget.AppWidgetProviderInfo.targetCellHeight":"android.appwidget.AppWidgetProviderInfo.targetCellHeight\r\n","android.view.Window.Callback#onMenuItemSelected":"android.view.window.callback＃onMenuiteMselected\r\n"," for interaction and state\n            change callbacks related to the accessibility button.":" 用于互动和状态\r\n            更改与可访问性按钮相关的回调。\r\n","Used for permissions that provide access to the user\n         calendar to create / view events.":"用于为用户访问的权限\r\n         日历来创建 /查看事件。\r\n","Retrieve a reference to this activity's ActionBar.":"检索该活动的动作栏的引用。\r\n","The user has performed a four-finger swipe up gesture on the touch screen.":"用户在触摸屏上进行了四指滑动手势。\r\n","android.app.Fragment.requestPermissions(java.lang.String[], int)":"android.app.fragment.requestpermissions（java.lang.string []，int）\r\n","android.app.AppComponentFactory.instantiateReceiver(java.lang.ClassLoader, java.lang.String, android.content.Intent)":"android.app.AppComponentFactory.instantiaTereceiver（java.lang.classloader，java.lang.string，android.content.intent）\r\n","android.app.DownloadManager.PAUSED_WAITING_TO_RETRY":"android.app.downloadmanager.paused_waiting_to_retry\r\n","X coordinate of the origin of the gradient within the shape.":"x在形状内的梯度原点坐标。\r\n"," name for read-only\n         access to a ":" 只读的名称\r\n         访问a\r\n","android.app.slice.SliceItem.FORMAT_IMAGE":"android.app.slice.sliceitem.format_image\r\n","Gets the total duration of the animation, accounting for animation sequences, start delay,\n            and repeating.":"获取动画的总持续时间，考虑动画序列，启动延迟，\r\n            并重复。\r\n","Stops profiling if isProfiling() returns true.":"如果Isprofiling（）返回true，则停止分析。\r\n","Executes a command and waits for a specific accessibility event up to a\n            given wait timeout.":"执行命令并等待特定的可访问性事件至\r\n            给定等待时间。\r\n","android.content.ComponentCallbacks2.TRIM_MEMORY_RUNNING_LOW":"android.content.componentCallbacks2.trim_memory_running_low\r\n","android.app.SearchableInfo.getVoiceLanguageId()":"android.app.searchableInfo.getVoicElanguageId（）\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DISCLAIMER_HEADER":"android.app.admin.devicepolicymanager.extra_provisioning_disclaimer_header\r\n","The number of stars (or rating items) to show.":"要显示的星星（或评分项目）的数量。\r\n","android.app.Fragment.getHost()":"android.app.fragment.gethost（）\r\n","Bluetooth device type, Low Energy - LE-only":"蓝牙设备类型，低能 - 仅限\r\n","When set to true, the list will filter results as the user types.":"设置为true时，列表将将结果作为用户类型过滤。\r\n"," structures attached to this notification by\n            ":" 通过此通知附加的结构\r\n            \r\n","android.animation.AnimatorInflater.loadAnimator(android.content.Context, int)":"android.animation.animatorInflater.loadAnimator（android.content.context，int）\r\n","android.app.FragmentController":"Android.App.FragmentController\r\n","#cancel(String, int)":"#cancel（字符串，int）\r\n","android.app.WallpaperManager.getWallpaperId(int)":"android.app.wallpapermanager.getWallpaperID（int）\r\n","AppSearchSession#getSchema":"AppSearchSession＃getschema\r\n","Controls the scrollbar style and position.":"控制滚动条的样式和位置。\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DISCLAIMERS":"android.app.admin.devicepolicymanager.extra_provisioning_disclaimers\r\n"," native code.":" 本地代码。\r\n","List":"列表\r\n","Minimum width for the switch component \n         ":"开关组件的最小宽度\r\n         \r\n","android.app.FragmentController.createController(android.app.FragmentHostCallback)":"android.app.FragmentController.CreateController（android.app.fragmentHostCallback）\r\n","An abstract class that represents a network event.":"代表网络事件的抽象类。\r\n","#getService":"#getService\r\n","When opening a new activity that hides the wallpaper, while currently showing the wallpaper, this is the animation that is run on the new activity (which is entering the screen).":"当打开隐藏墙纸的新活动时，当前显示墙纸时，这是在新活动（正在输入屏幕）上运行的动画。\r\n","The color for the separator line between weeks.":"几周之间分离器线的颜色。\r\n","android.accounts.AccountManagerFuture.getResult(long, java.util.concurrent.TimeUnit)":"android.accounts.accountmanagerfuture.getResult（long，java.util.concurrent.timeunit）\r\n","Default PopupWindow style.":"默认弹出窗口样式。\r\n","android.appwidget.AppWidgetProviderInfo.targetCellWidth":"android.appwidget.AppWidgetProviderInfo.targetCellWidth\r\n","Supply an identifier for the layout resource to inflate when the ViewStub\n             becomes visible or when forced to do so.":"在ViewStub时，为布局资源提供标识符\r\n             变得可见或被迫这样做。\r\n","Default Spinner style.":"默认的旋转器样式。\r\n","BluetoothProfile#GATT_SERVER":"BluetoothProfile＃gatt_server\r\n","This flag requests that all fingerprint gestures be sent to the accessibility service.":"此标志要求将所有指纹手势发送到可访问性服务。\r\n","A type of policy that this device admin can use: disables use of all device cameras.":"该设备管理员可以使用的一种策略：禁用所有设备摄像机的使用。\r\n","android.app.Notification.EXTRA_PROGRESS":"android.app.notification.extra_progress\r\n","Sets the horizontal scaling factor for the text.":"设置文本的水平缩放系数。\r\n","Get whether or not users can provide an arbitrary value for\n            input.":"获取用户是否可以为任意价值提供\r\n            输入。\r\n"," for a specific position in our\n            ":" 在我们的特定位置\r\n            \r\n","android.app.FragmentBreadCrumbs":"Android.App.FragmentBreadcrumbs\r\n"," is enabled,\n            double tap and double tap and hold gestures are dispatched to the service rather than being\n            handled by the framework.":" 已启用，\r\n            双击和双击和持有手势被派往服务，而不是\r\n            由框架处理。\r\n","The state (true for on, or false for off) that causes dependents to be disabled.":"状态（为ON为on或false for Off），导致依赖者被禁用。\r\n","Checks if the profile owner is running in an ephemeral user.":"检查配置文件所有者是否在短暂的用户中运行。\r\n","android.animation.ObjectAnimator.ofFloat(java.lang.Object, java.lang.String, java.lang.String, android.graphics.Path)":"android.animation.ObjectAnimator.Offloat（java.lang.Object，java.lang.string，java.lang.string，android.graphics.path）\r\n","#getGenericDocument":"#getGenericDocument\r\n","The component of the first activity in the task, can be considered the \"application\" of this\n            task.":"任务中第一个活动的组成部分可以视为此的“应用”\r\n            任务。\r\n","Indicates whether preferential network service is enabled. -or- Sets whether preferential network service is enabled on the work profile.":"指示是否启用了优先网络服务。 - 或设置在工作配置文件上是否启用了优先网络服务。\r\n","What the UI should display for \"voice mail\" unless overridden by the SIM\n":"除非SIM\r\n\r\n","Standard implementation of\n            ":"标准实施\r\n            \r\n","android.app.job.JobScheduler.getPendingJob(int)":"android.app.job.jobscheduler.getPendingJob（int）\r\n","android.app.appsearch.AppSearchResult.isSuccess()":"android.app.appsearch.appsearchresult.issuccess（）\r\n","Gets the resource id of the hint text.":"获取提示文本的资源ID。\r\n","Repeats the animation for one cycle.":"重复一个周期的动画。\r\n","Create a listening, insecure RFCOMM Bluetooth socket with Service Record.":"使用服务记录创建一个听力，不安全的RFCOMM蓝牙套接字。\r\n","android.app.Notification.EXTRA_TEXT":"android.app.notification.extra_text\r\n","The animation used when a window is going from VISIBLE to INVISIBLE.":"窗口从可见到看不见的动画。\r\n","Initiates a reliable write transaction for a given remote device.":"为给定的远程设备启动可靠的写入交易。\r\n","Set a listener to be invoked when button 3 of the dialog is pressed.":"按下对话框的按钮3时，设置侦听器被调用。\r\n","\n            and could be one of ":"\r\n            可能是之一\r\n","//intent-filter":"//意图滤波器\r\n","The target object whose property will be animated by this animation":"该动画将使属性动画的目标对象\r\n","android.app.ProgressDialog.setProgressDrawable(android.graphics.drawable.Drawable)":"android.app.progressdialog.setProgressDrawable（android.graphics.drawable.drawable）\r\n","#finishSession":"#finishsession\r\n","Variant of the holographic (dark) theme that has no title bar and fills\n         the entire screen.":"全息（黑暗）主题的变体，没有标题栏并且填充\r\n         整个屏幕。\r\n","android.app.FragmentController.doLoaderStart()":"android.app.fragmentController.doloaderstart（）\r\n","Called by an application that is administering the device to set the minimum number of\n            letters required in the password.":"由管理设备的应用程序调用以设置最小数量\r\n            密码中需要的字母。\r\n","android.accessibilityservice.AccessibilityServiceInfo.loadSummary(android.content.pm.PackageManager)":"android.accosconibilityservice.Accessibilityserviceinfo.loadsummary（android.content.pm.packagemanager）\r\n","android.app.NotificationManager.IMPORTANCE_LOW":"android.app.notificationmanager.importance_low\r\n"," type and with populated with certificates provided in the ":" 类型并带有填充的证书\r\n","android.app.assist.AssistStructure.getAcquisitionStartTime()":"android.app.assist.Assistsurenture.getAcquesitionStarttime（）\r\n","Specifies the type of layer backing this view.":"指定备份此视图的图层类型。\r\n","This function lets the caller know whether the given component is allowed to start the\n            lock task mode.":"此功能使呼叫者知道是否允许给定的组件启动\r\n            锁任务模式。\r\n","#getActivities":"#getactivities\r\n","Create an ActivityOptions to transition between Activities using cross-Activity scene\n            animations.":"创建一个活动的活动，以使用交叉活动场景在活动之间过渡\r\n            动画。\r\n","android.app.Person.isBot()":"android.app.person.isbot（）\r\n","android.bluetooth.BluetoothGatt.writeCharacteristic(android.bluetooth.BluetoothGattCharacteristic)":"android.bluetooth.bluetoothgatt.writecharacteristic（android.bluetooth.bluetoothgattharacteristic）\r\n","When triggering on content URI changes, this is the delay from when a change\n            is detected until the job is scheduled.":"当触发内容URI更改时，这是从更改时延迟\r\n            检测到工作安排。\r\n","Returns whether this request will force the schema to be overridden.":"返回该请求是否迫使模式被覆盖。\r\n","Dump of debug information about the service.":"有关该服务的调试信息的转储。\r\n","android.view.Window#setFeatureDrawableUri":"android.view.window＃setFeaturedRawableuri\r\n","Enable or disable the \"home\" button in the corner of the action bar.":"在动作栏的角落启用或禁用“家庭”按钮。\r\n","android.bluetooth.BluetoothGatt.GATT_WRITE_NOT_PERMITTED":"android.bluetooth.bluetoothgatt.gatt_write_not_permitting\r\n","Called after the user has changed their device or profile challenge password, as a result of\n            receiving ":"由于用户更改了其设备或配置文件挑战密码之后\r\n            接收\r\n","Retrieve the number of times the user has failed at entering a password since that last\n            successful password entry.":"检索用户从最后一次输入密码失败的次数\r\n            成功的密码输入。\r\n","ConnectivityManager#TYPE_MOBILE":"ConnectitiveManager＃type_mobile\r\n","Override this for receiving callbacks when a child has been clicked.":"在单击孩子时接收回调。\r\n","The available memory on the system.":"系统上的可用内存。\r\n"," of the activity that shows configuration options\n            for this rule. -or- Sets the configuration activity - an activity that handles\n            ":" 显示配置选项的活动\r\n            对于此规则。 - 或设置配置活动 - 处理的活动\r\n            \r\n","Acceleration curve matching a quint ease in function.":"加速曲线匹配功能的五分之一。\r\n","android.accessibilityservice.AccessibilityService.GLOBAL_ACTION_POWER_DIALOG":"Android.AccessibilityService.Accessibilityservice.global_action_power_dialog\r\n","Constructs and returns an ObjectAnimator that animates between Object values.":"构造并返回一个在对象值之间进行动画的对象映射器。\r\n","android.app.SearchManager.SUGGEST_COLUMN_INTENT_DATA":"android.app.searchmanager.suggest_column_intent_data\r\n","Set the title displayed in the ":"设置显示在\r\n","Returns true if any of the animations in this transition are currently running.":"如果此过渡中的任何动画正在运行，则返回true。\r\n","#onUnbind":"#onunbind\r\n","android.app.WallpaperInfo.WallpaperInfo(android.content.Context, android.content.pm.ResolveInfo)":"android.app.wallpaperinfo.wallpaperinfo（android.content.context，android.content.pm.resolveinfo）\r\n","\n      Unregister this instance so that the runtime will not return\n      it from future\n      ":"\r\n      取消注册此实例，以便运行时不会返回\r\n      从未来开始\r\n      \r\n","Group of permissions that are related to development features.":"与开发功能相关的一组许可。\r\n"," to\n            indicate that the search is not complete yet.":" 至\r\n            表示搜索尚未完成。\r\n","android.app.backup.BackupHelper.writeNewStateDescription(android.os.ParcelFileDescriptor)":"android.app.backup.backuphelper.writenewstatedescription（android.os.parcelfiledScriptor）\r\n","The maximum number of indexed properties a document can have.":"文档可以拥有的最大索引属性数量。\r\n",",\n             set when a view has input focus.":"，，，，\r\n             当视图具有输入焦点时设置。\r\n","android.app.AutomaticZenRule.getConfigurationActivity()":"android.app.automationzenrule.getConfigurativitivity（）\r\n","android.app.Notification.category":"Android.App.Notification.Stagory\r\n","Request that the system start watching for the calling process to exceed a pss\n            size as given here.":"要求系统开始观察呼叫过程以超过PSS\r\n            大小如下所示。\r\n","android.accessibilityservice.AccessibilityService.GESTURE_4_FINGER_SWIPE_RIGHT":"Android.AccessibilityService.Accessibilityservice.gesture_4_finger_swipe_right\r\n","android.app.assist.AssistContent.getClipData()":"android.app.assist.assistcontent.getClipdata（）\r\n","Constructs and returns a ValueAnimator that animates between the values\n            specified in the PropertyValuesHolder objects.":"构建并返回一个在值之间动画的估值\r\n            在属性值持有人对象中指定。\r\n","android.app.TaskInfo.baseIntent":"android.app.taskinfo.baseintent\r\n","\n          Whether or not the activity should be excluded from the list of\n          recently launched activities.\n        ":"\r\n          是否应将活动排除在\r\n          最近启动了活动。\r\n        \r\n","Return whether the action bar is configured to scroll out of sight along with\n            a ":"返回动作栏是否配置为滚动滚动不到视线\r\n            一个\r\n","Called by a device owner or a profile owner of an organization-owned managed\n            profile to set the system wall clock time.":"由设备所有者或组织拥有的托管的个人资料所有者拨打\r\n            配置文件以设置系统壁时钟时间。\r\n"," of schema type that were migrated by the ":" 由模式类型迁移的\r\n","android.app.appsearch.StorageInfo":"android.app.appsearch.storageinfo\r\n","The CalendarView style.":"日历观看样式。\r\n","android.app.admin.DevicePolicyManager.setMeteredDataDisabledPackages(android.content.ComponentName, java.util.List)":"android.app.admin.devicepolicymanager.setMetereddatadisabledpackages（android.content.componentname，java.util.list）\r\n","Variant of the holographic (dark) theme that has no title bar and fills\n         the entire screen and extends into the display overscan region.":"全息（黑暗）主题的变体，没有标题栏并且填充\r\n         整个屏幕并延伸到显示上的范围区域。\r\n","Returns the currently configured night mode. -or- Sets the system-wide night mode.":"返回当前配置的夜间模式。 - 或设置全系统夜间模式。\r\n","Called when the Fragment is no longer resumed.":"当碎片不再恢复时调用。\r\n","This is an API for scheduling various types of jobs against the framework that will be executed\n            in your application's own process.":"这是针对将执行的框架安排各种作业的API\r\n            在您应用程序自己的过程中。\r\n","Used as an optional short extra field in ":"用作可选的短额外字段\r\n","#noteOp":"#noteop\r\n","android.app.Notification.EXTRA_INFO_TEXT":"android.app.notification.extra_info_text\r\n","\n            Whether the implementation supports pre-authentication\n            ":"\r\n            实施是否支持预验证\r\n            \r\n","PendingIntent#FLAG_CANCEL_CURRENT":"pendingIntent＃flag_cancel_current\r\n","#startNextMatchingActivity(Intent, Bundle)":"#startnextMatchingActivity（Intent，Bundle）\r\n","android.accessibilityservice.AccessibilityGestureEvent":"Android.AccosconibilityService.Accessibility gesturevent\r\n"," that is thrown when authentication is needed from the\n            end user before viewing the content.":" 从需要身份验证的\r\n            在查看内容之前，最终用户。\r\n","MSCHAP":"MSCHAP\r\n","android.app.slice.SliceManager.pinSlice(android.net.Uri, java.util.Set)":"android.app.slice.slicemanager.pinslice（android.net.uri，java.util.set）\r\n","android.app.backup.BackupAgentHelper.onBackup(android.os.ParcelFileDescriptor, android.app.backup.BackupDataOutput, android.os.ParcelFileDescriptor)":"android.app.backup.backUpagenthelper.onbackup（android.os.parcelfiledScriptor，android.app.backup.backup.backup.backupdataoutput，android.os.parcelfiledescriptor）\r\n","Broadcast Action: Indicates a low level (ACL) connection has been\n            established with a remote device.":"广播动作：表示低级（ACL）连接已\r\n            使用远程设备建立。\r\n","DevicePolicyManager":"DevicePolicyManager\r\n","\n            changes.":"\r\n            变化。\r\n","In Activity Transitions, onSharedElementEnd is called immediately before\n            capturing the end of the shared element state on enter and reenter transitions and\n            immediately before capturing the start of the shared element state for exit and return\n            transitions.":"在活动过渡中，立即调用onsh​​aredElementend\r\n            在Enter和Reenter Transitions上捕获共享元素状态的末尾，并\r\n            在捕获共享元素状态的开始之前，立即退出并返回\r\n            过渡。\r\n","Return the approximate per-application memory class of the current\n            device.":"返回当前的近似每个应用记忆类\r\n            设备。\r\n","Lets all Fragments managed by the controller's FragmentManager\n            know they should create an options menu.":"让所有片段由控制器的FragmentManager管理\r\n            知道他们应该创建一个选项菜单。\r\n","android.app.NotificationChannel.getLockscreenVisibility()":"Android.App.NotificationChannel.getLockscreenvisibility（）\r\n","android.animation.PropertyValuesHolder.ofFloat(android.util.Property, float[])":"android.animation.propertyvaluesholder.offloat（android.util.property，float []）\r\n","FragmentManager#saveFragmentInstanceState(Fragment)\n            FragmentManager.saveFragmentInstanceState":"FragmentManager＃SaveFragmentInstancestate（fragment）\r\n            fragmentManager.saveFragmentInstancestate\r\n","Sets whether the icon should be shown.":"设置是否应显示图标。\r\n","Dispatch a pointer event.":"调度指针事件。\r\n","android.app.admin.DevicePolicyManager.setStartUserSessionMessage(android.content.ComponentName, java.lang.CharSequence)":"android.app.admin.devicepolicymanager.setstartusersessessionmessage（android.content.componentname，java.lang.charsequence）\r\n",": the process is not an expendable\n            background process, but the device is running moderately low on memory.":"：该过程不是消耗的\r\n            背景过程，但是该设备的内存中适度运行。\r\n","Allows an application to monitor, modify, or abort outgoing\n         calls.":"允许应用程序监视，修改或流产\r\n         呼叫。\r\n","Called by a profile owner of a managed profile to set whether caller-Id information from the\n            managed profile will be shown in the parent profile, for incoming calls.":"由托管配置文件的个人资料所有者调用，以设置呼叫者ID信息是否来自\r\n            托管配置文件将显示在父个人资料中，以进行传入呼叫。\r\n","#onPause()":"#onpause（）\r\n","android.app.usage.UsageStatsManager.queryEventStats(int, long, long)":"android.app.usage.usagestatsmanager.queryeventstats（int，long，long）\r\n","android.app.Activity.onMultiWindowModeChanged(boolean)":"android.app.activity.nmultiwindowmodechanged（boolean）\r\n","Called to process trackball events.":"打电话给处理轨迹球事件。\r\n","android.app.Instrumentation.REPORT_KEY_IDENTIFIER":"android.app.instrumentation.report_key_iendifier\r\n","Capability: This accessibility service can request enhanced web accessibility\n enhancements. ":"功能：此可访问性服务可以请求增强的Web可访问性\r\n 增强。\r\n","Value type that represents an Account in the ":"代表帐户的价值类型\r\n","Sets the progress for the progress bars in the title.":"为标题中的进度条设置进度。\r\n","android.app.AppOpsManager.noteOp(java.lang.String, int, java.lang.String)":"android.app.appopsmanager.noteop（java.lang.string，int，java.lang.string）\r\n","Enumerates values returned by the ":"列举由\r\n","Get the end of the maintenance window.":"获取维护窗口的结尾。\r\n","#PASSWORD_QUALITY_BIOMETRIC_WEAK":"#password_quality_biometric_weak\r\n","Gets the resource id of the description string to use for this source in system search\n            settings, or ":"获取描述字符串的资源ID，用于此源在系统搜索中\r\n            设置，或\r\n","BatchResultCallback#onSystemError":"batchResultCallback＃OnSystemerror\r\n","Theme for a wallpaper's setting activity, which is designed to be a transparent\n         background with a dark shade, so the previous Activity is visible in the background.":"墙纸设置活动的主题，该活动被设计为透明\r\n         背景具有深色阴影，因此在背景中可以看到先前的活动。\r\n","#SUBTYPE_RANGE":"#subtype_range\r\n","Called when a fragment is attached as a child of this fragment.":"当片段作为这个碎片的孩子附着时称呼。\r\n","android.app.ActionBar.setCustomView(int)":"android.app.actionbar.setCustomView（int）\r\n","android.appwidget.AppWidgetProviderInfo.initialLayout":"android.appwidget.appwidgetProviderInfo.initiallayout\r\n","android.app.job.JobParameters.completeWork(android.app.job.JobWorkItem)":"android.app.job.jobparameters.completework（android.app.job.jobworkitem）\r\n","android.accounts.AuthenticatorDescription.accountPreferencesId":"android.accounts.authenticatordescription.accountpreferencesid\r\n","android.appwidget.AppWidgetProviderInfo.WIDGET_FEATURE_RECONFIGURABLE":"android.appwidget.AppWidgetProviderInfo.widget_feature_reconfigurable\r\n","android.animation.Animator.setDuration(long)":"android.animation.animator.setDuration（long）\r\n","android.accounts.AccountAuthenticatorActivity.setAccountAuthenticatorResult(android.os.Bundle)":"android.accounts.accountauthenticatorativation.setaccountauthenticatoresult（android.os.bundle）\r\n","android.app.admin.DevicePolicyManager.setManagedProfileMaximumTimeOff(android.content.ComponentName, long)":"android.app.admin.devicepolicymanager.setManagedProfileMaximumTimeOff（android.content.componentname，long）\r\n","Called by device owner or profile owner of secondary users that is affiliated with the\n            device to disable the status bar.":"由设备所有者或辅助用户的个人资料所有者拨打\r\n            禁用状态栏的设备。\r\n","JobInfo.Builder#Builder(int, android.content.ComponentName)\n                JobInfo.Builder(int, android.content.ComponentName)":"JobInfo.builder＃builder（int，android.content.componentname）\r\n                JobInfo.builder（int，android.content.componentname）\r\n",")\n            ":"）\r\n            \r\n","Set a listener to be invoked when the dialog is dismissed.":"解散对话框时设置侦听器将被调用。\r\n","NONE":"没有任何\r\n","Higher-level method for sending both the down and up key events for a\n            particular character key code.":"高级方法，用于发送下降和向上关键事件的关键事件\r\n            特定字符密钥代码。\r\n","Default disabled icon alpha for each menu item that shows an icon.":"每个菜单项显示图标的默认禁用图标alpha。\r\n","android.app.TabActivity.setDefaultTab(int)":"android.app.tabactivity.setdefaulttab（int）\r\n","Gets the interpolator on one of the animation objects used by this transition.":"在此过渡使用的动画对象之一上获取插装器。\r\n","android.app.Activity.finishAffinity()":"android.app.activity.finishaffility（）\r\n","This is called when a child activity of this one calls its\n            finishActivity().":"当这个孩子的活动称呼它的时候，这就是称为\r\n            终点（）。\r\n","android.animation.AnimatorSet.getStartDelay()":"android.animation.Animatorset.getStartDelay（）\r\n","Retrieve the current number of symbols required in the password\n            for a particular admin or all admins that set restrictions on this user\n            and its participating profiles.":"检索密码中所需的当前符号数\r\n            对于特定的管理员或所有设置此用户限制的管理员\r\n            及其参与概况。\r\n","Drawable used to indicate the currently selected item in the list.":"可绘制用于指示列表中当前选择的项目。\r\n","Flag: set or retrieve the general system wallpaper.":"标志：设置或检索一般系统壁纸。\r\n","android.animation.ObjectAnimator.setPropertyName(java.lang.String)":"android.animation.ObjectAnimator.setPropertyname（java.lang.string）\r\n","android.app.DownloadManager.ERROR_CANNOT_RESUME":"android.app.downloadmanager.error_cannot_resume\r\n","This download is visible but only shows in the notifications\n while it's in progress.":"此下载是可见的，但仅在通知中显示\r\n 在进行中。\r\n","An identifier to represent a blob.":"代表斑点的标识符。\r\n","Returns all notification channels belonging to the calling package.":"返回属于调用包的所有通知渠道。\r\n","#PERMISSION_GRANT_STATE_GRANTED":"#permission_grant_state_granted\r\n","#ENCRYPTION_STATUS_ACTIVE_DEFAULT_KEY":"#encryption_status_active_default_key\r\n","F:Android.App.Service.OnStartCommand":"F：Android.App.Service.OnstartCommand\r\n","Convenience for calling\n            ":"便利打电话\r\n            \r\n","Returns the number of tabs currently registered with the action bar.":"返回当前在操作栏上注册的选项卡数。\r\n","#INTENT_ACTION_GLOBAL_SEARCH":"#intent_action_global_search\r\n","'More' icon.":"“更多”图标。\r\n","#setExact(int, long, PendingIntent)":"#SetExact（int，长，悬念）\r\n","If included in the status or final bundle sent to an IInstrumentationWatcher, this key \n            identifies the class that is writing the report.":"如果包含在已发送到IinsTrumentationWatcher的状态或最终捆绑包中，则此密钥\r\n            标识正在编写报告的课程。\r\n",", if the requested UUID is\n            supported by the remote device.":"，如果请求的uuid是\r\n            由远程设备支持。\r\n","android.app.Dialog.onCreatePanelView(int)":"android.app.dialog.oncreatepanelview（int）\r\n","Returns true if the activity is currently in picture-in-picture mode.":"如果活动当前处于图片中的模式，则返回true。\r\n","Called when the dialog has detected the user's press of the back\n            key.":"当对话框检测到后面的用户按下时调用\r\n            钥匙。\r\n",", giving you\n            a chance to present a warning message to them.":"，给你\r\n            有机会向他们发出警告信息。\r\n","Default ActionBar dropdown style.":"默认操作栏下拉样式。\r\n","android.app.admin.DevicePolicyManager.PRIVATE_DNS_SET_ERROR_FAILURE_SETTING":"android.app.admin.devicepolicymanager.private_dns_set_error_failure_setting\r\n","android.app.Activity.onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)":"Android.App.Activity.OnpreparenAvigateUptaskStack（android.app.taskStackBuilder）\r\n","Used for permissions that provide access to information about the device\n         user such as profile information.":"用于提供有关设备信息的权限\r\n         用户（例如个人资料信息）。\r\n"," broadcast when\n one or more AppWidget instances have been deleted.":" 何时广播\r\n 已删除了一个或多个AppWidget实例。\r\n","\n          Implementations of this interface are useless without a\n          ":"\r\n          该接口的实现是无用的\r\n          \r\n","android.animation.PropertyValuesHolder.ofKeyframe(android.util.Property, android.animation.Keyframe)":"android.animation.propertyvaluesholder.ofkeyframe（android.util.property，android.animation.keyframe）\r\n","Get the password expiration timeout for the given admin.":"获取给定管理员的密码到期超时。\r\n","android.app.assist.AssistStructure.isHomeActivity()":"android.app.assist.AssistStructure.ishomectivity（）\r\n","Radius of the gradient, used only with radial gradient.":"梯度的半径，仅与径向梯度一起使用。\r\n","Constrains the text to a single horizontally scrolling line instead of letting it wrap onto multiple lines, and advances focus instead of inserting a newline when you press the enter key.":"将文本限制在单个水平滚动线上，而不是让其包裹在多行上，而当您按Enter键时，请焦点而不是插入newline。\r\n","#startForeground":"#startforeground\r\n","android.animation.PropertyValuesHolder.ofMultiFloat(java.lang.String, android.animation.TypeConverter, android.animation.TypeEvaluator, java.lang.Object[])":"android.animation.propertyvaluesholder.ofmultifloat（java.lang.string，android.animation.typeconverter，android.animation.typeevaluator，java.lang.object []）\r\n","Intent action for starting the global search activity.":"开始全局搜索活动的意图行动。\r\n","android.app.backup.BackupDataInputStream.read()":"android.app.backup.backupdatainputstream.read（）\r\n","android.app.slice.SliceManager.getPinnedSlices()":"android.app.slice.slicemanager.getPinnedSlices（）\r\n","Allows an application to write (but not read) the user's\n         calendar data.":"允许应用程序写入（但不阅读）用户的\r\n         日历数据。\r\n","android.bluetooth.BluetoothDevice.getType()":"android.bluetooth.bluetoothdevice.getType（）\r\n","Turns a slice intent into slice content.":"将切片的意图变成切片内容。\r\n","Returns the media type of the given downloaded file id, if the file was\n            downloaded successfully.":"如果文件为，则返回给定下载的文件ID的媒体类型\r\n            成功下载。\r\n","The type of valueFrom and valueTo.":"价值从和估值的类型。\r\n","android.app.Fragment.hashCode()":"android.app.fragment.hashcode（）\r\n","A medium-format version of ":"中型版本的\r\n","android.app.AlertDialog.setCustomTitle(android.view.View)":"android.app.alertdialog.setCustomTitle（android.view.view）\r\n","android.bluetooth.BluetoothClass":"android.bluetooth.bluetoothclass\r\n","Color of highlighted text.":"突出显示文本的颜色。\r\n","android.app.SearchManager.SUGGEST_COLUMN_RENTAL_PRICE":"android.app.searchmanager.suggest_column_rental_price\r\n"," responsible for default transitions in this window. -or- Set the ":" 负责此窗口中的默认过渡。 - 或 - 设置\r\n","An invalid position for a tab.":"标签的无效位置。\r\n","android.app.admin.ConnectEvent":"Android.App.Admin.ConnectEvent\r\n","android.app.appsearch.SetSchemaRequest.getSchemasVisibleToPackages()":"android.app.appsearch.setschemarequest.getschemasvisibletopackages（）\r\n","Force a new password for device unlock (the password needed to access the entire device) or\n            the work profile challenge on the current user.":"强制设备解锁的新密码（访问整个设备所需的密码）或\r\n            当前用户的工作配置文件挑战。\r\n","Restore the calling application from backup.":"从备份恢复调用应用程序。\r\n","android.animation.AnimatorListenerAdapter.onAnimationResume(android.animation.Animator)":"android.animation.animatorListenerAdapter.OnanimationResume（android.animation.animator）\r\n","CreatedLocalReference":"CreateLocalReference\r\n",", in milliseconds.":"，以毫秒为单位。\r\n","android.app.Dialog.setOnKeyListener(android.content.OnKeyListener)":"android.app.dialog.setonKeylistener（android.content.onkeylistener）\r\n","android.app.SearchManager.SUGGEST_MIME_TYPE":"android.app.searchmanager.suggest_mime_type\r\n","Context#bindService(Intent, ServiceConnection, int)":"上下文＃bindservice（意图，serviceConnection，int）\r\n","Called when all clients have disconnected from a particular interface\n            published by the service.":"当所有客户与特定界面断开连接时打电话\r\n            由该服务发布。\r\n","android.app.Notification.MessagingStyle#addHistoricMessage historic":"android.app.notification.messagingstyle＃addhistoricmessage历史\r\n","Broadcast Action: This intent is used to broadcast the ":"广播行动：此意图用于广播\r\n","android.content.SharedPreferences":"android.content.sharedPreferences\r\n","A type of policy that this device admin can use: able to reset the\n            user's password via\n            ":"此设备管理员可以使用的一种策略：能够重置\r\n            用户密码通过\r\n            \r\n","F:Android.AccessibilityServices.AccessibilityServiceInfo.CapabilityToString":"f：android.accostibilityservices.Accesseribilityserviceinfo.capabilitytostring\r\n","android.app.admin.DevicePolicyManager.revokeKeyPairFromApp(android.content.ComponentName, java.lang.String, java.lang.String)":"android.app.admin.devicepolicymanager.revokekeypairfromapp（android.content.com.ponentname，java.lang.string，java.lang.string）\r\n","android.app.admin.DeviceAdminReceiver.getManager(android.content.Context)":"android.app.admin.deviceadminreceiver.getManager（android.content.context）\r\n","android.app.WallpaperInfo.getServiceName()":"android.app.wallpaperinfo.getServiceName（）\r\n","Default WebTextView style.":"默认的WebTextView样式。\r\n","Specify a URI path that must be a prefix to match, as per\n             ":"指定必须是必须匹配的前缀的URI路径，根据\r\n             \r\n","Reconstitutes a snapshot View from a Parcelable returned in\n            ":"重构从包裹中返回的包裹中的快照视图\r\n            \r\n","android.app.Fragment.getEnterTransition()":"android.app.fragment.getentertransition（）\r\n","Acceleration curve matching a quadtratic ease out function.":"加速曲线匹配二次易于函数。\r\n","options":"选项\r\n"," and the same as the value of iOS-specific\n            NSUrlSessionHandler.\n            ":" 与iOS特定的价值相同\r\n            nsurlsessionHandler。\r\n            \r\n","Return the user handle of the application that created this\n            PendingIntent, that is the user under which you will actually be\n            sending the Intent.":"返回创建此的应用程序的用户句柄\r\n            悬念，那就是您实际上将是的用户\r\n            发送意图。\r\n","android.app.usage.UsageStatsManager.getAppStandbyBucket()":"android.app.usage.usagestatsmanager.getappstandbybucket（）\r\n","android.app.slice.Slice.SUBTYPE_MAX":"android.app.slice.slice.subtype_max\r\n","Default height of a key, in pixels or percentage of display width.":"键的默认高度，像素或显示宽度的百分比。\r\n","Group of permissions that are related to SD card access.":"与SD卡访问相关的一组权限。\r\n","The user has performed a swipe up and down gesture on the touch screen.":"用户在触摸屏上进行了上下滑动手势。\r\n","Returns the result value associated with this result, if it was successful.":"如果成功的话，将返回与此结果相关的结果值。\r\n","Sets the enabled state of the profile.":"设置配置文件的启用状态。\r\n","android.app.appsearch.GetByDocumentIdRequest":"android.app.appsearch.getbydocumentidrequest\r\n","android.app.Activity.dispatchKeyEvent(android.view.KeyEvent)":"android.app.activity.dispatchKeyevent（android.view.keyevent）\r\n","Specifies that the device owner configured a specific host to use for Private DNS.":"指定设备所有者配置了用于私人DNS的特定主机。\r\n","Constructs and returns a PropertyValuesHolder with a given property name and\n            set of <code>float[]</code> values.":"构建并返回具有给定属性名称的财产价值持有人\r\n            集<Code> float [] </code>值。\r\n","Returns the unique identifier for the status.":"返回状态的唯一标识符。\r\n","Call this to inform the JobScheduler that the job has finished its work.":"打电话给这项工作，告知Jobscheduler，该工作已经完成了工作。\r\n","Description of a Activity execution result to return to the original\n activity.":"活动执行结果的描述返回原始\r\n 活动。\r\n","android.app.NotificationManager.getCurrentInterruptionFilter()":"android.app.notificationmanager.getCurrentInterRuptionFilter（）\r\n","Indicates that the Android OS has shutdown.":"表示Android OS已关闭。\r\n","Returns a list of application processes that are running on the device.":"返回设备上正在运行的应用程序过程的列表。\r\n","Returns whether this device admin would like to be visible to the\n            user, even when it is not enabled.":"返回该设备管理员是否希望看到\r\n            用户，即使未启用它。\r\n","Get a handle to the default local Bluetooth adapter.":"获取默认本地蓝牙适配器的操作。\r\n","Check to see whether this activity is in the process of finishing,\n            either because you called ":"检查一下此活动是否正在完成，\r\n            要么是因为你打电话给\r\n","#COLUMN_STATUS":"#column_status\r\n","android.bluetooth.BluetoothAdapter.EXTRA_DISCOVERABLE_DURATION":"android.bluetooth.bluetoothadapter.extra_discoverable_duration\r\n"," broadcast.":" 播送。\r\n","android.app.Service.onStart(android.content.Intent, int)":"android.app.service.onstart（android.content.intent，int）\r\n","android.app.RemoteInput.setResultsSource(android.content.Intent, int)":"android.app.remoteinput.setResultsSource（android.content.intent，int）\r\n","Returns which type of notifications in a group are responsible for audibly alerting the\n            user.":"返回组中哪些类型的通知负责听觉警报\r\n            用户。\r\n","#PASSWORD_QUALITY_SOMETHING":"#password_quality_something\r\n","android.app.admin.DevicePolicyManager.setPasswordExpirationTimeout(android.content.ComponentName, long)":"android.app.admin.devicepolicymanager.setpasswordwordexpiration timeout（android.content.componentname，long）\r\n","android.app.FragmentTransaction.setCustomAnimations(int, int)":"Android.App.FragmentTransaction.setCustomanimations（INT，INT）\r\n","Return the package name of the application that created this\n            PendingIntent, that is the identity under which you will actually be\n            sending the Intent.":"返回创建此的应用程序的包名称\r\n            悬念，这就是您实际上是的身份\r\n            发送意图。\r\n","Return whether the icon should be shown.":"返回是否应显示图标。\r\n","This is called when the overall system is running low on memory, and\n actively running processes should trim their memory usage.":"当整个系统在内存上运行较低时，这就是称为\r\n 积极运行的过程应修剪其内存使用量。\r\n","android.animation.TypeConverter":"android.animation.typeconverter\r\n","android.app.AlarmManager.getNextAlarmClock()":"android.app.alarmmanager.getNextalarmClock（）\r\n","Widget Styles \n":"小部件样式\r\n\r\n","android.accounts.AccountManager.KEY_ACCOUNT_TYPE":"android.accounts.accountmanager.key_account_type\r\n","Normal Button style.":"正常按钮样式。\r\n"," APIs that require the administrator to\n            identify itself.":" 需要管理员的API\r\n            识别自己。\r\n","android.animation.Animator.AnimatorListener":"android.animation.animator.animatorListener\r\n","android.animation.IntArrayEvaluator.IntArrayEvaluator()":"android.animation.intarrayevaluator.intarrayevaluator（）\r\n","Notification that the application's current backup operation causes it to exceed\n            the maximum size permitted by the transport.":"通知应用程序的当前备份操作导致其超过\r\n            运输允许的最大尺寸。\r\n","If set to true, the parent will be used as the anchor when the anchor cannot be\n             be found for layout_toLeftOf, layout_toRightOf, etc.":"如果设置为true，则当锚无法为\r\n             可以找到用于layout_toleftof，layout_torightof，等。\r\n","android.app.NotificationChannel.setShowBadge(boolean)":"Android.App.NotificationChannel.setshowbadge（布尔值）\r\n","s that are part of this schema.":"是该模式的一部分。\r\n"," to be used in the title.":" 标题中使用。\r\n","android.animation.AnimatorListenerAdapter.onAnimationStart(android.animation.Animator)":"android.animation.animatorListenerAdapter.OnanimationStart（android.animation.animator）\r\n","Sets the global Private DNS host to be used.":"设置要使用的全局私有DNS主机。\r\n","ToggleButton style.":"ToggleButton样式。\r\n","android.app.admin.DevicePolicyManager.DELEGATION_APP_RESTRICTIONS":"android.app.admin.devicepolicymanager.delegation_app_restrictions\r\n"," to allow activities in\n            the parent profile to access intents sent from the managed profile.":" 允许活动\r\n            从托管配置文件发送的访问意图的父个人资料。\r\n","AppSearchResult#RESULT_SECURITY_ERROR":"AppSearchResult＃result_security_error\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_PAC_URL":"android.app.admin.devicepolicymanager.extra_provisioning_wifi_pac_url\r\n","android.app.AppOpsManager.startProxyOpNoThrow(java.lang.String, int, java.lang.String, java.lang.String, java.lang.String)":"android.app.appopsmanager.startproxyopnothrow（java.lang.string，int，java.lang.string，java.lang.string，java.lang.string）\r\n","android.app.job.JobParameters.STOP_REASON_SYSTEM_PROCESSING":"android.app.job.jobparameters.stop_reason_system_processing\r\n","android.app.appsearch.SearchSpec.RANKING_STRATEGY_USAGE_LAST_USED_TIMESTAMP":"android.app.AppSearch.SearchSpec.ranking_strategy_usage_last_used_used_timestamp\r\n","Set whether or not this notification should not bridge to other devices.":"设置该通知是否不应桥接到其他设备。\r\n","android.app.Fragment.onHiddenChanged(boolean)":"Android.App.Fragment.Onhidendchanged（布尔）\r\n","android.app.PendingIntent.getActivity(android.content.Context, int, android.content.Intent, int, android.os.Bundle)":"android.app.pendingIntent.getActivity（android.content.context，int，android.content.intent，int，android.os.bundle）\r\n","android.app.admin.SystemUpdatePolicy":"Android.App.Admin.SystemupDatePolicy\r\n","Allows an application to receive the\n         ":"允许应用程序接收\r\n         \r\n","android.app.AppOpsManager.OPSTR_RECEIVE_WAP_PUSH":"android.app.appopsmanager.opptr_receive_wap_push\r\n","Not supported - please use ":"不支持 - 请使用\r\n","android.app.LoaderManager.dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])":"android.app.loadermanager.dump（java.lang.string，java.io.filedescriptor，java.io.printwriter，java.lang.string []）\r\n","android.app.backup.BackupDataInput.getKey()":"android.app.backup.backupdatainput.getkey（）\r\n","android.app.AppOpsManager.OPSTR_ADD_VOICEMAIL":"Android.App.AppopsManager.Opptr_Add_voicemail\r\n","Sets a listener for clicks on the bread crumbs.":"设置一个侦听器，以获取面包屑的点击。\r\n","Sets up the given animation to play at the same time as the animation supplied in the\n ":"设置给定的动画以与在\r\n \r\n","android.app.admin.DevicePolicyManager.enableSystemApp(android.content.ComponentName, android.content.Intent)":"android.app.admin.devicepolicymanager.enablesystemapp（android.content.componentname，android.content.intent）\r\n","The UID that owns this service.":"拥有此服务的UID。\r\n","android.app.slice.SliceManager.bindSlice(android.net.Uri, java.util.Set)":"android.app.slice.slicemanager.bindslice（android.net.uri，java.util.set）\r\n","Used for permissions that are associated with accessing and modifyign\n         telephony state: placing calls, intercepting outgoing calls, reading\n         and modifying the phone state.":"用于与访问和修改关联的权限\r\n         电话状态：接听电话，拦截呼叫，阅读\r\n         并修改电话状态。\r\n","android.app.appsearch.StorageInfo.getAliveNamespacesCount()":"android.app.appsearch.storageinfo.getalivenamespacescount（）\r\n","Broadcast Action: This broadcast is sent to indicate that provisioning of a managed profile\n            or managed device has completed successfully.":"广播动作：发送此广播以表明托管个人资料的配置\r\n            或托管设备已成功完成。\r\n","The input method preferred by an application.":"应用程序首选的输入方法。\r\n","Fragment#onAttach Fragment.onAttach()":"片段＃onattach fragment.onattach（）\r\n","Return the icon associated with this tab.":"返回与此选项卡关联的图标。\r\n","#getMax()":"#getMax（）\r\n"," along with the relationships between the various animations.":" 以及各种动画之间的关系。\r\n"," but taking a raw string; this\n            method is <em>not</em> recommended, as the string can not be changed\n            later if the locale changes.":" 但是要拿一根原始的字符串；这个\r\n            方法是<em>不推荐的，因为无法更改字符串\r\n            稍后，如果语言环境变化。\r\n","android.content.LocusId":"android.content.locusid\r\n","android.animation.TimeAnimator.setTimeListener(android.animation.TimeListener)":"android.animation.timeanimator.settimelistener（android.animation.timelistener）\r\n","Constructs and returns a ValueAnimator that animates between float values.":"构造并返回一个在浮点值之间进行动画的估值。\r\n","Allows an application to write to the user's contacts data.":"允许应用程序写入用户的联系人数据。\r\n","An intent extra that contains the user handle of the profile under\n            which an AppWidget provider is registered.":"意图额外包含配置文件的用户句柄下\r\n            AppWidget提供商注册了哪个。\r\n","For applications that use multiple virtual screens showing a wallpaper,\n            specify the step size between virtual screens.":"对于使用多个虚拟屏幕显示墙纸的应用程序，\r\n            指定虚拟屏幕之间的步长。\r\n","Integer":"整数\r\n","Called when an ":"当an\r\n",") instead of a timestamp, as supplied to\n            ":"）而不是时间戳，如\r\n            \r\n","This class contains all the information necessary to request a new download.":"此类包含请求新下载所需的所有信息。\r\n","BackupAgent#onFullBackup(FullBackupDataOutput)":"备份＃onfullbackup（FulfbackupDataOutput）\r\n","Uninstalls all custom trusted CA certificates from the profile.":"从配置文件中卸载所有自定义信任的CA证书。\r\n","The label to display on the key.":"在钥匙上显示的标签。\r\n","This class provides a simple timing engine for running animations\n which calculate animated values and set them on target objects.":"该课程为运行动画提供了一个简单的计时引擎\r\n 计算动画值并将其设置在目标对象上。\r\n","android.app.SearchManager.getGlobalSearchActivity()":"android.app.searchmanager.getGlobalSearchActivity（）\r\n","android.app.admin.DevicePolicyManager.createAdminSupportIntent(java.lang.String)":"android.app.admin.devicepolicymanager.createadminsupportintent（java.lang.string）\r\n","Unregister a listener added with ":"添加了一个听众\r\n","android.bluetooth.BluetoothAdapter.isEnabled()":"android.bluetooth.bluetoothadapter.isenabled（）\r\n","AccountManager#KEY_BOOLEAN_RESULT":"AccountManager＃key_boolean_result\r\n"," from the process before its death.":" 从死亡之前的过程中。\r\n","Action to dismiss the notification shade":"驳斥通知阴影的行动\r\n","android.app.assist.AssistContent.getStructuredData()":"android.app.assist.assistContent.getStructuredData（）\r\n","android.app.FragmentManager.findFragmentById(int)":"Android.App.FragmentManager.FindFragmentById（INT）\r\n","SecurityException":"SecurityException\r\n","Gets the content provider path for obtaining search suggestions.":"获取内容提供商的路径来获得搜索建议。\r\n"," and could be one of ":" 可能是之一\r\n","Activity#RESULT_OK":"活动＃result_ok\r\n","Map":"地图\r\n"," corresponding to\n ":" 对应于\r\n \r\n","#when":"＃什么时候\r\n","\n method.":"\r\n 方法。\r\n","A dialog showing a progress indicator and an optional text message or view.":"一个对话框显示进度指示器以及可选的文本消息或视图。\r\n"," key: an array of\n            ":" 钥匙：一系列\r\n            \r\n","android.accounts.OnAccountsUpdateListener":"android.accounts.onaccountsupdatelistener\r\n","android.app.appsearch.SetSchemaRequest.getVersion()":"android.app.appsearch.setschemarequest.getversion（）\r\n","Gets the current position of the animation in time, which is equal to the current\n            time minus the time that the animation started. -or- Sets the position of the animation to the specified point in time.":"及时获得动画的当前位置，该位置等于电流\r\n            时间减去动画开始的时间。 - 或 - 将动画的位置设置为指定的时间点。\r\n"," should be shown,\n            as supplied to ":" 应该显示，\r\n            如提供\r\n","If true, the image will be cropped to fit within its padding.":"如果为true，则图像将被裁剪以适合其填充物。\r\n","Creates a new ObjectAnimator object.":"创建一个新的objectanimator对象。\r\n","android.app.appsearch.AppSearchSession.remove(java.lang.String, android.app.appsearch.SearchSpec, java.util.concurrent.Executor, java.util.function.Consumer)":"android.app.app.appsearch.appsearchsession.remove（java.lang.string，android.app.appsearch.search.searchspec，java.util.concurrent.executor，java.util.util.function.consumer.consumer）\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_SSID":"android.app.admin.devicepolicymanager.extra_provisioning_wifi_ssid\r\n","Get the extras associated with a given widget instance.":"获取与给定的小部件实例相关联的附加功能。\r\n","#onRebind":"#onrebind\r\n","A styled string, specifying the style to be used for showing\n             inline candidate text when composing with an input method.":"一个样式的字符串，指定用于显示的样式\r\n             使用输入方法编写时，内联候选文本。\r\n","Minimum width (in dp) which the widget can be resized to.":"最小宽度（以DP为单位）可以调整小部件的大小。\r\n","android.app.admin.DevicePolicyManager.PRIVATE_DNS_MODE_OPPORTUNISTIC":"android.app.admin.devicepolicymanager.private_dns_mode_opportunistic\r\n","Default theme for activities that don't actually display a UI; that\n         is, they finish themselves before being resumed.":"实际上未显示UI的活动的默认主题；那\r\n         是，他们在恢复之前完成了自己的工作。\r\n","Returns the values that this ValueAnimator animates between.":"返回该估值之间动画的值。\r\n","android.accessibilityservice.AccessibilityService.onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)":"android.accosconibilityservice.Accesseribilityservice.onaccessibilityevent（android.view.accosconibility.accessibility aCcessibilityEvent）\r\n","Execute a call on the application's main thread, blocking until it is\n            complete.":"在应用程序的主线程上执行通话，阻止直到\r\n            完全的。\r\n","TextView style for list separators.":"列表分离器的文本视图样式。\r\n","Provide the bitmap to be used as the payload for the big picture notification.":"提供用于大图通知的有效载荷的位图。\r\n","Allows an application to receive MMS messages.":"允许应用程序接收MMS消息。\r\n","android.accessibilityservice.FingerprintGestureController.isGestureDetectionAvailable()":"Android.AccessibilityService.fingerprintesturecontroller.isgesturedetectionavailable（）\r\n","android.app.appsearch.SetSchemaRequest.getSchemas()":"android.app.appsearch.setschemarequest.getschemas（）\r\n","android.app.Activity.getMediaController()":"android.app.activity.getMediacontroller（）\r\n","Special mode that means \"allow only when app is in foreground.":"特殊模式的意思是“仅当应用在前景时允许。\r\n"," method and before\n            ":" 方法和之前\r\n            \r\n",", providing the Notification an\n            opportunity to add action buttons to contentView.":"，提供通知\r\n            将操作按钮添加到ContentView的机会。\r\n","Get the friendly Bluetooth name of the remote device.":"获取远程设备的友好蓝牙名称。\r\n","android.Manifest.permission#PACKAGE_USAGE_STATS":"android.manifest.permission＃package_usage_stats\r\n",":\n automatically switch night mode on and off based on the time.":"：\r\n 根据时间自动打开和关闭夜间模式。\r\n","android.app.admin.DevicePolicyManager.getApplicationRestrictions(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.getApplicationRestrictions（android.content.componentname，java.lang.string）\r\n"," containing the id of the\n            ":" 包含ID\r\n            \r\n","android.accessibilityservice.AccessibilityService.GESTURE_4_FINGER_SWIPE_DOWN":"Android.AccessibilityService.Accessibilityservice.gesture_4_finger_swipe_down\r\n","android.app.Activity.onGenericMotionEvent(android.view.MotionEvent)":"android.app.activity.gonenericmotionevent（android.view.motionevent）\r\n","Return the size of all cached data.":"返回所有缓存数据的大小。\r\n","android.animation.LayoutTransition.enableTransitionType(int)":"android.animation.layouttransition.enabletransitionType（int）\r\n","\n          Whether or not the service can be launched by components of other\n          applications.\n        ":"\r\n          该服务是否可以由其他组件启动\r\n          申请。\r\n        \r\n","Determine if a package is suspended.":"确定包裹是否被暂停。\r\n","Callback for interrupting the accessibility feedback.":"用于中断可访问性反馈的回调。\r\n","<div class=\"special reference\">\n            <h3>Developer Guides</h3>":"<div class =“特殊参考”>\r\n            <H3>开发人员指南</h3>\r\n","Constant representing that the conversation user is playing a game.":"不断表示对话用户正在玩游戏。\r\n","android.app.NotificationManager.IMPORTANCE_MIN":"android.app.notificationmanager.importance_min\r\n","This is the SDK version number that the application is targeting.":"这是应用程序针对的SDK版本号。\r\n","Intercept standard device administrator broadcasts.":"拦截标准设备管理员广播。\r\n","Takes control of the execution of messages on the specified looper until\n            ":"控制指定循环中的消息的执行，直到\r\n            \r\n","android.app.SearchableInfo.getVoiceSearchLaunchWebSearch()":"android.app.searchableInfo.getVoicesearchLaunchWebsearch（）\r\n","android.app.appsearch.SearchSpec.RANKING_STRATEGY_USAGE_COUNT":"android.app.appsearch.searchspec.ranking_strategy_usage_count\r\n","Options affecting how the action bar is displayed.":"影响动作栏如何显示的选项。\r\n","Flag declaring this activity to be 'immersive'; immersive activities\n         should not be interrupted with other activities or notifications.":"宣布这项活动为“沉浸式”；沉浸式活动\r\n         不应被其他活动或通知中断。\r\n","android.app.AppOpsManager.OPSTR_WRITE_CONTACTS":"android.app.appopsmanager.opptr_write_contacts\r\n","The user has performed a swipe left and right gesture on the touch screen.":"用户在触摸屏上进行了左右滑动。\r\n","Battery game mode will save battery and give longer game play time.":"电池游戏模式将节省电池并提供更长的游戏时间。\r\n","android.app.ProgressDialog.setProgressStyle(int)":"android.app.progressdialog.setprogressstyle（int）\r\n","This is called when a Fragment in this activity calls its\n ":"当此活动中的片段称呼它时，这就是称为\r\n \r\n","android.app.admin.DevicePolicyManager.isCallerApplicationRestrictionsManagingPackage()":"android.app.admin.devicepolicymanager.iscallerApplicationRestrictionsManagingPackage（）\r\n","#FORMAT_INT":"#format_int\r\n","android.app.AlarmManager.INTERVAL_HOUR":"android.app.alarmmanager.interval_hour\r\n","android.app.AlertDialog.setButton2(java.lang.CharSequence, android.content.OnClickListener)":"android.app.alertdialog.setButton2（java.lang.charsequence，android.content.onclicklistener）\r\n","Interface for use with the ":"用于与\r\n","android.app.NotificationChannel.setDescription(java.lang.String)":"Android.App.NotificationChannel.setDescription（Java.lang.String）\r\n","Print the Fragments's state into the given stream.":"将片段的状态打印到给定的流中。\r\n","android.app.WallpaperManager.COMMAND_TAP":"android.app.wallpapermanager.command_tap\r\n","Allows applications to read the sync stats \n":"允许应用程序读取同步统计\r\n\r\n","android.app.appsearch.GetByDocumentIdRequest.getIds()":"android.app.app.appsearch.getbydocumentidrequest.getIds（）\r\n","DevicePolicyManager#ENCRYPTION_STATUS_UNSUPPORTED":"DevicePolicyManager＃encryption_status_unsupported\r\n","Bugreport completion process failed.":"BugReport完成过程失败。\r\n","Called by a device owner or profile owner to disable account management for a specific type\n            of account.":"由设备所有者或个人资料所有者拨打以禁用特定类型的帐户管理\r\n            帐户。\r\n","android.app.admin.DevicePolicyManager.isUninstallBlocked(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.isuninstallblocked（android.content.componentname，java.lang.string）\r\n","An extra that can be passed to\n            ":"可以传递给的额外\r\n            \r\n","RestoreObserver":"RestoreObserver\r\n","Get a appWidgetId for a host in the calling process.":"在呼叫过程中获取用于主机的AppWidgetID。\r\n","android.accessibilityservice.GestureDescription":"Android.AccessibilityService.GENTRUEDESCRIPTION\r\n"," priority and the ":" 优先级和\r\n","Use the drawable's intrinsic width and height as minimum size values.":"将可绘制的固有宽度和高度用作最小尺寸值。\r\n","android.app.FragmentManager.popBackStackImmediate(int, int)":"android.app.fragmentmanager.popbackstackimediate（int，int）\r\n","Controls the initial visibility of the view.":"控制视图的初始可见性。\r\n","#setCancelable(boolean)":"#setCancelable（布尔值）\r\n","privateDnsHost":"私密的人\r\n","android.app.admin.DevicePolicyManager.getPasswordMinimumSymbols(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getPasswordwordwordminimumsymbols（android.content.componentname）\r\n","android.bluetooth.BluetoothGattCharacteristic.PROPERTY_BROADCAST":"android.bluetooth.bluetoothgattcharacteristic.property_broadcast\r\n","Get the total time this package spent in the foreground, measured in milliseconds.":"获取该包装在前景中花费的总时间，以毫秒为单位。\r\n","Specifies an intent to launch instead of posting the notification to the status bar.":"指定意图启动，而不是将通知发布到状态栏。\r\n","The user has performed an up and right gesture on the touch screen.":"用户在触摸屏上执行了一个启动和正确的手势。\r\n","Indicates that a shell command was issued over ADB via ":"表示通过ADB通过\r\n","android.app.Notification.EXTRA_TEMPLATE":"android.app.notification.extra_template\r\n"," key: A String array containing the people that this notification relates to,\n            each of which was supplied to ":" 键：一个包含此通知与人有关的人的字符串数组，\r\n            每个供应\r\n","#OPERATION_SAFETY_REASON_DRIVING_DISTRACTION":"#operation_safety_reason_driving_distraction\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_NAME":"android.app.admin.devicepolicymanager.extra_provisioning_device_admin_package_name\r\n","Force finish another activity that you had previously started with\n            ":"力量完成您以前开始的另一项活动\r\n            \r\n","ID_TYPE_SERIAL":"id_type_serial\r\n","android.app.Instrumentation.onDestroy()":"android.app.instrumentation.ondestroy（）\r\n","#ACTION_NAME_CHANGED":"#action_name_changed\r\n","Flag: set or retrieve the lock-screen-specific wallpaper.":"标志：设置或检索锁定特定的壁纸。\r\n","Action sent to a device administrator when the user has disabled\n            it.":"用户禁用时发送给设备管理员的操作发送给设备管理员\r\n            它。\r\n","android.app.admin.DeviceAdminInfo.USES_POLICY_WATCH_LOGIN":"android.app.admin.deviceadmininfo.uses_policy_watch_login\r\n","android.animation.PropertyValuesHolder.ofObject(java.lang.String, android.animation.TypeConverter, android.graphics.Path)":"android.animation.propertyvaluesholder.opobject（java.lang.string，android.animation.typeconverter，android.graphics.path）\r\n","Configure a list of freeze periods on top of the current policy.":"在当前策略之上配置冻结期列表。\r\n","android.app.FragmentManager.popBackStackImmediate()":"android.app.fragmentManager.popbackStackimMediate（）\r\n","android.app.NotificationManager.updateAutomaticZenRule(java.lang.String, android.app.AutomaticZenRule)":"android.app.notificationmanager.updateautomaticzenrule（java.lang.string，android.app.automaticzenrule）\r\n","android.app.NotificationChannelGroup.NotificationChannelGroup(java.lang.String, java.lang.CharSequence)":"Android.App.NotificationChannelGroup.NotificationChannelGroup（Java.lang.String，Java.lang.CharSequence）\r\n","PackageManager#getNameForUid":"PackageManager＃getNameforuid\r\n","android.animation.ObjectAnimator.ofInt(java.lang.Object, java.lang.String, int[])":"android.animation.ObjectAnimator.ofint（java.lang.Object，java.lang.string，int []）\r\n","android.app.Dialog":"android.app.dialog\r\n","android.app.LauncherActivity.intentForPosition(int)":"android.app.launcheractivity.intentforposition（int）\r\n","Specifies that the device owner requested opportunistic DNS over TLS":"指定设备所有者要求通过TLS的机会主义DNS\r\n","A flag indicating the animation that runs on those items that are changing\n due to an item disappearing from the container.":"指示动画在那些正在更改的项目上运行的旗帜\r\n 由于一项从容器中消失的物品。\r\n","Defines if the associated drawables need to be mirrored when in RTL mode.":"在RTL模式下定义是否需要镜像关联的可抽签。\r\n","Set the source of the RemoteInput results.":"设置RemoteInput结果的来源。\r\n","android.accessibilityservice.AccessibilityServiceInfo.notificationTimeout":"Android.AccessibilityService.AccessibilityserviceInfo.NotificationTimeOut\r\n","android.app.blob.BlobStoreManager.releaseLease(android.app.blob.BlobHandle)":"android.app.blob.blobstoremanager.releaselease（android.app.blob.blobhandle）\r\n","android.app.SearchManager.SUGGEST_COLUMN_TEXT_2_URL":"android.app.searchmanager.suggest_column_text_2_url\r\n","Called by a profile owner of a managed profile to set the packages that are allowed to use\n            a ":"由托管配置文件的配置文件所有者调用以设置允许使用的软件包\r\n            一个\r\n","android.appwidget.AppWidgetManager.getInstalledProviders()":"android.appwidget.appwidgetManager.getInstalledProviders（）\r\n","android.app.appsearch.exceptions.AppSearchException":"android.app.appsearch.exceptions.AppSearchException\r\n","\n            collection it will have this property set to the type of authentication as requested by the server, or to ":"\r\n            收集将根据服务器要求的身份验证的类型将此属性设置为\r\n","\n          The configuration changes that the activity will handle itself.\n        ":"\r\n          配置会改变活动将自身处理的。\r\n        \r\n","Gets the current notification interruption filter.":"获取当前的通知中断过滤器。\r\n","Information you can retrieve about the available memory through\n ":"您可以通过可用内存检索信息\r\n \r\n","android.app.admin.SystemUpdateInfo.getReceivedTime()":"android.app.admin.SystemupDateInfo.getReceiveTime（）\r\n","The title in the dialog.":"对话框中的标题。\r\n","Makes the TextView be exactly this many lines tall.":"使文本视图正是如此之高。\r\n","android.app.Dialog.onKeyUp(int, android.view.KeyEvent)":"android.app.dialog.onkeyup（int，android.view.keyevent）\r\n","android.app.SearchableInfo.getVoicePromptTextId()":"android.app.searchableInfo.getVoicePromptTextID（）\r\n","Grants access to ":"赠款访问\r\n","android.app.ApplicationExitInfo.getPackageUid()":"android.app.applicationexitinfo.getPackageuid（）\r\n","Return the FragmentManager for interacting with fragments associated\n            with this fragment's activity.":"返回fragmentManager与相关的片段交互\r\n            有这个片段的活动。\r\n","android.app.AsyncNotedAppOp.getNotingUid()":"android.app.asyncnotedappop.getnotinguid（）\r\n"," for managing\n one or more ":" 用于管理\r\n 一个或多个\r\n","Access APIs for SIP calling over VOIP or WiFi":"访问通过VoIP或WiFi的sip呼叫的API\r\n","android.app.Fragment.getFragmentManager()":"android.app.fragment.getFragmentManager（）\r\n","android.animation.ArgbEvaluator.evaluate(float, java.lang.Object, java.lang.Object)":"android.animation.argbevaluator.evaluate（float，java.lang.object，java.lang.object）\r\n","android.app.FragmentTransaction.replace(int, android.app.Fragment)":"Android.App.FragmentTransaction.Replace（INT，Android.App.Fragment）\r\n","Maximum height (in dp) which the widget can be resized to.":"最大高度（以DP为单位）可以调整小部件的大小。\r\n","If the expected event is not received within the timeout.\n":"如果在超时内未收到预期事件。\r\n\r\n","android.app.ActivityManager.getRecentTasks(int, int)":"android.app.activityManager.getRecentTasks（int，int）\r\n","android.app.Notification.EXTRA_CHRONOMETER_COUNT_DOWN":"android.app.notification.extra_chronometer_count_down\r\n","This method will be invoked when the dialog is canceled.":"取消对话框时，将调用此方法。\r\n","android.animation.PropertyValuesHolder.ofObject(android.util.Property, android.animation.TypeConverter, android.animation.TypeEvaluator, java.lang.Object)":"android.animation.propertyvaluesholder.opobject（android.util.property，android.animation.typeconverter，android.animation.typeevaluator，java.lang.object）\r\n","android.app.SearchManager.INTENT_ACTION_GLOBAL_SEARCH":"android.app.searchmanager.intent_action_global_search\r\n","Called when the trackball was moved and not handled by any of the\n            views inside of the activity.":"当轨迹球被移动而不由任何一个\r\n            活动内部的视图。\r\n","BluetoothClass":"蓝牙类\r\n","java.lang.Class":"java.lang.class\r\n","android.app.Notification.EXTRA_PICTURE_CONTENT_DESCRIPTION":"android.app.notification.extra_picture_content_description\r\n","Returns the namespace attached to the request.":"返回请求附加的名称空间。\r\n","\n            since the requests aren't restarted automatically, but it can be used in the future implementations of ":"\r\n            由于请求未自动重新启动，但可以在将来的实现中使用\r\n","PeerReference":"同行\r\n","This evaluator can be used to perform type interpolation between <code>PointF</code> values.":"该评估器可用于在<code> Pointf </code>值之间执行类型插值。\r\n","#BUGREPORT_FAILURE_FAILED_COMPLETING":"#bugreport_failure_failed_completing\r\n","\n          Whether or not the application should be created with a large Dalvik\n          heap.\n        ":"\r\n          是否应使用大型Dalvik创建应用程序\r\n          堆。\r\n        \r\n","android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_SECURE_NOTIFICATIONS":"android.app.admin.devicepolicymanager.keyguard_disable_secure_notifications\r\n","Returns the bounds that should be used to launch the activity.":"返回应用于启动活动的界限。\r\n","Loads the localized label to display to the user in the AppWidget picker.":"加载本地化标签以显示给AppWidget Picker中的用户。\r\n","Searchability meta-data for an activity.":"可搜索性元数据进行活动。\r\n","Default MapView style.":"默认MAPVIEW样式。\r\n","android.app.usage.EventStats.getCount()":"android.app.usage.eventstats.getCount（）\r\n","A type of policy that this device admin can use: able to factory\n            reset the device, erasing all of the user's data, via\n            ":"该设备管理员可以使用的一种策略：能够出厂\r\n            重置设备，通过\r\n            \r\n","Comma separated package names from which this serivce would like to receive events (leave out for all packages).":"逗号分隔的软件包名称希望从中收到事件（所有软件包）。\r\n","android.app.admin.DeviceAdminReceiver.onTransferAffiliatedProfileOwnershipComplete(android.content.Context, android.os.UserHandle)":"android.app.admin.deviceadminreceiver.ontransferaffiliated -profileownhipscomplete（android.content.context，android.os.os.userhandle）\r\n","android.appwidget.AppWidgetProviderInfo.CREATOR":"android.appwidget.AppwidgetProviderInfo.Creator\r\n","Gets the revision of the version.":"获取版本的修订。\r\n","Sets up the animation supplied in the\n ":"设置在\r\n \r\n"," is specified on the SliceProvider.":" 在SliceProvider上指定。\r\n",", but this alarm will be allowed to execute\n            even when the system is in low-power idle (a.":"，但是该警报将被允许执行\r\n            即使系统处于低功率空闲状态（a。\r\n","A migrator class to translate ":"迁移者课程翻译\r\n","Gets the third most preeminent color of the wallpaper.":"获得墙纸的第三大颜色。\r\n","Returns the instance ID for this characteristic.":"返回此特征的实例ID。\r\n","android.accounts.AccountManager.getAccountVisibility(android.accounts.Account, java.lang.String)":"android.accounts.accountmanager.getAccountvisible（android.accounts.accounts.account，java.lang.string）\r\n","Whether this job needs the device to be plugged in.":"该作业是否需要插入设备。\r\n","android.app.job.JobInfo.isPeriodic()":"android.app.job.jobinfo.isperiodic（）\r\n","Provides the structured interface through which a ":"提供结构化接口\r\n","This is the amount of tension.":"这是紧张的程度。\r\n","\n        property.\n      ":"\r\n        财产。\r\n      \r\n","Gets whether all notifications posted by this app can appear outside of the\n            notification shade, floating over other apps' content.":"获取该应用程序发布的所有通知是否可以出现在\r\n            通知阴影，漂浮在其他应用程序的内容上。\r\n","Returns whether notifications posted to this channel trigger notification lights.":"返回是否发布到此频道触发通知灯的通知。\r\n","android.app.ActionBar.setTitle(int)":"android.app.actionbar.settitle（int）\r\n","A string extra holding the IMEI (International Mobile Equipment Identity) of the device.":"一根额外的设备的IMEI（国际移动设备标识）。\r\n","Add a rich notification style to be applied at build time.":"添加丰富的通知样式，以便在构建时间应用。\r\n","android.app.Notification.getGroupAlertBehavior()":"android.app.notification.getGroupAlertBehavior（）\r\n","field that if set,\n the audio will be repeated until the notification is\n cancelled or the notification window is opened.":"字段如果设置，\r\n 音频将重复直到通知为\r\n 取消或打开通知窗口。\r\n",": the object being written\n            is a return value, that is the result of a function such as\n            \"<code>Parcelable someFunction()</code>\",\n            \"<code>void someFunction(out Parcelable)</code>\", or\n            \"<code>void someFunction(inout Parcelable)</code>\".":"：编写的对象\r\n            是返回值，是函数之类的结果\r\n            “ <code>穿线式unfunction（）</code>”，\r\n            “ <code>无函数（拆除）</code>”，或\r\n            “ <code>无效（inout parcelable）</code>”。\r\n","Notifies the specified collection view in the specified AppWidget instance\n            to invalidate its data.":"在指定的AppWidget实例中通知指定的集合视图\r\n            使其数据无效。\r\n"," key: this is a boolean to indicate that the\n            ":" 钥匙：这是一个布尔人，表明\r\n            \r\n","#addPauseListener(android.animation.Animator.AnimatorPauseListener)\n            pauseListeners":"#addpauselistener（android.animation.animator.animatorpauselistener）\r\n            Pauselisteners\r\n","Used to determine if a particular package has been registered as a Device Owner app.":"用于确定特定软件包是否已注册为设备所有者应用程序。\r\n","GATT write operation is not permitted":"Gatt写操作不允许\r\n","Action sent to a device administrator when the user has changed the password of their device\n            or profile challenge.":"用户更改设备的密码时发送给设备管理员的操作发送给设备管理员\r\n            或个人资料挑战。\r\n","The style resource to use for a window's title text.":"用于窗口标题文本的样式资源。\r\n","android.app.slice.SliceItem.FORMAT_INT":"android.app.slice.sliceitem.format_int\r\n","#COLUMN_REASON":"#Column_Reason\r\n","android.bluetooth.BluetoothAdapter.getProfileConnectionState(int)":"android.bluetooth.bluetoothadapter.getProfileconnectionstate（INT）\r\n","android.app.admin.DevicePolicyManager.transferOwnership(android.content.ComponentName, android.content.ComponentName, android.os.PersistableBundle)":"android.app.admin.devicepolicymanager.transferownersion（android.content.componentname，android.content.componentname，android.os.os.persistablebundle）\r\n","android.app.ListActivity.setListAdapter(android.widget.ListAdapter)":"android.app.listactivity.setlistadapter（android.widget.listadapter）\r\n"," registered the\n            note-event needs to be delivered to the callback.":" 注册\r\n            票据事件需要将其交付到回调。\r\n","Acceleration curve matching an ease in + ease out function \n":"加速曲线匹配轻松 +轻松功能\r\n\r\n","\n            The HTTP Digest authentication scheme\n            ":"HTTP Digest身份验证方案\r\n            \r\n","Drawable for the vertical bar shown at the beginning and at the end of the selected date.":"可用于在选定日期开始时和结束时显示的垂直条。\r\n","s from the index by Query.":"来自查询索引的s。\r\n","Declare that this application requires access to restricted accounts of a certain\n             type.":"声明此申请需要访问某个限制帐户\r\n             类型。\r\n","android.app.UiModeManager.enableCarMode(int)":"android.app.uimodemanager.enablecarmode（int）\r\n","Describes a running service report.":"描述运行的服务报告。\r\n","API for performing a set of Fragment operations.":"用于执行一组片段操作的API。\r\n","Called by the system when the ":"当系统调用\r\n","Drawable to use as the fast scroll thumb.":"可以用作快速滚动拇指。\r\n","Returns the supported features (UUIDs) of the remote device.":"返回远程设备的支持功能（UUID）。\r\n","Returns the currently selected tab if in tabbed navigation mode and there is at least\n one tab present.":"如果在选项卡式导航模式中，则返回当前选择的选项卡，至少有\r\n 一个选项卡。\r\n"," with a null tag.":" 带有零标签。\r\n","Allows an application to collect battery statistics \n":"允许应用程序收集电池统计数据\r\n\r\n","Allows an application to read from external storage.":"允许应用程序从外部存储中读取。\r\n","Moves all Fragments managed by the controller's FragmentManager\n            into the activity created state.":"移动由控制器的FragmentManager管理的所有片段\r\n            进入创建状态的活动。\r\n","android.animation.Keyframe.setFraction(float)":"android.animation.keyframe.setFraction（float）\r\n","Default SeekBar style.":"默认的Seekbar样式。\r\n","android.app.slice.Slice.EXTRA_RANGE_VALUE":"android.app.slice.slice.extra_range_value\r\n","Minimum curve angle a stroke must contain before it is recognized as a gesture.":"在将其识别为手势之前，必须包含最小曲线角度。\r\n","AppWidgetProvider":"AppWidgetProvider\r\n"," but instead\n            of throwing a ":" 但反而\r\n            投掷\r\n","if the package name doesn't belong to the given\n             UID, or if ownership cannot be verified.\n":"如果包装名称不属于给定\r\n             UID，或者如果无法验证所有权。\r\n\r\n","Called by the profile owner of a managed profile to disable widget providers from a given\n            package to be available in the parent profile.":"由托管个人资料的个人资料所有者调用，以使给定的小部件提供商从给定的\r\n            包装在父个人资料中可用。\r\n","Re-enable system apps by intent that were disabled by default when the user was initialized.":"默认情况下，用户初始化用户时，通过意图重新启用了系统应用程序。\r\n","The identifier for the neutral button.":"中性按钮的标识符。\r\n","Bundle of extras which are returned to your application at execution time.":"在执行时返回您的申请的一束额外。\r\n","android.app.Service.STOP_FOREGROUND_REMOVE":"android.app.service.stop_foreground_remove\r\n","A simple fade-in animation.":"一个简单的淡入动画。\r\n","Reference to a drawable that will be used to display a text selection\n             anchor on the left side of a selection region.":"引用可绘制的可用于显示文本选择的可绘图\r\n             选择区域左侧的锚点。\r\n","Hint that this content is important and should be larger when displayed if\n            possible.":"暗示此内容很重要，并且显示时应更大\r\n            可能的。\r\n","BluetoothGatt#CONNECTION_PRIORITY_BALANCED":"Bluetoothgatt＃Connection_Priority_Balanced\r\n","Bundle key used to supply the password directly in options to\n            ":"捆绑密钥用于直接在选项中提供密码\r\n            \r\n","android.accounts.AuthenticatorDescription.packageName":"android.accounts.authenticatordescription.packagename\r\n",": the process had been showing\n            a user interface, and is no longer doing so.":"：该过程已经显示\r\n            用户界面，不再这样做。\r\n","#RECENT_WITH_EXCLUDED":"#recent_with_excluded\r\n"," to allow the user to select routes and\n            to control the currently selected route.":" 允许用户选择路由和\r\n            控制当前选择的路线。\r\n","android.animation.ObjectAnimator.ofArgb(java.lang.Object, java.lang.String, int[])":"android.animation.ObjectAnimator.ofargb（java.lang.Object，java.lang.string，int []）\r\n","Lists all accounts of particular type visible to the caller.":"列出呼叫者可见的特定类型的所有帐户。\r\n","android.animation.PropertyValuesHolder.ofInt(java.lang.String, int[])":"android.animation.propertyvaluesholder.ofint（java.lang.string，int []）\r\n","android.app.Activity.getComponentName()":"android.app.activity.getComponentName（）\r\n"," key: A string representing the name of the specific\n            ":" 键：表示特定名称的字符串\r\n            \r\n","android.appwidget.AppWidgetManager.ACTION_APPWIDGET_OPTIONS_CHANGED":"android.appwidget.appwidgetManager.action_appwidget_options_changed\r\n"," that is provided to the app installer for additional verification\n            if the call to ":" 提供给应用程序安装程序以进行其他验证\r\n            如果打电话\r\n","Standard gravity constant that a child supplies to its parent.":"儿童提供给父母的标准重力常数。\r\n","Allows to enable the indeterminate mode.":"允许启用不确定模式。\r\n","android.app.Fragment.onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenuInfo)":"android.app.fragment.oncreatecontextmenu（android.view.contextmenu，android.view.view，android.view.contextmenuinfo）\r\n","PendingIntent#FLAG_UPDATE_CURRENT PendingIntent.FLAG_UPDATE_CURRENT":"pendingIntent＃flag_update_current pendingIntent.flag_update_current\r\n","Called by a device admin to set the short support message.":"由设备管理员调用以设置简短的支持消息。\r\n","android.app.FragmentController.dispatchMultiWindowModeChanged(boolean, android.content.res.Configuration)":"android.app.fragmentController.dispatchmultiwindowmodechanged（boolean，android.content.res.res.configuration）\r\n","The type of data being placed in a text field, used to help an\n         input method decide how to let the user enter text.":"放置在文本字段中的数据类型，用于帮助\r\n         输入方法决定如何让用户输入文本。\r\n"," (the ":" （这\r\n","Called by a profile owner of a managed profile to set the color used for customization.":"由托管配置文件的配置文件所有者调用，以设置用于自定义的颜色。\r\n","android.app.usage.UsageStats.add(android.app.usage.UsageStats)":"android.app.usage.usagestats.add（android.app.usage.usagestats）\r\n","F:Android.App.Notification+Builder.SetDefaults":"F：android.app.notification+Builder.setDefaults\r\n",": reported by the wallpaper\n            host when the user taps on an empty area (not performing an action\n            in the host).":"：由墙纸报道\r\n            当用户点击空区域时（不执行操作）时主机\r\n            在主机中）。\r\n","Returns the label associated with the blob that this object is representing.":"返回与该对象所代表的斑点关联的标签。\r\n","Default Checkbox style.":"默认的复选框样式。\r\n","PackageManager":"PackageManager\r\n","android.app.Activity.requestShowKeyboardShortcuts()":"android.app.activity.requestshowkeyboardshortcuts（）\r\n","Accessibility services should only be used to assist users with disabilities in using\n            Android devices and apps.":"可访问性服务仅应用于协助残疾用户使用\r\n            Android设备和应用程序。\r\n"," key: this is the main text payload, as supplied to\n            ":" 钥匙：这是主要文本有效载荷，提供给\r\n            \r\n","android.app.Notification.INTENT_CATEGORY_NOTIFICATION_PREFERENCES":"android.app.notification.intent_category_notification_preferences\r\n","Fragment#onCreate Fragment.onCreate()":"片段＃oncreate fragment.oncreate（）\r\n","Called by a device admin to get the short support message.":"由设备管理员拨打以获取简短支持消息。\r\n","android.app.AutomaticZenRule.AutomaticZenRule(java.lang.String, android.content.ComponentName, android.content.ComponentName, android.net.Uri, android.service.notification.ZenPolicy, int, boolean)":"android.app.automationzenrule.automationzenrule（java.lang.string，android.content.componentname，android.content.componentname，android.net.net.uri，android.service.service.service.notification.notification.notification.zenpolicy.zenpolicy，int，boolean），int，boolean）\r\n","Called when a new batch of security logs can be retrieved.":"当可以检索一批新的安全日志时调用。\r\n","Finds a view that was identified by the ":"找到一个由\r\n","android.app.DownloadManager.ERROR_UNHANDLED_HTTP_CODE":"android.app.downloadmanager.error_unhandled_http_code\r\n","The user id of this process.":"此过程的用户ID。\r\n","By default, this will use the owner Activity's suggested stream type.":"默认情况下，这将使用所有者活动的建议流类型。\r\n","Returns the time when the activity started generating assist data to build the\n            AssistStructure.":"返回活动开始生成辅助数据以构建的时间\r\n            协助结构。\r\n","android.app.admin.DevicePolicyManager.getMeteredDataDisabledPackages(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getMetereddatadisabledpackages（android.content.componentname）\r\n","android.accessibilityservice.AccessibilityServiceInfo.CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT":"Android.AccessibilityService.AccessibilityserviceInfo.capibility_can_retrieve_window_content\r\n","A fragment that displays a list of items by binding to a data source such as\n            an array or Cursor, and exposes event handlers when the user selects an item.":"通过绑定到数据源的片段，显示项目列表\r\n            数组或光标，并在用户选择项目时公开事件处理程序。\r\n","\n        or ":"\r\n        或者\r\n","#grantSlicePermission":"#grantslicepermission\r\n"," element within\n      ":" 内部元素\r\n      \r\n","#retrieveSecurityLogs":"#retrievesecuritylogs\r\n","android.animation.ObjectAnimator.ofInt(java.lang.Object, java.lang.String, java.lang.String, android.graphics.Path)":"android.animation.ObjectAnimator.ofint（java.lang.object，java.lang.string，java.lang.string，android.graphics.path）\r\n","Account for the creation of a JNI Reference.":"解释创建JNI参考。\r\n","Specifies that a user can select the key via the Certificate Selection prompt.":"指定用户可以通过证书选择提示选择键。\r\n","Add the statistics from the right ":"从右添加统计数据\r\n","Text color, typeface, size, and style for system search result title.":"用于系统搜索结果标题的文本颜色，字体，大小和样式。\r\n"," that contains an int.":" 其中包含一个int。\r\n","Defines whether to fade out scrollbars when they are not in use.":"定义在不使用滚动条时是否淡出滚动条。\r\n","android.app.NotificationManager.Policy#INTERRUPTION_FILTER_PRIORITY":"android.app.notificationmanager.policy＃interription_filter_priority\r\n","\n            The log entry contains a ":"\r\n            日志条目包含一个\r\n","android.content.ComponentCallbacks2.TRIM_MEMORY_MODERATE":"android.content.componentCallbacks2.trim_memory_moderate\r\n","android.app.PendingIntent.getActivity(android.content.Context, int, android.content.Intent, int)":"android.app.pendingIntent.getActivity（android.content.context，int，android.content.intent，int）\r\n","android.app.admin.DevicePolicyManager.setGlobalSetting(android.content.ComponentName, java.lang.String, java.lang.String)":"android.app.admin.devicepolicymanager.setglobalsetting（android.content.componentname，java.lang.string，java.lang.string）\r\n","This is called when a child activity of this one calls its\n ":"当这个孩子的活动称呼它的时候，这就是称为\r\n \r\n","android.animation.Animator.DURATION_INFINITE":"android.animation.animator.duration_infinite\r\n","Add a fragment to the activity state.":"在活动状态中添加片段。\r\n","android.animation.ObjectAnimator.ofObject(java.lang.Object, android.util.Property, android.animation.TypeEvaluator, java.lang.Object[])":"android.animation.ObjectAnimator.OfObject（java.lang.object，android.util.property，android.animation.typeevaluator，java.lang.object []）\r\n","android.app.appsearch.AppSearchManager.createSearchSession(android.app.appsearch.SearchContext, java.util.concurrent.Executor, java.util.function.Consumer)":"android.app.appsearch.appsearchmanager.createsearchsessionsession（android.app.appsearch.searchcontext，java.util.concurrent.executor，java.util.function.consumer））\r\n","Register an ":"注册\r\n","android.bluetooth.BluetoothDevice.EXTRA_CLASS":"android.bluetooth.bluetoothdevice.extra_class\r\n","android.accessibilityservice.AccessibilityService.GESTURE_SWIPE_UP_AND_DOWN":"Android.AccessibilityService.Accessibilityservice.gesture_swipe_up_and_down\r\n","android.app.ExpandableListActivity.onChildClick(android.widget.ExpandableListView, android.view.View, int, int, long)":"android.app.expandableListactivity.OnchildClick（android.widget.expandableListView，android.view.view.view，int，int，int，long）\r\n","Specify whether an activity should be kept in its history stack.":"指定是否应将活动保存在其历史堆栈中。\r\n","android.app.Activity.startPostponedEnterTransition()":"android.app.activity.startpostponedentertransition（）\r\n","The user has performed a four-finger double tap gesture on the touch screen.":"用户在触摸屏上执行了四指双击手势。\r\n","android.app.AppOpsManager.startOp(java.lang.String, int, java.lang.String, java.lang.String, java.lang.String)":"android.app.appopsmanager.startop（java.lang.string，int，java.lang.string，java.lang.string，java.lang.string）\r\n","Postpone the entering activity transition when Activity was started with\n            ":"开始活动时，将进入活动转变推迟\r\n            \r\n","\n      Managed peer is replaceable.\n    ":"\r\n      托管同行是可以替换的。\r\n    \r\n"," that will handle switching to and from this tab.":" 这将处理从此选项卡进行切换。\r\n","Specify the name of a user ID that will be shared between multiple\n         packages.":"指定将在多个之间共享的用户ID的名称\r\n         软件包。\r\n","Notification category: a specific, timely recommendation for a single thing.":"通知类别：针对单一事物的特定，及时的建议。\r\n","#INSTALLKEY_SET_USER_SELECTABLE":"#installkey_set_user_selectable\r\n","PendingIntent#FLAG_NO_CREATE":"pendingIntent＃flag_no_create\r\n","Add a new listener for changes to the fragment back stack.":"添加一个新的侦听器，以更改片段后堆栈。\r\n","android.accessibilityservice.AccessibilityService.GLOBAL_ACTION_TAKE_SCREENSHOT":"Android.AccessibilityService.Accessibilityservice.global_action_take_screenshot\r\n","Key to set visibility for applications which satisfy one of the following conditions:\n            <ul>\n            <li>Target API level below ":"为满足以下条件之一的应用程序设置可见性的关键：\r\n            <ul>\r\n            <li>下面的目标API级别\r\n","Returns the Transition that will be used to move Views in to the scene when returning due\n            to popping a back stack. -or- Sets the Transition that will be used to move Views in to the scene when returning due\n            to popping a back stack.":"返回将用于将视图转移到场景时的过渡\r\n            弹出后堆。 - 或设置将用于将视图移至场景时的过渡\r\n            弹出后堆。\r\n","Condition codes\n":"条件代码\r\n\r\n","System#currentTimeMillis\n            System.currentTimeMillis()":"系统＃CurrentTimeMillis\r\n            system.currenttimemillis（）\r\n","The user has performed a three-finger swipe down gesture on the touch screen.":"用户在触摸屏上进行了三指滑动手势。\r\n","Defines all major device class constants.":"定义所有主要设备类常数。\r\n","Contains the database name that stored the ":"包含存储的数据库名称\r\n","android.appwidget.AppWidgetProviderInfo.loadIcon(android.content.Context, int)":"android.appwidget.appwidgetProviderInfo.loadicon（android.content.context，int）\r\n","android.app.admin.DevicePolicyManager.getStorageEncryptionStatus()":"android.app.admin.devicepolicymanager.getStorageencryptionstatus（）\r\n","The user has performed a two-finger swipe down gesture on the touch screen.":"用户在触摸屏上进行了两指滑动手势。\r\n","android.app.Dialog.onCreatePanelMenu(int, android.view.Menu)":"android.app.dialog.oncreatepanelmenu（int，android.view.menu）\r\n","android.animation.TypeEvaluator.evaluate(float, java.lang.Object, java.lang.Object)":"android.animation.typeevaluator.evaluate（float，java.lang.object，java.lang.object）\r\n","android.animation.ValueAnimator.ofArgb(int[])":"android.animation.valueAnimator.ofargb（int []）\r\n","Allows an application to install packages.":"允许应用程序安装软件包。\r\n","Defines how many times the animation should repeat.":"定义动画应重复多少次。\r\n","If this activity is being destroyed because it can not handle a\n            configuration parameter being changed (and thus its\n            ":"如果这项活动被销毁，因为它无法处理\r\n            更改配置参数（因此\r\n            \r\n","Duration of the indeterminate animation.":"不确定动画的持续时间。\r\n","android.app.Activity.onCreateDialog(int)":"android.app.Activity.oncreatedialog（int）\r\n","Window animations that are applied to input method overlay windows.":"应用于输入方法覆盖窗口的窗口动画。\r\n"," and taken as a parameter of the ":" 并作为参数\r\n","android.app.Activity.onTrackballEvent(android.view.MotionEvent)":"android.app.activity.ontrackballevent（android.view.motionevent）\r\n","Return the number of entries currently in the back stack.":"返回后排堆栈中当前的条目数。\r\n","android.app.Instrumentation.callActivityOnUserLeaving(android.app.Activity)":"android.app.instrumentation.callactivityonuserleaving（android.app.Activity）\r\n","android.app.Notification.EXTRA_MEDIA_SESSION":"android.app.notification.extra_media_session\r\n","fullImage":"充分时光\r\n","Get the key used to group this notification into a cluster or stack\n            with other notifications on devices which support such rendering.":"获取用于将此通知分组到群集或堆栈中的密钥\r\n            带有支持此类渲染的设备上的其他通知。\r\n","android.bluetooth.BluetoothAdapter.isLeExtendedAdvertisingSupported()":"android.bluetooth.bluetoothadapter.isleextendendendedAdvertisUpported（）\r\n","#finish":"＃结束\r\n","android.app.appsearch.ReportUsageRequest.getNamespace()":"android.app.appsearch.reportusagerequest.getnamespace（）\r\n","android.app.admin.DevicePolicyManager.NEARBY_STREAMING_ENABLED":"android.app.admin.devicepolicymanager.nearby_streaming_enabled\r\n","Throws CanceledException if the PendingIntent\n is no longer allowing more intents to be sent through it.\n":"如果pendendIntent\r\n 不再允许通过它发送更多的意图。\r\n\r\n","android.app.admin.DevicePolicyManager.getPasswordMinimumUpperCase(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getPasswordminimumuppercase（android.content.componentname）\r\n","This is the generic \"attention\" string to be used in attention dialogs.":"这是在注意对话中使用的通用“注意”字符串。\r\n","android.app.UiModeManager.DISABLE_CAR_MODE_GO_HOME":"android.app.uimodemanager.disable_car_mode_go_home\r\n","android.app.SearchManager.SUGGEST_COLUMN_RESULT_CARD_IMAGE":"android.app.searchmanager.suggest_column_result_card_image\r\n","#WIPE_RESET_PROTECTION_DATA":"#WIPE_RESET_PROTECTION_DATA\r\n","Get the type of grouping limit to apply, or 0 if ":"获取要申请的分组限制的类型，或0\r\n","Return a private FragmentManager for placing and managing Fragments\n            inside of this Fragment.":"返回私人碎片管理器放置和管理碎片\r\n            在这个碎片的内部。\r\n","Return the current requested orientation of the activity. -or- Change the desired orientation of this activity.":"返回活动当前要求的方向。 - 或 - 更改此活动的所需方向。\r\n","android.app.NotificationManager.EXTRA_NOTIFICATION_CHANNEL_ID":"android.app.notificationmanager.extra_notification_channel_id\r\n","OnDismissListener":"Ondismisslistener\r\n","Make the device lock immediately, as if the lock screen timeout has expired at the point of\n            this call.":"立即使设备锁定，好像锁屏幕超时已在\r\n            这个电话。\r\n","Activity#onRestoreInstanceState":"活动＃OnrestoreInstancestate\r\n","When set to true or when fillEnabled is not set to true, the animation transformation\n             is applied before the animation has started.":"设置为true或当未设置为true时，动画转换\r\n             在动画启动之前应用。\r\n","Ask that all user data be wiped.":"要求擦除所有用户数据。\r\n","The user has performed a four-finger swipe left gesture on the touch screen.":"用户在触摸屏上执行了四指滑动左手势。\r\n","Set the animated values for this object to this set of Objects.":"将此对象的动画值设置为此对象集。\r\n","android.app.slice.Slice.HINT_TITLE":"android.app.slice.slice.hint_title\r\n","android.app.admin.DevicePolicyManager.setRequiredPasswordComplexity(int)":"android.app.admin.devicepolicymanager.setrequiredpasswordcomplexity（int）\r\n","A class that represents how a persistent notification is to be presented to\n            the user using the ":"一个代表如何向持续通知提交的课程\r\n            用户使用\r\n","Get the stored value for this characteristic.":"获取此特征的存储值。\r\n"," if the default launcher supports\n            ":" 如果默认启动器支持\r\n            \r\n","android.accessibilityservice.GestureDescription.getDisplayId()":"Android.AccessibilityService.gestruestescription.getDisplayid（）\r\n","android.app.ExpandableListActivity.setSelectedChild(int, int, boolean)":"Android.App.ExpandableListactivity.SetSeledectedChild（INT，INT，Boolean）\r\n","android.app.FragmentController.dispatchMultiWindowModeChanged(boolean)":"Android.App.FragmentController.disPatchMultiWindowModechanged（boolean）\r\n","android.app.ActionBar.setBackgroundDrawable(android.graphics.drawable.Drawable)":"android.app.actionbar.setbackground Drawable（android.graphics.drawable.drawable）\r\n","android.accessibilityservice.AccessibilityService.GESTURE_2_FINGER_SWIPE_LEFT":"Android.AccessibilityService.Accessibilityservice.gesture_2_finger_swipe_left\r\n","Info":"信息\r\n","Additional flags as specified in\n             ":"按照指定的其他标志\r\n             \r\n","android.animation.Animator.removeAllListeners()":"android.animation.animator.removealllisteners（）\r\n","Called when activity start-up is complete (after ":"当活动启动完成时调用（之后\r\n","android.app.AlarmManager.setAndAllowWhileIdle(int, long, android.app.PendingIntent)":"android.app.alarmmanager.setandallowwhileidle（int，long，android.app.pendendintent）\r\n","android.app.NotificationManager.IMPORTANCE_MAX":"android.app.notificationmanager.importance_max\r\n","Write external storage.":"写外部存储。\r\n","Indicates that cryptographic functionality self test has completed.":"表明密码功能自我测试已完成。\r\n","android.app.admin.DevicePolicyManager.getMaximumTimeToLock(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getMaximumTimetOlock（android.content.componentname）\r\n","Return the total bytes used by all image files in the shared/external\n            storage hosted on this volume.":"返回共享/外部所有图像文件使用的总字节\r\n            存储在此卷上。\r\n","android.bluetooth.BluetoothAdapter.ACTION_CONNECTION_STATE_CHANGED":"android.bluetooth.bluetoothadapter.action_connection_state_changed\r\n","android.app.Fragment.setSharedElementReturnTransition(android.transition.Transition)":"Android.App.Fragment.SetSharedElementReturntransition（Android.transition.transition）\r\n","Add an action (with a corresponding title and intent) to this notification.":"在此通知中添加一个操作（具有相应的标题和意图）。\r\n","Called as part of the activity lifecycle when an activity is about to go\n            into the background as the result of user choice.":"当活动即将进行时，称为活动生命周期的一部分\r\n            作为用户选择的结果进入背景。\r\n","Adds an account directly to the AccountManager.":"将帐户直接添加到帐户管理器。\r\n","Deletes the given notification channel group, and all notification channels that\n            belong to it.":"删除给定的通知渠道组，以及所有通知渠道\r\n            属于它。\r\n","android.app.admin.DeviceAdminReceiver.onUserAdded(android.content.Context, android.content.Intent, android.os.UserHandle)":"android.app.admin.deviceadminreceiver.onuseradded（android.content.context，android.content.intent，android.os.userhandle）\r\n","Return a new TaskStackBuilder for launching a fresh task stack consisting\n            of a series of activities.":"返回一个新的TaskStackBuilder，用于启动新的任务堆栈，以\r\n            一系列活动。\r\n","Denotes braille feedback.":"表示盲文反馈。\r\n","Allows an application to open, close, or disable the status bar\n         and its icons.":"允许应用程序打开，关闭或禁用状态栏\r\n         及其图标。\r\n","android.bluetooth.BluetoothGatt.getDevice()":"android.bluetooth.bluetoothgatt.getDevice（）\r\n",",\n             set when a view is enabled.":"，，，，\r\n             启用视图时设置。\r\n","The default theme for apps that target API level 14 and higher.":"针对API 14及更高级别的应用程序的默认主题。\r\n","The duration (in milliseconds) of a short animation.":"短动画的持续时间（以毫秒为单位）。\r\n","android.app.Activity.dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])":"android.app.activity.dump（java.lang.string，java.io.filedescriptor，java.io.printwriter，java.lang.string []）\r\n","android.app.admin.DeviceAdminInfo.USES_POLICY_LIMIT_PASSWORD":"android.app.admin.deviceadmininfo.uses_policy_limit_password\r\n","Called by a device owner or a profile owner of an organization-owned managed profile to\n            determine whether the user is prevented from modifying networks configured by the admin.":"由设备所有者或组织拥有的托管资料的个人资料所有者拨打\r\n            确定是否阻止用户修改管理员配置的网络。\r\n","android.app.appsearch.SearchResult.getMatchInfos()":"android.app.appsearch.searchresult.getMatchinfos（）\r\n","android.app.AppOpsManager.OPSTR_ANSWER_PHONE_CALLS":"android.app.appopsmanager.opptr_answer_phone_calls\r\n","android.app.usage.EventStats.getFirstTimeStamp()":"android.app.usage.eventstats.getFirstTimestamp（）\r\n","Returns the opaque ":"返回不透明\r\n","When bringing an existing task to the foreground, this is the\n              animation that is run on the current foreground activity\n              (which is exiting the screen).":"当将现有任务带到前景时，这就是\r\n              在当前前景活动上运行的动画\r\n              （正在退出屏幕）。\r\n","Value of ":"的价值\r\n","The app has consumed all of its current quota.":"该应用程序已经消耗了所有当前配额。\r\n","android.app.AppComponentFactory.instantiateApplication(java.lang.ClassLoader, java.lang.String)":"android.app.appcomponentfactory.instantiateapplication（java.lang.classloader，java.lang.string）\r\n","Encapsulates a request to index documents into an ":"将索引文档索引的请求封装到一个\r\n","android.app.slice.SliceProvider.onGetSliceDescendants(android.net.Uri)":"android.app.slice.sliceprovider.ongetslicedescendants（android.net.uri）\r\n","android.app.GameManager.GAME_MODE_BATTERY":"android.app.gamemanager.game_mode_battery\r\n","android.animation.AnimatorSet.setInterpolator(android.animation.TimeInterpolator)":"android.animation.animatorset.setInterpolator（android.animation.timeinterpolator）\r\n","\n          Whether the application should be terminated after its settings have\n          been restored during a full-system restore operation.\n        ":"\r\n          该申请是否应在其设置之后终止\r\n          在全系统还原操作中恢复。\r\n        \r\n","BluetoothGatt#GATT_SUCCESS":"Bluetoothgatt＃gatt_success\r\n","Sets the current notification interruption filter.":"设置当前的通知中断过滤器。\r\n","android.bluetooth.BluetoothAdapter.getScanMode()":"android.bluetooth.bluetoothadapter.getScanmode（）\r\n","android.app.SearchManager.APP_DATA":"android.app.searchmanager.app_data\r\n","android.app.Instrumentation.addMonitor(android.app.ActivityMonitor)":"android.app.instrumentation.addmonitor（android.app.activityMonitor）\r\n","The key of another Preference that this Preference will depend on.":"此偏好将取决于另一个偏好的关键。\r\n","Sets which system features are enabled when the device runs in lock task mode.":"设置设备以锁定任务模式运行时启用哪些系统功能。\r\n"," used to create this notification.":" 用于创建此通知。\r\n","Return the arguments supplied to ":"退还提供的论点\r\n","\n          If the type is following the typical ":"\r\n          如果类型遵循典型的\r\n","RecentTaskInfo":"最近的Taskinfo\r\n","Returns an URI that specifies a link for further context about this wallpaper.":"返回一个URI，该URI指定有关此墙纸的进一步上下文的链接。\r\n","The id of the child radio button that should be checked by default\n             within this radio group.":"默认情况下应检查的子收音机按钮的ID\r\n             在这个无线电组中。\r\n","android.app.job.JobParameters.getTriggeredContentAuthorities()":"android.app.job.jobparameters.getTriggeredContentauthorities（）\r\n","Intent#fillIn\n            Intent.fillIn()":"意图＃填充\r\n            intent.fillin（）\r\n","android.app.Notification.getContextualActions()":"android.app.notification.getContextualactions（）\r\n","Called when a system error occurs.":"当系统错误发生时调用。\r\n","android.app.FragmentHostCallback.onGetLayoutInflater()":"Android.App.FragmentHostCallback.ongetlayoutinflater（）\r\n","android.app.WallpaperManager.FLAG_SYSTEM":"android.app.wallpapermanager.flag_system\r\n","Sets the values to animate between for this animation.":"设置为此动画之间动画的值。\r\n","android.app.SharedElementCallback.onCreateSnapshotView(android.content.Context, android.os.Parcelable)":"android.app.sharedelementcallback.oncreatesnapshotview（android.content.context，android.os.os.parcelable）\r\n","\n          A user-readable label for the service.\n        ":"该服务的用户可读标签。\r\n        \r\n","Activity#startActivityForResult(Intent, int, Bundle)":"活动＃startActivityForresult（意图，int，捆绑包）\r\n","Constructs a Notification object with the information needed to\n            have a status bar icon without the standard expanded view.":"构建一个通知对象，并具有所需的信息\r\n            拥有一个状态栏图标，没有标准扩展的视图。\r\n","android.app.Dialog.setVolumeControlStream(int)":"android.app.dialog.setVolumecontrolstream（int）\r\n","F:Android.App.UiAutomation.SetRotation":"F：android.app.uiautomation.setrotation\r\n","Place a shadow of the specified color behind the text.":"将指定颜色的阴影放在文本后面。\r\n","android.animation.ValueAnimator.getCurrentPlayTime()":"android.animation.valueAnimator.getCurrentPlayTime（）\r\n","Specify some extra information for the widget provider.":"为小部件提供商指定一些额外信息。\r\n"," is notified.":" 已通知。\r\n","Indicates that nearby streaming is not controlled by policy, which means nearby streaming is\n            allowed.":"表明附近的流媒体不受政策的控制，这意味着附近的流媒体是\r\n            允许。\r\n","Run the backup process on each of the configured handlers.":"在每个配置的处理程序上运行备份过程。\r\n","Return the defining kernel user identifier, maybe different from ":"返回定义内核用户标识符，也许不同于\r\n","android.app.Activity.setTurnScreenOn(boolean)":"android.app.activity.setturnscreenon（布尔）\r\n","android.app.UiAutomation.ROTATION_FREEZE_90":"android.app.uiautomation.rotation_freeze_90\r\n","Inverse ProgressBar style.":"逆进度栏样式。\r\n","android.appwidget.AppWidgetProviderInfo.minHeight":"android.appwidget.appwidgetProviderInfo.minheight\r\n","Return the remaining quota size for acquiring a lease (in bytes) which indicates the\n            remaining amount of data that an app can acquire a lease on before the System starts\n            rejecting lease requests.":"返回获取租赁（字节）的剩余配额规模，该租约表示指示\r\n            应用程序可以在系统启动之前获得租赁的剩余数据\r\n            拒绝租赁请求。\r\n","This enum provides the same keycode values as can be found in\n        ":"该枚举提供了与在\r\n        \r\n","Drawable to use for generic vertical dividers.":"可用于通用垂直分隔线。\r\n","android.app.Application":"Android.App.Application\r\n","android.app.ApplicationErrorReport.getErrorReportReceiver(android.content.pm.PackageManager, java.lang.String, java.lang.String)":"android.app.ApplicationErrreport.getErrorrePorporTreceiver（android.content.pm.packagemanager，java.lang.string，java.lang.string）\r\n","Set the local destination for the downloaded file.":"设置下载文件的本地目的地。\r\n","android.accessibilityservice.AccessibilityService.ERROR_TAKE_SCREENSHOT_INTERNAL_ERROR":"Android.AccessibilityService.AccessibilityService.Error_take_screenshot_internal_error\r\n","Allows an application to write to external storage.":"允许应用程序写入外部存储。\r\n","android.app.admin.SecurityLog.TAG_PASSWORD_COMPLEXITY_REQUIRED":"android.app.admin.securitylog.tag_password_complexity_required\r\n","Reference to a style for the Action Bar \n         ":"参考动作栏的样式\r\n         \r\n","\n            whose calls act on the parent profile.":"\r\n            其呼叫在父个人资料上行动。\r\n","android.app.Instrumentation.newApplication(java.lang.Class, android.content.Context)":"android.app.instrumentation.newapplication（java.lang.class，android.content.context）\r\n","Parcelable.":"可穿衣。\r\n"," when the requested destination file already exists (the\n            download manager will not overwrite an existing file).":" 当请求的目标文件已经存在时（\r\n            下载管理器不会覆盖现有文件）。\r\n","Returns the Transition that will be used to move Views into the initial scene. -or- Sets the Transition that will be used to move Views into the initial scene.":"返回将用于将视图移动到初始场景的过渡。 - 或设置将用于将视图移动到初始场景的过渡。\r\n","Lets all Fragments managed by the controller's FragmentManager know the picture-in-picture\n            mode of the activity changed.":"让控制器的FragmentManager管理的所有片段知道图片中的图片\r\n            活动模式发生了变化。\r\n"," for the calling application.":" 用于调用申请。\r\n","android.app.DialogFragment.setStyle(int, int)":"android.app.dialogfragment.setstyle（int，int）\r\n","Called when a ":"何时呼唤\r\n"," when the download is paused because some network error\n            occurred and the download manager is waiting before retrying the request.":" 当下载暂停时，因为某些网络错误\r\n            发生，下载管理器正在等待，然后再重试请求。\r\n","android.app.Activity.finishFromChild(android.app.Activity)":"android.app.activity.finishfromchild（android.app.Activity）\r\n","Value of COLUMN_ERROR_CODE when the download has completed with an error that doesn't fit\n            under any other error code.":"column_error_code的值当下载完成时，错误\r\n            在任何其他错误代码下。\r\n","reason":"原因\r\n","android.app.job.JobService":"android.app.job.jobservice\r\n","Indicates that the Android OS has started.":"表示Android OS已经启动。\r\n","Builder#setShowWhen(boolean)":"建造者＃setShowwhen（布尔值）\r\n","android.animation.ObjectAnimator.ofFloat(java.lang.Object, android.util.Property, float[])":"android.animation.ObjectAnimator.Offloat（java.lang.Object，android.util.property，float []）\r\n","scale of the view in the y direction.":"沿y方向的视图比例。\r\n",",\n             set when a view or its parent has been \"activated\" meaning the user has currently\n             marked it as being of interest.":"，，，，\r\n             当“激活”视图或其父时设置，这意味着用户当前\r\n             将其标记为感兴趣的。\r\n","android.accessibilityservice.AccessibilityGestureEvent.describeContents()":"android.accosconibilityservice.Accessibility gestureevent.describectents（）\r\n"," is coming up, prior to other pre-resume callbacks\n            such as ":" 即将到来，在其他清点预回调之前\r\n            如\r\n","The resource id of the initial layout for this AppWidget.":"此AppWidget的初始布局的资源ID。\r\n","android.app.ActionBar.setLogo(int)":"android.app.actionbar.setlogo（int）\r\n","Sets the padding, in pixels, of the left edge; see ":"将填充物设置为左边缘的填充；看\r\n","android.accessibilityservice.AccessibilityService.GESTURE_4_FINGER_TRIPLE_TAP":"Android.AccessibilityService.Accessibilityservice.gesture_4_finger_triple_tap\r\n","The base intent of the task (generally the intent that launched the task).":"任务的基本意图（通常是启动任务的意图）。\r\n","FragmentBreadCrumbs":"片段\r\n","Called when the fragment is no longer attached to its activity.":"当片段不再附着在其活动上时称呼。\r\n","android.app.NotificationManager.cancel(java.lang.String, int)":"android.app.notificationmanager.cancel（java.lang.string，int）\r\n","android.appwidget.AppWidgetHostView.resetColorResources()":"android.appwidget.appwidgethostview.ResetColorResources（）\r\n","Sets the current time.":"设置当前时间。\r\n","Gets the user profile in which the provider resides.":"获取提供商居住的用户配置文件。\r\n","JobInfo#NETWORK_BYTES_UNKNOWN":"JobInfo＃Network_bytes_unknown\r\n","Set the alert sound to play, along with sound attributes to use during playback.":"将警报声音设置为播放，以及在播放期间使用的声音属性。\r\n","android.app.Activity.runOnUiThread(java.lang.Runnable)":"android.app.activity.runonuithread（java.lang.runnable）\r\n"," \n The first year (inclusive), for example \"1940\".":" \r\n 第一年（包括），例如“ 1940”。\r\n","android.animation.ObjectAnimator.ofArgb(java.lang.Object, android.util.Property, int[])":"android.animation.ObjectAnimator.ofargb（java.lang.object，android.util.property，int []）\r\n","#DEVICE_TYPE_DUAL":"#device_type_dual\r\n","android.app.KeyguardManager.requestDismissKeyguard(android.app.Activity, android.app.KeyguardDismissCallback)":"android.app.keyguardmanager.requestdismisskeyguard（android.app.activity，android.app.keyguarddismisscallback）\r\n","android.service.notification.NotificationListenerService":"Android.Service.Notification.NotificationListenerService\r\n"," property (which is usually the case on the first\n             request), the ":" 财产（通常是第一个情况\r\n             请求），\r\n",", and set whether the key is available for the user\n            to choose in the certificate selection prompt:\n            <ul>\n               <li>Device owner</li>\n               <li>Profile owner</li>\n               <li>Delegated certificate installer</li>\n               <li>Credential management app</li>\n            </ul>":"，并设置键是否适用于用户\r\n            在证书选择提示中选择：\r\n            <ul>\r\n               <li>设备所有者</li>\r\n               <li>个人资料所有者</li>\r\n               <li>委派证书安装程序</li>\r\n               <li>凭证管理应用程序</li>\r\n            </ul>\r\n","Callback for receiving an ":"收到的回调\r\n","android.app.TaskStackBuilder":"Android.App.TaskStackBuilder\r\n"," is resumed.":" 恢复。\r\n","android.app.ActivityManager.getProcessesInErrorState()":"android.app.activityManager.getProcessEnerRortate（）\r\n","Supply a public version of the notification.":"提供通知的公共版本。\r\n","rotation of the view, in degrees.":"视图的旋转，以度为单位。\r\n","android.app.Activity.setResult(int)":"android.app.activity.setResult（int）\r\n","android.bluetooth.BluetoothGatt.GATT_SUCCESS":"android.bluetooth.bluetoothgatt.gatt_success\r\n","android.animation.AnimatorSet.reverse()":"android.animation.animatortatorset.reverse（）\r\n","Called in response to the ":"响应\r\n","Dump the report to a Printer.":"将报告转换到打印机。\r\n","A bundle extra (int) that contains the lower bound on the current height, in dips, of a\n            widget instance.":"捆绑额外的（int），该（int）包含在当前高度上的下限，倾角，\r\n            小部件实例。\r\n","android.app.backup.BackupAgent.onRestore(android.app.backup.BackupDataInput, long, android.os.ParcelFileDescriptor)":"android.app.backup.backUpagent.Onrestore（android.app.backup.backup.backupdatainput，long，android.os.parcelfiledScriptor）\r\n","Called when the Fragment's activity changes from fullscreen mode to multi-window mode and\n            visa-versa.":"当片段的活动从全屏模式变为多窗口模式时，调用\r\n            反之亦然。\r\n","Retrieves the next page of ":"检索下一页\r\n","Cancel the specified job.":"取消指定的工作。\r\n","When set to true, tells GridLayout to use default margins when none are specified\n        in a view's layout parameters.":"设置为true时，请告诉Gridlayout在指定未指定时使用默认边距\r\n        在视图的布局参数中。\r\n","#onResume":"#onresume\r\n","ApplicationExitInfo":"ApplicationExitInfo\r\n","android.app.Activity.registerActivityLifecycleCallbacks(android.app.ActivityLifecycleCallbacks)":"android.app.Activity.RegisterivityLifecyClecallbacks（android.app.activityLifecyClecallbacks）\r\n","Returns the time at which this status started":"返回该状态开始的时间\r\n","#REVERSE":"＃撤销\r\n","android.widget.Chronometer":"android.widget.Chronometer\r\n","android.bluetooth.BluetoothGattCharacteristic.getValue()":"android.bluetooth.bluetoothgattcharacteristic.getValue（）\r\n","android.accessibilityservice.AccessibilityServiceInfo.FLAG_ENABLE_ACCESSIBILITY_VOLUME":"Android.AccessibilityService.Accessibilityserviceinfo.flag_enable_accessibility_volume\r\n","Change the current system wallpaper to a specific byte stream.":"将当前的系统壁纸更改为特定的字节流。\r\n","Return the free space on the requested storage volume.":"返回请求的存储量的可用空间。\r\n",": don't include\n a title area.":"：不要包括\r\n 标题区域。\r\n","eventOut":"EventOut\r\n","Message":"信息\r\n","\n                key preview background.":"\r\n                密钥预览背景。\r\n","A user-legible name for the given item.":"给定项目的用户词语名称。\r\n","DeviceDefault theme for windows that want to have the user's selected wallpaper appear\n    behind them.":"Windows的Devicedefault主题，希望出现用户选择的壁纸\r\n    在他们后面。\r\n","android.app.ListFragment.setEmptyText(java.lang.CharSequence)":"android.app.listFragment.SetEmptyText（Java.lang.CharSequence）\r\n","android.app.appsearch.SearchSpec.getResultGroupingLimit()":"android.app.appsearch.searchspec.getResultGroupingLimit（）\r\n","//meta-data":"// meta-data\r\n"," to be hit.":" 被击中。\r\n","For the specified values of ":"对于指定的值\r\n","android.app.admin.DevicePolicyManager.getKeepUninstalledPackages(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getkeepnekuninstalledpackages（android.content.componentname）\r\n","android.app.Activity.getParent()":"android.app.activity.getParent（）\r\n","android.bluetooth.BluetoothClass.getDeviceClass()":"android.bluetooth.bluetoothclass.getdeviceclass（）\r\n","Called by a device owner to specify the user session start message.":"设备所有者打电话给用户会话开始消息。\r\n","Acceleration curve matching Flash's quadratic ease in function.":"加速曲线匹配Flash的二次功能。\r\n","Returns the ranking strategy.":"返回排名策略。\r\n","android.app.Notification.PRIORITY_MIN":"android.app.notification.priority_min\r\n","Indicates a failure to validate X.":"表示未能验证X。\r\n","android.bluetooth.BluetoothDevice.EXTRA_BOND_STATE":"android.bluetooth.bluetoothdevice.extra_bond_state\r\n","Return the intent that started this activity. -or- Change the intent returned by ":"返回开始此活动的意图。 - 或 - 更改返回的意图\r\n","Defines the height of each row.":"定义每一行的高度。\r\n","android.app.DownloadManager.getMimeTypeForDownloadedFile(long)":"android.app.downloadmanager.getmimetypefordownloadedfile（long）\r\n","Variant of the DeviceDefault (light) theme that has a solid (opaque) action bar with an\n    inverse color profile.":"Devicedefault（Light）主题的变体，其具有固体（不透明）的动作栏\r\n    逆颜色轮廓。\r\n","Returns the name of the current process.":"返回当前过程的名称。\r\n","android.app.DownloadManager.STATUS_PAUSED":"android.app.downloadmanager.status_paused\r\n","android.app.Activity.removeDialog(int)":"android.app.Activity.remavedialog（int）\r\n","double[]":"双倍的[]\r\n","Represents a set of parameters used to initialize and update an Activity in picture-in-picture\n            mode.":"代表一组用于初始化和更新图片中的活动的参数\r\n            模式。\r\n","\n            The property is never set by AndroidClientHandler.\n            ":"\r\n            该属性永远不会由AndroidClientHandler设置。\r\n            \r\n","AppOpsManager.OnOpNotedCallback":"AppOpsManager.OnopnotedCallback\r\n"," objects that are bonded\n            (paired) to the local adapter.":" 绑定的物体\r\n            （配对）到本地适配器。\r\n","Returns the description for this activity.":"返回此活动的描述。\r\n","android.app.Service.stopSelfResult(int)":"Android.App.Service.StopSeldResult（INT）\r\n","#getAuthToken getAuthToken()":"#getauthtoken getauthtoken（）\r\n","android.app.backup.SharedPreferencesBackupHelper.performBackup(android.os.ParcelFileDescriptor, android.app.backup.BackupDataOutput, android.os.ParcelFileDescriptor)":"android.app.backup.sharedpreferencesbackuphelper.performbackup（android.os.parcelfiledScriptor，android.app.backup.backup.backup.backup.backup.backup.autput，android.os.parcelfiledescriptor）\r\n","android.app.AlarmManager.set(int, long, android.app.PendingIntent)":"android.app.alarmmanager.set（int，long，android.app.pendingIntent）\r\n","Title for error alert when a video cannot be played.  it can be used by any app.":"当无法播放视频时，标题是错误警报。任何应用都可以使用它。\r\n","#setWebUri(android.net.Uri)":"#setweburi（android.net.uri）\r\n","android.app.slice.SliceItem.hasHint(java.lang.String)":"android.app.slice.sliceitem.hashint（java.lang.string）\r\n","An intent extra to pass to the AppWidget picker containing a ":"一个额外的意图传递给包含一个的AppWidget选择器\r\n","Boolean extra data key for ":"布尔值额外的数据密钥\r\n","Get the base intent to use when running\n            ":"运行时获得基本意图\r\n            \r\n","#POLICY_DISABLE_SCREEN_CAPTURE":"#policy_disable_screen_capture\r\n","Returns the image for this activity.":"返回此活动的图像。\r\n","When set to true, the selector will be drawn over the selected item.":"设置为true时，将在选定的项目上绘制选择器。\r\n","android.app.NotificationManager.cancelAsPackage(java.lang.String, java.lang.String, int)":"android.app.notificationmanager.cancelaspackage（java.lang.string，java.lang.string，int）\r\n","AttestedKeyPair":"ActestedKeypair\r\n","android.app.ActivityManager.addAppTask(android.app.Activity, android.content.Intent, android.app.TaskDescription, android.graphics.Bitmap)":"android.app.ActivityManager.addapptask（android.app.activity，android.content.intent，android.app.taskDescription，android.graphics.bitmap）\r\n","android.app.FragmentController.dispatchResume()":"android.app.fragmentController.disPatchResume（）\r\n","android.app.appsearch.SearchSpec.getResultGroupingTypeFlags()":"android.app.appsearch.searchspec.getResultGroupingTypeflags（）\r\n","Broadcast Action: Indicates the alias of a remote device has been\n            changed.":"广播动作：指示远程设备的别名是\r\n            更改。\r\n","android.app.ApplicationErrorReport.TYPE_RUNNING_SERVICE":"android.app.ApplicationErroreport.type_running_service\r\n","Change whether a user can uninstall a package.":"更改用户是否可以卸载软件包。\r\n","Checks that the user knows the credentials of an account.":"检查用户是否知道帐户的凭据。\r\n","This hook is called to launch the search UI.":"该挂钩被称为启动搜索UI。\r\n","android.app.ActivityOptions":"Android.App.ActivityOptions\r\n","The user has performed a three-finger swipe up gesture on the touch screen.":"用户在触摸屏上进行了三指滑动手势。\r\n","Indicates that a cryptographic key was generated.":"表示生成了加密密钥。\r\n","Display":"展示\r\n","Create a new PendingIntent object which you can hand to others\n            for them to use to send result data back to your\n            ":"创建一个新的悬浮对象，您可以将其交给他人\r\n            让他们用来将结果数据发送回您\r\n            \r\n","Sets the Enterprise ID for the work profile or managed device.":"为工作配置文件或托管设备设置企业ID。\r\n","Turn off the local Bluetooth adapter&mdash;do not use without explicit\n            user action to turn off Bluetooth.":"关闭本地蓝牙适配器＆mdash;如果不明确使用\r\n            用户操作以关闭蓝牙。\r\n","android.app.SearchableInfo.getSuggestIntentData()":"android.app.searchableInfo.getSuggestintentData（）\r\n","Notifies the Activity that an action mode has been started.":"通知活动已经开始采取动作模式。\r\n","android.app.admin.DeviceAdminInfo.USES_POLICY_FORCE_LOCK":"android.app.admin.deviceadmininfo.uses_policy_force_lock\r\n","Action to show Launcher's all apps.":"行动以显示启动器的所有应用程序。\r\n","TakeScreenshotCallback":"TakeCreensHotCallback\r\n","ConnectivityManager#TYPE_WIFI":"ConnectitiveManager＃type_wifi\r\n","android.bluetooth.BluetoothGatt.CONNECTION_PRIORITY_LOW_POWER":"android.bluetooth.bluetoothgatt.connection_priority_low_power\r\n","Slice":"片\r\n","android.app.NotificationChannelGroup.setDescription(java.lang.String)":"Android.App.NotificationChannelGroup.setDescription（Java.lang.String）\r\n","android.app.ActivityOptions.makeBasic()":"android.app.activityOptions.makebasic（）\r\n","A2DP sink device is streaming music. ":"A2DP接收器设备正在流媒体音乐。\r\n","A bundle extra (":"捆绑额外（\r\n","#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_LOCATION":"#Extra_Provisioning_device_admin_package_download_location\r\n","#STYLE_NORMAL":"#Style_Normal\r\n","android.app.UiAutomation.findFocus(int)":"android.app.uiautomation.findfocus（int）\r\n","Get the ExpandableListAdapter associated with this activity's\n            ExpandableListView.":"获取与此活动相关联的扩展空白列\r\n            ExpanbableListView。\r\n","adb push":"ADB推\r\n","Called when the current ":"当电流时调用\r\n","ListView":"列表显示\r\n","\n            with no options.":"\r\n            没有选择。\r\n","android.app.Notification.hasImage()":"android.app.notification.hasimage（）\r\n","Color of link text (URLs).":"链接文本的颜色（URL）。\r\n","#ACTION_PROVISION_MANAGED_PROFILE":"#action_provision_managed_profile\r\n","Sets information describing the task with this activity for presentation inside the Recents\n            System UI.":"设置用此活动描述任务的信息\r\n            系统UI。\r\n","Not set up for a transition.":"没有设置过渡。\r\n","Activity#onResume":"活动＃on Resume\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_PROXY_HOST":"android.app.admin.devicepolicymanager.extra_provisioning_wifi_proxy_host\r\n","android.appwidget.AppWidgetProviderInfo.previewImage":"android.appwidget.appwidgetProviderInfo.previewImage\r\n","#popBackStack(int, int)":"#popbackstack（int，int）\r\n","Build a new ":"建立一个新的\r\n","Returns maximum size, in bytes, of downloads that may go over a mobile connection; or null if\n            there's no limit":"返回可能通过移动连接的下载的最大尺寸；或null如果\r\n            没有限制\r\n","Description of the task's current state.":"任务当前状态的描述。\r\n","android.accounts.AbstractAccountAuthenticator.startUpdateCredentialsSession(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String, android.os.Bundle)":"android.accounts.abstractaccountauthenticator.startupdatecredentialssessession（android.accounts.accountauthenticatorestorestorspesse，android.accounts.accounts.accounts.accounts.accounts.account，java.lang.lang.string，android.os.os.bundle）\r\n","A type of policy that this device admin can use: force the user to\n            change their password after an administrator-defined time limit.":"此设备管理员可以使用的一种策略：迫使用户进入\r\n            在管理员定义的时间限制之后更改密码。\r\n","Puts the activity in picture-in-picture mode if possible in the current system state.":"如果可能的话，将活动放在图片中的模式中。\r\n","Default style for spinner drop down items.":"Spinner下拉物品的默认样式。\r\n","android.app.admin.DevicePolicyManager.isUsingUnifiedPassword(android.content.ComponentName)":"android.app.admin.devicepolicymanager.isusingunifiedpassword（android.content.componentname）\r\n","A report from a user to a developer about a running service that the\n user doesn't think should be running.":"用户向开发人员的报告，涉及运行服务\r\n 用户认为不应该运行。\r\n","android.app.UiModeManager.ENABLE_CAR_MODE_ALLOW_SLEEP":"android.app.uimodemanager.enable_car_mode_allow_sleep\r\n","Dump a BatteryInfo instance to a Printer.":"将Batteriinfo实例倒入打印机。\r\n","Report that an application is no longer performing an operation that had previously\n            been started with ":"报告应用程序不再执行以前的操作\r\n            开始\r\n","CharSequence":"魅力\r\n","\n            Configure the ":"\r\n            配置\r\n","android.app.DownloadManager.COLUMN_ID":"android.app.downloadmanager.column_id\r\n","android.app.admin.DevicePolicyManager.requestBugreport(android.content.ComponentName)":"android.app.admin.devicepolicymanager.requestbugreport（android.content.componentname）\r\n","android.app.Activity.onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)":"android.app.activity.oncrotethumbnail（android.graphics.bitmap，android.graphics.canvas）\r\n","Cancel a currently active PendingIntent.":"取消当前活跃的悬念。\r\n","The ComponentName of the administrator component.":"管理员组件的组件名。\r\n","The user has performed a right and up gesture on the touch screen.":"用户在触摸屏上执行了正确的手势。\r\n","android.app.KeyguardManager.newKeyguardLock(java.lang.String)":"android.app.keyguardmanager.newkeyguardlock（java.lang.string）\r\n","android.accessibilityservice.AccessibilityServiceInfo.CREATOR":"Android.AccosconibilityService.AccessibilityServiceInfo.Creator\r\n","Theme to use for alert dialogs spawned from this theme.":"该主题产生的警报对话的主题。\r\n","android.app.WallpaperManager.WALLPAPER_PREVIEW_META_DATA":"android.app.wallpapermanager.wallpaper_preview_meta_data\r\n","Returns a bundle with the counts for various binder counts for this process.":"返回一个捆绑包，用于此过程的各种粘合剂计数。\r\n"," is committed with\n            ":" 致力于\r\n            \r\n","android.app.admin.DevicePolicyManager.getPasswordMaximumLength(int)":"android.app.admin.devicepolicymanager.getPasswordmaximumlength（int）\r\n","#STYLE_NO_INPUT":"#Style_no_input\r\n"," when the download is waiting to start.":" 下载等待开始时。\r\n","android.app.Activity.getVolumeControlStream()":"android.app.activity.getVolumeControlstream（）\r\n","Used for permissions that provide access to the user's social connections,\n         such as contacts, call logs, social stream, etc.":"用于提供对用户社交联系的权限，\r\n         例如联系人，呼叫日志，社交流等。\r\n","Package name of the application.":"应用程序的包名称。\r\n","android.app.backup.BackupAgentHelper BackupAgentHelper":"android.app.backup.backupagenterper backupagenthelper\r\n","android.bluetooth.BluetoothGatt.readRemoteRssi()":"android.bluetooth.bluetoothgatt.readremoterssi（）\r\n","android.app.admin.DevicePolicyManager.addCrossProfileIntentFilter(android.content.ComponentName, android.content.IntentFilter, int)":"android.app.admin.devicepolicymanager.addcrossprofileintentfilter（android.content.componentname，android.content.intentfilter，int）\r\n","Allows an application to read the user dictionary.":"允许应用程序读取用户字典。\r\n","PropertyConfig":"PropertyConfig\r\n","#NETWORK_BYTES_UNKNOWN":"#NETWORK_BYTES_UNKNOWN\r\n","\n          Whether or not the activity can move from the tasdk that started it\n          to the task it has an affinity for.\n        ":"\r\n          该活动是否可以从启动它的TASDK移动\r\n          对于任务，它具有亲和力。\r\n        \r\n","android.app.backup.BackupManager.BackupManager(android.content.Context)":"android.app.backup.backupmanager.backupmanager（android.content.context）\r\n","Gets the time for this keyframe, as a fraction of the overall animation duration. -or- Sets the time for this keyframe, as a fraction of the overall animation duration.":"将此密钥帧的时间作为整体动画持续时间的一小部分。 - 或 - 设置此密钥帧的时间，是整个动画持续时间的一小部分。\r\n","\n             The class supports pre-authentication of requests albeit in a slightly \"manual\" way. Namely, whenever a request to a server requiring authentication\n             is made and no authentication credentials are provided in the ":"\r\n             该课程支持对请求的预先验证，尽管以“手动”方式进行了认可。也就是说，每当需要身份验证的服务器的请求\r\n             是制造的，没有在\r\n","android.app.admin.DevicePolicyManager.isProfileOwnerApp(java.lang.String)":"android.app.admin.devicepolicymanager.isprofileownerapp（java.lang.string）\r\n","Set whether to display the activity logo rather than the activity icon.":"设置是否显示活动徽标而不是活动图标。\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_LOCAL_TIME":"android.app.admin.devicepolicymanager.extra_provisioning_local_time\r\n","android.accounts.AccountManager.removeAccount(android.accounts.Account, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)":"android.accounts.accountmanager.removeaccount（android.accounts.accounts.account，android.app.Activity，android.accounts.accountmanagercallback，android.os.os.handler）\r\n","android.app.Activity.startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)":"android.app.Activity.StartintentesendEnderForresult（android.content.intents，int，android.content.intent，int，int，int）\r\n","Amount of right padding inside the gradient shape.":"梯度形状内的正确填充量。\r\n","Hides an existing fragment.":"隐藏了现有的碎片。\r\n","An interpolator where the change starts backward then flings forward.":"变更后向后开始的插装器，然后向前飞行。\r\n","android.app.SearchableInfo.getVoiceLanguageModeId()":"android.app.searchableInfo.getVoiceLanguageModeId（）\r\n","The color for the dates of an unfocused month.":"未关注月份的日期的颜色。\r\n","android.app.WallpaperManager.COMMAND_SECONDARY_TAP":"android.app.wallpapermanager.command_secondary_tap\r\n","android.app.DirectAction.getExtras()":"android.app.directaction.getExtras（）\r\n","Column in data table that summarizes this data.":"数据表中的列总结了此数据。\r\n","android.appwidget.AppWidgetManager.OPTION_APPWIDGET_MAX_HEIGHT":"android.appwidget.appwidgetManager.option_appwidget_max_height\r\n","android.accounts.AccountManager.PACKAGE_NAME_KEY_LEGACY_VISIBLE":"android.accounts.accountmanager.package_name_key_legacy_visible\r\n","Returns a list of GATT services offered by the remote device.":"返回远程设备提供的GATT服务列表。\r\n","#START_STICKY_COMPATIBILITY":"#start_sticky_compatibility\r\n","#ACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED":"#action_notification_channel_group_block_state_changed\r\n","#registerActivityLifecycleCallbacks":"#RegisterActivityLifeCyClecallbacks\r\n","Show this notification in its entirety on all lockscreens.":"在所有锁屏上完整显示此通知。\r\n","android.content.DialogInterface.BUTTON2":"android.content.dialoginterface.button2\r\n","Perform the operation associated with this PendingIntent.":"执行与此悬浮物相关的操作。\r\n","Engine's report that a job has started.":"引擎的报告已经开始了。\r\n","Indicates whether the application supports larger screen form-factors.":"指示该应用程序是否支持较大的屏幕形式因子。\r\n","android.app.Notification.contentIntent":"android.app.notification.contentintent\r\n","android.appwidget.AppWidgetProviderInfo.getActivityInfo()":"android.appwidget.appwidgetProviderInfo.getActivityInfo（）\r\n","Indicates shutdown of audit logging.":"表示关闭审计记录。\r\n","#addMonitor":"#addmonitor\r\n","Indicates that a file was pushed to the device via the adb daemon, for example via\n            ":"指示文件通过ADB守护程序推到设备，例如通过\r\n            \r\n","NotificationManager#INTERRUPTION_FILTER_PRIORITY":"notificationmanager＃intruption_filter_priority\r\n","Indicates that the device has been locked, either by the user or by a timeout.":"表示该设备已由用户或超时锁定。\r\n","The interface through which an application interacts with the Android backup service to\n            request backup and restore operations.":"应用程序与Android备份服务进行交互的接口\r\n            请求备份和还原操作。\r\n","android.app.Activity.getCallingActivity()":"android.app.activity.getCallingActivity（）\r\n","Gets all accounts of given type and their visibility for specific package.":"获取给定类型的所有帐户及其对特定软件包的可见性。\r\n","android.app.Activity.startLockTask()":"android.app.activity.startlocktask（）\r\n","A timestamp related to this notification, in milliseconds since the epoch.":"与该通知有关的时间戳，自时期以来以毫秒为单位。\r\n","android.app.job.JobParameters.STOP_REASON_PREEMPT":"android.app.job.jobparameters.stop_reason_preempt\r\n","android.app.Instrumentation.callActivityOnCreate(android.app.Activity, android.os.Bundle, android.os.PersistableBundle)":"android.app.instrumentation.callactivityoncreate（android.app.activity，android.os.bundle，android.os.osistablebundle）\r\n","Returns the id of the event, where the id monotonically increases for each event.":"返回事件的ID，每个事件的ID单调增加。\r\n","Gets the animation used during one of the transition types that may run.":"获取在可能运行的过渡类型之一中使用的动画。\r\n","Return global memory state information for the calling process.":"返回调用过程的全局内存状态信息。\r\n","Defines the alignment of the text.":"定义文本的对齐。\r\n","android.app.slice.SliceItem.getAction()":"android.app.slice.sliceitem.getAction（）\r\n","android.app.admin.DevicePolicyManager.setOrganizationName(android.content.ComponentName, java.lang.CharSequence)":"android.app.admin.devicepolicymanager.setorganizationname（android.content.componentname，java.lang.charsequence）\r\n","android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_SECURE_CAMERA":"android.app.admin.devicepolicymanager.keyguard_disable_secure_camera\r\n","DragAndDropPermissions":"DragandDroppermissions\r\n","android.app.Notification.getBubbleMetadata()":"android.app.notification.getBubblemetadata（）\r\n","AT command type TEST used with\n ":"在命令类型测试中使用\r\n \r\n","android.app.Notification.EXTRA_REMOTE_INPUT_DRAFT":"android.app.notification.extra_remote_input_draft\r\n","android.app.Fragment.setAllowReturnTransitionOverlap(boolean)":"Android.App.Fragment.SetallowReturnTransitionOverLap（布尔）\r\n","android.app.job.JobParameters.getNetwork()":"android.app.job.jobparameters.getnetwork（）\r\n","android.app.AlarmManager.ACTION_NEXT_ALARM_CLOCK_CHANGED":"android.app.alarmmanager.action_next_alarm_clock_changed\r\n","android.app.Activity Activities":"Android.App.Activity活动\r\n","Minimum space between the switch and caption text \n         ":"开关和字幕文本之间的最小空间\r\n         \r\n","Returns a map from schema type to property paths to be used for projection.":"将地图从模式类型返回到用于投影的属性路径。\r\n","Called to indicate that the job has begun executing.":"打电话表明该工作已经开始执行。\r\n","android.app.TimePickerDialog.TimePickerDialog(android.content.Context, int, android.app.OnTimeSetListener, int, int, boolean)":"android.app.TimePickerDialog.TimePickerDialog（android.content.context，int，android.app.Opp.OntimesEtListener，int，int，int，boolean）\r\n","android.app.assist.AssistContent.getIntent()":"android.app.assist.assistContent.getIntent（）\r\n","Return true if the device admin has requested that it be able to use\n            the given policy control.":"如果设备管理员要求使用该设备，则返回true\r\n            给定的策略控制。\r\n"," extra field in every intent\n            broadcast by this class.":" 每个意图的额外字段\r\n            由这个课程播放。\r\n","\n            intents to request the current power state.":"\r\n            意图要求当前的电力状态。\r\n","Subtype to tag the source (i.":"亚型标记源（i。\r\n","android.app.Activity.onCreateDialog(int, android.os.Bundle)":"android.app.activity.oncreatedialog（int，android.os.bundle）\r\n","android.app.NotificationManager.IMPORTANCE_UNSPECIFIED":"android.app.notificationmanager.importance_unspecified\r\n","A screen that contains and runs multiple embedded activities.":"包含并运行多个嵌入式活动的屏幕。\r\n","Terminate search UI.":"终止搜索UI。\r\n","android.app.ProgressDialog.setProgressNumberFormat(java.lang.String)":"android.app.progressdialog.setprogressnumberformat（java.lang.string）\r\n","android.app.Instrumentation.removeMonitor(android.app.ActivityMonitor)":"android.app.instrumentation.removemonitor（android.app.activityMonitor）\r\n"," instance with flags set.":" 带有标志的实例。\r\n"," key: this is a line of summary information intended to be shown\n            alongside expanded notifications, as supplied to (e.":" 钥匙：这是旨在显示的摘要信息行\r\n            除了扩展的通知外，还提供给（e。\r\n","android.app.Fragment.getLayoutInflater()":"android.app.fragment.getlayoutinflater（）\r\n","android.app.SearchableInfo.shouldIncludeInGlobalSearch()":"android.app.searchableInfo.shouldincludeinglobalsearch（）\r\n"," if this job has been successfully scheduled.":" 如果这项工作已成功安排。\r\n","Called by a device or profile owner, or delegated certificate chooser (an app that has been\n            delegated the ":"由设备或配置文件所有者或委派证书选择器调用（已曾经是\r\n            委派\r\n","android.app.Instrumentation.checkMonitorHit(android.app.ActivityMonitor, int)":"android.app.instrumentation.checkmonitorhit（android.app.activityMonitor，int）\r\n","Constant representing that the conversation user is listening to music or other audio\n            like a podcast.":"不断表示对话用户正在听音乐或其他音频\r\n            像播客一样。\r\n","android.view.Display#INVALID_DISPLAY":"android.view.display＃invalid_display\r\n","android.bluetooth.BluetoothDevice.ACTION_ACL_DISCONNECT_REQUESTED":"android.bluetooth.bluetoothdevice.action_acl_disconnect_requested\r\n","Set the message to display.":"设置要显示的消息。\r\n","Number of bytes download so far.":"到目前为止下载字节数。\r\n","Called by device or profile owner to query whether current always-on VPN is configured in\n            lockdown mode.":"通过设备或配置文件所有者来查询当前的始终为ON vPn在\r\n            锁定模式。\r\n","android.app.NotificationManager.ACTION_INTERRUPTION_FILTER_CHANGED":"android.app.notificationmanager.action_interruption_filter_changed\r\n","android.app.LauncherActivity":"android.app.launcheractivity\r\n","\n            If the ":"\r\n            如果是\r\n","android.app.people.ConversationStatus.ACTIVITY_GAME":"android.app.people.conversationstatus.activity_game\r\n","Subtype to indicate that this is a message as part of a communication\n            sequence in this slice.":"亚型表示这是通信的一部分的消息\r\n            该切片中的序列。\r\n","android.app.admin.DevicePolicyManager.getScreenCaptureDisabled(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getScreencapturedisabled（android.content.componentname）\r\n"," to be displayed as the title to a conversation\n            represented by a ":" 作为对话的标题显示\r\n            由a表示\r\n","#onPostCreate(Bundle)":"#onpostcreate（捆绑包）\r\n","This flag requests from the system to filter key events.":"此标志从系统请求以过滤密钥事件。\r\n","android.app.Activity.onPostCreate(android.os.Bundle, android.os.PersistableBundle)":"android.app.activity.onpostcreate（android.os.bundle，android.os.os.persistablebundle）\r\n","Restrict the types of networks over which this download may proceed.":"限制该下载可能进行的网络类型。\r\n","Called when new clients have connected to the service, after it had\n            previously been notified that all had disconnected in its\n            ":"当新客户连接到服务时，请致电\r\n            以前已通知所有人都在\r\n            \r\n","Set the desired color for the indicator LED on the device, as well as the\n blink duty cycle (specified in milliseconds).":"为设备上的指示灯设置所需的颜色，以及\r\n 闪烁占空比（以毫秒为单位指定）。\r\n",": set if this service has been\n explicitly started.":"：设置该服务是否已经\r\n 明确开始。\r\n","Determines when over-the-air system updates are installed on a device.":"确定何时在设备上安装过直播系统更新。\r\n","The identity of the wifi network in ":"WiFi网络的身份\r\n","android.accessibilityservice.AccessibilityService.GESTURE_4_FINGER_DOUBLE_TAP":"Android.AccessibilityService.Accessibilityservice.gesture_4_finger_double_tap\r\n","Checks if voice search should start web search.":"检查语音搜索是否应该开始Web搜索。\r\n","The text appearance for the calendar dates.":"日历日期的文字外观。\r\n","No Ranking, results are returned in arbitrary order.":"没有排名，以任意顺序返回结果。\r\n","android.app.Notification.CATEGORY_SOCIAL":"android.app.notification.category_social\r\n","A resource id for a hierarchy of PreferenceScreen to be added to the settings page for the\n            account.":"prevenencesCreen的层次结构的资源ID将添加到设置页面\r\n            帐户。\r\n","android.app.NotificationChannel.shouldShowLights()":"android.app.notificationChannel.shouldshowlights（）\r\n","android.app.Dialog.onGenericMotionEvent(android.view.MotionEvent)":"android.app.dialog.gonenericmotionevent（android.view.motionevent）\r\n","android.app.appsearch.RemoveByDocumentIdRequest.getNamespace()":"android.app.appsearch.removebydocumentidrequest.getnamespace（）\r\n","LoaderManager":"LoaderManager\r\n","PRIVATE_DNS_SET_ERROR_HOST_NOT_SERVING":"private_dns_set_error_host_not_serving\r\n","SystemClock#uptimeMillis()":"SystemClock＃Uptimemillis（）\r\n","Gets the optional intent data for use with these suggestions.":"获取可选的意图数据以与这些建议一起使用。\r\n","Callback interface invoked when a tab is focused, unfocused, added, or removed.":"Callback interface invoked when a tab is focused, unfocused, added, or removed.\r\n","UiAutomation#FLAG_DONT_USE_ACCESSIBILITY":"uiautomation＃flag_dont_use_accossibility\r\n","ID_TYPE_IMEI":"id_type_imei\r\n","Set to true if the system considers itself to currently be in a low\n memory situation.":"如果系统认为自己当前处于低点，则设置为true\r\n 记忆情况。\r\n","Sets whether this ViewGroup should split MotionEvents\n             to separate child views during touch event dispatch.":"设置该ViewGroup是否应拆分运动Events\r\n             在触摸事件调度中分开儿童观点。\r\n","Have the system immediately kill all background processes associated\n            with the given package.":"让系统立即杀死所有相关的背景过程\r\n            带有给定的软件包。\r\n","Descriptive text for the associated data.":"相关数据的描述性文本。\r\n","android.bluetooth.BluetoothDevice.connectGatt(android.content.Context, boolean, android.bluetooth.BluetoothGattCallback, int, int, android.os.Handler)":"android.bluetooth.bluetoothdevice.connectgatt（android.content.context，boolean，android.bluetooth.bluetooth.bluetoothgattcallback，int，int，int，android.os.handler）\r\n","#newChooseAccountIntent(Account, List, String[], String,\n            String, String[], Bundle)":"#newchooseaccountintent（帐户，列表，字符串[]，字符串，\r\n            字符串，字符串[]，捆绑包）\r\n","android.app.SearchManager.setOnDismissListener(android.content.OnDismissListener)":"android.app.searchmanager.setondismisslistener（android.content.ondismisslistener）\r\n","A fragment that displays a dialog window, floating on top of its\n activity's window.":"一个显示对话框窗口的片段，漂浮在其顶部\r\n 活动的窗口。\r\n","Defines the hint view displayed in the drop down menu.":"定义下拉菜单中显示的提示视图。\r\n","Set to true to tell the SyncManager to automatically call setIsSyncable(..., ..., 1)\n             for the SyncAdapter instead of issuaing an initialization sync to the SyncAdapter.":"设置为true告诉Syncmanager自动调用setissyncable（...，...，1）\r\n             对于SyncAdapter而不是发出初始化同步到SyncAdapter。\r\n","android.app.Dialog.dispatchKeyEvent(android.view.KeyEvent)":"android.app.dialog.dispatchKeyevent（android.view.keyevent）\r\n","A2DP sink device is NOT streaming music.":"A2DP接收器设备不是流音乐。\r\n","What the UI should display for \"Msisdn\" unless overridden by the SIM\n":"除非SIM\r\n\r\n","Sets the start delay on one of the animation objects used by this transition.":"设置此过渡使用的动画对象之一的开始延迟。\r\n","android.app.RemoteInput.getResultsFromIntent(android.content.Intent)":"android.app.remoteinput.getResultsfromintent（android.content.intent）\r\n","Layout resource for popup keyboards.":"弹出键盘的布局资源。\r\n","android.content.BroadcastReceiver BroadcastReceiver":"android.content.Broadcastreceiver Broadcastreceiver\r\n"," for configuring your activity to monitor\n search UI state.":" 用于配置您的活动以监视\r\n 搜索UI状态。\r\n","android.app.admin.DeviceAdminReceiver.onPasswordChanged(android.content.Context, android.content.Intent)":"android.app.admin.deviceadminreceiver.onpasswordchanged（android.content.context，android.content.intent）\r\n","Default theme for input methods (on API level 10 and lower), which is used by the\n         ":"输入方法的默认主题（在API级别10及较低）中，该主题由\r\n         \r\n","The maximum number of voice recognition results to return.":"返回的最大语音识别结果数。\r\n","android.app.AlertDialog.setButton(int, java.lang.CharSequence, android.content.OnClickListener)":"android.app.alertdialog.setButton（int，java.lang.charsequence，android.content.onclicklistener）\r\n","EditText background drawable.":"deDittext背景可绘制。\r\n","android.app.TaskStackBuilder.addNextIntentWithParentStack(android.content.Intent)":"android.app.taskstackbuilder.addnextintententwithwithparentstack（android.content.intent）\r\n","android.app.ProgressDialog.setProgressPercentFormat(java.text.NumberFormat)":"android.app.progressdialog.setprogresspercentformat（java.text.numberformat）\r\n","The summary for the Preference in a PreferenceActivity screen when the\n             CheckBoxPreference is unchecked.":"当偏好性屏幕中偏好的摘要\r\n             CheckboxPreference是未选中的。\r\n","android.app.admin.DevicePolicyManager.bindDeviceAdminServiceAsUser(android.content.ComponentName, android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)":"android.app.admin.devicepolicymanager.binddeviceadminserviceasuser（android.content.componentname，android.content.intent，android.content.content.content.serviceconnection\r\n","android.accessibilityservice.AccessibilityService.GESTURE_SWIPE_LEFT_AND_UP":"Android.AccessibilityService.Accessibilityservice.gesture_swipe_left_and_up\r\n","Gets the length of each of the child animations of this AnimatorSet.":"获取该动画仪的每个儿童动画的长度。\r\n","Subtype to tag an item representing priority.":"亚型标记代表优先级的项目。\r\n","to launch the dialer during default\n key handling.":"在默认值期间启动拨号器\r\n 钥匙处理。\r\n","android.app.Notification.EXTRA_BACKGROUND_IMAGE_URI":"android.app.notification.extra_background_image_uri\r\n","\n            Object lifetime control through\n            ":"\r\n            对象终生控制通过\r\n            \r\n","Disable all configurable SystemUI features during LockTask mode.":"禁用LockTask模式下的所有可配置的Systemui功能。\r\n","android.app.admin.DevicePolicyManager.setLockTaskPackages(android.content.ComponentName, java.lang.String[])":"android.app.admin.devicepolicymanager.setlocktaskpackages（android.content.componentname，java.lang.string []）\r\n","#setWallpaperOffsets(IBinder, float, float)":"#SetWallpaperoffsets（ibinder，float，float）\r\n","Specify a task name that activities have an \"affinity\" to.":"指定一个活动名称，即活动具有“亲和力”。\r\n"," of\n            the fragment has changed.":" 的\r\n            片段已经改变。\r\n","Characteristic permission: Allow encrypted read operations":"特征许可：允许加密的读取操作\r\n"," to specify that the newly created user should skip\n            the disabling of system apps during provisioning.":" 要指定新创建的用户应该跳过\r\n            在配置过程中禁用系统应用程序。\r\n"," matched the query.":" 匹配查询。\r\n","Button style to inset into an EditText.":"按钮样式插入iDittext中。\r\n","System#currentTimeMillis()":"系统＃CurrentTimeMillis（）\r\n","#ACTION_DEVICE_ADMIN_DISABLED":"#action_device_admin_disabled\r\n","Extra for the connection state intents of the individual profiles.":"对于单个配置文件的连接状态意图额外。\r\n","JobScheduler#enqueue JobScheduler.enqueue":"JobsCheduler＃inqueue jobscheduler.enqueue\r\n","An interpolator where the change bounces at the end.":"一个插值器，其中变化在末尾弹跳。\r\n",": also erase the device's eUICC data.":"：还删除设备的EUICC数据。\r\n","Sets the transcript mode for the list.":"为列表设置成绩单模式。\r\n","android.app.DownloadManager.COLUMN_LAST_MODIFIED_TIMESTAMP":"android.app.downloadmanager.column_last_modified_timestamp\r\n","android.app.AppOpsManager.OPSTR_RECORD_AUDIO":"android.app.appopsmanager.opptr_record_audio\r\n","Tertiary inverse text color, useful for inverted backgrounds.":"第三级逆文本颜色，可用于倒置背景。\r\n","android.app.Notification.EXTRA_MESSAGING_PERSON":"android.app.notification.extra_messaging_person\r\n","android.app.PictureInPictureUiState":"android.app.pictureinpictureuistate\r\n","android.app.AlarmManager.setInexactRepeating(int, long, long, android.app.PendingIntent)":"android.app.alarmmanager.setinexactrepeating（int，long，long，android.app.pendendintent）\r\n","android.animation.LayoutTransition.hideChild(android.view.ViewGroup, android.view.View, int)":"android.animation.layouttransition.hidechild（android.view.viewgroup，android.view.view，int）\r\n","This class enables automatic animations on layout changes in ViewGroup objects.":"此类启用有关ViewGroup对象的布局更改的自动动画。\r\n","Stop the current task from being locked.":"阻止当前任务被锁定。\r\n","android.app.admin.DeviceAdminReceiver.onOperationSafetyStateChanged(android.content.Context, int, boolean)":"android.app.admin.deviceadminreceiver.onoperationsafetystatatechanged（android.content.context，int，boolean）\r\n","android.app.ActivityManager.getMemoryInfo(android.app.MemoryInfo)":"android.app.activityManager.getMemoryInfo（android.app.memoryinfo）\r\n","android.app.WallpaperColors.WallpaperColors(android.graphics.Color, android.graphics.Color, android.graphics.Color)":"android.app.wallpapercolors.wallpapercolors（android.graphics.color，android.graphics.color，android.graphics.color）\r\n","android.animation.LayoutTransition.setDuration(int, long)":"android.animation.layouttransition.setDuration（int，long）\r\n","Defines the delay in milliseconds that a scrollbar waits before fade out.":"定义了毫秒的延迟，即滚动条等待，然后逐渐消失。\r\n"," collection it will have this property set to\n            ":" 收集将其设置为\r\n            \r\n","android.app.admin.DeviceAdminReceiver.onPasswordSucceeded(android.content.Context, android.content.Intent)":"android.app.admin.deviceadminreceiver.onpasswordsucceeded（android.content.context，android.content.intent）\r\n","DO NOT IMPLEMENT THIS INTERFACE.":"不要实现此接口。\r\n","s providing information about how the document in ":"提供有关文档如何中的信息\r\n","android.app.Fragment.startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int, android.os.Bundle)":"android.app.Fragment.StartintentesendEnderForresult（android.content.intentsEnder，int，android.content.intent，int，int，int，int，int，android.os.os.bundle）\r\n","Control whether the timestamp is shown in the content view.":"控制时间戳是否在内容视图中显示。\r\n","android.app.admin.DevicePolicyManager.listForegroundAffiliatedUsers()":"android.app.admin.devicepolicymanager.listforegrendForgnaffiliateUsers（）\r\n","Sets whether the horizontal progress bar in the title should be indeterminate (the circular\n            is always indeterminate).":"设置标题中的水平进度栏是否应该不确定（圆形\r\n            总是不确定的）。\r\n","android.app.admin.DevicePolicyManager.getCrossProfileWidgetProviders(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getCrossProfileWidgetProviders（android.content.componentname）\r\n","android.bluetooth.BluetoothDevice.getAddress()":"android.bluetooth.bluetoothdevice.getAddress（）\r\n","Simple version of ":"简单版本的\r\n","This class represents one of the results obtained from an AppSearch query.":"该类代表从AppSearch查询获得的结果之一。\r\n"," notification, as supplied to\n            ":" 通知，提供给\r\n            \r\n","android.app.admin.DevicePolicyManager.getKeyPairGrants(java.lang.String)":"android.app.admin.devicepolicymanager.getKeypairgrants（java.lang.string）\r\n","Acceleration curve matching a cubic ease out function.":"加速曲线匹配立方体易于函数。\r\n","#ACTION_BOND_STATE_CHANGED":"#action_bond_state_changed\r\n","android.app.usage.UsageStatsManager.queryEvents(long, long)":"android.app.usage.usagestatsmanager.queryevents（长，长）\r\n","android.app.ApplicationExitInfo.REASON_CRASH_NATIVE":"android.app.applicationexitinfo.reason_crash_native\r\n","Defines whether layout animations should create a drawing cache for their\n             children.":"定义布局动画是否应为其创建绘图缓存\r\n             孩子们。\r\n","android.app.NotificationManager.areBubblesEnabled()":"android.app.notificationmanager.arebubblesenabled（）\r\n","android.app.job.JobInfo.getClipData()":"android.app.job.jobinfo.getClipdata（）\r\n","Sets the padding, in pixels, of the right edge; see ":"将填充物设置为右边缘的填充物；看\r\n","\n            Create and configure an instance of ":"\r\n            创建并配置一个实例\r\n","android.app.people.ConversationStatus.ACTIVITY_BIRTHDAY":"android.app.people.conversationstatus.activity_birthday\r\n","Tasks and Back Stack":"任务和背堆\r\n","Variant of the holographic (light) theme that has no title bar and fills\n         the entire screen and extends into the display overscan region.":"所有没有标题栏的全息图（轻）主题的变体\r\n         整个屏幕并延伸到显示上的范围区域。\r\n","android.app.admin.DevicePolicyManager.setKeyPairCertificate(android.content.ComponentName, java.lang.String, java.util.List, boolean)":"android.app.admin.devicepolicymanager.setkeypaircertificate（android.content.componentname，java.lang.string，java.util.list，boolean）\r\n","android.app.Notification.CATEGORY_ALARM":"android.app.notification.category_alarm\r\n","Allows an application to create mock location providers for testing \n":"允许应用程序创建模拟位置提供商进行测试\r\n\r\n","android.app.admin.SystemUpdatePolicy.getPolicyType()":"android.app.admin.SystemupDatePolicy.getPolicyType（）\r\n"," is called. -or- The amount of time, in milliseconds, to delay starting the animation after\n            ":" 叫做。 - 或 - 以毫秒为单位的时间延迟开始动画\r\n            \r\n","Call this to set the result that your activity will return to its\n            caller.":"打电话给您设置您的活动将返回其的结果\r\n            呼叫者。\r\n"," that does not\n            take any arguments.":" 那不是\r\n            采取任何争论。\r\n","android.app.admin.DevicePolicyManager.FLAG_MANAGED_CAN_ACCESS_PARENT":"android.app.admin.devicepolicymanager.flag_managed_can_access_parent\r\n","Theme for a wallpaper's setting activity, which is designed to be a transparent\n         background with a light shade, so the previous Activity is visible in the background.":"墙纸设置活动的主题，该活动被设计为透明\r\n         背景带有浅色阴影，因此在背景中可见以前的活动。\r\n"," object for Bluetooth LE scan operations.":" 蓝牙LE扫描操作的对象。\r\n","android.app.Notification.FOREGROUND_SERVICE_DEFAULT":"android.app.notification.foreground_service_default\r\n","Use with ":"与\r\n","if the authenticator could not honor the request due to a\n network error\n":"如果身份验证者无法兑现由于\r\n 网络错误\r\n\r\n","The characters to display in the popup keyboard.":"在弹出键盘中显示的字符。\r\n","Allows access to hardware peripherals.":"允许访问硬件外围设备。\r\n","Provides access to the system wallpaper.":"提供对系统壁纸的访问。\r\n","Bright inverse text color.":"明亮的逆文本颜色。\r\n"," method is invoked to alter\n        the value returned by future access to the\n        ":" 调用方法来改变\r\n        未来访问的价值\r\n        \r\n","Return the object that's currently hosting the fragment.":"返回当前托管片段的对象。\r\n","Color used to draw a gesture.":"用于画手势的颜色。\r\n","android.app.appsearch.SearchResult.getPackageName()":"android.app.appsearch.searchresult.getpackagename（）\r\n","android.animation.IntArrayEvaluator.evaluate(float, int[], int[])":"android.animation.intarrayevaluator.evaluate（float，int []，int []）\r\n","ApplicationErrorReport":"应用程序\r\n","Storage statistics for a UID, package, or ":"UID，软件包或\r\n","Creates a notification channel that notifications can be posted to.":"创建一个通知渠道，可以发布通知。\r\n","android.app.ActionBar.setDisplayShowHomeEnabled(boolean)":"android.app.actionbar.setdisplayshowhomeenabled（boolean）\r\n","If provided and ":"如果提供的话\r\n","Called by the profile owner of a managed profile so that some intents sent in the managed\n            profile can also be resolved in the parent, or vice versa.":"由托管个人资料的个人资料所有者调用，以便在托管中发送某些意图\r\n            配置文件也可以在父母中解析，反之亦然。\r\n","android.app.ApplicationExitInfo.getUserHandle()":"android.app.applicationexitinfo.getuserhandle（）\r\n","BitmapRegionDecoder":"bitmapregiondecoder\r\n","Bit for ":"有点\r\n","The index of the column in which this child should be.":"这个孩子应该是该列的索引。\r\n","android.app.admin.DevicePolicyManager.setDelegatedScopes(android.content.ComponentName, java.lang.String, java.util.List)":"android.app.admin.devicepolicymanager.setDelegatedScopes（android.content.componentname，java.lang.string，java.util.list）\r\n","android.app.Application.getProcessName()":"android.app.application.getProcessName（）\r\n","Create a new instance of a Fragment with the given class name.":"用给定的类名称创建片段的新实例。\r\n","Whether or not notifications in this conversation are considered important.":"这次对话中的通知是否被认为很重要。\r\n","BigPictureStyle":"Bigpicturestyle\r\n","android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_WIDGETS_ALL":"android.app.admin.devicepolicymanager.keyguard_disable_widgets_all\r\n","android.app.appsearch.AppSearchSession.setSchema(android.app.appsearch.SetSchemaRequest, java.util.concurrent.Executor, java.util.concurrent.Executor, java.util.function.Consumer)":"android.app.app.appsearch.appsearchsession.setschema（android.app.app.appsearch.setschemarequest，java.util.concurrent.executor，java.util.concurrent.execurent.executor，java.util.function.consumer.consumer.consumer）\r\n","android.app.job.JobParameters.STOP_REASON_CONSTRAINT_CONNECTIVITY":"android.app.job.jobparameters.stop_reason_constraint_connectivity\r\n","The user selected one of the choices from ":"用户从\r\n","#SKIP_SETUP_WIZARD":"#SKIP_SETUP_WIZARD\r\n","End color of the gradient.":"梯度的最终颜色。\r\n","android.app.Fragment.getString(int)":"android.app.fragment.getstring（int）\r\n","Activity#getParentActivityIntent() getParentActivityIntent()":"活动＃getParentActivityIntent（）getParentivelivityIntent（）\r\n",".\n    ":"。\r\n    \r\n","Request that key events come to this dialog.":"请求关键事件来到此对话框。\r\n","Returns the time at which this status should be expired.":"返回该状态过期的时间。\r\n","android.animation.PropertyValuesHolder.setPropertyName(java.lang.String)":"android.animation.propertyvaluesholder.setpropertyname（java.lang.string）\r\n","Called to process a key shortcut event.":"称为处理关键快捷键事件。\r\n","This is called to perform an action previously defined by the app.":"这被称为执行先前由应用程序定义的操作。\r\n","\n                    Portions of this page are modifications based on work created and shared by the \n                    ":"\r\n                    此页面的部分是基于由该工作创建和共享的工作的修改\r\n                    \r\n","android.bluetooth.BluetoothAdapter.ACTION_STATE_CHANGED":"android.bluetooth.bluetoothadapter.action_state_changed\r\n","android.app.admin.DevicePolicyManager.setDeviceOwnerLockScreenInfo(android.content.ComponentName, java.lang.CharSequence)":"android.app.admin.devicepolicymanager.setDeviceownerlockscreeninfo（android.content.componentname，java.lang.charsequence）\r\n","Specifies a layout for custom navigation.":"指定定制导航的布局。\r\n","Create a basic ActivityOptions that has no special animation associated with it.":"创建一个基本的ActivityOptions，该活动没有与之相关的特殊动画。\r\n","android.app.ActionBar.setSubtitle(int)":"android.app.actionbar.setsubtitle（int）\r\n","android.app.appsearch.GenericDocument.getPropertyDocument(java.lang.String)":"android.app.appsearch.genericdocument.getPropertydocument（java.lang.string）\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_SKIP_EDUCATION_SCREENS":"android.app.admin.devicepolicymanager.extra_provisioning_skip_education_screens\r\n","ExpandableListView with white background.":"带有白色背景的扩展空白view。\r\n","android.app.ActivityManager.getRunningServices(int)":"android.app.activityManager.getRunningServices（int）\r\n"," with no title bar \n":" 没有标题栏\r\n\r\n","android.animation.LayoutTransition.setDuration(long)":"android.animation.layouttransition.setDuration（long）\r\n"," (wall clock time in UTC).":" （UTC中的壁时钟时间）。\r\n","android.accessibilityservice.AccessibilityService.getAccessibilityButtonController()":"Android.AccessibilityService.Accesseribilityservice.getAccconcoctibilitybuttonController（）\r\n","This abstract class is used to implement ":"该抽象类用于实施\r\n","android.app.admin.DeviceAdminReceiver.ACTION_PASSWORD_EXPIRING":"android.app.admin.deviceadminreceiver.action_password_expiring\r\n","Return the host object of this fragment.":"返回此片段的主机对象。\r\n","android.app.WallpaperManager.getBuiltInDrawable(int, int, boolean, float, float)":"android.app.wallpapermanager.getBuiltIndrawable（int，int，boolean，float，float）\r\n","Allows mounting and unmounting file systems for removable storage.":"允许安装和卸载文件系统以进行可移动存储。\r\n","Window":"窗户\r\n","android.app.usage.UsageStatsManager.queryUsageStats(int, long, long)":"android.app.usage.usagestatsmanager.queryusagestats（int，long，long）\r\n","BackupDataOutput#getTransportFlags()":"backupdataoutput＃getTransportflags（）\r\n","Return an array containing the intents added to this builder.":"返回包含该构建器中添加的意图的数组。\r\n","android.app.Activity.getWindowManager()":"android.app.activity.getWindowManager（）\r\n","Set true when this subtype should be selected by default if no other subtypes are\n             selected explicitly.":"如果没有其他子类型，则默认选择此子类型时设置为true\r\n             明确选择。\r\n","This API can be called by the following to install a certificate and corresponding\n            private key:\n            <ul>\n               <li>Device owner</li>\n               <li>Profile owner</li>\n               <li>Delegated certificate installer</li>\n               <li>Credential management app</li>\n            </ul>\n            All apps within the profile will be able to access the certificate and use the private key,\n            given direct user approval.":"以下可以调用此API以安装证书和相应\r\n            私钥：\r\n            <ul>\r\n               <li>设备所有者</li>\r\n               <li>个人资料所有者</li>\r\n               <li>委派证书安装程序</li>\r\n               <li>凭证管理应用程序</li>\r\n            </ul>\r\n            配置文件中的所有应用程序都将能够访问证书并使用私钥，\r\n            给予直接用户批准。\r\n","android.app.usage.ExternalStorageStats.getAudioBytes()":"android.app.usage.externalstoragestats.getaudiobytes（）\r\n","Sets the selection to the specified child.":"将选择设置为指定的孩子。\r\n","Called by profile or device owners to set the global volume mute on or off.":"由配置文件或设备所有者调用以设置全局卷静音。\r\n","android.app.NotificationManager.areBubblesAllowed()":"android.app.notificationmanager.arebubblesallowed（）\r\n","\n        property provides an advisory value of the number of\n        JNI Global References which Java.Interop has created. The\n        ":"\r\n        属性提供了数量的咨询价值\r\n        JNI全局引用Java.Interop创建的。这\r\n        \r\n","Obtain an ":"获得\r\n","A ComponentName extra indicating the device admin receiver of the mobile device management\n            application that will be set as the profile owner or device owner and active admin.":"一个组件名称额外指示移动设备管理的设备管理员接收器\r\n            将设置为个人资料所有者或设备所有者和Active Admin的应用程序。\r\n","Timestamp when the download was last modified, in ":"时间戳下载最后一次修改时，\r\n","Context menu ID for the \"Input Method\" menu item to being up the\n       input method picker dialog, allowing the user to switch to another\n       input method.":"“输入方法”菜单项的上下文菜单ID\r\n       输入方法选择器对话框，允许用户切换到另一个\r\n       输入法。\r\n","android.animation.Animator.setTarget(java.lang.Object)":"android.animation.animator.settarget（java.lang.Object）\r\n","#getStorageEncryptionStatus()":"#getStorageencryptimptatus（）\r\n","Default color of foreground imagery on an inverted background.":"倒置背景上前景图像的默认颜色。\r\n","android.app.slice.SliceProvider.SliceProvider(java.lang.String)":"android.app.slice.sliceprovider.sliceprovider（java.lang.string）\r\n","chmod()":"chmod（）\r\n","android.app.Fragment.onPictureInPictureModeChanged(boolean)":"android.app.fragment.onpictureinpicturemodechanged（boolean）\r\n","Sets whether or not to allow optimizing operations within and across\n            transactions.":"设置是否允许在范围内和跨越优化操作\r\n            交易。\r\n","Called when the user signals the desire to start a search.":"当用户发出启动搜索的愿望时，请致电。\r\n"," object for accessing preferences\n            that are private to this activity.":" 访问首选项的对象\r\n            这项活动是私人的。\r\n","Defines whether changes in layout (caused by adding and removing items) should\n             cause a LayoutTransition to run.":"定义布局的变化（由添加和删除项目引起）是否应\r\n             导致布局传输运行。\r\n","android.animation.PropertyValuesHolder.ofObject(android.util.Property, android.animation.TypeEvaluator, java.lang.Object[])":"android.animation.propertyvaluesholder.ofobject（android.util.property，android.animation.typeevaluator，java.lang.object []）\r\n","Sets the values, per property, being animated between.":"将每个属性的值设置为动画。\r\n"," but returns the <em>raw</em> mode associated with the op.":" 但是返回与OP关联的<em> raw </em>模式。\r\n","Returns the creation timestamp of the ":"返回创建时间戳\r\n","Organization types from android.provider.":"组织类型来自Android.provider。\r\n","\n          The name of a permission that clients must have to launch the\n          service.\n        ":"\r\n          客户必须启动的许可名称\r\n          服务。\r\n        \r\n","android.app.Notification.getBadgeIconType()":"android.app.notification.getBadgeiconType（）\r\n","When opening an activity in a new task, this is the animation that is\n              run on the activity of the new task (which is entering the screen).":"在新任务中打开活动时，这是动画\r\n              运行新任务的活动（正在输入屏幕）。\r\n","ID_TYPE_INDIVIDUAL_ATTESTATION":"id_type_individual_attestation\r\n","Return the component of the receiver that implements this device admin.":"返回实现此设备管理员的接收器的组件。\r\n","android.app.FragmentManager.beginTransaction()":"android.app.fragmentManager.beginTransaction（）\r\n","android.app.AsyncNotedAppOp.getMessage()":"android.app.asyncnotedappop.getMessage（）\r\n","android.app.Dialog.dispatchKeyShortcutEvent(android.view.KeyEvent)":"android.app.dialog.dispatchkeyshortcutevent（android.view.keyevent）\r\n","Listener for observing the ":"听众观察\r\n","Return the communication channel to the service.":"将通信渠道返回到服务。\r\n","Builder#setContentInfo(CharSequence)":"构建器＃setContentinfo（charsequence）\r\n","Set a list of apps to keep around as APKs even if no user has currently installed it.":"即使没有用户当前没有安装该应用程序，设置应用程序列表以保持为APK。\r\n","Returns the settings text provided to ":"返回提供的设置文本\r\n","Indicates that an admin has set a requirement for password complexity.":"指示管理员已设置密码复杂性的要求。\r\n","android.accessibilityservice.AccessibilityService.SERVICE_META_DATA":"Android.AccessibilityService.Accessibilityservice.Service_Meta_Data\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_SENSORS_PERMISSION_GRANT_OPT_OUT":"android.app.admin.devicepolicymanager.extra_provisioning_sensors_permission_grant_opt_out\r\n","android.media.session.MediaSession.Token":"android.media.session.mediasession.token\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_SERIAL_NUMBER":"android.app.admin.devicepolicymanager.extra_provisioning_serial_number\r\n","android.app.ForegroundServiceStartNotAllowedException.ForegroundServiceStartNotAllowedException(java.lang.String)":"android.app.foregroundServicestArtNotlowerEdexception.ForegroundServicestArtNotAllowedException（java.lang.string）\r\n","Boolean that controls whether a view can take focus while in touch mode.":"布尔值可以控制一个视图在接触模式下是否可以焦点。\r\n","EventStats":"EventStats\r\n","android.bluetooth.BluetoothGatt.readDescriptor(android.bluetooth.BluetoothGattDescriptor)":"android.bluetooth.bluetoothgatt.readdescriptor（android.bluetooth.bluetoothgattdescriptor）\r\n","Stop the service if the most recent time it was started was \n            <var>startId</var>.":"如果最近开始的时间是\r\n            <var> startID </var>。\r\n","android.bluetooth.BluetoothGattCharacteristic.PERMISSION_READ":"android.bluetooth.bluetoothgattcharacteristic.permission_read\r\n"," belonging\n            to this group are blocked.":" 归属\r\n            对此组被阻止。\r\n","The user has performed an unrecognized gesture on the touch screen.":"用户在触摸屏上执行了未识别的手势。\r\n","The id of the default channel for an app.":"应用程序的默认频道的ID。\r\n","\n             var handler = new AndroidClientHandler {\n                UseCookies = true,\n                AutomaticDecompression = DecompressionMethods.Deflate | DecompressionMethods.GZip,\n             };\n            \n             var httpClient = new HttpClient (handler);\n             var response = httpClient.GetAsync (\"http://example.com\")?.Result as AndroidHttpResponseMessage;\n             ":"\r\n             var handler = new AndroidClientHandler {\r\n                usecookies = true，\r\n                自动压缩= decompressionmethods.deflate | Decompressionmethods.gzip，\r\n             };\r\n            \r\n             var httpclient = new httpclient（handler）;\r\n             var响应= httpclient.getAsync（“ http://example.com”）？\r\n             \r\n","android.app.FragmentTransaction":"Android.App.FragmentTransaction\r\n","android.app.admin.DeviceAdminReceiver.onUserStopped(android.content.Context, android.content.Intent, android.os.UserHandle)":"android.app.admin.deviceadminreceiver.onuserstopped（android.content.context，android.content.intent，android.os.userhandle）\r\n","Get the list of accounts that can provision a device which has been factory reset.":"获取可以配置已重置设备的帐户列表。\r\n","android.app.admin.DevicePolicyManager.getPasswordExpirationTimeout(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getPasswordwordexpirationTimeout（android.content.componentname）\r\n","android.app.WallpaperManager.setStream(java.io.InputStream, android.graphics.Rect, boolean)":"android.app.wallpapermanager.setstream（java.io.inputstream，android.graphics.Rect，boolean）\r\n","Returns the AutomaticZenRule with the given id, if it exists and the caller has access.":"如果存在，则返回具有给定ID的自动Zenrule，并且呼叫者可以访问。\r\n","Use the default notification vibrate. ":"使用默认通知振动。\r\n","android.app.LoaderManager.enableDebugLogging(boolean)":"android.app.loadermanager.enabledebuglogging（boolean）\r\n","Get visibility of certain account for given application.":"获得给定申请的某些帐户的可见性。\r\n","android.app.backup.BackupDataOutput.getQuota()":"android.app.backup.backupdataoutput.getquota（）\r\n","#PASSWORD_QUALITY_ALPHANUMERIC":"#password_quality_alphanumeric\r\n","DialogInterface.OnClickListener":"DialogInterface.onclickListener\r\n","android.app.Activity.getApplication()":"android.app.activity.getApplication（）\r\n","android.app.PendingIntent.isForegroundService()":"android.app.pendingIntent.isforegroundService（）\r\n","Return the maximum password length that the device supports for a\n            particular password quality.":"返回设备支持的最大密码长度\r\n            特定的密码质量。\r\n","Loads localized description for the app widget.":"加载应用程序小部件的本地描述。\r\n","android.app.FragmentContainer.onHasView()":"android.app.fragmentContainer.onhasview（）\r\n","\n call has been made on the FragmentManager's Activity, so this instance is now dead.":"\r\n 已经对FragmentManager的活动进行了呼叫，因此此实例现在已经死了。\r\n","A tab in the action bar.":"动作栏中的标签。\r\n","Ask that the local app instance of this activity be released to free up its memory.":"要求发布此活动的本地应用程序以释放其内存。\r\n","android.app.Dialog.setOnCancelListener(android.content.OnCancelListener)":"android.app.dialog.setoncancellistener（android.content.oncancellistener）\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_EAP_METHOD":"android.app.admin.devicepolicymanager.extra_provisioning_wifi_eap_method\r\n","android.app.NotificationChannel.canShowBadge()":"Android.App.NotificationChannel.Canshowbadge（）\r\n","JniIdentityHashCode":"jniidentityhashcode\r\n","Sets a callback for observing the stream of ":"设置一个回调，以观察\r\n","android.accessibilityservice.AccessibilityService.SHOW_MODE_IGNORE_HARD_KEYBOARD":"Android.AccessibilityService.Accesseribilityservice.show_mode_ignore_hard_keyboard\r\n","android.app.admin.DevicePolicyManager.WIPE_EXTERNAL_STORAGE":"android.app.admin.devicepolicymanager.wipe_external_storage\r\n","android.animation.Animator.end()":"android.animation.animator.end（）\r\n"," and friends which returns\n            information about a particular account.":" 和返回的朋友\r\n            有关特定帐户的信息。\r\n","Flag indicating whether there should be no title on this window.":"标志指示此窗口上是否应该没有标题。\r\n","Perform calling of the application's ":"执行应用程序的呼叫\r\n","android.app.ActivityManager.isRunningInTestHarness()":"android.app.activitymanager.isrunningintestharness（）\r\n","android.app.admin.DevicePolicyManager.clearResetPasswordToken(android.content.ComponentName)":"android.app.admin.devicepolicymanager.clearresetpasswordtoken（android.content.componentname）\r\n","Construct a helper to manage backup/restore of entire files within the\n            application's data directory hierarchy.":"构建一个助手来管理备份/还原整个文件\r\n            应用程序的数据目录层次结构。\r\n","Default style for drop down items.":"下拉项目的默认样式。\r\n","Makes the start edge of this view match the start edge of the given anchor view ID.":"使此视图的开始边缘与给定锚视图ID的起始边缘匹配。\r\n","UserManager#DISALLOW_ADJUST_VOLUME":"Usermanager＃disallow_adjust_volume\r\n","The drawable to be drawn to the end of the text.":"可绘制到文本末尾的绘图。\r\n"," and have\n            deprecated ":" 并有\r\n            弃用\r\n","Gets the saved password associated with the account.":"获取与帐户关联的保存密码。\r\n","Allows an application to monitor incoming WAP push messages.":"允许应用程序监视传入的WAP推动消息。\r\n","Retrieve the current number of lower case letters required in the password\n            for a particular admin or all admins that set restrictions on this user\n            and its participating profiles.":"检索密码中所需的当前小写字母数量\r\n            对于特定的管理员或所有设置此用户限制的管理员\r\n            及其参与概况。\r\n"," has no failures.":" 没有失败。\r\n","android.app.admin.DevicePolicyManager.setPermittedInputMethods(android.content.ComponentName, java.util.List)":"android.app.admin.devicepolicymanager.setpermittedinputmethods（android.content.componentname，java.util.list）\r\n"," or unblocked.":" 或没有阻止。\r\n"," method should delegate to\n          the ":" 方法应委派给\r\n          这\r\n","Called to process population of ":"被要求处理人口\r\n","For special services that are bound to by system code, this is\n the package that holds the binding.":"对于由系统代码绑定的特殊服务，这是\r\n 保持装订的包装。\r\n","android.app.AlertDialog.setButton3(java.lang.CharSequence, android.os.Message)":"android.app.alertdialog.setButton3（java.lang.charsequence，android.os.os.message）\r\n","android.animation.Animator.setInterpolator(android.animation.TimeInterpolator)":"android.animation.animator.setInterpolator（android.animation.timeinterpolator）\r\n"," broadcast\n when instances of this AppWidget provider have been restored from backup.":" 播送\r\n 当此AppWidget提供商的实例已从备份中恢复时。\r\n","Capability: This accessibility service can take screenshot.":"功能：此可访问性服务可以进行屏幕截图。\r\n","Whether this job needs the device to be in an Idle maintenance window.":"该作业是否需要设备在空闲维护窗口中。\r\n","android.app.admin.DeviceAdminReceiver.onChoosePrivateKeyAlias(android.content.Context, android.content.Intent, int, android.net.Uri, java.lang.String)":"android.app.admin.deviceadminreceiver.onchooseprivateKeyalias（android.content.context，android.content.intent，int，int，android.net.uri，java.lang.lang.string）\r\n","This hook is called whenever an item in your options menu is selected.":"This hook is called whenever an item in your options menu is selected.\r\n","android.accessibilityservice.AccessibilityServiceInfo.CAPABILITY_CAN_CONTROL_MAGNIFICATION":"Android.AccessibilityService.AccessibilityserviceInfo.capibality_can_control_magnification\r\n","Retrieve a WallpaperManager associated with the given Context.":"检索与给定上下文关联的壁pa。\r\n","Returns the notification sound for this channel.":"返回此频道的通知声音。\r\n","A primary toolbar within the activity that may display the activity title, application-level\n            navigation affordances, and other interactive items.":"活动中可能显示活动标题，应用程序级的主要工具栏\r\n            导航负担和其他互动项目。\r\n","android.app.admin.SecurityLog.TAG_KEYGUARD_SECURED":"android.app.admin.securitylog.tag_keyguard_secured\r\n","android.app.Notification.EXTRA_PICTURE_ICON":"android.app.notification.extra_picture_icon\r\n","android.animation.ValueAnimator.setValues(android.animation.PropertyValuesHolder)":"android.animation.valueAnimator.setValues（android.animation.propertyvaluesholdholder）\r\n"," and the return from\n            ":" 还有回报\r\n            \r\n","Activities that want to remain visible behind a translucent activity above them must call\n            this method anytime between the start of ":"希望在上面的半透明活动背后保持可见的活动必须致电\r\n            此方法随时开始\r\n","An unknown error occurred while processing the call.":"处理呼叫时发生了未知错误。\r\n","android.app.admin.DevicePolicyManager.isManagedProfile(android.content.ComponentName)":"android.app.admin.devicepolicymanager.ismanagedprofile（android.content.componentname）\r\n","During a full restore, indicates that the file system object being restored\n            is an ordinary file.":"在完整的还原过程中，指示文件系统对象要还原\r\n            是一个普通文件。\r\n","Sets whether notifications posted to this channel can appear as application icon badges\n            in a Launcher.":"集合发布到此频道的通知是否可以作为应用程序图标徽章出现\r\n            在发射器中。\r\n","RESULT":"结果\r\n","android.bluetooth.BluetoothAdapter.EXTRA_PREVIOUS_STATE":"android.bluetooth.bluetoothadapter.extra_previous_state\r\n","android.appwidget.AppWidgetManager.ACTION_APPWIDGET_PICK":"android.appwidget.appwidgetManager.action_appwidget_pick\r\n","Ranked by document relevance score.":"按文档相关得分排名。\r\n","Callback class for receiving progress reports during a restore operation.":"回调类用于在还原操作期间接收进度报告。\r\n","android.app.AlarmManager.cancel(android.app.PendingIntent)":"android.app.alarmmanager.cancel（android.app.pendingIntent）\r\n","When opening a new activity that shows the wallpaper, while currently not showing the wallpaper, this is the animation that is run on the new wallpaper activity (which is entering the screen).":"当打开一个显示墙纸的新活动时，虽然目前没有显示墙纸，但这是在新壁纸活动（正在输入屏幕）上运行的动画。\r\n","android.app.appsearch.SearchSpec.getSnippetCount()":"android.app.appsearch.searchspec.getsnippetcount（）\r\n","android.app.DownloadManager.getUriForDownloadedFile(long)":"android.app.downloadmanager.geturifordownloadedfile（long）\r\n","android.app.AppOpsManager.finishOp(java.lang.String, int, java.lang.String, java.lang.String)":"android.app.appopsmanager.finishop（java.lang.string，int，java.lang.string，java.lang.string）\r\n","elapsed":"过去\r\n","\n object.":"\r\n 目的。\r\n","#extras":"#Extras\r\n","android.app.admin.SecurityLog.TAG_MAX_SCREEN_LOCK_TIMEOUT_SET":"android.app.admin.securitylog.tag_max_screen_lock_lock_timeout_set\r\n","Gravity for the view associated with these LayoutParams.":"与这些布局相关的视图的重力。\r\n","android.app.job.JobInfo.getEstimatedNetworkDownloadBytes()":"android.app.job.jobinfo.getEstimatedNetworkDownloadbytes（）\r\n","Extra data key for ":"额外的数据密钥\r\n","Allows application to override the creation of receivers.":"允许应用程序覆盖接收器的创建。\r\n","android.app.WallpaperManager.getBuiltInDrawable()":"android.app.wallpapermanager.getBuiltIndrawable（）\r\n","Default quickcontact badge style with medium quickcontact window.":"默认的QuickContact徽章样式带有中等QuickContact窗口。\r\n","The audio stream type to use when playing the sound.":"播放声音时要使用的音频流类型。\r\n",", or an\n            empty set if none have been set.":"，或一个\r\n            如果没有设置，则空设置。\r\n","android.animation.LayoutTransition.CHANGE_APPEARING":"android.animation.layouttransition.change_appearing\r\n","android.app.GameManager.GAME_MODE_PERFORMANCE":"android.app.gamemanager.game_mode_performance\r\n","Controls how this View is important for accessibility which is if it fires\n             accessibility events and if it is reported to accessibility services that\n             query the screen.":"控制这种观点对于可访问性很重要，即如果开火\r\n             可访问性事件以及报告给可访问性服务\r\n             查询屏幕。\r\n","F:Android.AccessibilityServices.AccessibilityServiceInfo.FlagToString":"f：android.accostibilityservices.Accesseribilityserviceinfo.flagtostring\r\n","android.app.WallpaperInfo.loadContextDescription(android.content.pm.PackageManager)":"android.app.wallpaperinfo.loadcontextdescription（android.content.pm.packagemanager）\r\n","Set the default response for future runtime permission requests by applications.":"设置应用程序未来运行时许可请求的默认响应。\r\n","android.app.AutomaticZenRule.setConfigurationActivity(android.content.ComponentName)":"android.app.automationzenrule.setConfigurationActivity（android.content.componentname）\r\n","Append a line to the digest section of the Inbox notification.":"将一行附加到收件箱通知的摘要部分。\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_COOKIE_HEADER":"android.app.admin.devicepolicymanager.extra_provisioning_device_admin_package_package_download_cookie_header\r\n","Returns whether this Animator is currently running (having been started and gone past any\n initial startDelay period and not yet ended).":"返回该动画师当前是否正在运行（已经开始并经过任何\r\n 最初的StartDelay时期尚未结束）。\r\n","android.appwidget.AppWidgetHost.startListening()":"android.appwidget.appwidgethost.startlistening（）\r\n","android.app.Fragment.onContextItemSelected(android.view.MenuItem)":"Android.App.Fragment.OnContextItemselected（android.view.menuitem）\r\n","android.app.job.JobService.PERMISSION_BIND":"android.app.job.jobservice.permission_bind\r\n","android.app.admin.SystemUpdatePolicy.getInstallWindowStart()":"android.app.admin.SystemupDatePolicy.getInstallWindowStart（）\r\n","android.app.MediaRouteButton.setRouteTypes(int)":"android.app.mediaroutebutton.setroutetypes（int）\r\n","This is called immediately before a surface is being destroyed.":"这是在摧毁表面之前立即调用的。\r\n","Defines the choice behavior for the view.":"定义视图的选择行为。\r\n","android.bluetooth.BluetoothAdapter.listenUsingInsecureL2capChannel()":"android.bluetooth.bluetoothadapter.listenusinginsecurel2capchannel（）\r\n","Is this activity embedded inside of another activity?":"该活动是否嵌入了另一个活动的内部？\r\n","android.accessibilityservice.AccessibilityServiceInfo.FLAG_REQUEST_MULTI_FINGER_GESTURES":"Android.AccessibilityService.Accessibilityserviceinfo.flag_request_multi_finger_gestures\r\n","android.animation.ValueAnimator.getFrameDelay()":"android.animation.valueAnimator.getFramedElay（）\r\n","android.app.AppOpsManager.OPSTR_READ_CALENDAR":"android.app.appopsmanager.opptr_read_calendar\r\n","Hide the dialog, but do not dismiss it.":"隐藏对话框，但不要忽略它。\r\n","android.app.admin.SecurityLog.TAG_LOGGING_STARTED":"android.app.admin.securitylog.tag_logging_started\r\n","Called by the system when the activity is in PiP and has state changes.":"当活动在PIP中并具有状态变化时，系统调用。\r\n","This class is used to specify meta information of a wallpaper service.":"该课程用于指定壁纸服务的元信息。\r\n","Setting this to a value greater than zero enables a built-in policy\n that will perform a device wipe after too many incorrect\n device-unlock passwords have been entered.":"将其设置为大于零的值\r\n 太多不正确后会执行设备擦拭\r\n 已输入设备 - 锁定密码。\r\n","When opening an activity in a new task, this is the animation that is\n              run on the activity of the old task (which is exiting the screen).":"在新任务中打开活动时，这是动画\r\n              运行旧任务的活动（正在退出屏幕）。\r\n","BluetoothGatt#CONNECTION_PRIORITY_LOW_POWER":"bluetoothgatt＃Connection_priority_low_power\r\n","android.app.WallpaperManager.hasResourceWallpaper(int)":"android.app.wallpapermanager.hasresourcewallpaper（int）\r\n","\n          The name of the process in which the activity should run.\n        ":"\r\n          活动应运行的过程的名称。\r\n        \r\n","Set an alternate drawable to display next to the icon/logo/title\n            when ":"设置可绘制的备用绘制以显示图标/徽标/标题旁边\r\n            什么时候\r\n","\n      Support for using Java object instances.\n    ":"\r\n      支持使用Java对象实例。\r\n    \r\n","Unflatten the AppWidgetProviderInfo from a parcel.":"从包裹中取消appwidgetProviderInfo。\r\n","android.app.slice.Slice.getSpec()":"android.app.slice.slice.getspec（）\r\n","Retrieve the non-configuration instance data that was previously\n            returned by ":"检索以前是以前的非配置实例数据\r\n            返回\r\n","DevicePolicyManager#setMaximumTimeToLock":"DevicePolicyManager＃SetMaximumTimetOlock\r\n","autoConnect":"自动连接\r\n","android.accessibilityservice.AccessibilityService.GESTURE_4_FINGER_SINGLE_TAP":"Android.AccessibilityService.Accesseribilityservice.gesture_4_finger_single_tap\r\n","android.appwidget.AppWidgetProviderInfo.autoAdvanceViewId":"android.appwidget.AppWidgetProviderInfo.AutoAdvanceViewID\r\n","android.app.slice.Slice.SUBTYPE_SOURCE":"android.app.slice.slice.subtype_source\r\n"," with no message.":" 没有消息。\r\n","Name of the property being animated.":"属性的名称是动画的。\r\n","android.appwidget.AppWidgetHostView.getErrorView()":"android.appwidget.appwidgethostview.getErrorview（）\r\n","android.app.job.JobParameters.STOP_REASON_UNDEFINED":"android.app.job.jobparameters.stop_reason_undefined\r\n","A key was released.":"钥匙已释放。\r\n","Displayed when a web request failed because the URL isn't in a valid form.":"当Web请求失败时显示，因为URL没有有效的形式。\r\n","Remove a menu visibility listener.":"删除菜单可见性侦听器。\r\n"," from the collection and put the\n            resulting data into ":" 从收藏中\r\n            结果数据\r\n","android.app.backup.SharedPreferencesBackupHelper.restoreEntity(android.app.backup.BackupDataInputStream)":"android.app.backup.sharedpreferencesbackuphelper.restoreentity（android.app.backup.backup.backupdatainputstream）\r\n","android.app.AppOpsManager.noteProxyOpNoThrow(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String)":"android.app.appopsmanager.noteproxyopnothrow（java.lang.string，java.lang.string，int，java.lang.string，java.lang.string）\r\n","android.app.Activity.startManagingCursor(android.database.Cursor)":"android.app.activity.startmanagingcursor（android.database.cursor）\r\n","android.app.appsearch.AppSearchResult.RESULT_IO_ERROR":"android.app.appsearch.appsearchresult.result_io_error\r\n"," database.":" 数据库。\r\n","Return value for ":"返回值的\r\n","ActivityMonitor":"ActivityMonitor\r\n"," that\n            allows a mobile device management application to pass data to the management application\n            instance after owner transfer.":" 那\r\n            允许移动设备管理应用程序将数据传递给管理应用程序\r\n            实例在所有者转移之后。\r\n","\n            Set to the same value as ":"\r\n            设置为与\r\n","ActivityOptions":"活动\r\n","The package name that can be used to lookup the resources from above.":"可以从上面查找资源的软件包名称。\r\n","Set whether an activity title/subtitle should be displayed.":"设置是否应显示活动标题/字幕。\r\n","android.app.SharedElementCallback.onSharedElementStart(java.util.List, java.util.List, java.util.List)":"android.app.sharedelementcallback.onsharedelementstart（java.util.list，java.util.list，java.util.list）\r\n","android.app.admin.DevicePolicyManager.DELEGATION_INSTALL_EXISTING_PACKAGE":"android.app.admin.devicepolicymanager.delegation_install_existing_package\r\n","Return the name of the process this instrumentation is running in.":"返回该仪器正在运行的过程的名称。\r\n","Get the Bluetooth device type of the remote device.":"获取远程设备的蓝牙设备类型。\r\n","android.app.admin.DevicePolicyManager.LOCK_TASK_FEATURE_NOTIFICATIONS":"android.app.admin.devicepolicymanager.lock_task_feature_notifications\r\n","android.accessibilityservice.AccessibilityButtonController.unregisterAccessibilityButtonCallback(android.accessibilityservice.AccessibilityButtonCallback)":"Android.AccessibilityService.AccessibilitybuttonController.unregisterAccosconibalbackalback（android.accessibilityService.Accessibility buttoncallback）\r\n","android.app.admin.DevicePolicyManager.setGlobalPrivateDnsModeSpecifiedHost(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.setglobalprivatednsmodespecifiedhost（android.content.com.ponentname，java.lang.string）\r\n","Set true if the subtype is auxiliary.":"如果亚型为辅助，则设置为TRUE。\r\n"," key: whether the ":" 关键：是否\r\n","android.app.KeyguardManager.isDeviceLocked()":"android.app.keyguardmanager.isdevicelocked（）\r\n","P:Android.App.Notification.ContentView)":"P：android.app.notification.contentview）\r\n","Install an existing package that has been installed in another user, or has been kept after\n            removal via ":"安装已安装在另一个用户中的现有软件包，或已保留\r\n            通过\r\n","Returns the list of namespaces to search over.":"返回要搜索的名称空间列表。\r\n","android.app.admin.FactoryResetProtectionPolicy.getFactoryResetProtectionAccounts()":"android.app.admin.factoryResetProtectionpolicy.getFactoryResetProtectionAccounts（）\r\n","Set the AppWidget that will be displayed by this view.":"设置将通过此视图显示的AppWidget。\r\n","android.app.Notification.getLocusId()":"android.app.notification.getLocusid（）\r\n","An interpolator where the change flings forward and overshoots the last\n       value then comes back.":"变更向前飞行并超越最后的插装器\r\n       然后价值回来。\r\n","\n broadcast when this widget has been layed out at a new size.":"\r\n 当该小部件以新尺寸布置时，广播。\r\n","android.content.Intent#getStringExtra\n             content.Intent.getStringExtra()":"android.content.intent＃getTringExtra\r\n             content.intent.getStringExtra（）\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_LOCATION":"android.app.admin.devicepolicymanager.extra_provisioning_device_admin_package_package_download_location\r\n","android.app.admin.DevicePolicyManager.setMasterVolumeMuted(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setmastervolumemememememecter（android.content.componentname，boolean）\r\n"," tag in the\n              device's logcat buffer.\n            ":" 标记在\r\n              设备的logcat缓冲区。\r\n            \r\n","android.app.ActionBar.setHomeActionContentDescription(java.lang.CharSequence)":"android.app.actionbar.sethomeactioncontentdescription（java.lang.charsequence）\r\n","android.app.admin.DevicePolicyManager.setLogoutEnabled(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setlogoutenabled（android.content.componentname，boolean）\r\n","android.appwidget.AppWidgetManager.getAppWidgetInfo(int)":"android.appwidget.appwidgetManager.getAppwidgetInfo（int）\r\n","#createAndManageUser":"#createandmanageuser\r\n","#setBackupServiceEnabled(ComponentName, boolean)":"#SetBackupServiceEnabled（ComponentName，boolean）\r\n","Broadcast action: sent when the profile owner is set, changed or cleared.":"广播操作：当配置文件所有者设置，更改或清除时发送。\r\n","The platform's desired minimum size for a dialog's width when it\n         is along the major axis (that is the screen is landscape).":"平台的最小尺寸，用于对话框的宽度\r\n         沿主要轴（即屏幕是景观）。\r\n","android.app.DialogFragment.isCancelable()":"android.app.dialogfragment.iscancelable（）\r\n","Moves all Fragments managed by the controller's FragmentManager\n            into the stop state.":"移动由控制器的FragmentManager管理的所有片段\r\n            进入停止状态。\r\n","Alarm time in ":"警报时间\r\n","android.app.Dialog.requireViewById(int)":"android.app.dialog.requireviewbyid（int）\r\n",", the key will be the schema type of the ":"，关键将是架构类型\r\n","Check to see whether this activity is in the process of being destroyed in order to be\n            recreated with a new configuration.":"检查是否在被摧毁的过程中查看以为\r\n            用新的配置重新创建。\r\n","android.app.SearchManager.onCancel(android.content.DialogInterface)":"android.app.searchmanager.oncancel（android.content.dialogInterface）\r\n","android.app.admin.DevicePolicyManager.setConfiguredNetworksLockdownState(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setConfigurednetworkslockdownstate（android.content.componentname，boolean）\r\n","Hint text to display when the text is empty.":"提示文本时显示文本为空时。\r\n","android.app.Activity.onActivityReenter(int, android.content.Intent)":"android.app.Activity.OnactivityReenter（int，android.content.intent）\r\n","android.security.AppUriAuthenticationPolicy":"android.security.AppuriauthenticationPolicy\r\n","This method will be called when the search UI is canceled.":"取消搜索UI时，将调用此方法。\r\n","Stops the loaders, optionally retaining their state.":"停止装载机，可选地保留其状态。\r\n","Activity#setExitSharedElementCallback(SharedElementCallback)":"活动＃setExitsharedElementCallback（sharedElementCallback）\r\n"," when there was insufficient storage space.":" 当存储空间不足时。\r\n","Constant for ":"常数\r\n","android.app.ApplicationExitInfo.getTraceInputStream()":"android.app.applicationexitinfo.getTraceInputStream（）\r\n","A resource id of a icon for the authenticator":"身份验证器图标的资源ID\r\n","android.bluetooth.BluetoothAdapter.setName(java.lang.String)":"android.bluetooth.bluetoothadapter.setname（java.lang.string）\r\n","Retrieve the most recent activity class that was seen by this \n monitor.":"检索最新的活动课程\r\n 监视器。\r\n","android.app.AlertDialog.THEME_DEVICE_DEFAULT_LIGHT":"android.app.alertdialog.theme_device_default_light\r\n","The background of a panel when it extends to the left and right edges of the screen.":"面板的背景延伸至屏幕的左右边缘。\r\n","android.app.ActionBar.setIcon(int)":"android.app.actionbar.seticon（int）\r\n","System.currentTimeMillis":"系统\r\n","android.app.AlertDialog.THEME_TRADITIONAL":"android.app.AlertDialog.Theme_traditional\r\n","The name of an optional View class to instantiate and use as an\n             action view.":"可选视图类的名称，以实例化并用作\r\n             动作视图。\r\n","This method will be invoked when the dialog is dismissed.":"当对话被驳回时，将调用此方法。\r\n","Cursor":"光标\r\n","Which content: URIs must change for the job to be scheduled.":"哪个内容：URI必须更改才能安排工作。\r\n","android.app.UiModeManager.ACTION_EXIT_CAR_MODE":"android.app.uimodemanager.action_exit_car_mode\r\n","android.app.WallpaperManager.setStream(java.io.InputStream)":"android.app.wallpapermanager.setstream（java.io.inputstream）\r\n","\n            Object instance access is available through the\n            ":"\r\n            对象实例访问可通过\r\n            \r\n","Default CheckedTextView style.":"默认的checkedTextView样式。\r\n","android.app.Fragment.getId()":"android.app.fragment.getID（）\r\n","android.app.DownloadManager.ERROR_FILE_ALREADY_EXISTS":"android.app.downloadmanager.error_file_already_exists\r\n","android.app.Activity.triggerSearch(java.lang.String, android.os.Bundle)":"android.app.activity.triggersearch（java.lang.string，android.os.bundle）\r\n","BlobHandle":"Blobhandle\r\n","android.app.ProgressDialog.incrementSecondaryProgressBy(int)":"android.app.progressdialog.incrementsecondaryprogressby（int）\r\n","Provided as a convenience for agent implementations that need an opportunity\n            to do one-time initialization before the actual backup or restore operation\n            is begun.":"为需要机会的代理实施提供方便\r\n            在实际备份或还原操作之前进行一次性初始化\r\n            开始。\r\n","This subclass of ":"这个子类\r\n","Builder#setSubText(CharSequence)":"构建器＃setSubText（charsequence）\r\n","android.app.UiAutomation.getWindowAnimationFrameStats()":"android.app.uiautomation.getWindowanimationFramestats（）\r\n","A hint to indicate that this slice represents an error.":"暗示该切片表示错误的提示。\r\n"," has resulted in a\n            voice interaction session being started.":" 导致了\r\n            语音互动会话正在开始。\r\n","android.animation.AnimatorSet.setStartDelay(long)":"android.animation.animatortatorset.setstartdelay（long）\r\n","android.appwidget.AppWidgetManager.updateAppWidget(int, android.widget.RemoteViews)":"android.appwidget.appwidgetmanager.updateappwidget（int，android.widget.remoteviews）\r\n","Determine whether or not the device's cameras have been disabled for this user,\n            either by the calling admin, if specified, or all admins.":"确定该用户是否已禁用设备的摄像机，\r\n            通过调用管理员（如果指定）或所有管理员。\r\n","image/jpeg":"图像/jpeg\r\n","android.animation.ValueAnimator.setRepeatCount(int)":"android.animation.valueAnimator.setRepeatCount（int）\r\n","android.app.WallpaperColors.getTertiaryColor()":"android.app.wallpapercolors.gettertiaryColor（）\r\n","Layout of the TextView item that will populate the suggestion popup window.":"将填充建议弹出窗口的文本视图项目的布局。\r\n","Default color of foreground imagery.":"前景图像的默认颜色。\r\n","android.app.AutomaticZenRule.getCreationTime()":"android.app.automaticzenrule.getCreationTime（）\r\n","android.app.backup.BackupDataInput.getDataSize()":"android.app.backup.backupdatainput.getDatasize（）\r\n","Intent that is broadcast when the state of getCurrentInterruptionFilter() changes.":"当GetCurrentInterruptionFilter（）更改状态时，广播的意图是广播。\r\n","#onGetDirectActions(CancellationSignal, Consumer)":"#ongetDirectactions（comcellationsignal，消费者）\r\n","Constructs and returns a PropertyValuesHolder object with the specified property name or\n            setter name for use in a multi-int setter function using ObjectAnimator.":"用指定的属性名称或\r\n            使用ObjectAnimator在多INT Setter函数中使用的Setter名称。\r\n","Defines which edges should be faded on scrolling.":"定义在滚动时应褪色的边缘。\r\n"," and will be passed to the AccountManagerService and\n            to the AccountAuthenticators.":" 并将传递给AccountManagerService和\r\n            到帐户范围。\r\n","android.app.AlertDialog.setButton(int, java.lang.CharSequence, android.os.Message)":"android.app.alertdialog.setButton（int，java.lang.charsequence，android.os.os.message）\r\n","android.appwidget.AppWidgetHostView.AppWidgetHostView(android.content.Context, int, int)":"android.appwidget.appwidgethostview.appwidgethostview（android.content.context，int，int）\r\n","Gets the bubble preference for the app.":"获得该应用程序的气泡偏好。\r\n","rotation of the view around the y axis, in degrees.":"视图围绕y轴的旋转以度为单位。\r\n","Defines all service class constants.":"定义所有服务类常数。\r\n","Characteristic permission: Allow encrypted writes with person-in-the-middle\n            protection":"特征许可：允许与中间人的加密写作\r\n            保护\r\n"," expanded notifications, supplied to\n            ":" 扩展通知，提供给\r\n            \r\n","#KEYGUARD_DISABLE_FEATURES_NONE":"#keyguard_disable_features_none\r\n","Report the size in bytes of the data associated with the current entity in the\n            restore stream.":"报告与当前实体相关的数据字节中的大小\r\n            还原流。\r\n","android.app.SearchManager.QUERY":"Android.App.SearchManager.Query\r\n","Constant representing that the conversation user is engaged in an activity that cannot be\n            more specifically represented by another type.":"不断表示对话用户从事一项无法进行的活动\r\n            更具体地由另一种类型表示。\r\n","android.app.NotificationChannel.getConversationId()":"android.app.notificationChannel.getConversationId（）\r\n","Allows applications to set the system time zone \n":"允许应用程序设置系统时区\r\n\r\n","Discovers services offered by a remote device as well as their\n            characteristics and descriptors.":"发现远程设备提供的服务及其\r\n            特征和描述符。\r\n","android.app.admin.DevicePolicyManager.switchUser(android.content.ComponentName, android.os.UserHandle)":"android.app.admin.devicepolicymanager.switchuser（android.content.componentname，android.os.userhandle）\r\n","DeviceAdminReceiver#ACTION_PASSWORD_FAILED":"deviceadminreceiver＃action_password_failed\r\n","android.app.admin.DevicePolicyManager.getShortSupportMessage(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getShortsupportMessage（android.content.componentname）\r\n","android.app.NotificationChannel.getParentChannelId()":"Android.App.NotificationChannel.getParentChannelid（）\r\n","ID_TYPE_MEID":"id_type_meid\r\n","Called when the instance has been finalized.":"当实例最终确定时调用。\r\n","#PAIRING_VARIANT_PASSKEY_CONFIRMATION":"#pairing_variant_passkey_confircation\r\n","Allows an application to write to the user's call log.":"允许应用程序写入用户的呼叫日志。\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_USER_CERTIFICATE":"android.app.admin.devicepolicymanager.extra_provisioning_wifi_user_certificate\r\n","#ACTION_AUTOMATIC_ZEN_RULE_STATUS_CHANGED":"#action_automatic_zen_rule_status_changed\r\n","android.accounts.AbstractAccountAuthenticator.getAccountCredentialsForCloning(android.accounts.AccountAuthenticatorResponse, android.accounts.Account)":"android.accounts.abstractaccontauthenticator.getAccountcredentialsforcloning（android.accounts.accountauthenticatorestorestorsessons，android.accounts.accounts.accounts）\r\n","Sets the default tab that is the first tab highlighted.":"设置第一个选项卡突出显示的默认选项卡。\r\n"," that the device\n            will be set to.":" 那个设备\r\n            将设置为。\r\n","DevicePolicyManager#setPasswordMinimumLength":"DevicePolicyManager＃setPasswordminimumlength\r\n","android.app.usage.UsageStats.getLastTimeUsed()":"android.app.usage.usagestats.getlasttime（）\r\n","\n            used when inflating with the LayoutInflater returned by ":"\r\n            用返回的layoutinflater充气时使用\r\n","android.bluetooth.BluetoothAdapter.startDiscovery()":"android.bluetooth.bluetoothadapter.startdiscovery（）\r\n","Denotes audible (not spoken) feedback.":"表示声音（不说）反馈。\r\n","android.animation.AnimatorSet.playSequentially(java.util.List)":"android.animation.animatorset.playsential（java.util.list）\r\n"," to notify\n caller of result.":" 通知\r\n 结果的来电者。\r\n","android.app.admin.UnsafeStateException.getReasons()":"android.app.admin.unsafestateexception.getReasons（）\r\n","android.app.UiAutomation.setRotation(int)":"android.app.uiautomation.setrotation（int）\r\n","#getContext()":"#getContext（）\r\n","android.app.UiAutomation.getWindows()":"android.app.uiautomation.getWindows（）\r\n","Activity":"活动\r\n","Save a RunningServiceInfo instance to a parcel.":"将RunningServiceInfo实例保存到包裹中。\r\n","Create an ActivityOptions specifying an animation where the new\n            activity is revealed from a small originating area of the screen to\n            its final full representation.":"创建一个活动，以指定新的动画\r\n            活动从屏幕的一个小原始区域揭示到\r\n            它的最终完整表示。\r\n","android.app.Fragment.setTargetFragment(android.app.Fragment, int)":"android.app.fragment.settargetFragment（Android.App.Fragment，int）\r\n","A bundle extra (boolean) that contains whether or not an app has finished restoring a widget.":"包含应用程序是否已完成窗口小部件的捆绑额（布尔值）。\r\n","Allows an application to allow access the subscribed feeds\n         ContentProvider.":"允许应用程序允许访问订阅的提要\r\n         内容提供商。\r\n","Called by device owner to check if override APNs are currently enabled.":"设备所有者调用以检查当前是否启用了APN。\r\n","field that should be\n set if the notification should be canceled when it is clicked by the\n user.":"应该是\r\n 设置如果通知应在单击时取消通知\r\n 用户。\r\n","android.animation.Keyframe.ofInt(float)":"android.animation.keyframe.ofint（float）\r\n","Check whether the user has been blocked by device policy from uninstalling a package.":"检查是否已通过设备策略阻止用户卸载软件包。\r\n","android.animation.ValueAnimator.INFINITE":"android.animation.valueAnimator.infinite\r\n","The activity component at the top of the history stack of the task.":"任务历史记录堆栈顶部的活动组件。\r\n","Query the minimum interval allowed for periodic scheduled jobs.":"查询定期安排的作业允许的最小间隔。\r\n","android.bluetooth.BluetoothGatt.GATT_READ_NOT_PERMITTED":"android.bluetooth.bluetoothgatt.gatt_read_not_permitten\r\n","Inner radius of the ring.":"环的内半径。\r\n","Asks the user to add an account of a specified type.":"要求用户添加指定类型的帐户。\r\n","KeyguardDismissCallback#onDismissError":"keyguarddismisscallback＃ondismisserror\r\n","Sets the system's persistent default time zone.":"设置系统的持续默认时区。\r\n","Specifies whether the screen should be turned on when the ":"指定是否应在\r\n","\n          The port part of a URI.\n        ":"\r\n          URI的端口部分。\r\n        \r\n","android.app.DirectAction.getLocusId()":"android.app.directaction.getLocusid（）\r\n","android.app.Activity.getSearchEvent()":"android.app.activity.getSearchEvent（）\r\n","android.appwidget.AppWidgetHost.stopListening()":"android.appwidget.appwidgethost.stoplistening（）\r\n"," key: a ":" 钥匙：\r\n","#DEVICE_TYPE_LE":"#device_type_le\r\n","android.app.Activity.setEnterSharedElementCallback(android.app.SharedElementCallback)":"Android.App.Activity.SetenterSharedElementCallback（android.app.sharedelementCallback）\r\n","Hint that this item is part of a list and should be formatted as if is part\n            of a list.":"暗示此项目是列表的一部分，应格式化，好像是一部分\r\n            列表。\r\n","\n          The name of the class that implements the activity.\n        ":"\r\n          实施活动的类名称。\r\n        \r\n","android.app.AuthenticationRequiredException.AuthenticationRequiredException(java.lang.Throwable, android.app.PendingIntent)":"android.app.authenticationRequiredException.AuthenticationRequiredException（java.lang.throwable，android.app.pendententent）\r\n","This class holds a time/value pair for an animation.":"该课程具有动画的时间/价值对。\r\n","android.app.SearchManager.MENU_KEY":"android.app.searchmanager.menu_key\r\n","android.app.Service.stopForeground(boolean)":"Android.App.Service.StopForeground（布尔值）\r\n","Specify how an activity should be launched.":"指定应如何启动活动。\r\n","android.app.Activity.onPreparePanel(int, android.view.View, android.view.Menu)":"android.app.activity.onpreparepanel（int，android.view.view，android.view.menu）\r\n","Allows an application to send SMS messages.":"允许应用程序发送SMS消息。\r\n","\n            Creates, configures and processes an asynchronous request to the indicated resource.\n            ":"\r\n            创建，配置和处理对指示资源的异步请求。\r\n            \r\n","android.animation.LayoutTransition.disableTransitionType(int)":"android.animation.layouttransition.disabletransitionType（int）\r\n","android.app.Activity.isDestroyed()":"android.app.activity.isdestroyed（）\r\n","Drawable to use as a background for a taller version of the titlebar \n":"可以用作标题栏的高版本的背景\r\n\r\n","Remove any currently set system wallpaper, reverting to the system's built-in\n            wallpaper.":"删除当前设置的系统壁纸，恢复到系统的内置\r\n            墙纸。\r\n","#ACTION_SCAN_MODE_CHANGED":"#action_scan_mode_changed\r\n","android.app.NotificationManager.EXTRA_BLOCKED_STATE":"android.app.notificationmanager.extra_blocked_state\r\n","F:Android.App.DownloadManager+Request.SetAllowedNetworkTypes":"F：android.app.downloadmanager+request.setallowednetworktypes\r\n","The number of weeks to be shown.":"要显示的几周数。\r\n","Action sent as a broadcast Intent by the AccountsService when any account is removed\n            or renamed.":"删除任何帐户时，帐户服务的广播意愿发送的操作\r\n            或更名。\r\n","android.app.backup.BackupAgent":"android.app.backup.backupent\r\n","Set the action bar's title.":"设置动作栏的标题。\r\n","android.app.UiAutomation.getServiceInfo()":"android.app.uiautomation.getServiceInfo（）\r\n","The kernel user-ID that has been assigned to this process;\n currently this is not a unique ID (multiple applications can have\n the same uid).":"已分配给此过程的内核用户ID；\r\n 目前，这不是唯一的ID（多个应用程序可以拥有\r\n 相同的UID）。\r\n","android.app.DownloadManager.ACTION_VIEW_DOWNLOADS":"android.app.downloadmanager.action_view_downloads\r\n","android.bluetooth.BluetoothAdapter.getAddress()":"android.bluetooth.bluetoothadapter.getAddress（）\r\n","android.app.admin.DevicePolicyManager.isLogoutEnabled()":"android.app.admin.devicepolicymanager.islogoutenabled（）\r\n","Allows application to override the creation of activities.":"允许应用程序覆盖活动的创建。\r\n","The start bound for an item's indicator.":"项目的起点绑定到项目的指示器。\r\n","Allows applications to enter Wi-Fi Multicast mode \n":"允许应用程序进入Wi-Fi多播模式\r\n\r\n","#CHANGE_APPEARING":"#change_appearing\r\n","If the notification contained an unsent draft for a RemoteInput when the user clicked on it,\n            we're adding the draft as a String extra to the ":"如果该通知包含用户单击时的远程图像的未触发草稿，请\r\n            我们将草稿作为字符串添加到\r\n","Allows an application to read or write the secure system settings.":"允许应用程序读取或编写安全的系统设置。\r\n","android.app.SearchManager.SUGGEST_COLUMN_ICON_1":"android.app.searchmanager.suggest_column_icon_1\r\n","android.bluetooth.BluetoothDevice.getName()":"android.bluetooth.bluetoothdevice.getName（）\r\n","The color of the led.":"LED的颜色。\r\n","android.app.TaskStackBuilder.addNextIntent(android.content.Intent)":"android.app.taskstackbuilder.addnextintent（android.content.intent）\r\n","android.bluetooth.BluetoothGatt":"android.bluetooth.bluetoothgatt\r\n","android.app.FragmentController.dispatchDestroyView()":"android.app.fragmentController.disPatchDestroyview（）\r\n","An intent extra holding the provisioning mode returned by the administrator.":"主管返回的供应模式的意图额外保留。\r\n","android.app.NotificationChannel.EDIT_VIBRATION":"Android.App.NotificationChannel.Edit_vibration\r\n","Called immediately after ":"此后立即打电话\r\n"," on this channel and the device supports that feature.":" 在此频道上，设备支持该功能。\r\n","android.app.FragmentTransaction.remove(android.app.Fragment)":"Android.App.FragmentTransaction.Remove（Android.App.Fragment）\r\n"," of the &lt;application&gt; tag.":" ＆lt; application＆gt;标签。\r\n","Application process was killed by the system low memory killer, meaning the system was\n            under memory pressure at the time of kill.":"申请过程被系统杀死低内存杀手，这意味着系统是\r\n            在杀戮时的记忆压力下。\r\n","Starts the loaders.":"启动装载机。\r\n","Optional target for this fragment.":"该片段的可选目标。\r\n","Gets an Intent that will launch an activity that crops the given\n            image and sets the device's wallpaper.":"有一个意图，将发起一项活动的活动\r\n            图像并设置设备的墙纸。\r\n","android.app.admin.DevicePolicyManager.getPermissionPolicy(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getpermissionpolicy（android.content.componentname）\r\n","Gets the length of the animation.":"获取动画的长度。\r\n","\n          property may be used for that purpose.\n        ":"\r\n          属性可用于此目的。\r\n        \r\n","Context#startForegroundService Context.startForegroundService()":"上下文＃starterforegroundService context.startforegroundservice（）\r\n","Disposed":"处置\r\n","#KEY_INTENT":"#key_intent\r\n","Creates a new instance.":"创建一个新实例。\r\n","android.app.Dialog.setFeatureDrawable(int, android.graphics.drawable.Drawable)":"android.app.dialog.setFeaturedRawable（int，android.graphics.drawable.drabable）\r\n","A GATT operation completed successfully":"Gatt操作成功完成\r\n","This MIME type is used for starting the device owner provisioning.":"此MIME类型用于启动设备所有者配置。\r\n","#ACTION_APPWIDGET_HOST_RESTORED":"#action_appwidget_host_restored\r\n","\n            or because it was canceled by the user.":"\r\n            或因为它被用户取消。\r\n","Enable extended window features.":"启用扩展窗口功能。\r\n","Create a policy object and set it to: new system update will only be installed automatically\n            when the system clock is inside a daily maintenance window.":"创建一个策略对象并将其设置为：新系统更新只会自动安装\r\n            当系统时钟在每日维护窗口内。\r\n","java.security.KeyPairGenerator":"java.security.keypairgenerator\r\n","Action periodically sent to a device administrator when the device or profile challenge\n            password is expiring.":"当设备或配置文件挑战时，周期性地发送到设备管理员的操作\r\n            密码即将到期。\r\n","Preference framework strings.":"偏好框架字符串。\r\n","Uri path for queried suggestions data.":"查询建议数据的URI路径。\r\n","android.app.job.JobServiceEngine.JobServiceEngine(android.app.Service)":"android.app.job.jobserviceengine.jobserviceengine（android.app.service）\r\n","android.app.Instrumentation.startActivitySync(android.content.Intent, android.os.Bundle)":"android.app.instrumentation.startactivitysync（android.content.intent，android.os.bundle）\r\n","Row edge flags.":"行边缘标志。\r\n","android.app.FragmentController.restoreAllState(android.os.Parcelable, java.util.List)":"Android.App.FragmentController.RestoreAllstate（android.os.os.parcelable，java.util.list）\r\n","android.app.SearchManager.SUGGEST_COLUMN_RATING_STYLE":"android.app.searchmanager.suggest_column_rating_style\r\n","android.app.Activity.dispatchTouchEvent(android.view.MotionEvent)":"android.app.activity.dispatchtouchevent（android.view.motionevent）\r\n","#PERMISSION_POLICY_AUTO_DENY":"#permission_policy_auto_deny\r\n","android.app.admin.DevicePolicyManager.LOCK_TASK_FEATURE_OVERVIEW":"android.app.admin.devicepolicymanager.lock_task_feature_overview\r\n","Ensures a loader is initialized and active.":"确保将加载程序初始化并活跃。\r\n","android.app.Notification.EXTRA_NOTIFICATION_TAG":"android.app.notification.extra_notification_tag\r\n","android.app.NotificationManager.getNotificationPolicy()":"android.app.notificationmanager.getNotificationPolicy（）\r\n","Schedule an alarm.":"安排警报。\r\n","android.app.Dialog.onStop()":"android.app.dialog.onstop（）\r\n","android.accessibilityservice.AccessibilityService.GESTURE_DOUBLE_TAP":"Android.AccessibilityService.Accessibilityservice.gesture_double_tap\r\n","android.app.GameManager.getGameMode()":"android.app.gamemanager.getGameMode（）\r\n","android.bluetooth.BluetoothAdapter.enable()":"android.bluetooth.bluetoothadapter.enable（）\r\n","Background drawable to use for action mode UI in the lower split bar \n         ":"可用于在下拆下栏中用于动作模式UI的背景\r\n         \r\n","android.media.AudioManager#STREAM_ACCESSIBILITY":"android.media.audiomanager＃stream_accostible\r\n","admin":"行政\r\n","#DELEGATION_CERT_SELECTION":"#delegation_cert_selection\r\n","The number of events that this notification represents.":"该通知代表的事件数量。\r\n","android.app.SearchManager.SUGGEST_NEVER_MAKE_SHORTCUT":"android.app.searchmanager.suggest_never_make_shortcut\r\n","Configure an application for debugging.":"配置用于调试的应用程序。\r\n","Gets the storage info for this ":"获取此存储信息\r\n","PendingIntent#FLAG_CANCEL_CURRENT PendingIntent.FLAG_CANCEL_CURRENT":"pendingIntent＃flag_cancel_current pendingIntent.flag_cancel_current\r\n","Called by a device owner to create a user with the specified name and a given component of\n            the calling package as profile owner.":"设备所有者称为用指定名称和给定组件的用户创建用户\r\n            呼叫包作为个人资料所有者。\r\n","Indicator shown beside the group View.":"组视图旁边显示的指示器。\r\n","Specifies the basic width of the dropdown.":"指定下拉列表的基本宽度。\r\n","Sent when the custom extras for an AppWidget change.":"当AppWidget更改的自定义附加功能时发送。\r\n","Provides integration points with a ":"提供与\r\n","android.app.admin.DeviceAdminReceiver.ACTION_LOCK_TASK_EXITING":"android.app.admin.deviceadminreceiver.action_lock_task_exiting\r\n","#dequeueWork()":"#dequeuework（）\r\n","\n          The ":"\r\n          这\r\n","android.animation.Animator.getInterpolator()":"android.animation.animator.getInterpolator（）\r\n","Returns a list of any processes that are currently in an error condition.":"返回当前处于错误条件的任何过程的列表。\r\n","Use the default notification lights. ":"使用默认通知灯。\r\n","Required to be able to disable the device (very dangerous!).":"需要能够禁用设备（非常危险！）。\r\n","Flag indicating whether this content provider would like to\n         participate in data synchronization.":"指示此内容提供商是否想要的标志\r\n         参与数据同步。\r\n","Allows applications to discover and pair bluetooth devices \n":"允许应用程序发现并配对蓝牙设备\r\n\r\n","List<SizeF>":"列表<sizef>\r\n","Sets int values that will be animated between.":"设置将在两者之间进行动画的INT值。\r\n","Retrieves the schema most recently successfully provided to ":"检索最近成功提供的架构\r\n","Postal address types from android.provider.":"来自Android.provider的邮政地址类型。\r\n","android.accessibilityservice.AccessibilityService.GESTURE_2_FINGER_SWIPE_UP":"Android.AccessibilityService.Accessibilityservice.gesture_2_finger_swipe_up\r\n","Drawable used to draw the right part of the strip underneath the tabs.":"可绘制用于在标签下方绘制条带的右侧的绘制部分。\r\n","android.bluetooth.BluetoothDevice.setAlias(java.lang.String)":"android.bluetooth.bluetoothdevice.setalias（java.lang.string）\r\n","android.app.Notification.actions":"android.app.notification.actions\r\n","#PASSWORD_QUALITY_NUMERIC":"#password_quality_numeric\r\n","Returns true if this is a low-RAM device.":"如果这是一个低RAM设备，则返回true。\r\n","The status of taking screenshot is failure and the reason is invalid display Id.":"拍摄屏幕截图的状态是故障，原因是无效的显示ID。\r\n","Requests permissions to be granted to this application.":"请求将授予本申请的许可。\r\n","android.app.job.JobParameters.isExpeditedJob()":"android.app.job.jobparameters.isexpeditedjob（）\r\n","Drawable to use as the track for the fast scroll thumb.":"可以用作快速滚动拇指的曲目。\r\n"," under the given names.":" 在给定名称下。\r\n","android.app.usage.UsageStatsManager.STANDBY_BUCKET_ACTIVE":"android.app.usage.usagestatsmanager.standby_bucket_active\r\n"," but instead of throwing a\n            ":" 但是不要扔\r\n            \r\n","android.app.usage.UsageEvents.getNextEvent(android.app.usage.Event)":"android.app.usage.usageevents.getNextevent（android.app.usage.event）\r\n","#onCreateOptionsMenu":"#oncreateoptionsmenu\r\n","Controls whether the view's window should keep the screen on\n             while visible.":"控制视图的窗口是否应保持屏幕\r\n             虽然可见。\r\n"," key: the intent to be sent when the users declines a\n            ":" 关键：用户拒绝时要发送的意图\r\n            \r\n","android.app.FragmentHostCallback.onRequestPermissionsFromFragment(android.app.Fragment, java.lang.String[], int)":"android.app.FragmentHostCallback.OnreQuestpermissions fromFragment（Android.App.Fragment，java.lang.string []，int），int）\r\n","Returns the list of freeze periods previously set on this system update policy object.":"返回以前在此系统更新策略对象上设置的冻结期列表。\r\n","Get the device configuration attributes.":"获取设备配置属性。\r\n","android.accounts.AccountManager.getAuthToken(android.accounts.Account, java.lang.String, boolean, android.accounts.AccountManagerCallback, android.os.Handler)":"android.accounts.accountmanager.getauthtoken（android.accounts.accounts.account，java.lang.string，boolean，android.accounts.accountmanagercallback，android.os.os.handler）\r\n","is the default for a given type.\n Default service is invoked only if no package specific one exists. ":"是给定类型的默认值。\r\n 仅当不存在特定软件包的情况下，才调用默认服务。\r\n","android.app.admin.DevicePolicyManager.setKeyguardDisabledFeatures(android.content.ComponentName, int)":"android.app.admin.devicepolicymanager.setKeyguarddisabledFeatures（android.content.componentname，int）\r\n","android.app.admin.DeviceAdminReceiver.onUserRemoved(android.content.Context, android.content.Intent, android.os.UserHandle)":"android.app.admin.deviceadminreceiver.onuserremaved（android.content.context，android.content.intent，android.os.userhandle）\r\n","android.app.Activity.onPrepareDialog(int, android.app.Dialog, android.os.Bundle)":"android.app.activity.onpreparedialog（int，android.app.dialog，android.os.bundle）\r\n","Called when the application is starting, before any activity, service,\n            or receiver objects (excluding content providers) have been created.":"在应用程序启动时，在任何活动，服务之前，请调用\r\n            已经创建了或接收器对象（不包括内容提供商）。\r\n","The style resource to use for a window's title area.":"用于窗口标题区域的样式资源。\r\n","\n          (":"\r\n          （（\r\n","Whether the characters of the field are displayed as\n             password dots instead of themselves.":"字段的字符是否显示为\r\n             密码点而不是自己。\r\n","android.animation.PropertyValuesHolder.ofObject(android.util.Property, android.animation.TypeConverter, android.animation.TypeEvaluator, java.lang.Object[])":"android.animation.propertyvaluesholder.opobject（android.util.property，android.animation.typeconverter，android.animation.typeevaluator，java.lang.object []）\r\n","android.app.people.PeopleManager.clearStatuses(java.lang.String)":"android.app.people.peoplemanager.clearstatuses（java.lang.string）\r\n","Control whether the framework's internal fragment manager debugging\n            logs are turned on.":"控制该框架的内部碎片管理器是否调试\r\n            日志已打开。\r\n","Bundle key used to supply the last time the credentials of the account\n            were authenticated successfully.":"捆绑密钥用于上次提供帐户的凭据\r\n            成功验证了。\r\n","The most recent value calculated by this <code>ValueAnimator</code> when there is just one\n            property being animated.":"此<code> valueAnimator </code>计算出的最新值\r\n            属性是动画的。\r\n","Java_":"java_\r\n","The small icon representing this notification in the status bar and content view.":"在状态栏和内容视图中代表此通知的小图标。\r\n","alpha property of the view, as a value between 0 (completely transparent) and 1\n             (completely opaque).":"视图的alpha属性，作为0（完全透明）和1之间的值\r\n             （完全不透明）。\r\n","Gets the current secondary progress. -or- Sets the secondary progress.":"获得当前的次要进度。 - 或设置次要进度。\r\n","Constant representing that the conversation user is watching video content.":"不断表示对话用户正在观看视频内容。\r\n","android.app.Presentation.Presentation(android.content.Context, android.view.Display)":"android.app.presentation.presentation（android.content.context，android.view.display）\r\n","android.app.Fragment.onCreateAnimator(int, boolean, int)":"Android.App.Fragment.OnCreateAnimator（INT，Boolean，INT）\r\n","Called by a device owner, a profile owner for the primary user or a profile\n            owner of an organization-owned managed profile to turn auto time on and off.":"由设备所有者，主要用户或配置文件的配置文件所有者调用\r\n            组织拥有的托管个人资料的所有者打开和关闭自动时间。\r\n","android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_BIOMETRICS":"android.app.admin.devicepolicymanager.keyguard_disable_biometrics\r\n","The user has performed a three-finger  single-tap and hold gesture on the touch screen.":"用户已经执行了三指单手键，并在触摸屏上保持手势。\r\n","Activities cannot draw during the period that their windows are animating in.":"活动在窗户正在动画的过程中无法绘制。\r\n","android.app.admin.DeviceAdminReceiver.onPasswordExpiring(android.content.Context, android.content.Intent)":"android.app.admin.deviceadminreceiver.onpasswordexpiring（android.content.context，android.content.intent）\r\n"," to start DownloadApp in\n            sort-by-size mode.":" 开始下载app\r\n            按大小模式排序。\r\n","android.app.LoaderManager.restartLoader(int, android.os.Bundle, android.app.LoaderCallbacks)":"android.app.loadermanager.restartloader（int，android.os.bundle，android.app.loadercallbacks）\r\n","android.app.AlarmManager.INTERVAL_FIFTEEN_MINUTES":"android.app.alarmmanager.interval_fifteen_minutes\r\n","Activity Action: Show a system activity that allows the user to turn on\n            Bluetooth.":"活动动作：显示一个系统活动，允许用户打开\r\n            蓝牙。\r\n","Sets one userdata key for an account.":"为帐户设置一个UserData密钥。\r\n","Start a series of edit operations on the Fragments associated with\n            this FragmentManager.":"对与之相关的片段开始一系列编辑操作\r\n            这个碎片人。\r\n","android.app.appsearch.AppSearchBatchResult":"Android.app.AppSearch.AppSearchBatchResult\r\n","Returns the time this rule was created, represented as milliseconds since the epoch.":"返回创建此规则的时间，自时代以来为毫秒。\r\n","This flag requests that the ":"此标志要求\r\n","android.app.admin.DeviceAdminReceiver.onLockTaskModeEntering(android.content.Context, android.content.Intent, java.lang.String)":"android.app.admin.deviceadminreceiver.onlocktaskmodeentering（android.content.context，android.content.intent，java.lang.string）\r\n","if the URI is not a content URI or its MIME type is\n         not \"image/*\"\n":"如果URI不是内容的URI或其MIME类型是\r\n         不是“图像/*”\r\n\r\n","Process name of the application.":"应用程序名称。\r\n","android.app.appsearch.GenericDocument.getPropertyBytesArray(java.lang.String)":"android.app.appsearch.genericdocument.getPropertybytesarray（java.lang.string）\r\n","android.app.slice.SliceManager.SLICE_METADATA_KEY":"android.app.slice.slicemanager.slice_metadata_key\r\n"," parameter is set to instance of ":" 参数设置为实例\r\n","Creates a Progress dialog.":"创建一个进度对话框。\r\n","android.appwidget.AppWidgetManager.ACTION_APPWIDGET_DELETED":"android.appwidget.appwidgetManager.action_appwidget_deleted\r\n","android.app.ProgressDialog.setIndeterminate(boolean)":"android.app.progressdialog.setIndeterminate（boolean）\r\n","Ranked by number of usages from a system UI surface.":"按系统UI表面的用法数进行排名。\r\n","Allows an application to modify the Google service map.":"允许应用程序修改Google服务图。\r\n","Notification style for media playback notifications.":"媒体播放通知的通知样式。\r\n","#setNightMode(int)":"#setnightmode（int）\r\n","Sets whether the activity is to be launched into LockTask mode.":"设置该活动是否要启动到LockTask模式。\r\n","Describe the kinds of special objects contained in this Parcelable's\n marshalled representation.":"描述本包裹中包含的特殊物体的种类\r\n 编制代表。\r\n","android.app.admin.DevicePolicyManager.getPasswordMinimumLetters(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getPasswordwordminemletters（android.content.componentname）\r\n","android.app.slice.Slice.SUBTYPE_PRIORITY":"android.app.slice.slice.subtype_priority\r\n","android.accessibilityservice.AccessibilityService.getRootInActiveWindow()":"Android.AccessibilityService.Accessibilityservice.getRootinactiveWindow（）\r\n","#show()":"＃节目（）\r\n","android.app.job.JobScheduler.schedule(android.app.job.JobInfo)":"android.app.job.jobscheduler.schedule（android.app.job.jobinfo）\r\n","Return information about the memory usage of one or more processes.":"返回有关一个或多个过程内存使用的信息。\r\n","Check whether this monitor blocks activity starts (not allowing the \n actual activity to run) or allows them to execute normally.":"检查此监视器是否阻止活动开始（不允许\r\n 实际活动）或允许他们正常执行。\r\n","Returns whether this rule is enabled. -or- Enables this rule.":"返回该规则是否已启用。 - 或启用此规则。\r\n","android.app.NotificationManager.deleteNotificationChannelGroup(java.lang.String)":"android.app.notificationmanager.deletenotificationchannelgroup（java.lang.string）\r\n","Uri where downloaded file will be stored.":"将存储下载文件的URI。\r\n","android.app.Notification":"Android.App.Notification\r\n","Hint that all sub-items/sub-slices within this content should be considered\n            to have ":"暗示应考虑本内容中的所有子项目/子单列\r\n            具有\r\n","Specify whether an activity should be finished when its task is\n         brought to the foreground by relaunching from the home screen.":"指定活动是否应完成时是否应完成\r\n         通过从主屏幕重新启动来到前景。\r\n","Return the backoff policy of this job.":"返回此工作的退缩政策。\r\n","A key was pressed down.":"钥匙被压低了。\r\n","Exception thrown when an app tries to start a background ":"当应用程序试图启动背景时，会引发异常\r\n",")\n            to be applied by the standard Style templates when presenting this notification.":"）\r\n            呈现此通知时，标准样式模板应用于标准样式模板。\r\n","\n            property.\n        ":"\r\n            财产。\r\n        \r\n","Defines whether a child is limited to draw inside of its bounds or not.":"定义孩子是否仅限于范围内的范围。\r\n","The AppSearch Schema for a particular type of document.":"特定类型文档类型的AppSearch模式。\r\n","Print internal state into the given stream.":"将内部状态打印到给定的流中。\r\n","Required to be able to reboot the device.":"需要重新启动设备。\r\n","android.accessibilityservice.AccessibilityServiceInfo.FLAG_REQUEST_TOUCH_EXPLORATION_MODE":"Android.AccessibilityService.Accessibilityserviceinfo.flag_request_touch_exploration_mode\r\n","Create a new LocalActivityManager for holding activities running within\n            the given <var>parent</var>.":"创建一个新的LocalactivityManager，以进行在内部运行活动\r\n            给定的<var>父</var>。\r\n","android.app.job.JobParameters.getTriggeredContentUris()":"android.app.job.jobparameters.getTriggeredContenturis（）\r\n","android.accessibilityservice.AccessibilityService.GLOBAL_ACTION_BACK":"Android.AccessibilityService.Accessibilityservice.global_action_back\r\n","android.accessibilityservice.AccessibilityServiceInfo.setNonInteractiveUiTimeoutMillis(int)":"Android.AccessibilityService.Accessibilityserviceinfo.setnoninnoninteractiveUitimeTimeTmillis（int）\r\n","Returns the package name of the app which owns the document that was used.":"返回拥有所使用文档的应用程序的包装名称。\r\n","Set an alternate description for the Home/Up action, when enabled.":"启用后，为“家庭/UP”操作设置替代描述。\r\n","Notifies the assist framework that the direct actions supported by the app changed.":"通知该应用程序支持的直接操作更改的辅助框架。\r\n","android.app.Activity.onKeyLongPress(int, android.view.KeyEvent)":"android.app.activity.onkeylongpress（int，android.view.keyevent）\r\n","Subclasses can not override hashCode().":"子类不能覆盖哈希码（）。\r\n","android.animation.Keyframe":"android.animation.keyframe\r\n","android.app.SharedElementCallback.onCaptureSharedElementSnapshot(android.view.View, android.graphics.Matrix, android.graphics.RectF)":"android.app.sharedelementCallback.OncapturesHaredElementsNapShot（android.view.view，android.graphics.matrix，android.graphics.Rectff）\r\n","#showDialog(int, Bundle)":"#showdialog（int，捆绑包）\r\n","android.app.admin.DeviceAdminInfo.USES_POLICY_WIPE_DATA":"android.app.admin.deviceadmininfo.uses_policy_wipe_data\r\n","Query network usage statistics details for a given uid.":"查询网络使用统计信息的详细信息。\r\n","globalTimeoutMillis.":"GlobalTimeOutmillis。\r\n","android.animation.PointFEvaluator.PointFEvaluator()":"android.animation.pointFevaluator.pointFevaluator（）\r\n","Start of user-defined activity results.":"用户定义的活动结果的开始。\r\n","A subclass of Dialog that can display one, two or three buttons.":"可以显示一个，两个或三个按钮的对话框的子类。\r\n","\n               Stop measuring time and log message specified in the ":"\r\n               停止测量时间和日志消息\r\n","android.app.SearchManager.stopSearch()":"android.app.searchmanager.stopsearch（）\r\n","android.app.SearchManager.SUGGEST_COLUMN_VIDEO_WIDTH":"android.app.searchmanager.suggest_column_video_width\r\n","Returns whether the exit transition and enter transition overlap or not. -or- Sets whether the exit transition and enter transition overlap or not.":"返回出口过渡和输入过渡重叠。 - 或设置出口过渡和输入过渡重叠。\r\n","Report that an application is no longer performing an operation that had previously\n been started with ":"报告应用程序不再执行以前的操作\r\n 开始\r\n","Instant Message protocols/providers from android.provider.":"来自android.provider的即时消息协议/提供商。\r\n"," on the\n            requested storage volume.":" 在\r\n            请求的存储量。\r\n","The default value for the preference, which will be set either if persistence\n             is off or persistence is on and the preference is not found in the persistent\n             storage.":"偏好的默认值，如果持久性，将设置该值\r\n             不在或持续存在，偏好在持久性中找不到\r\n             贮存。\r\n","#setFactoryResetProtectionPolicy":"#SetFactoryResetProtectionPolicy\r\n","Sets the callback that will be called if the dialog is canceled.":"设置如果取消对话框，将调用。\r\n"," expiration time (in millis from the unix epoch) of the\n            associated auth token.":" 到期时间（从Unix时期的毫里）\r\n            相关的身份令牌。\r\n","android.app.Fragment.setAllowEnterTransitionOverlap(boolean)":"Android.App.Fragment.SetallowenterTransitionOverLap（boolean）\r\n","Acceleration curve matching Flash's quadratic ease out function.":"加速曲线匹配Flash的二次易于功能。\r\n","android.app.admin.DevicePolicyManager.uninstallAllUserCaCerts(android.content.ComponentName)":"android.app.admin.devicepolicymanager.uninstallallusercacercerts（android.content.componentname）\r\n","Return the raw information about the receiver implementing this\n            device admin.":"返回有关接收器实施的原始信息\r\n            设备管理员。\r\n","android.bluetooth.BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE":"android.bluetooth.bluetoothadapter.action_request_discoverable\r\n","A simple dialog containing an ":"一个简单的对话框，包含一个\r\n","android.app.admin.DevicePolicyManager.getPasswordMinimumLowerCase(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getPasswordwordwordminminMimlowercase（android.content.componentname）\r\n","#ACTION_SET_NEW_PARENT_PROFILE_PASSWORD":"#action_set_new_parent_profile_password\r\n","Do a quick check for whether an application might be able to perform an operation.":"快速检查应用程序是否可以执行操作。\r\n","PackageManager#PERMISSION_GRANTED":"PackageManager＃cermission_granted\r\n","BackupDataOutput":"备份\r\n","A time interpolator defines the rate of change of an animation.":"时间插值器定义动画的变化速率。\r\n","#STYLE_HORIZONTAL":"#Style_horizo​​ntal\r\n","android.appwidget.AppWidgetHostView.updateAppWidgetSize(android.os.Bundle, int, int, int, int)":"android.appwidget.appwidgethostview.updateappwidgetsize（android.os.bundle，int，int，int，int，int）\r\n","Supply a tag for this view containing a String, to be retrieved\n             later with ":"为此视图提供包含字符串的标签，要检索\r\n             稍后\r\n","Include only downloads with status matching any the given status flags.":"仅包括具有匹配任何给定状态标志的状态的下载。\r\n","UiAutomation uses the accessibility subsystem by default.":"默认情况下，UIAUTomation使用可访问性子系统。\r\n","A bundle extra (int) that contains the upper bound on the current width, in dips, of a\n            widget instance.":"捆绑额外的（int），该（int）包含上部宽度，以倾角为dips的当前宽度\r\n            小部件实例。\r\n","android.app.ActivityManager.getMemoryClass()":"android.app.activityManager.getMemoryClass（）\r\n","android.app.DatePickerDialog.DatePickerDialog(android.content.Context)":"android.app.datepickerdialog.datepickerdialog（android.content.context）\r\n","android.app.admin.DevicePolicyManager.resetPasswordWithToken(android.content.ComponentName, java.lang.String, byte[], int)":"android.app.admin.devicepolicymanager.resetpasswordwithtoken（android.content.componentname，java.lang.string，byte []，int）\r\n","BluetoothDevice#PHY_LE_2M_MASK":"BluetoothDevice＃phy_le_2m_mask\r\n","Return the component of the service that implements this wallpaper.":"返回实现此墙纸的服务的组件。\r\n","Specialization of ":"专业\r\n","android.app.admin.DevicePolicyManager.grantKeyPairToApp(android.content.ComponentName, java.lang.String, java.lang.String)":"android.app.admin.devicepolicymanager.grantkeypairtoapp（android.content.componentname，java.lang.string，java.lang.string）\r\n","Called by a device owner to list all secondary users on the device.":"由设备所有者拨打以列出设备上的所有二级用户。\r\n","Capability: This accessibility service can control display magnification.":"功能：此可访问性服务可以控制显示器。\r\n","Returns \"true\" if the device is running in Test Harness Mode.":"如果设备在测试线束模式下运行，则返回“ true”。\r\n","#resetPassword":"＃重设密码\r\n","The importance of the process that it used to have before the death.":"它过去在死亡之前的过程的重要性。\r\n","android.app.admin.DevicePolicyManager.ACTION_SYSTEM_UPDATE_POLICY_CHANGED":"android.app.admin.devicepolicymanager.action_system_update_policy_changed\r\n","android.app.appsearch.SearchSpec.GROUPING_TYPE_PER_NAMESPACE":"android.app.appsearch.searchspec.grouping_type_per_namespace\r\n","Builder#setContentTitle(CharSequence)":"构建器＃setContentTitle（charsequence）\r\n"," containing the state of\n            the ":" 包含状态\r\n            这\r\n","Create a new ActivityMonitor that looks for a specific activity \n class to be started.":"创建一个寻找特定活动的新活动monitor\r\n 上课开始。\r\n","android.app.AlertDialog.setButton3(java.lang.CharSequence, android.content.OnClickListener)":"android.app.alertdialog.setButton3（java.lang.charsequence，android.content.onclicklistener）\r\n","\n            Name of the authentication scheme, as sent in the WWW-Authenticate HTTP header (the very first verb in the header's value)\n            ":"\r\n            身份验证方案的名称，如www-authenticate HTTP标头发送（标题值中的第一个动词）\r\n            \r\n","android.app.TaskInfo.numActivities":"android.app.taskinfo.numactivities\r\n","android.app.LocalActivityManager.getCurrentActivity()":"android.app.localactivitymanager.getCurrentactivity（）\r\n","\n          The name of a permission that clients must have to launch the\n          application.\n        ":"\r\n          客户必须启动的许可名称\r\n          应用。\r\n        \r\n","The component launched as the first activity in the task.":"该组件作为任务中的第一个活动启动。\r\n","Whether or not activities that the application defines can move from the task that started them to the task they have an affinity for when that task is next brought to the front.":"应用程序定义的活动是否可以从启动它们的任务转移到他们对下一个任务的前线时具有亲和力的任务。\r\n","android.bluetooth.BluetoothAdapter.ACTION_DISCOVERY_FINISHED":"android.bluetooth.bluetoothadapter.action_discovery_fined\r\n","To be called whenever the slice becomes invisible to the user.":"每当用户变得不可见时，要被称为。\r\n"," of schema type whose new definitions set in the ":" 架构类型的新定义设置在\r\n","android.animation.PointFEvaluator.PointFEvaluator(android.graphics.PointF)":"android.animation.pointFevaluator.pointFevaluator（android.graphics.pointf）\r\n","#KEYGUARD_DISABLE_TRUST_AGENTS":"#keyguard_disable_trust_agents\r\n","android.app.appsearch.SearchSpec.RANKING_STRATEGY_SYSTEM_USAGE_LAST_USED_TIMESTAMP":"android.app.appsearch.searchspec.ranking_strategy_system_usage_last_used_used_timestamp\r\n","android.accessibilityservice.AccessibilityService.GLOBAL_ACTION_ACCESSIBILITY_SHORTCUT":"Android.AccessibilityService.Accessibilityservice.global_action_accessibility_shortcut\r\n","android.appwidget.AppWidgetHost.deleteAllHosts()":"android.appwidget.appwidgethost.deleteallhosts（）\r\n","android.app.admin.DevicePolicyManager.hasLockdownAdminConfiguredNetworks(android.content.ComponentName)":"android.app.admin.devicepolicymanager.haslockdownadminconfigurednetworks（android.content.componentname）\r\n","Minimum width that the AppWidget can be resized to.":"可以将AppWidget调整到的最小宽度。\r\n","android.app.Activity.onProvideReferrer()":"android.app.activity.onprovidereferrer（）\r\n","android.app.SearchManager.INTENT_ACTION_SEARCH_SETTINGS":"android.app.searchmanager.intent_action_search_settings\r\n","Called by a device owner to remove a user/profile and all associated data.":"设备所有者拨打以删除用户/配置文件和所有相关数据。\r\n","This hook is called whenever the window focus changes.":"每当窗口焦点更改时，都称呼此钩子。\r\n","android.app.job.JobScheduler.RESULT_SUCCESS":"android.app.job.jobscheduler.result_success\r\n","android.accessibilityservice.AccessibilityService.GESTURE_SWIPE_DOWN":"Android.AccessibilityService.Accessibilityservice.gesture_swipe_down\r\n"," of the activity gains or loses\n            focus.":" 活动的收益或失败\r\n            重点。\r\n","android.app.Activity.setMediaController(android.media.session.MediaController)":"android.app.activity.setMediacontroller（android.media.session.mediacontroller）\r\n","android.app.ActivityOptions.EXTRA_USAGE_TIME_REPORT_PACKAGES":"android.app.activityOptions.extra_usage_time_time_report_packages\r\n","Maximum width (in dp) which the widget can be resized to.":"可以将小部件调整到的最大宽度（以DP为单位）。\r\n","android.app.admin.DevicePolicyManager.installKeyPair(android.content.ComponentName, java.security.PrivateKey, java.security.cert.Certificate[], java.lang.String, int)":"android.app.admin.devicepolicymanager.installkeypair（android.content.componentname，java.security.privatekey，java.security.cert.cert.certificate []，java.lang.string，int），int）\r\n","The title for the bread crumb of this item.":"该物品面包面包屑的标题。\r\n","Helper class for generating large-format notifications that include a list of (up to 5) strings.":"用于生成大型通知的助手类，其中包括（最多5）字符串的列表。\r\n","The requested storage-not-low constraint is no longer satisfied.":"不再满足请求的存储不低约束。\r\n",": don't allow other admins\n            to change the password again until the user has entered it.":"：不要允许其他管理员\r\n            再次更改密码，直到用户输入它。\r\n","Default style for drop down hints.":"下拉提示的默认样式。\r\n","Return the current position of this tab in the action bar.":"返回该选项卡在动作栏中的当前位置。\r\n"," for\n            schemes unsupported by ":" 为了\r\n            不支持的方案\r\n","Set metadata for this notification.":"为此通知设置元数据。\r\n","android.content.Context#bindService\n            Context.bindService":"android.content.context＃bindservice\r\n            context.bindservice\r\n","Read the current transmitter PHY and receiver PHY of the connection.":"阅读当前连接的发射器PHY和接收器PHY。\r\n","Defines over-scrolling behavior.":"定义过度滚动行为。\r\n","android.app.admin.DevicePolicyManager.ACTION_GET_PROVISIONING_MODE":"android.app.admin.devicepolicymanager.action_get_provisioning_mode\r\n","Instantiate the view to display in the panel for 'featureId'.":"实例化在“功能ID”面板中显示的视图。\r\n","android.app.appsearch.GenericDocument":"android.app.appsearch.genericDocument\r\n","Used in Contacts for a field that has no label and in Note Pad\n         for a note with no name.":"在没有标签和Note Pad的字段中用于触点\r\n         对于没有名字的笔记。\r\n","The user has performed a three-finger swipe right gesture on the touch screen.":"用户在触摸屏上执行了三指滑动右手势。\r\n","Called by the system when the activity changes to and from picture-in-picture mode.":"当活动与图片中的图片模式变化时，系统调用。\r\n","M:Android.Content.Context.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.IServiceConnection)":"m：android.content.context.bindservice（android.content.intent，android.content.iserviceconnection，android.content.iserviceConnection）\r\n","Release any active lease to the blob represented by ":"将任何主动租赁释放到代表的斑点\r\n","Background to use for entire input method when it is being\n             shown in fullscreen mode with the extract view, to ensure\n             that it completely covers the application.":"用于整个输入方法时使用的背景\r\n             在全屏模式下显示带有提取视图，以确保\r\n             它完全涵盖了应用程序。\r\n","android.app.admin.DevicePolicyManager.getCurrentFailedPasswordAttempts()":"android.app.admin.devicepolicymanager.getCurrentFailedPasswordAttEmpts（）\r\n","android.app.FragmentBreadCrumbs.setMaxVisible(int)":"Android.App.FragmentBreadcrumbs.SetMaxvisible（int）\r\n","Return the view with the given resource ID.":"使用给定资源ID返回视图。\r\n","android.accessibilityservice.AccessibilityGestureEvent.getDisplayId()":"android.accosconibilityservice.Accessibility gestureevent.getDisplayid（）\r\n","Default holo light theme for panel windows.":"面板窗口的默认Holo Light主题。\r\n","android.app.backup.FileBackupHelper.FileBackupHelper(android.content.Context, java.lang.String)":"android.app.backup.filebackuphelper.filebackuphelper（android.content.context，java.lang.string）\r\n","AppSearchBatchResult#getFailures":"AppSearchBatchResult＃getFailures\r\n","Category used to resolve intents that can be rendered as slices.":"用于解决可以作为切片的意图的类别。\r\n","android.app.assist.AssistStructure.getAcquisitionEndTime()":"android.app.assist.AssistStructure.getAcquicitionEndtime（）\r\n","Defines the quality of translucent drawing caches.":"定义半透明的绘图缓存的质量。\r\n","The user has performed a three-finger double tap gesture on the touch screen.":"用户在触摸屏上执行了三指双击手势。\r\n","Put a reference to a fragment in a Bundle.":"在捆绑包中提及片段。\r\n","android.app.DatePickerDialog":"android.app.datepickerdialog\r\n","This class provides access to the system alarm services.":"此类提供对系统警报服务的访问。\r\n","Primary inverse text color, useful for inverted backgrounds.":"主要的逆文本颜色，可用于倒置背景。\r\n","android.app.FragmentBreadCrumbs.setTitle(java.lang.CharSequence, java.lang.CharSequence)":"Android.App.FragmentBreadcrumbs.settitle（Java.lang.CharSequence，Java.lang.CharSequence）\r\n","Gets the non-localized description of the accessibility service.":"获取可访问性服务的非定位描述。\r\n","Drawable used for the check mark graphic.":"可用于复选标记图的绘图。\r\n","Returns the list of direct actions supported by the app.":"返回应用程序支持的直接操作列表。\r\n","#getNextEvent(android.app.usage.UsageEvents.Event)":"#getNextevent（android.app.usage.usageevents.event）\r\n","Makes the TextView be at least this many ems wide.":"使文本视图至少要宽这么宽。\r\n","WEP":"WEP\r\n",": If set, and the name or ID of\n            a back stack entry has been supplied, then all matching entries will\n            be consumed until one that doesn't match is found or the bottom of\n            the stack is reached.":"：如果设置，以及的名称或ID\r\n            提供了一个后置堆栈条目，然后所有匹配的条目将\r\n            被食用，直到找到不匹配的人或底部\r\n            到达堆栈。\r\n","android.app.admin.DevicePolicyManager.setNearbyAppStreamingPolicy(int)":"android.app.admin.devicepolicymanager.setnearbyappstreamingpolicy（int）\r\n","android.app.NotificationManager.IMPORTANCE_NONE":"android.app.notificationmanager.importance_none\r\n","Format string: if specified, the Chronometer will display this\n             string, with the first \"%s\" replaced by the current timer value\n             in \"MM:SS\" or \"H:MM:SS\" form.":"格式字符串：如果指定，计时仪将显示此信息\r\n             字符串，第一个“％s”代替了当前计时器值\r\n             在“ MM：SS”或“ H：MM：SS”形式中。\r\n","Returns the cached LayoutInflater used to inflate Views of this Fragment.":"返回用于膨胀该片段视图的缓存的布局。\r\n","android.app.TabActivity.getTabHost()":"android.app.tabactivity.getTabhost（）\r\n","This Drawable is overlaid over the foreground of the Window's content area, usually\n             to place a shadow below the title.":"该绘制可覆盖在窗户内容区域的前景上，通常\r\n             将阴影放在标题下方。\r\n","android.app.TaskInfo.isRunning":"android.app.taskinfo.isrunning\r\n","A boolean extra indicating whether the wifi network in ":"布尔值额外指示WiFi网络是否在\r\n","android.accounts.AccountManager.startAddAccountSession(java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)":"android.accounts.accountmanager.startaddaccountsession（java.lang.string，java.lang.string，java.lang.string []，android.os.bundle，android.bundle，android.app.activity，android.acccount.accounts.accounts.accounts.accountmanagercelcellback，randroid.os。处理程序）\r\n","android.bluetooth.BluetoothDevice.ACTION_FOUND":"android.bluetooth.bluetoothdevice.action_found\r\n","android.app.Notification.EXTRA_COLORIZED":"android.app.notification.extra_colorized\r\n","Marks the fragment state as unsaved.":"将碎片状态标记为未保存。\r\n","Contains the matching ":"包含匹配\r\n","android.app.Person.getIcon()":"android.app.person.geticon（）\r\n","Returns a fragment with the given identifier.":"返回带有标识符的片段。\r\n","android.app.Activity.getActionBar()":"android.app.activity.getActionBar（）\r\n","android.app.PendingIntent.getService(android.content.Context, int, android.content.Intent, int)":"android.app.pendingIntent.getService（android.content.context，int，android.content.intent，int）\r\n","Intercept delegated device administrator broadcasts.":"拦截委派的设备管理员广播。\r\n","Option to let applications specify that user data can/cannot be \n         cleared.":"让应用程序指定用户数据可以/不能为\r\n         清除。\r\n","android.app.AlarmManager":"Android.App.AlarmManager\r\n","Tapping on a choice should send the input immediately, without letting the user edit it.":"点击选择应立即发送输入，而无需让用户编辑。\r\n","\n          The name of the process in which the application should run.\n        ":"\r\n          应用程序应运行的过程的名称。\r\n        \r\n","Allows an application to read the user's call log.":"允许应用程序读取用户的呼叫日志。\r\n","android.app.job.JobServiceEngine.onStopJob(android.app.job.JobParameters)":"android.app.job.jobserviceengine.onstopjob（android.app.job.jobparameters）\r\n","24":"24\r\n","Default ListView style for drop downs.":"默认列表视图样式的下拉折叠样式。\r\n","android.app.ApplicationExitInfo.getRss()":"android.app.applicationexitinfo.getrss（）\r\n","android.app.SearchableInfo.getVoiceMaxResults()":"android.app.searchableInfo.getVoiceMaxResults（）\r\n","android.app.admin.DevicePolicyManager.ACTION_ADMIN_POLICY_COMPLIANCE":"android.app.admin.devicepolicymanager.action_admin_policy_comliance\r\n","Given a Cursor that was previously given to\n            ":"给定一个以前给出的光标\r\n            \r\n","android.app.usage.StorageStatsManager.queryStatsForPackage(java.util.UUID, java.lang.String, android.os.UserHandle)":"android.app.usage.storagestatsmanager.querystatsforpackage（java.util.uuid，java.lang.string，android.os.os.userhandle）\r\n","android.appwidget.AppWidgetManager.EXTRA_APPWIDGET_PREVIEW":"android.appwidget.appwidgetManager.extra_appwidget_preview\r\n","android.animation.LayoutTransition.setStagger(int, long)":"android.animation.layouttransition.setstagger（int，long）\r\n"," with a light-colored style \n":" 具有浅色风格\r\n\r\n","Returns true if an administrator has been granted a particular device policy.":"如果已授予管理员特定的设备策略，则返回为TRUE。\r\n","android.app.admin.DevicePolicyManager.setApplicationRestrictions(android.content.ComponentName, java.lang.String, android.os.Bundle)":"android.app.admin.devicepolicymanager.setApplicationRestrictions（android.content.componentname，java.lang.string，android.os.bundle）\r\n","android.app.Instrumentation.getTargetContext()":"android.app.instrumentation.getTargetContext（）\r\n","Identifier for the animation to use when a view is shown.":"显示视图时要使用动画的标识符。\r\n","The application is having its entire file system contents backed up.":"该应用程序的整个文件系统内容都备份了。\r\n","The user has performed a left and down gesture on the touch screen.":"用户在触摸屏上执行了左右手势。\r\n","android.accounts.AccountManager.setAccountVisibility(android.accounts.Account, java.lang.String, int)":"android.accounts.accountmanager.setaccountvisiblesible（android.accounts.accounts.account，java.lang.string，int）\r\n","android.app.Notification.EXTRA_CHANNEL_ID":"android.app.notification.extra_channel_id\r\n","android.app.Dialog.setContentView(int)":"android.app.dialog.setContentView（int）\r\n","Flags indicating more context for a permission group.":"标志指示权限组的更多上下文。\r\n","android.app.Activity.invalidateOptionsMenu()":"android.app.activity.invalidateOptionsMenu（）\r\n","Return true if Bluetooth is currently enabled and ready for use.":"如果当前启用并准备使用蓝牙，则返回true。\r\n","Defines the drawable to draw over the content.":"定义可绘制内容的可绘图。\r\n","android.app.Service.onRebind(android.content.Intent)":"android.app.service.onrebind（android.content.intent）\r\n","Additional semantic data to be carried around with this Notification.":"此通知随附的其他语义数据。\r\n","This class describes the gesture event including gesture id and which display it happens\n            on.":"本课程描述了手势事件，包括手势ID及其发生的显示\r\n            上。\r\n","#KEYGUARD_DISABLE_IRIS":"#keyguard_disable_iris\r\n","Returns the current grant state of a runtime permission for a specific application.":"返回特定应用程序的运行时许可的当前赠款状态。\r\n"," that this presentation appears on.":" 该演示文稿出现在上面。\r\n"," set\n            to <code>true</code> and was bound with the flag\n            ":" 放\r\n            到<code> true </code>，并与标志绑定\r\n            \r\n","Context#startService(Intent)":"上下文＃开始服务（意图）\r\n","A String extra holding a http cookie header which should be used in the http request to the\n            url specified in ":"载有HTTP cookie标头的字符串Extra，该标头应在HTTP请求中使用\r\n            指定的URL\r\n","The preferred left bound for an expandable list child's indicator.":"首选的左界，以获取可扩展的列表儿童指标。\r\n"," representation of a ":"表示\r\n","Set the short title to show as a bread crumb when this transaction\n            is on the back stack, as used by ":"当此交易时，将简短标题设置为面包面包屑\r\n            在后堆上，如\r\n","android.app.slice.Slice.HINT_LIST_ITEM":"android.app.slice.slice.hint_list_item\r\n","android.app.Service.startForeground(int, android.app.Notification)":"android.app.service.startforeground（int，android.app.notification）\r\n","android.app.Fragment.setArguments(android.os.Bundle)":"android.app.fragment.setarguments（android.os.bundle）\r\n"," to specify that the user should be created\n            ephemeral.":" 指定应该创建用户\r\n            短暂。\r\n","Called to create the AppWidgetHostView.":"调用以创建AppWidgetHostView。\r\n","android.app.FragmentHostCallback.onHasWindowAnimations()":"Android.App.FragmentHostCallback.OnhaswindowAnimations（）\r\n","-like interface for accessing an\n            entity's data during a restore operation.":" - 访问一个的接口\r\n            恢复操作期间实体的数据。\r\n","android.app.PendingIntent.getActivities(android.content.Context, int, android.content.Intent[], int, android.os.Bundle)":"android.app.pendingIntent.getActivities（android.content.context，int，android.content.intent []，int，android.os.bundle）\r\n","android.appwidget.AppWidgetManager.getAppWidgetIds(android.content.ComponentName)":"android.appwidget.appwidgetManager.getAppwidgetIds（android.content.componentname）\r\n","android.app.ActivityOptions.makeScaleUpAnimation(android.view.View, int, int, int, int)":"android.app.activityOptions.makescaleupanimation（android.view.view，int，int，int，int，int）\r\n","android.bluetooth.BluetoothAdapter.disable()":"android.bluetooth.bluetoothadapter.disable（）\r\n","This API can be called by the following to query whether a certificate and private key are\n            installed under a given alias:\n            <ul>\n               <li>Device owner</li>\n               <li>Profile owner</li>\n               <li>Delegated certificate installer</li>\n               <li>Credential management app</li>\n            </ul>\n            \n            If called by the credential management app, the alias must exist in the credential\n            management app's ":"可以通过以下来调用此API以查询证书和私钥是否是\r\n            在给定的别名下安装：\r\n            <ul>\r\n               <li>设备所有者</li>\r\n               <li>个人资料所有者</li>\r\n               <li>委派证书安装程序</li>\r\n               <li>凭证管理应用程序</li>\r\n            </ul>\r\n            \r\n            如果由凭证管理应用程序调用，则该别名必须存在于凭据中\r\n            管理应用程序\r\n","android.app.Notification.bigContentView":"android.app.notification.bigcontentview\r\n","Called by the profile owner of a managed profile to obtain a ":"由托管个人资料的个人资料所有者调用以获取\r\n","#POP_BACK_STACK_INCLUSIVE":"#pop_back_stack_inclusive\r\n"," objects in the specified order.":"指定顺序的对象。\r\n","Indicates the entity that controls the device.":"指示控制设备的实体。\r\n","Called when activity gets or loses the top resumed position in the system.":"当活动获得或失去系统中的最高位置时，请调用。\r\n","Hide the ActionBar if it is currently showing.":"隐藏动作栏如果当前显示的话。\r\n","This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.":"该API支持Android基础架构的单声道，并且不打算直接从您的代码中使用。\r\n","android.app.Notification.COLOR_DEFAULT":"android.app.notification.color_default\r\n","android.app.Activity.closeContextMenu()":"android.app.activity.closecontextmenu（）\r\n","android:versionCode":"Android：版本代码\r\n","Variant of the holographic (dark) theme with no action bar.":"全息（黑暗）主题的变体没有动作栏。\r\n"," hours, much higher than the documented value of ":" 小时，比有记录的价值高得多\r\n","android.app.Activity.onAttachFragment(android.app.Fragment)":"android.app.activity.onattachfragment（android.app.fragment）\r\n","Gets the input type as specified in the searchable attributes.":"获取可搜索属性中指定的输入类型。\r\n","android.app.Activity.setContentTransitionManager(android.transition.TransitionManager)":"android.app.activity.setContentTransitionManager（Android.transition.transitionmanager）\r\n","Turns a slice intent into a slice uri.":"将切片意图变成切片URI。\r\n","The short title for the bread crumb of this item.":"该物品面包面包屑的简短标题。\r\n","android.accessibilityservice.AccessibilityService.SERVICE_INTERFACE":"Android.AccessibilityService.AccessibilityService.Service_interface\r\n","Used by ListView and GridView to stack their content from the bottom.":"由ListView和GridView用于从底部堆叠其内容。\r\n","Size of the Action Bar, including the contextual\n             bar used to present Action Modes.":"动作栏的大小，包括上下文\r\n             栏用于呈现动作模式。\r\n","Extra spacing between lines of text.":"文本行之间的额外间距。\r\n","#checkOp":"#checkop\r\n","android.app.SearchManager.ACTION_KEY":"android.app.searchmanager.action_key\r\n","android.app.Dialog.dispatchTrackballEvent(android.view.MotionEvent)":"android.app.dialog.dispatchtrackballevent（android.view.motionevent）\r\n","Return the actual Intent for a specific position in our\n            ":"返回我们在我们的特定位置的实际意图\r\n            \r\n","android.app.ProgressDialog.isIndeterminate()":"android.app.progressdialog.isindeterminate（）\r\n","Retrieve the state of all activities known by the group.":"检索小组已知的所有活动的状态。\r\n","Set a list of items to be displayed in the dialog as the content,\n you will be notified of the selected item via the supplied listener.":"设置要在对话框中显示的项目列表作为内容，\r\n 您将通过提供的听众通知您所选项目。\r\n","Column value for suggestion column ":"建议列的列值\r\n","android.accessibilityservice.AccessibilityServiceInfo.feedbackTypeToString(int)":"Android.AccessibilityService.AccessibilityserviceInfo.FeedbackTypetString（int）\r\n","android.appwidget.AppWidgetManager.ACTION_APPWIDGET_UPDATE":"android.appwidget.appwidgetManager.action_appwidget_update\r\n","Display mode for spinner options.":"旋转器选项的显示模式。\r\n","android.animation.Keyframe.getInterpolator()":"android.animation.keyframe.getInterpolator（）\r\n","BlobHandle BlobHandles":"blobhandle blobhandles\r\n","MotionEvent#obtain(long, long, int, float, float, int)":"MotionEvent＃获得（长，长，int，float，float，int）\r\n","android.animation.PropertyValuesHolder.setFloatValues(float[])":"android.animation.propertyvaluesholder.setfloatvalues（float []）\r\n","Helper class for managing multiple running embedded activities in the same\n            process.":"用于管理多个运行的嵌入式活动的帮助课程\r\n            过程。\r\n","android.app.DatePickerDialog.getDatePicker()":"android.app.datepickerdialog.getDatePicker（）\r\n"," which handles this kind of authorization scheme\n            (":" 哪个处理此类授权计划\r\n            （（\r\n","Specifies that the device should attest its serial number.":"指定该设备应证明其序列号。\r\n","android.app.NotificationManager.deleteNotificationChannel(java.lang.String)":"Android.App.NotificationManager.DeletenotificationChannel（Java.lang.String）\r\n","Interface associated with an ":"与一个关联的接口\r\n"," to interact with the user through voice.":" 通过语音与用户互动。\r\n","android.animation.ObjectAnimator.ofFloat(java.lang.Object, android.util.Property, android.util.Property, android.graphics.Path)":"android.animation.ObjectAnimator.Offloat（java.lang.Object，android.util.property，android.util.util.property，android.graphics.path）\r\n","android.app.admin.DeviceAdminReceiver.onBugreportSharingDeclined(android.content.Context, android.content.Intent)":"android.app.admin.deviceadminreceiver.onbugreportsharingdeclined（android.content.context，android.content.intent）\r\n","Property setter documentation:":"属性设定器文档：\r\n","android.app.ActivityManager.getLauncherLargeIconDensity()":"android.app.activityManager.getLauncherlargeicondense（）\r\n","android.app.Dialog.setCanceledOnTouchOutside(boolean)":"android.app.dialog.setCanceLedOntouchoutside（布尔值）\r\n","String#format String.format()":"字符串＃格式string.format（）\r\n","Called by a profile owner of an organization-owned managed profile to suspend personal\n            apps on the device.":"由组织拥有的托管个人资料的个人资料所有者拨打，以中止个人\r\n            设备上的应用程序。\r\n"," key: the person to be displayed as calling for the\n            ":" 钥匙：要显示为呼吁的人\r\n            \r\n","android.app.admin.SecurityLog.TAG_USER_RESTRICTION_ADDED":"android.app.admin.securitylog.tag_user_resteriction_added\r\n","Specifies extra space on the start side of this view.":"在此视图的起始侧指定额外的空间。\r\n","android.app.admin.DevicePolicyManager.setBluetoothContactSharingDisabled(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setbluetoothcontactsharingdisabled（android.content.componentname，boolean）\r\n","android.app.Activity.getLayoutInflater()":"android.app.activity.getLayoutInflater（）\r\n","#startActivityIfNeeded(Intent, int, Bundle)":"#startactivityifneed（意图，int，捆绑包）\r\n"," to use for default transitions in this window.":" 用于此窗口中的默认过渡。\r\n","android.accessibilityservice.AccessibilityServiceInfo.FLAG_INCLUDE_NOT_IMPORTANT_VIEWS":"Android.AccessibilityService.Accessibilityserviceinfo.flag_include_not_important_views\r\n","Horizontal ProgressBar style.":"水平进度栏样式。\r\n","Default style for RingtonePreference.":"RingtonePreference的默认样式。\r\n","Defines how many times the animation should repeat. -or- Sets how many times the animation should be repeated.":"定义动画应重复多少次。 - 或设置应重复该动画的次数。\r\n","android.app.Activity.setVisible(boolean)":"android.app.activity.setvisible（boolean）\r\n","android.app.SearchManager.SUGGEST_PARAMETER_LIMIT":"android.app.searchmanager.suggest_parameter_limit\r\n","#FLAG_IMMUTABLE":"#flag_immutable\r\n","android.app.LocalActivityManager.removeAllActivities()":"android.app.localartivitymanager.removeallactivities（）\r\n","android.accessibilityservice.AccessibilityServiceInfo.packageNames":"Android.AccessibilityService.Accessibilityserviceinfo.packagagenames\r\n","#audioAttributes":"#AudioAttributes\r\n","Indexes documents into the ":"将文件索引到\r\n","Set the provider for a given appWidgetId if the caller has a permission.":"如果呼叫者有许可，设置给定AppWidgetID的提供商。\r\n","FragmentLifecycleCallbacks":"fragmentLifeCyClecallbacks\r\n","Indicates that nearby streaming is enabled only to devices offering a comparable level of\n            security, with the same authenticated managed account.":"表明附近流媒体仅能提供可比级别的设备\r\n            安全性，具有相同的身份验证的托管帐户。\r\n","Creates a new time picker dialog with the specified theme.":"使用指定主题创建一个新的Picker对话框。\r\n","Action to trigger the Accessibility Shortcut.":"触发可访问性快捷方式的操作。\r\n","Retrieve the Activity that is currently running.":"检索当前正在运行的活动。\r\n","android.app.Activity.onCreate(android.os.Bundle)":"android.app.activity.oncreate（android.os.bundle）\r\n","Variant of the holographic (light) theme that has no title bar and fills\n         the entire screen.":"所有没有标题栏的全息图（轻）主题的变体\r\n         整个屏幕。\r\n"," property to repeat\n            the animation indefinitely.":" 属性要重复\r\n            动画无限期。\r\n","android.animation.ObjectAnimator.setAutoCancel(boolean)":"android.animation.Objectanimator.setautocancel（布尔值）\r\n","android.app.Activity.onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)":"android.app.activity.oncreateview（android.view.view，java.lang.string，android.content.context，android.util.attributeset）\r\n","Size of padding on either end of a divider.":"分隔线两端的填充大小。\r\n","InboxStyle":"收件框\r\n","android.app.slice.SliceMetrics.logVisible()":"android.app.slice.slicemetrics.logvisible（）\r\n","An optional CharSequence providing additional explanation for why the\n            admin is being added.":"可选的魅力提供了有关为什么\r\n            正在添加管理员。\r\n","Answer incoming phone calls":"接听电话\r\n","#getForegroundService":"#getForegroundService\r\n",") or unblocked\n            (when ":"）或无障碍\r\n            （什么时候\r\n","Converts a value from one type to another.":"将一个值从一种类型转换为另一种类型。\r\n","When sending the current task to the background, this is the\n              animation that is run on the top activity of the current task\n              (which is exiting the screen).":"将当前任务发送到背景时，这是\r\n              在当前任务的首要活动上运行的动画\r\n              （正在退出屏幕）。\r\n"," attribute of the activity\n            (or activity-alias) element in the application's manifest to the task stack builder.":" 活动的属性\r\n            （或Activity-Alias）应用程序中的元素显示了任务堆栈构建器。\r\n","android.bluetooth.BluetoothAdapter.getProfileProxy(android.content.Context, android.bluetooth.ServiceListener, int)":"android.bluetooth.bluetoothadapter.getProfileproxy（android.content.context，android.bluetooth.servicelistener，int）\r\n","android.app.LauncherActivity.makeListItems()":"android.app.launcheractivity.makelistitems（）\r\n","Access to fine location information.":"访问精美的位置信息。\r\n","Setting for which dividers to show.":"设置要显示的分隔线。\r\n","Gets the suggested audio stream whose volume should be changed by the\n            hardware volume controls. -or- Suggests an audio stream whose volume should be changed by the hardware\n            volume controls.":"获取建议的音频流，其音量应通过\r\n            硬件卷控件。 - 或 - 建议一个音频流，其卷应通过硬件更改\r\n            音量控制。\r\n"," objects to mix in to the list of AppWidgets that are\n installed.":" 将对象混合到appwidgets的列表\r\n 安装。\r\n","Required to draw on top of other apps.":"需要在其他应用程序的顶部绘制。\r\n","is INFINITE\n or a positive value, the animation reverses direction on every iteration.":"是无限的\r\n 或一个正值，动画会逆转每个迭代的方向。\r\n","AccountManager#KEY_CALLER_PID":"AccountManager＃key_caller_pid\r\n"," that was previously added with \n            ":" 以前添加了\r\n            \r\n","A resource id of a smaller icon for the authenticator":"身份验证器的较小图标的资源ID\r\n","Remove a pin for a slice.":"卸下销钉以进行切片。\r\n","When bringing an existing task to the foreground, this is the animation that is run on the top activity of the task being brought to the foreground (which is entering the screen).":"当将现有任务带到前景时，这是在将被带到前景的任务的顶部活动（正在进入屏幕上）运行的动画。\r\n","Use logo instead of icon if available. ":"如果可用，请使用徽标而不是图标。\r\n","android.app.SearchManager.FLAG_QUERY_REFINEMENT":"android.app.searchmanager.flag_query_refinement\r\n","android.app.NotificationManager.EXTRA_AUTOMATIC_ZEN_RULE_ID":"android.app.notificationmanager.extra_automatic_zen_rule_id\r\n","Get the number of stroke in the gesture.":"获取手势中的中风数。\r\n","android.app.Notification.CATEGORY_ERROR":"android.app.notification.category_error\r\n","android.app.DownloadManager.COLUMN_REASON":"android.app.downloadmanager.column_reason\r\n"," throw a\n        ":" 扔\r\n        \r\n","android.app.ApplicationErrorReport.TYPE_NONE":"Android.App.ApplicationErroreport.type_none\r\n","android.app.AppOpsManager":"Android.App.AppopsManager\r\n","android.bluetooth.BluetoothGatt.abortReliableWrite()":"android.bluetooth.bluetoothgatt.abortreliablewrite（）\r\n","android.app.admin.DevicePolicyManager.ID_TYPE_INDIVIDUAL_ATTESTATION":"android.app.admin.devicepolicymanager.id_type_individual_attestation\r\n","android.bluetooth.BluetoothGattCharacteristic.PERMISSION_WRITE_SIGNED_MITM":"android.bluetooth.bluetoothgattcharacteristic.permission_write_signed_mitm\r\n","Sets the padding, in pixels, of the start edge; see ":"将填充物设置为“开始边缘”的填充物；看\r\n","Theme to use for dialogs spawned from this theme.":"该主题产生的对话的主题。\r\n","Extra for ":"额外\r\n","#startActivityFromChild(Activity, Intent, int)":"#StartActivityFromChild（活动，意图，INT）\r\n","Bit for {@link #flags): set if the service is running in a\n persistent process.":"位for {@link #flags）：设置如果服务在A中运行\r\n 持续的过程。\r\n","android.bluetooth.BluetoothDevice.getUuids()":"android.bluetooth.bluetoothdevice.getuuids（）\r\n","Information about the success or failure of an AppSearch call.":"有关AppSearch调用成功或失败的信息。\r\n","android.accounts.AccountManager.addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener, android.os.Handler, boolean)":"android.accounts.accountmanager.addonaccountsupdatedlistener（android.accounts.onaccountsupdatelistener，android.os.os.os.handler，boolean）\r\n","Context menu ID for the \"Select text...\" menu item to switch to text\n       selection context mode in text views.":"“选择文本...”菜单项要切换到文本的上下文菜单ID\r\n       选择上下文模式在文本视图中。\r\n","android.app.FragmentBreadCrumbs.setActivity(android.app.Activity)":"android.app.FragmentBreadcrumbs.Setactivity（Android.App.Activity）\r\n","android.app.NotificationManager.AUTOMATIC_RULE_STATUS_UNKNOWN":"android.app.notificationmanager.automatic_rule_status_unknown\r\n","Positions the start edge of this view to the end of the given anchor view ID.":"将此视图的起始边缘定位到给定锚视图ID的末端。\r\n"," object\n ends.":" 目的\r\n 结束。\r\n","Last memory trim level reported to the process: corresponds to\n the values supplied to ":"在该过程中报告的最后一个内存内饰级别：对应于\r\n 提供的值\r\n","android.app.Instrumentation.callActivityOnRestoreInstanceState(android.app.Activity, android.os.Bundle)":"android.app.instrumentation.callactivityOnrestorivityOnrestoreInstancestate（android.app.Activity，android.os.bundle）\r\n","android.app.appsearch.PackageIdentifier":"Android.App.AppSearch.packageIdentifier\r\n","android.app.Dialog.create()":"android.app.dialog.create（）\r\n","Provides access to network usage history and statistics.":"提供网络使用历史记录和统计信息的访问。\r\n","The user has performed a four-finger triple tap gesture on the touch screen.":"用户在触摸屏上执行了四指三重水龙头手势。\r\n","Sets up this AnimatorSet to play all of the supplied animations at the same time.":"设置此Animatorset，同时播放所有提供的动画。\r\n","android.app.Notification.EXTRA_LARGE_ICON_BIG":"android.app.notification.extra_large_icon_big\r\n","android.widget.Toolbar Toolbar":"android.widget.toolbar工具栏\r\n","A dark Holo shade of blue \n":"蓝色的深色整体阴影\r\n\r\n","Builder#setContentText(CharSequence)":"构建器＃setContentText（CharSequence）\r\n","Called by a profile owner of a managed profile to retrieve the color used for customization.":"由托管配置文件的配置文件所有者调用以检索用于自定义的颜色。\r\n","Update the extras for a given widget instance.":"更新给定的小部件实例的附加功能。\r\n","Widgets are enabled in keyguard":"小部件在KeyGuard中启用\r\n","Allows an application to tell the AppWidget service which application\n         can access AppWidget's data.":"允许应用程序告诉AppWidget服务哪个应用程序\r\n         可以访问AppWidget的数据。\r\n","Scene":"场景\r\n","android.app.backup.RestoreObserver":"android.app.backup.restoreobserver\r\n","android.app.RemoteInput.addResultsToIntent(android.app.RemoteInput[], android.content.Intent, android.os.Bundle)":"android.app.remoteInput.AddresultStointent（android.app.remoteInput []，android.content.intent，android.os.bundle）\r\n","Used for permissions that are associated with accessing\n         camera or capturing images/video from the device.":"用于与访问相关的权限\r\n         相机或从设备捕获图像/视频。\r\n","Requests permissions from the given fragment.":"请求给定片段的许可。\r\n","Finds out whether a particular account has all the specified features.":"查找特定帐户是否具有所有指定功能。\r\n","android.app.job.JobInfo.getIntervalMillis()":"android.app.job.jobinfo.getIntervalmillis（）\r\n","android.app.slice.Slice.getItems()":"android.app.slice.slice.getItems（）\r\n","android.app.AlarmManager.setTimeZone(java.lang.String)":"android.app.alarmmanager.settimezone（java.lang.string）\r\n","android.app.admin.DeviceAdminReceiver.onProfileProvisioningComplete(android.content.Context, android.content.Intent)":"android.app.admin.deviceadminreceiver.onprofileprovisioningcomplete（android.content.context，android.content.intent）\r\n","Return whether network logging is enabled by a device owner or profile owner of\n            a managed profile.":"返回设备所有者或配置文件所有者是否启用网络记录\r\n            托管个人资料。\r\n","android.app.RemoteInput.EXTRA_RESULTS_DATA":"android.app.remoteinput.extra_results_data\r\n","TextAppearance style that will be applied to text that\n             appears within action menu items.":"TextAppearance样式将应用于文本\r\n             出现在动作菜单项中。\r\n","android.app.KeyguardManager.isDeviceSecure()":"android.app.keyguardmanager.isdevicesecure（）\r\n","Open an existing session to actively perform work.":"打开现有的会话以积极执行工作。\r\n"," when no external storage device was found.":" 当找不到外部存储设备时。\r\n","android.animation.ObjectAnimator.ofPropertyValuesHolder(java.lang.Object, android.animation.PropertyValuesHolder)":"android.animation.ObjectAnimator.propertyValuesholder（java.lang.object，android.animation.propertyvaluesholdholdhorder）\r\n","The user has performed a three-finger swipe left gesture on the touch screen.":"用户在触摸屏上执行了三指滑动左手势。\r\n","Set whether a custom view should be displayed, if set.":"设置是否应该显示自定义视图，如果设置。\r\n","android.app.admin.DevicePolicyManager.getPasswordQuality(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getPasswordQuality（android.content.componentname）\r\n","ListItem":"项目清单\r\n","android.app.NotificationManager.setNotificationPolicy(android.app.Policy)":"android.app.notificationmanager.setnotificationpolicy（android.app.policy）\r\n","android.app.appsearch.AppSearchSchema.getSchemaType()":"android.app.app.appsearch.appsearchschema.getschematype（）\r\n","Sets the interpolator on one of the animation objects used by this transition.":"将插装器设置在此过渡使用的动画对象之一上。\r\n","The view id of the AppWidget subview which should be auto-advanced by the widget's host.":"AppWidget子视图的视图ID应由小部件的主机自动加入。\r\n","Called by a profile owner of an organization-owned managed profile to acknowledge that the\n            device is compliant and the user can turn the profile off if needed according to the maximum\n            time off policy.":"由组织拥有的托管个人资料的个人资料所有者召集，以确认\r\n            设备是合规的，如果需要，用户可以根据最大\r\n            休假政策。\r\n","android.app.Service.onUnbind(android.content.Intent)":"android.app.service.onunbind（android.content.intent）\r\n","android.bluetooth.BluetoothDevice.DEVICE_TYPE_CLASSIC":"android.bluetooth.bluetoothdevice.device_type_classic\r\n","A read or write operation was requested with an invalid offset":"读取或写入操作是没有无效的偏移的\r\n","The requested idle constraint is no longer satisfied.":"不再满足请求的闲置约束。\r\n","ArrayList<String>":"arraylist <string>\r\n","Return true if offloaded scan batching is supported":"如果支持卸载扫描批处理，则返回true\r\n"," if the StrongBox Keymaster implementation on the device was provisioned\n            with an individual attestation certificate and can sign attestation records using it (as\n            attestation using an individual attestation certificate is a feature only Keymaster\n            implementations with StrongBox security level can implement).":" 如果提供了设备上的strongbox keymaster实现\r\n            具有个人证明证书，可以使用它签署证明记录（AS\r\n            使用个人证明证书的证明仅是Keymaster的功能\r\n            具有强框安全级别的实现可以实现）。\r\n","android.app.Instrumentation.callActivityOnPause(android.app.Activity)":"android.app.instrumentation.callactivityOnpause（android.app.Activity）\r\n","Instantiate and return a new Loader for the given ID.":"实例化并返回给定ID的新加载程序。\r\n","#EXTRA_AUTOMATIC_ZEN_RULE_STATUS":"#EXTRA_AUTOMATIC_ZEN_RULE_STATUS\r\n","Broadcast Action: This intent is used to broadcast PAIRING REQUEST":"广播动作：此意图用于广播配对请求\r\n","android.app.slice.Slice.SUBTYPE_VALUE":"android.app.slice.slice.subtype_value\r\n","\n          A user-readable label for the activity.\n        ":"\r\n          活动的用户可读标签。\r\n        \r\n","Migrates ":"迁移\r\n","The user has performed a two-finger double tap gesture on the touch screen.":"用户在触摸屏上执行了两指双击手势。\r\n","Callback reporting the result of a characteristic read operation.":"回调报告特征读取操作的结果。\r\n","Create a policy object and set it to block installation for a maximum period of 30 days.":"创建一个策略对象，并将其设置为最多30天的安装。\r\n","Set whether this download should be displayed in the system's Downloads UI.":"设置该下载是否应在系统下载UI中显示。\r\n","Activity Action: Show a system activity that requests discoverable mode.":"活动动作：显示一个要求可发现模式的系统活动。\r\n","#wipeData(int)":"#wipedata（int）\r\n","Specifies extra space on the bottom side of this view.":"指定此视图底部的额外空间。\r\n","Notification category: map turn-by-turn navigation.":"通知类别：逐圈导航。\r\n","android.app.WallpaperInfo.loadIcon(android.content.pm.PackageManager)":"android.app.wallpaperinfo.loadicon（android.content.pm.packagemanager）\r\n","Returns whether there are any activity transitions currently running on this\n            activity.":"返回当前是否有任何活动过渡\r\n            活动。\r\n","Create a FloatArrayEvaluator that reuses <code>reuseArray</code> for every evaluate() call.":"创建一个floatarrayevaluator，为每个evaliate（）调用重新使用<code> reusearray </code>。\r\n","Return general information about the memory state of the system.":"返回有关系统内存状态的一般信息。\r\n","Sent to widget hosts after AppWidget state related to the host has been restored from\n            backup.":"AppWidget状态与主机相关后，已从\r\n            备份。\r\n","\n            \n            This extra represents the current connection state.":"\r\n            \r\n            此额外代表当前的连接状态。\r\n","Returns the representation of the state that causes this rule to become active. -or- Sets the representation of the state that causes this rule to become active.":"返回导致该规则变得活跃的状态的代表。 - 或设置导致该规则变得活跃的状态的代表。\r\n",", returning a unique id\n            that represents the session.":"，返回独特的ID\r\n            代表会话。\r\n","RemoveByDocumentIdRequest":"RemoveByDocumentIdRequest\r\n","#WIPE_EUICC":"#WIPE_EUICC\r\n","A larger, more robust list item height.":"更大，更强大的列表项目高度。\r\n","The set of warnings (identified by the lint issue id) that should be\n            ignored by lint.":"一组警告（由皮棉发行ID确定）应为\r\n            被柔软忽略。\r\n","Use the default notification sound. ":"使用默认通知声音。\r\n","Called by the system, as part of destroying an\n            activity due to a configuration change, when it is known that a new\n            instance will immediately be created for the new configuration.":"由系统呼召，作为销毁的一部分\r\n            当知道新的时，由于配置变化而导致的活动\r\n            实例将立即为新配置创建。\r\n","Amount of time (in milliseconds) to fade in a new state drawable.":"在新的状态下淡入的时间（以毫秒为单位）。\r\n"," as first argument":" 作为第一个论点\r\n","AppSearchResult#getResultCode":"AppSearchResult＃getResultCode\r\n","android.app.job.JobInfo.Builder#addTriggerContentUri":"android.app.job.jobinfo.builder＃addtriggerContenturi\r\n","Indicates that Lint should treat this type as targeting a given API level, no matter what the\n                project target is.":"表明皮棉应将这种类型视为针对给定的API级别，无论如何\r\n                项目目标是。\r\n","android.app.people.ConversationStatus.getDescription()":"android.app.people.conversationstatus.getDescription（）\r\n","android.app.WallpaperInfo.loadThumbnail(android.content.pm.PackageManager)":"android.app.wallpaperinfo.loadthumbnail（android.content.pm.packagemanager）\r\n","android.app.Activity.setProgressBarIndeterminate(boolean)":"android.app.activity.setprogressbarindeterminate（boolean）\r\n","Returns the list of target users that the calling device owner or owner of secondary user\n            can use when calling ":"返回调用设备所有者或辅助用户所有者的目标用户列表\r\n            可以在打电话时使用\r\n","android.app.AppComponentFactory.instantiateService(java.lang.ClassLoader, java.lang.String, android.content.Intent)":"android.app.AppComponentFactory.instantiateService（java.lang.classloader，java.lang.string，android.content.intent）\r\n","#onSaveInstanceState()":"#onsaveinstancestate（）\r\n","Defines how the indeterminate mode should behave when the progress\n        reaches max.":"定义不确定模式在进步时应如何行事\r\n        达到最大\r\n","State identifier indicating that the object ":"状态标识符指示对象\r\n","Returns whether the user has chosen the importance of this channel, either to affirm the\n            initial selection from the app, or changed it to be higher or lower.":"返回用户是否选择了此通道的重要性，要么确认\r\n            从应用程序进行初始选择，或更改为更高或更低。\r\n","android.app.admin.DevicePolicyManager.PROVISIONING_MODE_FULLY_MANAGED_DEVICE":"android.app.admin.devicepolicymanager.provisioning_mode_low_managed_device\r\n","\n          The name of the process in which the service should run.\n        ":"\r\n          服务应运行的过程的名称。\r\n        \r\n","The stack trace where the error originated.":"堆栈跟踪错误起源。\r\n","android.app.Notification.CATEGORY_LOCATION_SHARING":"android.app.notification.category_location_sharing\r\n","Enable or disable notifications/indications for a given characteristic.":"为给定特征启用或禁用通知/指示。\r\n","android.bluetooth.BluetoothDevice.EXTRA_NAME":"android.bluetooth.bluetoothdevice.extra_name\r\n","Gets information about a searchable activity.":"获取有关可搜索活动的信息。\r\n","Action to open the power long-press dialog.":"行动以打开电源长压对话框。\r\n","android.app.appsearch.BatchResultCallback":"Android.app.AppSearch.BatchResultCallback\r\n","Override to call setContentView() with your own content view to\n            customize the list layout.":"覆盖以将您自己的内容视图的setContentView（）调用\r\n            自定义列表布局。\r\n","Indicates that the widget can be displayed on the home screen. ":"指示小部件可以显示在主屏幕上。\r\n","Set a list of items to be displayed in the dialog as the content, you will be notified of\n the selected item via the supplied listener.":"设置要在对话框中显示的项目列表作为内容，将通知您\r\n 通过提供的听众选择的项目。\r\n","android.animation.AnimatorListenerAdapter.onAnimationRepeat(android.animation.Animator)":"android.animation.animatorListenerAdapter.OnanimationRepeat（android.animation.animator）\r\n","android.bluetooth.BluetoothAdapter.startLeScan(android.bluetooth.LeScanCallback)":"android.bluetooth.bluetoothadapter.startlescan（android.bluetooth.lescancallback）\r\n","AuthenticationScheme.Unsupported":"AuthenticationsCheme.unsupport\r\n","android.app.admin.DevicePolicyManager.getOrganizationName(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getorganizationname（android.content.componentname）\r\n","Intent that is broadcast when an application is blocked or unblocked.":"当应用程序被阻止或未阻止时，广播的意图。\r\n","Drawable used for the progress mode.":"可用于进度模式的绘图。\r\n","Light holo dialog themes \n Holo light theme for dialog windows and activities, which is used by the\n         ":"轻型对话主题\r\n 对话窗口和活动的Holo Light主题，该主题由\r\n         \r\n","Construct a ":"构造\r\n","PWD":"PWD\r\n","android.app.admin.DevicePolicyManager.installKeyPair(android.content.ComponentName, java.security.PrivateKey, java.security.cert.Certificate[], java.lang.String, boolean)":"android.app.admin.devicepolicymanager.installkeypair（android.content.componentname，java.security.privatekey，java.security.cert.cert.certificate []\r\n","Characteristic proprty: Characteristic is broadcastable.":"特征性专有：特征是可以广播的。\r\n","android.app.Instrumentation.getUiAutomation(int)":"android.app.instrumentation.getuiautomation（int）\r\n","#getAuthToken":"#getauthtoken\r\n","Allows an application to broadcast an SMS receipt notification \n":"允许应用程序广播SMS收据通知\r\n\r\n","Print the LoaderManager's state into the given stream.":"将LoaderManager的状态打印到给定的流中。\r\n"," if the client desires the same\n            menu for this Dialog.":" 如果客户希望相同\r\n            此对话框的菜单。\r\n"," class.\n         this inherits from Theme.":" 班级。\r\n         这是从主题继承的。\r\n","A helper class that can be used in conjunction with\n            ":"可以与\r\n            \r\n",": use\n            the device's default alert theme with a dark background.":"： 利用\r\n            设备的默认警报主题具有深色背景。\r\n","Allows an application to write (but not read) the user's\n         personal profile data.":"允许应用程序写入（但不阅读）用户的\r\n         个人资料数据。\r\n","#SECURITY_PATCH_STATE_TRUE":"#security_patch_state_true\r\n","An indication of which package is being restored currently, out of the\n            total number provided in the ":"目前正在恢复哪个软件包的指示\r\n            在\r\n","Returns an enrollment-specific identifier of this device, which is guaranteed to be the same\n            value for the same device, enrolled into the same organization by the same managing app.":"返回该设备的特定注册标识符，保证是相同的\r\n            同一设备的价值，通过同一管理应用程序进入同一组织。\r\n","Called when an action bar menu is shown or hidden.":"显示或隐藏动作栏菜单时调用。\r\n","Get the Bluetooth class of the remote device.":"获取远程设备的蓝牙类。\r\n","The relative importance level that the system places on this\n process.":"系统对此置于的相对重要性层面\r\n 过程。\r\n","Remove an existing fragment.":"删除现有的片段。\r\n","Returns the controller for the accessibility button within the system's navigation area.":"返回系统导航区域内“可访问性”按钮的控制器。\r\n"," key: the indices of actions to be shown in the compact view,\n            as supplied to (e.":" 关键：要在紧凑视图中显示的动作索引，\r\n            如提供（e。\r\n","#onMapSharedElements(java.util.List, java.util.Map)":"#onmapsharedelements（java.util.list，java.util.map）\r\n","android.app.NotificationManager.areNotificationsPaused()":"android.app.notificationmanager.arenotificationpaused（）\r\n","NotificationChannelGroup":"NotificationChannelGroup\r\n","Set the sound to play, along with a specific stream on which to play it.":"将声音播放，以及可以播放的特定流。\r\n","Holo theme for dialog windows and activities, which is used by the\n         ":"对话框窗口和活动的Holo主题，该主题由\r\n         \r\n","Set the screen content from a layout resource.":"从布局资源设置屏幕内容。\r\n","\n            intents as the value of passkey.":"\r\n            意图作为Passkey的价值。\r\n","Returns the current navigation mode.":"返回当前的导航模式。\r\n","Type of this report.":"该报告的类型。\r\n",", but this alarm will be allowed to execute\n            even when the system is in low-power idle modes.":"，但是该警报将被允许执行\r\n            即使系统处于低功率空闲模式。\r\n","The threshold of ":"阈值\r\n","Called on the newly assigned owner (either device owner or profile owner) when the ownership\n            transfer has completed successfully.":"所有权时，请致电新分配的所有者（设备所有者或配置文件所有者）\r\n            转移已成功完成。\r\n","Called by a device owner or a profile owner of an organization-owned managed\n            profile to set the system's persistent default time zone.":"由设备所有者或组织拥有的托管的个人资料所有者拨打\r\n            配置文件以设置系统的持续默认时区。\r\n","Enable or disable virtual reality (VR) mode for this Activity.":"为此活动启用或禁用虚拟现实（VR）模式。\r\n","android.app.Fragment.setMenuVisibility(boolean)":"Android.App.Fragment.SetMenuviSible（布尔值）\r\n","#ACTION_PASSWORD_SUCCEEDED":"#action_password_succeeded\r\n","Allows applications to disable the keyguard \n":"允许应用程序禁用密钥守卫\r\n\r\n","Sets or updates a ":"设置或更新\r\n","android.app.GameManager":"Android.App.GameManager\r\n"," and used according to terms described in the ":"并根据所述的术语使用\r\n","android.app.admin.DeviceAdminInfo.getReceiverName()":"android.app.admin.deviceadmininfo.getReceivername（）\r\n","Called by the profile owner of a managed profile to query providers from which packages are\n            available in the parent profile.":"由托管个人资料的个人资料所有者调用到查询提供商，从哪个包裹\r\n            在父个人资料中可用。\r\n","android.app.slice.Slice.SUBTYPE_MESSAGE":"android.app.slice.slice.subtype_message\r\n","android.app.job.JobWorkItem.JobWorkItem(android.content.Intent, long, long)":"android.app.job.jobworkitem.jobworkitem（android.content.intent，long，long）\r\n","android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_FEATURES_ALL":"android.app.admin.devicepolicymanager.keyguard_disable_features_all\r\n","Finish this activity as well as all activities immediately below it\n            in the current task that have the same affinity.":"完成此活动以及紧接其下方的所有活动\r\n            在当前具有相同亲和力的任务中。\r\n","Reference to a style for the split Action Bar.":"参考拆分动作栏的样式。\r\n","Sent when an instance of an AppWidget is deleted from its host.":"当从其主机中删除AppWidget实例时发送。\r\n","Called by a device or profile owner to configure an always-on VPN connection through a\n            specific application for the current user.":"由设备或配置文件所有者调用以配置始终在线VPN连接\r\n            当前用户的特定应用程序。\r\n","Called by device or profile owners to suspend packages for this user.":"通过设备或配置文件所有者拨打该用户的软件包。\r\n"," associated with this notification.":" 与此通知相关联。\r\n","android.appwidget.AppWidgetManager.getAppWidgetOptions(int)":"android.appwidget.appwidgetManager.getAppwidgetOptions（int）\r\n","android.app.admin.DevicePolicyManager.updateOverrideApn(android.content.ComponentName, int, android.telephony.data.ApnSetting)":"android.app.admin.devicepolicymanager.updateoverrideapn（android.content.com.ponentname，int，android.telephony.data.apnsetting）\r\n","#onCreateDialog(int, Bundle)":"#oncreatedialog（int，捆绑包）\r\n"," for all\n            individual results.":" 对所有人\r\n            个人结果。\r\n","android.appwidget.AppWidgetManager.EXTRA_APPWIDGET_OPTIONS":"android.appwidget.appwidgetManager.extra_appwidget_options\r\n","android.app.DownloadManager.ERROR_TOO_MANY_REDIRECTS":"android.app.downloadmanager.Error_too_many_redirects\r\n","android.app.NotificationManager.ACTION_APP_BLOCK_STATE_CHANGED":"android.app.notificationmanager.action_app_block_state_changed\r\n","Listener for receiving events when action bar menus are shown or hidden.":"显示或隐藏动作栏菜单时接收事件的听众。\r\n","Called by an application that is administering the device to set the maximum time for user\n            activity until the device will lock.":"通过管理设备为用户设置最大时间的应用程序调用\r\n            活动直到设备锁定为止。\r\n","android.app.Activity.setTitle(int)":"android.app.activity.settitle（int）\r\n","#getAccountsByTypeAndFeatures":"#getAccountsbytypeandfeatures\r\n","android.app.Notification.publicVersion":"android.app.notification.publicversion\r\n","Describes the meta data for an installed AppWidget provider.":"描述已安装的AppWidget提供商的元数据。\r\n","android.app.Activity.onSearchRequested()":"android.app.activity.onearchrequested（）\r\n","Called by a profile owner or device owner to set a default activity that the system selects\n            to handle intents that match the given ":"由配置文件所有者或设备所有者调用以设置系统选择的默认活动\r\n            处理与给定的意图\r\n","Allows an application to write to the user dictionary.":"允许应用程序写入用户字典。\r\n","The view that will represent this notification in the notification list (which is pulled\n            down from the status bar).":"在通知列表中表示该通知的视图（已拉动\r\n            从状态栏下降）。\r\n","A specific ":"特定的\r\n","android.app.admin.DevicePolicyManager.wipeData(int, java.lang.CharSequence)":"android.app.admin.devicepolicymanager.wipedata（int，java.lang.charsequence）\r\n","android.app.RemoteAction.getActionIntent()":"android.app.remoteaction.getActionIntent（）\r\n","Allow the soft keyboard to be shown, even if a hard keyboard is connected":"即使连接了硬键盘，允许显示软键盘\r\n","FragmentTransaction#commit FragmentTransaction.commit()":"fragmentTransaction＃commit fragmentTransaction.commit（）\r\n","android.app.admin.DevicePolicyManager.WIPE_EUICC":"android.app.admin.devicepolicymanager.wipe_euicc\r\n","Used for permissions that allow access to the user's current\n         location.":"用于允许访问用户当前的权限\r\n         地点。\r\n","android.app.PendingIntent.getIntentSender()":"android.app.pendingIntent.getIntents（）\r\n","Called by a device owner to stop the specified secondary user.":"由设备所有者打电话以停止指定的二级用户。\r\n","Activity#setEnterSharedElementCallback(SharedElementCallback)":"活动＃setEntersharedElementCallback（sharedElementCallback）\r\n","Allows an application (Phone) to send a request to other applications\n         to handle the respond-via-message action during incoming calls.":"允许应用程序（电话）将请求发送给其他应用程序\r\n         在来电期间处理响应案件事件。\r\n","android.app.appsearch.ReportSystemUsageRequest.getPackageName()":"android.app.appsearch.reportsystemusagerequest.getpackagename（）\r\n","Intent#ACTION_LOCALE_CHANGED":"意图＃action_locale_changed\r\n","#startIntentSenderFromChild(Activity, IntentSender,\n            int, Intent, int, int, int, Bundle)":"#startintersenderfromchild（活动，意识者，\r\n            int，意图，int，int，int，捆绑包）\r\n","android.app.Notification.ledOnMS":"android.app.notification.LEDONMS\r\n","android.app.appsearch.GenericDocument.getPropertyBoolean(java.lang.String)":"android.app.appsearch.genericdocument.getPropertyboolean（java.lang.string）\r\n","BluetoothDevice#TRANSPORT_AUTO":"BluetoothDevice＃Transport_auto\r\n","The status of taking screenshot is failure and the reason is internal error.":"拍摄屏幕截图的状态是故障，原因是内部错误。\r\n","Returns the current runtime permission policy set by the device or profile owner.":"返回设备或配置文件所有者设置的当前运行时许可策略。\r\n","Returns the name of this rule. -or- Sets the name of this rule.":"返回此规则的名称。 - 或 - 设置此规则的名称。\r\n","A light Holo shade of blue \n":"蓝色的浅色阴影\r\n\r\n","android.app.Notification.EXTRA_BIG_TEXT":"android.app.notification.extra_big_text\r\n","when the download is waiting for network connectivity to\n proceed.":"下载正在等待网络连接到\r\n 继续。\r\n","AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE":"AsscepityServiceServiceInfo＃flag_request_touch_exploration_mode\r\n","android.app.RemoteAction.shouldShowIcon()":"android.app.remoteaction.shouldshowicon（）\r\n","\n        Call this method when you would like to prevent this instance\n        from being returned by future\n        ":"\r\n        当您想防止此实例时调用此方法\r\n        从未来归还\r\n        \r\n","Rotation constant: Freeze rotation to 90 degrees .":"旋转常数：冻结旋转至90度。\r\n","AppOpsManager#noteOp(String, int, String, String, String) app-op is noted":"appopsmanager＃noteop（字符串，int，string，string，string）app-op被注意\r\n","android.app.Notification.findRemoteInputActionPair(boolean)":"android.app.notification.findremoteinputactionpair（boolean）\r\n","Request a connection parameter update.":"请求连接参数更新。\r\n","android.appwidget.AppWidgetProviderInfo.initialKeyguardLayout":"android.appwidget.AppWidgetProviderInfo.initialKeyGuardlayout\r\n","Adds a listener to the set of listeners that are sent events through the life of an\n            animation, such as start, repeat, and end.":"将听众添加到一组听众，这些听众通过\r\n            动画，例如开始，重复和结束。\r\n","Determine whether a particular process and user ID has been granted\n            permission to access a specific slice URI.":"确定是否授予特定过程和用户​​ID\r\n            允许访问特定的slice URI。\r\n","Check whether this activity is running as part of a voice interaction with the user.":"检查此活动是否作为与用户语音交互的一部分运行。\r\n","If set, specifies that this TextView has a textual input method\n             and automatically corrects some common spelling errors.":"如果设置，请指定此文本视图具有文本输入方法\r\n             并自动纠正一些常见的拼写错误。\r\n","android.app.AppOpsManager.unsafeCheckOp(java.lang.String, int, java.lang.String)":"android.app.appopsmanager.unsafecheckop（java.lang.string，int，java.lang.string）\r\n","The application is being asked to write any data changed since the last\n            time it performed a backup operation.":"该应用程序被要求编写自上次以来更改的任何数据\r\n            时间进行了备份操作。\r\n","android.app.Notification.getSortKey()":"android.app.notification.getSortkey（）\r\n","),\n            if provided.":"），\r\n            如果提供。\r\n","Describes the information of an application process's death.":"描述申请过程死亡的信息。\r\n","Callback to indicate that the local voice interaction has stopped either\n            because it was requested through a call to ":"回调以表明本地语音互动已停止\r\n            因为它是通过通话来要求的\r\n","Returns the Transition that will be used to move Views out of the scene when the\n            fragment is removed, hidden, or detached when not popping the back stack. -or- Sets the Transition that will be used to move Views out of the scene when the\n            fragment is removed, hidden, or detached when not popping the back stack.":"返回将用于将视图移出现场的过渡\r\n            当不弹出后堆栈时，片段被删除，隐藏或分离。 - 或 - 设置将用于将视图移出现场的过渡\r\n            当不弹出后堆栈时，片段被删除，隐藏或分离。\r\n","Reports usage of a particular document by namespace and ID.":"按名称空间和ID报告特定文档的用法。\r\n","android.app.admin.DevicePolicyManager.setCrossProfileCalendarPackages(android.content.ComponentName, java.util.Set)":"android.app.admin.devicepolicymanager.setcrossprofilecalendarpackages（android.content.componentname，java.util.set）\r\n","For apps developing against ":"用于开发反对的应用\r\n","android.app.Activity.startSearch(java.lang.String, boolean, android.os.Bundle, boolean)":"android.app.activity.startsearch（java.lang.string，boolean，android.os.os.bundle，boolean）\r\n","This API can be called by the following to remove a certificate and private key pair\n            installed under a given alias:\n            <ul>\n               <li>Device owner</li>\n               <li>Profile owner</li>\n               <li>Delegated certificate installer</li>\n               <li>Credential management app</li>\n            </ul>":"以下可以调用此API以删除证书和私钥对\r\n            在给定的别名下安装：\r\n            <ul>\r\n               <li>设备所有者</li>\r\n               <li>个人资料所有者</li>\r\n               <li>委派证书安装程序</li>\r\n               <li>凭证管理应用程序</li>\r\n            </ul>\r\n","M:Android.Views.Window.SetContentView(Android.Views.View,.LayoutParams)":"m：android.views.window.setContentView（android.views.view，.layoutparams）\r\n","DialogInterface.OnCancelListener":"DialogInterface.oncancellistener\r\n",", rather than prompting the user with\n            the standard password prompt.":"，而不是提示用户\r\n            标准密码提示。\r\n","Drop the shell permission identity adopted by a previous call to\n            ":"删除先前呼叫采用的外壳权限身份\r\n            \r\n","Sets the callback that will be called if a key is dispatched to the dialog.":"设置如果将键派遣到对话框，则将调用。\r\n","Text Appearance Styles \n":"文字外观样式\r\n\r\n","E:Android.App.ActionBar+Tab.TabSelected":"e：android.app.actionbar+tab.tabselected\r\n","Override this for receiving callbacks when a group has been expanded.":"覆盖此组是为了接收回调时的覆盖。\r\n","Action":"行动\r\n","If there is a failure in instantiating\n the given fragment class.  This is a runtime exception; it is not\n normally expected to happen.\n":"如果实例化失败\r\n 给定的片段类。这是一个运行时异常；它不是\r\n 通常预计会发生。\r\n\r\n","Returns the set of affiliation ids previously set via ":"返回以前通过\r\n","Specifies a style to use for subtitle text.":"指定用于字幕文本的样式。\r\n","android.app.usage.EventStats.getTotalTime()":"android.app.usage.eventstats.getTotalTime（）\r\n","This is a shortcut definition for the default menu key to use for invoking search.":"这是用于调用搜索的默认菜单键的快捷定义。\r\n","android.app.Activity.shouldUpRecreateTask(android.content.Intent)":"Android.App.Activity.ShouldUpreAtEtEtask（android.content.intent）\r\n","android.content.Context#startActivity(android.content.Intent, android.os.Bundle)\n            Context.startActivity(Intent, Bundle)":"android.content.context＃startActivity（android.content.intent，android.os.bundle）\r\n            context.startactivity（意图，束）\r\n","android.app.admin.DevicePolicyManager.setApplicationRestrictionsManagingPackage(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.setapplicationRestrictionsManagingPackage（android.content.componentname，java.lang.string）\r\n","Rotation constant: Freeze rotation to 180 degrees .":"旋转常数：冻结旋转至180度。\r\n","Description of the task's last state.":"任务的最后状态描述。\r\n","Dump a CrashInfo instance to a Printer.":"将CrashInfo实例转移到打印机。\r\n","Optional parameter which indicates if and how this widget can be\n             resized.":"可选参数，指示该小部件是否以及如何是\r\n             调整大小。\r\n","android.app.appsearch.PutDocumentsRequest.getGenericDocuments()":"android.app.app.appsearch.putdocumentsrequest.getGenericDocuments（）\r\n","Variant of the holographic (light) theme that has a solid (opaque) action bar\n         with an inverse color profile.":"全息（光）主题的变体，具有坚实的（不透明）动作栏\r\n         具有反颜色轮廓。\r\n","\n          pattern, then the ":"\r\n          模式，然后\r\n","Returns an intent to an ":"返回意图\r\n","android.app.blob.BlobStoreManager.openSession(long)":"android.app.blob.blobstoremanager.opensession（long）\r\n","Convenience function for writing either a PendingIntent or null pointer to\n            a Parcel.":"撰写悬浮物或无效指针的便利功能\r\n            一个包裹。\r\n"," class, particularly\n        JNI reference creation and destruction.\n      ":" 尤其是班级\r\n        JNI参考创造和破坏。\r\n      \r\n","android.app.Activity.onActivityResult(int, int, android.content.Intent)":"android.app.Activity.OnactivityResult（int，int，android.content.intent）\r\n","android.app.ActivityManager.isRunningInUserTestHarness()":"android.app.activityManager.isrunnunnunionusertestharness（）\r\n","android.app.admin.DevicePolicyManager.getPasswordMinimumNonLetter(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getPasswordminimumnonletter（android.content.componentname）\r\n","F:Android.App.UiModeManager.EnableCarMode":"F：android.app.uimodemanager.enablecarmode\r\n","Displays a list of all activities which can be performed\n            for a given intent.":"显示所有可以执行的活动的列表\r\n            给定的意图。\r\n","android.app.FragmentManager.getBackStackEntryAt(int)":"Android.App.FragmentManager.getBackstackentryat（int）\r\n","Specifies a style to use for title text.":"指定用于标题文本的样式。\r\n","Application process was killed because of the user request, for example,\n            user clicked the \"Force stop\" button of the application in the Settings,\n            or removed the application away from Recents.":"申请流程因用户要求而被杀死\r\n            用户在设置中单击了应用程序的“强制停止”按钮，\r\n            或将申请删除从恢复中。\r\n","Returns the actions that are contextual (that is, suggested because of the content of the\n            notification) out of the actions in this notification.":"返回上下文的动作（也就是建议，因为\r\n            通知）此通知中的操作。\r\n","android.app.FragmentController.execPendingActions()":"android.app.fragmentController.execpendentions（）\r\n","Adds a pause listener to this animator.":"将暂停侦听器添加到此动画师中。\r\n","Monitor for changes to the operating mode for the given op in the given app package.":"监视给定应用程序包中给定OP的操作模式的更改。\r\n","Gets the list view used in the dialog.":"获取对话框中使用的列表视图。\r\n","android.app.admin.DevicePolicyManager.removeUser(android.content.ComponentName, android.os.UserHandle)":"android.app.admin.devicepolicymanager.removeuser（android.content.componentname，android.os.userhandle）\r\n","Define the synthetic task stack that will be generated during Up navigation from\n            a different task.":"定义将在导航期间生成的合成任务堆栈\r\n            一项不同的任务。\r\n","If supplied, this string will be displayed as the text of the \"Search\" button.":"如果提供，此字符串将显示为“搜索”按钮的文本。\r\n","Flag indicating that this window should not be displayed at all.":"标志指示该窗口完全不应显示。\r\n","BluetoothDevice#PHY_LE_1M_MASK":"BluetoothDevice＃phy_le_1m_mask\r\n","android.app.NotificationChannel.isImportantConversation()":"android.app.notificationChannel.isimportantConversation（）\r\n","android.app.NotificationChannel.isDemoted()":"android.app.notificationChannel.isdemoted（）\r\n","android.app.Fragment.getTargetFragment()":"android.app.fragment.getTargetFragment（）\r\n"," field to be a view with the standard \"Latest Event\"\n layout.":" 字段是标准“最新事件”的视图\r\n 布局。\r\n","Ensures that a slice is in a pinned state.":"确保切片处于固定状态。\r\n"," to appear\n            in the status bar.":" 出现\r\n            在状态栏中。\r\n","android.app.admin.DevicePolicyManager.getStartUserSessionMessage(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getStartusersessessionMessage（android.content.componentname）\r\n","android.app.NotificationChannel.isConversation()":"android.app.notificationChannel.isconversation（）\r\n","android.app.admin.DevicePolicyManager.PERSONAL_APPS_SUSPENDED_EXPLICITLY":"android.app.admin.devicepolicymanager.personal_apps_suspended_explicly\r\n","This method must be overridden if an ":"如果是\r\n","android.accounts.AbstractAccountAuthenticator.confirmCredentials(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, android.os.Bundle)":"android.accounts.abstractaccontauthenticator.confirmcredentials（android.accounts.accountauthenticatorestorsponse，android.accounts.accounts.accounts.accounts.accounts.account，android.os.bundle）\r\n","The preferred TextAppearance for the primary text of list items.":"列表项目的主要文本的首选文本应用。\r\n","Return the full bread crumb title for the entry, or null if it\n does not have one.":"返回入口的完整面包面包屑标题，或者返​​回无效的\r\n 没有一个。\r\n","Get the current set of specs for a pinned slice.":"获取固定切片的当前规格。\r\n","android.Manifest.permission#MASTER_CLEAR":"android.manifest.permission＃master_clear\r\n","Sets a listener to be invoked when an item in the list is selected.":"选择列表中的项目时，设置要调用的侦听器。\r\n","android.app.PendingIntent.readPendingIntentOrNullFromParcel(android.os.Parcel)":"android.app.pendingIntent.ReadPendingIntentOrnullFromparcel（android.os.parcel）\r\n","Get the current state of the local Bluetooth adapter.":"获取本地蓝牙适配器的当前状态。\r\n"," if there are window animations.":" 如果有窗口动画。\r\n","This is called when the user is requesting an assist, to build a full\n            ":"当用户请求辅助时，这就是称为构建完整的\r\n            \r\n","android.os.ParcelFileDescriptor":"android.os.parcelfiledScriptor\r\n","Gets the resource id of the voice search language model string.":"获取语​​音搜索语言模型字符串的资源ID。\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_LOGO_URI":"android.app.admin.devicepolicymanager.extra_provisioning_logo_uri\r\n","Create a Bluetooth L2CAP Connection-oriented Channel (CoC) ":"创建蓝牙L2CAP连接的通道（COC）\r\n","A String extra holding the proxy bypass for the wifi network in\n            ":"字符串额外持有WiFi网络的代理旁路\r\n            \r\n","If true, makes the left edge of this view match the left edge of the parent.":"如果为true，则使此视图的左边缘与父的左边缘匹配。\r\n","\n          The intent filter categories.\n        ":"\r\n          意图滤波器类别。\r\n        \r\n","android.app.admin.DevicePolicyManager.ACTION_MANAGED_PROFILE_PROVISIONED":"android.app.admin.devicepolicymanager.action_managed_profile_provisioned\r\n"," XML attribute that was processed\n            in ":" 已处理的XML属性\r\n            在\r\n","\n          A user-readable label for the parent component.\n        ":"\r\n          父部件的用户可读标签。\r\n        \r\n","The job used up its maximum execution time and timed out.":"该作业消耗了其最大执行时间并计时。\r\n","android.app.Dialog.onKeyLongPress(int, android.view.KeyEvent)":"android.app.dialog.onkeylongpress（int，android.view.keyevent）\r\n","Finishes the session started by #startAddAccountSession or\n            #startUpdateCredentials by installing the account to device with\n            AccountManager, or updating the local credentials.":"结束会议由#startaddaccountsession或\r\n            #startupdatecredentials通过将帐户安装到设备上\r\n            帐户管理器，或更新本地凭据。\r\n","android.animation.BidirectionalTypeConverter.invert()":"android.animation.bidirectionalTypeconverter.invert（）\r\n","Notification category: temporarily sharing location.":"通知类别：临时共享位置。\r\n","Set the message to display using the given resource id.":"设置使用给定资源ID显示的消息。\r\n","android.app.admin.DevicePolicyManager.FLAG_PARENT_CAN_ACCESS_MANAGED":"android.app.admin.devicepolicymanager.flag_parent_can_access_managed\r\n","android.app.usage.UsageStatsManager.STANDBY_BUCKET_FREQUENT":"android.app.usage.usagestatsmanager.standby_bucket_frequent\r\n","Create an IntArrayEvaluator that does not reuse the animated value.":"创建一个不重用动画值的intarrayevaluator。\r\n","Callback to indicate that ":"回调以表明\r\n","Indicates whether an application supports the normal screen\n             form-factors.":"指示应用程序是否支持普通屏幕\r\n             形式因子。\r\n","android.app.UiAutomation.ROTATION_FREEZE_0":"android.app.uiautomation.rotation_freeze_0\r\n","Allows access to the flashlight \n":"允许访问手电筒\r\n\r\n","Called when the window has been attached to the window manager.":"将窗口连接到窗口管理器时调用。\r\n","Returns the controller of specified logical display for the accessibility button within the\n            system's navigation area.":"返回为“可访问性”按钮的指定逻辑显示的控制器\r\n            系统的导航区。\r\n","Attempts to cancel execution of this task.":"试图取消执行此任务。\r\n","android.app.Activity.startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)":"android.app.activity.startintentesenderfromchild（android.app.activity，android.content.intentsender，int，android.content.intent，int，int，int，int）\r\n","Called by a profile owner or device owner to retrieve a list of delegate packages that were\n            granted a delegation scope.":"由配置文件所有者或设备所有者拨打以检索的委托包列表\r\n            授予代表团范围。\r\n"," with no action bar \n":" 没有动作栏\r\n\r\n","AuthenticatorException":"Authenticatorexception\r\n","android.app.Instrumentation.callActivityOnRestart(android.app.Activity)":"android.app.instrumentation.callactivityOnrestart（android.app.Activity）\r\n","Notifies the activity that an action mode has finished.":"通知活动模式已完成的活动。\r\n","android.animation.TimeInterpolator":"android.animation.TimeInterPolator\r\n","#enableLights(boolean) enabled":"#EnableLights（boolean）启用\r\n",":\n            automatically switch night mode on and off based on the time.":"：\r\n            根据时间自动打开和关闭夜间模式。\r\n","Attribute whether the accessibility service wants to be able to request enhanced\n             web accessibility enhancements.":"属性访问性服务是否希望能够请求增强\r\n             Web可访问性增强功能。\r\n","Describes an application crash.":"描述应用程序崩溃。\r\n","android.app.SharedElementCallback.onRejectSharedElements(java.util.List)":"android.app.sharedelementCallback.OnrejectsharedElements（java.util.list）\r\n","The user manually entered the data.":"用户手动输入数据。\r\n","\n            to restore a single entity from the restore data set.":"\r\n            从还原数据集还原单个实体。\r\n","Value the animation animates to.":"重视动画动画。\r\n","android.app.admin.DevicePolicyManager.PERSONAL_APPS_NOT_SUSPENDED":"android.app.admin.devicepolicymanager.personal_apps_not_suspended\r\n","android.app.ActivityManager.isUserAMonkey()":"android.app.activitymanager.isuseramonkey（）\r\n","#ACTION_VIEW_DOWNLOADS":"#action_view_downloads\r\n","Allows an application to open windows that are for use by parts\n         of the system user interface.":"允许应用程序打开供零件使用的窗口\r\n         系统用户界面的。\r\n","android.app.appsearch.GenericDocument.getTtlMillis()":"android.app.appsearch.genericdocument.getttlmillis（）\r\n","android.app.ApplicationExitInfo.REASON_INITIALIZATION_FAILURE":"android.app.applicationexitinfo.reason_initialization_failure\r\n","ConversationStatus":"对话status\r\n","Value signifying that the user has not expressed an importance.":"值表示用户没有表达重要性。\r\n","android.animation.ValueAnimator.ofObject(android.animation.TypeEvaluator, java.lang.Object)":"android.animation.valueAnimator.OfObject（android.animation.typeevaluator，java.lang.object）\r\n","A simple ListView item layout which can contain text and support (single or multiple) item selection.":"一个简单的ListView项目布局，可以包含文本和支持（单个或多个）项目选择。\r\n","Moves all Fragments managed by the controller's FragmentManager\n            into the create state.":"移动由控制器的FragmentManager管理的所有片段\r\n            进入创建状态。\r\n","Returns a Bundle that contains the Intent of the activity that can be used to edit the\n            properties.":"返回包含活动的意图的捆绑包，可用于编辑\r\n            特性。\r\n","android.app.AppOpsManager.OPSTR_BODY_SENSORS":"android.app.appopsmanager.opptr_body_sensors\r\n","Indicates if the service is used to assist users with disabilities.":"指示该服务是否用于协助残疾用户。\r\n","android.R.attr#foregroundServiceType":"android.r.attr＃foregroundServiceType\r\n","#addAppTask":"#addapptask\r\n","android.app.Presentation.getDisplay()":"android.app.presentation.getDisplay（）\r\n","Subtype to tag an item as representing a time in milliseconds since midnight,\n            January 1, 1970 UTC.":"从午夜开始以毫秒为代表的时间来标记一个物品的子类型，\r\n            1970年1月1日UTC。\r\n","android.app.admin.DevicePolicyManager.RESET_PASSWORD_REQUIRE_ENTRY":"android.app.admin.devicepolicymanager.reset_password_require_entry\r\n","Used for permissions that access the sync settings or sync\n         related information.":"用于访问同步设置或同步的权限\r\n         相关信息。\r\n","Action to go home.":"行动回家。\r\n","Create a new session using the given ":"使用给定的新会话创建一个新会话\r\n"," contain the id of the source view.":" 包含源视图的ID。\r\n","ServiceConnection":"服务连接\r\n","Returns whether or not notifications posted to this channel are shown on the lockscreen in\n            full or redacted form. -or- Sets whether notifications posted to this channel appear on the lockscreen or not, and if so,\n            whether they appear in a redacted form.":"返回是否发布到此频道的通知在锁屏中显示\r\n            完整或编辑的形式。 - 或设置发布到此频道的通知是否出现在锁屏上，如果是，则\r\n            它们是否以编辑形式出现。\r\n","android.app.people.ConversationStatus.ACTIVITY_ANNIVERSARY":"android.app.people.conversationstatus.activity_anniversary\r\n","Ask that the task associated with a given task ID be moved to the\n            front of the stack, so it is now visible to the user.":"要求将与给定任务ID关联的任务移至\r\n            堆栈的前面，因此用户现在可以看到它。\r\n","android.animation.TypeEvaluator":"android.animation.typeevaluator\r\n","android.app.ProgressDialog":"android.app.progressdialog\r\n","Restore the state of the dialog from a previously saved bundle.":"从先前保存的捆绑包中恢复对话框的状态。\r\n","#getIntent":"#getintent\r\n","Highest ":"最高\r\n","Group of permissions that are related to system APIs.":"与系统API相关的一组权限。\r\n","Storage is out of space, and no more space could be reclaimed.":"存储空间之外，不再可以回收空间。\r\n","Gets the frame statistics for a given window.":"获取给定窗口的框架统计信息。\r\n","Widget is not resizable.":"小部件不可解析。\r\n","android.app.admin.SecurityLog.TAG_LOGGING_STOPPED":"android.app.admin.securitylog.tag_logging_stopped\r\n","android.app.Activity.isChangingConfigurations()":"android.app.activity.ischangingConfigurations（）\r\n","\n          A reference to a drawable resource containing the image definition.\n        ":"\r\n          对包含图像定义的可绘制资源的引用。\r\n        \r\n","Defines the next view to give focus to when the next focus is\n             ":"定义下一个观点，以将重点放在下一个焦点时\r\n             \r\n","ed by the app.":"由应用程序编辑。\r\n","Request":"要求\r\n","android.accounts.AccountManager.KEY_ANDROID_PACKAGE_NAME":"android.accounts.accountmanager.key_android_package_name\r\n","android.app.slice.SliceManager.bindSlice(android.content.Intent, java.util.Set)":"android.app.slice.slicemanager.bindslice（android.content.intent，java.util.set）\r\n","Creates an account based on credentials provided by the authenticator instance of another\n            user on the device, who has chosen to share the account with this user.":"根据另一个实例提供的凭据创建帐户\r\n            设备上选择与此用户共享帐户的用户。\r\n","android.accounts.AccountManager.KEY_CALLER_PID":"android.accounts.accountmanager.key_caller_pid\r\n","android.app.ListFragment.setListShownNoAnimation(boolean)":"android.app.listfragment.SetlistShownnoAnimation（布尔值）\r\n","Called by a profile or device owner to clear a user restriction specified by the key.":"由配置文件或设备所有者调用以清除密钥指定的用户限制。\r\n","android.app.AppOpsManager.checkOp(java.lang.String, int, java.lang.String)":"android.app.appopsmanager.checkop（java.lang.string，int，java.lang.string）\r\n","android.appwidget.AppWidgetManager.META_DATA_APPWIDGET_PROVIDER":"android.appwidget.appwidgetManager.meta_data_appwidget_provider\r\n",") that contains the list of possible sizes, in dips, a\n            widget instance can take.":"）包含可能的尺寸列表，以倾角为a\r\n            小部件实例可以接受。\r\n","Context menu ID for the \"Cut\" menu item to copy and delete the currently\n       selected (or all) text in a text view to the clipboard.":"“剪切”菜单项的上下文菜单ID复制并删除当前\r\n       在剪贴板的文本视图中选择（或所有）文本。\r\n","#setTargetFragment":"#settargetFragment\r\n","Returns the information about the wallpaper if the current wallpaper is\n            a live wallpaper component.":"如果当前墙纸为\r\n            实时墙纸组件。\r\n","BackupDataInput#getDataSize()":"backupdatainput＃getDatasize（）\r\n","Broadcast sent when the device's UI has switch away from car mode back\n            to normal mode.":"当设备的UI已从汽车模式退回时，发送的广播发送\r\n            达到正常模式。\r\n","If set to true, this service will run under a special process\n             that is isolated from the rest of the system.":"如果设置为true，此服务将在特殊过程中运行\r\n             与系统的其余部分隔离。\r\n","android.app.Fragment.isDetached()":"android.app.fragment.isdetached（）\r\n","android.app.ActionBar.setHomeAsUpIndicator(android.graphics.drawable.Drawable)":"android.app.actionbar.sethomeAsupIndicator（android.graphics.drawable.drabable）\r\n","android.app.ListActivity.getListView()":"android.app.listactivity.getListView（）\r\n","Intent that is broadcast when the status of an ":"当一个状态的状态\r\n","Constructs and returns an ObjectAnimator that animates coordinates along a <code>Path</code>\n            using two properties.":"构造并返回一个对objectanimator，该对象启示器沿<code> path </code>进行动画坐标。\r\n            使用两个属性。\r\n","Takes a screenshot.":"拍摄屏幕截图。\r\n","android.app.job.JobScheduler":"android.app.job.jobscheduler\r\n","Sends the key events corresponding to the text to the app being\n            instrumented.":"将与文本相对应的关键事件发送到应用程序\r\n            乐器。\r\n","Indicates that a new root certificate has been removed from system's trusted credential\n            storage.":"表示已从系统的可信赖凭据中删除了新的根证书\r\n            贮存。\r\n","Return the total bytes used by app files in the shared/external storage\n            hosted on this volume.":"返回共享/外部存储中应用程序使用的总字节\r\n            在此卷上托管。\r\n","Name of the author of this component, e.g.":"该组件的作者的名称，例如\r\n","android.bluetooth.BluetoothGattCharacteristic.PROPERTY_INDICATE":"android.bluetooth.bluetoothgattcharacteristic.property_indicate\r\n","Get the current Bluetooth scan mode of the local Bluetooth adapter.":"获取本地蓝牙适配器的当前蓝牙扫描模式。\r\n","Group of permissions that are related to the other applications\n         installed on the system.":"与其他应用程序相关的一组许可\r\n         安装在系统上。\r\n","Flex time for this job.":"这项工作的灵活时间。\r\n","android.app.blob.BlobStoreManager.abandonSession(long)":"android.app.blob.blobstoremanager.abandonsession（long）\r\n","android.accounts.Account":"android.accounts.account\r\n","android.app.ActivityManager.clearApplicationUserData()":"android.app.activityManager.ClearApplicationUserData（）\r\n","Address is either resolvable, non-resolvable or static.":"地址可以解析，不可辨别或静态。\r\n","Sets the style of this ProgressDialog, either ":"设置此progressDialog的样式\r\n","android.app.AppOpsManager.checkPackage(int, java.lang.String)":"android.app.appopsmanager.checkpackage（int，java.lang.string）\r\n","Create a new blob identifier.":"创建一个新的BLOB标识符。\r\n","AppSearchSession":"AppSearchSession\r\n","Intent":"意图\r\n","The intent to execute when the expanded status entry is clicked.":"单击扩展的状态条目时执行的意图。\r\n","Begin postponed transitions after ":"开始推迟过渡\r\n","Dismiss a dialog that was previously shown via ":"解散以前通过的对话框\r\n","#KEYGUARD_DISABLE_FACE":"#keyguard_disable_face\r\n","If set, specifies that this TextView has a numeric input method\n             and that these specific characters are the ones that it will\n             accept.":"如果设置，请指定此文本视图具有数字输入方法\r\n             这些特定字符是它将\r\n             接受。\r\n","An error report about an application that's not responding.":"有关未响应的应用程序的错误报告。\r\n","Return the class name of the receiver component that implements\n            this device admin.":"返回实施接收器组件的类名称\r\n            此设备管理员。\r\n","android.accounts.AccountManager":"android.accounts.accountmanager\r\n","translation in x of the view.":"在视图的X中翻译。\r\n","Obtains a list of slices that are descendants of the specified Uri.":"获得指定URI后代的切片列表。\r\n"," instance\n             in the following way:\n             \n             ":" 实例\r\n             以下面的方式：\r\n             \r\n             \r\n","The drawable to be drawn to the start of the text.":"可绘制的绘制文本开始。\r\n","Allows applications to set the wallpaper \n":"允许应用程序设置墙纸\r\n\r\n","Return the size of app.":"返回应用程序的大小。\r\n","The user has performed a swipe right and left gesture on the touch screen.":"用户在触摸屏上进行了左右滑动手势。\r\n","Builder":"建筑商\r\n","android.app.Activity.releaseInstance()":"android.app.Activity.ReleaseInstance（）\r\n","android.app.WallpaperManager":"android.app.wallpapermanager\r\n","Query network usage statistics details for a given uid and tag.":"查询网络使用统计信息详细信息的详细信息和标签。\r\n","Return whether currently in lock task mode.":"返回当前处于锁定任务模式。\r\n","Inflate and return the default layout requested by AppWidget provider.":"充气并返回AppWidget提供商要求的默认布局。\r\n","A Drawable resource providing an extended graphical logo for its\n         associated item.":"可绘制的资源为其提供扩展图形徽标\r\n         关联项目。\r\n","android.app.admin.DeviceAdminReceiver#onChoosePrivateKeyAlias":"android.app.admin.deviceadminreceiver＃onChoosePrivateKeyalias\r\n","android.bluetooth.BluetoothGattCharacteristic.PERMISSION_WRITE_ENCRYPTED":"android.bluetooth.bluetoothgattcharacteristic.permission_write_encrypted\r\n","android.os.PersistableBundle":"android.os.persistableBundle\r\n","android.app.PendingIntent.getCreatorPackage()":"android.app.pendingIntent.getCreatorPackage（）\r\n","This invoked when the AccountManager starts up and whenever the account\n            set changes.":"当帐户管理器启动时，每当帐户启动时调用了这一点\r\n            设置更改。\r\n","when an HTTP code was received that download manager\n can't handle.":"收到HTTP代码时，下载经理\r\n 无法处理。\r\n"," when a suggestion\n            should not be stored as a shortcut in global search.":" 当建议时\r\n            不应将其作为全球搜索中的快捷方式存储。\r\n","Allows applications to access information about Wi-Fi networks \n":"允许应用程序访问有关Wi-Fi网络的信息\r\n\r\n","android.app.admin.DevicePolicyManager.DELEGATION_KEEP_UNINSTALLED_PACKAGES":"android.app.admin.devicepolicymanager.delegation_keep_uninstalled_pa​​ckages\r\n","This style is for smaller screens; values-xlarge defines a version\n         for larger screens.":"这种样式适用于较小的屏幕； values-xlarge定义了一个版本\r\n         对于较大的屏幕。\r\n","android.app.Activity.onStart()":"android.app.activity.onstart（）\r\n"," that is able to change its\n       background state to indicate when it is activated (that is checked by\n       a ListView).":" 能够改变其\r\n       背景状态要指示何时激活它（通过\r\n       listView）。\r\n","Color of link text (URLs), when used in a light theme.":"链接文本（URL）的颜色，当在光主题中使用时。\r\n","\n              Construct a TimeLogger instance and start measuring time immediately, if the ":"\r\n              构建一个时间表实例，并立即开始测量时间\r\n","Allows an application to act as an AccountAuthenticator for\n         the AccountManager \n":"允许应用程序充当帐户\r\n         帐户管理器\r\n\r\n","android.app.Dialog.onActionModeFinished(android.view.ActionMode)":"android.app.dialog.onactionModeFined（android.view.actionMode）\r\n","android.app.DownloadManager.getMaxBytesOverMobile(android.content.Context)":"android.app.downloadmanager.getmaxbytesovermobile（android.content.context）\r\n","android.app.Notification.EXTRA_HANG_UP_INTENT":"android.app.notification.extra_hang_up_intent\r\n","android.app.FragmentHostCallback":"Android.App.FragmentHostCallback\r\n","Return any currently active request that was submitted with the given name.":"返回给定名称提交的任何当前活动请求。\r\n"," of keys mapped to instances of ":" 映射到实例的钥匙\r\n","android.app.job.JobScheduler.enqueue(android.app.job.JobInfo, android.app.job.JobWorkItem)":"android.app.job.jobscheduler.enqueue（android.app.job.jobinfo，android.app.job.job.jobworkitem）\r\n","Current status of the download, as one of the STATUS_* constants.":"下载的当前状态，作为状态_*常数之一。\r\n","The preferred padding along the start edge of list items.":"沿列表项目的开始边缘的首选填充。\r\n","Create the AppWidgetHostView for the given widget.":"为给定的小部件创建AppWidgetHostView。\r\n","android.app.Instrumentation.getBinderCounts()":"android.app.instrumentation.getBindercounts（）\r\n","Provides a list that does not contain any\n recent tasks that currently are not available to the user.":"提供不包含任何内容的列表\r\n 当前用户目前无法使用的最新任务。\r\n","Called by a device admin to set the password expiration timeout.":"由设备管理员调用以设置密码到期超时。\r\n","Special option for window animations: if this window is on top\n             of a wallpaper, don't animate the wallpaper with it.":"窗口动画的特殊选项：如果此窗口在顶部\r\n             在墙纸上，不要用它来使墙纸动画。\r\n","android.app.UiModeManager.MODE_NIGHT_CUSTOM":"android.app.uimodemanager.mode_night_custom\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_SKIP_ENCRYPTION":"android.app.admin.devicepolicymanager.extra_provisioning_skip_encryption\r\n","BigTextStyle#bigText(CharSequence)":"bigTextstyle＃bigText（charsequence）\r\n","android.app.Activity.finishAfterTransition()":"android.app.activity.finishaftertransition（）\r\n","android.app.DownloadManager.STATUS_SUCCESSFUL":"android.app.downloadmanager.status_successful\r\n","Uri path for shortcut validation.":"快捷方式验证的URI路径。\r\n","field that should be\n set if this notification represents a currently running service. ":"应该是\r\n 设置该通知表示当前运行的服务。\r\n","Return <code>getActivity().":"返回<code> getActivity（）。\r\n","Return the basic description of the kind of network this job requires.":"返回该作业所需的网络类型的基本描述。\r\n","android.app.admin.DevicePolicyManager.getDelegatedScopes(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.getDelegatedScopes（android.content.componentname，java.lang.string）\r\n","android.animation.PropertyValuesHolder.setObjectValues(java.lang.Object)":"android.animation.propertyvaluesholder.setObjectValues（java.lang.object）\r\n","android.app.appsearch.GenericDocument.getPropertyLong(java.lang.String)":"android.app.appsearch.genericdocument.getPropertylong（java.lang.string）\r\n","android.app.admin.DevicePolicyManager.getBindDeviceAdminTargetUsers(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getBindDeviceadMintArgetUsers（android.content.componentname）\r\n","Set the progress that this notification represents.":"设置此通知代表的进度。\r\n","AccessibilityEvent":"AccessibilityEvent\r\n","Allows an application to receive SMS messages.":"允许应用程序接收SMS消息。\r\n","Sets the sound that should be played for notifications posted to this channel and its\n            audio attributes.":"设置应播放的声音，以便发布到此频道及其的声音\r\n            音频属性。\r\n","OperationCanceledException":"操作CanceLedException\r\n","Gets whether the activity is to be launched into LockTask mode.":"了解该活动是否要启动到LockTask模式。\r\n","Drawable to draw above list content.":"可绘制以绘制上面的列表内容。\r\n","Percentage of the battery that was used up by the process.":"该过程用完的电池百分比。\r\n","F:Android.App.Admin.DevicePolicyManager.SetKeyguardDisabledFeatures":"f：android.app.admin.devicepolicymanager.setKeyGuardDisabledFeatures\r\n",". -or- Control whether the shown Dialog is cancelable.":"。 - 或 - 控制显示的对话框是否可取消。\r\n","View ID of the text editor inside of an extracted text layout.":"查看提取文本布局内部文本编辑器的ID。\r\n","Application process was killed because its dependency was going away, for example,\n            a stable content provider connection's client will be killed if the provider is killed.":"申请过程被杀死是因为其依赖性消失了，例如\r\n            如果提供者被杀，稳定的内容提供商连接的客户将被杀死。\r\n","GlobalSearchSession":"GlobalSearchSession\r\n","android.app.slice.Slice.getUri()":"android.app.slice.slice.geturi（）\r\n","\n          A reference to a style resource defining an overall theme for the\n          application.\n        ":"\r\n          对样式资源定义整体主题的引用\r\n          应用。\r\n        \r\n","A unit of work that can be enqueued for a job using\n            ":"可以使用的工作单位\r\n            \r\n","android.app.admin.DevicePolicyManager.getSecondaryUsers(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getsecondaryusers（android.content.componentname）\r\n","Return the intent at the specified index for modification.":"在指定的索引上返回意图进行修改。\r\n","#addOnBackStackChangedListener(OnBackStackChangedListener)":"#AddonBackStackChangedListener（OnbackStackChangedListener）\r\n","This is called when the view is detached from a window.":"当视图从窗口分离时，这就是称为称为的。\r\n","Identifier for the child that represents the drawer's content.":"代表抽屉内容的孩子的标识符。\r\n","Flag indicating whether this window's Action Bar should overlay\n             application content.":"指示此窗口的动作栏是否应覆盖的标志\r\n             申请内容。\r\n","This method tells the object to use appropriate information to extract\n            ending values for the animation.":"此方法告诉对象使用适当的信息提取\r\n            动画的结束值。\r\n","Whether or not this task has any running activities.":"该任务是否有任何运行活动。\r\n","Reference to a theme that should be used to inflate widgets\n             and layouts destined for the action bar.":"引用应该用来充气小部件的主题\r\n             并注定要进行动作栏。\r\n","Turn on the local Bluetooth adapter&mdash;do not use without explicit\n            user action to turn on Bluetooth.":"打开本地蓝牙适配器＆mdash;如果没有明确的\r\n            用户操作以打开蓝牙。\r\n"," that the user is going through to\n            interact with this activity.":" 用户正在使用\r\n            与此活动相互作用。\r\n","android.bluetooth.BluetoothAdapter.ERROR":"android.bluetooth.bluetoothadapter.error\r\n","Called by a profile owner or device owner to retrieve a list of the scopes given to a\n            delegate package.":"由配置文件所有者或设备所有者调用以检索给出的范围的列表\r\n            委托包。\r\n","android.app.Activity.dismissKeyboardShortcutsHelper()":"android.app.activity.dismisskeyboardshortcutshelper（）\r\n","android.app.appsearch.ReportSystemUsageRequest.getUsageTimestampMillis()":"android.app.appsearch.reportsystemusagerequest.getusagetimestampmillis（）\r\n","Get the available info about the AppWidget.":"获取有关AppWidget的可用信息。\r\n","Rotation constant: Freeze rotation to its current state.":"旋转常数：将旋转冻结至其当前状态。\r\n","Perform instantiation of an ":"执行实例化\r\n","android.app.ProgressDialog.show(android.content.Context, java.lang.CharSequence, java.lang.CharSequence, boolean, boolean)":"android.app.progressdialog.show（android.content.context，java.lang.Charsequence，java.lang.Charsequence，boolean，boolean）\r\n","#ACTION_LOCAL_NAME_CHANGED":"#action_local_name_changed\r\n","Flag indicating whether this window should have an Action Bar\n             in place of the usual title bar.":"标志指示此窗口是否应该具有动作栏\r\n             代替通常的标题栏。\r\n","android.accessibilityservice.AccessibilityServiceInfo.FLAG_REPORT_VIEW_IDS":"Android.AccessibilityService.Accessibilityserviceinfo.flag_report_view_ids\r\n","android.app.appsearch.AppSearchSession":"android.app.appsearch.appsearchsession\r\n","Represents a remote action that can be called from another process.":"表示可以从另一个过程调用的远程操作。\r\n","android.accessibilityservice.AccessibilityService.GLOBAL_ACTION_ACCESSIBILITY_BUTTON_CHOOSER":"Android.AccessibilityService.Accessibilityservice.global_action_accessibility_button_chooser\r\n","Allows an application to change whether an application component (other than its own) is\n         enabled or not.":"允许应用程序更改应用程序组件（其本身除外）是否为\r\n         启用与否。\r\n","Specifies a style resource to use for an indeterminate progress spinner.":"指定用于不确定进度旋转器的样式资源。\r\n","Return the size of all data.":"返回所有数据的大小。\r\n","android.app.Activity.showDialog(int, android.os.Bundle)":"android.app.activity.showdialog（int，android.os.bundle）\r\n","Specifies subtitle text used for navigationMode=\"normal\" \n         ":"指定用于navigationmode =“ normal”的字幕文本\r\n         \r\n","The drawable to be drawn to the left of the text.":"可在文本左侧绘制的绘制。\r\n"," that describes this service.":" 描述了这项服务。\r\n","Subtype to indicate that this content has a toggle action associated with it.":"子类型表示此内容具有与之关联的切换操作。\r\n","This evaluator can be used to perform type interpolation between ":"该评估器可用于执行类型的插值\r\n","#KEYGUARD_DISABLE_SECURE_NOTIFICATIONS":"#keyguard_disable_secure_notifications\r\n","android.app.backup.BackupAgent.fullBackupFile(java.io.File, android.app.backup.FullBackupDataOutput)":"android.app.backup.backupent.fullbackupfile（java.io.file，android.app.backup.fullbackupdataOutput）\r\n","Print the Service's state into the given stream.":"将服务的状态打印到给定的流中。\r\n","Dismiss the fragment and its dialog.":"解散片段及其对话。\r\n","The feedback type an ":"反馈类型\r\n","If true, makes the start edge of this view match the start edge of the parent.":"如果为true，则使此视图的开始边缘与父的起始边缘匹配。\r\n","Text color, typeface, size, and style for \"medium\" inverse text.":"文本颜色，字体，大小和样式，用于“中等”逆文本。\r\n","android.app.Dialog.registerForContextMenu(android.view.View)":"android.app.dialog.registerforcontextmenu（android.view.view）\r\n","#setStructuredData":"#SetStructrusedData\r\n","Closes the enumeration.":"关闭枚举。\r\n","Gets the windows on the screen of all displays.":"获取所有显示器的屏幕上的窗口。\r\n","An exception thrown by ":"一个例外\r\n","Unregister an ":"解注册\r\n","Called by the device owner (since API 26) or profile owner (since API 24) to set the name of\n            the organization under management.":"设备所有者（自API 26以来）或配置文件所有者（自API 24以来）调用以设置名称的名称\r\n            管理中的组织。\r\n","android.app.backup.BackupAgent.onRestore(android.app.backup.BackupDataInput, int, android.os.ParcelFileDescriptor)":"android.app.backup.backUpagent.Onrestore（android.app.backup.backup.backupdatainput，int，android.os.parcelfiledScriptor）\r\n","android.app.DownloadManager.enqueue(android.app.Request)":"android.app.downloadmanager.enqueue（android.app.request）\r\n","#addAccount":"＃新增帐户\r\n","Disable the keyguard from showing.":"禁用关键守卫。\r\n","Creates a new failed ":"创建一个新的失败\r\n","android.app.admin.DevicePolicyManager.isPreferentialNetworkServiceEnabled()":"android.app.admin.devicepolicymanager.ispreferentialnetworkServiceEnabled（）\r\n","android.app.UiAutomation.setRunAsMonkey(boolean)":"android.app.uiautomation.setrunasmonkey（布尔值）\r\n","android.app.Activity.findViewById(int)":"android.app.activity.findviewbyid（int）\r\n","The summary for the item.":"该项目的摘要。\r\n","Color that matches (as closely as possible) the window background.":"与窗口背景匹配（尽可能紧密）的颜色。\r\n","android.app.ActivityOptions.makeThumbnailScaleUpAnimation(android.view.View, android.graphics.Bitmap, int, int)":"android.app.activityOptions.makethumbnailscaleupanimation（android.view.view，android.graphics.bitmap，int，int）\r\n","Gets application usage stats for the given time range, aggregated by the specified interval.":"获取给定时间范围的应用程序使用统计数据，由指定间隔汇总。\r\n","launching":"发射\r\n","Theme for a window without an action bar that will be displayed either full-screen\n         on smaller screens (small, normal) or as a dialog on larger screens\n         (large, xlarge).":"没有动作栏的窗户的主题，将显示全屏\r\n         在较小的屏幕上（小，正常）或较大屏幕上的对话框\r\n         （大，Xlarge）。\r\n","The event types an ":"活动类型\r\n","Invalidates the activity's options menu.":"使活动的选项菜单无效。\r\n","Notification":"通知\r\n","Allows an application to install a location provider into the Location Manager \n":"允许应用程序将位置提供商安装到位置管理器中\r\n\r\n","When set to true, forces row boundaries to appear in the same order\n        as row indices.":"设置为true时，迫使行边界以相同的顺序出现\r\n        作为行索引。\r\n","A coordinate in the X dimension.":"X尺寸中的坐标。\r\n","Control whether this activity's main window is visible.":"控制此活动的主窗口是否可见。\r\n","Used as an extra field in ":"用作额外的领域\r\n","android.app.Notification.EXTRA_REMOTE_INPUT_HISTORY":"android.app.notification.extra_remote_input_history\r\n","Abandons an existing session and deletes any data that was written to that session so far.":"放弃现有会话，并删除到目前为止写入该会话的所有数据。\r\n","android.app.NotificationManager.AUTOMATIC_RULE_STATUS_REMOVED":"android.app.notificationmanager.automatic_rule_status_remaved\r\n","An object that can apply a rich notification style to a ":"可以将丰富通知样式应用于一个的对象\r\n"," of an image to be\n            shown in ":" 图像\r\n            显示在\r\n","android.content.Context#startService":"android.content.context＃starterVice\r\n","Creates an alert dialog that uses the default alert dialog theme.":"创建一个使用默认警报对话框主题的警报对话框。\r\n","android.R.styleable#AccessibilityService_canPerformGestures":"Android.r.Stylable＃consectibilityService_canperformestures\r\n","TestLooperManager#release":"testloopermanager＃发行\r\n","#startActivityForResult":"#startactivityForresult\r\n","android.app.admin.SecurityLog.TAG_SYNC_SEND_FILE":"android.app.admin.securitylog.tag_sync_send_file\r\n","Specify that an activity can be moved out of a task it is in to\n         the task it has an affinity for when appropriate.":"指定一个活动可以从其执行任务中移出\r\n         它在适当时具有亲和力的任务。\r\n","Request the Keyboard Shortcuts screen to show up.":"请求键盘快捷屏幕显示。\r\n"," for a\n            specific time range.":" 为一个\r\n            特定时间范围。\r\n","android.app.Dialog.setOwnerActivity(android.app.Activity)":"android.app.dialog.setowneractivity（android.app.Activity）\r\n","Sets whether notifications posted to this channel should display notification lights,\n            on devices that support that feature.":"设置是否发布到此频道的通知应显示通知灯，\r\n            在支持该功能的设备上。\r\n"," display a check mark.":" 显示一个复选标记。\r\n","android.app.admin.DevicePolicyManager.isAlwaysOnVpnLockdownEnabled(android.content.ComponentName)":"android.app.admin.devicepolicymanager.isalwaysonvpnlockdownenabled（android.content.componentname）\r\n","Indicates that an admin has set a user restriction.":"表示管理员设置了用户限制。\r\n","android.app.job.JobInfo.isPersisted()":"android.app.job.jobinfo.ispersisted（）\r\n","Allows access to the list of accounts in the Accounts Service \n":"允许访问帐户服务中的帐户列表\r\n\r\n","#getResultCode":"#getResultCode\r\n","Return the InputStream to the traces that was taken by the system\n            prior to the death of the process; typically it'll be available when\n            the reason is ":"将输入流返回系统所采用的轨迹\r\n            在该过程死亡之前；通常，当\r\n            原因是\r\n","may":"可能\r\n","Theme to use for presentations spawned from this theme.":"从此主题产生的演示文稿的主题。\r\n","The meta-data key that allows an activity to easily be linked directly to a slice.":"允许活动轻松将活动直接链接到切片的元数据键。\r\n","android.accessibilityservice.AccessibilityButtonController":"Android.AccessibilityService.AccostibilitybuttonController\r\n","android.app.NotificationChannel.getId()":"android.app.notificationChannel.getID（）\r\n","android.app.Instrumentation.runOnMainSync(java.lang.Runnable)":"android.app.instrumentation.runonmainsync（java.lang.runnable）\r\n","\n                     and used according to terms described in the \n                    ":"\r\n                     并根据所述的术语使用\r\n                    \r\n","Default style for informational Preference.":"信息偏好的默认样式。\r\n","android.app.NotificationManager.getNotificationChannel(java.lang.String, java.lang.String)":"android.app.notificationmanager.getNotificationChannel（java.lang.string，java.lang.string）\r\n","android:id":"Android：ID\r\n","#onSharedElementStart(java.util.List,\n            java.util.List, java.util.List)":"#onsharedelementstart（java.util.list，\r\n            java.util.list，java.util.list）\r\n","Returns true if animations are running which animate layout-related properties.":"如果动画正在运行哪个动画布局相关属性，则返回true。\r\n","android.app.admin.DevicePolicyManager.clearCrossProfileIntentFilters(android.content.ComponentName)":"android.app.admin.devicepolicymanager.clearcrossprofileintentfilters（android.content.componentname）\r\n","The current standby bucket requires that the job stop now.":"当前的待机桶要求现在停止工作。\r\n","M:Android.App.AppOpsManager.NoteOp(System.String,System.Int32,System.Int32)":"m：android.app.appopsmanager.noteop（System.String，System.int32，System.int32）\r\n","when the download is currently running.":"下载当前正在运行时。\r\n","Intent#ACTION_WEB_SEARCH":"意图＃action_web_search\r\n","Invalidate the attached activity's options menu as necessary.":"必要时使附件活动的选项菜单无效。\r\n","android.app.MediaRouteButton.getRouteTypes()":"android.app.mediaroutebutton.getRouteTypes（）\r\n","android.app.admin.DevicePolicyManager.setPasswordMinimumNumeric(android.content.ComponentName, int)":"android.app.admin.devicepolicymanager.setpasswordwordwordminimumnumeric（android.content.componentname，int）\r\n"," on the\n            Window of this Activity to return the currently focused view.":" 在\r\n            此活动的窗口以返回当前重点的视图。\r\n","Execute any pending actions for the Fragments managed by the\n            controller's FragmentManager.":"执行对由该片段管理的任何未决动作\r\n            控制器的FragmentManager。\r\n","Returns a drawable for the system built-in static wallpaper.":"返回可用于内置静态墙纸的系统。\r\n","android.animation.ObjectAnimator.getPropertyName()":"android.animation.ObjectAnimator.getPropertyname（）\r\n","Whether to order the Preference under this group as they appear in the XML file.":"是否在XML文件中订购此组下的首选项。\r\n"," that has no title bar and no status bar.":" 那没有标题栏，没有状态栏。\r\n","This class describes an ":"本课程描述了\r\n","Set whether home should be displayed as an \"up\" affordance.":"设置是否应将房屋显示为“ UP”负担。\r\n","The user has performed a double tap and hold gesture on the touch screen.":"用户已经进行了双击并在触摸屏上保持手势。\r\n","android.app.AutomaticZenRule.setEnabled(boolean)":"android.app.automationzenrule.setEnabled（boolean）\r\n"," key: this is the maximum value supplied to\n            ":" 关键：这是提供给的最大值\r\n            \r\n","android.accessibilityservice.AccessibilityService.ERROR_TAKE_SCREENSHOT_NO_ACCESSIBILITY_ACCESS":"Android.AccessibilityService.Accesseribilityservice.Error_take_screenshot_no_accessibility_access\r\n","KeyEvent.Callback#onKeyLongPress(int, KeyEvent)\n            KeyEvent.Callback.onKeyLongPress()":"keyevent.callback＃onkeylongpress（int，keyevent）\r\n            keyevent.callback.onkeylongpress（）\r\n","Convenience method for callers who need to indicate that some other package\n            needs a backup pass.":"适用于需要指示其他包裹的呼叫者的便利方法\r\n            需要备份通行证。\r\n","android.app.Activity.onConfigurationChanged(android.content.res.Configuration)":"android.app.activity.onconfigurationChanged（android.content.res.configuration）\r\n","#enterPictureInPictureMode()":"#enterpictureinpicturemode（）\r\n","#requestPermissions(String[], int)":"#Requestpermissions（String []，int）\r\n","Registers a context menu to be shown for the given view (multiple views\n            can show the context menu).":"注册给定视图要显示的上下文菜单（多个视图\r\n            可以显示上下文菜单）。\r\n","Provide guidance about the size of this widget to the AppWidgetManager.":"向AppWidgetManager提供有关此小部件大小的指导。\r\n","Specify the authorities under which this content provider can be\n         found.":"指定本内容提供商可以是的当局\r\n         成立。\r\n"," object to this style.":" 对此风格的对象。\r\n","OnOpNotedCallback#onAsyncNoted":"onopnotedCallback＃onasyncnoted\r\n","Constructs and returns an ObjectAnimator that animates between int values.":"构造并返回一个在int值之间进行动画的对象激素。\r\n","android.app.Activity.openOptionsMenu()":"android.app.activity.openoptionsmenu（）\r\n","android.app.Activity.isLaunchedFromBubble()":"android.app.Activity.islaunchedFrombubble（）\r\n","android.app.job.JobParameters.STOP_REASON_CONSTRAINT_DEVICE_IDLE":"android.app.job.jobparameters.stop_reason_constraint_device_idle\r\n","Get the key that the result of this input will be set in from the Bundle returned by\n            ":"获取将从返回的捆绑包中设置此输入结果的关键\r\n            \r\n","The default width of a widget when added to a host, in units of launcher grid cells.":"将小部件的默认宽度添加到主机中，以发射器网格单元的单位为单位。\r\n","android.app.NotificationManager.EXTRA_NOTIFICATION_CHANNEL_GROUP_ID":"android.app.notificationmanager.extra_notification_channel_group_id\r\n","android.app.FragmentController.dispatchPrepareOptionsMenu(android.view.Menu)":"android.app.fragmentController.disPatchPrepareOptionsMenu（android.view.menu）\r\n","An interface that contains the callback used by the AccountManager":"一个包含帐户管理器使用的回调的界面\r\n","Schedule a repeating alarm.":"安排重复警报。\r\n","[TODO: @inheritDoc]\n            \n            Note that if you override this method you should always call through\n            to the superclass implementation by calling super.":"[todo：@inheritdoc]\r\n            \r\n            请注意，如果您覆盖此方法，则应始终致电\r\n            通过调用Super来实现超类实现。\r\n","android.app.slice.SliceManager.getSliceDescendants(android.net.Uri)":"android.app.slice.slicemanager.getSlicedEscendants（android.net.uri）\r\n","#KEY_AUTHTOKEN":"#key_authtoken\r\n","This is the default button label in the system-wide search UI.":"这是系统范围搜索UI中的默认按钮标签。\r\n","Specifies the formatting pattern used to show the time and/or date\n             in 12-hour mode.":"指定用于显示时间和/或日期的格式模式\r\n             在12小时模式下。\r\n","android.app.NotificationManager.getNotificationDelegate()":"android.app.notificationmanager.getNotificationDelegate（）\r\n","IntentSender#sendIntent":"Intentsender＃sendIntent\r\n","Set this to true if you want the ImageView to adjust its bounds\n             to preserve the aspect ratio of its drawable.":"如果您希望图像视图调整其界限，请将此设置为true\r\n             保持其可绘制的纵横比。\r\n","Constructs and returns an ObjectAnimator that animates between color values.":"构造并返回一个在颜色值之间进行动画的对象映射器。\r\n","NotificationChannel#getImportance()":"NotificationChannel＃getimportance（）\r\n","Retrieve the number of times the monitor has been hit so far.":"检索到目前为止击中显示器的次数。\r\n","android.app.admin.DevicePolicyManager.LOCK_TASK_FEATURE_BLOCK_ACTIVITY_START_IN_TASK":"android.app.admin.devicepolicymanager.lock_task_feature_block_activity_start_in_task\r\n","One of the predefined notification categories (see the <code>CATEGORY_*</code> constants)\n            that best describes this Notification.":"预定义的通知类别之一（请参阅<code>类别_*</code>常数）\r\n            最好描述此通知。\r\n","android.appwidget.AppWidgetManager.OPTION_APPWIDGET_RESTORE_COMPLETED":"android.appwidget.appwidgetManager.option_appwidget_restore_completed\r\n","android.bluetooth.BluetoothAdapter.cancelDiscovery()":"android.bluetooth.bluetoothadapter.canceldiscovery（）\r\n","#noteOp(String, int, String, String, String)":"#noteop（String，Int，String，String，String）\r\n"," has\n            been called).":" 有\r\n            被称为）。\r\n"," fully encapsulating the\n            parameters required to schedule work against the calling application.":" 完全封装\r\n            针对呼叫申请安排工作所需的参数。\r\n","The status of taking screenshot is failure and the reason is that too little time has\n            elapsed since the last screenshot.":"拍摄屏幕截图的状态是失败，原因是时间太少了\r\n            自上次屏幕截图以来就过去了。\r\n","A CharSequence that can be shown to the user informing them of the\n            impact of disabling your admin.":"可以向用户显示的魅力，告知他们\r\n            禁用管理员的影响。\r\n","android.app.ApplicationExitInfo.REASON_SIGNALED":"android.app.applicationexitinfo.reason_signaled\r\n","Key to retrieve an extra added to an intent when a control is changed.":"更改控件时，取回意图的额外添加的键。\r\n","field that should be\n set if this notification is in reference to something that is ongoing,\n like a phone call. ":"应该是\r\n 设置该通知是指持续的事情，\r\n 就像电话一样。\r\n","android.appwidget.AppWidgetManager.isRequestPinAppWidgetSupported()":"android.appwidget.appwidgetManager.isrequestpinappwidgetsupported（）\r\n","android.app.admin.DevicePolicyManager.isComplianceAcknowledgementRequired()":"android.app.admin.devicepolicymanager.iscompliancececececeknewledgementrequired（）\r\n","Overrides the id of the inflated View with this value.":"用此值覆盖膨胀视图的ID。\r\n","Do not reveal any part of this notification on a secure lockscreen.":"请勿在安全锁屏上显示此通知的任何部分。\r\n","BluetoothDevice":"蓝牙词\r\n","android.app.FragmentHostCallback.onInvalidateOptionsMenu()":"Android.App.FragmentHostCallback.OnInValidateOptionsMenu（）\r\n","Returns true if this FragmentTransaction is allowed to be added to the back\n stack.":"如果允许将此片段输入添加到背面，则返回true\r\n 堆。\r\n","android.bluetooth.BluetoothGattCharacteristic.PERMISSION_WRITE_ENCRYPTED_MITM":"android.bluetooth.bluetoothgattcharacteristic.permission_write_encrypted_mitm\r\n","Remove permissions to access a particular content provider Uri\n            that were previously added with ":"删除权限以访问特定内容提供商URI\r\n            以前添加了\r\n","RemoteInput":"远程启动\r\n","android.appwidget.AppWidgetProviderInfo.provider":"android.appwidget.appwidgetProviderInfo.provider\r\n","NearbyStreamingPolicy":"近乎流行的policy\r\n","android.app.Instrumentation.callActivityOnPostCreate(android.app.Activity, android.os.Bundle)":"android.app.instrumentation.callactivityOnpostCreate（android.app.Activity，android.os.bundle）\r\n","android.app.appsearch.SearchSpec.getTermMatch()":"android.app.appsearch.searchspec.getTermmatch（）\r\n","android.accounts.AbstractAccountAuthenticator.getAuthTokenLabel(java.lang.String)":"android.accounts.abstractaccontauthenticator.getauthtokenlabel（java.lang.string）\r\n","android.app.appsearch.ReportUsageRequest":"android.app.appsearch.reportusagerequest\r\n","File which the exception was thrown from.":"例外的文件。\r\n","\n        The ":"这\r\n","The sound to play.":"播放的声音。\r\n","android.app.appsearch.GlobalSearchSession":"android.app.appsearch.globalsearchsession\r\n","Hardware MAC Address of the device":"设备的硬件MAC地址\r\n"," is the default for a given type.":" 是给定类型的默认值。\r\n",", this\n is the process ID of the other process that is a client of this\n process.":"， 这个\r\n 是另一个过程的过程ID\r\n 过程。\r\n","Starts a local voice interaction session.":"开始本地语音互动会话。\r\n","The identifier for this task.":"此任务的标识符。\r\n"," to a newer version of ":" 到较新的版本的\r\n","Return true if the specified service class is supported by this\n            ":"如果指定的服务类得到支持，则返回true\r\n            \r\n","android.app.admin.DevicePolicyManager.clearPackagePersistentPreferredActivities(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.clearpackagepersistentpreferredivities（android.content.componentname，java.lang.string）\r\n","Request actions to be shown in the compact notification view.":"请求操作将在紧凑型通知视图中显示。\r\n","\n      If there are no outstanding references to this instance, then\n      calls ":"\r\n      如果没有对此实例的未出色引用，则\r\n      呼叫\r\n","android.app.job.JobParameters.getClipGrantFlags()":"android.app.job.jobparameters.getClipgrantflags（）\r\n","android.app.slice.SliceMetrics.logHidden()":"android.app.slice.slicemetrics.loghidden（）\r\n","android.app.admin.DevicePolicyManager.getBluetoothContactSharingDisabled(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getBluetOthContactsharingDisabled（android.content.componentname）\r\n","Allows using PowerManager WakeLocks to keep processor from sleeping or screen\n         from dimming \n":"允许使用PowerManager Wakelocks防止处理器无法入睡或屏幕\r\n         来自调暗\r\n\r\n","Show the route chooser or controller dialog.":"显示路由选择器或控制器对话框。\r\n","Sets the listener to call when the user sets the date.":"设置用户设置日期时的侦听器要调用。\r\n","The application is being restored from backup and should replace any\n            existing data with the contents of the backup.":"该应用程序正在从备份中恢复，应替换任何\r\n            现有数据带有备份内容。\r\n","android.app.UiModeManager.getNightMode()":"android.app.uimodemanager.getnightmode（）\r\n","Standard animations for a translucent window or activity.":"半透明窗口或活动的标准动画。\r\n","UsageCallback":"USAGECALLBACK\r\n","android.animation.ValueAnimator.setEvaluator(android.animation.TypeEvaluator)":"android.animation.valueAnimator.setevaluator（android.animation.typeevaluator）\r\n","Inject mock location into the system.":"将模拟位置注入系统。\r\n","#PACKAGE_NAME_KEY_LEGACY_VISIBLE":"#package_name_key_legacy_visible\r\n","Control whether the framework's internal loader manager debugging\n            logs are turned on.":"控制该框架的内部加载器管理器是否调试\r\n            日志已打开。\r\n","This is the interface to be implemented for the class that is specified by the\n            ":"这是要针对由\r\n            \r\n","Defines whether the overlay should intercept the motion events when a gesture\n             is recognized.":"定义叠加层是否应拦截手势时的运动事件\r\n             被认可。\r\n","Enables or disables dithering of the bitmap if the bitmap does not have the\n             same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with\n             an RGB 565 screen).":"如果位图没有\r\n             与屏幕相同的像素配置（例如：ARGB 8888位图\r\n             RGB 565屏幕）。\r\n","This method is called after ":"此方法是在调用的\r\n","android.accounts.AccountManager.getAuthenticatorTypes()":"android.accounts.accountmanager.getauthenticatortypes（）\r\n","The offset of the baseline within this view.":"此视图中基线的偏移。\r\n","Sets whether this ViewGroup's drawable states also include\n             its children's drawable states.":"设置此ViewGroup是否可绘制的状态还包括\r\n             它的儿童可绘制的状态。\r\n","android.app.Fragment.onAttachFragment(android.app.Fragment)":"android.app.fragment.onattachfragment（android.app.fragment）\r\n","Add a small piece of additional information pertaining to this notification.":"添加与此通知有关的一小部分其他信息。\r\n","The title associated with the item.":"与该项目关联的标题。\r\n","The status of taking screenshot is failure and the reason is no accessibility access.":"拍摄屏幕截图的状态是故障，原因是无法访问。\r\n","android.app.Dialog.addContentView(android.view.View, android.view.LayoutParams)":"android.app.dialog.addcontentview（android.view.view，android.view.layoutparams）\r\n","android.app.admin.DevicePolicyManager.removeActiveAdmin(android.content.ComponentName)":"android.app.admin.devicepolicymanager.removeactiveadmin（android.content.componentname）\r\n","Return the uid of the application that created this\n            PendingIntent, that is the identity under which you will actually be\n            sending the Intent.":"返回创建此的应用程序的UID\r\n            悬念，这就是您实际上是的身份\r\n            发送意图。\r\n","Gets the previous name associated with the account or ":"获取与帐户关联的先前名称或\r\n","Acceleration curve matching a quint ease out function.":"加速曲线匹配五重奏易于功能。\r\n","android.app.ActivityManager.isActivityStartAllowedOnDisplay(android.content.Context, int, android.content.Intent)":"android.app.ActivityManager.isactivityStartloweredOndSplay（android.content.context，int，android.content.intent）\r\n","Default GridView style.":"默认的GridView样式。\r\n","Updates AppWidget state; gets information about installed AppWidget providers and other\n            AppWidget related state.":"更新AppWidget状态;获取有关已安装的AppWidget提供商和其他的信息\r\n            AppWidget相关状态。\r\n","android.app.admin.DevicePolicyManager.getCrossProfileContactsSearchDisabled(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getCrossprofilecontactsssearchdisabled（android.content.componentname）\r\n","AppSearchResult#RESULT_OK":"AppSearchResult＃result_ok\r\n","android.app.appsearch.AppSearchSession.getStorageInfo(java.util.concurrent.Executor, java.util.function.Consumer)":"android.app.app.appsearch.appsearchsession.getStorageinfo（java.util.concurrent.executor，java.util.function.consumer）\r\n","android.app.appsearch.AppSearchResult.RESULT_NOT_FOUND":"android.app.appsearch.appsearchresult.result_not_found\r\n","UserManager#USER_OPERATION_ERROR_UNKNOWN":"USERMANAGER＃user_operation_error_unknown\r\n","Returns the set of package names that the admin has previously set as allowed to request user\n            consent for cross-profile communication, via ":"返回管理员先前已设置为允许请求用户的包装名称集\r\n            通过\r\n","The Type of the view to be returned (Button, ListView, etc.).":"要返回的视图类型（按钮，listView等）。\r\n","#META_DATA_LIB_NAME":"#meta_data_lib_name\r\n","Called when a key shortcut event is not handled by any of the views in the Activity.":"当活动中的任何视图都无法处理关键快捷键事件时，请致电。\r\n","Variant of Theme.":"主题的变体。\r\n","Key to set default visibility for applications which don't satisfy conditions in\n            ":"设置不满足条件的应用程序的默认可见性的关键\r\n            \r\n","android.hardware.display.DisplayManager#getDisplay(int)":"android.hardware.display.displaymanager＃getDisplay（int）\r\n","Returns whether the device is currently locked and requires a PIN, pattern or\n            password to unlock.":"返回设备当前锁定是否需要销钉，图案或\r\n            密码解锁。\r\n","Called by a device admin to set the long support message.":"由设备管理员调用以设置长支持消息。\r\n","\n        property is still valid when ":"\r\n        当属性仍然有效\r\n","Whether the application in question should be terminated after its\n         settings have been restored during a full-system restore operation.":"是否应在其后终止所涉及的申请\r\n         在全系统还原操作期间，设置已恢复。\r\n","android.app.Activity.setFeatureDrawableResource(int, int)":"android.app.activity.setFeaturedRawablerEsource（int，int）\r\n","android.app.Fragment.onActivityCreated(android.os.Bundle)":"android.app.fragment.Onactivity created（android.os.bundle）\r\n","android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE":"android.os.parcelable.parcelable_write_return_value\r\n","android.animation.StateListAnimator.jumpToCurrentState()":"android.animation.statelistanimator.jumptocurrentstate（）\r\n","Default holographic (dark) for windows that want to have the user's selected\n         wallpaper appear behind them and without an action bar.":"想要选择用户选择的窗口的默认全息图（深色）\r\n         墙纸出现在它们后面，没有动作栏。\r\n","android.accounts.AuthenticatorDescription.iconId":"android.accounts.authenticatordescription.iconid\r\n","M:Android.Content.Context.StartActivity":"m：android.content.context.startactivity\r\n","android.app.NotificationChannelGroup.getId()":"android.app.notificationChannelGroup.getID（）\r\n","Default style for tabs within an action bar \n         ":"动作栏内的选项卡的默认样式\r\n         \r\n","android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_FINGERPRINT":"android.app.admin.devicepolicymanager.keyguard_disable_fingerprint\r\n","#MODE_PRIVATE":"#mode_private\r\n","android.app.admin.DevicePolicyManager.getPermittedAccessibilityServices(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getPermittedAccesconibisitibilityservices（android.content.componentname）\r\n","android.app.ActivityOptions.makeTaskLaunchBehind()":"android.app.activityOptions.maketaskLaunchBehind（）\r\n","android.accessibilityservice.AccessibilityService.findFocus(int)":"Android.Accesseribilityservice.Accessibilityservice.findfocus（int）\r\n","Remove this service from foreground state, allowing it to be killed if\n            more memory is needed.":"从前景状态中删除此服务，如果\r\n            需要更多内存。\r\n","ShortcutInfo#getId() conversation id":"shortcutinfo＃getid（）对话ID\r\n","android.app.NotificationChannel.getAudioAttributes()":"android.app.notificationChannel.getAudioAttributes（）\r\n","android.app.Instrumentation.stopProfiling()":"android.app.instrumentation.stopprofiling（）\r\n","android.app.PendingIntent.getActivities(android.content.Context, int, android.content.Intent[], int)":"android.app.pendingIntent.getActivities（android.content.context，int，android.content.intent.intent []，int）\r\n","Registers a callback to be called when the VoiceInteractor is destroyed.":"登记登记室时要调用的回调。\r\n","This API automatically creates assist data from the platform's\n            implementation of assist and autofill.":"此API自动创建了平台的协助数据\r\n            实施辅助和汽车。\r\n","#setIntent":"#setintent\r\n","Create an instance ready to be thrown.":"创建一个准备就绪的实例。\r\n","Pop the last fragment transition from the manager's fragment\n            back stack.":"从经理的碎片中弹出最后的片段过渡\r\n            后堆。\r\n","Add a person that is relevant to this notification.":"添加一个与此通知相关的人。\r\n","android.bluetooth.BluetoothAdapter.ACTION_REQUEST_ENABLE":"android.bluetooth.bluetoothadapter.action_request_enable\r\n","Pop the top state off the back stack.":"从后堆中弹出最高状态。\r\n","android.app.Dialog.Dialog(android.content.Context, int)":"android.app.dialog.dialog（android.content.context，int）\r\n","The app has not be used for several days, is unlikely to be used for several days, and has\n            been misbehaving in some manner.":"该应用程序已经好几天都没有使用，不太可能使用几天，并且\r\n            以某种方式表现不佳。\r\n","android.app.slice.Slice.EXTRA_TOGGLE_STATE":"android.app.slice.slice.extra_toggle_state\r\n","android.app.Dialog.getOwnerActivity()":"android.app.dialog.getOnderActivity（）\r\n","android.animation.ObjectAnimator.ofMultiInt(java.lang.Object, java.lang.String, android.animation.TypeConverter, android.animation.TypeEvaluator, java.lang.Object[])":"android.animation.ObjectAnimator.ofmultiint（java.lang.object，java.lang.string，android.animation.typeconverter，android.animation.typeevaluator，java.lang.object []）\r\n","android.app.RemoteInput.getResultKey()":"android.app.remoteinput.getResultkey（）\r\n","android.app.admin.DevicePolicyManager.installKeyPair(android.content.ComponentName, java.security.PrivateKey, java.security.cert.Certificate, java.lang.String)":"android.app.admin.devicepolicymanager.installkeypair（android.content.componentname，java.security.privatekey，java.security.cert.cert.cert.certificate，java.lang.string）\r\n"," object is a utility class to facilitate adding animations to a\n ":" 对象是一个实用程序类，可促进将动画添加到\r\n \r\n"," along with\n             the self-signed certificate(s).":" 随着\r\n             自签名证书。\r\n","android.appwidget.AppWidgetManager.ACTION_APPWIDGET_DISABLED":"android.appwidget.appwidgetManager.action_appwidget_disabled\r\n","android.accounts.AccountManager.setPassword(android.accounts.Account, java.lang.String)":"android.accounts.accountmanager.setpassword（android.accounts.accounts.account，java.lang.string）\r\n"," collection or, after deriving a custom class from AndroidClientHandler, by overriding one or more methods provided for this purpose\n             (":" 收集或从AndroidClientHandler派生自定义类后，通过为此目的提供了一种或多种方法\r\n             （（\r\n","Defines which scrollbars should be displayed on scrolling or not.":"定义应在滚动上显示哪些滚动条。\r\n","#startWatchingMode(String, String, int, OnOpChangedListener)":"#startwatchingmode（字符串，字符串，int，onopchangedlistener））\r\n","android.app.NotificationManager.areNotificationsEnabled()":"android.app.notificationmanager.arenotificationenabled（）\r\n","android.app.job.JobService.jobFinished(android.app.job.JobParameters, boolean)":"android.app.job.jobservice.jobfined（android.app.job.job.jobparameters，boolean）\r\n","Option to indicate this application is only for testing purposes.":"指示此应用程序的选项仅用于测试目的。\r\n","android.app.backup.FileBackupHelper":"android.app.backup.filebackuphelper\r\n","Encapsulates a request to update the schema of an ":"封装了更新一个架构的请求\r\n","Abstract base class used convert type T to another type V.":"抽象的基类使用的类型T将T型转换为另一种类型V。\r\n","Positions the top edge of this view below the given anchor view ID.":"位于给定的锚视图ID下方的此视图的顶部边缘。\r\n"," with a result code and message.":" 带有结果代码和消息。\r\n","Path to the downloaded file on disk.":"在磁盘上下载文件的路径。\r\n","When set to true, the list will use a more refined calculation\n             method based on the pixels height of the items visible on screen.":"设置为true时，列表将使用更精致的计算\r\n             基于屏幕上可见项目的像素高度的方法。\r\n","android.app.admin.DevicePolicyManager.retrievePreRebootSecurityLogs(android.content.ComponentName)":"android.app.admin.devicepolicymanager.retrieveprerebootsecuritylogs（android.content.componentname）\r\n","Set a listener to be invoked when button 2 of the dialog is pressed.":"按下对话框的按钮2时，请设置一个侦听器。\r\n","\n          Whether or not the application can be debugged.\n        ":"\r\n          该应用程序是否可以调试。\r\n        \r\n"," for interaction and state\n            changes callbacks related to the accessibility button.":" 用于互动和状态\r\n            更改与“可访问性”按钮相关的回调。\r\n","A string extra holding the serial number of the device.":"绳子额外保留设备的序列号。\r\n","Callback interface for use with ":"用于使用的回调接口\r\n","Specifies where the drawable is positioned after scaling.":"指定划痕后绘制的位置位置。\r\n","android.app.admin.SecurityLog.TAG_KEY_GENERATED":"android.app.admin.securitylog.tag_key_generated\r\n","The domain of the wifi network in ":"WiFi网络的域\r\n","The right bound for a child's indicator.":"适合儿童指标的正确绑定。\r\n","Subtype to tag an item to use as a content description.":"亚型标记用于用作内容描述的项目。\r\n","This event is sent to listeners when any type of transition animation begins.":"当任何类型的过渡动画开始时，此事件将发送给听众。\r\n","T:Android.App.Notification+Builder":"T：Android.App.Notification+Builder\r\n"," parameter is left out or set to ":" 参数被排除或设置为\r\n"," that contains additional\n            information about how to involve the end user to recover from the exception.":" 其中包含其他\r\n            有关如何让最终用户从异常中恢复的信息。\r\n"," value.\n      ":" 价值。\r\n      \r\n"," volume.":" 体积。\r\n","android.appwidget.AppWidgetHostView.getDefaultPaddingForWidget(android.content.Context, android.content.ComponentName, android.graphics.Rect)":"android.appwidget.appwidgethostview.getDefaultPaddingforWidget（android.content.context，android.content.content.componentname，android.graphics.Rect）\r\n"," objects inside of an\n            ":" 内部的对象\r\n            \r\n",", the SSL setup code will not call the ":"，SSL设置代码不会调用\r\n"," interface provides access to a Java object\n        instance, invocation of members on that Java instance, control over\n        the lifetime of that object instance, and callbacks for when the\n        wrapper is being disposed or finalized.\n        The following operations are permitted:\n      ":" 界面提供对Java对象的访问\r\n        实例，在该Java实例上调用成员，控制\r\n        该对象实例的寿命，以及何时回调\r\n        包装器正在处置或最终确定。\r\n        允许以下操作：\r\n      \r\n","GenericDocument":"通用图案\r\n","Sentinel value indicating that bytes are unknown.":"哨兵值表示字节未知。\r\n","Query terms will only match exact tokens in the index.":"查询项仅匹配索引中的精确令牌。\r\n","android.app.ActivityManager.META_HOME_ALTERNATE":"android.app.activityManager.meta_home_alternate\r\n","#getSystemService":"#getSystemservice\r\n","Constructs and returns an ObjectAnimator that animates the target using a multi-int setter\n            along the given <code>Path</code>.":"构建并返回使用多INT启动器对目标进行动画动画的对象启示器\r\n            沿给定的<code>路径</code>。\r\n","Return the user selected game mode for this application.":"返回此应用程序的用户选择的游戏模式。\r\n","android.animation.FloatEvaluator":"android.animation.floateValuator\r\n","android.accounts.OnAccountsUpdateListener.onAccountsUpdated(android.accounts.Account[])":"android.accounts.onaccountsupdatelistener.onaccountsuped（android.accounts.account []）\r\n","The process id of caller app.":"呼叫者应用程序的过程ID。\r\n"," notification\n            is for a call that will activate video when answered.":" 通知\r\n            用于接听时会激活视频的呼叫。\r\n","Gets the zen policy. -or- Sets the zen policy.":"获取禅宗政策。 - 或设定ZEN政策。\r\n","android.animation.PointFEvaluator":"android.animation.PointFevaluator\r\n","PAP":"帕普\r\n","Stops an ongoing Bluetooth LE device scan.":"停止正在进行的蓝牙LE设备扫描。\r\n","android.content.Context":"android.content.context\r\n"," that contains\n            the total time (in ms) the user spent in the app flow.":" 其中包含\r\n            用户在应用程序流中花费的总时间（在MS中）。\r\n","android.accounts.AccountManager.getAuthToken(android.accounts.Account, java.lang.String, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)":"android.accounts.accountmanager.getauthtoken（android.accounts.accounts.account，java.lang.string，android.os.bundle，android.app.activity，android.account.accounts.accountmanagercallback，android.os.handler）android.os.handler）\r\n","android.app.Notification.EXTRA_SHOW_BIG_PICTURE_WHEN_COLLAPSED":"android.app.notification.extra_show_big_picture_when_collapsed\r\n","Indicates that an Activity does not need to have its freeze state\n         (as returned by ":"表示活动不需要冻结状态\r\n         （如归还\r\n","android.appwidget.AppWidgetProviderInfo.minResizeHeight":"android.appwidget.appwidgetProviderInfo.minresizeheight\r\n","Block until an Activity is created that matches this monitor, \n returning the resulting activity or till the timeOut period expires.":"封锁直到创建与此显示器匹配的活动，\r\n 返回结果活动或直到超时期过期。\r\n","android.app.NotificationManager.IMPORTANCE_DEFAULT":"android.app.notificationmanager.importance_default\r\n","\n            Since there's no way for the handler to access ":"\r\n            由于处理程序无法访问\r\n","Request to pin an app widget on the current launcher.":"请求将应用程序小部件固定在当前启动器上。\r\n","android.app.job.JobInfo.isExpedited()":"android.app.job.jobinfo.isexpedited（）\r\n","android.app.appsearch.AppSearchResult.RESULT_INVALID_ARGUMENT":"android.app.appsearch.appsearchresult.result_invalid_argument\r\n","android.app.UiAutomation.revokeRuntimePermissionAsUser(java.lang.String, java.lang.String, android.os.UserHandle)":"android.app.uiautomation.revokeruntimepermissionaser（java.lang.string，java.lang.string，android.os.os.userhandle）\r\n","Makes the top edge of this view match the top edge of the given anchor view ID.":"使此视图的顶部边缘与给定锚视图ID的顶部边缘匹配。\r\n","#STOP_FOREGROUND_REMOVE":"#stop_foreground_remove\r\n","\n          The name of a permission that clients must have to launch the\n          activity.\n        ":"\r\n          客户必须启动的许可名称\r\n          活动。\r\n        \r\n","android.app.admin.DevicePolicyManager.EXTRA_DEVICE_PASSWORD_REQUIREMENT_ONLY":"android.app.admin.devicepolicymanager.extra_device_password_requirement_only\r\n","Allows an application to delete cache files.":"允许应用程序删除缓存文件。\r\n","#getAccountCredentialsForCloning(AccountAuthenticatorResponse, Account)":"#getAccountcredentialsforcloning（AccountAuthentIcatorSponse，帐户）\r\n","android.app.VoiceInteractor.getActiveRequests()":"android.app.voiceInteractor.getActivereQuests（）\r\n","Activity#onPostCreate":"活动＃OnPostCreate\r\n","android.app.admin.DevicePolicyManager.ACTION_START_ENCRYPTION":"android.app.admin.devicepolicymanager.action_start_encryption\r\n","Dispose()":"distose（）\r\n","Property getter documentation:":"属性Getter文档：\r\n","android.app.Notification.CATEGORY_CALL":"android.app.notification.category_call\r\n"," notification\n            represents a group conversation.":" 通知\r\n            代表小组对话。\r\n","android.app.Activity.onKeyDown(int, android.view.KeyEvent)":"android.app.activity.onkeydown（int，android.view.keyevent）\r\n","if listener was already added\n":"如果听众已经添加\r\n\r\n","android.app.admin.DevicePolicyManager.isKeyPairGrantedToWifiAuth(java.lang.String)":"android.app.admin.devicepolicymanager.iskeypairgrantedtowifiauth（java.lang.string）\r\n","#setCrossProfileCalendarPackages(ComponentName, Set)":"#SetCrossProfilecalendarPackages（componentName，set）\r\n","Flag for use with ":"标志供\r\n","Called to check if the caller can schedule exact alarms.":"打电话检查呼叫者是否可以安排确切的警报。\r\n","Default action button style.":"默认操作按钮样式。\r\n","A light Holo shade of orange \n":"橙色的浅色阴影\r\n\r\n","Returns the time when the activity finished generating assist data to build the\n            AssistStructure.":"返回活动完成生成辅助数据以构建的时间\r\n            协助结构。\r\n","The view id of the AppWidget subview which should be auto-advanced.\n             by the widget's host.":"AppWidget子视图的视图ID，该视图应自动添加。\r\n             由小部件的主机。\r\n","android.app.Activity.isInMultiWindowMode()":"android.app.activity.isinmultiwindowmode（）\r\n","android.app.Activity.onKeyUp(int, android.view.KeyEvent)":"android.app.activity.onkeyup（int，android.view.keyevent）\r\n","android.app.FragmentBreadCrumbs.setParentTitle(java.lang.CharSequence, java.lang.CharSequence, android.view.OnClickListener)":"android.app.fragmentbreadcrumbs.setparenttitle（java.lang.CharSequence，java.lang.CharSequence，android.view.onclicklistener）\r\n"," will specify the signal\n            number.":" 将指定信号\r\n            数字。\r\n","Allows an application to initiate a phone call without going through\n         the Dialer user interface for the user to confirm the call\n         being placed.":"允许应用程序启动电话而无需通过\r\n         用户拨号用户界面确认呼叫\r\n         被放置。\r\n"," property directly on the passed\n            ":" 直接在传递的财产\r\n            \r\n","Start color of the gradient.":"启动梯度的颜色。\r\n"," value, which\n          corresponds to ":" 价值，哪个\r\n          对应于\r\n","#add(int, Fragment, String)":"#add（int，fragment，string）\r\n","Different audio stream types.":"不同的音频流类型。\r\n","Allows an app to access precise location from location sources such\n         as GPS, cell towers, and Wi-Fi.":"允许应用程序从位置来源访问精确的位置\r\n         作为GPS，Cell Towers和Wi-Fi。\r\n","Set the alert vibration pattern to use.":"将警报振动模式设置为使用。\r\n","android.app.NotificationManager.createNotificationChannels(java.util.List)":"Android.App.NotificationManager.CreatenotificationChannels（Java.util.list）\r\n","If set, specifies that this TextView has a numeric input method.":"如果设置，则指定此文本视图具有数字输入方法。\r\n","android.app.Activity.onWindowStartingActionMode(android.view.Callback)":"android.app.Activity.OnWindowStartingActionMode（android.view.callback）\r\n","Whether this is a modifier key such as Alt or Shift.":"这是否是修饰符键，例如ALT还是Shift。\r\n",":\n always run in night mode.":"：\r\n 始终以夜间模式运行。\r\n","Allows an app to control the status bar.":"允许应用程序控制状态栏。\r\n","Provides a connection to a single AppSearch database.":"提供与单个AppSearch数据库的连接。\r\n","The device state (eg.":"设备状态（例如\r\n","Whether the view of this Preference should be disabled when\n             this Preference is disabled.":"当该偏好的观点是否应在\r\n             此偏好是禁用的。\r\n","This evaluator can be used to perform type interpolation between <code>Rect</code> values.":"该评估器可用于在<code> rect </code>值之间执行类型插值。\r\n","android.app.DownloadManager.STATUS_FAILED":"android.app.downloadmanager.status_failed\r\n","android.app.VoiceInteractor.notifyDirectActionsChanged()":"android.app.voiceInteractor.notifyDirectactionsChanged（）\r\n","android.app.appsearch.GetByDocumentIdRequest.getNamespace()":"android.app.appsearch.getbydocumentidrequest.getnamespace（）\r\n","android.accounts.AbstractAccountAuthenticator.getIBinder()":"android.accounts.abstractaccontauthenticator.getibinder（）\r\n","Block until an Activity is created that matches this monitor, \n returning the resulting activity.":"封锁直到创建与此显示器匹配的活动，\r\n 返回最终活动。\r\n","Disables the service.":"禁用服务。\r\n","Launch an activity for the user to pick the current global live\n            wallpaper.":"启动一项活动供用户选择当前的全局现场直播\r\n            墙纸。\r\n","Sets whether or not notifications posted to this channel can interrupt the user in\n            ":"设置发布到此频道的通知是否可以中断用户\r\n            \r\n","android.app.Notification.EXTRA_CONVERSATION_TITLE":"android.app.notification.extra_conversation_title\r\n","UserManager#USER_OPERATION_ERROR_CURRENT_USER":"USERMANAGER＃user_operation_error_current_user\r\n","Add a helper for a given data subset to the agent's configuration.":"将给定数据子集的助手添加到代理的配置中。\r\n","Returns whether or not there are more events to read using\n            ":"返回是否有更多的事件可以使用\r\n            \r\n","Return shared/external storage statistics for a specific\n            ":"返回特定的共享/外部存储统计信息\r\n            \r\n"," that allows the\n            admin to specify a set of apps that should be able to access the network directly when VPN\n            is not connected.":" 那允许\r\n            管理员指定一组应用程序，该应用应该能够直接在VPN时直接访问网络\r\n            没有连接。\r\n"," that the device will be set to.":" 设备将设置为。\r\n","Implemented to create a slice.":"实施以创建切片。\r\n","android.app.slice.Slice.HINT_NO_TINT":"android.app.slice.slice.hint_no_tint\r\n","presence drawables for videochat or audiochat capable contacts \n":"存在视频聊天或AudioChat能够联系人的吸引人物\r\n\r\n","/>. \n            In the latter case the application is required to provide the authentication module in ":"/>。\r\n            在后一种情况下，要求应用程序提供身份验证模块\r\n","The alphabetic shortcut key.":"字母快捷键。\r\n","android.app.ActionBar.setLogo(android.graphics.drawable.Drawable)":"android.app.actionbar.setlogo（android.graphics.drawable.drabable）\r\n","Intent#FLAG_ACTIVITY_RETAIN_IN_RECENTS":"意图＃flag_activity_retain_in_recents\r\n","android.accounts.AccountManager.addAccount(java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)":"android.accounts.accountmanager.addaccount（java.lang.string，java.lang.string，java.lang.string []，android.os.bundle，android.app.Aptivity，android.account.account.accounts.accountmanagercelcercallbackback，android.os。处理程序）\r\n","The default state of the SearchView.":"搜索视图的默认状态。\r\n","Action to open the notifications.":"打开通知的行动。\r\n"," method is invoked after the\n        ":" 方法在\r\n        \r\n","The human readable description of the process's death, given by the system; could be null.":"人类对该过程死亡的可读描述，由系统给出；可能是无效的。\r\n","Base style for animations.":"动画的基本样式。\r\n","android.app.FragmentController.dispatchContextItemSelected(android.view.MenuItem)":"android.app.fragmentController.disPatchContextItemselected（android.view.menuitem）\r\n","Rotation constant: Freeze rotation to 0 degrees (natural orientation)":"旋转常数：冻结旋转至0度（自然取向）\r\n","Restores the saved state for all LoaderManagers.":"还原所有加载者的保存状态。\r\n","\n              Dispose of the current instance, stopping timing if necessary. Note that if timing is stopped\n              here, the log will contain the default message (":"\r\n              处置当前实例，如有必要，停止正时。请注意，如果停止时间\r\n              在这里，日志将包含默认消息（\r\n","android.app.Activity.getChangingConfigurations()":"android.app.activity.getChangingConfigurations（）\r\n"," it returns ":" 它返回\r\n","android.app.job.JobParameters.STOP_REASON_CONSTRAINT_BATTERY_NOT_LOW":"android.app.job.jobparameters.stop_reason_constraint_battery_not_low\r\n","Attribute whether the accessibility service wants to be able to request touch exploration mode in which touched items are spoken aloud and the UI can be explored via gestures.":"属性是否要访问触摸探索模式，在其中大声说出触摸的项目，并且可以通过手势探索UI。\r\n"," that contains\n            detailed information about the time spent in each package associated with the app;\n            each key is a package name, whose value is a long containing the time (in ms).":" 其中包含\r\n            有关与应用程序关联的每个软件包所花费的时间的详细信息；\r\n            每个键是一个软件包名称，其值是长时间包含时间（在MS中）。\r\n","Modify the global animation scaling factor.":"修改全局动画缩放系数。\r\n",", but actually fires off the search query after invoking\n            the search dialog.":"，但实际上在调用后开发了搜索查询\r\n            搜索对话框。\r\n","BluetoothDevice#PHY_OPTION_NO_PREFERRED":"BluetoothDevice＃phy_option_no_preferred\r\n","Get the last time this package's activity is visible in the UI, measured in milliseconds\n            since the epoch.":"在UI中可见该包的活动上次获得该包的活动，以毫秒为单位测量\r\n            自时代以来。\r\n","Indicates that nearby streaming is disabled.":"指示附近的流媒体被禁用。\r\n","android.app.AlarmManager.ACTION_SCHEDULE_EXACT_ALARM_PERMISSION_STATE_CHANGED":"android.app.alarmmanager.action_schedule_exact_alarm_permission_state_changed\r\n","android.app.Activity.requireViewById(int)":"Android.App.Activity.RequireViewById（INT）\r\n","android.appwidget.AppWidgetHostView":"android.appwidget.appwidgethostview\r\n","Returns the id of this group.":"返回该组的ID。\r\n","Tab navigation mode. ":"标签导航模式。\r\n","Create a new activity result.":"创建一个新的活动结果。\r\n","A dialog that prompts the user for the time of day using a\n            ":"一个对话框，可以使用一个\r\n            \r\n","android.app.AppOpsManager.noteProxyOpNoThrow(java.lang.String, java.lang.String)":"android.app.appopsmanager.noteproxyopnothrow（java.lang.string，java.lang.string）\r\n","android.app.NotificationChannel.getVibrationPattern()":"Android.App.NotificationChannel.getVibrationPattern（）\r\n","android.app.admin.DevicePolicyManager.setPasswordHistoryLength(android.content.ComponentName, int)":"android.app.admin.devicepolicymanager.setpasswordhistorylength（android.content.componentname，int）\r\n",",\n             set when a view (or one of its parents) is currently selected.":"，，，，\r\n             当目前选择视图（或其父母之一）时设置。\r\n","Reference to a drawable that will be drawn under the insertion cursor.":"参考将在插入光标下绘制的可绘制。\r\n","android.app.Dialog.openContextMenu(android.view.View)":"android.app.dialog.opencontextmenu（android.view.view）\r\n","android.app.ApplicationExitInfo.getDefiningUid()":"android.app.applicationexitinfo.getDefininguid（）\r\n","#onVisibleBehindCanceled()":"#onvisibleBehindCanceled（）\r\n","WallpaperColors":"墙壁pap\r\n","android.app.Activity.getSplashScreen()":"android.app.activity.getSplashscreen（）\r\n","Notification content styles \n":"通知内容样式\r\n\r\n"," as argument":" 作为参数\r\n","EAP":"EAP\r\n","#setPermissionGrantState(ComponentName, String, String, int)":"#SetPermissionGrantState（ComponentName，String，String，INT）\r\n","Called after ":"呼叫之后\r\n","Returns the timing interpolator that this animation uses.":"返回该动画使用的时正式插装器。\r\n","android.animation.ObjectAnimator.ofObject(java.lang.Object, android.util.Property, android.animation.TypeConverter, android.animation.TypeEvaluator, java.lang.Object)":"android.animation.ObjectAnimator.OfObject（java.lang.object，android.util.property，android.animation.typeconverter，android.animation.typeevaluator，java.lang.object）\r\n","android.bluetooth.BluetoothGattCharacteristic.getDescriptor(java.util.UUID)":"android.bluetooth.bluetoothgattcharacteristic.getDescriptor（java.util.uuid）\r\n","android.bluetooth.BluetoothDevice.ADDRESS_TYPE_RANDOM":"android.bluetooth.bluetoothdevice.address_type_random\r\n","Hint indicating an item representing a time-to-live for the content.":"提示指示一个代表内容的项目的项目。\r\n","android.service.vr.VrListenerService":"android.service.vr.vrlistenerservice\r\n","If provided, this specifies a prompt that will be displayed during voice input.":"如果提供，这将指定在语音输入期间将显示的提示。\r\n","android.app.NotificationChannel.enableVibration(boolean)":"Android.App.NotificationChannel.enable Vibration（Boolean）\r\n","This class provides access to the system uimode services.":"此类提供对系统UIMODE服务的访问权限。\r\n","android.bluetooth.BluetoothA2dp.STATE_PLAYING":"android.bluetooth.bluetootha2dp.state_playing\r\n","Allows an application to read (but not write) the user's\n        browsing history and bookmarks.":"允许应用程序读取（但不写）用户的\r\n        浏览历史记录和书签。\r\n","A SliceItem is a single unit in the tree structure of a ":"sliceitem是一个树结构中的一个单元\r\n","If provided, this is the minimum number of characters needed to trigger\n             search suggestions.":"如果提供，这是触发所需的最小字符数\r\n             搜索建议。\r\n","android.app.RecoverableSecurityException.getUserMessage()":"android.app.RecoverablesecurityException.getUsermessage（）\r\n","Allows an application to request authtokens from the AccountManager \n":"允许应用程序从帐户管理器请求Authtokens\r\n\r\n","Updates the given zen rule.":"更新给定的ZEN规则。\r\n","android.app.UiAutomation.clearWindowContentFrameStats(int)":"android.app.uiautomation.clearwindowcontentframestats（int）\r\n","android.app.NotificationManager.setAutomaticZenRuleState(java.lang.String, android.service.notification.Condition)":"android.app.notificationmanager.setautomaticzenrulestate（java.lang.string，android.service.notification.contifient）\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_ALLOWED_PROVISIONING_MODES":"android.app.admin.devicepolicymanager.extra_provisioning_allowed_provisioning_modes\r\n","android.app.appsearch.SearchSpec.RANKING_STRATEGY_CREATION_TIMESTAMP":"android.app.appsearch.searchspec.ranking_strategy_creation_timestamp\r\n","android.app.ListFragment.setListShown(boolean)":"android.app.listfragment.setlistshown（boolean）\r\n","Called by a profile owner or device owner to remove all persistent intent handler preferences\n            associated with the given package that were set by ":"由配置文件所有者或设备所有者拨打以删除所有持续意图处理程序首选项\r\n            与给定的包装相关联\r\n","android.app.Activity.navigateUpToFromChild(android.app.Activity, android.content.Intent)":"android.app.Activity.NavigateUptOuptoFromchild（android.app.activity，android.content.intert）\r\n","#ENCRYPTION_STATUS_ACTIVE":"#encryption_status_active\r\n","Whether or not notifications posted to this channel can bypass the Do Not Disturb\n            ":"发布到此频道的通知是否可以绕过不要打扰\r\n            \r\n","#replace(int, Fragment, String)":"#replace（int，fragment，string）\r\n","android.app.NotificationManager.getNotificationChannel(java.lang.String)":"android.app.notificationmanager.getNotificationChannel（java.lang.string）\r\n","Show the activity title and subtitle, if present.":"显示活动标题和字幕（如果存在）。\r\n","Shared/external storage statistics for a ":"共享/外部存储统计信息\r\n","Extra value for ":"额外的价值\r\n","Bit mask that is set for all exit transitions.":"为所有退出过渡设置的位掩码。\r\n","TelephonyManager#getSubscriberId()":"TelephonyManager＃getsubscriberid（）\r\n","android.app.Activity.setTitleColor(int)":"android.app.activity.settitlecolor（int）\r\n","#startForeground(int, Notification, int)":"#startforeground（int，Notification，int）\r\n"," provides support for animating properties on target objects.":" 为目标对象上的动画属性提供支持。\r\n"," commits\n            information to the backup data set, via its ":" 提交\r\n            通过备份数据集的信息，通过其\r\n","android.app.admin.DevicePolicyManager.ACTION_PROFILE_OWNER_CHANGED":"android.app.admin.devicepolicymanager.action_profile_owner_changed\r\n","android.app.Notification.writeToParcel(android.os.Parcel, int)":"android.app.notification.writetoparcel（android.os.parcel，int）\r\n","android.app.admin.DevicePolicyManager.setAlwaysOnVpnPackage(android.content.ComponentName, java.lang.String, boolean, java.util.Set)":"android.app.admin.devicepolicymanager.setalwaysonvpnpackage（android.content.componentname，java.lang.string，boolean，java.util.set）\r\n","android.app.Activity.isActivityTransitionRunning()":"android.app.Activity.SactivityTransitiveRunning（）\r\n","android.app.admin.DevicePolicyManager.revokeKeyPairFromWifiAuth(java.lang.String)":"android.app.admin.devicepolicymanager.revokekeypairfromwifiauth（java.lang.string）\r\n","Apply an extender to this notification builder.":"将扩展器应用于此通知构建器。\r\n","This class holds information about a property and the values that that property\n            should take on during an animation.":"此类拥有有关属性及该属性的价值的信息\r\n            应该在动画中进行。\r\n","android.app.FragmentController.noteStateNotSaved()":"android.app.FragmentController.NotestatEnotsaved（）\r\n","android.app.admin.DevicePolicyManager.setLockTaskFeatures(android.content.ComponentName, int)":"android.app.admin.devicepolicymanager.setlocktaskfeatures（android.content.componentname，int）\r\n","Cancel downloads and remove them from the download manager.":"取消下载并将其从下载管理器中删除。\r\n","android.app.PendingIntent.getTargetPackage()":"android.app.pendingIntent.getTargetPackage（）\r\n","android.app.SearchableInfo.getSuggestPackage()":"android.app.searchableInfo.getSuggestPackage（）\r\n"," intents to request a specific duration\n            for discoverability in seconds.":" 意图要求特定持续时间\r\n            在几秒钟内可发现性。\r\n","android.app.admin.DevicePolicyManager.PROVISIONING_MODE_MANAGED_PROFILE":"android.app.admin.devicepolicymanager.provisioning_mode_managed_profile\r\n","If you wish to handle an action key during normal search query entry, you\n            must define an action string here.":"如果您想在正常搜索查询条目中处理操作密钥，则\r\n            必须在此处定义一个动作字符串。\r\n","android.bluetooth.BluetoothDevice.ACTION_PAIRING_REQUEST":"android.bluetooth.bluetoothdevice.action_pairing_request\r\n","The prompt to display when the spinner's dialog is shown.":"显示旋转器的对话框时显示的提示。\r\n","android.app.Activity.getContentScene()":"android.app.activity.getContentscene（）\r\n","The requested connectivity constraint is no longer satisfied.":"不再满足请求的连接约束。\r\n","Line number the exception was thrown from.":"线号被抛出。\r\n","android.app.Notification.ledARGB":"android.app.notification.LEDARGB\r\n","android.app.AlertDialog.setView(android.view.View, int, int, int, int)":"android.app.alertdialog.setView（android.view.view，int，int，int，int）\r\n","The given request is not supported":"给定的请求不支持\r\n","Set a message to be sent when the dialog is dismissed.":"解散对话框时设置要发送的消息。\r\n","android.app.AppOpsManager.OPSTR_WRITE_CALENDAR":"android.app.appopsmanager.opptr_write_calendar\r\n","android.app.job.JobInfo.Builder#setTransientExtras(android.os.Bundle)":"android.app.job.jobinfo.builder＃setTransientExtras（android.os.bundle）\r\n","#updateCredentials":"#updatecredentials\r\n","selection":"选择\r\n","Intent action broadcasted to inform that the searchables list or default have changed.":"播放的意图动作是为了告知可搜索物或默认值已更改。\r\n","android.app.backup.SharedPreferencesBackupHelper.SharedPreferencesBackupHelper(android.content.Context, java.lang.String)":"android.app.backup.sharedpreferencesbackuphelper.sharedpreferencesbackuphelper（android.content.context，java.lang.string）\r\n","android.app.backup.BackupDataInput.readEntityData(byte[], int, int)":"android.app.backup.backupdatainput.readentitydata（byte []，int，int）\r\n","Return the schemas most recently successfully provided to ":"返回最近成功提供的模式\r\n","android.app.Presentation.Presentation(android.content.Context, android.view.Display, int)":"android.app.presentation.presentation（android.content.context，android.view.display，int）\r\n","if an error occurred when trying to read the restore data stream\n":"如果尝试读取还原数据流时发生错误\r\n\r\n","Returns the interruption filter that is applied when this rule is active. -or- Sets the interruption filter that is applied when this rule is active.":"返回该规则活动时应用的中断过滤器。 - 或设置此规则处于活动状态时应用的中断过滤器。\r\n","android.app.people.ConversationStatus.ACTIVITY_LOCATION":"android.app.people.conversationstatus.activity_location\r\n","#setLockTaskFeatures(ComponentName, int)":"#setlocktaskFeatures（componentName，int）\r\n","Called as part of the activity lifecycle when the user no longer actively interacts with the\n            activity, but it is still visible on screen.":"当用户不再积极与之互动时，称为活动生命周期的一部分\r\n            活动，但在屏幕上仍然可见。\r\n","Indicates that an admin remotely locked the device or profile.":"指示管理员远程锁定设备或配置文件。\r\n","android.app.admin.SystemUpdatePolicy.setFreezePeriods(java.util.List)":"android.app.admin.SystemupDatePolicy.setFreezeperiods（java.util.list）\r\n","intent":"意图\r\n","Image for the key.":"钥匙的图像。\r\n","android.animation.ObjectAnimator.ofInt(java.lang.Object, android.util.Property, android.util.Property, android.graphics.Path)":"android.animation.ObjectAnimator.ofint（java.lang.Object，android.util.property，android.util.property，android.graphics.path）\r\n","android.app.FragmentManager.enableDebugLogging(boolean)":"android.app.fragmentmanager.enabledebuglogging（boolean）\r\n","android.app.TaskStackBuilder.getIntents()":"android.app.taskstackbuilder.getintents（）\r\n","Makes the TextView be exactly this many ems wide.":"使文本视图正是如此之多。\r\n","android.app.SearchManager.ACTION_MSG":"android.app.searchmanager.action_msg\r\n","Activity#setResult(int)":"活动＃setResult（int）\r\n"," property can dispatch\n            gestures.":" 属性可以派遣\r\n            手势。\r\n","Indicates that an admin has set a password complexity requirement, using the platform's\n            pre-defined complexity levels.":"指示管理员使用平台的设置密码复杂性要求\r\n            预定义的复杂性水平。\r\n"," when the default implementation is used. The application can return ":" 当使用默认实现时。该应用程序可以返回\r\n","android.app.ExpandableListActivity.getExpandableListAdapter()":"android.app.expandableStactivity.getExpandableListAdapter（）\r\n","android.app.Fragment.setRetainInstance(boolean)":"Android.App.Fragment.SetretainInstance（布尔值）\r\n","The name of an optional ActionProvider class to instantiate an action view\n             and perform operations such as default action for that menu item.":"可选的动作推销类别的名称，以实例化动作视图\r\n             并执行该菜单项的操作，例如默认操作。\r\n","android.app.NotificationManager.shouldHideSilentStatusBarIcons()":"android.app.notificationmanager.shouldhidesilentstatusbaricons（）\r\n",",\n         to ensure that only the system can bind to it.":"，，，，\r\n         为了确保只有系统才能绑定到它。\r\n","Set the currently selected list item to the specified\n position with the adapter's data":"将当前选择的列表项目设置为指定的\r\n 使用适配器的数据位置\r\n","\n            directly, this property should be set by the calling party to the same desired value. Value of this\n            property will be passed to the native Java HTTP client, unless it is set to ":"\r\n            直接，该属性应由呼叫方设置为相同的所需值。这一点的价值\r\n            属性将传递给本机Java HTTP客户端，除非将其设置为\r\n","android.app.admin.DevicePolicyManager.PRIVATE_DNS_SET_NO_ERROR":"android.app.admin.devicepolicymanager.private_dns_set_no_error\r\n","Engine's report that a job has stopped.":"引擎报告说工作已经停止。\r\n","\n          The intent filter's priority.\n        ":"\r\n          意图过滤器的优先级。\r\n        \r\n",").\n        When such untrackable JNI Local References are created, this may result\n        in future assertions failing within\n        ":"）。\r\n        当创建了这种无法跟踪的JNI本地参考时，这可能会结果\r\n        在未来的断言中失败\r\n        \r\n","android.app.FragmentController.dispatchOptionsItemSelected(android.view.MenuItem)":"android.app.FragmentController.disPatchOptionsItemselected（android.view.menuitem）\r\n",": nothing special has\n been specified for the reason for this level.":"：没有什么特别的\r\n 指定原因是此级别的原因。\r\n","android.app.UiAutomation.adoptShellPermissionIdentity()":"android.app.uiautomation.adoptshellpermisionsidentity（）\r\n","android.app.admin.DevicePolicyManager.isActivePasswordSufficient()":"android.app.admin.devicepolicymanager.isactivepasswordsuffife（）\r\n","android.app.admin.DevicePolicyManager.setStorageEncryption(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setStorageCencryption（android.content.com.ponentname，boolean）\r\n","android.app.WallpaperManager.getWallpaperInfo()":"android.app.wallpapermanager.getWallpaperInfo（）\r\n","\n          Whether or not the activity can be launched by components of other\n          applications.\n        ":"\r\n          是否可以通过其他组件来启动活动\r\n          申请。\r\n        \r\n","The end bound for a child's indicator.":"结束了孩子的指标。\r\n","Called by an application that is administering the device to disable all cameras on the\n            device, for this user.":"由管理设备的应用程序调用以禁用\r\n            设备，适用于此用户。\r\n","android.bluetooth.BluetoothGatt.beginReliableWrite()":"android.bluetooth.bluetoothgatt.beginreliablewrite（）\r\n","android.animation.StateListAnimator":"android.animation.Statelistanimator\r\n","#getArguments()":"#getArguments（）\r\n","The app was used in the last few days and/or likely to be used in the next few days.":"该应用程序在过去几天内使用，并且可能在接下来的几天内使用。\r\n","Callback passed to ":"回调传递给\r\n","FragmentManager":"FragmentManager\r\n","android.appwidget.AppWidgetManager.getInstalledProvidersForPackage(java.lang.String, android.os.UserHandle)":"android.appwidget.appwidgetManager.getInstalledProvidersForpackage（java.lang.string，android.os.os.userhandle）\r\n","Confirms that the user knows the password for an account to make extra\n            sure they are the owner of the account.":"确认用户知道帐户的密码以促进额外\r\n            确保他们是帐户的所有者。\r\n","Animation to use when hiding the fullscreen extract UI after\n             it had previously been shown.":"在隐藏全屏提取物ui之后使用的动画\r\n             以前已显示。\r\n","Returns the maximum size of a snippet in characters.":"返回字符中摘要的最大尺寸。\r\n","Capability: This accessibility service can request touch exploration mode in which\n touched items are spoken aloud and the UI can be explored via gestures.":"功能：此可访问性服务可以请求触摸探索模式\r\n 大声口头触摸的物品，可以通过手势探索UI。\r\n","android.app.admin.SecurityLog.TAG_KEYGUARD_DISABLED_FEATURES_SET":"android.app.admin.securitylog.tag_keyguard_disabled_features_set\r\n","Insufficient authentication for a given operation":"给定操作的身份验证不足\r\n","Constructs and returns an ObjectAnimator that animates between float values.":"构造并返回一个在浮点值之间进行动画的对象映射器。\r\n","Set whether this download may proceed over a roaming connection.":"设置该下载是否可以通过漫游连接进行。\r\n","android.app.admin.DeviceAdminReceiver.ACTION_CHOOSE_PRIVATE_KEY_ALIAS":"android.app.admin.deviceadminreceiver.action_choose_private_key_alias\r\n","Notification category: media transport control for playback.":"通知类别：播放媒体运输控制。\r\n","BluetoothGatt":"蓝牙加特\r\n","android.accessibilityservice.AccessibilityService.GESTURE_2_FINGER_SINGLE_TAP":"Android.AccessibilityService.Accessibilityservice.gesture_2_finger_single_tap\r\n","android.app.Activity.onKeyMultiple(int, int, android.view.KeyEvent)":"android.app.activity.onkeymultiple（int，int，android.view.keyevent）\r\n","Return the set of ":"返回一组\r\n","Returns a drawable for the built-in static wallpaper of the specified type.":"返回指定类型的内置静态墙纸的绘制。\r\n","android.appwidget.AppWidgetHostView.setOnLightBackground(boolean)":"android.appwidget.appwidgethostview.setonlightbackground（布尔值）\r\n"," but with a null\n            argument Bundle.":" 但是用无效\r\n            参数束。\r\n","android.app.job.JobInfo.getRequiredNetwork()":"android.app.job.jobinfo.getrequirednetwork（）\r\n","\n            \n            Note: Actions contain 2 pieces of data, In addition to the pending intent, the\n            item contains a ":"\r\n            \r\n            注意：操作包含2片数据，除了待处理的意图，\r\n            项目包含a\r\n","Characteristic property: Characteristic supports notification":"特征属性：特征支持通知\r\n","#EXTRA_APPWIDGET_PREVIEW":"#EXTRA_APPWIDGET_PREVIEW\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_CA_CERTIFICATE":"android.app.admin.devicepolicymanager.extra_provisioning_wifi_ca_certificate\r\n","Process a set of ":"处理一组\r\n","Returns whether the caller for this slice matters.":"返回该切片的来电者是否重要。\r\n"," key: the username to be displayed for all messages sent by the user including\n            direct replies\n            ":" 键：将显示用户发送的所有消息的用户名，包括\r\n            直接答复\r\n            \r\n","Intent action to be broadcast to inform that the global search provider\n            has changed.":"要广播的意愿行动，以告知全球搜索提供商\r\n            已经改变。\r\n","Application process was killed due to being unresponsive (ANR).":"申请过程由于反应迟钝（ANR）而丧生。\r\n","Provides the glue to show AppWidget views.":"提供显示AppWidget视图的胶水。\r\n","android.app.assist.AssistContent.getExtras()":"android.app.assist.assistcontent.getExtras（）\r\n","This adapter class provides empty implementations of the methods from ":"该适配器类提供了从\r\n","Determine if a package is hidden.":"确定包裹是否隐藏。\r\n","android.app.admin.DevicePolicyManager.removeOverrideApn(android.content.ComponentName, int)":"android.app.admin.devicepolicymanager.removeoverrideapn（android.content.componentname，int）\r\n","Must be required by a TextService (e.g.":"必须由文本服务（例如\r\n","Schedule a repeating alarm that has inexact trigger time requirements;\n            for example, an alarm that repeats every hour, but not necessarily at\n            the top of every hour.":"安排一个重复的警报，该警报具有不精确的触发时间要求；\r\n            例如，一个警报每小时重复，但不一定在\r\n            每小时的顶部。\r\n","android.app.PendingIntent.send(android.content.Context, int, android.content.Intent)":"android.app.pendingIntent.Send（android.content.context，int，android.content.intent）\r\n","Default constructor.":"默认构造函数。\r\n","#setClipData":"#setClipdata\r\n","android.accessibilityservice.AccessibilityServiceInfo.capabilityToString(int)":"Android.AccessibilityService.Accessibilityserviceinfo.capabilitytostring（int）\r\n","android.app.NotificationChannelGroup":"Android.App.NotificationChannelGroup\r\n","AutomaticZenRule":"自动Zenrule\r\n","Builder#setResultGrouping(int, int)":"构建器＃setResultGrouping（int，int）\r\n","The amount of time, in milliseconds, between each frame of the animation. -or- The amount of time, in milliseconds, between each frame of the animation.":"动画的每个帧之间的时间，以毫秒为单位。 - 或 - 动画的每个帧之间的时间，以毫秒为单位。\r\n","android.app.admin.DevicePolicyManager.setRecommendedGlobalProxy(android.content.ComponentName, .*ProxyInfo)":"android.app.admin.devicepolicymanager.setRecommendedglobalproxy（android.content.componentname，。*proxyinfo）\r\n","Remove any alarms with a matching ":"删除与匹配的所有警报\r\n","Shows a previously hidden fragment.":"显示一个先前隐藏的片段。\r\n","android.app.Dialog.onTrackballEvent(android.view.MotionEvent)":"android.app.dialog.ontrackballevent（android.view.motionevent）\r\n","android.app.appsearch.SearchSpec.getRankingStrategy()":"android.app.appsearch.searchspec.getrankingstrategy（）\r\n","android.app.Dialog.getWindow()":"android.app.dialog.getWindow（）\r\n","The key to store the Preference value.":"存储首选项值的关键。\r\n","Capability: This accessibility service can request enhanced web accessibility\n enhancements.":"功能：此可访问性服务可以请求增强的Web可访问性\r\n 增强。\r\n","android.app.Dialog.onActionModeStarted(android.view.ActionMode)":"android.app.dialog.onactionmodestarted（android.view.actionMode）\r\n","Class that can be used to lock and unlock the keyguard.":"可以用来锁定和解锁钥匙守护的类。\r\n","android.app.Activity.setPictureInPictureParams(android.app.PictureInPictureParams)":"android.app.activity.setPictureInPictureParams（android.app.pictureinpictureparams）\r\n","android.app.PictureInPictureUiState.isStashed()":"android.app.pictureinpictureuistate.isstashed（）\r\n","Accent color (an ARGB integer like the constants in ":"重音颜色（像常数一样的ARGB整数\r\n","android.app.AppOpsManager.finishOp(java.lang.String, int, java.lang.String)":"android.app.appopsmanager.finishop（java.lang.string，int，java.lang.string）\r\n","Finishes the session started by ":"结束会议开始\r\n","Number of activities in this task.":"此任务中的活动数量。\r\n"," is invoked.\n      ":" 被调用。\r\n      \r\n",", but\n            taking a IntentSender; see\n            ":"， 但\r\n            带有意图人；看\r\n            \r\n","android.app.admin.SystemUpdateInfo":"android.app.admin.SystemupDateInfo\r\n","The class part of the ComponentName to assign to the Intent, as per\n            ":"按照组件名的类别分配给意图的一部分\r\n            \r\n","android.app.slice.SliceSpec":"Android.App.Slice.SliceSpec\r\n","\n This mode makes sense for things that will be explicitly started\n and stopped to run for arbitrary periods of time, such as a service\n performing background music playback.\n        ":"\r\n 这种模式对于明确启动的事物是有意义的\r\n 并停止跑步任意时间，例如服务\r\n 表演背景音乐播放。\r\n        \r\n","android.app.admin.DevicePolicyManager.setGlobalPrivateDnsModeOpportunistic(android.content.ComponentName)":"android.app.admin.devicepolicymanager.setglobalprivatednsmodeopportunistic（android.content.componentname）\r\n","Checks whether this searchable activity should be queried for suggestions if a prefix\n            of the query has returned no results.":"检查是否应查询此可搜索活动，以获取建议\r\n            查询的中没有返回结果。\r\n","android.accessibilityservice.AccessibilityService.GESTURE_3_FINGER_SWIPE_LEFT":"Android.AccessibilityService.Accessibilityservice.gesture_3_finger_swipe_left\r\n","android.app.NotificationManager.ACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED":"android.app.notificationmanager.action_notification_channel_group_block_state_changed\r\n","//meta-data/@android:name":"// meta-data/@android：名称\r\n","android.app.NotificationChannel.getLightColor()":"android.app.notificationChannel.getLightColor（）\r\n","android.os.Build.VERSION_CODES#O":"android.os.build.version_codes＃o\r\n","android.bluetooth.BluetoothA2dp":"android.bluetooth.bluetootha2dp\r\n","\n            database.":"\r\n            数据库。\r\n","stopMessage; elapsed: %lis:%lu::%lu":"停止;过去：％lis：％lu ::％lu\r\n","android.app.Instrumentation.waitForMonitorWithTimeout(android.app.ActivityMonitor, long)":"android.app.Instrumentation.WaitFormonitorWithTimeOut（android.app.ActivityMonitor，long）\r\n","Indicates that an app process was started.":"表示启动了应用程序。\r\n","Lets all Fragments managed by the controller's FragmentManager\n            know a configuration change occurred.":"让所有片段由控制器的FragmentManager管理\r\n            知道发生配置更改。\r\n","If set, the text view will include its current complete text\n             inside of its frozen icicle in addition to meta-data such as\n             the current cursor position.":"如果设置，文本视图将包含其当前完整文本\r\n             除了元数据之外，它的冷冻冰柱内部\r\n             当前的光标位置。\r\n","BluetoothProfile#GATT":"BluetoothProfile＃Gatt\r\n","Called when a context menu for the ":"当上下文菜单的上下文菜单\r\n","Return a Context for the target application being instrumented.":"返回仪器目标应用程序的上下文。\r\n","keySpec":"Keyspec\r\n","android.app.Notification.MediaStyle":"android.app.notification.mediastyle\r\n","android.app.Activity.onVisibleBehindCanceled()":"android.app.activity.onvisibleBehindCanceLed（）\r\n","\n      invocations.\n    ":"\r\n      召唤。\r\n    \r\n","android.app.ActionBar.getElevation()":"android.app.actionbar.getElevation（）\r\n","Drawable to use for the Cut action button in Contextual Action Bar \n         ":"可用于上下文动作栏中的剪切动作按钮\r\n         \r\n","Indicates whether this activity is launched from a bubble.":"指示该活动是否是从气泡发射的。\r\n","android.bluetooth.BluetoothGattCharacteristic.PERMISSION_READ_ENCRYPTED":"android.bluetooth.bluetoothgattcharacteristic.permission_read_encrypted\r\n","android.app.ActivityManager.getAppTaskThumbnailSize()":"android.app.activityManager.getAppTaskThumbNailSize（）\r\n","android.app.Notification.CATEGORY_PROMO":"android.app.notification.category_promo\r\n","android.accessibilityservice.AccessibilityService.GLOBAL_ACTION_RECENTS":"Android.AccessibilityService.Accessibilityservice.global_action_recents\r\n","when there was insufficient storage space. ":"当存储空间不足时。\r\n","The component of the top activity in the task, currently showing to the user.":"任务中最高活动的组成部分，当前显示给用户。\r\n","#updateAppWidgetOptions(int, Bundle)":"#updateappwidgetoptions（int，捆绑包）\r\n","android.app.Instrumentation.waitForIdleSync()":"android.app.instrumentation.waitforidlesync（）\r\n","android.app.admin.DnsEvent":"android.app.admin.dnsevent\r\n","android.app.admin.DeviceAdminReceiver.onLockTaskModeExiting(android.content.Context, android.content.Intent)":"android.app.admin.deviceadminreceiver.onlocktaskmodeexiting（android.content.context，android.content.intent）\r\n","android.animation.Animator.removePauseListener(android.animation.AnimatorPauseListener)":"android.animation.animator.removepauselistener（android.animation.animatorpauselistener）\r\n","android.app.Notification.getSmallIcon()":"android.app.notification.getsmallicon（）\r\n","Fragment#setEnterSharedElementCallback(SharedElementCallback)":"fragment＃setEnterSharedElementCallback（sharedElementCallback）\r\n","; these items might not be shown to the user except under special\n            circumstances, such as detailed notification logs.":";除非特殊\r\n            情况，例如详细的通知日志。\r\n","Schedules a commit of this transaction.":"安排此交易的提交。\r\n","Sets or forgets a saved password.":"设置或忘记保存的密码。\r\n","Concrete value to assign to this piece of named meta-data.":"具体价值分配给该命名的元数据。\r\n","java.lang.System#exit":"Java.lang.System＃退出\r\n","android.accessibilityservice.AccessibilityServiceInfo.FLAG_REQUEST_SHORTCUT_WARNING_DIALOG_SPOKEN_FEEDBACK":"Android.AccessibilityService.Accessibilityserviceinfo.flag_request_shortcut_warning_dialog_spoken_feedback\r\n","android.app.Fragment.onCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)":"android.app.fragment.oncreateoptionsmenu（android.view.menu，android.view.menuinflater）\r\n","The reason for ":"的原因\r\n","Report to the system that your app is now fully drawn, for diagnostic and\n            optimization purposes.":"向系统报告您的应用程序现在已完全绘制，用于诊断和\r\n            优化目的。\r\n","android.app.NotificationManager.cancel(int)":"android.app.notificationmanager.cancel（int）\r\n","Amount of time (in milliseconds) to fade out an old state drawable.":"时间（以毫秒为单位）淡出可抽出旧状态的时间。\r\n","android.animation.Keyframe.hasValue()":"android.animation.keyframe.hasvalue（）\r\n","android.app.admin.DevicePolicyManager.setUninstallBlocked(android.content.ComponentName, java.lang.String, boolean)":"android.app.admin.devicepolicymanager.setuninstallblocked（android.content.componentname，java.lang.string，boolean）\r\n","Set a listener to be invoked when the negative button of the dialog is pressed.":"按下对话框的负按钮时，设置侦听器将被调用。\r\n","android.accounts.AccountManager.notifyAccountAuthenticated(android.accounts.Account)":"android.accounts.accountmanager.notifyAccountauthenticated（android.accounts.account）\r\n","A simple fade-out animation.":"一个简单的淡出动画。\r\n","Set a description of this download, to be displayed in notifications (if enabled)":"设置此下载的描述，将在通知中显示（如果启用）\r\n","All packages that have been loaded into the process.":"所有已加载到该过程的软件包。\r\n","Returns the current runtime nearby app streaming policy set by the device or profile owner. -or- Called by a device/profile owner to set nearby app streaming policy.":"返回设备或配置文件所有者设置的当前运行时应用程序流策略。 - 或者由设备/配置文件所有者调用以设置附近的应用流策略。\r\n","Callback for creating dialogs that are managed (saved and restored) for you\n            by the activity.":"为您创建对您的对话框的回调（保存和还原）\r\n            通过活动。\r\n","A String extra of localized disclaimer header.":"额外的本地化免责声明标头。\r\n","Sets a listener that is sent update events throughout the life of\n            an animation.":"设置一个在整个生命中发送更新事件的听众\r\n            动画。\r\n","Disable face authentication on keyguard secure screens (e.":"在Keyguard安全屏幕上禁用面部身份验证（e。\r\n","Retrieve the current Window for the activity.":"检索当前活动的窗口。\r\n","android.accessibilityservice.AccessibilityService.ERROR_TAKE_SCREENSHOT_INTERVAL_TIME_SHORT":"Android.AccessibilityService.AccessibilityService.Error_take_screenshot_interval_ttime_short\r\n","Called when the instance has been disposed.":"在处理该实例时调用。\r\n","android.app.Activity.createPendingResult(int, android.content.Intent, int)":"android.app.Activity.CreatePendingResult（int，android.content.intent，int）\r\n","android.app.FragmentTransaction.attach(android.app.Fragment)":"Android.App.FragmentTransaction.Attach（Android.App.Fragment）\r\n","The large icon shown in this notification's content view.":"此通知的内容视图中显示的大图标。\r\n","android.app.ActionBar.removeTab(android.app.Tab)":"android.app.actionbar.removetab（android.app.tab）\r\n","The width that is used when creating thumbnails of applications.":"创建应用程序缩略图时使用的宽度。\r\n","\n[JniTypeSignature (\"my/Example\")]\npartial class ExampleBinding : IJavaPeerable {\n\n\tpublic void Dispose ()\n\t{\n        JniEnvironment.Runtime.ValueManager.Dispose (this);\n\t}\n\n\tprotected virtual void Dispose (bool disposing)\n\t{\n\t}\n\n\tvoid IJavaPeerable.Disposed ()\n\t{\n\t    Dispose (disposing: true);\n\t}\n}\n        ":"\r\n[jnitypesignature（“我/示例”）]\r\n部分类示例示例：\r\n\r\n公共空白dispose（）\r\n{\r\n        jnienvironment.runtime.valuemanager.dispose（this）;\r\n}\r\n\r\n受保护的虚拟空隙处置（布尔处置）\r\n{\r\n}\r\n\r\nvoid ijavapeer.disposed（）\r\n{\r\n处置（处置：true）；\r\n}\r\n}\r\n        \r\n"," key: the icon to be displayed as a verification status of the caller on a\n            ":" 键：要显示为呼叫者的验证状态的图标\r\n            \r\n","Makes the TextView be exactly this many pixels tall.":"使文本视图正是这么多像素。\r\n","Return a list of all currently active device administrators' component\n            names.":"返回所有当前活动设备管理员的组件的列表\r\n            名称。\r\n","\n      for the wrapped instance.\n    ":"\r\n      对于包装实例。\r\n    \r\n","#getBroadcast":"#getBroadcast\r\n","Called when the given InputQueue is now associated with the\n thread making this call, so it can start receiving events from it.":"当给定的输入标准现在与\r\n 进行此通话的线程，因此它可以开始从中接收事件。\r\n","JobScheduler":"JobsCheduler\r\n","#registerFingerprintGestureCallback":"#RegisterFingerPrinterCallecallback\r\n","An internal error occurred within AppSearch, which the caller cannot address.":"在AppSearch中发生了内部错误，呼叫者无法解决。\r\n","Called when the set of available widgets changes (ie.":"当可用的小部件集更改时，请调用（即。\r\n","If you wish to handle an action key while a suggestion is being displayed ":"如果您想在显示建议时处理操作键\r\n","#isVoiceInteraction":"#isvoiceInteraction\r\n","android.app.DownloadManager.ERROR_FILE_ERROR":"android.app.downloadmanager.error_file_error\r\n","Called by profile owner of an organization-owned managed profile to check whether\n            personal apps are suspended.":"由组织拥有的托管个人资料的个人资料所有者调用，以检查是否是否\r\n            个人应用程序被暂停。\r\n","If the file to be downloaded is to be scanned by MediaScanner, this method\n should be called before ":"如果要下载的文件将由MediaScanner扫描，则此方法\r\n 应该在\r\n"," of the parent notification channel to this channel, if it's\n            a conversation related channel.":" 如果是的，则是该频道的父母通知渠道的\r\n            与对话有关的频道。\r\n","Sets the position of the animation to the specified fraction.":"将动画的位置设置为指定的分数。\r\n","Activity#startActivityForResult(Intent, int)":"活动＃startActivityForresult（意图，INT）\r\n","android.app.SearchManager.INTENT_ACTION_SEARCHABLES_CHANGED":"android.app.searchmanager.intent_action_searchables_changed\r\n","Sets whether the dialog is cancelable or not.":"设置对话框是否可以取消。\r\n","Specify the orientation an activity should be run in.":"指定应进行活动的方向。\r\n","Specifies that Private DNS was turned off completely.":"指定私人DNS完全关闭。\r\n","Calendar#MONTH":"日历＃月\r\n","android.app.AlarmManager.setTime(long)":"android.app.alarmmanager.settime（long）\r\n","android.app.AppOpsManager.OPSTR_MOCK_LOCATION":"android.app.appopsmanager.opptr_mock_location\r\n","A unique identifier for this task.":"该任务的唯一标识符。\r\n","Returns the soft keyboard controller, which may be used to query and modify the soft keyboard\n            show mode.":"返回软键盘控制器，可用于查询和修改软键盘\r\n            显示模式。\r\n","If the Notification associated with starting a foreground service has been\n            built using setForegroundServiceBehavior() with this behavior, display of\n            the notification will be immediate even if the default behavior would be\n            to defer visibility for a short time.":"如果与启动前景服务相关的通知已\r\n            使用SetForegroundServiceBehavior（）构建此行为，显示\r\n            即使默认行为是\r\n            在短时间内推迟可见性。\r\n","Note: Otherwise it is null.":"注意：否则为空。\r\n","\n          Whether or not the activity can be instantiated by the system.\n        ":"\r\n          该活动是否可以由系统实例化。\r\n        \r\n","Called by the system when the device configuration changes while your\n            activity is running.":"当设备配置更改时，系统调用\r\n            活动正在运行。\r\n","Intent#ACTION_ASSIST":"意图＃action_assist\r\n","android.app.admin.DevicePolicyManager.setDefaultSmsApplication(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.setDefaultsmsmsapplication（android.content.componentname，java.lang.string）\r\n","F:Android.Locations.SettingInjectorService.OnStartCommand":"f：android.locations.setTingInjectionService.OnstartCommand\r\n","Y coordinate of the origin of the gradient within the shape.":"y在形状内的梯度原点的坐标。\r\n","Color of list item text in alert dialogs.":"警报对话框中列表项目文本的颜色。\r\n","android.app.DownloadManager.EXTRA_DOWNLOAD_ID":"android.app.downloadmanager.extra_download_id\r\n","Offers the user an opportunity to change an authenticator's settings.":"为用户提供一个更改身份验证者设置的机会。\r\n","Method for the app to tell system that it's wedged and would like to trigger an ANR.":"该应用程序告诉系统楔入并希望触发ANR的方法。\r\n","android.app.NotificationManager.isNotificationPolicyAccessGranted()":"android.app.notificationmanager.isnotification policyAccessgranted（）\r\n"," key: the intent to be sent when the users hangs up a\n            ":" 钥匙：用户挂起时要发送的意图\r\n            \r\n","Style for segmented buttons - a container that houses several buttons\n             with the appearance of a singel button broken into segments.":"分段按钮的样式 - 一个容器可容纳多个按钮\r\n             出现单件按钮的外观分为细分市场。\r\n","android.app.admin.DevicePolicyManager.setShortSupportMessage(android.content.ComponentName, java.lang.CharSequence)":"android.app.admin.devicepolicymanager.setshortsupportmessage（android.content.componentname，java.lang.charsequence）\r\n","Supply an identifier name for this view, to later retrieve it\n             with ":"为此视图提供标识符名称，以后再检索\r\n             和\r\n","The user has performed an up and left gesture on the touch screen.":"用户在触摸屏上执行了一个启动和左手势。\r\n","android.animation.ObjectAnimator.ofMultiInt(java.lang.Object, java.lang.String, int[][])":"android.animation.ObjectAnimator.ofmultiint（java.lang.Object，java.lang.string，int [] [] []）\r\n","Sets a listener to be invoked when the dialog is shown.":"在显示对话框时设置要调用的侦听器。\r\n","Look up the description of a scheduled job.":"查找计划工作的描述。\r\n"," it creates.":" 它创建。\r\n","Indicates that there has been an authentication attempt to dismiss the keyguard.":"表明已经有一种身份验证试图驳回关键守卫。\r\n","\n        Use the ":"\r\n        使用\r\n","android.app.PendingIntent.writePendingIntentOrNullToParcel(android.app.PendingIntent, android.os.Parcel)":"android.app.pendingIntent.WritePendingIntentOrnulltoparcel（android.app.pendententent，android.os.os.parcel）\r\n","android.app.admin.DevicePolicyManager.setFactoryResetProtectionPolicy(android.content.ComponentName, android.app.admin.FactoryResetProtectionPolicy)":"android.app.admin.devicepolicymanager.setFactoryResetProtectionpolicy（android.content.componentname，android.app.admin.factoryResetProtectionpolicypolicy）\r\n","Must be required by device administration receiver, to ensure that only the\n         system can interact with it.":"设备管理接收器必须需要\r\n         系统可以与之互动。\r\n"," key: whether the notification should be colorized as\n            supplied to ":" 关键：是否应将通知颜色为\r\n            提供给\r\n","android.accessibilityservice.AccessibilityServiceInfo.FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY":"Android.AccessibilityService.Accessibilityserviceinfo.flag_request_enhanced_web_accessibility\r\n","android.appwidget.AppWidgetManager.ACTION_APPWIDGET_RESTORED":"android.appwidget.appwidgetManager.action_appwidget_restored\r\n","#getChoices":"#getChoices\r\n","Return the ":"返回\r\n","android.accessibilityservice.AccessibilityService.GLOBAL_ACTION_TOGGLE_SPLIT_SCREEN":"Android.AccessibilityService.Accessibilityservice.global_action_toggle_split_screen\r\n","android.app.appsearch.AppSearchSession.remove(android.app.appsearch.RemoveByDocumentIdRequest, java.util.concurrent.Executor, android.app.appsearch.BatchResultCallback)":"android.app.app.appsearch.appsearchsession.remove（android.app.app.appsearch.removebydocumentidrequest，java.util.util.concurrent.executor，android.app.app.app.app.app.app.app.app.appsearch.batchresultcallcallback）\r\n","Returns the type of system update policy, or -1 if no policy has been set.":"返回系统更新策略的类型，或-1如果未设置策略。\r\n","java.lang.Exception":"java.lang.exception\r\n","Gets the name of the property that will be animated. -or- Sets the name of the property that will be animated.":"获取将动画的属性的名称。 - 或设置将动画的属性名称。\r\n","The user has performed a two-finger swipe right gesture on the touch screen.":"用户在触摸屏上执行了双手滑动右手势。\r\n"," \n            property. If AndroidClientHandler is not able to detect the kind of authentication scheme it will store an\n            instance of ":" \r\n            财产。如果AndroidClientHandler无法检测到身份验证方案的类型，它将存储\r\n            实例\r\n","Returns whether the specified app is currently considered inactive.":"返回当前指定的应用程序是否被视为无效。\r\n","Returns the SHA-256 hash of the blob that this object is representing.":"返回该对象代表的斑点的SHA-256哈希。\r\n","android.app.AppOpsManager.noteProxyOp(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String)":"android.app.appopsmanager.noteproxyop（java.lang.string，java.lang.string，int，java.lang.string，java.lang.string）\r\n","android.app.FragmentTransaction.setBreadCrumbShortTitle(int)":"Android.App.FragmentTransaction.setbreadcrumbshorttitle（int）\r\n","A required ":"必需的\r\n","android.bluetooth.BluetoothGattCharacteristic.getPermissions()":"android.bluetooth.bluetoothgattcharacteristic.getmissions（）\r\n","android.app.usage.UsageStats.getFirstTimeStamp()":"android.app.usage.usagestats.getFirstTimestamp（）\r\n","Hint indicating that this item (and its sub-items) are the current selection.":"提示表明此项目（及其子项目）是当前的选择。\r\n",", but performs the operation immediately\n            inside of the call.":"，但立即执行操作\r\n            通话的内部。\r\n",", \n             ":"，，，，\r\n             \r\n","The layout resource id of a preview of what the AppWidget will look like after it's\n            configured.":"AppWidget的预览的布局资源ID在它之后的样子\r\n            配置。\r\n","The caller requested an operation it does not have privileges for.":"呼叫者要求采用其没有特权的操作。\r\n","s obtained\n            by an ":"S获得了\r\n            由\r\n","android.app.backup.BackupDataInput.readNextHeader()":"android.app.backup.backupdatainput.readnextheader（）\r\n","android.app.FragmentTransaction.setTransitionStyle(int)":"Android.App.FragmentTransaction.setTransitionStyle（INT）\r\n"," so that the activity will manage its\n            lifecycle for you.":" 这样该活动将管理其\r\n            您的生命周期。\r\n","android.app.ActionBar.setListNavigationCallbacks(android.widget.SpinnerAdapter, android.app.OnNavigationListener)":"android.app.actionbar.setlistnavigationCallbacks（android.widget.spinneradapter，android.app.onnavigationListener）\r\n","Control whether a fragment instance is retained across Activity\n            re-creation (such as from a configuration change).":"控制是否在活动中保留片段实例\r\n            重新创建（例如配置更改）。\r\n","Declare that the options menu has changed, so should be recreated.":"声明选项菜单已更改，因此应重新创建。\r\n","android.appwidget.AppWidgetManager.EXTRA_HOST_ID":"android.appwidget.appwidgetManager.extra_host_id\r\n","Called by device owners or profile owners of an organization-owned managed profile to to set\n            a local system update policy.":"由组织拥有的托管资料的设备所有者或个人资料所有者拨打以设置\r\n            本地系统更新策略。\r\n","Positions the left edge of this view to the right of the given anchor view ID.":"将此视图的左边缘定位在给定锚视图ID的右侧。\r\n","Get the end of the time range this ":"结束时间范围\r\n"," key: the intent to be sent when the users answers a\n            ":" 关键：用户回答A时发送的意图\r\n            \r\n","android.app.DownloadManager.remove(long[])":"android.app.downloadmanager.remove（long []）\r\n","android.app.UiModeManager.getCurrentModeType()":"android.app.uimodemanager.getCurrentModeType（）\r\n","Called when a translucent activity over this activity is becoming opaque or another\n            activity is being launched.":"当该活动上的半透明活动变成不透明或其他\r\n            活动正在启动。\r\n","The minimum level allowed for this item.":"此项目允许的最低水平。\r\n","android.accessibilityservice.AccessibilityService.GESTURE_SWIPE_DOWN_AND_LEFT":"Android.AccessibilityService.Accessibilityservice.gesture_swipe_down_and_left\r\n","Create an uninitialized instance of BatteryInfo.":"创建电池的非直接实例。\r\n","Standard content view for a ":"标准内容视图\r\n","Retrieves documents from the open ":"从公开赛中检索文件\r\n","Waits for the accessibility event stream to become idle, which is not to\n            have received an accessibility event within <code>idleTimeoutMillis</code>.":"等待可访问性事件流变得闲置，这不是\r\n            已经在<code> idletimeoutmillis </code>中收到了可访问性事件。\r\n","Get the root view for the fragment's layout (the one returned by ":"获取片段布局的根视图（由\r\n","Amount of backoff a job has initially by default, in milliseconds.":"默认情况下，默认情况下，工作的退缩量。\r\n","Represents a Bluetooth class, which describes general characteristics\n            and capabilities of a device.":"代表蓝牙类，描述了一般特征\r\n            和设备的功能。\r\n","A String extra holding a url that specifies the download location of the device admin\n            package.":"字符串额外持有URL指定设备管理的下载位置\r\n            包裹。\r\n","android.app.admin.DevicePolicyManager.INSTALLKEY_REQUEST_CREDENTIALS_ACCESS":"android.app.admin.devicepolicymanager.installkey_request_credentials_access\r\n","Base class for maintaining global application state.":"维护全球应用程序状态的基类。\r\n"," when the download exceeds a size limit for downloads over\n            the mobile network and the download manager is waiting for a Wi-Fi connection to proceed.":" 当下载超过下载尺寸限制时\r\n            移动网络和下载管理器正在等待Wi-Fi连接继续进行。\r\n","Called by a profile owner or device owner to grant access to privileged APIs to another app.":"由配置文件所有者或设备所有者拨打授予对另一个应用程序的特权API的访问权限。\r\n","\n            has returned, but before any saved state has been restored in to the view.":"\r\n            已经返回，但是在将任何保存状态恢复到视图之前。\r\n","Default appearance of text against an inverted background:\n             color, typeface, size, and style.":"在倒置背景下的默认文本外观：\r\n             颜色，字体，大小和样式。\r\n","Specifies that the device should attest its MEID.":"指定该设备应证明其MEID。\r\n","The preferred TextAppearance for the primary text of small list items.":"小型列表项目的主要文本的首选文本应用。\r\n","android.app.WallpaperColors.WallpaperColors(android.graphics.Color, android.graphics.Color, android.graphics.Color, int)":"android.app.wallpapercolors.wallpapercolors（android.graphics.color，android.graphics.color，android.graphics.color，int）\r\n","android.app.admin.SystemUpdatePolicy.createWindowedInstallPolicy(int, int)":"Android.App.Admin.SystemupDatePolicy.CreateWindowEdedInstallPolicy（INT，INT）\r\n","Controller for the accessibility button within the system's navigation area":"系统导航区域内的可访问性按钮的控制器\r\n"," that can\n            be used to start a secure outgoing connection to the remote device with the same dynamic\n            protocol/service multiplexer (PSM) value.":" 这样可以\r\n            使用相同的动态来启动与远程设备的安全发出连接\r\n            协议/服务多路复用器（PSM）值。\r\n","android.app.admin.DeviceAdminReceiver.EXTRA_DISABLE_WARNING":"android.app.admin.deviceadminreceiver.extra_disable_warning\r\n","android.app.WallpaperManager.EXTRA_LIVE_WALLPAPER_COMPONENT":"android.app.wallpapermanager.extra_live_wallpaper_component\r\n","android.app.appsearch.GenericDocument.getId()":"android.app.appsearch.genericdocument.getId（）\r\n","Indicates the initial checked state of this button.":"指示此按钮的初始检查状态。\r\n","android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_TRUST_AGENTS":"android.app.admin.devicepolicymanager.keyguard_disable_trust_agents\r\n","android.app.usage.NetworkStatsManager.unregisterUsageCallback(android.app.usage.UsageCallback)":"android.app.usage.networkstatsmanager.unregisterusagecallback（android.app.usage.usage.usagecallback）\r\n","Specify a URI authority host that is handled, as per\n             ":"指定处理的URI授权主机\r\n             \r\n","android.app.AutomaticZenRule.getInterruptionFilter()":"android.app.automationzenrule.getInterruptionfilter（）\r\n"," but retrieves data results for a\n            specific RemoteInput result.":" 但是检索数据结果\r\n            特定的远程点结果。\r\n","Convert an activity, which particularly with ":"转换一项活动，特别是\r\n"," but allows the commit to be executed after an\n            activity's state is saved.":" 但是允许该提交在\r\n            活动的状态被保存。\r\n","Retrieve the current number of letters required in the password\n            for a particular admin or all admins that set restrictions on this user\n            and its participating profiles.":"检索密码中所需的当前字母数量\r\n            对于特定的管理员或所有设置此用户限制的管理员\r\n            及其参与概况。\r\n","android.app.job.JobParameters":"Android.App.Job.JobParameters\r\n","android.accessibilityservice.AccessibilityService.GESTURE_2_FINGER_TRIPLE_TAP_AND_HOLD":"Android.AccessibilityService.Accessibilityservice.gesture_2_finger_triple_tap_and_hold\r\n"," to skip setup wizard after creating a new user.":" 创建新用户后跳过设置向导。\r\n","PendingIntent#FLAG_UPDATE_CURRENT":"pendingIntent＃flag_update_current\r\n","), then\n            also make this service run in the foreground, supplying the ongoing\n            notification to be shown to the user while in this state.":"）， 然后\r\n            也使这项服务在前景中运行，提供正在进行的\r\n            在此状态下向用户显示的通知。\r\n","android.app.FragmentTransaction.setBreadCrumbTitle(int)":"Android.App.FragmentTransaction.setbreadcrumbtitle（int）\r\n","Retrieve the result code contained in this result.":"检索此结果中包含的结果代码。\r\n","android.app.ActionBar.setIcon(android.graphics.drawable.Drawable)":"android.app.actionbar.seticon（android.graphics.drawable.drabable）\r\n","Get the label to display to users when collecting this input.":"收集此输入时，将标签显示给用户。\r\n","Retrieve a ":"检索\r\n"," if the\n            ID is invalid (< 0), there is no matching view in the hierarchy, or the\n            dialog has not yet been fully created (for example, via ":" 如果是\r\n            ID无效（<0），层次结构中没有匹配视图，或\r\n            对话框尚未完全创建（例如，通过\r\n","android.bluetooth.BluetoothDevice.getAlias()":"android.bluetooth.bluetoothdevice.getalias（）\r\n","android.app.Activity.onTopResumedActivityChanged(boolean)":"android.app.Activity.NopopresumedActivityChanged（布尔）\r\n","android.animation.ValueAnimator.getRepeatCount()":"android.animation.valueAnimator.getRepeatCount（）\r\n","View ID of the ":"查看ID\r\n","android.accessibilityservice.AccessibilityService.GESTURE_SWIPE_UP_AND_LEFT":"Android.AccessibilityService.Accessibilityservice.gesture_swipe_up_and_left\r\n","android.app.AppOpsManager.OPSTR_PROCESS_OUTGOING_CALLS":"android.app.appopsmanager.opptr_process_outoning_calls\r\n","android.app.NotificationChannel.setAllowBubbles(boolean)":"Android.App.NotificationChannel.SetAllowBubbles（布尔值）\r\n","android.app.Dialog.onMenuOpened(int, android.view.Menu)":"android.app.dialog.onmenuopened（int，android.view.menu）\r\n","android.app.usage.StorageStatsManager":"android.app.usage.storagestatsmanager\r\n","android.app.admin.SecurityLog.TAG_OS_STARTUP":"android.app.admin.securitylog.tag_os_startup\r\n"," name for write\n         access to a ":" 写的名称\r\n         访问a\r\n","Accessor for the future result the ":"将来的访问者\r\n","This class represents the specification logic for AppSearch.":"此类代表AppSearch的规范逻辑。\r\n","Set a ":"设置\r\n","android.accounts.AccountManager.KEY_LAST_AUTHENTICATED_TIME":"android.accounts.accountmanager.key_last_authenticated_time\r\n","A flag indicating the animation that runs on those items that are appearing\n in the container.":"指示在出现的项目上运行的动画的标志\r\n 在容器中。\r\n","android.app.Notification.EXTRA_SMALL_ICON":"android.app.notification.extra_small_icon\r\n","android.accessibilityservice.AccessibilityService.GESTURE_3_FINGER_SINGLE_TAP":"Android.AccessibilityService.Accessibilityservice.gesture_3_finger_single_tap\r\n","android.app.FragmentController.doLoaderDestroy()":"android.app.fragmentController.doloaderdestroy（）\r\n","Called by device owner to get all override APNs inserted by device owner.":"设备所有者称呼设备所有者插入的所有替代APN。\r\n","android.accessibilityservice.AccessibilityService.GLOBAL_ACTION_DISMISS_NOTIFICATION_SHADE":"Android.AccessibilityService.Accessibilityservice.global_action_dismiss_notification_shade\r\n","android.app.Notification.EXTRA_VERIFICATION_ICON":"android.app.notification.extra_verification_icon\r\n","#removeDialog(int)":"#remervedialog（int）\r\n","The job was cancelled directly by the app, either by calling\n            ":"该作业直接被应用程序取消，要么致电\r\n            \r\n","The DatePicker style.":"datepicker样式。\r\n","android.app.AppOpsManager.MODE_IGNORED":"android.app.appopsmanager.mode_ignored\r\n","#isHidden()":"#ishidded（）\r\n","#onSharedElementEnd(java.util.List,\n            java.util.List, java.util.List)":"#onsharedelementend（java.util.list，\r\n            java.util.list，java.util.list）\r\n","android.animation.RectEvaluator.RectEvaluator(android.graphics.Rect)":"android.animation.RecteValuator.Rectevaluator（android.graphics.Rect）\r\n","android.app.people.ConversationStatus.getEndTimeMillis()":"android.app.people.conversationstatus.getendtimemillis（）\r\n",",\n             this is the new way to specify the largest screens an application is\n             compatible with.":"，，，，\r\n             这是指定应用程序的最大屏幕的新方法\r\n             与。\r\n","android.app.slice.Slice.HINT_SELECTED":"android.app.slice.slice.hint_selected\r\n","Returns the package name of the UID that performed the query, as returned by\n            ":"返回执行查询的UID的软件包名称，\r\n            \r\n","Activity name.":"活动名称。\r\n","Returns a string representation of the specified gesture id.":"返回指定手势ID的字符串表示。\r\n","android.app.ActionBar.hide()":"android.app.actionbar.hide（）\r\n","Returns what icon should be shown for this notification if it is being displayed in a\n            Launcher that supports badging.":"返回该通知应显示的图标应显示的图标。\r\n            支持徽章的发射器。\r\n","String extra for ":"字符串额外\r\n","android.app.VoiceInteractor.unregisterOnDestroyedCallback(java.lang.Runnable)":"android.app.voiceinteractor.unregisterondestroyedcallback（java.lang.runnable）\r\n",", giving the Notification an\n            opportunity to show more detail.":"，通知\r\n            有机会显示更多细节。\r\n","android.bluetooth.BluetoothDevice.ACTION_UUID":"android.bluetooth.bluetoothdevice.action_uuid\r\n","The unicode value or comma-separated values that this key outputs.":"该密钥输出的Unicode值或逗号分隔值。\r\n","android.app.admin.DevicePolicyManager.addPersistentPreferredActivity(android.content.ComponentName, android.content.IntentFilter, android.content.ComponentName)":"android.app.admin.devicepolicymanager.addpersistentpreferredervity（android.content.componentname，android.content.intent.intentfilter，android.content.content.componentnname）\r\n","Secondary inverse text color, useful for inverted backgrounds.":"次级逆文本颜色，可用于倒置背景。\r\n","android.app.Notification.extras":"android.app.notification.extras\r\n","android.app.ActionBar.setDisplayShowCustomEnabled(boolean)":"android.app.actionbar.setdisplayshowcustomenabled（boolean）\r\n","Set a network-independent global HTTP proxy.":"设置独立于网络的全局HTTP代理。\r\n","Constructor using a context and theme for this builder and\n the ":"使用上下文和主题的构造函数和该构建器和主题\r\n 这\r\n","Minimum length of a stroke before it is recognized as a gesture.":"中风的最小长度在将其识别为手势之前。\r\n","Load the user-displayed label for this device admin.":"加载此设备管理员的用户显示标签。\r\n","android.app.SyncNotedAppOp.SyncNotedAppOp(int, java.lang.String)":"android.app.syncnotedappop.syncnotedappop（int，java.lang.string）\r\n","Show 'home' elements in this action bar, leaving more space for other\n navigation elements. ":"在此动作栏中显示“家”元素，为其他人留下更多空间\r\n 导航元素。\r\n","android.appwidget.AppWidgetManager.bindAppWidgetIdIfAllowed(int, android.content.ComponentName, android.os.Bundle)":"android.appwidget.appwidgetManager.bindappwidgetIflowered（int，android.content.componentname，android.os.bundle）\r\n","android.app.Fragment.instantiate(android.content.Context, java.lang.String)":"android.app.fragment.instantiate（android.content.context，java.lang.string）\r\n","Extra offset for the handle at the bottom of the SlidingDrawer.":"额外的偏移量，用于滑动抽屉底部的手柄。\r\n","android.app.admin.DevicePolicyManager.hasKeyPair(java.lang.String)":"android.app.admin.devicepolicymanager.haskeypair（java.lang.string）\r\n","android.app.admin.DevicePolicyManager.acknowledgeDeviceCompliant()":"android.app.admin.devicepolicymanager.acknowledgededevicecompoliant（）\r\n","android.app.WallpaperInfo.getServiceInfo()":"android.app.wallpaperinfo.getServiceInfo（）\r\n","Allows applications to write the apn settings \n":"允许应用程序编写APN设置\r\n\r\n","Per-child layout information associated with action bar custom views.":"与动作栏自定义视图相关的每个孩子布局信息。\r\n","A long message describing the error condition.":"一条描述错误条件的长消息。\r\n","Turn off special mode if currently in car mode.":"如果当前处于汽车模式，请关闭特殊模式。\r\n","android.app.admin.DevicePolicyManager.getGlobalPrivateDnsHost(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getglobalprivatednshost（android.content.componentname）\r\n","android.app.ActionBar.removeTabAt(int)":"android.app.actionbar.removetabat（int）\r\n","android.animation.PointFEvaluator.evaluate(float, android.graphics.PointF, android.graphics.PointF)":"android.animation.pointFevaluator.evaluate（float，android.graphics.pointf，android.graphics.pointf）\r\n","Gets an auth token of the specified type for a particular account,\n            prompting the user for credentials if necessary.":"获取特定帐户指定类型的验证令牌，\r\n            如有必要，提示用户获取凭据。\r\n"," describing this\n            ":" 描述这个\r\n            \r\n","seconds:milliseconds::nanoseconds":"秒：毫秒:: Nanseconds\r\n","Set the title using the given resource id.":"使用给定资源ID设置标题。\r\n"," from the fragment's\n            containing Activity.":" 从碎片的\r\n            包含活动。\r\n","#addToBackStack(String)":"#addtobackstack（String）\r\n","android.accounts.AccountManager.getAccountsByTypeAndFeatures(java.lang.String, java.lang.String[], android.accounts.AccountManagerCallback, android.os.Handler)":"android.accounts.accountmanager.getaccountsbytypeandfeatures（java.lang.string，java.lang.string []，android.accounts.accountmanagercallback，android.os.handler）\r\n"," corresponding to the delegation scopes given to an app in the\n            ":" 对应于给出的委托范围\r\n            \r\n","android.view.Window#getCurrentFocus":"android.view.window＃getCurrentFocus\r\n","Disable iris authentication on keyguard secure screens (e.":"禁用键盘安全屏幕上的虹膜身份验证（e。\r\n","android.app.Instrumentation.getContext()":"android.app.instrumentation.getContext（）\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_ADMIN_EXTRAS_BUNDLE":"android.app.admin.devicepolicymanager.extra_provisioning_admin_extras_bundle\r\n","Start the bonding (pairing) process with the remote device.":"与远程设备启动粘结（配对）过程。\r\n","Extra used by ":"额外使用\r\n","android.app.job.JobParameters.STOP_REASON_BACKGROUND_RESTRICTION":"android.app.job.jobparameters.stop_reason_background_rcterniction\r\n","android.app.admin.DevicePolicyManager.clearUserRestriction(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.clearuserrterction（android.content.componentname，java.lang.string）\r\n","Returns the motion events that lead to this gesture.":"返回导致这种手势的运动事件。\r\n","android.app.admin.DeviceAdminReceiver.onBugreportShared(android.content.Context, android.content.Intent, java.lang.String)":"android.app.admin.deviceadminreceiver.onbugreportshared（android.content.context，android.content.intent，java.lang.string）\r\n","android.bluetooth.BluetoothGatt.close()":"android.bluetooth.bluetoothgatt.close（）\r\n","android.app.AppOpsManager.unsafeCheckOpRawNoThrow(java.lang.String, int, java.lang.String)":"android.app.appopsmanager.unsafecheckoprawnrow（java.lang.string，int，java.lang.string）\r\n","#FORMAT_SLICE":"#format_slice\r\n","Class name of the exception that caused the crash.":"导致崩溃的异常的类名称。\r\n","Called when you are no longer visible to the user.":"当您不再可见的用户时，请致电。\r\n","android.app.Notification.getLargeIcon()":"android.app.notification.getLargeicon（）\r\n","A light Holo shade of red \n":"红色的浅色阴影\r\n\r\n","Called when a tab enters the selected state.":"当标签进入选定状态时调用。\r\n","android.accessibilityservice.AccessibilityGestureEvent.CREATOR":"Android.AccosconibilityService.Accessibility gestureevent.creator\r\n"," key: this is a content description of the big picture supplied from\n            ":" 钥匙：这是对所提供的全局的内容描述\r\n            \r\n","Intent action broadcasted to inform that the search settings have changed in some way.":"播放的意图动作是为了告知搜索设置以某种方式发生了变化。\r\n","android.bluetooth.BluetoothAdapter.getLeMaximumAdvertisingDataLength()":"android.bluetooth.bluetoothadapter.getlemaximumAdvertisingDatalength（）\r\n","#onGesture(AccessibilityGestureEvent)":"#ongesture（AccessizationEmentureEvent）\r\n","android.app.admin.DevicePolicyManager.EXTRA_DEVICE_ADMIN":"android.app.admin.devicepolicymanager.extra_device_admin\r\n","Called when a Fragment is being attached to this activity, immediately\n            after the call to its ":"当片段附着在此活动上时称为\r\n            打电话给它\r\n","This flag requests that when when ":"此标志要求什么时候\r\n","Called by a profile owner of a managed profile to determine whether or not Bluetooth devices\n            cannot access enterprise contacts.":"由托管配置文件的个人资料所有者调用以确定是否蓝牙设备\r\n            无法访问企业联系人。\r\n"," is about to be shown.":" 即将显示。\r\n","#navigateUpTo":"#navateupto\r\n","android.app.Fragment.setReenterTransition(android.transition.Transition)":"Android.App.Fragment.SetReentertransition（Android.transition.transition）\r\n","android.app.admin.DevicePolicyManager.DELEGATION_ENABLE_SYSTEM_APP":"android.app.admin.devicepolicymanager.delegation_enable_system_app\r\n","android.app.SearchableInfo.getHintId()":"android.app.searchableInfo.gethintid（）\r\n","AccountManager#KEY_ACCOUNT_STATUS_TOKEN":"AccountManager＃key_account_status_token\r\n"," of the condition provider service that owns this rule.":" 拥有此规则的条件提供商服务。\r\n","android.app.appsearch.AppSearchBatchResult.getAll()":"android.app.appsearch.appsearchbatchresult.getall（）\r\n","Default text typeface style.":"默认文本字体样式。\r\n","Called when the fragment's activity has been created and this\n            fragment's view hierarchy instantiated.":"何时创建了片段的活动，\r\n            Fragment的观点层次结构实例化。\r\n","\n          Whether or not users\n          are given the option to remove user ata.\n        ":"\r\n          用户是否\r\n          给出删除用户ATA的选项。\r\n        \r\n","Default implementation of ":"默认实现\r\n","android.app.Fragment.isAdded()":"android.app.fragment.isadded（）\r\n","android.app.Notification.EXTRA_ANSWER_COLOR":"android.app.notification.extra_answer_color\r\n","\n            settings.":"\r\n            设置。\r\n","android.app.Activity.onTouchEvent(android.view.MotionEvent)":"android.app.activity.ontouchevent（android.view.motionevent）\r\n","\n          The orientation of the activity's display on the device.\n        ":"\r\n          活动在设备上显示的方向。\r\n        \r\n","android.app.Activity#onProvideAssistContent Activity.onProvideAssistContent":"android.app.Activity＃onprovideassistContent活动。\r\n","Called when the Fragment is no longer started.":"片段不再启动时称呼。\r\n",": the process has gone on to the\n            LRU list.":"：该过程已经继续\r\n            LRU列表。\r\n","android.app.Notification.EXTRA_PROGRESS_INDETERMINATE":"android.app.notification.extra_progress_indeterminate\r\n","android.app.UiAutomation.performGlobalAction(int)":"android.app.uiautomation.performglobalaction（int）\r\n","Integration points with the Fragment host.":"与片段主机集成点。\r\n","Amount of pixels by which the drop down should be offset vertically.":"下拉列表应垂直抵消的像素量。\r\n","android.app.usage.StorageStats.getExternalCacheBytes()":"android.app.usage.storagestats.getExternalCachebytes（）\r\n","The user stopped the job.":"用户停止了工作。\r\n","#onUserLeaveHint()":"#onuserleavehint（）\r\n","android.app.Activity.startNextMatchingActivity(android.content.Intent)":"android.app.Activity.startNextMatchingActivity（android.content.intent）\r\n","Adopt the permission identity of the shell UID for all permissions.":"为所有权限，采用壳牌UID的权限身份。\r\n","android.app.UiAutomation.executeAndWaitForEvent(java.lang.Runnable, android.app.AccessibilityEventFilter, long)":"android.app.uiautomation.executeandwaitforevent（java.lang.runnable，android.app.App.actibilityEventFilter，long）\r\n","\n            methods.\n        ":"\r\n            方法。\r\n        \r\n","Creates a group container for ":"创建一个组容器\r\n","Denotes generic feedback.":"表示通用反馈。\r\n","Lower ":"降低\r\n","Forces immediate creation of the dialog.":"迫使立即创建对话框。\r\n","State for ":"状态\r\n","\n            Disposal and finalization callbacks through the\n            ":"\r\n            通过\r\n            \r\n","android.app.slice.SliceItem.FORMAT_BUNDLE":"android.app.slice.sliceitem.format_bundle\r\n","A Fragment is a piece of an application's user interface or behavior\n that can be placed in an ":"片段是应用程序的用户界面或行为的一部分\r\n 可以放在\r\n","android.app.admin.DevicePolicyManager.setUsbDataSignalingEnabled(boolean)":"android.app.admin.devicepolicymanager.setusbdatasignalingenabled（boolean）\r\n","android.app.appsearch.GetSchemaResponse":"android.app.appsearch.getschemaresponse\r\n","android.accessibilityservice.AccessibilityService.GESTURE_SWIPE_LEFT":"Android.AccessibilityService.Accessibilityservice.gesture_swipe_left\r\n","Get the beginning of the time range this ":"获得时间范围的开始\r\n","android.accounts.AccountManager.LOGIN_ACCOUNTS_CHANGED_ACTION":"android.accounts.accountmanager.login_accounts_changed_action\r\n","android.app.backup.FileBackupHelperBase":"android.app.backup.filebackuphelperbase\r\n","F:Android.App.Notification+WearableExtender.SetCustomSizePreset":"f：android.app.notification+duarableExtender.setCustomsizepreset\r\n","android.app.backup.FileBackupHelper.performBackup(android.os.ParcelFileDescriptor, android.app.backup.BackupDataOutput, android.os.ParcelFileDescriptor)":"android.app.backup.filebackuphelper.performbackup（android.os.parcelfiledScriptor，android.app.backup.backup.backup.backup.updataoutput，android.os.parcelfiledescriptor）\r\n","android.app.AsyncNotedAppOp":"Android.App.AsyncnotedAppop\r\n","android.accessibilityservice.AccessibilityService.setAccessibilityFocusAppearance(int, int)":"Android.Accesseribilityservice.Accesseribilityservice.setaccosconibilityfocusappearance（int，int）\r\n","#onRetainNonConfigurationInstance()":"#onretainnonconfigurationInstance（）\r\n","Amount of bottom padding inside the gradient shape.":"梯度形状内部的底部填充量。\r\n","If set, specifies that this TextView has an input method.":"如果设置，则指定此文本视图具有输入方法。\r\n","Specify extra padding that the wallpaper should have outside of the display.":"指定墙纸应在显示屏外面具有的额外填充。\r\n","Inflate and return a view that represents an error state.":"充气并返回表示错误状态的视图。\r\n","Return a localized string from the application's package's\n            default string table.":"从应用程序软件包中返回本地化字符串\r\n            默认字符串表。\r\n"," extra specifying the allowed provisioning modes.":" 额外指定允许的配置模式。\r\n","Allows an application to broadcast a notification that an application\n         package has been removed.":"允许应用程序广播通知\r\n         软件包已被删除。\r\n"," for launching the task constructed by this builder so far.":" 到目前为止，该建造者构建的任务启动。\r\n","android.app.Notification.CATEGORY_TRANSPORT":"android.app.notification.category_transport\r\n","android.app.Activity.onPostCreate(android.os.Bundle)":"android.app.activity.onpostcreate（android.os.bundle）\r\n","#evaluate(float, android.graphics.Rect, android.graphics.Rect)":"#evaluate（float，android.graphics.Rect，android.graphics.Rect）\r\n","Get the preferred density of icons for the launcher.":"获取发射器的首选图标密度。\r\n","Helper class for generating large-format notifications that include a large image attachment.":"用于生成大幅面通知的助手类，包括大图像附件。\r\n","android.app.blob.BlobStoreManager.getRemainingLeaseQuotaBytes()":"android.app.blob.blobstoremanager.getRemainingLeaseLeaseQuotabytes（）\r\n","Priority of the rows and columns.":"行和列的优先级。\r\n","android.app.admin.SystemUpdateInfo.getSecurityPatchState()":"android.app.admin.SystemupDateInfo.getSecurityPatchState（）\r\n","android.app.Instrumentation.newApplication(java.lang.ClassLoader, java.lang.String, android.content.Context)":"android.app.instrumentation.newapplication（java.lang.classloader，java.lang.string，android.content.context）\r\n","Default appearance of menu item text.":"菜单项文本的默认外观。\r\n","Interface to intercept clicks on the bread crumbs.":"接口截取面包屑的点击。\r\n","android.app.admin.DeviceAdminInfo.usesPolicy(int)":"android.app.admin.deviceadmininfo.usespolicy（int）\r\n","Allows an application to read SMS messages.":"允许应用程序读取SMS消息。\r\n","BackupDataInput":"备份\r\n","Used for permissions that allow requesting certain accessibility features.":"用于允许要求某些可访问性功能的权限。\r\n","Action sent to a device administrator to notify that the device is exiting\n            lock task mode.":"发送给设备管理员的操作通知设备正在退出\r\n            锁任务模式。\r\n","Builder#setUsesChronometer(boolean)":"构建器＃setuseschronometer（布尔值）\r\n","The preferred padding along the right edge of list items.":"沿列表项目右边缘的首选填充。\r\n","Called when a key shortcut event is not handled by any of the views in the Dialog.":"对话框中的任何视图都不会处理关键快捷事件时调用。\r\n","Returns true if the input only accepts data, meaning ":"如果输入仅接受数据，则返回true\r\n","#getActivity":"#getactivity\r\n","Connect back to remote device.":"连接回远程设备。\r\n","The name of the process that this object is associated with\n":"该对象与之关联的过程的名称\r\n\r\n","Create an instance of BatteryInfo initialized from a Parcel.":"创建一个从包裹初始化的电池实例。\r\n","Activity#onUserLeaveHint":"活动＃Onuserleavehint\r\n","Move the task containing this activity to the back of the activity\n            stack.":"将包含此活动的任务移至活动的背面\r\n            堆。\r\n","\n          While the value can change, the ":"\r\n          虽然价值可以改变，但\r\n","Called by the system to notify a Service that it is no longer used and is being removed.":"系统呼吁通知服务不再使用并正在删除服务。\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_SECURITY_TYPE":"android.app.admin.devicepolicymanager.extra_provisioning_wifi_security_type\r\n"," ready to start a secure\n            outgoing connection to this remote device using SDP lookup of uuid.":" 准备开始安全\r\n            使用UUID的SDP查找到该远程设备的传出连接。\r\n","#KEY_LAST_AUTHENTICATED_TIME":"#KEY_LAST_AUTHENTICATICED_TIME\r\n","Return storage statistics for a specific UID on the requested storage\n            volume.":"在请求的存储中返回特定UID的存储统计信息\r\n            体积。\r\n","android.app.FragmentTransaction.replace(int, android.app.Fragment, java.lang.String)":"android.app.FragmentTransaction.Replace（int，android.app.fragment，java.lang.string）\r\n","An optional layout to be used as an action view.":"可选的布局，可用作操作视图。\r\n","android.bluetooth.BluetoothAdapter.isMultipleAdvertisementSupported()":"android.bluetooth.bluetoothadapter.ismultipleadvertisementsupported（）\r\n","android.app.usage.StorageStatsManager.getTotalBytes(java.util.UUID)":"android.app.usage.storagestatsmanager.gettotalbytes（java.util.uuid）\r\n","A type of policy that this device admin can use: able to force the device\n            to lock via":"该设备管理员可以使用的一种策略：能够强制设备\r\n            锁定通过\r\n","android.app.admin.DevicePolicyManager.WIPE_RESET_PROTECTION_DATA":"android.app.admin.devicepolicymanager.wipe_reset_protection_data\r\n","The reason code of the process's death.":"该过程死亡的原因。\r\n","android.app.admin.DevicePolicyManager.WIPE_SILENTLY":"android.app.admin.devicepolicymanager.wipe_silental\r\n","Checks whether the user has approved a given\n            ":"检查用户是否已批准给定\r\n            \r\n","Gets the reasons the operation is unsafe.":"获取操作不安全的原因。\r\n","android.app.admin.DevicePolicyManager.getPasswordHistoryLength(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getpasswordhistorylength（android.content.componentname）\r\n","android.app.FragmentController.dispatchDestroy()":"Android.App.FragmentController.disPatchDestroy（）\r\n","android.app.NotificationManager.ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED":"android.app.notificationmanager.action_notification_channel_block_state_changed\r\n","Called when ":"何时呼唤\r\n","android.app.ActivityOptions#makeSceneTransitionAnimation(Activity,\n            android.util.Pair[])":"android.app.ActivityOptions＃makeCenetransitionAnimation（活动，\r\n            android.util.pair []）\r\n","android.app.SearchManager.getSearchablesInGlobalSearch()":"android.app.searchmanager.getSearchablesinglobalsearch（）\r\n","WPA":"WPA\r\n","An error report about an application crash.":"有关应用程序崩溃的错误报告。\r\n","Sets the strokeWidth and color of the accessibility focus rectangle.":"设置可访问性焦点矩形的折痕和颜色。\r\n","The user has performed a swipe down and up gesture on the touch screen.":"用户在触摸屏上进行了滑动和向上的手势。\r\n","android.app.UiAutomation.injectInputEvent(android.view.InputEvent, boolean)":"android.app.uiautomation.IndignInputeVent（android.view.inputevent，boolean）\r\n","Provides results for AppSearch batch operations which encompass multiple documents.":"为包含多个文档的AppSearch Batch操作提供了结果。\r\n","android.app.admin.SecurityLog":"Android.App.Admin.SecurityLog\r\n","#onRestoreInstanceState(Bundle)":"#onrestoreinstancestate（捆绑包）\r\n","android.app.backup.BackupAgent.FLAG_DEVICE_TO_DEVICE_TRANSFER":"android.app.backup.backupent.flag_device_to_device_transfer\r\n","#detach(Fragment)":"#detach（片段）\r\n","android.bluetooth.BluetoothDevice.EXTRA_DEVICE":"android.bluetooth.bluetoothdevice.extra_device\r\n","Whether to allow the application to participate in the backup\n         and restore infrastructure.":"是否允许应用程序参与备份\r\n         并恢复基础架构。\r\n","Plays the AnimatorSet in reverse.":"反向播放Animatorset。\r\n","android.app.SearchManager.SUGGEST_COLUMN_INTENT_DATA_ID":"android.app.searchmanager.suggest_column_intent_data_id\r\n","android.app.Fragment.startActivityForResult(android.content.Intent, int)":"android.app.fragment.startactivityForresult（android.content.intent，int）\r\n","#isKeyguardLocked()":"#iskeyguardlocked（）\r\n","Callable by device owner or profile owner of an organization-owned device, to set a\n            factory reset protection (FRP) policy.":"设备所有者或组织拥有设备的配置文件所有者可调用，以设置\r\n            工厂重置保护（FRP）政策。\r\n","Bluetooth device type, Classic - BR/EDR devices":"蓝牙设备类型，经典 -  BR/EDR设备\r\n","Allows access to the vibrator \n":"允许访问振动器\r\n\r\n","#onActivityResult":"#ontactivityResult\r\n","Called by a profile owner of a managed profile to determine whether or not contacts search\n            has been disabled.":"由托管个人资料的个人资料所有者调用以确定联系人是否联系\r\n            已被禁用。\r\n","Return the estimated size of download traffic that will be performed by\n            this job, in bytes.":"返回将执行的下载流量的估计大小\r\n            这项工作，字节。\r\n","android.app.NotificationChannel.enableLights(boolean)":"Android.App.NotificationChannel.Enablights（布尔值）\r\n","android.app.Dialog.onBackPressed()":"android.app.dialog.onbackpresse（）\r\n","Return the content's web URI as per ":"根据内容返回内容的网络URI\r\n","The user has performed a swipe left gesture on the touch screen.":"用户在触摸屏上执行了滑动左手势。\r\n","#LEAVE_ALL_SYSTEM_APPS_ENABLED":"#leave_all_system_apps_enabled\r\n","android.app.AlarmManager.setExact(int, long, android.app.PendingIntent)":"android.app.alarmmanager.setexact（int，long，android.app.pendendIntent）\r\n","android.app.appsearch.SetSchemaRequest.isForceOverride()":"android.app.appsearch.setschemarequest.isforceoverride（）\r\n","android.app.UiAutomation.getWindowsOnAllDisplays()":"android.app.uiautomation.getWindowsonAllDisplays（）\r\n","android.annotation.TargetApi":"android.annotation.targetapi\r\n","[TODO: @inheritDoc]":"[todo：@inheritdoc]\r\n","If provided, this specifies the language model that should be used by the\n             voice recognition system.":"如果提供，这指定了应由\r\n             语音识别系统。\r\n","android.app.admin.DevicePolicyManager.resetPassword(java.lang.String, int)":"android.app.admin.devicepolicymanager.ResetPassword（java.lang.string，int）\r\n","android.app.Dialog.onMenuItemSelected(int, android.view.MenuItem)":"android.app.dialog.onmenuitemselectect（int，android.view.menuitem）\r\n","BigPictureStyle#bigPicture(Icon)":"bigpicturestyle＃bigpicture（图标）\r\n","android.accounts.AbstractAccountAuthenticator.hasFeatures(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String[])":"android.accounts.abstractaccountauthenticator.hasfeatures（android.accounts.accountauthenticatorestorsponse，android.accounts.accounts.accounts.accounts.accounts.account，java.lang.string []）\r\n","android.app.TaskStackBuilder.addParentStack(android.app.Activity)":"android.app.taskstackbuilder.addparentstack（android.app.Activity）\r\n","The widget provides a default configuration.":"小部件提供默认配置。\r\n","#ACTION_REQUEST_DISCOVERABLE":"#action_request_discoverable\r\n","Load the user-displayed icon for this wallpaper.":"为此墙纸加载用户播放的图标。\r\n","android.appwidget.AppWidgetProviderInfo.WIDGET_FEATURE_HIDE_FROM_PICKER":"android.appwidget.AppWidgetProviderInfo.widget_feature_hide_from_picker\r\n","Enables you to lock or unlock the keyguard.":"使您能够锁定或解锁钥匙守卫。\r\n","DevicePolicyManager#FLAG_PARENT_CAN_ACCESS_MANAGED":"DevicePolicyManager＃flag_parent_can_access_managed\r\n","android.app.blob.BlobHandle.getSha256Digest()":"android.app.blob.blobhandle.getSha256Digest（）\r\n","Broadcast intent action sent by the download manager when a download completes.":"下载管理器完成下载经理发送的广播意愿操作。\r\n","Called when the activity has detected the user's press of the back key.":"当活动检测到后键的用户按下时调用。\r\n","#stopSelfResult(int)":"#StopSelf Result（int）\r\n","android.app.assist.AssistStructure.getActivityComponent()":"android.app.assist.AssistStructure.getActivityComponent（）\r\n","android.animation.Keyframe.ofFloat(float)":"android.animation.keyframe.offloat（float）\r\n","Find the view that has the specified focus type.":"找到具有指定焦点类型的视图。\r\n","Get the source of the RemoteInput results.":"获取远程点击结果的来源。\r\n","Opens an existing blob for reading from the blob store managed by the system.":"打开现有的斑点，用于从系统管理的Blob商店中阅读。\r\n","Constructs and returns a ValueAnimator that animates between int values.":"构建并返回一个在int值之间进行动画的估值。\r\n","android.app.Service":"Android.App.Service\r\n","Write a chunk of data under the current entity to the backup transport.":"在当前实体下写一大笔数据，以备备份传输。\r\n","android.app.AuthenticationRequiredException":"android.app.authenticationRequiredException\r\n","android.app.appsearch.SearchSpec.PROJECTION_SCHEMA_TYPE_WILDCARD":"android.app.AppSearch.SearchSpec.provention_schema_type_wildcard\r\n","Size of text.":"文字的大小。\r\n","android.app.WallpaperManager.clearWallpaperOffsets(android.os.IBinder)":"android.app.wallpapermanager.clearwallpapersoffsets（android.os.ibinder）\r\n","\n             indicating that the Drawable is in a view that is capable of accepting a drop of\n             the content currently being manipulated in a drag-and-drop operation.":"\r\n             表明可绘制的视图能够接受一滴\r\n             目前在拖放操作中操纵的内容。\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_ACCOUNT_TO_MIGRATE":"android.app.admin.devicepolicymanager.extra_provisioning_account_to_migrate\r\n","Default ListPopupWindow style.":"默认ListPopupupwindow样式。\r\n"," members and taken as a parameter of several methods of ":" 成员并将其作为几种方法的参数\r\n","#setBreadCrumbTitle(int)":"#setbreadcrumbtitle（int）\r\n","Constructs a Notification object with the information needed to\n have a status bar icon without the standard expanded view.":"构建一个通知对象，并具有所需的信息\r\n 拥有一个状态栏图标，没有标准扩展的视图。\r\n","android.appwidget.AppWidgetManager.ACTION_APPWIDGET_BIND":"android.appwidget.appwidgetManager.action_appwidget_bind\r\n","A flag indicating the animation that runs on those items that are changing\n            due to a new item appearing in the container.":"指示动画在那些正在更改的项目上运行的旗帜\r\n            由于新项目出现在容器中。\r\n",", providing the arguments it supplied and a \n            unique integer token representing the start request.":"，提供所提供的论点，\r\n            唯一代表开始请求的唯一整数令牌。\r\n","Allows an application to take screen shots and more generally\n         get access to the frame buffer data \n":"允许应用程序拍摄屏幕截图，更普遍地\r\n         访问框架缓冲区数据\r\n\r\n","android.app.blob.BlobStoreManager.openBlob(android.app.blob.BlobHandle)":"android.app.blob.blobstoremanager.openblob（android.app.blob.blobhandle）\r\n"," that can post notifications on\n            your behalf, if there currently is one. -or- Allows a package to post notifications on your behalf using\n            ":" 可以发布通知\r\n            您代表您，如果当前有一个。 - 或 - 允许包装代表您使用\r\n            \r\n","android.app.admin.DevicePolicyManager.getRequiredStrongAuthTimeout(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getRequiredstrongauthtimeout（android.content.componentname）\r\n","android.app.admin.DevicePolicyManager.removeCrossProfileWidgetProvider(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.removecrossprofilewidgetProvider（android.content.componentname，java.lang.string）\r\n","Specifies extra space on the top side of this view.":"指定此视图顶部的额外空间。\r\n","The recent activity values for the highest activity in the stack to have set the values.":"堆栈中最高活动的最新活动值已设置值。\r\n"," with\n             ":" 和\r\n             \r\n","android.accessibilityservice.AccessibilityServiceInfo.flags":"Android.AccessibilityService.Accessibilityserviceinfo.flags\r\n",", for more important notifications or alerts.":"，有关更重要的通知或警报。\r\n","android.app.admin.DeviceAdminReceiver.onNetworkLogsAvailable(android.content.Context, android.content.Intent, long, int)":"android.app.admin.deviceadminreceiver.onnetworklogsavailable（android.content.context，android.content.intent.intent，long，int）\r\n","MediaRouteButton media route button":"Mediaroutebutton媒体路线按钮\r\n","A resource id of a static drawable.":"静态绘制的资源ID。\r\n","Create an RFCOMM ":"创建一个RFCOMM\r\n"," with an appropriate theme for creating views that\n            will appear in the action bar.":" 具有适当的主题来创建视图\r\n            将出现在动作栏中。\r\n","android.app.appsearch.GlobalSearchSession.close()":"android.app.appsearch.globalsearchsession.close（）\r\n","android.app.admin.DevicePolicyManager.getPermittedInputMethods(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getpermittedinputmethods（android.content.componentname）\r\n","Build":"建造\r\n"," records containing the reasons for the most\n            recent app deaths.":" 包含最大原因的记录\r\n            最近的应用死亡。\r\n","android.app.admin.DeviceAdminReceiver.EXTRA_LOCK_TASK_PACKAGE":"android.app.admin.deviceadminreceiver.extra_lock_task_package\r\n","F:Android.App.Admin.DevicePolicyManager.ResetPassword":"F：android.app.admin.devicepolicymanager.ResetPassword\r\n","\n          Whether or not the Android system can instantiate components of the\n          application.\n        ":"\r\n          Android系统是否可以实例化组件\r\n          应用。\r\n        \r\n","Gets the type of keyframe.":"获取钥匙帧的类型。\r\n","Allows low-level access to power management \n":"允许低水平访问电源管理\r\n\r\n","android.animation.ValueAnimator.ValueAnimator()":"android.animation.ValueAnimator.ValueAnimator（）\r\n","android.accessibilityservice.AccessibilityService.GESTURE_3_FINGER_SWIPE_DOWN":"Android.AccessibilityService.Accessibilityservice.gesture_3_finger_swipe_down\r\n","ActionBar#newTab() ActionBar.newTab()":"ActionBar＃NewTab（）ActionBar.newtab（）\r\n","Broadcast Action: Remote device discovered.":"广播动作：发现远程设备。\r\n","\n          Whether or not hardware-accelerated rendering should be enabled for\n          all Activities and Views within this application.\n        ":"\r\n          是否应启用硬件加速渲染\r\n          本应用程序中的所有活动和视图。\r\n        \r\n","android.appwidget.AppWidgetProvider":"android.appwidget.appwidgetProvider\r\n","android.app.Activity.setProgressBarIndeterminateVisibility(boolean)":"android.app.activity.setprogressbarinderterminationsvisibility（布尔值）\r\n","android.animation.AnimatorListenerAdapter":"android.animation.animatorListenerAdapter\r\n","android.app.WallpaperManager.sendWallpaperCommand(android.os.IBinder, java.lang.String, int, int, int, android.os.Bundle)":"android.app.wallpapermanager.sendwallpapercommand（android.os.ibinder，java.lang.string，int，int，int，int，int，android.os.bundle）\r\n","Specifies extra space on the end side of this view.":"在此视图的端端指定额外的空间。\r\n","AKA_PRIME":"aka_prime\r\n","Create an ActivityOptions specifying an animation where a thumbnail\n            is scaled from a given position to the new activity window that is\n            being started.":"创建一个activityOptions，指定动画的缩略图\r\n            从给定的位置缩放到新的活动窗口\r\n            开始。\r\n","Gets a set of package names that are allowed to access cross-profile calendar APIs.":"获取一组允许访问跨profile日历API的软件包名称。\r\n",", there are two ways to handle this.":"，有两种处理方法。\r\n","Called when the hidden state (as returned by ":"当隐藏状态时称为\r\n","Activity#onPrepareOptionsMenu(Menu)":"活动＃onprepareoptionsmenu（菜单）\r\n","Context menu ID for the \"Paste\" menu item to copy the current contents\n       of the clipboard into the text view.":"“粘贴”菜单项的上下文菜单ID复制当前内容\r\n       剪贴板进入文本视图。\r\n","Flag for ":"标志\r\n","#showDialog(int)":"#showdialog（int）\r\n","android.app.Activity.reportFullyDrawn()":"android.app.Activity.Reportlulawn（）\r\n","P:Android.App.ActivityManager+RunningAppProcessInfo.Importance":"P：Android.App.ActivityManager+RunnappProcessInfo.mistance\r\n","android.app.job.JobServiceEngine.jobFinished(android.app.job.JobParameters, boolean)":"android.app.job.jobserviceengine.jobfined（android.app.job.job.jobparameters，boolean）\r\n","Returns the user visible name of this group.":"返回此组的用户可见名称。\r\n","android.app.Activity.isLocalVoiceInteractionSupported()":"android.app.Activity.islocalVoiceInteractionsupported（）\r\n","#startActivityForResult(Intent, int)":"#startactivityForresult（Intent，int）\r\n","android.app.ExpandableListActivity.getSelectedPosition()":"android.app.expandableListactivity.getSelectedPosition（）\r\n","Sets the set of admin-allowlisted package names that are allowed to request user consent for\n            cross-profile communication.":"设置一组允许申请用户同意的管理员包装名称\r\n            交叉沟通。\r\n","Layout resource for key press feedback.":"钥匙按反馈的布局资源。\r\n","android.app.Notification.FOREGROUND_SERVICE_IMMEDIATE":"android.app.notification.foreground_service_immediate\r\n"," key: this is an ":" 关键：这是一个\r\n","android.app.LocalActivityManager.getCurrentId()":"android.app.localactivitymanager.getCurrentid（）\r\n","Time, in milliseconds, to wait before the gesture fades out after the user\n             is done drawing it.":"时间，以毫秒为单位，等待手势在用户之后逐渐消失\r\n             完成了。\r\n","android.app.NotificationChannel.EDIT_LOCKED_DEVICE":"Android.App.NotificationChannel.edit_locked_device\r\n","Returns whether the device is secured with a PIN, pattern or\n            password.":"返回设备是用销钉，图案还是\r\n            密码。\r\n","#shouldHideSilentStatusBarIcons()":"#shouldhidesilentstatusbaricons（）\r\n","Return the raw information about the Service implementing this\n            wallpaper.":"返回有关实施服务的原始信息\r\n            墙纸。\r\n","Intent that is broadcast when the state of ":"当状态的目的\r\n","monodroid-timing":"单迪亚特定时\r\n","). The former method should be sufficient\n             for most use cases, the latter allows the application to provide fully customized key store, trust manager and key manager, if needed. Note that the instance of\n             AndroidClientHandler configured to accept an \"invalid\" certificate from the particular server will most likely fail to validate certificates from other servers (even\n             if they use a certificate with a fully validated trust chain) unless you store the CA certificates from your Android system in ":"）。前一种方法应该足够\r\n             在大多数用例中，后者允许应用程序如果需要，该应用程序可以提供完全自定义的密钥商店，信任管理器和密钥管理器。请注意，实例\r\n             AndroidClientHandler配置为接受特定服务器的“无效”证书很可能无法从其他服务器验证证书（甚至\r\n             如果他们使用具有完全验证的信任链的证书），除非您将Android系统中的CA证书存储在\r\n","\n             indicating that a drag operation (for which the Drawable's view is a valid recipient)\n             is currently positioned over the Drawable.":"\r\n             指示拖动操作（对此绘制的视图是有效的收件人）\r\n             目前位于可绘制的位置。\r\n","android.app.slice.SliceItem.FORMAT_ACTION":"android.app.slice.sliceitem.format_action\r\n","android.app.Fragment.getArguments()":"android.app.fragment.getArguments（）\r\n","android.app.SearchManager":"Android.App.SearchManager\r\n","Whether this rating bar is an indicator (and non-changeable by the user).":"该评级条是否是指示器（用户不可变化）。\r\n","android.app.WallpaperInfo.writeToParcel(android.os.Parcel, int)":"android.app.wallpaperinfo.writetoparcel（android.os.os.parcel，int）\r\n","android.app.Activity.setProgressBarVisibility(boolean)":"android.app.activity.setprogressbarvisibility（布尔值）\r\n","android.app.Activity.onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenuInfo)":"android.app.activity.oncreatecontextmenu（android.view.contextmenu，android.view.view，android.view.contextmenuinfo）\r\n","android.widget.ListView":"android.widget.listview\r\n","android.app.AppOpsManager.OPSTR_WRITE_CALL_LOG":"android.app.appopsmanager.opptr_write_call_log\r\n","ListView with white background.":"ListView带有白色背景。\r\n","Handle the data delivered via the given file descriptor during a full restore\n operation.":"处理完整还原期间通过给定文件描述传递的数据\r\n 手术。\r\n","android.app.appsearch.ReportSystemUsageRequest":"Android.App.AppSearch.Reportsystemusagerequest\r\n","Returns the list of permitted input methods set by this device or profile owner.":"返回该设备或配置文件所有者设置的允许输入方法的列表。\r\n","android.animation.LayoutTransition.setAnimator(int, android.animation.Animator)":"android.animation.layouttransition.setanimator（int，android.animation.animator）\r\n","android.os.Parcelable.CONTENTS_FILE_DESCRIPTOR":"android.os.os.parcelable.contents_file_descriptor\r\n","Text color, typeface, size, and style for \"small\" inverse text.":"文本颜色，字体，大小和样式，用于“小”逆文本。\r\n","Remove a tab from the action bar.":"从动作栏中卸下一个选项卡。\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_CHECKSUM":"android.app.admin.devicepolicymanager.extra_provisioning_device_admin_package_checksum\r\n","y location of the pivot point around which the view will rotate and scale.":"Y位置的位置将围绕该枢轴点旋转和缩放。\r\n","android.app.Fragment.Fragment()":"Android.App.Fragment.Fragment（）\r\n","This attribute is deprecated and will be ignored as of\n             API level 14 (":"此属性被弃用，并将被忽略\r\n             API级14（\r\n",". -or- Sets the Intent associated with the content, describing the current top-level context of\n            the activity.":"。 - 或设置与内容相关的意图，描述了当前的顶级上下文\r\n            活动。\r\n","android.app.WallpaperManager.isWallpaperSupported()":"android.app.wallpapermanager.iswallpapersupported（）\r\n","M:Android.Views.MotionEvent.Obtain(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)":"m：android.views.motionevent.obtain（system.int64，system.int64，system.int64，system.int64，system.int.int.int64，system.int64）\r\n","Vertical offset of the key press feedback from the key.":"钥匙按键反馈的垂直抵消。\r\n","Specifies a background drawable for a second stacked row of the action bar.":"指定可绘制的背景，适用于第二个堆叠行动栏的行。\r\n","TabHost":"TABHOST\r\n","Return the network that should be used to perform any network requests\n            for this job.":"返回应用于执行任何网络请求的网络\r\n            为此工作。\r\n","android.app.SharedElementCallback.onSharedElementEnd(java.util.List, java.util.List, java.util.List)":"android.app.sharedelementcallback.onsharedelementend（java.util.list，java.util.list，java.util.list）\r\n","Returns the type of activity represented by this status":"返回以此状态表示的活动类型\r\n","If true, the drawable's reported internal size will remain\n             constant as the state changes; the size is the maximum of all\n             of the states.":"如果是真的，则可绘制的报告的内部大小将保留\r\n             随着国家的变化而恒定；大小是所有的最大值\r\n             国家。\r\n","A2DP sink device is NOT streaming music. ":"A2DP接收器设备不是流音乐。\r\n","android.accessibilityservice.AccessibilityButtonController.registerAccessibilityButtonCallback(android.accessibilityservice.AccessibilityButtonCallback)":"Android.AccessibilityService.AccessibilitybuttonController.RegisterAccosconibalbackalback（android.accessibilityService.Accessibility buttoncallback）\r\n","Called by device owner or profile owner of an organization-owned managed profile to toggle\n            Common Criteria mode for the device.":"由设备所有者或组织拥有的托管配置文件的所有者调用以切换\r\n            设备的常见标准模式。\r\n","android.app.appsearch.AppSearchSession.getSchema(java.util.concurrent.Executor, java.util.function.Consumer)":"android.app.appsearch.appsearchsession.getschema（java.util.concurrent.executor，java.util.function.consumer）\r\n","Called when a touch screen event was not handled by any of the views\n            under it.":"当触摸屏事件未由任何视图处理时称为\r\n            在它下面。\r\n","Default style for EditTextPreference.":"EdittextPreference的默认样式。\r\n","android.app.FragmentController.dispatchCreate()":"android.app.FragmentController.disPatchCreate（）\r\n","Gets one of the buttons used in the dialog.":"获取对话框中使用的按钮之一。\r\n","#onTrimMemory(int)":"#ontrimmemory（int）\r\n","Contains the parameters used to configure/identify your job.":"包含用于配置/识别作业的参数。\r\n","JobInfo.Builder#setExtras(android.os.PersistableBundle).\n                This object serves to identify this specific running job instance when calling\n                {@link #jobFinished(JobParameters, boolean)":"JobInfo.builder＃setExtras（android.os.persistableBundle）。\r\n                该对象在调用时可以识别此特定的运行作业实例\r\n                {@link #jobfined（JobParameters，boolean）\r\n","Called when the application needs to redraw the content of its\n surface, after it is resized or for some other reason.":"何时该应用程序需要重新绘制其内容\r\n 表面，调整大小或出于某些其他原因。\r\n","android.app.admin.DevicePolicyManager.NEARBY_STREAMING_NOT_CONTROLLED_BY_POLICY":"android.app.admin.devicepolicymanager.nearby_streaming_not_controlled_by_policy\r\n","Set the value returned by ":"设置返回的值\r\n","android.app.admin.DevicePolicyManager.getGlobalPrivateDnsMode(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getglobalprivatednsmode（android.content.componentname）\r\n","#APPEARING":"＃报道\r\n","Constructs and returns an ObjectAnimator that animates between the sets of values specified\n            in <code>PropertyValueHolder</code> objects.":"构造并返回一个对objectanimator，该对象映射器在指定的值集之间进行动画\r\n            在<code>属性范围内</code>对象。\r\n","#getFastDrawable()":"#getFastDrawable（）\r\n","android.app.Notification.EXTRA_DECLINE_COLOR":"android.app.notification.extra_decline_color\r\n","#ACTION_CHANGE_LIVE_WALLPAPER":"#action_change_live_wallpaper\r\n"," which has a new blocked state.":" 具有新的阻塞状态。\r\n","AppWidgetHost":"appwidgethost\r\n"," instance that receives\n            lifecycle callbacks for only this Activity.":" 接收的实例\r\n            生命周期回调仅用于此活动。\r\n","Drawable used for the button graphic (e.g. checkbox, radio button, etc).":"可绘制用于按钮图形（例如，复选框，广播按钮等）。\r\n","#setAutomaticZenRuleState(String, Condition)":"#setautomaticzenrulestate（字符串，条件）\r\n","F:Android.App.Admin.DevicePolicyManager.WipeData":"F：android.app.admin.devicepolicymanager.wipedata\r\n","Disable the camera on secure keyguard screens (e.g. ":"禁用安全钥匙屏幕上的相机（例如\r\n","android.app.PendingIntent.isImmutable()":"android.app.pendingIntent.isimmutable（）\r\n","Called when the main window associated with the activity has been\n            attached to the window manager.":"当与活动相关联的主窗口是\r\n            连接到窗口管理器。\r\n","To be called whenever the user invokes a discrete action via a slice.":"每当用户通过切片调用离散操作时都会被调用。\r\n","adb pull":"ADB拉\r\n","Get possible input choices.":"获取可能的输入选择。\r\n","Specifies extra space on the right side of this view.":"指定此视图右侧的额外空间。\r\n","android.app.admin.DevicePolicyManager.setCameraDisabled(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setcameradisabled（android.content.componentname，boolean）\r\n","android.app.ListFragment":"android.app.listfragment\r\n","NotificationChannel channels":"通知通道\r\n","Large inverse ProgressBar style.":"大型逆进度栏样式。\r\n","android.app.UiAutomation.FLAG_DONT_USE_ACCESSIBILITY":"android.app.uiautomation.flag_dont_use_acccessibility\r\n","The timeout, in milliseconds, after the most recent event of a given type before an\n            ":"超时以毫秒为单位，在最近的给定类型的事件之前\r\n            \r\n","android.app.admin.DevicePolicyManager.ACTION_CHECK_POLICY_COMPLIANCE":"android.app.admin.devicepolicymanager.action_check_policy_comliance\r\n","Attribute whether the accessibility service wants to be able to retrieve the\n             active window content.":"属性访问性服务是否希望能够检索\r\n             活动窗口内容。\r\n","A class name in the AppWidget's package to be launched to configure.":"AppWidget的包中的类名称要启动以配置。\r\n","Helper class for generating large-format notifications that include a lot of text.":"用于生成包括大量文本的大型通知的助手类。\r\n","android.app.RemoteAction.isEnabled()":"android.app.remoteaction.isenabled（）\r\n"," results in an app being installed.":" 结果安装了一个应用程序。\r\n","F:Android.App.Job.JobInfo+Builder.SetBackoffCriteria":"f：android.app.job.jobinfo+Builder.setbackoffriteria\r\n","The restore operation has begun.":"还原操作已经开始。\r\n","android.app.ApplicationExitInfo.REASON_USER_REQUESTED":"android.app.applicationexitinfo.reason_user_requested\r\n","Constructs and returns a ValueAnimator that animates between color values.":"构造并返回一个在颜色值之间进行动画的估值。\r\n","Query network usage statistics details.":"查询网络使用统计信息详细信息。\r\n","android.app.BackgroundServiceStartNotAllowedException":"android.app.backgroundServicestArtNotlowerEdexception\r\n"," attribute, to a fullscreen opaque activity, or\n            convert it from opaque back to translucent.":" 属性，全屏不透明活动或\r\n            将其从不透明的回归转换为半透明。\r\n","android.app.job.JobInfo.NETWORK_BYTES_UNKNOWN":"android.app.job.jobinfo.network_bytes_unknown\r\n",": use\n            the holographic alert theme with a dark background.":"： 利用\r\n            具有黑暗背景的全息警报主题。\r\n","Support for parcelable and aidl operations.":"支持包裹和艾滋病操作。\r\n","Moves all Fragments managed by the controller's FragmentManager\n            into the destroy state.":"移动由控制器的FragmentManager管理的所有片段\r\n            进入摧毁状态。\r\n","Return true if the fragment has been explicitly detached from the UI.":"如果片段已明确从UI分离，则返回true。\r\n","android.app.usage.EventStats.getEventType()":"android.app.usage.eventstats.getEventType（）\r\n","Vertical offset of the shadow.":"阴影的垂直偏移。\r\n","android.animation.AnimatorSet.playTogether(java.util.Collection)":"android.animation.animatorset.playtogether（java.util.collection）\r\n","Base class for Dialogs.":"对话的基础类。\r\n","Allows an application to read the user's contacts data.":"允许应用程序读取用户的联系人数据。\r\n","android.app.Dialog.openOptionsMenu()":"android.app.dialog.openoptionsmenu（）\r\n","android.accessibilityservice.AccessibilityServiceInfo.flagToString(int)":"Android.AccessibilityService.Accessibilityserviceinfo.flagtostring（int）\r\n","Set a custom view to be used for this tab.":"设置用于此选项卡的自定义视图。\r\n"," that prompts the user to choose from a list of\n            accounts.":" 这提示用户从列表中选择\r\n            帐户。\r\n"," method, so it might be null if the application overrode the method and provided\n            no key store. It will not be ":" 方法，因此，如果应用程序覆盖了该方法并提供了，则可能是零的\r\n            没有钥匙店。它不会\r\n","The unique id for the subtype.":"亚型的唯一ID。\r\n","Use all default values (where applicable).":"使用所有默认值（如果适用）。\r\n","Indicates that this spec can be used to render the specified spec.":"指示此规范可用于渲染指定的规格。\r\n","Called by Device owner to disable user control over apps.":"设备所有者称呼用户对应用程序的控制。\r\n","android.app.job.JobWorkItem":"android.app.job.jobworkitem\r\n","android.app.SearchableInfo.getImeOptions()":"android.app.searchableInfo.getImeOptions（）\r\n","android.appwidget.AppWidgetProviderInfo.WIDGET_CATEGORY_HOME_SCREEN":"android.appwidget.AppWidgetProviderInfo.widget_category_home_screen\r\n","android.app.assist.AssistContent.setClipData(android.content.ClipData)":"android.app.assist.assistContent.setClipdata（android.content.clipdata）\r\n","android.app.UiAutomation.setOnAccessibilityEventListener(android.app.OnAccessibilityEventListener)":"android.app.uiautomation.setonAccessibilityEventListener（android.app.OnaccosconibilityEventListener）\r\n","s of the remote device which\n            is a parcelable version of ":"远程设备的s\r\n            是一个包裹的版本\r\n","Allows an application to access extra location provider commands \n":"允许应用程序访问额外的位置提供商命令\r\n\r\n","android.app.backup.BackupAgent.TYPE_DIRECTORY":"android.app.backup.backupent.type_directory\r\n","android.app.Notification.CATEGORY_NAVIGATION":"android.app.notification.category_navigation\r\n","A version of constructing a SliceProvider that allows autogranting slice permissions\n            to apps that hold specific platform permissions.":"构建sliceprovider的版本，该版本允许自动化切片权限\r\n            到持有特定平台权限的应用程序。\r\n","31":"31\r\n"," &mdash; or after ":" ＆mdash;或之后\r\n","Notification category: incoming call (voice or video) or similar synchronous communication request.":"通知类别：来电（语音或视频）或类似的同步通信请求。\r\n","android.app.Activity.startActivityIfNeeded(android.content.Intent, int)":"android.app.activity.startactivityifneed（android.content.intent，int）\r\n","Allows an application to control whether activities are immediately\n         finished when put in the background.":"允许应用程序控制活动是否立即\r\n         放在后台时完成。\r\n","#FLAG_ONE_SHOT":"#flag_one_shot\r\n","BackupAgent":"备用\r\n","A remote device connection is congested.":"远程设备连接被拥挤。\r\n","Prepare the synthetic task stack that will be generated during Up navigation\n            from a different task.":"准备将在导航期间生成的合成任务堆栈\r\n            来自其他任务。\r\n","Acquire a lease to the blob represented by ":"获得由代表的斑点的租约\r\n","Set or clear the callback that will be invoked whenever the search UI is dismissed.":"设置或清除搜索UI时将被调用的回调。\r\n"," is anything other than\n            ":" 除了\r\n            \r\n","Reset all wallpaper to the factory default.":"将所有墙纸重置为出厂默认值。\r\n","Make note of an application performing an operation and check if the application is allowed\n            to perform it.":"记下执行操作的应用程序，并检查是否允许该应用程序\r\n            执行它。\r\n","Called by the system when the service is first created.":"首先创建服务时由系统调用。\r\n","android.app.admin.SecurityLog.TAG_REMOTE_LOCK":"android.app.admin.securitylog.tag_remote_lock\r\n","When closing the last activity of a task, this is the animation that is\n              run on the activity of the next task (which is entering the screen).":"关闭任务的最后一个活动时，这是动画\r\n              运行下一个任务的活动（正在输入屏幕）。\r\n","android.app.Activity.getCurrentFocus()":"android.app.activity.getCurrentFocus（）\r\n","Variant of the holographic (light) theme with no action bar.":"无动作栏的全息图（光）主题的变体。\r\n","Menu ID to perform a \"add to dictionary\" operation.":"菜单ID执行“添加到字典”操作。\r\n","Determines the minimum type that getText() will return.":"确定GetText（）将返回的最小类型。\r\n","M:Android.App.Activity.StartActivityFromChild(Android.App.Activity,Android.Content.Intent,Android.Content.Intent,Android.Content.Intent)":"m：android.app.activity.startactivityfromchild（android.app.activity，android.content.intent，android.content.intent，android.content.intent）\r\n","android.app.Dialog.onSearchRequested(android.view.SearchEvent)":"android.app.dialog.OnsearchRequested（android.view.searchevent）\r\n",", or null if\n            there is none. -or- Set a web URI associated with the current data being shown to the user.":"，或null如果\r\n            空无一人。 - 或 - 设置与当前显示给用户显示的当前数据关联的Web URI。\r\n","Indicates that removable media has been mounted on the device.":"表示已在设备上安装了可移动介质。\r\n","android.app.SearchableInfo.getSettingsDescriptionId()":"android.app.searchableInfo.getSetTingsDescriptionId（）\r\n","Return whether the keyguard is secured by a PIN, pattern or password or a SIM card\n            is currently locked.":"返回密钥守卫是由PIN，模式还是密码或SIM卡固定\r\n            当前已锁定。\r\n","android.appwidget.AppWidgetProviderInfo.configure":"android.appwidget.appwidgetProviderInfo.configure\r\n","A description of an Intent and target action to perform with it.":"意图和目标行动的描述。\r\n","Starts the add account session to authenticate user to an account of the\n            specified accountType.":"启动添加帐户会话以将用户身份验证到\r\n            指定帐户类型。\r\n","Creates and returns a copy of this ":"创建并返回此副本\r\n","\n            property. AndroidClientHandler implementation simply returns the instance passed in the ":"\r\n            财产。 AndroidClientHandler实现只需返回传递的实例\r\n"," or limit the\n            maximum lock timeout for the device via\n            ":" 或限制\r\n            通过设备的最大锁定超时\r\n            \r\n","android.app.UiAutomation.getWindowContentFrameStats(int)":"android.app.uiautomation.getWindowContentFramestats（int）\r\n","Allows an application to delete packages.":"允许应用程序删除软件包。\r\n","android.appwidget.AppWidgetManager.ACTION_APPWIDGET_HOST_RESTORED":"android.appwidget.appwidgetManager.action_appwidget_host_restored\r\n","Specify a permission that a client is required to have in order to\n         use the associated object.":"指定客户需要获得的许可\r\n         使用关联的对象。\r\n","Running flags.":"运行标志。\r\n","android.app.appsearch.ReportUsageRequest.getDocumentId()":"android.app.appsearch.reportusagerequest.getDocumentId（）\r\n"," previously registered with\n            ":" 先前已注册\r\n            \r\n","android.app.Notification.fullScreenIntent":"android.app.notification.fullscreenintent\r\n","If the activity is not found.":"如果找不到活动。\r\n","Get the recommended timeout for interactive controls. -or- Set the recommended time that interactive controls need to remain on the screen to\n            support the user.":"获取有关交互式控件的推荐超时。 - 或 - 设置交互式控件需要保留在屏幕上的建议时间\r\n            支持用户。\r\n","android.app.backup.BackupAgent.onFullBackup(android.app.backup.FullBackupDataOutput)":"android.app.backup.backupent.onfullbackup（android.app.backup.fullbackupdataOutput）\r\n","android.app.ApplicationExitInfo.getStatus()":"android.app.applicationexitinfo.getstatus（）\r\n","android.app.admin.DevicePolicyManager.setUserControlDisabledPackages(android.content.ComponentName, java.util.List)":"android.app.admin.devicepolicymanager.setusercontroldisabledpackages（android.content.componentname，java.util.list）\r\n","When custom transitions are used with Fragments, the exit transition callback\n            is called when this Fragment is attached or detached when popping the back stack.":"当自定义过渡与片段一起使用时，出口过渡回调\r\n            当弹出后堆栈时，将此片段连接或分离时，称为称为。\r\n","\n        A managed peer is ":"\r\n        托管同行是\r\n","Information you can retrieve about a particular Service that is\n currently running in the system.":"您可以检索有关特定服务的信息\r\n 当前在系统中运行。\r\n","#setNetworkLoggingEnabled":"#SetNetworkLoggingEnabled\r\n","rotation of the view around the x axis, in degrees.":"视图围绕X轴的旋转以度为单位。\r\n","Returns whether the return transition and reenter transition overlap or not. -or- Sets whether the return transition and reenter transition overlap or not.":"返回退货过渡和重新输入过渡是否重叠。 - 或设置返回过渡和重新输入过渡是否重叠。\r\n"," to apply\n            property paths to all results, excepting any types that have had their own, specific property\n            paths set.":" 申请\r\n            所有结果的属性路径，除了任何具有自己的特定属性的类型\r\n            路径设置。\r\n","Enumerates values returned by  several types and taken as a parameter of  several types.":"列举以几种类型返回的值，并将其作为几种类型的参数。\r\n","android.app.appsearch.Migrator.onUpgrade(int, int, android.app.appsearch.GenericDocument)":"android.app.appsearch.migrator.onupgrade（int，int，android.app.appsearch.genericDocument）\r\n","android.app.admin.DevicePolicyManager.isResetPasswordTokenActive(android.content.ComponentName)":"android.app.admin.devicepolicymanager.isresetpasswordtokenactive（android.content.componentname）\r\n","Sets the width of vertical scrollbars and height of horizontal scrollbars.":"设置垂直滚动条的宽度和水平滚动条的高度。\r\n","android.app.appsearch.GenericDocument.getMaxIndexedProperties()":"android.app.appsearch.genericdocument.getMaxindexedProperties（）\r\n"," that contains the\n       views for entering text using the screen.":" 其中包含\r\n       使用屏幕输入文本的视图。\r\n","Allows low-level access to setting the pointer speed.":"允许低级访问设置指针速度。\r\n","android.app.admin.DevicePolicyManager.PRIVATE_DNS_MODE_OFF":"android.app.admin.devicepolicymanager.private_dns_mode_off\r\n","android.app.ApplicationExitInfo.REASON_CRASH":"android.app.applicationexitinfo.reason_crash\r\n","android.app.backup.FullBackupDataOutput.getTransportFlags()":"android.app.backup.fullbackupdataoutput.getTransportflags（）\r\n","Sets the padding, in pixels, of the end edge; see ":"将填充物以像素为端边缘设置；看\r\n"," on it or someone else\n            has requested that it finished.":" 在上面或其他人\r\n            已要求完成。\r\n"," was explicitly provided in\n            ":" 明确提供\r\n            \r\n","Drawable to use for the Select all action button in Contextual Action Bar \n         ":"可在上下文动作栏中选择所有操作按钮可用于选择所有操作按钮\r\n         \r\n","#KEY_ACCOUNT_STATUS_TOKEN":"#KEY_ACCOUNT_STATUS_TOKEN\r\n","android.app.Activity.enterPictureInPictureMode()":"android.app.Activity.enterPictureInpictureMode（）\r\n","android.app.AlertDialog":"Android.App.Alertdialog\r\n","Specifies that the device should attest using an individual attestation certificate.":"指定该设备应使用个人证明证书来证明。\r\n","android.app.admin.SecurityLog.TAG_PASSWORD_COMPLEXITY_SET":"android.app.admin.securitylog.tag_password_complexity_set\r\n","This is a hint for a solid color that can be used for caching\n             rendered views.":"这是可用于缓存的纯色的提示\r\n             呈现的视图。\r\n","Called when all saved state has been restored into the view hierarchy\n            of the fragment.":"当所有保存状态都恢复到视图层次结构中时调用\r\n            碎片。\r\n","Set a tinting color for the image.":"为图像设置着色颜色。\r\n","Turns a slice Uri into slice content.":"将切片URI变成切片内容。\r\n","android.app.appsearch.AppSearchSession.put(android.app.appsearch.PutDocumentsRequest, java.util.concurrent.Executor, android.app.appsearch.BatchResultCallback)":"android.app.app.appsearch.appsearchsession.put（android.app.appsearch.putdocumentsrequest，java.util.concurrent.executor，android.app.app.app.app.appsearch.batchresultcallback）\r\n","Inner radius of the ring expressed as a ratio of the ring's width.":"环的内半径表示为环的宽度比。\r\n","Return Bundle for extra vendor-specific data that can be modified and examined.":"返回可以修改和检查的额外供应商特定数据的返回捆绑包。\r\n","android.app.SearchManager.SUGGEST_COLUMN_IS_LIVE":"android.app.searchmanager.suggest_column_is_live\r\n","Notification category: error in background operation or authentication status.":"通知类别：背景操作或身份验证状态中的错误。\r\n","SearchResult":"搜索结果\r\n","BluetoothLeAdvertiser":"蓝牙极光变态器\r\n","android.app.DialogFragment.setCancelable(boolean)":"android.app.dialogfragment.setCancleable（布尔值）\r\n","android.app.Activity.onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)":"android.app.activity.oncreateview（java.lang.string，android.content.context，android.util.attributeset）\r\n","android.app.admin.DevicePolicyManager.setResetPasswordToken(android.content.ComponentName, byte[])":"android.app.admin.devicepolicymanager.setresetpasswordtoken（android.content.componentname，byte []）\r\n",") to handle the protocol authorization.":"）处理协议授权。\r\n","android.app.admin.DevicePolicyManager.getPasswordComplexity()":"android.app.admin.devicepolicymanager.getPasswordcomplexity（）\r\n","android.bluetooth.BluetoothGattCharacteristic.getProperties()":"android.bluetooth.bluetoothgattcharacteristic.getProperties（）\r\n","android.app.admin.DevicePolicyManager.getAffiliationIds(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getAffiliations（android.content.componentname）\r\n","android.view.Window.Callback#onCreatePanelMenu":"android.view.window.callback＃oncreatepanelmenu\r\n","Exception thrown when a ":"当一个例外时\r\n","The orientation for the clip.":"剪辑的方向。\r\n","android.animation.Animator":"android.animation.animator\r\n","android.app.Fragment.onDestroy()":"android.app.fragment.ondestroy（）\r\n","Defines the vertical scrollbar track drawable.":"定义可绘制的垂直滚动条轨道。\r\n","A type of policy that this device admin can use: disables use of keyguard features.":"此设备管理员可以使用的一种策略：禁用使用KeyGuard功能。\r\n","android.bluetooth.BluetoothProfile.EXTRA_STATE":"android.bluetooth.bluetoothprofile.extra_state\r\n","Returns whether USB data signaling is currently enabled. -or- Called by device owner or profile owner of an organization-owned managed profile to\n            enable or disable USB data signaling for the device.":"返回当前是否启用USB数据信号。 - 或由设备所有者或组织拥有的托管资料的个人资料所有者调用\r\n            为设备启用或禁用USB数据信号。\r\n","android.app.Activity.onOptionsMenuClosed(android.view.Menu)":"android.app.activity.onoptionsmenuclosed（android.view.menu）\r\n","android.app.WallpaperInfo.CREATOR":"Android.App.WallpaperInfo.Creator\r\n","android.app.admin.DeviceAdminReceiver.ACTION_PASSWORD_FAILED":"android.app.admin.deviceadminreceiver.action_password_failed\r\n","An interpolator where the rate of change is constant.":"变化速率恒定的插值器。\r\n","Returns the notification channel settings for a given channel and\n            ":"返回给定渠道的通知频道设置和\r\n            \r\n","Integer extra for ":"整数额外\r\n","android.app.admin.DeviceAdminReceiver.onComplianceAcknowledgementRequired(android.content.Context, android.content.Intent)":"android.app.admin.deviceadminreceiver.oncompliancecececececemledgemprequired（android.content.context，android.content.intent）\r\n","android.app.ActionBar.setDisplayUseLogoEnabled(boolean)":"android.app.actionbar.setdisplayuselogoenabled（布尔值）\r\n","android.app.SearchManager.SUGGEST_COLUMN_SHORTCUT_ID":"android.app.searchmanager.suggest_column_shortcut_id\r\n","Report that an application has started executing a long-running operation.":"报告说，应用程序已经开始执行长期运行。\r\n","The notification object being built by this builder.":"该构建器构建的通知对象。\r\n","android.accounts.AccountManager.invalidateAuthToken(java.lang.String, java.lang.String)":"android.accounts.accountmanager.invalidateauthtoken（java.lang.string，java.lang.string）\r\n","Represents a remote Bluetooth device.":"代表远程蓝牙设备。\r\n","Finds a view that was identified by the id attribute from the XML layout resource.":"从XML布局资源中找到由ID属性识别的视图。\r\n","android.appwidget.AppWidgetHost.onProvidersChanged()":"android.appwidget.appwidgethost.onproviderschanged（）\r\n","android.app.admin.DevicePolicyManager.getManagedProfileMaximumTimeOff(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getManagedProfileMaxiumeTimeOff（android.content.componentname）\r\n","android.app.appsearch.SearchSpec.getResultCountPerPage()":"android.app.appsearch.searchspec.getResultCountperpage（）\r\n","Return a list of the tasks that are currently running, with\n            the most recent being first and older ones after in order.":"返回当前正在运行的任务的列表，\r\n            最近的是订单之后的第一个和大龄。\r\n","The user has performed a right and down gesture on the touch screen.":"用户在触摸屏上执行了一个右右手势。\r\n","\n            flag when calling ":"\r\n            打电话时标记\r\n","The preferred left padding for an expandable list item that is a child.":"首选的左填充物，是一个可扩展的列表项目。\r\n","repeatCount":"重复\r\n","Defines text that briefly describes content of the view.":"定义简要描述视图内容的文本。\r\n","android.annotation.SuppressLint":"android.annotation.suppresslint\r\n","Returns true if the caller is running on a device where the admin can grant\n            permissions related to device sensors.":"如果呼叫者在管理员可以授予的设备上运行，则返回true\r\n            与设备传感器有关的权限。\r\n","android.app.ListActivity.getSelectedItemPosition()":"android.app.listactivity.getSelectedItemPosition（）\r\n","This download doesn't show in the UI or in the notifications.":"此下载未在UI或通知中显示。\r\n","android.app.blob.BlobStoreManager.acquireLease(android.app.blob.BlobHandle, int)":"android.app.blob.blobstoremanager.acquirelease（android.app.blob.blobhandle，int）\r\n","For example, AT+VGM=?. ":"例如，在+vgm =？。\r\n","OnAlarmListener":"OnAlarmListener\r\n","The default height of the widget when added to a host, in dp.":"将小部件的默认高度添加到主机中，在DP中。\r\n","android.app.job.JobInfo.getId()":"android.app.job.jobinfo.getID（）\r\n","NotificationManager#setAutomaticZenRuleState(String, Condition)":"NotificationManager＃setautomaticzenrulestate（字符串，条件）\r\n","Representation of an entry on the fragment back stack, as created\n with ":"片段背堆上的条目的表示，如创建\r\n 和\r\n","Return the Loader with the given id or null if no matching Loader\n            is found.":"如果没有匹配的加载程序，则使用给定的ID或NULL返回加载程序\r\n            被发现。\r\n"," set, this\n            provides an easy way to tell whether the job is being executed due to the deadline\n            expiring.":" 设置，这个\r\n            提供了一种简单的方法来判断由于截止日期是否正在执行工作\r\n            到期。\r\n","Sends a context item selection event to the Fragments managed by the\n            controller's FragmentManager.":"将上下文项选择事件发送给由\r\n            控制器的FragmentManager。\r\n","android.app.admin.DevicePolicyManager.isAffiliatedUser()":"android.app.admin.devicepolicymanager.isaffiliateduser（）\r\n","This is called when a child activity of this one calls its\n            ":"当这个孩子的活动称呼它的时候，这就是称为\r\n            \r\n",": the process is not an expendable\n            background process, but the device is running extremely low on memory\n            and is about to not be able to keep any background processes running.":"：该过程不是消耗的\r\n            背景过程，但是该设备在内存上运行极低\r\n            并且将无法保持任何背景过程运行。\r\n","android.bluetooth.BluetoothGatt.CONNECTION_PRIORITY_HIGH":"android.bluetooth.bluetoothgatt.connection_priority_high\r\n","Hide or unhide packages.":"隐藏或UND软件包。\r\n","A flag indicating the animation that runs on those items that are appearing\n            in the container.":"指示在出现的项目上运行的动画的标志\r\n            在容器中。\r\n","Get the interface that activity use to talk to the splash screen.":"获取活动用来与Splash屏幕交谈的接口。\r\n","#color":"＃颜色\r\n","android.app.admin.DevicePolicyManager.setLocationEnabled(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setLocationEnabled（android.content.componentname，boolean）\r\n","android.app.Instrumentation.invokeMenuActionSync(android.app.Activity, int, int)":"android.app.instrumentation.invokemenuactionsync（android.app.Activity，int，int）\r\n","This class provides the public APIs to control the Bluetooth A2DP\n            profile.":"该课程为控制蓝牙A2DP提供了公共API\r\n            轮廓。\r\n","android.content.ComponentCallbacks2.TRIM_MEMORY_COMPLETE":"android.content.componentCallbacks2.trim_memory_complete\r\n"," key: the color used as a hint for the Answer action button of a\n            ":" 钥匙：用作提示的颜色作为答案动作按钮的提示\r\n            \r\n"," key: whether the progress bar is indeterminate, supplied to\n            ":" 关键：进度栏是否不确定，提供给\r\n            \r\n","android.app.Notification.CATEGORY_MISSED_CALL":"android.app.notification.category_missed_call\r\n","android.app.Notification.Notification(android.os.Parcel)":"android.app.notification.notification（android.os.parcel）\r\n","android.app.Activity.postponeEnterTransition()":"android.app.activity.postponeentertransition（）\r\n","android.app.NotificationChannel.setBypassDnd(boolean)":"Android.App.NotificationChannel.setBypassdnd（boolean）\r\n","Set the accent color of the notification.":"设置通知的重音颜色。\r\n","Public interface for managing policies enforced on a device.":"用于管理设备上执行的政策的公共界面。\r\n","#stopSelfResult":"#StopSelfResult\r\n","Interface used to control the instantiation of manifest elements.":"用于控制清单元素的实例化的界面。\r\n","\n            Value visibilty is controlled through\n            ":"\r\n            价值Visibilty通过\r\n            \r\n","#setListShown(boolean)":"#setlistshown（布尔）\r\n","android.app.Activity.setSecondaryProgress(int)":"Android.App.Activity.SetsecondaryProgress（int）\r\n","When opening a new activity, this is the animation that is\n              run on the previous activity (which is exiting the screen).":"打开新活动时，这是动画\r\n              在上一个活动（即将退出屏幕）上运行。\r\n","AppSearchSession#getStorageInfo":"AppSearchSession＃getStorageinfo\r\n",": the process is around the middle\n            of the background LRU list; freeing memory can help the system keep\n            other processes running later in the list for better overall performance.":"：该过程在中间\r\n            背景LRU列表；释放内存可以帮助系统保留\r\n            列表以后在列表中运行的其他过程以获得更好的整体性能。\r\n","android.app.Fragment.onOptionsItemSelected(android.view.MenuItem)":"Android.App.Fragment.OnoptionsItemselectect（Android.view.menuitem）\r\n","android.app.UiModeManager.MODE_NIGHT_NO":"android.app.uimodemanager.mode_night_no\r\n","Denotes spoken feedback.":"表示口语反馈。\r\n","android.app.Fragment.setSharedElementEnterTransition(android.transition.Transition)":"Android.App.Fragment.SetSharedElementEnterntransition（Android.transition.transition）\r\n","EditText text foreground color.":"EditText文本前景颜色。\r\n","Resource id for the description of the AppWidget.":"用于描述AppWidget的资源ID。\r\n","Constructs ":"结构体\r\n","android.app.admin.DevicePolicyManager.removeKeyPair(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.removekeypair（android.content.componentname，java.lang.string）\r\n","If an error occurs reverting to the built-in\n wallpaper.\n":"如果发生错误恢复到内置\r\n 墙纸。\r\n\r\n"," that has no title bar and\n         no status bar.":" 没有标题栏\r\n         没有状态栏。\r\n","Called by a device/profile owner to set the timeout after which unlocking with secondary, non\n            strong auth (e.":"由设备/配置文件所有者调用以设置超时，之后用辅助，非\r\n            强者（e。\r\n"," when the download is currently running.":" 下载当前正在运行时。\r\n","android.bluetooth.BluetoothClass.getMajorDeviceClass()":"android.bluetooth.bluetoothclass.getmajordeviceclass（）\r\n","android.app.admin.DevicePolicyManager.startUserInBackground(android.content.ComponentName, android.os.UserHandle)":"android.app.admin.devicepolicymanager.startuserinbackground（android.content.componentname，android.os.os.userhandle）\r\n","android.app.ApplicationExitInfo.getRealUid()":"android.app.applicationexitinfo.getrealuid（）\r\n"," that is\n         broadcast after the system finishes booting.":" 那是\r\n         在系统完成启动后广播。\r\n","Programmatically closes the most recently opened context menu, if showing.":"如果显示，则可以编程关闭最近打开的上下文菜单。\r\n","#ACTION_SET_NEW_PASSWORD":"#action_set_new_password\r\n","Action to toggle showing the overview of recent apps.":"切换的操作，显示最近应用程序的概述。\r\n","Returns the user specified importance for notifications from the calling\n            package.":"返回用户指定的重要性，以通知通知\r\n            包裹。\r\n",", but no animation is used when\n            transitioning from the previous state.":"，但是当\r\n            从以前的状态过渡。\r\n","Fraction of the animation duration used to delay the beginning of\n         the animation of each column.":"动画持续时间的一部分用于延迟\r\n         每一列的动画。\r\n","Enable the Overview button and the Overview screen during LockTask mode.":"在LockTask模式下，启用概述按钮和概述屏幕。\r\n","android.app.admin.DelegatedAdminReceiver":"Android.App.Admin.DelegatedAdminReceiver\r\n","The background of a panel when it is inset from the left and right edges of the screen.":"面板的背景是从屏幕的左侧和右边缘插入的。\r\n","Flag allowing you to disable the preview animation for a window.":"标志使您可以禁用窗口的预览动画。\r\n","android.bluetooth.BluetoothGatt.GATT_CONNECTION_CONGESTED":"android.bluetooth.bluetoothgatt.gatt_connection_congested\r\n","android.app.ApplicationExitInfo.getProcessStateSummary()":"android.app.applicationexitinfo.getProcessStatesummary（）\r\n","Set selected display options.":"设置选定的显示选项。\r\n","UserManager":"Usermanager\r\n","android.app.Notification.getTimeoutAfter()":"android.app.notification.getTimeOutafter（）\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_IDENTITY":"android.app.admin.devicepolicymanager.extra_provisioning_wifi_identity\r\n","The value used to indicate infinite duration (e.":"用于指示无限持续时间的值（e。\r\n","android.accessibilityservice.AccessibilityServiceInfo.getSettingsActivityName()":"android.accosconibilityservice.Accessibilityserviceinfo.getSetTingsActivityName（）\r\n","Returns how many matches for each property of a matching document to generate snippets for.":"返回匹配文档的每个属性的匹配项，以生成摘要。\r\n",", but only returns ":"，但只返回\r\n","android.app.RemoteInput.getAllowFreeFormInput()":"Android.App.RemoteInput.getAllowFreeFormInput（）\r\n","DevicePolicyManager#wipeData":"DevicePolicyManager＃Wipedata\r\n","The GLES driver version number needed by an application.":"应用程序需要的GLES驱动程序编号。\r\n","Set the action bar's subtitle.":"设置动作栏的字幕。\r\n","Optional meta-that can be in the manifest for this component, specifying\n            the name of the native shared library to load.":"可选的元 - 可以在此组件的清单中，指定\r\n            本机共享库的名称加载。\r\n","The callback interface to return ":"返回的回调接口\r\n","android.app.WallpaperManager.COMMAND_DROP":"android.app.wallpapermanager.command_drop\r\n","#notifyAsPackage(String, String, int, Notification).\n            @param tag A string identifier for this notification.  May be {@code null":"#NotifyAspackage（字符串，字符串，int，Notification）。\r\n            @Param标记此通知的字符串标识符。可能是{@code null\r\n","android.app.Activity.onActionModeFinished(android.view.ActionMode)":"android.app.activity.onactionmodefined（android.view.actionmode）\r\n","android.app.DownloadManager.COLUMN_MEDIAPROVIDER_URI":"android.app.downloadmanager.column_mediaprovider_uri\r\n"," stored in the ":" 存储在\r\n","android.bluetooth.BluetoothA2dp.getDevicesMatchingConnectionStates(int[])":"android.bluetooth.bluetootha2dp.getDevicesMatchingConnectionStates（int []）\r\n","android.app.DialogFragment.onCreateDialog(android.os.Bundle)":"android.app.dialogfragment.oncreatedialog（android.os.bundle）\r\n","android.app.ActionBar.setStackedBackgroundDrawable(android.graphics.drawable.Drawable)":"android.app.actionbar.setstackedbackgrounddrawable（android.graphics.drawable.drabable）\r\n","android.app.people.ConversationStatus.getActivity()":"android.app.people.conversationstatus.getActivity（）\r\n","android.appwidget.AppWidgetHostView.setExecutor(java.util.concurrent.Executor)":"android.appwidget.appwidgethostview.setexecutor（java.util.concurrent.executor）\r\n","android.app.ActionBar.removeAllTabs()":"android.app.actionbar.removealltabs（）\r\n","Returns the list of schema types to search for.":"返回要搜索的模式类型列表。\r\n","android.app.TaskStackBuilder.addParentStack(java.lang.Class)":"android.app.taskstackbuilder.addparentstack（java.lang.class）\r\n","android.app.WallpaperColors.getSecondaryColor()":"android.app.wallpapercolors.getsecondarycolor（）\r\n","The preferred padding along the left edge of list items.":"沿列表项目左边缘的首选填充。\r\n","android.app.people.PeopleManager.addOrUpdateStatus(java.lang.String, android.app.people.ConversationStatus)":"android.app.people.peoplemanager.addorupdatestatus（java.lang.string，android.app.people.conversation status）\r\n","Base class for implementing application instrumentation code.":"用于实施应用程序仪器代码的基类。\r\n","Height of the divider.":"分隔线的高度。\r\n","android.app.NotificationManager.getActiveNotifications()":"android.app.notificationmanager.getActivenotification（）\r\n","android.app.admin.DevicePolicyManager.reboot(android.content.ComponentName)":"android.app.admin.devicepolicymanager.reboot（android.content.componentname）\r\n","android.app.NotificationChannel.EDIT_CONVERSATION":"android.app.notificationChannel.edit_conversation\r\n","android.app.admin.SecurityLog.LEVEL_ERROR":"android.app.admin.securitylog.level_error\r\n","Rename the specified ":"重命名指定的\r\n","Color of hint text (displayed when the field is empty).":"提示文本的颜色（字段为空时显示）。\r\n","android.accessibilityservice.AccessibilityServiceInfo.getInteractiveUiTimeoutMillis()":"Android.AccessibilityService.Accessibilityserviceinfo.getInteractiveUitimeTimeTmillis（）\r\n","Set the \"ticker\" text which is displayed in the status bar when the notification first arrives.":"设置通知首次到达时在状态栏中显示的“股票”文本。\r\n","\n            is false, ":"\r\n            是错误的，\r\n","Read one byte of entity data from the stream, returning it as\n            an integer value.":"从流中读取一个实体数据的字节，将其返回为\r\n            整数值。\r\n","android.app.appsearch.ReportUsageRequest.getUsageTimestampMillis()":"android.app.appsearch.reportusagerequest.getusagetimestampmillis（）\r\n","#ACTION_STATE_CHANGED":"#action_state_changed\r\n","android.app.slice.SliceItem.getBundle()":"android.app.slice.sliceitem.getBundle（）\r\n"," to specify an explicit transition animation to\n            perform next.":" 要指定明确的过渡动画\r\n            下一个执行。\r\n","android.app.WallpaperColors":"Android.App.WallPaperColors\r\n","Provides initial visibility state of the drawable; the default\n             value is false.":"提供可绘制的最初可见性状态；默认值\r\n             值是错误的。\r\n","android.app.UiModeManager.MODE_NIGHT_YES":"android.app.uimodemanager.mode_night_yes\r\n","android.app.usage.ConfigurationStats.getLastTimeActive()":"android.app.usage.configurationstats.getlasttimactive（）\r\n","Returns whether the user wants silent notifications (see ":"返回用户是否需要无声通知（请参阅\r\n","Component name of an activity that allows the user to modify\n             the settings for this service.":"允许用户修改的活动的组件名称\r\n             此服务的设置。\r\n","Gets whether you should show UI with rationale before requesting a permission.":"在请求许可之前，请获取是否应该向UI显示UI。\r\n","Set the title using the custom view ":"使用自定义视图设置标题\r\n","Returns the user visible description of this group. -or- Sets the user visible description of this group.":"返回该组的用户可见描述。 - 或 - 设置此组的用户可见描述。\r\n","android.app.Fragment.onCreate(android.os.Bundle)":"android.app.fragment.oncreate（android.os.bundle）\r\n","#getBindDeviceAdminTargetUsers":"#getBindDeviceadMintargetusers\r\n","Defines the type of strokes that define a gesture.":"定义定义手势的笔触类型。\r\n","Builder#setLargeIcon(android.graphics.Bitmap)":"构建器＃setlargeicon（android.graphics.bitmap）\r\n","android.app.slice.SliceProvider.onBindSlice(android.net.Uri, java.util.Set)":"android.app.slice.sliceprovider.onbindslice（android.net.uri，java.util.set）\r\n","Animation to use when showing the fullscreen extract UI after\n             it had previously been hidden.":"在显示全屏提取物ui之后使用的动画\r\n             它以前被隐藏了。\r\n"," that uses\n            ":" 使用\r\n            \r\n","#setIndeterminate(boolean)\n                   indeterminate":"#setIndeterminate（布尔）\r\n                   不定\r\n","Sent when it is time to update your AppWidget.":"在更新您的AppWidget的时候发送。\r\n","\n            to obtain the query string typed in by the user.":"获取用户键入的查询字符串。\r\n","android.app.ActivityOptions.makeClipRevealAnimation(android.view.View, int, int, int, int)":"android.app.activityOptions.makecliprevealanimation（android.view.view，int，int，int，int，int）\r\n","android.app.appsearch.RemoveByDocumentIdRequest.getIds()":"android.app.appsearch.removebydocumentidrequest.getIds（）\r\n","android.app.job.JobInfo.DEFAULT_INITIAL_BACKOFF_MILLIS":"android.app.job.jobinfo.default_initial_backoff_millis\r\n","\n          Whether or not the service can be instantiated by the system.\n        ":"\r\n          该服务是否可以由系统实例化。\r\n        \r\n","#create()":"＃创造（）\r\n","Create an ActivityOptions specifying a custom animation to run when\n            the activity is displayed.":"创建一个activityOptions，指定自定义动画以运行\r\n            展示活动。\r\n","Set the RemoteViews to use for the specified appWidgetId.":"设置用于指定AppWidgetID的远程视图。\r\n","Set the first line of text in the platform notification template.":"在平台通知模板中设置第一行文本。\r\n","Which ringtone type(s) to show in the picker.":"哪种铃声类型（S）在选择器中显示。\r\n","Returns the result code this exception was constructed with.":"返回结果代码此异常已构建。\r\n","android.bluetooth.BluetoothAdapter.isLePeriodicAdvertisingSupported()":"android.bluetooth.bluetoothadapter.isleperiodicacadvertisingsupported（）\r\n","The user has performed a four-finger swipe right gesture on the touch screen.":"用户在触摸屏上执行了四指滑动右手势。\r\n","android.app.FragmentTransaction.commit()":"android.app.fragmentTransaction.commit（）\r\n","Sends an up and down key event sync to the currently focused window.":"将上下关键事件同步发送到当前集中的窗口。\r\n","Checks if it's safe to run operations that can be affected by the given ":"检查是否可以安全地运行可能受到给定的操作\r\n","android.accessibilityservice.AccessibilityService.GESTURE_SWIPE_RIGHT_AND_UP":"Android.AccessibilityService.Accessibilityservice.gesture_swipe_right_and_up\r\n","android.app.ActionBar":"Android.App.ActionBar\r\n","Changes the current administrator to another one.":"将当前的管理员更改为另一个管理员。\r\n","AppTask":"apptask\r\n","#PERMISSION_POLICY_AUTO_GRANT":"#permission_policy_auto_grant\r\n","F:Android.App.DialogFragment.SetStyle":"F：android.app.dialogfragment.setstyle\r\n","android.app.usage.UsageEvents":"android.app.usage.usageevents\r\n","GATT read operation is not permitted":"Gatt读取操作不允许\r\n","The text for the button when it is not checked.":"未检查按钮时的文本。\r\n","Called when the AppWidget provider for a AppWidget has been upgraded to a new apk.":"当AppWidget的AppWidget提供商已升级到新APK时，请致电。\r\n","Provides an opportunity to prepare a managed dialog before it is being\n            shown.":"提供了一个机会来准备托管对话框\r\n            显示。\r\n","android.app.slice.Slice.HINT_HORIZONTAL":"android.app.slice.slice.hint_horizo​​ntal\r\n","Standard activity result: operation succeeded.":"标准活动结果：成功操作。\r\n","Constructor using a context for this builder and the ":"使用该构建器的上下文和构造函数\r\n","Activity#onPictureInPictureRequested":"活动＃OnPictureInPictureRequested\r\n","Cancel <em>all</em> jobs that have been scheduled by the calling application.":"CANCEL <em>所有</em>作业已由调用应用程序安排。\r\n","#KEYGUARD_DISABLE_FEATURES_ALL":"#keyguard_disable_features_all\r\n","android.app.Fragment.getTargetRequestCode()":"android.app.fragment.getTargetRequestCode（）\r\n","android.app.SearchManager.EXTRA_WEB_SEARCH_PENDINGINTENT":"android.app.searchmanager.extra_web_search_pendingIntent\r\n","android.app.Service.dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])":"android.app.service.dump（java.io.filedescriptor，java.io.printwriter，java.lang.string []）\r\n"," Intent with all of the context of the current\n application.":" 目的是当前的所有上下文\r\n 应用。\r\n","Indicates that an admin has set a password expiration timeout.":"指示管理员设置了密码到期超时。\r\n","android.app.admin.DevicePolicyManager.getPasswordMinimumNumeric(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getPasswordminimumnumeric（android.content.componentname）\r\n"," account name in results\n            from methods which return information about a particular account.":" 结果名称\r\n            从返回有关特定帐户的信息的方法。\r\n","Action sent to a device administrator when the user has entered an incorrect device\n            or profile challenge password.":"用户输入不正确的设备时发送给设备管理员的操作发送给设备管理员\r\n            或个人资料挑战密码。\r\n","Checks whether the text in the query field should come from the suggestion intent data.":"检查查询字段中的文本是否应来自建议意图数据。\r\n","android.animation.PropertyValuesHolder.ofMultiFloat(java.lang.String, android.graphics.Path)":"android.animation.propertyvaluesholder.ofmultifloat（java.lang.string，android.graphics.path）\r\n","Application process died due to the result of an OS signal; for example,\n            ":"申请过程由于OS信号的结果而死亡；例如，\r\n            \r\n","Returns a Drawable representing the thumbnail of the specified Drawable.":"返回可绘制的代表指定可绘制的缩略图。\r\n","Returns the order of returned search results (descending or ascending).":"返回返回的搜索结果（下降或上升）的顺序。\r\n","android.app.Activity.onRestoreInstanceState(android.os.Bundle)":"android.app.activity.onrestoreInstancestate（android.os.bundle）\r\n","android.app.UiAutomation.revokeRuntimePermission(java.lang.String, java.lang.String)":"android.app.uiautomation.revokeruntimepermission（java.lang.string，java.lang.string）\r\n","#WIPE_SILENTLY":"#wipe_siltime\r\n","Get the AppWidgetManager instance to use for the supplied ":"获取用于提供的AppWidgetManager实例\r\n","The widget can be reconfigured anytime after it is bound by starting the\n            ":"小部件可以通过启动绑定后随时重新配置\r\n            \r\n"," object bound to this activity and controlling the\n            access permissions for content URIs associated with the ":" 对象绑定到此活动并控制\r\n            访问与之相关的内容URI的访问权限\r\n","android.content.ComponentCallbacks2.TRIM_MEMORY_UI_HIDDEN":"android.content.componentCallbacks2.trim_memory_ui_hidden\r\n","android.app.Activity.onCreateOptionsMenu(android.view.Menu)":"android.app.activity.oncreateoptionsmenu（android.view.menu）\r\n","DevicePolicyManager#setApplicationRestrictions":"DevicePolicyManager＃SetApplicationRestrictions\r\n","Stop monitoring that was previously started with ":"停止以前开始的监视\r\n","Entry point for the callback from the ":"从\r\n","OnAccountsUpdateListener":"OnAccountSupDateListener\r\n","The restore process has completed.":"还原过程已经完成。\r\n","Callback reporting an LE device found during a device scan initiated\n by the ":"回调报告在启动设备扫描期间发现的LE设备\r\n 由\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_PASSWORD":"android.app.admin.devicepolicymanager.extra_provisioning_wifi_password\r\n","android.app.Activity.requestDragAndDropPermissions(android.view.DragEvent)":"android.app.activity.RequestDragandDropperMissions（Android.view.dragevent）\r\n","#getAppTaskThumbnailSize()":"#getAppTaskTaskThumbNailsize（）\r\n","android.app.FragmentManager.findFragmentByTag(java.lang.String)":"android.app.fragmentmanager.findfragmentbytag（java.lang.string）\r\n"," when\n there is an instantiation failure.":" 什么时候\r\n 存在实例化故障。\r\n","android.app.appsearch.SetSchemaResponse.getMigratedTypes()":"android.app.appsearch.setschemaresponse.getMigratedTypes（）\r\n","Reads the value for a given descriptor from the associated remote device.":"从关联的远程设备中读取给定描述符的值。\r\n","Adds a file to the downloads database system, so it could appear in Downloads App\n (and thus become eligible for management by the Downloads App).":"将文件添加到下载数据库系统中，因此可以显示在下载应用程序中\r\n （因此，通过下载应用程序有资格获得管理）。\r\n","Uninstalls the given certificate from trusted user CAs, if present.":"如果存在，请卸载来自受信任的用户CAS的给定证书。\r\n","Set the MIME content type of this download.":"设置此下载的MIME内容类型。\r\n","android.app.admin.DevicePolicyManager.setAutoTimeZoneEnabled(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setautotimezoneenabled（android.content.componentname，boolean）\r\n","android.app.Dialog.getCurrentFocus()":"android.app.dialog.getCurrentFocus（）\r\n","SearchSpec.Builder#setSnippetCountPerProperty":"searchspec.builder＃SETSNIPPETCOUNTPERPROPERTY\r\n","Position of the fast scroll index overlay window.":"快速滚动索引覆盖窗口的位置。\r\n","android.view.Window.Callback#onCreatePanelView":"android.view.window.callback＃onCreatePanelView\r\n","Create a new piece of work, which can be submitted to\n            ":"创建一个新的作品，可以提交给\r\n            \r\n","android.app.DownloadManager.EXTRA_NOTIFICATION_CLICK_DOWNLOAD_IDS":"android.app.downloadmanager.extra_notification_click_download_ids\r\n","Called when an activity you launched exits, giving you the requestCode\n            you started it with, the resultCode it returned, and any additional\n            data from it.":"当您启动的活动退出时打电话给您请求代码\r\n            您开始使用它，结果代码返回以及任何其他\r\n            来自它的数据。\r\n","Delegation of management of uninstalled packages.":"卸载软件包的管理委托。\r\n","Detach the given fragment from the UI.":"将给定的片段从UI中分离出来。\r\n","Set the resource id of the ":"设置资源ID\r\n","Retrieves the set of all namespaces in the current database with at least one document.":"用至少一个文档检索当前数据库中所有名称空间的集合。\r\n","android.accessibilityservice.AccessibilityService.onServiceConnected()":"android.accosconibilityservice.Accesseribilityservice.onerviceConnected（）\r\n","android.accounts.AbstractAccountAuthenticator.getAuthToken(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String, android.os.Bundle)":"android.accounts.abstractaccountauthenticator.getauthtoken（android.accounts.accountauthenticatorestorestonsess，android.accounts.accounts.accounts.accounts.accounts.accounts.account，java.lang.string，android.os.os.bundle）\r\n","Checks if voice search should start in-app search.":"检查语音搜索是否应启动应用内搜索。\r\n","android.app.appsearch.exceptions.AppSearchException.AppSearchException(int)":"android.app.appsearch.exceptions.appsearchexception.appsearchexception（int）\r\n","android.app.ApplicationErrorReport.TYPE_ANR":"Android.App.ApplicationErroreport.type_anr\r\n","Size of the text for custom keys with some text and no icon.":"带有一些文本的自定义键的文本大小，没有图标。\r\n","android.app.slice.SliceItem.FORMAT_TEXT":"android.app.slice.sliceitem.format_text\r\n","android.app.FragmentHostCallback.onGetWindowAnimations()":"Android.App.FragmentHostCallback.OngetWindowAnimations（）\r\n","Application process was killed because of initialization failure,\n            for example, it took too long to attach to the system during the start,\n            or there was an error during initialization.":"申请过程因初始化失败而杀死\r\n            例如，一开始就花费了太长时间了，\r\n            或者在初始化过程中存在错误。\r\n","Color of highlighted text, when used in a light theme.":"突出显示的文本的颜色，当在光主题中使用时。\r\n","android.app.SearchableInfo.CREATOR":"Android.App.SearchableInfo.Creator\r\n"," for this\n            Activity window.":" 为了这\r\n            活动窗口。\r\n","Used instead of textEditPasteWindowLayout when the window is moved on the side of the\n             insertion cursor because it would be clipped if it were positioned on top.":"当窗口移动在\r\n             插入光标，因为如果将其放在顶部，它将被夹住。\r\n"," field as a stopwatch.":" 字段作为秒表。\r\n","#getInstalledProvidersForProfile(UserHandle)":"#getInstalledProvidersForprofile（userHandle）\r\n","\n            associated with.":"\r\n            有关联。\r\n","android.app.NotificationManager.canNotifyAsPackage(java.lang.String)":"android.app.notificationmanager.cannotifyaspackage（java.lang.string）\r\n","Set a listener to be invoked when the neutral button of the dialog is pressed.":"按下对话框的中性按钮时，请设置侦听器。\r\n","Called to tell you that you're stopping.":"叫告诉你你停下来。\r\n","android.app.appsearch.SearchSpec.getOrder()":"android.app.appsearch.searchspec.getOrder（）\r\n","Set the alert sound to play.":"将警报声音设置为播放。\r\n","AuthenticatorDescription":"AuthentIcatorDescription\r\n","android.app.Instrumentation.waitForMonitor(android.app.ActivityMonitor)":"android.app.instrumentation.WaitFormonitor（android.app.activityMonitor）\r\n","IntentSender":"意图人\r\n","The touch screen type used by an application.":"应用程序使用的触摸屏类型。\r\n","Create an instance of CrashInfo initialized from an exception.":"创建一个从异常初始化的CrashInfo的实例。\r\n","Allow an application to request that a signal be sent to all persistent processes \n":"允许应用程序请求将信号发送到所有持久过程\r\n\r\n","#isAffiliatedUser() affiliated":"#ISAFFILIADESER（）附属\r\n","android.animation.ValueAnimator.setInterpolator(android.animation.TimeInterpolator)":"android.animation.valueAnimator.setInterPolator（android.animation.timeinterpolator）\r\n","AccountManager#KEY_INTENT":"AccountManager＃key_intent\r\n","Retrieve a PendingIntent that will perform a broadcast, like calling\n            ":"检索将执行广播的悬而未决的人，例如致电\r\n            \r\n","android.animation.ObjectAnimator.ofMultiFloat(java.lang.Object, java.lang.String, float[][])":"android.animation.ObjectAnimator.ofmultifloat（java.lang.Object，java.lang.string，float [] [] [] []）\r\n"," when the download has successfully completed.":" 下载成功完成后。\r\n","Sets the drawable to be used to display the indeterminate progress value.":"设置可用于显示不确定进度值的可绘图。\r\n","The preferred background for gallery items.":"画廊项目的首选背景。\r\n","#ACTION_PAIRING_REQUEST":"#action_pairing_request\r\n","Returns the desired minimum width for the wallpaper.":"返回墙纸所需的最小宽度。\r\n","Confirm passkey for ":"确认Passkey\r\n","F:Android.App.ActionBar.SetDisplayOptions":"F：android.app.actionbar.setDisplayOptions\r\n","TTLS":"TTL\r\n"," and the application will be responsible for providing an\n            instance of ":" 该申请将负责提供\r\n            实例\r\n","if address is invalid\n":"如果地址无效\r\n\r\n","android.app.Notification.PRIORITY_MAX":"android.app.notification.priority_max\r\n","The activity name associated with the error, if known.":"如果已知的话，与错误关联的活动名称。\r\n","android.app.NotificationChannel.EDIT_SOUND":"android.app.notificationChannel.edit_sound\r\n","android.app.appsearch.SearchSpec.RANKING_STRATEGY_SYSTEM_USAGE_COUNT":"android.app.appsearch.searchspec.ranking_strategy_system_usage_count\r\n",".\n        Being \"replaceable\" means that if another peer instance is created\n        around the same Java instance, the newly created instance will replace\n        the replaceable peer in the Java-to-managed instance mapping.\n      ":"。\r\n        “可更换”是指如果创建了另一个对等实例\r\n        围绕同一Java实例，新创建的实例将替换\r\n        Java-to管理实例映射中的可更换对等。\r\n      \r\n","\n            list contains at least one valid certificate. If there are no valid certificates and this method returns ":"\r\n            列表至少包含一个有效的证书。如果没有有效的证书，并且此方法返回\r\n","android.app.appsearch.SearchSpec.TERM_MATCH_EXACT_ONLY":"android.app.appsearch.searchspec.term_match_exact_only\r\n","android.app.AlertDialog.setButton2(java.lang.CharSequence, android.os.Message)":"android.app.alertdialog.setButton2（java.lang.charsequence，android.os.os.message）\r\n","android.app.ApplicationErrorReport":"Android.App.ApplicationErrreReport\r\n","Set the result that is to be sent as the result of the request that caused this\n            Activity to be launched.":"设置结果是由于造成此的请求而发送的结果\r\n            要启动的活动。\r\n","An optional query hint string to be displayed in the empty query field.":"可选的查询提示字符串将显示在空查询字段中。\r\n","android.animation.PropertyValuesHolder.setIntValues(int[])":"android.animation.propertyvaluesholder.setintvalues（int []）\r\n","android.app.job.JobInfo.getMinPeriodMillis()":"android.app.job.jobinfo.getminperiodmillis（）\r\n","Defines what this animation should do when it reaches the end. -or- Defines what this animation should do when it reaches the end.":"定义该动画到达末尾时应做的事情。 - 或 - 定义该动画达到末尾时应做的事情。\r\n","android.accessibilityservice.AccessibilityService":"Android.Accesseribilityservice.Accessibilityservice\r\n","Track whether this job will repeat with a given period.":"跟踪这项工作是否会在给定期间重复。\r\n","Application process was killed, because the user it is running as on devices\n            with mutlple users, was stopped.":"申请过程被杀死，因为它正在运行的用户在设备上运行\r\n            使用mutlple用户，停止了。\r\n"," to use when playing the sound.":" 播放声音时使用。\r\n","android.app.FragmentController.dispatchTrimMemory(int)":"Android.App.FragmentController.disPatchTrimMemory（int）\r\n","#ACTION_AUTOMATIC_ZEN_RULE":"#action_automatic_zen_rule\r\n","Theme for a window that will be displayed either full-screen on\n         smaller screens (small, normal) or as a dialog on larger screens\n         (large, xlarge).":"窗口的主题将在\r\n         较小的屏幕（小，正常）或较大屏幕上的对话框\r\n         （大，Xlarge）。\r\n","Set":"放\r\n","Extra spacing between lines of text, as a multiplier.":"文本行之间的额外间距作为乘数。\r\n"," expanded\n            notifications, each of which was supplied to ":" 扩展\r\n            通知，每个通知都提供给\r\n","android.app.ExpandableListActivity.onGroupExpand(int)":"android.app.expandableSristActivity.OngOloupExpand（int）\r\n","android.app.Notification.EXTRA_IS_GROUP_CONVERSATION":"android.app.notification.extra_is_group_conversation\r\n","Factory method called by the Android framework to create new action views.":"由Android框架调用的工厂方法来创建新的操作视图。\r\n","A convenience class to aid in implementing an AppWidget provider.":"方便课程，以帮助实施AppWidget提供商。\r\n"," key: the color used as a hint for the Decline or Hang Up action button of a\n            ":" 钥匙：用作衰落或挂断动作按钮的颜色\r\n            \r\n","Constructs and returns a PropertyValuesHolder with a given property and\n            set of Object values for use with ObjectAnimator multi-value setters.":"用给定财产构建和返回财产价值持有人\r\n            与ObjectAnimator多值设置器一起使用的对象值集。\r\n","\n          THIS VALUE WILL CHANGE OVER TIME. It is NOT stable.\n          It may potentially change during any future GC.\n          DO NOT use this value as a key in a dictionary.\n          The ":"\r\n          此值会随着时间而变化。它不稳定。\r\n          它可能会在任何将来的GC期间发生变化。\r\n          请勿将此值用作字典中的键。\r\n          这\r\n","#KEY_BOOLEAN_RESULT":"#KEY_BOOLEAN_RESULT\r\n","Retrieve the current system wallpaper; if there is no wallpaper set,\n            a null pointer is returned.":"检索当前的系统壁纸；如果没有壁纸设置，\r\n            返回了无效指针。\r\n","Specifies the horizontal padding on either end for an embedded progress bar.":"为嵌入式进度条指定两端的水平填充。\r\n"," to this instance of the ":" 对于这个实例\r\n","android.app.admin.DeviceAdminReceiver.getWho(android.content.Context)":"android.app.admin.deviceadminreceiver.getwho（android.content.context）\r\n","Gets if the fingerprint sensor's gesture detection is available.":"如果可以使用指纹传感器的手势检测，请获取。\r\n","Schedule a job to be executed.":"安排要执行的工作。\r\n","Theme for windows that want to have the user's selected\n         wallpaper appear behind them (for API level 10 and lower).":"想要选择用户选择的窗口的主题\r\n         壁纸出现在它们后面（适用于10级和较低的API）。\r\n","Add a new Intent with the resolved chain of parents for the target activity to\n            the task stack.":"用解决方案的父母链为目标活动添加新意图\r\n            任务堆栈。\r\n","Returns the string representation of a feedback type.":"返回反馈类型的字符串表示。\r\n","Called after the administrator is first enabled, as a result of\n receiving ":"首先启用管理员后调用\r\n 接收\r\n","\n            when running on Android prior to API 19.":"\r\n            在API 19之前在Android上运行时。\r\n","Called by device owner to reboot the device.":"由设备所有者调用以重新启动设备。\r\n","android.app.admin.DeviceAdminService":"android.app.admin.deviceadminservice\r\n","android.app.Fragment.onSaveInstanceState(android.os.Bundle)":"android.app.fragment.onsaveinstancestate（android.os.bundle）\r\n","Get the bond state of the remote device.":"获取远程设备的粘结状态。\r\n","Sets the secondary progress for the progress bar in the title.":"为标题中的进度栏​​设定次要进度。\r\n"," key: whether ":" 钥匙：是否\r\n","Job services must be protected with this permission:\n            \n            <pre class=\"prettyprint\">\n                &#60;service android:name=\"MyJobService\"\n                         android:permission=\"android.":"必须通过此许可来保护工作服务：\r\n            \r\n            <pre class =“ prettyprint”>\r\n                ＆＃60;服务Android：name =“ myjobservice”\r\n                         Android：许可=“ Android。\r\n","The feedback types this serivce provides as specified in\n             ":"该协调提供的反馈类型如\r\n             \r\n","android.app.admin.DevicePolicyManager.POLICY_DISABLE_SCREEN_CAPTURE":"android.app.admin.devicepolicymanager.policy_disable_screen_capture\r\n"," and\n            assign a dynamic PSM value.":" 和\r\n            分配动态PSM值。\r\n","android.app.slice.SliceManager.revokeSlicePermission(java.lang.String, android.net.Uri)":"android.app.slice.slicemanager.revokeslicepermission（java.lang.string，android.net.uri）\r\n","Return the current running mode type.":"返回当前的运行模式类型。\r\n","android.app.job.JobParameters.STOP_REASON_APP_STANDBY":"android.app.job.jobparameters.stop_reason_app_standby\r\n","This API can be called by the following to install a certificate chain and corresponding\n            private key for the leaf certificate:\n            <ul>\n               <li>Device owner</li>\n               <li>Profile owner</li>\n               <li>Delegated certificate installer</li>\n               <li>Credential management app</li>\n            </ul>\n            All apps within the profile will be able to access the certificate chain and use the private\n            key, given direct user approval.":"以下可以调用此API以安装证书链和相应\r\n            叶子证书的私钥：\r\n            <ul>\r\n               <li>设备所有者</li>\r\n               <li>个人资料所有者</li>\r\n               <li>委派证书安装程序</li>\r\n               <li>凭证管理应用程序</li>\r\n            </ul>\r\n            配置文件中的所有应用程序都将能够访问证书链并使用私有\r\n            钥匙，得到直接用户批准。\r\n","Restricts to ONLY indeterminate mode (state-keeping progress mode will not work).":"仅限于不确定模式（状态保存进度模式将不起作用）。\r\n","android.bluetooth.BluetoothDevice.EXTRA_UUID":"android.bluetooth.bluetoothdevice.extra_uuid\r\n","If set to true, this service with be automatically stopped\n             when the user remove a task rooted in an activity owned by\n             the application.":"如果设置为true，则将自动停止此服务\r\n             当用户删除植根于由\r\n             应用程序。\r\n","android.animation.PropertyValuesHolder.getPropertyName()":"android.animation.propertyvaluesholder.getPropertyname（）\r\n","\n            with a null options argument.":"\r\n            带有零选项参数。\r\n","android.app.appsearch.AppSearchResult.getResultValue()":"android.app.app.appsearch.appsearchresult.getResultValue（）\r\n","The UID of caller app.":"呼叫者应用程序的UID。\r\n","#setRequiredPasswordComplexity(int)":"#SetRequiredPasswordcomplexity（int）\r\n","State identifier indicating a TextView has a multi-line layout.":"指示文本视图的状态标识符具有多行布局。\r\n","android.app.DatePickerDialog.updateDate(int, int, int)":"android.app.datepickerdialog.updatedate（int，int，int）\r\n","#startActivityForResult(Intent, int, Bundle)":"#startactivityForresult（Intent，int，捆绑包）\r\n","android.bluetooth.BluetoothAdapter.isOffloadedScanBatchingSupported()":"android.bluetooth.bluetoothadapter.isoffloadedscanbatchingsupported（）\r\n","android.bluetooth.BluetoothGatt.writeDescriptor(android.bluetooth.BluetoothGattDescriptor)":"android.bluetooth.bluetoothgatt.writedescriptor（android.bluetooth.bluetoothgattdescriptor）\r\n","android.app.backup.FullBackupDataOutput.getQuota()":"android.app.backup.fullbackupdataoutput.getquota（）\r\n","android.animation.Animator.isPaused()":"android.animation.animator.ispaused（）\r\n","#SECURITY_PATCH_STATE_UNKNOWN":"#security_patch_state_unknown\r\n","android.app.Activity.onPictureInPictureRequested()":"android.app.activity.onpictureInpicturreeQuested（）\r\n","Bundle":"捆\r\n","android.app.RemoteInput.getLabel()":"android.app.remoteinput.getLabel（）\r\n","android.app.AppOpsManager.noteOpNoThrow(java.lang.String, int, java.lang.String)":"android.app.appopsmanager.noteopnothrow（java.lang.string，int，java.lang.string）\r\n","android.app.AutomaticZenRule.setName(java.lang.String)":"android.app.automationzenrule.setname（java.lang.string）\r\n","#getId() id":"#getID（）ID\r\n","Allows an application to write SMS messages.":"允许应用程序编写SMS消息。\r\n","Stop watching for changes to the active state of an app-op.":"停止观察更改应用程序的活动状态。\r\n","Called when a device is entering lock task mode.":"设备输入锁定任务模式时调用。\r\n","Style for button bars \n         ":"按钮栏的样式\r\n         \r\n","android.app.SearchManager.SUGGEST_COLUMN_VIDEO_HEIGHT":"android.app.searchmanager.suggest_column_video_height\r\n","Color to use for the label in a key.":"在钥匙中用于标签的颜色。\r\n","Notification.Builder":"通知\r\n","android.animation.FloatArrayEvaluator.evaluate(float, float[], float[])":"android.animation.floatarrayevaluator.evaluate（float，float []，float []）\r\n","android.app.Activity.getContentTransitionManager()":"android.app.activity.getContentTransitionManager（）\r\n","This flag requests that the system gets into touch exploration mode.\n In this mode a single finger moving on the screen behaves as a mouse\n pointer hovering over the user interface. ":"此标志要求系统进入触摸探索模式。\r\n 在这种模式下，单个手指在屏幕上移动的行为作为鼠标\r\n 指针悬停在用户界面上。\r\n","#MODE_IGNORED":"#mode_ignored\r\n","#INSTALLKEY_REQUEST_CREDENTIALS_ACCESS":"#installkey_request_credentials_access\r\n","android.app.LoaderManager.initLoader(int, android.os.Bundle, android.app.LoaderCallbacks)":"android.app.loadermanager.initloader（int，android.os.bundle，android.app.loadercallbacks）\r\n","Default background for the menu header.":"菜单标题的默认背景。\r\n","The rating to set by default.":"默认设置的评级。\r\n","android.app.WallpaperManager.clear(int)":"android.app.wallpapermanager.clear（int）\r\n","\n with ":"\r\n 和\r\n","android.app.appsearch.StorageInfo.getAliveDocumentsCount()":"android.app.appsearch.storageinfo.getAlivedOcumentsCount（）\r\n","Builder#setSettingsText(CharSequence)":"构建器＃setSetTingStext（charsequence）\r\n","Perform an incremental update or command on the widget(s) specified by appWidgetIds.":"在AppWidgetIDS指定的小部件上执行增量更新或命令。\r\n","FragmentTransaction":"片段转移\r\n","android.app.WallpaperManager.getWallpaperColors(int)":"android.app.wallpapermanager.getWallPaperColors（int）\r\n","If set, specifies that this TextView has a phone number input\n             method.":"如果设置，请指定此文本视图已有电话号码输入\r\n             方法。\r\n","android.app.ActivityOptions.getLockTaskMode()":"android.app.activityOptions.getLockTaskMode（）\r\n","This flag requests that when ":"此标志要求当\r\n","Name of the activity to be launched to manage application's space on\n         device.":"要启动的活动的名称，以管理应用程序的空间\r\n         设备。\r\n","android.bluetooth.BluetoothDevice.fetchUuidsWithSdp()":"android.bluetooth.bluetoothdevice.fetchuuidswithsdp（）\r\n","android.app.NotificationChannel.setName(java.lang.CharSequence)":"android.app.notificationChannel.setname（Java.lang.CharSequence）\r\n","Sets whether this dialog is cancelable with the\n            ":"设置此对话框是否可以通过\r\n            \r\n","DevicePolicyManager#setPasswordQuality":"DevicePolicyManager＃SetPasswordQuality\r\n","A flag indicating the animation that runs on those items that are disappearing\n from the container.":"指示动画在那些消失的项目上运行的旗帜\r\n 从容器中。\r\n","\n      Managed peer is eligeable for activation.\n    ":"\r\n      托管对等是可以激活的。\r\n    \r\n","\n          Whether or not the application should remain running at all times.\n        ":"\r\n          该应用程序是否应始终保持运行。\r\n        \r\n","android.app.admin.DevicePolicyManager.setScreenCaptureDisabled(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setscreencapturedisabled（android.content.componentname，boolean）\r\n","Whether the Preference is selectable.":"首选项是否可选。\r\n","android.app.admin.DevicePolicyManager.retrieveSecurityLogs(android.content.ComponentName)":"android.app.admin.devicepolicymanager.retrievesecuritylogs（android.content.componentname）\r\n","android.app.TaskStackBuilder.create(android.content.Context)":"android.app.taskstackbuilder.create（android.content.context）\r\n","android.app.Activity.onSearchRequested(android.view.SearchEvent)":"android.app.activity.OnearchRequested（android.view.searchevent）\r\n","#addCrossProfileIntentFilter":"#AddCrossProfileIntentFilter\r\n","android.accessibilityservice.AccessibilityService.disableSelf()":"android.accosconibilityservice.Accessibilityservice.disableself（）\r\n","Defines the layout mode of this ViewGroup.":"定义此ViewGroup的布局模式。\r\n","Gets the optional intent action for use with these suggestions.":"采取可选的意图动作，以与这些建议一起使用。\r\n","android.app.AppComponentFactory":"Android.App.AppComponentFactory\r\n","android.app.appsearch.GenericDocument.getPropertyString(java.lang.String)":"android.app.appsearch.genericdocument.getPropertystring（java.lang.string）\r\n","Milliseconds since epoch when the op was noted":"自从时代开始时，毫秒以来\r\n","android.animation.PropertyValuesHolder.ofInt(android.util.Property, int[])":"android.animation.propertyvaluesholder.ofint（android.util.property，int []）\r\n","\n            intents to request the current scan mode.":"\r\n            意图要求当前的扫描模式。\r\n"," and the\n            app the app-op is noted for has a ":" 和\r\n            App app-op已注明了一个\r\n","android.app.SearchManager.SUGGEST_COLUMN_CONTENT_TYPE":"android.app.searchmanager.suggest_column_content_type\r\n","android.animation.Animator.setupStartValues()":"android.animation.animator.setupstartvalues（）\r\n","If your service is started (running through ":"如果您的服务开始（通过\r\n","Get additional metadata carried around with this remote input.":"获取此遥远输入带来的其他元数据。\r\n","Old version of ":"旧版本的\r\n","android.app.Fragment.onOptionsMenuClosed(android.view.Menu)":"android.app.fragment.onoptionsmenuclosed（android.view.menu）\r\n","Gets the root node in the currently active window if this service\n            can retrieve window content.":"如果此服务，请在当前活动窗口中获取根节点\r\n            可以检索窗口内容。\r\n","android.app.WallpaperManager.ACTION_CHANGE_LIVE_WALLPAPER":"android.app.wallpapermanager.action_change_live_wallpaper\r\n","View ID of a ":"查看一个\r\n","android.app.TaskInfo.origActivity":"android.app.taskinfo.origactivity\r\n","Authenticator handles its own token caching and permission screen":"身份验证者处理自己的令牌缓存和权限屏幕\r\n"," to be sent when the notification is clicked.":" 单击通知时要发送。\r\n","android.bluetooth.BluetoothAdapter.getRemoteDevice(java.lang.String)":"android.bluetooth.bluetoothadapter.getremotedevice（java.lang.string）\r\n","Migrator":"迁移者\r\n","android.bluetooth.BluetoothA2dp.isA2dpPlaying(android.bluetooth.BluetoothDevice)":"android.bluetooth.bluetootha2dp.isa2dpplaying（android.bluetooth.bluetoothdevice）\r\n"," key: this is the title of the notification when shown in expanded form,\n            e.":" 关键：这是以扩展形式显示的通知标题，\r\n            e。\r\n","#sendWallpaperCommand":"#SendWallPaperCommand\r\n","android.app.blob.BlobStoreManager.acquireLease(android.app.blob.BlobHandle, java.lang.CharSequence, long)":"android.app.blob.blobstoremanager.acquirelease（android.app.blob.blobhandle，java.lang.CharSequence，long）\r\n","Sets the target object whose property will be animated by this animation.":"设置该动画将使属性动画的目标对象。\r\n","Listener provided in\n            ":"提供的听众\r\n            \r\n","android.accounts.AbstractAccountAuthenticator.updateCredentials(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String, android.os.Bundle)":"android.accounts.abstractaccountauthenticator.updatecredentials（android.accounts.accountauthenticatorestorestorsonsess，android.accounts.accounts.accounts.accounts.account，java.lang.lang.string，android.os.bundle）\r\n","This is called for activities that set launchMode to \"singleTop\" in\n            their package, or if a client used the ":"这被称为将启动模式设置为“ singletop”的活动\r\n            他们的包裹，或者客户使用\r\n","Set the ActionBar's stacked background.":"设置动作栏的堆叠背景。\r\n","android.app.UiAutomation.ROTATION_FREEZE_270":"android.app.uiautomation.rotation_freeze_270\r\n","Sets the locally modifiable name (alias) of the remote Bluetooth device.":"设置远程蓝牙设备的本地修改名称（别名）。\r\n","Adds a listener to the set of listeners that are sent update events through the life of\n            an animation.":"将听众添加到通过一生中发送更新事件的一组听众\r\n            动画。\r\n","Return the Activity object associated with a string ID.":"返回与字符串ID关联的活动对象。\r\n","android.app.Service.onCreate()":"android.app.service.oncreate（）\r\n","\n            when the user clicks a suggestion.":"\r\n            当用户单击建议时。\r\n","Specify a URI scheme that is handled, as per\n             ":"指定处理的URI方案，根据\r\n             \r\n","android.app.Fragment.isStateSaved()":"android.app.fragment.isstatesaved（）\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_PROXY_PORT":"android.app.admin.devicepolicymanager.extra_provisioning_wifi_proxy_port\r\n"," object for the given Bluetooth hardware\n            address.":" 给定蓝牙硬件的对象\r\n            地址。\r\n","android.app.appsearch.AppSearchResult":"Android.app.AppSearch.AppSearchResult\r\n","android.app.admin.DeviceAdminReceiver.ACTION_DEVICE_ADMIN_DISABLED":"android.app.admin.deviceadminreceiver.action_device_admin_disabled\r\n","android.animation.LayoutTransition.hideChild(android.view.ViewGroup, android.view.View)":"android.animation.layouttransition.hidechild（android.view.viewgroup，android.view.view）\r\n"," - in this case, this field here will\n            be the kernel user identifier of the external service provider.":"  - 在这种情况下，此字段将在这里\r\n            成为外部服务提供商的内核用户标识符。\r\n","android.accessibilityservice.AccessibilityServiceInfo.CAPABILITY_CAN_TAKE_SCREENSHOT":"Android.AccessibilityService.AccessibilityserviceInfo.capibality_can_take_screenshot\r\n","android.app.LoaderManager.getLoader(int)":"android.app.loadermanager.getloader（int）\r\n","PendingIntent#FLAG_NO_CREATE PendingIntent.FLAG_NO_CREATE":"pENDENTINTENT＃flag_no_create pendingIntent.flag_no_create\r\n","Used for permissions that provide direct access to speaker settings\n         the device.":"用于可直接访问扬声器设置的权限\r\n         设备。\r\n","Called by a profile owner of an organization-owned managed profile to set maximum time\n            the profile is allowed to be turned off.":"由组织拥有的托管资料的个人资料所有者拨打，以设置最大时间\r\n            允许关闭配置文件。\r\n","android.accessibilityservice.AccessibilityService.GESTURE_2_FINGER_DOUBLE_TAP_AND_HOLD":"Android.AccessibilityService.Accessibilityservice.gesture_2_finger_doubl_double_tap_and_hold\r\n","Specifies whether the widget is enabled.":"指定是否启用了小部件。\r\n","Background drawable to use for action mode UI \n         ":"可用于动作模式UI的背景\r\n         \r\n","Default highlight color for items that are\n             focused.":"默认项目的颜色为\r\n             集中。\r\n","#ACTION_CONNECTION_STATE_CHANGED":"#action_connection_state_changed\r\n","This value used used with the ":"此值与\r\n","android.bluetooth.BluetoothGattCharacteristic.getStringValue(int)":"android.bluetooth.bluetoothgattcharacteristic.getStringValue（int）\r\n","android.content.ComponentCallbacks2.TRIM_MEMORY_BACKGROUND":"android.content.componentCallbacks2.trim_memory_background\r\n","Flag to control special persistent mode of an application.":"标志以控制应用程序的特殊持久模式。\r\n","android.app.Notification.PRIORITY_HIGH":"android.app.notification.priority_high\r\n","android.app.UiAutomation.waitForIdle(long, long)":"android.app.uiautomation.Waitforidle（长，长）\r\n","Icon":"图标\r\n","android.app.job.JobParameters.getTransientExtras()":"android.app.job.jobparameters.getTransientExtras（）\r\n","Returns whether enabling or disabling USB data signaling is supported on the device.":"返回设备上是否支持启用或禁用USB数据信号。\r\n","Set a new ":"设置一个新\r\n","android.animation.BidirectionalTypeConverter":"android.animation.bidirectionalTypeconverter\r\n","Gets the current user-specified default notification policy. -or- Sets the current notification policy.":"获取当前的用户指定的默认通知策略。 - 或制定当前的通知策略。\r\n","android.app.Notification.MessagingStyle":"android.app.notification.messagingstyle\r\n","android.app.Notification.CATEGORY_EMAIL":"android.app.notification.category_email\r\n","android.animation.LayoutTransition.showChild(android.view.ViewGroup, android.view.View, int)":"android.animation.layouttransition.showchild（android.view.viewgroup，android.view.view，int）\r\n","Constructs a Notification object with default values.":"构造具有默认值的通知对象。\r\n","Creates and shows a ProgressDialog.":"创建并显示一个进度。\r\n","Set an icon as supplied by a theme attribute. e.g. android.":"设置由主题属性提供的图标。例如安卓。\r\n","android.app.WallpaperInfo.loadAuthor(android.content.pm.PackageManager)":"android.app.wallpaperinfo.loadauthor（android.content.pm.packagemanager）\r\n","Bit flag for ":"位标志\r\n","android.app.slice.SliceSpec.getRevision()":"android.app.slice.SliceSpec.getRevision（）\r\n","android.app.ActionBar.setDisplayShowTitleEnabled(boolean)":"android.app.actionbar.setdisplayshowtitleenabled（布尔值）\r\n","BluetoothGatt#readCharacteristic":"蓝牙加特＃读取特征\r\n","android.app.WallpaperColors.HINT_SUPPORTS_DARK_THEME":"android.app.wallpapercolors.hint_supports_dark_theme\r\n","Default theme for holo style input methods, which is used by the\n         ":"Holo样式输入方法的默认主题，该方法由\r\n         \r\n","Validate a String Bluetooth address, such as \"00:43:A8:23:10:F0\"":"验证字符串蓝牙地址，例如“ 00：43：a8：23：10：f0”\r\n","Activity action to launch from your ":"从您的活动启动的活动行动\r\n","Broadcast action: notify that a new batch of security logs is ready to be collected.":"广播动作：通知准备收集新的安全日志。\r\n","android.app.Activity.dispatchKeyShortcutEvent(android.view.KeyEvent)":"android.app.activity.dispatchKeyShortCuteVent（android.view.keyevent）\r\n","Object":"目的\r\n","android.app.admin.DevicePolicyManager.setPersonalAppsSuspended(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setpersonalappssuspended（android.content.componentname，boolean）\r\n","Return true if the fragment is currently added to its activity.":"如果当前将片段添加到其活动中，则返回true。\r\n","Abstract base class for creating AccountAuthenticators.":"用于创建AccountAuthenticators的抽象基类。\r\n","android.app.DatePickerDialog.setOnDateSetListener(android.app.OnDateSetListener)":"android.app.datepickerdialog.setondatesetlistener（android.app.ondatesetListener）\r\n",": the given caller is\n            not allowed to perform the given operation, and this attempt should\n            <em>silently fail</em> (it should not cause the app to crash).":"：给定的来电者是\r\n            不允许执行给定的操作，此尝试应\r\n            <em>默默失败</em>（不应导致应用程序崩溃）。\r\n","\n            and related methods.":"\r\n            和相关方法。\r\n","android.bluetooth.BluetoothDevice.connectGatt(android.content.Context, boolean, android.bluetooth.BluetoothGattCallback, int, int)":"android.bluetooth.bluetoothdevice.connectgatt（android.content.context，boolean，android.bluetooth.bluetooth.bluetoothgattcallback，int，int）\r\n","\n      Returns the value of ":"\r\n      返回的价值\r\n","android.app.usage.NetworkStatsManager.queryDetails(int, java.lang.String, long, long)":"android.app.usage.networkstatsmanager.querydetails（int，java.lang.string，长，长）\r\n","android.app.AlertDialog.THEME_HOLO_DARK":"android.app.Alertdialog.theme_holo_dark\r\n"," operation failed because it\n            was not safe to be executed at that moment.":" 操作失败了，因为它\r\n            当时不安全。\r\n","Determines which side the vertical scroll bar should be placed on.":"确定应放置垂直滚动条的哪一侧。\r\n","Portions of this page are modifications based on work created and shared by the ":"此页面的部分是基于由该工作创建和共享的工作的修改\r\n","Defines the default horizontal spacing between columns.":"定义列之间的默认水平间距。\r\n","Defines whether this view reacts to long click events.":"定义此视图是否对长点击事件做出反应。\r\n","if the next record header has not yet been read\n":"如果尚未阅读下一个记录标题\r\n\r\n","Other Styles \n":"其他样式\r\n\r\n","Set the dynamically overloaded color resources.":"设置动态过载的颜色资源。\r\n","KeyEvent#KEYCODE_BACK BACK":"keyevent＃keycode_back返回\r\n"," to listen to fragment lifecycle events\n            happening in this FragmentManager.":" 听片段生命周期事件\r\n            发生在这个FragmentManager中。\r\n","Allows an application to broadcast a WAP PUSH receipt notification \n":"允许应用程序广播WAP推送收据通知\r\n\r\n","Stores information about a particular Task.":"存储有关特定任务的信息。\r\n","android.app.backup.RestoreObserver.restoreStarting(int)":"android.app.backup.restoreobserver.restorestarting（int）\r\n","Indicates that the no bubbles are allowed from the app.":"表示从应用程序允许使用无气泡。\r\n","#setKeyguardDisabledFeatures(ComponentName, int)":"#SetKeyGuardDisabledFeatures（ComponentName，int）\r\n","Posts a notification as a specified package to be shown in the status bar.":"将通知作为指定软件包，将在状态栏中显示。\r\n","android.app.WallpaperManager.ACTION_LIVE_WALLPAPER_CHOOSER":"android.app.wallpapermanager.action_live_wallpaper_chooser\r\n"," to persist all schema and document updates,\n            additions, and deletes to disk.":" 为了坚持所有模式和文档更新，\r\n            添加和删​​除磁盘。\r\n","#noteProxyOp(String, String, int, String, String)":"#noteproxyop（字符串，字符串，int，String，String）\r\n","Set the component for a given appWidgetId.":"设置给定的AppWidgetID的组件。\r\n","android.app.LocalActivityManager.dispatchDestroy(boolean)":"android.app.localactivitymanager.dispatchdestroy（布尔值）\r\n"," if authentication request came from a proxy, ":" 如果身份验证请求来自代理，\r\n","VoiceInteractor":"Voice Interactor\r\n","Retrieve a previously set custom view for this tab.":"检索此选项卡的先前设置的自定义视图。\r\n","Return the short bread crumb title resource identifier for the entry,\n or 0 if it does not have one.":"返回条目的短面包面包屑标题标识符，\r\n 或0如果没有一个。\r\n","The user has performed an down and right gesture on the touch screen.":"用户在触摸屏上执行了一个下调和正确的手势。\r\n","PendingIntent#getBroadcast\n            IntentSender.getBroadcast()":"pendingIntent＃getBroadcast\r\n            intentsender.getBroadcast（）\r\n","Return the size of all cached data in the primary external/shared storage.":"返回主要外部/共享存储中所有缓存数据的大小。\r\n","Create an instance of AnrInfo initialized from a Parcel.":"创建一个从包裹初始化的Anrinfo实例。\r\n","Called whenever the contents of the back stack change.":"每当背堆的内容更改时，请调用。\r\n","Continually monitoring location data with a relatively high power request.":"不断使用相对较高的功率请求监视位置数据。\r\n","Required to write/modify/update system settings.":"需要编写/修改/更新系统设置。\r\n","Metadata for the notification.":"通知的元数据。\r\n","BackupAgent#onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)\n            onBackup()":"备份＃onbackup（parcelfiledScriptor，backupdataoutput，parcelfiledscriptor）\r\n            onbackup（）\r\n","android.app.Dialog.onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenuInfo)":"android.app.dialog.oncreatecontextmenu（android.view.contextmenu，android.view.view，android.view.contextmenuinfo）\r\n","\n            If the website requires authentication, this property will contain data about each scheme supported\n            by the server after the response. Note that unauthorized request will return a valid response - you\n            need to check the status code and and (re)configure AndroidClientHandler instance accordingly by providing\n            both the credentials and the authentication scheme by setting the ":"\r\n            如果网站需要身份验证，则此属性将包含有关每个支持的每个方案的数据\r\n            响应后服务器。请注意，未经授权的请求将返回有效的响应 - 您\r\n            需要检查状态代码和（重新）通过提供AndroidClientHandler实例\r\n            通过设置凭证和身份验证方案\r\n","Service#onBind(Intent)":"服务＃onbind（意图）\r\n","Application":"应用\r\n","android.app.admin.SecurityLog.TAG_CERT_VALIDATION_FAILURE":"android.app.admin.securitylog.tag_cert_validation_failure\r\n","android.app.Instrumentation.isProfiling()":"android.app.instrumentation.isprofiling（）\r\n","Returns whether logout is enabled by a device owner.":"返回设备所有者是否启用注销。\r\n"," with no action bar and no status bar and\n    extending in to overscan region.":" 没有动作栏，没有状态栏，\r\n    延伸到扫描区域。\r\n","If provided, this is the trigger indicating that the searchable activity\n            provides suggestions as well.":"如果提供，这是指示可搜索活动的触发因素\r\n            也提供建议。\r\n","True":"真的\r\n","android.app.NotificationManager":"Android.App.NotificationManager\r\n","android.app.admin.SecurityLog.TAG_CERT_AUTHORITY_REMOVED":"android.app.admin.securitylog.tag_cert_authority_remaved\r\n","android.app.people.ConversationStatus.ACTIVITY_VIDEO":"android.app.people.conversationstatus.activity_video\r\n","android.accessibilityservice.AccessibilityService.GESTURE_4_FINGER_SWIPE_LEFT":"Android.AccessibilityService.Accessibilityservice.gesture_4_finger_swipe_left\r\n","How often, in milliseconds, that this AppWidget wants to be updated.":"以毫秒为单位，该AppWidget想要更新一次。\r\n","#MODE_ERRORED":"#mode_errored\r\n","\n          The intent filter actions.\n        ":"\r\n          意图过滤操作。\r\n        \r\n","android.system.OsConstants#SIGKILL":"android.system.sosconstants＃sigkill\r\n","Show this notification on all lockscreens, but conceal sensitive or private information on secure lockscreens.":"在所有锁屏上显示此通知，但在安全锁屏上隐藏敏感或私人信息。\r\n","android.app.usage.UsageStats.getLastTimeForegroundServiceUsed()":"android.app.usage.usagestats.getlasttimeforegrodgnersviceused（）\r\n","Returns class name for this activity with the package prefix removed.":"返回此活动的班级名称，其中包装前缀已删除。\r\n","android.app.usage.StorageStats":"android.app.usage.storagestats\r\n","android.app.AsyncNotedAppOp.getAttributionTag()":"android.app.asyncnotedappop.getAttributionTag（）\r\n","android.animation.TimeAnimator":"android.animation.timeanimator\r\n","This is called whenever the current window attributes change.":"每当当前窗口属性更改时，这都是称为的。\r\n","Specifies the fixed width for each column.":"指定每列的固定宽度。\r\n","#schedule":"＃日程\r\n","Constant to indicate the feature of disabling the camera.":"不断指示禁用相机的功能。\r\n","android.app.Activity.onPanelClosed(int, android.view.Menu)":"android.app.activity.Onpanelclosed（int，android.view.menu）\r\n","Perform instantiation of the process's ":"执行该过程的实例化\r\n","PendingIntent":"悬念\r\n","Checks if the searchable activity wants the voice search button to be shown.":"检查可搜索活动是否希望显示语音搜索按钮。\r\n","This is the amount by which to multiply the tension.":"这是增加张力的数量。\r\n","Intent extra included with ":"额外包含的意图\r\n","android.app.SearchManager.SUGGEST_COLUMN_PRODUCTION_YEAR":"android.app.searchmanager.suggest_column_production_year\r\n","DeviceAdminReceiver":"deviceadminreceiver\r\n","Minimum height that the AppWidget can be resized to.":"AppWidget可以调整最小高度。\r\n",", for your application's most important items that require the\n            user's prompt attention or input.":"，对于您应用程序的最重要项目\r\n            用户的及时注意或输入。\r\n"," which is\n            currently held by the caller.":" 那是\r\n            目前由呼叫者持有。\r\n","Variation of textEditPasteWindowLayout displayed when the clipboard is empty.":"剪贴板为空时显示的TextedItpasteWIndowLayout的变化。\r\n","Optional meta-that can be in the manifest for this component, specifying\n            the name of the main entry point for this native activity in the\n            ":"可选的元 - 可以在此组件的清单中，指定\r\n            此本机活动的主要入口点的名称\r\n            \r\n","Return true if this administrator can be a target in an ownership transfer.":"如果该管理员可以成为所有权转让的目标，则返回true。\r\n","android.accounts.AccountManager.removeAccount(android.accounts.Account, android.accounts.AccountManagerCallback, android.os.Handler)":"android.accounts.accountmanager.removeaccount（android.accounts.accounts.account，android.accounts.accountmanagercallback，android.os.handler）\r\n","An intent to launch instead of posting the notification to the status bar.":"意图启动而不是将通知发布到状态栏。\r\n","Drawable to use for check marks.":"可用于检查标记。\r\n","This flag requests from the system to filter key events. ":"此标志从系统请求以过滤密钥事件。\r\n","android.app.Fragment.onInflate(android.util.AttributeSet, android.os.Bundle)":"android.app.fragment.oninflate（android.util.attributeset，android.os.bundle）\r\n","#jobFinished(JobParameters, boolean)":"#jobfined（Jobparameters，boolean）\r\n","The text shown to the user to indicate the version they have.":"向用户显示的文字表示其具有的版本。\r\n","android.accounts.AbstractAccountAuthenticator":"android.accounts.abstractaccontauthenticator\r\n","android.app.Activity.stopManagingCursor(android.database.Cursor)":"android.app.activity.stopmanagingcursor（android.database.cursor）\r\n","android.app.appsearch.SetSchemaResponse.getMigrationFailures()":"android.app.appsearch.setschemaresponse.getMigrationFailures（）\r\n","Allows the device owner or profile owner to enable or disable the backup service.":"允许设备所有者或配置文件所有者启用或禁用备份服务。\r\n","android.app.NotificationChannel.canBubble()":"android.app.notificationChannel.Canbubble（）\r\n","android.accessibilityservice.AccessibilityService.GESTURE_3_FINGER_TRIPLE_TAP":"Android.AccessibilityService.Accessibilityservice.gesture_3_finger_triple_tap\r\n","Default appearance of panel text.":"面板文本的默认外观。\r\n","android.app.Activity.setResult(int, android.content.Intent)":"android.app.activity.setResult（int，android.content.intent）\r\n","Inserts an optional parent entry at the first position in the breadcrumbs.":"在面包屑中的第一个位置插入可选的父级入口。\r\n","android.app.Activity.setFeatureDrawableAlpha(int, int)":"android.app.activity.setFeaturedRawableAlpha（int，int）\r\n","The order within the category applied to all items within this group.":"类别中的顺序应用于该组中的所有项目。\r\n","Standard orientation constant.":"标准方向常数。\r\n","true":"真的\r\n","F:Android.App.Backup.BackupAgent.OnRestoreFile":"F：android.app.backup.backupent.onrestorefile\r\n","android.app.AppOpsManager.OPSTR_USE_SIP":"android.app.appopsmanager.opptr_use_sip\r\n","android.app.admin.DevicePolicyManager.setKeyguardDisabled(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setKeyGuardDisabled（android.content.componentname，boolean）\r\n","For use only by the current home application, to specify the size of\n            wallpaper it would like to use.":"仅供当前家庭应用程序使用，以指定\r\n            它想要使用的墙纸。\r\n","Rule instance information for zen mode.":"ZEN模式的规则实例信息。\r\n","Sets the duration of the animation.":"设置动画的持续时间。\r\n","android.app.Fragment.getLoaderManager()":"android.app.fragment.getLoaderManager（）\r\n","android.app.appsearch.AppSearchManager.createGlobalSearchSession(java.util.concurrent.Executor, java.util.function.Consumer)":"android.app.appsearch.appsearchmanager.createglobalsearchsessionsessess（java.util.concurrent.executor，java.util.function.consumer）\r\n","android.bluetooth.BluetoothGatt.GATT_INSUFFICIENT_AUTHENTICATION":"android.bluetooth.bluetoothgatt.gatt_insuffication_authentication\r\n","AccountManager#KEY_ACCOUNT_NAME":"AccountManager＃key_account_name\r\n","Default style for ":"默认样式\r\n","android.app.slice.Slice.isCallerNeeded()":"android.app.slice.slice.iscallerneeded（）\r\n","Dumps the current state of the loaders.":"倾倒装载机的当前状态。\r\n","android.animation.ValueAnimator.setObjectValues(java.lang.Object)":"android.animation.valueAnimator.SetObjectValues（java.lang.object）\r\n","This method is called by ViewGroup when a child view is about to be removed from the\n            container.":"当要从\r\n            容器。\r\n","android.accessibilityservice.AccessibilityService.setTouchExplorationPassthroughRegion(int, android.graphics.Region)":"android.accosconibilityservice.Accessibilityservice.setTouchExplorationPassThroughRegion（int，android.graphics.gregion）\r\n","Queries whether the currently enabled voice interaction service supports returning\n            a voice interactor for use by the activity.":"查询当前启用的语音交互服务是否支持返回\r\n            活动的语音交互器供活动使用。\r\n","\n          Constructs and initializes a new\n          ":"\r\n          构建并初始化一个新的\r\n          \r\n","Activity#onNewIntent":"活动＃onnewintent\r\n","TRUE":"真的\r\n"," for more information.\n            ":" 了解更多信息。\r\n            \r\n","android.accounts.AuthenticatorDescription.AuthenticatorDescription(java.lang.String, java.lang.String, int, int, int, int, boolean)":"android.accounts.authenticatordescription.authenticatordescription（java.lang.string，java.lang.string，int，int，int，int，int，int，int，boolean）\r\n","Delegation of certificate installation and management.":"证书安装和管理的委托。\r\n","android.app.slice.SliceMetrics.logTouch(int, android.net.Uri)":"android.app.slice.slicemetrics.logtouch（int，android.net.uri）\r\n","Gets an AccountManager instance associated with a Context.":"获取与上下文关联的帐户管理程序实例。\r\n","android.app.SearchableInfo.queryAfterZeroResults()":"Android.App.SearchableInfo.QueryAfterzeroresults（）\r\n","android.accounts.AbstractAccountAuthenticator.getAccountRemovalAllowed(android.accounts.AccountAuthenticatorResponse, android.accounts.Account)":"android.accounts.abstractaccontauthenticator.getAccOuntreMovalAllowed（android.accounts.accountauthenticatorestresponse，android.accounts.accounts.account）\r\n","Returns whether this wallpaper service can support multiple engines to render on each surface\n            independently.":"返回此壁纸服务是否可以支持多个发动机在每个表面上渲染\r\n            独立。\r\n","Specifies extra space on the left side of this view.":"指定此视图左侧的额外空间。\r\n",",\n             this is the new way to specify the screens an application is\n             compatible with.":"，，，，\r\n             这是指定屏幕应用程序的新方法\r\n             与。\r\n"," at which we consider memory to be\n low and start killing background services and other non-extraneous\n processes.":" 我们认为记忆是\r\n 低，开始杀死背景服务和其他非超行\r\n 过程。\r\n","Called by device owner or profile owner of an organization-owned managed profile to install\n            a system update from the given file.":"由设备所有者或组织拥有的托管配置文件的所有者拨打来安装\r\n            从给定文件进行系统更新。\r\n","android.app.FragmentController.attachHost(android.app.Fragment)":"Android.App.FragmentController.attachhost（Android.App.Fragment）\r\n",": this process is running something\n that is considered to be actively perceptible to the user.":"：这个过程正在运行某些东西\r\n 这被认为是用户可以主动察觉的。\r\n","android.app.ActionBar.show()":"android.app.actionbar.show（）\r\n","android.bluetooth.BluetoothDevice.createL2capChannel(int)":"android.bluetooth.bluetoothdevice.Createl2CapChannel（INT）\r\n","Called when a tab exits the selected state.":"Called when a tab exits the selected state.\r\n","Returns the list of package name filters to search over.":"返回要搜索的软件包名称过滤器列表。\r\n","android.app.FragmentManager.POP_BACK_STACK_INCLUSIVE":"android.app.fragmentManager.pop_back_stack_inclusive\r\n","#dismiss()":"＃解雇（）\r\n","android.app.usage.UsageStatsManager.queryAndAggregateUsageStats(long, long)":"android.app.usage.usagestatsmanager.queryandaggregateusagestats（长，长）\r\n","if the package names of the two\n         ":"如果两个的包装名称\r\n         \r\n","State of the managed peer.":"托管同行的状态。\r\n","android.app.Instrumentation.callActivityOnPictureInPictureRequested(android.app.Activity)":"android.app.instrumentation.callactivityOnpictureInpictureRequested（android.app.Activity）\r\n"," within\n        an input method's input area.":" 内\r\n        输入方法的输入区域。\r\n","android.app.AppOpsManager.startProxyOp(java.lang.String, int, java.lang.String, java.lang.String, java.lang.String)":"android.app.appopsmanager.startproxyop（java.lang.string，int，java.lang.string，java.lang.string，java.lang.string）\r\n","android.app.FragmentController.dispatchPictureInPictureModeChanged(boolean)":"Android.App.FragmentController.disPatchPictureInPictureModechanged（boolean）\r\n","android.appwidget.AppWidgetHostView.updateAppWidget(android.widget.RemoteViews)":"android.appwidget.appwidgethostview.updateappwidget（android.widget.remoteviews）\r\n","Hint that this slice contains a number of actions that can be grouped together\n            in a sort of controls area of the UI.":"暗示此切片包含许多可以分组在一起的动作\r\n            在UI的某种控制区域中。\r\n","Specifies that the Private DNS setting is in an unknown state.":"指定私有DNS设置处于未知状态。\r\n","Default AbsListView style.":"默认的ABSLISTVIEW样式。\r\n","Set the title text for this dialog's window.":"设置此对话框窗口的标题文本。\r\n","Return one of the windows in the assist data.":"返回辅助数据中的一个窗口。\r\n"," key: an array of ":" 钥匙：一系列\r\n","Create and return a new ":"创建并返回新的\r\n"," and friends which returns session data\n            for installing an account later.":" 和返回会话数据的朋友\r\n            稍后安装帐户。\r\n","android.bluetooth.BluetoothDevice.PAIRING_VARIANT_PASSKEY_CONFIRMATION":"android.bluetooth.bluetoothdevice.pairing_variant_passkey_confircation\r\n","android.app.admin.DevicePolicyManager.clearProfileOwner(android.content.ComponentName)":"android.app.admin.devicepolicymanager.clearprofileowner（android.content.componentname）\r\n","android.app.DialogFragment.setShowsDialog(boolean)":"android.app.dialogfragment.setshowsdialog（boolean）\r\n","If true, centers this child horizontally within its parent.":"如果是真的，则将这个孩子水平居中在其父母内。\r\n","The pid of this process; 0 if none\n":"这个过程的基础； 0如果没有\r\n\r\n","android.app.ApplicationExitInfo.REASON_LOW_MEMORY":"android.app.applicationexitinfo.reason_low_memory\r\n","How this item should display in the Action Bar, if present.":"如果存在，该项目应如何在动作栏中显示。\r\n","android.app.usage.UsageStatsManager#queryEvents(long, long)":"android.app.usage.usagestatsmanager＃queryevents（长，长）\r\n","The positive button text for the dialog.":"对话框的正面按钮文本。\r\n","ConfigurationStats":"configurationStats\r\n"," nor the\n            ":" 也不是\r\n            \r\n","android.app.Activity.setDefaultKeyMode(int)":"android.app.activity.setDefaultKeymode（int）\r\n","Group of permissions that are related to the screenlock.":"与屏幕锁相关的一组权限。\r\n","State identifier indicating the popup will be above the anchor.":"表明弹出窗口的状态标识符将在锚点上方。\r\n","Query parameter added to suggestion queries to limit the number of suggestions returned.":"查询参数添加到建议查询中以限制返回的建议数量。\r\n","This parameter is only meaningful\n            if initialQuery is a non-empty string.":"此参数只是有意义的\r\n            如果初始标语是非空字符串。\r\n","android.app.FragmentHostCallback.onStartIntentSenderFromFragment(android.app.Fragment, android.content.IntentSender, int, android.content.Intent, int, int, int, android.os.Bundle)":"android.app.FragmentHostCallback.OnstartinterSenderFromFragment（android.App.Fragment，android.content.intentsender，int，android.content.intent.intent.intent，int，int，int，int，int，android.os.bundle）\r\n","android.accessibilityservice.AccessibilityGestureEvent.getGestureId()":"android.accosconibilityservice.Accessibility gestureevent.getgestureid（）\r\n","Broadcast action: notify that a new batch of network logs is ready to be collected.":"广播动作：通知准备收集一批新的网络日志。\r\n","RemoteViews":"远程视图\r\n","Smaller icon of the authenticator.":"身份验证者的较小图标。\r\n","Thrown by ":"被扔了\r\n","android.app.blob.BlobStoreManager.acquireLease(android.app.blob.BlobHandle, java.lang.CharSequence)":"android.app.blob.blobstoremanager.acquirelease（android.app.blob.blobhandle，java.lang.charequence）\r\n"," key: this is a bitmap to be used instead of the small icon when showing the\n            notification payload, as\n            supplied to ":" 键：显示时，这是一个要使用的位图，而不是小图标\r\n            通知有效载荷，为\r\n            提供给\r\n"," privilege), to query which apps have access\n            to a given KeyChain key.":" 特权），查询哪些应用程序可以访问\r\n            到给定的键链密钥。\r\n","Return true if the fragment is currently visible to the user.":"如果当前可见片段，则返回true。\r\n","android.app.job.JobInfo.Builder#setClipData(ClipData, int)":"android.app.job.jobinfo.builder＃setClipdata（clipdata，int）\r\n","Allows applications to change Wi-Fi connectivity state \n":"允许应用程序更改Wi-Fi连接状态\r\n\r\n","android.app.job.JobInfo.getNetworkType()":"android.app.job.jobinfo.getnetworktype（）\r\n","Called by a device owner, a profile owner for the primary user or a profile\n            owner of an organization-owned managed profile to turn auto time zone on and off.":"由设备所有者，主要用户或配置文件的配置文件所有者调用\r\n            组织拥有的托管配置文件的所有者打开和关闭自动时区。\r\n","Style for ":"样式\r\n","Drawable to use as the fast scroll index preview window background\n             when shown on the left.":"可以用作快速滚动索引预览窗口背景\r\n             当左侧显示时。\r\n","android.app.Person":"android.app.person\r\n","android.view.View#getWindowToken()\n            View.getWindowToken()":"android.view.view＃getWindowToken（）\r\n            view.getWindowToken（）\r\n"," objects that are part of this request.":" 是此请求的一部分的对象。\r\n","android.app.admin.DevicePolicyManager.setOrganizationId(java.lang.String)":"android.app.admin.devicepolicymanager.setorganization（java.lang.string）\r\n","jmethodID":"jmethodid\r\n","android.app.admin.DeviceAdminReceiver.DEVICE_ADMIN_META_DATA":"android.app.admin.deviceadminreceiver.device_admin_meta_data\r\n","android.accessibilityservice.AccessibilityService.GLOBAL_ACTION_QUICK_SETTINGS":"Android.AccessibilityService.Accessibilityservice.global_action_quick_settings\r\n","Set a message to be sent when the dialog is canceled.":"取消对话框时设置要发送的消息。\r\n","Intent extra data key: Use this key with\n            ":"意图额外的数据密钥：与此密钥一起使用\r\n            \r\n","The client-supplied description of this download.":"此下载的客户供应描述。\r\n","Called by a device owner or profile owner of secondary users that is affiliated with the\n            device to disable the keyguard altogether.":"由设备所有者或辅助用户的个人资料所有者拨打\r\n            完全禁用钥匙守卫的设备。\r\n"," key: A\n            ":" 钥匙：\r\n            \r\n","android.app.AppOpsManager.noteOpNoThrow(java.lang.String, int, java.lang.String, java.lang.String, java.lang.String)":"android.app.appopsmanager.noteopnothrow（java.lang.string，int，java.lang.string，java.lang.string，java.lang.string）\r\n","android.accessibilityservice.AccessibilityServiceInfo":"Android.AccessibilityService.Accessibilityserviceinfo\r\n","When set to true, all children with a weight will be considered having\n             the minimum size of the largest child.":"当设置为真时，所有体重的孩子都将被视为\r\n             最小孩子的最小规模。\r\n"," contained in this dialog.":" 包含在此对话框中。\r\n","Set a description of this tab's content for use in accessibility support.":"设置此标签内容的描述，以用于可访问性支持。\r\n","PEAP":"豌豆\r\n","android.app.backup.BackupAgentHelper":"android.app.backup.backupagenthelper\r\n","Saves the state of the dialog into a bundle.":"将对话框的状态保存到一个捆绑中。\r\n","android.app.slice.SliceMetrics.SliceMetrics(android.content.Context, android.net.Uri)":"android.app.slice.slicemetrics.slicemetrics（android.content.context，android.net.uri）\r\n","android.app.appsearch.AppSearchResult.RESULT_OK":"android.app.appsearch.appsearchresult.result_ok\r\n","android.app.Activity.onProvideAssistData(android.os.Bundle)":"android.app.activity.onprovideassistdata（android.os.bundle）\r\n","Get the friendly Bluetooth name of the local Bluetooth adapter.":"获取本地蓝牙适配器的友好蓝牙名称。\r\n","android.app.admin.DevicePolicyManager.isSecurityLoggingEnabled(android.content.ComponentName)":"android.app.admin.devicepolicymanager.issecurityloggingEnabled（android.content.componentname）\r\n","The process id of the process that died.":"死亡过程的过程ID。\r\n","android.app.appsearch.GenericDocument.getPropertyDoubleArray(java.lang.String)":"android.app.appsearch.genericdocument.getPropertyDoublearray（java.lang.string）\r\n","android.app.ProgressDialog.show(android.content.Context, java.lang.CharSequence, java.lang.CharSequence, boolean)":"android.app.progressdialog.show（android.content.context，java.lang.Charsequence，java.lang.Charsequence，boolean）\r\n","Connection parameter update - Request a high priority, low latency connection.":"连接参数更新 - 请求高优先级，低延迟连接。\r\n","Returns the list of channels that belong to this group":"返回属于此组的频道列表\r\n"," for a fragment host.":" 对于片段主机。\r\n","android.app.backup.BackupDataOutput.getTransportFlags()":"android.app.backup.backupdataoutput.getTransportflags（）\r\n","android.accessibilityservice.AccessibilityService.GLOBAL_ACTION_HOME":"Android.AccessibilityService.Accessibilityservice.global_action_home\r\n","Default EditText style.":"默认的递观样式。\r\n","The drawable for the list divider.":"可用于列表分隔线的绘制。\r\n","android.bluetooth.BluetoothDevice.createBond()":"android.bluetooth.bluetoothdevice.createbond（）\r\n","Get the preferred launcher icon size.":"获取首选的启动器图标尺寸。\r\n","android.app.admin.SecurityLog.TAG_MEDIA_UNMOUNT":"android.app.admin.securitylog.tag_media_unmount\r\n","android.app.Activity.getVoiceInteractor()":"android.app.activity.getVoiceInteractor（）\r\n","android.animation.ValueAnimator.RESTART":"android.animation.valueAnimator.restart\r\n","customTitleView":"CustomTitleView\r\n","\n            after a restore operation to write the backup state file corresponding to\n            the data as processed by the helper.":"\r\n            修复操作后，编写对应的备份状态文件\r\n            助手处理的数据。\r\n"," that\n         has no title bar or status bar.":" 那\r\n         没有标题栏或状态栏。\r\n","android.animation.AnimatorSet.getChildAnimations()":"android.animation.animatorset.getChildanimations（）\r\n","android.app.admin.DeviceAdminReceiver.ACTION_LOCK_TASK_ENTERING":"android.app.admin.deviceadminreceiver.action_lock_task_entering\r\n"," for a specific target\n            package.":" 对于特定目标\r\n            包裹。\r\n","android.app.job.JobWorkItem.getEstimatedNetworkDownloadBytes()":"android.app.job.jobworkitem.getEstimatedNetworkDownloadbytes（）\r\n","T:Android.App.ActionBar+ITabListener":"t：android.app.actionbar+itablistener\r\n","Update period in milliseconds, or 0 if the AppWidget will update itself.":"以毫秒为单位的更新期限，或0如果AppWidget会自行更新。\r\n","Return the BackStackEntry at index <var>index</var> in the back stack;\n            where the item on the bottom of the stack has index 0.":"返回背面堆栈中索引<var>索引</var>的backstackentry;\r\n            堆栈底部的项目具有索引0。\r\n","Makes the left edge of this view match the left edge of the given anchor view ID.":"使此视图的左边缘与给定锚视图ID的左边缘匹配。\r\n","Gets the value for this Keyframe.":"获取此密钥帧的值。\r\n","Gets the an ":"得到一个\r\n","android.app.UiAutomation.setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)":"android.app.uiautomation.setserviceinfo（android.accosconibilityservice.accostibilitysibilityseribilityserviceinfo）\r\n","#popBackStack(String, int)":"#popbackstack（String，int）\r\n","Allows application to override the creation of the application object.":"允许应用程序覆盖应用程序对象的创建。\r\n","FragmentManagerNonConfig stores the retained instance fragments across\n            activity recreation events.":"fragmentManagernonConfig存储跨跨的实例片段\r\n            活动娱乐事件。\r\n","android.app.Activity.setTaskDescription(android.app.TaskDescription)":"android.app.activity.setTaskDescription（android.app.taskDescription）\r\n","Updates the properties of the picture-in-picture activity, or sets it to be used later when\n            ":"更新图片活动活动的属性，或将其设置为以后使用\r\n            \r\n","android.appwidget.AppWidgetHostView.updateAppWidgetSize(android.os.Bundle, java.util.List)":"android.appwidget.appwidgethostview.updateappwidgetsize（android.os.bundle，java.util.list）\r\n","android.app.Presentation.onDisplayChanged()":"android.app.presentation.ondisplaychanged（）\r\n","Returns a bundle with the current results from the allocation counting.":"返回一个由分配计数的当前结果返回的捆绑包。\r\n","Returns package names and visibility which were explicitly set for given account.":"返回包的名称和可见性，这些名称和可见性是为给定帐户设置的。\r\n","android.app.FragmentHostCallback.onDump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])":"android.app.FragmentHostCallback.ondump（java.lang.string，java.io.filedescriptor，java.io.printwriter，java.lang.string []）\r\n","Get the last time this configuration was active, measured in milliseconds since the epoch.":"以自时代以来，以毫秒为单位，以毫秒为单位，获得该配置活跃的最后一次。\r\n","Get the number of times this configuration was active.":"获取此配置处于活动状态的次数。\r\n","Provides information about the colors of a wallpaper.":"提供有关墙纸颜色的信息。\r\n","Get the Z-axis elevation of the action bar in pixels. -or- Set the Z-axis elevation of the action bar in pixels.":"在像素中获取动作栏的Z轴升级。 - 或设置像素中动作栏的Z轴抬高。\r\n"," with this context.":" 与此上下文。\r\n","Returned from ":"从\r\n","android.app.job.JobInfo.getClipGrantFlags()":"android.app.job.jobinfo.getClipgrantflags（）\r\n","android.content.ComponentCallbacks2.TRIM_MEMORY_RUNNING_CRITICAL":"android.content.componentCallbacks2.trim_memory_running_critical\r\n","android.app.Activity.requestWindowFeature(int)":"Android.App.Activity.RequestWindowFeature（INT）\r\n","Dim text color.":"昏暗的文字颜色。\r\n","android.accessibilityservice.AccessibilityService.getWindows()":"Android.Accessibilityservice.Accessibilityservice.getWindows（）（）\r\n","android.service.notification.ConditionProviderService":"Android.Service.Notification.ConditionProviderService\r\n"," attached to this dialog, if present.":" 如果存在，则附在此对话框上。\r\n","Returns true if the activity is currently in multi-window mode.":"如果活动当前处于多窗口模式，则返回true。\r\n","android.content.DialogInterface.BUTTON3":"android.content.dialoginterface.button3\r\n","android.app.appsearch.ReportSystemUsageRequest.getDocumentId()":"android.app.appsearch.reportsystemusagerequest.getDocumentId（）\r\n","android.app.appsearch.Migrator.onDowngrade(int, int, android.app.appsearch.GenericDocument)":"android.app.appsearch.migrator.ondowngrade（int，int，android.app.appsearch.genericDocument）\r\n","Retrieve the current number of non-letter characters required in the password\n            for a particular admin or all admins that set restrictions on this user\n            and its participating profiles.":"检索密码中所需的当前非字符字符数\r\n            对于特定的管理员或所有设置此用户限制的管理员\r\n            及其参与概况。\r\n","NotificationManager#notify(int, Notification)\n            NotificationManager.notify(int, Notification)":"NotificationManager＃Notify（INT，通知）\r\n            NotificationManager.notify（INT，通知）\r\n"," when the download is paused for some other reason.":" 当下载暂停时，出于某些其他原因。\r\n"," from this object.":" 从这个对象。\r\n","Intent extra data key: This key will be used for the extra populated by the\n            ":"意图额外的数据密钥：此密钥将用于由\r\n            \r\n","android.app.appsearch.SetSchemaResponse":"android.app.appsearch.setschemaresponse\r\n","#getDescription":"#getDescription\r\n","android.app.LauncherActivity.onQueryPackageManager(android.content.Intent)":"android.app.launcheractivity.onquerypackagemanager（android.content.intent）\r\n","android.app.NativeActivity.META_DATA_FUNC_NAME":"android.app.nativeactivity.meta_data_func_name\r\n","View#setNestedScrollingEnabled(boolean) nested scrolling child":"查看＃setNestedScrollingEnabled（boolean）嵌套滚动孩子\r\n","Allows applications to open network sockets.":"允许应用程序打开网络插座。\r\n","android.app.admin.DevicePolicyManager.setTimeZone(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.settimezone（android.content.componentname，java.lang.string）\r\n","Perform any final cleanup before an activity is destroyed.":"在销毁活动之前，执行任何最终清理。\r\n","android.app.AlertDialog.THEME_DEVICE_DEFAULT_DARK":"android.app.alertdialog.theme_device_default_dark\r\n","Specifies a compatible screen size, as per the device\n             configuration screen size bins.":"根据设备指定兼容的屏幕尺寸\r\n             配置屏幕尺寸箱。\r\n","Allows an application to monitor incoming SMS messages, to record\n         or perform processing on them.":"允许应用程序监视传入的SMS消息，以记录\r\n         或对它们进行处理。\r\n","android.bluetooth.BluetoothGatt.connect()":"android.bluetooth.bluetoothgatt.connect（）\r\n","Sets the drawable to be used to display the progress value.":"设置可用于显示进度值的可绘图。\r\n"," to receive\n            notifications from this managed profile, as set by the profile owner.":" 受到\r\n            根据配置文件所有者设置的此托管配置文件的通知。\r\n","android.os.Build.VERSION_CODES#S":"android.os.build.version_codes＃s\r\n","Default ListView style.":"默认ListView样式。\r\n","Retrieve the ":"检索\r\n","Return the remote bluetooth device this GATT client targets to":"将此Gatt客户端目标返回远程蓝牙设备\r\n","'s the dialog.":"对话框。\r\n","After a ":"之后\r\n","A notification with no importance: does not show in the shade.":"通知没有重要性：不在阴影中显示。\r\n","Force the global system in or out of touch mode.":"强制全球系统处于接触模式。\r\n","to be deprecated: This value will always be null.":"弃用：此值将始终为null。\r\n","android.app.Instrumentation.waitForIdle(java.lang.Runnable)":"android.app.instrumentation.waitforidle（java.lang.runnable）\r\n","Gets the selection for obtaining search suggestions.":"获取获得搜索建议的选择。\r\n","android.app.Activity.onSaveInstanceState(android.os.Bundle)":"android.app.activity.onsaveinstancestate（android.os.bundle）\r\n","\n            that handles a long app version code.":"\r\n            处理长期的应用程序代码。\r\n","BroadcastReceiver#onReceive":"broadcastreceiver＃OnReceive\r\n","android.app.Activity.setImmersive(boolean)":"android.app.activity.setimmersive（boolean）\r\n","android.app.ActionBar.setSplitBackgroundDrawable(android.graphics.drawable.Drawable)":"android.app.actionbar.setsplitbackground Drawable（android.graphics.drawable.drabable）\r\n"," if the FragmentManager's LayoutInflaterFactory should be used.":" 如果应使用FragmentManager的LayoutinflaterFactory。\r\n","This convenience helper synchronously gets an auth token with\n            ":"此便利助手同步获得了一个验证令牌\r\n            \r\n","android.animation.ObjectAnimator.ofFloat(java.lang.Object, java.lang.String, float[])":"android.animation.ObjectAnimator.Offloat（java.lang.Object，java.lang.string，float []）\r\n","android.app.people.ConversationStatus.getAvailability()":"android.app.people.conversationstatus.getavailaible（）\r\n","FragmentTransaction#commit() FragmentTransaction.commit()":"fragmentTransaction＃commit（）fragmentTransaction.commit（）\r\n","android.app.Notification.deleteIntent":"android.app.notification.deleteintent\r\n"," to retrieve the most recent batch of\n            network logging events.":" 检索最新一批\r\n            网络记录事件。\r\n","Delay in milliseconds before the animation runs, once start time is reached.":"在动画运行之前延迟毫秒，一旦达到开始时间。\r\n","android.app.admin.DevicePolicyManager.setSystemUpdatePolicy(android.content.ComponentName, android.app.admin.SystemUpdatePolicy)":"android.app.admin.devicepolicymanager.setsystemupdatepolicy（android.content.componentname，android.app.admin.systemupdatepolicy）\r\n","android.app.backup.BackupAgent.onRestoreFinished()":"android.app.backup.backupent.onrestorefined（）\r\n","Set the second line of text in the platform notification template.":"在平台通知模板中设置第二行文本。\r\n","Set the icon to display in the 'home' section of the action bar.":"将图标设置为显示在动作栏的“家庭”部分。\r\n","android.app.slice.Slice.HINT_LIST":"android.app.slice.slice.hint_list\r\n","Service":"服务\r\n","android.app.job.JobInfo.getTriggerContentMaxDelay()":"android.app.job.jobinfo.getTriggerContentMaxDelay（）\r\n","android.app.appsearch.GenericDocument.getSchemaType()":"android.app.app.appsearch.genericdocument.getschematype（）\r\n","android.os.Parcelable":"android.os.parcelable\r\n","Creates the given zen rule.":"创建给定的禅宗规则。\r\n","Specified the name of a group that this permission is associated\n         with.":"指定了该权限关联的组名称\r\n         和。\r\n","Get possible non-textual inputs that are accepted.":"获取可能接受的非文本输入。\r\n","BluetoothLeScanner":"Bluetoothlescanner\r\n","A convenience method that queries for all stats in the given range (using the best interval\n            for that range), merges the resulting data, and keys it by package name.":"一种方便方法，查询给定范围内所有统计数据（使用最佳间隔\r\n            对于该范围），将结果数据合并，并按包名称键。\r\n","Activity#startActivity(Intent)":"活动＃开始行动（意图）\r\n","Called whenever a key, touch, or trackball event is dispatched to the\n            activity.":"每当将钥匙，触摸或轨迹球事件派遣到\r\n            活动。\r\n","Select the specified tab.":"选择指定的选项卡。\r\n","A bundle extra (int) that contains the lower bound on the current width, in dips, of a\n            widget instance.":"捆绑额外（int），其中包含在当前宽度上的下限，以a\r\n            小部件实例。\r\n","Gets the window animation frame statistics.":"获取窗口动画框架统计信息。\r\n","android.app.DownloadManager.COLUMN_LOCAL_URI":"android.app.downloadmanager.column_local_uri\r\n","#evaluate(float, android.graphics.PointF, android.graphics.PointF)":"#evaluate（float，android.graphics.pointf，android.graphics.pointf）\r\n","Specifies whether to filter touches when the view's window is obscured by\n             another visible window.":"指定在视图的窗口被遮盖的何时过滤触摸\r\n             另一个可见窗口。\r\n","android.app.job.JobParameters.getStopReason()":"android.app.job.jobparameters.getStepareason（）\r\n","AlarmClockInfo":"AlarmClockInfo\r\n","\n        A ":"\r\n        一个\r\n"," extra pointing to disclaimer content.":" 特级指向免责声明内容。\r\n","Set the initial saved state that this Fragment should restore itself\n            from when first being constructed, as returned by\n            ":"设置最初保存的状态，该片段应恢复自身\r\n            从第一次构造时，\r\n            \r\n"," object from a resource":" 来自资源的对象\r\n","android.app.StatusBarManager":"android.app.statusbarmanager\r\n","android.content.ContentUris content URI":"android.content.Contenturis含量URI\r\n","How to display the lack of a name \n":"如何显示缺乏名字\r\n\r\n",": go to the normal\n home activity as part of the disable. ":"：去普通\r\n 家庭活动作为禁用的一部分。\r\n","android.app.MediaRouteActionProvider.setRouteTypes(int)":"android.app.mediarouteactionProvider.setRouteTypes（int）\r\n"," it\n            returns ":" 它\r\n            返回\r\n","When a linear layout is part of another layout that is baseline\n          aligned, it can specify which of its children to baseline align to\n          (that is, which child TextView).":"当线性布局是基线的另一个布局的一部分时\r\n          对齐，它可以指定其基线的哪些孩子与\r\n          （也就是说，哪个儿童文本视图）。\r\n",", but the returned Drawable has a number\n            of limitations to reduce its overhead as much as possible.":"，但是返回的可绘制有数字\r\n            限制以尽可能减少其开销。\r\n","Sets a list of configuration features to enable for a trust agent component.":"设置配置功能列表以启用信任代理组件。\r\n","Disable fingerprint authentication on keyguard secure screens (e.":"在Keyguard安全屏幕上禁用指纹身份验证（e。\r\n","Allows an application to manage the list of accounts in the AccountManager \n":"允许应用程序管理帐户管理器中的帐户列表\r\n\r\n"," - the given rule currently\n            exists but is disabled.":"  - 当前给定规则\r\n            存在但被禁用。\r\n","android.bluetooth.BluetoothDevice.EXTRA_PAIRING_VARIANT":"android.bluetooth.bluetoothdevice.extra_pairing_variant\r\n","android.app.admin.DevicePolicyManager.isProvisioningAllowed(java.lang.String)":"android.app.admin.devicepolicymanager.isprovisioningawaled（java.lang.string）\r\n",": always returns false (doesn't handle\n            the event).":"：始终返回false（不处理\r\n            事件）。\r\n","The order in which the animations will be started.":"动画开始的顺序。\r\n","android.app.NotificationChannel.hasUserSetSound()":"android.app.notificationChannel.hasusersetsound（）\r\n","Set the selected navigation item in list or tabbed navigation modes.":"在列表或选项卡式导航模式中设置所选导航项目。\r\n","android.app.slice.SliceItem.FORMAT_SLICE":"android.app.slice.sliceitem.format_slice\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_ANONYMOUS_IDENTITY":"android.app.admin.devicepolicymanager.extra_provisioning_wifi_anonymous_identity\r\n","Drawable to use as the fast scroll index preview window background\n             when shown on the right.":"可以用作快速滚动索引预览窗口背景\r\n             当右侧显示时。\r\n","Positions the baseline of this view on the baseline of the given anchor view ID.":"将此视图的基线定位在给定锚视图ID的基线上。\r\n","Equivalent to calling ":"等同于打电话\r\n","android.bluetooth.BluetoothAdapter.checkBluetoothAddress(java.lang.String)":"android.bluetooth.bluetoothadapter.checkbluetoothaddress（java.lang.string）\r\n","android.accounts.AccountAuthenticatorActivity":"android.accounts.accountauthenticatoration\r\n","Broadcast sent when the device's UI has switched to desk mode,\n            by being placed in a desk dock.":"当设备UI切换到台式模式时发送的广播发送，\r\n            通过放在桌子码头中。\r\n","android.app.assist.AssistContent":"android.app.assist.AssistContent\r\n","JobInfo Builder setOverrideDeadline(long)":"JobInfo Builder SetoverRidedEadeadline（long）\r\n","Called when an activity you launched with an activity transition exposes this\n            Activity through a returning activity transition, giving you the resultCode\n            and any additional data from it.":"当您通过活动过渡启动的活动时调用\r\n            通过返回的活动过渡活动，为您提供结果代码\r\n            以及任何其他数据。\r\n","float[]":"漂浮[]\r\n","android.app.ActivityManager.setVrThread(int)":"android.app.activityManager.setVrthread（int）\r\n"," account status token in result\n            from ":" 帐户状态令状\r\n            从\r\n","android.appwidget.AppWidgetManager.OPTION_APPWIDGET_MIN_HEIGHT":"android.appwidget.appwidgetManager.option_appwidget_min_height\r\n","when some possibly transient error occurred but we can't\n resume the download.":"当某些可能发生瞬态错误时，我们不能\r\n 恢复下载。\r\n","#setRepeating":"#setRepeating\r\n","android.app.Instrumentation.sendStringSync(java.lang.String)":"android.app.Instrumentation.SendStringSync（java.lang.string）\r\n","android.app.admin.DevicePolicyManager.isCommonCriteriaModeEnabled(android.content.ComponentName)":"android.app.admin.devicepolicymanager.iscommoncriteriamodeenabled（android.content.componentname）\r\n","Returns whether this user is affiliated with the device.":"返回该用户是否隶属于该设备。\r\n"," should be\n            called with respect to the specified account.":" 应该\r\n            关于指定帐户的调用。\r\n","android.app.AppOpsManager.OPSTR_READ_CALL_LOG":"android.app.appopsmanager.opptr_read_call_log\r\n","UserManager#USER_OPERATION_ERROR_MAX_RUNNING_USERS":"USERMANAGER＃user_operation_error_max_running_users\r\n","android.app.job.JobScheduler.cancelAll()":"android.app.job.jobscheduler.cancelall（）\r\n","android.app.appsearch.SearchResult.getDatabaseName()":"android.app.appsearch.searchresult.getDatabasEname（）\r\n","android.app.slice.Slice.SUBTYPE_COLOR":"android.app.slice.slice.subtype_color\r\n"," activity when you want to\n            pick an AppWidget to display.":" 当您想进行活动\r\n            选择一个AppWidget显示。\r\n","android.app.ApplicationErrorReport.dump(android.util.Printer, java.lang.String)":"android.app.ApplicationErrreReport.dump（android.util.printer，java.lang.string）\r\n","android.app.admin.DevicePolicyManager":"android.app.admin.devicepolicymanager\r\n","android.app.Fragment.onAttach(android.content.Context)":"android.app.fragment.onattach（android.content.context）\r\n","android.animation.LayoutTransition.removeTransitionListener(android.animation.TransitionListener)":"android.animation.layouttransition.removetransitionListener（android.animation.transitionListener）\r\n","BackupDataInput#getKey()":"backupdatainput＃getKey（）\r\n","Disallow calls to ":"禁止电话\r\n","android.app.Activity.getCallingPackage()":"android.app.activity.getCallingPackage（）\r\n","android.app.admin.DevicePolicyManager.EXTRA_ADD_EXPLANATION":"android.app.admin.devicepolicymanager.extra_add_explanation\r\n","android.app.Notification.EXTRA_COMPACT_ACTIONS":"android.app.notification.extra_compact_actions\r\n","Create and start a new thread in which to run instrumentation.":"创建并启动一个新线程以运行仪器。\r\n","android.app.Activity.onUserLeaveHint()":"android.app.activity.onuserleavehint（）\r\n","Set the animated values for this object to this set of ints.":"将此对象的动画值设置为这组INT。\r\n","Returns an URI that provides a settings ":"返回提供设置的URI\r\n","android.bluetooth.BluetoothDevice.setPairingConfirmation(boolean)":"android.bluetooth.bluetoothdevice.setpairingconfirnation（boolean）\r\n","If included in the status or final bundle sent to an IInstrumentationWatcher, this key \n            identifies a string which can simply be printed to the output stream.":"如果包含在已发送到IinsTrumentationWatcher的状态或最终捆绑包中，则此密钥\r\n            标识可以简单地打印到输出流的字符串。\r\n","android.animation.ValueAnimator.areAnimatorsEnabled()":"android.animation.valueAnimator.AreAnimatorsEnabled（）\r\n","android.app.Notification.CATEGORY_STATUS":"android.app.notification.category_status\r\n"," in\n            this manager, registers the callbacks to it,\n            and (if the activity/fragment is currently started) starts loading it.":" 在\r\n            该经理记录了回调，\r\n            （如果当前启动了活动/片段）开始加载它。\r\n"," for this controller.":" 对于此控制器。\r\n",": this process process contains\n background code that is expendable.":"：此过程包含\r\n 可消耗的背景代码。\r\n","Condition#STATE_TRUE":"条件＃state_true\r\n","Sets the duration to be used by all animations of this transition object.":"设置该过渡对象的所有动画要使用的持续时间。\r\n","Set the preferred connection PHY for this app.":"设置此应用程序的首选连接PHY。\r\n","Override the large icon when the big notification is shown.":"显示大通知时覆盖大图标。\r\n","android.animation.FloatArrayEvaluator.FloatArrayEvaluator()":"android.animation.floatarrayevaluator.floatarrayevaluator（）\r\n"," when the current activity is being\n            re-displayed to the user (the user has navigated back to it).":" 当当前活动正在\r\n            重新播放给用户（用户已导航回到它）。\r\n","This is the minimum SDK version number that the application\n             requires.":"这是应用程序的最小SDK版本号\r\n             需要。\r\n","android.accounts.AuthenticatorDescription.newKey(java.lang.String)":"android.accounts.authenticatordescription.newkey（java.lang.string）\r\n","android.appwidget.AppWidgetManager.updateAppWidget(android.content.ComponentName, android.widget.RemoteViews)":"android.appwidget.appwidgetmanager.updateappwidget（android.content.componentname，android.widget.remoteviews）\r\n","The name of the process this service runs in.":"该服务的流程名称运行。\r\n","Special value of ":"特殊价值的\r\n","#onCreateView(LayoutInflater, ViewGroup, Bundle)":"#oncreateview（Layoutinflater，ViewGroup，捆绑包）\r\n","#KEY_PASSWORD":"#key_password\r\n","android.app.Activity.unregisterActivityLifecycleCallbacks(android.app.ActivityLifecycleCallbacks)":"android.app.Activity.unregisterivityLifecyClecallbacks（android.app.activityLifecyClecallbacks）\r\n","Set a hint to the system about whether this fragment's UI is currently visible\n            to the user.":"为系统设置有关该片段UI当前是否可见的提示\r\n            给用户。\r\n","#configure":"＃配置\r\n","Enable the system info area in the status bar during LockTask mode.":"在LockTask模式下，在状态栏中启用系统信息区域。\r\n","Get the current password expiration time for a particular admin or all admins that set\n            restrictions on this user and its participating profiles.":"获取特定管理员或所有设置的所有管理员的当前密码到期时间\r\n            对该用户及其参与资料的限制。\r\n","A bundle extra that hints to the AppWidgetProvider the category of host that owns this\n            this widget.":"捆绑额外暗示AppWidgetProvider的主机类别\r\n            这个小部件。\r\n","Called upon a date change.":"召集日期更改。\r\n",": this process is empty of any\n actively running code.":"：这个过程没有任何\r\n 积极运行代码。\r\n","Indicates that the audit log buffer has reached 90% of its capacity.":"表明审核日志缓冲区已达到其容量的90％。\r\n","android.accounts.AuthenticatorDescription.labelId":"android.accounts.authenticatordescription.labelid\r\n","The key character map file resource.":"关键字符映射文件资源。\r\n","Callback triggered as a result of a remote characteristic notification.":"远程特征通知触发了回调。\r\n","android.Manifest.permission#GET_ACCOUNTS":"android.manifest.permission＃get_accounts\r\n","Starts a new ":"开始新的\r\n","A preferences.xml file for authenticator-specific settings.":"prevences.xml文件，用于特定于身份验证的设置。\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_TIME_ZONE":"android.app.admin.devicepolicymanager.extra_provisioning_time_zone\r\n","The caller supplied a schema which is invalid or incompatible with the previous schema.":"呼叫者提供了一种与先前模式无效或不兼容的架构。\r\n","Controls how the image should be resized or moved to match the size\n             of this ImageView.":"控制如何调整图像或移动以匹配大小\r\n             此图像视图。\r\n","android.app.admin.DevicePolicyManager.ID_TYPE_BASE_INFO":"android.app.admin.devicepolicymanager.id_type_base_info\r\n","Moves all Fragments managed by the controller's FragmentManager\n            into the destroy view state.":"移动由控制器的FragmentManager管理的所有片段\r\n            进入摧毁观点状态。\r\n","Returns the list of packages allowed to start the lock task mode.":"返回允许启动锁定任务模式的软件包列表。\r\n","ClipData":"clipdata\r\n","Called when a device is exiting lock task mode.":"设备退出锁定任务模式时致电。\r\n","android.appwidget.AppWidgetManager.updateAppWidget(int[], android.widget.RemoteViews)":"android.appwidget.appwidgetmanager.updateappwidget（int []，android.widget.remoteviews）\r\n","Called by an application that is administering the device to set the minimum number of\n            symbols required in the password.":"由管理设备的应用程序调用以设置最小数量\r\n            密码中需要的符号。\r\n","android.app.FragmentContainer.onFindViewById(int)":"Android.App.FragmentContainer.OnfindViewById（INT）\r\n","android.accessibilityservice.AccessibilityServiceInfo.FLAG_SERVICE_HANDLES_DOUBLE_TAP":"Android.AccessibilityService.Accessibilityserviceinfo.flag_service_handles_double_tap\r\n","android.app.ApplicationExitInfo.REASON_EXIT_SELF":"android.app.applicationexitinfo.reason_exit_self\r\n","Terminate instrumentation of the application.":"终止应用程序的仪器。\r\n","Callback for ":"回调\r\n","Return the (major and minor) device class component of this\n            ":"返回此（主要和次要）设备类组件\r\n            \r\n","Rotation constant: Unfreeze rotation (rotating the device changes its rotation state).":"旋转常数：旋转旋转（旋转设备会改变其旋转状态）。\r\n","android.app.admin.DevicePolicyManager.setPasswordMinimumLowerCase(android.content.ComponentName, int)":"android.app.admin.devicepolicymanager.setpasswordwordwordminimumlowercase（android.content.componentname，int）\r\n","android.animation.IntEvaluator.evaluate(float, java.lang.Integer, java.lang.Integer)":"android.animation.intevaluator.evaluate（float，java.lang.integer，java.lang.integer）\r\n","Gets information about the next alarm clock currently scheduled.":"获取有关当前计划的下一个闹钟的信息。\r\n","Return the detailed description of the kind of network this job requires,\n            or ":"返回该作业需要的网络类型的详细说明，\r\n            或者\r\n","An optional argument to supply a maximum height for this view.":"可选的论点，可为此视图提供最大高度。\r\n","Returns the user session start message.":"返回用户会话开始消息。\r\n","android.app.usage.ConfigurationStats.getTotalTimeActive()":"android.app.usage.configurationstats.getTotalTimactive（）\r\n","Value is a string that specifies the Maps API Key to use.":"值是指定要使用的映射API密钥的字符串。\r\n","android.app.WallpaperInfo":"Android.App.WallpaperInfo\r\n","'s lifecycle for you based on the activity's lifecycle.":"根据活动的生命周期为您提供生命周期。\r\n","android.appwidget.AppWidgetHostView.setAppWidget(int, android.appwidget.AppWidgetProviderInfo)":"android.appwidget.appwidgethostview.setappwidget（int，android.appwidget.appwidgetProviderInfo）\r\n","android.app.Instrumentation.newActivity(java.lang.Class, android.content.Context, android.os.IBinder, android.app.Application, android.content.Intent, android.content.pm.ActivityInfo, java.lang.CharSequence, android.app.Activity, java.lang.String, java.lang.Object)":"android.app.instrumentation.newactivity（java.lang.class，android.content.context，android.os.os.ibinder，android.app.application，android.content.intent，android.content.content.content.pontent.pm.pm.p.p.p.p.p.pm.pm.activityinfo，java.lang。 charsequence，android.app.Activity，java.lang.string，java.lang.Object）\r\n","android.app.AliasActivity":"Android.App.Liascartivity\r\n","android.app.FragmentController.dispatchStop()":"Android.App.FragmentController.disPatchStop（）\r\n","android.app.slice.Slice.HINT_LARGE":"android.app.slice.slice.hint_large\r\n",": this process is contains services\n that should remain running.":"：此过程包含服务\r\n 那应该保持运行。\r\n","Specify whether an acitivty's task state should always be maintained\n         by the system, or if it is allowed to reset the task to its initial\n         state in certain situations.":"指定是否应始终保持Acitivty的任务状态\r\n         由系统，或者如果允许将任务重置为初始\r\n         在某些情况下说明。\r\n","\n          An icon representing the application.\n        ":"\r\n          代表应用程序的图标。\r\n        \r\n","This hook is called when the user signals the desire to start a search.":"当用户发出启动搜索的愿望时，将调用此挂钩。\r\n","android.bluetooth.BluetoothAdapter.listenUsingRfcommWithServiceRecord(java.lang.String, java.util.UUID)":"android.bluetooth.bluetoothadapter.listenusingrfcommwithservicerecord（java.lang.string，java.util.uuid）\r\n","Key to retrieve an extra added to an intent when the value of an input range is changed.":"当更改输入范围的值时，取回意图的额外添加的键。\r\n","android.animation.RectEvaluator.evaluate(float, android.graphics.Rect, android.graphics.Rect)":"android.animation.Rectevaluator.evaluate（float，android.graphics.Rect，android.graphics.Rect）\r\n","Get the position of the currently selected list item.":"获取当前选择的列表项目的位置。\r\n","Removes all listeners from the set listening to frame updates for this animation.":"从集合中删除所有侦听器收听此动画的帧更新。\r\n","Command for ":"命令\r\n","android.animation.Keyframe.setInterpolator(android.animation.TimeInterpolator)":"android.animation.keyframe.setInterpolator（android.animation.timeinterpolator）\r\n","Notification category: user-scheduled reminder.":"通知类别：用户安排的提醒。\r\n","#onCaptureSharedElementSnapshot(\n            android.view.View, android.graphics.Matrix, android.graphics.RectF)":"#onca​​pturesharedelementsnapshot（\r\n            android.view.view，android.graphics.matrix，android.graphics.rectf）\r\n","android.bluetooth.BluetoothGatt.executeReliableWrite()":"android.bluetooth.bluetoothgatt.executerelible write（）\r\n","android.app.Activity.setIntent(android.content.Intent)":"android.app.activity.setintent（android.content.intent）\r\n","android.app.slice.SliceItem.getInt()":"android.app.slice.sliceitem.getint（）\r\n","Constructs and returns a PropertyValuesHolder object with the specified property and set\n            of values.":"用指定属性构建并返回属性值持有人对象并设置\r\n            值。\r\n","Group of permissions that allow manipulation of how\n         another application displays UI to the user.":"一组允许操纵如何操纵的权限\r\n         另一个应用程序向用户显示UI。\r\n","android.app.ActivityGroup":"Android.App.ActivityGroup\r\n","Plays the ValueAnimator in reverse.":"反向播放ValueAnimator。\r\n","Helper for implementing a ":"用于实施的助手\r\n","The style resource to use for an ImageButton.":"用于图像键的样式资源。\r\n","Flag indicating that this window's background should be the\n             user's current wallpaper.":"指示此窗口的背景应该是\r\n             用户的当前墙纸。\r\n","android.app.admin.DevicePolicyManager.setPasswordMinimumNonLetter(android.content.ComponentName, int)":"android.app.admin.devicepolicymanager.setpasswordminimumnonletter（android.content.componentname，int）\r\n","Specify whether an activity's task should be cleared when it\n         is re-launched from the home screen.":"指定活动时是否应清除活动的任务\r\n         从主屏幕重新启动。\r\n","android.content.pm.PackageManager#PERMISSION_DENIED":"android.content.pm.packagemanager＃cudmission_denied\r\n","Called each time a new batch of security logs can be retrieved.":"每次都可以检索一批新的安全日志。\r\n","\n            bundles provided by a\n            ":"\r\n            由\r\n            \r\n","android.app.Dialog.onContextMenuClosed(android.view.Menu)":"android.app.dialog.oncontextmenuclosed（android.view.menu）\r\n","android.app.slice.Slice.HINT_PERMISSION_REQUEST":"android.app.slice.slice.hint_permission_request\r\n","android.app.slice.SliceProvider.onMapIntentToUri(android.content.Intent)":"android.app.slice.sliceprovider.onmapintenttouri（android.content.intent）\r\n","#START_CONTINUATION_MASK":"#START_CONTINAUTION_MASK\r\n"," that ensures the background is\n         completely black.":" 确保背景是\r\n         完全黑。\r\n","Start an action mode of the default type ":"启动默认类型的动作模式\r\n","android.animation.Keyframe.ofObject(float, java.lang.Object)":"android.animation.keyframe.ofobject（float，java.lang.Object）\r\n","android.app.admin.DevicePolicyManager.getKeyguardDisabledFeatures(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getKeyGuardDisabledFeatures（android.content.componentname）\r\n","android.app.Activity.registerForContextMenu(android.view.View)":"android.app.activity.registerforcontextmenu（android.view.view）\r\n","android.bluetooth.BluetoothAdapter.EXTRA_PREVIOUS_SCAN_MODE":"android.bluetooth.bluetoothadapter.extra_previous_scan_mode\r\n",",\n          any implementation won't fit in with a garbage collector, resulting\n          in either memory leaks or additional work to clean values up.\n        ":"，，，，\r\n          任何实施都不适合垃圾收集器，因此\r\n          在内存泄漏或其他工作中以清理值。\r\n        \r\n","URI to be downloaded.":"URI要下载。\r\n","android.app.slice.SliceManager.mapIntentToUri(android.content.Intent)":"android.app.slice.slicemanager.mapintenttouri（android.content.intent）\r\n","android.app.appsearch.SearchSpec.RANKING_STRATEGY_RELEVANCE_SCORE":"android.app.appsearch.searchspec.ranking_strategy_relevance_score\r\n","A convenient ":"方便\r\n"," telling the system not to decorate this notification with\n            any special color but instead use default colors when presenting this notification.":" 告诉系统不要用\r\n            任何特殊的颜色，但在提出此通知时使用默认颜色。\r\n","ID_TYPE_BASE_INFO":"id_type_base_info\r\n","Returns the error message associated with this result.":"返回与此结果关联的错误消息。\r\n"," before the request is sent. This method is meant to be overriden\n            by applications which need to perform some extra configuration steps on the connection. It is called with all\n            the request headers set, pre-authentication performed (if applicable) but before the request body is set \n            (e.g. for POST requests). The default implementation in AndroidClientHandler does nothing.\n            ":" 在发送请求之前。这种方法应被过度\r\n            通过需要在连接上执行一些额外的配置步骤的应用程序。它被称为\r\n            请求标题设置，执行预授权（如果适用），但在设置请求主体之前\r\n            （例如，用于发布请求）。 AndroidClientHandler中的默认实现无能为力。\r\n            \r\n","android.app.ExpandableListActivity.getSelectedId()":"android.app.expandableListactivity.getSelectedId（）\r\n","Query network usage statistics details for a given uid, tag, and state.":"查询网络使用统计信息详细信息，用于给定的UID，标签和状态。\r\n","Called when the Fragment is visible to the user.":"当用户可见片段时调用。\r\n","#isNetworkLoggingEnabled":"#isnetworkloggingEnabled\r\n","android.app.appsearch.SearchSpec.getFilterPackageNames()":"android.app.appsearch.searchspec.getfilterpackagenames（）\r\n","Base class for delegated apps to handle callbacks related to their delegated capabilities.":"委托应用程序的基类，以处理与其委派功能有关的回调。\r\n","#setCrossProfilePackages(ComponentName,\n            Set)":"#setCrossProfilePackages（componentName，\r\n            放）\r\n","The event types this serivce would like to receive as specified in\n             ":"该协定希望收到的事件类型按照指定\r\n             \r\n","android.app.Dialog.invalidateOptionsMenu()":"android.app.dialog.invalidateOptionsMenu（）\r\n","android.bluetooth.BluetoothGattCharacteristic.getInstanceId()":"android.bluetooth.bluetoothgattcharacteristic.getinstanceid（）\r\n","Squareness threshold of a stroke before it is recognized as a gesture.":"在将其公认为手势之前，中风的方形阈值。\r\n","Builder#setRemoteInputHistory(CharSequence[])":"构建器＃setRemoteInputhistory（char sequence []）\r\n","#setKeepUninstalledPackages":"#SetKeepunInInstalledPackages\r\n","Text color, typeface, size, and style for the text inside of a popup menu.":"文本颜色，字体，大小和样式，用于弹出菜单内部的文本。\r\n","KeyguardLock":"Keyguardlock\r\n","android.app.Fragment.getAllowEnterTransitionOverlap()":"android.app.fragment.getallowentertransitionoverlap（）\r\n","Default HorizontalScrollView style.":"默认的Horizo​​ntalsCrollview样式。\r\n","Lets the SharedElementCallback adjust the mapping of shared element names to\n            Views.":"让sharedElementCallback将共享元素名称的映射调整为\r\n            视图。\r\n"," in result from\n            ":" 从\r\n            \r\n","Listener for filtering accessibility events.":"用于过滤可访问性事件的侦听器。\r\n","The EAP method of the wifi network in ":"WiFi网络的EAP方法\r\n","android.app.admin.DevicePolicyManager.stopUser(android.content.ComponentName, android.os.UserHandle)":"android.app.admin.devicepolicymanager.stopuser（android.content.componentname，android.os.userhandle）\r\n","Creates an automatic zen rule.":"创建一个自动ZEN规则。\r\n","This evaluator can be used to perform type interpolation between <code>int</code> values.":"该评估器可用于在<code> int </code>值之间执行类型插值。\r\n"," should be shown on top of the lock screen whenever\n            the lockscreen is up and this activity has another activity behind it with the showWhenLock\n            attribute set.":" 每当锁定屏幕的顶部显示\r\n            锁屏已经开始，此活动在Showwhenlock的背后有另一个活动\r\n            属性集。\r\n"," to send media keys and volume changes to.":"将媒体键和卷更改发送到。\r\n","android.app.backup.BackupHelper.performBackup(android.os.ParcelFileDescriptor, android.app.backup.BackupDataOutput, android.os.ParcelFileDescriptor)":"android.app.backup.backuphelper.performbackup（android.os.parcelfiledScriptor，android.app.back.backup.backup.backup.updataoutput，android.os.parcelfiledescriptor）\r\n","This method is called by ViewGroup when a child view is about to be added to the\n            container.":"当要将子视图添加到\r\n            容器。\r\n","android.app.Activity.getWindow()":"android.app.activity.getWindow（）\r\n","android.appwidget.AppWidgetProviderInfo.WIDGET_CATEGORY_SEARCHBOX":"android.appwidget.appwidgetProviderInfo.widget_category_searchbox\r\n","Retrieve the next ":"检索下一个\r\n","android.app.FragmentTransaction.hide(android.app.Fragment)":"Android.App.FragmentTransaction.Hide（Android.App.Fragment）\r\n","android.app.Person.getName()":"android.app.person.getName（）\r\n","android.app.usage.EventStats":"android.app.usage.eventstats\r\n","Register a callback to be informed of fingerprint sensor gesture events.":"注册一个回调，以告知指纹传感器手势事件。\r\n","android.app.backup.FullBackupDataOutput":"android.app.backup.fullbackupdataoutput\r\n"," broadcasts when this AppWidget\n provider is being asked to provide ":" 当这个appwidget播放\r\n 提供者被要求提供\r\n","#onSharedElementStart(java.util.List, java.util.List, java.util.List)":"#onsharedelementstart（java.util.list，java.util.list，java.util.list）\r\n","Information you can retrieve about tasks that the user has most recently\n started or visited.":"您可以检索用户最近有任务的信息\r\n 开始或访问。\r\n","#onSharedElementStart(java.util.List, java.util.List,\n            java.util.List)":"#onsharedelementstart（java.util.list，java.util.list，\r\n            java.util.list）\r\n","android.app.admin.DevicePolicyManager.setPermittedCrossProfileNotificationListeners(android.content.ComponentName, java.util.List)":"android.app.admin.devicepolicymanager.setpermittermittycrossprofilenotificationListeners（android.content.com.ponent.componentname，java.util.list）\r\n","Returns the number of results per page in the result set.":"返回结果集中每个页面的结果数。\r\n","Set to true in all of the configurations for which this input\n             method should be considered an option as the default.":"在此输入的所有配置中设置为true\r\n             方法应视为默认值的选项。\r\n","android.accounts.AccountManager.getAuthToken(android.accounts.Account, java.lang.String, android.os.Bundle, boolean, android.accounts.AccountManagerCallback, android.os.Handler)":"android.accounts.accountmanager.getauthtoken（android.accounts.accounts.account，java.lang.string，android.os.os.bundle，boolean，android.account.accountmanagercolds.accountmanagercallback，android.os.handler）\r\n"," broadcast when\n the a AppWidget for this provider is instantiated.":" 何时广播\r\n 该提供商的Appwidget是实例化的。\r\n","This is the amount of deceleration to add when easing in.":"这是放松时要添加的减速量。\r\n","android.animation.LayoutTransition.DISAPPEARING":"android.animation.layouttransition.disapperation\r\n","Return the maximum LE advertising data length in bytes,\n            if LE Extended Advertising feature is supported, 0 otherwise.":"返回字节中的最大LE广告数据长度，\r\n            如果支持扩展广告功能，则否则为0。\r\n","A long in the extras delivered by ":"由\r\n","Returns a mapping of schema types to the set of packages that have access to that schema\n            type.":"将模式类型的映射返回到有访问该模式的软件包集\r\n            类型。\r\n","#onRestore(BackupDataInput, int, android.os.ParcelFileDescriptor)":"#onrestore（backupDatainput，int，android.os.parcelfiledScriptor）\r\n"," previously registered\n            with ":" 先前注册\r\n            和\r\n","Set the ActionBar's split background.":"设置动作栏的拆分背景。\r\n","android.app.AutomaticZenRule.AutomaticZenRule(java.lang.String, android.content.ComponentName, android.net.Uri, int, boolean)":"android.app.automaticzenrule.automaticzenrule（java.lang.string，android.content.componentname，android.net.uri，int，int，boolean）\r\n","The color for the dates of the focused month.":"重点月份的日期的颜色。\r\n","android.app.TabActivity.getTabWidget()":"android.app.tabactivity.getTabwidget（）\r\n","android.app.usage.StorageStatsManager.queryStatsForUser(java.util.UUID, android.os.UserHandle)":"android.app.usage.storagestatsmanager.querystatsforuser（java.util.uuid，android.os.userhandle）\r\n","Drawable to use for the Copy action button in Contextual Action Bar \n         ":"可用于上下文动作栏中的复制操作按钮\r\n         \r\n","The preferred right bound for an expandable list child's indicator.":"首选的右键限制为可扩展的列表儿童指标。\r\n","Wait for an existing ":"等待现有\r\n","is INFINITE\n or a positive value, the animation restarts from the beginning.":"是无限的\r\n 或一个正值，动画从一开始就重新开始。\r\n","AKA":"又名\r\n","android.app.slice.SliceProvider":"android.app.slice.sliceprovider\r\n","Bluetooth Assigned Numbers.":"蓝牙分配的数字。\r\n","Returns the milliseconds elapsed since the start of the animation. -or- Sets the position of the animation to the specified point in time.":"自动画开始以来，返回经过的毫秒。 - 或 - 将动画的位置设置为指定的时间点。\r\n","Returns the current ActionBar title in standard mode.":"以标准模式返回当前的动作栏标题。\r\n","Broadcast action: sent when the device owner is set, changed or cleared.":"广播操作：设置所有者设置，更改或清除时发送。\r\n","android.app.FragmentController.dispatchPictureInPictureModeChanged(boolean, android.content.res.Configuration)":"android.app.fragmentController.disPatchPictureInPictureModechanged（boolean，android.content.res.res.configuration）\r\n","android.app.Activity.startActionMode(android.view.Callback)":"android.app.activity.startactionmode（android.view.callback）\r\n"," then the server requested authorization and the application must use information\n            found in ":" 然后服务器要求授权，应用程序必须使用信息\r\n            在发现\r\n","android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_UNREDACTED_NOTIFICATIONS":"android.app.admin.devicepolicymanager.keyguard_disable_unredacted_notifications\r\n","android.bluetooth.BluetoothGatt.getServices()":"android.bluetooth.bluetoothgatt.getServices（）\r\n","android.app.ExpandableListActivity":"Android.App.ExpandableStristActivity\r\n","Intent action for starting a web search provider's settings activity.":"启动Web搜索提供商设置活动的意图行动。\r\n","Used as an optional string extra on ":"用作可选字符串额外的\r\n","The name of the class subclassing ":"班级子类的名称\r\n","android.app.ActivityManager.getLauncherLargeIconSize()":"android.app.activityManager.getLauncherLargeiconsize（）\r\n","android.app.ActivityManager":"Android.App.ActivityManager\r\n","android.app.WallpaperInfo.getSettingsActivity()":"android.app.wallpaperinfo.getSetTingsActivity（）\r\n","The user has performed a two-finger swipe left gesture on the touch screen.":"用户在触摸屏上执行了两指滑动左手势。\r\n",", for your application's most important items that require the\n user's prompt attention or input.":"，对于您应用程序的最重要项目\r\n 用户的及时注意或输入。\r\n","Get the fragment's list view widget.":"获取片段的列表视图小部件。\r\n"," errors from Java.\n          Additionally, even though you can implement ":" Java的错误。\r\n          此外，即使您可以实施\r\n","android.app.appsearch.exceptions.AppSearchException.AppSearchException(int, java.lang.String, java.lang.Throwable)":"android.app.app.appsearch.exceptions.appsearchexception.appsearchexception（int，java.lang.string，java.lang.throwable.throwable）\r\n","#setCancelable(boolean) cancelable":"#setCancelable（布尔）可取消\r\n","Sets and persist the night mode for this application.":"设置并坚持此应用程序的夜间模式。\r\n","android.app.Dialog.onPrepareOptionsMenu(android.view.Menu)":"android.app.dialog.onprepareoptionsmenu（android.view.menu）\r\n","android.app.usage.StorageStats.getDataBytes()":"android.app.usage.storagestats.getDatabytes（）\r\n","This is the Android platform's MIME type for a URI\n            containing a slice implemented through ":"这是Android平台的URI MIME类型\r\n            包含通过\r\n","Destroy the activity associated with a particular id.":"破坏与特定ID相关的活动。\r\n","android.app.BackgroundServiceStartNotAllowedException.BackgroundServiceStartNotAllowedException(java.lang.String)":"Android.app.App.BackgroundServicestArtNotLallowedException.backgroundServicestArtNotAllowedException（java.lang.string）\r\n","android.app.slice.SliceSpec.getType()":"android.app.slice.SliceSpec.getType（）\r\n","Instance of this class is used to configure ":"此类的实例用于配置\r\n",", if\n            none.":"， 如果\r\n            没有任何。\r\n","android.animation.ValueAnimator.removeUpdateListener(android.animation.AnimatorUpdateListener)":"android.animation.ValueAnimator.RemoveUpDateListener（android.animation.animatorupdatelistener）\r\n","android.app.MediaRouteActionProvider":"Android.App.MediarouteactionProvider\r\n","Start a new activity running in the group.":"开始在小组中运行的新活动。\r\n"," to apply property paths to\n            all results, excepting any types that have had their own, specific property paths set.":" 将财产路径应用于\r\n            所有结果，除了具有自己的特定属性路径设置的任何类型外。\r\n","android.app.DownloadManager.ERROR_INSUFFICIENT_SPACE":"android.app.downloadmanager.Error_insuffficity_space\r\n","android.app.usage.NetworkStatsManager.querySummaryForDevice(int, java.lang.String, long, long)":"android.app.usage.networkstatsmanager.querysummaryfordevice（int，java.lang.string，长，长）\r\n","GetByDocumentIdRequest.Builder#addProjection":"getByDocumentIdrequest.builder＃addProcotion\r\n","The account type this authenticator handles.":"帐户类型此身份验证器处理。\r\n","android.app.ActivityOptions.setLaunchBounds(android.graphics.Rect)":"android.app.activityOptions.setLaunchBounds（android.graphics.Rect）\r\n","android.appwidget.AppWidgetManager.getInstance(android.content.Context)":"android.appwidget.appwidgetManager.getInstance（android.content.context）\r\n","SetPeerReference":"setPeerReference\r\n","android.app.DownloadManager.ERROR_UNKNOWN":"android.app.downloadmanager.error_unknown\r\n","Provides access to the centralized AppSearch index maintained by the system.":"提供对系统维护的集中式AppSearch索引的访问。\r\n","When an ":"当\r\n","Queries the supported commands available from the VoiceInteractionService.":"查询VoiceInteractionservice可用的支持命令。\r\n","android.accessibilityservice.AccessibilityService.GESTURE_SWIPE_UP_AND_RIGHT":"Android.AccessibilityService.Accessibilityservice.gesture_swipe_up_and_right\r\n","Specify one or more configuration changes that the activity will\n         handle itself.":"指定活动将会更改一个或多个配置\r\n         处理自己。\r\n","android.app.Fragment.onAttach(android.app.Activity)":"android.app.fragment.onattach（android.app.Activity）\r\n","\n            Authenticate using the specified challenge, request and credentials. This is currently not used by ":"\r\n            使用指定的挑战，请求和凭据进行身份验证。目前尚未使用\r\n"," from an existing instance.":" 来自现有实例。\r\n","Drawable to use as a frame around the window.":"可绘制以用作窗口周围的框架。\r\n","Use the fingerprint API.":"使用指纹API。\r\n","#ACTION_APPLICATION_DELEGATION_SCOPES_CHANGED":"#action_application_delegation_scopes_changed\r\n","Clears the frame statistics for the content of a given window.":"清除给定窗口内容的框架统计信息。\r\n","Background drawable that can be used for a transparent activity to\n         be able to display a light UI: this lightens its background to make\n         a light UI more visible.":"可用于可用于透明活动的背景\r\n         能够显示一个轻ui：这会减轻其背景以制作\r\n         轻型UI更明显。\r\n","Context menu ID for the \"Copy URL\" menu item to copy the currently\n       selected URL from the text view to the clipboard.":"“复制URL”菜单项的上下文菜单ID用于复制当前\r\n       从文本视图到剪贴板的选定URL。\r\n","Intent used to broadcast the change in the Playing state of the A2DP\n            profile.":"目的用于广播A2DP的游戏状态的变化\r\n            轮廓。\r\n","Asks the user to enter a new password for an account, updating the\n            saved credentials for the account.":"要求用户输入一个帐户的新密码，更新\r\n            保存了该帐户的凭据。\r\n","android.app.DownloadManager.ACTION_DOWNLOAD_COMPLETE":"android.app.downloadmanager.action_download_complete\r\n","Grant permission to access a specific slice Uri to another package.":"授予访问特定切片URI到另一个软件包的权限。\r\n","Denotes visual feedback.":"表示视觉反馈。\r\n","BackupAgent#onRestore(BackupDataInput, int, android.os.ParcelFileDescriptor) onRestore()":"备份＃onrestore（backupdatainput，int，android.os.parcelfiledescriptor）onrestore（）\r\n","android.app.Notification.EXTRA_DECLINE_INTENT":"android.app.notification.extra_decline_intent\r\n","android.graphics.Color":"Android.graphics.Color\r\n","android.app.NotificationChannel.getImportance()":"android.app.notificationChannel.getImportance（）\r\n","android.accounts.AuthenticatorDescription.type":"android.accounts.authenticatordescription.type\r\n","The minimal date shown by this calendar view in mm/dd/yyyy format.":"此日历视图以mm/dd/yyyy格式显示的最小日期。\r\n","Capability: This accessibility service can capture gestures from the fingerprint sensor":"功能：此可访问性服务可以从指纹传感器中捕获手势\r\n","android.app.WallpaperManager.setResource(int)":"android.app.wallpapermanager.setresource（int）\r\n","android.app.AppOpsManager.OPSTR_USE_FINGERPRINT":"android.app.appopsmanager.opptr_use_fingerprint\r\n","Small indicator RatingBar style.":"小指示灯分级栏样式。\r\n","android.accounts.AccountManager.addAccountExplicitly(android.accounts.Account, java.lang.String, android.os.Bundle)":"android.accounts.accountmanager.addaccountexplicly（android.accounts.accounts.account，java.lang.string，android.os.os.bundle）\r\n","Specify whether an activity should be finished when a \"close system\n         windows\" request has been made.":"指定“关闭系统”时是否应完成活动\r\n         Windows“已提出请求。\r\n","android.animation.Keyframe.ofObject(float)":"android.animation.keyframe.Ofobject（float）\r\n","android.app.FragmentTransaction.commitNow()":"android.app.fragmentTransaction.commitnow（）\r\n","android.app.Activity.onEnterAnimationComplete()":"android.app.Activity.OntioneranimationComplete（）\r\n","#startIntentSenderForResult(IntentSender, int,\n            Intent, int, int, int, Bundle)":"#startintestentsenderforresult（Intententsendender，int，\r\n            意图，int，int，int，捆绑包）\r\n","Interface for an ":"An的接口\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_MODE":"android.app.admin.devicepolicymanager.extra_provisioning_mode\r\n","android.accessibilityservice.AccessibilityService.getSystemActions()":"android.accosconibilityservice.Accesseribilityservice.getSystemactions（）\r\n","Dismiss the Keyboard Shortcuts screen.":"解散键盘快捷屏幕。\r\n","If true, allows the drawable's padding to change based on the\n             current state that is selected.":"如果为true，则允许可绘制的填充根据\r\n             选择的当前状态。\r\n","Starting with ":"从...开始\r\n","Return the current vertical offset of the action bar. -or- Set the current hide offset of the action bar.":"返回动作栏的当前垂直偏移。 - 或设置动作栏的当前隐藏偏移。\r\n","android.app.admin.DevicePolicyManager.getAutoTimeZoneEnabled(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getautotimezoneenabled（android.content.componentname）\r\n","android.accessibilityservice.AccessibilityService.SHOW_MODE_AUTO":"Android.AccessibilityService.Accesseribilityservice.show_mode_auto\r\n","; otherwise, does nothing.\n    ":";否则，什么都不做。\r\n    \r\n","android.app.Dialog.onOptionsMenuClosed(android.view.Menu)":"android.app.dialog.onoptionsmenuclosed（android.view.menu）\r\n","Hint to indicate that this slice is incomplete and an update will be sent once\n            loading is complete.":"提示表明此切片不完整，并且将发送一次更新\r\n            加载已完成。\r\n","android.app.usage.UsageStatsManager.queryConfigurations(int, long, long)":"android.app.usage.usagestatsmanager.queryConfigurations（int，long，long）\r\n","android.app.admin.DevicePolicyManager.setSystemSetting(android.content.ComponentName, java.lang.String, java.lang.String)":"android.app.admin.devicepolicymanager.setsystemsetting（android.content.componentname，java.lang.string，java.lang.string）\r\n","android.app.admin.DevicePolicyManager.getCrossProfilePackages(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getCrossprofilepackages（android.content.componentname）\r\n","android.app.NotificationChannelGroup.getDescription()":"Android.App.NotificationChannelGroup.getDescription（）\r\n","Called by the system when the properties of the ":"当系统调用当\r\n","android.app.WallpaperInfo.getComponent()":"android.app.wallpaperinfo.getComponent（）\r\n","android.R.styleable#AndroidManifestService_useAppZygote android:useAppZygote":"Android.r.Stylable＃AndroidManifestService_useappzygote android：useappzygote\r\n","android.app.Notification.getAllowSystemGeneratedContextualActions()":"android.app.notification.getallowsystemeneratedContextualactions（）\r\n","Change the format of the small text showing the percentage of progress.":"更改显示进度百分比的小文本格式。\r\n","android.app.NotificationManager.createNotificationChannelGroup(android.app.NotificationChannelGroup)":"android.app.notificationManager.CreatenotificationChannelGroup（Android.App.NotificationChannelGroup）\r\n","Drawable to use for multiple choice indicators.":"可用于多项选择指标。\r\n","android.accounts.AccountManager.getPassword(android.accounts.Account)":"android.accounts.accountmanager.getPassword（android.accounts.account）\r\n","Defines how many columns to show.":"定义要显示多少列。\r\n","A flag indicating the animation that runs on those items that are changing\n due to a layout change not caused by items being added to or removed\n from the container. ":"指示动画在那些正在更改的项目上运行的旗帜\r\n 由于布局更改不是由添加或删除的项目引起的\r\n 从容器中。\r\n","Save an AnrInfo instance to a parcel.":"将Anrinfo实例保存到包裹中。\r\n","android.app.appsearch.ReportSystemUsageRequest.getNamespace()":"android.app.appsearch.reportsystemusagerequest.getnamespace（）\r\n"," that has no title bar and\n         no status bar \n":" 没有标题栏\r\n         没有状态栏\r\n\r\n","Allows applications to set the wallpaper hints \n":"允许应用程序设置壁纸提示\r\n\r\n","The preferred list item height.":"首选列表项目高度。\r\n","android.app.admin.DnsEvent.getTotalResolvedAddressCount()":"android.app.admin.dnsevent.getTotalResolvedAddressCount（）\r\n","android.app.Activity.requestVisibleBehind(boolean)":"Android.App.Activity.RequestvisibleBehind（布尔值）\r\n"," for all failed\n            individual results.":" 所有失败\r\n            个人结果。\r\n","android.app.AppOpsManager.noteProxyOp(java.lang.String, java.lang.String)":"android.app.appopsmanager.noteproxyop（java.lang.string，java.lang.string）\r\n","Last proportional set size of the memory that the process had used in kB.":"该过程在KB中使用的内存的最后一个比例集大小。\r\n","Gets the hardware configurations the device was in for the given time range, aggregated by\n            the specified interval.":"获取设备在给定时间范围内的硬件配置，由\r\n            指定的间隔。\r\n","android.app.TimePickerDialog":"Android.App.TimePickerDialog\r\n","android.bluetooth.BluetoothDevice.connectGatt(android.content.Context, boolean, android.bluetooth.BluetoothGattCallback, int)":"android.bluetooth.bluetoothdevice.connectgatt（android.content.context，boolean，android.bluetooth.bluetooth.bluetoothgattcallback，int）\r\n","The maximal date shown by this calendar view in mm/dd/yyyy format.":"此日历视图以mm/dd/yyyy格式显示的最大日期。\r\n","android.app.AppOpsManager.WATCH_FOREGROUND_CHANGES":"android.app.appopsmanager.watch_foreground_changes\r\n","Sets whether this dialog is canceled when touched outside the window's\n            bounds.":"设置该对话框是否在窗口外触摸时取消\r\n            边界。\r\n","android.app.job.JobInfo.getMinLatencyMillis()":"android.app.job.jobinfo.getminlatencymillis（）\r\n","android.accounts.AuthenticatorDescription.smallIconId":"android.accounts.authenticatordescription.smalliconid\r\n","FragmentManager#findFragmentByTag(String)\n            FragmentManager.findFragmentByTag(String)":"FragmentManager＃findfragmentbytag（字符串）\r\n            fragmentManager.findfragmentByTag（字符串）\r\n","android.app.ApplicationErrorReport.type":"android.app.ApplicationErroreport.type\r\n","Writes a given characteristic and its values to the associated remote device.":"将给定的特征及其值写入关联的远程设备。\r\n","android.app.Dialog.onContextItemSelected(android.view.MenuItem)":"android.app.dialog.oncontextitemselected（android.view.menuitem）\r\n","android.app.Notification.priority":"android.app.notification.priority\r\n","Starts a new or restarts an existing ":"启动新的或重新启动现有\r\n","Whether the calendar view is shown.":"是否显示了日历视图。\r\n","android.app.FragmentManager.popBackStack(int, int)":"Android.App.FragmentManager.PopBackStack（int，int）\r\n","android.accounts.AccountManager.peekAuthToken(android.accounts.Account, java.lang.String)":"android.accounts.accountmanager.peekauthtoken（android.accounts.accounts.account，java.lang.string）\r\n","android.app.ActivityManager.setWatchHeapLimit(long)":"android.app.activityManager.setWatchHeaPlimit（long）\r\n","Return true if LE 2M PHY feature is supported.":"如果支持LE 2M PHY功能，则返回true。\r\n","Grants access to selection of KeyChain certificates on behalf of requesting apps.":"授予代表请求应用程序选择钥匙扣证书的选择。\r\n"," have been called).":" 被称为）。\r\n","Class to handle interactions with ":"处理与与之互动的课程\r\n","Determine for how long the user will be able to use secondary, non strong auth for\n            authentication, since last strong method authentication (password, pin or pattern) was used.":"确定用户将能够使用次要的非强验证的时间\r\n            身份验证，因为使用了最后一个强方法身份验证（密码，引脚或图案）。\r\n","A class that represents a DNS lookup event initiated through the standard network stack.":"代表通过标准网络堆栈启动的DNS查找事件的类。\r\n","Restore one record [representing a single file] from the restore dataset.":"还原从还原数据集中的一个记录[表示一个文件]。\r\n","android.app.SearchManager.MENU_KEYCODE":"android.app.searchmanager.menu_keycode\r\n","Secondary text color.":"次要文本颜色。\r\n","A boolean extra indicating if the education screens from the provisioning flow should be\n            skipped.":"布尔值额外指示供应流程中是否应该从事教育屏幕\r\n            跳过。\r\n","This method is for use in emulated process environments.":"此方法用于模拟过程环境。\r\n","android.app.Instrumentation.sendKeySync(android.view.KeyEvent)":"android.app.instrumentation.sendkeysync（android.view.keyevent）\r\n"," if one is set, else the default Intent obtained from\n            ":" 如果设置一个，则否则从\r\n            \r\n","Cause this Activity to be recreated with a new instance.":"使此活动通过新实例重新创建。\r\n","android.bluetooth.BluetoothAdapter.EXTRA_STATE":"android.bluetooth.bluetoothadapter.extra_state\r\n","android.accessibilityservice.AccessibilityService.GLOBAL_ACTION_NOTIFICATIONS":"Android.AccessibilityService.Accessibilityservice.global_action_notifications\r\n","Returns the hardware address of the local Bluetooth adapter.":"返回本地蓝牙适配器的硬件地址。\r\n","Gets the name of the package where the suggestion provider lives,\n            or ":"获取建议提供商居住的包裹的名称，\r\n            或者\r\n","android.content.BroadcastReceiver":"android.content.Broadcastreceiver\r\n","Makes the TextView be exactly this many pixels wide.":"使文本视图正是这么多像素宽。\r\n","android.app.AlertDialog.setButton(java.lang.CharSequence, android.os.Message)":"android.app.alertdialog.setButton（java.lang.charsequence，android.os.os.message）\r\n","Begin Holo theme styles \n Text Styles \n":"开始Holo主题样式\r\n 文字样式\r\n\r\n","The Android package of the caller will be set in the options bundle by the\n            ":"呼叫者的Android包将在选项包中设置\r\n            \r\n","android.accessibilityservice.AccessibilityService.GESTURE_3_FINGER_SWIPE_UP":"Android.AccessibilityService.Accessibilityservice.gesture_3_finger_swipe_up\r\n","android.app.Notification.EXTRA_PROGRESS_MAX":"android.app.notification.extra_progress_max\r\n","#setSystemUpdatePolicy":"#setsystemupdatepolicy\r\n","Return the target fragment set by ":"返回目标片段设置\r\n","android.app.FragmentController.findFragmentByWho(java.lang.String)":"Android.App.FragmentController.findfragmentbywho（java.lang.string）\r\n","android.app.admin.SecurityLog.TAG_KEYGUARD_DISMISSED":"android.app.admin.securitylog.tag_keyguard_dismissed\r\n","Intent used to broadcast the change in connection state of the A2DP\n            profile.":"目的用于广播A2DP的连接状态变化\r\n            轮廓。\r\n"," if the device supports attestation of device identifiers in addition\n            to key attestation.":" 如果设备支持设备标识符的证明\r\n            为了关键证明。\r\n","AppSearchSession#setSchema":"AppSearchSession＃SetSchema\r\n","android.app.FragmentManager.invalidateOptionsMenu()":"android.app.fragmentManager.invalidateOptionsMenu（）\r\n","android.app.Notification.EXTRA_TITLE":"android.app.notification.extra_title\r\n","App-ops are used for two purposes: Access control and tracking.":"App-Ops用于两个目的：访问控制和跟踪。\r\n","android.app.ApplicationExitInfo.REASON_ANR":"android.app.applicationexitinfo.reason_anr\r\n","android.accounts.AccountManager.addAccountExplicitly(android.accounts.Account, java.lang.String, android.os.Bundle, java.util.Map)":"android.accounts.accountmanager.addaccountexplicly（android.accounts.accounts.account，java.lang.string，android.os.os.bundle，java.util.map）\r\n"," extra holding the account to migrate during managed\n            profile provisioning.":" 额外持有该帐户在托管期间迁移\r\n            配置文件供应。\r\n","Item on EditText context menu.":"EditText上下文上下文菜单上的项目。\r\n"," key: this is the remote input history, as supplied to\n            ":" 关键：这是远程输入历史记录，提供给\r\n            \r\n","android.util.Property":"android.util.property\r\n","android.app.NotificationManager.getNotificationChannelGroups()":"android.app.notificationmanager.getNotificationChannelGroups（）\r\n","android.animation.LayoutTransition.CHANGE_DISAPPEARING":"android.animation.layouttransition.change_disappearing\r\n"," privilege), to grant an application access\n            to an already-installed (or generated) KeyChain key.":" 特权），授予申请访问\r\n            到已经安装的（或生成）键链密钥。\r\n","android.app.FragmentTransaction.add(int, android.app.Fragment, java.lang.String)":"android.app.FragmentTransaction.Add（int，android.app.fragment，java.lang.string）\r\n","android.animation.PropertyValuesHolder.setConverter(android.animation.TypeConverter)":"android.animation.propertyvaluesholder.setConverter（android.animation.typeconverter）\r\n","android.app.AppOpsManager.OPSTR_READ_PHONE_STATE":"android.app.appopsmanager.opptr_read_phone_state\r\n","android.app.Dialog.findViewById(int)":"android.app.dialog.findviewbyid（int）\r\n","android.animation.TypeConverter.convert(java.lang.Object)":"android.animation.typeconverter.convert（java.lang.Object）\r\n","android.app.appsearch.GetByDocumentIdRequest.PROJECTION_SCHEMA_TYPE_WILDCARD":"android.app.app.appsearch.getByDocumentIdrequest.proctiond_schema_type_wildcard\r\n",": go to the normal\n            home activity as part of the disable.":"：去普通\r\n            家庭活动作为禁用的一部分。\r\n","Returns whether this animator is currently in a paused state.":"返回该动画师当前是否处于暂停状态。\r\n","android.app.Dialog.setOnShowListener(android.content.OnShowListener)":"android.app.dialog.setonshowlistener（android.content.onshowlistener）\r\n","Defines the gravity to apply to the foreground drawable.":"定义重力以应用于可绘制的前景。\r\n","For jobs with ":"用于工作\r\n","android.app.admin.DevicePolicyManager.isPackageSuspended(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.ispackagesuspended（android.content.componentname，java.lang.string）\r\n","Send a key event to the currently focused window/view and wait for it to\n            be processed.":"将关键事件发送到当前集中的窗口/视图，然后等待它\r\n            被处理。\r\n"," if this migrator's source type needs to be migrated to update from\n            currentVersion to finalVersion.":" 如果此迁移者的源类型需要迁移以从\r\n            最终的电流。\r\n","Ranked by timestamp of last usage, as reported by the app.":"该应用程序报道，按照最后使用时间戳进行排名。\r\n","android.app.admin.DevicePolicyManager.setUserIcon(android.content.ComponentName, android.graphics.Bitmap)":"android.app.admin.devicepolicymanager.setusericon（android.content.componentname，android.graphics.bitmap）\r\n","#addUserRestriction(ComponentName, String)":"#AdDuserrternity（ComponentName，String）\r\n","Default ScrollView style.":"默认滚动视图样式。\r\n","\n             used when an input method is connected to the text view.":"将输入方法连接到文本视图时使用。\r\n","scale of the view in the x direction.":"X方向的视图比例。\r\n","Ranked by app-provided document scores.":"按应用程序提供的文档分数排名。\r\n","android.app.Activity.finishActivityFromChild(android.app.Activity, int)":"android.app.activity.finishactivityfromchild（android.app.Activity，int）\r\n","Deprecated in favor of ":"弃用\r\n","A GATT operation failed, errors other than the above":"GATT操作失败了，以上错误\r\n","Additional features you can enable in an IME associated with an editor\n         to improve the integration with your application.":"您可以在与编辑器关联的IME中启用的其他功能\r\n         改善与应用程序的集成。\r\n","Class which the exception was thrown from.":"例外的课程。\r\n","Drawable used as a background for selected list items.":"可绘制用作选定列表项目的背景。\r\n","F:Android.Resource+Attribute.Padding":"F：android.resource+attribute.padding\r\n","android.app.admin.SecurityLog.TAG_CRYPTO_SELF_TEST_COMPLETED":"android.app.admin.securitylog.tag_crypto_self_test_completed\r\n","Allows an application to call any phone number, including emergency\n         numbers, without going through the Dialer user interface for the user\n         to confirm the call being placed.":"允许申请拨打任何电话号码，包括紧急情况\r\n         数字，无需浏览用户的拨号用户界面\r\n         确认打电话。\r\n","Returns the number of IP addresses returned from the DNS lookup event.":"返回从DNS查找事件返回的IP地址数量。\r\n","java.io.InputStream":"java.io.inputstream\r\n","android.app.Dialog.getContext()":"android.app.dialog.getContext（）\r\n","The number of activities in this task (including running).":"此任务中的活动数（包括运行）。\r\n","Sphere of visibility of this notification, which affects how and when the SystemUI reveals \n the notification's presence and contents in untrusted situations (namely, on the secure \n lockscreen).":"该通知的可见性领域，会影响Systemui揭示的方式和何时\r\n 在不受信任的情况下，通知的存在和内容（即在安全的情况下\r\n 锁屏）。\r\n","Amount of pixels by which the drop down should be offset horizontally.":"下拉列表应水平抵消的像素量。\r\n","Capability: This accessibility service can request touch exploration mode in which\n            touched items are spoken aloud and the UI can be explored via gestures.":"功能：此可访问性服务可以请求触摸探索模式\r\n            大声口头触摸的物品，可以通过手势探索UI。\r\n","Activity#onRestart":"活动＃onrestart\r\n","Broadcast sent when the device's UI has switched away from desk mode back\n            to normal mode.":"当设备的UI从桌面模式退回时，发送了广播\r\n            达到正常模式。\r\n","android.app.DialogFragment.getShowsDialog()":"android.app.dialogfragment.getShowsdialog（）\r\n","Set a custom view to be the contents of the Dialog.":"将自定义视图设置为对话框的内容。\r\n","Capability: This accessibility service can retrieve the active window content.":"功能：此可访问性服务可以检索活动窗口内容。\r\n"," key: this is the title of the notification,\n            as supplied to ":" 关键：这是通知的标题，\r\n            如提供\r\n","if listener is null":"如果听众为null\r\n","Flag indicating whether this window should fill the entire screen.":"标志指示此窗口是否应填充整个屏幕。\r\n","#stopForeground(int)":"#StopForeground（int）\r\n","android.app.admin.DevicePolicyManager.getRequiredPasswordComplexity()":"android.app.admin.devicepolicymanager.getRequiredPasswordcomplexity（）\r\n","android.app.assist.AssistContent.setWebUri(android.net.Uri)":"android.app.assist.assistcontent.setweburi（android.net.uri）\r\n","The user has performed a three-finger  triple-tap and hold gesture on the touch screen.":"用户已经执行了三指三击，并在触摸屏上保持手势。\r\n","android.app.AutomaticZenRule":"Android.App.AutomationZenrule\r\n","android.animation.Animator.getListeners()":"android.animation.animator.getListeners（）\r\n","android.bluetooth.BluetoothGattCharacteristic.getFloatValue(int, int)":"android.bluetooth.bluetoothgattcharacteristic.getFloatValue（int，int）\r\n","android.app.blob.BlobHandle.getTag()":"android.app.blob.blobhandle.getTag（）\r\n","android.app.Activity.setInheritShowWhenLocked(boolean)":"android.app.activity.setinherithodhowwhenlocked（boolean）\r\n","android.animation.Animator.addPauseListener(android.animation.AnimatorPauseListener)":"android.animation.animator.Addpauselistener（android.animation.animatorpauselistener）\r\n","android.app.Service.startForeground(int, android.app.Notification, int)":"android.app.service.startforeground（int，android.app.notification，int）\r\n","Retrieves the property value with the given path as ":"用给定路径检索属性值\r\n","This method is called whenever a navigation item in your action bar\n is selected.":"每当您的操作栏中的导航项目\r\n 选择。\r\n","#KEY_ACCOUNT_NAME":"#KEY_ACCOUNT_NAME\r\n","Determines whether this widget can be displayed on the home screen, the keyguard, or both.":"确定该小部件是否可以在主屏幕，钥匙编号或两者兼而有之。\r\n"," as the\n            serial number of the its ancestral work profile or ":" 作为\r\n            其祖先工作概况的序列号或\r\n","Specify the order in which content providers hosted by a process\n         are instantiated when that process is created.":"指定内容提供商在哪个过程中托管的顺序\r\n         创建该过程时会实例化。\r\n"," from a bitmap.":" 从位图。\r\n","Standard navigation mode. ":"标准导航模式。\r\n","android.app.FragmentManager.addOnBackStackChangedListener(android.app.OnBackStackChangedListener)":"android.app.fragmentManager.addonbackStackChangedListener（android.app.onback.onbackstackchangedlistener）\r\n","Called by a device owner to bind to a service from a secondary managed user or vice versa.":"设备所有者呼吁从二级托管用户绑定到服务，反之亦然。\r\n","Set a listener to be invoked when the positive button of the dialog is pressed.":"按下对话框的正按钮时，设置侦听器将被调用。\r\n","A coordinate in the Y dimension.":"y维中的坐标。\r\n","android.app.appsearch.SearchSpec.getMaxSnippetSize()":"android.app.appsearch.searchspec.getmaxsnippetsize（）\r\n","android.app.AppOpsManager.OPSTR_RECEIVE_SMS":"android.app.appopsmanager.opptr_receive_sms\r\n",", no custom \n            trust manager will be created since that would make all the HTTPS requests fail.\n            ":"，没有习俗\r\n            将创建信任管理器，因为这将使所有HTTPS请求失败。\r\n            \r\n","Base class for presentations.":"演示文稿的基础课。\r\n","\n          Whether or not all activities will be removed from the task, except\n          for the root activity, whenever it is re-launched from the home\n          screen.\n        ":"\r\n          除了所有活动是否将从任务中删除\r\n          对于根活动，每当从家重新启动时\r\n          屏幕。\r\n        \r\n","Characteristic permission: Allow signed write operations with\n            person-in-the-middle protection":"特征许可：允许签名的写操作\r\n            中间人保护\r\n","android.app.admin.DevicePolicyManager.getAlwaysOnVpnLockdownWhitelist(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getalwaysonvpnlockdownwhitelist（android.content.componentname）\r\n","NotificationChannelGroup#isBlocked() blocked":"NotificationChannelGroup＃iSblocked（）阻止\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_PROXY_BYPASS":"android.app.admin.devicepolicymanager.extra_provisioning_wifi_proxy_bypass\r\n","Scale width, expressed as a percentage of the drawable's bound.":"比例宽度，表示为可绘制的界限的百分比。\r\n","Defines the horizontal scrollbar thumb drawable.":"定义水平卷轴拇指可绘制。\r\n","Class for interacting with the device's UI by simulation user actions and\n            introspection of the screen content.":"通过模拟用户操作与设备UI交互的类\r\n            屏幕内容的内省。\r\n","Default light theme for panel windows (on API level 10 and lower).":"面板窗口的默认灯主题（在API级别10及较低）。\r\n","android.animation.AnimatorSet.isRunning()":"android.animation.animatortatorset.isrunning（）\r\n","android.appwidget.AppWidgetHost.clearViews()":"android.appwidget.appwidgethost.clearviews（）\r\n","Report the completion of executing a ":"报告执行的完成\r\n","Account handles its own token storage and permissions.":"帐户处理自己的令牌存储和权限。\r\n","android.app.Fragment.onInflate(android.app.Activity, android.util.AttributeSet, android.os.Bundle)":"android.app.fragment.oninflate（android.app.Activity，android.util.attributeset，android.os.bundle）\r\n","Reference to an array resource that be used to announce the directions with targets around the circle.":"引用用于宣布指示的数组资源，并带有圆圈周围的目标。\r\n",",\n        and this count is decremented whenever a JNI Local Reference is\n        destroyed, e.g. from\n        ":"，，，，\r\n        每当JNI本地参考为\r\n        被摧毁，例如从\r\n        \r\n","The minimal period in milliseconds between two accessibility events of the same type\n             are sent to this serivce.":"在同一类型的两个可访问性事件之间的最小时间\r\n             被发送到这个宁静。\r\n","android.app.Fragment.setInitialSavedState(android.app.SavedState)":"android.app.fragment.setinitialsavedstate（android.app.savedstate）\r\n","android.app.NotificationChannel.getSound()":"android.app.notificationChannel.getSound（）\r\n","\n        This property ":"\r\n        这个性质\r\n","Set the screen content to an explicit view.":"将屏幕内容设置为显式视图。\r\n","Notification category: tracking a user's workout.":"通知类别：跟踪用户的锻炼。\r\n","android.app.Dialog.hide()":"android.app.dialog.hide（）\r\n","Gets an auth token from the AccountManager's cache.":"从AccountManager的缓存中获取auth令牌。\r\n","Constant representing that today is the conversation user's birthday.":"不断代表今天的是对话用户的生日。\r\n","\n        property is NOT valid when ":"\r\n        当属性无效时\r\n"," privilege), to deny using a KeyChain key\n            pair for authentication to Wifi networks.":" 特权），拒绝使用钥匙扣密钥\r\n            配对进行身份验证与WiFi网络。\r\n","Listener interface for ActionBar navigation events.":"操作栏导航事件的侦听器界面。\r\n","Used to make this class parcelable.":"用于使此类包裹。\r\n","This API can be called by the following to generate a new private/public key pair:\n            <ul>\n               <li>Device owner</li>\n               <li>Profile owner</li>\n               <li>Delegated certificate installer</li>\n               <li>Credential management app</li>\n            </ul>\n            If the device supports key generation via secure hardware, this method is useful for\n            creating a key in KeyChain that never left the secure hardware.":"以下可以调用此API以生成新的私有/公钥对：\r\n            <ul>\r\n               <li>设备所有者</li>\r\n               <li>个人资料所有者</li>\r\n               <li>委派证书安装程序</li>\r\n               <li>凭证管理应用程序</li>\r\n            </ul>\r\n            如果设备通过安全硬件支持密钥生成，则此方法对\r\n            创建一个从未离开安全硬件的钥匙链中的键。\r\n","Sets the alpha on the items that are not selected.":"在未选择的项目上设置alpha。\r\n"," has\n            been detached from the fragment.":" 有\r\n            从碎片中分离。\r\n","android.app.DownloadManager.COLUMN_MEDIA_TYPE":"android.app.downloadmanager.column_media_type\r\n"," groups.":" 小组。\r\n","android.app.job.JobWorkItem.JobWorkItem(android.content.Intent)":"android.app.job.jobworkitem.jobworkitem（android.content.intent）\r\n","Email address types from android.provider.":"来自android.provider的电子邮件地址类型。\r\n","Return the current ":"返回电流\r\n","Widget is resizable in the horizontal axis only.":"小部件仅在水平轴上重新分辨。\r\n","android.app.Activity.onMenuOpened(int, android.view.Menu)":"android.app.activity.onmenuopened（int，android.view.menu）\r\n","android.bluetooth.BluetoothA2dp.getConnectedDevices()":"android.bluetooth.bluetootha2dp.getConnectedDevices（）\r\n","android.app.backup.BackupAgentHelper.addHelper(java.lang.String, android.app.backup.BackupHelper)":"android.app.backup.backupagenthelper.addhelper（java.lang.string，android.app.backup.backuphelper）\r\n","android.app.Activity.setTitle(java.lang.CharSequence)":"android.app.activity.settitle（java.lang.charsequence）\r\n","A String extra holding the password of the wifi network in\n            ":"字符串额外保留WiFi网络的密码\r\n            \r\n","android.app.admin.DevicePolicyManager.DELEGATION_BLOCK_UNINSTALL":"android.app.admin.devicepolicymanager.delegation_block_uninstall\r\n","Standard game mode means the platform will use the game's default\n            performance characteristics.":"标准游戏模式意味着平台将使用游戏的默认值\r\n            性能特点。\r\n","Finds a fragment that was identified by the given tag either when inflated\n            from XML or as supplied when added in a transaction.":"找到一个被给定标签识别出的片段\r\n            从XML或在交易中添加时提供的。\r\n","#getPersonalAppsSuspendedReasons":"#getPersonalappssuspendedr季节\r\n","Returns whether Picture-in-Picture is stashed or not.":"返回图片中是否被藏匿。\r\n","android.app.ApplicationErrorReport.processName":"Android.App.ApplicationErroreport.ProcessName\r\n","Retrieve the current maximum number of login attempts that are allowed before the device\n            or profile is wiped, for a particular admin or all admins that set restrictions on this user\n            and its participating profiles.":"检索设备之前允许的当前最大登录尝试\r\n            或配置文件是擦除的，对于特定的管理员或所有设置此用户限制的管理员\r\n            及其参与概况。\r\n","android.app.admin.SecurityLog.LEVEL_INFO":"android.app.admin.securitylog.level_info\r\n","android.bluetooth.BluetoothDevice.createRfcommSocketToServiceRecord(java.util.UUID)":"android.bluetooth.bluetoothdevice.createrfcommsockettoservicerecord（java.util.uuid）\r\n","Optional parameter which indicates where this widget can be shown,\n             ie. home screen, keyguard or both.\n             resized.":"可选参数，该参数指示可以在何处显示该小部件的位置，\r\n             IE。主屏幕，钥匙弹或两者兼而有之。\r\n             调整大小。\r\n","Reset the dynamically overloaded resources, reverting to the default values for\n            all the colors.":"重置动态超载资源，恢复到默认值\r\n            所有的颜色。\r\n","Value of COLUMN_ERROR_CODE when the download has completed with an error that doesn't fit\n under any other error code.":"column_error_code的值当下载完成时，错误\r\n 在任何其他错误代码下。\r\n","Start the dialog and display it on screen.":"启动对话框并在屏幕上显示。\r\n","android.app.NotificationManager.notify(int, android.app.Notification)":"android.app.notificationmanager.notify（int，android.app.notification）\r\n","Whether this is a toggle key.":"这是否是一个切换键。\r\n","android.accessibilityservice.AccessibilityService.GESTURE_UNKNOWN":"Android.AccessibilityService.Accessibilityservice.gesture_unknown\r\n"," to allow activities in\n            the managed profile to access intents sent from the parent profile.":" 允许活动\r\n            托管配置文件以访问从父个人资料发送的访问意图。\r\n","android.app.UiAutomation.dropShellPermissionIdentity()":"android.app.uiautomation.dropshellpermissionsidentity（）\r\n","if the authenticator experienced an I/O problem\n     creating a new auth token, usually because of network trouble\n":"如果身份验证者遇到了I/O问题\r\n     创建一个新的身份令牌，通常是由于网络麻烦\r\n\r\n","The message in the dialog.":"对话框中的消息。\r\n","#PERMISSION_GRANT_STATE_DEFAULT":"#permission_grant_state_default\r\n","#getAllowedDataTypes":"#getalloweddatatypes\r\n"," extra of type ":" 额外的类型\r\n"," and related methods.":" 和相关方法。\r\n","android.accessibilityservice.AccessibilityService.GLOBAL_ACTION_LOCK_SCREEN":"Android.AccessibilityService.Accessibilityservice.global_action_lock_screen\r\n"," property\n          should always refer to the same Java instance.\n          (Multiple different JNI handle values may refer to the same\n          Java instance.)\n        ":" 财产\r\n          应始终参考相同的Java实例。\r\n          （多个不同的JNI句柄值可能是指相同\r\n          Java实例。）\r\n        \r\n","android.bluetooth.BluetoothAdapter.closeProfileProxy(int, android.bluetooth.BluetoothProfile)":"android.bluetooth.bluetoothadapter.closeprofileproxy（int，android.bluetooth.bluetoothprofile）\r\n","android.app.NotificationChannel.EDIT_IMPORTANCE":"Android.App.NotificationChannel.edit_importance\r\n","Return the FragmentManager for interacting with fragments associated\n            with this activity.":"返回fragmentManager与相关的片段交互\r\n            与此活动。\r\n","android.app.Activity.overridePendingTransition(int, int)":"Android.App.Activity.OverridePendentransition（INT，INT）\r\n","android.app.appsearch.SearchSpec.ORDER_DESCENDING":"android.app.appsearch.searchspec.order_descending\r\n","android.app.Notification.getChannelId()":"android.app.notification.getChannelid（）\r\n","android.accessibilityservice.AccessibilityService.getSoftKeyboardController()":"Android.AccessibilityService.Accessibilityservice.getSoftKeyboardController（）\r\n","Delegation of package access state.":"包裹访问状态的委托。\r\n","Default RatingBar style.":"默认评分栏样式。\r\n","android.app.ActivityManager.moveTaskToFront(int, int, android.os.Bundle)":"android.app.activityManager.movetasktofront（int，int，android.os.bundle）\r\n","Defines whether the vertical scrollbar track should always be drawn.":"定义是否应始终绘制垂直滚动条轨道。\r\n","android.app.TaskStackBuilder.editIntentAt(int)":"android.app.taskStackBuilder.editintentat（int）\r\n","PackageManager#PERMISSION_DENIED":"PackageManager＃cermission_denied\r\n","Insufficient encryption for a given operation":"给定操作的加密不足\r\n","android.app.FragmentTransaction.setTransition(int)":"Android.App.FragmentTransaction.setTransition（INT）\r\n","if callback is null\n":"如果回调为null\r\n\r\n","android.accounts.AccountManager.removeOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener)":"android.accounts.accountmanager.removeonaccountsupdatedlistener（android.accounts.onaccountsupdatelistener）\r\n",": the process is not an expendable\n            background process, but the device is running low on memory.":"：该过程不是消耗的\r\n            背景过程，但是该设备在内存上运行较低。\r\n"," key: the person to be displayed for all messages sent by the user including\n            direct replies\n            ":" 关键：为用户发送的所有消息显示的人，包括\r\n            直接答复\r\n            \r\n","android.app.Activity.setExitSharedElementCallback(android.app.SharedElementCallback)":"android.app.activity.SetExitsharedElementCallback（android.app.sharedelementCallback）\r\n","AccessibilityNodeInfo#FOCUS_ACCESSIBILITY":"可访问性nodeinfo＃focus_accesconibility\r\n","Remove one or more currently set wallpapers, reverting to the system default\n            display for each one.":"删除当前设置壁纸的一个或多个，恢复到系统默认值\r\n            显示每个。\r\n","android.app.Activity.getParentActivityIntent()":"android.app.activity.getParentivityIntent（）\r\n","Constant representing that the conversation user has posted a new story.":"不断表示对话用户发布了一个新故事。\r\n","Returns true if this fragment is added and its state has already been saved\n            by its host.":"如果添加了此片段，并且已经保存了该片段，则返回true\r\n            由它的主人。\r\n","android.app.RecoverableSecurityException.RecoverableSecurityException(java.lang.Throwable, java.lang.CharSequence, android.app.RemoteAction)":"android.app.RecoverablesecurityException.RecoverablesecurityException（java.lang.throwable，java.lang.charsequence，android.app.remoteaction）\r\n","When opening a new activity that shows the wallpaper, while currently not showing the wallpaper, this is the animation that is run on the current activity (which is exiting the screen).":"当打开一个显示墙纸的新活动时，虽然目前没有显示墙纸，但这是在当前活动（正在退出屏幕）上运行的动画。\r\n","Boolean that controls whether a view can take focus.":"控制视图是否可以集中精力的布尔值。\r\n","android.app.Dialog.setCancelMessage(android.os.Message)":"android.app.dialog.setCancelMessage（android.os.message）\r\n","Called when a panel's menu is opened by the user.":"用户打开面板菜单时致电。\r\n","General failure to set the Private DNS mode, not due to one of the reasons listed above.":"一般未能设置私有DNS模式，而不是由于上述原因之一。\r\n","Radius of the top right corner.":"右上角的半径。\r\n","Defines the radius of the four corners.":"定义四个角落的半径。\r\n","A resource id of a label for the authenticator that is suitable for displaying":"适合显示的标签的标签资源ID\r\n","Ranked by document creation timestamps.":"按文档创建时间戳进行排名。\r\n",": also erase the device's external\n            storage (such as SD cards).":"：还删除设备的外部\r\n            存储（例如SD卡）。\r\n","android.app.DownloadManager.PAUSED_UNKNOWN":"android.app.downloadmanager.paused_unknown\r\n","android.app.Fragment.isResumed()":"android.app.fragment.isresumed（）\r\n","android.app.NotificationChannel.canBypassDnd()":"android.app.notificationChannel.canbypassdnd（）\r\n","The user has performed a three-finger double tap and hold gesture on the touch screen.":"用户已经执行了三指双击，并在触摸屏上保持手势。\r\n","FragmentTransaction#commitAllowingStateLoss()\n            FragmentTransaction.commitAllowingStateLoss()":"fragmentTransaction＃commandallowstateloss（）\r\n            fragmentTransaction.commitallowingstateloss（）\r\n","AnimatorSet":"Animatorset\r\n","ContentTitle":"ContentTitle\r\n",", but allows you to enqueue work for a new <em>or existing</em>\n            job.":"，但允许您招募新的<em>或现有</em>\r\n            工作。\r\n","android.app.WallpaperManager.setWallpaperOffsetSteps(float, float)":"android.app.wallpapermanager.setwallpapersoffsetsteps（float，float）\r\n","Specify a MIME type that is handled, as per\n             ":"指定处理的MIME类型，根据\r\n             \r\n","android.app.DownloadManager.ERROR_HTTP_DATA_ERROR":"android.app.downloadmanager.error_http_data_error\r\n","UsageEvents":"USAGEEVENTS\r\n","Set for a job that does not recur periodically, to specify a delay after which the job\n            will be eligible for execution.":"设置不重复的工作，以指定延迟之后的作业\r\n            将有资格执行。\r\n","Defines the calling interface that ":"定义调用接口\r\n","Whether long-pressing on this key will make it repeat.":"长时间在此键上是否会重复。\r\n","DragEvent":"dragevent\r\n","IOException":"ioException\r\n","The identifier for the positive button.":"正按钮的标识符。\r\n","Get the maximum number of results to return for each group.":"获取每个组返回的最大结果数。\r\n","#getCause()":"#getCause（）\r\n","#MODE_ALLOWED":"#mode_lowered\r\n",", it\n            is scheduled to be executed asynchronously on the process's main thread.":"， 它\r\n            计划在该过程的主线程上异步执行。\r\n","android.app.slice.SliceItem.getSlice()":"android.app.slice.sliceitem.getslice（）\r\n","Description of the operation that timed out.":"描述时机的操作。\r\n","adb shell <command>":"adb shell <命令>\r\n","Special theme constant for ":"特殊主题常数\r\n","android.app.WallpaperManager.setBitmap(android.graphics.Bitmap, android.graphics.Rect, boolean)":"android.app.wallpapermanager.setbitmap（android.graphics.bitmap，android.graphics.Rect，boolean）\r\n",": if set, the notification previously provided\n            to ":"：如果设置，则先前提供的通知\r\n            至\r\n","AppSearchResult":"AppSearchResult\r\n","android.app.RecoverableSecurityException.getUserAction()":"android.app.RecoverablesEcurityException.getUseraction（）\r\n","Helper class for building an options Bundle that can be used with\n            ":"用于构建可以与\r\n            \r\n","#setContentView":"#SetContentView\r\n","Return true if LE Periodic Advertising feature is supported.":"如果支持LE周期性广告功能，则返回true。\r\n","\n          A user-readable label for the application.\n        ":"\r\n          该应用程序的用户可读标签。\r\n        \r\n","#RESET_PASSWORD_DO_NOT_ASK_CREDENTIALS_ON_BOOT":"#Reset_password_do_not_ask_credentials_on_boot\r\n","Amount of left padding inside the gradient shape.":"梯度形状内的左填充量。\r\n","android.app.Service.getForegroundServiceType()":"android.app.service.getForegroundServiceType（）\r\n","Information you can retrieve about a particular task that is currently\n \"running\" in the system.":"您可以检索有关当前特定任务的信息\r\n 系统中的“运行”。\r\n","Returns (possibly a subset of) the IP addresses returned.":"返回（可能是一个子集）返回的IP地址。\r\n"," and taken as a parameter of  several types.":" 并作为几种类型的参数。\r\n"," from this \n            method in which case AndroidClientHandler will create its own instance of the trust manager factory provided that the ":" 由此\r\n            在这种情况下\r\n","Activity#onCreateOptionsMenu(Menu)":"活动＃onCreateOptionsMenu（菜单）\r\n"," containing the id\n            of the ":" 包含ID\r\n            的\r\n","Disables the specified transitionType for this LayoutTransition object.":"禁用此布局传输对象的指定过渡类型。\r\n","Identifier for the animation to use when a view is hidden.":"隐藏视图时要使用动画的标识符。\r\n","android.accessibilityservice.AccessibilityGestureEvent.gestureIdToString(int)":"Android.AccessibilityService.Accessibilitile gestureevent.gestureidtostring（int）\r\n","The call was successful.":"电话成功了。\r\n","#getResultsFromIntent":"#getResultsfromintent\r\n","Notification category: indication of running background service.":"通知类别：运行背景服务的指示。\r\n","android.app.Notification.headsUpContentView":"android.app.notification.headsupcontentview\r\n","android.app.Activity.finishAndRemoveTask()":"android.app.activity.finishandremovetask（）\r\n","Standard animations for a non-full-screen window or activity.":"非填充屏幕窗口或活动的标准动画。\r\n","android.app.AppOpsManager.isOpActive(java.lang.String, int, java.lang.String)":"android.app.appopsmanager.isopactive（java.lang.string，int，java.lang.string）\r\n","android.bluetooth.BluetoothDevice.DEVICE_TYPE_UNKNOWN":"android.bluetooth.bluetoothdevice.device_type_unknown\r\n","Save a CrashInfo instance to a parcel.":"将CrashInfo实例保存到包裹中。\r\n","\n            that allows easy access to authentication data as returned by the server, if any.\n            ":"\r\n            这可以轻松访问服务器返回的身份验证数据（如果有）。\r\n            \r\n","Generate a new description for this activity.":"为此活动生成新的描述。\r\n","If this task is currently running, this is the identifier for it.":"如果此任务当前正在运行，则是标识符。\r\n","If provided, enforces the maximum number of results to return, including the \"best\"\n             result which will always be provided as the SEARCH intent's primary query.":"如果提供，请执行最大返回的结果数，包括“最佳”\r\n             结果将始终作为搜索意图的主要查询提供。\r\n","android.app.NotificationChannelGroup.getName()":"android.app.notificationChannelGroup.getName（）\r\n","F:Android.App.DownloadManager+Query.SetFilterByStatus":"f：android.app.downloadmanager+query.setfilterbystatus\r\n","Request that your application's processes be created with\n             a large Dalvik heap.":"要求创建应用程序的流程\r\n             大dalvik堆。\r\n","android.app.admin.DevicePolicyManager.DELEGATION_CERT_INSTALL":"android.app.admin.devicepolicymanager.delegation_cert_install\r\n","The activity to launch that will configure the AppWidget.":"启动将配置AppWidget的活动。\r\n","This interface is used for listening to starting and ending events for transitions.":"该界面用于聆听用于过渡的启动和结束事件。\r\n","android.app.assist.AssistStructure.getWindowNodeCount()":"android.app.assist.Assistsurture.getWindownodeCount（）\r\n","android.app.appsearch.AppSearchSession.search(java.lang.String, android.app.appsearch.SearchSpec)":"android.app.app.appsearch.appsearchsession.search（java.lang.string，android.app.app.appsearch.searchspec）\r\n","Called by device or profile owners to get information about a pending system update.":"通过设备或配置文件所有者调用有关待处理系统更新的信息。\r\n","Custom divider drawable to use for elements in the action bar.":"可以在动作栏中绘制的自定义分隔器。\r\n","android.app.NotificationChannel.setImportance(int)":"Android.App.NotificationChannel.setimportance（INT）\r\n","Called by a device owner to specify whether logout is enabled for all secondary users.":"设备所有者打电话给所有次级用户是否启用了注销。\r\n"," is enabled, a\n            service will receive the motion events for each successfully-detected gesture.":" 已启用，一个\r\n            服务将收到每个成功检测的手势的运动事件。\r\n","AccountManagerFuture":"AccountManagerFuture\r\n","Add a listener that will be called when the bounds of the view change due to\n            layout processing.":"添加一个侦听器，当视图的范围变化时将被调用\r\n            布局处理。\r\n"," if the fragment's state needs to be saved.":" 如果需要保存碎片的状态。\r\n","android.app.UiAutomation.executeShellCommand(java.lang.String)":"android.app.uiautomation.executeshellcommand（java.lang.string）\r\n","android.app.admin.FactoryResetProtectionPolicy.isFactoryResetProtectionEnabled()":"android.app.admin.factoryResetProtectionpolicy.SisfactoryResetProtectionEnabled（）\r\n","Set a sort key that orders this notification among other notifications from the same package.":"设置一个排序键，以从同一软件包中订购此通知。\r\n",": also erase the factory reset protection\n            data.":"：还删除工厂重置保护\r\n            数据。\r\n","android.app.TabActivity.setDefaultTab(java.lang.String)":"android.app.tabactivity.setdefaulttab（java.lang.string）\r\n","Instantiates a Fragment's view.":"实例化片段的观点。\r\n","android.app.Instrumentation.callActivityOnPostCreate(android.app.Activity, android.os.Bundle, android.os.PersistableBundle)":"android.app.instrumentation.callactivityOnpostCreate（android.app.Activity，android.os.bundle，android.os.os.persistablebundle）\r\n","android.app.Activity.onPause()":"android.app.activity.onpause（）\r\n","Called by a profile owner of secondary user that is affiliated with the device to stop the\n            calling user and switch back to primary.":"由辅助用户的个人资料所有者调用，该辅助用户与设备有关联以停止\r\n            调用用户，然后切换回主。\r\n","Lets all Fragments managed by the controller's FragmentManager\n            know they should prepare their options menu for display.":"让所有片段由控制器的FragmentManager管理\r\n            知道他们应该准备他们的选项菜单以进行显示。\r\n","Get a sort key that orders this notification among other notifications from the\n            same package.":"获取一个排序键，该键在其他通知中订购此通知\r\n            相同的包裹。\r\n","#putFragment(Bundle, String, Fragment)":"#putfragment（捆绑，字符串，片段）\r\n","android.app.admin.DevicePolicyManager.addCrossProfileWidgetProvider(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.addcrossprofilewidgetProvider（android.content.componentname，java.lang.string）\r\n","Specify the visibility of the notification contents.":"指定通知内容的可见性。\r\n","Builder#setSmallIcon(int)":"建筑商＃setsmallicon（int）\r\n","Construct a RectEvaluator that returns a new Rect on every evaluate call.":"构建一个直肠词法器，该直肠词在每个评估呼叫上都返回新的一个高。\r\n","android.app.FragmentManager.getFragment(android.os.Bundle, java.lang.String)":"android.app.fragmentManager.getFragment（android.os.bundle，java.lang.string）\r\n","android.app.ApplicationExitInfo.getReason()":"android.app.applicationexitinfo.getReason（）\r\n","android.animation.LayoutTransition.isTransitionTypeEnabled(int)":"android.animation.layouttransition.istransitiontypeenabled（int）\r\n","Flag indicating whether this is a floating window.":"标志指示这是否是浮动窗口。\r\n","android.app.Instrumentation.callActivityOnStop(android.app.Activity)":"android.app.instrumentation.callactivityOnstop（android.app.Activity）\r\n","UserManager#USER_OPERATION_SUCCESS":"USERMANAGER＃user_operation_success\r\n","android.app.Notification.icon":"android.app.notification.icon\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_IMEI":"android.app.admin.devicepolicymanager.extra_provisioning_imei\r\n","The callback interface used to indicate the user is done filling in\n the time (they clicked on the 'Set' button).":"用于指示用户完成的回调接口填充\r\n 时间（他们单击“设置”按钮）。\r\n"," that doesn't return a result.":" 那不会返回结果。\r\n","Flatten this notification into a parcel.":"将此通知弄平到包裹中。\r\n","android.accessibilityservice.AccessibilityServiceInfo.eventTypes":"Android.AccessibilityService.AccessibilityserviceInfo.EventTypes\r\n","Represents the local device Bluetooth adapter.":"代表本地设备蓝牙适配器。\r\n","Return the current design dimensions for ":"返回当前的设计维度\r\n","The default height of a widget when added to a host, in units of launcher grid cells.":"将小部件的默认高度添加到主机，以发射器网格单元的单位。\r\n"," from the fragment's containing Activity.":" 从碎片的活动中。\r\n"," is not a JNI Local Reference.\n    ":" 不是JNI本地参考。\r\n    \r\n","android.app.DownloadManager.COLUMN_TOTAL_SIZE_BYTES":"android.app.downloadmanager.column_total_size_bytes\r\n","android.app.Activity.onBackPressed()":"android.app.activity.onbackpresse（）\r\n","android.app.ActivityManager.isLowMemoryKillReportSupported()":"android.app.activitymanager.islowmemorykillreportsupported（）\r\n","Returns the notification channel group settings for a given channel group id.":"返回给定通道组ID的通知通道组设置。\r\n","android.app.ApplicationErrorReport.packageName":"Android.App.ApplicationErroreport.packagename\r\n","Called periodically when the device or profile challenge password is about to expire\n            or has expired.":"当设备或配置文件挑战密码即将到期时定期调用\r\n            或已过期。\r\n","AppSearchSchema":"AppSearchSchema\r\n","BluetoothServerSocket":"蓝牙Serversocket\r\n","Lists the currently registered authenticators.":"列出当前注册的身份验证者。\r\n","Indicates whether the application can accommodate any screen\n             density.":"指示该应用程序是否可以容纳任何屏幕\r\n             密度。\r\n","Do a quick check to validate if a package name belongs to a UID.":"进行快速检查以验证软件包名称是否属于UID。\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DEVICE_ADMIN_COMPONENT_NAME":"android.app.admin.devicepolicymanager.extra_provisioning_device_admin_component_name\r\n","Disconnects an established connection, or cancels a connection attempt\n            currently in progress.":"断开已建立的连接或取消连接尝试\r\n            目前正在进行中。\r\n","PRIVATE_DNS_MODE_OFF":"private_dns_mode_off\r\n","android.app.admin.DevicePolicyManager.isDeviceOwnerApp(java.lang.String)":"android.app.admin.devicepolicymanager.isdeviceownerapp（java.lang.string）\r\n","android.appwidget.AppWidgetProviderInfo.maxResizeWidth":"android.appwidget.AppWidgetProviderInfo.maxResizeWidth\r\n","DevicePolicyManager#lockNow":"DevicePolicyManager＃locKnow\r\n","Characterizes the potential risk implied in a permission and indicates the procedure the system should follow when determining whether to grant the permission to an application requesting it.":"表征许可中隐含的潜在风险，并指示系统在确定是否授予请求申请的申请时应遵循的过程。\r\n","Notification category: missed call.":"通知类别：未通话。\r\n","android.app.admin.DevicePolicyManager.isActivePasswordSufficientForDeviceRequirement()":"android.app.admin.devicepolicymanager.isactivepasswordsufffordfordevicerequirment（）\r\n","android.app.FragmentTransaction.setCustomAnimations(int, int, int, int)":"Android.App.FragmentTransaction.setCustomanimations（INT，INT，INT，INT）\r\n","Called by a device owner, profile owner of a managed profile or delegated app with\n            ":"由设备所有者，托管个人资料的个人资料所有者或授权应用程序的个人资料所有者\r\n            \r\n","android.accounts.AccountManagerFuture.cancel(boolean)":"android.accounts.accountmanagerfuture.cancel（boolean）\r\n","Get the list of apps to keep around as APKs even if no user has currently installed it.":"即使没有用户当前没有安装该应用程序，获取应用程序的列表。\r\n","Settings#EXTRA_CHANNEL_FILTER_LIST":"设置＃extra_channel_filter_list\r\n","\n            Member access and invocation is available through the\n            ":"\r\n            会员访问和调用可通过\r\n            \r\n","android.app.Dialog.onPanelClosed(int, android.view.Menu)":"android.app.dialog.onpanelclosed（int，android.view.menu）\r\n","DevicePolicyManager#getCurrentFailedPasswordAttempts":"DevicePolicyManager＃getCurrentFailedPasswordAttEmpts\r\n","android.animation.ValueAnimator.setFrameDelay(long)":"android.animation.valueAnimator.setFramedElay（long）\r\n","Callbacks to a ":"回到a\r\n","#KEYGUARD_DISABLE_WIDGETS_ALL":"#keyguard_disable_widgets_all\r\n","Constructs a Keyframe object with the given time.":"用给定时间构建一个关键帧对象。\r\n","android.app.job.JobInfo.Builder#setOverrideDeadline(long)":"android.app.job.jobinfo.builder＃setoverridedeadeadline（long）\r\n","Populate an intent object with the text results gathered from remote input.":"填充意图对象，并从远程输入中收集的文本结果。\r\n","android.app.admin.DevicePolicyManager.getAccountTypesWithManagementDisabled()":"android.app.admin.devicepolicymanager.getAccountTypesWithManagementDisabled（）\r\n","Provides the central interface between an\n            application and Android's data backup infrastructure.":"提供一个中心接口\r\n            应用程序和Android的数据备份基础架构。\r\n","A dark Holo shade of red \n":"红色的黑色阴影\r\n\r\n","Identity of this AppWidget component.":"此AppWidget组件的身份。\r\n","Called by a profile or device owner to revoke the current password reset token.":"由配置文件或设备所有者调用以撤销当前密码重置令牌。\r\n","Return activity in receiverPackage that handles ACTION_APP_ERROR.":"在处理Action_App_Error的ReceiverPackage中返回活动。\r\n","Phone number types from android.provider.":"来自Android.provider的电话号码类型。\r\n","android.app.AppOpsManager.OPSTR_RECEIVE_MMS":"android.app.appopsmanager.opptr_receive_mms\r\n","android.app.job.JobServiceEngine.getBinder()":"android.app.job.jobserviceengine.getbinder（）\r\n","android.app.job.JobInfo.isRequireCharging()":"android.app.job.jobinfo.isrequirecharging（）\r\n"," will be removed.":" 将被删除。\r\n","Set the system wall clock time.":"设置系统壁时钟时间。\r\n","Broadcast sent when the device's UI has switched to car mode, either\n            by being placed in a car dock or explicit action of the user.":"设备UI切换到汽车模式时发送的广播\r\n            通过放置在用户的汽车码头或明确操作中。\r\n"," key: whether the chronometer set on the notification should count down\n            instead of counting up.":" 关键：通知上的计时仪是否应计算\r\n            而不是计算。\r\n","Retrieves the application restrictions for a given target application running in the calling\n            user.":"检索在调用中运行的给定目标应用程序的应用程序限制\r\n            用户。\r\n","android.app.Activity.onGetDirectActions(android.os.CancellationSignal, java.util.function.Consumer)":"android.app.activity.gongetdirectactions（android.os.cancellationsignal，java.util.function.consumer）\r\n","#submitRequest(android.app.VoiceInteractor.Request, String)":"#submitrequest（android.app.voiceinteractor.request，string）\r\n","Returns all of the currently published statuses for a given conversation.":"返回给定对话的所有当前发布的状态。\r\n","Application.ActivityLifecycleCallbacks":"Application.ActivityLifeCyClecallbacks\r\n","android.app.appsearch.ReportSystemUsageRequest.getDatabaseName()":"Android.App.AppSearch.ReportSystemusAgereQuest.getDatabasEname（）\r\n","android.app.SharedElementCallback.onMapSharedElements(java.util.List, java.util.Map)":"android.app.sharedelementcallback.onmapsharedelements（java.util.list，java.util.map）\r\n","android.bluetooth.BluetoothAdapter.getName()":"android.bluetooth.bluetoothadapter.getName（）\r\n","Creates a dialog window that uses the default dialog theme.":"创建一个使用默认对话框主题的对话框窗口。\r\n","Return true if offloaded filters are supported":"如果支持卸载过滤器，则返回true\r\n","Return whether this action is enabled. -or- Sets whether this action is enabled.":"返回该操作是否已启用。 - 或设置该操作是否已启用。\r\n","If the device is currently locked (see ":"如果设备当前已锁定（请参阅\r\n","Convenience function for reading either a PendingIntent or null pointer from\n            a Parcel.":"读取悬浮物或无效指针的便利功能\r\n            一个包裹。\r\n","android.appwidget.AppWidgetManager.INVALID_APPWIDGET_ID":"android.appwidget.appwidgetManager.invalid_appwidget_id\r\n","Get the number of navigation items present in the current navigation mode.":"获取当前导航模式中存在的导航项目数量。\r\n","#FORMAT_REMOTE_INPUT":"#format_remote_input\r\n","Ranked by timestamp of last usage from a system UI surface.":"由系统UI表面的最后使用时间戳排名。\r\n"," doesn't support this scheme, the application must provide its own value. See ":" 不支持此方案，应用程序必须提供自己的价值。看\r\n","The time when the service was first made active, either by someone\n starting or binding to it.":"服务首次使服务活跃的时间，要么由某人\r\n 启动或与之绑定。\r\n","MenuInflater":"菜单\r\n","android.accessibilityservice.AccessibilityService.getAccessibilityButtonController(int)":"Android.Accesseribilityservice.Accesseribilityservice.getAccconibilitybuttonController（int）\r\n","#onCreate(android.os.Bundle)":"#oncreate（android.os.bundle）\r\n","Retrieve the active ":"检索活动\r\n","Allows an application to read the low-level system log files.":"允许应用程序读取低级系统日志文件。\r\n","Lets all Fragments managed by the controller's FragmentManager\n            know they should trim their memory usage.":"让所有片段由控制器的FragmentManager管理\r\n            知道他们应该修剪记忆的使用情况。\r\n","Returns the bit mask of capabilities this accessibility service has such as\n            being able to retrieve the active window content, etc.":"返回该可访问性服务的功能的位掩码\r\n            能够检索活动的窗口内容，等等。\r\n","android.app.admin.DevicePolicyManager.LOCK_TASK_FEATURE_GLOBAL_ACTIONS":"android.app.admin.devicepolicymanager.lock_task_feature_global_actions\r\n","Allows an application to use SurfaceFlinger's low level features \n":"允许应用程序使用SurfaceFlinger的低级功能\r\n\r\n","android.app.FragmentController.dispatchOptionsMenuClosed(android.view.Menu)":"android.app.fragmentController.disPatchOptionsMenuclosed（android.view.menu）\r\n","Synchronously wait for the application to be idle.":"同步等待应用程序闲置。\r\n","android.app.AppOpsManager.OPSTR_COARSE_LOCATION":"android.app.appopsmanager.opptr_coarse_location\r\n","android.animation.ObjectAnimator.ofMultiFloat(java.lang.Object, java.lang.String, android.animation.TypeConverter, android.animation.TypeEvaluator, java.lang.Object[])":"android.animation.ObjectAnimator.ofmultifloat（java.lang.object，java.lang.string，android.animation.typeconverter，android.animation.typeevaluator，java.lang.object []）\r\n","Finds a fragment that was identified by the given id either when inflated\n            from XML or as the container ID when added in a transaction.":"找到一个弹簧时通过给定ID识别的片段\r\n            从XML或作为容器ID添加时，将其添加到交易中。\r\n","android.app.Activity.getMaxNumPictureInPictureActions()":"android.app.Activity.getMaxNumpIctureInpictReactions（）\r\n","if the destination file does not already exist\n":"如果目标文件尚不存在\r\n\r\n","android.app.Notification.EXTRA_SHOW_CHRONOMETER":"android.app.notification.extra_show_chronometer\r\n","android.app.admin.SecurityLog.TAG_MEDIA_MOUNT":"android.app.admin.securitylog.tag_media_mount\r\n","\n            returns the current foreground service type.":"\r\n            返回当前的前景服务类型。\r\n","SearchSpec.Builder#setSnippetCount":"searchspec.builder＃setsnippetCount\r\n","android.app.AppComponentFactory.instantiateProvider(java.lang.ClassLoader, java.lang.String)":"android.app.appcomponentfactory.instantiateprovider（java.lang.classloader，java.lang.string）\r\n","android.app.Activity.setRequestedOrientation(int)":"android.app.activity.setRequestEdorientation（int）\r\n","android.animation.LayoutTransition.isRunning()":"android.animation.layouttransition.isrunning（）\r\n","android.app.AppOpsManager.unsafeCheckOpRaw(java.lang.String, int, java.lang.String)":"android.app.appopsmanager.unsafecheckoprow（java.lang.string，int，java.lang.string）\r\n","Contains usage statistics for an app package for a specific\n            time range.":"包含针对特定应用程序包的使用统计信息\r\n            时间范围。\r\n","Control whether a system notification is posted by the download manager while this\n download is running or when it is completed.":"控制下载经理是否发布系统通知\r\n 下载正在运行或完成时。\r\n","android.app.AlarmManager.INTERVAL_HALF_DAY":"android.app.alarmmanager.interval_half_day\r\n","android.app.admin.DevicePolicyManager.getApplicationRestrictionsManagingPackage(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getApplicationRestrictionsManagingPackage（android.content.componentname）\r\n",": set if the service has asked to\n run as a foreground process.":"：设置服务是否已要求\r\n 作为前景过程运行。\r\n","android.app.admin.DeviceAdminReceiver.onBugreportFailed(android.content.Context, android.content.Intent, int)":"android.app.admin.deviceadminreceiver.onbugreportfailed（android.content.context，android.content.intent，int）\r\n","android.app.Activity.onKeyShortcut(int, android.view.KeyEvent)":"android.app.activity.onkeyshortcut（int，android.view.keyevent）\r\n","Create a secure L2CAP Connection-oriented Channel (CoC) ":"创建安全的L2CAP连接通道（COC）\r\n","Set the small icon resource for the specified level.":"为指定级别设置小图标资源。\r\n","android.app.ZygotePreload":"android.app.zygotepreload\r\n","#moveTaskToFront(int, int, Bundle)":"#movetaskTofront（int，int，捆绑包）\r\n","Action sent to a device administrator when the user has requested to\n            disable it, but before this has actually been done.":"当用户要求到达设备管理员时发送给设备管理员\r\n            禁用它，但在此之前已经完成。\r\n",": use\n            the device's default alert theme with a light background.":"： 利用\r\n            设备的默认警报主题具有光背景。\r\n","Retrieve the current number of numerical digits required in the password\n            for a particular admin or all admins that set restrictions on this user\n            and its participating profiles.":"检索密码中所需的当前数字数量\r\n            对于特定的管理员或所有设置此用户限制的管理员\r\n            及其参与概况。\r\n","android.app.admin.SecurityLog.TAG_OS_SHUTDOWN":"android.app.admin.securitylog.tag_os_shutdown\r\n","Returns the tab at the specified index.":"返回指定索引处的选项卡。\r\n","Set the ":"设置\r\n","android.app.FragmentTransaction.show(android.app.Fragment)":"Android.App.FragmentTransaction.Show（Android.App.Fragment）\r\n","Whether to show an item for a default sound.":"是否显示默认声音的项目。\r\n","field that should be\n set if the notification should not be canceled when the user clicks\n the Clear all button.":"应该是\r\n 设置如果用户单击时不应取消通知，请设置\r\n 清除全按钮。\r\n","Retrieve the current maximum time to unlock for a particular admin or all admins that set\n            restrictions on this user and its participating profiles.":"检索当前的最大时间以解锁特定管理员或所有设置的管理员\r\n            对该用户及其参与资料的限制。\r\n","android.app.ApplicationExitInfo.getPid()":"android.app.applicationexitinfo.getpid（）\r\n","Allows read/write access to the \"properties\" table in the checkin\n         database, to change values that get uploaded.":"允许在Checkin中读/写入“属性”表\r\n         数据库，更改上传的值。\r\n",": also erase the device's external\n storage.":"：还删除设备的外部\r\n 贮存。\r\n","A Long extra holding the wall clock time (in milliseconds) to be set on the device's\n            ":"额外的长时间持有壁时钟时间（以毫秒为单位）设置在设备上\r\n            \r\n","Called when provisioning of a managed profile or managed device has completed successfully.":"在托管配置文件或托管设备的配置时已成功完成。\r\n",": also evict the user's credential encryption key from the\n            keyring.":"：也从用户的凭据加密密钥驱逐\r\n            钥匙圈。\r\n","Retrieve the filter associated with this ActivityMonitor.":"检索与此ActivityMonitor关联的过滤器。\r\n","android.app.DownloadManager.query(android.app.Query)":"android.app.downloadmanager.query（android.app.query）\r\n","android.app.admin.DevicePolicyManager.getNearbyNotificationStreamingPolicy()":"android.app.admin.devicepolicymanager.getNearbyNotificationStreamingPolicy（）\r\n","Remove all internal references to the last loaded wallpaper.":"删除所有内部引用到最后加载的墙纸。\r\n","Positions the end edge of this view to the start of the given anchor view ID.":"将此视图的端边缘定位到给定锚视图ID的开始。\r\n","android.app.Instrumentation.startProfiling()":"android.app.instrumentation.startprofiling（）\r\n","NetworkStats.Bucket#STATE_ALL":"networkstats.bucket＃state_all\r\n","If true, makes the top edge of this view match the top edge of the parent.":"如果为true，则使此视图的顶部边缘与父的顶部边缘匹配。\r\n","android.app.admin.DevicePolicyManager.getAutoTimeRequired()":"android.app.admin.devicepolicymanager.getautotimerequired（）\r\n","Make this notification automatically dismissed when the user touches it.":"当用户触摸该通知时，该通知会自动忽略。\r\n","tag":"标签\r\n","Specifies a drawable to use for the 'home as up' indicator.":"指定可绘制的可用于“家庭为up”指示器。\r\n","Return all currently active requests.":"返回当前的所有活动请求。\r\n","#FLAG_NO_CREATE":"#flag_no_create\r\n","android.animation.LayoutTransition.getDuration(int)":"android.animation.layouttransition.getDuration（int）\r\n"," objects are different.\n":" 对象是不同的。\r\n\r\n","android.app.UiAutomation":"android.app.uiautomation\r\n","Returns \"true\" if the user interface is currently being messed with\n            by a monkey.":"如果用户界面当前混乱，则返回“ true”\r\n            由猴子。\r\n","ConnectivityManager":"ConnectivityManager\r\n","android.app.ActionBar.setHideOffset(int)":"Android.App.ActionBar.SethideOffset（INT）\r\n","#setAffiliationIds":"#setaffiliations\r\n","android.appwidget.AppWidgetManager.partiallyUpdateAppWidget(int[], android.widget.RemoteViews)":"android.appwidget.appwidgetManager.partalyupdateappwidget（int []，android.widget.remoteviews）\r\n","android.app.usage.NetworkStatsManager.queryDetailsForUidTag(int, java.lang.String, long, long, int, int)":"android.app.usage.networkstatsmanager.querydetailsforuidtag（int，java.lang.string，长，长，int，int）\r\n","Intent action for starting the global search settings activity.":"启动全局搜索设置活动的意图行动。\r\n","android.app.Fragment.startActivity(android.content.Intent)":"android.app.fragment.startactivity（android.content.intent）\r\n","A String extra holding the proxy host for the wifi network in\n            ":"字符串额外持有wifi网络的代理主机\r\n            \r\n","Background drawable for standalone items that need focus/pressed states.":"可用于需要焦点/压力状态的独立项目。\r\n","\n            of this AnimatorSet.":"\r\n            这个动画。\r\n","SearchSpec.Builder#setRankingStrategy(int)":"searchspec.builder＃setrankingstrategy（int）\r\n","Only allow redacted notifications on secure keyguard screens (e.":"仅允许在安全的钥匙屏幕上进行编辑的通知（e。\r\n","android.app.Activity.getReferrer()":"android.app.activity.getReferrer（）\r\n","android.bluetooth.BluetoothDevice.createInsecureRfcommSocketToServiceRecord(java.util.UUID)":"android.bluetooth.bluetoothdevice.createinsecurerfcommsockettoservicerecord（java.util.uuid）\r\n","JobScheduler#cancelAll()":"Jobscheduler＃cancelall（）\r\n","android.bluetooth.BluetoothAdapter.listenUsingL2capChannel()":"android.bluetooth.bluetoothadapter.listenusingl2capchannel（）\r\n","\n        \"not referenced anywhere else\" may mean \"is not registered\".\n      ":"\r\n        “在其他任何地方都没有引用”可能意味着“未注册”。\r\n      \r\n","android.app.admin.DevicePolicyManager.getTransferOwnershipBundle()":"android.app.admin.devicepolicymanager.getTransferownhipsbundle（）\r\n","android.app.WallpaperManager.getDrawable()":"android.app.wallpapermanager.getDrawable（）\r\n","android.animation.ObjectAnimator.ObjectAnimator()":"android.animation.ObjectAnimator.ObjectAnimator（）\r\n","Set the adapter and navigation callback for list navigation mode.":"设置列表导航模式的适配器和导航回调。\r\n","The name of the logical parent of the activity as it appears in the manifest.":"活动中出现的活动的逻辑父母的名称。\r\n","android.app.Activity.isChild()":"android.app.activity.ischild（）\r\n","android.app.ActivityManager.getRunningTasks(int)":"android.app.activityManager.getRunningTasks（int）\r\n","\n             A custom implementation of ":"\r\n             自定义实施\r\n","DeviceDefault theme for windows that want to have the user's selected wallpaper appear\n    behind them and without an action bar.":"Windows的Devicedefault主题，希望出现用户选择的壁纸\r\n    在他们身后，没有动作栏。\r\n","State information that has been retrieved from a fragment instance\n through ":"从片段实例中检索的状态信息\r\n 通过\r\n","android.app.NotificationManager.ACTION_NOTIFICATION_POLICY_CHANGED":"android.app.notificationmanager.action_notification_policy_changed\r\n","android.app.ActivityManager.isInLockTaskMode()":"android.app.activitymanager.isinlocktaskmode（）\r\n","Returns the overall database schema version.":"返回总体数据库架构版本。\r\n","Default highlight color for items that are\n             activated.":"默认项目的颜色为\r\n             活性。\r\n","Return the number of times that this event occurred over the interval.":"返回此事件在间隔内发生的次数。\r\n","Set the activity content to an explicit view.":"将活动内容设置为显式视图。\r\n","android.app.Instrumentation.setInTouchMode(boolean)":"android.app.instrumentation.setintouchmode（boolean）\r\n","InboxStyle#addLine(CharSequence)":"inboxstyle＃addline（charsequence）\r\n","Indicate whether this application contains code.":"指示此应用程序是否包含代码。\r\n","android.appwidget.AppWidgetHost.startAppWidgetConfigureActivityForResult(android.app.Activity, int, int, int, android.os.Bundle)":"android.appwidget.appwidgethost.startappwidgetConfigureActivityForresult（android.app.Activity，int，int，int，int，int，int，android.os.bundle）\r\n","android.app.NotificationManager.cancelAll()":"android.app.notificationmanager.cancelall（）\r\n",". -or- Sets optional structured data regarding the content being viewed.":"。 - 或设置有关要查看内容的可选结构化数据。\r\n","Returns all notification channel groups belonging to the calling app.":"返回属于调用应用程序的所有通知频道组。\r\n","#ACTION_PASSWORD_FAILED":"#action_password_failed\r\n","Return whether security logging is enabled or not by the admin.":"返回管理是否启用了安全记录。\r\n","Defines the default soft input state that this window would\n             like when it is displayed.":"定义默认软输入状态此窗口将\r\n             就像显示时一样。\r\n","Lists all accounts of a type which have certain features.":"列出具有某些功能的类型的所有帐户。\r\n","android.app.NotificationChannel.getName()":"android.app.notificationChannel.getName（）\r\n","Set the friendly Bluetooth name of the local Bluetooth adapter.":"设置本地蓝牙适配器的友好蓝牙名称。\r\n","translation in y of the view.":"视图中的翻译。\r\n","A request to report usage of a document owned by another app from a system UI surface.":"要求报告来自系统UI Surface的另一个应用程序拥有的文档使用的请求。\r\n","Defines how many columns this child should span.":"定义这个孩子应该跨越多少列。\r\n","android.app.Fragment.getExitTransition()":"android.app.fragment.getExitTransition（）\r\n","android.app.admin.DeviceAdminInfo.USES_POLICY_DISABLE_CAMERA":"android.app.admin.deviceadmininfo.uses_policy_disable_camera\r\n","Higher ":"更高\r\n","android.app.usage.ExternalStorageStats":"android.app.usage.usage.externalstoragestats\r\n","android.accounts.AccountManager.PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLE":"android.accounts.accountmanager.package_name_key_legacy_not_visible\r\n","android.app.Instrumentation.callActivityOnRestoreInstanceState(android.app.Activity, android.os.Bundle, android.os.PersistableBundle)":"android.app.instrumentation.callactivityOnrestorivityOnRestoreInstancestate（android.app.Activity，android.os.bundle，android.os.os.persistablebundle）\r\n","Called when a generic motion event was not handled by any of the\n            views inside of the dialog.":"当没有任何一个通用运动事件处理时称为\r\n            对话框内部的视图。\r\n","#STYLE_SPINNER":"#Style_spinner\r\n","android.app.Activity.onPostResume()":"android.app.activity.onpostresume（）\r\n","android.accessibilityservice.AccessibilityService.setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)":"android.accosconibilityservice.Accessibilityservice.setserviceinfo（android.accosconibilityservice.accostiblesibilityseribilityseribilityserviceibilityserviceinfo）\r\n","android.accessibilityservice.AccessibilityServiceInfo.CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY":"Android.AccessibilityService.AccessibilityserviceInfo.capibality_can_request_enhanced_web_accossibility\r\n"," for\n            activities.":" 为了\r\n            活动。\r\n","The initial horizontal scroll offset, in pixels.":"初始水平滚动偏移量，以像素为单位。\r\n"," key: this is a bitmap to be used instead of the one from\n            ":" 关键：这是一个要使用的位图，而不是来自\r\n            \r\n","Return the Transition that will be used for shared elements transferred back during a\n            pop of the back stack. -or- Sets the Transition that will be used for shared elements transferred back during a\n            pop of the back stack.":"返回将用于共享元素的过渡\r\n            后堆栈的弹出。 - 或设置将用于在一个期间转移回的共享元素的过渡\r\n            后堆栈的弹出。\r\n","Provide a status report about the application.":"提供有关应用程序的状态报告。\r\n","Returns whether or not the current ":"返回是否当前\r\n","android.app.usage.ConfigurationStats.getFirstTimeStamp()":"android.app.usage.configurationstats.getfirsttimestamp（）\r\n","This method will be called when an item in the list is selected.":"选择列表中的项目时，将调用此方法。\r\n","F:Android.App.Fragment.OnCreateAnimator":"F：Android.App.Fragment.OncreateAnimator\r\n","Reference to a drawable resource to use for the frame.":"引用用于框架的可绘制资源。\r\n","Used for permissions that provide direct access to the hardware on\n         the device that has an effect on battery life.":"用于可直接访问硬件的权限\r\n         对电池寿命产生影响的设备。\r\n","#ACTION_PROVISION_MANAGED_DEVICE":"#action_provision_managed_device\r\n","Sets whether notification posted to this channel should vibrate.":"设置是否发布到此频道的通知应振动。\r\n","A Holo shade of purple \n":"紫色的整体阴影\r\n\r\n","Number of activities that are currently running (not stopped\n and persisted) in this task.":"当前正在进行的活动数量（不停止\r\n 并坚持这项任务。\r\n","android.accounts.AccountManager.getAccounts()":"android.accounts.accountmanager.getaccounts（）\r\n","Called when sharing a bugreport has been cancelled by the user of the device.":"共享BugReport时已被设备的用户取消。\r\n","Called to process touch screen events.":"打电话处理触摸屏事件。\r\n","M:Android.App.Fragment.Instantiate(Android.Content.Context,System.String,System.String)":"m：android.app.fragment.instantiate（android.content.context，system.String，System.String）\r\n","Defines the vertical scrollbar thumb drawable.":"定义垂直卷轴拇指可绘制。\r\n","android.animation.AnimatorSet.setCurrentPlayTime(long)":"android.animation.animatortators.setCurrentPlayTime（long）\r\n","Add an additional content view to the screen.":"在屏幕上添加其他内容视图。\r\n","Set whether this is an \"ongoing\" notification.":"设置这是否是“正在进行的”通知。\r\n","android.app.ApplicationExitInfo.REASON_UNKNOWN":"android.app.applicationexitinfo.reason_unknown\r\n","Access APIs for diverting outgoing calls":"访问转移电话的API\r\n","Create an uninitialized instance of AnrInfo.":"创建一个非初始化的Anrinfo实例。\r\n","Action an app can implement to handle reports from ":"应用程序可以实施的操作以处理来自\r\n","\n            to monitor the Shared element transitions.":"\r\n            监视共享元素过渡。\r\n",", to be\n displayed in the dialog as the content, you will be notified of the\n selected item via the supplied listener.":"， 成为\r\n 在对话框中显示为内容，将通知您\r\n 通过提供的听众选择的项目。\r\n","android.app.FragmentTransaction.disallowAddToBackStack()":"android.app.FragmentTransaction.dislolyAdladDtoBackStack（）\r\n","#onSharedElementEnd(java.util.List, java.util.List,\n            java.util.List)":"#onsharedelementend（java.util.list，java.util.list，\r\n            java.util.list）\r\n","android.app.Notification.getShortcutId()":"android.app.notification.getShortcutid（）\r\n","android.app.admin.DevicePolicyManager.getPasswordMinimumLength(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getPasswordminimument（android.content.componentname）\r\n"," that will launch an explicit target activity specified by\n            this activity's logical parent.":" 这将启动由\r\n            此活动的逻辑父母。\r\n","BluetoothDevice#PHY_OPTION_S8":"BluetoothDevice＃phy_option_s8\r\n","android.app.WallpaperManager.peekFastDrawable()":"android.app.wallpapermanager.peekfastDrawable（）\r\n","android.app.Fragment.setEnterTransition(android.transition.Transition)":"Android.App.Fragment.SetEntertransition（Android.transition.transition）\r\n","android.app.Activity.onPictureInPictureUiStateChanged(android.app.PictureInPictureUiState)":"android.app.Activity.onpictureInpictureUistateChanged（android.app.pictureInpictureuistate）\r\n","android.appwidget.AppWidgetProviderInfo.getProfile()":"android.appwidget.appwidgetProviderInfo.getProfile（）\r\n","#FLAG_UPDATE_CURRENT":"#flag_update_current\r\n","ArrayList":"数组列表\r\n","android.app.ExpandableListActivity.onGroupCollapse(int)":"Android.App.ExpandableSristactivity.NogeOupCollapse（INT）\r\n","Add a new ":"添加新\r\n","android.app.SearchManager.SUGGEST_COLUMN_DURATION":"android.app.searchmanager.suggest_column_duration\r\n","This is called immediately after the surface is first created.":"首先创建表面后立即调用。\r\n","#DISAPPEARING":"#disappearting\r\n","Supply a ":"供应a\r\n","Cancel the current device discovery process.":"取消当前的设备发现过程。\r\n","android.appwidget.AppWidgetManager.requestPinAppWidget(android.content.ComponentName, android.os.Bundle, android.app.PendingIntent)":"android.appwidget.appwidgetManager.requestpinappwidget（android.content.componentname，android.os.os.bundle，android.app.pendingIntent）\r\n","The preferred padding along the end edge of list items.":"沿列表项目端边缘的首选填充。\r\n","TextAppearance style for text displayed on the switch thumb.":"开关拇指上显示的文本样式的文本应用样式。\r\n","android.app.FragmentTransaction.setBreadCrumbShortTitle(java.lang.CharSequence)":"Android.App.FragmentTransaction.SetBreadcrumbShorttitle（Java.lang.CharSequence）\r\n","android.app.SearchManager.SUGGEST_COLUMN_INTENT_ACTION":"android.app.searchmanager.suggest_column_intent_action\r\n","android.app.job.JobScheduler.RESULT_FAILURE":"android.app.job.jobscheduler.result_failure\r\n","Retrieves a title of the URI that specifies a link for further context about this wallpaper.":"检索URI的标题，该标题指定了有关此墙纸的进一步上下文的链接。\r\n","android.app.admin.DeviceAdminReceiver.onPasswordChanged(android.content.Context, android.content.Intent, android.os.UserHandle)":"android.app.admin.deviceadminreceiver.onpasswordchanged（android.content.context，android.content.intent，android.os.userhandle）\r\n","Default appearance of text: color, typeface, size, and style.":"文本的默认外观：颜色，字体，大小和样式。\r\n","android.app.job.JobParameters.STOP_REASON_CONSTRAINT_STORAGE_NOT_LOW":"android.app.job.jobparameters.stop_reason_constraint_storage_storage_not_low\r\n","If set to false, keeps the movement method from being set\n             to the link movement method even if autoLink causes links\n             to be found.":"如果设置为false，请防止运动方法设置\r\n             即使自动链接引起链接，链接运动方法也\r\n             要找到。\r\n","android.animation.ObjectAnimator.ofMultiFloat(java.lang.Object, java.lang.String, android.graphics.Path)":"android.animation.ObjectAnimator.ofmultifloat（java.lang.object，java.lang.string，android.graphics.path）\r\n","android.accessibilityservice.AccessibilityServiceInfo.CAPABILITY_CAN_REQUEST_FINGERPRINT_GESTURES":"Android.AccessibilityService.AccessibilityserviceInfo.capibality_can_request_fingerprint_gestures\r\n","android.app.ActivityManager.killBackgroundProcesses(java.lang.String)":"android.app.activityManager.KillbackgroundProcesses（Java.lang.String）\r\n","Set the text displayed on this tab.":"将显示在此选项卡上的文本设置。\r\n","Drawable used for the indeterminate mode.":"可用于不确定模式的绘图。\r\n","android.app.DownloadManager.COLUMN_STATUS":"android.app.downloadmanager.column_status\r\n","Notification category: progress of a long-running background operation.":"通知类别：长期运行的背景操作的进度。\r\n","Stack trace.":"堆栈跟踪。\r\n","A String extra holding the ssid of the wifi network that should be used during nfc device\n            owner provisioning for downloading the mobile device management application.":"绳子额外持有NFC设备期间应使用的WiFi网络的SSID\r\n            所有者为下载移动设备管理应用程序的供应。\r\n","Set the third line of text in the platform notification template.":"在平台通知模板中设置第三行文本。\r\n","Sentinel error value for this class.":"该课程的前哨错误值。\r\n","An activity that displays a list of items by binding to a data source such as\n an array or Cursor, and exposes event handlers when the user selects an item.":"通过绑定到数据源（例如\r\n 数组或光标，并在用户选择项目时公开事件处理程序。\r\n","android.accounts.AccountManager.finishSession(android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)":"android.accounts.accountmanager.finishsession（android.os.bundle，android.app.Activity，android.accounts.accountmanagercallback，android.os.handler）\r\n","Increments the current secondary progress value.":"增加当前的次要进度值。\r\n","android.app.admin.DevicePolicyManager.setAffiliationIds(android.content.ComponentName, java.util.Set)":"android.app.admin.devicepolicymanager.setaffiliations（android.content.componentname，java.util.set）\r\n","Cancels a reliable write transaction for a given device.":"取消给定设备的可靠写入交易。\r\n","Leave enough room for ascenders and descenders instead of\n             using the font ascent and descent strictly.":"留出足够的空间来升起和后裔\r\n             严格使用字体上升和下降。\r\n","Set the local destination for the downloaded file to a path within\n the public external storage directory (as returned by\n ":"将下载文件的本地目的地设置为路径\r\n 公共外部存储目录（如\r\n \r\n","The user has performed a double tap gesture on the touch screen.":"用户在触摸屏上执行了双击手势。\r\n","android.app.ActivityManager.getMyMemoryState(android.app.RunningAppProcessInfo)":"android.app.activityManager.getMymyMymoryState（android.app.runningappprocessinfo）\r\n","android.app.ActivityOptions.EXTRA_USAGE_TIME_REPORT":"android.app.activityOptions.extra_usage_time_report\r\n","android.app.admin.DevicePolicyManager.isOrganizationOwnedDeviceWithManagedProfile()":"android.app.admin.devicepolicymanager.isorganizationneddevicewithmanagedProfile（）\r\n","Override this for receiving callbacks when a group has been collapsed.":"在组倒塌时接收回调。\r\n","#FLAG_REQUEST_TOUCH_EXPLORATION_MODE":"#flag_request_touch_exploration_mode\r\n","Sets the visibility of the indeterminate progress bar in the title.":"设置标题中不确定进度栏的可见性。\r\n","android.bluetooth.BluetoothDevice.ADDRESS_TYPE_PUBLIC":"android.bluetooth.bluetoothdevice.address_type_public\r\n","android.app.Notification.CATEGORY_SERVICE":"android.app.notification.category_service\r\n","The list divider used in alert dialogs.":"警报对话框中使用的列表分隔线。\r\n","android.app.DownloadManager.COLUMN_LOCAL_FILENAME":"android.app.downloadmanager.column_local_filename\r\n","Called when a fragment loads an animation.":"片段加载动画时调用。\r\n","android.animation.Animator.removeListener(android.animation.AnimatorListener)":"android.animation.animator.removelistener（android.animation.animatorListener）\r\n","\n          The type that implements the application's backup agent.\n        ":"\r\n          实现应用程序备份代理的类型。\r\n        \r\n","android.app.backup.BackupHelper":"android.app.backup.backuphelper\r\n","android.app.Instrumentation.newActivity(java.lang.ClassLoader, java.lang.String, android.content.Intent)":"android.app.instrumentation.newactivity（java.lang.classloader，java.lang.string，android.content.intent）\r\n","Selector in a drop down list.":"下拉列表中的选择器。\r\n","Sets the global Private DNS mode to opportunistic.":"将全球私人DNS模式设置为机会主义。\r\n","android.accessibilityservice.AccessibilityService.onBind(android.content.Intent)":"Android.AccessibilityService.Accesseribilityservice.onbind（android.content.intent）\r\n","Gets the user data named by \"key\" associated with the account.":"获取与帐户关联的“密钥”命名的用户数据。\r\n","android.accessibilityservice.AccessibilityService.getMagnificationController()":"Android.AccessibilityService.Accessibilityservice.getMagnificationController（）\r\n","During a full restore, indicates that the file system object being restored\n            is a directory.":"在完整的还原过程中，指示文件系统对象要还原\r\n            是目录。\r\n","Indicates that this list will always be drawn on top of solid, single-color\n             opaque background.":"指示此列表将始终在固体，单色的顶部绘制\r\n             不透明的背景。\r\n","Make note of an application performing an operation on behalf of another application when\n            handling an IPC.":"记下一个申请，代表另一个申请执行操作\r\n            处理IPC。\r\n","A integer extra indicating the predominant color to show during the provisioning.":"一个整数额外的，表示在配置过程中要显示的主要颜色。\r\n",",\n             set when a view's window has input focus.":"，，，，\r\n             当视图的窗口具有输入焦点时设置。\r\n","Perform a service discovery on the remote device to get the UUIDs supported.":"在远程设备上执行服务发现以获取UUID。\r\n","android.bluetooth.BluetoothAdapter.ACTION_DISCOVERY_STARTED":"android.bluetooth.bluetoothadapter.action_discovery_started\r\n","This API can be called by the following to associate certificates with a key pair that was\n            generated using ":"以下可以调用此API，以将证书与一个密钥对相关联\r\n            生成\r\n",": reported by the wallpaper\n            host when the user drops an object into an area of the host.":"：由墙纸报道\r\n            当用户将对象放入主机区域时，主机。\r\n","#notifyAsPackage(String, String, int, Notification)":"#NotifyAspackage（字符串，字符串，int，Notification）\r\n","android.animation.ValueAnimator.getAnimatedValue()":"android.animation.valueAnimator.getAnimatedValue（）\r\n",") and another for establishing the connection. This property sets the value of\n            the latter timeout, unless it is set to ":"），另一个用于建立连接。此属性设置了\r\n            后一个超时，除非设置为\r\n","android.app.FragmentController.retainNonConfig()":"Android.App.FragmentController.RetainNonConfig（）\r\n","android.appwidget.AppWidgetHost":"android.appwidget.Appwidgethost\r\n","Semi-transparent background that can be used when placing a dark\n       themed UI on top of some arbitrary background (such as the\n       wallpaper).":"放置黑暗时可以使用的半透明背景\r\n       主题UI在某些任意背景之上（例如\r\n       墙纸）。\r\n","DeviceDefault theme for panel windows.":"面板窗口的DevicedEfault主题。\r\n","Callback for the result from requesting permissions.":"请求权限的结果回调。\r\n","Finds the first descendant view with the given ID or throws an IllegalArgumentException if\n            the ID is invalid (< 0), there is no matching view in the hierarchy, or the dialog has not\n            yet been fully created (for example, via ":"找到具有给定ID的第一个后代视图或如果\r\n            ID无效（<0），层次结构中没有匹配视图，或者对话框没有\r\n            但是被充分创建（例如，通过\r\n"," set to\n            <code>persistAcrossReboots</code>.":" 调成\r\n            <code> Persistacrossreboots </code>。\r\n","Return the activity this AssistStructure came from.":"返回该协助结构的活动。\r\n","Parcel":"包裹\r\n","Called when a key was pressed down and not handled by any of the views\n            inside of the activity.":"当钥匙被压低而不被任何视图处理时称呼\r\n            活动的内部。\r\n","android.app.admin.DevicePolicyManager.setCrossProfilePackages(android.content.ComponentName, java.util.Set)":"android.app.admin.devicepolicymanager.setCrossprofilepackages（android.content.componentname，java.util.set）\r\n","android.appwidget.AppWidgetManager.updateAppWidgetOptions(int, android.os.Bundle)":"android.appwidget.appwidgetManager.updateappwidgetOptions（int，android.os.bundle）\r\n","Get the total time this package's foreground services are started, measured in milliseconds.":"以毫秒为单位衡量该包装的前景服务的总时间。\r\n","This function returns the result of linearly interpolating the start and\n            end Rect values, with <code>fraction</code> representing the proportion\n            between the start and end values.":"此函数返回线性插值开始和\r\n            结束rect值，带有<code>分数</code>表示比例\r\n            在开始值和最终值之间。\r\n","android.accounts.AccountManagerFuture":"android.accounts.accountmanagerfuture\r\n","android.accessibilityservice.FingerprintGestureController.unregisterFingerprintGestureCallback(android.accessibilityservice.FingerprintGestureCallback)":"Android.AccessibilityService.fingerprintesturecontroller.unregisterfingerfingerprinterecallback（android.accessibilityservice.fingerprinterclinterecallecallback）\r\n","\n            Contains all the information required to perform pre-authentication of HTTP requests. See ":"\r\n            包含执行HTTP请求进行预验证所需的所有信息。看\r\n","#addPersistentPreferredActivity":"#addpersistentPreferredivity\r\n","\n            Default value used in ":"\r\n            使用的默认值\r\n","Attaches the host to the FragmentManager for this controller.":"将主机附加到该控制器的fragmentManager上。\r\n","android.app.Notification.FOREGROUND_SERVICE_DEFERRED":"android.app.notification.foreground_service_deferred\r\n","Text that summarizes this notification for accessibility services.":"总结有关可访问性服务通知的文本。\r\n","android.app.Activity.setVrModeEnabled(boolean, android.content.ComponentName)":"android.app.activity.setVrModeenabled（boolean，android.content.componentname）\r\n","android.app.Activity.getLocalClassName()":"android.app.activity.getLocalClassName（）\r\n","Defines the persistence of the drawing cache.":"定义图形缓存的持久性。\r\n"," using this key.":" 使用此键。\r\n","android.app.Instrumentation.getUiAutomation()":"android.app.instrumentation.getUiautomation（）\r\n","android.app.admin.UnsafeStateException":"android.app.admin.unsafestateException\r\n"," or\n             searched for with ":" 或者\r\n             搜索\r\n","A boolean extra indicating the admin of a fully-managed device opts out of controlling\n            permission grants for sensor-related permissions,\n            see ":"布尔值额外指示管理设备的管理员选择退出\r\n            授予传感器相关权限的许可赠款，\r\n            看\r\n","Gets the windows on the screen of the default display.":"获取默认显示屏屏幕上的窗口。\r\n","Returns a list of system actions available in the system right now.":"返回系统中可用的系统操作列表。\r\n","#FORMAT_BUNDLE":"#Format_Bundle\r\n","android.appwidget.AppWidgetHost.createView(android.content.Context, int, android.appwidget.AppWidgetProviderInfo)":"android.appwidget.appwidgethost.createview（android.content.context，int，android.appwidget.appwidget.providerinfo）\r\n","Activity#onCreate":"活动＃on Create\r\n"," to be hit till the timeout\n            expires.":" 被打直到超时\r\n            到期。\r\n","android.app.Dialog.show()":"android.app.dialog.show（）\r\n","android.appwidget.AppWidgetProviderInfo.maxResizeHeight":"android.appwidget.AppWidgetProviderInfo.maxResizeHeight\r\n","java.lang.System#currentTimeMillis() System.currentTimeMillis()":"Java.lang.System＃CurrentTimeMillis（）System.CurrentTimeMillis（）\r\n","Creates a unique identifier for a package.":"为软件包创建唯一的标识符。\r\n","android.app.backup.FileBackupHelper.restoreEntity(android.app.backup.BackupDataInputStream)":"android.app.backup.filebackuphelper.restoreentity（android.app.backup.backup.backupdatainputstream）\r\n","android.app.admin.SecurityLog.TAG_KEY_IMPORT":"android.app.admin.securitylog.tag_key_import\r\n"," is enabled,\n            two-finger passthrough gestures are re-enabled.":" 已启用，\r\n            两指传递手势是重新启用的。\r\n","Capability: This accessibility service can request to filter the key event stream.":"功能：此可访问性服务可以要求过滤关键事件流。\r\n","Default style for DialogPreference.":"DialogPreference的默认样式。\r\n","Attaches a ":"附加\r\n","android.app.NotificationManager.EXTRA_AUTOMATIC_ZEN_RULE_STATUS":"android.app.notificationmanager.extra_automatic_zen_rule_status\r\n","android.animation.ValueAnimator.setCurrentFraction(float)":"android.animation.ValueAnimator.setCurrentFraction（float）\r\n","android.appwidget.AppWidgetProviderInfo":"android.appwidget.AppWidgetProviderInfo\r\n","android.app.Activity.onMenuItemSelected(int, android.view.MenuItem)":"android.app.activity.onmenuitemselectect（int，android.view.menuitem）\r\n","Text color for the fast scroll index overlay.":"快速滚动索引覆盖的文本颜色。\r\n","\n        invocations.\n      ":"\r\n        召唤。\r\n      \r\n","android.animation.LayoutTransition.getStartDelay(int)":"android.animation.layouttransition.getstartdelay（int）\r\n","android.app.Notification.EXTRA_SELF_DISPLAY_NAME":"android.app.notification.extra_sers_display_name\r\n","Cancel all previously shown notifications.":"取消所有先前显示的通知。\r\n","android.app.appsearch.AppSearchBatchResult.getFailures()":"android.app.app.appsearch.appsearchbatchresult.getfailures（）\r\n","Unregisters a previously registered onDestroy callback":"取消注册的先前注册的Ondestroy回调\r\n","android.app.SearchableInfo.getVoiceSearchEnabled()":"android.app.searchableInfo.getVoicesearchEnabled（）\r\n","android.app.Dialog.onOptionsItemSelected(android.view.MenuItem)":"android.app.dialog.onoptionsitemselected（android.view.menuitem）\r\n","Prepare a panel to be displayed.":"准备要显示的面板。\r\n","If the external storage directory\n             cannot be found or created.\n":"如果外部存储目录\r\n             找不到或创建。\r\n\r\n","android.app.Notification.contentView":"android.app.notification.contentview\r\n","android.bluetooth.BluetoothGattCharacteristic.PERMISSION_WRITE_SIGNED":"android.bluetooth.bluetoothgattcharacteristic.permission_write_signed\r\n","Gets a brief description of this tab's content for use in accessibility support.":"简要说明此选项卡的内容用于可访问性支持。\r\n","android.app.admin.DevicePolicyManager.isSafeOperation(int)":"android.app.admin.devicepolicymanager.issafeoperation（int）\r\n","android.accounts.AccountManager.getPreviousName(android.accounts.Account)":"android.accounts.accountmanager.getPreviousname（android.accounts.account）\r\n","android.bluetooth.BluetoothDevice.ACTION_ACL_CONNECTED":"android.bluetooth.bluetoothdevice.action_acl_conned\r\n","android.accounts.AccountManager.KEY_INTENT":"android.accounts.accountmanager.key_intent\r\n","Never show the soft keyboard.":"切勿显示软键盘。\r\n"," from the given fragment.":" 从给定的片段。\r\n","#ACTION_CLASS_CHANGED":"#action_class_changed\r\n","android.app.NotificationManager.ACTION_AUTOMATIC_ZEN_RULE_STATUS_CHANGED":"android.app.notificationmanager.action_automatic_zen_rule_status_changed\r\n","Allows application to override the creation of providers.":"允许应用程序覆盖提供商的创建。\r\n","#retrievePreRebootSecurityLogs":"#retrieveprerebootsecuritylogs\r\n","android.appwidget.AppWidgetManager.notifyAppWidgetViewDataChanged(int[], int)":"android.appwidget.appwidgetManager.notifyAppWidgetViewDatachanged（int []，int）\r\n","Standard activity result: operation canceled.":"标准活动结果：取消操作。\r\n","This method is called by the system in various cases where picture in picture mode should be\n            entered if supported.":"系统在图片模式中的图片应为各种情况下调用此方法\r\n            如果支持，则输入。\r\n","android.app.VoiceInteractor.getActiveRequest(java.lang.String)":"android.app.voiceInteractor.getActivereQuest（java.lang.string）\r\n","android.app.appsearch.GetSchemaResponse.getSchemas()":"android.app.appsearch.getschemaresponse.getschemas（）\r\n","android.bluetooth.BluetoothAdapter.EXTRA_CONNECTION_STATE":"android.bluetooth.bluetoothadapter.extra_connection_state\r\n"," represents,\n            measured in milliseconds since the epoch.":" 代表，\r\n            自时代以来以毫秒为单位进行测量。\r\n","Dim inverse text color.":"昏暗的逆文本颜色。\r\n","Called when the operating system has determined that it is a good\n time for a process to trim unneeded memory from its process.":"当操作系统确定它是一个好的时，请调用\r\n 是时候从其过程中缩小不需要内存的过程了。\r\n","android.app.admin.DevicePolicyManager.wipeData(int)":"android.app.admin.devicepolicymanager.wipedata（int）\r\n","For example, AT+CHUP. ":"例如，在+chup。\r\n","Indicates a failure to wipe device or user data.":"表示未能擦除设备或用户数据。\r\n","Enumerates values returned by  several types.":"列举以几种类型返回的值。\r\n","When set to false, the ListView will not draw the divider after each header view.":"设置为false时，ListView将不会在每个标头视图后绘制分隔线。\r\n","android.app.DownloadManager.openDownloadedFile(long)":"android.app.downloadmanager.opendownloadedfile（long）\r\n","BluetoothSocket":"Bluetoothsocket\r\n","Sets the types of routes that will be shown in the media route chooser dialog\n            launched by this button.":"设置将在媒体路线选择对话框中显示的路由类型\r\n            由此按钮启动。\r\n","The user has performed a two-finger  triple-tap and hold gesture on the touch screen.":"用户已经执行了两指三次敲击，并在触摸屏上保持手势。\r\n","Reverses the Activity Scene entry Transition and triggers the calling Activity\n            to reverse its exit Transition.":"逆转活动场景输入过渡并触发调用活动\r\n            扭转其退出过渡。\r\n","Radius of the bottom left corner.":"左下角的半径。\r\n"," methods\n            instead":" 方法\r\n            反而\r\n","Default implementation of\n            ":"默认实现\r\n            \r\n","Clear the offsets previously associated with this window through\n            ":"清除以前与此窗口相关联的偏移\r\n            \r\n","android.app.Fragment.setExitSharedElementCallback(android.app.SharedElementCallback)":"android.app.fragment.SetExitsharedElementCallback（android.app.sharedelementCallback）\r\n","Remove all records about this host from the AppWidget manager.":"从AppWidget Manager中删除有关此主机的所有记录。\r\n","android.app.usage.ConfigurationStats":"android.app.usage.configurationstats\r\n","android.animation.PropertyValuesHolder.setKeyframes(android.animation.Keyframe)":"android.animation.propertyvaluesholder.setKeyframes（android.animation.keyframe）\r\n","android.bluetooth.BluetoothDevice.setPin(byte[])":"android.bluetooth.bluetoothdevice.setpin（byte []）\r\n","android.accounts.AccountManager.KEY_ACCOUNT_NAME":"android.accounts.accountmanager.key_account_name\r\n","android.app.Dialog.onPreparePanel(int, android.view.View, android.view.Menu)":"android.app.dialog.onpreparepanel（int，android.view.view，android.view.menu）\r\n","When sending the current task to the background, this is the\n              animation that is run on the top activity of the task behind\n              it (which is entering the screen).":"将当前任务发送到背景时，这是\r\n              动画在任务的首要活动上运行\r\n              它（正在输入屏幕）。\r\n","android.app.FragmentController.getLoaderManager()":"android.app.fragmentController.getLoaderManager（）\r\n"," when personal apps are not\n            suspended.":" 当个人应用不是\r\n            暂停。\r\n","Acceleration curve matching a quadtratic ease in function.":"加速曲线匹配功能上的二次易度。\r\n","android.app.FragmentController.retainLoaderNonConfig()":"android.app.FragmentController.RetainLoaderNonConfig（）\r\n","PRIVATE_DNS_MODE_UNKNOWN":"private_dns_mode_unknown\r\n","android.app.slice.SliceManager.checkSlicePermission(android.net.Uri, int, int)":"android.app.slice.slicemanager.checkslicepermission（android.net.uri，int，int）\r\n","android.app.TaskInfo.topActivity":"Android.App.TaskInfo.TakeTactivity\r\n","Hint indicating this content should be shown instead of the normal content when the slice\n            is in small format.":"提示指示该内容应显示，而不是正常内容。\r\n            是小格式。\r\n","#onReceive":"#onreceive\r\n","android.app.job.JobInfo.isRequireBatteryNotLow()":"android.app.job.jobinfo.isrequirebatterynotlow（）\r\n","Return the name of the package that invoked this activity.":"返回调用此活动的软件包的名称。\r\n","The label to display to the user in the AppWidget picker.":"在AppWidget Picker中向用户显示的标签。\r\n","#isNotificationPolicyAccessGranted()":"#isnotification policyAccessgranted（）\r\n","Returns the map of ":"返回地图\r\n","Set the priority of this notification.":"设置此通知的优先级。\r\n","Checks the ability to modify notification do not disturb policy for the calling package.":"检查修改通知的能力不要干扰呼叫包的策略。\r\n","android.app.slice.Slice.SUBTYPE_RANGE":"android.app.slice.slice.subtype_range\r\n","android.app.assist.AssistContent.setIntent(android.content.Intent)":"android.app.assist.assistContent.setIntent（android.content.intent）\r\n","Custom item state list drawable background for action bar items.":"自定义项目状态列表可绘制动作栏项目的背景。\r\n","Animation to use on each child.":"为每个孩子使用的动画。\r\n","Return the type of event this is usage for.":"返回事件的类型，这是用法。\r\n","BigPictureStyle#bigPicture(android.graphics.Bitmap)":"bigpicturestyle＃bigpicture（android.graphics.bitmap）\r\n","Allows modification of the telephony state - power on, mmi, etc.":"允许修改电话状态 - 电源，MMI等。\r\n","The true identifier of this task, valid even if it is not running.":"该任务的真实标识符，即使它不运行，也有效。\r\n"," thumbnails, for use\n            with ":" 缩略图，用于使用\r\n            和\r\n","The condensed title associated with the item.":"与该项目相关的冷凝标题。\r\n","Sent when it is time to configure your AppWidget while it is being added to a host.":"当您将AppWidget添加到主机时，将其配置时发送。\r\n","android.animation.Keyframe.getType()":"android.animation.keyframe.getType（）\r\n","android.app.WallpaperColors.getColorHints()":"android.app.wallpapercolors.getColorhints（）\r\n"," (or the constructor, by\n              default) and ":" （或构造函数，由\r\n              默认）和\r\n","android.app.usage.UsageStats.getTotalTimeInForeground()":"android.app.usage.usagestats.getTotalTimeinforeground（）\r\n","android.app.admin.DevicePolicyManager.getEnrollmentSpecificId()":"android.app.admin.devicepolicymanager.getEnrollmentspecificid（）\r\n","Constructs a RectEvaluator that modifies and returns <code>reuseRect</code>\n            in ":"构建一个对截止词架的修改并返回<code> recreerect </code>\r\n            在\r\n","android.app.Activity.isVoiceInteraction()":"android.app.activity.isvoiceInteraction（）\r\n","Returns the hostname that was looked up.":"返回抬头的主机名。\r\n","android.app.job.JobParameters.STOP_REASON_USER":"android.app.job.jobparameters.stop_reason_user\r\n","android.app.Activity.isImmersive()":"android.app.activity.isimmermersive（）\r\n","Called when the bugreport has been shared with the device administrator app.":"与设备管理员应用程序共享BugReport时调用。\r\n","android.app.WallpaperManager.getInstance(android.content.Context)":"android.app.wallpapermanager.getInstance（android.content.context）\r\n","android.app.admin.DevicePolicyManager.ACTION_DEVICE_ADMIN_SERVICE":"android.app.admin.devicepolicymanager.action_device_admin_service\r\n","Read the RSSI for a connected remote device.":"读取连接的远程设备的RSSI。\r\n","Used as an optional int extra field in ":"用作可选的int额外字段\r\n","Gets the resource id of the voice prompt text string.":"获取语​​音提示文本字符串的资源ID。\r\n","A short message describing the error condition.":"一条描述错误条件的简短消息。\r\n","Returns a list of Fragments that have opted to retain their instance across\n            configuration changes.":"返回选择保留其实例的片段列表\r\n            配置更改。\r\n","Standard animations for a full-screen window or activity.":"全屏窗口或活动的标准动画。\r\n","android.app.people.ConversationStatus.getId()":"android.app.people.conversationstatus.getID（）\r\n","Read external storage.":"阅读外部存储。\r\n",", you should initialize your dialog\n            in this method, including calling ":"，您应该初始化对话\r\n            在这种方法中，包括调用\r\n","android.app.admin.DevicePolicyManager.isMasterVolumeMuted(android.content.ComponentName)":"android.app.admin.devicepolicymanager.ismastervolumememememed（android.content.componentname）\r\n","Save the current instance state of the given Fragment.":"保存给定片段的当前实例状态。\r\n","android.app.admin.DevicePolicyManager.getStorageEncryption(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getStorageConcryption（android.content.componentname）\r\n","Specify that an Activity should be shown over the lock screen and,\n         in a multiuser environment, across all users' windows \n         ":"指定应在锁定屏幕上显示活动，并\r\n         在多源环境中，在所有用户的窗口中\r\n         \r\n","Intent extra data key: Use this key with Intent.":"意图额外的数据密钥：意图使用此密钥。\r\n","Indicates that Lint should ignore the specified warnings for the annotated element.":"指示棉绒应忽略注释元素的指定警告。\r\n","Gets the current progress. -or- Sets the current progress.":"获得当前的进度。 - 或设置当前进度。\r\n","Access to picture-in-picture.":"访问图片。\r\n","The animation used when a window is being removed.":"删除窗口时使用的动画。\r\n","java.util.List":"java.util.list\r\n"," XML attribute\n            that was processed in ":" XML属性\r\n            在\r\n","Removes ":"去除\r\n","android.app.GameManager.GAME_MODE_STANDARD":"android.app.gamemanager.game_mode_standard\r\n","Allows applications to call into AccountAuthenticators.":"允许应用程序调用帐户范围。\r\n","Additional features are controlled by mode bits in this field.":"其他功能由该字段中的模式位控制。\r\n","android.app.admin.DevicePolicyManager.INSTALLKEY_SET_USER_SELECTABLE":"android.app.admin.devicepolicymanager.installkey_set_ser_selectable\r\n","Schedule a callback for when the application's main thread goes idle\n            (has no more events to process).":"为应用程序的主线程闲置时安排回调\r\n            （没有更多的事件要处理）。\r\n","#requestUsageTimeReport":"#requestusagetimereport\r\n","#adoptShellPermissionIdentity()":"#AdoptShellpermissionDisidentity（）\r\n","FLAG_*":"旗帜_*\r\n","Select a standard transition animation for this transaction.":"为此交易选择标准过渡动画。\r\n","Set the notification category.":"设置通知类别。\r\n","if the write failed\n":"如果写的失败\r\n\r\n","#getRealUid":"#getrealuid\r\n","Tapping on a choice should let the user edit the input before it is sent to the app.":"点击选择应让用户在发送到应用程序之前编辑输入。\r\n","Provided as a convenience for agent implementations that need to do some\n            sort of shutdown process after backup or restore is completed.":"为方便的代理实施提供了一些需要做一些\r\n            备份或还原完成后的关闭过程。\r\n","android.app.AutomaticZenRule.setZenPolicy(android.service.notification.ZenPolicy)":"android.app.automationzenrule.setzenpolicy（android.service.notification.zenpolicy）\r\n","Gets a list of all the appWidgetIds that are bound to the current host":"获取所有绑定到当前主机的AppWidgetID的列表\r\n","AccountManager#KEY_ERROR_CODE":"AccountManager＃key_error_code\r\n","Posts a notification to be shown in the status bar.":"发布将在状态栏中显示的通知。\r\n","Returns the list of packages over which user control is disabled by the device owner.":"返回设备所有者禁用用户控件的软件包列表。\r\n","Exception thrown when an app tries to start a foreground ":"当应用程序试图启动前景时，会引发异常\r\n","A String extra holding the time zone ":"绳子额外持有时区\r\n","Used as an int extra field in ":"用作int额外字段\r\n","The user has performed a two-finger triple tap gesture on the touch screen.":"用户在触摸屏上进行了两指三重水龙头手势。\r\n","android.app.appsearch.AppSearchResult.RESULT_OUT_OF_SPACE":"android.app.appsearch.appsearchresult.result_out_of_space\r\n","It is usually safe to proxy this call to the owner activity's\n            ":"通常可以安全地将此呼叫委托给所有者活动\r\n            \r\n","meta-data":"元数据\r\n","Add a listener that will respond to menu visibility change events.":"添加一个将响应菜单可见性更改事件的侦听器。\r\n"," with no options.":" 没有选择。\r\n","Gap between dashes in the stroke.":"中风中的破折号之间的差距。\r\n","Type of gradient.":"梯度类型。\r\n","Allows an application to write (but not read) the user's\n        browsing history and bookmarks.":"允许应用程序写入（但不阅读）用户的\r\n        浏览历史记录和书签。\r\n","The callback used to indicate the user is done filling in the date.":"用于指示用户完成日期的回调。\r\n","Used for permissions that allow an application to send messages\n         on behalf of the user or intercept messages being received by the\n         user.":"用于允许应用程序发送消息的权限\r\n         代表用户或收到的拦截消息\r\n         用户。\r\n","Get the start of the maintenance window.":"获取维护窗口的开始。\r\n","Delegation of permission policy and permission grant state.":"许可政策和许可赠款国家的委派。\r\n","Default spinner item style.":"默认的旋转器项目样式。\r\n","android.app.ApplicationErrorReport.installerPackageName":"android.app.ApplicationErroreport.installerpackagename\r\n","android.app.admin.DevicePolicyManager.MAKE_USER_EPHEMERAL":"android.app.admin.devicepolicymanager.make_user_ephemeral\r\n","Whether the items are capable of displaying a check mark.":"项目是否能够显示复选标记。\r\n","Check if A2DP profile is streaming music.":"检查A2DP配置文件是否正在流媒体音乐。\r\n","android.app.admin.DevicePolicyManager.setKeepUninstalledPackages(android.content.ComponentName, java.util.List)":"android.app.admin.devicepolicymanager.setkeepnekekunekenstalledpackages（android.content.componentname，java.util.list）\r\n","Call immediately after one of the flavors of ":"在其中一种口味之后立即致电\r\n","android.app.Service.stopSelf(int)":"Android.App.Service.Stopself（int）\r\n","android.app.admin.DevicePolicyManager.ID_TYPE_MEID":"android.app.admin.devicepolicymanager.id_type_meid\r\n","The preferred left padding for an expandable list item (for child-specific layouts,\n             use expandableListPreferredChildPaddingLeft).":"可扩展列表项目的首选左填充物（对于特定于儿童的布局，\r\n             使用ExplablableSlistPreferredChildPaddingLeft）。\r\n","Used for permissions that provide access to networking services.":"用于提供网络服务访问权限的权限。\r\n","android.app.VoiceInteractor.submitRequest(android.app.Request, java.lang.String)":"android.app.voiceInteractor.SubmitRequest（android.app.request，java.lang.string）\r\n","android.app.Activity.onPerformDirectAction(java.lang.String, android.os.Bundle, android.os.CancellationSignal, java.util.function.Consumer)":"android.app.Activity.Nperformitive.nperformdirectaction（java.lang.string，android.os.bundle，android.os.os.cancellationsignal，java.util.function.consumer）\r\n","Shows the user the system defined message for telling the user how to exit\n            lock task mode.":"向用户显示系统定义的消息，用于告诉用户如何退出\r\n            锁任务模式。\r\n","Returns the notification light color for notifications posted to this channel. -or- Sets the notification light color for notifications posted to this channel, if lights are\n            ":"返回通知浅色，以获取发布到此频道的通知。 - 或 - 设置通知浅色，以示出发布到此频道的通知，如果灯光为\r\n            \r\n","#getWebUri":"#getweburi\r\n","android.app.admin.DevicePolicyManager.getCrossProfileCalendarPackages(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getCrossprofilecalendarpackages（android.content.componentname）\r\n","If the service has become a foreground service by calling\n            ":"如果该服务已通过致电成为前景服务\r\n            \r\n","android.app.Notification.tickerText":"android.app.notification.tickertext\r\n","Execute a particular menu item.":"执行特定的菜单项。\r\n","Determines whether to measure all children or just those in\n             the VISIBLE or INVISIBLE state when measuring.":"确定是衡量所有儿童还是仅仅在\r\n             测量时可见或看不见的状态。\r\n","android.app.admin.DevicePolicyManager.setSecureSetting(android.content.ComponentName, java.lang.String, java.lang.String)":"android.app.admin.devicepolicymanager.setsecuresetting（android.content.componentname，java.lang.string，java.lang.string）\r\n","Retrieve a PendingIntent that will start a new activity, like calling\n            ":"检索将启动新活动的悬而未决的人，例如致电\r\n            \r\n","android.app.usage.UsageStats.getLastTimeVisible()":"android.app.usage.usagestats.getlasttimevisible（）\r\n","Activity#onStart":"活动＃onstart\r\n","Gets the type of the version.":"获取版本的类型。\r\n","Called when the context menu for this view is being built.":"当构建此视图的上下文菜单时，请致电。\r\n","Return true if the fragment is in the resumed state.":"如果片段处于恢复状态，则返回true。\r\n","Allows an application to inject user events (keys, touch, trackball)\n         into the event stream and deliver them to ANY window.":"允许应用程序注入用户事件（键，触摸，轨迹球）\r\n         进入事件流并将其运送到任何窗口。\r\n","android.app.TaskInfo.taskId":"android.app.taskinfo.taskid\r\n","Show the custom view if one has been set.":"如果设置了自定义视图，则显示自定义视图。\r\n","Notification category: asynchronous bulk message (email).":"通知类别：异步批量消息（电子邮件）。\r\n","android.appwidget.AppWidgetManager.OPTION_APPWIDGET_HOST_CATEGORY":"android.appwidget.appwidgetManager.option_appwidget_host_category\r\n","android.app.Activity.setTranslucent(boolean)":"android.app.activity.settranslucent（boolean）\r\n","Allows applications to read the sync settings \n":"允许应用程序读取同步设置\r\n\r\n","#setLongSupportMessage(ComponentName, CharSequence)":"#setlongsupportmessage（componentName，charsequence）\r\n","This convenience helper combines the functionality of ":"这种便利助手结合了\r\n","Method where the instrumentation thread enters execution.":"仪器线进入执行的方法。\r\n","#startOpNoThrow":"#startopnothrow\r\n","Uninitialized error report.":"非初始化错误报告。\r\n","An offset for the thumb that allows it to extend out of the range of the track.":"拇指的偏移，使其可以扩展到轨道的范围。\r\n","PendingIntent#getBroadcast\n                   IntentSender.getBroadcast()":"pendingIntent＃getBroadcast\r\n                   intentsender.getBroadcast（）\r\n","The animation used when a window is going from INVISIBLE to VISIBLE.":"当窗口从看不见到可见时使用的动画。\r\n","Allows an application to receive WAP push messages.":"允许应用程序接收WAP推送消息。\r\n","Flag indicating whether this is a translucent window.":"标志表示这是否是半透明的窗口。\r\n","android.app.admin.DevicePolicyManager.getPendingSystemUpdate(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getPendingsystemupdate（android.content.componentname）\r\n","Returns the Transition that will be used to move Views out of the scene when the Fragment is\n            preparing to be removed, hidden, or detached because of popping the back stack. -or- Sets the Transition that will be used to move Views out of the scene when the Fragment is\n            preparing to be removed, hidden, or detached because of popping the back stack.":"返回将用于将视图移出现场的过渡\r\n            准备被弹出后堆栈而被拆除，隐藏或分离。 - 或设置将用于将视图移出场景时的过渡\r\n            准备被弹出后堆栈而被拆除，隐藏或分离。\r\n","AccessibilityService":"可访问性服务\r\n","Enables or disables the mipmap hint.":"启用或禁用MIPMAP提示。\r\n","The part of the UI shown by an\n       ":"一个UI的部分由\r\n       \r\n","Backs up the configured ":"备份配置的\r\n","android.app.Notification.CATEGORY_RECOMMENDATION":"android.app.notification.category_recommendation\r\n","android.app.appsearch.AppSearchResult.RESULT_INVALID_SCHEMA":"android.app.appsearch.appsearchresult.result_invalid_schema\r\n","Number of clients connected to the service.":"连接到服务的客户数量。\r\n"," when a storage issue arises which doesn't fit under any\n            other error code.":" 当出现存储问题时，任何不适合\r\n            其他错误代码。\r\n","android.app.admin.NetworkEvent.getId()":"android.app.admin.networkevent.getID（）\r\n","android.accounts.AccountManager.ACTION_ACCOUNT_REMOVED":"android.accounts.accountmanager.action_account_remaved\r\n","android.app.job.JobInfo.Builder JobInfo.Builder":"android.app.job.jobinfo.builder jobinfo.builder\r\n","If an ":"如果\r\n","BluetoothProfile#HEADSET":"BluetoothProfile＃耳机\r\n","android.app.AlarmManager.setWindow(int, long, long, android.app.PendingIntent)":"android.app.alarmmanager.setwindow（int，long，long，android.app.pendendIntent）\r\n","Default horizontal gap between keys.":"键之间的默认水平差距。\r\n","android.app.SearchManager.CURSOR_EXTRA_KEY_IN_PROGRESS":"android.app.searchmanager.cursor_extra_key_in_progress\r\n","Returns the created options as a Bundle, which can be passed to\n            ":"返回创建的选项作为捆绑包，可以传递给\r\n            \r\n","android.app.slice.Slice.HINT_SEE_MORE":"android.app.slice.slice.hint_see_more\r\n","android.app.admin.DevicePolicyManager.createAndManageUser(android.content.ComponentName, java.lang.String, android.content.ComponentName, android.os.PersistableBundle, int)":"android.app.admin.devicepolicymanager.createandmanageuser（android.content.componentname，java.lang.string，android.content.component.componentname，android.os.os.persistablebundle，int）\r\n","Returns the system-wide Private DNS mode.":"返回系统范围的私有DNS模式。\r\n","android.animation.LayoutTransition.removeChild(android.view.ViewGroup, android.view.View)":"android.animation.layouttransition.removechild（android.view.viewgroup，android.view.view）\r\n","To be called whenever the slice becomes visible to the user.":"每当用户可见切片时被称为。\r\n","#contentIntent":"#contentintent\r\n","Set an input filter to constrain the text length to the\n             specified number.":"设置输入过滤器以将文本长度限制为\r\n             指定号码。\r\n","Notification category: ongoing information about device or contextual status.":"通知类别：有关设备或上下文状态的持续信息。\r\n"," property should return the value\n        last passed to\n        ":" 属性应返回值\r\n        最后一次传递\r\n        \r\n","Retrieve the data contained in this result.":"检索此结果中包含的数据。\r\n","android.app.Instrumentation.callActivityOnStart(android.app.Activity)":"android.app.instrumentation.callactivityOnstart（android.app.Activity）\r\n","'s container.":"的容器。\r\n","android.animation.LayoutTransition.setInterpolator(int, android.animation.TimeInterpolator)":"android.animation.layouttransition.setInterPolator（int，android.animation.timeinterpolator）\r\n","Set the display position of the current wallpaper within any larger space, when\n            that wallpaper is visible behind the given window.":"将当前墙纸的显示位置在任何较大空间内，当\r\n            该墙纸在给定窗口后面可见。\r\n","Return whether factory reset protection for the device is enabled or not.":"返回设备的出厂重置保护是否已启用。\r\n","\n for a set of AppWidgets.":"\r\n 对于一组AppWidgets。\r\n","S":"s\r\n","Gets the input method options specified in the searchable attributes.":"获取在可搜索属性中指定的输入方法选项。\r\n","android.app.admin.DevicePolicyManager.getCertInstallerPackage(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getcertinstallerpackage（android.content.componentname）\r\n","android.accessibilityservice.AccessibilityServiceInfo.isAccessibilityTool()":"android.accosconibilityservice.Accessibilityserviceinfo.isaccosconibilitytool（）\r\n","android.accessibilityservice.AccessibilityService.onGesture(android.accessibilityservice.AccessibilityGestureEvent)":"android.accosconibilityservice.Accessibilityservice.ongesture（android.accosconibilityservice.accessibility gestibility gestureevent）\r\n","Bit mask that is set for all enter transitions.":"为所有输入过渡设置的位掩码。\r\n","Revokes a runtime permission from a package.":"撤销来自软件包的运行时许可。\r\n"," in the active window.":" 在活动窗口中。\r\n","State identifier indicating the group is expanded.":"表明该组扩展的状态标识符。\r\n","android.app.slice.SliceManager.grantSlicePermission(java.lang.String, android.net.Uri)":"android.app.slice.slicemanager.grantslicepermission（java.lang.string，android.net.uri）\r\n","when the download has failed (and will not be retried).":"下载失败后（不会重述）。\r\n","Set a currently active fragment in this FragmentManager as the primary navigation fragment.":"将当前活跃的片段设置为此片段曼格作为主要导航片段。\r\n","android.bluetooth.BluetoothGattCharacteristic.mDescriptors":"android.bluetooth.bluetoothgattcharacteristic.mdescriptors\r\n","Gets the search suggestion content provider authority.":"获取搜索建议内容提供商权限。\r\n","The maxmimum number of columns to create when automatically positioning children.":"自动定位儿童时要创建的最大列数。\r\n","Package name of the application which installed the application this\n            report pertains to.":"安装应用程序的应用程序的包名称\r\n            报告有关。\r\n","android.animation.AnimatorSet.playSequentially(android.animation.Animator)":"android.animation.animatorset.playsential（android.animation.animator）\r\n","#onNewIntent":"#onnewintent\r\n","android.app.assist.AssistStructure":"android.app.assist.Assiststructure\r\n","android.app.Dialog.setDismissMessage(android.os.Message)":"android.app.dialog.setdismissmessage（android.os.message）\r\n","\n            \n            This extra represents the previous connection state.":"\r\n            \r\n            此额外代表先前的连接状态。\r\n","Called by device or profile owner to query the set of packages that are allowed to access\n            the network directly when always-on VPN is in lockdown mode but not connected.":"由设备或配置文件所有者调用以查询允许访问的软件包集\r\n            当始终在VPN处于锁定模式但未连接时，网络直接直接。\r\n","android.app.NotificationManager.AUTOMATIC_RULE_STATUS_ENABLED":"android.app.notificationmanager.automatic_rule_status_enabled\r\n","windowStartMillis":"WindowStartMillis\r\n","JniPeerMembers":"jnipeerMembers\r\n","Context#createAttributionContext\n            attribution tag":"上下文＃CreateAttributionContext\r\n            归因标签\r\n","android.app.Person.isImportant()":"android.app.person.isimportant（）\r\n",", this\n is the name of the component that is being used in this process.":"， 这个\r\n 是此过程中使用的组件的名称。\r\n","android.app.NotificationManager.IMPORTANCE_HIGH":"android.app.notificationmanager.importance_high\r\n","Bluetooth device type, Dual Mode - BR/EDR/LE":"蓝牙设备类型，双模式-BR/EDR/LE\r\n","android.app.AppComponentFactory.instantiateActivity(java.lang.ClassLoader, java.lang.String, android.content.Intent)":"android.app.appcomponentFactory.instantiateactivity（java.lang.classloader，java.lang.string，android.content.intent）\r\n"," is enabled,\n            multi-finger gestures are also enabled.":" 已启用，\r\n            还启用了多指手势。\r\n","android.app.NotificationManager.getConsolidatedNotificationPolicy()":"android.app.notificationmanager.getConsolidatedNotificationPolicy（）\r\n","#RESET_PASSWORD_REQUIRE_ENTRY":"#Reset_Password_require_entry\r\n","#contentView":"#ContentView\r\n","Returns the current runtime nearby notification streaming policy set by the device or profile\n            owner. -or- Called by a device/profile owner to set nearby notification streaming policy.":"返回设备或配置文件设置的当前运行时通知流策略\r\n            所有者。 - 或者由设备/配置文件所有者调用以将附近的通知流策略设置。\r\n","android.app.Fragment.isRemoving()":"android.app.fragment.isremoving（）\r\n","AppSearchException":"AppSearchException\r\n","Defines the horizontal scrollbar track drawable.":"定义可绘制的水平滚动轨道。\r\n","Set the ticker text and associated ":"设置股票文字和关联\r\n","Called by an application that is administering the device to set the minimum number of upper\n            case letters required in the password.":"通过管理设备的应用程序来设置最小数量\r\n            密码中需要的案例信件。\r\n","android.app.admin.DeviceAdminInfo":"android.app.admin.deviceadmininfo\r\n","android.app.Notification.EXTRA_CHANNEL_GROUP_ID":"android.app.notification.extra_channel_group_id\r\n","long[]":"长[]\r\n","android.app.ApplicationExitInfo.getImportance()":"android.app.applicationexitinfo.getImportance（）\r\n","State value for ":"状态价值\r\n","android.appwidget.AppWidgetManager.EXTRA_APPWIDGET_PROVIDER_PROFILE":"android.appwidget.appwidgetManager.extra_appwidget_provider_profile\r\n","The zero-based index of the columns to collapse.":"列的零基索引倒塌。\r\n"," when the activity is\n            being re-initialized from a previously saved state, given here in\n            <var>savedInstanceState</var>.":" 当活动是\r\n            从以前保存的状态重新定位，此处给出\r\n            <var> savedinstancestate </var>。\r\n","Removes an account from the AccountManager.":"从AccountManager中删除帐户。\r\n","android.app.Notification.MessagingStyle.Message":"android.app.notification.messagingstyle.message\r\n","Solid color for the gradient shape.":"梯度形状的纯色。\r\n","android.appwidget.AppWidgetManager.updateAppWidgetProviderInfo(android.content.ComponentName, java.lang.String)":"android.appwidget.appwidgetManager.updateappwidgetProviderInfo（android.content.componentname，java.lang.string）\r\n","android.app.Fragment.onActivityResult(int, int, android.content.Intent)":"Android.App.Fragment.OnactivityResult（int，int，android.content.intent）\r\n","Default quickcontact badge style with small quickcontact window.":"带有小快速窗口的默认QuickContact徽章样式。\r\n","Consume the current entity's data without extracting it into a buffer\n            for further processing.":"消耗当前实体的数据而不将其提取到缓冲区中\r\n            用于进一步处理。\r\n","Default WebView style.":"默认的WebView样式。\r\n","android.app.job.JobServiceEngine.onStartJob(android.app.job.JobParameters)":"android.app.job.jobserviceengine.onstartjob（android.app.job.jobparameters）\r\n","#retrieveNetworkLogs":"#retrievenetworklogs\r\n","Intent#fillIn(Intent, int)":"意图＃填充（意图，int）\r\n","The provisioning mode for managed profile.":"托管配置文件的配置模式。\r\n","A representation of settings that apply to a collection of similarly themed notifications.":"适用于类似主题通知的设置的表示。\r\n","Drawable to use as a background for separators on a list with a dark background \n":"可以用作黑暗背景的列表上的分隔符的背景\r\n\r\n","Default notification ":"默认通知\r\n","android.bluetooth.BluetoothAdapter.EXTRA_PREVIOUS_CONNECTION_STATE":"android.bluetooth.bluetoothadapter.extra_previous_connection_state\r\n","Query the download manager about downloads that have been requested.":"查询下载经理有关已要求的下载。\r\n","android.app.Activity.startActivityForResult(android.content.Intent, int)":"android.app.activity.startactivityForresult（android.content.intent，int）\r\n","Variation of textEditSidePasteWindowLayout displayed when the clipboard is empty.":"剪贴板为空时显示的TextedEditsidePasteWIndowLayout的变化。\r\n","During the onSearchRequested() callbacks, this function will return the\n            ":"在onSearchRequested（）回调期间，此功能将返回\r\n            \r\n","Defines the direction of layout drawing.":"定义布局图的方向。\r\n"," when it's not allowed to do so.":" 当不允许这样做时。\r\n","The drawable to be drawn below the text.":"可在文本下方绘制的绘制。\r\n","Gets the name of the global search activity.":"获取全球搜索活动的名称。\r\n","android.accessibilityservice.AccessibilityService.GLOBAL_ACTION_ACCESSIBILITY_ALL_APPS":"Android.AccessibilityService.Accessibilityservice.global_action_accessibility_all_apps\r\n","android.app.job.JobInfo.getFlexMillis()":"android.app.job.jobinfo.getflexmillis（）\r\n"," should be shown as a count-up timer (specifically\n            a ":" 应显示为计数计时器（特别是\r\n            一个\r\n","android.accessibilityservice.AccessibilityService.onGesture(int)":"Android.Accesseribilityservice.Accessibilityservice.ongesture（int）\r\n","Create an IntArrayEvaluator that reuses <code>reuseArray</code> for every evaluate() call.":"创建一个intarrayevaluator，为每个评估（）调用重新使用<code> reusearray </code>。\r\n","During a full restore, indicates that the file system object being restored\n is an ordinary file.":"在完整的还原过程中，指示文件系统对象要还原\r\n 是一个普通文件。\r\n","android.app.Notification.EXTRA_MESSAGES":"android.app.notification.extra_messages\r\n","android.app.admin.DevicePolicyManager.setCrossProfileCallerIdDisabled(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setcrossprofilecalleriddisabled（android.content.componentname，boolean）\r\n","android.app.admin.DevicePolicyManager.getAutoTimeEnabled(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getAutotimeNabled（android.content.componentname）\r\n","android.appwidget.AppWidgetProviderInfo.loadDescription(android.content.Context)":"android.appwidget.appwidgetProviderInfo.loaddescription（android.content.context）\r\n","\n      Returns a\n      ":"\r\n      返回a\r\n      \r\n","Returns true if any of the child animations of this AnimatorSet have been started and have\n            not yet ended.":"如果启动了该动画的任何儿童动画，则返回true\r\n            尚未结束。\r\n","Returns whether this Animator has been started and not yet ended.":"返回该动画师是否已经开始并且尚未结束。\r\n","DialogInterface#BUTTON_POSITIVE":"DialogInterface＃button_positive\r\n"," call that created this ":" 调用创建这个\r\n","android.app.admin.DeviceAdminReceiver.onSecurityLogsAvailable(android.content.Context, android.content.Intent)":"android.app.admin.deviceadminreceiver.onsecuritylogsavailable（android.content.context，android.content.intent）\r\n"," when an HTTP code was received that download manager\n            can't handle.":" 收到HTTP代码时，下载经理\r\n            无法处理。\r\n","A resource id of a layout.":"布局的资源ID。\r\n","Allows an application to read the user's personal profile data.":"允许应用程序读取用户的个人资料数据。\r\n","android.app.appsearch.GenericDocument.getPropertyBooleanArray(java.lang.String)":"android.app.appsearch.genericdocument.getPropertybooleanarray（java.lang.string）\r\n","#startIntentSenderForResult(IntentSender, int, Intent, int, int, int)":"#startintententsenderforresult（Intentents，Int，Intent，Int，Int，Int，Int）\r\n","Constructs and returns a PropertyValuesHolder object with the specified property name or\n            setter name for use in a multi-float setter function using ObjectAnimator.":"用指定的属性名称或\r\n            使用ObjectAnimator在多流线设置器函数中使用的Setter名称。\r\n","Fragment#onAttach(Context)":"片段＃onattach（上下文）\r\n","android.app.Notification.EXTRA_ANSWER_INTENT":"android.app.notification.extra_answer_intent\r\n","android.appwidget.AppWidgetProviderInfo.WIDGET_CATEGORY_KEYGUARD":"android.appwidget.appwidgetProviderInfo.widget_category_keyguard\r\n","PRIVATE_DNS_SET_ERROR_FAILURE_SETTING":"private_dns_set_error_failure_setting\r\n","Enable more aggressive scheduling for latency-sensitive low-runtime VR threads.":"启用对延迟敏感的低暴跌VR线程的更具侵略性调度。\r\n","android.app.NotificationChannel.setLockscreenVisibility(int)":"Android.App.NotificationChannel.Setlockscreenvisibility（INT）\r\n","Allows an application to force a BACK operation on whatever is the\n         top activity.":"允许应用程序迫使后背操作\r\n         顶级活动。\r\n",") that has\n            changed.":"） 具有\r\n            更改。\r\n","Gets the suggestion threshold.":"获得建议阈值。\r\n","Starts a scan for Bluetooth LE devices.":"开始扫描蓝牙LE设备。\r\n","android.app.job.JobService.onStopJob(android.app.job.JobParameters)":"android.app.job.jobservice.onstopjob（android.app.job.jobparameters）\r\n",", which you can modify in-place. -or- Optional additional content items that are involved with\n            the current UI.":"，您可以在就场修改。 - 或 - 可选的其他内容项\r\n            当前的UI。\r\n","Retrieve the engine's IPC interface that should be returned by\n            ":"检索应返回的引擎的IPC接口\r\n            \r\n","\n            or later, tabs are typically presented in the UI using the new\n            ":"\r\n            或以后，通常使用新的选项卡在UI中显示\r\n            \r\n"," here since\n            KeyManagerFactory is not required for the custom SSL configuration, but it might be used by the application to implement a more advanced\n            mechanism of key management.\n            ":" 从那以后\r\n            自定义SSL配置不需要KeymanagerFactory，但是应用程序可以使用它来实现更高级的\r\n            关键管理机制。\r\n            \r\n","android.app.FragmentController.dumpLoaders(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])":"android.app.FragmentController.dumploaders（java.lang.string，java.io.filedescriptor，java.io.printwriter，java.lang.string []）\r\n","\n          Extra options for the application's UI.\n        ":"\r\n          应用程序UI的额外选项。\r\n        \r\n","Constructs a new object from three colors.":"从三种颜色中构造一个新对象。\r\n"," but is called for activities\n            created with the attribute ":" 但被要求进行活动\r\n            用属性创建\r\n","Enqueue a new download.":"加入新下载。\r\n","Returns the Transition that will be used for shared elements transferred into the content\n            Scene. -or- Sets the Transition that will be used for shared elements transferred into the content\n            Scene.":"返回将用于转移到内容的共享元素的过渡\r\n            场景。 - 或设置将用于传输到内容的共享元素的过渡\r\n            场景。\r\n","android.bluetooth.BluetoothAdapter.EXTRA_SCAN_MODE":"android.bluetooth.bluetoothadapter.extra_scan_mode\r\n","android.app.TimePickerDialog.updateTime(int, int)":"android.app.TimePickerDialog.updateTime（int，int）\r\n","Intent#FLAG_ACTIVITY_NEW_DOCUMENT":"意图＃flag_activity_new_document\r\n","Identifier for the child that represents the drawer's handle.":"代表抽屉手柄的孩子的标识符。\r\n","Unique job id associated with this application (uid).":"与此应用程序（UID）关联的唯一作业ID。\r\n","The component of the target activity if this task was started from an activity alias.":"如果该任务是从活动别名开始的，则目标活动的组成部分。\r\n"," if this task was cancelled before it completed\n normally.":" 如果此任务在完成之前已取消\r\n 一般。\r\n","android.app.WallpaperManager.getFastDrawable()":"android.app.wallpapermanager.getFastDrawable（）\r\n","Mode of the keyboard.":"键盘模式。\r\n","android.app.NotificationManager.getNotificationChannelGroup(java.lang.String)":"android.app.notificationmanager.getNotificationChannelGroup（java.lang.string）\r\n","android.app.SharedElementCallback":"Android.App.sharedElementCallback\r\n","Allows applications to change network connectivity state \n":"允许应用程序更改网络连接状态\r\n\r\n","Returns all the schema types that are opted out of being displayed and visible on any system\n            UI surface.":"返回在任何系统上显示和可见的所有架构类型\r\n            UI表面。\r\n"," should be shown on top of the lock screen whenever\n            the lockscreen is up and the activity is resumed.":" 每当锁定屏幕的顶部显示\r\n            锁定屏幕已升起，活动恢复。\r\n","android.app.admin.NetworkEvent.getTimestamp()":"android.app.admin.networkevent.getTimestamp（）\r\n","android.app.ActivityManager.getRunningAppProcesses()":"android.app.activityManager.getRunningAppProcesses（）\r\n","AndroidClientHandler uses a custom ":"AndroidClientHandler使用自定义\r\n","Called by a profile owner of a managed profile to determine whether or not caller-Id\n            information has been disabled.":"由托管配置文件的个人资料所有者调用以确定是否呼叫者ID\r\n            信息已被禁用。\r\n","Adds an auth token to the AccountManager cache for an account.":"在帐户的帐户中添加一个auth令牌。\r\n","android.app.slice.Slice.HINT_PARTIAL":"android.app.slice.slice.hint_partial\r\n","Subtype to tag an item as representing the current int value for a ":"亚型标记项目代表当前的int值\r\n","android.app.ListActivity.getListAdapter()":"android.app.listactivity.getListAdapter（）\r\n","Allows an application to modify global audio settings \n":"允许应用程序修改全局音频设置\r\n\r\n","android.animation.PropertyValuesHolder":"android.animation.propertyvaluesholder\r\n","android.app.admin.DeviceAdminReceiver.onSystemUpdatePending(android.content.Context, android.content.Intent, long)":"android.app.admin.deviceadminreceiver.onsystemupdatepending（android.content.context，android.content.intent，long）\r\n","Reenable the keyguard.":"可重新确定关键人物。\r\n","Rotation constant: Freeze rotation to 270 degrees .":"旋转常数：冻结旋转至270度。\r\n","#CHANGE_DISAPPEARING":"#change_disappearing\r\n","android.app.TaskInfo.baseActivity":"android.app.taskinfo.baseyctitive\r\n","Default AutoCompleteTextView style.":"默认的autococtetextview样式。\r\n","If true, makes the end edge of this view match the end edge of the parent.":"如果为true，则使此视图的最终边缘与父端边缘匹配。\r\n","android.app.Activity.closeOptionsMenu()":"android.app.activity.closeoptionsmenu（）\r\n","android.app.ActivityManager.setProcessStateSummary(byte[])":"android.app.activityManager.setProcessStatesummary（byte []）\r\n","android.app.ActivityManager.appNotResponding(java.lang.String)":"android.app.activityManager.AppNotResponding（java.lang.string）\r\n","Called each time a new batch of network logs can be retrieved.":"每次都可以检索一批新的网络日志。\r\n","#getAccountsByType":"#getAccountsbyType\r\n","android.bluetooth.BluetoothGattCharacteristic.getIntValue(int, int)":"android.bluetooth.bluetoothgattcharacteristic.getIntvalue（int，int）\r\n","Returns whether wallpapers are supported for the calling user.":"返回是否支持呼叫用户的壁纸。\r\n","Variant of ":"变体\r\n","Returns the score of the ":"返回分数\r\n","The number of milliseconds for the LED to be off while it's flashing.":"LED闪烁时，LED的毫秒数。\r\n","Returns the broadcast receiver that is providing this widget.":"返回提供此小部件的广播接收器。\r\n","Called when a panel is being closed.":"关闭面板时称呼。\r\n","Indicates that the widget can be displayed on the keyguard.":"指示小部件可以显示在钥匙守卫上。\r\n","android.appwidget.AppWidgetManager.ACTION_APPWIDGET_CONFIGURE":"android.appwidget.appwidgetManager.action_appwidget_configure\r\n","android.animation.RectEvaluator":"android.animation.Rectevaluator\r\n","Call to customize the basic appearance and behavior of the\n            fragment's dialog.":"呼吁自定义基本外观和行为\r\n            片段的对话。\r\n","Called when a tab that is already selected is chosen again by the user.":"用户再次选择已经选择的选项卡时调用。\r\n","android.app.admin.DevicePolicyManager.setAlwaysOnVpnPackage(android.content.ComponentName, java.lang.String, boolean)":"android.app.admin.devicepolicymanager.setalwaysonvpnpackage（android.content.componentname，java.lang.string，boolean）\r\n","Called by a device or profile owner to restrict packages from using metered data.":"由设备或配置文件所有者调用以限制软件包使用计量数据。\r\n","Used for permissions that provide access to the device\n         calendar to create / view events.":"用于提供对设备访问的权限\r\n         日历来创建 /查看事件。\r\n","android.app.NotificationChannel.setLightColor(int)":"Android.App.NotificationChannel.setlightColor（INT）\r\n",": won't show reason for wiping to the user.":"：不会向用户显示擦拭的原因。\r\n","When set to false, prevents the layout from aligning its children's\n             baselines.":"设置为false时，防止布局对齐孩子的孩子\r\n             基线。\r\n","Restores the saved state for all Fragments.":"恢复所有片段的保存状态。\r\n","Returns complete component name of this instrumentation.":"返回此仪器的完整组件名称。\r\n","android.app.admin.SecurityLog.TAG_PASSWORD_EXPIRATION_SET":"android.app.admin.securitylog.tag_password_expiration_set\r\n","The preference layout that has the child/tabbed effect.":"具有儿童/选项卡效果的偏好布局。\r\n","Returns the parent Fragment containing this Fragment.":"返回包含此片段的父片段。\r\n","Result from ":"结果\r\n","Drawable or color to draw between list items.":"可绘制或颜色以在列表项目之间绘制。\r\n","android.content.pm.ShortcutInfo.Builder#setLocusId(android.content.LocusId)\n                 setLocusId":"android.content.pm.shortcutinfo.builder＃setlocusid（android.content.locusid）\r\n                 setlocusid\r\n","android.app.backup.BackupAgentHelper.onRestore(android.app.backup.BackupDataInput, int, android.os.ParcelFileDescriptor)":"android.app.backup.backupagenthelper.onrestore（android.app.backup.backup.backupdatainput，int，android.os.parcelfiledScriptor）\r\n","Indicates that an admin has set a password history length.":"表示管理员设置了密码历史记录长度。\r\n","Retrieve the current system wallpaper; if\n            no wallpaper is set, the system built-in static wallpaper is returned.":"检索当前的系统壁纸；如果\r\n            没有设置墙纸，返回系统内置的静态墙纸。\r\n","android.app.FragmentManager.popBackStackImmediate(java.lang.String, int)":"Android.App.FragmentManager.popbackStackimMediate（java.lang.string，int）\r\n","android.app.admin.DevicePolicyManager.getUserRestrictions(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getUserrtrictions（android.content.componentname）\r\n","FALSE":"错误的\r\n","android.app.ApplicationExitInfo.getProcessName()":"android.app.applicationexitinfo.getProcessName（）\r\n","if the request was canceled for any\n reason":"如果取消了任何请求\r\n 原因\r\n","android.app.slice.Slice.HINT_LAST_UPDATED":"android.app.slice.slice.hint_last_updated\r\n","This method is called if the system has determined that you must stop execution of your job\n            even before you've had a chance to call ":"如果系统确定您必须停止执行工作，则调用此方法\r\n            甚至在您有机会打电话之前\r\n","Returns the current animation fraction, which is the elapsed/interpolated fraction used in\n            the most recent frame update on the animation.":"返回当前的动画分数，即所使用的经过/插值分数\r\n            动画的最新帧更新。\r\n","Called when this fragment's option menu items are no longer being\n            included in the overall options menu.":"当此片段的选项菜单项不再是\r\n            包含在“整体选项”菜单中。\r\n","android.accounts.AccountManager.setUserData(android.accounts.Account, java.lang.String, java.lang.String)":"android.accounts.accountmanager.setuserdata（android.accounts.accounts.account，java.lang.string，java.lang.string）\r\n","android.app.usage.EventStats.getLastTimeStamp()":"android.app.usage.eventstats.getlasttimestamp（）\r\n","android.app.admin.DevicePolicyManager.FLAG_EVICT_CREDENTIAL_ENCRYPTION_KEY":"android.app.admin.devicepolicymanager.flag_evict_credential_encryptimption_key\r\n","android.app.RemoteInput.getResultsSource(android.content.Intent)":"android.app.remoteinput.getResultsSource（android.content.intent）\r\n","android.app.AppOpsManager.finishProxyOp(java.lang.String, int, java.lang.String, java.lang.String)":"android.app.appopsmanager.finishproxyop（java.lang.string，int，java.lang.string，java.lang.string）\r\n","android.appwidget.AppWidgetProvider.onReceive(android.content.Context, android.content.Intent)":"android.appwidget.appwidgetProvider.onreceive（android.content.context，android.content.intent）\r\n","Returns the number of namespaces that have at least one alive document in the current\n            session's database.":"返回当前至少有一个活着文档的名称空间数量\r\n            会话的数据库。\r\n","android.app.TaskStackBuilder.getPendingIntent(int, int)":"android.app.taskStackBuilder.getPendingIntent（int，int）\r\n","Return an icon representing the action.":"返回代表动作的图标。\r\n","\n          Constructs and initializes a new \n          ":"\r\n          构建并初始化一个新的\r\n          \r\n","Called by device owner or profile owner of an organization-owned managed profile to retrieve\n            device logs from before the device's last reboot.":"由设备所有者或组织拥有的托管个人资料的所有者调用以检索\r\n            设备从设备的最后一次重新启动之前登录。\r\n"," when an error receiving or processing data occurred at\n            the HTTP level.":" 当收到或处理数据发生错误时\r\n            HTTP级别。\r\n","android.accessibilityservice.AccessibilityServiceInfo.setInteractiveUiTimeoutMillis(int)":"Android.AccessibilityService.Accessibilityserviceinfo.setInteractiveUitimeTimeTmillis（int）\r\n","Small inverse ProgressBar style.":"小型逆进度栏样式。\r\n","android.app.admin.DevicePolicyManager.getEndUserSessionMessage(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getEndusersessessionMessage（android.content.componentname）\r\n","android.app.admin.DevicePolicyManager#OPERATION_SAFETY_REASON_DRIVING_DISTRACTION":"android.app.admin.devicepolicymanager＃uperation_safety_reason_driving_distraction\r\n","AccountManager#KEY_ERROR_MESSAGE":"AccountManager＃key_error_message\r\n","android.app.admin.DevicePolicyManager.installCaCert(android.content.ComponentName, byte[])":"android.app.admin.devicepolicymanager.installcacert（android.content.componentname，byte []）\r\n","If non-zero, this is the process the service is running in.":"如果非零，这是服务正在运行的过程。\r\n","The left bound for an item's indicator.":"左绑定了项目的指示器。\r\n","Specify the relative importance or ability in handling a particular\n         Intent.":"指定处理特定的相对重要性或能力\r\n         意图。\r\n","F:Android.App.ActivityManager.MoveTaskToFront":"F：android.app.activityManager.movetasktofront\r\n","Return the class name of the service component that implements\n            this wallpaper.":"返回实施服务组件的类名称\r\n            这个墙纸。\r\n","android.app.AppOpsManager.OPSTR_PICTURE_IN_PICTURE":"android.app.appopsmanager.opptr_picture_in_picture\r\n","Indicates that a cryptographic key was imported.":"表明进口加密密钥。\r\n","Called when a key was released and not handled by any of the views\n            inside of the activity.":"释放钥匙而不被任何视图处理时称呼\r\n            活动的内部。\r\n","android.app.job.JobParameters.STOP_REASON_CONSTRAINT_CHARGING":"android.app.job.jobparameters.stop_reason_constraint_charing\r\n"," method.\n          The proscribed implementation template is:\n        ":" 方法。\r\n          禁止的实施模板是：\r\n        \r\n","If there is an animation running for a recent state change, ends it.":"如果有动画运行以进行最近的状态变化，请结束它。\r\n","NetworkStats.Bucket#TAG_NONE":"networkstats.bucket＃tag_none\r\n","This class represents a uniquely identifiable package.":"该类代表一个独特的可识别软件包。\r\n","Color for text that appears within action menu items.":"在动作菜单项中出现的文本颜色。\r\n","Set the animated values for this object to this set of floats.":"将此对象的动画值设置为这组浮子。\r\n","The icon to show in the popup preview.":"在弹出预览中显示的图标。\r\n","Change the current system wallpaper to a bitmap.":"将当前的系统壁纸更改为位图。\r\n","Return the Context of this instrumentation's package.":"返回该乐器包的上下文。\r\n","android.app.KeyguardManager":"android.app.keyguardmanager\r\n","android.content.pm.PackageManager#PERMISSION_GRANTED":"android.content.pm.packagemanager＃encermission_granted\r\n","android.app.Dialog.setContentView(android.view.View)":"android.app.dialog.setContentView（android.view.view）\r\n","Returns the user session end message.":"返回用户会话结束消息。\r\n","An activity that provides a user interface for adjusting notification preferences for its\n            containing application.":"提供用于调整通知首选项的用户界面的活动\r\n            包含应用。\r\n","android.R.styleable#AndroidManifestApplication_zygotePreloadName\n            android:zygotePreloadName":"android.r.Stylable＃androidManifestapplication_zygotepreloadname\r\n            Android：zygotepreloadname\r\n","Ask the system track that time the user spends in the app being launched, and\n            report it back once done.":"询问用户在启动应用程序中花费的时间的系统跟踪，并且\r\n            报告后将其报告回来。\r\n","Returns the desired minimum height for the wallpaper.":"返回墙纸所需的最小高度。\r\n","Drawable to use for generic horizontal dividers.":"可用于通用水平分隔线。\r\n","Return if this user is a managed profile of another user.":"如果此用户是另一个用户的托管配置文件，返回。\r\n","android.app.Fragment.getUserVisibleHint()":"android.app.fragment.getUservisibleHint（）\r\n","BluetoothDevice#PHY_LE_CODED_MASK":"BluetoothDevice＃phy_le_coded_mask\r\n","android.app.appsearch.GenericDocument.getPropertyDouble(java.lang.String)":"android.app.appsearch.genericdocument.getPropertyDouble（java.lang.string）\r\n","Specifies that dark text is preferred over the current wallpaper for best presentation.":"指定黑暗文本优于当前墙纸以获得最佳呈现。\r\n","DialogInterface#BUTTON_NEUTRAL":"DialogInterface＃button_neutral\r\n","This flag requests from the system to enable web accessibility enhancing\n extensions. ":"此标志从系统请求启用Web可访问性增强\r\n 扩展。\r\n","android.app.DownloadManager.COLUMN_URI":"android.app.downloadmanager.column_uri\r\n","Activity action: have the user enter a new password for the parent profile.":"活动操作：用户输入父档案的新密码。\r\n","Enables or disables bitmap filtering.":"启用或禁用位图过滤。\r\n","android.bluetooth.BluetoothAdapter.getDefaultAdapter()":"android.bluetooth.bluetoothadapter.getDefaultadapter（）\r\n","android.app.admin.DevicePolicyManager.ACTION_PROVISION_MANAGED_DEVICE":"android.app.admin.devicepolicymanager.action_provision_managed_device\r\n","Called by profile or device owners to set the user's photo.":"通过配置文件或设备所有者来设置用户的照片。\r\n","#onPrepareDialog(int, Dialog, Bundle)":"#onpreparedialog（int，对话框，捆绑包）\r\n","android.animation.BidirectionalTypeConverter.convertBack(java.lang.Object)":"android.animation.bidirectionalTypeconverter.convertback（java.lang.object）\r\n","Like ":"喜欢\r\n","Set the view to display in that dialog.":"设置要在该对话框中显示的视图。\r\n","android.app.Activity.moveTaskToBack(boolean)":"android.app.activity.movetasktoback（布尔值）\r\n","android.app.Activity.setProgress(int)":"android.app.activity.setprogress（int）\r\n","Close the connection of the profile proxy to the Service.":"关闭配置文件代理到服务的连接。\r\n","Returns the list of packages installed on the primary user that allowed to use a\n            ":"返回主要用户上安装的软件包列表，允许使用\r\n            \r\n","BluetoothGattService":"Bluetoothgattservice\r\n","Activity#onStop":"活动＃onstop\r\n","Sets the Dialog to use the inverse background, regardless of what the\n contents is.":"将对话框设置为使用逆背景，而不管是什么\r\n 内容是。\r\n","F:Android.App.FragmentTransaction.SetTransition":"F：Android.App.FragmentTransaction.setTransition\r\n"," set, this\n            reports which content authorities have triggered the job.":" 设置，这个\r\n            报告哪些内容机构触发了这项工作。\r\n","Return the unique identifier for the entry.":"返回条目的唯一标识符。\r\n","Sets the property that will be animated.":"设置将要动画的属性。\r\n","ancestralSerialNumber":"Ancestralserialnumber\r\n","Call in to engine to report that a job has finished executing.":"致电引擎报告工作已经完成。\r\n","A class that represents a TCP connect event initiated through the standard network stack.":"代表通过标准网络堆栈启动的TCP连接事件的类。\r\n","Same as calling ":"与打电话一样\r\n"," then the message is logged at the start.\n            ":" 然后，该消息在开始时已记录。\r\n            \r\n","android.app.AutomaticZenRule.setConditionId(android.net.Uri)":"android.app.automationzenrule.setConditionId（android.net.uri）\r\n","#addAutomaticZenRule(AutomaticZenRule)":"#AddautomationZenrule（自动Zenrule）\r\n","android.accessibilityservice.FingerprintGestureController.registerFingerprintGestureCallback(android.accessibilityservice.FingerprintGestureCallback, android.os.Handler)":"Android.AccessibilityService.fingerprintesturecontroller.registerfingerfingerprintercallecallback（android.Accessibilityservice.fingerprinterclinterecallback，android.os.os.handler）\r\n","Defines whether the scrollview should stretch its content to fill the viewport.":"定义ScrollView是否应扩展其内容以填充视口。\r\n","android.app.Notification.EXTRA_PEOPLE":"android.app.notification.extra_people\r\n","Return the target request code set by ":"返回按目标请求代码设置的目标代码\r\n","This method will be called when the search UI is dismissed.":"当搜索UI被驳回时，将调用此方法。\r\n","android.app.NotificationManager.getAutomaticZenRule(java.lang.String)":"android.app.notificationmanager.getautomaticzenrule（java.lang.string）\r\n","android.app.WallpaperInfo.loadDescription(android.content.pm.PackageManager)":"android.app.wallpaperinfo.loaddescription（android.content.pm.packagemanager）\r\n","android.app.admin.DevicePolicyManager.NEARBY_STREAMING_DISABLED":"android.app.admin.devicepolicymanager.nearby_streaming_disabled\r\n","Determines whether the calling user's current password meets policy requirements\n            (e.":"确定调用用户的当前密码是否满足策略要求\r\n            （e。\r\n","android.app.PendingIntent.getForegroundService(android.content.Context, int, android.content.Intent, int)":"android.app.pendingIntent.getForegroundService（android.content.context，int，android.content.intent，int）\r\n","android.app.Dialog.getVolumeControlStream()":"android.app.dialog.getVolumeControlStream（）\r\n","android.app.job.JobParameters.STOP_REASON_CANCELLED_BY_APP":"android.app.job.jobparameters.stop_reason_cancelled_by_app\r\n","Return true if the fragment has been hidden.":"如果隐藏了片段，则返回true。\r\n","\n            method.":"\r\n            方法。\r\n","android.app.admin.DeviceAdminReceiver.onPasswordExpiring(android.content.Context, android.content.Intent, android.os.UserHandle)":"android.app.admin.deviceadminreceiver.onpasswordexpiring（android.content.context，android.content.intent，android.os.os.userhandle）\r\n"," key: this is a small piece of additional text as supplied to\n            ":" 钥匙：这是提供给的一小部分附加文本\r\n            \r\n","#SUGGEST_COLUMN_SHORTCUT_ID":"#suggest_column_shortcut_id\r\n","android.app.admin.DevicePolicyManager.setProfileEnabled(android.content.ComponentName)":"android.app.admin.devicepolicymanager.setProfileEnabled（android.content.componentname）\r\n","android.app.admin.DevicePolicyManager.setStatusBarDisabled(android.content.ComponentName, boolean)":"android.app.admin.devicepolicymanager.setstatusbardisabled（android.content.componentname，boolean）\r\n"," that has no title bar \n":" 没有标题栏\r\n\r\n","LayoutInflater":"Layoutinflater\r\n","Return the number of actions that will be displayed in the picture-in-picture UI when the\n            user interacts with the activity currently in picture-in-picture mode.":"返回将在图片中显示的操作数量\r\n            用户与当前在图片中的活动进行交互。\r\n","DevicePolicyManager#FLAG_MANAGED_CAN_ACCESS_PARENT":"DevicePolicyManager＃flag_managed_can_access_parent\r\n","android.app.KeyguardManager.exitKeyguardSecurely(android.app.OnKeyguardExitResult)":"android.app.keyguardmanager.exitkeyguardsecurely（android.app.onkeyguardexitresult）\r\n","Called by device owners to set the user's global location setting.":"设备所有者称呼用户的全局位置设置。\r\n","Boolean internal attribute to adjust view layout based on\n             system windows such as the status bar.":"布尔内部属性以基于调整视图布局\r\n             系统窗口（例如状态栏）。\r\n","android.app.GameManager.GAME_MODE_UNSUPPORTED":"android.app.gamemanager.game_mode_unsupported\r\n","android.app.Notification.color":"Android.App.Notification.Color\r\n"," intents, indicating the ID (as a\n            long) of the download that just completed.":" 意图，指示ID（作为一个\r\n            刚刚完成的下载。\r\n","Lets all Fragments managed by the controller's FragmentManager\n            know their options menu has closed.":"让所有片段由控制器的FragmentManager管理\r\n            知道他们的选项菜单已关闭。\r\n","Reads the requested characteristic from the associated remote device.":"从关联的远程设备中读取请求的特性。\r\n","Retrieve the current minimum password quality for a particular admin or all admins that set\n            restrictions on this user and its participating profiles.":"检索特定管理员或所有设置的所有管理员的当前最低密码质量\r\n            对该用户及其参与资料的限制。\r\n","Programmatically opens the context menu for a particular ":"通过编程方式打开特定的上下文菜单\r\n","The preferred left bound for an expandable list item's indicator.":"首选的左界，用于可扩展的列表项目的指标。\r\n","Boolean extra to indicate that the migrated account should be kept.":"布尔值额外表明应保留迁移的帐户。\r\n","android.bluetooth.BluetoothDevice.EXTRA_PREVIOUS_BOND_STATE":"android.bluetooth.bluetoothdevice.extra_previous_bond_state\r\n","Default RadioButton style.":"默认的RadioButton样式。\r\n","ActivityInfo#screenOrientation ActivityInfo.screenOrientation":"ActivityInfo＃ScreenIrientation ActivityInfo.screenientation\r\n","The number of times to repeat the marquee animation.":"重复选举动画的次数。\r\n","Drawable to draw below list content.":"可绘制以绘制以下列表内容。\r\n","android.appwidget.AppWidgetManager.ACTION_APPWIDGET_ENABLED":"android.appwidget.appwidgetManager.action_appwidget_enabled\r\n","Widget is resizable in both the horizontal and vertical axes.":"小部件在水平轴和垂直轴上均可解析。\r\n","Unregisters a previously registered ":"解注册以前注册\r\n","Application process died due to unknown reason.":"申请过程由于未知原因而死亡。\r\n","Sends an option item selection event to the Fragments managed by the\n            controller's FragmentManager.":"将选项项选择事件发送给由\r\n            控制器的FragmentManager。\r\n","android.app.AppOpsManager.OPSTR_READ_CELL_BROADCASTS":"android.app.appopsmanager.opptr_read_cell_broadcasts\r\n","Session":"会议\r\n","android.app.Dialog.cancel()":"android.app.dialog.cancel（）\r\n","android.animation.Keyframe.ofFloat(float, float)":"android.animation.keyframe.offloat（float，float）\r\n","Defines the maximum number of items per row.":"定义每行的最大项目数。\r\n","Activity#onPictureInPictureUiStateChanged(PictureInPictureUiState)":"活动＃OnPictureInPictureUistatateChanged（Picture inInpictureuistate）\r\n","android.animation.Animator.cancel()":"android.animation.animator.cancel（）\r\n"," of the conversation backing this channel, if it's\n            associated with a conversation.":" 如果是的话，则备份此频道\r\n            与对话有关。\r\n","android.app.Notification.CATEGORY_EVENT":"android.app.notification.category_event\r\n","This method will be invoked when a button in the dialog is clicked.":"单击对话框中的按钮时，将调用此方法。\r\n","Specifies that dark theme is preferred over the current wallpaper for best presentation.":"指定黑暗主题比当前壁纸优选，以获得最佳演示。\r\n","The user will be prompted to enter a pin or\n            an app will enter a pin for user.":"将提示用户输入PIN或\r\n            应用程序将输入用户的PIN。\r\n","Defines the layout animation to use the first time the ViewGroup is laid out.":"定义布局动画以首次使用ViewGroup进行布局。\r\n"," if a job wasn't scheduled successfully.":"如果没有成功安排工作。\r\n"," as well as\n            ":" 也\r\n            \r\n","android.app.appsearch.GenericDocument.GenericDocument(android.app.appsearch.GenericDocument)":"android.app.appsearch.genericdocument.genericdocument（android.app.appsearch.genericDocument）\r\n","This method is called once every time the Application Zygote is started.":"每次启动应用程序时，都会调用此方法。\r\n","IntentFilter":"意图滤波器\r\n","If no idle state was detected within\n            ":"如果在内部未检测到闲置状态\r\n            \r\n","android.app.backup.BackupManager.getUserForAncestralSerialNumber(long)":"android.app.backup.backupmanager.getuserforancestralserialnumber（long）\r\n"," is sent.":" 已发送。\r\n","Provides more detail on the status of the download.":"提供有关下载状态的更多详细信息。\r\n","How to display the lack of a phone number \n":"如何显示缺乏电话号码\r\n\r\n","When custom transitions are used with Fragments, the enter transition callback\n            is called when this Fragment is attached or detached when not popping the back stack.":"当自定义过渡与片段一起使用时，输入过渡回调\r\n            当不弹出后堆栈时，将此片段连接或分离时，称为称为。\r\n","Information about a particular kind of Intent that is being monitored.":"有关正在监视的特定意图的信息。\r\n","Radius of the shadow.":"阴影半径。\r\n",", supplied to\n            ":"， 提供给\r\n            \r\n","android.accounts.AccountManager.updateCredentials(android.accounts.Account, java.lang.String, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)":"android.accounts.accountmanager.updatecredentials（android.accounts.accounts.account，java.lang.string，android.os.os.bundle，android.app.Activity，android.account.account.accounts.accountmanagercellback，android.os.handler）android.os.handler）\r\n","Bugreport has been created, but is no longer available for collection.":"BugReport已创建，但不再可用于收集。\r\n","The icon for the dialog.":"对话框的图标。\r\n","The layout of the view that is displayed on top of the cursor to paste inside a\n             TextEdit field.":"光标顶部显示的视图的布局以粘贴\r\n             Textedit字段。\r\n"," reads\n            information from the backup data set, via its\n            ":" 阅读\r\n            来自备份数据集的信息，通过其\r\n            \r\n","The style resource to use for a window's title bar height.":"用于窗口标题条高的样式资源。\r\n","android.app.WallpaperManager.suggestDesiredDimensions(int, int)":"android.app.wallpapermanager.suggestdesireddimensions（int，int）\r\n","android.app.DownloadManager.PAUSED_WAITING_FOR_NETWORK":"android.app.downloadmanager.paused_waiting_for_network\r\n","Called by a profile owner of an organization-owned managed profile to query whether it needs\n            to acknowledge device compliance to allow the user to turn the profile off if needed\n            according to the maximum profile time off policy.":"由组织拥有的托管个人资料的个人资料所有者调用，以查询是否需要\r\n            确认设备合规性，以允许用户在需要时关闭配置文件\r\n            根据最大概况休假政策。\r\n","Indicates whether the application can resize itself to newer\n             screen sizes.":"指示该应用程序是否可以调整到更新\r\n             屏幕尺寸。\r\n","android.app.job.JobParameters.isOverrideDeadlineExpired()":"android.app.job.jobparameters.isoverridedeadeadline Expired（）\r\n","Flatten this object in to a Parcel.":"将这个物体弄平到包裹。\r\n","The system is doing some processing that requires stopping this job.":"该系统正在进行一些需要停止此工作的处理。\r\n"," if it was created through\n        ":" 如果是通过\r\n        \r\n","Application#onCreate":"应用程序＃ongreate\r\n","Makes the cursor visible (the default) or invisible.":"使光标可见（默认值）或看不见。\r\n","android.app.slice.Slice.HINT_ACTIONS":"android.app.slice.slice.hint_actions\r\n","Mask for all feedback types.":"所有反馈类型的掩码。\r\n","android.app.people.ConversationStatus.ACTIVITY_UPCOMING_BIRTHDAY":"android.app.people.conversationstatus.activity_upcoming_birthday\r\n","SIM":"SIM\r\n","android.app.Notification.EXTRA_CALL_PERSON":"android.app.notification.extra_call_person\r\n","android.app.Notification.AUDIO_ATTRIBUTES_DEFAULT":"android.app.notification.audio_attributes_default\r\n","android.accessibilityservice.AccessibilityServiceInfo.FLAG_REQUEST_FILTER_KEY_EVENTS":"Android.AccessibilityService.Accessibilityserviceinfo.flag_request_filter_key_events\r\n","#DURATION_INFINITE":"#duration_infinite\r\n","android.app.FragmentController.dispatchLowMemory()":"android.app.FragmentController.disPatchLowMemory（）\r\n","A drawable to use as the background.":"可以用作背景的绘图。\r\n","android.app.Fragment.onMultiWindowModeChanged(boolean)":"android.app.fragment.onmultiwindowmodechanged（布尔）\r\n","android.app.PendingIntent.isBroadcast()":"android.app.pendingIntent.isBroadcast（）\r\n","android.app.Notification.EXTRA_SUMMARY_TEXT":"android.app.notification.extra_summary_text\r\n","Indicates that all bubbles are allowed from the app.":"表示从应用程序允许所有气泡。\r\n","Level for ":"级别\r\n","Return a list of the AppWidget providers that are currently installed.":"返回当前安装的AppWidget提供商的列表。\r\n","Inverse hint text color.":"逆提示文本颜色。\r\n","android.animation.PropertyValuesHolder.ofMultiFloat(java.lang.String, android.animation.TypeConverter, android.animation.TypeEvaluator, android.animation.Keyframe)":"android.animation.propertyvaluesholder.ofmultifloat（java.lang.string，android.animation.typeconverter，android.animation.typeevaluator，android.animation.animation.neimation.keyframe）\r\n",": use\n            the traditional (pre-Holo) alert dialog theme.":"： 利用\r\n            传统的（前霍洛）警报对话框主题。\r\n","Set to true if this service has been explicitly started.":"如果已明确启动此服务，则设置为True。\r\n","Callback interface for discovering when a send operation has\n completed.":"用于发现发送操作何时有的回调接口\r\n 完全的。\r\n","Declare that your application will be able to deal with RTL (right to left) layouts.":"声明您的应用程序将能够处理RTL（右至左）布局。\r\n","Creates a ProgressDialog with a horizontal progress bar.":"创建一个具有水平进度栏的ProgressDialog。\r\n","android.app.Activity.onNavigateUpFromChild(android.app.Activity)":"android.app.activity.onnavigateupfromchild（android.app.Activity）\r\n","android.app.admin.DevicePolicyManager.setOrganizationColor(android.content.ComponentName, int)":"android.app.admin.devicepolicymanager.setorganizationcolor（android.content.componentname，int）\r\n","Gets the ID of the currently selected group or child.":"获取当前选择的小组或儿童的ID。\r\n","android.app.Dialog.onStart()":"android.app.dialog.onstart（）\r\n","Broadcast intent action sent by the download manager when the user clicks on a running\n            download, either from a system notification or from the downloads UI.":"当用户点击运行时，下载管理器发送的广播意愿操作\r\n            从系统通知或下载UI下载。\r\n","android.animation.ObjectAnimator.ofObject(java.lang.Object, android.util.Property, android.animation.TypeConverter, android.graphics.Path)":"android.animation.ObjectAnimator.OfObject（java.lang.object，android.util.property，android.animation.typeconverter，android.graphics.path）\r\n","Android Open Source Project":"Android开源项目\r\n","Action to go back.":"行动回去。\r\n","\n            The authentication scheme supported by the implementation. Should be set to ":"\r\n            实施支持的身份验证方案。应该设置为\r\n","android.app.Instrumentation.sendStatus(int, android.os.Bundle)":"android.app.instrumentation.sendstatus（int，android.os.bundle）\r\n","Returns whether the user has decided that this channel does not represent a conversation.":"返回用户是否已决定此通道不代表对话。\r\n","android.bluetooth.BluetoothDevice.getBluetoothClass()":"android.bluetooth.bluetoothdevice.getbluetoothclass（）\r\n","Called by device owner to set if override APNs should be enabled.":"如果应启用覆盖APN，则由设备所有者拨打设置。\r\n","android.app.Dialog.setFeatureDrawableUri(int, android.net.Uri)":"android.app.dialog.setfeaturedrawableuri（int，android.net.uri）\r\n","If set, specifies that this TextView should use the specified\n             input method (specified by fully-qualified class name).":"如果设置，请指定此文本视图应使用指定的\r\n             输入方法（由完全合格的类名称指定）。\r\n","android.app.RemoteAction.setShouldShowIcon(boolean)":"android.app.remoteaction.setshouldshowicon（布尔值）\r\n"," for this activity.":" 为此活动。\r\n","Called during an Activity Transition when the shared elements have arrived at the\n            final location and are ready to be transferred.":"在共享元素到达时的活动过渡期间调用\r\n            最终位置并准备转移。\r\n","android.animation.ObjectAnimator.ofObject(java.lang.Object, java.lang.String, android.animation.TypeConverter, android.graphics.Path)":"android.animation.ObjectAnimator.OfObject（java.lang.Object，java.lang.string，android.animation.typeconverter，android.graphics.path）\r\n","Activity#startIntentSenderForResult(IntentSender, int, Intent, int, int, int,\n            Bundle)":"活动＃startIntentSenderForresult（IntentSender，int，Intent，Int，int，int，int，int，int，int，int，int，int，int，int，\r\n            捆）\r\n","android.app.slice.Slice.HINT_TTL":"android.app.slice.slice.hint_ttl\r\n","A2DP sink device is streaming music.":"A2DP接收器设备正在流媒体音乐。\r\n","SecurityEvent#getData()":"SecurityEvent＃getData（）\r\n","This flag controls whether CHANGE_APPEARING or CHANGE_DISAPPEARING animations will\n            cause the default changing animation to be run on the parent hierarchy as well.":"此标志控制change_pappearing还是change_disappearting动画将\r\n            导致默认更改动画也在父层次结构上运行。\r\n","android.app.Activity.onCreateDescription()":"android.app.Activity.oncreatedEscription（）\r\n","Checks whether the text in the query field should come from the suggestion title.":"检查查询字段中的文本是否应来自建议标题。\r\n","\n            intents to request the previous scan mode.":"\r\n            意图要求先前的扫描模式。\r\n","android.app.appsearch.AppSearchResult.getResultCode()":"android.app.appsearch.appsearchresult.getResultCode（）\r\n","Returns the currently applied notification policy.":"返回当前应用的通知政策。\r\n","Unregisters the provided ":"解注定\r\n","\n        Call this method when you would like to allow instances to be\n        collectable as soon as possible, but not if the current instance\n        is referenced anywhere else.\n      ":"\r\n        当您想允许实例时调用此方法\r\n        可尽快收集，但如果当前实例不可收集\r\n        在其他任何地方都引用。\r\n      \r\n","android.app.Instrumentation.callActivityOnNewIntent(android.app.Activity, android.content.Intent)":"android.app.instrumentation.callactivityOnnewintent（android.app.activity，android.content.intent）\r\n","android.accessibilityservice.AccessibilityServiceInfo.FLAG_REQUEST_ACCESSIBILITY_BUTTON":"Android.AccessibilityService.Accessibilityserviceinfo.flag_request_accessibility_button\r\n","Helper class for showing \"bread crumbs\" representing the fragment\n            stack in an activity.":"用于显示碎片的“面包屑”的助手课\r\n            在活动中堆叠。\r\n","android.app.RemoteAction":"Android.App.RemoteAction\r\n","Builder class for ":"建筑商课\r\n","The start bound for a child's indicator.":"起点绑定到孩子的指标。\r\n","#setNotificationDelegate(String)":"#SetNotificationDelegate（String）\r\n","Get the locally modifiable name (alias) of the remote Bluetooth device.":"获取远程蓝牙设备的本地修改名称（别名）。\r\n","android.app.usage.UsageEvents.Event":"android.app.usage.usageevents.event\r\n","Called by a device/profile owner to set whether the screen capture is disabled.":"设备/配置文件所有者调用是否禁用了屏幕捕获。\r\n","android.bluetooth.BluetoothA2dp.STATE_NOT_PLAYING":"android.bluetooth.bluetootha2dp.state_not_playing\r\n"," key: the audio contents of this notification.":" 钥匙：此通知的音频内容。\r\n","Characteristic property: Characteristic is readable.":"特征属性：特征是可读的。\r\n","Retrieve the ComponentName describing who this device administrator is, for\n            use in ":"检索描述此设备管理员身份的componentName，for\r\n            用于\r\n","Remove a listener that was previously added with\n            ":"删除以前添加的听众\r\n            \r\n","Disable trust agents on secure keyguard screens (e.":"禁用安全钥匙屏幕上的信任代理（e。\r\n","Provides a connection to all AppSearch databases the querying application has been granted access\n            to.":"提供与所有AppSearch数据库的连接\r\n            至。\r\n","Set the first line of text after the detail section in the big form of the template.":"以模板的大型形式设置详细部分之后的第一行文本。\r\n","#getForegroundServiceType()":"#getForegroundServiceType（）\r\n","Default style for switch preferences.":"开关首选项的默认样式。\r\n","Optional center color.":"可选中心颜色。\r\n","Add an action to this notification. ":"在此通知中添加操作。\r\n","android.app.usage.StorageStatsManager.queryStatsForUid(java.util.UUID, int)":"android.app.usage.storagestatsmanager.querystatsforuid（java.util.uuid，int）\r\n","Constructs and returns an ObjectAnimator that animates over int values for a multiple\n            parameters setter.":"构造并返回一个对objectanimator，该对象启示器可以通过多个int值进行动画\r\n            参数设置器。\r\n","android.app.usage.UsageEvents.hasNextEvent()":"android.app.usage.usageevents.hasnextevent（）\r\n","Total size of the download in bytes.":"下载的总大小在字节中。\r\n","android.app.WallpaperManager.isSetWallpaperAllowed()":"android.app.wallpapermanager.issetwallpaperallowed（）\r\n","If the Notification associated with starting a foreground service has been\n            built using setForegroundServiceBehavior() with this behavior, display of\n            the notification will usually be suppressed for a short time to avoid visual\n            disturbances to the user.":"如果与启动前景服务相关的通知已\r\n            使用SetForegroundServiceBehavior（）构建此行为，显示\r\n            通知通常会在短时间内被抑制以避免视觉\r\n            对用户的干扰。\r\n","Returns whether this certificate is installed as a trusted CA.":"返回该证书是否安装为可信CA。\r\n","Indicates that the content of a non-editable TextView can be selected.":"指示可以选择非编辑文本视图的内容。\r\n","Sets the padding, in pixels, of all four edges.":"将所有四个边缘的填充物设置为像素。\r\n","Checks if update of the account credentials is suggested.":"检查是否建议更新帐户凭据。\r\n","android.accounts.AccountManager.editProperties(java.lang.String, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)":"android.accounts.accountmanager.editproperties（java.lang.string，android.app.Aptivity，android.accounts.accountmanagercallback，android.os.handler）\r\n","The user will be prompted to confirm the passkey displayed on the screen or\n            an app will confirm the passkey for the user.":"将提示用户确认屏幕上显示的密钥或\r\n            应用程序将确认用户的PassKey。\r\n","if an error occurred while reading the restore stream\n":"如果在阅读还原流时发生错误\r\n\r\n","Retrieves documents from all AppSearch databases that the querying application has access to.":"从查询应用程序可以访问的所有AppSearch数据库中检索文档。\r\n","If the icon in the status bar is to have more than one level, you can set this.":"如果状态栏中的图标要具有多个级别，则可以设置此级别。\r\n","android.accessibilityservice.AccessibilityService.ERROR_TAKE_SCREENSHOT_INVALID_DISPLAY":"Android.AccessibilityService.Accessibilityservice.Error_take_screenshot_invalid_display\r\n","If true, centers this child horizontally and vertically within its parent.":"如果是真的，则将这个孩子水平和垂直的父母居中。\r\n","android.app.Activity.showLockTaskEscapeMessage()":"android.app.activity.showlocktaskescapemessage（）\r\n","Flag indicating whether this window should extend into overscan region.":"标志指示该窗口是否应延伸到范围的区域。\r\n","Control whether dimming behind the window is enabled.":"控制是否启用了窗口后面的调光。\r\n","android.app.SearchableInfo.getSuggestAuthority()":"android.app.searchableInfo.getSuggestauthority（）\r\n","The maximum number of breadcrumbs to show.":"最大的面包屑数量要显示。\r\n","android.app.FragmentController.restoreLoaderNonConfig(android.util.ArrayMap)":"android.app.FragmentController.RestoreloadernonConfig（android.util.arraymap）\r\n","\n after a restore operation to write the backup state file corresponding to\n the data as processed by the helper.":"\r\n 修复操作后，编写对应的备份状态文件\r\n 助手处理的数据。\r\n","Return the number of window contents that have been collected in this assist data.":"返回此辅助数据中收集的窗口内容的数量。\r\n","android.app.appsearch.GenericDocument.getCreationTimestampMillis()":"android.app.appsearch.genericdocument.getCreationTimestampMillis（）\r\n"," preset to the same value as this property.\n            ":" 预设与此属性相同。\r\n            \r\n","android.app.appsearch.SearchSpec":"android.app.appsearch.searchspec\r\n","DeviceAdminReceiver#ACTION_PASSWORD_SUCCEEDED":"deviceadminreceiver＃action_password_succeeded\r\n","android.app.Notification.EXTRA_HISTORIC_MESSAGES":"android.app.notification.extra_historic_messages\r\n","The time interpolator used in calculating the elapsed fraction of this animation.":"用于计算此动画的经过的部分的时间插值。\r\n","Sets the padding, in pixels, of the top edge; see ":"将填充物设置为顶部边缘的填充物；看\r\n","Boolean extra data key for a suggestion provider to return in ":"布尔值额外的数据密钥，以使建议提供商返回\r\n","Application's requirement for five way navigation \n         ":"应用程序对五路导航的要求\r\n         \r\n","when the download has successfully completed.":"下载成功完成后。\r\n","android.app.admin.DevicePolicyManager.getLongSupportMessage(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getlongsupportmessage（android.content.componentname）\r\n","Get the ListAdapter associated with this fragment's ListView. -or- Provide the cursor for the list view.":"获取与此片段的Lis​​tView关联的ListAdapter。 - 或 - 为列表视图提供光标。\r\n","An object to be used throughout the life of a slice to register events.":"在切片的整个生命中要使用的对象来注册事件。\r\n"," property will\n            have their ":" 财产将\r\n            有他们的\r\n","Indicates start-up of audit logging.":"表示审核记录的启动。\r\n","Direction of the animation in the grid.":"动画在网格中的方向。\r\n","StatusBarNotification":"状态标记\r\n","Intent that is broadcast when a ":"目的是广播的\r\n","A hint representing that this item should be used to indicate that there's more\n            content associated with this slice.":"一个暗示该项目应使用的提示表明还有更多\r\n            与此切片相关的内容。\r\n","android.app.appsearch.GenericDocument.getPropertyBytes(java.lang.String)":"android.app.appsearch.genericdocument.getPropertybytes（java.lang.string）\r\n","Called by an application that is administering the device to set the length of the password\n            history.":"由管理设备设置密码长度的应用程序调用\r\n            历史。\r\n","android.app.slice.SliceItem.getLong()":"android.app.slice.sliceitem.getlong（）\r\n","The client-supplied title for this download.":"此下载的客户提供标题。\r\n","The user has performed a four-finger single tap gesture on the touch screen.":"用户在触摸屏上执行了四指单击单击手势。\r\n","This API can be called by the following to install a certificate chain and corresponding\n            private key for the leaf certificate:\n            <ul>\n               <li>Device owner</li>\n               <li>Profile owner</li>\n               <li>Delegated certificate installer</li>\n               <li>Credential management app</li>\n            </ul>\n            All apps within the profile will be able to access the certificate chain and use the\n            private key, given direct user approval (if the user is allowed to select the private key).":"以下可以调用此API以安装证书链和相应\r\n            叶子证书的私钥：\r\n            <ul>\r\n               <li>设备所有者</li>\r\n               <li>个人资料所有者</li>\r\n               <li>委派证书安装程序</li>\r\n               <li>凭证管理应用程序</li>\r\n            </ul>\r\n            配置文件中的所有应用程序都将能够访问证书链并使用\r\n            私钥，给定直接用户批准（如果允许用户选择私钥）。\r\n","Set a listener to be invoked when the specified button of the dialog is pressed.":"按下对话框的指定按钮时，设置侦听器将被调用。\r\n","android.app.Activity.onPictureInPictureModeChanged(boolean)":"android.app.activity.onpictureinpicturemodechanged（boolean）\r\n","#disableCarMode(int)":"#disableCarmode（int）\r\n","android.app.admin.DevicePolicyManager.getOrganizationColor(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getorganizationcolor（android.content.componentname）\r\n"," set, this\n            reports which URIs have triggered the job.":" 设置，这个\r\n            URI触发了这项工作的报告。\r\n","remoteInputs":"远程输入\r\n","if listener was not already added\n":"如果尚未添加听众\r\n\r\n","Stops and removes the loader with the given ID.":"用给定的ID停止并卸下加载程序。\r\n","AndroidManifest.xml":"androidManifest.xml\r\n","android.app.RemoteInput.SOURCE_CHOICE":"Android.App.RemoteInput.Source_Choice\r\n","If provided, this specifies the spoken language to be expected, and that it will be\n             different than the one set in the ":"如果提供的话，这将指定口语的预期，它将是\r\n             与\r\n","This flag requests that the system gets into touch exploration mode.":"此标志要求系统进入触摸探索模式。\r\n","Called when the activity is starting.":"当活动开始时调用。\r\n","If provided, suggestion queries will be passed into your query function\n            as the ":"如果提供，建议查询将传递到您的查询功能中\r\n            作为\r\n","android.accounts.AccountManager.KEY_CALLER_UID":"android.accounts.accountmanager.key_caller_uid\r\n","Activity action: Starts the provisioning flow which sets up a managed device.":"活动动作：开始设置托管设备的配置流。\r\n","A method for injecting an arbitrary input event.":"注入任意输入事件的方法。\r\n","ComponentName":"componentName\r\n","Called after the user has succeeded at entering their device or profile challenge password,\n            as a result of receiving ":"用户成功地输入其设备或个人资料挑战密码后打电话，\r\n            由于接受\r\n","Thickness of the ring.":"环的厚度。\r\n","#startOp(String, int, String, String, String)":"#startop（String，Int，String，String，String）\r\n","Sets the application restrictions for a given target application running in the calling user.":"设置在调用用户中运行的给定目标应用程序的应用程序限制。\r\n","JniEnvironment.References":"jnienvironment。参考\r\n","This is the maximum SDK version number that an application works\n             on.":"这是应用程序工作的最大SDK版本号\r\n             上。\r\n","android.app.NotificationManager.setInterruptionFilter(int)":"android.app.notificationmanager.setInterruptionfilter（int）\r\n","AppSearchBatchResult":"AppSearchBatchResult\r\n","android.app.Notification.EXTRA_VERIFICATION_TEXT":"android.app.notification.extra_verification_text\r\n","Called by device or profile owner to force set a new device unlock password or a managed\n            profile challenge on current user.":"由设备或配置文件所有者调用，强制设置新设备解锁密码或托管\r\n            当前用户的个人资料挑战。\r\n","This method is called by ViewGroup when a child view is about to be hidden in\n            container.":"当孩子的视图将被隐藏在\r\n            容器。\r\n","Default vertical gap between rows of keys.":"钥匙行之间的默认垂直差距。\r\n","[] extra consisting of list of disclaimer headers and disclaimer contents.":"[]由免责声明标题和免责声明内容列表组成的额外内容。\r\n","android.accounts.AccountManager.getAccountsByType(java.lang.String)":"android.accounts.accountmanager.getaccountsbytype（java.lang.string）\r\n","android.app.Notification.CREATOR":"Android.App.Notification.Creator\r\n","Hint to indicate that this content should only be displayed if the slice is presented\n            as a shortcut.":"暗示只有在显示切片时才能显示此内容\r\n            作为快捷方式。\r\n","This hook is called whenever the context menu is being closed (either by\n            the user canceling the menu with the back/menu button, or when an item is\n            selected).":"每当关闭上下文菜单时，此挂钩都是称为的（要么由\r\n            用户使用后/菜单按钮取消菜单，或者当项目为\r\n            选择）。\r\n","Return the total size of the underlying physical media that is hosting\n            this storage volume.":"返回托管的基础物理媒体的总大小\r\n            此存储量。\r\n","android.app.admin.DeviceAdminReceiver.ACTION_DEVICE_ADMIN_DISABLE_REQUESTED":"android.app.admin.deviceadminreceiver.action_device_admin_disable_requested\r\n","android.app.WallpaperInfo.loadContextUri(android.content.pm.PackageManager)":"android.app.wallpaperinfo.loadcontexturi（android.content.pm.packagemanager）\r\n","android.animation.PropertyValuesHolder.ofObject(android.util.Property, android.animation.TypeConverter, android.graphics.Path)":"android.animation.propertyvaluesholder.opobject（android.util.property，android.animation.typeconverter，android.graphics.path）\r\n","android.app.ApplicationExitInfo.REASON_EXCESSIVE_RESOURCE_USAGE":"android.app.applicationexitinfo.reason_excessive_resource_usage\r\n","android.app.Instrumentation.sendKeyDownUpSync(int)":"Android.App.Instrumentation.SendKeyDownupsync（int）\r\n"," of\n ":" 的\r\n \r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_SKIP_USER_CONSENT":"android.app.admin.devicepolicymanager.extra_provisioning_skip_user_consent\r\n","android.app.Activity.setContentView(android.view.View)":"android.app.activity.setContentView（android.view.view）\r\n","#commit":"＃犯罪\r\n","Action sent as a broadcast Intent by the AccountsService when accounts are added, accounts\n            are removed, or an account's credentials (saved password, etc) are changed.":"添加帐户，帐户时，帐户服务的广播意愿发送的操作作为广播意愿\r\n            删除，或更改帐户的凭据（保存密码等）。\r\n","The time interpolator used in calculating the elapsed fraction of the\n            animation.":"用于计算经过的时间的时间插值器\r\n            动画。\r\n","Stop receiving onAppWidgetChanged calls for your AppWidgets.":"停止接收AppWidgets的onappwidgetChanged呼叫。\r\n","Attribute whether the accessibility service wants to be able to request to\n             filter key events.":"属性访问性服务是否希望能够要求\r\n             过滤密钥事件。\r\n","An error report about an application that's consuming too much battery.":"有关应用程序过多的应用程序的错误报告。\r\n","The zero-based index of the columns to shrink.":"圆柱的基于零的索引。\r\n","Broadcast Action: Indicates the Bluetooth scan mode of the local Adapter\n            has changed.":"广播动作：指示本地适配器的蓝牙扫描模式\r\n            已经改变。\r\n","Load the user-displayed label for this wallpaper.":"加载此墙纸的用户播放标签。\r\n","Remove all activities from this LocalActivityManager, performing an\n            ":"从此locartivityManager中删除所有活动，执行\r\n            \r\n","Retrieve the Context this Dialog is running in.":"检索此对话框正在运行的上下文。\r\n","SearchEvent":"SearchEvent\r\n","android.app.admin.DevicePolicyManager.getCrossProfileCallerIdDisabled(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getCrossProfileCallerIdDisabled（android.content.componentname）\r\n","android.bluetooth.BluetoothAdapter.stopLeScan(android.bluetooth.LeScanCallback)":"android.bluetooth.bluetoothadapter.stoplescan（android.bluetooth.lescancallback）\r\n","Text color, typeface, size, and style for \"large\" text.":"“大”文本的文本颜色，字体，大小和样式。\r\n","android.app.WallpaperInfo.supportsMultipleDisplays()":"android.app.wallpaperinfo.supportsmultipledisplays（）\r\n","android.app.Dialog.getActionBar()":"android.app.dialog.getActionBar（）\r\n","#PASSWORD_QUALITY_UNSPECIFIED":"#password_quality_unspecified\r\n","android.app.Notification.EXTRA_PICTURE":"android.app.notification.extra_picture\r\n","Allow the system to control when the soft keyboard is shown.":"允许系统在显示软键盘时控制系统。\r\n","android.app.ActionBar.addOnMenuVisibilityListener(android.app.OnMenuVisibilityListener)":"android.app.actionbar.addonmenuvisibilitibilitibilityListener（android.app.onmenuvisibilityListener）\r\n","Called by an application that is administering the device to set the minimum allowed password\n            length.":"由管理设备的应用程序调用以设置最低允许密码\r\n            长度。\r\n","android.app.appsearch.SearchSpec.GROUPING_TYPE_PER_PACKAGE":"android.app.appsearch.searchspec.grouping_type_per_package\r\n","android.app.Activity.setFeatureDrawable(int, android.graphics.drawable.Drawable)":"android.app.activity.setFeaturedRawable（int，android.graphics.drawable.drabable）\r\n","Print the FragmentManager's state into the given stream.":"将FragmentManager的状态打印到给定的流中。\r\n","Allows an application to broadcast sticky intents.":"允许应用程序广播粘性意图。\r\n","android.app.slice.Slice.SUBTYPE_LAYOUT_DIRECTION":"android.app.slice.slice.subtype_layout_direction\r\n","MediaStyle":"媒体风格\r\n","The resource id of a drawable to use as the icon in the status bar.":"可绘制的资源ID可用作状态栏中的图标。\r\n","Check if the context is allowed to start an activity on specified display.":"检查上下文是否允许在指定的显示器上启动活动。\r\n","android.app.job.JobService.onStartJob(android.app.job.JobParameters)":"android.app.job.jobservice.onstartjob（android.app.job.jobparameters）\r\n","android.app.Activity#getIntent Activity.getIntent":"android.app.Activity＃getIntent Activity.getintent\r\n","android.app.UiAutomation.getRootInActiveWindow()":"android.app.uiautomation.getRootinactiveWindow（）\r\n","delegationScope":"授权学院\r\n"," type of the ":" 类型\r\n","Set custom state data for this process.":"为此过程设置自定义状态数据。\r\n","Application process died because of an unhandled exception in Java code.":"申请过程由于Java代码中未经治疗的例外而死。\r\n"," method is\n            <em>not</em> being called), then you can use this method to discover\n            the set of changes that have occurred while in the process of being\n            destroyed.":" 方法是\r\n            <em> not </em>被调用），然后您可以使用此方法发现\r\n            在存在过程中发生的一组变化\r\n            被摧毁。\r\n","Allows enabling/disabling location update notifications from\n         the radio.":"允许从\r\n         收音机。\r\n","Retrieve the current number of upper case letters required in the password\n            for a particular admin or all admins that set restrictions on this user and\n            its participating profiles.":"检索密码中所需的当前大写字母数量\r\n            对于特定的管理员或所有设置此用户限制的管理员\r\n            它的参与资料。\r\n","Retrieves a repeated ":"检索重复\r\n","Specify whether this feature is required for the application.":"指定应用程序是否需要此功能。\r\n","android.bluetooth.BluetoothA2dp.ACTION_CONNECTION_STATE_CHANGED":"android.bluetooth.bluetootha2dp.action_connection_state_changed\r\n","E:Android.App.ActionBar+Tab.TabReselected":"E：Android.app.ActionBar+Tab.TabReselected\r\n","#FLAG_REQUEST_MULTI_FINGER_GESTURES":"#FLAG_REQUEST_MULTI_FINGER_GENTURES\r\n","For example, AT+VGM?. ":"例如，在+vgm？\r\n","Return a list of ":"返回一个清单\r\n","Default TabWidget style.":"默认标签样式样式。\r\n","Called to retrieve per-instance state from an activity before being killed\n            so that the state can be restored in ":"被呼召在被杀死之前从一项活动中检索\r\n            这样状态就可以恢复\r\n","Create an uninitialized instance of ":"创建一个非传统的实例\r\n","Allows an application to expand or collapse the status bar.":"允许应用程序扩展或折叠状态栏。\r\n","Query whether the user has enabled background restrictions for this app.":"查询用户是否启用了此应用程序的背景限制。\r\n"," in the Java VM.\n          While this can be done, it frequently isn't, resulting in\n          \"unexpected\" ":" 在Java VM中。\r\n          虽然可以做到这一点，但通常不会\r\n          “意外”\r\n","Indicator RatingBar style.":"指标分级栏样式。\r\n","android.app.NotificationManager.removeAutomaticZenRule(java.lang.String)":"android.app.notificationmanager.removeautomaticzenrule（java.lang.string）\r\n","android.app.UiAutomation.ROTATION_FREEZE_180":"android.app.uiautomation.rotation_freeze_180\r\n","android.app.ApplicationExitInfo.REASON_OTHER":"android.app.applicationexitinfo.reason_other\r\n","Information you can retrieve about a running process.":"您可以检索有关运行过程的信息。\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_EMAIL_ADDRESS":"android.app.admin.devicepolicymanager.extra_provisioning_email_address\r\n","Animator":"动画师\r\n","DatePicker":"日期选择器\r\n","android.appwidget.AppWidgetHost.deleteAppWidgetId(int)":"android.appwidget.appwidgethost.deleteappwidgetid（int）\r\n","An overloaded version of ":"超载版本的\r\n"," that the action applies to.":" 该动作适用于。\r\n","Called by profile or device owners to check whether the global volume mute is on or off.":"通过配置文件或设备所有者调用全局卷静音是打开还是关闭。\r\n","android.animation.LayoutTransition.isChangingLayout()":"android.animation.layouttransition.ischanginglayout（）\r\n","android.content.DialogInterface.BUTTON_NEGATIVE":"android.content.dialoginterface.button_negative\r\n","Return the Activity this fragment is currently associated with.":"返回该片段目前与之相关的活动。\r\n",".\n              Timing messages are logged with the ":"。\r\n              定时消息已记录\r\n","Gets the start delay on one of the animation objects used by this transition.":"获取此转换使用的动画对象之一的启动延迟。\r\n","android.animation.PropertyValuesHolder.setProperty(android.util.Property)":"android.animation.propertyvaluesholder.setproperty（android.util.property）\r\n","Style for buttons within button bars \n         ":"按钮栏中的按钮样式\r\n         \r\n","android.app.appsearch.AppSearchResult.getErrorMessage()":"android.app.app.appsearch.appsearchresult.geterrormessage（）\r\n","DeviceDefault theme for dialog windows and activities.":"DevicedEfault主题用于对话窗口和活动。\r\n","android.accessibilityservice.AccessibilityService.setGestureDetectionPassthroughRegion(int, android.graphics.Region)":"android.accosconibilityservice.Accessibilityservice.setgestegesturedetectionpasspassthroughregion（int，android.graphics.region）\r\n","An entity the caller requested to interact with does not exist in the system.":"呼叫者要求与之交互的实体在系统中不存在。\r\n","when an error receiving or processing data occurred at\n the HTTP level.":"当收到或处理数据发生错误时\r\n HTTP级别。\r\n","Called by the system every time a client explicitly starts the service by calling \n            ":"每当客户端通过调用客户明确启动服务时，系统调用\r\n            \r\n","android.app.Fragment.onGetLayoutInflater(android.os.Bundle)":"android.app.fragment.ongetlayoutinflater（android.os.bundle）\r\n","android.app.admin.DevicePolicyManager.getDelegatePackages(android.content.ComponentName, java.lang.String)":"android.app.admin.devicepolicymanager.getDelegatePackages（android.content.componentname，java.lang.string）\r\n","Called on the device owner when the ownership of one of its affiliated profiles is\n            transferred.":"当其附属配置文件之一的所有权是\r\n            转移。\r\n","android.app.UiModeManager":"android.app.uimodemanager\r\n","android.app.admin.DevicePolicyManager.isNetworkLoggingEnabled(android.content.ComponentName)":"android.app.admin.devicepolicymanager.isnetworkloggingEnabled（android.content.componentname）\r\n","android.app.Activity.showAssist(android.os.Bundle)":"android.app.activity.showassist（android.os.bundle）\r\n","This function returns the result of linearly interpolating the start and\n            end PointF values, with <code>fraction</code> representing the proportion\n            between the start and end values.":"此函数返回线性插值开始和\r\n            End Pointf值，带有<code>分数</code>表示比例\r\n            在开始值和最终值之间。\r\n","android.app.UiModeManager.ACTION_EXIT_DESK_MODE":"android.app.uimodemanager.action_exit_desk_mode\r\n","Return the current state of task locking.":"返回任务锁定的当前状态。\r\n","android.app.Activity.onPrepareOptionsMenu(android.view.Menu)":"android.app.activity.onprepareoptionsmenu（android.view.menu）\r\n","Returns the ID of the display this gesture is sent on, for use with\n            ":"返回显示此手势的显示器的ID，用于使用\r\n            \r\n","android.app.UiAutomation.FLAG_DONT_SUPPRESS_ACCESSIBILITY_SERVICES":"android.app.uiautomation.flag_dont_suppress_accessibility_services\r\n","android.accessibilityservice.AccessibilityService.dispatchGesture(android.accessibilityservice.GestureDescription, android.accessibilityservice.GestureResultCallback, android.os.Handler)":"Android.AccessibilityService.Accessibilityservice.disPatchGesture（android.accesseribilityservice.gestruestescription，android.accesseribilityservice.gesturreeresultcallcallback，android.os.handler）\r\n","android.bluetooth.BluetoothClass.hasService(int)":"android.bluetooth.bluetoothclass.hasservice（int）\r\n","#ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED":"#action_notification_channel_block_state_changed\r\n","android.app.usage.UsageStatsManager.isAppInactive(java.lang.String)":"android.app.usage.usagestatsmanager.isappinactive（java.lang.string）\r\n","android.app.usage.EventStats.add(android.app.usage.EventStats)":"android.app.usage.eventstats.add（android.app.usage.eventstats）\r\n","\n            method and before ":"\r\n            方法和之前\r\n","android.app.admin.DevicePolicyManager.ACTION_SET_NEW_PARENT_PROFILE_PASSWORD":"android.app.admin.devicepolicymanager.action_set_new_parent_profile_password\r\n","Broadcast Action: An app is granted the\n            ":"广播动作：授予应用程序\r\n            \r\n","If provided, and not overridden by an action in the selected suggestion, this\n            string will be placed in the action field of the ":"如果提供的，并且不被选定建议中的诉讼覆盖，那么\r\n            字符串将放置在\r\n","android.app.Dialog.setFeatureDrawableAlpha(int, int)":"android.app.dialog.setfeaturedrawablealpha（int，int）\r\n","android.content.res.Configuration":"android.content.Res.Configuration\r\n","Request that key events come to this activity.":"请求关键事件发生在此活动中。\r\n","Returns AutomaticZenRules owned by the caller.":"返回呼叫者拥有的自动Zenrules。\r\n","Returns recommended maximum size, in bytes, of downloads that may go over a mobile\n            connection; or null if there's no recommended limit.":"退货建议最大尺寸（在字节中）可能会超过手机的下载\r\n            联系;如果没有建议的限制，则为null。\r\n","android.app.Activity.dispatchTrackballEvent(android.view.MotionEvent)":"android.app.activity.dispatchtrackballevent（android.view.motionevent）\r\n","android.app.Activity.onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)":"android.app.activity.onrestoreInstancestate（android.os.bundle，android.os.osistablebundle）\r\n","Set the ticker text.":"设置股票文字。\r\n","android.app.admin.DevicePolicyManager.setPasswordMinimumLength(android.content.ComponentName, int)":"android.app.admin.devicepolicymanager.setpasswordwordwordminements（android.content.componentname，int）\r\n","android.app.WallpaperManager.getWallpaperFile(int)":"android.app.wallpapermanager.getWallpaperfile（int）\r\n"," that contains a ":" 其中包含一个\r\n","Defines all device class constants.":"定义所有设备类常数。\r\n","android.app.ApplicationExitInfo.getPss()":"android.app.applicationexitinfo.getpss（）\r\n","Value the animation starts from.":"值动画始于。\r\n","android.app.admin.DeviceAdminReceiver.ACTION_DEVICE_ADMIN_ENABLED":"android.app.admin.deviceadminreceiver.action_device_admin_enabled\r\n","This is called when the user is requesting an assist, to build a full\n ":"当用户请求辅助时，这就是称为构建完整的\r\n \r\n","Called when the fragment is no longer in use.":"当片段不再使用时调用。\r\n","android.app.appsearch.AppSearchBatchResult.isSuccess()":"android.app.appsearch.appsearchbatchresult.issuccess（）\r\n"," to close a popup keyboard \n":" 关闭弹出键盘\r\n\r\n","android.app.WallpaperManager.getBuiltInDrawable(int)":"android.app.wallpapermanager.getBuiltIndrawable（int）\r\n","android.app.AppOpsManager.OPSTR_SYSTEM_ALERT_WINDOW":"android.app.appopsmanager.opptr_system_alert_window\r\n","android.app.admin.DevicePolicyManager.getPermissionGrantState(android.content.ComponentName, java.lang.String, java.lang.String)":"android.app.admin.devicepolicymanager.getpermissiongrantstate（android.content.componentname，java.lang.string，java.lang.string）\r\n","android.app.admin.DeviceAdminInfo.supportsTransferOwnership()":"android.app.admin.deviceadmininfo.supporttransferownhips（）\r\n","Allows an application to retrieve state dump information from system\n         services.":"允许应用程序从系统中检索状态转储信息\r\n         服务。\r\n","Obtain a drawable for the built-in static system wallpaper.":"获取可用于内置静态系统壁纸的绘图。\r\n"," associated with a\n            ":" 与\r\n            \r\n","Get the last time this package's foreground service was used, measured in milliseconds since\n            the epoch.":"最后一次使用此包装的前景服务，以毫秒为单位\r\n            时代。\r\n"," when the download is waiting to retry or resume.":" 当下载等待重试或恢复时。\r\n","android.app.admin.DevicePolicyManager.getParentProfileInstance(android.content.ComponentName)":"android.app.admin.devicepolicymanager.getParentProfileInstance（android.content.componentname）\r\n","\n            from which to read ":"\r\n            从中阅读\r\n","android.app.usage.NetworkStats.close()":"android.app.usage.networkstats.close（）\r\n","android.app.usage.UsageStatsManager.queryEventsForSelf(long, long)":"android.app.usage.usagestatsmanager.queryeventsforsforself（长，长）\r\n","\n          TODO: Not supported.\n          The name of the class to that implements the application.\n        ":"托多：不支持。\r\n          该类的名称实现了应用程序。\r\n        \r\n","Set whether this download may proceed over a metered network\n connection.":"设置该下载是否可以通过计量网络进行\r\n 联系。\r\n","android.app.slice.Slice.SUBTYPE_CONTENT_DESCRIPTION":"android.app.slice.slice.subtype_content_description\r\n","Makes the right edge of this view match the right edge of the given anchor view ID.":"使此视图的右边缘与给定锚视图ID的右边缘匹配。\r\n","#startProxyOp(String, int, String, String, String)":"#startproxyop（字符串，int，String，String，String）\r\n","android.app.job.JobInfo.getBackoffPolicy()":"android.app.job.jobinfo.getbackoffpolicy（）\r\n","android.app.RemoteAction.getTitle()":"android.app.remoteaction.getTitle（）\r\n","The provisioning mode for a managed profile on a personal device.":"个人设备上的托管配置文件的配置模式。\r\n","android.app.LocalActivityManager":"Android.App.LecallactivityManager\r\n","Enables the specified transitionType for this LayoutTransition object.":"启用该布局转录对象的指定过渡类型。\r\n","android.app.admin.DevicePolicyManager.EXTRA_PASSWORD_COMPLEXITY":"android.app.admin.devicepolicymanager.extra_password_complexity\r\n","This is called when the view is attached to a window.":"当视图连接到窗口时，这就是调用。\r\n","blobHandle":"Blobhandle\r\n","Name under which a DevicePolicy component publishes information\n            about itself.":"devicepolicy组件发布信息的名称\r\n            关于自己。\r\n","Defines the tile mode.":"定义瓷砖模式。\r\n","#KEY_ACCOUNT_TYPE":"#KEY_ACCOUNT_TYPE\r\n","Process#myUserHandle":"流程＃myuserhandle\r\n","android.app.FragmentController.dispatchCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)":"android.app.fragmentController.disPatchCreateOptionsMenu（android.view.menu，android.view.menuinflater）\r\n","Returns the audio attributes for sound played by notifications posted to this channel.":"返回通过发布到此频道的通知播放的声音的音频属性。\r\n","Reports that a particular document has been used from a system surface.":"报告说已经从系统表面使用了特定文档。\r\n","android.app.admin.SecurityLog.TAG_KEY_DESTRUCTION":"android.app.admin.securitylog.tag_key_destruction\r\n","android.app.Fragment.getSharedElementReturnTransition()":"android.app.fragment.getSharedElementReturntransition（）\r\n","M:Android.App.Activity.StartActivityFromFragment(Android.App.Fragment,Android.Content.Intent,Android.Content.Intent,Android.Content.Intent)":"m：android.app.activity.startactivity fromFragment（android.app.fragment，android.content.intent，android.content.intent，android.content.intent）\r\n","Length of a dash in the stroke.":"冲刺的长度。\r\n","Drawable or color that is used as a divider for children.":"可绘制的或颜色用作儿童的分隔线。\r\n","android.app.admin.NetworkEvent":"android.app.admin.networkevent\r\n","android.app.Fragment.unregisterForContextMenu(android.view.View)":"android.app.fragment.unregisterforcontextmenu（android.view.view）\r\n","android.app.backup.BackupDataInputStream":"android.app.backup.backupdatainputstream\r\n","android.app.Activity.onDetachedFromWindow()":"android.app.activity.ondetachedfromwindow（）\r\n"," broadcast,\n            indicating the integer ID of the host whose widgets have just been restored.":" 播送，\r\n            指示刚刚恢复小部件的主机的整数ID。\r\n","#getStatus":"#getStatus\r\n","Print the Activity's state into the given stream.":"将活动的状态打印到给定的流中。\r\n","A type of policy that this device admin can use: limit the passwords\n            that the user can select, via ":"此设备管理员可以使用的一种策略：限制密码\r\n            用户可以选择，通过\r\n","android.app.DownloadManager.ACTION_NOTIFICATION_CLICKED":"android.app.downloadmanager.action_notification_clicked\r\n","android.app.admin.SystemUpdatePolicy.createPostponeInstallPolicy()":"android.app.admin.SystemupDatePolicy.CreatePostPoneInstallPolicy（）\r\n","android.app.FragmentHostCallback.onUseFragmentManagerInflaterFactory()":"Android.App.FragmentHostCallback.OnuseFragmentManagerinFlaterFactory（）\r\n","android.app.admin.DeviceAdminReceiver.onDisableRequested(android.content.Context, android.content.Intent)":"android.app.admin.deviceadminreceiver.ondisableRequested（android.content.context，android.content.intent）\r\n","Returns the properties of this characteristic.":"返回此特征的属性。\r\n","Indicates that removable media was unmounted from the device.":"表示可移动介质已从设备上卸下。\r\n","Enumerates values returned by  several types and taken as a parameter of the ":"列举以几种类型返回的值，并将其作为参数\r\n","android.app.admin.DevicePolicyManager.SKIP_SETUP_WIZARD":"android.app.admin.devicepolicymanager.skip_setup_wizard\r\n","Sets the duration on one of the animation objects used by this transition.":"将持续时间设置在此过渡使用的动画对象之一上。\r\n","Report some results in the middle of instrumentation execution.":"在仪器执行中报告一些结果。\r\n","BluetoothProfile#A2DP":"BluetoothProfile＃A2DP\r\n","android.accessibilityservice.GestureDescription.getMaxStrokeCount()":"android.accesseribilityservice.gestruedescription.getmaxstrokecount（）\r\n","Default style for the MediaRouteButton widget.":"Mediaroutebutton小部件的默认样式。\r\n","android.app.slice.SliceSpec.canRender(android.app.slice.SliceSpec)":"android.app.slice.SliceSpec.Canrender（android.app.slice.slicepec）\r\n","android.app.admin.DevicePolicyManager.PERSONAL_APPS_SUSPENDED_PROFILE_TIMEOUT":"android.app.admin.devicepolicymanager.personal_apps_suspended_profile_timeout\r\n"," method has\n        been invoked on the instance.\n        The ":" 方法有\r\n        已在实例上调用。\r\n        这\r\n","#RECENT_IGNORE_UNAVAILABLE":"#recent_ignore_unavailable\r\n","android.app.PendingIntent.isActivity()":"android.app.pendingIntent.isactivity（）\r\n","android.app.blob.BlobStoreManager.getLeasedBlobs()":"android.app.blob.blobstoremanager.getLeadeSlobs（）\r\n","android.app.AppOpsManager.MODE_ALLOWED":"android.app.appopsmanager.mode_lowered\r\n","android.accounts.AccountManager.startUpdateCredentialsSession(android.accounts.Account, java.lang.String, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)":"android.accounts.accountmanager.startupdatecredentialssessession（android.accounts.accounts.account，java.lang.string，android.os.os.bundle，android.app.Appivity，android.account.account.accounts.accountmanagercalcercalcercallback，Android.os.os.handler）\r\n","AccessibilityService.ScreenshotResult":"AccessibilityService.screenshotresult\r\n","android.accessibilityservice.AccessibilityService.GESTURE_SWIPE_DOWN_AND_RIGHT":"Android.AccessibilityService.Accessibilityservice.gesture_swipe_down_and_right\r\n","Return true if the local Bluetooth adapter is currently in the device\n            discovery process.":"如果本地蓝牙适配器当前在设备中，则返回true\r\n            发现过程。\r\n","android.app.blob.BlobStoreManager.createSession(android.app.blob.BlobHandle)":"android.app.blob.blobstoremanager.createsession（android.app.blob.blobhandle）\r\n","android.bluetooth.BluetoothAdapter.isDiscovering()":"android.bluetooth.bluetoothadapter.isdiscovering（）\r\n","#REASON_ANR":"#Reason_Anr\r\n","android.app.ActivityManager.getLockTaskModeState()":"android.app.activityManager.getLockTaskModestate（）\r\n","android.appwidget.AppWidgetManager.notifyAppWidgetViewDataChanged(int, int)":"android.appwidget.appwidgetManager.notifyAppWidgetViewDatachanged（int，int）\r\n","Return the window animations.":"返回窗口动画。\r\n","android.app.SearchableInfo.getInputType()":"android.app.searchableInfo.getInputType（）\r\n","Gets the duration of the animation.":"获取动画的持续时间。\r\n","Return true if the multi advertisement is supported by the chipset":"如果芯片组支持多个广告，则返回true\r\n","android.bluetooth.BluetoothDevice.ERROR":"android.bluetooth.bluetoothdevice.error\r\n","Describes an application error.":"描述应用程序错误。\r\n","Specifies that the device should attest its IMEI.":"指定该设备应证明其IMEI。\r\n","#MAKE_USER_EPHEMERAL":"#make_user_ephemeral\r\n","android.app.assist.AssistStructure.getWindowNodeAt(int)":"android.app.assist.AssistStructure.getWindownodeat（int）\r\n","android.app.Activity.getTaskId()":"android.app.activity.getTaskID（）\r\n","Reference to a drawable that will be used to display a text selection\n             anchor for positioning the cursor within text.":"引用可绘制的可用于显示文本选择的可绘图\r\n             用于将光标定位在文本中的锚点。\r\n","android.app.SearchManager.SUGGEST_COLUMN_ICON_2":"android.app.searchmanager.suggest_column_icon_2\r\n","Get the last time this event triggered, measured in milliseconds since the epoch.":"以自时代以来以毫秒为单位测量的最后一次触发此事件。\r\n","android.app.admin.DeviceAdminInfo.getActivityInfo()":"android.app.admin.deviceadmininfo.getActivityInfo（）\r\n","Allows applications to perform I/O operations over NFC \n":"允许应用程序通过NFC执行I/O操作\r\n\r\n","Indicates that an admin has removed a user restriction.":"表示管理员已删除了用户限制。\r\n"," that shows the user more information\n            about this rule and/or allows them to configure it.":" 向用户显示更多信息\r\n            关于此规则和/或允许他们进行配置。\r\n","Set or clear the callback that will be invoked whenever the search UI is canceled.":"设置或清除每当取消搜索UI时将调用的回调。\r\n","android.app.admin.SystemUpdatePolicy.getInstallWindowEnd()":"android.app.admin.SystemupDatePolicy.getInstallWindowend（）\r\n","Default notification importance: shows everywhere, makes noise, but does not visually\n            intrude.":"默认通知重要性：到处显示，发出噪音，但不会在视觉上\r\n            侵入。\r\n","Return a brief summary of this wallpaper's behavior.":"返回此壁纸行为的简要摘要。\r\n","Request to terminate the current voice interaction that was previously started\n            using ":"要求终止以​​前启动的当前语音交互\r\n            使用\r\n","android.app.VoiceInteractor":"Android.App.VoiceInteractor\r\n","The right bound for an item's indicator.":"适用于项目指示器的正确绑定。\r\n","Optional extra for ":"可选的额外\r\n","android.app.ProgressDialog.ProgressDialog(android.content.Context, int)":"android.app.progressdialog.progressdialog（android.content.context，int）\r\n","android.app.appsearch.GetSchemaResponse.getVersion()":"android.app.app.appsearch.getschemaresponse.getversion（）\r\n","android.appwidget.AppWidgetProviderInfo.minResizeWidth":"android.appwidget.appwidgetProviderInfo.minresizeWidth\r\n","#ACTION_UUID":"#action_uuid\r\n","Characteristic permission: Allow reading with person-in-the-middle protection":"特征许可：允许使用中间人保护的阅读\r\n","android.app.Instrumentation":"Android.App.Instrumentation\r\n","Navigate from this activity to the activity specified by upIntent, finishing this activity\n            in the process.":"从该活动导航到upintent指定的活动，完成此活动\r\n            进行中。\r\n","android.app.PendingIntent.isService()":"android.app.pendingIntent.isservice（）\r\n","android.app.Activity.onUserInteraction()":"android.app.Activity.OnuserInteraction（）\r\n","Default background for each menu item.":"每个菜单项的默认背景。\r\n","Set resId to 0 if you don't want an icon.":"如果您不想要图标，将残留物设置为0。\r\n","android.app.ApplicationExitInfo.REASON_USER_STOPPED":"android.app.applicationexitinfo.reason_user_stopped\r\n","android.animation.ValueAnimator.setRepeatMode(int)":"android.animation.valueAnimator.setRepeatMode（int）\r\n","Voice search features are controlled by mode bits in this field.":"语音搜索功能由该字段中的模式位控制。\r\n","android.app.admin.DevicePolicyManager.setPasswordMinimumSymbols(android.content.ComponentName, int)":"android.app.admin.devicepolicymanager.setpasswordwordwordminimumsymbols（android.content.componentname，int）\r\n","android.animation.ObjectAnimator.ofObject(java.lang.Object, android.util.Property, android.animation.TypeConverter, android.animation.TypeEvaluator, java.lang.Object[])":"android.animation.ObjectAnimator.OfObject（java.lang.object，android.util.property，android.animation.typeconverter，android.animation.typeevaluator，java.lang.object []）\r\n","android.app.SearchableInfo":"Android.App.SearchableInfo\r\n","If unset, no state will be saved for this view when it is being\n             frozen.":"如果尚不确定，则在此视图中不会保存任何状态\r\n             冷冻。\r\n","This function returns the calculated in-between value for a color\n            given integers that represent the start and end values in the four\n            bytes of the 32-bit int.":"此函数返回颜色的计算出的中值\r\n            给定的整数代表四个的开始和结束值\r\n            32位int的字节。\r\n","UiAutomation":"uiautomation\r\n","android.app.ExpandableListActivity.setSelectedGroup(int)":"Android.App.ExpandableListactivity.SetSelectedGroup（int）\r\n","Called when the bugreport collection flow has failed.":"当BugReport集合流量失败时调用。\r\n","Broadcast Action: This broadcast is sent to indicate that provisioning of a managed profile\n            has completed successfully.":"广播动作：发送此广播以表明托管个人资料的配置\r\n            已经成功完成。\r\n","A String extra indicating the security type of the wifi network in\n            ":"字符串额外指示WiFi网络的安全类型\r\n            \r\n","android.accessibilityservice.AccessibilityService.GESTURE_3_FINGER_TRIPLE_TAP_AND_HOLD":"Android.AccessibilityService.Accessibilityservice.gesture_3_finger_triple_tap_and_hold\r\n","android.app.backup.BackupAgent.TYPE_FILE":"android.app.backup.backupent.type_file\r\n","android.app.usage.EventStats.getLastEventTime()":"android.app.usage.eventstats.getlasteventtime（）\r\n","Called by the profile owner of a managed profile to enable widget providers from a given\n            package to be available in the parent profile.":"由托管个人资料的个人资料所有者调用，以启用给定的小部件提供商\r\n            包装在父个人资料中可用。\r\n","android.app.Activity.onPrepareDialog(int, android.app.Dialog)":"android.app.activity.onpreparedialog（int，android.app.dialog）\r\n","This function returns the result of linearly interpolating the start and end values, with\n            <code>fraction</code> representing the proportion between the start and end values.":"此函数返回线性插值开始和结束值的结果，\r\n            <code>分数</code>表示开始和结束值之间的比例。\r\n","Specifies that the calling app should be granted access to the installed credentials\n            immediately.":"指定应授予调用应用程序访问已安装的凭据\r\n            立即地。\r\n","Similar as ":"类似于\r\n","Create a new engine, ready for use.":"创建一个新的引擎，可以使用。\r\n","Returns the data passed from the current administrator to the new administrator during an\n            ownership transfer.":"将通过当前管理员传递的数据返回到新管理员\r\n            所有权转让。\r\n"," extra pointing to a logo image.":" 特级指向徽标图像。\r\n","android.app.RemoteInput.getAllowedDataTypes()":"Android.App.RemoteInput.getAllowedDatatypes（）\r\n","Metrics interface for slices.":"切片的指标接口。\r\n"," is null or empty, and ":" 为空或空，\r\n"," is enabled, this\n            function requests that touch interactions starting in the specified region of the screen\n            bypass the gesture detector.":" 已启用，这个\r\n            功能请求从屏幕的指定区域开始触摸交互的功能请求\r\n            绕过手势检测器。\r\n","Called by device owner, or profile owner on organization-owned device, to get the MAC\n            address of the Wi-Fi device.":"由设备所有者或组织拥有的设备上的个人资料所有者拨打以获取Mac\r\n            Wi-Fi设备的地址。\r\n","Remove any alarm scheduled to be delivered to the given ":"删除安排发送给给定的任何警报\r\n","The service component.":"服务组件。\r\n","android.app.FragmentController.dispatchPause()":"android.app.fragmentController.disPatchPause（）\r\n","android.app.Notification.ledOffMS":"Android.App.Notification.LeDoffms\r\n","Returns whether notifications posted to this channel are allowed to display outside of the\n            notification shade, in a floating window on top of other apps.":"退货是否允许发布到此频道的通知在\r\n            通知阴影，在其他应用程序顶部的浮动窗口中。\r\n","android.app.Fragment.registerForContextMenu(android.view.View)":"android.app.fragment.registerforcontextmenu（android.view.view）\r\n","The user certificate of the wifi network in ":"WiFi网络的用户证书\r\n","android.animation.ValueAnimator.getAnimatedFraction()":"android.animation.valueAnimator.getAnimatedFraction（）\r\n","android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_MAIN_COLOR":"android.app.admin.devicepolicymanager.extra_provisioning_main_color\r\n","Read a record's raw data from the restore stream.":"从还原流读取记录的原始数据。\r\n"}