{"java.util.concurrent.locks.StampedLock.unlockWrite(long)":"java.util.concurrent.locks.stampedlock.unlockwrite（long）\r\n","javax.net.ssl.SSLSocket.getSSLParameters()":"javax.net.ssl.sslsocket.getsslparameters（）\r\n","Generates a hash code for this route.":"为此路线生成哈希代码。\r\n","org.w3c.dom.ls.LSParser.parseWithContext(org.w3c.dom.ls.LSInput, org.w3c.dom.Node, short)":"org.w3c.dom.ls.lsparser.parsewithcontext（org.w3c.dom.ls.ls.lsinput，org.w3c.dom.node，short）\r\n","org.w3c.dom.NamedNodeMap.getNamedItem(java.lang.String)":"org.w3c.dom.namednodemap.getnameditem（java.lang.string）\r\n","java.util.prefs.Preferences.putLong(java.lang.String, long)":"java.util.prefs.preferences.putlong（java.lang.string，长）\r\n","java.util.zip.Deflater":"java.util.zip.deflater\r\n","\r\n            Gets or sets the name of the parameter used to convey the original location\r\n            of the user before the remote challenge was triggered up to the access denied page.\r\n            This property is only used when the ":"获取或设置用于传达原始位置的参数的名称\r\n            在远程挑战之前，将用户触发到访问拒绝页面。\r\n            仅在\r\n","if pSrcName is null.\n":"如果psrcname为null。\r\n\r\n","If the specified range of text does not fit into a\n            <code>DOMString</code>.":"如果指定的文本范围不适合\r\n            <code> domstring </code>。\r\n","Removes the specified attribute node.":"删除指定的属性节点。\r\n","Tests if headers with the given name are contained within this group.":"测试是否包含具有给定名称的标题。\r\n","When the underlying XMLReader\n  recognizes the property name but doesn't support the property.":"当基础XMLReader\r\n  识别属性名称，但不支持该属性。\r\n","org.apache.http.conn.scheme.LayeredSocketFactory":"org.apache.http.conn.scheme.layeredsocketFactory\r\n","Reads the Manifest from the specified InputStream.":"从指定的输入流读取清单。\r\n","java.util.zip.Inflater.needsInput()":"java.util.zip.inflater.needsinput（）\r\n","Look up the prefix associated to the given namespace URI, starting from\n            this node.":"查找与给定名称空间URI关联的前缀，从\r\n            这个节点。\r\n","Determines the first step to establish a route.":"确定建立路线的第一步。\r\n","javax.crypto.ExemptionMechanismException.ExemptionMechanismException(java.lang.String)":"javax.crypto.ExemptionMechanismException.ExemptionMechanismException（java.lang.string）\r\n","s.\r\n            ":"s。\r\n            \r\n"," nodes to re-use them in other elements.\n   ":" 节点以将其重新使用其他元素。\r\n   \r\n","java.util.logging.LogManager":"java.util.logging.logmanager\r\n","java.util.logging.Level.getName()":"java.util.logging.level.getName（）\r\n","if the combination of set fields\n    does not match one of the eight defined XML Schema builtin date/time datatypes.\n":"如果固定字段的组合\r\n    不匹配八个定义的XML架构内置的日期/时间数据类型之一。\r\n\r\n","Creates a new input stream with the specified buffer size.":"创建具有指定缓冲区大小的新输入流。\r\n"," with the length of the source buffer.\r\n            ":" 带有源缓冲区的长度。\r\n            \r\n","Creates a <code>SSLEngine</code> using this context.":"使用此上下文创建<code> sslengine </code>。\r\n","\r\n            Used to ensure HandleAuthenticateAsync is only invoked once safely. The subsequent\r\n            calls will return the same authentication result. Any exceptions will be converted\r\n            into a failed authentication result containing the exception.\r\n            ":"\r\n            用于确保仅安全调用手理含量。后续\r\n            呼叫将返回相同的身份验证结果。任何例外将转换\r\n            在包含异常的身份验证结果中失败。\r\n            \r\n","\r\n            Collects the data produced by the rendering system during the course\r\n            of rendering a single batch. This tracks both the final output data\r\n            and the intermediate states (such as the queue of components still to\r\n            be rendered).\r\n            ":"\r\n            在课程中收集渲染系统产生的数据\r\n            渲染一批。这跟踪两个最终输出数据\r\n            和中间状态（例如，组件的队列仍在\r\n            渲染）。\r\n            \r\n","<code>LSParserFilter</code>s provide applications the ability to examine\n            nodes as they are being constructed while parsing.":"<code> LSPARSERFILTER </code> s提供应用程序检查的能力\r\n            节点在解析时被构造。\r\n","java.util.concurrent.RecursiveAction":"java.util.concurrent.recursiveaction\r\n","NOT_FOUND_ERR: Raised if there is no node with the specified\n   ":"not_found_err：如果没有指定的节点，则提出\r\n   \r\n","Parse the content given ":"解析给定的内容\r\n","javax.xml.datatype.Duration.isShorterThan(javax.xml.datatype.Duration)":"javax.xml.datatype.duration.isshorterthan（javax.xml.datatype.duration）\r\n","javax.security.cert.X509Certificate":"javax.security.cert.x509certificate\r\n","Returns true if the entity's Content-Type header is\n ":"如果实体的内容类型标题为\r\n \r\n","org.xml.sax.Parser":"org.xml.sax.parser\r\n","Creates a NullCipher object.":"创建一个nullcipher对象。\r\n","if this node has been removed and the path is not an empty\n             string.":"如果该节点已被删除并且路径不是空的\r\n             细绳。\r\n",", gets the\r\n            index of the new frame data in an associated render tree.\r\n            ":"，得到\r\n            相关渲染树中新框架数据的索引。\r\n            \r\n","\r\n            Gets or sets a list authentication schemes the ":"\r\n            获取或设置列表身份验证方案\r\n","it the specified parameters are inappropriate for this\n             cipher.":"它指定的参数不合适\r\n             密码。\r\n","\r\n            Creates a new instance of the context object.\r\n            ":"\r\n            创建上下文对象的新实例。\r\n            \r\n","org.xml.sax.helpers.AttributeListImpl.getType(java.lang.String)":"org.xml.sax.helpers.attributelistimpl.getType（java.lang.string）\r\n","\r\n            Copies data from the current ":"\r\n            从当前复制数据\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.hasQueuedPredecessors()":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.hasqueuedpredequesers（）\r\n","One or more variables that together maintain a running ":"一个或多个变量一起维护运行\r\n","\r\n            The number of uncommitted bytes (all the calls to ":"\r\n            无需字节的数量（所有调用\r\n","org.xml.sax.helpers.XMLReaderAdapter.startPrefixMapping(java.lang.String, java.lang.String)":"org.xml.sax.helpers.xmlreaderadapter.startprefixmapping（java.lang.string，java.lang.string）\r\n","A secret (symmetric) key.":"秘密（对称）键。\r\n","if the destination buffer is readonly.":"如果目标缓冲区已阅读。\r\n","if this zip file has been closed.":"如果该邮政编码已关闭。\r\n"," what types of nodes to show to the\n method ":" 哪种类型的节点可以显示给\r\n 方法\r\n","\n            returns <code>true</code> when passed this value as an argument,\n            the <code>Transformer</code> supports <code>Result</code> output of this type.":"\r\n            返回<code> true </code>当传递此值作为参数时，\r\n            <code>变压器</code>支持<code>结果</code>此类型的输出。\r\n","Sets the suggested column title for use in printouts and\n            displays, if any, to the given <code>String</code>.":"设置建议的列标题以用于打印输出和\r\n            显示给定<code>字符串</code>的（如果有）。\r\n","handshakeStatus":"handshakestatus\r\n","Interface for releasing a connection.":"释放连接的接口。\r\n","getDouble":"GetDouble\r\n","org.xml.sax.helpers.LocatorImpl.setSystemId(java.lang.String)":"org.xml.sax.helpers.locatorimpl.setsystemid（java.lang.string）\r\n","Returns the maximum size that an application buffer can be for this\n session.":"返回应用程序缓冲区可能为此的最大尺寸\r\n 会议。\r\n","\r\n            Returns true if request processing should stop.\r\n            ":"\r\n            如果请求处理应停止，则返回为TRUE。\r\n            \r\n","\r\n            Extracts claims identifier.\r\n            ":"\r\n            摘录要求标识符。\r\n            \r\n","Register the SAX1 document event handler.":"注册SAX1文档事件处理程序。\r\n","if the argument is invalid\n":"如果论点无效\r\n\r\n","Represents a function that accepts an int-valued argument and produces a\n            double-valued result.":"代表一个接受int值参数并产生一个的函数\r\n            双值结果。\r\n","java.util.stream.Collectors.joining()":"java.util.stream.collectors.joining（）\r\n","javax.crypto.spec.DESedeKeySpec.getKey()":"javax.crypto.spec.desedekeyspec.getkey（）\r\n","if thread interrupted while waiting":"如果线程在等待时中断\r\n","java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndDecrement(java.lang.Object)":"java.util.concurrent.atomic.atomiclongfieldupdater.getanddecrement（java.lang.object）\r\n","Creates a new response from a status line.":"从状态行创建新的响应。\r\n","\r\n            Supplies information about a keyboard event that is being raised.\r\n            ":"\r\n            提供有关正在提出的键盘事件的信息。\r\n            \r\n","Represents a function that produces a long-valued result.":"代表产生长期结果的函数。\r\n","Modifies or replaces the task used to execute a callable.":"修改或替换用于执行可可的任务。\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getState()":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.getState（）\r\n","javax.net.ssl.SSLEngine.unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer)":"javax.net.ssl.sslengine.unwrap（java.nio.bytebuffer，java.nio.bytebuffer）\r\n","java.util.logging.LogRecord.setResourceBundleName(java.lang.String)":"java.util.logging.logrocord.setResourcebundlename（java.lang.string）\r\n","if the task cannot be\n         scheduled for execution":"如果任务不能是\r\n         计划执行\r\n","\r\n            Holds a byte[] from the pool and a size value. Basically a Memory but guaranteed to be backed by an ArrayPool byte[], so that we know we can return it.\r\n            ":"\r\n            从池中保留一个字节[]和一个尺寸值。基本上是一个内存，但保证将由Arraypool Byte []支持，以便我们知道我们可以返回它。\r\n            \r\n","Return an enumeration of all prefixes declared in this context.":"返回在此上下文中声明的所有前缀的列举。\r\n","java.util.zip.CRC32.CRC32()":"java.util.zip.crc32.crc32（）\r\n","Checks whether a character is a token separator.":"检查字符是否是令牌分离器。\r\n","Returns the particular property requested for in the underlying\n            implementation of org.":"返回基础要求的特定属性\r\n            实施组织。\r\n","Filter an error event.":"过滤错误事件。\r\n","CookieOrigin class incapsulates details of an origin server that \n are relevant when parsing, validating or matching HTTP cookies.":"cookieorigin类无需发出原始服务器的详细信息\r\n 解析，验证或匹配HTTP cookie时很重要。\r\n"," is not a child of\n   this node.\n   ":" 不是一个孩子\r\n   这个节点。\r\n   \r\n"," are evaluated against.\r\n            ":" 评估反对。\r\n            \r\n","java.util.logging.Logger.getGlobal()":"java.util.logging.logger.getGlobal（）\r\n","The Strict HostnameVerifier works the same way as Sun Java 1.":"严格的主机名与Sun Java 1的工作方式相同。\r\n"," attribute.\n   ":" 属性。\r\n   \r\n","if the cookie is invalid\n":"如果饼干无效\r\n\r\n"," class as a base class to author components that control\r\n            the lifetime of a service or multiple services. This is useful when using a transient or scoped service that\r\n            requires disposal such as a repository or database abstraction. Using ":" 将作为控制的作者组件作为基础类\r\n            服务或多个服务的寿命。当使用瞬态或范围的服务时，这很有用\r\n            需要处置，例如存储库或数据库抽象。使用\r\n","method = \"xml\" | \"html\" | \"text\" | <var>expanded name</var>.":"方法=“ XML” | “ html” | “文字” | <var>扩展名称</var>。\r\n","org.json.JSONObject.put(java.lang.String, double)":"org.json.jsonobject.put（java.lang.string，double）\r\n","Represents an operation that accepts a single input argument and returns no\n            result.":"表示接受单个输入参数并返回否的操作\r\n            结果。\r\n","java.util.concurrent.TimeoutException.TimeoutException()":"java.util.concurrent.timeoutexception.timeoutexception（）\r\n","java.util.logging.MemoryHandler.flush()":"java.util.logging.memoryhandler.flush（）\r\n","\r\n            The Access-Control-Expose-Headers response header.\r\n            ":"\r\n            访问对照 - 膨胀头响应标头。\r\n            \r\n","\r\n            Holds a string that identifies the physical key being pressed.\r\n            The value is not affected by the current keyboard layout or modifier state, so a particular key will always return the same value.\r\n            ":"\r\n            拥有一个字符串，可以识别被按下的物理键。\r\n            该值不受当前键盘布局或修饰符状态的影响，因此特定键将始终返回相同的值。\r\n            \r\n","Evaluate the compiled XPath expression in the specified context and return the result as a <code>String</code>.":"评估指定上下文中编译的XPATH表达式，并将结果返回为<code> String </code>。\r\n"," parameter value with the given name.":" 带有给定名称的参数值。\r\n","\r\n            Adds hub options for the configuration of the SignalR Hub used by Server-Side Blazor.\r\n            ":"\r\n            添加了用于配置服务器端外汇的SignalR集线器的集线器选项。\r\n            \r\n","#convert(long, TimeUnit) MILLISECONDS.convert(duration, this)":"#convert（long，timeunit）milliseconds.convert（持续时间，此）\r\n","Returns the algorithm name of this <code>KeyGenerator</code> object.":"返回此<code> keygenerator </code>对象的算法名称。\r\n","The character encoding, if known.":"字符编码，如果已知。\r\n","\r\n            Represents a link between a ASP.NET Core Component on the server and a client.\r\n            ":"\r\n            表示服务器上的ASP.NET核心组件与客户端之间的链接。\r\n            \r\n","javax.crypto.Cipher.update(byte[])":"javax.crypto.cipher.update（byte []）\r\n","javax.xml.transform.sax.SAXSource":"javax.xml.transform.sax.saxsource\r\n","org.apache.http.conn.scheme.HostNameResolver":"org.apache.http.conn.scheme.hostnameresolver\r\n","Default base class for SAX2 event handlers.":"SAX2事件处理程序的默认基类。\r\n","volatile int":"挥发性int\r\n","java.util.concurrent.atomic.AtomicLongFieldUpdater.set(java.lang.Object, long)":"java.util.concurrent.atomic.atomiclongfieldupdater.set（java.lang.Object，long）\r\n","Checks to see if the supplied hostname matches any of the supplied CNs\n            or \"DNS\" Subject-Alts.":"检查提供的主机名是否匹配任何提供的CNS\r\n            或“ DNS”主题。\r\n","Obtains the target of a hop in this route.":"在此路线中获得了跳跃的目标。\r\n","Provides a the parameters for an instance of a ":"提供了一个实例的参数\r\n","Returns whether this text node contains , often abusively called \"ignorable whitespace\".":"返回该文本节点是否包含，通常被称为“可忽略的空格”。\r\n","org.w3c.dom.UserDataHandler.NODE_CLONED":"org.w3c.dom.userdatahandler.node_cloned\r\n","\r\n            Supplies information about a touch event that is being raised.\r\n            ":"\r\n            提供有关正在提出的触摸事件的信息。\r\n            \r\n"," always return ":" 总是返回\r\n","java.util.concurrent.atomic.AtomicReferenceArray.set(int, java.lang.Object)":"java.util.concurrent.atomic.atomicreferencearray.set（int，java.lang.object）\r\n","A constant that represents the seconds field.":"代表秒字段的常数。\r\n","Unregisters the ":"解注册\r\n"," constraints.":" 约束。\r\n","java.util.zip.Deflater.getTotalOut()":"java.util.zip.deflater.getTotAlout（）\r\n","Returns the cipher algorithm parameter specification.":"返回密码算法参数规范。\r\n","java.util.zip.Inflater.getTotalIn()":"java.util.zip.inflater.gettotalin（）\r\n","\r\n            Creates a new JsonKeyClaimAction.\r\n            ":"\r\n            创建一个新的jsonkeyclaimaction。\r\n            \r\n","Represents a collection of HTTP protocol and framework parameters.":"表示HTTP协议和框架参数的集合。\r\n","Return an attribute's local name.":"返回属性的本地名称。\r\n","javax.xml.transform.sax.SAXResult.setHandler(org.xml.sax.ContentHandler)":"javax.xml.transform.sax.saxresult.sethandler（org.xml.sax.contenthandler）\r\n","if the property is not supported or can not be set\n":"如果不支持该属性或无法设置\r\n\r\n","QName":"qname\r\n","javax.crypto.BadPaddingException":"javax.crypto.badpaddingexception\r\n","\r\n            Retrieves an identity from the store for the given key.\r\n            ":"\r\n            从商店中检索给定键的身份。\r\n            \r\n","Indicates whether or not the factory is configured to produce parsers\n            which validate the XML content during parse. -or- Specifies that the parser produced by this factory will be validating\n            (it simply set feature XmlPullParser.":"指示工厂是否配置为生产解析器\r\n            在分析过程中验证XML含量。 - 或 - 指定该工厂生产的解析器将验证\r\n            （仅设置功能XMLPullParser。\r\n","The line number this locator is pointing to, or ":"该定位器指向的行号，或\r\n","If a <code>Node</code> is used in a different document than the one\n            that created it (that doesn't support it).":"如果一个<code>节点</code>在不同的文档中使用了\r\n            创建它（不支持它）。\r\n","java.util.logging.StreamHandler.StreamHandler()":"java.util.logging.streamhandler.streamhandler（）\r\n"," and the language exposed\n   through the Document does not support XML Namespaces (such as []).":" 和语言暴露\r\n   通过该文档不支持XML名称空间（例如[]）。\r\n","if the argument is negative or not less than\n  ":"如果论点为负或不超过\r\n  \r\n","Preferences#clear()":"首选项＃clear（）\r\n","initialDelay + period":"InitiaDelay +时期\r\n","java.util.logging.Handler.flush()":"java.util.logging.handler.flush（）\r\n","Acts as a holder for a transformation result tree in the form of a Document Object Model (DOM) tree.":"以文档对象模型（DOM）树的形式充当转换结果树的持有者。\r\n","If value is null.\n":"如果值为null。\r\n\r\n","javax.net.ssl.SSLEngine.setEnabledCipherSuites(java.lang.String[])":"javax.net.ssl.sslengine.setenabledciphersuites（java.lang.string []）\r\n"," maintains an object reference\n            along with a mark bit, that can be updated atomically.":" 维护对象参考\r\n            除了标记位，可以原子更新。\r\n","Use a DOM node to create a new output target specifying the child node where the result nodes should be inserted before.":"使用DOM节点创建一个新的输出目标，该目标指定儿童节点在此之前应插入结果节点。\r\n","javax.sql.RowSetMetaData.setSigned(int, boolean)":"javax.sql.RowsetMetadata.setsigned（int，boolean）\r\n","java.util.prefs.PreferenceChangeListener":"java.util.prefs.preferencechangelistener\r\n"," is shorter than 8 bytes.\n":" 比8个字节短。\r\n\r\n","java.util.concurrent.ScheduledThreadPoolExecutor":"java.util.concurrent.scheduledthreadpoolexecutor\r\n","`\r\n            Constructs an instance of ":"`\r\n            构建一个实例\r\n","The node is a <code>DocumentFragment</code>.":"节点是<code>文档范围</code>。\r\n"," to be used by parsers created\n            from this factory.":" 要创建的解析器使用\r\n            来自这个工厂。\r\n","org.xml.sax.helpers.XMLFilterImpl.parse(org.xml.sax.InputSource)":"org.xml.sax.helpers.xmlfilterimpl.parse（org.xml.sax.inputsource）\r\n","org.xml.sax.helpers.DefaultHandler.characters(char[], int, int)":"org.xml.sax.helpers.defaulthandler.Characters（char []，int，int）\r\n","org.xml.sax.helpers.ParserAdapter.setDocumentLocator(org.xml.sax.Locator)":"org.xml.sax.helpers.parseradapter.setDocumentLocator（org.xml.sax.locator）\r\n","if a key cannot be recovered.\n":"如果无法恢复键。\r\n\r\n","org.xmlpull.v1.XmlPullParser.isAttributeDefault(int)":"org.xmlpull.v1.xmlpullparser.isattributedefault（int）\r\n","Interface for opening ":"开放的接口\r\n"," values.\r\n            ":" 值。\r\n            \r\n","Time unit representing one second\n":"代表一秒钟的时间单元\r\n\r\n","javax.net.ssl.SSLParameters.setAlgorithmConstraints(java.security.AlgorithmConstraints)":"javax.net.ssl.sslparameters.setalgorithmconstraints（java.security.algorithmconstraints）\r\n","if n is not positive\n":"如果n不是积极的\r\n\r\n","RFC 2253 String format of Distinguished Names.":"RFC 2253杰出名称的字符串格式。\r\n","org.xml.sax.ext.DeclHandler.attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.ext.declhandler.attribedecl（java.lang.string，java.lang.string，java.lang.string，java.lang.string，java.lang.lang.lang.string）\r\n","ScheduledThreadPoolExecutor":"SendiuledThreadPoolExecutor\r\n","A collection of utilities for ":"用于公用事业的集合\r\n","org.json.JSONArray.toString(int)":"org.json.jsonarray.tostring（int）\r\n","423 Locked":"423锁定\r\n","java.util.logging.Handler.Handler()":"java.util.logging.handler.handler（）\r\n","Overwrites the first header with the same name.":"用相同名称覆盖第一个标头。\r\n","javax.xml.parsers.SAXParserFactory.setValidating(boolean)":"javax.xml.parsers.saxparserfactory.setvalidating（boolean）\r\n","Returns a new CompletionStage that, when either this or the\n            other given stage complete normally, is executed with the\n            corresponding result as argument to the supplied action.":"返回一个新的完整舞台，当\r\n            其他给定的阶段正常完成，用\r\n            相应的结果作为参数与所提供的动作。\r\n","Returns the effective key size in bits.":"返回位的有效钥匙尺寸。\r\n","The extension of ":"扩展\r\n","if the given key's length is bigger than ":"如果给定的密钥的长度大于\r\n","Signals that an HTTP protocol violation has occurred.":"信号表明发生了HTTP协议违规。\r\n","org.xml.sax.helpers.LocatorImpl.setLineNumber(int)":"org.xml.sax.helpers.locatorimpl.setlinenumber（int）\r\n","java.util.zip.ZipOutputStream.DEFLATED":"java.util.zip.zipoutputstream.deflated\r\n","An interface that must be implemented by a\n            component that wants to be notified when a significant\n            event happens in the life of a <code>RowSet</code> object.":"必须由\r\n            有重要的成分希望在重要的情况下通知\r\n            事件发生在<code> rowset </code>对象的生命中。\r\n","javax.crypto.KeyGenerator.KeyGenerator(javax.crypto.KeyGeneratorSpi, java.security.Provider, java.lang.String)":"javax.crypto.keygenerator.keygenerator（javax.crypto.keygeneratorspi，java.security.provider，java.lang.string）\r\n","A random number generator isolated to the current thread.":"一个随机数生成器隔离到当前线程。\r\n","Returns an exception containing the given message plus the current\n            position and the entire input string.":"返回包含给定消息加上当前的异常\r\n            位置和整个输入字符串。\r\n","java.util.concurrent.locks.StampedLock.tryUnlockWrite()":"java.util.concurrent.locks.stampedlock.tryunlockwrite（）\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryAcquireShared(long)":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.tryacquireshared（long）\r\n","\r\n            Constructs a new component of the specified type.\r\n            ":"\r\n            构建指定类型的新组件。\r\n            \r\n","org.xmlpull.v1.XmlPullParser.next()":"org.xmlpull.v1.xmlpullparser.next（）\r\n","org.json.JSONTokener.JSONTokener(java.lang.String)":"org.json.jsontokener.jsontokener（java.lang.string）\r\n","javax.crypto.AEADBadTagException.AEADBadTagException(java.lang.String)":"javax.crypto.aeadbadtagexception.aeadbadtagexception（java.lang.string）\r\n","javax.crypto.ExemptionMechanismSpi":"Javax.Crypto.ExemptionMechanismspi\r\n","Canonical String format of Distinguished Names.":"杰出名称的规范字符串格式。\r\n","org.xml.sax.InputSource.getEncoding()":"org.xml.sax.inputsource.getencoding（）\r\n","Set the value of a parameter.":"设置参数的值。\r\n","org.json.JSONObject":"org.json.jsonobject\r\n","\r\n            Supplies information about an clipboard event that is being raised.\r\n            ":"\r\n            提供有关正在提出的剪贴板事件的信息。\r\n            \r\n"," that produces the arithmetic mean of an integer-valued\n            function applied to the input elements.":" 产生整数值的算术平均值\r\n            应用于输入元素的功能。\r\n","Report the beginning of some internal and external XML entities.":"报告一些内部和外部XML实体的开始。\r\n","Disables the current thread for thread scheduling purposes unless the\n            permit is available.":"禁用当前线程以进行线程调度目的，除非\r\n            许可证可用。\r\n","Step: tunnel through proxy to target.":"步骤：通过代理到目标的隧道。\r\n","Invalidates the session.":"会话无效。\r\n"," to the default path.\r\n            ":" 到默认路径。\r\n            \r\n","java.util.logging.Logger.setParent(java.util.logging.Logger)":"java.util.logging.logger.setparent（java.util.logging.logger）\r\n","Returns the salt or null if not specified.":"如果未指定，则返回盐或零。\r\n","java.util.jar.JarEntry.getAttributes()":"java.util.jar.jarentry.getAttributes（）\r\n","org.w3c.dom.Document.createTextNode(java.lang.String)":"org.w3c.dom.document.CreateTextNode（java.lang.string）\r\n","The driver calls this method on all <code>StatementEventListener</code>s\n            registered on the connection when it detects that a\n            <code>PreparedStatement</code> is invalid.":"驱动程序在所有<code>语句EventListener </code> s上调用此方法\r\n            当连接检测到一个连接时注册\r\n            <code>准备的statement </code>无效。\r\n","java.util.prefs.AbstractPreferences.getByteArray(java.lang.String, byte[])":"java.util.prefs.abstractpreferences.getbytearray（java.lang.string，byte []）\r\n","java.util.function.ObjLongConsumer":"java.util.function.objlong​​consumer\r\n","Creates a KeyManagerFactory object.":"创建一个KeymanagerFactory对象。\r\n"," represents the result of an asynchronous\n            computation.":" 代表异步的结果\r\n            计算。\r\n"," is not a child of ":" 不是一个孩子\r\n","Creates a new AtomicReferenceArray with the same length as, and\n            all elements copied from, the given array.":"创建一个具有与之相同长度的新的原子ReferenCearray和\r\n            从给定的数组复制的所有元素。\r\n"," supporting similar\n            semantics to ":" 支持类似\r\n            语义为\r\n","org.apache.http.conn.ssl.AbstractVerifier.countDots(java.lang.String)":"org.apache.http.conn.ssl.abstractverifier.countdots（java.lang.string）\r\n","\r\n            A value indicating whether there is unread data remaining.\r\n            ":"\r\n            表示是否剩下未读数据的值。\r\n            \r\n"," object is used to hold the data that is being dragged during a drag and drop operation.\r\n            It may hold one or more ":" 对象用于保存在拖放操作过程中正在拖动的数据。\r\n            它可能持有一个或多个\r\n","java.util.concurrent.ThreadFactory":"java.util.concurrent.threadFactory\r\n","javax.xml.parsers.DocumentBuilderFactory.setFeature(java.lang.String, boolean)":"javax.xml.parsers.documentbuilderfactory.setFateR（java.lang.string，boolean）\r\n","javax.xml.datatype.Duration.hashCode()":"javax.xml.datatype.duration.hashcode（）\r\n","Signals an error in the HTTP protocol.":"在HTTP协议中发出错误。\r\n","java.util.zip.ZipFile.ZipFile(java.lang.String)":"java.util.zip.zipfile.zipfile（java.lang.string）\r\n","java.util.stream.Collectors.averagingLong(java.util.function.ToLongFunction)":"java.util.stream.collectors.averaginglong（java.util.function.tolongfunction）\r\n","if an error occurs while determining whether the result blob\n             has been generated successfully.\n":"如果在确定结果斑点时发生错误\r\n             已成功生成。\r\n\r\n","Guesses the length of a formatted protocol version.":"猜测格式的协议版本的长度。\r\n","BlockingQueue#offer(Object,long,TimeUnit) BlockingQueue.offer":"blockingqueue＃offer（对象，长，timeunit）blockingqueue。\r\n"," once an object has been safely destroyed.":" 一旦对象被安全销毁。\r\n","java.util.zip.Deflater.end()":"java.util.zip.deflater.end（）\r\n","The home for utility methods that handle various encoding tasks.":"处理各种编码任务的实用方法的房屋。\r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            to the given input stream.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            到给定的输入流。\r\n","org.apache.http.params.HttpParams.getDoubleParameter(java.lang.String, double)":"org.apache.http.params.httpparams.getDoubleParameter（java.lang.String，double）\r\n","Obtain new instance of a class that implements Unpacker.":"获取实现Undacker的类的新实例。\r\n",".\r\n            This is typically specified via ":"。\r\n            这通常是通过\r\n","javax.net.ssl.KeyManagerFactory.getInstance(java.lang.String)":"javax.net.ssl.keymanagerfactory.getinstance（java.lang.string）\r\n","if the size of the key cannot be determined by this\n             implementation.\n":"如果钥匙的大小不能由此确定\r\n             执行。\r\n\r\n","java.util.logging.StreamHandler.setOutputStream(java.io.OutputStream)":"java.util.logging.streamhandler.setOutputstream（java.io.outputstream）\r\n","javax.xml.transform.sax.SAXTransformerFactory.newXMLFilter(javax.xml.transform.Templates)":"javax.xml.transform.sax.saxtransformerfactory.newxmlfilter（javax.xml.transform.templates）\r\n","\r\n            If true, the cookie will be renewed\r\n            ":"\r\n            如果是真的，cookie将被更新\r\n            \r\n","org.w3c.dom.ls.DOMImplementationLS.createLSOutput()":"org.w3c.dom.ls.domimplementationls.createlsoutput（）\r\n","When the\n            parent recognizes the feature name but\n            cannot set the requested value.\n":"当。。。的时候\r\n            父母识别功能名称，但是\r\n            无法设置请求的值。\r\n\r\n","The client may throw\n            an exception during processing.\n":"客户可能会投掷\r\n            处理过程中的例外。\r\n\r\n","CRC-32 of uncompressed data.":"未压缩数据的CRC-32。\r\n","Returns the prime modulus <code>p</code>.":"返回Prime Modulus <code> P </code>。\r\n"," are negative.\n":" 负面。\r\n\r\n","java.util.concurrent.Phaser.awaitAdvance(int)":"java.util.concurrent.phaser.awaitvance（int）\r\n","java.util.zip.InflaterOutputStream.buf":"java.util.zip.inflateroutputstream.buf\r\n","certData":"certdata\r\n"," after a narrowing\n            primitive conversion.":" 狭窄后\r\n            原始转换。\r\n","#NSDECL NSDECL":"#NSDECL NSDECL\r\n","Method invoked prior to executing the given Runnable in the\n            given thread.":"在执行给定的可运行之前，调用的方法\r\n            给定线程。\r\n",",\r\n            or any of the other MsgPack integer types.\r\n            ":"，，，，\r\n            或其他任何MSGPACK整数类型。\r\n            \r\n","javax.net.ssl.SSLServerSocketFactory.getSupportedCipherSuites()":"javax.net.ssl.sslserversocketFactory.getSupportedCiphersuites（）\r\n","Non-exclusively acquires the lock if it is available within the\n            given time and the current thread has not been interrupted.":"如果锁可以在\r\n            给定时间和当前线程尚未中断。\r\n","org.xmlpull.v1.XmlPullParserFactory.newSerializer()":"org.xmlpull.v1.xmlpullparserfactory.newserializer（）\r\n","Gets the SSL socket factory to be used when creating sockets\n            for secure https URL connections. -or- Sets the <code>SSLSocketFactory</code> to be used when this instance\n            creates sockets for secure https URL connections.":"创建插座时，请使用SSL插座工厂\r\n            用于安全的HTTPS URL连接。 - 或 - 设置此实例时要使用的<code> sslsocketFactory </code>\r\n            为安全的HTTPS URL连接创建插座。\r\n","javax.net.ssl.SSLParameters.setSNIMatchers(java.util.Collection)":"javax.net.ssl.sslparameters.setsnimatchers（java.util.collection）\r\n","Sets the charset to be used for writing HTTP headers.":"设置用于编写HTTP标头的字符集。\r\n","\r\n            Gets the span to the bytes written if they were never committed to the underlying buffer writer.\r\n            ":"\r\n            如果从未致力于基础的缓冲作者，则获取写入字节的跨度。\r\n            \r\n","javax.crypto.CipherSpi.engineGetParameters()":"javax.crypto.cipherspi.enginegetparameters（）\r\n","Defines whether relative redirects should be rejected.":"定义是否应拒绝相对重定向。\r\n","\r\n            Gets the attribute name.\r\n            ":"\r\n            获取属性名称。\r\n            \r\n","java.util.concurrent.locks.StampedLock.tryConvertToOptimisticRead(long)":"java.util.concurrent.locks.stampedlock.tryconverttooptimisticread（长）\r\n","The <code>JarOutputStream</code> class is used to write the contents\n            of a JAR file to any output stream.":"<code> jaroutputstream </code>类用于编写内容\r\n            jar文件到任何输出流。\r\n","java.util.regex.Pattern.flags()":"java.util.regex.pattern.flags（）\r\n","Returns the protocol name of this <code>SSLContext</code> object.":"返回此<code> sslContext </code>对象的协议名称。\r\n","\r\n            Used to determine if a handler supports SignIn.\r\n            ":"\r\n            用于确定处理程序是否支持标志。\r\n            \r\n"," with the specified fairness policy.":" 具有指定的公平政策。\r\n","The Manifest class is used to maintain Manifest entry names and their\n            associated Attributes.":"清单类用于维护清单入口名称及其\r\n            关联的属性。\r\n","\r\n            This is separate from the value of ":"\r\n            这与价值分开\r\n","javax.net.ssl.SSLPermission":"javax.net.ssl.sslpermission\r\n","Represents an operation on a single operand that produces a result of the\n            same type as its operand.":"代表单个操作数的操作，该操作数产生的结果\r\n            与操作数相同的类型。\r\n","\r\n            Infrastructure for mapping user data from a json structure to claims on the ClaimsIdentity.\r\n            ":"\r\n            从JSON结构映射用​​户数据的基础架构，以索赔索赔。\r\n            \r\n","java.util.concurrent.CompletionStage.whenComplete(java.util.function.BiConsumer)":"java.util.concurrent.completionstage.whencomplete（java.util.function.biconsumer）\r\n","Returns a copy of this object":"返回此对象的副本\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.setState(long)":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.setstate（long）\r\n","Specification-Vendor":"规范供应商\r\n","\r\n            Get the reassembled cookie. Non chunked cookies are returned normally.\r\n            Cookies with missing chunks just have their \"chunks-XX\" header returned.\r\n            ":"\r\n            获取重新组装的曲奇。非块饼干正常返回。\r\n            缺少块的饼干只有他们的“块-xx”标头返回。\r\n            \r\n","javax.crypto.CipherSpi.engineUpdate(java.nio.ByteBuffer, java.nio.ByteBuffer)":"javax.crypto.cipherspi.engineupdate（java.nio.bytebuffer，java.nio.bytebuffer）\r\n","java.util.zip.CheckedInputStream.CheckedInputStream(java.io.InputStream, java.util.zip.Checksum)":"java.util.zip.checkedinputstream.checkedinputstream（java.io.inputstream，java.util.zip.checksum）\r\n","\r\n            Move the reader ahead the specified number of items.\r\n            ":"\r\n            将读者移到指定的项目数。\r\n            \r\n","java.util.concurrent.atomic.AtomicBoolean.lazySet(boolean)":"java.util.concurrent.atomic.atomicboolean.lazyset（布尔值）\r\n"," if it exists, coercing it if\n            necessary, or throws if no such mapping exists.":" 如果存在，请强迫它\r\n            必要的，或者如果不存在此类映射。\r\n","ThreadLocalRandom":"线程倾斜\r\n","The column number of the end of the text where the exception occurred.":"发生异常的文本末端的列号。\r\n","\r\n            Gets the uri to which navigation was attempted.\r\n            ":"\r\n            获取尝试导航的URI。\r\n            \r\n","\r\n            Enables or disables the use of the Proof Key for Code Exchange (PKCE) standard. See https://tools.ietf.org/html/rfc7636.\r\n            The default value is `false` but derived handlers should enable this if their provider supports it.\r\n            ":"\r\n            启用或禁用用于代码交换（PKCE）标准的证明键的使用。请参阅https://tools.ietf.org/html/rfc7636。\r\n            默认值为“ false”，但派生的处理程序应在其提供者支持的情况下启用这一点。\r\n            \r\n","java.util.logging.Logger.getAnonymousLogger()":"java.util.logging.logger.getAnonymouslogger（）\r\n","Queries whether any threads are waiting on the given condition\n            associated with this lock.":"查询是否有任何线程在给定条件下等待\r\n            与此锁相关。\r\n","A client-side connection with advanced connection logic.":"具有高级连接逻辑的客户端连接。\r\n","java.util.concurrent.atomic.AtomicInteger.AtomicInteger()":"java.util.concurrent.atomic.atomicinteger.atomicinteger（）\r\n","Sets the designated parameter in this <code>RowSet</code> object's SQL\n            command to SQL <code>NULL</code>.":"在此<code> Rowset </code>对象的SQL中设置指定参数\r\n            命令到sql <code> null </code>。\r\n","Removes a node specified by local name and namespace URI.":"删除由本地名称和名称空间URI指定的节点。\r\n","Returns the next character that is not whitespace and does not belong to\n            a comment.":"返回下一个不属于空格的字符，不属于\r\n            一条评论。\r\n"," that is already an attribute of another\n   ":" 那已经是另一个的属性\r\n   \r\n","java.util.concurrent.atomic.AtomicReferenceFieldUpdater.lazySet(java.lang.Object, java.lang.Object)":"java.util.concurrent.atomic.atomicreference fieldupdater.lazyset（java.lang.object，java.lang.object）\r\n","java.util.zip.ZipFile.size()":"java.util.zip.zipfile.size（）\r\n"," in\n   this map.\n   ":" 在\r\n   这张地图。\r\n   \r\n","javax.sql.RowSet.setTime(java.lang.String, java.sql.Time, java.util.Calendar)":"javax.sql.Rowset.settime（java.lang.string，java.sql.time，java.util.calendar）\r\n","javax.net.ssl.SSLSocket.SSLSocket()":"javax.net.ssl.sslsocket.sslsocket（）\r\n","Creates the default SSL socket factory.":"创建默认的SSL套接字工厂。\r\n","DEFLATED":"瘪\r\n","Sets the designated column's normal maximum width in chars to the\n            given <code>int</code>.":"将指定列的正常最大宽度设置为字符\r\n            给定<code> int </code>。\r\n","\r\n            When a client disconnects, ASP.NET Core Components attempts to retain state on the server for an\r\n            interval. This allows the client to re-establish a connection to the existing circuit on the server\r\n            without losing any state in the event of transient connection issues.\r\n            ":"\r\n            当客户端断开连接时，ASP.NET核心组件试图保留服务器上的状态\r\n            间隔。这允许客户端重新建立与服务器上现有电路的连接\r\n            在瞬态连接问题的情况下，不会失去任何状态。\r\n            \r\n","Layered socket factory for TLS/SSL connections, based on JSSE.":"基于JSSE的TLS/SSL连接的分层套接字工厂。\r\n","if the specified host is not known.\n":"如果指定的主机尚不清楚。\r\n\r\n","\r\n            Gets the event's ability to stop propagation.\r\n            ":"\r\n            获得事件停止传播的能力。\r\n            \r\n","Get the XMLReader to be used for the Source. -or- Set the XMLReader to be used for the Source.":"将XMLReader用于源。 - 或 - 设置用于源的XMLReader。\r\n","java.util.concurrent.Semaphore.release(int)":"java.util.concurrent.semaphore.Release（int）\r\n","javax.xml.XMLConstants.XML_NS_URI":"javax.xml.xmlconstants.xml_ns_uri\r\n","Creates a new output stream with a default decompressor and buffer\n            size.":"使用默认的解压器和缓冲区创建新的输出流\r\n            尺寸。\r\n","Receive a Locator object for document events.":"接收用于文档事件的定位对象。\r\n","Returns a new object whose values are the values in this array, and whose\n            names are the values in ":"返回一个新对象，其值是该数组中的值，以及\r\n            名称是中的值\r\n","java.util.concurrent.Future.cancel(boolean)":"java.util.concurrent.future.cancel（boolean）\r\n","Associates the specified value with the specified attribute name,\n            specified as a String.":"将指定值与指定属性名称相关联\r\n            指定为字符串。\r\n","Registers the specified listener to receive ":"注册指定的听众接收\r\n","setExclusiveOwnerThread":"setExclusiveWownerThread\r\n","java.util.logging.LogRecord.getParameters()":"java.util.logging.logrecord.getParameters（）\r\n","This method is called on the error handler when an error occurs.":"发生错误时，在错误处理程序上调用此方法。\r\n","Node":"节点\r\n","Obtain a new instance of a <code>Duration</code>\n            specifying the <code>Duration</code> as isPositive, years, months, days, hours, minutes, seconds.":"获取<code>持续时间</code>的新实例\r\n            指定<code>持续时间</code>为等值，年，几个月，天，小时，分钟，秒。\r\n","Signals that authentication challenge is in some way invalid or \n illegal in the given context":"信号表明身份验证挑战在某种程度上无效或\r\n 在给定背景下非法\r\n","java.util.function.IntToDoubleFunction":"java.util.function.inttodoublefunction\r\n","javax.sql.RowSetInternal.getParams()":"javax.sql.RowsetInternal.getParams（）\r\n","javax.net.ssl.SSLSocket.getHandshakeApplicationProtocolSelector()":"javax.net.ssl.sslsocket.gethandshakeapplicationprotocococococolector（）\r\n","\r\n            Extension methods for setting up authentication services in an ":"\r\n            用于在\r\n","java.util.concurrent.locks.ReentrantReadWriteLock.getOwner()":"java.util.concurrent.locks.reentrantreadwritelock.getowner（）\r\n","Get the base ID (URI or system ID) from where URIs\n            will be resolved. -or- Set the system identifier for this Source.":"从uris获取基本ID（URI或系统ID）\r\n            将解决。 - 或 - 设置此源的系统标识符。\r\n","Creates a new output stream with the specified decompressor and\n            buffer size.":"使用指定的解压器和\r\n            缓冲区大小。\r\n","NOT_SUPPORTED_ERR: Raised if this document does not support the\n   \"XML\" feature.":"not_supported_err：如果此文档不支持该文档\r\n   “ XML”功能。\r\n","Checks whether this connection has gone down.":"检查此连接是否已经下降。\r\n","\r\n            Override this method to deal with 401 challenge concerns, if an authentication scheme in question\r\n            deals an authentication interaction as part of it's request flow. (like adding a response header, or\r\n            changing the 401 result to 302 of a login page or external sign-in location.)\r\n            ":"\r\n            如果有问题的身份验证方案\r\n            作为请求流的一部分，处理身份验证交互。 （例如添加响应标头或\r\n            将401结果更改为登录页面或外部登录位置的302。）\r\n            \r\n","in case of an IO problem\n                                     or if the connection was aborted\n":"如果有IO问题\r\n                                     或连接中止\r\n\r\n","ErrorManager":"错误的人\r\n","Resets this matcher.":"重置此匹配器。\r\n","\r\n            A Server-Side Blazor implementation of ":"\r\n            服务器端的外汇实施\r\n","java.util.jar.Attributes.map":"java.util.jar.attributes.map\r\n","Get the current DTD event handler. -or- Set the DTD event handler.":"获取当前的DTD事件处理程序。 - 或设置DTD事件处理程序。\r\n"," and EOF.":" 和eof。\r\n","Resets the checksum to initial value.":"将校验和重置为初始值。\r\n","Creates an attribute of the given qualified name and namespace URI.":"创建给定合格名称和名称空间URI的属性。\r\n","A reentrant mutual exclusion ":"重进入的相互排斥\r\n","The name of a type declared for the associated element or attribute,\n or ":"相关元素或属性声明的类型名称，\r\n 或者\r\n","org.xml.sax.helpers.NamespaceSupport.getPrefixes(java.lang.String)":"org.xml.sax.helpers.namespacesupport.getPrefixes（java.lang.string）\r\n","\r\n            Gets the value being supplied for the parameter.\r\n            ":"\r\n            获取为参数提供的值。\r\n            \r\n","org.xml.sax.XMLReader.setProperty(java.lang.String, java.lang.Object)":"org.xml.sax.xmlreader.setProperty（java.lang.string，java.lang.object）\r\n","If verification failed.\n":"如果验证失败。\r\n\r\n","\r\n            Extension method for SignOut.\r\n            ":"\r\n            签名的扩展方法。\r\n            \r\n","\r\n            Allows a component to interact with its renderer.\r\n            ":"\r\n            允许组件与其渲染器交互。\r\n            \r\n","The type of element stored by the sequence.":"序列存储的元素类型。\r\n","org.json.JSONTokener.nextString(char)":"org.json.jsontokener.nextstring（char）\r\n"," attribute defining the organization\n that maintains the extension implementation.":" 属性定义组织\r\n 维持扩展实现。\r\n","\r\n            Deletes the cookie with the given key by setting an expired state. If a matching chunked cookie exists on\r\n            the request, delete each chunk.\r\n            ":"\r\n            通过设置过期的状态，用给定键删除cookie。如果存在匹配的曲奇\r\n            请求，删除每个块。\r\n            \r\n","HTTP header definitions ":"HTTP标头定义\r\n","The node immediately preceding this node.":"该节点之前的节点。\r\n","\n parameter value.":"\r\n 参数值。\r\n","Returns the names of the protocols which could be enabled for use\n            with this <code>SSLEngine</code>.":"返回可以使用的协议的名称\r\n            使用此<code> sslengine </code>。\r\n","javax.xml.transform.TransformerFactory.getFeature(java.lang.String)":"javax.xml.transform.transformerfactory.getFeature（java.lang.string）\r\n","This class specifies the set of parameters used with OAEP Padding,\n            as defined in the\n            <a href=\"http://www.":"此类指定与OAEP填充一起使用的一组参数，\r\n            如在\r\n            <a href =“ http：//www。\r\n","\r\n            Infrastructure class which allows an ":"\r\n            基础架构类，允许\r\n","Returns whether new SSL sessions may be established by this engine.":"返回该引擎是否可以建立新的SSL会话。\r\n","Default base class for handlers.":"处理程序的默认基类。\r\n","\r\n            Releases all resources currently used by this ":"\r\n            发布当前使用的所有资源\r\n","\r\n            Indicates that the associated property should have a value injected from the\r\n            service provider during initialization.\r\n            ":"\r\n            表示关联属性应具有从\r\n            初始化期间服务提供商。\r\n            \r\n","Removes all request interceptor of the specified class":"删除指定类的所有请求拦截器\r\n","javax.xml.datatype.Duration":"javax.xml.datatype.duration\r\n","\r\n            If the ":"\r\n            如果是\r\n","java.util.concurrent.Phaser.arriveAndAwaitAdvance()":"java.util.concurrent.phaser.arriveandawaitvance（）\r\n","#convert(long, TimeUnit) SECONDS.convert(duration, this)":"#convert（long，timeunit）seconds.convert（持续时间，此）\r\n","Returns if the specified attribute was not in input was declared in XML.":"如果在XML中声明了指定的属性，则返回。\r\n","org.w3c.dom.Node.getUserData(java.lang.String)":"org.w3c.dom.node.getuserdata（java.lang.string）\r\n","java.util.zip.Inflater.getBytesRead()":"java.util.zip.inflater.getBytesRead（）\r\n","Acquires in exclusive mode, aborting if interrupted.":"在独家模式下获取，如果中断会中断。\r\n","LSParser":"LSPARSER\r\n","A string constant for unavailable information.":"一个字符串常数，用于不可用的信息。\r\n","Initializes this key agreement with the given key, which is required to\n            contain all the algorithm parameters required for this key agreement.":"用给定键初始化此密钥协议，这是必需的\r\n            包含此密钥协议所需的所有算法参数。\r\n","\r\n            Reads an extension format header, based on one of these codes:\r\n            ":"\r\n            根据以下代码之一读取扩展格式标头：\r\n            \r\n","Reset this <code>XMLGregorianCalendar</code> to its original values.":"将此<code> xmlgregoriancalendar </code>重置为其原始值。\r\n","Clears both interceptor lists maintained by this processor.":"清除该处理器​​维护的两个拦截器列表。\r\n",", Namespace name URI.":"，名称名称URI。\r\n","Returns an estimate of the number of threads waiting on the\n            given condition associated with this lock.":"返回估计等待的线程数的估计值\r\n            给定与此锁相关的条件。\r\n","Eventually sets to the given value.":"最终设置为给定值。\r\n","Constructs an IllegalBlockSizeException with the specified\n            detail message.":"用指定的\r\n            详细信息。\r\n","org.json.JSONStringer.value(double)":"org.json.jsonstringer.value（double）\r\n","org.xml.sax.Parser.setErrorHandler(org.xml.sax.ErrorHandler)":"org.xml.sax.parser.seterrorhandler（org.xml.sax.errorhandler）\r\n","The XPath 1.":"XPATH 1。\r\n","java.util.logging.Logger.setUseParentHandlers(boolean)":"java.util.logging.logger.setuseparenthandlers（boolean）\r\n","Creates a new output stream with the specified compressor, flush\n            mode and a default buffer size.":"使用指定的压缩机（齐平）创建一个新的输出流\r\n            模式和默认缓冲区大小。\r\n","org.xml.sax.Attributes.getValue(java.lang.String)":"org.xml.sax.attributes.getValue（java.lang.string）\r\n"," has a prefix and the\n   ":" 有一个前缀和\r\n   \r\n","Initializes this cipher with a key and a source\n            of randomness.":"用键和源初始化此密码\r\n            随机性。\r\n","java.util.concurrent.Semaphore":"java.util.concurrent.semaphore\r\n","Compression method for uncompressed (STORED) entries.":"未压缩（存储）条目的压缩方法。\r\n","Receive notification of the beginning of the document.":"收到文档开头的通知。\r\n","java.util.zip.ZipEntry.setLastModifiedTime(java.nio.file.attribute.FileTime)":"java.util.zip.zipentry.setlastmodified时间（java.nio.file.attribute.filtime）\r\n","The ALLOW_ALL HostnameVerifier essentially turns hostname verification\n            off.":"ally_all主机名基本上转动主机名验证\r\n            离开。\r\n","javax.xml.datatype.Duration.normalizeWith(java.util.Calendar)":"javax.xml.datatype.duration.normalizewith（java.util.calendar）\r\n","Compression level for no compression.":"压缩水平无压缩。\r\n"," structure describing the current contents.\r\n            ":" 描述当前内容的结构。\r\n            \r\n","java.util.logging.LogRecord.LogRecord(java.util.logging.Level, java.lang.String)":"java.util.logging.logrocord.logrocord（java.util.logging.level，java.lang.string）\r\n","Returns the start index of the subsequence captured by the given\n            <a href=\"Pattern.":"返回给定的子序列的开始索引\r\n            <a href =“模式。\r\n","javax.net.ssl.SSLContext.getDefault()":"javax.net.ssl.sslcontext.getDefault（）\r\n","javax.xml.xpath.XPath.evaluate(java.lang.String, java.lang.Object, javax.xml.namespace.QName)":"javax.xml.xpath.xpath.evaluate（java.lang.string，java.lang.Object，javax.xml.namespace.qname）\r\n","Awaits the phase of this phaser to advance from the given phase\n            value or the given timeout to elapse, throwing ":"等待此移位器的阶段从给定阶段前进\r\n            价值或给定的超时，投掷\r\n","Returns the algorithm name of this <code>SecretKeyFactory</code> object.":"返回此<code> SecretKeyFactory </code>对象的算法名称。\r\n","The constructor with the fully qualified username and password combined \n string argument.":"具有完全合格的用户名和密码组合的构造函数\r\n 字符串参数。\r\n","\r\n            Contains a list of all the local files available on the data transfer.\r\n            If the drag operation doesn't involve dragging files, this property is an empty list.\r\n            ":"\r\n            包含数据传输中所有可用的本地文件的列表。\r\n            如果拖放操作不涉及拖动文件，则此属性是一个空列表。\r\n            \r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.isQueued(java.lang.Thread)":"java.util.concurrent.locks.abstractqueuedlongsynchronizer。\r\n","java.util.zip.Inflater.getBytesWritten()":"java.util.zip.inflater.getBytesWritten（）\r\n","Returns one key manager for each type of key material.":"为每种类型的关键材料返回一个密钥管理器。\r\n","if array is null\n":"如果数组为null\r\n\r\n","javax.crypto.spec.DESedeKeySpec.DES_EDE_KEY_LEN":"javax.crypto.spec.desedekeyspec.des_ede_key_len\r\n","Returns a new CompletionStage that, when this stage completes\n            normally, is executed with this stage's result as the argument\n            to the supplied function.":"返回一个新的完整舞台，当这个阶段完成时\r\n            通常，以这个阶段的结果为执行\r\n            到提供的功能。\r\n"," do not specify an\n             valid chunk in the input buffer.\n":" 不要指定\r\n             输入缓冲区中的有效块。\r\n\r\n","java.util.function.IntPredicate.and(java.util.function.IntPredicate)":"java.util.function.intpredicate.and（java.util.function.intpredicate）\r\n","Creates a new AtomicLongArray of the given length, with all\n            elements initially zero.":"创建一个给定长度的新的原子段\r\n            元素最初为零。\r\n","Atomically increments by one the current value of the field of the\n            given object managed by this updater.":"在原子上增加一个字段的当前值\r\n            给定该更新程序管理的对象。\r\n","java.util.function.DoublePredicate.or(java.util.function.DoublePredicate)":"java.util.function.doublepredicate.or（java.util.function.doublepredicate）\r\n","Initializes this key agreement with the given key and source of\n            randomness.":"用给定的密钥和来源初始化此密钥协议\r\n            随机性。\r\n","org.xmlpull.v1.XmlPullParser.getNamespaceCount(int)":"org.xmlpull.v1.xmlpullparser.getnamespaceceent（int）\r\n","Defines parameter names for protocol execution in HttpCore.":"在HTTPCORE中定义协议执行的参数名称。\r\n"," containing the elements\n            in the specified collection.":" 包含元素\r\n            在指定的集合中。\r\n"," in\n            which synchronization state is maintained as a ":" 在\r\n            哪个同步状态保持为\r\n","org.w3c.dom.Node.DOCUMENT_FRAGMENT_NODE":"org.w3c.dom.node.document_fragment_node\r\n","javax.net.ssl.SSLProtocolException":"javax.net.ssl.sslprotocolexception\r\n","javax.xml.parsers.SAXParserFactory.newInstance()":"javax.xml.parsers.saxparserfactory.newinstance（）\r\n","org.w3c.dom.Document.createElementNS(java.lang.String, java.lang.String)":"org.w3c.dom.document.createelementns（java.lang.string，java.lang.string）\r\n","javax.xml.datatype.DatatypeConstants.FIELD_UNDEFINED":"javax.xml.datatype.datatypeconstants.field_undefined\r\n","java.util.prefs.AbstractPreferences.putFloat(java.lang.String, float)":"java.util.prefs.abstractpreferences.putfloat（java.lang.string，float）\r\n","Obtains the Content-Encoding header.":"获取内容编码标头。\r\n","javax.crypto.ExemptionMechanism.getInstance(java.lang.String, java.lang.String)":"javax.crypto.ExemptionMechanism.GetInstance（java.lang.string，java.lang.string）\r\n","javax.crypto.SecretKeyFactorySpi.engineGetKeySpec(javax.crypto.SecretKey, java.lang.Class)":"javax.crypto.secretkeyfactoryspi.enginegetekeyspec（javax.crypto.secretkey，java.lang.lang.class）\r\n","org.xml.sax.helpers.XMLFilterImpl.ignorableWhitespace(char[], int, int)":"org.xml.sax.helpers.xmlfilterimpl.ignorablewhitespace（char []，int，int）\r\n","if the serialization fails.":"如果序列化失败。\r\n","Indicates whether or not the factory is configured to produce\n            parsers which ignores comments. -or- Specifies that the parser produced by this code will\n            ignore comments.":"指示工厂是否配置为生产\r\n            解析器忽略评论。 - 或 - 指定该代码产生的解析器将\r\n            忽略评论。\r\n","Attempts to decode SSL/TLS network data into a sequence of plaintext\n            application data buffers.":"尝试将SSL/TLS网络数据解码为明文序列\r\n            应用程序数据缓冲区。\r\n","remove a listener.":"删除听众。\r\n","Returns the names of the protocol versions which are currently\n            enabled for use on this connection.":"返回当前的协议版本的名称\r\n            已启用用于此连接。\r\n","javax.xml.parsers.SAXParserFactory.setXIncludeAware(boolean)":"javax.xml.parsers.saxparserfactory.setxincludeaware（boolean）\r\n"," services that receive an\r\n            authentication state from the host environment, and revalidate it at regular intervals.\r\n            ":" 接收的服务\r\n            从主机环境进行身份验证状态，并定期重新验证其。\r\n            \r\n","Sets the particular feature in the underlying implementation of\n            org.":"在基础实施中设置特定功能\r\n            org。\r\n","Log a lazily constructed message, specifying source class and method,\n            with associated Throwable information.":"记录懒惰的消息，指定源类和方法，\r\n            使用相关的可投掷信息。\r\n","javax.sql.RowSet.setNString(int, java.lang.String)":"javax.sql.Rowset.setnstring（int，java.lang.string）\r\n","java.util.concurrent.atomic.AtomicStampedReference.compareAndSet(java.lang.Object, java.lang.Object, int, int)":"java.util.concurrent.atomic.atomicstampedreference.com pareandset（java.lang.object，java.lang.object，int，int）\r\n","org.json.JSONObject.isNull(java.lang.String)":"org.json.jsonobject.isnull（java.lang.string）\r\n","\r\n            Invoked when a new circuit is being discarded.\r\n            ":"\r\n            当丢弃新电路时被调用。\r\n            \r\n","Get an object that will be used to resolve URIs used in\n document().":"获取一个将用于解析使用URI的对象\r\n 文档（）。\r\n","Add a log Handler to receive logging messages.":"添加日志处理程序以接收记录消息。\r\n","java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndUpdate(java.lang.Object, java.util.function.LongUnaryOperator)":"java.util.concurrent.atomic.atomiclongfieldupdater.getandupdate（java.lang.object，java.util.function.longunaryoperator）\r\n","javax.net.ssl.KeyManager":"javax.net.ssl.keymanager\r\n","Get parameters, if any.":"获取参数（如果有）。\r\n","java.util.regex.Pattern.quote(java.lang.String)":"java.util.regex.pattern.Quote（java.lang.string）\r\n","Returns the protocol name that is used for all connections in this\n session.":"返回用于此中所有连接的协议名称\r\n 会议。\r\n","A resizable char array.":"一个可重大的字符阵列。\r\n","Returns a composed predicate that represents a short-circuiting logical\n            AND of this predicate and another.":"返回代表短路逻辑的组成谓词\r\n            和这个谓词和另一个。\r\n","Checks whether this route is secure.":"检查此路线是否安全。\r\n","javax.xml.validation.SchemaFactory.newSchema(java.net.URL)":"javax.xml.validation.schemafactory.newschema（java.net.url）\r\n","Set the qualified name of a specific attribute.":"设置特定属性的合格名称。\r\n","Executes a request.":"执行请求。\r\n"," indicating\n            the characteristics of this Collector.":" 指示\r\n            该收藏家的特征。\r\n","if this key agreement is not complete.":"如果此关键协议未完成。\r\n","\r\n            Represents a collection of authorization requirements and the scheme or \r\n            schemes they are evaluated against, all of which must succeed\r\n            for authorization to succeed.\r\n            ":"\r\n            代表授权要求的集合和计划或\r\n            他们对他们进行评估的计划，所有这些都必须成功\r\n            授权成功。\r\n            \r\n"," if never set. -or- Sets the thread that currently owns exclusive access.":" 如果从未设置。 - 或设置当前拥有独家访问的线程。\r\n","Defines whether authentication should be handled automatically.":"定义是否应自动处理身份验证。\r\n","java.util.zip.Deflater.setInput(byte[], int, int)":"java.util.zip.deflater.setInput（byte []，int，int）\r\n","A factory for creating and connecting sockets.":"用于创建和连接插座的工厂。\r\n","in case of an IO problem":"如果有IO问题\r\n","Value for sixth month of year.":"价值六个月的价值。\r\n","\r\n            Writeable memory stream backed by a an ":"\r\n            可写的记忆流由A支持\r\n","\r\n            Determines whether any of the fields in this ":"\r\n            确定是否有任何字段\r\n","Transfers the element to a consumer, waiting if necessary to do so.":"将元素传输给消费者，如有必要，等待。\r\n","A capability-based lock with three modes for controlling read/write\n            access.":"基于功能的锁，具有三种模式用于控制读/写的模式\r\n            使用权。\r\n","Digest authentication scheme as defined in RFC2617.":"RFC2617中定义的消化身份验证方案。\r\n","The Level class defines a set of standard logging levels that\n            can be used to control logging output.":"级别类定义了一组标准记录级别\r\n            可用于控制记录输出。\r\n","Obtains the value of the given parameter.":"获得给定参数的值。\r\n","org.xml.sax.helpers.XMLFilterImpl.fatalError(org.xml.sax.SAXParseException)":"org.xml.sax.helpers.xmlfilterimpl.fatalerror（org.xml.sax.sax.saxparseexception）\r\n","This class represents a collection of HTTP protocol parameters applicable\n to client-side\n ":"该类代表适用的HTTP协议参数的集合\r\n 到客户端\r\n \r\n","Returns whether server-mode connections will be configured to request\n client authentication.":"返回是否将服务器模式连接配置为请求\r\n 客户端认证。\r\n","java.util.concurrent.ThreadPoolExecutor.terminated()":"java.util.concurrent.threadpoolexecutor.termined（）\r\n","javax.sql.RowSet.setBlob(java.lang.String, java.sql.Blob)":"javax.sql.Rowset.setBlob（java.lang.string，java.sql.blob）\r\n","\r\n            Provides failure context information to handler providers.\r\n            ":"\r\n            向处理程序提供商提供失败上下文信息。\r\n            \r\n","latest":"最新的\r\n","The required antiforgery header value \"{0}\" is not present.":"不存在所需的抗试头值“ {0}”。\r\n","This interface represents a known entity, either parsed or unparsed, in an\n            XML document.":"该界面代表一个已知的实体，是解析或无与伦比的\r\n            XML文档。\r\n","javax.xml.transform.Result.PI_ENABLE_OUTPUT_ESCAPING":"javax.xml.transform.result.pi_enable_output_escaping\r\n","\r\n            Advances the reader to the next MessagePack primitive to be read.\r\n            ":"\r\n            将读者推向下一个要读取的MessagePack原始内容。\r\n            \r\n","javax.net.ssl.SSLContextSpi.engineGetDefaultSSLParameters()":"javax.net.ssl.sslcontextspi.enginegetdefaultssslparameters（）\r\n","\r\n            Asynchronously gets an ":"\r\n            异步得到一个\r\n","If there is a problem reading\n            the raw content of the document.":"如果有问题阅读\r\n            文档的原始内容。\r\n"," or\n      if a fatal error is found and the ":" 或者\r\n      如果发现致命错误，并且\r\n","if string the feature name is null\n":"如果字符串，功能名称为null\r\n\r\n","javax.xml.datatype.XMLGregorianCalendar.toXMLFormat()":"javax.xml.datatype.xmlgregoriancalendar.toxmlformat（）\r\n"," based on a ":" 基于a\r\n"," based on linked nodes.":" 基于链接节点。\r\n","javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendarTime(int, int, int, java.math.BigDecimal, int)":"javax.xml.datatype.datatypefactory.newxmlgregoriancalendartime（int，int，int，int，java.math.math.bigdecimal，int）\r\n","\n            plus one for the text after the final separator.\n            All entries are included.\n            ":"\r\n            加上最终分隔符后文本的一个。\r\n            包括所有条目。\r\n            \r\n","Exclusively acquires the lock if it is available within the\n            given time and the current thread has not been interrupted.":"如果在锁中可用，则只能获得\r\n            给定时间和当前线程尚未中断。\r\n","\r\n            Authorization extension methods for ":"\r\n            授权扩展方法\r\n","Generates a secret key.":"生成一个秘密钥匙。\r\n","Return the current error handler. -or- Set the error handler.":"返回当前错误处理程序。 - 或 - 设置错误处理程序。\r\n","\r\n            An optional format to use when converting values. \r\n            ":"\r\n            转换值时使用的可选格式。\r\n            \r\n","Constructs a new <code>XPathFunctionException</code> with the specified detail <code>message</code>.":"用指定的详细信息</code>消息</code>构造新的<code> xpathFunctionException </code>。\r\n","javax.xml.datatype.DatatypeFactory.newInstance(java.lang.String, java.lang.ClassLoader)":"javax.xml.datatype.datatypefactory.newinstance（java.lang.string，java.lang.classloader）\r\n","\r\n            Creates an instance of ":"\r\n            创建一个实例\r\n","Sets the domain attribute.":"设置域属性。\r\n","Indicates whether this scheme allows for layered connections.":"指示此方案是否允许进行分层连接。\r\n","javax.xml.transform.TransformerException.setLocator(javax.xml.transform.SourceLocator)":"javax.xml.transform.transformerexception.setLocator（javax.xml.transform.sourcelocator）\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer":"java.util.concurrent.locks.abstractqueuedlongsynchronizer\r\n"," property.\r\n            ":" 财产。\r\n            \r\n","javax.xml.parsers.DocumentBuilder.newDocument()":"javax.xml.parsers.documentbuilder.newdocument（）\r\n","Creates a new AtomicReference with the given initial value.":"使用给定的初始值创建一个新的原子重证。\r\n","org.xml.sax.helpers.XMLFilterImpl.getFeature(java.lang.String)":"org.xml.sax.helpers.xmlfilterimpl.getFeature（java.lang.string）\r\n","java.util.concurrent.atomic.AtomicIntegerArray":"java.util.concurrent.atomic.atomicintegerarray\r\n","Resets the checksum to its initial value.":"将校验和重置为其初始值。\r\n","javax.xml.transform.sax.SAXSource SAXSource":"javax.xml.transform.sax.saxsource saxsource\r\n","\r\n            Called after options/events have been initialized for the handler to finish initializing itself.\r\n            ":"\r\n            调用后选项/事件已初始化为处理程序以完成初始化。\r\n            \r\n","Parses a JSON (<a href=\"http://www.":"解析json（<a href =“ http：//www。\r\n","A <code>SSLSessionContext</code> represents a set of\n            <code>SSLSession</code>s associated with a single entity.":"<code> sslsessionContext </code>表示一组\r\n            <code> sslsession </code>与单个实体关联。\r\n","AccessControlContext":"AccessControlContext\r\n","java.util.concurrent.locks.ReentrantReadWriteLock.getWaitQueueLength(java.util.concurrent.locks.Condition)":"java.util.concurrent.locks.reentrantreadwritelock.getwaitqueuelength（java.util.concurrent.locks.cormentition）\r\n","javax.xml.transform.TransformerFactoryConfigurationError.TransformerFactoryConfigurationError(java.lang.Exception, java.lang.String)":"javax.xml.transform.transformerfactoryconfigurationerror.transformerfactoryconfigurationerror（java.lang.exception，java.lang.string）\r\n","javax.crypto.spec.PSource.getAlgorithm()":"javax.crypto.spec.psource.getalgorithm（）\r\n","Convert this <code>XMLGregorianCalendar</code> along with provided parameters\n            to a ":"转换此<code> xmlgregoriancalendar </code>以及提供的参数\r\n            到\r\n","java.util.concurrent.Semaphore.tryAcquire(int)":"java.util.concurrent.semaphore.tryacquire（int）\r\n","An interface representing a data checksum.":"代表数据检查和的接口。\r\n","java.util.zip.InflaterInputStream.fill()":"java.util.zip.inflaterinputstream.fill（）\r\n","java.util.concurrent.atomic.AtomicLongFieldUpdater.get(java.lang.Object)":"java.util.concurrent.atomic.atomiclongfieldupdater.get（java.lang.object）\r\n","\"Set-Cookie\"":"“ set-cookie”\r\n","if least greater than or equal\n to bound\n":"如果最小大于或相等\r\n 绑定\r\n\r\n"," was created\n   from a different document than the one that created this node.\n   ":" 被创建了\r\n   来自与创建此节点的文档不同的文档。\r\n   \r\n","Constructs a new <code>XPathFactoryConfigurationException</code> with the specified detail <code>message</code>.":"用指定的详细信息</code>消息</code>构造新的<code> xpathFactoryConfigurationException </code>。\r\n","\r\n            Gets the refresh token provided by the authentication service.\r\n            ":"\r\n            获取身份验证服务提供的刷新令牌。\r\n            \r\n","if this entity is not repeatable and the stream\n  has already been obtained previously\n":"如果该实体不可重复并且流\r\n  以前已经获得\r\n\r\n","java.util.function.LongUnaryOperator.identity()":"java.util.function.longunaryoperator.Identity（）\r\n","PriorityBlockingQueue":"PriorityBlockingQueue\r\n","Returns a server socket bound to the specified port, and uses the\n            specified connection backlog.":"返回绑定到指定端口的服务器套接字，并使用\r\n            指定的连接积压。\r\n","javax.crypto.spec.DESKeySpec":"javax.crypto.spec.deskeyspec\r\n","Acquires and returns all permits that are immediately available.":"获取并返回立即可用的所有许可证。\r\n","javax.xml.datatype.DatatypeConstants.GMONTH":"javax.xml.datatype.datatypeconstants.gmonth\r\n","\r\n            Clears all modification flags within this ":"\r\n            清除此处的所有修改标志\r\n","Transfers the element to a waiting consumer immediately, if possible.":"如果可能的话，将元素立即转移到等待消费者。\r\n","Returns the principal that was sent to the server during handshaking.":"返回握手期间发送到服务器的主体。\r\n"," and the\n   result of the replacement operation would add a second\n   ":" 和\r\n   替换操作的结果将增加第二个\r\n   \r\n","Create a new HTTP service.":"创建新的HTTP服务。\r\n","Get the node that represents a Source DOM tree. -or- Set the node that will represents a Source DOM tree.":"获取代表源DOM树的节点。 - 或 - 设置将代表源dom树的节点。\r\n","org.xml.sax.ext.DeclHandler.internalEntityDecl(java.lang.String, java.lang.String)":"org.xml.sax.ext.declhandler.internalentitydecl（java.lang.string，java.lang.string）\r\n","org.xml.sax.helpers.ParserAdapter.setDTDHandler(org.xml.sax.DTDHandler)":"org.xml.sax.helpers.parseradapter.setdtdhandler（org.xml.sax.dtdhandler）\r\n","java.util.concurrent.LinkedTransferQueue.transfer(java.lang.Object)":"java.util.concurrent.linkedtransferqueue.transfer（java.lang.object）\r\n","java.util.zip.ZipInputStream.ZipInputStream(java.io.InputStream, java.nio.charset.Charset)":"java.util.zip.zipinputstream.zipinputstream（java.io.inputstream，java.nio.chareet.charset））\r\n","100 Continue":"100继续\r\n","java.util.concurrent.CompletionStage.acceptEitherAsync(java.util.concurrent.CompletionStage, java.util.function.Consumer)":"java.util.concurrent.completionstage.accepteitherasync（java.util.concurrent.completionstage，java.util.function.consumer）\r\n","javax.security.cert.CertificateNotYetValidException.CertificateNotYetValidException()":"javax.security.cert.certificatificatyetvalidexception.certificatenotyetvalidexception（）\r\n","An object that implements this interface contains the information\n            needed to act as source input (XML source or transformation instructions).":"实现此接口的对象包含信息\r\n            需要充当源输入（XML源或转换指令）。\r\n","java.util.concurrent.PriorityBlockingQueue":"java.util.concurrent.PriorityBlockingQueue\r\n","A reflection-based utility that enables atomic updates to\n            designated ":"基于反射的实用程序，可以使原子更新到\r\n            指定的\r\n","javax.crypto.spec.DHGenParameterSpec":"javax.crypto.spec.dhgenparameterspec\r\n","Atomically sets the value of both the reference and stamp\n            to the given update values if the\n            current reference is ":"原子设置参考和邮票的值\r\n            如果是\r\n            当前参考为\r\n","Represents a function that accepts a double-valued argument and produces an\n            int-valued result.":"表示接受双重值参数并产生一个功能\r\n            int值结果。\r\n","BinaryOperator":"二元运动器\r\n","org.xml.sax.HandlerBase.setDocumentLocator(org.xml.sax.Locator)":"org.xml.sax.handlerbase.setDocumentLocator（org.xml.sax.locator）\r\n","Constructs a ExemptionMechanismException with the specified\n            detailed message.":"用指定的\r\n            详细消息。\r\n","This array can be used to convert the event type integer constants\n            such as START_TAG or TEXT to\n            to a string.":"此数组可用于转换事件类型整数常数\r\n            例如start_tag或文本\r\n            到字符串。\r\n","\r\n            Tracks the rendering state associated with an ":"\r\n            跟踪与\r\n","Constructs an exception reporting that the SSL peer's\n            identity has not been verified.":"构建一个例外报告，说明SSL对等\r\n            身份尚未得到验证。\r\n"," with the default value\n ":" 带有默认值\r\n \r\n","\r\n            Base context for authentication events which contain ":"\r\n            包含身份验证事件的基本上下文\r\n","Atomically decrements by one the current value.":"原子上减少一个当前值。\r\n","Formats a request line.":"格式化请求行。\r\n","Estimates the length of formatted header elements.":"估计格式标头元素的长度。\r\n","\r\n            Gives a ":"\r\n            给出\r\n","java.util.concurrent.LinkedBlockingQueue.drainTo(java.util.Collection)":"java.util.concurrent.linkedblockingqueue.drainto（java.util.collection）\r\n","javax.sql.RowSet.setBigDecimal(int, java.math.BigDecimal)":"Javax.sql.Rowset.setBigDecimal（int，java.math.bigdecimal）\r\n","Constant used to indicate the to-be-unwrapped key is a \"public key\".":"用于指示未包装密钥的常数是“公共密钥”。\r\n","if handler is null":"如果处理程序为空\r\n","java.util.concurrent.atomic.AtomicReferenceArray":"java.util.concurrent.atomic.atomicreferencearray\r\n","javax.security.auth.callback.CallbackHandler":"javax.security.auth.callback.callbackhandler\r\n","if the current thread is\n         interrupted while acquiring the lock (and interruption\n         of lock acquisition is supported)\n":"如果当前线程为\r\n         获取锁时中断（和中断）\r\n         支持锁定的锁定）\r\n\r\n","Get the parameters to the log message.":"获取到日志消息的参数。\r\n","Provides the next step.":"提供下一步。\r\n","java.util.logging.Handler.getErrorManager()":"java.util.logging.handler.geterrormanager（）\r\n","\r\n            Remove the identity associated with the given key.\r\n            ":"\r\n            删除与给定键关联的身份。\r\n            \r\n","\r\n            Constants used in the OAuth protocol\r\n            ":"\r\n            OAuth协议中使用的常数\r\n            \r\n","java.util.stream.Collectors.groupingBy(java.util.function.Function, java.util.stream.Collector)":"java.util.stream.collectors.groupingby（java.util.function.function，java.util.stream.collector）\r\n","javax.xml.validation.Schema":"javax.xml.Validation.Schema\r\n","java.util.concurrent.TimeoutException.TimeoutException(java.lang.String)":"java.util.concurrent.timeoutexception.timeoutexception（java.lang.string）\r\n","java.util.function.IntSupplier":"java.util.function.intsupplier\r\n","javax.crypto.spec.DESKeySpec.getKey()":"javax.crypto.spec.deskeyspec.getkey（）\r\n","java.util.logging.Logger.GLOBAL_LOGGER_NAME":"java.util.logging.logger.global_logger_name\r\n","Returns the comment string for the entry. -or- Sets the optional comment string for the entry.":"返回条目的注释字符串。 - 或 - 为条目设置可选注释字符串。\r\n","javax.security.auth.Subject.getPrivateCredentials()":"javax.security.auth.subject.getPrivateCredentials（）\r\n","org.xml.sax.helpers.DefaultHandler.startDocument()":"org.xml.sax.helpers.defaulthandler.startdocument（）\r\n","java.util.zip.Deflater.Deflater(int, boolean)":"java.util.zip.deflater.deflater（int，boolean）\r\n","javax.xml.transform.stream.StreamSource StreamSource":"javax.xml.transform.stream.streamsource streamsource\r\n","if error(s) occur during initialization.\n":"如果初始化期间发生错误。\r\n\r\n"," used for authorization.\r\n            ":" 用于授权。\r\n            \r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.getExclusiveQueuedThreads()":"java.util.concurrent.locks.abstractqueuedsynchronizer.getExcliveriveququeuedthreads（）\r\n","java.util.logging.Logger.logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)":"java.util.logging.logger.logp（java.util.logging.level，java.lang.string，java.lang.string，java.lang.string，java.lang.object）\r\n","WARNING is a message level indicating a potential problem.":"警告是表示潜在问题的消息级别。\r\n","java.util.concurrent.PriorityBlockingQueue.iterator()":"java.util.concurrent.priorityblockingqueue.iterator（）\r\n","Encodes the key (property name) to this stringer.":"将密钥（属性名称）编码到此弦上。\r\n","The facility that a disconnected <code>RowSet</code> object calls on\n            to populate itself with rows of data.":"断开连接的<code> Rowset </code>对象的设施调用\r\n            用一行数据填充自身。\r\n","\r\n            as a base class ensures that the service provider scope is disposed with the component.\r\n            ":"\r\n            作为基类，确保服务提供商范围与组件处置。\r\n            \r\n","Returns an iterator of the ":"返回一个迭代器\r\n","namespaceURI":"名称空间\r\n","\r\n            Extension methods to add DataAnnotations validation to an ":"\r\n            扩展方法将数据通道验证添加到\r\n","Node.replaceChild":"Node.Replacechild\r\n"," with the given ID.":" 使用给定的ID。\r\n","\r\n            The Provider may be assigned to an instance of an object created by the application at startup time. The handler\r\n            calls methods on the provider which give the application control at certain points where processing is occurring.\r\n            If it is not provided a default instance is supplied which does nothing when the methods are called.\r\n            ":"\r\n            提供商可以分配给应用程序在启动时创建的对象的实例。处理程序\r\n            在提供商上调用方法，该方法在处理处理的某些点提供了应用程序控件。\r\n            如果没有提供，则提供默认实例，当调用方法时什么都不执行。\r\n            \r\n","Queries if the write lock is held by any thread.":"查询是否由任何线程保留。\r\n","javax.crypto.ExemptionMechanism.genExemptionBlob(byte[])":"javax.crypto.ExemptionMechanism.GenexemptionBlob（byte []）\r\n","java.util.concurrent.locks.ReentrantReadWriteLock.getQueueLength()":"java.util.concurrent.locks.reentrantreadwritelock.getQueuelength（）\r\n","Returns the number of name/value mappings in this object.":"返回此对象中的名称/值映射的数量。\r\n","Closes this connection gracefully.":"优雅地关闭了这种联系。\r\n","Replaces the entry for a key only if currently mapped to a given value.":"仅当当前映射到给定值时，才替换键的条目。\r\n",", and organizes them into a\n            ":"，并将它们组织成一个\r\n            \r\n","Tests if this protocol version is less or equal to the given one.":"测试该协议版本是否较小或等于给定的版本。\r\n","Replaces every subsequence of the input sequence that matches the\n            pattern with the given replacement string.":"替换与匹配的输入序列的每个子序列\r\n            带有给定替换字符串的模式。\r\n","java.util.concurrent.locks.ReentrantLock.getOwner()":"java.util.concurrent.locks.reentrantlock.getowner（）\r\n","Implements absolute timed condition wait.":"实施绝对定时条件等待。\r\n","java.util.concurrent.ThreadPoolExecutor.allowsCoreThreadTimeOut()":"java.util.concurrent.threadpoolexecutor.allowscorethreadtimeout（）\r\n","Returns the lock used for reading.":"返回用于阅读的锁。\r\n","\r\n            Appends a frame representing an ":"\r\n            附加代表一个框架\r\n",",\n   this exception might be raised if the DOM implementation doesn't\n   support the replacement of the ":"，，，，\r\n   如果DOM实施不实现，可能会提出此例外\r\n   支持更换\r\n","org.xml.sax.ContentHandler.endPrefixMapping(java.lang.String)":"org.xml.sax.contenthandler.endprefixmapping（java.lang.string）\r\n","401 Unauthorized":"401未经授权\r\n","LinkedTransferQueue":"LinkedTransfrequeue\r\n","AbortPolicy":"流产\r\n","java.util.concurrent.atomic.AtomicReferenceArray.weakCompareAndSet(int, java.lang.Object, java.lang.Object)":"java.util.concurrent.atomic.atomicreferencearray.weakcompareandset（int，java.lang.object，java.lang.object）\r\n","org.json.JSONArray.optLong(int)":"org.json.jsonarray.optlong（int）\r\n","\r\n            Name.\r\n            ":"\r\n            姓名。\r\n            \r\n","DatatypeConstants#GREATER":"datatypeconstants＃大\r\n","Set an output property that will be in effect for the\n transformation.":"设置将有效的输出属性\r\n 转型。\r\n","java.util.logging.Logger.getLogger(java.lang.String, java.lang.String)":"java.util.logging.logger.getlogger（java.lang.string，java.lang.string）\r\n","Returns the value at ":"返回值\r\n","An attribute specifying the encoding used for this entity at the time\n of parsing, when it is an external parsed entity.":"指定该实体使用的编码的属性\r\n 解析，当它是外部解析实体时。\r\n","\r\n            Called to initialize BaseURI and current URI before these values are used for the first time.\r\n            Override ":"\r\n            在首次使用这些值之前，打电话给初始化baseuri和当前URI。\r\n            覆盖\r\n","\r\n            Gets the scoped ":"\r\n            获取范围\r\n"," that completes once the component has processed the state change.\r\n            ":" 一旦组件处理状态更改，就可以完成。\r\n            \r\n","org.xml.sax.helpers.ParserAdapter.setFeature(java.lang.String, boolean)":"org.xml.sax.helpers.parseradapter.setFeature（java.lang.string，boolean）\r\n","Receive notification of the beginning of an element.":"接收元素开头的通知。\r\n","Adds a new unarrived party to this phaser.":"为这个移位者添加了一个新的未入式聚会。\r\n","201 Created":"201创建\r\n","Instantiates parameters.":"实例化参数。\r\n","java.util.jar.Attributes.getValue(java.lang.String)":"java.util.jar.attributes.getValue（java.lang.string）\r\n","A cryptographic secret (symmetric) key.":"密码秘密（对称）键。\r\n","\r\n            The antiforgery system already embeds the client's username within the\r\n            generated tokens. This interface provides and consumes ":"\r\n            抗试验系统已经将客户的用户名嵌入\r\n            生成的令牌。该界面提供并消耗\r\n","java.util.concurrent.ThreadPoolExecutor.isTerminating()":"java.util.concurrent.threadpoolexecutor.isterminating（）\r\n","java.util.zip.InflaterOutputStream.InflaterOutputStream(java.io.OutputStream, java.util.zip.Inflater, int)":"java.util.zip.inflateroutputstream.inflateroutputstream（java.io.outputstream，java.util.zip.inflater，int）\r\n","org.w3c.dom.Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC":"org.w3c.dom.node.document_position_implementation_specific\r\n","Special characters that can be used as separators in HTTP parameters.":"特殊字符可以用作HTTP参数中的分离器。\r\n"," if this executor has been shut down.":" 如果该执行人已关闭。\r\n","\r\n            data. If an incoming antiforgery token contains supplemental data but no\r\n            additional data provider is configured, the supplemental data will not be\r\n            validated.\r\n            ":"\r\n            数据。如果传入的抗管制令牌包含补充数据，但没有\r\n            配置了其他数据提供商，补充数据不会\r\n            经过验证。\r\n            \r\n","Acquires the lock.":"获取锁。\r\n","java.util.function.Predicate.isEqual(java.lang.Object)":"java.util.function.predicate.isequal（java.lang.Object）\r\n","javax.xml.parsers.DocumentBuilder.reset()":"javax.xml.parsers.documentbuilder.reset（）\r\n","Template":"模板\r\n","java.util.concurrent.LinkedBlockingDeque.drainTo(java.util.Collection, int)":"java.util.concurrent.linkedblockingdeque.drainto（java.util.collection，int）\r\n","javax.xml.datatype.DatatypeConstants.TIME":"javax.xml.datatype.datatypeconstants.time\r\n"," does not conform to the specification.":" 不符合规格。\r\n","Get the public identifier that was set with setPublicId. -or- Set the public identifier for this Source.":"获取使用SetPublicid设置的公共标识符。 - 或 - 设置此源的公共标识符。\r\n","Returns a new CompletionStage that, when this stage completes\n            normally, is executed using this stage's default asynchronous\n            execution facility, with this stage's result as the argument to\n            the supplied function.":"返回一个新的完整舞台，当这个阶段完成时\r\n            通常，使用此阶段的默认异步执行\r\n            执行设施，此阶段的结果是\r\n            提供的功能。\r\n",").\r\n            ":"）。\r\n            \r\n","\r\n            Default values related to cookie-based authentication handler\r\n            ":"\r\n            与基于cookie的身份验证处理程序有关的默认值\r\n            \r\n","java.util.concurrent.LinkedBlockingDeque.offerFirst(java.lang.Object, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.linkedblockingdeque.offerfirst（java.lang.Object，long，java.util.concurrent.timeunit）\r\n","Indicates that the client and server could not negotiate the\n            desired level of security.":"表示客户端和服务器无法协商\r\n            所需的安全级别。\r\n","java.util.zip.Deflater.getAdler()":"java.util.zip.deflater.getadler（）\r\n","\r\n            Gets an empty ":"\r\n            取空\r\n","\r\n            If an explicit ":"\r\n            如果是明确的\r\n"," when a task cannot be\n            accepted for execution.":" 当任务不能\r\n            接受执行。\r\n"," instance\n            with initial synchronization state of zero.":" 实例\r\n            初始同步状态为零。\r\n","Get the error event handler for the TransformerFactory.":"获取用于TranslererFactory的错误事件处理程序。\r\n","UnsupportedCallbackException":"无基底的受感受\r\n","javax.crypto.Cipher.doFinal(byte[], int, int, byte[], int)":"javax.crypto.cipher.dofinal（byte []，int，int，byte []，int）\r\n","\r\n            Gets the name of the form field used for the request token.\r\n            ":"\r\n            获取用于请求令牌的表单字段的名称。\r\n            \r\n","java.util.logging.StreamHandler":"java.util.logging.streamhandler\r\n","Returns the name of the encoding format for this secret key.":"返回此秘密键的编码格式名称。\r\n"," type,\n      or if the specified source is not a\n      ":" 类型，\r\n      或者如果指定的来源不是\r\n      \r\n","java.util.concurrent.locks.StampedLock.tryReadLock(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.locks.stampedlock.trreadlock（long，java.util.concurrent.timeunit）\r\n"," value using a 1-byte code when possible, otherwise as ":"在可能的情况下使用1字节代码进行价值，否则\r\n"," using the specified hostname.":" 使用指定的主机名。\r\n","Create a new XMLGregorianCalendar by parsing the String as a lexical representation.":"通过将字符串解析为词汇表示，创建一个新的XMLGregorianCalendar。\r\n","The interface defining the API for converting a packed stream in the\n Pack200 format to a JAR file.":"定义API用于转换包装流的接口\r\n Pack200格式为JAR文件。\r\n","Return the non-localized string name of the Level.":"返回级别的非定位字符串名称。\r\n","Maximum length of a node name (80 characters).":"节点名称的最大长度（80个字符）。\r\n","Returns an estimate of the number of threads waiting to acquire\n            this lock.":"返回等待获得的线程数量的估计值\r\n            这个锁。\r\n"," built from the requirements in this instance.\r\n            ":" 在这种情况下由要求构建。\r\n            \r\n","java.util.function.BiPredicate":"java.util.function.bipredicate\r\n","Imports all of the preferences represented by the XML document on the\n            specified input stream.":"导入XML文档表示的所有首选项\r\n            指定的输入流。\r\n","java.util.concurrent.ScheduledThreadPoolExecutor.ScheduledThreadPoolExecutor(int)":"java.util.concurrent.scheduledthreadpoolexecutor.scheduledthreadpoolexecutor（int）\r\n","\r\n            Creates a shallow clone of the instance.\r\n            ":"\r\n            创建实例的浅克隆。\r\n            \r\n","putFloat":"putfloat\r\n","Assign a value to the \"declared\" flag of a specific attribute.":"为特定属性的“声明”标志分配值。\r\n"," struct,\r\n            with the same settings as this one, but with its own buffer writer.\r\n            ":" 结构，\r\n            具有与此相同的设置，但具有自己的缓冲作者。\r\n            \r\n","The SAX parser\n            class was not found (check your CLASSPATH).":"萨克斯解析器\r\n            找不到课程（检查您的课堂路径）。\r\n","Returns the next available character, or the null character '\\0' if all\n            input has been exhausted.":"如果全部\r\n            输入已经用尽。\r\n","javax.net.ssl.TrustManagerFactory.getProvider()":"javax.net.ssl.trustmanagerfactory.getProvider（）\r\n","\r\n            Gets or sets a value representing the URL matching behavior.\r\n            ":"\r\n            获取或设置代表URL匹配行为的值。\r\n            \r\n","javax.crypto.CipherSpi.engineWrap(java.security.Key)":"javax.crypto.cipherspi.enginewrap（java.security.key）\r\n"," of\n   this node is \"xmlns\" []\n   .":" 的\r\n   该节点是“ xmlns” []\r\n   。\r\n","\r\n            The current position in the ":"\r\n            当前位置\r\n","Get the state of the named feature.":"获取命名功能的状态。\r\n"," is not available or cannot be\n     instantiated.":" 不可用或不能\r\n     实例化。\r\n","#NULL":"＃无效的\r\n","if the specified key cannot be used to initialize this key\n             agreement.\n":"如果指定的键不能用于初始化此密钥\r\n             协议。\r\n\r\n","java.util.function.LongPredicate.and(java.util.function.LongPredicate)":"java.util.function.longpredicate.and（java.util.function.longpredicate）\r\n"," do not specified a valid\n             chunk in ":" 不指定有效\r\n             块\r\n","org.w3c.dom.DOMException.NAMESPACE_ERR":"org.w3c.dom.domexception.namespace_err\r\n","Returns the exemption mechanism object used with this cipher.":"返回此密码中使用的豁免机制对象。\r\n","Constructor for an <code>SSLEngine</code> providing no hints\n            for an internal session reuse strategy.":"<code> sslengine的构造函数</code>不提供任何提示\r\n            用于内部会话重复使用策略。\r\n","Signals a circular redirect":"信号循环重定向\r\n","javax.net.ssl.SSLEngine.beginHandshake()":"javax.net.ssl.sslengine.beginhandshake（）\r\n","javax.crypto.Cipher.updateAAD(byte[])":"javax.crypto.cipher.updateaad（byte []）\r\n","java.util.concurrent.locks.StampedLock.validate(long)":"java.util.concurrent.locks.stampedlock.validate（long）\r\n","Specifies the 'chunked' flag.":"指定“块”标志。\r\n","Return a clone of the CertPathParameters encapsulated by this class.":"返回该类封装的certPathareTers的克隆。\r\n","javax.xml.transform.stream.StreamSource.FEATURE":"javax.xml.transform.stream.streamsource.feature\r\n","Parameter names for cookie specifications in HttpCookie.":"httpcookie中的cookie规格的参数名称。\r\n","Thrown unless overridden.\n":"除非被抛弃。\r\n\r\n","if a policy with the given name cannot be found\n":"如果找不到具有给定名称的政策\r\n\r\n","javax.net.ssl.HandshakeCompletedEvent.getPeerCertificateChain()":"javax.net.ssl.handshakecomplededevent.getPeerCertificateChain（）\r\n","Represents a predicate (boolean-valued function) of one ":"代表一个谓词（布尔值函数）\r\n","\r\n            The plane angle (in degrees, in the range of -90 to 90) between the Y-Z plane\r\n            and the plane containing both the transducer (e.g. pen stylus) axis and the Y axis.\r\n            ":"\r\n            Y -Z平面之间的平面角（以-90至90的范围为-90至90）\r\n            以及包含换能器（例如笔手写笔）轴和Y轴的平面。\r\n            \r\n","java.util.function.IntPredicate.negate()":"java.util.function.intpredicate.negate（）\r\n","The required antiforgery cookie \"{0}\" is not present.":"不存在所需的抗试验曲奇“ {0}”。\r\n","Causes the current thread to wait until it is signalled or interrupted,\n            or the specified deadline elapses.":"导致当前螺纹等到信号或中断为止，\r\n            或指定的截止日期。\r\n","Executors":"执行者\r\n","Create a <code>Duration</code> of type <code>xdt:yearMonthDuration</code> using the specified milliseconds as defined in\n            <a href=\"http://www.":"创建<code>持续时间</code> type <code> xdt：YearMonthDuration </code>使用指定的毫秒\r\n            <a href =“ http：//www。\r\n","Obtains a scheme by name, if registered.":"如果已注册，请按名称获得计划。\r\n","Predicate":"谓词\r\n","javax.xml.transform.OutputKeys.METHOD":"javax.xml.transform.outputkeys.method\r\n","java.util.concurrent.LinkedBlockingDeque.addFirst(java.lang.Object)":"java.util.concurrent.linkedblockingdeque.addfirst（java.lang.object）\r\n","Constant used to indicate the to-be-unwrapped key is a \"private key\".":"用于指示未包装密钥的常数是“私钥”。\r\n","Constructs a NoSuchPaddingException with the specified\n            detail message.":"用指定的\r\n            详细信息。\r\n","Returns a <code>KeyAgreement</code> object that implements the\n            specified key agreement algorithm.":"返回<code> keyagreement </code>对象\r\n            指定的关键协议算法。\r\n","javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer[], int, int, java.nio.ByteBuffer)":"javax.net.ssl.sslengine.wrap（java.nio.bytebuffer []，int，int，java.nio.bytebuffer）\r\n","If both a scheme and a path are given but the path is\n             relative, if the URI string constructed from the given\n             components violates RFC 2396, or if the authority\n             component of the string is present but cannot be parsed\n             as a server-based authority\n":"如果给出了方案和路径，但是路径是\r\n             相对，如果从给定构建的URI字符串\r\n             组件违反了RFC 2396，或者当局\r\n             存在字符串的组成部分，但不能解析\r\n             作为基于服务器的权威\r\n\r\n",", which enables authorization capabilities.\r\n            ":"，可以实现授权功能。\r\n            \r\n","java.util.function.IntUnaryOperator.identity()":"java.util.function.intunaryoperator.Identity（）\r\n","java.util.zip.ZipFile.getName()":"java.util.zip.zipfile.getName（）\r\n",", or throws otherwise.":"，或者否则。\r\n","\r\n            Delete all claims from the given ClaimsIdentity with the given ClaimType.\r\n            ":"\r\n            用给定的索赔类型从给定的索赔身份中删除所有索赔。\r\n            \r\n","java.util.logging.LogRecord.getSourceMethodName()":"java.util.logging.logrecord.getSourceMethodName（）\r\n","Object#wait(long, int) Object.wait":"对象＃wait（long，int）对象。\r\n","javax.sql.RowSet.setAsciiStream(int, java.io.InputStream, int)":"javax.sql.Rowset.setAsciistream（int，java.io.inputstream，int）\r\n","Tells that this entity is not repeatable.":"告诉这个实体不可重复。\r\n"," using\n            this time unit.":" 使用\r\n            这个时间单元。\r\n","Utility class to contain basic Datatype values as constants.":"实用程序类包含基本数据类型值作为常数。\r\n","Parse the content described by the giving Uniform Resource\n            Identifier (URI) as XML using the specified\n            ":"解析给予统一资源所描述的内容\r\n            使用指定的标识符（URI）为XML\r\n            \r\n","javax.crypto.CipherOutputStream.CipherOutputStream(java.io.OutputStream, javax.crypto.Cipher)":"javax.crypto.cipheroutputstream.cipheroutputstream（java.io.outputstream，javax.crypto.cipher）\r\n","javax.xml.datatype.XMLGregorianCalendar.setTime(int, int, int, int)":"javax.xml.datatype.xmlgregoriancalendar.settime（int，int，int，int）\r\n","\r\n            Checks that the options are valid for a specific scheme\r\n            ":"\r\n            检查选项是否适用于特定方案\r\n            \r\n","Basic implementation of an ":"基本实施\r\n","javax.crypto.Cipher.getAlgorithm()":"javax.crypto.cipher.getalgorithm（）\r\n","Sets the last access time of the entry.":"设置条目的最后访问时间。\r\n"," for the given authentication \n scope.":" 对于给定的身份验证\r\n 范围。\r\n","\r\n            Invokes the delegate associated with this binding and dispatches an event notification to the\r\n            appropriate component.\r\n            ":"\r\n            调用与此绑定关联的委托并派遣事件通知到\r\n            适当的组件。\r\n            \r\n","javax.crypto.spec.RC5ParameterSpec.getWordSize()":"javax.crypto.spec.rc5parameterspec.getWordsize（）\r\n","if the parse fails or doesn't yield a\n     ":"如果解析失败或不产生\r\n     \r\n","The interface to a ":"接口\r\n","Empty constructor for use by subclasses.":"用于子类使用的空构造函数。\r\n","Returns a predicate that tests if two arguments are equal according\n            to ":"返回一个谓词，该谓词是否根据两个参数平等测试\r\n            至\r\n","The required antiforgery form field \"{0}\" is not present.":"不存在所需的抗试验表格“ {0}”。\r\n","java.util.logging.XMLFormatter.format(java.util.logging.LogRecord)":"java.util.logging.xmlformatter.format（java.util.logging.logrocord）\r\n","if this cipher instance is in an invalid state.\n":"如果此密码实例处于无效状态。\r\n\r\n","\r\n            Gets the type of the edit operation.\r\n            ":"\r\n            获取编辑操作的类型。\r\n            \r\n","\r\n            Responsible for managing what authenticationSchemes are supported.\r\n            ":"\r\n            负责管理支持哪些身份验证化学。\r\n            \r\n","Creates a new AtomicInteger with initial value ":"创建一个具有初始值的新原子素\r\n","Creates the shared secret and returns it as a secret key object\n            of the requested algorithm type.":"创建共享的秘密并将其归还为秘密关键对象\r\n            所请求的算法类型。\r\n","Creates a predicate which can be used to match a string.":"创建一个可用于匹配字符串的谓词。\r\n","Creates a new header iterator.":"创建一个新的标题迭代器。\r\n","Parses the specified <code>URL</code> as a schema and returns it as a <code>Schema</code>.":"将指定的<code> URL </code>解析为架构，并将其返回为<code> schema </code>。\r\n","javax.xml.xpath.XPathExpressionException.XPathExpressionException(java.lang.String)":"javax.xml.xpath.xpathexpressexception.xpathExpressionException（java.lang.string）\r\n","Preferences#putInt(String,int)":"首选项＃putint（字符串，int）\r\n","java.util.prefs.Preferences.removePreferenceChangeListener(java.util.prefs.PreferenceChangeListener)":"java.util.prefs.preferences.removepreferencechangelistener（java.util.prefs.preferencechangelistener）\r\n","java.util.jar.Manifest.clone()":"java.util.jar.manifest.clone（）\r\n","Test if the current event is of the given type and if the\n            namespace and name do match.":"测试当前事件是否为给定类型以及是否\r\n            名称空间和名称确实匹配。\r\n","\r\n            Gets the access token provided by the authentication service.\r\n            ":"\r\n            获取身份验证服务提供的访问令牌。\r\n            \r\n","javax.crypto.ExemptionMechanismSpi.engineGenExemptionBlob(byte[], int)":"javax.crypto.ExemptionMechanismspi.enginegenexemptionblob（byte []，int）\r\n","Look up an attribute's value by Namespace-qualified name.":"通过名称合格名称查找属性的值。\r\n"," of this node is different from \"\", or if this node is an attribute and the ":" 该节点的不同与“”不同，或者如果该节点是属性，并且\r\n","org.xml.sax.helpers.XMLFilterImpl.XMLFilterImpl()":"org.xml.sax.helpers.xmlfilterimpl.xmlfilterimpl（）\r\n","Constructs a <code>ConnectionEvent</code> object initialized with\n            the given <code>PooledConnection</code> object.":"构造A <code> ConnectionEvent </code>初始化的对象\r\n            给定的<code> poolconnection </code>对象。\r\n","javax.crypto.ShortBufferException.ShortBufferException()":"javax.crypto.shortbufferexception.shortbufferexception（）\r\n","Atomically updates the field of the given object managed by this updater\n            with the results of applying the given function, returning the previous\n            value.":"原子上更新此更新机管理的给定对象的字段\r\n            随着应用给定功能的结果，返回了先前\r\n            价值。\r\n","\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            ":"\r\n            显示A解析错误时使用或设置使用的错误消息。\r\n            \r\n","java.util.concurrent.Semaphore.Semaphore(int)":"java.util.concurrent.semaphore.semaphore（int）\r\n","Create a new SAXParseException from a message and a Locator.":"从消息和定位器中创建一个新的SaxParseException。\r\n","This class implements the <code>EncryptedPrivateKeyInfo</code> type\n            as defined in PKCS #8.":"本类实现<code> encryptedPrivateKeyinfo </code>类型\r\n            如PKCS＃8所定义。\r\n","\r\n            Marks a previously appended element frame as closed. Calls to this method\r\n            must be balanced with calls to ":"\r\n            将先前附加的元素框架标记为关闭。调用此方法\r\n            必须与电话平衡\r\n","Creates a new RedirectException with a ":"用\r\n","HIERARCHY_REQUEST_ERR: Raised if an attempt is made to add a node\n   doesn't belong in this NamedNodeMap. Examples would include trying\n   to insert something other than an Attr node into an Element's map\n   of attributes, or a non-Entity node into the DocumentType's map of\n   Entities.\n":"eshierarchy_request_err：如果尝试添加节点，则提出\r\n   不属于此名称的nodemap。示例包括尝试\r\n   将attr节点以外的其他内容插入元素的映射中\r\n   属性，或在documentType的地图中的非实体节点\r\n   实体。\r\n\r\n","This constant specifies that a ":"这个常数指定\r\n","\r\n            Gets or sets the model to produce the list of validation messages for.\r\n            When specified, this lists all errors that are associated with the model instance.\r\n            ":"\r\n            获取或设置模型以生成验证消息列表。\r\n            指定时，列出了与模型实例关联的所有错误。\r\n            \r\n","Adapt a SAX2 end prefix mapping event.":"调整SAX2 END前缀映射事件。\r\n","javax.net.ssl.SNIMatcher.matches(javax.net.ssl.SNIServerName)":"javax.net.ssl.snimatcher.matches（javax.net.ssl.sniservername）\r\n","org.xml.sax.helpers.DefaultHandler.notationDecl(java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.helpers.defaulthandler.notationdecl（java.lang.string，java.lang.string，java.lang.string）\r\n","Returns the version of the cookie specification to which this\n cookie conforms.":"返回cookie规范的版本\r\n 饼干符合。\r\n","javax.crypto.spec.RC5ParameterSpec":"javax.crypto.spec.rc5parameterspec\r\n","java.util.zip.Inflater.needsDictionary()":"java.util.zip.inflater.needsdictionary（）\r\n","if the pattern is empty.":"如果图案为空。\r\n","Defines the signature version of the JAR file.":"定义JAR文件的签名版本。\r\n","org.apache.http.params.HttpParams.getIntParameter(java.lang.String, int)":"org.apache.http.params.httpparams.getIntParameter（java.lang.string，int）\r\n",", replacing any existing equivalent cookies.":"，更换任何现有的等效cookie。\r\n","DOCTYPE":"Doctype\r\n","org.apache.http.params.HttpParams.removeParameter(java.lang.String)":"org.apache.http.params.httpparams.removeparameter（java.lang.string）\r\n"," being used by\n            the XML processor.":" 被使用\r\n            XML处理器。\r\n","Create a new <code>DatatypeConfigurationException</code> with\n            the specified detail message.":"使用新的<code> DatatyPeconFigurationException </code>使用\r\n            指定的详细消息。\r\n","java.util.stream.Collectors.collectingAndThen(java.util.stream.Collector, java.util.function.Function)":"java.util.stream.collectors.collectingandthen（java.util.stream.collector，java.util.function.function.function.function）\r\n","\r\n            @bind-Value=\"model.PropertyName\"\r\n            ":"\r\n            @bind-value =“ model.propertyname”\r\n            \r\n","java.util.logging.Logger.severe(java.util.function.Supplier)":"java.util.logging.logger.severe（java.util.function.supplier）\r\n"," attribute. This may happen when\n   importing an XML 1.1 [] element\n   into an XML 1.0 document, for instance.":" 属性。这可能会发生\r\n   导入XML 1.1 []元素\r\n   例如，进入XML 1.0文档。\r\n","javax.crypto.SecretKeyFactory.getProvider()":"javax.crypto.secretkeyfactory.getProvider（）\r\n","org.xml.sax.helpers.AttributesImpl.setAttribute(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.helpers.attributesimpl.setAttribute（int，java.lang.string，java.lang.string，java.lang.string，java.lang.lang.string，java.lang.lang.string）\r\n","If an attempt is made to add an attribute that is already in use\n            elsewhere.":"如果尝试添加已经使用的属性\r\n            别处。\r\n","WRONG_DOCUMENT_ERR: Raised if ":"错误_document_err：如果\r\n"," and the\n   ":" 和\r\n   \r\n","java.util.concurrent.ThreadPoolExecutor.shutdown()":"java.util.concurrent.threadpoolexecutor.shutdown（）\r\n","Returns a new CompletionStage that, when either this or the\n            other given stage complete normally, executes the given action\n            using the supplied executor.":"返回一个新的完整舞台，当\r\n            其他给定的阶段正常完成，执行给定的动作\r\n            使用提供的执行人。\r\n","The public identifier of the external subset.":"外部子集的公共标识符。\r\n","getFloat":"GetFloat\r\n","java.util.function.ToDoubleBiFunction":"java.util.function.todoublebifunction\r\n","\r\n            Gets or sets a value that determines whether the parameter will capture values that\r\n            don't match any other parameter.\r\n            ":"\r\n            获取或设置一个确定参数是否将捕获值的值\r\n            不要匹配任何其他参数。\r\n            \r\n"," being called.\r\n            ":" 被称为。\r\n            \r\n","javax.xml.parsers.DocumentBuilderFactory.getAttribute(java.lang.String)":"javax.xml.parsers.documentbuilderfactory.getAttribute（java.lang.string）\r\n","java.util.prefs.AbstractPreferences.remove(java.lang.String)":"java.util.prefs.abstractpreferences.remove（java.lang.string）\r\n","\r\n            Invoked when there is a remote failure.\r\n            ":"\r\n            在发生远程故障时调用。\r\n            \r\n","An event emitted by a ":"一个事件由\r\n","This class provides the functionality of a \"Message Authentication Code\"\n            (MAC) algorithm.":"该课程提供了“消息身份验证代码”的功能\r\n            （MAC）算法。\r\n","Constructs a DestroyFailedException with the specified detail\n            message.":"用指定的细节构建Destracterdexception\r\n            信息。\r\n","javax.crypto.CipherSpi.engineDoFinal(java.nio.ByteBuffer, java.nio.ByteBuffer)":"javax.crypto.cipherspi.enginedinefinal（java.nio.bytebuffer，java.nio.bytebuffer）\r\n"," implementation of this\n ":" 实施\r\n \r\n","\r\n            Gets the number of items in the segment.\r\n            ":"\r\n            获取细分市场中的项目数。\r\n            \r\n","java.util.logging.Handler.setFormatter(java.util.logging.Formatter)":"java.util.logging.handler.setformatter（java.util.logging.formatter）\r\n","in case of an IO problem, for example if the watcher itself\n         closes the underlying stream. The caller will leave the\n         wrapped stream alone, as if ":"如果有IO问题，例如观察者本身\r\n         关闭基础流。来电者将离开\r\n         单独包裹的流，好像\r\n","Resets CRC-32 to initial value.":"将CRC-32重置为初始值。\r\n","The AuthorizationPolicy named: '{0}' was not found.":"未找到授权的授权人员：'{0}'。\r\n","When the name parameter is null.":"当名称参数为null时。\r\n","org.w3c.dom.DOMException.NOT_SUPPORTED_ERR":"org.w3c.dom.domexception.not_supported_err\r\n","org.w3c.dom.Element.setAttributeNode(org.w3c.dom.Attr)":"org.w3c.dom.element.setAttributenode（org.w3c.dom.attr）\r\n","Log a SEVERE message.":"记录严重的信息。\r\n","Initializes this key agreement with the given key and set of\n            algorithm parameters.":"用给定的密钥和集合初始化此密钥协议\r\n            算法参数。\r\n","objectModel":"ObjectModel\r\n","Compares this scheme to an object.":"将此方案与对象进行比较。\r\n","java.util.concurrent.LinkedBlockingDeque.putLast(java.lang.Object)":"java.util.concurrent.linkedblockingdeque.putlast（java.lang.object）\r\n"," if no node\n is available.":" 如果没有节点\r\n 可用。\r\n","org.xml.sax.ContentHandler.endDocument()":"org.xml.sax.contenthandler.enddocument（）\r\n","javax.crypto.spec.RC5ParameterSpec.getRounds()":"javax.crypto.spec.rc5parameterspec.getRounds（）\r\n","org.w3c.dom.NameList.contains(java.lang.String)":"org.w3c.dom.namelist.contains（java.lang.string）\r\n","javax.net.ssl.KeyManagerFactory.getProvider()":"javax.net.ssl.keymanagerfactory.getProvider（）\r\n","Create a <code>Duration</code> of type <code>xdt:dayTimeDuration</code> using the specified milliseconds as defined in\n            <a href=\"http://www.":"创建<code>持续时间</code> type <code> xdt：dayTimeduration </code>使用指定的毫秒\r\n            <a href =“ http：//www。\r\n","Implements interruptible condition wait.":"实现可中断的状况等待。\r\n",", which must be supplied\r\n            as a cascading parameter.\r\n            ":"，必须提供\r\n            作为级联参数。\r\n            \r\n","org.apache.http.conn.ConnectTimeoutException.ConnectTimeoutException()":"org.apache.http.conn.connecttimeoutexception.connecttimeoutexception（）\r\n","Returns whether no more inbound data will be accepted by this engine.":"返回该引擎是否不再接受入站数据。\r\n","\r\n            Used to configure authentication\r\n            ":"\r\n            用于配置身份验证\r\n            \r\n","factor":"因素\r\n","if the key data is null.\n":"如果关键数据为null。\r\n\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.acquireSharedInterruptibly(long)":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.AcquireSharedBredible（长）\r\n","\r\n            Used as the fallback default scheme for all the other defaults.\r\n            ":"\r\n            用作所有其他默认值的后备默认方案。\r\n            \r\n","Returns a collection containing threads that may be waiting to\n            acquire the read lock.":"返回包含可能正在等待的线程的集合\r\n            获取读取锁。\r\n","java.util.jar.Attributes.Attributes()":"java.util.jar.attributes.attributes（）\r\n","java.util.concurrent.locks.StampedLock.unlock(long)":"java.util.concurrent.locks.stampedlock.unlock（long）\r\n","Returns a plain ":"返回平原\r\n","\r\n            The list of ":"\r\n            列表\r\n","javax.xml.transform.sax.SAXSource.FEATURE":"javax.xml.transform.sax.saxsource.feature\r\n","Transform the XML <code>Source</code> to a <code>Result</code>.":"将XML <code>源</code>转换为<code>结果</code>。\r\n","javax.crypto.Cipher.updateAAD(java.nio.ByteBuffer)":"javax.crypto.cipher.updateaad（java.nio.bytebuffer）\r\n","Returns a new CompletionStage that, when this and the other\n            given stage both complete normally, is executed using the\n            supplied executor, with the two results as arguments to the\n            supplied function.":"返回一个新的完整舞台，当\r\n            给定阶段正常完成，使用\r\n            授予执行人，两个结果作为参数\r\n            提供的功能。\r\n","Returns the offset after the last character of the subsequence\n            captured by the given group during the previous match operation.":"在子序列的最后一个字符之后返回偏移\r\n            在上一个比赛操作期间由给定组捕获。\r\n","java.util.concurrent.atomic.AtomicMarkableReference":"java.util.concurrent.atomic.atomicmarkableReference\r\n","Updates the current checksum with the specified array of bytes.":"使用指定的字节数组更新当前的校验和。\r\n","javax.xml.validation.SchemaFactory.newInstance(java.lang.String, java.lang.String, java.lang.ClassLoader)":"javax.xml.validation.schemafactory.newinstance（java.lang.string，java.lang.string，java.lang.classloader）\r\n","if the parse fails or doesn't yield a ":"如果解析失败或不产生\r\n"," that can schedule commands to run after a given\n            delay, or to execute periodically.":" 可以安排在给定的\r\n            延迟或定期执行。\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.hasQueuedThreads()":"java.util.concurrent.locks.abstractqueuedsynchronizer.hasqueuedthreads（）\r\n","Creates a <code>Comment</code> node given the specified string.":"创建<code>注释</code>给定指定字符串的节点。\r\n","Sets whether the designated column can be used in a where clause.":"设置指定的列是否可以在WHERE子句中使用。\r\n","if the specified algorithm is not provided by the specified\n             provider.":"如果指定的算法未提供指定的算法\r\n             提供者。\r\n","always.\n":"总是。\r\n\r\n","DocumentType":"DocumentType\r\n","java.util.logging.FileHandler.FileHandler()":"java.util.logging.filehandler.filehandler（）\r\n","javax.crypto.IllegalBlockSizeException.IllegalBlockSizeException()":"javax.crypto.illegalblocksizeexception.IllegalBlockSizeexception（）\r\n","Create a new <code>FactoryConfigurationError</code> with\n            the <code>String </code> specified as an error message.":"使用新的<code> factory configurationError </code>\r\n            <code>字符串</code>指定为错误消息。\r\n","java.util.zip.ZipException":"java.util.zip.zipexception\r\n","Return namespace that corresponds to given prefix\n            If there is no prefix bound to this namespace return null\n            but if generatePrefix is false then return generated prefix.":"与给定前缀相对应的返回名称空间\r\n            如果没有前缀绑定到此名称空间返回null\r\n            但是，如果GeneratePrefix为false，则返回生成的前缀。\r\n","in case of a problem":"如果有问题\r\n","\r\n            Gets the headers that the resource might use and can be exposed.\r\n            ":"\r\n            获取资源可能使用并且可以暴露的标题。\r\n            \r\n","StreamHandler":"流汉\r\n","\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            ":"\r\n            在进行异步授权时将显示的内容正在进行中。\r\n            \r\n","Returns the path name of the ZIP file.":"返回zip文件的路径名。\r\n","org.w3c.dom.DOMException.WRONG_DOCUMENT_ERR":"org.w3c.dom.domexception.wrong_document_err\r\n","There is no value\n            for the `org.xml.sax.parser' system property.":"没有价值\r\n            对于`org.xml.sax.parser'系统属性。\r\n","node":"节点\r\n","\r\n            The context.\r\n            ":"\r\n            上下文。\r\n            \r\n","Converts the byte array of HTTP content characters to a string.":"将HTTP内容字符的字节数组转换为字符串。\r\n"," then\r\n            antiforgery validation will only consider form data.\r\n            ":" 然后\r\n            抗试验验证只会考虑形式数据。\r\n            \r\n","End the scope of a prefix-URI mapping.":"结束前缀-URI映射的范围。\r\n","org.w3c.dom.Node.COMMENT_NODE":"org.w3c.dom.node.comment_node\r\n","An HTTP connection for use on the client side.":"HTTP连接用于客户端。\r\n","Compile an XPath expression for later evaluation.":"编译XPATH表达式以进行以后的评估。\r\n","Report the start of DTD declarations, if any.":"报告DTD声明的开始（如果有）。\r\n"," to the given\n            value and returns the old value.":" 给定\r\n            价值并返回旧值。\r\n","Checks whether a character is an HTTP separator.":"检查字符是否是HTTP分离器。\r\n","\r\n            Copies the caller's buffer into this writer, potentially across multiple buffers from the underlying writer.\r\n            ":"\r\n            将呼叫者的缓冲区复制到这位作者中，并有可能跨越基础作者的多个缓冲区。\r\n            \r\n","Defines a factory API that enables applications to configure and\n            obtain a SAX based parser to parse XML documents.":"定义一个使应用程序配置和\r\n            获取基于SAX的解析器以解析XML文档。\r\n","javax.xml.validation.ValidatorHandler":"javax.xml.Validation.ValidatorHandler\r\n","javax.xml.datatype.DatatypeConstants.JULY":"javax.xml.datatype.datatypeconstants.july\r\n","\n            function to its input, and then applies this function to the result.":"\r\n            函数到其输入，然后将此函数应用于结果。\r\n","org.xmlpull.v1.XmlSerializer.text(char[], int, int)":"org.xmlpull.v1.xmlserializer.text（char []，int，int）\r\n","Constructs an InvalidPreferencesFormatException with the specified\n            detail message and cause.":"用指定的\r\n            详细信息和原因。\r\n","javax.xml.transform.TransformerException.getLocationAsString()":"javax.xml.transform.transformerexception.getLocationAsstring（）\r\n","Acts as a holder for a transformation Source tree in the\n            form of a Document Object Model (DOM) tree.":"充当转换源树的持有者\r\n            文档对象模型（DOM）树的形式。\r\n","A listener for receiving preference change events.":"收到偏好变更事件的听众。\r\n","\r\n            Adds authorization policies with the specified names to the endpoint(s).\r\n            ":"\r\n            将带有指定名称的授权策略添加到端点。\r\n            \r\n","HTTP POST method.":"HTTP Post方法。\r\n","org.apache.http.params.CoreConnectionPNames.MAX_HEADER_COUNT":"org.apache.http.params.coreconnectionpnames.max_header_count\r\n","Sets the protocol versions enabled for use on this connection.":"设置启用该连接的协议版本。\r\n","Constructor allowing for complete value spaces allowed by\n            W3C XML Schema 1.":"构造函数允许完整的价值空间\r\n            W3C XML模式1。\r\n",".\r\n            Otherwise, this will fallback to ":"。\r\n            否则，这将后备到\r\n","javax.xml.validation.SchemaFactoryLoader":"javax.xml.Validation.schemafactoryloader\r\n","Remove a log Handler.":"卸下日志处理程序。\r\n","if an I/O error occurs while creating the socket":"如果创建套接字时发生I/O错误\r\n","javax.xml.transform.TransformerConfigurationException.TransformerConfigurationException(java.lang.String, javax.xml.transform.SourceLocator, java.lang.Throwable)":"javax.xml.transform.transformerconfigurationException.TransFormerConfigurationException（java.lang.string，javax.xml.transform.transform.sourcelform.sourcelocator，java.lang.lang.throwable）\r\n","An implementation specific string describing the error that occurred.":"描述发生错误的实现特定字符串。\r\n","javax.crypto.SecretKeyFactorySpi.engineTranslateKey(javax.crypto.SecretKey)":"javax.crypto.secretkeyfactoryspi.enginetranslatekey（javax.crypto.secretkey）\r\n","org.xml.sax.HandlerBase.characters(char[], int, int)":"org.xml.sax.handlerbase.Characters（char []，int，int）\r\n","Construct a StreamSource from a character reader.":"从角色读取器中构造溪流。\r\n","javax.sql.RowSet.setArray(int, java.sql.Array)":"javax.sql.Rowset.setArray（int，java.sql.array）\r\n"," and free all associated resources.":" 并免费提供所有相关资源。\r\n","Sets the ZIP file comment.":"设置zip文件注释。\r\n","DeflaterOutputStream#flush() flush()":"Deflateroutputstream＃flush（）flush（）（）\r\n","\r\n            by its parent in the render tree.\r\n            ":"\r\n            由其父母在渲染树中。\r\n            \r\n","An interface to an object that is able to build, or augment, a DOM tree\n from various input sources.":"能够构建或增强的对象的接口\r\n 来自各种输入来源。\r\n","Creates a new ConnectionClosedException with the specified detail message.":"使用指定的详细信息创建一个新的ConnectionClosedException。\r\n","javax.sql.ConnectionEventListener":"Javax.sql.ConnectionEventListener\r\n","javax.xml.parsers.DocumentBuilderFactory.isNamespaceAware()":"javax.xml.parsers.documentbuilderfactory.isnamespaceaware（）\r\n","\r\n            The name of this instance of ":"\r\n            这个实例的名称\r\n","Step: open connection to target.":"步骤：与目标打开连接。\r\n","javax.crypto.Cipher.WRAP_MODE":"javax.crypto.cipher.wrap_mode\r\n","javax.sql.RowSet.setNull(java.lang.String, int, java.lang.String)":"javax.sql.Rowset.setNull（java.lang.string，int，java.lang.string）\r\n","loggerName":"loggername\r\n","javax.crypto.spec.DHPublicKeySpec":"javax.crypto.spec.dhpublickeyspec\r\n","The <code>Text</code> interface inherits from <code>CharacterData</code>\n            and represents the textual content (termed <a href='http://www.":"<code> text </code>接口从<code> targindata </code>继承\r\n            并表示文本内容（称为<a href ='http：//www。\r\n","Sets the compression level for subsequent entries which are DEFLATED.":"为后续条目设置压缩级别。\r\n","java.util.concurrent.atomic.AtomicReference.weakCompareAndSet(java.lang.Object, java.lang.Object)":"java.util.concurrent.atomic.atomicreference.weakcompareandset（java.lang.Object，java.lang.Object）\r\n","if the length of the specified key data starting at offset is\n             less than 8.\n":"如果从偏移量开始的指定密钥数据的长度为\r\n             小于8。\r\n\r\n","javax.xml.transform.dom.DOMSource.DOMSource(org.w3c.dom.Node)":"javax.xml.transform.dom.domsource.domsource（org.w3c.dom.node）\r\n","java.util.zip.ZipOutputStream.ZipOutputStream(java.io.OutputStream, java.nio.charset.Charset)":"java.util.zip.zipoutputstream.zipoutputstream（java.io.outputstream，java.nio.chareet.charset））\r\n","if the backing store is unavailable or causes an operation\n             failure.\n":"如果备用商店不可用或导致操作\r\n             失败。\r\n\r\n","Namespace URI to use to represent that there is no Namespace.":"命名空间URI用于表示没有名称空间。\r\n","PasswordCallback":"passwordCallback\r\n","java.util.zip.Deflater.DEFAULT_COMPRESSION":"java.util.zip.deflater.default_compression\r\n","A SAX ContentHandler that may be used to process SAX\n            parse events (parsing transformation instructions) into a Templates object.":"可以用来处理SAX的SAX ContentHandler\r\n            将事件（解析转换指令）解析为模板对象。\r\n","\r\n            Gets or sets the child content of the component.\r\n            ":"\r\n            获取或设置组件的子内容。\r\n            \r\n","The type information associated with this attribute.":"与此属性关联的类型信息。\r\n","javax.security.cert.X509Certificate.getSigAlgParams()":"javax.security.cert.x509certificate.getsigalgparams（）\r\n","NOT_SUPPORTED_ERR: Always thrown if the current document does not\n   support the ":"not_supported_err：如果当前文档不在\r\n   支持\r\n","Protected constructor to be called by factory implementations.":"受保护的构造函数将由工厂实施调用。\r\n","Returns the default charset to be used for writing content body, \n when no charset explicitly specified.":"返回用于编写内容主体的默认字符集，\r\n 当未明确指定字符集时。\r\n","Preferences#putBoolean(String,boolean)":"首选项＃putboolean（字符串，布尔值）\r\n","java.util.concurrent.RunnableFuture.run()":"java.util.concurrent.runnablefuture.run（）\r\n","\r\n            Rendering a root component is an asynchronous operation. Clients may choose to not await the returned task to\r\n            start, but not wait for the entire render to complete.\r\n            ":"\r\n            渲染根部分是一种异步操作。客户可以选择不等待返回的任务\r\n            开始，但不要等待整个渲染完成。\r\n            \r\n","\r\n            The response.\r\n            ":"\r\n            响应。\r\n            \r\n"," with values from the JSON string.":" 带有JSON字符串的值。\r\n","The list of the parameters supported by this\n ":"此支持的参数列表\r\n \r\n","javax.xml.datatype.Duration.getSeconds()":"javax.xml.datatype.duration.getSeconds（）\r\n","A special value indicating \"no route\".":"指示“无路线”的特殊值。\r\n","\r\n            Returns the schemes in priority order for request handling.\r\n            ":"\r\n            按优先顺序返回请求处理的计划。\r\n            \r\n","Sets the timeout in milliseconds used when retrieving a\n ":"将超时以毫秒为单位设置\r\n \r\n","java.util.logging.Logger.finer(java.lang.String)":"java.util.logging.logger.finer（java.lang.string）\r\n","Modifies or replaces the task used to execute a runnable.":"修改或替换用于执行可运行的任务。\r\n","Protected constructor as ":"受保护的构造函数\r\n","Get the prompt.":"获取提示。\r\n","javax.xml.datatype.DatatypeConstants.DURATION_YEARMONTH":"javax.xml.datatype.datatypeconstants.duration_yearmonth\r\n"," invocation.":" 调用。\r\n","Returns the server's certificate chain which was established\n            as part of defining the session.":"返回已建立的服务器的证书链\r\n            作为定义会话的一部分。\r\n","For backward compatibility, when implementations for\n      earlier versions of JAXP is used, this exception will be\n      thrown.":"为了向后兼容，当实现\r\n      使用了JAXP的较早版本，此例外将是\r\n      扔。\r\n","javax.xml.datatype.Duration.compare(javax.xml.datatype.Duration)":"javax.xml.datatype.duration.compare（javax.xml.datatype.duration）\r\n","An ICertificateValidator cannot be specified at the same time as an HttpMessageHandler unless it is a WebRequestHandler.":"除非是WebRequestHandler，否则不能同时指定ICertificateValidator。\r\n","This constant specifies that the meta characters '^' and '$' match only\n the beginning and end of an input line, respectively. ":"这个常数指定元字符'^'和'$'匹配\r\n 输入线的开始和结尾。\r\n","java.util.logging.LogRecord.setSequenceNumber(long)":"java.util.logging.logrocord.setSequencenumber（long）\r\n","Releases the connection without the option of keep-alive.":"释放连接，而无需选择保持静脉。\r\n","The location of the error.":"错误的位置。\r\n","java.util.concurrent.atomic.AtomicIntegerFieldUpdater.accumulateAndGet(java.lang.Object, int, java.util.function.IntBinaryOperator)":"java.util.concurrent.atomic.atomicintegerfieldupdater.accumulateandget（java.lang.object，int，java.util.function.intbinaryoperator）\r\n"," or\r\n            ":" 或者\r\n            \r\n","DocumentBuilder":"DocumentBuilder\r\n","javax.crypto.KeyGeneratorSpi.engineGenerateKey()":"javax.crypto.keygeneratorspi.EngineGeneresekey（）\r\n","\r\n            For internal use only.\r\n            ":"\r\n            仅限内部使用。\r\n            \r\n","Pattern":"图案\r\n","Creates a new instance of a XML Serializer.":"创建XML序列化器的新实例。\r\n","javax.net.ssl.KeyManagerFactory.init(java.security.KeyStore, char[])":"javax.net.ssl.keymanagerfactory.init（java.security.keystore，char []）\r\n","Checks whether a socket provides a secure connection.":"检查插座是否提供安全连接。\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.isHeldExclusively()":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.isheldexclusively（）\r\n","\r\n            Acquires a new buffer if necessary to ensure that some given number of bytes can be written to a single buffer.\r\n            ":"\r\n            如有必要，可以获取新的缓冲区，以确保可以将一些给定数量的字节写入单个缓冲区。\r\n            \r\n","The default maximum number of connections allowed overall ":"默认的最大连接数量允许总体上\r\n","java.util.prefs.NodeChangeListener":"java.util.prefs.nodechangelistener\r\n","Create a <code>Duration</code> of type <code>xdt:yearMonthDuration</code> by parsing its <code>String</code> representation,\n            \"<em>PnYnM</em>\", <a href=\"http://www.":"创建<code>持续时间</code> type <code> XDT：YearMonthDuration </code>通过解析其<code>字符串</code>表示，\r\n            “ <em> pnynm </em>”，<a href =“ http：//www。\r\n","\r\n            Indicates the device type that caused the event.\r\n            Must be one of the strings mouse, pen or touch, or an empty string.\r\n            ":"\r\n            指示导致事件的设备类型。\r\n            必须是鼠标，笔或触摸或空字符串之一。\r\n            \r\n","javax.sql.StatementEventListener.statementClosed(javax.sql.StatementEvent)":"javax.sql.StatementEventListener.StatementClosed（Javax.sql.StatementEmpEnt）\r\n","if there is a problem accessing the database, or if the\n             cursor is not on a valid row (before the first row, after the\n             last one or pointing to the insert row).\n":"如果访问数据库有问题，或者\r\n             光标不在有效的行上（在第一行之前，之后\r\n             最后一个或指向插入行）。\r\n\r\n","Returns the long value represented by the string associated with the\n            specified key in this preference node.":"返回由与之关联的字符串表示的长值\r\n            在此偏好节点中指定键。\r\n","javax.crypto.SecretKeyFactory.translateKey(javax.crypto.SecretKey)":"javax.crypto.secretkeyfactory.translatekey（javax.crypto.secretkey）\r\n","Get the location information as a string.":"将位置信息作为字符串获取。\r\n","Creates and executes a ScheduledFuture that becomes enabled after the\n            given delay.":"创建并执行一个计划中的future\r\n            给定延迟。\r\n","never. Included for API\n     compatibility with other Java implementations.\n":"绝不。包括API\r\n     与其他Java实现的兼容性。\r\n\r\n","java.util.logging.Logger.getAnonymousLogger(java.lang.String)":"java.util.logging.logger.getAnonymouslogger（java.lang.string）\r\n","Closes this stream, causing all close handlers for this stream pipeline\n            to be called.":"关闭此流，导致该流管线的所有关闭处理程序\r\n            被称为。\r\n","javax.xml.transform.sax.SAXResult.getHandler()":"javax.xml.transform.sax.saxresult.gethandler（）\r\n","When the\n            supplied index does not identify an attribute.":"当。。。的时候\r\n            提供的索引无法识别属性。\r\n","Returns true if this Map contains the specified attribute name (key).":"如果此地图包含指定的属性名称（键），则返回true。\r\n","\r\n            Gets the changes to the render tree since a previous state.\r\n            ":"\r\n            从以前的状态开始获取渲染树的更改。\r\n            \r\n","java.util.concurrent.ThreadPoolExecutor.setMaximumPoolSize(int)":"java.util.concurrent.threadpoolexecutor.setmaximumpoolsize（int）\r\n","org.json.JSONArray.getBoolean(int)":"org.json.jsonarray.getboolean（int）\r\n","javax.crypto.Cipher.DECRYPT_MODE":"javax.crypto.cipher.decrypt_mode\r\n","NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly or\n   if the parent of the node being inserted is readonly.\n   ":"no_modification_allowed_err：如果此节点已阅读或\r\n   如果要插入的节点的母体会被阅读。\r\n   \r\n","if the length of the key data starting at offset is less than\n             24.":"如果从偏移量开始的关键数据的长度小于\r\n             24。\r\n","javax.xml.datatype.Duration.getTimeInMillis(java.util.Calendar)":"javax.xml.datatype.duration.getTimeinmillis（java.util.calendar）\r\n","java.util.concurrent.ThreadPoolExecutor.setKeepAliveTime(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.threadpoolexecutor.setKepalivetime（long，java.util.concurrent.timeunit）\r\n","Set  the <code>Result</code> associated with this\n            <code>TransformerHandler</code> to be used for the transformation.":"设置<code>结果</code>与此关联\r\n            <code> TransformerHandler </code>用于转换。\r\n","java.util.regex.MatchResult":"java.util.regex.matchresult\r\n"," if no URI is\n available.":" 如果没有URI\r\n 可用的。\r\n","javax.crypto.KeyGenerator.generateKey()":"javax.crypto.keygenerator.generateKey（）\r\n","org.json.JSONException":"org.json.jsonexception\r\n","Creates a new <code>JarEntry</code> with fields taken from the\n            specified <code>ZipEntry</code> object.":"创建一个新的<code> Jarentry </code>，并从中获取字段\r\n            指定<code> zipentry </code>对象。\r\n","\r\n            The index in the ":"\r\n            索引\r\n","\r\n            Clears all fields in preparation to recycle this instance.\r\n            ":"\r\n            清除所有字段以准备回收此实例。\r\n            \r\n","If values are not a valid representation of a ":"如果值不是一个有效的表示\r\n","supplier":"供应商\r\n","org.w3c.dom.DOMError":"org.w3c.dom.domerror\r\n","java.util.jar.JarEntry.JarEntry(java.util.zip.ZipEntry)":"java.util.jar.jarentry.jarentry（java.util.zip.zipentry）\r\n","javax.xml.datatype.DatatypeFactory.newDurationDayTime(boolean, int, int, int, int)":"javax.xml.datatype.datatypefactory.newdurationdaytime（boolean，int，int，int，int，int）\r\n","\r\n            Extension methods to add cookie policy capabilities to an HTTP application pipeline.\r\n            ":"\r\n            扩展方法将cookie策略功能添加到HTTP应用程序管道中。\r\n            \r\n","javax.crypto.MacSpi":"javax.crypto.macspi\r\n","java.util.function.DoubleUnaryOperator.identity()":"java.util.function.doubleunaryoperator.Identity（）\r\n","Removes all parameters from this collection.":"从此集合中删除所有参数。\r\n","<code>SSLServerSocketFactory</code>s create\n            <code>SSLServerSocket</code>s.":"<code> sslserversocketFactory </code> s创建\r\n            <code> sslserversocket </code> s。\r\n","in case of a problem or the connection was aborted":"如果出现问题或连接中止\r\n","A reusable synchronization barrier, similar in functionality to\n            ":"可重复使用的同步屏障，功能类似于\r\n            \r\n","Return an array of certificate authority certificates\n            which are trusted for authenticating peers.":"退还一系列证书授权证书\r\n            值得信赖的认证同龄人。\r\n","The namespace of the type declared for the associated element or\n attribute or ":"为关联元素声明的类型的名称空间或\r\n 属性或\r\n","java.util.zip.GZIPInputStream":"java.util.zip.gzipinputstream\r\n","org.xml.sax.InputSource.getSystemId()":"org.xml.sax.inputsource.getSystemID（）\r\n","java.util.concurrent.atomic.LongAccumulator.floatValue()":"java.util.concurrent.atomic.longaccumulator.floatvalue（）\r\n","javax.sql.RowSet.setString(int, java.lang.String)":"Javax.sql.Rowset.SetString（int，java.lang.string）\r\n"," allows a component to accept arbitrary additional\r\n            attributes, and pass them to another component, or some element of the underlying markup.\r\n            ":" 允许组件接受任意额外\r\n            属性，然后将它们传递到另一个组件或基础标记的某些元素。\r\n            \r\n","java.util.stream.Collector.combiner()":"java.util.stream.collector.combiner（）\r\n","org.json.JSONArray.optInt(int, int)":"org.json.jsonarray.optint（int，int）\r\n","javax.net.ssl.SSLEngine.setEnabledProtocols(java.lang.String[])":"javax.net.ssl.sslengine.setenabledprotocols（java.lang.string []）\r\n","When called, indicates that compression should end with the current\n            contents of the input buffer.":"调用时，表示压缩应以当前\r\n            输入缓冲区的内容。\r\n","\r\n            Gets or sets the time at which the authentication ticket expires.\r\n            ":"\r\n            获取或设置身份验证票过期的时间。\r\n            \r\n","javax.xml.parsers.DocumentBuilderFactory.isXIncludeAware()":"javax.xml.parsers.documentbuilderfactory.isxincludeaware（）\r\n","java.util.zip.Deflater.BEST_COMPRESSION":"java.util.zip.deflater.best_compression\r\n","StreamSource":"Streamsource\r\n","org.xml.sax.helpers.DefaultHandler.ignorableWhitespace(char[], int, int)":"org.xml.sax.helpers.defaulthandler.ignorablewhitespace（char []，int，int）\r\n"," to\n            ":" 至\r\n            \r\n","org.xmlpull.v1.XmlPullParser.getNamespaceUri(int)":"org.xmlpull.v1.xmlpullparser.getnamespaceuri（int）\r\n","if the current thread is interrupted\n         (and interruption of thread suspension is supported)\n":"如果当前线程中断\r\n         （并支持线程悬架的中断）\r\n\r\n"," from a string representation of\n            an X.":" 从字符串表示\r\n            一个X。\r\n"," for the given authentication scope.":" 对于给定的身份验证范围。\r\n","java.util.function.Predicate.and(java.util.function.Predicate)":"java.util.function.predicate.and（java.util.function.predicate）\r\n","if the specified key or value is null,\n         and this map does not permit null keys or values\n         (":"如果指定的密钥或值为null，则\r\n         而且该地图不允许零键或值\r\n         （（\r\n","Obtains the buffer with the formatted header.":"使用格式的标头获得缓冲区。\r\n","javax.xml.transform.TransformerException.getException()":"javax.xml.transform.transformerexception.getException（）\r\n","A dense indexed sequence of values.":"一个密集的索引序列。\r\n","Create a new TransformerException.":"创建一个新的转换感受。\r\n","The <code>JarFile</code> class is used to read the contents of a jar file\n            from any file that can be opened with <code>java.":"<code> jarfile </code>类用于读取JAR文件的内容\r\n            从可以使用<code> Java打开的任何文件中。\r\n"," using the specified server name type.":" 使用指定的服务器名称类型。\r\n","Clears all cookies.":"清除所有饼干。\r\n"," that supplies a value with\r\n             this name.\r\n            \r\n             If null, the parameter value will be supplied by the closest ancestor\r\n             ":" 提供价值\r\n             这个名字。\r\n            \r\n             如果null，参数值将由最接近的祖先提供\r\n             \r\n","Returns the block size (in bytes).":"返回块大小（以字节为单位）。\r\n","javax.crypto.SecretKeyFactory.SecretKeyFactory(javax.crypto.SecretKeyFactorySpi, java.security.Provider, java.lang.String)":"javax.crypto.secretkeyfactory.secretkeyfactory（javax.crypto.secretkeyfactoryspi，java.security.provider，java.lang.string）\r\n","The absolute base URI of this node or ":"该节点的绝对基础URI或\r\n","\r\n            Gets the access token expiration time.\r\n            ":"\r\n            获取访问令牌到期时间。\r\n            \r\n","\r\n            A ClaimAction that selects a top level value from the json user data with the given key name and adds it as a Claim.\r\n            This no-ops if the key is not found or the value is empty.\r\n            ":"\r\n            从JSON用户数据中选择具有给定关键名称的最高级别值并将其添加为索赔的索赔。\r\n            如果找不到键或值为空的键，则此无操作。\r\n            \r\n","\n attribute names for client.":"\r\n 客户端的属性名称。\r\n","Initialize a ":"初始化\r\n","javax.crypto.spec.DESedeKeySpec.DESedeKeySpec(byte[])":"javax.crypto.spec.desedekeyspec.desedekeyspec（byte []）\r\n","Returns a socket layered over an existing socket connected to the named\n            host, at the given port.":"返回连接到命名的现有插座上的插座\r\n            主机，在给定的端口。\r\n"," or\n         ":" 或者\r\n         \r\n","Indicates whether or not the factory is configured to produce\n            parsers which are namespace aware. -or- Specifies that the parser produced by this code will\n            provide support for XML namespaces.":"指示工厂是否配置为生产\r\n            名称空间的解析器。 - 或 - 指定该代码产生的解析器将\r\n            提供XML名称空间的支持。\r\n","\r\n            Gets the value of the parameter with the specified name.\r\n            ":"\r\n            用指定名称获取参数的值。\r\n            \r\n","\r\n            Writes an ":"\r\n            写一个\r\n","\r\n            The normalized pressure of the pointer input in the range of 0 to 1,\r\n            where 0 and 1 represent the minimum and maximum pressure the hardware is capable of detecting, respectively.\r\n            ":"\r\n            指针输入的归一化压力在0到1的范围内\r\n            其中0和1表示硬件分别能够检测到最小和最大压力。\r\n            \r\n","org.xml.sax.XMLReader":"org.xml.sax.xmlreader\r\n","Creates a new, unconnected socket.":"创建一个新的，无连接的插座。\r\n","java.util.prefs.AbstractPreferences.flushSpi()":"java.util.prefs.abstractpreferences.flushspi（）\r\n","A generic HTTP message.":"通用HTTP消息。\r\n","java.util.concurrent.ThreadPoolExecutor.getCorePoolSize()":"java.util.concurrent.threadpoolexecutor.getCorePoolSize（）\r\n","org.apache.http.conn.scheme.SocketFactory.connectSocket(java.net.Socket, java.lang.String, int, java.net.InetAddress, int, org.apache.http.params.HttpParams)":"org.apache.http.conn.scheme.socketfactory.connectsocket（java.net.socket，java.lang.string，int，int，java.net.inet.inetadress，int，org.apache.apache.http.params.httppparams））\r\n","javax.xml.datatype.Duration.addTo(java.util.Calendar)":"javax.xml.datatype.duration.addto（java.util.calendar）\r\n","javax.crypto.CipherSpi.engineUpdateAAD(byte[], int, int)":"javax.crypto.cipherspi.engineupdateaad（byte []，int，int）\r\n","javax.sql.RowSet.setAsciiStream(java.lang.String, java.io.InputStream)":"javax.sql.Rowset.setasciistream（java.lang.string，java.io.inputstream）\r\n","java.util.concurrent.atomic.AtomicIntegerArray.set(int, int)":"java.util.concurrent.atomic.atomicintegerarray.set（int，int）\r\n",".\r\n            Backing field for the ":"。\r\n            支持领域\r\n","javax.xml.datatype.XMLGregorianCalendar.toGregorianCalendar(java.util.TimeZone, java.util.Locale, javax.xml.datatype.XMLGregorianCalendar)":"javax.xml.datatype.xmlgregoriancalendar.togregoriancalendar（java.util.timezone，java.util.util.locale，javax.xml.datatype.xmlgregoriancalendar）\r\n"," from the requirements \r\n            in this instance.\r\n            ":" 从要求\r\n            在这种情况下。\r\n            \r\n","Interface for reading an XML document using callbacks.":"用于使用回调读取XML文档的接口。\r\n","Receive notification of character data.":"接收字符数据的通知。\r\n","java.util.concurrent.ScheduledThreadPoolExecutor.setRemoveOnCancelPolicy(boolean)":"java.util.concurrent.scheduledthreadpoolexecutor.setremoveoncancelpolicy（boolean）\r\n","if the identity of the peer has not been verified..":"如果尚未验证对等的身份。\r\n","java.util.function.Function.andThen(java.util.function.Function)":"java.util.function.function.andthen（java.util.function.function.function）\r\n","org.apache.http.params.HttpParams.setIntParameter(java.lang.String, int)":"org.apache.http.params.httpparams.setintparameter（java.lang.string，int）\r\n","Create a new <code>TransformerFactoryConfigurationError</code> with no\n            detail message.":"创建一个新的<code> TranslererFactoryConfigurationError </code> no\r\n            详细信息。\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryReleaseShared(long)":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.treleareaseshared（long）\r\n","org.xml.sax.ext.Locator2Impl.Locator2Impl()":"org.xml.sax.ext.locator2impl.locator2impl（）\r\n","java.util.function.IntBinaryOperator":"java.util.function.intbinaryoperator\r\n","Static constant for a 419 error.":"419误差的静态常数。\r\n","417 Expectation Failed":"417期望失败\r\n","java.util.regex.Matcher.group(int)":"java.util.regex.matcher.group（int）\r\n","java.util.concurrent.atomic.AtomicIntegerArray.getAndAccumulate(int, int, java.util.function.IntBinaryOperator)":"java.util.concurrent.atomic.atomicintegerarray.getanccumulate（int，int，java.util.function.intbinaryoperator）\r\n","java.util.concurrent.LinkedBlockingDeque.offerLast(java.lang.Object)":"java.util.concurrent.linkedblockingdeque.offerlast（java.lang.object）\r\n","org.xml.sax.helpers.XMLFilterImpl.XMLFilterImpl(org.xml.sax.XMLReader)":"org.xml.sax.helpers.xmlfilterimpl.xmlfilterimpl（org.xml.sax.xmlreader）\r\n","javax.crypto.spec.DHPrivateKeySpec.getG()":"javax.crypto.spec.dhprivatekeyspec.getg（）\r\n"," do not support conditions.":" 不支持条件。\r\n","A collection of utilities for encoding URLs.":"用于编码URL的实用程序集合。\r\n","java.util.concurrent.locks.ReentrantLock":"java.util.concurrent.locks.Reentrantlock\r\n","Prepare a request for sending.":"准备发送请求。\r\n"," in use may itself have a minimum array length as well,\r\n            in which case the higher of the two minimums dictate the minimum array size that will be allocated.\r\n            ":" 在使用中本身也可能具有最小阵列长度，\r\n            在这种情况下，两个最小值中的较高指示将分配的最小阵列大小。\r\n            \r\n","java.util.concurrent.locks.ReentrantLock.hasWaiters(java.util.concurrent.locks.Condition)":"java.util.concurrent.locks.reentrantlock.haswaiters（java.util.concurrent.locks.condition）\r\n","getXMLSchemaType()":"getxmlSchematype（）\r\n","Creates a new <code>JarOutputStream</code> with no manifest.":"创建一个新的<code> jaroutputstream </code>没有清单。\r\n","Returns true unless the attribute value was provided\n            by DTD defaulting.":"除非提供属性值，否则返回true\r\n            由DTD默认设置。\r\n","if feature string is null\n":"如果功能字符串为null\r\n\r\n","\r\n             The component used to get cookies from the request or set them on the response.\r\n            \r\n             ChunkingCookieManager will be used by default.\r\n             ":"\r\n             该组件用于从请求中获取cookie或将其设置为响应。\r\n            \r\n             默认情况下将使用ChunkingCookieManager。\r\n             \r\n","If for some reason the\n TemplatesHandler cannot be created.\n":"如果出于某种原因\r\n 无法创建模板Handler。\r\n\r\n","DatatypeConstants#DURATION_DAYTIME":"datatypeconstants＃duration_daytime\r\n","The public identifier for this input source.":"此输入源的公共标识符。\r\n","Associates a string representing the specified double value with the\n            specified key in this preference node.":"将代表指定双值的字符串与\r\n            在此偏好节点中指定键。\r\n","javax.xml.parsers.DocumentBuilder.parse(java.lang.String)":"javax.xml.parsers.documentbuilder.parse（java.lang.string）\r\n","\r\n            True when there is no more data in the ":"\r\n            当没有更多数据中的数据\r\n","Get the source Logger's name. -or- Set the source Logger's name.":"获取源记录器的名称。 - 或 - 设置源记录器的名称。\r\n","Extended version of the ":"扩展版本的\r\n"," operation\n         is not supported by this map":" 手术\r\n         该地图不支持\r\n","Acquires the given number of permits from this semaphore, if all\n            become available within the given waiting time and the current\n            thread has not been Thread#interrupt interrupted.":"如果所有\r\n            在给定的等待时间和当前\r\n            线程尚未被线程＃中断中断。\r\n","javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder()":"javax.xml.parsers.documentbuilderfactory.newdocumentbuilder（）\r\n"," object that handles this document.":" 处理该文档的对象。\r\n","Returns the value of the specified attribute name, or null if the\n            attribute name was not found.":"返回指定属性名称的值，如果是\r\n            找不到属性名称。\r\n","org.xml.sax.helpers.XMLFilterImpl.notationDecl(java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.helpers.xmlfilterimpl.notationdecl（java.lang.string，java.lang.string，java.lang.string）\r\n","java.util.concurrent.ThreadPoolExecutor.getThreadFactory()":"java.util.concurrent.threadpoolexecutor.getThreadFactory（）\r\n","javax.security.cert.X509Certificate.checkValidity()":"javax.security.cert.x509certificate.checkvality（）\r\n","javax.crypto.ExemptionMechanism.getInstance(java.lang.String, java.security.Provider)":"javax.crypto.ExemptionMechanism.GetInstance（Java.lang.String，Java.security.provider）\r\n","if encoding errors are detected":"如果检测到编码错误\r\n","One element of an HTTP ":"http的一个元素\r\n","Create a new <code>ParserConfigurationException</code> with no\n            detail message.":"创建一个新的<code> parserconFigurationException </code> no\r\n            详细信息。\r\n"," and\r\n            ":" 和\r\n            \r\n","javax.net.ssl.SSLException.SSLException(java.lang.String, java.lang.Throwable)":"javax.net.ssl.sslexception.sslexception（java.lang.string，java.lang.throwable）\r\n","javax.net.ssl.HandshakeCompletedEvent.getPeerPrincipal()":"javax.net.ssl.handshakecomplededevent.getpeerprincipal（）\r\n","javax.sql.RowSet.setLong(int, long)":"javax.sql.Rowset.setlong（int，long）\r\n","Retrieves and removes the head of this queue, if another thread\n            is currently making an element available.":"如果另一个线程，请检索并卸下此队列的头部\r\n            目前正在提供一个元素。\r\n","org.w3c.dom.Document.createAttributeNS(java.lang.String, java.lang.String)":"org.w3c.dom.document.createattributens（java.lang.string，java.lang.string）\r\n","\r\n            Makes a decision if authorization is allowed based on a specific requirement and resource.\r\n            ":"\r\n            如果根据特定要求和资源允许授权，则做出决定。\r\n            \r\n","\r\n            Maps schemes by name.\r\n            ":"\r\n            地图方案按名称。\r\n            \r\n","javax.net.ssl.TrustManagerFactory.init(java.security.KeyStore)":"javax.net.ssl.trustmanagerfactory.init（java.security.keystore）\r\n","put(name, value)":"放（名称，值）\r\n","java.util.concurrent.locks.ReentrantLock.getQueuedThreads()":"java.util.concurrent.locks.reentrantlock.getqueuedthreads（）\r\n","java.util.logging.Logger.logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)":"java.util.logging.logger.logrb（java.util.logging.level，java.lang.string，java.lang.string，java.lang.string，java.lang.lang.lang.string，java.lang.object）\r\n","\r\n            Appends a frame representing a string-valued attribute.\r\n            ":"\r\n            附加代表字符串值属性的帧。\r\n            \r\n","\r\n            The default maximum size of characters in a cookie to send back to the client.\r\n            ":"\r\n            cookie中字符的默认最大大小以发送回客户端。\r\n            \r\n","javax.security.auth.x500.X500Principal.getName(java.lang.String)":"javax.security.auth.x500.x500 principal.getName（java.lang.string）\r\n","javax.net.ssl.SSLParameters.getAlgorithmConstraints()":"javax.net.ssl.sslparameters.getalgorithmconstraints（）\r\n","org.xml.sax.helpers.XMLFilterImpl.getContentHandler()":"org.xml.sax.helpers.xmlfilterimpl.getContentHandler（）\r\n","Returns the number of attributes of the current start tag, or\n -1 if the current event type is not START_TAG":"返回当前开始标签的属性数量，或\r\n -1如果当前事件类型不是start_tag\r\n","Date format pattern used to generate the header in RFC 1123 format.":"日期格式模式用于以RFC 1123格式生成标头。\r\n","org.w3c.dom.Node.ENTITY_REFERENCE_NODE":"org.w3c.dom.node.entity_reference_node\r\n","key escrow":"钥匙托管\r\n","java.util.zip.Inflater":"java.util.zip.inflater\r\n","javax.crypto.spec.DHPublicKeySpec.DHPublicKeySpec(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)":"javax.crypto.spec.dhpublickeyspec.dhpublickeyspec（java.math.biginteger，java.math.biginteger，java.math.biginteger）\r\n","java.util.concurrent.atomic.AtomicReferenceArray.getAndSet(int, java.lang.Object)":"java.util.concurrent.atomic.atomicreferencearray.getandset（int，java.lang.object）\r\n","Extends the <code>SSLSession</code> interface to support additional\n            session attributes.":"扩展<code> sslsession </code>接口以支持其他\r\n            会话属性。\r\n","\r\n            Specifies the top-level model object for the form. An edit context will\r\n            be constructed for this model. If using this parameter, do not also supply\r\n            a value for ":"\r\n            指定表单的顶级模型对象。编辑上下文将\r\n            为此模型构建。如果使用此参数，请勿提供\r\n            一个值\r\n","org.xml.sax.ext.Locator2Impl.setXMLVersion(java.lang.String)":"org.xml.sax.ext.locator2impl.setxmlversion（java.lang.string）\r\n","The <code>Element</code> interface represents an element in an HTML or XML\n            document.":"<code>元素</code>接口表示HTML或XML中的元素\r\n            文档。\r\n","Log a method entry.":"记录方法条目。\r\n","org.xml.sax.helpers.XMLFilterImpl.processingInstruction(java.lang.String, java.lang.String)":"org.xml.sax.helpers.xmlfilterimpl.processinginstruction（java.lang.string，java.lang.string）\r\n","Returns the given attributes value.":"返回给定的属性值。\r\n","Register the entity resolver.":"注册实体解析器。\r\n","Acts as an holder for SAX-style Source.":"充当萨克斯风格来源的持有者。\r\n","java.util.concurrent.ConcurrentMap.remove(java.lang.Object, java.lang.Object)":"java.util.concurrent.concurrentmap.remove（java.lang.object，java.lang.object）\r\n","\r\n            Specifies the field for which validation messages should be displayed.\r\n            ":"\r\n            指定应显示验证消息的字段。\r\n            \r\n","\r\n            Gets or sets a value that determines the maximum number of disconnected circuit state details\r\n            are retained by the server.\r\n            ":"\r\n            获取或设置一个确定最大断开电路状态详细信息数量的值\r\n            由服务器保留。\r\n            \r\n","org.w3c.dom.DOMStringList":"org.w3c.dom.domstringlist\r\n","javax.crypto.Cipher.getParameters()":"javax.crypto.cipher.getParameters（）\r\n","\r\n            Builds conventions that will be used for customization of ComponentHub ":"\r\n            构建将用于自定义ComponentHub的约定\r\n","Acquires the read lock only if the write lock is not held by\n another thread at the time of invocation.":"仅在不持有写锁的情况下才能获取读取锁\r\n 调用时的另一个线程。\r\n","javax.net.ssl.SSLEngineResult.getHandshakeStatus()":"javax.net.ssl.sslengineresult.gethandshakestatus（）\r\n","Returns a new CompletionStage that, when this and the other\n            given stage both complete normally, is executed with the two\n            results as arguments to the supplied function.":"返回一个新的完整舞台，当\r\n            给定阶段正常完成，两者都执行\r\n            结果作为所提供函数的参数。\r\n","javax.crypto.spec.SecretKeySpec":"javax.crypto.spec.secretkeyspec\r\n"," will not change. This is a\r\n            performance optimization that allows the framework to skip setting up\r\n            change notifications. Set this flag only if you will not change\r\n            ":" 不会改变。这是一个\r\n            允许框架跳过设置的性能优化\r\n            更改通知。仅当您不更改时才设置此标志\r\n            \r\n","org.w3c.dom.CDATASection":"org.w3c.dom.cdatasection\r\n","Creates a new MalformedChallengeException with the specified detail message and cause.":"通过指定的详细信息和原因创建一个新的畸形challengeException。\r\n","Returns the type of the current event (START_TAG, END_TAG, TEXT, etc.":"返回当前事件的类型（start_tag，end_tag，text等。\r\n","org.w3c.dom.Document.createDocumentFragment()":"org.w3c.dom.document.createDocumentFragment（）\r\n","\r\n            Contains the options used by the ":"\r\n            包含该选项\r\n","Node.insertBefore":"node.insertbefore\r\n","Returns the key material of this secret key.":"返回此秘密钥匙的关键材料。\r\n","java.util.logging.Handler.reportError(java.lang.String, java.lang.Exception, int)":"java.util.logging.handler.reporterror（java.lang.string，java.lang.exception，int）\r\n","Return the tail string for a set of formatted records.":"返回一组格式记录的尾字符串。\r\n",",\r\n             so that it displays the page matching the specified route but only if the user\r\n             is authorized to see it.\r\n            \r\n             Additionally, this component supplies a cascading parameter of type ":"，，，，\r\n             因此，它显示与指定路由的页面匹配，但前提是用户\r\n             被授权看到它。\r\n            \r\n             此外，该组件提供类型的级联参数\r\n","javax.crypto.SealedObject.getObject(java.security.Key)":"javax.crypto.sealedobject.getObject（java.security.key）\r\n","Preferences#parent()":"首选项＃parent（）\r\n",",\r\n            gets the sibling index to which the frame should be moved.\r\n            ":"，，，，\r\n            获取应移动框架的兄弟姐妹索引。\r\n            \r\n","Initializes the MAC with the given (secret) key and algorithm\n            parameters.":"使用给定（秘密）密钥和算法初始化Mac\r\n            参数。\r\n","java.util.concurrent.Semaphore.acquireUninterruptibly(int)":"java.util.concurrent.semaphore.acquireundrection（int）\r\n","\r\n            The horizontal scroll amount.\r\n            ":"\r\n            水平滚动量。\r\n            \r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquire(int)":"java.util.concurrent.locks.abstractqueedsynchronizer.tryacquire（int）\r\n","\r\n            Contains information about why authorization failed.\r\n            ":"\r\n            包含有关为什么授权失败的信息。\r\n            \r\n","Interrupt the normal processing of the document.":"中断文档的正常处理。\r\n","Accept the node.":"接受节点。\r\n","If the property\n            can't be assigned that value.":"如果属性\r\n            无法分配该值。\r\n","Construct a StreamResult from a File.":"从文件中构造流媒体。\r\n","Unused, but we have to keep it because it's public API.":"未使用，但我们必须保留它，因为它是公共API。\r\n","if the iteration is already over":"如果迭代已经结束\r\n","javax.crypto.BadPaddingException.BadPaddingException(java.lang.String)":"javax.crypto.badpaddingexception.badpaddingexception（java.lang.string）\r\n","if the size of the ":"如果大小\r\n"," corresponding to a specified field name\r\n            on this ":" 对应于指定的字段名称\r\n            关于这个\r\n","Releases the connection with the option of keep-alive.":"使用保留的选择释放连接。\r\n","Returns the zip file entry for the specified name, or null\n            if not found.":"返回指定名称或null的zip文件条目\r\n            如果找不到。\r\n","org.xml.sax.SAXNotSupportedException":"org.xml.sax.saxnotsupportedException\r\n","org.xml.sax.XMLReader.parse(java.lang.String)":"org.xml.sax.xmlreader.parse（java.lang.string）\r\n","java.util.concurrent.locks.ReentrantReadWriteLock.ReentrantReadWriteLock(boolean)":"java.util.concurrent.locks.reentrantreadwritelock.reentrantreadwritelock（boolean）\r\n","Attempt to obtain a SAX InputSource object from a Source\n            object.":"尝试从源获取SAX Inputsource对象\r\n            目的。\r\n","if no provider for the specified ":"如果没有指定的提供商\r\n","java.util.function.LongBinaryOperator":"java.util.function.longbinaryoperator\r\n"," if\n there is no column number available.":" 如果\r\n 没有可用的列号。\r\n"," indicating which related data is expected in\n ":" 指示预期哪些相关数据\r\n \r\n",",\r\n            or to support OldSpec compatibility:\r\n            ":"，，，，\r\n            或支持OldSpec兼容性：\r\n            \r\n","\r\n            The code returned from the authorization endpoint.\r\n            ":"\r\n            从授权端点返回的代码。\r\n            \r\n","Creates a copy of the given credentials scope.":"创建给定凭据范围的副本。\r\n","javax.sql.RowSet.setClob(java.lang.String, java.sql.Clob)":"javax.sql.Rowset.setClob（java.lang.string，java.sql.clob）\r\n","Get the public identifier of the entity where the exception occurred.":"获取发生例外的实体的公共标识符。\r\n","Checks if the given DES key material is weak or semi-weak.":"检查给定的DES关键材料是弱还是半湿的。\r\n","Adapt a SAX2 processing instruction event.":"调整SAX2处理指令事件。\r\n","java.util.function.LongUnaryOperator.compose(java.util.function.LongUnaryOperator)":"java.util.function.longunaryoperator.compose（java.util.function.longunaryoperator）\r\n","if the IP address of the host cannot be\n determined\n":"如果主机的IP地址不能是\r\n 决定\r\n\r\n","SimpleFormatter":"简单形式\r\n","Returns the largest number of threads that have ever\n            simultaneously been in the pool.":"返回有史以来最多的线程\r\n            同时在游泳池里。\r\n","javax.xml.transform.ErrorListener.warning(javax.xml.transform.TransformerException)":"javax.xml.transform.errlistener.warning（javax.xml.transform.transformerexception）\r\n"," if it exists and is a long or\n            can be coerced to a long, or ":" 如果存在并且很长或\r\n            可以胁迫到长时间或\r\n","javax.sql.RowSetWriter":"javax.sql.RowsetWriter\r\n","java.util.concurrent.TimeoutException":"java.util.concurrent.TimeOutException\r\n","javax.crypto.EncryptedPrivateKeyInfo.getEncoded()":"javax.crypto.encryptedprivateKeyinfo.getEncoded（）\r\n","org.xml.sax.helpers.AttributesImpl.addAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.helpers.attributesimpl.addattribute（java.lang.string，java.lang.string，java.lang.string，java.lang.lang.string，java.lang.lang.string）\r\n","javax.net.ssl.SSLServerSocket.setEnabledProtocols(java.lang.String[])":"javax.net.ssl.sslserversocket.setEnabledprotocols（java.lang.string []）\r\n","#readLock":"#ReadLock\r\n","Acquires the given number of permits from this semaphore, only\n            if all are available at the time of invocation.":"从此信号量获取给定数量的许可证，仅\r\n            如果在调用时都可以使用。\r\n","javax.net.ssl.X509KeyManager.chooseServerAlias(java.lang.String, java.security.Principal[], java.net.Socket)":"javax.net.ssl.x509KeyManager.ChooseServeralias（java.lang.string，java.security.principal []，java.net.socket）\r\n","javax.xml.parsers.SAXParserFactory.isXIncludeAware()":"javax.xml.parsers.saxparserfactory.isxincludeaware（）\r\n","javax.sql.RowSet.setBytes(int, byte[])":"Javax.sql.Rowset.setBytes（int，byte []）\r\n","Generates the exemption mechanism key blob, and stores the result in\n            the <code>output</code> buffer, starting at <code>outputOffset</code>\n            inclusive.":"生成豁免机制密钥斑点，并将结果存储在\r\n            <code>输出</code>缓冲区，从<code> outputoffset </code>开始\r\n            包括的。\r\n","java.util.function.BiPredicate.test(java.lang.Object, java.lang.Object)":"java.util.function.bipredicate.test（java.lang.object，java.lang.object）\r\n","java.util.concurrent.locks.ReadWriteLock.writeLock()":"java.util.concurrent.locks.readwritelock.writelock（）\r\n","org.json.JSONObject.optInt(java.lang.String)":"org.json.jsonobject.optint（java.lang.string）\r\n","\r\n            Gets the current value of the enumerator.\r\n            ":"\r\n            获取枚举者的当前值。\r\n            \r\n","javax.xml.xpath.XPathFactory.DEFAULT_PROPERTY_NAME":"javax.xml.xpath.xpathfactory.default_property_name\r\n","The column number this locator is pointing to, or ":"该定位器指向的列号，或\r\n",", this method has no side effect. The caller\r\n            is responsible for setting the response cookie and injecting the returned\r\n            form token as appropriate.\r\n            ":"，该方法没有副作用。呼叫者，召集者\r\n            负责设置响应曲奇并注入返回的\r\n            适当地形成令牌。\r\n            \r\n","Return the name of the XML Schema date/time type that this instance\n            maps to.":"返回此实例的XML模式日期/时间类型的名称\r\n            地图。\r\n","Defines whether stale connection check is to be used.":"定义是否要使用过时的连接检查。\r\n","Constructs a LoginException with the specified detail message.":"用指定的详细信息构造loginexception。\r\n","Determines the location request is expected to be redirected to \n given the response from the target server and the current request\n execution context.":"确定预期的位置请求将被重定向到\r\n 给定目标服务器的响应和当前请求\r\n 执行上下文。\r\n","Queries whether any threads have ever contended to acquire this\n            synchronizer; that is, if an acquire method has ever blocked.":"查询是否有任何线程曾争辩过获取此问题\r\n            同步器；也就是说，如果获取方法曾经被阻止。\r\n","Returns the server name type of this ":"返回此的服务器名称类型\r\n","Returns a new CompletionStage that, when this stage completes\n            normally, executes the given action.":"返回一个新的完整舞台，当这个阶段完成时\r\n            通常，执行给定的操作。\r\n","java.util.regex.Matcher":"java.util.regex.Matcher\r\n","Constructs an InvalidPreferencesFormatException with the specified\n            cause.":"用指定的\r\n            原因。\r\n","\r\n             Hosts start off by being registered using ":"\r\n             主持人首先使用\r\n","Indicates that a tunnel to the target has been established.":"表明已经建立了目标的隧道。\r\n","java.util.prefs.NodeChangeEvent":"java.util.prefs.nodechangeevent\r\n","Get the retrieved password.":"获取检索到的密码。\r\n","Returns the last modification time of the entry.":"返回条目的最后一个修改时间。\r\n",", if\n   the ":"， 如果\r\n   这\r\n","\r\n            Gets the name of the header used for the request token.\r\n            ":"\r\n            获取用于请求令牌的标头的名称。\r\n            \r\n","javax.xml.parsers.SAXParserFactory.isNamespaceAware()":"javax.xml.parsers.saxparserfactory.isnamespaceaware（）\r\n","java.util.logging.LogRecord.getMessage()":"java.util.logging.logrecord.getMessage（）\r\n","org.w3c.dom.UserDataHandler.NODE_RENAMED":"org.w3c.dom.userdatahandler.node_renamed\r\n","org.w3c.dom.Element.removeAttribute(java.lang.String)":"org.w3c.dom.element.removeattribute（java.lang.string）\r\n","Preferences#keys()":"首选项＃keys（）\r\n","Given the partial or complete certificate chain provided by the\n            peer, build and validate the certificate path based on the\n            authentication type and ssl parameters.":"考虑到由\r\n            根据基于\r\n            身份验证类型和SSL参数。\r\n","javax.xml.transform.TransformerException.getMessageAndLocation()":"javax.xml.transform.transformerexception.getMessAgeanDlocation（）\r\n","Acquires in shared mode, aborting if interrupted.":"在共享模式下获取，如果中断会中断。\r\n","the indicated amount of effort to use in compressing the archive.":"指示用于压缩档案的努力。\r\n","Reads the new contents of the calling <code>RowSet</code> object.":"读取调用<code> rowset </code>对象的新内容。\r\n","if no installed provider can provide the\n             ":"如果没有安装的提供商可以提供\r\n             \r\n","java.util.concurrent.atomic.AtomicInteger":"java.util.concurrent.atomic.atomicinteger\r\n","thrown if the underlying\n implementation doesn't recognize the attribute.\n":"如果下面扔\r\n 实现无法识别属性。\r\n\r\n","java.util.concurrent.LinkedTransferQueue.offer(java.lang.Object, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.linkedtransferqueue.offer（java.lang.object，long，java.util.concurrent.timeunit）\r\n","value ":"价值\r\n","Returns a copy of the encoded server name value of this server name.":"返回此服务器名称的编码服务器名称值的副本。\r\n","org.xml.sax.ErrorHandler":"org.xml.sax.errorhandler\r\n","Gets the name of the log level associated with the specified logger.":"获取与指定记录器关联的日志级别的名称。\r\n","if a parser cannot\n     be created which satisfies the requested configuration.":"如果解析器不能\r\n     可以创建满足所请求的配置的。\r\n","javax.net.ssl.CertPathTrustManagerParameters.getParameters()":"javax.net.ssl.certpathtrustmanagerparameters.getParameters（）\r\n","javax.crypto.spec.DHPrivateKeySpec":"javax.crypto.spec.dhprivatekeyspec\r\n",". -or- Set the character encoding used by this ":"。 - 或设置此使用的字符编码\r\n","Represents a function that accepts one argument and produces a result.":"表示接受一个参数并产生结果的函数。\r\n","\r\n            Determines the settings used to create the correlation cookie before the\r\n            cookie gets added to the response.\r\n            ":"\r\n            确定用于创建相关cookie的设置\r\n            cookie添加到响应中。\r\n            \r\n","java.util.concurrent.ScheduledFuture":"java.util.concurrent.scheduledfuture\r\n","Registers the given listener so that it will be notified of events\n            that occur on this <code>RowSet</code> object.":"注册给定的听众，以便将其通知事件\r\n            在此<code> Rowset </code>对象上发生。\r\n","\r\n            The LoginPath property is used by the handler for the redirection target when handling ChallengeAsync.\r\n            The current url which is added to the LoginPath as a query string parameter named by the ReturnUrlParameter. \r\n            Once a request to the LoginPath grants a new SignIn identity, the ReturnUrlParameter value is used to redirect \r\n            the browser back to the original url.\r\n            ":"\r\n            处理程序处理挑战性时，处理程序用于重定向目标。\r\n            当前的URL添加到登录路径为returnUrlParameter命名的查询字符串参数。\r\n            一旦对登录路径的请求授予新的符号身份，返回参数仪值将用于重定向\r\n            浏览器回到原始URL。\r\n            \r\n","javax.sql.RowSet.setClob(java.lang.String, java.io.Reader, long)":"javax.sql.Rowset.setClob（java.lang.string，java.io.Reader，long）\r\n","Create a new <code>TransformerConfigurationException</code> with\n            the <code>String </code> specified as an error message.":"使用一个新的<code> transformerconfigurationException </code>使用\r\n            <code>字符串</code>指定为错误消息。\r\n","Probably indicating a failure to create\n    a new InputStream or Reader, or an illegal URL.\n":"可能表明无法创建\r\n    新的输入式或读者，或非法URL。\r\n\r\n","Value for tenth month of year.":"10个月的价值。\r\n","\r\n            Unlike ":"\r\n            与众不同\r\n","Log a message, which is only to be constructed if the logging level\n            is such that the message will actually be logged.":"记录一条消息，仅在记录级别时才能构造\r\n            可以实际记录该消息。\r\n","mdName":"mdname\r\n","\r\n            Gets or sets whether the authentication session is persisted across multiple requests.\r\n            ":"\r\n            获取或设置身份验证会话是否在多个请求中持续存在。\r\n            \r\n","Preferences#getLong(String,long)":"首选项＃getlong（字符串，长）\r\n","\r\n            For framework use only.\r\n            ":"\r\n            仅用于框架。\r\n            \r\n","org.w3c.dom.Comment":"org.w3c.dom.com\r\n","org.xml.sax.InputSource.setSystemId(java.lang.String)":"org.xml.sax.inputsource.setsystemid（java.lang.string）\r\n","org.json.JSONObject.optBoolean(java.lang.String, boolean)":"org.json.jsonobject.optboolean（java.lang.string，boolean）\r\n","javax.xml.xpath.XPathConstants.BOOLEAN":"javax.xml.xpath.xpathconstants.boolean\r\n","Checks whether the current TEXT event contains only whitespace\n characters.":"检查当前文本事件是否仅包含空格\r\n 人物。\r\n","java.util.logging.LogRecord":"java.util.logging.logrocord\r\n","java.util.zip.ZipOutputStream.putNextEntry(java.util.zip.ZipEntry)":"java.util.zip.zipoutputstream.putnextentry（java.util.zip.zipentry）\r\n","Preferences#isUserNode()":"首选项＃iSusernode（）\r\n","\r\n            Gets the index of related data in an associated render frames array. For example, if the\r\n            ":"\r\n            在关联的渲染帧数组中获取相关数据的索引。例如，如果\r\n            \r\n"," .\r\n            ":" 。\r\n            \r\n","Checks if the given DES-EDE key, starting at <code>offset</code>\n            inclusive, is parity-adjusted.":"检查给定的des-eDE键，从<code> offset </code>开始\r\n            包容性，是奇偶校验调整的。\r\n","javax.xml.datatype.DatatypeFactory.newDuration(boolean, int, int, int, int, int, int)":"javax.xml.datatype.datatypefactory.newduration（boolean，int，int，int，int，int，int，int，int）\r\n","java.util.function.IntFunction.apply(int)":"java.util.function.intfunction.apply（int）\r\n","Constructs a DestroyFailedException with no detail message.":"构建一个没有详细信息的DestrachfailedException。\r\n","Tiramisu":"提拉米苏\r\n","BiConsumer":"双香师\r\n","\r\n            A flag indicating whether policy evaluation has succeeded or failed.\r\n            This value is ":"\r\n            指示政策评估是成功还是失败的标志。\r\n            这个值是\r\n"," is not a valid representation of a ":" 不是一个有效的表示\r\n","Protected constructor.":"受保护的构造函数。\r\n","javax.xml.xpath.XPath":"javax.xml.xpath.xpath\r\n","Creates a matcher that will match the given input against this pattern.":"创建一个将给定输入与此模式匹配的匹配器。\r\n"," and accept a parameter named ":" 并接受一个名称的参数\r\n","org.w3c.dom.DOMException.INVALID_MODIFICATION_ERR":"org.w3c.dom.domexception.invalid_modification_err\r\n","Signals a non 2xx HTTP response.":"信号一个非2XX HTTP响应。\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.releaseShared(int)":"java.util.concurrent.locks.abstractqueuedsynchronizer.Releaseshared（int）\r\n","java.util.logging.LoggingPermission":"java.util.logging.loggingpermission\r\n","javax.sql.RowSet.setDate(int, java.sql.Date, java.util.Calendar)":"javax.sql.Rowset.setDate（int，java.sql.date，java.util.calendar）\r\n","java.util.concurrent.ThreadLocalRandom.nextInt(int, int)":"java.util.concurrent.threadlocalrandom.nextint（int，int）\r\n","Creates a new zip entry with the specified name.":"使用指定名称创建一个新的ZIP条目。\r\n","javax.sql.PooledConnection.addStatementEventListener(javax.sql.StatementEventListener)":"javax.sql.pooledconnection.AddstatatementEventListener（javax.sql.StatementEmplistListener）\r\n","javax.crypto.spec.RC2ParameterSpec.getIV()":"javax.crypto.spec.rc2parameterspec.getiv（）\r\n","javax.crypto.CipherInputStream.CipherInputStream(java.io.InputStream)":"javax.crypto.cipherinputstream.cipherinputstream（java.io.inputstream）\r\n","An attribute specifying, as part of the text declaration, the encoding\n of this entity, when it is an external parsed entity.":"作为文本声明的一部分，指定编码的属性\r\n 当该实体是外部解析实体时。\r\n","s of the Server Name\n            Indication (SNI) parameter.":"服务器名称的s\r\n            指示（SNI）参数。\r\n"," span.\r\n            ":" 跨度。\r\n            \r\n","\r\n            Clears any modification flag that may be tracked for the specified field.\r\n            ":"\r\n            清除可能为指定字段跟踪的任何修改标志。\r\n            \r\n","When a filter is provided, the implementation will call out to the\n filter as it is constructing the DOM tree structure.":"提供过滤器时，实现将调用\r\n 过滤器正在构造DOM树结构。\r\n","To provide customized error handling, implement this interface and\n            use the <code>setErrorListener</code> method to register an instance of the\n            implementation with the ":"要提供自定义的错误处理，请实现此接口和\r\n            使用<code> setErlistener </code>方法来注册\r\n            与\r\n","Log throwing an exception.":"日志抛出例外。\r\n","Obtain new instance of a class that implements Packer.":"获取实现包装工的类的新实例。\r\n","The Content-Encoding header.":"内容编码标头。\r\n","Exception thrown when a blocking operation times out.":"当阻止操作时间淘汰时，会引发异常。\r\n","ssl.KeyManagerFactory.algorithm":"ssl.keymanagerfactory.algorithm\r\n","This method retrieves an exception that this exception wraps.":"此方法检索了此异常包含的例外。\r\n","Loggers are used to log records to a variety of destinations such as log files or\n the console.":"记录器用于将记录记录到各种目的地，例如日志文件或\r\n 控制台。\r\n","java.util.zip.GZIPInputStream.GZIP_MAGIC":"java.util.zip.gzipinputstream.gzip_magic\r\n","Basic implementation of a ":"基本实施\r\n","java.util.prefs.Preferences.addNodeChangeListener(java.util.prefs.NodeChangeListener)":"java.util.prefs.preferences.addnodechangelistener（java.util.prefs.nodechangelistener）\r\n"," if it is\n unspecified (see ).":" 如果是\r\n 未指定（请参阅）。\r\n","\r\n             Gets the current validation messages across all fields.\r\n            \r\n             This method does not perform validation itself. It only returns messages determined by previous validation actions.\r\n             ":"\r\n             在所有字段中获取当前验证消息。\r\n            \r\n             此方法不会执行验证本身。它仅返回由以前的验证操作确定的消息。\r\n             \r\n","if an invalid header value is encountered\n":"如果遇到无效的标头值\r\n\r\n","Gets all of the headers contained within this group.":"获取该组中包含的所有标题。\r\n"," that has\r\n            a corresponding value in the ":" 具有\r\n            在\r\n","java.util.logging.LogRecord.getThrown()":"java.util.logging.logrocord.getthrown（）\r\n","java.util.concurrent.atomic.LongAdder.add(long)":"java.util.concurrent.atomic.longadder.add（long）\r\n"," with the specified\r\n            exception message.\r\n            ":" 与指定的\r\n            异常消息。\r\n            \r\n","INUSE_ATTRIBUTE_ERR: Raised if ":"inuse_attribute_err：如果\r\n","java.util.concurrent.locks.StampedLock.writeLockInterruptibly()":"java.util.concurrent.locks.stampedlock.writelockiblediblesive（）\r\n","Default property name as defined in JSR 206: Java(TM) API for XML Processing (JAXP) 1.":"JSR 206中定义的默认属性名称：XML处理（JAXP）1的JAVA（TM）API。\r\n","\r\n            Supplies information about an change event that is being raised.\r\n            ":"\r\n            提供有关正在提出的变更事件的信息。\r\n            \r\n","Constructs a UnsupportedCallbackException with the specified detail\n            message.":"用指定的细节构建一个无支撑的callbackexception\r\n            信息。\r\n","\r\n            Gets a string that indicates the status of the specified field as a CSS class. This will include\r\n            some combination of \"modified\", \"valid\", or \"invalid\", depending on the status of the field.\r\n            ":"\r\n            获取一个字符串，将指定字段的状态表示为CSS类。这将包括\r\n            “修改”，“有效”或“无效”的某种组合，具体取决于字段的状态。\r\n            \r\n","org.xml.sax.helpers.NamespaceSupport.processName(java.lang.String, java.lang.String[], boolean)":"org.xml.sax.helpers.namespacesupport.processname（java.lang.string，java.lang.string []，boolean）\r\n","If the document's schema is an XML Schema []\n , this constant represents the derivation by .":"如果文档的模式是XML模式[]\r\n ，该常数表示派生。\r\n","Sets the limits of this matcher's region.":"设置该匹配项区域的限制。\r\n","java.util.concurrent.CompletionStage.acceptEitherAsync(java.util.concurrent.CompletionStage, java.util.function.Consumer, java.util.concurrent.Executor)":"java.util.concurrent.completionstage.accepteitherasync（java.util.concurrent.completionstage，java.util.function.consumer，java.util.util.concurrent.executor）\r\n"," instance.\r\n            ":" 实例。\r\n            \r\n","Interface for an XML filter.":"XML过滤器的接口。\r\n","javax.crypto.SealedObject.getAlgorithm()":"javax.crypto.sealedobject.getalgorithm（）\r\n","if the time unit is null\n\n":"如果时间单元为null\r\n\r\n\r\n","Creates a <code>SocketFactory</code>.":"创建<code> socketFactory </code>。\r\n","org.xml.sax.HandlerBase.endDocument()":"org.xml.sax.handlerbase.enddocument（）\r\n","org.w3c.dom.DOMImplementationList.item(int)":"org.w3c.dom.domimplementationlist.item（int）\r\n","Checks if a boolean parameter is set to ":"检查布尔参数是否设置为\r\n","javax.xml.datatype.DatatypeConstants.MINUTES":"javax.xml.datatype.datatypeconstants.minutes\r\n","Process the Source into a Templates object, which is a\n            a compiled representation of the source.":"处理源成模板对象，这是一个\r\n            来源的编译表示。\r\n","if the parameters cannot be used to initialize this key\n             generator algorithm.\n":"如果不能使用参数来初始化此密钥\r\n             发电机算法。\r\n\r\n","The interface for a private key in the Diffie-Hellman key exchange protocol.":"Diffie-Hellman密钥交换协议中的私钥的接口。\r\n","\r\n            If true, means the callee should challenge and try again.\r\n            ":"\r\n            如果是真的，则意味着Callee应该挑战并重试。\r\n            \r\n","Creates a new adder with initial sum of zero.":"创建一个具有零初始总和的新加法器。\r\n","javax.net.ssl.ExtendedSSLSession.getRequestedServerNames()":"javax.net.ssl.extendendedsslsession.getRequestedServernames（）\r\n","javax.net.ssl.SSLContextSpi.engineCreateSSLEngine()":"javax.net.ssl.sslcontextspi.enginecreatesslengine（）\r\n","Filter an unparsed entity declaration event.":"过滤一个无与伦比的实体声明事件。\r\n","HTTP OPTIONS method.":"HTTP选项方法。\r\n","Constructs a AEADBadTagException with no detail message.":"构建一个没有详细信息的Aeadbadtagexception。\r\n","Create a synchronous <code>LSParser</code>.":"创建同步<code> lsparser </code>。\r\n","javax.security.auth.x500.X500Principal.RFC2253":"javax.security.auth.x500.x500 principal.rfc2253\r\n","java.util.function.ObjLongConsumer.accept(java.lang.Object, long)":"java.util.function.objlong​​consumer.accept（java.lang.Object，long）\r\n","Creates a MalformedChunkCodingException without a detail message.":"创建一个畸形的CodingException，而无需详细消息。\r\n","Queries the number of holds on this write lock by the current\n thread.":"查询此写入锁的持有数量\r\n 线。\r\n","Get the sequence number. -or- Set the sequence number.":"获取序列号。 - 或 - 设置序列号。\r\n","javax.crypto.spec.RC5ParameterSpec.RC5ParameterSpec(int, int, int, byte[])":"javax.crypto.spec.rc5parameterspec.rc5parameterspec（int，int，int，int，byte []）\r\n","org.w3c.dom.Document.createProcessingInstruction(java.lang.String, java.lang.String)":"org.w3c.dom.document.createprocessinginstruction（java.lang.string，java.lang.string）\r\n","Get an identifier for the thread where the message originated. -or- Set an identifier for the thread where the message originated.":"获取消息发起的线程的标识符。 - 或 - 为消息发起的线程设置标识符。\r\n","javax.xml.transform.stream.StreamResult.FEATURE":"javax.xml.transform.stream.streamresult.feature\r\n","javax.crypto.spec.OAEPParameterSpec.OAEPParameterSpec(java.lang.String, java.lang.String, java.security.spec.AlgorithmParameterSpec, javax.crypto.spec.PSource)":"javax.crypto.spec.oaepparameterspec.oaepparameterspec（java.lang.string，java.lang.string，java.security.security.spec.algorithmparameterspec，javax.crypto.spec.persource）\r\n","NAMESPACE_ERR: Raised if the specified ":"namespace_err：如果指定了\r\n"," attributes, define a public class named\r\n            ":" 属性，定义一个名为的公共类\r\n            \r\n","Returns the user root preference node corresponding to the calling\n            user.":"返回与调用相对应的用户根本优先节点\r\n            用户。\r\n","javax.xml.parsers.DocumentBuilderFactory.setNamespaceAware(boolean)":"javax.xml.parsers.documentbuilderfactory.setnamespaceaware（boolean）\r\n","Returns the number of parties registered at this phaser.":"返回此移动器注册的各方数量。\r\n","java.util.stream.Collectors.joining(java.lang.CharSequence)":"java.util.stream.collectors.joining（Java.lang.CharSequence）\r\n","javax.crypto.SealedObject.SealedObject(java.io.Serializable, javax.crypto.Cipher)":"javax.crypto.sealedobject.sealedobject（java.io.serializable，javax.crypto.cipher）\r\n","javax.xml.xpath.XPath.reset()":"javax.xml.xpath.xpath.reset（）\r\n","The state passed to UnhookAuthentication may only be the return value from HookAuthentication.":"传递给Unokauthentication的状态只能是烟e谐的返回值。\r\n","Encrypts or decrypts data in a single-part operation,\n            or finishes a multiple-part operation.":"在单部分操作中加密或解密数据，\r\n            或完成多部分操作。\r\n","java.util.prefs.Preferences.MAX_VALUE_LENGTH":"java.util.prefs.preferences.max_value_length\r\n","F:Java.Util.Regex.Pattern.Compile":"f：java.util.regex.pattern.compile\r\n","javax.crypto.Cipher.PRIVATE_KEY":"javax.crypto.cipher.private_key\r\n","Removing headers is not supported.":"不支持卸下标头。\r\n","if shared mode is not supported\n":"如果不支持共享模式\r\n\r\n","in case of an IO problem on closing the underlying stream\n":"如果遇到关闭基础流的IO问题\r\n\r\n","org.xml.sax.helpers.XMLFilterImpl.endPrefixMapping(java.lang.String)":"org.xml.sax.helpers.xmlfilterimpl.endprefixmapping（java.lang.string）\r\n"," value represents any host.":" 值代表任何主机。\r\n","java.util.Spliterator#trySplit()":"java.util.spliterator＃trysplit（）\r\n","javax.net.ServerSocketFactory.createServerSocket(int, int, java.net.InetAddress)":"javax.net.serversocketFactory.createserversocket（int，int，java.net.inetaddress）\r\n","org.xml.sax.InputSource.InputSource()":"org.xml.sax.inputsource.inputsource（）\r\n","Preferences#getFloat(String,float)":"首选项＃getfloat（字符串，float）\r\n","javax.net.ssl.SSLParameters.SSLParameters(java.lang.String[], java.lang.String[])":"javax.net.ssl.sslparameters.sslparameters（java.lang.string []，java.lang.string []）\r\n","java.util.zip.ZipInputStream.getNextEntry()":"java.util.zip.zipinputstream.getNextentry（）\r\n","javax.sql.StatementEventListener.statementErrorOccurred(javax.sql.StatementEvent)":"javax.sql.StatementEventListener.StatementErroccurred（Javax.sql.StatementEmperevent）\r\n","Checks equality of this protocol version with an object.":"用对象检查此协议版本的平等。\r\n","\r\n            Gets or sets the authentication scheme corresponding to the middleware\r\n            responsible of persisting user's identity after a successful authentication.\r\n            This value typically corresponds to a cookie middleware registered in the Startup class.\r\n            When omitted, ":"\r\n            获取或设置与中间件相对应的身份验证方案\r\n            成功身份验证后，负责持续使用用户的身份。\r\n            该值通常对应于启动类中注册的cookie中间件。\r\n            省略时\r\n","Reads a single byte from this stream and returns it as an integer in the\n range from 0 to 255.":"从此流读取单个字节，并将其返回为整数\r\n 从0到255。\r\n","javax.xml.parsers.SAXParser.SAXParser()":"javax.xml.parsers.saxparser.saxparser（）\r\n","Implementations of ":"实施\r\n","java.util.regex.Matcher.usePattern(java.util.regex.Pattern)":"java.util.regex.matcher.usepattern（java.util.regex.pattern）\r\n","javax.net.ssl.SSLParameters.getCipherSuites()":"javax.net.ssl.sslparameters.getCiphersuites（）\r\n","Set the Discard attribute.":"设置丢弃属性。\r\n",",\n            and similarly for other methods.":"，，，，\r\n            同样，对于其他方法。\r\n","Returns the key of the preference that was changed.":"返回更改的偏好的钥匙。\r\n","\r\n            Returns an enumerator that iterates through the ":"\r\n            返回枚举者，通过\r\n","java.util.concurrent.atomic.AtomicLongArray.getAndSet(int, long)":"java.util.concurrent.atomic.atomiclongarray.getandset（int，long）\r\n","PUT":"放\r\n","Handler that encapsulates the process of generating a response object \n from a ":"封装生成响应对象的过程的处理程序\r\n 来自\r\n","if it shall attempt to determine the latest modification time if this\n is set to ":"如果它试图确定最新的修改时间\r\n 被设定为\r\n","java.util.concurrent.atomic.AtomicLong.getAndAccumulate(long, java.util.function.LongBinaryOperator)":"java.util.concurrent.atomic.atomiclong.getanccumulate（long，java.util.function.longbinaryoperator）\r\n","Updates the current checksum with the specified byte.":"使用指定字节更新当前的校验和。\r\n","javax.xml.transform.stream.StreamSource.setSystemId(java.io.File)":"javax.xml.transform.stream.streamsource.setsystemid（java.io.file）\r\n","java.util.logging.Logger.logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.util.ResourceBundle, java.lang.String, java.lang.Throwable)":"java.util.logging.logger.logrb（java.util.logging.level，java.lang.string，java.lang.string，java.util.resourcebundle，java.lang.lang.lang.string，Java.lang.lang.throwable）\r\n","javax.net.ssl.SNIMatcher.getType()":"javax.net.ssl.snimatcher.getType（）\r\n"," argument is not one of the three\n             mentioned above\n":" 争论不是三个\r\n             上文提到的\r\n\r\n","javax.xml.transform.sax.SAXResult.SAXResult(org.xml.sax.ContentHandler)":"javax.xml.transform.sax.saxresult.saxresult（org.xml.sax.contenthandler）\r\n","\r\n            This method is executed once initially after ":"\r\n            此方法最初是在此之后执行的\r\n","java.util.concurrent.atomic.AtomicIntegerFieldUpdater.addAndGet(java.lang.Object, int)":"java.util.concurrent.atomic.atomicintegerfieldupdater.addandget（java.lang.object，int）\r\n","javax.crypto.KeyAgreementSpi":"javax.crypto.keyagreementspi\r\n","AbstractQueuedLongSynchronizer":"AbstractQuequuedLongsynchronizer\r\n","javax.xml.validation.SchemaFactory.isSchemaLanguageSupported(java.lang.String)":"javax.xml.validation.schemafactory.isschemalangagagesupported（java.lang.string）\r\n","Sets the prioritized array of application-layer protocol names that\n            can be negotiated over the SSL/TLS protocols.":"设置优先级的应用程序层协议名称\r\n            可以在SSL/TLS协议上协商。\r\n","java.util.concurrent.Semaphore.Semaphore(int, boolean)":"java.util.concurrent.semaphore.semaphore（int，boolean）\r\n","javax.xml.xpath.XPathException":"javax.xml.xpath.xpathexception\r\n","If this method is called from other ":"如果此方法是从其他调用的\r\n","NodeChangeListener":"Nodechangelistener\r\n"," has been\r\n            initialized and is ready to use.\r\n            ":" 一直是\r\n            初始化并准备使用。\r\n            \r\n","javax.xml.datatype.DatatypeConstants.DURATION_DAYTIME":"javax.xml.datatype.datatypeconstants.duration_daytime\r\n","Retrieves and removes the last element of this deque, waiting\n if necessary until an element becomes available.":"检索并删除该deque的最后一个元素，等待\r\n 如有必要，直到元素可用。\r\n","HTTP GET method.":"HTTP获取方法。\r\n","java.util.prefs.Preferences.getBoolean(java.lang.String, boolean)":"java.util.prefs.preferences.getboolean（java.lang.string，boolean）\r\n","The OAEP parameter set with all default values.":"具有所有默认值的OAEP参数集。\r\n","if this key agreement is not complete.\n":"如果此关键协议未完成。\r\n\r\n","org.json.JSONObject.getLong(java.lang.String)":"org.json.jsonobject.getlong（java.lang.string）\r\n","\r\n            The Id is unique at least within the scope of a given user/circuit.\r\n            This property is public to support Json serialization and should not be used by user code.\r\n            ":"\r\n            ID至少在给定用户/电路的范围内是唯一的。\r\n            此属性是公开支持JSON序列化的，不应由用户代码使用。\r\n            \r\n","java.util.concurrent.ThreadPoolExecutor.ThreadPoolExecutor(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue, java.util.concurrent.RejectedExecutionHandler)":"java.util.concurrent.threadpoolexecutor.threadpoolexecutor（int，int，long，long，java.util.concurrent.timeunit，java.util.concurrent.blocking.blockingqueue，java.util.util.concurrent.concurrent.concurrent.rejectexexecutionhandler）\r\n","java.util.concurrent.ThreadPoolExecutor.getActiveCount()":"java.util.concurrent.threadpoolexecutor.getActiveCount（）\r\n","javax.xml.parsers.DocumentBuilderFactory.setExpandEntityReferences(boolean)":"javax.xml.parsers.documentbuilderfactory.setExpandentityReferences（boolean）\r\n","\r\n            If set, this specifies the target scheme that this scheme should forward ChallengeAsync calls to.\r\n            For example Context.ChallengeAsync(\"ThisScheme\") => Context.ChallengeAsync(\"ForwardChallengeValue\");\r\n            Set the target to the current scheme to disable forwarding and allow normal processing.\r\n            ":"\r\n            如果设置，则指定该方案应转发挑战的目标方案。\r\n            例如context.challengeasync（“ thisscheme”）=> context.challengeasync（“ forwardchallengevalue”）;\r\n            将目标设置为当前方案以禁用转发并允许正常处理。\r\n            \r\n","INVALID_CHARACTER_ERR: Raised if the specified name is not an XML\n   name according to the XML version in use specified in the\n   ":"Invalid_character_err：如果指定名称不是XML，则提出\r\n   根据在使用中指定的XML版本的名称\r\n   \r\n","\r\n            Defines whether access and refresh tokens should be stored in the\r\n            ":"\r\n            定义访问和刷新令牌是否应存储在\r\n            \r\n","javax.xml.parsers.SAXParser.reset()":"javax.xml.parsers.saxparser.reset（）\r\n","Checks whether the underlying stream can be read from.":"检查是否可以从中读取基础流。\r\n","Obtains the value of the MONTHS field as an integer value,\n            or 0 if not present.":"获得数月字段的值作为整数值，\r\n            或0如果不存在。\r\n","Returns the thread factory used to create new threads. -or- Sets the thread factory used to create new threads.":"返回用于创建新线程的线程工厂。 - 或设置用于创建新线程的线程工厂。\r\n","javax.security.auth.x500.X500Principal.X500Principal(java.lang.String, java.util.Map)":"javax.security.auth.x500.x500 principal.x500 principal（java.lang.string，java.util.map）\r\n","org.xml.sax.helpers.AttributesImpl.getValue(java.lang.String)":"org.xml.sax.helpers.attributesimpl.getValue（java.lang.string）\r\n","Creates a new route tracker.":"创建一个新的路线跟踪器。\r\n","javax.xml.transform.OutputKeys.OMIT_XML_DECLARATION":"javax.xml.transform.outputkeys.omit_xml_declaration\r\n","Value for third month of year.":"每年第三个月的价值。\r\n","Evaluate an XPath expression in the context of the specified <code>InputSource</code>\n            and return the result as a <code>String</code>.":"在指定的<code> InputSource </code>的上下文中评估XPATH表达式\r\n            并将结果返回为<code> String </code>。\r\n","javax.sql.RowSet.setTimestamp(java.lang.String, java.sql.Timestamp)":"javax.sql.Rowset.setTimestamp（java.lang.string，java.sql.timestamp）\r\n","Obtains a description of this route.":"获取此路线的描述。\r\n","javax.xml.transform.ErrorListener":"javax.xml.transform.Erlistener\r\n","\r\n            Gets a fresh span to write to, with an optional minimum size.\r\n            ":"\r\n            以最小尺寸的可选跨度写入新的跨度。\r\n            \r\n","javax.crypto.spec.DESKeySpec.isParityAdjusted(byte[], int)":"javax.crypto.spec.deskeyspec.isparityadjusted（byte []，int）\r\n","Constructor that takes a public value <code>y</code>, a prime\n            modulus <code>p</code>, and a base generator <code>g</code>.":"采用公共价值的构造函数<code> y </code>，prime\r\n            Modulus <code> P </code>和基本生成器<code> g </code>。\r\n","\r\n            Adds DataAnnotations validation support to the ":"\r\n            将数据声道验证支持添加到\r\n",", or one of the entries in\n             ":"，或其中一个条目\r\n             \r\n","java.util.concurrent.RunnableFuture":"java.util.concurrent.runnablefuture\r\n","java.util.logging.Logger.logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object[])":"java.util.logging.logger.logrb（java.util.logging.level，java.lang.string，java.lang.string，java.lang.string，java.lang.lang.lang.string，java.lang.object []）\r\n","The node is a <code>Text</code> node.":"节点是<code>文本</code>节点。\r\n","javax.sql.RowSetMetaData.setColumnName(int, java.lang.String)":"javax.sql.RowsetMetadata.setColumnname（int，java.lang.string）\r\n","\r\n            The content that will be displayed if the user is not authorized.\r\n            ":"\r\n            如果用户未授权，将显示的内容将显示。\r\n            \r\n","Returns a copy of the Attributes, implemented as follows:":"返回属性的副本，如下所示：\r\n","\r\n            gets the ID of the corresponding event handler, if any.\r\n            ":"\r\n            获取相应事件处理程序的ID（如果有）。\r\n            \r\n","\r\n            Called to reject the incoming principal. This may be done if the application has determined the\r\n            account is no longer active, and the request should be treated as if it was anonymous.\r\n            ":"\r\n            被要求拒绝即将来临的校长。如果应用程序确定了\r\n            帐户不再活跃，应将请求视为匿名。\r\n            \r\n","\r\n            Gets the position within ":"\r\n            在\r\n","javax.xml.xpath.XPathExpression.evaluate(org.xml.sax.InputSource)":"javax.xml.xpath.xpathexpression.evaluate（org.xml.sax.inputsource）\r\n"," is not a registered logger or if\n             ":" 不是注册的记录器，或者\r\n             \r\n","Adds a new attribute.":"添加一个新属性。\r\n","java.util.concurrent.atomic.AtomicLong.doubleValue()":"java.util.concurrent.atomic.atomiclong.doublevalue（）\r\n","javax.xml.validation.TypeInfoProvider.isIdAttribute(int)":"javax.xml.validation.typeinfoprovider.isidattribute（int）\r\n","Log a SEVERE message, which is only to be constructed if the logging\n            level is such that the message will actually be logged.":"记录一个严重的消息，只有在记录时才能构建\r\n            级别的级别可以实际记录该消息。\r\n"," (WebDAV - RFC 2518) ":" （WebDav -RFC 2518）\r\n","\r\n             Combines the behaviors of ":"\r\n             结合行为\r\n","Clears the internal copy of the password.":"清除密码的内部副本。\r\n"," during the component's lifetime.\r\n            ":" 在组件的一生中。\r\n            \r\n","Return the line number where the current document event ends.":"返回当前文档事件结束的行号。\r\n","\r\n            Writes out a ":"\r\n            写一个\r\n","java.util.concurrent.atomic.AtomicReferenceFieldUpdater":"java.util.concurrent.atomic.atomicreferencefieldupdater\r\n","java.util.concurrent.atomic.AtomicInteger.doubleValue()":"java.util.concurrent.atomic.atomicinteger.doublevalue（）\r\n","javax.security.auth.x500.X500Principal.X500Principal(java.lang.String)":"javax.security.auth.x500.x500 principal.x500 principal（java.lang.string）\r\n","Processes a request.":"处理请求。\r\n","java.util.zip.ZipEntry.getLastModifiedTime()":"java.util.zip.zipentry.getLastModifiedTime（）\r\n",", the output is ":"，输出为\r\n"," or empty.\n":" 或空。\r\n\r\n","nodeExists":"结节主义者\r\n","Creates a new ProtocolException with the specified detail message and cause.":"使用指定的详细信息和原因创建新的protocolexception。\r\n","Returns true if a preset dictionary is needed for decompression.":"如果需要进行预压缩的预设字典，则返回为true。\r\n","For n < 0, the length of the resulting array is\n            exactly the number of occurrences of the ":"对于n <0，结果数组的长度为\r\n            正是出现的数量\r\n","Sets the particular property in the underlying implementation of\n            ":"在基础实施中设置特定属性\r\n            \r\n","Checks if a certain header is present in this message.":"检查此消息中是否存在某个标头。\r\n","javax.net.ssl.SSLContext.getProvider()":"javax.net.ssl.sslcontext.getProvider（）\r\n","org.xmlpull.v1.XmlSerializer.setOutput(java.io.Writer)":"org.xmlpull.v1.xmlserializer.setOutput（java.io.writer）\r\n","Clears the parameters set for this <code>RowSet</code> object's command.":"清除此<code> Rowset </code>对象的命令设置的参数。\r\n","javax.net.ssl.HttpsURLConnection.setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)":"javax.net.ssl.httpsurlconnection.setsslsocketFactory（javax.net.ssl.ssslsocketfactory）\r\n","\r\n            Gets a reference to the ":"\r\n            得到对\r\n","Sets input data for compression.":"设置输入数据以进行压缩。\r\n","if an error occurs while importing.\n":"如果导入时发生错误。\r\n\r\n","if no such value exists.\n":"如果没有这样的价值。\r\n\r\n"," attribute whose value is a string\n that defines the title of the extension implementation.":" 属性是其值为字符串的属性\r\n 这定义了扩展实现的标题。\r\n","java.util.concurrent.Semaphore.acquireUninterruptibly()":"java.util.concurrent.semaphore.acquireun intredriplobily（）\r\n","java.util.zip.Deflater.setStrategy(int)":"java.util.zip.deflater.setstrategy（int）\r\n","java.util.concurrent.atomic.AtomicInteger.updateAndGet(java.util.function.IntUnaryOperator)":"java.util.concurrent.atomic.atomicinteger.updateandget（java.util.function.intunaryoperator）\r\n","Updates the checksum with the specified byte (the low eight\n            bits of the argument b).":"使用指定字节更新校验和\r\n            论点的位b）。\r\n","\r\n            User friendly error message for the error.\r\n            ":"\r\n            用户友好的错误消息。\r\n            \r\n","\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            ":"\r\n            获取或设置将应用于创建元素的其他属性的集合。\r\n            \r\n","This is the generic ExemptionMechanism exception.":"这是通用的豁免机制例外。\r\n"," node to indicate that\n            a preference has been added, removed or has had its value changed.":" 节点表明\r\n            添加，删除或具有其价值更改的偏好。\r\n","s\n   it creates cannot support this feature.":"s\r\n   它创建无法支持此功能。\r\n","\r\n            Discontinue processing the request in the current handler.\r\n            ":"\r\n            停止处理当前处理程序中的请求。\r\n            \r\n","java.util.concurrent.Semaphore.tryAcquire(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.semaphore.tryacquire（long，java.util.concurrent.timeunit）\r\n","org.w3c.dom.CharacterData.appendData(java.lang.String)":"org.w3c.dom.characterdata.appenddata（java.lang.string）\r\n","\r\n             Optionally gives a name to the provided value. Descendant components\r\n             will be able to receive the value by specifying this name.\r\n            \r\n             If no name is specified, then descendant components will receive the\r\n             value based the type of value they are requesting.\r\n             ":"\r\n             可选地为提供的值提供名称。后代成分\r\n             可以通过指定此名称来接收值。\r\n            \r\n             如果未指定名称，则后代组件将接收\r\n             基于值的价值类型。\r\n             \r\n","org.xml.sax.ErrorHandler.warning(org.xml.sax.SAXParseException)":"org.xml.sax.erranhandler.warning（org.xml.sax.saxparseexception）\r\n","\r\n            The button number that was pressed when the mouse event was fired:\r\n            Left button=0,\r\n            middle button=1 (if present),\r\n            right button=2.\r\n            For mice configured for left handed use in which the button actions are reversed the values are instead read from right to left.\r\n            ":"\r\n            射击鼠标事件时按下的按钮号：\r\n            左键= 0，\r\n            中间按钮= 1（如果存在），\r\n            右键= 2。\r\n            对于为左手使用配置的小鼠，在该用途中，按钮操作被逆转，而是从右到左读取值。\r\n            \r\n","\r\n            Gets the JSON-serialized user or an empty\r\n            ":"\r\n            获取JSON-Serialized用户或空的\r\n            \r\n","\r\n            The Y coordinate of the touch point relative to the top edge of the screen.\r\n            ":"\r\n            触摸点相对于屏幕顶部边缘的Y坐标。\r\n            \r\n","Constructor of value spaces that a\n            <code>java.":"价值空间的构造函数\r\n            <code> Java。\r\n","org.json.JSONObject.JSONObject(org.json.JSONTokener)":"org.json.jsonobject.jsonobject（org.json.jsontokener）\r\n","MAX_KEY_LENGTH":"max_key_length\r\n","Preferences#putByteArray(String,byte[])":"首选项＃putbyTearray（字符串，字节[]）\r\n"," objects&#x2E; Entry-point to\n            the validation API.":" 对象＆＃x2e;入口点\r\n            验证API。\r\n","java.util.logging.Logger.getName()":"java.util.logging.logger.getName（）\r\n","Establish a default function resolver.":"建立默认函数解析器。\r\n","Loads version information for a list of packages.":"加载版本的信息列表。\r\n","When the underlying XMLReader does\n    not recognize the property name.":"当基础XMLReader确实\r\n    无法识别属性名称。\r\n","Constant used to initialize cipher to key-unwrapping mode.":"常数用于初始化密码到键 - 未包装模式。\r\n","\r\n            Formats the provided ":"\r\n            格式提供\r\n","Returns the context of this session, or null if no context is available.":"返回本会话的上下文，如果没有可用的上下文，则返回null。\r\n","java.util.function.LongUnaryOperator.andThen(java.util.function.LongUnaryOperator)":"java.util.function.longunaryoperator.andthen（java.util.function.longunaryoperator）\r\n"," is already an\n   attribute of another ":" 已经是一个\r\n   另一个属性\r\n","Returns a new CompletionStage that, when either this or the\n            other given stage complete normally, is executed using the\n            supplied executor, with the corresponding result as argument to\n            the supplied action.":"返回一个新的完整舞台，当\r\n            其他给定的阶段正常完成，使用\r\n            提供的执行人，将相应的结果作为参数\r\n            提供的行动。\r\n"," and\n            exports them.":" 和\r\n            出口它们。\r\n","doctype":"Doctype\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getWaitQueueLength(java.util.concurrent.locks.ConditionObject)":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.getwaitqueuelgenth（java.util.concurrent.locks.conditionObject）\r\n","\r\n            Extension methods to expose Authentication on HttpContext.\r\n            ":"\r\n            在HTTPContext上公开身份验证的扩展方法。\r\n            \r\n","if the lock is null\n":"如果锁定为空\r\n\r\n","\r\n            Notifies the renderer that the component should be rendered.\r\n            ":"\r\n            通知渲染器应渲染组件。\r\n            \r\n","A timeout while connecting to an HTTP server or waiting for an\n            available connection from an HttpConnectionManager.":"连接到HTTP服务器或等待\r\n            来自HTTPConnectionManager的可用连接。\r\n"," NO_MODIFICATION_ALLOWED_ERR: Raised if the context node is a\n   read only node and the content is being appended to its child list,\n   or if the parent node of the context node is read only node and the\n   content is being inserted in its child list.\n   ":" no_modification_allowed_err：如果上下文节点是一个\r\n   仅阅读节点，并且内容被附加到其子女列表中，\r\n   或者，如果上下文节点的父节点仅读取节点，则\r\n   内容正在其子列表中插入。\r\n   \r\n","org.w3c.dom.NamedNodeMap.item(int)":"org.w3c.dom.namednodemap.item（int）\r\n","\r\n            A flag indicating whether authorization has succeeded.\r\n            This value is ":"\r\n            指示授权是否成功的标志。\r\n            这个值是\r\n","Returns the number of bytes written to the output buffer.":"返回写入输出缓冲区的字节数。\r\n","Log a message, specifying source class and method,\n            with no arguments.":"记录一条消息，指定源类和方法，\r\n            没有争论。\r\n","java.util.zip.Inflater.getAdler()":"java.util.zip.inflater.getadler（）\r\n","Returns the current number of permits available in this semaphore.":"返回此信号中可用的当前许可证数量。\r\n","javax.xml.parsers.DocumentBuilderFactory.isValidating()":"javax.xml.parsers.documentbuilderfactory.isvalidating（）\r\n","org.json.JSONStringer.array()":"org.json.jsonstringer.array（）\r\n","\r\n            Create an instance of the options initialized with the default values\r\n            ":"\r\n            创建一个用默认值初始化的选项的实例\r\n            \r\n","Get all prefixes bound to a Namespace URI in the current\n            scope.":"将所有前缀绑定到当前的名称空间URI\r\n            范围。\r\n","Sets the cipher suites enabled for use on this engine.":"将启用的密码套件设置为可在此发动机上使用。\r\n","if no provider can be found that can create a key of type\n             ":"如果找不到可以创建类型钥匙的提供商\r\n             \r\n","This class specifies a Diffie-Hellman public key with its associated\n            parameters.":"该课程指定了及其关联的Diffie-Hellman公钥\r\n            参数。\r\n"," to retrieve password information.":" 检索密码信息。\r\n",". For internal framework use only.\r\n            ":"。仅用于内部框架。\r\n            \r\n","Create an instance of a ":"创建一个实例\r\n"," (instead of\n             NoSuchAlgorithmException as in 1.4 release)\n":" （代替\r\n             nosuchalgorithmexception如1.4发行）\r\n\r\n","Constructs an exception reporting a key management error\n            found by an SSL subsystem.":"构建一个例外报告关键管理错误\r\n            由SSL子系统找到。\r\n","Returns the approximate total number of tasks that have\n            completed execution.":"返回大约具有的任务总数\r\n            完成的执行。\r\n","javax.xml.xpath.XPathFactory.DEFAULT_OBJECT_MODEL_URI":"javax.xml.xpath.xpathfactory.default_object_model_uri\r\n",",\n            the W3C DOM.":"，，，，\r\n            W3C DOM。\r\n","The connection to auto-release.":"与自动释放的连接。\r\n","Set the value of a property.":"设置属性的值。\r\n","Creates a socket and connect it to the specified remote address\n            on the specified remote port.":"创建一个插座并将其连接到指定的遥控地址\r\n            在指定的远程端口上。\r\n","Return the value of a parameter if known.":"返回参数的值，如果已知。\r\n","Mode flag to open a zip file and mark it for deletion.":"模式标志以打开zip文件并将其标记为删除。\r\n","Checks whether a character is ":"检查角色是否是\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(int)":"java.util.concurrent.locks.abstractqueedsynchronizer.setstate（int）\r\n"," if it exists, coercing it if\n            necessary, or ":" 如果存在，请强迫它\r\n            必要的，或\r\n","org.xml.sax.helpers.AttributeListImpl.AttributeListImpl()":"org.xml.sax.helpers.attributelistimpl.attributelistimpl（）\r\n","javax.xml.transform.URIResolver":"javax.xml.transform.uriresolver\r\n","java.util.prefs.AbstractPreferences.cachedChildren()":"java.util.prefs.abstractpreferences.cachedchildren（）\r\n","DES/CBC/PKCS5Padding":"DES/CBC/PKCS5PADDING\r\n","An adaptor for accessing route related parameters in ":"用于访问路由相关参数的适配器\r\n","3 minutes":"3分钟\r\n","javax.net.ssl.SSLHandshakeException":"javax.net.ssl.sslhandshakeexception\r\n","Signals that a data format error has occurred.":"信号表明发生了数据格式错误。\r\n","If an error occurs obtaining the ":"如果发生错误\r\n","Notifies registered listeners that a <code>RowSet</code> object\n            has had a change in one of its rows.":"通知注册的听众，<code> rowset </code>对象\r\n            它的一排发生了变化。\r\n","When the\n            XMLReader recognizes the feature name but\n            cannot set the requested value.":"当。。。的时候\r\n            xmlreader识别功能名称，但是\r\n            无法设置请求的值。\r\n","javax.xml.XMLConstants.XML_NS_PREFIX":"javax.xml.xmlconstants.xml_ns_prefix\r\n","org.xmlpull.v1.XmlPullParserFactory.isNamespaceAware()":"org.xmlpull.v1.xmlpullparserfactory.isnamespaceaware（）\r\n","java.util.prefs.AbstractPreferences.nodeExists(java.lang.String)":"java.util.prefs.abstractpreferences.nodeexists（java.lang.string）\r\n","Implementation-Title":"实施标题\r\n","org.xmlpull.v1.XmlPullParser.TYPES":"org.xmlpull.v1.xmlpullparser.types\r\n","Queries whether any threads are waiting on the given condition\n            associated with this synchronizer.":"查询是否有任何线程在给定条件下等待\r\n            与此同步器相关联。\r\n","javax.sql.RowSet.setBoolean(java.lang.String, boolean)":"javax.sql.rowset.setboolean（java.lang.string，boolean）\r\n","\r\n            Reads a sequence of bytes without any decoding.\r\n            ":"\r\n            读取一系列字节，没有任何解码。\r\n            \r\n","\r\n            Returns a successful result.\r\n            ":"\r\n            返回成功的结果。\r\n            \r\n","The antiforgery cookie token is invalid.":"抗试验饼干令牌无效。\r\n","Construct a new parser adapter.":"构建一个新的解析器适配器。\r\n","if this array has no value at ":"如果此数组没有值\r\n","javax.xml.xpath.XPathFunctionException.XPathFunctionException(java.lang.String)":"javax.xml.xpath.xpathFunctionException.xpathFunctionException（java.lang.string）\r\n","Obtains the charset for encoding\n ":"获取用于编码的字符集\r\n \r\n","\r\n            When multiple ":"\r\n            当多个\r\n"," type doesn't match the ":" 类型不匹配\r\n"," value that may be updated atomically.":" 可能会在原子上更新的价值。\r\n","org.json.JSONArray.isNull(int)":"org.json.jsonarray.isnull（int）\r\n","javax.net.ssl.CertPathTrustManagerParameters.CertPathTrustManagerParameters(java.security.cert.CertPathParameters)":"javax.net.ssl.certpathtrustmanagerparameters.certpathtrustmanagerparameters（java.security.cert.cert.certpathparameters）\r\n","org.json.JSONArray.put(int, long)":"org.json.jsonarray.put（int，long）\r\n","RejectedExecutionHandler":"拒绝ExecutionHandler\r\n","\r\n            Notifies the a state change has been triggered.\r\n            ":"\r\n            通知国家变更已触发。\r\n            \r\n","Indicates whether this connection is in a reusable communication state.":"指示此连接是否处于可重复使用的通信状态。\r\n","java.util.zip.Deflater.NO_FLUSH":"java.util.zip.deflater.no_flush\r\n","if no such mapping exists.\n":"如果没有这样的映射。\r\n\r\n","Returns true if this Map contains no attributes.":"如果此地图不包含属性，则返回true。\r\n"," do not specify a valid chunk in the input\n             buffer.":" 请勿在输入中指定有效的块\r\n             缓冲。\r\n","java.util.logging.LogRecord.setResourceBundle(java.util.ResourceBundle)":"java.util.logging.logrecord.setresourcebundle（java.util.resourcebundle）\r\n","java.util.zip.Deflater.BEST_SPEED":"java.util.zip.deflater.best_speed\r\n"," containing the general entities, both\n external and internal, declared in the DTD.":" 包含一般实体，两者都\r\n 外部和内部，在DTD中声明。\r\n","javax.xml.transform.TransformerException.TransformerException(java.lang.String, javax.xml.transform.SourceLocator)":"javax.xml.transform.transformerexception.transformerexception（java.lang.string，javax.xml.transform.sourcelform.sourcelocator）\r\n",", which enables authentication capabilities.\r\n            ":"，可以实现身份验证功能。\r\n            \r\n","javax.xml.transform.dom.DOMResult.DOMResult(org.w3c.dom.Node)":"javax.xml.transform.dom.domresult.domresult（org.w3c.dom.node）\r\n","javax.sql.RowSet.setBinaryStream(java.lang.String, java.io.InputStream)":"javax.sql.Rowset.setBinarystream（java.lang.string，java.io.inputstream）\r\n"," operating in\n            an AEAD mode (such as GCM/CCM) is unable to verify the supplied\n            authentication tag.":" 运行\r\n            AEAD模式（例如GCM/CCM）无法验证所提供的\r\n            身份验证标签。\r\n","A TransformerFactory instance can be used to create\n            ":"TransformerFactory实例可用于创建\r\n            \r\n","Retrieve or display the information requested in the\n            provided Callbacks.":"检索或显示在\r\n            提供了回调。\r\n","Returns the current value of synchronization state. -or- Sets the value of synchronization state.":"返回同步状态的当前值。 - 或设置同步状态的值。\r\n","javax.xml.datatype.Duration.getMonths()":"javax.xml.datatype.duration.getMonths（）（）\r\n"," is \"\" and neither the ":" 是“”，也不是\r\n","javax.net.ssl.X509ExtendedKeyManager":"javax.net.ssl.x509extendedKeyManager\r\n","javax.crypto.CipherSpi.engineUpdate(byte[], int, int)":"javax.crypto.cipherspi.engineupdate（byte []，int，int）\r\n","java.util.zip.ZipEntry.getExtra()":"java.util.zip.zipentry.getExtra（）\r\n","Obtains the timestamp of the versioned module or informal unit.":"获得版本的模块或非正式单元的时间戳。\r\n","\r\n            Gets the token response returned by the authentication service.\r\n            ":"\r\n            获取身份验证服务返回的令牌响应。\r\n            \r\n","javax.xml.datatype.XMLGregorianCalendar.add(javax.xml.datatype.Duration)":"javax.xml.datatype.xmlgregoriancalendar.add（javax.xml.datatype.duration）\r\n","javax.crypto.spec.DHGenParameterSpec.DHGenParameterSpec(int, int)":"javax.crypto.spec.dhgenparameterspec.dhgenparameterspec（int，int）\r\n","\r\n            Represents a single contact point on a touch-sensitive device.\r\n            The contact point is commonly a finger or stylus and the device may be a touchscreen or trackpad.\r\n            ":"\r\n            表示触摸敏感设备上的一个触点点。\r\n            接触点通常是手指或手写笔，设备可以是触摸屏或触控板。\r\n            \r\n","\r\n            A ClaimAction that selects all top level values from the json user data and adds them as Claims.\r\n            This excludes duplicate sets of names and values.\r\n            ":"\r\n            从JSON用户数据中选择所有最高级别值并将其添加为索赔的索赔。\r\n            这不包括名称和值的重复集。\r\n            \r\n","java.util.logging.Filter.isLoggable(java.util.logging.LogRecord)":"java.util.logging.filter.isloggable（java.util.logging.logrocord）\r\n","java.util.concurrent.ThreadPoolExecutor.execute(java.lang.Runnable)":"java.util.concurrent.threadpoolexecutor.execute（java.lang.runnable）\r\n","Gets a header representing all of the header values with the given name.":"获取一个带有给定名称的标题代表所有标题值。\r\n","Estimates the length of a formatted name-value pair.":"估计格式的名称值对的长度。\r\n","in case of a problem\n":"如果有问题\r\n\r\n","Construct a StreamSource from a URL.":"从URL构造溪流。\r\n","javax.crypto.KeyAgreement.getProvider()":"javax.crypto.keyagreement.getProvider（）\r\n","javax.net.ssl.SSLSession.getValueNames()":"javax.net.ssl.sslsession.getValueNames（）\r\n","Time unit representing one thousandth of a microsecond\n":"代表微秒千分之一的时间单元\r\n\r\n","java.util.concurrent.atomic.AtomicReferenceFieldUpdater.set(java.lang.Object, java.lang.Object)":"java.util.concurrent.atomic.atomicreference fieldupdater.set（java.lang.object，java.lang.object）\r\n","Constructs a LoginException with no detail message.":"构建一个没有详细信息的loginexception。\r\n","\r\n            Metadata that provides a CORS policy.\r\n            ":"\r\n            提供CORS政策的元数据。\r\n            \r\n","\r\n            The Origin request header.\r\n            ":"\r\n            原点请求标题。\r\n            \r\n","\r\n            Adds Server-Side Blazor services to the service collection.\r\n            ":"\r\n            将服务器端的外汇服务添加到服务集合中。\r\n            \r\n","java.util.jar.Attributes.put(java.lang.Object, java.lang.Object)":"java.util.jar.attributes.put（java.lang.object，java.lang.object）\r\n","javax.xml.transform.Transformer.transform(javax.xml.transform.Source, javax.xml.transform.Result)":"javax.xml.transform.transformer.transform（javax.xml.transform.source，javax.xml.transform.result）\r\n"," value using ":" 使用\r\n","java.util.concurrent.atomic.AtomicInteger.set(int)":"java.util.concurrent.atomic.atomicinteger.set（int）\r\n"," (<b>SPI</b>)\n            for the <code>KeyAgreement</code> class.":" （<b> spi </b>）\r\n            对于<code> keyagreement </code>类。\r\n","Returns a client <code>SSLSessionContext</code> object for\n            this context.":"返回客户端<code> sslsessionContext </code>对象\r\n            这个上下文。\r\n","javax.security.auth.login.LoginException":"javax.security.auth.login.loginexception\r\n"," underlying this instance.\r\n            ":" 基础此实例。\r\n            \r\n","Return the unmodifiable List of the\n            java.":"返回未修改的列表\r\n            爪哇。\r\n","org.w3c.dom.DOMException.DOMSTRING_SIZE_ERR":"org.w3c.dom.domexception.domstring_size_err\r\n","Returns the header value.":"返回标题值。\r\n","Equivalent to\n            ":"相当于\r\n            \r\n","Any SAX exception, possibly\n            wrapping another exception.":"任何SAX例外，可能\r\n            包装另一个例外。\r\n"," if the alt key was down when the event was fired. ":"如果事件被解雇时，alt键降低了。\r\n","\r\n            Encapsulates a failure result of ":"\r\n            封装了失败结果\r\n"," buffer is too small.":" 缓冲区太小。\r\n"," instances.\r\n            This is designed with both server-side and client-side perf in mind:\r\n            \r\n             * Array-like regions always have a fixed size per entry (even if some entry types\r\n               don't require as much space as others) so the recipient can index directly.\r\n             * The indices describing where field data starts, where each string value starts,\r\n               etc., are written *after* that data, so when writing the data we don't have to\r\n               compute the locations up front or seek back to an earlier point in the stream.\r\n               The recipient can only process the data after reading it all into a buffer,\r\n               so it's no disadvantage for the location info to be at the end.\r\n             * We only serialize the data that the JS side will need. For example, we don't\r\n               emit frame sequence numbers, or any representation of nonstring attribute\r\n               values, or component instances, etc.\r\n               \r\n            We don't have or need a .NET reader for this format. We only read it from JS code.\r\n            ":" 实例。\r\n            考虑到服务器端和客户端的完善：\r\n            \r\n             *类似数组的区域总是每个条目的固定尺寸（即使某些条目类型\r\n               不需要其他空间），因此收件人可以直接索引。\r\n             *描述字段数据从何处，每个字符串值启动的索引，\r\n               等等， *之后 *该数据，因此在编写数据时，我们不必\r\n               预先计算位置，或者返回到流中的较早点。\r\n               收件人只能在将数据全部阅读到缓冲区中后才处理数据，\r\n               因此，位置信息最终并不是不利的。\r\n             *我们仅序列化JS端需要的数据。例如，我们不\r\n               发射框架序列编号或任何符合属性的任何表示形式\r\n               值或组件实例，等等。\r\n               \r\n            我们没有或需要.NET读取器以进行此格式。我们仅从JS代码读取它。\r\n            \r\n","Set time as one unit, including the optional infinite precision\n            fractional seconds.":"将时间设置为一个单元，包括可选的无限精度\r\n            分数秒。\r\n","substringData":"substringdata\r\n","java.util.jar.Manifest.write(java.io.OutputStream)":"java.util.jar.manifest.write（java.io.outputstream）\r\n","org.xml.sax.ContentHandler.startDocument()":"org.xml.sax.contenthandler.startdocument（）\r\n","javax.sql.RowSetMetaData.setAutoIncrement(int, boolean)":"Javax.sql.RowsetMetadata.setautoincrement（INT，布尔值）\r\n","Create a new <code>TransformerFactoryConfigurationError</code> with the\n            given <code>Exception</code> base cause and detail message.":"使用新的<code> TransformerFactoryConfigurationError </code>\r\n            给定的<code>异常</code>基本原因和详细信息。\r\n","oldAttr":"Oldattr\r\n"," and the\n   DOM application attempts to insert a second\n   ":" 和\r\n   DOM应用程序尝试插入第二个\r\n   \r\n","An object that implements this interface contains the information\n            needed to build a transformation result tree.":"实现此接口的对象包含信息\r\n            需要建立转换结果树。\r\n","java.util.function.DoublePredicate.and(java.util.function.DoublePredicate)":"java.util.function.doublepredicate.and（java.util.function.doublepredicate）\r\n","org.xmlpull.v1.XmlPullParser.getProperty(java.lang.String)":"org.xmlpull.v1.xmlpullparser.getProperty（java.lang.string）\r\n","javax.crypto.ExemptionMechanismSpi.engineInit(java.security.Key, java.security.spec.AlgorithmParameterSpec)":"Javax.Crypto.ExemptionMechanismspi.Engineinit（java.security.key，java.security.security.spec.algorithmparameterspec）\r\n","A node in a hierarchical collection of preference data.":"首选项数据层次集合中的节点。\r\n","Instances of this class represent a matcher that performs match\n            operations on an ":"该课程的实例代表表演匹配项的匹配项\r\n            An的操作\r\n"," struct\r\n            over the given ":" 结构\r\n            在给定的\r\n","java.util.concurrent.LinkedBlockingQueue.remainingCapacity()":"java.util.concurrent.linkedblockingqueue.remainingcapacity（）\r\n","if the initialization fails.\n":"如果初始化失败。\r\n\r\n","The interface to a Diffie-Hellman key.":"Diffie-Hellman键的接口。\r\n","Default constructor is protected on purpose.":"默认构造函数是故意保护的。\r\n","Notifies registered listeners that a <code>RowSet</code> object's\n            cursor has moved.":"通知注册的听众，<code> rowset </code>对象的\r\n            光标已移动。\r\n","A response interceptor that adds a Date header.":"添加日期标头的响应拦截器。\r\n","Returns the named child if it exists, or ":"如果存在命名的孩子，则返回\r\n","javax.crypto.KeyGenerator.getInstance(java.lang.String)":"javax.crypto.keygenerator.getInstance（java.lang.string）\r\n","#newXMLFilter(Source src)":"#newxmlfilter（源SRC）\r\n","javax.security.auth.callback.UnsupportedCallbackException":"javax.security.auth.callback.unsupportedcallbackexception\r\n","\r\n            Determines whether the authorization result was successful or not.\r\n            ":"\r\n            确定授权结果是否成功。\r\n            \r\n","javax.crypto.ExemptionMechanism.getOutputSize(int)":"javax.crypto.ExemptionMechanism.getOutputsize（int）\r\n","org.xml.sax.helpers.XMLReaderAdapter":"org.xml.sax.helpers.xmlreaderadapter\r\n","org.w3c.dom.Node.DOCUMENT_NODE":"org.w3c.dom.node.document_node\r\n","javax.net.ssl.SSLParameters.setProtocols(java.lang.String[])":"javax.net.ssl.sslparameters.setProtocols（java.lang.string []）\r\n","Binds the specified <code>value</code> object into the\n            session's application layer data\n            with the given <code>name</code>.":"将指定的<code> value </code>对象绑定到\r\n            会话的应用程序层数据\r\n            使用给定的<code>名称</code>。\r\n","org.xmlpull.v1.XmlPullParser.defineEntityReplacementText(java.lang.String, java.lang.String)":"org.xmlpull.v1.xmlpullparser.defineentityreplacementtext（java.lang.string，java.lang.string）\r\n","javax.net.ssl.SSLSocket.addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)":"javax.net.ssl.sslsocket.addhandhakecompletedListener（javax.net.ssl.handshakecompletedlistedlistener）\r\n","java.util.function.BiPredicate.negate()":"java.util.function.bipredicate.negate（）（）\r\n","Set the locale for error reporting.":"设置错误报告的语言环境。\r\n","javax.crypto.Cipher.getExemptionMechanism()":"javax.crypto.cipher.getExemptionmechanism（）\r\n","Tests if Nagle's algorithm is to be used.":"测试是否要使用Nagle的算法。\r\n","Returns the SSLParameters in effect for newly accepted connections. -or- Applies SSLParameters to newly accepted connections.":"返回新近接受的连接有效的SSLPARAMETER。 - 或 - 将SSLParameters应用于新接受的连接。\r\n","java.util.jar.Manifest":"java.util.jar.manifest\r\n"," is\n   malformed.\n   ":" 是\r\n   畸形。\r\n   \r\n","The handshake is finished.":"握手完成了。\r\n","Sets the status line of this response with a reason phrase.":"用理由短语设置此响应的状态线。\r\n","Get the SAX InputSource to be used for the Source. -or- Set the SAX InputSource to be used for the Source.":"将SAX Inputsource用于源。 - 或 - 将SAX Inputsource设置为用于源。\r\n","Parameter names for HttpAuth.":"HTTPAUTH的参数名称。\r\n","javax.crypto.spec.RC2ParameterSpec.getEffectiveKeyBits()":"javax.crypto.spec.rc2parameterspec.geteffectivekeybits（）\r\n","Constant used to initialize cipher to decryption mode.":"常数用于初始化密码到解密模式。\r\n","Helps tracking the steps in establishing a route.":"帮助跟踪建立路线的步骤。\r\n","if the thread is null\n":"如果线程为null\r\n\r\n","org.apache.http.conn.ssl.AllowAllHostnameVerifier":"org.apache.http.conn.ssl.allowallhostnameverifier\r\n","java.util.stream.Collectors.toConcurrentMap(java.util.function.Function, java.util.function.Function)":"java.util.stream.collectors.toconcurrentmap（java.util.function.function，java.util.function.function.function.function）\r\n","java.util.prefs.AbstractPreferences.putLong(java.lang.String, long)":"java.util.prefs.abstractpreferences.putlong（java.lang.string，long）\r\n","org.xml.sax.helpers.XMLReaderAdapter.skippedEntity(java.lang.String)":"org.xml.sax.helpers.xmlreaderadapter.skippertity（java.lang.string）\r\n","Adapts a ":"适应a\r\n","A client-side request director.":"客户端请求主管。\r\n","\r\n            The authentication schemes the ":"\r\n            身份验证方案\r\n","Returns true if this Map maps one or more attribute names (keys)\n            to the specified value.":"如果此地图映射一个或多个属性名称（键），则返回true\r\n            指定值。\r\n"," or its prefix is \"xmlns\" and\n   the ":" 或其前缀是“ XMLNS”，并且\r\n   这\r\n","Aborts execution of the request.":"中止执行请求。\r\n","Returns the number of bytes consumed from the input buffer.":"返回输入缓冲区消耗的字节数。\r\n","This class implements an input stream filter for reading files in the\n            ZIP file format.":"本类实现输入流滤波器，用于读取文件\r\n            zip文件格式。\r\n","javax.net.ssl.SSLPeerUnverifiedException":"javax.net.ssl.sslpeerunverifiedException\r\n"," which will complete once all asynchronous processing related to the event\r\n            has completed.\r\n            ":" 一旦与事件相关的所有异步处理将完成\r\n            已经完成。\r\n            \r\n","javax.security.cert.CertificateNotYetValidException.CertificateNotYetValidException(java.lang.String)":"javax.security.cert.certificatificatyetvalidexception.certificatenotyetvalidexception（java.lang.string）\r\n","initialDelay + 2 * period":"initiaDelay + 2 *期间\r\n","\r\n            Get a parameter from the ":"\r\n            从\r\n","javax.security.auth.Subject":"javax.security.auth.subject\r\n","DOMError.type":"domerror.type\r\n","java.util.zip.DeflaterOutputStream.deflate()":"java.util.zip.deflateroutputstream.deflate（）（）\r\n"," implementing a \"group by\"\n            operation on input elements of type ":" 实施“小组”\r\n            在类型的输入元素上操作\r\n","javax.xml.XMLConstants.W3C_XML_SCHEMA_NS_URI":"javax.xml.xmlconstants.w3c_xml_schema_ns_uri\r\n","Parse the ":"解析\r\n","Creates and executes a periodic action that becomes enabled first\n            after the given initial delay, and subsequently with the\n            given delay between the termination of one execution and the\n            commencement of the next.":"创建并执行一个定期操作，该操作首先启用\r\n            给定初始延迟后，随后是\r\n            给定一个执行终止和\r\n            下一个开始。\r\n","Returns the parent of this phaser, or ":"返回此移位器的父母，或\r\n","The node is a <code>Notation</code>.":"节点是<code> note法</code>。\r\n","java.util.logging.Logger.logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Object[])":"java.util.logging.logger.logp（java.util.logging.level，java.lang.string，java.lang.string，java.lang.string，java.lang.object []）\r\n","Returns all text of ":"返回所有文本\r\n","Returns a Map of the entries contained in this Manifest.":"返回此清单中包含的条目的地图。\r\n"," is invoked immediately after the completion of\r\n            ":" 完成后立即调用\r\n            \r\n","Look up the value of a property.":"查找属性的价值。\r\n","javax.xml.transform.stream.StreamSource.StreamSource(java.io.Reader, java.lang.String)":"javax.xml.transform.stream.streamsource.streamsource（java.io.reader，java.lang.string）\r\n","HIERARCHY_REQUEST_ERR: Raised if the content cannot replace, be\n   inserted before, after, or as a child of the context node (see also\n   ":"eSrarchy_request_err：如果内容无法替换，则提出\r\n   插入之前，之后或作为上下文节点的孩子（另请参见\r\n   \r\n","java.util.concurrent.LinkedBlockingQueue":"java.util.concurrent.linkedblockingqueue\r\n","Acquires the write lock unless the current thread is\n ":"除非当前线程为\r\n \r\n","Creates an element of the given qualified name and namespace URI.":"创建给定合格名称和名称空间URI的元素。\r\n","javax.sql.RowSet.setByte(int, byte)":"javax.sql.Rowset.setbyte（int，byte）\r\n","javax.xml.datatype.DatatypeFactory.newDuration(java.lang.String)":"javax.xml.datatype.datatypefactory.newduration（java.lang.string）\r\n","javax.xml.transform.sax.SAXSource.SAXSource()":"javax.xml.transform.sax.saxsource.saxsource（）\r\n","\r\n            Context object passed to the ICookieAuthenticationEvents method SignedIn.\r\n            ":"\r\n            上下文对象传递给iCookieAthenticationEvents方法签名。\r\n            \r\n","javax.xml.transform.TransformerFactory.newInstance(java.lang.String, java.lang.ClassLoader)":"javax.xml.transform.transformerfactory.newinstance（java.lang.string，java.lang.classloader）\r\n","\r\n            Gets or sets timeout value in milliseconds for back channel communications with the remote identity provider.\r\n            ":"\r\n            获取或设置与远程身份提供商的后频道通信以毫秒为单位的超时值。\r\n            \r\n","Log a lazily constructed message, specifying source class and method,\n            with no arguments.":"记录懒惰的消息，指定源类和方法，\r\n            没有争论。\r\n","\r\n            Reads a string of bytes, whose length is determined by a header of one of these types:\r\n            ":"\r\n            读取一串字符串，其长度由以下类型之一的标题确定：\r\n            \r\n","Returns the encryption algorithm.":"返回加密算法。\r\n"," NOT_SUPPORTED_ERR: Raised when the parameter name is recognized\n   but the requested value cannot be set.\n   ":" not_supported_err：识别参数名称时提出\r\n   但是无法设置请求的值。\r\n   \r\n","javax.xml.parsers.SAXParser.parse(java.lang.String, org.xml.sax.helpers.DefaultHandler)":"javax.xml.parsers.saxparser.parse（java.lang.string，org.xml.sax.helpers.defaulthandler）\r\n","if the specified key can not be used to initialize this\n             cipher instance.\n":"如果不能使用指定的密钥来初始化此\r\n             密码实例。\r\n\r\n","if the path name is invalid.":"如果路径名是无效的。\r\n","javax.security.auth.Destroyable":"javax.security.auth.destroyable\r\n","Interface for a list of XML attributes.":"XML属性列表的接口。\r\n"," child or ":" 孩子或\r\n","\r\n            Gets or sets a value that indicates how long the server will wait before timing out an asynchronous JavaScript function invocation.\r\n            ":"\r\n            获取或设置一个值，该值指示服务器将等待多长时间，然后才能定时异步JavaScript函数调用。\r\n            \r\n","org.xml.sax.Parser.setLocale(java.util.Locale)":"org.xml.sax.parser.setlocale（java.util.locale）\r\n","javax.security.auth.SubjectDomainCombiner":"Javax.Security.auth.SubjectDomainCombiner\r\n","Input buffer for reading compressed data.":"用于读取压缩数据的输入缓冲区。\r\n","org.w3c.dom.CharacterData.replaceData(int, int, java.lang.String)":"org.w3c.dom.characterdata.replacedata（int，int，java.lang.string）\r\n"," (instead of\n             NoSuchAlgorithmException as in 1.4 release).\n":" （代替\r\n             Nosuchalgorithmexception如1.4发行）。\r\n\r\n","java.util.concurrent.ThreadPoolExecutor.remove(java.lang.Runnable)":"java.util.concurrent.threadpoolexecutor.remove（java.lang.runnable）\r\n","\r\n            A ":"\r\n            一个\r\n","javax.net.ssl.ExtendedSSLSession.getLocalSupportedSignatureAlgorithms()":"javax.net.ssl.extendendsslsession.getLocalsupportedSignatureAletGorithms（）\r\n","org.xml.sax.helpers.XMLReaderAdapter.endDocument()":"org.xml.sax.helpers.xmlreaderadapter.enddocument（）\r\n"," but has not\n            completely terminated.":" 但没有\r\n            完全终止。\r\n","org.json.JSONArray.getLong(int)":"org.json.jsonarray.getlong（int）\r\n"," is explicitly specified.\r\n            ":" 明确指定。\r\n            \r\n","returnType":"returnType\r\n","Interface for read only XML Namespace context processing.":"仅读取XML名称空间上下文处理的接口。\r\n","This interface is implemented by any class which wants to receive\n            notifications about the completion of an SSL protocol handshake\n            on a given SSL connection.":"该界面是由想要接收的任何类实现的\r\n            有关完成SSL协议握手的通知\r\n            在给定的SSL连接上。\r\n","Preferences#absolutePath()":"首选项＃absolautepath（）\r\n","java.util.logging.Logger.finer(java.util.function.Supplier)":"java.util.logging.logger.finer（java.util.function.supplier）\r\n","org.json.JSONArray.JSONArray(java.lang.String)":"org.json.jsonarray.jsonarray（java.lang.string）\r\n","java.util.zip.Inflater.setInput(byte[])":"java.util.zip.inflater.setInput（byte []）\r\n","Constants and static helpers related to the HTTP authentication.":"常数和与HTTP身份验证有关的静态帮助者。\r\n"," INVALID_STATE_ERR: Raised if the ":" Invalid_state_err：如果是\r\n","if the specified parameters are invalid for this key\n             agreement algorithm.\n":"如果指定参数对于此密钥无效\r\n             协议算法。\r\n\r\n","The driver calls this method on all <code>StatementEventListener</code>s registered on the connection when it detects that a\n            <code>PreparedStatement</code> is closed.":"该驱动程序在所有<code> statementEventListener上调用此方法\r\n            <code>准备安排</code>已关闭。\r\n","old spec":"旧规格\r\n"," by copying all name/value mappings from\n            the given map.":" 通过复制所有名称/值映射\r\n            给定的地图。\r\n","\n            instance as XML using the specified\n            ":"\r\n            实例使用指定的\r\n            \r\n","javax.net.ssl.KeyStoreBuilderParameters.getParameters()":"javax.net.ssl.keystorebuilderparameters.getParameters（）\r\n","If the specified key is not already associated\n            with a value, associates it with the given value.":"如果指定的密钥尚未关联\r\n            有一个值，将其与给定值相关联。\r\n","java.util.concurrent.TimeUnit.convert(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.timeunit.convert（long，java.util.concurrent.timeunit）\r\n","Creates a new <code>ZipEntry</code> object for the specified\n            entry name.":"创建一个新的<code> zipentry </code>为指定的对象\r\n            条目名称。\r\n","org.w3c.dom.DOMImplementation.createDocument(java.lang.String, java.lang.String, org.w3c.dom.DocumentType)":"org.w3c.dom.domimplementation.createdocument（java.lang.string，java.lang.string，org.w3c.dom.documentType）\r\n","java.util.zip.ZipOutputStream":"java.util.zip.zipoutputstream\r\n","javax.security.auth.AuthPermission":"javax.security.auth.authpermission\r\n","Creates and executes a one-shot action that becomes enabled\n            after the given delay.":"创建并执行一个启用的单发操作\r\n            给定的延迟之后。\r\n","Parse the content of the file specified as XML using the\n            specified ":"使用使用该文件指定为XML的文件的内容\r\n            指定的\r\n","the the parameters cannot be used to initialize this\n             mechanism.":"参数不能用于初始化此\r\n             机制。\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.acquireInterruptibly(long)":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.AcquireDressruption（长）\r\n","Sets the preset dictionary to the given array of bytes.":"将预设字典设置为给定的字节数组。\r\n","\r\n            A factory for creating ":"\r\n            创建工厂\r\n","Performs interceptor processing of requests and responses.":"执行请求和响应的拦截器处理。\r\n","Stream based logging ":"基于流的记录\r\n","@ref":"@ref\r\n","javax.xml.parsers.DocumentBuilder.getSchema()":"javax.xml.parsers.documentbuilder.getschema（）\r\n","org.xml.sax.helpers.AttributesImpl.AttributesImpl()":"org.xml.sax.helpers.attributesimpl.attributesimpl（）\r\n","if the date parameter is null.\n":"如果日期参数为null。\r\n\r\n","javax.net.SocketFactory.createSocket(java.lang.String, int, java.net.InetAddress, int)":"Javax.net.SocketFactory.Createsocket（Java.lang.String，INT，Java.net.inetaddress，int）\r\n","javax.xml.xpath.XPathFactory.isObjectModelSupported(java.lang.String)":"javax.xml.xpath.xpathfactory.isobjectmodelsupported（java.lang.string）\r\n","Creates a Cipher object.":"创建一个密码对象。\r\n","Obtains the start of the header value in the ":"在\r\n","\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            ":"\r\n            获取或设置输入的值。这应与双向绑定一起使用。\r\n            \r\n","org.w3c.dom.DOMImplementation.hasFeature(java.lang.String, java.lang.String)":"org.w3c.dom.domimplementation.hasfeature（java.lang.string，java.lang.string）\r\n","Get the properties corresponding to the effective xsl:output element.":"获取对应于有效XSL：输出元素的属性。\r\n","java.util.regex.Matcher.region(int, int)":"java.util.regex.matcher.gregion（int，int）\r\n","Choose an alias to authenticate the server side of an\n            <code>SSLEngine</code> connection given the public key type\n            and the list of certificate issuer authorities recognized by\n            the peer (if any).":"选择一个别名来验证服务器端\r\n            <code> sslengine </code>连接给定公共密钥类型\r\n            以及确认的证书发行人清单\r\n            同伴（如果有）。\r\n","Constructs a <code>RowSetEvent</code> object initialized with the\n            given <code>RowSet</code> object.":"构建A <code> rowsetevent </code>用与\r\n            给定<code> Rowset </code>对象。\r\n"," doesn't exist or\n     cannot be coerced to a boolean.\n":" 不存在或\r\n     无法强迫布尔人。\r\n\r\n","Returns the current value of the mark.":"返回标记的当前值。\r\n","java.util.jar.Attributes":"java.util.jar.tributes\r\n","Look up the index of an attribute by Namespace name.":"通过名称名称查找属性的索引。\r\n","java.util.concurrent.Phaser.arriveAndDeregister()":"java.util.concurrent.phaser.arriveandderegister（）\r\n"," with values from the given primitive array.":" 带有给定原始数组的值。\r\n"," was created using\n ":" 是使用\r\n \r\n","java.util.zip.InflaterInputStream.InflaterInputStream(java.io.InputStream, java.util.zip.Inflater)":"java.util.zip.inflaterinputstream.inflaterinputstream（java.io.inputstream，java.util.zip.inflater）\r\n","java.util.regex.Matcher.useTransparentBounds(boolean)":"java.util.regex.matcher.usetransparentbounds（布尔值）\r\n","javax.net.ssl.SSLSocket.SSLSocket(java.lang.String, int, java.net.InetAddress, int)":"javax.net.ssl.sslsocket.sslsocket（java.lang.string，int，java.net.inetaddress，int）\r\n","javax.xml.datatype.DatatypeFactory.newDurationYearMonth(long)":"javax.xml.datatype.datatypefactory.newdurationyearmonth（长）\r\n","#Phaser(Phaser, int) Phaser(parent, 0)":"#PHASER（Phaser，int）Phaser（父，0）\r\n","javax.crypto.spec.DHParameterSpec.DHParameterSpec(java.math.BigInteger, java.math.BigInteger)":"javax.crypto.spec.dhparameterspec.dhparameterspec（java.math.biginteger，java.math.biginteger）\r\n","javax.sql.RowSetListener.cursorMoved(javax.sql.RowSetEvent)":"javax.sql.RowsetListener.cursormved（javax.sql.Rowsetevent）\r\n","javax.xml.parsers.DocumentBuilderFactory.setXIncludeAware(boolean)":"javax.xml.parsers.documentbuilderfactory.setxincludeaware（boolean）\r\n","PBE":"PBE\r\n","Constructs a parameter set for RC2 from the given effective key size\n            (in bits) and IV.":"从给定有效的密钥大小为RC2构建参数集\r\n            （在位）和iv。\r\n","The default data protection provider may only be used when the IApplicationBuilder.Properties contains an appropriate 'host.AppName' key.":"默认数据保护提供商只有在iapplicationBuilder.properties包含适当的“ host.AppName”键时才能使用。\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.releaseShared(long)":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.Releaseshared（long）\r\n","Eventually sets the field of the given object managed by this\n            updater to the given updated value.":"最终设置由此管理的给定对象的字段\r\n            更新给定更新值。\r\n","\r\n            Provides information about the ":"\r\n            提供有关\r\n","Value for twelve month of year.":"每年十二个月的价值。\r\n","Defines the timeout in milliseconds used when retrieving an instance of \n ":"在检索一个实例时，以毫秒为单位定义超时\r\n \r\n","Protected method to construct a logger for a named subsystem.":"为命名子系统构建记录仪的受保护方法。\r\n","\r\n            Reads nil if it is the next token.\r\n            ":"\r\n            如果是下一个令牌，则读取零。\r\n            \r\n","org.xml.sax.helpers.AttributesImpl.clear()":"org.xml.sax.helpers.attributesimpl.clear（）\r\n","One or more variables that together maintain an initially zero\n            ":"一个或多个变量，将最初保持零保持零\r\n            \r\n","\r\n            Gets the collection of allowed roles.\r\n            ":"\r\n            获取允许角色的收集。\r\n            \r\n","javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory()":"javax.net.ssl.httpsurlconnection.getDefaultssslsocketFactory（）\r\n","Returns a <code>SSLContext</code> object that implements the\n            specified secure socket protocol.":"返回<code> sslContext </code>对象\r\n            指定的安全套接字协议。\r\n","The namespace prefix of this node, or ":"该节点的名称空间前缀，或\r\n","\r\n            This value should only be turned on in development scenarios as turning it on in production might result in the leak of\r\n            sensitive information to untrusted parties.\r\n            ":"\r\n            该值只能在开发方案中打开，因为在生产中打开它可能会导致泄漏\r\n            对不信任的政党的敏感信息。\r\n            \r\n",", or null if the array has no value\n            at ":"，或null如果数组没有值\r\n            在\r\n","For unparsed entities, the name of the notation for the entity.":"对于无与伦比的实体，该实体的符号名称。\r\n","Indicates a parse error.":"表示解析错误。\r\n","java.util.regex.Matcher.appendTail(java.lang.StringBuffer)":"java.util.regex.matcher.appendtail（java.lang.stringbuffer）\r\n","\r\n            The services being configured.\r\n            ":"\r\n            配置的服务。\r\n            \r\n","org.xml.sax.ext.Attributes2Impl.Attributes2Impl(org.xml.sax.Attributes)":"org.xml.sax.ext.attributes2impl.attributes2impl（org.xml.sax.attributes）\r\n","java.util.zip.ZipEntry.getCreationTime()":"java.util.zip.zipentry.getCreationTime（）\r\n","Atomically updates the current value with the results of\n            applying the given function to the current and given values,\n            returning the updated value.":"原子上更新当前值的结果\r\n            将给定函数应用于当前和给定值，\r\n            返回更新的值。\r\n","Sets the last modification time of the entry.":"设置条目的最后一个修改时间。\r\n","javax.crypto.Mac.update(byte[], int, int)":"javax.crypto.mac.update（byte []，int，int）\r\n","An <code>XPathFactory</code> instance can be used to create\n            ":"<code> XPathFactory </code>实例可用于创建\r\n            \r\n","if the specified key cannot be used to decrypt the data.\n":"如果指定的键不能用于解密数据。\r\n\r\n"," is\n   negative.\n   ":" 是\r\n   消极的。\r\n   \r\n","Queries whether any threads have been waiting to acquire longer\n            than the current thread.":"疑问是否有任何线程一直在等待更长的收购\r\n            比当前线程。\r\n","the deflation hint to set in the output archive.":"在输出存档中设置的通缩提示。\r\n"," parameter is outside value constraints for the field as specified\n   in .\n":" 参数是指定字段的外部值约束\r\n   在 。\r\n\r\n","The client may throw\n            an exception during processing.":"客户可能会投掷\r\n            处理过程中的例外。\r\n","javax.xml.datatype.DatatypeFactory.newDuration(boolean, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigDecimal)":"javax.xml.datatype.DatatypeFactory.newDuration(boolean, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigDecimal)\r\n","java.util.function.LongBinaryOperator.applyAsLong(long, long)":"java.util.function.longbinaryoperator.applyaslong（长，长）\r\n","If a call to a method such as <code>insertBefore</code> or\n            <code>removeChild</code> would make the <code>Node</code> invalid\n            with respect to \"partial validity\", this exception would be raised\n            and the operation would not be done.":"如果调用诸如<code> insertbeforeforefore </code>或\r\n            <code> removechild </code>将使<code>节点</code>无效\r\n            关于“部分有效性”，将提出此例外\r\n            而且操作将无法完成。\r\n","Opens a ZIP file for reading given the specified File object.":"打开给定指定文件对象的ZIP文件。\r\n","java.util.concurrent.Phaser.onAdvance(int, int)":"java.util.concurrent.phaser.onadvance（int，int）\r\n","javax.crypto.Mac.doFinal()":"javax.crypto.mac.dofinal（）\r\n","java.util.zip.DeflaterOutputStream.DeflaterOutputStream(java.io.OutputStream, java.util.zip.Deflater)":"java.util.zip.deflateroutputstream.deflateroutputstream（java.io.outputstream，java.util.zip.deflater）\r\n","Future#get() get()":"未来＃get（）get（）\r\n","Returns the blocker object supplied to the most recent\n            invocation of a park method that has not yet unblocked, or null\n            if not blocked.":"返回提供给最新的阻滞剂对象\r\n            尚未毫无阻碍或无效的公园方法的调用\r\n            如果没有阻止。\r\n","dsts":"DST\r\n"," (<b>SPI</b>)\n            for the <code>Mac</code> class.":" （<b> spi </b>）\r\n            对于<code> Mac </code>类。\r\n","javax.net.ssl.KeyManagerFactory.getInstance(java.lang.String, java.security.Provider)":"javax.net.ssl.keymanagerfactory.getinstance（java.lang.string，java.security.provider）\r\n"," represents a grouping of related information\n            for a single entity, such as a person.":" 代表相关信息的分组\r\n            对于一个人，例如一个人。\r\n","Creates a new AuthenticationException with the specified detail message and cause.":"使用指定的详细信息和原因创建一个新的AuthenticationException。\r\n","if I/O exception occurs.\n":"如果I/O例外发生。\r\n\r\n","java.util.concurrent.atomic.AtomicStampedReference.weakCompareAndSet(java.lang.Object, java.lang.Object, int, int)":"java.util.concurrent.Atomic.AtomicStampedReference.WeakCompareAndset（java.lang.object，java.lang.Object，int，int，int）\r\n","\r\n            Used by the ":"\r\n            由\r\n","Attempts to decode SSL/TLS network data into a plaintext\n            application data buffer.":"尝试将SSL/TLS网络数据解码为明文\r\n            应用程序数据缓冲区。\r\n","if cloning is not supported.\n":"如果不支持克隆。\r\n\r\n","javax.net.ssl.SSLEngine.setSSLParameters(javax.net.ssl.SSLParameters)":"javax.net.ssl.sslengine.setsslparameters（javax.net.ssl.sslparameters）\r\n",") (HTTP/1.":"）（http/1。\r\n","java.util.function.IntUnaryOperator.andThen(java.util.function.IntUnaryOperator)":"java.util.function.intunaryoperator.andthen（java.util.function.intunaryoperator）\r\n","\r\n            Get a DateTimeOffset value from the ":"\r\n            从\r\n","Estimates the length of formatted parameters.":"估计格式参数的长度。\r\n","Return timezone offset in minutes or\n ":"在几分钟内返回时区的抵消或\r\n \r\n","Check a parser feature flag.":"检查解析器功能标志。\r\n","Removes the parameter with the specified name.":"用指定名称删除参数。\r\n","Acquires the lock unless the current thread is\n            Thread#interrupt interrupted.":"除非当前线程为，否则获取锁\r\n            线程＃中断中断。\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(int, long)":"java.util.concurrent.locks.abstractqueedsynchronizer.tracquiresharednanos（int，long）\r\n",", or\r\n            some built-in code between ":"， 或者\r\n            两者之间的一些内置代码\r\n","org.w3c.dom.DOMException.TYPE_MISMATCH_ERR":"org.w3c.dom.domexception.type_mismatch_err\r\n","java.util.logging.Logger.addHandler(java.util.logging.Handler)":"java.util.logging.logger.addhandler（java.util.logging.handler）\r\n","Returns the application protocol value negotiated on a SSL/TLS\n            handshake currently in progress.":"返回在SSL/TLS上协商的应用程序协议值\r\n            目前正在进行握手。\r\n","javax.net.ssl.SNIServerName.getType()":"javax.net.ssl.sniservername.getType（）\r\n","org.w3c.dom.CharacterData":"org.w3c.dom.characterdata\r\n","\r\n            Adds the authorization policy evaluator service to the specified ":"\r\n            将授权策略评估员服务添加到指定的\r\n","java.util.jar.Attributes.size()":"java.util.jar.attributes.size（）\r\n","javax.sql.RowSet.setTimestamp(java.lang.String, java.sql.Timestamp, java.util.Calendar)":"javax.sql.Rowset.setTimestamp（java.lang.string，java.sql.timestamp，java.util.calendar）\r\n","Create a new <code>FactoryConfigurationError</code> with the\n            given <code>Exception</code> base cause and detail message.":"使用新的<code> Factory ConfigurationError </code>\r\n            给定的<code>异常</code>基本原因和详细信息。\r\n","Returns the task queue used by this executor.":"返回该执行人使用的任务队列。\r\n","Look up an attribute's value by Namespace name.":"通过名称名称查找属性的值。\r\n","javax.security.auth.x500.X500Principal.RFC1779":"javax.security.auth.x500.x500 principal.rfc1779\r\n","org.json.JSONArray.optString(int, java.lang.String)":"org.json.jsonarray.optstring（int，java.lang.string）\r\n","\r\n            Adds antiforgery services to the specified ":"\r\n            在指定的\r\n","SAX2 Driver that pulls events from XmlPullParser\n            and converts them into SAX2 callbacks.":"从XMLPullParser中取出事件的SAX2驱动程序\r\n            并将它们转换为SAX2回调。\r\n","Allow an application to request a locale for errors and warnings.":"允许申请要求语言环境以获取错误和警告。\r\n","javax.xml.transform.sax.SAXResult.getLexicalHandler()":"javax.xml.transform.sax.saxresult.getlexicalhandler（）\r\n","java.util.concurrent.atomic.AtomicReferenceArray.compareAndSet(int, java.lang.Object, java.lang.Object)":"java.util.concurrent.atomic.atomicreferencearray.compareandset（int，java.lang.object，java.lang.object）\r\n"," associated with the provided\n            ":" 与提供的\r\n            \r\n","Removes the specified listener from the list of components that will be\n            notified when an event occurs on this <code>RowSet</code> object.":"从将是的组件列表中删除指定的侦听器\r\n            当事件发生在此<code> Rowset </code>对象上时，已通知。\r\n"," based ":" 基于\r\n","#getFractionalSecond()":"#getFractionalSecond（）\r\n","Get the Port attribute.":"获取端口属性。\r\n","<code>DOMLocator</code> is an interface that describes a location (e.":"<code> domLocator </code>是一个描述位置的接口（e。\r\n","java.util.concurrent.atomic.DoubleAccumulator.reset()":"java.util.concurrent.atomic.doubleaeaccumulator.reset（）\r\n","Defines a factory API that enables applications to obtain a\n            parser that produces DOM object trees from XML documents.":"定义一个工厂API，该API能够获得应用程序\r\n            解析器从XML文档产生DOM对象树。\r\n","Returns the current phase number.":"返回当前阶段号。\r\n","\r\n            Base context for events that produce AuthenticateResults.\r\n            ":"\r\n            产生真实性的事件的基本环境。\r\n            \r\n","\"\"":"“”\r\n","Determines the next token.":"确定下一个令牌。\r\n","Parameter names for the HttpClient module.":"HTTPCLIENT模块的参数名称。\r\n","java.util.concurrent.ThreadPoolExecutor.getTaskCount()":"java.util.concurrent.threadpoolexecutor.getTaskCount（）\r\n","java.util.regex.Matcher.find()":"java.util.regex.matcher.find（）\r\n","If the resulting URI is invalid.\n":"如果结果URI无效。\r\n\r\n","java.util.jar.JarEntry.JarEntry(java.lang.String)":"java.util.jar.jarentry.jarentry（java.lang.string）\r\n","java.util.concurrent.LinkedBlockingQueue.LinkedBlockingQueue(java.util.Collection)":"java.util.concurrent.linkedblockingqueue.linkedblockingquequequequequequequequequequequequequequequequequequequequequeque\r\n","java.util.zip.GZIPOutputStream.GZIPOutputStream(java.io.OutputStream, int, boolean)":"java.util.zip.gzipoutputstream.gzipoutputstream（java.io.outputstream，int，boolean）\r\n"," the expected value.":" 预期值。\r\n","The provided antiforgery token was meant for user \"{0}\", but the current user is \"{1}\".":"提供的抗验证令牌是为用户“ {0}”的，但是当前的用户为“ {1}”。\r\n","Evaluate the compiled XPath expression in the context of the specified <code>InputSource</code> and return the result as a\n            <code>String</code>.":"在指定的<code> inputsource </code>的上下文中评估编译的XPath表达式，然后返回结果\r\n            <code>字符串</code>。\r\n","Return the character position where the current document event ends.":"返回当前文档事件结束的角色位置。\r\n","handle":"处理\r\n","javax.crypto.spec.PBEKeySpec":"javax.crypto.spec.pbekeyspec\r\n","javax.net.ssl.X509ExtendedKeyManager.X509ExtendedKeyManager()":"javax.net.ssl.x509extendedKeyManager.x509ExtendedKeyManager（）\r\n","java.util.logging.LoggingMXBean":"java.util.logging.loggingmxbean\r\n","Set a document locator.":"设置文档定位器。\r\n"," serving as the basis of a ":" 作为\r\n","Creates a new phaser with no initially registered parties, no\n            parent, and initial phase number 0.":"创建一个没有最初注册各方的新移相器，否\r\n            父，初始阶段编号0。\r\n"," is not available or\n     cannot be instantiated.":" 不可用或\r\n     不能实例化。\r\n"," is an\n   ":" 是一个\r\n   \r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.hasQueuedPredecessors()":"java.util.concurrent.locks.abstractqueuedsynchronizer.hasqueuedpredequesers（）\r\n","Creates a connection to a database which can then be used as a pooled\n connection.":"创建与数据库的连接，然后可以用作合并的\r\n 联系。\r\n","#DEFAULT_OBJECT_MODEL_URI":"#default_object_model_uri\r\n","Returns the names of the cipher suites which could be enabled for use\n            on this connection.":"返回可以启用的密码套件的名称\r\n            在此连接上。\r\n","java.util.logging.Handler.setEncoding(java.lang.String)":"java.util.logging.handler.setencoding（java.lang.string）\r\n","Queries the number of read locks held for this lock.":"查询此锁定的读取锁数量。\r\n","javax.xml.datatype.XMLGregorianCalendar.compare(javax.xml.datatype.XMLGregorianCalendar)":"javax.xml.datatype.xmlgregoriancalendar.compare（javax.xml.datatype.xmlgregoriancalendar）\r\n","Appends a literal part of the input plus a replacement for the current\n match to a given ":"附加输入的字面部分，以及当前的替换\r\n 匹配给定\r\n",",\r\n            gets the attribute value. Otherwise, the value is undefined.\r\n            ":"，，，，\r\n            获取属性值。否则，该值是未定义的。\r\n            \r\n","javax.net.ssl.SSLContext.getDefaultSSLParameters()":"javax.net.ssl.sslcontext.getDefaultssslparameters（）\r\n","java.util.concurrent.LinkedBlockingDeque.offer(java.lang.Object)":"java.util.concurrent.linkedblockingdeque.offer（java.lang.object）\r\n","if the provided buffer is too small for the result key blob.":"如果提供的缓冲区太小，无法进行结果键斑点。\r\n","Returns a new CompletionStage that, when this and the other\n            given stage both complete normally, is executed using this\n            stage's default asynchronous execution facility, with the two\n            results as arguments to the supplied function.":"返回一个新的完整舞台，当\r\n            给定阶段正常完成，使用此\r\n            舞台的默认异步执行设施，两者\r\n            结果作为所提供函数的参数。\r\n","javax.xml.datatype.Duration.multiply(int)":"javax.xml.datatype.duration.multiply（int）\r\n"," using a built-in 1-byte code when within specific MessagePack-supported ranges,\r\n            or the most compact of\r\n            ":" 在特定的MessagePack支持范围内，使用内置的1字节代码，\r\n            或最紧凑的\r\n            \r\n","Creates a <code>ProcessingInstruction</code> node given the specified\n            name and data strings.":"创建<code> processingInstruction </code>给定指定的节点\r\n            名称和数据字符串。\r\n","java.util.function.BiFunction":"java.util.function.bifunction\r\n","java.util.concurrent.ThreadLocalRandom.nextLong(long)":"java.util.concurrent.threadlocalrandom.nextlong（长）\r\n","Returns whether this attribute is known to be of type ID (i.e. to\n contain an identifier for its owner element) or not.":"返回此属性是否为类型ID（即\r\n 包含其所有者元素的标识符）。\r\n","Get any throwable associated with the log record. -or- Set a throwable associated with the log event.":"获取与日志记录相关的任何可抛售。 - 或 - 设置与日志事件相关的可抛出式。\r\n"," object into a localized string\n representation.":" 对象进入本地化字符串\r\n 表示。\r\n","Creates an <code>Attr</code> of the given name.":"创建给定名称的<code> attr </code>。\r\n","javax.xml.datatype.Duration.getTimeInMillis(java.util.Date)":"javax.xml.datatype.duration.getTimeinmillis（java.util.date）\r\n","Sets expiration date.":"设置到期日期。\r\n","Value for second month of year.":"一年中的第二个月的价值。\r\n","Determines whether stale connection check is to be used.":"确定是否要使用过时的连接检查。\r\n","Sets the input stream the parser is going to process.":"设置输入流解析器将要处理。\r\n","java.util.logging.SocketHandler.SocketHandler()":"java.util.logging.sockethandler.sockethandler（）\r\n","javax.sql.RowSetMetaData.setScale(int, int)":"javax.sql.RowsetMetadata.SetsCale（int，int）\r\n","javax.net.SocketFactory.SocketFactory()":"javax.net.socketFactory.socketFactory（）\r\n","Parse the document.":"解析文档。\r\n","Creates a new direct route.":"创建一条新的直接路线。\r\n","javax.net.ssl.SSLContext.getInstance(java.lang.String, java.lang.String)":"javax.net.ssl.sslcontext.getinstance（java.lang.string，java.lang.string）\r\n","The SAX parser class was\n            found, but you do not have permission to load\n            it.":"萨克斯解析器类是\r\n            找到，但是您没有加载的权限\r\n            它。\r\n",", or null if no such mapping\n            exists.":"，如果没有这样的映射，则无效\r\n            存在。\r\n","-valued\n            argument.":" - 可估算\r\n            争论。\r\n","Sv2":"SV2\r\n","\r\n            Gets a CSS class string that combines the ":"\r\n            获得一个结合了CSS类字符串\r\n","java.util.concurrent.atomic.LongAccumulator.doubleValue()":"java.util.concurrent.atomic.longaccumulator.doublevalue（）\r\n","Wrap an existing exception in a TransformerException.":"将现有的例外包裹在转换感受中。\r\n","Creates a new, empty scheme registry.":"创建一个新的空方案注册表。\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.tryRelease(int)":"java.util.concurrent.locks.abstractqueedsynchronizer.trelease（int）\r\n","Return the number of attributes in the list.":"返回列表中的属性数。\r\n","Verify that the host name is an acceptable match with\n            the server's authentication scheme.":"验证主机名是可接受的匹配\r\n            服务器的身份验证方案。\r\n","This class provides the functionality of a key agreement (or key\n            exchange) protocol.":"该课程提供关键协议的功能（或密钥\r\n            交换）协议。\r\n","java.util.concurrent.LinkedBlockingDeque.pop()":"java.util.concurrent.linkedblockingdeque.pop（）\r\n"," attribute.\n":" 属性。\r\n\r\n","javax.net.ssl.SSLParameters.getServerNames()":"javax.net.ssl.sslparameters.getservernames（）\r\n","if the engine does not have all the needed settings (e.g.\n             client/server mode not set).\n":"如果发动机没有所有必要的设置（例如\r\n             客户/服务器模式未设置）。\r\n\r\n","java.util.concurrent.atomic.AtomicInteger.AtomicInteger(int)":"java.util.concurrent.atomic.atomicinteger.atomicinteger（int）\r\n","\r\n            Creates a new context object.\r\n            ":"\r\n            创建一个新的上下文对象。\r\n            \r\n","java.util.concurrent.atomic.AtomicLong.getAndDecrement()":"java.util.concurrent.atomic.atomiclong.getanddecrement（）\r\n","\r\n            A collection of ":"\r\n            集合\r\n","<code>EntityReference</code> nodes may be used to represent an entity\n            reference in the tree.":"<code> EntityReference </code>节点可用于表示实体\r\n            树中的参考。\r\n","<code>XPathExpression</code> provides access to compiled XPath expressions.":"<code> XPathExpression </code>提供对编译XPath表达式的访问。\r\n","Associates the specified value with the specified key in this\n            preference node.":"将指定值与此处指定的密钥相关联\r\n            偏好节点。\r\n","Initializes this factory with a source of provider-specific\n            trust material.":"用特定于提供商的来源初始化该工厂\r\n            信任材料。\r\n","Get the byte stream that was set with setOutputStream. -or- Set the ByteStream that is to be written to.":"获取使用SetOutputStream设置的字节流。 - 或 - 设置要写入的字节。\r\n","java.util.concurrent.locks.ReentrantReadWriteLock.isWriteLocked()":"java.util.concurrent.locks.reentrantreadwritelock.iswritelocked（）\r\n","java.util.concurrent.Phaser.getUnarrivedParties()":"java.util.concurrent.phaser.getunarrivedparties（）\r\n","if the salt is null.":"如果盐为无效。\r\n","javax.crypto.CipherSpi.engineSetMode(java.lang.String)":"javax.crypto.cipherspi.enginesetmode（java.lang.string）\r\n"," instance for this node, which will\n handle ":" 该节点的实例，将\r\n 处理\r\n","Set milliseconds.":"设置毫秒。\r\n","org.xmlpull.v1.XmlPullParser.getAttributeName(int)":"org.xmlpull.v1.xmlpullparser.getAttributeName（int）\r\n","Basic implementation of ":"基本实施\r\n","Get the type of an attribute (by position).":"获取属性的类型（按位置）。\r\n","javax.net.ssl.SSLServerSocket.getEnabledCipherSuites()":"javax.net.ssl.sslserversocket.getEnabledCiphersuites（）\r\n","Returns an iterator of the headers with a given name.":"返回带有给定名称的标头的迭代器。\r\n","Parse an XML document from a resource identified by a\n            <code>LSInput</code>.":"解析从一个资源确定的资源中的XML文档\r\n            <code> lsinput </code>。\r\n","javax.net.ssl.SSLServerSocketFactory":"javax.net.ssl.sslserversocketFactory\r\n","java.util.prefs.AbstractPreferences.sync()":"java.util.prefs.abstractpreferences.sync（）\r\n","Creates a new output stream with a default compressor and buffer size.":"创建具有默认压缩机和缓冲区大小的新输出流。\r\n","\r\n            The instance is cleaned first, if a clean delegate was provided.\r\n            It is dropped instead of being returned to the pool if the pool is already at its maximum size.\r\n            ":"\r\n            如果提供了干净的代表，则首先清洁实例。\r\n            如果池已经达到最大尺寸，则将其删除，而不是返回池。\r\n            \r\n","Detects stream abort and notifies the watcher.":"检测流中断并通知观察者。\r\n","\r\n            Unchecked helper to avoid unnecessary checks where you know count is valid.\r\n            ":"\r\n            未检查的助手以避免在您知道计数有效的地方进行不必要的检查。\r\n            \r\n","XPath constants.":"XPath常数。\r\n","Serialize the specified node as described above in the general\n            description of the <code>LSSerializer</code> interface.":"如上所述，序列化指定节点\r\n            <code> lsSerializer </code>接口的描述。\r\n","java.util.zip.CheckedOutputStream.CheckedOutputStream(java.io.OutputStream, java.util.zip.Checksum)":"java.util.zip.checkedoutputstream.checkedoutputstream（java.io.outputstream，java.util.zip.checksum）\r\n","java.util.prefs.AbstractPreferences.putBoolean(java.lang.String, boolean)":"java.util.prefs.abstractpreferences.putboolean（java.lang.string，boolean）\r\n","java.util.logging.Level.CONFIG":"java.util.logging.level.config\r\n","Value for seventh month of year.":"每年第七个月的价值。\r\n","Constructs a new <code>XPathExpressionException</code> with the specified detail <code>message</code>.":"用指定的详细信息<Code> Message </code>构造新的<code> XPathExpressionException </code>。\r\n","Look up an attribute's index by qualified (prefixed) name.":"通过合格（前缀）名称查找属性的索引。\r\n","javax.xml.transform.TransformerException.TransformerException(java.lang.Throwable)":"javax.xml.transform.transformerexception.transformerexception（java.lang.throwable）\r\n","org.xml.sax.AttributeList.getType(java.lang.String)":"org.xml.sax.attributelist.getType（java.lang.string）\r\n","Formats the parameters of a header element.":"格式化标头元素的参数。\r\n","javax.xml.parsers.FactoryConfigurationError.FactoryConfigurationError(java.lang.String)":"javax.xml.parsers.factoryconfigurationerror.factoryconfigurationerror（java.lang.string）\r\n","\r\n            The \"scope\" parameter value being used for a challenge request.\r\n            ":"\r\n            用于挑战请求的“范围”参数值。\r\n            \r\n","java.util.logging.Logger.getLogger(java.lang.String)":"java.util.logging.logger.getlogger（java.lang.string）\r\n","if the specified algorithm is ":"如果指定的算法是\r\n","\r\n            The location of the key on the device.\r\n            ":"\r\n            钥匙在设备上的位置。\r\n            \r\n","A response interceptor that suggests connection keep-alive to the client.":"响应拦截器，建议与客户保持联系。\r\n","java.util.concurrent.LinkedBlockingQueue.iterator()":"java.util.concurrent.linkedblockingqueue.iterator（）\r\n","\n          Gets the \n          ":"\r\n          得到\r\n          \r\n","java.util.logging.LogManager.getLoggerNames()":"java.util.logging.logmanager.getloggernames（）\r\n","Return the value of an attribute in the list (by name).":"返回列表中属性的值（按名称）。\r\n"," with a given ":" 给定\r\n","java.util.concurrent.ExecutorService.submit(java.lang.Runnable)":"java.util.concurrent.executorservice.submit（java.lang.runnable）\r\n","\r\n            When the limit of buffered render batches is reached components will stop rendering and will wait until either the\r\n            circuit is disconnected and disposed or at least one batch gets acknowledged.\r\n            ":"\r\n            当达到缓冲渲染批次的限制时\r\n            电路被断开和处置，或者至少被确认一批。\r\n            \r\n","if the key or value is of an inappropriate\n         type for this map\n         (":"如果钥匙或值是不合适的\r\n         为此地图输入\r\n         （（\r\n","\n            instance as XML using the specified ":"\r\n            实例使用指定的\r\n","javax.net.ssl.SSLServerSocket.getSSLParameters()":"javax.net.ssl.sslserversocket.getsslparameters（）\r\n","Returns the size of the session cache for this session context.":"返回此会话上下文的会话缓存的大小。\r\n","org.json.JSONTokener":"org.json.jsontokener\r\n","NodeChangeEvent":"NodeChangeEvent\r\n","Continues a multiple-part encryption or decryption operation\n            (depending on how this cipher was initialized), processing another data\n            part.":"继续多部分加密或解密操作\r\n            （取决于此密码的初始化），处理另一个数据\r\n            部分。\r\n","java.util.concurrent.CompletionStage.runAfterEitherAsync(java.util.concurrent.CompletionStage, java.lang.Runnable, java.util.concurrent.Executor)":"java.util.concurrent.completionstage.runaftereitherasync（java.util.concurrent.completionstage，java.lang.runnable，java.util.concurrent.executor）\r\n"," instance from this node.":" 来自此节点的实例。\r\n","java.util.zip.Deflater.SYNC_FLUSH":"java.util.zip.deflater.sync_flush\r\n","javax.crypto.ExemptionMechanism.init(java.security.Key, java.security.AlgorithmParameters)":"javax.crypto.ExemptionMechanism.Init（Java.security.key，Java.security.algorithmparameters）\r\n",", unescaping any\n            character escape sequences encountered along the way.":"，取消任何范围\r\n            角色逃脱序列沿途遇到。\r\n","Get the years value of this <code>Duration</code> as an <code>int</code> or <code>0</code> if not present.":"获取此<code>持续时间</code>的年度值作为<code> int </code>或<code> 0 </code>（如果不存在）。\r\n","Set a feature for this <code>XPathFactory</code> and <code>XPath</code>s created by this factory.":"设置此<code> XPathFactory </code>和<code> XPath </code> s的功能。\r\n","Creates a new ProtocolException with a ":"用\r\n","Get the Handlers associated with this logger.":"获取与此记录器关联的处理程序。\r\n"," if it is not available.\r\n            ":" 如果不可用。\r\n            \r\n","Create a new input source with a DOM node.":"使用DOM节点创建一个新的输入源。\r\n","If any SAX errors occur during processing.":"如果处理过程中发生任何萨克斯错误。\r\n","javax.xml.xpath.XPathFunction":"javax.xml.xpath.xpathfunction\r\n","The header name to filter by.":"要过滤的标题名称。\r\n","java.util.function.DoubleBinaryOperator.applyAsDouble(double, double)":"java.util.function.doublebinaryoperator.applyasdouble（double，double）\r\n","javax.net.ssl.SSLSession.invalidate()":"javax.net.ssl.sslsession.invalidate（）\r\n","If the file cannot be read.\n":"如果无法读取文件。\r\n\r\n","Splits the given ":"拆分给定\r\n","Returns the names of the children of this preference node, relative to\n            this node.":"返回此偏好节点的孩子的名字，相对于\r\n            这个节点。\r\n","java.util.concurrent.locks.ReentrantLock.getHoldCount()":"java.util.concurrent.locks.reentrantlock.getholdcount（）\r\n","Double#isInfinite()\n                infinities":"double＃isInfinite（）\r\n                无限\r\n"," describing the state of the current handshake.":" 描述当前握手的状态。\r\n","Instantiates version information from properties.":"从属性实例化版本信息。\r\n","Initializes this cipher instance with the specified key and a source of\n randomness.":"用指定的密钥和一个来源初始化此密码实例\r\n 随机性。\r\n","Detects stream close and notifies the watcher.":"检测到流的关闭并通知观察者。\r\n","javax.net.ssl.KeyManagerFactory.getKeyManagers()":"javax.net.ssl.keymanagerfactory.getKeyManagers（）\r\n","if no installed provider can provide the requested algorithm.":"如果没有安装的提供商可以提供请求的算法。\r\n","Returns the next value from the input.":"从输入返回下一个值。\r\n","javax.sql.RowSetMetaData.setNullable(int, int)":"javax.sql.RowsetMetadata.setnullable（int，int）\r\n","Creates a new AtomicReferenceArray of the given length, with all\n            elements initially null.":"创建一个给定长度的新的AtomicReferenCearray\r\n            元素最初为null。\r\n"," interface\n to simplify manipulation of the HTTP protocol specific parameters.":" 界面\r\n 简化操纵HTTP协议特定参数。\r\n",",\r\n            gets the child component state object. Otherwise, the value is undefined.\r\n            ":"，，，，\r\n            获取子组件状态对象。否则，该值是未定义的。\r\n            \r\n","javax.crypto.EncryptedPrivateKeyInfo.getKeySpec(java.security.Key, java.lang.String)":"javax.crypto.cencryptedprivatekeyinfo.getkeyspec（java.security.key，java.lang.string）\r\n","javax.xml.datatype.Duration.multiply(java.math.BigDecimal)":"javax.xml.datatype.duration.multiply（java.math.bigdecimal）\r\n","java.util.regex.Matcher.replaceFirst(java.lang.String)":"java.util.regex.matcher.replacefirst（java.lang.string）\r\n","\r\n            Checks if a user meets a specific authorization policy\r\n            ":"\r\n            检查用户是否符合特定的授权策略\r\n            \r\n","org.xml.sax.InputSource.setEncoding(java.lang.String)":"org.xml.sax.inputsource.setencoding（java.lang.string）\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryAcquireNanos(long, long)":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.tryacquirenanos（长，长）\r\n","ATTRIBUTE_NODE":"attribute_node\r\n","\r\n            Writes out an array of bytes that (may) represent a UTF-8 encoded string, prefixed with the length using one of these message codes:\r\n            ":"\r\n            写出一系列字节，该字节（可能）代表一个UTF-8编码的字符串，使用以下一个消息代码之一以长度为前缀：\r\n            \r\n","org.xmlpull.v1.XmlPullParserFactory.setNamespaceAware(boolean)":"org.xmlpull.v1.xmlpullparserfactory.setnamespaceaware（boolean）\r\n"," if this semaphore has fairness set true.":" 如果此信号量具有公平设置，则为真实。\r\n"," for the provided ":" 为提供\r\n","javax.crypto.KeyAgreement.init(java.security.Key, java.security.spec.AlgorithmParameterSpec)":"javax.crypto.keyagreement.init（java.security.key，java.security.spec.algorithmparameterspec）\r\n","\r\n            An entry in a sparse permutation list. That is, a list of old indices with\r\n            corresponding new indices, which altogether describe a valid permutation of\r\n            the children at the current edit position.\r\n            ":"\r\n            稀疏置换列表中的条目。也就是说，一个旧索引列表\r\n            相应的新指数，完全描述了有效的置换\r\n            当前的编辑位置的孩子们。\r\n            \r\n","Base class for deriving an XML filter.":"用于推导XML滤波器的基类。\r\n","Acquires the lock if it is free within the given waiting time and the\n            current thread has not been Thread#interrupt interrupted.":"如果锁在给定的等待时间和\r\n            当前线程尚未被线程＃中断中断。\r\n","Parse the content of the given <code>InputStream</code> as an XML\n            document and return a new DOM ":"解析给定<code> inputstream </code>作为XML的内容\r\n            文档并返回新的DOM\r\n","java.util.prefs.AbstractPreferences.getBoolean(java.lang.String, boolean)":"java.util.prefs.abstractpreferences.getboolean（java.lang.string，boolean）\r\n","Basic thread blocking primitives for creating locks and other\n            synchronization classes.":"基本线程阻止原始词，用于创建锁和其他\r\n            同步类。\r\n","This class enables a programmer to create an object and protect its\n            confidentiality with a cryptographic algorithm.":"此类使程序员能够创建一个对象并保护其\r\n            具有加密算法的机密性。\r\n","Represents a supplier of ":"代表\r\n","nsContext":"nScontext\r\n","org.w3c.dom.ls.LSParser.ACTION_REPLACE_CHILDREN":"org.w3c.dom.ls.lsparser.action_replace_children\r\n","the action to take if an unknown attribute is encountered.":"如果遇到未知属性，则采取的措施。\r\n","org.json.JSONObject.optBoolean(java.lang.String)":"org.json.jsonobject.optboolean（java.lang.string）\r\n","org.xml.sax.ext.LexicalHandler.endEntity(java.lang.String)":"org.xml.sax.ext.lexicalhandler.endentity（java.lang.string）\r\n","javax.net.ssl.SSLParameters.getSNIMatchers()":"javax.net.ssl.sslparameters.getsnimatchers（）\r\n","org.w3c.dom.Node.isEqualNode(org.w3c.dom.Node)":"org.w3c.dom.node.isequalnode（org.w3c.dom.node）\r\n","java.util.concurrent.CompletionStage.thenApplyAsync(java.util.function.Function, java.util.concurrent.Executor)":"java.util.concurrent.completionstage.thenapplyasync（java.util.function.function，java.util.concurrent.executor）\r\n","if no installed provider can provide the padding scheme in\n             the ":"如果没有安装的提供商可以提供填充方案\r\n             这\r\n","Retrieves the parameters that have been set for this\n            <code>RowSet</code> object's command.":"检索已为此设置的参数\r\n            <code> Rowset </code>对象的命令。\r\n","javax.crypto.NoSuchPaddingException":"javax.crypto.NosuchpadDingException\r\n","javax.crypto.KeyAgreementSpi.engineInit(java.security.Key, java.security.SecureRandom)":"javax.crypto.Keyagreementspi.Engineinit（Java.security.key，java.security.securerandom）\r\n"," and returns some value\n corresponding to that response.":" 并返回一些价值\r\n 对应于该响应。\r\n","Returns an iterator for the elements of this stream.":"返回该流元素的迭代器。\r\n","-valued operands and producing an\n            ":" - 价值操作数并生产\r\n            \r\n","Unset all fields to undefined.":"不设置所有字段，不确定。\r\n","javax.crypto.interfaces.PBEKey.serialVersionUID":"javax.crypto.interfaces.pbekey.serialversionuid\r\n","Create a new input source with a byte stream.":"使用字节流创建一个新的输入源。\r\n","java.util.zip.Deflater.HUFFMAN_ONLY":"java.util.zip.deflater.huffman_only\r\n","BindAttributes":"绑定\r\n","java.util.zip.DeflaterOutputStream.DeflaterOutputStream(java.io.OutputStream)":"java.util.zip.deflateroutputstream.deflateroutputstream（java.io.outputstream）\r\n"," that produces the sum of a long-valued\n            function applied to the input elements.":" 产生长期价值的总和\r\n            应用于输入元素的功能。\r\n","\r\n            Appends frames representing an arbitrary fragment of content.\r\n            ":"\r\n            附加代表内容片段的框架。\r\n            \r\n","variableName":"变量的名称\r\n","org.xml.sax.SAXException.SAXException(java.lang.Exception)":"org.xml.sax.saxexception.saxexception（java.lang.exception）\r\n","Time unit representing one thousandth of a millisecond\n":"时间单元代表千分之一的千分之一\r\n\r\n","\r\n            A component that renders an anchor tag, automatically toggling its 'active'\r\n            class based on whether its 'href' matches the current URI.\r\n            ":"\r\n            呈现锚标签，自动切换其“活动”的组件\r\n            基于其“ HREF”是否匹配当前URI的类。\r\n            \r\n","Collector.Characteristics":"收藏家\r\n","\r\n            Wraps a callback delegate associated with an event.\r\n            ":"\r\n            包装与事件关联的回调委托。\r\n            \r\n","java.util.concurrent.atomic.AtomicLong.lazySet(long)":"java.util.concurrent.atomic.atomiclong.lazyset（long）\r\n","org.w3c.dom.UserDataHandler.NODE_IMPORTED":"org.w3c.dom.userdatahandler.node_imported\r\n","java.util.concurrent.atomic.AtomicReferenceFieldUpdater.newUpdater(java.lang.Class, java.lang.Class, java.lang.String)":"java.util.concurrent.atomic.atomicreferencefieldupdater.newupdater（java.lang.class，java.lang.class，java.lang.string）\r\n","java.util.regex.Pattern.asPredicate()":"java.util.regex.pattern.aspredicate（）\r\n","\r\n            Indicates that a new frame should be inserted before the specified tree frame.\r\n            ":"指示应在指定的树框架之前插入新框架。\r\n            \r\n","\r\n            This is taken from the recycled pool if one is available; otherwise a new one is created.\r\n            ":"\r\n            如果有可用的话，这是从回收池中取的；否则将创建一个新的。\r\n            \r\n","java.util.regex.Matcher.replaceAll(java.lang.String)":"java.util.regex.matcher.replaceall（java.lang.string）\r\n","Interface for deciding whether a connection should be kept alive.":"确定连接是否应保持的接口。\r\n","javax.sql.CommonDataSource":"javax.sql.commondatasource\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.getFirstQueuedThread()":"java.util.concurrent.locks.abstractqueuedsynchronizer.getFirstqueuedthread（）\r\n","\r\n            Authorization was successful.\r\n            ":"\r\n            授权成功。\r\n            \r\n","Returns the length of the MAC in bytes.":"在字节中返回Mac的长度。\r\n","java.util.concurrent.atomic.AtomicLong":"java.util.concurrent.atomic.atomiclong\r\n",",\n   this exception might be raised if the DOM implementation doesn't\n   support the insertion of a ":"，，，，\r\n   如果DOM实施不实现，可能会提出此例外\r\n   支持插入\r\n"," with\n            Principals and credentials.":" 和\r\n            校长和证书。\r\n","java.util.concurrent.ScheduledExecutorService.schedule(java.util.concurrent.Callable, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.scheduledexecutorservice.schedule（java.util.concurrent.callable，long，long，java.util.concurrent.timeunit）\r\n"," method,\n unless the executor has been shut down, in which case the task\n is discarded.":" 方法，\r\n 除非执行人关闭，否则任务\r\n 被丢弃。\r\n","This class creates sockets.":"该课程创建插座。\r\n","java.util.concurrent.atomic.AtomicLongFieldUpdater":"java.util.concurrent.atomic.atomiclongfieldupdater\r\n","\r\n            Used to lookup AuthenticationSchemes.\r\n            ":"\r\n            用于查找身份验证化学。\r\n            \r\n","Returns the authentication tag length.":"返回身份验证标签长度。\r\n","javax.net.ssl.SSLParameters.getApplicationProtocols()":"javax.net.ssl.sslparameters.getApplicationprotocols（）\r\n","doctype-system = <var>string</var>.":"Doctype-system = <var>字符串</var>。\r\n","Constructs a GCMParameterSpec object using the specified\n            authentication tag bit-length and a subset of the specified\n            buffer as the IV.":"使用指定的\r\n            身份验证标签位长度和指定的子集\r\n            缓冲区为静脉。\r\n"," (WebDAV - RFC 2518) or ":" （WebDav -RFC 2518）或\r\n","Log a FINE message, which is only to be constructed if the logging\n            level is such that the message will actually be logged.":"记录一条好消息，只有在日志记录时才能构造\r\n            级别的级别可以实际记录该消息。\r\n","Log a lazily constructed message, with associated Throwable information.":"记录一个懒惰的消息，并提供相关的可投掷信息。\r\n","Closes the decompressor and discards any unprocessed input.":"关闭解压缩器并丢弃任何未经处理的输入。\r\n","org.json.JSONObject.get(java.lang.String)":"org.json.jsonobject.get（java.lang.string）\r\n","Get a reference to the the ":"获取参考\r\n","java.util.concurrent.Semaphore.drainPermits()":"java.util.concurrent.semaphore.drainpermits（）\r\n","java.util.concurrent.atomic.AtomicReference.updateAndGet(java.util.function.UnaryOperator)":"java.util.concurrent.atomic.atomicreference.updateandget（java.util.function.unaryoperator）\r\n","Represents an operation upon two operands of the same type, producing a result\n            of the same type as the operands.":"代表同一类型的两个操作数的操作，产生结果\r\n            与操作数相同的类型。\r\n","org.xml.sax.helpers.ParserAdapter":"org.xml.sax.helpers.parseradapter\r\n","Constructs a DataFormatException with the specified detail message.":"用指定的详细信息构造数据FormateXception。\r\n","Default implementation of the Attributes interface.":"属性接口的默认实现。\r\n","Returns the current number of threads in the pool.":"返回池中当前的线程数。\r\n","day":"天\r\n","\r\n            A base class that creates a service provider scope.\r\n            ":"\r\n            创建服务提供商范围的基类。\r\n            \r\n","javax.crypto.SecretKey.serialVersionUID":"javax.crypto.secretkey.serialversionuid\r\n"," detail message.":" 详细信息。\r\n","javax.crypto.EncryptedPrivateKeyInfo.getAlgParameters()":"javax.crypto.encryptedprivateKeyinfo.getAlgparameters（）\r\n","pass":"经过\r\n","A set of utility methods to help produce consistent\n ":"一组实用方法来帮助产生一致\r\n \r\n","Copy an existing Attributes object.":"复制现有属性对象。\r\n","javax.sql.RowSet.setDate(java.lang.String, java.sql.Date)":"javax.sql.Rowset.setDate（java.lang.string，java.sql.date）\r\n","javax.security.cert.CertificateEncodingException.CertificateEncodingException(java.lang.String)":"javax.security.cert.certificateEncodingException.certificateEncodingException（java.lang.string）\r\n","\r\n            Represents a collection of parameters supplied to an ":"\r\n            表示提供给一个参数的集合\r\n","Attempts to connects the socket to any of the ":"尝试将插座连接到任何一个\r\n","Atomically updates the element at index ":"原子在索引上更新元素\r\n"," method should be passed the entire set of parameter values each\r\n            time ":" 方法应通过每个参数值的整个集合\r\n            时间\r\n","org.apache.http.params.HttpParams.getParameter(java.lang.String)":"org.apache.http.params.httpparams.getParameter（java.lang.string）\r\n"," that is the Result. -or- Set the target to be a SAX2 ":" 那就是结果。 - 或将目标设置为SAX2\r\n","\r\n            Invoked after the provider successfully authenticates a user.\r\n            ":"\r\n            调用提供商成功身份验证用户。\r\n            \r\n","\r\n            Performs conversions during binding.\r\n            ":"\r\n            在绑定过程中执行转换。\r\n            \r\n","An attribute specifying, as part of the , the encoding of this document.":"指定本文档编码的属性。\r\n","java.util.stream.Collectors.toMap(java.util.function.Function, java.util.function.Function, java.util.function.BinaryOperator)":"java.util.stream.collectors.tomap（java.util.function.function，java.util.function.function.function，java.util.function.binarleoperator）\r\n"," if the attribute was added by the validator.":" 如果属性是由验证器添加的。\r\n","accumulator":"累加器\r\n","org.xml.sax.helpers.NamespaceSupport.NSDECL":"org.xml.sax.helpers.namespacesupport.nsdecl\r\n","Returns the node that was added or removed.":"返回添加或删除的节点。\r\n","This class specifies a secret key in a provider-independent fashion.":"该课程以独立的方式指定了一个秘密键。\r\n"," to the specified\n JAR output stream.":" 到指定的\r\n JAR输出流。\r\n","java.util.logging.Logger.setResourceBundle(java.util.ResourceBundle)":"java.util.logging.logger.setresourcebundle（java.util.resourcebundle）\r\n"," used to handle this scheme.":" 用于处理此方案。\r\n","org.xml.sax.ext.DeclHandler.externalEntityDecl(java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.ext.declhandler.externalentitydecl（java.lang.string，java.lang.string，java.lang.string）\r\n","java.util.concurrent.locks.LockSupport.parkUntil(java.lang.Object, long)":"java.util.concurrent.locks.locksupport.parkuntil（java.lang.Object，long）\r\n","Define an interface to serialization of XML Infoset.":"定义XML Infoset序列化的接口。\r\n","\r\n            Examine the given userData json, determine if the requisite data is present, and optionally add it\r\n            as a new Claim on the ClaimsIdentity.\r\n            ":"\r\n            检查给定的UserData JSON，确定是否存在必要的数据，然后选择添加\r\n            作为对索赔的新主张。\r\n            \r\n","javax.xml.transform.sax.SAXSource.SAXSource(org.xml.sax.InputSource)":"javax.xml.transform.sax.saxsource.saxsource（org.xml.sax.inputsource）\r\n","A response interceptor that sets up entity-related headers.":"一个设置实体相关的标题的响应拦截器。\r\n","javax.sql.RowSet.setObject(int, java.lang.Object, int, int)":"javax.sql.Rowset.setObject（int，java.lang.object，int，int）\r\n","if the size of the resulting bytes is not a multiple of the\n             cipher block size.":"如果结果字节的大小不是该字节的倍数\r\n             密码块大小。\r\n","Creates an output stream with the specified Checksum.":"使用指定的校验和创建输出流。\r\n","org.w3c.dom.EntityReference":"org.w3c.dom.entityReference\r\n","Implements execution conventions for RecursiveTask.":"实施RecursivEtask的执行约定。\r\n","org.w3c.dom.Node.PROCESSING_INSTRUCTION_NODE":"org.w3c.dom.node.processing_instruction_node\r\n","java.util.concurrent.atomic.AtomicMarkableReference.AtomicMarkableReference(java.lang.Object, boolean)":"java.util.concurrent.atomic.atomicmarkablereference.atomicmarkableReference（java.lang.object，boolean）\r\n","A handler for determining if the given execution context is user specific \n or not.":"用于确定给定执行上下文是否特定的处理程序\r\n 或不。\r\n","\r\n            The ":"\r\n            这\r\n","If the strategy specified is not one of FILTERED,\n                HUFFMAN_ONLY or DEFAULT_STRATEGY.\n":"如果指定的策略不是过滤的之一，则\r\n                huffman_only或default_strategy。\r\n\r\n","java.util.concurrent.atomic.AtomicStampedReference":"java.util.concurrent.atomic.atomicstampedReference\r\n","Releases a permit, returning it to the semaphore.":"释放许可证，将其退还给信号量。\r\n","PreferenceChangeListener":"peferencechangelistener\r\n","Creates a <code>SSLException</code> with the specified cause\n            and a detail message of ":"使用指定原因创建<code> sslexception </code>\r\n            以及一条详细信息\r\n","is matched\n case-insensitively. ":"匹配\r\n 案例不敏感。\r\n","Constructs a new <code>XPathExpressionException</code> with the specified <code>cause</code>.":"用指定的<code>原因</code>构造新的<code> XPathExpressionException </code>。\r\n","java.util.zip.ZipFile.ZipFile(java.io.File, int, java.nio.charset.Charset)":"java.util.zip.zipfile.zipfile（java.io.file，int，java.nio.charset.Charset）\r\n","\r\n            Gets the type of the next MessagePack block.\r\n            ":"\r\n            获取下一个MessagePack块的类型。\r\n            \r\n","org.xml.sax.InputSource.InputSource(java.lang.String)":"org.xml.sax.inputsource.inputsource（java.lang.string）\r\n","\r\n            Gets the list of permissions to request.\r\n            ":"\r\n            获取请求的许可列表。\r\n            \r\n","javax.xml.transform.stream.StreamSource.getReader()":"javax.xml.transform.stream.streamsource.getReader（）\r\n","java.util.zip.Inflater.inflate(byte[], int, int)":"java.util.zip.inflater.inflate（byte []，int，int）\r\n",", or the specified offset is negative or past the length\n             of the output buffer.":"，或指定的偏移为负或长度\r\n             输出缓冲区。\r\n","Updates this connection.":"更新此连接。\r\n","if period less than or equal to zero\n":"如果周期小于或等于零\r\n\r\n","if the specified algorithm for the secret key does not\n             exists.":"如果秘密密钥的指定算法没有\r\n             存在。\r\n","javax.net.ssl.X509KeyManager.getServerAliases(java.lang.String, java.security.Principal[])":"javax.net.ssl.x509Keymanager.getServeraliases（java.lang.string，java.security.principal []）\r\n","Constant indicating that the key to be unwrapped is a private key.":"不断表明要拆开的密钥是私钥。\r\n","CDATA sections are used to escape blocks of text containing characters that\n            would otherwise be regarded as markup.":"CDATA部分用于逃避包含字符的文本块\r\n            否则将被视为标记。\r\n","Returns a copy of the environment's default socket factory.":"返回环境默认套接字工厂的副本。\r\n","\r\n            Supplies information about a progress event that is being raised.\r\n            ":"\r\n            提供有关正在提出的进度活动的信息。\r\n            \r\n","java.util.concurrent.CompletionStage.thenRunAsync(java.lang.Runnable, java.util.concurrent.Executor)":"java.util.concurrent.completionstage.thenrunasync（java.lang.runnable，java.util.concurrent.executor）\r\n","A request interceptor that adds a Date header.":"添加日期标头的请求拦截器。\r\n","RejectedExecutionException":"拒绝ExecutionException\r\n","if the mapping doesn't exist or cannot be coerced\n     to a boolean.\n":"如果映射不存在或无法强制\r\n     到布尔人。\r\n\r\n","Puts all <code>Text</code> nodes in the full depth of the sub-tree\n            underneath this <code>Node</code>, including attribute nodes, into a\n            \"normal\" form where only structure (e.":"将所有<code>文本</code>节点放在子树的完整深度中\r\n            在此<code>节点</code>（包括属性节点）下方\r\n            “正常”形式，仅结构（e。\r\n","java.util.concurrent.CompletionStage.exceptionally(java.util.function.Function)":"java.util.concurrent.completionstage.exceptionally（java.util.function.function.function）\r\n","javax.crypto.spec.PSource":"javax.crypto.spec.psource\r\n","java.util.concurrent.atomic.AtomicLongFieldUpdater.lazySet(java.lang.Object, long)":"java.util.concurrent.atomic.atomiclongfieldupdater.lazyset（java.lang.Object，long）\r\n","Signals that no more outbound application data will be sent\n            on this <code>SSLEngine</code>.":"信号表明将不再发送出站应用程序数据\r\n            在此<code> sslengine </code>上。\r\n","Sends the response entity of a response over this connection.":"在此连接上发送响应的响应实体。\r\n"," is not a supported algorithm.":" 不是支持的算法。\r\n","Look up an attribute's value by XML qualified (prefixed) name.":"通过XML合格（前缀）名称查找属性的值。\r\n"," to a target host.":" 到目标主机。\r\n","Creates a new <code>SSLEngine</code> using this context.":"使用此上下文创建一个新的<code> sslengine </code>。\r\n"," should only be applied to parameters of a type that\r\n            can be used with ":" 仅应应用于类型的参数\r\n            可以与\r\n","javax.net.ssl.TrustManagerFactory.getInstance(java.lang.String, java.lang.String)":"javax.net.ssl.trustmanagerfactory.getinstance（java.lang.string，java.lang.string）\r\n","\r\n            Gets a value indicating if all origins are allowed.\r\n            ":"\r\n            获得一个值，指示是否允许所有起源。\r\n            \r\n","java.util.zip.InflaterInputStream.closed":"java.util.zip.inflaterinputstream.clast\r\n","java.util.zip.ZipEntry.getComment()":"java.util.zip.zipentry.getcomment（）\r\n"," do not specify a\n             valid chunk in the input buffer.\n":" 不要指定\r\n             输入缓冲区中的有效块。\r\n\r\n","This field should be ":"这个领域应该是\r\n","java.util.concurrent.atomic.AtomicLongFieldUpdater.AtomicLongFieldUpdater()":"java.util.concurrent.atomic.atomiclongfieldupdater.atomiclongfieldupdater（）\r\n"," from a distinguished name in\n            ASN.":"从一个杰出的名字\r\n            asn。\r\n","\r\n            A delegate assigned to this property will be invoked when the related method is called.\r\n            ":"\r\n            当调用相关方法时，将调用分配给该属性的委托。\r\n            \r\n","\r\n            Gets this sequence expressed as a ":"\r\n            将此序列表示为\r\n","nextTo(String.valueOf(excluded))":"nextto（string.valueof（排除））\r\n","javax.security.cert.CertificateParsingException.CertificateParsingException(java.lang.String)":"javax.security.cert.certificateParsingException.certificateParsingException（java.lang.string）\r\n","Constants and static helpers related to the HTTP protocol.":"常数和与HTTP协议有关的静态帮助者。\r\n","org.json.JSONArray.toJSONObject(org.json.JSONArray)":"org.json.jsonarray.tojsonobject（org.json.jsonarray）\r\n","Returns the named child of this preference node, creating it if it does\n            not already exist.":"返回此偏好节点的指定孩子，如果它确实如此\r\n            尚不存在。\r\n","\r\n            Removes the last item.\r\n            ":"\r\n            删除最后一项。\r\n            \r\n","realm":"领域\r\n","java.util.concurrent.atomic.AtomicMarkableReference.set(java.lang.Object, boolean)":"java.util.concurrent.atomic.atomicmarkablereference.set（java.lang.object，boolean）\r\n","s which must succeed for\r\n            this policy to be successful.\r\n            ":"必须成功的\r\n            这项成功的政策。\r\n            \r\n","java.util.jar.JarInputStream.getNextJarEntry()":"java.util.jar.jarinputstream.getnextjarentry（）\r\n"," to write to the given filename.":" 写入给定的文件名。\r\n","javax.security.auth.Subject.getPublicCredentials()":"javax.security.auth.subject.getPublicCredentials（）\r\n","Writes the entity content to the output stream.":"将实体内容写入输出流。\r\n","java.util.function.IntUnaryOperator":"java.util.function.intunaryoperator\r\n","java.util.concurrent.TimeUnit.sleep(long)":"java.util.concurrent.timeunit.sleep（long）\r\n","reduction":"减少\r\n","java.util.concurrent.SynchronousQueue.peek()":"java.util.concurrent.synchronousqueue.peek（）\r\n","javax.crypto.spec.RC5ParameterSpec.RC5ParameterSpec(int, int, int, byte[], int)":"javax.crypto.spec.rc5parameterspec.rc5parameterspec（int，int，int，int，byte []，int）\r\n","javax.xml.namespace.NamespaceContext":"javax.xml.namespace.namespacecontext\r\n","javax.crypto.KeyAgreementSpi.engineGenerateSecret(java.lang.String)":"javax.crypto.Keyagreementspi.EngineGenerateSecret（java.lang.string）\r\n","505 HTTP Version Not Supported":"505 HTTP版本不支持\r\n","java.util.logging.Level.OFF":"java.util.logging.level.off\r\n","org.xml.sax.ext.Locator2Impl.Locator2Impl(org.xml.sax.Locator)":"org.xml.sax.ext.locator2impl.locator2impl（org.xml.sax.locator）\r\n","javax.sql.ConnectionPoolDataSource.getPooledConnection(java.lang.String, java.lang.String)":"javax.sql.connectionpooldatasource.getPooledConnection（java.lang.string，java.lang.string）\r\n","if the specified verifier is ":"如果指定的验证者为\r\n","Obtains the name of the versioned module or informal unit.":"获取版本的模块或非正式单元的名称。\r\n","org.json.JSONObject.put(java.lang.String, java.lang.Object)":"org.json.jsonobject.put（java.lang.string，java.lang.object）\r\n","Returns the names of the protocol versions which are currently\n            enabled for use with this <code>SSLEngine</code>.":"返回当前的协议版本的名称\r\n            启用用于此<code> sslengine </code>。\r\n","enum":"枚举\r\n","java.util.prefs.AbstractPreferences.childrenNames()":"java.util.prefs.abstractpreferences.childrennames（）\r\n","SocketHandler":"sockethandler\r\n","java.util.concurrent.atomic.DoubleAdder.floatValue()":"java.util.concurrent.atomic.doubleadder.floatvalue（）\r\n","NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.\n   ":"no_modification_allowed_err：如果该节点已阅读，则提出。\r\n   \r\n","Applies this operator to the given operands.":"将该操作员应用于给定的操作数。\r\n","\r\n            Gets the origins that are allowed to access the resource.\r\n            ":"\r\n            获取允许访问资源的起源。\r\n            \r\n","This class provides the functionality of a secret (symmetric) key generator.":"该类提供了秘密（对称）密钥生成器的功能。\r\n","Receive notification of a processing instruction.":"收到处理指令的通知。\r\n","\r\n            Specifies the content to be rendered inside this ":"\r\n            指定要在此内渲染的内容\r\n","#UNIX_LINES":"#unix_lines\r\n","Construct a new exception with the given message.":"用给定消息构建一个新的例外。\r\n","java.util.concurrent.LinkedBlockingDeque.push(java.lang.Object)":"java.util.concurrent.linkedblockingdeque.push（java.lang.object）\r\n","Creates an empty <code>DocumentFragment</code> object.":"创建一个空的<code>文档fragment </code>对象。\r\n","if the backing store is unavailable or causes an operation\n             failure.":"如果备用商店不可用或导致操作\r\n             失败。\r\n","Creates a connection to the database represented by this ":"建立与此表示的数据库的连接\r\n","javax.crypto.spec.RC2ParameterSpec.RC2ParameterSpec(int, byte[])":"javax.crypto.spec.rc2parameterspec.rc2parameterspec（int，byte []）\r\n","DatatypeConstants#DURATION_YEARMONTH":"datatypeconstants＃duration_yearmonth\r\n","\n This interface represents an abstract challenge-response oriented \n authentication scheme.":"\r\n 该界面代表面向抽象的质疑\r\n 身份验证方案。\r\n","java.util.concurrent.locks.ReadWriteLock":"java.util.concurrent.locks.ReadWritelock\r\n","javax.xml.xpath.XPathConstants.STRING":"javax.xml.xpath.xpathconstants.string\r\n","The XML Namespace URI as a constant.":"XML名称空间URI作为常数。\r\n","Set new value for entity replacement text as defined in\n            <a href=\"http://www.":"为实体更换文本设置新值\r\n            <a href =“ http：//www。\r\n","\r\n            Base context for remote authentication.\r\n            ":"\r\n            远程身份验证的基本上下文。\r\n            \r\n","java.util.concurrent.atomic.AtomicIntegerArray.accumulateAndGet(int, int, java.util.function.IntBinaryOperator)":"java.util.concurrent.atomic.atomicintegerarray.accumulateandget（int，int，java.util.function.intbinaryoperator）\r\n","Create an XMLFilter that uses the given Source as the\n            transformation instructions.":"创建一个使用给定源作为\r\n            转换说明。\r\n","Returns the port number of the peer.":"返回对等方的端口号。\r\n","java.util.concurrent.atomic.AtomicMarkableReference.get(boolean[])":"java.util.concurrent.atomic.atomicmarkablereference.get（boolean []）\r\n","Retrieves the workstation name of the computer originating the request.":"检索计算机的工作站名称，该名称始于请求。\r\n","java.util.concurrent.LinkedTransferQueue.iterator()":"java.util.concurrent.linkedtransferqueue.iterator（）\r\n","Releases in shared mode.":"在共享模式下发布。\r\n","HTTP expectations ":"HTTP期望\r\n","java.util.logging.Logger.entering(java.lang.String, java.lang.String)":"java.util.logging.logger.entering（java.lang.string，java.lang.string）\r\n","402 Payment Required":"402付款\r\n","Adds this duration to a ":"将此时间添加到\r\n","Returns the current value of an attribute's \"specified\" flag.":"返回属性的“指定”标志的当前值。\r\n","java.util.concurrent.PriorityBlockingQueue.put(java.lang.Object)":"java.util.concurrent.priorityblockingqueue.put（java.lang.object）\r\n","javax.crypto.NoSuchPaddingException.NoSuchPaddingException(java.lang.String)":"javax.crypto.nosuchpaddingexception.nosuchpaddingexception（java.lang.string）\r\n"," in the context of the associated ":" 在相关的背景下\r\n","100":"100\r\n","javax.xml.parsers.DocumentBuilderFactory.newInstance(java.lang.String, java.lang.ClassLoader)":"javax.xml.parsers.documentbuilderfactory.newinstance（java.lang.string，java.lang.classloader）\r\n","Queries the number of reentrant read holds on this lock by the\n            current thread.":"查询重输入读数的数量，由\r\n            当前线程。\r\n","Set the protocol versions enabled for use on this engine.":"将启用的协议版本设置为在此引擎上使用。\r\n","javax.xml.transform.sax.SAXSource.getSystemId()":"javax.xml.transform.sax.saxsource.getSystemid（）\r\n","org.xml.sax.ext.Attributes2.isSpecified(java.lang.String)":"org.xml.sax.ext.attributes2.isspecified（java.lang.string）\r\n","Thrown when the value exceeds what can be stored in the returned type.":"当值超过可以存储在返回类型中的值时，抛出。\r\n","Permits whitespace and comments in pattern.":"允许使用模式的空格和评论。\r\n","\r\n            Additional state values for the authentication session.\r\n            ":"\r\n            身份验证会话的其他状态值。\r\n            \r\n"," instance is not\n             initialized.":" 实例不是\r\n             初始化。\r\n","This interface is intended for looking up maximum number of connections \n allowed for for a given route.":"该界面旨在查找最大连接数量\r\n 允许使用给定的路线。\r\n","java.util.concurrent.Future.get(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.future.get（long，java.util.concurrent.timeunit）\r\n","Overwrites all the headers in the message.":"覆盖消息中的所有标题。\r\n","org.json.JSONArray.optString(int)":"org.json.jsonarray.optstring（int）\r\n","Wait for and receive a response.":"等待并收到答复。\r\n"," is invoked after an initial circuit to the client\r\n            has been established.\r\n            ":" 在初始电路给客户后被调用\r\n            已经建立。\r\n            \r\n","java.util.prefs.AbstractPreferences.keys()":"java.util.prefs.abstractpreferences.keys（）\r\n","Look up an attribute's value by qualified (prefixed) name.":"通过合格（前缀）名称查找属性的值。\r\n"," to descendants.\r\n            ":" 给后代。\r\n            \r\n","Creates a socket and connects it to the specified remote host\n            at the specified remote port.":"创建一个插座并将其连接到指定的远程主机\r\n            在指定的远程端口。\r\n","javax.net.ssl.SSLParameters.setEndpointIdentificationAlgorithm(java.lang.String)":"javax.net.ssl.sslparameters.setendpointIdentifitationgorithm（java.lang.string）\r\n","javax.xml.transform.stream.StreamResult.StreamResult(java.lang.String)":"javax.xml.transform.stream.streamresult.streamresult（java.lang.string）\r\n","Choose an alias to authenticate the client side of an\n            <code>SSLEngine</code> connection given the public key type\n            and the list of certificate issuer authorities recognized by\n            the peer (if any).":"选择一个别名来验证一个客户端\r\n            <code> sslengine </code>连接给定公共密钥类型\r\n            以及确认的证书发行人清单\r\n            同伴（如果有）。\r\n","javax.crypto.KeyAgreement.init(java.security.Key)":"javax.crypto.keyagreement.init（java.security.key）\r\n","java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread()":"java.util.concurrent.locks.abstractownablessynchronizer.getExclusiveWolderThread（）\r\n","XML Pull Parser is an interface that defines parsing functionality provided\n in  (visit this website to\n learn more about API and its implementations).":"XML拉动解析器是一个定义解析功能的接口\r\n 在（请访问此网站\r\n 了解有关API及其实现的更多信息）。\r\n","org.apache.http.params.HttpParams.setParameter(java.lang.String, java.lang.Object)":"org.apache.http.params.httpparams.setParameter（java.lang.string，java.lang.object）\r\n","javax.crypto.SecretKeyFactorySpi.engineGenerateSecret(java.security.spec.KeySpec)":"javax.crypto.secretkeyfactoryspi.EngineGenerateSecret（java.security.spec.keyspec）\r\n","Basic interface for SAX (Simple API for XML) parsers.":"SAX（XML简单API）的基本接口。\r\n","Parameter for the local address.":"本地地址的参数。\r\n"," where it sits with an expiration time. We'll mark the associated ":" 它坐在到期时间的地方。我们将标记关联的\r\n","Creates a new status line with the given version, status, and reason.":"使用给定版本，状态和原因创建新的状态行。\r\n","\r\n            Collection of parameters that are passed to the authentication handler. These are not intended for\r\n            serialization or persistence, only for flowing data between call sites.\r\n            ":"将传递给身份验证处理程序的参数集合。这些不打算\r\n            序列化或持久性，仅用于在呼叫站点之间流动数据。\r\n            \r\n","org.apache.http.conn.ssl.SSLSocketFactory.SSLSocketFactory()":"org.apache.http.conn.ssl.sslsocketfactory.sslsocketfactory（）\r\n","javax.crypto.spec.GCMParameterSpec.GCMParameterSpec(int, byte[])":"javax.crypto.spec.gcmparameterspec.gcmparameterspec（int，byte []）\r\n","\r\n            Used to setup defaults for the OAuthOptions.\r\n            ":"\r\n            用于设置OAuthoptions的默认值。\r\n            \r\n","java.util.concurrent.SynchronousQueue.poll()":"java.util.concurrent.synchronousqueue.poll（）\r\n","Returns a new CompletionStage that, when either this or the\n            other given stage complete normally, executes the given action\n            using this stage's default asynchronous execution facility.":"返回一个新的完整舞台，当\r\n            其他给定的阶段正常完成，执行给定的动作\r\n            使用此阶段的默认异步执行设施。\r\n","\r\n            Gets the requirements that have not yet been marked as succeeded.\r\n            ":"\r\n            获取尚未标记为成功的要求。\r\n            \r\n","java.util.regex.PatternSyntaxException.PatternSyntaxException(java.lang.String, java.lang.String, int)":"java.util.regex.patternsyntaxexception.patternsyntaxexception（java.lang.string，java.lang.string，int）\r\n"," if that supports sign out.\r\n            ":" 如果支持签字。\r\n            \r\n","\r\n            Adds the ":"\r\n            添加\r\n","java.util.function.DoubleToIntFunction.applyAsInt(double)":"java.util.function.doubletointfunction.applyasint（double）\r\n","javax.security.auth.DestroyFailedException.DestroyFailedException()":"javax.security.auth.destroyfailedexception.destroyfailedexception（）\r\n","\r\n            Method invoked when the component is ready to start, having received its\r\n            initial parameters from its parent in the render tree.\r\n            ":"\r\n            当组件准备启动时调用方法，已收到其\r\n            渲染树中的父母的初始参数。\r\n            \r\n",",\r\n            or something beteween ":"，，，，\r\n            或其他东西\r\n","\n operation.":"\r\n 手术。\r\n","org.w3c.dom.DOMException.INDEX_SIZE_ERR":"org.w3c.dom.domexception.index_size_err\r\n","java.util.concurrent.locks.Lock":"java.util.concurrent.locks.lock\r\n","PARSE_ERR: Raised if the ":"parse_err：如果是\r\n","\r\n            Gets the IDs of the components that were disposed.\r\n            ":"\r\n            获取处置的组件的ID。\r\n            \r\n","org.xml.sax.helpers.ParserAdapter.startElement(java.lang.String, org.xml.sax.AttributeList)":"org.xml.sax.helpers.parseradapter.startelement（java.lang.string，org.xml.sax.sax.attributelist）\r\n","java.util.prefs.Preferences.nodeExists(java.lang.String)":"java.util.prefs.preferences.nodeexists（java.lang.string）\r\n","\r\n            Determines the settings used to create the antiforgery cookies.\r\n            ":"\r\n            确定用于创建抗试验饼干的设置。\r\n            \r\n","msg":"味精\r\n","javax.net.ssl.SSLServerSocketFactory.getDefault()":"javax.net.ssl.sslserversocketfactory.getDefault（）\r\n","Sets the default charset to be used for writing content body,\n when no charset explicitly specified.":"设置用于编写内容主体的默认字符集，\r\n 当未明确指定字符集时。\r\n","javax.security.cert.Certificate.verify(java.security.PublicKey, java.lang.String)":"javax.security.cert.certificate.verify（java.security.publickey，java.lang.string）\r\n","if an unsupported algorithm is detected":"如果检测到不支持的算法\r\n","Validate the cookie according to validation rules defined by the \n  cookie specification.":"根据验证规则验证cookie\r\n  cookie规范。\r\n","javax.xml.xpath.XPath.compile(java.lang.String)":"javax.xml.xpath.xpath.compile（java.lang.string）\r\n","if the identity of the peer is not verified.\n":"如果未验证对等的身份。\r\n\r\n","Returns a specification (key material) of the given key object\n            in the requested format.":"返回给定关键对象的规范（关键材料）\r\n            以请求的格式。\r\n","\r\n            The attribute is associated with the most recently added element.\r\n            ":"\r\n            该属性与最近添加的元素关联。\r\n            \r\n","If the implementation is not\n   available or cannot be instantiated.\n":"如果实现不是\r\n   可用或无法实例化。\r\n\r\n","Removes the header that was returned last.":"卸下上次返回的标题。\r\n","Signals violation of HTTP specification caused by an invalid redirect":"信号违反了由无效重定向引起的HTTP规范\r\n","Default charsets ":"默认字符\r\n","Closes the current ZIP entry and positions the stream for writing\n            the next entry.":"关闭当前的拉链输入并将流放置为编写\r\n            下一个条目。\r\n"," to the final result type ":" 最终结果类型\r\n","Adapt a SAX2 end element event.":"调整SAX2最终元素事件。\r\n","Encodes the number as a JSON string.":"编码数字为JSON字符串。\r\n","if the cipher is ":"如果密码是\r\n"," if this attribute is not in use.":" 如果此属性不使用。\r\n","java.util.zip.InflaterOutputStream.InflaterOutputStream(java.io.OutputStream)":"java.util.zip.inflateroutputstream.inflateroutputstream（java.io.outputstream）\r\n","Determines if a method should be retried after an IOException\n occurs during execution.":"确定在IOException之后是否应重试方法\r\n 发生在执行过程中。\r\n","javax.net.ssl.HttpsURLConnection.getSSLSocketFactory()":"javax.net.ssl.httpsurlconnection.getsslsocketFactory（）\r\n","Get the system identifier that was set with setSystemId. -or- Set the system identifier for this Source.":"获取使用SetSystemID设置的系统标识符。 - 或 - 设置此源的系统标识符。\r\n","\r\n            Extension method for authenticate using the ":"\r\n            使用该方法进行身份验证的扩展方法\r\n"," to the expected reference\n            and the current mark is equal to the expected mark.":" 到预期参考\r\n            当前标记等于预期的标记。\r\n","Extension-Installation":"扩展安装\r\n","nanosTimeout":"Nanostimeout\r\n","org.xml.sax.helpers.AttributesImpl.getURI(int)":"org.xml.sax.helpers.attributesimpl.geturi（int）\r\n","Returns the host name.":"返回主机名。\r\n","Creates a new response from status line elements.":"从状态行元素中创建新的响应。\r\n","\n            implementation class.":"\r\n            实施类。\r\n","Removes a header from this message.":"从此消息中删除标头。\r\n","Create a <code>Duration</code> of type <code>xdt:dayTimeDuration</code> by parsing its <code>String</code> representation,\n            \"<em>PnDTnHnMnS</em>\", <a href=\"http://www.":"创建<code>持续时间</code> type <code> xdt：dayTimeduration </code>通过解析其<code>字符串</code>表示，\r\n            “ <em> pndtnhnmns </em>”，<a href =“ http：//www。\r\n","org.apache.http.params.HttpConnectionParams":"org.apache.http.params.httpconnectionparams\r\n","java.util.function.Supplier":"java.util.function.supplier\r\n","javax.sql.RowSet.setInt(java.lang.String, int)":"javax.sql.Rowset.setint（java.lang.string，int）\r\n","java.util.concurrent.locks.ReentrantLock.newCondition()":"java.util.concurrent.locks.reentrantlock.newcondition（）\r\n","java.util.concurrent.ScheduledThreadPoolExecutor.scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.scheduledthreadpoolexecutor.schedulewithfixeddelay（java.lang.runnable，long，long，long，java.util.concurrent.timeunit）\r\n","\r\n            The scroll amount for the z-axis.\r\n            ":"\r\n            Z轴的滚动量。\r\n            \r\n","The connection to release.":"发布的连接。\r\n","javax.xml.datatype.DatatypeFactory.newDurationDayTime(long)":"javax.xml.datatype.datatypefactory.newdurationdaytime（长）\r\n","Creates an IvParameterSpec object using the bytes in <code>iv</code>\n            as the IV.":"使用<code> iv </code>中的字节创建IVParametersPec对象\r\n            作为IV。\r\n","excluded":"排除\r\n","\r\n            Allows derived classes to lazyly self-initialize. Implementations that support lazy-initialization should override\r\n            this method and call ":"\r\n            允许派生的类懒惰地自定义。支持懒惰的实现应覆盖\r\n            此方法并致电\r\n"," with initial value ":" 具有初始值\r\n","javax.xml.datatype.DatatypeConstants.APRIL":"javax.xml.datatype.datatypeconstants.April\r\n","\r\n            Writes a sequence of bytes, prefixed with a length encoded as the smallest fitting from:\r\n            ":"\r\n            写下一系列字节，前缀为最小的拟合长度：\r\n            \r\n","org.xml.sax.DocumentHandler.endElement(java.lang.String)":"org.xml.sax.documenthandler.endelement（java.lang.string）\r\n","303 See Other":"303见其他\r\n",", or if the\n   ":"，或者如果\r\n   \r\n","javax.xml.validation.SchemaFactory.newSchema(java.io.File)":"javax.xml.validation.schemafactory.newschema（java.io.file）\r\n","Receive notification of a parser warning.":"收到解析器警告的通知。\r\n","Returns whether this engine will request client authentication.":"返回该引擎是否请求客户端验证。\r\n","\r\n            Gets or sets a function which evaluates whether an origin is allowed.\r\n            ":"\r\n            获取或设置一个评估是否允许原点的函数。\r\n            \r\n","if the name parameter is null.":"如果名称参数为null。\r\n","javax.xml.namespace.NamespaceContext.getNamespaceURI(java.lang.String)":"javax.xml.namespace.namespacecontext.getnamespaceuri（java.lang.string）\r\n","java.util.function.DoubleUnaryOperator.applyAsDouble(double)":"java.util.function.doubleunaryoperator.applyasdouble（double）\r\n","\r\n            Gets the number of bytes consumed by the reader.\r\n            ":"\r\n            获取读者消耗的字节数。\r\n            \r\n","The <code>Document</code> interface represents the entire HTML or XML\n            document.":"<code>文档</code>接口表示整个HTML或XML\r\n            文档。\r\n","Returns the timeout until a connection is etablished.":"返回超时，直到连接被估计为止。\r\n","javax.net.ssl.HttpsURLConnection.setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)":"javax.net.ssl.httpsurlconnection.setDefaultsssslsocketFactory（javax.net.ssl.ssl.sslsocketfactory）\r\n","javax.net.ssl.HandshakeCompletedListener":"Javax.net.ssl.HandShakeCompletedListener\r\n","the format of a field attribute name.":"字段属性名称的格式。\r\n","javax.xml.xpath.XPathFunctionResolver.resolveFunction(javax.xml.namespace.QName, int)":"javax.xml.xpath.xpathfunctionResolver.ResolveFunction（javax.xml.namespace.qname，int）\r\n","Returns the namespace URI of the attribute\n            with the given index (starts from 0).":"返回属性的名称空间URI\r\n            使用给定索引（从0开始）。\r\n","Returns the absolute path name of this preferences node.":"返回此首选项节点的绝对路径名。\r\n","Queries the anchoring of region bounds for this matcher.":"查询该匹配器的区域界限的锚定。\r\n","javax.crypto.spec.OAEPParameterSpec.getPSource()":"javax.crypto.spec.oaepparameterspec.getpsource（）\r\n","SAX2 extension helper for additional Attributes information,\n            implementing the ":"SAX2扩展助手有关其他属性信息，\r\n            实施\r\n","javax.net.ssl.SSLException":"javax.net.ssl.sslexception\r\n","\r\n            Reads a span of bytes, whose length is determined by a header of one of these types:\r\n            ":"\r\n            读取一个字节的跨度，其长度由以下类型之一的标题确定：\r\n            \r\n","\r\n            Adds a new segment after this one.\r\n            ":"\r\n            在此之后添加了一个新段。\r\n            \r\n","Always returns zero.":"总是返回零。\r\n","Returns an equivalent stream that is parallel.":"返回平行的等效流。\r\n","java.util.concurrent.atomic.AtomicLong.intValue()":"java.util.concurrent.atomic.atomiclong.intvalue（）\r\n","java.util.concurrent.atomic.AtomicLong.floatValue()":"java.util.concurrent.atomic.atomiclong.floatvalue（）\r\n","\r\n            Default implementation.\r\n            ":"\r\n            默认实现。\r\n            \r\n","\r\n            Represents a reference to a rendered element.\r\n            ":"\r\n            代表对渲染元素的引用。\r\n            \r\n","java.util.concurrent.atomic.DoubleAdder.longValue()":"java.util.concurrent.atomic.doubleadder.longvalue（）\r\n","org.w3c.dom.DOMError.SEVERITY_ERROR":"org.w3c.dom.domerror.severity_error\r\n","if the length of the specified key data is less than 8.\n":"如果指定的密钥数据的长度小于8。\r\n\r\n","if the host is unknown.\n":"如果主机未知。\r\n\r\n","W3C XML Schema min timezone offset is +14:00.":"W3C XML模式最小时区偏移量为+14：00。\r\n","If the property\n            value can't be assigned or retrieved from the parent.":"如果属性\r\n            价值不能从父母那里分配或检索。\r\n","Reports if escape processing is enabled for this ":"报告如果为此启用了逃生处理\r\n","Initializes this cipher instance with the public key from the specified\n certificate.":"用指定的公共密钥初始化此密钥\r\n 证书。\r\n","javax.xml.datatype.XMLGregorianCalendar.clone()":"javax.xml.datatype.xmlgregoriancalendar.clone（）\r\n","Parses a status line.":"解析状态线。\r\n","XML Document Type Declaration Namespace URI as an arbitrary value.":"XML文档类型声明名称空间URI作为任意值。\r\n","Non-exclusively acquires the lock, blocking if necessary\n            until available.":"非固定地获取锁，如有必要\r\n            直到可用。\r\n","Attempts to decode SSL/TLS network data into a subsequence of\n            plaintext application data buffers.":"试图将SSL/TLS网络数据解码为\r\n            明文应用程序数据缓冲区。\r\n","The node is cloned, using <code>Node.":"使用<code>节点将节点克隆。\r\n","Method invoked when the Executor has terminated.":"当执行人终止时调用方法。\r\n","Create a new <code>LSParser</code>.":"创建一个新的<code> lsparser </code>。\r\n","java.util.prefs.Preferences.removeNodeChangeListener(java.util.prefs.NodeChangeListener)":"java.util.prefs.preferences.removenodechangelistener（java.util.prefs.nodechangelistener）\r\n","javax.sql.ConnectionEvent.ConnectionEvent(javax.sql.PooledConnection, java.sql.SQLException)":"javax.sql.connectionevent.connectionevent（javax.sql.pooledconnection，java.sql.sqlexception）\r\n","Determines if a Cookie matches the target location.":"确定cookie是否匹配目标位置。\r\n","java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)":"java.util.logging.logger.log（java.util.logging.Level，java.lang.string，java.lang.lang.throwable）\r\n","org.json.JSONArray.optBoolean(int)":"org.json.jsonarray.optboolean（int）\r\n","org.xml.sax.helpers.AttributeListImpl.getValue(java.lang.String)":"org.xml.sax.helpers.attributelistimpl.getValue（java.lang.string）\r\n","java.util.concurrent.atomic.AtomicReferenceArray.updateAndGet(int, java.util.function.UnaryOperator)":"java.util.concurrent.atomic.atomicreferencearray.updateandget（int，java.util.function.unaryoperator）\r\n","Get a parser property.":"获取解析器属性。\r\n","If the compression level is invalid.\n":"如果压缩水平无效。\r\n\r\n","Return the localized string name of the Level, for\n            the current default locale.":"返回级别的局部字符串名称，用于\r\n            当前默认场所。\r\n","Return an attribute's type by index.":"通过索引返回属性类型。\r\n","Returns the parent of this preference node, or ":"返回此偏好节点的父母，或\r\n"," will set the value of each property\r\n            decorated with ":" 将设置每个属性的值\r\n            装饰\r\n","java.util.logging.Handler.getFormatter()":"java.util.logging.handler.getFormatter（）\r\n","\r\n            Gets the tail of memory that has not yet been committed.\r\n            ":"\r\n            获取尚未投入的记忆的尾巴。\r\n            \r\n","Wrap a key.":"包裹钥匙。\r\n","Uncompresses bytes into specified buffer.":"将字节取消为指定的缓冲区。\r\n","java.util.regex.Matcher.lookingAt()":"java.util.regex.matcher.lookingat（）\r\n","\r\n            Indicates that there are no further edit operations on the current frame, and the\r\n            edit position should move back to the parent frame.\r\n            ":"\r\n            表示当前帧没有进一步的编辑操作，\r\n            编辑位置应移回父框架。\r\n            \r\n","java.util.concurrent.atomic.AtomicIntegerFieldUpdater.decrementAndGet(java.lang.Object)":"java.util.concurrent.atomic.atomicintegerfieldupdater.decrementandget（java.lang.object）\r\n","\r\n            Constructor\r\n            ":"\r\n            构造函数\r\n            \r\n"," cannot accept a\n            task.":" 不能接受\r\n            任务。\r\n","The interface to a PBE key.":"PBE键的接口。\r\n","javax.crypto.spec.PSource.PSource(java.lang.String)":"javax.crypto.spec.psource.psource（java.lang.string）\r\n","\r\n            A type which can provide a ":"\r\n            一种可以提供的类型\r\n","Determines the route for a request.":"确定请求的路线。\r\n","\r\n            Adds the specified ":"\r\n            添加指定的\r\n","Returns true until the input has been exhausted.":"返回真实，直到输入耗尽为止。\r\n","NOT_SUPPORTED_ERR: if the ":"not_supported_err：如果\r\n",".\r\n            Use the ":"。\r\n            使用\r\n"," is different from \"\" []\n   . Also raised, when the node being renamed is an attribute, if the\n   ":" 与“” []不同\r\n   。还提出了，当节点更名时是一个属性，如果\r\n   \r\n","javax.crypto.Mac.doFinal(byte[])":"javax.crypto.mac.dofinal（byte []）\r\n","Creates a new AtomicIntegerArray of the given length, with all\n            elements initially zero.":"创建一个给定长度的新的AtomicIntegerarray\r\n            元素最初为零。\r\n"," in which producers may wait for consumers\n            to receive elements.":" 生产者可以等待消费者\r\n            接收元素。\r\n","Returns the current calculated checksum value.":"返回当前计算的校验和值。\r\n","Creates a new MethodNotSupportedException with the specified detail message.":"使用指定的详细信息创建一个新的MethodNotsupportedException。\r\n","Return the public identifier for the current document event.":"返回当前文档事件的公共标识符。\r\n","Acts as an holder for a transformation Result.":"充当转换结果的持有者。\r\n","javax.xml.transform.sax.SAXTransformerFactory.newXMLFilter(javax.xml.transform.Source)":"javax.xml.transform.sax.saxtransformerfactory.newxmlfilter（javax.xml.transform.source）\r\n","org.xml.sax.XMLReader.getFeature(java.lang.String)":"org.xml.sax.xmlreader.getFeature（java.lang.string）\r\n","#createSocket createSocket":"#CREATESOCKETSOCKETSOCKETS\r\n","Forces this phaser to enter termination state.":"强迫这个移相器进入终止状态。\r\n","Constructs a SealedObject from any Serializable object.":"构造来自任何可序列化对象的密封对象。\r\n","java.util.concurrent.LinkedBlockingQueue.LinkedBlockingQueue()":"java.util.concurrent.linkedblockingqueue.linkedblockingquequequequequee（）\r\n","java.util.function.BinaryOperator.maxBy(java.util.Comparator)":"java.util.function.binaryoperator.maxby（java.util.comparator）\r\n","Get the node that will contain the result DOM tree. -or- Set the node that will contain the result DOM tree.":"获取将包含结果DOM树的节点。 - 或 - 设置将包含结果DOM树的节点。\r\n","Returns the start index of the subsequence captured by the given group\n            during the previous match operation.":"返回给定组捕获的子序列的开始索引\r\n            在上一个比赛操作中。\r\n","javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendar(java.lang.String)":"javax.xml.datatype.datatypefactory.newxmlgregoriancalendar（java.lang.string）\r\n","\r\n            Appends a frame representing an instruction to prevent the default action\r\n            for a specified event.\r\n            ":"\r\n            附加代表指令以防止默认操作的框架\r\n            对于指定事件。\r\n            \r\n","org.xml.sax.helpers.XMLFilterImpl.setProperty(java.lang.String, java.lang.Object)":"org.xml.sax.helpers.xmlfilterimpl.setproperty（java.lang.string，java.lang.object）\r\n","if the specified provider cannot provider the requested\n             algorithm.":"如果指定的提供商无法提供者\r\n             算法。\r\n",", grouping elements according to a\n            classification function, and returning the results in a ":"，根据一个\r\n            分类功能，并返回结果\r\n","Compresses the input data and fills the specified buffer with compressed\n            data.":"压缩输入数据并用压缩填充指定的缓冲区\r\n            数据。\r\n","ENCRYPT_MODE":"encrypt_mode\r\n"," with no values.":" 没有值。\r\n"," function to the result.":" 功能到结果。\r\n","javax.security.auth.callback.PasswordCallback.getPassword()":"javax.security.auth.callback.passwordcallback.getPassword（）\r\n",",\r\n            Some value between ":"，，，，\r\n            两者之间的一些价值\r\n","if a parser cannot be created which satisfies the requested configuration.":"如果无法创建满足所请求的配置的解析器。\r\n","Obtains a connection within a given time.":"在给定时间内获得连接。\r\n","Queries whether any threads are waiting to acquire the read or\n            write lock.":"查询是否有任何线程正在等待获取读取或\r\n            写锁。\r\n","java.util.concurrent.atomic.LongAdder.doubleValue()":"java.util.concurrent.atomic.longadder.doublevalue（）\r\n","There is a single global LogManager object that is used to\n            maintain a set of shared state about Loggers and log services.":"有一个曾经用来的全局logmanager对象\r\n            维护有关登录器和日志服务的一组共享状态。\r\n","javax.net.ssl.SNIHostName.SNIHostName(java.lang.String)":"javax.net.ssl.snihostname.snihostname（java.lang.string）\r\n","Returns a collection containing those threads that may be\n            waiting on the given condition associated with this\n            synchronizer.":"返回包含那些可能是的线程的集合\r\n            等待与此相关的给定条件\r\n            同步器。\r\n","Sets the default socket timeout (":"设置默认插座超时（\r\n","Reset this <code>Validator</code> to its original configuration.":"将此<code>验证器</code>重置为其原始配置。\r\n","\r\n            Gets or sets a value that determines whether or not to send detailed exception messages to JavaScript when an unhandled exception\r\n            happens on the circuit or when a .NET method invocation through JS interop results in an exception.\r\n            ":"\r\n            获取或设置一个值，该值确定是否在未经手的异常时向JavaScript发送详细的异常消息\r\n            发生在电路上或通过JS Interop调用.NET方法会导致异常。\r\n            \r\n","org.xml.sax.DocumentHandler.processingInstruction(java.lang.String, java.lang.String)":"org.xml.sax.documenthandler.processinginstruction（java.lang.string，java.lang.string）\r\n","Returns version of the state management this cookie specification\n conforms to.":"返回国家管理的版本此cookie规范\r\n 符合。\r\n","Checks whether this route is tunnelled through a proxy.":"检查该路线是否通过代理进行隧道。\r\n","org.xmlpull.v1.XmlPullParser.FEATURE_REPORT_NAMESPACE_ATTRIBUTES":"org.xmlpull.v1.xmlpullparser.feature_report_namespace_attributes\r\n","\r\n            Validates an antiforgery token that was supplied as part of the request.\r\n            ":"\r\n            验证作为请求的一部分提供的抗管剂令牌。\r\n            \r\n","\r\n            Gets a value indicating whether the reader is at the end of the sequence.\r\n            ":"\r\n            获取一个指示读者是否处于序列末尾的值。\r\n            \r\n","\r\n            Gets a unique identifier for ":"\r\n            获得唯一的标识符\r\n","oldChild":"老童\r\n","Adds a new attribute node.":"添加一个新属性节点。\r\n","Computes a new duration whose value is <code>this-rhs</code>.":"计算一个新的持续时间，其值为<code> this-rhs </code>。\r\n","Get the XInclude processing mode for this parser.":"获取此解析器的Xinclude处理模式。\r\n","java.util.concurrent.atomic.AtomicReferenceFieldUpdater.getAndAccumulate(java.lang.Object, java.lang.Object, java.util.function.BinaryOperator)":"java.util.concurrent.Atomic.AtomicReferenceFieldupDater.getAndAccumulate（java.lang.object，java.lang.object，java.util.function.binaryoperator）\r\n","\r\n            Generates an ":"\r\n            生成一个\r\n","javax.sql.RowSet.execute()":"javax.sql.Rowset.execute（）\r\n","Returns the first header with a specified name of this message.":"返回使用此消息的指定名称的第一个标头。\r\n","\r\n            Gets the current render tree for a given component.\r\n            ":"\r\n            获取给定组件的当前渲染树。\r\n            \r\n"," if this attribute was explicitly given a value in\n the instance document, ":" 如果此属性被明确给予一个值\r\n 实例文档，\r\n"," from the next position in the sequence.\r\n            ":" 从序列中的下一个位置。\r\n            \r\n","javax.net.ssl.SSLSocket.getHandshakeApplicationProtocol()":"javax.net.ssl.sslsocket.gethandshakeapplicationprotocol（）\r\n","Acquires in shared mode, ignoring interrupts.":"在共享模式下获取，忽略中断。\r\n","The parser will call this method after each <code>Element</code> start\n            tag has been scanned, but before the remainder of the\n            <code>Element</code> is processed.":"解析器将在每个<code>元素</code>开始之后调用此方法\r\n            标签已被扫描，但在其余部分之前\r\n            <code>元素</code>已处理。\r\n","javax.xml.transform.stream.StreamSource.setSystemId(java.lang.String)":"javax.xml.transform.stream.streamsource.setsystemid（java.lang.string）\r\n","\r\n            Validates this ":"\r\n            验证这一点\r\n","javax.sql.PooledConnection.close()":"javax.sql.pooledconnection.close（）\r\n","javax.xml.parsers.SAXParser.parse(java.io.InputStream, org.xml.sax.helpers.DefaultHandler)":"javax.xml.parsers.saxparser.parse（java.io.inputstream，org.xml.sax.helpers.defaulthandler）\r\n","An optionally-bounded BlockingQueue blocking queue based on\n            linked nodes.":"基于可选约束的阻止封锁队列\r\n            链接节点。\r\n","java.util.concurrent.TransferQueue.transfer(java.lang.Object)":"java.util.concurrent.transferqueue.transfer（java.lang.Object）\r\n","The name of this node, depending on its type; see the table above.":"该节点的名称，具体取决于其类型；请参阅上表。\r\n","When the underlying XMLReader recognizes the property name but doesn't support the property.":"当基础XMLReader识别属性名称但不支持属性时。\r\n","javax.xml.transform.TransformerConfigurationException.TransformerConfigurationException(java.lang.String, javax.xml.transform.SourceLocator)":"javax.xml.transform.transformerconfigurationexception.transformerconfigurationException（java.lang.string，javax.xml.transform.sourcelformer.sourcelocator）\r\n","org.xml.sax.helpers.ParserAdapter.characters(char[], int, int)":"org.xml.sax.helpers.parseradapter.characters（char []，int，int）\r\n","400 Bad Request":"400不良要求\r\n"," does not\n            recognize a particular ":" 才不是\r\n            认识一个特定\r\n"," cannot be evaluated with this ":" 无法评估\r\n","Sets the designated column's SQL type to the one given.":"将指定列的SQL类型设置为给定的类型。\r\n","A user-chosen password that can be used with password-based encryption\n            (":"用户选择的密码，可与基于密码的加密一起使用\r\n            （（\r\n","java.util.concurrent.atomic.AtomicInteger.incrementAndGet()":"java.util.concurrent.atomic.atomicinteger.incrementandget（）\r\n","\r\n            Gets an optional value that is appended to the request path base.\r\n            ":"\r\n            获取可选的值，该值附加到请求路径基础上。\r\n            \r\n","javax.crypto.SecretKey":"javax.crypto.secretkey\r\n","org.xml.sax.helpers.XMLFilterImpl.getErrorHandler()":"org.xml.sax.helpers.xmlfilterimpl.getErrorhandler（）\r\n","if the padding of the data does not match the padding scheme.":"如果数据的填充不匹配填充方案。\r\n","if parties less than zero\n or greater than the maximum number of parties supported\n":"如果当事方小于零\r\n 或大于最大政党数量\r\n\r\n","java.util.regex.PatternSyntaxException.getDescription()":"java.util.regex.patternsyntaxexception.getDescription（）\r\n","javax.xml.xpath.XPathVariableResolver.resolveVariable(javax.xml.namespace.QName)":"javax.xml.xpath.xpathvariableresolver.resolvevariable（javax.xml.namespace.qname）\r\n"," with the given identifier.":" 带有给定的标识符。\r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            to the given Java array of <code>byte</code> values.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            到给定的Java数组<code> byte </code>值。\r\n","javax.xml.transform.dom.DOMSource.FEATURE":"javax.xml.transform.dom.domsource.feature\r\n","\r\n            Called to replace the claims principal. The supplied principal will replace the value of the \r\n            Principal property, which determines the identity of the authenticated request.\r\n            ":"\r\n            呼吁替换索赔本金。所提供的本金将取代\r\n            主要财产，确定已认证请求的身份。\r\n            \r\n","java.util.concurrent.atomic.AtomicReferenceFieldUpdater.accumulateAndGet(java.lang.Object, java.lang.Object, java.util.function.BinaryOperator)":"java.util.concurrent.atomic.atomicreference fieldupdater.accumulateandget（java.lang.object，java.lang.object，java.util.function.binarecoperator））\r\n","javax.sql.RowSetMetaData.setPrecision(int, int)":"javax.sql.RowsetMetadata.setPrecision（int，int）\r\n","\r\n            Function that is called to handle this requirement.\r\n            ":"\r\n            称为处理此要求的功能。\r\n            \r\n","NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly or\n   if the previous parent of the node being inserted is readonly.\n   ":"no_modification_allowed_err：如果此节点已阅读或\r\n   如果要插入的节点的先前父母将被阅读。\r\n   \r\n"," is determined to be valid.\r\n            ":" 确定为有效。\r\n            \r\n"," element.\r\n            ":" 元素。\r\n            \r\n","Atomically updates the current value with the results of\n            applying the given function, returning the updated value.":"原子上更新当前值的结果\r\n            应用给定功能，返回更新的值。\r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            to the given Java <code>byte</code> value.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            到给定的Java <code>字节</code>值。\r\n","org.xml.sax.Parser.parse(java.lang.String)":"org.xml.sax.parser.parse（java.lang.string）\r\n","If a user agent (web browser) presents this cookie to a user, the\n cookie's purpose will be described using this comment.":"如果用户代理（Web浏览器）将此cookie呈现给用户，则\r\n Cookie的目的将使用此评论来描述。\r\n","The destination URI. This can be absolute, or relative to the base URI\r\n            (as returned by ":"目的地URI。这可以是绝对的，也可以相对于基础URI\r\n            （如归还\r\n","org.xml.sax.helpers.ParserAdapter.ParserAdapter()":"org.xml.sax.helpers.parseradapter.parseradapter（）\r\n","Returns the name of the cipher suite negotiated during the SSL handshake.":"返回SSL握手期间谈判的密码套件的名称。\r\n","Provides a framework for implementing blocking locks and related\n            synchronizers (semaphores, events, etc) that rely on\n            first-in-first-out (FIFO) wait queues.":"提供了实现阻塞锁和相关的框架\r\n            依靠的同步器（信号量，事件等）\r\n            首先（FIFO）等待队列。\r\n","Returns the number of registered parties that have not yet\n            arrived at the current phase of this phaser.":"返回尚未注册当事方的数量\r\n            到达此移位器的当前阶段。\r\n","java.util.prefs.AbstractPreferences.syncSpi()":"java.util.prefs.abstractpreferences.syncspi（）\r\n","org.xml.sax.helpers.XMLFilterImpl":"org.xml.sax.helpers.xmlfilterimpl\r\n","Constructs a new Attributes object with the same attribute name-value\n            mappings as in the specified Attributes.":"用相同的属性名称值构造一个新属性对象\r\n            如指定属性中的映射。\r\n","\r\n            Remove all claim actions for the given ClaimType.\r\n            ":"\r\n            删除给定索赔类型的所有索赔措施。\r\n            \r\n","The application may raise an exception.\n":"该申请可能会引起例外。\r\n\r\n","javax.net.ssl.X509ExtendedTrustManager":"javax.net.ssl.x509 extendedTrustmanager\r\n","Create a new <code>TransformerFactoryConfigurationError</code> with\n            the <code>String</code> specified as an error message.":"使用新的<code> trransformerFactoryConfigurationError </code>使用\r\n            <code>字符串</code>指定为错误消息。\r\n","Return hours or ":"返回时间或\r\n","java.util.logging.LogManager.removePropertyChangeListener(java.beans.PropertyChangeListener)":"java.util.logging.logmanager.removepropertychangelistener（java.beans.propertychangelistener）\r\n","If the parameter <code>isId</code> is <code>true</code>, this method\n            declares the specified attribute to be a user-determined ID attribute\n            .":"如果参数<code> isid </code>是<code> true </code>，则此方法\r\n            将指定属性声明为用户确定的ID属性\r\n            。\r\n","Retrieves the description of the error.":"检索错误的描述。\r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            with the given  <code>Blob</code> value.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            带有给定的<code> blob </code>值。\r\n","\r\n            Authorization was forbidden.\r\n            ":"\r\n            禁止授权。\r\n            \r\n","\r\n            true if the meta key was down when the event was fired. false otherwise.\r\n            ":"\r\n            如果元件被解雇时，则元密钥会关闭。否则为错误。\r\n            \r\n","Extracts the array of SubjectAlt DNS names from an X509Certificate.":"从x509certificate中提取主题DNS名称的数组。\r\n","java.util.logging.SocketHandler.SocketHandler(java.lang.String, int)":"java.util.logging.sockethandler.sockethandler（java.lang.string，int）\r\n","java.util.zip.GZIPInputStream.GZIPInputStream(java.io.InputStream)":"java.util.zip.gzipinputstream.gzipinputstream（java.io.inputstream）\r\n","java.util.concurrent.atomic.AtomicInteger.getAndUpdate(java.util.function.IntUnaryOperator)":"java.util.concurrent.atomic.atomicinteger.getandupdate（java.util.function.intunaryoperator）\r\n","javax.xml.parsers.SAXParserFactory.newSAXParser()":"javax.xml.parsers.saxparserfactory.newsaxparser（）\r\n","org.w3c.dom.DOMImplementation":"org.w3c.dom.domimplementation\r\n","\r\n            Used for building policies during application startup.\r\n            ":"\r\n            用于在申请启动期间构建政策。\r\n            \r\n","Normalize this instance to UTC.":"将此实例归一化为UTC。\r\n","The public identifier of this notation.":"该符号的公共标识符。\r\n","javax.crypto.ExemptionMechanism.ExemptionMechanism(javax.crypto.ExemptionMechanismSpi, java.security.Provider, java.lang.String)":"Javax.Crypto.ExemptionMechanism.ExemptionMechanism（Javax.Crypto.Crypto.ExemptionMechanismspi，Java.Security.Provider，Java.lang.String）\r\n","java.util.function.Predicate.negate()":"java.util.function.predicate.negate（）\r\n","\r\n            Provides information about the authentication state of the current user.\r\n            ":"\r\n            提供有关当前用户身份验证状态的信息。\r\n            \r\n","\r\n            Determines whether an authorization request was successful or not.\r\n            ":"\r\n            确定授权请求是否成功。\r\n            \r\n","Log a FINER message, which is only to be constructed if the logging\n            level is such that the message will actually be logged.":"记录一条更好的消息，只有在日志记录时才能构造\r\n            级别的级别可以实际记录该消息。\r\n","javax.xml.xpath.XPathFunction.evaluate(java.util.List)":"javax.xml.xpath.xpathfunction.evaluate（java.util.list）\r\n","\r\n            Supplies information about a focus event that is being raised.\r\n            ":"\r\n            提供有关正在提出的焦点事件的信息。\r\n            \r\n","arriveAndDeregister":"Arriveandderegister\r\n","if an error occurs reading the MANIFEST file.":"如果发生错误，请阅读清单文件。\r\n","org.xml.sax.helpers.XMLReaderAdapter.setErrorHandler(org.xml.sax.ErrorHandler)":"org.xml.sax.helpers.xmlreaderadapter.seterrorhandler（org.xml.sax.errorhandler）\r\n","javax.security.auth.x500.X500Principal.getName(java.lang.String, java.util.Map)":"javax.security.auth.x500.x500 principal.getName（java.lang.string，java.util.map）\r\n"," recognizes the feature name but\n            cannot set the requested value.":" 识别功能名称，但\r\n            无法设置请求的值。\r\n","If index or size is negative, or greater than the allowed value.":"如果索引或大小为负或大于允许的值。\r\n","org.apache.http.params.HttpParams":"org.apache.http.params.httpparams\r\n","org.json.JSONArray.optJSONArray(int)":"org.json.jsonarray.optjsonarray（int）\r\n"," occurs.\n":" 发生。\r\n\r\n","Obtains a request interceptor from this list.":"从此列表中获取请求拦截器。\r\n","javax.crypto.Mac.reset()":"javax.crypto.mac.reset（）\r\n","java.util.function.LongPredicate.or(java.util.function.LongPredicate)":"java.util.function.longpredicate.or（java.util.function.longpredicate）\r\n","java.util.prefs.AbstractPreferences.putDouble(java.lang.String, double)":"java.util.prefs.abstractpreferences.putdouble（java.lang.string，double）\r\n","Returns the system root preference node.":"返回系统根本偏好节点。\r\n",", or if\n     that value is the ":"， 或者如果\r\n     该值是\r\n","org.xml.sax.ext.Locator2Impl.setEncoding(java.lang.String)":"org.xml.sax.ext.locator2impl.setencoding（java.lang.string）\r\n","LATEST":"最新的\r\n","org.w3c.dom.ls.LSParser.parseURI(java.lang.String)":"org.w3c.dom.ls.lsparser.parseuri（java.lang.string）\r\n","org.xml.sax.helpers.XMLFilterImpl.warning(org.xml.sax.SAXParseException)":"org.xml.sax.helpers.xmlfilterimpl.warning（org.xml.sax.sax.saxparseexception）\r\n","javax.crypto.Cipher.update(java.nio.ByteBuffer, java.nio.ByteBuffer)":"javax.crypto.cipher.update（java.nio.bytebuffer，java.nio.bytebuffer）\r\n","\r\n            and must accept a parameter with the name 'Body'.\r\n            ":"\r\n            并且必须接受名称为“正文”的参数。\r\n            \r\n","\r\n            Creates a new instance of the events instance.\r\n            ":"\r\n            创建事件实例的新实例。\r\n            \r\n","CRC-32 for uncompressed data.":"CRC-32用于未压缩数据。\r\n","\r\n            The options for creating the outgoing cookie.\r\n            May be replace or altered during the SigningOut call.\r\n            ":"\r\n            创建传出cookie的选项。\r\n            可以在签名电话期间更换或更改。\r\n            \r\n","org.w3c.dom.Node.NOTATION_NODE":"org.w3c.dom.node.notation_node\r\n","org.xml.sax.helpers.ParserAdapter.getEntityResolver()":"org.xml.sax.helpers.parseradapter.getentityResolver（）\r\n","java.util.function.UnaryOperator":"java.util.function.unaryoperator\r\n","Constructs an instance of ":"构建一个实例\r\n","java.util.concurrent.locks.Condition.signal()":"java.util.concurrent.locks.condition.signal（）\r\n","Returns textual designation of the given authentication scheme.":"返回给定身份验证方案的文本名称。\r\n","Returns the Checksum for this output stream.":"返回此输出流的校验和。\r\n","Creates a new MalformedCookieException with a ":"用\r\n","if the abort operation \n   is not supported / cannot be implemented.\n":"如果流产的操作\r\n   不支持 /无法实施。\r\n\r\n","LogRecord":"logrecord\r\n","Determines the ending position of the current token.":"确定当前令牌的结束位置。\r\n","java.util.concurrent.atomic.AtomicReferenceArray.AtomicReferenceArray(int)":"java.util.concurrent.atomic.atomicreferencearray.atomicreferencearray（int）\r\n","Get the parent reader.":"找父母读者。\r\n"," with\n            default (nonfair) ordering properties.":" 和\r\n            默认（nonfair）排序属性。\r\n","org.xmlpull.v1.XmlPullParserFactory":"org.xmlpull.v1.xmlpullparserfactory\r\n","org.xmlpull.v1.XmlPullParser.getTextCharacters(int[])":"org.xmlpull.v1.xmlpullparser.getTextcharacters（int []）\r\n","TypeInfo":"TypeInfo\r\n","javax.xml.parsers.DocumentBuilder.parse(java.io.InputStream)":"javax.xml.parsers.documentbuilder.parse（java.io.inputstream）\r\n","org.w3c.dom.ls.LSParser.ACTION_INSERT_BEFORE":"org.w3c.dom.ls.lsparser.action_insert_before\r\n","Create a new <code>DatatypeConfigurationException</code> with\n            no specified detail message and cause.":"使用新的<code> DatatyPeconFigurationException </code>使用\r\n            没有指定的详细信息和原因。\r\n","\r\n            Get the next segment with available data, if any.\r\n            ":"\r\n            获取下一个细分市场，并提供可用数据（如果有）。\r\n            \r\n","504 Gateway Timeout":"504网关超时\r\n","Parse an XML fragment from a resource identified by a\n            <code>LSInput</code> and insert the content into an existing document\n            at the position specified with the <code>context</code> and\n            <code>action</code> arguments.":"解析来自A的资源的XML片段\r\n            <code> lsinput </code>并将内容插入现有文档中\r\n            在用<code>上下文指定的位置</code>和\r\n            <code>操作</code>参数。\r\n","java.util.concurrent.TimeUnit.toHours(long)":"java.util.concurrent.timeunit.tohours（long）\r\n","javax.security.cert.Certificate.getEncoded()":"javax.security.cert.certificate.getencoded（）\r\n","javax.net.ssl.SSLSocket.SSLSocket(java.net.InetAddress, int)":"javax.net.ssl.sslsocket.sslsocket（java.net.inetaddress，int）\r\n","javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendar()":"javax.xml.datatype.datatypefactory.newxmlgregoriancalendar（）\r\n"," or timed\n ":" 或定时\r\n \r\n"," or\n timed ":" 或者\r\n 定时\r\n","This constant specifies that the '.' meta character matches arbitrary\n characters, including line endings, which is normally not the case.\n Corresponds to ":"这个常数指定“。”。元角色匹配任意\r\n 字符，包括线结尾，通常不是这种情况。\r\n 对应于\r\n","\r\n            Context object passed to the CookieAuthenticationEvents ValidatePrincipal method.\r\n            ":"\r\n            上下文对象传递给cookieAthenticationEvents vericationprincipal方法。\r\n            \r\n","org.w3c.dom.ls.LSException":"org.w3c.dom.ls.lsexception\r\n","if the name length is outside the range (> 0xFFFF).\n":"如果名称长度不在范围内（> 0xffff）。\r\n\r\n","\r\n            The unread portion of the ":"\r\n            未读的部分\r\n","Preferences":"喜好\r\n","javax.xml.transform.Templates":"javax.xml.transform.templates\r\n","A factory object that generates Preferences objects.":"生成首选项对象的工厂对象。\r\n"," with a prompt\n            and a boolean specifying whether the password should be displayed\n            as it is being typed.":" 提示\r\n            并指定是否应显示密码的布尔值\r\n            在键入时。\r\n","\r\n            Encapsulates the result of ":"\r\n            封装\r\n","Creates a DESedeKeySpec object using the first 24 bytes in\n            <code>key</code>, beginning at <code>offset</code> inclusive,\n            as the key material for the DES-EDE key.":"使用前24个字节在\r\n            <code>键</code>，从<code> offset </code>包含在内，\r\n            作为DES-EDE键的关键材料。\r\n","java.util.concurrent.ThreadFactory.newThread(java.lang.Runnable)":"java.util.concurrent.threadfactory.newthread（java.lang.runnable）\r\n","SchemaFactory":"schemafactory\r\n","org.xml.sax.Parser.setDTDHandler(org.xml.sax.DTDHandler)":"org.xml.sax.parser.setdtdhandler（org.xml.sax.dtdhandler）\r\n","java.util.concurrent.locks.Lock.newCondition()":"java.util.concurrent.locks.lock.newcondition（）\r\n","Constructs a CipherInputStream from an InputStream and a\n            Cipher.":"从一个输入流构建一个Cipherinputstream和一个\r\n            密码。\r\n","Construct a StreamResult from a URL.":"从URL构建流媒体。\r\n","\r\n            Extension methods to add authorization capabilities to an HTTP application pipeline.\r\n            ":"\r\n            扩展方法将授权功能添加到HTTP应用程序管道中。\r\n            \r\n","Returns the names of the cipher suites which could be enabled for use\n            on this engine.":"返回可以启用的密码套件的名称\r\n            在这个引擎上。\r\n","The interface to a Diffie-Hellman private key.":"Diffie-Hellman私钥的接口。\r\n","\r\n            Reads an extension format header and data, based on one of these codes:\r\n            ":"\r\n            根据以下代码之一读取扩展格式标题和数据：\r\n            \r\n","s constructed from my value.":"s从我的价值中构成。\r\n","java.util.logging.ErrorManager.GENERIC_FAILURE":"java.util.logging.errormanager.generic_failure\r\n","java.util.prefs.Preferences.absolutePath()":"java.util.prefs.preferences.absolutepath（）\r\n","org.json.JSONArray.JSONArray(java.util.Collection)":"org.json.jsonarray.jsonarray（java.util.collection）\r\n","java.util.zip.ZipError":"java.util.zip.ziperror\r\n","If an error occurs.\n":"如果发生错误。\r\n\r\n","java.util.zip.DataFormatException":"java.util.zip.dataformatexception\r\n","Returns the pattern that is interpreted by this matcher.":"返回该匹配器解释的模式。\r\n"," of private credentials held by this\n            ":" 由此持有的私人证书\r\n            \r\n","\r\n            Supplies a ":"\r\n            提供\r\n","\r\n            Provides methods for building a collection of ":"\r\n            提供建立集合的方法\r\n","org.json.JSONArray.put(int, int)":"org.json.jsonarray.put（int，int）\r\n","An adaptor for accessing HTTP client parameters in ":"用于访问HTTP客户端参数的适配器\r\n","org.xml.sax.ContentHandler.characters(char[], int, int)":"org.xml.sax.contenthandler.Characters（char []，int，int）\r\n","javax.security.auth.callback.PasswordCallback":"javax.security.auth.callback.passwordcallback\r\n","javax.net.SocketFactory.createSocket(java.lang.String, int)":"javax.net.socketfactory.createsocket（java.lang.string，int）\r\n","java.util.concurrent.locks.LockSupport.park(java.lang.Object)":"java.util.concurrent.locks.locksupport.park（java.lang.object）\r\n","Get a new <code>XPathFactory</code> instance using the default object model,\n            ":"使用默认对象模型获取新的<code> xpathFactory </code>实例\r\n            \r\n","Set a feature flag for the parser.":"为解析器设置功能标志。\r\n","The String indicating if the unpacker should ignore all transmitted\n values,can be replaced by either ":"字符串指示拆卸器是否应忽略所有传输\r\n 值，可以用任何一个代替\r\n","\r\n            A comma delimited list of roles that are allowed to display the content.\r\n            ":"\r\n            允许显示内容的逗号界限列表。\r\n            \r\n","Look up an attribute's XML qualified (prefixed) name by index.":"通过索引查找属性的XML合格（前缀）名称。\r\n","javax.xml.namespace.QName.QName(java.lang.String)":"javax.xml.namespace.qname.qname（java.lang.string）\r\n"," for this preference node.":" 对于此偏好节点。\r\n","Socket factory that implements a simple multi-home fail-over on connect failure, \n provided the same hostname resolves to multiple ":"插座工厂在连接故障上实现简单的多家庭故障，\r\n 提供了相同的主机名解决多个\r\n","javax.xml.validation.SchemaFactory.setFeature(java.lang.String, boolean)":"javax.xml.validation.schemafactory.setfeature（java.lang.string，boolean）\r\n","Maintains a map of objects keyed by a request URI pattern.":"维护由请求URI模式键入的对象的地图。\r\n","Constant for key wrapping operation mode.":"键包装操作模式的常数。\r\n","\r\n            The position at the end of the ":"\r\n            在末尾的位置\r\n","\r\n            Gets the cookie token.\r\n            ":"\r\n            获取cookie令牌。\r\n            \r\n"," for layered sockets (SSL/TLS).":" 用于分层插座（SSL/TLS）。\r\n","\r\n            Gets the object that owns the editable field.\r\n            ":"\r\n            获取拥有可编辑字段的对象。\r\n            \r\n","org.xmlpull.v1.sax2.Driver.startElement(java.lang.String, java.lang.String, java.lang.String)":"org.xmlpull.v1.sax2.driver.startelement（java.lang.string，java.lang.string，java.lang.string）\r\n","protocols[0]":"协议[0]\r\n","java.util.logging.Logger.severe(java.lang.String)":"java.util.logging.logger.severe（java.lang.string）\r\n","Defines the API to obtain DOM Document instances from an XML\n            document.":"定义API从XML获取DOM文档实例\r\n            文档。\r\n","java.util.function.BiConsumer":"java.util.function.biconsumer\r\n","Sends HTTP requests and receives the responses.":"发送HTTP请求并收到答复。\r\n"," describing the result of the ":" 描述了\r\n","\r\n            Creates a default instance of ":"\r\n            创建一个默认实例\r\n","org.w3c.dom.Node.normalize()":"org.w3c.dom.node.normalize（）\r\n","FLUSH_FAILURE is used when a flush to an output stream fails.":"当冲洗到输出流失败时，使用flush_failure。\r\n","java.util.concurrent.atomic.AtomicIntegerFieldUpdater.updateAndGet(java.lang.Object, java.util.function.IntUnaryOperator)":"java.util.concurrent.atomic.atomicintegerfieldupdater.updateandget（java.lang.object，java.util.function.intunaryoperator）\r\n","The interface defining the API for converting a JAR file to an output\n stream in the Pack200 format.":"定义用于将JAR文件转换为输出的API的接口\r\n 以Pack200格式流式传输。\r\n","org.w3c.dom.ls.LSInput":"org.w3c.dom.ls.lsinput\r\n","java.util.function.DoubleFunction":"java.util.function.doublefunction\r\n","java.util.concurrent.CompletionStage.thenApplyAsync(java.util.function.Function)":"java.util.concurrent.completionstage.thenapplyasync（java.util.function.function.function）\r\n","Constructs SSLParameters from the specified array of ciphersuites\n            and protocols.":"从指定的密码阵列构造SSLPARAMETER\r\n            和协议。\r\n","Basic interface for resolving entities.":"解决实体的基本接口。\r\n","java.util.concurrent.atomic.AtomicLongArray.getAndAccumulate(int, long, java.util.function.LongBinaryOperator)":"java.util.concurrent.atomic.atomiclongarray.getanccumulate（int，long，java.util.function.longbinaryoperator）\r\n","javax.xml.validation.Validator.validate(javax.xml.transform.Source, javax.xml.transform.Result)":"javax.xml.validation.validator.validate（javax.xml.transform.source，javax.xml.transform.result）\r\n","Retrieves the error index.":"检索错误索引。\r\n","org.xml.sax.helpers.LocatorImpl.getColumnNumber()":"org.xml.sax.helpers.locatorimpl.getColumnnumber（）\r\n","Log an INFO message.":"记录信息消息。\r\n","Enables case-insensitive matching.":"启用对案例不敏感的匹配。\r\n","org.xml.sax.ext.LexicalHandler.comment(char[], int, int)":"org.xml.sax.ext.lexicalhandler.com（char []，int，int）\r\n","2\n             * (wordSize / 8)":"2\r\n             *（单词大小 / 8）\r\n","Get Namespace URI bound to a prefix in the current scope.":"获取命名空间URI绑定到当前范围中的前缀。\r\n","java.util.logging.Handler.getFilter()":"java.util.logging.handler.getFilter（）\r\n","Store a ":"存储\r\n","javax.xml.parsers.DocumentBuilderFactory.setIgnoringElementContentWhitespace(boolean)":"javax.xml.parsers.documentBuilderFactory.SetignoringElementContentWhitespace（boolean）\r\n","javax.xml.datatype.XMLGregorianCalendar.getTimeZone(int)":"javax.xml.datatype.xmlgregoriancalendar.gettimezone（int）\r\n","javax.security.auth.Subject.getPrincipals()":"javax.security.auth.subject.getPrincipals（）\r\n","javax.crypto.EncryptedPrivateKeyInfo.getKeySpec(java.security.Key, java.security.Provider)":"javax.crypto.cencryptedprivatekeyinfo.getkeyspec（java.security.key，java.security.provider）\r\n","java.util.concurrent.ThreadLocalRandom.nextDouble(double, double)":"java.util.concurrent.threadlocalrandom.nextdouble（double，double）\r\n","Parses a request line.":"解析请求行。\r\n","Represents an operation that accepts an object-valued and a\n            ":"代表接受对象价值的操作和\r\n            \r\n","If the embedded driver\n            cannot be instantiated or if the\n            org.xml.sax.driver property is not specified.\n":"如果嵌入式驱动程序\r\n            不能实例化或\r\n            未指定org.xml.sax.driver属性。\r\n\r\n"," recognizes the property name but\n            cannot set the requested value.":" 识别属性名称，但\r\n            无法设置请求的值。\r\n","The NTLM scheme is a proprietary Microsoft Windows Authentication \n protocol (considered to be the most secure among currently supported \n authentication schemes).":"NTLM方案是专有的Microsoft Windows身份验证\r\n 协议（被认为是当前支持的最安全的协议\r\n 身份验证方案）。\r\n","Returns the number of rounds.":"返回回合数。\r\n","java.util.regex.PatternSyntaxException.getIndex()":"java.util.regex.patternsyntaxexception.getIndex（）\r\n","getInt":"getint\r\n","Constructs SSLParameters.":"构建SSLPARAMETER。\r\n","javax.xml.transform.dom.DOMSource.setNode(org.w3c.dom.Node)":"javax.xml.transform.dom.domsource.setNode（org.w3c.dom.node）\r\n","java.util.zip.ZipInputStream":"java.util.zip.zipinputstream\r\n","org.xml.sax.ext.LexicalHandler":"org.xml.sax.ext.lexicalHandler\r\n","Objects#equals(Object, Object)":"对象＃equals（对象，对象）\r\n","javax.xml.transform.OutputKeys.INDENT":"javax.xml.transform.outputkeys.indent\r\n","javax.sql.RowSet.setNString(java.lang.String, java.lang.String)":"javax.sql.Rowset.setnstring（java.lang.string，java.lang.string）\r\n","java.util.concurrent.locks.ReentrantLock.lockInterruptibly()":"java.util.concurrent.locks.reentrantlock.lockruptible（）\r\n","javax.net.ssl.SSLServerSocket.getSupportedProtocols()":"javax.net.ssl.sslserversocket.getSupportedProtocols（）\r\n","\r\n            AuthenticationSchemes assign a name to a specific ":"\r\n            AuthenticationsChemes将名称分配给特定\r\n"," if it exists and is a long or\n            can be coerced to a long.":" 如果存在并且很长或\r\n            可以胁迫长时间。\r\n","\r\n            Checks if a user meets a specific set of requirements for the specified resource.\r\n            ":"\r\n            检查用户是否满足指定资源的一组特定要求。\r\n            \r\n","Provide an optional convenience implementation of Locator.":"提供定位器的可选便利实现。\r\n","org.xmlpull.v1.XmlPullParser.nextText()":"org.xmlpull.v1.xmlpullparser.nexttext（）\r\n","Fully qualified name for W3C XML Schema 1.":"W3C XML模式的完全合格名称1。\r\n","Fully qualified name for W3C XML Schema datatype <code>duration</code>.":"W3C XML模式数据类型<code>持续时间</code>的完全限定名称。\r\n","Defines the virtual host name.":"定义虚拟主机名。\r\n","java.util.concurrent.atomic.DoubleAdder.reset()":"java.util.concurrent.atomic.doubleadder.reset（）\r\n","\r\n            Appends a frame representing an instruction to stop the specified event from\r\n            propagating beyond the current element.\r\n            ":"\r\n            附加框架表示指令，以停止从\r\n            超越当前元素的传播。\r\n            \r\n",", one for read-only operations and one for writing.":"，一个用于仅阅读操作，一个用于写作。\r\n","org.w3c.dom.Document.getElementsByTagName(java.lang.String)":"org.w3c.dom.document.getElementsbytagname（java.lang.string）\r\n","java.util.logging.XMLFormatter":"java.util.logging.xmlformatter\r\n"," or\n   ":" 或者\r\n   \r\n","The node is a <code>ProcessingInstruction</code>.":"节点是<code> processinginstruction </code>。\r\n","Returns the <code>Certificate</code> objects for this entry, or\n            <code>null</code> if none.":"返回<code>证书</code>本条目的对象，或\r\n            <code> null </code>如果无。\r\n"," to the given value.":" 给定值。\r\n","java.util.concurrent.LinkedBlockingDeque.LinkedBlockingDeque(java.util.Collection)":"java.util.concurrent.linkedblockingdeque.linkedblockingdeque（java.util.collection）\r\n","org.w3c.dom.DOMImplementationSource.getDOMImplementationList(java.lang.String)":"org.w3c.dom.domimplementionsource.getDomimplementationlist（java.lang.string）\r\n"," and sets the resulting\r\n            ":" 并设置结果\r\n            \r\n","Log a message, specifying source class and method,\n            with associated Throwable information.":"记录一条消息，指定源类和方法，\r\n            使用相关的可投掷信息。\r\n","java.util.jar.Attributes.remove(java.lang.Object)":"java.util.jar.attributes.remove（java.lang.Object）\r\n","Returns the timeout in milliseconds used when retrieving a\n ":"返回以毫秒为单位的超时\r\n \r\n","\r\n            Initializes a new ":"\r\n            初始化新的\r\n","ThreadPoolExecutor":"ThreadPoolExecutor\r\n","javax.sql.RowSet.setDate(java.lang.String, java.sql.Date, java.util.Calendar)":"javax.sql.Rowset.setDate（java.lang.string，java.sql.date，java.util.calendar）\r\n",". In addition, the method is invoked each time a connection is re-established\r\n            with a client after it's been dropped. ":"。此外，每次重新建立连接时都会调用该方法\r\n            在客户被丢弃后与客户一起。\r\n","java.util.concurrent.atomic.AtomicReferenceFieldUpdater.getAndSet(java.lang.Object, java.lang.Object)":"java.util.concurrent.atomic.atomicreference fieldupdater.getandset（java.lang.Object，java.lang.Object）\r\n","Creates a new lock, initially in unlocked state.":"创建一个新的锁，最初处于解锁状态。\r\n","Replace the context node with the result of the parse operation.":"用解析操作的结果替换上下文节点。\r\n","if any of the map's keys are null.\n":"如果任何地图的键为空键。\r\n\r\n","Filter a new document locator event.":"过滤新的文档定位器事件。\r\n","Output buffer for writing uncompressed data.":"用于编写未压缩数据的输出缓冲区。\r\n","Returns a copy of the value of the parameter ":"返回参数值的副本\r\n","java.util.concurrent.atomic.AtomicReferenceArray.accumulateAndGet(int, java.lang.Object, java.util.function.BinaryOperator)":"java.util.concurrent.atomic.atomicreferencearray.accumulateandget（int，java.lang.object，java.util.function.binaryoperator）\r\n","Add an attribute to the end of the list.":"将属性添加到列表的末尾。\r\n","javax.net.ssl.SSLServerSocket.setEnabledCipherSuites(java.lang.String[])":"javax.net.ssl.sslserversocket.setEnabledCiphersuites（java.lang.string []）\r\n","The severity of the error, either ":"错误的严重性\r\n","java.util.logging.Logger.logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable)":"java.util.logging.logger.logp（java.util.logging.level，java.lang.string，java.lang.string，java.lang.string，java.lang.lang.throwable）\r\n","\r\n            Indicates that stage of authentication was directly handled by\r\n            user intervention and no further processing should be attempted.\r\n            ":"\r\n            表明身份验证的阶段是直接处理的\r\n            用户干预，不应尝试进一步处理。\r\n            \r\n","java.util.concurrent.Semaphore.tryAcquire(int, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.semaphore.tryacquire（int，long，java.util.concurrent.timeunit）\r\n","if an error occurs while reading the entry.\n":"如果在阅读条目时发生错误。\r\n\r\n","Wakes up all waiting threads.":"唤醒所有等待线程。\r\n","Extract the enclosed PKCS8EncodedKeySpec object from the\n            encrypted data and return it.":"从该封闭的pkcs8encodedkeyspec对象中提取\r\n            加密数据并将其返回。\r\n","Indicates whether or not the factory is configured to produce\n            parsers which ignore ignorable whitespace in element content. -or- Specifies that the parsers created by this  factory must eliminate\n            whitespace in element content (sometimes known loosely as\n            'ignorable whitespace') when parsing XML documents (see XML Rec\n            2.":"指示工厂是否配置为生产\r\n            忽略元素内容中可忽略的空格的解析器。 - 或 - 指定该工厂创建的解析器必须消除\r\n            元素内容中的空格（有时被称为\r\n            解析XML文档时（请参阅XML Rec\r\n            2。\r\n","In SSL, sessions are used to describe an ongoing relationship between\n            two entities.":"在SSL中，使用会议来描述\r\n            两个实体。\r\n","s for an authorization request.\r\n            ":"s用于授权请求。\r\n            \r\n","if a zip error occurs.":"如果发生邮政编码错误。\r\n","SSLContextSpi":"SSLContextSpi\r\n","javax.xml.datatype.DatatypeConstants.MAX_TIMEZONE_OFFSET":"javax.xml.datatype.datatypeconstants.max_timezone_offset\r\n"," in a human readable\n            format.":" 在人类可读\r\n            格式。\r\n","If any IO error occurs interacting with the\n   ":"如果发生任何IO错误，则与\r\n   \r\n","Returns the request line of this request.":"返回此请求的请求行。\r\n","\r\n            Reads a string assuming that it is spread across multiple spans in the ":"\r\n            读取一个字符串，假设它散布在多个跨度中\r\n","Clears all credentials.":"清除所有凭据。\r\n","Receive notification of the start of a Namespace mapping.":"接收命名空间映射开始的通知。\r\n","This constant specifies that a character in a ":"这个常数指定一个字符\r\n","\r\n            The default implementation of ":"\r\n            默认实现的\r\n","java.util.concurrent.LinkedTransferQueue.tryTransfer(java.lang.Object)":"java.util.concurrent.linkedtransferqueue.trytransfer（java.lang.object）\r\n","if the application\n chooses to discontinue the transformation.":"如果应用程序\r\n 选择中断转换。\r\n","javax.net.ssl.SSLSocket.setHandshakeApplicationProtocolSelector(java.util.function.BiFunction)":"javax.net.ssl.sslsocket.sethandshakeapplicationprotocococococolector（java.util.function.bifunction）\r\n","Creates a new managed entity that can release a connection.":"创建一个可以发布连接的新托管实体。\r\n","javax.xml.datatype.DatatypeFactory.newInstance()":"javax.xml.datatype.datatypefactory.newinstance（）\r\n","javax.crypto.KeyGenerator.getProvider()":"javax.crypto.keygenerator.getProvider（）\r\n","Constructs a CipherInputStream from an InputStream without\n            specifying a Cipher.":"从没有输入的情况下构建一个无需\r\n            指定密码。\r\n","A version of the protocol to parse.":"解析协议的版本。\r\n","\r\n            Gets or sets the computed CSS class based on whether or not the link is active.\r\n            ":"\r\n            根据链接是否有效，获取或设置计算的CSS类。\r\n            \r\n","Get the character stream for this input source. -or- Set the character stream for this input source.":"获取此输入源的字符流。 - 或 - 设置此输入源的字符流。\r\n"," using the parameter \"\" if they wish to get details on the error.\n":" 如果他们希望获取错误的详细信息，请使用参数“”。\r\n\r\n","java.util.function.Consumer.accept(java.lang.Object)":"java.util.function.consumer.accept（java.lang.Object）\r\n","Returns the current sum.":"返回当前总和。\r\n","if the initialization vector is null or shorter than 8 bytes.\n":"如果初始化矢量为空或短于8个字节。\r\n\r\n","HTTP connection control ":"HTTP连接控制\r\n","Creates a new MethodNotSupportedException with the specified detail message and cause.":"使用指定的详细信息和原因创建一个新的MethodNotsupportedException。\r\n","Tests whether two nodes are equal.":"测试两个节点是否相等。\r\n","If an IO error occurs interacting with the\n   ":"如果发生IO错误与\r\n   \r\n","\r\n            The default value used for CookieAuthenticationOptions.AuthenticationScheme\r\n            ":"\r\n            用于cookiuthenticationoptions.authenticationscheme的默认值\r\n            \r\n","if the key data or the algorithm name is null or if the key\n             data is empty.\n":"如果密钥数据或算法名称为null或键\r\n             数据为空。\r\n\r\n","Returns whether client authentication should be required. -or- Sets whether client authentication should be required.":"返回是否需要客户身份验证。 - 或设置是否需要客户身份验证。\r\n","java.util.stream.BaseStream.unordered()":"java.util.stream.basestream.unordered（）\r\n"," implementing a cascaded \"group by\"\n            operation on input elements of type ":" 实施级联的“小组”\r\n            在类型的输入元素上操作\r\n","Retrieves and removes the Future representing the next\n            completed task, waiting if necessary up to the specified wait\n            time if none are yet present.":"检索并删除代表下一个的未来\r\n            完成任务，如有必要，请等待指定等待\r\n            如果没有的话，时间。\r\n","java.util.zip.Deflater.setLevel(int)":"java.util.zip.deflater.setlevel（int）\r\n","Clear the retrieved password.":"清除检索到的密码。\r\n","Unconditionally sets to the given value.":"无条件设置为给定值。\r\n","Constructs a DataFormatException with no detail message.":"构建数据FormateXception，没有详细信息。\r\n","org.xmlpull.v1.XmlPullParserFactory.getFeature(java.lang.String)":"org.xmlpull.v1.xmlpullparserfactory.getFeature（java.lang.string）\r\n","if the current thread does not\n hold this lock.\n":"如果当前线程不\r\n 握住这个锁。\r\n\r\n","String#trim trimmed":"字符串＃修剪\r\n","Create an asynchronous <code>LSParser</code>.":"创建一个异步<code> lsparser </code>。\r\n","If the type of an object is incompatible with the expected type of the\n            parameter associated to the object.":"如果对象的类型与预期类型不兼容\r\n            与对象关联的参数。\r\n","java.util.logging.LogManager.LOGGING_MXBEAN_NAME":"java.util.logging.logmanager.logging_mxbean_name\r\n","java.util.concurrent.LinkedTransferQueue.spliterator()":"java.util.concurrent.linkedtransferqueue.spliterator（）\r\n","javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendar(int, int, int, int, int, int, int, int)":"javax.xml.datatype.datatypefactory.newxmlgregoriancalendar（int，int，int，int，int，int，int，int，int，int，int，int）\r\n","java.util.concurrent.atomic.AtomicIntegerArray.weakCompareAndSet(int, int, int)":"java.util.concurrent.atomic.atomicintegerarray.weakcompareandset（int，int，int）\r\n","\r\n            Each time ":"\r\n            每一次\r\n","Constructs a AEADBadTagException with the specified\n            detail message.":"用指定的\r\n            详细信息。\r\n","\r\n            Gets an optional format to use when converting values.\r\n            ":"\r\n            转换值时获取可选格式。\r\n            \r\n","java.util.concurrent.CompletionStage.thenAcceptAsync(java.util.function.Consumer)":"java.util.concurrent.completionstage.thenacceptasync（java.util.function.consumer）\r\n","org.w3c.dom.DOMException.INUSE_ATTRIBUTE_ERR":"org.w3c.dom.domexception.inuse_attribute_err\r\n","javax.xml.xpath.XPathFactoryConfigurationException":"javax.xml.xpath.xpathFactoryConfigurationException\r\n","Evaluate the compiled XPath expression in the context of the specified <code>InputSource</code> and return the result as the\n            specified type.":"在指定的<code> inputsource </code>的上下文中评估编译的XPath表达式，然后返回结果\r\n            指定类型。\r\n","javax.crypto.BadPaddingException.BadPaddingException()":"javax.crypto.badpaddingexception.badpaddingexception（）\r\n","javax.security.cert.Certificate.verify(java.security.PublicKey)":"javax.security.cert.certificate.verify（java.security.publickey）\r\n","org.w3c.dom.Element.getAttributeNS(java.lang.String, java.lang.String)":"org.w3c.dom.element.getAttributens（java.lang.string，java.lang.string）\r\n","org.apache.http.conn.scheme.LayeredSocketFactory.createSocket(java.net.Socket, java.lang.String, int, boolean)":"org.apache.http.conn.scheme.scheme.layeredsocketfactory.createsocket（java.net.socket，java.lang.string，int，int，boolean）\r\n","java.util.concurrent.atomic.AtomicInteger.addAndGet(int)":"java.util.concurrent.atomic.atomicinteger.addandget（int）\r\n","java.util.function.IntFunction":"java.util.function.intfunction\r\n","java.util.concurrent.Phaser.awaitAdvanceInterruptibly(int, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.phaser.awaitadvance中断（int，long，java.util.concurrent.timeunit）\r\n","org.w3c.dom.ls.LSResourceResolver":"org.w3c.dom.ls.lsresourceresolver\r\n","javax.net.ssl.HttpsURLConnection.setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)":"javax.net.ssl.httpsurlconnection.setdefaulthostnameverifier（javax.net.ssl.hostnameverifier）\r\n","Constructs a <code>ConnectionEvent</code> object initialized with\n            the given <code>PooledConnection</code> object and\n            <code>SQLException</code> object.":"构造A <code> ConnectionEvent </code>初始化的对象\r\n            给定的<code> poolconnection </code>对象和\r\n            <code> SQLEXCEPTION </code>对象。\r\n"," interface represents a type referenced from\n ":" 界面表示从\r\n \r\n","Get an output property that is in effect for the\n            transformer.":"获取有效的输出属性\r\n            变压器。\r\n","javax.xml.transform.TransformerFactoryConfigurationError.TransformerFactoryConfigurationError(java.lang.String)":"javax.xml.transform.transformerfactoryconfigurationerror.transformerfactoryconfigurationerror（java.lang.string）\r\n","java.util.concurrent.atomic.AtomicLong.decrementAndGet()":"java.util.concurrent.atomic.atomiclong.decrementandget（）\r\n","Returns the number of capturing groups in this match result's pattern.":"返回此匹配结果模式中捕获组的数量。\r\n"," do not specify a valid chunk in the input buffer.\n":" 请勿在输入缓冲区中指定有效的块。\r\n\r\n","Sets the type of this <code>RowSet</code> object to the given type.":"将此<code> Rowset的类型设置为给定类型。\r\n","java.util.concurrent.atomic.LongAccumulator":"java.util.concurrent.atomic.longaccumulator\r\n","W3C XML Schema Namespace URI.":"W3C XML模式名称空间URI。\r\n","The node is a <code>Document</code>.":"节点是<code>文档</code>。\r\n","Construct an empty XML filter, with no parent.":"构建一个没有父母的空XML过滤器。\r\n",", which specifies\r\n            how long the browser will keep the cookie.\r\n            ":"，指定\r\n            浏览器将保留多长时间。\r\n            \r\n","java.util.logging.Logger.logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable)":"java.util.logging.logger.logrb（java.util.logging.level，java.lang.string，java.lang.string，java.lang.string，java.lang.lang.lang.string，java.lang.lang.throwable）\r\n","\r\n            Adds authorization services to the specified ":"\r\n            将授权服务添加到指定的\r\n","getBoolean":"GetBoolean\r\n","If the implementation does not support the requested type of object or\n            operation.":"如果实现不支持所请求的对象类型或\r\n            手术。\r\n","org.xml.sax.SAXNotRecognizedException.SAXNotRecognizedException(java.lang.String)":"org.xml.sax.saxnotrecognizedException.SaxNotRecognizedException（java.lang.string）\r\n","java.util.zip.ZipEntry.setComment(java.lang.String)":"java.util.zip.zipentry.setcomment（java.lang.string）\r\n","Initializes this cipher instance with the specified key, algorithm\n parameters and a source of randomness.":"用指定键，算法初始化此密码实例\r\n 参数和随机性来源。\r\n"," in an internal buffer.":" 在内部缓冲区中。\r\n","Set feature identified by name (recommended to be URI for uniqueness).":"按名称标识的设置功能（建议为URI唯一）。\r\n","java.util.concurrent.LinkedTransferQueue.remainingCapacity()":"java.util.concurrent.linkedtransferqueue.remainingcapacity（）\r\n","if the padding of the data does not match the padding scheme.\n":"如果数据的填充不匹配填充方案。\r\n\r\n","\r\n            Gets the value of the parameter with the specified name, or a specified default value\r\n            if no such parameter exists in the collection.\r\n            ":"\r\n            使用指定名称或指定的默认值获取参数的值\r\n            如果集合中没有此类参数。\r\n            \r\n","javax.xml.transform.TransformerFactory.newInstance()":"javax.xml.transform.transformerfactory.newinstance（）\r\n","HTTP protocol version 1.":"HTTP协议版本1。\r\n","javax.crypto.spec.IvParameterSpec.IvParameterSpec(byte[])":"javax.crypto.spec.ivparameterspec.ivparameterspec（byte []）\r\n","Sets the field of the given object managed by this updater to the\n            given updated value.":"将此更新器管理的给定对象的字段设置为\r\n            给定的更新值。\r\n","Minimalistic server-side implementation of an HTTP processor.":"HTTP处理器的简约服务器端实现。\r\n","Default compression strategy.":"默认压缩策略。\r\n","\r\n            Writes an 8-bit value using a 1-byte code when possible, otherwise as ":"\r\n            在可能的情况下使用1字节代码写入8位值，否则\r\n"," (as opposed to ":" （而不是\r\n","Returns the string up to but not including ":"将字符串返回到，但不包括\r\n","Returns the input subsequence captured by the given group during the\n            previous match operation.":"返回给定组捕获的输入子序列\r\n            先前的比赛操作。\r\n","Returns a clone if the provider implementation is cloneable.":"如果提供商实施是可克隆的，则返回克隆。\r\n","if the given key is ":"如果给定的键是\r\n","Decompressor for this stream.":"该流的解压缩器。\r\n","javax.xml.transform.stream.StreamSource.StreamSource(java.lang.String)":"javax.xml.transform.stream.streamsource.streamsource（java.lang.string）\r\n","This constant represents the default namespace (empty string \"\")":"此常数表示默认名称空间（空字符串“”）\r\n"," has a prefix that is \"xml\" and the\n   ":" 具有“ XML”的前缀和\r\n   \r\n","\r\n            Formats the value as a string. Derived classes can override this to determine the formating used for ":"\r\n            格式为字符串。派生的类可以覆盖这一点，以确定用于\r\n","Sets the version of the cookie specification to which this\n cookie conforms.":"设置cookie规范的版本\r\n 饼干符合。\r\n","\r\n            Set a string value in the ":"\r\n            在\r\n"," if the cookie should be discarded at the end\n of the \"session\"; ":" 如果饼干在最后被丢弃\r\n “会议”；\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.getWaitQueueLength(java.util.concurrent.locks.ConditionObject)":"java.util.concurrent.locks.abstractqueuedsynchronizer.getwaitqueuelength（java.util.concurrent.locks.conditionObject）\r\n","Returns a server socket bound to the specified port.":"返回绑定到指定端口的服务器套接字。\r\n"," operation failed.":" 手术失败。\r\n","javax.sql.RowSetMetaData.setColumnLabel(int, java.lang.String)":"javax.sql.RowsetMetadata.setColumnLabel（int，java.lang.string）\r\n","Maps ":"地图\r\n","java.util.concurrent.PriorityBlockingQueue.drainTo(java.util.Collection, int)":"java.util.concurrent.priorityblockingqueue.drainto（java.util.collection，int）\r\n","Generates the shared secret, and places it into the buffer\n            <code>sharedSecret</code>, beginning at <code>offset</code> inclusive.":"生成共享的秘密，并将其放入缓冲区中\r\n            <code> sharedSecret </code>，从<code> Offset </code>包含在内。\r\n","javax.xml.xpath.XPathFactoryConfigurationException.XPathFactoryConfigurationException(java.lang.String)":"javax.xml.xpath.xpathFactoryConfigurationException.xpathFactoryConfigurationException（java.lang.string）\r\n","org.xml.sax.helpers.ParserAdapter.endElement(java.lang.String)":"org.xml.sax.helpers.parseradapter.endelement（java.lang.string）\r\n","Test if a name is part of this <code>NameList</code>.":"测试名称是否是此<code> namelist </code>的一部分。\r\n","If any parse errors occur.":"如果发生任何解析错误。\r\n","Default scope matching any host, port, realm and authentication scheme.":"默认范围匹配任何主机，端口，领域和身份验证方案。\r\n","If the index is invalid.":"如果索引无效。\r\n"," less than zero or\n         if ":" 小于零或\r\n         如果\r\n","javax.xml.transform.stream.StreamResult":"javax.xml.transform.stream.streamresult\r\n","java.util.zip.ZipError.ZipError(java.lang.String)":"java.util.zip.ziperror.ziperror（java.lang.string）\r\n","org.xmlpull.v1.XmlSerializer.setOutput(java.io.OutputStream, java.lang.String)":"org.xmlpull.v1.xmlserializer.setOutput（java.io.outputstream，java.lang.string）\r\n","java.util.concurrent.atomic.AtomicReference.getAndUpdate(java.util.function.UnaryOperator)":"java.util.concurrent.atomic.atomicreference.getandupdate（java.util.function.unaryoperator）\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(int)":"java.util.concurrent.locks.abstractqueuedsynchronizer.acquireshared（int）\r\n","javax.crypto.AEADBadTagException.AEADBadTagException()":"javax.crypto.aeadbadtagexception.aeadbadtagexception（）\r\n","Returns the current value of the version property. -or- Assigns the current value of the version property.":"返回版本属性的当前值。 - 或分配版本属性的当前值。\r\n","org.xml.sax.ext.Attributes2.isDeclared(java.lang.String)":"org.xml.sax.ext.attributes2.isdeclared（java.lang.string）\r\n","java.util.concurrent.atomic.LongAdder":"java.util.concurrent.atomic.longadder\r\n","#LITERAL":"＃文字\r\n","Returns the parameters for this key.":"返回此键的参数。\r\n","\r\n            Gets or sets a list of ":"\r\n            获取或设置列表\r\n"," implementation that delegates resolution of a parameter\n to the given default ":" 委派解决参数的实施\r\n 给定默认值\r\n"," is always represented as an absolute URI in string form.\r\n            ":" 总是以字符串形式表示为绝对URI。\r\n            \r\n","\r\n            Classes implementing this interface are able to make a decision if authorization is allowed.\r\n            ":"\r\n            如果允许授权，则实施此接口的类能够做出决定。\r\n            \r\n"," class.\r\n            ":" 班级。\r\n            \r\n","Indicates whether or not the factory is configured to produce\n            parsers which validate the XML content during parse. -or- Specifies that the parser produced by this code will\n            validate documents as they are parsed.":"指示工厂是否配置为生产\r\n            解析在分析过程中验证XML含量的解析器。 - 或 - 指定该代码产生的解析器将\r\n            验证文件被解析。\r\n","org.xml.sax.helpers.AttributesImpl.setAttributes(org.xml.sax.Attributes)":"org.xml.sax.helpers.attributesimpl.setAttributes（org.xml.sax.attributes）\r\n","javax.security.cert.X509Certificate.checkValidity(java.util.Date)":"javax.security.cert.x509certificate.checkvality（java.util.date）\r\n","Returns the <code>index</code>th name item in the collection.":"返回集合中的<code>索引</code> TH名称项。\r\n"," is currently ignored. Use ":" 当前被忽略。利用\r\n","Constructs a CipherOutputStream from an OutputStream without\n            specifying a Cipher.":"从没有输出流的情况下构造一个无需\r\n            指定密码。\r\n"," operator to the result.":" 运算符。\r\n","Returns the identity of the peer which was established as part\n            of defining the session.":"返回作为一部分建立的同伴的身份\r\n            定义会话。\r\n","org.xml.sax.InputSource.InputSource(java.io.InputStream)":"org.xml.sax.inputsource.inputsource（java.io.inputstream）\r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            to the given Java <code>String</code> value.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            到给定的Java <code>字符串</code>值。\r\n",".\r\n            Expects extension type code ":"。\r\n            期望扩展类型代码\r\n","java.util.concurrent.locks.StampedLock":"java.util.concurrent.locks.stampedlock\r\n"," if it exists and is an int or\n            can be coerced to an int, or 0 otherwise.":" 如果存在并且是int或\r\n            可以将其胁迫到INT，也可以否则为0。\r\n","Returns the provider of this <code>ExemptionMechanism</code> object.":"返回此<code>豁免机构的提供商</code>对象。\r\n","javax.sql.RowSet.setBlob(java.lang.String, java.io.InputStream, long)":"javax.sql.Rowset.setBlob（java.lang.string，java.io.inputstream，long）\r\n","Represents a protocol version, as specified in RFC 2616.":"代表RFC 2616中指定的协议版本。\r\n","javax.crypto.SealedObject.getObject(java.security.Key, java.lang.String)":"javax.crypto.sealedobject.getObject（java.security.key，java.lang.string）\r\n"," if not owned.":" 如果不拥有。\r\n","javax.net.ssl.ExtendedSSLSession.getPeerSupportedSignatureAlgorithms()":"javax.net.ssl.extendendsslsession.getPeersupportedSignatureAletGorithms（）\r\n"," node, or if\n   the node to put in is one of this node's ancestors or this node\n   itself, or if this node is of type ":" 节点，或者\r\n   要放入的节点是该节点的祖先之一或该节点\r\n   本身，或该节点是类型的\r\n","javax.crypto.KeyAgreementSpi.engineInit(java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)":"javax.crypto.Keyagreementspi.Engineinit（Java.security.key，Java.security.security.spec.algorithmparameterspec，java.security.securerandom）\r\n","\r\n            Creates the new ":"\r\n            创建新的\r\n","java.util.logging.ErrorManager.error(java.lang.String, java.lang.Exception, int)":"java.util.logging.errormanager.error（java.lang.string，java.lang.exception，int）\r\n","Create a new input source with a DOM node, and with the\n            system ID also passed in as the base URI.":"使用DOM节点创建一个新的输入源，并\r\n            系统ID也作为基本URI传递。\r\n","java.util.logging.LogManager.getLogger(java.lang.String)":"java.util.logging.logmanager.getlogger（java.lang.string）\r\n","java.util.zip.ZipFile.getEntry(java.lang.String)":"java.util.zip.zipfile.getentry（java.lang.string）\r\n","org.xml.sax.helpers.XMLReaderAdapter.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)":"org.xml.sax.helpers.xmlreaderadapter.startelement（java.lang.string，java.lang.string，java.lang.lang.string，org.xml.sax.attributes）\r\n","schema":"模式\r\n","javax.xml.datatype.XMLGregorianCalendar.reset()":"javax.xml.datatype.xmlgregoriancalendar.reset（）\r\n","This class is used to represent a JAR file entry.":"此类用于表示JAR文件条目。\r\n","DOM operations only raise exceptions in \"exceptional\" circumstances, i.":"DOM操作仅在“特殊”情况下引起例外，即。\r\n","Extended interface for mapping external entity references to input\n            sources, or providing a missing external subset.":"用于映射外部实体引用到输入的扩展接口\r\n            来源，或提供缺失的外部子集。\r\n","Abort the loading of the document that is currently being loaded by\n            the <code>LSParser</code>.":"中止当前正在加载的文档的加载\r\n            <code> lsparser </code>。\r\n","org.xml.sax.ext.Attributes2Impl.isSpecified(java.lang.String, java.lang.String)":"org.xml.sax.ext.attributes2impl.isspecified（java.lang.string，java.lang.string）\r\n","javax.sql.PooledConnection.removeStatementEventListener(javax.sql.StatementEventListener)":"javax.sql.pooledconnection.removestatatementEventListener（javax.sql.StatementEmplistListener）\r\n","\r\n            Indicates if the pointer represents the primary pointer of this pointer type.\r\n            ":"\r\n            指示指针是否表示该指针类型的主要指针。\r\n            \r\n","Obtains a response interceptor from this list.":"从此列表中获取响应拦截器。\r\n","Returns the boolean value represented by the string associated with the\n            specified key in this preference node.":"返回由与之关联的字符串表示的布尔值\r\n            在此偏好节点中指定键。\r\n","AtomicBoolean":"Atomicboolean\r\n","Retrieves the original (encapsulated) object.":"检索原始（封装）对象。\r\n","Returns a new CompletionStage with the same result or exception as\n            this stage, that executes the given action using the supplied\n            Executor when this stage completes.":"返回一个新的完整舞台，其结果或异常\r\n            此阶段，使用所提供的\r\n            执行人在此阶段完成时。\r\n","Thrown if there are errors when\n    parsing the ":"如果有错误，当\r\n    解析\r\n",". -or- Set the log level specifying which message levels will be\n            logged by this ":"。 - 或 - 设置日志级别指定将是哪些消息级别\r\n            登录了\r\n","\r\n            Throws ":"\r\n            扔\r\n","Register the error event handler.":"注册错误事件处理程序。\r\n","javax.net.ssl.SSLContext.getProtocol()":"javax.net.ssl.sslcontext.getProtocol（）\r\n","java.util.zip.CheckedInputStream":"java.util.zip.checkedinputstream\r\n"," do not specify a valid chunk in the input\n             buffer.\n":" 请勿在输入中指定有效的块\r\n             缓冲。\r\n\r\n","java.util.logging.Level.intValue()":"java.util.logging.level.intvalue（）\r\n",", to workaround\n bugs within the class or for ease-of-use features.":"，下进\r\n 课堂内的错误或用于易用功能。\r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            to the given Java <code>boolean</code> value.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            到给定的Java <code>布尔值</code>值。\r\n","Defines the ":"定义\r\n","org.xml.sax.ext.Attributes2":"org.xml.sax.ext.Attributes2\r\n","java.util.zip.Inflater.setDictionary(byte[], int, int)":"java.util.zip.inflater.setDictionary（byte []，int，int）\r\n","java.util.concurrent.LinkedBlockingQueue.offer(java.lang.Object, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.linkedblockingqueue.offer（java.lang.object，long，java.util.concurrent.timeunit）\r\n","javax.net.ssl.SSLEngine.getPeerHost()":"javax.net.ssl.sslengine.getpeerhost（）\r\n","javax.xml.transform.sax.SAXSource.getXMLReader()":"javax.xml.transform.sax.saxsource.getxmlreader（）\r\n","Returns the maximum size that a network buffer can be for this session.":"返回本次会话可以为网络缓冲区提供的最大尺寸。\r\n","Create a named Level with a given integer value and a\n            given localization resource name.":"创建具有给定整数值和一个的指定级别\r\n            给定本地化资源名称。\r\n","The parent of this node.":"该节点的父母。\r\n","Objects implementing the <code>NamedNodeMap</code> interface are used to\n            represent collections of nodes that can be accessed by name.":"实现<code>名为nodemap </code>接口的对象用于\r\n            表示可以按名称访问的节点的集合。\r\n","NOT_FOUND_ERR: Raised if ":"NOT_FOUND_ERR：如果\r\n","#processName processName()":"#ProcessName ProcessName（）\r\n","An application implements a ":"应用程序实施\r\n","\r\n            which requires the current user must be authenticated.\r\n            ":"\r\n            必须对当前用户进行身份验证。\r\n            \r\n","Get the parent reader. -or- Set the parent reader.":"找父母读者。 - 或 - 设置父读者。\r\n"," if this queue uses the Comparable\n            natural ordering of its elements.":" 如果此队列使用可比的\r\n            自然订购其元素。\r\n","javax.xml.validation.SchemaFactory.newSchema()":"javax.xml.validation.schemafactory.newschema（）\r\n","Returns the current column number, starting from 0.":"从0开始返回当前列号。\r\n","allowsCoreThreadTimeOut":"lasteCoreThreadTimeOut\r\n","Sends all pending buffered data over this connection.":"在此连接上发送所有未决的缓冲数据。\r\n","INVALID_CHARACTER_ERR: Raised if the specified target is not an XML\n   name according to the XML version in use specified in the\n   ":"Invalid_character_err：如果指定的目标不是XML，则提出\r\n   根据在使用中指定的XML版本的名称\r\n   \r\n","\r\n            The total number of elements in the sequence.\r\n            ":"\r\n            序列中的元素总数。\r\n            \r\n","java.util.concurrent.TransferQueue.tryTransfer(java.lang.Object)":"java.util.concurrent.transferqueue.trytransfer（java.lang.Object）\r\n","Returns the port.":"返回端口。\r\n","javax.sql.ConnectionEvent":"javax.sql.connectionevent\r\n","javax.security.cert.CertificateExpiredException":"javax.security.cert.certificate expiredException\r\n","\r\n            Writes a span of bytes, prefixed with a length encoded as the smallest fitting from:\r\n            ":"\r\n            写下一个字节的跨度，以最小的拟合为前缀：\r\n            \r\n","javax.crypto.ExemptionMechanism.init(java.security.Key, java.security.spec.AlgorithmParameterSpec)":"Javax.Crypto.ExemptionMechanism.Init（Java.Security.Key，Java.Security.Spec.algorithMparameterspec）\r\n","An encapsulation of the result state produced by\n            <code>SSLEngine</code> I/O calls.":"由\r\n            <code> sslengine </code> i/o调用。\r\n","Adapt a SAX2 characters event.":"调整SAX2字符事件。\r\n","javax.net.ssl.TrustManagerFactory.getTrustManagers()":"javax.net.ssl.trustmanagerfactory.gettrustmanagers（）\r\n","\r\n            The default value of the CookieAuthenticationOptions.ReturnUrlParameter\r\n            ":"\r\n            cookiuthenticationOptions.turnurlparameter的默认值\r\n            \r\n","java.util.logging.Logger.getResourceBundleName()":"java.util.logging.logger.getResourcebundlename（）\r\n","\r\n            The parameter key for the \"scope\" argument being used for a challenge request.\r\n            ":"\r\n            用于挑战请求的“范围”参数的参数键。\r\n            \r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            with the given  <code>Ref</code> value.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            带有给定的<code> ref </code>值。\r\n","java.util.zip.DeflaterOutputStream":"java.util.zip.deflateroutputstream\r\n","Provides access to an ordered list of request interceptors.":"提供对请求拦截器的有序列表的访问权限。\r\n","org.xml.sax.DTDHandler.unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.dtdhandler.unparsedentitydecl（java.lang.string，java.lang.string，java.lang.string，java.lang.string）\r\n","A timeout while waiting for an available connection \n from a connection manager.":"等待可用连接的暂停\r\n 来自连接管理器。\r\n","java.util.concurrent.atomic.AtomicReferenceFieldUpdater.updateAndGet(java.lang.Object, java.util.function.UnaryOperator)":"java.util.concurrent.atomic.atomicreferencefieldupdater.updateandget（java.lang.object，java.util.function.unaryoperator）\r\n","If  ":"如果\r\n","Unreads the most recent character of input.":"未读取最新的输入字符。\r\n","#convert(long, TimeUnit) HOURS.convert(duration, this)":"#convert（long，timeunit）小时。\r\n","org.w3c.dom.Node.DOCUMENT_POSITION_PRECEDING":"org.w3c.dom.node.document_position_preceding\r\n"," was returned.\n":" 被返回。\r\n\r\n","Atomically updates the field of the given object managed by this\n            updater with the results of applying the given function to the\n            current and given values, returning the previous value.":"原子上更新由此管理的给定对象的字段\r\n            更新者将给定功能应用于\r\n            当前和给定的值，返回上一个值。\r\n","Look up an attribute's Namespace URI by index.":"通过索引查找属性的名称空间URI。\r\n","java.util.concurrent.locks.AbstractOwnableSynchronizer.AbstractOwnableSynchronizer()":"java.util.concurrent.locks.abstractownablessynchronizer.abstractownablessynchronizer（）\r\n","javax.xml.parsers.DocumentBuilderFactory.setIgnoringComments(boolean)":"javax.xml.parsers.documentbuilderfactory.setignoringcomments（boolean）\r\n","The second node precedes the reference node.":"第二个节点先于参考节点。\r\n"," to be read-only.":" 仅阅读。\r\n","System.err":"System.err\r\n","the current position the parsing operation is expected to start at":"目前的解析操作预计将在\r\n","javax.crypto.Cipher.update(byte[], int, int)":"javax.crypto.cipher.update（byte []，int，int）\r\n","Enables Unix lines mode.":"启用UNIX线模式。\r\n","DOMSTRING_SIZE_ERR: Raised when it would return more characters than\n   fit in a ":"domstring_size_err：何时返回字符比\r\n   适合\r\n","java.util.zip.Adler32":"java.util.zip.adler32\r\n","Non-exclusively acquires the lock if it is immediately available.":"如果立即可用，则非固定地获取锁。\r\n","Allows for setting parameters relating to connections on\n ":"允许设置与连接有关的参数\r\n \r\n","Removes the value associated with the specified key in this preference\n            node, if any.":"删除此优先级中与指定键关联的值\r\n            节点，如果有的话。\r\n","java.util.logging.LogManager.checkAccess()":"java.util.logging.logmanager.checkaccess（）\r\n","javax.xml.transform.sax.SAXSource.setSystemId(java.lang.String)":"javax.xml.transform.sax.saxsource.setsystemid（java.lang.string）\r\n","org.w3c.dom.Document.createElement(java.lang.String)":"org.w3c.dom.document.createelement（java.lang.string）\r\n","The provided antiforgery token failed a custom data check.":"提供的抗管状令牌未能进行自定义数据检查。\r\n","Value for ninth month of year.":"九年月的价值。\r\n","\r\n            If true, indicates that ":"\r\n            如果是真的，请指示\r\n","NullCipherSpi":"nullcipherspi\r\n"," if it exists, coercing it if\n            necessary, or the empty string if no such mapping exists.":" 如果存在，请强迫它\r\n            必要的，或者如果没有这样的映射，则为空字符串。\r\n","org.w3c.dom.Node.getFeature(java.lang.String, java.lang.String)":"org.w3c.dom.node.getFeature（java.lang.string，java.lang.string）\r\n","if initializing this instance fails.\n":"如果初始化此实例失败。\r\n\r\n","Deflater#SYNC_FLUSH":"Deflater＃Sync_flush\r\n","Returns the lock used for writing.":"返回用于写作的锁。\r\n","Creates a new instance using the given accumulator function\n            and identity element.":"使用给定的累加器函数创建一个新实例\r\n            和身份元素。\r\n","java.util.zip.Deflater.DEFAULT_STRATEGY":"java.util.zip.deflater.default_strategy\r\n","Filter a start element event.":"过滤起始元素事件。\r\n","Filter a character data event.":"过滤角色数据事件。\r\n","org.xml.sax.helpers.ParserAdapter.endDocument()":"org.xml.sax.helpers.parseradapter.enddocument（）\r\n","java.util.logging.Logger.warning(java.lang.String)":"java.util.logging.logger.warning（java.lang.string）\r\n","java.util.concurrent.atomic.AtomicLongArray.addAndGet(int, long)":"java.util.concurrent.atomic.atomiclongarray.addandget（int，long）\r\n","java.util.concurrent.atomic.AtomicIntegerFieldUpdater.lazySet(java.lang.Object, int)":"java.util.concurrent.atomic.atomicintegerfieldupdater.lazyset（java.lang.object，int）\r\n","Authentication process may involve a series of challenge-response exchanges.":"身份验证过程可能涉及一系列挑战 - 响应交换。\r\n"," bound to the specified ":" 绑定到指定的\r\n","Compare two instances of W3C XML Schema 1.":"比较W3C XML模式1的两个实例。\r\n","java.util.concurrent.locks.LockSupport.park()":"java.util.concurrent.locks.locksupport.park（）\r\n"," if this optional field is not defined.":" 如果未定义此可选字段。\r\n","\r\n            Exposes methods to build a policy.\r\n            ":"\r\n            揭示构建策略的方法。\r\n            \r\n","Creates a new phaser with the given parent and number of\n            registered unarrived parties.":"与给定的父母创建一个新的移相器和数量\r\n            注册未列的政党。\r\n"," parameter to ensure that initialization work is only performed\r\n            once.\r\n            ":" 参数以确保仅执行初始化工作\r\n            一次。\r\n            \r\n"," to perform an additional finishing\n            transformation.":" 执行额外的完成\r\n            转型。\r\n","java.util.concurrent.CompletionStage.runAfterEitherAsync(java.util.concurrent.CompletionStage, java.lang.Runnable)":"java.util.concurrent.completionstage.runaftereitherasync（java.util.concurrent.completionstage，java.lang.runnable）\r\n"," at occurrences of this pattern.":" 发生这种模式。\r\n","java.util.function.Function.identity()":"java.util.function.function.Identity（）\r\n","javax.net.ssl.SSLEngine.getHandshakeSession()":"javax.net.ssl.sslengine.gethandshaxessession（）\r\n","Returns the iteration count.":"返回迭代计数。\r\n","to":"至\r\n","java.util.concurrent.atomic.AtomicIntegerArray.getAndAdd(int, int)":"java.util.concurrent.atomic.atomicintegerarray.getandadd（int，int）\r\n"," instances.\r\n            ":" 实例。\r\n            \r\n","Returns a copy of the SSLParameters indicating the maximum supported\n            settings for this SSL context.":"返回SSLPARAMETER的副本，指示最大支持\r\n            此SSL上下文的设置。\r\n","java.util.stream.Collectors.mapping(java.util.function.Function, java.util.stream.Collector)":"java.util.stream.collectors.mapping（java.util.function.function，java.util.stream.collector）\r\n","java.util.regex.MatchResult.group()":"java.util.regex.matchresult.group（）\r\n","Returns a hash code consistent with the definition of the equals method.":"返回与等价方法的定义一致的哈希代码。\r\n","\r\n            Gets the claim type that must be present.\r\n            ":"\r\n            获取必须存在的索赔类型。\r\n            \r\n","\r\n            A dropdown selection component.\r\n            ":"\r\n            下拉选择组件。\r\n            \r\n","Returns the algorithm name of this <code>KeyAgreement</code> object.":"返回此<code> keyagreement </code>对象的算法名称。\r\n","Updates a connection with a layered secure connection.":"使用分层安全连接更新连接。\r\n","Creates an input stream using the specified Checksum.":"使用指定的校验和创建输入流。\r\n"," compatibility mode.\r\n            ":" 兼容模式。\r\n            \r\n"," and call this method to dynamically calculate these values.\r\n            ":" 并调用此方法以动态计算这些值。\r\n            \r\n","org.xml.sax.ext.Locator2Impl":"org.xml.sax.ext.locator2impl\r\n","java.util.prefs.Preferences.exportSubtree(java.io.OutputStream)":"java.util.prefs.preferences.exportsubtree（java.io.outputstream）\r\n","javax.xml.namespace.QName.getLocalPart()":"javax.xml.namespace.qname.getlocalpart（）\r\n","Creates a MAC object.":"创建一个MAC对象。\r\n","java.util.prefs.AbstractPreferences.exportSubtree(java.io.OutputStream)":"java.util.prefs.abstractpreferences.exportsubtree（java.io.outputstream）\r\n","Default implementation class name as defined in JSR 206: Java(TM) API for XML Processing (JAXP) 1.":"JSR 206中定义的默认实现类名称：XML处理（JAXP）1的JAVA（TM）API。\r\n","Returns true if this array has no value at ":"如果此数组没有价值，则返回true\r\n","javax.net.ssl.TrustManager":"javax.net.ssl.trustmanager\r\n","Generates a date in the format required by the HTTP protocol.":"以HTTP协议要求的格式生成日期。\r\n","\r\n            Returns the principal unchanged.\r\n            ":"\r\n            返回校长不变。\r\n            \r\n","Sets whether the designated column is case sensitive.":"设置指定的列是否对情况敏感。\r\n","The type of the requirement to handle.":"处理要求的类型。\r\n","Retrieves a log writer which is a character output stream to which all\n logging and tracing messages for this data source will be printed.":"检索日志作者，这是一个字符输出流到达的字符输出流\r\n 将打印此数据源的记录和跟踪消息。\r\n","if not terminated and the number\n of registered or unarrived parties would become negative\n":"如果未终止，数字\r\n 注册或未移交的各方将变成负面\r\n\r\n","Look up a prefix and get the currently-mapped Namespace URI.":"查找前缀并获取当前映射的名称空间URI。\r\n","Is specified schema supported by this <code>SchemaFactory</code>?":"是否指定<code> schemafactory </code>支持的模式？\r\n","org.xml.sax.SAXParseException.SAXParseException(java.lang.String, java.lang.String, java.lang.String, int, int)":"org.xml.sax.saxparseexception.saxparseexception（java.lang.string，java.lang.string，java.lang.string，int，int）\r\n","javax.net.SocketFactory.createSocket(java.net.InetAddress, int)":"Javax.net.SocketFactory.Createsocket（Java.net.inetaddress，int）\r\n","This interface represents an input source for data.":"该接口代表数据的输入源。\r\n","org.apache.http.params.CoreConnectionPNames.TCP_NODELAY":"org.apache.http.params.coreconnectionpnames.tcp_nodelay\r\n","This class acts as a factory for trust managers based on a\n            source of trust material.":"该课程是基于A的信托经理的工厂\r\n            信任材料的来源。\r\n","in case of a problem or the connection was aborted\n":"如果出现问题或连接中止\r\n\r\n","putLong":"推杆\r\n","An entity composed of a list of url-encoded pairs.":"由URL编码对列表组成的实体。\r\n","\r\n            Used to hold per-request state.\r\n            ":"\r\n            用于持有每个要求状态。\r\n            \r\n"," properties\n            (or their defaults).":" 特性\r\n            （或他们的默认值）。\r\n","\r\n            Signout behavior.\r\n            ":"\r\n            签名行为。\r\n            \r\n","Returns a <code>NodeList</code> of all the <code>Elements</code> with a\n            given local name and namespace URI in document order.":"返回所有<code> elements </code>的<code> elements </code>\r\n            以文档顺序给定本地名称和名称空间URI。\r\n","Set the features to be set when XML Pull Parser is created by this factory.":"设置该工厂创建XML拉动解析器时要设置的功能。\r\n","get()":"得到（）\r\n","Creates a protocol version.":"创建协议版本。\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.acquireShared(long)":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.acquireshared（long）\r\n","This exception is thrown when a particular padding mechanism is\n            requested but is not available in the environment.":"当特定的填充机制是\r\n            请求但在环境中不可用。\r\n"," for managing loggers.":" 用于管理记录器。\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.acquire(long)":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.Acquire（long）\r\n","Unsafe special characters that must be escaped using the backslash\n character\n":"不安全的特殊字符必须使用后斜线逃脱\r\n 特点\r\n\r\n","javax.crypto.spec.PBEParameterSpec.getParameterSpec()":"javax.crypto.spec.pbeparameterspec.getParameterspec（）\r\n","javax.security.auth.login.LoginException.LoginException(java.lang.String)":"javax.security.auth.login.loginexception.loginexception（java.lang.string）\r\n","org.xmlpull.v1.XmlSerializer.setPrefix(java.lang.String, java.lang.String)":"org.xmlpull.v1.xmlserializer.setprefix（java.lang.string，java.lang.string）\r\n","org.xml.sax.XMLReader.getProperty(java.lang.String)":"org.xml.sax.xmlreader.getProperty（java.lang.string）\r\n","\r\n            The content that will be displayed if the user is authorized.\r\n            ":"\r\n            如果用户获得授权，将显示的内容。\r\n            \r\n","Process a raw XML qualified name, after all declarations in the\n            current context have been handled by ":"处理一个原始XML合格名称，之后\r\n            当前背景已由\r\n","\r\n            Commits more elements as written in this segment.\r\n            ":"\r\n            按照本细分市场的写入更多元素。\r\n            \r\n","java.util.concurrent.atomic.AtomicLong.longValue()":"java.util.concurrent.atomic.atomiclong.longvalue（）\r\n"," node, or if\n   the node to insert is one of this node's ancestors or this node\n   itself, or if this node is of type ":" 节点，或者\r\n   插入的节点是该节点的祖先之一或该节点\r\n   本身，或该节点是类型的\r\n","Indicates some kind of error detected by an SSL subsystem.":"指示SSL子系统检测到的某种错误。\r\n","java.util.concurrent.ExecutorService.submit(java.lang.Runnable, java.lang.Object)":"java.util.concurrent.executorservice.submit（java.lang.runnable，java.lang.object）\r\n",". For internal use only.\r\n            ":"。仅限内部使用。\r\n            \r\n","java.util.concurrent.LinkedBlockingDeque.getFirst()":"java.util.concurrent.linkedblockingdeque.getFirst（）\r\n","\r\n            Adds authorization policy services to the specified ":"\r\n            将授权政策服务添加到指定的\r\n","Compression level for best compression.":"最佳压缩的压缩水平。\r\n","java.util.prefs.Preferences.putFloat(java.lang.String, float)":"java.util.prefs.preferences.putfloat（java.lang.string，float）\r\n","Creates a new entity wrapper.":"创建一个新的实体包装器。\r\n","\r\n            Removes all elements from the sequence from its beginning to the specified position,\r\n            considering that data to have been fully processed.\r\n            ":"\r\n            从序列从其开始到指定位置的所有元素删除所有元素，\r\n            考虑到已完全处理的数据。\r\n            \r\n","javax.xml.transform.sax.TemplatesHandler":"javax.xml.transform.sax.templateshandler\r\n","org.xml.sax.helpers.XMLFilterImpl.endDocument()":"org.xml.sax.helpers.xmlfilterimpl.enddocument（）\r\n","\r\n            Extension method for SignIn.\r\n            ":"\r\n            签名的扩展方法。\r\n            \r\n","javax.net.ssl.HandshakeCompletedEvent.getPeerCertificates()":"javax.net.ssl.handshakecomplededevent.getPeerCertificates（）\r\n","if the specified provider does not exits.":"如果指定的提供商未退出。\r\n","\r\n            Given a base URI (e.g., one previously returned by ":"\r\n            给定一个基本URI（例如，以前由\r\n","The number of pairs (name and namespaceURI) in the list.":"列表中的对（名称和名称空间）的数量。\r\n"," as a JSON string.":" 作为JSON字符串。\r\n","Returns the provider of this <code>SecretKeyFactory</code> object.":"返回此<code> SecretKeyFactory </code>对象的提供商。\r\n","if the specified key cannot be used in this key agreement or\n             this phase,":"如果在本密钥协议中不能使用指定的密钥或\r\n             这个阶段，\r\n","\r\n            Authentication behavior.\r\n            ":"\r\n            身份验证行为。\r\n            \r\n"," parameter is outside value constraints for the field as specified in\n   .\n":" 参数是该字段的外部值约束，如\r\n   。\r\n\r\n",".\r\n            Otherwise this will fallback to ":"。\r\n            否则这会后备到\r\n","Parameter type.":"参数类型。\r\n","java.util.concurrent.Phaser.getRoot()":"java.util.concurrent.phaser.getRoot（）\r\n","org.w3c.dom.DOMErrorHandler.handleError(org.w3c.dom.DOMError)":"org.w3c.dom.domerrhandler.handleerror（org.w3c.dom.domerror）\r\n","javax.xml.transform.sax.SAXTransformerFactory.FEATURE":"javax.xml.transform.sax.saxtransformerfactory.feature\r\n"," originally supplied to the constructor.\r\n            ":" 最初提供给构造函数。\r\n            \r\n","javax.crypto.spec.DHPrivateKeySpec.DHPrivateKeySpec(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)":"javax.crypto.spec.dhprivatekeyspec.dhprivatekeyspec（java.math.biginteger，java.math.biginteger，java.math.biginteger）\r\n","javax.net.ssl.StandardConstants.SNI_HOST_NAME":"javax.net.ssl.standardconstants.sni_host_name\r\n","org.apache.http.params.HttpParams.isParameterFalse(java.lang.String)":"org.apache.http.params.httpparams.isparameterfalse（java.lang.string）\r\n","\r\n            Options to configure circuit handler for server-side Blazor \r\n            ":"\r\n            配置服务器端极限的电路处理程序的选项\r\n            \r\n","org.xml.sax.helpers.XMLFilterImpl.parse(java.lang.String)":"org.xml.sax.helpers.xmlfilterimpl.parse（java.lang.string）\r\n","if a problem occurs accessing the database or if the reader\n             calls the ":"如果发生问题时访问数据库或读者\r\n             打电话\r\n","javax.net.ssl.TrustManagerFactory.init(javax.net.ssl.ManagerFactoryParameters)":"javax.net.ssl.trustmanagerfactory.init（javax.net.ssl.managerfactoryparameters）\r\n","org.json.JSONObject.length()":"org.json.jsonobject.length（）\r\n","\r\n            Override this method to handle SignOut.\r\n            ":"\r\n            覆盖此方法以处理签名。\r\n            \r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getQueueLength()":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.getQueuelength（）\r\n","Test if the DOM implementation implements a specific feature and\n            version, as specified in .":"测试DOM实现是否实现了特定功能和\r\n            版本，如图所示。\r\n","Allow an application to register a DTD event handler.":"允许应用程序注册DTD事件处理程序。\r\n","Map<Boolean, D>":"地图<boolean，d>\r\n","org.xml.sax.Attributes.getType(java.lang.String, java.lang.String)":"org.xml.sax.attributes.getType（java.lang.string，java.lang.string）\r\n","java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndAdd(java.lang.Object, int)":"java.util.concurrent.atomic.atomicintegerfieldupdater.getandadd（java.lang.object，int）\r\n","Defines the request headers to be sent per default with each request.":"定义每个请求时要发送的请求标题。\r\n"," (<b>SPI</b>)\n            for the <code>KeyManagerFactory</code> class.":" （<b> spi </b>）\r\n            对于<code> keymanagerFactory </code>类。\r\n","javax.crypto.CipherSpi.engineGetIV()":"javax.crypto.cipherspi.enginegetiv（）\r\n","org.json.JSONArray":"org.json.jsonarray\r\n","Defines the factory to create a default ":"定义工厂创建默认值\r\n","Constructs a new Manifest that is a copy of the specified Manifest.":"构建新清单，是指定清单的副本。\r\n","Returns a Collection view of the attribute name-value mappings\n            contained in this Map.":"返回属性名称值映射的集合视图\r\n            包含在此地图中。\r\n","java.util.prefs.AbstractPreferences.removeNodeSpi()":"java.util.prefs.abstractpreferences.removenodespi（）\r\n","javax.xml.xpath.XPathExpressionException":"javax.xml.xpath.xpathExpressionException\r\n","java.util.concurrent.LinkedTransferQueue.put(java.lang.Object)":"java.util.concurrent.linkedtransferqueue.put（java.lang.object）\r\n","if acquiring would place this\n         synchronizer in an illegal state. This exception must be\n         thrown in a consistent fashion for synchronization to work\n         correctly.":"如果获取将放置\r\n         同步器处于非法状态。这个例外必须是\r\n         以一致的方式抛出同步工作\r\n         正确。\r\n","May throw this during the\n parse when it is constructing the Templates object and fails.\n":"可以在\r\n 当它构造模板对象并且失败时解析。\r\n\r\n","java.util.concurrent.SynchronousQueue.poll(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.synchronousqueue.poll（long，java.util.concurrent.timeunit）\r\n","javax.sql.StatementEvent.getStatement()":"javax.sql.StatementEvent.getStatement（）\r\n","javax.xml.datatype.DatatypeConstants.YEARS":"javax.xml.datatype.datatypeconstants.years\r\n","\r\n            Gets the data required to apply authorization rules.\r\n            ":"\r\n            获取应用授权规则所需的数据。\r\n            \r\n","Returns true if this object has no mapping for ":"如果此对象没有映射，则返回true\r\n","The <code>Node</code> interface is the primary datatype for the entire\n            Document Object Model.":"<code>节点</code>接口是整个的主要数据类型\r\n            文档对象模型。\r\n","Appends ":"附加\r\n","Obtains the next token from this iteration.":"从此迭代中获取下一个令牌。\r\n","resolver":"解析器\r\n","java.util.logging.LoggingMXBean.getLoggerLevel(java.lang.String)":"java.util.logging.loggingmxbean.getLoggerlevel（java.lang.string）\r\n","When the\n            parent recognizes the property name but\n            cannot set the requested value.\n":"当。。。的时候\r\n            父母识别属性名称，但是\r\n            无法设置请求的值。\r\n\r\n","org.xml.sax.helpers.ParserAdapter.setProperty(java.lang.String, java.lang.Object)":"org.xml.sax.helpers.parseradapter.setProperty（java.lang.string，java.lang.object）\r\n","Notifies this <code>ConnectionEventListener</code> that\n            the application has called the method <code>close</code> on its\n            representation of a pooled connection.":"通知此<code> ConnectionEventListener </code>\r\n            该应用程序已在其上调用方法<code> CLOSE </code>\r\n            汇总连接的表示。\r\n","Adds a node using its <code>nodeName</code> attribute.":"使用其<code> nodeName </code>属性添加一个节点。\r\n","Returns the buffer that contains the text of the current event,\n            as well as the start offset and length relevant for the current\n            event.":"返回包含当前事件文本的缓冲区，\r\n            以及与电流相关的起始偏移和长度\r\n            事件。\r\n","java.util.logging.Level.ALL":"java.util.logging.level.all\r\n","\r\n            The Access-Control-Allow-Origin response header.\r\n            ":"\r\n            访问控制 - 允许原始响应标头。\r\n            \r\n","\r\n            Gets the fallback authorization policy.\r\n            ":"\r\n            获取后备授权政策。\r\n            \r\n","java.util.regex.PatternSyntaxException.getPattern()":"java.util.regex.patternsyntaxexception.getPattern（）\r\n","org.w3c.dom.DOMStringList.item(int)":"org.w3c.dom.domstringlist.item（int）\r\n","Creates a KeyGenerator object.":"创建一个键机对象。\r\n","ConcurrentMap":"conturentMap\r\n","\r\n            Returns all of the AuthenticationTokens contained in the properties.\r\n            ":"\r\n            返回属性中包含的所有身份验证tokens。\r\n            \r\n","Returns domain attribute of the cookie.":"返回cookie的域属性。\r\n","Get the system identifier that was set with setSystemId. -or- Method setSystemId Set the systemID that may be used in association\n            with the ":"获取使用SetSystemID设置的系统标识符。 -or-方法setSystemID设置可以使用的systemID\r\n            与\r\n","javax.xml.transform.stream.StreamSource.StreamSource(java.io.InputStream)":"javax.xml.transform.stream.streamsource.streamsource（java.io.inputstream）\r\n","org.apache.http.params.CoreConnectionPNames.SO_TIMEOUT":"org.apache.http.params.coreconnectionpnames.so_timeout\r\n","Initializes this factory with a source of key material.":"用关键材料来源将该工厂初始化。\r\n","javax.xml.transform.stream.StreamResult.setSystemId(java.lang.String)":"javax.xml.transform.stream.streamresult.setsystemid（java.lang.string）\r\n","javax.net.ssl.SSLParameters.SSLParameters()":"javax.net.ssl.sslparameters.sslparameters（）\r\n","org.xml.sax.helpers.XMLFilterImpl.setContentHandler(org.xml.sax.ContentHandler)":"org.xml.sax.helpers.xmlfilterimpl.setcontenthandler（org.xml.sax.contenthandler）\r\n","If there was an exception getting the entity's data.\n":"如果有例外获取实体的数据。\r\n\r\n","Arrives at this phaser and awaits others.":"到达此移动器并等待其他人。\r\n","Obtains the target host.":"获得目标主机。\r\n","java.util.concurrent.atomic.AtomicBoolean.AtomicBoolean(boolean)":"java.util.concurrent.atomic.atomicboolean.atomicboolean（boolean）\r\n","java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(java.lang.Thread)":"java.util.concurrent.locks.abstractownablessynchronizer.setExclusiveWownerThread（java.lang.thread）\r\n","if the mapping doesn't exist or cannot be coerced\n     to a double.\n":"如果映射不存在或无法强制\r\n     双重。\r\n\r\n","Advances past all input up to and including the next occurrence of\n            ":"超越所有输入的进步，包括下一次发生\r\n            \r\n","Constructs a ExemptionMechanismException with no detailed message.":"构建豁免机械施法，没有详细的消息。\r\n","Constructs a <code>ZipException</code> with <code>null</code>\n            as its error detail message.":"用<code> <code> null </code>构建<code> zipexception </code>\r\n            作为其错误详细信息。\r\n","This method returns a specialized object which implements the\n            specialized APIs of the specified feature and version, as specified\n            in .":"此方法返回一个专业对象，该对象实现了\r\n            指定的指定功能和版本的专业API\r\n            在 。\r\n",",\r\n            and the attribute represents an event handler, gets the name of another attribute whose value\r\n            can be updated to represent the UI state prior to executing the event handler. This is\r\n            primarily used in two-way bindings.\r\n            ":"，，，，\r\n            属性代表事件处理程序，获取另一个属性的名称其值\r\n            可以在执行事件处理程序之前更新以表示UI状态。这是\r\n            主要用于双向绑定。\r\n            \r\n","Compares the reference node, i.":"比较参考节点i。\r\n","Emits on the specified output stream an XML document representing all\n            of the preferences contained in this node (but not its descendants).":"在指定的输出流上排放一个代表所有的XML文档\r\n            该节点中包含的偏好（但没有其后代）。\r\n","java.util.logging.Logger.getParent()":"java.util.logging.logger.getParent（）\r\n","A method to request a list of DOM implementations that support the\n            specified features and versions, as specified in .":"一种要求支持支持该DOM的实现列表的方法\r\n            指定的特征和版本，如指定。\r\n","Compression method for compressed (deflated) entries.":"压缩方法（放气）条目。\r\n","Preferences#getBoolean(String,boolean)":"首选项＃getBoolean（字符串，布尔值）\r\n","Retrieves and removes the last element of this deque, waiting\n up to the specified wait time if necessary for an element to\n become available.":"检索并删除该deque的最后一个元素，等待\r\n 如果必要的元素，则达到指定的等待时间\r\n 可用。\r\n"," class\r\n            ":" 班级\r\n            \r\n","A handler for rejected tasks that silently discards the\n rejected task.":"拒绝默默丢弃的任务的处理程序\r\n 拒绝任务。\r\n","Decides whether a connection can be kept open after a request.":"决定是否可以在请求后保持连接。\r\n","Constructs a new Manifest from the specified input stream.":"从指定的输入流构造新清单。\r\n","javax.net.ssl.StandardConstants":"Javax.net.ssl.StandardConstants\r\n","Receive notification of a notation declaration event.":"接收通知，记录声明事件。\r\n","javax.net.ssl.SSLEngine.getEnabledCipherSuites()":"javax.net.ssl.sslengine.getenabledciphersuites（）\r\n","Queries if this write lock is held by the current thread.":"查询如果此写入锁定由当前线程保留。\r\n","org.xml.sax.InputSource.getByteStream()":"org.xml.sax.inputsource.getByTeStream（）\r\n","org.xml.sax.ext.EntityResolver2.resolveEntity(java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.ext.EntityResolver2.Resolveentity（java.lang.string，java.lang.string，java.lang.string，java.lang.string）\r\n","org.w3c.dom.ls.LSOutput":"org.w3c.dom.ls.lsoutput\r\n","Receive an object for locating the origin of SAX document events.":"接收一个用于定位萨克斯文档事件的原点的对象。\r\n","java.util.concurrent.locks.StampedLock.writeLock()":"java.util.concurrent.locks.stampedlock.writelock（）\r\n","if the initialization vector is null or shorter than ":"如果初始化向量为零或短\r\n","javax.security.auth.Subject.setReadOnly()":"javax.security.auth.subject.setReadonly（）\r\n","Log a method return.":"记录方法返回。\r\n","\r\n            Base class for authorization handlers that need to be called for specific requirement and\r\n            resource types.\r\n            ":"\r\n            需要要求特定要求的授权处理人员的基础类\r\n            资源类型。\r\n            \r\n"," Header into an array of Cookies.":" 标题进入一系列饼干。\r\n","Throws an exception\n            (using the previous or default locale) if the\n            requested locale is not supported.":"引发例外\r\n            （使用以前的或默认的语言环境）如果\r\n            不支持要求的语言环境。\r\n","Receive notification of character data inside an element.":"在元素内接收字符数据的通知。\r\n","java.util.concurrent.CompletionStage.thenApply(java.util.function.Function)":"java.util.concurrent.completionstage.thenapply（java.util.function.function.function）\r\n","\r\n            Adds authorization policies with the specified ":"\r\n            通过指定的授权政策添加授权政策\r\n","Preferences#flush()":"首选项＃flush（）\r\n","javax.security.auth.Subject.getPrincipals(java.lang.Class)":"javax.security.auth.subject.getPrincipals（java.lang.class）\r\n","java.util.stream.Collectors":"java.util.stream.collectors\r\n","action":"行动\r\n","Returns the current line number, starting from 1.":"从1开始返回当前行号。\r\n","Get the object that is used by default during the transformation\n to resolve URIs used in document(), xsl:import, or xsl:include.":"获取默认情况下在转换过程中使用的对象\r\n 解决文档（），XSL：导入或XSL中使用的URI：Incless。\r\n","org.xml.sax.DTDHandler.notationDecl(java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.dtdhandler.notationdecl（java.lang.string，java.lang.string，java.lang.string）\r\n","Retrieves an attribute value by local name and namespace URI.":"通过本地名称和名称空间URI检索属性值。\r\n","javax.crypto.spec.GCMParameterSpec.getIV()":"javax.crypto.spec.gcmparameterspec.getiv（）\r\n","javax.net.ssl.SSLEngine.getSupportedCipherSuites()":"javax.net.ssl.sslengine.getSupportedCiphersuites（）\r\n","javax.sql.RowSet.setAsciiStream(java.lang.String, java.io.InputStream, int)":"javax.sql.Rowset.setasciistream（java.lang.string，java.io.inputstream，int）\r\n","StandardCharsets#US_ASCII":"标准章＃US_ASCII\r\n","javax.net.ssl.TrustManagerFactorySpi":"javax.net.ssl.trustmanagerfactoryspi\r\n","\r\n            The Access-Control-Allow-Methods response header.\r\n            ":"\r\n            访问控制响应标头。\r\n            \r\n","java.util.concurrent.Delayed":"java.util.concurrent.delayed\r\n","Base interface for streams, which are sequences of elements supporting\n            sequential and parallel aggregate operations.":"流的基本接口，这些界面是支持元素的序列\r\n            顺序和并行骨料操作。\r\n","Returns whether client authentication should be requested. -or- Sets whether client authentication should be requested.":"返回是否应要求客户身份验证。 - 或设置是否应请求客户端身份验证。\r\n","F:Javax.Crypto.Cipher.Unwrap":"f：javax.crypto.cipher.unwrap\r\n","if operation produces fraction in\n the months field.":"如果操作会产生分数\r\n 月份。\r\n",") or ":"） 或者\r\n","Gets the return value of this <code>SSLEngine</code> operation.":"获取此<code> sslengine </code>操作的返回值。\r\n","This class specifies an exceptional condition that occurred\n            during the transformation process.":"该课程指定发生的特殊情况\r\n            在转换过程中。\r\n","Constructs an <code>EncryptedPrivateKeyInfo</code> from the\n            encryption algorithm name and the encrypted data.":"构建<code>从\r\n            加密算法名称和加密数据。\r\n","org.json.JSONTokener.next(int)":"org.json.jsontokener.next（int）\r\n","Defines the maximum number of connections in total.":"定义最大连接数量。\r\n","media-type = <var>string</var>.":"Media-Type = <var>字符串</var>。\r\n","java.util.zip.ZipFile.getComment()":"java.util.zip.zipfile.getcomment（）\r\n","\r\n            Creates the antiforgery token pair (cookie and request token) for a request.\r\n            ":"为请求创建抗托管令牌对（cookie和请求令牌）。\r\n            \r\n","java.util.prefs.AbstractPreferences.getFloat(java.lang.String, float)":"java.util.prefs.abstractpreferences.getfloat（java.lang.string，float）\r\n","javax.crypto.ExemptionMechanismSpi.engineGenExemptionBlob()":"javax.crypto.ExemptionMechanismspi.enginegenexemptionblob（）\r\n","javax.sql.RowSetMetaData.setCurrency(int, boolean)":"Javax.sql.RowsetMetadata.setCurrency（INT，Boolean）\r\n","Receives the request line and all headers available from this connection.":"接收该连接的请求行和所有可用的标题。\r\n","java.util.zip.Adler32.reset()":"java.util.zip.adler32.Reset（）\r\n","The node follows the reference node.":"该节点遵循参考节点。\r\n","If an error is found during processing the specified inputs.\n      When an ":"如果在处理指定输入期间发现错误。\r\n      当\r\n","Returns true if namespace declaration attributes are placed into\n            a namespace. -or- Controls whether namespace declaration attributes are placed\n            into the ":"如果将命名空间声明属性放入\r\n            名称空间。 - 或控制是否放置了名称空间声明属性\r\n            进入\r\n","java.util.prefs.AbstractPreferences.putSpi(java.lang.String, java.lang.String)":"java.util.prefs.abstractpreferences.putspi（java.lang.string，java.lang.string）\r\n","org.w3c.dom.ls.LSParserFilter.acceptNode(org.w3c.dom.Node)":"org.w3c.dom.ls.lsparserfilter.acceptnode（org.w3c.dom.node）\r\n","org.xml.sax.Parser.parse(org.xml.sax.InputSource)":"org.xml.sax.parser.parse（org.xml.sax.inputsource）\r\n"," with the specified algorithm cannot be\n             created using the generated shared secret.\n":" 使用指定算法不能\r\n             使用生成的共享秘密创建。\r\n\r\n","Updates with the given value.":"更新给定值。\r\n","java.util.prefs.InvalidPreferencesFormatException.InvalidPreferencesFormatException(java.lang.Throwable)":"java.util.prefs.invalidpreferencesformatexception.invalidpreferencesformatexception（java.lang.throw.throwableable）\r\n","java.util.zip.Adler32.update(byte[], int, int)":"java.util.zip.adler32.update（byte []，int，int）\r\n","Returns an estimate of the number of threads waiting on the\n            given condition associated with this synchronizer.":"返回估计等待的线程数的估计值\r\n            给定与此同步器相关的条件。\r\n","javax.net.ssl.TrustManagerFactory.TrustManagerFactory(javax.net.ssl.TrustManagerFactorySpi, java.security.Provider, java.lang.String)":"javax.net.ssl.trustmanagerfactory.trustmanagerfactory（javax.net.ssl.trustmanagerfactoryspi，java.security.provider，java.lang.lang.string）\r\n","Adds a header to this message.":"在此消息中添加标头。\r\n","If the property is not supported or can not be set":"如果不支持该属性或无法设置\r\n","javax.xml.transform.TransformerConfigurationException.TransformerConfigurationException(java.lang.String, java.lang.Throwable)":"javax.xml.transform.transformerconfigurationexception.transformerconfigurationException（java.lang.string，java.lang.thrang.throwable）\r\n","javax.xml.xpath.XPathFactoryConfigurationException.XPathFactoryConfigurationException(java.lang.Throwable)":"javax.xml.xpath.xpathFactoryConfigurationException.xpathFactoryConfigurationException（java.lang.thrang.throwable）\r\n","if the stream could not be created":"如果无法创建流\r\n","Atomically updates the current value with the results of\n            applying the given function to the current and given values,\n            returning the previous value.":"原子上更新当前值的结果\r\n            将给定函数应用于当前和给定值，\r\n            返回上一个值。\r\n","The NullCipher class is a class that provides an\n            \"identity cipher\" -- one that does not transform the plain text.":"nullcipher类是提供一个的类\r\n            “身份密码”  - 不会改变纯文本的一个。\r\n","if any I/O error occurs.":"如果发生任何I/O错误。\r\n","javax.sql.RowSet.setShort(java.lang.String, short)":"javax.sql.Rowset.setShort（java.lang.string，short）\r\n","if one of the specified cipher suites is not supported, or if\n             ":"如果不支持指定的密码套件之一，或者\r\n             \r\n","The field ":"场\r\n","java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdater()":"java.util.concurrent.atomic.atomicintegerfieldupdater.atomicintegerfieldupdater（）\r\n","javax.sql.RowSet.setNull(int, int)":"javax.sql.Rowset.setNull（int，int）\r\n","Filter a start Namespace prefix mapping event.":"过滤一个开始名称空间前缀映射事件。\r\n","javax.xml.parsers.DocumentBuilder.parse(org.xml.sax.InputSource)":"javax.xml.parsers.documentbuilder.parse（org.xml.sax.inputsource）\r\n","\r\n            Provides additional data to be stored for the antiforgery tokens generated\r\n            during this request.\r\n            ":"\r\n            提供用于生成的抗验证令牌的其他数据\r\n            在此请求中。\r\n            \r\n"," and\n   ":" 和\r\n   \r\n","Returns the minor version number of the HTTP protocol.":"返回HTTP协议的次要版本号。\r\n","java.util.stream.Collectors.minBy(java.util.Comparator)":"java.util.stream.collectors.minby（java.util.comparator）\r\n","org.w3c.dom.CharacterData.insertData(int, java.lang.String)":"org.w3c.dom.characterdata.intertdata（int，java.lang.string）\r\n","An object that contains information about the columns in a\n            <code>RowSet</code> object.":"一个包含有关列的信息的对象\r\n            <code> Rowset </code>对象。\r\n","java.util.concurrent.atomic.AtomicReference.getAndSet(java.lang.Object)":"java.util.concurrent.atomic.atomicreference.getandset（java.lang.object）\r\n"," attribute defining the extensions that are\n needed by the applet.":" 定义扩展的属性\r\n 小程序需要。\r\n","Return the number of attributes in this list.":"返回此列表中的属性数。\r\n","\r\n            Gets the ID of the component.\r\n            ":"\r\n            获取组件的ID。\r\n            \r\n","Converts the years and months fields into the days field\n            by using a specific time instant as the reference point.":"将年和几个月的字段转换为“日子”领域\r\n            通过使用特定时间瞬间作为参考点。\r\n","\r\n            The collection of all the ":"\r\n            所有的集合\r\n","Log a message, with associated Throwable information.":"记录一条消息，并使用可关联的投掷信息。\r\n","LinkedBlockingDeque":"LinkedBlockingDeque\r\n","java.util.zip.Deflater.needsInput()":"java.util.zip.deflater.needsinput（）\r\n","An adaptor for accessing connection parameters in ":"用于访问连接参数的适配器\r\n"," maintains a pair of associated ":" 保持一对相关\r\n","Sets the policy governing whether core threads may time out and\n            terminate if no tasks arrive within the keep-alive time, being\n            replaced if needed when new tasks arrive.":"制定管理核心线程是否可能超时的策略和\r\n            如果没有任务在保持时间的时间内，则终止\r\n            新任务到达时需要替换。\r\n","The system identifier, a URI reference [], for this\n input source.":"系统标识符，URI参考[]\r\n 输入源。\r\n","Returns the total number of uncompressed bytes input so far.":"返回到目前为止未压缩字节的总数。\r\n","java.util.prefs.AbstractPreferences.clear()":"java.util.prefs.abstractpreferences.clear（）\r\n",". The cookie used by the antiforgery system\r\n            is part of a security system that is necessary when using cookie-based authentication. It should be\r\n            considered required for the application to function.\r\n            ":"。抗试验系统使用的饼干\r\n            是使用基于Cookie的身份验证时必需的安全系统的一部分。它应该是\r\n            被认为是该应用程序运行所需的。\r\n            \r\n","Determines the timeout until a connection is etablished.":"确定超时，直到连接被固定为止。\r\n","Releases one hold of the read lock if it is held, without\n            requiring a stamp value.":"如果保留该锁定，则会释放一个读取锁\r\n            需要邮票价值。\r\n","-compliant hostname of\n            this ":" - 组合主机名\r\n            这个\r\n","The prefix reserved for use by HTTP components. \"http.":"保留供HTTP组件使用的前缀。 “ http。\r\n","Discover whether or not this logger is sending its output\n            to its parent logger. -or- Specify whether or not this logger should send its output\n            to its parent Logger.":"发现该记录器是否发送其输出\r\n            到其父记录器。 - 或 - 指定该记录器是否应发送其输出\r\n            到其父记录器。\r\n","This class provides the functionality of a cryptographic cipher for\n            encryption and decryption.":"该课程提供了加密密码的功能\r\n            加密和解密。\r\n"," is an interface that describes an error.":" 是描述错误的接口。\r\n","If the specified resource bundle can not be loaded.\n":"如果无法加载指定的资源捆绑包。\r\n\r\n"," is not able to handle a\n             specific ":" 无法处理\r\n             具体的\r\n","if the specified provider is name is ":"如果指定的提供商是名称是\r\n","Returns true if more input could change a positive match into a\n            negative one.":"如果更多的输入可以将积极匹配更改为\r\n            负一个。\r\n","javax.crypto.spec.RC5ParameterSpec.getVersion()":"javax.crypto.spec.rc5parameterspec.getversion（）\r\n","java.util.concurrent.atomic.AtomicIntegerArray.get(int)":"java.util.concurrent.atomic.atomicintegerarray.get（int）\r\n","This exception is thrown when an output buffer provided by the user\n            is too short to hold the operation result.":"当用户提供输出缓冲区时，会抛出此例外\r\n            太短了，无法保持操作结果。\r\n","One element of an HTTP header's value.":"HTTP标头值的一个元素。\r\n","java.util.jar.JarFile":"java.util.jar.jarfile\r\n"," described by the given ":" 由给定描述\r\n","java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Object)":"java.util.logging.logger.log（java.util.logging.level，java.lang.string，java.lang.Object）\r\n","pSrc":"PSRC\r\n"," being constructed during a SSL/TLS\n            handshake.":" 在SSL/TLS期间构建\r\n            握手。\r\n","org.xml.sax.InputSource.getPublicId()":"org.xml.sax.inputsource.getPublicId（）\r\n"," from the\n ":" 来自\r\n \r\n","Choose an alias to authenticate the client side of a secure\n            socket given the public key type and the list of\n            certificate issuer authorities recognized by the peer (if any).":"选择一个别名来验证安全的客户端\r\n            插座给定公共密钥类型和列表\r\n            证书发行人当局由同伴认可（如果有）。\r\n","Creates a new response.":"创建一个新的响应。\r\n","406 Not Acceptable":"406不可接受\r\n","Completes the MAC computation and resets the MAC for further use,\n            maintaining the secret key that the MAC was initialized with.":"完成MAC计算并重置Mac以供进一步使用，\r\n            保持Mac被初始化的秘密键。\r\n","status":"地位\r\n","\r\n            Determines whether the authentication state is still valid.\r\n            ":"\r\n            确定身份验证状态是否仍然有效。\r\n            \r\n","If implementation cannot support requested values.":"如果实现无法支持请求的值。\r\n","Acquires the given number of permits from this semaphore,\n            blocking until all are available.":"从此信号量获取给定数量的许可证，\r\n            阻止直到所有可用。\r\n","The node is an <code>Attr</code>.":"节点是<code> attr </code>。\r\n","Returns whether this node has any children.":"返回该节点是否有孩子。\r\n"," child or\n   ":" 孩子或\r\n   \r\n","Mode flag to open a zip file for reading.":"模式标志以打开ZIP文件供阅读。\r\n","Removes an attribute by local name and namespace URI.":"通过本地名称和名称空间URI删除属性。\r\n",", in encounter order.":"，在相遇顺序中。\r\n","java.util.zip.ZipException.ZipException(java.lang.String)":"java.util.zip.zipexception.zipexception（java.lang.string）\r\n"," for a particular name.\r\n            ":" 对于特定名称。\r\n            \r\n"," filter to decompress data.":" 过滤到解压缩数据。\r\n","java.util.prefs.Preferences.parent()":"java.util.prefs.preferences.parent（）\r\n","Response interceptor that populates the current ":"填充电流的响应拦截器\r\n","Get event time in milliseconds since 1970. -or- Set event time.":"自1970年以来，以毫秒为单位获取活动时间。\r\n","The class fingerprint that is set to indicate serialization\n            compatibility since J2SE 1.":"设置为序列化的类指纹\r\n            自J2SE 1以来的兼容性。\r\n","java.util.concurrent.ThreadPoolExecutor.setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler)":"java.util.concurrent.threadpoolexecutor.setRejectedExecutionHandler（java.util.concurrent.rejectedexecutionhandler）\r\n","org.xml.sax.ext.Attributes2Impl":"org.xml.sax.ext.attributes2impl\r\n","Obtain a new instance of a <code>DatatypeFactory</code>.":"获取<code> datatypefactory </code>的新实例。\r\n","404 Not Found":"404找不到\r\n","org.apache.http.conn.ssl.SSLSocketFactory.isSecure(java.net.Socket)":"org.apache.http.conn.ssl.sslsocketfactory.issecure（java.net.socket）\r\n"," value ":" 价值\r\n","M:Java.Util.Concurrent.Locks.AbstractQueuedSynchronizer.get_IsHeldExclusively":"m：java.util.concurrent.locks.abstractqueuedsynchronizer.get_isheldexclusational\r\n","java.util.concurrent.RunnableScheduledFuture":"java.util.concurrent.runnablescheduledfuture\r\n","Updates the status line of this response with a new status code.":"使用新的状态代码更新此响应的状态行。\r\n","Detects EOF and notifies the watcher.":"检测EOF并通知观察者。\r\n","java.util.logging.ErrorManager.OPEN_FAILURE":"java.util.logging.errormanager.open_failure\r\n","java.util.logging.FileHandler.FileHandler(java.lang.String)":"java.util.logging.filehandler.filehandler（java.lang.string）\r\n","\r\n            Gets or sets the type of the layout in which to display the content.\r\n            The type must implement ":"\r\n            获取或设置显示内容的布局类型。\r\n            类型必须实现\r\n","Returns the base generator <code>g</code>.":"返回基本发电机<code> g </code>。\r\n","The <code>NameList</code> interface provides the abstraction of an ordered\n            collection of parallel pairs of name and namespace values (which could be\n            null values), without defining or constraining how this collection is\n            implemented.":"<code> namelist </code>接口提供了有序的抽象\r\n            平行对名称和名称空间值的收集（可以是\r\n            null值），不定义或限制该集合的方式\r\n            实施的。\r\n"," node.\n   ":" 节点。\r\n   \r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            to the given Java <code>float</code> value.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            到给定的Java <code> float </code>值。\r\n","Value for eighth month of year.":"八个月的价值。\r\n","Create a new <code>TransformerConfigurationException</code> with a\n            given <code>Exception</code> base cause of the error.":"使用一个新的<code> transformerConfigurationException </code>\r\n            给定<code>异常</code>错误的基本原因。\r\n","\r\n            Context object passed to the ":"\r\n            上下文对象传递给\r\n","if the salt is empty, iteration count is zero or negative or\n             the key length is zero or negative.\n":"如果盐为空，则迭代计数为零或负数或\r\n             关键长度为零或负数。\r\n\r\n","The <code>Attr</code> interface represents an attribute in an\n            <code>Element</code> object.":"<code> attr </code>接口表示一个属性\r\n            <code>元素</code>对象。\r\n","java.util.concurrent.atomic.AtomicLongArray.incrementAndGet(int)":"java.util.concurrent.atomic.atomiclongarray.incrementandget（int）\r\n","\r\n            Dispatches external actions to be executed on the context of a ":"\r\n            派遣在某个上下文中执行的外部操作\r\n","\r\n            Controls how much time the authentication ticket stored in the cookie will remain valid from the point it is created\r\n            The expiration information is stored in the protected cookie ticket. Because of that an expired cookie will be ignored\r\n            even if it is passed to the server after the browser should have purged it.\r\n            ":"\r\n            控制cookie中存储的身份验证票的时间将从创建的点保持有效\r\n            到期信息存储在受保护的饼干票中。因此，将忽略过期的饼干\r\n            即使在浏览器应清除后将其传递给服务器。\r\n            \r\n","A package-local class holding common representation and mechanics\n            for classes supporting dynamic striping on 64bit values.":"包裹 - 本地类，持有共同表示和力学\r\n            对于支持64位值的动态条带的类。\r\n","\r\n            when no IAuthorizeData have been provided. As a result, the AuthorizationMiddleware uses the fallback policy\r\n            if there are no ":"\r\n            如果没有提供iauthorizedata。结果，授权middleware使用后回来策略\r\n            如果没有\r\n","Create a new SAX parser object using the class name provided.":"使用提供的类名来创建一个新的SAX解析器对象。\r\n","Log a FINEST message.":"记录最好的消息。\r\n","ExemptionMechanismSpi":"豁免机械学\r\n","Returns a new CompletionStage that, when either this or the\n            other given stage complete normally, is executed with the\n            corresponding result as argument to the supplied function.":"返回一个新的完整舞台，当\r\n            其他给定的阶段正常完成，用\r\n            相应的结果作为参数与所提供的函数。\r\n","\r\n            The total number of bytes written with this writer.\r\n            Backing field for the ":"\r\n            与该作者编写的字节总数。\r\n            支持领域\r\n","org.xml.sax.ext.Attributes2.isSpecified(int)":"org.xml.sax.ext.attributes2.isspecified（int）\r\n","javax.sql.RowSet.setSQLXML(int, java.sql.SQLXML)":"javax.sql.Rowset.Setsqlxml（int，java.sql.sqlxml）\r\n","javax.net.ssl.SSLEngineResult.getStatus()":"javax.net.ssl.sslengineresult.getstatus（）\r\n","A mix-in style interface for marking objects that should be\n            acted upon after a given delay.":"用于标记对象的混合样式接口\r\n            给定延迟后采取行动。\r\n","Create a Java representation of XML Schema builtin datatype <code>date</code> or <code>g*</code>.":"创建XML schema indentin datatype <code> date </code>或<code> g*</code>的Java表示。\r\n","java.util.concurrent.ConcurrentMap.replace(java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.concurrent.concurrentmap.replace（java.lang.object，java.lang.object，java.lang.object）\r\n","javax.sql.RowSetInternal.setMetaData(javax.sql.RowSetMetaData)":"javax.sql.RowsetInternal.setMetadata（Javax.sql.RowsetMetadata）\r\n","javax.xml.datatype.DatatypeFactory.DatatypeFactory()":"javax.xml.datatype.datatypefactory.datatypefactory（）\r\n","Finishes writing compressed data to the output stream without closing\n            the underlying stream.":"完成将压缩数据写入输出流而无需关闭\r\n            基础流。\r\n","Returns the name to which the object is being bound, or the name\n            from which the object is being unbound.":"返回对象绑定的名称或名称\r\n            物体从中取消结合。\r\n","Returns an empty iterator in which ":"返回一个空的迭代器\r\n","Returns the local part of the qualified name of this node.":"返回该节点的合格名称的本地部分。\r\n","hasNext":"hasnext\r\n","<code>XPathVariableResolver</code> provides access to the set of user defined XPath variables.":"<code> XPathVariableresolver </code>提供了对用户定义的XPATH变量集的访问。\r\n",", implemented as\r\n            a function that returns a ":"，实施为\r\n            返回a的函数\r\n","An HTTP response.":"HTTP响应。\r\n","\r\n            Marks the array as empty, also shrinking the underlying storage if it was\r\n            not being used to near its full capacity.\r\n            ":"\r\n            将数组标记为空，也会缩小基础存储\r\n            不用习惯其全部容量。\r\n            \r\n","java.util.zip.ZipFile.ZipFile(java.io.File, java.nio.charset.Charset)":"java.util.zip.zipfile.zipfile（java.io.file，java.nio.charset.Charset）\r\n",",\r\n            causing it to be displayed in the specified DOM element.\r\n            ":"，，，，\r\n            导致它显示在指定的DOM元素中。\r\n            \r\n","The interface that a <code>RowSet</code> object implements in order to\n            present itself to a <code>RowSetReader</code> or <code>RowSetWriter</code>\n            object.":"<code> rowset </code>对象实现的接口\r\n            向<code> RowsetReader </code>或<code> RowsetWriter </code>呈现自己\r\n            目的。\r\n","\r\n            A ClaimAction that deletes all claims from the given ClaimsIdentity with the given ClaimType.\r\n            ":"\r\n            通过给定的索赔类型从给定的索赔身份中删除所有索赔的主张。\r\n            \r\n","if the specified host is unknown or the IP address could not\n             be resolved.\n":"如果指定的主机未知或IP地址无法\r\n             解决。\r\n\r\n","Returns the regular expression from which this pattern was compiled.":"返回该模式被编译的正则表达式。\r\n","javax.xml.datatype.DatatypeConstants.INDETERMINATE":"javax.xml.datatype.datatypeconstants.determinate\r\n","\r\n            Notifies the renderer that an event has occurred.\r\n            ":"\r\n            通知渲染器发生事件。\r\n            \r\n","\r\n            Identifies the field whose value has changed.\r\n            ":"\r\n            标识其价值已更改的字段。\r\n            \r\n","Returns the uncompressed size of the entry data. -or- Sets the uncompressed size of the entry data.":"返回输入数据的未压缩大小。 - 或设置输入数据的未压缩大小。\r\n","java.util.concurrent.atomic.AtomicLongArray.weakCompareAndSet(int, long, long)":"java.util.concurrent.atomic.atomiclongarray.weakcompareandset（int，long，long）\r\n","Indicates an unsupported version of the HTTP protocol.":"表示HTTP协议的不支持版本。\r\n","\r\n            Provides access to the normal system clock with precision in seconds.\r\n            ":"\r\n            提供对正常系统时钟的访问，并在几秒钟内精确地访问。\r\n            \r\n","java.util.zip.ZipEntry.getTime()":"java.util.zip.zipentry.getTime（）\r\n"," should be active when it matches the entire\r\n            current URL.\r\n            ":" 与整个匹配时应该活跃\r\n            当前URL。\r\n            \r\n","Creates and executes a one-shot action that becomes enabled\n after the given delay.":"创建并执行一个启用的单发操作\r\n 给定的延迟之后。\r\n"," to be used per default.":" 要使用的每个默认值。\r\n","\r\n            Gets the value of the ":"\r\n            获取价值\r\n","<code>XPathFunction</code> provides access to XPath functions.":"<code> XPathFunction </code>提供对XPath功能的访问。\r\n"," do not specify a valid chunk in the\n             specified buffer.":" 不要在\r\n             指定的缓冲区。\r\n","Instances of this class represent a secure socket protocol\n            implementation which acts as a factory for secure socket\n            factories or <code>SSLEngine</code>s.":"此类的实例代表安全套接字协议\r\n            实施，充当安全套筒的工厂\r\n            工厂或<code> sslengine </code> s。\r\n","Attempts to encode a buffer of plaintext application data into\n            SSL/TLS network data.":"试图将明文应用程序数据的缓冲区编码为\r\n            SSL/TLS网络数据。\r\n","Atomically increments by one the current value.":"在原子上增加一个当前值。\r\n","Returns the current handler for unexecutable tasks. -or- Sets a new handler for unexecutable tasks.":"返回当前处理程序以进行无法执行的任务。 - 或 - 设置一个新的处理程序，用于无法执行的任务。\r\n","Returns a short text describing the current parser state, including\n the position, a\n description of the current event and the data source if known.":"返回描述当前解析器状态的简短文字，包括\r\n 位置，一个\r\n 当前事件的描述和数据源（如果已知）。\r\n"," containing the attributes of this node (if\n it is an ":" 包含此节点的属性（如果\r\n 它是一个\r\n","java.util.concurrent.CountDownLatch CountDownLatch":"java.util.concurrent.countdownlatch countdownlatch\r\n","Return an attribute's Namespace URI.":"返回属性的名称空间URI。\r\n"," with no name/value mappings.":" 没有名称/值映射。\r\n","java.util.jar.Manifest.Manifest(java.util.jar.Manifest)":"java.util.jar.manifest.manifest（java.util.jar.manifest）\r\n","javax.sql.RowSet.setType(int)":"javax.sql.Rowset.setType（int）\r\n","Creates a new NonRepeatableEntityException with the specified detail message.":"使用指定的详细信息创建一个新的非重复性Exception。\r\n","org.xml.sax.helpers.NamespaceSupport.getPrefix(java.lang.String)":"org.xml.sax.helpers.namespacesupport.getprefix（java.lang.string）\r\n","If the document's schema is an XML Schema []\n , this constant represents the  if simple types are involved.":"如果文档的模式是XML模式[]\r\n ，该常数表示涉及简单类型。\r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            with the given  <code>Array</code> value.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            带有给定的<code>数组</code>值。\r\n","Construct a StreamResult from a character stream.":"从字符流构造流媒体。\r\n","Reports the end index (exclusive) of this matcher's region.":"报告该匹配项区域的结尾索引（独家）。\r\n","Parse the given cookie attribute value and update the corresponding\n ":"解析给定的cookie属性值并更新相应的\r\n \r\n","java.util.concurrent.ThreadPoolExecutor":"java.util.concurrent.threadpoolexecutor\r\n","<code>QName</code> constructor specifying the local part.":"<code> qname </code>构造函数指定本地零件。\r\n","javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendarTime(int, int, int, int)":"javax.xml.datatype.datatypefactory.newxmlgregoriancalendartime（int，int，int，int，int）\r\n","javax.xml.validation.SchemaFactory.newSchema(javax.xml.transform.Source)":"javax.xml.validation.schemafactory.newschema（javax.xml.transform.source）\r\n","java.util.function.IntUnaryOperator.applyAsInt(int)":"java.util.function.intunaryoperator.applyasint（int）\r\n","\n         implementation does not support conditions\n":"\r\n         实施不支持条件\r\n\r\n","W3C XPath Datatype Namespace URI.":"W3C XPATH数据类型名称空间URI。\r\n","java.util.regex.Matcher.quoteReplacement(java.lang.String)":"java.util.regex.matcher.quotereplacement（java.lang.string）\r\n","If an invalid or illegal character is specified, such as in an XML name.":"如果指定了无效或非法字符，例如在XML名称中。\r\n","java.util.concurrent.Phaser.Phaser(int)":"java.util.concurrent.phaser.phaser（int）\r\n","java.util.regex.Pattern.LITERAL":"java.util.regex.pattern.literal\r\n"," if this field is not defined.":" 如果未定义此字段。\r\n","java.util.zip.ZipOutputStream.setComment(java.lang.String)":"java.util.zip.zipoutputstream.setcomment（java.lang.string）\r\n","\r\n            and once each for each reconnect during the lifetime of a circuit.\r\n            ":"\r\n            在电路的寿命中，每个重新连接一次。\r\n            \r\n","java.util.regex.Pattern.CANON_EQ":"java.util.regex.pattern.canon_eq\r\n","This class is the base interface for hostname verification.":"此类是主机名验证的基本接口。\r\n","304 Not Modified":"304未修改\r\n","javax.net.ssl.HandshakeCompletedEvent":"Javax.net.ssl.HandShakeCompletedEvent\r\n","javax.crypto.NoSuchPaddingException.NoSuchPaddingException()":"javax.crypto.nosuchpaddingexception.nosuchpaddingexception（）\r\n","java.util.zip.ZipEntry.getMethod()":"java.util.zip.zipentry.getmethod（）\r\n","Returns the DES-EDE key.":"返回DES-EDE键。\r\n","Checks if this connection is open.":"检查此连接是否打开。\r\n","javax.net.ssl.HttpsURLConnection":"javax.net.ssl.httpsurlconnection\r\n","Allows applications to provide an external subset for documents\n            that don't explicitly define one.":"允许应用程序为文档提供外部子集\r\n            那没有明确定义一个。\r\n","java.util.function.IntToDoubleFunction.applyAsDouble(int)":"java.util.function.inttodoublefunction.applyasdouble（int）\r\n","\r\n            Indicates that the preceding series of ":"\r\n            表示前面的一系列\r\n"," which represents the combination of the\r\n            authorization policies provided by the specified ":" 代表组合\r\n            指定提供的授权政策\r\n","in case of an I/O problem\n":"如果有I/O问题\r\n\r\n","This class specifies a Diffie-Hellman private key with its associated\n            parameters.":"该课程指定了及其关联的Diffie-Hellman私钥\r\n            参数。\r\n","Preferences#childrenNames()":"首选项＃childresnames（）\r\n","<code>HttpsURLConnection</code> extends <code>HttpURLConnection</code>\n            with support for https-specific features.":"<code> httpsurlConnection </code>扩展<code> httpurlConnection </code>\r\n            支持HTTPS特定功能。\r\n","if argument is null":"如果参数为null\r\n","HttpParams":"httpparams\r\n","DOMImplementation":"圆顶\r\n","InputSource":"Inputsource\r\n","Gets the default static <code>SSLSocketFactory</code> that is\n            inherited by new instances of this class. -or- Sets the default <code>SSLSocketFactory</code> inherited by new\n            instances of this class.":"获取默认静态<code> sslsocketFactory </code>是\r\n            由该课程的新实例继承。 - 或 - 设置默认<code> sslsocketFactory </code>由新的\r\n            该课程的实例。\r\n","java.util.concurrent.atomic.AtomicLong.getAndSet(long)":"java.util.concurrent.atomic.atomiclong.getandset（long）\r\n","Indicates whether or not the factory is configured to produce\n            parsers which expand entity reference nodes. -or- Specifies that the parser produced by this code will\n            expand entity reference nodes.":"指示工厂是否配置为生产\r\n            扩展实体参考节点的解析器。 - 或 - 指定该代码产生的解析器将\r\n            扩展实体参考节点。\r\n","java.util.concurrent.locks.StampedLock.tryReadLock()":"java.util.concurrent.locks.stampedlock.trreadlock（）\r\n","Initializes this factory with a source of provider-specific\n            key material.":"用特定于提供商的来源初始化该工厂\r\n            关键材料。\r\n","Constructs a <code>ZipException</code> with the specified detail\n            message.":"用指定的详细信息构造<code> zipexception </code>\r\n            信息。\r\n","\r\n            Gets the backing array, when using an ":"\r\n            使用后退阵列，使用\r\n"," attribute and ":" 属性和\r\n","\r\n            Checks if a user meets a specific authorization policy.\r\n            ":"\r\n            检查用户是否符合特定的授权策略。\r\n            \r\n","org.json.JSONArray.put(int, double)":"org.json.jsonarray.put（int，double）\r\n","\r\n            Produces an ":"\r\n            产生一个\r\n","javax.xml.transform.TransformerConfigurationException.TransformerConfigurationException()":"javax.xml.transform.transformerconfigurationException.transFormerConfigurationException（）\r\n"," struct.\r\n            ":" 结构。\r\n            \r\n","\r\n            This value determines the maximium duration circuit state is retained by the server before being evicted.\r\n            ":"\r\n            该值确定在被驱逐之前，服务器保留了最大持续时间电路状态。\r\n            \r\n","javax.xml.transform.dom.DOMSource":"javax.xml.transform.domsource\r\n","\r\n            Identifies the component whose render tree contains the affected form field.\r\n            ":"\r\n            标识其渲染树包含受影响的表单字段的组件。\r\n            \r\n","javax.net.ssl.SSLSocket.SSLSocket(java.net.InetAddress, int, java.net.InetAddress, int)":"javax.net.ssl.sslsocket.sslsocket（java.net.inetaddress，int，java.net.inetaddress，int）\r\n","Returns linger-on-close timeout.":"返回连续暂停的超时。\r\n","#declarePrefix\n            declarePrefix()":"#declareprefix\r\n            declareprefix（）\r\n","Returns an estimate of the number of threads waiting to acquire.":"返回等待收购的线程数量的估计。\r\n","java.util.concurrent.LinkedBlockingDeque":"java.util.concurrent.linkedblockingdeque\r\n","Create a new <code>Transformer</code> that performs a copy\n            of the <code>Source</code> to the <code>Result</code>.":"创建一个执行副本的新<code>变压器</code>\r\n            <code>源</code>的<code>结果</code>。\r\n","Reports the start index of this matcher's region.":"报告该匹配项区域的开始索引。\r\n","org.xml.sax.Attributes.getQName(int)":"org.xml.sax.attributes.getQname（int）\r\n","\r\n            This value determines the maximium number of circuit states retained by the server.\r\n            ":"\r\n            该值决定了服务器保留的最大电路状态。\r\n            \r\n","org.xmlpull.v1.XmlPullParser.setProperty(java.lang.String, java.lang.Object)":"org.xmlpull.v1.xmlpullparser.setProperty（java.lang.string，java.lang.object）\r\n","Returns true if this object has a mapping for ":"如果此对象有一个映射，则返回true\r\n","Obtain a new instance of a <code>Duration</code>\n            specifying the <code>Duration</code> as milliseconds.":"获取<code>持续时间</code>的新实例\r\n            将<code>持续时间</code>指定为毫秒。\r\n","Basic authentication scheme as defined in RFC2617 (considered inherently\n insecure, but most widely supported)\n":"RFC2617中定义的基本身份验证方案（固有考虑\r\n 不安全，但最广泛的支持）\r\n\r\n","java.util.concurrent.CompletionStage.thenCombine(java.util.concurrent.CompletionStage, java.util.function.BiFunction)":"java.util.concurrent.completionstage.thencombine（java.util.concurrent.completionstage，java.util.function.bifunction）\r\n","java.util.concurrent.locks.AbstractOwnableSynchronizer":"java.util.concurrent.locks.abstractownablessynchronizer\r\n","javax.net.ssl.SSLContext.getSupportedSSLParameters()":"javax.net.ssl.sslcontext.getsupportedsslparameters（）\r\n","java.util.concurrent.CompletionStage.thenComposeAsync(java.util.function.Function)":"java.util.concurrent.completionstage.thencomposync（java.util.function.function.function）\r\n","A request interceptor that adds a User-Agent header.":"添加用户代理标头的请求拦截器。\r\n","org.w3c.dom.Node":"org.w3c.dom.node\r\n","Inserts the node <code>newChild</code> before the existing child node\n            <code>refChild</code>.":"在现有子节点之前插入节点<code> newchild </code>\r\n            <code> RefChild </code>。\r\n","This method is called whenever the node for which this handler is\n            registered is imported or cloned.":"每当此处理程序的节点是\r\n            注册是导入或克隆的。\r\n","javax.net.ssl.X509ExtendedTrustManager.checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String, java.net.Socket)":"javax.net.ssl.x509 extendedTrustManager.CheckServerTrusted（java.security.cert.cert.x509certificate []，java.lang.string，java.net.socket）\r\n","SAX2 extension helper for holding additional Entity information,\n            implementing the ":"SAX2扩展助手用于持有其他实体信息，\r\n            实施\r\n","String data to parse.":"弦数据解析。\r\n","Returns the length in bytes that an output buffer would need to be in\n            order to hold the result of the next <code>update</code> or\n            <code>doFinal</code> operation, given the input length\n            <code>inputLen</code> (in bytes).":"返回输出缓冲区需要在的字节中的长度\r\n            为了保留下一个<code>更新</code>或\r\n            <code>多final</code>操作，给定输入长度\r\n            <code> inputlen </code>（在字节中）。\r\n","org.w3c.dom.UserDataHandler.NODE_DELETED":"org.w3c.dom.userdatahandler.node_deleted\r\n","\r\n            Contains extension methods for two-way binding using ":"\r\n            包含用于双向绑定的扩展方法\r\n","javax.xml.datatype.DatatypeFactory.newDurationDayTime(java.lang.String)":"javax.xml.datatype.datatypefactory.newdurationdaytime（java.lang.string）\r\n","\r\n            Validates that the currently executing code is running inside the dispatcher.\r\n            ":"\r\n            验证当前执行代码在调度程序内部运行。\r\n            \r\n","org.w3c.dom.ls.LSParserFilter.FILTER_REJECT":"org.w3c.dom.ls.lsparserfilter.filter_reject\r\n","Set the type of a specific attribute.":"设置特定属性的类型。\r\n","javax.crypto.spec.RC5ParameterSpec.RC5ParameterSpec(int, int, int)":"javax.crypto.spec.rc5parameterspec.rc5parameterspec（int，int，int）\r\n","\r\n            Gets a value that indicates whether the delegate associated with this event dispatcher is non-null.\r\n            ":"\r\n            获取一个指示与此事件调度程序关联的委托是否为非null的值。\r\n            \r\n","Returns the host name of the peer.":"返回同伴的主机名。\r\n","org.xml.sax.ext.LexicalHandler.endCDATA()":"org.xml.sax.ext.lexicalhandler.endcdata（）\r\n","If the document's schema is an XML Schema []\n , this constant represents the .":"如果文档的模式是XML模式[]\r\n ，这个常数代表。\r\n","bytesProduces":"Bytesproduces\r\n","java.util.concurrent.atomic.AtomicReferenceFieldUpdater.get(java.lang.Object)":"java.util.concurrent.atomic.atomicreference fieldupdater.get（java.lang.object）\r\n","javax.net.ssl.SSLServerSocket.setSSLParameters(javax.net.ssl.SSLParameters)":"javax.net.ssl.sslserversocket.setsslparameters（javax.net.ssl.sslparameters）\r\n","Filter an end document event.":"过滤最终文档事件。\r\n","Constructs a GCMParameterSpec using the specified authentication\n            tag bit-length and IV buffer.":"使用指定的身份验证构建GCMParametersPec\r\n            标签位长度和IV缓冲区。\r\n","Set time as one unit, including optional milliseconds.":"将时间设置为一个单元，包括可选的毫秒。\r\n","\r\n            Implements an ":"\r\n            实施一个\r\n","java.util.concurrent.Semaphore.tryAcquire()":"java.util.concurrent.semaphore.tryacquire（）\r\n"," type responsible for this scheme.\r\n            ":" 负责此方案的类型。\r\n            \r\n","Returns a <code>Cipher</code> object that implements the specified\n            transformation.":"返回<code> cipher </code>实现指定的对象\r\n            转型。\r\n",", or if its value\n            is the ":"，或者它的价值\r\n            是个\r\n","Creates a new CircularRedirectException with the specified detail message and cause.":"使用指定的详细信息和原因创建一个新的圆形雷克电位感。\r\n","Inserts the specified element at the tail of this queue, waiting if\n            necessary for space to become available.":"将指定元素插入该队列的尾部，等待\r\n            空间可用所必需的。\r\n","org.xml.sax.helpers.AttributesImpl.getQName(int)":"org.xml.sax.helpers.attributesimpl.getQname（int）\r\n","javax.sql.RowSet.setCharacterStream(java.lang.String, java.io.Reader)":"javax.sql.Rowset.setCharacterstream（java.lang.string，java.io.reader）\r\n","Thread#sleep(long, int) Thread.sleep":"线程＃睡眠（长，int）线程。\r\n","org.json.JSONArray.put(int, boolean)":"org.json.jsonarray.put（int，boolean）\r\n","Compression flush mode used to achieve best compression result.":"压缩冲洗模式用于获得最佳压缩结果。\r\n","An output stream that also maintains a checksum of the data being\n            written.":"输出流，该流也维护数据的校验和\r\n            书面。\r\n","javax.crypto.SealedObject.getObject(javax.crypto.Cipher)":"javax.crypto.sealedobject.getObject（javax.crypto.cipher）\r\n","org.json.JSONObject.getJSONObject(java.lang.String)":"org.json.jsonobject.getjsonobject（java.lang.string）\r\n","\r\n            Gets or sets the current base URI. The ":"\r\n            获取或设置当前的基础URI。这\r\n","java.util.function.ObjDoubleConsumer.accept(java.lang.Object, double)":"java.util.function.objdoubleconsumer.accept（java.lang.Object，double）\r\n","Retrieves an attribute value by name.":"按名称检索属性值。\r\n","org.xml.sax.helpers.NamespaceSupport.popContext()":"org.xml.sax.helpers.namespacesupport.popcontext（）\r\n","Create a new instance of an <code>XMLGregorianCalendar</code>.":"创建<code> XMLGregorianCalendar的新实例</code>。\r\n","if the specified cipher mode is not supported by this\n             provider.\n":"如果不支持指定的密码模式\r\n             提供者。\r\n\r\n","java.util.concurrent.atomic.AtomicInteger.accumulateAndGet(int, java.util.function.IntBinaryOperator)":"java.util.concurrent.Atomic.AtomicInteger.accumulateandget（int，java.util.function.intbinaryoperator）\r\n","may contain whitespace or\n comments. ":"可能包含空格或\r\n 注释。\r\n","java.util.concurrent.atomic.AtomicIntegerFieldUpdater.weakCompareAndSet(java.lang.Object, int, int)":"java.util.concurrent.atomic.atomicintegerfieldupdater.weakcompareandset（java.lang.object，int，int）\r\n","UNWRAP_MODE":"unwrap_mode\r\n","java.util.jar.Manifest.clear()":"java.util.jar.manifest.clear（）\r\n","Indicates that an HTTP method is not supported.":"表示不支持HTTP方法。\r\n","java.util.concurrent.atomic.AtomicLongArray.accumulateAndGet(int, long, java.util.function.LongBinaryOperator)":"java.util.concurrent.atomic.atomiclongarray.accumulateandget（int，long，java.util.function.function.longbinaryoperator）\r\n","Generates a <code>SecretKey</code> object from the provided key\n            specification (key material).":"从提供的密钥中生成<code> secretkey </code>对象\r\n            规格（关键材料）。\r\n","Returns the number of bytes trasferred.":"返回字节数的数量。\r\n","#convert(long, TimeUnit) NANOSECONDS.convert(duration, this)":"#convert（long，timeunit）nanoseconds.convert（持续时间，此）\r\n","javax.xml.validation.Validator.reset()":"javax.xml.validation.validator.reset（）\r\n"," buffer.\n":" 缓冲。\r\n\r\n","\r\n            Clears any current ClaimsActions and maps all values from the json user data as claims, excluding duplicates.\r\n            ":"\r\n            清除当前的索赔行为并将JSON用户数据中的所有值映射为索赔，不包括重复项。\r\n            \r\n","if encoding this object fails.\n":"如果编码此对象失败。\r\n\r\n","Returns the sign of this duration in -1,0, or 1.":"返回该持续时间为-1,0或1的符号。\r\n"," if it exists, coercing it if\n            necessary.":" 如果存在，请强迫它\r\n            必要的。\r\n","\r\n            A component that provides a cascading value to all descendant components.\r\n            ":"\r\n            为所有后代组件提供级联值的组件。\r\n            \r\n"," node is a child\n   of the ":" 节点是孩子\r\n   的\r\n","javax.crypto.spec.PBEKeySpec.clearPassword()":"javax.crypto.spec.pbekeyspec.clearpassword（）\r\n","java.util.regex.Matcher.requireEnd()":"java.util.regex.matcher.requireend（）\r\n","Sets the response interceptors in this list.":"在此列表中设置响应拦截器。\r\n","org.xml.sax.helpers.ParserAdapter.getErrorHandler()":"org.xml.sax.helpers.parseradapter.getErrorhandler（）\r\n","\r\n            Affects whether cookies must be Secure.\r\n            ":"\r\n            影响cookie是否必须安全。\r\n            \r\n","javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendar(java.math.BigInteger, int, int, int, int, int, java.math.BigDecimal, int)":"javax.xml.datatype.datatypefactory.newxmlgregoriancalendar（java.math.biginteger，int，int，int，int，int，int，int，int，int，java.math.bigdecimal，int）\r\n","Locator":"定位器\r\n","javax.crypto.MacSpi.clone()":"javax.crypto.macspi.clone（）\r\n","javax.sql.RowSet.setObject(java.lang.String, java.lang.Object, int, int)":"javax.sql.Rowset.setObject（java.lang.string，java.lang.object，int，int）\r\n","java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndAdd(java.lang.Object, long)":"java.util.concurrent.atomic.atomiclongfieldupdater.getandadd（java.lang.Object，long）\r\n","javax.sql.RowSet.setString(java.lang.String, java.lang.String)":"javax.sql.Rowset.SetString（java.lang.string，java.lang.string）\r\n","Resets deflater so that a new set of input data can be processed.":"重置放气，以便可以处理一组新的输入数据。\r\n"," by applying a mapping function to\n            each input element before accumulation.":" 通过将映射功能应用于\r\n            累积之前的每个输入元素。\r\n","javax.crypto.spec.DESedeKeySpec.DESedeKeySpec(byte[], int)":"javax.crypto.spec.desedekeyspec.desedekeyspec（byte []，int）\r\n","java.util.logging.Logger.getLevel()":"java.util.logging.logger.getlevel（）\r\n","Returns the provider of this <code>TrustManagerFactory</code> object.":"返回此<code> TrustManagerFactory </code>对象的提供商。\r\n","javax.sql.RowSet.setLong(java.lang.String, long)":"javax.sql.Rowset.setlong（java.lang.string，长）\r\n","Atomically sets the element at position ":"原子在位置设置元素\r\n","Initializes this <code>Mac</code> object with the given key.":"用给定密钥初始化此<code> Mac </code>对象。\r\n","java.util.zip.Inflater.reset()":"java.util.zip.inflater.reset（）\r\n","javax.net.ssl.SNIServerName.getEncoded()":"javax.net.ssl.sniservername.getencoded（）\r\n","if the argument has a different protocol name than this object,\n         or if the argument is ":"如果参数具有与此对象不同的协议名称，则\r\n         或如果论点是\r\n","org.json.JSONObject.optJSONArray(java.lang.String)":"org.json.jsonobject.optjsonarray（java.lang.string）\r\n","java.util.concurrent.locks.StampedLock.asReadLock()":"java.util.concurrent.locks.stampedlock.asreadlock（）\r\n","\r\n            Specifies whether to suppress the generation of X-Frame-Options header\r\n            which is used to prevent ClickJacking. By default, the X-Frame-Options\r\n            header is generated with the value SAMEORIGIN. If this setting is 'true',\r\n            the X-Frame-Options header will not be generated for the response.\r\n            ":"\r\n            指定是否抑制X帧选项标头的生成\r\n            用于防止点击夹克。默认情况下，X框架选项\r\n            标头与值sameorigin生成。如果此设置为“ true”，\r\n            将不会为响应生成X框架标头。\r\n            \r\n","javax.crypto.Mac.init(java.security.Key)":"javax.crypto.mac.init（java.security.key）\r\n","An attribute of a language and binding dependent type that represents\n a stream of 16-bit units.":"语言的属性和代表绑定的依赖类型\r\n 16位单元的流。\r\n"," which returns the greater of two elements\n            according to the specified ":" 返回两个要素中的较大\r\n            根据指定的\r\n","javax.xml.datatype.Duration.getField(javax.xml.datatype.Field)":"javax.xml.datatype.duration.getfield（javax.xml.datatype.field）\r\n","java.util.zip.Adler32.Adler32()":"java.util.zip.adler32.adler32（）\r\n","javax.net.ssl.SNIMatcher":"javax.net.ssl.snimatcher\r\n","java.util.function.LongPredicate.test(long)":"java.util.function.longpredicate.test（long）\r\n","java.util.jar.JarFile.MANIFEST_NAME":"java.util.jar.jarfile.manifest_name\r\n","org.w3c.dom.DOMException.NO_MODIFICATION_ALLOWED_ERR":"org.w3c.dom.domexception.no_modification_allowed_err\r\n","javax.net.ssl.SSLSocketFactory.SSLSocketFactory()":"javax.net.ssl.sslsocketFactory.sslsocketFactory（）\r\n","INVALID_CHARACTER_ERR: Raised if the specified\n   ":"Invalid_character_err：如果指定了\r\n   \r\n","java.util.logging.LogRecord.setParameters(java.lang.Object[])":"java.util.logging.logrecord.setParameters（java.lang.object []）\r\n","\r\n            Denotes the target member as a cascading component parameter. Its value will be\r\n            supplied by the closest ancestor ":"\r\n            表示目标构件为级联组件参数。它的价值将是\r\n            由最亲密的祖先提供\r\n"," that contains all children of this node.":" 其中包含该节点的所有孩子。\r\n","204 No Content":"204没有内容\r\n","Sets whether the designated column is a cash value.":"设置指定的列是否为现金价值。\r\n","\r\n            Validates additional data that was embedded inside an incoming antiforgery\r\n            token.\r\n            ":"\r\n            验证嵌入在传入的抗试验中的其他数据\r\n            令牌。\r\n            \r\n","in case of a protocol or other problem\n":"如果有协议或其他问题\r\n\r\n","\r\n            Types in the Microsoft.AspNetCore.Components.RenderTree are not recommended for use outside\r\n            of the Blazor framework. These types will change in future release.\r\n            ":"\r\n            不建议在Microsoft.aspnetcore.com.ponents.rendertree中使用类型\r\n            大火框架。这些类型将在以后的发布中发生变化。\r\n            \r\n","Controls which particular protocols are enabled for use by\n            accepted connections.":"控件启用了哪些特定协议以供使用\r\n            接受的连接。\r\n","java.util.function.Function.apply(java.lang.Object)":"java.util.function.function.apply（java.lang.Object）\r\n","javax.crypto.ExemptionMechanism.genExemptionBlob(byte[], int)":"javax.crypto.ExemptionMechanism.GenexemptionBlob（byte []，int）\r\n","if failed to connect to the specified host and port.":"如果无法连接到指定的主机和端口。\r\n"," for the management interface\n            for the logging facility.":" 用于管理界面\r\n            用于伐木设施。\r\n","javax.security.cert.Certificate.toString()":"javax.security.cert.certificate.tostring（）\r\n","java.util.prefs.AbstractPreferences.putInt(java.lang.String, int)":"java.util.prefs.abstractpreferences.putint（java.lang.string，int）\r\n"," function.\n":" 功能。\r\n\r\n","Returns a composed predicate that represents a short-circuiting logical\n            OR of this predicate and another.":"返回代表短路逻辑的组成谓词\r\n            或这个谓词和另一个。\r\n","Creates a new input stream with the specified decompressor and a\n            default buffer size.":"使用指定的解压器和一个创建一个新的输入流\r\n            默认缓冲区大小。\r\n","<code>DocumentFragment</code> is a \"lightweight\" or \"minimal\"\n            <code>Document</code> object.":"<code> document fragment </code>是“轻量级”或“最小”\r\n            <code>文档</code>对象。\r\n","This constant specifies that a pattern matches Unix line endings ('\\n')\n only against the '.', '^', and '$' meta characters. ":"该常数指定模式与Unix线结尾（'\\ n'）匹配\r\n 仅针对'。'，'^'和'$'元字符。\r\n","Returns false unless the attribute was declared in the DTD.":"返回错误，除非在DTD中声明属性。\r\n","javax.xml.transform.dom.DOMResult.setNode(org.w3c.dom.Node)":"javax.xml.transform.dom.domresult.setNode（org.w3c.dom.node）\r\n","\r\n            Returns all currently registered ":"\r\n            返回当前注册的所有返回\r\n","org.xml.sax.helpers.AttributesImpl.getIndex(java.lang.String)":"org.xml.sax.helpers.attributesimpl.getIndex（java.lang.string）\r\n","Get the matching aliases for authenticating the client side of a secure\n            socket given the public key type and the list of\n            certificate issuer authorities recognized by the peer (if any).":"获取匹配的别名以对安全的客户端进行身份验证\r\n            插座给定公共密钥类型和列表\r\n            证书发行人当局由同伴认可（如果有）。\r\n","javax.xml.xpath.XPathFunctionException":"javax.xml.xpath.xpathFunctionException\r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            to the given <code>java.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            到给定的<code> Java。\r\n","java.util.concurrent.ScheduledThreadPoolExecutor.scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.scheduledthreadpoolexecutor.scheduleatfixedrate（java.lang.runnable，long，long，long，java.util.concurrent.timeunit）\r\n","javax.net.ssl.SSLContextSpi.engineGetClientSessionContext()":"javax.net.ssl.sslcontextspi.enginegetclientssessionContext（）\r\n","When the\n            XMLReader recognizes the property name but\n            cannot set the requested value.\n":"当。。。的时候\r\n            xmlreader识别属性名称，但是\r\n            无法设置请求的值。\r\n\r\n","Basic implementation of a request with an entity that can be modified.":"具有可以修改的实体的请求的基本实施。\r\n","307 Temporary Redirect":"307临时重定向\r\n","Constructs a parameter set for OAEP padding as defined in\n            the PKCS #1 standard using the specified message digest\n            algorithm <code>mdName</code>, mask generation function\n            algorithm <code>mgfName</code>, parameters for the mask\n            generation function <code>mgfSpec</code>, and source of\n            the encoding input P <code>pSrc</code>.":"构建针对OAEP填充的参数集\r\n            使用指定消息摘要的PKCS＃1标准\r\n            算法<code> mdname </code>，掩码生成功能\r\n            算法<code> mgfname </code>，蒙版的参数\r\n            生成功能<code> mgfspec </code>和\r\n            编码输入p <code> psrc </code>。\r\n","This class specifies the set of parameters used with password-based\n            encryption (PBE), as defined in the\n            <a href=\"http://www.":"此类指定与基于密码的参数集\r\n            加密（PBE），如\r\n            <a href =“ http：//www。\r\n","Receive notification of general document events.":"接收通知通知。\r\n"," attribute specifies the vendor\n of an extension implementation if the applet requires an\n implementation from a specific vendor.":" 属性指定供应商\r\n 如果小程序需要一个扩展的实现\r\n 来自特定供应商的实施。\r\n"," if it exists and is a double or\n            can be coerced to a double, or throws otherwise.":" 如果存在并且是双重或\r\n            可以将双重胁迫或抛出。\r\n","javax.net.ssl.SSLSocket.startHandshake()":"javax.net.ssl.sslsocket.starthandshake（）\r\n","javax.xml.datatype.DatatypeConstants.DATETIME":"javax.xml.datatype.datatypeconstants.dateTime\r\n","javax.security.auth.callback.PasswordCallback.getPrompt()":"javax.security.auth.callback.passwordcallback.getPrompt（）\r\n","java.util.function.ToLongFunction.applyAsLong(java.lang.Object)":"java.util.function.tolongfunction.applyaslong（java.lang.object）\r\n"," which can be used by ":" 可以使用\r\n","\r\n            Estimates the length of the header required for a given string.\r\n            ":"\r\n            估计给定字符串所需的标头的长度。\r\n            \r\n","If the document's schema is an XML Schema []\n , this constant represents the derivation by  if complex types are involved, or a  if simple types are involved.":"如果文档的模式是XML模式[]\r\n ，该常数代表涉及复杂类型的派生，或者涉及简单类型。\r\n","#newXMLFilter(Templates templates)":"#newxmlfilter（模板模板）\r\n","if a parser cannot be created which satisfies the\n requested configuration.\n":"如果无法创建解析器\r\n 请求的配置。\r\n\r\n",".  If no schemes are set, this is a no-op.\r\n            ":"。如果未设置方案，这是一个无操作。\r\n            \r\n","java.util.logging.Logger.getResourceBundle()":"java.util.logging.logger.getResourceBundle（）\r\n","Return the current content handler.":"返回当前内容处理程序。\r\n","Returns a collection containing threads that may be waiting to acquire.":"返回包含可能等待收购的线程的集合。\r\n","if any IO related problems happened.\n":"如果发生任何相关问题。\r\n\r\n","Get an enumeration of known logger names.":"获取已知记录器名称的列举。\r\n","Applies this function to the given arguments.":"将此功能应用于给定的参数。\r\n","if the ASN.1 DER-encoded distinguished name is incorrect\n":"如果ASN.1 der-der编码的杰出名称不正确\r\n\r\n","NOT_SUPPORTED_ERR: Raised when the type of the specified node is\n   neither ":"not_supported_err：指定节点的类型是\r\n   两者都不\r\n","java.util.concurrent.atomic.LongAdder.increment()":"java.util.concurrent.atomic.longadder.increment（）\r\n"," with the given (fixed) capacity.":" 具有给定的（固定）容量。\r\n"," nodes logically-adjacent text\n nodes to this node, concatenated in document order.":" 节点在逻辑上呈现文本\r\n 该节点的节点，按文档顺序串联。\r\n",", allowing underlying security services\n            the ability to interact with a calling application to retrieve specific\n            authentication data such as usernames and passwords, or to display\n            certain information, such as error and warning messages.":"，允许基础安全服务\r\n            与呼叫应用程序互动以检索特定的能力\r\n            身份验证数据，例如用户名和密码，或显示\r\n            某些信息，例如错误和警告消息。\r\n","Get the system identifier that was set with setSystemId. -or- Set the systemID that may be used in association\n            with the byte or character stream, or, if neither is set, use\n            this value as a writeable URI (probably a file name).":"获取使用SetSystemID设置的系统标识符。 - 或设置可以使用的系统ID\r\n            使用字节或字符流，或者，如果没有设置，则使用\r\n            该值为可写的URI（可能是文件名）。\r\n","Notifies this <code>ConnectionEventListener</code> that\n            a fatal error has occurred and the pooled connection can\n            no longer be used.":"通知此<code> ConnectionEventListener </code>\r\n            发生了致命错误，合并的连接可以\r\n            不再使用。\r\n","javax.xml.transform.Transformer":"javax.xml.transform.transformer\r\n","javax.net.ssl.KeyStoreBuilderParameters.KeyStoreBuilderParameters(java.util.List)":"Javax.net.ssl.KeystoreBuilderParameters.KeystoreBuilderParameters（java.util.list）\r\n","Gets the policy on whether to continue executing existing\n            periodic tasks even when this executor has been ":"获取有关是否继续执行现有的政策\r\n            即使该执行人已定期任务\r\n","Returns the prefix of the specified attribute\n            Returns null if the element has no prefix.":"返回指定属性的前缀\r\n            如果元素没有前缀，则返回null。\r\n","Sets the padding mechanism of this cipher.":"设置此密码的填充机制。\r\n","\n            for this node.":"\r\n            对于此节点。\r\n","\r\n            Retrieve a cookie of the given name from the request.\r\n            ":"从请求中检索给定名称的cookie。\r\n            \r\n",",\n causing it to throw an ":"，，，，\r\n 使它扔\r\n","DocumentBuilderFactory":"DocumentBuilderFactory\r\n"," with data \n contained in response cookies received in the given the HTTP response.":" 与数据\r\n 包含在给定的HTTP响应中收到的响应cookie中。\r\n","javax.crypto.spec.IvParameterSpec.IvParameterSpec(byte[], int, int)":"javax.crypto.spec.ivparameterspec.ivparameterspec（byte []，int，int）\r\n","\r\n            Gets or sets the current URI. The ":"\r\n            获取或设置当前的URI。这\r\n","This method is invoked on registered objects\n            when a SSL handshake is completed.":"此方法在注册对象上调用\r\n            SSL握手完成后。\r\n"," with \n the given name.":" 和\r\n 给定名称。\r\n"," attribute defining the version of\n the extension implementation.":" 属性定义版本\r\n 扩展实现。\r\n","Obtains the socket factory.":"获得插座工厂。\r\n","javax.crypto.KeyAgreement.getAlgorithm()":"javax.crypto.keyagreement.getalgorithm（）\r\n","\r\n            Read an array header from\r\n            ":"\r\n            从中阅读阵列标题\r\n            \r\n","Checks whether there likely is a protocol version in a line.":"检查行中是否可能有协议版本。\r\n","A TransformerHandler\n            listens for SAX ContentHandler parse events and transforms\n            them to a Result.":"变压器手\r\n            聆听SAX ContentHandler解析事件并进行转换\r\n            他们结果。\r\n","Copy an entire Attributes object.":"复制整个属性对象。\r\n","javax.net.ssl.SSLEngine.getHandshakeApplicationProtocol()":"javax.net.ssl.sslengine.gethandshakeapplicationprotocol（）\r\n","Obtains a description of the tracked route.":"获取了跟踪路线的描述。\r\n","Returns the <code>Element</code> that has an ID attribute with the\n            given value.":"返回具有带有ID属性的<code>元素</code>\r\n            给定值。\r\n","javax.crypto.Mac.getProvider()":"javax.crypto.mac.getProvider（）\r\n","org.w3c.dom.Document.getElementById(java.lang.String)":"org.w3c.dom.document.getElementById（java.lang.string）\r\n","java.util.concurrent.LinkedBlockingQueue.put(java.lang.Object)":"java.util.concurrent.linkedblockingqueue.put（java.lang.object）\r\n","java.util.zip.Checksum.reset()":"java.util.zip.checksum.reset（）\r\n","An IO exception from the parser,\n            possibly from a byte stream or character stream\n            supplied by the application.\n":"解析器的IO例外，\r\n            可能来自字节流或字符流\r\n            由申请提供。\r\n\r\n"," if there is no association for this key, or the\n            association cannot be determined at this time.":" 如果没有有关此键的关联，或\r\n            关联目前无法确定。\r\n","org.w3c.dom.Element":"org.w3c.dom..lement\r\n","Creates a ConnectTimeoutException with the specified detail message.":"使用指定的详细信息创建ConnectTimeOutException。\r\n","java.util.prefs.AbstractPreferences.name()":"java.util.prefs.abstractpreferences.name（）\r\n","and a\n character in the input string only match if they are canonically\n equivalent. ":"和\r\n 输入字符串中的字符仅在规范上匹配\r\n 相等的。\r\n","Filter a notation declaration event.":"过滤符号声明事件。\r\n","XMLFormatter":"xmlformatter\r\n","Constructs an exception reporting an SSL protocol error\n            detected by an SSL subsystem.":"构建一个例外报告SSL协议错误\r\n            由SSL子系统检测到。\r\n","\r\n            The total number of ":"\r\n            总数\r\n","Create a new <code>TransformerConfigurationException</code> with the\n            given <code>Exception</code> base cause and detail message.":"使用新的<code> transformererConfigurationException </code>\r\n            给定的<code>异常</code>基本原因和详细信息。\r\n","org.xml.sax.helpers.XMLFilterImpl.skippedEntity(java.lang.String)":"org.xml.sax.helpers.xmlfilterimpl.skippertity（java.lang.string）\r\n","Returns the Attributes for the specified entry name.":"返回指定条目名称的属性。\r\n","Preferences#nodeExists(String)":"首选项＃Nodeexists（字符串）\r\n"," as a span.\r\n            ":" 作为跨度。\r\n            \r\n","W3C XML Schema Instance Namespace URI.":"W3C XML架构实例名称空间URI。\r\n","java.util.logging.LoggingMXBean.getParentLoggerName(java.lang.String)":"java.util.logging.loggingmxbean.getParentLoggername（java.lang.string）\r\n","org.xml.sax.ext.LexicalHandler.startDTD(java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.ext.ext.lexicalhandler.startdtd（java.lang.string，java.lang.string，java.lang.string）\r\n","javax.crypto.CipherSpi.engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom)":"javax.crypto.cipherspi.engineinit（int，java.security.key，java.security.algorithmparameters，java.security.securerandom）\r\n","java.util.function.DoublePredicate.test(double)":"java.util.function.doublepredicate.test（double）\r\n","Defines the charset to be used per default for encoding content body.":"定义要使用默认值用于编码内容主体的字符集。\r\n","The HTTP separator characters.":"HTTP分离器字符。\r\n","Translates a key object, whose provider may be unknown or potentially\n            untrusted, into a corresponding key object of this secret-key factory.":"翻译一个关键对象，其提供商可能未知或可能\r\n            不受信任，进入该密钥工厂的相应关键对象。\r\n","The system identifier of this notation.":"该符号的系统标识符。\r\n","Returns the algorithm name of this <code>KeyManagerFactory</code> object.":"返回此<code> keymanagerFactory </code>对象的算法名称。\r\n","decide if all elements shall transmit in their original order.":"确定所有要素是否应按原始顺序传输。\r\n","Causes the current thread to wait until it is signalled or\n            Thread#interrupt interrupted.":"导致当前线程等到发出信号或\r\n            线程＃中断中断。\r\n","INFO is a message level for informational messages.":"信息是信息消息的消息级别。\r\n","Base class for wrapping entities.":"包装实体的基类。\r\n","Get prefix bound to Namespace URI in the current scope.":"在当前范围内获取前缀绑定到名称空间URI。\r\n","\r\n            Updates the visible UI.\r\n            ":"\r\n            更新可见的UI。\r\n            \r\n",".\r\n            \r\n             In the simplest of cases, the client disconnects e.g. the user is done with the application and closes the browser.\r\n             The server (eventually) learns of the disconnect. The host is transitioned from ":"。\r\n            \r\n             在最简单的情况下，客户断开了，例如用户使用应用程序完成并关闭浏览器。\r\n             服务器（最终）了解断开连接。主机从\r\n","javax.crypto.spec.PBEParameterSpec.PBEParameterSpec(byte[], int, java.security.spec.AlgorithmParameterSpec)":"javax.crypto.spec.pbeparameterspec.pbeparameterspec（byte []，int，java.security.spec.algorithmparameterspec）\r\n","\r\n            Implements the SignalR Hub Protocol using MessagePack with limited type support.\r\n            ":"\r\n            使用MessagePack实现SignalR Hub协议，并具有有限的类型支持。\r\n            \r\n","org.xml.sax.SAXException.SAXException(java.lang.String, java.lang.Exception)":"org.xml.sax.saxception.saxexception（java.lang.string，java.lang.exception）\r\n","Indicates whether this connection is secure.":"指示此连接是否安全。\r\n","The required antiforgery request token must be provided.":"必须提供所需的抗试点令牌。\r\n","Creates a new AuthenticationException with a ":"使用\r\n"," methods and statements, but with extended\n            capabilities.":" 方法和语句，但有扩展\r\n            功能。\r\n","Schema":"模式\r\n","java.util.function.LongPredicate":"java.util.function.longpredicate\r\n","java.util.prefs.Preferences.getByteArray(java.lang.String, byte[])":"java.util.prefs.preferences.getbytearray（java.lang.string，byte []）\r\n","javax.crypto.spec.SecretKeySpec.getAlgorithm()":"javax.crypto.spec.secretkeyspec.getalgorithm（）\r\n","The default maximum number of connections allowed per host ":"每个主机允许的默认最大连接数\r\n","java.util.concurrent.LinkedBlockingQueue.spliterator()":"java.util.concurrent.linkedblockingqueue.spliterator（）\r\n","java.util.zip.Inflater.setInput(byte[], int, int)":"java.util.zip.inflater.setInput（byte []，int，int）\r\n"," defined by a ":" 由a定义\r\n","Return the host URI, as a string.":"返回主机URI，作为字符串。\r\n","\r\n            Determines whether authentication handlers should be invoked after a failure.\r\n            Defaults to true.\r\n            ":"\r\n            确定是否应在失败后调用身份验证处理程序。\r\n            默认为true。\r\n            \r\n","java.util.zip.Deflater.NO_COMPRESSION":"java.util.zip.deflater.no_compression\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryRelease(long)":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.trelease（long）\r\n","javax.security.auth.DestroyFailedException":"javax.security.auth.destroyfailedexception\r\n","Returns the private value, <code>x</code>.":"返回私人值，<code> x </code>。\r\n","javax.xml.parsers.DocumentBuilder.setEntityResolver(org.xml.sax.EntityResolver)":"javax.xml.parsers.documentBuilder.SetentityResolver（org.xml.sax.entityResolver）\r\n","\n            and a SAX InputSource.":"\r\n            和SAX Inputsource。\r\n","java.util.jar.JarOutputStream":"java.util.jar.jaroutputstream\r\n","A handler for rejected tasks that runs the rejected task\n directly in the calling thread of the ":"用于运行拒绝任务的拒绝任务的处理程序\r\n 直接在调用线程中\r\n","if an I/O related error occurs":"如果发生I/O相关错误\r\n","in case of an IO problem.\n         The connection attribute will be nullified anyway.\n":"如果有IO问题。\r\n         无论如何，连接属性将被无效。\r\n\r\n","Attempt to create an XML reader from a class name.":"尝试从类名称创建XML读取器。\r\n","Returns whether new SSL sessions may be established for new connections.":"返回是否可以为新连接建立新的SSL会话。\r\n","An entity whose content is retrieved from a string.":"从字符串中检索内容的实体。\r\n"," array which is a list of all of the drag data.\r\n            ":" 数组是所有阻力数据的列表。\r\n            \r\n","Sets the duration that this connection can remain idle before it is\n reused.":"设置该连接可以在其之前保持空闲的持续时间\r\n 重复使用。\r\n","java.util.regex.MatchResult.end()":"java.util.regex.matchresult.end（）\r\n","javax.crypto.KeyAgreementSpi.engineGenerateSecret(byte[], int)":"javax.crypto.keyagreementspi.EngineGenerateSecret（byte []，int）\r\n","org.xml.sax.helpers.XMLReaderAdapter.endElement(java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.helpers.xmlreaderadapter.Endelement（java.lang.string，java.lang.string，java.lang.string）\r\n","\r\n            The top level key to look for in the json user data.\r\n            ":"\r\n            在JSON用户数据中查找的顶级键。\r\n            \r\n","Set the value of a specific attribute.":"设置特定属性的值。\r\n","org.w3c.dom.Node.TEXT_NODE":"org.w3c.dom.node.text_node\r\n","'s in the reader's ":"读者的\r\n","Implements a terminal append-and-replace step.":"实现终端附加和更高的步骤。\r\n"," from any of:\r\n            ":" 从任何：\r\n            \r\n","Formats an array of header elements.":"格式化一系列标头元素。\r\n","Attempts to acquire in exclusive mode, aborting if interrupted,\n            and failing if the given timeout elapses.":"尝试以独家模式获取，如果中断，则中止\r\n            如果给定的超时出现失败。\r\n","Validation of the provided antiforgery token failed. The cookie token and the request token were swapped.":"验证提供的抗管状令牌失败。 cookie令牌和请求令牌被交换了。\r\n","Returns a copy of this entry.":"返回此条目的副本。\r\n","javax.xml.validation.SchemaFactory.getFeature(java.lang.String)":"javax.xml.validation.schemafactory.getFeature（java.lang.string）\r\n","javax.net.ssl.HandshakeCompletedEvent.getLocalPrincipal()":"javax.net.ssl.handshakecomplededevent.getlocalprincipal（）\r\n","if the specified parameters are inappropriate for this\n             cipher.":"如果指定的参数不合适\r\n             密码。\r\n","java.util.concurrent.atomic.AtomicIntegerFieldUpdater.compareAndSet(java.lang.Object, int, int)":"java.util.concurrent.atomic.atomicintegerfieldupdater.compareandset（java.lang.object，int，int）\r\n","org.json.JSONObject.optLong(java.lang.String)":"org.json.jsonobject.optlong（java.lang.string）\r\n","Awaits the phase of this phaser to advance from the given phase\n            value, returning immediately if the current phase is not equal\n            to the given phase value or this phaser is terminated.":"等待此移位器的阶段从给定阶段前进\r\n            值，如果当前阶段不相等，请立即返回\r\n            对于给定的相值或此移位器被终止。\r\n","javax.xml.validation.TypeInfoProvider.TypeInfoProvider()":"javax.xml.validation.typeinfoprovider.typeinfoprovider（）\r\n","java.util.concurrent.atomic.DoubleAdder.sum()":"java.util.concurrent.atomic.doubleadder.sum（）\r\n","Skip this single node.":"跳过这个单个节点。\r\n","java.util.concurrent.atomic.DoubleAdder.intValue()":"java.util.concurrent.atomic.doubleadder.intvalue（）\r\n","Exception class for an unrecognized identifier.":"异常类别的未识别标识符。\r\n","\r\n            Describes the type of this frame.\r\n            ":"\r\n            描述此框架的类型。\r\n            \r\n","Represents a function that accepts an int-valued argument and produces a\n            long-valued result.":"代表一个接受int值参数并产生一个的函数\r\n            长期可评估的结果。\r\n","java.util.concurrent.CompletionService.take()":"java.util.concurrent.completionservice.take（）\r\n","java.util.zip.DeflaterInputStream.def":"java.util.zip.deflaterinputstream.def\r\n","User name and password based authentication credentials.":"用户名和基于密码的身份验证凭据。\r\n","\r\n            Builds the ":"\r\n            构建\r\n","javax.xml.datatype.XMLGregorianCalendar.getMillisecond()":"javax.xml.datatype.xmlgregoriancalendar.getmillisecond（）\r\n","javax.crypto.spec.OAEPParameterSpec.DEFAULT":"javax.crypto.spec.oaepparameterspec.default\r\n","\r\n            A fast access struct that wraps ":"\r\n            包装的快速访问结构\r\n","java.util.zip.Deflater.getTotalIn()":"java.util.zip.deflater.gettotalin（）\r\n","javax.net.ssl.SSLContextSpi.engineGetSocketFactory()":"javax.net.ssl.sslcontextspi.enginegetsocketFactory（）\r\n","Obtains a specific version of this protocol.":"获得此协议的特定版本。\r\n","TransferQueue":"转移等级\r\n","javax.net.ssl.CertPathTrustManagerParameters":"javax.net.ssl.certpathtrustmanagerparameters\r\n",", described as an ":"，被描述为\r\n","\r\n            The Y coordinate of the mouse pointer in global (screen) coordinates.\r\n            ":"\r\n            全局（屏幕）坐标中鼠标指针的Y坐标。\r\n            \r\n"," to the endpoint(s).\r\n            ":" 到端点。\r\n            \r\n","Returns an estimate of the number of threads waiting on the\n            given condition associated with the write lock.":"返回估计等待的线程数的估计值\r\n            给定的条件与写锁相关。\r\n","java.util.concurrent.CompletionStage":"java.util.concurrent.completionstage\r\n","java.util.concurrent.ScheduledThreadPoolExecutor.setContinueExistingPeriodicTasksAfterShutdownPolicy(boolean)":"java.util.concurrent.scheduledthreadpoolexecutor.setContinueExistingPerioDictaskSaftersHutDownPolicy（boolean）\r\n","Obtains the locale of this response.":"获得此响应的位置。\r\n","Tracks tunnelling to a proxy in a proxy chain.":"跟踪隧道到代理链中的代理。\r\n","Sets the cipher suites enabled for use on this connection.":"将启用的密码套件设置为可用于此连接的。\r\n","javax.xml.transform.TransformerException.getLocator()":"javax.xml.transform.transformerexception.getLocator（）\r\n","org.json.JSONObject.accumulate(java.lang.String, java.lang.Object)":"org.json.jsonobject.accumulate（java.lang.string，java.lang.object）\r\n","The proxy authenticate response header.":"代理身份验证响应标头。\r\n","Obtains the value of the MINUTES field as an integer value,\n            or 0 if not present.":"以整数值的形式获得分钟字段的值\r\n            或0如果不存在。\r\n","Sets the request interceptors in this list.":"在此列表中设置请求拦截器。\r\n","javax.net.ssl.SSLServerSocket":"javax.net.ssl.sslserversocket\r\n","A modifiable set of name/value mappings.":"可修改的名称/值映射集。\r\n","javax.crypto.Cipher.update(byte[], int, int, byte[])":"javax.crypto.cipher.update（byte []，int，int，byte []）\r\n","An attribute of a language and binding dependent type that represents\n a writable stream to which 16-bit units can be output.":"语言的属性和代表绑定的依赖类型\r\n 可以输出16位单元的可写流。\r\n","java.util.concurrent.atomic.AtomicReferenceFieldUpdater.compareAndSet(java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.concurrent.atomic.atomicreference fieldupdater.compareandset（java.lang.object，java.lang.object，java.lang.object）\r\n","\r\n            Configuration options OAuth.\r\n            ":"\r\n            配置选项OAuth。\r\n            \r\n","javax.net.ssl.X509KeyManager.getCertificateChain(java.lang.String)":"javax.net.ssl.x509Keymanager.getCertificateChain（java.lang.string）\r\n","Represents a function that produces an int-valued result.":"表示产生INT值结果的函数。\r\n","This class implements a stream filter for reading compressed data in\n            the GZIP file format.":"该类实现流滤波器，用于读取压缩数据\r\n            GZIP文件格式。\r\n","javax.xml.transform.dom.DOMSource.DOMSource()":"javax.xml.transform.dom.domsource.domsource（）\r\n","java.util.zip.ZipEntry.DEFLATED":"java.util.zip.zipentry.deflated\r\n","javax.xml.datatype.DatatypeConstants.MARCH":"javax.xml.datatype.datatypeconstants.march\r\n","Attempts to set the state to reflect a release in shared mode.":"试图设置状态以在共享模式下反映发布。\r\n","\r\n            Gets the recyclable object.\r\n            ":"\r\n            获取可回收的对象。\r\n            \r\n","\r\n            Creates an ":"\r\n            创建一个\r\n","<code>DOMError</code> is an interface that describes an error.":"<code> domerror </code>是描述错误的接口。\r\n","Atomically updates the current value with the results of\n            applying the given function, returning the previous value.":"原子上更新当前值的结果\r\n            应用给定功能，返回上一个值。\r\n",", reduces the values in each partition according to\n            another ":"，根据\r\n            其他\r\n","if the data read from the given input stream is not from a\n             valid XML document.":"如果从给定输入流读取的数据不是来自\r\n             有效的XML文档。\r\n","The value of the current header.":"当前标头的值。\r\n","javax.crypto.SecretKeyFactory.getKeySpec(javax.crypto.SecretKey, java.lang.Class)":"javax.crypto.secretkeyfactory.getkeyspec（javax.crypto.secretkey，java.lang.class）\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getWaitingThreads(java.util.concurrent.locks.ConditionObject)":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.getWaitingThreads（java.util.concurrent.locks.conditionObject）\r\n","Create a new <code>DatatypeConfigurationException</code> with\n            the specified cause.":"使用新的<code> DatatyPeconFigurationException </code>使用\r\n            指定原因。\r\n","if starting the handshake fails.":"如果开始握手失败。\r\n","Actually formats the value of a name-value pair.":"实际上是格式化名称值对的值。\r\n","java.util.logging.Logger.logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"java.util.logging.logger.logrb（java.util.logging.level，java.lang.string，java.lang.string，java.lang.string，java.lang.lang.string）\r\n","java.util.zip.GZIPOutputStream":"java.util.zip.gzipoutputstream\r\n","java.util.concurrent.locks.Lock.tryLock()":"java.util.concurrent.locks.lock.trylock（）\r\n","org.json.JSONArray.getDouble(int)":"org.json.jsonarray.getDouble（int）\r\n","javax.net.ssl.SSLSocket.getApplicationProtocol()":"javax.net.ssl.sslsocket.getApplicationprotocol（）\r\n","java.util.concurrent.LinkedBlockingDeque.descendingIterator()":"java.util.concurrent.linkedblockingdeque.descendingiterator（）\r\n","javax.security.cert.CertificateEncodingException":"javax.security.cert.certificateEncodingException\r\n","Executes the next phase of this key agreement with the given\n            key that was received from one of the other parties involved in this key\n            agreement.":"执行此密钥协议的下一阶段\r\n            从参与此密钥的其他方中收到的钥匙\r\n            协议。\r\n","javax.sql.RowSet.setFloat(int, float)":"Javax.sql.Rowset.setFloat（int，float）\r\n","\r\n            Used to setup defaults for all ":"\r\n            用于设置所有设置默认值\r\n"," for this request and stores the cookie token\r\n            in the response. This operation also sets the \"Cache-control\" and \"Pragma\" headers to \"no-cache\" and\r\n            the \"X-Frame-Options\" header to \"SAMEORIGIN\".\r\n            ":" 为此请求并存储cookie令牌\r\n            在响应中。此操作还将“缓存控制”和“ pragma”标头设置为“无缓存”和\r\n            “ Sameorigin”的“ X帧选项”标题。\r\n            \r\n","Receives the next request entity available from this connection and attaches it to \n an existing request.":"接收此连接可用的下一个请求实体，并将其附加到\r\n 现有请求。\r\n","Returns a new CompletionStage that, when this stage completes\n            normally, executes the given action using this stage's default\n            asynchronous execution facility.":"返回一个新的完整舞台，当这个阶段完成时\r\n            通常，使用此阶段的默认值执行给定的操作\r\n            异步执行设施。\r\n",", or its prefix, is \"xmlns\" and the\n   ":"，或其前缀为“ xmlns”，而\r\n   \r\n","Format the given log record and return the formatted string.":"格式化给定的日志记录并返回格式化的字符串。\r\n","indent = \"yes\" | \"no\".":"缩进=“是” | “不”。\r\n","Get the name for this logger.":"获取此记录器的名称。\r\n","Start a new Namespace context.":"启动新的名称空间上下文。\r\n","javax.net.ServerSocketFactory.createServerSocket()":"javax.net.serversocketfactory.createserversocket（）\r\n","Creates a ConnectTimeoutException with a ":"用一个\r\n","Constructs a BadPaddingException with no detail\n            message.":"构建一个badpaddingException，没有细节\r\n            信息。\r\n","javax.xml.parsers.DocumentBuilderFactory.setAttribute(java.lang.String, java.lang.Object)":"javax.xml.parsers.documentbuilderfactory.setAttribute（java.lang.string，java.lang.object）\r\n","\r\n            Supplies information about an error event that is being raised.\r\n            ":"\r\n            提供有关正在提出的错误事件的信息。\r\n            \r\n","Represents a function that accepts a long-valued argument and produces a\n            double-valued result.":"代表一个接受长期估算的论点并产生一个的函数\r\n            双值结果。\r\n",", since the model value will be taken\r\n            from the ":"，因为将采取模型值\r\n            来自\r\n","Content type definitions ":"内容类型定义\r\n","\r\n            Returns the recyclable object to the pool.\r\n            ":"\r\n            将可回收的对象返回到池中。\r\n            \r\n","\r\n            Base class for authorization handlers that need to be called for a specific requirement type.\r\n            ":"\r\n            需要要求特定要求类型的授权处理程序的基类。\r\n            \r\n","writer":"作家\r\n","DOMImplementation.createDocument":"domimplementation.createDocument\r\n","java.util.concurrent.ThreadPoolExecutor.beforeExecute(java.lang.Thread, java.lang.Runnable)":"java.util.concurrent.threadpoolexecutor.beforeexecute（java.lang.thread，java.lang.runnable）\r\n","java.util.regex.Matcher.hasAnchoringBounds()":"java.util.regex.matcher.hasanchoringbounds（）\r\n"," object\n   is ":" 目的\r\n   是\r\n"," method has been called, internal use only.":" 方法已被调用，仅内部用途。\r\n","Executes the given tasks, returning the result\n            of one that has completed successfully (i.":"执行给定的任务，返回结果\r\n            成功完成的工作（i。\r\n"," of Principals associated with this\n            ":" 与此相关的校长\r\n            \r\n","Indicates a serious configuration error.":"表示严重的配置错误。\r\n","java.util.concurrent.ThreadPoolExecutor.getRejectedExecutionHandler()":"java.util.concurrent.threadpoolexecutor.getRejectedExeCutionHandler（）\r\n","javax.net.ssl.SNIServerName":"javax.net.ssl.sniservername\r\n","refChild":"repchild\r\n","java.util.zip.InflaterInputStream.InflaterInputStream(java.io.InputStream)":"java.util.zip.inflaterinputstream.inflaterinputstream（java.io.inputstream）\r\n","This method will be called by the parser at the completion of the\n            parsing of each node.":"该方法将由解析器调用\r\n            每个节点的解析。\r\n","java.util.zip.ZipEntry.getCompressedSize()":"java.util.zip.zipentry.getCompressedsize（）\r\n","java.util.concurrent.Phaser.getRegisteredParties()":"java.util.concurrent.phaser.getRegisteredParties（）\r\n","\r\n            Check that the options are valid.  Should throw an exception if things are not ok.\r\n            ":"\r\n            检查选项是否有效。如果事情不正确，应该抛出例外。\r\n            \r\n","java.util.jar.Attributes.clone()":"java.util.jar.attributes.clone（）\r\n"," that concatenates the input elements,\n            separated by the specified delimiter, with the specified prefix and\n            suffix, in encounter order.":" 这会加入输入元素，\r\n            由指定定界符分开，指定前缀和\r\n            后缀，遇到顺序。\r\n","RowSet":"系列\r\n","javax.crypto.spec.DHPublicKeySpec.getY()":"javax.crypto.spec.dhpublickeyspec.gety（）\r\n"," variable on the implementation\n   platform.\n":"实施变量\r\n   平台。\r\n\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.getQueueLength()":"java.util.concurrent.locks.abstractqueuedsynchronizer.getQueuelgentth（）\r\n","\r\n            Creates a new JsonSubKeyClaimAction.\r\n            ":"\r\n            创建一个新的JsonsubKeyClaimaction。\r\n            \r\n","encoding = <var>string</var>.":"编码= <var>字符串</var>。\r\n","Applies this operator to the given operand.":"将该操作员应用于给定的操作数。\r\n","if a ":"如果一个\r\n","org.xml.sax.helpers.AttributeListImpl.getType(int)":"org.xml.sax.helpers.attributelistimpl.getType（int）\r\n","java.util.concurrent.SynchronousQueue.remainingCapacity()":"java.util.concurrent.synchronousqueue.remainingcapacity（）\r\n","java.util.concurrent.atomic.AtomicStampedReference.attemptStamp(java.lang.Object, int)":"java.util.concurrent.atomic.atomicstampedReference.AttEmptstamp（java.lang.Object，int）\r\n"," for the output. -or- Set the SAX2 ":" 对于输出。 - 或 - 设置SAX2\r\n","javax.crypto.KeyAgreement.getInstance(java.lang.String, java.lang.String)":"javax.crypto.keyagreement.getInstance（java.lang.string，java.lang.string）\r\n","\r\n            The position at the start of the ":"\r\n            在开始时的位置\r\n","The <code>ProcessingInstruction</code> interface represents a \"processing\n            instruction\", used in XML as a way to keep processor-specific information\n            in the text of the document.":"<code> processinginstruction </code>接口表示“处理\r\n            指令”，在XML中用于保留特定于处理器的信息的一种方式\r\n            在文档的文本中。\r\n","javax.sql.RowSet.setBinaryStream(java.lang.String, java.io.InputStream, int)":"javax.sql.Rowset.setBinarystream（java.lang.string，java.io.inputstream，int）\r\n","Returns the <code>index</code>th item in the map.":"返回地图中的<code>索引</code> TH项目。\r\n","java.util.concurrent.atomic.AtomicReference":"java.util.concurrent.Atomic.AtomicReference\r\n","The '{0}' option must be provided.":"必须提供'{0}'选项。\r\n","java.util.concurrent.atomic.AtomicIntegerArray.AtomicIntegerArray(int)":"java.util.concurrent.atomic.atomicintegerarray.atomicintegerarray（int）\r\n"," namespace\n            by ":" 名称空间\r\n            经过\r\n","Removes this task from the executor's internal queue if it is\n            present, thus causing it not to be run if it has not already\n            started.":"如果是\r\n            存在，因此如果尚未\r\n            开始。\r\n","idletime":"空闲时间\r\n","\n   is ":"\r\n   是\r\n","Queries whether any threads are waiting to acquire.":"询问是否有任何线程正在等待获取。\r\n","This interface inherits from <code>CharacterData</code> and represents the\n            content of a comment, i.":"此接口从<code> targindata </code>继承，并表示\r\n            评论的内容，我。\r\n","Compression strategy best used for data consisting mostly of small\n            values with a somewhat random distribution.":"最佳用于数据的压缩策略主要由小型组成\r\n            值有些随机分布。\r\n","java.util.concurrent.atomic.AtomicInteger.decrementAndGet()":"java.util.concurrent.atomic.atomicinteger.decrementandget（）\r\n","\r\n            Gets the authentication type.\r\n            ":"\r\n            获取身份验证类型。\r\n            \r\n","\r\n            A helper class to provide a useful ":"\r\n            提供有用的助手课程\r\n","java.util.concurrent.atomic.AtomicReference.lazySet(java.lang.Object)":"java.util.concurrent.atomic.atomicreference.lazyset（java.lang.object）\r\n","Returns the algorithm that was used to seal this object.":"返回用于密封此对象的算法。\r\n","\r\n            Used to determine if a handler wants to participate in request processing.\r\n            ":"\r\n            用于确定处理程序是否要参与请求处理。\r\n            \r\n","java.util.concurrent.locks.ReentrantReadWriteLock.getWaitingThreads(java.util.concurrent.locks.Condition)":"java.util.concurrent.locks.reentrantreadwritelock.getWaitingThreads（java.util.concurrent.locks.condition）\r\n","Returns the current thread's ":"返回当前线程的\r\n","NOT_SUPPORTED_ERR: May be raised if the implementation does not\n   support the feature \"XML\" and the language exposed through the\n   Document does not support XML Namespaces (such as []).":"NOT_SUPPORTED_ERR：如果实施不进行，则可能会增加\r\n   支持功能“ XML”和通过\r\n   文档不支持XML名称空间（例如[]）。\r\n","javax.security.auth.login.LoginException.LoginException()":"javax.security.auth.login.loginexception.loginexception（）\r\n","OFF is a special level that can be used to turn off logging.":"关闭是一个特殊的级别，可用于关闭伐木。\r\n","\r\n            Copies the caller's buffer into this writer and calls ":"\r\n            将呼叫者的缓冲区复制到该作者中并打电话给\r\n","\r\n            A base class that creates a service provider scope, and resolves a service of type ":"\r\n            创建服务提供商范围并解决类型服务的基类\r\n","The node is imported, using <code>Document.":"节点是使用<code>文档导入的。\r\n","java.util.concurrent.atomic.AtomicLongArray.decrementAndGet(int)":"java.util.concurrent.atomic.atomiclongarray.decrementandget（int）\r\n","Write all pending output to the stream.":"将所有待处理输出写入流。\r\n","Get a TransformerHandler object that can process SAX\n            ContentHandler events into a Result, based on the transformation\n            instructions specified by the argument.":"获取一个可以处理SAX的TransformerHandler对象\r\n            基于转换\r\n            参数指定的说明。\r\n","Returns the cryptographic algorithm constraints. -or- Sets the cryptographic algorithm constraints, which will be used\n            in addition to any configured by the runtime environment.":"返回加密算法约束。 - 或设置加密算法约束，将使用\r\n            除了由运行时环境配置的任何配置。\r\n","org.xml.sax.InputSource.setCharacterStream(java.io.Reader)":"org.xml.sax.inputsource.setcharacterstream（java.io.reader）\r\n","Inserts the specified element at the tail of this queue, waiting if\n            necessary up to the specified wait time for space to become available.":"将指定元素插入该队列的尾部，等待\r\n            需要到指定的等待时间才能提供空间。\r\n","A request interceptor that enables the expect-continue handshake.":"一个启用预期握手的请求拦截器。\r\n"," object.\r\n            ":"目的。\r\n            \r\n","javax.security.cert.Certificate":"javax.security.cert.certificate\r\n"," method below.":" 下面的方法。\r\n","javax.net.ssl.SSLContext.SSLContext(javax.net.ssl.SSLContextSpi, java.security.Provider, java.lang.String)":"javax.net.ssl.sslcontext.sslcontext（javax.net.ssl.ssl.sslcontextspi，java.security.provider，java.lang.string）\r\n","org.w3c.dom.ls.LSParserFilter.FILTER_ACCEPT":"org.w3c.dom.ls.lsparserfilter.filter_accept\r\n","javax.crypto.Mac.Mac(javax.crypto.MacSpi, java.security.Provider, java.lang.String)":"javax.crypto.mac.mac（javax.crypto.macspi，java.security.provider，java.lang.string）\r\n","\r\n            Tells the store that the given identity should be updated.\r\n            ":"\r\n            告诉商店应该更新给定的身份。\r\n            \r\n","java.util.concurrent.atomic.AtomicIntegerArray.getAndSet(int, int)":"java.util.concurrent.atomic.atomicintegerarray.getandset（int，int）\r\n","java.util.stream.Collectors.summarizingInt(java.util.function.ToIntFunction)":"java.util.stream.collectors.summarizingint（java.util.function.tointfunction）\r\n","Construct a default ":"构造默认值\r\n","Removes the named mapping if it exists; does nothing otherwise.":"如果存在，则删除命名映射；没有其他任何事情。\r\n"," and the current element is not a component, the\r\n            frame will be omitted.\r\n            ":" 当前元素不是一个组件，\r\n            框架将被省略。\r\n            \r\n","\r\n            Extensions for ":"\r\n            扩展\r\n","Returns the HTTP method this request uses, such as ":"返回此请求使用的HTTP方法，例如\r\n","Returns a new CompletionStage that, when this and the other\n            given stage both complete normally, is executed using the\n            supplied executor, with the two results as arguments to the\n            supplied action.":"返回一个新的完整舞台，当\r\n            给定阶段正常完成，使用\r\n            授予执行人，两个结果作为参数\r\n            提供的行动。\r\n","Clear the attribute list.":"清除属性列表。\r\n","\r\n            Add an authorization policy with the provided name.\r\n            ":"\r\n            用提供的名称添加授权策略。\r\n            \r\n","Constructs a handler which ignores all parsing events.":"构建一个忽略所有解析事件的处理程序。\r\n","javax.crypto.interfaces.PBEKey":"javax.crypto.interfaces.pbekey\r\n","Parses the specified <code>File</code> as a schema and returns it as a <code>Schema</code>.":"将指定的<code>文件</code>解析为架构，并将其返回为<code>架构</code>。\r\n","if the provider parameter is ":"如果提供商参数为\r\n","javax.net.ssl.SSLSocketFactory.createSocket(java.net.Socket, java.lang.String, int, boolean)":"javax.net.ssl.sslsocketfactory.createsocket（java.net.socket，java.lang.string，int，boolean）\r\n","Returns a composed function that first applies this function to\n            its input, and then applies the ":"返回一个组合功能，该功能首先将此功能应用于\r\n            其输入，然后应用\r\n","Updates the CRC-32 checksum with the specified byte (the low\n            eight bits of the argument b).":"用指定的字节更新CRC-32校验和\r\n            论点的八个位b）。\r\n","java.util.zip.GZIPOutputStream.crc":"java.util.zip.gzipoutputstream.crc\r\n","Actually formats a header.":"实际上是格式化标头。\r\n","If the argument is null.\n":"如果论点为null。\r\n\r\n","Obtain a new instance of a DOM ":"获得DOM的新实例\r\n","java.util.concurrent.locks.StampedLock.StampedLock()":"java.util.concurrent.locks.stampedlock.stampedlock（）\r\n","Sets the timeout until a connection is etablished.":"设置超时，直到连接被固定为止。\r\n","NAMESPACE_ERR: Raised if the ":"namespace_err：如果是\r\n","java.util.concurrent.LinkedTransferQueue.drainTo(java.util.Collection)":"java.util.concurrent.linkedtransferqueue.drainto（java.util.collection）\r\n","Returns the time this session was created, in milliseconds since midnight\n January 1st 1970 UTC.":"返回本次会议的时间，自午夜以来以毫秒为单位\r\n 1970年1月1日UTC。\r\n","The explicit specification of the parameter ":"参数的明确规范\r\n","Attempts to acquire in exclusive mode.":"尝试以独家模式获取。\r\n","#tryAcquireShared":"#tryacquireshared\r\n","Allows the user to retrieve specific attributes on the underlying\n            implementation.":"允许用户在基础上检索特定属性\r\n            执行。\r\n","java.util.zip.ZipEntry.STORED":"java.util.zip.zipentry.Stord\r\n","Returns the provider of this <code>KeyGenerator</code> object.":"返回此<code> keygenerator </code>对象的提供商。\r\n","javax.xml.validation.Validator.getProperty(java.lang.String)":"javax.xml.validation.validator.getProperty（java.lang.string）\r\n","Tests if the authentication scopes match.":"测试身份验证范围是否匹配。\r\n","Formats one header element.":"格式一个标头元素。\r\n","If the lock state matches the given stamp, releases the\n            non-exclusive lock.":"如果锁定状态与给定的邮票匹配，请发布\r\n            非排他性锁。\r\n","Abstract base class for all standard ":"所有标准的抽象基类\r\n","javax.security.auth.x500.X500Principal.getEncoded()":"javax.security.auth.x500.x500principal.getencoded（）\r\n","Tracks connecting to the target.":"轨道连接到目标。\r\n","java.util.concurrent.atomic.LongAccumulator.longValue()":"java.util.concurrent.atomic.longaccumulator.longvalue（）\r\n","Continues a multi-part update of the Additional Authentication\n            Data (AAD), using a subset of the provided buffer.":"继续对其他身份验证的多部分更新\r\n            数据（AAD），使用提供的缓冲区的子集。\r\n","JSONObject#NULL":"jsonobject＃null\r\n","\r\n            The SlidingExpiration is set to true to instruct the handler to re-issue a new cookie with a new\r\n            expiration time any time it processes a request which is more than halfway through the expiration window.\r\n            ":"\r\n            SlidingExpiration设置为真实，以指示处理程序重新发出新的cookie\r\n            到期时间，任何时间都会处理到有效期窗口的一半以上的请求。\r\n            \r\n","javax.net.ssl.SSLSessionBindingEvent.getName()":"javax.net.ssl.sslsessessessessessionbindingevent.getName（）\r\n","java.util.stream.BaseStream":"java.util.stream.basestream\r\n","java.util.concurrent.LinkedBlockingQueue.drainTo(java.util.Collection, int)":"java.util.concurrent.linkedblockingqueue.drainto（java.util.collection，int）\r\n","java.util.concurrent.ConcurrentMap.getOrDefault(java.lang.Object, java.lang.Object)":"java.util.concurrent.concurrentmap.getordefault（java.lang.object，java.lang.object）\r\n","if the task is null\n":"如果任务为null\r\n\r\n","javax.net.ssl.HostnameVerifier.verify(java.lang.String, javax.net.ssl.SSLSession)":"javax.net.ssl.hostnameverifier.verify（java.lang.string，javax.net.ssl.sslsession）\r\n","CompletableFuture":"完整的未来\r\n","Gets the transaction isolation level property set for this\n ":"获取为此的交易隔离级属性设置\r\n \r\n","javax.net.ssl.SSLContext.getClientSessionContext()":"javax.net.ssl.sslcontext.getclientsessessescontext（）\r\n"," to be used to resolve\n            entities present in the XML document to be parsed.":" 用于解决\r\n            XML文档中存在的实体要解析。\r\n","javax.crypto.KeyGenerator.init(java.security.SecureRandom)":"javax.crypto.keygenerator.init（java.security.securerandom）\r\n","javax.xml.transform.stream.StreamResult.setSystemId(java.io.File)":"javax.xml.transform.stream.streamresult.setsystemid（java.io.file）\r\n","bytesConsumed":"大约\r\n","javax.net.ssl.SSLSocket.setEnabledCipherSuites(java.lang.String[])":"javax.net.ssl.sslsocket.setenabledciphersuites（java.lang.string []）\r\n","The filename of the version information files.":"版本信息文件的文件名。\r\n","Registers an event listener to receive notifications that an\n            SSL handshake has completed on this connection.":"注册事件听众，以收到通知\r\n            SSL握手已在此连接上完成。\r\n"," extensions.":" 扩展。\r\n",", empty or in an\n             invalid format.":"，空或\r\n             无效的格式。\r\n"," instance for use with this\n ":" 实例可用于此\r\n \r\n","\r\n            The reader over the sequence.\r\n            ":"\r\n            读者通过序列。\r\n            \r\n","\r\n            Appends a frame representing a bool-valued attribute.\r\n            ":"\r\n            附加代表布尔值属性的帧。\r\n            \r\n","Construct an XML filter with the specified parent.":"用指定的父构建XML过滤器。\r\n","Creates a new <code>SSLEngine</code> using this context using\n            advisory peer information.":"使用此上下文使用此上下文创建一个新的<code> sslengine </code>\r\n            咨询同行信息。\r\n","Lock locks":"锁定锁\r\n","java.util.regex.Matcher.start()":"java.util.regex.matcher.start（）\r\n","\r\n            Supplies information about a mouse wheel event that is being raised.\r\n            ":"\r\n            提供有关正在提出的鼠标车轮事件的信息。\r\n            \r\n","java.util.concurrent.Phaser.register()":"java.util.concurrent.phaser.register（）\r\n","javax.xml.namespace.QName.getNamespaceURI()":"javax.xml.namespace.qname.getnamespaceuri（）\r\n","Basic user principal used for HTTP authentication":"HTTP身份验证的基本用户主体\r\n","org.apache.http.params.HttpParams.setBooleanParameter(java.lang.String, boolean)":"org.apache.http.params.httpparams.setbooleanparameter（java.lang.string，boolean）\r\n","org.xml.sax.helpers.XMLReaderAdapter.ignorableWhitespace(char[], int, int)":"org.xml.sax.helpers.xmlreaderadapter.ignorablewhitespace（char []，int，int）\r\n","\r\n            Optional base class for components. Alternatively, components may\r\n            implement ":"\r\n            组件的可选基类。或者，组件可能\r\n            实施\r\n","Attempts to match the entire region against the pattern.":"试图将整个区域与模式匹配。\r\n","\r\n            Default implementation of ":"\r\n            默认实现\r\n","java.util.concurrent.locks.LockSupport.parkNanos(java.lang.Object, long)":"java.util.concurrent.locks.locksupport.parknanos（java.lang.Object，long）\r\n","org.w3c.dom.DOMError.SEVERITY_WARNING":"org.w3c.dom.domerror.severity_warning\r\n","Obtains the package name.":"获取包装名称。\r\n","java.util.jar.Manifest.getMainAttributes()":"java.util.jar.manifest.getmainattributes（）\r\n","Returns the current value of the given feature.":"返回给定功能的当前值。\r\n","s it creates cannot support this feature.":"它创建的S不能支持此功能。\r\n","java.util.zip.DataFormatException.DataFormatException()":"java.util.zip.dataformatexception.dataformatexception（）\r\n","javax.xml.parsers.FactoryConfigurationError.getException()":"javax.xml.parsers.factoryConfigurationError.getException（）\r\n","java.util.concurrent.atomic.AtomicLong.get()":"java.util.concurrent.atomic.atomiclong.get（）\r\n","java.util.logging.FileHandler.FileHandler(java.lang.String, boolean)":"java.util.logging.filehandler.filehandler（java.lang.string，boolean）\r\n","java.util.function.BiConsumer.accept(java.lang.Object, java.lang.Object)":"java.util.function.biconsumer.accept（java.lang.Object，java.lang.Object）\r\n","Gets the current value at position ":"获取当前值处的位置\r\n","\r\n            Encodes supplied data into Base64 and replaces any URL encodable characters into non-URL encodable\r\n            characters.\r\n            ":"\r\n            将提供的数据编码为base64，并将任何编码字符替换为非编码\r\n            人物。\r\n            \r\n","org.w3c.dom.NodeList":"org.w3c.dom.nodelist\r\n","\r\n            Does authentication for ":"\r\n            确实是对的\r\n","org.xml.sax.helpers.XMLReaderFactory.createXMLReader()":"org.xml.sax.helpers.xmlreaderfactory.createxmlreader（）\r\n","javax.xml.datatype.DatatypeConfigurationException.DatatypeConfigurationException(java.lang.String, java.lang.Throwable)":"javax.xml.datatype.datatypeconfigurationexception.datatypeconfigurationexception（java.lang.string，java.lang.thrang.throwable）\r\n","java.util.prefs.PreferenceChangeListener.preferenceChange(java.util.prefs.PreferenceChangeEvent)":"java.util.prefs.preferencechangelistener.preferencechange（java.util.prefs.prefs.preferencechangeevent）\r\n","Basic implementation of an HTTP response that can be modified.":"可以修改的HTTP响应的基本实现。\r\n","org.w3c.dom.Element.getAttributeNode(java.lang.String)":"org.w3c.dom.element.getAttributenode（java.lang.string）\r\n","When the underlying XMLReader\n            recognizes the property name but doesn't support the\n            property.":"当基础XMLReader\r\n            识别属性名称，但不支持\r\n            财产。\r\n","javax.sql.RowSetMetaData.setColumnTypeName(int, java.lang.String)":"javax.sql.RowsetMetadata.setColumnTypename（int，java.lang.string）\r\n","Disables the current thread for thread scheduling purposes, for up to\n            the specified waiting time, unless the permit is available.":"禁用当前线程以进行线程调度目的，最多可\r\n            指定的等待时间，除非有许可证可用。\r\n","\r\n            Gets render frames that may be referenced by entries in ":"\r\n            获取渲染帧，这些帧可能由条目引用\r\n","INDEX_SIZE_ERR: Raised if the specified ":"index_size_err：如果指定了\r\n","java.util.zip.ZipInputStream.closeEntry()":"java.util.zip.zipinputstream.closeentry（）\r\n","Check if a message of the given level would actually be logged\n            by this logger.":"检查给定级别的消息是否实际记录\r\n            通过此记录器。\r\n"," (<b>SPI</b>)\n            for the <code>SSLContext</code> class.":" （<b> spi </b>）\r\n            对于<code> sslContext </code>类。\r\n","org.xml.sax.helpers.XMLFilterImpl.setDocumentLocator(org.xml.sax.Locator)":"org.xml.sax.helpers.xmlfilterimpl.setDocumentLocator（org.xml.sax.locator）\r\n","the format of a class attribute name.":"类属性名称的格式。\r\n","\r\n            Setting ":"\r\n            环境\r\n","A special value indicating \"no host\".":"指示“无主机”的特殊值。\r\n","Get the content event handler. -or- Set the content event handler.":"获取内容事件处理程序。 - 或 - 设置内容事件处理程序。\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryAcquire(long)":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.tryacquire（long）\r\n"," value from:\r\n            Some value between ":" 从：\r\n            两者之间的一些价值\r\n","CipherSpi":"cipherspi\r\n","Represents a function that accepts a long-valued argument and produces a\n            result.":"代表一个接受长期估算的论点并产生一个的函数\r\n            结果。\r\n","Creates an initially empty ":"创建一个最初空的\r\n","Creates a new instance of a PullParserFactory that can be used\n            to create XML pull parsers.":"创建一个可以使用的pulparserfactory的新实例\r\n            创建XML拉解析器。\r\n","java.util.function.DoubleBinaryOperator":"java.util.function.doublebinaryoperator\r\n","java.util.concurrent.atomic.AtomicInteger.intValue()":"java.util.concurrent.atomic.atomicinteger.intvalue（）\r\n","if listener is null.\n":"如果听众为无效。\r\n\r\n","Allow an application to register an error event handler.":"允许应用程序注册错误事件处理程序。\r\n",", if the\n   ":"，如果是\r\n   \r\n","Acts as an holder for a transformation Source in the form\n            of a stream of XML markup.":"充当形式的转换源的持有者\r\n            XML标记流。\r\n","Creates a socket and connects it to the specified port number\n            at the specified address.":"创建一个插座并将其连接到指定的端口号\r\n            在指定地址。\r\n","java.util.prefs.Preferences.getLong(java.lang.String, long)":"java.util.prefs.preferences.getlong（java.lang.string，长）\r\n","\r\n            Stops listening for incoming connections.\r\n            ":"停止聆听传入的连接。\r\n            \r\n","Returns the PSource algorithm name.":"返回PSOURCE算法名称。\r\n","Return the type of an attribute in the list (by name).":"返回列表中属性的类型（按名称）。\r\n","java.util.zip.ZipFile.getInputStream(java.util.zip.ZipEntry)":"java.util.zip.zipfile.getInputStream（java.util.zip.zipentry）\r\n","\r\n            The Access-Control-Allow-Credentials response header.\r\n            ":"\r\n            访问控制范围响应标头。\r\n            \r\n","Return an enumeration of all prefixes for a given URI whose\n            declarations are active in the current context.":"返回给定URI的所有前缀的列举\r\n            声明在当前上下文中处于活动状态。\r\n","algParams":"algparams\r\n","java.util.concurrent.locks.StampedLock.tryConvertToReadLock(long)":"java.util.concurrent.locks.stampedlock.tryconverttoreadlock（长）\r\n"," containing the notations declared in the\n DTD.":" 包含在\r\n DTD。\r\n",". If empty, the default authorization policy will be used.\r\n            ":"。如果为空，将使用默认授权策略。\r\n            \r\n","org.apache.http.conn.ssl.AbstractVerifier.getDNSSubjectAlts(java.security.cert.X509Certificate)":"org.apache.http.conn.ssl.abstractverifier.getdnssubjectalts（java.security.cert.cert.x509certificate）\r\n","Wrap an existing exception in a SAXParseException.":"将现有异常包裹在saxparseexception中。\r\n","javax.sql.RowSetWriter.writeData(javax.sql.RowSetInternal)":"javax.sql.RowsetWriter.writedata（javax.sql.RowsetInternal）\r\n","Creates a new RedirectException with the specified detail message.":"使用指定的详细信息创建一个新的RedirectException。\r\n","javax.sql.RowSetMetaData.setColumnType(int, int)":"javax.sql.RowsetMetadata.setColumnType（int，int）\r\n","java.util.regex.Matcher.pattern()":"java.util.regex.matcher.pattern（）\r\n","Tracks tunnelling to the target.":"跟踪隧道到目标。\r\n","Constructs a new, empty Attributes object with the specified\n            initial size.":"用指定的\r\n            初始尺寸。\r\n","javax.crypto.Cipher.updateAAD(byte[], int, int)":"javax.crypto.cipher.updateaad（byte []，int，int）\r\n","Constructs a parameter set for Diffie-Hellman, using a prime modulus\n            <code>p</code> and a base generator <code>g</code>.":"使用Prime模量为Diffie-Hellman构建参数集\r\n            <code> P </code>和基本生成器<code> g </code>。\r\n","SynchronousQueue":"Synchronousqueue\r\n","\r\n            Gets or sets a collection of additional attributes that will be added to the generated\r\n            ":"\r\n            获取或设置将添加到生成的其他属性的集合\r\n            \r\n","java.util.function.Function.compose(java.util.function.Function)":"java.util.function.function.compose（java.util.function.function.function）\r\n","Step: tunnel through proxy to other proxy.":"步骤：通过代理到其他代理的隧道。\r\n","Releases a connection for use by others.":"释放连接以供他人使用。\r\n","If the\n            feature is not currently readable.":"如果是\r\n            功能当前不可读取。\r\n","\n            returns true when passed this value as an argument,\n            the TransformerFactory returned from\n            ":"\r\n            当通过此值作为参数时返回true，\r\n            TransformerFactory从\r\n            \r\n","javax.crypto.Cipher":"javax.crypto.cipher\r\n","org.xmlpull.v1.XmlPullParser.setInput(java.io.Reader)":"org.xmlpull.v1.xmlpullparser.setInput（java.io.reader）\r\n","The required antiforgery request token was not provided in either form field \"{0}\" or header value \"{1}\".":"任何表单字段“ {0}”或标头值“ {1}”中未提供所需的抗验证请求令牌。\r\n","org.xml.sax.helpers.AttributesImpl.getType(int)":"org.xml.sax.helpers.attributesimpl.getType（int）\r\n","Computes a new duration whose value is <code>this+rhs</code>.":"计算一个新的持续时间，其值为<code> this+rhs </code>。\r\n","javax.security.auth.PrivateCredentialPermission":"javax.security.auth.privatecredentialpermission\r\n","\r\n            The attribute is associated with the most recently added element. If the value is ":"\r\n            该属性与最近添加的元素关联。如果值为\r\n","if the specified key cannot be used to initialize this cipher\n             instance.\n":"如果指定的键不能用于初始化此密码\r\n             实例。\r\n\r\n","\r\n            The HTTP method for the CORS preflight request.\r\n            ":"\r\n            CORS前飞行请求的HTTP方法。\r\n            \r\n","java.util.concurrent.atomic.AtomicBoolean.get()":"java.util.concurrent.atomic.atomicboolean.get（）\r\n","\r\n            Format the ":"\r\n            格式\r\n","if the current thread is interrupted":"如果当前线程中断\r\n","A client-side connection that relies on outside logic to connect sockets to the \n appropriate hosts.":"客户端连接依赖外部逻辑来将插座连接到\r\n 适当的主机。\r\n","Invalidates the authentication state by resetting its parameters.":"通过重置其参数来使身份验证状态无效。\r\n","Closes the current ZIP entry and positions the stream for reading the\n            next entry.":"关闭当前的拉链输入，并定位流以阅读\r\n            下一个条目。\r\n","org.xmlpull.v1.XmlPullParser.getNamespacePrefix(int)":"org.xmlpull.v1.xmlpullparser.getnamespaceprefix（int）\r\n","java.util.regex.Matcher.useAnchoringBounds(boolean)":"java.util.regex.matcher.useanchoringbounds（boolean）\r\n",", grouping elements\n            according to a classification function.":"，分组元素\r\n            根据分类功能。\r\n"," method is mapped to ":" 方法映射到\r\n","A code representing the type of the underlying object, as defined above.":"代表上面定义的基础对象类型的代码。\r\n","if an error occurs while exporting.":"如果导出时发生错误。\r\n","org.xml.sax.helpers.LocatorImpl.getLineNumber()":"org.xml.sax.helpers.locatorimpl.getlinenumber（）\r\n","#writeLock":"#writelock\r\n"," with the given initial\n            parameters.":" 给定的初始\r\n            参数。\r\n","java.util.zip.Deflater.finish()":"java.util.zip.deflater.finish（）（）\r\n","if the parameters cannot be uses to initialize this key\n             generator algorithm.\n":"如果不能使用参数来初始化此密钥\r\n             发电机算法。\r\n\r\n","Advances past all input up to but not including the next occurrence of\n            ":"超过所有输入的进步，但不包括下一次发生\r\n            \r\n","WRAP_MODE":"wrap_mode\r\n","\r\n            Gets a shared empty instance of ":"\r\n            获得共享的空的实例\r\n","The node is a <code>Comment</code>.":"节点是<code>注释</code>。\r\n","decryptKey":"解密\r\n","Formats a set of parameters.":"格式化一组参数。\r\n","Indicates whether or not the factory is configured to produce\n            parsers which are namespace aware\n            (it simply set feature XmlPullParser. -or- Specifies that the parser produced by this factory will provide\n            support for XML namespaces.":"指示工厂是否配置为生产\r\n            名称空间的解析器\r\n            （仅设置功能xmlpullparser。 -或 - 指定该工厂生产的解析器将提供\r\n            支持XML名称空间。\r\n","java.util.zip.GZIPInputStream.crc":"java.util.zip.gzipinputstream.crc\r\n","\r\n            The default value used by CookieAuthenticationMiddleware for the\r\n            CookieAuthenticationOptions.LoginPath\r\n            ":"\r\n            cookiuthenticationmiddleware使用的默认值\r\n            cookiuthenticationoptions.loginpath\r\n            \r\n","Acquires a permit from this semaphore, blocking until one is\n            available.":"从此信号量获取许可证，阻止直到一个\r\n            可用的。\r\n","Set the parameters to the log message.":"将参数设置为日志消息。\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getFirstQueuedThread()":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.getFirstqueuedthread（）\r\n","Returns the initialization vector (IV).":"返回初始化向量（IV）。\r\n","javax.net.ssl.TrustManagerFactory":"javax.net.ssl.trustmanagerfactory\r\n","A convenience method for creating a new ":"一种便利方法来创建新的\r\n","INVALID_CHARACTER_ERR: Raised if the specified qualified name is not\n   an XML name according to the XML version in use specified in the\n   ":"Invalid_character_err：如果指定的合格名称不是\r\n   根据在使用中指定的XML版本的XML名称\r\n   \r\n","javax.net.ssl.SSLParameters.setCipherSuites(java.lang.String[])":"javax.net.ssl.sslparameters.setciphersuites（java.lang.string []）\r\n","java.util.concurrent.PriorityBlockingQueue.offer(java.lang.Object)":"java.util.concurrent.priorityblockingqueue.offer（java.lang.Object）\r\n","org.w3c.dom.Document.normalizeDocument()":"org.w3c.dom.document.normalizedocument（）\r\n","The name of DTD; i.e., the name immediately following the\n ":"DTD的名称；即，立即在\r\n \r\n"," to the given value\n            and returns the old value.":" 给定值\r\n            并返回旧值。\r\n","If current event is START_TAG then if next element is TEXT then element content is returned\n            or if next event is END_TAG then empty string is returned, otherwise exception is thrown.":"如果当前事件是start_tag，则如果下一个元素是文本，则返回元素内容\r\n            或者，如果下一个事件是end_tag，则返回空字符串，否则会抛出异常。\r\n","\r\n            Gets or sets a comma delimited list of schemes from which user information is constructed.\r\n            ":"\r\n            获取或设置一个逗号界定的方案列表，从中构建了用户信息。\r\n            \r\n","org.w3c.dom.Node.lookupNamespaceURI(java.lang.String)":"org.w3c.dom.node.lookupnamespaceuri（java.lang.string）\r\n","javax.crypto.EncryptedPrivateKeyInfo.getEncryptedData()":"javax.crypto.encryptedprivateKeyinfo.getEncryptedData（）\r\n","java.util.concurrent.locks.ReentrantLock.isLocked()":"java.util.concurrent.locks.reentrantlock.islocked（）\r\n","\n Signals that the target server failed to respond with a valid HTTP response.":"\r\n 信号表明目标服务器无法使用有效的HTTP响应响应。\r\n","\n            returns true when passed this value as an argument,\n            the ":"\r\n            当通过此值作为参数时返回true，\r\n            这\r\n","java.util.jar.Manifest.Manifest(java.io.InputStream)":"java.util.jar.manifest.manifest（java.io.inputstream）\r\n","Parser or write operations may throw an <code>LSException</code> if the\n            processing is stopped.":"解析器或写操作可能会抛出<code> lsexception </code>如果\r\n            处理停止。\r\n","Parse an XML document from a system identifier (URI).":"从系统标识符（URI）中解析XML文档。\r\n"," and the\n      underlying ":" 和\r\n      潜在的\r\n","org.apache.http.params.HttpConnectionParams.setLinger(org.apache.http.params.HttpParams, int)":"org.apache.http.params.httpconnectionparams.setlinger（org.apache.http.params.httpparams，int）\r\n","java.util.concurrent.atomic.AtomicIntegerArray.getAndIncrement(int)":"java.util.concurrent.atomic.atomicintegerarray.getandincrement（int）\r\n","Tells the ":"告诉\r\n","java.util.concurrent.ThreadLocalRandom.current()":"java.util.concurrent.threadlocalrandom.current（）\r\n","Create a new SAXParseException with an embedded exception.":"创建一个具有嵌入式异常的新SaxParseException。\r\n"," implementation that delegates resolution of an attribute\n to the given default ":" 委派解决属性的实施\r\n 给定默认值\r\n","A single input source for an XML entity.":"XML实体的单个输入源。\r\n","Returns the path attribute of the cookie":"返回cookie的路径属性\r\n","javax.xml.xpath.XPathFactory.getFeature(java.lang.String)":"javax.xml.xpath.xpathfactory.getFeature（java.lang.string）\r\n","org.xml.sax.helpers.XMLFilterImpl.setFeature(java.lang.String, boolean)":"org.xml.sax.helpers.xmlfilterimpl.setFeature（java.lang.string，boolean）\r\n","java.util.zip.DeflaterOutputStream.def":"java.util.zip.deflateroutputstream.def\r\n","org.json.JSONObject.JSONObject(java.util.Map)":"org.json.jsonobject.jsonobject（java.util.map）\r\n","Constructs a BackingStoreException with the specified detail message.":"用指定的详细信息构建BackingStoreException。\r\n","javax.crypto.SecretKeyFactorySpi":"javax.crypto.secretkeyfactoryspi\r\n","If an attempt is made to modify the type of the underlying object.":"如果尝试修改基础对象的类型。\r\n","java.util.concurrent.atomic.LongAccumulator.LongAccumulator(java.util.function.LongBinaryOperator, long)":"java.util.concurrent.atomic.longaccumulator.longaccumulator（java.util.function.longbinaryoperator，long）\r\n","javax.xml.namespace.NamespaceContext.getPrefixes(java.lang.String)":"javax.xml.namespace.namespacecontext.getprefixes（java.lang.string）\r\n","Sends the request entity over the connection.":"通过连接发送请求实体。\r\n","The attribute name-value mappings.":"属性名称值映射。\r\n","Returns a function that always returns its input argument.":"返回一个始终返回其输入参数的函数。\r\n","Creates a KeyAgreement object.":"创建一个密钥对象。\r\n",", updates its value to\r\n            match the corresponding entry in the ":"，将其价值更新为\r\n            匹配相应的条目\r\n","\r\n            Appends a frame representing an element, i.e., a container for other frames.\r\n            In order for the ":"\r\n            附加代表元素的帧，即其他框架的容器。\r\n            为了\r\n","AtomicLong":"原子\r\n","\r\n            The default implementation of an ":"\r\n            默认实现一个\r\n","Encapsulate an XML parse error or warning.":"封装XML解析错误或警告。\r\n","Represents a function that accepts a double-valued argument and produces a\n            result.":"表示接受双重值参数并产生一个函数\r\n            结果。\r\n","org.xmlpull.v1.XmlPullParser.getAttributeValue(int)":"org.xmlpull.v1.xmlpullparser.getAttributeValue（int）\r\n","Unwrap a previously wrapped key.":"解开先前包装的密钥。\r\n","Receive notification of a skipped entity.":"收到跳过实体的通知。\r\n","Returns true if the given thread is currently queued.":"如果当前排队的给定线程，则返回true。\r\n","The location of the document or ":"文档的位置或\r\n","org.xml.sax.helpers.XMLReaderAdapter.parse(org.xml.sax.InputSource)":"org.xml.sax.helpers.xmlreaderadapter.parse（org.xml.sax.inputsource）\r\n","org.w3c.dom.Element.getAttributeNodeNS(java.lang.String, java.lang.String)":"org.w3c.dom.element.getAttributenodens（java.lang.string，java.lang.string）\r\n","\r\n            Throw if not all chunks of a cookie are available on a request for re-assembly.\r\n            ":"\r\n            如果不是所有的饼干块（如果不是全部），请要求重新组装。\r\n            \r\n","Tests whether the DOM implementation implements a specific feature and\n            that feature is supported by this node, as specified in .":"测试DOM实施是否实现特定功能和\r\n            该功能由该节点支持，如所指定。\r\n","Returns the names of the protocols which could be enabled for use.":"返回可以使用的协议的名称。\r\n","\r\n            Adds the default authorization policy to the endpoint(s).\r\n            ":"\r\n            将默认授权策略添加到端点。\r\n            \r\n","Returns the Initialization Vector (IV).":"返回初始化向量（IV）。\r\n","java.util.logging.Handler.setFilter(java.util.logging.Filter)":"java.util.logging.handler.setfilter（java.util.logging.filter）\r\n","Tells about chunked encoding for this entity.":"讲述该实体的大块编码。\r\n"," object used when parsing an input\n source.":" 解析输入时使用的对象\r\n 资源。\r\n"," with the given initial value.":" 具有给定的初始值。\r\n","javax.sql.RowSet.setRowId(int, java.sql.RowId)":"javax.sql.rowset.setrowid（int，java.sql.rowid）\r\n","java.util.logging.Level.Level(java.lang.String, int)":"java.util.logging.level.level（java.lang.string，int）\r\n","\r\n            A list of Touches for every point of contact which contributed to the event.\r\n            For the touchstart event this must be a list of the touch points that just became active with the current event.\r\n            For the touchmove event this must be a list of the touch points that have moved since the last event.\r\n            For the touchend and touchcancel events this must be a list of the touch points that have just been removed from the surface.\r\n            ":"\r\n            为事件做出贡献的每个联系点的触摸列表。\r\n            对于触点事件，这必须是刚刚在当前事件中变得活跃的接触点的列表。\r\n            对于TouchMove事件，这必须是自上次事件以来移动的接触点的列表。\r\n            对于触摸端和触摸事件，这一定是刚刚从表面删除的触摸点的列表。\r\n            \r\n","\n            containing the distinguished name in ASN.":"\r\n            包含ASN中的杰出名称。\r\n","org.xml.sax.XMLReader.parse(org.xml.sax.InputSource)":"org.xml.sax.xmlreader.parse（org.xml.sax.inputsource）\r\n","XML Pull Parser is an interface that defines parsing functionality provided\n            in <a href=\"http://www.":"XML拉动解析器是一个定义解析功能的接口\r\n            在<a href =“ http：//www。\r\n","\r\n            Affects whether cookies must be HttpOnly.\r\n            ":"\r\n            影响cookie是否必须是httponly。\r\n            \r\n","\r\n            Gets the current underlying array holding the segment's elements.\r\n            ":"获取当前的基础阵列持有该细分市场的元素。\r\n            \r\n","\r\n            Sign a principal in for the specified authentication scheme.\r\n            ":"\r\n            在指定的身份验证方案中签署本金。\r\n            \r\n",", or\r\n            the ":"， 或者\r\n            这\r\n","Text":"文本\r\n","javax.xml.transform.dom.DOMResult.getSystemId()":"javax.xml.transform.dom.domresult.getsystemid（）\r\n","javax.xml.XMLConstants.RELAXNG_NS_URI":"javax.xml.xmlconstants.relaxng_ns_uri\r\n","javax.security.auth.x500.X500Principal.X500Principal(java.io.InputStream)":"javax.security.auth.x500.x500 principal.x500 principal（java.io.inputstream）\r\n","Gets the timeout for the driver when a query operation is executed.":"执行查询操作时，请获得驱动程序的超时。\r\n","Obtains the scheme registry used by this manager.":"获取该经理使用的计划注册表。\r\n","\r\n            The original path base.\r\n            ":"\r\n            原始路径基础。\r\n            \r\n","IntConsumer":"intconsumer\r\n","When the name parameter is null.\n":"当名称参数为null时。\r\n\r\n","java.util.concurrent.ThreadPoolExecutor.prestartAllCoreThreads()":"java.util.concurrent.threadpoolexecutor.prestartallcorethreads（）\r\n"," names in this object.":" 此对象中的名称。\r\n","java.util.stream.Collectors.summarizingDouble(java.util.function.ToDoubleFunction)":"java.util.stream.collectors.summarizingdouble（java.util.function.todoublefunction）\r\n","The <code>DOMStringList</code> interface provides the abstraction of an\n            ordered collection of <code>DOMString</code> values, without defining or\n            constraining how this collection is implemented.":"<code> domStringList </code>接口提供了一个抽象\r\n            <code> domstring </code>值的有序收集，而无需定义或\r\n            限制该集合的实现方式。\r\n"," type that handles this scheme.\r\n            ":" 键入处理此方案。\r\n            \r\n","\r\n            Supplies information about a pointer event that is being raised.\r\n            ":"\r\n            提供有关正在提出的指针事件的信息。\r\n            \r\n","\r\n            Marks a previously appended region frame as closed. Calls to this method\r\n            must be balanced with calls to ":"\r\n            将先前附加的区域框架标记为关闭。调用此方法\r\n            必须与电话平衡\r\n","javax.crypto.KeyAgreementSpi.engineGenerateSecret()":"javax.crypto.keyagreementspi.enginegeneratesecret（）\r\n","org.xmlpull.v1.XmlPullParserException":"org.xmlpull.v1.xmlpullparserexception\r\n","Create a new Namespace support object.":"创建一个新的名称空间支持对象。\r\n"," node to indicate that\n            a child of that node has been added or removed.":" 节点表明\r\n            该节点的孩子已添加或删除。\r\n"," using all the parameters.":" 使用所有参数。\r\n","The interface for a public key in the Diffie-Hellman key exchange protocol.":"Diffie-Hellman密钥交换协议中的公钥的接口。\r\n","Creates an <code>HttpsURLConnection</code> using the\n            URL specified.":"创建<code> httpsurlConnection </code>使用\r\n            指定URL。\r\n","java.util.zip.ZipFile.OPEN_DELETE":"java.util.zip.zipfile.open_delete\r\n","Transfers the element to a consumer if it is possible to do so\n            before the timeout elapses.":"如果可以的话，将元素转移给消费者\r\n            在超时之前。\r\n","Compression flush mode used to flush out all pending output; may\n            degrade compression for some compression algorithms.":"压缩冲洗模式用于冲洗所有待处理的输出；可能\r\n            某些压缩算法的降级压缩。\r\n","org.xml.sax.helpers.AttributesImpl.setType(int, java.lang.String)":"org.xml.sax.helpers.attributesimpl.settype（int，java.lang.string）\r\n","\r\n            Gets the default authorization policy.\r\n            ":"\r\n            获取默认授权策略。\r\n            \r\n","\r\n            Return a failure due to some requirements not being met via ":"\r\n            由于某些要求未通过\r\n","org.xml.sax.ext.DeclHandler":"org.xml.sax.ext.declhandler\r\n","Returns a new CompletionStage that, when this stage completes\n            normally, is executed with this stage's result as the argument\n            to the supplied action.":"返回一个新的完整舞台，当这个阶段完成时\r\n            通常，以这个阶段的结果为执行\r\n            对所提供的行动。\r\n","\n   or ":"\r\n   或者\r\n","levelName":"LevelName\r\n","java.util.concurrent.SynchronousQueue.drainTo(java.util.Collection)":"java.util.concurrent.synchronousqueue.drainto（java.util.collection）\r\n","Returns an estimate of the number of threads waiting to\n            acquire.":"返回等待线程数的估计值\r\n            获得。\r\n","javax.security.auth.Subject.doAs(javax.security.auth.Subject, java.security.PrivilegedAction)":"javax.security.auth.subject.doas（javax.security.auth.subject，java.security.privilegedAction）\r\n","java.util.logging.MemoryHandler.publish(java.util.logging.LogRecord)":"java.util.logging.memoryhandler.publish（java.util.logging.logogrecord）\r\n","newAttr":"newattr\r\n","javax.crypto.NullCipher":"javax.crypto.nullcipher\r\n","\r\n            Interface implemented by components that receive notification of state changes.\r\n            ":"\r\n            接口由接收状态变更通知的组件实现。\r\n            \r\n","\r\n            Gets or sets the time limit for completing the authentication flow (15 minutes by default).\r\n            ":"\r\n            获取或设置完成身份验证流的时间限制（默认情况下为15分钟）。\r\n            \r\n","java.util.stream.Collectors.groupingByConcurrent(java.util.function.Function, java.util.stream.Collector)":"java.util.stream.collectors.groupingbyconcurrent（java.util.function.function，java.util.stream.collecter.collector）\r\n","This method works similarly to next() but will expose\n            additional event types (COMMENT, CDSECT, DOCDECL, ENTITY_REF, PROCESSING_INSTRUCTION, or\n            IGNORABLE_WHITESPACE) if they are available in input.":"此方法与Next（）相似，但会暴露\r\n            其他事件类型（注释，cdsect，docdecl，entity_ref，processing_instruction或\r\n            nighorable_whitespace）如果输入中可用。\r\n","Assigns the value to all the parameter with the given names":"用给定名称将值分配给所有参数\r\n","javax.crypto.KeyAgreementSpi.engineDoPhase(java.security.Key, boolean)":"javax.crypto.Keyagreementspi.Enginedophase（Java.security.key，boolean）\r\n","java.util.zip.GZIPOutputStream.GZIPOutputStream(java.io.OutputStream)":"java.util.zip.gzipoutputstream.gzipoutputstream（java.io.outputstream）\r\n","\r\n            Contains information about the login session as well as the user ":"\r\n            包含有关登录会话以及用户的信息\r\n","Create a new empty output destination object where\n            <code>LSOutput.":"创建一个新的空输出目标对象\r\n            <code> lsOutput。\r\n","java.util.concurrent.ThreadPoolExecutor.getQueue()":"java.util.concurrent.threadpoolexecutor.getqueue（）\r\n","fallback":"倒退\r\n","Return the value for the specified metric.":"返回指定度量的值。\r\n","\r\n            Gets or sets the function that is invoked when the CreatingTicket method is invoked.\r\n            ":"\r\n            获取或设置当调用创建计算方法时调用的函数。\r\n            \r\n","org.xmlpull.v1.XmlPullParser.getAttributeType(int)":"org.xmlpull.v1.xmlpullparser.getAttributetype（int）\r\n","The character encoding to use for the output.":"用于输出的字符编码。\r\n","Creates a new <code>JarInputStream</code> and reads the optional\n            manifest.":"创建一个新的<code> jarinputStream </code>并读取可选的\r\n            显现。\r\n","Parse a document.":"解析文件。\r\n","\r\n            If set this will be used by the CookieAuthenticationHandler for data protection.\r\n            ":"如果设置，则CookiuthenticationHandler将使用此功能来保护数据。\r\n            \r\n"," followed by ":" 其次是\r\n","The time zone to use in the date header.":"日期标题中使用的时区。\r\n","\r\n            The drag data item's type, typically a MIME type\r\n            ":"\r\n            阻力数据项的类型，通常是MIME类型\r\n            \r\n","If an attempt is made to create or change an object in a way which is\n            incorrect with regard to namespaces.":"如果尝试以一种方式创建或更改对象\r\n            关于名称空间不正确。\r\n","Document.normalizeDocument()":"document.normalizedocument（）\r\n","The configuration used when ":"使用的配置\r\n","Retrieves a node specified by local name and namespace URI.":"检索由本地名称和名称空间URI指定的节点。\r\n","Return the saved column number (1-based). -or- Set the column number for this locator (1-based).":"返回保存的列号（基于1）。 - 或 - 设置此定位器的列号（基于1）。\r\n","\r\n            Writes the extension format header, using the smallest one of these codes:\r\n            ":"\r\n            使用以下代码中最小的一个编写扩展格式标头：\r\n            \r\n"," should be active when it matches any prefix\r\n            of the current URL.\r\n            ":" 与任何前缀匹配时应该活跃\r\n            当前URL。\r\n            \r\n","Attempts to release this lock.":"尝试释放此锁。\r\n","if the specified output buffer is either too small for the\n             digest to be stored, the specified output buffer is ":"如果指定的输出缓冲区太小\r\n             要存储的摘要，指定的输出缓冲区为\r\n","Compares this tracked route to another.":"将此跟踪的路线与另一个路线进行比较。\r\n","java.util.concurrent.SynchronousQueue.offer(java.lang.Object, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.synchronousqueue.offer（java.lang.object，long，java.util.concurrent.timeunit）\r\n","The interface to a Diffie-Hellman public key.":"Diffie-Hellman公钥的接口。\r\n","if one of the destination buffers is read-only.":"如果目的地缓冲区之一是仅读取的。\r\n","\r\n            Calls success creating a ticket with the ":"\r\n            呼叫成功创建票与\r\n","org.xml.sax.ext.LexicalHandler.endDTD()":"org.xml.sax.ext.lexicalhandler.enddtd（）\r\n","java.util.prefs.Preferences.toString()":"java.util.prefs.preferences.tostring（）\r\n","org.xml.sax.helpers.ParserAdapter.startDocument()":"org.xml.sax.helpers.parseradapter.startdocument（）\r\n","Format a LogRecord into a standard XML format.":"格式化ligrecord为标准XML格式。\r\n","\r\n             The maximum size of cookie to send back to the client. If a cookie exceeds this size it will be broken down into multiple\r\n             cookies. Set this value to null to disable this behavior. The default is 4090 characters, which is supported by all\r\n             common browsers.\r\n            \r\n             Note that browsers may also have limits on the total size of all cookies per domain, and on the number of cookies per domain.\r\n             ":"\r\n             将曲奇的最大尺寸发送回客户。如果cookie超过此尺寸，它将被分解为多个\r\n             饼干。将此值设置为null以禁用此行为。默认值为4090个字符，所有字符都支持\r\n             常见的浏览器。\r\n            \r\n             请注意，浏览器也可能对每个域的所有cookie的总大小以及每个域的cookie数量有限制。\r\n             \r\n","Returns the word size in bits.":"返回单词大小的位。\r\n","Represents a function that accepts a long-valued argument and produces an\n            int-valued result.":"代表一个接受长期估算的论点并产生一个功能\r\n            int值结果。\r\n","Returns an estimate of the number of threads waiting to acquire\n            either the read or write lock.":"返回等待获得的线程数量的估计值\r\n            读取或写锁。\r\n","\r\n            Defines an interface that provides the mechanisms for binding to various types of ":"\r\n            定义一个界面，该界面提供了与各种类型的结合机制\r\n"," (<b>SPI</b>)\n            for the <code>Cipher</code> class.":" （<b> spi </b>）\r\n            对于<code> cipher </code>类。\r\n","An object that provides hooks for connection pool management.":"为连接池管理提供钩子的对象。\r\n","javax.crypto.interfaces.DHKey":"javax.crypto.interfaces.dhkey\r\n","Interface for an HTTP client.":"HTTP客户端的接口。\r\n","javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler()":"javax.xml.transform.sax.saxtransformerfactory.newtransformerhandler（）\r\n","Sets the anchoring of region bounds for this matcher.":"为该匹配器设置区域边界的锚定。\r\n","java.util.concurrent.locks.StampedLock.asWriteLock()":"java.util.concurrent.locks.stampedlock.aswritelock（）\r\n","java.util.prefs.AbstractPreferences.isUserNode()":"java.util.prefs.abstractpreferences.isusernode（）\r\n","javax.sql.RowSet.setTime(java.lang.String, java.sql.Time)":"javax.sql.Rowset.setTime（java.lang.string，java.sql.time））\r\n","Acquires the lock if it is not held by another thread within the given\n            waiting time and the current thread has not been\n            Thread#interrupt interrupted.":"如果锁定在给定的另一个线程中，则获取锁\r\n            等待时间和当前线程尚未\r\n            线程＃中断中断。\r\n","  key.":"  钥匙。\r\n","Obtains the value of the HOURS field as an integer value,\n            or 0 if not present.":"获得小时字段的值作为整数值，\r\n            或0如果不存在。\r\n","\r\n            Peeks at the next value without advancing the reader.\r\n            ":"\r\n            窥视下一个值，而无需推进读者。\r\n            \r\n","Log a CONFIG message, which is only to be constructed if the logging\n            level is such that the message will actually be logged.":"日志配置消息，仅在记录时才能构造\r\n            级别的级别可以实际记录该消息。\r\n","java.util.logging.Logger.setFilter(java.util.logging.Filter)":"java.util.logging.logger.setfilter（java.util.logging.filter）\r\n","Test this <code>QName</code> for equality with another\n            <code>Object</code>.":"测试此<code> qname </code>与另一个\r\n            <code>对象</code>。\r\n","ReentrantReadWriteLock":"重新进入wratwritelock\r\n"," is different from ":" 与众不同\r\n","java.util.zip.DeflaterOutputStream.buf":"java.util.zip.deflateroutputstream.buf\r\n","org.json.JSONArray.put(double)":"org.json.jsonarray.put（double）\r\n","if creating the socket fails.":"如果创建插座失败。\r\n","java.util.concurrent.RejectedExecutionHandler.rejectedExecution(java.lang.Runnable, java.util.concurrent.ThreadPoolExecutor)":"java.util.concurrent.RejectedExecutionHandler.RejectedExecution（java.lang.runnable，java.util.util.concurrent.threadpoolexecutor）\r\n","A default instance of this class, for use as default or fallback.":"此类的默认实例，用于默认或后备。\r\n","java.util.prefs.AbstractPreferences.absolutePath()":"java.util.prefs.abstractpreferences.absolutepath（）\r\n","Parse the content of the given file as an XML document\n            and return a new DOM ":"将给定文件的内容解析为XML文档\r\n            并返回新的dom\r\n","java.util.concurrent.atomic.AtomicIntegerArray.getAndDecrement(int)":"java.util.concurrent.atomic.atomicintegerarray.getanddecrement（int）\r\n","\r\n            Navigates to the specified URI.\r\n            ":"\r\n            导航到指定的URI。\r\n            \r\n","Constructs a JarException with no detail message.":"构建一个没有详细信息的Jarexception。\r\n"," to\r\n            be its own ":" 至\r\n            成为自己的\r\n","The default scheme is \"http\".":"默认方案是“ HTTP”。\r\n","Returns a string representation of this preferences node,\n            as if computed by the expression:":"返回此首选项节点的字符串表示，\r\n            好像是由表达式计算的：\r\n"," if it exists and is a ":" 如果存在并且是一个\r\n","ExemptionMechanism":"免税机构\r\n","\r\n            Provides extension methods to describe the state of ":"\r\n            提供扩展方法来描述\r\n","Encapsulate a general SAX error or warning.":"封装一般的SAX错误或警告。\r\n","Creates a new MalformedCookieException with the specified detail message and cause.":"使用指定的详细信息和原因创建一个新的MalformedCookieException。\r\n","\r\n            Contains the result of an Authenticate call\r\n            ":"\r\n            包含一个身份验证的结果\r\n            \r\n","\r\n            Casts a ":"\r\n            铸造\r\n","Obtains the scheme name.":"获取方案名称。\r\n"," directly.\r\n            ":" 直接地。\r\n            \r\n","Return the type of an attribute in the list (by position).":"返回列表中属性的类型（按位置）。\r\n","Get the system identifier of the entity where the exception occurred.":"获取发生例外的实体的系统标识符。\r\n","If an unrecoverable error occurs\n   during the course of the transformation.\n":"如果发生不可恢复的错误\r\n   在转型过程中。\r\n\r\n"," > 0xFFFFFFFFL.\n":" > 0xfffffffl。\r\n\r\n","java.util.stream.BaseStream.close()":"java.util.stream.basestream.close（）\r\n","if value is ":"如果值为\r\n","Return the system identifier for the current document event.":"返回当前文档事件的系统标识符。\r\n","Defines the name of the cookie specification to be used for HTTP state management.":"定义用于HTTP状态管理的Cookie规范的名称。\r\n","java.util.concurrent.locks.StampedLock.tryWriteLock()":"java.util.concurrent.locks.stampedlock.tritelock（）\r\n","java.util.zip.ZipException.ZipException()":"java.util.zip.zipexception.zipexception（）\r\n"," from a value encoded with\r\n            ":" 从编码的值\r\n            \r\n","Removes the child node indicated by <code>oldChild</code> from the list\n            of children, and returns it.":"从列表中删除由<code> Oldchild </code>指示的子节点\r\n            儿童，并返回它。\r\n","Tries to remove from the work queue all ":"试图从工作队列中删除全部\r\n"," doesn't exist or\n     cannot be coerced to a long.\n":" 不存在或\r\n     无法强迫长时间。\r\n\r\n","java.util.prefs.BackingStoreException.BackingStoreException(java.lang.String)":"java.util.prefs.backingstoreexception.backingstoreexception（java.lang.string）\r\n","em":"Em\r\n","java.util.zip.Deflater.setDictionary(byte[])":"java.util.zip.deflater.setDictionary（byte []）\r\n","If string with the feature name is null\n":"如果具有功能名称的字符串为null\r\n\r\n","javax.crypto.spec.RC5ParameterSpec.getIV()":"javax.crypto.spec.rc5parameterspec.getiv（）\r\n","org.xml.sax.helpers.NamespaceSupport.setNamespaceDeclUris(boolean)":"org.xml.sax.helpers.namespacesupport.setnamespacedecluris（boolean）\r\n","org.xml.sax.SAXNotSupportedException.SAXNotSupportedException()":"org.xml.sax.saxnotsupportedexception.saxnotsupportedException（）\r\n","javax.net.ssl.KeyManagerFactorySpi.engineInit(javax.net.ssl.ManagerFactoryParameters)":"javax.net.ssl.keymanagerfactoryspi.engineinit（javax.net.ssl.managerfactoryparameters）\r\n","Receives the request line and headers of the next response available from\n this connection.":"接收请求行和下一个响应的标题\r\n 这个连接。\r\n","java.util.concurrent.locks.ReentrantReadWriteLock.getReadHoldCount()":"java.util.concurrent.locks.reentrantreadwritelock.getReadholdCount（）\r\n","org.json.JSONArray.length()":"org.json.jsonarray.length（）\r\n","org.apache.http.conn.scheme.SocketFactory.createSocket()":"org.apache.http.conn.scheme.socketfactory.createsocket（）\r\n","javax.net.ssl.SSLEngine.getHandshakeApplicationProtocolSelector()":"javax.net.ssl.sslengine.gethandshakeapplication protocococolector（）\r\n","java.util.concurrent.LinkedBlockingDeque.offerFirst(java.lang.Object)":"java.util.concurrent.linkedblockingdeque.offerfirst（java.lang.object）\r\n","javax.net.ssl.HttpsURLConnection.getDefaultHostnameVerifier()":"javax.net.ssl.httpsurlconnection.getDefaulthostNameVerifier（）\r\n","Returns the parent of the node that was added or removed.":"返回添加或删除的节点的父。\r\n","javax.crypto.KeyAgreement.getInstance(java.lang.String)":"javax.crypto.keyagreement.getinstance（java.lang.string）\r\n","javax.sql.RowSet.setTimestamp(int, java.sql.Timestamp, java.util.Calendar)":"javax.sql.Rowset.setTimestamp（int，java.sql.timestamp，java.util.calendar）\r\n","if the specified provider cannot provider the requested\n             protocol.":"如果指定的提供商无法提供者\r\n             协议。\r\n","java.util.prefs.AbstractPreferences.parent()":"java.util.prefs.abstractpreferences.parent（）\r\n","javax.xml.xpath.XPathFactory.setFeature(java.lang.String, boolean)":"javax.xml.xpath.xpathFactory.setFeature（java.lang.string，boolean）\r\n","\r\n            Gets the next message pack type to be read.\r\n            ":"获取要读取的下一个消息包类型。\r\n            \r\n","A sentinel value used to explicitly define a name with no value.":"用于明确定义没有值的名称的哨兵值。\r\n","The RFC 2965 compliant policy.":"RFC 2965符合政策。\r\n","Create a new <code>TransformerFactoryConfigurationError</code> with a\n            given <code>Exception</code> base cause of the error.":"使用一个新的<code> trransformerFactoryConfigurationError </code>\r\n            给定<code>异常</code>错误的基本原因。\r\n","org.xml.sax.helpers.XMLFilterImpl.startDocument()":"org.xml.sax.helpers.xmlfilterimpl.startdocument（）\r\n","javax.xml.datatype.DatatypeFactory.newDurationYearMonth(boolean, int, int)":"javax.xml.datatype.datatypefactory.newdurationyearmonth（boolean，int，int）\r\n","org.json.JSONStringer.object()":"org.json.jsonstringer.object（）\r\n","javax.net.ssl.SSLEngine.getPeerPort()":"javax.net.ssl.sslengine.getpeerport（）\r\n","org.xml.sax.helpers.DefaultHandler.endPrefixMapping(java.lang.String)":"org.xml.sax.helpers.defaulthandler.endprefixmapping（java.lang.string）\r\n",". Derived classes can override this to change how\r\n            ":"。派生的类可以覆盖这一点，以改变\r\n            \r\n","\r\n            Select a top level value from the json user data with the given key name and add it as a Claim.\r\n            This no-ops if the key is not found or the value is empty.\r\n            ":"\r\n            从JSON用户数据中选择具有给定关键名称的顶级值，然后将其添加为索赔。\r\n            如果找不到键或值为空的键，则此无操作。\r\n            \r\n",", or it is ":"，或者是\r\n","Returns the #get current value as an ":"返回#get当前值作为一个\r\n","Creates a new AtomicIntegerArray with the same length as, and\n            all elements copied from, the given array.":"创建一个新的AtomicIntegerarray，其长度与\r\n            从给定的数组复制的所有元素。\r\n","Exception class for an unsupported operation.":"不受支持的操作的异常类。\r\n"," entries.\r\n            ":" 条目。\r\n            \r\n","node change events":"节点更改事件\r\n","\r\n            Gets the optional list of claim values, which, if present, \r\n            the claim must match.\r\n            ":"\r\n            获取可选的索赔值列表，如果存在，\r\n            索赔必须匹配。\r\n            \r\n","omit-xml-declaration = \"yes\" | \"no\".":"amit-xml-declaration =“ yes” | “不”。\r\n","Returns the SSLParameters in effect for this SSLEngine. -or- Applies SSLParameters to this engine.":"返回SSLENGINE实际上有效的SSLPARAMETER。 - 或 - 将SSLParameters应用于该引擎。\r\n","Initializes this cipher instance with the public key from the specified\n certificate and a source of randomness.":"用指定的公共密钥初始化此密钥\r\n 证书和随机性来源。\r\n","Represents a function that accepts two arguments and produces an int-valued\n            result.":"代表一个接受两个参数并产生INT值的函数\r\n            结果。\r\n","Constant for key unwrapping operation mode.":"钥匙打开操作模式的常数。\r\n","java.util.jar.Pack200.newPacker()":"java.util.jar.pack200.newpacker（）\r\n"," scheme..\r\n            ":" 方案..\r\n            \r\n","Constructor for use by subclasses":"用于子类使用的构造函数\r\n","java.util.regex.Matcher.hitEnd()":"java.util.regex.matcher.hitend（）\r\n","org.w3c.dom.Document.importNode(org.w3c.dom.Node, boolean)":"org.w3c.dom.document.importnode（org.w3c.dom..node，boolean）\r\n","Sets SO_LINGER with the specified linger time in seconds.":"将So_linger设置为指定的持续时间以秒为单位。\r\n","org.xml.sax.helpers.DefaultHandler.endElement(java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.helpers.defaulthandler.endelement（java.lang.string，java.lang.string，java.lang.string）\r\n","schemas":"模式\r\n","Construct new KeyStoreBuilderParameters from the specified\n            java.":"从指定的\r\n            爪哇。\r\n"," which applies an ":"适用于\r\n","\r\n            Gets or sets the ":"\r\n            获取或设置\r\n","\r\n            The name of the scheme being built.\r\n            ":"\r\n            构建计划的名称。\r\n            \r\n","Updates the status line of this response with a new reason phrase.":"用新的原因短语更新此响应的状态行。\r\n","Get a TemplatesHandler object that can process SAX\n            ContentHandler events into a Templates object.":"获取一个可以处理SAX的模板Handler对象\r\n            ContentHandler事件进入模板对象。\r\n"," or value's length is bigger than three\n             quarters of ":" 或价值的长度大于三\r\n             四分之一\r\n","if an IO error occurs while creating this ":"如果在创建此事时发生IO错误\r\n","StandardConstants#SNI_HOST_NAME host_name":"standardConstants＃sni_host_name host_name\r\n","javax.crypto.spec.DESKeySpec.DES_KEY_LEN":"javax.crypto.spec.deskeyspec.des_key_len\r\n","org.json.JSONObject.optDouble(java.lang.String)":"org.json.jsonobject.optdouble（java.lang.string）\r\n"," callback that can\n be used to abort an active connection.":" 可以回调\r\n 被用来中止主动连接。\r\n","java.util.regex.Pattern.matches(java.lang.String, java.lang.CharSequence)":"java.util.regex.pattern.matches（java.lang.string，java.lang.charsequence）\r\n","org.xml.sax.AttributeList.getName(int)":"org.xml.sax.attributelist.getName（int）\r\n","\r\n            Add core authentication services needed for ":"\r\n            添加所需的核心身份验证服务\r\n","java.util.prefs.PreferencesFactory.userRoot()":"java.util.prefs.preferencesfactory.userroot（）\r\n","java.util.logging.LogManager.getProperty(java.lang.String)":"java.util.logging.logmanager.getProperty（java.lang.string）\r\n","org.w3c.dom.ls.LSParser.ACTION_APPEND_AS_CHILDREN":"org.w3c.dom.ls.lsparser.action_append_as_children\r\n","javax.net.ssl.SSLContext.getInstance(java.lang.String)":"javax.net.ssl.sslcontext.getinstance（java.lang.string）\r\n","org.w3c.dom.Element.getElementsByTagNameNS(java.lang.String, java.lang.String)":"org.w3c.dom.element.getElementsbytagnamens（java.lang.string，java.lang.string）\r\n","Constructs a parameter set for RC2 from the given effective key size\n            (in bits) and an 8-byte IV.":"从给定有效的密钥大小为RC2构建参数集\r\n            （位于位）和8字节IV。\r\n","java.util.prefs.Preferences":"java.util.prefs.preferences\r\n","if the new maximum is\n         less than or equal to zero, or\n         less than the ":"如果新的最大值是\r\n         小于或等于零，或\r\n         小于\r\n","when attempting to set this\n    after any context has been pushed.\n":"试图设置这个\r\n    在推动任何情况下。\r\n\r\n","\r\n            The current segment in the ":"\r\n            当前段\r\n","Resets the counts\n\n":"重置计数\r\n\r\n\r\n","Atomically sets the field of the given object managed by this updater\n            to the given updated value if the current value ":"原子设置该更新机管理的给定对象的字段\r\n            如果当前值\r\n","Compression level for fastest compression.":"最快压缩的压缩水平。\r\n","Pack the data from the specified jar input stream to the specified\n output stream.":"从指定的JAR输入流到指定的数据包装数据\r\n 输出流。\r\n","javax.xml.parsers.SAXParser.parse(java.io.InputStream, org.xml.sax.HandlerBase)":"javax.xml.parsers.saxparser.parse（java.io.inputstream，org.xml.sax.handlerbase）\r\n","if the specified key can not be used to initialize this\n             cipher instance.":"如果不能使用指定的密钥来初始化此\r\n             密码实例。\r\n","Acquires the read lock unless the current thread is\n ":"除非当前线程为\r\n \r\n",".\r\n             ":"。\r\n             \r\n","\r\n            The second level key to look for in the json user data.\r\n            ":"\r\n            在JSON用户数据中查找的第二级键。\r\n            \r\n","Lookup an implementation of the <code>SchemaFactory</code> that supports the specified\n            schema language and return it.":"查找支持指定的<code> schemafactory </code>\r\n            模式语言并返回它。\r\n","Generates the shared secret and returns it in a new buffer.":"生成共享的秘密，并将其返回新的缓冲区。\r\n","Get the localization resource bundle name -or- Set the localization resource bundle name.":"获取本地化资源捆绑名称 - 或 - 设置本地化资源捆绑名称。\r\n","411 Length Required":"需要411长度\r\n","Org.Apache.Http.Conn.EofSensorInputStream.close()":"org.apache.http.conn.eofsensorinputstream.close（）\r\n","org.xml.sax.HandlerBase.endElement(java.lang.String)":"org.xml.sax.handlerbase.endelement（java.lang.string）\r\n","\r\n            Extension method for authenticate.\r\n            ":"\r\n            用于身份验证的扩展方法。\r\n            \r\n","if the name parameter is null.\n":"如果名称参数为null。\r\n\r\n","javax.xml.transform.stream.StreamSource.getInputStream()":"javax.xml.transform.stream.streamsource.getInputstream（）\r\n"," has been modified.\r\n            ":" 已修改。\r\n            \r\n","\r\n            Adds a validation message for the specified field.\r\n            ":"\r\n            为指定字段添加了验证消息。\r\n            \r\n","java.util.jar.JarException.JarException()":"java.util.jar.jarexception.jarexception（）\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(int, long)":"java.util.concurrent.locks.abstractqueedsynchronizer.tryacquirenanos（int，long）\r\n",". -or- Set the ":"。 - 或 - 设置\r\n","if this is a root node.\n":"如果这是根节点。\r\n\r\n","The <code>DOMImplementation</code> interface provides a number of methods\n            for performing operations that are independent of any particular instance\n            of the document object model.":"<code> domimplementation </code>接口提供了许多方法\r\n            用于执行独立于任何特定实例的操作\r\n            文档对象模型的。\r\n","year":"年\r\n","javax.net.ssl.SSLContextSpi":"javax.net.ssl.sslcontextspi\r\n","java.util.regex.Matcher.end(int)":"java.util.regex.matcher.end（int）\r\n","javax.net.ServerSocketFactory":"javax.net.serversocketFactory\r\n","Sets the thread keep-alive time, which is the amount of time\n            that threads may remain idle before being terminated.":"设置线程保持阳离时间，这是时间的时间\r\n            该线程在终止之前可能会保持空闲状态。\r\n","javax.xml.transform.sax.SAXResult":"javax.xml.transform.sax.saxresult\r\n"," implementation.\r\n            ":" 执行。\r\n            \r\n","GZIP header magic number.":"GZIP标头魔术号码。\r\n","javax.crypto.Mac.init(java.security.Key, java.security.spec.AlgorithmParameterSpec)":"javax.crypto.mac.init（java.security.key，java.security.spec.algorithmparameterspec）\r\n"," to be used by the \n HTTP methods that this collection of parameters applies to.":" 被\r\n 此参数集合适用的HTTP方法。\r\n","\r\n            Helper code used when implementing authentication middleware\r\n            ":"\r\n            实施身份验证中间件时使用的辅助代码\r\n            \r\n","\r\n            Sets the 'Cache-Control' header to 'no-cache, no-store' and 'Pragma' header to 'no-cache' overriding any user set value.\r\n            ":"\r\n            将“缓存控制”标头设置为“无缓存”，“无存储”和“ Pragma”标头，以覆盖任何用户设置值。\r\n            \r\n","Returns a collection containing those threads that may be\n            waiting on the given condition associated with the write lock.":"返回包含那些可能是的线程的集合\r\n            等待与写锁相关的给定条件。\r\n","\r\n            Returns a value that determines whether using the dispatcher to invoke a work item is required\r\n            from the current context.\r\n            ":"\r\n            返回一个值，该值确定是否需要使用调度员调用工作项目\r\n            从当前上下文。\r\n            \r\n","Object#notify notify":"对象＃通知通知\r\n","Arrives at this phaser and deregisters from it without waiting\n            for others to arrive.":"在没有等待的情况下到达这个移位器和先驱者\r\n            其他人到达。\r\n","org.xml.sax.Attributes":"org.xml.sax.Attributes\r\n","java.util.function.IntPredicate.test(int)":"java.util.function.intpredicate.test（int）\r\n","Maintains a map of HTTP request handlers keyed by a request URI pattern.":"维护由请求URI模式键入的HTTP请求处理程序的地图。\r\n","This is the basic login exception.":"这是基本登录异常。\r\n","java.util.concurrent.ScheduledThreadPoolExecutor.setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)":"java.util.concurrent.scheduledthreadpoolexecutor.setexecuteexistingdelayedtasksaftershutdownpolicy（boolean）\r\n","org.apache.http.params.HttpConnectionParams.getTcpNoDelay(org.apache.http.params.HttpParams)":"org.apache.http.params.httpconnectionparams.gettcpnodelay（org.apache.http.params.httpparams）\r\n","org.xml.sax.HandlerBase.warning(org.xml.sax.SAXParseException)":"org.xml.sax.handlerbase.warning（org.xml.sax.saxparseexception）\r\n","Returns true if this connection will act in client mode when handshaking.":"如果此连接在握手时将在客户端模式下起作用，则返回true。\r\n","Constructor that takes a password, salt, iteration count for\n            generating PBEKey of fixed-key-size PBE ciphers.":"采用密码，盐，迭代计数的构造函数\r\n            生成固定大小的PBE密码的PBEKEY。\r\n","\r\n            Add all ClaimsIdentities from an additional ClaimPrincipal to the ClaimsPrincipal\r\n            Merges a new claims principal, placing all new identities first, and eliminating\r\n            any empty unauthenticated identities from context.User\r\n            ":"\r\n            将所有索赔人从额外的索赔原理中添加到索赔上的索赔。\r\n            合并新的主张校长，将所有新身份放在首位，并消除\r\n            从context.user\r\n            \r\n","\r\n            Gets or sets the time at which the authentication ticket was issued.\r\n            ":"\r\n            获取或设置发行身份验证票的时间。\r\n            \r\n","Creates a <code>SSLException</code> with the specified\n            detail message and cause.":"使用指定的\r\n            详细信息和原因。\r\n","org.xml.sax.helpers.XMLReaderAdapter.startDocument()":"org.xml.sax.helpers.xmlreaderadapter.startdocument（）\r\n","Choose an alias to authenticate the server side of a secure\n            socket given the public key type and the list of\n            certificate issuer authorities recognized by the peer (if any).":"选择一个别名来验证安全的服务器端\r\n            插座给定公共密钥类型和列表\r\n            证书发行人当局由同伴认可（如果有）。\r\n","Return the current entity resolver. -or- Set the entity resolver.":"返回当前实体解析器。 - 或设置实体解析器。\r\n","\r\n            Gets or sets the type of the event.\r\n            ":"\r\n            获取或设置事件的类型。\r\n            \r\n","Signals that the connection has been successfully open.":"信号表明该连接已成功打开。\r\n"," or\n      ":" 或者\r\n      \r\n","javax.crypto.KeyAgreement.doPhase(java.security.Key, boolean)":"javax.crypto.keyagreement.dophase（java.security.key，boolean）\r\n"," to write to the given filename,\n            with optional append.":" 要写入给定的文件名，\r\n            带有可选的附加。\r\n","Acquires the read lock.":"获取读取锁。\r\n","If parse produces a SAX error.":"如果解析会产生SAX错误。\r\n","Creates a DOM Document object of the specified type with its document\n            element.":"使用其文档创建指定类型的DOM文档对象\r\n            元素。\r\n","java.util.zip.ZipEntry.setExtra(byte[])":"java.util.zip.zipentry.setextra（byte []）\r\n","Assigns the ":"分配\r\n","\r\n            Get a bool value from the ":"\r\n            从\r\n","This feature determines whether the document declaration\n            is processed.":"此功能确定文档声明是否\r\n            已处理。\r\n","Check if this ":"检查是否\r\n","org.xml.sax.DocumentHandler.endDocument()":"org.xml.sax.documenthandler.enddocument（）\r\n","#convert(long, TimeUnit) MICROSECONDS.convert(duration, this)":"#convert（long，timeunit）microseconds.convert（持续时间，此）\r\n","Unconditionally sets the value of both the reference and mark.":"无条件设置参考和标记的值。\r\n","java.util.regex.MatchResult.group(int)":"java.util.regex.matchresult.group（int）\r\n","java.util.prefs.AbstractPreferences.childSpi(java.lang.String)":"java.util.prefs.abstractpreferences.childspi（java.lang.string）\r\n","Finishes the MAC operation.":"完成MAC操作。\r\n","if one of the protocols is not supported.\n":"如果不支持其中一个协议。\r\n\r\n","\r\n            Invoked when a connection to the client was dropped.\r\n            ":"\r\n            当与客户的连接丢弃时被调用。\r\n            \r\n","\r\n            Adds a ":"\r\n            添加\r\n","java.util.logging.MemoryHandler.MemoryHandler(java.util.logging.Handler, int, java.util.logging.Level)":"java.util.logging.memoryhandler.memoryhandler（java.util.logging.handler，int，java.util.logging.Level）\r\n","424 Failed Dependency":"424失败的依赖性\r\n","javax.crypto.spec.DHParameterSpec.getG()":"javax.crypto.spec.dhparameterspec.getg（）\r\n","org.xml.sax.helpers.ParserAdapter.processingInstruction(java.lang.String, java.lang.String)":"org.xml.sax.helpers.parseradapter.parseradapter.processinginstruction（java.lang.string，java.lang.string）\r\n","java.util.concurrent.atomic.AtomicLong.getAndIncrement()":"java.util.concurrent.atomic.atomiclong.getandincrement（）\r\n","Construct a persistent copy of an existing attribute list.":"构建现有属性列表的持久副本。\r\n","javax.xml.datatype.DatatypeFactory.newDuration(long)":"javax.xml.datatype.datatypefactory.newduration（long）\r\n","\r\n            True if successful. ":"如果成功的话，是真的。\r\n","javax.xml.validation.Validator.setFeature(java.lang.String, boolean)":"javax.xml.Validation.Validator.setFeature（Java.lang.String，boolean）\r\n","java.util.zip.Deflater.Deflater(int)":"java.util.zip.deflater.deflater（int）\r\n","if the content has been obtained before, or\n          has not yet been provided\n":"如果之前已经获得了内容，或者\r\n          尚未提供\r\n\r\n","Returns the maximum key length for the specified transformation\n            according to the installed JCE jurisdiction policy files.":"返回指定转换的最大密钥长度\r\n            根据已安装的JCE管辖权策略文件。\r\n","Returns <code>true</code> when an attribute with a given name is\n            specified on this element or has a default value, <code>false</code>\n            otherwise.":"返回<code> true </code>当给定名称的属性为\r\n            在此元素上指定或具有默认值，<code> false </code>\r\n            否则。\r\n","Maximum length of string allowed as a key (80 characters).":"字符串的最大长度作为键（80个字符）。\r\n","\r\n            Decodes supplied string by replacing the non-URL encodable characters with URL encodable characters and\r\n            then decodes the Base64 string.\r\n            ":"\r\n            通过用URL编码字符替换非编码字符和\r\n            然后解码base64字符串。\r\n            \r\n"," whose scheme, host\n and port are taken from the target host, but whose path, query and\n fragment are taken from the existing URI.":" 谁的计划，主机\r\n 和端口取自目标主机，但其路径，查询和\r\n 片段取自现有的URI。\r\n","If expression cannot be evaluated.":"如果无法评估表达。\r\n","Get the base ID (URL or system ID) from where URLs\n            will be resolved. -or- Set the base ID (URL or system ID) from where URLs\n            will be resolved.":"从哪里获取基本ID（URL或系统ID）\r\n            将解决。 - 或 - 从url的位置设置基本ID（URL或系统ID）\r\n            将解决。\r\n","Sets the value at ":"将值设置为\r\n","Returns the major version number of the protocol.":"返回协议的主要版本号。\r\n","FORMAT_FAILURE is used when formatting fails for any reason.":"格式化出于任何原因失败时使用FORMAT_FAILURE。\r\n","java.util.concurrent.ThreadPoolExecutor.shutdownNow()":"java.util.concurrent.threadpoolexecutor.shutdownnow（）\r\n","Default implementation of the ":"默认实现\r\n","java.util.concurrent.CyclicBarrier CyclicBarrier":"java.util.concurrent.cyclarer cycliclier\r\n","javax.xml.transform.TransformerFactoryConfigurationError.TransformerFactoryConfigurationError()":"javax.xml.transform.transformerfactoryConfigurationError.transformerFactoryConfigurationErrator（）\r\n","org.xml.sax.ContentHandler":"org.xml.sax.contenthandler\r\n","javax.xml.validation.ValidatorHandler.ValidatorHandler()":"javax.xml.Validation.ValidatorHandler.ValidatorHandler（）\r\n","org.xml.sax.helpers.XMLReaderAdapter.parse(java.lang.String)":"org.xml.sax.helpers.xmlreaderadapter.parse（java.lang.string）\r\n","javax.xml.transform.stream.StreamResult.StreamResult(java.io.File)":"javax.xml.transform.stream.streamresult.streamresult（java.io.file）\r\n"," instance\n   as determined by ":" 实例\r\n   如\r\n","org.w3c.dom.DOMErrorHandler":"org.w3c.dom.domerrorhandler\r\n","Interface that defines the methods which are common between <code>DataSource</code>,\n            <code>XADataSource</code> and <code>ConnectionPoolDataSource</code>.":"定义<code> dataSource </code>之间常见的方法的接口，\r\n            <code> Xadatasource </code>和<code> ConnectionPooldatasource </code>。\r\n","Opens a connection to the given target host.":"打开与给定目标主机的连接。\r\n","An abstract entity content producer.":"抽象实体内容生产者。\r\n","org.w3c.dom.ls.LSParserFilter":"org.w3c.dom.ls.lsparserfilter\r\n","Represents a function that accepts two arguments and produces a double-valued\n            result.":"代表一个接受两个参数并产生双重价值的函数\r\n            结果。\r\n"," are\n             negative.\n":" 是\r\n             消极的。\r\n\r\n","org.xml.sax.InputSource.getCharacterStream()":"org.xml.sax.inputsource.getCharacterstream（）\r\n","java.util.zip.Inflater.getTotalOut()":"java.util.zip.inflater.getTotAlout（）\r\n","This class represents a context of a parsing operation: \n ":"此类代表解析操作的上下文：\r\n \r\n","#asReadLock()":"#asreadlock（）\r\n","java.util.logging.SimpleFormatter":"java.util.logging.simpleformatter\r\n","java.util.concurrent.locks.StampedLock.asReadWriteLock()":"java.util.concurrent.locks.stampedlock.asreadwritelock（）\r\n","javax.xml.datatype.DatatypeFactory.newDurationYearMonth(boolean, java.math.BigInteger, java.math.BigInteger)":"javax.xml.datatype.datatypefactory.newdurationyearmonth（boolean，java.math.biginteger，java.math.biginteger）\r\n","java.util.concurrent.atomic.AtomicIntegerFieldUpdater.get(java.lang.Object)":"java.util.concurrent.atomic.atomicintegerfieldupdater.get（java.lang.object）\r\n","javax.crypto.spec.DHParameterSpec.getP()":"javax.crypto.spec.dhparameterspec.getp（）\r\n","javax.net.ssl.SSLEngine.unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer[])":"javax.net.ssl.sslengine.unwrap（java.nio.bytebuffer，java.nio.bytebuffer []）\r\n","Initializes this key generator for a certain keysize.":"初始化此密钥生成器的特定密钥。\r\n","threadFactory":"线程捕获\r\n","javax.net.ssl.SSLHandshakeException.SSLHandshakeException(java.lang.String)":"javax.net.ssl.sslhandshakeexception.sslhandshakeexception（java.lang.string）\r\n","Gets the last header with the given name.":"获取带有给定名称的最后一个标头。\r\n"," and annotate it with the appropriate attributes.\r\n            ":" 并用适当的属性注释它。\r\n            \r\n","java.util.concurrent.locks.StampedLock.tryOptimisticRead()":"java.util.concurrent.locks.stampedlock.tryoptimisticRead（）\r\n","Receive notification of the end of a Namespace mapping.":"接收命名空间映射末尾的通知。\r\n","A <a href=\"package-summary.":"a <a href =“软件包 - 萨默里。\r\n","Returns the current value.":"返回当前值。\r\n","Returns the iteration count, 0 if not specified.":"返回迭代计数，0如果未指定。\r\n","\r\n            Reads an ":"\r\n            读\r\n","\n   or if the composite values constitute an invalid ":"\r\n   或如果复合值构成无效\r\n","startInstant":"Startinstant\r\n","org.xml.sax.ext.Attributes2Impl.isSpecified(java.lang.String)":"org.xml.sax.ext.attributes2impl.isspecified（java.lang.string）\r\n","Deflater":"放气\r\n","Thrown to indicate that a preferences operation could not complete because\n            of a failure in the backing store, or a failure to contact the backing\n            store.":"投掷以表明偏好操作无法完成，因为\r\n            背景商店中的故障，或未能联系后背\r\n            店铺。\r\n","javax.net.ssl.SSLEngine.SSLEngine()":"javax.net.ssl.sslengine.sslengine（）\r\n","javax.net.ssl.SSLParameters.getEndpointIdentificationAlgorithm()":"javax.net.ssl.sslparameters.getEndpointIdentifitationgorithm（）\r\n","Queries the number of holds on this lock by the current thread.":"查询通过当前线程在此锁上的保留数。\r\n","Forces any changes in the contents of this preference node and its\n            descendants to the persistent store.":"强迫此偏好节点及其内容的任何变化\r\n            持续商店的后代。\r\n","\r\n            Returns a dictionary populated with the contents of the ":"\r\n            返回带有内容的字典\r\n","405 Method Not Allowed":"405方法不允许\r\n","A list of headers to iterate over.":"迭代的标题列表。\r\n","javax.security.cert.CertificateException":"javax.security.cert.certificateException\r\n","<li>a newline character '\\n'\n              <li>a carriage return '\\r'\n            </ul>":"<li> newline字符'\\ n'\r\n              <li>马车返回'\\ r'\r\n            </ul>\r\n","503 Service Unavailable":"503服务不可用\r\n","This class specifies a DES key.":"此课程指定一个键。\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.hasWaiters(java.util.concurrent.locks.ConditionObject)":"java.util.concurrent.locks.abstractqueuedsynchronizer.haswaiters（java.util.concurrent.locks.conditionObject）\r\n","Report a fatal XML parsing error.":"报告致命的XML解析错误。\r\n","DeclHandler":"Declandler\r\n","java.util.stream.BaseStream.spliterator()":"java.util.stream.basestream.spliterator（）\r\n","Returns the private value <code>x</code>.":"返回私人值<code> x </code>。\r\n","javax.xml.transform.TransformerFactory.setAttribute(java.lang.String, java.lang.Object)":"javax.xml.transform.transformerfactory.setAttribute（java.lang.string，java.lang.object）\r\n","\r\n            A ClaimAction that selects a second level value from the json user data with the given top level key\r\n            name and second level sub key name and add it as a Claim.\r\n            This no-ops if the keys are not found or the value is empty.\r\n            ":"\r\n            从JSON用户数据中选择第二级值的索赔，并使用给定的顶级密钥\r\n            名称和第二级子密钥名称并将其添加为索赔。\r\n            如果找不到键或值为空的键，则无操作。\r\n            \r\n","org.json.JSONStringer.endArray()":"org.json.jsonstringer.endarray（）\r\n","if the key cannot be used to initialize this mechanism.":"如果键不能用于初始化此机制。\r\n","in case of an IO problem. The connection will be released\n             anyway.\n":"如果有IO问题。连接将发布\r\n             反正。\r\n\r\n","java.util.zip.CheckedOutputStream.getChecksum()":"java.util.zip.checkedoutputstream.getchecksum（）\r\n","java.util.logging.Level.parse(java.lang.String)":"java.util.logging.level.parse（java.lang.string）\r\n","Step: layer protocol (over tunnel).":"步骤：图层协议（隧道）。\r\n","Writes text, where special XML chars are escaped automatically":"写文字，在其中自动逃脱了特殊的XML字符\r\n","Creates a MalformedChunkCodingException with the specified detail message.":"使用指定的详细信息创建畸形的ChunkCodingException。\r\n","javax.xml.datatype.Duration.subtract(javax.xml.datatype.Duration)":"javax.xml.datatype.duration.subtract（javax.xml.datatype.duration）\r\n","java.util.prefs.Preferences.getInt(java.lang.String, int)":"java.util.prefs.preferences.getint（java.lang.string，int）\r\n","Enables dotall mode.":"启用Dotall模式。\r\n","Starts all core threads, causing them to idly wait for work.":"启动所有核心线程，使它们无所事事地等待工作。\r\n","java.util.concurrent.RejectedExecutionException.RejectedExecutionException(java.lang.String, java.lang.Throwable)":"java.util.concurrent.RejectedExecutionException.RejectedExecutionException（java.lang.string，java.lang.lang.throwable）\r\n","java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndUpdate(java.lang.Object, java.util.function.IntUnaryOperator)":"java.util.concurrent.atomic.atomicintegerfieldupdater.getandupdate（java.lang.object，java.util.function.intunaryoperator）\r\n","\r\n            Interface implemented by components that receive notification that they have been rendered.\r\n            ":"\r\n            接口由接收通知的组件实现。\r\n            \r\n","schemaLanguage":"示意图\r\n","javax.xml.transform.TransformerFactory.newTemplates(javax.xml.transform.Source)":"javax.xml.transform.transformerfactory.newtemplates（javax.xml.transform.source）\r\n","\r\n            The display name for the scheme. Null is valid and used for non user facing schemes.\r\n            ":"\r\n            该方案的显示名称。 NULL有效，用于非用户面向方案。\r\n            \r\n","\r\n            The height (magnitude on the Y axis), in CSS pixels, of the contact geometry of the pointer.\r\n            ":"\r\n            指针的接触几何形状的CSS像素中的高度（Y轴上的大小）。\r\n            \r\n","javax.xml.validation.SchemaFactory.newInstance(java.lang.String)":"javax.xml.validation.schemafactory.newinstance（java.lang.string）\r\n"," accepting elements of type ":" 接受类型的元素\r\n","\r\n            will point to an entry in this array to specify the subtree to be prepended.\r\n            ":"\r\n            将指向此数组中的条目，以指定要预先准备的子树。\r\n            \r\n","org.xml.sax.ext.Attributes2.isDeclared(int)":"org.xml.sax.ext.attributes2.isdeclared（int）\r\n","\r\n            The name of the authentication scheme.\r\n            ":"\r\n            身份验证方案的名称。\r\n            \r\n","java.util.zip.InflaterInputStream.buf":"java.util.zip.inflaterinputstream.buf\r\n","Creates a new connection that can be operated.":"创建一个可以操作的新连接。\r\n","\r\n            Sets parameters supplied by the component's parent in the render tree.\r\n            ":"\r\n            组件在渲染树中提供的集合参数。\r\n            \r\n","Obtains the tunnel type of this route.":"获得此路线的隧道类型。\r\n","javax.security.auth.callback.PasswordCallback.isEchoOn()":"javax.security.auth.callback.passwordcallback.isechoon（）\r\n","BinaryOperator<U>":"二进制操作器<u>\r\n","An interface to an object that is able to build, or augment, a DOM tree\n            from various input sources.":"能够构建或增强的对象的接口\r\n            来自各种输入来源。\r\n","Value for first month of year.":"一年中的第一个月的价值。\r\n","Instantiates version information.":"实例化版本信息。\r\n","Create a named Level with a given integer value.":"创建具有给定整数值的命名级别。\r\n","Return millisecond precision of ":"返回毫秒的精度\r\n","\r\n            Gets or sets the type used to secure data handled by the middleware.\r\n            ":"\r\n            获取或设置用于保护中间件处理数据的类型。\r\n            \r\n","javax.net.ssl.SSLEngine.getEnabledProtocols()":"javax.net.ssl.sslengine.getenabledprotocols（）\r\n","\r\n            Retrieves the current system time in UTC.\r\n            ":"\r\n            在UTC中检索当前系统时间。\r\n            \r\n","Protected constructor to prevent instantiation outside of package.":"受保护的构造函数，以防止包装外面的实例化。\r\n","The client may throw an\n            I/O-related exception while obtaining the\n            new InputSource.\n":"客户可能会扔\r\n            在获得I/O相关的例外\r\n            新Inputsource。\r\n\r\n","Compression strategy for Huffman coding only.":"仅用于霍夫曼编码的压缩策略。\r\n","javax.sql.RowSet.setNClob(java.lang.String, java.io.Reader)":"javax.sql.Rowset.setnClob（java.lang.string，java.io.reader）\r\n","HttpParams parameters":"httpparams参数\r\n","javax.crypto.Cipher.SECRET_KEY":"javax.crypto.cipher.secret_key\r\n","javax.sql.RowSetInternal":"Javax.sql.RowsetInternal\r\n","Obtains the content, once only.":"仅获取内容，一次。\r\n"," as parsed from an\n ":" 从一个解析\r\n \r\n","org.json.JSONArray.join(java.lang.String)":"org.json.jsonarray.join（java.lang.string）\r\n"," (HTTP/1.1 - draft-ietf-http-v11-spec-rev-01?)\n":" （http/1.1-Draft-ietf-HTTP-v11-spec-rev-01？）\r\n\r\n","java.util.concurrent.LinkedTransferQueue.LinkedTransferQueue()":"java.util.concurrent.linkedtransferqueue.linkedtransferqueue（）\r\n","java.util.logging.Logger.logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.Throwable, java.util.function.Supplier)":"java.util.logging.logger.logp（java.util.logging.level，java.lang.string，java.lang.string，java.lang.throwable，java.util.util.function.supplier）\r\n","javax.net.SocketFactory.createSocket(java.net.InetAddress, int, java.net.InetAddress, int)":"javax.net.socketfactory.createsocket（java.net.inetaddress，int，java.net.inetaddress，int）\r\n","java.util.concurrent.locks.ReentrantReadWriteLock":"java.util.concurrent.locks.reentrantreadwritelock\r\n","This interface is implemented by objects which want to know when\n            they are being bound or unbound from a SSLSession.":"该界面由想要知道何时知道的对象实现\r\n            他们被束缚或与SSLsession束缚。\r\n"," attribute which defines the unique name of\n the extension.":" 定义唯一名称的属性\r\n 扩展。\r\n","javax.net.ssl.SSLSessionContext":"javax.net.ssl.sslsessionContext\r\n","\r\n            Remove all claim actions.\r\n            ":"删除所有索赔措施。\r\n            \r\n","javax.xml.xpath.XPathExpressionException.XPathExpressionException(java.lang.Throwable)":"javax.xml.xpath.xpath Expressexception.xpathExpressionException（java.lang.throwable）\r\n","if the calling thread is interrupted while waiting\n":"如果在等待时中断了调用线程\r\n\r\n","java.util.function.LongFunction":"java.util.function.longfunction\r\n","\r\n            Converts a relative URI into an absolute one (by resolving it\r\n            relative to the current absolute URI).\r\n            ":"\r\n            将相对URI转换为绝对的URI（通过解决\r\n            相对于当前的绝对URI）。\r\n            \r\n","javax.crypto.ShortBufferException":"javax.crypto.shortbufferexception\r\n","XPath":"XPATH\r\n","org.xml.sax.helpers.XMLReaderFactory":"org.xml.sax.helpers.xmlReaderFactory\r\n","org.w3c.dom.Document":"org.w3c.dom.document\r\n","java.util.jar.JarFile.JarFile(java.io.File, boolean)":"java.util.jar.jarfile.jarfile（java.io.file，boolean）\r\n","Returns whether new SSL sessions may be created by this socket or if\n existing sessions must be reused.":"返回该插座是否可以创建新的SSL会话或\r\n 现有会议必须重复使用。\r\n","Initializes this exemption mechanism with a key.":"用钥匙初始化此豁免机制。\r\n","#reset":"＃重置\r\n","javax.xml.transform.TransformerFactory.newTransformer()":"javax.xml.transform.transformerfactory.newtransformer（）\r\n","Method getLocator retrieves an instance of a SourceLocator\n            object that specifies where an error occurred. -or- Method setLocator sets an instance of a SourceLocator\n            object that specifies where an error occurred.":"方法getLocator检索一个Sourcelocator的实例\r\n            指定发生错误的对象。 - 或 - 方法setLocator设置一个sourcelocator的实例\r\n            指定发生错误的对象。\r\n","java.util.zip.InflaterOutputStream.finish()":"java.util.zip.inflateroutputstream.finish（）（）\r\n","MacSpi":"MacSpi\r\n","Returns the length of the duration in milliseconds.":"以毫秒为单位返回持续时间的长度。\r\n","java.util.zip.ZipFile.close()":"java.util.zip.zipfile.close（）\r\n","Retrieves an attribute node by name.":"按名称检索属性节点。\r\n","Print a brief summary of the ":"打印简短的摘要\r\n","if one of the cipher suite names is not supported.\n":"如果不支持密码套件之一。\r\n\r\n","Compares this route to another.":"将此路线与另一条路线进行比较。\r\n","javax.xml.parsers.FactoryConfigurationError":"Javax.xml.Parsers.factoryConfigurationError\r\n","\r\n            Invoked when a new circuit was established.\r\n            ":"\r\n            建立新电路时被调用。\r\n            \r\n","Preferences#putLong(String,long)":"首选项＃putlong（字符串，长）\r\n","An engine that performs match operations on a java.":"在Java上执行匹配操作的引擎。\r\n","java.util.jar.Attributes.Attributes(java.util.jar.Attributes)":"java.util.jar.attributes.Attributes（java.util.jar.tributes）\r\n"," is different from \"\" []\n   , or if the DOM implementation does not support the\n   ":" 与“” []不同\r\n   ，或者如果DOM实施不支持\r\n   \r\n"," that accumulates elements into a\n            ":" 这将元素累积到\r\n            \r\n","java.util.prefs.Preferences.MAX_NAME_LENGTH":"java.util.prefs.preferences.max_name_length\r\n","Returns the header name.":"返回标题名称。\r\n","A handler for determining if an HTTP request should be redirected to \n a new location in response to an HTTP response received from the target\n server.":"用于确定HTTP请求是否应重定向到的处理程序\r\n 一个新位置，以响应从目标收到的HTTP响应\r\n 服务器。\r\n",",\r\n            or a code between ":"，，，，\r\n            或之间的代码\r\n","javax.xml.transform.dom.DOMResult.FEATURE":"javax.xml.transform.dom.domresult.feature\r\n","\r\n            Used to build ":"\r\n            用于构建\r\n","Returns the names of the cipher suites which could be enabled for use\n            on an SSL connection created by this factory.":"返回可以启用的密码套件的名称\r\n            在该工厂创建的SSL连接上。\r\n","\r\n            The value to use for Claim.Type when creating a Claim.\r\n            ":"\r\n            创建索赔时使用索赔的价值。\r\n            \r\n","javax.xml.transform.OutputKeys.DOCTYPE_SYSTEM":"javax.xml.transform.outputkeys.doctype_system\r\n"," (Sometimes ":" （有时\r\n","javax.net.ssl.ExtendedSSLSession":"javax.net.ssl.extendendsslsession\r\n","javax.net.ssl.HttpsURLConnection.getLocalPrincipal()":"javax.net.ssl.httpsurlconnection.getlocalprincipal（）\r\n","Put the given key-value association into this preference node.":"将给定的键值关联放入此偏好节点。\r\n","\n             is not available.":"\r\n             不可用。\r\n","If the expression cannot be evaluated.":"如果无法评估表达式。\r\n","\r\n            If set, this specifies the target scheme that this scheme should forward SignInAsync calls to.\r\n            For example Context.SignInAsync(\"ThisScheme\") => Context.SignInAsync(\"ForwardSignInValue\");\r\n            Set the target to the current scheme to disable forwarding and allow normal processing.\r\n            ":"\r\n            如果设置，则指定该方案应转发签名的目标方案。\r\n            例如context.signInAsync（“ thisscheme”）=> context.signInAsync（“ forwardSignInvalue”）;\r\n            将目标设置为当前方案以禁用转发并允许正常处理。\r\n            \r\n","source.getNode()==result.getNode()":"source.getNode（）== result.getNode（）\r\n","302 Moved Temporarily":"302暂时移动\r\n","Tests if the authentication scheme is provides authorization on a per\n connection basis instead of usual per request basis":"测试如果身份验证方案获得了per的授权\r\n 连接基础而不是按照要求\r\n","A Filter can be used to provide fine grain control over\n            what is logged, beyond the control provided by log levels.":"过滤器可用于提供精细的谷物控制\r\n            已记录的内容，超出日志级别提供的控制。\r\n","encryptedData":"加密\r\n","Returns the identity of the peer which was established as part of\n            defining the session.":"返回作为同行的身份，该身份是\r\n            定义会话。\r\n","Notifies registered listeners that a <code>RowSet</code> object\n            in the given <code>RowSetEvent</code> object has changed its entire contents.":"通知注册的听众，<code> rowset </code>对象\r\n            在给定的<code> rowsetevent </code>对象已更改了整个内容。\r\n","Start document event.":"开始文档事件。\r\n","exportSubtree":"出口商\r\n","Receive notification of an unparsed entity declaration.":"收到无与伦比的实体声明的通知。\r\n","\n            class, greatly easing the task of implementing it.":"\r\n            班级，大大简化实施它的任务。\r\n","java.util.jar.Attributes.Attributes(int)":"java.util.jar.attributes.Attributes（int）\r\n","\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            ":"\r\n            获取或设置儿童内容以在选择元素中渲染。\r\n            \r\n","Creates a connection to the database.":"创建与数据库的连接。\r\n","Creates a new <code>JarEntry</code> for the specified JAR file\n            entry name.":"为指定的JAR文件创建一个新的<code> Jarentry </code>\r\n            条目名称。\r\n","\r\n            Adds frames representing multiple attributes with the same sequence number.\r\n            ":"\r\n            添加代表具有相同序列号的多个属性的帧。\r\n            \r\n","java.util.concurrent.locks.StampedLock.unlockRead(long)":"java.util.concurrent.locks.stampedlock.unlockread（long）\r\n","Returns the default SSL socket factory.":"返回默认的SSL套接字工厂。\r\n"," if there is at least one consumer waiting\n to receive an element via ":" 如果至少有一个消费者等待\r\n 通过\r\n","Parse the content of the given input source as an XML document\n            and return a new DOM ":"解析给定输入源的内容作为XML文档\r\n            并返回新的dom\r\n","if salt is null.\n":"如果盐为无效。\r\n\r\n","Entity that delegates the process of content generation to an abstract\n content producer.":"将内容生成过程委派给抽象的实体\r\n 内容生产者。\r\n","Determines the maximum line length limit.":"确定最大线长度限制。\r\n","wrappedKeyAlgorithm":"包裹的Keyalgorithm\r\n","Set the retrieved password.":"设置检索到的密码。\r\n","Close the current output stream.":"关闭当前输出流。\r\n","Returns a server socket bound to the specified port,\n            with a specified listen backlog and local IP.":"返回绑定到指定端口的服务器套接字，\r\n            带有指定的收听积压和本地IP。\r\n",", or other.":"， 或其他。\r\n","Constructs a CipherOutputStream from an OutputStream and a\n            Cipher.":"从输出流和一个\r\n            密码。\r\n","NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly and if\n   it is not defined to be ":"no_modification_allowed_err：读取节点时升起\r\n   它不是定义为\r\n","if the mapping doesn't exist or is not a ":"如果映射不存在或不存在\r\n","\r\n            An ":"\r\n            一个\r\n","javax.crypto.spec.SecretKeySpec.getFormat()":"javax.crypto.spec.secretkeyspec.getformat（）\r\n","This class is used to read entries from a zip file.":"此类用于从zip文件读取条目。\r\n","javax.security.auth.callback.PasswordCallback.clearPassword()":"javax.security.auth.callback.passwordcallback.clearpassword（）\r\n","java.util.concurrent.locks.StampedLock.tryUnlockRead()":"java.util.concurrent.locks.stampedlock.tryunlockread（）\r\n"," value.\r\n            ":" 价值。\r\n            \r\n"," if there is no UTF-16 offset available.":" 如果没有UTF-16偏移量。\r\n"," that produces the arithmetic mean of a double-valued\n            function applied to the input elements.":" 产生双重值的算术平均值\r\n            应用于输入元素的功能。\r\n","Initializes this cipher instance with the specified key and algorithm\n parameters.":"用指定的密钥和算法初始化此密码实例\r\n 参数。\r\n","javax.sql.RowSetReader.readData(javax.sql.RowSetInternal)":"Javax.sql.RowsetReader.ReadData（Javax.sql.RowsetInternal）\r\n","javax.xml.datatype.Duration.add(javax.xml.datatype.Duration)":"javax.xml.datatype.duration.add（javax.xml.datatype.duration）\r\n","Constructs a new <code>XPathException</code> with the specified detail <code>message</code>.":"用指定的详细信息<Code> Message </code>构造新的<code> XPathexception </code>。\r\n","Implementation-Version":"实施 - 转换\r\n","org.json.JSONObject.JSONObject(java.lang.String)":"org.json.jsonobject.jsonobject（java.lang.string）\r\n","Returns the certificate(s) that were sent to the peer during\n            handshaking.":"返回发送给同行的证书\r\n            握手。\r\n","This method checks if the specified <code>namespaceURI</code> is the\n            default namespace or not.":"此方法检查指定的<code> namespaceuri </code>是\r\n            是否默认名称空间。\r\n","org.xml.sax.helpers.AttributesImpl.getValue(java.lang.String, java.lang.String)":"org.xml.sax.helpers.attributesimpl.getValue（java.lang.string，java.lang.string）\r\n","java.util.concurrent.atomic.AtomicInteger.getAndAccumulate(int, java.util.function.IntBinaryOperator)":"java.util.concurrent.atomic.atomicinteger.getAnccumulate（int，java.util.function.intbinaryoperator）\r\n","separator":"分隔器\r\n","removeNode()":"removenode（）\r\n","\n            on the <code>ContentHandler</code> with <code>this</code> driver object as the\n            ":"\r\n            在<code> ContentHandler上，</code> <code>此</code>驱动程序对象为\r\n            \r\n","Construct a StreamResult from a byte stream.":"从字节流构造流媒体。\r\n","java.util.concurrent.atomic.AtomicReferenceArray.AtomicReferenceArray(java.lang.Object[])":"java.util.concurrent.atomic.atomicreferencearray.atomicreferencearray（java.lang.object []）\r\n","org.xmlpull.v1.XmlSerializer.startTag(java.lang.String, java.lang.String)":"org.xmlpull.v1.xmlserializer.starttag（java.lang.string，java.lang.string）\r\n","Obtains the ":"获得\r\n","Returns the immutable ":"返回不变的\r\n","This interface represents an output destination for data.":"该接口代表数据的输出目的地。\r\n","org.w3c.dom.Node.lookupPrefix(java.lang.String)":"org.w3c.dom.node.lookupprefix（java.lang.string）\r\n","Provides access to version information for HTTP components.":"提供HTTP组件的版本信息的访问。\r\n","the progress as a ":"作为一个进步\r\n","Converts the specified string to byte array of ASCII characters.":"将指定的字符串转换为ASCII字符的字节数组。\r\n","java.util.stream.Collectors.summingInt(java.util.function.ToIntFunction)":"java.util.stream.collectors.summingint（java.util.function.tointfunction）\r\n","\r\n            Gets the model object for this ":"\r\n            为此获取模型对象\r\n"," nodes to re-use them in other\n   elements.\n":" 节点可以重复使用其他\r\n   元素。\r\n\r\n","The system identifier associated with the entity if specified, and\n ":"如果指定了与实体关联的系统标识符，并且\r\n \r\n"," with the default policy\r\n            name defined by ":" 使用默认策略\r\n            名称定义\r\n","java.util.concurrent.ThreadPoolExecutor.afterExecute(java.lang.Runnable, java.lang.Throwable)":"java.util.concurrent.threadpoolexecutor.afterexecute（java.lang.runnable，java.lang.throwable）\r\n","java.util.concurrent.locks.ReentrantReadWriteLock.hasWaiters(java.util.concurrent.locks.Condition)":"java.util.concurrent.locks.reentrantreadwritelock.haswaiters（java.util.concurrent.locks.cornition）\r\n","javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler(javax.xml.transform.Source)":"javax.xml.transform.sax.saxtransformerfactory.newtransformerhandler（javax.xml.transform.source）\r\n","This event is propagated to a SSLSessionBindingListener.":"此事件传播到SSLSessionBindingListener。\r\n","Implementation-Vendor-Id":"实施供应商-ID\r\n","java.util.stream.Collector.finisher()":"java.util.stream.collector.finisher（）\r\n","if no successful match has been made.\n":"如果没有成功的比赛。\r\n\r\n"," variable on the implementation\n   platform.":" 实施变量\r\n   平台。\r\n","java.util.regex.Matcher.reset(java.lang.CharSequence)":"java.util.regex.matcher.reset（java.lang.charsequence）\r\n","org.xml.sax.SAXException.SAXException()":"org.xml.sax.saxexception.saxexception（）\r\n","Adds the given number of new unarrived parties to this phaser.":"将给定数量的新的未寄送政党添加到此移动器中。\r\n","M:Java.Util.Concurrent.Locks.AbstractQueuedLongSynchronizer.get_IsHeldExclusively":"m：java.util.concurrent.locks.abstractqueuedlongsynchronizer.get_isheldexclusational\r\n","Retrieves and removes the head of this queue, waiting if necessary\n            for another thread to insert it.":"检索并卸下该队列的头，如有必要\r\n            为了插入它。\r\n","java.util.concurrent.atomic.LongAdder.reset()":"java.util.concurrent.atomic.longadder.reset（）\r\n","javax.crypto.SealedObject.SealedObject(javax.crypto.SealedObject)":"javax.crypto.sealedobject.sealedobject（javax.crypto.sealedobject）\r\n","\r\n            Gets the default endpoint path for incoming connections.\r\n            ":"\r\n            获取传入连接的默认端点路径。\r\n            \r\n","Instantiates an X509Certificate object, and initializes it with\n            the data read from the input stream ":"实例化x509certificate对象，并用\r\n            从输入流读取的数据\r\n"," view of this StampedLock in\n            which the ":" 此章节锁的视图\r\n            哪个\r\n","javax.sql.RowSetMetaData.setCaseSensitive(int, boolean)":"Javax.sql.RowsetMetadata.setcasessentive（INT，Boolean）\r\n","javax.sql.RowSet.setBytes(java.lang.String, byte[])":"javax.sql.Rowset.setBytes（java.lang.string，byte []）\r\n","\r\n            Adds an ":"\r\n            添加一个\r\n","java.util.zip.Inflater.getRemaining()":"java.util.zip.inflater.getRemaining（）\r\n","javax.crypto.EncryptedPrivateKeyInfo.EncryptedPrivateKeyInfo(java.security.AlgorithmParameters, byte[])":"javax.crypto.encryptedprivateKeyinfo.CencryptedPrivateKeyinfo（Java.security.algorithmparameters，byte []）\r\n","Common charset definitions ":"常见的字符集定义\r\n","java.util.zip.Deflater.getBytesWritten()":"java.util.zip.deflater.getBytesWritten（）\r\n","org.xml.sax.AttributeList.getValue(java.lang.String)":"org.xml.sax.attributelist.getValue（java.lang.string）\r\n","is the specified algorithm name is ":"指定的算法名是\r\n","Initializes the key generator with the specified parameter\n            set and a user-provided source of randomness.":"用指定参数初始化密钥生成器\r\n            设置和用户提供的随机性来源。\r\n","\r\n            Writes a 64-bit integer in big endian format.\r\n            ":"\r\n            写一个64位整数的大型Endian格式。\r\n            \r\n","The <code>DOMImplementationList</code> interface provides the abstraction\n            of an ordered collection of DOM implementations, without defining or\n            constraining how this collection is implemented.":"<code> domimplementationlist </code>接口提供抽象\r\n            未定义或\r\n            限制该集合的实现方式。\r\n","ul":"Ul\r\n","if the specified provider cannot provide the requested\n             protocol.":"如果指定的提供商无法提供请求的\r\n             协议。\r\n"," array in which elements may be updated atomically.":" 数组可以在其原子上更新元素。\r\n","java.util.regex.Pattern.compile(java.lang.String, int)":"java.util.regex.pattern.compile（java.lang.string，int）\r\n","javax.crypto.interfaces.DHPublicKey":"javax.crypto.interfaces.dhpublickey\r\n","Construct new KeyStoreBuilderParameters from a List\n            of java.":"从列表中构建新的KeyStoreBuilderParameters\r\n            Java。\r\n","Attempts to encode plaintext bytes from a sequence of data\n            buffers into SSL/TLS network data.":"尝试从一系列数据序列编码明文字节\r\n            缓冲区中的SSL/TLS网络数据。\r\n",", specifying all values.":"，指定所有值。\r\n","\r\n            Gets the full memory owned by the ":"\r\n            获得完整的内存\r\n","RFC 1779 String format of Distinguished Names.":"RFC 1779杰出名称的字符串格式。\r\n","javax.xml.XMLConstants":"javax.xml.xmlconstants\r\n","if exclusive mode is not supported\n":"如果不支持独家模式\r\n\r\n","\r\n            Extension methods for setting up authorization services in an ":"\r\n            用于在\r\n","java.util.prefs.AbstractPreferences.lock":"java.util.prefs.abstractpreferences.lock\r\n","javax.xml.XMLConstants.XMLNS_ATTRIBUTE_NS_URI":"javax.xml.xmlconstants.xmlns_attribute_ns_uri\r\n","\r\n            Try to read the given type out of the buffer if possible. Warning: this is dangerous to use with arbitrary\r\n            structs- see remarks for full details.\r\n            ":"\r\n            尽可能尝试从缓冲区中读取给定类型。警告：任意使用这很危险\r\n            结构 - 有关完整的详细信息，请参见备注。\r\n            \r\n","javax.xml.transform.Source":"javax.xml.transform.source\r\n","java.util.concurrent.TransferQueue.tryTransfer(java.lang.Object, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.transferqueue.trytransfer（java.lang.object，long，java.util.concurrent.timeunit）\r\n","org.json.JSONArray.put(long)":"org.json.jsonarray.put（long）\r\n","java.util.logging.Level.FINEST":"java.util.logging.level.finest\r\n","Comparison result.":"比较结果。\r\n"," values that have been appended.\r\n            ":" 已附加的值。\r\n            \r\n","javax.crypto.spec.RC2ParameterSpec.RC2ParameterSpec(int)":"javax.crypto.spec.rc2parameterspec.rc2parameterspec（int）\r\n","java.util.zip.DeflaterInputStream.DeflaterInputStream(java.io.InputStream)":"java.util.zip.deflaterinputstream.deflaterinputstream（java.io.inputstream）\r\n"," is different from \"\".":" 与“”不同。\r\n","The default property name according to the JAXP spec.":"根据JAXP规格的默认属性名称。\r\n","\r\n            Represents a segment of UI content for an object of type ":"\r\n            代表类型对象的UI内容段\r\n","Returns the time this session was last accessed, in milliseconds since\n midnight January 1st 1970 UTC.":"返回该会议最后一次访问的时间，以毫秒以来以毫秒为单位\r\n 午夜1970年1月1日UTC。\r\n","javax.crypto.Cipher.unwrap(byte[], java.lang.String, int)":"javax.crypto.cipher.unwrap（byte []，java.lang.string，int）\r\n","POST":"邮政\r\n","if the scheme with the given name is not registered\n":"如果没有给定名称的计划未注册\r\n\r\n","Creates a new CircularRedirectException with a ":"用一个\r\n","error":"错误\r\n","Return a new <code>XPath</code> using the underlying object\n            model determined when the <code>XPathFactory</code> was instantiated.":"使用基础对象返回新的<code> xpath </code>\r\n            确定<code> XPathFactory </code>实例化时确定的模型。\r\n","java.util.concurrent.Phaser.bulkRegister(int)":"java.util.concurrent.phaser.bulkregister（int）\r\n","\r\n            Forbid behavior.\r\n            ":"\r\n            禁止行为。\r\n            \r\n","javax.sql.RowSetMetaData.setSearchable(int, boolean)":"javax.sql.RowsetMetadata.setsearchable（INT，boolean）\r\n","Create a <code>Duration</code> of type <code>xdt:yearMonthDuration</code> using the specified\n            <code>year</code> and <code>month</code> as defined in\n            <a href=\"http://www.":"创建<code>持续时间</code> type <code> XDT：YearMonthDuration </code>使用指定的\r\n            <code>年</code>和<code>月</code>定义\r\n            <a href =“ http：//www。\r\n","java.util.function.DoubleFunction.apply(double)":"java.util.function.doublefunction.apply（double）\r\n","javax.sql.RowSet.setAsciiStream(int, java.io.InputStream)":"javax.sql.rowset.setasciistream（int，java.io.inputstream）\r\n","Unregisters the class implementing an ":"揭开实施的类\r\n","LongConsumer":"长剑\r\n","java.util.logging.Logger.config(java.util.function.Supplier)":"java.util.logging.logger.config（java.util.function.supplier）\r\n","javax.xml.transform.sax.SAXResult.FEATURE":"javax.xml.transform.sax.saxresult.feature\r\n","start  input.length()":"start input.length（）\r\n","If the lock state matches the given stamp, releases the\n            corresponding mode of the lock.":"如果锁定状态与给定的邮票匹配，请发布\r\n            锁的相应模式。\r\n","java.util.concurrent.atomic.DoubleAdder.add(double)":"java.util.concurrent.atomic.doubleadder.add（double）\r\n","Returns a new CompletionStage that, when this stage completes\n            either normally or exceptionally, is executed using this stage's\n            default asynchronous execution facility, with this stage's\n            result and exception as arguments to the supplied function.":"返回一个新的完整舞台，当这个阶段完成时\r\n            通常或异常地使用此阶段执行\r\n            默认异步执行设施，此阶段的\r\n            结果和例外作为所提供函数的参数。\r\n","\r\n            Appends a frame representing markup content.\r\n            ":"\r\n            附加代表标记内容的帧。\r\n            \r\n","\r\n            which requires at least one instance of the specified claim type, and, if allowed values are specified, \r\n            the claim value must be any of the allowed values.\r\n            ":"\r\n            它需要至少一个指定的索赔类型的实例，如果指定了允许的值，\r\n            索赔值必须是任何允许的值。\r\n            \r\n","org.xmlpull.v1.XmlSerializer.setProperty(java.lang.String, java.lang.Object)":"org.xmlpull.v1.xmlserializer.setProperty（java.lang.string，java.lang.object）\r\n"," which performs a reduction of its\n            input elements under a specified ":" 降低了它的\r\n            指定的输入元素\r\n","Parameter for the default proxy.":"默认代理的参数。\r\n","javax.security.auth.callback.UnsupportedCallbackException.UnsupportedCallbackException(javax.security.auth.callback.Callback)":"javax.security.auth.callback.unsupportedcallbackexception.unsupportedcallbackexception（javax.security.auth.callback.callback.callback）\r\n","The proxy authenticate challange header.":"代理身份验证的挑战头。\r\n","java.util.concurrent.locks.StampedLock.readLockInterruptibly()":"java.util.concurrent.locks.stampedlock.readlocklockible firmoble（）\r\n","java.util.function.DoublePredicate.negate()":"java.util.function.doublepredicate.negate（）\r\n","javax.net.ssl.SSLParameters.setUseCipherSuitesOrder(boolean)":"javax.net.ssl.sslparameters.setuseciphersuitesorder（boolean）\r\n","org.json.JSONObject.JSONObject(org.json.JSONObject, java.lang.String[])":"org.json.jsonobject.jsonobject（org.json.jsonobject，java.lang.string []）\r\n","Tests if the request execution has been aborted.":"测试如果请求执行已中止。\r\n","\n   or the ":"\r\n   或者\r\n","Log a message, specifying source class, method, and resource bundle name,\n            with an array of object arguments.":"记录消息，指定源类，方法和资源捆绑名称，\r\n            带有一系列对象参数。\r\n","java.util.zip.Deflater.deflate(byte[])":"java.util.zip.deflater.deflate（byte []）\r\n","if the host name or port number is illegal.\n":"如果主机名或端口号是非法的。\r\n\r\n"," attributes for markup elements.\r\n            ":" 标记元素的属性。\r\n            \r\n","if an error occurs accessing the database.":"如果发生错误访问数据库。\r\n","\r\n            Displays a list of validation messages from a cascaded ":"\r\n            显示级联的验证消息列表\r\n","Replaces the first occurence of the header with the same name.":"用相同的名称代替标头的第一个出现。\r\n"," interprets incoming values.\r\n            ":" 解释传入的值。\r\n            \r\n"," if using an array pool, in which case the memory is held by ":" 如果使用数组池，则在这种情况下，内存是由\r\n","Indicates whether there is another token in this iteration.":"指示此迭代中是否还有另一个令牌。\r\n","\n   is thrown if an error occurs during parsing of the\n   ":"\r\n   如果在解析期间发生错误\r\n   \r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(int)":"java.util.concurrent.locks.abstractqueedsynchronizer.Acquire（int）\r\n","org.xml.sax.helpers.LocatorImpl.setPublicId(java.lang.String)":"org.xml.sax.helpers.locatorimpl.setpublicid（java.lang.string）\r\n","A generic HTTP connection, useful on client and server side.":"通用HTTP连接，在客户端和服务器端有用。\r\n","Returns the algorithm name of this <code>Cipher</code> object.":"返回此<code> cipher </code>对象的算法名称。\r\n","java.util.concurrent.Phaser.Phaser(java.util.concurrent.Phaser)":"java.util.concurrent.phaser.phaser（java.util.concurrent.phaser）\r\n","java.util.concurrent.atomic.AtomicBoolean.compareAndSet(boolean, boolean)":"java.util.concurrent.atomic.atomicboolean.com Pareandset（Boolean，boolean）\r\n","java.util.function.ToLongBiFunction":"java.util.function.tolongbifunction\r\n","Returns the next ":"返回下一个\r\n","Call next() and return event if it is START_TAG or END_TAG\n            otherwise throw an exception.":"请致电Next（）和返回事件（如果是start_tag或end_tag）\r\n            否则会引发异常。\r\n","java.util.zip.ZipEntry.setCrc(long)":"java.util.zip.zipentry.setcrc（long）\r\n","java.util.jar.JarFile.JarFile(java.lang.String, boolean)":"java.util.jar.jarfile.jarfile（java.lang.string，boolean）\r\n","\r\n            The optional resource to evaluate the ":"\r\n            评估的可选资源\r\n","An instance of this abstract class can transform a\n            source tree into a result tree.":"这个抽象类的实例可以转换\r\n            源树进入结果树。\r\n","\r\n            Removes a scheme, preventing it from being used by ":"\r\n            删除计划，以防止该方案\r\n","split(input, 0)":"拆分（输入，0）\r\n","javax.crypto.spec.OAEPParameterSpec.getMGFAlgorithm()":"javax.crypto.spec.oaepparameterspec.getmgfalgorithm（）\r\n","org.w3c.dom.DOMImplementationSource":"org.w3c.dom.domimplementationsource\r\n","Management interface for ":"管理接口\r\n","Creates a new zip entry with fields taken from the specified\n            zip entry.":"创建一个新的ZIP条目，并从指定的字段中获取字段\r\n            拉链条目。\r\n","Reports a bad SSL key.":"报告不良的SSL密钥。\r\n","The number of nodes in the list.":"列表中的节点数。\r\n",",\n   or if the implementation does not support the renaming of the\n   document element.\n   ":"，，，，\r\n   或者如果实施不支持重命名\r\n   文档元素。\r\n   \r\n","javax.crypto.KeyAgreement.generateSecret(byte[], int)":"javax.crypto.keyagreement.generatesecret（byte []，int）\r\n","A <code>LSSerializer</code> provides an API for serializing (writing) a\n            DOM document out into XML.":"<code> lsSerializer </code>提供了用于序列化（写作）A的API\r\n            DOM文档输入XML。\r\n","if the identity of the peer has not been verified.":"如果尚未验证对等的身份。\r\n","javax.xml.datatype.DatatypeConstants.SECONDS":"javax.xml.datatype.datatypeconstants.seconds\r\n","Returns a composed function that first applies the ":"返回首先应用的组合功能\r\n","\r\n            Initialize the handler, resolve the options and validate them.\r\n            ":"初始化处理程序，解决选项并验证它们。\r\n            \r\n","Returns the names of the children of this preference node.":"返回此偏好节点的孩子的名字。\r\n","org.xml.sax.helpers.NamespaceSupport.NamespaceSupport()":"org.xml.sax.helpers.namespacesupport.namespacesupport（）\r\n","\r\n            Registers an active ":"\r\n            注册一个活动\r\n","javax.xml.transform.stream.StreamSource.StreamSource(java.io.File)":"javax.xml.transform.stream.streamsource.streamsource（java.io.file）\r\n","Create a new SAXException.":"创建一个新的saxexception。\r\n","Creates a new output stream with the specified buffer size.":"使用指定的缓冲区大小创建一个新的输出流。\r\n","java.util.prefs.NodeChangeEvent.getChild()":"java.util.prefs.nodechangeevent.getChild（）\r\n","java.util.function.DoubleUnaryOperator.andThen(java.util.function.DoubleUnaryOperator)":"java.util.function.doubleunaryoperator.andthen（java.util.function.doubleunaryaryoperator）\r\n","An attribute of a language and binding dependent type that represents\n a writable stream of bytes.":"语言的属性和代表绑定的依赖类型\r\n 可写的字节流。\r\n","java.util.zip.ZipEntry.setCompressedSize(long)":"java.util.zip.zipentry.setcompressedsize（long）\r\n","Returns a collection containing those threads that may be\n waiting on this Condition.":"返回包含那些可能是的线程的集合\r\n 等待这种情况。\r\n"," feature, since namespaces were\n   defined by XML.":" 功能，因为名称空间是\r\n   由XML定义。\r\n","The official XML attribute used for specifying XML Namespace\n            declarations, ":"用于指定XML名称空间的官方XML属性\r\n            声明，\r\n","This attribute returns the text content of this node and its\n descendants.":"此属性返回该节点的文本内容及其\r\n 子孙。\r\n"," provided by the specified\r\n            ":" 由指定的\r\n            \r\n","Log a message, with no arguments.":"记录一条消息，没有参数。\r\n","An HTTP request.":"HTTP请求。\r\n","\r\n            Creates a new DeleteClaimAction.\r\n            ":"\r\n            创建一个新的DeletEaklaimacrach。\r\n            \r\n","java.util.prefs.Preferences.userRoot()":"java.util.prefs.preferences.userroot（）\r\n","supplemental":"补充\r\n","java.util.concurrent.PriorityBlockingQueue.PriorityBlockingQueue(java.util.Collection)":"java.util.concurrent.priorityblockingqueue.priorityblockingquequequequequequequequequequequequequequequequequequequequequequequequequequequequequeque\r\n","org.xml.sax.helpers.NamespaceSupport.getPrefixes()":"org.xml.sax.helpers.namespacesupport.getPrefixes（）\r\n","org.xml.sax.InputSource":"org.xml.sax.inputsource\r\n","org.xml.sax.helpers.XMLReaderFactory.createXMLReader(java.lang.String)":"org.xml.sax.helpers.xmlreaderfactory.createxmlreader（java.lang.string）\r\n","Tests if this protocol version is greater or equal to the given one.":"测试该协议版本是否更大或等于给定的版本。\r\n"," for components.\r\n            ":" 对于组件。\r\n            \r\n","javax.sql.RowSet.setBinaryStream(int, java.io.InputStream, int)":"javax.sql.Rowset.setBinarystream（int，java.io.inputstream，int）\r\n","AtomicMarkableReference":"AtomicmarkableReference\r\n","java.util.concurrent.ThreadPoolExecutor.prestartCoreThread()":"java.util.concurrent.threadpoolexecutor.prestartcorethread（）\r\n","Report the end of an entity.":"报告实体的终结。\r\n","SO_TIMEOUT":"so_timeout\r\n","\r\n            Checks if a user meets a specific requirement for the specified resource\r\n            ":"\r\n            检查用户是否满足指定资源的特定要求\r\n            \r\n","KeyAgreementSpi":"KeyAgreementspi\r\n","Object#wait() wait":"对象＃wait（）等待\r\n"," intended for use in server-side Blazor.\r\n            ":" 旨在用于服务器侧球。\r\n            \r\n","Returns a copy of the array of protocols or null if none\n            have been set.":"如果没有\r\n            已经设置了。\r\n","java.util.logging.LogRecord.getLoggerName()":"java.util.logging.logrecord.getLoggername（）\r\n","java.util.regex.Pattern.DOTALL":"java.util.regex.pattern.dotall\r\n","Sets to the given value.":"设置为给定值。\r\n"," giving the formats that were set in the dragstart event.\r\n            ":" 提供在DragStart事件中设置的格式。\r\n            \r\n"," if the\n implementation wasn't able to obtain an absolute URI.":" 如果是\r\n 实施无法获得绝对的URI。\r\n","\n   nodes being replaced is readonly.":"\r\n   被替换的节点是可读的。\r\n","Constructs a secret key from the given byte array.":"从给定的字节数组中构造一个秘密键。\r\n","Get the prefix of this <code>QName</code>.":"获取此<code> qname </code>的前缀。\r\n",",\r\n            gets the element's diffing key, or null if none was specified.\r\n            ":"，，，，\r\n            获取元素的扩散键，或者如果未指定未指定的键。\r\n            \r\n","org.apache.http.conn.ssl.StrictHostnameVerifier":"org.apache.http.conn.ssl.stricthostnameverifier\r\n","Create an empty attribute list.":"创建一个空属性列表。\r\n","Get the value of an attribute (by name).":"获取属性的值（按名称）。\r\n","Removes an event listener for property change events.":"删除事件听众进行属性变更事件。\r\n","INVALID_CHARACTER_ERR: Raised if the specified qualified name is not\n   an XML name according to [].\n   ":"Invalid_character_err：如果指定的合格名称不是\r\n   根据[]的XML名称。\r\n   \r\n","Set a feature for this <code>DocumentBuilderFactory</code> and <code>DocumentBuilder</code>s created by this factory.":"设置此<code> docuce> documentbuilderfactory </code>和<code> docunsbuilder </code> s由此工厂创建的功能。\r\n","\r\n            If set, this specifies the target scheme that this scheme should forward SignOutAsync calls to.\r\n            For example Context.SignOutAsync(\"ThisScheme\") => Context.SignOutAsync(\"ForwardSignOutValue\");\r\n            Set the target to the current scheme to disable forwarding and allow normal processing.\r\n            ":"\r\n            如果设置，则指定该方案应转发签名的目标方案。\r\n            例如context.signoutasync（“ thisscheme”）=> context.signoutasync（“ forwardSignOutValue”）;\r\n            将目标设置为当前方案以禁用转发并允许正常处理。\r\n            \r\n","cal":"加州\r\n","Creates a new decompressor.":"创建一个新的解压缩器。\r\n","Length of input buffer.":"输入缓冲区的长度。\r\n","Always throws RejectedExecutionException.":"总是投掷拒绝ExeCutionException。\r\n"," \r\n            are evaluated against.\r\n            ":" \r\n            评估反对。\r\n            \r\n","The provided identity of type '{0}' is marked {1} = {2} but does not have a value for {3}. By default, the antiforgery system requires that all authenticated identities have a unique {3}. If it is not possible to provide a unique {3} for this identity, con ...":"类型'{0}'的提供的身份标记为{1} = {2}，但没有{3}的值。默认情况下，抗试验系统要求所有身份验证的身份都具有唯一的{3}。如果无法为此身份提供唯一的{3}，请...\r\n","ReadLocks":"readlocks\r\n"," nodes, specified in the schemas\n associated with the document.":" 节点，在模式中指定\r\n 与文档关联。\r\n"," allows running code during specific lifetime events of a ":" 允许在特定的生命周期事件中运行代码\r\n","\r\n            Add a claim action to the collection.\r\n            ":"\r\n            在集合中添加索赔措施。\r\n            \r\n","Creates a new input stream with the specified decompressor and\n            buffer size.":"使用指定的解压器和\r\n            缓冲区大小。\r\n","Returns the provider of this <code>SSLContext</code> object.":"返回此<code> sslContext </code>对象的提供商。\r\n","Log a message, with an array of object arguments.":"记录一条消息，并带有一系列对象参数。\r\n","java.util.concurrent.atomic.DoubleAdder.sumThenReset()":"java.util.concurrent.atomic.doubleadder.sumthenreset（）\r\n","The position of the next header in ":"下一个标头的位置\r\n","Instances of this interface manage which X509 certificate-based\n            key pairs are used to authenticate the local side of a secure\n            socket.":"此接口的实例管理哪个基于X509证书的实例\r\n            钥匙对用于验证安全的本地侧\r\n            插座。\r\n","\r\n            Implements a list that uses an array of objects to store the elements.\r\n            \r\n            This differs from a ":"\r\n            实现使用一系列对象存储元素的列表。\r\n            \r\n            这与\r\n","\r\n            Clears the builder.\r\n            ":"\r\n            清理建筑商。\r\n            \r\n","\r\n            Used for claims transformation.\r\n            ":"\r\n            用于索赔转换。\r\n            \r\n","\r\n            Makes a decision if authorization is allowed.\r\n            ":"\r\n            如果允许授权做出决定。\r\n            \r\n","javax.sql.RowSet.setClob(int, java.io.Reader)":"javax.sql.Rowset.setClob（int，java.io.reader）\r\n","javax.xml.transform.stream.StreamSource.setReader(java.io.Reader)":"javax.xml.transform.stream.streamsource.setReader（java.io.reader）\r\n","Returns true if this is a periodic task.":"如果这是一个周期性的任务，则返回true。\r\n","Parses parameters with the given parser.":"用给定解析器解析参数。\r\n"," attribute defining the organization\n that maintains the extension specification.":" 属性定义组织\r\n 维护扩展规范。\r\n","Queries if this lock is held by any thread.":"查询该锁是否由任何线程持有。\r\n","Get the \"raw\" log message, before localization or formatting. -or- Set the \"raw\" log message, before localization or formatting.":"在本地化或格式化之前获取“原始”日志消息。 - 或 - 在本地化或格式化之前设置“原始”日志消息。\r\n","org.xml.sax.helpers.AttributesImpl.setQName(int, java.lang.String)":"org.xml.sax.helpers.attributesimpl.setqname（int，java.lang.string）\r\n","Associate an object to a key on this node.":"将对象与此节点上的键关联。\r\n","SetCookie2":"setCookie2\r\n","org.xml.sax.helpers.XMLReaderAdapter.setDTDHandler(org.xml.sax.DTDHandler)":"org.xml.sax.helpers.xmlreaderadapter.setdtdhandler（org.xml.sax.dtdhandler）\r\n","java.util.logging.LogRecord.setLevel(java.util.logging.Level)":"java.util.logging.logrocord.setlevel（java.util.logging.Level）\r\n","java.util.concurrent.atomic.AtomicLong.getAndAdd(long)":"java.util.concurrent.atomic.atomiclong.getandadd（long）\r\n","Returns an iterable of all session identifiers in this session context.":"在本会话上下文中返回所有会话标识符的疑问。\r\n","1 minute":"1分钟\r\n","-valued operand that produces\n            an ":" - 产生的可价值操作数\r\n            一个\r\n","if signature errors are detected\n":"如果检测到签名错误\r\n\r\n","if this instance has not been initialized.\n":"如果此实例尚未初始化。\r\n\r\n","Indicates that EOF is detected.":"表示检测到EOF。\r\n","javax.security.auth.Subject.Subject()":"javax.security.auth.subject.subject（）\r\n","Returns the name of the entry.":"返回条目的名称。\r\n","Synchronously send a request and obtain the response.":"同步发送请求并获得响应。\r\n","org.json.JSONStringer.value(long)":"org.json.jsonstringer.value（long）\r\n","javax.xml.datatype.DatatypeConfigurationException":"javax.xml.datatype.datatypeconfigurationException\r\n","javax.crypto.CipherInputStream.CipherInputStream(java.io.InputStream, javax.crypto.Cipher)":"javax.crypto.cipherinputstream.cipherinputstream（java.io.inputstream，javax.crypto.cipher）\r\n","Creates a new MalformedChallengeException with the specified message.":"使用指定的消息创建一个新的畸形ChallengeException。\r\n"," NOT_SUPPORTED_ERR: Raised if the ":" not_supported_err：如果是\r\n","java.util.function.LongToDoubleFunction.applyAsDouble(long)":"java.util.function.longtodoublefunction.applyasdouble（long）\r\n","Cookie specification registry that can be used to obtain the corresponding\n cookie specification implementation for a given type of type or version of \n cookie.":"cookie规范注册表，可用于获得相应的\r\n 给定类型类型或版本的Cookie规范实现\r\n 曲奇饼。\r\n","If the feature\n            can't be assigned that value.":"如果功能\r\n            无法分配该值。\r\n","If an error occurs during deflation.\n":"如果在放气期间发生错误。\r\n\r\n","javax.xml.parsers.SAXParserFactory.newInstance(java.lang.String, java.lang.ClassLoader)":"javax.xml.parsers.saxparserfactory.newinstance（java.lang.string，java.lang.classloader）\r\n","\r\n            Read a map header from\r\n            ":"\r\n            从\r\n            \r\n","javax.sql.RowSet.setInt(int, int)":"javax.sql.Rowset.setint（int，int）\r\n","org.xml.sax.helpers.ParserAdapter.setEntityResolver(org.xml.sax.EntityResolver)":"org.xml.sax.helpers.parseradapter.setentityresolver（org.xml.sax.entityResolver）\r\n","A Java-specific IO exception,\n            possibly the result of creating a new InputStream\n            or Reader for the InputSource.":"Java特定的IO例外，\r\n            可能创建新的输入流的结果\r\n            或读取输入源的读者。\r\n","java.util.concurrent.locks.Condition":"java.util.concurrent.locks.条件\r\n","\r\n            Gets the interval between revalidation attempts.\r\n            ":"\r\n            获得重新验证尝试之间的间隔。\r\n            \r\n","Push any buffered output to the target ":"将任何缓冲输出推向目标\r\n","Starts a core thread, causing it to idly wait for work.":"启动一个核心线程，导致它无所事事地等待工作。\r\n","X509HostnameVerifier":"X509HostNameVerifier\r\n","If string with the property name is null\n":"如果带有属性名称的字符串为null\r\n\r\n","java.util.jar.Pack200.newUnpacker()":"java.util.jar.pack200.newunpacker（）\r\n","if a scheme with the respective name is not registered\n":"如果未注册具有相应名称的计划\r\n\r\n","java.util.zip.CRC32.getValue()":"java.util.zip.crc32.getValue（）\r\n","javax.sql.RowSetMetaData.setTableName(int, java.lang.String)":"javax.sql.RowsetMetadata.settableName（int，java.lang.string）\r\n","javax.security.cert.CertificateParsingException":"Javax.Security.Cert.CertificateParsingException\r\n","javax.crypto.NullCipher.NullCipher()":"javax.crypto.nullcipher.nullcipher（）\r\n","javax.xml.parsers.SAXParser.parse(java.io.InputStream, org.xml.sax.HandlerBase, java.lang.String)":"javax.xml.parsers.saxparser.parse（java.io.inputstream，org.xml.sax.handlerbase，java.lang.string）\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.getState()":"java.util.concurrent.locks.abstractqueuedsynchronizer.getState（）\r\n","Unpack the contents of the specified ":"解开指定的内容\r\n","javax.net.ssl.SSLContextSpi.engineGetServerSocketFactory()":"javax.net.ssl.sslcontextspi.enginegetserversocketFactory（）\r\n","org.xmlpull.v1.XmlSerializer.setFeature(java.lang.String, boolean)":"org.xmlpull.v1.xmlserializer.setFeature（java.lang.string，boolean）\r\n","javax.crypto.CipherSpi.engineGetKeySize(java.security.Key)":"javax.crypto.cipherspi.enginegetekeysize（java.security.key）\r\n",".\r\n            This condition is NOT checked within this method, and violating this rule will result in data corruption.\r\n            ":"。\r\n            在此方法中未检查此条件，违反此规则将导致数据损坏。\r\n            \r\n","Shrinks the number of available permits by the indicated\n            reduction.":"收缩指示的可用许可证数量\r\n            减少。\r\n","The result of a match operation.":"比赛操作的结果。\r\n","\r\n            Indicates that authentication was successful.\r\n            ":"\r\n            表明身份验证是成功的。\r\n            \r\n","javax.crypto.spec.DESKeySpec.isWeak(byte[], int)":"javax.crypto.spec.deskeyspec.isweak（byte []，int）\r\n","javax.net.ssl.SSLSocket.setEnabledProtocols(java.lang.String[])":"javax.net.ssl.sslsocket.setEnabledprotocols（java.lang.string []）\r\n",",\n             or if the specified authentication type is ":"，，，，\r\n             或指定的身份验证类型是\r\n",",\r\n            gets the content of the text frame. Otherwise, the value is undefined.\r\n            ":"，，，，\r\n            获取文本框架的内容。否则，该值是未定义的。\r\n            \r\n","org.apache.http.params.HttpParams.setDoubleParameter(java.lang.String, double)":"org.apache.http.params.httpparams.setDoubleParameter（java.lang.String，double）\r\n","javax.xml.transform.dom.DOMResult.getNextSibling()":"javax.xml.transform.dom.domresult.getNextsibling（）\r\n","javax.net.ssl.SSLKeyException":"javax.net.ssl.sslkeyexception\r\n","javax.net.ssl.SSLSocketFactory":"javax.net.ssl.sslsocketFactory\r\n","Represents an operation that accepts a single ":"代表接受单个的操作\r\n","javax.xml.transform.TransformerFactory#newInstance":"javax.xml.transform.transformerfactory＃newinstance\r\n","javax.xml.transform.Transformer.clearParameters()":"javax.xml.transform.transformer.clearparameters（）\r\n","Write end tag.":"写结束标签。\r\n","\r\n            Gets the value of the element's ":"\r\n            获取元素的价值\r\n"," instance for this node,\n which will handle ":" 这个节点的实例，\r\n 会处理的\r\n","This class extends TransformerFactory to provide SAX-specific\n            factory methods.":"此类扩展了TransformerFactory以提供特定于SAX的\r\n            工厂方法。\r\n","org.xml.sax.Locator":"org.xml.sax.locator\r\n","\r\n            Stores a set of authentication tokens, after removing any old tokens.\r\n            ":"\r\n            删除任何旧令牌后，存储一组身份验证令牌。\r\n            \r\n"," is different from \"\", or if the ":" 与“”或\r\n","Encapsulates parameters for an SSL/TLS connection.":"封装SSL/TLS连接的参数。\r\n","Arrives at this phaser, without waiting for others to arrive.":"到达此移动器，而无需等待其他人到达。\r\n","Preferences#putDouble(String,double)":"首选项＃putdouble（字符串，double）\r\n","java.util.prefs.Preferences.remove(java.lang.String)":"java.util.prefs.preferences.remove（java.lang.string）\r\n","Assigns the value to the parameter with the given name.":"用给定名称将值分配给参数。\r\n","java.util.logging.StreamHandler.publish(java.util.logging.LogRecord)":"java.util.logging.streamhandler.publish（java.util.logging.logrocord）\r\n","javax.security.cert.CertificateException.CertificateException()":"javax.security.cert.certificateException.certificateException（）\r\n","javax.crypto.KeyGeneratorSpi.engineInit(int, java.security.SecureRandom)":"javax.crypto.KeygeneratorsPi.Engineinit（int，java.security.securerandom）\r\n"," in this store that have expired by \n the specified ":" 在这家商店已经到期\r\n 指定的\r\n"," using the specified encoded value.":" 使用指定的编码值。\r\n","javax.crypto.KeyAgreement.KeyAgreement(javax.crypto.KeyAgreementSpi, java.security.Provider, java.lang.String)":"javax.crypto.keyagreement.keyagreement（javax.crypto.keyagreementspi，java.security.provider，java.lang.string）\r\n","java.util.zip.CRC32.update(java.nio.ByteBuffer)":"java.util.zip.crc32.update（java.nio.bytebuffer）\r\n","org.xml.sax.SAXParseException.SAXParseException(java.lang.String, org.xml.sax.Locator)":"org.xml.sax.saxparseexception.saxparseexception（java.lang.string，org.xml.sax.locator）\r\n","javax.crypto.interfaces.DHPrivateKey":"javax.crypto.interfaces.dhprivatekey\r\n","\r\n            Provides all of the types of operations that are possible.\r\n            Must be one of none, copy, copyLink, copyMove, link, linkMove, move, all or uninitialized.\r\n            ":"\r\n            提供所有可能的操作类型。\r\n            必须是一个无，复制，科旋，copymove，link，linkmove，移动，全部或不可分化。\r\n            \r\n","\r\n            Instantiates a new ":"\r\n            实例化新的\r\n","Obtains the default KeyManagerFactory algorithm name.":"获取默认的KeyManagerFactory算法名称。\r\n","add a listener for PropertyChange events":"添加一个侦听器以供属性汇总事件\r\n","javax.xml.datatype.XMLGregorianCalendar.clear()":"javax.xml.datatype.xmlgregoriancalendar.clear（）\r\n","javax.net.ssl.SSLEngine.closeOutbound()":"javax.net.ssl.sslengine.closeoutbound（）\r\n","Returns a <code>java.":"返回<code> Java。\r\n","Insert the result of the parse operation as the immediately preceding\n            sibling of the context node.":"将解析操作的结果插入即将前面的结果\r\n            上下文节点的兄弟姐妹。\r\n","\r\n            Combines the specified ":"\r\n            结合了指定的\r\n","Format the given message to XML.":"将给定消息格式化给XML。\r\n","org.xmlpull.v1.XmlPullParserFactory.isValidating()":"org.xmlpull.v1.xmlpullparserfactory.isvalidating（）\r\n","java.util.jar.JarOutputStream.JarOutputStream(java.io.OutputStream)":"java.util.jar.jaroutputstream.jaroutputstream（java.io.outputstream）\r\n"," is empty, ":" 是空的，\r\n","javax.crypto.CipherSpi.engineGetBlockSize()":"javax.crypto.cipherspi.enginegetblocksize（）\r\n","org.w3c.dom.DocumentType":"org.w3c.dom.documentType\r\n",", or throws if no such mapping exists.":"，或者如果不存在这样的映射。\r\n","Returns a <code>Mac</code> object that implements the\n            specified MAC algorithm.":"返回<code> Mac </code>对象\r\n            指定的MAC算法。\r\n","Encodes this array as a human readable JSON string for debugging, such\n            as:":"将此数组编码为人类可读的JSON字符串进行调试，例如\r\n            作为：\r\n","javax.xml.transform.dom.DOMSource.getNode()":"javax.xml.transform.dom.domsource.getNode（）\r\n","\r\n            This default implementation of the ICookieAuthenticationEvents may be used if the \r\n            application only needs to override a few of the interface methods. This may be used as a base class\r\n            or may be instantiated directly.\r\n            ":"\r\n            如果可以使用ICookieAuthenticationEvents的此默认实现\r\n            应用程序只需要覆盖一些接口方法。这可以用作基类\r\n            或可以直接实例化。\r\n            \r\n"," which partitions the input elements according\n            to a ":" 哪些分区的输入元素\r\n            到\r\n"," with the given number of\n            permits and the given fairness setting.":" 给定的数字\r\n            许可证和给定的公平设置。\r\n","java.util.prefs.Preferences.getDouble(java.lang.String, double)":"java.util.prefs.preferences.getDouble（java.lang.string，double）\r\n","\r\n            This handles cookies that are limited by per cookie length. It breaks down long cookies for responses, and reassembles them\r\n            from requests.\r\n            ":"\r\n            该处理cookie限制每个cookie长度。它分解了长饼干以进行响应，并将其重新组装\r\n            从请求。\r\n            \r\n","Document.xmlVersion":"document.xmlversion\r\n","Check if setting a parameter to a specific value is supported.":"检查是否支持将参数设置为特定值。\r\n","Creates a response from elements of a status line.":"从状态行的元素中创建响应。\r\n","Constructs a BackingStoreException with the specified cause.":"用指定的原因构建背部储备。\r\n","The client may raise a\n            processing exception.\n":"客户可以提出一个\r\n            处理异常。\r\n\r\n","java.util.concurrent.Phaser.forceTermination()":"java.util.concurrent.phaser.forcetermination（）\r\n","org.xml.sax.InputSource.setByteStream(java.io.InputStream)":"org.xml.sax.inputsource.setByteStream（java.io.inputstream）\r\n","\r\n            Base context for authentication events which deal with a ClaimsPrincipal.\r\n            ":"\r\n            认证事件的基本上下文，涉及索赔。\r\n            \r\n","Imports a node from another document to this document, without altering\n            or removing the source node from the original document; this method\n            creates a new copy of the source node.":"从另一个文档中导入该文档的节点，而无需更改\r\n            或从原始文档中删除源节点；这个方法\r\n            创建源节点的新副本。\r\n","Create a new transformation context for this Templates object.":"为此模板对象创建新的转换上下文。\r\n","org.apache.http.params.HttpParams.getBooleanParameter(java.lang.String, boolean)":"org.apache.http.params.httpparams.getbooleanparameter（java.lang.string，boolean）\r\n","Constructs a new, empty Attributes object with default size.":"构建具有默认大小的新的空属性对象。\r\n","\r\n            A default ":"\r\n            默认\r\n","\r\n            Writes a 32-bit integer in big endian format.\r\n            ":"\r\n            写一个32位整数的大型Endian格式。\r\n            \r\n","Indicates whether there is another header element in this \n iteration.":"指示此中是否还有另一个标题元素\r\n 迭代。\r\n","if error(s) occur during generation.\n":"如果在发电期间发生错误。\r\n\r\n"," to see if authorization is allowed.\r\n            ":" 查看是否允许授权。\r\n            \r\n","java.util.prefs.Preferences.removeNode()":"java.util.prefs.preferences.removenode（）\r\n","stampHolder[0]":"Stampholder [0]\r\n","Insert a string at the specified 16-bit unit offset.":"在指定的16位单元偏移量中插入一个字符串。\r\n","Cipher":"密码\r\n"," to an absolute URI.":" 绝对的URI。\r\n","\r\n            Set a parameter value in the ":"\r\n            在\r\n","The antiforgery token could not be decrypted.":"不能解密抗管状令牌。\r\n","java.util.logging.Handler.getLevel()":"java.util.logging.handler.getlevel（）\r\n","\r\n            The authentication scheme.\r\n            ":"\r\n            身份验证方案。\r\n            \r\n","java.util.logging.LogRecord.setThreadID(int)":"java.util.logging.logrocord.setthreadid（int）\r\n","Attr":"attr\r\n","markHolder[0]":"商标[0]\r\n","javax.xml.transform.stream.StreamSource":"javax.xml.transform.stream.streamsource\r\n","Creates a new compressor using the specified compression level.":"使用指定的压缩级别创建新的压缩机。\r\n","\r\n            The position of the first element that has not yet been processed.\r\n            This is typically ":"\r\n            尚未处理的第一个元素的位置。\r\n            这通常是\r\n","\r\n            Gets the length of the sequence.\r\n            ":"\r\n            获取序列的长度。\r\n            \r\n","\r\n            true if the alt key was down when the event was fired. false otherwise.\r\n            ":"\r\n            如果发生事件发射时，则alt键关闭，则是真的。否则为错误。\r\n            \r\n","java.util.prefs.PreferenceChangeEvent":"java.util.prefs.preferencechangeevent\r\n","java.util.function.DoubleConsumer":"java.util.function.doubleconsumer\r\n","Server":"服务器\r\n","Obtains the Content-Encoding header, if known.":"如果已知，则获取内容编码标头。\r\n","java.util.concurrent.atomic.AtomicLong.accumulateAndGet(long, java.util.function.LongBinaryOperator)":"java.util.concurrent.atomic.atomiclong.accumulateandget（long，java.util.function.longbinaryoperator）\r\n","\r\n            which requires the current user name must match the specified value.\r\n            ":"\r\n            需要当前用户名必须匹配指定的值。\r\n            \r\n","Obtains the default TrustManagerFactory algorithm name.":"获取默认的TrustManagerFactory算法名称。\r\n","Defines the maximum number of connections per route.":"定义每条路线的最大连接数。\r\n","java.util.concurrent.TimeUnit.toNanos(long)":"java.util.concurrent.timeunit.tonanos（long）\r\n","Exclusively acquires the lock, blocking if necessary\n            until available or the current thread is interrupted.":"独家获取锁，如有必要\r\n            直到可用或当前线中断为止。\r\n","Returns the default SSL context. -or- Sets the default SSL context.":"返回默认的SSL上下文。 - 或设置默认的SSL上下文。\r\n","pushLevel":"推高\r\n"," is\n   negative or greater than the number of 16-bit units in\n   ":" 是\r\n   负数或大于16位单元的数量\r\n   \r\n","org.xml.sax.HandlerBase.ignorableWhitespace(char[], int, int)":"org.xml.sax.handlerbase.ignorablewhitespace（char []，int，int）\r\n","Returns a collection containing threads that may be waiting to\n            acquire the write lock.":"返回包含可能正在等待的线程的集合\r\n            获取写锁。\r\n","Thread#join(long, int) Thread.join":"线程＃join（long，int）线程。\r\n","\r\n            Types in the Microsoft.AspNetCore.Components.RenderTree are not recommended for use outside\r\n            of the Blazor framework. These types will change in a future release.\r\n            ":"\r\n            不建议在Microsoft.aspnetcore.com.ponents.rendertree中使用类型\r\n            大火框架。这些类型将在以后的版本中发生变化。\r\n            \r\n","org.json.JSONArray.optJSONObject(int)":"org.json.jsonarray.optjsonobject（int）\r\n","The node is adopted, using <code>Document.":"使用<code>文档采用节点。\r\n","Session output buffer for blocking connections.":"会话输出缓冲区用于阻止连接。\r\n","java.util.concurrent.LinkedTransferQueue.tryTransfer(java.lang.Object, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.linkedtransferqueue.trytransfer（java.lang.Object，long，java.util.concurrent.timeunit）\r\n","Attempts to match the input sequence, starting at the beginning of the\n            region, against the pattern.":"尝试匹配输入序列，从\r\n            区域，违背模式。\r\n"," for claims transformation.\r\n            ":" 索赔转换。\r\n            \r\n","Returns the list of cipher suites which are enabled by default.":"返回默认情况下启用的密码套件列表。\r\n","org.xmlpull.v1.XmlPullParserFactory.classNamesLocation":"org.xmlpull.v1.xmlpullparserfactory.classnameslocation\r\n","\r\n             A callback that will be invoked when the form is submitted.\r\n            \r\n             If using this parameter, you are responsible for triggering any validation\r\n             manually, e.g., by calling ":"\r\n             提交表格时将调用的回调。\r\n            \r\n             如果使用此参数，则负责触发任何验证\r\n             手动，例如，致电\r\n","\r\n            The default cookie prefix, which is \".AspNetCore.Antiforgery.\".\r\n            ":"\r\n            默认的cookie前缀，即“ .aspnetcore.antiforgery。”。\r\n            \r\n","javax.crypto.interfaces.PBEKey.getPassword()":"javax.crypto.interfaces.pbekey.getPassword（）\r\n","Creates a new AtomicInteger with the given initial value.":"创建一个具有给定初始值的新原子素。\r\n"," method is mapped to\n            ":" 方法映射到\r\n            \r\n","Return the value associated with the specified key at this preference\n            node, or ":"返回与指定键关联的值\r\n            节点，或\r\n","The operation closed this side of the communication or was already\n closed.":"该操作关闭了通信的这一方面或已经\r\n 关闭。\r\n","\r\n            Reads a ":"\r\n            读\r\n","java.util.concurrent.atomic.AtomicBoolean.set(boolean)":"java.util.concurrent.atomic.atomicboolean.set（boolean）\r\n"," parameter is\n outside value constraints for the field as specified in\n .\n":" 参数为\r\n 该字段的外部价值约束如指定\r\n 。\r\n\r\n","javax.xml.transform.dom.DOMResult.getNode()":"javax.xml.transform.dom.domresult.getnode（）\r\n"," whose keys and values are the result of applying\n            the provided mapping functions to the input elements.":" 其钥匙和值是应用的结果\r\n            提供给输入元素的映射功能。\r\n","Atomically updates the field of the given object managed by this\n            updater with the results of applying the given function to the\n            current and given values, returning the updated value.":"原子上更新由此管理的给定对象的字段\r\n            更新者将给定功能应用于\r\n            当前和给定的值，返回更新的值。\r\n","\r\n            Asynchronously returns a value indicating whether the request passes antiforgery validation. If the\r\n            request uses a safe HTTP method (GET, HEAD, OPTIONS, TRACE), the antiforgery token is not validated.\r\n            ":"\r\n            异步返回指示请求是否通过抗试验验证的值。如果是\r\n            请求使用安全的HTTP方法（GET，HEAD，选项，跟踪），未验证抗验证令牌。\r\n            \r\n","java.util.concurrent.atomic.LongAdder.intValue()":"java.util.concurrent.atomic.longadder.intvalue（）\r\n","javax.xml.transform.sax.SAXResult.getSystemId()":"javax.xml.transform.sax.saxresult.getSystemid（）\r\n","DocumentBuilderFactory#isXIncludeAware()":"documentBuilderFactory＃isxincludeaware（）\r\n","java.util.function.Consumer.andThen(java.util.function.Consumer)":"java.util.function.consumer.andthen（java.util.function.consumer）\r\n","month":"月\r\n","javax.net.ssl.SSLParameters.setWantClientAuth(boolean)":"javax.net.ssl.sslparameters.setwantclientauth（boolean）\r\n","if the current thread is interrupted\n         while acquiring the lock (and interruption of lock\n         acquisition is supported)\n":"如果当前线程中断\r\n         同时获得锁（和锁的中断\r\n         支持获取）\r\n\r\n","Returns the number of entries in the ZIP file.":"返回zip文件中的条目数。\r\n",", and \n ":"， 和\r\n \r\n","AuthorizationPolicy must have at least one requirement.":"授权人员必须至少有一个要求。\r\n","\r\n            Provides access to the antiforgery system, which provides protection against\r\n            Cross-site Request Forgery (XSRF, also called CSRF) attacks.\r\n            ":"\r\n            提供对抗试验系统的访问，该系统提供了防止\r\n            跨站点伪造（XSRF，也称为CSRF）攻击。\r\n            \r\n","\r\n            Extension methods for ":"\r\n            扩展方法\r\n","org.xml.sax.Attributes.getValue(java.lang.String, java.lang.String)":"org.xml.sax.attributes.getValue（java.lang.string，java.lang.string）\r\n","Returns the offset after the last character of the subsequence\n            captured by the given <a href=\"Pattern.":"在子序列的最后一个字符之后返回偏移\r\n            由给定<a href =“模式捕获。\r\n","authentication scheme":"身份验证方案\r\n","Returns an empty spliterator in which calls to\n            ":"返回一个空的拆分器，在其中打电话给\r\n            \r\n","Flush any buffered output.":"冲洗任何缓冲输出。\r\n","java.util.regex.Matcher.find(int)":"java.util.regex.matcher.find（int）\r\n","java.util.concurrent.CompletionStage.thenRun(java.lang.Runnable)":"java.util.concurrent.completionstage.thenrun（java.lang.runnable）\r\n"," matching the name, or null.\r\n            ":" 匹配名称或null。\r\n            \r\n"," interface\n to simplify manipulation of the HTTP authentication specific parameters.":" 界面\r\n 简化操纵HTTP身份验证特定参数。\r\n","javax.xml.parsers.DocumentBuilderFactory.setSchema(javax.xml.validation.Schema)":"javax.xml.parsers.documentbuilderfactory.setschema（javax.xml.validation.schema）\r\n","javax.xml.transform.dom.DOMResult.setNextSibling(org.w3c.dom.Node)":"javax.xml.transform.dom.domresult.setnextsibling（org.w3c.dom.node）\r\n","javax.xml.transform.Transformer.reset()":"javax.xml.transform.transformer.reset（）\r\n","\r\n            Extension method for SignIn using the ":"\r\n            使用签名的扩展方法\r\n","\r\n            Extension methods to configure an ":"\r\n            扩展方法配置\r\n","javax.security.auth.x500.X500Principal.CANONICAL":"javax.security.auth.x500.x500 principal.caronical\r\n","\r\n            Allows the caller to handle exceptions from the SynchronizationContext when one is available.\r\n            ":"\r\n            当可用时，允许呼叫者从同步链上处理异常。\r\n            \r\n"," to the current instance.\r\n            ":" 到当前实例。\r\n            \r\n","If file cannot be opened or read.\n":"如果无法打开或读取文件。\r\n\r\n","The namespace declaration URI as a constant.":"名称空间声明URI为常数。\r\n","An object that implements the <code>RowSetWriter</code> interface,\n            called a ":"实现<code> RowsetWriter </code>接口的对象，\r\n            称为\r\n","\r\n            Adds the messages from the specified collection for the specified field.\r\n            ":"\r\n            为指定字段添加了指定集合中的消息。\r\n            \r\n","Filter an external entity resolution.":"过滤外部实体分辨率。\r\n","\r\n            If set, this specifies the target scheme that this scheme should forward ForbidAsync calls to.\r\n            For example Context.ForbidAsync(\"ThisScheme\") => Context.ForbidAsync(\"ForwardForbidValue\");\r\n            Set the target to the current scheme to disable forwarding and allow normal processing.\r\n            ":"\r\n            如果设置，则指定该方案应将其forbidasync调用的目标方案。\r\n            例如context.forbidasync（“ thisscheme”）=> context.forbidasync（“ forwardforbidvalue”）;\r\n            将目标设置为当前方案以禁用转发并允许正常处理。\r\n            \r\n","org.apache.http.params.HttpConnectionParams.setStaleCheckingEnabled(org.apache.http.params.HttpParams, boolean)":"org.apache.http.params.httpconnectionparams.setstalecheckingenabled（org.apache.http.params.httpparams，boolean）\r\n","java.util.logging.LogRecord.setMillis(long)":"java.util.logging.logrocord.setmillis（long）\r\n","\r\n            Failure was due to ":"\r\n            失败是由于\r\n","javax.xml.validation.SchemaFactory.setProperty(java.lang.String, java.lang.Object)":"javax.xml.validation.schemafactory.setproperty（java.lang.string，java.lang.object）\r\n"," characters of the input.":" 输入的字符。\r\n","Create a new <code>ParserConfigurationException</code> with\n            the <code>String</code> specified as an error message.":"使用新的<code> ParserconFigurationException </code>使用\r\n            <code>字符串</code>指定为错误消息。\r\n","parties ":"派对\r\n","java.util.concurrent.atomic.AtomicLongFieldUpdater.newUpdater(java.lang.Class, java.lang.String)":"java.util.concurrent.atomic.atomiclongfieldupdater.newupdater（java.lang.class，java.lang.string）\r\n","java.util.concurrent.atomic.AtomicLongArray.updateAndGet(int, java.util.function.LongUnaryOperator)":"java.util.concurrent.atomic.atomiclongarray.updateandget（int，java.util.function.longunaryoperator）\r\n","org.xml.sax.helpers.AttributesImpl.getLength()":"org.xml.sax.helpers.attributesimpl.getLength（）\r\n","Returns an input stream for reading the contents of the specified\n            zip file entry.":"返回输入流以读取指定的内容\r\n            zip文件条目。\r\n","javax.sql.RowSet":"Javax.sql.Rowset\r\n","MemoryHandler":"MemoryHandler\r\n"," to control output on this ":" 为此控制输出\r\n","javax.crypto.ExemptionMechanism.getProvider()":"javax.crypto.Exemptionmechanism.getProvider（）\r\n","Returns a Set view of the attribute names (keys) contained in this Map.":"返回此地图中包含的属性名称（键）的集合视图。\r\n","Evaluate an XPath expression in the context of the specified <code>InputSource</code>\n            and return the result as the specified type.":"在指定的<code> InputSource </code>的上下文中评估XPATH表达式\r\n            并将结果作为指定类型返回。\r\n","Creates a new output stream with the specified decompressor and a\n            default buffer size.":"使用指定的解压器和一个创建一个新的输出流\r\n            默认缓冲区大小。\r\n","java.util.concurrent.atomic.AtomicLongArray.lazySet(int, long)":"java.util.concurrent.atomic.atomiclongarray.lazyset（int，long）\r\n","Generic message parser interface.":"通用消息解析器接口。\r\n","205 Reset Content":"205重置内容\r\n","java.util.regex.Pattern.matcher(java.lang.CharSequence)":"java.util.regex.pattern.matcher（java.lang.charsequence）\r\n","A Formatter provides support for formatting LogRecords.":"格式化器为格式化环芯提供了支持。\r\n","javax.xml.datatype.DatatypeConstants.AUGUST":"javax.xml.datatype.datatypeconstants.augast\r\n","javax.xml.parsers.DocumentBuilderFactory.getFeature(java.lang.String)":"javax.xml.parsers.documentbuilderfactory.getFeature（java.lang.string）\r\n"," as being\r\n            successfully evaluated.\r\n            ":" 作为存在\r\n            成功评估。\r\n            \r\n","The position of the last returned header.":"最后一个返回的标头的位置。\r\n","DOMError":"Domerror\r\n","javax.xml.datatype.Duration.getMinutes()":"javax.xml.datatype.duration.getminutes（）\r\n","javax.xml.transform.stream.StreamSource.setInputStream(java.io.InputStream)":"javax.xml.transform.stream.streamsource.setinputstream（java.io.inputstream）\r\n","The error method is called when a Handler failure occurs.":"当处理程序故障发生时，将调用错误方法。\r\n","org.w3c.dom.Node.ENTITY_NODE":"org.w3c.dom.node.entity_node\r\n","org.xml.sax.HandlerBase.unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.handlerbase.unparsedentitydecl（java.lang.string，java.lang.string，java.lang.string，java.lang.string）\r\n","Attributes.Name":"属性。名称\r\n","org.xml.sax.DTDHandler":"org.xml.sax.dtdhandler\r\n","Retrieves an <code>Attr</code> node by local name and namespace URI.":"通过本地名称和名称空间URI检索<code> attry> attr </code>节点。\r\n","Returns true if this cookie has expired.":"如果该饼干过期，则返回true。\r\n","if the specified provider name is ":"如果指定的提供商名称为\r\n","Obtains the current size of this list.":"获得此列表的当前大小。\r\n","org.xml.sax.helpers.AttributesImpl.setValue(int, java.lang.String)":"org.xml.sax.helpers.attributesimpl.setValue（int，java.lang.string）\r\n","Creates a new output stream with the specified compressor and\n            a default buffer size.":"使用指定的压缩机和\r\n            默认缓冲区大小。\r\n","javax.crypto.CipherSpi.engineInit(int, java.security.Key, java.security.SecureRandom)":"javax.crypto.cipherspi.engineinit（int，java.security.key，java.security.securerandom）\r\n","Obtain a new instance of a <code>Duration</code>\n            specifying the <code>Duration</code> as its string representation, \"PnYnMnDTnHnMnS\",\n            as defined in XML Schema 1.":"获取<code>持续时间</code>的新实例\r\n            将<code>持续时间</code>指定为字符串表示“ pnynmndtnhnmns”，\r\n            如XML模式1所定义。\r\n",", or if the specified ":"，或者指定\r\n","Returns a <code>KeyManagerFactory</code> object that acts as a\n            factory for key managers.":"返回<code> keymanagerFactory </code>对象充当\r\n            关键经理的工厂。\r\n","A counting semaphore.":"计数信号量。\r\n","if the specified cipher is not suited to decrypt the\n             encrypted data.":"如果指定的密码不适合解密\r\n             加密数据。\r\n","java.util.logging.Logger.warning(java.util.function.Supplier)":"java.util.logging.logger.warning（java.util.function.supplier）\r\n","javax.crypto.Cipher.doFinal(byte[], int)":"javax.crypto.cipher.dofinal（byte []，int）\r\n","Returns the host name of the peer of this session.":"返回本会话的同伴的主机名。\r\n"," specific to the Windows platform.":" 特定于Windows平台。\r\n","Factory for creating an XML reader.":"用于创建XML读取器的工厂。\r\n","java.util.concurrent.locks.Lock.tryLock(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.locks.lock.trylock（long，java.util.concurrent.timeunit）\r\n","Parameter for the date patterns used for parsing.":"用于解析的日期模式的参数。\r\n","javax.xml.transform.TransformerException.TransformerException(java.lang.String, javax.xml.transform.SourceLocator, java.lang.Throwable)":"javax.xml.transform.transformerexception.transformerexception（java.lang.string，javax.xml.transform.sourcelform.sourcelocator，java.lang.throwable）\r\n","\r\n            A base class for form input components. This base class automatically\r\n            integrates with an ":"\r\n            表单输入组件的基类。此基类自动\r\n            与An集成\r\n","Sets the cipher suites enabled for use by accepted connections.":"将启用的密码套件设置为可接受的连接。\r\n","SNIHostName":"snihostname\r\n","javax.net.ssl.SSLContextSpi.engineInit(javax.net.ssl.KeyManager[], javax.net.ssl.TrustManager[], java.security.SecureRandom)":"javax.net.ssl.sslcontextspi.engineinit（javax.net.ssl.keymanager []，javax.net.net.ssl.trustmanager []，java.security.security.securerandom）\r\n","If the validator is processing a\n      ":"如果验证者正在处理\r\n      \r\n","javax.crypto.spec.PBEParameterSpec.PBEParameterSpec(byte[], int)":"javax.crypto.spec.pbeparameterspec.pbeparameterspec（byte []，int）\r\n","A wrapper for CertPathParameters.":"CERTPATHAMETERS的包装纸。\r\n","javax.net.ssl.SNIServerName.SNIServerName(int, byte[])":"javax.net.ssl.sniservername.sniservername（int，byte []）\r\n","if the parameters cannot be used to initialize this\n             mechanism.":"如果不能使用参数来初始化此\r\n             机制。\r\n","java.util.regex.MatchResult.start()":"java.util.regex.matchresult.start（）\r\n","\r\n            Indicates that the text content of the specified frame (which must be a text frame)\r\n            should be updated.\r\n            ":"\r\n            表示指定框架的文本内容（必须是文本帧）\r\n            应该更新。\r\n            \r\n","An array of object references in which elements may be updated\n            atomically.":"可以更新元素的对象引用数组\r\n            原子。\r\n","javax.net.ssl.SSLContext.createSSLEngine()":"javax.net.ssl.sslcontext.createsslengine（）\r\n","javax.xml.xpath.XPathFactory.XPathFactory()":"javax.xml.xpath.xpathfactory.xpathfactory（）\r\n","Get a TransformerHandler object that can process SAX\n            ContentHandler events into a Result, based on the Templates argument.":"获取一个可以处理SAX的TransformerHandler对象\r\n            ContentHandler事件基于模板参数为结果。\r\n","org.xmlpull.v1.XmlSerializer.getProperty(java.lang.String)":"org.xmlpull.v1.xmlserializer.getProperty（java.lang.string）\r\n","javax.net.ssl.KeyManagerFactory.init(javax.net.ssl.ManagerFactoryParameters)":"javax.net.ssl.keymanagerfactory.init（javax.net.ssl.managerfactoryparameters）\r\n","org.w3c.dom.CharacterData.substringData(int, int)":"org.w3c.dom.characterdata.substringdata（int，int）\r\n","Returns the encrypted data.":"返回加密数据。\r\n","absolutePath":"绝对ep\r\n","DatatypeConstants#EQUAL":"datatypeconstants＃equal\r\n","Removes all of ":"删除所有\r\n"," with the results\n            of applying the given function, returning the updated value.":" 与结果\r\n            应用给定功能，返回更新的值。\r\n",",\r\n            gets a name representing the type of the element. Otherwise, the value is undefined.\r\n            ":"，，，，\r\n            获取代表元素类型的名称。否则，该值是未定义的。\r\n            \r\n","#removeNode()":"#removenode（）\r\n","duration":"期间\r\n",",\r\n             which makes the user's current authentication state available to descendants.\r\n             ":"，，，，\r\n             这使得用户的当前身份验证状态可用于后代。\r\n             \r\n","This interface represents a notation declared in the DTD.":"该接口表示DTD中声明的符号。\r\n","java.util.function.ToLongBiFunction.applyAsLong(java.lang.Object, java.lang.Object)":"java.util.function.tolongbifunction.applyaslong（java.lang.object，java.lang.object）\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.hasContended()":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.hascontended（）\r\n"," in this map.\n   ":" 在此地图中。\r\n   \r\n","org.w3c.dom.NamedNodeMap.getNamedItemNS(java.lang.String, java.lang.String)":"org.w3c.dom.namednodemap.getnameditemns（java.lang.string，java.lang.string）\r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            with the given  <code>java.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            使用给定的<code> Java。\r\n","org.xml.sax.ContentHandler.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)":"org.xml.sax.contenthandler.startelement（java.lang.string，java.lang.string，java.lang.string，org.xml.sax.attributes）\r\n","java.util.function.Predicate":"java.util.function.predicate\r\n","if this stream is already closed\n":"如果此流已经关闭\r\n\r\n","java.util.logging.LogRecord.getResourceBundle()":"java.util.logging.logrecord.getResourceBundle（）\r\n","javax.sql.RowSet.setBoolean(int, boolean)":"javax.sql.rowset.setboolean（int，boolean）\r\n","\r\n            Gets or sets the endpoint path the user agent will be redirected to.\r\n            By default, this property is set to ":"获取或设置用户代理将重定向到的端点路径。\r\n            默认情况下，此属性设置为\r\n","NOT_FOUND_ERR: Raised when the parameter name is not recognized.\n":"NOT_FOUND_ERR：未识别参数名称时提高。\r\n\r\n","Create a new SAXParseException.":"创建一个新的saxparseexception。\r\n","Obtains the first proxy host.":"获得第一个代理主机。\r\n",",\n   this exception might be raised if the DOM implementation doesn't\n   support the removal of the ":"，，，，\r\n   如果DOM实施不实现，可能会提出此例外\r\n   支持去除\r\n","java.util.concurrent.CompletionStage.thenCombineAsync(java.util.concurrent.CompletionStage, java.util.function.BiFunction, java.util.concurrent.Executor)":"java.util.concurrent.completionstage.thencombineasync（java.util.concurrent.completionstage，java.util.function.bifunction.bifunction，java.util.util.util.concurrent.executor）\r\n","Acquires the write lock.":"获取写锁。\r\n","Defines an interface to verify whether an incoming HTTP request meets \n the target server's expectations.":"定义接口以验证传入的HTTP请求是否满足\r\n 目标服务器的期望。\r\n","\r\n            The content to which the authentication state should be provided.\r\n            ":"\r\n            应提供身份验证状态的内容。\r\n            \r\n","encoded":"编码\r\n","java.util.concurrent.ScheduledThreadPoolExecutor.decorateTask(java.util.concurrent.Callable, java.util.concurrent.RunnableScheduledFuture)":"java.util.concurrent.scheduledthreadpoolexecutor.decoratetask（java.util.concurrent.callable，java.util.concurrent.runnabless.runnablescheduledfuture）\r\n","if the provider does not support the operation.\n":"如果提供商不支持操作。\r\n\r\n","javax.xml.xpath.XPathFactory.newXPath()":"javax.xml.xpath.xpathfactory.newxpath（）\r\n","Specification-Title":"规格标题\r\n","javax.net.ssl.X509ExtendedTrustManager.checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String, java.net.Socket)":"javax.net.ssl.x509 extendedTrustmanager.checkclienttrusted（java.security.cert.cert.x509certificate []，java.lang.string，java.net.socket）\r\n","The cipher's ":"密码\r\n","Set the value of a feature flag.":"设置功能标志的值。\r\n"," event.\r\n            ":" 事件。\r\n            \r\n","Returns the <code>CodeSigner</code> objects for this entry, or\n            <code>null</code> if none.":"返回<code> codeSigner </code>本条目的对象，或\r\n            <code> null </code>如果无。\r\n","if a DocumentBuilder\n cannot be created which satisfies the configuration requested.":"如果是文档构建器\r\n 无法创建满足所请求的配置的。\r\n","javax.sql.RowSet.setObject(java.lang.String, java.lang.Object, int)":"javax.sql.Rowset.setObject（java.lang.string，java.lang.object，int）\r\n","java.util.regex.Pattern.compile(java.lang.String)":"java.util.regex.pattern.compile（java.lang.string）\r\n","SSLSocket":"sslsocket\r\n","if an error occurs creating the ":"如果发生错误，创建了\r\n"," that executes each submitted task using\n            one of possibly several pooled threads, normally configured\n            using ":" 使用\r\n            通常配置的几个合并线程之一\r\n            使用\r\n","Returns a request header identifying what version of the state management \n specification is understood.":"返回请求标头识别哪个版本的状态管理\r\n 理解规范。\r\n","Sends the response line and headers of a response over this connection.":"在此连接上发送响应的响应行和标题。\r\n","org.xml.sax.SAXNotRecognizedException.SAXNotRecognizedException()":"org.xml.sax.SaxNotRecognizedException.SaxNotRecognizedException（）\r\n","Queries whether the given thread is waiting to acquire either\n            the read or write lock.":"查询给定线程是否正在等待获得\r\n            读或写锁。\r\n","transformation":"转型\r\n","javax.net.ssl.HandshakeCompletedEvent.getSocket()":"javax.net.ssl.handshakecomplededevent.getSocket（）\r\n","org.w3c.dom.Element.setAttribute(java.lang.String, java.lang.String)":"org.w3c.dom.element.setAttribute（java.lang.string，java.lang.string）\r\n"," with the same basic\n            behavior and semantics as the implicit monitor lock accessed using\n            ":" 具有相同的基本\r\n            行为和语义作为使用隐式监视器锁定的使用\r\n            \r\n","Encapsulates a request for a ":"封装一个请求\r\n","javax.crypto.Cipher.Cipher(javax.crypto.CipherSpi, java.security.Provider, java.lang.String)":"javax.crypto.cipher.cipher（javax.crypto.cipherspi，java.security.provider，java.lang.string）\r\n","org.xmlpull.v1.XmlPullParserFactory.newInstance(java.lang.String, java.lang.Class)":"org.xmlpull.v1.xmlpullparserfactory.newinstance（java.lang.string，java.lang.class）\r\n","The engine needs to receive data from the remote side to continue the\n handshake.":"引擎需要从遥控侧接收数据才能继续\r\n 握手。\r\n","An object that registers to be notified of events generated by a\n            <code>PooledConnection</code> object.":"注册要通知的对象\r\n            <code> poolconnection </code>对象。\r\n","Returns a new CompletionStage that, when either this or the\n            other given stage complete normally, is executed using this\n            stage's default asynchronous execution facility, with the\n            corresponding result as argument to the supplied action.":"返回一个新的完整舞台，当\r\n            其他给定的阶段正常完成，使用此\r\n            舞台的默认异步执行设施，\r\n            相应的结果作为参数与所提供的动作。\r\n","org.w3c.dom.Node.ATTRIBUTE_NODE":"org.w3c.dom.node.attribute_node\r\n","Parameter names for connection managers in HttpConn.":"HTTPConn中连接管理器的参数名称。\r\n","Returns the first (longest-waiting) thread in the queue, or\n            ":"返回队列中的第一个（最长的）线程，或\r\n            \r\n","org.json.JSONObject.optString(java.lang.String)":"org.json.jsonobject.optstring（java.lang.string）\r\n"," that can additionally schedule\n            commands to run after a given delay, or to execute periodically.":" 可以另外安排\r\n            命令在给定延迟后或定期执行。\r\n","java.util.zip.ZipEntry.getSize()":"java.util.zip.zipentry.getSize（）\r\n","\r\n            If set, will be used as the service type to get the Events instance instead of the property.\r\n            ":"\r\n            如果设置，将用作获得事件实例而不是属性的服务类型。\r\n            \r\n","javax.xml.transform.SourceLocator":"javax.xml.transform.sourcelocator\r\n","Removes a node specified by name.":"删除按名称指定的节点。\r\n","Returns this preference node's name, relative to its parent.":"返回此偏好节点的名称，相对于其父。\r\n","\r\n            A string value that can be rendered as markup such as HTML.\r\n            ":"\r\n            可以呈现为标记的字符串值，例如HTML。\r\n            \r\n","org.json.JSONTokener.skipPast(java.lang.String)":"org.json.jsontokener.skippast（java.lang.string）\r\n","Creates a new output stream with a default compressor, a default\n            buffer size and the specified flush mode.":"使用默认压缩机创建新的输出流，默认\r\n            缓冲区大小和指定的冲洗模式。\r\n","Returns a composed ":"返回组合\r\n","org.json.JSONArray.getJSONObject(int)":"org.json.jsonarray.getjsonobject（int）\r\n","java.util.concurrent.atomic.AtomicLongFieldUpdater.addAndGet(java.lang.Object, long)":"java.util.concurrent.atomic.atomiclongfieldupdater.addandget（java.lang.Object，long）\r\n","WRITE_FAILURE is used when a write to an output stream fails.":"当写入输出流失败时，使用write_failure。\r\n","javax.net.ssl.SSLSessionBindingEvent.getSession()":"javax.net.ssl.sslsessessessionbindingevent.getSession（）\r\n","Returns whether this engine is set to act in client mode when\n handshaking.":"返回该引擎是否设置为在客户端模式下起作用\r\n 握手。\r\n"," after a successful authorization.\r\n            This property is set to ":" 成功授权。\r\n            此属性设置为\r\n","Create a new <code>FactoryConfigurationError</code> with no\n            detail message.":"创建一个新的<code> Factory ConfigurationError </code> no\r\n            详细信息。\r\n","Returns the input encoding if known, null otherwise.":"返回输入编码如果知道的话，否则为null。\r\n","Obtains the Content-Type header.":"获得内容类型的标题。\r\n","\r\n            Generates and stores an antiforgery cookie token if one is not available or not valid.\r\n            ":"\r\n            如果一个不可用或不有效，则会生成并存储抗虫饼干令牌。\r\n            \r\n"," with the given initial\n            parameters and default thread factory.":" 给定的初始\r\n            参数和默认线程工厂。\r\n","Returns the name of the character encoding for the entity.":"返回实体编码字符的名称。\r\n","The JAR manifest file name.":"JAR清单文件名。\r\n","Writes the changes in this <code>RowSetWriter</code> object's\n            rowset back to the data source from which it got its data.":"在此<code> rowsetWriter </code>对象的更改中写入更改\r\n            行回到获得数据的数据源。\r\n","Returns an equivalent stream that is sequential.":"返回顺序的等效流。\r\n","\r\n            Specifies the name of the antiforgery token field that is used by the antiforgery system.\r\n            ":"\r\n            指定了抗试验系统使用的抗托管令牌场的名称。\r\n            \r\n","Obtains the classloader used to read the version information.":"获取用于读取版本信息的classloader。\r\n","SNIMatcher":"Snimatcher\r\n","javax.xml.datatype.XMLGregorianCalendar.setTime(int, int, int)":"javax.xml.datatype.xmlgregoriancalendar.settime（int，int，int）\r\n","Time unit representing sixty seconds":"代表六十秒的时间单元\r\n"," value using either ":" 使用任何一个\r\n","\r\n            Gets or sets whether the circuit has an attached ":"\r\n            获取还是设置电路是否附加了\r\n","This class represents an X.":"该类代表一个X。\r\n","A factory for creating new ":"创建新的工厂\r\n","if an IOException occurs.\n":"如果发生IOException。\r\n\r\n","org.json.JSONObject.optLong(java.lang.String, long)":"org.json.jsonobject.optlong（java.lang.string，长）\r\n","javax.net.ssl.KeyManagerFactory":"javax.net.ssl.keymanagerfactory\r\n","org.xml.sax.helpers.NamespaceSupport.isNamespaceDeclUris()":"org.xml.sax.helpers.namespacesupport.isnamespacedecluris（）\r\n","Gets the connection associated with this ":"获取与此关联的连接\r\n","org.w3c.dom.ls.LSResourceResolver.resolveResource(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"org.w3c.dom.ls.lsresourceresolver.resolveresource（java.lang.string，java.lang.string，java.lang.string，java.lang.lang.string，java.lang.lang.string）\r\n","Creates a special ":"创建一个特别的\r\n","If the startTimeInstant parameter is null.\n":"如果starttimeinstant参数为null。\r\n\r\n","\n            using this time unit.":"\r\n            使用此时间单元。\r\n","Adapt a SAX2 XMLReader as a SAX1 Parser.":"将SAX2 XMLReader适应SAX1解析器。\r\n"," if it exists and is a boolean or can\n            be coerced to a boolean.":" 如果存在并且是布尔或可以\r\n            被胁迫到布尔人。\r\n","java.util.regex.Matcher.reset()":"java.util.regex.matcher.reset（）\r\n","java.util.prefs.AbstractPreferences.getLong(java.lang.String, long)":"java.util.prefs.abstractpreferences.getlong（java.lang.string，long）\r\n","NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.\n":"no_modification_allowed_err：读取节点时升起。\r\n\r\n","This is called to notify the listener that it is being bound into\n            an SSLSession.":"这被称为通知听众被绑定到\r\n            SSLSession。\r\n","javax.net.ssl.SSLEngine.setHandshakeApplicationProtocolSelector(java.util.function.BiFunction)":"javax.net.ssl.sslengine.sethandshakeapplication protocococococolector（java.util.function.bifunction）\r\n","Processes an ":"处理\r\n","Compression method for uncompressed entries.":"未压缩条目的压缩方法。\r\n","Finishes a multiple-part encryption or decryption operation, depending\n            on how this cipher was initialized.":"完成多部分加密或解密操作，具体取决于\r\n            关于如何初始化此密码。\r\n","Return the saved public identifier. -or- Set the public identifier for this locator.":"返回保存的公共标识符。 - 或 - 为此定位器设置公共标识符。\r\n","Set the local name of a specific attribute.":"设置特定属性的本地名称。\r\n","if the specified padding method is not supported by this\n             cipher.\n":"如果不支持指定的填充方法\r\n             密码。\r\n\r\n","Returns authentication parameter with the given name, if available.":"返回带有给定名称的身份验证参数（如果有）。\r\n",",\r\n            gets the child component instance. Otherwise, the value is undefined.\r\n            ":"，，，，\r\n            获取子组件实例。否则，该值是未定义的。\r\n            \r\n","javax.xml.transform.sax.SAXSource.setInputSource(org.xml.sax.InputSource)":"javax.xml.transform.sax.saxsource.setInputsource（org.xml.sax.inputsource）\r\n","javax.xml.parsers.SAXParser.parse(java.io.InputStream, org.xml.sax.helpers.DefaultHandler, java.lang.String)":"javax.xml.parsers.saxparser.parse（java.io.inputstream，org.xml.sax.helpers.defaulthandler，java.lang.string）\r\n","NOT_SUPPORTED_ERR: when the compared nodes are from different DOM\n   implementations that do not coordinate to return consistent\n   implementation-specific results.":"NOT_SUPPORTED_ERR：比较节点来自不同的DOM\r\n   无法协调以返回一致的实现\r\n   实施特定结果。\r\n","Copy constructor for ":"复制构造函数\r\n","\r\n            Indicates that the associated component type uses a specified layout.\r\n            ":"\r\n            指示关联的组件类型使用指定的布局。\r\n            \r\n","java.util.concurrent.atomic.DoubleAccumulator.getThenReset()":"java.util.concurrent.Atomic.DoubleAccumulator.getThenReset（）\r\n","java.util.logging.Handler.getEncoding()":"java.util.logging.handler.getencoding（）\r\n","if an error occurs when trying to\n resolve the URI.\n":"如果试图发生错误\r\n 解决URI。\r\n\r\n","Removes all response interceptor of the specified class":"删除指定类的所有响应拦截器\r\n","Preferences#get(String,String)":"首选项＃get（字符串，字符串）\r\n","org.json.JSONArray.getString(int)":"org.json.jsonarray.getstring（int）\r\n","if a scheme with the given name cannot be found\n":"如果找不到给定名称的方案\r\n\r\n","org.w3c.dom.DOMException.INVALID_CHARACTER_ERR":"org.w3c.dom.domexception.invalid_character_err\r\n","javax.sql.RowSetListener":"Javax.sql.RowsetListener\r\n","Creates a new MalformedCookieException with a specified message string.":"使用指定的消息字符串创建一个新的MalformedCookieException。\r\n","if property value are invalid and no default value could be\n             used.\n":"如果属性值无效，并且没有默认值可以是\r\n             用过的。\r\n\r\n","java.util.zip.Inflater.setDictionary(byte[])":"java.util.zip.inflater.setDictionary（byte []）\r\n","407 Proxy Authentication Required":"407需要代理身份验证\r\n","javax.xml.datatype.XMLGregorianCalendar.setMillisecond(int)":"javax.xml.datatype.xmlgregoriancalendar.setmillisecond（int）\r\n","\r\n            Provides programmatic configuration for the antiforgery token system.\r\n            ":"\r\n            为抗验证令牌系统提供程序化配置。\r\n            \r\n","javax.xml.datatype.XMLGregorianCalendar.normalize()":"javax.xml.datatype.xmlgregoriancalendar.normalize（）\r\n","javax.xml.transform.stream.StreamResult.getOutputStream()":"javax.xml.transform.stream.streamresult.getOutputstream（）\r\n","java.util.concurrent.atomic.AtomicReference.getAndAccumulate(java.lang.Object, java.util.function.BinaryOperator)":"java.util.concurrent.atomic.atomicreference.getanccumulate（java.lang.object，java.util.function.binaryoperator）\r\n","java.util.concurrent.atomic.AtomicReferenceFieldUpdater.getAndUpdate(java.lang.Object, java.util.function.UnaryOperator)":"java.util.concurrent.atomic.atomicreferencefieldupdater.getandupdate（java.lang.object，java.util.function.unaryoperator）\r\n","org.json.JSONTokener.next()":"org.json.jsontokener.next（）\r\n","org.xml.sax.Attributes.getIndex(java.lang.String, java.lang.String)":"org.xml.sax.attributes.getIndex（java.lang.string，java.lang.string）\r\n",", null padding this array\n            to the required length if necessary.":"，空填充此阵列\r\n            如有必要，达到所需的长度。\r\n","Return the value of an attribute in the list (by position).":"返回列表中属性的值（按位置）。\r\n","org.xml.sax.HandlerBase.startDocument()":"org.xml.sax.handlerbase.startdocument（）\r\n","java.util.concurrent.ScheduledExecutorService.scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.scheduledexecutorservice.scheduleatfixedrate（java.lang.runnable，long，long，long，java.util.concurrent.timeunit）\r\n","if attempting to register more\n than the maximum supported number of parties\n":"如果尝试注册更多\r\n 比最大支持的政党\r\n\r\n","\n         returns ":"\r\n         返回\r\n","java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdater()":"java.util.concurrent.atomic.atomicreference fieldupdater.atomicreferendeffieldupdater（）\r\n","Acquires the write lock only if it is not held by another thread\n at the time of invocation.":"仅在不持有另一个线程的情况下才能获取写锁\r\n 在调用时。\r\n","\r\n            Provides information about the currently authenticated user, if any.\r\n            ":"\r\n            提供有关当前身份验证的用户（如果有）的信息。\r\n            \r\n"," which returns the lesser of two elements\n            according to the specified ":" 返回两个元素的较小\r\n            根据指定的\r\n","org.json.JSONArray.optDouble(int, double)":"org.json.jsonarray.optdouble（int，double）\r\n","Return the actual exception (if any) that caused this exception to\n            be raised.":"返回导致此例外的实际例外（如果有）\r\n            被提高。\r\n"," when\n            ":"什么时候\r\n            \r\n","java.util.stream.Collectors.toCollection(java.util.function.Supplier)":"java.util.stream.collectors.tocollection（java.util.function.supplier）\r\n","\r\n            A handler for the ":"\r\n            一个处理程序\r\n","javax.xml.xpath.XPathFactory.newInstance()":"javax.xml.xpath.xpathfactory.newinstance（）\r\n","java.util.concurrent.atomic.AtomicStampedReference.AtomicStampedReference(java.lang.Object, int)":"java.util.concurrent.atomic.atomicstampedReference.AtomicStampedReference（java.lang.object，int）\r\n","quote":"引用\r\n","java.util.concurrent.LinkedBlockingDeque.putFirst(java.lang.Object)":"java.util.concurrent.linkedblockingdeque.putfirst（java.lang.object）\r\n"," and passes\n            it to underlying security services so that they may interact with\n            the application to retrieve specific authentication data,\n            such as usernames and passwords, or to display certain information,\n            such as error and warning messages.":" 并通过\r\n            它是基础安全服务，以便他们可以与\r\n            检索特定身份验证数据的应用程序，\r\n            例如用户名和密码，或显示某些信息，\r\n            例如错误和警告消息。\r\n","org.json.JSONObject.putOpt(java.lang.String, java.lang.Object)":"org.json.jsonobject.putopt（java.lang.string，java.lang.object）\r\n","Returns a shallow copy of this Manifest.":"返回此清单的浅副本。\r\n","Returns a concurrent ":"返回并发\r\n"," do not\n             specify a valid chunk in the buffer ":"不要\r\n             在缓冲区中指定有效的块\r\n","Returns a copy of the salt or null if not specified.":"如果未指定，则返回盐或空的副本。\r\n","Returns the duration of time which this connection can be safely kept\n idle.":"返回可以安全保留此连接的时间的持续时间\r\n 闲置的。\r\n","javax.net.ssl.SSLServerSocket.SSLServerSocket(int, int)":"javax.net.ssl.sslserversocket.sslserversocket（int，int）\r\n","Creates a new RedirectException with the specified detail message and cause.":"使用指定的详细信息和原因创建一个新的RedirectException。\r\n","java.util.zip.Deflater.setDictionary(byte[], int, int)":"java.util.zip.deflater.setDictionary（byte []，int，int）\r\n"," attribute.\r\n            ":" 属性。\r\n            \r\n","java.util.concurrent.atomic.AtomicIntegerArray.AtomicIntegerArray(int[])":"java.util.concurrent.atomic.atomicintegerarray.atomicintegerarray（int []）\r\n","javax.crypto.interfaces.DHPrivateKey.serialVersionUID":"javax.crypto.interfaces.dhprivatekey.serialversionuid\r\n","java.util.concurrent.ScheduledThreadPoolExecutor.ScheduledThreadPoolExecutor(int, java.util.concurrent.RejectedExecutionHandler)":"java.util.concurrent.scheduledthreadpoolexecutor.scheduledthreadpoolexecutor（int，java.util.concurrent.rejectedexecutionhandler）\r\n","in case of a protocol or processing problem":"如果有协议或处理问题\r\n","java.util.zip.DataFormatException.DataFormatException(java.lang.String)":"java.util.zip.dataformatexception.dataformatexception（java.lang.string）\r\n","if the specified key cannot be used to initialize this\n             algorithm, or it is ":"如果指定的键不能用于初始化此\r\n             算法，或者是\r\n","Checks whether a character is a valid token character.":"检查字符是否是有效的令牌字符。\r\n","Formats a status line.":"格式化状态线。\r\n","javax.xml.xpath.XPathExpression.evaluate(java.lang.Object, javax.xml.namespace.QName)":"javax.xml.xpath.xpathexpression.evaluate（java.lang.object，javax.xml.namespace.qname）\r\n","For n == 0, the result is as for n < 0, except\n            trailing empty strings will not be returned. (Note that\n            the case where the input is itself an empty string is\n            special, as described above, and the limit parameter does\n            not apply there.)\n            ":"对于n == 0，结果是n <0，除了\r\n            落后的空弦将不会退回。 （注意\r\n            输入本身是一个空字符串的情况\r\n            如上所述，特殊和极限参数确实\r\n            不申请。）\r\n            \r\n","\r\n            Gets or sets the content to display.\r\n            ":"\r\n            获取或设置要显示的内容。\r\n            \r\n","v12.1":"v12.1\r\n"," was created from a\n   different document than the one that created this map.\n   ":" 是由\r\n   与创建此地图的文件不同。\r\n   \r\n"," object. The DOM user must\n   explicitly clone ":" 目的。 DOM用户必须\r\n   明确克隆\r\n","javax.xml.transform.dom.DOMResult.DOMResult(org.w3c.dom.Node, java.lang.String)":"javax.xml.transform.dom.domresult.domresult（org.w3c.dom..node，java.lang.string）\r\n","The node is a <code>CDATASection</code>.":"节点是<code> cdatasection </code>。\r\n","Fills input buffer with more data to decompress.":"填充输入缓冲区，并使用更多数据进行解压缩。\r\n","java.util.concurrent.SynchronousQueue.put(java.lang.Object)":"java.util.concurrent.synchronousqueue.put（java.lang.Object）\r\n","Get the System Identifier. -or- Set the systemId that may be used in association with the node.":"获取系统标识符。 - 或设置可以与节点关联的系统ID。\r\n","org.apache.http.params.HttpParams.setLongParameter(java.lang.String, long)":"org.apache.http.params.httpparams.setlongparameter（java.lang.string，long）\r\n","\r\n            Gets the line number of the script file on which the error occurred.\r\n            ":"\r\n            获取发生错误的脚本文件的行号。\r\n            \r\n","javax.net.ssl.SSLServerSocket.SSLServerSocket()":"javax.net.ssl.sslserversocket.sslserversocket（）\r\n","If this operation is supported but failed for some reason.\n":"如果支持此操作，但由于某种原因失败了。\r\n\r\n","org.xml.sax.ext.DeclHandler.elementDecl(java.lang.String, java.lang.String)":"org.xml.sax.ext.declhandler.elementdecl（java.lang.string，java.lang.string）\r\n","If the property is not supported, and is\n not qualified with a namespace.":"如果不支持该财产，并且是\r\n 不具备名称空间的资格。\r\n","org.xmlpull.v1.XmlSerializer.getPrefix(java.lang.String, boolean)":"org.xmlpull.v1.xmlSerializer.getPrefix（java.lang.string，boolean）\r\n","Acquires the given number of permits from this semaphore,\n            blocking until all are available,\n            or the thread is Thread#interrupt interrupted.":"从此信号量获取给定数量的许可证，\r\n            阻止直到所有可用，\r\n            否则线程是线程＃中断中断。\r\n","javax.xml.transform.dom.DOMSource.getSystemId()":"javax.xml.transform.dom.domsource.getSystemID（）\r\n","Constructor with name and value.":"具有名称和价值的构造函数。\r\n","Get the Namespace URI of this <code>QName</code>.":"获取此<code> qname </code>的名称空间URI。\r\n","\r\n            Holds ":"\r\n            持有\r\n","\r\n            Signals that the value for the specified field has changed.\r\n            ":"\r\n            信号表明指定字段的值已更改。\r\n            \r\n","java.util.function.Function":"java.util.function.function\r\n","javax.xml.transform.TransformerFactory.getAttribute(java.lang.String)":"javax.xml.transform.transformerfactory.getAttribute（java.lang.string）\r\n","Defines the API that wraps an ":"定义包裹的API\r\n","javax.net.ssl.TrustManagerFactory.getDefaultAlgorithm()":"javax.net.ssl.trustmanagerfactory.getDefaultAlgorithm（）\r\n","Compares this protocol version with another one.":"将此协议版本与另一个协议版本进行比较。\r\n","If the property is not supported.":"如果不支持该物业。\r\n"," \n            implementations.":" \r\n            实施。\r\n","Returns an enumeration of the ZIP file entries.":"返回ZIP文件条目的枚举。\r\n","javax.net.ssl.SSLSocket.setSSLParameters(javax.net.ssl.SSLParameters)":"javax.net.ssl.sslsocket.setssslparameters（javax.net.ssl.sslparameters）\r\n","Initializes this cipher with a key, a set of\n            algorithm parameters, and a source of randomness.":"用键初始化此密码，一组\r\n            算法参数和随机性来源。\r\n","java.util.concurrent.locks.ReentrantLock.hasQueuedThread(java.lang.Thread)":"java.util.concurrent.locks.reentrantlock.hasqueuedthread（java.lang.thread）\r\n","s of the\n            Server Name Indication (SNI) parameter, or null if none has been set. -or- Sets the ":"s\r\n            服务器名称指示（SNI）参数，如果没有设置，则为null。 - 或设置\r\n"," if the meta key was down when the event was fired. ":" 如果元件开除时，元密钥会降低。\r\n"," by copying all values from the given\n            collection.":" 通过复制给定的所有值\r\n            收藏。\r\n","javax.crypto.IllegalBlockSizeException.IllegalBlockSizeException(java.lang.String)":"javax.crypto.illegalblocksizeexception.illegalblocksizeexception（java.lang.string）\r\n","Authentication scheme registry that can be used to obtain the corresponding\n authentication scheme implementation for a given type of authorization challenge.":"可用于获得相应的身份验证方案注册表\r\n 给定类型的授权挑战的身份验证方案实施。\r\n","\r\n            Used to select a default scheme for the current request that authentication handlers should forward all authentication operations to\r\n            by default. The default forwarding logic will check the most specific ForwardAuthenticate/Challenge/Forbid/SignIn/SignOut\r\n            setting first, followed by checking the ForwardDefaultSelector, followed by ForwardDefault. The first non null result\r\n            will be used as the target scheme to forward to.\r\n            ":"\r\n            用于为当前请求选择默认方案，身份验证处理程序应将所有身份验证操作转发到\r\n            默认。默认转发逻辑将检查最具体的远期义务/挑战/禁止/signin/签名\r\n            首先设置，然后检查forwardDefaultSelector，然后检查forwardDefault。第一个非零结果\r\n            将被用作前进的目标方案。\r\n            \r\n","org.xml.sax.helpers.XMLReaderAdapter.setEntityResolver(org.xml.sax.EntityResolver)":"org.xml.sax.helpers.xmlreaderadapter.setentityResolver（org.xml.sax.entityResolver）\r\n","Creates a new AtomicLong with initial value ":"创建一个具有初始价值的新原子\r\n","javax.sql.RowSet.setObject(int, java.lang.Object)":"javax.sql.Rowset.setObject（int，java.lang.object）\r\n","Input buffer for decompression.":"输入缓冲液进行减压。\r\n","java.util.function.LongUnaryOperator":"java.util.function.longunaryoperator\r\n","Releases the write lock if it is held, without requiring a\n            stamp value.":"如果保留写锁，则会释放写锁\r\n            邮票价值。\r\n","Allow the application to resolve external entities.":"允许应用程序解决外部实体。\r\n","org.w3c.dom.Element.setIdAttributeNode(org.w3c.dom.Attr, boolean)":"org.w3c.dom.element.setidattributenode（org.w3c.dom.attr，boolean）\r\n","if no usable cipher can be found to decrypt the encrypted\n             data.":"如果找不到可用的密码来解密加密\r\n             数据。\r\n","Sets the secure attribute of the cookie.":"设置cookie的安全属性。\r\n","java.util.concurrent.locks.ReentrantReadWriteLock.getReadLockCount()":"java.util.concurrent.locks.reentrantreadwritelock.getReadlockcount（）\r\n","Closes idle connections in the pool.":"关闭池中的空闲连接。\r\n","\r\n            Finalizes an encoding of a string.\r\n            ":"\r\n            最终确定字符串的编码。\r\n            \r\n","org.xml.sax.helpers.AttributeListImpl.setAttributeList(org.xml.sax.AttributeList)":"org.xml.sax.helpers.attributelistimpl.setattributelist（org.xml.sax.attributelist）\r\n","java.util.concurrent.locks.StampedLock.isWriteLocked()":"java.util.concurrent.locks.stampedlock.iswritelocked（）\r\n"," is not available or cannot\n     be instantiated.":" 不可用或不能\r\n     实例化。\r\n","\r\n            Reads a string, whose length is determined by a header of one of these types:\r\n            ":"\r\n            读取一个字符串，其长度由这些类型之一的标题确定：\r\n            \r\n","org.xml.sax.helpers.DefaultHandler.processingInstruction(java.lang.String, java.lang.String)":"org.xml.sax.helpers.defaulthandler.processinginstruction（java.lang.string，java.lang.string）\r\n","java.util.logging.Level.INFO":"java.util.logging.level.info\r\n","org.json.JSONObject.getBoolean(java.lang.String)":"org.json.jsonobject.getboolean（java.lang.string）\r\n","\r\n            Indicates that the preceding attribute represents an event handler\r\n            whose execution updates the attribute with name ":"\r\n            表示前面属性代表事件处理程序\r\n            执行的执行更新了名称的属性\r\n","java.util.concurrent.ExecutorService.invokeAny(java.util.Collection)":"java.util.concurrent.executorservice.invokeany（java.util.collection）\r\n","java.util.concurrent.locks.Condition.await()":"java.util.concurrent.locks.condition.await（）\r\n","Java-specific class for dynamically loading SAX parsers.":"用于动态加载SAX解析器的Java特定类。\r\n","Constructs an <code>EncryptedPrivateKeyInfo</code> from the\n            encryption algorithm parameters and the encrypted data.":"构建<code>从\r\n            加密算法参数和加密数据。\r\n","If the rhs parameter is null.":"如果RHS参数为null。\r\n","javax.xml.parsers.DocumentBuilderFactory":"javax.xml.parsers.documentbuilderfactory\r\n","Write an attribute.":"写一个属性。\r\n","Creates a new HttpException with the specified detail message and cause.":"使用指定的详细消息和原因创建新的HTTPException。\r\n","java.util.stream.Collectors.toMap(java.util.function.Function, java.util.function.Function, java.util.function.BinaryOperator, java.util.function.Supplier)":"java.util.stream.collectors.tomap（java.util.function.function.function，java.util.function.function.function.function，java.util.function.binaryoperator，java.util.util.function.supplier）\r\n","java.util.function.DoubleToLongFunction":"java.util.function.doubletolongfunction\r\n","-valued operand that produces\n            a ":" - 产生的可价值操作数\r\n            一个\r\n","javax.sql.RowSet.setNClob(java.lang.String, java.sql.NClob)":"javax.sql.Rowset.setnClob（java.lang.string，java.sql.nclob）\r\n","\r\n            code_verifier defined in https://tools.ietf.org/html/rfc7636\r\n            ":"\r\n            https://tools.ietf.org/html/rfc7636中定义的code_verifier\r\n            \r\n","Returns a <code>TrustManagerFactory</code> object that acts as a\n            factory for trust managers.":"返回<code> TrustManagerFactory </code>对象充当\r\n            信托经理的工厂。\r\n","javax.crypto.ExemptionMechanismSpi.engineInit(java.security.Key)":"Javax.Crypto.ExemptionMechanismspi.Engineinit（java.security.key）\r\n","Indicates whether or not the factory is configured to produce\n            parsers which converts CDATA nodes to Text nodes and appends it to\n            the adjacent (if any) Text node. -or- Specifies that the parser produced by this code will\n            convert CDATA nodes to Text nodes and append it to the\n            adjacent (if any) text node.":"指示工厂是否配置为生产\r\n            将CDATA节点转换为文本节点并将其附加到的解析器\r\n            相邻（如果有）文本节点。 - 或 - 指定该代码产生的解析器将\r\n            将CDATA节点转换为文本节点，并将其附加到\r\n            相邻（如果有）文本节点。\r\n","if the name of the resource bundle cannot be found.":"如果找不到资源捆绑包的名称。\r\n","If the File object is null.":"如果文件对象为null。\r\n","javax.crypto.SecretKeyFactory.getInstance(java.lang.String)":"javax.crypto.secretkeyfactory.getinstance（java.lang.string）\r\n","Creates a new instance of a SAXParser using the currently\n            configured factory parameters.":"使用当前\r\n            配置的出厂参数。\r\n","\n             parameter is not supported.":"\r\n             不支持参数。\r\n","\r\n            Adds the specified convention to the builder. Conventions are used to customize ":"\r\n            将指定的约定添加到构建器中。惯例用于自定义\r\n","java.util.zip.CRC32.reset()":"java.util.zip.crc32.Reset（）\r\n","Removes the specified preference change listener, so it no longer\n            receives preference change events.":"删除指定的偏好更改侦听器，因此不再\r\n            接收偏好变更事件。\r\n","Returns the public value, <code>y</code>.":"返回公共价值，<code> y </code>。\r\n","Constructor with name, value and parameters.":"具有名称，值和参数的构造函数。\r\n","java.util.logging.Logger.Logger(java.lang.String, java.lang.String)":"java.util.logging.logger.logger（java.lang.string，java.lang.string）\r\n","javax.xml.validation.Schema.newValidator()":"javax.xml.validation.schema.newvalidator（）\r\n","LogManager":"logmanager\r\n","502 Bad Gateway":"502错误的网关\r\n","java.util.concurrent.locks.ReentrantReadWriteLock.getQueuedWriterThreads()":"java.util.concurrent.locks.reentrantreadwritelock.getQueuedWriterThreads（）\r\n","java.util.zip.CRC32":"java.util.zip.crc32\r\n","javax.xml.parsers.SAXParser.getProperty(java.lang.String)":"javax.xml.parsers.saxparser.getProperty（java.lang.string）\r\n","This class implements an output stream filter for writing files in the\n            ZIP file format.":"该类实现输出流滤波器，用于在\r\n            zip文件格式。\r\n","java.util.regex.MatchResult.end(int)":"java.util.regex.matchresult.end（int）\r\n",") into distinct objects to\n            give the effect of having multiple wait-sets per object, by\n            combining them with the use of arbitrary ":"）变成不同的对象\r\n            给出每个对象有多个等待集的效果\r\n            将它们与使用任意的使用结合\r\n","Provides directions on establishing a route.":"提供建立路线的指示。\r\n","Request interceptor that adds default request headers.":"请求拦截器添加默认请求标头。\r\n","org.xml.sax.helpers.LocatorImpl.getSystemId()":"org.xml.sax.helpers.locatorimpl.getSystemID（）\r\n","Construct a StreamSource from a byte stream.":"从字节流构造流源。\r\n"," of this node is ":" 这个节点是\r\n","Returns the name type of this server name.":"返回此服务器名称的名称类型。\r\n","if a streaming subclass does not override this method\n":"如果流子类未覆盖此方法\r\n\r\n","javax.xml.transform.OutputKeys.DOCTYPE_PUBLIC":"javax.xml.transform.outputkeys.doctype_public\r\n","java.util.concurrent.Future":"java.util.concurrent.future\r\n","Returns <code>true</code> when an attribute with a given local name and\n            namespace URI is specified on this element or has a default value,\n            <code>false</code> otherwise.":"返回<code> true </code>当带有给定本地名称的属性和\r\n            名称空间URI在此元素上指定或具有默认值，\r\n            <code> false </code>否则。\r\n","Represents a function that accepts a double-valued argument and produces a\n            long-valued result.":"表示接受双重值参数并产生一个函数\r\n            长期可评估的结果。\r\n","The last child of this node.":"这个节点的最后一个孩子。\r\n"," is aborted.":" 流产。\r\n","org.xml.sax.HandlerBase.notationDecl(java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.handlerbase.notationdecl（java.lang.string，java.lang.string，java.lang.string）\r\n","Sets the compression level to the specified value.":"将压缩级别设置为指定值。\r\n","org.apache.http.params.CoreConnectionPNames.SO_LINGER":"org.apache.http.params.coreconnectionpnames.so_linger\r\n","java.util.function.DoubleConsumer.andThen(java.util.function.DoubleConsumer)":"java.util.function.doubleconsumer.andthen（java.util.function.doubleconsumer）\r\n"," is called,\r\n            previously allocated memory is used if it is large enough to satisfy the length demand.\r\n            If new memory must be allocated, the argument to one of these methods typically dictate\r\n            the length of array to allocate. When the caller uses very small values (just enough for its immediate need)\r\n            but the high level scenario can predict that a large amount of memory will be ultimately required,\r\n            it can be advisable to set this property to a value such that just a few larger arrays are allocated\r\n            instead of many small ones.\r\n            ":" 叫做，\r\n            以前分配的内存是否足够大以满足长度需求。\r\n            如果必须分配新的内存，则对其中一种方法的参数通常决定\r\n            分配的阵列长度。当呼叫者使用非常小的值时（足以达到其即时需要）\r\n            但是，高级场景可以预测最终需要大量内存，\r\n            建议将此属性设置为一个值，以便分配几个较大的数组\r\n            而不是许多小的。\r\n            \r\n","\r\n            The plane angle (in degrees, in the range of -90 to 90) between the X-Z plane\r\n            and the plane containing both the transducer (e.g. pen stylus) axis and the X axis.\r\n            ":"\r\n            X -Z平面之间的平面角（以-90至90的范围为-90至90）\r\n            以及包含传感器（例如笔手写笔）轴和X轴的平面。\r\n            \r\n","Creates a new output stream with the specified compressor,\n            buffer size and flush mode.":"使用指定的压缩机创建一个新的输出流\r\n            缓冲尺寸和冲洗模式。\r\n"," whose values are the result of the downstream\n            reduction.":" 其价值是下游的结果\r\n            减少。\r\n","javax.sql.RowSetMetaData.setSchemaName(int, java.lang.String)":"javax.sql.RowsetMetadata.SetscheManame（int，java.lang.string）\r\n","if the specified key cannot be used to initialize this\n             algorithm, or it is null.":"如果指定的键不能用于初始化此\r\n             算法，否则为空。\r\n","java.util.concurrent.atomic.AtomicReferenceArray.length()":"java.util.concurrent.atomic.atomicreferencearray.length（）\r\n","org.w3c.dom.ls.DOMImplementationLS.createLSSerializer()":"org.w3c.dom.ls.domimplementationls.createlsserializer（）\r\n","Constant indicating that the key to be unwrapped is a public key.":"不断表明要拆开的密钥是公共密钥。\r\n","Returns the last header with a specified name of this message.":"带有此消息的指定名称返回最后一个标头。\r\n","java.util.concurrent.atomic.AtomicReferenceArray.get(int)":"java.util.concurrent.atomic.atomicreferencearray.get（int）\r\n",", assigning\r\n            an identifier that is unique within the scope of the ":"，分配\r\n            在范围内独特的标识符\r\n","java.util.logging.Formatter":"java.util.logging.formatter\r\n","Returns the name of the current element as set by startTag().":"返回startTag（）设置的当前元素的名称。\r\n","java.util.prefs.AbstractPreferences.AbstractPreferences(java.util.prefs.AbstractPreferences, java.lang.String)":"java.util.prefs.abstractpreferences.abstractpreferences（java.util.prefs.abstractpreferences，java.lang.string）\r\n","java.util.concurrent.ThreadLocalRandom.nextLong(long, long)":"java.util.concurrent.threadlocalrandom.nextlong（长，长）\r\n","java.util.concurrent.TimeUnit.toDays(long)":"java.util.concurrent.timeunit.todays（long）\r\n","if the specified socket factory is ":"如果指定的插座工厂是\r\n","Constructs a ShortBufferException with no detail\n            message.":"构建一个矮人感受，没有细节\r\n            信息。\r\n","Tells whether this entity depends on an underlying stream.":"告诉该实体是否取决于基础流。\r\n","if the calendar parameter is null.\n":"如果日历参数为null。\r\n\r\n"," is different from \"\" []\n   , or if the ":" 与“” []不同\r\n   ，或者如果\r\n","Checks that the specified date is within the certificate's\n            validity period.":"检查指定的日期是否在证书中\r\n            有效期。\r\n","javax.crypto.Mac.getInstance(java.lang.String, java.lang.String)":"javax.crypto.mac.getinstance（java.lang.string，java.lang.string）\r\n","If the feature\n            can't be assigned or retrieved.":"如果功能\r\n            无法分配或检索。\r\n","FINER indicates a fairly detailed tracing message.":"Finer表示一条相当详细的跟踪消息。\r\n","An entity whose content is retrieved from a file.":"从文件中检索内容的实体。\r\n"," with a detail message.":" 带有详细信息。\r\n","java.util.concurrent.Semaphore.isFair()":"java.util.concurrent.semaphore.isfair（）\r\n","java.util.concurrent.CompletionStage.applyToEither(java.util.concurrent.CompletionStage, java.util.function.Function)":"java.util.concurrent.completionstage.applytoeither（java.util.concurrent.completionstage，java.util.function.function.function）\r\n","\r\n            Gets or sets the type used to secure data.\r\n            ":"\r\n            获取或设置用于保护数据的类型。\r\n            \r\n","\r\n            Attempts authorization for a policy using ":"\r\n            尝试使用\r\n"," expires, we'll dispose off the host.\r\n            \r\n             The alternate case is when the disconnect was transient, e.g. due to a network failure, and the client attempts to reconnect.\r\n             We'll attempt to connect it back to the host and the preserved server state, when available. In this event, we do the opposite of\r\n             what we did during disconnect - transition the host from ":" 到期，我们将从主持人处置。\r\n            \r\n             替代情况是何时断开连接是瞬态的，例如由于网络故障，客户试图重新连接。\r\n             如果可用，我们将尝试将其连接回主机和保存的服务器状态。在这种情况下，我们做的相反\r\n             我们在断开连接期间所做的 - 从主机过渡\r\n","Transforms a JAR file to or from a packed stream in Pack200 format.":"将JAR文件转换为Pack200格式的包装流或从包装的流。\r\n","iv":"iv\r\n","if the specified resource bundle can not be loaded.\n":"如果无法加载指定的资源捆绑包。\r\n\r\n","javax.crypto.Cipher.getInstance(java.lang.String, java.lang.String)":"javax.crypto.cipher.getinstance（java.lang.string，java.lang.string）\r\n","flush":"冲洗\r\n","org.w3c.dom.Node.DOCUMENT_TYPE_NODE":"org.w3c.dom.node.document_type_node\r\n"," can be obtained or the request can be\n aborted.":" 可以获得或请求是\r\n 中止。\r\n"," cannot be unwrapped to a key of\n             type ":" 不能拆开的钥匙\r\n             类型\r\n","\r\n            The value to be provided.\r\n            ":"\r\n            提供的值。\r\n            \r\n","This class is used to represent a ZIP file entry.":"此类用于表示zip文件条目。\r\n","javax.sql.RowSet.setTime(int, java.sql.Time, java.util.Calendar)":"javax.sql.Rowset.setTime（int，java.sql.time，java.util.calendar）\r\n","javax.xml.parsers.DocumentBuilder.isXIncludeAware()":"javax.xml.parsers.documentbuilder.isxincludeaware（）\r\n","Sets input data for decompression.":"设置输入数据以进行减压。\r\n","Returns the SSLParameters in effect for this SSLSocket. -or- Applies SSLParameters to this socket.":"返回此SSLSLSOCKET的sslParameters。 - 或 - 将SSLParameters应用于此插座。\r\n","javax.xml.transform.TransformerFactory.TransformerFactory()":"javax.xml.transform.transformerfactory.transformerfactory（）\r\n","java.util.function.ToLongFunction":"java.util.function.tolongfunction\r\n","org.xmlpull.v1.XmlSerializer.attribute(java.lang.String, java.lang.String, java.lang.String)":"org.xmlpull.v1.xmlserializer.attribute（java.lang.string，java.lang.string，java.lang.string）\r\n","The first child of this node.":"这个节点的第一个孩子。\r\n","javax.security.auth.Subject.doAsPrivileged(javax.security.auth.Subject, java.security.PrivilegedExceptionAction, java.security.AccessControlContext)":"javax.security.auth.subject.doasprivileged（javax.security.auth.auth.subject，java.security.privilegedexceptionActionAction，java.security.security.accessControlcontext）\r\n"," associated with the component.\r\n            ":" 与组件关联。\r\n            \r\n",". Parameters that do not have a corresponding value\r\n            will be unchanged.\r\n            ":"。没有相应值的参数\r\n            会不变。\r\n            \r\n","Returns the server session context, which represents the set of\n            SSL sessions available for use during the handshake phase of\n            server-side SSL sockets.":"返回服务器会话上下文，该上下文表示\r\n            SSL会话可在握手阶段使用\r\n            服务器端SSL插座。\r\n","Returns a Collection view of the attribute values contained in this Map.":"返回此地图中包含的属性值的集合视图。\r\n","if the mapping doesn't exist or cannot be coerced\n     to a long.\n":"如果映射不存在或无法强制\r\n     长时间。\r\n\r\n"," that describes the current user.\r\n            ":" 描述了当前用户。\r\n            \r\n","javax.net.ssl.HttpsURLConnection.HttpsURLConnection(java.net.URL)":"javax.net.ssl.httpsurlconnection.httpsurlconnection（java.net.url）\r\n","Gets the maximum number of rows for this ":"获取最多的行数\r\n","org.xml.sax.helpers.XMLReaderAdapter.XMLReaderAdapter(org.xml.sax.XMLReader)":"org.xml.sax.helpers.xmlreaderadapter.xmlreaderadapter（org.xml.sax.xmlreader）\r\n","Actually formats a status line.":"实际上格式化状态线。\r\n"," to the path ":" 到达路径\r\n","Removes all request interceptors from this list.":"从此列表中删除所有请求拦截器。\r\n","isUserNode":"Isusernode\r\n"," nodes to re-use them in other\n   elements.\n   ":" 节点可以重复使用其他\r\n   元素。\r\n   \r\n","javax.sql.ConnectionEvent.getSQLException()":"javax.sql.connectionevent.getSqlexception（）\r\n","java.util.function.ObjDoubleConsumer":"java.util.function.objdoubleconsumer\r\n"," configuration properties.":" 配置属性。\r\n","java.util.logging.LogRecord.setThrown(java.lang.Throwable)":"java.util.logging.logrecord.setthrown（java.lang.throwable）\r\n","The public identifier associated with the entity if specified, and\n ":"如果指定了与实体关联的公共标识符，以及\r\n \r\n"," is not null and not valid.":" 不是零，也不有效。\r\n","When the\n            parent recognizes the property name but\n            cannot determine its value at this time.\n":"当。。。的时候\r\n            父母识别属性名称，但是\r\n            目前无法确定其价值。\r\n\r\n","Create a new <code>DatatypeConfigurationException</code> with\n            the specified detail message and cause.":"使用新的<code> DatatyPeconFigurationException </code>使用\r\n            指定的详细信息和原因。\r\n","org.xml.sax.HandlerBase":"org.xml.sax.handlerbase\r\n","if the string representation of the distinguished name is\n             incorrect\n":"如果杰出名称的字符串表示为\r\n             不正确\r\n\r\n","Signals that a Zip exception of some sort has occurred.":"信号表明已经发生了某种形式的拉链例外。\r\n","java.util.concurrent.LinkedBlockingQueue.offer(java.lang.Object)":"java.util.concurrent.linkedblockingqueue.offer（java.lang.object）\r\n","\r\n            Gets the data used for authorization.\r\n            ":"\r\n            获取用于授权的数据。\r\n            \r\n","33":"33\r\n"," with the given initial\n            parameters and default thread factory and rejected execution handler.":" 给定的初始\r\n            参数和默认线程工厂以及拒绝执行处理程序。\r\n","Replaces the entry for a key only if currently mapped to some value.":"仅当当前映射到某个值时，才替换键的条目。\r\n","if this task cannot be\n accepted for execution":"如果这个任务不能是\r\n 接受执行\r\n","\r\n            Gets the name of the value attribute to be bound.\r\n            ":"\r\n            获取要绑定的值属性的名称。\r\n            \r\n","Wraps the given object if necessary.":"如有必要，请包裹给定的对象。\r\n","keep":"保持\r\n"," for every point of contact that is touching the surface and started on the element that is the target of the current event.\r\n            ":" 对于接触表面并启动的每个接触点，这是当前事件的目标。\r\n            \r\n","Represents a strategy to determine the content length based on the properties\n of an HTTP message.":"表示基于属性确定内容长度的策略\r\n HTTP消息。\r\n","Returns the protocol version this message is compatible with.":"返回协议版本此消息与。\r\n","\r\n            Provides notifications of unhandled exceptions that occur within the dispatcher.\r\n            ":"\r\n            提供有关调度员内发生的未经治疗例外的通知。\r\n            \r\n","Indicates that a tunnel to an intermediate proxy has been established.":"表明已经建立了中间代理的隧道。\r\n","java.util.logging.Logger.logp(java.util.logging.Level, java.lang.String, java.lang.String, java.util.function.Supplier)":"java.util.logging.logger.logp（java.util.logging.level，java.lang.string，java.lang.string，java.util.function.supplier）\r\n"," at this reader's current position.\r\n            The two readers may then be used independently without impacting each other.\r\n            ":" 在此读者的当前位置。\r\n            然后可以独立使用这两个读者而不会相互影响。\r\n            \r\n","Filter a fatal error event.":"过滤致命的错误事件。\r\n","protocols":"协议\r\n","The node contains the reference node.":"该节点包含参考节点。\r\n","javax.crypto.KeyGenerator.init(int)":"javax.crypto.keygenerator.init（int）\r\n","The value of this node, depending on its type; see the table above.":"该节点的值，具体取决于其类型；请参阅上表。\r\n","Queries whether the given ConditionObject\n            uses this synchronizer as its lock.":"查询是否给定条件对象\r\n            使用此同步器作为锁。\r\n","Gets the custom mapping of SQL User-Defined Types (UDTs) and Java classes\n for this ":"获取SQL用户定义类型（UDTS）和Java类的自定义映射\r\n 为了这\r\n","java.util.logging.Logger.finest(java.util.function.Supplier)":"java.util.logging.logger.finest（java.util.function.supplier）\r\n","username":"用户名\r\n"," determines if the browser should allow the cookie to be attached to same-site or cross-site requests.\r\n            The default is Lax, which means the cookie is only allowed to be attached to cross-site requests using safe HTTP methods and same-site requests.\r\n            ":" 确定浏览器是否应允许将cookie连接到同一站点或跨站点请求。\r\n            默认值是LAX，这意味着仅允许使用安全的HTTP方法和相同站点请求将cookie附加到跨站点请求上。\r\n            \r\n"," directly\r\n            and declare their own parameter named ":" 直接地\r\n            并声明自己的参数\r\n","DOCUMENT_TYPE":"document_type\r\n","Returns a copy of the SSLParameters indicating the default\n            settings for this SSL context.":"返回SSLPARAMETER的副本，指示默认值\r\n            此SSL上下文的设置。\r\n","java.util.prefs.Preferences.putDouble(java.lang.String, double)":"java.util.prefs.preferences.putdouble（java.lang.string，double）\r\n","SAXParserFactory":"saxparserfactory\r\n","\r\n            Gets the total number of bytes written with this writer.\r\n            ":"\r\n            获取与该作者编写的字节总数。\r\n            \r\n","javax.xml.xpath.XPathFactory":"javax.xml.xpath.xpathFactory\r\n","java.util.concurrent.RecursiveTask.exec()":"java.util.concurrent.recursivetask.exec（）\r\n","Returns the local name of the specified attribute\n            if namespaces are enabled or just attribute name if namespaces are disabled.":"返回指定属性的本地名称\r\n            如果已启用名称空间或仅属于名称，则如果已禁用了名称空间。\r\n","if there is no default provider":"如果没有默认提供商\r\n","LSParser.busy":"lsparser.busy\r\n","\r\n            Checks if a user meets a specific set of requirements for the specified resource\r\n            ":"\r\n            检查用户是否符合指定资源的一组特定要求\r\n            \r\n","NodeList":"Nodelist\r\n","javax.crypto.SecretKeyFactory.generateSecret(java.security.spec.KeySpec)":"javax.crypto.secretkeyfactory.generatesecret（java.security.spec.keyspec）\r\n","java.util.prefs.Preferences.name()":"java.util.prefs.preferences.name（）\r\n","Applies this function to the given argument.":"将此函数应用于给定的参数。\r\n","If any IO errors occur.":"如果发生任何IO错误。\r\n"," after a widening\n            primitive conversion.":" 拓宽后\r\n            原始转换。\r\n","java.util.jar.Attributes.get(java.lang.Object)":"java.util.jar.attributes.get（java.lang.Object）\r\n","Sets the element at position ":"将元素设置为位置\r\n","java.util.function.ToIntFunction":"java.util.function.tointfunction\r\n","Resets variables maintaining the sum to zero.":"重置变量将总和保持在零。\r\n","Retrieves the value of the parameter from the local collection and, if the \n parameter is not set locally, delegates its resolution to the default \n collection.":"从本地集合中检索参数的值，如果\r\n 参数未在本地设置，将其分辨率委派给默认值\r\n 收藏。\r\n","\n            using the currently configured parameters.":"\r\n            使用当前配置的参数。\r\n","javax.net.ssl.SSLContext.getSocketFactory()":"javax.net.ssl.sslcontext.getSocketFactory（）\r\n","javax.net.ssl.SSLContext.getInstance(java.lang.String, java.security.Provider)":"javax.net.ssl.sslcontext.getinstance（java.lang.string，java.security.provider）\r\n","java.util.stream.BaseStream.iterator()":"java.util.stream.basestream.iterator（）\r\n","java.util.concurrent.atomic.AtomicReference.AtomicReference(java.lang.Object)":"java.util.concurrent.atomic.atomicreference.atomicreference（java.lang.object）\r\n","Create a new adapter.":"创建一个新的适配器。\r\n"," if it is\n unspecified.":" 如果是\r\n 未指定。\r\n","java.util.function.DoubleSupplier":"java.util.function.doublesupplier\r\n","\r\n            Used to provide authentication.\r\n            ":"\r\n            用于提供身份验证。\r\n            \r\n","SEVERITY_FATAL_ERROR":"严重性_FATAL_ERROR\r\n","AtomicStampedReference":"AtomicStampedReference\r\n","if there is no remedy\n":"如果没有补救措施\r\n\r\n","If an error occurs closing the entry.\n":"如果发生错误关闭条目。\r\n\r\n","Returns the main Attributes for the Manifest.":"返回清单的主要属性。\r\n","java.util.concurrent.LinkedBlockingDeque.LinkedBlockingDeque()":"java.util.concurrent.linkedblockingdeque.linkedblockingdeque（）\r\n"," since the last call to ":" 自上次打电话以来\r\n","Returns a new CompletionStage that, when either this or the\n            other given stage complete normally, is executed using the\n            supplied executor, with the corresponding result as argument to\n            the supplied function.":"返回一个新的完整舞台，当\r\n            其他给定的阶段正常完成，使用\r\n            提供的执行人，将相应的结果作为参数\r\n            提供的功能。\r\n","java.util.function.IntToLongFunction.applyAsLong(int)":"java.util.function.inttolongfunction.applyaslong（int）\r\n","java.util.concurrent.atomic.DoubleAccumulator.floatValue()":"java.util.concurrent.atomic.doubleaeaccumulator.floatvalue（）\r\n","java.util.concurrent.CompletionStage.thenCompose(java.util.function.Function)":"java.util.concurrent.completionstage.thencompose（java.util.function.function.function）\r\n"," is  0xFFFFFFFFL.\n":" 是0xfffffffl。\r\n\r\n","javax.crypto.Mac":"javax.crypto.mac\r\n"," (HTTP/1.":" （http/1。\r\n","org.xmlpull.v1.XmlPullParser.getAttributeNamespace(int)":"org.xmlpull.v1.xmlpullparser.getAttributeNamespace（int）\r\n","javax.xml.XMLConstants.NULL_NS_URI":"javax.xml.xmlconstants.null_ns_uri\r\n","javax.crypto.spec.DHGenParameterSpec.getPrimeSize()":"javax.crypto.spec.dhgenparameterspec.getprimesize（）\r\n","Represents a status line as returned from a HTTP server.":"表示从HTTP服务器返回的状态行。\r\n","Return the current DTD handler. -or- Set the DTD handler.":"返回当前的DTD处理程序。 - 或设置DTD处理程序。\r\n"," if this node did not exist in the\n            backing store prior to the creation of this object.":" 如果此节点不存在\r\n            在创建此对象之前备份商店。\r\n","org.apache.http.params.CoreConnectionPNames":"org.apache.http.params.coreconnectionpnames\r\n","-producing\n            mapping function to each input element, and returns summary statistics\n            for the resulting values.":" - 生产\r\n            将功能映射到每个输入元素，并返回摘要统计信息\r\n            对于结果值。\r\n","org.xml.sax.ContentHandler.skippedEntity(java.lang.String)":"org.xml.sax.contenthandler.skippingentity（java.lang.string）\r\n","Returns the remaining delay associated with this object, in the\n            given time unit.":"返回与此对象关联的剩余延迟\r\n            给定时间单元。\r\n","Finish writing.":"完成写作。\r\n","getLong":"Getlong\r\n","Return the saved system identifier. -or- Set the system identifier for this locator.":"返回保存的系统标识符。 - 或 - 为此定位器设置系统标识符。\r\n","javax.xml.transform.TransformerFactoryConfigurationError.getException()":"javax.xml.transform.transformerfactoryconfigurationerror.getException（）\r\n","Filter a processing instruction event.":"过滤处理指令事件。\r\n"," doesn't exist or\n     cannot be coerced to a double.\n":" 不存在或\r\n     无法强迫双重。\r\n\r\n"," if the lock is currently held exclusively.":" 如果锁当前仅保留。\r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            to the given Java <code>double</code> value.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            对于给定的Java <code> double </code>值。\r\n","javax.crypto.Cipher.PUBLIC_KEY":"javax.crypto.cipher.public_key\r\n","Returns the SSLSession into which the listener is being bound or\n            from which the listener is being unbound.":"返回听众被束缚或\r\n            听众从中无界。\r\n","org.w3c.dom.Node.insertBefore(org.w3c.dom.Node, org.w3c.dom.Node)":"org.w3c.dom.node.insertbefore（org.w3c.dom.node，org.w3c.dom.node）\r\n","\r\n            Gets the access token type provided by the authentication service.\r\n            ":"\r\n            获取身份验证服务提供的访问令牌类型。\r\n            \r\n","\r\n            Implements the interface method by invoking the related delegate method.\r\n            ":"\r\n            通过调用相关委托方法来实现接口方法。\r\n            \r\n","\r\n            Gets or sets the minimum length for any array allocated as a segment in the sequence.\r\n            Any non-positive value allows the pool to determine the length of the array.\r\n            ":"\r\n            获取或设置序列中分配为段的任何阵列的最小长度。\r\n            任何非阳性值都允许池确定阵列的长度。\r\n            \r\n","Returns a new CompletionStage with the same result or exception as\n            this stage, that executes the given action when this stage completes.":"返回一个新的完整舞台，其结果或异常\r\n            此阶段，该阶段完成后执行给定的动作。\r\n","standalone = \"yes\" | \"no\".":"独立=“是” | “不”。\r\n","Thrown when a problem with configuration with the Parser Factories\n            exists.":"当与解析器工厂的配置问题时抛出\r\n            存在。\r\n","DOMConfiguration":"domconfiguration\r\n","Zero-argument constructor.":"零条件构造函数。\r\n","java.util.concurrent.atomic.AtomicReferenceArray.getAndAccumulate(int, java.lang.Object, java.util.function.BinaryOperator)":"java.util.concurrent.atomic.atomicreferencearray.getandaccumulate（int，java.lang.object，java.util.function.binarecorter）\r\n","The 'chunked' flag.":"“大块”的旗帜。\r\n","An unbounded BlockingQueue blocking queue that uses\n            the same ordering rules as class ":"使用的无界阻塞封锁队列使用\r\n            与课程相同的订购规则\r\n","Returns whether server-mode connections will be configured to require\n client authentication.":"返回服务器模式连接是否要配置为需要\r\n 客户端认证。\r\n","java.util.prefs.AbstractPreferences.node(java.lang.String)":"java.util.prefs.abstractpreferences.node（java.lang.string）\r\n","\r\n            Set to ":"\r\n            调成\r\n","\r\n            Gets the number of elements that are committed in this segment.\r\n            ":"\r\n            获取此细分市场中所做的元素的数量。\r\n            \r\n","form":"形式\r\n","The name of the processing instruction that is sent\n            if the result tree enables output escaping at some point after having\n            received a PI_DISABLE_OUTPUT_ESCAPING processing instruction.":"发送的处理指令的名称\r\n            如果结果树启用了在有一定时刻的某个时候输出\r\n            收到PI_DISABLE_OUTPUT_ESCAPING处理指令。\r\n","\r\n            Gets the claims-principal with authenticated user identities.\r\n            ":"\r\n            获取具有认证的用户身份的索赔原理。\r\n            \r\n","\r\n            The X coordinate of the mouse pointer in local (DOM content) coordinates.\r\n            ":"\r\n            鼠标指针的X坐标在局部（DOM含量）坐标中。\r\n            \r\n","org.xml.sax.ext.LexicalHandler.startEntity(java.lang.String)":"org.xml.sax.ext.lexicalhandler.startentity（java.lang.string）\r\n","\r\n            Gets the underlying buffer.\r\n            ":"获取基础缓冲区。\r\n            \r\n"," if synchronization is held exclusively with\n            respect to the current (calling) thread.":"如果仅与\r\n            尊重当前（调用）线程。\r\n","org.json.JSONTokener.nextClean()":"org.json.jsontokener.nextclean（）\r\n","javax.xml.parsers.DocumentBuilder.DocumentBuilder()":"javax.xml.parsers.documentBuilder.documentBuilder（）\r\n","if one of the protocol version names is not supported, or if\n             ":"如果不支持协议版本之一，或者\r\n             \r\n","\r\n             Gets the current validation messages for the specified field.\r\n            \r\n             This method does not perform validation itself. It only returns messages determined by previous validation actions.\r\n             ":"\r\n             获取指定字段的当前验证消息。\r\n            \r\n             此方法不会执行验证本身。它仅返回由以前的验证操作确定的消息。\r\n             \r\n","javax.crypto.KeyGeneratorSpi":"javax.crypto.keygeneratorspi\r\n","javax.crypto.spec.DESedeKeySpec":"javax.crypto.spec.desedekeyspec\r\n","\r\n            Gets the value to display in a debugger datatip.\r\n            ":"\r\n            获取要在调试器DataTip中显示的值。\r\n            \r\n"," if available":" 如果可供使用的话\r\n","Returns the state object associated with this connection.":"返回与此连接关联的状态对象。\r\n","Retrieves the <code>SQLException</code> for this\n            <code>ConnectionEvent</code> object.":"为此检索<code> sqlexception </code>\r\n            <code> ConnectionEvent </code>对象。\r\n","java.util.stream.Collectors.averagingDouble(java.util.function.ToDoubleFunction)":"java.util.stream.collectors.averagingdouble（java.util.function.todoublefunction）\r\n","org.xml.sax.helpers.XMLFilterImpl.endElement(java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.helpers.xmlfilterimpl.endelement（java.lang.string，java.lang.string，java.lang.string）\r\n","percentage":"百分比\r\n","if this zip file has been closed.\n":"如果该邮政编码已关闭。\r\n\r\n","Log a message, specifying source class and method,\n            with a single object parameter to the log message.":"记录一条消息，指定源类和方法，\r\n            使用单个对象参数到日志消息。\r\n","Returns the DES key material.":"返回DES关键材料。\r\n","javax.xml.datatype.DatatypeConstants.GMONTHDAY":"javax.xml.datatype.datatypeconstants.gmonthday\r\n","Returns the offset after the last character matched.":"在最后一个角色匹配之后返回偏移。\r\n","This feature determines whether namespace attributes are\n            exposed via the attribute access methods.":"此功能确定名称空间属性是否为\r\n            通过属性访问方法暴露。\r\n",", if the\n   specified prefix is \"xml\" and the ":"，如果是\r\n   指定的前缀为“ XML”，而\r\n","Returns Android's implementation of ":"返回Android的实施\r\n","java.util.concurrent.Phaser":"java.util.concurrent.phaser\r\n","\r\n            The Y coordinate of the touch point relative to the top of the document.\r\n            Unlike ":"触摸点相对于文档顶部的Y坐标。\r\n            与众不同\r\n","java.util.zip.ZipFile.ZipFile(java.io.File)":"java.util.zip.zipfile.zipfile（java.io.file）\r\n","java.util.zip.DeflaterInputStream.DeflaterInputStream(java.io.InputStream, java.util.zip.Deflater, int)":"java.util.zip.deflaterinputstream.deflaterinputstream（java.io.inputstream，java.util.zip.deflater，int）\r\n","Returns lookup interface for maximum number of connections allowed per route.":"返回查找接口，每条路线允许的最大连接次数。\r\n","\r\n            Initializes the events object, called once per request by ":"\r\n            初始化事件对象，每次请求一次调用\r\n","An entity that releases a ":"释放一个的实体\r\n"," (<b>SPI</b>)\n            for the <code>ExemptionMechanism</code> class.":" （<b> spi </b>）\r\n            对于<code>豁免机构</code>类。\r\n","javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendar(java.util.GregorianCalendar)":"javax.xml.datatype.datatypefactory.newxmlgregoriancalendar（java.util.gregoriancalendar）\r\n","java.util.concurrent.CompletionStage.applyToEitherAsync(java.util.concurrent.CompletionStage, java.util.function.Function, java.util.concurrent.Executor)":"java.util.concurrent.completionstage.applytoeitherasync（java.util.concurrent.completionstage，java.util.function.function.function，java.util.util.concurrent.executor）\r\n"," manages the lifetime of a ":" 管理一个\r\n","javax.crypto.Mac.update(byte[])":"javax.crypto.mac.update（byte []）\r\n","java.util.concurrent.RecursiveTask":"java.util.concurrent.recursivetask\r\n","The default class for creating sockets.":"用于创建插座的默认类。\r\n"," of this\n   node is different from \"\", if this node is an attribute and the specified prefix is \"xmlns\" and\n   the ":" 这个的\r\n   节点与“”不同，如果此节点是属性，并且指定的前缀为“ XMLNS”和\r\n   这\r\n","\r\n            Override this method to handle Forbid.\r\n            ":"\r\n            覆盖此方法来处理禁止的方法。\r\n            \r\n","Returns the current depth of the element.":"返回元素的当前深度。\r\n","java.util.function.BiFunction.apply(java.lang.Object, java.lang.Object)":"java.util.function.bifunction.apply（java.lang.object，java.lang.object）\r\n","\r\n            Gets the policy based on the ":"\r\n            根据\r\n","Creates and returns an updater for objects with the given field.":"创建并返回具有给定字段的对象的更新程序。\r\n","org.xml.sax.helpers.DefaultHandler":"org.xml.sax.helpers.defaulthandler\r\n","HIERARCHY_REQUEST_ERR: Raised if this node is of a type that does not\n   allow children of the type of the ":"errarchy_request_err：如果此节点为一种类型，则提出\r\n   允许孩子的类型\r\n"," to the request path base.\r\n            ":" 到请求路径基础。\r\n            \r\n","javax.net.ssl.X509TrustManager.checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String)":"javax.net.ssl.x509trustmanager.checkclienttrusted（java.security.cert.x509certificate []，java.lang.string）\r\n","javax.crypto.spec.DHParameterSpec.getL()":"javax.crypto.spec.dhparameterspec.getl（）\r\n","if the certificate cannot be created or initialized.\n":"如果不能创建或初始化证书。\r\n\r\n","Resets the MAC for further use, maintaining the secret key that the\n            MAC was initialized with.":"重置Mac以进一步使用，并保持秘密密钥\r\n            Mac被初始化。\r\n","org.json.JSONTokener.back()":"org.json.jsontokener.back（）\r\n","This class specifies an ":"此课程指定\r\n"," to\r\n             ":" 至\r\n             \r\n","Rename an existing node of type ":"重命名现有类型节点\r\n","User-Agent":"用户代理\r\n","Creates a new HttpException with a ":"用一个新的httpexception\r\n","If any item in the array is not recognized by this method.":"如果该方法未识别数组中的任何项目。\r\n","SSLSession":"sslsession\r\n"," node, or if\n   the node to append is one of this node's ancestors or this node\n   itself, or if this node is of type ":" 节点，或者\r\n   附加节点是该节点的祖先之一或该节点\r\n   本身，或该节点是类型的\r\n","\r\n            See ":"\r\n            看\r\n","Returns the name.":"返回名称。\r\n","java.util.concurrent.CompletionService.poll(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.completionservice.poll（long，java.util.concurrent.timeunit）\r\n","arity":"arity\r\n","Tells if the entity is capable to produce its data more than once.":"告诉实体是否能够多次产生其数据。\r\n","java.util.concurrent.atomic.AtomicReference.compareAndSet(java.lang.Object, java.lang.Object)":"java.util.concurrent.atomic.atomicreference.compareandset（java.lang.object，java.lang.object）\r\n","Specify the ":"指定\r\n","Constructs a SealedObject object from the passed-in SealedObject.":"从传递的密封对象构造一个密封对象。\r\n","javax.xml.transform.stream.StreamSource.getSystemId()":"javax.xml.transform.stream.streamsource.getSystemid（）\r\n","org.xml.sax.ext.Attributes2Impl.isSpecified(int)":"org.xml.sax.ext.attributes2impl.isspecified（int）\r\n","\r\n            A unique identifier for this Touch object.\r\n            A given touch point (say, by a finger) will have the same identifier for the duration of its movement around the surface.\r\n            This lets you ensure that you're tracking the same touch all the time.\r\n            ":"\r\n            这个触摸对象的唯一标识符。\r\n            给定的接触点（例如，用手指）将在其表面运动的持续时间内具有相同的标识符。\r\n            这使您可以确保一直在跟踪相同的触摸。\r\n            \r\n","A request interceptor that sets the Host header for HTTP/1.1 requests.":"请求拦截器设置HTTP/1.1请求的主机标头。\r\n","javax.xml.transform.dom.DOMResult":"javax.xml.transform.dom.domresult\r\n"," in a Server Name\n            Indication (SNI) extension.":" 在服务器名称中\r\n            指示（SNI）扩展。\r\n"," parameter itself is null or\n      any item in the array is null.":" 参数本身为null或\r\n      阵列中的任何项目均为空。\r\n","Returns a collection containing those threads that may be\n            waiting on the given condition associated with this lock.":"返回包含那些可能是的线程的集合\r\n            等待与此锁相关的给定条件。\r\n","cipher":"密码\r\n","\r\n            Use the ":"\r\n            使用\r\n","Creates a new output stream with the specified compressor and\n            buffer size.":"使用指定的压缩机和\r\n            缓冲区大小。\r\n","java.util.function.IntToLongFunction":"java.util.function.inttolongfunction\r\n","javax.security.auth.callback.UnsupportedCallbackException.getCallback()":"javax.security.auth.callback.unsupportedcallbackexception.getCallback（）\r\n","\r\n            The value for the Access-Control-Allow-Origin response header to allow all origins.\r\n            ":"\r\n            访问控制的值允许所有起源的值。\r\n            \r\n","\r\n            fields as CSS class names.\r\n            ":"\r\n            字段为CSS类名。\r\n            \r\n","javax.xml.validation.TypeInfoProvider":"Javax.xml.Validation.TypeinFoprovider\r\n","javax.crypto.Cipher.doFinal(byte[], int, int)":"javax.crypto.cipher.dofinal（byte []，int，int）\r\n","The node is an <code>Entity</code>.":"节点是<code>实体</code>。\r\n","FINE is a message level providing tracing information.":"罚款是提供跟踪信息的消息级别。\r\n","java.util.concurrent.atomic.AtomicInteger.get()":"java.util.concurrent.atomic.atomicinteger.get（）\r\n","\r\n            Adds support for SignOutAsync\r\n            ":"\r\n            添加了对签名的支持\r\n            \r\n","org.xml.sax.ext.Locator2":"org.xml.sax.ext.locator2\r\n","\r\n            Gets the required name that the current user must have.\r\n            ":"\r\n            获取当前用户必须拥有的所需名称。\r\n            \r\n","java.util.concurrent.PriorityBlockingQueue.PriorityBlockingQueue()":"java.util.concurrent.priorityblockingquequeque.priorityblockingquequequequequequequequequequequequequequequequequequequeque\r\n","org.xml.sax.helpers.AttributesImpl.getType(java.lang.String)":"org.xml.sax.helpers.attributesimpl.getType（java.lang.string）\r\n",". \r\n            ":"。\r\n            \r\n","Sets all of the headers contained within this group overriding any\n existing headers.":"设置该组中包含的所有标题覆盖任何\r\n 现有标题。\r\n","javax.crypto.MacSpi.engineInit(java.security.Key, java.security.spec.AlgorithmParameterSpec)":"javax.crypto.macspi.engineinit（java.security.key，java.security.security.spec.algorithmparameterspec）\r\n","java.util.concurrent.CompletionService.submit(java.lang.Runnable, java.lang.Object)":"java.util.concurrent.completionservice.submit（java.lang.runnable，java.lang.object）\r\n","Returns the size in bits, <code>l</code>, of the random exponent\n            (private value).":"返回随机指数的位，<code> l </code>的大小\r\n            （私人价值）。\r\n","Provides access to an ordered list of response interceptors.":"提供访问响应拦截器的有序列表。\r\n","if the specified buffer is null.\n":"如果指定的缓冲区为空。\r\n\r\n","Returns a literal pattern <code>String</code> for the specified\n            <code>String</code>.":"返回字面模式<code>字符串</code>指定的\r\n            <code>字符串</code>。\r\n","Gets the value of the password property for this ":"获取密码属性的价值\r\n","Returns whether this session is valid.":"返回该会话是否有效。\r\n","Send a request over a connection.":"通过连接发送请求。\r\n","javax.xml.datatype.DatatypeConstants.EQUAL":"javax.xml.datatype.datatypeconstants.equal\r\n","\r\n            Modifies the URL matching behavior for a ":"\r\n            修改A的URL匹配行为\r\n","An exception threw when a data base access error occurs.\n":"当数据库访问误差发生时，异常会引发。\r\n\r\n","javax.xml.transform.dom.DOMResult.DOMResult(org.w3c.dom.Node, org.w3c.dom.Node, java.lang.String)":"javax.xml.transform.dom.domresult.domresult（org.w3c.dom.node，org.w3c.dom.node，java.lang.string）\r\n","ConsoleHandler":"Consolehandler\r\n","javax.xml.XMLConstants.W3C_XPATH_DATATYPE_NS_URI":"javax.xml.xmlconstants.w3c_xpath_datatype_ns_uri\r\n","\r\n            Created per request to handle authentication for to a particular scheme.\r\n            ":"\r\n            根据请求创建的，以处理特定方案的身份验证。\r\n            \r\n","Retrieves the object associated to a key on a this node.":"检索与此节点上的键关联的对象。\r\n","javax.crypto.interfaces.DHPrivateKey.getX()":"javax.crypto.interfaces.dhprivatekey.getx（）\r\n","If this feature is activated, all validation errors as\n            defined in the XML 1.":"如果激活此功能，所有验证错误均为\r\n            在XML 1中定义。\r\n","through":"通过\r\n","HIERARCHY_REQUEST_ERR: Raised if an attempt is made to add a node\n   doesn't belong in this NamedNodeMap. Examples would include trying\n   to insert something other than an Attr node into an Element's map\n   of attributes, or a non-Entity node into the DocumentType's map of\n   Entities.\n   ":"eshierarchy_request_err：如果尝试添加节点，则提出\r\n   不属于此名称的nodemap。示例包括尝试\r\n   将attr节点以外的其他内容插入元素的映射中\r\n   属性，或在documentType的地图中的非实体节点\r\n   实体。\r\n   \r\n","destroy":"破坏\r\n","Adapter implementation method; do not call.":"适配器实现方法；不要打电话。\r\n","Creates a new <code>JarOutputStream</code> with the specified\n            <code>Manifest</code>.":"用指定的\r\n            <code>清单</code>。\r\n","Returns the length of the array.":"返回数组的长度。\r\n"," with the given\n            initial values.":" 与给定\r\n            初始值。\r\n","wrappedKeyType":"包裹键\r\n","org.apache.http.params.HttpConnectionParams.setTcpNoDelay(org.apache.http.params.HttpParams, boolean)":"org.apache.http.params.httpconnectionparams.settcpnodelay（org.apache.http.params.httpparams，boolean）\r\n","Sets the maximum number of connections allowed.":"设置允许的最大连接数。\r\n","java.util.stream.Collectors.toList()":"java.util.stream.collectors.tolist（）\r\n","javax.net.ssl.SSLContextSpi.engineGetSupportedSSLParameters()":"javax.net.ssl.sslcontextspi.enginegetsupportedsslparameters（）\r\n","javax.xml.datatype.DatatypeFactory.newDurationYearMonth(java.lang.String)":"javax.xml.datatype.datatypefactory.newdurationyearmonth（java.lang.string）\r\n","Adds the given value.":"添加给定值。\r\n","Returns a server <code>SSLSessionContext</code> object for\n            this context.":"返回服务器<code> sslsessionContext </code>对象\r\n            这个上下文。\r\n","if authorization string cannot \n   be generated due to an authentication failure":"如果授权字符串不能\r\n   由于身份验证故障而生成\r\n","Constructs a parameter set for RC5 from the given version, number of\n            rounds, word size (in bits), and IV.":"从给定版本构造RC5的参数集\r\n            回合，单词大小（位于位）和IV。\r\n","\r\n            Appends a frame representing a delegate-valued attribute.\r\n            ":"\r\n            附加代表委托值属性的帧。\r\n            \r\n","Returns the status of the handshake of this engine instance.":"返回此引擎实例的握手状态。\r\n","javax.net.ssl.SSLSession.getPeerCertificateChain()":"javax.net.ssl.sslsession.getpeercertificatechain（）\r\n","A factory for ":"一个工厂\r\n","java.util.jar.JarInputStream.JarInputStream(java.io.InputStream, boolean)":"java.util.jar.jarinputstream.jarinputstream（java.io.inputstream，boolean）\r\n","Returns this preference node's absolute path name.":"返回此偏好节点的绝对路径名。\r\n","javax.crypto.KeyAgreement.getInstance(java.lang.String, java.security.Provider)":"javax.crypto.keyagreement.getInstance（java.lang.string，java.security.provider）\r\n","javax.crypto.EncryptedPrivateKeyInfo.EncryptedPrivateKeyInfo(byte[])":"javax.crypto.CencryptedPrivateKeyinfo.CencryptedPrivateKeyInfo（byte []）\r\n","Create a new request executor.":"创建一个新的请求执行人。\r\n","javax.security.auth.callback.UnsupportedCallbackException.UnsupportedCallbackException(javax.security.auth.callback.Callback, java.lang.String)":"javax.security.auth.callback.unsupportedcallbackexception.unsupportedcallbackexception（javax.security.auth.callback.callback.callback，java.lang.lang.string）\r\n","\r\n            Used to determine if a handler supports SignOut.\r\n            ":"\r\n            用于确定处理程序是否支持签名。\r\n            \r\n","The two nodes are disconnected.":"两个节点是断开连接的。\r\n","Constructor for HeaderGroup.":"标头组的构造函数。\r\n","java.util.concurrent.atomic.AtomicBoolean.weakCompareAndSet(boolean, boolean)":"java.util.concurrent.atomic.atomicboolean.weakcompareandset（布尔值，布尔值）\r\n","java.util.jar.JarFile.JarFile(java.lang.String)":"java.util.jar.jarfile.jarfile（java.lang.string）\r\n","If the lock state matches the given stamp, releases the\n            exclusive lock.":"如果锁定状态与给定的邮票匹配，请发布\r\n            独家锁。\r\n","Returns the client session context, which represents the set of\n            SSL sessions available for use during the handshake phase of\n            client-side SSL sockets.":"返回客户端会话上下文，该上下文表示\r\n            SSL会话可在握手阶段使用\r\n            客户端SSL插座。\r\n","javax.crypto.CipherSpi":"javax.crypto.cipherspi\r\n","\r\n            Attaches the component to a ":"\r\n            将组件附加到\r\n"," is different from \"\", if the ":" 与“”不同，如果\r\n","Removes all headers with a certain name from this message.":"从此消息中删除所有标题。\r\n","If the uri is null.":"如果URI为空。\r\n","java.util.function.IntUnaryOperator.compose(java.util.function.IntUnaryOperator)":"java.util.function.intunaryoperator.compose（java.util.function.intunaryoperator）\r\n","ALL indicates that all messages should be logged.":"所有这些都表示应记录所有消息。\r\n","java.util.logging.Formatter.getTail(java.util.logging.Handler)":"java.util.logging.formatter.gettail（java.util.logging.handler）\r\n","java.util.prefs.NodeChangeEvent.NodeChangeEvent(java.util.prefs.Preferences, java.util.prefs.Preferences)":"java.util.prefs.nodechangeevent.nodechangeevent（java.util.prefs.preferences，java.util.prefs.prefs.preferences）\r\n","org.xml.sax.Attributes.getValue(int)":"org.xml.sax.attributes.getValue（int）\r\n","javax.xml.namespace.NamespaceContext.getPrefix(java.lang.String)":"javax.xml.namespace.namespacecontext.getprefix（java.lang.string）\r\n","Defines whether redirects should be handled automatically\n ":"定义是否应自动处理重定向\r\n \r\n","Add an attribute to an attribute list.":"将属性添加到属性列表中。\r\n","The RFC 2109 compliant policy.":"RFC 2109合规政策。\r\n","java.util.logging.Logger.log(java.util.logging.LogRecord)":"java.util.logging.logger.log（java.util.logging.logrocord）\r\n","if the current thread is interrupted\n":"如果当前线程中断\r\n\r\n","java.util.logging.Level.getResourceBundleName()":"java.util.logging.level.getResourcebundlename（）\r\n","java.util.prefs.Preferences.MAX_KEY_LENGTH":"java.util.prefs.preferences.max_key_length\r\n","javax.xml.xpath.XPathFactory.newInstance(java.lang.String, java.lang.String, java.lang.ClassLoader)":"javax.xml.xpath.xpathfactory.newinstance（java.lang.string，java.lang.string，java.lang.classloader）\r\n","Inserts a response interceptor at the specified index.":"在指定的索引处插入响应拦截器。\r\n","Return an attribute's value by index.":"通过索引返回属性的值。\r\n","ErrorHandler":"ErrorHandler\r\n","Replaces the child node <code>oldChild</code> with <code>newChild</code>\n             in the list of children, and returns the <code>oldChild</code> node.":"用<code> newchild </code>替换儿童节点<code> Oldchild </code>\r\n             在儿童列表中，并返回<code> OldChild </code>节点。\r\n","\r\n            Checks whether a given messagepack code represents an integer that might include a sign (i.e. might be a negative number).\r\n            ":"\r\n            检查给定的MessagePack代码是否表示可能包含符号的整数（即可能是负数）。\r\n            \r\n","java.util.concurrent.SynchronousQueue.spliterator()":"java.util.concurrent.synchronousqueue.spliterator（）\r\n","\r\n            Gets the name of the script file in which the error occurred.\r\n            ":"\r\n            获取发生错误的脚本文件的名称。\r\n            \r\n","Create an anonymous Logger.":"创建一个匿名记录器。\r\n","srcs":"SRCS\r\n","If the given string does not conform to the aforementioned specification.":"如果给定的字符串不符合上述规范。\r\n","\n            operator to its input, and then applies this operator to the result.":"\r\n            运算符对其输入，然后将该操作员应用于结果。\r\n","\r\n            Provides context information to handler providers.\r\n            ":"\r\n            向处理程序提供商提供上下文信息。\r\n            \r\n","Perform the final transformation from the intermediate accumulation type\n            ":"从中间积累类型执行最终转换\r\n            \r\n","javax.net.ssl.SSLServerSocket.SSLServerSocket(int)":"javax.net.ssl.sslserversocket.sslserversocket（int）\r\n"," parameter is\n ":" 参数为\r\n \r\n","An object reference that may be updated atomically.":"可能在原子上更新的对象引用。\r\n","org.xmlpull.v1.XmlPullParser.setInput(java.io.InputStream, java.lang.String)":"org.xmlpull.v1.xmlpullparser.setInput（java.io.inputstream，java.lang.string）\r\n","javax.xml.transform.dom.DOMSource DOMSource":"javax.xml.transform.domsource domsource\r\n","Get the system identifier that was set with setSystemId.":"获取使用SetSystemID设置的系统标识符。\r\n","Gets the policy on whether to execute existing delayed\n            tasks even when this executor has been ":"获取有关是否执行现有延迟的政策\r\n            即使该执行人已经执行任务\r\n","\r\n            The Y coordinate of the touch point relative to the top edge of the browser viewport, not including any scroll offset.\r\n            ":"\r\n            触摸点相对于浏览器视口的顶部边缘的Y坐标，不包括任何滚动偏移。\r\n            \r\n","org.xml.sax.helpers.LocatorImpl":"org.xml.sax.helpers.locatorimpl\r\n","java.util.concurrent.atomic.AtomicInteger.weakCompareAndSet(int, int)":"java.util.concurrent.atomic.atomicinteger.weakcompareandset（int，int）\r\n","remove a listener":"删除听众\r\n","\r\n            The back channel timeout.\r\n            ":"\r\n            后频道超时。\r\n            \r\n","\r\n            Gets a value indicating if all headers are allowed.\r\n            ":"\r\n            获取一个值，指示是否允许所有标题。\r\n            \r\n","javax.xml.parsers.DocumentBuilder.setErrorHandler(org.xml.sax.ErrorHandler)":"javax.xml.parsers.documentbuilder.seterrorhandler（org.xml.sax.errorhandler）\r\n","Creates a name-value pair.":"创建一个名称值对。\r\n","Returns the current value of the encoding property. -or- Assigns the current value of the encoding property.":"返回编码属性的当前值。 - 或分配编码属性的当前值。\r\n","java.util.concurrent.ScheduledExecutorService.scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.scheduledexecutorservice.schedulewithfixeddelay（java.lang.runnable，long，long，long，java.util.concurrent.timeunit）\r\n","A generic streamed entity being received on a connection.":"连接上收到的通用流实体。\r\n","Implements execution conventions for RecursiveActions.":"实施递归的执行约定。\r\n","Set an attribute in the list.":"在列表中设置一个属性。\r\n","DatatypeConstants#INDETERMINATE":"datatypeconstants＃不确定\r\n","java.util.zip.DeflaterOutputStream.finish()":"java.util.zip.deflateroutputstream.finish（）（）\r\n","strip":"跳闸\r\n","javax.sql.RowSet.setSQLXML(java.lang.String, java.sql.SQLXML)":"javax.sql.Rowset.setsqlxml（java.lang.string，java.sql.sqlxml）\r\n","Keeps lists of interceptors for processing requests and responses.":"保留用于处理请求和响应的拦截器列表。\r\n","Value for eleven month of year.":"每年十一个月的价值。\r\n","org.w3c.dom.ls.LSSerializer.writeToURI(org.w3c.dom.Node, java.lang.String)":"org.w3c.dom.ls.lsserializer.writetouri（org.w3c.dom.node，java.lang.string）\r\n","java.util.function.ObjIntConsumer.accept(java.lang.Object, int)":"java.util.function.objintconsumer.accept（java.lang.object，int）\r\n","Specification-Version":"规范 - 转换\r\n","Inserts a request interceptor at the specified index.":"在指定的索引处插入请求拦截器。\r\n","java.util.logging.LogManager.reset()":"java.util.logging.logmanager.reset（）\r\n","Create a new input source with a character stream.":"使用字符流创建一个新的输入源。\r\n","java.util.stream.Collectors.joining(java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence)":"java.util.stream.collectors.joining（Java.lang.Charsequence，Java.lang.Charsequence，Java.lang.CharSequence）\r\n","add(-1)":"添加（-1）\r\n","Inserts the specified element into this queue, if another thread is\n            waiting to receive it.":"如果另一个线程为\r\n            等待收到它。\r\n","Get a parameter that was explicitly set with setParameter.":"获取一个用setParameter明确设置的参数。\r\n","javax.xml.namespace.QName.equals(java.lang.Object)":"javax.xml.namespace.qname.equals（java.lang.object）\r\n","An attribute of a language and binding dependent type that represents\n a stream of bytes.":"语言的属性和代表绑定的依赖类型\r\n 一个字节。\r\n","Executes the given tasks, returning a list of Futures holding\n            their status and results when all complete.":"执行给定的任务，返回持有的期货清单\r\n            他们的状态和结果全部完成。\r\n","java.util.prefs.AbstractPreferences.childrenNamesSpi()":"java.util.prefs.abstractpreferences.childrennamesspi（）\r\n","javax.net.ssl.SSLServerSocket.getSupportedCipherSuites()":"javax.net.ssl.sslserversocket.getSupportedCiphersuites（）\r\n"," doesn't\n   support this method, or if the context node is of type\n   ":" 不\r\n   支持此方法，或者如果上下文节点为类型\r\n   \r\n","if no connection has been established yet.\n":"如果尚未建立联系。\r\n\r\n","\r\n            Gets or sets the new value.\r\n            ":"\r\n            获取或设置新值。\r\n            \r\n","\r\n            as a base class ensures that the service and relates services that share its scope are disposed with the component.\r\n            ":"\r\n            作为基础类，确保服务和关联共享其范围的服务与组件处置。\r\n            \r\n","Checks if a boolean parameter is set to <code>true</code>.":"检查布尔参数是否设置为<code> true </code>。\r\n","Constructor that takes a password, salt, iteration count, and\n            to-be-derived key length for generating PBEKey of variable-key-size\n            PBE ciphers.":"采用密码，盐，迭代计数的构造函数和\r\n            衍生的密钥长度用于生成可变键尺寸的pbekey\r\n            PBE密码。\r\n","Returns the thread last set by ":"返回最后设置的线程\r\n","java.util.zip.DeflaterInputStream.DeflaterInputStream(java.io.InputStream, java.util.zip.Deflater)":"java.util.zip.deflaterinputstream.deflaterinputstream（java.io.inputstream，java.util.zip.deflater）\r\n","\r\n            Gets the request token.\r\n            ":"\r\n            获取请求令牌。\r\n            \r\n"," that produces the minimal element according\n            to a given ":" 产生最小元素\r\n            给定\r\n","javax.xml.transform.TransformerException.TransformerException(java.lang.String)":"javax.xml.transform.transformerexception.transformerexception（java.lang.string）\r\n","javax.security.cert.CertificateExpiredException.CertificateExpiredException(java.lang.String)":"javax.security.cert.certificate expiredException.certificateExpiredException（java.lang.string）\r\n","java.util.logging.LogManager.LogManager()":"java.util.logging.logmanager.logmanager（）\r\n","javax.net.SocketFactory.createSocket()":"javax.net.socketfactory.createsocket（）\r\n",", any realm name, and any\n authentication scheme.":"，任何领域的名称和任何\r\n 身份验证方案。\r\n"," is not a sibling of ":" 不是\r\n",", or one the entries in\n             ":"，或一个条目\r\n             \r\n","Sets the designated column's number of decimal digits to the\n            given <code>int</code>.":"将指定列的小数位数设置为\r\n            给定<code> int </code>。\r\n"," and the\r\n            current element is not a component, the frame will be omitted.\r\n            ":" 和\r\n            当前元素不是组件，将省略帧。\r\n            \r\n","java.util.jar.JarInputStream":"java.util.jar.jarinputstream\r\n","The optional list of claim values, which, if present, \r\n            the claim must match.":"索赔值的可选列表，如果存在，\r\n            索赔必须匹配。\r\n","Returns a <code>ServerSocketFactory</code> object for\n            this context.":"返回<code> serversocketFactory </code>对象\r\n            这个上下文。\r\n","javax.xml.transform.stream.StreamResult.StreamResult()":"javax.xml.transform.stream.streamresult.streamresult（）\r\n","Returns the provider of this <code>Cipher</code> object.":"返回此<code> cipher </code>对象的提供商。\r\n","java.util.jar.Attributes.containsValue(java.lang.Object)":"java.util.jar.attributes.containsvalue（java.lang.object）\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.hasContended()":"java.util.concurrent.locks.abstractqueuedsynchronizer.hascontendended（）\r\n","\r\n            Extension methods to add authentication capabilities to an HTTP application pipeline.\r\n            ":"\r\n            扩展方法将身份验证功能添加到HTTP应用程序管道中。\r\n            \r\n","javax.xml.namespace.QName":"javax.xml.namespace.qname\r\n"," object for the specified\n            attribute of the current element.":" 指定的对象\r\n            当前元素的属性。\r\n","javax.xml.parsers.DocumentBuilderFactory.setCoalescing(boolean)":"javax.xml.parsers.documentbuilderfactory.setcoalescing（boolean）\r\n","Fills this <code>RowSet</code> object with data.":"用数据填充此<code> Rowset </code>对象。\r\n"," property equals ":" 属性等于\r\n","If an error occurs storing the entry.":"如果发生错误，则存储条目。\r\n"," required to\n  check these conditions, they may simply return a default\n  value when called with an invalid socket argument.\n":" 被要求\r\n  检查这些条件，他们可能只是返回默认值\r\n  用无效的套接字参数调用时值。\r\n\r\n","java.util.concurrent.LinkedTransferQueue.offer(java.lang.Object)":"java.util.concurrent.linkedtransferqueue.offer（java.lang.object）\r\n","org.json.JSONArray.put(boolean)":"org.json.jsonarray.put（boolean）\r\n"," method as per the specification in\n            ":" 根据规范的方法\r\n            \r\n","This interface represents a ":"此界面代表\r\n","#XMLNS_ATTRIBUTE\n            XMLConstants.XMLNS_ATTRIBUTE":"#xmlns_attribute\r\n            xmlConstants.xmlns_attribute\r\n","\r\n            Gets the identifier for the ":"\r\n            获取标识符\r\n","opmode":"OPMODE\r\n","java.util.logging.ConsoleHandler.ConsoleHandler()":"java.util.logging.consolehandler.consolehandler（）\r\n","javax.xml.transform.dom.DOMResult.setSystemId(java.lang.String)":"javax.xml.transform.dom.domresult.setsystemid（java.lang.string）\r\n","Reads the next ZIP file entry and positions the stream at the\n            beginning of the entry data.":"读取下一个zip文件输入，并将流定位在\r\n            输入数据的开始。\r\n","\r\n            Infrastructure for the discovery of ":"\r\n            发现的基础架构\r\n","javax.crypto.SecretKeyFactory.getInstance(java.lang.String, java.security.Provider)":"javax.crypto.secretkeyfactory.getinstance（java.lang.string，java.security.provider）\r\n",", so it no longer\n            receives change events.":"，所以不再\r\n            接收更改事件。\r\n","Time unit representing one thousandth of a second\n":"时间单元代表千分之一秒\r\n\r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            to a <code>Reader</code> object.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            到<code>读取器</code>对象。\r\n","javax.net.ssl.SSLEngine.SSLEngine(java.lang.String, int)":"javax.net.ssl.sslengine.sslengine（java.lang.string，int）\r\n","Layers a new protocol on top of a ":"将新协议层在一个之上\r\n","#COMMENTS":"＃注释\r\n"," for the output.":" 对于输出。\r\n","javax.crypto.spec.PBEParameterSpec.getIterationCount()":"javax.crypto.spec.pbeparameterspec.getiterationcount（）\r\n","Acquires a permit from this semaphore, blocking until one is\n            available, or the thread is Thread#interrupt interrupted.":"从此信号量获取许可证，阻止直到一个\r\n            可用，否则线程＃中断中断。\r\n","Returns whether the result blob has been generated successfully by this\n            exemption mechanism.":"返回结果是否已成功生成的结果斑点\r\n            豁免机制。\r\n","java.util.function.LongUnaryOperator.applyAsLong(long)":"java.util.function.longunaryoperator.applyaslong（长）\r\n","Get the current error event handler. -or- Set the error event handler.":"获取当前的错误事件处理程序。 - 或 - 设置错误事件处理程序。\r\n"," and\n             ":" 和\r\n             \r\n","org.xmlpull.v1.XmlSerializer.startDocument(java.lang.String, java.lang.Boolean)":"org.xmlpull.v1.xmlserializer.startdocument（java.lang.string，java.lang.boolean）\r\n","javax.xml.transform.TransformerFactory.getAssociatedStylesheet(javax.xml.transform.Source, java.lang.String, java.lang.String, java.lang.String)":"javax.xml.transform.transformerfactory.getAssociatedStyleSheet（javax.xml.transform.source，java.lang.string，java.lang.lang.string，java.lang.lang.string）\r\n","java.util.concurrent.LinkedBlockingDeque.removeFirst()":"java.util.concurrent.linkedblockingdeque.removefirst（）\r\n","javax.crypto.spec.OAEPParameterSpec.getMGFParameters()":"javax.crypto.spec.oaepparameterspec.getmgfparameters（）\r\n","Signals that an HTTP exception has occurred.":"信号表明发生了HTTP异常。\r\n","An object whose monitor is used to lock this node.":"监视器用于锁定该节点的对象。\r\n","Returns the current values of both the reference and the stamp.":"返回参考和邮票的当前值。\r\n","javax.sql.RowSetListener.rowSetChanged(javax.sql.RowSetEvent)":"javax.sql.RowsetListener.Rowsetchanged（javax.sql.Rowsetevent）\r\n","If the given ":"如果给定\r\n","java.util.logging.Logger.setLevel(java.util.logging.Level)":"java.util.logging.logger.setlevel（java.util.logging.Level）\r\n","\r\n            Gets the specified item from the segment.\r\n            ":"\r\n            从该细分市场获取指定的项目。\r\n            \r\n","java.util.concurrent.atomic.DoubleAdder.DoubleAdder()":"java.util.concurrent.atomic.doubleadder.doubleadder（）\r\n","java.util.concurrent.locks.ReadWriteLock.readLock()":"java.util.concurrent.locks.readwritelock.readlock（）\r\n","Returns the default SSL server socket factory.":"返回默认的SSL Server套接字工厂。\r\n","preference change\n            events":"偏好更改\r\n            事件\r\n","Report the end of DTD declarations.":"报告DTD声明的结尾。\r\n","Determines the size of the internal socket buffer used to buffer data\n            while receiving / transmitting HTTP messages.":"确定用于缓冲数据的内部套接字缓冲区的大小\r\n            在接收 /传输HTTP消息时。\r\n","Find a variable in the set of available variables.":"在一组可用变量中找到一个变量。\r\n","s of the Server Name Indication (SNI)\n            parameter.":"服务器名称指示（SNI）的s\r\n            范围。\r\n","Represents a predicate (boolean-valued function) of two arguments.":"代表两个参数的谓词（布尔值函数）。\r\n","The node is deleted.":"节点已删除。\r\n","javax.net.ssl.SSLSessionContext.getSession(byte[])":"javax.net.ssl.sslsessessessextcontext.getsession（byte []）\r\n","Returns true if the server socket should require client authentication.":"如果服务器套接字应需要客户端验证，则返回true。\r\n","javax.crypto.spec.PBEKeySpec.getPassword()":"javax.crypto.spec.pbekeyspec.getPassword（）\r\n","Creates a header from a line.":"从一条线创建标头。\r\n","Returns the offset after the last character of the subsequence\n            captured by the given group during this match.":"在子序列的最后一个字符之后返回偏移\r\n            在这场比赛中被给定的小组捕获。\r\n","Returns the distinguished name in ASN.":"返回ASN中的杰出名称。\r\n","\r\n            An event that is raised when validation state has changed.\r\n            ":"\r\n            验证状态发生变化时提出的事件。\r\n            \r\n","Log a FINER message.":"记录更好的消息。\r\n","javax.security.auth.Subject.Subject(boolean, java.util.Set, java.util.Set, java.util.Set)":"javax.security.auth.subject.subject（boolean，java.util.set，java.util.set，java.util.set）\r\n","fractional":"分数\r\n","javax.xml.validation.ValidatorHandler.getProperty(java.lang.String)":"javax.xml.validation.validatorhandler.getProperty（java.lang.string）\r\n","\r\n            Gets or sets the delegate that is invoked when the RedirectToAuthorizationEndpoint method is invoked.\r\n            ":"\r\n            调用RedirectToEderizationEndPoint方法时，获取或设置被调用的委托。\r\n            \r\n","java.util.regex.MatchResult.groupCount()":"java.util.regex.matchresult.groupcount（）\r\n","\r\n            Read the next value and advance the reader.\r\n            ":"\r\n            阅读下一个值并推进读者。\r\n            \r\n","Transfer encoding definitions ":"传输编码定义\r\n","org.xml.sax.helpers.XMLFilterImpl.getParent()":"org.xml.sax.helpers.xmlfilterimpl.getParent（）\r\n","\r\n            A sequence of bytes.\r\n            The data is a slice from the original sequence passed to this reader's constructor.\r\n            ":"\r\n            一个字节序列。\r\n            数据是传递给读者构造函数的原始序列的切片。\r\n            \r\n","org.w3c.dom.UserDataHandler.NODE_ADOPTED":"org.w3c.dom.userdatahandler.node_adopted\r\n","javax.net.ssl.SSLSocketFactory.getDefault()":"javax.net.ssl.sslsocketfactory.getDefault（）\r\n","Returns the text content of the current event as String.":"将当前事件的文本内容返回为字符串。\r\n","Construct a new, empty Locator2Impl object.":"构建一个新的空定位器2impl对象。\r\n","javax.xml.transform.sax.SAXTransformerFactory":"javax.xml.transform.sax.saxtransformerfactory\r\n","Associates a string representing the specified float value with the\n            specified key in this preference node.":"将代表指定浮点数的字符串与\r\n            在此偏好节点中指定键。\r\n",", initially containing the elements of\n            the given collection, added in traversal order of the\n            collection's iterator.":"，最初包含\r\n            给定的集合，按遍历顺序添加\r\n            收集的迭代器。\r\n","javax.sql.RowSetMetaData.setColumnCount(int)":"Javax.sql.RowsetMetadata.setColumnCount（INT）\r\n","org.w3c.dom.Node.removeChild(org.w3c.dom.Node)":"org.w3c.dom.node.removechild（org.w3c.dom.node）\r\n","<code>DOMImplementationLS</code> contains the factory methods for creating\n            Load and Save objects.":"<code> domimplementationls </code>包含用于创建的出厂方法\r\n            加载并保存对象。\r\n","<code>XPathFunctionResolver</code> provides access to the set of user defined <code>XPathFunction</code>s.":"<code> XPathFunctionResolver </code>提供了对用户定义的集合<Code> XPathFunction </code> s的访问。\r\n","\r\n            Context passed for redirect events.\r\n            ":"\r\n            通过重定向事件的上下文。\r\n            \r\n","if the time unit is null\n":"如果时间单元为null\r\n\r\n","Parses a header value into elements.":"将标题值解析为元素。\r\n","java.util.concurrent.atomic.AtomicMarkableReference.isMarked()":"java.util.concurrent.atomic.atomicmarkablereference.ismarked（）\r\n","javax.xml.datatype.DatatypeConstants.MONTHS":"javax.xml.datatype.datatypeconstants.months\r\n","The official XML Namespace name URI.":"XML官方名称空间URI。\r\n"," in the reader's ":" 在读者的\r\n","java.util.concurrent.Phaser.getArrivedParties()":"java.util.concurrent.phaser.getarrivedparties（）\r\n"," for the bound value.\r\n            ":" 对于界值。\r\n            \r\n"," instance that is bound to this\n            ":" 与此绑定的实例\r\n            \r\n","Preferences#sync()":"首选项＃sync（）\r\n","\r\n            Adds a new policy.\r\n            ":"\r\n            添加了一个新政策。\r\n            \r\n","Gets the current value.":"获取当前值。\r\n","A recursive result-bearing ":"递归结果\r\n","javax.net.SocketFactory":"javax.net.socketFactory\r\n"," of public credentials associated with this\n            ":" 与此相关的公共证书\r\n            \r\n","java.util.concurrent.atomic.AtomicLongArray.getAndDecrement(int)":"java.util.concurrent.atomic.atomiclongarray.getanddecrement（int）\r\n","Obtains the value of the SECONDS field as an integer value,\n            or 0 if not present.":"获得秒字段的值作为整数值，\r\n            或0如果不存在。\r\n","javax.xml.datatype.DatatypeConstants.HOURS":"javax.xml.datatype.datatypeconstants.hours\r\n","\r\n            The policy which needs to be applied.\r\n            ":"\r\n            需要应用的政策。\r\n            \r\n","java.util.stream.Collectors.toConcurrentMap(java.util.function.Function, java.util.function.Function, java.util.function.BinaryOperator)":"java.util.stream.collectors.toconcurrentmap（java.util.function.function.function，java.util.function.function.function.function，java.util.function.binaryoperator）\r\n","Return the name of an attribute in this list (by position).":"返回此列表中属性的名称（按位置）。\r\n","Default content type ":"默认内容类型\r\n","javax.net.ssl.SNIMatcher.SNIMatcher(int)":"javax.net.ssl.snimatcher.snimatcher（int）\r\n","java.util.concurrent.BlockingQueue#offer(Object,long,TimeUnit)\n             BlockingQueue.offer":"java.util.concurrent.blockingqueue＃guert（对象，长，timeunit）\r\n             blockingqueue.offer\r\n","Creates a copy of this instance":"创建此实例的副本\r\n","javax.net.ssl.TrustManagerFactorySpi.engineGetTrustManagers()":"javax.net.ssl.trustmanagerfactoryspi.enginegettrustmanagers（）\r\n","\r\n             If specified, the parameter value will be supplied by the closest\r\n             ancestor ":"\r\n             如果指定，参数值将由最接近的\r\n             祖先\r\n","An input stream that also maintains a checksum of the data being read.":"一个输入流，还可以维护读取数据的校验和。\r\n","java.util.logging.LogRecord.getSequenceNumber()":"java.util.logging.logrecord.getSequencenumber（）\r\n","java.util.concurrent.SynchronousQueue.drainTo(java.util.Collection, int)":"java.util.concurrent.synchronousqueue.drainto（java.util.collection，int）\r\n","org.apache.http.conn.ssl.SSLSocketFactory":"org.apache.http.conn.ssl.sslsocketFactory\r\n"," monitor\n            methods (":" 监视器\r\n            方法 （\r\n","Creates a copy of the local collection with the same default\n":"使用相同的默认值创建本地集合的副本\r\n\r\n","javax.net.ssl.X509ExtendedTrustManager.checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String, javax.net.ssl.SSLEngine)":"javax.net.ssl.x5099 extendedTrustmanager.checkServerTrusted（java.security.cert.cert.x509certificate []，java.lang.string，javax.net.net.ssl.ssslengine）\r\n","\r\n            Whether or not the total size of the transfer is known.\r\n            ":"\r\n            是否已知转移的总大小。\r\n            \r\n","javax.net.ssl.SSLContext.setDefault(javax.net.ssl.SSLContext)":"javax.net.ssl.sslcontext.setdefault（javax.net.ssl.ssslcontext）\r\n","java.util.function.LongToDoubleFunction":"java.util.function.longtodoublefunction\r\n","if the provider is ":"如果提供商是\r\n","Construct a new, empty AttributesImpl object.":"构建一个新的空属性IMPPL对象。\r\n","Creates a new InvalidCredentialsException with the specified message.":"使用指定的消息创建一个新的无效性示威感。\r\n","java.util.prefs.Preferences.exportNode(java.io.OutputStream)":"java.util.prefs.preferences.exportnode（java.io.outputstream）\r\n"," is invoked prior to the server evicting the circuit to the client.\r\n            Application users may use this event to save state for a client that can be later rehydrated.\r\n            ":" 在服务器将电路驱逐到客户端之前被调用。\r\n            应用程序用户可以使用此事件为客户保存状态，以稍后再补充水分。\r\n            \r\n","javax.xml.xpath.XPathConstants.DOM_OBJECT_MODEL":"javax.xml.xpath.xpathconstants.dom_object_model\r\n",", or\n   if the ":"， 或者\r\n   如果是\r\n","java.util.prefs.AbstractPreferences.isRemoved()":"java.util.prefs.abstractpreferences.isremoved（）\r\n","java.util.concurrent.ScheduledThreadPoolExecutor.getRemoveOnCancelPolicy()":"java.util.concurrent.scheduledthreadpoolexecutor.getremoveoncancelpolicy（）\r\n","\r\n            Determines the settings used to create the cookie.\r\n            ":"\r\n            确定用于创建cookie的设置。\r\n            \r\n","\r\n            The extension format. \r\n            The data is a slice from the original sequence passed to this reader's constructor.\r\n            ":"\r\n            扩展格式。\r\n            数据是传递给读者构造函数的原始序列的切片。\r\n            \r\n","allowCoreThreadTimeOut":"允许CoreThreadTimeOut\r\n","\r\n            Invokes the delegate associated with this ":"\r\n            调用与此关联的代表\r\n","if this MAC is not initialized.\n":"如果此Mac未初始化。\r\n\r\n","Get the type of an attribute (by name).":"获取属性的类型（按名称）。\r\n","java.util.logging.Filter":"java.util.logging.filter\r\n","\r\n            Gets or sets the URI the middleware will access to exchange the OAuth token.\r\n            ":"\r\n            获取或设置URI中间软件将访问以交换OAuth代币。\r\n            \r\n","Returns all cookies contained in this store.":"返回此商店中包含的所有饼干。\r\n","java.util.concurrent.Semaphore.hasQueuedThreads()":"java.util.concurrent.semaphore.hasqueuedthreads（）\r\n","Return global logger object with the name Logger.":"带有名称记录器的全局记录器对象。\r\n","qualifiedName":"合格名称\r\n","org.w3c.dom.DOMConfiguration.setParameter(java.lang.String, java.lang.Object)":"org.w3c.dom.domconfiguration.setParameter（java.lang.string，java.lang.object）\r\n","Returns a collection of connection metrcis":"返回连接metrcis的集合\r\n","\r\n            Constructs a new instance of ":"\r\n            构建一个新实例\r\n","java.util.zip.ZipFile.OPEN_READ":"java.util.zip.zipfile.open_read\r\n","Creates a new instance of a XML Pull Parser\n            using the currently configured factory features.":"创建XML拉解析器的新实例\r\n            使用当前配置的工厂功能。\r\n","javax.crypto.Cipher.doFinal(java.nio.ByteBuffer, java.nio.ByteBuffer)":"javax.crypto.cipher.dofinal（java.nio.bytebuffer，java.nio.bytebuffer）\r\n","org.xml.sax.helpers.DefaultHandler.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)":"org.xml.sax.helpers.defaulthandler.startelement（java.lang.string，java.lang.string，java.lang.string，org.xml.sax.tributes）\r\n","Creates an empty <code>DocumentType</code> node.":"创建一个空的<code> documentType </code>节点。\r\n","java.util.concurrent.LinkedBlockingDeque.offerLast(java.lang.Object, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.linkedblockingdeque.offerlast（java.lang.Object，long，java.util.concurrent.timeunit）\r\n","javax.net.ssl.SNIHostName":"javax.net.ssl.snihostname\r\n","javax.xml.transform.Transformer.getOutputProperty(java.lang.String)":"javax.xml.transform.transformer.getOutputProperty（java.lang.string）\r\n","\r\n            Appends a frame representing a child component.\r\n            ":"\r\n            附加代表子组件的框架。\r\n            \r\n"," (IV).":" （iv）。\r\n","\r\n            Abstracts the system clock to facilitate testing.\r\n            ":"\r\n            摘要系统时钟以促进测试。\r\n            \r\n","javax.xml.datatype.XMLGregorianCalendar.setYear(java.math.BigInteger)":"javax.xml.datatype.xmlgregoriancalendar.setyear（java.math.biginteger）\r\n","if either major or minor version number is negative\n":"如果主要版本号或次要版本为负\r\n\r\n","java.util.concurrent.atomic.AtomicIntegerFieldUpdater":"java.util.concurrent.atomic.atomicintegerfieldupdater\r\n","javax.crypto.Cipher.update(byte[], int, int, byte[], int)":"javax.crypto.cipher.update（byte []，int，int，byte []，int）\r\n","if the specified buffer is too small for the shared secret.\n":"如果指定的缓冲区太小，无法共享秘密。\r\n\r\n","\r\n            The default implementation of a policy provider,\r\n            which provides a ":"\r\n            策略提供商的默认实施，\r\n            提供的\r\n"," throws an\n      ":" 抛出\r\n      \r\n","Returns the certificate(s) that were sent to the server during\n            handshaking.":"返回在\r\n            握手。\r\n","Sets whether the designated column's value can be set to\n            <code>NULL</code>.":"设置指定列的值是否可以设置为\r\n            <code> null </code>。\r\n","org.xml.sax.ContentHandler.processingInstruction(java.lang.String, java.lang.String)":"org.xml.sax.contenthandler.processinginstruction（java.lang.string，java.lang.string）\r\n","javax.sql.RowSet.setCharacterStream(int, java.io.Reader)":"javax.sql.Rowset.setCharacterstream（int，java.io.reader）\r\n","XPathFactory":"X PathFactory\r\n","in case of an http protocol error\n":"如果发生HTTP协议错误\r\n\r\n","java.util.concurrent.atomic.AtomicLongFieldUpdater.incrementAndGet(java.lang.Object)":"java.util.concurrent.atomic.atomiclongfieldupdater.incrementandget（java.lang.object）\r\n"," if this lock has fairness set true.":" 如果此锁定为公平设置。\r\n","\r\n            The width (magnitude on the X axis), in CSS pixels, of the contact geometry of the pointer.\r\n            ":"\r\n            指针的接触几何形状的CSS像素中的宽度（X轴上的大小）。\r\n            \r\n","Creates a new output stream with a default buffer size and\n            the specified flush mode.":"创建具有默认缓冲区大小的新输出流，并且\r\n            指定的冲洗模式。\r\n","Checks whether this route includes a layered protocol.":"检查此路线是否包括分层协议。\r\n","Represents a function that accepts two arguments and produces a long-valued\n            result.":"代表一个接受两个论点并产生长期价值的函数\r\n            结果。\r\n"," has a prefix that is \"xml\" and\n   the ":" 具有“ XML”的前缀，并且\r\n   这\r\n",",\r\n            gets the index of the parent frame representing the component being captured. Otherwise, the value is undefined.\r\n            WARNING: This index can only be used in the context of the frame's original render tree. If the frame is\r\n                     copied elsewhere, such as to the ReferenceFrames buffer of a RenderTreeDiff, then the index will\r\n                     not relate to entries in that other buffer.\r\n                     Currently there's no scenario where this matters, but if there was, we could change all of the subtree\r\n                     initialization logic in RenderTreeDiffBuilder to walk the frames hierarchically, then it would know\r\n                     the parent index at the point where it wants to initialize the ComponentReferenceCapture frame.\r\n            ":"，，，，\r\n            获取代表要捕获的组件的父帧的索引。否则，该值是未定义的。\r\n            警告：此索引只能在框架原始渲染树的上下文中使用。如果框架是\r\n                     复制在其他地方，例如渲染图的参考框缓冲区，然后索引将\r\n                     与其他缓冲区中的条目无关。\r\n                     目前没有任何重要的方案，但是如果有的话，我们可以更改所有子树\r\n                     rendertreediffbuilder中的初始化逻辑以层次的形式行走，然后知道\r\n                     父索引在要初始化componentReferenceCapture框架的点。\r\n            \r\n","javax.xml.datatype.DatatypeConstants.NOVEMBER":"javax.xml.datatype.datatypeconstants.november\r\n","\r\n            has changed. For example, this event may be raised if a user logs in or out.\r\n            ":"\r\n            已经改变。例如，如果用户登录或输出，则可以提出此事件。\r\n            \r\n","Parse an XML document from a location identified by a URI reference [<a href='http://www.":"从URI参考标识的位置分析XML文档[<a href ='http：//www。\r\n","javax.xml.xpath.XPath.evaluate(java.lang.String, org.xml.sax.InputSource, javax.xml.namespace.QName)":"javax.xml.xpath.xpath.xpath.evaluate（java.lang.string，org.xml.sax.inputsource，javax.xml.namespace.qname）\r\n","if this method is called after starting the initial\n             handshake.\n":"如果在开始初始化后调用此方法\r\n             握手。\r\n\r\n","The node is contained by the reference node.":"该节点由参考节点包含。\r\n","javax.xml.datatype.DatatypeConstants.GDAY":"javax.xml.datatype.datatypeconstants.gday\r\n","if an I/O error occurs while creating the socket\n":"如果创建套接字时发生I/O错误\r\n\r\n","\r\n            Store the identity ticket and return the associated key.\r\n            ":"\r\n            存储身份票并返回关联的密钥。\r\n            \r\n","javax.sql.RowSet.setNCharacterStream(java.lang.String, java.io.Reader, long)":"javax.sql.rowset.setncharacterstream（java.lang.string，java.io.Reader，long）\r\n","org.w3c.dom.DOMImplementation.createDocumentType(java.lang.String, java.lang.String, java.lang.String)":"org.w3c.dom.domimplementation.createDocumentType（java.lang.string，java.lang.string，java.lang.string）\r\n","org.xml.sax.helpers.XMLFilterImpl.resolveEntity(java.lang.String, java.lang.String)":"org.xml.sax.helpers.xmlfilterimpl.resolveentity（java.lang.string，java.lang.string）\r\n","Causes a flush on the target ":"导致目标冲洗\r\n","org.json.JSONObject.optJSONObject(java.lang.String)":"org.json.jsonobject.optjsonobject（java.lang.string）\r\n","\r\n            using the specified ":"\r\n            使用指定的\r\n","Provides string constants that can be used to set\n            output properties for a Transformer, or to retrieve\n            output properties from a Transformer or Templates object.":"提供可用于设置的字符串常数\r\n            变压器的输出属性或检索\r\n            来自变压器或模板对象的输出属性。\r\n"," component that\r\n            supplies values with a compatible type and name.\r\n            ":" 组件\r\n            提供兼容类型和名称的值。\r\n            \r\n"," throws an exception.\r\n            ":" 引发例外。\r\n            \r\n","\r\n            Failure was due to these requirements not being met via ":"\r\n            失败是由于这些要求未通过\r\n","\r\n            An event that is raised when validation is requested.\r\n            ":"\r\n            请求验证时提出的事件。\r\n            \r\n","\r\n            Optional base class for components that represent a layout.\r\n            Alternatively, components may implement ":"\r\n            代表布局的组件的可选基类。\r\n            或者，组件可以实施\r\n","org.xml.sax.SAXParseException.getColumnNumber()":"org.xml.sax.saxparseexception.getColumnnumber（）\r\n","\r\n            The underlying ":"\r\n            基础\r\n","org.xmlpull.v1.XmlSerializer.getFeature(java.lang.String)":"org.xmlpull.v1.xmlserializer.getFeature（java.lang.string）\r\n","Returns the current value of the reference.":"返回参考的当前值。\r\n","\r\n            Provides a central transformation point to change the specified principal. \r\n            Note: this will be run on each AuthenticateAsync call, so its safer to\r\n            return a new ClaimsPrincipal if your transformation is not idempotent.\r\n            ":"\r\n            提供了一个中心转换点来更改指定的原理。\r\n            注意：这将在每个AuthentIcateAsync调用上运行，因此更安全\r\n            如果您的转换不是愿意的，请返回新的索赔。\r\n            \r\n","\r\n            The handler calls methods on the events which give the application control at certain points where processing is occurring. \r\n            If it is not provided a default instance is supplied which does nothing when the methods are called.\r\n            ":"\r\n            处理程序在事件上调用方法，这些方法在处理处理的某些点为应用程序控制提供了。\r\n            如果没有提供，则提供默认实例，当调用方法时什么都不执行。\r\n            \r\n","Preferences#put(String,String)":"首选项＃put（字符串，字符串）\r\n","The default 'best match' policy.":"默认的“最佳匹配”策略。\r\n","If the expression cannot be evaluated.\n":"如果无法评估表达式。\r\n\r\n","Initializes this key generator with the specified parameter set.":"使用指定的参数集初始化此键发生器。\r\n","Declare a Namespace prefix.":"声明名称空间前缀。\r\n","\r\n            The prefix used to provide a default CookieAuthenticationOptions.CookieName\r\n            ":"\r\n            用于提供默认cookiuthenticationoptions.cookiename的前缀\r\n            \r\n","org.w3c.dom.DOMException.NOT_FOUND_ERR":"org.w3c.dom.domexception.not_found_err\r\n","Throwable by subclasses.\n":"可通过子类别投掷。\r\n\r\n"," is always represented as an absolute URI in string form with trailing slash.\r\n            Typically this corresponds to the 'href' attribute on the document's <base> element.\r\n            ":" 始终以弦线形式表示为绝对URI。\r\n            通常，这对应于文档<base>元素上的“ HREF”属性。\r\n            \r\n","javax.xml.transform.stream.StreamResult.getWriter()":"javax.xml.transform.stream.streamresult.getWriter（）\r\n",", prefixed with the length using one of these message codes:\r\n            ":"，使用以下消息代码之一以长度为前缀：\r\n            \r\n","Construct a new exception with no message.":"构建一个没有消息的新例外。\r\n","org.xml.sax.DocumentHandler.startDocument()":"org.xml.sax.documenthandler.startdocument（）\r\n","org.w3c.dom.DOMException.INVALID_STATE_ERR":"org.w3c.dom.domexception.invalid_state_err\r\n","java.util.jar.Manifest.getEntries()":"java.util.jar.manifest.getentries（）\r\n","java.util.concurrent.locks.ReentrantLock.ReentrantLock()":"java.util.concurrent.locks.reentrantlock.reentrantlock（）\r\n","Obtains the message entity of this response, if any.":"如果有的话，获得此响应的消息实体。\r\n"," to the expected reference\n            and the current stamp is equal to the expected stamp.":" 到预期参考\r\n            当前的邮票等于预期的邮票。\r\n","BinaryOperator<T>":"二进制操作器<t>\r\n","org.xml.sax.helpers.XMLFilterImpl.getProperty(java.lang.String)":"org.xml.sax.helpers.xmlfilterimpl.getProperty（java.lang.string）\r\n","javax.xml.datatype.Duration.getHours()":"javax.xml.datatype.duration.gethours（）\r\n","\r\n            true if the control key was down when the event was fired. false otherwise.\r\n            ":"\r\n            如果控制键在事件发射时关闭，则是真的。否则为错误。\r\n            \r\n","Returns the global LogManager object.":"返回全局logmanager对象。\r\n","\r\n            The number of elements that will be written in the array. This MUST be less than ":"\r\n            数组中将编写的元素数量。这必须小于\r\n","java.util.prefs.Preferences.importPreferences(java.io.InputStream)":"java.util.prefs.preferences.importpreferences（java.io.inputstream）\r\n","Tells if this request should use the expect-continue handshake.":"告诉该请求是否应使用预期握手。\r\n","org.json.JSONStringer.key(java.lang.String)":"org.json.jsonstringer.key（java.lang.string）\r\n","java.util.concurrent.RejectedExecutionException":"java.util.concurrent.RejectedExecutionException\r\n","#sum":"＃和\r\n","Constant used to initialize cipher to encryption mode.":"常数用于初始化密码到加密模式。\r\n","Revert to the previous Namespace context.":"还原为先前的名称空间上下文。\r\n","Gets the URL property value for this ":"获取此url属性值\r\n","Returns the size in bits of the prime modulus.":"返回Prime模量的位中的大小。\r\n","\r\n            Extension method for Challenge.\r\n            ":"\r\n            挑战的扩展方法。\r\n            \r\n"," value from any value encoded with:\r\n            ":" 来自编码的任何值的值：\r\n            \r\n","Binds the given prefix to the given namespace.":"将给定前缀绑定到给定的名称空间。\r\n","Obtains the socket for this connection.":"获得此连接的插座。\r\n","Append the string to the end of the character data of the node.":"将字符串附加到节点的字符数据末尾。\r\n","Removes the specified <code>StatementEventListener</code> from the list of\n            components that will be notified when the driver detects that a\n            <code>PreparedStatement</code> has been closed or is invalid.":"从列表中删除指定的<code> statement EventListener </code>\r\n            当驾驶员检测到是否会通知的组件\r\n            <code>准备安排</code>已关闭或无效。\r\n","\r\n            Return a failure due to ":"\r\n            返回失败\r\n","java.util.logging.MemoryHandler":"java.util.logging.memoryhandler\r\n","java.util.zip.ZipEntry.clone()":"java.util.zip.zipentry.clone（）\r\n","the client may throw\n            an exception during processing":"客户可能会投掷\r\n            处理过程中的例外\r\n","javax.sql.StatementEventListener":"javax.sql.StatementEventListener\r\n","java.util.logging.LogManager.addPropertyChangeListener(java.beans.PropertyChangeListener)":"java.util.logging.logmanager.addpropertychangelistener（java.beans.propertychangelistener）\r\n","org.w3c.dom.Node.replaceChild(org.w3c.dom.Node, org.w3c.dom.Node)":"org.w3c.dom.node.replacechild（org.w3c.dom.node，org.w3c.dom.node）\r\n","HTTP \"magic-cookie\" represents a piece of state information\n that the HTTP agent and the target server can exchange to maintain \n a session.":"http“魔术 - 奇语”代表一块状态信息\r\n HTTP代理和目标服务器可以交换以维护\r\n 会话。\r\n","if this cipher instance cannot wrap this key.\n":"如果此密码实例无法包装此密钥。\r\n\r\n","javax.crypto.CipherSpi.engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)":"javax.crypto.cipherspi.engineinit（int，java.security.key，java.security.security.spec.algorithmparameterspec，java.security.securery.securerandom）\r\n","java.util.prefs.Preferences.Preferences()":"java.util.prefs.preferences.preferences（）\r\n"," for the current authorization action.\r\n            ":" 对于当前的授权行动。\r\n            \r\n","\r\n            The options for creating the outgoing cookie.\r\n            May be replace or altered during the SigningIn call.\r\n            ":"\r\n            创建传出cookie的选项。\r\n            可以在签名通话期间更换或更改。\r\n            \r\n","Process the <code>Source</code> into a <code>Transformer</code>\n            <code>Object</code>.":"处理<code>源</code>中的<code>变压器</code>\r\n            <code>对象</code>。\r\n","Enables literal parsing of the pattern.":"实现该模式的字面解析。\r\n","javax.sql.StatementEvent":"Javax.sql.StatementEvent\r\n","java.util.concurrent.Phaser.awaitAdvanceInterruptibly(int)":"java.util.concurrent.phaser.awaitadvance中断（int）\r\n","sourceDuration":"节制\r\n","INVALID_CHARACTER_ERR: Raised if one of the imported names is not\n   an XML name according to the XML version in use specified in the\n   ":"Invalid_character_err：如果导入名称之一不是\r\n   根据在使用中指定的XML版本的XML名称\r\n   \r\n","java.util.jar.Pack200":"java.util.jar.pack200\r\n","javax.xml.parsers.SAXParserFactory.getSchema()":"javax.xml.parsers.saxparserfactory.getschema（）\r\n","The version of the manifest file (a main attribute).":"清单文件的版本（主要属性）。\r\n","Validates the specified input.":"验证指定的输入。\r\n","\r\n            The authentication ticket.\r\n            ":"\r\n            身份验证票。\r\n            \r\n","Returns the number of capturing groups in this matcher's pattern.":"返回此匹配器模式中捕获组的数量。\r\n","If implementation cannot support requested values.\n":"如果实现无法支持请求的值。\r\n\r\n","java.util.concurrent.Semaphore.getQueueLength()":"java.util.concurrent.semaphore.getqueuelength（）\r\n","\r\n            Checks if consent policies should be evaluated on this request. The default is false.\r\n            ":"\r\n            检查是否应根据此请求对同意政策进行评估。默认值为false。\r\n            \r\n","\r\n            Removes all messages within this ":"删除其中的所有消息\r\n"," is null or\n             ":" 为null或\r\n             \r\n"," in their default order.":" 按照默认顺序。\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.AbstractQueuedLongSynchronizer()":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.abstractqueuedlongsynchronizer（）\r\n","java.util.logging.Logger.fine(java.util.function.Supplier)":"java.util.logging.logger.fine（java.util.function.supplier）\r\n","\r\n            Calls ":"\r\n            呼叫\r\n","java.util.concurrent.locks.ReentrantReadWriteLock.ReentrantReadWriteLock()":"java.util.concurrent.locks.reentrantreadwritelock.reentrantreadwritelock（）\r\n","org.json.JSONObject.put(java.lang.String, int)":"org.json.jsonobject.put（java.lang.string，int）\r\n","javax.xml.transform.Result.PI_DISABLE_OUTPUT_ESCAPING":"javax.xml.transform.result.pi_disable_output_escaping\r\n","javax.crypto.ExemptionMechanism.init(java.security.Key)":"javax.crypto.Exemptionmechanism.init（java.security.key）\r\n","\r\n            The key value of the key represented by the event.\r\n            If the value has a printed representation, this attribute's value is the same as the char attribute.\r\n            Otherwise, it's one of the key value strings specified in 'Key values'.\r\n            If the key can't be identified, this is the string \"Unidentified\"\r\n            ":"\r\n            事件表示的密钥的密钥值。\r\n            如果该值具有打印表示形式，则此属性的值与char属性相同。\r\n            否则，它是“钥匙值”中指定的关键值字符串之一。\r\n            如果无法识别键，这是字符串“身份不明”\r\n            \r\n","The iterator from which to obtain the next header.":"从中获得下一个标头的迭代器。\r\n","HTTP TRACE method.":"HTTP跟踪方法。\r\n","\r\n            Indicates that a named attribute should be removed from the specified frame.\r\n            ":"\r\n            指示应从指定的帧中删除指定的属性。\r\n            \r\n","Force-closes this connection.":"力量关闭这种连接。\r\n","Returns the URI corresponding to the given prefix,\n            depending on current state of the parser.":"返回对应于给定前缀的URI，\r\n            取决于解析器的当前状态。\r\n","NO_MODIFICATION_ALLOWED_ERR: Raised if this map is readonly.\n":"no_modification_allowed_err：如果该地图已阅读，则提出。\r\n\r\n"," to the expected\n            reference.":" 预期\r\n            参考。\r\n","java.util.prefs.PreferenceChangeEvent.getNewValue()":"java.util.prefs.preferencechangeevent.getNewvalue（）\r\n"," (<b>SPI</b>)\n            for the <code>TrustManagerFactory</code> class.":" （<b> spi </b>）\r\n            对于<code> TrustManagerFactory </code>类。\r\n","org.w3c.dom.NameList.getName(int)":"org.w3c.dom.namelist.getName（int）\r\n","\r\n            Indicates that the default authentication logic should be\r\n            skipped and that the rest of the pipeline should be invoked.\r\n            ":"\r\n            表示默认身份验证逻辑应为\r\n            跳过了，其余的管道应被调用。\r\n            \r\n","\r\n             Gets the validation messages within this ":"\r\n             在此内获取验证消息\r\n","javax.crypto.CipherSpi.engineSetPadding(java.lang.String)":"javax.crypto.cipherspi.enginesetpadding（java.lang.string）\r\n","Aborts this http request.":"中止此HTTP请求。\r\n","\r\n            The Y coordinate of the mouse pointer in local (DOM content) coordinates.\r\n            ":"\r\n            鼠标指针在局部（DOM含量）坐标中的Y坐标。\r\n            \r\n","java.util.function.BiPredicate.or(java.util.function.BiPredicate)":"java.util.function.bipredicate.or（java.util.function.bipredicate）\r\n","\r\n            Forbid the specified authentication scheme.\r\n            ":"\r\n            禁止指定的身份验证方案。\r\n            \r\n","Fully qualified name for XQuery 1.":"Xquery 1的完全合格名称。\r\n","Allow the application to resolve external resources.":"允许应用程序解决外部资源。\r\n","\r\n            Gets the ":"\r\n            得到\r\n","org.xml.sax.ContentHandler.setDocumentLocator(org.xml.sax.Locator)":"org.xml.sax.contenthandler.setDocumentLocator（org.xml.sax.locator）\r\n","This is the base interface for JSSE trust managers.":"这是JSSE Trust经理的基本接口。\r\n","Returns the particular property requested for in the underlying\n            implementation of ":"返回基础要求的特定属性\r\n            实施\r\n","\r\n            A cookie builder that sets ":"\r\n            饼干建造器设置\r\n","Creates a new output stream with the specified buffer size and\n            flush mode.":"使用指定的缓冲区大小和\r\n            冲洗模式。\r\n","org.xml.sax.SAXNotRecognizedException":"org.xml.sax.SaxNotRecognizedException\r\n"," on the underlying writer\r\n            with the number of uncommitted bytes.\r\n            ":" 在基础作家\r\n            与未拨款的字节数量。\r\n            \r\n","java.util.logging.LogRecord.getSourceClassName()":"java.util.logging.logrecord.getsourceclassname（）\r\n","Returns all of the keys that have an associated value in this\n            preference node.":"返回具有关联值的所有键\r\n            偏好节点。\r\n","java.util.prefs.BackingStoreException.BackingStoreException(java.lang.Throwable)":"java.util.prefs.backingstoreexception.backingstoreexception（java.lang.throwable）\r\n","in case of an http protocol error":"如果发生HTTP协议错误\r\n","os":"操作系统\r\n","java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)":"java.util.concurrent.executorservice.submit（java.util.concurrent.clable）\r\n","Queries whether any threads are waiting on the given condition\n            associated with the write lock.":"查询是否有任何线程在给定条件下等待\r\n            与写锁相关联。\r\n","java.util.zip.Inflater.end()":"java.util.zip.inflater.end（）\r\n","org.w3c.dom.NamedNodeMap.removeNamedItemNS(java.lang.String, java.lang.String)":"org.w3c.dom.namednodemap.removenameditemns（java.lang.string，java.lang.string）\r\n","A factory for <code>PooledConnection</code>\n            objects.":"<code> poolconnection </code>的工厂\r\n            对象。\r\n"," response header sent by the \n origin server to the HTTP agent in order to maintain a conversational state.":" 响应标题由\r\n 原始服务器到HTTP代理以保持对话状态。\r\n","if an error happens on the connection\n":"如果连接上发生错误\r\n\r\n","\r\n            Represents a single parameter supplied to an ":"\r\n            表示提供给一个的单个参数\r\n","Semaphore":"信号\r\n","javax.crypto.interfaces.DHPublicKey.serialVersionUID":"javax.crypto.interfaces.dhpublickey.serialversionuid\r\n"," struct,\r\n            with the same settings as this one, but with its own buffer to read from.\r\n            ":" 结构，\r\n            具有与此相同的设置，但可以从中读取自己的缓冲区。\r\n            \r\n","if the remaining input is not long enough to\n     satisfy this request.\n":"如果其余的输入不够长以至于\r\n     满足此请求。\r\n\r\n","javax.sql.RowSetListener.rowChanged(javax.sql.RowSetEvent)":"javax.sql.RowsetListener.Rowchanged（Javax.sql.Rowsetevent）\r\n","\r\n            Displays a list of validation messages for a specified field within a cascaded ":"\r\n            显示级联中指定字段的验证消息列表\r\n","java.util.function.LongToIntFunction.applyAsInt(long)":"java.util.function.longtointfunction.applyasint（long）\r\n","java.util.concurrent.Phaser.Phaser(java.util.concurrent.Phaser, int)":"java.util.concurrent.phaser.phaser（java.util.concurrent.phaser，int）\r\n","Resets this matcher with a new input sequence.":"用新的输入序列重置此匹配器。\r\n","org.json.JSONObject.toJSONArray(org.json.JSONArray)":"org.json.jsonobject.tojsonarray（org.json.jsonarray）\r\n","if command is null\n":"如果命令为null\r\n\r\n","org.json.JSONTokener.nextValue()":"org.json.jsontokener.nextvalue（）\r\n","Check if a given log record should be published.":"检查给定的日志记录是否应发布。\r\n","Returns the URI this request uses, such as\n ":"返回此请求使用的URI，例如\r\n \r\n","java.util.concurrent.atomic.AtomicInteger.getAndAdd(int)":"java.util.concurrent.atomic.atomicinteger.getandadd（int）\r\n","This flag is not supported on Android.":"此标志在Android上不支持。\r\n","java.util.jar.Attributes.keySet()":"java.util.jar.attributes.keyset（）\r\n","\r\n            Represents an authorization requirement.\r\n            ":"\r\n            代表授权要求。\r\n            \r\n","javax.net.ssl.X509TrustManager.checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String)":"javax.net.ssl.x509trustmanager.checkservertrusted（java.security.cert.x509certificate []，java.lang.string）\r\n","javax.xml.transform.dom.DOMLocator":"javax.xml.transform.dom.domlocator\r\n","Returns an array of the names of all the application layer\n            data objects bound into the Session.":"返回所有应用程序层的名称的数组\r\n            数据对象绑定到会话中。\r\n","exportNode":"导出节点\r\n","javax.net.ssl.SSLContextSpi.engineGetServerSessionContext()":"javax.net.ssl.sslcontextspi.enginegetserversessessessesseesscontext（）\r\n",", or\r\n            ":"， 或者\r\n            \r\n","java.util.regex.Pattern.UNIX_LINES":"java.util.regex.pattern.unix_lines\r\n","http://java.sun.com/jaxp/xpath/dom":"http://java.sun.com/jaxp/xpath/dom\r\n","org.w3c.dom.NamedNodeMap.removeNamedItem(java.lang.String)":"org.w3c.dom.namednodemap.removenamedItem（java.lang.string）\r\n","javax.net.ssl.HandshakeCompletedEvent.getSession()":"javax.net.ssl.handshakecomplededevent.getSession（）\r\n","Obtains the host string, without scheme prefix.":"获得主机字符串，没有方案前缀。\r\n",", or null otherwise.":"，否则为无效。\r\n","java.util.concurrent.LinkedBlockingDeque.getLast()":"java.util.concurrent.linkedblockingdeque.getlast（）\r\n","Returns the approximate total number of tasks that have ever been\n            scheduled for execution.":"返回曾经的大约任务总数\r\n            计划执行。\r\n","Computes a new duration whose value is <code>factor</code> times\n            longer than the value of this duration.":"计算一个新的持续时间，其价值为<code> factor </code>时间\r\n            比该持续时间的价值更长。\r\n","javax.security.auth.Subject.isReadOnly()":"javax.security.auth.subject.isreadonly（）\r\n","\r\n            Gets a value determining if the component and associated services have been disposed.\r\n            ":"\r\n            获得一个值，以确定是否已处理组件和关联的服务。\r\n            \r\n","\r\n            The HttpMessageHandler used to communicate with remote identity provider.\r\n            This cannot be set at the same time as BackchannelCertificateValidator unless the value \r\n            can be downcast to a WebRequestHandler.\r\n            ":"\r\n            HTTPMESSAGEHANDLER用于与远程身份提供商进行通信。\r\n            除非值\r\n            可以倒入WebRequestHandler。\r\n            \r\n","in case of an I/O problem":"如果有I/O问题\r\n","\r\n            Returns the handler instance that will be used.\r\n            ":"\r\n            返回将使用的处理程序实例。\r\n            \r\n","\r\n            Gets the execution order for the current instance of ":"\r\n            获取当前实例的执行订单\r\n","Initializes this key generator for a certain keysize, using a\n            user-provided source of randomness.":"使用一个\r\n            用户提供的随机性来源。\r\n","java.util.concurrent.atomic.AtomicStampedReference.getReference()":"java.util.concurrent.atomic.atomicstampedReference.getReference（）\r\n","Creates a new NonRepeatableEntityException with a ":"用一个\r\n","Tests whether stale connection check is to be used.":"测试是否要使用过时的连接检查。\r\n","Estimates the length of a formatted header element.":"估计格式的标头元件的长度。\r\n","newLevel":"newlevel\r\n","javax.crypto.Cipher.getInstance(java.lang.String)":"javax.crypto.cipher.getinstance（java.lang.string）\r\n","The size of the destination buffer is too small to hold the result of\n the current operation.":"目的地缓冲区的大小太小，无法保持\r\n 当前操作。\r\n","Protected constructor to force use of ":"受保护的构造函数强制使用\r\n","Returns the principal identifying the peer during the handshake.":"在握手期间返回校长识别同伴。\r\n"," value represents any realm.":" 值代表任何领域。\r\n","Get the logging message level, for example Level. -or- Set the logging message level, for example Level.":"获取记录消息级别，例如级别。 - 或 - 设置记录消息级别，例如级别。\r\n","Removes and returns the value at ":"删除并返回值\r\n","org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory()":"org.apache.http.conn.ssl.sslsocketfactory.getSocketFactory（）\r\n","Instances of this class represent a server name in a Server Name\n            Indication (SNI) extension.":"此类的实例表示服务器名称中的服务器名称\r\n            指示（SNI）扩展。\r\n","Returns a socket connected to the given host that is layered over an\n existing socket.":"返回连接到给定主机的插座，该插座分层\r\n 现有插座。\r\n","Moves all threads from the wait queue for this condition to\n the wait queue for the owning lock.":"将所有线程从等待队列移动到此情况\r\n 等待队列的所有锁。\r\n","Releases the given number of permits, returning them to the semaphore.":"释放给定数量的许可证，将其返回信号量。\r\n","\r\n            Provides the appropriate IAuthenticationHandler instance for the authenticationScheme and request.\r\n            ":"\r\n            为AuthenticationsCheme和请求提供适当的IauthenticationHandler实例。\r\n            \r\n","Interface for formatting elements of the HEAD section of an HTTP message.":"用于格式化HTTP消息头部元素的接口。\r\n","Set the Namespace URI of a specific attribute.":"设置特定属性的名称空间URI。\r\n","\r\n            The Access-Control-Max-Age response header.\r\n            ":"\r\n            访问控制响应标头。\r\n            \r\n"," or value is not\n                a ":" 或价值不是\r\n                一个\r\n"," header should be \n rejected.":" 标题应该是\r\n 被拒绝。\r\n","Retrieves and removes the first element of this deque, waiting\n if necessary until an element becomes available.":"检索并删除此Deque的第一个元素，等待\r\n 如有必要，直到元素可用。\r\n","javax.xml.validation.ValidatorHandler.setProperty(java.lang.String, java.lang.Object)":"javax.xml.validation.validatorhandler.setproperty（java.lang.string，java.lang.object）\r\n","If the lock state matches the given stamp, atomically performs one of\n            the following actions.":"如果锁定状态与给定的邮票匹配，则在原子上执行其中之一\r\n            以下动作。\r\n","\r\n            Gets the methods that are supported by the resource.\r\n            ":"\r\n            获取资源支持的方法。\r\n            \r\n","javax.crypto.interfaces.DHPublicKey.getY()":"javax.crypto.interfaces.dhpublickey.gety（）\r\n"," represents time durations at a given unit of\n            granularity and provides utility methods to convert across units,\n            and to perform timing and delay operations in these units.":" 代表给定单元的时间持续时间\r\n            粒度性并提供实用方法来转换跨单位，\r\n            并在这些单元中执行时间和延迟操作。\r\n","Returns the port number of the peer of this session.":"返回本会话的对等方的端口号。\r\n","if the algorithm to decrypt the data is not available.":"如果无法解密数据的算法。\r\n","javax.net.ssl.KeyStoreBuilderParameters.KeyStoreBuilderParameters(java.security.Builder)":"Javax.net.ssl.KeystoreBuilderParameters.KeystoreBuilderParameters（Java.security.builder）\r\n"," where the data starts.\r\n            ":" 数据启动的地方。\r\n            \r\n","\r\n            Represents a segment of UI content, implemented as a delegate that\r\n            writes the content to a ":"\r\n            代表UI内容的一部分，以代表的形式实现\r\n            将内容写入\r\n","remove(String)":"删除（字符串）\r\n","ReadWriteLock#writeLock()":"ReadWritelock＃Writelock（）\r\n","Get the localization resource bundle -or- Set the localization resource bundle.":"获取本地化资源束 - 或设置本地化资源捆绑包。\r\n","startElement":"开始\r\n"," is not set, this property is not used.\r\n            ":" 未设置，此属性不使用。\r\n            \r\n","\n            returns true when passed this value as an argument,\n            the Transformer supports Result output of this type.":"\r\n            当通过此值作为参数时返回true，\r\n            变压器支持此类型的结果输出。\r\n","javax.crypto.KeyGenerator.init(int, java.security.SecureRandom)":"javax.crypto.keygenerator.init（int，java.security.securerandom）\r\n","Returns an estimate of the number of consumers waiting to\n receive elements via ":"返回对等待消费者数量的估计\r\n 通过\r\n","java.util.prefs.InvalidPreferencesFormatException":"java.util.prefs.invalidpreferencesformatexception\r\n","javax.crypto.ExemptionMechanismSpi.engineGetOutputSize(int)":"javax.crypto.ExemptionMechanismspi.enginegetoutputsize（int）\r\n","es the \n given host name resolves to.":"es\r\n 给定主机名解散。\r\n","javax.security.cert.X509Certificate.getInstance(java.io.InputStream)":"javax.security.cert.x509certificate.getInstance（java.io.inputstream）\r\n"," using the message code ":" 使用消息代码\r\n","if the underlying implementation does not support cloning.\n":"如果基础实现不支持克隆。\r\n\r\n","Disables the current thread for thread scheduling purposes, until\n            the specified deadline, unless the permit is available.":"禁用当前线程以进行线程调度目的，直到\r\n            指定的截止日期，除非有许可证可用。\r\n","Returns a <code>NodeList</code> of all the descendant\n            <code>Elements</code> with a given local name and namespace URI in\n            document order.":"返回所有后代的<code> Nodelist </code>\r\n            <code> Elements </code>带有给定的本地名称和名称空间URI\r\n            文件订单。\r\n","java.util.concurrent.CompletionStage.whenCompleteAsync(java.util.function.BiConsumer, java.util.concurrent.Executor)":"java.util.concurrent.completionstage.whencompleasync（java.util.function.biconsumer，java.util.concurrent.executor）\r\n","if this engine did not receive a needed protocol specific\n             close notification message from the peer.\n":"如果该引擎未收到所需协议的特定协议\r\n             关闭同伴的通知消息。\r\n\r\n","java.util.zip.Inflater.inflate(byte[])":"java.util.zip.inflater.inflate（byte []）\r\n","Returns an <code>ExemptionMechanism</code> object that implements the\n            specified exemption mechanism algorithm.":"返回<code>豁免机构</code>实现的对象\r\n            指定的豁免机制算法。\r\n","Filter an end element event.":"过滤最终元素事件。\r\n","org.xml.sax.ext.DefaultHandler2.DefaultHandler2()":"org.xml.sax.ext.defaulthandler2.defaulthandler2（）\r\n","java.util.zip.Adler32.update(int)":"java.util.zip.adler32.update（int）\r\n","putInt":"Putint\r\n","org.xml.sax.helpers.DefaultHandler.fatalError(org.xml.sax.SAXParseException)":"org.xml.sax.helpers.defaulthandler.fatalerror（org.xml.sax.sax.saxparseexception）\r\n",",\r\n            gets the attribute name. Otherwise, the value is undefined.\r\n            ":"，，，，\r\n            获取属性名称。否则，该值是未定义的。\r\n            \r\n","\r\n             Authenticate the user identity with the identity provider.\r\n            \r\n             The method process the request on the endpoint defined by CallbackPath.\r\n             ":"\r\n             用身份提供商对用户身份进行身份验证。\r\n            \r\n             该方法处理由回调路径定义的端点上的请求。\r\n             \r\n","Reset this <code>XPath</code> to its original configuration.":"将此<code> XPath </code>重置为其原始配置。\r\n","org.json.JSONObject.getInt(java.lang.String)":"org.json.jsonobject.getint（java.lang.string）\r\n","java.util.concurrent.locks.ReentrantLock.unlock()":"java.util.concurrent.locks.reentrantlock.unlock（）\r\n","java.util.prefs.AbstractPreferences.removeSpi(java.lang.String)":"java.util.prefs.abstractpreferences.removespi（java.lang.string）\r\n","javax.net.ssl.SSLParameters.setNeedClientAuth(boolean)":"javax.net.ssl.sslparameters.setneedclientauth（布尔值）\r\n","if the cipher does not support AEAD":"如果密码不支持AEAD\r\n","For START_TAG or END_TAG events, the (local) name of the current\n element is returned when namespaces are enabled.":"对于start_tag或end_tag事件，当前的（本地）名称\r\n 启用名称空间时返回元素。\r\n","Get the value of an attribute (by position).":"获取属性的值（按位置）。\r\n","Interface for an element's attribute specifications.":"元素属性规范的接口。\r\n","\r\n            Invokes the given ":"\r\n            调用给定\r\n","Condition implementation for a ":"条件实施\r\n","Create a <code>Duration</code> of type <code>xdt:dayTimeDuration</code> using the specified\n            <code>day</code>, <code>hour</code>, <code>minute</code> and <code>second</code> as defined in\n            <a href=\"http://www.":"创建<code>持续时间</code> type <code> xdt：dayTimeduration </code>使用指定的\r\n            <code> day </code>，<code>小时</code>，<code> minute </code>和<code> second </code>，如下定义\r\n            <a href =“ http：//www。\r\n","lexicalRepresentation":"词汇陈述\r\n","At least one role must be specified.":"必须指定至少一个角色。\r\n","java.util.function.BinaryOperator":"java.util.function.BinaryOperator\r\n","Return the current entity resolver.":"返回当前实体解析器。\r\n","Compresses the input data and fills specified buffer with compressed\n            data.":"压缩输入数据，并用压缩填充指定的缓冲区\r\n            数据。\r\n"," determines if the browser should allow the cookie to be accessed by client-side javascript.\r\n            The default is true, which means the cookie will only be passed to http requests and is not made available to script on the page.\r\n            ":" 确定浏览器是否应允许客户端JavaScript访问cookie。\r\n            默认值为真，这意味着cookie仅将其传递给HTTP请求，并且在页面上不提供脚本。\r\n            \r\n","Used only by subclasses.":"仅由子类使用。\r\n","\r\n            A thread-safe, alloc-free reusable object pool.\r\n            ":"\r\n            线程安全，无分配可重复使用的对象池。\r\n            \r\n","javax.sql.RowSetMetaData":"Javax.sql.RowsetMetadata\r\n"," node, this exception might be raised\n   if the DOM implementation doesn't support the removal of the\n   ":" 节点，可能会提出这个例外\r\n   如果DOM实施不支持去除\r\n   \r\n","Constructor for the derived class.":"派生类的构造函数。\r\n","java.util.prefs.Preferences.userNodeForPackage(java.lang.Class)":"java.util.prefs.preferences.usernodeforpackage（java.lang.class）\r\n"," that represents this instance.\r\n            ":" 这代表此实例。\r\n            \r\n","org.xml.sax.helpers.XMLReaderAdapter.setDocumentLocator(org.xml.sax.Locator)":"org.xml.sax.helpers.xmlreaderadapter.setDocumentLocator（org.xml.sax.locator）\r\n","javax.crypto.Cipher.ENCRYPT_MODE":"javax.crypto.cipher.encrypt_mode\r\n","Checks if a boolean parameter is not set or <code>false</code>.":"检查布尔参数是否未设置或<code> false </code>。\r\n"," of public credentials held by this\n            ":" 由此持有的公共证书\r\n            \r\n","Interface for parsing header values into elements.":"将标头值分解为元素的接口。\r\n","A function that folds a value into a mutable result container.":"将值折叠成可变结果容器的函数。\r\n","Queries the number of reentrant write holds on this lock by the\n            current thread.":"查询重入写作的数量，由此锁定\r\n            当前线程。\r\n","Returns the number of additional elements that this deque can ideally\n            (in the absence of memory or resource constraints) accept without\n            blocking.":"返回该Deque理想情况下可以的其他元素的数量\r\n            （在没有内存或资源约束的情况下）接受\r\n            阻止。\r\n","org.w3c.dom.ls.DOMImplementationLS":"org.w3c.dom.ls.l.domimplementationls\r\n","\r\n            Implementation of ":"\r\n            实施\r\n",", grouping elements according to a\n            classification function, and then performing a reduction operation on\n            the values associated with a given key using the specified downstream\n            ":"，根据一个\r\n            分类功能，然后在\r\n            使用指定下游的给定键关联的值\r\n            \r\n","Gets a result.":"得到结果。\r\n","\r\n            Get a string value from the ":"\r\n            从\r\n","if the comment is >= 64 Ki UTF-8 bytes.\n":"如果评论为> = 64 ki utf-8字节。\r\n\r\n","NamedNodeMap":"名为nodemap\r\n","javax.net.ssl.TrustManagerFactory.getInstance(java.lang.String, java.security.Provider)":"javax.net.ssl.trustmanagerfactory.getinstance（java.lang.string，java.security.provider）\r\n","javax.sql.PooledConnection":"javax.sql.pooledconnection\r\n"," if it exists and is a double or can\n            be coerced to a double.":" 如果存在并且是双重或可以\r\n            被强迫到双重。\r\n","Represents an operation on a single ":"代表单个操作\r\n","org.xml.sax.helpers.ParserAdapter.getDTDHandler()":"org.xml.sax.helpers.parseradapter.getdtdhandler（）\r\n"," was unable to load\n   the XML fragment. DOM applications should attach a\n   ":" 无法加载\r\n   XML片段。 DOM应用程序应附加\r\n   \r\n","java.util.concurrent.ScheduledThreadPoolExecutor.getContinueExistingPeriodicTasksAfterShutdownPolicy()":"java.util.concurrent.scheduledthreadpoolexecutor.getContinueExistingPerioDictaskSaftersHutDownPolicy（）\r\n","\r\n            Append the given cookie to the response.\r\n            ":"\r\n            将给定的cookie附加到响应中。\r\n            \r\n","Atomically sets the value of both the reference and mark\n            to the given update values if the\n            current reference is ":"原子设置参考和标记的值\r\n            如果是\r\n            当前参考为\r\n",". Its display\r\n            will be populated using the specified ":"。它的显示\r\n            将使用指定的\r\n","\r\n            An array of ":"\r\n            一系列\r\n","DOMErrorHandler":"Domerrorhandler\r\n","java.util.zip.Deflater.getBytesRead()":"java.util.zip.deflater.getBytesRead（）\r\n","Evaluate the function with the specified arguments.":"用指定的参数评估功能。\r\n","NullPointerExceptions":"NullPoInterExcept\r\n","javax.crypto.Mac.update(byte)":"javax.crypto.mac.update（字节）\r\n","Creates a new route with at most one proxy.":"最多可以使用代理创建新路线。\r\n",".\r\n            ":"。\r\n            \r\n","Construct a new, empty Attributes2Impl object.":"构建一个新的空属性2IMPL对象。\r\n","org.w3c.dom.Attr":"org.w3c.dom.attr\r\n","java.util.stream.Collector.characteristics()":"java.util.stream.collector.characteristics（）\r\n","java.util.concurrent.atomic.AtomicLongArray.get(int)":"java.util.concurrent.atomic.atomiclongarray.get（int）\r\n","Interface for deciding how long a connection can remain\n idle before being reused.":"确定连接可以保留多长时间的接口\r\n 在重复使用之前闲置。\r\n","\r\n            Gets or sets the current value of the input.\r\n            ":"\r\n            获取或设置输入的当前值。\r\n            \r\n","java.util.concurrent.atomic.AtomicLongArray.AtomicLongArray(int)":"java.util.concurrent.atomic.atomiclongarray.atomiclongarray（int）\r\n","Encrypts or decrypts data in a single-part operation, or finishes a\n            multiple-part operation.":"在单部分操作中加密或解密数据，或完成\r\n            多部分操作。\r\n","\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for ":"\r\n            如果用户获得授权，将显示的内容。\r\n            如果指定此参数的值，请勿指定\r\n","(this.isUserNode() ? \"User\" :\n            \"System\") + \" Preference Node: \" + this.absolutePath()":"（this.isusernode（）？“用户”：\r\n            “系统”） +“偏好节点：” + this.absolutepath（）\r\n","javax.net.ServerSocketFactory.createServerSocket(int, int)":"javax.net.serversocketFactory.Createserversocket（int，int）\r\n"," with the supplied policy name.\r\n            ":" 带有提供的策略名称。\r\n            \r\n","\r\n            If a ticket was produced, authenticate was successful.\r\n            ":"\r\n            如果制作了票，则身份验证是成功的。\r\n            \r\n","javax.security.auth.x500.X500Principal.getName()":"javax.security.auth.x500.x500principal.getName（）\r\n","java.util.concurrent.locks.Condition.awaitNanos(long)":"java.util.concurrent.locks.condition.awaitnanos（long）\r\n","java.util.zip.ZipEntry.setSize(long)":"java.util.zip.zipentry.setsize（long）\r\n"," iff this node (or an ancestor) has been\n            removed with the ":" 如果这个节点（或祖先）已经\r\n            用\r\n"," with the\n            given fairness policy.":" 与\r\n            给定公平政策。\r\n","java.util.stream.Collectors.counting()":"java.util.stream.collectors.counting（）\r\n","Get the unrecognized ":"得到未认识的\r\n","javax.xml.xpath.XPath.evaluate(java.lang.String, java.lang.Object)":"javax.xml.xpath.xpath.evaluate（java.lang.string，java.lang.Object）\r\n","\r\n            A multiline input component for editing ":"\r\n            用于编辑的多行输入组件\r\n","javax.net.ssl.KeyManagerFactorySpi":"javax.net.ssl.keymanagerfactoryspi\r\n","\n            value updated using a supplied function.":"\r\n            使用提供的功能更新的值。\r\n","javax.net.ssl.X509KeyManager.getClientAliases(java.lang.String, java.security.Principal[])":"javax.net.ssl.x509Keymanager.getClientaliases（java.lang.string，java.security.principal []）\r\n","\r\n            The handler should initialize anything it needs from the request and scheme here.\r\n            ":"\r\n            处理程序应在此处从请求和方案中初始化所需的任何内容。\r\n            \r\n","Constructs a parameter set for RC5 from the given version, number of\n            rounds and word size (in bits).":"从给定版本构造RC5的参数集\r\n            圆形和单词大小（位于位）。\r\n","This method is invoked with this node locked.":"此方法被此节点锁定。\r\n","\r\n            Renders a form element that cascades an ":"\r\n            呈现一个级联的形式元素\r\n","org.w3c.dom.Element.setAttributeNodeNS(org.w3c.dom.Attr)":"org.w3c.dom.element.setattributenodens（org.w3c.dom.attr）\r\n","java.util.jar.JarFile.JarFile(java.io.File, boolean, int)":"java.util.jar.jarfile.jarfile（java.io.file，boolean，int）\r\n","org.xml.sax.HandlerBase.resolveEntity(java.lang.String, java.lang.String)":"org.xml.sax.handlerbase.resolveentity（java.lang.string，java.lang.string）\r\n","\r\n            Supplies updated authentication state data to the ":"\r\n            提供已更新的身份验证状态数据\r\n","Returns the default socket timeout (":"返回默认插座超时（\r\n","java.util.zip.ZipEntry.setMethod(int)":"java.util.zip.zipentry.setMethod（int）\r\n","java.util.zip.ZipOutputStream.setLevel(int)":"java.util.zip.zipoutputstream.setlevel（int）\r\n","org.apache.http.conn.ssl.X509HostnameVerifier.verify(java.lang.String, java.lang.String[], java.lang.String[])":"org.apache.http.conn.ssl.x509hostnameverifier.verify（java.lang.string，java.lang.string []，java.lang.string []）\r\n","The number of 16-bit units that are available through ":"可通过的16位单元的数量\r\n","Gets the handshake status of this <code>SSLEngine</code>\n            operation.":"获取此<code> sslengine </code>的握手状态\r\n            手术。\r\n","javax.xml.datatype.DatatypeConstants.GYEARMONTH":"javax.xml.datatype.datatypeconstants.gyearmonth\r\n","org.w3c.dom.Node.DOCUMENT_POSITION_CONTAINS":"org.w3c.dom.node.document_position_contains\r\n","Transformer":"变压器\r\n","Set a parser property.":"设置解析器属性。\r\n","javax.crypto.spec.RC2ParameterSpec":"javax.crypto.spec.rc2parameterspec\r\n","org.xmlpull.v1.XmlPullParser.nextTag()":"org.xmlpull.v1.xmlpullparser.nexttag（）\r\n","Receive notification of the beginning of a document.":"收到文档开头的通知。\r\n","OPEN_FAILURE is used when an open of an output stream fails.":"当输出流的打开失败时，使用Open_Failure。\r\n","javax.crypto.CipherSpi.engineDoFinal(byte[], int, int)":"javax.crypto.cipherspi.enginedinofinal（byte []，int，int）\r\n","javax.xml.transform.TransformerConfigurationException.TransformerConfigurationException(java.lang.Throwable)":"javax.xml.transform.transformerconfigurationexception.transformerconfigurationException（java.lang.throw.throwable）\r\n","\r\n            Configures options for binding specific element types.\r\n            ":"\r\n            配置用于绑定特定元素类型的选项。\r\n            \r\n","\r\n            Defaults to 0.\r\n            ":"默认为0。\r\n            \r\n","java.util.concurrent.Phaser.getPhase()":"java.util.concurrent.phaser.getphase（）\r\n","Creates a ExemptionMechanism object.":"创建豁免机构对象。\r\n","Add a named logger.":"添加一个命名的记录器。\r\n","Allow an application to register a custom entity resolver.":"允许应用程序注册自定义实体解析器。\r\n","java.util.concurrent.Phaser.Phaser()":"java.util.concurrent.phaser.phaser（）\r\n","java.util.zip.Checksum.update(byte[], int, int)":"java.util.zip.checksum.update（byte []，int，int）\r\n","java.util.concurrent.atomic.LongAccumulator.get()":"java.util.concurrent.atomic.longaccumulator.get（）\r\n","org.xmlpull.v1.XmlPullParser.getFeature(java.lang.String)":"org.xmlpull.v1.xmlpullparser.getFeature（java.lang.string）\r\n",", clobbering any existing name/value\n            mapping with the same name.":"，抓住任何现有的名称/值\r\n            用相同名称的映射。\r\n","if the regular expression is syntactically incorrect.":"如果正则表达式在句法上不正确。\r\n","Indicates whether or not this parser is configured to\n understand namespaces.":"指示该解析器是否配置为\r\n 了解名称空间。\r\n","SAX2 extension handler for lexical events.":"SAX2扩展处理程序用于词汇事件。\r\n","java.util.concurrent.CompletionStage.applyToEitherAsync(java.util.concurrent.CompletionStage, java.util.function.Function)":"java.util.concurrent.completionstage.applytoeitherasync（java.util.concurrent.completionstage，java.util.function.function.function）\r\n","java.util.concurrent.atomic.AtomicInteger.lazySet(int)":"java.util.concurrent.atomic.atomicinteger.lazyset（int）\r\n","The antiforgery system has the configuration value {optionName} = {value}, but the current request is not an SSL request.":"抗试验系统具有配置值{optionName} = {value}，但是当前请求不是SSL请求。\r\n","This class specifies the source for encoding input P in OAEP Padding,\n            as defined in the\n            <a href=\"http://www.":"此类指定在OAEP填充中编码输入P的来源，\r\n            如在\r\n            <a href =“ http：//www。\r\n","Compressor for this stream.":"该流的压缩机。\r\n","The SAX parser class\n            was found and instantiated, but does not implement\n            org.xml.sax.Parser.":"萨克斯解析器类\r\n            被发现和实例化，但没有实施\r\n            org.xml.sax.parser。\r\n","java.util.function.Predicate.or(java.util.function.Predicate)":"java.util.function.predicate.or（java.util.function.predicate）\r\n","Tells the length of the content, if known.":"说明内容的长度，如果已知。\r\n","NOT_SUPPORTED_ERR: Raised if the type of node being imported is not\n   supported.\n   ":"not_supported_err：如果导入的节点的类型不是\r\n   支持的。\r\n   \r\n","Removes all of the preferences (key-value associations) in this\n            preference node.":"删除此处的所有偏好（键值关联）\r\n            偏好节点。\r\n","Create an HTTP protocol version designator.":"创建HTTP协议版本指定器。\r\n","Attributes":"属性\r\n","Perform work as a particular ":"执行特定的工作\r\n","java.util.prefs.BackingStoreException":"java.util.prefs.backingstoreexception\r\n","Simple file logging ":"简单的文件记录\r\n","java.util.concurrent.LinkedBlockingDeque.iterator()":"java.util.concurrent.linkedblockingdeque.iterator（）\r\n","java.util.concurrent.ScheduledThreadPoolExecutor.decorateTask(java.lang.Runnable, java.util.concurrent.RunnableScheduledFuture)":"java.util.concurrent.scheduledthreadpoolexecutor.decoratetask（java.lang.runnable，java.util.concurrent.runnablescheduledfuture）\r\n","java.util.concurrent.atomic.AtomicInteger.compareAndSet(int, int)":"java.util.concurrent.atomic.atomicinteger.compareandset（int，int）\r\n","org.w3c.dom.ls.DOMImplementationLS.createLSParser(short, java.lang.String)":"org.w3c.dom.ls.domimplementationls.createlsparser（简短，java.lang.string）\r\n","Indicates whether this cookie requires a secure connection.":"指示此cookie是否需要安全连接。\r\n","Returns the double value represented by the string associated with the\n            specified key in this preference node.":"返回由与之关联的字符串表示的双重值\r\n            在此偏好节点中指定键。\r\n","#tryReleaseShared":"#tryreleaseshared\r\n","javax.sql.RowSetEvent":"Javax.sql.Rowsetevent\r\n","javax.xml.datatype.Duration.isSet(javax.xml.datatype.Field)":"javax.xml.datatype.duration.isset（javax.xml.datatype.field）\r\n"," to the array already mapped to ":" 到已经映射到的数组\r\n","ScheduledFuture":"计划future\r\n","Returns an equivalent stream that is\n            <a href=\"package-summary.":"返回等效流\r\n            <a href =“软件包 - 萨默里。\r\n","\r\n            Checks if a user meets a specific authorization policy against the specified resource.\r\n            ":"\r\n            检查用户是否符合指定资源的特定授权策略。\r\n            \r\n","javax.xml.XMLConstants.W3C_XML_SCHEMA_INSTANCE_NS_URI":"javax.xml.xmlconstants.w3c_xml_schema_instance_ns_uri\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getQueuedThreads()":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.getQueuedThreads（）\r\n"," will be default if failed (due to lack of space).\r\n            ":" 如果失败（由于缺乏空间，将是默认值）。\r\n            \r\n","java.util.logging.Logger.getUseParentHandlers()":"java.util.logging.logger.getuseparenthandlers（）\r\n","org.xml.sax.ErrorHandler.error(org.xml.sax.SAXParseException)":"org.xml.sax.Errandler.Error（org.xml.sax.saxparseexception）\r\n","\r\n            Used to communicate with the remote identity provider.\r\n            ":"\r\n            用于与远程身份提供商进行通信。\r\n            \r\n","\r\n            Delete all claims from the ClaimsIdentity with the given claimTypes.\r\n            ":"\r\n            用给定的索赔类型从索赔认证中删除所有索赔。\r\n            \r\n","Returns the total number of compressed bytes output so far.":"返回到目前为止的压缩字节总数。\r\n","java.util.prefs.PreferenceChangeEvent.getKey()":"java.util.prefs.preferencechangeevent.getKey（）\r\n","A streamed entity obtaining content from an ":"流媒体实体从\r\n","java.util.function.DoubleUnaryOperator.compose(java.util.function.DoubleUnaryOperator)":"java.util.function.doubleunaryoperator.compose（java.util.function.doubleunaryoperator）\r\n","\r\n            Assigns this (recyclable) segment a new area in memory.\r\n            ":"\r\n            分配此（可回收）段中的一个新区域。\r\n            \r\n","Obtains the default port.":"获得默认端口。\r\n","ObjectName":"对象名称\r\n","\r\n            A ClaimAction that selects the value from the json user data by running the given Func resolver.\r\n            ":"\r\n            通过运行给定的FUNC解析器，从JSON用户数据中选择值的索赔。\r\n            \r\n","Returns the principal that was sent to the peer during handshaking.":"返回握手期间发送给同伴的校长。\r\n","If the embedded driver\n            cannot be instantiated or if the\n            org.xml.sax.parser property is not specified.\n":"如果嵌入式驱动程序\r\n            不能实例化或\r\n            org.xml.sax.parser属性未指定。\r\n\r\n","\r\n            Makes a decision if authorization is allowed based on the claims requirements specified.\r\n            ":"\r\n            如果根据指定的索赔要求允许授权，则做出决定。\r\n            \r\n","java.util.concurrent.ExecutorService.invokeAll(java.util.Collection, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.executorservice.invokeall（java.util.collection，long，java.util.concurrent.timeunit）\r\n","java.util.function.DoubleToLongFunction.applyAsLong(double)":"java.util.function.doubletotolongfunction.applyaslong（double）\r\n"," that is encapsulated by the\n implementation of this class.":" 这是由\r\n 实施此类。\r\n","Filter a skipped entity event.":"过滤跳过的实体事件。\r\n","\r\n            Generates and validates antiforgery tokens.\r\n            ":"\r\n            生成和验证抗抗外象令牌。\r\n            \r\n","The constructor with the username and password arguments.":"具有用户名和密码参数的构造函数。\r\n","If a parameter or an operation is not supported by the underlying\n            object.":"如果基础不支持参数或操作\r\n            目的。\r\n","if a Transformer can not be created.\n":"如果无法创建变压器。\r\n\r\n"," with the\n            specified cause.":"与\r\n            指定原因。\r\n","Creates a new CircularRedirectException with the specified detail message.":"使用指定的详细信息创建一个新的CignularRedirectException。\r\n","org.w3c.dom.Node.cloneNode(boolean)":"org.w3c.dom.node.clonenode（boolean）\r\n","Checks whether this protocol can be compared to another one.":"检查是否可以将此协议与另一个协议进行比较。\r\n","javax.xml.transform.TransformerFactoryConfigurationError":"javax.xml.transform.transformerfactoryConfigurationError\r\n"," in []\n   ).\n   ":" 在 []\r\n   ）。\r\n   \r\n","java.util.function.DoubleUnaryOperator":"java.util.function.doubleunaryaryoperator\r\n","Returns the maximum allowed number of threads. -or- Sets the maximum allowed number of threads.":"返回最大允许的线程数。 - 或设置最大允许的线程数。\r\n","408 Request Timeout":"408请求超时\r\n","org.xml.sax.helpers.DefaultHandler.startPrefixMapping(java.lang.String, java.lang.String)":"org.xml.sax.helpers.defaulthandler.startprefixmapping（java.lang.string，java.lang.string）\r\n","\r\n            A base class for components that display differing content depending on the user's authorization status.\r\n            ":"\r\n            根据用户的授权状态显示不同内容的组件的基类。\r\n            \r\n","org.xml.sax.helpers.XMLReaderAdapter.setDocumentHandler(org.xml.sax.DocumentHandler)":"org.xml.sax.helpers.xmlreaderadapter.setDocumentHandler（org.xml.sax.documenthandler）\r\n","java.util.logging.StreamHandler.flush()":"java.util.logging.streamhandler.flush（）\r\n","java.util.function.ToDoubleFunction":"java.util.function.todoublefunction\r\n",", grouping elements\n            according to a classification function, and then performing a reduction\n            operation on the values associated with a given key using the specified\n            downstream ":"，分组元素\r\n            根据分类功能，然后进行还原\r\n            使用指定的与给定键关联的值操作\r\n            下游\r\n","java.util.logging.Handler.isLoggable(java.util.logging.LogRecord)":"java.util.logging.handler.isloggable（java.util.logging.logrocord）\r\n","java.util.logging.Handler.setLevel(java.util.logging.Level)":"java.util.logging.handler.setlevel（java.util.logging.Level）\r\n","javax.xml.transform.sax.SAXSource.sourceToInputSource(javax.xml.transform.Source)":"javax.xml.transform.sax.saxsource.sourcetoinputsource（javax.xml.transform.source）\r\n","A stream wrapper that triggers actions on ":"触发动作的流包装器\r\n","\r\n            Indicates that the edit position should move inside the specified frame.\r\n            ":"\r\n            表示编辑位置应在指定的帧内移动。\r\n            \r\n"," for which the results of a preflight request can be cached.\r\n            ":" 为此，可以缓存飞行前请求的结果。\r\n            \r\n","Set to use binary output stream with given encoding.":"设置为使用给定编码的二进制输出流。\r\n","org.xml.sax.SAXException.getException()":"org.xml.sax.saxexception.getException（）\r\n","javax.sql.RowSet.setDouble(java.lang.String, double)":"javax.sql.Rowset.setDouble（java.lang.string，double）\r\n","Returns an estimate of the number of threads waiting on\n this condition.":"返回等待线程数量的估计值\r\n 这种情况。\r\n","\r\n            Gets or sets the next segment in the singly linked list of segments.\r\n            ":"\r\n            获取或设置单个细分列表中的下一个细分市场。\r\n            \r\n","When the\n            ":"当。。。的时候\r\n            \r\n","javax.crypto.MacSpi.engineUpdate(byte[], int, int)":"javax.crypto.macspi.engineupdate（byte []，int，int）\r\n","javax.crypto.spec.DHPrivateKeySpec.getP()":"javax.crypto.spec.dhprivatekeyspec.getp（）\r\n","Returns a new <code>Duration</code> object whose\n            value is <code>-this</code>.":"返回新的<code>持续时间</code>对象\r\n            值是<code> -this </code>。\r\n","java.util.stream.Collectors.toMap(java.util.function.Function, java.util.function.Function)":"java.util.stream.collectors.tomap（java.util.function.function，java.util.function.function.function）\r\n","if there are no more headers\n":"如果没有更多的标题\r\n\r\n","206 Partial Content":"206部分内容\r\n","The management interface for the logging facility.":"伐木设施的管理接口。\r\n","\r\n            Backing for the entire sequence when we're not using ":"\r\n            当我们不使用时，整个序列的备份\r\n","Returns the comment describing the purpose of this cookie, or\n ":"返回描述此cookie目的的评论，或\r\n \r\n","Set-Cookie":"set-cookie\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.AbstractQueuedSynchronizer()":"java.util.concurrent.locks.abstractqueuedsynchronizer.abstractqueuedsynchronizer（）\r\n","javax.xml.namespace.QName.hashCode()":"javax.xml.namespace.qname.hashcode（）\r\n","javax.net.ssl.SSLParameters.getProtocols()":"javax.net.ssl.sslparameters.getProtocols（）\r\n","\r\n            Append a delete cookie to the response.\r\n            ":"\r\n            将删除cookie附加到响应中。\r\n            \r\n","A class that can be used to compute the CRC-32 of a data stream.":"可以用于计算数据流的CRC-32的类。\r\n","java.util.regex.Pattern.CASE_INSENSITIVE":"java.util.regex.pattern.case_insentive\r\n","org.xml.sax.helpers.XMLFilterImpl.characters(char[], int, int)":"org.xml.sax.helpers.xmlfilterimpl.Characters（char []，int，int）\r\n","\r\n            Default constructor for a CorsPolicy.\r\n            ":"\r\n            Corspolicy的默认构造函数。\r\n            \r\n","java.util.stream.Collectors.toSet()":"java.util.stream.collectors.toset（）\r\n","Default Object Model URI.":"默认对象模型URI。\r\n","Acquires the lock only if it is not held by another thread at the time\n            of invocation.":"仅在当时没有其他线程的情况下才能获取锁\r\n            调用。\r\n","\r\n            The handler calls methods on the events which give the application control at certain points where processing is occurring.\r\n            If it is not provided a default instance is supplied which does nothing when the methods are called.\r\n            ":"\r\n            处理程序在事件上调用方法，这些方法在处理处理的某些点为应用程序控制提供了。\r\n            如果没有提供，则提供默认实例，当调用方法时什么都不执行。\r\n            \r\n","Interface to be implemented by objects that can resolve \n ":"可以解决的对象实现的接口\r\n \r\n","if the specified key specification cannot be used to generate\n             a secret key.\n":"如果指定的密钥规范不能用于生成\r\n             秘密钥匙。\r\n\r\n","A handler for rejected tasks that discards the oldest unhandled\n request and then retries ":"拒绝任务的处理程序，该任务丢弃了最古老的未手持的任务\r\n 请求然后重试\r\n","Gets the <code>HostnameVerifier</code> in place on this instance. -or- Sets the <code>HostnameVerifier</code> for this instance.":"在此实例上获取<code> hostNameVerifier </code>。 - 或 - 为此实例设置<code> hostNameVerifier </code>。\r\n","Returns true if the named preference node exists in the same tree\n            as this node.":"如果命名偏好节点存在于同一树中，则返回true\r\n            作为这个节点。\r\n","Get the character encoding for a byte stream or URI. -or- Set the character encoding, if known.":"获取字节流或URI的字符编码。 - 或 - 设置字符编码（如果已知）。\r\n","#tryAcquire":"#tryacquire\r\n","java.util.concurrent.Phaser.getParent()":"java.util.concurrent.phaser.getParent（）\r\n","java.util.logging.LogManager.addLogger(java.util.logging.Logger)":"java.util.logging.logmanager.addlogger（java.util.logging.logger）\r\n","org.xml.sax.helpers.DefaultHandler.error(org.xml.sax.SAXParseException)":"org.xml.sax.helpers.defaulthandler.error（org.xml.sax.sax.saxparseexception）\r\n","This class extends the SAX2 base handler class to support the\n            SAX2 ":"此类扩展了SAX2基本处理程序类，以支持\r\n            SAX2\r\n","The official XML attribute used for specifying XML Namespace\n            declarations.":"用于指定XML名称空间的官方XML属性\r\n            声明。\r\n","doctype-public = <var>string</var>.":"Doctype-public = <var>字符串</var>。\r\n","javax.sql.RowSet.setBinaryStream(int, java.io.InputStream)":"javax.sql.Rowset.setBinarystream（int，java.io.inputstream）\r\n","Create a <code>SAXSource</code>, using an ":"创建<code> saxsource </code>\r\n","Log a FINEST message, which is only to be constructed if the logging\n            level is such that the message will actually be logged.":"记录一条最好的消息，只有在日志记录时才能构造\r\n            级别的级别可以实际记录该消息。\r\n"," after reading all elements from that instance.\r\n            ":" 阅读了该实例的所有元素之后。\r\n            \r\n","java.util.zip.InflaterInputStream.InflaterInputStream(java.io.InputStream, java.util.zip.Inflater, int)":"java.util.zip.inflaterinputstream.inflaterinputstream（java.io.inputstream，java.util.zip.inflater，int）\r\n","java.util.concurrent.SynchronousQueue.size()":"java.util.concurrent.synchronousqueue.size（）\r\n","org.xml.sax.helpers.AttributeListImpl":"org.xml.sax.helpers.attributelistimpl\r\n","\r\n            Appends a frame representing text content.\r\n            ":"\r\n            附加代表文本内容的帧。\r\n            \r\n","\r\n            The vertical scroll amount.\r\n            ":"\r\n            垂直滚动量。\r\n            \r\n","\r\n            Specifies that the ":"\r\n            指定\r\n","\r\n            This provides an abstract storage mechanic to preserve identity information on the server\r\n            while only sending a simple identifier key to the client. This is most commonly used to mitigate\r\n            issues with serializing large identities into cookies.\r\n            ":"\r\n            这提供了一个抽象的存储机制来保留服务器上的身份信息\r\n            而仅向客户端发送简单标识符密钥。这最常用于缓解\r\n            将大型身份序列化为cookie的问题。\r\n            \r\n"," when both parameters are non-null;\n            does nothing otherwise.":" 当两个参数均为非编号时；\r\n            没有其他任何事情。\r\n","javax.security.cert.CertificateEncodingException.CertificateEncodingException()":"javax.security.cert.certificateEncodingException.certificateEncodingException（）\r\n","Abstract base class for entities.":"实体的抽象基类。\r\n","Unable to find the required services. Please add all the required services by calling '{0}.{1}' inside the call to '{2}' in the application startup code.":"无法找到所需的服务。请通过调用'{0}。\r\n","org.w3c.dom.NameList.getNamespaceURI(int)":"org.w3c.dom.namelist.getnamespaceuri（int）\r\n","javax.net.ssl.X509ExtendedKeyManager.chooseEngineServerAlias(java.lang.String, java.security.Principal[], javax.net.ssl.SSLEngine)":"javax.net.ssl.x509extendedKeyManager.ChooseEnginesererveralias（java.lang.string，java.security.principal []，javax.net.net.ssl.sslengine）\r\n","415 Unsupported Media Type":"415不支持的媒体类型\r\n","javax.crypto.ExemptionMechanism.isCryptoAllowed(java.security.Key)":"javax.crypto.ExemptionMechanism.iscryptoAllowed（Java.security.key）\r\n"," if the element does not have\n declaration or if no namespace information is available.":" 如果元素没有\r\n 声明或没有可用的名称空间信息。\r\n","Atomically adds the given value to the element at index ":"原子在索引处将给定值添加到元素\r\n","Returns a new CompletionStage that is completed with the same\n            value as the CompletionStage returned by the given function,\n            executed using this stage's default asynchronous execution\n            facility.":"返回一个新的完整舞台，该舞台已完成相同\r\n            值为由给定功能返回的完成阶段，\r\n            使用此阶段的默认异步执行执行\r\n            设施。\r\n","Look up the value of a feature.":"查找功能的值。\r\n","javax.xml.datatype.DatatypeConstants.DATE":"javax.xml.datatype.datatypeconstants.date\r\n","org.xml.sax.DocumentHandler":"org.xml.sax.documenthandler\r\n","org.xml.sax.helpers.XMLFilterImpl.error(org.xml.sax.SAXParseException)":"org.xml.sax.helpers.xmlfilterimpl.error（org.xml.sax.saxparseexception）\r\n","org.xml.sax.SAXException.SAXException(java.lang.String)":"org.xml.sax.saxexception.saxexception（java.lang.string）\r\n","Return the lexical representation of <code>this</code> instance.":"返回<code>的词汇表示，此</code>实例。\r\n","the bounds limiting the scope of the parsing operation":"限制解析操作范围的边界\r\n","javax.sql.RowSet.removeRowSetListener(javax.sql.RowSetListener)":"Javax.sql.Rowset.RemoverowSetListener（Javax.sql.RowsetListener）\r\n","java.util.logging.LogRecord.getThreadID()":"java.util.logging.logrecord.getthreadid（）\r\n"," of the cookie, or ":" 饼干，或\r\n","\r\n            The buttons being pressed when the mouse event was fired:\r\n            Left button=1,\r\n            Right button=2,\r\n            Middle (wheel) button=4,\r\n            4th button (typically, \"Browser Back\" button)=8,\r\n            5th button (typically, \"Browser Forward\" button)=16.\r\n            If two or more buttons are pressed, returns the logical sum of the values.\r\n            E.g., if Left button and Right button are pressed, returns 3 (=1 | 2).\r\n            ":"\r\n            射击鼠标事件时按下按钮：\r\n            左键= 1，\r\n            右键= 2，\r\n            中间（车轮）按钮= 4，\r\n            第四按钮（通常为“浏览器返回”按钮）= 8，\r\n            第五按钮（通常为“浏览器前进”按钮）= 16。\r\n            如果按下两个或多个按钮，请返回值的逻辑总和。\r\n            例如，如果按下左键和右键，请返回3（= 1 | 2）。\r\n            \r\n","Returns the match state of this matcher as a ":"返回该比赛的比赛状态\r\n","Look up the value of a feature flag.":"查找功能标志的值。\r\n","\r\n            This method has a side effect:\r\n            A response cookie is set if there is no valid cookie associated with the request.\r\n            ":"\r\n            该方法具有副作用：\r\n            如果没有与请求关联的有效cookie，则设置响应cookie。\r\n            \r\n","javax.net.ssl.SSLContext.init(javax.net.ssl.KeyManager[], javax.net.ssl.TrustManager[], java.security.SecureRandom)":"javax.net.ssl.sslcontext.init（javax.net.ssl.keymanager []，javax.net.ssl.trustmanager []，java.security.security.securerandom）\r\n","Protected constructor to prevent instantiation.":"受保护的构造函数以防止实例化。\r\n","java.util.zip.InflaterOutputStream.InflaterOutputStream(java.io.OutputStream, java.util.zip.Inflater)":"java.util.zip.inflateroutputstream.inflateroutputstream（java.io.outputstream，java.util.zip.inflater）\r\n","arrive":"到达\r\n","java.util.function.BooleanSupplier":"java.util.function.booleansupplier\r\n","If the feature is not supported or can not be set":"如果不支持该功能或无法设置该功能\r\n","org.xml.sax.Parser.setEntityResolver(org.xml.sax.EntityResolver)":"org.xml.sax.parser.setentityResolver（org.xml.sax.entityResolver）\r\n","javax.net.ssl.SSLException.SSLException(java.lang.String)":"javax.net.ssl.sslexception.sslexception（java.lang.string）\r\n"," if interrupted while waiting, or\n            returning immediately if the current phase is not equal to the\n            given phase value or this phaser is terminated.":" 如果等待时中断，或者\r\n            如果当前阶段不等于\r\n            给定的相值或此移相器已终止。\r\n","java.util.concurrent.atomic.AtomicIntegerFieldUpdater.set(java.lang.Object, int)":"java.util.concurrent.atomic.atomicintegerfieldupdater.set（java.lang.Object，int）\r\n","When the\n            supplied index does not identify an attribute.\n":"当。。。的时候\r\n            提供的索引无法识别属性。\r\n\r\n","Sets the designated column's type name that is specific to the\n            data source, if any, to the given <code>String</code>.":"设置指定的列的类型名称特定于\r\n            数据源（如果有）到给定的<code>字符串</code>。\r\n","javax.xml.transform.stream.StreamSource.StreamSource()":"javax.xml.transform.stream.streamsource.streamsource（）\r\n","The type of the requirement to evaluate.":"评估要求的类型。\r\n","Associates the specified value with the specified attribute name\n            (key) in this Map.":"将指定值与指定属性名称相关联\r\n            （键）在此地图中。\r\n","java.util.concurrent.atomic.DoubleAccumulator.doubleValue()":"java.util.concurrent.atomic.doubleaeaccumulator.doublevalue（）\r\n","The \"host_name\" type representing of a DNS hostname\n            (see ":"代表DNS主机名的“ host_name”类型\r\n            （看\r\n","This class is used to create implementations of XML Pull Parser defined in XMPULL V1 API.":"该类用于创建XMPULL V1 API中定义的XML拉动解析器的实现。\r\n","java.util.logging.ErrorManager.WRITE_FAILURE":"java.util.logging.errormanager.write_failure\r\n"," state to be valid, you must\r\n            also call ":" 声明有效，您必须\r\n            也打电话\r\n","\r\n            Gets the value of the parameter with the specified name, or a default value\r\n            if no such parameter exists in the collection.\r\n            ":"\r\n            使用指定名称或默认值获取参数的值\r\n            如果集合中没有此类参数。\r\n            \r\n","\n            as XML using the specified\n            ":"\r\n            使用指定的XML\r\n            \r\n","The official XML Namespace prefix.":"官方XML名称空间前缀。\r\n","Sets the default compression method for subsequent entries.":"为后续条目设置默认压缩方法。\r\n","java.util.concurrent.atomic.LongAdder.decrement()":"java.util.concurrent.atomic.longadder.decrement（）\r\n","java.util.stream.BaseStream.sequential()":"java.util.stream.basestream.sequential（）\r\n","\r\n            Writes an extension format, using the smallest one of these codes:\r\n            ":"\r\n            使用以下代码中的最小的一种写入扩展格式：\r\n            \r\n","Lock":"锁\r\n","if the jar file is closed.":"如果罐子文件关闭。\r\n","javax.xml.validation.SchemaFactory.getProperty(java.lang.String)":"javax.xml.validation.schemafactory.getProperty（java.lang.string）\r\n","A method to request the first DOM implementation that supports the\n            specified features.":"一种请求第一个DOM实现的方法\r\n            指定功能。\r\n","java.util.zip.ZipFile.entries()":"java.util.zip.zipfile.entries（）\r\n","Sets the designated column's table's catalog name, if any, to the given\n            <code>String</code>.":"将指定的列表的目录名称（如果有）设置为给定\r\n            <code>字符串</code>。\r\n","java.util.concurrent.atomic.LongAdder.sum()":"java.util.concurrent.atomic.longadder.sum（）\r\n","Set the attribute list, discarding previous contents.":"设置属性列表，丢弃以前的内容。\r\n","java.util.regex.MatchResult.start(int)":"java.util.regex.matchresult.start（int）\r\n","Allows for setting parameters relating to connection managers on\n ":"允许设置与连接管理器上有关的参数\r\n \r\n","javax.xml.validation.SchemaFactory.SchemaFactory()":"javax.xml.validation.schemafactory.schemafactory（）\r\n","java.util.function.LongConsumer.accept(long)":"java.util.function.longconsumer.accept（long）\r\n","\r\n            Instance used for events\r\n            ":"\r\n            实例用于事件\r\n            \r\n","org.w3c.dom.Text":"org.w3c.dom.text\r\n","org.json.JSONTokener.syntaxError(java.lang.String)":"org.json.jsontokener.syntaxerror（java.lang.string）\r\n","\r\n            The X coordinate of the touch point relative to the left edge of the document.\r\n            Unlike ":"\r\n            触摸点的X坐标相对于文档的左边缘。\r\n            与众不同\r\n","Implementation-URL":"实施-URL\r\n","410 Gone":"410走了\r\n","java.util.jar.Manifest.Manifest()":"java.util.jar.manifest.manifest（）\r\n","java.util.logging.LogRecord.getLevel()":"java.util.logging.logrecord.getlevel（）\r\n","javax.crypto.EncryptedPrivateKeyInfo.getKeySpec(javax.crypto.Cipher)":"javax.crypto.CencryptedPrivateKeyInfo.GetKeySpec（Javax.crypto.cipher）\r\n","java.util.prefs.AbstractPreferences.getSpi(java.lang.String)":"java.util.prefs.abstractpreferences.getspi（java.lang.string）\r\n","java.util.concurrent.ThreadPoolExecutor.ThreadPoolExecutor(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue)":"java.util.concurrent.threadpoolexecutor.threadpoolexecutor（int，int，long，long，java.util.concurrent.timeunit，java.util.concurrent.blockingqueue）\r\n","'s command property.":"的命令属性。\r\n","http://example.org/path/to/file":"http://example.org/path/to/file\r\n"," object takes log messages from a ":" 对象从一个\r\n","Constructs a parameter set for password-based encryption as defined in\n            the PKCS #5 standard.":"为基于密码的加密构建参数集\r\n            PKCS＃5标准。\r\n","if initializing this instance fails.":"如果初始化此实例失败。\r\n","if the salt is empty or iteration count is zero or negative.\n":"如果盐为空或迭代计数为零或负数。\r\n\r\n","\r\n            Used to capture path info so redirects can be computed properly within an app.Map().\r\n            ":"\r\n            用于捕获路径信息，以便可以在app.map（）中正确计算重定向。\r\n            \r\n","at discretion of\n         ":"酌情\r\n         \r\n","This flag is not supported on Android, and Unicode character classes are always\n            used.":"该标志在Android上不支持，Unicode字符类始终是\r\n            用过的。\r\n",", using only ":"，仅使用\r\n","\r\n            A flag indicating whether requirement evaluation has succeeded or failed.\r\n            This value is ":"\r\n            指示要求评估是成功还是失败的标志。\r\n            这个值是\r\n",") in a Server Name Indication (SNI) extension.":"）在服务器名称指示（SNI）扩展程序中。\r\n","\r\n            The content to which the value should be provided.\r\n            ":"\r\n            应提供值的内容。\r\n            \r\n"," for every point of contact currently touching the surface.\r\n            ":" 对于当前触摸表面的每个接触点。\r\n            \r\n","org.json.JSONObject.names()":"org.json.jsonobject.names（）\r\n","Returns the namespace URI for the given position in the\n            namespace stack\n            If the position is out of range, an exception is thrown.":"返回给定位置的名称空间URI\r\n            名称空间堆栈\r\n            如果位置不超出范围，则会抛出一个例外。\r\n","Look up an attribute's type by XML qualified (prefixed) name.":"查找XML合格（前缀）名称的属性类型。\r\n","javax.net.ssl.SSLSocket.SSLSocket(java.lang.String, int)":"javax.net.ssl.sslsocket.sslsocket（java.lang.string，int）\r\n","if this cipher instance is not initialized for encryption or\n             decryption.\n":"如果此密码实例未初始化以进行加密或\r\n             解密。\r\n\r\n","org.xml.sax.helpers.XMLFilterImpl.setErrorHandler(org.xml.sax.ErrorHandler)":"org.xml.sax.helpers.xmlfilterimpl.seterrorhandler（org.xml.sax.errorhandler）\r\n","LONGVARCHAR":"Longvarchar\r\n","Any SAX exception, possibly wrapping\n    another exception.":"任何SAX例外，可能包装\r\n    另一个例外。\r\n","\r\n            If set, this specifies the target scheme that this scheme should forward AuthenticateAsync calls to.\r\n            For example Context.AuthenticateAsync(\"ThisScheme\") => Context.AuthenticateAsync(\"ForwardAuthenticateValue\");\r\n            Set the target to the current scheme to disable forwarding and allow normal processing.\r\n            ":"\r\n            如果设置，则指定该方案应转发AuthentIcateAsync要求的目标方案。\r\n            例如context.authenticateasync（“ thisscheme”）=> context.authenticateasync（“ forwardAuthenticateValue”）;\r\n            将目标设置为当前方案以禁用转发并允许正常处理。\r\n            \r\n","when value is not ":"当价值不是\r\n","it the specified parameters are inappropriate for this\n             cipher.\n":"它指定的参数不合适\r\n             密码。\r\n\r\n","javax.xml.datatype.Duration.isLongerThan(javax.xml.datatype.Duration)":"javax.xml.datatype.duration.islongerthan（javax.xml.datatype.duration）\r\n","Resolve an external entity.":"解决外部实体。\r\n","Parses the textual representation of a protocol version.":"解析协议版本的文本表示。\r\n","Defines the maximum number of redirects to be followed.":"定义要遵循的最大重定向数量。\r\n","java.util.concurrent.CompletionStage.acceptEither(java.util.concurrent.CompletionStage, java.util.function.Consumer)":"java.util.concurrent.completionstage.accepteither（java.util.concurrent.completionstage，java.util.function.consumer）\r\n","Interface for formatting elements of a header value.":"用于格式化标题值元素的接口。\r\n","Processes the given byte.":"处理给定的字节。\r\n","java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndDecrement(java.lang.Object)":"java.util.concurrent.atomic.atomicintegerfieldupdater.getanddecrement（java.lang.object）\r\n","javax.sql.RowSet.setObject(java.lang.String, java.lang.Object)":"javax.sql.Rowset.setObject（java.lang.string，java.lang.object）\r\n","java.util.stream.BaseStream.onClose(java.lang.Runnable)":"java.util.stream.basestream.onclose（java.lang.runnable）\r\n","A delayed result-bearing action that can be cancelled.":"可以取消的延迟结果动作。\r\n","GENERIC_FAILURE is used for failure that don't fit\n            into one of the other categories.":"generic_failure用于不适合的故障\r\n            分为其他类别之一。\r\n","javax.xml.transform.dom.DOMSource.setSystemId(java.lang.String)":"javax.xml.transform.domsource.setsystemid（java.lang.string）\r\n","java.util.prefs.AbstractPreferences.getInt(java.lang.String, int)":"java.util.prefs.abstractpreferences.getint（java.lang.string，int）\r\n","Returns one trust manager for each type of trust material.":"返回每种类型的信任材料的信任管理器。\r\n",", and transfer\r\n             the ":"，转移\r\n             这\r\n","java.util.concurrent.atomic.AtomicLong.incrementAndGet()":"java.util.concurrent.atomic.atomiclong.incrementandget（）\r\n","Session input buffer for blocking connections.":"会话输入缓冲区用于阻止连接。\r\n","Returns a new CompletionStage that, when this stage completes\n            normally, is executed using the supplied Executor, with this\n            stage's result as the argument to the supplied function.":"返回一个新的完整舞台，当这个阶段完成时\r\n            通常，使用所提供的遗嘱执行人执行\r\n            阶段的结果作为对所提供函数的参数。\r\n","org.apache.http.params.HttpConnectionParams.getConnectionTimeout(org.apache.http.params.HttpParams)":"org.apache.http.params.httpconnectionparams.getConnectionTimeOut（org.apache.http.params.httpparams）\r\n","Returns a <code>KeyGenerator</code> object that generates secret keys\n            for the specified algorithm.":"返回<code> keygenerator </code>生成秘密密钥的对象\r\n            对于指定的算法。\r\n","java.util.logging.SimpleFormatter.format(java.util.logging.LogRecord)":"java.util.logging.simpleformatter.format（java.util.logging.logrocord）\r\n","\r\n            Check that the options are valid. Should throw an exception if things are not ok.\r\n            ":"\r\n            检查选项是否有效。如果事情不正确，应该抛出例外。\r\n            \r\n","Returns the names of the SSL cipher suites which are currently\n            enabled for use on this connection.":"返回当前的SSL密码套件的名称\r\n            已启用用于此连接。\r\n","\r\n            Marks a previously appended component frame as closed. Calls to this method\r\n            must be balanced with calls to ":"\r\n            将先前附加的组件框架标记为关闭。调用此方法\r\n            必须与电话平衡\r\n","Returns a predicate that represents the logical negation of this\n            predicate.":"返回代表此逻辑否定的谓词\r\n            谓词。\r\n","The class represents an authentication scope consisting of a host name,\n a port number, a realm name and an authentication scheme name which \n ":"该类代表由主机名组成的身份验证范围，\r\n 端口号，一个领域名称和身份验证方案名称\r\n \r\n",",\r\n            or anything between ":"，，，，\r\n            或之间的任何东西\r\n","javax.sql.RowSet.setDouble(int, double)":"javax.sql.Rowset.setDouble（int，double）\r\n","java.util.concurrent.LinkedBlockingDeque.put(java.lang.Object)":"java.util.concurrent.linkedblockingdeque.put（java.lang.object）\r\n","The <code>DOMConfiguration</code> interface represents the configuration\n            of a document and maintains a table of recognized parameters.":"<code> domConfiguration </code>接口表示配置\r\n            文档并维护公认参数表。\r\n","NT (MS Windows specific) user principal used for HTTP authentication":"NT（MS Windows特定）用户主体用于HTTP身份验证\r\n","If any values would create an invalid ":"如果任何值都会造成无效的\r\n","javax.xml.datatype.DatatypeFactory.DATATYPEFACTORY_IMPLEMENTATION_CLASS":"javax.xml.datatype.datatypefactory.datatypefactory_implementation_class\r\n","\r\n            gets the number of frames in the subtree for which this frame is the root.\r\n            The value is zero if the frame has not yet been closed.\r\n            ":"\r\n            获取该帧是根部的子树中的帧数。\r\n            如果框架尚未关闭，则该值为零。\r\n            \r\n"," used to handle authentication events.\r\n            ":" 用于处理身份验证事件。\r\n            \r\n","java.util.regex.Matcher.end()":"java.util.regex.matcher.end（）\r\n","Gets the value of a field.":"获取字段的值。\r\n","\r\n            Determines whether binding will use ":"\r\n            确定绑定是否会使用\r\n"," if it exists and is a boolean or\n            can be coerced to a boolean, or ":" 如果存在并且是布尔人或\r\n            可以强迫布尔人，或者\r\n","org.apache.http.params.HttpConnectionParams.setSoTimeout(org.apache.http.params.HttpParams, int)":"org.apache.http.params.httpconnectionparams.setsotimeout（org.apache.http.params.httpparams，int）\r\n",". -or- Set a ":"。 - 或设置a\r\n","Determines the next step to establish a connection via proxy.":"确定通过代理建立连接的下一步。\r\n","Removes all attributes from this Map.":"从此地图中删除所有属性。\r\n","javax.sql.RowSet.setClob(java.lang.String, java.io.Reader)":"javax.sql.Rowset.setClob（java.lang.string，java.io.reader）\r\n","#newInstance(String uri)":"#NewInstance（字符串URI）\r\n","java.util.logging.LogManager.readConfiguration(java.io.InputStream)":"java.util.logging.logmanager.ReadConfiguration（java.io.inputstream）\r\n","if the algorithm used to decrypt the data is not available.":"如果用来解密数据的算法不可用。\r\n","org.xml.sax.helpers.AttributesImpl.getIndex(java.lang.String, java.lang.String)":"org.xml.sax.helpers.attributesimpl.getIndex（java.lang.string，java.lang.string）\r\n","\r\n            Gets writable memory that can be initialized and added to the sequence via a subsequent call to ":"\r\n            获取可写的内存，可以通过后续调用来初始化并添加到序列中\r\n","Set the input source for parser to the given reader and\n            resets the parser.":"将解析器的输入源设置为给定的读者，并\r\n            重置解析器。\r\n","Constant used to indicate the to-be-unwrapped key is a \"secret key\".":"用于指示未包装密钥的常数是“秘密密钥”。\r\n","Preferences#node(String)":"首选项＃node（string）\r\n","java.util.concurrent.atomic.AtomicLongArray.getAndIncrement(int)":"java.util.concurrent.atomic.atomiclongarray.getandincrement（int）\r\n","When the underlying XMLReader does\n   not recognize the property name.":"当基础XMLReader确实\r\n   无法识别属性名称。\r\n","Return a string representation of this object.":"返回此对象的字符串表示。\r\n","org.w3c.dom.ls.LSParserFilter.startElement(org.w3c.dom.Element)":"org.w3c.dom.ls.lsparserfilter.startelement（org.w3c.dom..lement）\r\n","java.util.logging.LoggingMXBean.setLoggerLevel(java.lang.String, java.lang.String)":"java.util.logging.loggingmxbean.setloggerlevel（java.lang.string，java.lang.string）\r\n","The content of this processing instruction.":"该处理指令的内容。\r\n","putDouble":"推动\r\n","javax.net.ssl.X509ExtendedKeyManager.chooseEngineClientAlias(java.lang.String[], java.security.Principal[], javax.net.ssl.SSLEngine)":"javax.net.ssl.x509 extendedKeyManager.ChooseEngineClientalias（Java.lang.string []，Java.security.principal []，Javax.net.net.ssl.sslengine）\r\n","s\n            of the requested Server Name Indication (SNI) extension.":"s\r\n            请求的服务器名称指示（SNI）扩展名。\r\n","java.util.concurrent.LinkedBlockingQueue.LinkedBlockingQueue(int)":"java.util.concurrent.linkedblockingqueue.linkedblockingquequequequequequequequequequequequequequequequequequequequequequequequequequeque\r\n","java.util.prefs.Preferences.addPreferenceChangeListener(java.util.prefs.PreferenceChangeListener)":"java.util.prefs.preferences.addpreferencechangelistener（java.util.prefs.preferencechangelistener）\r\n","java.util.function.LongFunction.apply(long)":"java.util.function.longfunction.apply（long）\r\n","The first line of an ":"第一行\r\n","Returns the jar file manifest, or <code>null</code> if none.":"返回JAR文件清单，或<code> null </code>如果无。\r\n","This class specifies a DES-EDE (\"triple-DES\") key.":"该类指定DES-EDE（“ Triple-Des”）键。\r\n","Get the child node before which the result nodes will be inserted. -or- Set the child node before which the result nodes will be inserted.":"获取子节点，然后将结果节点插入。 - 或 - 设置子节点将在此之前插入结果节点。\r\n","java.util.prefs.Preferences.getFloat(java.lang.String, float)":"java.util.prefs.preferences.getfloat（java.lang.string，float）\r\n","Returns the namespace URI of the current element as set by startTag().":"返回startTag（）设置的当前元素的名称空间URI。\r\n",", and any\n authentication scheme.":"，任何\r\n 身份验证方案。\r\n","java.util.concurrent.RecursiveAction.exec()":"java.util.concurrent.recursiveaction.exec（）\r\n","A convenience method that acts as if <code>LSSerializer.":"一种方便方法，就像<code> lsserializer一样。\r\n","java.util.function.LongPredicate.negate()":"java.util.function.longpredicate.negate（）\r\n","java.util.prefs.AbstractPreferences.newNode":"java.util.prefs.abstractpreferences.newnode\r\n"," attributes to configure the mappings between event names and\r\n            event argument types.\r\n            ":" 属性要配置事件名称和\r\n            事件参数类型。\r\n            \r\n","javax.crypto.SecretKeyFactory.getInstance(java.lang.String, java.lang.String)":"javax.crypto.secretkeyfactory.getinstance（java.lang.string，java.lang.string）\r\n"," filter to compress data.":" 过滤以压缩数据。\r\n","Create a Java instance of XML Schema builtin datatype <code>time</code>.":"创建XML schema indentin DataType <code> time </code>的Java实例。\r\n","java.util.concurrent.atomic.AtomicLong.AtomicLong(long)":"java.util.concurrent.atomic.atomiclong.atomiclong（long）\r\n","\r\n            Indicates that there was a failure during authentication.\r\n            ":"\r\n            表明在身份验证过程中存在故障。\r\n            \r\n","This method acts as if the document was going through a save and load\n            cycle, putting the document in a \"normal\" form.":"此方法的作用好像文档正在通过保存和加载\r\n            循环，将文档以“正常”形式。\r\n","javax.crypto.Cipher.wrap(java.security.Key)":"javax.crypto.cipher.wrap（java.security.key）\r\n","Determines the next step to establish a direct connection.":"确定建立直接连接的下一步。\r\n","Evaluate an <code>XPath</code> expression in the specified context and return the result as the specified type.":"评估指定上下文中的<code> XPATH </code>表达式，并将结果返回指定类型。\r\n","if the algorithm name of the specified ":"如果指定的算法名称\r\n","java.util.prefs.NodeChangeListener.childAdded(java.util.prefs.NodeChangeEvent)":"java.util.prefs.nodechangelistener.childadded（java.util.prefs.nodechangeevent）\r\n","java.util.zip.ZipOutputStream.closeEntry()":"java.util.zip.zipoutputstream.closeentry（）\r\n","java.util.regex.Matcher.start(java.lang.String)":"java.util.regex.matcher.start（java.lang.string）\r\n","if the specified provider can not provide the\n             ":"如果指定的提供商无法提供\r\n             \r\n","Awaits the phase of this phaser to advance from the given phase\n            value, throwing ":"等待此移位器的阶段从给定阶段前进\r\n            价值，投掷\r\n","The application may raise an\n            exception.":"该申请可能会提出\r\n            例外。\r\n","org.xml.sax.helpers.NamespaceSupport.XMLNS":"org.xml.sax.helpers.namespaceupport.xmlns\r\n","java.util.zip.ZipEntry.ZipEntry(java.util.zip.ZipEntry)":"java.util.zip.zipentry.zipentry（java.util.zip.zipentry）\r\n","Atomically increments by one the element at index ":"在原子上以一个元素为单位上的元素\r\n","javax.net.ssl.SSLSocket.getHandshakeSession()":"javax.net.ssl.sslsocket.gethandshaskessession（）\r\n","Add <code>duration</code> to this instance.":"将<code>持续时间</code>添加到此实例。\r\n","if conditions are not supported\n":"如果不支持条件\r\n\r\n","The system identifier, a URI reference [], for this\n output destination.":"系统标识符，URI参考[]\r\n 输出目的地。\r\n","java.util.logging.Logger.removeHandler(java.util.logging.Handler)":"java.util.logging.logger.removehandler（java.util.logging.handler）\r\n","Returns a new CompletionStage that, when this stage completes\n            normally, executes the given action using the supplied Executor.":"返回一个新的完整舞台，当这个阶段完成时\r\n            通常，使用提供的执行人执行给定的操作。\r\n","java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Object[])":"java.util.logging.logger.log（java.util.logging.level，java.lang.string，java.lang.object []）\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.hasQueuedThreads()":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.hasqueuedthreads（）\r\n","If an error occurs reading the manifest.\n":"如果发生错误，请阅读清单。\r\n\r\n","org.w3c.dom.NamedNodeMap.setNamedItemNS(org.w3c.dom.Node)":"org.w3c.dom.namednodemap.setnameditemns（org.w3c.dom.node）\r\n",",\r\n            gets the action that writes the reference to its target. Otherwise, the value is undefined.\r\n            ":"，，，，\r\n            获取对其目标进行引用的动作。否则，该值是未定义的。\r\n            \r\n","Extensions to the <code>X509TrustManager</code> interface to support\n            SSL/TLS connection sensitive trust management.":"<code> x509trustmanager </code>接口的扩展\r\n            SSL/TLS连接敏感信任管理。\r\n","javax.xml.transform.sax.SAXSource.SAXSource(org.xml.sax.XMLReader, org.xml.sax.InputSource)":"javax.xml.transform.sax.saxsource.saxsource（org.xml.sax.xmlreader，org.xml.sax.inputsource）\r\n"," instance for use with this\n            ":" 实例可用于此\r\n            \r\n","\r\n            Gets a value indicating if all methods are allowed.\r\n            ":"\r\n            获取一个值，指示是否允许所有方法。\r\n            \r\n","java.util.prefs.Preferences.systemNodeForPackage(java.lang.Class)":"java.util.prefs.preferences.systemnodeforpackage（java.lang.class）\r\n","The antiforgery cookie token and request token do not match.":"抗试验饼干令牌和请求令牌不匹配。\r\n","java.util.concurrent.CompletionStage.toCompletableFuture()":"java.util.concurrent.completionstage.tocompletablefuture（）\r\n","org.xmlpull.v1.sax2.Driver":"org.xmlpull.v1.sax2.driver\r\n","Get next parsing event - element content will be coalesced and only one\n            TEXT event must be returned for whole element content\n            (comments and processing instructions will be ignored and entity references\n            must be expanded or exception must be thrown if entity reference can not be expanded).":"获取下一个解析活动 - 元素内容将合并，只有一个\r\n            必须返回整个元素内容的文本事件\r\n            （评论和处理说明将被忽略和实体参考\r\n            如果无法扩展实体参考，则必须扩展或必须抛出例外）。\r\n","java.util.concurrent.locks.ReentrantReadWriteLock.isFair()":"java.util.concurrent.locks.reentrantreadwritelock.isfair（）\r\n","java.util.regex.Matcher.end(java.lang.String)":"java.util.regex.matcher.end（java.lang.string）\r\n","\r\n            Move the reader back the specified number of items.\r\n            ":"\r\n            将读者移回指定的项目数。\r\n            \r\n","Return the current DTD handler.":"返回当前的DTD处理程序。\r\n","org.w3c.dom.Document.getElementsByTagNameNS(java.lang.String, java.lang.String)":"org.w3c.dom.document.getElementsbytagnamens（java.lang.string，java.lang.string）\r\n","org.xml.sax.helpers.NamespaceSupport.pushContext()":"org.xml.sax.helpers.namespacesupport.pushcontext（）\r\n","\r\n            https://github.com/msgpack/msgpack/blob/master/spec.md#overview\r\n            ":"\r\n            https://github.com/msgpack/msgpack/blob/master/spec.md#overview\r\n            \r\n","javax.net.ssl.KeyManagerFactory.KeyManagerFactory(javax.net.ssl.KeyManagerFactorySpi, java.security.Provider, java.lang.String)":"javax.net.ssl.keymanagerfactory.keymanagerfactory（javax.net.ssl.keymanagerfactoryspi，java.security.provider，java.lang.string）\r\n","if there are no more tokens":"如果不再有令牌\r\n","java.util.concurrent.ScheduledThreadPoolExecutor.schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.scheduledthreadpoolexecutor.schedule（java.lang.runnable，long，java.util.concurrent.timeunit）\r\n"," if no such comment has been defined.":" 如果没有定义这样的评论。\r\n","Adapt a SAX2 start element event.":"调整SAX2启动元素事件。\r\n"," on the\n   ":" 在\r\n   \r\n","Instantiates a new status line.":"实例化新的状态线。\r\n","LONGVARBINARYBINARY":"Longvarbinarybinary\r\n","\r\n            Gets or sets a comma delimited list of roles that are allowed to access the resource.\r\n            ":"\r\n            获取或设置允许访问资源的角色逗号界定列表。\r\n            \r\n","A recursive resultless ":"递归结果\r\n","java.util.stream.Collectors.groupingByConcurrent(java.util.function.Function)":"java.util.stream.collectors.groupingbyconcurrent（java.util.function.function.function）\r\n","javax.xml.parsers.ParserConfigurationException.ParserConfigurationException()":"javax.xml.parsers.parserconfigurationException.parserconFigurationException（）\r\n","Returns all known unremoved children of this node.":"返回该节点的所有已知未经激光的孩子。\r\n","if this node has been removed.":"如果该节点已删除。\r\n","java.util.prefs.PreferenceChangeEvent.PreferenceChangeEvent(java.util.prefs.Preferences, java.lang.String, java.lang.String)":"java.util.prefs.preferencechangeevent.preferencechangeevent（java.util.prefs.prefs.preferences，java.lang.string，java.lang.string）\r\n","\r\n            Clears the entire sequence, recycles associated memory into pools,\r\n            and resets this instance for reuse.\r\n            This invalidates any ":"\r\n            清除整个序列，回收相关的内存到池中，\r\n            并重置此实例以重复使用。\r\n            这使任何人无效\r\n","Replace the characters starting at the specified 16-bit unit offset\n            with the specified string.":"替换从指定的16位单元偏移开始的字符\r\n            带有指定的字符串。\r\n","Generates the exemption mechanism key blob, and stores the result in\n            the <code>output</code> buffer.":"生成豁免机制密钥斑点，并将结果存储在\r\n            <code>输出</code>缓冲区。\r\n","org.xml.sax.helpers.ParserAdapter.parse(org.xml.sax.InputSource)":"org.xml.sax.helpers.parseradapter.parse（org.xml.sax.inputsource）\r\n","\r\n            The total number of bytes of content that will be transferred during the operation.\r\n            If the total size is unknown, this value is zero.\r\n            ":"\r\n            操作过程中将传输的内容字节的总数。\r\n            如果总尺寸未知，则此值为零。\r\n            \r\n","java.util.jar.Manifest.read(java.io.InputStream)":"java.util.jar.manifest.read（java.io.inputstream）\r\n","Pack the specified JAR file to the specified output stream.":"将指定的JAR文件打包到指定的输出流。\r\n"," using the specified name type and\n            encoded value.":" 使用指定的名称类型和\r\n            编码值。\r\n","javax.net.ssl.HandshakeCompletedEvent.getLocalCertificates()":"javax.net.ssl.handshakecomplededevent.getLocalcertificates（）\r\n","\r\n            The entire primitive is skipped, including content of maps or arrays, or any other type with payloads.\r\n            ":"\r\n            跳过整个原始版本，包括地图或阵列的内容，或任何其他带有有效载荷的类型。\r\n            \r\n","org.json.JSONObject.opt(java.lang.String)":"org.json.jsonobject.opt（java.lang.string）\r\n","Returns a collection containing threads that may be waiting to\n            acquire.":"返回包含可能正在等待的线程的集合\r\n            获得。\r\n","java.util.zip.DeflaterOutputStream.DeflaterOutputStream(java.io.OutputStream, java.util.zip.Deflater, boolean)":"java.util.zip.deflateroutputstream.deflateroutputstream（java.io.outputstream，java.util.util.zip.deflater，boolean）\r\n","javax.xml.datatype.Duration.getXMLSchemaType()":"javax.xml.datatype.duration.getxmlschematype（）\r\n","javax.security.auth.Subject.doAs(javax.security.auth.Subject, java.security.PrivilegedExceptionAction)":"javax.security.auth.Subject.doAs(javax.security.auth.Subject, java.security.PrivilegedExceptionAction)\r\n","java.util.concurrent.atomic.AtomicIntegerArray.incrementAndGet(int)":"java.util.concurrent.atomic.atomicintegerarray.incrementandget（int）\r\n","Sets whether the designated column is a signed number.":"设置指定的列是否为签名号。\r\n","HTTP PUT method.":"HTTP PUT方法。\r\n","javax.crypto.spec.PBEParameterSpec.getSalt()":"javax.crypto.spec.pbeparameterspec.getsalt（）\r\n","\r\n            State for the authentication flow.\r\n            ":"\r\n            身份验证流的状态。\r\n            \r\n","\r\n            The ReturnUrlParameter determines the name of the query string parameter which is appended by the handler\r\n            when during a Challenge. This is also the query string parameter looked for when a request arrives on the \r\n            login path or logout path, in order to return to the original url after the action is performed.\r\n            ":"\r\n            returnUrlParameter确定处理程序附加的查询字符串参数的名称\r\n            在挑战期间。这也是查询字符串参数时，请求当请求到达\r\n            登录路径或注销路径，以便在执行操作后返回原始URL。\r\n            \r\n","org.xml.sax.Attributes.getType(java.lang.String)":"org.xml.sax.attributes.getType（java.lang.string）\r\n"," as built from the\n URI's query portion.":" 从\r\n Uri的查询部分。\r\n","Immutable representation of a time span as defined in\n            the W3C XML Schema 1.":"定义的时间跨度的不变表示\r\n            W3C XML模式1。\r\n",",\r\n            gets the type of the child component.\r\n            ":"，，，，\r\n            获取子组件的类型。\r\n            \r\n","Constructor for an <code>SSLEngine</code>.":"<code> sslengine </code>的构造函数。\r\n","DataSource":"数据源\r\n","java.util.jar.JarFile.JarFile(java.io.File)":"java.util.jar.jarfile.jarfile（java.io.file）\r\n"," is associated with a\n             resource bundle and its name is not equal to\n             ":" 与\r\n             资源束及其名称不等于\r\n             \r\n","Returns a collection containing threads that may be waiting to\n            acquire in shared mode.":"返回包含可能正在等待的线程的集合\r\n            以共享模式获取。\r\n","java.util.concurrent.CompletionStage.thenAcceptBoth(java.util.concurrent.CompletionStage, java.util.function.BiConsumer)":"java.util.concurrent.completionstage.thenacceptboth（java.util.concurrent.completionstage，java.util.function.biconsumer）\r\n","java.util.logging.ErrorManager.FLUSH_FAILURE":"java.util.logging.errormanager.flush_failure\r\n","\r\n            The data that underlies a drag-and-drop operation, known as the drag data store.\r\n            See ":"\r\n            拖放操作（称为拖动数据存储）的数据。\r\n            看\r\n","bind":"绑定\r\n","javax.net.ssl.TrustManagerFactory.getAlgorithm()":"javax.net.ssl.trustmanagerfactory.getalgorithm（）\r\n","javax.crypto.spec.SecretKeySpec.SecretKeySpec(byte[], int, int, java.lang.String)":"javax.crypto.spec.secretkeyspec.secretkeyspec（byte []，int，int，int，java.lang.string）\r\n","java.util.zip.CRC32.update(byte[], int, int)":"java.util.zip.crc32.update（byte []，int，int）\r\n","Returns the principal used to identify the local side to the peer during\n the handshake.":"返回用于识别当地一侧的校长\r\n 握手。\r\n","javax.xml.xpath.XPathFactory.setXPathFunctionResolver(javax.xml.xpath.XPathFunctionResolver)":"javax.xml.xpath.xpathfactory.setxpathfunctionResolver（javax.xml.xpath.xpath.xpathfunctionReslesolver）\r\n","Returns the key size of the given key object in bits.":"在位返回给定关键对象的密钥大小。\r\n","Given the partial or complete certificate chain provided by the\n            peer, build a certificate path to a trusted root and return if\n            it can be validated and is trusted for client SSL\n            authentication based on the authentication type.":"考虑到由\r\n            同行，建立通往可信根的证书路径，然后返回\r\n            它可以验证并被对客户SSL的信任\r\n            基于身份验证类型的身份验证。\r\n","The type information associated with this element.":"与此元素关联的类型信息。\r\n","java.util.concurrent.atomic.AtomicIntegerArray.decrementAndGet(int)":"java.util.concurrent.atomic.atomicintegerarray.decrementandget（int）\r\n"," when the ticket is ":" 当票是\r\n","The name part of the name/value pairs constituting an attribute as\n defined by the specification of the JAR manifest.":"名称/值对的名称部分构成属性为\r\n 由JAR清单的规范定义。\r\n","\r\n            This method is provided for infrastructure purposes, and is used to support generated code\r\n            that uses ":"\r\n            此方法用于基础架构，并用于支持生成的代码\r\n            使用\r\n","FileHandler":"filehandler\r\n","org.apache.http.params.HttpConnectionParams.getLinger(org.apache.http.params.HttpParams)":"org.apache.http.params.httpconnectionparams.getlinger（org.apache.http.params.httpparams）\r\n","Returns the algorithm name of this <code>TrustManagerFactory</code>\n            object.":"返回此<code> TrustmanagerFactory </code>的算法名称\r\n            目的。\r\n","java.util.concurrent.locks.LockSupport.parkUntil(long)":"java.util.concurrent.locks.locksupport.parkuntil（长）\r\n","org.xml.sax.helpers.XMLReaderAdapter.endPrefixMapping(java.lang.String)":"org.xml.sax.helpers.xmlreaderadapter.endprefixmapping（java.lang.string）\r\n","Returns true if the end of the compressed data output stream has\n            been reached.":"如果压缩数据输出流的结尾有\r\n            已达到。\r\n","If the feature\n            value can't be assigned or retrieved.":"如果功能\r\n            值不能分配或检索。\r\n","Protected do-nothing constructor for use by subclasses.":"受保护的无构造函数用于子类别。\r\n","Represents a function that produces a double-valued result.":"表示产生双重值结果的函数。\r\n","\n used per default.":"\r\n 每个默认值使用。\r\n","Returns the preference node that emitted the event.":"返回发出事件的首选节节点。\r\n","java.util.concurrent.ThreadPoolExecutor.getLargestPoolSize()":"java.util.concurrent.threadpoolexecutor.getlargestpoolsize（）\r\n","\r\n            Indicates that the specified tree frame should be removed.\r\n            ":"\r\n            表示应删除指定的树框。\r\n            \r\n","if not terminated and the number\n of unarrived parties would become negative\n":"如果未终止，数字\r\n 未接待的政党将变成负面\r\n\r\n","\n            should be used to create a new instance of an <code>XPathFactory</code>.":"\r\n            应该用于创建<code> XPathFactory </code>的新实例。\r\n","\r\n            Only call this helper if you know that you are advancing in the current span\r\n            with valid count and there is no need to fetch the next one.\r\n            ":"\r\n            仅当您知道自己在当前跨度中前进时才打电话给此助手\r\n            有效计数，无需获取下一个。\r\n            \r\n","java.util.concurrent.locks.StampedLock.readLock()":"java.util.concurrent.locks.stampedlock.readlock（）\r\n","The engine must send data to the remote side to continue the\n handshake.":"引擎必须将数据发送到遥控侧，以继续\r\n 握手。\r\n",", otherwise\r\n            returns  ":"， 否则\r\n            返回\r\n","javax.crypto.Mac.getInstance(java.lang.String)":"javax.crypto.mac.getinstance（java.lang.string）\r\n","HTTP DELETE method\n ":"HTTP删除方法\r\n \r\n","\r\n            S256 defined in https://tools.ietf.org/html/rfc7636\r\n            ":"S256在https://tools.ietf.org/html/rfc7636中定义\r\n            \r\n","Copy an existing Attributes or Attributes2 object.":"复制现有属性或属性2对象。\r\n","Writes next block of compressed data to the output stream.":"将下一个压缩数据写入输出流。\r\n"," used in the\n source algorithm.":" 在\r\n 来源算法。\r\n","\r\n            Gets or sets if refreshing the authentication session should be allowed.\r\n            ":"\r\n            如果允许刷新身份验证会话，请获取或设置。\r\n            \r\n","org.apache.http.conn.ssl.AbstractVerifier":"org.apache.http.conn.ssl.abstractverifier\r\n","Generate the hash code for this <code>QName</code>.":"为此<code> qname </code>生成哈希代码。\r\n","Interface representing an HTTP request that can be aborted by shutting \n down the underlying HTTP connection.":"表示可以通过关闭的HTTP请求的接口\r\n 向下底层HTTP连接。\r\n","Atomically sets synchronization state to the given updated\n            value if the current state value equals the expected value.":"原子将同步状态设置为给定更新\r\n            值如果当前状态值等于预期值。\r\n","java.util.concurrent.ThreadPoolExecutor.setCorePoolSize(int)":"java.util.concurrent.threadpoolexecutor.setcorepoolsize（int）\r\n","org.xml.sax.SAXParseException.getLineNumber()":"org.xml.sax.saxparseexception.getlineNumber（）\r\n","#convert(long, TimeUnit) DAYS.convert(duration, this)":"#convert（long，timeunit）days.convert（持续时间，此）\r\n","Writes out all pending buffered data over the open connection.":"在开放连接上写下所有待处理的缓冲数据。\r\n","Reports an error in the operation of the SSL protocol.":"报告SSL协议操作中的错误。\r\n","javax.crypto.KeyGenerator.init(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)":"javax.crypto.keygenerator.init（java.security.spec.algorithmparameterspec，java.security.securerandom）\r\n","java.util.zip.InflaterOutputStream.inf":"java.util.zip.inflateroutputstream.inf\r\n","javax.crypto.ExemptionMechanism.genExemptionBlob()":"javax.crypto.ExemptionMechanism.genexemptionblob（）\r\n","Returns the timeout for sessions in this session context.":"返回本会话上下文中会话的超时。\r\n","javax.net.ssl.HandshakeCompletedEvent.HandshakeCompletedEvent(javax.net.ssl.SSLSocket, javax.net.ssl.SSLSession)":"javax.net.ssl.handshakecomplededevent.handshakecompletedevent（javax.net.ssl.sslslsocket，javax.net.net.ssl.sslsession）\r\n","\r\n            The reserved parameter name used for supplying child content.\r\n            ":"\r\n            用于提供儿童内容的保留参数名称。\r\n            \r\n","if this MAC is not initialized.":"如果此Mac未初始化。\r\n","javax.net.ssl.SSLParameters.getUseCipherSuitesOrder()":"javax.net.ssl.sslparameters.getuseciphersuitesorder（）\r\n","Receive notification of the logical content of a document.":"接收文档逻辑内容的通知。\r\n","Defines parameter names for connections in HttpCore.":"定义httpcore中连接的参数名称。\r\n"," cannot be compiled.":" 无法编译。\r\n","\r\n            Gets the suffix value.\r\n            For example, this will be ":"\r\n            获取后缀值。\r\n            例如，这将是\r\n","if an I/O error occurs.\n          This indicates that connection keep-alive is not possible.\n":"如果发生I/O错误。\r\n          这表明连接保持势是不可能的。\r\n\r\n","java.util.zip.CRC32.update(int)":"java.util.zip.crc32.update（int）\r\n","\r\n            Called when a cookie is deleted.\r\n            ":"\r\n            删除cookie时称呼。\r\n            \r\n","Get the log Level that has been specified for this Logger. -or- Set the log level specifying which message levels will be\n            logged by this logger.":"获取已为该记录器指定的日志级别。 - 或 - 设置日志级别指定将是哪些消息级别\r\n            该记录仪记录下来。\r\n","org.xml.sax.helpers.ParserAdapter.getContentHandler()":"org.xml.sax.helpers.parseradapter.getContenthandler（）\r\n","java.util.concurrent.PriorityBlockingQueue.drainTo(java.util.Collection)":"java.util.concurrent.priorityblockingqueue.drainto（java.util.collection）\r\n","Sealed":"密封\r\n"," that produces the sum of a integer-valued\n            function applied to the input elements.":" 产生一个整数价值的总和\r\n            应用于输入元素的功能。\r\n","Queries whether the given thread is waiting to acquire this\n            lock.":"查询给定线程是否正在等待获取此问题\r\n            锁。\r\n",", with no current output stream.":"，没有当前的输出流。\r\n","java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndAccumulate(java.lang.Object, int, java.util.function.IntBinaryOperator)":"java.util.concurrent.atomic.atomicintegerfieldupdater.getandaccumulate（java.lang.object，int，int，java.util.function.intbinaryoperator）\r\n","Ths interface represents a cookie attribute handler responsible\n for parsing, validating, and matching a specific cookie attribute, \n such as path, domain, port, etc.":"THS接口代表cookie属性处理程序负责\r\n 用于解析，验证和匹配特定的cookie属性，\r\n 例如路径，域，端口等。\r\n","org.w3c.dom.DOMStringList.contains(java.lang.String)":"org.w3c.dom.domstringlist.contains（java.lang.string）\r\n","java.util.stream.Collectors.groupingByConcurrent(java.util.function.Function, java.util.function.Supplier, java.util.stream.Collector)":"java.util.stream.collectors.groupingbyconcurrent（java.util.function.function.function，java.util.function.supplier，java.util.stream.collector）\r\n","Constructs a new SSLSessionBindingEvent.":"构建一个新的sslsessionbindingevent。\r\n","A constant that represents the years field.":"代表年份领域的常数。\r\n","javax.net.ssl.SSLSocket.removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)":"javax.net.ssl.sslsocket.removehandhakecompletedListener（javax.net.net.ssl.handshakecompletedlistedlistener）\r\n","Creates a new credentials scope for the given \n ":"为给定创建新的凭证范围\r\n \r\n"," or its prefix is \"xmlns\" and the\n   ":" 或其前缀是“ xmlns”，而\r\n   \r\n","Report an XML comment anywhere in the document.":"报告文档中任何地方的XML评论。\r\n","\r\n            Contains user identity information as well as additional authentication state.\r\n            ":"\r\n            包含用户身份信息以及其他身份验证状态。\r\n            \r\n","\r\n            property is used to determine the order in which instances are executed. When two handlers\r\n            have the same value for ":"\r\n            属性用于确定执行实例的顺序。当两个处理程序\r\n            具有相同的价值\r\n","\r\n            Raises the ":"\r\n            提高\r\n","java.util.logging.ErrorManager.FORMAT_FAILURE":"java.util.logging.errormanager.format_failure\r\n"," if it exists and is a double or\n            can be coerced to a double, or ":" 如果存在并且是双重或\r\n            可以将双重胁迫或\r\n","org.w3c.dom.NamedNodeMap":"org.w3c.dom.namednodemap\r\n","org.xml.sax.helpers.DefaultHandler.setDocumentLocator(org.xml.sax.Locator)":"org.xml.sax.helpers.defaulthandler.setDocumentLocator（org.xml.sax.locator）\r\n","javax.crypto.KeyGeneratorSpi.engineInit(java.security.SecureRandom)":"javax.crypto.KeygeneratorsPi.Engineinit（Java.security.securerandom）\r\n","Initializes this key generator for a certain keysize, using the given\n            source of randomness.":"使用给定的\r\n            随机性来源。\r\n"," with the provided ":"提供的\r\n","java.util.prefs.AbstractPreferences.toString()":"java.util.prefs.abstractpreferences.tostring（）\r\n","Creates a new input stream with the specified compressor and buffer\n            size.":"使用指定的压缩机和缓冲区创建新的输入流\r\n            尺寸。\r\n","\r\n            Gets the IDs of the event handlers that were disposed.\r\n            ":"\r\n            获取被处置的事件处理程序的ID。\r\n            \r\n","expression":"表达\r\n","Log a message, with one object parameter.":"记录一条消息，使用一个对象参数。\r\n","java.util.stream.Collectors.partitioningBy(java.util.function.Predicate, java.util.stream.Collector)":"java.util.stream.collectors.partitioningby（java.util.function.predicate，java.util.stream.collector）\r\n"," or it is not possible to create a\n   ":" 或者不可能创建一个\r\n   \r\n","javax.xml.datatype.DatatypeConstants.DECEMBER":"javax.xml.datatype.datatypeconstants.decmern\r\n"," attribute specifying a URL that can be\n used to obtain the most recent version of the extension if the\n required version is not already installed.":" 属性指定可以是的URL\r\n 如果是\r\n 尚未安装所需版本。\r\n"," instance from this\n node.":" 实例\r\n 节点。\r\n","Get the byte stream that was set with setByteStream. -or- Set the byte stream to be used as input.":"获取使用SetByTestream设置的字节流。 - 或 - 设置字节流用作输入。\r\n","Returns the IV or null if this parameter set does not contain an IV.":"如果此参数集不包含iv，则返回iv或null。\r\n","Obtains an array of supported signature algorithms that the local side\n            is willing to use.":"获得本地侧的一系列支持的签名算法\r\n            愿意使用。\r\n","org.w3c.dom.Document.adoptNode(org.w3c.dom.Node)":"org.w3c.dom.document.adoptnode（org.w3c.dom.node）\r\n","Formats one name-value pair, where the value is optional.":"格式化一个名称对对，该值是可选的。\r\n","java.util.logging.ConsoleHandler":"java.util.logging.consolehandler\r\n","javax.sql.RowSet.setBigDecimal(java.lang.String, java.math.BigDecimal)":"javax.sql.rowset.setbigdecimal（java.lang.string，java.math.bigdecimal）\r\n","java.util.prefs.Preferences.clear()":"java.util.prefs.preferences.clear（）\r\n","Creates a <code>CDATASection</code> node whose value is the specified\n            string.":"创建<code> cdatasection </code>节点的值是指定的\r\n            细绳。\r\n","Set low and high order component of XSD <code>dateTime</code> year field.":"设置XSD <code> DateTime </code>年度字段的低和高阶组件。\r\n","The www authenticate challange header.":"www身份验证的挑战头。\r\n","The base URI to be used (see section 5.1.4 in []) for\n resolving a relative ":"要使用的基本URI（请参阅[[] In []的第5.1.4节）\r\n 解决亲戚\r\n","javax.crypto.MacSpi.engineGetMacLength()":"javax.crypto.macspi.enginegetmaclength（）\r\n","Signals that an error of some sort has occurred while reading from\n            or writing to a JAR file.":"信号表明从阅读时发生了某种错误\r\n            或写入罐子文件。\r\n","javax.net.ssl.HttpsURLConnection.setHostnameVerifier(javax.net.ssl.HostnameVerifier)":"javax.net.ssl.httpsurlconnection.sethostnameverifier（javax.net.ssl.hostnameverifier）\r\n",", this value includes the vertical scroll offset, if any.\r\n            ":"，此值包括垂直滚动偏移量（如果有）。\r\n            \r\n","Represents a predicate (boolean-valued function) of one argument.":"代表一个参数的谓词（布尔值函数）。\r\n","org.xml.sax.helpers.AttributesImpl.getValue(int)":"org.xml.sax.helpers.attributesimpl.getValue（int）\r\n","javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendarTime(int, int, int, int, int)":"javax.xml.datatype.datatypefactory.newxmlgregoriancalendartime（int，int，int，int，int，int）\r\n","The node is an <code>Element</code>.":"节点是<code>元素</code>。\r\n","Return an attribute's qualified (prefixed) name.":"返回属性的合格（前缀）名称。\r\n","Initializes this key generator with the specified parameter\n            set and a user-provided source of randomness.":"用指定参数初始化此密钥生成器\r\n            设置和用户提供的随机性来源。\r\n","javax.xml.datatype.DatatypeConstants.LESSER":"javax.xml.datatype.datatypeconstants.lesser\r\n","java.util.concurrent.TimeUnit.timedJoin(java.lang.Thread, long)":"java.util.concurrent.timeunit.timedjoin（java.lang.thread，long）\r\n","javax.sql.RowSet.setTimestamp(int, java.sql.Timestamp)":"javax.sql.Rowset.setTimestamp（int，java.sql.timestamp）\r\n","Creates a new MalformedChallengeException with a ":"用\r\n","Checks if this duration object is strictly longer than\n            another <code>Duration</code> object.":"检查此持续时间是否严格比\r\n            另一个<code>持续时间</code>对象。\r\n","NOT_SUPPORTED_ERR: Raised if the source node is of type\n   ":"not_supported_err：如果源节点为类型，则提出\r\n   \r\n","Username and password ":"用户名和密码\r\n","java.util.function.BinaryOperator.minBy(java.util.Comparator)":"java.util.function.binaryoperator.minby（java.util.comparator）\r\n","Look up the index of an attribute by XML qualified (prefixed) name.":"查找XML合格（前缀）名称的属性索引。\r\n","Indicates the position of a node in a source DOM, intended\n            primarily for error reporting.":"指示节点在源dom中的位置，打算\r\n            主要用于错误报告。\r\n","Attempts to encode plaintext bytes from a subsequence of data\n            buffers into SSL/TLS network data.":"尝试从数据子序列编码明文字节\r\n            缓冲区中的SSL/TLS网络数据。\r\n","Actually formats a request line.":"实际格式化了请求行。\r\n","\r\n            Extension methods for storing authentication tokens in ":"\r\n            用于存储身份验证令牌的扩展方法\r\n","org.xml.sax.ext.Attributes2Impl.setSpecified(int, boolean)":"org.xml.sax.ext.attributes2impl.setspecified（int，boolean）\r\n","Encodes this object as a human readable JSON string for debugging, such\n            as:":"将此对象编码为人类可读的JSON字符串，以调试\r\n            作为：\r\n","Perform privileged work as a particular ":"作为特定的特权工作\r\n","Request interceptor that matches cookies available in the current\n ":"请求与当前可用的cookie匹配的拦截器\r\n \r\n","\r\n            Contains information used to perform the code exchange.\r\n            ":"\r\n            包含用于执行代码交换的信息。\r\n            \r\n","\r\n            Gets the changes to components that were added or updated.\r\n            ":"\r\n            获取添加或更新的组件的更改。\r\n            \r\n","org.json.JSONTokener.more()":"org.json.jsontokener.more（）\r\n","Gets the ODBC Data Source Name property associated with this ":"获取与此关联的ODBC数据源名称属性\r\n","The constant which defines the length of a DESede key in bytes.":"定义字节中值键的长度的常数。\r\n","Set the output to the given writer.":"将输出设置为给定的作者。\r\n","Returns a collection containing threads that may be waiting to\n            acquire this lock.":"返回包含可能正在等待的线程的集合\r\n            获取此锁。\r\n","java.util.concurrent.atomic.DoubleAccumulator.DoubleAccumulator(java.util.function.DoubleBinaryOperator, double)":"java.util.concurrent.Atomic.DoubleAccumulator.DoubleAccumulator（java.util.function.doublebinaryoperator，double）\r\n","(?s)":"（？s）\r\n","Returns a socket connected to the given host that is layered over an\n            existing socket.":"返回连接到给定主机的插座，该插座分层\r\n            现有插座。\r\n"," instances by request URI.":" 通过请求URI的实例。\r\n","\r\n            Provides an abstraction for querying and mananging URI navigation.\r\n            ":"\r\n            提供了用于查询和Manang uri导航的抽象。\r\n            \r\n","javax.xml.transform.stream.StreamResult.StreamResult(java.io.OutputStream)":"javax.xml.transform.stream.streamresult.streamresult（java.io.outputstream）\r\n","Returns a new CompletionStage that, when this stage completes\n            normally, is executed using this stage's default asynchronous\n            execution facility, with this stage's result as the argument to\n            the supplied action.":"返回一个新的完整舞台，当这个阶段完成时\r\n            通常，使用此阶段的默认异步执行\r\n            执行设施，此阶段的结果是\r\n            提供的行动。\r\n","java.util.prefs.AbstractPreferences":"java.util.prefs.abstractpreferences\r\n","javax.xml.transform.OutputKeys.ENCODING":"javax.xml.transform.outputkeys.encoding\r\n","\n Returns ":"\r\n 返回\r\n","java.util.concurrent.locks.LockSupport.parkNanos(long)":"java.util.concurrent.locks.locksupport.parknanos（长）\r\n","JSONArray":"jsonarray\r\n","Creates an exception with the specified detail message.":"使用指定的详细信息创建一个例外。\r\n","javax.xml.datatype.Duration.getDays()":"javax.xml.datatype.duration.getDays（）（）\r\n","This is a convenience attribute that allows direct access to the child\n node that is the document element of the document.":"这是一个便利属性，可以直接访问孩子\r\n 节点是文档的文档元素。\r\n","javax.net.ssl.KeyStoreBuilderParameters":"Javax.net.ssl.KeystoreBuilderParameters\r\n"," if the lock is currently held non-exclusively.":" 如果锁当前是非固定的。\r\n","\r\n            Not intended for use by application code.\r\n            ":"\r\n            不打算通过应用程序代码使用。\r\n            \r\n","Remove an attribute from the list.":"从列表中删除属性。\r\n","javax.sql.RowSet.setRef(int, java.sql.Ref)":"javax.sql.Rowset.setRef（int，java.sql.ref）\r\n","javax.crypto.Cipher.getMaxAllowedParameterSpec(java.lang.String)":"javax.crypto.cipher.getmaxloweredparameterspec（java.lang.string）\r\n","java.util.logging.Handler.setErrorManager(java.util.logging.ErrorManager)":"java.util.logging.handler.seterrormanager（java.util.logging.errormanager）\r\n","org.apache.http.conn.scheme.SocketFactory.isSecure(java.net.Socket)":"org.apache.http.conn.scheme.socketfactory.issecure（java.net.socket）\r\n","java.util.logging.LogManager.readConfiguration()":"java.util.logging.logmanager.ReadConfiguration（）\r\n","\r\n            Provides programmatic configuration used by ":"\r\n            提供编程配置\r\n","A resizable byte array.":"一个可重大的字节阵列。\r\n","javax.net.ssl.SSLSocket.getSupportedCipherSuites()":"javax.net.ssl.sslsocket.getSupportedCiphersuites（）\r\n","Defines the charset to be used when encoding \n ":"定义编码时要使用的字符集\r\n \r\n","Returns the charset to be used for writing HTTP headers.":"返回用于编写HTTP标头的字符集。\r\n","\r\n            Supplies information about an drag event that is being raised.\r\n            ":"\r\n            提供有关正在提出的阻力事件的信息。\r\n            \r\n","This class provides support for general purpose compression using the\n            popular ZLIB compression library.":"该课程为通用压缩提供了支持\r\n            流行的Zlib压缩库。\r\n","java.util.logging.LogManager.getLogManager()":"java.util.logging.logmanager.getlogmanager（）\r\n","This class implements a stream filter for uncompressing data in the\n            \"deflate\" compression format.":"该类实现流滤波器，用于在\r\n            “ Deflate”压缩格式。\r\n","wrappedKey":"包裹着\r\n","ErrorManager objects can be attached to Handlers to process\n            any error that occurs on a Handler during Logging.":"errormanager对象可以连接到处理程序以进行处理\r\n            记录过程中处理程序上发生的任何错误。\r\n","javax.crypto.spec.PBEKeySpec.PBEKeySpec(char[])":"javax.crypto.spec.pbekeyspec.pbekeyspec（char []）\r\n","AbstractQueuedSynchronizer":"抽象表明的共介剂\r\n","\r\n            Handle sign in.\r\n            ":"\r\n            手柄登录。\r\n            \r\n","Preferences#getInt(String,int)":"首选项＃getint（字符串，int）\r\n","javax.xml.datatype.Duration.addTo(java.util.Date)":"javax.xml.datatype.duration.addto（java.util.date）\r\n","When the\n            supplied index does not point to an attribute\n            in the list.\n":"当。。。的时候\r\n            提供的索引没有指向属性\r\n            在列表中。\r\n\r\n","Sets the interceptor lists.":"设置拦截器列表。\r\n","javax.net.ssl.HandshakeCompletedEvent.getCipherSuite()":"javax.net.ssl.handshakecomplededevent.getCipherSuite（）\r\n","org.xml.sax.ext.Attributes2Impl.setDeclared(int, boolean)":"org.xml.sax.ext.attributes2impl.setDeclared（int，boolean）\r\n","Removes the entry for a key only if currently mapped to a given value.":"仅当当前映射到给定值时，才删除密钥的条目。\r\n"," is not a descendant of ":" 不是\r\n"," if the control key was down when the event was fired. ":" 如果控制键在事件被解雇时关闭。\r\n","Checks if the given DES key material, starting at <code>offset</code>\n            inclusive, is parity-adjusted.":"检查给定的DES关键材料，从<code> Offset </code>开始\r\n            包容性，是奇偶校验调整的。\r\n","Reset the logging configuration.":"重置日志记录配置。\r\n","\r\n            Performs the first render for a root component, waiting for this component and all\r\n            children components to finish rendering in case there is any asynchronous work being\r\n            done by any of the components. After this, the root component\r\n            makes its own decisions about when to re-render, so there is no need to call\r\n            this more than once.\r\n            ":"\r\n            执行根部组件的第一个渲染，等待此组件和所有\r\n            儿童组件要完成渲染，以防万一有异步工作\r\n            由任何组件完成。之后，根部分\r\n            就何时重新渲染做出自己的决定，因此无需致电\r\n            这不止一次。\r\n            \r\n","org.json.JSONArray.JSONArray(java.lang.Object)":"org.json.jsonarray.jsonarray（java.lang.Object）\r\n"," and the DOM implementation doesn't support\n   the replacement of the ":" 并且DOM实施不支持\r\n   替换\r\n","Creates an unconnected socket.":"创建一个未连接的插座。\r\n","java.util.regex.Matcher.groupCount()":"java.util.regex.matcher.groupcount（）\r\n"," tasks.":" 任务。\r\n","java.util.concurrent.Phaser.arrive()":"java.util.concurrent.phaser.arrive（）\r\n","Finish a response.":"完成回应。\r\n","org.w3c.dom.Document.createAttribute(java.lang.String)":"org.w3c.dom.document.createattribute（java.lang.string）\r\n","Constructor is used only by subclasses.":"构造函数仅由子类使用。\r\n","Receive notification of a recoverable parser error.":"收到可回收解析器错误的通知。\r\n"," providing secure protocols like SSL (Secure\n Sockets Layer) or TLS (Transport Layer Security).":" 提供诸如SSL之类的安全协议（安全\r\n 插座层）或TLS（传输层安全性）。\r\n","PSpecified":"pspsiged\r\n","java.util.concurrent.locks.Condition.awaitUninterruptibly()":"java.util.concurrent.locks.condition.awaitundimentible（）\r\n","Returns the last modification time of the entry. -or- Sets the last modification time of the entry.":"返回条目的最后一个修改时间。 - 或设置条目的最后一个修改时间。\r\n","Flush any buffered messages.":"冲洗任何缓冲消息。\r\n","Retrieves and removes the first element of this deque, waiting\n up to the specified wait time if necessary for an element to\n become available.":"检索并删除此Deque的第一个元素，等待\r\n 如果必要的元素，则达到指定的等待时间\r\n 可用。\r\n","javax.net.ssl.SSLServerSocket.SSLServerSocket(int, int, java.net.InetAddress)":"javax.net.ssl.sslserversocket.sslserversocket（int，int，java.net.inetaddress）\r\n","javax.net.ssl.SSLParameters.SSLParameters(java.lang.String[])":"javax.net.ssl.sslparameters.sslparameters（java.lang.string []）\r\n","This class maintains a map of HTTP routes to maximum number of connections allowed \n for those routes.":"此类将HTTP路由的地图维护到允许的最大连接数量\r\n 对于那些路线。\r\n","\r\n            Holds metadata related to a data editing process, such as flags to indicate which\r\n            fields have been modified and the current set of validation messages.\r\n            ":"\r\n            持有与数据编辑过程相关的元数据，例如标志以指示哪个\r\n            字段已修改并当前的验证消息集。\r\n            \r\n","\r\n            The policy name that determines whether the content can be displayed.\r\n            ":"确定是否可以显示内容的策略名称。\r\n            \r\n","Returns an instance of the named implementation of ":"返回指定实现的实例\r\n"," that was the original (unmodified) content of\n the ":" 那是原始的（未修改）的内容\r\n 这\r\n","Create a SAXResult that targets a SAX2 ":"创建一个针对SAX2的萨克斯式\r\n","if the specified provider does not exist.":"如果指定的提供商不存在。\r\n","if this cipher instance is not initialized for encryption or\n             decryption.":"如果此密码实例未初始化以进行加密或\r\n             解密。\r\n","GLOBAL_LOGGER_NAME is a name for the global logger.":"global_logger_name是Global Logger的名称。\r\n","java.util.stream.Collector.of(java.util.function.Supplier, java.util.function.BiConsumer, java.util.function.BinaryOperator, java.util.function.Function, java.util.stream.Characteristics)":"java.util.stream.collector.of（Java.util.function.supplier，Java.util.function.biconsumer，java.util.function.binaryoperator，java.util.util.util.function.function.function.function.java.util.util.stream.characteristics）\r\n","org.json.JSONStringer.endObject()":"org.json.jsonstringer.endobject（）\r\n","java.util.prefs.Preferences.childrenNames()":"java.util.prefs.preferences.childrennames（）\r\n","javax.xml.transform.OutputKeys.STANDALONE":"javax.xml.transform.outputkeys.standalone\r\n","Ensures that future reads from this preference node and its\n            descendants reflect any changes that were committed to the persistent\n            store (from any VM) prior to the ":"确保未来从此偏好节点及其读取\r\n            后代反映了致力于持续的任何变化\r\n            存储（来自任何VM）\r\n","CLOSE_FAILURE is used when a close of an output stream fails.":"当输出流的关闭失败时，使用CLOSS_FAILURE。\r\n","javax.security.auth.callback.PasswordCallback.setPassword(char[])":"javax.security.auth.callback.passwordcallback.setpassword（char []）\r\n","The number of bytes of each archive segment.":"每个存档段的字节数。\r\n","java.util.logging.Logger.log(java.util.logging.Level, java.lang.Throwable, java.util.function.Supplier)":"java.util.logging.logger.log（java.util.logging.level，java.lang.throwable，java.util.function.supplier）\r\n","An array of headers to iterate over.":"一系列迭代的标题。\r\n","java.util.concurrent.ThreadPoolExecutor.allowCoreThreadTimeOut(boolean)":"java.util.concurrent.threadpoolexecutor.AllowCoreThreadTimeout（boolean）\r\n"," is determined to be invalid.\r\n            ":" 被确定为无效。\r\n            \r\n","\r\n            Gets or sets the return URL that will be flowed up to the access denied page.\r\n            If ":"\r\n            获取或设置将流入访问拒绝页面的返回URL。\r\n            如果\r\n","java.util.concurrent.atomic.AtomicReference.set(java.lang.Object)":"java.util.concurrent.atomic.atomicreference.set（java.lang.object）\r\n"," if the specified attribute is determined\n            to be ID.":" 如果确定指定的属性\r\n            成为ID。\r\n","javax.sql.RowSetEvent.RowSetEvent(javax.sql.RowSet)":"Javax.sql.Rowsetevent.Rowsetevent（Javax.sql.Rowset）\r\n","javax.sql.ConnectionEventListener.connectionClosed(javax.sql.ConnectionEvent)":"javax.sql.connectioneventlistener.connectionclosed（javax.sql.connectionevent）\r\n","\r\n            Extension method for SignOut using the ":"\r\n            使用签名的扩展方法\r\n","\n          property as an\n          ":"\r\n          属性为一个\r\n          \r\n","java.util.function.ToDoubleFunction.applyAsDouble(java.lang.Object)":"java.util.function.todoublefunction.applyasdouble（java.lang.object）\r\n","Registers a scheme.":"注册一个计划。\r\n","\r\n            Reads a boolean value from either a ":"\r\n            从任何一个读取布尔值\r\n","Constructs a parameter set for the generation of Diffie-Hellman\n            (system) parameters.":"为生成Diffie-Hellman构建参数集\r\n            （系统）参数。\r\n","Log a WARNING message.":"记录警告消息。\r\n","if the information cannot be erased.\n":"如果无法删除信息。\r\n\r\n","\r\n            The X coordinate of the touch point relative to the left edge of the browser viewport, not including any scroll offset.\r\n            ":"\r\n            触摸点相对于浏览器视口的左边缘的X坐标，不包括任何滚动偏移。\r\n            \r\n","\r\n            A reference to the first byte in the buffer.\r\n            ":"\r\n            引用缓冲区中的第一个字节。\r\n            \r\n","Read-only interface for route information.":"仅阅读界面以获取路由信息。\r\n","Defines the default host.":"定义默认主机。\r\n"," attribute defining the version of\n the extension specification.":" 属性定义版本\r\n 扩展规范。\r\n"," attribute names for protocol execution.":"协议执行的属性名称。\r\n","javax.net.ssl.TrustManagerFactorySpi.engineInit(javax.net.ssl.ManagerFactoryParameters)":"javax.net.ssl.trustmanagerfactoryspi.engineinit（javax.net.ssl.managerfactoryparameters）\r\n","java.util.concurrent.Future.get()":"java.util.concurrent.future.get（）\r\n","Evaluates this predicate on the given argument.":"评估给定参数的谓词。\r\n","Checks if response data is available from the connection.":"检查是否可以从连接中获得响应数据。\r\n","if the data length >= 64 KiB.\n":"如果数据长度> = 64 KIB。\r\n\r\n","org.xml.sax.InputSource.InputSource(java.io.Reader)":"org.xml.sax.inputsource.inputsource（java.io.reader）\r\n","This constant specifies that the whole ":"这个常数指定整体\r\n","Obtains a ":"获得\r\n","Tells the parser to resolve the systemId against the baseURI\n            and read the entity text from that resulting absolute URI.":"告诉解析器解决systemID针对baseuri\r\n            并从结果的绝对URI中读取实体文本。\r\n","This event indicates that an SSL handshake completed on a given\n            SSL connection.":"此事件表明SSL握手在给定的\r\n            SSL连接。\r\n"," that is thrown when the antiforgery token validation fails.\r\n            ":" 当抗验证令牌验证失败时，这将被抛弃。\r\n            \r\n","javax.xml.transform.sax.TransformerHandler":"javax.xml.transform.sax.transformerhandler\r\n","java.util.concurrent.atomic.AtomicBoolean.getAndSet(boolean)":"java.util.concurrent.atomic.atomicboolean.getandset（boolean）\r\n","Signals that a cookie is in some way invalid or illegal in a given\n context":"信号表明cookie在某种程度上以某种方式无效或在给定的\r\n 语境\r\n","This class extends <code>ServerSocket</code>s and\n            provides secure server sockets using protocols such as the Secure\n            Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.":"此类扩展<code> serversocket </code> s和\r\n            使用协议（例如安全）提供安全的服务器插座\r\n            插座层（SSL）或传输层安全性（TLS）协议。\r\n","The interface that adds support to the JDBC API for the\n            JavaBeans<sup><font size=-2>TM</font></sup> component model.":"为JDBC API添加支持的接口\r\n            javabeans <sup> <font size = -2> tm </font> </sup>组件模型。\r\n"," to the end of this array.":" 到这个数组的末尾。\r\n","if no installed provider can provide the requested protocol":"如果没有安装的提供商可以提供请求的协议\r\n","Given the partial or complete certificate chain provided by the\n            peer, build a certificate path to a trusted root and return if\n            it can be validated and is trusted for server SSL\n            authentication based on the authentication type.":"考虑到由\r\n            同行，建立通往可信根的证书路径，然后返回\r\n            它可以验证并被信任服务器SSL\r\n            基于身份验证类型的身份验证。\r\n","Opens this connection according to the given route.":"根据给定的路线打开此连接。\r\n"," if interrupted\n            while waiting, or returning immediately if the current phase is\n            not equal to the given phase value or this phaser is\n            terminated.":" 如果中断\r\n            等待时，或者如果当前阶段是\r\n            不等于给定的相值或此相位器为\r\n            终止。\r\n","javax.xml.datatype.DatatypeConstants.DAYS":"javax.xml.datatype.datatypeconstants.days\r\n","Look up an attribute's type by qualified (prefixed) name.":"通过合格（前缀）名称查找属性类型。\r\n","javax.xml.datatype.DatatypeConstants.MIN_TIMEZONE_OFFSET":"javax.xml.datatype.datatypeconstants.min_timezone_offset\r\n"," the\n            expected value.":" 这\r\n            期望值。\r\n","#newInstance()":"#NewInstance（）\r\n","java.util.logging.Level.FINE":"java.util.logging.level.fine\r\n","ReadWriteLock#readLock()":"readwritelock＃readlock（）\r\n","java.util.concurrent.atomic.AtomicIntegerArray.addAndGet(int, int)":"java.util.concurrent.atomic.atomicintegerarray.addandget（int，int）\r\n","javax.crypto.Cipher.doFinal()":"javax.crypto.cipher.dofinal（）\r\n","\r\n            A flag indicating whether authorization has succeeded.\r\n            Returns a flag indicating whether the user, and optional resource has fulfilled the policy.    \r\n            ":"\r\n            指示授权是否成功的标志。\r\n            返回指示用户和可选资源是否符合策略的标志。\r\n            \r\n","javax.net.ssl.HostnameVerifier":"javax.net.ssl.hostnameverifier\r\n"," if it exists and is a long or\n            can be coerced to a long, or throws otherwise.":" 如果存在并且很长或\r\n            可以将其胁迫到长时间，也可以扔掉。\r\n","Utility class to contain basic XML values as constants.":"实用程序类包含基本XML值作为常数。\r\n","javax.sql.RowSet.setNCharacterStream(java.lang.String, java.io.Reader)":"javax.sql.Rowset.setncharacterstream（java.lang.string，java.io.reader）\r\n","\r\n            A primitive types reader for the MessagePack format.\r\n            ":"\r\n            MessagePack格式的原始类型读取器。\r\n            \r\n","javax.xml.transform.TransformerException":"javax.xml.transform.transformerexception\r\n","java.util.concurrent.atomic.AtomicLong.compareAndSet(long, long)":"java.util.concurrent.atomic.atomiclong.compareandset（长，长）\r\n","java.util.zip.GZIPInputStream.GZIPInputStream(java.io.InputStream, int)":"java.util.zip.gzipinputstream.gzipinputstream（java.io.inputstream，int）\r\n","Returns a stamp that can later be validated, or zero\n            if exclusively locked.":"返回可以验证的邮票或零\r\n            如果只锁定。\r\n","if the status line has not be set":"如果状态线未设置\r\n","A handler for rejected tasks that throws a\n ":"用于拒绝抛出任务的处理程序\r\n \r\n"," method. -or- Set the ":" 方法。 - 或 - 设置\r\n","Constructs a JarException with the specified detail message.":"用指定的详细信息构建一种Jarexception。\r\n","NOT_SUPPORTED_ERR: Raised if the version is set to a value that is\n   not supported by this ":"not_supported_err：如果将版本设置为一个值为的值\r\n   不支持\r\n","javax.net.ssl.X509TrustManager":"javax.net.ssl.x509trustmanager\r\n","java.util.zip.Deflater.Deflater()":"java.util.zip.deflater.deflater（）\r\n","sync":"同步\r\n","org.json.JSONObject.numberToString(java.lang.Number)":"org.json.jsonobject.numbertostring（java.lang.number）\r\n","java.util.regex.Matcher.regionEnd()":"java.util.regex.matcher.regionend（）\r\n","Logger":"记录器\r\n","Gets all of the headers with the given name.":"获取所有带有给定名称的标题。\r\n","\r\n            Constructs an instance of ":"\r\n            构建一个实例\r\n","in case of a parse error\n":"如果出现解析错误\r\n\r\n","Protected convenience method to report an error to this Handler's\n            ErrorManager.":"受保护的便利方法向该处理程序报告错误\r\n            错误的人。\r\n","Returns the integer [0.":"返回整数[0。\r\n","Sets the array of protocols.":"设置协议的数组。\r\n","javax.xml.parsers.SAXParser.getSchema()":"javax.xml.parsers.saxparser.getschema（）\r\n","java.util.prefs.NodeChangeEvent.getParent()":"java.util.prefs.nodechangeevent.getParent（）\r\n"," as little endian.\r\n            ":" 就像小末日。\r\n            \r\n","javax.net.ssl.SSLSessionBindingListener":"javax.net.ssl.sslsessionbindinglistener\r\n","The token to be returned by the next call to ":"下一个电话要返回的令牌\r\n","An IO exception from the parser,\n            possibly from a byte stream or character stream\n            supplied by the application.":"解析器的IO例外，\r\n            可能来自字节流或字符流\r\n            由申请提供。\r\n","The type of the resource to evaluate.":"要评估的资源类型。\r\n","java.util.concurrent.PriorityBlockingQueue.PriorityBlockingQueue(int, java.util.Comparator)":"java.util.concurrent.priorityblockingqueue.priorityblockingquequequequequequequequequequequequequequequequequequequequequequequequequequequequequequequeque\r\n","A constant that represents the days field.":"代表天数的常数。\r\n","Processes the given challenge token.":"处理给定的挑战令牌。\r\n","The layering type of a route.":"路线的分层类型。\r\n","This class provides detailed information about the state of the\n authentication process.":"本课程提供有关状态的详细信息\r\n 身份验证过程。\r\n","if the specified algorithm is not available by any provider.":"如果指定算法尚无任何提供商。\r\n","\n            method of a ":"\r\n            方法\r\n","Removes a previously registered handshake completion listener.":"删除先前注册的握手完成听众。\r\n"," is set, errors are reported to\n      there first. See ":" 设置，报告错误\r\n      首先。看\r\n","While attempting to connect to a database, this method get the maximum\n time in seconds that this data source can wait.":"尝试连接到数据库时，此方法获得了最大值\r\n 该数据源可以等待几秒钟的时间。\r\n","\r\n            Holds validation messages for an ":"\r\n            保留验证消息\r\n","javax.sql.RowSet.setClob(int, java.io.Reader, long)":"Javax.sql.Rowset.setClob（int，java.io.Reader，long）\r\n","If we're running on JDK 1.4 or later, initialize the cause for the given throwable.":"如果我们在JDK 1.4或更高版本上运行，请初始化给定投掷的原因。\r\n","Removes this preference node and all of its descendants, invalidating\n            any preferences contained in the removed nodes.":"删除此偏好节点及其所有后代，无效\r\n            除去的节点中包含的任何偏好。\r\n","If any individual parameter's value is outside the maximum value constraint for the field\n   as determined by the Date/Time Data Mapping table in ":"如果任何单个参数的值不在字段的最大值约束之外\r\n   由在日期/时间数据映射表中确定\r\n","Attempts to set the state to reflect a release in exclusive\n            mode.":"试图设置国家以反映独家发行\r\n            模式。\r\n","P":"p\r\n","if an I/O error occurs, or the stream has been closed\n":"如果发生I/O错误或流已经关闭\r\n\r\n","\r\n            Makes a decision if authorization is allowed based on a specific requirement.\r\n            ":"\r\n            如果根据特定要求允许授权做出决定。\r\n            \r\n","Returns the #get current value as a ":"返回#get当前值作为一个\r\n","#tryRelease":"#tryrease\r\n","This class provides support for general purpose decompression using the\n            popular ZLIB compression library.":"该课程为通用解压缩提供了支持\r\n            流行的Zlib压缩库。\r\n","Reset this <code>DocumentBuilder</code> to its original configuration.":"将此<code> DocumentBuilder </code>重置为其原始配置。\r\n","Parameter for Cookie header formatting.":"cookie头格式的参数。\r\n","java.util.concurrent.atomic.DoubleAccumulator.get()":"java.util.concurrent.atomic.doubleacumulator.get（）\r\n","javax.net.ssl.SSLParameters":"javax.net.ssl.sslparameters\r\n","Returns the extra field data for the entry.":"返回条目的额外字段数据。\r\n","javax.xml.parsers.DocumentBuilderFactory.getSchema()":"javax.xml.parsers.documentbuilderfactory.getschema（）\r\n","\r\n            Gets a readonly list of the authentication schemes the ":"\r\n            获取身份验证方案的可读列表\r\n","java.util.concurrent.LinkedBlockingDeque.LinkedBlockingDeque(int)":"java.util.concurrent.linkedblockingdeque.linkedblockingdeque（int）\r\n","javax.xml.parsers.SAXParserFactory.setNamespaceAware(boolean)":"javax.xml.parsers.saxparserfactory.setnamespaceaware（boolean）\r\n","Determines the position of the next token separator.":"确定接下来的令牌分离器的位置。\r\n","Represents an operation upon two ":"代表两个对两个操作\r\n","CONFIG is a message level for static configuration messages.":"配置是静态配置消息的消息级别。\r\n","Creates a new header from a buffer.":"从缓冲区创建一个新标头。\r\n","),\r\n            converts an absolute URI into one relative to the base URI prefix.\r\n            ":"），\r\n            将绝对URI转换为一个相对于基本URI前缀的一个。\r\n            \r\n","Return one of the prefixes mapped to a Namespace URI.":"返回映射到名称空间URI的前缀之一。\r\n","Defines whether responses with an invalid ":"定义是否没有无效的响应\r\n","javax.sql.DataSource.getConnection(java.lang.String, java.lang.String)":"javax.sql.datasource.getConnection（java.lang.string，java.lang.string）\r\n","org.w3c.dom.Document.createEntityReference(java.lang.String)":"org.w3c.dom.document.createentityReference（java.lang.string）\r\n","Matcher":"匹配器\r\n","Get the error event handler in effect for the transformation.":"获取错误事件处理程序对转换有效。\r\n","Atomically sets to the given value and returns the previous value.":"原子设置为给定值并返回上一个值。\r\n","\r\n            Defaults to ":"\r\n            默认为\r\n","javax.crypto.CipherSpi.engineUpdate(byte[], int, int, byte[], int)":"javax.crypto.cipherspi.engineupdate（byte []，int，int，byte []，int）\r\n","org.w3c.dom.ProcessingInstruction":"org.w3c.dom..processinginstruction\r\n","The internal subset as a string, or ":"内部子集作为字符串，或\r\n","org.xml.sax.SAXParseException.getPublicId()":"org.xml.sax.saxparseexception.getPublicId（）\r\n",",\r\n            or some value between ":"，，，，\r\n            或之间的一些价值\r\n","org.json.JSONObject.JSONObject()":"org.json.jsonobject.jsonobject（）\r\n","Sets the given <code>RowSetMetaData</code> object as the\n            <code>RowSetMetaData</code> object for this <code>RowSet</code>\n            object.":"将给定的<code> rowsetMetadata </code>对象设置为\r\n            <code> RowsetMetadata </code>此<code> Rowset的对象</code>\r\n            目的。\r\n"," factors out the ":" 因素\r\n","javax.sql.RowSet.setCharacterStream(java.lang.String, java.io.Reader, int)":"Javax.sql.Rowset.SetCharacterstream（Java.lang.String，Java.io.Reader，int）\r\n","Evaluate an XPath expression in the specified context and return the result as a <code>String</code>.":"评估指定上下文中的XPATH表达式，并将结果返回为<code> String </code>。\r\n","if deserialization fails.":"如果避免失败。\r\n","org.xmlpull.v1.XmlPullParser.getNamespace(java.lang.String)":"org.xmlpull.v1.xmlpullparser.getnamespace（java.lang.string）\r\n","Creates a new ProtocolException with the specified detail message.":"使用指定的详细信息创建一个新的ProtoColexception。\r\n","Create a new SAXException wrapping an existing exception.":"创建一个新的saxexception包装现有异常。\r\n","\n            tasks that have been cancelled.":"\r\n            已取消的任务。\r\n","\r\n            Create a new claim manipulation action.\r\n            ":"\r\n            创建新的索赔操纵措施。\r\n            \r\n","javax.crypto.Cipher.getIV()":"javax.crypto.cipher.getiv（）\r\n","AtomicInteger":"Atomicinteger\r\n","Standard constants definitions":"标准常数定义\r\n","Resets this matcher and then attempts to find the next subsequence of\n            the input sequence that matches the pattern, starting at the specified\n            index.":"重置此匹配项，然后尝试找到下一个子序列\r\n            与模式匹配的输入序列，从指定的\r\n            指数。\r\n","javax.crypto.Mac.getAlgorithm()":"javax.crypto.mac.getalgorithm（）\r\n","#newInstance(String uri, String factoryClassName, ClassLoader classLoader)":"#NewInstance（字符串URI，String Factory ClassName，ClassLoader classLoader）\r\n",", less any bytes already \"consumed\" with ":"，更少任何已经“消耗”的字节\r\n","java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndIncrement(java.lang.Object)":"java.util.concurrent.atomic.atomicintegerfieldupdater.getandincrement（java.lang.object）\r\n","if any parameter is\n outside value constraints for the field as specified in\n .\n":"如果有任何参数\r\n 该字段的外部价值约束如指定\r\n 。\r\n\r\n","The SAX parser class was\n            found but could not be instantiated.":"萨克斯解析器类是\r\n            发现但无法实例化。\r\n","java.util.zip.ZipOutputStream.ZipOutputStream(java.io.OutputStream)":"java.util.zip.zipoutputstream.zipoutputstream（java.io.outputstream）\r\n","java.util.concurrent.atomic.AtomicIntegerArray.updateAndGet(int, java.util.function.IntUnaryOperator)":"java.util.concurrent.atomic.atomicintegerarray.updateandget（int，java.util.function.intunaryoperator）\r\n","if an error occurs while creating a new socket.":"如果在创建新套接字时发生错误。\r\n"," if this is\n            the root.":" 如果是\r\n            根。\r\n"," instead of a ":" 代替\r\n","javax.crypto.spec.DHParameterSpec.DHParameterSpec(java.math.BigInteger, java.math.BigInteger, int)":"javax.crypto.spec.dhparameterspec.dhparameterspec（java.math.biginteger，java.math.biginteger，int）\r\n","Processes the given array of bytes.":"处理给定的字节数组。\r\n","NOT_SUPPORTED_ERR: Raised if this document is an HTML document.\n":"NOT_SUPPORTED_ERR：如果此文档是HTML文档，则提出。\r\n\r\n","if initializing this key manager factory fails.":"如果初始化此关键经理工厂失败。\r\n"," providing thread safety and atomicity\n            guarantees.":" 提供线程安全性和原子质\r\n            保证。\r\n","A type-safe iterator for ":"用于类型的安全迭代器\r\n"," classes that can receive authentication\r\n            state information from the host environment.\r\n            ":" 可以接受身份验证的课程\r\n            来自主机环境的状态信息。\r\n            \r\n","javax.sql.RowSet.setBlob(int, java.io.InputStream, long)":"javax.sql.rowset.setblob（int，java.io.inputstream，long）\r\n","Processes the first <code>len</code> bytes in <code>input</code>,\n            starting at <code>offset</code> inclusive.":"处理第一个<code> len </code> bytes <code> input </code>，\r\n            从<code> offset </code>包含在内。\r\n","javax.security.auth.Subject.doAsPrivileged(javax.security.auth.Subject, java.security.PrivilegedAction, java.security.AccessControlContext)":"javax.security.auth.subject.doasprivileged（javax.security.auth.subject，java.security.privilegedAction，java.security.accerscorscontrolcontext）\r\n","org.json.JSONTokener.dehexchar(char)":"org.json.jsontokener.dehexchar（char）\r\n","Represents an HTTP version, as specified in RFC 2616.":"表示RFC 2616中指定的HTTP版本。\r\n"," with the\n            results of applying the given function to the current and\n            given values, returning the updated value.":" 与\r\n            将给定功能应用于电流的结果和\r\n            给定值，返回更新的值。\r\n","<code>LSResourceResolver</code> provides a way for applications to\n            redirect references to external resources.":"<code> lsresourceresolver </code>为应用程序提供了一种方式\r\n            重定向引用到外部资源。\r\n","org.apache.http.conn.ConnectTimeoutException.ConnectTimeoutException(java.lang.String)":"org.apache.http.conn.connecttimeoutexception.connecttimeoutexception（java.lang.string）\r\n","java.util.concurrent.PriorityBlockingQueue.comparator()":"java.util.concurrent.priorityblockingqueue.comparator（）\r\n","if no provider with ":"如果没有提供商\r\n","\r\n            Specifies that the class or method that this attribute is applied to requires the specified authorization.\r\n            ":"\r\n            指定该属性应用于需要指定授权的类或方法。\r\n            \r\n","\r\n            A list of ":"\r\n            的清单\r\n"," to mean ":" 意思是\r\n","javax.xml.parsers.SAXParser.parse(org.xml.sax.InputSource, org.xml.sax.HandlerBase)":"javax.xml.parsers.saxparser.parse（org.xml.sax.inputsource，org.xml.sax.handlerbase）\r\n","\r\n            Appends a new response cookie to the Set-Cookie header. If the cookie is larger than the given size limit\r\n            then it will be broken down into multiple cookies as follows:\r\n            Set-Cookie: CookieName=chunks-3; path=/\r\n            Set-Cookie: CookieNameC1=Segment1; path=/\r\n            Set-Cookie: CookieNameC2=Segment2; path=/\r\n            Set-Cookie: CookieNameC3=Segment3; path=/\r\n            ":"\r\n            将新的响应cookie添加到set-cookie标题上。如果cookie大于给定的尺寸限制\r\n            然后，它将分为多个cookie，如下：\r\n            set-cookie：cookiename = chunks-3;路径=/\r\n            set-cookie：cookienamec1 = segment1;路径=/\r\n            set-cookie：cookienamec2 = segment2;路径=/\r\n            set-cookie：cookienamec3 = segment3;路径=/\r\n            \r\n","Reject the node and its children.":"拒绝节点及其子女。\r\n","\r\n            Supplies the edit context explicitly. If using this parameter, do not\r\n            also supply ":"\r\n            明确提供编辑上下文。如果使用此参数，请勿\r\n            也提供\r\n","\r\n            Supplies information about a mouse event that is being raised.\r\n            ":"\r\n            提供有关正在提出的鼠标事件的信息。\r\n            \r\n","Creates a new input stream with the specified compressor and a\n            default buffer size.":"使用指定的压缩机和一个创建一个新的输入流\r\n            默认缓冲区大小。\r\n","KeyGeneratorSpi":"keygeneratorspi\r\n","Obtains the target host for this connection.":"获得此连接的目标主机。\r\n","org.xmlpull.v1.XmlPullParserFactory.setFeature(java.lang.String, boolean)":"org.xmlpull.v1.xmlpullparserfactory.setFature（java.lang.string，boolean）\r\n","java.util.concurrent.LinkedBlockingDeque.offer(java.lang.Object, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.linkedblockingdeque.offer（java.lang.object，long，java.util.concurrent.timeunit）\r\n","Performs a timed ":"执行定时\r\n","javax.crypto.Mac.getInstance(java.lang.String, java.security.Provider)":"javax.crypto.mac.getinstance（java.lang.string，java.security.provider）\r\n","Parameter names for routing in HttpConn.":"httpconn中路由的参数名称。\r\n","Return the column number where the current document event ends.":"返回当前文档事件结束的列号。\r\n","Obtains the current route of this connection.":"获得此连接的当前路线。\r\n","\r\n            An interface implemented by ":"\r\n            由\r\n","Returns the current value of the stamp.":"返回邮票的当前值。\r\n","SetCookie":"SetCookie\r\n"," dependent data if any.":" 依赖数据是否有。\r\n"," instance is not\n             initialized.\n":" 实例不是\r\n             初始化。\r\n\r\n","Returns the names of the SSL cipher suites which are currently\n            enabled for use on this engine.":"返回当前的SSL密码套件的名称\r\n            启用了用于此引擎的使用。\r\n","\n \n This parameter expects a value of type ":"\r\n \r\n 此参数期望类型的值\r\n","Returns a new CompletionStage that, when this and the other\n            given stage both complete normally, is executed with the two\n            results as arguments to the supplied action.":"返回一个新的完整舞台，当\r\n            给定阶段正常完成，两者都执行\r\n            结果作为所提供的行动的论点。\r\n","java.util.zip.InflaterInputStream.len":"java.util.zip.inflaterinputstream.len\r\n","java.util.logging.LogRecord.getMillis()":"java.util.logging.logrecord.getmillis（）\r\n","\r\n            Attempts to validate a cookie and request token set for the given ":"\r\n            试图验证cookie并请求给定的令牌设置\r\n","javax.crypto.spec.DESKeySpec.DESKeySpec(byte[])":"javax.crypto.spec.deskeyspec.deskeyspec（byte []）\r\n","\r\n            Resource is an optional parameter and may be null. Please ensure that you check it is not \r\n            null before acting upon it.\r\n            ":"\r\n            资源是可选参数，可能为null。请确保您检查它不是\r\n            在行动之前无效。\r\n            \r\n","INVALID_STATE_ERR: Raised if the ":"Invalid_state_err：如果是\r\n","Obtains the number of hops in this route.":"获得此路线中的啤酒花数。\r\n","\r\n            Invoked to post configure a TOptions instance.\r\n            ":"\r\n            调用以发布配置提升实例。\r\n            \r\n","\r\n            Called to mark the specified ":"\r\n            叫标记指定的\r\n","NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.\n":"no_modification_allowed_err：如果该节点已阅读，则提出。\r\n\r\n","Returns the name of the algorithm associated with this secret key.":"返回与此秘密密钥关联的算法的名称。\r\n","javax.security.auth.x500.X500Principal.X500Principal(byte[])":"javax.security.auth.x500.x500 principal.x500 principal（byte []）\r\n","Get the error message with location information\n            appended.":"获取带有位置信息的错误消息\r\n            附加。\r\n"," and supplies\n            blocking retrieval operations.":" 和用品\r\n            阻止检索操作。\r\n"," that is associated with this component.\r\n            ":" 这与此组件有关。\r\n            \r\n","The <code>CharacterData</code> interface extends Node with a set of\n            attributes and methods for accessing character data in the DOM.":"<code> targindata </code>接口用一组一组扩展了节点\r\n            用于访问DOM中字符数据的属性和方法。\r\n","Compiles the given regular expression into a pattern.":"将给定的正则表达式编译为模式。\r\n","The wrapped entity.":"包裹的实体。\r\n","Creates an element of the type specified.":"创建指定类型的元素。\r\n"," if this phaser has been terminated.":" 如果此移相器已终止。\r\n","Returns the parameters used with this cipher.":"返回此密码中使用的参数。\r\n","org.w3c.dom.Node.DOCUMENT_POSITION_CONTAINED_BY":"org.w3c.dom.node.document_position_contained_by\r\n","MAX_VALUE_LENGTH":"max_value_length\r\n","Log a WARNING message, which is only to be constructed if the logging\n            level is such that the message will actually be logged.":"记录警告消息，仅在记录时才能构建该消息\r\n            级别的级别可以实际记录该消息。\r\n","byte[0]":"字节[0]\r\n","javax.net.ssl.SSLSession.putValue(java.lang.String, java.lang.Object)":"javax.net.ssl.sslsession.putvalue（java.lang.string，java.lang.object）\r\n","If the startInstant parameter is null.":"如果startinstant参数为null。\r\n","When the\n            supplied names do not identify an attribute.\n":"当。。。的时候\r\n            提供的名称无法识别属性。\r\n\r\n","\r\n            Gets a value that indicates whether the ":"\r\n            获得一个指示是否的值\r\n","org.xml.sax.helpers.ParserFactory":"org.xml.sax.helpers.parserfactory\r\n","\r\n            The original path.\r\n            ":"\r\n            原始路径。\r\n            \r\n","Receive notification of basic DTD-related events.":"接收基本与DTD相关事件的通知。\r\n","This class provides access to the type information determined\n            by ":"此类提供对确定类型信息的访问\r\n            经过\r\n","\r\n            If set, this specifies a default scheme that authentication handlers should forward all authentication operations to\r\n            by default. The default forwarding logic will check the most specific ForwardAuthenticate/Challenge/Forbid/SignIn/SignOut\r\n            setting first, followed by checking the ForwardDefaultSelector, followed by ForwardDefault. The first non null result\r\n            will be used as the target scheme to forward to.\r\n            ":"\r\n            如果设置，这将指定一个默认方案，身份验证处理程序应将所有身份验证操作转发到\r\n            默认。默认转发逻辑将检查最具体的远期义务/挑战/禁止/signin/签名\r\n            首先设置，然后检查forwardDefaultSelector，然后检查forwardDefault。第一个非零结果\r\n            将被用作前进的目标方案。\r\n            \r\n"," set to this ":" 设置为此\r\n","Get the system identifier for this input source. -or- Set the system identifier for this input source.":"获取此输入源的系统标识符。 - 或 - 设置此输入源的系统标识符。\r\n","Begin the scope of a prefix-URI Namespace mapping.":"开始前缀-URI名称空间映射的范围。\r\n","org.xml.sax.helpers.AttributesImpl.setLocalName(int, java.lang.String)":"org.xml.sax.helpers.attributesimpl.setlocalname（int，java.lang.string）\r\n","Log a LogRecord.":"记录一个logrecord。\r\n","Causes the current thread to wait until it is signalled or interrupted,\n            or the specified waiting time elapses.":"导致当前螺纹等到信号或中断为止，\r\n            或指定的等待时间。\r\n","-valued result.":" - 值结果。\r\n","\r\n            Uniquely identifies a single field that can be edited. This may correspond to a property on a\r\n            model object, or can be any other named value.\r\n            ":"\r\n            独特地标识可以编辑的单个字段。这可能对应于\r\n            模型对象，也可以是任何其他命名值。\r\n            \r\n"," is currently busy\n loading a document, otherwise ":" 目前很忙\r\n 加载文档，否则\r\n","org.xml.sax.HandlerBase.error(org.xml.sax.SAXParseException)":"org.xml.sax.handlerbase.error（org.xml.sax.saxparseexception）\r\n","org.w3c.dom.ls.LSException.PARSE_ERR":"org.w3c.dom.ls.lsexception.parse_err\r\n","Holds all of the variables needed to describe an HTTP connection to a host.":"保留描述与主机的HTTP连接所需的所有变量。\r\n","java.util.function.ToIntBiFunction.applyAsInt(java.lang.Object, java.lang.Object)":"java.util.function.tointbifunction.applyasint（java.lang.object，java.lang.object）\r\n","Counts the number of dots \".":"计算点的数量”。\r\n","NOT_FOUND_ERR: Raised if there is no node named ":"not_found_err：如果没有命名的节点，则提出\r\n","java.util.concurrent.TimeUnit.toMillis(long)":"java.util.concurrent.timeunit.tomillis（long）\r\n","\r\n            Gets the amount of writable bytes in this segment.\r\n            It is the amount of bytes between ":"\r\n            获取此细分市场中的可写字节数量。\r\n            这是两个字节之间的数量\r\n","javax.xml.datatype.DatatypeConstants.DURATION":"javax.xml.datatype.datatypeconstants.duration\r\n","java.util.concurrent.PriorityBlockingQueue.offer(java.lang.Object, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.priorityblockingqueue.offer（java.lang.object，long，java.util.concurrent.timeunit）\r\n","Defines the class name of the default ":"定义默认的类名称\r\n","<code>DOMErrorHandler</code> is a callback interface that the DOM\n            implementation can call when reporting errors that happens while\n            processing XML data, or when doing some other processing (e.":"<code> domerrorhandler </code>是DOM的回调接口\r\n            在报告发生错误时，实施可以调用\r\n            处理XML数据，或进行其他处理时（e。\r\n","javax.crypto.KeyGenerator.init(java.security.spec.AlgorithmParameterSpec)":"javax.crypto.keygenerator.init（java.security.spec.algorithmparameterspec）\r\n","No handshake in progress.":"没有握手。\r\n","Returns the names of the protocols which could be enabled for use\n            on an SSL connection.":"返回可以使用的协议的名称\r\n            在SSL连接上。\r\n","\r\n            Gets or sets the issuer that should be used for any claims that are created\r\n            ":"\r\n            获取或设置应用于创建的任何索赔的发行人\r\n            \r\n"," to the policy.\r\n            ":" 到政策。\r\n            \r\n","\r\n            The unit of the delta values scroll amount.\r\n            ":"\r\n            增量值滚动量的单位。\r\n            \r\n","NOT_FOUND_ERR: Raised when the parameter name is not recognized.\n   ":"NOT_FOUND_ERR：未识别参数名称时提高。\r\n   \r\n","Obtains the tracked route.":"获得轨道路线。\r\n","javax.xml.datatype.DatatypeConstants.MAY":"javax.xml.datatype.datatypeconstants.may\r\n","207 Multi-Status":"207多地位\r\n"," has a\n   prefix and the ":" 有个\r\n   前缀和\r\n","org.w3c.dom.Node.DOCUMENT_POSITION_DISCONNECTED":"org.w3c.dom.node.document_position_disconted\r\n"," with the specified\r\n            exception message and inner exception.\r\n            ":" 与指定的\r\n            异常消息和内部异常。\r\n            \r\n"," to use the new client instance that attempted to reconnect to the server. Removing the entry from\r\n             ":" 使用试图重新连接到服务器的新客户端实例。从\r\n             \r\n","\r\n            Provides programmatic configuration for the ":"\r\n            提供编程配置\r\n","java.util.zip.DeflaterOutputStream.DeflaterOutputStream(java.io.OutputStream, boolean)":"java.util.zip.deflateroutputstream.deflateroutputstream（java.io.outputstream，boolean）\r\n","Retrieves a node specified by name.":"检索按名称指定的节点。\r\n","The constant which defines the length of a DES key in bytes.":"定义字节中DES键的长度的常数。\r\n","java.util.zip.Deflater.FILTERED":"java.util.zip.deflater.Filtered\r\n","version = <var>nmtoken</var>.":"版本= <var> nmtoken </var>。\r\n","javax.sql.RowSetReader":"Javax.sql.RowsetReader\r\n","#setSchema(Schema schema)":"#setschema（模式模式）\r\n"," with the default\n            initial capacity (11) that orders its elements according to\n            their Comparable natural ordering.":" 使用默认值\r\n            最初的能力（11）根据\r\n            他们可比的自然订购。\r\n"," factory methods.":" 工厂方法。\r\n","java.util.stream.BaseStream.parallel()":"java.util.stream.basestream.parallel（）\r\n","java.util.concurrent.BlockingQueue#remainingCapacity()\n                    BlockingQueue.remainingCapacity":"java.util.concurrent.blockingqueue＃refainingcapacity（）\r\n                    阻止等级\r\n","JarOutputStream":"Jaroutputstream\r\n","Creates the shared secret and returns it as a <code>SecretKey</code>\n            object of the specified algorithm.":"创建共享的秘密并将其返回为<code> secretkey </code>\r\n            指定算法的对象。\r\n","A listener for receiving preference node change events.":"接收偏好节点更改事件的听众。\r\n","if this node has been removed.\n":"如果该节点已删除。\r\n\r\n","javax.net.ssl.SSLSession.getValue(java.lang.String)":"javax.net.ssl.sslsession.getValue（java.lang.string）\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getExclusiveQueuedThreads()":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.getExcliverivequalqueuedthreads（）\r\n","java.util.prefs.AbstractPreferences.getChild(java.lang.String)":"java.util.prefs.abstractpreferences.getChild（java.lang.string）\r\n","Creates a new <code>JarFile</code> to read from the specified\n            <code>File</code> object in the specified mode.":"创建一个新的<code> jarfile </code>以从指定的\r\n            <code>文件</code>在指定模式下对象。\r\n","javax.security.auth.callback.PasswordCallback.PasswordCallback(java.lang.String, boolean)":"javax.security.auth.callback.passwordcallback.passwordcallback（java.lang.string，boolean）\r\n","javax.xml.transform.stream.StreamSource.StreamSource(java.io.InputStream, java.lang.String)":"javax.xml.transform.stream.streamsource.streamsource（java.io.inputstream，java.lang.string）\r\n","Returns the <code>index</code>th namespaceURI item in the collection.":"返回集合中的<code>索引</code> TH Namespaceuri项目。\r\n"," where the data ends.\r\n            ":" 数据结束的地方。\r\n            \r\n","JSONObject":"jsonobject\r\n","LSParserFilter.acceptNode":"lsparserfilter.acceptnode\r\n","java.util.concurrent.atomic.Striped64":"java.util.concurrent.Atomic.Striped64\r\n","java.util.concurrent.atomic.AtomicInteger.getAndDecrement()":"java.util.concurrent.atomic.atomicinteger.getanddecrement（）\r\n"," sum.":" 和。\r\n","javax.net.ssl.SSLParameters.getNeedClientAuth()":"javax.net.ssl.sslparameters.getneedclientauth（）\r\n","Report an element type declaration.":"报告元素类型声明。\r\n","providerName":"providername\r\n","if the specified buffer is null or ":"如果指定的缓冲区为null或\r\n","javax.net.ssl.SSLPeerUnverifiedException.SSLPeerUnverifiedException(java.lang.String)":"javax.net.ssl.sslpeerunverifiedexception.sslpeerunverifiedException（java.lang.string）\r\n","Initiates handshaking (initial or renegotiation) on this SSLEngine.":"在此Sslengine上启动握手（初始或重新谈判）。\r\n","javax.crypto.spec.SecretKeySpec.SecretKeySpec(byte[], java.lang.String)":"javax.crypto.spec.secretkeyspec.secretkeyspec（byte []，java.lang.string）\r\n","Associates a string representing the specified boolean value with the\n            specified key in this preference node.":"将代表指定布尔值的字符串与\r\n            在此偏好节点中指定键。\r\n","org.json.JSONObject.getJSONArray(java.lang.String)":"org.json.jsonobject.getjsonarray（java.lang.string）\r\n","\r\n            Gets the name of the parameter.\r\n            ":"\r\n            获取参数的名称。\r\n            \r\n","The determination of preceding versus following is\n            implementation-specific.":"确定前面与以下的确定是\r\n            特定于实施。\r\n","java.util.function.ToIntBiFunction":"java.util.function.TointBifunction\r\n","javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendarDate(int, int, int, int)":"javax.xml.datatype.datatypefactory.newxmlgregoriancalendardate（int，int，int，int，int）\r\n","Continues a multi-part update of the Additional Authentication\n            Data (AAD).":"继续对其他身份验证的多部分更新\r\n            数据（AAD）。\r\n","If no default XMLReader class\n            can be identified and instantiated.":"如果没有默认XMLReader类\r\n            可以识别和实例化。\r\n","org.xml.sax.AttributeList":"org.xml.sax.attributelist\r\n","org.xml.sax.ext.DefaultHandler2.getExternalSubset(java.lang.String, java.lang.String)":"org.xml.sax.ext.defaulthandler2.getExternalSubset（java.lang.string，java.lang.string）\r\n","U":"你\r\n","if the given path is ":"如果给定的路径是\r\n","If set to true, assume that the input is certified (see section 2.13\n in []) when\n parsing [].":"如果设置为true，则假设输入已获得认证（请参见第2.13节\r\n 在[]）\r\n 解析[]。\r\n","if the given listener is ":"如果给定的听众是\r\n","A processor that checks an XML document against ":"一个检查XML文档的处理器\r\n","org.w3c.dom.ls.LSParser.ACTION_INSERT_AFTER":"org.w3c.dom.ls.lsparser.action_insert_after\r\n","\r\n            Gets or sets the policy name that determines access to the resource.\r\n            ":"\r\n            获取或设置确定对资源访问的策略名称。\r\n            \r\n","if interrupted while sleeping\n":"如果睡觉时中断\r\n\r\n","Returns a string representation of this Level.":"返回此级别的字符串表示。\r\n","javax.crypto.spec.PBEKeySpec.getIterationCount()":"javax.crypto.spec.pbekeyspec.getiterationcount（）\r\n","javax.crypto.spec.PBEKeySpec.PBEKeySpec(char[], byte[], int, int)":"javax.crypto.spec.pbekeyspec.pbekeyspec（char []，byte []，int，int）\r\n","Set a feature for this <code>TransformerFactory</code> and <code>Transformer</code>s\n            or <code>Template</code>s created by this factory.":"为此<code> TransformerFactory </code>和<code> Transformer </code> s设置功能\r\n            或<code>模板</code>由此工厂创建。\r\n","javax.net.ssl.KeyManagerFactory.getAlgorithm()":"javax.net.ssl.keymanagerfactory.getalgorithm（）\r\n","Returns a new string by alternating this array's values with ":"通过将此数组值交替与\r\n","-valued argument, and returns no result.":" - 值参数，并且不返回结果。\r\n","org.xml.sax.SAXParseException":"org.xml.sax.saxparseexception\r\n"," nor its prefix is \"xmlns\".\n   ":" 它的前缀也不是“ XMLNS”。\r\n   \r\n","if timeout expires before connecting\n":"如果超时在连接之前到期\r\n\r\n","org.xml.sax.helpers.XMLFilterImpl.unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.helpers.xmlfilterimpl.unparsedentitydecl（java.lang.string，java.lang.string，java.lang.string，java.lang.lang.string）\r\n","Reinitialize the logging properties and reread the logging configuration.":"重新初始化记录属性，并重新阅读记录配置。\r\n","If an attempt is made to use an object that is not, or is no longer,\n            usable.":"如果尝试使用不再或不再是的对象，\r\n            可用。\r\n","Factory that creates ":"创造的工厂\r\n","javax.xml.xpath.XPathException.XPathException(java.lang.Throwable)":"javax.xml.xpath.xpathexception.xpathexception（java.lang.throwable）\r\n","\r\n            Indicates that an attribute value should be applied to the specified frame.\r\n            This may be a change to an existing attribute, or the addition of a new attribute.\r\n            ":"\r\n            表示应将属性值应用于指定的帧。\r\n            这可能是对现有属性或添加新属性的更改。\r\n            \r\n","This method gets called when a child node is added.":"添加子节点时，该方法被调用。\r\n","\r\n            Gets the tag name of the element.\r\n            ":"\r\n            获取元素的标签名称。\r\n            \r\n","Returns the root ancestor of this phaser, which is the same as\n            this phaser if it has no parent.":"返回此移位器的根祖先，与\r\n            如果没有父母，则此移位器。\r\n","This class represents a factory for secret keys.":"该课程代表着秘密钥匙的工厂。\r\n","org.w3c.dom.Element.hasAttributeNS(java.lang.String, java.lang.String)":"org.w3c.dom.element.hasattributens（java.lang.string，java.lang.string）\r\n","Creates a factory that always returns instances of Android's built-in\n            ":"创建一个工厂，总是返回Android内置的实例\r\n            \r\n","org.apache.http.conn.scheme.SocketFactory":"org.apache.http.conn.scheme.socketFactory\r\n","java.util.logging.Logger.isLoggable(java.util.logging.Level)":"java.util.logging.logger.isloggable（java.util.logging.Level）\r\n","\r\n            Returns the ":"\r\n            返回\r\n","Returns an iterator over the headers with a given name in this group.":"在此组中带有给定名称的标题上返回迭代器。\r\n","org.xml.sax.AttributeList.getValue(int)":"org.xml.sax.attributelist.getValue（int）\r\n","\n if none exists.":"\r\n 如果不存在。\r\n","An unbounded ":"一个无限的\r\n","if releasing would place this\n         synchronizer in an illegal state. This exception must be\n         thrown in a consistent fashion for synchronization to work\n         correctly.":"如果释放会放置这个\r\n         同步器处于非法状态。这个例外必须是\r\n         以一致的方式抛出同步工作\r\n         正确。\r\n","A constant that represents the hours field.":"代表小时场的常数。\r\n","initialization vector":"初始化向量\r\n"," that produces the arithmetic mean of a long-valued\n            function applied to the input elements.":"产生了长期价值的算术平均值\r\n            应用于输入元素的功能。\r\n","\r\n            Notifies when a rendering exception occured.\r\n            ":"\r\n            通知何时发生渲染异常。\r\n            \r\n","\n            and output stream.":"\r\n            和输出流。\r\n","java.util.concurrent.locks.ReentrantLock.isHeldByCurrentThread()":"java.util.concurrent.locks.reentrantlock.isheldbycurrentthread（）\r\n","NO_MODIFICATION_ALLOWED_ERR: Raised if this map is readonly.\n   ":"no_modification_allowed_err：如果该地图已阅读，则提出。\r\n   \r\n","The namespace URI of this node, or ":"该节点的名称空间URI或\r\n","Receive notification of a recoverable error.":"收到可回收错误的通知。\r\n","Emits an XML document representing all of the preferences contained\n            in this node and all of its descendants.":"发出代表所有包含的偏好的XML文档\r\n            在这个节点及其所有后代中。\r\n","Returns the thread keep-alive time, which is the amount of time\n            that threads may remain idle before being terminated.":"返回线程保持呈阳离时间，这是时间的时间\r\n            该线程在终止之前可能会保持空闲状态。\r\n","java.util.concurrent.RejectedExecutionHandler":"java.util.concurrent.RejectedExecutionHandler\r\n","org.xml.sax.HandlerBase.startElement(java.lang.String, org.xml.sax.AttributeList)":"org.xml.sax.handlerbase.startelement（java.lang.string，org.xml.sax.attributelist）\r\n","Parses a name=value specification, where the = and value are optional.":"解析名称=值规范，其中=和值是可选的。\r\n","javax.xml.datatype.DatatypeConstants.FEBRUARY":"javax.xml.datatype.datatypeconstants.february\r\n","for SAX errors.\n":"对于萨克斯错误。\r\n\r\n","Returns the attributes value identified by namespace URI and namespace localName.":"返回由名称空间URI和名称空间localname标识的属性值。\r\n","org.xml.sax.InputSource.setPublicId(java.lang.String)":"org.xml.sax.inputsource.setpublicid（java.lang.string）\r\n","Atomically adds the given value to the current value of the field of\n            the given object managed by this updater.":"原子从原子上添加给定值\r\n            由此更新者管理的给定对象。\r\n","Gets the current value held in the field of the given object managed\n            by this updater.":"获取当前值在给定对象的字段中\r\n            通过此更新器。\r\n","org.xml.sax.EntityResolver":"org.xml.sax.entityResolver\r\n","javax.xml.transform.stream.StreamResult.StreamResult(java.io.Writer)":"javax.xml.transform.stream.streamresult.streamresult（java.io.writer）\r\n","java.util.prefs.AbstractPreferences.flush()":"java.util.prefs.abstractpreferences.flush（）\r\n","A request interceptor that suggests connection keep-alive to the server.":"请求拦截器，建议与服务器保持联系。\r\n","javax.xml.parsers.SAXParser":"javax.xml.parsers.saxparser\r\n","If an error occurs writing the ":"如果发生错误，请写\r\n","javax.net.ServerSocketFactory.createServerSocket(int)":"javax.net.serversocketFactory.CreateserVersocket（int）\r\n","java.util.stream.Collector.accumulator()":"java.util.stream.collector.accumulator（）\r\n","if the specified parameters are inappropriate for this\n             cipher.\n":"如果指定的参数不合适\r\n             密码。\r\n\r\n","Returns the <code>Manifest</code> for this JAR file, or\n            <code>null</code> if none.":"返回此JAR文件的<code>清单</code>，或\r\n            <code> null </code>如果无。\r\n","org.xml.sax.helpers.XMLFilterImpl.setParent(org.xml.sax.XMLReader)":"org.xml.sax.helpers.xmlfilterimpl.setparent（org.xml.sax.xmlreader）\r\n","javax.crypto.spec.DHPrivateKeySpec.getX()":"javax.crypto.spec.dhprivatekeyspec.getx（）\r\n","if a problem occurred while processing the data.":"如果在处理数据时发生问题。\r\n","org.w3c.dom.DocumentFragment":"org.w3c.dom.documentfragment\r\n","javax.net.ssl.X509TrustManager.getAcceptedIssuers()":"javax.net.ssl.x509trustmanager.getacceptedissuers（）\r\n","org.xml.sax.helpers.AttributesImpl.removeAttribute(int)":"org.xml.sax.helpers.attributesimpl.removeattribute（int）\r\n"," for the specified field.\r\n            \r\n             To get the validation messages across all validation message stores, use ":" 对于指定字段。\r\n            \r\n             要在所有验证消息存储中获取验证消息，请使用\r\n","java.util.function.IntPredicate":"java.util.function.intpredicate\r\n","java.util.concurrent.locks.ReentrantLock.lock()":"java.util.concurrent.locks.reentrantlock.lock（）\r\n","java.util.concurrent.atomic.AtomicMarkableReference.compareAndSet(java.lang.Object, java.lang.Object, boolean, boolean)":"java.util.concurrent.atomic.atomicmarkablereferencom.compareandset（java.lang.object，java.lang.object，boolean，boolean）\r\n","Report a parsed external entity declaration.":"报告一个解析的外部实体声明。\r\n","\r\n            Adds Data Annotations validation support to an ":"\r\n            将数据注释验证支持添加到\r\n"," with the register.\r\n            ":" 与登记册。\r\n            \r\n","java.util.concurrent.TimeUnit.toMinutes(long)":"java.util.concurrent.timeunit.tominutes（long）\r\n","Creates a new NoHttpResponseException with the specified detail message.":"使用指定的详细信息创建一个新的NohttPresponseException。\r\n","The <code>JarInputStream</code> class is used to read the contents of\n            a JAR file from any input stream.":"<code> jarinputstream </code>类用于阅读内容\r\n            来自任何输入流的JAR文件。\r\n","\r\n            instances.\r\n            ":"\r\n            实例。\r\n            \r\n","If two durations cannot be meaningfully added. For\n      example, adding negative one day to one month causes\n      this exception.":"如果无法有意义地添加两个持续时间。为了\r\n      例如，在一个月的原因中添加负面\r\n      这个例外。\r\n","When the\n            supplied name does not identify an attribute.\n":"当。。。的时候\r\n            提供的名称无法识别属性。\r\n\r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            with the given Java <code>Object</code>.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            使用给定的Java <code>对象</code>。\r\n","Retrieves and removes the Future representing the next\n            completed task, waiting if none are yet present.":"检索并删除代表下一个的未来\r\n            完成任务，如果没有，则等待。\r\n","java.util.concurrent.atomic.AtomicLongArray.compareAndSet(int, long, long)":"java.util.concurrent.atomic.atomiclongarray.com pareandset（int，long，long）\r\n","newChild":"纽童\r\n","cdata-section-elements = <var>expanded names</var>.":"CDATA-section-elements = <var>展开的名称</var>。\r\n","javax.xml.transform.TransformerException.TransformerException(java.lang.String, java.lang.Throwable)":"javax.xml.transform.transformerexception.transformerexception（java.lang.string，java.lang.throw.throwable）\r\n","Removes this preference node, invalidating it and any preferences that\n            it contains.":"删除此偏好节点，使其无效以及任何偏好\r\n            它包含。\r\n","javax.net.ssl.SSLEngine.getSupportedProtocols()":"javax.net.ssl.sslengine.getSupportedProtocols（）\r\n","Encapsulates logic to compute a ":"封装逻辑以计算\r\n","javax.xml.validation.ValidatorHandler.setFeature(java.lang.String, boolean)":"javax.xml.Validation.ValidatorHandler.setFeature（Java.lang.String，boolean）\r\n","Prefix to use to represent the default XML Namespace.":"用于表示默认XML名称空间的前缀。\r\n","Creates a new tracker for the given route.":"为给定路线创建新的跟踪器。\r\n","Creates a preference node with the specified parent and the specified\n            name relative to its parent.":"用指定的父和指定的\r\n            名称相对于其父母。\r\n","javax.xml.parsers.DocumentBuilderFactory.isIgnoringElementContentWhitespace()":"javax.xml.parsers.documentBuilderFactory.isignoringElementContentWhitespace（）\r\n","Determines the starting position of the next token.":"确定接下来令牌的起始位置。\r\n","java.util.jar.JarFile.getManifest()":"java.util.jar.jarfile.getManifest（）\r\n","Sets the path attribute.":"设置路径属性。\r\n","Defines the cookie management specification.":"定义cookie管理规范。\r\n","Returns true if the end of the compressed data stream has been\n            reached.":"如果压缩数据流的末尾是返回的\r\n            到达。\r\n","There were not enough bytes available in the source buffer to\n complete the current operation.":"源缓冲区中没有足够的字节到\r\n 完成当前操作。\r\n","Returns a <code>NodeList</code> of all the <code>Elements</code> in\n            document order with a given tag name and are contained in the\n            document.":"返回所有<code> nodelist </code>\r\n            具有给定标签名称的文档订单，包含在\r\n            文档。\r\n","org.apache.http.params.CoreConnectionPNames.CONNECTION_TIMEOUT":"org.apache.http.params.coreconnectionpnames.connection_timeout\r\n","A stage of a possibly asynchronous computation, that performs an\n            action or computes a value when another CompletionStage completes.":"可能执行的可能异步计算的阶段\r\n            当另一个完成阶段完成时，操作或计算值。\r\n","A parameters object for X509KeyManagers that encapsulates a List\n            of KeyStore.":"X509KeyManagers的参数对象，该对象封装列表\r\n            钥匙店。\r\n","Get the local part of this <code>QName</code>.":"获取此<code> qname </code>的本地部分。\r\n"," containing the user claims.\r\n            ":" 包含用户主张。\r\n            \r\n","javax.xml.parsers.SAXParser.parse(org.xml.sax.InputSource, org.xml.sax.helpers.DefaultHandler)":"javax.xml.parsers.saxparser.parse（org.xml.sax.inputsource，org.xml.sax.helpers.defaulthandler）\r\n","javax.sql.RowSet.setNCharacterStream(int, java.io.Reader, long)":"javax.sql.Rowset.setncharacterstream（int，java.io.reader，long）\r\n","This class implements an adaptor around the ":"该课程在周围实现一个适配器\r\n","This exception is thrown when the length of data provided to a block\n            cipher is incorrect, i.":"当提供给块的数据长度时，会抛出此例外\r\n            密码不正确，即。\r\n","schemaLanguage.length() == 0":"schemalanguage.length（）== 0\r\n","clear":"清除\r\n","Returns the byte array value represented by the string associated with\n            the specified key in this preference node.":"返回由与之关联的字符串表示的字节数组值\r\n            此优先节点中的指定键。\r\n","java.util.logging.FileHandler.FileHandler(java.lang.String, int, int, boolean)":"java.util.logging.filehandler.filehandler（java.lang.string，int，int，boolean）\r\n","javax.net.ssl.HttpsURLConnection.getPeerPrincipal()":"javax.net.ssl.httpsurlconnection.getpeerprincipal（）\r\n","A response interceptor that adds a Server header.":"添加服务器标头的响应拦截器。\r\n","org.w3c.dom.Node.setUserData(java.lang.String, java.lang.Object, org.w3c.dom.UserDataHandler)":"org.w3c.dom.node.setuserdata（java.lang.string，java.lang.object，org.w3c.dom.userdatahandler）\r\n"," with the\n            results of applying the given function to the current and\n            given values, returning the previous value.":" 与\r\n            将给定功能应用于电流的结果和\r\n            给定值，返回上一个值。\r\n","java.util.concurrent.atomic.AtomicLongArray.length()":"java.util.concurrent.atomic.atomiclongarray.length（）\r\n","org.w3c.dom.DOMException.HIERARCHY_REQUEST_ERR":"org.w3c.dom.domexception.hierarchy_request_err\r\n","Returns the prefix of the current element.":"返回当前元素的前缀。\r\n","\r\n            Run the given resolver to select a value from the json user data to add as a claim.\r\n            This no-ops if the returned value is empty.\r\n            ":"\r\n            运行给定的解析器以从JSON用户数据中选择一个值，以添加作为索赔。\r\n            如果返回的值为空，则无操作。\r\n            \r\n","Returns the server's principal which was established as part of\n            defining the session.":"返回服务器的主体，该主体是作为一部分建立的\r\n            定义会话。\r\n","\r\n            A type used to provide a ":"\r\n            一种用于提供的类型\r\n","Executes the given task sometime in the future.":"将来某个时候执行给定任务。\r\n","\r\n            Gets or sets a value indicating whether to write in ":"\r\n            获取或设置一个指示是否写入的值\r\n","java.util.logging.Logger.throwing(java.lang.String, java.lang.String, java.lang.Throwable)":"java.util.logging.logger.throwing（java.lang.string，java.lang.string，java.lang.throw.throwable）\r\n","Returns the name of the cipher suite used in this session.":"返回本届会议中使用的密码套件的名称。\r\n"," with the given number of\n            permits and nonfair fairness setting.":" 给定的数字\r\n            许可证和非婚姻公平设置。\r\n","The line number of the end of the text where the exception occurred.":"发生异常的文本末端的行号。\r\n","NO_MODIFICATION_ALLOWED_ERR: Raised when the source node is\n   readonly.":"no_modification_allowed_err：源节点为\r\n   只读。\r\n","finisher":"完成者\r\n","java.util.concurrent.atomic.AtomicBoolean.AtomicBoolean()":"java.util.concurrent.atomic.atomicboolean.atomicboolean（）\r\n","Return the node where the event occurred.":"返回事件发生的节点。\r\n","Enables Unicode-aware case folding.":"启用Unicode-Aware Case折叠。\r\n","org.w3c.dom.Entity":"org.w3c.dom.entity\r\n","LogRecord objects are used to pass logging requests between\n            the logging framework and individual log Handlers.":"ligrecord对象用于传递日志请求\r\n            记录框架和单个日志处理程序。\r\n"," for inclusion in an attribute.\r\n            ":" 用于包含在属性中。\r\n            \r\n","javax.xml.transform.ErrorListener.fatalError(javax.xml.transform.TransformerException)":"javax.xml.transform.errlistener.fatalerror（javax.xml.transform.transformexception）\r\n","\r\n            Gets or sets an expression that identifies the bound value.\r\n            ":"\r\n            获取或设置标识界值的表达式。\r\n            \r\n","Returns the total number of compressed bytes input so far.":"返回到目前为止的压缩字节输入总数。\r\n","200 OK":"200好\r\n","Preferences#getDouble(String,double)":"首选项＃getDouble（字符串，double）\r\n","is to be taken\n literally, that is, all meta characters lose their meanings.":"被采取\r\n 从字面上看，也就是说，所有元角色都失去了含义。\r\n","javax.crypto.Cipher.getMaxAllowedKeyLength(java.lang.String)":"javax.crypto.cipher.getmaxloweredkeylength（java.lang.string）\r\n","if file name cannot be opened for reading.\n":"如果无法打开文件名以读取。\r\n\r\n","Determines the maximum HTTP header count allowed.":"确定允许的最大HTTP标头计数。\r\n","\r\n            then they are evaluated instead of the fallback policy. By default the fallback policy is null, and usually will have no \r\n            effect unless you have the AuthorizationMiddleware in your pipeline. It is not used in any way by the \r\n            default ":"\r\n            然后对它们进行评估，而不是后备政策。默认情况下，后备策略为null，通常没有\r\n            效果除非您的管道中有“授权限制”软件。它没有以任何方式使用\r\n            默认\r\n","if an I/O error occurs\n":"如果发生I/O错误\r\n\r\n","\r\n            Gets or sets the fallback authorization policy used by ":"\r\n            获取或设置由\r\n","Signals that this connection is in the process of being open.":"信号表明此连接正在开放。\r\n","javax.crypto.spec.DHPublicKeySpec.getG()":"javax.crypto.spec.dhpublickeyspec.getg（）\r\n","This may be nonzero as a result of calling ":"这可能是呼叫的结果\r\n","Formats a header.":"格式标题。\r\n"," that buffers requests in a circular buffer in memory.":" 该缓冲区在内存中的圆形缓冲区中请求。\r\n","#DOTALL":"#dotall\r\n"," for the specified field.\r\n            ":" 对于指定字段。\r\n            \r\n","\r\n            Extension method for Forbid.\r\n            ":"\r\n            禁止的扩展方法。\r\n            \r\n","if an error occurs during the connection":"如果连接期间发生错误\r\n","\r\n            Returns the provided ":"\r\n            返回提供的\r\n","\r\n            Inserts the item at the specified index, moving the contents of the subsequent entries along by one.\r\n            ":"\r\n            将项目插入指定的索引，将后续条目的内容移至一个。\r\n            \r\n","Create a new TransformerException from a message and a Locator.":"从消息和定位器中创建一个新的转换感受。\r\n"," responsible for the scheme.":" 负责该计划。\r\n","java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndSet(java.lang.Object, int)":"java.util.concurrent.atomic.atomicintegerfieldupdater.getandset（java.lang.object，int）\r\n"," of private credentials associated with this\n            ":" 与此相关的私人证书\r\n            \r\n","java.util.zip.Deflater.FULL_FLUSH":"java.util.zip.deflater.full_flush\r\n","Returns a new CompletionStage that is completed with the same\n            value as the CompletionStage returned by the given function,\n            executed using the supplied Executor.":"返回一个新的完整舞台，该舞台已完成相同\r\n            值为由给定功能返回的完成阶段，\r\n            使用提供的执行人执行。\r\n",", because\r\n            that would cause an infinite render loop.\r\n            ":"， 因为\r\n            这将导致无限的渲染循环。\r\n            \r\n","\r\n            CORS-related constants.\r\n            ":"\r\n            与CORS相关的常数。\r\n            \r\n","javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler(javax.xml.transform.Templates)":"javax.xml.transform.sax.saxtransformerfactory.newtransformerhandler（javax.xml.transform.templates）\r\n","Tracks connecting to the first proxy.":"跟踪连接到第一个代理。\r\n","414 Request-URI Too Long":"414请求-URI太长\r\n"," if there is no byte offset available.":" 如果没有字节偏移。\r\n"," may\n            be safely cast to a SAXTransformerFactory.":" 可能\r\n            安全地施放到saxtransformerfactory中。\r\n","If any <code>Node</code> is inserted somewhere it doesn't belong.":"如果任何<code>节点</code>被插入不属于的地方。\r\n","if salt is null.":"如果盐为无效。\r\n","Assigns a ":"分配\r\n","\r\n            Method invoked after each time the component has been rendered.\r\n            ":"\r\n            每次渲染组件后都会调用方法。\r\n            \r\n","javax.xml.parsers.DocumentBuilder":"javax.xml.parsers.documentbuilder\r\n","\r\n            The default value for cookie name is \".AspNetCore.Cookies\".\r\n            This value should be changed if you change the name of the AuthenticationScheme, especially if your\r\n            system uses the cookie authentication handler multiple times.\r\n            ":"\r\n            cookie名称的默认值为“ .aspnetcore.cookies”。\r\n            如果您更改AuthenticationsCheme的名称，则应更改此值，尤其是在您的\r\n            系统多次使用cookie身份验证处理程序。\r\n            \r\n","\n      methods.":"\r\n      方法。\r\n","Returns the start index of the previous match.":"返回上一场比赛的开始索引。\r\n"," or if it has\n            a mapping whose value is ":" 或者是否有\r\n            一个价值的映射\r\n","Look up an attribute's type by Namespace-qualified name.":"通过名称空间标记的名称查找属性的类型。\r\n","java.util.regex.Pattern.UNICODE_CHARACTER_CLASS":"java.util.regex.pattern.unicode_character_class\r\n","Initializes this exemption mechanism with a key and a set of algorithm\n            parameters.":"用键和一组算法初始化此豁免机制\r\n            参数。\r\n","Queries the transparency of region bounds for this matcher.":"查询该匹配器的区域边界的透明度。\r\n","NO_MODIFICATION_ALLOWED_ERR: Raised if this node or the parent of\n   the new node is readonly.\n   ":"no_modification_allowed_err：如果此节点或父母\r\n   新节点已阅读。\r\n   \r\n","Returns a collection containing threads that may be waiting to\n            acquire in exclusive mode.":"返回包含可能正在等待的线程的集合\r\n            在独家模式下获取。\r\n","javax.xml.transform.stream.StreamSource.getPublicId()":"javax.xml.transform.stream.streamsource.getPublicId（）\r\n","org.json.JSONArray.opt(int)":"org.json.jsonarray.opt（int）\r\n","Equivalent in effect to ":"等效于\r\n","java.util.logging.Handler.close()":"java.util.logging.handler.close（）\r\n","javax.xml.transform.TransformerConfigurationException":"javax.xml.transform.transformerconfigurationException\r\n","\r\n            Instructs the enumerator to move to the next value in the sequence.\r\n            ":"\r\n            指示枚举者在序列中移动到下一个值。\r\n            \r\n","Get the log level specifying which messages will be\n            logged by this ":"获取日志级别指定哪些消息将是\r\n            登录了\r\n","org.w3c.dom.UserDataHandler":"org.w3c.dom.userdatahandler\r\n",".\n   ":"。\r\n   \r\n"," has been invoked\r\n            on this component instance; otherwise ":" 已被调用\r\n            在此组件实例上；否则\r\n","javax.xml.transform.TransformerConfigurationException.TransformerConfigurationException(java.lang.String)":"javax.xml.transform.transformerconfigurationexception.transformerconfigurationException（java.lang.string）\r\n","SEVERITY_ERROR":"严重性_error\r\n","org.w3c.dom.ls.LSParser":"org.w3c.dom.ls.lsparser\r\n","If an attempt was made to serialize a <code>Node</code> using\n            <code>LSSerializer</code> and the processing has been stopped.":"如果尝试序列化<code>节点</code>使用\r\n            <code> lsSerializer </code>，并且该处理已停止。\r\n","org.json.JSONObject.put(java.lang.String, long)":"org.json.jsonobject.put（java.lang.string，long）\r\n","org.xml.sax.helpers.ParserAdapter.getFeature(java.lang.String)":"org.xml.sax.helpers.parseradapter.getFeature（java.lang.string）\r\n","org.xml.sax.helpers.AttributeListImpl.AttributeListImpl(org.xml.sax.AttributeList)":"org.xml.sax.helpers.attributelistimpl.attributelistimpl（org.xml.sax.attributelist）\r\n","This interface is primarily for the purposes of reporting where\n            an error occurred in the XML source or transformation instructions.":"该界面主要是为了报告的目的\r\n            XML源或转换指令中发生了错误。\r\n","java.util.prefs.PreferencesFactory.systemRoot()":"java.util.prefs.preferencesfactory.systemroot（）\r\n","Returns a new CompletionStage that, when either this or the\n            other given stage complete normally, is executed using this\n            stage's default asynchronous execution facility, with the\n            corresponding result as argument to the supplied function.":"返回一个新的完整舞台，当\r\n            其他给定的阶段正常完成，使用此\r\n            舞台的默认异步执行设施，\r\n            相应的结果作为参数与所提供的函数。\r\n","#setSchema(Schema)":"#setschema（模式）\r\n","Parse a level name string into a Level.":"将级别名称字符串分解为一个级别。\r\n","Sets the charset to be used when encoding\n ":"设置编码时要使用的字符集\r\n \r\n","A CipherOutputStream is composed of an OutputStream and a Cipher so\n            that write() methods first process the data before writing them out\n            to the underlying OutputStream.":"CipHeroutputstream由输出流和密码组成\r\n            该write（）方法首先处理数据，然后再将它们编写出来\r\n            到基础输出流。\r\n","def":"防守\r\n","Defines whether circular redirects (redirects to the same location) should be allowed.":"定义是否允许循环重定向（重定向到同一位置）。\r\n","java.util.logging.StreamHandler.close()":"java.util.logging.streamhandler.close（）\r\n","Constructs a new HandshakeCompletedEvent.":"构建一个新的handshakecompletedevent。\r\n","Insert the result of the parse operation as the immediately following\n            sibling of the context node.":"将解析操作的结果插入紧随其后的结果\r\n            上下文节点的兄弟姐妹。\r\n"," that was\n being connected to.":" 那是\r\n 与之连接。\r\n","java.util.concurrent.atomic.AtomicLongFieldUpdater.compareAndSet(java.lang.Object, long, long)":"java.util.concurrent.atomic.atomiclongfieldupdater.compareandset（java.lang.object，long，long）\r\n","javax.xml.transform.ErrorListener.error(javax.xml.transform.TransformerException)":"javax.xml.transform.errlistener.error（javax.xml.transform.transformerexception）\r\n","\r\n            Dictionary used to store state values about the authentication session.\r\n            ":"\r\n            字典用于存储身份验证会话的状态值。\r\n            \r\n","org.w3c.dom.Element.removeAttributeNode(org.w3c.dom.Attr)":"org.w3c.dom.element.removeattributenode（org.w3c.dom.attr）\r\n","if initialization fails because the provided key is ":"如果初始化失败，因为提供的密钥是\r\n","if the comment is >= 64 Ki encoded bytes.\n":"如果评论为> = 64 ki编码字节。\r\n\r\n","javax.net.ssl.SSLSession.getLocalCertificates()":"javax.net.ssl.sslsession.getlocalcertificates（）\r\n","Returns the names of the protocols which are currently\n            enabled for use by the newly accepted connections.":"返回当前协议的名称\r\n            启用了新接受的连接。\r\n","\r\n            Appends a frame representing an attribute.\r\n            ":"\r\n            附加代表属性的帧。\r\n            \r\n","Updates the checksum with the bytes from the specified buffer.":"使用指定缓冲区的字节更新校验和。\r\n","Indicates if this ":"指示这是否\r\n","\r\n            PolicySchemes are used to redirect authentication methods to another scheme.\r\n            ":"\r\n            策略化学用于将身份验证方法重定向到另一种方案。\r\n            \r\n","javax.crypto.EncryptedPrivateKeyInfo.getAlgName()":"javax.crypto.encryptedprivateKeyinfo.getAlgname（）\r\n","javax.xml.transform.OutputKeys":"javax.xml.transform.outputkeys\r\n","Returns the public value <code>y</code>.":"返回公共价值<code> y </code>。\r\n"," if it exists and is a long or\n            can be coerced to a long, or 0 otherwise.":" 如果存在并且很长或\r\n            可以将其胁迫到长或否则为0。\r\n","java.util.concurrent.LinkedTransferQueue.size()":"java.util.concurrent.linkedtransferqueue.size（）\r\n","org.w3c.dom.Node.DOCUMENT_POSITION_FOLLOWING":"org.w3c.dom.node.document_position_following\r\n","An attribute specifying, as part of the , the version number of this document.":"作为本文档的版本编号指定的属性。\r\n","org.xmlpull.v1.XmlPullParserFactory.setValidating(boolean)":"org.xmlpull.v1.xmlpullparserfactory.setValidating（boolean）\r\n","org.xml.sax.ContentHandler.ignorableWhitespace(char[], int, int)":"org.xml.sax.contenthandler.ignorablewhitespace（char []，int，int）\r\n","org.xml.sax.ContentHandler.endElement(java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.contenthandler.endelement（java.lang.string，java.lang.string，java.lang.string）\r\n","java.util.concurrent.ThreadPoolExecutor.ThreadPoolExecutor(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue, java.util.concurrent.ThreadFactory)":"java.util.concurrent.threadpoolexecutor.threadpoolexecutor（int，int，long，long，java.util.concurrent.timeunit，java.util.concurrent.blocking.blockingqueue，java.util.util.concurrent.threadfactory）\r\n","Obtains a list containing names of all registered ":"获取包含所有注册名称的列表\r\n","SAX2 extension to augment the per-attribute information\n            provided though ":"SAX2扩展以增强每个属性信息\r\n            虽然提供了\r\n","\r\n            Executes the supplied work item on the associated renderer's\r\n            synchronization context.\r\n            ":"\r\n            执行相关渲染器的所提供的工作项目\r\n            同步上下文。\r\n            \r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.isQueued(java.lang.Thread)":"java.util.concurrent.locks.abstractqueuedsynchronizer.isquequeque（java.lang.thread）\r\n","If the lock state matches the given stamp then, atomically, if the stamp\n            represents holding a lock, releases it and returns an\n            observation stamp.":"如果锁定状态与给定的邮票匹配，则在原子上，如果邮票\r\n            表示握住锁，释放它并返回\r\n            观察邮票。\r\n","Constructs a parameter set for Diffie-Hellman, using a prime modulus\n            <code>p</code>, a base generator <code>g</code>,\n            and the size in bits, <code>l</code>, of the random exponent\n            (private value).":"使用Prime模量为Diffie-Hellman构建参数集\r\n            <code> p </code>，基本发电机<code> g </code>，\r\n            和<code> l </code>的大小，随机指数\r\n            （私人价值）。\r\n","Reinitialize the logging properties and reread the logging configuration\n            from the given stream, which should be in java.":"重新初始化记录属性，然后重新阅读记录配置\r\n            从给定的流，应该在Java中。\r\n","DatatypeConstants#FIELD_UNDEFINED":"datatypeconstants＃field_undefined\r\n","javax.xml.datatype.DatatypeConfigurationException.DatatypeConfigurationException(java.lang.String)":"javax.xml.datatype.datatypeconfigurationexception.datatypeconfigurationexception（java.lang.string）\r\n","javax.sql.DataSource":"javax.sql.datasource\r\n","javax.xml.xpath.XPathConstants.NODESET":"javax.xml.xpath.xpathconstants.nodeset\r\n","org.xml.sax.helpers.AttributeListImpl.removeAttribute(java.lang.String)":"org.xml.sax.helpers.attributelistimpl.removeattribute（java.lang.string）\r\n","Instances of this class represent a server name of type\n            ":"此类的实例代表类型的服务器名称\r\n            \r\n","java.util.zip.ZipEntry.getLastAccessTime()":"java.util.zip.zipentry.getLastAccessTime（）\r\n","\r\n            The writer to use.\r\n            ":"\r\n            作者要使用。\r\n            \r\n","Time unit representing twenty four hours":"代表二十四个小时的时间单元\r\n","LoggingMXBean":"loggingmxbean\r\n","Returns parameter with the given name, if found.":"如果找到给定名称，则返回参数。\r\n","java.util.zip.Adler32.update(java.nio.ByteBuffer)":"java.util.zip.adler32.update（java.nio.bytebuffer）\r\n","\r\n            An input component for editing ":"用于编辑的输入组件\r\n","java.util.zip.Deflater.finished()":"java.util.zip.deflater.fined（）\r\n","This is the base interface for JSSE key managers.":"这是JSSE钥匙经理的基本接口。\r\n","org.w3c.dom.Node.compareDocumentPosition(org.w3c.dom.Node)":"org.w3c.dom.node.comparedocumentPosition（org.w3c.dom.node）\r\n","The lock returned by method ":"通过方法返回的锁\r\n"," that produces the maximal element according\n            to a given ":" 产生最大元素\r\n            给定\r\n","org.xml.sax.helpers.NamespaceSupport.declarePrefix(java.lang.String, java.lang.String)":"org.xml.sax.helpers.namespacesupport.declareprefix（java.lang.string，java.lang.string）\r\n","java.util.function.IntPredicate.or(java.util.function.IntPredicate)":"java.util.function.intpredicate.or（java.util.function.intpredicate）\r\n","org.json.JSONObject.quote(java.lang.String)":"org.json.jsonobject.uquote（java.lang.string）\r\n","javax.xml.transform.sax.SAXResult.SAXResult()":"javax.xml.transform.sax.saxresult.saxresult（）\r\n","\r\n            Remaining ":"\r\n            其余的\r\n","An optionally-bounded BlockingDeque blocking deque based on\n            linked nodes.":"基于可选约束的阻止deque\r\n            链接节点。\r\n","org.w3c.dom.ls.LSSerializer":"org.w3c.dom.ls.lsserializer\r\n","java.util.zip.Deflater.deflate(byte[], int, int)":"java.util.zip.deflater.deflate（byte []，int，int）\r\n","Parses the specified source(s) as a schema and returns it as a schema.":"解析指定源作为模式，并将其返回为模式。\r\n","Returns the number of attributes in this Map.":"返回此地图中的属性数。\r\n","Receive notification of a non-recoverable error.":"接收不可回收错误的通知。\r\n","Releases the connection gracefully.":"优雅地释放联系。\r\n","Obtains the SSL session of the underlying connection, if any.":"如果有的话，获得了基础连接的SSL会话。\r\n","Interface for associating a SAX event with a document location.":"将萨克斯事件与文档位置关联的接口。\r\n","\r\n            An enumerator that iterates through a ":"\r\n            通过迭代的枚举者\r\n","Create a new SAXException from an existing exception.":"从现有异常创建新的saxexception。\r\n",". -or- Sets the policy on whether to continue executing existing\n            periodic tasks even when this executor has been ":"。 - 或 - 制定是否继续执行现有的政策\r\n            即使该执行人已定期任务\r\n","Returns the CRC-32 checksum of the uncompressed entry data. -or- Sets the CRC-32 checksum of the uncompressed entry data.":"返回未压缩输入数据的CRC-32校验和。 - 或 - 设置未压缩输入数据的CRC-32校验和。\r\n","javax.xml.datatype.Duration.getYears()":"javax.xml.datatype.duration.getyears（）\r\n","Obtains the 'chunked' flag.":"获得了“大块”的旗帜。\r\n","javax.crypto.ExemptionMechanismSpi.engineInit(java.security.Key, java.security.AlgorithmParameters)":"javax.crypto.ExemptionMechanismspi.engineinit（Java.security.key，Java.security.algorithmparameters）\r\n","javax.net.ssl.SSLEngine.unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer[], int, int)":"javax.net.ssl.sslengine.unwrap（java.nio.bytebuffer，java.nio.bytebuffer []，int，int）\r\n","\r\n            A unique identifier for the pointer causing the event.\r\n            ":"\r\n            导致事件的指针的唯一标识符。\r\n            \r\n","Obtains the status line of this response.":"获得此响应的状态线。\r\n","org.w3c.dom.DOMException.VALIDATION_ERR":"org.w3c.dom.domexception.validation_err\r\n","Returns a unary operator that always returns its input argument.":"返回一个始终返回其输入参数的单一操作员。\r\n","javax.crypto.spec.GCMParameterSpec.getTLen()":"javax.crypto.spec.gcmparameterspec.gettlen（）\r\n","Returns the thread that currently owns the write lock, or\n            ":"返回当前拥有写锁的线程，或\r\n            \r\n"," in that\r\n            it not only grows as required but also shrinks if cleared with significant\r\n            excess capacity. This makes it useful for component rendering, because\r\n            components can be long-lived and re-render frequently, with the rendered size\r\n            varying dramatically depending on the user's navigation in the app.\r\n            ":" 在那里面\r\n            它不仅会根据需要增长，而且还会缩小，如果清除\r\n            产能过剩。这使得对组件渲染有用，因为\r\n            组件可以长期寿命和重新渲染，并具有渲染尺寸\r\n            根据用户在应用程序中的导航而发生巨大变化。\r\n            \r\n","Constructor for derived classes.":"派生类的构造函数。\r\n","initialDelay":"initiareDelay\r\n","\r\n            Indicates that there was no information returned for this authentication scheme.\r\n            ":"\r\n            表明该身份验证方案没有返回的信息。\r\n            \r\n","javax.net.ssl.KeyManagerFactorySpi.engineGetKeyManagers()":"javax.net.ssl.keymanagerfactoryspi.enginegetekeymanagers（）\r\n","Sets the designated column's table name, if any, to the given\n            <code>String</code>.":"将指定的列的表名称（如果有）设置为给定\r\n            <code>字符串</code>。\r\n","Get a TransformerHandler object that can process SAX\n            ContentHandler events into a Result.":"获取一个可以处理SAX的TransformerHandler对象\r\n            ContentHandler事件成结果。\r\n","javax.xml.transform.sax.SAXTransformerFactory.newTemplatesHandler()":"javax.xml.transform.sax.saxtransformerfactory.newtemplateshandler（）\r\n","Implements uninterruptible condition wait.":"实施不可破坏的条件等待。\r\n","if backing store is unavailable or causes an operation\n             failure.":"如果备份商店不可用或导致操作\r\n             失败。\r\n","javax.xml.namespace.QName.QName(java.lang.String, java.lang.String, java.lang.String)":"javax.xml.namespace.qname.qname（java.lang.string，java.lang.string，java.lang.string）\r\n","Return whether the password\n            should be displayed as it is being typed.":"返回密码是否\r\n            应在键入时显示。\r\n","Constants enumerating the HTTP status codes.":"列举HTTP状态代码的常数。\r\n","javax.crypto.Cipher.doFinal(byte[], int, int, byte[])":"javax.crypto.cipher.dofinal（byte []，int，int，byte []）\r\n","Unregisters a scheme.":"撤销计划。\r\n","If a user agent (web browser) presents this cookie to a user, the\n cookie's purpose will be described by the information at this URL.":"如果用户代理（Web浏览器）将此cookie呈现给用户，则\r\n Cookie的目的将由此URL的信息描述。\r\n","The policy that provides high degree of compatibilty \n with common cookie management of popular HTTP agents.":"提供高度兼容的政策\r\n 与流行的HTTP代理商的常见曲奇管理。\r\n","Creates a new <code>JarFile</code> to read from the specified\n            <code>File</code> object.":"创建一个新的<code> jarfile </code>以从指定的\r\n            <code>文件</code>对象。\r\n","java.util.function.IntConsumer.accept(int)":"java.util.function.intconsumer.accept（int）\r\n","javax.crypto.CipherSpi.engineUnwrap(byte[], java.lang.String, int)":"javax.crypto.cipherspi.engineunwrap（byte []，java.lang.string，int）\r\n","An HTTP header which is already formatted.":"已经格式化的HTTP标头。\r\n"," recognizes the feature name but\n            cannot determine its value at this time.":" 识别功能名称，但\r\n            目前无法确定其价值。\r\n"," would actually log a given ":" 实际上会记录给定的\r\n"," will\r\n            never return true, even if all requirements are met.\r\n            ":"将要\r\n            即使满足所有要求，也永远不会返回真实。\r\n            \r\n","Returns the size of the compressed entry data. -or- Sets the size of the compressed entry data.":"返回压缩条目数据的大小。 - 或设置压缩条目数据的大小。\r\n","Sets the parameter in the local collection.":"在本地集合中设置参数。\r\n","java.util.concurrent.locks.ReentrantLock.ReentrantLock(boolean)":"java.util.concurrent.locks.reentrantlock.reentrantlock（布尔）\r\n","java.util.concurrent.LinkedTransferQueue.drainTo(java.util.Collection, int)":"java.util.concurrent.linkedtransferqueue.drainto（java.util.collection，int）\r\n","add a listener for ":"添加听众\r\n","javax.xml.parsers.SAXParserFactory.setFeature(java.lang.String, boolean)":"javax.xml.parsers.saxparserfactory.setFeature（java.lang.string，boolean）\r\n","if the requested padding scheme in the ":"如果在\r\n","This interface permits a DOM implementer to supply one or more\n            implementations, based upon requested features and versions, as specified\n            in .":"该接口允许DOM实施者提供一个或多个\r\n            根据指定的基于请求的功能和版本的实现\r\n            在 。\r\n","java.util.jar.Attributes.isEmpty()":"java.util.jar.attributes.isempty（）\r\n","Thread-safe extension of the ":"线程安全扩展\r\n","507 Insufficient Storage":"507存储不足\r\n","javax.xml.transform.TransformerFactory.newTransformer(javax.xml.transform.Source)":"javax.xml.transform.transformerfactory.newtransformer（javax.xml.transform.source）\r\n","if delay less than or equal to zero\n":"如果延迟小于或等于零\r\n\r\n","Returns the expiration ":"返回到期\r\n","javax.xml.XMLConstants.XML_DTD_NS_URI":"javax.xml.xmlconstants.xml_dtd_ns_uri\r\n","javax.security.auth.Subject.getSubject(java.security.AccessControlContext)":"javax.security.auth.subject.getSubject（java.security.accesscontrolcontext）\r\n","java.util.concurrent.TimeUnit":"java.util.concurrent.TimeUnit\r\n"," with the\n            given initial parameters.":" 与\r\n            给定初始参数。\r\n","InterruptedException":"IntruptedException\r\n","org.xml.sax.SAXException":"org.xml.sax.saxexception\r\n","TransformerFactory":"变形金刚\r\n","Constructor with name and value":"具有名称和价值的构造函数\r\n","If the parser parameter\n            is null.\n":"如果解析器参数\r\n            一片空白。\r\n\r\n","Returns the salt.":"返回盐。\r\n"," feature but a non-null namespace URI was\n   provided, since namespaces were defined by XML.\n   ":" 功能，但非肺名称空间URI是\r\n   提供，因为名称空间由XML定义。\r\n   \r\n","An iterator for ":"一个迭代器\r\n","An entity that can be sent or received with an HTTP message.":"可以通过HTTP消息发送或接收的实体。\r\n","\r\n            Creates a new instance of the ":"\r\n            创建一个新实例\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(int)":"java.util.concurrent.locks.abstractqueedsynchronizer.AcquireShared Dressruptible（int）\r\n","The results of one (or more) delegated tasks are needed to continue\n the handshake.":"需要一个（或更多）委派任务的结果才能继续\r\n 握手。\r\n","Removes the given header.":"卸下给定的标头。\r\n","java.util.concurrent.LinkedBlockingDeque.remainingCapacity()":"java.util.concurrent.linkedblockingdeque.remainingcapacity（）\r\n","SAXParserFactory#isXIncludeAware()":"saxparserfactory＃isxincludeaware（）\r\n","org.xml.sax.helpers.XMLReaderAdapter.processingInstruction(java.lang.String, java.lang.String)":"org.xml.sax.helpers.xmlreaderadapter.processinginstruction（java.lang.string，java.lang.string）\r\n","Sets the designated column's number of digits to the\n            right of the decimal point to the given <code>int</code>.":"将指定列的数字数设置为\r\n            小数点的右侧给定<code> int </code>。\r\n","javax.crypto.SecretKeyFactory.getAlgorithm()":"javax.crypto.secretkeyfactory.getalgorithm（）\r\n","Creates a new EOF sensor.":"创建一个新的EOF传感器。\r\n","Returns the number of responses transferred over the connection, \n 0 if not available.":"返回通过连接传输的响应数，\r\n 0如果不可用。\r\n","Adapt a SAX2 ignorable whitespace event.":"调整SAX2无知的空格事件。\r\n","Removes the object bound to the given name in the session's\n            application layer data.":"删除绑定到会话中给定名称的对象\r\n            应用层数据。\r\n","The route for a request.":"请求的路线。\r\n","v13.0":"v13.0\r\n","putBoolean":"Putboolean\r\n","org.apache.http.params.HttpParams.copy()":"org.apache.http.params.httpparams.copy（）\r\n","org.json.JSONStringer.value(boolean)":"org.json.jsonstringer.value（boolean）\r\n","org.xml.sax.Attributes.getLocalName(int)":"org.xml.sax.attributes.getLocalname（int）\r\n","keepAliveTime":"keepalivetime\r\n","This class represents a raw HTTP header whose content is parsed 'on demand'\n only when the header value needs to be consumed.":"该类代表一个原始的HTTP标头，其内容被“按需”解析\r\n 只有当需要消耗标题值时。\r\n","java.util.concurrent.atomic.AtomicLong.addAndGet(long)":"java.util.concurrent.atomic.atomiclong.addandget（long）\r\n","org.xml.sax.ext.Attributes2.isDeclared(java.lang.String, java.lang.String)":"org.xml.sax.ext.attributes2.isdeclared（java.lang.string，java.lang.string）\r\n","javax.xml.XMLConstants.XMLNS_ATTRIBUTE":"javax.xml.xmlconstants.xmlns_attribute\r\n","Does nothing, which has the effect of discarding task r.":"什么都不做，这具有丢弃任务r的效果。\r\n","For n > 0, the resulting array contains at most n\n            entries. If this is fewer than the number of matches, the\n            final entry will contain all remaining input.\n            ":"对于n> 0，最多包含n\r\n            条目。如果这比比赛数少，则\r\n            最终条目将包含所有剩余输入。\r\n            \r\n","if an invalid key is detected":"如果检测到无效的键\r\n","Represents a supplier of results.":"代表结果的供应商。\r\n","javax.net.ssl.SSLEngine.closeInbound()":"javax.net.ssl.sslengine.closeinbound（）\r\n"," which receives the\n augmented validation result.":" 接收\r\n 增强验证结果。\r\n","javax.xml.parsers.SAXParserFactory":"javax.xml.parsers.saxparserfactory\r\n","Constructs a new, empty Manifest.":"构建一个新的空清单。\r\n"," structure describing the selected contents.\r\n            ":" 描述所选内容的结构。\r\n            \r\n","\r\n            Checks whether the reader position is pointing at a nil value.\r\n            ":"\r\n            检查读者位置是否指向零值。\r\n            \r\n","203 Non Authoritative Information":"203非权威信息\r\n","Returns the cipher suite in use by the session which was produced\n            by the handshake.":"返回产生的会话中使用的密码套件\r\n            通过握手。\r\n","Creates a new instance of BasicHeaderElementIterator\n":"创建一个新实例的Basicheadeleletterator\r\n\r\n","java.util.concurrent.LinkedBlockingDeque.addLast(java.lang.Object)":"java.util.concurrent.linkedblockingdeque.addlast（java.lang.object）\r\n","java.util.logging.Logger.log(java.util.logging.Level, java.util.function.Supplier)":"java.util.logging.logger.log（java.util.logging.level，java.util.function.supplier）\r\n","The SignInScheme for a remote authentication handler cannot be set to itself.  If it was not explicitly set, the AuthenticationOptions.DefaultSignInScheme or DefaultScheme is used.":"无法将远程身份验证处理程序的标志Cheme设置为自身。如果未明确设置，则使用AuthenticationOptions.defaultsigninscheme或默认设置。\r\n","org.xml.sax.helpers.AttributesImpl.setURI(int, java.lang.String)":"org.xml.sax.helpers.attributesimpl.seturi（int，java.lang.string）\r\n","Report an attribute type declaration.":"报告属性类型声明。\r\n","Returns the <code>Manifest</code> <code>Attributes</code> for this\n            entry, or <code>null</code> if none.":"返回<code>清单</code> <code>属性</code>为此\r\n            条目或<code> null </code>如果无。\r\n","javax.xml.parsers.DocumentBuilderFactory.isCoalescing()":"javax.xml.parsers.documentbuilderfactory.iscoalescing（）\r\n"," with the specified\n            initial capacity that orders its elements according to their\n            Comparable natural ordering.":" 与指定的\r\n            根据其元素命令其元素的初始能力\r\n            可比的自然顺序。\r\n","java.util.concurrent.RecursiveAction.compute()":"java.util.concurrent.recursiveaction.compute（）\r\n","The <code>NodeList</code> interface provides the abstraction of an ordered\n            collection of nodes, without defining or constraining how this collection\n            is implemented.":"<code> Nodelist </code>接口提供了有序的抽象\r\n            节点的收集，而无需定义或限制该集合的方式\r\n            已实施。\r\n","org.xmlpull.v1.XmlSerializer.text(java.lang.String)":"org.xmlpull.v1.xmlserializer.text（java.lang.string）\r\n","java.util.zip.Adler32.getValue()":"java.util.zip.adler32.getValue（）\r\n","\r\n            Adds options to configure circuits.\r\n            ":"\r\n            添加了配置电路的选项。\r\n            \r\n","The UTF-16, as defined in [Unicode] and Amendment 1 of [ISO/IEC 10646], offset into the input source this locator is pointing to or\n ":"[unicode]和[ISO/IEC 10646]的[UNICODE]和修正1中定义的UTF-16偏移到输入源中，该定位器指向或\r\n \r\n","SAX2 extension to augment the entity information provided\n            though a ":"SAX2扩展到增加提供的实体信息\r\n            虽然\r\n","Returns a <code>NodeList</code> of all descendant <code>Elements</code>\n            with a given tag name, in document order.":"返回所有后代的<code> Nodelist </code> <code> elements </code>\r\n            使用给定的标签名称，按文档顺序。\r\n","org.json.JSONObject.wrap(java.lang.Object)":"org.json.jsonobject.wrap（java.lang.object）\r\n","\r\n            Copies bytes directly into the message pack writer.\r\n            ":"\r\n            将字节直接复制到消息包作者中。\r\n            \r\n","javax.xml.parsers.FactoryConfigurationError.FactoryConfigurationError(java.lang.Exception, java.lang.String)":"javax.xml.parsers.factoryconfigurationerror.factoryconfigurationerror（java.lang.exception，java.lang.string）\r\n","Instance of this interface manage which X509 certificates\n            may be used to authenticate the remote side of a secure\n            socket.":"此接口的实例管理哪个X509证书\r\n            可用于身份验证安全的偏远侧\r\n            插座。\r\n","Unconditionally sets the value of both the reference and stamp.":"无条件地设置参考和邮票的值。\r\n","\r\n            Provides programmatic configuration for Cors.\r\n            ":"\r\n            为CORS提供程序化配置。\r\n            \r\n","if the specified secret key cannot be transformed into the\n             requested key specification.\n":"如果指定的秘密密钥无法转换为\r\n             请求的关键规范。\r\n\r\n","The home for utility methods that handle various exception-related tasks.":"处理各种异常任务的实用方法的房屋。\r\n","Causes the current thread to wait until it is signalled.":"导致当前螺纹等待直到发出信号。\r\n","javax.xml.transform.TransformerFactoryConfigurationError.TransformerFactoryConfigurationError(java.lang.Exception)":"javax.xml.transform.transformerfactoryconfigurationerror.transformerfactoryconfigurationerror（java.lang.exception）\r\n","Create a new <code>TransformerConfigurationException</code> with no\n            detail message.":"创建一个新的<code> transformerconfigurationException </code> no\r\n            详细信息。\r\n"," uses to\n            find matches with.":" 用途\r\n            查找与。\r\n","org.w3c.dom.DOMConfiguration.canSetParameter(java.lang.String, java.lang.Object)":"org.w3c.dom.domconfiguration.cansetparameter（java.lang.string，java.lang.object）\r\n","sourceUnit":"SourceUnit\r\n","Removing tokens is not supported.":"不支持删除令牌。\r\n","javax.sql.RowSet.setRowId(java.lang.String, java.sql.RowId)":"javax.sql.Rowset.setRowid（java.lang.string，java.sql.rowid）\r\n","Returns the <code>SSLSession</code> bound to the specified session id.":"返回<code> sslsession </code>绑定到指定的会话ID。\r\n","org.xml.sax.helpers.DefaultHandler.unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.helpers.defaulthandler.unparsedentitydecl（java.lang.string，java.lang.string，java.lang.string，java.lang.lang.string）\r\n","javax.crypto.MacSpi.engineDoFinal()":"javax.crypto.macspi.enginedofinal（）\r\n","Resets the counts\n":"重置计数\r\n\r\n","Queries whether any threads are waiting on this condition.":"查询是否有任何线程在此条件上等待。\r\n","If an error occurs reading entries from the input stream.":"如果发生错误，则从输入流读取条目。\r\n","Initializes the key generator.":"初始化密钥生成器。\r\n"," because\n ":" 因为\r\n \r\n","Overridable method to perform an action upon impending phase\n            advance, and to control termination.":"在即将到来的阶段执行动作的过多方法\r\n            进步并控制终止。\r\n","javax.crypto.spec.OAEPParameterSpec.getDigestAlgorithm()":"javax.crypto.spec.oaepparameterspec.getDigeStalgorithm（）\r\n","java.util.jar.JarEntry.getCodeSigners()":"java.util.jar.jarentry.getCodesigners（）\r\n","DatatypeConstants#DURATION":"datatypeconstants＃持续时间\r\n","Validates the specified input and send the augmented validation\n            result to the specified output.":"验证指定的输入并发送增强验证\r\n            结果为指定的输出。\r\n","Returns true if the lock has not been exclusively acquired\n            since issuance of the given stamp.":"如果锁定尚未专门获取，则返回true\r\n            自发行给定邮票以来。\r\n","javax.sql.StatementEvent.StatementEvent(javax.sql.PooledConnection, java.sql.PreparedStatement)":"Javax.sql.StatementEvent.StatementEvent（Javax.sql.pooledConnection，java.sql.sql.preparedstatement）\r\n","\r\n            A type which can provide the ":"\r\n            可以提供的类型\r\n","Feature for secure processing.":"安全处理的功能。\r\n","\r\n            Initializes a new instance of the ":"\r\n            初始化一个新实例\r\n","if the initialization vector is null of shorter than\n             ":"如果初始化向量的零是短的\r\n             \r\n","javax.crypto.spec.PBEKeySpec.PBEKeySpec(char[], byte[], int)":"javax.crypto.spec.pbekeyspec.pbekeyspec（char []，byte []，int）\r\n","\r\n            An event that fires when the navigation location has changed.\r\n            ":"\r\n            当导航位置发生变化时发射的事件。\r\n            \r\n","org.xml.sax.ext.EntityResolver2.getExternalSubset(java.lang.String, java.lang.String)":"org.xml.sax.ext.EntityResolver2.getExternalSubset（java.lang.string，java.lang.string）\r\n","javax.xml.validation.Validator.Validator()":"javax.xml.validation.validator.validator（）\r\n","Atomically updates the field of the given object managed by this updater\n            with the results of applying the given function, returning the updated\n            value.":"原子上更新此更新机管理的给定对象的字段\r\n            随着应用给定功能的结果，返回已更新的\r\n            价值。\r\n","factoryClassName":"FactoryClassName\r\n"," for details on normalizing the origin value.":" 有关标准化原点值的详细信息。\r\n"," to write to a set of files.":" 写入一组文件。\r\n","if the password has been cleared before.\n":"如果密码之前已清除。\r\n\r\n","ContentHandler#startElement(String, String, String, Attributes) startElement":"contenthandler＃startElement（字符串，字符串，字符串，属性）开始\r\n","java.util.concurrent.ConcurrentMap":"java.util.concurrent.concurrentmap\r\n","CallerRunsPolicy":"Callerrunspolicy\r\n","Returns a new CompletionStage that, when this stage completes\n            normally, is executed using the supplied Executor, with this\n            stage's result as the argument to the supplied action.":"返回一个新的完整舞台，当这个阶段完成时\r\n            通常，使用所提供的遗嘱执行人执行\r\n            舞台的结果是对所提供的行动的论点。\r\n","SAX2 extension handler for DTD declaration events.":"DTD声明事件的SAX2扩展处理程序。\r\n","If an attempt is made to reference a <code>Node</code> in a context\n            where it does not exist.":"如果尝试在上下文中引用<code>节点</code>\r\n            它不存在的地方。\r\n","java.util.concurrent.TransferQueue":"java.util.concurrent.transferqueue\r\n","Returns the socket timeout value.":"返回套接字超时值。\r\n"," with the specified\n parameter ":" 与指定的\r\n 范围\r\n","\r\n            Parses a string to create an instance of ":"\r\n            解析字符串以创建一个实例\r\n","javax.xml.parsers.DocumentBuilderFactory.newInstance()":"javax.xml.parsers.documentbuilderfactory.newinstance（）\r\n","\r\n            Extension method for getting the value of an authentication token.\r\n            ":"\r\n            获取身份验证令牌值的扩展方法。\r\n            \r\n","org.w3c.dom.Element.setIdAttribute(java.lang.String, boolean)":"org.w3c.dom.element.setidattribute（java.lang.string，boolean）\r\n","javax.crypto.MacSpi.engineUpdate(byte)":"javax.crypto.macspi.engineupdate（字节）\r\n","<code>SSLSocketFactory</code>s create <code>SSLSocket</code>s.":"<code> sslsocketFactory </code> s创建<code> sslsocket </code> s。\r\n","java.util.logging.LogRecord.setLoggerName(java.lang.String)":"java.util.logging.logrecord.setloggername（java.lang.string）\r\n","javax.xml.transform.TransformerFactory":"javax.xml.transform.transformerfactory\r\n","Returns whether this engine instance will require client authentication.":"返回该引擎实例是否需要客户端身份验证。\r\n","Creates a new compressor with the default compression level.":"创建具有默认压缩级别的新压缩机。\r\n","\n   attribute.\n   ":"\r\n   属性。\r\n   \r\n"," to this stringer.":" 到这个纵梁。\r\n","\r\n            Gets the underlying array instance.\r\n            ":"\r\n            获取基础数组实例。\r\n            \r\n","\r\n            Returns the schemes in the order they were added (important for request handling priority)\r\n            ":"\r\n            按照添加的顺序返回计划（对于请求处理优先级重要）\r\n            \r\n","\r\n            Gets an instance of ":"\r\n            得到一个实例\r\n","FINEST indicates a highly detailed tracing message.":"最好的表示一条高度详细的跟踪消息。\r\n","java.util.concurrent.locks.ReentrantLock.tryLock(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.locks.reentrantlock.trylock（long，java.util.concurrent.timeunit）\r\n","javax.net.SocketFactory.getDefault()":"javax.net.socketfactory.getDefault（）\r\n","Breaks this node into two nodes at the specified <code>offset</code>,\n            keeping both in the tree as siblings.":"通过指定的<code> offset </code>将此节点分解为两个节点\r\n            将两者都放在树上作为兄弟姐妹。\r\n","javax.crypto.interfaces.PBEKey.getSalt()":"javax.crypto.interfaces.pbekey.getsalt（）\r\n","<code>XPathFactoryConfigurationException</code> represents a configuration error in a <code>XPathFactory</code> environment.":"<code> XPathFactoryConfigurationException </code>表示<code> XPathFactory </code>环境中的配置错误。\r\n","\r\n            Allows providing or validating additional custom data for antiforgery tokens.\r\n            For example, the developer could use this to supply a nonce when the token is\r\n            generated, then he could validate the nonce when the token is validated.\r\n            ":"\r\n            允许提供或验证其他自定义数据以供抗验证令牌。\r\n            例如，开发人员可以在令牌为时使用它来提供nonce\r\n            生成的，然后他可以在验证令牌验证时验证nonce。\r\n            \r\n","RELAX NG Namespace URI.":"放松NG名称空间URI。\r\n","Retrieves the callback function that selects an application protocol\n            value during a SSL/TLS handshake. -or- Registers a callback function that selects an application protocol\n            value for a SSL/TLS handshake.":"检索选择应用程序协议的回调函数\r\n            SSL/TLS握手期间的价值。 - 或 - 注册一个选择应用程序协议的回调函数\r\n            SSL/TLS握手的值。\r\n","\r\n            Gets the number of items in the array that are considered to be in use.\r\n            ":"\r\n            获取数组中被认为正在使用的项目数量。\r\n            \r\n","Registers a <code>StatementEventListener</code> with this <code>PooledConnection</code> object.":"登记<Code>语句EventListener </code>使用此<code> poolconnection </code>对象。\r\n","java.util.jar.Attributes.values()":"java.util.jar.attributes.values（）\r\n","org.w3c.dom.Text.replaceWholeText(java.lang.String)":"org.w3c.dom.text.replacewholetext（java.lang.string）\r\n","javax.net.ssl.SSLServerSocketFactory.getDefaultCipherSuites()":"javax.net.ssl.sslserversocketFactory.getDefaultCiphersuites（）\r\n","java.util.prefs.Preferences.keys()":"java.util.prefs.preferences.keys（）\r\n","\r\n            Default claims transformation is a no-op.\r\n            ":"\r\n            默认索赔转换是无关的。\r\n            \r\n","if the length of the key data is less than 24.":"如果关键数据的长度小于24。\r\n","org.xmlpull.v1.XmlPullParser.require(int, java.lang.String, java.lang.String)":"org.xmlpull.v1.xmlpullparser.require（int，java.lang.string，java.lang.string）\r\n","\r\n            Appends a frame representing an instruction to capture a reference to the parent component.\r\n            ":"\r\n            附加代表指令以捕获对父组件的引用的框架。\r\n            \r\n","\r\n            Set a DateTimeOffset value in the ":"\r\n            在\r\n","Creates a new AuthenticationException with the specified message.":"使用指定消息创建一个新的AuthenticationException。\r\n","\r\n            The sequence of bytes. \r\n            The data is a slice from the original sequence passed to this reader's constructor.\r\n            ":"\r\n            字节序列。\r\n            数据是传递给读者构造函数的原始序列的切片。\r\n            \r\n","ReentrantLock":"重新进入\r\n","java.util.concurrent.atomic.LongAdder.sumThenReset()":"java.util.concurrent.atomic.longadder.sumthenreset（）\r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            with the given  <code>Clob</code> value.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            使用给定的<code> clob </code>值。\r\n","if the given condition is\n         not associated with this synchronizer":"如果给定的条件是\r\n         与此同步器无关\r\n","java.util.jar.JarInputStream.JarInputStream(java.io.InputStream)":"java.util.jar.jarinputstream.jarinputstream（java.io.inputstream）\r\n"," returns\n      normally.":" 返回\r\n      一般。\r\n","if one of ":"如果一个\r\n","Closes the ZIP file.":"关闭zip文件。\r\n","The provided antiforgery token was meant for a different claims-based user than the current user.":"所提供的抗验药令牌是针对与当前用户不同的基于索赔的用户的。\r\n","org.w3c.dom.ls.DOMImplementationLS.createLSInput()":"org.w3c.dom.ls.domimplementationls.createlsinput（）\r\n",", if the task\n         cannot be accepted for execution":"，如果任务\r\n         不能接受执行\r\n","\r\n            An input component for editing date values.\r\n            Supported types are ":"\r\n            用于编辑日期值的输入组件。\r\n            支持类型是\r\n","Publish a ":"发布\r\n","Returns the object bound to the given name in the session's\n            application layer data.":"返回绑定到会话中给定名称的对象\r\n            应用层数据。\r\n","java.util.zip.Deflater.setInput(byte[])":"java.util.zip.deflater.setInput（byte []）\r\n"," is not an attribute\n   of the element.\n":" 不是属性\r\n   元素。\r\n\r\n","if the specified certificate chain is empty or ":"如果指定的证书链为空或\r\n","Returns the number of registered parties that have arrived at\n            the current phase of this phaser.":"返回到达的注册方数量\r\n            此移位器的当前阶段。\r\n","\r\n            Flag indicating whether the current authorization processing has failed.\r\n            ":"\r\n            指示当前授权处理是否失败的标志。\r\n            \r\n","R":"r\r\n","Is specified object model supported by this <code>XPathFactory</code>?":"指定的对象模型是否由此<code> XPathFactory </code>支持？\r\n","java.util.concurrent.SynchronousQueue.offer(java.lang.Object)":"java.util.concurrent.synchronousqueue.offer（java.lang.object）\r\n","\r\n            Will be set to the validation message if the tokens are invalid, otherwise ":"\r\n            如果令牌无效，将设置为验证消息，否则\r\n"," reference or ":" 参考或\r\n","Sends the request line and all headers over the connection.":"将请求行和所有标题发送到连接上。\r\n","java.util.concurrent.PriorityBlockingQueue.spliterator()":"java.util.concurrent.priorityblockingquequequeque.spliterator（）\r\n","java.util.logging.Logger.fine(java.lang.String)":"java.util.logging.logger.fine（java.lang.string）\r\n","Creates a new AtomicReference with null initial value.":"创建一个新的AtomicReference，其初始值。\r\n","java.util.concurrent.ThreadLocalRandom":"java.util.concurrent.threadlocalrandom\r\n"," for sealed archives.":" 用于密封的档案。\r\n","java.util.concurrent.atomic.AtomicIntegerFieldUpdater.incrementAndGet(java.lang.Object)":"java.util.concurrent.atomic.atomicintegerfieldupdater.incrementandget（java.lang.object）\r\n","Removes the given ":"删除给定的\r\n","Preferences#name()":"首选项＃名称（）\r\n","Checks whether a character is a ":"检查角色是否是\r\n","\"XML\"":"“ XML”\r\n","org.xml.sax.helpers.AttributeListImpl.clear()":"org.xml.sax.helpers.attributelistimpl.clear（）\r\n","Return the current value of the feature with given name.":"用给定名称返回功能的当前值。\r\n","javax.net.ssl.SSLEngineResult.bytesConsumed()":"javax.net.ssl.sslengineresult.bytesconsumed（）\r\n","Acquires the lock only if it is free at the time of invocation.":"仅在调用时免费获得锁。\r\n","Constructs (i.":"构造（i。\r\n","A request interceptor that decides about the transport encoding.":"决定运输编码的请求拦截器。\r\n","The MessagePack spec.":"MessagePack规格。\r\n","org.xml.sax.helpers.AttributeListImpl.addAttribute(java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.helpers.attributelistimpl.addattribute（java.lang.string，java.lang.string，java.lang.string）\r\n","if the specified key cannot be used to initialize this cipher\n             instance.":"如果指定的键不能用于初始化此密码\r\n             实例。\r\n","combiner":"联合官\r\n"," representing the current user.\r\n            ":" 代表当前用户。\r\n            \r\n","java.util.logging.Logger.getFilter()":"java.util.logging.logger.getFilter（）\r\n","\r\n            Appends a frame representing a region of frames.\r\n            ":"\r\n            附加代表框架区域的框架。\r\n            \r\n","org.xml.sax.helpers.ParserFactory.makeParser(java.lang.String)":"org.xml.sax.helpers.parserfactory.makeparser（java.lang.string）\r\n","java.util.concurrent.locks.LockSupport":"java.util.concurrent.locks.locksupport\r\n","java.util.concurrent.atomic.AtomicIntegerArray.getAndUpdate(int, java.util.function.IntUnaryOperator)":"java.util.concurrent.atomic.atomicintegerarray.getandupdate（int，java.util.function.intunaryoperator）\r\n"," interface that provides \n convenience methods to access request properties such as request URI\n and method type.":" 提供的接口\r\n 访问请求属性的便利方法，例如请求URI\r\n 和方法类型。\r\n","javax.net.ssl.SSLSessionBindingEvent":"javax.net.ssl.sslsessionbindingevent\r\n","java.util.prefs.AbstractPreferences.putByteArray(java.lang.String, byte[])":"java.util.prefs.abstractpreferences.putbytearray（java.lang.string，byte []）\r\n","javax.xml.transform.TransformerFactory#getFeature":"javax.xml.transform.transformerfactory＃getFeature\r\n","java.util.jar.JarOutputStream.JarOutputStream(java.io.OutputStream, java.util.jar.Manifest)":"java.util.jar.jaroutputstream.jaroutputstream（java.io.outputstream，java.util.jar.manifest）\r\n","Returns an equivalent stream with an additional close handler.":"返回等效流，并带有附加的关闭处理程序。\r\n"," fields of designated classes.":" 指定类的字段。\r\n","javax.xml.xpath.XPathVariableResolver":"javax.xml.xpath.xpathvariableresolver\r\n","Obtains the value of the DAYS field as an integer value,\n            or 0 if not present.":"以整数值获得天数的值，\r\n            或0如果不存在。\r\n","java.util.zip.Inflater.Inflater()":"java.util.zip.inflater.inflater（）\r\n","LexicalHandler":"词汇手\r\n","java.util.concurrent.atomic.AtomicReferenceArray.getAndUpdate(int, java.util.function.UnaryOperator)":"java.util.concurrent.atomic.atomicreferencearray.getandupdate（int，java.util.function.unaryoperator）\r\n","\r\n            Associates an event argument type with an event attribute name.\r\n            ":"\r\n            将事件参数类型与事件属性名称相关联。\r\n            \r\n","org.xml.sax.helpers.ParserAdapter.ignorableWhitespace(char[], int, int)":"org.xml.sax.helpers.parseradapter.ignorablewhitespace（char []，int，int）\r\n","\r\n            Used as the default scheme by ":"\r\n            用作默认方案\r\n","Get a SAX2 ":"得到sax2\r\n","javax.xml.transform.Templates.newTransformer()":"javax.xml.transform.templates.newtransformer（）\r\n","java.util.zip.ZipFile":"java.util.zip.zipfile\r\n","Adapt a SAX2 start prefix mapping event.":"调整SAX2启动前缀映射事件。\r\n","javax.net.ssl.SSLSocketFactory.getSupportedCipherSuites()":"javax.net.ssl.sslsocketfactory.getSupportedCiphersuites（）\r\n","An object that creates new threads on demand.":"一个按需创建新线程的对象。\r\n","Find or create a logger for a named subsystem.":"查找或创建命名子系统的记录仪。\r\n","javax.crypto.Mac.update(java.nio.ByteBuffer)":"javax.crypto.mac.update（java.nio.bytebuffer）\r\n","org.xml.sax.XMLFilter":"org.xml.sax.xmlfilter\r\n","java.util.concurrent.ScheduledThreadPoolExecutor.schedule(java.util.concurrent.Callable, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.scheduledthreadpoolexecutor.schedule（java.util.concurrent.callable，long，long，java.util.concurrent.timeunit）\r\n","if the algorithm parameter is ":"如果算法参数为\r\n","if a parser cannot\n   be created which satisfies the requested configuration.":"如果解析器不能\r\n   可以创建满足所请求的配置的。\r\n","Sets whether the designated column is automatically numbered,\n            The default is for a <code>RowSet</code> object's\n            columns not to be automatically numbered.":"设置指定的列是否自动编号，\r\n            默认值是<code> rowset </code>对象的\r\n            列不会自动编号。\r\n","if exclusive synchronization\n         is not held":"如果独家同步\r\n         不举行\r\n","if the specified key cannot be translated using this key\n             factory.\n":"如果不能使用此键翻译指定的键\r\n             工厂。\r\n\r\n","Connects a socket to the given host.":"将插座连接到给定的主机。\r\n","javax.crypto.spec.DHGenParameterSpec.getExponentSize()":"javax.crypto.spec.dhgenparameterspec.getExponentsize（）\r\n","java.util.concurrent.atomic.AtomicLongFieldUpdater.decrementAndGet(java.lang.Object)":"java.util.concurrent.atomic.atomiclongfieldupdater.decrementandget（java.lang.object）\r\n","Construct a LogRecord with the given level and message values.":"构建具有给定级别和消息值的求解。\r\n","\r\n            Used to resolve IAuthenticationHandler instances.\r\n            ":"\r\n            用于解决IauthenticationHandler实例。\r\n            \r\n","A factory for connections to the physical data source that this\n            <code>DataSource</code> object represents.":"与物理数据源连接的工厂\r\n            <code> dataSource </code>对象代表。\r\n","java.util.concurrent.ScheduledExecutorService":"java.util.concurrent.scheduledexecutorservice\r\n","java.util.zip.CheckedInputStream.getChecksum()":"java.util.zip.checkedinputstream.getchecksum（）\r\n","An object that registers to be notified of events that occur on PreparedStatements\n            that are in the Statement pool.":"注册要通知准备事件发生的事件的对象\r\n            在语句池中。\r\n","org.w3c.dom.Notation":"org.w3c.dom.notation\r\n","BINARY":"二进制\r\n","Constructs a ShortBufferException with the specified\n            detail message.":"用指定的\r\n            详细信息。\r\n","Returns whether this node is the same node as the given one.":"返回该节点是否与给定节点相同。\r\n"," reference. This method returns\n     normally if the value is ":" 参考。此方法返回\r\n     通常，如果值为\r\n","Queries if this lock is held by the current thread.":"查询如果此锁定由当前线持有。\r\n","java.util.logging.Formatter.getHead(java.util.logging.Handler)":"java.util.logging.formatter.gethead（java.util.logging.handler）\r\n","Returns the comparator used to order the elements in this queue,\n            or ":"返回用于订购此队列中元素的比较器，\r\n            或者\r\n","javax.xml.xpath.XPathConstants":"javax.xml.xpath.xpathconstants\r\n","if a problem occurs accessing the database or if the\n             properties needed to access the database have not been set.":"如果发生问题时访问数据库或\r\n             尚未设置访问数据库所需的属性。\r\n","if the input is ":"如果输入是\r\n","Creates a DESKeySpec object using the first 8 bytes in\n            <code>key</code>, beginning at <code>offset</code> inclusive,\n            as the key material for the DES key.":"使用前8个字节创建一个deskeyspec对象\r\n            <code>键</code>，从<code> offset </code>包含在内，\r\n            作为DES键的关键材料。\r\n","org.xmlpull.v1.XmlPullParserFactory.newPullParser()":"org.xmlpull.v1.xmlpullparserfactory.newpullparser（）\r\n","org.json.JSONObject.toString(int)":"org.json.jsonobject.tostring（int）\r\n","Returns the exemption mechanism name of this\n            <code>ExemptionMechanism</code> object.":"返回豁免机制名称\r\n            <code>豁免机构</code>对象。\r\n","Loads version information for a package.":"加载软件包的版本信息。\r\n","javax.crypto.KeyGenerator.getAlgorithm()":"javax.crypto.keygenerator.getAlgorithm（）\r\n","The name of the processing instruction that is sent if the\n            result tree disables output escaping.":"如果\r\n            结果树禁用输出逃脱。\r\n","\r\n            Extension method for Forbid using the ":"\r\n            用于禁止使用的扩展方法\r\n","\r\n            Processses pending renders requests from components if there are any.\r\n            ":"\r\n            如果有的话，请参见组件的渲染请求。\r\n            \r\n","Get the stylesheet specification(s) associated with the\n            XML <code>Source</code> document via the\n            <a href=\"http://www.":"获取与样式表规范相关的\r\n            xml <code>源</code>通过\r\n            <a href =“ http：//www。\r\n","\r\n            For each parameter property on ":"\r\n            对于每个参数属性\r\n","\r\n            Gets or sets the full path or absolute URI to be used as an http redirect response value.\r\n            ":"\r\n            获取或设置将用作HTTP重定向响应值的完整路径或绝对URI。\r\n            \r\n","\r\n            Generates a new random cookie token.\r\n            ":"\r\n            生成新的随机曲奇令牌。\r\n            \r\n","\r\n            Gets the authentication options associated with the scheme.\r\n            ":"\r\n            获取与计划关联的身份验证选项。\r\n            \r\n","Returns the provider of this <code>Mac</code> object.":"返回此<code> Mac </code>对象的提供商。\r\n","Eventually sets the element at position ":"最终将元素设置为位置\r\n","Basic implementation of an HTTP message that can be modified.":"可以修改的HTTP消息的基本实现。\r\n","java.util.concurrent.CompletionService.submit(java.util.concurrent.Callable)":"java.util.concurrent.completionservice.submit（java.util.concurrent.clable）\r\n","\r\n            The Func that will be called to select value from the given json user data.\r\n            ":"\r\n            将被调用以从给定的JSON用户数据中选择值的函数。\r\n            \r\n","a String representation for ":"一个字符串表示\r\n","java.util.concurrent.CompletionStage.handle(java.util.function.BiFunction)":"java.util.concurrent.completionstage.handle（java.util.function.bifunction）\r\n","Returns the compression method of the entry. -or- Sets the compression method for the entry.":"返回条目的压缩方法。 - 或设置条目的压缩方法。\r\n","java.util.concurrent.atomic.AtomicReferenceFieldUpdater.weakCompareAndSet(java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.concurrent.atomic.atomicreferencefieldupdater.weakcompareandset（java.lang.object，java.lang.object，java.lang.object）\r\n","Acquires a permit from this semaphore, if one becomes available\n            within the given waiting time and the current thread has not\n            been Thread#interrupt interrupted.":"如果有可用的话，请从此信号量获得许可证\r\n            在给定的等待时间内，当前线程没有\r\n            是线程＃中断中断。\r\n","\r\n            This information is used by the rendering system to determine whether\r\n            to accept a value update for the other attribute when receiving a\r\n            call to the event handler.\r\n            ":"\r\n            渲染系统使用此信息来确定是否是否\r\n            接收到其他属性的值更新\r\n            致电活动处理程序。\r\n            \r\n","Evaluate the compiled XPath expression in the specified context and return the result as the specified type.":"评估指定上下文中编译的XPATH表达式，并将结果返回指定类型。\r\n","Creates a new input stream with a default compressor and buffer\n            size.":"使用默认压缩机和缓冲区创建新的输入流\r\n            尺寸。\r\n","Partial order relation comparison with this <code>Duration</code> instance.":"部分订单关系与此<code>持续时间</code>实例进行比较。\r\n","\r\n            Gets the headers that are supported by the resource.\r\n            ":"\r\n            获取资源支持的标题。\r\n            \r\n"," is not one of the types defined in ":" 不是在\r\n","org.w3c.dom.NodeList.item(int)":"org.w3c.dom.nodelist.item（int）\r\n","javax.xml.parsers.FactoryConfigurationError.FactoryConfigurationError()":"javax.xml.parsers.factoryConfigurationError.factoryConfigurationError（）\r\n","org.xml.sax.helpers.XMLReaderAdapter.XMLReaderAdapter()":"org.xml.sax.helpers.xmlreaderadapter.xmlreaderadapter（）\r\n","\r\n            Removes some elements from the start of this segment.\r\n            ":"\r\n            从本细分市场的开头删除一些元素。\r\n            \r\n","305 Use Proxy":"305使用代理\r\n","java.util.logging.MemoryHandler.push()":"java.util.logging.memoryhandler.push（）\r\n"," have been modified.\r\n            ":" 已修改。\r\n            \r\n","Specifies the Content-Type header, as a string.":"将内容类型标头指定为字符串。\r\n","Atomically sets the value of the mark to the given update value\n            if the current reference is ":"原子将标记的值设置为给定的更新值\r\n            如果当前参考是\r\n"," property on this type is used as a static global cache. Ensure any changes to this type\r\n            are thread safe and can be safely cached statically.\r\n            ":" 此类型上的属性用作静态全局缓存。确保对此类型的任何更改\r\n            线程安全，可以在静态上安全地缓存。\r\n            \r\n"," using a specified host and port.":" 使用指定的主机和端口。\r\n","This class creates server sockets.":"该课程创建服务器插座。\r\n","javax.security.auth.callback.CallbackHandler.handle(javax.security.auth.callback.Callback[])":"javax.security.auth.callback.callbackhandler.handle（javax.security.auth.callback.callback []）\r\n"," result.\r\n            ":" 结果。\r\n            \r\n","javax.crypto.ShortBufferException.ShortBufferException(java.lang.String)":"javax.crypto.shortbufferexception.shortbufferexception（java.lang.string）\r\n","\r\n            Gets a ":"\r\n            得到一个\r\n","\r\n            The resource to which access is being controlled.\r\n            ":"\r\n            正在控制访问的资源。\r\n            \r\n","\r\n            Base class used by other context classes.\r\n            ":"\r\n            其他上下文类使用的基类。\r\n            \r\n","Underlying security services instantiate and pass a\n            ":"潜在的安全服务实例化并通过\r\n            \r\n","if an error occurs while creating a new server socket.\n":"如果在创建新服务器套接字时发生错误。\r\n\r\n","javax.xml.xpath.XPathConstants.NUMBER":"javax.xml.xpath.xpathconstants.number\r\n"," can be used on at most one parameter per component.\r\n            ":" 每个组件最多可以使用一个参数。\r\n            \r\n","java.util.prefs.AbstractPreferences.put(java.lang.String, java.lang.String)":"java.util.prefs.abstractpreferences.put（java.lang.string，java.lang.string）\r\n","\r\n            Method invoked when the component has received parameters from its parent in\r\n            the render tree, and the incoming values have been assigned to properties.\r\n            ":"当组件已收到其父的参数时调用方法\r\n            渲染树和传入值已分配给属性。\r\n            \r\n","INDEX_SIZE_ERR: Raised if the specified offset is negative or greater\n   than the number of 16-bit units in ":"index_size_err：如果指定的偏移为负或更大，则提出\r\n   比16位单元的数量\r\n","Sets lookup interface for maximum number of connections allowed per route.":"设置查找接口，以提供每条路线允许的最大连接数。\r\n","org.json.JSONArray.getInt(int)":"org.json.jsonarray.getint（int）\r\n","Returns a copy of the array of ciphersuites or null if none\n            have been set.":"如果没有\r\n            已经设置了。\r\n","java.util.concurrent.LinkedBlockingDeque.spliterator()":"java.util.concurrent.linkedblockingdeque.spliterator（）\r\n","Returns a duplicate of this node, i.":"返回该节点的重复，即。\r\n","org.xml.sax.DocumentHandler.startElement(java.lang.String, org.xml.sax.AttributeList)":"org.xml.sax.documenthandler.startelement（java.lang.string，org.xml.sax.sax.attributelist）\r\n","Returns the input subsequence matched by the previous match.":"返回与上一场比赛匹配的输入子序列。\r\n","Creates a new line parser for HTTP.":"为HTTP创建一个新的线条解析器。\r\n","javax.xml.datatype.DatatypeConstants.JUNE":"javax.xml.datatype.datatypeconstants.june\r\n","java.util.logging.LogRecord.getResourceBundleName()":"java.util.logging.logrecord.getResourcebundlename（）\r\n","Indicates whether or not this parser is configured to\n validate XML documents.":"指示该解析器是否配置为\r\n 验证XML文档。\r\n"," to the default path.\r\n             ":" 到默认路径。\r\n             \r\n"," class with the specified policy. \r\n            ":"与指定策略的课程。\r\n            \r\n","javax.net.ssl.SSLServerSocket.getEnabledProtocols()":"javax.net.ssl.sslserversocket.getEnabledprotocols（）\r\n","org.w3c.dom.ls.LSSerializer.write(org.w3c.dom.Node, org.w3c.dom.ls.LSOutput)":"org.w3c.dom.ls.lsserializer.write（org.w3c.dom.node，org.w3c.dom.ls.ls.lsoutput）\r\n","\r\n            Writes a ":"\r\n            写一个\r\n"," manifest attribute.":" 清单属性。\r\n","If there is a problem\n            processing the document.":"如果有问题\r\n            处理文档。\r\n","409 Conflict":"409冲突\r\n","Sets the Port attribute.":"设置端口属性。\r\n","Constants and static helpers related to the HTTP state management.":"常数和静态帮助者与HTTP状态管理有关。\r\n","if the specified opmode is invalid.\n":"如果指定的OPMODE无效。\r\n\r\n","\r\n            Gets the main identity exposed by the authentication ticket.\r\n            This property returns ":"\r\n            获得身份验证票证的主要身份。\r\n            此属性返回\r\n","java.util.concurrent.atomic.AtomicReference.AtomicReference()":"java.util.concurrent.atomic.atomicreference.atomicreference（）\r\n","\r\n            Notifies the component that its state has changed. When applicable, this will\r\n            cause the component to be re-rendered.\r\n            ":"\r\n            通知其状态已更改的组件。如果适用，这将\r\n            使组件重新渲染。\r\n            \r\n","Use this call to change the general behaviour of the parser,\n            such as namespace processing or doctype declaration handling.":"使用此调用来改变解析器的一般行为，\r\n            例如名称空间处理或Doctype声明处理。\r\n","Use a DOM node to create a new output target with the specified System ID.":"使用DOM节点使用指定的系统ID创建新的输出目标。\r\n","org.json.JSONArray.optLong(int, long)":"org.json.jsonarray.optlong（int，long）\r\n","java.util.zip.ZipOutputStream.setMethod(int)":"java.util.zip.zipoutputstream.setMethod（int）\r\n",",\r\n            gets the component's diffing key, or null if none was specified.\r\n            ":"，，，，\r\n            获取组件的扩散键，或者如果未指定未指定的键。\r\n            \r\n","Map#merge(Object, Object, BiFunction)":"地图＃合并（对象，对象，双点）\r\n","javax.xml.parsers.SAXParserFactory.setSchema(javax.xml.validation.Schema)":"javax.xml.parsers.saxparserfactory.setschema（javax.xml.validation.schema）\r\n","if the length of the key data starting at offset is less than\n             24.\n":"如果从偏移量开始的关键数据的长度小于\r\n             24。\r\n\r\n","\r\n            Name/Value representing a token.\r\n            ":"\r\n            代表令牌的名称/值。\r\n            \r\n","Returns a specification (key material) of the given key\n            object in the requested format.":"返回给定密钥的规范（密钥材料）\r\n            以请求格式的对象。\r\n","BaseStream":"底流\r\n","Constructs a NoSuchPaddingException with no detail\n            message.":"构建一个nosuchpaddingException，没有细节\r\n            信息。\r\n","Acquires in exclusive mode, ignoring interrupts.":"在独家模式下获取，忽略中断。\r\n","javax.crypto.Cipher.UNWRAP_MODE":"javax.crypto.cipher.unwrap_mode\r\n","javax.crypto.SecretKeyFactory":"javax.crypto.secretkeyfactory\r\n","Atomically decrements by one the current value of the field of the\n            given object managed by this updater.":"从原子上减少一个字段的当前值\r\n            给定该更新程序管理的对象。\r\n","Returns an array containing the string names in this object.":"返回该对象中包含字符串名称的数组。\r\n","Parameter names for connections in HttpConn.":"HTTPConn中连接的参数名称。\r\n","org.xmlpull.v1.XmlPullParser.FEATURE_VALIDATION":"org.xmlpull.v1.xmlpullparser.feature_validation\r\n","org.w3c.dom.Element.getElementsByTagName(java.lang.String)":"org.w3c.dom.element.getElementsbytagname（java.lang.string）\r\n","\r\n            Return the handlers that will be called for the authorization request.\r\n            ":"\r\n            退还将要求授权请求的处理程序。\r\n            \r\n","org.json.JSONObject.getDouble(java.lang.String)":"org.json.jsonobject.getDouble（java.lang.string）\r\n","java.util.concurrent.Phaser.isTerminated()":"java.util.concurrent.phaser.isterminated（）\r\n","\r\n            true if a key has been depressed long enough to trigger key repetition, otherwise false.\r\n            ":"\r\n            如果钥匙的凹陷足够长以触发密钥重复，则是真的。\r\n            \r\n","\r\n            Returns the policy for the specified name, or null if a policy with the name does not exist.\r\n            ":"\r\n            返回指定名称的策略，如果不存在该名称的策略，则返回null。\r\n            \r\n","javax.net.ssl.SSLSession":"javax.net.ssl.sslsession\r\n","Returns the to-be-derived key length or 0 if not specified.":"返回到衍生的键长度或0（如果未指定）。\r\n","Atomically sets the field of the given object managed by this updater\n            to the given value and returns the old value.":"原子设置该更新机管理的给定对象的字段\r\n            给定值并返回旧值。\r\n","Returns the <code>PreparedStatement</code> that is being closed or is invalid":"返回正在关闭或无效的<code>准备的</code>\r\n","javax.crypto.CipherOutputStream":"javax.crypto.cipheroutputstream\r\n","java.util.concurrent.atomic.LongAccumulator.reset()":"java.util.concurrent.atomic.longaccumulator.reset（）\r\n","This class specifies the set of parameters used with the Diffie-Hellman\n            algorithm, as specified in PKCS #3: ":"此类指定与Diffie-Hellman一起使用的一组参数\r\n            算法，如PKCS＃3中指定：\r\n","\r\n            Called when a Challenge causes a redirect to authorize endpoint in the OAuth handler.\r\n            ":"\r\n            当挑战使重定向授权在OAuth处理程序中授权端点时打电话。\r\n            \r\n","java.util.function.IntBinaryOperator.applyAsInt(int, int)":"java.util.function.intbinaryoperator.applyasint（int，int）\r\n","\r\n            The X coordinate of the mouse pointer in global (screen) coordinates.\r\n            ":"\r\n            全局（屏幕）坐标中鼠标指针的X坐标。\r\n            \r\n"," for the reader.\r\n            ":" 对于读者。\r\n            \r\n","\r\n            Clears the entire sequence and recycles associated memory into pools.\r\n            This invalidates any ":"清除整个序列，并回收将内存相关的内存到池中。\r\n            这使任何人无效\r\n","java.util.concurrent.CompletionStage.thenComposeAsync(java.util.function.Function, java.util.concurrent.Executor)":"java.util.concurrent.completionstage.thencomposync（java.util.function.function，java.util.concurrent.executor）\r\n","Parse an XML document.":"解析XML文档。\r\n","\r\n            Clears any current ClaimsActions and maps all values from the json user data as claims, excluding the specified types.\r\n            ":"\r\n            清除当前的索赔措施，并将JSON用户数据中的所有值映射为索赔，不包括指定类型。\r\n            \r\n","org.w3c.dom.DOMException":"org.w3c.dom.domexception\r\n","MatchResult":"MatchResult\r\n","Signals a malformed chunked stream.":"标志着畸形的溪流。\r\n","java.util.concurrent.ScheduledThreadPoolExecutor.ScheduledThreadPoolExecutor(int, java.util.concurrent.ThreadFactory)":"java.util.concurrent.scheduledthreadpoolexecutor.scheduledthreadpoolexecutor（int，java.util.concurrent.threadfactory）\r\n","javax.crypto.Cipher.getBlockSize()":"javax.crypto.cipher.getBlocksize（）\r\n","Returns whether no more outbound data will be produced by this engine.":"返回该引擎是否不会产生出站数据。\r\n","javax.security.auth.DestroyFailedException.DestroyFailedException(java.lang.String)":"javax.security.auth.destroyfailedexception.destroyfailedexception（java.lang.string）\r\n","If an invalid or illegal string is specified.":"如果指定了无效或非法字符串。\r\n","java.util.concurrent.ThreadPoolExecutor.getKeepAliveTime(java.util.concurrent.TimeUnit)":"java.util.concurrent.threadpoolexecutor.getKeepAlivEtime（java.util.concurrent.timeunit）\r\n","NO_MODIFICATION_ALLOWED_ERR: Raised if one of the ":"no_modification_allowed_err：如果其中一个\r\n","javax.xml.parsers.SAXParser.parse(java.lang.String, org.xml.sax.HandlerBase)":"javax.xml.parsers.saxparser.parse（java.lang.string，org.xml.sax.handlerbase）\r\n","\r\n            Builds a new ":"\r\n            建立一个新的\r\n","The node immediately following this node.":"该节点紧随其后的节点。\r\n","java.util.jar.Attributes.putAll(java.util.Map)":"java.util.jar.attributes.putall（java.util.map）\r\n","The constructor with the username and password combined string argument.":"具有用户名和密码组合字符串参数的构造函数。\r\n","Exclusively acquires the lock if it is immediately available.":"如果立即可用，则独家获取锁。\r\n","javax.crypto.spec.IvParameterSpec.getIV()":"javax.crypto.spec.ivparameterspec.getiv（）\r\n","Designation that an \"int\" field is not set.":"名称未设置“ int”字段。\r\n"," into the current instance.\r\n            ":" 进入当前实例。\r\n            \r\n","Parses a single header element.":"解析单个标头元素。\r\n","Receive notification of the start of an element.":"接收元素开始的通知。\r\n","java.util.concurrent.CompletionStage.thenCombineAsync(java.util.concurrent.CompletionStage, java.util.function.BiFunction)":"java.util.concurrent.completionstage.thencombineasync（java.util.concurrent.completionstage，java.util.function.bifunction）\r\n","javax.crypto.spec.OAEPParameterSpec":"javax.crypto.spec.oaepparameterspec\r\n","Returns the version of XML used for the entity.":"返回实体使用的XML版本。\r\n"," by copying mappings for the listed names\n            from the given object.":" 通过复制列出名称的映射\r\n            从给定的对象。\r\n","javax.sql.RowSet.setBlob(int, java.sql.Blob)":"javax.sql.Rowset.setBlob（int，java.sql.blob）\r\n","java.util.function.UnaryOperator.identity()":"java.util.function.unaryoperator.Identity（）\r\n","javax.net.ssl.SSLSession.getPeerCertificates()":"javax.net.ssl.sslsession.getpeercertificates（）\r\n","WRONG_DOCUMENT_ERR: Raised when the specified node was created\n   from a different document than this document.\n   ":"错误_document_err：创建指定节点时提出\r\n   与本文档不同的文档。\r\n   \r\n","Creates a new line parser for the given HTTP-like protocol.":"为给定的HTTP样协议创建一个新的线条解析器。\r\n","javax.crypto.Mac.clone()":"javax.crypto.mac.clone（）\r\n","org.xml.sax.helpers.AttributeListImpl.getValue(int)":"org.xml.sax.helpers.attributelistimpl.getValue（int）\r\n","\r\n            Creates a ":"\r\n            创建一个\r\n","if the input is malformed.\n":"如果输入畸形。\r\n\r\n","java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndAccumulate(java.lang.Object, long, java.util.function.LongBinaryOperator)":"java.util.concurrent.atomic.atomiclongfieldupdater.getandaccumulate（java.lang.object，long，java.util.function.longbinaryoperator）\r\n","Returns the most recent application protocol value negotiated for this\n            connection.":"返回为此协商的最新应用程序协议值\r\n            联系。\r\n","javax.crypto.spec.DHPublicKeySpec.getP()":"javax.crypto.spec.dhpublickeyspec.getp（）\r\n","javax.sql.RowSet.setNull(int, int, java.lang.String)":"javax.sql.rowset.setnull（int，int，java.lang.string）\r\n","\r\n            Challenge behavior.\r\n            ":"\r\n            挑战行为。\r\n            \r\n"," method as per the specification\n            in ":" 根据规范的方法\r\n            在\r\n","Map<Boolean, List<T>>":"地图<布尔，列表<t >>\r\n","Each <code>Document</code> has a <code>doctype</code> attribute whose value\n            is either <code>null</code> or a <code>DocumentType</code> object.":"每个<code>文档</code>都有<code> doctype </code>属性其值\r\n            是<code> null </code>或<code> documenttype </code>对象。\r\n","Zero-argument default constructor.":"零题词默认构造函数。\r\n","SocketFactory SocketFactory":"套接字套接字\r\n","Returns true if this executor is in the process of terminating\n            after ":"如果该执行人正在终止\r\n            后\r\n","org.xmlpull.v1.XmlSerializer.endDocument()":"org.xmlpull.v1.xmlserializer.enddocument（）\r\n","Returns the named preference node in the same tree as this node,\n            creating it and any of its ancestors if they do not already exist.":"返回与此节点同一树中命名的偏好节点，\r\n            如果尚不存在，则创建它及其任何祖先。\r\n",")\n associated with this document.":"）\r\n 与此文档关联。\r\n","org.xml.sax.DocumentHandler.ignorableWhitespace(char[], int, int)":"org.xml.sax.documenthandler.ignorablewhitespace（char []，int，int）\r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            to the given Java <code>int</code> value.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            对于给定的Java <code> int </code>值。\r\n","Returns a new CompletionStage that, when this stage completes\n            either normally or exceptionally, is executed with this stage's\n            result and exception as arguments to the supplied function.":"返回一个新的完整舞台，当这个阶段完成时\r\n            正常或异常地使用此阶段的\r\n            结果和例外作为所提供函数的参数。\r\n","java.util.logging.FileHandler.FileHandler(java.lang.String, int, int)":"java.util.logging.filehandler.filehandler（java.lang.string，int，int）\r\n","java.util.concurrent.locks.StampedLock.tryWriteLock(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.locks.stampedlock.tritelock（long，java.util.concurrent.timeunit）\r\n","Attempts to establish a physical database connection that can\n            be used as a pooled connection.":"试图建立可以可以的物理数据库连接\r\n            用作汇总连接。\r\n","javax.xml.datatype.DatatypeConfigurationException.DatatypeConfigurationException()":"javax.xml.datatype.datatypeconfigurationexception.datatypeconfigurationexception（）\r\n","java.util.concurrent.TimeUnit.toMicros(long)":"java.util.concurrent.timeunit.tomicros（long）\r\n","Returns the next header.":"返回下一个标头。\r\n","Creates a new input stream with a default decompressor and buffer size.":"创建具有默认解压器和缓冲区大小的新输入流。\r\n","org.xml.sax.ext.LexicalHandler.startCDATA()":"org.xml.sax.ext.lexicalhandler.startcdata（）\r\n","The severity of the error described by the <code>DOMError</code> is\n            error.":"<code> domerror </code>描述的错误的严重性是\r\n            错误。\r\n","ssl.TrustManagerFactory.algorithm":"ssl.trustmanagerfactory.algorithm\r\n","java.util.concurrent.atomic.AtomicIntegerArray.lazySet(int, int)":"java.util.concurrent.atomic.atomicintegerarray.lazyset（int，int）\r\n","\r\n            Associates the ":"\r\n            协同\r\n","Parse the content of the given URI as an XML document\n            and return a new DOM ":"解析给定URI的内容作为XML文档\r\n            并返回新的dom\r\n"," value represents any authentication scheme.":" 值代表任何身份验证方案。\r\n"," is\n   malformed, if the ":" 是\r\n   畸形，如果\r\n","Releases in exclusive mode.":"在独家模式下发布。\r\n","Obtain an instance of a ":"获得一个实例\r\n","Returns the new value for the preference.":"返回首选项的新值。\r\n","Returns a delegate task for this engine instance.":"返回此引擎实例的委托任务。\r\n","\r\n            Returns a flag to indicate whether the component should render.\r\n            ":"\r\n            返回标志以指示组件是否应呈现。\r\n            \r\n","java.util.concurrent.locks.ReentrantLock.hasQueuedThreads()":"java.util.concurrent.locks.reentrantlock.hasqueuedthreads（）\r\n","Atomically sets the value to the given updated value\n            if the current value ":"原子将值设置为给定的更新值\r\n            如果当前值\r\n","java.util.concurrent.locks.StampedLock.getReadLockCount()":"java.util.concurrent.locks.stampedlock.getReadlockcount（）\r\n","if the mapping doesn't exist or cannot be coerced\n     to an int.\n":"如果映射不存在或无法强制\r\n     到int。\r\n\r\n","\n            but supporting more flexible usage.":"\r\n            但是支持更灵活的用法。\r\n","#MULTILINE":"#Multiline\r\n","java.util.zip.CheckedOutputStream":"java.util.zip.checkedoutputstream\r\n","Returns a new CompletionStage that, when this stage completes\n            exceptionally, is executed with this stage's exception as the\n            argument to the supplied function.":"返回一个新的完整舞台，当这个阶段完成时\r\n            异常，在此阶段的例外执行\r\n            与所提供的功能有关。\r\n","javax.xml.datatype.XMLGregorianCalendar.setTime(int, int, int, java.math.BigDecimal)":"javax.xml.datatype.xmlgregoriancalendar.settime（int，int，int，java.math.bigdecimal）\r\n","Constructs a new <code>XPathFactoryConfigurationException</code> with the specified <code>cause</code>.":"用指定的<code>原因</code>构造新的<code> XPathFactoryConfigurationException </code>。\r\n","java.util.jar.JarEntry.JarEntry(java.util.jar.JarEntry)":"java.util.jar.jarentry.jarentry（java.util.jar.jarentry）\r\n","Adds an event listener to be invoked when the logging\n            properties are re-read.":"添加登录时要调用的事件听众\r\n            属性已重新阅读。\r\n","org.json.JSONArray.optInt(int)":"org.json.jsonarray.optint（int）\r\n","javax.xml.validation.SchemaFactory.newSchema(javax.xml.transform.Source[])":"javax.xml.validation.schemafactory.newschema（javax.xml.transform.source []）\r\n","java.util.logging.LogManager.getLoggingMXBean()":"java.util.logging.logmanager.getloggingmxbean（）\r\n","javax.sql.RowSet.setBlob(int, java.io.InputStream)":"javax.sql.Rowset.setBlob（int，java.io.inputstream）\r\n","java.util.concurrent.atomic.AtomicIntegerArray.length()":"java.util.concurrent.atomic.atomicintegerarray.length（）\r\n"," class\r\n            that uses a private ":" 班级\r\n            使用私人\r\n","Replaces the first subsequence of the input sequence that matches the\n            pattern with the given replacement string.":"取代与匹配的输入序列的第一个子序列\r\n            带有给定替换字符串的模式。\r\n","org.json.JSONTokener.nextTo(char)":"org.json.jsontokener.nextto（char）\r\n","if the value at ":"如果值\r\n","javax.net.ssl.SSLSession.getId()":"javax.net.ssl.sslsession.getID（）\r\n","VARBINARY":"Varbinary\r\n","Returns the next available character if it equals ":"如果等于\r\n","java.util.zip.ZipEntry.setLastAccessTime(java.nio.file.attribute.FileTime)":"java.util.zip.zipentry.setlastaccesstime（java.nio.file.attribute.filtime）\r\n","Attempts to match the given ":"尝试匹配给定的\r\n","The byte offset into the input source this locator is pointing to or\n ":"该定位器指向或\r\n \r\n","Removes all response interceptors from this list.":"从此列表中删除所有响应拦截器。\r\n","java.util.concurrent.SynchronousQueue":"java.util.concurrent.Synchronousqueue\r\n","Get the  name of the method that (allegedly) issued the logging request. -or- Set the name of the method that (allegedly) issued the logging request.":"获取（据称）发布记录请求的方法的名称。 - 或 - 设置（据称）发出伐木请求的方法的名称。\r\n","java.util.concurrent.ConcurrentMap.putIfAbsent(java.lang.Object, java.lang.Object)":"java.util.concurrent.concurrentmap.putifabsent（java.lang.object，java.lang.object）\r\n"," as disconnected\r\n             so that consumers of the Circuit know of the current state.\r\n             Once the entry for the host in ":" 如断开连接\r\n             因此，电路的消费者知道当前状态。\r\n             一旦主机进入\r\n","Indicates that the route is complete.":"表示路线已完成。\r\n","If the property\n            value is not currently readable.":"如果属性\r\n            值当前不可读取。\r\n","java.util.logging.Level.SEVERE":"java.util.logging.level.severe\r\n","java.util.zip.Checksum.update(int)":"java.util.zip.checksum.update（int）\r\n","Sets the optional extra field data for the entry.":"为条目设置可选的额外字段数据。\r\n","org.xml.sax.ext.Attributes2Impl.Attributes2Impl()":"org.xml.sax.ext.attributes2impl.attributes2impl（）\r\n","\r\n            https://github.com/msgpack/msgpack/blob/master/spec.md#serialization-type-to-format-conversion\r\n            ":"\r\n            https://github.com/msgpack/msgpack/blob/master/spec.md#serialization-type-type-to-format-conversion\r\n            \r\n"," lifecycle methods\r\n            are useful for performing interop, or interacting with values recieved from ":" 生命周期方法\r\n            对于执行Interop的执行或与从中获得的值进行交互\r\n","The required antiforgery cookie token must be provided.":"必须提供所需的抗试验饼干令牌。\r\n","org.xml.sax.helpers.LocatorImpl.LocatorImpl()":"org.xml.sax.helpers.locatorimpl.locatorimpl（）\r\n","that uses case-insensitive matching\n will use Unicode case folding. ":"使用案例不敏感的匹配\r\n 将使用Unicode案例折叠。\r\n","Returns true if the input data buffer is empty and setInput()\n            should be called in order to provide more input.":"如果输入数据缓冲区为空，并且setInput（）返回true\r\n            应调用以提供更多的输入。\r\n","Initializes this context.":"初始化此上下文。\r\n","The related platform dependent exception if any.":"相关平台依赖异常如果有的话。\r\n","if the logger identified by ":"如果记录器通过\r\n","NOT_FOUND_ERR: Raised if the specified node is not an attribute\n   of this element.":"not_found_err：如果指定的节点不是属性，则提出\r\n   这个元素。\r\n","\r\n            Writes an 8-bit value using ":"\r\n            使用8位值使用\r\n"," always returns\n            ":" 总是返回\r\n            \r\n","java.util.function.BiConsumer.andThen(java.util.function.BiConsumer)":"java.util.function.biconsumer.andthen（java.util.function.biconsumer）\r\n","java.util.zip.ZipEntry.ZipEntry(java.lang.String)":"java.util.zip.zipentry.zipentry（java.lang.string）\r\n","'s\n   ":"'\r\n   \r\n","Extension-Name":"扩展名称\r\n","An entity whose content is retrieved from a byte array.":"从字节数组中检索内容的实体。\r\n","Receive notification of the end of an element.":"接收元素末尾的通知。\r\n","java.util.zip.Inflater.finished()":"java.util.zip.inflater.fined（）\r\n","Marks this connection as not being in a reusable state.":"标记此连接不处于可重复使用状态。\r\n","java.util.jar.JarEntry.getCertificates()":"java.util.jar.jarentry.getCertificates（）\r\n"," is not greater\n         than zero\n":" 不是更大\r\n         比零\r\n\r\n","java.util.zip.InflaterInputStream.inf":"java.util.zip.inflaterinputstream.inf\r\n","org.xml.sax.helpers.NamespaceSupport.getURI(java.lang.String)":"org.xml.sax.helpers.namespacesupport.geturi（java.lang.string）\r\n","javax.crypto.spec.GCMParameterSpec.GCMParameterSpec(int, byte[], int, int)":"javax.crypto.spec.gcmparameterspec.gcmparameterspec（int，byte []，int，int）\r\n","Log a CONFIG message.":"日志配置消息。\r\n","Set this ":"设置此\r\n"," is not able to navigate to a different url.\r\n            ":" 无法导航到其他URL。\r\n            \r\n","org.json.JSONArray.JSONArray()":"org.json.jsonarray.jsonarray（）\r\n","Retrieve the localization resource bundle for this\n            logger. -or- Sets a resource bundle on this logger.":"为此检索本地化资源捆绑\r\n            记录器。 - 或 - 在此记录器上设置资源捆绑包。\r\n","org.json.JSONArray.getJSONArray(int)":"org.json.jsonarray.getjsonarray（int）\r\n","Resets variables maintaining updates to the identity value.":"重置变量，以保持身份值的更新。\r\n","Change the output stream.":"更改输出流。\r\n","org.json.JSONObject.optInt(java.lang.String, int)":"org.json.jsonobject.optint（java.lang.string，int）\r\n","org.xml.sax.SAXParseException.SAXParseException(java.lang.String, java.lang.String, java.lang.String, int, int, java.lang.Exception)":"org.xml.sax.saxparseexception.saxparseexception（java.lang.string，java.lang.string，java.lang.string，int，int，int，int，java.lang.exception）\r\n","java.util.stream.Collectors.partitioningBy(java.util.function.Predicate)":"java.util.stream.collectors.partitioningby（java.util.function.predicate）\r\n","Output buffer for writing compressed data.":"用于编写压缩数据的输出缓冲区。\r\n","org.w3c.dom.Node.CDATA_SECTION_NODE":"org.w3c.dom.node.cdata_section_node\r\n","Checks if this duration object is strictly shorter than\n            another <code>Duration</code> object.":"检查此持续时间是否严格短于\r\n            另一个<code>持续时间</code>对象。\r\n","java.util.concurrent.atomic.AtomicLongArray":"java.util.concurrent.atomic.atomiclongarray\r\n","java.util.zip.Adler32.update(byte[])":"java.util.zip.adler32.update（byte []）\r\n","An <code>Event</code> object that provides information about the\n            source of a connection-related event.":"<code>事件</code>对象，提供有关\r\n            与连接有关的事件的来源。\r\n","java.util.concurrent.locks.ReentrantReadWriteLock.hasQueuedThreads()":"java.util.concurrent.locks.reentrantreadwritelock.hasqueuedthreads（）\r\n","javax.xml.datatype.DatatypeConstants":"javax.xml.datatype.datatypeconstants\r\n","java.util.concurrent.ExecutorService.invokeAll(java.util.Collection)":"java.util.concurrent.executorservice.invokeall（java.util.collection）\r\n","Constructs SSLParameters from the specified array of ciphersuites.":"从指定的密码阵列构造SSLPARAMETER。\r\n","Clear all parameters set with setParameter.":"清除使用SetParameter设置的所有参数。\r\n","\r\n            Specifies the form field's new value.\r\n            ":"\r\n            指定表单字段的新值。\r\n            \r\n","javax.crypto.AEADBadTagException":"javax.crypto.Aeadbadtagexception\r\n","java.util.logging.Level.WARNING":"java.util.logging.level.warning\r\n","javax.xml.validation.Validator.setProperty(java.lang.String, java.lang.Object)":"javax.xml.validation.validator.setproperty（java.lang.string，java.lang.object）\r\n","Get the integer value for this level.":"获取此级别的整数值。\r\n","Creates a new scheme.":"创建一个新方案。\r\n"," that provides methods to manage termination and\n            methods that can produce a ":" 这提供了管理终止和\r\n            可以产生一个的方法\r\n","javax.security.auth.Subject.getPrivateCredentials(java.lang.Class)":"javax.security.auth.subject.getPrivateCredentials（java.lang.class）\r\n","\r\n            Gets or sets the URI where the client will be redirected to authenticate.\r\n            ":"\r\n            获取或设置将重定向端以身份验证的URI。\r\n            \r\n","Returns all the headers of this message.":"返回此消息的所有标题。\r\n","Maximum length of string allowed as a value (8192 characters).":"字符串的最大长度作为值（8192个字符）。\r\n"," TYPE_MISMATCH_ERR: Raised if the value type for this parameter\n   name is incompatible with the expected value type.\n":" type_mismatch_err：增加此参数的值类型\r\n   名称与预期值类型不兼容。\r\n\r\n","Preferences#remove(String)":"首选项＃remove（字符串）\r\n","javax.xml.parsers.SAXParserFactory.isValidating()":"javax.xml.parsers.saxparserfactory.isvalidating（）\r\n","\r\n            Assigns the specified key value to the current element or component.\r\n            ":"\r\n            将指定的键值分配给当前元素或组件。\r\n            \r\n","Returns the namespace URI of the current element.":"返回当前元素的名称空间URI。\r\n"," to the given\n            updated value if the current value ":" 给定\r\n            如果当前值更新值\r\n","A class that can be used to compute the Adler-32 checksum of a data\n            stream.":"可以用于计算数据的Adler-32校验和的类\r\n            溪流。\r\n","Initializes this cipher instance with the specified key.":"用指定的密钥初始化此密码实例。\r\n","Replaces the text of the current node and all logically-adjacent text\n            nodes with the specified text.":"替换当前节点的文本和所有逻辑上的文本\r\n            带有指定文本的节点。\r\n","413 Request Entity Too Large":"413请求实体太大\r\n","\r\n            Configuration options for ":"\r\n            配置选项\r\n","nextSibling":"下空\r\n","javax.net.ssl.SSLSessionBindingEvent.SSLSessionBindingEvent(javax.net.ssl.SSLSession, java.lang.String)":"javax.net.ssl.sslseslsessionbindingevent.sslsessionbindingevent（javax.net.net.ssl.sslsessession，java.lang.string）\r\n","inputOffset":"输入\r\n","Returns the creation time of the entry.":"返回条目的创建时间。\r\n","EntityResolver2":"EntityResolver2\r\n","if this cipher instance is not initialized for unwrapping.\n":"如果此密码实例未初始化以进行解析。\r\n\r\n","\r\n            The Access-Control-Request-Headers request header.\r\n            ":"\r\n            访问控制 - 重点标题请求标题。\r\n            \r\n","java.util.concurrent.locks.Lock.lockInterruptibly()":"java.util.concurrent.locks.lock.lock.lockruptible（）\r\n","\r\n            Adds the specified authentication ":"\r\n            添加指定的身份验证\r\n"," of Principals and empty\n            Sets of public and private credentials.":" 校长和空的\r\n            一组公共和私人凭据。\r\n","java.util.zip.ZipEntry.setCreationTime(java.nio.file.attribute.FileTime)":"java.util.zip.zipentry.setCreationTime（java.nio.file.attribute.filtime）\r\n","Looks up a reason phrase.":"查找原因。\r\n","An HTTP connection for use on the server side.":"HTTP连接用于服务器端。\r\n","Returns the start index of the subsequence captured by the given group\n            during this match.":"返回给定组捕获的子序列的开始索引\r\n            在这场比赛中。\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.compareAndSetState(long, long)":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.compareandsetstate（long，long）\r\n","javax.net.ssl.SSLSocket.getEnabledProtocols()":"javax.net.ssl.sslsocket.getEnabledprotocols（）\r\n","XMLGregorianCalendar":"xmlgregoriancalendar\r\n","javax.sql.RowSet.setTime(int, java.sql.Time)":"javax.sql.Rowset.settime（int，java.sql.time）\r\n","Register the DTD event handler.":"注册DTD事件处理程序。\r\n","\r\n            Attempts to convert a value to a value of type ":"\r\n            尝试将值转换为类型的值\r\n","Sets this Future to the result of its computation\n            unless it has been cancelled.":"将未来设置为计算的结果\r\n            除非已取消。\r\n","java.util.concurrent.ScheduledThreadPoolExecutor.ScheduledThreadPoolExecutor(int, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)":"java.util.concurrent.scheduledthreadpoolexecutor.scheduledthreadpoolexecutor（int，java.util.concurrent.threadfactory，java.util.concurrent.concurrent.concurrent.rejectedexedexecutionhandler）\r\n","Get the  name of the class that (allegedly) issued the logging request. -or- Set the name of the class that (allegedly) issued the logging request.":"获取（据称）发布伐木请求的班级名称。 - 或 - 设置（据称）发布伐木请求的课程名称。\r\n","java.util.prefs.AbstractPreferences.get(java.lang.String, java.lang.String)":"java.util.prefs.abstractpreferences.get（java.lang.string，java.lang.string）\r\n","\r\n            Extension methods for setting up antiforgery services in an ":"\r\n            用于在\r\n","\r\n            Notifies the component that it has been rendered.\r\n            ":"\r\n            通知其已渲染的组件。\r\n            \r\n","The main class's name (for stand-alone applications).":"主类的名称（用于独立应用程序）。\r\n","Log a message, specifying source class, method, and resource bundle name,\n            with a single object parameter to the log message.":"记录消息，指定源类，方法和资源捆绑名称，\r\n            使用单个对象参数到日志消息。\r\n","shutdown":"关闭\r\n"," if it exists and is an int or\n            can be coerced to an int, or throws otherwise.":" 如果存在并且是int或\r\n            可以将其胁迫到INT，也可以抛弃。\r\n","Returns the total number of bytes remaining in the input buffer.":"返回输入缓冲区中剩余的字节总数。\r\n","Gets a list of all currently registered logger names.":"获取当前所有注册的记录器名称的列表。\r\n","Retrieves and removes the head of the queue represented by this deque\n (in other words, the first element of this deque), waiting if\n necessary until an element becomes available.":"检索并卸下该Deque代表的队列的头部\r\n （换句话说，这是该deque的第一个元素），等待\r\n 需要直到元素可用。\r\n","java.util.logging.FileHandler":"java.util.logging.filehandler\r\n","javax.crypto.KeyAgreement.generateSecret()":"javax.crypto.keyagreement.generatesecret（）\r\n","\r\n            such as ":"\r\n            如\r\n","java.util.concurrent.atomic.AtomicInteger.longValue()":"java.util.concurrent.atomic.atomicinteger.longvalue（）\r\n","java.util.zip.ZipInputStream.createZipEntry(java.lang.String)":"java.util.zip.zipinputstream.createzipentry（java.lang.string）\r\n","Exception thrown by an ":"被一个例外\r\n"," do not specify a valid\n             chunk in the specified buffer.":" 不要指定有效的\r\n             指定的缓冲区中的块。\r\n","\r\n            If true, SignIn should throw if attempted with a ClaimsPrincipal.Identity.IsAuthenticated = false.\r\n            ":"\r\n            如果是正确的话，如果尝试使用Simplincipal.indentity.isauthenticated = false，则应投掷Signin。\r\n            \r\n","Associates a string representing the specified long value with the\n            specified key in this preference node.":"关联一个代表指定长值的字符串与\r\n            在此偏好节点中指定键。\r\n","#asWriteLock()":"#aswritelock（）\r\n","\r\n            The display name for the scheme being built.\r\n            ":"\r\n            构建计划的显示名称。\r\n            \r\n"," if the request uses a safe HTTP\r\n            method or contains a valid antiforgery token, otherwise returns ":" 如果请求使用安全的http\r\n            方法或包含有效的抗管剂令牌，否则返回\r\n","\r\n            code_challenge defined in https://tools.ietf.org/html/rfc7636\r\n            ":"\r\n            https://tools.ietf.org/html/rfc7636中定义的Code_challenge\r\n            \r\n","The tunnelling type of a route.":"路线的隧道类型。\r\n","Set the value of a feature.":"设置功能的值。\r\n","Filter an ignorable whitespace event.":"过滤一个可忽略的空格事件。\r\n"," with nonfair access policy.":" 使用非媒体访问政策。\r\n","org.w3c.dom.NameList":"org.w3c.dom.namelist\r\n","\r\n            Value.\r\n            ":"\r\n            价值。\r\n            \r\n","javax.sql.RowSet.setURL(int, java.net.URL)":"javax.sql.Rowset.seturl（int，java.net.url）\r\n","\r\n            The type of the layout. The type must implement ":"\r\n            布局的类型。类型必须实现\r\n","\r\n            Gets or Sets the URI used for the redirect operation.\r\n            ":"\r\n            获取或设置用于重定向操作的URI。\r\n            \r\n","java.util.concurrent.atomic.AtomicMarkableReference.weakCompareAndSet(java.lang.Object, java.lang.Object, boolean, boolean)":"java.util.concurrent.atomic.atomicmarkablereference.weakcompareandset（java.lang.object，java.lang.object，boolean，boolean）\r\n","javax.net.ssl.SSLSocketFactory.getDefaultCipherSuites()":"javax.net.ssl.sslsocketfactory.getDefaultCiphersuites（）\r\n","if the specified parameters cannot be used to initialize this\n             algorithm.\n":"如果指定参数不能用于初始化此\r\n             算法。\r\n\r\n","\r\n            Set a bool value in the ":"\r\n            在\r\n","java.util.regex.PatternSyntaxException":"java.util.regex.patternsyntaxexception\r\n","Returns actual ":"返回实际\r\n","Object#notifyAll notifyAll":"对象＃notifyall notifyall\r\n","Receive notification of an unparsed entity declaration event.":"接收无与伦比的实体声明事件的通知。\r\n","Constructs an exception reporting an error found by\n            an SSL subsystem during handshaking.":"构建一个例外报告，报告了一个错误\r\n            握手期间的SSL子系统。\r\n","Generates a <code>SecretKey</code> object from the\n            provided key specification (key material).":"从\r\n            提供了关键规格（关键材料）。\r\n","LSParserFilter":"LSPARSERFILTER\r\n","\r\n            Generates a request token corresponding to ":"\r\n            生成对应于\r\n","java.util.jar.Attributes.putValue(java.lang.String, java.lang.String)":"java.util.jar.attributes.putvalue（java.lang.string，java.lang.string）\r\n","Return the current error handler.":"返回当前错误处理程序。\r\n","A synchronizer that may be exclusively owned by a thread.":"可能仅由线程拥有的同步器。\r\n"," value represents any port.":" 值代表任何端口。\r\n","java.util.concurrent.atomic.LongAccumulator.getThenReset()":"java.util.concurrent.atomic.longaccumulator.getthenreset（）\r\n","org.xml.sax.helpers.ParserAdapter.ParserAdapter(org.xml.sax.Parser)":"org.xml.sax.helpers.parseradapter.parseradapter（org.xml.sax.parser）\r\n","java.util.concurrent.atomic.AtomicReferenceArray.lazySet(int, java.lang.Object)":"java.util.concurrent.atomic.atomicreferencearray.lazyset（int，java.lang.object）\r\n","if the specified cipher is a block cipher and the length of\n             the serialized data is not a multiple of the ciphers block\n             size.":"如果指定的密码是一个块密码，则\r\n             序列化数据不是密码块的倍数\r\n             尺寸。\r\n","javax.sql.RowSet.setDate(int, java.sql.Date)":"javax.sql.Rowset.setDate（int，java.sql.date）\r\n","Acquires the write lock if it is not held by another thread\n within the given waiting time and the current thread has\n not been ":"如果不持有另一个线程，则获取写锁\r\n 在给定的等待时间内，当前线程具有\r\n 不是\r\n","\r\n            Gets the sequence number of the frame. Sequence numbers indicate the relative source\r\n            positions of the instructions that inserted the frames. Sequence numbers are only\r\n            comparable within the same sequence (typically, the same source method).\r\n            ":"\r\n            获取框架的序列编号。序列数表示相对源\r\n            插入框架的说明的位置。序列号仅\r\n            在同一序列中可比（通常是相同的源方法）。\r\n            \r\n","s provide applications the ability to examine\n nodes as they are being constructed while parsing.":"s提供了检查功能\r\n 节点在解析时被构造。\r\n","Static constant for a 420 error.":"420误差的静态常数。\r\n",", from which a\n ":"，从中\r\n \r\n","org.xmlpull.v1.XmlPullParser.FEATURE_PROCESS_DOCDECL":"org.xmlpull.v1.xmlpullparser.feature_process_docdecl\r\n","\r\n            Returns the scheme that will be used by default for ":"\r\n            返回将默认使用的方案\r\n"," is called. It not required that the caller supply a parameter\r\n            value for all parameters that are logically understood by the component.\r\n            ":" 叫做。不需要呼叫者提供参数\r\n            组件上逻辑上理解的所有参数的值。\r\n            \r\n","The node this locator is pointing to, or ":"该定位器指向的节点，或\r\n","Determines the index of the next header.":"确定下一个标头的索引。\r\n","Resets this <code>Mac</code> object.":"重置此<code> Mac </code>对象。\r\n","javax.crypto.ExemptionMechanismException":"javax.crypto.ExemptionMechanismException\r\n","Constant used to initialize cipher to key-wrapping mode.":"常数用于将密码初始化为键包编排模式。\r\n","Objects such as credentials may optionally implement this interface\n            to provide the capability to destroy its contents.":"凭证之类的对象可以选择实现此接口\r\n            提供破坏其内容的能力。\r\n","NOT_SUPPORTED_ERR: if this node is of type ":"not_supported_err：如果此节点为类型\r\n","This class was removed from JAXP 1.":"该课程从JAXP 1中删除。\r\n","javax.sql.StatementEvent.StatementEvent(javax.sql.PooledConnection, java.sql.PreparedStatement, java.sql.SQLException)":"javax.sql.StatementEvent.StatementEvent（javax.sql.pooledconnection，java.sql.sql.preparedstatement，java.sql.sqlexception）\r\n","Returns the numbers of elements in the namespace stack for the given\n            depth.":"返回给定的名称空间堆栈中的元素数量\r\n            深度。\r\n","If any SAX errors occur during processing.\n":"如果处理过程中发生任何萨克斯错误。\r\n\r\n",", each of one or more data types.\r\n            For more information about drag and drop, see HTML Drag and Drop API.\r\n            ":"，一种或多种数据类型。\r\n            有关拖放的更多信息，请参见HTML拖放API。\r\n            \r\n","org.xmlpull.v1.XmlSerializer.flush()":"org.xmlpull.v1.xmlserializer.flush（）\r\n","java.util.concurrent.Semaphore.availablePermits()":"java.util.concurrent.semaphore.availablepermits（）\r\n","Remove a range of 16-bit units from the node.":"从节点中删除16位单元的范围。\r\n","Returns whether this node (if it is an element) has any attributes.":"返回该节点（如果是元素）是否具有任何属性。\r\n","org.w3c.dom.UserDataHandler.handle(short, java.lang.String, java.lang.Object, org.w3c.dom.Node, org.w3c.dom.Node)":"org.w3c.dom.userdatahandler.handle（简短，java.lang.string，java.lang.object，org.w3c.dom.node，org.w3c.dom.node）\r\n","org.xml.sax.helpers.NamespaceSupport":"org.xml.sax.helpers.namespacesupport\r\n","org.w3c.dom.DOMLocator":"org.w3c.dom.domlocator\r\n","es.":"es。\r\n","javax.xml.xpath.XPathException.XPathException(java.lang.String)":"javax.xml.xpath.xpathexception.xpathexception（java.lang.string）\r\n","The character data of the node that implements this interface.":"实现该接口的节点的字符数据。\r\n","Type-safe enum class that represents six fields\n of the ":"代表六个字段的类型安全枚举类\r\n 的\r\n","on a null argument":"关于无效的论点\r\n"," which\r\n            contains a name.\r\n            ":" 哪个\r\n            包含一个名称。\r\n            \r\n"," for this request.\r\n            ":" 为此请求。\r\n            \r\n","java.util.logging.Logger.getHandlers()":"java.util.logging.logger.gethandlers（）\r\n","javax.crypto.Cipher.getOutputSize(int)":"javax.crypto.cipher.getOutputsize（int）\r\n","java.util.concurrent.atomic.AtomicLong.getAndUpdate(java.util.function.LongUnaryOperator)":"java.util.concurrent.atomic.atomiclong.getandupdate（java.util.function.longunaryoperator）\r\n","Encapsulate Namespace logic for use by applications using SAX,\n            or internally by SAX drivers.":"封装使用sax的应用程序使用的名称空间逻辑，\r\n            或内部由萨克斯司机。\r\n","Returns the key associated with the given alias.":"返回与给定别名相关的密钥。\r\n","\r\n            Gets or sets the default authorization policy. Defaults to require authenticated users.\r\n            ":"\r\n            获取或设置默认授权策略。默认值需要身份验证的用户。\r\n            \r\n","\r\n            Gets or sets the provider-assigned client secret.\r\n            ":"\r\n            获取或设置提供者分配的客户秘密。\r\n            \r\n","java.util.logging.Level.Level(java.lang.String, int, java.lang.String)":"java.util.logging.level.level（java.lang.string，int，java.lang.string）\r\n","Look up the namespace URI associated to the given prefix, starting from\n            this node.":"查找与给定前缀关联的名称空间URI，从\r\n            这个节点。\r\n","Executes the given tasks, returning a list of Futures holding\n            their status and results\n            when all complete or the timeout expires, whichever happens first.":"执行给定的任务，返回持有的期货清单\r\n            他们的状态和结果\r\n            全部完成或超时到期时，以先到者为准。\r\n","java.util.concurrent.atomic.AtomicLongFieldUpdater.updateAndGet(java.lang.Object, java.util.function.LongUnaryOperator)":"java.util.concurrent.atomic.atomiclongfieldupdater.updateandget（java.lang.object，java.util.function.longunaryoperator）\r\n","Updates the checksum with the specified array of bytes.":"使用指定的字节数组更新校验和。\r\n","org.w3c.dom.DOMException.SYNTAX_ERR":"org.w3c.dom.domexception.syntax_err\r\n","Determines whether Nagle's algorithm is to be used.":"确定是否要使用Nagle的算法。\r\n","javax.sql.RowSetMetaData.setCatalogName(int, java.lang.String)":"javax.sql.RowsetMetadata.setCataLogname（int，java.lang.string）\r\n","org.apache.http.params.HttpParams.isParameterTrue(java.lang.String)":"org.apache.http.params.httpparams.isparametertrue（java.lang.string）\r\n","org.w3c.dom.Node.isDefaultNamespace(java.lang.String)":"org.w3c.dom.node.isdefaultnamespace（java.lang.string）\r\n","if the underlying stream is corrupted or was not compressed\n             using a ":"如果下层流被损坏或没有压缩\r\n             用一个\r\n","Preferences#putFloat(String,float)":"首选项＃putfloat（字符串，float）\r\n","Allow an application to register a document event handler.":"允许应用程序注册文档事件处理程序。\r\n","java.util.zip.GZIPOutputStream.GZIPOutputStream(java.io.OutputStream, boolean)":"java.util.zip.gzipoutputstream.gzipoutputstream（java.io.outputstream，boolean）\r\n","org.w3c.dom.Element.setAttributeNS(java.lang.String, java.lang.String, java.lang.String)":"org.w3c.dom.element.setAttributens（java.lang.string，java.lang.string，java.lang.string）\r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            with a Java <code>Object</code>.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            使用Java <code>对象</code>。\r\n","Creates a new watcher for auto-releasing a connection.":"创建一个新的观察器，用于自动释放连接。\r\n","javax.xml.parsers.ParserConfigurationException.ParserConfigurationException(java.lang.String)":"javax.xml.parsers.parserconfigurationException.parsercoConfigurationException（java.lang.string）\r\n","java.util.stream.Collector.supplier()":"java.util.stream.collector.supplier（）\r\n"," object\n            to build a DOM tree with.":" 目的\r\n            用。\r\n","Updates the CRC-32 checksum with the specified array of bytes.":"使用指定的字节数组更新CRC-32校验和。\r\n","org.xml.sax.helpers.AttributesImpl.getLocalName(int)":"org.xml.sax.helpers.attributesimpl.getLocalname（int）\r\n","Returns the session that triggered this event.":"返回触发此事件的会话。\r\n","the file that will not be compressed.":"不会压缩的文件。\r\n","Returns the algorithm name of this <code>Mac</code> object.":"返回此<code> Mac </code>对象的算法名称。\r\n","java.util.concurrent.atomic.LongAccumulator.intValue()":"java.util.concurrent.atomic.longaccumulator.intvalue（）\r\n","\r\n            Provides options for configuring Server-Side Blazor.\r\n            ":"\r\n            提供了配置服务器端外壳的选项。\r\n            \r\n","Moves the longest-waiting thread, if one exists, from the\n wait queue for this condition to the wait queue for the\n owning lock.":"移动最长的等待线程，如果存在的话\r\n 等待这个条件到等待队列\r\n 拥有锁。\r\n","javax.net.ssl.SSLContext.getServerSocketFactory()":"javax.net.ssl.sslcontext.getServersocketFactory（）\r\n","Report the end of a CDATA section.":"报告CDATA部分的结尾。\r\n","org.w3c.dom.Node.appendChild(org.w3c.dom.Node)":"org.w3c.dom.node.appendchild（org.w3c.dom.node）\r\n","org.xml.sax.ext.Attributes2.isSpecified(java.lang.String, java.lang.String)":"org.xml.sax.ext.attributes2.isspecified（java.lang.string，java.lang.string）\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.owns(java.util.concurrent.locks.ConditionObject)":"java.util.concurrent.locks.abstractqueuedsynchronizer.OUNTS（java.util.concurrent.locks.conditionObject）\r\n","java.util.function.DoublePredicate":"java.util.function.doublepredicate\r\n","Atomically sets to the given value and returns the old value.":"原子上设置为给定值并返回旧值。\r\n","Marks this connection as being in a reusable communication state.":"将这种连接标记为处于可重复使用的通信状态。\r\n","Translates a key object, whose provider may be unknown or\n            potentially untrusted, into a corresponding key object of this\n            secret-key factory.":"翻译一个关键对象，其提供者可能未知或\r\n            潜在的不受信任，成为相应的关键对象\r\n            秘密工厂。\r\n"," is used as a fallback value.\r\n            ":" 被用作后退值。\r\n            \r\n","java.util.concurrent.locks.ReentrantReadWriteLock.hasQueuedThread(java.lang.Thread)":"java.util.concurrent.locks.reentrantreadwritelock.hasqueuedthread（java.lang.thread）\r\n","java.util.function.DoubleConsumer.accept(double)":"java.util.function.doubleconsumer.accept（double）\r\n","javax.xml.transform.sax.SAXSource.getInputSource()":"javax.xml.transform.sax.saxsource.getInputsource（）\r\n","java.util.zip.GZIPInputStream.eos":"java.util.zip.gzipinputstream.eos\r\n","Create an <code>XMLGregorianCalendar</code> from a ":"从一个\r\n"," to write to a set of files\n            with optional append.":" 写入一组文件\r\n            带有可选的附加。\r\n","\r\n            Gets the content to be rendered inside the layout.\r\n            ":"\r\n            获取要在布局内渲染的内容。\r\n            \r\n","java.util.concurrent.locks.ReentrantLock.getWaitQueueLength(java.util.concurrent.locks.Condition)":"java.util.concurrent.locks.reentrantlock.getwaitqueuelgenth（java.util.concurrent.locks.condition）\r\n","javax.sql.ConnectionPoolDataSource":"javax.sql.connectionpooldatasource\r\n","-valued operands and producing a\n            ":" - 价值操作数并生产\r\n            \r\n","javax.net.ssl.SSLEngineResult.SSLEngineResult(javax.net.ssl.Status, javax.net.ssl.HandshakeStatus, int, int)":"javax.net.ssl.sslengineresult.sslengineresult（javax.net.ssl.status，javax.net.net.ssl.handshakestatus，int，int）\r\n","A constant that represents the months field.":"代表月份字段的常数。\r\n","Basic implementation for parsing header values into elements.":"将标头值分解为元素的基本实现。\r\n","Method to find a named logger.":"找到命名记录器的方法。\r\n","Creates a new ZIP output stream.":"创建一个新的ZIP输出流。\r\n","Checks if a boolean parameter is not set or ":"检查是否未设置布尔参数或\r\n","org.xmlpull.v1.XmlPullParser.getAttributeValue(java.lang.String, java.lang.String)":"org.xmlpull.v1.xmlpullparser.getAttributeValue（java.lang.string，java.lang.string）\r\n","\r\n            If the LogoutPath is provided the handler then a request to that path will redirect based on the ReturnUrlParameter.\r\n            ":"\r\n            如果提供了Logoutpath，则处理程序，则该路径的请求将基于ReTurnUrlParameter重定向。\r\n            \r\n","Obtains the local address to connect from.":"获取要连接的本地地址。\r\n","if this cipher instance can not wrap this key.":"如果此密码实例无法包装此密钥。\r\n","\r\n            Gets or sets the parameter name that will be used to flow the return URL.\r\n            By default, this property is set to ":"\r\n            获取或设置将用于流返回URL的参数名称。\r\n            默认情况下，此属性设置为\r\n","Get the public identifier for this input source. -or- Set the public identifier for this input source.":"获取此输入源的公共标识符。 - 或 - 设置此输入源的公共标识符。\r\n","java.util.prefs.AbstractPreferences.removeNode()":"java.util.prefs.abstractpreferences.removenode（）\r\n","org.w3c.dom.DOMError.SEVERITY_FATAL_ERROR":"org.w3c.dom.domerror.severity_fatal_error\r\n","Constant indicating that the key to be unwrapped is a secret key.":"不断表明要解开的钥匙是秘密键。\r\n","javax.xml.validation.ValidatorHandler.getFeature(java.lang.String)":"javax.xml.validation.validatorhandler.getFeature（java.lang.string）\r\n","Obtains the next header element from this iteration.":"从此迭代中获取下一个标头元素。\r\n","Step: open connection to proxy.":"步骤：与代理打开连接。\r\n","Starts an SSL handshake on this connection.":"在此连接上启动SSL握手。\r\n","Checks if a field is set.":"检查是否设置了字段。\r\n","Compression method for compressed (DEFLATED) entries.":"压缩方法（放气）条目。\r\n","java.util.logging.MemoryHandler.setPushLevel(java.util.logging.Level)":"java.util.logging.memoryhandler.setpushlevel（java.util.logging.Level）\r\n","Look up an attribute's type by Namespace name.":"通过名称名称查找属性的类型。\r\n","org.w3c.dom.ls.LSParser.abort()":"org.w3c.dom.ls.lsparser.abort（）\r\n","If a SAX error occurs during parsing.":"如果在解析过程中发生萨克斯错误。\r\n","An object that implements this interface is the runtime representation of processed\n            transformation instructions.":"实现此接口的对象是处理的运行时表示\r\n            转换说明。\r\n","java.util.concurrent.CompletionStage.thenAcceptBothAsync(java.util.concurrent.CompletionStage, java.util.function.BiConsumer)":"java.util.concurrent.completionstage.thenacceptbothasync（java.util.concurrent.completionstage，java.util.function.biconsumer）\r\n","java.util.concurrent.SynchronousQueue.iterator()":"java.util.concurrent.synchronousqueue.iterator（）\r\n","java.util.concurrent.ExecutorService.invokeAny(java.util.Collection, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.executorservice.invokeany（java.util.collection，long，java.util.concurrent.timeunit）\r\n","INVALID_CHARACTER_ERR: Raised if the specified prefix contains an\n   illegal character according to the XML version in use specified in\n   the ":"Invalid_character_err：如果指定的前缀包含一个\r\n   根据在使用中指定的XML版本的非法字符\r\n   这\r\n","java.util.concurrent.ScheduledThreadPoolExecutor.getExecuteExistingDelayedTasksAfterShutdownPolicy()":"java.util.concurrent.scheduledthreadpoolexecutor.getExecuteexistingDeleRayedTasksaftershutdownpolicy（）\r\n"," that\n            counts the number of input elements.":" 那\r\n            计算输入元素的数量。\r\n","SNIServerName":"Sniservername\r\n","java.util.zip.CRC32.update(byte[])":"java.util.zip.crc32.update（byte []）\r\n","Returns a collection containing threads that may be waiting to\n            acquire either the read or write lock.":"返回包含可能正在等待的线程的集合\r\n            获取读取或写锁。\r\n","Returns the namespace prefix for the given position\n            in the namespace stack.":"返回给定位置的名称空间前缀\r\n            在名称空间堆栈中。\r\n","\r\n            The request.\r\n            ":"\r\n            请求。\r\n            \r\n","Creates a new output stream with a default buffer size.":"创建具有默认缓冲区大小的新输出流。\r\n"," whose keys and values are the result of applying the provided\n            mapping functions to the input elements.":" 其钥匙和值是应用提供的结果\r\n            将功能映射到输入元素。\r\n","Abstract class that provides for extension of the X509KeyManager\n            interface.":"提供X509KeyManager扩展的抽象类\r\n            界面。\r\n","org.xml.sax.HandlerBase.processingInstruction(java.lang.String, java.lang.String)":"org.xml.sax.handlerbase.ProcessingInstruction（java.lang.string，java.lang.string）\r\n","java.util.function.ToIntFunction.applyAsInt(java.lang.Object)":"java.util.function.tointfunction.applyasint（java.lang.Object）\r\n","Returns a new CompletionStage that, when this and the other\n            given stage both complete normally, is executed using this\n            stage's default asynchronous execution facility, with the two\n            results as arguments to the supplied action.":"返回一个新的完整舞台，当\r\n            给定阶段正常完成，使用此\r\n            舞台的默认异步执行设施，两者\r\n            结果作为所提供的行动的论点。\r\n","301 Moved Permanently":"301永久移动\r\n","Constructs a new <code>NodeChangeEvent</code> instance.":"构造新的<code> NodeChangeEvent </code>实例。\r\n"," types.\r\n            ":" 类型。\r\n            \r\n","Creates a new <code>JarEntry</code> with fields taken from the\n            specified <code>JarEntry</code> object.":"创建一个新的<code> Jarentry </code>，并从中获取字段\r\n            指定<code> Jarentry </code>对象。\r\n","java.util.concurrent.atomic.AtomicBoolean":"java.util.concurrent.atomic.atomicboolean\r\n"," that concatenates the input elements,\n            separated by the specified delimiter, in encounter order.":" 这会加入输入元素，\r\n            在遭遇顺序中由指定的定界符分开。\r\n","java.util.concurrent.atomic.AtomicIntegerArray.compareAndSet(int, int, int)":"java.util.concurrent.atomic.atomicintegerarray.compareandset（int，int，int）\r\n","java.util.concurrent.LinkedBlockingDeque.size()":"java.util.concurrent.linkedblockingdeque.size（）\r\n","java.util.regex.Pattern.COMMENTS":"java.util.regex.pattern.com\r\n","\r\n            Sets the supplied value at the specified index. The index must be within\r\n            range for the array.\r\n            ":"\r\n            将提供的值设置为指定索引。索引必须在内\r\n            阵列的范围。\r\n            \r\n","org.json.JSONObject.getString(java.lang.String)":"org.json.jsonobject.getString（java.lang.string）\r\n"," structure.\r\n            ":" 结构体。\r\n            \r\n","org.apache.http.conn.ConnectTimeoutException":"org.apache.http.conn.connecttimeoutexception\r\n","\r\n            A value indicating whether the element is a value type.\r\n            ":"\r\n            指示该元素是否为值类型的值。\r\n            \r\n","If for some reason the\n TransformerHandler cannot be created.\n":"如果出于某种原因\r\n 无法创建TransformerHandler。\r\n\r\n","javax.net.ssl.SSLEngine.getSSLParameters()":"javax.net.ssl.sslengine.getsslparameters（）\r\n","\r\n            The default policy used when evaluating ":"\r\n            评估时使用的默认策略\r\n","javax.xml.parsers.SAXParser.parse(java.io.File, org.xml.sax.helpers.DefaultHandler)":"javax.xml.parsers.saxparser.parse（java.io.file，org.xml.sax.helpers.defaulthandler）\r\n","Returns the parameters effective for this message as set by\n ":"返回对此消息有效的参数\r\n \r\n","javax.sql.PooledConnection.removeConnectionEventListener(javax.sql.ConnectionEventListener)":"javax.sql.pooledconnection.removeconnectionEventListener（javax.sql.ConnectionEventListListener）\r\n","\r\n            The default value used by CookieAuthenticationMiddleware for the\r\n            CookieAuthenticationOptions.AccessDeniedPath\r\n            ":"\r\n            cookiuthenticationmiddleware使用的默认值\r\n            cookieAthenticationOptions.AccessDeniedPath\r\n            \r\n","java.util.concurrent.atomic.DoubleAdder":"java.util.concurrent.atomic.doubleadder\r\n","Registers the given event listener so that it will be notified\n            when an event occurs on this <code>PooledConnection</code> object.":"注册给定的事件侦听器，以便将其通知\r\n            当此事件发生在此<code> poolconnection </code>对象上时。\r\n","Compression method for the deflate algorithm (the only one currently\n            supported).":"放气算法的压缩方法（当前唯一一种\r\n            支持的）。\r\n","Represents a function that accepts two arguments and produces a result.":"代表一个接受两个参数并产生结果的函数。\r\n","org.json.JSONArray.JSONArray(org.json.JSONTokener)":"org.json.jsonarray.jsonarray（org.json.jsontokener）\r\n","Receive notification of a warning.":"收到警告通知。\r\n","java.util.regex.Matcher.start(int)":"java.util.regex.matcher.start（int）\r\n","DOCUMENT":"文档\r\n","javax.xml.xpath.XPathFunctionResolver":"javax.xml.xpath.xpathFunctionResolver\r\n","Obtains the Content-Type header, if known.":"如果已知，则获得内容型标头。\r\n","if the condition is null\n":"如果条件为无效\r\n\r\n","if the specified key cannot be used to initialize this key\n             agreement.":"如果指定的键不能用于初始化此密钥\r\n             协议。\r\n","\r\n            Creates a new instance of ":"\r\n            创建一个新实例\r\n","300 Mutliple Choices":"300个mutliple选择\r\n"," with the\n            given core pool size.":" 与\r\n            给定核心池尺寸。\r\n","Returns true if this is a directory entry.":"如果这是目录条目，则返回true。\r\n","org.w3c.dom.DOMImplementation.getFeature(java.lang.String, java.lang.String)":"org.w3c.dom.domimplementation.getFeature（java.lang.string，java.lang.string）\r\n","Default implementation for AttributeList.":"attributelist的默认实现。\r\n","BlockingQueue":"阻塞\r\n","Destroy this ":"摧毁这个\r\n","javax.net.ServerSocketFactory.getDefault()":"javax.net.serversocketFactory.getDefault（）\r\n","If the feature is not supported or can not be set\n":"如果不支持该功能或无法设置该功能\r\n\r\n","java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndIncrement(java.lang.Object)":"java.util.concurrent.atomic.atomiclongfieldupdater.getandincrement（java.lang.object）\r\n","if the length of the key data starting at offset is less than\n             8, or it is null.\n":"如果从偏移量开始的关键数据的长度小于\r\n             8，否则为空。\r\n\r\n","The AuthenticationTokenProvider's required synchronous events have not been registered.":"尚未注册AuthenticationTokenProvider所需的同步事件。\r\n","java.util.concurrent.atomic.AtomicMarkableReference.getReference()":"java.util.concurrent.atomic.atomicmarkablereference.getReference（）\r\n","org.json.JSONArray.put(int)":"org.json.jsonarray.put（int）\r\n"," against.\r\n            ":" 反对。\r\n            \r\n","Sets the number of columns in the <code>RowSet</code> object to\n            the given number.":"将<code> Rowset中的列数设置为</code>对象\r\n            给定的数字。\r\n","Basic interface for SAX error handlers.":"SAX错误处理程序的基本接口。\r\n","org.w3c.dom.ls.DOMImplementationLS.MODE_ASYNCHRONOUS":"org.w3c.dom.ls.domimplementationls.mode_asynchronous\r\n","Parse the content of the given <code>InputStream</code> as an\n            XML document and return a new DOM ":"解析给定<code> inputstream </code>的内容\r\n            XML文档并返回新的DOM\r\n","java.util.regex.Matcher.matches()":"java.util.regex.matcher.matches（）\r\n","javax.net.ssl.SSLContext":"javax.net.ssl.sslcontext\r\n","javax.xml.validation.Validator":"javax.xml.Validation.Validator\r\n","javax.xml.parsers.SAXParserFactory.getFeature(java.lang.String)":"javax.xml.parsers.saxparserfactory.getFeature（java.lang.string）\r\n","Creates a SecretKeyFactory object.":"创建一个SecretKeyFactory对象。\r\n"," immediately after appending the\r\n            new element's child frames.\r\n            ":" 在附加后立即\r\n            新元素的子框架。\r\n            \r\n","Streaming validator that works on SAX stream.":"在SAX流上工作的流验证器。\r\n","#flush()":"#flush（）\r\n"," is not an XML name according to the XML\n   version in use specified in the ":" 根据XML不是XML名称\r\n   在使用中指定的版本\r\n","\r\n            Format a list of OAuth scopes.\r\n            ":"\r\n            格式化oauth范围列表。\r\n            \r\n","Reset this <code>SAXParser</code> to its original configuration.":"将此<code> saxparser </code>重置为其原始配置。\r\n","org.xml.sax.helpers.XMLFilterImpl.startPrefixMapping(java.lang.String, java.lang.String)":"org.xml.sax.helpers.xmlfilterimpl.startprefixmapping（java.lang.string，java.lang.string）\r\n","\r\n            A bound event handler delegate.\r\n            ":"\r\n            绑定的事件处理程序代表。\r\n            \r\n","\r\n            Schedules a render for the specified ":"\r\n            安排指定的渲染\r\n","Opens a zip file for reading.":"打开一个ZIP文件供阅读。\r\n","Returns the socket which is the source of this event.":"返回插座，这是此事件的来源。\r\n","org.xml.sax.helpers.LocatorImpl.getPublicId()":"org.xml.sax.helpers.locatorimpl.getPublicid（）\r\n","javax.xml.validation.SchemaFactory":"javax.xml.Validation.schemafactory\r\n","Returns true if the current event is START_TAG and the tag\n is degenerated\n (e.g. <foobar/>).":"如果当前事件为start_tag，则返回true\r\n 退化\r\n （例如<foobar/>）。\r\n","javax.net.ssl.SSLContext.getServerSessionContext()":"javax.net.ssl.sslcontext.getServersessessessessextContext（）\r\n","Sets preset dictionary for compression.":"设置预设词典以进行压缩。\r\n","Test if a string is part of this <code>DOMStringList</code>.":"测试字符串是否是此<code> domstringList </code>的一部分。\r\n","Creates an <code>EntityReference</code> object.":"创建<code> EntityReference </code>对象。\r\n","javax.crypto.spec.DESedeKeySpec.isParityAdjusted(byte[], int)":"javax.crypto.spec.desedekeyspec.isparityadjusted（byte []，int）\r\n","java.util.function.LongConsumer":"java.util.function.longconsumer\r\n","Look up an attribute's index by Namespace name.":"通过名称名称查找属性的索引。\r\n","org.xml.sax.SAXNotSupportedException.SAXNotSupportedException(java.lang.String)":"org.xml.sax.saxnotsupportedexception.saxnotsupportedException（java.lang.string）\r\n"," is asynchronous,\n ":" 是异步的，\r\n \r\n"," object specified through\n            the ":" 指定的对象\r\n            这\r\n","This class represents a collection of HTTP protocol parameters.":"该类代表HTTP协议参数的集合。\r\n","\r\n            Appends a new item, automatically resizing the underlying array if necessary.\r\n            ":"\r\n            附加新项目，如果需要，将自动调整基础数组。\r\n            \r\n","javax.crypto.KeyGenerator":"javax.crypto.keygenerator\r\n","Returns this pattern's match flags.":"返回此模式的匹配标志。\r\n","\r\n            A collection of claim actions used to select values from the json user data and create Claims.\r\n            ":"\r\n            索赔操作的集合，用于从JSON用户数据中选择值并创建索赔。\r\n            \r\n","java.util.concurrent.atomic.AtomicReference.accumulateAndGet(java.lang.Object, java.util.function.BinaryOperator)":"java.util.concurrent.atomic.atomicreference.accumulateandget（java.lang.object，java.util.function.binaryoperator）\r\n","java.util.zip.ZipFile.ZipFile(java.io.File, int)":"java.util.zip.zipfile.zipfile（java.io.file，int）\r\n","Thrown to indicate that an operation could not complete because\n            the input did not conform to the appropriate XML document type\n            for a collection of preferences, as per the ":"投掷以表明操作无法完成，因为\r\n            输入不符合适当的XML文档类型\r\n            对于偏好的集合\r\n","  that supplies a value with a compatible\r\n             type.\r\n             ":"  提供一个兼容的价值\r\n             类型。\r\n             \r\n","Returns a copy of the password.":"返回密码的副本。\r\n","in case of a timeout":"如果超时\r\n","java.util.concurrent.ThreadPoolExecutor.setThreadFactory(java.util.concurrent.ThreadFactory)":"java.util.concurrent.threadpoolexecutor.setThreadFactory（java.util.concurrent.threadfactory）\r\n","java.util.concurrent.locks.ReentrantReadWriteLock.getWriteHoldCount()":"java.util.concurrent.locks.reentrantreadwritelock.getWriteHoldCount（）\r\n","Clears the main Attributes as well as the entries in this Manifest.":"清除此清单中的主要属性以及条目。\r\n","permits":"许可\r\n","the format of a method attribute name.":"方法属性名称的格式。\r\n","javax.crypto.KeyGenerator.getInstance(java.lang.String, java.security.Provider)":"javax.crypto.keygenerator.getInstance（java.lang.string，java.security.provider）\r\n","If the schema language doesn't support this operation.\n":"如果模式语言不支持此操作。\r\n\r\n","\r\n            Invoked when an access denied error was returned by the remote server.\r\n            ":"\r\n            远程服务器返回访问拒绝错误时调用。\r\n            \r\n","if the value doesn't exist or is not a ":"如果值不存在或不存在\r\n","Returns the start index of the match.":"返回比赛的开始索引。\r\n","javax.crypto.spec.RC2ParameterSpec.RC2ParameterSpec(int, byte[], int)":"javax.crypto.spec.rc2parameterspec.rc2parameterspec（int，byte []，int）\r\n","javax.crypto.spec.SecretKeySpec.getEncoded()":"javax.crypto.spec.secretkeyspec.getencoded（）\r\n","java.util.concurrent.ThreadPoolExecutor.getPoolSize()":"java.util.concurrent.threadpoolexecutor.getpoolsize（）\r\n"," which performs a reduction of its\n            input elements under a specified mapping function and\n            ":" 降低了它的\r\n            指定映射功能下的输入元素和\r\n            \r\n","Returns the number of bytes transferred over the connection, \n 0 if not available.":"返回通过连接传输的字节数，\r\n 0如果不可用。\r\n","javax.net.ssl.SSLSocket.getEnabledCipherSuites()":"javax.net.ssl.sslsocket.getenabledciphersuites（）\r\n","javax.xml.transform.sax.SAXResult.setLexicalHandler(org.xml.sax.ext.LexicalHandler)":"javax.xml.transform.sax.saxresult.setlexicalhandler（org.xml.sax.ext.ext.lexicalHandler）\r\n","Whether to keep the connection alive.":"是否要保持连接。\r\n","org.xml.sax.ContentHandler.startPrefixMapping(java.lang.String, java.lang.String)":"org.xml.sax.contenthandler.startprefixmapping（java.lang.string，java.lang.string）\r\n","org.w3c.dom.CharacterData.deleteData(int, int)":"org.w3c.dom.characterdata.deletedata（int，int）\r\n","Returns the list of cipher suites which are currently enabled\n            for use by newly accepted connections.":"返回当前启用的密码套件列表\r\n            用于新接受的连接。\r\n","\r\n            Indicates that the markup content of the specified frame (which must be a markup frame)\r\n            should be updated.\r\n            ":"\r\n            表示指定帧的标记内容（必须是标记帧）\r\n            应该更新。\r\n            \r\n","An <code>Event</code> object generated when an event occurs to a\n            <code>RowSet</code> object.":"<code>事件</code>当事件发生到一个事件时生成的对象\r\n            <code> Rowset </code>对象。\r\n","Creates a server socket factory.":"创建服务器套接字工厂。\r\n","javax.net.ssl.SNIHostName.getAsciiName()":"javax.net.ssl.snihostname.getasciiname（）\r\n","Returns the size in bits of the random exponent (private value).":"返回随机指数（私有值）的位中的大小。\r\n","\r\n            Constructor.\r\n            ":"\r\n            构造函数。\r\n            \r\n","java.util.zip.DeflaterInputStream.buf":"java.util.zip.deflaterinputstream.buf\r\n","org.json.JSONObject.NULL":"org.json.jsonobject.null\r\n","\r\n            Called to notify listeners of an unhandled exception.\r\n            ":"\r\n            叫通知听众没有任何例外。\r\n            \r\n","Report the start of a CDATA section.":"报告CDATA部分的开始。\r\n","Returns the value of the specified attribute name, specified as\n            a string, or null if the attribute was not found.":"返回指定属性名称的值，指定为\r\n            如果找不到属性，则字符串或null。\r\n","Create a new <code>LSSerializer</code> object.":"创建一个新的<code> lsSerializer </code>对象。\r\n","key weakening":"关键弱化\r\n","javax.xml.validation.Validator.validate(javax.xml.transform.Source)":"javax.xml.Validation.Validator.Validate（javax.xml.transform.source）\r\n"," if it exists and is a boolean or\n            can be coerced to a boolean, or false otherwise.":" 如果存在并且是布尔人或\r\n            可以将其胁迫到布尔值，也可以是错误的。\r\n","If for some reason the\n TransformerHandler can not be created.\n":"如果出于某种原因\r\n 无法创建TransformerHandler。\r\n\r\n","inputLen":"输入\r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            to the given <code>Reader</code>\n            object.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            到给定的<code>阅读器</code>\r\n            目的。\r\n","This feature determines whether the parser processes\n            namespaces.":"此功能确定解析器是否处理\r\n            名称空间。\r\n","Returns an unbound server socket.":"返回未结合的服务器套接字。\r\n","javax.sql.ConnectionEventListener.connectionErrorOccurred(javax.sql.ConnectionEvent)":"javax.sql.connectioneventlistener.connectionErroccurred（javax.sql.connectionevent）\r\n","javax.security.cert.CertificateNotYetValidException":"javax.security.cert.certificatificatenotyetvalidexception\r\n","java.util.jar.Attributes.containsKey(java.lang.Object)":"java.util.jar.attributes.containskey（java.lang.Object）\r\n","\n            with an empty ":"\r\n            用空\r\n","When the\n            parent recognizes the feature name but\n            cannot determine its value at this time.\n":"当。。。的时候\r\n            父母识别功能名称，但是\r\n            目前无法确定其价值。\r\n\r\n","Converts the specified string to a byte array.":"将指定的字符串转换为字节数组。\r\n","When the\n            XMLReader recognizes the property name but\n            cannot determine its value at this time.":"当。。。的时候\r\n            xmlreader识别属性名称，但是\r\n            目前无法确定其价值。\r\n","Get the current filter for this Logger. -or- Set a filter to control output on this Logger.":"获取此记录器的当前过滤器。 - 或 - 设置一个过滤器以控制此记录器上的输出。\r\n"," buffer is too small.\n":" 缓冲区太小。\r\n\r\n","\r\n            Allows derived types to handle exceptions during rendering. Defaults to rethrowing the original exception.\r\n            ":"\r\n            允许派生类型在渲染过程中处理异常。默认会重新缩发原始异常。\r\n            \r\n","\r\n            Signals that some aspect of validation state has changed.\r\n            ":"\r\n            信号表明验证状态的某些方面发生了变化。\r\n            \r\n","java.util.function.DoubleToIntFunction":"java.util.function.doubletointfunction\r\n","CurrentValueAsString":"CurrentValueasString\r\n","\r\n            Forbids the specified authentication scheme.\r\n            ":"禁止指定的身份验证方案。\r\n            \r\n","Create an XMLFilter, based on the Templates argument.":"基于模板参数创建XMLFILTER。\r\n","Returns a sorted map of the properties of this unpacker.":"返回该拆卸器属性的分类地图。\r\n","org.xml.sax.helpers.DefaultHandler.skippedEntity(java.lang.String)":"org.xml.sax.helpers.defaulthandler.skippedentity（java.lang.string）\r\n","javax.net.ssl.TrustManagerFactory.getInstance(java.lang.String)":"javax.net.ssl.trustmanagerfactory.getinstance（java.lang.string）\r\n","java.util.concurrent.Semaphore.release()":"java.util.concurrent.semaphore.release（）\r\n","java.util.function.Supplier.get()":"java.util.function.supplier.get（）\r\n","Log a message, specifying source class and method,\n            with an array of object arguments.":"记录一条消息，指定源类和方法，\r\n            带有一系列对象参数。\r\n","\r\n            Gets or sets a callback that updates the bound value.\r\n            ":"\r\n            获取或设置一个更新界值的回调。\r\n            \r\n","if the certificate chain can't be validated or isn't trusted.":"如果证书链无法验证或不信任证书链。\r\n","org.xml.sax.ext.Locator2Impl.getEncoding()":"org.xml.sax.ext.locator2impl.getencoding（）\r\n","Use a DOM node to create a new output target specifying the child node where the result nodes should be inserted before and\n            the specified System ID.":"使用DOM节点创建一个新的输出目标，以指定子节点在其中应插入结果节点之前和\r\n            指定的系统ID。\r\n","Compiles the given regular expression and attempts to match the given\n            input against it.":"编译给定的正则表达式，并尝试匹配给定的\r\n            反对它的输入。\r\n","This class specifies the set of parameters used for generating\n            Diffie-Hellman (system) parameters for use in Diffie-Hellman key\n            agreement.":"此类指定用于生成的参数集\r\n            Diffie-Hellman（系统）参数用于Diffie-Hellman键\r\n            协议。\r\n","java.util.concurrent.locks.ReentrantLock.isFair()":"java.util.concurrent.locks.reentrantlock.isfair（）\r\n","if the specified algorithm name is ":"如果指定的算法名是\r\n","javax.security.auth.Destroyable.destroy()":"javax.security.auth.destroyable.destroy（）\r\n","\r\n            True if authorization was successful.\r\n            ":"\r\n            如果授权成功，则为真实。\r\n            \r\n","org.xmlpull.v1.XmlPullParser.NO_NAMESPACE":"org.xmlpull.v1.xmlpullparser.no_namespace\r\n","TODO: The name of this method is misnomer.":"Todo：此方法的名称是错误的。\r\n","A request with an entity.":"与实体的请求。\r\n","java.util.concurrent.Delayed.getDelay(java.util.concurrent.TimeUnit)":"java.util.concurrent.delayed.getDelay（java.util.concurrent.timeunit）\r\n","102 Processing":"102处理\r\n","java.util.concurrent.ConcurrentMap.computeIfAbsent(java.lang.Object, java.util.function.Function)":"java.util.concurrent.concurrentmap.computeifabsent（java.lang.object，java.util.function.function.function）\r\n","org.w3c.dom.Document.createComment(java.lang.String)":"org.w3c.dom.document.createcomment（java.lang.string）\r\n","Produces an authorization string for the given set of ":"为给定的一组生成授权字符串\r\n"," has already\n   been used with a different document or was created from a different\n   implementation.\n   ":" 已经\r\n   被与不同的文档一起使用，或者是由不同的\r\n   执行。\r\n   \r\n","This method returns if there is a derivation between the reference type definition, i.e.":"如果参考类型定义（即，即\r\n","The severity of the error described by the <code>DOMError</code> is\n            fatal error.":"<code> domerror </code>描述的错误的严重性是\r\n            致命错误。\r\n","Receives the next response entity available from this connection and\n attaches it to an existing HttpResponse object.":"接收此连接可用的下一个响应实体，\r\n 将其附加到现有的HTTPRESPONSE对象上。\r\n","Constructs a source of the encoding input P for OAEP\n            padding as defined in the PKCS #1 standard using the\n            specified PSource algorithm.":"构建OAEP的编码输入P的来源\r\n            PKCS＃1标准中定义的填充使用\r\n            指定的PSOURCE算法。\r\n","Executes task r in the caller's thread, unless the executor\n has been shut down, in which case the task is discarded.":"除非执行程序\r\n 已关闭，在这种情况下，任务被丢弃。\r\n","org.w3c.dom.Node.isSameNode(org.w3c.dom.Node)":"org.w3c.dom.node.issamenode（org.w3c.dom.node）\r\n","Construct a new formatter.":"构建一个新的格式化器。\r\n","Constructs a new <code>PreferenceChangeEvent</code> instance.":"构造新的<code> preverenceChangeEvent </code>实例。\r\n","javax.xml.XMLConstants.DEFAULT_NS_PREFIX":"javax.xml.xmlconstants.default_ns_prefix\r\n","Returns the identity of the peer which was identified as part\n            of defining the session.":"返回被识别为一部分的对等的身份\r\n            定义会话。\r\n","org.xml.sax.helpers.XMLFilterImpl.getEntityResolver()":"org.xml.sax.helpers.xmlfilterimpl.getentityresolver（）\r\n","org.xml.sax.ext.Locator2Impl.getXMLVersion()":"org.xml.sax.ext.locator2impl.getxmlversion（）\r\n","org.apache.http.params.CoreConnectionPNames.SOCKET_BUFFER_SIZE":"org.apache.http.params.coreconnectionpnames.socket_buffer_size\r\n","Receive notification of a notation declaration.":"收到一份符号声明的通知。\r\n","javax.xml.parsers.SAXParserFactory.SAXParserFactory()":"javax.xml.parsers.saxparserfactory.saxparserfactory（）\r\n","This method gets called when a preference is added, removed or when\n            its value is changed.":"添加，删除或\r\n            它的价值已更改。\r\n","java.util.concurrent.locks.Condition.awaitUntil(java.util.Date)":"java.util.concurrent.locks.condition.awaituntil（java.util.date）\r\n","javax.xml.transform.stream.StreamSource.StreamSource(java.io.Reader)":"javax.xml.transform.stream.streamsource.streamsource（java.io.reader）\r\n","if the specified key cannot be used to initialize this\n             algorithm.\n":"如果指定的键不能用于初始化此\r\n             算法。\r\n\r\n","org.xml.sax.helpers.LocatorImpl.LocatorImpl(org.xml.sax.Locator)":"org.xml.sax.helpers.locatorimpl.locatorimpl（org.xml.sax.locator）\r\n","Creates a new AtomicLong with the given initial value.":"创建一个具有给定初始值的新原子。\r\n","Receive notification of the end of the document.":"收到文档末尾的通知。\r\n","Returns the length in bytes that an output buffer would need to be in\n            order to hold the result of the next\n            ":"返回输出缓冲区需要在的字节中的长度\r\n            为了保留下一个结果\r\n            \r\n","if the IP address of the target host\n          can not be determined":"如果目标主机的IP地址\r\n          无法确定\r\n","javax.security.cert.CertificateException.CertificateException(java.lang.String)":"javax.security.cert.certificateException.certificateException（java.lang.string）\r\n","\r\n            The TicketDataFormat is used to protect and unprotect the identity and other properties which are stored in the\r\n            cookie value. If not provided one will be created using ":"\r\n            ticketdataformat用于保护和拆除存储在该身份和其他属性中\r\n            cookie值。如果未提供，将使用\r\n","KeyManagerFactorySpi":"KeymanagerFactorySpi\r\n","207 Partial Update\n OK":"207部分更新\r\n 好的\r\n"," for valid message pack codes and ranges.\r\n            ":" 对于有效的消息包代码和范围。\r\n            \r\n","password-based-encryption":"基于密码的加密\r\n","\r\n            The Access-Control-Allow-Headers response header.\r\n            ":"\r\n            访问控制范围响应标头。\r\n            \r\n","<code>XPath</code> provides access to the XPath evaluation environment and expressions.":"<code> XPATH </code>提供对XPATH评估环境和表达式的访问权限。\r\n","\r\n            Gets the index of the sibling frame that the edit relates to.\r\n            ":"\r\n            获取编辑相关的兄弟姐妹框架的索引。\r\n            \r\n"," that accumulates the input elements into a\n            new ":" 这将输入元素累积到\r\n            新的\r\n","An attribute specifying whether error checking is enforced or not.":"指定错误检查是否执行的属性。\r\n","#getCipherSuites":"#getCiphersuites\r\n","\r\n            Gets a readonly list of ":"\r\n            获取一个可读的列表\r\n","putByteArray":"PutbyTearray\r\n","\r\n            This interface can extract unique identifers for a ":"该界面可以提取唯一标识符\r\n","arg":"arg\r\n","Creates a response from a status line.":"从状态线创建响应。\r\n","A function that creates and returns a new mutable result container.":"创建并返回新的可突变结果容器的函数。\r\n","org.xml.sax.helpers.DefaultHandler.endDocument()":"org.xml.sax.helpers.defaulthandler.enddocument（）\r\n"," interface is the primary datatype for the entire\n Document Object Model.":" 接口是整个的主要数据类型\r\n 文档对象模型。\r\n","\r\n            Writes a 16-bit integer in big endian format.\r\n            ":"\r\n            写一个16位整数的大型Endian格式。\r\n            \r\n","Formats a protocol version.":"格式化协议版本。\r\n","Check that the current context is trusted to modify the logging\n            configuration.":"检查当前上下文是否信任修改日志记录\r\n            配置。\r\n","Returns the number of requests transferred over the connection, \n 0 if not available.":"返回通过连接传输的请求数，\r\n 0如果不可用。\r\n","java.util.zip.Checksum":"java.util.zip.checksum\r\n","javax.net.ssl.X509KeyManager":"javax.net.ssl.x509KeyManager\r\n","if attempting to register more\n than the maximum supported number of parties":"如果尝试注册更多\r\n 比最大支持的政党\r\n","Submits a value-returning task for execution and returns a\n            Future representing the pending results of the task.":"提交一个值得返回的任务，以返回\r\n            未来代表任务的未决结果。\r\n","java.util.concurrent.ConcurrentMap.replace(java.lang.Object, java.lang.Object)":"java.util.concurrent.concurrentmap.replace（java.lang.object，java.lang.object）\r\n","javax.security.auth.callback.Callback":"javax.security.auth.callback.callback\r\n"," is\n   ":" 是\r\n   \r\n","java.util.prefs.Preferences.node(java.lang.String)":"java.util.prefs.preferences.node（java.lang.string）\r\n","javax.crypto.CipherSpi.engineGetOutputSize(int)":"javax.crypto.cipherspi.enginegetoutputsize（int）\r\n","\r\n            Add a policy that is built from a delegate with the provided name.\r\n            ":"\r\n            添加由提供名称的代表制定的策略。\r\n            \r\n","javax.xml.transform.sax.SAXTransformerFactory.FEATURE_XMLFILTER":"javax.xml.transform.sax.saxtransformerfactory.feature_xmlfilter\r\n","java.util.zip.ZipOutputStream.STORED":"java.util.zip.zipoutputstream.stored\r\n","A set of supported protocol ":"一组支持协议\r\n","s in the list.":"列表中的s。\r\n","ThreadPoolExecutor#execute execute":"threadPoolExecutor＃执行执行\r\n","\r\n            Attempts to convert a value to a nullable ":"\r\n            试图将值转换为无效的\r\n","java.util.logging.Formatter.format(java.util.logging.LogRecord)":"java.util.logging.formatter.format（java.util.logging.logrocord）\r\n","\r\n            An input component for editing numeric values.\r\n            Supported numeric types are ":"\r\n            用于编辑数字值的输入组件。\r\n            支持的数字类型是\r\n","\r\n            handlerType.\r\n            ":"\r\n            手写型。\r\n            \r\n","Sets the creation time of the entry.":"设置条目的创建时间。\r\n","Creates a socket and connects it to the specified remote host\n            on the specified remote port.":"创建一个插座并将其连接到指定的远程主机\r\n            在指定的远程端口上。\r\n","Acquires a permit from this semaphore, only if one is available at the\n            time of invocation.":"只有从此信号量获得许可证，只有在\r\n            调用时间。\r\n","Creates an SSLContext object.":"创建一个SSLContext对象。\r\n","Represents an operation that accepts two input arguments and returns no\n            result.":"表示接受两个输入参数并返回否的操作\r\n            结果。\r\n","javax.net.ssl.ManagerFactoryParameters":"Javax.net.ssl.ManagerFactoryParameters\r\n","Returns whether new connection will act in client mode when handshaking.":"返回握手时新连接是否会在客户端模式下起作用。\r\n","Enables multiline mode.":"启用多行模式。\r\n","javax.xml.validation.Schema.Schema()":"javax.xml.validation.schema.schema（）\r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            to the given Java <code>short</code> value.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            对于给定的Java <code>简短</code>值。\r\n","org.xml.sax.SAXParseException.SAXParseException(java.lang.String, org.xml.sax.Locator, java.lang.Exception)":"org.xml.sax.saxparseexception.saxparseexception（java.lang.string，org.xml.sax.locator，java.lang.exception）\r\n","java.util.concurrent.atomic.LongAdder.floatValue()":"java.util.concurrent.atomic.longadder.floatvalue（）\r\n"," entries\r\n            is now complete.\r\n            ":" 条目\r\n            现在完成。\r\n            \r\n","End document event.":"最终文档事件。\r\n","org.apache.http.params.HttpParams.getLongParameter(java.lang.String, long)":"org.apache.http.params.httpparams.getlongparameter（java.lang.string，long）\r\n","Retrieves the erroneous regular-expression pattern.":"检索错误的常规表达模式。\r\n","The number of nodes in this map.":"此地图中的节点数量。\r\n","javax.xml.transform.sax.TransformerHandler.setResult(javax.xml.transform.Result)":"javax.xml.transform.sax.transformerhandler.setresult（javax.xml.transform.Result）\r\n","org.xml.sax.ext.DefaultHandler2":"org.xml.sax.ext.defaulthandler2\r\n","java.util.zip.Inflater.Inflater(boolean)":"java.util.zip.inflater.inflater（boolean）\r\n"," child.\n   ":" 孩子。\r\n   \r\n","\r\n            Renders the component to the supplied ":"\r\n            将组件渲染到所提供的\r\n","Creates a new InputStream object of the entity.":"创建实体的新输入对象。\r\n","\r\n            Affects the cookie's same site attribute.\r\n            ":"\r\n            影响cookie的同一站点属性。\r\n            \r\n","\r\n            Specifies the name of the header value that is used by the antiforgery system. If ":"\r\n            指定抗试验系统使用的标头值的名称。如果\r\n","Aborts this stream.":"中止这个流。\r\n","java.util.logging.MemoryHandler.getPushLevel()":"java.util.logging.memoryhandler.getPushlevel（）\r\n","\r\n            Gets a string that indicates the status of the field being edited. This will include\r\n            some combination of \"modified\", \"valid\", or \"invalid\", depending on the status of the field.\r\n            ":"\r\n            获取一个字符串，指示正在编辑的字段的状态。这将包括\r\n            “修改”，“有效”或“无效”的某种组合，具体取决于字段的状态。\r\n            \r\n","\r\n            Configures options for binding subtypes of an HTML ":"\r\n            配置HTML绑定子类型的选项\r\n","java.util.stream.Collectors.maxBy(java.util.Comparator)":"java.util.stream.collectors.maxby（java.util.comparator）\r\n","java.util.logging.Logger.info(java.util.function.Supplier)":"java.util.logging.logger.info（java.util.function.supplier）\r\n","javax.xml.transform.OutputKeys.MEDIA_TYPE":"javax.xml.transform.outputkeys.media_type\r\n"," was created from a\n   different document than the one that created the element.\n   ":" 是由\r\n   与创建元素的文件不同。\r\n   \r\n","\r\n            Gets a a human-readable error message describing the problem.\r\n            ":"\r\n            获取一条描述问题的人类可读错误消息。\r\n            \r\n","Create a new input source with a system identifier.":"使用系统标识符创建新的输入源。\r\n",". -or- Sets the policy on whether to execute existing delayed\n            tasks even when this executor has been ":"。 - 或 - 制定是否执行现有延迟的策略\r\n            即使该执行人已经执行任务\r\n"," that implement various useful reduction\n            operations, such as accumulating elements into collections, summarizing\n            elements according to various criteria, etc.":" 实施各种有用的减少\r\n            操作，例如将元素累积到集合中，总结\r\n            根据各种标准等等。\r\n","Non-exclusively acquires the lock, blocking if necessary\n            until available or the current thread is interrupted.":"非固定地获取锁，如有必要\r\n            直到可用或当前线中断为止。\r\n","Create a Java instance of XML Schema builtin datatype time.":"创建XML Schema内置数据类型时间的Java实例。\r\n","java.util.prefs.Preferences.putByteArray(java.lang.String, byte[])":"java.util.prefs.preferences.putbytearray（java.lang.string，byte []）\r\n","javax.crypto.spec.PBEKeySpec.getSalt()":"javax.crypto.spec.pbekeyspec.getsalt（）\r\n","HTTP protocol version 0.":"HTTP协议版本0。\r\n","org.xml.sax.helpers.ParserAdapter.parse(java.lang.String)":"org.xml.sax.helpers.parseradapter.parse（java.lang.string）\r\n","Basic implementation for formatting header value elements.":"格式化标题值元素的基本实现。\r\n","\r\n            Invoked when a connection to the client was established.\r\n            ":"\r\n            建立与客户的连接时调用。\r\n            \r\n","Creates a DESedeKeySpec object using the first 24 bytes in\n            <code>key</code> as the key material for the DES-EDE key.":"使用前24个字节在\r\n            <code>键</code>作为DES-EDE密钥的关键材料。\r\n",".\r\n            For example, edit entries of type ":"。\r\n            例如，编辑类型条目\r\n","Returns user ":"返回用户\r\n","\r\n            Advances the sequence to include the specified number of elements initialized into memory\r\n            returned by a prior call to ":"\r\n            将序列推进到包括初始化为内存中的指定数量的元素\r\n            由先前的电话返回\r\n","Defines the content of the ":"定义内容\r\n"," implementing a cascaded \"group by\" operation\n            on input elements of type ":" 通过操作实施级联的“群体”\r\n            关于类型的输入元素\r\n","The wrapped input stream, while accessible.":"包裹的输入流，虽然可访问。\r\n","javax.xml.datatype.DatatypeConstants.GYEAR":"javax.xml.datatype.datatypeconstants.gyear\r\n","Duration":"期间\r\n","bind-value":"结合价值\r\n","500 Server Error":"500服务器错误\r\n","Set time as one unit.":"将时间设置为一个单元。\r\n",", initially containing the elements of the\n            given collection,\n            added in traversal order of the collection's iterator.":"，最初包含\r\n            给定收集，\r\n            按照收集迭代器的遍历顺序添加。\r\n","\r\n            The Access-Control-Request-Method request header.\r\n            ":"\r\n            访问控制 - 重新测量请求标题。\r\n            \r\n","org.xml.sax.helpers.XMLReaderAdapter.setLocale(java.util.Locale)":"org.xml.sax.helpers.xmlreaderadapter.setlocale（java.util.locale）\r\n","org.w3c.dom.DOMException.NO_DATA_ALLOWED_ERR":"org.w3c.dom.domexception.no_data_allowed_err\r\n","This is called to notify the listener that it is being unbound\n            from a SSLSession.":"这被称为通知听众，它是未结合的\r\n            来自SSLSession。\r\n","Filter a start document event.":"过滤起始文档事件。\r\n","Validate instance by ":"通过\r\n","if the input buffer and the output buffer are the identical\n             object.\n":"如果输入缓冲区和输出缓冲区是相同的\r\n             目的。\r\n\r\n","Set the system ID from a File reference.":"从文件参考设置系统ID。\r\n","javax.sql.RowSet.setNClob(int, java.io.Reader)":"javax.sql.Rowset.setnClob（int，java.io.reader）\r\n","'s processed by the reader.\r\n            ":"由读者处理。\r\n            \r\n","Creates a new ZIP input stream.":"创建一个新的邮政编码输入流。\r\n","Attributes2":"属性2\r\n","javax.sql.RowSet.setBlob(java.lang.String, java.io.InputStream)":"javax.sql.Rowset.setBlob（java.lang.string，java.io.inputstream）\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryAcquireSharedNanos(long, long)":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.tryacquiresharednanos（长，长）\r\n","if this lock is not held":"如果不举行此锁\r\n","java.util.concurrent.atomic.AtomicMarkableReference.attemptMark(java.lang.Object, boolean)":"java.util.concurrent.atomic.atomicmarkableReference.AttEmptmark（java.lang.Object，boolean）\r\n","org.w3c.dom.NamedNodeMap.setNamedItem(org.w3c.dom.Node)":"org.w3c.dom.nemednodemap.setnameDitem（org.w3c.dom.node）\r\n","Encapsulates specifics of a protocol scheme such as \"http\" or \"https\".":"封装协议方案的细节，例如“ HTTP”或“ HTTPS”。\r\n","Exclusively acquires the lock, blocking if necessary\n            until available.":"独家获取锁，如有必要\r\n            直到可用。\r\n","An attribute specifying the encoding used for this document at the time\n of the parsing.":"指定本文档使用的编码的属性\r\n 解析。\r\n","java.util.function.LongSupplier":"java.util.function.longsupplier\r\n"," by default to reduce\r\n            the size of the final authentication cookie.\r\n            ":" 默认以减少\r\n            最终身份验证曲奇的大小。\r\n            \r\n","java.util.logging.ErrorManager":"java.util.logging.errormanager\r\n","Abstract cookie store.":"抽象饼干商店。\r\n","JSONObject#toString":"jsonObject＃toString\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.getQueuedThreads()":"java.util.concurrent.locks.abstractqueuedsynchronizer.getQueuedThreads（）\r\n"," can not be unwrapped to a key of\n             type ":" 无法将其包装到钥匙\r\n             类型\r\n","Returns a composed operator that first applies this operator to\n            its input, and then applies the ":"返回首先将该操作员应用于\r\n            其输入，然后应用\r\n","Use a DOM node to create a new output target.":"使用DOM节点创建新的输出目标。\r\n","\r\n            Appends a frame representing a string-valued attribute.\r\n            The attribute is associated with the most recently added element. If the value is ":"\r\n            附加代表字符串值属性的帧。\r\n            该属性与最近添加的元素关联。如果值为\r\n","The target of this processing instruction.":"该处理指令的目标。\r\n","Returns a new CompletionStage that is completed with the same\n            value as the CompletionStage returned by the given function.":"返回一个新的完整舞台，该舞台已完成相同\r\n            值作为由给定功能返回的完成阶段的值。\r\n","422 Unprocessable Entity":"422无法处理的实体\r\n","EntityResolver":"EntityResolver\r\n","Defines the default socket timeout (":"定义默认插座超时（\r\n","\r\n            Gets the event's ability to prevent default event flow.\r\n            ":"\r\n            获得事件防止默认事件流的能力。\r\n            \r\n","\r\n             Exists only so that the various methods in this class can call each other without\r\n             constantly building up long lists of parameters. Is private to this class, so the\r\n             fact that it's a mutable struct is manageable.\r\n            \r\n             Always pass by ref to avoid copying, and because the 'SiblingIndex' is mutable.\r\n             ":"\r\n             存在只是为了使此类中的各种方法可以互相调用而无需\r\n             不断建立一长串参数。这堂课是私人的，所以\r\n             事实是一个可变的结构是可以管理的。\r\n            \r\n             始终通过裁判来避免复制，并且因为“ siblingIndex”是可变的。\r\n             \r\n","java.util.concurrent.atomic.AtomicInteger.floatValue()":"java.util.concurrent.atomic.atomicinteger.floatvalue（）\r\n","java.util.concurrent.locks.ReentrantReadWriteLock.isWriteLockedByCurrentThread()":"java.util.concurrent.locks.reentrantreadwritelock.iswritelockedbycurrentthread（）\r\n"," as big endian.\r\n            ":" 像大的末日。\r\n            \r\n","java.util.concurrent.locks.Lock.unlock()":"java.util.concurrent.locks.lock.unlock（）\r\n","Returns a <code>SocketFactory</code> object for this\n            context.":"返回<code> socketFactory </code>对此\r\n            语境。\r\n","org.xml.sax.AttributeList.getType(int)":"org.xml.sax.attributelist.getType（int）\r\n","Generates a hash code for this tracked route.":"为此跟踪路线生成哈希代码。\r\n","Obtains a hash code consistent with ":"获得与\r\n","org.xmlpull.v1.XmlPullParser.setFeature(java.lang.String, boolean)":"org.xmlpull.v1.xmlpullparser.setFeature（java.lang.string，boolean）\r\n","java.util.prefs.Preferences.flush()":"java.util.prefs.preferences.flush（）\r\n","Get the current entity resolver. -or- Set the entity resolver.":"获取当前的实体解析器。 - 或设置实体解析器。\r\n","java.util.logging.Logger.exiting(java.lang.String, java.lang.String)":"java.util.logging.logger.exiting（java.lang.string，java.lang.string）\r\n","Basic implementation of an HTTP request that can be modified.":"可以修改的HTTP请求的基本实现。\r\n","java.util.logging.Level":"java.util.logging.Level\r\n","java.util.concurrent.atomic.LongAdder.longValue()":"java.util.concurrent.atomic.longadder.longvalue（）\r\n","org.xmlpull.v1.XmlPullParserFactory.newInstance()":"org.xmlpull.v1.xmlpullparserfactory.newinstance（）\r\n","javax.net.ssl.X509KeyManager.getPrivateKey(java.lang.String)":"javax.net.ssl.x509Keymanager.getPrivateKey（java.lang.string）\r\n","Returns the <code>index</code>th item in the collection.":"返回集合中的<code>索引</code> TH项目。\r\n","Constructor used by subclasses only.":"仅由子类使用的构造函数。\r\n","\r\n            To extend the set of ":"\r\n            扩展一组\r\n","VARCHAR":"Varchar\r\n","if the argument is invalid, for example because it is\n  not a connected socket or was created by a different\n  socket factory.\n  Note that socket factories are ":"例如，如果参数无效，例如，因为它是\r\n  不是连接的插座或由不同的\r\n  插座工厂。\r\n  请注意，插座工厂是\r\n","java.util.concurrent.SynchronousQueue.SynchronousQueue(boolean)":"Java.util.concurrent.Synchronousqueue.Synchronousqueue（布尔值）\r\n","Create a <code>SAXSource</code>, using a SAX <code>InputSource</code>.":"使用sax <code> inputsource </code>创建<code> saxsource </code>。\r\n","Remove the association (if any) for the specified key at this\n            preference node.":"在此删除指定键的关联（如果有）\r\n            偏好节点。\r\n","Defines the maximum number of ignorable lines before we expect\n a HTTP response's status line.":"在我们期望之前，定义最大可忽略的行数\r\n HTTP响应的状态线。\r\n","Attempt to create an XMLReader from system defaults.":"尝试从系统默认设置创建XMLReader。\r\n","Obtains the layering type of this route.":"获得此路线的分层类型。\r\n","Constructs a ZipError with the given detail message.":"用给定的详细信息构造Ziperror。\r\n","Allows for setting parameters relating to connection routes on\n ":"允许设置与连接路由有关的参数\r\n \r\n","Returns the name of the protocol.":"返回协议的名称。\r\n","java.util.concurrent.LinkedBlockingDeque.removeLast()":"java.util.concurrent.linkedblockingdeque.removelast（）\r\n","Initializes this <code>Mac</code> object with the given key and\n            algorithm parameters.":"用给定密钥和\r\n            算法参数。\r\n",") in milliseconds which is the \n            timeout for waiting for data.":"）以毫秒为单位\r\n            等待数据的超时。\r\n","relatedData":"相关数据\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getSharedQueuedThreads()":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.getSharedqueuedthreads（）\r\n","org.xml.sax.helpers.XMLReaderAdapter.characters(char[], int, int)":"org.xml.sax.helpers.xmlreaderadapter.characters（char []，int，int）\r\n","when key is not an ":"当键不是\r\n","\r\n            Gets the offset into the underlying array holding the segment's elements.\r\n            ":"\r\n            将偏移量放入固定段的元素的基础阵列中。\r\n            \r\n","if either cipherSpi is ":"如果两个Cipherspi是\r\n","javax.net.ssl.X509ExtendedTrustManager.checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String, javax.net.ssl.SSLEngine)":"javax.net.ssl.x509 extendedTrustmanager.checkclienttrusted（java.security.cert.cert.x509certificate []，java.lang.string，javax.net.ssl.ssl.sslengine）\r\n","org.w3c.dom.Element.hasAttribute(java.lang.String)":"org.w3c.dom.element.hasattribute（java.lang.string）\r\n","\r\n            Expresses this sequence as a ":"\r\n            将此序列表示为\r\n","Return the saved line number (1-based). -or- Set the line number for this locator (1-based).":"返回保存的线号（基于1）。 - 或 - 设置此定位器的行号（基于1）。\r\n","Test if the pair namespaceURI/name is part of this\n            <code>NameList</code>.":"测试该对namespaceuri/name是否是其中的一部分\r\n            <code> namelist </code>。\r\n","Copies all of the attribute name-value mappings from the specified\n            Attributes to this Map.":"复制从指定的所有属性名称值映射\r\n            该地图的属性。\r\n","\r\n            An exception thrown when ":"\r\n            一个例外，当\r\n","If the combination of set fields does not match one of the XML Schema date/time datatypes.\n":"如果设置字段的组合与XML模式日期/时间数据类型之一不匹配。\r\n\r\n","objectModel.length() == 0":"objectModel.length（）== 0\r\n","\r\n            Represents a UI component.\r\n            ":"\r\n            代表UI组件。\r\n            \r\n","Indicates that a connection has been closed.":"表示连接已关闭。\r\n"," with\n            the given fairness policy.":" 和\r\n            给定的公平政策。\r\n","java.util.concurrent.ScheduledExecutorService.schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.scheduledexecutorservice.schedule（java.lang.runnable，long，java.util.concurrent.timeunit）\r\n","org.w3c.dom.ls.LSSerializer.writeToString(org.w3c.dom.Node)":"org.w3c.dom.ls.lsserializer.writetostring（org.w3c.dom.node）\r\n","Returns the provider of this <code>KeyManagerFactory</code> object.":"返回此<code> keymanagerFactory </code>对象的提供商。\r\n","systemId":"SystemId\r\n","<code>QName</code> represents a <strong>qualified name</strong>\n            as defined in the XML specifications: <a\n            href=\"http://www.":"<code> qname </code>表示<strong>合格名称</strong>\r\n            如XML规范中所定义的：<a\r\n            href =“ http：//www。\r\n","javax.crypto.Cipher.getInstance(java.lang.String, java.security.Provider)":"javax.crypto.cipher.getinstance（java.lang.string，java.security.provider）\r\n","Constructs an exception reporting an error found by\n            an SSL subsystem.":"构建一个例外报告，报告了一个错误\r\n            SSL子系统。\r\n","javax.sql.RowSet.setByte(java.lang.String, byte)":"javax.sql.Rowset.setbyte（java.lang.string，byte）\r\n","javax.xml.xpath.XPathFactory.setXPathVariableResolver(javax.xml.xpath.XPathVariableResolver)":"javax.xml.xpath.xpathfactory.setxpathvariableresolver（javax.xml.xpath.xpathvariableresolesolver）\r\n","\r\n            The result of the last call to ":"\r\n            最后一个电话的结果\r\n","\r\n            Used to indicate that part of the buffer has been written to.\r\n            ":"\r\n            用于指示缓冲区的一部分已写入。\r\n            \r\n"," object associated with this node.":" 与此节点关联的对象。\r\n","Constructs a <code>StatementEvent</code> with the specified <code>PooledConnection</code> and\n            <code>PreparedStatement</code>.":"用指定的<code> poolconnection构建<code> statementevent </code> </code>和\r\n            <code>准备序列</code>。\r\n","the format of a code attribute name.":"代码属性名称的格式。\r\n","if the uri is invalid. \n":"如果URI无效。\r\n\r\n","Attempts to adopt a node from another document to this document.":"尝试从另一个文档中采用一个节点到本文档。\r\n","if the initialization vector is null or starting at\n             ":"如果初始化向量为null或从\r\n             \r\n",",\r\n            ":"，，，，\r\n            \r\n","\r\n            The request path within the application's base path where the user-agent will be returned.\r\n            The middleware will process this request when it arrives.\r\n            ":"\r\n            应用程序的基本路径中的请求路径将返回用户代理。\r\n            中间件到达时将处理此请求。\r\n            \r\n","If an attempt is made to modify an object where modifications are not\n            allowed.":"如果尝试修改不进行修改的对象\r\n            允许。\r\n","java.util.concurrent.atomic.DoubleAccumulator.accumulate(double)":"java.util.concurrent.Atomic.DoubleaCumulator.Accumulate（double）\r\n"," if it exists and is an int or\n            can be coerced to an int, or ":" 如果存在并且是int或\r\n            可以强迫启动到int，或者\r\n"," should ensure we no longer have to concern ourselves with entry expiration.\r\n            \r\n             Knowing when a client disconnected is not an exact science. There's a fair possiblity that a client may reconnect before the server realizes.\r\n             Consequently, we have to account for reconnects and disconnects occuring simultaneously as well as appearing out of order.\r\n             To manage this, we use a critical section to manage all state transitions.\r\n             ":" 应该确保我们不再需要关注入境到期。\r\n            \r\n             知道客户何时断开连接不是一门精确的科学。客户可能会在服务器意识到之前重新连接。\r\n             因此，我们必须考虑同时发生的重新连接和断开连接，并且出现了秩序。\r\n             为了管理这一点，我们使用关键部分来管理所有状态过渡。\r\n             \r\n","\r\n            Gets the length of the next string.\r\n            ":"\r\n            获取下一个字符串的长度。\r\n            \r\n","Verifies that the specified hostname is allowed within the specified SSL\n session.":"验证指定的SSL中允许指定的主机名\r\n 会议。\r\n","<code>XPathFunctionException</code> represents an error with an XPath function.":"<code> XPathFunctionException </code>表示具有XPATH函数的错误。\r\n","DiscardOldestPolicy":"丢弃\r\n","Format the given LogRecord.":"格式化给定的ligrecord。\r\n","Converts the byte array of ASCII characters to a string.":"将ASCII字符的字节数组转换为字符串。\r\n","javax.net.ssl.HandshakeCompletedListener.handshakeCompleted(javax.net.ssl.HandshakeCompletedEvent)":"javax.net.ssl.handshakecompletedlistener.handshakecompleted（javax.net.ssl.ssl.handshakecompletedevent）\r\n","A context for executing a request.":"执行请求的上下文。\r\n","Add a parameter for the transformation.":"为转换添加一个参数。\r\n","403 Forbidden":"403禁止\r\n"," for this instance.\r\n            ":" 对于此情况。\r\n            \r\n","Transfer-Encoding":"转移编码\r\n","This exception is thrown when a ":"当一个例外时，当\r\n","\r\n            The redirect uri used in the authorization request.\r\n            ":"\r\n            授权请求中使用的重定向URI。\r\n            \r\n","Copy an existing Locator or Locator2 object.":"复制现有的定位器或定位器2对象。\r\n","\n         and the current keep-alive time is not greater than zero":"\r\n         并且当前的保持时间不大于零\r\n","if command is null":"如果命令为null\r\n","java.util.stream.Collectors.summarizingLong(java.util.function.ToLongFunction)":"java.util.stream.collectors.summarizinglong（java.util.function.tolongfunction）\r\n","Associates a string representing the specified int value with the\n            specified key in this preference node.":"将代表指定int值的字符串与\r\n            在此偏好节点中指定键。\r\n","Initializes this key generator.":"初始化此密钥生成器。\r\n","Thrown if it is not\n   possible to create a ":"如果不是\r\n   可能创建一个\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.isHeldExclusively()":"java.util.concurrent.locks.abstractqueuedsynchronizer.isheldexclusively（）\r\n","\n   attribute is ":"\r\n   属性是\r\n","\r\n            The default value used by CookieAuthenticationMiddleware for the\r\n            CookieAuthenticationOptions.LogoutPath\r\n            ":"\r\n            cookiuthenticationmiddleware使用的默认值\r\n            cookieAthenticationOptions.logoutpath\r\n            \r\n","A BlockingQueue blocking queue in which each insert\n            operation must wait for a corresponding remove operation by another\n            thread, and vice versa.":"封锁式阻塞队列，其中每个插入\r\n            操作必须等待另一个相应的删除操作\r\n            线程，反之亦然。\r\n","Returns a sorted map of the properties of this packer.":"返回该包装器属性的分类地图。\r\n"," callback that can be\n used to abort a long-lived request for a connection.":" 可以回调\r\n 用于中断有关连接的长期请求。\r\n","Get the character stream that was set with setWriter. -or- Set the writer that is to receive the result.":"获取使用SetWriter设置的字符流。 - 或设置要接收结果的作者。\r\n","\r\n            Gets the tracker for the underlying array for this segment, which can be used to recycle the array when we're disposed of.\r\n            Will be ":"\r\n            获取该段的基础阵列的跟踪器，该段可用于回收阵列时。\r\n            将会\r\n","\r\n            Manages a sequence of elements, readily castable as a ":"\r\n            管理一系列元素，很容易铸造为\r\n","java.util.concurrent.ThreadLocalRandom.nextDouble(double)":"java.util.concurrent.threadlocalrandom.nextdouble（double）\r\n","Begins writing a new ZIP file entry and positions the stream to the\n            start of the entry data.":"开始编写新的zip文件输入，并将流定位到\r\n            开始数据的开始。\r\n","org.xml.sax.ext.DefaultHandler2.resolveEntity(java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"org.xml.sax.ext.defaulthandler2.resolveentity（java.lang.string，java.lang.string，java.lang.string，java.lang.string）\r\n","Attempts to establish a connection with the data source that\n            this <code>DataSource</code> object represents.":"尝试与数据源建立连接\r\n            此<code> dataSource </code>对象表示。\r\n","java.util.zip.InflaterInputStream":"java.util.zip.inflaterinputstream\r\n","Creates a new direct insecure route.":"创建一条新的直接不安全路线。\r\n","java.util.logging.Level.getLocalizedName()":"java.util.logging.level.getLocalizedName（）\r\n","Shuts down this connection manager and releases allocated resources.":"关闭此连接管理器并发布分配的资源。\r\n","org.w3c.dom.ls.DOMImplementationLS.MODE_SYNCHRONOUS":"org.w3c.dom.ls.domimplementationls.mode_synchronous\r\n","Generates the exemption mechanism key blob.":"生成豁免机制密钥斑点。\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.getSharedQueuedThreads()":"java.util.concurrent.locks.abstractqueuedsynchronizer.getSharedqueuedthreads（）\r\n","org.json.JSONStringer":"org.json.jsonstringer\r\n","java.util.concurrent.atomic.AtomicLongFieldUpdater.weakCompareAndSet(java.lang.Object, long, long)":"java.util.concurrent.atomic.atomiclongfieldupdater.weakcompareandset（java.lang.object，long，long）\r\n","The abstract implementation of secure communications using SSL, TLS, or other\n protocols.":"使用SSL，TLS或其他的摘要实施安全通信\r\n 协议。\r\n","XmlSerializer":"XMLSerializer\r\n","org.xml.sax.Attributes.getURI(int)":"org.xml.sax.attributes.geturi（int）\r\n","An object that executes submitted ":"执行提交的对象\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.getWaitingThreads(java.util.concurrent.locks.ConditionObject)":"java.util.concurrent.locks.abstractqueuedsynchronizer.getWaitingThreads（java.util.concurrent.locks.conditionObject）\r\n","\r\n            Gets or sets a collection of additional attributes that will be applied to the created ":"\r\n            获取或设置将应用于创建的其他属性的集合\r\n","Create a new empty input source object where\n            <code>LSInput.":"创建一个新的空输入源对象\r\n            <code> lsinput。\r\n","org.apache.http.conn.ssl.BrowserCompatHostnameVerifier":"org.apache.http.conn.ssl.browsercompathostnameverifier\r\n","java.util.concurrent.atomic.AtomicStampedReference.getStamp()":"java.util.concurrent.atomic.atomicstampedreference.getstamp（）\r\n","Obtains a buffer for formatting.":"获得用于格式化的缓冲区。\r\n","\r\n            Attempts to validate a cookie token.\r\n            ":"\r\n            试图验证cookie令牌。\r\n            \r\n","Protected default constructor.":"受保护的默认构造函数。\r\n","javax.xml.transform.dom.DOMSource.DOMSource(org.w3c.dom.Node, java.lang.String)":"javax.xml.transform.dom.domsource.domsource（org.w3c.dom.node，java.lang.string）\r\n","java.util.logging.LogRecord.setSourceMethodName(java.lang.String)":"java.util.logging.logrocord.setsourcemethodname（java.lang.string）\r\n","in case of an IO problem.\n         The connection will be released anyway.\n":"如果有IO问题。\r\n         该连接将无论如何都会发布。\r\n\r\n","javax.xml.transform.stream.StreamSource.setPublicId(java.lang.String)":"javax.xml.transform.stream.streamsource.setpublicid（java.lang.string）\r\n","java.util.zip.ZipEntry.getName()":"java.util.zip.zipentry.getName（）\r\n","NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.":"no_modification_allowed_err：读取节点时升起。\r\n","\r\n            Adds support for SignInAsync\r\n            ":"\r\n            增加了对signinasync的支持\r\n            \r\n"," with the specified initial\n            capacity that orders its elements according to the specified\n            comparator.":" 指定的初始\r\n            根据指定的命令订购其元素的能力\r\n            比较器。\r\n","\r\n            Denotes the target member as a component parameter.\r\n            ":"\r\n            将目标成员表示为组件参数。\r\n            \r\n","\r\n            The X coordinate of the touch point relative to the left edge of the screen.\r\n            ":"\r\n            触摸点的X坐标相对于屏幕的左边缘。\r\n            \r\n"," type to configure the handler.\"/>.":" 键入配置处理程序。”/>。\r\n","Gets the original value of the current row only.":"仅获取当前行的原始值。\r\n","Constant for encryption operation mode.":"加密操作模式的常数。\r\n","If the feature\n            value can't be assigned or retrieved from the parent.":"如果功能\r\n            价值不能从父母那里分配或检索。\r\n","javax.crypto.KeyAgreement.generateSecret(java.lang.String)":"javax.crypto.keyagreement.generatesecret（java.lang.string）\r\n","org.xml.sax.DocumentHandler.characters(char[], int, int)":"org.xml.sax.documenthandler.Characters（char []，int，int）\r\n","java.util.concurrent.atomic.AtomicLong.weakCompareAndSet(long, long)":"java.util.concurrent.atomic.atomiclong.weakcompareandset（长，长）\r\n","javax.security.cert.X509Certificate.getInstance(byte[])":"javax.security.cert.x509certificate.getInstance（byte []）\r\n","javax.sql.RowSet.setNClob(java.lang.String, java.io.Reader, long)":"javax.sql.Rowset.setnClob（java.lang.string，java.io.Reader，long）\r\n","Returns a spliterator for the elements of this stream.":"返回该流元素的拆分器。\r\n","java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndSet(java.lang.Object, long)":"java.util.concurrent.atomic.atomiclongfieldupdater.getandset（java.lang.Object，long）\r\n","javax.xml.transform.Transformer.getParameter(java.lang.String)":"javax.xml.transform.transformer.getParameter（java.lang.string）\r\n","encrAlgName":"incralgname\r\n","The node is an <code>EntityReference</code>.":"节点是<code> EntityReference </code>。\r\n","org.xml.sax.XMLReader.setFeature(java.lang.String, boolean)":"org.xml.sax.xmlreader.setFeature（java.lang.string，boolean）\r\n","Protected constructor":"受保护的构造函数\r\n","javax.crypto.ExemptionMechanism":"Javax.Crypto.ExemptionMechanism\r\n","Get state of XInclude processing. -or- Set state of XInclude processing.":"获得Xinclude处理状态。 - 或设置Xinclude处理的状态。\r\n","java.util.concurrent.atomic.AtomicStampedReference.set(java.lang.Object, int)":"java.util.concurrent.atomic.atomicstampedReference.set（java.lang.object，int）\r\n","\r\n            A middleware for handling CORS.\r\n            ":"\r\n            处理CORS的中间件。\r\n            \r\n","Write &lt;&#63;xml declaration with encoding (if encoding not null)\n            and standalone flag (if standalone not null)\n            This method can only be called just after setOutput.":"编码编码（如果编码为null）\r\n            和独立的标志（如果独立的，则不为null）\r\n            此方法只能在SETOUTPUT之后仅调用。\r\n","DECRYPT_MODE":"decrypt_mode\r\n","Acquires the read lock if the write lock is not held by\n another thread within the given waiting time and the\n current thread has not been ":"如果未持有写锁，则获取读取锁\r\n 给定等待时间和\r\n 当前线程还没有\r\n","Allows the user to set specific attributes on the underlying\n            implementation.":"允许用户在基础上设置特定属性\r\n            执行。\r\n","javax.sql.RowSet.setObject(int, java.lang.Object, int)":"javax.sql.Rowset.setObject（int，java.lang.object，int）\r\n","Get the byte stream for this input source. -or- Set the byte stream for this input source.":"获取此输入源的字节流。 - 或 - 为此输入源设置字节流。\r\n"," and the\n   DOM application attempts to append a second\n   ":" 和\r\n   DOM应用程序尝试附加第二个\r\n   \r\n","org.xml.sax.helpers.ParserAdapter.setErrorHandler(org.xml.sax.ErrorHandler)":"org.xml.sax.helpers.parseradapter.seterrorhandler（org.xml.sax.errorhandler）\r\n","Creates a new <code>JarFile</code> to read from the specified\n            file <code>name</code>.":"创建一个新的<code> jarfile </code>以从指定的\r\n            文件<code>名称</code>。\r\n","Indicates that the route can not be established at all.":"表示完全无法建立该路线。\r\n","Integer#MAX_VALUE":"整数＃max_value\r\n","java.util.zip.GZIPOutputStream.GZIPOutputStream(java.io.OutputStream, int)":"java.util.zip.gzipoutputstream.gzipoutputstream（java.io.outputstream，int）\r\n","Gets the maximum number of bytes that can be returned for column values\n which are of type ":"获取可以返回的最大字节数以获取列值\r\n 类型\r\n","Called by the processor when it encounters\n            an xsl:include, xsl:import, or document() function.":"处理器遇到时调用\r\n            XSL：INCLADY，XSL：导入或document（）函数。\r\n"," view of this StampedLock in which\n            the ":" 此章节的视图\r\n            这\r\n","org.w3c.dom.Element.setIdAttributeNS(java.lang.String, java.lang.String, boolean)":"org.w3c.dom.element.setidattributens（java.lang.string，java.lang.string，boolean）\r\n","Constructs a secret key from the given byte array, using the first\n            <code>len</code> bytes of <code>key</code>, starting at\n            <code>offset</code> inclusive.":"使用第一个构建给定字节数组的秘密键\r\n            <code> len </code> <code>键</code>的字节，从\r\n            <Code> Offset </code>包容性。\r\n","<code>XPathException</code> represents a generic XPath exception.":"<code> XPathException </code>表示通用XPath异常。\r\n"," was unable to load\n   the XML document. DOM applications should attach a\n   ":" 无法加载\r\n   XML文档。 DOM应用程序应附加\r\n   \r\n"," for recycling arrays.\r\n            ":" 用于回收阵列。\r\n            \r\n","Returns an AlgorithmParameterSpec object which contains\n            the maximum cipher parameter value according to the\n            jurisdiction policy file.":"返回包含的算法ParametersPec对象\r\n            根据最大密码参数值\r\n            管辖权策略文件。\r\n","Look up an attribute's type by index.":"通过索引查找属性的类型。\r\n","Creates a new route with all attributes specified explicitly.":"使用明确指定的所有属性创建一个新路由。\r\n","Gets the maximum number of connections allowed.":"获取允许的最大连接数。\r\n","Returns the <code>JarEntry</code> for the given entry name or\n            <code>null</code> if not found.":"返回给定条目名称或\r\n            <code> null </code>如果找不到。\r\n","org.apache.http.params.CoreConnectionPNames.MAX_LINE_LENGTH":"org.apache.http.params.coreconnectionpnames.max_line_length\r\n","Implementations of this interface are passed to a\n            ":"该接口的实现将\r\n            \r\n","\r\n            Invoked after the remote ticket has been received.\r\n            ":"\r\n            收到遥控机票后被调用。\r\n            \r\n","localName":"localname\r\n","Initializes this factory with a source of certificate\n            authorities and related trust material.":"用证书来源初始化该工厂\r\n            当局和相关信任材料。\r\n","java.util.regex.Matcher.toMatchResult()":"java.util.regex.matcher.tomatchresult（）\r\n","Returns CRC-32 value.":"返回CRC-32值。\r\n","\r\n            Write the length of the next array to be written as ":"\r\n            写下下一个阵列的长度为\r\n","java.util.logging.MemoryHandler.MemoryHandler()":"java.util.logging.memoryhandler.memoryhandler（）\r\n","java.util.concurrent.locks.LockSupport.unpark(java.lang.Thread)":"java.util.concurrent.locks.locksupport.unpark（java.lang.thread）\r\n","if parsing the encoded representation fails.":"如果解析编码的表示失败。\r\n","W3C XML Schema max timezone offset is -14:00.":"W3C XML模式最大时区偏移量为-14：00。\r\n","Returns a <code>SecretKeyFactory</code> object that converts\n            secret keys of the specified algorithm.":"返回<code> SecretKeyFactory </code>转换的对象\r\n            指定算法的秘密键。\r\n","javax.xml.parsers.DocumentBuilderFactory.isExpandEntityReferences()":"javax.xml.parsers.documentbuilderfactory.isexpandentityreferences（）\r\n"," is invoked each time a connection\r\n            is dropped.\r\n            ":" 每次连接都被调用\r\n            被丢弃。\r\n            \r\n","The position after ":"之后的位置\r\n","java.util.logging.StreamHandler.StreamHandler(java.io.OutputStream, java.util.logging.Formatter)":"java.util.logging.streamhandler.streamhandler（java.io.outputstream，java.util.logging.formatter）\r\n","Returns the value mapped by ":"返回映射的值\r\n","Tells that this entity is not streaming.":"告诉这个实体没有流式传输。\r\n","java.util.concurrent.atomic.AtomicStampedReference.get(int[])":"java.util.concurrent.atomic.atomicstampedReference.get（int []）\r\n","Preferences#removeNode()":"首选项＃removenode（）\r\n","Reset this <code>Transformer</code> to its original configuration.":"将此<code>变压器</code>重置为其原始配置。\r\n"," because a\n            ":" 因为\r\n            \r\n","javax.xml.validation.Schema.newValidatorHandler()":"javax.xml.validation.schema.newvalidatorhandler（）\r\n","if an error occurs while creating a new socket.\n":"如果在创建新套接字时发生错误。\r\n\r\n","Interface for checking if a hostname matches the names stored inside the\n            server's X.":"用于检查主机名是否匹配存储在内部的名称的接口\r\n            服务器的X。\r\n","\r\n            Gets the event argument type.\r\n            ":"\r\n            获取事件参数类型。\r\n            \r\n","if a required algorithm is not available.":"如果不可用的算法。\r\n","The Netscape cookie draft compliant policy.":"Netscape Cookie符合条件的政策。\r\n","Creates a new HttpException with the specified detail message.":"使用指定的详细信息创建一个新的HTTPException。\r\n","Preferences#exportNode(OutputStream)":"首选项＃exportNode（outputStream）\r\n","\r\n            Discontinue all processing for this request and return to the client.\r\n            The caller is responsible for generating the full response.\r\n            ":"\r\n            终止此请求的所有处理，然后返回客户。\r\n            呼叫者负责生成完整的响应。\r\n            \r\n","Returns the source of encoding input P.":"返回编码P的来源。\r\n","org.w3c.dom.NameList.containsNS(java.lang.String, java.lang.String)":"org.w3c.dom.namelist.containsns（java.lang.string，java.lang.string）\r\n","The Document Type Declaration (see ":"文档类型声明（请参阅\r\n","Content-Type":"内容类型\r\n","java.util.function.IntConsumer.andThen(java.util.function.IntConsumer)":"java.util.function.intconsumer.andthen（java.util.function.intconsumer）\r\n"," instances for a resource. If a resource has any ":" 资源的实例。如果资源有任何\r\n","Implementation-Vendor":"实施供应商\r\n","key recovery":"密钥恢复\r\n"," reference fields of designated\n            classes.":" 指定的参考字段\r\n            课程。\r\n","javax.xml.transform.Result":"javax.xml.transform.Result\r\n","Default compression level.":"默认压缩级别。\r\n","Returns authentication realm.":"返回身份验证领域。\r\n","Creates and executes a periodic action that becomes enabled first\n            after the given initial delay, and subsequently with the given\n            period; that is, executions will commence after\n            ":"创建并执行一个定期操作，该操作首先启用\r\n            给定初始延迟后，随后使用给定\r\n            时期;也就是说，执行将在\r\n            \r\n","Creates a new InvalidCredentialsException with a ":"用一个\r\n","Return the character encoding for this ":"返回为此的字符编码\r\n","Obtains the release of the versioned module or informal unit.":"获得版本的模块或非正式单元的发布。\r\n","This class provides the functionality of an exemption mechanism, examples\n            of which are ":"该课程提供了豁免机制的功能，示例\r\n            其中\r\n","Interface for obtaining reason phrases for HTTP status codes.":"界面以获取HTTP状态代码的理性短语。\r\n","Get the base ID (URI or system ID) from where relative\n URLs will be resolved.":"从相对的位置获取基本ID（URI或系统ID）\r\n URL将解决。\r\n","416 Requested Range Not Satisfiable":"416要求的范围不令人满意\r\n","Matches the given value (property of the destination host where request is being\n submitted) with the corresponding cookie attribute.":"匹配给定值（目的地主机的属性\r\n 提交）带有相应的cookie属性。\r\n","Writes the Manifest to the specified OutputStream.":"将清单写入指定的输出流。\r\n","javax.sql.RowSet.setCharacterStream(int, java.io.Reader, int)":"javax.sql.Rowset.setCharacterstream（int，java.io.reader，int）\r\n","Obtains the names of the registered schemes in their default order.":"以默认顺序获取注册方案的名称。\r\n","java.util.concurrent.atomic.AtomicLong.AtomicLong()":"java.util.concurrent.atomic.atomiclong.atomiclong（）\r\n"," node this attribute is attached to or\n ":" 节点此属性附加到或\r\n \r\n","java.util.concurrent.CompletionStage.thenAccept(java.util.function.Consumer)":"java.util.concurrent.completionstage.thenaccept（java.util.function.consumer）\r\n","Get the matching aliases for authenticating the server side of a secure\n            socket given the public key type and the list of\n            certificate issuer authorities recognized by the peer (if any).":"获取匹配的别名以对安全的服务器端进行身份验证\r\n            插座给定公共密钥类型和列表\r\n            证书发行人当局由同伴认可（如果有）。\r\n","\n connection.":"\r\n 联系。\r\n"," event with the current URI value.\r\n            ":"具有当前URI值的事件。\r\n            \r\n","Create a new TransformerConfigurationException from a message and a Locator.":"从消息和定位器中创建一个新的transformerConfigurationException。\r\n","thru":"穿越\r\n","Returns the version.":"返回版本。\r\n","Checks whether a socket connection is secure.":"检查插座连接是否安全。\r\n","java.util.regex.Matcher.hasTransparentBounds()":"java.util.regex.matcher.hastransparentbounds（）\r\n","\r\n            Gets the column number of the script file on which the error occurred.\r\n            ":"\r\n            获取发生错误的脚本文件的列号。\r\n            \r\n","javax.net.ssl.SSLEngineResult":"javax.net.ssl.sslengineresult\r\n","java.util.prefs.PreferencesFactory":"java.util.prefs.preferencesFactory\r\n","Obtains the parameter with the given index.":"用给定索引获得参数。\r\n","resourceBundleName":"ResourceBundlename\r\n"," with a capacity of\n            ":" 能力\r\n            \r\n","org.w3c.dom.DOMException.INVALID_ACCESS_ERR":"org.w3c.dom.domexception.invalid_access_err\r\n","A handler for determining if an HttpRequest should be retried after a \n recoverable exception during execution.":"用于确定是否应在\r\n 执行过程中可恢复的例外。\r\n","Obtains the reason phrase for a status code.":"获取状态代码的原因。\r\n","Aborts the call to ":"中止呼叫\r\n","STORED":"存储\r\n","java.util.concurrent.CompletionStage.thenAcceptAsync(java.util.function.Consumer, java.util.concurrent.Executor)":"java.util.concurrent.completionstage.thenacceptasync（java.util.function.consumer，java.util.concurrent.executor）\r\n","Get the value of a logging property.":"获取伐木属性的价值。\r\n"," parameter\n is null.\n\n":" 范围\r\n 一片空白。\r\n\r\n\r\n","Obtains the next header from this iteration.":"从此迭代中获取下一个标题。\r\n","Constructs a parameter set for RC2 from the given effective key size\n            (in bits).":"从给定有效的密钥大小为RC2构建参数集\r\n            （在碎片中）。\r\n","if the input is null, or if ":"如果输入为null或\r\n","Returns the next token.":"返回下一个令牌。\r\n","Does not consume anything.":"不消耗任何东西。\r\n","javax.crypto.ExemptionMechanism.getName()":"javax.crypto.Exemptionmechanism.getName（）\r\n","org.w3c.dom.Text.splitText(int)":"org.w3c.dom.text.splittext（int）\r\n","javax.net.ssl.SSLException.SSLException(java.lang.Throwable)":"javax.net.ssl.sslexception.sslexception（java.lang.throwable）\r\n","if the socket cannot be connected\n          within the time limit defined in the ":"如果插座无法连接\r\n          在定义的时间限制之内\r\n","A CipherInputStream is composed of an InputStream and a Cipher so\n            that read() methods return data that are read in from the\n            underlying InputStream but have been additionally processed by the\n            Cipher.":"Cipherinputstream由输入式和密码组成\r\n            该读取（）方法返回从\r\n            基础输入式，但已由\r\n            密码。\r\n","Resolves a URI reference against a base URI.":"针对基本URI解决URI参考。\r\n","Sets the name of the designated column's table's schema, if any, to\n            the given <code>String</code>.":"将指定列的表格的名称（如果有）设置为\r\n            给定的<code>字符串</code>。\r\n","org.xml.sax.ErrorHandler.fatalError(org.xml.sax.SAXParseException)":"org.xml.sax.erronhandler.fatalerror（org.xml.sax.saxparseexception）\r\n","javax.crypto.spec.DHParameterSpec":"javax.crypto.spec.dhparameterspec\r\n","Constructs a new <code>XPathException</code> with the specified <code>cause</code>.":"用指定的<code>原因</code>构造新的<code> xpathexception </code>。\r\n","When the underlying XMLReader does\n            not recognize the property name.":"当基础XMLReader确实\r\n            无法识别属性名称。\r\n","java.util.prefs.InvalidPreferencesFormatException.InvalidPreferencesFormatException(java.lang.String, java.lang.Throwable)":"java.util.prefs.invalidpreferencesformatexception.invalidpreferencesformatexception（java.lang.string，java.lang.throwable）\r\n",", which enables cookie policy capabilities.\r\n            ":"，可以实现cookie策略功能。\r\n            \r\n","Return the parent for this Logger. -or- Set the parent for this Logger.":"返回此记录器的父。 - 或 - 设置此记录器的父。\r\n","Sets the name of the designated column to the given <code>String</code>.":"将指定列的名称设置为给定的<code> String </code>。\r\n","Sets the mode of this cipher.":"设置此密码的模式。\r\n","Closes the physical connection that this <code>PooledConnection</code>\n            object represents.":"关闭此<code> poolconnection </code>的物理连接\r\n            对象表示。\r\n","javax.xml.parsers.SAXParser.parse(java.io.File, org.xml.sax.HandlerBase)":"javax.xml.parsers.saxparser.parse（java.io.file，org.xml.sax.handlerbase）\r\n","Filter an end Namespace prefix mapping event.":"过滤端命名空间前缀映射事件。\r\n"," object. The DOM user must explicitly clone\n   ":" 目的。 DOM用户必须明确克隆\r\n   \r\n","Value cannot be null or empty.":"值不能为空或空。\r\n","java.util.stream.Collectors.groupingBy(java.util.function.Function)":"java.util.stream.collectors.groupingby（java.util.function.function.function）\r\n","java.util.regex.Matcher.group(java.lang.String)":"java.util.regex.matcher.group（java.lang.string）\r\n","java.util.stream.StreamSupport":"java.util.stream.streamsupport\r\n","javax.xml.datatype.Duration.negate()":"javax.xml.datatype.duration.negate（）（）\r\n","org.xml.sax.helpers.ParserAdapter.setContentHandler(org.xml.sax.ContentHandler)":"org.xml.sax.helpers.parseradapter.setcontenthandler（org.xml.sax.contenthandler）\r\n","\r\n            that takes a user specified assertion.\r\n            ":"\r\n            这需要用户指定的断言。\r\n            \r\n"," that supports remote authentication\r\n            which can be used by ":" 支持远程身份验证\r\n            可以使用\r\n","org.xml.sax.helpers.XMLFilterImpl.setDTDHandler(org.xml.sax.DTDHandler)":"org.xml.sax.helpers.xmlfilterimpl.setdtdhandler（org.xml.sax.dtdhandler）\r\n","Creates a new InvalidCredentialsException with the specified detail message and cause.":"使用指定的详细信息和原因创建一个新的无效性示威感。\r\n","java.util.prefs.Preferences.putBoolean(java.lang.String, boolean)":"java.util.prefs.preferences.putboolean（java.lang.string，boolean）\r\n","Attempts to acquire in shared mode, aborting if interrupted, and\n            failing if the given timeout elapses.":"尝试以共享模式获取，如果中断流产，并且\r\n            如果给定的超时出现失败。\r\n","Extracts a range of data from the node.":"从节点提取一系列数据。\r\n","Queries if the write lock is held by the current thread.":"查询如果写锁定由当前线程保留。\r\n","CHAR":"char\r\n","\r\n            Instance members are not thread-safe.\r\n            ":"\r\n            实例成员不是线程安全。\r\n            \r\n"," methods are supported.":" 支持方法。\r\n","mgfName":"mgfname\r\n","This exception is thrown when a particular padding mechanism is\n            expected for the input data but the data is not padded properly.":"当特定的填充机制是\r\n            预期输入数据，但数据未正确填充。\r\n"," if undefined or if\n the ":" 如果不确定或\r\n 这\r\n","java.util.zip.ZipEntry.setTime(long)":"java.util.zip.zipentry.settime（long）\r\n","org.xml.sax.helpers.XMLFilterImpl.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)":"org.xml.sax.helpers.xmlfilterimpl.startelement（java.lang.string，java.lang.string，java.lang.string，org.xml.sax.tributes）\r\n","java.util.concurrent.atomic.AtomicLongFieldUpdater.accumulateAndGet(java.lang.Object, long, java.util.function.LongBinaryOperator)":"java.util.concurrent.atomic.atomiclongfieldupdater.accumulateandget（java.lang.object，long，java.util.function.longbinaryoperator）\r\n","java.util.logging.Logger.config(java.lang.String)":"java.util.logging.logger.config（java.lang.string）\r\n","Constant for decryption operation mode.":"固定操作模式的常数。\r\n","Returns a composed operator that first applies the ":"返回首先应用的合作操作员\r\n","Create a protocol version designator.":"创建协议版本指定器。\r\n","\r\n            Determines whether the specified fields in this ":"\r\n            确定是否在此中指定字段\r\n",", with default scheme.":"，使用默认方案。\r\n","\r\n            Set the \"scope\" parameter value.\r\n            ":"\r\n            设置“范围”参数值。\r\n            \r\n","java.util.concurrent.atomic.LongAdder.LongAdder()":"java.util.concurrent.atomic.longadder.longadder（）\r\n","java.util.prefs.Preferences.sync()":"java.util.prefs.preferences.sync（）\r\n","org.apache.http.params.HttpConnectionParams.setConnectionTimeout(org.apache.http.params.HttpParams, int)":"org.apache.http.params.httpconnectionparams.setConnectionTimeOut（org.apache.http.params.httpparams，int）\r\n","Creates a new phaser with the given number of registered\n            unarrived parties, no parent, and initial phase number 0.":"使用给定数量的注册数量创建一个新的移相器\r\n            未接待的各方，没有父母，初始阶段号0。\r\n"," will not trigger the ":" 不会触发\r\n","Sets the concurrency of this <code>RowSet</code> object to the given\n            concurrency level.":"将此<code> Rowset的并发设置为给定\r\n            并发水平。\r\n","Compiles the given regular expression into a pattern with the given\n            flags.":"将给定的正则表达式编译为带有给定的模式\r\n            标志。\r\n","\r\n            Displays the specified content inside the specified layout and any further\r\n            nested layouts.\r\n            ":"\r\n            显示指定布局内的指定内容，并进一步显示\r\n            嵌套布局。\r\n            \r\n","javax.sql.RowSet.setConcurrency(int)":"javax.sql.Rowset.setConcurrency（int）\r\n","java.util.concurrent.ThreadPoolExecutor.getCompletedTaskCount()":"java.util.concurrent.threadpoolexecutor.getCompletedTaskCount（）\r\n","The URI this locator is pointing to, or ":"该定位器指向的URI或\r\n","<code>QName</code> constructor specifying the Namespace URI,\n            local part and prefix.":"<code> qname </code>构造函数指定名称空间URI，\r\n            本地部分和前缀。\r\n","uri.length() == 0":"uri.length（）== 0\r\n","Time unit representing sixty minutes":"代表六十分钟的时间单元\r\n"," if a condition is false.\r\n            ":" 如果条件是错误的。\r\n            \r\n","Extension-List":"扩展名单\r\n","NOT_SUPPORTED_ERR: May be raised if the implementation does not\n   support the feature ":"NOT_SUPPORTED_ERR：如果实施不进行，则可能会增加\r\n   支持该功能\r\n","javax.net.ssl.SSLServerSocketFactory.SSLServerSocketFactory()":"javax.net.ssl.sslserversocketFactory.sslserversocketFactory（）\r\n"," maintaining the same\n            completion properties as this stage.":" 保持相同\r\n            完成属性作为此阶段。\r\n","\r\n            Gets a value that determines whether binding will use ":"\r\n            获得一个确定绑定是否会使用的值\r\n","java.util.concurrent.atomic.AtomicInteger.getAndSet(int)":"java.util.concurrent.atomic.atomicinteger.getandset（int）\r\n","java.util.concurrent.SynchronousQueue.SynchronousQueue()":"java.util.concurrent.synchronousqueue.synchronousqueue（）\r\n","Closes the compressor and discards any unprocessed input.":"关闭压缩机并丢弃任何未经处理的输入。\r\n","java.util.prefs.Preferences.put(java.lang.String, java.lang.String)":"java.util.prefs.preferences.put（java.lang.string，java.lang.string）\r\n","Interface for parsing lines in the HEAD section of an HTTP message.":"HTTP消息的头部部分中解析行的接口。\r\n"," is less\n         than 1\n":" 少\r\n         超过1\r\n\r\n","If the given InputStream is null.":"如果给定的输入流为null。\r\n","\n using Galois/Counter Mode (GCM).":"\r\n 使用Galois/Counter模式（GCM）。\r\n","\r\n            to the current instance.\r\n            ":"\r\n            到当前实例。\r\n            \r\n"," can\n             be found.":" 能够\r\n             被发现。\r\n","javax.sql.RowSet.setNClob(int, java.io.Reader, long)":"javax.sql.rowset.setnclob（int，java.io.reader，long）\r\n","javax.xml.parsers.SAXParser.isXIncludeAware()":"javax.xml.parsers.saxparser.isxincludeaware（）\r\n","java.util.prefs.AbstractPreferences.exportNode(java.io.OutputStream)":"java.util.prefs.abstractpreferences.exportnode（java.io.outputstream）\r\n","Tells the parser that if no external subset has been declared\n            in the document text, none should be used.":"告诉解析器，如果没有声明外部子集\r\n            在文档文本中，不应使用不使用。\r\n"," attribute defining the title of the\n extension specification.":" 属性定义标题\r\n 扩展规范。\r\n","java.util.concurrent.atomic.AtomicInteger.getAndIncrement()":"java.util.concurrent.atomic.atomicinteger.getandincrement（）\r\n","javax.xml.xpath.XPathFunctionException.XPathFunctionException(java.lang.Throwable)":"javax.xml.xpath.xpathFunctionException.xpathFunctionException（java.lang.throwable）\r\n","java.util.concurrent.LinkedTransferQueue":"java.util.concurrent.linkedtransferqueue\r\n","java.util.concurrent.ThreadPoolExecutor.getMaximumPoolSize()":"java.util.concurrent.threadpoolexecutor.getmaximumpoolsize（）\r\n","Returns the zip file comment, or null if none.":"返回zip文件注释，如果没有返回null。\r\n","java.util.logging.Logger.logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String)":"java.util.logging.logger.logp（java.util.logging.level，java.lang.string，java.lang.string，java.lang.string）\r\n","Returns a prioritized array of application-layer protocol names that\n            can be negotiated over the SSL/TLS protocols.":"返回优先的应用程序层协议名称\r\n            可以在SSL/TLS协议上协商。\r\n","A <code>StatementEvent</code> is sent to all <code>StatementEventListener</code>s which were\n            registered with a <code>PooledConnection</code>.":"<code> statementEvent </code>发送到所有<code> statementEventListener </code> s\r\n            用<code> poolconnection </code>注册。\r\n","\r\n            Defines the policy for Cross-Origin requests based on the CORS specifications.\r\n            ":"\r\n            根据CORS规范定义交叉原始请求的策略。\r\n            \r\n","Removes the given event listener from the list of components that\n            will be notified when an event occurs on this\n            <code>PooledConnection</code> object.":"将给定的事件听众从组件列表中删除\r\n            当事件发生时，将通知\r\n            <code> poolconnection </code>对象。\r\n","org.xml.sax.helpers.AttributesImpl.getType(java.lang.String, java.lang.String)":"org.xml.sax.helpers.attributesimpl.getType（java.lang.string，java.lang.string）\r\n","java.util.concurrent.Semaphore.acquire(int)":"java.util.concurrent.semaphore.Acquire（int）\r\n","Parameter for an forced route.":"强制路线的参数。\r\n","\r\n            The default implementation of a handler provider,\r\n            which provides the ":"\r\n            处理程序提供商的默认实现，\r\n            提供的\r\n"," object and for which at least one value\n can be set by the application.":" 对象和至少一个值\r\n 可以通过应用程序设置。\r\n","org.xml.sax.helpers.ParserFactory.makeParser()":"org.xml.sax.helpers.parserfactory.makeparser（）\r\n","Immutable in-memory representation of grammar.":"语法的不变内存表示。\r\n","javax.security.cert.CertificateParsingException.CertificateParsingException()":"javax.security.cert.certificateParsingException.certificateParsingException（）\r\n","javax.crypto.Mac.getMacLength()":"javax.crypto.mac.getmaclength（）\r\n","Reset this Namespace support object for reuse.":"重置此名称空间支持对象以进行重复使用。\r\n","\r\n            true if the shift key was down when the event was fired. false otherwise.\r\n            ":"\r\n            如果射击事件被解雇时，则换档键会降低。否则为错误。\r\n            \r\n","Instantiates a new request line.":"实例化新的请求行。\r\n","DatatypeFactory":"DatatyPefactory\r\n","javax.crypto.ExemptionMechanism.getInstance(java.lang.String)":"javax.crypto.ExemptionMechanism.GetInstance（Java.lang.String）\r\n","org.json.JSONObject.has(java.lang.String)":"org.json.jsonobject.has（java.lang.string）\r\n","javax.xml.parsers.DocumentBuilder.parse(java.io.InputStream, java.lang.String)":"javax.xml.parsers.documentbuilder.parse（java.io.inputstream，java.lang.string）\r\n","Gets an singleton instance of the SSLProtocolSocketFactory.":"获取SSLProtocoColSocketFactory的单例实例。\r\n","org.w3c.dom.Element.getAttribute(java.lang.String)":"org.w3c.dom.element.getAttribute（java.lang.string）\r\n","A collection of utilities relating to InetAddresses.":"与InetAddresses有关的公用事业集合。\r\n"," with no policy name specified.\r\n            ":" 没有指定策略名称。\r\n            \r\n","Indicates whether there is another header in this iteration.":"指示此迭代中是否还有另一个标题。\r\n","org.json.JSONTokener.skipTo(char)":"org.json.jsontokener.skipto（char）\r\n","if the given key or value is ":"如果给定的键或值是\r\n","Returns the initialization vector (IV) in a new buffer.":"返回新缓冲区中的初始化向量（IV）。\r\n","Returns all the headers with a specified name of this message.":"用此消息的指定名称返回所有标题。\r\n","\r\n            Gets the associated ":"\r\n            获取关联\r\n","Constructs a BadPaddingException with the specified\n            detail message.":"用指定的\r\n            详细信息。\r\n","s it creates cannot support this feature.\n":"它创建的S不能支持此功能。\r\n\r\n","offset + (2 * (wordSize / 8))":"偏移 +（2 *（wordsize / 8））\r\n","Associates a string representing the specified byte array with the\n            specified key in this preference node.":"将代表指定字节数组的字符串与\r\n            在此偏好节点中指定键。\r\n","Adds the given header to the group.":"将给定的标题添加到组中。\r\n","An attribute specifying, as part of the text declaration, the version\n number of this entity, when it is an external parsed entity.":"作为文本声明的一部分，指定版本的属性\r\n 当该实体是外部解析实体时的数量。\r\n"," in encoded format.":" 以编码格式。\r\n","This method gets called when a child node is removed.":"删除子节点时，该方法被调用。\r\n","Unchecked exception thrown to indicate a syntax error in a\n            regular-expression pattern.":"未选中的例外，以指示在\r\n            常规表达模式。\r\n"," otherwise.\r\n            ":" 否则。\r\n            \r\n","DiscardPolicy":"丢弃\r\n","\r\n            A count of consecutive clicks that happened in a short amount of time, incremented by one.\r\n            ":"\r\n            在短时间内发生的连续点击计数，并增加了一个。\r\n            \r\n","\r\n            Initializes the ":"\r\n            初始化\r\n","If the specified object model is unavailable.":"如果指定的对象模型不可用。\r\n","Attempts to find the next subsequence of the input sequence that matches\n            the pattern.":"尝试找到与匹配的输入序列的下一个子序列\r\n            图案。\r\n","javax.crypto.KeyAgreement.init(java.security.Key, java.security.SecureRandom)":"javax.crypto.keyagreement.init（java.security.key，java.security.securerandom）\r\n","Returns the SAX parser that is encapsulated by the\n implementation of this class.":"返回由\r\n 实施此类。\r\n","Submits a Runnable task for execution and returns a Future\n            representing that task.":"提交可运行的任务以执行并返回未来\r\n            代表该任务。\r\n","Gets the default <code>HostnameVerifier</code> that is inherited\n            by new instances of this class. -or- Sets the default <code>HostnameVerifier</code> inherited by a\n            new instance of this class.":"获取继承的默认<code> hostNameVerifier </code>\r\n            根据本课程的新实例。 - 或 - 设置默认<code> hostNameVerifier </code>由\r\n            此类的新实例。\r\n","javax.xml.datatype.DatatypeConfigurationException.DatatypeConfigurationException(java.lang.Throwable)":"javax.xml.datatype.datatypeconfigurationexception.datatypeconfigurationexception（java.lang.thrang.throwableable）\r\n","Returns whether the local cipher suites preference should be honored. -or- Sets whether the local cipher suites preference should be honored.":"退货是否应尊重本地密码套房偏好。 - 或设置是否应尊重本地密码套件的偏好。\r\n","Locator2":"定位器2\r\n"," instance if the parameter is not \n present in the local one.":" 实例如果参数不是\r\n 存在于本地。\r\n","javax.xml.transform.sax.SAXResult.setSystemId(java.lang.String)":"javax.xml.transform.sax.saxresult.setsystemid（java.lang.string）\r\n","javax.xml.transform.stream.StreamResult.setOutputStream(java.io.OutputStream)":"javax.xml.transform.stream.streamresult.setOutputstream（java.io.outputstream）\r\n","\r\n            Gets or sets a value that determines the maximum duration state for a disconnected circuit is\r\n            retained on the server.\r\n            ":"\r\n            获取或设置一个确定断开电路的最大持续时间状态的值\r\n            保留在服务器上。\r\n            \r\n","org.xml.sax.helpers.AttributesImpl":"org.xml.sax.helpers.attributesimpl\r\n","\r\n            Used by generated code produced by the Components code generator. Not intended or supported\r\n            for use in application code.\r\n            ":"\r\n            由组件代码生成器生成的生成代码使用。不打算或支持\r\n            用于应用程序代码。\r\n            \r\n","java.util.prefs.InvalidPreferencesFormatException.InvalidPreferencesFormatException(java.lang.String)":"java.util.prefs.invalidpreferencesformatexception.invalidpreferencesformatexception（java.lang.string）\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.release(long)":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.Release（long）\r\n","Return the header string for a set of formatted records.":"返回一组格式记录的标题字符串。\r\n","Constructs an IllegalBlockSizeException with no detail message.":"构造一个违法的XECEPSCEPTION，没有详细信息。\r\n","javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer[], java.nio.ByteBuffer)":"javax.net.ssl.sslengine.wrap（java.nio.bytebuffer []，java.nio.bytebuffer）\r\n","\r\n            Sign out the specified authentication scheme.\r\n            ":"\r\n            签署指定的身份验证方案。\r\n            \r\n","java.util.concurrent.atomic.AtomicLongArray.set(int, long)":"java.util.concurrent.atomic.atomiclongarray.set（int，long）\r\n","Signals that an unrecoverable error has occurred.":"信号表明发生了不可恢复的错误。\r\n","java.util.logging.Logger.finest(java.lang.String)":"java.util.logging.logger.finest（java.lang.string）\r\n",", with default scheme and port.":"，带有默认方案和端口。\r\n","If the field parameter is null.\n":"如果字段参数为null。\r\n\r\n","\n is invoked.":"\r\n 被调用。\r\n","java.util.concurrent.CompletionStage.thenRunAsync(java.lang.Runnable)":"java.util.concurrent.completionstage.thenrunasync（java.lang.runnable）\r\n","javax.net.ssl.SSLSession.removeValue(java.lang.String)":"javax.net.ssl.sslsession.removevalue（java.lang.string）\r\n","javax.net.ssl.SSLContextSpi.engineCreateSSLEngine(java.lang.String, int)":"javax.net.ssl.sslcontextspi.enginecreatesslengine（java.lang.string，int）\r\n","Indicates that the peer's identity has not been verified.":"表示尚未验证对等身份。\r\n","\r\n            Gets the suffix value.\r\n            ":"\r\n            获取后缀值。\r\n            \r\n","if the combination of set fields\n    does not match one of the eight defined XML Schema builtin\n    date/time datatypes.":"如果固定字段的组合\r\n    不匹配八个定义的XML架构之一\r\n    日期/时间数据类型。\r\n","org.w3c.dom.ls.LSParser.ACTION_REPLACE":"org.w3c.dom.ls.lsparser.action_replace\r\n","Adapt a SAX2 skipped entity event.":"调整SAX2跳过实体活动。\r\n","Any SAX exception, possibly\n            wrapping another exception.\n":"任何SAX例外，可能\r\n            包装另一个例外。\r\n\r\n","java.util.concurrent.RejectedExecutionException.RejectedExecutionException(java.lang.Throwable)":"java.util.concurrent.RejectedExecutionException.RejectedExecutionException（java.lang.throwable）\r\n","Converts the given time duration in the given unit to this unit.":"将给定单元中的给定持续时间转换为本机。\r\n","\r\n            Gets the name of an attribute that will register an associated change event.\r\n            ":"\r\n            获取将注册关联更改事件的属性的名称。\r\n            \r\n","Processes the given array of bytes and finishes the MAC operation.":"处理给定的字节数组并完成MAC操作。\r\n","If the class cannot be\n            loaded, instantiated, and cast to XMLReader.":"如果班级不能\r\n            加载，实例化并铸造到XMLReader。\r\n","ValidatorHandler":"验证者Handler\r\n","if the name contains a slash character or is empty if ":"如果名称包含斜线字符或为空的\r\n","javax.sql.RowSet.setNClob(int, java.sql.NClob)":"javax.sql.Rowset.setnClob（int，java.sql.nclob）\r\n","Returns an array with the values corresponding to ":"返回一个数组，其值对应于\r\n","if the specified listener is not registered or ":"如果指定的听众未注册或\r\n","Tracks layering a protocol.":"跟踪分层协议。\r\n","java.util.logging.Formatter.Formatter()":"java.util.logging.formatter.formatter（）\r\n","#shutdownNow":"#shutdownnow\r\n","java.util.concurrent.RecursiveTask.compute()":"java.util.concurrent.recursivetask.compute（）\r\n","java.util.concurrent.RejectedExecutionException.RejectedExecutionException(java.lang.String)":"java.util.concurrent.RejectedExecutionException.RejectedExecutionException（java.lang.string）\r\n","\r\n            Maps the Blazor ":"\r\n            地图地图\r\n","Creates a new AtomicLongArray with the same length as, and\n            all elements copied from, the given array.":"创建一个与长度相同的新的原子段，并且\r\n            从给定的数组复制的所有元素。\r\n","\r\n            A value indicating whether we're using ":"\r\n            表示我们是否正在使用的值\r\n"," methods\n            and statements.":"方法\r\n            和陈述。\r\n","if there is a problem creating\n the default instance.":"如果存在问题\r\n 默认实例。\r\n","The Attributes class maps Manifest attribute names to associated string\n            values.":"属性类地图将属性名称表示为关联的字符串\r\n            值。\r\n",",\r\n            gets the ID of the reference capture. Otherwise, the value is undefined.\r\n            ":"，，，，\r\n            获取参考捕获的ID。否则，该值是未定义的。\r\n            \r\n","Returns the name of the parent for the specified logger.":"返回指定记录器的父姓名。\r\n"," publishes log records to ":" 将日志记录发布到\r\n","java.util.concurrent.PriorityBlockingQueue.PriorityBlockingQueue(int)":"java.util.concurrent.priorityblockingqueue.priorityblockingquequequequequequequequequequequequequequequequequequequequequequequequequequequequequequeque\r\n","javax.sql.RowSet.setFloat(java.lang.String, float)":"javax.sql.Rowset.setFloat（java.lang.string，float）\r\n","org.xml.sax.helpers.ParserAdapter.getProperty(java.lang.String)":"org.xml.sax.helpers.parseradapter.getProperty（java.lang.string）\r\n","Removes any contained headers.":"卸下任何包含的标题。\r\n","java.util.regex.Pattern.MULTILINE":"java.util.regex.pattern.multiline\r\n","Returns the current values of both the reference and the mark.":"返回参考和标记的当前值。\r\n","java.util.concurrent.atomic.AtomicLong.set(long)":"java.util.concurrent.atomic.atomiclong.set（long）\r\n","Creates an IvParameterSpec object using the first <code>len</code>\n            bytes in <code>iv</code>, beginning at <code>offset</code>\n            inclusive, as the IV.":"使用第一个<code> len </code>创建IVParametersPec对象\r\n            <code> iv </code>中的字节，从<code> offset </code>开始\r\n            包容性，作为iv。\r\n","Adds the specified element to this queue, waiting if necessary for\n            another thread to receive it.":"将指定元素添加到此队列，如有必要等待\r\n            接收它的另一个线程。\r\n","functionName":"函数名称\r\n","if this cipher instance is not initialized for wrapping.\n":"如果此密码实例未初始化用于包装。\r\n\r\n","javax.crypto.KeyAgreement":"Javax.Crypto.Keyagreement\r\n","java.util.concurrent.locks.ReentrantLock.getQueueLength()":"java.util.concurrent.locks.reentrantlock.getQueuelgentth（）\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(int)":"java.util.concurrent.locks.abstractqueedsynchronizer.AcquireDressible（int）\r\n","Processes <code>input.":"流程<Code>输入。\r\n","java.util.concurrent.locks.AbstractQueuedLongSynchronizer.owns(java.util.concurrent.locks.ConditionObject)":"java.util.concurrent.locks.abstractqueuedlongsynchronizer.OUNTS（java.util.concurrent.locks.conditionObject）\r\n","Parse the content of the given ":"解析给定的内容\r\n","\r\n            An event that provides notification when the ":"\r\n            一个提供通知的事件\r\n","javax.net.ssl.X509KeyManager.chooseClientAlias(java.lang.String[], java.security.Principal[], java.net.Socket)":"javax.net.ssl.x509KeyManager.ChooseClientalias（Java.lang.string []，Java.security.principal []，Java.net.socket）\r\n","-valued argument and\n            returns no result.":" - 值得论证和\r\n            返回没有结果。\r\n","java.util.function.Predicate.test(java.lang.Object)":"java.util.function.predicate.test（java.lang.object）\r\n","org.json.JSONTokener.next(char)":"org.json.jsontokener.next（char）\r\n","java.util.function.ObjIntConsumer":"java.util.function.objintconsumer\r\n","TrustManagerFactorySpi":"TrustmanagerFactorySpi\r\n","java.util.prefs.AbstractPreferences.getDouble(java.lang.String, double)":"java.util.prefs.abstractpreferences.getDouble（java.lang.string，double）\r\n","Optional<T>":"可选<t>\r\n","if the current thread was interrupted\n while waiting\n":"如果当前线程中断\r\n 等待\r\n\r\n","Returns whether this is a user preference node.":"返回这是否是用户偏好节点。\r\n"," is\n   malformed per the Namespaces in XML specification, if the\n   ":" 是\r\n   XML规范中的名称空间畸形，如果\r\n   \r\n","java.util.stream.Collectors.summingLong(java.util.function.ToLongFunction)":"java.util.stream.collectors.summinglong（java.util.function.tolongfunction）\r\n","Creates an exception without a detail message.":"创建一个例外，没有详细信息。\r\n","org.json.JSONObject.keys()":"org.json.jsonobject.keys（）\r\n"," to the\r\n            ":" 到\r\n            \r\n","s of the\n            Server Name Indication (SNI) parameter, or null if none has been set. -or- Sets the desired ":"s\r\n            服务器名称指示（SNI）参数，如果没有设置，则为null。 - 或设置所需的\r\n","Subclasses should rather override ":"子类应替代\r\n","javax.xml.validation.TypeInfoProvider.getAttributeTypeInfo(int)":"javax.xml.Validation.TypeinFoprovider.getAttributetypeinfo（int）\r\n","javax.net.ssl.SNIHostName.createSNIMatcher(java.lang.String)":"javax.net.ssl.snihostname.createsnimatcher（java.lang.string）\r\n","The HostnameVerifier that works the same way as Curl and Firefox.":"与Curl和Firefox相同的工作方式的hostNameVerifier。\r\n","#UNICODE_CASE":"#unicode_case\r\n","java.util.function.LongToIntFunction":"java.util.function.longtointfunction\r\n","if the given condition is\n         not associated with this lock":"如果给定的条件是\r\n         与此锁无关\r\n","javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING":"javax.xml.xmlconstants.feature_secure_processing\r\n","<code>QName</code> constructor specifying the Namespace URI\n            and local part.":"<code> qname </code>构造函数指定名称空间URI\r\n            和本地部分。\r\n","Returns true if this pool allows core threads to time out and\n            terminate if no tasks arrive within the keepAlive time, being\n            replaced if needed when new tasks arrive.":"如果此池允许核心线程超时，则返回true\r\n            如果没有任务在存储时间内，则终止\r\n            新任务到达时需要替换。\r\n","org.json.JSONObject.put(java.lang.String, boolean)":"org.json.jsonobject.put（java.lang.string，boolean）\r\n","div":"div\r\n","Look up an attribute's local name by index.":"通过索引查找属性的本地名称。\r\n","Sets the transparency of region bounds for this matcher.":"为该匹配器设置区域边界的透明度。\r\n","A constant that represents the minutes field.":"代表分钟字段的常数。\r\n","java.util.concurrent.atomic.AtomicLong.updateAndGet(java.util.function.LongUnaryOperator)":"java.util.concurrent.atomic.atomiclong.updateandget（java.util.function.longunaryoperator）\r\n","java.util.concurrent.TimeUnit.toSeconds(long)":"java.util.concurrent.timeunit.tseconds（long）\r\n","java.util.jar.Manifest.getAttributes(java.lang.String)":"java.util.jar.manifest.getAttributes（java.lang.string）\r\n","Query whether this ":"查询是否这样\r\n","java.util.logging.ErrorManager.CLOSE_FAILURE":"java.util.logging.errormanager.close_failure\r\n","Basic parser for lines in the head section of an HTTP message.":"HTTP消息的头部部分中的线基本解析器。\r\n"," is not usable to decrypt the encrypted\n             data.":" 不可用来解密加密\r\n             数据。\r\n","A wrapping entity that buffers it content if necessary.":"如有必要，可以缓冲其内容的包装实体。\r\n","JSONArray#toString":"JSONARRAY＃TOSTRING\r\n","When the\n            XMLReader recognizes the feature name but\n            cannot determine its value at this time.":"当。。。的时候\r\n            xmlreader识别功能名称，但是\r\n            目前无法确定其价值。\r\n","org.w3c.dom.Document.createCDATASection(java.lang.String)":"org.w3c.dom.document.CreateCdataSection（java.lang.string）\r\n","Sets the designated parameter in this <code>RowSet</code> object's command\n            to the given Java <code>long</code> value.":"在此<code> rowset </code>对象的命令中设置指定参数\r\n            对于给定的Java <code>长</code>值。\r\n"," (<b>SPI</b>)\n            for the <code>KeyGenerator</code> class.":" （<b> spi </b>）\r\n            对于<code> keygenerator </code>类。\r\n","Create a new TransformerException wrapping an existing exception.":"创建一个新的转换感受器包装现有异常。\r\n","SEVERITY_WARNING":"严重性_WARNING\r\n","Creates a new input stream with a default buffer size.":"创建具有默认缓冲区大小的新输入流。\r\n","org.apache.http.params.HttpConnectionParams.getSoTimeout(org.apache.http.params.HttpParams)":"org.apache.http.params.httpconnectionparams.getSotimeout（org.apache.http.params.httpparams）\r\n","This class implements a stream filter for writing compressed data in\n            the GZIP file format.":"该类实现流滤波器，用于编写压缩数据\r\n            GZIP文件格式。\r\n","<strong>WARNING:</strong> On Android, the Preference nodes\n            corresponding to the \"system\" and \"user\" preferences are stored in sections\n            of the file system that are inaccessible to apps.":"<strong>警告：</strong>在Android上，偏好节点\r\n            对应于“系统”和“用户”偏好的部分存储在各节中\r\n            应用程序无法访问的文件系统。\r\n","java.util.logging.MemoryHandler.close()":"java.util.logging.memoryhandler.close（）\r\n","javax.xml.transform.Transformer.Transformer()":"javax.xml.transform.transformer.transformer（）\r\n","org.json.JSONArray.remove(int)":"org.json.jsonarray.remove（int）\r\n","java.util.concurrent.locks.Condition.signalAll()":"java.util.concurrent.locks.condition.signalall（）\r\n","The token object returned by this method is expected to uniquely \n identify the current user if the context is user specific or to be \n ":"该方法返回的令牌对象有望唯一\r\n 确定当前用户如果上下文是用户特定的或将是\r\n \r\n","412 Precondition Failed":"412前提失败\r\n","Creates a DESKeySpec object using the first 8 bytes in\n            <code>key</code> as the key material for the DES key.":"使用前8个字节创建一个deskeyspec对象\r\n            <code>键</code>作为DES键的关键材料。\r\n","javax.crypto.KeyAgreement.init(java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)":"javax.crypto.keyagreement.init（java.security.key，java.security.security.spec.algorithmparameterspec，java.security.securerandom）\r\n","java.util.logging.Logger.info(java.lang.String)":"java.util.logging.logger.info（java.lang.string）\r\n","Returns the algorithm parameters used by the encryption algorithm.":"返回加密算法使用的算法参数。\r\n","Static helpers for dealing with ":"静态帮助者处理\r\n","javax.xml.parsers.SAXParser.setProperty(java.lang.String, java.lang.Object)":"javax.xml.parsers.saxparser.setproperty（java.lang.string，java.lang.object）\r\n","Log a message, specifying source class, method, and resource bundle name,\n            with associated Throwable information.":"记录消息，指定源类，方法和资源捆绑名称，\r\n            使用相关的可投掷信息。\r\n","javax.net.ssl.KeyManagerFactory.getDefaultAlgorithm()":"javax.net.ssl.keymanagerfactory.getDefaultAlgorithm（）\r\n","org.json.JSONStringer.value(java.lang.Object)":"org.json.jsonstringer.value（java.lang.Object）\r\n","\r\n            Count of ":"\r\n            计数\r\n","\r\n            Select a second level value from the json user data with the given top level key name and second level sub key name and add it as a Claim.\r\n            This no-ops if the keys are not found or the value is empty.\r\n            ":"\r\n            从JSON用户数据中选择带有给定顶级密钥名称和第二级子密钥名称的第二级值，然后将其添加为索赔。\r\n            如果找不到键或值为空的键，则无操作。\r\n            \r\n","Indicates end of input stream.":"指示输入流的结尾。\r\n","javax.crypto.MacSpi.engineReset()":"javax.crypto.macspi.enginereset（）\r\n","org.w3c.dom.ls.LSParserFilter.FILTER_INTERRUPT":"org.w3c.dom.ls.lsparserfilter.filter_interrupt\r\n","#engineGenExemptionBlob(byte[], int) engineGenExemptionBlob":"#EngineGenexemptionBlob（byte []，int）EnginerGeenexemptionBlob\r\n","if the identity of the peer has not been verified.\n":"如果尚未验证对等的身份。\r\n\r\n","javax.security.cert.CertificateExpiredException.CertificateExpiredException()":"javax.security.cert.certificate expiredException.certificateExpiredException（）\r\n","Log a message, specifying source class, method, and resource bundle name\n            with no arguments.":"记录消息，指定源类，方法和资源捆绑包名称\r\n            没有争论。\r\n","Resolves the correct port for this scheme.":"解决此方案的正确端口。\r\n","org.json.JSONArray.get(int)":"org.json.jsonarray.get（int）\r\n","Submits a value-returning task for execution and returns a Future\n            representing the pending results of the task.":"提交了一项重值任务以执行并返回未来\r\n            代表任务的待处理结果。\r\n","\r\n            Attempts to convert a value to a ":"\r\n            试图将值转换为\r\n",",\r\n            gets the child component instance identifier.\r\n            ":"，，，，\r\n            获取子组件实例标识符。\r\n            \r\n","Creates a new basic entity.":"创建一个新的基本实体。\r\n","Simple network logging ":"简单的网络记录\r\n","javax.xml.transform.OutputKeys.VERSION":"javax.xml.transform.outputkeys.version\r\n","javax.xml.datatype.DatatypeConstants.OCTOBER":"javax.xml.datatype.datatypeconstants.october\r\n"," to one\n            accepting elements of type ":" 一个\r\n            接受类型的元素\r\n","\r\n            Ensures everything previously written has been flushed to the underlying ":"\r\n            确保以前编写的所有内容都被冲向基础\r\n","java.util.zip.ZipEntry":"java.util.zip.zipentry\r\n","Returns the approximate number of threads that are actively\n            executing tasks.":"返回积极的大约线程数\r\n            执行任务。\r\n","Assign a value to the \"specified\" flag of a specific attribute.":"将值分配给特定属性的“指定”标志。\r\n","501 Not Implemented":"501未实施\r\n","SSLEngine":"Sslengine\r\n","javax.xml.parsers.FactoryConfigurationError.FactoryConfigurationError(java.lang.Exception)":"javax.xml.parsers.factoryconfigurationerror.factoryconfigurationerror（java.lang.exception）\r\n","\r\n            The kind of drag data item, string or file\r\n            ":"\r\n            拖动数据项，字符串或文件的种类\r\n            \r\n","Log a INFO message, which is only to be constructed if the logging\n            level is such that the message will actually be logged.":"记录一条信息消息，只有在日志记录时才能构造\r\n            级别的级别可以实际记录该消息。\r\n","ELEMENT_NODE":"element_node\r\n","javax.xml.xpath.XPathConstants.NODE":"javax.xml.xpath.xpathconstants.node\r\n","java.util.prefs.NodeChangeListener.childRemoved(java.util.prefs.NodeChangeEvent)":"java.util.prefs.nodechangelistener.ChildRemaved（java.util.prefs.nodechangeevent）\r\n","Authentication credentials required to respond to a authentication \n challenge are invalid":"响应身份验证所需的身份验证凭证\r\n 挑战无效\r\n","Returns the provider of this <code>KeyAgreement</code> object.":"返回此<code> keyagreement </code>对象的提供商。\r\n","org.json.JSONArray.optBoolean(int, boolean)":"org.json.jsonarray.optboolean（int，boolean）\r\n","\r\n            Checks policy based permissions for a user\r\n            ":"\r\n            检查用户基于策略的权限\r\n            \r\n","PreferenceChangeEvent":"peferenceChangeEvent\r\n","Returns the length in bytes that an output buffer would\n            need to be in order to hold the result of the next <code>update</code>\n            or <code>doFinal</code> operation, given the input length\n            <code>inputLen</code> (in bytes).":"返回输出缓冲区的字节长度\r\n            为了保留下一个<code>更新</code>的结果\r\n            或<code>多final</code>操作，给定输入长度\r\n            <code> inputlen </code>（在字节中）。\r\n","javax.crypto.Mac.doFinal(byte[], int)":"javax.crypto.mac.dofinal（byte []，int）\r\n","Return the embedded exception, if any.":"返回嵌入式异常（如果有）。\r\n","if the public key in the certificate can not be used to\n             initialize this cipher instance.\n":"如果证书中的公钥无法使用\r\n             初始化此密码实例。\r\n\r\n","Abstract credentials provider.":"抽象凭证提供商。\r\n","java.util.concurrent.locks.ReentrantLock.getWaitingThreads(java.util.concurrent.locks.Condition)":"java.util.concurrent.locks.reentrantlock.getWaitingThreads（java.util.concurrent.locks.condition）\r\n","java.util.regex.Pattern.UNICODE_CASE":"java.util.regex.pattern.unicode_case\r\n"," interface\n          value.\n        ":" 界面\r\n          价值。\r\n        \r\n","\r\n            Gets or sets the URI the middleware will access to obtain the user information.\r\n            This value is not used in the default implementation, it is for use in custom implementations of\r\n            IOAuthAuthenticationEvents.Authenticated or OAuthAuthenticationHandler.CreateTicketAsync.\r\n            ":"\r\n            获取或设置URI中间软件将访问以获取用户信息。\r\n            此值不在默认实现中使用，它用于自定义实现\r\n            ioauthauthenticationEvents.authenticated或oauthauthenticationhandler.createTeTicketAsync。\r\n            \r\n","Creates a new CRC32 object.":"创建一个新的CRC32对象。\r\n","javax.sql.StatementEvent.getSQLException()":"javax.sql.StatementEvent.getSqlexception（）\r\n","Receive notification of ignorable whitespace in element content.":"收到元素内容中可忽略的空格的通知。\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireShared(int)":"java.util.concurrent.locks.abstractqueuedsynchronizer.tryacquireshared（int）\r\n"," or the value's length is bigger than ":" 或值的长度大于\r\n","java.util.concurrent.ExecutorService":"java.util.concurrent.executorservice\r\n","Gets the first header with the given name.":"获取带有给定名称的第一个标题。\r\n","Helper to skip whitespace.":"助手跳过空格。\r\n","java.util.stream.Collector":"java.util.stream.collector\r\n","Reads the next JAR file entry and positions the stream at the\n            beginning of the entry data.":"读取下一个jar文件输入并将流定位在\r\n            输入数据的开始。\r\n","Returns the SSL session for this engine instance.":"返回此引擎实例的SSL会话。\r\n","java.util.concurrent.SynchronousQueue.take()":"java.util.concurrent.synchronousqueue.take（）\r\n","java.util.stream.Collectors.reducing(java.util.function.BinaryOperator)":"java.util.stream.collectors.ducing（java.util.function.binaryoperator）\r\n","org.json.JSONObject.optDouble(java.lang.String, double)":"org.json.jsonobject.optdouble（java.lang.string，double）\r\n","\r\n            Gets or sets the CSS class name applied to the NavLink when the\r\n            current route matches the NavLink href.\r\n            ":"\r\n            获取或设置应用于NAVLink的CSS类名时\r\n            当前路线与Navlink HREF匹配。\r\n            \r\n","java.util.concurrent.locks.StampedLock.isReadLocked()":"java.util.concurrent.locks.stampedlock.isreadlocked（）\r\n","java.util.concurrent.locks.Lock.lock()":"java.util.concurrent.locks.lock.lock（）\r\n","javax.xml.parsers.DocumentBuilder.parse(java.io.File)":"javax.xml.parsers.documentbuilder.parse（java.io.file）\r\n","javax.security.auth.Subject.getPublicCredentials(java.lang.Class)":"javax.security.auth.subject.getPublicCredentials（java.lang.class）\r\n","Returns the int value represented by the string associated with the\n            specified key in this preference node.":"返回由与之关联的字符串表示的int值\r\n            在此偏好节点中指定键。\r\n","DoubleConsumer":"Doubleconsumer\r\n","java.util.concurrent.ThreadPoolExecutor.purge()":"java.util.concurrent.threadpoolexecutor.purge（）\r\n"," is not available, cannot be\n     instantiated, or doesn't support ":" 不可用，不能\r\n     实例化或不支持\r\n","javax.xml.datatype.DatatypeConstants.JANUARY":"javax.xml.datatype.datatypeconstants.january\r\n","org.xml.sax.helpers.NamespaceSupport.reset()":"org.xml.sax.helpers.namespacesupport.reset（）\r\n","Log a message, specifying source class, method, and resource bundle,\n            with associated Throwable information.":"记录一条消息，指定源类，方法和资源捆绑包，\r\n            使用相关的可投掷信息。\r\n","#shutdown":"＃关闭\r\n","Returns true if no data remains in the input buffer.":"如果输入缓冲区中没有数据，则返回true。\r\n","java.util.concurrent.locks.Condition.await(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.locks.condition.await（long，java.util.concurrent.timeunit）\r\n","javax.xml.datatype.DatatypeFactory.DATATYPEFACTORY_PROPERTY":"javax.xml.datatype.datatypefactory.datatypefactory_property\r\n","org.xml.sax.helpers.XMLFilterImpl.setEntityResolver(org.xml.sax.EntityResolver)":"org.xml.sax.helpers.xmlfilterimpl.setentityresolver（org.xml.sax.entityResolver）\r\n","Get the character stream that was set with setReader. -or- Set the input to be a character reader.":"获取使用SetReader设置的字符流。 - 或 - 将输入设置为角色读取器。\r\n","The URI for the DOM object model, \"http://java.":"DOM对象模型的URI，“ http：// java。\r\n","org.w3c.dom.DOMConfiguration.getParameter(java.lang.String)":"org.w3c.dom.domconfiguration.getParameter（java.lang.string）\r\n","Returns a new CompletionStage with the same result or exception as\n            this stage, that executes the given action using this stage's\n            default asynchronous execution facility when this stage completes.":"返回一个新的完整舞台，其结果或异常\r\n            这个阶段，使用此阶段执行给定的动作\r\n            当此阶段完成时，默认异步执行设施。\r\n","Get the name of an attribute (by position).":"获取属性的名称（按位置）。\r\n"," with name/value mappings from the next\n            object in the tokener.":" 使用下一个名称/值映射\r\n            令牌中的对象。\r\n","Creates a new Adler32 object.":"创建一个新的Adler32对象。\r\n"," which represents the combination of the\r\n            specified ":" 代表组合\r\n            指定的\r\n","if cookie validation fails for this attribute\n":"如果cookie验证失败此属性\r\n\r\n","#convert(long, TimeUnit) MINUTES.convert(duration, this)":"#convert（long，timeunit）分钟。\r\n","Initializes this key agreement with the given key, set of\n            algorithm parameters, and source of randomness.":"用给定的密钥，一组初始化此密钥协议\r\n            算法参数和随机性来源。\r\n","<code>XPathExpressionException</code> represents an error in an XPath expression.":"<code> XPathExpressionException </code>表示XPath表达式中的错误。\r\n","A handler for tasks that cannot be executed by a ":"无法执行的任务的处理程序\r\n","java.util.concurrent.locks.ReentrantLock.tryLock()":"java.util.concurrent.locks.reentrantlock.trylock（）\r\n","java.util.logging.LogRecord.setSourceClassName(java.lang.String)":"java.util.logging.logrocord.setsourceclassname（java.lang.string）\r\n","org.xml.sax.Attributes.getIndex(java.lang.String)":"org.xml.sax.attributes.getIndex（java.lang.string）\r\n","If the property\n            value can't be assigned or retrieved.":"如果属性\r\n            值不能分配或检索。\r\n","javax.xml.transform.stream.StreamResult.getSystemId()":"javax.xml.transform.stream.streamresult.getsystemid（）\r\n","Implements timed condition wait.":"实施定时条件等待。\r\n","Constructor that takes a password.":"获取密码的构造函数。\r\n","Returns the checksum value.":"返回校验和值。\r\n","org.apache.http.params.CoreConnectionPNames.STALE_CONNECTION_CHECK":"org.apache.http.params.coreconnectionpnames.stale_connection_check\r\n","javax.sql.PooledConnection.addConnectionEventListener(javax.sql.ConnectionEventListener)":"javax.sql.pooledconnection.AddConnectionEventListener（Javax.sql.ConnectionEventListEner）\r\n","Decide whether a response comes with an entity.":"确定响应是否带有实体。\r\n"," if no such mapping exists.":" 如果没有这样的映射。\r\n"," if it exists and is an int or\n            can be coerced to an int.":" 如果存在并且是int或\r\n            可以强迫到INT。\r\n","The point of access to the statistics of an ":"访问统计数据的点\r\n","Returns the ADLER-32 value of the uncompressed data.":"返回未压缩数据的Adler-32值。\r\n","javax.xml.transform.sax.SAXTransformerFactory.SAXTransformerFactory()":"javax.xml.transform.sax.saxtransformerfactory.saxtransformerfactory（）\r\n","\r\n            Gets the type of drag-and-drop operation currently selected or sets the operation to a new type.\r\n            The value must be none, copy, link or move.\r\n            ":"\r\n            获取当前选择的拖放操作的类型，或将操作设置为新类型。\r\n            该值必须无，复制，链接或移动。\r\n            \r\n","Report an internal entity declaration.":"报告内部实体声明。\r\n"," or provider is ":" 或提供商是\r\n","\r\n            Authenticate for the specified authentication scheme.\r\n            ":"\r\n            为指定的身份验证方案进行身份验证。\r\n            \r\n","org.xml.sax.helpers.AttributeListImpl.getName(int)":"org.xml.sax.helpers.attributelistimpl.getName（int）\r\n","Defines the charset to be used for encoding HTTP protocol elements.":"定义用于编码HTTP协议元素的CHARSET。\r\n","\r\n            An optional container in which to store the identity across requests. When used, only a session identifier is sent\r\n            to the client. This can be used to mitigate potential problems with very large identities.\r\n            ":"\r\n            一个可选的容器，可以在该容器中存储跨请求的身份。使用时，仅发送会话标识符\r\n            给客户。这可以用来减轻具有很大身份的潜在问题。\r\n            \r\n","java.util.concurrent.Semaphore.reducePermits(int)":"java.util.concurrent.semaphore.Reducepermits（int）\r\n","javax.net.ssl.SSLParameters.setServerNames(java.util.List)":"javax.net.ssl.sslparameters.setservernames（java.util.list）\r\n","javax.net.ssl.SSLKeyException.SSLKeyException(java.lang.String)":"javax.net.ssl.sslkeyexception.sslkeyexception（java.lang.string）\r\n","org.w3c.dom.DOMConfiguration":"org.w3c.dom.domconfiguration\r\n","org.xml.sax.Attributes.getType(int)":"org.xml.sax.attributes.getType（int）\r\n","\r\n            An optional resource the policy should be checked with.\r\n            If a resource is not required for policy evaluation you may pass null as the value.\r\n            ":"\r\n            可选资源应检查策略。\r\n            如果政策评估不需要资源，则可以将null作为值传递。\r\n            \r\n"," if no threads are currently queued.":" 如果目前没有线程排队。\r\n","if thread interrupted while waiting\n":"如果线程在等待时中断\r\n\r\n","if a new token is found before a token separator.\n         RFC 2616, section 2.1 explicitly requires a comma between\n         tokens for ":"如果在令牌分离器之前找到新的令牌。\r\n         RFC 2616，第2.1节明确需要逗号\r\n         代币\r\n","\r\n            Provides a custom binary serializer for ":"\r\n            为自定义二进制序列化器\r\n","Returns the scheme name.":"返回方案名称。\r\n","If data is specified for a <code>Node</code> which does not support\n            data.":"如果为不支持的<code>节点</code>指定数据\r\n            数据。\r\n","SEVERE is a message level indicating a serious failure.":"严重是一个表示严重失败的消息级别。\r\n","\r\n            A primitive types writer for the MessagePack format.\r\n            ":"\r\n            MessagePack格式的原始类型作者。\r\n            \r\n"," is a\n   malformed qualified name, if the ":" 是一个\r\n   畸形的合格名称，如果\r\n","java.util.regex.Matcher.regionStart()":"java.util.regex.matcher.gregionstart（）\r\n","if the current thread does not\n         hold this lock\n":"如果当前线程不\r\n         握住这个锁\r\n\r\n","Returns a copy of the SSLParameters indicating the supported\n            settings for this SSL context.":"返回SSLPARAMETER的副本，指示所支持的\r\n            此SSL上下文的设置。\r\n","javax.crypto.CipherOutputStream.CipherOutputStream(java.io.OutputStream)":"javax.crypto.cipheroutputstream.cipheroutputstream（java.io.outputstream）\r\n","Creates a new token to be returned.":"创建一个新的令牌要返回。\r\n","if an exception occurs during parsing\n":"如果在解析期间发生例外\r\n\r\n","java.util.concurrent.TimeUnit.timedWait(java.lang.Object, long)":"java.util.concurrent.timeunit.timedwait（java.lang.Object，long）\r\n","\r\n            A builder that can be used to configure Server-Side Blazor.\r\n            ":"\r\n            可用于配置服务器端外部的构建器。\r\n            \r\n","The service type.":"服务类型。\r\n","Constructor that takes a private value <code>x</code>, a prime\n            modulus <code>p</code>, and a base generator <code>g</code>.":"采用私有值<code> x </code>的构造函数，一个prime\r\n            Modulus <code> P </code>和基本生成器<code> g </code>。\r\n","java.util.concurrent.LinkedBlockingQueue.size()":"java.util.concurrent.linkedblockingqueue.size（）\r\n","org.xml.sax.DocumentHandler.setDocumentLocator(org.xml.sax.Locator)":"org.xml.sax.documenthandler.setDocumentLocator（org.xml.sax.locator）\r\n","java.util.logging.Handler.publish(java.util.logging.LogRecord)":"java.util.logging.handler.publish（java.util.logging.logrocord）\r\n","An attribute specifying, as part of the , whether this document is standalone.":"是否是独立的属性，作为该文档的一部分。\r\n","202 Accepted":"202接受\r\n","On retrieval, the value of the attribute is returned as a string.":"在检索时，属性的值作为字符串返回。\r\n"," manifest attribute which may have the value\n ":" 可能具有值的清单属性\r\n \r\n","Returns true if the server should request client authentication.":"如果服务器应请求客户端身份验证，则返回true。\r\n","javax.xml.transform.dom.DOMResult.DOMResult()":"javax.xml.transform.dom.domresult.domresult（）\r\n","\r\n            Provides extension methods for ":"\r\n            提供扩展方法\r\n","#genExemptionBlob(byte[]) genExemptionBlob":"#genexemptionblob（byte []）genExemptionblob\r\n","If the underlying implementation\n   cannot reasonably process the request, e.g. W3C XML Schema allows for\n   arbitrarily large/small/precise values, the request may be beyond the\n   implementations capability.":"如果基础实施\r\n   无法合理处理请求，例如W3C XML模式允许\r\n   任意大/小/精确的值，请求可能超出\r\n   实施能力。\r\n","java.util.concurrent.atomic.DoubleAccumulator.intValue()":"java.util.concurrent.Atomic.DoubleAccumulator.intvalue（）\r\n","java.util.stream.Collectors.groupingBy(java.util.function.Function, java.util.function.Supplier, java.util.stream.Collector)":"java.util.stream.collectors.groupingby（java.util.function.function，java.util.function.supplier，java.util.stream.collector）\r\n","packer progress as a percentage.":"Packer的进度占百分比。\r\n","Set the system ID from a <code>File</code> reference.":"从<code>文件</code>参考设置系统ID。\r\n"," to be used by the parser.":" 解析器使用。\r\n"," collection.\r\n            ":" 收藏。\r\n            \r\n","Value for fifth month of year.":"每年的五个月的价值。\r\n","\r\n            A base class for ":"\r\n            一个小型班级\r\n","java.util.stream.Collectors.toConcurrentMap(java.util.function.Function, java.util.function.Function, java.util.function.BinaryOperator, java.util.function.Supplier)":"java.util.stream.collectors.toconcurrentmap（java.util.function.function.function，java.util.function.function.function，java.util.util.util.util.binarection.binaryoperator，java.util.util.util.util.supplier.supplier）\r\n","Returns true if the end of input was hit by the search engine in\n            the last match operation performed by this matcher.":"如果输入的结束被搜索引擎击中，则返回true\r\n            该匹配项执行的最后一个比赛操作。\r\n"," with  the given identifier.":" 带有给定的标识符。\r\n","java.util.concurrent.atomic.LongAccumulator.accumulate(long)":"java.util.concurrent.atomic.longaccumulator.Accumulate（长）\r\n","Allows applications to map references to external entities into input\n            sources, or tell the parser it should use conventional URI resolution.":"允许应用程序将引用到外部实体的引用到输入中\r\n            来源或告诉解析器，应使用常规的URI分辨率。\r\n","\r\n            The number of bytes transferred since the beginning of the operation.\r\n            This doesn't include headers and other overhead, but only the content itself.\r\n            ":"\r\n            自操作开始以来传输的字节数。\r\n            这不包括标题和其他开销，而仅包括内容本身。\r\n            \r\n","\r\n            Gets or sets the current value of the input, represented as a string.\r\n            ":"\r\n            获取或设置输入的当前值，表示为字符串。\r\n            \r\n","javax.crypto.EncryptedPrivateKeyInfo":"javax.crypto.CencryptedPrivateKeyinfo\r\n","Diffie-Hellman Key-Agreement\n            Standard":"Diffie-Hellman键合\r\n            标准\r\n","\r\n            which requires at least one role claim whose value must be any of the allowed roles.\r\n            ":"\r\n            它需要至少一个角色主张，其价值必须是任何允许的角色。\r\n            \r\n","org.xmlpull.v1.XmlPullParserFactory.XmlPullParserFactory()":"org.xmlpull.v1.xmlpullparserfactory.xmlpullparserfactory（）\r\n"," and configure it based on\n            ":" 并根据\r\n            \r\n","\r\n            Appends a frame representing an instruction to capture a reference to the parent element.\r\n            ":"\r\n            附加代表指令以捕获对父元素的引用的框架。\r\n            \r\n"," to the parameter with the given name":" 到给定名称的参数\r\n","any SAX exception, possibly\n            wrapping another exception\n":"任何SAX例外，可能\r\n            包装另一个例外\r\n\r\n","Thrown when a problem with configuration with the Transformer Factories\n            exists.":"当与Transformer工厂配置出现问题时抛出\r\n            存在。\r\n","\r\n            An event that is raised when a field value changes.\r\n            ":"\r\n            当场值更改时提出的事件。\r\n            \r\n","\r\n            Holds failure information from the authentication.\r\n            ":"\r\n            从身份验证中保留故障信息。\r\n            \r\n","org.json.JSONObject.remove(java.lang.String)":"org.json.jsonobject.remove（java.lang.string）\r\n"," scheme.\r\n            ":" 方案。\r\n            \r\n","Return the current content handler. -or- Set the content handler.":"返回当前内容处理程序。 - 或 - 设置内容处理程序。\r\n","Preferences#exportSubtree(OutputStream)":"首选项＃exportsubtree（outputStream）\r\n","Log a FINE message.":"记录一条好消息。\r\n","javax.net.ServerSocketFactory.ServerSocketFactory()":"javax.net.serversocketFactory.serversocketFactory（）\r\n","Creates a copy of these parameters.":"创建这些参数的副本。\r\n","SecretKeyFactorySpi":"SecretKeyFactorySpi\r\n","Creates a TrustManagerFactory object.":"创建一个TrustmanagerFactory对象。\r\n","\r\n            Gets or sets a value indicating whether the resource supports user credentials in the request.\r\n            ":"\r\n            获取或设置一个值，指示资源是否支持请求中的用户凭据。\r\n            \r\n","Create a new <code>FactoryConfigurationError</code> with a\n            given <code>Exception</code> base cause of the error.":"使用一个新的<code> factory configurationError </code>\r\n            给定<code>异常</code>错误的基本原因。\r\n","Atomically decrements by one the element at index ":"原子上减少一个元素在索引处\r\n"," or if this document\n   does not support the \"XML\" feature.":" 或该文档\r\n   不支持“ XML”功能。\r\n","org.xmlpull.v1.XmlSerializer.endTag(java.lang.String, java.lang.String)":"org.xmlpull.v1.xmlSerializer.Endtag（java.lang.string，java.lang.string）\r\n","INVALID_CHARACTER_ERR: Raised if the new qualified name is not an\n   XML name according to the XML version in use specified in the\n   ":"Invalid_character_err：如果新合格名称不是\r\n   XML名称根据在此处指定的XML版本\r\n   \r\n"," does not specify a  schema language.\n":" 不指定模式语言。\r\n\r\n","\r\n            Creates a new CustomJsonClaimAction.\r\n            ":"\r\n            创建一个新的CustomJsonClaimaction。\r\n            \r\n","\r\n            Called when a cookie is appended.\r\n            ":"\r\n            添加cookie时称呼。\r\n            \r\n"," maintains an object reference\n            along with an integer \"stamp\", that can be updated atomically.":" 维护对象参考\r\n            除了整数“邮票”，可以在原子上更新。\r\n","names":"名称\r\n","org.xmlpull.v1.XmlSerializer":"org.xmlpull.v1.xmlSerializer\r\n","java.util.logging.SocketHandler":"java.util.logging.sockethandler\r\n","Return the level's localization resource bundle name, or\n            null if no localization bundle is defined.":"返回级别的本地化资源捆绑名称，或\r\n            null如果未定义本地化捆绑包。\r\n","Collector":"集电极\r\n","org.json.JSONTokener.nextTo(java.lang.String)":"org.json.jsontokener.nextto（java.lang.string）\r\n","java.util.function.BiFunction.andThen(java.util.function.Function)":"java.util.function.bifunction.andthen（java.util.function.function.function）\r\n","This class acts as a factory for key managers based on a\n            source of key material.":"该课程是基于A的关键经理的工厂\r\n            关键材料的来源。\r\n","\r\n            Gets or sets the provider-assigned client id.\r\n            ":"\r\n            获取或设置提供者分配的客户ID。\r\n            \r\n","javax.net.ssl.SSLSessionBindingListener.valueUnbound(javax.net.ssl.SSLSessionBindingEvent)":"javax.net.ssl.sslsessessessessessionbindinglistener.valueunbound（javax.net.ssl.ssl.sslsessionbindingevent）\r\n","Checks whether a character is a whitespace character.":"检查字符是否是空格角色。\r\n","Retrieves the name to authenticate with.":"检索具有身份验证的名称。\r\n","\r\n            Method invoked after each time the component has been rendered. Note that the component does\r\n            not automatically re-render after the completion of any returned ":"\r\n            每次渲染组件后都会调用方法。请注意，组件确实\r\n            完成任何返回后，不会自动重新渲染\r\n","suites":"套房\r\n","An HTTP connection over the Internet Protocol (IP).":"Internet协议（IP）的HTTP连接。\r\n","Construct a StreamSource from a File.":"从文件中构造streamsource。\r\n"," doesn't exist or\n     cannot be coerced to a int.\n":" 不存在或\r\n     不能强迫INT。\r\n\r\n","Preferences#getByteArray(String,byte[])":"首选项＃getByTearray（字符串，字节[]）\r\n","org.w3c.dom.DOMImplementationSource.getDOMImplementation(java.lang.String)":"org.w3c.dom.domimplementationsour.getDomimplementation（java.lang.string）\r\n"," that produces the sum of a double-valued\n            function applied to the input elements.":" 产生双重价值的总和\r\n            应用于输入元素的功能。\r\n","java.util.jar.JarInputStream.getManifest()":"java.util.jar.jarinputstream.getManifest（）\r\n","\r\n            Registers a scheme for use by ":"\r\n            注册一个用于使用的方案\r\n","\r\n            Gets the name of the editable field.\r\n            ":"\r\n            获取可编辑字段的名称。\r\n            \r\n","newFormatter":"newformatter\r\n","\r\n            Used to ensure HandleAuthenticateAsync is only invoked once. The subsequent calls\r\n            will return the same authenticate result.\r\n            ":"\r\n            用于确保仅调用一次性含量。随后的电话\r\n            将返回相同的身份验证结果。\r\n            \r\n","Instantiates an X509Certificate object, and initializes it with\n            the specified byte array.":"实例化x509certificate对象，并用\r\n            指定的字节数组。\r\n","\r\n            Gets a value to indicate whether the parameter is cascading, meaning that it\r\n            was supplied by a ":"\r\n            获得一个值来指示参数是否级联，这意味着它\r\n            由\r\n","Assigns an ":"分配\r\n","Specifies the Content-Encoding header, as a string.":"将内容编码标头指定为字符串。\r\n","\r\n            Gets the backchannel used to communicate with the provider.\r\n            ":"\r\n            获取用于与提供商进行交流的后渠道。\r\n            \r\n","org.xmlpull.v1.XmlPullParser.getAttributePrefix(int)":"org.xmlpull.v1.xmlpullparser.getAttributeprefix（int）\r\n","java.util.concurrent.atomic.DoubleAccumulator.longValue()":"java.util.concurrent.Atomic.DoubleAccumulator.longvalue（）\r\n"," throws a ":" 扔a\r\n"," class as a base class to author components that control\r\n            the lifetime of a service provider scope. This is useful when using a transient or scoped service that\r\n            requires disposal such as a repository or database abstraction. Using ":" 将作为控制的作者组件作为基础类\r\n            服务提供商范围的寿命。当使用瞬态或范围的服务时，这很有用\r\n            需要处置，例如存储库或数据库抽象。使用\r\n","Finishes writing uncompressed data to the output stream without closing\n            the underlying stream.":"完成将未压缩数据写入输出流而无需关闭的数据\r\n            基础流。\r\n","\r\n            Adds a new policy and sets it as the default.\r\n            ":"\r\n            添加一个新策略并将其设置为默认设置。\r\n            \r\n","Writes a start tag with the given namespace and name.":"用给定的名称空间和名称写一个开始标签。\r\n","\n            with no detail message.":"\r\n            没有详细信息。\r\n","org.apache.http.conn.ssl.X509HostnameVerifier":"org.apache.http.conn.ssl.x509 HostNameVerifier\r\n","java.util.jar.Attributes.clear()":"java.util.jar.attributes.clear（）\r\n","if the input buffer and the output buffer are the same\n             object.":"如果输入缓冲区和输出缓冲区相同\r\n             目的。\r\n","javax.xml.xpath.XPathExpression.evaluate(java.lang.Object)":"javax.xml.xpath.xpathexpression.evaluate（java.lang.Object）\r\n","javax.crypto.spec.PBEKeySpec.getKeyLength()":"javax.crypto.spec.pbekeyspec.getKeyLength（）\r\n","javax.crypto.spec.IvParameterSpec":"javax.crypto.spec.ivparameterspec\r\n","\r\n            Specifies that the class or method that this attribute is applied to does not require authorization.\r\n            ":"\r\n            指定该属性应用于的类或方法不需要授权。\r\n            \r\n","Evaluates this predicate on the given arguments.":"在给定参数上评估此谓词。\r\n","Returns the total number of uncompressed bytes output so far.":"返回到目前为止未压缩字节的总数。\r\n","java.util.concurrent.locks.ReentrantReadWriteLock.getQueuedThreads()":"java.util.concurrent.locks.reentrantreadwritelock.getQueuedthreads（）\r\n","If there is an error setting\n            up the new input source.":"如果有错误设置\r\n            提高新输入源。\r\n","Returns the thread that currently owns this lock, or\n            ":"返回当前拥有此锁的线程，或\r\n            \r\n","Method invoked upon completion of execution of the given Runnable.":"在完成执行时调用的方法。\r\n","javax.crypto.IllegalBlockSizeException":"javax.crypto.Illegalblocksizeexception\r\n","javax.sql.RowSet.setNull(java.lang.String, int)":"javax.sql.Rowset.setNull（java.lang.string，int）\r\n","The node is a <code>DocumentType</code>.":"节点是<code> documentType </code>。\r\n","\r\n            Flag indicating whether the current authorization processing has succeeded.\r\n            ":"\r\n            指示当前授权处理是否成功的标志。\r\n            \r\n","Removes the attribute with the specified name (key) from this Map.":"使用此地图中的指定名称（键）删除属性。\r\n","Returns a string representation of the X.":"返回X的字符串表示。\r\n","javax.net.ssl.HttpsURLConnection.getLocalCertificates()":"javax.net.ssl.httpsurlconnection.getlocalcertificates（）\r\n","Inserts the specified element into this queue, waiting if necessary\n            up to the specified wait time for another thread to receive it.":"将指定元素插入此队列，如有必要\r\n            直到指定的等待时间让另一个线程接收它。\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.tryReleaseShared(int)":"java.util.concurrent.locks.abstractqueedsynchronizer.treleareaseshared（int）\r\n","java.util.zip.Deflater.reset()":"java.util.zip.deflater.reset（）\r\n","\r\n            A callback that will be invoked when the form is submitted and the\r\n            ":"\r\n            提交表格时将调用的回调和\r\n            \r\n","javax.xml.xpath.XPathExpression":"javax.xml.xpath.xpath Expression\r\n","javax.net.ssl.SSLEngineResult.bytesProduced()":"javax.net.ssl.sslengineresult.bytesproduced（）\r\n","Gets the policy on whether cancelled tasks should be immediately\n            removed from the work queue at time of cancellation. -or- Sets the policy on whether cancelled tasks should be immediately\n            removed from the work queue at time of cancellation.":"获取有关是否应立即取消任务的政策\r\n            取消时从工作队列中删除。 - 或 - 制定有关是否应立即应立即取消任务的策略\r\n            取消时从工作队列中删除。\r\n","Constructs a new <code>XPathFunctionException</code> with the specified <code>cause</code>.":"用指定的<code>原因</code>构造新的<code> XPathFunctionException </code>。\r\n"," without details.":" 没有细节。\r\n","The www authenticate response header.":"www身份验证响应标头。\r\n","Signals that a ":"信号a\r\n","org.xml.sax.EntityResolver.resolveEntity(java.lang.String, java.lang.String)":"org.xml.sax.entityResolver.resolveentity（java.lang.string，java.lang.string）\r\n","javax.crypto.CipherInputStream":"javax.crypto.cipherinputstream\r\n","Append the result of the parse operation as children of the context\n            node.":"将解析操作的结果添加为儿童\r\n            节点。\r\n","cipherSpi":"cipherspi\r\n","Find a function in the set of available functions.":"在一组可用功能中找到一个函数。\r\n","java.util.concurrent.atomic.AtomicLongArray.AtomicLongArray(long[])":"java.util.concurrent.atomic.atomiclongarray.atomiclongarray（long []）\r\n"," for tracking progress of\n            one or more asynchronous tasks.":" 用于跟踪进度\r\n            一个或多个异步任务。\r\n","javax.net.ssl.SSLSessionBindingListener.valueBound(javax.net.ssl.SSLSessionBindingEvent)":"javax.net.ssl.sslsessessessessionbindinglistener.valuebound（javax.net.ssl.ssl.sslsessionbindingevent）\r\n","javax.xml.transform.dom.DOMResult.DOMResult(org.w3c.dom.Node, org.w3c.dom.Node)":"javax.xml.transform.dom.domresult.domresult（org.w3c.dom.node，org.w3c.dom.node）\r\n","java.util.concurrent.atomic.AtomicLongArray.getAndAdd(int, long)":"java.util.concurrent.atomic.atomiclongarray.getandadd（int，long）\r\n","Opens a new <code>ZipFile</code> to read from the specified\n            <code>File</code> object in the specified mode.":"打开一个新的<code> zipfile </code>以从指定的\r\n            <code>文件</code>在指定模式下对象。\r\n","java.util.concurrent.atomic.DoubleAccumulator":"java.util.concurrent.atomic.doubleacumulator\r\n","javax.crypto.SealedObject":"javax.crypto.sealedobject\r\n","if the length of the key data starting at offset is less than\n             8, or the key is null.\n":"如果从偏移量开始的关键数据的长度小于\r\n             8，键是空的。\r\n\r\n","Adapt a SAX1 Parser as a SAX2 XMLReader.":"将SAX1解析器适应为SAX2 XMLReader。\r\n","Returns the value associated with the specified key in this preference\n            node.":"返回此优先级中与指定密钥关联的值\r\n            节点。\r\n","org.xml.sax.helpers.NamespaceSupport.getDeclaredPrefixes()":"org.xml.sax.helpers.namespacesupport.getDeclaredPrefixes（）\r\n","javax.xml.namespace.QName.QName(java.lang.String, java.lang.String)":"javax.xml.namespace.qname.qname（java.lang.string，java.lang.string）\r\n","javax.xml.xpath.XPath.evaluate(java.lang.String, org.xml.sax.InputSource)":"javax.xml.xpath.xpath.evaluate（java.lang.string，org.xml.sax.inputsource）\r\n","org.xml.sax.helpers.AttributeListImpl.getLength()":"org.xml.sax.helpers.attributelistimpl.getLength（）\r\n","Signals failure to retry the request due to non-repeatable request \n entity.":"信号由于不可重复的请求而无法重试该请求\r\n 实体。\r\n","java.util.regex.Matcher.group()":"java.util.regex.matcher.group（）\r\n"," is not provided, the system will automatically generate a\r\n            unique name that begins with ":" 没有提供，系统将自动生成一个\r\n            以唯一的名称开头\r\n","if the current thread was interrupted\n while waiting":"如果当前线程中断\r\n 等待\r\n"," if it is synchronous.":" 如果是同步的。\r\n","\r\n            Exception thrown when an ":"\r\n            当一个例外\r\n"," into a single policy.\r\n            ":" 进入单个政策。\r\n            \r\n","Obtains the number of parameters.":"获得参数数。\r\n","Returns a literal replacement <code>String</code> for the specified\n            <code>String</code>.":"返回字面替换<code>字符串</code>为指定的\r\n            <code>字符串</code>。\r\n"," parameter is null.\n":" 参数为null。\r\n\r\n","\r\n            Write the length of the next array to be written in the most compact form of\r\n            ":"\r\n            写下要以最紧凑的形式编写的下一个数组的长度\r\n            \r\n","\r\n            Thrown when the request does not include a valid antiforgery token.\r\n            ":"\r\n            当请求不包含有效的抗托管令牌时，就会投掷。\r\n            \r\n","Returns the float value represented by the string associated with the\n            specified key in this preference node.":"返回由与之关联的字符串表示的浮点值\r\n            在此偏好节点中指定键。\r\n","Returns the Checksum for this input stream.":"返回此输入流的校验和。\r\n","Performs this operation on the given argument.":"在给定参数上执行此操作。\r\n","java.util.concurrent.PriorityBlockingQueue.remainingCapacity()":"java.util.concurrent.priorityblockingqueue.remainingcapacity（）\r\n","java.util.logging.Level.FINER":"java.util.logging.level.finer\r\n","Thrown to indicate a problem with the JSON API.":"投掷以表示JSON API的问题。\r\n","PropertyChange":"PropertyChange\r\n","org.xml.sax.helpers.DefaultHandler.resolveEntity(java.lang.String, java.lang.String)":"org.xml.sax.helpers.defaulthandler.resolveentity（java.lang.string，java.lang.string）\r\n"," selected for authentication if available":" 选择用于身份验证（如果可用）\r\n","\r\n            Contains authorization information used by ":"\r\n            包含由\r\n","If two durations cannot be meaningfully subtracted. For\n      example, subtracting one day from one month causes\n      this exception.":"如果两个持续时间不能有意义地减去。为了\r\n      例如，从一个月的原因中减去一天\r\n      这个例外。\r\n","Returns the last access time of the entry.":"返回条目的最后访问时间。\r\n","\r\n            Override this method to handle SignIn.\r\n            ":"\r\n            覆盖此方法来处理标志。\r\n            \r\n","\r\n            Returns the value of a token.\r\n            ":"\r\n            返回令牌的值。\r\n            \r\n","javax.net.ssl.SSLParameters.setApplicationProtocols(java.lang.String[])":"javax.net.ssl.sslparameters.setapplicationprotocols（java.lang.string []）\r\n","-valued results.":" - 值结果。\r\n","Returns the iteration count or 0 if not specified.":"返回迭代计数或0（如果未指定）。\r\n","ReadWriteLock":"ReadWritelock\r\n","org.w3c.dom.Node.isSupported(java.lang.String, java.lang.String)":"org.w3c.dom.node.issupported（java.lang.string，java.lang.string）\r\n","The application may raise an exception.":"该申请可能会引起例外。\r\n","javax.sql.RowSet.clearParameters()":"javax.sql.Rowset.clearParameters（）\r\n","101 Switching Protocols":"101切换协议\r\n","java.util.zip.Deflater.deflate(byte[], int, int, int)":"java.util.zip.deflater.deflate（byte []，int，int，int）\r\n","javax.xml.validation.TypeInfoProvider.isSpecified(int)":"javax.xml.validation.typeinfoprovider.isspecified（int）\r\n","This class implements an output stream filter for compressing data in\n            the \"deflate\" compression format.":"该类实现输出流滤波器以压缩数据\r\n            “放气”压缩格式。\r\n","javax.net.ssl.SSLParameters.getWantClientAuth()":"javax.net.ssl.sslparameters.getwantclientauth（）\r\n","org.xml.sax.HandlerBase.fatalError(org.xml.sax.SAXParseException)":"org.xml.sax.handlerbase.fatalerror（org.xml.sax.saxparseexception）\r\n","children":"孩子们\r\n","java.util.jar.Attributes.entrySet()":"java.util.jar.attributes.entryset（）\r\n","\r\n            Creates a new ":"\r\n            创建一个新\r\n","Performs this operation on the given arguments.":"在给定参数上执行此操作。\r\n","java.util.logging.Handler":"java.util.logging.handler\r\n","java.util.zip.ZipEntry.getCrc()":"java.util.zip.zipentry.getcrc（）\r\n","#CASE_INSENSITIVE":"＃不区分大小写\r\n","Wakes up one waiting thread.":"唤醒一个等待线程。\r\n","Replace all the children of the context node with the result of the\n            parse operation.":"替换上下文节点的所有孩子\r\n            解析操作。\r\n"," or an\n             empty string.\n":" 或一个\r\n             空字符串。\r\n\r\n","a String representation of ":"字符串表示\r\n","org.json.JSONArray.put(java.lang.Object)":"org.json.jsonarray.put（java.lang.object）\r\n","javax.sql.RowSet.setNCharacterStream(int, java.io.Reader)":"javax.sql.rowset.setncharacterstream（int，java.io.reader）\r\n","org.json.JSONArray.put(int, java.lang.Object)":"org.json.jsonarray.put（int，java.lang.object）\r\n","HTTP HEAD method.":"HTTP头方法。\r\n","\r\n            Combines the ":"\r\n            结合\r\n","org.xml.sax.helpers.LocatorImpl.setColumnNumber(int)":"org.xml.sax.helpers.locatorimpl.setcolumnnumber（int）\r\n","Sets the specified logger to the specified new level.":"将指定的记录器设置为指定的新级别。\r\n","Returns the <code>SQLException</code> the driver is about to throw":"返回<code> sqlexception </code>驱动程序即将投掷\r\n","The default constructor is protected on purpose.":"默认构造函数是故意保护的。\r\n","java.util.jar.JarException":"java.util.jar.jarexception\r\n","javax.net.ssl.SSLProtocolException.SSLProtocolException(java.lang.String)":"javax.net.ssl.sslprotocolexception.sslprotocolexception（java.lang.string）\r\n"," to the request being executed and generates \n corresponding cookierequest headers.":" 要执行并生成的请求\r\n 相应的cookirequest标题。\r\n","\n            operation, given the input length <code>inputLen</code> (in bytes).":"\r\n            操作，给定输入长度<code> inputlen </code>（在字节中）。\r\n","getByteArray":"GetByTearray\r\n"," handler to the specified ":" 指定的处理程序\r\n","A function that accepts two partial results and merges them.":"接受两个部分结果并将其合并的函数。\r\n","Closes all expired connections in the pool.":"关闭池中所有过期的连接。\r\n","Generic message writer interface.":"通用消息作者界面。\r\n","java.util.concurrent.Semaphore.getQueuedThreads()":"java.util.concurrent.semaphore.getqueuedthreads（）\r\n"," which is used by the handler.\r\n            ":" 处理程序使用。\r\n            \r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(int, int)":"java.util.concurrent.locks.abstractqueuedsynchronizer.compareandsetstate（int，int）\r\n","javax.crypto.KeyGenerator.getInstance(java.lang.String, java.lang.String)":"javax.crypto.keygenerator.getInstance（java.lang.string，java.lang.string）\r\n","Acts as an holder for a transformation result,\n            which may be XML, plain Text, HTML, or some other form of markup.":"充当转换结果的持有者，\r\n            可能是XML，纯文本，HTML或其他形式的标记。\r\n","javax.net.ssl.SSLEngine.getApplicationProtocol()":"javax.net.ssl.sslengine.getApplicationprotocol（）\r\n","Construct new CertPathTrustManagerParameters from the specified\n            parameters.":"从指定的\r\n            参数。\r\n","javax.xml.transform.URIResolver.resolve(java.lang.String, java.lang.String)":"javax.xml.transform.uriresolver.resolve（java.lang.string，java.lang.string）\r\n","javax.crypto.CipherSpi.engineUpdateAAD(java.nio.ByteBuffer)":"javax.crypto.cipherspi.engineupdateaad（java.nio.bytebuffer）\r\n","This class is the base interface for providing\n            algorithm-specific information to a KeyManagerFactory or\n            TrustManagerFactory.":"此类是提供的基本接口\r\n            算法特定信息到keymanagerFactory或\r\n            TrustmanagerFactory。\r\n","\r\n            Gets the result of the last call to ":"\r\n            获取最后一次通话的结果\r\n","Create a new SAX parser using the `org.":"使用`org创建新的SAX解析器。\r\n","if creating the socket fails.\n":"如果创建插座失败。\r\n\r\n","This class specifies the parameters used with the\n            <a href=\"http://www.":"此类指定与\r\n            <a href =“ http：//www。\r\n","javax.xml.datatype.DatatypeConstants.SEPTEMBER":"javax.xml.datatype.datatypeconstants.sept\r\n","javax.xml.validation.Validator.getFeature(java.lang.String)":"javax.xml.Validation.Validator.getFeature（java.lang.string）\r\n","\r\n            Implements ":"\r\n            工具\r\n","Makes available the permit for the given thread, if it\n            was not already available.":"如果它为给定线程提供许可证\r\n            尚未可用。\r\n","\r\n            A new ":"\r\n            一个新\r\n","java.util.function.LongConsumer.andThen(java.util.function.LongConsumer)":"java.util.function.longconsumer.andthen（java.util.function.longconsumer）\r\n"," string holding the characters up\n            to but not including the first of:\n            <ul>\n              <li>any character in ":" 字符串握住角色\r\n            到但不包括：\r\n            <ul>\r\n              <li>\r\n","millisecond":"毫秒\r\n","Sets the compression strategy to the specified value.":"将压缩策略设置为指定值。\r\n","\r\n            Gets or sets the maximum number of render batches that a circuit will buffer until an acknowledgement for the batch is\r\n            received.\r\n            ":"\r\n            获取或设置最大数量的渲染批次，直到对批次确认为止，该电路将缓冲\r\n            已收到。\r\n            \r\n","java.util.zip.DeflaterOutputStream.DeflaterOutputStream(java.io.OutputStream, java.util.zip.Deflater, int, boolean)":"java.util.zip.deflateroutputstream.deflateroutputstream（java.io.outputstream，java.util.zip.deflater，int，int，boolean）\r\n","Patterns are compiled regular expressions.":"图案是编译正则表达式的。\r\n","org.xml.sax.helpers.AttributesImpl.AttributesImpl(org.xml.sax.Attributes)":"org.xml.sax.helpers.attributesimpl.attributesimpl（org.xml.sax.attributes）\r\n","Lock#lock":"锁＃锁\r\n"," containing all ":" 包含全部\r\n"," with the given initial\n            parameters and default rejected execution handler.":" 给定的初始\r\n            参数和默认的拒绝执行处理程序。\r\n","Adds the node <code>newChild</code> to the end of the list of children\n            of this node.":"将节点<code> newchild </code>添加到儿童列表的结尾\r\n            这个节点。\r\n","Look up an attribute's value by index.":"通过索引查找属性的值。\r\n","Attempts to acquire in shared mode.":"尝试以共享模式获取。\r\n","Returns the identifier assigned to this Session.":"返回分配给本会话的标识符。\r\n","Sets the array of ciphersuites.":"设置密码阵列。\r\n"," for the given executor.":" 对于给定的执行人。\r\n","javax.net.ssl.HttpsURLConnection.getServerCertificates()":"javax.net.ssl.httpsurlconnection.getServerCertificates（）\r\n","Value for fourth month of year.":"价值四个月的价值。\r\n","Parses the specified source as a schema and returns it as a schema.":"将指定源解析为模式，并将其返回为模式。\r\n","Returns the type of the specified attribute\n            If parser is non-validating it MUST return CDATA.":"返回指定属性的类型\r\n            如果解析器不验证，则必须返回CDATA。\r\n",". This is an internal implementation\r\n            detail of ":"。这是一个内部实现\r\n            细节\r\n","java.util.concurrent.atomic.DoubleAdder.doubleValue()":"java.util.concurrent.atomic.doubleadder.doublevalue（）\r\n"," implementing a \"group by\" operation on\n            input elements of type ":" 通过\r\n            类型的输入元素\r\n","java.util.prefs.PreferenceChangeEvent.getNode()":"java.util.prefs.preferencechangeevent.getnode（）\r\n","javax.xml.parsers.DocumentBuilderFactory.setValidating(boolean)":"javax.xml.parsers.documentbuilderfactory.setvalidating（boolean）\r\n","DOMSTRING_SIZE_ERR: Raised if the specified range of text does\n   not fit into a ":"DOMSTRING_SIZE_ERR：如果指定的文本范围为\r\n   不适合\r\n","If an attempt was made to load a document, or an XML Fragment, using\n            <code>LSParser</code> and the processing has been stopped.":"如果尝试加载文档或XML片段，请使用\r\n            <code> LSPARSER </code>，并且该处理已停止。\r\n","Abstract base class for parameter collections.":"参数收集的抽象基类。\r\n","Return an enumeration of all prefixes whose declarations are\n            active in the current context.":"返回所有声明的前缀的列举\r\n            在当前上下文中活动。\r\n","java.util.jar.JarEntry":"java.util.jar.jarentry\r\n","javax.net.ssl.SNIHostName.SNIHostName(byte[])":"javax.net.ssl.snihostname.snihostname（byte []）\r\n","javax.xml.transform.OutputKeys.CDATA_SECTION_ELEMENTS":"javax.xml.transform.outputkeys.cdata_section_elements\r\n"," that performs, in sequence, this\n            operation followed by the ":" 按顺序执行\r\n            操作，然后是\r\n","java.util.stream.Collectors.summingDouble(java.util.function.ToDoubleFunction)":"java.util.stream.collectors.summingdouble（java.util.function.todoublefunction）\r\n","java.util.zip.ZipFile.ZipFile(java.lang.String, java.nio.charset.Charset)":"java.util.zip.zipfile.zipfile（java.lang.string，java.nio.charset.charset）\r\n","javax.net.ssl.KeyManagerFactorySpi.engineInit(java.security.KeyStore, char[])":"javax.net.ssl.keymanagerfactoryspi.engineinit（java.security.keystore，char []）\r\n","java.util.concurrent.locks.AbstractQueuedSynchronizer.release(int)":"java.util.concurrent.locks.abstractqueuedsynchronizer.Release（int）\r\n","When associating an object to a key on a node using\n            <code>Node.":"当将对象与节点上的键关联时\r\n            <code>节点。\r\n","if result is invalid for some reason.\n":"如果结果由于某种原因无效。\r\n\r\n","\n and the ":"\r\n 和\r\n","java.util.concurrent.ThreadPoolExecutor.ThreadPoolExecutor(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)":"java.util.concurrent.ThreadPoolExecutor.ThreadPoolExecutor(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)\r\n","java.util.concurrent.locks.LockSupport.getBlocker(java.lang.Thread)":"java.util.concurrent.locks.locksupport.getBlocker（java.lang.thread）\r\n","org.json.JSONArray.optDouble(int)":"org.json.jsonarray.optdouble（int）\r\n","If no implementation of the schema language is available.":"如果没有实现模式语言的实现。\r\n","Signals a failure in authentication process":"信号在身份验证过程中发生故障\r\n","java.util.prefs.Preferences.systemRoot()":"java.util.prefs.preferences.systemroot（）\r\n","\r\n            Gets the current position of the reader within ":"\r\n            获取读者的当前位置\r\n","org.w3c.dom.ls.LSParserFilter.FILTER_SKIP":"org.w3c.dom.ls.lsparserfilter.filter_skip\r\n","Manifest":"显现\r\n","\r\n            Returns a ":"\r\n            返回a\r\n","org.apache.http.params.HttpConnectionParams.isStaleCheckingEnabled(org.apache.http.params.HttpParams)":"org.apache.http.params.httpconnectionparams.isstalecheckingenabled（org.apache.http.params.httpparams）\r\n","\r\n            The AccessDeniedPath property is used by the handler for the redirection target when handling ForbidAsync.\r\n            ":"\r\n            处理程序在处理ForbidAsync时，处理程序用于重定向目标。\r\n            \r\n","javax.crypto.EncryptedPrivateKeyInfo.EncryptedPrivateKeyInfo(java.lang.String, byte[])":"javax.crypto.CencryptedPrivateKeyinfo.CencryptedPrivateKeyinfo（java.lang.string，byte []）\r\n","java.util.jar.JarException.JarException(java.lang.String)":"java.util.jar.jarexception.jarexception（java.lang.string）\r\n","java.util.concurrent.atomic.AtomicLongArray.getAndUpdate(int, java.util.function.LongUnaryOperator)":"java.util.concurrent.atomic.atomiclongarray.getandupdate（int，java.util.function.longunaryoperator）\r\n","Compression flush mode used to flush out all pending output and\n            reset the deflater.":"压缩冲洗模式用于冲洗所有待处理的输出和\r\n            重置放气。\r\n"," if it exists and is a boolean or\n            can be coerced to a boolean, or throws otherwise.":" 如果存在并且是布尔人或\r\n            可以将其胁迫到布尔值，也可以抛弃。\r\n"}